luaM_growaux_:
.L0:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[block]
	store.64*   %arg3 -> 0[size]
	store.64    %arg4 -> 0[size_elems]
	store.32    %arg5 -> 0[limit]
	store.64*   %arg6 -> 0[errormsg]
	load.64*    %r1 <- 0[size]
	load.32     %r2 <- 0[%r1]
	load.32     %r3 <- 0[limit]
	divs.32     %r4 <- %r3, $2
	setge.32    %r5 <- %r2, %r4
	cbr         %r5, .L1, .L2

.L1:
	load.64*    %r6 <- 0[size]
	load.32     %r7 <- 0[%r6]
	load.32     %r8 <- 0[limit]
	setge.32    %r9 <- %r7, %r8
	cbr         %r9, .L3, .L4

.L3:
	load.64*    %r10 <- 0[L]
	load.64*    %r11 <- 0[errormsg]
	push.64*    %r10
	push.64*    %r11
	call        luaG_runerror
	br          .L4

.L4:
	load.32     %r12 <- 0[limit]
	store.32    %r12 -> 0[newsize]
	br          .L5

.L2:
	load.64*    %r13 <- 0[size]
	load.32     %r14 <- 0[%r13]
	muls.32     %r15 <- %r14, $2
	store.32    %r15 -> 0[newsize]
	load.32     %r16 <- 0[newsize]
	setlt.32    %r17 <- %r16, $4
	cbr         %r17, .L6, .L7

.L6:
	store.32    $4 -> 0[newsize]
	br          .L7

.L7:
	br          .L5

.L5:
	load.32     %r18 <- 0[newsize]
	add.32      %r19 <- %r18, $1
	scast.64    %r20 <- (32) %r19
	load.64     %r21 <- 0[size_elems]
	divu.64     %r22 <- $-3, %r21
	setbe.32    %r23 <- %r20, %r22
	cbr         %r23, .L8, .L9

.L8:
	load.64*    %r24 <- 0[L]
	load.64*    %r25 <- 0[block]
	load.64*    %r26 <- 0[size]
	load.32     %r27 <- 0[%r26]
	scast.64    %r28 <- (32) %r27
	load.64     %r29 <- 0[size_elems]
	mulu.64     %r30 <- %r28, %r29
	load.32     %r31 <- 0[newsize]
	scast.64    %r32 <- (32) %r31
	load.64     %r33 <- 0[size_elems]
	mulu.64     %r34 <- %r32, %r33
	push.64*    %r24
	push.64*    %r25
	push.64     %r30
	push.64     %r34
	call.64*    %r35 <- luaM_realloc_
	phisrc.64*  %phi1 <- %r35
	br          .L10

.L9:
	load.64*    %r36 <- 0[L]
	push.64*    %r36
	call.64*    %r37 <- luaM_toobig
	cast.64*    %r38 <- (64) %r37
	phisrc.64*  %phi2 <- %r38
	br          .L10

.L10:
	phi.64*     %r39 <- %phi1, %phi2
	store.64*   %r39 -> 0[newblock]
	load.32     %r40 <- 0[newsize]
	load.64*    %r41 <- 0[size]
	store.32    %r40 -> 0[%r41]
	load.64*    %r42 <- 0[newblock]
	phisrc.64*  %phi3(return) <- %r42
	br          .L11

.L11:
	phi.64*     %r43 <- %phi3(return)
	ret.64*     %r42


luaM_toobig:
.L12:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r44 <- 0[L]
	symaddr.64* %r45 <- <anon symbol:0x1bf9008>
	push.64*    %r44
	push.64*    %r45
	call        luaG_runerror
	phisrc.64*  %phi4(return) <- $0
	br          .L13

.L13:
	phi.64*     %r46 <- %phi4(return)
	ret.64*     $0


luaM_realloc_:
.L14:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[block]
	store.64    %arg3 -> 0[osize]
	store.64    %arg4 -> 0[nsize]
	load.64*    %r47 <- 0[L]
	load.64*    %r48 <- 32[%r47]
	store.64*   %r48 -> 0[g]
	load.64*    %r49 <- 0[g]
	load.64*    %r50 <- 24[%r49]
	load.64*    %r51 <- 0[block]
	load.64     %r52 <- 0[osize]
	load.64     %r53 <- 0[nsize]
	push.64*    %r50
	push.64*    %r51
	push.64     %r52
	push.64     %r53
	load.64*    %r54 <- 0[g]
	load.64*    %r55 <- 16[%r54]
	call.64*    %r56 <- %r55
	store.64*   %r56 -> 0[block]
	load.64*    %r57 <- 0[block]
	seteq.32    %r58 <- %r57, $0
	setne.1     %r59 <- %r58, $0
	load.64     %r60 <- 0[nsize]
	seta.32     %r61 <- %r60, $0
	setne.1     %r62 <- %r61, $0
	and-bool.1  %r63 <- %r59, %r62
	cast.32     %r64 <- (1) %r63
	cbr         %r64, .L15, .L16

.L15:
	load.64*    %r65 <- 0[L]
	push.64*    %r65
	push.32     $4
	call        luaD_throw
	br          .L16

.L16:
	load.64*    %r66 <- 0[g]
	load.64     %r67 <- 120[%r66]
	load.64     %r68 <- 0[osize]
	sub.64      %r69 <- %r67, %r68
	load.64     %r70 <- 0[nsize]
	add.64      %r71 <- %r69, %r70
	load.64*    %r72 <- 0[g]
	store.64    %r71 -> 120[%r72]
	load.64*    %r73 <- 0[block]
	phisrc.64*  %phi5(return) <- %r73
	br          .L17

.L17:
	phi.64*     %r74 <- %phi5(return)
	ret.64*     %r73


luaO_int2fb:
.L18:
	<entry-point>
	store.32    %arg1 -> 0[x]
	store.32    $0 -> 0[e]
	br          .L22

.L22:
	load.32     %r75 <- 0[x]
	setae.32    %r76 <- %r75, $16
	cbr         %r76, .L19, .L21

.L19:
	load.32     %r77 <- 0[x]
	add.32      %r78 <- %r77, $1
	lsr.32      %r79 <- %r78, $1
	store.32    %r79 -> 0[x]
	load.32     %r80 <- 0[e]
	add.32      %r81 <- %r80, $1
	store.32    %r81 -> 0[e]
	br          .L20

.L20:
	br          .L22

.L21:
	load.32     %r82 <- 0[x]
	setb.32     %r83 <- %r82, $8
	cbr         %r83, .L23, .L24

.L23:
	load.32     %r84 <- 0[x]
	cast.32     %r85 <- (32) %r84
	phisrc.32   %phi6(return) <- %r85
	br          .L25

.L24:
	load.32     %r87 <- 0[e]
	add.32      %r88 <- %r87, $1
	shl.32      %r89 <- %r88, $3
	load.32     %r90 <- 0[x]
	cast.32     %r91 <- (32) %r90
	sub.32      %r92 <- %r91, $8
	or.32       %r93 <- %r89, %r92
	phisrc.32   %phi7(return) <- %r93
	br          .L25

.L25:
	phi.32      %r86 <- %phi6(return), %phi7(return)
	ret.32      %r86


luaO_fb2int:
.L27:
	<entry-point>
	store.32    %arg1 -> 0[x]
	load.32     %r94 <- 0[x]
	asr.32      %r95 <- %r94, $3
	and.32      %r96 <- %r95, $31
	store.32    %r96 -> 0[e]
	load.32     %r97 <- 0[e]
	seteq.32    %r98 <- %r97, $0
	cbr         %r98, .L28, .L29

.L28:
	load.32     %r99 <- 0[x]
	phisrc.32   %phi8(return) <- %r99
	br          .L30

.L29:
	load.32     %r101 <- 0[x]
	and.32      %r102 <- %r101, $7
	add.32      %r103 <- %r102, $8
	load.32     %r104 <- 0[e]
	sub.32      %r105 <- %r104, $1
	shl.32      %r106 <- %r103, %r105
	phisrc.32   %phi9(return) <- %r106
	br          .L30

.L30:
	phi.32      %r100 <- %phi8(return), %phi9(return)
	ret.32      %r100


luaO_log2:
.L32:
	<entry-point>
	store.32    %arg1 -> 0[x]
	store.32    $0xffffffff -> 0[l]
	br          .L36

.L36:
	load.32     %r107 <- 0[x]
	setae.32    %r108 <- %r107, $256
	cbr         %r108, .L33, .L35

.L33:
	load.32     %r109 <- 0[l]
	scast.32    %r110 <- (32) %r109
	add.32      %r111 <- %r110, $8
	scast.32    %r112 <- (32) %r111
	store.32    %r112 -> 0[l]
	load.32     %r113 <- 0[x]
	cast.32     %r114 <- (32) %r113
	lsr.32      %r115 <- %r114, $8
	cast.32     %r116 <- (32) %r115
	store.32    %r116 -> 0[x]
	br          .L34

.L34:
	br          .L36

.L35:
	load.32     %r117 <- 0[l]
	symaddr.64* %r118 <- log_2
	load.32     %r119 <- 0[x]
	cast.64     %r120 <- (32) %r119
	add.64*     %r121 <- %r118, %r120
	load.8      %r122 <- 0[%r121]
	cast.32     %r123 <- (8) %r122
	add.32      %r124 <- %r117, %r123
	phisrc.32   %phi10(return) <- %r124
	br          .L37

.L37:
	phi.32      %r125 <- %phi10(return)
	ret.32      %r124


luaO_rawequalObj:
.L38:
	<entry-point>
	store.64*   %arg1 -> 0[t1]
	store.64*   %arg2 -> 0[t2]
	load.64*    %r126 <- 0[t1]
	load.32     %r127 <- 8[%r126]
	scast.32    %r128 <- (32) %r127
	load.64*    %r129 <- 0[t2]
	load.32     %r130 <- 8[%r129]
	scast.32    %r131 <- (32) %r130
	setne.32    %r132 <- %r128, %r131
	cbr         %r132, .L39, .L40

.L39:
	phisrc.32   %phi11(return) <- $0
	br          .L41

.L40:
	load.64*    %r134 <- 0[t1]
	load.32     %r135 <- 8[%r134]
	switch.32   %r135, 0 -> .L44, 1 -> .L46, 2 -> .L47, 3 -> .L45, default -> .L48

.L44:
	phisrc.32   %phi12(return) <- $1
	br          .L41

.L45:
	load.64*    %r136 <- 0[t1]
	load.f64    %r137 <- 0[%r136]
	fpcast.f64  %r138 <- (64) %r137
	load.64*    %r139 <- 0[t2]
	load.f64    %r140 <- 0[%r139]
	fpcast.f64  %r141 <- (64) %r140
	seteq.32    %r142 <- %r138, %r141
	phisrc.32   %phi13(return) <- %r142
	br          .L41

.L46:
	load.64*    %r143 <- 0[t1]
	load.32     %r144 <- 0[%r143]
	scast.32    %r145 <- (32) %r144
	load.64*    %r146 <- 0[t2]
	load.32     %r147 <- 0[%r146]
	scast.32    %r148 <- (32) %r147
	seteq.32    %r149 <- %r145, %r148
	phisrc.32   %phi14(return) <- %r149
	br          .L41

.L47:
	load.64*    %r150 <- 0[t1]
	load.64*    %r151 <- 0[%r150]
	load.64*    %r152 <- 0[t2]
	load.64*    %r153 <- 0[%r152]
	seteq.32    %r154 <- %r151, %r153
	phisrc.32   %phi15(return) <- %r154
	br          .L41

.L48:
	load.64*    %r155 <- 0[t1]
	load.64*    %r156 <- 0[%r155]
	load.64*    %r157 <- 0[t2]
	load.64*    %r158 <- 0[%r157]
	seteq.32    %r159 <- %r156, %r158
	phisrc.32   %phi16(return) <- %r159
	br          .L41

.L41:
	phi.32      %r133 <- %phi11(return), %phi12(return), %phi13(return), %phi14(return), %phi15(return), %phi16(return)
	ret.32      %r133


luaO_str2d:
.L49:
	<entry-point>
	store.64*   %arg1 -> 0[s]
	store.64*   %arg2 -> 0[result]
	load.64*    %r160 <- 0[s]
	symaddr.64* %r161 <- endptr
	push.64*    %r160
	push.64*    %r161
	call.f64    %r162 <- strtod
	load.64*    %r163 <- 0[result]
	store.f64   %r162 -> 0[%r163]
	load.64*    %r164 <- 0[endptr]
	load.64*    %r165 <- 0[s]
	seteq.32    %r166 <- %r164, %r165
	cbr         %r166, .L50, .L51

.L50:
	phisrc.32   %phi17(return) <- $0
	br          .L52

.L51:
	load.64*    %r168 <- 0[endptr]
	load.8      %r169 <- 0[%r168]
	scast.32    %r170 <- (8) %r169
	seteq.32    %r171 <- %r170, $120
	cbr         %r171, .L53, .L55

.L55:
	load.64*    %r172 <- 0[endptr]
	load.8      %r173 <- 0[%r172]
	scast.32    %r174 <- (8) %r173
	seteq.32    %r175 <- %r174, $88
	cbr         %r175, .L53, .L54

.L53:
	load.64*    %r176 <- 0[s]
	symaddr.64* %r177 <- endptr
	push.64*    %r176
	push.64*    %r177
	push.32     $16
	call.64     %r178 <- strtoul
	fpcast.f64  %r179 <- (64) %r178
	load.64*    %r180 <- 0[result]
	store.f64   %r179 -> 0[%r180]
	br          .L54

.L54:
	load.64*    %r181 <- 0[endptr]
	load.8      %r182 <- 0[%r181]
	scast.32    %r183 <- (8) %r182
	seteq.32    %r184 <- %r183, $0
	cbr         %r184, .L56, .L57

.L56:
	phisrc.32   %phi18(return) <- $1
	br          .L52

.L57:
	br          .L61

.L61:
	call.64*    %r185 <- __ctype_b_loc
	load.64*    %r186 <- 0[%r185]
	load.64*    %r187 <- 0[endptr]
	load.8      %r188 <- 0[%r187]
	scast.8     %r189 <- (8) %r188
	cast.32     %r190 <- (8) %r189
	scast.64    %r191 <- (32) %r190
	muls.64     %r192 <- %r191, $2
	add.64*     %r193 <- %r186, %r192
	load.16     %r194 <- 0[%r193]
	cast.32     %r195 <- (16) %r194
	and.32      %r196 <- %r195, $0x2000
	cbr         %r196, .L58, .L60

.L58:
	load.64*    %r197 <- 0[endptr]
	add.64*     %r198 <- %r197, $1
	store.64*   %r198 -> 0[endptr]
	br          .L59

.L59:
	br          .L61

.L60:
	load.64*    %r199 <- 0[endptr]
	load.8      %r200 <- 0[%r199]
	scast.32    %r201 <- (8) %r200
	setne.32    %r202 <- %r201, $0
	cbr         %r202, .L62, .L63

.L62:
	phisrc.32   %phi19(return) <- $0
	br          .L52

.L63:
	phisrc.32   %phi20(return) <- $1
	br          .L52

.L52:
	phi.32      %r167 <- %phi17(return), %phi18(return), %phi19(return), %phi20(return)
	ret.32      %r167


pushstr:
.L64:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	load.64*    %r203 <- 0[L]
	load.64*    %r204 <- 16[%r203]
	store.64*   %r204 -> 0[i_o]
	load.64*    %r205 <- 0[L]
	load.64*    %r206 <- 0[str]
	load.64*    %r207 <- 0[str]
	push.64*    %r207
	call.64     %r208 <- strlen
	push.64*    %r205
	push.64*    %r206
	push.64     %r208
	call.64*    %r209 <- luaS_newlstr
	ptrcast.64* %r210 <- (64) %r209
	load.64*    %r211 <- 0[i_o]
	store.64*   %r210 -> 0[%r211]
	load.64*    %r212 <- 0[i_o]
	store.32    $4 -> 8[%r212]
	load.64*    %r213 <- 0[L]
	load.64*    %r214 <- 56[%r213]
	ptrcast.64* %r215 <- (64) %r214
	load.64*    %r216 <- 0[L]
	load.64*    %r217 <- 16[%r216]
	ptrcast.64* %r218 <- (64) %r217
	sub.64      %r219 <- %r215, %r218
	setle.32    %r220 <- %r219, $16
	cbr         %r220, .L65, .L66

.L65:
	load.64*    %r221 <- 0[L]
	push.64*    %r221
	push.32     $1
	call        luaD_growstack
	br          .L67

.L66:
	br          .L67

.L67:
	load.64*    %r222 <- 0[L]
	load.64*    %r223 <- 16[%r222]
	add.64*     %r224 <- %r223, $16
	store.64*   %r224 -> 16[%r222]
	br          .L68

.L68:
	ret


luaO_chunkid:
.L69:
	<entry-point>
	store.64*   %arg1 -> 0[out]
	store.64*   %arg2 -> 0[source]
	store.64    %arg3 -> 0[bufflen]
	load.64*    %r225 <- 0[source]
	load.8      %r226 <- 0[%r225]
	scast.32    %r227 <- (8) %r226
	seteq.32    %r228 <- %r227, $61
	cbr         %r228, .L70, .L71

.L70:
	load.64*    %r229 <- 0[out]
	load.64*    %r230 <- 0[source]
	add.64*     %r231 <- %r230, $1
	load.64     %r232 <- 0[bufflen]
	push.64*    %r229
	push.64*    %r231
	push.64     %r232
	call.64*    %r233 <- strncpy
	load.64*    %r234 <- 0[out]
	load.64     %r235 <- 0[bufflen]
	sub.64      %r236 <- %r235, $1
	add.64*     %r237 <- %r234, %r236
	store.8     $0 -> 0[%r237]
	br          .L72

.L71:
	load.64*    %r238 <- 0[source]
	load.8      %r239 <- 0[%r238]
	scast.32    %r240 <- (8) %r239
	seteq.32    %r241 <- %r240, $64
	cbr         %r241, .L73, .L74

.L73:
	load.64*    %r242 <- 0[source]
	add.64*     %r243 <- %r242, $1
	store.64*   %r243 -> 0[source]
	load.64     %r244 <- 0[bufflen]
	cast.64     %r245 <- (64) %r244
	sub.64      %r246 <- %r245, $8
	cast.64     %r247 <- (64) %r246
	store.64    %r247 -> 0[bufflen]
	load.64*    %r248 <- 0[source]
	push.64*    %r248
	call.64     %r249 <- strlen
	store.64    %r249 -> 0[l]
	load.64*    %r250 <- 0[out]
	symaddr.64* %r251 <- <anon symbol:0x1c54d20>
	push.64*    %r250
	push.64*    %r251
	call.64*    %r252 <- strcpy
	load.64     %r253 <- 0[l]
	load.64     %r254 <- 0[bufflen]
	seta.32     %r255 <- %r253, %r254
	cbr         %r255, .L75, .L76

.L75:
	load.64     %r256 <- 0[l]
	load.64     %r257 <- 0[bufflen]
	sub.64      %r258 <- %r256, %r257
	load.64*    %r259 <- 0[source]
	cast.64     %r260 <- (64) %r259
	add.64      %r261 <- %r260, %r258
	ptrcast.64* %r262 <- (64) %r261
	store.64*   %r262 -> 0[source]
	load.64*    %r263 <- 0[out]
	symaddr.64* %r264 <- <anon symbol:0x1c550c0>
	push.64*    %r263
	push.64*    %r264
	call.64*    %r265 <- strcat
	br          .L76

.L76:
	load.64*    %r266 <- 0[out]
	load.64*    %r267 <- 0[source]
	push.64*    %r266
	push.64*    %r267
	call.64*    %r268 <- strcat
	br          .L77

.L74:
	load.64*    %r269 <- 0[source]
	symaddr.64* %r270 <- <anon symbol:0x1c55460>
	push.64*    %r269
	push.64*    %r270
	call.64     %r271 <- strcspn
	store.64    %r271 -> 0[len]
	load.64     %r272 <- 0[bufflen]
	cast.64     %r273 <- (64) %r272
	sub.64      %r274 <- %r273, $17
	cast.64     %r275 <- (64) %r274
	store.64    %r275 -> 0[bufflen]
	load.64     %r276 <- 0[len]
	load.64     %r277 <- 0[bufflen]
	seta.32     %r278 <- %r276, %r277
	cbr         %r278, .L78, .L79

.L78:
	load.64     %r279 <- 0[bufflen]
	store.64    %r279 -> 0[len]
	br          .L79

.L79:
	load.64*    %r280 <- 0[out]
	symaddr.64* %r281 <- <anon symbol:0x1c559d0>
	push.64*    %r280
	push.64*    %r281
	call.64*    %r282 <- strcpy
	load.64*    %r283 <- 0[source]
	load.64     %r284 <- 0[len]
	add.64*     %r285 <- %r283, %r284
	load.8      %r286 <- 0[%r285]
	scast.32    %r287 <- (8) %r286
	setne.32    %r288 <- %r287, $0
	cbr         %r288, .L80, .L81

.L80:
	load.64*    %r289 <- 0[out]
	load.64*    %r290 <- 0[source]
	load.64     %r291 <- 0[len]
	push.64*    %r289
	push.64*    %r290
	push.64     %r291
	call.64*    %r292 <- strncat
	load.64*    %r293 <- 0[out]
	symaddr.64* %r294 <- <anon symbol:0x1c55e58>
	push.64*    %r293
	push.64*    %r294
	call.64*    %r295 <- strcat
	br          .L82

.L81:
	load.64*    %r296 <- 0[out]
	load.64*    %r297 <- 0[source]
	push.64*    %r296
	push.64*    %r297
	call.64*    %r298 <- strcat
	br          .L82

.L82:
	load.64*    %r299 <- 0[out]
	symaddr.64* %r300 <- <anon symbol:0x1c561f8>
	push.64*    %r299
	push.64*    %r300
	call.64*    %r301 <- strcat
	br          .L77

.L77:
	br          .L72

.L72:
	ret


luaT_init:
.L83:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    $0 -> 0[i]
	br          .L87

.L87:
	load.32     %r302 <- 0[i]
	setlt.32    %r303 <- %r302, $17
	cbr         %r303, .L84, .L86

.L84:
	load.64*    %r304 <- 0[L]
	symaddr.64* %r305 <- luaT_eventname
	load.32     %r306 <- 0[i]
	scast.64    %r307 <- (32) %r306
	muls.64     %r308 <- %r307, $8
	add.64*     %r309 <- %r305, %r308
	load.64*    %r310 <- 0[%r309]
	symaddr.64* %r311 <- luaT_eventname
	load.32     %r312 <- 0[i]
	scast.64    %r313 <- (32) %r312
	muls.64     %r314 <- %r313, $8
	add.64*     %r315 <- %r311, %r314
	load.64*    %r316 <- 0[%r315]
	push.64*    %r316
	call.64     %r317 <- strlen
	push.64*    %r304
	push.64*    %r310
	push.64     %r317
	call.64*    %r318 <- luaS_newlstr
	load.64*    %r319 <- 0[L]
	load.64*    %r320 <- 32[%r319]
	add.64*     %r321 <- %r320, $296
	load.32     %r322 <- 0[i]
	scast.64    %r323 <- (32) %r322
	muls.64     %r324 <- %r323, $8
	add.64*     %r325 <- %r321, %r324
	store.64*   %r318 -> 0[%r325]
	load.64*    %r326 <- 0[L]
	load.64*    %r327 <- 32[%r326]
	add.64*     %r328 <- %r327, $296
	load.32     %r329 <- 0[i]
	scast.64    %r330 <- (32) %r329
	muls.64     %r331 <- %r330, $8
	add.64*     %r332 <- %r328, %r331
	load.64*    %r333 <- 0[%r332]
	load.8      %r334 <- 9[%r333]
	cast.32     %r335 <- (8) %r334
	or.32       %r336 <- %r335, $32
	scast.8     %r337 <- (32) %r336
	store.8     %r337 -> 9[%r333]
	br          .L85

.L85:
	load.32     %r338 <- 0[i]
	add.32      %r339 <- %r338, $1
	store.32    %r339 -> 0[i]
	br          .L87

.L86:
	ret


luaT_gettm:
.L88:
	<entry-point>
	store.64*   %arg1 -> 0[events]
	store.32    %arg2 -> 0[event]
	store.64*   %arg3 -> 0[ename]
	load.64*    %r340 <- 0[events]
	load.64*    %r341 <- 0[ename]
	push.64*    %r340
	push.64*    %r341
	call.64*    %r342 <- luaH_getstr
	store.64*   %r342 -> 0[tm]
	load.64*    %r343 <- 0[tm]
	load.32     %r344 <- 8[%r343]
	scast.32    %r345 <- (32) %r344
	seteq.32    %r346 <- %r345, $0
	cbr         %r346, .L89, .L90

.L89:
	load.32     %r347 <- 0[event]
	scast.32    %r348 <- (32) %r347
	shl.32      %r349 <- $1, %r348
	cast.8      %r350 <- (32) %r349
	cast.32     %r351 <- (8) %r350
	load.64*    %r352 <- 0[events]
	load.8      %r353 <- 10[%r352]
	cast.32     %r354 <- (8) %r353
	or.32       %r355 <- %r354, %r351
	scast.8     %r356 <- (32) %r355
	store.8     %r356 -> 10[%r352]
	phisrc.64*  %phi21(return) <- $0
	br          .L91

.L90:
	load.64*    %r358 <- 0[tm]
	phisrc.64*  %phi22(return) <- %r358
	br          .L91

.L91:
	phi.64*     %r357 <- %phi21(return), %phi22(return)
	ret.64*     %r357


luaT_gettmbyobj:
.L93:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.32    %arg3 -> 0[event]
	load.64*    %r359 <- 0[o]
	load.32     %r360 <- 8[%r359]
	switch.32   %r360, 5 -> .L95, 7 -> .L96, default -> .L97

.L95:
	load.64*    %r361 <- 0[o]
	load.64*    %r362 <- 0[%r361]
	load.64*    %r363 <- 16[%r362]
	store.64*   %r363 -> 0[mt]
	br          .L94

.L96:
	load.64*    %r364 <- 0[o]
	load.64*    %r365 <- 0[%r364]
	load.64*    %r366 <- 16[%r365]
	store.64*   %r366 -> 0[mt]
	br          .L94

.L97:
	load.64*    %r367 <- 0[L]
	load.64*    %r368 <- 32[%r367]
	add.64*     %r369 <- %r368, $224
	load.64*    %r370 <- 0[o]
	load.32     %r371 <- 8[%r370]
	scast.64    %r372 <- (32) %r371
	muls.64     %r373 <- %r372, $8
	add.64*     %r374 <- %r369, %r373
	load.64*    %r375 <- 0[%r374]
	store.64*   %r375 -> 0[mt]
	br          .L94

.L94:
	load.64*    %r376 <- 0[mt]
	cbr         %r376, .L99, .L100

.L99:
	load.64*    %r377 <- 0[mt]
	load.64*    %r378 <- 0[L]
	load.64*    %r379 <- 32[%r378]
	add.64*     %r380 <- %r379, $296
	load.32     %r381 <- 0[event]
	scast.64    %r382 <- (32) %r381
	muls.64     %r383 <- %r382, $8
	add.64*     %r384 <- %r380, %r383
	load.64*    %r385 <- 0[%r384]
	push.64*    %r377
	push.64*    %r385
	call.64*    %r386 <- luaH_getstr
	phisrc.64*  %phi23 <- %r386
	br          .L101

.L100:
	symaddr.64* %r387 <- luaO_nilobject_
	ptrcast.64* %r388 <- (64) %r387
	phisrc.64*  %phi24 <- %r388
	br          .L101

.L101:
	phi.64*     %r389 <- %phi23, %phi24
	phisrc.64*  %phi25(return) <- %r389
	br          .L98

.L98:
	phi.64*     %r390 <- %phi25(return)
	ret.64*     %r389


luaF_newCclosure:
.L102:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nelems]
	store.64*   %arg3 -> 0[e]
	load.64*    %r391 <- 0[L]
	load.32     %r392 <- 0[nelems]
	sub.32      %r393 <- %r392, $1
	scast.64    %r394 <- (32) %r393
	mulu.64     %r395 <- $16, %r394
	cast.32     %r396 <- (64) %r395
	add.32      %r397 <- $56, %r396
	scast.64    %r398 <- (32) %r397
	push.64*    %r391
	push.64*    $0
	push.64     $0
	push.64     %r398
	call.64*    %r399 <- luaM_realloc_
	ptrcast.64* %r400 <- (64) %r399
	store.64*   %r400 -> 0[c]
	load.64*    %r401 <- 0[L]
	load.64*    %r402 <- 0[c]
	ptrcast.64* %r403 <- (64) %r402
	push.64*    %r401
	push.64*    %r403
	push.8      $6
	call        luaC_link
	load.64*    %r404 <- 0[c]
	store.8     $1 -> 10[%r404]
	load.64*    %r405 <- 0[e]
	load.64*    %r406 <- 0[c]
	store.64*   %r405 -> 24[%r406]
	load.32     %r407 <- 0[nelems]
	scast.8     %r408 <- (32) %r407
	load.64*    %r409 <- 0[c]
	store.8     %r408 -> 11[%r409]
	load.64*    %r410 <- 0[c]
	phisrc.64*  %phi26(return) <- %r410
	br          .L103

.L103:
	phi.64*     %r411 <- %phi26(return)
	ret.64*     %r410


luaF_newLclosure:
.L104:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nelems]
	store.64*   %arg3 -> 0[e]
	load.64*    %r412 <- 0[L]
	load.32     %r413 <- 0[nelems]
	sub.32      %r414 <- %r413, $1
	scast.64    %r415 <- (32) %r414
	mulu.64     %r416 <- $8, %r415
	cast.32     %r417 <- (64) %r416
	add.32      %r418 <- $48, %r417
	scast.64    %r419 <- (32) %r418
	push.64*    %r412
	push.64*    $0
	push.64     $0
	push.64     %r419
	call.64*    %r420 <- luaM_realloc_
	ptrcast.64* %r421 <- (64) %r420
	store.64*   %r421 -> 0[c]
	load.64*    %r422 <- 0[L]
	load.64*    %r423 <- 0[c]
	ptrcast.64* %r424 <- (64) %r423
	push.64*    %r422
	push.64*    %r424
	push.8      $6
	call        luaC_link
	load.64*    %r425 <- 0[c]
	store.8     $0 -> 10[%r425]
	load.64*    %r426 <- 0[e]
	load.64*    %r427 <- 0[c]
	store.64*   %r426 -> 24[%r427]
	load.32     %r428 <- 0[nelems]
	scast.8     %r429 <- (32) %r428
	load.64*    %r430 <- 0[c]
	store.8     %r429 -> 11[%r430]
	br          .L108

.L108:
	load.32     %r431 <- 0[nelems]
	sub.32      %r432 <- %r431, $1
	store.32    %r432 -> 0[nelems]
	cbr         %r431, .L105, .L107

.L105:
	load.64*    %r433 <- 0[c]
	add.64*     %r434 <- %r433, $0
	add.64*     %r435 <- %r434, $40
	load.32     %r436 <- 0[nelems]
	scast.64    %r437 <- (32) %r436
	muls.64     %r438 <- %r437, $8
	add.64*     %r439 <- %r435, %r438
	store.64*   $0 -> 0[%r439]
	br          .L106

.L106:
	br          .L108

.L107:
	load.64*    %r440 <- 0[c]
	phisrc.64*  %phi27(return) <- %r440
	br          .L109

.L109:
	phi.64*     %r441 <- %phi27(return)
	ret.64*     %r440


luaF_newupval:
.L110:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r442 <- 0[L]
	push.64*    %r442
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r443 <- luaM_realloc_
	ptrcast.64* %r444 <- (64) %r443
	store.64*   %r444 -> 0[uv]
	load.64*    %r445 <- 0[L]
	load.64*    %r446 <- 0[uv]
	ptrcast.64* %r447 <- (64) %r446
	push.64*    %r445
	push.64*    %r447
	push.8      $10
	call        luaC_link
	load.64*    %r448 <- 0[uv]
	add.64*     %r449 <- %r448, $24
	add.64*     %r450 <- %r449, $0
	load.64*    %r451 <- 0[uv]
	store.64*   %r450 -> 16[%r451]
	load.64*    %r452 <- 0[uv]
	load.64*    %r453 <- 16[%r452]
	store.32    $0 -> 8[%r453]
	load.64*    %r454 <- 0[uv]
	phisrc.64*  %phi28(return) <- %r454
	br          .L111

.L111:
	phi.64*     %r455 <- %phi28(return)
	ret.64*     %r454


luaF_findupval:
.L112:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[level]
	load.64*    %r456 <- 0[L]
	load.64*    %r457 <- 32[%r456]
	store.64*   %r457 -> 0[g]
	load.64*    %r458 <- 0[L]
	add.64*     %r459 <- %r458, $152
	store.64*   %r459 -> 0[pp]
	br          .L116

.L116:
	load.64*    %r460 <- 0[pp]
	load.64*    %r461 <- 0[%r460]
	setne.32    %r462 <- %r461, $0
	cbr         %r462, .L117, .L115

.L117:
	load.64*    %r463 <- 0[pp]
	load.64*    %r464 <- 0[%r463]
	add.64*     %r465 <- %r464, $0
	store.64*   %r465 -> 0[p]
	load.64*    %r466 <- 16[%r465]
	load.64*    %r467 <- 0[level]
	setae.32    %r468 <- %r466, %r467
	cbr         %r468, .L113, .L115

.L113:
	load.64*    %r469 <- 0[p]
	load.64*    %r470 <- 16[%r469]
	load.64*    %r471 <- 0[level]
	seteq.32    %r472 <- %r470, %r471
	cbr         %r472, .L118, .L119

.L118:
	load.64*    %r473 <- 0[p]
	ptrcast.64* %r474 <- (64) %r473
	load.8      %r475 <- 9[%r474]
	cast.32     %r476 <- (8) %r475
	load.64*    %r477 <- 0[g]
	load.8      %r478 <- 32[%r477]
	cast.32     %r479 <- (8) %r478
	xor.32      %r480 <- %r479, $3
	and.32      %r481 <- %r476, %r480
	and.32      %r482 <- %r481, $3
	cbr         %r482, .L120, .L121

.L120:
	load.64*    %r483 <- 0[p]
	ptrcast.64* %r484 <- (64) %r483
	load.8      %r485 <- 9[%r484]
	cast.32     %r486 <- (8) %r485
	xor.32      %r487 <- %r486, $3
	scast.8     %r488 <- (32) %r487
	store.8     %r488 -> 9[%r484]
	br          .L121

.L121:
	load.64*    %r489 <- 0[p]
	phisrc.64*  %phi29(return) <- %r489
	br          .L122

.L119:
	load.64*    %r491 <- 0[p]
	add.64*     %r492 <- %r491, $0
	store.64*   %r492 -> 0[pp]
	br          .L114

.L114:
	br          .L116

.L115:
	load.64*    %r493 <- 0[L]
	push.64*    %r493
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r494 <- luaM_realloc_
	ptrcast.64* %r495 <- (64) %r494
	store.64*   %r495 -> 0[uv]
	load.64*    %r496 <- 0[uv]
	store.8     $10 -> 8[%r496]
	load.64*    %r497 <- 0[g]
	load.8      %r498 <- 32[%r497]
	cast.32     %r499 <- (8) %r498
	and.32      %r500 <- %r499, $3
	scast.8     %r501 <- (32) %r500
	load.64*    %r502 <- 0[uv]
	store.8     %r501 -> 9[%r502]
	load.64*    %r503 <- 0[level]
	load.64*    %r504 <- 0[uv]
	store.64*   %r503 -> 16[%r504]
	load.64*    %r505 <- 0[pp]
	load.64*    %r506 <- 0[%r505]
	load.64*    %r507 <- 0[uv]
	store.64*   %r506 -> 0[%r507]
	load.64*    %r508 <- 0[uv]
	ptrcast.64* %r509 <- (64) %r508
	load.64*    %r510 <- 0[pp]
	store.64*   %r509 -> 0[%r510]
	load.64*    %r511 <- 0[g]
	add.64*     %r512 <- %r511, $184
	load.64*    %r513 <- 0[uv]
	store.64*   %r512 -> 24[%r513]
	load.64*    %r514 <- 0[g]
	load.64*    %r515 <- 216[%r514]
	load.64*    %r516 <- 0[uv]
	store.64*   %r515 -> 32[%r516]
	load.64*    %r517 <- 0[uv]
	load.64*    %r518 <- 0[uv]
	load.64*    %r519 <- 32[%r518]
	store.64*   %r517 -> 24[%r519]
	load.64*    %r520 <- 0[uv]
	load.64*    %r521 <- 0[g]
	store.64*   %r520 -> 216[%r521]
	load.64*    %r522 <- 0[uv]
	phisrc.64*  %phi30(return) <- %r522
	br          .L122

.L122:
	phi.64*     %r490 <- %phi29(return), %phi30(return)
	ret.64*     %r490


unlinkupval:
.L123:
	<entry-point>
	store.64*   %arg1 -> 0[uv]
	load.64*    %r523 <- 0[uv]
	load.64*    %r524 <- 24[%r523]
	load.64*    %r525 <- 0[uv]
	load.64*    %r526 <- 32[%r525]
	store.64*   %r524 -> 24[%r526]
	load.64*    %r527 <- 0[uv]
	load.64*    %r528 <- 32[%r527]
	load.64*    %r529 <- 0[uv]
	load.64*    %r530 <- 24[%r529]
	store.64*   %r528 -> 32[%r530]
	br          .L124

.L124:
	ret


luaF_freeupval:
.L125:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[uv]
	load.64*    %r531 <- 0[uv]
	load.64*    %r532 <- 16[%r531]
	load.64*    %r533 <- 0[uv]
	add.64*     %r534 <- %r533, $24
	add.64*     %r535 <- %r534, $0
	setne.32    %r536 <- %r532, %r535
	cbr         %r536, .L126, .L127

.L126:
	load.64*    %r537 <- 0[uv]
	push.64*    %r537
	call        unlinkupval
	br          .L127

.L127:
	load.64*    %r538 <- 0[L]
	load.64*    %r539 <- 0[uv]
	cast.64*    %r540 <- (64) %r539
	push.64*    %r538
	push.64*    %r540
	push.64     $40
	push.64     $0
	call.64*    %r541 <- luaM_realloc_
	br          .L128

.L128:
	ret


luaF_close:
.L129:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[level]
	load.64*    %r542 <- 0[L]
	load.64*    %r543 <- 32[%r542]
	store.64*   %r543 -> 0[g]
	br          .L133

.L133:
	load.64*    %r544 <- 0[L]
	load.64*    %r545 <- 152[%r544]
	setne.32    %r546 <- %r545, $0
	cbr         %r546, .L134, .L132

.L134:
	load.64*    %r547 <- 0[L]
	load.64*    %r548 <- 152[%r547]
	add.64*     %r549 <- %r548, $0
	store.64*   %r549 -> 0[uv]
	load.64*    %r550 <- 16[%r549]
	load.64*    %r551 <- 0[level]
	setae.32    %r552 <- %r550, %r551
	cbr         %r552, .L130, .L132

.L130:
	load.64*    %r553 <- 0[uv]
	ptrcast.64* %r554 <- (64) %r553
	store.64*   %r554 -> 0[o]
	load.64*    %r555 <- 0[uv]
	load.64*    %r556 <- 0[%r555]
	load.64*    %r557 <- 0[L]
	store.64*   %r556 -> 152[%r557]
	load.64*    %r558 <- 0[o]
	load.8      %r559 <- 9[%r558]
	cast.32     %r560 <- (8) %r559
	load.64*    %r561 <- 0[g]
	load.8      %r562 <- 32[%r561]
	cast.32     %r563 <- (8) %r562
	xor.32      %r564 <- %r563, $3
	and.32      %r565 <- %r560, %r564
	and.32      %r566 <- %r565, $3
	cbr         %r566, .L135, .L136

.L135:
	load.64*    %r567 <- 0[L]
	load.64*    %r568 <- 0[uv]
	push.64*    %r567
	push.64*    %r568
	call        luaF_freeupval
	br          .L137

.L136:
	load.64*    %r569 <- 0[uv]
	push.64*    %r569
	call        unlinkupval
	load.64*    %r570 <- 0[uv]
	load.64*    %r571 <- 16[%r570]
	store.64*   %r571 -> 0[o2]
	load.64*    %r572 <- 0[uv]
	add.64*     %r573 <- %r572, $24
	add.64*     %r574 <- %r573, $0
	store.64*   %r574 -> 0[o1]
	load.64*    %r575 <- 0[o2]
	load.f64    %r576 <- 0[%r575]
	fpcast.f64  %r577 <- (64) %r576
	load.64*    %r578 <- 0[o1]
	store.f64   %r577 -> 0[%r578]
	load.64*    %r579 <- 0[o2]
	load.32     %r580 <- 8[%r579]
	scast.32    %r581 <- (32) %r580
	load.64*    %r582 <- 0[o1]
	store.32    %r581 -> 8[%r582]
	load.64*    %r583 <- 0[uv]
	add.64*     %r584 <- %r583, $24
	add.64*     %r585 <- %r584, $0
	load.64*    %r586 <- 0[uv]
	store.64*   %r585 -> 16[%r586]
	load.64*    %r587 <- 0[L]
	load.64*    %r588 <- 0[uv]
	push.64*    %r587
	push.64*    %r588
	call        luaC_linkupval
	br          .L137

.L137:
	br          .L131

.L131:
	br          .L133

.L132:
	ret


luaF_newproto:
.L138:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r589 <- 0[L]
	push.64*    %r589
	push.64*    $0
	push.64     $0
	push.64     $120
	call.64*    %r590 <- luaM_realloc_
	ptrcast.64* %r591 <- (64) %r590
	store.64*   %r591 -> 0[f]
	load.64*    %r592 <- 0[L]
	load.64*    %r593 <- 0[f]
	ptrcast.64* %r594 <- (64) %r593
	push.64*    %r592
	push.64*    %r594
	push.8      $9
	call        luaC_link
	load.64*    %r595 <- 0[f]
	store.64*   $0 -> 16[%r595]
	load.64*    %r596 <- 0[f]
	store.32    $0 -> 76[%r596]
	load.64*    %r597 <- 0[f]
	store.64*   $0 -> 32[%r597]
	load.64*    %r598 <- 0[f]
	store.32    $0 -> 88[%r598]
	load.64*    %r599 <- 0[f]
	store.64*   $0 -> 24[%r599]
	load.64*    %r600 <- 0[f]
	store.32    $0 -> 80[%r600]
	load.64*    %r601 <- 0[f]
	store.32    $0 -> 84[%r601]
	load.64*    %r602 <- 0[f]
	store.32    $0 -> 72[%r602]
	load.64*    %r603 <- 0[f]
	store.8     $0 -> 112[%r603]
	load.64*    %r604 <- 0[f]
	store.64*   $0 -> 56[%r604]
	load.64*    %r605 <- 0[f]
	store.8     $0 -> 113[%r605]
	load.64*    %r606 <- 0[f]
	store.8     $0 -> 114[%r606]
	load.64*    %r607 <- 0[f]
	store.8     $0 -> 115[%r607]
	load.64*    %r608 <- 0[f]
	store.64*   $0 -> 40[%r608]
	load.64*    %r609 <- 0[f]
	store.32    $0 -> 92[%r609]
	load.64*    %r610 <- 0[f]
	store.64*   $0 -> 48[%r610]
	load.64*    %r611 <- 0[f]
	store.32    $0 -> 96[%r611]
	load.64*    %r612 <- 0[f]
	store.32    $0 -> 100[%r612]
	load.64*    %r613 <- 0[f]
	store.64*   $0 -> 64[%r613]
	load.64*    %r614 <- 0[f]
	phisrc.64*  %phi31(return) <- %r614
	br          .L139

.L139:
	phi.64*     %r615 <- %phi31(return)
	ret.64*     %r614


luaF_freeproto:
.L140:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r616 <- 0[L]
	load.64*    %r617 <- 0[f]
	load.64*    %r618 <- 24[%r617]
	cast.64*    %r619 <- (64) %r618
	load.64*    %r620 <- 0[f]
	load.32     %r621 <- 80[%r620]
	scast.64    %r622 <- (32) %r621
	mulu.64     %r623 <- %r622, $4
	push.64*    %r616
	push.64*    %r619
	push.64     %r623
	push.64     $0
	call.64*    %r624 <- luaM_realloc_
	load.64*    %r625 <- 0[L]
	load.64*    %r626 <- 0[f]
	load.64*    %r627 <- 32[%r626]
	cast.64*    %r628 <- (64) %r627
	load.64*    %r629 <- 0[f]
	load.32     %r630 <- 88[%r629]
	scast.64    %r631 <- (32) %r630
	mulu.64     %r632 <- %r631, $8
	push.64*    %r625
	push.64*    %r628
	push.64     %r632
	push.64     $0
	call.64*    %r633 <- luaM_realloc_
	load.64*    %r634 <- 0[L]
	load.64*    %r635 <- 0[f]
	load.64*    %r636 <- 16[%r635]
	cast.64*    %r637 <- (64) %r636
	load.64*    %r638 <- 0[f]
	load.32     %r639 <- 76[%r638]
	scast.64    %r640 <- (32) %r639
	mulu.64     %r641 <- %r640, $16
	push.64*    %r634
	push.64*    %r637
	push.64     %r641
	push.64     $0
	call.64*    %r642 <- luaM_realloc_
	load.64*    %r643 <- 0[L]
	load.64*    %r644 <- 0[f]
	load.64*    %r645 <- 40[%r644]
	cast.64*    %r646 <- (64) %r645
	load.64*    %r647 <- 0[f]
	load.32     %r648 <- 84[%r647]
	scast.64    %r649 <- (32) %r648
	mulu.64     %r650 <- %r649, $4
	push.64*    %r643
	push.64*    %r646
	push.64     %r650
	push.64     $0
	call.64*    %r651 <- luaM_realloc_
	load.64*    %r652 <- 0[L]
	load.64*    %r653 <- 0[f]
	load.64*    %r654 <- 48[%r653]
	cast.64*    %r655 <- (64) %r654
	load.64*    %r656 <- 0[f]
	load.32     %r657 <- 92[%r656]
	scast.64    %r658 <- (32) %r657
	mulu.64     %r659 <- %r658, $16
	push.64*    %r652
	push.64*    %r655
	push.64     %r659
	push.64     $0
	call.64*    %r660 <- luaM_realloc_
	load.64*    %r661 <- 0[L]
	load.64*    %r662 <- 0[f]
	load.64*    %r663 <- 56[%r662]
	cast.64*    %r664 <- (64) %r663
	load.64*    %r665 <- 0[f]
	load.32     %r666 <- 72[%r665]
	scast.64    %r667 <- (32) %r666
	mulu.64     %r668 <- %r667, $8
	push.64*    %r661
	push.64*    %r664
	push.64     %r668
	push.64     $0
	call.64*    %r669 <- luaM_realloc_
	load.64*    %r670 <- 0[L]
	load.64*    %r671 <- 0[f]
	cast.64*    %r672 <- (64) %r671
	push.64*    %r670
	push.64*    %r672
	push.64     $120
	push.64     $0
	call.64*    %r673 <- luaM_realloc_
	br          .L141

.L141:
	ret


luaF_freeclosure:
.L142:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[c]
	load.64*    %r674 <- 0[c]
	load.8      %r675 <- 10[%r674]
	cbr         %r675, .L143, .L144

.L143:
	load.64*    %r676 <- 0[c]
	load.8      %r677 <- 11[%r676]
	cast.32     %r678 <- (8) %r677
	sub.32      %r679 <- %r678, $1
	scast.64    %r680 <- (32) %r679
	mulu.64     %r681 <- $16, %r680
	cast.32     %r682 <- (64) %r681
	add.32      %r683 <- $56, %r682
	phisrc.32   %phi32 <- %r683
	br          .L145

.L144:
	load.64*    %r684 <- 0[c]
	load.8      %r685 <- 11[%r684]
	cast.32     %r686 <- (8) %r685
	sub.32      %r687 <- %r686, $1
	scast.64    %r688 <- (32) %r687
	mulu.64     %r689 <- $8, %r688
	cast.32     %r690 <- (64) %r689
	add.32      %r691 <- $48, %r690
	phisrc.32   %phi33 <- %r691
	br          .L145

.L145:
	phi.32      %r692 <- %phi32, %phi33
	store.32    %r692 -> 0[size]
	load.64*    %r693 <- 0[L]
	load.64*    %r694 <- 0[c]
	cast.64*    %r695 <- (64) %r694
	load.32     %r696 <- 0[size]
	scast.64    %r697 <- (32) %r696
	push.64*    %r693
	push.64*    %r695
	push.64     %r697
	push.64     $0
	call.64*    %r698 <- luaM_realloc_
	br          .L146

.L146:
	ret


luaD_seterrorobj:
.L147:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[errcode]
	store.64*   %arg3 -> 0[oldtop]
	load.32     %r699 <- 0[errcode]
	switch.32   %r699, 2 -> .L152, 3 -> .L151, 4 -> .L149, 5 -> .L150, default -> .L148

.L149:
	load.64*    %r700 <- 0[oldtop]
	store.64*   %r700 -> 0[i_o]
	load.64*    %r701 <- 0[L]
	symaddr.64* %r702 <- <anon symbol:0x1cfb110>
	push.64*    %r701
	push.64*    %r702
	push.64     $17
	call.64*    %r703 <- luaS_newlstr
	ptrcast.64* %r704 <- (64) %r703
	load.64*    %r705 <- 0[i_o]
	store.64*   %r704 -> 0[%r705]
	load.64*    %r706 <- 0[i_o]
	store.32    $4 -> 8[%r706]
	br          .L148

.L150:
	load.64*    %r707 <- 0[oldtop]
	store.64*   %r707 -> 0[i_o]
	load.64*    %r708 <- 0[L]
	symaddr.64* %r709 <- <anon symbol:0x1cfba20>
	push.64*    %r708
	push.64*    %r709
	push.64     $23
	call.64*    %r710 <- luaS_newlstr
	ptrcast.64* %r711 <- (64) %r710
	load.64*    %r712 <- 0[i_o]
	store.64*   %r711 -> 0[%r712]
	load.64*    %r713 <- 0[i_o]
	store.32    $4 -> 8[%r713]
	br          .L148

.L151:
	br          .L152

.L152:
	load.64*    %r714 <- 0[L]
	load.64*    %r715 <- 16[%r714]
	sub.64*     %r716 <- %r715, $16
	store.64*   %r716 -> 0[o2]
	load.64*    %r717 <- 0[oldtop]
	store.64*   %r717 -> 0[o1]
	load.64*    %r718 <- 0[o2]
	load.f64    %r719 <- 0[%r718]
	fpcast.f64  %r720 <- (64) %r719
	load.64*    %r721 <- 0[o1]
	store.f64   %r720 -> 0[%r721]
	load.64*    %r722 <- 0[o2]
	load.32     %r723 <- 8[%r722]
	scast.32    %r724 <- (32) %r723
	load.64*    %r725 <- 0[o1]
	store.32    %r724 -> 8[%r725]
	br          .L148

.L148:
	load.64*    %r726 <- 0[oldtop]
	add.64*     %r727 <- %r726, $16
	load.64*    %r728 <- 0[L]
	store.64*   %r727 -> 16[%r728]
	br          .L153

.L153:
	ret


restore_stack_limit:
.L154:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r729 <- 0[L]
	load.32     %r730 <- 92[%r729]
	setgt.32    %r731 <- %r730, $0x4e20
	cbr         %r731, .L155, .L156

.L155:
	load.64*    %r732 <- 0[L]
	load.64*    %r733 <- 40[%r732]
	load.64*    %r734 <- 0[L]
	load.64*    %r735 <- 80[%r734]
	sub.64      %r736 <- %r733, %r735
	divs.64     %r737 <- %r736, $40
	scast.32    %r738 <- (64) %r737
	store.32    %r738 -> 0[inuse]
	load.32     %r739 <- 0[inuse]
	add.32      %r740 <- %r739, $1
	setlt.32    %r741 <- %r740, $0x4e20
	cbr         %r741, .L157, .L158

.L157:
	load.64*    %r742 <- 0[L]
	push.64*    %r742
	push.32     $0x4e20
	call        luaD_reallocCI
	br          .L158

.L158:
	br          .L156

.L156:
	ret


resetstack:
.L159:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[status]
	load.64*    %r743 <- 0[L]
	load.64*    %r744 <- 80[%r743]
	load.64*    %r745 <- 0[L]
	store.64*   %r744 -> 40[%r745]
	load.64*    %r746 <- 0[L]
	load.64*    %r747 <- 40[%r746]
	load.64*    %r748 <- 0[%r747]
	load.64*    %r749 <- 0[L]
	store.64*   %r748 -> 24[%r749]
	load.64*    %r750 <- 0[L]
	load.64*    %r751 <- 0[L]
	load.64*    %r752 <- 24[%r751]
	push.64*    %r750
	push.64*    %r752
	call        luaF_close
	load.64*    %r753 <- 0[L]
	load.32     %r754 <- 0[status]
	load.64*    %r755 <- 0[L]
	load.64*    %r756 <- 24[%r755]
	push.64*    %r753
	push.32     %r754
	push.64*    %r756
	call        luaD_seterrorobj
	load.64*    %r757 <- 0[L]
	load.16     %r758 <- 98[%r757]
	load.64*    %r759 <- 0[L]
	store.16    %r758 -> 96[%r759]
	load.64*    %r760 <- 0[L]
	store.8     $1 -> 101[%r760]
	load.64*    %r761 <- 0[L]
	push.64*    %r761
	call        restore_stack_limit
	load.64*    %r762 <- 0[L]
	store.64    $0 -> 176[%r762]
	load.64*    %r763 <- 0[L]
	store.64*   $0 -> 168[%r763]
	br          .L160

.L160:
	ret


luaD_throw:
.L161:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[errcode]
	load.64*    %r764 <- 0[L]
	load.64*    %r765 <- 168[%r764]
	cbr         %r765, .L162, .L163

.L162:
	load.32     %r766 <- 0[errcode]
	scast.32    %r767 <- (32) %r766
	load.64*    %r768 <- 0[L]
	load.64*    %r769 <- 168[%r768]
	store.32    %r767 -> 208[%r769]
	load.64*    %r770 <- 0[L]
	load.64*    %r771 <- 168[%r770]
	add.64*     %r772 <- %r771, $8
	push.64*    %r772
	push.32     $1
	call        longjmp
	br          .L164

.L163:
	load.32     %r773 <- 0[errcode]
	scast.8     %r774 <- (32) %r773
	load.64*    %r775 <- 0[L]
	store.8     %r774 -> 10[%r775]
	load.64*    %r776 <- 0[L]
	load.64*    %r777 <- 32[%r776]
	load.64*    %r778 <- 152[%r777]
	cbr         %r778, .L165, .L166

.L165:
	load.64*    %r779 <- 0[L]
	load.32     %r780 <- 0[errcode]
	push.64*    %r779
	push.32     %r780
	call        resetstack
	load.64*    %r781 <- 0[L]
	push.64*    %r781
	load.64*    %r782 <- 0[L]
	load.64*    %r783 <- 32[%r782]
	load.64*    %r784 <- 152[%r783]
	call.32     %r785 <- %r784
	br          .L166

.L166:
	push.32     $1
	call        exit
	br          .L164

.L164:
	ret


luaD_rawrunprotected:
.L167:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64*   %arg3 -> 0[ud]
	store.32    $0 -> 208[lj]
	load.64*    %r786 <- 0[L]
	load.64*    %r787 <- 168[%r786]
	store.64*   %r787 -> 0[lj]
	symaddr.64* %r788 <- lj
	load.64*    %r789 <- 0[L]
	store.64*   %r788 -> 168[%r789]
	symaddr.64* %r790 <- lj
	add.64*     %r791 <- %r790, $8
	push.64*    %r791
	call.32     %r792 <- _setjmp
	seteq.32    %r793 <- %r792, $0
	cbr         %r793, .L168, .L169

.L168:
	load.64*    %r794 <- 0[L]
	load.64*    %r795 <- 0[ud]
	push.64*    %r794
	push.64*    %r795
	load.64*    %r796 <- 0[f]
	call        %r796
	br          .L169

.L169:
	load.64*    %r797 <- 0[lj]
	load.64*    %r798 <- 0[L]
	store.64*   %r797 -> 168[%r798]
	load.32     %r799 <- 208[lj]
	scast.32    %r800 <- (32) %r799
	phisrc.32   %phi34(return) <- %r800
	br          .L170

.L170:
	phi.32      %r801 <- %phi34(return)
	ret.32      %r800


correctstack:
.L171:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[oldstack]
	load.64*    %r802 <- 0[L]
	load.64*    %r803 <- 64[%r802]
	load.64*    %r804 <- 0[L]
	load.64*    %r805 <- 16[%r804]
	load.64*    %r806 <- 0[oldstack]
	sub.64      %r807 <- %r805, %r806
	divs.64     %r808 <- %r807, $16
	muls.64     %r809 <- %r808, $16
	add.64*     %r810 <- %r803, %r809
	load.64*    %r811 <- 0[L]
	store.64*   %r810 -> 16[%r811]
	load.64*    %r812 <- 0[L]
	load.64*    %r813 <- 152[%r812]
	store.64*   %r813 -> 0[up]
	br          .L175

.L175:
	load.64*    %r814 <- 0[up]
	setne.32    %r815 <- %r814, $0
	cbr         %r815, .L172, .L174

.L172:
	load.64*    %r816 <- 0[L]
	load.64*    %r817 <- 64[%r816]
	load.64*    %r818 <- 0[up]
	load.64*    %r819 <- 16[%r818]
	load.64*    %r820 <- 0[oldstack]
	sub.64      %r821 <- %r819, %r820
	divs.64     %r822 <- %r821, $16
	muls.64     %r823 <- %r822, $16
	add.64*     %r824 <- %r817, %r823
	load.64*    %r825 <- 0[up]
	store.64*   %r824 -> 16[%r825]
	br          .L173

.L173:
	load.64*    %r826 <- 0[up]
	load.64*    %r827 <- 0[%r826]
	store.64*   %r827 -> 0[up]
	br          .L175

.L174:
	load.64*    %r828 <- 0[L]
	load.64*    %r829 <- 80[%r828]
	store.64*   %r829 -> 0[ci]
	br          .L179

.L179:
	load.64*    %r830 <- 0[ci]
	load.64*    %r831 <- 0[L]
	load.64*    %r832 <- 40[%r831]
	setbe.32    %r833 <- %r830, %r832
	cbr         %r833, .L176, .L178

.L176:
	load.64*    %r834 <- 0[L]
	load.64*    %r835 <- 64[%r834]
	load.64*    %r836 <- 0[ci]
	load.64*    %r837 <- 16[%r836]
	load.64*    %r838 <- 0[oldstack]
	sub.64      %r839 <- %r837, %r838
	divs.64     %r840 <- %r839, $16
	muls.64     %r841 <- %r840, $16
	add.64*     %r842 <- %r835, %r841
	load.64*    %r843 <- 0[ci]
	store.64*   %r842 -> 16[%r843]
	load.64*    %r844 <- 0[L]
	load.64*    %r845 <- 64[%r844]
	load.64*    %r846 <- 0[ci]
	load.64*    %r847 <- 0[%r846]
	load.64*    %r848 <- 0[oldstack]
	sub.64      %r849 <- %r847, %r848
	divs.64     %r850 <- %r849, $16
	muls.64     %r851 <- %r850, $16
	add.64*     %r852 <- %r845, %r851
	load.64*    %r853 <- 0[ci]
	store.64*   %r852 -> 0[%r853]
	load.64*    %r854 <- 0[L]
	load.64*    %r855 <- 64[%r854]
	load.64*    %r856 <- 0[ci]
	load.64*    %r857 <- 8[%r856]
	load.64*    %r858 <- 0[oldstack]
	sub.64      %r859 <- %r857, %r858
	divs.64     %r860 <- %r859, $16
	muls.64     %r861 <- %r860, $16
	add.64*     %r862 <- %r855, %r861
	load.64*    %r863 <- 0[ci]
	store.64*   %r862 -> 8[%r863]
	br          .L177

.L177:
	load.64*    %r864 <- 0[ci]
	add.64*     %r865 <- %r864, $40
	store.64*   %r865 -> 0[ci]
	br          .L179

.L178:
	load.64*    %r866 <- 0[L]
	load.64*    %r867 <- 64[%r866]
	load.64*    %r868 <- 0[L]
	load.64*    %r869 <- 24[%r868]
	load.64*    %r870 <- 0[oldstack]
	sub.64      %r871 <- %r869, %r870
	divs.64     %r872 <- %r871, $16
	muls.64     %r873 <- %r872, $16
	add.64*     %r874 <- %r867, %r873
	load.64*    %r875 <- 0[L]
	store.64*   %r874 -> 24[%r875]
	br          .L180

.L180:
	ret


luaD_reallocstack:
.L181:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r876 <- 0[L]
	load.64*    %r877 <- 64[%r876]
	store.64*   %r877 -> 0[oldstack]
	load.32     %r878 <- 0[newsize]
	add.32      %r879 <- %r878, $1
	add.32      %r880 <- %r879, $5
	store.32    %r880 -> 0[realsize]
	load.32     %r881 <- 0[realsize]
	add.32      %r882 <- %r881, $1
	scast.64    %r883 <- (32) %r882
	setbe.32    %r884 <- %r883, $0xfffffffffffffff
	cbr         %r884, .L182, .L183

.L182:
	load.64*    %r885 <- 0[L]
	load.64*    %r886 <- 0[L]
	load.64*    %r887 <- 64[%r886]
	cast.64*    %r888 <- (64) %r887
	load.64*    %r889 <- 0[L]
	load.32     %r890 <- 88[%r889]
	scast.64    %r891 <- (32) %r890
	mulu.64     %r892 <- %r891, $16
	load.32     %r893 <- 0[realsize]
	scast.64    %r894 <- (32) %r893
	mulu.64     %r895 <- %r894, $16
	push.64*    %r885
	push.64*    %r888
	push.64     %r892
	push.64     %r895
	call.64*    %r896 <- luaM_realloc_
	phisrc.64*  %phi35 <- %r896
	br          .L184

.L183:
	load.64*    %r897 <- 0[L]
	push.64*    %r897
	call.64*    %r898 <- luaM_toobig
	cast.64*    %r899 <- (64) %r898
	phisrc.64*  %phi36 <- %r899
	br          .L184

.L184:
	phi.64*     %r900 <- %phi35, %phi36
	ptrcast.64* %r901 <- (64) %r900
	load.64*    %r902 <- 0[L]
	store.64*   %r901 -> 64[%r902]
	load.32     %r903 <- 0[realsize]
	load.64*    %r904 <- 0[L]
	store.32    %r903 -> 88[%r904]
	load.64*    %r905 <- 0[L]
	load.64*    %r906 <- 64[%r905]
	load.32     %r907 <- 0[newsize]
	scast.64    %r908 <- (32) %r907
	muls.64     %r909 <- %r908, $16
	add.64*     %r910 <- %r906, %r909
	load.64*    %r911 <- 0[L]
	store.64*   %r910 -> 56[%r911]
	load.64*    %r912 <- 0[L]
	load.64*    %r913 <- 0[oldstack]
	push.64*    %r912
	push.64*    %r913
	call        correctstack
	br          .L185

.L185:
	ret


luaD_reallocCI:
.L186:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r914 <- 0[L]
	load.64*    %r915 <- 80[%r914]
	store.64*   %r915 -> 0[oldci]
	load.32     %r916 <- 0[newsize]
	add.32      %r917 <- %r916, $1
	scast.64    %r918 <- (32) %r917
	setbe.32    %r919 <- %r918, $0x666666666666666
	cbr         %r919, .L187, .L188

.L187:
	load.64*    %r920 <- 0[L]
	load.64*    %r921 <- 0[L]
	load.64*    %r922 <- 80[%r921]
	cast.64*    %r923 <- (64) %r922
	load.64*    %r924 <- 0[L]
	load.32     %r925 <- 92[%r924]
	scast.64    %r926 <- (32) %r925
	mulu.64     %r927 <- %r926, $40
	load.32     %r928 <- 0[newsize]
	scast.64    %r929 <- (32) %r928
	mulu.64     %r930 <- %r929, $40
	push.64*    %r920
	push.64*    %r923
	push.64     %r927
	push.64     %r930
	call.64*    %r931 <- luaM_realloc_
	phisrc.64*  %phi37 <- %r931
	br          .L189

.L188:
	load.64*    %r932 <- 0[L]
	push.64*    %r932
	call.64*    %r933 <- luaM_toobig
	cast.64*    %r934 <- (64) %r933
	phisrc.64*  %phi38 <- %r934
	br          .L189

.L189:
	phi.64*     %r935 <- %phi37, %phi38
	ptrcast.64* %r936 <- (64) %r935
	load.64*    %r937 <- 0[L]
	store.64*   %r936 -> 80[%r937]
	load.32     %r938 <- 0[newsize]
	load.64*    %r939 <- 0[L]
	store.32    %r938 -> 92[%r939]
	load.64*    %r940 <- 0[L]
	load.64*    %r941 <- 80[%r940]
	load.64*    %r942 <- 0[L]
	load.64*    %r943 <- 40[%r942]
	load.64*    %r944 <- 0[oldci]
	sub.64      %r945 <- %r943, %r944
	divs.64     %r946 <- %r945, $40
	muls.64     %r947 <- %r946, $40
	add.64*     %r948 <- %r941, %r947
	load.64*    %r949 <- 0[L]
	store.64*   %r948 -> 40[%r949]
	load.64*    %r950 <- 0[L]
	load.64*    %r951 <- 80[%r950]
	load.64*    %r952 <- 0[L]
	load.32     %r953 <- 92[%r952]
	scast.64    %r954 <- (32) %r953
	muls.64     %r955 <- %r954, $40
	add.64*     %r956 <- %r951, %r955
	sub.64*     %r957 <- %r956, $40
	load.64*    %r958 <- 0[L]
	store.64*   %r957 -> 72[%r958]
	br          .L190

.L190:
	ret


luaD_growstack:
.L191:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[n]
	load.32     %r959 <- 0[n]
	load.64*    %r960 <- 0[L]
	load.32     %r961 <- 88[%r960]
	setle.32    %r962 <- %r959, %r961
	cbr         %r962, .L192, .L193

.L192:
	load.64*    %r963 <- 0[L]
	load.64*    %r964 <- 0[L]
	load.32     %r965 <- 88[%r964]
	muls.32     %r966 <- $2, %r965
	push.64*    %r963
	push.32     %r966
	call        luaD_reallocstack
	br          .L194

.L193:
	load.64*    %r967 <- 0[L]
	load.64*    %r968 <- 0[L]
	load.32     %r969 <- 88[%r968]
	load.32     %r970 <- 0[n]
	add.32      %r971 <- %r969, %r970
	push.64*    %r967
	push.32     %r971
	call        luaD_reallocstack
	br          .L194

.L194:
	ret


growCI:
.L195:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r972 <- 0[L]
	load.32     %r973 <- 92[%r972]
	setgt.32    %r974 <- %r973, $0x4e20
	cbr         %r974, .L196, .L197

.L196:
	load.64*    %r975 <- 0[L]
	push.64*    %r975
	push.32     $5
	call        luaD_throw
	br          .L198

.L197:
	load.64*    %r976 <- 0[L]
	load.64*    %r977 <- 0[L]
	load.32     %r978 <- 92[%r977]
	muls.32     %r979 <- $2, %r978
	push.64*    %r976
	push.32     %r979
	call        luaD_reallocCI
	load.64*    %r980 <- 0[L]
	load.32     %r981 <- 92[%r980]
	setgt.32    %r982 <- %r981, $0x4e20
	cbr         %r982, .L199, .L200

.L199:
	load.64*    %r983 <- 0[L]
	symaddr.64* %r984 <- <anon symbol:0x1d02170>
	push.64*    %r983
	push.64*    %r984
	call        luaG_runerror
	br          .L200

.L200:
	br          .L198

.L198:
	load.64*    %r985 <- 0[L]
	load.64*    %r986 <- 40[%r985]
	add.64*     %r987 <- %r986, $40
	store.64*   %r987 -> 40[%r985]
	phisrc.64*  %phi39(return) <- %r987
	br          .L201

.L201:
	phi.64*     %r988 <- %phi39(return)
	ret.64*     %r987


adjust_varargs:
.L202:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p]
	store.32    %arg3 -> 0[actual]
	load.64*    %r989 <- 0[p]
	load.8      %r990 <- 113[%r989]
	cast.32     %r991 <- (8) %r990
	store.32    %r991 -> 0[nfixargs]
	store.64*   $0 -> 0[htab]
	br          .L206

.L206:
	load.32     %r992 <- 0[actual]
	load.32     %r993 <- 0[nfixargs]
	setlt.32    %r994 <- %r992, %r993
	cbr         %r994, .L203, .L205

.L203:
	load.64*    %r995 <- 0[L]
	load.64*    %r996 <- 16[%r995]
	add.64*     %r997 <- %r996, $16
	store.64*   %r997 -> 16[%r995]
	store.32    $0 -> 8[%r996]
	br          .L204

.L204:
	load.32     %r998 <- 0[actual]
	add.32      %r999 <- %r998, $1
	store.32    %r999 -> 0[actual]
	br          .L206

.L205:
	load.64*    %r1000 <- 0[L]
	load.64*    %r1001 <- 16[%r1000]
	load.32     %r1002 <- 0[actual]
	scast.64    %r1003 <- (32) %r1002
	muls.64     %r1004 <- %r1003, $16
	sub.64*     %r1005 <- %r1001, %r1004
	store.64*   %r1005 -> 0[fixed]
	load.64*    %r1006 <- 0[L]
	load.64*    %r1007 <- 16[%r1006]
	store.64*   %r1007 -> 0[base]
	store.32    $0 -> 0[i]
	br          .L210

.L210:
	load.32     %r1008 <- 0[i]
	load.32     %r1009 <- 0[nfixargs]
	setlt.32    %r1010 <- %r1008, %r1009
	cbr         %r1010, .L207, .L209

.L207:
	load.64*    %r1011 <- 0[fixed]
	load.32     %r1012 <- 0[i]
	scast.64    %r1013 <- (32) %r1012
	muls.64     %r1014 <- %r1013, $16
	add.64*     %r1015 <- %r1011, %r1014
	store.64*   %r1015 -> 0[o2]
	load.64*    %r1016 <- 0[L]
	load.64*    %r1017 <- 16[%r1016]
	add.64*     %r1018 <- %r1017, $16
	store.64*   %r1018 -> 16[%r1016]
	store.64*   %r1017 -> 0[o1]
	load.64*    %r1019 <- 0[o2]
	load.f64    %r1020 <- 0[%r1019]
	fpcast.f64  %r1021 <- (64) %r1020
	load.64*    %r1022 <- 0[o1]
	store.f64   %r1021 -> 0[%r1022]
	load.64*    %r1023 <- 0[o2]
	load.32     %r1024 <- 8[%r1023]
	scast.32    %r1025 <- (32) %r1024
	load.64*    %r1026 <- 0[o1]
	store.32    %r1025 -> 8[%r1026]
	load.64*    %r1027 <- 0[fixed]
	load.32     %r1028 <- 0[i]
	scast.64    %r1029 <- (32) %r1028
	muls.64     %r1030 <- %r1029, $16
	add.64*     %r1031 <- %r1027, %r1030
	store.32    $0 -> 8[%r1031]
	br          .L208

.L208:
	load.32     %r1032 <- 0[i]
	add.32      %r1033 <- %r1032, $1
	store.32    %r1033 -> 0[i]
	br          .L210

.L209:
	br          .L212

.L212:
	load.64*    %r1039 <- 0[base]
	phisrc.64*  %phi40(return) <- %r1039
	br          .L213

.L213:
	phi.64*     %r1040 <- %phi40(return)
	ret.64*     %r1039


tryfuncTM:
.L214:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	load.64*    %r1041 <- 0[L]
	load.64*    %r1042 <- 0[func]
	push.64*    %r1041
	push.64*    %r1042
	push.32     $16
	call.64*    %r1043 <- luaT_gettmbyobj
	store.64*   %r1043 -> 0[tm]
	load.64*    %r1044 <- 0[func]
	ptrcast.64* %r1045 <- (64) %r1044
	load.64*    %r1046 <- 0[L]
	load.64*    %r1047 <- 64[%r1046]
	ptrcast.64* %r1048 <- (64) %r1047
	sub.64      %r1049 <- %r1045, %r1048
	store.64    %r1049 -> 0[funcr]
	load.64*    %r1050 <- 0[tm]
	load.32     %r1051 <- 8[%r1050]
	scast.32    %r1052 <- (32) %r1051
	seteq.32    %r1053 <- %r1052, $6
	cbr         %r1053, .L216, .L215

.L215:
	load.64*    %r1054 <- 0[L]
	load.64*    %r1055 <- 0[func]
	symaddr.64* %r1056 <- <anon symbol:0x1d0bde0>
	push.64*    %r1054
	push.64*    %r1055
	push.64*    %r1056
	call        luaG_typeerror
	br          .L216

.L216:
	load.64*    %r1057 <- 0[L]
	load.64*    %r1058 <- 16[%r1057]
	store.64*   %r1058 -> 0[p]
	br          .L220

.L220:
	load.64*    %r1059 <- 0[p]
	load.64*    %r1060 <- 0[func]
	seta.32     %r1061 <- %r1059, %r1060
	cbr         %r1061, .L217, .L219

.L217:
	load.64*    %r1062 <- 0[p]
	sub.64*     %r1063 <- %r1062, $16
	store.64*   %r1063 -> 0[o2]
	load.64*    %r1064 <- 0[p]
	store.64*   %r1064 -> 0[o1]
	load.64*    %r1065 <- 0[o2]
	load.f64    %r1066 <- 0[%r1065]
	fpcast.f64  %r1067 <- (64) %r1066
	load.64*    %r1068 <- 0[o1]
	store.f64   %r1067 -> 0[%r1068]
	load.64*    %r1069 <- 0[o2]
	load.32     %r1070 <- 8[%r1069]
	scast.32    %r1071 <- (32) %r1070
	load.64*    %r1072 <- 0[o1]
	store.32    %r1071 -> 8[%r1072]
	br          .L218

.L218:
	load.64*    %r1073 <- 0[p]
	sub.64*     %r1074 <- %r1073, $16
	store.64*   %r1074 -> 0[p]
	br          .L220

.L219:
	load.64*    %r1075 <- 0[L]
	load.64*    %r1076 <- 56[%r1075]
	ptrcast.64* %r1077 <- (64) %r1076
	load.64*    %r1078 <- 0[L]
	load.64*    %r1079 <- 16[%r1078]
	ptrcast.64* %r1080 <- (64) %r1079
	sub.64      %r1081 <- %r1077, %r1080
	setle.32    %r1082 <- %r1081, $16
	cbr         %r1082, .L221, .L222

.L221:
	load.64*    %r1083 <- 0[L]
	push.64*    %r1083
	push.32     $1
	call        luaD_growstack
	br          .L223

.L222:
	br          .L223

.L223:
	load.64*    %r1084 <- 0[L]
	load.64*    %r1085 <- 16[%r1084]
	add.64*     %r1086 <- %r1085, $16
	store.64*   %r1086 -> 16[%r1084]
	load.64*    %r1087 <- 0[L]
	load.64*    %r1088 <- 64[%r1087]
	ptrcast.64* %r1089 <- (64) %r1088
	load.64     %r1090 <- 0[funcr]
	add.64*     %r1091 <- %r1089, %r1090
	ptrcast.64* %r1092 <- (64) %r1091
	store.64*   %r1092 -> 0[func]
	load.64*    %r1093 <- 0[tm]
	store.64*   %r1093 -> 0[o2]
	load.64*    %r1094 <- 0[func]
	store.64*   %r1094 -> 0[o1]
	load.64*    %r1095 <- 0[o2]
	load.f64    %r1096 <- 0[%r1095]
	fpcast.f64  %r1097 <- (64) %r1096
	load.64*    %r1098 <- 0[o1]
	store.f64   %r1097 -> 0[%r1098]
	load.64*    %r1099 <- 0[o2]
	load.32     %r1100 <- 8[%r1099]
	scast.32    %r1101 <- (32) %r1100
	load.64*    %r1102 <- 0[o1]
	store.32    %r1101 -> 8[%r1102]
	load.64*    %r1103 <- 0[func]
	phisrc.64*  %phi41(return) <- %r1103
	br          .L224

.L224:
	phi.64*     %r1104 <- %phi41(return)
	ret.64*     %r1103


luaD_precall:
.L225:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r1105 <- 0[func]
	load.32     %r1106 <- 8[%r1105]
	seteq.32    %r1107 <- %r1106, $6
	cbr         %r1107, .L227, .L226

.L226:
	load.64*    %r1108 <- 0[L]
	load.64*    %r1109 <- 0[func]
	push.64*    %r1108
	push.64*    %r1109
	call.64*    %r1110 <- tryfuncTM
	store.64*   %r1110 -> 0[func]
	br          .L227

.L227:
	load.64*    %r1111 <- 0[func]
	ptrcast.64* %r1112 <- (64) %r1111
	load.64*    %r1113 <- 0[L]
	load.64*    %r1114 <- 64[%r1113]
	ptrcast.64* %r1115 <- (64) %r1114
	sub.64      %r1116 <- %r1112, %r1115
	store.64    %r1116 -> 0[funcr]
	load.64*    %r1117 <- 0[func]
	load.64*    %r1118 <- 0[%r1117]
	add.64*     %r1119 <- %r1118, $0
	add.64*     %r1120 <- %r1119, $0
	store.64*   %r1120 -> 0[cl]
	load.64*    %r1121 <- 0[L]
	load.64*    %r1122 <- 48[%r1121]
	load.64*    %r1123 <- 0[L]
	load.64*    %r1124 <- 40[%r1123]
	store.64*   %r1122 -> 24[%r1124]
	load.64*    %r1125 <- 0[cl]
	load.8      %r1126 <- 10[%r1125]
	cbr         %r1126, .L229, .L228

.L228:
	load.64*    %r1127 <- 0[cl]
	load.64*    %r1128 <- 32[%r1127]
	store.64*   %r1128 -> 0[p]
	load.64*    %r1129 <- 0[L]
	load.64*    %r1130 <- 56[%r1129]
	ptrcast.64* %r1131 <- (64) %r1130
	load.64*    %r1132 <- 0[L]
	load.64*    %r1133 <- 16[%r1132]
	ptrcast.64* %r1134 <- (64) %r1133
	sub.64      %r1135 <- %r1131, %r1134
	load.64*    %r1136 <- 0[p]
	load.8      %r1137 <- 115[%r1136]
	cast.32     %r1138 <- (8) %r1137
	muls.32     %r1139 <- %r1138, $16
	scast.64    %r1140 <- (32) %r1139
	setle.32    %r1141 <- %r1135, %r1140
	cbr         %r1141, .L230, .L231

.L230:
	load.64*    %r1142 <- 0[L]
	load.64*    %r1143 <- 0[p]
	load.8      %r1144 <- 115[%r1143]
	cast.32     %r1145 <- (8) %r1144
	push.64*    %r1142
	push.32     %r1145
	call        luaD_growstack
	br          .L232

.L231:
	br          .L232

.L232:
	load.64*    %r1146 <- 0[L]
	load.64*    %r1147 <- 64[%r1146]
	ptrcast.64* %r1148 <- (64) %r1147
	load.64     %r1149 <- 0[funcr]
	add.64*     %r1150 <- %r1148, %r1149
	ptrcast.64* %r1151 <- (64) %r1150
	store.64*   %r1151 -> 0[func]
	load.64*    %r1152 <- 0[p]
	load.8      %r1153 <- 114[%r1152]
	cbr         %r1153, .L234, .L233

.L233:
	load.64*    %r1154 <- 0[func]
	add.64*     %r1155 <- %r1154, $16
	store.64*   %r1155 -> 0[base]
	load.64*    %r1156 <- 0[L]
	load.64*    %r1157 <- 16[%r1156]
	load.64*    %r1158 <- 0[base]
	load.64*    %r1159 <- 0[p]
	load.8      %r1160 <- 113[%r1159]
	cast.64     %r1161 <- (8) %r1160
	muls.64     %r1162 <- %r1161, $16
	add.64*     %r1163 <- %r1158, %r1162
	seta.32     %r1164 <- %r1157, %r1163
	cbr         %r1164, .L235, .L236

.L235:
	load.64*    %r1165 <- 0[base]
	load.64*    %r1166 <- 0[p]
	load.8      %r1167 <- 113[%r1166]
	cast.64     %r1168 <- (8) %r1167
	muls.64     %r1169 <- %r1168, $16
	add.64*     %r1170 <- %r1165, %r1169
	load.64*    %r1171 <- 0[L]
	store.64*   %r1170 -> 16[%r1171]
	br          .L236

.L236:
	br          .L237

.L234:
	load.64*    %r1172 <- 0[L]
	load.64*    %r1173 <- 16[%r1172]
	load.64*    %r1174 <- 0[func]
	sub.64      %r1175 <- %r1173, %r1174
	divs.64     %r1176 <- %r1175, $16
	scast.32    %r1177 <- (64) %r1176
	sub.32      %r1178 <- %r1177, $1
	store.32    %r1178 -> 0[nargs]
	load.64*    %r1179 <- 0[L]
	load.64*    %r1180 <- 0[p]
	load.32     %r1181 <- 0[nargs]
	push.64*    %r1179
	push.64*    %r1180
	push.32     %r1181
	call.64*    %r1182 <- adjust_varargs
	store.64*   %r1182 -> 0[base]
	load.64*    %r1183 <- 0[L]
	load.64*    %r1184 <- 64[%r1183]
	ptrcast.64* %r1185 <- (64) %r1184
	load.64     %r1186 <- 0[funcr]
	add.64*     %r1187 <- %r1185, %r1186
	ptrcast.64* %r1188 <- (64) %r1187
	store.64*   %r1188 -> 0[func]
	br          .L237

.L237:
	load.64*    %r1189 <- 0[L]
	load.64*    %r1190 <- 40[%r1189]
	load.64*    %r1191 <- 0[L]
	load.64*    %r1192 <- 72[%r1191]
	seteq.32    %r1193 <- %r1190, %r1192
	cbr         %r1193, .L238, .L239

.L238:
	load.64*    %r1194 <- 0[L]
	push.64*    %r1194
	call.64*    %r1195 <- growCI
	phisrc.64*  %phi42 <- %r1195
	br          .L240

.L239:
	load.64*    %r1196 <- 0[L]
	load.64*    %r1197 <- 40[%r1196]
	add.64*     %r1198 <- %r1197, $40
	store.64*   %r1198 -> 40[%r1196]
	ptrcast.64* %r1199 <- (64) %r1198
	phisrc.64*  %phi43 <- %r1199
	br          .L240

.L240:
	phi.64*     %r1200 <- %phi42, %phi43
	store.64*   %r1200 -> 0[ci]
	load.64*    %r1201 <- 0[func]
	load.64*    %r1202 <- 0[ci]
	store.64*   %r1201 -> 8[%r1202]
	load.64*    %r1203 <- 0[base]
	load.64*    %r1204 <- 0[ci]
	store.64*   %r1203 -> 0[%r1204]
	load.64*    %r1205 <- 0[L]
	store.64*   %r1203 -> 24[%r1205]
	load.64*    %r1206 <- 0[L]
	load.64*    %r1207 <- 24[%r1206]
	load.64*    %r1208 <- 0[p]
	load.8      %r1209 <- 115[%r1208]
	cast.64     %r1210 <- (8) %r1209
	muls.64     %r1211 <- %r1210, $16
	add.64*     %r1212 <- %r1207, %r1211
	load.64*    %r1213 <- 0[ci]
	store.64*   %r1212 -> 16[%r1213]
	load.64*    %r1214 <- 0[p]
	load.64*    %r1215 <- 24[%r1214]
	load.64*    %r1216 <- 0[L]
	store.64*   %r1215 -> 48[%r1216]
	load.64*    %r1217 <- 0[ci]
	store.32    $0 -> 36[%r1217]
	load.32     %r1218 <- 0[nresults]
	load.64*    %r1219 <- 0[ci]
	store.32    %r1218 -> 32[%r1219]
	load.64*    %r1220 <- 0[L]
	load.64*    %r1221 <- 16[%r1220]
	store.64*   %r1221 -> 0[st]
	br          .L244

.L244:
	load.64*    %r1222 <- 0[st]
	load.64*    %r1223 <- 0[ci]
	load.64*    %r1224 <- 16[%r1223]
	setb.32     %r1225 <- %r1222, %r1224
	cbr         %r1225, .L241, .L243

.L241:
	load.64*    %r1226 <- 0[st]
	store.32    $0 -> 8[%r1226]
	br          .L242

.L242:
	load.64*    %r1227 <- 0[st]
	add.64*     %r1228 <- %r1227, $16
	store.64*   %r1228 -> 0[st]
	br          .L244

.L243:
	load.64*    %r1229 <- 0[ci]
	load.64*    %r1230 <- 16[%r1229]
	load.64*    %r1231 <- 0[L]
	store.64*   %r1230 -> 16[%r1231]
	phisrc.32   %phi44(return) <- $0
	br          .L245

.L229:
	load.64*    %r1233 <- 0[L]
	load.64*    %r1234 <- 56[%r1233]
	ptrcast.64* %r1235 <- (64) %r1234
	load.64*    %r1236 <- 0[L]
	load.64*    %r1237 <- 16[%r1236]
	ptrcast.64* %r1238 <- (64) %r1237
	sub.64      %r1239 <- %r1235, %r1238
	setle.32    %r1240 <- %r1239, $320
	cbr         %r1240, .L247, .L248

.L247:
	load.64*    %r1241 <- 0[L]
	push.64*    %r1241
	push.32     $20
	call        luaD_growstack
	br          .L249

.L248:
	br          .L249

.L249:
	load.64*    %r1242 <- 0[L]
	load.64*    %r1243 <- 40[%r1242]
	load.64*    %r1244 <- 0[L]
	load.64*    %r1245 <- 72[%r1244]
	seteq.32    %r1246 <- %r1243, %r1245
	cbr         %r1246, .L250, .L251

.L250:
	load.64*    %r1247 <- 0[L]
	push.64*    %r1247
	call.64*    %r1248 <- growCI
	phisrc.64*  %phi45 <- %r1248
	br          .L252

.L251:
	load.64*    %r1249 <- 0[L]
	load.64*    %r1250 <- 40[%r1249]
	add.64*     %r1251 <- %r1250, $40
	store.64*   %r1251 -> 40[%r1249]
	ptrcast.64* %r1252 <- (64) %r1251
	phisrc.64*  %phi46 <- %r1252
	br          .L252

.L252:
	phi.64*     %r1253 <- %phi45, %phi46
	store.64*   %r1253 -> 0[ci]
	load.64*    %r1254 <- 0[L]
	load.64*    %r1255 <- 64[%r1254]
	ptrcast.64* %r1256 <- (64) %r1255
	load.64     %r1257 <- 0[funcr]
	add.64*     %r1258 <- %r1256, %r1257
	ptrcast.64* %r1259 <- (64) %r1258
	load.64*    %r1260 <- 0[ci]
	store.64*   %r1259 -> 8[%r1260]
	load.64*    %r1261 <- 0[ci]
	load.64*    %r1262 <- 8[%r1261]
	add.64*     %r1263 <- %r1262, $16
	load.64*    %r1264 <- 0[ci]
	store.64*   %r1263 -> 0[%r1264]
	load.64*    %r1265 <- 0[L]
	store.64*   %r1263 -> 24[%r1265]
	load.64*    %r1266 <- 0[L]
	load.64*    %r1267 <- 16[%r1266]
	add.64*     %r1268 <- %r1267, $320
	load.64*    %r1269 <- 0[ci]
	store.64*   %r1268 -> 16[%r1269]
	load.32     %r1270 <- 0[nresults]
	load.64*    %r1271 <- 0[ci]
	store.32    %r1270 -> 32[%r1271]
	load.64*    %r1272 <- 0[L]
	push.64*    %r1272
	load.64*    %r1273 <- 0[L]
	load.64*    %r1274 <- 40[%r1273]
	load.64*    %r1275 <- 8[%r1274]
	load.64*    %r1276 <- 0[%r1275]
	load.64*    %r1277 <- 32[%r1276]
	call.32     %r1278 <- %r1277
	store.32    %r1278 -> 0[n]
	load.32     %r1279 <- 0[n]
	setlt.32    %r1280 <- %r1279, $0
	cbr         %r1280, .L253, .L254

.L253:
	phisrc.32   %phi47(return) <- $2
	br          .L245

.L254:
	load.64*    %r1281 <- 0[L]
	load.64*    %r1282 <- 0[L]
	load.64*    %r1283 <- 16[%r1282]
	load.32     %r1284 <- 0[n]
	scast.64    %r1285 <- (32) %r1284
	muls.64     %r1286 <- %r1285, $16
	sub.64*     %r1287 <- %r1283, %r1286
	push.64*    %r1281
	push.64*    %r1287
	call.32     %r1288 <- luaD_poscall
	phisrc.32   %phi48(return) <- $1
	br          .L245

.L245:
	phi.32      %r1232 <- %phi44(return), %phi47(return), %phi48(return)
	ret.32      %r1232


luaD_poscall:
.L256:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[firstResult]
	load.64*    %r1289 <- 0[L]
	load.64*    %r1290 <- 40[%r1289]
	sub.64*     %r1291 <- %r1290, $40
	store.64*   %r1291 -> 40[%r1289]
	store.64*   %r1290 -> 0[ci]
	load.64*    %r1292 <- 0[ci]
	load.64*    %r1293 <- 8[%r1292]
	store.64*   %r1293 -> 0[res]
	load.64*    %r1294 <- 0[ci]
	load.32     %r1295 <- 32[%r1294]
	store.32    %r1295 -> 0[wanted]
	load.64*    %r1296 <- 0[ci]
	sub.64*     %r1297 <- %r1296, $40
	load.64*    %r1298 <- 0[%r1297]
	load.64*    %r1299 <- 0[L]
	store.64*   %r1298 -> 24[%r1299]
	load.64*    %r1300 <- 0[ci]
	sub.64*     %r1301 <- %r1300, $40
	load.64*    %r1302 <- 24[%r1301]
	load.64*    %r1303 <- 0[L]
	store.64*   %r1302 -> 48[%r1303]
	load.32     %r1304 <- 0[wanted]
	store.32    %r1304 -> 0[i]
	br          .L260

.L260:
	load.32     %r1305 <- 0[i]
	setne.32    %r1306 <- %r1305, $0
	cbr         %r1306, .L261, .L259

.L261:
	load.64*    %r1307 <- 0[firstResult]
	load.64*    %r1308 <- 0[L]
	load.64*    %r1309 <- 16[%r1308]
	setb.32     %r1310 <- %r1307, %r1309
	cbr         %r1310, .L257, .L259

.L257:
	load.64*    %r1311 <- 0[firstResult]
	add.64*     %r1312 <- %r1311, $16
	store.64*   %r1312 -> 0[firstResult]
	store.64*   %r1311 -> 0[o2]
	load.64*    %r1313 <- 0[res]
	add.64*     %r1314 <- %r1313, $16
	store.64*   %r1314 -> 0[res]
	store.64*   %r1313 -> 0[o1]
	load.64*    %r1315 <- 0[o2]
	load.f64    %r1316 <- 0[%r1315]
	fpcast.f64  %r1317 <- (64) %r1316
	load.64*    %r1318 <- 0[o1]
	store.f64   %r1317 -> 0[%r1318]
	load.64*    %r1319 <- 0[o2]
	load.32     %r1320 <- 8[%r1319]
	scast.32    %r1321 <- (32) %r1320
	load.64*    %r1322 <- 0[o1]
	store.32    %r1321 -> 8[%r1322]
	br          .L258

.L258:
	load.32     %r1323 <- 0[i]
	sub.32      %r1324 <- %r1323, $1
	store.32    %r1324 -> 0[i]
	br          .L260

.L259:
	br          .L265

.L265:
	load.32     %r1325 <- 0[i]
	sub.32      %r1326 <- %r1325, $1
	store.32    %r1326 -> 0[i]
	setgt.32    %r1327 <- %r1325, $0
	cbr         %r1327, .L262, .L264

.L262:
	load.64*    %r1328 <- 0[res]
	add.64*     %r1329 <- %r1328, $16
	store.64*   %r1329 -> 0[res]
	store.32    $0 -> 8[%r1328]
	br          .L263

.L263:
	br          .L265

.L264:
	load.64*    %r1330 <- 0[res]
	load.64*    %r1331 <- 0[L]
	store.64*   %r1330 -> 16[%r1331]
	load.32     %r1332 <- 0[wanted]
	sub.32      %r1333 <- %r1332, $0xffffffff
	phisrc.32   %phi49(return) <- %r1333
	br          .L266

.L266:
	phi.32      %r1334 <- %phi49(return)
	ret.32      %r1333


luaD_call:
.L267:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.32    %arg3 -> 0[nResults]
	load.64*    %r1335 <- 0[L]
	load.16     %r1336 <- 96[%r1335]
	add.16      %r1337 <- %r1336, $1
	store.16    %r1337 -> 96[%r1335]
	cast.32     %r1338 <- (16) %r1337
	setge.32    %r1339 <- %r1338, $200
	cbr         %r1339, .L268, .L269

.L268:
	load.64*    %r1340 <- 0[L]
	load.16     %r1341 <- 96[%r1340]
	cast.32     %r1342 <- (16) %r1341
	seteq.32    %r1343 <- %r1342, $200
	cbr         %r1343, .L270, .L271

.L270:
	load.64*    %r1344 <- 0[L]
	symaddr.64* %r1345 <- <anon symbol:0x1d12700>
	push.64*    %r1344
	push.64*    %r1345
	call        luaG_runerror
	br          .L272

.L271:
	load.64*    %r1346 <- 0[L]
	load.16     %r1347 <- 96[%r1346]
	cast.32     %r1348 <- (16) %r1347
	setge.32    %r1349 <- %r1348, $225
	cbr         %r1349, .L273, .L274

.L273:
	load.64*    %r1350 <- 0[L]
	push.64*    %r1350
	push.32     $5
	call        luaD_throw
	br          .L274

.L274:
	br          .L272

.L272:
	br          .L269

.L269:
	load.64*    %r1351 <- 0[L]
	load.64*    %r1352 <- 0[func]
	load.32     %r1353 <- 0[nResults]
	push.64*    %r1351
	push.64*    %r1352
	push.32     %r1353
	call.32     %r1354 <- luaD_precall
	seteq.32    %r1355 <- %r1354, $0
	cbr         %r1355, .L275, .L276

.L275:
	load.64*    %r1356 <- 0[L]
	push.64*    %r1356
	push.32     $1
	call        luaV_execute
	br          .L276

.L276:
	load.64*    %r1357 <- 0[L]
	load.16     %r1358 <- 96[%r1357]
	sub.16      %r1359 <- %r1358, $1
	store.16    %r1359 -> 96[%r1357]
	load.64*    %r1360 <- 0[L]
	load.64*    %r1361 <- 32[%r1360]
	load.64     %r1362 <- 120[%r1361]
	load.64*    %r1363 <- 0[L]
	load.64*    %r1364 <- 32[%r1363]
	load.64     %r1365 <- 112[%r1364]
	setae.32    %r1366 <- %r1362, %r1365
	cbr         %r1366, .L277, .L278

.L277:
	load.64*    %r1367 <- 0[L]
	push.64*    %r1367
	call        luaC_step
	br          .L278

.L278:
	ret


luaD_pcall:
.L279:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.64*   %arg3 -> 0[u]
	store.64    %arg4 -> 0[old_top]
	store.64    %arg5 -> 0[ef]
	load.64*    %r1368 <- 0[L]
	load.16     %r1369 <- 96[%r1368]
	store.16    %r1369 -> 0[oldnCcalls]
	load.64*    %r1370 <- 0[L]
	load.64*    %r1371 <- 40[%r1370]
	ptrcast.64* %r1372 <- (64) %r1371
	load.64*    %r1373 <- 0[L]
	load.64*    %r1374 <- 80[%r1373]
	ptrcast.64* %r1375 <- (64) %r1374
	sub.64      %r1376 <- %r1372, %r1375
	store.64    %r1376 -> 0[old_ci]
	load.64*    %r1377 <- 0[L]
	load.8      %r1378 <- 101[%r1377]
	store.8     %r1378 -> 0[old_allowhooks]
	load.64*    %r1379 <- 0[L]
	load.64     %r1380 <- 176[%r1379]
	store.64    %r1380 -> 0[old_errfunc]
	load.64     %r1381 <- 0[ef]
	load.64*    %r1382 <- 0[L]
	store.64    %r1381 -> 176[%r1382]
	load.64*    %r1383 <- 0[L]
	load.64*    %r1384 <- 0[func]
	load.64*    %r1385 <- 0[u]
	push.64*    %r1383
	push.64*    %r1384
	push.64*    %r1385
	call.32     %r1386 <- luaD_rawrunprotected
	store.32    %r1386 -> 0[status]
	load.32     %r1387 <- 0[status]
	setne.32    %r1388 <- %r1387, $0
	cbr         %r1388, .L280, .L281

.L280:
	load.64*    %r1389 <- 0[L]
	load.64*    %r1390 <- 64[%r1389]
	ptrcast.64* %r1391 <- (64) %r1390
	load.64     %r1392 <- 0[old_top]
	add.64*     %r1393 <- %r1391, %r1392
	ptrcast.64* %r1394 <- (64) %r1393
	store.64*   %r1394 -> 0[oldtop]
	load.64*    %r1395 <- 0[L]
	load.64*    %r1396 <- 0[oldtop]
	push.64*    %r1395
	push.64*    %r1396
	call        luaF_close
	load.64*    %r1397 <- 0[L]
	load.32     %r1398 <- 0[status]
	load.64*    %r1399 <- 0[oldtop]
	push.64*    %r1397
	push.32     %r1398
	push.64*    %r1399
	call        luaD_seterrorobj
	load.16     %r1400 <- 0[oldnCcalls]
	load.64*    %r1401 <- 0[L]
	store.16    %r1400 -> 96[%r1401]
	load.64*    %r1402 <- 0[L]
	load.64*    %r1403 <- 80[%r1402]
	ptrcast.64* %r1404 <- (64) %r1403
	load.64     %r1405 <- 0[old_ci]
	add.64*     %r1406 <- %r1404, %r1405
	ptrcast.64* %r1407 <- (64) %r1406
	load.64*    %r1408 <- 0[L]
	store.64*   %r1407 -> 40[%r1408]
	load.64*    %r1409 <- 0[L]
	load.64*    %r1410 <- 40[%r1409]
	load.64*    %r1411 <- 0[%r1410]
	load.64*    %r1412 <- 0[L]
	store.64*   %r1411 -> 24[%r1412]
	load.64*    %r1413 <- 0[L]
	load.64*    %r1414 <- 40[%r1413]
	load.64*    %r1415 <- 24[%r1414]
	load.64*    %r1416 <- 0[L]
	store.64*   %r1415 -> 48[%r1416]
	load.8      %r1417 <- 0[old_allowhooks]
	load.64*    %r1418 <- 0[L]
	store.8     %r1417 -> 101[%r1418]
	load.64*    %r1419 <- 0[L]
	push.64*    %r1419
	call        restore_stack_limit
	br          .L281

.L281:
	load.64     %r1420 <- 0[old_errfunc]
	load.64*    %r1421 <- 0[L]
	store.64    %r1420 -> 176[%r1421]
	load.32     %r1422 <- 0[status]
	phisrc.32   %phi50(return) <- %r1422
	br          .L282

.L282:
	phi.32      %r1423 <- %phi50(return)
	ret.32      %r1422


f_parser:
.L283:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r1424 <- 0[ud]
	ptrcast.64* %r1425 <- (64) %r1424
	store.64*   %r1425 -> 0[p]
	load.64*    %r1426 <- 0[L]
	load.64*    %r1427 <- 32[%r1426]
	load.64     %r1428 <- 120[%r1427]
	load.64*    %r1429 <- 0[L]
	load.64*    %r1430 <- 32[%r1429]
	load.64     %r1431 <- 112[%r1430]
	setae.32    %r1432 <- %r1428, %r1431
	cbr         %r1432, .L284, .L285

.L284:
	load.64*    %r1433 <- 0[L]
	push.64*    %r1433
	call        luaC_step
	br          .L285

.L285:
	load.64*    %r1434 <- 0[L]
	load.64*    %r1435 <- 0[p]
	load.64*    %r1436 <- 0[%r1435]
	load.64*    %r1437 <- 0[p]
	add.64*     %r1438 <- %r1437, $8
	load.64*    %r1439 <- 0[p]
	load.64*    %r1440 <- 32[%r1439]
	push.64*    %r1434
	push.64*    %r1436
	push.64*    %r1438
	push.64*    %r1440
	call.64*    %r1441 <- luaY_parser
	store.64*   %r1441 -> 0[tf]
	load.64*    %r1442 <- 0[L]
	load.64*    %r1443 <- 0[tf]
	load.8      %r1444 <- 112[%r1443]
	cast.32     %r1445 <- (8) %r1444
	load.64*    %r1446 <- 0[L]
	load.64*    %r1447 <- 120[%r1446]
	add.64*     %r1448 <- %r1447, $0
	push.64*    %r1442
	push.32     %r1445
	push.64*    %r1448
	call.64*    %r1449 <- luaF_newLclosure
	store.64*   %r1449 -> 0[cl]
	load.64*    %r1450 <- 0[tf]
	load.64*    %r1451 <- 0[cl]
	store.64*   %r1450 -> 32[%r1451]
	store.32    $0 -> 0[i]
	br          .L289

.L289:
	load.32     %r1452 <- 0[i]
	load.64*    %r1453 <- 0[tf]
	load.8      %r1454 <- 112[%r1453]
	cast.32     %r1455 <- (8) %r1454
	setlt.32    %r1456 <- %r1452, %r1455
	cbr         %r1456, .L286, .L288

.L286:
	load.64*    %r1457 <- 0[L]
	push.64*    %r1457
	call.64*    %r1458 <- luaF_newupval
	load.64*    %r1459 <- 0[cl]
	add.64*     %r1460 <- %r1459, $0
	add.64*     %r1461 <- %r1460, $40
	load.32     %r1462 <- 0[i]
	scast.64    %r1463 <- (32) %r1462
	muls.64     %r1464 <- %r1463, $8
	add.64*     %r1465 <- %r1461, %r1464
	store.64*   %r1458 -> 0[%r1465]
	br          .L287

.L287:
	load.32     %r1466 <- 0[i]
	add.32      %r1467 <- %r1466, $1
	store.32    %r1467 -> 0[i]
	br          .L289

.L288:
	load.64*    %r1468 <- 0[L]
	load.64*    %r1469 <- 16[%r1468]
	store.64*   %r1469 -> 0[i_o]
	load.64*    %r1470 <- 0[cl]
	ptrcast.64* %r1471 <- (64) %r1470
	load.64*    %r1472 <- 0[i_o]
	store.64*   %r1471 -> 0[%r1472]
	load.64*    %r1473 <- 0[i_o]
	store.32    $6 -> 8[%r1473]
	load.64*    %r1474 <- 0[L]
	load.64*    %r1475 <- 56[%r1474]
	ptrcast.64* %r1476 <- (64) %r1475
	load.64*    %r1477 <- 0[L]
	load.64*    %r1478 <- 16[%r1477]
	ptrcast.64* %r1479 <- (64) %r1478
	sub.64      %r1480 <- %r1476, %r1479
	setle.32    %r1481 <- %r1480, $16
	cbr         %r1481, .L290, .L291

.L290:
	load.64*    %r1482 <- 0[L]
	push.64*    %r1482
	push.32     $1
	call        luaD_growstack
	br          .L292

.L291:
	br          .L292

.L292:
	load.64*    %r1483 <- 0[L]
	load.64*    %r1484 <- 16[%r1483]
	add.64*     %r1485 <- %r1484, $16
	store.64*   %r1485 -> 16[%r1483]
	br          .L293

.L293:
	ret


luaD_protectedparser:
.L294:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[name]
	load.64*    %r1486 <- 0[z]
	store.64*   %r1486 -> 0[p]
	load.64*    %r1487 <- 0[name]
	store.64*   %r1487 -> 32[p]
	store.64*   $0 -> 8[p]
	store.64    $0 -> 24[p]
	load.64*    %r1488 <- 0[L]
	symaddr.64* %r1489 <- f_parser
	symaddr.64* %r1490 <- p
	cast.64*    %r1491 <- (64) %r1490
	load.64*    %r1492 <- 0[L]
	load.64*    %r1493 <- 16[%r1492]
	ptrcast.64* %r1494 <- (64) %r1493
	load.64*    %r1495 <- 0[L]
	load.64*    %r1496 <- 64[%r1495]
	ptrcast.64* %r1497 <- (64) %r1496
	sub.64      %r1498 <- %r1494, %r1497
	load.64*    %r1499 <- 0[L]
	load.64     %r1500 <- 176[%r1499]
	push.64*    %r1488
	push.64*    %r1489
	push.64*    %r1491
	push.64     %r1498
	push.64     %r1500
	call.32     %r1501 <- luaD_pcall
	store.32    %r1501 -> 0[status]
	load.64*    %r1502 <- 0[L]
	load.64*    %r1503 <- 8[p]
	cast.64*    %r1504 <- (64) %r1503
	load.64     %r1505 <- 24[p]
	mulu.64     %r1506 <- %r1505, $1
	push.64*    %r1502
	push.64*    %r1504
	push.64     %r1506
	push.64     $0
	call.64*    %r1507 <- luaM_realloc_
	ptrcast.64* %r1508 <- (64) %r1507
	store.64*   %r1508 -> 8[p]
	store.64    $0 -> 24[p]
	load.32     %r1509 <- 0[status]
	phisrc.32   %phi51(return) <- %r1509
	br          .L295

.L295:
	phi.32      %r1510 <- %phi51(return)
	ret.32      %r1509


luaS_resize:
.L296:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r1511 <- 0[L]
	load.64*    %r1512 <- 32[%r1511]
	load.8      %r1513 <- 33[%r1512]
	cast.32     %r1514 <- (8) %r1513
	seteq.32    %r1515 <- %r1514, $2
	cbr         %r1515, .L297, .L298

.L297:
	br          .L299

.L298:
	load.32     %r1516 <- 0[newsize]
	add.32      %r1517 <- %r1516, $1
	scast.64    %r1518 <- (32) %r1517
	setbe.32    %r1519 <- %r1518, $0x1fffffffffffffff
	cbr         %r1519, .L300, .L301

.L300:
	load.64*    %r1520 <- 0[L]
	load.32     %r1521 <- 0[newsize]
	scast.64    %r1522 <- (32) %r1521
	mulu.64     %r1523 <- %r1522, $8
	push.64*    %r1520
	push.64*    $0
	push.64     $0
	push.64     %r1523
	call.64*    %r1524 <- luaM_realloc_
	phisrc.64*  %phi52 <- %r1524
	br          .L302

.L301:
	load.64*    %r1525 <- 0[L]
	push.64*    %r1525
	call.64*    %r1526 <- luaM_toobig
	cast.64*    %r1527 <- (64) %r1526
	phisrc.64*  %phi53 <- %r1527
	br          .L302

.L302:
	phi.64*     %r1528 <- %phi52, %phi53
	ptrcast.64* %r1529 <- (64) %r1528
	store.64*   %r1529 -> 0[newhash]
	load.64*    %r1530 <- 0[L]
	load.64*    %r1531 <- 32[%r1530]
	add.64*     %r1532 <- %r1531, $0
	store.64*   %r1532 -> 0[tb]
	store.32    $0 -> 0[i]
	br          .L306

.L306:
	load.32     %r1533 <- 0[i]
	load.32     %r1534 <- 0[newsize]
	setlt.32    %r1535 <- %r1533, %r1534
	cbr         %r1535, .L303, .L305

.L303:
	load.64*    %r1536 <- 0[newhash]
	load.32     %r1537 <- 0[i]
	scast.64    %r1538 <- (32) %r1537
	muls.64     %r1539 <- %r1538, $8
	add.64*     %r1540 <- %r1536, %r1539
	store.64*   $0 -> 0[%r1540]
	br          .L304

.L304:
	load.32     %r1541 <- 0[i]
	add.32      %r1542 <- %r1541, $1
	store.32    %r1542 -> 0[i]
	br          .L306

.L305:
	store.32    $0 -> 0[i]
	br          .L310

.L310:
	load.32     %r1543 <- 0[i]
	load.64*    %r1544 <- 0[tb]
	load.32     %r1545 <- 12[%r1544]
	setlt.32    %r1546 <- %r1543, %r1545
	cbr         %r1546, .L307, .L309

.L307:
	load.64*    %r1547 <- 0[tb]
	load.64*    %r1548 <- 0[%r1547]
	load.32     %r1549 <- 0[i]
	scast.64    %r1550 <- (32) %r1549
	muls.64     %r1551 <- %r1550, $8
	add.64*     %r1552 <- %r1548, %r1551
	load.64*    %r1553 <- 0[%r1552]
	store.64*   %r1553 -> 0[p]
	br          .L314

.L314:
	load.64*    %r1554 <- 0[p]
	cbr         %r1554, .L311, .L313

.L311:
	load.64*    %r1555 <- 0[p]
	load.64*    %r1556 <- 0[%r1555]
	store.64*   %r1556 -> 0[next]
	load.64*    %r1557 <- 0[p]
	load.32     %r1558 <- 12[%r1557]
	store.32    %r1558 -> 0[h]
	load.32     %r1559 <- 0[h]
	load.32     %r1560 <- 0[newsize]
	sub.32      %r1561 <- %r1560, $1
	scast.32    %r1562 <- (32) %r1561
	and.32      %r1563 <- %r1559, %r1562
	cast.32     %r1564 <- (32) %r1563
	store.32    %r1564 -> 0[h1]
	load.64*    %r1565 <- 0[newhash]
	load.32     %r1566 <- 0[h1]
	scast.64    %r1567 <- (32) %r1566
	muls.64     %r1568 <- %r1567, $8
	add.64*     %r1569 <- %r1565, %r1568
	load.64*    %r1570 <- 0[%r1569]
	load.64*    %r1571 <- 0[p]
	store.64*   %r1570 -> 0[%r1571]
	load.64*    %r1572 <- 0[p]
	load.64*    %r1573 <- 0[newhash]
	load.32     %r1574 <- 0[h1]
	scast.64    %r1575 <- (32) %r1574
	muls.64     %r1576 <- %r1575, $8
	add.64*     %r1577 <- %r1573, %r1576
	store.64*   %r1572 -> 0[%r1577]
	load.64*    %r1578 <- 0[next]
	store.64*   %r1578 -> 0[p]
	br          .L312

.L312:
	br          .L314

.L313:
	br          .L308

.L308:
	load.32     %r1579 <- 0[i]
	add.32      %r1580 <- %r1579, $1
	store.32    %r1580 -> 0[i]
	br          .L310

.L309:
	load.64*    %r1581 <- 0[L]
	load.64*    %r1582 <- 0[tb]
	load.64*    %r1583 <- 0[%r1582]
	cast.64*    %r1584 <- (64) %r1583
	load.64*    %r1585 <- 0[tb]
	load.32     %r1586 <- 12[%r1585]
	scast.64    %r1587 <- (32) %r1586
	mulu.64     %r1588 <- %r1587, $8
	push.64*    %r1581
	push.64*    %r1584
	push.64     %r1588
	push.64     $0
	call.64*    %r1589 <- luaM_realloc_
	load.32     %r1590 <- 0[newsize]
	load.64*    %r1591 <- 0[tb]
	store.32    %r1590 -> 12[%r1591]
	load.64*    %r1592 <- 0[newhash]
	load.64*    %r1593 <- 0[tb]
	store.64*   %r1592 -> 0[%r1593]
	br          .L299

.L299:
	ret


newlstr:
.L315:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	store.32    %arg4 -> 0[h]
	load.64     %r1594 <- 0[l]
	add.64      %r1595 <- %r1594, $1
	seta.32     %r1596 <- %r1595, $-27
	cbr         %r1596, .L316, .L317

.L316:
	load.64*    %r1597 <- 0[L]
	push.64*    %r1597
	call.64*    %r1598 <- luaM_toobig
	br          .L317

.L317:
	load.64*    %r1599 <- 0[L]
	load.64     %r1600 <- 0[l]
	add.64      %r1601 <- %r1600, $1
	mulu.64     %r1602 <- %r1601, $1
	add.64      %r1603 <- %r1602, $24
	push.64*    %r1599
	push.64*    $0
	push.64     $0
	push.64     %r1603
	call.64*    %r1604 <- luaM_realloc_
	ptrcast.64* %r1605 <- (64) %r1604
	store.64*   %r1605 -> 0[ts]
	load.64     %r1606 <- 0[l]
	load.64*    %r1607 <- 0[ts]
	store.64    %r1606 -> 16[%r1607]
	load.32     %r1608 <- 0[h]
	load.64*    %r1609 <- 0[ts]
	store.32    %r1608 -> 12[%r1609]
	load.64*    %r1610 <- 0[L]
	load.64*    %r1611 <- 32[%r1610]
	load.8      %r1612 <- 32[%r1611]
	cast.32     %r1613 <- (8) %r1612
	and.32      %r1614 <- %r1613, $3
	scast.8     %r1615 <- (32) %r1614
	load.64*    %r1616 <- 0[ts]
	store.8     %r1615 -> 9[%r1616]
	load.64*    %r1617 <- 0[ts]
	store.8     $4 -> 8[%r1617]
	load.64*    %r1618 <- 0[ts]
	store.8     $0 -> 10[%r1618]
	load.64*    %r1619 <- 0[ts]
	add.64*     %r1620 <- %r1619, $24
	cast.64*    %r1621 <- (64) %r1620
	load.64*    %r1622 <- 0[str]
	cast.64*    %r1623 <- (64) %r1622
	load.64     %r1624 <- 0[l]
	mulu.64     %r1625 <- %r1624, $1
	push.64*    %r1621
	push.64*    %r1623
	push.64     %r1625
	call.64*    %r1626 <- memcpy
	load.64*    %r1627 <- 0[ts]
	add.64*     %r1628 <- %r1627, $24
	ptrcast.64* %r1629 <- (64) %r1628
	load.64     %r1630 <- 0[l]
	add.64*     %r1631 <- %r1629, %r1630
	store.8     $0 -> 0[%r1631]
	load.64*    %r1632 <- 0[L]
	load.64*    %r1633 <- 32[%r1632]
	add.64*     %r1634 <- %r1633, $0
	store.64*   %r1634 -> 0[tb]
	load.32     %r1635 <- 0[h]
	load.64*    %r1636 <- 0[tb]
	load.32     %r1637 <- 12[%r1636]
	sub.32      %r1638 <- %r1637, $1
	scast.32    %r1639 <- (32) %r1638
	and.32      %r1640 <- %r1635, %r1639
	cast.32     %r1641 <- (32) %r1640
	scast.32    %r1642 <- (32) %r1641
	store.32    %r1642 -> 0[h]
	load.64*    %r1643 <- 0[tb]
	load.64*    %r1644 <- 0[%r1643]
	load.32     %r1645 <- 0[h]
	cast.64     %r1646 <- (32) %r1645
	muls.64     %r1647 <- %r1646, $8
	add.64*     %r1648 <- %r1644, %r1647
	load.64*    %r1649 <- 0[%r1648]
	load.64*    %r1650 <- 0[ts]
	store.64*   %r1649 -> 0[%r1650]
	load.64*    %r1651 <- 0[ts]
	ptrcast.64* %r1652 <- (64) %r1651
	load.64*    %r1653 <- 0[tb]
	load.64*    %r1654 <- 0[%r1653]
	load.32     %r1655 <- 0[h]
	cast.64     %r1656 <- (32) %r1655
	muls.64     %r1657 <- %r1656, $8
	add.64*     %r1658 <- %r1654, %r1657
	store.64*   %r1652 -> 0[%r1658]
	load.64*    %r1659 <- 0[tb]
	load.32     %r1660 <- 8[%r1659]
	add.32      %r1661 <- %r1660, $1
	store.32    %r1661 -> 8[%r1659]
	load.64*    %r1662 <- 0[tb]
	load.32     %r1663 <- 8[%r1662]
	load.64*    %r1664 <- 0[tb]
	load.32     %r1665 <- 12[%r1664]
	scast.32    %r1666 <- (32) %r1665
	seta.32     %r1667 <- %r1663, %r1666
	cbr         %r1667, .L320, .L319

.L320:
	load.64*    %r1668 <- 0[tb]
	load.32     %r1669 <- 12[%r1668]
	setle.32    %r1670 <- %r1669, $0x3ffffffe
	cbr         %r1670, .L318, .L319

.L318:
	load.64*    %r1671 <- 0[L]
	load.64*    %r1672 <- 0[tb]
	load.32     %r1673 <- 12[%r1672]
	muls.32     %r1674 <- %r1673, $2
	push.64*    %r1671
	push.32     %r1674
	call        luaS_resize
	br          .L319

.L319:
	load.64*    %r1675 <- 0[ts]
	phisrc.64*  %phi54(return) <- %r1675
	br          .L321

.L321:
	phi.64*     %r1676 <- %phi54(return)
	ret.64*     %r1675


luaS_newlstr:
.L322:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	load.64     %r1677 <- 0[l]
	cast.32     %r1678 <- (64) %r1677
	store.32    %r1678 -> 0[h]
	load.64     %r1679 <- 0[l]
	lsr.64      %r1680 <- %r1679, $5
	add.64      %r1681 <- %r1680, $1
	store.64    %r1681 -> 0[step]
	load.64     %r1682 <- 0[l]
	store.64    %r1682 -> 0[l1]
	br          .L326

.L326:
	load.64     %r1683 <- 0[l1]
	load.64     %r1684 <- 0[step]
	setae.32    %r1685 <- %r1683, %r1684
	cbr         %r1685, .L323, .L325

.L323:
	load.32     %r1686 <- 0[h]
	load.32     %r1687 <- 0[h]
	shl.32      %r1688 <- %r1687, $5
	load.32     %r1689 <- 0[h]
	lsr.32      %r1690 <- %r1689, $2
	add.32      %r1691 <- %r1688, %r1690
	load.64*    %r1692 <- 0[str]
	load.64     %r1693 <- 0[l1]
	sub.64      %r1694 <- %r1693, $1
	add.64*     %r1695 <- %r1692, %r1694
	load.8      %r1696 <- 0[%r1695]
	scast.8     %r1697 <- (8) %r1696
	cast.32     %r1698 <- (8) %r1697
	add.32      %r1699 <- %r1691, %r1698
	xor.32      %r1700 <- %r1686, %r1699
	store.32    %r1700 -> 0[h]
	br          .L324

.L324:
	load.64     %r1701 <- 0[step]
	load.64     %r1702 <- 0[l1]
	cast.64     %r1703 <- (64) %r1702
	sub.64      %r1704 <- %r1703, %r1701
	cast.64     %r1705 <- (64) %r1704
	store.64    %r1705 -> 0[l1]
	br          .L326

.L325:
	load.64*    %r1706 <- 0[L]
	load.64*    %r1707 <- 32[%r1706]
	load.64*    %r1708 <- 0[%r1707]
	load.32     %r1709 <- 0[h]
	load.64*    %r1710 <- 0[L]
	load.64*    %r1711 <- 32[%r1710]
	load.32     %r1712 <- 12[%r1711]
	sub.32      %r1713 <- %r1712, $1
	scast.32    %r1714 <- (32) %r1713
	and.32      %r1715 <- %r1709, %r1714
	cast.32     %r1716 <- (32) %r1715
	scast.64    %r1717 <- (32) %r1716
	muls.64     %r1718 <- %r1717, $8
	add.64*     %r1719 <- %r1708, %r1718
	load.64*    %r1720 <- 0[%r1719]
	store.64*   %r1720 -> 0[o]
	br          .L330

.L330:
	load.64*    %r1721 <- 0[o]
	setne.32    %r1722 <- %r1721, $0
	cbr         %r1722, .L327, .L329

.L327:
	load.64*    %r1723 <- 0[o]
	add.64*     %r1724 <- %r1723, $0
	store.64*   %r1724 -> 0[ts]
	load.64*    %r1725 <- 0[ts]
	load.64     %r1726 <- 16[%r1725]
	load.64     %r1727 <- 0[l]
	seteq.32    %r1728 <- %r1726, %r1727
	setne.1     %r1729 <- %r1728, $0
	load.64*    %r1730 <- 0[str]
	cast.64*    %r1731 <- (64) %r1730
	load.64*    %r1732 <- 0[ts]
	add.64*     %r1733 <- %r1732, $24
	ptrcast.64* %r1734 <- (64) %r1733
	cast.64*    %r1735 <- (64) %r1734
	load.64     %r1736 <- 0[l]
	push.64*    %r1731
	push.64*    %r1735
	push.64     %r1736
	call.32     %r1737 <- memcmp
	seteq.32    %r1738 <- %r1737, $0
	setne.1     %r1739 <- %r1738, $0
	and-bool.1  %r1740 <- %r1729, %r1739
	cast.32     %r1741 <- (1) %r1740
	cbr         %r1741, .L331, .L332

.L331:
	load.64*    %r1742 <- 0[o]
	load.8      %r1743 <- 9[%r1742]
	cast.32     %r1744 <- (8) %r1743
	load.64*    %r1745 <- 0[L]
	load.64*    %r1746 <- 32[%r1745]
	load.8      %r1747 <- 32[%r1746]
	cast.32     %r1748 <- (8) %r1747
	xor.32      %r1749 <- %r1748, $3
	and.32      %r1750 <- %r1744, %r1749
	and.32      %r1751 <- %r1750, $3
	cbr         %r1751, .L333, .L334

.L333:
	load.64*    %r1752 <- 0[o]
	load.8      %r1753 <- 9[%r1752]
	cast.32     %r1754 <- (8) %r1753
	xor.32      %r1755 <- %r1754, $3
	scast.8     %r1756 <- (32) %r1755
	store.8     %r1756 -> 9[%r1752]
	br          .L334

.L334:
	load.64*    %r1757 <- 0[ts]
	phisrc.64*  %phi55(return) <- %r1757
	br          .L335

.L332:
	br          .L328

.L328:
	load.64*    %r1759 <- 0[o]
	load.64*    %r1760 <- 0[%r1759]
	store.64*   %r1760 -> 0[o]
	br          .L330

.L329:
	load.64*    %r1761 <- 0[L]
	load.64*    %r1762 <- 0[str]
	load.64     %r1763 <- 0[l]
	load.32     %r1764 <- 0[h]
	push.64*    %r1761
	push.64*    %r1762
	push.64     %r1763
	push.32     %r1764
	call.64*    %r1765 <- newlstr
	phisrc.64*  %phi56(return) <- %r1765
	br          .L335

.L335:
	phi.64*     %r1758 <- %phi55(return), %phi56(return)
	ret.64*     %r1758


luaS_newudata:
.L336:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[s]
	store.64*   %arg3 -> 0[e]
	load.64     %r1766 <- 0[s]
	seta.32     %r1767 <- %r1766, $-43
	cbr         %r1767, .L337, .L338

.L337:
	load.64*    %r1768 <- 0[L]
	push.64*    %r1768
	call.64*    %r1769 <- luaM_toobig
	br          .L338

.L338:
	load.64*    %r1770 <- 0[L]
	load.64     %r1771 <- 0[s]
	add.64      %r1772 <- %r1771, $40
	push.64*    %r1770
	push.64*    $0
	push.64     $0
	push.64     %r1772
	call.64*    %r1773 <- luaM_realloc_
	ptrcast.64* %r1774 <- (64) %r1773
	store.64*   %r1774 -> 0[u]
	load.64*    %r1775 <- 0[L]
	load.64*    %r1776 <- 32[%r1775]
	load.8      %r1777 <- 32[%r1776]
	cast.32     %r1778 <- (8) %r1777
	and.32      %r1779 <- %r1778, $3
	scast.8     %r1780 <- (32) %r1779
	load.64*    %r1781 <- 0[u]
	store.8     %r1780 -> 9[%r1781]
	load.64*    %r1782 <- 0[u]
	store.8     $7 -> 8[%r1782]
	load.64     %r1783 <- 0[s]
	load.64*    %r1784 <- 0[u]
	store.64    %r1783 -> 32[%r1784]
	load.64*    %r1785 <- 0[u]
	store.64*   $0 -> 16[%r1785]
	load.64*    %r1786 <- 0[e]
	load.64*    %r1787 <- 0[u]
	store.64*   %r1786 -> 24[%r1787]
	load.64*    %r1788 <- 0[L]
	load.64*    %r1789 <- 32[%r1788]
	load.64*    %r1790 <- 176[%r1789]
	load.64*    %r1791 <- 0[%r1790]
	load.64*    %r1792 <- 0[u]
	store.64*   %r1791 -> 0[%r1792]
	load.64*    %r1793 <- 0[u]
	ptrcast.64* %r1794 <- (64) %r1793
	load.64*    %r1795 <- 0[L]
	load.64*    %r1796 <- 32[%r1795]
	load.64*    %r1797 <- 176[%r1796]
	store.64*   %r1794 -> 0[%r1797]
	load.64*    %r1798 <- 0[u]
	phisrc.64*  %phi57(return) <- %r1798
	br          .L339

.L339:
	phi.64*     %r1799 <- %phi57(return)
	ret.64*     %r1798


hashnum:
.L340:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.f64   %arg2 -> 0[n]
	load.f64    %r1800 <- 0[n]
	set.f64     %r1801 <- 0.000000
	seteq.32    %r1802 <- %r1800, %r1801
	cbr         %r1802, .L341, .L342

.L341:
	load.64*    %r1803 <- 0[t]
	load.64*    %r1804 <- 32[%r1803]
	add.64*     %r1805 <- %r1804, $0
	phisrc.64*  %phi58(return) <- %r1805
	br          .L343

.L342:
	symaddr.64* %r1807 <- a
	cast.64*    %r1808 <- (64) %r1807
	symaddr.64* %r1809 <- n
	cast.64*    %r1810 <- (64) %r1809
	push.64*    %r1808
	push.64*    %r1810
	push.64     $8
	call.64*    %r1811 <- memcpy
	store.32    $1 -> 0[i]
	br          .L347

.L347:
	load.32     %r1812 <- 0[i]
	setlt.32    %r1813 <- %r1812, $2
	cbr         %r1813, .L344, .L346

.L344:
	symaddr.64* %r1814 <- a
	load.32     %r1815 <- 0[i]
	scast.64    %r1816 <- (32) %r1815
	muls.64     %r1817 <- %r1816, $4
	add.64*     %r1818 <- %r1814, %r1817
	load.32     %r1819 <- 0[%r1818]
	load.32     %r1820 <- 0[a]
	cast.32     %r1821 <- (32) %r1820
	add.32      %r1822 <- %r1821, %r1819
	cast.32     %r1823 <- (32) %r1822
	store.32    %r1823 -> 0[a]
	br          .L345

.L345:
	load.32     %r1824 <- 0[i]
	add.32      %r1825 <- %r1824, $1
	store.32    %r1825 -> 0[i]
	br          .L347

.L346:
	load.64*    %r1826 <- 0[t]
	load.64*    %r1827 <- 32[%r1826]
	load.32     %r1828 <- 0[a]
	cast.64     %r1829 <- (32) %r1828
	load.64*    %r1830 <- 0[t]
	load.8      %r1831 <- 11[%r1830]
	cast.32     %r1832 <- (8) %r1831
	shl.64      %r1833 <- $1, %r1832
	sub.64      %r1834 <- %r1833, $1
	or.64       %r1835 <- %r1834, $1
	modu.64     %r1836 <- %r1829, %r1835
	muls.64     %r1837 <- %r1836, $40
	add.64*     %r1838 <- %r1827, %r1837
	phisrc.64*  %phi59(return) <- %r1838
	br          .L343

.L343:
	phi.64*     %r1806 <- %phi58(return), %phi59(return)
	ret.64*     %r1806


mainposition:
.L348:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r1839 <- 0[key]
	load.32     %r1840 <- 8[%r1839]
	switch.32   %r1840, 1 -> .L352, 2 -> .L353, 3 -> .L350, 4 -> .L351, default -> .L354

.L350:
	load.64*    %r1841 <- 0[t]
	load.64*    %r1842 <- 0[key]
	load.f64    %r1843 <- 0[%r1842]
	fpcast.f64  %r1844 <- (64) %r1843
	push.64*    %r1841
	push.f64    %r1844
	call.64*    %r1845 <- hashnum
	phisrc.64*  %phi60(return) <- %r1845
	br          .L355

.L351:
	load.64*    %r1847 <- 0[t]
	load.64*    %r1848 <- 32[%r1847]
	load.64*    %r1849 <- 0[key]
	load.64*    %r1850 <- 0[%r1849]
	load.32     %r1851 <- 12[%r1850]
	cast.64     %r1852 <- (32) %r1851
	load.64*    %r1853 <- 0[t]
	load.8      %r1854 <- 11[%r1853]
	cast.32     %r1855 <- (8) %r1854
	shl.64      %r1856 <- $1, %r1855
	sub.64      %r1857 <- %r1856, $1
	and.64      %r1858 <- %r1852, %r1857
	cast.32     %r1859 <- (64) %r1858
	scast.64    %r1860 <- (32) %r1859
	muls.64     %r1861 <- %r1860, $40
	add.64*     %r1862 <- %r1848, %r1861
	phisrc.64*  %phi61(return) <- %r1862
	br          .L355

.L352:
	load.64*    %r1863 <- 0[t]
	load.64*    %r1864 <- 32[%r1863]
	load.64*    %r1865 <- 0[key]
	load.32     %r1866 <- 0[%r1865]
	scast.64    %r1867 <- (32) %r1866
	load.64*    %r1868 <- 0[t]
	load.8      %r1869 <- 11[%r1868]
	cast.32     %r1870 <- (8) %r1869
	shl.64      %r1871 <- $1, %r1870
	sub.64      %r1872 <- %r1871, $1
	and.64      %r1873 <- %r1867, %r1872
	cast.32     %r1874 <- (64) %r1873
	scast.64    %r1875 <- (32) %r1874
	muls.64     %r1876 <- %r1875, $40
	add.64*     %r1877 <- %r1864, %r1876
	phisrc.64*  %phi62(return) <- %r1877
	br          .L355

.L353:
	load.64*    %r1878 <- 0[t]
	load.64*    %r1879 <- 32[%r1878]
	load.64*    %r1880 <- 0[key]
	load.64*    %r1881 <- 0[%r1880]
	cast.64     %r1882 <- (64) %r1881
	cast.32     %r1883 <- (64) %r1882
	cast.64     %r1884 <- (32) %r1883
	load.64*    %r1885 <- 0[t]
	load.8      %r1886 <- 11[%r1885]
	cast.32     %r1887 <- (8) %r1886
	shl.64      %r1888 <- $1, %r1887
	sub.64      %r1889 <- %r1888, $1
	or.64       %r1890 <- %r1889, $1
	modu.64     %r1891 <- %r1884, %r1890
	muls.64     %r1892 <- %r1891, $40
	add.64*     %r1893 <- %r1879, %r1892
	phisrc.64*  %phi63(return) <- %r1893
	br          .L355

.L354:
	load.64*    %r1894 <- 0[t]
	load.64*    %r1895 <- 32[%r1894]
	load.64*    %r1896 <- 0[key]
	load.64*    %r1897 <- 0[%r1896]
	cast.64     %r1898 <- (64) %r1897
	cast.32     %r1899 <- (64) %r1898
	cast.64     %r1900 <- (32) %r1899
	load.64*    %r1901 <- 0[t]
	load.8      %r1902 <- 11[%r1901]
	cast.32     %r1903 <- (8) %r1902
	shl.64      %r1904 <- $1, %r1903
	sub.64      %r1905 <- %r1904, $1
	or.64       %r1906 <- %r1905, $1
	modu.64     %r1907 <- %r1900, %r1906
	muls.64     %r1908 <- %r1907, $40
	add.64*     %r1909 <- %r1895, %r1908
	phisrc.64*  %phi64(return) <- %r1909
	br          .L355

.L355:
	phi.64*     %r1846 <- %phi60(return), %phi61(return), %phi62(return), %phi63(return), %phi64(return)
	ret.64*     %r1846


arrayindex:
.L356:
	<entry-point>
	store.64*   %arg1 -> 0[key]
	load.64*    %r1910 <- 0[key]
	load.32     %r1911 <- 8[%r1910]
	scast.32    %r1912 <- (32) %r1911
	seteq.32    %r1913 <- %r1912, $3
	cbr         %r1913, .L357, .L358

.L357:
	load.64*    %r1914 <- 0[key]
	load.f64    %r1915 <- 0[%r1914]
	fpcast.f64  %r1916 <- (64) %r1915
	store.f64   %r1916 -> 0[n]
	load.f64    %r1917 <- 0[n]
	cast.32     %r1918 <- (64) %r1917
	store.32    %r1918 -> 0[k]
	load.32     %r1919 <- 0[k]
	fpcast.f64  %r1920 <- (32) %r1919
	load.f64    %r1921 <- 0[n]
	seteq.32    %r1922 <- %r1920, %r1921
	cbr         %r1922, .L359, .L360

.L359:
	load.32     %r1923 <- 0[k]
	phisrc.32   %phi65(return) <- %r1923
	br          .L361

.L360:
	br          .L358

.L358:
	phisrc.32   %phi66(return) <- $0xffffffff
	br          .L361

.L361:
	phi.32      %r1924 <- %phi65(return), %phi66(return)
	ret.32      %r1924


findindex:
.L362:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r1925 <- 0[key]
	load.32     %r1926 <- 8[%r1925]
	seteq.32    %r1927 <- %r1926, $0
	cbr         %r1927, .L363, .L364

.L363:
	phisrc.32   %phi67(return) <- $0xffffffff
	br          .L365

.L364:
	load.64*    %r1929 <- 0[key]
	push.64*    %r1929
	call.32     %r1930 <- arrayindex
	store.32    %r1930 -> 0[i]
	load.32     %r1931 <- 0[i]
	setlt.32    %r1932 <- $0, %r1931
	cbr         %r1932, .L368, .L367

.L368:
	load.32     %r1933 <- 0[i]
	load.64*    %r1934 <- 0[t]
	load.32     %r1935 <- 56[%r1934]
	setle.32    %r1936 <- %r1933, %r1935
	cbr         %r1936, .L366, .L367

.L366:
	load.32     %r1937 <- 0[i]
	sub.32      %r1938 <- %r1937, $1
	phisrc.32   %phi68(return) <- %r1938
	br          .L365

.L367:
	load.64*    %r1939 <- 0[t]
	load.64*    %r1940 <- 0[key]
	push.64*    %r1939
	push.64*    %r1940
	call.64*    %r1941 <- mainposition
	store.64*   %r1941 -> 0[n]
	br          .L370

.L370:
	load.64*    %r1942 <- 0[n]
	add.64*     %r1943 <- %r1942, $16
	add.64*     %r1944 <- %r1943, $0
	load.64*    %r1945 <- 0[key]
	push.64*    %r1944
	push.64*    %r1945
	call.32     %r1946 <- luaO_rawequalObj
	cbr         %r1946, .L373, .L375

.L375:
	load.64*    %r1947 <- 0[n]
	load.32     %r1948 <- 24[%r1947]
	seteq.32    %r1949 <- %r1948, $11
	cbr         %r1949, .L377, .L374

.L377:
	load.64*    %r1950 <- 0[key]
	load.32     %r1951 <- 8[%r1950]
	setge.32    %r1952 <- %r1951, $4
	cbr         %r1952, .L376, .L374

.L376:
	load.64*    %r1953 <- 0[n]
	load.64*    %r1954 <- 16[%r1953]
	load.64*    %r1955 <- 0[key]
	load.64*    %r1956 <- 0[%r1955]
	seteq.32    %r1957 <- %r1954, %r1956
	cbr         %r1957, .L373, .L374

.L373:
	load.64*    %r1958 <- 0[n]
	load.64*    %r1959 <- 0[t]
	load.64*    %r1960 <- 32[%r1959]
	add.64*     %r1961 <- %r1960, $0
	sub.64      %r1962 <- %r1958, %r1961
	divs.64     %r1963 <- %r1962, $40
	scast.32    %r1964 <- (64) %r1963
	store.32    %r1964 -> 0[i]
	load.32     %r1965 <- 0[i]
	load.64*    %r1966 <- 0[t]
	load.32     %r1967 <- 56[%r1966]
	add.32      %r1968 <- %r1965, %r1967
	phisrc.32   %phi69(return) <- %r1968
	br          .L365

.L374:
	load.64*    %r1969 <- 0[n]
	load.64*    %r1970 <- 32[%r1969]
	store.64*   %r1970 -> 0[n]
	br          .L378

.L378:
	br          .L371

.L371:
	load.64*    %r1971 <- 0[n]
	cbr         %r1971, .L370, .L372

.L372:
	load.64*    %r1972 <- 0[L]
	symaddr.64* %r1973 <- <anon symbol:0x1c85630>
	push.64*    %r1972
	push.64*    %r1973
	call        luaG_runerror
	phisrc.32   %phi70(return) <- $0
	br          .L365

.L365:
	phi.32      %r1928 <- %phi67(return), %phi68(return), %phi69(return), %phi70(return)
	ret.32      %r1928


luaH_next:
.L379:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r1974 <- 0[L]
	load.64*    %r1975 <- 0[t]
	load.64*    %r1976 <- 0[key]
	push.64*    %r1974
	push.64*    %r1975
	push.64*    %r1976
	call.32     %r1977 <- findindex
	store.32    %r1977 -> 0[i]
	load.32     %r1978 <- 0[i]
	add.32      %r1979 <- %r1978, $1
	store.32    %r1979 -> 0[i]
	br          .L383

.L383:
	load.32     %r1980 <- 0[i]
	load.64*    %r1981 <- 0[t]
	load.32     %r1982 <- 56[%r1981]
	setlt.32    %r1983 <- %r1980, %r1982
	cbr         %r1983, .L380, .L382

.L380:
	load.64*    %r1984 <- 0[t]
	load.64*    %r1985 <- 24[%r1984]
	load.32     %r1986 <- 0[i]
	scast.64    %r1987 <- (32) %r1986
	muls.64     %r1988 <- %r1987, $16
	add.64*     %r1989 <- %r1985, %r1988
	load.32     %r1990 <- 8[%r1989]
	seteq.32    %r1991 <- %r1990, $0
	cbr         %r1991, .L385, .L384

.L384:
	load.64*    %r1992 <- 0[key]
	store.64*   %r1992 -> 0[i_o]
	load.32     %r1993 <- 0[i]
	add.32      %r1994 <- %r1993, $1
	fpcast.f64  %r1995 <- (32) %r1994
	load.64*    %r1996 <- 0[i_o]
	store.f64   %r1995 -> 0[%r1996]
	load.64*    %r1997 <- 0[i_o]
	store.32    $3 -> 8[%r1997]
	load.64*    %r1998 <- 0[t]
	load.64*    %r1999 <- 24[%r1998]
	load.32     %r2000 <- 0[i]
	scast.64    %r2001 <- (32) %r2000
	muls.64     %r2002 <- %r2001, $16
	add.64*     %r2003 <- %r1999, %r2002
	store.64*   %r2003 -> 0[o2]
	load.64*    %r2004 <- 0[key]
	add.64*     %r2005 <- %r2004, $16
	store.64*   %r2005 -> 0[o1]
	load.64*    %r2006 <- 0[o2]
	load.f64    %r2007 <- 0[%r2006]
	fpcast.f64  %r2008 <- (64) %r2007
	load.64*    %r2009 <- 0[o1]
	store.f64   %r2008 -> 0[%r2009]
	load.64*    %r2010 <- 0[o2]
	load.32     %r2011 <- 8[%r2010]
	scast.32    %r2012 <- (32) %r2011
	load.64*    %r2013 <- 0[o1]
	store.32    %r2012 -> 8[%r2013]
	phisrc.32   %phi71(return) <- $1
	br          .L386

.L385:
	br          .L381

.L381:
	load.32     %r2015 <- 0[i]
	add.32      %r2016 <- %r2015, $1
	store.32    %r2016 -> 0[i]
	br          .L383

.L382:
	load.64*    %r2017 <- 0[t]
	load.32     %r2018 <- 56[%r2017]
	load.32     %r2019 <- 0[i]
	scast.32    %r2020 <- (32) %r2019
	sub.32      %r2021 <- %r2020, %r2018
	scast.32    %r2022 <- (32) %r2021
	store.32    %r2022 -> 0[i]
	br          .L390

.L390:
	load.32     %r2023 <- 0[i]
	load.64*    %r2024 <- 0[t]
	load.8      %r2025 <- 11[%r2024]
	cast.32     %r2026 <- (8) %r2025
	shl.64      %r2027 <- $1, %r2026
	cast.32     %r2028 <- (64) %r2027
	setlt.32    %r2029 <- %r2023, %r2028
	cbr         %r2029, .L387, .L389

.L387:
	load.64*    %r2030 <- 0[t]
	load.64*    %r2031 <- 32[%r2030]
	load.32     %r2032 <- 0[i]
	scast.64    %r2033 <- (32) %r2032
	muls.64     %r2034 <- %r2033, $40
	add.64*     %r2035 <- %r2031, %r2034
	load.32     %r2036 <- 8[%r2035]
	seteq.32    %r2037 <- %r2036, $0
	cbr         %r2037, .L392, .L391

.L391:
	load.64*    %r2038 <- 0[t]
	load.64*    %r2039 <- 32[%r2038]
	load.32     %r2040 <- 0[i]
	scast.64    %r2041 <- (32) %r2040
	muls.64     %r2042 <- %r2041, $40
	add.64*     %r2043 <- %r2039, %r2042
	add.64*     %r2044 <- %r2043, $16
	add.64*     %r2045 <- %r2044, $0
	store.64*   %r2045 -> 0[o2]
	load.64*    %r2046 <- 0[key]
	store.64*   %r2046 -> 0[o1]
	load.64*    %r2047 <- 0[o2]
	load.f64    %r2048 <- 0[%r2047]
	fpcast.f64  %r2049 <- (64) %r2048
	load.64*    %r2050 <- 0[o1]
	store.f64   %r2049 -> 0[%r2050]
	load.64*    %r2051 <- 0[o2]
	load.32     %r2052 <- 8[%r2051]
	scast.32    %r2053 <- (32) %r2052
	load.64*    %r2054 <- 0[o1]
	store.32    %r2053 -> 8[%r2054]
	load.64*    %r2055 <- 0[t]
	load.64*    %r2056 <- 32[%r2055]
	load.32     %r2057 <- 0[i]
	scast.64    %r2058 <- (32) %r2057
	muls.64     %r2059 <- %r2058, $40
	add.64*     %r2060 <- %r2056, %r2059
	add.64*     %r2061 <- %r2060, $0
	store.64*   %r2061 -> 0[o2]
	load.64*    %r2062 <- 0[key]
	add.64*     %r2063 <- %r2062, $16
	store.64*   %r2063 -> 0[o1]
	load.64*    %r2064 <- 0[o2]
	load.f64    %r2065 <- 0[%r2064]
	fpcast.f64  %r2066 <- (64) %r2065
	load.64*    %r2067 <- 0[o1]
	store.f64   %r2066 -> 0[%r2067]
	load.64*    %r2068 <- 0[o2]
	load.32     %r2069 <- 8[%r2068]
	scast.32    %r2070 <- (32) %r2069
	load.64*    %r2071 <- 0[o1]
	store.32    %r2070 -> 8[%r2071]
	phisrc.32   %phi72(return) <- $1
	br          .L386

.L392:
	br          .L388

.L388:
	load.32     %r2072 <- 0[i]
	add.32      %r2073 <- %r2072, $1
	store.32    %r2073 -> 0[i]
	br          .L390

.L389:
	phisrc.32   %phi73(return) <- $0
	br          .L386

.L386:
	phi.32      %r2014 <- %phi71(return), %phi72(return), %phi73(return)
	ret.32      %r2014


computesizes:
.L393:
	<entry-point>
	store.64*   %arg1 -> 0[nums]
	store.64*   %arg2 -> 0[narray]
	store.32    $0 -> 0[a]
	store.32    $0 -> 0[na]
	store.32    $0 -> 0[n]
	store.32    $0 -> 0[i]
	store.32    $1 -> 0[twotoi]
	br          .L397

.L397:
	load.32     %r2074 <- 0[twotoi]
	divs.32     %r2075 <- %r2074, $2
	load.64*    %r2076 <- 0[narray]
	load.32     %r2077 <- 0[%r2076]
	setlt.32    %r2078 <- %r2075, %r2077
	cbr         %r2078, .L394, .L396

.L394:
	load.64*    %r2079 <- 0[nums]
	load.32     %r2080 <- 0[i]
	scast.64    %r2081 <- (32) %r2080
	muls.64     %r2082 <- %r2081, $4
	add.64*     %r2083 <- %r2079, %r2082
	load.32     %r2084 <- 0[%r2083]
	setgt.32    %r2085 <- %r2084, $0
	cbr         %r2085, .L398, .L399

.L398:
	load.64*    %r2086 <- 0[nums]
	load.32     %r2087 <- 0[i]
	scast.64    %r2088 <- (32) %r2087
	muls.64     %r2089 <- %r2088, $4
	add.64*     %r2090 <- %r2086, %r2089
	load.32     %r2091 <- 0[%r2090]
	load.32     %r2092 <- 0[a]
	scast.32    %r2093 <- (32) %r2092
	add.32      %r2094 <- %r2093, %r2091
	scast.32    %r2095 <- (32) %r2094
	store.32    %r2095 -> 0[a]
	load.32     %r2096 <- 0[a]
	load.32     %r2097 <- 0[twotoi]
	divs.32     %r2098 <- %r2097, $2
	setgt.32    %r2099 <- %r2096, %r2098
	cbr         %r2099, .L400, .L401

.L400:
	load.32     %r2100 <- 0[twotoi]
	store.32    %r2100 -> 0[n]
	load.32     %r2101 <- 0[a]
	store.32    %r2101 -> 0[na]
	br          .L401

.L401:
	br          .L399

.L399:
	load.32     %r2102 <- 0[a]
	load.64*    %r2103 <- 0[narray]
	load.32     %r2104 <- 0[%r2103]
	seteq.32    %r2105 <- %r2102, %r2104
	cbr         %r2105, .L402, .L403

.L402:
	br          .L396

.L403:
	br          .L395

.L395:
	load.32     %r2106 <- 0[i]
	add.32      %r2107 <- %r2106, $1
	store.32    %r2107 -> 0[i]
	load.32     %r2108 <- 0[twotoi]
	scast.32    %r2109 <- (32) %r2108
	muls.32     %r2110 <- %r2109, $2
	scast.32    %r2111 <- (32) %r2110
	store.32    %r2111 -> 0[twotoi]
	br          .L397

.L396:
	load.32     %r2112 <- 0[n]
	load.64*    %r2113 <- 0[narray]
	store.32    %r2112 -> 0[%r2113]
	load.32     %r2114 <- 0[na]
	phisrc.32   %phi74(return) <- %r2114
	br          .L404

.L404:
	phi.32      %r2115 <- %phi74(return)
	ret.32      %r2114


countint:
.L405:
	<entry-point>
	store.64*   %arg1 -> 0[key]
	store.64*   %arg2 -> 0[nums]
	load.64*    %r2116 <- 0[key]
	push.64*    %r2116
	call.32     %r2117 <- arrayindex
	store.32    %r2117 -> 0[k]
	load.32     %r2118 <- 0[k]
	setlt.32    %r2119 <- $0, %r2118
	setne.1     %r2120 <- %r2119, $0
	load.32     %r2121 <- 0[k]
	setle.32    %r2122 <- %r2121, $0x40000000
	setne.1     %r2123 <- %r2122, $0
	and-bool.1  %r2124 <- %r2120, %r2123
	cast.32     %r2125 <- (1) %r2124
	cbr         %r2125, .L406, .L407

.L406:
	load.64*    %r2126 <- 0[nums]
	load.32     %r2127 <- 0[k]
	sub.32      %r2128 <- %r2127, $1
	scast.32    %r2129 <- (32) %r2128
	push.32     %r2129
	call.32     %r2130 <- luaO_log2
	add.32      %r2131 <- %r2130, $1
	scast.64    %r2132 <- (32) %r2131
	muls.64     %r2133 <- %r2132, $4
	add.64*     %r2134 <- %r2126, %r2133
	load.32     %r2135 <- 0[%r2134]
	add.32      %r2136 <- %r2135, $1
	store.32    %r2136 -> 0[%r2134]
	phisrc.32   %phi75(return) <- $1
	br          .L408

.L407:
	phisrc.32   %phi76(return) <- $0
	br          .L408

.L408:
	phi.32      %r2137 <- %phi75(return), %phi76(return)
	ret.32      %r2137


numusearray:
.L410:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[nums]
	store.32    $0 -> 0[ause]
	store.32    $1 -> 0[i]
	store.32    $0 -> 0[lg]
	store.32    $1 -> 0[ttlg]
	br          .L414

.L414:
	load.32     %r2138 <- 0[lg]
	setle.32    %r2139 <- %r2138, $30
	cbr         %r2139, .L411, .L413

.L411:
	store.32    $0 -> 0[lc]
	load.32     %r2140 <- 0[ttlg]
	store.32    %r2140 -> 0[lim]
	load.32     %r2141 <- 0[lim]
	load.64*    %r2142 <- 0[t]
	load.32     %r2143 <- 56[%r2142]
	scast.32    %r2144 <- (32) %r2143
	setgt.32    %r2145 <- %r2141, %r2144
	cbr         %r2145, .L415, .L416

.L415:
	load.64*    %r2146 <- 0[t]
	load.32     %r2147 <- 56[%r2146]
	scast.32    %r2148 <- (32) %r2147
	store.32    %r2148 -> 0[lim]
	load.32     %r2149 <- 0[i]
	load.32     %r2150 <- 0[lim]
	setgt.32    %r2151 <- %r2149, %r2150
	cbr         %r2151, .L417, .L418

.L417:
	br          .L413

.L418:
	br          .L416

.L416:
	br          .L422

.L422:
	load.32     %r2152 <- 0[i]
	load.32     %r2153 <- 0[lim]
	setle.32    %r2154 <- %r2152, %r2153
	cbr         %r2154, .L419, .L421

.L419:
	load.64*    %r2155 <- 0[t]
	load.64*    %r2156 <- 24[%r2155]
	load.32     %r2157 <- 0[i]
	sub.32      %r2158 <- %r2157, $1
	scast.64    %r2159 <- (32) %r2158
	muls.64     %r2160 <- %r2159, $16
	add.64*     %r2161 <- %r2156, %r2160
	load.32     %r2162 <- 8[%r2161]
	seteq.32    %r2163 <- %r2162, $0
	cbr         %r2163, .L424, .L423

.L423:
	load.32     %r2164 <- 0[lc]
	add.32      %r2165 <- %r2164, $1
	store.32    %r2165 -> 0[lc]
	br          .L424

.L424:
	br          .L420

.L420:
	load.32     %r2166 <- 0[i]
	add.32      %r2167 <- %r2166, $1
	store.32    %r2167 -> 0[i]
	br          .L422

.L421:
	load.32     %r2168 <- 0[lc]
	load.64*    %r2169 <- 0[nums]
	load.32     %r2170 <- 0[lg]
	scast.64    %r2171 <- (32) %r2170
	muls.64     %r2172 <- %r2171, $4
	add.64*     %r2173 <- %r2169, %r2172
	load.32     %r2174 <- 0[%r2173]
	scast.32    %r2175 <- (32) %r2174
	add.32      %r2176 <- %r2175, %r2168
	scast.32    %r2177 <- (32) %r2176
	store.32    %r2177 -> 0[%r2173]
	load.32     %r2178 <- 0[lc]
	load.32     %r2179 <- 0[ause]
	scast.32    %r2180 <- (32) %r2179
	add.32      %r2181 <- %r2180, %r2178
	scast.32    %r2182 <- (32) %r2181
	store.32    %r2182 -> 0[ause]
	br          .L412

.L412:
	load.32     %r2183 <- 0[lg]
	add.32      %r2184 <- %r2183, $1
	store.32    %r2184 -> 0[lg]
	load.32     %r2185 <- 0[ttlg]
	scast.32    %r2186 <- (32) %r2185
	muls.32     %r2187 <- %r2186, $2
	scast.32    %r2188 <- (32) %r2187
	store.32    %r2188 -> 0[ttlg]
	br          .L414

.L413:
	load.32     %r2189 <- 0[ause]
	phisrc.32   %phi77(return) <- %r2189
	br          .L425

.L425:
	phi.32      %r2190 <- %phi77(return)
	ret.32      %r2189


numusehash:
.L426:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[nums]
	store.64*   %arg3 -> 0[pnasize]
	store.32    $0 -> 0[totaluse]
	store.32    $0 -> 0[ause]
	load.64*    %r2191 <- 0[t]
	load.8      %r2192 <- 11[%r2191]
	cast.32     %r2193 <- (8) %r2192
	shl.64      %r2194 <- $1, %r2193
	cast.32     %r2195 <- (64) %r2194
	store.32    %r2195 -> 0[i]
	br          .L430

.L430:
	load.32     %r2196 <- 0[i]
	sub.32      %r2197 <- %r2196, $1
	store.32    %r2197 -> 0[i]
	cbr         %r2196, .L427, .L429

.L427:
	load.64*    %r2198 <- 0[t]
	load.64*    %r2199 <- 32[%r2198]
	load.32     %r2200 <- 0[i]
	scast.64    %r2201 <- (32) %r2200
	muls.64     %r2202 <- %r2201, $40
	add.64*     %r2203 <- %r2199, %r2202
	store.64*   %r2203 -> 0[n]
	load.64*    %r2204 <- 0[n]
	load.32     %r2205 <- 8[%r2204]
	seteq.32    %r2206 <- %r2205, $0
	cbr         %r2206, .L432, .L431

.L431:
	load.64*    %r2207 <- 0[n]
	add.64*     %r2208 <- %r2207, $16
	add.64*     %r2209 <- %r2208, $0
	load.64*    %r2210 <- 0[nums]
	push.64*    %r2209
	push.64*    %r2210
	call.32     %r2211 <- countint
	load.32     %r2212 <- 0[ause]
	scast.32    %r2213 <- (32) %r2212
	add.32      %r2214 <- %r2213, %r2211
	scast.32    %r2215 <- (32) %r2214
	store.32    %r2215 -> 0[ause]
	load.32     %r2216 <- 0[totaluse]
	add.32      %r2217 <- %r2216, $1
	store.32    %r2217 -> 0[totaluse]
	br          .L432

.L432:
	br          .L428

.L428:
	br          .L430

.L429:
	load.32     %r2218 <- 0[ause]
	load.64*    %r2219 <- 0[pnasize]
	load.32     %r2220 <- 0[%r2219]
	scast.32    %r2221 <- (32) %r2220
	add.32      %r2222 <- %r2221, %r2218
	scast.32    %r2223 <- (32) %r2222
	store.32    %r2223 -> 0[%r2219]
	load.32     %r2224 <- 0[totaluse]
	phisrc.32   %phi78(return) <- %r2224
	br          .L433

.L433:
	phi.32      %r2225 <- %phi78(return)
	ret.32      %r2224


setarrayvector:
.L434:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[size]
	load.32     %r2226 <- 0[size]
	add.32      %r2227 <- %r2226, $1
	scast.64    %r2228 <- (32) %r2227
	setbe.32    %r2229 <- %r2228, $0xfffffffffffffff
	cbr         %r2229, .L435, .L436

.L435:
	load.64*    %r2230 <- 0[L]
	load.64*    %r2231 <- 0[t]
	load.64*    %r2232 <- 24[%r2231]
	cast.64*    %r2233 <- (64) %r2232
	load.64*    %r2234 <- 0[t]
	load.32     %r2235 <- 56[%r2234]
	scast.64    %r2236 <- (32) %r2235
	mulu.64     %r2237 <- %r2236, $16
	load.32     %r2238 <- 0[size]
	scast.64    %r2239 <- (32) %r2238
	mulu.64     %r2240 <- %r2239, $16
	push.64*    %r2230
	push.64*    %r2233
	push.64     %r2237
	push.64     %r2240
	call.64*    %r2241 <- luaM_realloc_
	phisrc.64*  %phi79 <- %r2241
	br          .L437

.L436:
	load.64*    %r2242 <- 0[L]
	push.64*    %r2242
	call.64*    %r2243 <- luaM_toobig
	cast.64*    %r2244 <- (64) %r2243
	phisrc.64*  %phi80 <- %r2244
	br          .L437

.L437:
	phi.64*     %r2245 <- %phi79, %phi80
	ptrcast.64* %r2246 <- (64) %r2245
	load.64*    %r2247 <- 0[t]
	store.64*   %r2246 -> 24[%r2247]
	load.64*    %r2248 <- 0[t]
	load.32     %r2249 <- 56[%r2248]
	store.32    %r2249 -> 0[i]
	br          .L441

.L441:
	load.32     %r2250 <- 0[i]
	load.32     %r2251 <- 0[size]
	setlt.32    %r2252 <- %r2250, %r2251
	cbr         %r2252, .L438, .L440

.L438:
	load.64*    %r2253 <- 0[t]
	load.64*    %r2254 <- 24[%r2253]
	load.32     %r2255 <- 0[i]
	scast.64    %r2256 <- (32) %r2255
	muls.64     %r2257 <- %r2256, $16
	add.64*     %r2258 <- %r2254, %r2257
	store.32    $0 -> 8[%r2258]
	br          .L439

.L439:
	load.32     %r2259 <- 0[i]
	add.32      %r2260 <- %r2259, $1
	store.32    %r2260 -> 0[i]
	br          .L441

.L440:
	load.32     %r2261 <- 0[size]
	load.64*    %r2262 <- 0[t]
	store.32    %r2261 -> 56[%r2262]
	br          .L442

.L442:
	ret


setnodevector:
.L443:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[size]
	load.32     %r2263 <- 0[size]
	seteq.32    %r2264 <- %r2263, $0
	cbr         %r2264, .L444, .L445

.L444:
	symaddr.64* %r2265 <- dummynode_
	ptrcast.64* %r2266 <- (64) %r2265
	load.64*    %r2267 <- 0[t]
	store.64*   %r2266 -> 32[%r2267]
	store.32    $0 -> 0[lsize]
	br          .L446

.L445:
	load.32     %r2268 <- 0[size]
	sub.32      %r2269 <- %r2268, $1
	scast.32    %r2270 <- (32) %r2269
	push.32     %r2270
	call.32     %r2271 <- luaO_log2
	add.32      %r2272 <- %r2271, $1
	store.32    %r2272 -> 0[lsize]
	load.32     %r2273 <- 0[lsize]
	setgt.32    %r2274 <- %r2273, $30
	cbr         %r2274, .L447, .L448

.L447:
	load.64*    %r2275 <- 0[L]
	symaddr.64* %r2276 <- <anon symbol:0x1c93c08>
	push.64*    %r2275
	push.64*    %r2276
	call        luaG_runerror
	br          .L448

.L448:
	load.32     %r2277 <- 0[lsize]
	shl.64      %r2278 <- $1, %r2277
	cast.32     %r2279 <- (64) %r2278
	store.32    %r2279 -> 0[size]
	load.32     %r2280 <- 0[size]
	add.32      %r2281 <- %r2280, $1
	scast.64    %r2282 <- (32) %r2281
	setbe.32    %r2283 <- %r2282, $0x666666666666666
	cbr         %r2283, .L449, .L450

.L449:
	load.64*    %r2284 <- 0[L]
	load.32     %r2285 <- 0[size]
	scast.64    %r2286 <- (32) %r2285
	mulu.64     %r2287 <- %r2286, $40
	push.64*    %r2284
	push.64*    $0
	push.64     $0
	push.64     %r2287
	call.64*    %r2288 <- luaM_realloc_
	phisrc.64*  %phi81 <- %r2288
	br          .L451

.L450:
	load.64*    %r2289 <- 0[L]
	push.64*    %r2289
	call.64*    %r2290 <- luaM_toobig
	cast.64*    %r2291 <- (64) %r2290
	phisrc.64*  %phi82 <- %r2291
	br          .L451

.L451:
	phi.64*     %r2292 <- %phi81, %phi82
	ptrcast.64* %r2293 <- (64) %r2292
	load.64*    %r2294 <- 0[t]
	store.64*   %r2293 -> 32[%r2294]
	store.32    $0 -> 0[i]
	br          .L455

.L455:
	load.32     %r2295 <- 0[i]
	load.32     %r2296 <- 0[size]
	setlt.32    %r2297 <- %r2295, %r2296
	cbr         %r2297, .L452, .L454

.L452:
	load.64*    %r2298 <- 0[t]
	load.64*    %r2299 <- 32[%r2298]
	load.32     %r2300 <- 0[i]
	scast.64    %r2301 <- (32) %r2300
	muls.64     %r2302 <- %r2301, $40
	add.64*     %r2303 <- %r2299, %r2302
	store.64*   %r2303 -> 0[n]
	load.64*    %r2304 <- 0[n]
	store.64*   $0 -> 32[%r2304]
	load.64*    %r2305 <- 0[n]
	store.32    $0 -> 24[%r2305]
	load.64*    %r2306 <- 0[n]
	store.32    $0 -> 8[%r2306]
	br          .L453

.L453:
	load.32     %r2307 <- 0[i]
	add.32      %r2308 <- %r2307, $1
	store.32    %r2308 -> 0[i]
	br          .L455

.L454:
	br          .L446

.L446:
	load.32     %r2309 <- 0[lsize]
	scast.8     %r2310 <- (32) %r2309
	load.64*    %r2311 <- 0[t]
	store.8     %r2310 -> 11[%r2311]
	load.64*    %r2312 <- 0[t]
	load.64*    %r2313 <- 32[%r2312]
	load.32     %r2314 <- 0[size]
	scast.64    %r2315 <- (32) %r2314
	muls.64     %r2316 <- %r2315, $40
	add.64*     %r2317 <- %r2313, %r2316
	load.64*    %r2318 <- 0[t]
	store.64*   %r2317 -> 40[%r2318]
	br          .L456

.L456:
	ret


resize:
.L457:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[nasize]
	store.32    %arg4 -> 0[nhsize]
	load.64*    %r2319 <- 0[t]
	load.32     %r2320 <- 56[%r2319]
	store.32    %r2320 -> 0[oldasize]
	load.64*    %r2321 <- 0[t]
	load.8      %r2322 <- 11[%r2321]
	cast.32     %r2323 <- (8) %r2322
	store.32    %r2323 -> 0[oldhsize]
	load.64*    %r2324 <- 0[t]
	load.64*    %r2325 <- 32[%r2324]
	store.64*   %r2325 -> 0[nold]
	load.32     %r2326 <- 0[nasize]
	load.32     %r2327 <- 0[oldasize]
	setgt.32    %r2328 <- %r2326, %r2327
	cbr         %r2328, .L458, .L459

.L458:
	load.64*    %r2329 <- 0[L]
	load.64*    %r2330 <- 0[t]
	load.32     %r2331 <- 0[nasize]
	push.64*    %r2329
	push.64*    %r2330
	push.32     %r2331
	call        setarrayvector
	br          .L459

.L459:
	load.64*    %r2332 <- 0[L]
	load.64*    %r2333 <- 0[t]
	load.32     %r2334 <- 0[nhsize]
	push.64*    %r2332
	push.64*    %r2333
	push.32     %r2334
	call        setnodevector
	load.32     %r2335 <- 0[nasize]
	load.32     %r2336 <- 0[oldasize]
	setlt.32    %r2337 <- %r2335, %r2336
	cbr         %r2337, .L460, .L461

.L460:
	load.32     %r2338 <- 0[nasize]
	load.64*    %r2339 <- 0[t]
	store.32    %r2338 -> 56[%r2339]
	load.32     %r2340 <- 0[nasize]
	store.32    %r2340 -> 0[i]
	br          .L465

.L465:
	load.32     %r2341 <- 0[i]
	load.32     %r2342 <- 0[oldasize]
	setlt.32    %r2343 <- %r2341, %r2342
	cbr         %r2343, .L462, .L464

.L462:
	load.64*    %r2344 <- 0[t]
	load.64*    %r2345 <- 24[%r2344]
	load.32     %r2346 <- 0[i]
	scast.64    %r2347 <- (32) %r2346
	muls.64     %r2348 <- %r2347, $16
	add.64*     %r2349 <- %r2345, %r2348
	load.32     %r2350 <- 8[%r2349]
	seteq.32    %r2351 <- %r2350, $0
	cbr         %r2351, .L467, .L466

.L466:
	load.64*    %r2352 <- 0[t]
	load.64*    %r2353 <- 24[%r2352]
	load.32     %r2354 <- 0[i]
	scast.64    %r2355 <- (32) %r2354
	muls.64     %r2356 <- %r2355, $16
	add.64*     %r2357 <- %r2353, %r2356
	store.64*   %r2357 -> 0[o2]
	load.64*    %r2358 <- 0[L]
	load.64*    %r2359 <- 0[t]
	load.32     %r2360 <- 0[i]
	add.32      %r2361 <- %r2360, $1
	push.64*    %r2358
	push.64*    %r2359
	push.32     %r2361
	call.64*    %r2362 <- luaH_setnum
	store.64*   %r2362 -> 0[o1]
	load.64*    %r2363 <- 0[o2]
	load.f64    %r2364 <- 0[%r2363]
	fpcast.f64  %r2365 <- (64) %r2364
	load.64*    %r2366 <- 0[o1]
	store.f64   %r2365 -> 0[%r2366]
	load.64*    %r2367 <- 0[o2]
	load.32     %r2368 <- 8[%r2367]
	scast.32    %r2369 <- (32) %r2368
	load.64*    %r2370 <- 0[o1]
	store.32    %r2369 -> 8[%r2370]
	br          .L467

.L467:
	br          .L463

.L463:
	load.32     %r2371 <- 0[i]
	add.32      %r2372 <- %r2371, $1
	store.32    %r2372 -> 0[i]
	br          .L465

.L464:
	load.32     %r2373 <- 0[nasize]
	add.32      %r2374 <- %r2373, $1
	scast.64    %r2375 <- (32) %r2374
	setbe.32    %r2376 <- %r2375, $0xfffffffffffffff
	cbr         %r2376, .L468, .L469

.L468:
	load.64*    %r2377 <- 0[L]
	load.64*    %r2378 <- 0[t]
	load.64*    %r2379 <- 24[%r2378]
	cast.64*    %r2380 <- (64) %r2379
	load.32     %r2381 <- 0[oldasize]
	scast.64    %r2382 <- (32) %r2381
	mulu.64     %r2383 <- %r2382, $16
	load.32     %r2384 <- 0[nasize]
	scast.64    %r2385 <- (32) %r2384
	mulu.64     %r2386 <- %r2385, $16
	push.64*    %r2377
	push.64*    %r2380
	push.64     %r2383
	push.64     %r2386
	call.64*    %r2387 <- luaM_realloc_
	phisrc.64*  %phi83 <- %r2387
	br          .L470

.L469:
	load.64*    %r2388 <- 0[L]
	push.64*    %r2388
	call.64*    %r2389 <- luaM_toobig
	cast.64*    %r2390 <- (64) %r2389
	phisrc.64*  %phi84 <- %r2390
	br          .L470

.L470:
	phi.64*     %r2391 <- %phi83, %phi84
	ptrcast.64* %r2392 <- (64) %r2391
	load.64*    %r2393 <- 0[t]
	store.64*   %r2392 -> 24[%r2393]
	br          .L461

.L461:
	load.32     %r2394 <- 0[oldhsize]
	shl.64      %r2395 <- $1, %r2394
	sub.64      %r2396 <- %r2395, $1
	cast.32     %r2397 <- (64) %r2396
	store.32    %r2397 -> 0[i]
	br          .L474

.L474:
	load.32     %r2398 <- 0[i]
	setge.32    %r2399 <- %r2398, $0
	cbr         %r2399, .L471, .L473

.L471:
	load.64*    %r2400 <- 0[nold]
	load.32     %r2401 <- 0[i]
	scast.64    %r2402 <- (32) %r2401
	muls.64     %r2403 <- %r2402, $40
	add.64*     %r2404 <- %r2400, %r2403
	store.64*   %r2404 -> 0[old]
	load.64*    %r2405 <- 0[old]
	load.32     %r2406 <- 8[%r2405]
	seteq.32    %r2407 <- %r2406, $0
	cbr         %r2407, .L476, .L475

.L475:
	load.64*    %r2408 <- 0[old]
	add.64*     %r2409 <- %r2408, $0
	store.64*   %r2409 -> 0[o2]
	load.64*    %r2410 <- 0[L]
	load.64*    %r2411 <- 0[t]
	load.64*    %r2412 <- 0[old]
	add.64*     %r2413 <- %r2412, $16
	add.64*     %r2414 <- %r2413, $0
	push.64*    %r2410
	push.64*    %r2411
	push.64*    %r2414
	call.64*    %r2415 <- luaH_set
	store.64*   %r2415 -> 0[o1]
	load.64*    %r2416 <- 0[o2]
	load.f64    %r2417 <- 0[%r2416]
	fpcast.f64  %r2418 <- (64) %r2417
	load.64*    %r2419 <- 0[o1]
	store.f64   %r2418 -> 0[%r2419]
	load.64*    %r2420 <- 0[o2]
	load.32     %r2421 <- 8[%r2420]
	scast.32    %r2422 <- (32) %r2421
	load.64*    %r2423 <- 0[o1]
	store.32    %r2422 -> 8[%r2423]
	br          .L476

.L476:
	br          .L472

.L472:
	load.32     %r2424 <- 0[i]
	sub.32      %r2425 <- %r2424, $1
	store.32    %r2425 -> 0[i]
	br          .L474

.L473:
	load.64*    %r2426 <- 0[nold]
	symaddr.64* %r2427 <- dummynode_
	setne.32    %r2428 <- %r2426, %r2427
	cbr         %r2428, .L477, .L478

.L477:
	load.64*    %r2429 <- 0[L]
	load.64*    %r2430 <- 0[nold]
	cast.64*    %r2431 <- (64) %r2430
	load.32     %r2432 <- 0[oldhsize]
	shl.64      %r2433 <- $1, %r2432
	mulu.64     %r2434 <- %r2433, $40
	push.64*    %r2429
	push.64*    %r2431
	push.64     %r2434
	push.64     $0
	call.64*    %r2435 <- luaM_realloc_
	br          .L478

.L478:
	ret


luaH_resizearray:
.L479:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[nasize]
	load.64*    %r2436 <- 0[t]
	load.64*    %r2437 <- 32[%r2436]
	symaddr.64* %r2438 <- dummynode_
	seteq.32    %r2439 <- %r2437, %r2438
	cbr         %r2439, .L480, .L481

.L480:
	phisrc.64   %phi85 <- $0
	br          .L482

.L481:
	load.64*    %r2440 <- 0[t]
	load.8      %r2441 <- 11[%r2440]
	cast.32     %r2442 <- (8) %r2441
	shl.64      %r2443 <- $1, %r2442
	phisrc.64   %phi86 <- %r2443
	br          .L482

.L482:
	phi.64      %r2444 <- %phi85, %phi86
	cast.32     %r2445 <- (64) %r2444
	store.32    %r2445 -> 0[nsize]
	load.64*    %r2446 <- 0[L]
	load.64*    %r2447 <- 0[t]
	load.32     %r2448 <- 0[nasize]
	load.32     %r2449 <- 0[nsize]
	push.64*    %r2446
	push.64*    %r2447
	push.32     %r2448
	push.32     %r2449
	call        resize
	br          .L483

.L483:
	ret


rehash:
.L484:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[ek]
	store.32    $0 -> 0[i]
	br          .L488

.L488:
	load.32     %r2450 <- 0[i]
	setle.32    %r2451 <- %r2450, $30
	cbr         %r2451, .L485, .L487

.L485:
	symaddr.64* %r2452 <- nums
	load.32     %r2453 <- 0[i]
	scast.64    %r2454 <- (32) %r2453
	muls.64     %r2455 <- %r2454, $4
	add.64*     %r2456 <- %r2452, %r2455
	store.32    $0 -> 0[%r2456]
	br          .L486

.L486:
	load.32     %r2457 <- 0[i]
	add.32      %r2458 <- %r2457, $1
	store.32    %r2458 -> 0[i]
	br          .L488

.L487:
	load.64*    %r2459 <- 0[t]
	symaddr.64* %r2460 <- nums
	push.64*    %r2459
	push.64*    %r2460
	call.32     %r2461 <- numusearray
	store.32    %r2461 -> 0[nasize]
	load.32     %r2462 <- 0[nasize]
	store.32    %r2462 -> 0[totaluse]
	load.64*    %r2463 <- 0[t]
	symaddr.64* %r2464 <- nums
	symaddr.64* %r2465 <- nasize
	push.64*    %r2463
	push.64*    %r2464
	push.64*    %r2465
	call.32     %r2466 <- numusehash
	load.32     %r2467 <- 0[totaluse]
	scast.32    %r2468 <- (32) %r2467
	add.32      %r2469 <- %r2468, %r2466
	scast.32    %r2470 <- (32) %r2469
	store.32    %r2470 -> 0[totaluse]
	load.64*    %r2471 <- 0[ek]
	symaddr.64* %r2472 <- nums
	push.64*    %r2471
	push.64*    %r2472
	call.32     %r2473 <- countint
	load.32     %r2474 <- 0[nasize]
	scast.32    %r2475 <- (32) %r2474
	add.32      %r2476 <- %r2475, %r2473
	scast.32    %r2477 <- (32) %r2476
	store.32    %r2477 -> 0[nasize]
	load.32     %r2478 <- 0[totaluse]
	add.32      %r2479 <- %r2478, $1
	store.32    %r2479 -> 0[totaluse]
	symaddr.64* %r2480 <- nums
	symaddr.64* %r2481 <- nasize
	push.64*    %r2480
	push.64*    %r2481
	call.32     %r2482 <- computesizes
	store.32    %r2482 -> 0[na]
	load.64*    %r2483 <- 0[L]
	load.64*    %r2484 <- 0[t]
	load.32     %r2485 <- 0[nasize]
	load.32     %r2486 <- 0[totaluse]
	load.32     %r2487 <- 0[na]
	sub.32      %r2488 <- %r2486, %r2487
	push.64*    %r2483
	push.64*    %r2484
	push.32     %r2485
	push.32     %r2488
	call        resize
	br          .L489

.L489:
	ret


luaH_new:
.L490:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narray]
	store.32    %arg3 -> 0[nhash]
	load.64*    %r2489 <- 0[L]
	push.64*    %r2489
	push.64*    $0
	push.64     $0
	push.64     $64
	call.64*    %r2490 <- luaM_realloc_
	ptrcast.64* %r2491 <- (64) %r2490
	store.64*   %r2491 -> 0[t]
	load.64*    %r2492 <- 0[L]
	load.64*    %r2493 <- 0[t]
	ptrcast.64* %r2494 <- (64) %r2493
	push.64*    %r2492
	push.64*    %r2494
	push.8      $5
	call        luaC_link
	load.64*    %r2495 <- 0[t]
	store.64*   $0 -> 16[%r2495]
	load.64*    %r2496 <- 0[t]
	store.8     $255 -> 10[%r2496]
	load.64*    %r2497 <- 0[t]
	store.64*   $0 -> 24[%r2497]
	load.64*    %r2498 <- 0[t]
	store.32    $0 -> 56[%r2498]
	load.64*    %r2499 <- 0[t]
	store.8     $0 -> 11[%r2499]
	symaddr.64* %r2500 <- dummynode_
	ptrcast.64* %r2501 <- (64) %r2500
	load.64*    %r2502 <- 0[t]
	store.64*   %r2501 -> 32[%r2502]
	load.64*    %r2503 <- 0[L]
	load.64*    %r2504 <- 0[t]
	load.32     %r2505 <- 0[narray]
	push.64*    %r2503
	push.64*    %r2504
	push.32     %r2505
	call        setarrayvector
	load.64*    %r2506 <- 0[L]
	load.64*    %r2507 <- 0[t]
	load.32     %r2508 <- 0[nhash]
	push.64*    %r2506
	push.64*    %r2507
	push.32     %r2508
	call        setnodevector
	load.64*    %r2509 <- 0[t]
	phisrc.64*  %phi87(return) <- %r2509
	br          .L491

.L491:
	phi.64*     %r2510 <- %phi87(return)
	ret.64*     %r2509


luaH_free:
.L492:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	load.64*    %r2511 <- 0[t]
	load.64*    %r2512 <- 32[%r2511]
	symaddr.64* %r2513 <- dummynode_
	setne.32    %r2514 <- %r2512, %r2513
	cbr         %r2514, .L493, .L494

.L493:
	load.64*    %r2515 <- 0[L]
	load.64*    %r2516 <- 0[t]
	load.64*    %r2517 <- 32[%r2516]
	cast.64*    %r2518 <- (64) %r2517
	load.64*    %r2519 <- 0[t]
	load.8      %r2520 <- 11[%r2519]
	cast.32     %r2521 <- (8) %r2520
	shl.64      %r2522 <- $1, %r2521
	mulu.64     %r2523 <- %r2522, $40
	push.64*    %r2515
	push.64*    %r2518
	push.64     %r2523
	push.64     $0
	call.64*    %r2524 <- luaM_realloc_
	br          .L494

.L494:
	load.64*    %r2525 <- 0[L]
	load.64*    %r2526 <- 0[t]
	load.64*    %r2527 <- 24[%r2526]
	cast.64*    %r2528 <- (64) %r2527
	load.64*    %r2529 <- 0[t]
	load.32     %r2530 <- 56[%r2529]
	scast.64    %r2531 <- (32) %r2530
	mulu.64     %r2532 <- %r2531, $16
	push.64*    %r2525
	push.64*    %r2528
	push.64     %r2532
	push.64     $0
	call.64*    %r2533 <- luaM_realloc_
	load.64*    %r2534 <- 0[L]
	load.64*    %r2535 <- 0[t]
	cast.64*    %r2536 <- (64) %r2535
	push.64*    %r2534
	push.64*    %r2536
	push.64     $64
	push.64     $0
	call.64*    %r2537 <- luaM_realloc_
	br          .L495

.L495:
	ret


getfreepos:
.L496:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	br          .L500

.L500:
	load.64*    %r2538 <- 0[t]
	load.64*    %r2539 <- 40[%r2538]
	sub.64*     %r2540 <- %r2539, $40
	store.64*   %r2540 -> 40[%r2538]
	load.64*    %r2541 <- 0[t]
	load.64*    %r2542 <- 32[%r2541]
	seta.32     %r2543 <- %r2539, %r2542
	cbr         %r2543, .L497, .L499

.L497:
	load.64*    %r2544 <- 0[t]
	load.64*    %r2545 <- 40[%r2544]
	load.32     %r2546 <- 24[%r2545]
	seteq.32    %r2547 <- %r2546, $0
	cbr         %r2547, .L501, .L502

.L501:
	load.64*    %r2548 <- 0[t]
	load.64*    %r2549 <- 40[%r2548]
	phisrc.64*  %phi88(return) <- %r2549
	br          .L503

.L502:
	br          .L498

.L498:
	br          .L500

.L499:
	phisrc.64*  %phi89(return) <- $0
	br          .L503

.L503:
	phi.64*     %r2550 <- %phi88(return), %phi89(return)
	ret.64*     %r2550


newkey:
.L504:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2551 <- 0[t]
	load.64*    %r2552 <- 0[key]
	push.64*    %r2551
	push.64*    %r2552
	call.64*    %r2553 <- mainposition
	store.64*   %r2553 -> 0[mp]
	load.64*    %r2554 <- 0[mp]
	load.32     %r2555 <- 8[%r2554]
	seteq.32    %r2556 <- %r2555, $0
	seteq.32    %r2557 <- %r2556, $0
	setne.1     %r2558 <- %r2557, $0
	load.64*    %r2559 <- 0[mp]
	symaddr.64* %r2560 <- dummynode_
	seteq.32    %r2561 <- %r2559, %r2560
	setne.1     %r2562 <- %r2561, $0
	or-bool.1   %r2563 <- %r2558, %r2562
	cast.32     %r2564 <- (1) %r2563
	cbr         %r2564, .L505, .L506

.L505:
	load.64*    %r2565 <- 0[t]
	push.64*    %r2565
	call.64*    %r2566 <- getfreepos
	store.64*   %r2566 -> 0[n]
	load.64*    %r2567 <- 0[n]
	seteq.32    %r2568 <- %r2567, $0
	cbr         %r2568, .L507, .L508

.L507:
	load.64*    %r2569 <- 0[L]
	load.64*    %r2570 <- 0[t]
	load.64*    %r2571 <- 0[key]
	push.64*    %r2569
	push.64*    %r2570
	push.64*    %r2571
	call        rehash
	load.64*    %r2572 <- 0[L]
	load.64*    %r2573 <- 0[t]
	load.64*    %r2574 <- 0[key]
	push.64*    %r2572
	push.64*    %r2573
	push.64*    %r2574
	call.64*    %r2575 <- luaH_set
	phisrc.64*  %phi90(return) <- %r2575
	br          .L509

.L508:
	load.64*    %r2577 <- 0[t]
	load.64*    %r2578 <- 0[mp]
	add.64*     %r2579 <- %r2578, $16
	add.64*     %r2580 <- %r2579, $0
	push.64*    %r2577
	push.64*    %r2580
	call.64*    %r2581 <- mainposition
	store.64*   %r2581 -> 0[othern]
	load.64*    %r2582 <- 0[othern]
	load.64*    %r2583 <- 0[mp]
	setne.32    %r2584 <- %r2582, %r2583
	cbr         %r2584, .L510, .L511

.L510:
	br          .L515

.L515:
	load.64*    %r2585 <- 0[othern]
	load.64*    %r2586 <- 32[%r2585]
	load.64*    %r2587 <- 0[mp]
	setne.32    %r2588 <- %r2586, %r2587
	cbr         %r2588, .L512, .L514

.L512:
	load.64*    %r2589 <- 0[othern]
	load.64*    %r2590 <- 32[%r2589]
	store.64*   %r2590 -> 0[othern]
	br          .L513

.L513:
	br          .L515

.L514:
	load.64*    %r2591 <- 0[n]
	load.64*    %r2592 <- 0[othern]
	store.64*   %r2591 -> 32[%r2592]
	load.64*    %r2593 <- 0[n]
	cast.64*    %r2594 <- (64) %r2593
	load.64*    %r2595 <- 0[mp]
	cast.64*    %r2596 <- (64) %r2595
	push.64*    %r2594
	push.64*    %r2596
	push.64     $40
	call.64*    %r2597 <- memcpy
	load.64*    %r2598 <- 0[mp]
	store.64*   $0 -> 32[%r2598]
	load.64*    %r2599 <- 0[mp]
	store.32    $0 -> 8[%r2599]
	br          .L516

.L511:
	load.64*    %r2600 <- 0[mp]
	load.64*    %r2601 <- 32[%r2600]
	load.64*    %r2602 <- 0[n]
	store.64*   %r2601 -> 32[%r2602]
	load.64*    %r2603 <- 0[n]
	load.64*    %r2604 <- 0[mp]
	store.64*   %r2603 -> 32[%r2604]
	load.64*    %r2605 <- 0[n]
	store.64*   %r2605 -> 0[mp]
	br          .L516

.L516:
	br          .L506

.L506:
	load.64*    %r2606 <- 0[key]
	load.f64    %r2607 <- 0[%r2606]
	fpcast.f64  %r2608 <- (64) %r2607
	load.64*    %r2609 <- 0[mp]
	store.f64   %r2608 -> 16[%r2609]
	load.64*    %r2610 <- 0[key]
	load.32     %r2611 <- 8[%r2610]
	scast.32    %r2612 <- (32) %r2611
	load.64*    %r2613 <- 0[mp]
	store.32    %r2612 -> 24[%r2613]
	load.64*    %r2614 <- 0[key]
	load.32     %r2615 <- 8[%r2614]
	scast.32    %r2616 <- (32) %r2615
	setge.32    %r2617 <- %r2616, $4
	cbr         %r2617, .L520, .L518

.L520:
	load.64*    %r2618 <- 0[key]
	load.64*    %r2619 <- 0[%r2618]
	load.8      %r2620 <- 9[%r2619]
	cast.32     %r2621 <- (8) %r2620
	and.32      %r2622 <- %r2621, $3
	cbr         %r2622, .L519, .L518

.L519:
	load.64*    %r2623 <- 0[t]
	ptrcast.64* %r2624 <- (64) %r2623
	load.8      %r2625 <- 9[%r2624]
	cast.32     %r2626 <- (8) %r2625
	and.32      %r2627 <- %r2626, $4
	cbr         %r2627, .L517, .L518

.L517:
	load.64*    %r2628 <- 0[L]
	load.64*    %r2629 <- 0[t]
	push.64*    %r2628
	push.64*    %r2629
	call        luaC_barrierback
	br          .L518

.L518:
	load.64*    %r2630 <- 0[mp]
	add.64*     %r2631 <- %r2630, $0
	phisrc.64*  %phi91(return) <- %r2631
	br          .L509

.L509:
	phi.64*     %r2576 <- %phi90(return), %phi91(return)
	ret.64*     %r2576


luaH_getnum:
.L521:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.32    %arg2 -> 0[key]
	load.32     %r2632 <- 0[key]
	scast.32    %r2633 <- (32) %r2632
	sub.32      %r2634 <- %r2633, $1
	load.64*    %r2635 <- 0[t]
	load.32     %r2636 <- 56[%r2635]
	scast.32    %r2637 <- (32) %r2636
	setb.32     %r2638 <- %r2634, %r2637
	cbr         %r2638, .L522, .L523

.L522:
	load.64*    %r2639 <- 0[t]
	load.64*    %r2640 <- 24[%r2639]
	load.32     %r2641 <- 0[key]
	sub.32      %r2642 <- %r2641, $1
	scast.64    %r2643 <- (32) %r2642
	muls.64     %r2644 <- %r2643, $16
	add.64*     %r2645 <- %r2640, %r2644
	phisrc.64*  %phi92(return) <- %r2645
	br          .L524

.L523:
	load.32     %r2647 <- 0[key]
	fpcast.f64  %r2648 <- (32) %r2647
	store.f64   %r2648 -> 0[nk]
	load.64*    %r2649 <- 0[t]
	load.f64    %r2650 <- 0[nk]
	push.64*    %r2649
	push.f64    %r2650
	call.64*    %r2651 <- hashnum
	store.64*   %r2651 -> 0[n]
	br          .L526

.L526:
	load.64*    %r2652 <- 0[n]
	load.32     %r2653 <- 24[%r2652]
	seteq.32    %r2654 <- %r2653, $3
	cbr         %r2654, .L531, .L530

.L531:
	load.64*    %r2655 <- 0[n]
	load.f64    %r2656 <- 16[%r2655]
	load.f64    %r2657 <- 0[nk]
	seteq.32    %r2658 <- %r2656, %r2657
	cbr         %r2658, .L529, .L530

.L529:
	load.64*    %r2659 <- 0[n]
	add.64*     %r2660 <- %r2659, $0
	phisrc.64*  %phi93(return) <- %r2660
	br          .L524

.L530:
	load.64*    %r2661 <- 0[n]
	load.64*    %r2662 <- 32[%r2661]
	store.64*   %r2662 -> 0[n]
	br          .L532

.L532:
	br          .L527

.L527:
	load.64*    %r2663 <- 0[n]
	cbr         %r2663, .L526, .L528

.L528:
	symaddr.64* %r2664 <- luaO_nilobject_
	phisrc.64*  %phi94(return) <- %r2664
	br          .L524

.L524:
	phi.64*     %r2646 <- %phi92(return), %phi93(return), %phi94(return)
	ret.64*     %r2646


luaH_getstr:
.L533:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r2665 <- 0[t]
	load.64*    %r2666 <- 32[%r2665]
	load.64*    %r2667 <- 0[key]
	load.32     %r2668 <- 12[%r2667]
	cast.64     %r2669 <- (32) %r2668
	load.64*    %r2670 <- 0[t]
	load.8      %r2671 <- 11[%r2670]
	cast.32     %r2672 <- (8) %r2671
	shl.64      %r2673 <- $1, %r2672
	sub.64      %r2674 <- %r2673, $1
	and.64      %r2675 <- %r2669, %r2674
	cast.32     %r2676 <- (64) %r2675
	scast.64    %r2677 <- (32) %r2676
	muls.64     %r2678 <- %r2677, $40
	add.64*     %r2679 <- %r2666, %r2678
	store.64*   %r2679 -> 0[n]
	br          .L534

.L534:
	load.64*    %r2680 <- 0[n]
	load.32     %r2681 <- 24[%r2680]
	seteq.32    %r2682 <- %r2681, $4
	cbr         %r2682, .L539, .L538

.L539:
	load.64*    %r2683 <- 0[n]
	load.64*    %r2684 <- 16[%r2683]
	add.64*     %r2685 <- %r2684, $0
	load.64*    %r2686 <- 0[key]
	seteq.32    %r2687 <- %r2685, %r2686
	cbr         %r2687, .L537, .L538

.L537:
	load.64*    %r2688 <- 0[n]
	add.64*     %r2689 <- %r2688, $0
	phisrc.64*  %phi95(return) <- %r2689
	br          .L540

.L538:
	load.64*    %r2691 <- 0[n]
	load.64*    %r2692 <- 32[%r2691]
	store.64*   %r2692 -> 0[n]
	br          .L541

.L541:
	br          .L535

.L535:
	load.64*    %r2693 <- 0[n]
	cbr         %r2693, .L534, .L536

.L536:
	symaddr.64* %r2694 <- luaO_nilobject_
	phisrc.64*  %phi96(return) <- %r2694
	br          .L540

.L540:
	phi.64*     %r2690 <- %phi95(return), %phi96(return)
	ret.64*     %r2690


luaH_get:
.L542:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r2695 <- 0[key]
	load.32     %r2696 <- 8[%r2695]
	switch.32   %r2696, 0 -> .L544, 3 -> .L546, 4 -> .L545, default -> .L547

.L544:
	symaddr.64* %r2697 <- luaO_nilobject_
	phisrc.64*  %phi97(return) <- %r2697
	br          .L548

.L545:
	load.64*    %r2699 <- 0[t]
	load.64*    %r2700 <- 0[key]
	load.64*    %r2701 <- 0[%r2700]
	add.64*     %r2702 <- %r2701, $0
	push.64*    %r2699
	push.64*    %r2702
	call.64*    %r2703 <- luaH_getstr
	phisrc.64*  %phi98(return) <- %r2703
	br          .L548

.L546:
	load.64*    %r2704 <- 0[key]
	load.f64    %r2705 <- 0[%r2704]
	fpcast.f64  %r2706 <- (64) %r2705
	store.f64   %r2706 -> 0[n]
	load.f64    %r2707 <- 0[n]
	cast.32     %r2708 <- (64) %r2707
	store.32    %r2708 -> 0[k]
	load.32     %r2709 <- 0[k]
	fpcast.f64  %r2710 <- (32) %r2709
	load.64*    %r2711 <- 0[key]
	load.f64    %r2712 <- 0[%r2711]
	fpcast.f64  %r2713 <- (64) %r2712
	seteq.32    %r2714 <- %r2710, %r2713
	cbr         %r2714, .L549, .L550

.L549:
	load.64*    %r2715 <- 0[t]
	load.32     %r2716 <- 0[k]
	push.64*    %r2715
	push.32     %r2716
	call.64*    %r2717 <- luaH_getnum
	phisrc.64*  %phi99(return) <- %r2717
	br          .L548

.L550:
	br          .L547

.L547:
	load.64*    %r2718 <- 0[t]
	load.64*    %r2719 <- 0[key]
	push.64*    %r2718
	push.64*    %r2719
	call.64*    %r2720 <- mainposition
	store.64*   %r2720 -> 0[n]
	br          .L551

.L551:
	load.64*    %r2721 <- 0[n]
	add.64*     %r2722 <- %r2721, $16
	add.64*     %r2723 <- %r2722, $0
	load.64*    %r2724 <- 0[key]
	push.64*    %r2723
	push.64*    %r2724
	call.32     %r2725 <- luaO_rawequalObj
	cbr         %r2725, .L554, .L555

.L554:
	load.64*    %r2726 <- 0[n]
	add.64*     %r2727 <- %r2726, $0
	phisrc.64*  %phi100(return) <- %r2727
	br          .L548

.L555:
	load.64*    %r2728 <- 0[n]
	load.64*    %r2729 <- 32[%r2728]
	store.64*   %r2729 -> 0[n]
	br          .L556

.L556:
	br          .L552

.L552:
	load.64*    %r2730 <- 0[n]
	cbr         %r2730, .L551, .L553

.L553:
	symaddr.64* %r2731 <- luaO_nilobject_
	phisrc.64*  %phi101(return) <- %r2731
	br          .L548

.L548:
	phi.64*     %r2698 <- %phi97(return), %phi98(return), %phi99(return), %phi100(return), %phi101(return)
	ret.64*     %r2698


luaH_set:
.L557:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2732 <- 0[t]
	load.64*    %r2733 <- 0[key]
	push.64*    %r2732
	push.64*    %r2733
	call.64*    %r2734 <- luaH_get
	store.64*   %r2734 -> 0[p]
	load.64*    %r2735 <- 0[t]
	store.8     $0 -> 10[%r2735]
	load.64*    %r2736 <- 0[p]
	symaddr.64* %r2737 <- luaO_nilobject_
	setne.32    %r2738 <- %r2736, %r2737
	cbr         %r2738, .L558, .L559

.L558:
	load.64*    %r2739 <- 0[p]
	ptrcast.64* %r2740 <- (64) %r2739
	phisrc.64*  %phi102(return) <- %r2740
	br          .L560

.L559:
	load.64*    %r2742 <- 0[key]
	load.32     %r2743 <- 8[%r2742]
	scast.32    %r2744 <- (32) %r2743
	seteq.32    %r2745 <- %r2744, $0
	cbr         %r2745, .L562, .L563

.L562:
	load.64*    %r2746 <- 0[L]
	symaddr.64* %r2747 <- <anon symbol:0x1c58d78>
	push.64*    %r2746
	push.64*    %r2747
	call        luaG_runerror
	br          .L564

.L563:
	load.64*    %r2748 <- 0[key]
	load.32     %r2749 <- 8[%r2748]
	scast.32    %r2750 <- (32) %r2749
	seteq.32    %r2751 <- %r2750, $3
	cbr         %r2751, .L567, .L566

.L567:
	load.64*    %r2752 <- 0[key]
	load.f64    %r2753 <- 0[%r2752]
	fpcast.f64  %r2754 <- (64) %r2753
	load.64*    %r2755 <- 0[key]
	load.f64    %r2756 <- 0[%r2755]
	fpcast.f64  %r2757 <- (64) %r2756
	seteq.32    %r2758 <- %r2754, %r2757
	cbr         %r2758, .L566, .L565

.L565:
	load.64*    %r2759 <- 0[L]
	symaddr.64* %r2760 <- <anon symbol:0x1c59858>
	push.64*    %r2759
	push.64*    %r2760
	call        luaG_runerror
	br          .L566

.L566:
	br          .L564

.L564:
	load.64*    %r2761 <- 0[L]
	load.64*    %r2762 <- 0[t]
	load.64*    %r2763 <- 0[key]
	push.64*    %r2761
	push.64*    %r2762
	push.64*    %r2763
	call.64*    %r2764 <- newkey
	phisrc.64*  %phi103(return) <- %r2764
	br          .L560

.L560:
	phi.64*     %r2741 <- %phi102(return), %phi103(return)
	ret.64*     %r2741


luaH_setnum:
.L568:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[key]
	load.64*    %r2765 <- 0[t]
	load.32     %r2766 <- 0[key]
	push.64*    %r2765
	push.32     %r2766
	call.64*    %r2767 <- luaH_getnum
	store.64*   %r2767 -> 0[p]
	load.64*    %r2768 <- 0[p]
	symaddr.64* %r2769 <- luaO_nilobject_
	setne.32    %r2770 <- %r2768, %r2769
	cbr         %r2770, .L569, .L570

.L569:
	load.64*    %r2771 <- 0[p]
	ptrcast.64* %r2772 <- (64) %r2771
	phisrc.64*  %phi104(return) <- %r2772
	br          .L571

.L570:
	symaddr.64* %r2774 <- k
	store.64*   %r2774 -> 0[i_o]
	load.32     %r2775 <- 0[key]
	fpcast.f64  %r2776 <- (32) %r2775
	load.64*    %r2777 <- 0[i_o]
	store.f64   %r2776 -> 0[%r2777]
	load.64*    %r2778 <- 0[i_o]
	store.32    $3 -> 8[%r2778]
	load.64*    %r2779 <- 0[L]
	load.64*    %r2780 <- 0[t]
	symaddr.64* %r2781 <- k
	push.64*    %r2779
	push.64*    %r2780
	push.64*    %r2781
	call.64*    %r2782 <- newkey
	phisrc.64*  %phi105(return) <- %r2782
	br          .L571

.L571:
	phi.64*     %r2773 <- %phi104(return), %phi105(return)
	ret.64*     %r2773


luaH_setstr:
.L573:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2783 <- 0[t]
	load.64*    %r2784 <- 0[key]
	push.64*    %r2783
	push.64*    %r2784
	call.64*    %r2785 <- luaH_getstr
	store.64*   %r2785 -> 0[p]
	load.64*    %r2786 <- 0[p]
	symaddr.64* %r2787 <- luaO_nilobject_
	setne.32    %r2788 <- %r2786, %r2787
	cbr         %r2788, .L574, .L575

.L574:
	load.64*    %r2789 <- 0[p]
	ptrcast.64* %r2790 <- (64) %r2789
	phisrc.64*  %phi106(return) <- %r2790
	br          .L576

.L575:
	symaddr.64* %r2792 <- k
	store.64*   %r2792 -> 0[i_o]
	load.64*    %r2793 <- 0[key]
	ptrcast.64* %r2794 <- (64) %r2793
	load.64*    %r2795 <- 0[i_o]
	store.64*   %r2794 -> 0[%r2795]
	load.64*    %r2796 <- 0[i_o]
	store.32    $4 -> 8[%r2796]
	load.64*    %r2797 <- 0[L]
	load.64*    %r2798 <- 0[t]
	symaddr.64* %r2799 <- k
	push.64*    %r2797
	push.64*    %r2798
	push.64*    %r2799
	call.64*    %r2800 <- newkey
	phisrc.64*  %phi107(return) <- %r2800
	br          .L576

.L576:
	phi.64*     %r2791 <- %phi106(return), %phi107(return)
	ret.64*     %r2791


unbound_search:
.L578:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.32    %arg2 -> 0[j]
	load.32     %r2801 <- 0[j]
	store.32    %r2801 -> 0[i]
	load.32     %r2802 <- 0[j]
	add.32      %r2803 <- %r2802, $1
	store.32    %r2803 -> 0[j]
	br          .L582

.L582:
	load.64*    %r2804 <- 0[t]
	load.32     %r2805 <- 0[j]
	cast.32     %r2806 <- (32) %r2805
	push.64*    %r2804
	push.32     %r2806
	call.64*    %r2807 <- luaH_getnum
	load.32     %r2808 <- 8[%r2807]
	scast.32    %r2809 <- (32) %r2808
	seteq.32    %r2810 <- %r2809, $0
	cbr         %r2810, .L581, .L579

.L579:
	load.32     %r2811 <- 0[j]
	store.32    %r2811 -> 0[i]
	load.32     %r2812 <- 0[j]
	cast.32     %r2813 <- (32) %r2812
	mulu.32     %r2814 <- %r2813, $2
	cast.32     %r2815 <- (32) %r2814
	store.32    %r2815 -> 0[j]
	load.32     %r2816 <- 0[j]
	seta.32     %r2817 <- %r2816, $0x7ffffffd
	cbr         %r2817, .L583, .L584

.L583:
	store.32    $1 -> 0[i]
	br          .L588

.L588:
	load.64*    %r2818 <- 0[t]
	load.32     %r2819 <- 0[i]
	cast.32     %r2820 <- (32) %r2819
	push.64*    %r2818
	push.32     %r2820
	call.64*    %r2821 <- luaH_getnum
	load.32     %r2822 <- 8[%r2821]
	scast.32    %r2823 <- (32) %r2822
	seteq.32    %r2824 <- %r2823, $0
	cbr         %r2824, .L587, .L585

.L585:
	load.32     %r2825 <- 0[i]
	add.32      %r2826 <- %r2825, $1
	store.32    %r2826 -> 0[i]
	br          .L586

.L586:
	br          .L588

.L587:
	load.32     %r2827 <- 0[i]
	sub.32      %r2828 <- %r2827, $1
	cast.32     %r2829 <- (32) %r2828
	phisrc.32   %phi108(return) <- %r2829
	br          .L589

.L584:
	br          .L580

.L580:
	br          .L582

.L581:
	br          .L593

.L593:
	load.32     %r2831 <- 0[j]
	load.32     %r2832 <- 0[i]
	sub.32      %r2833 <- %r2831, %r2832
	seta.32     %r2834 <- %r2833, $1
	cbr         %r2834, .L590, .L592

.L590:
	load.32     %r2835 <- 0[i]
	load.32     %r2836 <- 0[j]
	add.32      %r2837 <- %r2835, %r2836
	divu.32     %r2838 <- %r2837, $2
	store.32    %r2838 -> 0[m]
	load.64*    %r2839 <- 0[t]
	load.32     %r2840 <- 0[m]
	cast.32     %r2841 <- (32) %r2840
	push.64*    %r2839
	push.32     %r2841
	call.64*    %r2842 <- luaH_getnum
	load.32     %r2843 <- 8[%r2842]
	scast.32    %r2844 <- (32) %r2843
	seteq.32    %r2845 <- %r2844, $0
	cbr         %r2845, .L594, .L595

.L594:
	load.32     %r2846 <- 0[m]
	store.32    %r2846 -> 0[j]
	br          .L596

.L595:
	load.32     %r2847 <- 0[m]
	store.32    %r2847 -> 0[i]
	br          .L596

.L596:
	br          .L591

.L591:
	br          .L593

.L592:
	load.32     %r2848 <- 0[i]
	cast.32     %r2849 <- (32) %r2848
	phisrc.32   %phi109(return) <- %r2849
	br          .L589

.L589:
	phi.32      %r2830 <- %phi108(return), %phi109(return)
	ret.32      %r2830


luaH_getn:
.L597:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	load.64*    %r2850 <- 0[t]
	load.32     %r2851 <- 56[%r2850]
	scast.32    %r2852 <- (32) %r2851
	store.32    %r2852 -> 0[j]
	load.32     %r2853 <- 0[j]
	seta.32     %r2854 <- %r2853, $0
	cbr         %r2854, .L600, .L599

.L600:
	load.64*    %r2855 <- 0[t]
	load.64*    %r2856 <- 24[%r2855]
	load.32     %r2857 <- 0[j]
	sub.32      %r2858 <- %r2857, $1
	cast.64     %r2859 <- (32) %r2858
	muls.64     %r2860 <- %r2859, $16
	add.64*     %r2861 <- %r2856, %r2860
	load.32     %r2862 <- 8[%r2861]
	seteq.32    %r2863 <- %r2862, $0
	cbr         %r2863, .L598, .L599

.L598:
	store.32    $0 -> 0[i]
	br          .L604

.L604:
	load.32     %r2864 <- 0[j]
	load.32     %r2865 <- 0[i]
	sub.32      %r2866 <- %r2864, %r2865
	seta.32     %r2867 <- %r2866, $1
	cbr         %r2867, .L601, .L603

.L601:
	load.32     %r2868 <- 0[i]
	load.32     %r2869 <- 0[j]
	add.32      %r2870 <- %r2868, %r2869
	divu.32     %r2871 <- %r2870, $2
	store.32    %r2871 -> 0[m]
	load.64*    %r2872 <- 0[t]
	load.64*    %r2873 <- 24[%r2872]
	load.32     %r2874 <- 0[m]
	sub.32      %r2875 <- %r2874, $1
	cast.64     %r2876 <- (32) %r2875
	muls.64     %r2877 <- %r2876, $16
	add.64*     %r2878 <- %r2873, %r2877
	load.32     %r2879 <- 8[%r2878]
	seteq.32    %r2880 <- %r2879, $0
	cbr         %r2880, .L605, .L606

.L605:
	load.32     %r2881 <- 0[m]
	store.32    %r2881 -> 0[j]
	br          .L607

.L606:
	load.32     %r2882 <- 0[m]
	store.32    %r2882 -> 0[i]
	br          .L607

.L607:
	br          .L602

.L602:
	br          .L604

.L603:
	load.32     %r2883 <- 0[i]
	cast.32     %r2884 <- (32) %r2883
	phisrc.32   %phi110(return) <- %r2884
	br          .L608

.L599:
	load.64*    %r2886 <- 0[t]
	load.64*    %r2887 <- 32[%r2886]
	symaddr.64* %r2888 <- dummynode_
	seteq.32    %r2889 <- %r2887, %r2888
	cbr         %r2889, .L610, .L611

.L610:
	load.32     %r2890 <- 0[j]
	cast.32     %r2891 <- (32) %r2890
	phisrc.32   %phi111(return) <- %r2891
	br          .L608

.L611:
	load.64*    %r2892 <- 0[t]
	load.32     %r2893 <- 0[j]
	push.64*    %r2892
	push.32     %r2893
	call.32     %r2894 <- unbound_search
	phisrc.32   %phi112(return) <- %r2894
	br          .L608

.L608:
	phi.32      %r2885 <- %phi110(return), %phi111(return), %phi112(return)
	ret.32      %r2885


removeentry:
.L613:
	<entry-point>
	store.64*   %arg1 -> 0[n]
	load.64*    %r2895 <- 0[n]
	load.32     %r2896 <- 24[%r2895]
	setge.32    %r2897 <- %r2896, $4
	cbr         %r2897, .L614, .L615

.L614:
	load.64*    %r2898 <- 0[n]
	store.32    $11 -> 24[%r2898]
	br          .L615

.L615:
	ret


reallymarkobject:
.L616:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[o]
	load.64*    %r2899 <- 0[o]
	load.8      %r2900 <- 9[%r2899]
	cast.32     %r2901 <- (8) %r2900
	and.32      %r2902 <- %r2901, $252
	scast.8     %r2903 <- (32) %r2902
	store.8     %r2903 -> 9[%r2899]
	load.64*    %r2904 <- 0[o]
	load.8      %r2905 <- 8[%r2904]
	switch.8    %r2905, 4 -> .L618, 5 -> .L622, 6 -> .L621, 7 -> .L619, 8 -> .L623, 9 -> .L624, 10 -> .L620, default -> .L625

.L618:
	br          .L626

.L619:
	load.64*    %r2906 <- 0[o]
	load.64*    %r2907 <- 16[%r2906]
	store.64*   %r2907 -> 0[mt]
	load.64*    %r2908 <- 0[o]
	load.8      %r2909 <- 9[%r2908]
	cast.32     %r2910 <- (8) %r2909
	or.32       %r2911 <- %r2910, $4
	scast.8     %r2912 <- (32) %r2911
	store.8     %r2912 -> 9[%r2908]
	load.64*    %r2913 <- 0[mt]
	cbr         %r2913, .L627, .L628

.L627:
	load.64*    %r2914 <- 0[mt]
	ptrcast.64* %r2915 <- (64) %r2914
	load.8      %r2916 <- 9[%r2915]
	cast.32     %r2917 <- (8) %r2916
	and.32      %r2918 <- %r2917, $3
	cbr         %r2918, .L629, .L630

.L629:
	load.64*    %r2919 <- 0[g]
	load.64*    %r2920 <- 0[mt]
	ptrcast.64* %r2921 <- (64) %r2920
	push.64*    %r2919
	push.64*    %r2921
	call        reallymarkobject
	br          .L630

.L630:
	br          .L628

.L628:
	load.64*    %r2922 <- 0[o]
	load.64*    %r2923 <- 24[%r2922]
	ptrcast.64* %r2924 <- (64) %r2923
	load.8      %r2925 <- 9[%r2924]
	cast.32     %r2926 <- (8) %r2925
	and.32      %r2927 <- %r2926, $3
	cbr         %r2927, .L631, .L632

.L631:
	load.64*    %r2928 <- 0[g]
	load.64*    %r2929 <- 0[o]
	load.64*    %r2930 <- 24[%r2929]
	ptrcast.64* %r2931 <- (64) %r2930
	push.64*    %r2928
	push.64*    %r2931
	call        reallymarkobject
	br          .L632

.L632:
	br          .L626

.L620:
	load.64*    %r2932 <- 0[o]
	add.64*     %r2933 <- %r2932, $0
	store.64*   %r2933 -> 0[uv]
	load.64*    %r2934 <- 0[uv]
	load.64*    %r2935 <- 16[%r2934]
	load.32     %r2936 <- 8[%r2935]
	setge.32    %r2937 <- %r2936, $4
	cbr         %r2937, .L635, .L634

.L635:
	load.64*    %r2938 <- 0[uv]
	load.64*    %r2939 <- 16[%r2938]
	load.64*    %r2940 <- 0[%r2939]
	load.8      %r2941 <- 9[%r2940]
	cast.32     %r2942 <- (8) %r2941
	and.32      %r2943 <- %r2942, $3
	cbr         %r2943, .L633, .L634

.L633:
	load.64*    %r2944 <- 0[g]
	load.64*    %r2945 <- 0[uv]
	load.64*    %r2946 <- 16[%r2945]
	load.64*    %r2947 <- 0[%r2946]
	push.64*    %r2944
	push.64*    %r2947
	call        reallymarkobject
	br          .L634

.L634:
	load.64*    %r2948 <- 0[uv]
	load.64*    %r2949 <- 16[%r2948]
	load.64*    %r2950 <- 0[uv]
	add.64*     %r2951 <- %r2950, $24
	add.64*     %r2952 <- %r2951, $0
	seteq.32    %r2953 <- %r2949, %r2952
	cbr         %r2953, .L636, .L637

.L636:
	load.64*    %r2954 <- 0[o]
	load.8      %r2955 <- 9[%r2954]
	cast.32     %r2956 <- (8) %r2955
	or.32       %r2957 <- %r2956, $4
	scast.8     %r2958 <- (32) %r2957
	store.8     %r2958 -> 9[%r2954]
	br          .L637

.L637:
	br          .L626

.L621:
	load.64*    %r2959 <- 0[g]
	load.64*    %r2960 <- 56[%r2959]
	load.64*    %r2961 <- 0[o]
	store.64*   %r2960 -> 16[%r2961]
	load.64*    %r2962 <- 0[o]
	load.64*    %r2963 <- 0[g]
	store.64*   %r2962 -> 56[%r2963]
	br          .L617

.L622:
	load.64*    %r2964 <- 0[g]
	load.64*    %r2965 <- 56[%r2964]
	load.64*    %r2966 <- 0[o]
	store.64*   %r2965 -> 48[%r2966]
	load.64*    %r2967 <- 0[o]
	load.64*    %r2968 <- 0[g]
	store.64*   %r2967 -> 56[%r2968]
	br          .L617

.L623:
	load.64*    %r2969 <- 0[g]
	load.64*    %r2970 <- 56[%r2969]
	load.64*    %r2971 <- 0[o]
	store.64*   %r2970 -> 160[%r2971]
	load.64*    %r2972 <- 0[o]
	load.64*    %r2973 <- 0[g]
	store.64*   %r2972 -> 56[%r2973]
	br          .L617

.L624:
	load.64*    %r2974 <- 0[g]
	load.64*    %r2975 <- 56[%r2974]
	load.64*    %r2976 <- 0[o]
	store.64*   %r2975 -> 104[%r2976]
	load.64*    %r2977 <- 0[o]
	load.64*    %r2978 <- 0[g]
	store.64*   %r2977 -> 56[%r2978]
	br          .L617

.L625:
	br          .L617

.L617:
	br          .L626

.L626:
	ret


marktmu:
.L638:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r2979 <- 0[g]
	load.64*    %r2980 <- 80[%r2979]
	store.64*   %r2980 -> 0[u]
	load.64*    %r2981 <- 0[u]
	cbr         %r2981, .L639, .L640

.L639:
	br          .L641

.L641:
	load.64*    %r2982 <- 0[u]
	load.64*    %r2983 <- 0[%r2982]
	store.64*   %r2983 -> 0[u]
	load.64*    %r2984 <- 0[u]
	load.8      %r2985 <- 9[%r2984]
	cast.32     %r2986 <- (8) %r2985
	and.32      %r2987 <- %r2986, $248
	load.64*    %r2988 <- 0[g]
	load.8      %r2989 <- 32[%r2988]
	cast.32     %r2990 <- (8) %r2989
	and.32      %r2991 <- %r2990, $3
	scast.8     %r2992 <- (32) %r2991
	cast.32     %r2993 <- (8) %r2992
	or.32       %r2994 <- %r2987, %r2993
	scast.8     %r2995 <- (32) %r2994
	load.64*    %r2996 <- 0[u]
	store.8     %r2995 -> 9[%r2996]
	load.64*    %r2997 <- 0[g]
	load.64*    %r2998 <- 0[u]
	push.64*    %r2997
	push.64*    %r2998
	call        reallymarkobject
	br          .L642

.L642:
	load.64*    %r2999 <- 0[u]
	load.64*    %r3000 <- 0[g]
	load.64*    %r3001 <- 80[%r3000]
	setne.32    %r3002 <- %r2999, %r3001
	cbr         %r3002, .L641, .L643

.L643:
	br          .L640

.L640:
	ret


luaC_separateudata:
.L644:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[all]
	load.64*    %r3003 <- 0[L]
	load.64*    %r3004 <- 32[%r3003]
	store.64*   %r3004 -> 0[g]
	store.64    $0 -> 0[deadmem]
	load.64*    %r3005 <- 0[g]
	load.64*    %r3006 <- 176[%r3005]
	add.64*     %r3007 <- %r3006, $0
	store.64*   %r3007 -> 0[p]
	br          .L648

.L648:
	load.64*    %r3008 <- 0[p]
	load.64*    %r3009 <- 0[%r3008]
	store.64*   %r3009 -> 0[curr]
	setne.32    %r3010 <- %r3009, $0
	cbr         %r3010, .L645, .L647

.L645:
	load.64*    %r3011 <- 0[curr]
	load.8      %r3012 <- 9[%r3011]
	cast.32     %r3013 <- (8) %r3012
	and.32      %r3014 <- %r3013, $3
	setne.1     %r3015 <- %r3014, $0
	load.32     %r3016 <- 0[all]
	setne.1     %r3017 <- %r3016, $0
	or-bool.1   %r3018 <- %r3015, %r3017
	cast.32     %r3019 <- (1) %r3018
	cbr         %r3019, .L651, .L649

.L651:
	load.64*    %r3020 <- 0[curr]
	load.8      %r3021 <- 9[%r3020]
	cast.32     %r3022 <- (8) %r3021
	and.32      %r3023 <- %r3022, $8
	cbr         %r3023, .L649, .L650

.L649:
	load.64*    %r3024 <- 0[curr]
	add.64*     %r3025 <- %r3024, $0
	add.64*     %r3026 <- %r3025, $0
	store.64*   %r3026 -> 0[p]
	br          .L652

.L650:
	load.64*    %r3027 <- 0[curr]
	load.64*    %r3028 <- 16[%r3027]
	seteq.32    %r3029 <- %r3028, $0
	cbr         %r3029, .L655, .L656

.L655:
	phisrc.64*  %phi113 <- $0
	br          .L657

.L656:
	load.64*    %r3030 <- 0[curr]
	load.64*    %r3031 <- 16[%r3030]
	load.8      %r3032 <- 10[%r3031]
	cast.32     %r3033 <- (8) %r3032
	and.32      %r3034 <- %r3033, $4
	cbr         %r3034, .L658, .L659

.L658:
	phisrc.64*  %phi114 <- $0
	br          .L660

.L659:
	load.64*    %r3035 <- 0[curr]
	load.64*    %r3036 <- 16[%r3035]
	load.64*    %r3037 <- 0[L]
	load.64*    %r3038 <- 32[%r3037]
	load.64*    %r3039 <- 312[%r3038]
	push.64*    %r3036
	push.32     $2
	push.64*    %r3039
	call.64*    %r3040 <- luaT_gettm
	phisrc.64*  %phi115 <- %r3040
	br          .L660

.L660:
	phi.64*     %r3041 <- %phi114, %phi115
	phisrc.64*  %phi116 <- %r3041
	br          .L657

.L657:
	phi.64*     %r3042 <- %phi113, %phi116
	seteq.32    %r3043 <- %r3042, $0
	cbr         %r3043, .L653, .L654

.L653:
	load.64*    %r3044 <- 0[curr]
	load.8      %r3045 <- 9[%r3044]
	cast.32     %r3046 <- (8) %r3045
	or.32       %r3047 <- %r3046, $8
	scast.8     %r3048 <- (32) %r3047
	store.8     %r3048 -> 9[%r3044]
	load.64*    %r3049 <- 0[curr]
	add.64*     %r3050 <- %r3049, $0
	add.64*     %r3051 <- %r3050, $0
	store.64*   %r3051 -> 0[p]
	br          .L661

.L654:
	load.64*    %r3052 <- 0[curr]
	load.64     %r3053 <- 32[%r3052]
	add.64      %r3054 <- $40, %r3053
	load.64     %r3055 <- 0[deadmem]
	cast.64     %r3056 <- (64) %r3055
	add.64      %r3057 <- %r3056, %r3054
	cast.64     %r3058 <- (64) %r3057
	store.64    %r3058 -> 0[deadmem]
	load.64*    %r3059 <- 0[curr]
	load.8      %r3060 <- 9[%r3059]
	cast.32     %r3061 <- (8) %r3060
	or.32       %r3062 <- %r3061, $8
	scast.8     %r3063 <- (32) %r3062
	store.8     %r3063 -> 9[%r3059]
	load.64*    %r3064 <- 0[curr]
	load.64*    %r3065 <- 0[%r3064]
	load.64*    %r3066 <- 0[p]
	store.64*   %r3065 -> 0[%r3066]
	load.64*    %r3067 <- 0[g]
	load.64*    %r3068 <- 80[%r3067]
	seteq.32    %r3069 <- %r3068, $0
	cbr         %r3069, .L662, .L663

.L662:
	load.64*    %r3070 <- 0[curr]
	load.64*    %r3071 <- 0[curr]
	store.64*   %r3070 -> 0[%r3071]
	load.64*    %r3072 <- 0[g]
	store.64*   %r3070 -> 80[%r3072]
	br          .L664

.L663:
	load.64*    %r3073 <- 0[g]
	load.64*    %r3074 <- 80[%r3073]
	load.64*    %r3075 <- 0[%r3074]
	load.64*    %r3076 <- 0[curr]
	store.64*   %r3075 -> 0[%r3076]
	load.64*    %r3077 <- 0[curr]
	load.64*    %r3078 <- 0[g]
	load.64*    %r3079 <- 80[%r3078]
	store.64*   %r3077 -> 0[%r3079]
	load.64*    %r3080 <- 0[curr]
	load.64*    %r3081 <- 0[g]
	store.64*   %r3080 -> 80[%r3081]
	br          .L664

.L664:
	br          .L661

.L661:
	br          .L652

.L652:
	br          .L646

.L646:
	br          .L648

.L647:
	load.64     %r3082 <- 0[deadmem]
	phisrc.64   %phi117(return) <- %r3082
	br          .L665

.L665:
	phi.64      %r3083 <- %phi117(return)
	ret.64      %r3082


traversetable:
.L666:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[h]
	store.32    $0 -> 0[weakkey]
	store.32    $0 -> 0[weakvalue]
	load.64*    %r3084 <- 0[h]
	load.64*    %r3085 <- 16[%r3084]
	cbr         %r3085, .L667, .L668

.L667:
	load.64*    %r3086 <- 0[h]
	load.64*    %r3087 <- 16[%r3086]
	ptrcast.64* %r3088 <- (64) %r3087
	load.8      %r3089 <- 9[%r3088]
	cast.32     %r3090 <- (8) %r3089
	and.32      %r3091 <- %r3090, $3
	cbr         %r3091, .L669, .L670

.L669:
	load.64*    %r3092 <- 0[g]
	load.64*    %r3093 <- 0[h]
	load.64*    %r3094 <- 16[%r3093]
	ptrcast.64* %r3095 <- (64) %r3094
	push.64*    %r3092
	push.64*    %r3095
	call        reallymarkobject
	br          .L670

.L670:
	br          .L668

.L668:
	load.64*    %r3096 <- 0[h]
	load.64*    %r3097 <- 16[%r3096]
	seteq.32    %r3098 <- %r3097, $0
	cbr         %r3098, .L671, .L672

.L671:
	phisrc.64*  %phi118 <- $0
	br          .L673

.L672:
	load.64*    %r3099 <- 0[h]
	load.64*    %r3100 <- 16[%r3099]
	load.8      %r3101 <- 10[%r3100]
	cast.32     %r3102 <- (8) %r3101
	and.32      %r3103 <- %r3102, $8
	cbr         %r3103, .L674, .L675

.L674:
	phisrc.64*  %phi119 <- $0
	br          .L676

.L675:
	load.64*    %r3104 <- 0[h]
	load.64*    %r3105 <- 16[%r3104]
	load.64*    %r3106 <- 0[g]
	load.64*    %r3107 <- 320[%r3106]
	push.64*    %r3105
	push.32     $3
	push.64*    %r3107
	call.64*    %r3108 <- luaT_gettm
	phisrc.64*  %phi120 <- %r3108
	br          .L676

.L676:
	phi.64*     %r3109 <- %phi119, %phi120
	phisrc.64*  %phi121 <- %r3109
	br          .L673

.L673:
	phi.64*     %r3110 <- %phi118, %phi121
	store.64*   %r3110 -> 0[mode]
	load.64*    %r3111 <- 0[mode]
	cbr         %r3111, .L679, .L678

.L679:
	load.64*    %r3112 <- 0[mode]
	load.32     %r3113 <- 8[%r3112]
	scast.32    %r3114 <- (32) %r3113
	seteq.32    %r3115 <- %r3114, $4
	cbr         %r3115, .L677, .L678

.L677:
	load.64*    %r3116 <- 0[mode]
	load.64*    %r3117 <- 0[%r3116]
	add.64*     %r3118 <- %r3117, $0
	add.64*     %r3119 <- %r3118, $24
	ptrcast.64* %r3120 <- (64) %r3119
	push.64*    %r3120
	push.32     $107
	call.64*    %r3121 <- strchr
	setne.32    %r3122 <- %r3121, $0
	store.32    %r3122 -> 0[weakkey]
	load.64*    %r3123 <- 0[mode]
	load.64*    %r3124 <- 0[%r3123]
	add.64*     %r3125 <- %r3124, $0
	add.64*     %r3126 <- %r3125, $24
	ptrcast.64* %r3127 <- (64) %r3126
	push.64*    %r3127
	push.32     $118
	call.64*    %r3128 <- strchr
	setne.32    %r3129 <- %r3128, $0
	store.32    %r3129 -> 0[weakvalue]
	load.32     %r3130 <- 0[weakkey]
	setne.1     %r3131 <- %r3130, $0
	load.32     %r3132 <- 0[weakvalue]
	setne.1     %r3133 <- %r3132, $0
	or-bool.1   %r3134 <- %r3131, %r3133
	cast.32     %r3135 <- (1) %r3134
	cbr         %r3135, .L680, .L681

.L680:
	load.64*    %r3136 <- 0[h]
	load.8      %r3137 <- 9[%r3136]
	cast.32     %r3138 <- (8) %r3137
	and.32      %r3139 <- %r3138, $0xffffffe7
	scast.8     %r3140 <- (32) %r3139
	store.8     %r3140 -> 9[%r3136]
	load.32     %r3141 <- 0[weakkey]
	shl.32      %r3142 <- %r3141, $3
	load.32     %r3143 <- 0[weakvalue]
	shl.32      %r3144 <- %r3143, $4
	or.32       %r3145 <- %r3142, %r3144
	scast.8     %r3146 <- (32) %r3145
	cast.32     %r3147 <- (8) %r3146
	load.64*    %r3148 <- 0[h]
	load.8      %r3149 <- 9[%r3148]
	cast.32     %r3150 <- (8) %r3149
	or.32       %r3151 <- %r3150, %r3147
	scast.8     %r3152 <- (32) %r3151
	store.8     %r3152 -> 9[%r3148]
	load.64*    %r3153 <- 0[g]
	load.64*    %r3154 <- 72[%r3153]
	load.64*    %r3155 <- 0[h]
	store.64*   %r3154 -> 48[%r3155]
	load.64*    %r3156 <- 0[h]
	ptrcast.64* %r3157 <- (64) %r3156
	load.64*    %r3158 <- 0[g]
	store.64*   %r3157 -> 72[%r3158]
	br          .L681

.L681:
	br          .L678

.L678:
	load.32     %r3159 <- 0[weakkey]
	setne.1     %r3160 <- %r3159, $0
	load.32     %r3161 <- 0[weakvalue]
	setne.1     %r3162 <- %r3161, $0
	and-bool.1  %r3163 <- %r3160, %r3162
	cast.32     %r3164 <- (1) %r3163
	cbr         %r3164, .L682, .L683

.L682:
	phisrc.32   %phi122(return) <- $1
	br          .L684

.L683:
	load.32     %r3166 <- 0[weakvalue]
	cbr         %r3166, .L686, .L685

.L685:
	load.64*    %r3167 <- 0[h]
	load.32     %r3168 <- 56[%r3167]
	store.32    %r3168 -> 0[i]
	br          .L690

.L690:
	load.32     %r3169 <- 0[i]
	sub.32      %r3170 <- %r3169, $1
	store.32    %r3170 -> 0[i]
	cbr         %r3169, .L687, .L689

.L687:
	load.64*    %r3171 <- 0[h]
	load.64*    %r3172 <- 24[%r3171]
	load.32     %r3173 <- 0[i]
	scast.64    %r3174 <- (32) %r3173
	muls.64     %r3175 <- %r3174, $16
	add.64*     %r3176 <- %r3172, %r3175
	load.32     %r3177 <- 8[%r3176]
	setge.32    %r3178 <- %r3177, $4
	cbr         %r3178, .L693, .L692

.L693:
	load.64*    %r3179 <- 0[h]
	load.64*    %r3180 <- 24[%r3179]
	load.32     %r3181 <- 0[i]
	scast.64    %r3182 <- (32) %r3181
	muls.64     %r3183 <- %r3182, $16
	add.64*     %r3184 <- %r3180, %r3183
	load.64*    %r3185 <- 0[%r3184]
	load.8      %r3186 <- 9[%r3185]
	cast.32     %r3187 <- (8) %r3186
	and.32      %r3188 <- %r3187, $3
	cbr         %r3188, .L691, .L692

.L691:
	load.64*    %r3189 <- 0[g]
	load.64*    %r3190 <- 0[h]
	load.64*    %r3191 <- 24[%r3190]
	load.32     %r3192 <- 0[i]
	scast.64    %r3193 <- (32) %r3192
	muls.64     %r3194 <- %r3193, $16
	add.64*     %r3195 <- %r3191, %r3194
	load.64*    %r3196 <- 0[%r3195]
	push.64*    %r3189
	push.64*    %r3196
	call        reallymarkobject
	br          .L692

.L692:
	br          .L688

.L688:
	br          .L690

.L689:
	br          .L686

.L686:
	load.64*    %r3197 <- 0[h]
	load.8      %r3198 <- 11[%r3197]
	cast.32     %r3199 <- (8) %r3198
	shl.64      %r3200 <- $1, %r3199
	cast.32     %r3201 <- (64) %r3200
	store.32    %r3201 -> 0[i]
	br          .L697

.L697:
	load.32     %r3202 <- 0[i]
	sub.32      %r3203 <- %r3202, $1
	store.32    %r3203 -> 0[i]
	cbr         %r3202, .L694, .L696

.L694:
	load.64*    %r3204 <- 0[h]
	load.64*    %r3205 <- 32[%r3204]
	load.32     %r3206 <- 0[i]
	scast.64    %r3207 <- (32) %r3206
	muls.64     %r3208 <- %r3207, $40
	add.64*     %r3209 <- %r3205, %r3208
	store.64*   %r3209 -> 0[n]
	load.64*    %r3210 <- 0[n]
	load.32     %r3211 <- 8[%r3210]
	seteq.32    %r3212 <- %r3211, $0
	cbr         %r3212, .L698, .L699

.L698:
	load.64*    %r3213 <- 0[n]
	push.64*    %r3213
	call        removeentry
	br          .L700

.L699:
	load.32     %r3214 <- 0[weakkey]
	cbr         %r3214, .L702, .L701

.L701:
	load.64*    %r3215 <- 0[n]
	load.32     %r3216 <- 24[%r3215]
	setge.32    %r3217 <- %r3216, $4
	cbr         %r3217, .L705, .L704

.L705:
	load.64*    %r3218 <- 0[n]
	load.64*    %r3219 <- 16[%r3218]
	load.8      %r3220 <- 9[%r3219]
	cast.32     %r3221 <- (8) %r3220
	and.32      %r3222 <- %r3221, $3
	cbr         %r3222, .L703, .L704

.L703:
	load.64*    %r3223 <- 0[g]
	load.64*    %r3224 <- 0[n]
	load.64*    %r3225 <- 16[%r3224]
	push.64*    %r3223
	push.64*    %r3225
	call        reallymarkobject
	br          .L704

.L704:
	br          .L702

.L702:
	load.32     %r3226 <- 0[weakvalue]
	cbr         %r3226, .L707, .L706

.L706:
	load.64*    %r3227 <- 0[n]
	load.32     %r3228 <- 8[%r3227]
	setge.32    %r3229 <- %r3228, $4
	cbr         %r3229, .L710, .L709

.L710:
	load.64*    %r3230 <- 0[n]
	load.64*    %r3231 <- 0[%r3230]
	load.8      %r3232 <- 9[%r3231]
	cast.32     %r3233 <- (8) %r3232
	and.32      %r3234 <- %r3233, $3
	cbr         %r3234, .L708, .L709

.L708:
	load.64*    %r3235 <- 0[g]
	load.64*    %r3236 <- 0[n]
	load.64*    %r3237 <- 0[%r3236]
	push.64*    %r3235
	push.64*    %r3237
	call        reallymarkobject
	br          .L709

.L709:
	br          .L707

.L707:
	br          .L700

.L700:
	br          .L695

.L695:
	br          .L697

.L696:
	load.32     %r3238 <- 0[weakkey]
	setne.1     %r3239 <- %r3238, $0
	load.32     %r3240 <- 0[weakvalue]
	setne.1     %r3241 <- %r3240, $0
	or-bool.1   %r3242 <- %r3239, %r3241
	cast.32     %r3243 <- (1) %r3242
	phisrc.32   %phi123(return) <- %r3243
	br          .L684

.L684:
	phi.32      %r3165 <- %phi122(return), %phi123(return)
	ret.32      %r3165


traverseproto:
.L711:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[f]
	load.64*    %r3244 <- 0[f]
	load.64*    %r3245 <- 64[%r3244]
	cbr         %r3245, .L712, .L713

.L712:
	load.64*    %r3246 <- 0[f]
	load.64*    %r3247 <- 64[%r3246]
	load.8      %r3248 <- 9[%r3247]
	cast.32     %r3249 <- (8) %r3248
	and.32      %r3250 <- %r3249, $252
	scast.8     %r3251 <- (32) %r3250
	store.8     %r3251 -> 9[%r3247]
	br          .L713

.L713:
	store.32    $0 -> 0[i]
	br          .L717

.L717:
	load.32     %r3252 <- 0[i]
	load.64*    %r3253 <- 0[f]
	load.32     %r3254 <- 76[%r3253]
	setlt.32    %r3255 <- %r3252, %r3254
	cbr         %r3255, .L714, .L716

.L714:
	load.64*    %r3256 <- 0[f]
	load.64*    %r3257 <- 16[%r3256]
	load.32     %r3258 <- 0[i]
	scast.64    %r3259 <- (32) %r3258
	muls.64     %r3260 <- %r3259, $16
	add.64*     %r3261 <- %r3257, %r3260
	load.32     %r3262 <- 8[%r3261]
	setge.32    %r3263 <- %r3262, $4
	cbr         %r3263, .L720, .L719

.L720:
	load.64*    %r3264 <- 0[f]
	load.64*    %r3265 <- 16[%r3264]
	load.32     %r3266 <- 0[i]
	scast.64    %r3267 <- (32) %r3266
	muls.64     %r3268 <- %r3267, $16
	add.64*     %r3269 <- %r3265, %r3268
	load.64*    %r3270 <- 0[%r3269]
	load.8      %r3271 <- 9[%r3270]
	cast.32     %r3272 <- (8) %r3271
	and.32      %r3273 <- %r3272, $3
	cbr         %r3273, .L718, .L719

.L718:
	load.64*    %r3274 <- 0[g]
	load.64*    %r3275 <- 0[f]
	load.64*    %r3276 <- 16[%r3275]
	load.32     %r3277 <- 0[i]
	scast.64    %r3278 <- (32) %r3277
	muls.64     %r3279 <- %r3278, $16
	add.64*     %r3280 <- %r3276, %r3279
	load.64*    %r3281 <- 0[%r3280]
	push.64*    %r3274
	push.64*    %r3281
	call        reallymarkobject
	br          .L719

.L719:
	br          .L715

.L715:
	load.32     %r3282 <- 0[i]
	add.32      %r3283 <- %r3282, $1
	store.32    %r3283 -> 0[i]
	br          .L717

.L716:
	store.32    $0 -> 0[i]
	br          .L724

.L724:
	load.32     %r3284 <- 0[i]
	load.64*    %r3285 <- 0[f]
	load.32     %r3286 <- 72[%r3285]
	setlt.32    %r3287 <- %r3284, %r3286
	cbr         %r3287, .L721, .L723

.L721:
	load.64*    %r3288 <- 0[f]
	load.64*    %r3289 <- 56[%r3288]
	load.32     %r3290 <- 0[i]
	scast.64    %r3291 <- (32) %r3290
	muls.64     %r3292 <- %r3291, $8
	add.64*     %r3293 <- %r3289, %r3292
	load.64*    %r3294 <- 0[%r3293]
	cbr         %r3294, .L725, .L726

.L725:
	load.64*    %r3295 <- 0[f]
	load.64*    %r3296 <- 56[%r3295]
	load.32     %r3297 <- 0[i]
	scast.64    %r3298 <- (32) %r3297
	muls.64     %r3299 <- %r3298, $8
	add.64*     %r3300 <- %r3296, %r3299
	load.64*    %r3301 <- 0[%r3300]
	load.8      %r3302 <- 9[%r3301]
	cast.32     %r3303 <- (8) %r3302
	and.32      %r3304 <- %r3303, $252
	scast.8     %r3305 <- (32) %r3304
	store.8     %r3305 -> 9[%r3301]
	br          .L726

.L726:
	br          .L722

.L722:
	load.32     %r3306 <- 0[i]
	add.32      %r3307 <- %r3306, $1
	store.32    %r3307 -> 0[i]
	br          .L724

.L723:
	store.32    $0 -> 0[i]
	br          .L730

.L730:
	load.32     %r3308 <- 0[i]
	load.64*    %r3309 <- 0[f]
	load.32     %r3310 <- 88[%r3309]
	setlt.32    %r3311 <- %r3308, %r3310
	cbr         %r3311, .L727, .L729

.L727:
	load.64*    %r3312 <- 0[f]
	load.64*    %r3313 <- 32[%r3312]
	load.32     %r3314 <- 0[i]
	scast.64    %r3315 <- (32) %r3314
	muls.64     %r3316 <- %r3315, $8
	add.64*     %r3317 <- %r3313, %r3316
	load.64*    %r3318 <- 0[%r3317]
	cbr         %r3318, .L731, .L732

.L731:
	load.64*    %r3319 <- 0[f]
	load.64*    %r3320 <- 32[%r3319]
	load.32     %r3321 <- 0[i]
	scast.64    %r3322 <- (32) %r3321
	muls.64     %r3323 <- %r3322, $8
	add.64*     %r3324 <- %r3320, %r3323
	load.64*    %r3325 <- 0[%r3324]
	ptrcast.64* %r3326 <- (64) %r3325
	load.8      %r3327 <- 9[%r3326]
	cast.32     %r3328 <- (8) %r3327
	and.32      %r3329 <- %r3328, $3
	cbr         %r3329, .L733, .L734

.L733:
	load.64*    %r3330 <- 0[g]
	load.64*    %r3331 <- 0[f]
	load.64*    %r3332 <- 32[%r3331]
	load.32     %r3333 <- 0[i]
	scast.64    %r3334 <- (32) %r3333
	muls.64     %r3335 <- %r3334, $8
	add.64*     %r3336 <- %r3332, %r3335
	load.64*    %r3337 <- 0[%r3336]
	ptrcast.64* %r3338 <- (64) %r3337
	push.64*    %r3330
	push.64*    %r3338
	call        reallymarkobject
	br          .L734

.L734:
	br          .L732

.L732:
	br          .L728

.L728:
	load.32     %r3339 <- 0[i]
	add.32      %r3340 <- %r3339, $1
	store.32    %r3340 -> 0[i]
	br          .L730

.L729:
	store.32    $0 -> 0[i]
	br          .L738

.L738:
	load.32     %r3341 <- 0[i]
	load.64*    %r3342 <- 0[f]
	load.32     %r3343 <- 92[%r3342]
	setlt.32    %r3344 <- %r3341, %r3343
	cbr         %r3344, .L735, .L737

.L735:
	load.64*    %r3345 <- 0[f]
	load.64*    %r3346 <- 48[%r3345]
	load.32     %r3347 <- 0[i]
	scast.64    %r3348 <- (32) %r3347
	muls.64     %r3349 <- %r3348, $16
	add.64*     %r3350 <- %r3346, %r3349
	load.64*    %r3351 <- 0[%r3350]
	cbr         %r3351, .L739, .L740

.L739:
	load.64*    %r3352 <- 0[f]
	load.64*    %r3353 <- 48[%r3352]
	load.32     %r3354 <- 0[i]
	scast.64    %r3355 <- (32) %r3354
	muls.64     %r3356 <- %r3355, $16
	add.64*     %r3357 <- %r3353, %r3356
	load.64*    %r3358 <- 0[%r3357]
	load.8      %r3359 <- 9[%r3358]
	cast.32     %r3360 <- (8) %r3359
	and.32      %r3361 <- %r3360, $252
	scast.8     %r3362 <- (32) %r3361
	store.8     %r3362 -> 9[%r3358]
	br          .L740

.L740:
	br          .L736

.L736:
	load.32     %r3363 <- 0[i]
	add.32      %r3364 <- %r3363, $1
	store.32    %r3364 -> 0[i]
	br          .L738

.L737:
	ret


traverseclosure:
.L741:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[cl]
	load.64*    %r3365 <- 0[cl]
	load.64*    %r3366 <- 24[%r3365]
	ptrcast.64* %r3367 <- (64) %r3366
	load.8      %r3368 <- 9[%r3367]
	cast.32     %r3369 <- (8) %r3368
	and.32      %r3370 <- %r3369, $3
	cbr         %r3370, .L742, .L743

.L742:
	load.64*    %r3371 <- 0[g]
	load.64*    %r3372 <- 0[cl]
	load.64*    %r3373 <- 24[%r3372]
	ptrcast.64* %r3374 <- (64) %r3373
	push.64*    %r3371
	push.64*    %r3374
	call        reallymarkobject
	br          .L743

.L743:
	load.64*    %r3375 <- 0[cl]
	load.8      %r3376 <- 10[%r3375]
	cbr         %r3376, .L744, .L745

.L744:
	store.32    $0 -> 0[i]
	br          .L749

.L749:
	load.32     %r3377 <- 0[i]
	load.64*    %r3378 <- 0[cl]
	load.8      %r3379 <- 11[%r3378]
	cast.32     %r3380 <- (8) %r3379
	setlt.32    %r3381 <- %r3377, %r3380
	cbr         %r3381, .L746, .L748

.L746:
	load.64*    %r3382 <- 0[cl]
	add.64*     %r3383 <- %r3382, $0
	add.64*     %r3384 <- %r3383, $40
	load.32     %r3385 <- 0[i]
	scast.64    %r3386 <- (32) %r3385
	muls.64     %r3387 <- %r3386, $16
	add.64*     %r3388 <- %r3384, %r3387
	load.32     %r3389 <- 8[%r3388]
	setge.32    %r3390 <- %r3389, $4
	cbr         %r3390, .L752, .L751

.L752:
	load.64*    %r3391 <- 0[cl]
	add.64*     %r3392 <- %r3391, $0
	add.64*     %r3393 <- %r3392, $40
	load.32     %r3394 <- 0[i]
	scast.64    %r3395 <- (32) %r3394
	muls.64     %r3396 <- %r3395, $16
	add.64*     %r3397 <- %r3393, %r3396
	load.64*    %r3398 <- 0[%r3397]
	load.8      %r3399 <- 9[%r3398]
	cast.32     %r3400 <- (8) %r3399
	and.32      %r3401 <- %r3400, $3
	cbr         %r3401, .L750, .L751

.L750:
	load.64*    %r3402 <- 0[g]
	load.64*    %r3403 <- 0[cl]
	add.64*     %r3404 <- %r3403, $0
	add.64*     %r3405 <- %r3404, $40
	load.32     %r3406 <- 0[i]
	scast.64    %r3407 <- (32) %r3406
	muls.64     %r3408 <- %r3407, $16
	add.64*     %r3409 <- %r3405, %r3408
	load.64*    %r3410 <- 0[%r3409]
	push.64*    %r3402
	push.64*    %r3410
	call        reallymarkobject
	br          .L751

.L751:
	br          .L747

.L747:
	load.32     %r3411 <- 0[i]
	add.32      %r3412 <- %r3411, $1
	store.32    %r3412 -> 0[i]
	br          .L749

.L748:
	br          .L753

.L745:
	load.64*    %r3413 <- 0[cl]
	load.64*    %r3414 <- 32[%r3413]
	ptrcast.64* %r3415 <- (64) %r3414
	load.8      %r3416 <- 9[%r3415]
	cast.32     %r3417 <- (8) %r3416
	and.32      %r3418 <- %r3417, $3
	cbr         %r3418, .L754, .L755

.L754:
	load.64*    %r3419 <- 0[g]
	load.64*    %r3420 <- 0[cl]
	load.64*    %r3421 <- 32[%r3420]
	ptrcast.64* %r3422 <- (64) %r3421
	push.64*    %r3419
	push.64*    %r3422
	call        reallymarkobject
	br          .L755

.L755:
	store.32    $0 -> 0[i]
	br          .L759

.L759:
	load.32     %r3423 <- 0[i]
	load.64*    %r3424 <- 0[cl]
	load.8      %r3425 <- 11[%r3424]
	cast.32     %r3426 <- (8) %r3425
	setlt.32    %r3427 <- %r3423, %r3426
	cbr         %r3427, .L756, .L758

.L756:
	load.64*    %r3428 <- 0[cl]
	add.64*     %r3429 <- %r3428, $0
	add.64*     %r3430 <- %r3429, $40
	load.32     %r3431 <- 0[i]
	scast.64    %r3432 <- (32) %r3431
	muls.64     %r3433 <- %r3432, $8
	add.64*     %r3434 <- %r3430, %r3433
	load.64*    %r3435 <- 0[%r3434]
	ptrcast.64* %r3436 <- (64) %r3435
	load.8      %r3437 <- 9[%r3436]
	cast.32     %r3438 <- (8) %r3437
	and.32      %r3439 <- %r3438, $3
	cbr         %r3439, .L760, .L761

.L760:
	load.64*    %r3440 <- 0[g]
	load.64*    %r3441 <- 0[cl]
	add.64*     %r3442 <- %r3441, $0
	add.64*     %r3443 <- %r3442, $40
	load.32     %r3444 <- 0[i]
	scast.64    %r3445 <- (32) %r3444
	muls.64     %r3446 <- %r3445, $8
	add.64*     %r3447 <- %r3443, %r3446
	load.64*    %r3448 <- 0[%r3447]
	ptrcast.64* %r3449 <- (64) %r3448
	push.64*    %r3440
	push.64*    %r3449
	call        reallymarkobject
	br          .L761

.L761:
	br          .L757

.L757:
	load.32     %r3450 <- 0[i]
	add.32      %r3451 <- %r3450, $1
	store.32    %r3451 -> 0[i]
	br          .L759

.L758:
	br          .L753

.L753:
	ret


checkstacksizes:
.L762:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[max]
	load.64*    %r3452 <- 0[L]
	load.64*    %r3453 <- 40[%r3452]
	load.64*    %r3454 <- 0[L]
	load.64*    %r3455 <- 80[%r3454]
	sub.64      %r3456 <- %r3453, %r3455
	divs.64     %r3457 <- %r3456, $40
	scast.32    %r3458 <- (64) %r3457
	store.32    %r3458 -> 0[ci_used]
	load.64*    %r3459 <- 0[max]
	load.64*    %r3460 <- 0[L]
	load.64*    %r3461 <- 64[%r3460]
	sub.64      %r3462 <- %r3459, %r3461
	divs.64     %r3463 <- %r3462, $16
	scast.32    %r3464 <- (64) %r3463
	store.32    %r3464 -> 0[s_used]
	load.64*    %r3465 <- 0[L]
	load.32     %r3466 <- 92[%r3465]
	setgt.32    %r3467 <- %r3466, $0x4e20
	cbr         %r3467, .L763, .L764

.L763:
	br          .L765

.L764:
	load.32     %r3468 <- 0[ci_used]
	muls.32     %r3469 <- $4, %r3468
	load.64*    %r3470 <- 0[L]
	load.32     %r3471 <- 92[%r3470]
	setlt.32    %r3472 <- %r3469, %r3471
	cbr         %r3472, .L768, .L767

.L768:
	load.64*    %r3473 <- 0[L]
	load.32     %r3474 <- 92[%r3473]
	setlt.32    %r3475 <- $16, %r3474
	cbr         %r3475, .L766, .L767

.L766:
	load.64*    %r3476 <- 0[L]
	load.64*    %r3477 <- 0[L]
	load.32     %r3478 <- 92[%r3477]
	divs.32     %r3479 <- %r3478, $2
	push.64*    %r3476
	push.32     %r3479
	call        luaD_reallocCI
	br          .L767

.L767:
	load.32     %r3480 <- 0[s_used]
	muls.32     %r3481 <- $4, %r3480
	load.64*    %r3482 <- 0[L]
	load.32     %r3483 <- 88[%r3482]
	setlt.32    %r3484 <- %r3481, %r3483
	cbr         %r3484, .L771, .L770

.L771:
	load.64*    %r3485 <- 0[L]
	load.32     %r3486 <- 88[%r3485]
	setlt.32    %r3487 <- $90, %r3486
	cbr         %r3487, .L769, .L770

.L769:
	load.64*    %r3488 <- 0[L]
	load.64*    %r3489 <- 0[L]
	load.32     %r3490 <- 88[%r3489]
	divs.32     %r3491 <- %r3490, $2
	push.64*    %r3488
	push.32     %r3491
	call        luaD_reallocstack
	br          .L770

.L770:
	br          .L765

.L765:
	ret


traversestack:
.L772:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[l]
	load.64*    %r3492 <- 0[l]
	load.32     %r3493 <- 128[%r3492]
	setge.32    %r3494 <- %r3493, $4
	cbr         %r3494, .L775, .L774

.L775:
	load.64*    %r3495 <- 0[l]
	load.64*    %r3496 <- 120[%r3495]
	load.8      %r3497 <- 9[%r3496]
	cast.32     %r3498 <- (8) %r3497
	and.32      %r3499 <- %r3498, $3
	cbr         %r3499, .L773, .L774

.L773:
	load.64*    %r3500 <- 0[g]
	load.64*    %r3501 <- 0[l]
	load.64*    %r3502 <- 120[%r3501]
	push.64*    %r3500
	push.64*    %r3502
	call        reallymarkobject
	br          .L774

.L774:
	load.64*    %r3503 <- 0[l]
	load.64*    %r3504 <- 16[%r3503]
	store.64*   %r3504 -> 0[lim]
	load.64*    %r3505 <- 0[l]
	load.64*    %r3506 <- 80[%r3505]
	store.64*   %r3506 -> 0[ci]
	br          .L779

.L779:
	load.64*    %r3507 <- 0[ci]
	load.64*    %r3508 <- 0[l]
	load.64*    %r3509 <- 40[%r3508]
	setbe.32    %r3510 <- %r3507, %r3509
	cbr         %r3510, .L776, .L778

.L776:
	load.64*    %r3511 <- 0[lim]
	load.64*    %r3512 <- 0[ci]
	load.64*    %r3513 <- 16[%r3512]
	setb.32     %r3514 <- %r3511, %r3513
	cbr         %r3514, .L780, .L781

.L780:
	load.64*    %r3515 <- 0[ci]
	load.64*    %r3516 <- 16[%r3515]
	store.64*   %r3516 -> 0[lim]
	br          .L781

.L781:
	br          .L777

.L777:
	load.64*    %r3517 <- 0[ci]
	add.64*     %r3518 <- %r3517, $40
	store.64*   %r3518 -> 0[ci]
	br          .L779

.L778:
	load.64*    %r3519 <- 0[l]
	load.64*    %r3520 <- 64[%r3519]
	store.64*   %r3520 -> 0[o]
	br          .L785

.L785:
	load.64*    %r3521 <- 0[o]
	load.64*    %r3522 <- 0[l]
	load.64*    %r3523 <- 16[%r3522]
	setb.32     %r3524 <- %r3521, %r3523
	cbr         %r3524, .L782, .L784

.L782:
	load.64*    %r3525 <- 0[o]
	load.32     %r3526 <- 8[%r3525]
	setge.32    %r3527 <- %r3526, $4
	cbr         %r3527, .L788, .L787

.L788:
	load.64*    %r3528 <- 0[o]
	load.64*    %r3529 <- 0[%r3528]
	load.8      %r3530 <- 9[%r3529]
	cast.32     %r3531 <- (8) %r3530
	and.32      %r3532 <- %r3531, $3
	cbr         %r3532, .L786, .L787

.L786:
	load.64*    %r3533 <- 0[g]
	load.64*    %r3534 <- 0[o]
	load.64*    %r3535 <- 0[%r3534]
	push.64*    %r3533
	push.64*    %r3535
	call        reallymarkobject
	br          .L787

.L787:
	br          .L783

.L783:
	load.64*    %r3536 <- 0[o]
	add.64*     %r3537 <- %r3536, $16
	store.64*   %r3537 -> 0[o]
	br          .L785

.L784:
	br          .L792

.L792:
	load.64*    %r3538 <- 0[o]
	load.64*    %r3539 <- 0[lim]
	setbe.32    %r3540 <- %r3538, %r3539
	cbr         %r3540, .L789, .L791

.L789:
	load.64*    %r3541 <- 0[o]
	store.32    $0 -> 8[%r3541]
	br          .L790

.L790:
	load.64*    %r3542 <- 0[o]
	add.64*     %r3543 <- %r3542, $16
	store.64*   %r3543 -> 0[o]
	br          .L792

.L791:
	load.64*    %r3544 <- 0[l]
	load.64*    %r3545 <- 0[lim]
	push.64*    %r3544
	push.64*    %r3545
	call        checkstacksizes
	br          .L793

.L793:
	ret


propagatemark:
.L794:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r3546 <- 0[g]
	load.64*    %r3547 <- 56[%r3546]
	store.64*   %r3547 -> 0[o]
	load.64*    %r3548 <- 0[o]
	load.8      %r3549 <- 9[%r3548]
	cast.32     %r3550 <- (8) %r3549
	or.32       %r3551 <- %r3550, $4
	scast.8     %r3552 <- (32) %r3551
	store.8     %r3552 -> 9[%r3548]
	load.64*    %r3553 <- 0[o]
	load.8      %r3554 <- 8[%r3553]
	switch.8    %r3554, 5 -> .L796, 6 -> .L797, 8 -> .L798, 9 -> .L799, default -> .L800

.L796:
	load.64*    %r3555 <- 0[o]
	add.64*     %r3556 <- %r3555, $0
	store.64*   %r3556 -> 0[h]
	load.64*    %r3557 <- 0[h]
	load.64*    %r3558 <- 48[%r3557]
	load.64*    %r3559 <- 0[g]
	store.64*   %r3558 -> 56[%r3559]
	load.64*    %r3560 <- 0[g]
	load.64*    %r3561 <- 0[h]
	push.64*    %r3560
	push.64*    %r3561
	call.32     %r3562 <- traversetable
	cbr         %r3562, .L801, .L802

.L801:
	load.64*    %r3563 <- 0[o]
	load.8      %r3564 <- 9[%r3563]
	cast.32     %r3565 <- (8) %r3564
	and.32      %r3566 <- %r3565, $251
	scast.8     %r3567 <- (32) %r3566
	store.8     %r3567 -> 9[%r3563]
	br          .L802

.L802:
	load.64*    %r3568 <- 0[h]
	load.32     %r3569 <- 56[%r3568]
	scast.64    %r3570 <- (32) %r3569
	mulu.64     %r3571 <- $16, %r3570
	add.64      %r3572 <- $64, %r3571
	load.64*    %r3573 <- 0[h]
	load.8      %r3574 <- 11[%r3573]
	cast.32     %r3575 <- (8) %r3574
	shl.64      %r3576 <- $1, %r3575
	mulu.64     %r3577 <- $40, %r3576
	add.64      %r3578 <- %r3572, %r3577
	cast.64     %r3579 <- (64) %r3578
	phisrc.64   %phi124(return) <- %r3579
	br          .L803

.L797:
	load.64*    %r3581 <- 0[o]
	add.64*     %r3582 <- %r3581, $0
	store.64*   %r3582 -> 0[cl]
	load.64*    %r3583 <- 0[cl]
	load.64*    %r3584 <- 16[%r3583]
	load.64*    %r3585 <- 0[g]
	store.64*   %r3584 -> 56[%r3585]
	load.64*    %r3586 <- 0[g]
	load.64*    %r3587 <- 0[cl]
	push.64*    %r3586
	push.64*    %r3587
	call        traverseclosure
	load.64*    %r3588 <- 0[cl]
	load.8      %r3589 <- 10[%r3588]
	cbr         %r3589, .L804, .L805

.L804:
	load.64*    %r3590 <- 0[cl]
	load.8      %r3591 <- 11[%r3590]
	cast.32     %r3592 <- (8) %r3591
	sub.32      %r3593 <- %r3592, $1
	scast.64    %r3594 <- (32) %r3593
	mulu.64     %r3595 <- $16, %r3594
	cast.32     %r3596 <- (64) %r3595
	add.32      %r3597 <- $56, %r3596
	phisrc.32   %phi125 <- %r3597
	br          .L806

.L805:
	load.64*    %r3598 <- 0[cl]
	load.8      %r3599 <- 11[%r3598]
	cast.32     %r3600 <- (8) %r3599
	sub.32      %r3601 <- %r3600, $1
	scast.64    %r3602 <- (32) %r3601
	mulu.64     %r3603 <- $8, %r3602
	cast.32     %r3604 <- (64) %r3603
	add.32      %r3605 <- $48, %r3604
	phisrc.32   %phi126 <- %r3605
	br          .L806

.L806:
	phi.32      %r3606 <- %phi125, %phi126
	scast.64    %r3607 <- (32) %r3606
	phisrc.64   %phi127(return) <- %r3607
	br          .L803

.L798:
	load.64*    %r3608 <- 0[o]
	add.64*     %r3609 <- %r3608, $0
	store.64*   %r3609 -> 0[th]
	load.64*    %r3610 <- 0[th]
	load.64*    %r3611 <- 160[%r3610]
	load.64*    %r3612 <- 0[g]
	store.64*   %r3611 -> 56[%r3612]
	load.64*    %r3613 <- 0[g]
	load.64*    %r3614 <- 64[%r3613]
	load.64*    %r3615 <- 0[th]
	store.64*   %r3614 -> 160[%r3615]
	load.64*    %r3616 <- 0[o]
	load.64*    %r3617 <- 0[g]
	store.64*   %r3616 -> 64[%r3617]
	load.64*    %r3618 <- 0[o]
	load.8      %r3619 <- 9[%r3618]
	cast.32     %r3620 <- (8) %r3619
	and.32      %r3621 <- %r3620, $251
	scast.8     %r3622 <- (32) %r3621
	store.8     %r3622 -> 9[%r3618]
	load.64*    %r3623 <- 0[g]
	load.64*    %r3624 <- 0[th]
	push.64*    %r3623
	push.64*    %r3624
	call        traversestack
	load.64*    %r3625 <- 0[th]
	load.32     %r3626 <- 88[%r3625]
	scast.64    %r3627 <- (32) %r3626
	mulu.64     %r3628 <- $16, %r3627
	add.64      %r3629 <- $184, %r3628
	load.64*    %r3630 <- 0[th]
	load.32     %r3631 <- 92[%r3630]
	scast.64    %r3632 <- (32) %r3631
	mulu.64     %r3633 <- $40, %r3632
	add.64      %r3634 <- %r3629, %r3633
	cast.64     %r3635 <- (64) %r3634
	phisrc.64   %phi128(return) <- %r3635
	br          .L803

.L799:
	load.64*    %r3636 <- 0[o]
	add.64*     %r3637 <- %r3636, $0
	store.64*   %r3637 -> 0[p]
	load.64*    %r3638 <- 0[p]
	load.64*    %r3639 <- 104[%r3638]
	load.64*    %r3640 <- 0[g]
	store.64*   %r3639 -> 56[%r3640]
	load.64*    %r3641 <- 0[g]
	load.64*    %r3642 <- 0[p]
	push.64*    %r3641
	push.64*    %r3642
	call        traverseproto
	load.64*    %r3643 <- 0[p]
	load.32     %r3644 <- 80[%r3643]
	scast.64    %r3645 <- (32) %r3644
	mulu.64     %r3646 <- $4, %r3645
	add.64      %r3647 <- $120, %r3646
	load.64*    %r3648 <- 0[p]
	load.32     %r3649 <- 88[%r3648]
	scast.64    %r3650 <- (32) %r3649
	mulu.64     %r3651 <- $8, %r3650
	add.64      %r3652 <- %r3647, %r3651
	load.64*    %r3653 <- 0[p]
	load.32     %r3654 <- 76[%r3653]
	scast.64    %r3655 <- (32) %r3654
	mulu.64     %r3656 <- $16, %r3655
	add.64      %r3657 <- %r3652, %r3656
	load.64*    %r3658 <- 0[p]
	load.32     %r3659 <- 84[%r3658]
	scast.64    %r3660 <- (32) %r3659
	mulu.64     %r3661 <- $4, %r3660
	add.64      %r3662 <- %r3657, %r3661
	load.64*    %r3663 <- 0[p]
	load.32     %r3664 <- 92[%r3663]
	scast.64    %r3665 <- (32) %r3664
	mulu.64     %r3666 <- $16, %r3665
	add.64      %r3667 <- %r3662, %r3666
	load.64*    %r3668 <- 0[p]
	load.32     %r3669 <- 72[%r3668]
	scast.64    %r3670 <- (32) %r3669
	mulu.64     %r3671 <- $8, %r3670
	add.64      %r3672 <- %r3667, %r3671
	cast.64     %r3673 <- (64) %r3672
	phisrc.64   %phi129(return) <- %r3673
	br          .L803

.L800:
	phisrc.64   %phi130(return) <- $0
	br          .L803

.L803:
	phi.64      %r3580 <- %phi124(return), %phi127(return), %phi128(return), %phi129(return), %phi130(return)
	ret.64      %r3580


propagateall:
.L807:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64    $0 -> 0[m]
	br          .L811

.L811:
	load.64*    %r3674 <- 0[g]
	load.64*    %r3675 <- 56[%r3674]
	cbr         %r3675, .L808, .L810

.L808:
	load.64*    %r3676 <- 0[g]
	push.64*    %r3676
	call.64     %r3677 <- propagatemark
	scast.64    %r3678 <- (64) %r3677
	load.64     %r3679 <- 0[m]
	cast.64     %r3680 <- (64) %r3679
	add.64      %r3681 <- %r3680, %r3678
	cast.64     %r3682 <- (64) %r3681
	store.64    %r3682 -> 0[m]
	br          .L809

.L809:
	br          .L811

.L810:
	load.64     %r3683 <- 0[m]
	phisrc.64   %phi131(return) <- %r3683
	br          .L812

.L812:
	phi.64      %r3684 <- %phi131(return)
	ret.64      %r3683


iscleared:
.L813:
	<entry-point>
	store.64*   %arg1 -> 0[o]
	store.32    %arg2 -> 0[iskey]
	load.64*    %r3685 <- 0[o]
	load.32     %r3686 <- 8[%r3685]
	scast.32    %r3687 <- (32) %r3686
	setge.32    %r3688 <- %r3687, $4
	cbr         %r3688, .L815, .L814

.L814:
	phisrc.32   %phi132(return) <- $0
	br          .L816

.L815:
	load.64*    %r3690 <- 0[o]
	load.32     %r3691 <- 8[%r3690]
	scast.32    %r3692 <- (32) %r3691
	seteq.32    %r3693 <- %r3692, $4
	cbr         %r3693, .L817, .L818

.L817:
	load.64*    %r3694 <- 0[o]
	load.64*    %r3695 <- 0[%r3694]
	load.8      %r3696 <- 9[%r3695]
	cast.32     %r3697 <- (8) %r3696
	and.32      %r3698 <- %r3697, $252
	scast.8     %r3699 <- (32) %r3698
	store.8     %r3699 -> 9[%r3695]
	phisrc.32   %phi133(return) <- $0
	br          .L816

.L818:
	load.64*    %r3700 <- 0[o]
	load.64*    %r3701 <- 0[%r3700]
	load.8      %r3702 <- 9[%r3701]
	cast.32     %r3703 <- (8) %r3702
	and.32      %r3704 <- %r3703, $3
	cbr         %r3704, .L819, .L820

.L819:
	phisrc.32   %phi134 <- $1
	br          .L821

.L820:
	load.64*    %r3705 <- 0[o]
	load.32     %r3706 <- 8[%r3705]
	scast.32    %r3707 <- (32) %r3706
	seteq.32    %r3708 <- %r3707, $7
	cbr         %r3708, .L822, .L823

.L822:
	load.32     %r3709 <- 0[iskey]
	cbr         %r3709, .L826, .L825

.L825:
	load.64*    %r3710 <- 0[o]
	load.64*    %r3711 <- 0[%r3710]
	load.8      %r3712 <- 9[%r3711]
	cast.32     %r3713 <- (8) %r3712
	and.32      %r3714 <- %r3713, $8
	phisrc.32   %phi135 <- %r3714
	br          .L827

.L826:
	phisrc.32   %phi136 <- $0
	br          .L827

.L827:
	phi.32      %r3715 <- %phi135, %phi136
	phisrc.32   %phi137 <- %r3715
	br          .L824

.L823:
	phisrc.32   %phi138 <- $0
	br          .L824

.L824:
	phi.32      %r3716 <- %phi137, %phi138
	phisrc.32   %phi139 <- %r3716
	br          .L821

.L821:
	phi.32      %r3717 <- %phi134, %phi139
	phisrc.32   %phi140(return) <- %r3717
	br          .L816

.L816:
	phi.32      %r3689 <- %phi132(return), %phi133(return), %phi140(return)
	ret.32      %r3689


cleartable:
.L828:
	<entry-point>
	store.64*   %arg1 -> 0[l]
	br          .L832

.L832:
	load.64*    %r3718 <- 0[l]
	cbr         %r3718, .L829, .L831

.L829:
	load.64*    %r3719 <- 0[l]
	add.64*     %r3720 <- %r3719, $0
	store.64*   %r3720 -> 0[h]
	load.64*    %r3721 <- 0[h]
	load.32     %r3722 <- 56[%r3721]
	store.32    %r3722 -> 0[i]
	load.64*    %r3723 <- 0[h]
	load.8      %r3724 <- 9[%r3723]
	cast.32     %r3725 <- (8) %r3724
	and.32      %r3726 <- %r3725, $16
	cbr         %r3726, .L833, .L834

.L833:
	br          .L838

.L838:
	load.32     %r3727 <- 0[i]
	sub.32      %r3728 <- %r3727, $1
	store.32    %r3728 -> 0[i]
	cbr         %r3727, .L835, .L837

.L835:
	load.64*    %r3729 <- 0[h]
	load.64*    %r3730 <- 24[%r3729]
	load.32     %r3731 <- 0[i]
	scast.64    %r3732 <- (32) %r3731
	muls.64     %r3733 <- %r3732, $16
	add.64*     %r3734 <- %r3730, %r3733
	store.64*   %r3734 -> 0[o]
	load.64*    %r3735 <- 0[o]
	push.64*    %r3735
	push.32     $0
	call.32     %r3736 <- iscleared
	cbr         %r3736, .L839, .L840

.L839:
	load.64*    %r3737 <- 0[o]
	store.32    $0 -> 8[%r3737]
	br          .L840

.L840:
	br          .L836

.L836:
	br          .L838

.L837:
	br          .L834

.L834:
	load.64*    %r3738 <- 0[h]
	load.8      %r3739 <- 11[%r3738]
	cast.32     %r3740 <- (8) %r3739
	shl.64      %r3741 <- $1, %r3740
	cast.32     %r3742 <- (64) %r3741
	store.32    %r3742 -> 0[i]
	br          .L844

.L844:
	load.32     %r3743 <- 0[i]
	sub.32      %r3744 <- %r3743, $1
	store.32    %r3744 -> 0[i]
	cbr         %r3743, .L841, .L843

.L841:
	load.64*    %r3745 <- 0[h]
	load.64*    %r3746 <- 32[%r3745]
	load.32     %r3747 <- 0[i]
	scast.64    %r3748 <- (32) %r3747
	muls.64     %r3749 <- %r3748, $40
	add.64*     %r3750 <- %r3746, %r3749
	store.64*   %r3750 -> 0[n]
	load.64*    %r3751 <- 0[n]
	load.32     %r3752 <- 8[%r3751]
	seteq.32    %r3753 <- %r3752, $0
	cbr         %r3753, .L846, .L847

.L847:
	load.64*    %r3754 <- 0[n]
	add.64*     %r3755 <- %r3754, $16
	add.64*     %r3756 <- %r3755, $0
	push.64*    %r3756
	push.32     $1
	call.32     %r3757 <- iscleared
	cbr         %r3757, .L845, .L848

.L848:
	load.64*    %r3758 <- 0[n]
	add.64*     %r3759 <- %r3758, $0
	push.64*    %r3759
	push.32     $0
	call.32     %r3760 <- iscleared
	cbr         %r3760, .L845, .L846

.L845:
	load.64*    %r3761 <- 0[n]
	store.32    $0 -> 8[%r3761]
	load.64*    %r3762 <- 0[n]
	push.64*    %r3762
	call        removeentry
	br          .L846

.L846:
	br          .L842

.L842:
	br          .L844

.L843:
	load.64*    %r3763 <- 0[h]
	load.64*    %r3764 <- 48[%r3763]
	store.64*   %r3764 -> 0[l]
	br          .L830

.L830:
	br          .L832

.L831:
	ret


freeobj:
.L849:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	load.64*    %r3765 <- 0[o]
	load.8      %r3766 <- 8[%r3765]
	switch.8    %r3766, 4 -> .L856, 5 -> .L854, 6 -> .L852, 7 -> .L857, 8 -> .L855, 9 -> .L851, 10 -> .L853, default -> .L858

.L851:
	load.64*    %r3767 <- 0[L]
	load.64*    %r3768 <- 0[o]
	add.64*     %r3769 <- %r3768, $0
	push.64*    %r3767
	push.64*    %r3769
	call        luaF_freeproto
	br          .L850

.L852:
	load.64*    %r3770 <- 0[L]
	load.64*    %r3771 <- 0[o]
	add.64*     %r3772 <- %r3771, $0
	push.64*    %r3770
	push.64*    %r3772
	call        luaF_freeclosure
	br          .L850

.L853:
	load.64*    %r3773 <- 0[L]
	load.64*    %r3774 <- 0[o]
	add.64*     %r3775 <- %r3774, $0
	push.64*    %r3773
	push.64*    %r3775
	call        luaF_freeupval
	br          .L850

.L854:
	load.64*    %r3776 <- 0[L]
	load.64*    %r3777 <- 0[o]
	add.64*     %r3778 <- %r3777, $0
	push.64*    %r3776
	push.64*    %r3778
	call        luaH_free
	br          .L850

.L855:
	load.64*    %r3779 <- 0[L]
	load.64*    %r3780 <- 0[o]
	add.64*     %r3781 <- %r3780, $0
	push.64*    %r3779
	push.64*    %r3781
	call        luaE_freethread
	br          .L850

.L856:
	load.64*    %r3782 <- 0[L]
	load.64*    %r3783 <- 32[%r3782]
	load.32     %r3784 <- 8[%r3783]
	sub.32      %r3785 <- %r3784, $1
	store.32    %r3785 -> 8[%r3783]
	load.64*    %r3786 <- 0[L]
	load.64*    %r3787 <- 0[o]
	cast.64*    %r3788 <- (64) %r3787
	load.64*    %r3789 <- 0[o]
	load.64     %r3790 <- 16[%r3789]
	add.64      %r3791 <- %r3790, $1
	mulu.64     %r3792 <- %r3791, $1
	add.64      %r3793 <- $24, %r3792
	push.64*    %r3786
	push.64*    %r3788
	push.64     %r3793
	push.64     $0
	call.64*    %r3794 <- luaM_realloc_
	br          .L850

.L857:
	load.64*    %r3795 <- 0[L]
	load.64*    %r3796 <- 0[o]
	cast.64*    %r3797 <- (64) %r3796
	load.64*    %r3798 <- 0[o]
	load.64     %r3799 <- 32[%r3798]
	add.64      %r3800 <- $40, %r3799
	push.64*    %r3795
	push.64*    %r3797
	push.64     %r3800
	push.64     $0
	call.64*    %r3801 <- luaM_realloc_
	br          .L850

.L858:
	br          .L850

.L850:
	ret


sweeplist:
.L859:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p]
	store.64    %arg3 -> 0[count]
	load.64*    %r3802 <- 0[L]
	load.64*    %r3803 <- 32[%r3802]
	store.64*   %r3803 -> 0[g]
	load.64*    %r3804 <- 0[g]
	load.8      %r3805 <- 32[%r3804]
	cast.32     %r3806 <- (8) %r3805
	xor.32      %r3807 <- %r3806, $3
	store.32    %r3807 -> 0[deadmask]
	br          .L863

.L863:
	load.64*    %r3808 <- 0[p]
	load.64*    %r3809 <- 0[%r3808]
	store.64*   %r3809 -> 0[curr]
	setne.32    %r3810 <- %r3809, $0
	cbr         %r3810, .L864, .L862

.L864:
	load.64     %r3811 <- 0[count]
	sub.64      %r3812 <- %r3811, $1
	store.64    %r3812 -> 0[count]
	seta.32     %r3813 <- %r3811, $0
	cbr         %r3813, .L860, .L862

.L860:
	load.64*    %r3814 <- 0[curr]
	load.8      %r3815 <- 8[%r3814]
	cast.32     %r3816 <- (8) %r3815
	seteq.32    %r3817 <- %r3816, $8
	cbr         %r3817, .L865, .L866

.L865:
	load.64*    %r3818 <- 0[L]
	load.64*    %r3819 <- 0[curr]
	add.64*     %r3820 <- %r3819, $0
	add.64*     %r3821 <- %r3820, $152
	push.64*    %r3818
	push.64*    %r3821
	push.64     $-3
	call.64*    %r3822 <- sweeplist
	br          .L866

.L866:
	load.64*    %r3823 <- 0[curr]
	load.8      %r3824 <- 9[%r3823]
	cast.32     %r3825 <- (8) %r3824
	xor.32      %r3826 <- %r3825, $3
	load.32     %r3827 <- 0[deadmask]
	and.32      %r3828 <- %r3826, %r3827
	cbr         %r3828, .L867, .L868

.L867:
	load.64*    %r3829 <- 0[curr]
	load.8      %r3830 <- 9[%r3829]
	cast.32     %r3831 <- (8) %r3830
	and.32      %r3832 <- %r3831, $248
	load.64*    %r3833 <- 0[g]
	load.8      %r3834 <- 32[%r3833]
	cast.32     %r3835 <- (8) %r3834
	and.32      %r3836 <- %r3835, $3
	scast.8     %r3837 <- (32) %r3836
	cast.32     %r3838 <- (8) %r3837
	or.32       %r3839 <- %r3832, %r3838
	scast.8     %r3840 <- (32) %r3839
	load.64*    %r3841 <- 0[curr]
	store.8     %r3840 -> 9[%r3841]
	load.64*    %r3842 <- 0[curr]
	add.64*     %r3843 <- %r3842, $0
	add.64*     %r3844 <- %r3843, $0
	store.64*   %r3844 -> 0[p]
	br          .L869

.L868:
	load.64*    %r3845 <- 0[curr]
	load.64*    %r3846 <- 0[%r3845]
	load.64*    %r3847 <- 0[p]
	store.64*   %r3846 -> 0[%r3847]
	load.64*    %r3848 <- 0[curr]
	load.64*    %r3849 <- 0[g]
	load.64*    %r3850 <- 40[%r3849]
	seteq.32    %r3851 <- %r3848, %r3850
	cbr         %r3851, .L870, .L871

.L870:
	load.64*    %r3852 <- 0[curr]
	load.64*    %r3853 <- 0[%r3852]
	load.64*    %r3854 <- 0[g]
	store.64*   %r3853 -> 40[%r3854]
	br          .L871

.L871:
	load.64*    %r3855 <- 0[L]
	load.64*    %r3856 <- 0[curr]
	push.64*    %r3855
	push.64*    %r3856
	call        freeobj
	br          .L869

.L869:
	br          .L861

.L861:
	br          .L863

.L862:
	load.64*    %r3857 <- 0[p]
	phisrc.64*  %phi141(return) <- %r3857
	br          .L872

.L872:
	phi.64*     %r3858 <- %phi141(return)
	ret.64*     %r3857


checkSizes:
.L873:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r3859 <- 0[L]
	load.64*    %r3860 <- 32[%r3859]
	store.64*   %r3860 -> 0[g]
	load.64*    %r3861 <- 0[g]
	load.32     %r3862 <- 8[%r3861]
	load.64*    %r3863 <- 0[g]
	load.32     %r3864 <- 12[%r3863]
	divs.32     %r3865 <- %r3864, $4
	scast.32    %r3866 <- (32) %r3865
	setb.32     %r3867 <- %r3862, %r3866
	cbr         %r3867, .L876, .L875

.L876:
	load.64*    %r3868 <- 0[g]
	load.32     %r3869 <- 12[%r3868]
	setgt.32    %r3870 <- %r3869, $64
	cbr         %r3870, .L874, .L875

.L874:
	load.64*    %r3871 <- 0[L]
	load.64*    %r3872 <- 0[g]
	load.32     %r3873 <- 12[%r3872]
	divs.32     %r3874 <- %r3873, $2
	push.64*    %r3871
	push.32     %r3874
	call        luaS_resize
	br          .L875

.L875:
	load.64*    %r3875 <- 0[g]
	load.64     %r3876 <- 104[%r3875]
	seta.32     %r3877 <- %r3876, $64
	cbr         %r3877, .L877, .L878

.L877:
	load.64*    %r3878 <- 0[g]
	load.64     %r3879 <- 104[%r3878]
	divu.64     %r3880 <- %r3879, $2
	store.64    %r3880 -> 0[newsize]
	load.64     %r3881 <- 0[newsize]
	add.64      %r3882 <- %r3881, $1
	cast.64     %r3883 <- (64) %r3882
	setbe.32    %r3884 <- %r3883, $-3
	cbr         %r3884, .L879, .L880

.L879:
	load.64*    %r3885 <- 0[L]
	load.64*    %r3886 <- 0[g]
	load.64*    %r3887 <- 88[%r3886]
	cast.64*    %r3888 <- (64) %r3887
	load.64*    %r3889 <- 0[g]
	load.64     %r3890 <- 104[%r3889]
	mulu.64     %r3891 <- %r3890, $1
	load.64     %r3892 <- 0[newsize]
	mulu.64     %r3893 <- %r3892, $1
	push.64*    %r3885
	push.64*    %r3888
	push.64     %r3891
	push.64     %r3893
	call.64*    %r3894 <- luaM_realloc_
	phisrc.64*  %phi142 <- %r3894
	br          .L881

.L880:
	load.64*    %r3895 <- 0[L]
	push.64*    %r3895
	call.64*    %r3896 <- luaM_toobig
	cast.64*    %r3897 <- (64) %r3896
	phisrc.64*  %phi143 <- %r3897
	br          .L881

.L881:
	phi.64*     %r3898 <- %phi142, %phi143
	ptrcast.64* %r3899 <- (64) %r3898
	load.64*    %r3900 <- 0[g]
	store.64*   %r3899 -> 88[%r3900]
	load.64     %r3901 <- 0[newsize]
	load.64*    %r3902 <- 0[g]
	store.64    %r3901 -> 104[%r3902]
	br          .L878

.L878:
	ret


GCTM:
.L882:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r3903 <- 0[L]
	load.64*    %r3904 <- 32[%r3903]
	store.64*   %r3904 -> 0[g]
	load.64*    %r3905 <- 0[g]
	load.64*    %r3906 <- 80[%r3905]
	load.64*    %r3907 <- 0[%r3906]
	store.64*   %r3907 -> 0[o]
	load.64*    %r3908 <- 0[o]
	add.64*     %r3909 <- %r3908, $0
	store.64*   %r3909 -> 0[udata]
	load.64*    %r3910 <- 0[o]
	load.64*    %r3911 <- 0[g]
	load.64*    %r3912 <- 80[%r3911]
	seteq.32    %r3913 <- %r3910, %r3912
	cbr         %r3913, .L883, .L884

.L883:
	load.64*    %r3914 <- 0[g]
	store.64*   $0 -> 80[%r3914]
	br          .L885

.L884:
	load.64*    %r3915 <- 0[udata]
	load.64*    %r3916 <- 0[%r3915]
	load.64*    %r3917 <- 0[g]
	load.64*    %r3918 <- 80[%r3917]
	store.64*   %r3916 -> 0[%r3918]
	br          .L885

.L885:
	load.64*    %r3919 <- 0[g]
	load.64*    %r3920 <- 176[%r3919]
	load.64*    %r3921 <- 0[%r3920]
	load.64*    %r3922 <- 0[udata]
	store.64*   %r3921 -> 0[%r3922]
	load.64*    %r3923 <- 0[o]
	load.64*    %r3924 <- 0[g]
	load.64*    %r3925 <- 176[%r3924]
	store.64*   %r3923 -> 0[%r3925]
	load.64*    %r3926 <- 0[o]
	load.8      %r3927 <- 9[%r3926]
	cast.32     %r3928 <- (8) %r3927
	and.32      %r3929 <- %r3928, $248
	load.64*    %r3930 <- 0[g]
	load.8      %r3931 <- 32[%r3930]
	cast.32     %r3932 <- (8) %r3931
	and.32      %r3933 <- %r3932, $3
	scast.8     %r3934 <- (32) %r3933
	cast.32     %r3935 <- (8) %r3934
	or.32       %r3936 <- %r3929, %r3935
	scast.8     %r3937 <- (32) %r3936
	load.64*    %r3938 <- 0[o]
	store.8     %r3937 -> 9[%r3938]
	load.64*    %r3939 <- 0[udata]
	load.64*    %r3940 <- 16[%r3939]
	seteq.32    %r3941 <- %r3940, $0
	cbr         %r3941, .L886, .L887

.L886:
	phisrc.64*  %phi144 <- $0
	br          .L888

.L887:
	load.64*    %r3942 <- 0[udata]
	load.64*    %r3943 <- 16[%r3942]
	load.8      %r3944 <- 10[%r3943]
	cast.32     %r3945 <- (8) %r3944
	and.32      %r3946 <- %r3945, $4
	cbr         %r3946, .L889, .L890

.L889:
	phisrc.64*  %phi145 <- $0
	br          .L891

.L890:
	load.64*    %r3947 <- 0[udata]
	load.64*    %r3948 <- 16[%r3947]
	load.64*    %r3949 <- 0[L]
	load.64*    %r3950 <- 32[%r3949]
	load.64*    %r3951 <- 312[%r3950]
	push.64*    %r3948
	push.32     $2
	push.64*    %r3951
	call.64*    %r3952 <- luaT_gettm
	phisrc.64*  %phi146 <- %r3952
	br          .L891

.L891:
	phi.64*     %r3953 <- %phi145, %phi146
	phisrc.64*  %phi147 <- %r3953
	br          .L888

.L888:
	phi.64*     %r3954 <- %phi144, %phi147
	store.64*   %r3954 -> 0[tm]
	load.64*    %r3955 <- 0[tm]
	setne.32    %r3956 <- %r3955, $0
	cbr         %r3956, .L892, .L893

.L892:
	load.64*    %r3957 <- 0[L]
	load.8      %r3958 <- 101[%r3957]
	store.8     %r3958 -> 0[oldah]
	load.64*    %r3959 <- 0[g]
	load.64     %r3960 <- 112[%r3959]
	store.64    %r3960 -> 0[oldt]
	load.64*    %r3961 <- 0[L]
	store.8     $0 -> 101[%r3961]
	load.64*    %r3962 <- 0[g]
	load.64     %r3963 <- 120[%r3962]
	mulu.64     %r3964 <- $2, %r3963
	load.64*    %r3965 <- 0[g]
	store.64    %r3964 -> 112[%r3965]
	load.64*    %r3966 <- 0[tm]
	store.64*   %r3966 -> 0[o2]
	load.64*    %r3967 <- 0[L]
	load.64*    %r3968 <- 16[%r3967]
	store.64*   %r3968 -> 0[o1]
	load.64*    %r3969 <- 0[o2]
	load.f64    %r3970 <- 0[%r3969]
	fpcast.f64  %r3971 <- (64) %r3970
	load.64*    %r3972 <- 0[o1]
	store.f64   %r3971 -> 0[%r3972]
	load.64*    %r3973 <- 0[o2]
	load.32     %r3974 <- 8[%r3973]
	scast.32    %r3975 <- (32) %r3974
	load.64*    %r3976 <- 0[o1]
	store.32    %r3975 -> 8[%r3976]
	load.64*    %r3977 <- 0[L]
	load.64*    %r3978 <- 16[%r3977]
	add.64*     %r3979 <- %r3978, $16
	store.64*   %r3979 -> 0[i_o]
	load.64*    %r3980 <- 0[udata]
	ptrcast.64* %r3981 <- (64) %r3980
	load.64*    %r3982 <- 0[i_o]
	store.64*   %r3981 -> 0[%r3982]
	load.64*    %r3983 <- 0[i_o]
	store.32    $7 -> 8[%r3983]
	load.64*    %r3984 <- 0[L]
	load.64*    %r3985 <- 16[%r3984]
	cast.64     %r3986 <- (64) %r3985
	add.64      %r3987 <- %r3986, $32
	ptrcast.64* %r3988 <- (64) %r3987
	store.64*   %r3988 -> 16[%r3984]
	load.64*    %r3989 <- 0[L]
	load.64*    %r3990 <- 0[L]
	load.64*    %r3991 <- 16[%r3990]
	sub.64*     %r3992 <- %r3991, $32
	push.64*    %r3989
	push.64*    %r3992
	push.32     $0
	call        luaD_call
	load.8      %r3993 <- 0[oldah]
	load.64*    %r3994 <- 0[L]
	store.8     %r3993 -> 101[%r3994]
	load.64     %r3995 <- 0[oldt]
	load.64*    %r3996 <- 0[g]
	store.64    %r3995 -> 112[%r3996]
	br          .L893

.L893:
	ret


luaC_callGCTM:
.L894:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	br          .L898

.L898:
	load.64*    %r3997 <- 0[L]
	load.64*    %r3998 <- 32[%r3997]
	load.64*    %r3999 <- 80[%r3998]
	cbr         %r3999, .L895, .L897

.L895:
	load.64*    %r4000 <- 0[L]
	push.64*    %r4000
	call        GCTM
	br          .L896

.L896:
	br          .L898

.L897:
	ret


luaC_freeall:
.L899:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4001 <- 0[L]
	load.64*    %r4002 <- 32[%r4001]
	store.64*   %r4002 -> 0[g]
	load.64*    %r4003 <- 0[g]
	store.8     $67 -> 32[%r4003]
	load.64*    %r4004 <- 0[L]
	load.64*    %r4005 <- 0[g]
	add.64*     %r4006 <- %r4005, $40
	push.64*    %r4004
	push.64*    %r4006
	push.64     $-3
	call.64*    %r4007 <- sweeplist
	store.32    $0 -> 0[i]
	br          .L903

.L903:
	load.32     %r4008 <- 0[i]
	load.64*    %r4009 <- 0[g]
	load.32     %r4010 <- 12[%r4009]
	setlt.32    %r4011 <- %r4008, %r4010
	cbr         %r4011, .L900, .L902

.L900:
	load.64*    %r4012 <- 0[L]
	load.64*    %r4013 <- 0[g]
	load.64*    %r4014 <- 0[%r4013]
	load.32     %r4015 <- 0[i]
	scast.64    %r4016 <- (32) %r4015
	muls.64     %r4017 <- %r4016, $8
	add.64*     %r4018 <- %r4014, %r4017
	push.64*    %r4012
	push.64*    %r4018
	push.64     $-3
	call.64*    %r4019 <- sweeplist
	br          .L901

.L901:
	load.32     %r4020 <- 0[i]
	add.32      %r4021 <- %r4020, $1
	store.32    %r4021 -> 0[i]
	br          .L903

.L902:
	ret


markmt:
.L904:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.32    $0 -> 0[i]
	br          .L908

.L908:
	load.32     %r4022 <- 0[i]
	setlt.32    %r4023 <- %r4022, $9
	cbr         %r4023, .L905, .L907

.L905:
	load.64*    %r4024 <- 0[g]
	add.64*     %r4025 <- %r4024, $224
	load.32     %r4026 <- 0[i]
	scast.64    %r4027 <- (32) %r4026
	muls.64     %r4028 <- %r4027, $8
	add.64*     %r4029 <- %r4025, %r4028
	load.64*    %r4030 <- 0[%r4029]
	cbr         %r4030, .L909, .L910

.L909:
	load.64*    %r4031 <- 0[g]
	add.64*     %r4032 <- %r4031, $224
	load.32     %r4033 <- 0[i]
	scast.64    %r4034 <- (32) %r4033
	muls.64     %r4035 <- %r4034, $8
	add.64*     %r4036 <- %r4032, %r4035
	load.64*    %r4037 <- 0[%r4036]
	ptrcast.64* %r4038 <- (64) %r4037
	load.8      %r4039 <- 9[%r4038]
	cast.32     %r4040 <- (8) %r4039
	and.32      %r4041 <- %r4040, $3
	cbr         %r4041, .L911, .L912

.L911:
	load.64*    %r4042 <- 0[g]
	load.64*    %r4043 <- 0[g]
	add.64*     %r4044 <- %r4043, $224
	load.32     %r4045 <- 0[i]
	scast.64    %r4046 <- (32) %r4045
	muls.64     %r4047 <- %r4046, $8
	add.64*     %r4048 <- %r4044, %r4047
	load.64*    %r4049 <- 0[%r4048]
	ptrcast.64* %r4050 <- (64) %r4049
	push.64*    %r4042
	push.64*    %r4050
	call        reallymarkobject
	br          .L912

.L912:
	br          .L910

.L910:
	br          .L906

.L906:
	load.32     %r4051 <- 0[i]
	add.32      %r4052 <- %r4051, $1
	store.32    %r4052 -> 0[i]
	br          .L908

.L907:
	ret


markroot:
.L913:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4053 <- 0[L]
	load.64*    %r4054 <- 32[%r4053]
	store.64*   %r4054 -> 0[g]
	load.64*    %r4055 <- 0[g]
	store.64*   $0 -> 56[%r4055]
	load.64*    %r4056 <- 0[g]
	store.64*   $0 -> 64[%r4056]
	load.64*    %r4057 <- 0[g]
	store.64*   $0 -> 72[%r4057]
	load.64*    %r4058 <- 0[g]
	load.64*    %r4059 <- 176[%r4058]
	ptrcast.64* %r4060 <- (64) %r4059
	load.8      %r4061 <- 9[%r4060]
	cast.32     %r4062 <- (8) %r4061
	and.32      %r4063 <- %r4062, $3
	cbr         %r4063, .L914, .L915

.L914:
	load.64*    %r4064 <- 0[g]
	load.64*    %r4065 <- 0[g]
	load.64*    %r4066 <- 176[%r4065]
	ptrcast.64* %r4067 <- (64) %r4066
	push.64*    %r4064
	push.64*    %r4067
	call        reallymarkobject
	br          .L915

.L915:
	load.64*    %r4068 <- 0[g]
	load.64*    %r4069 <- 176[%r4068]
	load.32     %r4070 <- 128[%r4069]
	setge.32    %r4071 <- %r4070, $4
	cbr         %r4071, .L918, .L917

.L918:
	load.64*    %r4072 <- 0[g]
	load.64*    %r4073 <- 176[%r4072]
	load.64*    %r4074 <- 120[%r4073]
	load.8      %r4075 <- 9[%r4074]
	cast.32     %r4076 <- (8) %r4075
	and.32      %r4077 <- %r4076, $3
	cbr         %r4077, .L916, .L917

.L916:
	load.64*    %r4078 <- 0[g]
	load.64*    %r4079 <- 0[g]
	load.64*    %r4080 <- 176[%r4079]
	load.64*    %r4081 <- 120[%r4080]
	push.64*    %r4078
	push.64*    %r4081
	call        reallymarkobject
	br          .L917

.L917:
	load.64*    %r4082 <- 0[L]
	load.64*    %r4083 <- 32[%r4082]
	load.32     %r4084 <- 168[%r4083]
	setge.32    %r4085 <- %r4084, $4
	cbr         %r4085, .L921, .L920

.L921:
	load.64*    %r4086 <- 0[L]
	load.64*    %r4087 <- 32[%r4086]
	load.64*    %r4088 <- 160[%r4087]
	load.8      %r4089 <- 9[%r4088]
	cast.32     %r4090 <- (8) %r4089
	and.32      %r4091 <- %r4090, $3
	cbr         %r4091, .L919, .L920

.L919:
	load.64*    %r4092 <- 0[g]
	load.64*    %r4093 <- 0[L]
	load.64*    %r4094 <- 32[%r4093]
	load.64*    %r4095 <- 160[%r4094]
	push.64*    %r4092
	push.64*    %r4095
	call        reallymarkobject
	br          .L920

.L920:
	load.64*    %r4096 <- 0[g]
	push.64*    %r4096
	call        markmt
	load.64*    %r4097 <- 0[g]
	store.8     $1 -> 33[%r4097]
	br          .L922

.L922:
	ret


remarkupvals:
.L923:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r4098 <- 0[g]
	load.64*    %r4099 <- 216[%r4098]
	store.64*   %r4099 -> 0[uv]
	br          .L927

.L927:
	load.64*    %r4100 <- 0[uv]
	load.64*    %r4101 <- 0[g]
	add.64*     %r4102 <- %r4101, $184
	setne.32    %r4103 <- %r4100, %r4102
	cbr         %r4103, .L924, .L926

.L924:
	load.64*    %r4104 <- 0[uv]
	ptrcast.64* %r4105 <- (64) %r4104
	load.8      %r4106 <- 9[%r4105]
	cast.32     %r4107 <- (8) %r4106
	and.32      %r4108 <- %r4107, $4
	cbr         %r4108, .L929, .L930

.L930:
	load.64*    %r4109 <- 0[uv]
	ptrcast.64* %r4110 <- (64) %r4109
	load.8      %r4111 <- 9[%r4110]
	cast.32     %r4112 <- (8) %r4111
	and.32      %r4113 <- %r4112, $3
	cbr         %r4113, .L929, .L928

.L928:
	load.64*    %r4114 <- 0[uv]
	load.64*    %r4115 <- 16[%r4114]
	load.32     %r4116 <- 8[%r4115]
	setge.32    %r4117 <- %r4116, $4
	cbr         %r4117, .L933, .L932

.L933:
	load.64*    %r4118 <- 0[uv]
	load.64*    %r4119 <- 16[%r4118]
	load.64*    %r4120 <- 0[%r4119]
	load.8      %r4121 <- 9[%r4120]
	cast.32     %r4122 <- (8) %r4121
	and.32      %r4123 <- %r4122, $3
	cbr         %r4123, .L931, .L932

.L931:
	load.64*    %r4124 <- 0[g]
	load.64*    %r4125 <- 0[uv]
	load.64*    %r4126 <- 16[%r4125]
	load.64*    %r4127 <- 0[%r4126]
	push.64*    %r4124
	push.64*    %r4127
	call        reallymarkobject
	br          .L932

.L932:
	br          .L929

.L929:
	br          .L925

.L925:
	load.64*    %r4128 <- 0[uv]
	load.64*    %r4129 <- 32[%r4128]
	store.64*   %r4129 -> 0[uv]
	br          .L927

.L926:
	ret


atomic:
.L934:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4130 <- 0[L]
	load.64*    %r4131 <- 32[%r4130]
	store.64*   %r4131 -> 0[g]
	load.64*    %r4132 <- 0[g]
	push.64*    %r4132
	call        remarkupvals
	load.64*    %r4133 <- 0[g]
	push.64*    %r4133
	call.64     %r4134 <- propagateall
	load.64*    %r4135 <- 0[g]
	load.64*    %r4136 <- 72[%r4135]
	load.64*    %r4137 <- 0[g]
	store.64*   %r4136 -> 56[%r4137]
	load.64*    %r4138 <- 0[g]
	store.64*   $0 -> 72[%r4138]
	load.64*    %r4139 <- 0[L]
	ptrcast.64* %r4140 <- (64) %r4139
	load.8      %r4141 <- 9[%r4140]
	cast.32     %r4142 <- (8) %r4141
	and.32      %r4143 <- %r4142, $3
	cbr         %r4143, .L935, .L936

.L935:
	load.64*    %r4144 <- 0[g]
	load.64*    %r4145 <- 0[L]
	ptrcast.64* %r4146 <- (64) %r4145
	push.64*    %r4144
	push.64*    %r4146
	call        reallymarkobject
	br          .L936

.L936:
	load.64*    %r4147 <- 0[g]
	push.64*    %r4147
	call        markmt
	load.64*    %r4148 <- 0[g]
	push.64*    %r4148
	call.64     %r4149 <- propagateall
	load.64*    %r4150 <- 0[g]
	load.64*    %r4151 <- 64[%r4150]
	load.64*    %r4152 <- 0[g]
	store.64*   %r4151 -> 56[%r4152]
	load.64*    %r4153 <- 0[g]
	store.64*   $0 -> 64[%r4153]
	load.64*    %r4154 <- 0[g]
	push.64*    %r4154
	call.64     %r4155 <- propagateall
	load.64*    %r4156 <- 0[L]
	push.64*    %r4156
	push.32     $0
	call.64     %r4157 <- luaC_separateudata
	store.64    %r4157 -> 0[udsize]
	load.64*    %r4158 <- 0[g]
	push.64*    %r4158
	call        marktmu
	load.64*    %r4159 <- 0[g]
	push.64*    %r4159
	call.64     %r4160 <- propagateall
	load.64     %r4161 <- 0[udsize]
	cast.64     %r4162 <- (64) %r4161
	add.64      %r4163 <- %r4162, %r4160
	cast.64     %r4164 <- (64) %r4163
	store.64    %r4164 -> 0[udsize]
	load.64*    %r4165 <- 0[g]
	load.64*    %r4166 <- 72[%r4165]
	push.64*    %r4166
	call        cleartable
	load.64*    %r4167 <- 0[g]
	load.8      %r4168 <- 32[%r4167]
	cast.32     %r4169 <- (8) %r4168
	xor.32      %r4170 <- %r4169, $3
	scast.8     %r4171 <- (32) %r4170
	load.64*    %r4172 <- 0[g]
	store.8     %r4171 -> 32[%r4172]
	load.64*    %r4173 <- 0[g]
	store.32    $0 -> 36[%r4173]
	load.64*    %r4174 <- 0[g]
	add.64*     %r4175 <- %r4174, $40
	load.64*    %r4176 <- 0[g]
	store.64*   %r4175 -> 48[%r4176]
	load.64*    %r4177 <- 0[g]
	store.8     $2 -> 33[%r4177]
	load.64*    %r4178 <- 0[g]
	load.64     %r4179 <- 120[%r4178]
	load.64     %r4180 <- 0[udsize]
	sub.64      %r4181 <- %r4179, %r4180
	load.64*    %r4182 <- 0[g]
	store.64    %r4181 -> 128[%r4182]
	br          .L937

.L937:
	ret


singlestep:
.L938:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4183 <- 0[L]
	load.64*    %r4184 <- 32[%r4183]
	store.64*   %r4184 -> 0[g]
	load.64*    %r4185 <- 0[g]
	load.8      %r4186 <- 33[%r4185]
	switch.8    %r4186, 0 -> .L940, 1 -> .L941, 2 -> .L942, 3 -> .L943, 4 -> .L944, default -> .L945

.L940:
	load.64*    %r4187 <- 0[L]
	push.64*    %r4187
	call        markroot
	phisrc.64   %phi148(return) <- $0
	br          .L946

.L941:
	load.64*    %r4189 <- 0[g]
	load.64*    %r4190 <- 56[%r4189]
	cbr         %r4190, .L947, .L948

.L947:
	load.64*    %r4191 <- 0[g]
	push.64*    %r4191
	call.64     %r4192 <- propagatemark
	phisrc.64   %phi149(return) <- %r4192
	br          .L946

.L948:
	load.64*    %r4193 <- 0[L]
	push.64*    %r4193
	call        atomic
	phisrc.64   %phi150(return) <- $0
	br          .L946

.L942:
	load.64*    %r4194 <- 0[g]
	load.64     %r4195 <- 120[%r4194]
	store.64    %r4195 -> 0[old]
	load.64*    %r4196 <- 0[L]
	load.64*    %r4197 <- 0[g]
	load.64*    %r4198 <- 0[%r4197]
	load.64*    %r4199 <- 0[g]
	load.32     %r4200 <- 36[%r4199]
	add.32      %r4201 <- %r4200, $1
	store.32    %r4201 -> 36[%r4199]
	scast.64    %r4202 <- (32) %r4200
	muls.64     %r4203 <- %r4202, $8
	add.64*     %r4204 <- %r4198, %r4203
	push.64*    %r4196
	push.64*    %r4204
	push.64     $-3
	call.64*    %r4205 <- sweeplist
	load.64*    %r4206 <- 0[g]
	load.32     %r4207 <- 36[%r4206]
	load.64*    %r4208 <- 0[g]
	load.32     %r4209 <- 12[%r4208]
	setge.32    %r4210 <- %r4207, %r4209
	cbr         %r4210, .L950, .L951

.L950:
	load.64*    %r4211 <- 0[g]
	store.8     $3 -> 33[%r4211]
	br          .L951

.L951:
	load.64     %r4212 <- 0[old]
	load.64*    %r4213 <- 0[g]
	load.64     %r4214 <- 120[%r4213]
	sub.64      %r4215 <- %r4212, %r4214
	load.64*    %r4216 <- 0[g]
	load.64     %r4217 <- 128[%r4216]
	cast.64     %r4218 <- (64) %r4217
	sub.64      %r4219 <- %r4218, %r4215
	cast.64     %r4220 <- (64) %r4219
	store.64    %r4220 -> 128[%r4216]
	phisrc.64   %phi151(return) <- $10
	br          .L946

.L943:
	load.64*    %r4221 <- 0[g]
	load.64     %r4222 <- 120[%r4221]
	store.64    %r4222 -> 0[old]
	load.64*    %r4223 <- 0[L]
	load.64*    %r4224 <- 0[g]
	load.64*    %r4225 <- 48[%r4224]
	push.64*    %r4223
	push.64*    %r4225
	push.64     $40
	call.64*    %r4226 <- sweeplist
	load.64*    %r4227 <- 0[g]
	store.64*   %r4226 -> 48[%r4227]
	load.64*    %r4228 <- 0[g]
	load.64*    %r4229 <- 48[%r4228]
	load.64*    %r4230 <- 0[%r4229]
	seteq.32    %r4231 <- %r4230, $0
	cbr         %r4231, .L952, .L953

.L952:
	load.64*    %r4232 <- 0[L]
	push.64*    %r4232
	call        checkSizes
	load.64*    %r4233 <- 0[g]
	store.8     $4 -> 33[%r4233]
	br          .L953

.L953:
	load.64     %r4234 <- 0[old]
	load.64*    %r4235 <- 0[g]
	load.64     %r4236 <- 120[%r4235]
	sub.64      %r4237 <- %r4234, %r4236
	load.64*    %r4238 <- 0[g]
	load.64     %r4239 <- 128[%r4238]
	cast.64     %r4240 <- (64) %r4239
	sub.64      %r4241 <- %r4240, %r4237
	cast.64     %r4242 <- (64) %r4241
	store.64    %r4242 -> 128[%r4238]
	phisrc.64   %phi152(return) <- $400
	br          .L946

.L944:
	load.64*    %r4243 <- 0[g]
	load.64*    %r4244 <- 80[%r4243]
	cbr         %r4244, .L954, .L955

.L954:
	load.64*    %r4245 <- 0[L]
	push.64*    %r4245
	call        GCTM
	load.64*    %r4246 <- 0[g]
	load.64     %r4247 <- 128[%r4246]
	seta.32     %r4248 <- %r4247, $100
	cbr         %r4248, .L956, .L957

.L956:
	load.64*    %r4249 <- 0[g]
	load.64     %r4250 <- 128[%r4249]
	cast.64     %r4251 <- (64) %r4250
	sub.64      %r4252 <- %r4251, $100
	cast.64     %r4253 <- (64) %r4252
	store.64    %r4253 -> 128[%r4249]
	br          .L957

.L957:
	phisrc.64   %phi153(return) <- $100
	br          .L946

.L955:
	load.64*    %r4254 <- 0[g]
	store.8     $0 -> 33[%r4254]
	load.64*    %r4255 <- 0[g]
	store.64    $0 -> 136[%r4255]
	phisrc.64   %phi154(return) <- $0
	br          .L946

.L945:
	phisrc.64   %phi155(return) <- $0
	br          .L946

.L946:
	phi.64      %r4188 <- %phi148(return), %phi149(return), %phi150(return), %phi151(return), %phi152(return), %phi153(return), %phi154(return), %phi155(return)
	ret.64      %r4188


luaC_step:
.L959:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4256 <- 0[L]
	load.64*    %r4257 <- 32[%r4256]
	store.64*   %r4257 -> 0[g]
	load.64*    %r4258 <- 0[g]
	load.32     %r4259 <- 148[%r4258]
	scast.32    %r4260 <- (32) %r4259
	mulu.32     %r4261 <- $10, %r4260
	cast.64     %r4262 <- (32) %r4261
	store.64    %r4262 -> 0[lim]
	load.64     %r4263 <- 0[lim]
	seteq.32    %r4264 <- %r4263, $0
	cbr         %r4264, .L960, .L961

.L960:
	store.64    $0x7ffffffffffffffe -> 0[lim]
	br          .L961

.L961:
	load.64*    %r4265 <- 0[g]
	load.64     %r4266 <- 120[%r4265]
	load.64*    %r4267 <- 0[g]
	load.64     %r4268 <- 112[%r4267]
	sub.64      %r4269 <- %r4266, %r4268
	load.64*    %r4270 <- 0[g]
	load.64     %r4271 <- 136[%r4270]
	cast.64     %r4272 <- (64) %r4271
	add.64      %r4273 <- %r4272, %r4269
	cast.64     %r4274 <- (64) %r4273
	store.64    %r4274 -> 136[%r4270]
	br          .L962

.L962:
	load.64*    %r4275 <- 0[L]
	push.64*    %r4275
	call.64     %r4276 <- singlestep
	load.64     %r4277 <- 0[lim]
	scast.64    %r4278 <- (64) %r4277
	sub.64      %r4279 <- %r4278, %r4276
	scast.64    %r4280 <- (64) %r4279
	store.64    %r4280 -> 0[lim]
	load.64*    %r4281 <- 0[g]
	load.8      %r4282 <- 33[%r4281]
	cast.32     %r4283 <- (8) %r4282
	seteq.32    %r4284 <- %r4283, $0
	cbr         %r4284, .L965, .L966

.L965:
	br          .L964

.L966:
	br          .L963

.L963:
	load.64     %r4285 <- 0[lim]
	setgt.32    %r4286 <- %r4285, $0
	cbr         %r4286, .L962, .L964

.L964:
	load.64*    %r4287 <- 0[g]
	load.8      %r4288 <- 33[%r4287]
	cast.32     %r4289 <- (8) %r4288
	setne.32    %r4290 <- %r4289, $0
	cbr         %r4290, .L967, .L968

.L967:
	load.64*    %r4291 <- 0[g]
	load.64     %r4292 <- 136[%r4291]
	setb.32     %r4293 <- %r4292, $0x400
	cbr         %r4293, .L969, .L970

.L969:
	load.64*    %r4294 <- 0[g]
	load.64     %r4295 <- 120[%r4294]
	add.64      %r4296 <- %r4295, $0x400
	load.64*    %r4297 <- 0[g]
	store.64    %r4296 -> 112[%r4297]
	br          .L971

.L970:
	load.64*    %r4298 <- 0[g]
	load.64     %r4299 <- 136[%r4298]
	cast.64     %r4300 <- (64) %r4299
	sub.64      %r4301 <- %r4300, $0x400
	cast.64     %r4302 <- (64) %r4301
	store.64    %r4302 -> 136[%r4298]
	load.64*    %r4303 <- 0[g]
	load.64     %r4304 <- 120[%r4303]
	load.64*    %r4305 <- 0[g]
	store.64    %r4304 -> 112[%r4305]
	br          .L971

.L971:
	br          .L972

.L968:
	load.64*    %r4306 <- 0[g]
	load.64     %r4307 <- 128[%r4306]
	divu.64     %r4308 <- %r4307, $100
	load.64*    %r4309 <- 0[g]
	load.32     %r4310 <- 144[%r4309]
	scast.64    %r4311 <- (32) %r4310
	mulu.64     %r4312 <- %r4308, %r4311
	load.64*    %r4313 <- 0[g]
	store.64    %r4312 -> 112[%r4313]
	br          .L972

.L972:
	ret


luaC_barrierf:
.L973:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.64*   %arg3 -> 0[v]
	load.64*    %r4314 <- 0[L]
	load.64*    %r4315 <- 32[%r4314]
	store.64*   %r4315 -> 0[g]
	load.64*    %r4316 <- 0[g]
	load.8      %r4317 <- 33[%r4316]
	cast.32     %r4318 <- (8) %r4317
	seteq.32    %r4319 <- %r4318, $1
	cbr         %r4319, .L974, .L975

.L974:
	load.64*    %r4320 <- 0[g]
	load.64*    %r4321 <- 0[v]
	push.64*    %r4320
	push.64*    %r4321
	call        reallymarkobject
	br          .L976

.L975:
	load.64*    %r4322 <- 0[o]
	load.8      %r4323 <- 9[%r4322]
	cast.32     %r4324 <- (8) %r4323
	and.32      %r4325 <- %r4324, $248
	load.64*    %r4326 <- 0[g]
	load.8      %r4327 <- 32[%r4326]
	cast.32     %r4328 <- (8) %r4327
	and.32      %r4329 <- %r4328, $3
	scast.8     %r4330 <- (32) %r4329
	cast.32     %r4331 <- (8) %r4330
	or.32       %r4332 <- %r4325, %r4331
	scast.8     %r4333 <- (32) %r4332
	load.64*    %r4334 <- 0[o]
	store.8     %r4333 -> 9[%r4334]
	br          .L976

.L976:
	ret


luaC_barrierback:
.L977:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	load.64*    %r4335 <- 0[L]
	load.64*    %r4336 <- 32[%r4335]
	store.64*   %r4336 -> 0[g]
	load.64*    %r4337 <- 0[t]
	ptrcast.64* %r4338 <- (64) %r4337
	store.64*   %r4338 -> 0[o]
	load.64*    %r4339 <- 0[o]
	load.8      %r4340 <- 9[%r4339]
	cast.32     %r4341 <- (8) %r4340
	and.32      %r4342 <- %r4341, $251
	scast.8     %r4343 <- (32) %r4342
	store.8     %r4343 -> 9[%r4339]
	load.64*    %r4344 <- 0[g]
	load.64*    %r4345 <- 64[%r4344]
	load.64*    %r4346 <- 0[t]
	store.64*   %r4345 -> 48[%r4346]
	load.64*    %r4347 <- 0[o]
	load.64*    %r4348 <- 0[g]
	store.64*   %r4347 -> 64[%r4348]
	br          .L978

.L978:
	ret


luaC_link:
.L979:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.8     %arg3 -> 0[tt]
	load.64*    %r4349 <- 0[L]
	load.64*    %r4350 <- 32[%r4349]
	store.64*   %r4350 -> 0[g]
	load.64*    %r4351 <- 0[g]
	load.64*    %r4352 <- 40[%r4351]
	load.64*    %r4353 <- 0[o]
	store.64*   %r4352 -> 0[%r4353]
	load.64*    %r4354 <- 0[o]
	load.64*    %r4355 <- 0[g]
	store.64*   %r4354 -> 40[%r4355]
	load.64*    %r4356 <- 0[g]
	load.8      %r4357 <- 32[%r4356]
	cast.32     %r4358 <- (8) %r4357
	and.32      %r4359 <- %r4358, $3
	scast.8     %r4360 <- (32) %r4359
	load.64*    %r4361 <- 0[o]
	store.8     %r4360 -> 9[%r4361]
	load.8      %r4362 <- 0[tt]
	load.64*    %r4363 <- 0[o]
	store.8     %r4362 -> 8[%r4363]
	br          .L980

.L980:
	ret


luaC_linkupval:
.L981:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[uv]
	load.64*    %r4364 <- 0[L]
	load.64*    %r4365 <- 32[%r4364]
	store.64*   %r4365 -> 0[g]
	load.64*    %r4366 <- 0[uv]
	ptrcast.64* %r4367 <- (64) %r4366
	store.64*   %r4367 -> 0[o]
	load.64*    %r4368 <- 0[g]
	load.64*    %r4369 <- 40[%r4368]
	load.64*    %r4370 <- 0[o]
	store.64*   %r4369 -> 0[%r4370]
	load.64*    %r4371 <- 0[o]
	load.64*    %r4372 <- 0[g]
	store.64*   %r4371 -> 40[%r4372]
	load.64*    %r4373 <- 0[o]
	load.8      %r4374 <- 9[%r4373]
	cast.32     %r4375 <- (8) %r4374
	and.32      %r4376 <- %r4375, $4
	cbr         %r4376, .L983, .L984

.L984:
	load.64*    %r4377 <- 0[o]
	load.8      %r4378 <- 9[%r4377]
	cast.32     %r4379 <- (8) %r4378
	and.32      %r4380 <- %r4379, $3
	cbr         %r4380, .L983, .L982

.L982:
	load.64*    %r4381 <- 0[g]
	load.8      %r4382 <- 33[%r4381]
	cast.32     %r4383 <- (8) %r4382
	seteq.32    %r4384 <- %r4383, $1
	cbr         %r4384, .L985, .L986

.L985:
	load.64*    %r4385 <- 0[o]
	load.8      %r4386 <- 9[%r4385]
	cast.32     %r4387 <- (8) %r4386
	or.32       %r4388 <- %r4387, $4
	scast.8     %r4389 <- (32) %r4388
	store.8     %r4389 -> 9[%r4385]
	load.64*    %r4390 <- 0[uv]
	load.64*    %r4391 <- 16[%r4390]
	load.32     %r4392 <- 8[%r4391]
	setge.32    %r4393 <- %r4392, $4
	cbr         %r4393, .L990, .L988

.L990:
	load.64*    %r4394 <- 0[uv]
	load.64*    %r4395 <- 16[%r4394]
	load.64*    %r4396 <- 0[%r4395]
	load.8      %r4397 <- 9[%r4396]
	cast.32     %r4398 <- (8) %r4397
	and.32      %r4399 <- %r4398, $3
	cbr         %r4399, .L989, .L988

.L989:
	load.64*    %r4400 <- 0[uv]
	ptrcast.64* %r4401 <- (64) %r4400
	load.8      %r4402 <- 9[%r4401]
	cast.32     %r4403 <- (8) %r4402
	and.32      %r4404 <- %r4403, $4
	cbr         %r4404, .L987, .L988

.L987:
	load.64*    %r4405 <- 0[L]
	load.64*    %r4406 <- 0[uv]
	ptrcast.64* %r4407 <- (64) %r4406
	load.64*    %r4408 <- 0[uv]
	load.64*    %r4409 <- 16[%r4408]
	load.64*    %r4410 <- 0[%r4409]
	push.64*    %r4405
	push.64*    %r4407
	push.64*    %r4410
	call        luaC_barrierf
	br          .L988

.L988:
	br          .L991

.L986:
	load.64*    %r4411 <- 0[o]
	load.8      %r4412 <- 9[%r4411]
	cast.32     %r4413 <- (8) %r4412
	and.32      %r4414 <- %r4413, $248
	load.64*    %r4415 <- 0[g]
	load.8      %r4416 <- 32[%r4415]
	cast.32     %r4417 <- (8) %r4416
	and.32      %r4418 <- %r4417, $3
	scast.8     %r4419 <- (32) %r4418
	cast.32     %r4420 <- (8) %r4419
	or.32       %r4421 <- %r4414, %r4420
	scast.8     %r4422 <- (32) %r4421
	load.64*    %r4423 <- 0[o]
	store.8     %r4422 -> 9[%r4423]
	br          .L991

.L991:
	br          .L983

.L983:
	ret


stack_init:
.L992:
	<entry-point>
	store.64*   %arg1 -> 0[L1]
	store.64*   %arg2 -> 0[L]
	load.64*    %r4424 <- 0[L]
	push.64*    %r4424
	push.64*    $0
	push.64     $0
	push.64     $320
	call.64*    %r4425 <- luaM_realloc_
	ptrcast.64* %r4426 <- (64) %r4425
	load.64*    %r4427 <- 0[L1]
	store.64*   %r4426 -> 80[%r4427]
	load.64*    %r4428 <- 0[L1]
	load.64*    %r4429 <- 80[%r4428]
	load.64*    %r4430 <- 0[L1]
	store.64*   %r4429 -> 40[%r4430]
	load.64*    %r4431 <- 0[L1]
	store.32    $8 -> 92[%r4431]
	load.64*    %r4432 <- 0[L1]
	load.64*    %r4433 <- 80[%r4432]
	load.64*    %r4434 <- 0[L1]
	load.32     %r4435 <- 92[%r4434]
	scast.64    %r4436 <- (32) %r4435
	muls.64     %r4437 <- %r4436, $40
	add.64*     %r4438 <- %r4433, %r4437
	sub.64*     %r4439 <- %r4438, $40
	load.64*    %r4440 <- 0[L1]
	store.64*   %r4439 -> 72[%r4440]
	load.64*    %r4441 <- 0[L]
	push.64*    %r4441
	push.64*    $0
	push.64     $0
	push.64     $720
	call.64*    %r4442 <- luaM_realloc_
	ptrcast.64* %r4443 <- (64) %r4442
	load.64*    %r4444 <- 0[L1]
	store.64*   %r4443 -> 64[%r4444]
	load.64*    %r4445 <- 0[L1]
	store.32    $45 -> 88[%r4445]
	load.64*    %r4446 <- 0[L1]
	load.64*    %r4447 <- 64[%r4446]
	load.64*    %r4448 <- 0[L1]
	store.64*   %r4447 -> 16[%r4448]
	load.64*    %r4449 <- 0[L1]
	load.64*    %r4450 <- 64[%r4449]
	load.64*    %r4451 <- 0[L1]
	load.32     %r4452 <- 88[%r4451]
	sub.32      %r4453 <- %r4452, $5
	scast.64    %r4454 <- (32) %r4453
	muls.64     %r4455 <- %r4454, $16
	add.64*     %r4456 <- %r4450, %r4455
	sub.64*     %r4457 <- %r4456, $16
	load.64*    %r4458 <- 0[L1]
	store.64*   %r4457 -> 56[%r4458]
	load.64*    %r4459 <- 0[L1]
	load.64*    %r4460 <- 16[%r4459]
	load.64*    %r4461 <- 0[L1]
	load.64*    %r4462 <- 40[%r4461]
	store.64*   %r4460 -> 8[%r4462]
	load.64*    %r4463 <- 0[L1]
	load.64*    %r4464 <- 16[%r4463]
	add.64*     %r4465 <- %r4464, $16
	store.64*   %r4465 -> 16[%r4463]
	store.32    $0 -> 8[%r4464]
	load.64*    %r4466 <- 0[L1]
	load.64*    %r4467 <- 16[%r4466]
	load.64*    %r4468 <- 0[L1]
	load.64*    %r4469 <- 40[%r4468]
	store.64*   %r4467 -> 0[%r4469]
	load.64*    %r4470 <- 0[L1]
	store.64*   %r4467 -> 24[%r4470]
	load.64*    %r4471 <- 0[L1]
	load.64*    %r4472 <- 16[%r4471]
	add.64*     %r4473 <- %r4472, $320
	load.64*    %r4474 <- 0[L1]
	load.64*    %r4475 <- 40[%r4474]
	store.64*   %r4473 -> 16[%r4475]
	br          .L993

.L993:
	ret


freestack:
.L994:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[L1]
	load.64*    %r4476 <- 0[L]
	load.64*    %r4477 <- 0[L1]
	load.64*    %r4478 <- 80[%r4477]
	cast.64*    %r4479 <- (64) %r4478
	load.64*    %r4480 <- 0[L1]
	load.32     %r4481 <- 92[%r4480]
	scast.64    %r4482 <- (32) %r4481
	mulu.64     %r4483 <- %r4482, $40
	push.64*    %r4476
	push.64*    %r4479
	push.64     %r4483
	push.64     $0
	call.64*    %r4484 <- luaM_realloc_
	load.64*    %r4485 <- 0[L]
	load.64*    %r4486 <- 0[L1]
	load.64*    %r4487 <- 64[%r4486]
	cast.64*    %r4488 <- (64) %r4487
	load.64*    %r4489 <- 0[L1]
	load.32     %r4490 <- 88[%r4489]
	scast.64    %r4491 <- (32) %r4490
	mulu.64     %r4492 <- %r4491, $16
	push.64*    %r4485
	push.64*    %r4488
	push.64     %r4492
	push.64     $0
	call.64*    %r4493 <- luaM_realloc_
	br          .L995

.L995:
	ret


f_luaopen:
.L996:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4494 <- 0[L]
	load.64*    %r4495 <- 32[%r4494]
	store.64*   %r4495 -> 0[g]
	load.64*    %r4496 <- 0[ud]
	load.64*    %r4497 <- 0[L]
	load.64*    %r4498 <- 0[L]
	push.64*    %r4497
	push.64*    %r4498
	call        stack_init
	load.64*    %r4499 <- 0[L]
	add.64*     %r4500 <- %r4499, $120
	store.64*   %r4500 -> 0[i_o]
	load.64*    %r4501 <- 0[L]
	push.64*    %r4501
	push.32     $0
	push.32     $2
	call.64*    %r4502 <- luaH_new
	ptrcast.64* %r4503 <- (64) %r4502
	load.64*    %r4504 <- 0[i_o]
	store.64*   %r4503 -> 0[%r4504]
	load.64*    %r4505 <- 0[i_o]
	store.32    $5 -> 8[%r4505]
	load.64*    %r4506 <- 0[L]
	load.64*    %r4507 <- 32[%r4506]
	add.64*     %r4508 <- %r4507, $160
	store.64*   %r4508 -> 0[i_o]
	load.64*    %r4509 <- 0[L]
	push.64*    %r4509
	push.32     $0
	push.32     $2
	call.64*    %r4510 <- luaH_new
	ptrcast.64* %r4511 <- (64) %r4510
	load.64*    %r4512 <- 0[i_o]
	store.64*   %r4511 -> 0[%r4512]
	load.64*    %r4513 <- 0[i_o]
	store.32    $5 -> 8[%r4513]
	load.64*    %r4514 <- 0[L]
	push.64*    %r4514
	push.32     $32
	call        luaS_resize
	load.64*    %r4515 <- 0[L]
	push.64*    %r4515
	call        luaT_init
	load.64*    %r4516 <- 0[L]
	push.64*    %r4516
	call        luaX_init
	load.64*    %r4517 <- 0[L]
	symaddr.64* %r4518 <- <anon symbol:0x1b854e0>
	push.64*    %r4517
	push.64*    %r4518
	push.64     $17
	call.64*    %r4519 <- luaS_newlstr
	load.8      %r4520 <- 9[%r4519]
	cast.32     %r4521 <- (8) %r4520
	or.32       %r4522 <- %r4521, $32
	scast.8     %r4523 <- (32) %r4522
	store.8     %r4523 -> 9[%r4519]
	load.64*    %r4524 <- 0[g]
	load.64     %r4525 <- 120[%r4524]
	mulu.64     %r4526 <- $4, %r4525
	load.64*    %r4527 <- 0[g]
	store.64    %r4526 -> 112[%r4527]
	br          .L997

.L997:
	ret


preinit_state:
.L998:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[g]
	load.64*    %r4528 <- 0[g]
	load.64*    %r4529 <- 0[L]
	store.64*   %r4528 -> 32[%r4529]
	load.64*    %r4530 <- 0[L]
	store.64*   $0 -> 64[%r4530]
	load.64*    %r4531 <- 0[L]
	store.32    $0 -> 88[%r4531]
	load.64*    %r4532 <- 0[L]
	store.64*   $0 -> 168[%r4532]
	load.64*    %r4533 <- 0[L]
	store.64*   $0 -> 112[%r4533]
	load.64*    %r4534 <- 0[L]
	store.8     $0 -> 100[%r4534]
	load.64*    %r4535 <- 0[L]
	store.32    $0 -> 104[%r4535]
	load.64*    %r4536 <- 0[L]
	store.8     $1 -> 101[%r4536]
	load.64*    %r4537 <- 0[L]
	load.32     %r4538 <- 104[%r4537]
	load.64*    %r4539 <- 0[L]
	store.32    %r4538 -> 108[%r4539]
	load.64*    %r4540 <- 0[L]
	store.64*   $0 -> 152[%r4540]
	load.64*    %r4541 <- 0[L]
	store.32    $0 -> 92[%r4541]
	load.64*    %r4542 <- 0[L]
	store.16    $0 -> 98[%r4542]
	load.64*    %r4543 <- 0[L]
	store.16    $0 -> 96[%r4543]
	load.64*    %r4544 <- 0[L]
	store.8     $0 -> 10[%r4544]
	load.64*    %r4545 <- 0[L]
	store.64*   $0 -> 40[%r4545]
	load.64*    %r4546 <- 0[L]
	store.64*   $0 -> 80[%r4546]
	load.64*    %r4547 <- 0[L]
	store.64*   $0 -> 48[%r4547]
	load.64*    %r4548 <- 0[L]
	store.64    $0 -> 176[%r4548]
	load.64*    %r4549 <- 0[L]
	store.32    $0 -> 128[%r4549]
	br          .L999

.L999:
	ret


close_state:
.L1000:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4550 <- 0[L]
	load.64*    %r4551 <- 32[%r4550]
	store.64*   %r4551 -> 0[g]
	load.64*    %r4552 <- 0[L]
	load.64*    %r4553 <- 0[L]
	load.64*    %r4554 <- 64[%r4553]
	push.64*    %r4552
	push.64*    %r4554
	call        luaF_close
	load.64*    %r4555 <- 0[L]
	push.64*    %r4555
	call        luaC_freeall
	load.64*    %r4556 <- 0[L]
	load.64*    %r4557 <- 0[L]
	load.64*    %r4558 <- 32[%r4557]
	load.64*    %r4559 <- 0[%r4558]
	cast.64*    %r4560 <- (64) %r4559
	load.64*    %r4561 <- 0[L]
	load.64*    %r4562 <- 32[%r4561]
	load.32     %r4563 <- 12[%r4562]
	scast.64    %r4564 <- (32) %r4563
	mulu.64     %r4565 <- %r4564, $8
	push.64*    %r4556
	push.64*    %r4560
	push.64     %r4565
	push.64     $0
	call.64*    %r4566 <- luaM_realloc_
	load.64*    %r4567 <- 0[L]
	load.64*    %r4568 <- 0[g]
	load.64*    %r4569 <- 88[%r4568]
	cast.64*    %r4570 <- (64) %r4569
	load.64*    %r4571 <- 0[g]
	load.64     %r4572 <- 104[%r4571]
	mulu.64     %r4573 <- %r4572, $1
	push.64*    %r4567
	push.64*    %r4570
	push.64     %r4573
	push.64     $0
	call.64*    %r4574 <- luaM_realloc_
	ptrcast.64* %r4575 <- (64) %r4574
	load.64*    %r4576 <- 0[g]
	store.64*   %r4575 -> 88[%r4576]
	load.64*    %r4577 <- 0[g]
	store.64    $0 -> 104[%r4577]
	load.64*    %r4578 <- 0[L]
	load.64*    %r4579 <- 0[L]
	push.64*    %r4578
	push.64*    %r4579
	call        freestack
	load.64*    %r4580 <- 0[g]
	load.64*    %r4581 <- 24[%r4580]
	load.64*    %r4582 <- 0[L]
	ptrcast.64* %r4583 <- (64) %r4582
	sub.64*     %r4584 <- %r4583, $0
	cast.64*    %r4585 <- (64) %r4584
	push.64*    %r4581
	push.64*    %r4585
	push.64     $616
	push.64     $0
	load.64*    %r4586 <- 0[g]
	load.64*    %r4587 <- 16[%r4586]
	call.64*    %r4588 <- %r4587
	br          .L1001

.L1001:
	ret


luaE_freethread:
.L1002:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[L1]
	load.64*    %r4589 <- 0[L1]
	load.64*    %r4590 <- 0[L1]
	load.64*    %r4591 <- 64[%r4590]
	push.64*    %r4589
	push.64*    %r4591
	call        luaF_close
	load.64*    %r4592 <- 0[L]
	load.64*    %r4593 <- 0[L1]
	push.64*    %r4592
	push.64*    %r4593
	call        freestack
	load.64*    %r4594 <- 0[L]
	load.64*    %r4595 <- 0[L1]
	ptrcast.64* %r4596 <- (64) %r4595
	sub.64*     %r4597 <- %r4596, $0
	cast.64*    %r4598 <- (64) %r4597
	push.64*    %r4594
	push.64*    %r4598
	push.64     $184
	push.64     $0
	call.64*    %r4599 <- luaM_realloc_
	br          .L1003

.L1003:
	ret


lua_newstate:
.L1004:
	<entry-point>
	store.64*   %arg1 -> 0[f]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4600 <- 0[ud]
	push.64*    %r4600
	push.64*    $0
	push.64     $0
	push.64     $616
	load.64*    %r4601 <- 0[f]
	call.64*    %r4602 <- %r4601
	store.64*   %r4602 -> 0[l]
	load.64*    %r4603 <- 0[l]
	seteq.32    %r4604 <- %r4603, $0
	cbr         %r4604, .L1005, .L1006

.L1005:
	phisrc.64*  %phi156(return) <- $0
	br          .L1007

.L1006:
	load.64*    %r4606 <- 0[l]
	ptrcast.64* %r4607 <- (64) %r4606
	add.64*     %r4608 <- %r4607, $0
	ptrcast.64* %r4609 <- (64) %r4608
	store.64*   %r4609 -> 0[L]
	load.64*    %r4610 <- 0[L]
	ptrcast.64* %r4611 <- (64) %r4610
	add.64*     %r4612 <- %r4611, $184
	store.64*   %r4612 -> 0[g]
	load.64*    %r4613 <- 0[L]
	store.64*   $0 -> 0[%r4613]
	load.64*    %r4614 <- 0[L]
	store.8     $8 -> 8[%r4614]
	load.64*    %r4615 <- 0[g]
	store.8     $33 -> 32[%r4615]
	load.64*    %r4616 <- 0[g]
	load.8      %r4617 <- 32[%r4616]
	cast.32     %r4618 <- (8) %r4617
	and.32      %r4619 <- %r4618, $3
	scast.8     %r4620 <- (32) %r4619
	load.64*    %r4621 <- 0[L]
	store.8     %r4620 -> 9[%r4621]
	load.64*    %r4622 <- 0[L]
	load.8      %r4623 <- 9[%r4622]
	cast.32     %r4624 <- (8) %r4623
	or.32       %r4625 <- %r4624, $96
	scast.8     %r4626 <- (32) %r4625
	store.8     %r4626 -> 9[%r4622]
	load.64*    %r4627 <- 0[L]
	load.64*    %r4628 <- 0[g]
	push.64*    %r4627
	push.64*    %r4628
	call        preinit_state
	load.64*    %r4629 <- 0[f]
	load.64*    %r4630 <- 0[g]
	store.64*   %r4629 -> 16[%r4630]
	load.64*    %r4631 <- 0[ud]
	load.64*    %r4632 <- 0[g]
	store.64*   %r4631 -> 24[%r4632]
	load.64*    %r4633 <- 0[L]
	load.64*    %r4634 <- 0[g]
	store.64*   %r4633 -> 176[%r4634]
	load.64*    %r4635 <- 0[g]
	add.64*     %r4636 <- %r4635, $184
	load.64*    %r4637 <- 0[g]
	store.64*   %r4636 -> 208[%r4637]
	load.64*    %r4638 <- 0[g]
	add.64*     %r4639 <- %r4638, $184
	load.64*    %r4640 <- 0[g]
	store.64*   %r4639 -> 216[%r4640]
	load.64*    %r4641 <- 0[g]
	store.64    $0 -> 112[%r4641]
	load.64*    %r4642 <- 0[g]
	store.32    $0 -> 12[%r4642]
	load.64*    %r4643 <- 0[g]
	store.32    $0 -> 8[%r4643]
	load.64*    %r4644 <- 0[g]
	store.64*   $0 -> 0[%r4644]
	load.64*    %r4645 <- 0[L]
	load.64*    %r4646 <- 32[%r4645]
	store.32    $0 -> 168[%r4646]
	load.64*    %r4647 <- 0[g]
	store.64*   $0 -> 88[%r4647]
	load.64*    %r4648 <- 0[g]
	store.64    $0 -> 104[%r4648]
	load.64*    %r4649 <- 0[g]
	store.64*   $0 -> 152[%r4649]
	load.64*    %r4650 <- 0[g]
	store.8     $0 -> 33[%r4650]
	load.64*    %r4651 <- 0[L]
	ptrcast.64* %r4652 <- (64) %r4651
	load.64*    %r4653 <- 0[g]
	store.64*   %r4652 -> 40[%r4653]
	load.64*    %r4654 <- 0[g]
	store.32    $0 -> 36[%r4654]
	load.64*    %r4655 <- 0[g]
	add.64*     %r4656 <- %r4655, $40
	load.64*    %r4657 <- 0[g]
	store.64*   %r4656 -> 48[%r4657]
	load.64*    %r4658 <- 0[g]
	store.64*   $0 -> 56[%r4658]
	load.64*    %r4659 <- 0[g]
	store.64*   $0 -> 64[%r4659]
	load.64*    %r4660 <- 0[g]
	store.64*   $0 -> 72[%r4660]
	load.64*    %r4661 <- 0[g]
	store.64*   $0 -> 80[%r4661]
	load.64*    %r4662 <- 0[g]
	store.64    $616 -> 120[%r4662]
	load.64*    %r4663 <- 0[g]
	store.32    $200 -> 144[%r4663]
	load.64*    %r4664 <- 0[g]
	store.32    $200 -> 148[%r4664]
	load.64*    %r4665 <- 0[g]
	store.64    $0 -> 136[%r4665]
	store.32    $0 -> 0[i]
	br          .L1011

.L1011:
	load.32     %r4666 <- 0[i]
	setlt.32    %r4667 <- %r4666, $9
	cbr         %r4667, .L1008, .L1010

.L1008:
	load.64*    %r4668 <- 0[g]
	add.64*     %r4669 <- %r4668, $224
	load.32     %r4670 <- 0[i]
	scast.64    %r4671 <- (32) %r4670
	muls.64     %r4672 <- %r4671, $8
	add.64*     %r4673 <- %r4669, %r4672
	store.64*   $0 -> 0[%r4673]
	br          .L1009

.L1009:
	load.32     %r4674 <- 0[i]
	add.32      %r4675 <- %r4674, $1
	store.32    %r4675 -> 0[i]
	br          .L1011

.L1010:
	load.64*    %r4676 <- 0[L]
	symaddr.64* %r4677 <- f_luaopen
	push.64*    %r4676
	push.64*    %r4677
	push.64*    $0
	call.32     %r4678 <- luaD_rawrunprotected
	setne.32    %r4679 <- %r4678, $0
	cbr         %r4679, .L1012, .L1013

.L1012:
	load.64*    %r4680 <- 0[L]
	push.64*    %r4680
	call        close_state
	store.64*   $0 -> 0[L]
	br          .L1014

.L1013:
	br          .L1014

.L1014:
	load.64*    %r4681 <- 0[L]
	phisrc.64*  %phi157(return) <- %r4681
	br          .L1007

.L1007:
	phi.64*     %r4605 <- %phi156(return), %phi157(return)
	ret.64*     %r4605


callallgcTM:
.L1015:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4682 <- 0[ud]
	load.64*    %r4683 <- 0[L]
	push.64*    %r4683
	call        luaC_callGCTM
	br          .L1016

.L1016:
	ret


lua_close:
.L1017:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4684 <- 0[L]
	load.64*    %r4685 <- 32[%r4684]
	load.64*    %r4686 <- 176[%r4685]
	store.64*   %r4686 -> 0[L]
	load.64*    %r4687 <- 0[L]
	load.64*    %r4688 <- 0[L]
	load.64*    %r4689 <- 64[%r4688]
	push.64*    %r4687
	push.64*    %r4689
	call        luaF_close
	load.64*    %r4690 <- 0[L]
	push.64*    %r4690
	push.32     $1
	call.64     %r4691 <- luaC_separateudata
	load.64*    %r4692 <- 0[L]
	store.64    $0 -> 176[%r4692]
	br          .L1018

.L1018:
	load.64*    %r4693 <- 0[L]
	load.64*    %r4694 <- 80[%r4693]
	load.64*    %r4695 <- 0[L]
	store.64*   %r4694 -> 40[%r4695]
	load.64*    %r4696 <- 0[L]
	load.64*    %r4697 <- 40[%r4696]
	load.64*    %r4698 <- 0[%r4697]
	load.64*    %r4699 <- 0[L]
	store.64*   %r4698 -> 16[%r4699]
	load.64*    %r4700 <- 0[L]
	store.64*   %r4698 -> 24[%r4700]
	load.64*    %r4701 <- 0[L]
	store.16    $0 -> 98[%r4701]
	load.64*    %r4702 <- 0[L]
	store.16    $0 -> 96[%r4702]
	br          .L1019

.L1019:
	load.64*    %r4703 <- 0[L]
	symaddr.64* %r4704 <- callallgcTM
	push.64*    %r4703
	push.64*    %r4704
	push.64*    $0
	call.32     %r4705 <- luaD_rawrunprotected
	setne.32    %r4706 <- %r4705, $0
	cbr         %r4706, .L1018, .L1020

.L1020:
	load.64*    %r4707 <- 0[L]
	push.64*    %r4707
	call        close_state
	br          .L1021

.L1021:
	ret


currentpc:
.L1022:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ci]
	load.64*    %r4708 <- 0[ci]
	load.64*    %r4709 <- 8[%r4708]
	load.32     %r4710 <- 8[%r4709]
	seteq.32    %r4711 <- %r4710, $6
	cbr         %r4711, .L1025, .L1023

.L1025:
	load.64*    %r4712 <- 0[ci]
	load.64*    %r4713 <- 8[%r4712]
	load.64*    %r4714 <- 0[%r4713]
	load.8      %r4715 <- 10[%r4714]
	cbr         %r4715, .L1023, .L1024

.L1023:
	phisrc.32   %phi158(return) <- $0xffffffff
	br          .L1026

.L1024:
	load.64*    %r4717 <- 0[ci]
	load.64*    %r4718 <- 0[L]
	load.64*    %r4719 <- 40[%r4718]
	seteq.32    %r4720 <- %r4717, %r4719
	cbr         %r4720, .L1027, .L1028

.L1027:
	load.64*    %r4721 <- 0[L]
	load.64*    %r4722 <- 48[%r4721]
	load.64*    %r4723 <- 0[ci]
	store.64*   %r4722 -> 24[%r4723]
	br          .L1028

.L1028:
	load.64*    %r4724 <- 0[ci]
	load.64*    %r4725 <- 24[%r4724]
	load.64*    %r4726 <- 0[ci]
	load.64*    %r4727 <- 8[%r4726]
	load.64*    %r4728 <- 0[%r4727]
	load.64*    %r4729 <- 32[%r4728]
	load.64*    %r4730 <- 24[%r4729]
	sub.64      %r4731 <- %r4725, %r4730
	divs.64     %r4732 <- %r4731, $4
	scast.32    %r4733 <- (64) %r4732
	sub.32      %r4734 <- %r4733, $1
	phisrc.32   %phi159(return) <- %r4734
	br          .L1026

.L1026:
	phi.32      %r4716 <- %phi158(return), %phi159(return)
	ret.32      %r4716


currentline:
.L1029:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ci]
	load.64*    %r4735 <- 0[L]
	load.64*    %r4736 <- 0[ci]
	push.64*    %r4735
	push.64*    %r4736
	call.32     %r4737 <- currentpc
	store.32    %r4737 -> 0[pc]
	load.32     %r4738 <- 0[pc]
	setlt.32    %r4739 <- %r4738, $0
	cbr         %r4739, .L1030, .L1031

.L1030:
	phisrc.32   %phi160(return) <- $0xffffffff
	br          .L1032

.L1031:
	load.64*    %r4741 <- 0[ci]
	load.64*    %r4742 <- 8[%r4741]
	load.64*    %r4743 <- 0[%r4742]
	load.64*    %r4744 <- 32[%r4743]
	load.64*    %r4745 <- 40[%r4744]
	cbr         %r4745, .L1034, .L1035

.L1034:
	load.64*    %r4746 <- 0[ci]
	load.64*    %r4747 <- 8[%r4746]
	load.64*    %r4748 <- 0[%r4747]
	load.64*    %r4749 <- 32[%r4748]
	load.64*    %r4750 <- 40[%r4749]
	load.32     %r4751 <- 0[pc]
	scast.64    %r4752 <- (32) %r4751
	muls.64     %r4753 <- %r4752, $4
	add.64*     %r4754 <- %r4750, %r4753
	load.32     %r4755 <- 0[%r4754]
	phisrc.32   %phi161 <- %r4755
	br          .L1036

.L1035:
	phisrc.32   %phi162 <- $0
	br          .L1036

.L1036:
	phi.32      %r4756 <- %phi161, %phi162
	phisrc.32   %phi163(return) <- %r4756
	br          .L1032

.L1032:
	phi.32      %r4740 <- %phi160(return), %phi163(return)
	ret.32      %r4740


lua_getstack:
.L1037:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[level]
	store.64*   %arg3 -> 0[ar]
	load.64*    %r4757 <- 0[L]
	load.64*    %r4758 <- 40[%r4757]
	store.64*   %r4758 -> 0[ci]
	br          .L1041

.L1041:
	load.32     %r4759 <- 0[level]
	setgt.32    %r4760 <- %r4759, $0
	cbr         %r4760, .L1042, .L1040

.L1042:
	load.64*    %r4761 <- 0[ci]
	load.64*    %r4762 <- 0[L]
	load.64*    %r4763 <- 80[%r4762]
	seta.32     %r4764 <- %r4761, %r4763
	cbr         %r4764, .L1038, .L1040

.L1038:
	load.32     %r4765 <- 0[level]
	sub.32      %r4766 <- %r4765, $1
	store.32    %r4766 -> 0[level]
	load.64*    %r4767 <- 0[ci]
	load.64*    %r4768 <- 8[%r4767]
	load.64*    %r4769 <- 0[%r4768]
	load.8      %r4770 <- 10[%r4769]
	cbr         %r4770, .L1044, .L1043

.L1043:
	load.64*    %r4771 <- 0[ci]
	load.32     %r4772 <- 36[%r4771]
	load.32     %r4773 <- 0[level]
	scast.32    %r4774 <- (32) %r4773
	sub.32      %r4775 <- %r4774, %r4772
	scast.32    %r4776 <- (32) %r4775
	store.32    %r4776 -> 0[level]
	br          .L1044

.L1044:
	br          .L1039

.L1039:
	load.64*    %r4777 <- 0[ci]
	sub.64*     %r4778 <- %r4777, $40
	store.64*   %r4778 -> 0[ci]
	br          .L1041

.L1040:
	load.32     %r4779 <- 0[level]
	seteq.32    %r4780 <- %r4779, $0
	cbr         %r4780, .L1047, .L1046

.L1047:
	load.64*    %r4781 <- 0[ci]
	load.64*    %r4782 <- 0[L]
	load.64*    %r4783 <- 80[%r4782]
	seta.32     %r4784 <- %r4781, %r4783
	cbr         %r4784, .L1045, .L1046

.L1045:
	store.32    $1 -> 0[status]
	load.64*    %r4785 <- 0[ci]
	load.64*    %r4786 <- 0[L]
	load.64*    %r4787 <- 80[%r4786]
	sub.64      %r4788 <- %r4785, %r4787
	divs.64     %r4789 <- %r4788, $40
	scast.32    %r4790 <- (64) %r4789
	load.64*    %r4791 <- 0[ar]
	store.32    %r4790 -> 116[%r4791]
	br          .L1048

.L1046:
	load.32     %r4792 <- 0[level]
	setlt.32    %r4793 <- %r4792, $0
	cbr         %r4793, .L1049, .L1050

.L1049:
	store.32    $1 -> 0[status]
	load.64*    %r4794 <- 0[ar]
	store.32    $0 -> 116[%r4794]
	br          .L1051

.L1050:
	store.32    $0 -> 0[status]
	br          .L1051

.L1051:
	br          .L1048

.L1048:
	load.32     %r4795 <- 0[status]
	phisrc.32   %phi164(return) <- %r4795
	br          .L1052

.L1052:
	phi.32      %r4796 <- %phi164(return)
	ret.32      %r4795


getluaproto:
.L1053:
	<entry-point>
	store.64*   %arg1 -> 0[ci]
	load.64*    %r4797 <- 0[ci]
	load.64*    %r4798 <- 8[%r4797]
	load.32     %r4799 <- 8[%r4798]
	seteq.32    %r4800 <- %r4799, $6
	cbr         %r4800, .L1058, .L1056

.L1058:
	load.64*    %r4801 <- 0[ci]
	load.64*    %r4802 <- 8[%r4801]
	load.64*    %r4803 <- 0[%r4802]
	load.8      %r4804 <- 10[%r4803]
	cbr         %r4804, .L1056, .L1055

.L1055:
	load.64*    %r4805 <- 0[ci]
	load.64*    %r4806 <- 8[%r4805]
	load.64*    %r4807 <- 0[%r4806]
	load.64*    %r4808 <- 32[%r4807]
	phisrc.64*  %phi165 <- %r4808
	br          .L1057

.L1056:
	phisrc.64*  %phi166 <- $0
	br          .L1057

.L1057:
	phi.64*     %r4809 <- %phi165, %phi166
	phisrc.64*  %phi167(return) <- %r4809
	br          .L1054

.L1054:
	phi.64*     %r4810 <- %phi167(return)
	ret.64*     %r4809


funcinfo:
.L1059:
	<entry-point>
	store.64*   %arg1 -> 0[ar]
	store.64*   %arg2 -> 0[cl]
	load.64*    %r4811 <- 0[cl]
	load.8      %r4812 <- 10[%r4811]
	cbr         %r4812, .L1060, .L1061

.L1060:
	symaddr.64* %r4813 <- <anon symbol:0x1ba8e80>
	load.64*    %r4814 <- 0[ar]
	store.64*   %r4813 -> 32[%r4814]
	load.64*    %r4815 <- 0[ar]
	store.32    $0xffffffff -> 48[%r4815]
	load.64*    %r4816 <- 0[ar]
	store.32    $0xffffffff -> 52[%r4816]
	symaddr.64* %r4817 <- <anon symbol:0x1ba9790>
	load.64*    %r4818 <- 0[ar]
	store.64*   %r4817 -> 24[%r4818]
	br          .L1062

.L1061:
	load.64*    %r4819 <- 0[cl]
	load.64*    %r4820 <- 32[%r4819]
	load.64*    %r4821 <- 64[%r4820]
	add.64*     %r4822 <- %r4821, $24
	ptrcast.64* %r4823 <- (64) %r4822
	load.64*    %r4824 <- 0[ar]
	store.64*   %r4823 -> 32[%r4824]
	load.64*    %r4825 <- 0[cl]
	load.64*    %r4826 <- 32[%r4825]
	load.32     %r4827 <- 96[%r4826]
	load.64*    %r4828 <- 0[ar]
	store.32    %r4827 -> 48[%r4828]
	load.64*    %r4829 <- 0[cl]
	load.64*    %r4830 <- 32[%r4829]
	load.32     %r4831 <- 100[%r4830]
	load.64*    %r4832 <- 0[ar]
	store.32    %r4831 -> 52[%r4832]
	symaddr.64* %r4833 <- <anon symbol:0x1bab008>
	symaddr.64* %r4834 <- <anon symbol:0x1baac68>
	ptrcast.64* %r4835 <- (64) %r4834
	load.64*    %r4836 <- 0[ar]
	load.32     %r4837 <- 48[%r4836]
	seteq.32    %r4838 <- %r4837, $0
	select.64*  %r4839 <- %r4838, %r4833, %r4835
	load.64*    %r4840 <- 0[ar]
	store.64*   %r4839 -> 24[%r4840]
	br          .L1062

.L1062:
	load.64*    %r4841 <- 0[ar]
	add.64*     %r4842 <- %r4841, $56
	load.64*    %r4843 <- 0[ar]
	load.64*    %r4844 <- 32[%r4843]
	push.64*    %r4842
	push.64*    %r4844
	push.64     $60
	call        luaO_chunkid
	br          .L1063

.L1063:
	ret


info_tailcall:
.L1064:
	<entry-point>
	store.64*   %arg1 -> 0[ar]
	symaddr.64* %r4845 <- <anon symbol:0x1babcb8>
	load.64*    %r4846 <- 0[ar]
	store.64*   %r4845 -> 16[%r4846]
	load.64*    %r4847 <- 0[ar]
	store.64*   %r4845 -> 8[%r4847]
	symaddr.64* %r4848 <- <anon symbol:0x1bac228>
	load.64*    %r4849 <- 0[ar]
	store.64*   %r4848 -> 24[%r4849]
	load.64*    %r4850 <- 0[ar]
	store.32    $0xffffffff -> 40[%r4850]
	load.64*    %r4851 <- 0[ar]
	store.32    $0xffffffff -> 48[%r4851]
	load.64*    %r4852 <- 0[ar]
	store.32    $0xffffffff -> 52[%r4852]
	symaddr.64* %r4853 <- <anon symbol:0x1bacd08>
	load.64*    %r4854 <- 0[ar]
	store.64*   %r4853 -> 32[%r4854]
	load.64*    %r4855 <- 0[ar]
	add.64*     %r4856 <- %r4855, $56
	load.64*    %r4857 <- 0[ar]
	load.64*    %r4858 <- 32[%r4857]
	push.64*    %r4856
	push.64*    %r4858
	push.64     $60
	call        luaO_chunkid
	load.64*    %r4859 <- 0[ar]
	store.32    $0 -> 44[%r4859]
	br          .L1065

.L1065:
	ret


collectvalidlines:
.L1066:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r4860 <- 0[f]
	seteq.32    %r4861 <- %r4860, $0
	cbr         %r4861, .L1067, .L1069

.L1069:
	load.64*    %r4862 <- 0[f]
	load.8      %r4863 <- 10[%r4862]
	cbr         %r4863, .L1067, .L1068

.L1067:
	load.64*    %r4864 <- 0[L]
	load.64*    %r4865 <- 16[%r4864]
	store.32    $0 -> 8[%r4865]
	br          .L1070

.L1068:
	load.64*    %r4866 <- 0[L]
	push.64*    %r4866
	push.32     $0
	push.32     $0
	call.64*    %r4867 <- luaH_new
	store.64*   %r4867 -> 0[t]
	load.64*    %r4868 <- 0[f]
	load.64*    %r4869 <- 32[%r4868]
	load.64*    %r4870 <- 40[%r4869]
	store.64*   %r4870 -> 0[lineinfo]
	store.32    $0 -> 0[i]
	br          .L1074

.L1074:
	load.32     %r4871 <- 0[i]
	load.64*    %r4872 <- 0[f]
	load.64*    %r4873 <- 32[%r4872]
	load.32     %r4874 <- 84[%r4873]
	setlt.32    %r4875 <- %r4871, %r4874
	cbr         %r4875, .L1071, .L1073

.L1071:
	load.64*    %r4876 <- 0[L]
	load.64*    %r4877 <- 0[t]
	load.64*    %r4878 <- 0[lineinfo]
	load.32     %r4879 <- 0[i]
	scast.64    %r4880 <- (32) %r4879
	muls.64     %r4881 <- %r4880, $4
	add.64*     %r4882 <- %r4878, %r4881
	load.32     %r4883 <- 0[%r4882]
	push.64*    %r4876
	push.64*    %r4877
	push.32     %r4883
	call.64*    %r4884 <- luaH_setnum
	store.64*   %r4884 -> 0[i_o]
	load.64*    %r4885 <- 0[i_o]
	store.32    $1 -> 0[%r4885]
	load.64*    %r4886 <- 0[i_o]
	store.32    $1 -> 8[%r4886]
	br          .L1072

.L1072:
	load.32     %r4887 <- 0[i]
	add.32      %r4888 <- %r4887, $1
	store.32    %r4888 -> 0[i]
	br          .L1074

.L1073:
	load.64*    %r4889 <- 0[L]
	load.64*    %r4890 <- 16[%r4889]
	store.64*   %r4890 -> 0[i_o]
	load.64*    %r4891 <- 0[t]
	ptrcast.64* %r4892 <- (64) %r4891
	load.64*    %r4893 <- 0[i_o]
	store.64*   %r4892 -> 0[%r4893]
	load.64*    %r4894 <- 0[i_o]
	store.32    $5 -> 8[%r4894]
	br          .L1070

.L1070:
	load.64*    %r4895 <- 0[L]
	load.64*    %r4896 <- 56[%r4895]
	ptrcast.64* %r4897 <- (64) %r4896
	load.64*    %r4898 <- 0[L]
	load.64*    %r4899 <- 16[%r4898]
	ptrcast.64* %r4900 <- (64) %r4899
	sub.64      %r4901 <- %r4897, %r4900
	setle.32    %r4902 <- %r4901, $16
	cbr         %r4902, .L1075, .L1076

.L1075:
	load.64*    %r4903 <- 0[L]
	push.64*    %r4903
	push.32     $1
	call        luaD_growstack
	br          .L1077

.L1076:
	br          .L1077

.L1077:
	load.64*    %r4904 <- 0[L]
	load.64*    %r4905 <- 16[%r4904]
	add.64*     %r4906 <- %r4905, $16
	store.64*   %r4906 -> 16[%r4904]
	br          .L1078

.L1078:
	ret


auxgetinfo:
.L1079:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.64*   %arg3 -> 0[ar]
	store.64*   %arg4 -> 0[f]
	store.64*   %arg5 -> 0[ci]
	store.32    $1 -> 0[status]
	load.64*    %r4907 <- 0[f]
	seteq.32    %r4908 <- %r4907, $0
	cbr         %r4908, .L1080, .L1081

.L1080:
	load.64*    %r4909 <- 0[ar]
	push.64*    %r4909
	call        info_tailcall
	load.32     %r4910 <- 0[status]
	phisrc.32   %phi168(return) <- %r4910
	br          .L1082

.L1081:
	br          .L1086

.L1086:
	load.64*    %r4912 <- 0[what]
	load.8      %r4913 <- 0[%r4912]
	cbr         %r4913, .L1083, .L1085

.L1083:
	load.64*    %r4914 <- 0[what]
	load.8      %r4915 <- 0[%r4914]
	switch.8    %r4915, 76 -> .L1092, 83 -> .L1088, 102 -> .L1093, 108 -> .L1089, 110 -> .L1091, 117 -> .L1090, default -> .L1094

.L1088:
	load.64*    %r4916 <- 0[ar]
	load.64*    %r4917 <- 0[f]
	push.64*    %r4916
	push.64*    %r4917
	call        funcinfo
	br          .L1087

.L1089:
	load.64*    %r4918 <- 0[ci]
	cbr         %r4918, .L1095, .L1096

.L1095:
	load.64*    %r4919 <- 0[L]
	load.64*    %r4920 <- 0[ci]
	push.64*    %r4919
	push.64*    %r4920
	call.32     %r4921 <- currentline
	phisrc.32   %phi169 <- %r4921
	br          .L1097

.L1096:
	phisrc.32   %phi170 <- $0xffffffff
	br          .L1097

.L1097:
	phi.32      %r4922 <- %phi169, %phi170
	load.64*    %r4923 <- 0[ar]
	store.32    %r4922 -> 40[%r4923]
	br          .L1087

.L1090:
	load.64*    %r4924 <- 0[f]
	load.8      %r4925 <- 11[%r4924]
	cast.32     %r4926 <- (8) %r4925
	load.64*    %r4927 <- 0[ar]
	store.32    %r4926 -> 44[%r4927]
	br          .L1087

.L1091:
	load.64*    %r4928 <- 0[ci]
	select.64*  %r4929 <- %r4928, $0, $0
	ptrcast.64* %r4930 <- (64) %r4929
	load.64*    %r4931 <- 0[ar]
	store.64*   %r4930 -> 16[%r4931]
	load.64*    %r4932 <- 0[ar]
	load.64*    %r4933 <- 16[%r4932]
	seteq.32    %r4934 <- %r4933, $0
	cbr         %r4934, .L1098, .L1099

.L1098:
	symaddr.64* %r4935 <- <anon symbol:0x1baf888>
	load.64*    %r4936 <- 0[ar]
	store.64*   %r4935 -> 16[%r4936]
	load.64*    %r4937 <- 0[ar]
	store.64*   $0 -> 8[%r4937]
	br          .L1099

.L1099:
	br          .L1087

.L1092:
	br          .L1093

.L1093:
	br          .L1087

.L1094:
	store.32    $0 -> 0[status]
	br          .L1087

.L1087:
	br          .L1084

.L1084:
	load.64*    %r4938 <- 0[what]
	add.64*     %r4939 <- %r4938, $1
	store.64*   %r4939 -> 0[what]
	br          .L1086

.L1085:
	load.32     %r4940 <- 0[status]
	phisrc.32   %phi171(return) <- %r4940
	br          .L1082

.L1082:
	phi.32      %r4911 <- %phi168(return), %phi171(return)
	ret.32      %r4911


lua_getinfo:
.L1100:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.64*   %arg3 -> 0[ar]
	store.64*   $0 -> 0[f]
	store.64*   $0 -> 0[ci]
	load.64*    %r4941 <- 0[what]
	load.8      %r4942 <- 0[%r4941]
	scast.32    %r4943 <- (8) %r4942
	seteq.32    %r4944 <- %r4943, $62
	cbr         %r4944, .L1101, .L1102

.L1101:
	load.64*    %r4945 <- 0[L]
	load.64*    %r4946 <- 16[%r4945]
	sub.64*     %r4947 <- %r4946, $16
	store.64*   %r4947 -> 0[func]
	load.64*    %r4948 <- 0[L]
	load.64*    %r4949 <- 0[what]
	add.64*     %r4950 <- %r4949, $1
	store.64*   %r4950 -> 0[what]
	load.64*    %r4951 <- 0[func]
	load.64*    %r4952 <- 0[%r4951]
	add.64*     %r4953 <- %r4952, $0
	store.64*   %r4953 -> 0[f]
	load.64*    %r4954 <- 0[L]
	load.64*    %r4955 <- 16[%r4954]
	sub.64*     %r4956 <- %r4955, $16
	store.64*   %r4956 -> 16[%r4954]
	br          .L1103

.L1102:
	load.64*    %r4957 <- 0[ar]
	load.32     %r4958 <- 116[%r4957]
	setne.32    %r4959 <- %r4958, $0
	cbr         %r4959, .L1104, .L1105

.L1104:
	load.64*    %r4960 <- 0[L]
	load.64*    %r4961 <- 80[%r4960]
	load.64*    %r4962 <- 0[ar]
	load.32     %r4963 <- 116[%r4962]
	scast.64    %r4964 <- (32) %r4963
	muls.64     %r4965 <- %r4964, $40
	add.64*     %r4966 <- %r4961, %r4965
	store.64*   %r4966 -> 0[ci]
	load.64*    %r4967 <- 0[ci]
	load.64*    %r4968 <- 8[%r4967]
	load.64*    %r4969 <- 0[%r4968]
	add.64*     %r4970 <- %r4969, $0
	store.64*   %r4970 -> 0[f]
	br          .L1105

.L1105:
	br          .L1103

.L1103:
	load.64*    %r4971 <- 0[L]
	load.64*    %r4972 <- 0[what]
	load.64*    %r4973 <- 0[ar]
	load.64*    %r4974 <- 0[f]
	load.64*    %r4975 <- 0[ci]
	push.64*    %r4971
	push.64*    %r4972
	push.64*    %r4973
	push.64*    %r4974
	push.64*    %r4975
	call.32     %r4976 <- auxgetinfo
	store.32    %r4976 -> 0[status]
	load.64*    %r4977 <- 0[what]
	push.64*    %r4977
	push.32     $102
	call.64*    %r4978 <- strchr
	cbr         %r4978, .L1106, .L1107

.L1106:
	load.64*    %r4979 <- 0[f]
	seteq.32    %r4980 <- %r4979, $0
	cbr         %r4980, .L1108, .L1109

.L1108:
	load.64*    %r4981 <- 0[L]
	load.64*    %r4982 <- 16[%r4981]
	store.32    $0 -> 8[%r4982]
	br          .L1110

.L1109:
	load.64*    %r4983 <- 0[L]
	load.64*    %r4984 <- 16[%r4983]
	store.64*   %r4984 -> 0[i_o]
	load.64*    %r4985 <- 0[f]
	ptrcast.64* %r4986 <- (64) %r4985
	load.64*    %r4987 <- 0[i_o]
	store.64*   %r4986 -> 0[%r4987]
	load.64*    %r4988 <- 0[i_o]
	store.32    $6 -> 8[%r4988]
	br          .L1110

.L1110:
	load.64*    %r4989 <- 0[L]
	load.64*    %r4990 <- 56[%r4989]
	ptrcast.64* %r4991 <- (64) %r4990
	load.64*    %r4992 <- 0[L]
	load.64*    %r4993 <- 16[%r4992]
	ptrcast.64* %r4994 <- (64) %r4993
	sub.64      %r4995 <- %r4991, %r4994
	setle.32    %r4996 <- %r4995, $16
	cbr         %r4996, .L1111, .L1112

.L1111:
	load.64*    %r4997 <- 0[L]
	push.64*    %r4997
	push.32     $1
	call        luaD_growstack
	br          .L1113

.L1112:
	br          .L1113

.L1113:
	load.64*    %r4998 <- 0[L]
	load.64*    %r4999 <- 16[%r4998]
	add.64*     %r5000 <- %r4999, $16
	store.64*   %r5000 -> 16[%r4998]
	br          .L1107

.L1107:
	load.64*    %r5001 <- 0[what]
	push.64*    %r5001
	push.32     $76
	call.64*    %r5002 <- strchr
	cbr         %r5002, .L1114, .L1115

.L1114:
	load.64*    %r5003 <- 0[L]
	load.64*    %r5004 <- 0[f]
	push.64*    %r5003
	push.64*    %r5004
	call        collectvalidlines
	br          .L1115

.L1115:
	load.32     %r5005 <- 0[status]
	phisrc.32   %phi172(return) <- %r5005
	br          .L1116

.L1116:
	phi.32      %r5006 <- %phi172(return)
	ret.32      %r5005


isinstack:
.L1117:
	<entry-point>
	store.64*   %arg1 -> 0[ci]
	store.64*   %arg2 -> 0[o]
	load.64*    %r5007 <- 0[ci]
	load.64*    %r5008 <- 0[%r5007]
	store.64*   %r5008 -> 0[p]
	br          .L1121

.L1121:
	load.64*    %r5009 <- 0[p]
	load.64*    %r5010 <- 0[ci]
	load.64*    %r5011 <- 16[%r5010]
	setb.32     %r5012 <- %r5009, %r5011
	cbr         %r5012, .L1118, .L1120

.L1118:
	load.64*    %r5013 <- 0[o]
	load.64*    %r5014 <- 0[p]
	seteq.32    %r5015 <- %r5013, %r5014
	cbr         %r5015, .L1122, .L1123

.L1122:
	phisrc.32   %phi173(return) <- $1
	br          .L1124

.L1123:
	br          .L1119

.L1119:
	load.64*    %r5017 <- 0[p]
	add.64*     %r5018 <- %r5017, $16
	store.64*   %r5018 -> 0[p]
	br          .L1121

.L1120:
	phisrc.32   %phi174(return) <- $0
	br          .L1124

.L1124:
	phi.32      %r5016 <- %phi173(return), %phi174(return)
	ret.32      %r5016


luaG_typeerror:
.L1125:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.64*   %arg3 -> 0[op]
	store.64*   $0 -> 0[name]
	symaddr.64* %r5019 <- luaT_typenames
	load.64*    %r5020 <- 0[o]
	load.32     %r5021 <- 8[%r5020]
	scast.64    %r5022 <- (32) %r5021
	muls.64     %r5023 <- %r5022, $8
	add.64*     %r5024 <- %r5019, %r5023
	load.64*    %r5025 <- 0[%r5024]
	store.64*   %r5025 -> 0[t]
	load.64*    %r5026 <- 0[L]
	load.64*    %r5027 <- 40[%r5026]
	load.64*    %r5028 <- 0[o]
	push.64*    %r5027
	push.64*    %r5028
	call.32     %r5029 <- isinstack
	select.64*  %r5030 <- %r5029, $0, $0
	ptrcast.64* %r5031 <- (64) %r5030
	store.64*   %r5031 -> 0[kind]
	load.64*    %r5032 <- 0[kind]
	cbr         %r5032, .L1126, .L1127

.L1126:
	load.64*    %r5033 <- 0[L]
	symaddr.64* %r5034 <- <anon symbol:0x1bfab38>
	load.64*    %r5035 <- 0[op]
	load.64*    %r5036 <- 0[kind]
	load.64*    %r5037 <- 0[t]
	push.64*    %r5033
	push.64*    %r5034
	push.64*    %r5035
	push.64*    %r5036
	push.64*    $0
	push.64*    %r5037
	call        luaG_runerror
	br          .L1128

.L1127:
	load.64*    %r5038 <- 0[L]
	symaddr.64* %r5039 <- <anon symbol:0x1bfaed8>
	load.64*    %r5040 <- 0[op]
	load.64*    %r5041 <- 0[t]
	push.64*    %r5038
	push.64*    %r5039
	push.64*    %r5040
	push.64*    %r5041
	call        luaG_runerror
	br          .L1128

.L1128:
	ret


luaG_concaterror:
.L1129:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	load.64*    %r5042 <- 0[p1]
	load.32     %r5043 <- 8[%r5042]
	seteq.32    %r5044 <- %r5043, $4
	cbr         %r5044, .L1130, .L1132

.L1132:
	load.64*    %r5045 <- 0[p1]
	load.32     %r5046 <- 8[%r5045]
	seteq.32    %r5047 <- %r5046, $3
	cbr         %r5047, .L1130, .L1131

.L1130:
	load.64*    %r5048 <- 0[p2]
	store.64*   %r5048 -> 0[p1]
	br          .L1131

.L1131:
	load.64*    %r5049 <- 0[L]
	load.64*    %r5050 <- 0[p1]
	symaddr.64* %r5051 <- <anon symbol:0x1bb2198>
	push.64*    %r5049
	push.64*    %r5050
	push.64*    %r5051
	call        luaG_typeerror
	br          .L1133

.L1133:
	ret


luaG_aritherror:
.L1134:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	load.64*    %r5052 <- 0[p1]
	symaddr.64* %r5053 <- temp
	push.64*    %r5052
	push.64*    %r5053
	call.64*    %r5054 <- luaV_tonumber
	seteq.32    %r5055 <- %r5054, $0
	cbr         %r5055, .L1135, .L1136

.L1135:
	load.64*    %r5056 <- 0[p1]
	store.64*   %r5056 -> 0[p2]
	br          .L1136

.L1136:
	load.64*    %r5057 <- 0[L]
	load.64*    %r5058 <- 0[p2]
	symaddr.64* %r5059 <- <anon symbol:0x1bb2708>
	push.64*    %r5057
	push.64*    %r5058
	push.64*    %r5059
	call        luaG_typeerror
	br          .L1137

.L1137:
	ret


luaG_ordererror:
.L1138:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	symaddr.64* %r5060 <- luaT_typenames
	load.64*    %r5061 <- 0[p1]
	load.32     %r5062 <- 8[%r5061]
	scast.64    %r5063 <- (32) %r5062
	muls.64     %r5064 <- %r5063, $8
	add.64*     %r5065 <- %r5060, %r5064
	load.64*    %r5066 <- 0[%r5065]
	store.64*   %r5066 -> 0[t1]
	symaddr.64* %r5067 <- luaT_typenames
	load.64*    %r5068 <- 0[p2]
	load.32     %r5069 <- 8[%r5068]
	scast.64    %r5070 <- (32) %r5069
	muls.64     %r5071 <- %r5070, $8
	add.64*     %r5072 <- %r5067, %r5071
	load.64*    %r5073 <- 0[%r5072]
	store.64*   %r5073 -> 0[t2]
	load.64*    %r5074 <- 0[t1]
	load.8      %r5075 <- 2[%r5074]
	scast.32    %r5076 <- (8) %r5075
	load.64*    %r5077 <- 0[t2]
	load.8      %r5078 <- 2[%r5077]
	scast.32    %r5079 <- (8) %r5078
	seteq.32    %r5080 <- %r5076, %r5079
	cbr         %r5080, .L1139, .L1140

.L1139:
	load.64*    %r5081 <- 0[L]
	symaddr.64* %r5082 <- <anon symbol:0x1bb3588>
	load.64*    %r5083 <- 0[t1]
	push.64*    %r5081
	push.64*    %r5082
	push.64*    %r5083
	call        luaG_runerror
	br          .L1141

.L1140:
	load.64*    %r5084 <- 0[L]
	symaddr.64* %r5085 <- <anon symbol:0x1bb3928>
	load.64*    %r5086 <- 0[t1]
	load.64*    %r5087 <- 0[t2]
	push.64*    %r5084
	push.64*    %r5085
	push.64*    %r5086
	push.64*    %r5087
	call        luaG_runerror
	br          .L1141

.L1141:
	phisrc.32   %phi175(return) <- $0
	br          .L1142

.L1142:
	phi.32      %r5088 <- %phi175(return)
	ret.32      $0


addinfo:
.L1143:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[msg]
	load.64*    %r5089 <- 0[L]
	load.64*    %r5090 <- 40[%r5089]
	store.64*   %r5090 -> 0[ci]
	load.64*    %r5091 <- 0[ci]
	load.64*    %r5092 <- 8[%r5091]
	load.32     %r5093 <- 8[%r5092]
	seteq.32    %r5094 <- %r5093, $6
	cbr         %r5094, .L1146, .L1145

.L1146:
	load.64*    %r5095 <- 0[ci]
	load.64*    %r5096 <- 8[%r5095]
	load.64*    %r5097 <- 0[%r5096]
	load.8      %r5098 <- 10[%r5097]
	cbr         %r5098, .L1145, .L1144

.L1144:
	load.64*    %r5099 <- 0[L]
	load.64*    %r5100 <- 0[ci]
	push.64*    %r5099
	push.64*    %r5100
	call.32     %r5101 <- currentline
	store.32    %r5101 -> 0[line]
	symaddr.64* %r5102 <- buff
	load.64*    %r5103 <- 0[ci]
	push.64*    %r5103
	call.64*    %r5104 <- getluaproto
	load.64*    %r5105 <- 64[%r5104]
	add.64*     %r5106 <- %r5105, $24
	ptrcast.64* %r5107 <- (64) %r5106
	push.64*    %r5102
	push.64*    %r5107
	push.64     $60
	call        luaO_chunkid
	load.64*    %r5108 <- 0[L]
	symaddr.64* %r5109 <- <anon symbol:0x1bb4c30>
	symaddr.64* %r5110 <- buff
	load.32     %r5111 <- 0[line]
	load.64*    %r5112 <- 0[msg]
	push.64*    %r5108
	push.64*    %r5109
	push.64*    %r5110
	push.32     %r5111
	push.64*    %r5112
	call.64*    %r5113 <- luaO_pushfstring
	br          .L1145

.L1145:
	ret


luaG_errormsg:
.L1147:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r5114 <- 0[L]
	load.64     %r5115 <- 176[%r5114]
	setne.32    %r5116 <- %r5115, $0
	cbr         %r5116, .L1148, .L1149

.L1148:
	load.64*    %r5117 <- 0[L]
	load.64*    %r5118 <- 64[%r5117]
	ptrcast.64* %r5119 <- (64) %r5118
	load.64*    %r5120 <- 0[L]
	load.64     %r5121 <- 176[%r5120]
	add.64*     %r5122 <- %r5119, %r5121
	ptrcast.64* %r5123 <- (64) %r5122
	store.64*   %r5123 -> 0[errfunc]
	load.64*    %r5124 <- 0[errfunc]
	load.32     %r5125 <- 8[%r5124]
	seteq.32    %r5126 <- %r5125, $6
	cbr         %r5126, .L1151, .L1150

.L1150:
	load.64*    %r5127 <- 0[L]
	push.64*    %r5127
	push.32     $5
	call        luaD_throw
	br          .L1151

.L1151:
	load.64*    %r5128 <- 0[L]
	load.64*    %r5129 <- 16[%r5128]
	sub.64*     %r5130 <- %r5129, $16
	store.64*   %r5130 -> 0[o2]
	load.64*    %r5131 <- 0[L]
	load.64*    %r5132 <- 16[%r5131]
	store.64*   %r5132 -> 0[o1]
	load.64*    %r5133 <- 0[o2]
	load.f64    %r5134 <- 0[%r5133]
	fpcast.f64  %r5135 <- (64) %r5134
	load.64*    %r5136 <- 0[o1]
	store.f64   %r5135 -> 0[%r5136]
	load.64*    %r5137 <- 0[o2]
	load.32     %r5138 <- 8[%r5137]
	scast.32    %r5139 <- (32) %r5138
	load.64*    %r5140 <- 0[o1]
	store.32    %r5139 -> 8[%r5140]
	load.64*    %r5141 <- 0[errfunc]
	store.64*   %r5141 -> 0[o2]
	load.64*    %r5142 <- 0[L]
	load.64*    %r5143 <- 16[%r5142]
	sub.64*     %r5144 <- %r5143, $16
	store.64*   %r5144 -> 0[o1]
	load.64*    %r5145 <- 0[o2]
	load.f64    %r5146 <- 0[%r5145]
	fpcast.f64  %r5147 <- (64) %r5146
	load.64*    %r5148 <- 0[o1]
	store.f64   %r5147 -> 0[%r5148]
	load.64*    %r5149 <- 0[o2]
	load.32     %r5150 <- 8[%r5149]
	scast.32    %r5151 <- (32) %r5150
	load.64*    %r5152 <- 0[o1]
	store.32    %r5151 -> 8[%r5152]
	load.64*    %r5153 <- 0[L]
	load.64*    %r5154 <- 56[%r5153]
	ptrcast.64* %r5155 <- (64) %r5154
	load.64*    %r5156 <- 0[L]
	load.64*    %r5157 <- 16[%r5156]
	ptrcast.64* %r5158 <- (64) %r5157
	sub.64      %r5159 <- %r5155, %r5158
	setle.32    %r5160 <- %r5159, $16
	cbr         %r5160, .L1152, .L1153

.L1152:
	load.64*    %r5161 <- 0[L]
	push.64*    %r5161
	push.32     $1
	call        luaD_growstack
	br          .L1154

.L1153:
	br          .L1154

.L1154:
	load.64*    %r5162 <- 0[L]
	load.64*    %r5163 <- 16[%r5162]
	add.64*     %r5164 <- %r5163, $16
	store.64*   %r5164 -> 16[%r5162]
	load.64*    %r5165 <- 0[L]
	load.64*    %r5166 <- 0[L]
	load.64*    %r5167 <- 16[%r5166]
	sub.64*     %r5168 <- %r5167, $32
	push.64*    %r5165
	push.64*    %r5168
	push.32     $1
	call        luaD_call
	br          .L1149

.L1149:
	load.64*    %r5169 <- 0[L]
	push.64*    %r5169
	push.32     $2
	call        luaD_throw
	br          .L1155

.L1155:
	ret


luaZ_fill:
.L1156:
	<entry-point>
	store.64*   %arg1 -> 0[z]
	load.64*    %r5170 <- 0[z]
	load.64*    %r5171 <- 32[%r5170]
	store.64*   %r5171 -> 0[L]
	load.64*    %r5172 <- 0[L]
	load.64*    %r5173 <- 0[z]
	load.64*    %r5174 <- 24[%r5173]
	symaddr.64* %r5175 <- size
	push.64*    %r5172
	push.64*    %r5174
	push.64*    %r5175
	load.64*    %r5176 <- 0[z]
	load.64*    %r5177 <- 16[%r5176]
	call.64*    %r5178 <- %r5177
	store.64*   %r5178 -> 0[buff]
	load.64*    %r5179 <- 0[buff]
	seteq.32    %r5180 <- %r5179, $0
	setne.1     %r5181 <- %r5180, $0
	load.64     %r5182 <- 0[size]
	seteq.32    %r5183 <- %r5182, $0
	setne.1     %r5184 <- %r5183, $0
	or-bool.1   %r5185 <- %r5181, %r5184
	cast.32     %r5186 <- (1) %r5185
	cbr         %r5186, .L1157, .L1158

.L1157:
	phisrc.32   %phi176(return) <- $0xffffffff
	br          .L1159

.L1158:
	load.64     %r5188 <- 0[size]
	sub.64      %r5189 <- %r5188, $1
	load.64*    %r5190 <- 0[z]
	store.64    %r5189 -> 0[%r5190]
	load.64*    %r5191 <- 0[buff]
	load.64*    %r5192 <- 0[z]
	store.64*   %r5191 -> 8[%r5192]
	load.64*    %r5193 <- 0[z]
	load.64*    %r5194 <- 8[%r5193]
	add.64*     %r5195 <- %r5194, $1
	store.64*   %r5195 -> 8[%r5193]
	load.8      %r5196 <- 0[%r5194]
	scast.8     %r5197 <- (8) %r5196
	cast.32     %r5198 <- (8) %r5197
	phisrc.32   %phi177(return) <- %r5198
	br          .L1159

.L1159:
	phi.32      %r5187 <- %phi176(return), %phi177(return)
	ret.32      %r5187


luaZ_init:
.L1160:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[reader]
	store.64*   %arg4 -> 0[data]
	load.64*    %r5199 <- 0[L]
	load.64*    %r5200 <- 0[z]
	store.64*   %r5199 -> 32[%r5200]
	load.64*    %r5201 <- 0[reader]
	load.64*    %r5202 <- 0[z]
	store.64*   %r5201 -> 16[%r5202]
	load.64*    %r5203 <- 0[data]
	load.64*    %r5204 <- 0[z]
	store.64*   %r5203 -> 24[%r5204]
	load.64*    %r5205 <- 0[z]
	store.64    $0 -> 0[%r5205]
	load.64*    %r5206 <- 0[z]
	store.64*   $0 -> 8[%r5206]
	br          .L1161

.L1161:
	ret


luaZ_openspace:
.L1162:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[buff]
	store.64    %arg3 -> 0[n]
	load.64     %r5207 <- 0[n]
	load.64*    %r5208 <- 0[buff]
	load.64     %r5209 <- 16[%r5208]
	seta.32     %r5210 <- %r5207, %r5209
	cbr         %r5210, .L1163, .L1164

.L1163:
	load.64     %r5211 <- 0[n]
	setb.32     %r5212 <- %r5211, $32
	cbr         %r5212, .L1165, .L1166

.L1165:
	store.64    $32 -> 0[n]
	br          .L1166

.L1166:
	load.64     %r5213 <- 0[n]
	add.64      %r5214 <- %r5213, $1
	cast.64     %r5215 <- (64) %r5214
	setbe.32    %r5216 <- %r5215, $-3
	cbr         %r5216, .L1167, .L1168

.L1167:
	load.64*    %r5217 <- 0[L]
	load.64*    %r5218 <- 0[buff]
	load.64*    %r5219 <- 0[%r5218]
	cast.64*    %r5220 <- (64) %r5219
	load.64*    %r5221 <- 0[buff]
	load.64     %r5222 <- 16[%r5221]
	mulu.64     %r5223 <- %r5222, $1
	load.64     %r5224 <- 0[n]
	mulu.64     %r5225 <- %r5224, $1
	push.64*    %r5217
	push.64*    %r5220
	push.64     %r5223
	push.64     %r5225
	call.64*    %r5226 <- luaM_realloc_
	phisrc.64*  %phi178 <- %r5226
	br          .L1169

.L1168:
	load.64*    %r5227 <- 0[L]
	push.64*    %r5227
	call.64*    %r5228 <- luaM_toobig
	cast.64*    %r5229 <- (64) %r5228
	phisrc.64*  %phi179 <- %r5229
	br          .L1169

.L1169:
	phi.64*     %r5230 <- %phi178, %phi179
	ptrcast.64* %r5231 <- (64) %r5230
	load.64*    %r5232 <- 0[buff]
	store.64*   %r5231 -> 0[%r5232]
	load.64     %r5233 <- 0[n]
	load.64*    %r5234 <- 0[buff]
	store.64    %r5233 -> 16[%r5234]
	br          .L1164

.L1164:
	load.64*    %r5235 <- 0[buff]
	load.64*    %r5236 <- 0[%r5235]
	phisrc.64*  %phi180(return) <- %r5236
	br          .L1170

.L1170:
	phi.64*     %r5237 <- %phi180(return)
	ret.64*     %r5236


save:
.L1171:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r5238 <- 0[ls]
	load.64*    %r5239 <- 72[%r5238]
	store.64*   %r5239 -> 0[b]
	load.64*    %r5240 <- 0[b]
	load.64     %r5241 <- 8[%r5240]
	add.64      %r5242 <- %r5241, $1
	load.64*    %r5243 <- 0[b]
	load.64     %r5244 <- 16[%r5243]
	seta.32     %r5245 <- %r5242, %r5244
	cbr         %r5245, .L1172, .L1173

.L1172:
	load.64*    %r5246 <- 0[b]
	load.64     %r5247 <- 16[%r5246]
	setae.32    %r5248 <- %r5247, $0x7ffffffffffffffe
	cbr         %r5248, .L1174, .L1175

.L1174:
	load.64*    %r5249 <- 0[ls]
	symaddr.64* %r5250 <- <anon symbol:0x1bb7ef0>
	push.64*    %r5249
	push.64*    %r5250
	push.32     $0
	call        luaX_lexerror
	br          .L1175

.L1175:
	load.64*    %r5251 <- 0[b]
	load.64     %r5252 <- 16[%r5251]
	mulu.64     %r5253 <- %r5252, $2
	store.64    %r5253 -> 0[newsize]
	load.64     %r5254 <- 0[newsize]
	add.64      %r5255 <- %r5254, $1
	cast.64     %r5256 <- (64) %r5255
	setbe.32    %r5257 <- %r5256, $-3
	cbr         %r5257, .L1176, .L1177

.L1176:
	load.64*    %r5258 <- 0[ls]
	load.64*    %r5259 <- 56[%r5258]
	load.64*    %r5260 <- 0[b]
	load.64*    %r5261 <- 0[%r5260]
	cast.64*    %r5262 <- (64) %r5261
	load.64*    %r5263 <- 0[b]
	load.64     %r5264 <- 16[%r5263]
	mulu.64     %r5265 <- %r5264, $1
	load.64     %r5266 <- 0[newsize]
	mulu.64     %r5267 <- %r5266, $1
	push.64*    %r5259
	push.64*    %r5262
	push.64     %r5265
	push.64     %r5267
	call.64*    %r5268 <- luaM_realloc_
	phisrc.64*  %phi181 <- %r5268
	br          .L1178

.L1177:
	load.64*    %r5269 <- 0[ls]
	load.64*    %r5270 <- 56[%r5269]
	push.64*    %r5270
	call.64*    %r5271 <- luaM_toobig
	cast.64*    %r5272 <- (64) %r5271
	phisrc.64*  %phi182 <- %r5272
	br          .L1178

.L1178:
	phi.64*     %r5273 <- %phi181, %phi182
	ptrcast.64* %r5274 <- (64) %r5273
	load.64*    %r5275 <- 0[b]
	store.64*   %r5274 -> 0[%r5275]
	load.64     %r5276 <- 0[newsize]
	load.64*    %r5277 <- 0[b]
	store.64    %r5276 -> 16[%r5277]
	br          .L1173

.L1173:
	load.32     %r5278 <- 0[c]
	scast.8     %r5279 <- (32) %r5278
	load.64*    %r5280 <- 0[b]
	load.64*    %r5281 <- 0[%r5280]
	load.64*    %r5282 <- 0[b]
	load.64     %r5283 <- 8[%r5282]
	add.64      %r5284 <- %r5283, $1
	store.64    %r5284 -> 8[%r5282]
	add.64*     %r5285 <- %r5281, %r5283
	store.8     %r5279 -> 0[%r5285]
	br          .L1179

.L1179:
	ret


luaX_init:
.L1180:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    $0 -> 0[i]
	br          .L1184

.L1184:
	load.32     %r5286 <- 0[i]
	setlt.32    %r5287 <- %r5286, $21
	cbr         %r5287, .L1181, .L1183

.L1181:
	load.64*    %r5288 <- 0[L]
	symaddr.64* %r5289 <- luaX_tokens
	load.32     %r5290 <- 0[i]
	scast.64    %r5291 <- (32) %r5290
	muls.64     %r5292 <- %r5291, $8
	add.64*     %r5293 <- %r5289, %r5292
	load.64*    %r5294 <- 0[%r5293]
	symaddr.64* %r5295 <- luaX_tokens
	load.32     %r5296 <- 0[i]
	scast.64    %r5297 <- (32) %r5296
	muls.64     %r5298 <- %r5297, $8
	add.64*     %r5299 <- %r5295, %r5298
	load.64*    %r5300 <- 0[%r5299]
	push.64*    %r5300
	call.64     %r5301 <- strlen
	push.64*    %r5288
	push.64*    %r5294
	push.64     %r5301
	call.64*    %r5302 <- luaS_newlstr
	store.64*   %r5302 -> 0[ts]
	load.64*    %r5303 <- 0[ts]
	load.8      %r5304 <- 9[%r5303]
	cast.32     %r5305 <- (8) %r5304
	or.32       %r5306 <- %r5305, $32
	scast.8     %r5307 <- (32) %r5306
	store.8     %r5307 -> 9[%r5303]
	load.32     %r5308 <- 0[i]
	add.32      %r5309 <- %r5308, $1
	scast.8     %r5310 <- (32) %r5309
	load.64*    %r5311 <- 0[ts]
	store.8     %r5310 -> 10[%r5311]
	br          .L1182

.L1182:
	load.32     %r5312 <- 0[i]
	add.32      %r5313 <- %r5312, $1
	store.32    %r5313 -> 0[i]
	br          .L1184

.L1183:
	ret


luaX_token2str:
.L1185:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.32     %r5314 <- 0[token]
	setlt.32    %r5315 <- %r5314, $257
	cbr         %r5315, .L1186, .L1187

.L1186:
	call.64*    %r5316 <- __ctype_b_loc
	load.64*    %r5317 <- 0[%r5316]
	load.32     %r5318 <- 0[token]
	scast.32    %r5319 <- (32) %r5318
	scast.64    %r5320 <- (32) %r5319
	muls.64     %r5321 <- %r5320, $2
	add.64*     %r5322 <- %r5317, %r5321
	load.16     %r5323 <- 0[%r5322]
	cast.32     %r5324 <- (16) %r5323
	and.32      %r5325 <- %r5324, $2
	cbr         %r5325, .L1189, .L1190

.L1189:
	load.64*    %r5326 <- 0[ls]
	load.64*    %r5327 <- 56[%r5326]
	symaddr.64* %r5328 <- <anon symbol:0x1bc1990>
	load.32     %r5329 <- 0[token]
	push.64*    %r5327
	push.64*    %r5328
	push.32     %r5329
	call.64*    %r5330 <- luaO_pushfstring
	phisrc.64*  %phi183 <- %r5330
	br          .L1191

.L1190:
	load.64*    %r5331 <- 0[ls]
	load.64*    %r5332 <- 56[%r5331]
	symaddr.64* %r5333 <- <anon symbol:0x1bc1420>
	load.32     %r5334 <- 0[token]
	push.64*    %r5332
	push.64*    %r5333
	push.32     %r5334
	call.64*    %r5335 <- luaO_pushfstring
	phisrc.64*  %phi184 <- %r5335
	br          .L1191

.L1191:
	phi.64*     %r5336 <- %phi183, %phi184
	phisrc.64*  %phi185(return) <- %r5336
	br          .L1188

.L1187:
	symaddr.64* %r5338 <- luaX_tokens
	load.32     %r5339 <- 0[token]
	sub.32      %r5340 <- %r5339, $257
	scast.64    %r5341 <- (32) %r5340
	muls.64     %r5342 <- %r5341, $8
	add.64*     %r5343 <- %r5338, %r5342
	load.64*    %r5344 <- 0[%r5343]
	phisrc.64*  %phi186(return) <- %r5344
	br          .L1188

.L1188:
	phi.64*     %r5337 <- %phi185(return), %phi186(return)
	ret.64*     %r5337


txtToken:
.L1193:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.32     %r5345 <- 0[token]
	switch.32   %r5345, 284 -> .L1197, 285 -> .L1195, 286 -> .L1196, default -> .L1198

.L1195:
	br          .L1196

.L1196:
	br          .L1197

.L1197:
	load.64*    %r5346 <- 0[ls]
	push.64*    %r5346
	push.32     $0
	call        save
	load.64*    %r5347 <- 0[ls]
	load.64*    %r5348 <- 72[%r5347]
	load.64*    %r5349 <- 0[%r5348]
	phisrc.64*  %phi187(return) <- %r5349
	br          .L1199

.L1198:
	load.64*    %r5351 <- 0[ls]
	load.32     %r5352 <- 0[token]
	push.64*    %r5351
	push.32     %r5352
	call.64*    %r5353 <- luaX_token2str
	phisrc.64*  %phi188(return) <- %r5353
	br          .L1199

.L1199:
	phi.64*     %r5350 <- %phi187(return), %phi188(return)
	ret.64*     %r5350


luaX_lexerror:
.L1200:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[msg]
	store.32    %arg3 -> 0[token]
	symaddr.64* %r5354 <- buff
	load.64*    %r5355 <- 0[ls]
	load.64*    %r5356 <- 80[%r5355]
	add.64*     %r5357 <- %r5356, $24
	ptrcast.64* %r5358 <- (64) %r5357
	push.64*    %r5354
	push.64*    %r5358
	push.64     $80
	call        luaO_chunkid
	load.64*    %r5359 <- 0[ls]
	load.64*    %r5360 <- 56[%r5359]
	symaddr.64* %r5361 <- <anon symbol:0x1b80c60>
	symaddr.64* %r5362 <- buff
	load.64*    %r5363 <- 0[ls]
	load.32     %r5364 <- 4[%r5363]
	load.64*    %r5365 <- 0[msg]
	push.64*    %r5360
	push.64*    %r5361
	push.64*    %r5362
	push.32     %r5364
	push.64*    %r5365
	call.64*    %r5366 <- luaO_pushfstring
	store.64*   %r5366 -> 0[msg]
	load.32     %r5367 <- 0[token]
	cbr         %r5367, .L1201, .L1202

.L1201:
	load.64*    %r5368 <- 0[ls]
	load.64*    %r5369 <- 56[%r5368]
	symaddr.64* %r5370 <- <anon symbol:0x1b81570>
	load.64*    %r5371 <- 0[msg]
	load.64*    %r5372 <- 0[ls]
	load.32     %r5373 <- 0[token]
	push.64*    %r5372
	push.32     %r5373
	call.64*    %r5374 <- txtToken
	push.64*    %r5369
	push.64*    %r5370
	push.64*    %r5371
	push.64*    %r5374
	call.64*    %r5375 <- luaO_pushfstring
	br          .L1202

.L1202:
	load.64*    %r5376 <- 0[ls]
	load.64*    %r5377 <- 56[%r5376]
	push.64*    %r5377
	push.32     $3
	call        luaD_throw
	br          .L1203

.L1203:
	ret


luaX_syntaxerror:
.L1204:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[msg]
	load.64*    %r5378 <- 0[ls]
	load.64*    %r5379 <- 0[msg]
	load.64*    %r5380 <- 0[ls]
	load.32     %r5381 <- 16[%r5380]
	push.64*    %r5378
	push.64*    %r5379
	push.32     %r5381
	call        luaX_lexerror
	br          .L1205

.L1205:
	ret


luaX_newstring:
.L1206:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	load.64*    %r5382 <- 0[ls]
	load.64*    %r5383 <- 56[%r5382]
	store.64*   %r5383 -> 0[L]
	load.64*    %r5384 <- 0[L]
	load.64*    %r5385 <- 0[str]
	load.64     %r5386 <- 0[l]
	push.64*    %r5384
	push.64*    %r5385
	push.64     %r5386
	call.64*    %r5387 <- luaS_newlstr
	store.64*   %r5387 -> 0[ts]
	load.64*    %r5388 <- 0[L]
	load.64*    %r5389 <- 0[ls]
	load.64*    %r5390 <- 48[%r5389]
	load.64*    %r5391 <- 8[%r5390]
	load.64*    %r5392 <- 0[ts]
	push.64*    %r5388
	push.64*    %r5391
	push.64*    %r5392
	call.64*    %r5393 <- luaH_setstr
	store.64*   %r5393 -> 0[o]
	load.64*    %r5394 <- 0[o]
	load.32     %r5395 <- 8[%r5394]
	seteq.32    %r5396 <- %r5395, $0
	cbr         %r5396, .L1207, .L1208

.L1207:
	load.64*    %r5397 <- 0[o]
	store.64*   %r5397 -> 0[i_o]
	load.64*    %r5398 <- 0[i_o]
	store.32    $1 -> 0[%r5398]
	load.64*    %r5399 <- 0[i_o]
	store.32    $1 -> 8[%r5399]
	load.64*    %r5400 <- 0[L]
	load.64*    %r5401 <- 32[%r5400]
	load.64     %r5402 <- 120[%r5401]
	load.64*    %r5403 <- 0[L]
	load.64*    %r5404 <- 32[%r5403]
	load.64     %r5405 <- 112[%r5404]
	setae.32    %r5406 <- %r5402, %r5405
	cbr         %r5406, .L1209, .L1210

.L1209:
	load.64*    %r5407 <- 0[L]
	push.64*    %r5407
	call        luaC_step
	br          .L1210

.L1210:
	br          .L1208

.L1208:
	load.64*    %r5408 <- 0[ts]
	phisrc.64*  %phi189(return) <- %r5408
	br          .L1211

.L1211:
	phi.64*     %r5409 <- %phi189(return)
	ret.64*     %r5408


inclinenumber:
.L1212:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r5410 <- 0[ls]
	load.32     %r5411 <- 0[%r5410]
	store.32    %r5411 -> 0[old]
	load.64*    %r5412 <- 0[ls]
	load.64*    %r5413 <- 64[%r5412]
	load.64     %r5414 <- 0[%r5413]
	sub.64      %r5415 <- %r5414, $1
	store.64    %r5415 -> 0[%r5413]
	seta.32     %r5416 <- %r5414, $0
	cbr         %r5416, .L1213, .L1214

.L1213:
	load.64*    %r5417 <- 0[ls]
	load.64*    %r5418 <- 64[%r5417]
	load.64*    %r5419 <- 8[%r5418]
	add.64*     %r5420 <- %r5419, $1
	store.64*   %r5420 -> 8[%r5418]
	load.8      %r5421 <- 0[%r5419]
	scast.8     %r5422 <- (8) %r5421
	cast.32     %r5423 <- (8) %r5422
	phisrc.32   %phi190 <- %r5423
	br          .L1215

.L1214:
	load.64*    %r5424 <- 0[ls]
	load.64*    %r5425 <- 64[%r5424]
	push.64*    %r5425
	call.32     %r5426 <- luaZ_fill
	phisrc.32   %phi191 <- %r5426
	br          .L1215

.L1215:
	phi.32      %r5427 <- %phi190, %phi191
	load.64*    %r5428 <- 0[ls]
	store.32    %r5427 -> 0[%r5428]
	load.64*    %r5429 <- 0[ls]
	load.32     %r5430 <- 0[%r5429]
	seteq.32    %r5431 <- %r5430, $10
	cbr         %r5431, .L1218, .L1219

.L1219:
	load.64*    %r5432 <- 0[ls]
	load.32     %r5433 <- 0[%r5432]
	seteq.32    %r5434 <- %r5433, $13
	cbr         %r5434, .L1218, .L1217

.L1218:
	load.64*    %r5435 <- 0[ls]
	load.32     %r5436 <- 0[%r5435]
	load.32     %r5437 <- 0[old]
	setne.32    %r5438 <- %r5436, %r5437
	cbr         %r5438, .L1216, .L1217

.L1216:
	load.64*    %r5439 <- 0[ls]
	load.64*    %r5440 <- 64[%r5439]
	load.64     %r5441 <- 0[%r5440]
	sub.64      %r5442 <- %r5441, $1
	store.64    %r5442 -> 0[%r5440]
	seta.32     %r5443 <- %r5441, $0
	cbr         %r5443, .L1220, .L1221

.L1220:
	load.64*    %r5444 <- 0[ls]
	load.64*    %r5445 <- 64[%r5444]
	load.64*    %r5446 <- 8[%r5445]
	add.64*     %r5447 <- %r5446, $1
	store.64*   %r5447 -> 8[%r5445]
	load.8      %r5448 <- 0[%r5446]
	scast.8     %r5449 <- (8) %r5448
	cast.32     %r5450 <- (8) %r5449
	phisrc.32   %phi192 <- %r5450
	br          .L1222

.L1221:
	load.64*    %r5451 <- 0[ls]
	load.64*    %r5452 <- 64[%r5451]
	push.64*    %r5452
	call.32     %r5453 <- luaZ_fill
	phisrc.32   %phi193 <- %r5453
	br          .L1222

.L1222:
	phi.32      %r5454 <- %phi192, %phi193
	load.64*    %r5455 <- 0[ls]
	store.32    %r5454 -> 0[%r5455]
	br          .L1217

.L1217:
	load.64*    %r5456 <- 0[ls]
	load.32     %r5457 <- 4[%r5456]
	add.32      %r5458 <- %r5457, $1
	store.32    %r5458 -> 4[%r5456]
	setge.32    %r5459 <- %r5458, $0x7ffffffd
	cbr         %r5459, .L1223, .L1224

.L1223:
	load.64*    %r5460 <- 0[ls]
	symaddr.64* %r5461 <- <anon symbol:0x1bc5390>
	push.64*    %r5460
	push.64*    %r5461
	call        luaX_syntaxerror
	br          .L1224

.L1224:
	ret


luaX_setinput:
.L1225:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ls]
	store.64*   %arg3 -> 0[z]
	store.64*   %arg4 -> 0[source]
	load.64*    %r5462 <- 0[ls]
	store.8     $46 -> 88[%r5462]
	load.64*    %r5463 <- 0[L]
	load.64*    %r5464 <- 0[ls]
	store.64*   %r5463 -> 56[%r5464]
	load.64*    %r5465 <- 0[ls]
	store.32    $287 -> 32[%r5465]
	load.64*    %r5466 <- 0[z]
	load.64*    %r5467 <- 0[ls]
	store.64*   %r5466 -> 64[%r5467]
	load.64*    %r5468 <- 0[ls]
	store.64*   $0 -> 48[%r5468]
	load.64*    %r5469 <- 0[ls]
	store.32    $1 -> 4[%r5469]
	load.64*    %r5470 <- 0[ls]
	store.32    $1 -> 8[%r5470]
	load.64*    %r5471 <- 0[source]
	load.64*    %r5472 <- 0[ls]
	store.64*   %r5471 -> 80[%r5472]
	load.64*    %r5473 <- 0[ls]
	load.64*    %r5474 <- 56[%r5473]
	load.64*    %r5475 <- 0[ls]
	load.64*    %r5476 <- 72[%r5475]
	load.64*    %r5477 <- 0[%r5476]
	cast.64*    %r5478 <- (64) %r5477
	load.64*    %r5479 <- 0[ls]
	load.64*    %r5480 <- 72[%r5479]
	load.64     %r5481 <- 16[%r5480]
	mulu.64     %r5482 <- %r5481, $1
	push.64*    %r5474
	push.64*    %r5478
	push.64     %r5482
	push.64     $32
	call.64*    %r5483 <- luaM_realloc_
	ptrcast.64* %r5484 <- (64) %r5483
	load.64*    %r5485 <- 0[ls]
	load.64*    %r5486 <- 72[%r5485]
	store.64*   %r5484 -> 0[%r5486]
	load.64*    %r5487 <- 0[ls]
	load.64*    %r5488 <- 72[%r5487]
	store.64    $32 -> 16[%r5488]
	load.64*    %r5489 <- 0[ls]
	load.64*    %r5490 <- 64[%r5489]
	load.64     %r5491 <- 0[%r5490]
	sub.64      %r5492 <- %r5491, $1
	store.64    %r5492 -> 0[%r5490]
	seta.32     %r5493 <- %r5491, $0
	cbr         %r5493, .L1226, .L1227

.L1226:
	load.64*    %r5494 <- 0[ls]
	load.64*    %r5495 <- 64[%r5494]
	load.64*    %r5496 <- 8[%r5495]
	add.64*     %r5497 <- %r5496, $1
	store.64*   %r5497 -> 8[%r5495]
	load.8      %r5498 <- 0[%r5496]
	scast.8     %r5499 <- (8) %r5498
	cast.32     %r5500 <- (8) %r5499
	phisrc.32   %phi194 <- %r5500
	br          .L1228

.L1227:
	load.64*    %r5501 <- 0[ls]
	load.64*    %r5502 <- 64[%r5501]
	push.64*    %r5502
	call.32     %r5503 <- luaZ_fill
	phisrc.32   %phi195 <- %r5503
	br          .L1228

.L1228:
	phi.32      %r5504 <- %phi194, %phi195
	load.64*    %r5505 <- 0[ls]
	store.32    %r5504 -> 0[%r5505]
	br          .L1229

.L1229:
	ret


check_next:
.L1230:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[set]
	load.64*    %r5506 <- 0[set]
	load.64*    %r5507 <- 0[ls]
	load.32     %r5508 <- 0[%r5507]
	push.64*    %r5506
	push.32     %r5508
	call.64*    %r5509 <- strchr
	cbr         %r5509, .L1232, .L1231

.L1231:
	phisrc.32   %phi196(return) <- $0
	br          .L1233

.L1232:
	load.64*    %r5511 <- 0[ls]
	load.64*    %r5512 <- 0[ls]
	load.32     %r5513 <- 0[%r5512]
	push.64*    %r5511
	push.32     %r5513
	call        save
	load.64*    %r5514 <- 0[ls]
	load.64*    %r5515 <- 64[%r5514]
	load.64     %r5516 <- 0[%r5515]
	sub.64      %r5517 <- %r5516, $1
	store.64    %r5517 -> 0[%r5515]
	seta.32     %r5518 <- %r5516, $0
	cbr         %r5518, .L1234, .L1235

.L1234:
	load.64*    %r5519 <- 0[ls]
	load.64*    %r5520 <- 64[%r5519]
	load.64*    %r5521 <- 8[%r5520]
	add.64*     %r5522 <- %r5521, $1
	store.64*   %r5522 -> 8[%r5520]
	load.8      %r5523 <- 0[%r5521]
	scast.8     %r5524 <- (8) %r5523
	cast.32     %r5525 <- (8) %r5524
	phisrc.32   %phi197 <- %r5525
	br          .L1236

.L1235:
	load.64*    %r5526 <- 0[ls]
	load.64*    %r5527 <- 64[%r5526]
	push.64*    %r5527
	call.32     %r5528 <- luaZ_fill
	phisrc.32   %phi198 <- %r5528
	br          .L1236

.L1236:
	phi.32      %r5529 <- %phi197, %phi198
	load.64*    %r5530 <- 0[ls]
	store.32    %r5529 -> 0[%r5530]
	phisrc.32   %phi199(return) <- $1
	br          .L1233

.L1233:
	phi.32      %r5510 <- %phi196(return), %phi199(return)
	ret.32      %r5510


buffreplace:
.L1237:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.8     %arg2 -> 0[from]
	store.8     %arg3 -> 0[to]
	load.64*    %r5531 <- 0[ls]
	load.64*    %r5532 <- 72[%r5531]
	load.64     %r5533 <- 8[%r5532]
	store.64    %r5533 -> 0[n]
	load.64*    %r5534 <- 0[ls]
	load.64*    %r5535 <- 72[%r5534]
	load.64*    %r5536 <- 0[%r5535]
	store.64*   %r5536 -> 0[p]
	br          .L1241

.L1241:
	load.64     %r5537 <- 0[n]
	sub.64      %r5538 <- %r5537, $1
	store.64    %r5538 -> 0[n]
	cbr         %r5537, .L1238, .L1240

.L1238:
	load.64*    %r5539 <- 0[p]
	load.64     %r5540 <- 0[n]
	add.64*     %r5541 <- %r5539, %r5540
	load.8      %r5542 <- 0[%r5541]
	scast.32    %r5543 <- (8) %r5542
	load.8      %r5544 <- 0[from]
	scast.32    %r5545 <- (8) %r5544
	seteq.32    %r5546 <- %r5543, %r5545
	cbr         %r5546, .L1242, .L1243

.L1242:
	load.8      %r5547 <- 0[to]
	load.64*    %r5548 <- 0[p]
	load.64     %r5549 <- 0[n]
	add.64*     %r5550 <- %r5548, %r5549
	store.8     %r5547 -> 0[%r5550]
	br          .L1243

.L1243:
	br          .L1239

.L1239:
	br          .L1241

.L1240:
	ret


read_numeral:
.L1244:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	br          .L1245

.L1245:
	load.64*    %r5551 <- 0[ls]
	load.64*    %r5552 <- 0[ls]
	load.32     %r5553 <- 0[%r5552]
	push.64*    %r5551
	push.32     %r5553
	call        save
	load.64*    %r5554 <- 0[ls]
	load.64*    %r5555 <- 64[%r5554]
	load.64     %r5556 <- 0[%r5555]
	sub.64      %r5557 <- %r5556, $1
	store.64    %r5557 -> 0[%r5555]
	seta.32     %r5558 <- %r5556, $0
	cbr         %r5558, .L1248, .L1249

.L1248:
	load.64*    %r5559 <- 0[ls]
	load.64*    %r5560 <- 64[%r5559]
	load.64*    %r5561 <- 8[%r5560]
	add.64*     %r5562 <- %r5561, $1
	store.64*   %r5562 -> 8[%r5560]
	load.8      %r5563 <- 0[%r5561]
	scast.8     %r5564 <- (8) %r5563
	cast.32     %r5565 <- (8) %r5564
	phisrc.32   %phi200 <- %r5565
	br          .L1250

.L1249:
	load.64*    %r5566 <- 0[ls]
	load.64*    %r5567 <- 64[%r5566]
	push.64*    %r5567
	call.32     %r5568 <- luaZ_fill
	phisrc.32   %phi201 <- %r5568
	br          .L1250

.L1250:
	phi.32      %r5569 <- %phi200, %phi201
	load.64*    %r5570 <- 0[ls]
	store.32    %r5569 -> 0[%r5570]
	br          .L1246

.L1246:
	call.64*    %r5571 <- __ctype_b_loc
	load.64*    %r5572 <- 0[%r5571]
	load.64*    %r5573 <- 0[ls]
	load.32     %r5574 <- 0[%r5573]
	scast.32    %r5575 <- (32) %r5574
	scast.64    %r5576 <- (32) %r5575
	muls.64     %r5577 <- %r5576, $2
	add.64*     %r5578 <- %r5572, %r5577
	load.16     %r5579 <- 0[%r5578]
	cast.32     %r5580 <- (16) %r5579
	and.32      %r5581 <- %r5580, $0x800
	cbr         %r5581, .L1245, .L1251

.L1251:
	load.64*    %r5582 <- 0[ls]
	load.32     %r5583 <- 0[%r5582]
	seteq.32    %r5584 <- %r5583, $46
	cbr         %r5584, .L1245, .L1247

.L1247:
	load.64*    %r5585 <- 0[ls]
	symaddr.64* %r5586 <- <anon symbol:0x1bd2a00>
	push.64*    %r5585
	push.64*    %r5586
	call.32     %r5587 <- check_next
	cbr         %r5587, .L1252, .L1253

.L1252:
	load.64*    %r5588 <- 0[ls]
	symaddr.64* %r5589 <- <anon symbol:0x1bd2da0>
	push.64*    %r5588
	push.64*    %r5589
	call.32     %r5590 <- check_next
	br          .L1253

.L1253:
	br          .L1257

.L1257:
	call.64*    %r5591 <- __ctype_b_loc
	load.64*    %r5592 <- 0[%r5591]
	load.64*    %r5593 <- 0[ls]
	load.32     %r5594 <- 0[%r5593]
	scast.32    %r5595 <- (32) %r5594
	scast.64    %r5596 <- (32) %r5595
	muls.64     %r5597 <- %r5596, $2
	add.64*     %r5598 <- %r5592, %r5597
	load.16     %r5599 <- 0[%r5598]
	cast.32     %r5600 <- (16) %r5599
	and.32      %r5601 <- %r5600, $8
	cbr         %r5601, .L1254, .L1258

.L1258:
	load.64*    %r5602 <- 0[ls]
	load.32     %r5603 <- 0[%r5602]
	seteq.32    %r5604 <- %r5603, $95
	cbr         %r5604, .L1254, .L1256

.L1254:
	load.64*    %r5605 <- 0[ls]
	load.64*    %r5606 <- 0[ls]
	load.32     %r5607 <- 0[%r5606]
	push.64*    %r5605
	push.32     %r5607
	call        save
	load.64*    %r5608 <- 0[ls]
	load.64*    %r5609 <- 64[%r5608]
	load.64     %r5610 <- 0[%r5609]
	sub.64      %r5611 <- %r5610, $1
	store.64    %r5611 -> 0[%r5609]
	seta.32     %r5612 <- %r5610, $0
	cbr         %r5612, .L1259, .L1260

.L1259:
	load.64*    %r5613 <- 0[ls]
	load.64*    %r5614 <- 64[%r5613]
	load.64*    %r5615 <- 8[%r5614]
	add.64*     %r5616 <- %r5615, $1
	store.64*   %r5616 -> 8[%r5614]
	load.8      %r5617 <- 0[%r5615]
	scast.8     %r5618 <- (8) %r5617
	cast.32     %r5619 <- (8) %r5618
	phisrc.32   %phi202 <- %r5619
	br          .L1261

.L1260:
	load.64*    %r5620 <- 0[ls]
	load.64*    %r5621 <- 64[%r5620]
	push.64*    %r5621
	call.32     %r5622 <- luaZ_fill
	phisrc.32   %phi203 <- %r5622
	br          .L1261

.L1261:
	phi.32      %r5623 <- %phi202, %phi203
	load.64*    %r5624 <- 0[ls]
	store.32    %r5623 -> 0[%r5624]
	br          .L1255

.L1255:
	br          .L1257

.L1256:
	load.64*    %r5625 <- 0[ls]
	push.64*    %r5625
	push.32     $0
	call        save
	load.64*    %r5626 <- 0[ls]
	load.64*    %r5627 <- 0[ls]
	load.8      %r5628 <- 88[%r5627]
	push.64*    %r5626
	push.8      $46
	push.8      %r5628
	call        buffreplace
	load.64*    %r5629 <- 0[ls]
	load.64*    %r5630 <- 72[%r5629]
	load.64*    %r5631 <- 0[%r5630]
	load.64*    %r5632 <- 0[seminfo]
	add.64*     %r5633 <- %r5632, $0
	push.64*    %r5631
	push.64*    %r5633
	call.32     %r5634 <- luaO_str2d
	cbr         %r5634, .L1263, .L1262

.L1262:
	load.64*    %r5635 <- 0[ls]
	symaddr.64* %r5636 <- <anon symbol:0x1bd4b88>
	push.64*    %r5635
	push.64*    %r5636
	push.32     $284
	call        luaX_lexerror
	br          .L1263

.L1263:
	ret


skip_sep:
.L1264:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[count]
	load.64*    %r5637 <- 0[ls]
	load.32     %r5638 <- 0[%r5637]
	store.32    %r5638 -> 0[s]
	load.64*    %r5639 <- 0[ls]
	load.64*    %r5640 <- 0[ls]
	load.32     %r5641 <- 0[%r5640]
	push.64*    %r5639
	push.32     %r5641
	call        save
	load.64*    %r5642 <- 0[ls]
	load.64*    %r5643 <- 64[%r5642]
	load.64     %r5644 <- 0[%r5643]
	sub.64      %r5645 <- %r5644, $1
	store.64    %r5645 -> 0[%r5643]
	seta.32     %r5646 <- %r5644, $0
	cbr         %r5646, .L1265, .L1266

.L1265:
	load.64*    %r5647 <- 0[ls]
	load.64*    %r5648 <- 64[%r5647]
	load.64*    %r5649 <- 8[%r5648]
	add.64*     %r5650 <- %r5649, $1
	store.64*   %r5650 -> 8[%r5648]
	load.8      %r5651 <- 0[%r5649]
	scast.8     %r5652 <- (8) %r5651
	cast.32     %r5653 <- (8) %r5652
	phisrc.32   %phi204 <- %r5653
	br          .L1267

.L1266:
	load.64*    %r5654 <- 0[ls]
	load.64*    %r5655 <- 64[%r5654]
	push.64*    %r5655
	call.32     %r5656 <- luaZ_fill
	phisrc.32   %phi205 <- %r5656
	br          .L1267

.L1267:
	phi.32      %r5657 <- %phi204, %phi205
	load.64*    %r5658 <- 0[ls]
	store.32    %r5657 -> 0[%r5658]
	br          .L1271

.L1271:
	load.64*    %r5659 <- 0[ls]
	load.32     %r5660 <- 0[%r5659]
	seteq.32    %r5661 <- %r5660, $61
	cbr         %r5661, .L1268, .L1270

.L1268:
	load.64*    %r5662 <- 0[ls]
	load.64*    %r5663 <- 0[ls]
	load.32     %r5664 <- 0[%r5663]
	push.64*    %r5662
	push.32     %r5664
	call        save
	load.64*    %r5665 <- 0[ls]
	load.64*    %r5666 <- 64[%r5665]
	load.64     %r5667 <- 0[%r5666]
	sub.64      %r5668 <- %r5667, $1
	store.64    %r5668 -> 0[%r5666]
	seta.32     %r5669 <- %r5667, $0
	cbr         %r5669, .L1272, .L1273

.L1272:
	load.64*    %r5670 <- 0[ls]
	load.64*    %r5671 <- 64[%r5670]
	load.64*    %r5672 <- 8[%r5671]
	add.64*     %r5673 <- %r5672, $1
	store.64*   %r5673 -> 8[%r5671]
	load.8      %r5674 <- 0[%r5672]
	scast.8     %r5675 <- (8) %r5674
	cast.32     %r5676 <- (8) %r5675
	phisrc.32   %phi206 <- %r5676
	br          .L1274

.L1273:
	load.64*    %r5677 <- 0[ls]
	load.64*    %r5678 <- 64[%r5677]
	push.64*    %r5678
	call.32     %r5679 <- luaZ_fill
	phisrc.32   %phi207 <- %r5679
	br          .L1274

.L1274:
	phi.32      %r5680 <- %phi206, %phi207
	load.64*    %r5681 <- 0[ls]
	store.32    %r5680 -> 0[%r5681]
	load.32     %r5682 <- 0[count]
	add.32      %r5683 <- %r5682, $1
	store.32    %r5683 -> 0[count]
	br          .L1269

.L1269:
	br          .L1271

.L1270:
	load.32     %r5684 <- 0[count]
	load.32     %r5685 <- 0[count]
	neg.32      %r5686 <- %r5685
	sub.32      %r5687 <- %r5686, $1
	load.64*    %r5688 <- 0[ls]
	load.32     %r5689 <- 0[%r5688]
	load.32     %r5690 <- 0[s]
	seteq.32    %r5691 <- %r5689, %r5690
	select.32   %r5692 <- %r5691, %r5684, %r5687
	phisrc.32   %phi208(return) <- %r5692
	br          .L1275

.L1275:
	phi.32      %r5693 <- %phi208(return)
	ret.32      %r5692


read_long_string:
.L1276:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	store.32    %arg3 -> 0[sep]
	store.32    $0 -> 0[cont]
	load.64*    %r5694 <- 0[ls]
	load.64*    %r5695 <- 0[ls]
	load.32     %r5696 <- 0[%r5695]
	push.64*    %r5694
	push.32     %r5696
	call        save
	load.64*    %r5697 <- 0[ls]
	load.64*    %r5698 <- 64[%r5697]
	load.64     %r5699 <- 0[%r5698]
	sub.64      %r5700 <- %r5699, $1
	store.64    %r5700 -> 0[%r5698]
	seta.32     %r5701 <- %r5699, $0
	cbr         %r5701, .L1277, .L1278

.L1277:
	load.64*    %r5702 <- 0[ls]
	load.64*    %r5703 <- 64[%r5702]
	load.64*    %r5704 <- 8[%r5703]
	add.64*     %r5705 <- %r5704, $1
	store.64*   %r5705 -> 8[%r5703]
	load.8      %r5706 <- 0[%r5704]
	scast.8     %r5707 <- (8) %r5706
	cast.32     %r5708 <- (8) %r5707
	phisrc.32   %phi209 <- %r5708
	br          .L1279

.L1278:
	load.64*    %r5709 <- 0[ls]
	load.64*    %r5710 <- 64[%r5709]
	push.64*    %r5710
	call.32     %r5711 <- luaZ_fill
	phisrc.32   %phi210 <- %r5711
	br          .L1279

.L1279:
	phi.32      %r5712 <- %phi209, %phi210
	load.64*    %r5713 <- 0[ls]
	store.32    %r5712 -> 0[%r5713]
	load.64*    %r5714 <- 0[ls]
	load.32     %r5715 <- 0[%r5714]
	seteq.32    %r5716 <- %r5715, $10
	cbr         %r5716, .L1280, .L1282

.L1282:
	load.64*    %r5717 <- 0[ls]
	load.32     %r5718 <- 0[%r5717]
	seteq.32    %r5719 <- %r5718, $13
	cbr         %r5719, .L1280, .L1281

.L1280:
	load.64*    %r5720 <- 0[ls]
	push.64*    %r5720
	call        inclinenumber
	br          .L1281

.L1281:
	br          .L1286

.L1286:
	br          .L1283

.L1283:
	load.64*    %r5721 <- 0[ls]
	load.32     %r5722 <- 0[%r5721]
	switch.32   %r5722, 10 -> .L1290, 13 -> .L1291, 93 -> .L1289, 4294967295 -> .L1288, default -> .L1292

.L1288:
	load.64*    %r5723 <- 0[ls]
	symaddr.64* %r5724 <- <anon symbol:0x1bd83b8>
	symaddr.64* %r5725 <- <anon symbol:0x1bd8018>
	ptrcast.64* %r5726 <- (64) %r5725
	load.64*    %r5727 <- 0[seminfo]
	select.64*  %r5728 <- %r5727, %r5724, %r5726
	push.64*    %r5723
	push.64*    %r5728
	push.32     $287
	call        luaX_lexerror
	br          .L1287

.L1289:
	load.64*    %r5729 <- 0[ls]
	push.64*    %r5729
	call.32     %r5730 <- skip_sep
	load.32     %r5731 <- 0[sep]
	seteq.32    %r5732 <- %r5730, %r5731
	cbr         %r5732, .L1293, .L1294

.L1293:
	load.64*    %r5733 <- 0[ls]
	load.64*    %r5734 <- 0[ls]
	load.32     %r5735 <- 0[%r5734]
	push.64*    %r5733
	push.32     %r5735
	call        save
	load.64*    %r5736 <- 0[ls]
	load.64*    %r5737 <- 64[%r5736]
	load.64     %r5738 <- 0[%r5737]
	sub.64      %r5739 <- %r5738, $1
	store.64    %r5739 -> 0[%r5737]
	seta.32     %r5740 <- %r5738, $0
	cbr         %r5740, .L1295, .L1296

.L1295:
	load.64*    %r5741 <- 0[ls]
	load.64*    %r5742 <- 64[%r5741]
	load.64*    %r5743 <- 8[%r5742]
	add.64*     %r5744 <- %r5743, $1
	store.64*   %r5744 -> 8[%r5742]
	load.8      %r5745 <- 0[%r5743]
	scast.8     %r5746 <- (8) %r5745
	cast.32     %r5747 <- (8) %r5746
	phisrc.32   %phi211 <- %r5747
	br          .L1297

.L1296:
	load.64*    %r5748 <- 0[ls]
	load.64*    %r5749 <- 64[%r5748]
	push.64*    %r5749
	call.32     %r5750 <- luaZ_fill
	phisrc.32   %phi212 <- %r5750
	br          .L1297

.L1297:
	phi.32      %r5751 <- %phi211, %phi212
	load.64*    %r5752 <- 0[ls]
	store.32    %r5751 -> 0[%r5752]
	br          .L1298

.L1294:
	br          .L1287

.L1290:
	br          .L1291

.L1291:
	load.64*    %r5753 <- 0[ls]
	push.64*    %r5753
	push.32     $10
	call        save
	load.64*    %r5754 <- 0[ls]
	push.64*    %r5754
	call        inclinenumber
	load.64*    %r5755 <- 0[seminfo]
	cbr         %r5755, .L1300, .L1299

.L1299:
	load.64*    %r5756 <- 0[ls]
	load.64*    %r5757 <- 72[%r5756]
	store.64    $0 -> 8[%r5757]
	br          .L1300

.L1300:
	br          .L1287

.L1292:
	load.64*    %r5758 <- 0[seminfo]
	cbr         %r5758, .L1301, .L1302

.L1301:
	load.64*    %r5759 <- 0[ls]
	load.64*    %r5760 <- 0[ls]
	load.32     %r5761 <- 0[%r5760]
	push.64*    %r5759
	push.32     %r5761
	call        save
	load.64*    %r5762 <- 0[ls]
	load.64*    %r5763 <- 64[%r5762]
	load.64     %r5764 <- 0[%r5763]
	sub.64      %r5765 <- %r5764, $1
	store.64    %r5765 -> 0[%r5763]
	seta.32     %r5766 <- %r5764, $0
	cbr         %r5766, .L1303, .L1304

.L1303:
	load.64*    %r5767 <- 0[ls]
	load.64*    %r5768 <- 64[%r5767]
	load.64*    %r5769 <- 8[%r5768]
	add.64*     %r5770 <- %r5769, $1
	store.64*   %r5770 -> 8[%r5768]
	load.8      %r5771 <- 0[%r5769]
	scast.8     %r5772 <- (8) %r5771
	cast.32     %r5773 <- (8) %r5772
	phisrc.32   %phi213 <- %r5773
	br          .L1305

.L1304:
	load.64*    %r5774 <- 0[ls]
	load.64*    %r5775 <- 64[%r5774]
	push.64*    %r5775
	call.32     %r5776 <- luaZ_fill
	phisrc.32   %phi214 <- %r5776
	br          .L1305

.L1305:
	phi.32      %r5777 <- %phi213, %phi214
	load.64*    %r5778 <- 0[ls]
	store.32    %r5777 -> 0[%r5778]
	br          .L1306

.L1302:
	load.64*    %r5779 <- 0[ls]
	load.64*    %r5780 <- 64[%r5779]
	load.64     %r5781 <- 0[%r5780]
	sub.64      %r5782 <- %r5781, $1
	store.64    %r5782 -> 0[%r5780]
	seta.32     %r5783 <- %r5781, $0
	cbr         %r5783, .L1307, .L1308

.L1307:
	load.64*    %r5784 <- 0[ls]
	load.64*    %r5785 <- 64[%r5784]
	load.64*    %r5786 <- 8[%r5785]
	add.64*     %r5787 <- %r5786, $1
	store.64*   %r5787 -> 8[%r5785]
	load.8      %r5788 <- 0[%r5786]
	scast.8     %r5789 <- (8) %r5788
	cast.32     %r5790 <- (8) %r5789
	phisrc.32   %phi215 <- %r5790
	br          .L1309

.L1308:
	load.64*    %r5791 <- 0[ls]
	load.64*    %r5792 <- 64[%r5791]
	push.64*    %r5792
	call.32     %r5793 <- luaZ_fill
	phisrc.32   %phi216 <- %r5793
	br          .L1309

.L1309:
	phi.32      %r5794 <- %phi215, %phi216
	load.64*    %r5795 <- 0[ls]
	store.32    %r5794 -> 0[%r5795]
	br          .L1306

.L1306:
	br          .L1287

.L1287:
	br          .L1284

.L1284:
	br          .L1286

.L1298:
	load.64*    %r5796 <- 0[seminfo]
	cbr         %r5796, .L1310, .L1311

.L1310:
	load.64*    %r5797 <- 0[ls]
	load.64*    %r5798 <- 0[ls]
	load.64*    %r5799 <- 72[%r5798]
	load.64*    %r5800 <- 0[%r5799]
	load.32     %r5801 <- 0[sep]
	add.32      %r5802 <- $2, %r5801
	scast.64    %r5803 <- (32) %r5802
	add.64*     %r5804 <- %r5800, %r5803
	load.64*    %r5805 <- 0[ls]
	load.64*    %r5806 <- 72[%r5805]
	load.64     %r5807 <- 8[%r5806]
	load.32     %r5808 <- 0[sep]
	add.32      %r5809 <- $2, %r5808
	muls.32     %r5810 <- $2, %r5809
	scast.64    %r5811 <- (32) %r5810
	sub.64      %r5812 <- %r5807, %r5811
	push.64*    %r5797
	push.64*    %r5804
	push.64     %r5812
	call.64*    %r5813 <- luaX_newstring
	load.64*    %r5814 <- 0[seminfo]
	store.64*   %r5813 -> 0[%r5814]
	br          .L1311

.L1311:
	ret


read_string:
.L1312:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[del]
	store.64*   %arg3 -> 0[seminfo]
	load.64*    %r5815 <- 0[ls]
	load.64*    %r5816 <- 0[ls]
	load.32     %r5817 <- 0[%r5816]
	push.64*    %r5815
	push.32     %r5817
	call        save
	load.64*    %r5818 <- 0[ls]
	load.64*    %r5819 <- 64[%r5818]
	load.64     %r5820 <- 0[%r5819]
	sub.64      %r5821 <- %r5820, $1
	store.64    %r5821 -> 0[%r5819]
	seta.32     %r5822 <- %r5820, $0
	cbr         %r5822, .L1313, .L1314

.L1313:
	load.64*    %r5823 <- 0[ls]
	load.64*    %r5824 <- 64[%r5823]
	load.64*    %r5825 <- 8[%r5824]
	add.64*     %r5826 <- %r5825, $1
	store.64*   %r5826 -> 8[%r5824]
	load.8      %r5827 <- 0[%r5825]
	scast.8     %r5828 <- (8) %r5827
	cast.32     %r5829 <- (8) %r5828
	phisrc.32   %phi217 <- %r5829
	br          .L1315

.L1314:
	load.64*    %r5830 <- 0[ls]
	load.64*    %r5831 <- 64[%r5830]
	push.64*    %r5831
	call.32     %r5832 <- luaZ_fill
	phisrc.32   %phi218 <- %r5832
	br          .L1315

.L1315:
	phi.32      %r5833 <- %phi217, %phi218
	load.64*    %r5834 <- 0[ls]
	store.32    %r5833 -> 0[%r5834]
	br          .L1319

.L1319:
	load.64*    %r5835 <- 0[ls]
	load.32     %r5836 <- 0[%r5835]
	load.32     %r5837 <- 0[del]
	setne.32    %r5838 <- %r5836, %r5837
	cbr         %r5838, .L1316, .L1318

.L1316:
	load.64*    %r5839 <- 0[ls]
	load.32     %r5840 <- 0[%r5839]
	switch.32   %r5840, 10 -> .L1322, 13 -> .L1323, 92 -> .L1324, 4294967295 -> .L1321, default -> .L1325

.L1321:
	load.64*    %r5841 <- 0[ls]
	symaddr.64* %r5842 <- <anon symbol:0x1bdc710>
	push.64*    %r5841
	push.64*    %r5842
	push.32     $287
	call        luaX_lexerror
	br          .L1317

.L1322:
	br          .L1323

.L1323:
	load.64*    %r5843 <- 0[ls]
	symaddr.64* %r5844 <- <anon symbol:0x1bdcab0>
	push.64*    %r5843
	push.64*    %r5844
	push.32     $286
	call        luaX_lexerror
	br          .L1317

.L1324:
	load.64*    %r5845 <- 0[ls]
	load.64*    %r5846 <- 64[%r5845]
	load.64     %r5847 <- 0[%r5846]
	sub.64      %r5848 <- %r5847, $1
	store.64    %r5848 -> 0[%r5846]
	seta.32     %r5849 <- %r5847, $0
	cbr         %r5849, .L1326, .L1327

.L1326:
	load.64*    %r5850 <- 0[ls]
	load.64*    %r5851 <- 64[%r5850]
	load.64*    %r5852 <- 8[%r5851]
	add.64*     %r5853 <- %r5852, $1
	store.64*   %r5853 -> 8[%r5851]
	load.8      %r5854 <- 0[%r5852]
	scast.8     %r5855 <- (8) %r5854
	cast.32     %r5856 <- (8) %r5855
	phisrc.32   %phi219 <- %r5856
	br          .L1328

.L1327:
	load.64*    %r5857 <- 0[ls]
	load.64*    %r5858 <- 64[%r5857]
	push.64*    %r5858
	call.32     %r5859 <- luaZ_fill
	phisrc.32   %phi220 <- %r5859
	br          .L1328

.L1328:
	phi.32      %r5860 <- %phi219, %phi220
	load.64*    %r5861 <- 0[ls]
	store.32    %r5860 -> 0[%r5861]
	load.64*    %r5862 <- 0[ls]
	load.32     %r5863 <- 0[%r5862]
	switch.32   %r5863, 10 -> .L1337, 13 -> .L1338, 97 -> .L1330, 98 -> .L1331, 102 -> .L1332, 110 -> .L1333, 114 -> .L1334, 116 -> .L1335, 118 -> .L1336, 4294967295 -> .L1339, default -> .L1340

.L1330:
	store.32    $7 -> 0[c]
	br          .L1329

.L1331:
	store.32    $8 -> 0[c]
	br          .L1329

.L1332:
	store.32    $12 -> 0[c]
	br          .L1329

.L1333:
	store.32    $10 -> 0[c]
	br          .L1329

.L1334:
	store.32    $13 -> 0[c]
	br          .L1329

.L1335:
	store.32    $9 -> 0[c]
	br          .L1329

.L1336:
	store.32    $11 -> 0[c]
	br          .L1329

.L1337:
	br          .L1338

.L1338:
	load.64*    %r5864 <- 0[ls]
	push.64*    %r5864
	push.32     $10
	call        save
	load.64*    %r5865 <- 0[ls]
	push.64*    %r5865
	call        inclinenumber
	br          .L1317

.L1339:
	br          .L1317

.L1340:
	call.64*    %r5866 <- __ctype_b_loc
	load.64*    %r5867 <- 0[%r5866]
	load.64*    %r5868 <- 0[ls]
	load.32     %r5869 <- 0[%r5868]
	scast.32    %r5870 <- (32) %r5869
	scast.64    %r5871 <- (32) %r5870
	muls.64     %r5872 <- %r5871, $2
	add.64*     %r5873 <- %r5867, %r5872
	load.16     %r5874 <- 0[%r5873]
	cast.32     %r5875 <- (16) %r5874
	and.32      %r5876 <- %r5875, $0x800
	cbr         %r5876, .L1342, .L1341

.L1341:
	load.64*    %r5877 <- 0[ls]
	load.64*    %r5878 <- 0[ls]
	load.32     %r5879 <- 0[%r5878]
	push.64*    %r5877
	push.32     %r5879
	call        save
	load.64*    %r5880 <- 0[ls]
	load.64*    %r5881 <- 64[%r5880]
	load.64     %r5882 <- 0[%r5881]
	sub.64      %r5883 <- %r5882, $1
	store.64    %r5883 -> 0[%r5881]
	seta.32     %r5884 <- %r5882, $0
	cbr         %r5884, .L1343, .L1344

.L1343:
	load.64*    %r5885 <- 0[ls]
	load.64*    %r5886 <- 64[%r5885]
	load.64*    %r5887 <- 8[%r5886]
	add.64*     %r5888 <- %r5887, $1
	store.64*   %r5888 -> 8[%r5886]
	load.8      %r5889 <- 0[%r5887]
	scast.8     %r5890 <- (8) %r5889
	cast.32     %r5891 <- (8) %r5890
	phisrc.32   %phi221 <- %r5891
	br          .L1345

.L1344:
	load.64*    %r5892 <- 0[ls]
	load.64*    %r5893 <- 64[%r5892]
	push.64*    %r5893
	call.32     %r5894 <- luaZ_fill
	phisrc.32   %phi222 <- %r5894
	br          .L1345

.L1345:
	phi.32      %r5895 <- %phi221, %phi222
	load.64*    %r5896 <- 0[ls]
	store.32    %r5895 -> 0[%r5896]
	br          .L1346

.L1342:
	store.32    $0 -> 0[i]
	store.32    $0 -> 0[c]
	br          .L1347

.L1347:
	load.32     %r5897 <- 0[c]
	muls.32     %r5898 <- $10, %r5897
	load.64*    %r5899 <- 0[ls]
	load.32     %r5900 <- 0[%r5899]
	sub.32      %r5901 <- %r5900, $48
	add.32      %r5902 <- %r5898, %r5901
	store.32    %r5902 -> 0[c]
	load.64*    %r5903 <- 0[ls]
	load.64*    %r5904 <- 64[%r5903]
	load.64     %r5905 <- 0[%r5904]
	sub.64      %r5906 <- %r5905, $1
	store.64    %r5906 -> 0[%r5904]
	seta.32     %r5907 <- %r5905, $0
	cbr         %r5907, .L1350, .L1351

.L1350:
	load.64*    %r5908 <- 0[ls]
	load.64*    %r5909 <- 64[%r5908]
	load.64*    %r5910 <- 8[%r5909]
	add.64*     %r5911 <- %r5910, $1
	store.64*   %r5911 -> 8[%r5909]
	load.8      %r5912 <- 0[%r5910]
	scast.8     %r5913 <- (8) %r5912
	cast.32     %r5914 <- (8) %r5913
	phisrc.32   %phi223 <- %r5914
	br          .L1352

.L1351:
	load.64*    %r5915 <- 0[ls]
	load.64*    %r5916 <- 64[%r5915]
	push.64*    %r5916
	call.32     %r5917 <- luaZ_fill
	phisrc.32   %phi224 <- %r5917
	br          .L1352

.L1352:
	phi.32      %r5918 <- %phi223, %phi224
	load.64*    %r5919 <- 0[ls]
	store.32    %r5918 -> 0[%r5919]
	br          .L1348

.L1348:
	load.32     %r5920 <- 0[i]
	add.32      %r5921 <- %r5920, $1
	store.32    %r5921 -> 0[i]
	setlt.32    %r5922 <- %r5921, $3
	cbr         %r5922, .L1353, .L1349

.L1353:
	call.64*    %r5923 <- __ctype_b_loc
	load.64*    %r5924 <- 0[%r5923]
	load.64*    %r5925 <- 0[ls]
	load.32     %r5926 <- 0[%r5925]
	scast.32    %r5927 <- (32) %r5926
	scast.64    %r5928 <- (32) %r5927
	muls.64     %r5929 <- %r5928, $2
	add.64*     %r5930 <- %r5924, %r5929
	load.16     %r5931 <- 0[%r5930]
	cast.32     %r5932 <- (16) %r5931
	and.32      %r5933 <- %r5932, $0x800
	cbr         %r5933, .L1347, .L1349

.L1349:
	load.32     %r5934 <- 0[c]
	setgt.32    %r5935 <- %r5934, $255
	cbr         %r5935, .L1354, .L1355

.L1354:
	load.64*    %r5936 <- 0[ls]
	symaddr.64* %r5937 <- <anon symbol:0x1bdfba0>
	push.64*    %r5936
	push.64*    %r5937
	push.32     $286
	call        luaX_lexerror
	br          .L1355

.L1355:
	load.64*    %r5938 <- 0[ls]
	load.32     %r5939 <- 0[c]
	push.64*    %r5938
	push.32     %r5939
	call        save
	br          .L1346

.L1346:
	br          .L1317

.L1329:
	load.64*    %r5940 <- 0[ls]
	load.32     %r5941 <- 0[c]
	push.64*    %r5940
	push.32     %r5941
	call        save
	load.64*    %r5942 <- 0[ls]
	load.64*    %r5943 <- 64[%r5942]
	load.64     %r5944 <- 0[%r5943]
	sub.64      %r5945 <- %r5944, $1
	store.64    %r5945 -> 0[%r5943]
	seta.32     %r5946 <- %r5944, $0
	cbr         %r5946, .L1356, .L1357

.L1356:
	load.64*    %r5947 <- 0[ls]
	load.64*    %r5948 <- 64[%r5947]
	load.64*    %r5949 <- 8[%r5948]
	add.64*     %r5950 <- %r5949, $1
	store.64*   %r5950 -> 8[%r5948]
	load.8      %r5951 <- 0[%r5949]
	scast.8     %r5952 <- (8) %r5951
	cast.32     %r5953 <- (8) %r5952
	phisrc.32   %phi225 <- %r5953
	br          .L1358

.L1357:
	load.64*    %r5954 <- 0[ls]
	load.64*    %r5955 <- 64[%r5954]
	push.64*    %r5955
	call.32     %r5956 <- luaZ_fill
	phisrc.32   %phi226 <- %r5956
	br          .L1358

.L1358:
	phi.32      %r5957 <- %phi225, %phi226
	load.64*    %r5958 <- 0[ls]
	store.32    %r5957 -> 0[%r5958]
	br          .L1317

.L1325:
	load.64*    %r5959 <- 0[ls]
	load.64*    %r5960 <- 0[ls]
	load.32     %r5961 <- 0[%r5960]
	push.64*    %r5959
	push.32     %r5961
	call        save
	load.64*    %r5962 <- 0[ls]
	load.64*    %r5963 <- 64[%r5962]
	load.64     %r5964 <- 0[%r5963]
	sub.64      %r5965 <- %r5964, $1
	store.64    %r5965 -> 0[%r5963]
	seta.32     %r5966 <- %r5964, $0
	cbr         %r5966, .L1359, .L1360

.L1359:
	load.64*    %r5967 <- 0[ls]
	load.64*    %r5968 <- 64[%r5967]
	load.64*    %r5969 <- 8[%r5968]
	add.64*     %r5970 <- %r5969, $1
	store.64*   %r5970 -> 8[%r5968]
	load.8      %r5971 <- 0[%r5969]
	scast.8     %r5972 <- (8) %r5971
	cast.32     %r5973 <- (8) %r5972
	phisrc.32   %phi227 <- %r5973
	br          .L1361

.L1360:
	load.64*    %r5974 <- 0[ls]
	load.64*    %r5975 <- 64[%r5974]
	push.64*    %r5975
	call.32     %r5976 <- luaZ_fill
	phisrc.32   %phi228 <- %r5976
	br          .L1361

.L1361:
	phi.32      %r5977 <- %phi227, %phi228
	load.64*    %r5978 <- 0[ls]
	store.32    %r5977 -> 0[%r5978]
	br          .L1320

.L1320:
	br          .L1317

.L1317:
	br          .L1319

.L1318:
	load.64*    %r5979 <- 0[ls]
	load.64*    %r5980 <- 0[ls]
	load.32     %r5981 <- 0[%r5980]
	push.64*    %r5979
	push.32     %r5981
	call        save
	load.64*    %r5982 <- 0[ls]
	load.64*    %r5983 <- 64[%r5982]
	load.64     %r5984 <- 0[%r5983]
	sub.64      %r5985 <- %r5984, $1
	store.64    %r5985 -> 0[%r5983]
	seta.32     %r5986 <- %r5984, $0
	cbr         %r5986, .L1362, .L1363

.L1362:
	load.64*    %r5987 <- 0[ls]
	load.64*    %r5988 <- 64[%r5987]
	load.64*    %r5989 <- 8[%r5988]
	add.64*     %r5990 <- %r5989, $1
	store.64*   %r5990 -> 8[%r5988]
	load.8      %r5991 <- 0[%r5989]
	scast.8     %r5992 <- (8) %r5991
	cast.32     %r5993 <- (8) %r5992
	phisrc.32   %phi229 <- %r5993
	br          .L1364

.L1363:
	load.64*    %r5994 <- 0[ls]
	load.64*    %r5995 <- 64[%r5994]
	push.64*    %r5995
	call.32     %r5996 <- luaZ_fill
	phisrc.32   %phi230 <- %r5996
	br          .L1364

.L1364:
	phi.32      %r5997 <- %phi229, %phi230
	load.64*    %r5998 <- 0[ls]
	store.32    %r5997 -> 0[%r5998]
	load.64*    %r5999 <- 0[ls]
	load.64*    %r6000 <- 0[ls]
	load.64*    %r6001 <- 72[%r6000]
	load.64*    %r6002 <- 0[%r6001]
	add.64*     %r6003 <- %r6002, $1
	load.64*    %r6004 <- 0[ls]
	load.64*    %r6005 <- 72[%r6004]
	load.64     %r6006 <- 8[%r6005]
	sub.64      %r6007 <- %r6006, $2
	push.64*    %r5999
	push.64*    %r6003
	push.64     %r6007
	call.64*    %r6008 <- luaX_newstring
	load.64*    %r6009 <- 0[seminfo]
	store.64*   %r6008 -> 0[%r6009]
	br          .L1365

.L1365:
	ret


llex:
.L1366:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	load.64*    %r6010 <- 0[ls]
	load.64*    %r6011 <- 72[%r6010]
	store.64    $0 -> 8[%r6011]
	br          .L1370

.L1370:
	br          .L1367

.L1367:
	load.64*    %r6012 <- 0[ls]
	load.32     %r6013 <- 0[%r6012]
	switch.32   %r6013, 10 -> .L1372, 13 -> .L1373, 34 -> .L1380, 39 -> .L1381, 45 -> .L1374, 46 -> .L1382, 60 -> .L1377, 61 -> .L1376, 62 -> .L1378, 91 -> .L1375, 126 -> .L1379, 4294967295 -> .L1383, default -> .L1384

.L1372:
	br          .L1373

.L1373:
	load.64*    %r6014 <- 0[ls]
	push.64*    %r6014
	call        inclinenumber
	br          .L1368

.L1374:
	load.64*    %r6015 <- 0[ls]
	load.64*    %r6016 <- 64[%r6015]
	load.64     %r6017 <- 0[%r6016]
	sub.64      %r6018 <- %r6017, $1
	store.64    %r6018 -> 0[%r6016]
	seta.32     %r6019 <- %r6017, $0
	cbr         %r6019, .L1385, .L1386

.L1385:
	load.64*    %r6020 <- 0[ls]
	load.64*    %r6021 <- 64[%r6020]
	load.64*    %r6022 <- 8[%r6021]
	add.64*     %r6023 <- %r6022, $1
	store.64*   %r6023 -> 8[%r6021]
	load.8      %r6024 <- 0[%r6022]
	scast.8     %r6025 <- (8) %r6024
	cast.32     %r6026 <- (8) %r6025
	phisrc.32   %phi231 <- %r6026
	br          .L1387

.L1386:
	load.64*    %r6027 <- 0[ls]
	load.64*    %r6028 <- 64[%r6027]
	push.64*    %r6028
	call.32     %r6029 <- luaZ_fill
	phisrc.32   %phi232 <- %r6029
	br          .L1387

.L1387:
	phi.32      %r6030 <- %phi231, %phi232
	load.64*    %r6031 <- 0[ls]
	store.32    %r6030 -> 0[%r6031]
	load.64*    %r6032 <- 0[ls]
	load.32     %r6033 <- 0[%r6032]
	setne.32    %r6034 <- %r6033, $45
	cbr         %r6034, .L1388, .L1389

.L1388:
	phisrc.32   %phi233(return) <- $45
	br          .L1390

.L1389:
	load.64*    %r6036 <- 0[ls]
	load.64*    %r6037 <- 64[%r6036]
	load.64     %r6038 <- 0[%r6037]
	sub.64      %r6039 <- %r6038, $1
	store.64    %r6039 -> 0[%r6037]
	seta.32     %r6040 <- %r6038, $0
	cbr         %r6040, .L1391, .L1392

.L1391:
	load.64*    %r6041 <- 0[ls]
	load.64*    %r6042 <- 64[%r6041]
	load.64*    %r6043 <- 8[%r6042]
	add.64*     %r6044 <- %r6043, $1
	store.64*   %r6044 -> 8[%r6042]
	load.8      %r6045 <- 0[%r6043]
	scast.8     %r6046 <- (8) %r6045
	cast.32     %r6047 <- (8) %r6046
	phisrc.32   %phi234 <- %r6047
	br          .L1393

.L1392:
	load.64*    %r6048 <- 0[ls]
	load.64*    %r6049 <- 64[%r6048]
	push.64*    %r6049
	call.32     %r6050 <- luaZ_fill
	phisrc.32   %phi235 <- %r6050
	br          .L1393

.L1393:
	phi.32      %r6051 <- %phi234, %phi235
	load.64*    %r6052 <- 0[ls]
	store.32    %r6051 -> 0[%r6052]
	load.64*    %r6053 <- 0[ls]
	load.32     %r6054 <- 0[%r6053]
	seteq.32    %r6055 <- %r6054, $91
	cbr         %r6055, .L1394, .L1395

.L1394:
	load.64*    %r6056 <- 0[ls]
	push.64*    %r6056
	call.32     %r6057 <- skip_sep
	store.32    %r6057 -> 0[sep]
	load.64*    %r6058 <- 0[ls]
	load.64*    %r6059 <- 72[%r6058]
	store.64    $0 -> 8[%r6059]
	load.32     %r6060 <- 0[sep]
	setge.32    %r6061 <- %r6060, $0
	cbr         %r6061, .L1396, .L1397

.L1396:
	load.64*    %r6062 <- 0[ls]
	load.32     %r6063 <- 0[sep]
	push.64*    %r6062
	push.64*    $0
	push.32     %r6063
	call        read_long_string
	load.64*    %r6064 <- 0[ls]
	load.64*    %r6065 <- 72[%r6064]
	store.64    $0 -> 8[%r6065]
	br          .L1368

.L1397:
	br          .L1395

.L1395:
	br          .L1401

.L1401:
	load.64*    %r6066 <- 0[ls]
	load.32     %r6067 <- 0[%r6066]
	seteq.32    %r6068 <- %r6067, $10
	cbr         %r6068, .L1400, .L1403

.L1403:
	load.64*    %r6069 <- 0[ls]
	load.32     %r6070 <- 0[%r6069]
	seteq.32    %r6071 <- %r6070, $13
	cbr         %r6071, .L1400, .L1402

.L1402:
	load.64*    %r6072 <- 0[ls]
	load.32     %r6073 <- 0[%r6072]
	setne.32    %r6074 <- %r6073, $0xffffffff
	cbr         %r6074, .L1398, .L1400

.L1398:
	load.64*    %r6075 <- 0[ls]
	load.64*    %r6076 <- 64[%r6075]
	load.64     %r6077 <- 0[%r6076]
	sub.64      %r6078 <- %r6077, $1
	store.64    %r6078 -> 0[%r6076]
	seta.32     %r6079 <- %r6077, $0
	cbr         %r6079, .L1404, .L1405

.L1404:
	load.64*    %r6080 <- 0[ls]
	load.64*    %r6081 <- 64[%r6080]
	load.64*    %r6082 <- 8[%r6081]
	add.64*     %r6083 <- %r6082, $1
	store.64*   %r6083 -> 8[%r6081]
	load.8      %r6084 <- 0[%r6082]
	scast.8     %r6085 <- (8) %r6084
	cast.32     %r6086 <- (8) %r6085
	phisrc.32   %phi236 <- %r6086
	br          .L1406

.L1405:
	load.64*    %r6087 <- 0[ls]
	load.64*    %r6088 <- 64[%r6087]
	push.64*    %r6088
	call.32     %r6089 <- luaZ_fill
	phisrc.32   %phi237 <- %r6089
	br          .L1406

.L1406:
	phi.32      %r6090 <- %phi236, %phi237
	load.64*    %r6091 <- 0[ls]
	store.32    %r6090 -> 0[%r6091]
	br          .L1399

.L1399:
	br          .L1401

.L1400:
	br          .L1368

.L1375:
	load.64*    %r6092 <- 0[ls]
	push.64*    %r6092
	call.32     %r6093 <- skip_sep
	store.32    %r6093 -> 0[sep]
	load.32     %r6094 <- 0[sep]
	setge.32    %r6095 <- %r6094, $0
	cbr         %r6095, .L1407, .L1408

.L1407:
	load.64*    %r6096 <- 0[ls]
	load.64*    %r6097 <- 0[seminfo]
	load.32     %r6098 <- 0[sep]
	push.64*    %r6096
	push.64*    %r6097
	push.32     %r6098
	call        read_long_string
	phisrc.32   %phi238(return) <- $286
	br          .L1390

.L1408:
	load.32     %r6099 <- 0[sep]
	seteq.32    %r6100 <- %r6099, $0xffffffff
	cbr         %r6100, .L1410, .L1411

.L1410:
	phisrc.32   %phi239(return) <- $91
	br          .L1390

.L1411:
	load.64*    %r6101 <- 0[ls]
	symaddr.64* %r6102 <- <anon symbol:0x1bedfa8>
	push.64*    %r6101
	push.64*    %r6102
	push.32     $286
	call        luaX_lexerror
	br          .L1412

.L1412:
	br          .L1409

.L1409:
	br          .L1376

.L1376:
	load.64*    %r6103 <- 0[ls]
	load.64*    %r6104 <- 64[%r6103]
	load.64     %r6105 <- 0[%r6104]
	sub.64      %r6106 <- %r6105, $1
	store.64    %r6106 -> 0[%r6104]
	seta.32     %r6107 <- %r6105, $0
	cbr         %r6107, .L1413, .L1414

.L1413:
	load.64*    %r6108 <- 0[ls]
	load.64*    %r6109 <- 64[%r6108]
	load.64*    %r6110 <- 8[%r6109]
	add.64*     %r6111 <- %r6110, $1
	store.64*   %r6111 -> 8[%r6109]
	load.8      %r6112 <- 0[%r6110]
	scast.8     %r6113 <- (8) %r6112
	cast.32     %r6114 <- (8) %r6113
	phisrc.32   %phi240 <- %r6114
	br          .L1415

.L1414:
	load.64*    %r6115 <- 0[ls]
	load.64*    %r6116 <- 64[%r6115]
	push.64*    %r6116
	call.32     %r6117 <- luaZ_fill
	phisrc.32   %phi241 <- %r6117
	br          .L1415

.L1415:
	phi.32      %r6118 <- %phi240, %phi241
	load.64*    %r6119 <- 0[ls]
	store.32    %r6118 -> 0[%r6119]
	load.64*    %r6120 <- 0[ls]
	load.32     %r6121 <- 0[%r6120]
	setne.32    %r6122 <- %r6121, $61
	cbr         %r6122, .L1416, .L1417

.L1416:
	phisrc.32   %phi242(return) <- $61
	br          .L1390

.L1417:
	load.64*    %r6123 <- 0[ls]
	load.64*    %r6124 <- 64[%r6123]
	load.64     %r6125 <- 0[%r6124]
	sub.64      %r6126 <- %r6125, $1
	store.64    %r6126 -> 0[%r6124]
	seta.32     %r6127 <- %r6125, $0
	cbr         %r6127, .L1419, .L1420

.L1419:
	load.64*    %r6128 <- 0[ls]
	load.64*    %r6129 <- 64[%r6128]
	load.64*    %r6130 <- 8[%r6129]
	add.64*     %r6131 <- %r6130, $1
	store.64*   %r6131 -> 8[%r6129]
	load.8      %r6132 <- 0[%r6130]
	scast.8     %r6133 <- (8) %r6132
	cast.32     %r6134 <- (8) %r6133
	phisrc.32   %phi243 <- %r6134
	br          .L1421

.L1420:
	load.64*    %r6135 <- 0[ls]
	load.64*    %r6136 <- 64[%r6135]
	push.64*    %r6136
	call.32     %r6137 <- luaZ_fill
	phisrc.32   %phi244 <- %r6137
	br          .L1421

.L1421:
	phi.32      %r6138 <- %phi243, %phi244
	load.64*    %r6139 <- 0[ls]
	store.32    %r6138 -> 0[%r6139]
	phisrc.32   %phi245(return) <- $280
	br          .L1390

.L1377:
	load.64*    %r6140 <- 0[ls]
	load.64*    %r6141 <- 64[%r6140]
	load.64     %r6142 <- 0[%r6141]
	sub.64      %r6143 <- %r6142, $1
	store.64    %r6143 -> 0[%r6141]
	seta.32     %r6144 <- %r6142, $0
	cbr         %r6144, .L1422, .L1423

.L1422:
	load.64*    %r6145 <- 0[ls]
	load.64*    %r6146 <- 64[%r6145]
	load.64*    %r6147 <- 8[%r6146]
	add.64*     %r6148 <- %r6147, $1
	store.64*   %r6148 -> 8[%r6146]
	load.8      %r6149 <- 0[%r6147]
	scast.8     %r6150 <- (8) %r6149
	cast.32     %r6151 <- (8) %r6150
	phisrc.32   %phi246 <- %r6151
	br          .L1424

.L1423:
	load.64*    %r6152 <- 0[ls]
	load.64*    %r6153 <- 64[%r6152]
	push.64*    %r6153
	call.32     %r6154 <- luaZ_fill
	phisrc.32   %phi247 <- %r6154
	br          .L1424

.L1424:
	phi.32      %r6155 <- %phi246, %phi247
	load.64*    %r6156 <- 0[ls]
	store.32    %r6155 -> 0[%r6156]
	load.64*    %r6157 <- 0[ls]
	load.32     %r6158 <- 0[%r6157]
	setne.32    %r6159 <- %r6158, $61
	cbr         %r6159, .L1425, .L1426

.L1425:
	phisrc.32   %phi248(return) <- $60
	br          .L1390

.L1426:
	load.64*    %r6160 <- 0[ls]
	load.64*    %r6161 <- 64[%r6160]
	load.64     %r6162 <- 0[%r6161]
	sub.64      %r6163 <- %r6162, $1
	store.64    %r6163 -> 0[%r6161]
	seta.32     %r6164 <- %r6162, $0
	cbr         %r6164, .L1428, .L1429

.L1428:
	load.64*    %r6165 <- 0[ls]
	load.64*    %r6166 <- 64[%r6165]
	load.64*    %r6167 <- 8[%r6166]
	add.64*     %r6168 <- %r6167, $1
	store.64*   %r6168 -> 8[%r6166]
	load.8      %r6169 <- 0[%r6167]
	scast.8     %r6170 <- (8) %r6169
	cast.32     %r6171 <- (8) %r6170
	phisrc.32   %phi249 <- %r6171
	br          .L1430

.L1429:
	load.64*    %r6172 <- 0[ls]
	load.64*    %r6173 <- 64[%r6172]
	push.64*    %r6173
	call.32     %r6174 <- luaZ_fill
	phisrc.32   %phi250 <- %r6174
	br          .L1430

.L1430:
	phi.32      %r6175 <- %phi249, %phi250
	load.64*    %r6176 <- 0[ls]
	store.32    %r6175 -> 0[%r6176]
	phisrc.32   %phi251(return) <- $282
	br          .L1390

.L1378:
	load.64*    %r6177 <- 0[ls]
	load.64*    %r6178 <- 64[%r6177]
	load.64     %r6179 <- 0[%r6178]
	sub.64      %r6180 <- %r6179, $1
	store.64    %r6180 -> 0[%r6178]
	seta.32     %r6181 <- %r6179, $0
	cbr         %r6181, .L1431, .L1432

.L1431:
	load.64*    %r6182 <- 0[ls]
	load.64*    %r6183 <- 64[%r6182]
	load.64*    %r6184 <- 8[%r6183]
	add.64*     %r6185 <- %r6184, $1
	store.64*   %r6185 -> 8[%r6183]
	load.8      %r6186 <- 0[%r6184]
	scast.8     %r6187 <- (8) %r6186
	cast.32     %r6188 <- (8) %r6187
	phisrc.32   %phi252 <- %r6188
	br          .L1433

.L1432:
	load.64*    %r6189 <- 0[ls]
	load.64*    %r6190 <- 64[%r6189]
	push.64*    %r6190
	call.32     %r6191 <- luaZ_fill
	phisrc.32   %phi253 <- %r6191
	br          .L1433

.L1433:
	phi.32      %r6192 <- %phi252, %phi253
	load.64*    %r6193 <- 0[ls]
	store.32    %r6192 -> 0[%r6193]
	load.64*    %r6194 <- 0[ls]
	load.32     %r6195 <- 0[%r6194]
	setne.32    %r6196 <- %r6195, $61
	cbr         %r6196, .L1434, .L1435

.L1434:
	phisrc.32   %phi254(return) <- $62
	br          .L1390

.L1435:
	load.64*    %r6197 <- 0[ls]
	load.64*    %r6198 <- 64[%r6197]
	load.64     %r6199 <- 0[%r6198]
	sub.64      %r6200 <- %r6199, $1
	store.64    %r6200 -> 0[%r6198]
	seta.32     %r6201 <- %r6199, $0
	cbr         %r6201, .L1437, .L1438

.L1437:
	load.64*    %r6202 <- 0[ls]
	load.64*    %r6203 <- 64[%r6202]
	load.64*    %r6204 <- 8[%r6203]
	add.64*     %r6205 <- %r6204, $1
	store.64*   %r6205 -> 8[%r6203]
	load.8      %r6206 <- 0[%r6204]
	scast.8     %r6207 <- (8) %r6206
	cast.32     %r6208 <- (8) %r6207
	phisrc.32   %phi255 <- %r6208
	br          .L1439

.L1438:
	load.64*    %r6209 <- 0[ls]
	load.64*    %r6210 <- 64[%r6209]
	push.64*    %r6210
	call.32     %r6211 <- luaZ_fill
	phisrc.32   %phi256 <- %r6211
	br          .L1439

.L1439:
	phi.32      %r6212 <- %phi255, %phi256
	load.64*    %r6213 <- 0[ls]
	store.32    %r6212 -> 0[%r6213]
	phisrc.32   %phi257(return) <- $281
	br          .L1390

.L1379:
	load.64*    %r6214 <- 0[ls]
	load.64*    %r6215 <- 64[%r6214]
	load.64     %r6216 <- 0[%r6215]
	sub.64      %r6217 <- %r6216, $1
	store.64    %r6217 -> 0[%r6215]
	seta.32     %r6218 <- %r6216, $0
	cbr         %r6218, .L1440, .L1441

.L1440:
	load.64*    %r6219 <- 0[ls]
	load.64*    %r6220 <- 64[%r6219]
	load.64*    %r6221 <- 8[%r6220]
	add.64*     %r6222 <- %r6221, $1
	store.64*   %r6222 -> 8[%r6220]
	load.8      %r6223 <- 0[%r6221]
	scast.8     %r6224 <- (8) %r6223
	cast.32     %r6225 <- (8) %r6224
	phisrc.32   %phi258 <- %r6225
	br          .L1442

.L1441:
	load.64*    %r6226 <- 0[ls]
	load.64*    %r6227 <- 64[%r6226]
	push.64*    %r6227
	call.32     %r6228 <- luaZ_fill
	phisrc.32   %phi259 <- %r6228
	br          .L1442

.L1442:
	phi.32      %r6229 <- %phi258, %phi259
	load.64*    %r6230 <- 0[ls]
	store.32    %r6229 -> 0[%r6230]
	load.64*    %r6231 <- 0[ls]
	load.32     %r6232 <- 0[%r6231]
	setne.32    %r6233 <- %r6232, $61
	cbr         %r6233, .L1443, .L1444

.L1443:
	phisrc.32   %phi260(return) <- $126
	br          .L1390

.L1444:
	load.64*    %r6234 <- 0[ls]
	load.64*    %r6235 <- 64[%r6234]
	load.64     %r6236 <- 0[%r6235]
	sub.64      %r6237 <- %r6236, $1
	store.64    %r6237 -> 0[%r6235]
	seta.32     %r6238 <- %r6236, $0
	cbr         %r6238, .L1446, .L1447

.L1446:
	load.64*    %r6239 <- 0[ls]
	load.64*    %r6240 <- 64[%r6239]
	load.64*    %r6241 <- 8[%r6240]
	add.64*     %r6242 <- %r6241, $1
	store.64*   %r6242 -> 8[%r6240]
	load.8      %r6243 <- 0[%r6241]
	scast.8     %r6244 <- (8) %r6243
	cast.32     %r6245 <- (8) %r6244
	phisrc.32   %phi261 <- %r6245
	br          .L1448

.L1447:
	load.64*    %r6246 <- 0[ls]
	load.64*    %r6247 <- 64[%r6246]
	push.64*    %r6247
	call.32     %r6248 <- luaZ_fill
	phisrc.32   %phi262 <- %r6248
	br          .L1448

.L1448:
	phi.32      %r6249 <- %phi261, %phi262
	load.64*    %r6250 <- 0[ls]
	store.32    %r6249 -> 0[%r6250]
	phisrc.32   %phi263(return) <- $283
	br          .L1390

.L1380:
	br          .L1381

.L1381:
	load.64*    %r6251 <- 0[ls]
	load.64*    %r6252 <- 0[ls]
	load.32     %r6253 <- 0[%r6252]
	load.64*    %r6254 <- 0[seminfo]
	push.64*    %r6251
	push.32     %r6253
	push.64*    %r6254
	call        read_string
	phisrc.32   %phi264(return) <- $286
	br          .L1390

.L1382:
	load.64*    %r6255 <- 0[ls]
	load.64*    %r6256 <- 0[ls]
	load.32     %r6257 <- 0[%r6256]
	push.64*    %r6255
	push.32     %r6257
	call        save
	load.64*    %r6258 <- 0[ls]
	load.64*    %r6259 <- 64[%r6258]
	load.64     %r6260 <- 0[%r6259]
	sub.64      %r6261 <- %r6260, $1
	store.64    %r6261 -> 0[%r6259]
	seta.32     %r6262 <- %r6260, $0
	cbr         %r6262, .L1449, .L1450

.L1449:
	load.64*    %r6263 <- 0[ls]
	load.64*    %r6264 <- 64[%r6263]
	load.64*    %r6265 <- 8[%r6264]
	add.64*     %r6266 <- %r6265, $1
	store.64*   %r6266 -> 8[%r6264]
	load.8      %r6267 <- 0[%r6265]
	scast.8     %r6268 <- (8) %r6267
	cast.32     %r6269 <- (8) %r6268
	phisrc.32   %phi265 <- %r6269
	br          .L1451

.L1450:
	load.64*    %r6270 <- 0[ls]
	load.64*    %r6271 <- 64[%r6270]
	push.64*    %r6271
	call.32     %r6272 <- luaZ_fill
	phisrc.32   %phi266 <- %r6272
	br          .L1451

.L1451:
	phi.32      %r6273 <- %phi265, %phi266
	load.64*    %r6274 <- 0[ls]
	store.32    %r6273 -> 0[%r6274]
	load.64*    %r6275 <- 0[ls]
	symaddr.64* %r6276 <- <anon symbol:0x1a64d30>
	push.64*    %r6275
	push.64*    %r6276
	call.32     %r6277 <- check_next
	cbr         %r6277, .L1452, .L1453

.L1452:
	load.64*    %r6278 <- 0[ls]
	symaddr.64* %r6279 <- <anon symbol:0x1a650d0>
	push.64*    %r6278
	push.64*    %r6279
	call.32     %r6280 <- check_next
	cbr         %r6280, .L1454, .L1455

.L1454:
	phisrc.32   %phi267(return) <- $279
	br          .L1390

.L1455:
	phisrc.32   %phi268(return) <- $278
	br          .L1390

.L1453:
	call.64*    %r6281 <- __ctype_b_loc
	load.64*    %r6282 <- 0[%r6281]
	load.64*    %r6283 <- 0[ls]
	load.32     %r6284 <- 0[%r6283]
	scast.32    %r6285 <- (32) %r6284
	scast.64    %r6286 <- (32) %r6285
	muls.64     %r6287 <- %r6286, $2
	add.64*     %r6288 <- %r6282, %r6287
	load.16     %r6289 <- 0[%r6288]
	cast.32     %r6290 <- (16) %r6289
	and.32      %r6291 <- %r6290, $0x800
	cbr         %r6291, .L1459, .L1458

.L1458:
	phisrc.32   %phi269(return) <- $46
	br          .L1390

.L1459:
	load.64*    %r6292 <- 0[ls]
	load.64*    %r6293 <- 0[seminfo]
	push.64*    %r6292
	push.64*    %r6293
	call        read_numeral
	phisrc.32   %phi270(return) <- $284
	br          .L1390

.L1383:
	phisrc.32   %phi271(return) <- $287
	br          .L1390

.L1384:
	call.64*    %r6294 <- __ctype_b_loc
	load.64*    %r6295 <- 0[%r6294]
	load.64*    %r6296 <- 0[ls]
	load.32     %r6297 <- 0[%r6296]
	scast.32    %r6298 <- (32) %r6297
	scast.64    %r6299 <- (32) %r6298
	muls.64     %r6300 <- %r6299, $2
	add.64*     %r6301 <- %r6295, %r6300
	load.16     %r6302 <- 0[%r6301]
	cast.32     %r6303 <- (16) %r6302
	and.32      %r6304 <- %r6303, $0x2000
	cbr         %r6304, .L1461, .L1462

.L1461:
	load.64*    %r6305 <- 0[ls]
	load.64*    %r6306 <- 64[%r6305]
	load.64     %r6307 <- 0[%r6306]
	sub.64      %r6308 <- %r6307, $1
	store.64    %r6308 -> 0[%r6306]
	seta.32     %r6309 <- %r6307, $0
	cbr         %r6309, .L1463, .L1464

.L1463:
	load.64*    %r6310 <- 0[ls]
	load.64*    %r6311 <- 64[%r6310]
	load.64*    %r6312 <- 8[%r6311]
	add.64*     %r6313 <- %r6312, $1
	store.64*   %r6313 -> 8[%r6311]
	load.8      %r6314 <- 0[%r6312]
	scast.8     %r6315 <- (8) %r6314
	cast.32     %r6316 <- (8) %r6315
	phisrc.32   %phi272 <- %r6316
	br          .L1465

.L1464:
	load.64*    %r6317 <- 0[ls]
	load.64*    %r6318 <- 64[%r6317]
	push.64*    %r6318
	call.32     %r6319 <- luaZ_fill
	phisrc.32   %phi273 <- %r6319
	br          .L1465

.L1465:
	phi.32      %r6320 <- %phi272, %phi273
	load.64*    %r6321 <- 0[ls]
	store.32    %r6320 -> 0[%r6321]
	br          .L1368

.L1462:
	call.64*    %r6322 <- __ctype_b_loc
	load.64*    %r6323 <- 0[%r6322]
	load.64*    %r6324 <- 0[ls]
	load.32     %r6325 <- 0[%r6324]
	scast.32    %r6326 <- (32) %r6325
	scast.64    %r6327 <- (32) %r6326
	muls.64     %r6328 <- %r6327, $2
	add.64*     %r6329 <- %r6323, %r6328
	load.16     %r6330 <- 0[%r6329]
	cast.32     %r6331 <- (16) %r6330
	and.32      %r6332 <- %r6331, $0x800
	cbr         %r6332, .L1467, .L1468

.L1467:
	load.64*    %r6333 <- 0[ls]
	load.64*    %r6334 <- 0[seminfo]
	push.64*    %r6333
	push.64*    %r6334
	call        read_numeral
	phisrc.32   %phi274(return) <- $284
	br          .L1390

.L1468:
	call.64*    %r6335 <- __ctype_b_loc
	load.64*    %r6336 <- 0[%r6335]
	load.64*    %r6337 <- 0[ls]
	load.32     %r6338 <- 0[%r6337]
	scast.32    %r6339 <- (32) %r6338
	scast.64    %r6340 <- (32) %r6339
	muls.64     %r6341 <- %r6340, $2
	add.64*     %r6342 <- %r6336, %r6341
	load.16     %r6343 <- 0[%r6342]
	cast.32     %r6344 <- (16) %r6343
	and.32      %r6345 <- %r6344, $0x400
	cbr         %r6345, .L1470, .L1472

.L1472:
	load.64*    %r6346 <- 0[ls]
	load.32     %r6347 <- 0[%r6346]
	seteq.32    %r6348 <- %r6347, $95
	cbr         %r6348, .L1470, .L1471

.L1470:
	br          .L1473

.L1473:
	load.64*    %r6349 <- 0[ls]
	load.64*    %r6350 <- 0[ls]
	load.32     %r6351 <- 0[%r6350]
	push.64*    %r6349
	push.32     %r6351
	call        save
	load.64*    %r6352 <- 0[ls]
	load.64*    %r6353 <- 64[%r6352]
	load.64     %r6354 <- 0[%r6353]
	sub.64      %r6355 <- %r6354, $1
	store.64    %r6355 -> 0[%r6353]
	seta.32     %r6356 <- %r6354, $0
	cbr         %r6356, .L1476, .L1477

.L1476:
	load.64*    %r6357 <- 0[ls]
	load.64*    %r6358 <- 64[%r6357]
	load.64*    %r6359 <- 8[%r6358]
	add.64*     %r6360 <- %r6359, $1
	store.64*   %r6360 -> 8[%r6358]
	load.8      %r6361 <- 0[%r6359]
	scast.8     %r6362 <- (8) %r6361
	cast.32     %r6363 <- (8) %r6362
	phisrc.32   %phi275 <- %r6363
	br          .L1478

.L1477:
	load.64*    %r6364 <- 0[ls]
	load.64*    %r6365 <- 64[%r6364]
	push.64*    %r6365
	call.32     %r6366 <- luaZ_fill
	phisrc.32   %phi276 <- %r6366
	br          .L1478

.L1478:
	phi.32      %r6367 <- %phi275, %phi276
	load.64*    %r6368 <- 0[ls]
	store.32    %r6367 -> 0[%r6368]
	br          .L1474

.L1474:
	call.64*    %r6369 <- __ctype_b_loc
	load.64*    %r6370 <- 0[%r6369]
	load.64*    %r6371 <- 0[ls]
	load.32     %r6372 <- 0[%r6371]
	scast.32    %r6373 <- (32) %r6372
	scast.64    %r6374 <- (32) %r6373
	muls.64     %r6375 <- %r6374, $2
	add.64*     %r6376 <- %r6370, %r6375
	load.16     %r6377 <- 0[%r6376]
	cast.32     %r6378 <- (16) %r6377
	and.32      %r6379 <- %r6378, $8
	cbr         %r6379, .L1473, .L1479

.L1479:
	load.64*    %r6380 <- 0[ls]
	load.32     %r6381 <- 0[%r6380]
	seteq.32    %r6382 <- %r6381, $95
	cbr         %r6382, .L1473, .L1475

.L1475:
	load.64*    %r6383 <- 0[ls]
	load.64*    %r6384 <- 0[ls]
	load.64*    %r6385 <- 72[%r6384]
	load.64*    %r6386 <- 0[%r6385]
	load.64*    %r6387 <- 0[ls]
	load.64*    %r6388 <- 72[%r6387]
	load.64     %r6389 <- 8[%r6388]
	push.64*    %r6383
	push.64*    %r6386
	push.64     %r6389
	call.64*    %r6390 <- luaX_newstring
	store.64*   %r6390 -> 0[ts]
	load.64*    %r6391 <- 0[ts]
	load.8      %r6392 <- 10[%r6391]
	cast.32     %r6393 <- (8) %r6392
	setgt.32    %r6394 <- %r6393, $0
	cbr         %r6394, .L1480, .L1481

.L1480:
	load.64*    %r6395 <- 0[ts]
	load.8      %r6396 <- 10[%r6395]
	cast.32     %r6397 <- (8) %r6396
	sub.32      %r6398 <- %r6397, $1
	add.32      %r6399 <- %r6398, $257
	phisrc.32   %phi277(return) <- %r6399
	br          .L1390

.L1481:
	load.64*    %r6400 <- 0[ts]
	load.64*    %r6401 <- 0[seminfo]
	store.64*   %r6400 -> 0[%r6401]
	phisrc.32   %phi278(return) <- $285
	br          .L1390

.L1471:
	load.64*    %r6402 <- 0[ls]
	load.32     %r6403 <- 0[%r6402]
	store.32    %r6403 -> 0[c]
	load.64*    %r6404 <- 0[ls]
	load.64*    %r6405 <- 64[%r6404]
	load.64     %r6406 <- 0[%r6405]
	sub.64      %r6407 <- %r6406, $1
	store.64    %r6407 -> 0[%r6405]
	seta.32     %r6408 <- %r6406, $0
	cbr         %r6408, .L1484, .L1485

.L1484:
	load.64*    %r6409 <- 0[ls]
	load.64*    %r6410 <- 64[%r6409]
	load.64*    %r6411 <- 8[%r6410]
	add.64*     %r6412 <- %r6411, $1
	store.64*   %r6412 -> 8[%r6410]
	load.8      %r6413 <- 0[%r6411]
	scast.8     %r6414 <- (8) %r6413
	cast.32     %r6415 <- (8) %r6414
	phisrc.32   %phi279 <- %r6415
	br          .L1486

.L1485:
	load.64*    %r6416 <- 0[ls]
	load.64*    %r6417 <- 64[%r6416]
	push.64*    %r6417
	call.32     %r6418 <- luaZ_fill
	phisrc.32   %phi280 <- %r6418
	br          .L1486

.L1486:
	phi.32      %r6419 <- %phi279, %phi280
	load.64*    %r6420 <- 0[ls]
	store.32    %r6419 -> 0[%r6420]
	load.32     %r6421 <- 0[c]
	phisrc.32   %phi281(return) <- %r6421
	br          .L1390

.L1368:
	br          .L1370

.L1390:
	phi.32      %r6035 <- %phi233(return), %phi238(return), %phi239(return), %phi242(return), %phi245(return), %phi248(return), %phi251(return), %phi254(return), %phi257(return), %phi260(return), %phi263(return), %phi264(return), %phi267(return), %phi268(return), %phi269(return), %phi270(return), %phi271(return), %phi274(return), %phi277(return), %phi278(return), %phi281(return)
	ret.32      %r6035


luaX_next:
.L1487:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r6422 <- 0[ls]
	load.32     %r6423 <- 4[%r6422]
	load.64*    %r6424 <- 0[ls]
	store.32    %r6423 -> 8[%r6424]
	load.64*    %r6425 <- 0[ls]
	load.32     %r6426 <- 32[%r6425]
	setne.32    %r6427 <- %r6426, $287
	cbr         %r6427, .L1488, .L1489

.L1488:
	load.64*    %r6428 <- 0[ls]
	add.64*     %r6429 <- %r6428, $16
	cast.64*    %r6430 <- (64) %r6429
	load.64*    %r6431 <- 0[ls]
	add.64*     %r6432 <- %r6431, $32
	cast.64*    %r6433 <- (64) %r6432
	push.64*    %r6430
	push.64*    %r6433
	push.64     $16
	call.64*    %r6434 <- memcpy
	load.64*    %r6435 <- 0[ls]
	store.32    $287 -> 32[%r6435]
	br          .L1490

.L1489:
	load.64*    %r6436 <- 0[ls]
	load.64*    %r6437 <- 0[ls]
	add.64*     %r6438 <- %r6437, $16
	add.64*     %r6439 <- %r6438, $8
	push.64*    %r6436
	push.64*    %r6439
	call.32     %r6440 <- llex
	load.64*    %r6441 <- 0[ls]
	store.32    %r6440 -> 16[%r6441]
	br          .L1490

.L1490:
	ret


luaX_lookahead:
.L1491:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r6442 <- 0[ls]
	load.64*    %r6443 <- 0[ls]
	add.64*     %r6444 <- %r6443, $32
	add.64*     %r6445 <- %r6444, $8
	push.64*    %r6442
	push.64*    %r6445
	call.32     %r6446 <- llex
	load.64*    %r6447 <- 0[ls]
	store.32    %r6446 -> 32[%r6447]
	br          .L1492

.L1492:
	ret


isnumeral:
.L1493:
	<entry-point>
	store.64*   %arg1 -> 0[e]
	load.64*    %r6448 <- 0[e]
	load.32     %r6449 <- 0[%r6448]
	scast.32    %r6450 <- (32) %r6449
	seteq.32    %r6451 <- %r6450, $5
	cbr         %r6451, .L1498, .L1496

.L1498:
	load.64*    %r6452 <- 0[e]
	load.32     %r6453 <- 16[%r6452]
	seteq.32    %r6454 <- %r6453, $0xffffffff
	cbr         %r6454, .L1495, .L1496

.L1495:
	load.64*    %r6455 <- 0[e]
	load.32     %r6456 <- 20[%r6455]
	seteq.32    %r6457 <- %r6456, $0xffffffff
	phisrc.32   %phi282 <- %r6457
	br          .L1497

.L1496:
	phisrc.32   %phi283 <- $0
	br          .L1497

.L1497:
	phi.32      %r6458 <- %phi282, %phi283
	phisrc.32   %phi284(return) <- %r6458
	br          .L1494

.L1494:
	phi.32      %r6459 <- %phi284(return)
	ret.32      %r6458


luaK_nil:
.L1499:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[from]
	store.32    %arg3 -> 0[n]
	load.64*    %r6460 <- 0[fs]
	load.32     %r6461 <- 48[%r6460]
	load.64*    %r6462 <- 0[fs]
	load.32     %r6463 <- 52[%r6462]
	setgt.32    %r6464 <- %r6461, %r6463
	cbr         %r6464, .L1500, .L1501

.L1500:
	load.64*    %r6465 <- 0[fs]
	load.32     %r6466 <- 48[%r6465]
	seteq.32    %r6467 <- %r6466, $0
	cbr         %r6467, .L1502, .L1503

.L1502:
	load.32     %r6468 <- 0[from]
	load.64*    %r6469 <- 0[fs]
	load.8      %r6470 <- 74[%r6469]
	cast.32     %r6471 <- (8) %r6470
	setge.32    %r6472 <- %r6468, %r6471
	cbr         %r6472, .L1504, .L1505

.L1504:
	br          .L1506

.L1505:
	br          .L1507

.L1503:
	load.64*    %r6473 <- 0[fs]
	load.64*    %r6474 <- 0[%r6473]
	load.64*    %r6475 <- 24[%r6474]
	load.64*    %r6476 <- 0[fs]
	load.32     %r6477 <- 48[%r6476]
	sub.32      %r6478 <- %r6477, $1
	scast.64    %r6479 <- (32) %r6478
	muls.64     %r6480 <- %r6479, $4
	add.64*     %r6481 <- %r6475, %r6480
	store.64*   %r6481 -> 0[previous]
	load.64*    %r6482 <- 0[previous]
	load.32     %r6483 <- 0[%r6482]
	lsr.32      %r6484 <- %r6483, $0
	and.32      %r6485 <- %r6484, $63
	cast.32     %r6486 <- (32) %r6485
	scast.32    %r6487 <- (32) %r6486
	seteq.32    %r6488 <- %r6487, $3
	cbr         %r6488, .L1508, .L1509

.L1508:
	load.64*    %r6489 <- 0[previous]
	load.32     %r6490 <- 0[%r6489]
	lsr.32      %r6491 <- %r6490, $6
	and.32      %r6492 <- %r6491, $255
	cast.32     %r6493 <- (32) %r6492
	store.32    %r6493 -> 0[pfrom]
	load.64*    %r6494 <- 0[previous]
	load.32     %r6495 <- 0[%r6494]
	lsr.32      %r6496 <- %r6495, $23
	and.32      %r6497 <- %r6496, $511
	cast.32     %r6498 <- (32) %r6497
	store.32    %r6498 -> 0[pto]
	load.32     %r6499 <- 0[pfrom]
	load.32     %r6500 <- 0[from]
	setle.32    %r6501 <- %r6499, %r6500
	setne.1     %r6502 <- %r6501, $0
	load.32     %r6503 <- 0[from]
	load.32     %r6504 <- 0[pto]
	add.32      %r6505 <- %r6504, $1
	setle.32    %r6506 <- %r6503, %r6505
	setne.1     %r6507 <- %r6506, $0
	and-bool.1  %r6508 <- %r6502, %r6507
	cast.32     %r6509 <- (1) %r6508
	cbr         %r6509, .L1510, .L1511

.L1510:
	load.32     %r6510 <- 0[from]
	load.32     %r6511 <- 0[n]
	add.32      %r6512 <- %r6510, %r6511
	sub.32      %r6513 <- %r6512, $1
	load.32     %r6514 <- 0[pto]
	setgt.32    %r6515 <- %r6513, %r6514
	cbr         %r6515, .L1512, .L1513

.L1512:
	load.64*    %r6516 <- 0[previous]
	load.32     %r6517 <- 0[%r6516]
	and.32      %r6518 <- %r6517, $0x7fffff
	load.32     %r6519 <- 0[from]
	load.32     %r6520 <- 0[n]
	add.32      %r6521 <- %r6519, %r6520
	sub.32      %r6522 <- %r6521, $1
	scast.32    %r6523 <- (32) %r6522
	shl.32      %r6524 <- %r6523, $23
	and.32      %r6525 <- %r6524, $0xff800000
	or.32       %r6526 <- %r6518, %r6525
	load.64*    %r6527 <- 0[previous]
	store.32    %r6526 -> 0[%r6527]
	br          .L1513

.L1513:
	br          .L1506

.L1511:
	br          .L1509

.L1509:
	br          .L1507

.L1507:
	br          .L1501

.L1501:
	load.64*    %r6528 <- 0[fs]
	load.32     %r6529 <- 0[from]
	load.32     %r6530 <- 0[from]
	load.32     %r6531 <- 0[n]
	add.32      %r6532 <- %r6530, %r6531
	sub.32      %r6533 <- %r6532, $1
	push.64*    %r6528
	push.32     $3
	push.32     %r6529
	push.32     %r6533
	push.32     $0
	call.32     %r6534 <- luaK_codeABC
	br          .L1506

.L1506:
	ret


luaK_jump:
.L1514:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6535 <- 0[fs]
	load.32     %r6536 <- 56[%r6535]
	store.32    %r6536 -> 0[jpc]
	load.64*    %r6537 <- 0[fs]
	store.32    $0xffffffff -> 56[%r6537]
	load.64*    %r6538 <- 0[fs]
	push.64*    %r6538
	push.32     $22
	push.32     $0
	push.32     $0x1fffe
	call.32     %r6539 <- luaK_codeABx
	store.32    %r6539 -> 0[j]
	load.64*    %r6540 <- 0[fs]
	symaddr.64* %r6541 <- j
	load.32     %r6542 <- 0[jpc]
	push.64*    %r6540
	push.64*    %r6541
	push.32     %r6542
	call        luaK_concat
	load.32     %r6543 <- 0[j]
	phisrc.32   %phi285(return) <- %r6543
	br          .L1515

.L1515:
	phi.32      %r6544 <- %phi285(return)
	ret.32      %r6543


luaK_ret:
.L1516:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[first]
	store.32    %arg3 -> 0[nret]
	load.64*    %r6545 <- 0[fs]
	load.32     %r6546 <- 0[first]
	load.32     %r6547 <- 0[nret]
	add.32      %r6548 <- %r6547, $1
	push.64*    %r6545
	push.32     $30
	push.32     %r6546
	push.32     %r6548
	push.32     $0
	call.32     %r6549 <- luaK_codeABC
	br          .L1517

.L1517:
	ret


condjump:
.L1518:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.32    %arg3 -> 0[A]
	store.32    %arg4 -> 0[B]
	store.32    %arg5 -> 0[C]
	load.64*    %r6550 <- 0[fs]
	load.32     %r6551 <- 0[op]
	load.32     %r6552 <- 0[A]
	load.32     %r6553 <- 0[B]
	load.32     %r6554 <- 0[C]
	push.64*    %r6550
	push.32     %r6551
	push.32     %r6552
	push.32     %r6553
	push.32     %r6554
	call.32     %r6555 <- luaK_codeABC
	load.64*    %r6556 <- 0[fs]
	push.64*    %r6556
	call.32     %r6557 <- luaK_jump
	phisrc.32   %phi286(return) <- %r6557
	br          .L1519

.L1519:
	phi.32      %r6558 <- %phi286(return)
	ret.32      %r6557


fixjump:
.L1520:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	store.32    %arg3 -> 0[dest]
	load.64*    %r6559 <- 0[fs]
	load.64*    %r6560 <- 0[%r6559]
	load.64*    %r6561 <- 24[%r6560]
	load.32     %r6562 <- 0[pc]
	scast.64    %r6563 <- (32) %r6562
	muls.64     %r6564 <- %r6563, $4
	add.64*     %r6565 <- %r6561, %r6564
	store.64*   %r6565 -> 0[jmp]
	load.32     %r6566 <- 0[dest]
	load.32     %r6567 <- 0[pc]
	add.32      %r6568 <- %r6567, $1
	sub.32      %r6569 <- %r6566, %r6568
	store.32    %r6569 -> 0[offset]
	load.32     %r6570 <- 0[offset]
	push.32     %r6570
	call.32     %r6571 <- abs
	setgt.32    %r6572 <- %r6571, $0x1ffff
	cbr         %r6572, .L1521, .L1522

.L1521:
	load.64*    %r6573 <- 0[fs]
	load.64*    %r6574 <- 24[%r6573]
	symaddr.64* %r6575 <- <anon symbol:0x1a752c0>
	push.64*    %r6574
	push.64*    %r6575
	call        luaX_syntaxerror
	br          .L1522

.L1522:
	load.64*    %r6576 <- 0[jmp]
	load.32     %r6577 <- 0[%r6576]
	and.32      %r6578 <- %r6577, $0x3fff
	load.32     %r6579 <- 0[offset]
	add.32      %r6580 <- %r6579, $0x1ffff
	scast.32    %r6581 <- (32) %r6580
	cast.32     %r6582 <- (32) %r6581
	shl.32      %r6583 <- %r6582, $14
	and.32      %r6584 <- %r6583, $0xffffc000
	or.32       %r6585 <- %r6578, %r6584
	load.64*    %r6586 <- 0[jmp]
	store.32    %r6585 -> 0[%r6586]
	br          .L1523

.L1523:
	ret


luaK_getlabel:
.L1524:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6587 <- 0[fs]
	load.32     %r6588 <- 48[%r6587]
	load.64*    %r6589 <- 0[fs]
	store.32    %r6588 -> 52[%r6589]
	load.64*    %r6590 <- 0[fs]
	load.32     %r6591 <- 48[%r6590]
	phisrc.32   %phi287(return) <- %r6591
	br          .L1525

.L1525:
	phi.32      %r6592 <- %phi287(return)
	ret.32      %r6591


getjump:
.L1526:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	load.64*    %r6593 <- 0[fs]
	load.64*    %r6594 <- 0[%r6593]
	load.64*    %r6595 <- 24[%r6594]
	load.32     %r6596 <- 0[pc]
	scast.64    %r6597 <- (32) %r6596
	muls.64     %r6598 <- %r6597, $4
	add.64*     %r6599 <- %r6595, %r6598
	load.32     %r6600 <- 0[%r6599]
	lsr.32      %r6601 <- %r6600, $14
	and.32      %r6602 <- %r6601, $0x3ffff
	cast.32     %r6603 <- (32) %r6602
	sub.32      %r6604 <- %r6603, $0x1ffff
	store.32    %r6604 -> 0[offset]
	load.32     %r6605 <- 0[offset]
	seteq.32    %r6606 <- %r6605, $0xffffffff
	cbr         %r6606, .L1527, .L1528

.L1527:
	phisrc.32   %phi288(return) <- $0xffffffff
	br          .L1529

.L1528:
	load.32     %r6608 <- 0[pc]
	add.32      %r6609 <- %r6608, $1
	load.32     %r6610 <- 0[offset]
	add.32      %r6611 <- %r6609, %r6610
	phisrc.32   %phi289(return) <- %r6611
	br          .L1529

.L1529:
	phi.32      %r6607 <- %phi288(return), %phi289(return)
	ret.32      %r6607


getjumpcontrol:
.L1531:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	load.64*    %r6612 <- 0[fs]
	load.64*    %r6613 <- 0[%r6612]
	load.64*    %r6614 <- 24[%r6613]
	load.32     %r6615 <- 0[pc]
	scast.64    %r6616 <- (32) %r6615
	muls.64     %r6617 <- %r6616, $4
	add.64*     %r6618 <- %r6614, %r6617
	store.64*   %r6618 -> 0[pi]
	load.32     %r6619 <- 0[pc]
	setge.32    %r6620 <- %r6619, $1
	cbr         %r6620, .L1534, .L1533

.L1534:
	symaddr.64* %r6621 <- luaP_opmodes
	load.64*    %r6622 <- 0[pi]
	sub.64*     %r6623 <- %r6622, $4
	load.32     %r6624 <- 0[%r6623]
	lsr.32      %r6625 <- %r6624, $0
	and.32      %r6626 <- %r6625, $63
	cast.32     %r6627 <- (32) %r6626
	scast.64    %r6628 <- (32) %r6627
	add.64*     %r6629 <- %r6621, %r6628
	load.8      %r6630 <- 0[%r6629]
	cast.32     %r6631 <- (8) %r6630
	and.32      %r6632 <- %r6631, $128
	cbr         %r6632, .L1532, .L1533

.L1532:
	load.64*    %r6633 <- 0[pi]
	sub.64*     %r6634 <- %r6633, $4
	phisrc.64*  %phi290(return) <- %r6634
	br          .L1535

.L1533:
	load.64*    %r6636 <- 0[pi]
	phisrc.64*  %phi291(return) <- %r6636
	br          .L1535

.L1535:
	phi.64*     %r6635 <- %phi290(return), %phi291(return)
	ret.64*     %r6635


need_value:
.L1537:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	br          .L1541

.L1541:
	load.32     %r6637 <- 0[list]
	setne.32    %r6638 <- %r6637, $0xffffffff
	cbr         %r6638, .L1538, .L1540

.L1538:
	load.64*    %r6639 <- 0[fs]
	load.32     %r6640 <- 0[list]
	push.64*    %r6639
	push.32     %r6640
	call.64*    %r6641 <- getjumpcontrol
	load.32     %r6642 <- 0[%r6641]
	store.32    %r6642 -> 0[i]
	load.32     %r6643 <- 0[i]
	lsr.32      %r6644 <- %r6643, $0
	and.32      %r6645 <- %r6644, $63
	cast.32     %r6646 <- (32) %r6645
	scast.32    %r6647 <- (32) %r6646
	setne.32    %r6648 <- %r6647, $27
	cbr         %r6648, .L1542, .L1543

.L1542:
	phisrc.32   %phi292(return) <- $1
	br          .L1544

.L1543:
	br          .L1539

.L1539:
	load.64*    %r6650 <- 0[fs]
	load.32     %r6651 <- 0[list]
	push.64*    %r6650
	push.32     %r6651
	call.32     %r6652 <- getjump
	store.32    %r6652 -> 0[list]
	br          .L1541

.L1540:
	phisrc.32   %phi293(return) <- $0
	br          .L1544

.L1544:
	phi.32      %r6649 <- %phi292(return), %phi293(return)
	ret.32      %r6649


patchtestreg:
.L1545:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[node]
	store.32    %arg3 -> 0[reg]
	load.64*    %r6653 <- 0[fs]
	load.32     %r6654 <- 0[node]
	push.64*    %r6653
	push.32     %r6654
	call.64*    %r6655 <- getjumpcontrol
	store.64*   %r6655 -> 0[i]
	load.64*    %r6656 <- 0[i]
	load.32     %r6657 <- 0[%r6656]
	lsr.32      %r6658 <- %r6657, $0
	and.32      %r6659 <- %r6658, $63
	cast.32     %r6660 <- (32) %r6659
	scast.32    %r6661 <- (32) %r6660
	setne.32    %r6662 <- %r6661, $27
	cbr         %r6662, .L1546, .L1547

.L1546:
	phisrc.32   %phi294(return) <- $0
	br          .L1548

.L1547:
	load.32     %r6664 <- 0[reg]
	setne.32    %r6665 <- %r6664, $255
	cbr         %r6665, .L1551, .L1550

.L1551:
	load.32     %r6666 <- 0[reg]
	load.64*    %r6667 <- 0[i]
	load.32     %r6668 <- 0[%r6667]
	lsr.32      %r6669 <- %r6668, $23
	and.32      %r6670 <- %r6669, $511
	cast.32     %r6671 <- (32) %r6670
	setne.32    %r6672 <- %r6666, %r6671
	cbr         %r6672, .L1549, .L1550

.L1549:
	load.64*    %r6673 <- 0[i]
	load.32     %r6674 <- 0[%r6673]
	and.32      %r6675 <- %r6674, $0xffffc03f
	load.32     %r6676 <- 0[reg]
	scast.32    %r6677 <- (32) %r6676
	shl.32      %r6678 <- %r6677, $6
	and.32      %r6679 <- %r6678, $0x3fc0
	or.32       %r6680 <- %r6675, %r6679
	load.64*    %r6681 <- 0[i]
	store.32    %r6680 -> 0[%r6681]
	br          .L1552

.L1550:
	load.64*    %r6682 <- 0[i]
	load.32     %r6683 <- 0[%r6682]
	lsr.32      %r6684 <- %r6683, $23
	and.32      %r6685 <- %r6684, $511
	cast.32     %r6686 <- (32) %r6685
	scast.32    %r6687 <- (32) %r6686
	shl.32      %r6688 <- %r6687, $6
	or.32       %r6689 <- $26, %r6688
	or.32       %r6690 <- %r6689, $0
	load.64*    %r6691 <- 0[i]
	load.32     %r6692 <- 0[%r6691]
	lsr.32      %r6693 <- %r6692, $14
	and.32      %r6694 <- %r6693, $511
	cast.32     %r6695 <- (32) %r6694
	scast.32    %r6696 <- (32) %r6695
	shl.32      %r6697 <- %r6696, $14
	or.32       %r6698 <- %r6690, %r6697
	load.64*    %r6699 <- 0[i]
	store.32    %r6698 -> 0[%r6699]
	br          .L1552

.L1552:
	phisrc.32   %phi295(return) <- $1
	br          .L1548

.L1548:
	phi.32      %r6663 <- %phi294(return), %phi295(return)
	ret.32      %r6663


removevalues:
.L1553:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	br          .L1557

.L1557:
	load.32     %r6700 <- 0[list]
	setne.32    %r6701 <- %r6700, $0xffffffff
	cbr         %r6701, .L1554, .L1556

.L1554:
	load.64*    %r6702 <- 0[fs]
	load.32     %r6703 <- 0[list]
	push.64*    %r6702
	push.32     %r6703
	push.32     $255
	call.32     %r6704 <- patchtestreg
	br          .L1555

.L1555:
	load.64*    %r6705 <- 0[fs]
	load.32     %r6706 <- 0[list]
	push.64*    %r6705
	push.32     %r6706
	call.32     %r6707 <- getjump
	store.32    %r6707 -> 0[list]
	br          .L1557

.L1556:
	ret


patchlistaux:
.L1558:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	store.32    %arg3 -> 0[vtarget]
	store.32    %arg4 -> 0[reg]
	store.32    %arg5 -> 0[dtarget]
	br          .L1562

.L1562:
	load.32     %r6708 <- 0[list]
	setne.32    %r6709 <- %r6708, $0xffffffff
	cbr         %r6709, .L1559, .L1561

.L1559:
	load.64*    %r6710 <- 0[fs]
	load.32     %r6711 <- 0[list]
	push.64*    %r6710
	push.32     %r6711
	call.32     %r6712 <- getjump
	store.32    %r6712 -> 0[next]
	load.64*    %r6713 <- 0[fs]
	load.32     %r6714 <- 0[list]
	load.32     %r6715 <- 0[reg]
	push.64*    %r6713
	push.32     %r6714
	push.32     %r6715
	call.32     %r6716 <- patchtestreg
	cbr         %r6716, .L1563, .L1564

.L1563:
	load.64*    %r6717 <- 0[fs]
	load.32     %r6718 <- 0[list]
	load.32     %r6719 <- 0[vtarget]
	push.64*    %r6717
	push.32     %r6718
	push.32     %r6719
	call        fixjump
	br          .L1565

.L1564:
	load.64*    %r6720 <- 0[fs]
	load.32     %r6721 <- 0[list]
	load.32     %r6722 <- 0[dtarget]
	push.64*    %r6720
	push.32     %r6721
	push.32     %r6722
	call        fixjump
	br          .L1565

.L1565:
	load.32     %r6723 <- 0[next]
	store.32    %r6723 -> 0[list]
	br          .L1560

.L1560:
	br          .L1562

.L1561:
	ret


dischargejpc:
.L1566:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6724 <- 0[fs]
	load.64*    %r6725 <- 0[fs]
	load.32     %r6726 <- 56[%r6725]
	load.64*    %r6727 <- 0[fs]
	load.32     %r6728 <- 48[%r6727]
	load.64*    %r6729 <- 0[fs]
	load.32     %r6730 <- 48[%r6729]
	push.64*    %r6724
	push.32     %r6726
	push.32     %r6728
	push.32     $255
	push.32     %r6730
	call        patchlistaux
	load.64*    %r6731 <- 0[fs]
	store.32    $0xffffffff -> 56[%r6731]
	br          .L1567

.L1567:
	ret


luaK_patchlist:
.L1568:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	store.32    %arg3 -> 0[target]
	load.32     %r6732 <- 0[target]
	load.64*    %r6733 <- 0[fs]
	load.32     %r6734 <- 48[%r6733]
	seteq.32    %r6735 <- %r6732, %r6734
	cbr         %r6735, .L1569, .L1570

.L1569:
	load.64*    %r6736 <- 0[fs]
	load.32     %r6737 <- 0[list]
	push.64*    %r6736
	push.32     %r6737
	call        luaK_patchtohere
	br          .L1571

.L1570:
	load.64*    %r6738 <- 0[fs]
	load.32     %r6739 <- 0[list]
	load.32     %r6740 <- 0[target]
	load.32     %r6741 <- 0[target]
	push.64*    %r6738
	push.32     %r6739
	push.32     %r6740
	push.32     $255
	push.32     %r6741
	call        patchlistaux
	br          .L1571

.L1571:
	ret


luaK_patchtohere:
.L1572:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	load.64*    %r6742 <- 0[fs]
	push.64*    %r6742
	call.32     %r6743 <- luaK_getlabel
	load.64*    %r6744 <- 0[fs]
	load.64*    %r6745 <- 0[fs]
	add.64*     %r6746 <- %r6745, $56
	load.32     %r6747 <- 0[list]
	push.64*    %r6744
	push.64*    %r6746
	push.32     %r6747
	call        luaK_concat
	br          .L1573

.L1573:
	ret


luaK_concat:
.L1574:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[l1]
	store.32    %arg3 -> 0[l2]
	load.32     %r6748 <- 0[l2]
	seteq.32    %r6749 <- %r6748, $0xffffffff
	cbr         %r6749, .L1575, .L1576

.L1575:
	br          .L1577

.L1576:
	load.64*    %r6750 <- 0[l1]
	load.32     %r6751 <- 0[%r6750]
	seteq.32    %r6752 <- %r6751, $0xffffffff
	cbr         %r6752, .L1579, .L1580

.L1579:
	load.32     %r6753 <- 0[l2]
	load.64*    %r6754 <- 0[l1]
	store.32    %r6753 -> 0[%r6754]
	br          .L1581

.L1580:
	load.64*    %r6755 <- 0[l1]
	load.32     %r6756 <- 0[%r6755]
	store.32    %r6756 -> 0[list]
	br          .L1585

.L1585:
	load.64*    %r6757 <- 0[fs]
	load.32     %r6758 <- 0[list]
	push.64*    %r6757
	push.32     %r6758
	call.32     %r6759 <- getjump
	store.32    %r6759 -> 0[next]
	setne.32    %r6760 <- %r6759, $0xffffffff
	cbr         %r6760, .L1582, .L1584

.L1582:
	load.32     %r6761 <- 0[next]
	store.32    %r6761 -> 0[list]
	br          .L1583

.L1583:
	br          .L1585

.L1584:
	load.64*    %r6762 <- 0[fs]
	load.32     %r6763 <- 0[list]
	load.32     %r6764 <- 0[l2]
	push.64*    %r6762
	push.32     %r6763
	push.32     %r6764
	call        fixjump
	br          .L1581

.L1581:
	br          .L1578

.L1578:
	br          .L1577

.L1577:
	ret


luaK_checkstack:
.L1586:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[n]
	load.64*    %r6765 <- 0[fs]
	load.32     %r6766 <- 60[%r6765]
	load.32     %r6767 <- 0[n]
	add.32      %r6768 <- %r6766, %r6767
	store.32    %r6768 -> 0[newstack]
	load.32     %r6769 <- 0[newstack]
	load.64*    %r6770 <- 0[fs]
	load.64*    %r6771 <- 0[%r6770]
	load.8      %r6772 <- 115[%r6771]
	cast.32     %r6773 <- (8) %r6772
	setgt.32    %r6774 <- %r6769, %r6773
	cbr         %r6774, .L1587, .L1588

.L1587:
	load.32     %r6775 <- 0[newstack]
	setge.32    %r6776 <- %r6775, $250
	cbr         %r6776, .L1589, .L1590

.L1589:
	load.64*    %r6777 <- 0[fs]
	load.64*    %r6778 <- 24[%r6777]
	symaddr.64* %r6779 <- <anon symbol:0x1a780f8>
	push.64*    %r6778
	push.64*    %r6779
	call        luaX_syntaxerror
	br          .L1590

.L1590:
	load.32     %r6780 <- 0[newstack]
	scast.8     %r6781 <- (32) %r6780
	load.64*    %r6782 <- 0[fs]
	load.64*    %r6783 <- 0[%r6782]
	store.8     %r6781 -> 115[%r6783]
	br          .L1588

.L1588:
	ret


luaK_reserveregs:
.L1591:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[n]
	load.64*    %r6784 <- 0[fs]
	load.32     %r6785 <- 0[n]
	push.64*    %r6784
	push.32     %r6785
	call        luaK_checkstack
	load.32     %r6786 <- 0[n]
	load.64*    %r6787 <- 0[fs]
	load.32     %r6788 <- 60[%r6787]
	scast.32    %r6789 <- (32) %r6788
	add.32      %r6790 <- %r6789, %r6786
	scast.32    %r6791 <- (32) %r6790
	store.32    %r6791 -> 60[%r6787]
	br          .L1592

.L1592:
	ret


freereg:
.L1593:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[reg]
	load.32     %r6792 <- 0[reg]
	and.32      %r6793 <- %r6792, $256
	cbr         %r6793, .L1595, .L1596

.L1596:
	load.32     %r6794 <- 0[reg]
	load.64*    %r6795 <- 0[fs]
	load.8      %r6796 <- 74[%r6795]
	cast.32     %r6797 <- (8) %r6796
	setge.32    %r6798 <- %r6794, %r6797
	cbr         %r6798, .L1594, .L1595

.L1594:
	load.64*    %r6799 <- 0[fs]
	load.32     %r6800 <- 60[%r6799]
	sub.32      %r6801 <- %r6800, $1
	store.32    %r6801 -> 60[%r6799]
	br          .L1595

.L1595:
	ret


freeexp:
.L1597:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r6802 <- 0[e]
	load.32     %r6803 <- 0[%r6802]
	scast.32    %r6804 <- (32) %r6803
	seteq.32    %r6805 <- %r6804, $12
	cbr         %r6805, .L1598, .L1599

.L1598:
	load.64*    %r6806 <- 0[fs]
	load.64*    %r6807 <- 0[e]
	load.32     %r6808 <- 8[%r6807]
	push.64*    %r6806
	push.32     %r6808
	call        freereg
	br          .L1599

.L1599:
	ret


addk:
.L1600:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[k]
	store.64*   %arg3 -> 0[v]
	load.64*    %r6809 <- 0[fs]
	load.64*    %r6810 <- 32[%r6809]
	store.64*   %r6810 -> 0[L]
	load.64*    %r6811 <- 0[L]
	load.64*    %r6812 <- 0[fs]
	load.64*    %r6813 <- 8[%r6812]
	load.64*    %r6814 <- 0[k]
	push.64*    %r6811
	push.64*    %r6813
	push.64*    %r6814
	call.64*    %r6815 <- luaH_set
	store.64*   %r6815 -> 0[idx]
	load.64*    %r6816 <- 0[fs]
	load.64*    %r6817 <- 0[%r6816]
	store.64*   %r6817 -> 0[f]
	load.64*    %r6818 <- 0[f]
	load.32     %r6819 <- 76[%r6818]
	store.32    %r6819 -> 0[oldsize]
	load.64*    %r6820 <- 0[idx]
	load.32     %r6821 <- 8[%r6820]
	seteq.32    %r6822 <- %r6821, $3
	cbr         %r6822, .L1601, .L1602

.L1601:
	load.64*    %r6823 <- 0[idx]
	load.f64    %r6824 <- 0[%r6823]
	cast.32     %r6825 <- (64) %r6824
	phisrc.32   %phi296(return) <- %r6825
	br          .L1603

.L1602:
	load.64*    %r6827 <- 0[idx]
	store.64*   %r6827 -> 0[i_o]
	load.64*    %r6828 <- 0[fs]
	load.32     %r6829 <- 64[%r6828]
	fpcast.f64  %r6830 <- (32) %r6829
	load.64*    %r6831 <- 0[i_o]
	store.f64   %r6830 -> 0[%r6831]
	load.64*    %r6832 <- 0[i_o]
	store.32    $3 -> 8[%r6832]
	load.64*    %r6833 <- 0[fs]
	load.32     %r6834 <- 64[%r6833]
	add.32      %r6835 <- %r6834, $1
	load.64*    %r6836 <- 0[f]
	load.32     %r6837 <- 76[%r6836]
	setgt.32    %r6838 <- %r6835, %r6837
	cbr         %r6838, .L1605, .L1606

.L1605:
	load.64*    %r6839 <- 0[L]
	load.64*    %r6840 <- 0[f]
	load.64*    %r6841 <- 16[%r6840]
	cast.64*    %r6842 <- (64) %r6841
	load.64*    %r6843 <- 0[f]
	add.64*     %r6844 <- %r6843, $76
	symaddr.64* %r6845 <- <anon symbol:0x1a7aa08>
	push.64*    %r6839
	push.64*    %r6842
	push.64*    %r6844
	push.64     $16
	push.32     $0x3ffff
	push.64*    %r6845
	call.64*    %r6846 <- luaM_growaux_
	ptrcast.64* %r6847 <- (64) %r6846
	load.64*    %r6848 <- 0[f]
	store.64*   %r6847 -> 16[%r6848]
	br          .L1606

.L1606:
	br          .L1610

.L1610:
	load.32     %r6849 <- 0[oldsize]
	load.64*    %r6850 <- 0[f]
	load.32     %r6851 <- 76[%r6850]
	setlt.32    %r6852 <- %r6849, %r6851
	cbr         %r6852, .L1607, .L1609

.L1607:
	load.64*    %r6853 <- 0[f]
	load.64*    %r6854 <- 16[%r6853]
	load.32     %r6855 <- 0[oldsize]
	add.32      %r6856 <- %r6855, $1
	store.32    %r6856 -> 0[oldsize]
	scast.64    %r6857 <- (32) %r6855
	muls.64     %r6858 <- %r6857, $16
	add.64*     %r6859 <- %r6854, %r6858
	store.32    $0 -> 8[%r6859]
	br          .L1608

.L1608:
	br          .L1610

.L1609:
	load.64*    %r6860 <- 0[v]
	store.64*   %r6860 -> 0[o2]
	load.64*    %r6861 <- 0[f]
	load.64*    %r6862 <- 16[%r6861]
	load.64*    %r6863 <- 0[fs]
	load.32     %r6864 <- 64[%r6863]
	scast.64    %r6865 <- (32) %r6864
	muls.64     %r6866 <- %r6865, $16
	add.64*     %r6867 <- %r6862, %r6866
	store.64*   %r6867 -> 0[o1]
	load.64*    %r6868 <- 0[o2]
	load.f64    %r6869 <- 0[%r6868]
	fpcast.f64  %r6870 <- (64) %r6869
	load.64*    %r6871 <- 0[o1]
	store.f64   %r6870 -> 0[%r6871]
	load.64*    %r6872 <- 0[o2]
	load.32     %r6873 <- 8[%r6872]
	scast.32    %r6874 <- (32) %r6873
	load.64*    %r6875 <- 0[o1]
	store.32    %r6874 -> 8[%r6875]
	load.64*    %r6876 <- 0[v]
	load.32     %r6877 <- 8[%r6876]
	setge.32    %r6878 <- %r6877, $4
	cbr         %r6878, .L1614, .L1612

.L1614:
	load.64*    %r6879 <- 0[v]
	load.64*    %r6880 <- 0[%r6879]
	load.8      %r6881 <- 9[%r6880]
	cast.32     %r6882 <- (8) %r6881
	and.32      %r6883 <- %r6882, $3
	cbr         %r6883, .L1613, .L1612

.L1613:
	load.64*    %r6884 <- 0[f]
	ptrcast.64* %r6885 <- (64) %r6884
	load.8      %r6886 <- 9[%r6885]
	cast.32     %r6887 <- (8) %r6886
	and.32      %r6888 <- %r6887, $4
	cbr         %r6888, .L1611, .L1612

.L1611:
	load.64*    %r6889 <- 0[L]
	load.64*    %r6890 <- 0[f]
	ptrcast.64* %r6891 <- (64) %r6890
	load.64*    %r6892 <- 0[v]
	load.64*    %r6893 <- 0[%r6892]
	push.64*    %r6889
	push.64*    %r6891
	push.64*    %r6893
	call        luaC_barrierf
	br          .L1612

.L1612:
	load.64*    %r6894 <- 0[fs]
	load.32     %r6895 <- 64[%r6894]
	add.32      %r6896 <- %r6895, $1
	store.32    %r6896 -> 64[%r6894]
	phisrc.32   %phi297(return) <- %r6895
	br          .L1603

.L1603:
	phi.32      %r6826 <- %phi296(return), %phi297(return)
	ret.32      %r6826


luaK_stringK:
.L1615:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[s]
	symaddr.64* %r6897 <- o
	store.64*   %r6897 -> 0[i_o]
	load.64*    %r6898 <- 0[s]
	ptrcast.64* %r6899 <- (64) %r6898
	load.64*    %r6900 <- 0[i_o]
	store.64*   %r6899 -> 0[%r6900]
	load.64*    %r6901 <- 0[i_o]
	store.32    $4 -> 8[%r6901]
	load.64*    %r6902 <- 0[fs]
	symaddr.64* %r6903 <- o
	symaddr.64* %r6904 <- o
	push.64*    %r6902
	push.64*    %r6903
	push.64*    %r6904
	call.32     %r6905 <- addk
	phisrc.32   %phi298(return) <- %r6905
	br          .L1616

.L1616:
	phi.32      %r6906 <- %phi298(return)
	ret.32      %r6905


luaK_numberK:
.L1617:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.f64   %arg2 -> 0[r]
	symaddr.64* %r6907 <- o
	store.64*   %r6907 -> 0[i_o]
	load.f64    %r6908 <- 0[r]
	load.64*    %r6909 <- 0[i_o]
	store.f64   %r6908 -> 0[%r6909]
	load.64*    %r6910 <- 0[i_o]
	store.32    $3 -> 8[%r6910]
	load.64*    %r6911 <- 0[fs]
	symaddr.64* %r6912 <- o
	symaddr.64* %r6913 <- o
	push.64*    %r6911
	push.64*    %r6912
	push.64*    %r6913
	call.32     %r6914 <- addk
	phisrc.32   %phi299(return) <- %r6914
	br          .L1618

.L1618:
	phi.32      %r6915 <- %phi299(return)
	ret.32      %r6914


boolK:
.L1619:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[b]
	symaddr.64* %r6916 <- o
	store.64*   %r6916 -> 0[i_o]
	load.32     %r6917 <- 0[b]
	load.64*    %r6918 <- 0[i_o]
	store.32    %r6917 -> 0[%r6918]
	load.64*    %r6919 <- 0[i_o]
	store.32    $1 -> 8[%r6919]
	load.64*    %r6920 <- 0[fs]
	symaddr.64* %r6921 <- o
	symaddr.64* %r6922 <- o
	push.64*    %r6920
	push.64*    %r6921
	push.64*    %r6922
	call.32     %r6923 <- addk
	phisrc.32   %phi300(return) <- %r6923
	br          .L1620

.L1620:
	phi.32      %r6924 <- %phi300(return)
	ret.32      %r6923


nilK:
.L1621:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    $0 -> 8[v]
	symaddr.64* %r6925 <- k
	store.64*   %r6925 -> 0[i_o]
	load.64*    %r6926 <- 0[fs]
	load.64*    %r6927 <- 8[%r6926]
	ptrcast.64* %r6928 <- (64) %r6927
	load.64*    %r6929 <- 0[i_o]
	store.64*   %r6928 -> 0[%r6929]
	load.64*    %r6930 <- 0[i_o]
	store.32    $5 -> 8[%r6930]
	load.64*    %r6931 <- 0[fs]
	symaddr.64* %r6932 <- k
	symaddr.64* %r6933 <- v
	push.64*    %r6931
	push.64*    %r6932
	push.64*    %r6933
	call.32     %r6934 <- addk
	phisrc.32   %phi301(return) <- %r6934
	br          .L1622

.L1622:
	phi.32      %r6935 <- %phi301(return)
	ret.32      %r6934


luaK_setreturns:
.L1623:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r6936 <- 0[e]
	load.32     %r6937 <- 0[%r6936]
	scast.32    %r6938 <- (32) %r6937
	seteq.32    %r6939 <- %r6938, $13
	cbr         %r6939, .L1624, .L1625

.L1624:
	load.64*    %r6940 <- 0[fs]
	load.64*    %r6941 <- 0[%r6940]
	load.64*    %r6942 <- 24[%r6941]
	load.64*    %r6943 <- 0[e]
	load.32     %r6944 <- 8[%r6943]
	scast.64    %r6945 <- (32) %r6944
	muls.64     %r6946 <- %r6945, $4
	add.64*     %r6947 <- %r6942, %r6946
	load.32     %r6948 <- 0[%r6947]
	and.32      %r6949 <- %r6948, $0xff803fff
	load.32     %r6950 <- 0[nresults]
	add.32      %r6951 <- %r6950, $1
	scast.32    %r6952 <- (32) %r6951
	shl.32      %r6953 <- %r6952, $14
	and.32      %r6954 <- %r6953, $0x7fc000
	or.32       %r6955 <- %r6949, %r6954
	load.64*    %r6956 <- 0[fs]
	load.64*    %r6957 <- 0[%r6956]
	load.64*    %r6958 <- 24[%r6957]
	load.64*    %r6959 <- 0[e]
	load.32     %r6960 <- 8[%r6959]
	scast.64    %r6961 <- (32) %r6960
	muls.64     %r6962 <- %r6961, $4
	add.64*     %r6963 <- %r6958, %r6962
	store.32    %r6955 -> 0[%r6963]
	br          .L1626

.L1625:
	load.64*    %r6964 <- 0[e]
	load.32     %r6965 <- 0[%r6964]
	scast.32    %r6966 <- (32) %r6965
	seteq.32    %r6967 <- %r6966, $14
	cbr         %r6967, .L1627, .L1628

.L1627:
	load.64*    %r6968 <- 0[fs]
	load.64*    %r6969 <- 0[%r6968]
	load.64*    %r6970 <- 24[%r6969]
	load.64*    %r6971 <- 0[e]
	load.32     %r6972 <- 8[%r6971]
	scast.64    %r6973 <- (32) %r6972
	muls.64     %r6974 <- %r6973, $4
	add.64*     %r6975 <- %r6970, %r6974
	load.32     %r6976 <- 0[%r6975]
	and.32      %r6977 <- %r6976, $0x7fffff
	load.32     %r6978 <- 0[nresults]
	add.32      %r6979 <- %r6978, $1
	scast.32    %r6980 <- (32) %r6979
	shl.32      %r6981 <- %r6980, $23
	and.32      %r6982 <- %r6981, $0xff800000
	or.32       %r6983 <- %r6977, %r6982
	load.64*    %r6984 <- 0[fs]
	load.64*    %r6985 <- 0[%r6984]
	load.64*    %r6986 <- 24[%r6985]
	load.64*    %r6987 <- 0[e]
	load.32     %r6988 <- 8[%r6987]
	scast.64    %r6989 <- (32) %r6988
	muls.64     %r6990 <- %r6989, $4
	add.64*     %r6991 <- %r6986, %r6990
	store.32    %r6983 -> 0[%r6991]
	load.64*    %r6992 <- 0[fs]
	load.64*    %r6993 <- 0[%r6992]
	load.64*    %r6994 <- 24[%r6993]
	load.64*    %r6995 <- 0[e]
	load.32     %r6996 <- 8[%r6995]
	scast.64    %r6997 <- (32) %r6996
	muls.64     %r6998 <- %r6997, $4
	add.64*     %r6999 <- %r6994, %r6998
	load.32     %r7000 <- 0[%r6999]
	and.32      %r7001 <- %r7000, $0xffffc03f
	load.64*    %r7002 <- 0[fs]
	load.32     %r7003 <- 60[%r7002]
	scast.32    %r7004 <- (32) %r7003
	shl.32      %r7005 <- %r7004, $6
	and.32      %r7006 <- %r7005, $0x3fc0
	or.32       %r7007 <- %r7001, %r7006
	load.64*    %r7008 <- 0[fs]
	load.64*    %r7009 <- 0[%r7008]
	load.64*    %r7010 <- 24[%r7009]
	load.64*    %r7011 <- 0[e]
	load.32     %r7012 <- 8[%r7011]
	scast.64    %r7013 <- (32) %r7012
	muls.64     %r7014 <- %r7013, $4
	add.64*     %r7015 <- %r7010, %r7014
	store.32    %r7007 -> 0[%r7015]
	load.64*    %r7016 <- 0[fs]
	push.64*    %r7016
	push.32     $1
	call        luaK_reserveregs
	br          .L1628

.L1628:
	br          .L1626

.L1626:
	ret


luaK_setoneret:
.L1629:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7017 <- 0[e]
	load.32     %r7018 <- 0[%r7017]
	scast.32    %r7019 <- (32) %r7018
	seteq.32    %r7020 <- %r7019, $13
	cbr         %r7020, .L1630, .L1631

.L1630:
	load.64*    %r7021 <- 0[e]
	store.32    $12 -> 0[%r7021]
	load.64*    %r7022 <- 0[fs]
	load.64*    %r7023 <- 0[%r7022]
	load.64*    %r7024 <- 24[%r7023]
	load.64*    %r7025 <- 0[e]
	load.32     %r7026 <- 8[%r7025]
	scast.64    %r7027 <- (32) %r7026
	muls.64     %r7028 <- %r7027, $4
	add.64*     %r7029 <- %r7024, %r7028
	load.32     %r7030 <- 0[%r7029]
	lsr.32      %r7031 <- %r7030, $6
	and.32      %r7032 <- %r7031, $255
	cast.32     %r7033 <- (32) %r7032
	load.64*    %r7034 <- 0[e]
	store.32    %r7033 -> 8[%r7034]
	br          .L1632

.L1631:
	load.64*    %r7035 <- 0[e]
	load.32     %r7036 <- 0[%r7035]
	scast.32    %r7037 <- (32) %r7036
	seteq.32    %r7038 <- %r7037, $14
	cbr         %r7038, .L1633, .L1634

.L1633:
	load.64*    %r7039 <- 0[fs]
	load.64*    %r7040 <- 0[%r7039]
	load.64*    %r7041 <- 24[%r7040]
	load.64*    %r7042 <- 0[e]
	load.32     %r7043 <- 8[%r7042]
	scast.64    %r7044 <- (32) %r7043
	muls.64     %r7045 <- %r7044, $4
	add.64*     %r7046 <- %r7041, %r7045
	load.32     %r7047 <- 0[%r7046]
	and.32      %r7048 <- %r7047, $0x7fffff
	or.32       %r7049 <- %r7048, $0x1000000
	load.64*    %r7050 <- 0[fs]
	load.64*    %r7051 <- 0[%r7050]
	load.64*    %r7052 <- 24[%r7051]
	load.64*    %r7053 <- 0[e]
	load.32     %r7054 <- 8[%r7053]
	scast.64    %r7055 <- (32) %r7054
	muls.64     %r7056 <- %r7055, $4
	add.64*     %r7057 <- %r7052, %r7056
	store.32    %r7049 -> 0[%r7057]
	load.64*    %r7058 <- 0[e]
	store.32    $11 -> 0[%r7058]
	br          .L1634

.L1634:
	br          .L1632

.L1632:
	ret


luaK_dischargevars:
.L1635:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7059 <- 0[e]
	load.32     %r7060 <- 0[%r7059]
	switch.32   %r7060, 6 -> .L1637, 7 -> .L1638, 8 -> .L1639, 9 -> .L1640, 13 -> .L1642, 14 -> .L1641, default -> .L1643

.L1637:
	load.64*    %r7061 <- 0[e]
	store.32    $12 -> 0[%r7061]
	br          .L1636

.L1638:
	load.64*    %r7062 <- 0[fs]
	load.64*    %r7063 <- 0[e]
	load.32     %r7064 <- 8[%r7063]
	push.64*    %r7062
	push.32     $4
	push.32     $0
	push.32     %r7064
	push.32     $0
	call.32     %r7065 <- luaK_codeABC
	load.64*    %r7066 <- 0[e]
	store.32    %r7065 -> 8[%r7066]
	load.64*    %r7067 <- 0[e]
	store.32    $11 -> 0[%r7067]
	br          .L1636

.L1639:
	load.64*    %r7068 <- 0[fs]
	load.64*    %r7069 <- 0[e]
	load.32     %r7070 <- 8[%r7069]
	scast.32    %r7071 <- (32) %r7070
	push.64*    %r7068
	push.32     $5
	push.32     $0
	push.32     %r7071
	call.32     %r7072 <- luaK_codeABx
	load.64*    %r7073 <- 0[e]
	store.32    %r7072 -> 8[%r7073]
	load.64*    %r7074 <- 0[e]
	store.32    $11 -> 0[%r7074]
	br          .L1636

.L1640:
	load.64*    %r7075 <- 0[fs]
	load.64*    %r7076 <- 0[e]
	load.32     %r7077 <- 12[%r7076]
	push.64*    %r7075
	push.32     %r7077
	call        freereg
	load.64*    %r7078 <- 0[fs]
	load.64*    %r7079 <- 0[e]
	load.32     %r7080 <- 8[%r7079]
	push.64*    %r7078
	push.32     %r7080
	call        freereg
	load.64*    %r7081 <- 0[fs]
	load.64*    %r7082 <- 0[e]
	load.32     %r7083 <- 8[%r7082]
	load.64*    %r7084 <- 0[e]
	load.32     %r7085 <- 12[%r7084]
	push.64*    %r7081
	push.32     $6
	push.32     $0
	push.32     %r7083
	push.32     %r7085
	call.32     %r7086 <- luaK_codeABC
	load.64*    %r7087 <- 0[e]
	store.32    %r7086 -> 8[%r7087]
	load.64*    %r7088 <- 0[e]
	store.32    $11 -> 0[%r7088]
	br          .L1636

.L1641:
	br          .L1642

.L1642:
	load.64*    %r7089 <- 0[fs]
	load.64*    %r7090 <- 0[e]
	push.64*    %r7089
	push.64*    %r7090
	call        luaK_setoneret
	br          .L1636

.L1643:
	br          .L1636

.L1636:
	ret


code_label:
.L1644:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[A]
	store.32    %arg3 -> 0[b]
	store.32    %arg4 -> 0[jump]
	load.64*    %r7091 <- 0[fs]
	push.64*    %r7091
	call.32     %r7092 <- luaK_getlabel
	load.64*    %r7093 <- 0[fs]
	load.32     %r7094 <- 0[A]
	load.32     %r7095 <- 0[b]
	load.32     %r7096 <- 0[jump]
	push.64*    %r7093
	push.32     $2
	push.32     %r7094
	push.32     %r7095
	push.32     %r7096
	call.32     %r7097 <- luaK_codeABC
	phisrc.32   %phi302(return) <- %r7097
	br          .L1645

.L1645:
	phi.32      %r7098 <- %phi302(return)
	ret.32      %r7097


discharge2reg:
.L1646:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[reg]
	load.64*    %r7099 <- 0[fs]
	load.64*    %r7100 <- 0[e]
	push.64*    %r7099
	push.64*    %r7100
	call        luaK_dischargevars
	load.64*    %r7101 <- 0[e]
	load.32     %r7102 <- 0[%r7101]
	switch.32   %r7102, 1 -> .L1648, 2 -> .L1650, 3 -> .L1649, 4 -> .L1651, 5 -> .L1652, 11 -> .L1653, 12 -> .L1654, default -> .L1655

.L1648:
	load.64*    %r7103 <- 0[fs]
	load.32     %r7104 <- 0[reg]
	push.64*    %r7103
	push.32     %r7104
	push.32     $1
	call        luaK_nil
	br          .L1647

.L1649:
	br          .L1650

.L1650:
	load.64*    %r7105 <- 0[fs]
	load.32     %r7106 <- 0[reg]
	load.64*    %r7107 <- 0[e]
	load.32     %r7108 <- 0[%r7107]
	scast.32    %r7109 <- (32) %r7108
	seteq.32    %r7110 <- %r7109, $2
	push.64*    %r7105
	push.32     $2
	push.32     %r7106
	push.32     %r7110
	push.32     $0
	call.32     %r7111 <- luaK_codeABC
	br          .L1647

.L1651:
	load.64*    %r7112 <- 0[fs]
	load.32     %r7113 <- 0[reg]
	load.64*    %r7114 <- 0[e]
	load.32     %r7115 <- 8[%r7114]
	scast.32    %r7116 <- (32) %r7115
	push.64*    %r7112
	push.32     $1
	push.32     %r7113
	push.32     %r7116
	call.32     %r7117 <- luaK_codeABx
	br          .L1647

.L1652:
	load.64*    %r7118 <- 0[fs]
	load.32     %r7119 <- 0[reg]
	load.64*    %r7120 <- 0[fs]
	load.64*    %r7121 <- 0[e]
	load.f64    %r7122 <- 8[%r7121]
	push.64*    %r7120
	push.f64    %r7122
	call.32     %r7123 <- luaK_numberK
	scast.32    %r7124 <- (32) %r7123
	push.64*    %r7118
	push.32     $1
	push.32     %r7119
	push.32     %r7124
	call.32     %r7125 <- luaK_codeABx
	br          .L1647

.L1653:
	load.64*    %r7126 <- 0[fs]
	load.64*    %r7127 <- 0[%r7126]
	load.64*    %r7128 <- 24[%r7127]
	load.64*    %r7129 <- 0[e]
	load.32     %r7130 <- 8[%r7129]
	scast.64    %r7131 <- (32) %r7130
	muls.64     %r7132 <- %r7131, $4
	add.64*     %r7133 <- %r7128, %r7132
	store.64*   %r7133 -> 0[pc]
	load.64*    %r7134 <- 0[pc]
	load.32     %r7135 <- 0[%r7134]
	and.32      %r7136 <- %r7135, $0xffffc03f
	load.32     %r7137 <- 0[reg]
	scast.32    %r7138 <- (32) %r7137
	shl.32      %r7139 <- %r7138, $6
	and.32      %r7140 <- %r7139, $0x3fc0
	or.32       %r7141 <- %r7136, %r7140
	load.64*    %r7142 <- 0[pc]
	store.32    %r7141 -> 0[%r7142]
	br          .L1647

.L1654:
	load.32     %r7143 <- 0[reg]
	load.64*    %r7144 <- 0[e]
	load.32     %r7145 <- 8[%r7144]
	setne.32    %r7146 <- %r7143, %r7145
	cbr         %r7146, .L1656, .L1657

.L1656:
	load.64*    %r7147 <- 0[fs]
	load.32     %r7148 <- 0[reg]
	load.64*    %r7149 <- 0[e]
	load.32     %r7150 <- 8[%r7149]
	push.64*    %r7147
	push.32     $0
	push.32     %r7148
	push.32     %r7150
	push.32     $0
	call.32     %r7151 <- luaK_codeABC
	br          .L1657

.L1657:
	br          .L1647

.L1655:
	br          .L1658

.L1647:
	load.32     %r7152 <- 0[reg]
	load.64*    %r7153 <- 0[e]
	store.32    %r7152 -> 8[%r7153]
	load.64*    %r7154 <- 0[e]
	store.32    $12 -> 0[%r7154]
	br          .L1658

.L1658:
	ret


discharge2anyreg:
.L1659:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7155 <- 0[e]
	load.32     %r7156 <- 0[%r7155]
	scast.32    %r7157 <- (32) %r7156
	setne.32    %r7158 <- %r7157, $12
	cbr         %r7158, .L1660, .L1661

.L1660:
	load.64*    %r7159 <- 0[fs]
	push.64*    %r7159
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r7160 <- 0[fs]
	load.64*    %r7161 <- 0[e]
	load.64*    %r7162 <- 0[fs]
	load.32     %r7163 <- 60[%r7162]
	sub.32      %r7164 <- %r7163, $1
	push.64*    %r7160
	push.64*    %r7161
	push.32     %r7164
	call        discharge2reg
	br          .L1661

.L1661:
	ret


exp2reg:
.L1662:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[reg]
	load.64*    %r7165 <- 0[fs]
	load.64*    %r7166 <- 0[e]
	load.32     %r7167 <- 0[reg]
	push.64*    %r7165
	push.64*    %r7166
	push.32     %r7167
	call        discharge2reg
	load.64*    %r7168 <- 0[e]
	load.32     %r7169 <- 0[%r7168]
	scast.32    %r7170 <- (32) %r7169
	seteq.32    %r7171 <- %r7170, $10
	cbr         %r7171, .L1663, .L1664

.L1663:
	load.64*    %r7172 <- 0[fs]
	load.64*    %r7173 <- 0[e]
	add.64*     %r7174 <- %r7173, $16
	load.64*    %r7175 <- 0[e]
	load.32     %r7176 <- 8[%r7175]
	push.64*    %r7172
	push.64*    %r7174
	push.32     %r7176
	call        luaK_concat
	br          .L1664

.L1664:
	load.64*    %r7177 <- 0[e]
	load.32     %r7178 <- 16[%r7177]
	load.64*    %r7179 <- 0[e]
	load.32     %r7180 <- 20[%r7179]
	setne.32    %r7181 <- %r7178, %r7180
	cbr         %r7181, .L1665, .L1666

.L1665:
	store.32    $0xffffffff -> 0[p_f]
	store.32    $0xffffffff -> 0[p_t]
	load.64*    %r7182 <- 0[fs]
	load.64*    %r7183 <- 0[e]
	load.32     %r7184 <- 16[%r7183]
	push.64*    %r7182
	push.32     %r7184
	call.32     %r7185 <- need_value
	cbr         %r7185, .L1667, .L1669

.L1669:
	load.64*    %r7186 <- 0[fs]
	load.64*    %r7187 <- 0[e]
	load.32     %r7188 <- 20[%r7187]
	push.64*    %r7186
	push.32     %r7188
	call.32     %r7189 <- need_value
	cbr         %r7189, .L1667, .L1668

.L1667:
	load.64*    %r7190 <- 0[e]
	load.32     %r7191 <- 0[%r7190]
	scast.32    %r7192 <- (32) %r7191
	seteq.32    %r7193 <- %r7192, $10
	cbr         %r7193, .L1670, .L1671

.L1670:
	phisrc.32   %phi303 <- $0xffffffff
	br          .L1672

.L1671:
	load.64*    %r7194 <- 0[fs]
	push.64*    %r7194
	call.32     %r7195 <- luaK_jump
	phisrc.32   %phi304 <- %r7195
	br          .L1672

.L1672:
	phi.32      %r7196 <- %phi303, %phi304
	store.32    %r7196 -> 0[fj]
	load.64*    %r7197 <- 0[fs]
	load.32     %r7198 <- 0[reg]
	push.64*    %r7197
	push.32     %r7198
	push.32     $0
	push.32     $1
	call.32     %r7199 <- code_label
	store.32    %r7199 -> 0[p_f]
	load.64*    %r7200 <- 0[fs]
	load.32     %r7201 <- 0[reg]
	push.64*    %r7200
	push.32     %r7201
	push.32     $1
	push.32     $0
	call.32     %r7202 <- code_label
	store.32    %r7202 -> 0[p_t]
	load.64*    %r7203 <- 0[fs]
	load.32     %r7204 <- 0[fj]
	push.64*    %r7203
	push.32     %r7204
	call        luaK_patchtohere
	br          .L1668

.L1668:
	load.64*    %r7205 <- 0[fs]
	push.64*    %r7205
	call.32     %r7206 <- luaK_getlabel
	store.32    %r7206 -> 0[final]
	load.64*    %r7207 <- 0[fs]
	load.64*    %r7208 <- 0[e]
	load.32     %r7209 <- 20[%r7208]
	load.32     %r7210 <- 0[final]
	load.32     %r7211 <- 0[reg]
	load.32     %r7212 <- 0[p_f]
	push.64*    %r7207
	push.32     %r7209
	push.32     %r7210
	push.32     %r7211
	push.32     %r7212
	call        patchlistaux
	load.64*    %r7213 <- 0[fs]
	load.64*    %r7214 <- 0[e]
	load.32     %r7215 <- 16[%r7214]
	load.32     %r7216 <- 0[final]
	load.32     %r7217 <- 0[reg]
	load.32     %r7218 <- 0[p_t]
	push.64*    %r7213
	push.32     %r7215
	push.32     %r7216
	push.32     %r7217
	push.32     %r7218
	call        patchlistaux
	br          .L1666

.L1666:
	load.64*    %r7219 <- 0[e]
	store.32    $0xffffffff -> 16[%r7219]
	load.64*    %r7220 <- 0[e]
	store.32    $0xffffffff -> 20[%r7220]
	load.32     %r7221 <- 0[reg]
	load.64*    %r7222 <- 0[e]
	store.32    %r7221 -> 8[%r7222]
	load.64*    %r7223 <- 0[e]
	store.32    $12 -> 0[%r7223]
	br          .L1673

.L1673:
	ret


luaK_exp2nextreg:
.L1674:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7224 <- 0[fs]
	load.64*    %r7225 <- 0[e]
	push.64*    %r7224
	push.64*    %r7225
	call        luaK_dischargevars
	load.64*    %r7226 <- 0[fs]
	load.64*    %r7227 <- 0[e]
	push.64*    %r7226
	push.64*    %r7227
	call        freeexp
	load.64*    %r7228 <- 0[fs]
	push.64*    %r7228
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r7229 <- 0[fs]
	load.64*    %r7230 <- 0[e]
	load.64*    %r7231 <- 0[fs]
	load.32     %r7232 <- 60[%r7231]
	sub.32      %r7233 <- %r7232, $1
	push.64*    %r7229
	push.64*    %r7230
	push.32     %r7233
	call        exp2reg
	br          .L1675

.L1675:
	ret


luaK_exp2anyreg:
.L1676:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7234 <- 0[fs]
	load.64*    %r7235 <- 0[e]
	push.64*    %r7234
	push.64*    %r7235
	call        luaK_dischargevars
	load.64*    %r7236 <- 0[e]
	load.32     %r7237 <- 0[%r7236]
	scast.32    %r7238 <- (32) %r7237
	seteq.32    %r7239 <- %r7238, $12
	cbr         %r7239, .L1677, .L1678

.L1677:
	load.64*    %r7240 <- 0[e]
	load.32     %r7241 <- 16[%r7240]
	load.64*    %r7242 <- 0[e]
	load.32     %r7243 <- 20[%r7242]
	setne.32    %r7244 <- %r7241, %r7243
	cbr         %r7244, .L1680, .L1679

.L1679:
	load.64*    %r7245 <- 0[e]
	load.32     %r7246 <- 8[%r7245]
	phisrc.32   %phi305(return) <- %r7246
	br          .L1681

.L1680:
	load.64*    %r7248 <- 0[e]
	load.32     %r7249 <- 8[%r7248]
	load.64*    %r7250 <- 0[fs]
	load.8      %r7251 <- 74[%r7250]
	cast.32     %r7252 <- (8) %r7251
	setge.32    %r7253 <- %r7249, %r7252
	cbr         %r7253, .L1682, .L1683

.L1682:
	load.64*    %r7254 <- 0[fs]
	load.64*    %r7255 <- 0[e]
	load.64*    %r7256 <- 0[e]
	load.32     %r7257 <- 8[%r7256]
	push.64*    %r7254
	push.64*    %r7255
	push.32     %r7257
	call        exp2reg
	load.64*    %r7258 <- 0[e]
	load.32     %r7259 <- 8[%r7258]
	phisrc.32   %phi306(return) <- %r7259
	br          .L1681

.L1683:
	br          .L1678

.L1678:
	load.64*    %r7260 <- 0[fs]
	load.64*    %r7261 <- 0[e]
	push.64*    %r7260
	push.64*    %r7261
	call        luaK_exp2nextreg
	load.64*    %r7262 <- 0[e]
	load.32     %r7263 <- 8[%r7262]
	phisrc.32   %phi307(return) <- %r7263
	br          .L1681

.L1681:
	phi.32      %r7247 <- %phi305(return), %phi306(return), %phi307(return)
	ret.32      %r7247


luaK_exp2val:
.L1684:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7264 <- 0[e]
	load.32     %r7265 <- 16[%r7264]
	load.64*    %r7266 <- 0[e]
	load.32     %r7267 <- 20[%r7266]
	setne.32    %r7268 <- %r7265, %r7267
	cbr         %r7268, .L1685, .L1686

.L1685:
	load.64*    %r7269 <- 0[fs]
	load.64*    %r7270 <- 0[e]
	push.64*    %r7269
	push.64*    %r7270
	call.32     %r7271 <- luaK_exp2anyreg
	br          .L1687

.L1686:
	load.64*    %r7272 <- 0[fs]
	load.64*    %r7273 <- 0[e]
	push.64*    %r7272
	push.64*    %r7273
	call        luaK_dischargevars
	br          .L1687

.L1687:
	ret


luaK_exp2RK:
.L1688:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7274 <- 0[fs]
	load.64*    %r7275 <- 0[e]
	push.64*    %r7274
	push.64*    %r7275
	call        luaK_exp2val
	load.64*    %r7276 <- 0[e]
	load.32     %r7277 <- 0[%r7276]
	switch.32   %r7277, 1 -> .L1693, 2 -> .L1691, 3 -> .L1692, 4 -> .L1694, 5 -> .L1690, default -> .L1695

.L1690:
	br          .L1691

.L1691:
	br          .L1692

.L1692:
	br          .L1693

.L1693:
	load.64*    %r7278 <- 0[fs]
	load.32     %r7279 <- 64[%r7278]
	setle.32    %r7280 <- %r7279, $255
	cbr         %r7280, .L1696, .L1697

.L1696:
	load.64*    %r7281 <- 0[e]
	load.32     %r7282 <- 0[%r7281]
	scast.32    %r7283 <- (32) %r7282
	seteq.32    %r7284 <- %r7283, $1
	cbr         %r7284, .L1698, .L1699

.L1698:
	load.64*    %r7285 <- 0[fs]
	push.64*    %r7285
	call.32     %r7286 <- nilK
	phisrc.32   %phi308 <- %r7286
	br          .L1700

.L1699:
	load.64*    %r7287 <- 0[e]
	load.32     %r7288 <- 0[%r7287]
	scast.32    %r7289 <- (32) %r7288
	seteq.32    %r7290 <- %r7289, $5
	cbr         %r7290, .L1701, .L1702

.L1701:
	load.64*    %r7291 <- 0[fs]
	load.64*    %r7292 <- 0[e]
	load.f64    %r7293 <- 8[%r7292]
	push.64*    %r7291
	push.f64    %r7293
	call.32     %r7294 <- luaK_numberK
	phisrc.32   %phi309 <- %r7294
	br          .L1703

.L1702:
	load.64*    %r7295 <- 0[fs]
	load.64*    %r7296 <- 0[e]
	load.32     %r7297 <- 0[%r7296]
	scast.32    %r7298 <- (32) %r7297
	seteq.32    %r7299 <- %r7298, $2
	push.64*    %r7295
	push.32     %r7299
	call.32     %r7300 <- boolK
	phisrc.32   %phi310 <- %r7300
	br          .L1703

.L1703:
	phi.32      %r7301 <- %phi309, %phi310
	phisrc.32   %phi311 <- %r7301
	br          .L1700

.L1700:
	phi.32      %r7302 <- %phi308, %phi311
	load.64*    %r7303 <- 0[e]
	store.32    %r7302 -> 8[%r7303]
	load.64*    %r7304 <- 0[e]
	store.32    $4 -> 0[%r7304]
	load.64*    %r7305 <- 0[e]
	load.32     %r7306 <- 8[%r7305]
	or.32       %r7307 <- %r7306, $256
	phisrc.32   %phi312(return) <- %r7307
	br          .L1704

.L1697:
	br          .L1689

.L1694:
	load.64*    %r7309 <- 0[e]
	load.32     %r7310 <- 8[%r7309]
	setle.32    %r7311 <- %r7310, $255
	cbr         %r7311, .L1706, .L1707

.L1706:
	load.64*    %r7312 <- 0[e]
	load.32     %r7313 <- 8[%r7312]
	or.32       %r7314 <- %r7313, $256
	phisrc.32   %phi313(return) <- %r7314
	br          .L1704

.L1707:
	br          .L1689

.L1695:
	br          .L1689

.L1689:
	load.64*    %r7315 <- 0[fs]
	load.64*    %r7316 <- 0[e]
	push.64*    %r7315
	push.64*    %r7316
	call.32     %r7317 <- luaK_exp2anyreg
	phisrc.32   %phi314(return) <- %r7317
	br          .L1704

.L1704:
	phi.32      %r7308 <- %phi312(return), %phi313(return), %phi314(return)
	ret.32      %r7308


luaK_storevar:
.L1709:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[var]
	store.64*   %arg3 -> 0[ex]
	load.64*    %r7318 <- 0[var]
	load.32     %r7319 <- 0[%r7318]
	switch.32   %r7319, 6 -> .L1711, 7 -> .L1712, 8 -> .L1713, 9 -> .L1714, default -> .L1715

.L1711:
	load.64*    %r7320 <- 0[fs]
	load.64*    %r7321 <- 0[ex]
	push.64*    %r7320
	push.64*    %r7321
	call        freeexp
	load.64*    %r7322 <- 0[fs]
	load.64*    %r7323 <- 0[ex]
	load.64*    %r7324 <- 0[var]
	load.32     %r7325 <- 8[%r7324]
	push.64*    %r7322
	push.64*    %r7323
	push.32     %r7325
	call        exp2reg
	br          .L1716

.L1712:
	load.64*    %r7326 <- 0[fs]
	load.64*    %r7327 <- 0[ex]
	push.64*    %r7326
	push.64*    %r7327
	call.32     %r7328 <- luaK_exp2anyreg
	store.32    %r7328 -> 0[e]
	load.64*    %r7329 <- 0[fs]
	load.32     %r7330 <- 0[e]
	load.64*    %r7331 <- 0[var]
	load.32     %r7332 <- 8[%r7331]
	push.64*    %r7329
	push.32     $8
	push.32     %r7330
	push.32     %r7332
	push.32     $0
	call.32     %r7333 <- luaK_codeABC
	br          .L1710

.L1713:
	load.64*    %r7334 <- 0[fs]
	load.64*    %r7335 <- 0[ex]
	push.64*    %r7334
	push.64*    %r7335
	call.32     %r7336 <- luaK_exp2anyreg
	store.32    %r7336 -> 0[e]
	load.64*    %r7337 <- 0[fs]
	load.32     %r7338 <- 0[e]
	load.64*    %r7339 <- 0[var]
	load.32     %r7340 <- 8[%r7339]
	scast.32    %r7341 <- (32) %r7340
	push.64*    %r7337
	push.32     $7
	push.32     %r7338
	push.32     %r7341
	call.32     %r7342 <- luaK_codeABx
	br          .L1710

.L1714:
	load.64*    %r7343 <- 0[fs]
	load.64*    %r7344 <- 0[ex]
	push.64*    %r7343
	push.64*    %r7344
	call.32     %r7345 <- luaK_exp2RK
	store.32    %r7345 -> 0[e]
	load.64*    %r7346 <- 0[fs]
	load.64*    %r7347 <- 0[var]
	load.32     %r7348 <- 8[%r7347]
	load.64*    %r7349 <- 0[var]
	load.32     %r7350 <- 12[%r7349]
	load.32     %r7351 <- 0[e]
	push.64*    %r7346
	push.32     $9
	push.32     %r7348
	push.32     %r7350
	push.32     %r7351
	call.32     %r7352 <- luaK_codeABC
	br          .L1710

.L1715:
	br          .L1710

.L1710:
	load.64*    %r7353 <- 0[fs]
	load.64*    %r7354 <- 0[ex]
	push.64*    %r7353
	push.64*    %r7354
	call        freeexp
	br          .L1716

.L1716:
	ret


luaK_self:
.L1717:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.64*   %arg3 -> 0[key]
	load.64*    %r7355 <- 0[fs]
	load.64*    %r7356 <- 0[e]
	push.64*    %r7355
	push.64*    %r7356
	call.32     %r7357 <- luaK_exp2anyreg
	load.64*    %r7358 <- 0[fs]
	load.64*    %r7359 <- 0[e]
	push.64*    %r7358
	push.64*    %r7359
	call        freeexp
	load.64*    %r7360 <- 0[fs]
	load.32     %r7361 <- 60[%r7360]
	store.32    %r7361 -> 0[func]
	load.64*    %r7362 <- 0[fs]
	push.64*    %r7362
	push.32     $2
	call        luaK_reserveregs
	load.64*    %r7363 <- 0[fs]
	load.32     %r7364 <- 0[func]
	load.64*    %r7365 <- 0[e]
	load.32     %r7366 <- 8[%r7365]
	load.64*    %r7367 <- 0[fs]
	load.64*    %r7368 <- 0[key]
	push.64*    %r7367
	push.64*    %r7368
	call.32     %r7369 <- luaK_exp2RK
	push.64*    %r7363
	push.32     $11
	push.32     %r7364
	push.32     %r7366
	push.32     %r7369
	call.32     %r7370 <- luaK_codeABC
	load.64*    %r7371 <- 0[fs]
	load.64*    %r7372 <- 0[key]
	push.64*    %r7371
	push.64*    %r7372
	call        freeexp
	load.32     %r7373 <- 0[func]
	load.64*    %r7374 <- 0[e]
	store.32    %r7373 -> 8[%r7374]
	load.64*    %r7375 <- 0[e]
	store.32    $12 -> 0[%r7375]
	br          .L1718

.L1718:
	ret


invertjump:
.L1719:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7376 <- 0[fs]
	load.64*    %r7377 <- 0[e]
	load.32     %r7378 <- 8[%r7377]
	push.64*    %r7376
	push.32     %r7378
	call.64*    %r7379 <- getjumpcontrol
	store.64*   %r7379 -> 0[pc]
	load.64*    %r7380 <- 0[pc]
	load.32     %r7381 <- 0[%r7380]
	and.32      %r7382 <- %r7381, $0xffffc03f
	load.64*    %r7383 <- 0[pc]
	load.32     %r7384 <- 0[%r7383]
	lsr.32      %r7385 <- %r7384, $6
	and.32      %r7386 <- %r7385, $255
	cast.32     %r7387 <- (32) %r7386
	seteq.32    %r7388 <- %r7387, $0
	scast.32    %r7389 <- (32) %r7388
	shl.32      %r7390 <- %r7389, $6
	and.32      %r7391 <- %r7390, $0x3fc0
	or.32       %r7392 <- %r7382, %r7391
	load.64*    %r7393 <- 0[pc]
	store.32    %r7392 -> 0[%r7393]
	br          .L1720

.L1720:
	ret


jumponcond:
.L1721:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[cond]
	load.64*    %r7394 <- 0[e]
	load.32     %r7395 <- 0[%r7394]
	scast.32    %r7396 <- (32) %r7395
	seteq.32    %r7397 <- %r7396, $11
	cbr         %r7397, .L1722, .L1723

.L1722:
	load.64*    %r7398 <- 0[fs]
	load.64*    %r7399 <- 0[%r7398]
	load.64*    %r7400 <- 24[%r7399]
	load.64*    %r7401 <- 0[e]
	load.32     %r7402 <- 8[%r7401]
	scast.64    %r7403 <- (32) %r7402
	muls.64     %r7404 <- %r7403, $4
	add.64*     %r7405 <- %r7400, %r7404
	load.32     %r7406 <- 0[%r7405]
	store.32    %r7406 -> 0[ie]
	load.32     %r7407 <- 0[ie]
	lsr.32      %r7408 <- %r7407, $0
	and.32      %r7409 <- %r7408, $63
	cast.32     %r7410 <- (32) %r7409
	scast.32    %r7411 <- (32) %r7410
	seteq.32    %r7412 <- %r7411, $19
	cbr         %r7412, .L1724, .L1725

.L1724:
	load.64*    %r7413 <- 0[fs]
	load.32     %r7414 <- 48[%r7413]
	sub.32      %r7415 <- %r7414, $1
	store.32    %r7415 -> 48[%r7413]
	load.64*    %r7416 <- 0[fs]
	load.32     %r7417 <- 0[ie]
	lsr.32      %r7418 <- %r7417, $23
	and.32      %r7419 <- %r7418, $511
	cast.32     %r7420 <- (32) %r7419
	load.32     %r7421 <- 0[cond]
	seteq.32    %r7422 <- %r7421, $0
	push.64*    %r7416
	push.32     $26
	push.32     %r7420
	push.32     $0
	push.32     %r7422
	call.32     %r7423 <- condjump
	phisrc.32   %phi315(return) <- %r7423
	br          .L1726

.L1725:
	br          .L1723

.L1723:
	load.64*    %r7425 <- 0[fs]
	load.64*    %r7426 <- 0[e]
	push.64*    %r7425
	push.64*    %r7426
	call        discharge2anyreg
	load.64*    %r7427 <- 0[fs]
	load.64*    %r7428 <- 0[e]
	push.64*    %r7427
	push.64*    %r7428
	call        freeexp
	load.64*    %r7429 <- 0[fs]
	load.64*    %r7430 <- 0[e]
	load.32     %r7431 <- 8[%r7430]
	load.32     %r7432 <- 0[cond]
	push.64*    %r7429
	push.32     $27
	push.32     $255
	push.32     %r7431
	push.32     %r7432
	call.32     %r7433 <- condjump
	phisrc.32   %phi316(return) <- %r7433
	br          .L1726

.L1726:
	phi.32      %r7424 <- %phi315(return), %phi316(return)
	ret.32      %r7424


luaK_goiftrue:
.L1727:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7434 <- 0[fs]
	load.64*    %r7435 <- 0[e]
	push.64*    %r7434
	push.64*    %r7435
	call        luaK_dischargevars
	load.64*    %r7436 <- 0[e]
	load.32     %r7437 <- 0[%r7436]
	switch.32   %r7437, 2 -> .L1731, 4 -> .L1729, 5 -> .L1730, 10 -> .L1732, default -> .L1733

.L1729:
	br          .L1730

.L1730:
	br          .L1731

.L1731:
	store.32    $0xffffffff -> 0[pc]
	br          .L1728

.L1732:
	load.64*    %r7438 <- 0[fs]
	load.64*    %r7439 <- 0[e]
	push.64*    %r7438
	push.64*    %r7439
	call        invertjump
	load.64*    %r7440 <- 0[e]
	load.32     %r7441 <- 8[%r7440]
	store.32    %r7441 -> 0[pc]
	br          .L1728

.L1733:
	load.64*    %r7442 <- 0[fs]
	load.64*    %r7443 <- 0[e]
	push.64*    %r7442
	push.64*    %r7443
	push.32     $0
	call.32     %r7444 <- jumponcond
	store.32    %r7444 -> 0[pc]
	br          .L1728

.L1728:
	load.64*    %r7445 <- 0[fs]
	load.64*    %r7446 <- 0[e]
	add.64*     %r7447 <- %r7446, $20
	load.32     %r7448 <- 0[pc]
	push.64*    %r7445
	push.64*    %r7447
	push.32     %r7448
	call        luaK_concat
	load.64*    %r7449 <- 0[fs]
	load.64*    %r7450 <- 0[e]
	load.32     %r7451 <- 16[%r7450]
	push.64*    %r7449
	push.32     %r7451
	call        luaK_patchtohere
	load.64*    %r7452 <- 0[e]
	store.32    $0xffffffff -> 16[%r7452]
	br          .L1734

.L1734:
	ret


luaK_goiffalse:
.L1735:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7453 <- 0[fs]
	load.64*    %r7454 <- 0[e]
	push.64*    %r7453
	push.64*    %r7454
	call        luaK_dischargevars
	load.64*    %r7455 <- 0[e]
	load.32     %r7456 <- 0[%r7455]
	switch.32   %r7456, 1 -> .L1737, 3 -> .L1738, 10 -> .L1739, default -> .L1740

.L1737:
	br          .L1738

.L1738:
	store.32    $0xffffffff -> 0[pc]
	br          .L1736

.L1739:
	load.64*    %r7457 <- 0[e]
	load.32     %r7458 <- 8[%r7457]
	store.32    %r7458 -> 0[pc]
	br          .L1736

.L1740:
	load.64*    %r7459 <- 0[fs]
	load.64*    %r7460 <- 0[e]
	push.64*    %r7459
	push.64*    %r7460
	push.32     $1
	call.32     %r7461 <- jumponcond
	store.32    %r7461 -> 0[pc]
	br          .L1736

.L1736:
	load.64*    %r7462 <- 0[fs]
	load.64*    %r7463 <- 0[e]
	add.64*     %r7464 <- %r7463, $16
	load.32     %r7465 <- 0[pc]
	push.64*    %r7462
	push.64*    %r7464
	push.32     %r7465
	call        luaK_concat
	load.64*    %r7466 <- 0[fs]
	load.64*    %r7467 <- 0[e]
	load.32     %r7468 <- 20[%r7467]
	push.64*    %r7466
	push.32     %r7468
	call        luaK_patchtohere
	load.64*    %r7469 <- 0[e]
	store.32    $0xffffffff -> 20[%r7469]
	br          .L1741

.L1741:
	ret


codenot:
.L1742:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7470 <- 0[fs]
	load.64*    %r7471 <- 0[e]
	push.64*    %r7470
	push.64*    %r7471
	call        luaK_dischargevars
	load.64*    %r7472 <- 0[e]
	load.32     %r7473 <- 0[%r7472]
	switch.32   %r7473, 1 -> .L1744, 2 -> .L1748, 3 -> .L1745, 4 -> .L1746, 5 -> .L1747, 10 -> .L1749, 11 -> .L1750, 12 -> .L1751, default -> .L1752

.L1744:
	br          .L1745

.L1745:
	load.64*    %r7474 <- 0[e]
	store.32    $2 -> 0[%r7474]
	br          .L1743

.L1746:
	br          .L1747

.L1747:
	br          .L1748

.L1748:
	load.64*    %r7475 <- 0[e]
	store.32    $3 -> 0[%r7475]
	br          .L1743

.L1749:
	load.64*    %r7476 <- 0[fs]
	load.64*    %r7477 <- 0[e]
	push.64*    %r7476
	push.64*    %r7477
	call        invertjump
	br          .L1743

.L1750:
	br          .L1751

.L1751:
	load.64*    %r7478 <- 0[fs]
	load.64*    %r7479 <- 0[e]
	push.64*    %r7478
	push.64*    %r7479
	call        discharge2anyreg
	load.64*    %r7480 <- 0[fs]
	load.64*    %r7481 <- 0[e]
	push.64*    %r7480
	push.64*    %r7481
	call        freeexp
	load.64*    %r7482 <- 0[fs]
	load.64*    %r7483 <- 0[e]
	load.32     %r7484 <- 8[%r7483]
	push.64*    %r7482
	push.32     $19
	push.32     $0
	push.32     %r7484
	push.32     $0
	call.32     %r7485 <- luaK_codeABC
	load.64*    %r7486 <- 0[e]
	store.32    %r7485 -> 8[%r7486]
	load.64*    %r7487 <- 0[e]
	store.32    $11 -> 0[%r7487]
	br          .L1743

.L1752:
	br          .L1743

.L1743:
	load.64*    %r7488 <- 0[e]
	load.32     %r7489 <- 20[%r7488]
	store.32    %r7489 -> 0[temp]
	load.64*    %r7490 <- 0[e]
	load.32     %r7491 <- 16[%r7490]
	load.64*    %r7492 <- 0[e]
	store.32    %r7491 -> 20[%r7492]
	load.32     %r7493 <- 0[temp]
	load.64*    %r7494 <- 0[e]
	store.32    %r7493 -> 16[%r7494]
	load.64*    %r7495 <- 0[fs]
	load.64*    %r7496 <- 0[e]
	load.32     %r7497 <- 20[%r7496]
	push.64*    %r7495
	push.32     %r7497
	call        removevalues
	load.64*    %r7498 <- 0[fs]
	load.64*    %r7499 <- 0[e]
	load.32     %r7500 <- 16[%r7499]
	push.64*    %r7498
	push.32     %r7500
	call        removevalues
	br          .L1753

.L1753:
	ret


luaK_indexed:
.L1754:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[k]
	load.64*    %r7501 <- 0[fs]
	load.64*    %r7502 <- 0[k]
	push.64*    %r7501
	push.64*    %r7502
	call.32     %r7503 <- luaK_exp2RK
	load.64*    %r7504 <- 0[t]
	store.32    %r7503 -> 12[%r7504]
	load.64*    %r7505 <- 0[t]
	store.32    $9 -> 0[%r7505]
	br          .L1755

.L1755:
	ret


constfolding:
.L1756:
	<entry-point>
	store.32    %arg1 -> 0[op]
	store.64*   %arg2 -> 0[e1]
	store.64*   %arg3 -> 0[e2]
	load.64*    %r7506 <- 0[e1]
	push.64*    %r7506
	call.32     %r7507 <- isnumeral
	cbr         %r7507, .L1759, .L1757

.L1759:
	load.64*    %r7508 <- 0[e2]
	push.64*    %r7508
	call.32     %r7509 <- isnumeral
	cbr         %r7509, .L1758, .L1757

.L1757:
	phisrc.32   %phi317(return) <- $0
	br          .L1760

.L1758:
	load.64*    %r7511 <- 0[e1]
	load.f64    %r7512 <- 8[%r7511]
	store.f64   %r7512 -> 0[v1]
	load.64*    %r7513 <- 0[e2]
	load.f64    %r7514 <- 8[%r7513]
	store.f64   %r7514 -> 0[v2]
	load.32     %r7515 <- 0[op]
	switch.32   %r7515, 12 -> .L1762, 13 -> .L1763, 14 -> .L1764, 15 -> .L1765, 16 -> .L1766, 17 -> .L1767, 18 -> .L1768, 20 -> .L1769, default -> .L1770

.L1762:
	load.f64    %r7516 <- 0[v1]
	load.f64    %r7517 <- 0[v2]
	add.f64     %r7518 <- %r7516, %r7517
	store.f64   %r7518 -> 0[r]
	br          .L1761

.L1763:
	load.f64    %r7519 <- 0[v1]
	load.f64    %r7520 <- 0[v2]
	sub.f64     %r7521 <- %r7519, %r7520
	store.f64   %r7521 -> 0[r]
	br          .L1761

.L1764:
	load.f64    %r7522 <- 0[v1]
	load.f64    %r7523 <- 0[v2]
	mulu.f64    %r7524 <- %r7522, %r7523
	store.f64   %r7524 -> 0[r]
	br          .L1761

.L1765:
	load.f64    %r7525 <- 0[v2]
	set.f64     %r7526 <- 0.000000
	seteq.32    %r7527 <- %r7525, %r7526
	cbr         %r7527, .L1771, .L1772

.L1771:
	phisrc.32   %phi318(return) <- $0
	br          .L1760

.L1772:
	load.f64    %r7528 <- 0[v1]
	load.f64    %r7529 <- 0[v2]
	divu.f64    %r7530 <- %r7528, %r7529
	store.f64   %r7530 -> 0[r]
	br          .L1761

.L1766:
	load.f64    %r7531 <- 0[v2]
	set.f64     %r7532 <- 0.000000
	seteq.32    %r7533 <- %r7531, %r7532
	cbr         %r7533, .L1773, .L1774

.L1773:
	phisrc.32   %phi319(return) <- $0
	br          .L1760

.L1774:
	load.f64    %r7534 <- 0[v1]
	load.f64    %r7535 <- 0[v1]
	load.f64    %r7536 <- 0[v2]
	divu.f64    %r7537 <- %r7535, %r7536
	push.f64    %r7537
	call.f64    %r7538 <- floor
	load.f64    %r7539 <- 0[v2]
	mulu.f64    %r7540 <- %r7538, %r7539
	sub.f64     %r7541 <- %r7534, %r7540
	store.f64   %r7541 -> 0[r]
	br          .L1761

.L1767:
	load.f64    %r7542 <- 0[v1]
	load.f64    %r7543 <- 0[v2]
	push.f64    %r7542
	push.f64    %r7543
	call.f64    %r7544 <- pow
	store.f64   %r7544 -> 0[r]
	br          .L1761

.L1768:
	load.f64    %r7545 <- 0[v1]
	neg.f64     %r7546 <- %r7545
	store.f64   %r7546 -> 0[r]
	br          .L1761

.L1769:
	phisrc.32   %phi320(return) <- $0
	br          .L1760

.L1770:
	set.f64     %r7547 <- 0.000000
	store.f64   %r7547 -> 0[r]
	br          .L1761

.L1761:
	load.f64    %r7548 <- 0[r]
	load.f64    %r7549 <- 0[r]
	seteq.32    %r7550 <- %r7548, %r7549
	cbr         %r7550, .L1776, .L1775

.L1775:
	phisrc.32   %phi321(return) <- $0
	br          .L1760

.L1776:
	load.f64    %r7551 <- 0[r]
	load.64*    %r7552 <- 0[e1]
	store.f64   %r7551 -> 8[%r7552]
	phisrc.32   %phi322(return) <- $1
	br          .L1760

.L1760:
	phi.32      %r7510 <- %phi317(return), %phi318(return), %phi319(return), %phi320(return), %phi321(return), %phi322(return)
	ret.32      %r7510


codearith:
.L1777:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e1]
	store.64*   %arg4 -> 0[e2]
	load.32     %r7553 <- 0[op]
	load.64*    %r7554 <- 0[e1]
	load.64*    %r7555 <- 0[e2]
	push.32     %r7553
	push.64*    %r7554
	push.64*    %r7555
	call.32     %r7556 <- constfolding
	cbr         %r7556, .L1778, .L1779

.L1778:
	br          .L1780

.L1779:
	load.32     %r7557 <- 0[op]
	scast.32    %r7558 <- (32) %r7557
	setne.32    %r7559 <- %r7558, $18
	setne.1     %r7560 <- %r7559, $0
	load.32     %r7561 <- 0[op]
	scast.32    %r7562 <- (32) %r7561
	setne.32    %r7563 <- %r7562, $20
	setne.1     %r7564 <- %r7563, $0
	and-bool.1  %r7565 <- %r7560, %r7564
	cast.32     %r7566 <- (1) %r7565
	cbr         %r7566, .L1782, .L1783

.L1782:
	load.64*    %r7567 <- 0[fs]
	load.64*    %r7568 <- 0[e2]
	push.64*    %r7567
	push.64*    %r7568
	call.32     %r7569 <- luaK_exp2RK
	phisrc.32   %phi323 <- %r7569
	br          .L1784

.L1783:
	phisrc.32   %phi324 <- $0
	br          .L1784

.L1784:
	phi.32      %r7570 <- %phi323, %phi324
	store.32    %r7570 -> 0[o2]
	load.64*    %r7571 <- 0[fs]
	load.64*    %r7572 <- 0[e1]
	push.64*    %r7571
	push.64*    %r7572
	call.32     %r7573 <- luaK_exp2RK
	store.32    %r7573 -> 0[o1]
	load.32     %r7574 <- 0[o1]
	load.32     %r7575 <- 0[o2]
	setgt.32    %r7576 <- %r7574, %r7575
	cbr         %r7576, .L1785, .L1786

.L1785:
	load.64*    %r7577 <- 0[fs]
	load.64*    %r7578 <- 0[e1]
	push.64*    %r7577
	push.64*    %r7578
	call        freeexp
	load.64*    %r7579 <- 0[fs]
	load.64*    %r7580 <- 0[e2]
	push.64*    %r7579
	push.64*    %r7580
	call        freeexp
	br          .L1787

.L1786:
	load.64*    %r7581 <- 0[fs]
	load.64*    %r7582 <- 0[e2]
	push.64*    %r7581
	push.64*    %r7582
	call        freeexp
	load.64*    %r7583 <- 0[fs]
	load.64*    %r7584 <- 0[e1]
	push.64*    %r7583
	push.64*    %r7584
	call        freeexp
	br          .L1787

.L1787:
	load.64*    %r7585 <- 0[fs]
	load.32     %r7586 <- 0[op]
	load.32     %r7587 <- 0[o1]
	load.32     %r7588 <- 0[o2]
	push.64*    %r7585
	push.32     %r7586
	push.32     $0
	push.32     %r7587
	push.32     %r7588
	call.32     %r7589 <- luaK_codeABC
	load.64*    %r7590 <- 0[e1]
	store.32    %r7589 -> 8[%r7590]
	load.64*    %r7591 <- 0[e1]
	store.32    $11 -> 0[%r7591]
	br          .L1781

.L1781:
	br          .L1780

.L1780:
	ret


codecomp:
.L1788:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.32    %arg3 -> 0[cond]
	store.64*   %arg4 -> 0[e1]
	store.64*   %arg5 -> 0[e2]
	load.64*    %r7592 <- 0[fs]
	load.64*    %r7593 <- 0[e1]
	push.64*    %r7592
	push.64*    %r7593
	call.32     %r7594 <- luaK_exp2RK
	store.32    %r7594 -> 0[o1]
	load.64*    %r7595 <- 0[fs]
	load.64*    %r7596 <- 0[e2]
	push.64*    %r7595
	push.64*    %r7596
	call.32     %r7597 <- luaK_exp2RK
	store.32    %r7597 -> 0[o2]
	load.64*    %r7598 <- 0[fs]
	load.64*    %r7599 <- 0[e2]
	push.64*    %r7598
	push.64*    %r7599
	call        freeexp
	load.64*    %r7600 <- 0[fs]
	load.64*    %r7601 <- 0[e1]
	push.64*    %r7600
	push.64*    %r7601
	call        freeexp
	load.32     %r7602 <- 0[cond]
	seteq.32    %r7603 <- %r7602, $0
	setne.1     %r7604 <- %r7603, $0
	load.32     %r7605 <- 0[op]
	scast.32    %r7606 <- (32) %r7605
	setne.32    %r7607 <- %r7606, $23
	setne.1     %r7608 <- %r7607, $0
	and-bool.1  %r7609 <- %r7604, %r7608
	cast.32     %r7610 <- (1) %r7609
	cbr         %r7610, .L1789, .L1790

.L1789:
	load.32     %r7611 <- 0[o1]
	store.32    %r7611 -> 0[temp]
	load.32     %r7612 <- 0[o2]
	store.32    %r7612 -> 0[o1]
	load.32     %r7613 <- 0[temp]
	store.32    %r7613 -> 0[o2]
	store.32    $1 -> 0[cond]
	br          .L1790

.L1790:
	load.64*    %r7614 <- 0[fs]
	load.32     %r7615 <- 0[op]
	load.32     %r7616 <- 0[cond]
	load.32     %r7617 <- 0[o1]
	load.32     %r7618 <- 0[o2]
	push.64*    %r7614
	push.32     %r7615
	push.32     %r7616
	push.32     %r7617
	push.32     %r7618
	call.32     %r7619 <- condjump
	load.64*    %r7620 <- 0[e1]
	store.32    %r7619 -> 8[%r7620]
	load.64*    %r7621 <- 0[e1]
	store.32    $10 -> 0[%r7621]
	br          .L1791

.L1791:
	ret


luaK_prefix:
.L1792:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e]
	store.32    $0xffffffff -> 20[e2]
	store.32    $0xffffffff -> 16[e2]
	store.32    $5 -> 0[e2]
	set.f64     %r7622 <- 0.000000
	store.f64   %r7622 -> 8[e2]
	load.32     %r7623 <- 0[op]
	switch.32   %r7623, 0 -> .L1794, 1 -> .L1795, 2 -> .L1796, default -> .L1797

.L1794:
	load.64*    %r7624 <- 0[e]
	push.64*    %r7624
	call.32     %r7625 <- isnumeral
	cbr         %r7625, .L1799, .L1798

.L1798:
	load.64*    %r7626 <- 0[fs]
	load.64*    %r7627 <- 0[e]
	push.64*    %r7626
	push.64*    %r7627
	call.32     %r7628 <- luaK_exp2anyreg
	br          .L1799

.L1799:
	load.64*    %r7629 <- 0[fs]
	load.64*    %r7630 <- 0[e]
	symaddr.64* %r7631 <- e2
	push.64*    %r7629
	push.32     $18
	push.64*    %r7630
	push.64*    %r7631
	call        codearith
	br          .L1793

.L1795:
	load.64*    %r7632 <- 0[fs]
	load.64*    %r7633 <- 0[e]
	push.64*    %r7632
	push.64*    %r7633
	call        codenot
	br          .L1793

.L1796:
	load.64*    %r7634 <- 0[fs]
	load.64*    %r7635 <- 0[e]
	push.64*    %r7634
	push.64*    %r7635
	call.32     %r7636 <- luaK_exp2anyreg
	load.64*    %r7637 <- 0[fs]
	load.64*    %r7638 <- 0[e]
	symaddr.64* %r7639 <- e2
	push.64*    %r7637
	push.32     $20
	push.64*    %r7638
	push.64*    %r7639
	call        codearith
	br          .L1793

.L1797:
	br          .L1793

.L1793:
	ret


luaK_infix:
.L1800:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[v]
	load.32     %r7640 <- 0[op]
	switch.32   %r7640, 0 -> .L1805, 1 -> .L1806, 2 -> .L1807, 3 -> .L1808, 4 -> .L1809, 5 -> .L1810, 6 -> .L1804, 13 -> .L1802, 14 -> .L1803, default -> .L1811

.L1802:
	load.64*    %r7641 <- 0[fs]
	load.64*    %r7642 <- 0[v]
	push.64*    %r7641
	push.64*    %r7642
	call        luaK_goiftrue
	br          .L1801

.L1803:
	load.64*    %r7643 <- 0[fs]
	load.64*    %r7644 <- 0[v]
	push.64*    %r7643
	push.64*    %r7644
	call        luaK_goiffalse
	br          .L1801

.L1804:
	load.64*    %r7645 <- 0[fs]
	load.64*    %r7646 <- 0[v]
	push.64*    %r7645
	push.64*    %r7646
	call        luaK_exp2nextreg
	br          .L1801

.L1805:
	br          .L1806

.L1806:
	br          .L1807

.L1807:
	br          .L1808

.L1808:
	br          .L1809

.L1809:
	br          .L1810

.L1810:
	load.64*    %r7647 <- 0[v]
	push.64*    %r7647
	call.32     %r7648 <- isnumeral
	cbr         %r7648, .L1813, .L1812

.L1812:
	load.64*    %r7649 <- 0[fs]
	load.64*    %r7650 <- 0[v]
	push.64*    %r7649
	push.64*    %r7650
	call.32     %r7651 <- luaK_exp2RK
	br          .L1813

.L1813:
	br          .L1801

.L1811:
	load.64*    %r7652 <- 0[fs]
	load.64*    %r7653 <- 0[v]
	push.64*    %r7652
	push.64*    %r7653
	call.32     %r7654 <- luaK_exp2RK
	br          .L1801

.L1801:
	ret


luaK_posfix:
.L1814:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e1]
	store.64*   %arg4 -> 0[e2]
	load.32     %r7655 <- 0[op]
	switch.32   %r7655, 0 -> .L1819, 1 -> .L1820, 2 -> .L1821, 3 -> .L1822, 4 -> .L1823, 5 -> .L1824, 6 -> .L1818, 7 -> .L1826, 8 -> .L1825, 9 -> .L1827, 10 -> .L1828, 11 -> .L1829, 12 -> .L1830, 13 -> .L1816, 14 -> .L1817, default -> .L1831

.L1816:
	load.64*    %r7656 <- 0[fs]
	load.64*    %r7657 <- 0[e2]
	push.64*    %r7656
	push.64*    %r7657
	call        luaK_dischargevars
	load.64*    %r7658 <- 0[fs]
	load.64*    %r7659 <- 0[e2]
	add.64*     %r7660 <- %r7659, $20
	load.64*    %r7661 <- 0[e1]
	load.32     %r7662 <- 20[%r7661]
	push.64*    %r7658
	push.64*    %r7660
	push.32     %r7662
	call        luaK_concat
	load.64*    %r7663 <- 0[e1]
	cast.64*    %r7664 <- (64) %r7663
	load.64*    %r7665 <- 0[e2]
	cast.64*    %r7666 <- (64) %r7665
	push.64*    %r7664
	push.64*    %r7666
	push.64     $24
	call.64*    %r7667 <- memcpy
	br          .L1815

.L1817:
	load.64*    %r7668 <- 0[fs]
	load.64*    %r7669 <- 0[e2]
	push.64*    %r7668
	push.64*    %r7669
	call        luaK_dischargevars
	load.64*    %r7670 <- 0[fs]
	load.64*    %r7671 <- 0[e2]
	add.64*     %r7672 <- %r7671, $16
	load.64*    %r7673 <- 0[e1]
	load.32     %r7674 <- 16[%r7673]
	push.64*    %r7670
	push.64*    %r7672
	push.32     %r7674
	call        luaK_concat
	load.64*    %r7675 <- 0[e1]
	cast.64*    %r7676 <- (64) %r7675
	load.64*    %r7677 <- 0[e2]
	cast.64*    %r7678 <- (64) %r7677
	push.64*    %r7676
	push.64*    %r7678
	push.64     $24
	call.64*    %r7679 <- memcpy
	br          .L1815

.L1818:
	load.64*    %r7680 <- 0[fs]
	load.64*    %r7681 <- 0[e2]
	push.64*    %r7680
	push.64*    %r7681
	call        luaK_exp2val
	load.64*    %r7682 <- 0[e2]
	load.32     %r7683 <- 0[%r7682]
	scast.32    %r7684 <- (32) %r7683
	seteq.32    %r7685 <- %r7684, $11
	cbr         %r7685, .L1834, .L1833

.L1834:
	load.64*    %r7686 <- 0[fs]
	load.64*    %r7687 <- 0[%r7686]
	load.64*    %r7688 <- 24[%r7687]
	load.64*    %r7689 <- 0[e2]
	load.32     %r7690 <- 8[%r7689]
	scast.64    %r7691 <- (32) %r7690
	muls.64     %r7692 <- %r7691, $4
	add.64*     %r7693 <- %r7688, %r7692
	load.32     %r7694 <- 0[%r7693]
	lsr.32      %r7695 <- %r7694, $0
	and.32      %r7696 <- %r7695, $63
	cast.32     %r7697 <- (32) %r7696
	scast.32    %r7698 <- (32) %r7697
	seteq.32    %r7699 <- %r7698, $21
	cbr         %r7699, .L1832, .L1833

.L1832:
	load.64*    %r7700 <- 0[fs]
	load.64*    %r7701 <- 0[e1]
	push.64*    %r7700
	push.64*    %r7701
	call        freeexp
	load.64*    %r7702 <- 0[fs]
	load.64*    %r7703 <- 0[%r7702]
	load.64*    %r7704 <- 24[%r7703]
	load.64*    %r7705 <- 0[e2]
	load.32     %r7706 <- 8[%r7705]
	scast.64    %r7707 <- (32) %r7706
	muls.64     %r7708 <- %r7707, $4
	add.64*     %r7709 <- %r7704, %r7708
	load.32     %r7710 <- 0[%r7709]
	and.32      %r7711 <- %r7710, $0x7fffff
	load.64*    %r7712 <- 0[e1]
	load.32     %r7713 <- 8[%r7712]
	scast.32    %r7714 <- (32) %r7713
	shl.32      %r7715 <- %r7714, $23
	and.32      %r7716 <- %r7715, $0xff800000
	or.32       %r7717 <- %r7711, %r7716
	load.64*    %r7718 <- 0[fs]
	load.64*    %r7719 <- 0[%r7718]
	load.64*    %r7720 <- 24[%r7719]
	load.64*    %r7721 <- 0[e2]
	load.32     %r7722 <- 8[%r7721]
	scast.64    %r7723 <- (32) %r7722
	muls.64     %r7724 <- %r7723, $4
	add.64*     %r7725 <- %r7720, %r7724
	store.32    %r7717 -> 0[%r7725]
	load.64*    %r7726 <- 0[e1]
	store.32    $11 -> 0[%r7726]
	load.64*    %r7727 <- 0[e2]
	load.32     %r7728 <- 8[%r7727]
	load.64*    %r7729 <- 0[e1]
	store.32    %r7728 -> 8[%r7729]
	br          .L1835

.L1833:
	load.64*    %r7730 <- 0[fs]
	load.64*    %r7731 <- 0[e2]
	push.64*    %r7730
	push.64*    %r7731
	call        luaK_exp2nextreg
	load.64*    %r7732 <- 0[fs]
	load.64*    %r7733 <- 0[e1]
	load.64*    %r7734 <- 0[e2]
	push.64*    %r7732
	push.32     $21
	push.64*    %r7733
	push.64*    %r7734
	call        codearith
	br          .L1835

.L1835:
	br          .L1815

.L1819:
	load.64*    %r7735 <- 0[fs]
	load.64*    %r7736 <- 0[e1]
	load.64*    %r7737 <- 0[e2]
	push.64*    %r7735
	push.32     $12
	push.64*    %r7736
	push.64*    %r7737
	call        codearith
	br          .L1815

.L1820:
	load.64*    %r7738 <- 0[fs]
	load.64*    %r7739 <- 0[e1]
	load.64*    %r7740 <- 0[e2]
	push.64*    %r7738
	push.32     $13
	push.64*    %r7739
	push.64*    %r7740
	call        codearith
	br          .L1815

.L1821:
	load.64*    %r7741 <- 0[fs]
	load.64*    %r7742 <- 0[e1]
	load.64*    %r7743 <- 0[e2]
	push.64*    %r7741
	push.32     $14
	push.64*    %r7742
	push.64*    %r7743
	call        codearith
	br          .L1815

.L1822:
	load.64*    %r7744 <- 0[fs]
	load.64*    %r7745 <- 0[e1]
	load.64*    %r7746 <- 0[e2]
	push.64*    %r7744
	push.32     $15
	push.64*    %r7745
	push.64*    %r7746
	call        codearith
	br          .L1815

.L1823:
	load.64*    %r7747 <- 0[fs]
	load.64*    %r7748 <- 0[e1]
	load.64*    %r7749 <- 0[e2]
	push.64*    %r7747
	push.32     $16
	push.64*    %r7748
	push.64*    %r7749
	call        codearith
	br          .L1815

.L1824:
	load.64*    %r7750 <- 0[fs]
	load.64*    %r7751 <- 0[e1]
	load.64*    %r7752 <- 0[e2]
	push.64*    %r7750
	push.32     $17
	push.64*    %r7751
	push.64*    %r7752
	call        codearith
	br          .L1815

.L1825:
	load.64*    %r7753 <- 0[fs]
	load.64*    %r7754 <- 0[e1]
	load.64*    %r7755 <- 0[e2]
	push.64*    %r7753
	push.32     $23
	push.32     $1
	push.64*    %r7754
	push.64*    %r7755
	call        codecomp
	br          .L1815

.L1826:
	load.64*    %r7756 <- 0[fs]
	load.64*    %r7757 <- 0[e1]
	load.64*    %r7758 <- 0[e2]
	push.64*    %r7756
	push.32     $23
	push.32     $0
	push.64*    %r7757
	push.64*    %r7758
	call        codecomp
	br          .L1815

.L1827:
	load.64*    %r7759 <- 0[fs]
	load.64*    %r7760 <- 0[e1]
	load.64*    %r7761 <- 0[e2]
	push.64*    %r7759
	push.32     $24
	push.32     $1
	push.64*    %r7760
	push.64*    %r7761
	call        codecomp
	br          .L1815

.L1828:
	load.64*    %r7762 <- 0[fs]
	load.64*    %r7763 <- 0[e1]
	load.64*    %r7764 <- 0[e2]
	push.64*    %r7762
	push.32     $25
	push.32     $1
	push.64*    %r7763
	push.64*    %r7764
	call        codecomp
	br          .L1815

.L1829:
	load.64*    %r7765 <- 0[fs]
	load.64*    %r7766 <- 0[e1]
	load.64*    %r7767 <- 0[e2]
	push.64*    %r7765
	push.32     $24
	push.32     $0
	push.64*    %r7766
	push.64*    %r7767
	call        codecomp
	br          .L1815

.L1830:
	load.64*    %r7768 <- 0[fs]
	load.64*    %r7769 <- 0[e1]
	load.64*    %r7770 <- 0[e2]
	push.64*    %r7768
	push.32     $25
	push.32     $0
	push.64*    %r7769
	push.64*    %r7770
	call        codecomp
	br          .L1815

.L1831:
	br          .L1815

.L1815:
	ret


luaK_fixline:
.L1836:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[line]
	load.32     %r7771 <- 0[line]
	load.64*    %r7772 <- 0[fs]
	load.64*    %r7773 <- 0[%r7772]
	load.64*    %r7774 <- 40[%r7773]
	load.64*    %r7775 <- 0[fs]
	load.32     %r7776 <- 48[%r7775]
	sub.32      %r7777 <- %r7776, $1
	scast.64    %r7778 <- (32) %r7777
	muls.64     %r7779 <- %r7778, $4
	add.64*     %r7780 <- %r7774, %r7779
	store.32    %r7771 -> 0[%r7780]
	br          .L1837

.L1837:
	ret


luaK_code:
.L1838:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[i]
	store.32    %arg3 -> 0[line]
	load.64*    %r7781 <- 0[fs]
	load.64*    %r7782 <- 0[%r7781]
	store.64*   %r7782 -> 0[f]
	load.64*    %r7783 <- 0[fs]
	push.64*    %r7783
	call        dischargejpc
	load.64*    %r7784 <- 0[fs]
	load.32     %r7785 <- 48[%r7784]
	add.32      %r7786 <- %r7785, $1
	load.64*    %r7787 <- 0[f]
	load.32     %r7788 <- 80[%r7787]
	setgt.32    %r7789 <- %r7786, %r7788
	cbr         %r7789, .L1839, .L1840

.L1839:
	load.64*    %r7790 <- 0[fs]
	load.64*    %r7791 <- 32[%r7790]
	load.64*    %r7792 <- 0[f]
	load.64*    %r7793 <- 24[%r7792]
	cast.64*    %r7794 <- (64) %r7793
	load.64*    %r7795 <- 0[f]
	add.64*     %r7796 <- %r7795, $80
	symaddr.64* %r7797 <- <anon symbol:0x1aa6710>
	push.64*    %r7791
	push.64*    %r7794
	push.64*    %r7796
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7797
	call.64*    %r7798 <- luaM_growaux_
	ptrcast.64* %r7799 <- (64) %r7798
	load.64*    %r7800 <- 0[f]
	store.64*   %r7799 -> 24[%r7800]
	br          .L1840

.L1840:
	load.32     %r7801 <- 0[i]
	load.64*    %r7802 <- 0[f]
	load.64*    %r7803 <- 24[%r7802]
	load.64*    %r7804 <- 0[fs]
	load.32     %r7805 <- 48[%r7804]
	scast.64    %r7806 <- (32) %r7805
	muls.64     %r7807 <- %r7806, $4
	add.64*     %r7808 <- %r7803, %r7807
	store.32    %r7801 -> 0[%r7808]
	load.64*    %r7809 <- 0[fs]
	load.32     %r7810 <- 48[%r7809]
	add.32      %r7811 <- %r7810, $1
	load.64*    %r7812 <- 0[f]
	load.32     %r7813 <- 84[%r7812]
	setgt.32    %r7814 <- %r7811, %r7813
	cbr         %r7814, .L1841, .L1842

.L1841:
	load.64*    %r7815 <- 0[fs]
	load.64*    %r7816 <- 32[%r7815]
	load.64*    %r7817 <- 0[f]
	load.64*    %r7818 <- 40[%r7817]
	cast.64*    %r7819 <- (64) %r7818
	load.64*    %r7820 <- 0[f]
	add.64*     %r7821 <- %r7820, $84
	symaddr.64* %r7822 <- <anon symbol:0x1aa7be8>
	push.64*    %r7816
	push.64*    %r7819
	push.64*    %r7821
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7822
	call.64*    %r7823 <- luaM_growaux_
	ptrcast.64* %r7824 <- (64) %r7823
	load.64*    %r7825 <- 0[f]
	store.64*   %r7824 -> 40[%r7825]
	br          .L1842

.L1842:
	load.32     %r7826 <- 0[line]
	load.64*    %r7827 <- 0[f]
	load.64*    %r7828 <- 40[%r7827]
	load.64*    %r7829 <- 0[fs]
	load.32     %r7830 <- 48[%r7829]
	scast.64    %r7831 <- (32) %r7830
	muls.64     %r7832 <- %r7831, $4
	add.64*     %r7833 <- %r7828, %r7832
	store.32    %r7826 -> 0[%r7833]
	load.64*    %r7834 <- 0[fs]
	load.32     %r7835 <- 48[%r7834]
	add.32      %r7836 <- %r7835, $1
	store.32    %r7836 -> 48[%r7834]
	phisrc.32   %phi325(return) <- %r7835
	br          .L1843

.L1843:
	phi.32      %r7837 <- %phi325(return)
	ret.32      %r7835


luaK_codeABC:
.L1844:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[o]
	store.32    %arg3 -> 0[a]
	store.32    %arg4 -> 0[b]
	store.32    %arg5 -> 0[c]
	load.64*    %r7838 <- 0[fs]
	load.32     %r7839 <- 0[o]
	scast.32    %r7840 <- (32) %r7839
	shl.32      %r7841 <- %r7840, $0
	load.32     %r7842 <- 0[a]
	scast.32    %r7843 <- (32) %r7842
	shl.32      %r7844 <- %r7843, $6
	or.32       %r7845 <- %r7841, %r7844
	load.32     %r7846 <- 0[b]
	scast.32    %r7847 <- (32) %r7846
	shl.32      %r7848 <- %r7847, $23
	or.32       %r7849 <- %r7845, %r7848
	load.32     %r7850 <- 0[c]
	scast.32    %r7851 <- (32) %r7850
	shl.32      %r7852 <- %r7851, $14
	or.32       %r7853 <- %r7849, %r7852
	load.64*    %r7854 <- 0[fs]
	load.64*    %r7855 <- 24[%r7854]
	load.32     %r7856 <- 8[%r7855]
	push.64*    %r7838
	push.32     %r7853
	push.32     %r7856
	call.32     %r7857 <- luaK_code
	phisrc.32   %phi326(return) <- %r7857
	br          .L1845

.L1845:
	phi.32      %r7858 <- %phi326(return)
	ret.32      %r7857


luaK_codeABx:
.L1846:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[o]
	store.32    %arg3 -> 0[a]
	store.32    %arg4 -> 0[bc]
	load.64*    %r7859 <- 0[fs]
	load.32     %r7860 <- 0[o]
	scast.32    %r7861 <- (32) %r7860
	shl.32      %r7862 <- %r7861, $0
	load.32     %r7863 <- 0[a]
	scast.32    %r7864 <- (32) %r7863
	shl.32      %r7865 <- %r7864, $6
	or.32       %r7866 <- %r7862, %r7865
	load.32     %r7867 <- 0[bc]
	cast.32     %r7868 <- (32) %r7867
	shl.32      %r7869 <- %r7868, $14
	or.32       %r7870 <- %r7866, %r7869
	load.64*    %r7871 <- 0[fs]
	load.64*    %r7872 <- 24[%r7871]
	load.32     %r7873 <- 8[%r7872]
	push.64*    %r7859
	push.32     %r7870
	push.32     %r7873
	call.32     %r7874 <- luaK_code
	phisrc.32   %phi327(return) <- %r7874
	br          .L1847

.L1847:
	phi.32      %r7875 <- %phi327(return)
	ret.32      %r7874


luaK_setlist:
.L1848:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[base]
	store.32    %arg3 -> 0[nelems]
	store.32    %arg4 -> 0[tostore]
	load.32     %r7876 <- 0[nelems]
	sub.32      %r7877 <- %r7876, $1
	divs.32     %r7878 <- %r7877, $50
	add.32      %r7879 <- %r7878, $1
	store.32    %r7879 -> 0[c]
	load.32     %r7880 <- 0[tostore]
	load.32     %r7881 <- 0[tostore]
	seteq.32    %r7882 <- %r7881, $0xffffffff
	select.32   %r7883 <- %r7882, $0, %r7880
	store.32    %r7883 -> 0[b]
	load.32     %r7884 <- 0[c]
	setle.32    %r7885 <- %r7884, $511
	cbr         %r7885, .L1849, .L1850

.L1849:
	load.64*    %r7886 <- 0[fs]
	load.32     %r7887 <- 0[base]
	load.32     %r7888 <- 0[b]
	load.32     %r7889 <- 0[c]
	push.64*    %r7886
	push.32     $34
	push.32     %r7887
	push.32     %r7888
	push.32     %r7889
	call.32     %r7890 <- luaK_codeABC
	br          .L1851

.L1850:
	load.64*    %r7891 <- 0[fs]
	load.32     %r7892 <- 0[base]
	load.32     %r7893 <- 0[b]
	push.64*    %r7891
	push.32     $34
	push.32     %r7892
	push.32     %r7893
	push.32     $0
	call.32     %r7894 <- luaK_codeABC
	load.64*    %r7895 <- 0[fs]
	load.32     %r7896 <- 0[c]
	scast.32    %r7897 <- (32) %r7896
	load.64*    %r7898 <- 0[fs]
	load.64*    %r7899 <- 24[%r7898]
	load.32     %r7900 <- 8[%r7899]
	push.64*    %r7895
	push.32     %r7897
	push.32     %r7900
	call.32     %r7901 <- luaK_code
	br          .L1851

.L1851:
	load.32     %r7902 <- 0[base]
	add.32      %r7903 <- %r7902, $1
	load.64*    %r7904 <- 0[fs]
	store.32    %r7903 -> 60[%r7904]
	br          .L1852

.L1852:
	ret


anchor_token:
.L1853:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r7905 <- 0[ls]
	load.32     %r7906 <- 16[%r7905]
	seteq.32    %r7907 <- %r7906, $285
	cbr         %r7907, .L1854, .L1856

.L1856:
	load.64*    %r7908 <- 0[ls]
	load.32     %r7909 <- 16[%r7908]
	seteq.32    %r7910 <- %r7909, $286
	cbr         %r7910, .L1854, .L1855

.L1854:
	load.64*    %r7911 <- 0[ls]
	load.64*    %r7912 <- 24[%r7911]
	store.64*   %r7912 -> 0[ts]
	load.64*    %r7913 <- 0[ls]
	load.64*    %r7914 <- 0[ts]
	add.64*     %r7915 <- %r7914, $24
	ptrcast.64* %r7916 <- (64) %r7915
	load.64*    %r7917 <- 0[ts]
	load.64     %r7918 <- 16[%r7917]
	push.64*    %r7913
	push.64*    %r7916
	push.64     %r7918
	call.64*    %r7919 <- luaX_newstring
	br          .L1855

.L1855:
	ret


error_expected:
.L1857:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.64*    %r7920 <- 0[ls]
	load.64*    %r7921 <- 0[ls]
	load.64*    %r7922 <- 56[%r7921]
	symaddr.64* %r7923 <- <anon symbol:0x1ab1dc8>
	load.64*    %r7924 <- 0[ls]
	load.32     %r7925 <- 0[token]
	push.64*    %r7924
	push.32     %r7925
	call.64*    %r7926 <- luaX_token2str
	push.64*    %r7922
	push.64*    %r7923
	push.64*    %r7926
	call.64*    %r7927 <- luaO_pushfstring
	push.64*    %r7920
	push.64*    %r7927
	call        luaX_syntaxerror
	br          .L1858

.L1858:
	ret


errorlimit:
.L1859:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[limit]
	store.64*   %arg3 -> 0[what]
	load.64*    %r7928 <- 0[fs]
	load.64*    %r7929 <- 0[%r7928]
	load.32     %r7930 <- 96[%r7929]
	seteq.32    %r7931 <- %r7930, $0
	cbr         %r7931, .L1860, .L1861

.L1860:
	load.64*    %r7932 <- 0[fs]
	load.64*    %r7933 <- 32[%r7932]
	symaddr.64* %r7934 <- <anon symbol:0x1ab2fe8>
	load.32     %r7935 <- 0[limit]
	load.64*    %r7936 <- 0[what]
	push.64*    %r7933
	push.64*    %r7934
	push.32     %r7935
	push.64*    %r7936
	call.64*    %r7937 <- luaO_pushfstring
	phisrc.64*  %phi328 <- %r7937
	br          .L1862

.L1861:
	load.64*    %r7938 <- 0[fs]
	load.64*    %r7939 <- 32[%r7938]
	symaddr.64* %r7940 <- <anon symbol:0x1ab26d8>
	load.64*    %r7941 <- 0[fs]
	load.64*    %r7942 <- 0[%r7941]
	load.32     %r7943 <- 96[%r7942]
	load.32     %r7944 <- 0[limit]
	load.64*    %r7945 <- 0[what]
	push.64*    %r7939
	push.64*    %r7940
	push.32     %r7943
	push.32     %r7944
	push.64*    %r7945
	call.64*    %r7946 <- luaO_pushfstring
	phisrc.64*  %phi329 <- %r7946
	br          .L1862

.L1862:
	phi.64*     %r7947 <- %phi328, %phi329
	store.64*   %r7947 -> 0[msg]
	load.64*    %r7948 <- 0[fs]
	load.64*    %r7949 <- 24[%r7948]
	load.64*    %r7950 <- 0[msg]
	push.64*    %r7949
	push.64*    %r7950
	push.32     $0
	call        luaX_lexerror
	br          .L1863

.L1863:
	ret


testnext:
.L1864:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r7951 <- 0[ls]
	load.32     %r7952 <- 16[%r7951]
	load.32     %r7953 <- 0[c]
	seteq.32    %r7954 <- %r7952, %r7953
	cbr         %r7954, .L1865, .L1866

.L1865:
	load.64*    %r7955 <- 0[ls]
	push.64*    %r7955
	call        luaX_next
	phisrc.32   %phi330(return) <- $1
	br          .L1867

.L1866:
	phisrc.32   %phi331(return) <- $0
	br          .L1867

.L1867:
	phi.32      %r7956 <- %phi330(return), %phi331(return)
	ret.32      %r7956


check:
.L1869:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r7957 <- 0[ls]
	load.32     %r7958 <- 16[%r7957]
	load.32     %r7959 <- 0[c]
	setne.32    %r7960 <- %r7958, %r7959
	cbr         %r7960, .L1870, .L1871

.L1870:
	load.64*    %r7961 <- 0[ls]
	load.32     %r7962 <- 0[c]
	push.64*    %r7961
	push.32     %r7962
	call        error_expected
	br          .L1871

.L1871:
	ret


checknext:
.L1872:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r7963 <- 0[ls]
	load.32     %r7964 <- 0[c]
	push.64*    %r7963
	push.32     %r7964
	call        check
	load.64*    %r7965 <- 0[ls]
	push.64*    %r7965
	call        luaX_next
	br          .L1873

.L1873:
	ret


check_match:
.L1874:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[what]
	store.32    %arg3 -> 0[who]
	store.32    %arg4 -> 0[where]
	load.64*    %r7966 <- 0[ls]
	load.32     %r7967 <- 0[what]
	push.64*    %r7966
	push.32     %r7967
	call.32     %r7968 <- testnext
	cbr         %r7968, .L1876, .L1875

.L1875:
	load.32     %r7969 <- 0[where]
	load.64*    %r7970 <- 0[ls]
	load.32     %r7971 <- 4[%r7970]
	seteq.32    %r7972 <- %r7969, %r7971
	cbr         %r7972, .L1877, .L1878

.L1877:
	load.64*    %r7973 <- 0[ls]
	load.32     %r7974 <- 0[what]
	push.64*    %r7973
	push.32     %r7974
	call        error_expected
	br          .L1879

.L1878:
	load.64*    %r7975 <- 0[ls]
	load.64*    %r7976 <- 0[ls]
	load.64*    %r7977 <- 56[%r7976]
	symaddr.64* %r7978 <- <anon symbol:0x1ab3c98>
	load.64*    %r7979 <- 0[ls]
	load.32     %r7980 <- 0[what]
	push.64*    %r7979
	push.32     %r7980
	call.64*    %r7981 <- luaX_token2str
	load.64*    %r7982 <- 0[ls]
	load.32     %r7983 <- 0[who]
	push.64*    %r7982
	push.32     %r7983
	call.64*    %r7984 <- luaX_token2str
	load.32     %r7985 <- 0[where]
	push.64*    %r7977
	push.64*    %r7978
	push.64*    %r7981
	push.64*    %r7984
	push.32     %r7985
	call.64*    %r7986 <- luaO_pushfstring
	push.64*    %r7975
	push.64*    %r7986
	call        luaX_syntaxerror
	br          .L1879

.L1879:
	br          .L1876

.L1876:
	ret


str_checkname:
.L1880:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r7987 <- 0[ls]
	push.64*    %r7987
	push.32     $285
	call        check
	load.64*    %r7988 <- 0[ls]
	load.64*    %r7989 <- 24[%r7988]
	store.64*   %r7989 -> 0[ts]
	load.64*    %r7990 <- 0[ls]
	push.64*    %r7990
	call        luaX_next
	load.64*    %r7991 <- 0[ts]
	phisrc.64*  %phi332(return) <- %r7991
	br          .L1881

.L1881:
	phi.64*     %r7992 <- %phi332(return)
	ret.64*     %r7991


init_exp:
.L1882:
	<entry-point>
	store.64*   %arg1 -> 0[e]
	store.32    %arg2 -> 0[k]
	store.32    %arg3 -> 0[i]
	load.64*    %r7993 <- 0[e]
	store.32    $0xffffffff -> 16[%r7993]
	load.64*    %r7994 <- 0[e]
	store.32    $0xffffffff -> 20[%r7994]
	load.32     %r7995 <- 0[k]
	load.64*    %r7996 <- 0[e]
	store.32    %r7995 -> 0[%r7996]
	load.32     %r7997 <- 0[i]
	load.64*    %r7998 <- 0[e]
	store.32    %r7997 -> 8[%r7998]
	br          .L1883

.L1883:
	ret


codestring:
.L1884:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	store.64*   %arg3 -> 0[s]
	load.64*    %r7999 <- 0[e]
	load.64*    %r8000 <- 0[ls]
	load.64*    %r8001 <- 48[%r8000]
	load.64*    %r8002 <- 0[s]
	push.64*    %r8001
	push.64*    %r8002
	call.32     %r8003 <- luaK_stringK
	push.64*    %r7999
	push.32     $4
	push.32     %r8003
	call        init_exp
	br          .L1885

.L1885:
	ret


checkname:
.L1886:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	load.64*    %r8004 <- 0[ls]
	load.64*    %r8005 <- 0[e]
	load.64*    %r8006 <- 0[ls]
	push.64*    %r8006
	call.64*    %r8007 <- str_checkname
	push.64*    %r8004
	push.64*    %r8005
	push.64*    %r8007
	call        codestring
	br          .L1887

.L1887:
	ret


registerlocalvar:
.L1888:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[varname]
	load.64*    %r8008 <- 0[ls]
	load.64*    %r8009 <- 48[%r8008]
	store.64*   %r8009 -> 0[fs]
	load.64*    %r8010 <- 0[fs]
	load.64*    %r8011 <- 0[%r8010]
	store.64*   %r8011 -> 0[f]
	load.64*    %r8012 <- 0[f]
	load.32     %r8013 <- 92[%r8012]
	store.32    %r8013 -> 0[oldsize]
	load.64*    %r8014 <- 0[fs]
	load.16     %r8015 <- 72[%r8014]
	scast.32    %r8016 <- (16) %r8015
	add.32      %r8017 <- %r8016, $1
	load.64*    %r8018 <- 0[f]
	load.32     %r8019 <- 92[%r8018]
	setgt.32    %r8020 <- %r8017, %r8019
	cbr         %r8020, .L1889, .L1890

.L1889:
	load.64*    %r8021 <- 0[ls]
	load.64*    %r8022 <- 56[%r8021]
	load.64*    %r8023 <- 0[f]
	load.64*    %r8024 <- 48[%r8023]
	cast.64*    %r8025 <- (64) %r8024
	load.64*    %r8026 <- 0[f]
	add.64*     %r8027 <- %r8026, $92
	symaddr.64* %r8028 <- <anon symbol:0x1ab5e20>
	push.64*    %r8022
	push.64*    %r8025
	push.64*    %r8027
	push.64     $16
	push.32     $0x7fff
	push.64*    %r8028
	call.64*    %r8029 <- luaM_growaux_
	ptrcast.64* %r8030 <- (64) %r8029
	load.64*    %r8031 <- 0[f]
	store.64*   %r8030 -> 48[%r8031]
	br          .L1890

.L1890:
	br          .L1894

.L1894:
	load.32     %r8032 <- 0[oldsize]
	load.64*    %r8033 <- 0[f]
	load.32     %r8034 <- 92[%r8033]
	setlt.32    %r8035 <- %r8032, %r8034
	cbr         %r8035, .L1891, .L1893

.L1891:
	load.64*    %r8036 <- 0[f]
	load.64*    %r8037 <- 48[%r8036]
	load.32     %r8038 <- 0[oldsize]
	add.32      %r8039 <- %r8038, $1
	store.32    %r8039 -> 0[oldsize]
	scast.64    %r8040 <- (32) %r8038
	muls.64     %r8041 <- %r8040, $16
	add.64*     %r8042 <- %r8037, %r8041
	store.64*   $0 -> 0[%r8042]
	br          .L1892

.L1892:
	br          .L1894

.L1893:
	load.64*    %r8043 <- 0[varname]
	load.64*    %r8044 <- 0[f]
	load.64*    %r8045 <- 48[%r8044]
	load.64*    %r8046 <- 0[fs]
	load.16     %r8047 <- 72[%r8046]
	scast.64    %r8048 <- (16) %r8047
	muls.64     %r8049 <- %r8048, $16
	add.64*     %r8050 <- %r8045, %r8049
	store.64*   %r8043 -> 0[%r8050]
	load.64*    %r8051 <- 0[varname]
	ptrcast.64* %r8052 <- (64) %r8051
	load.8      %r8053 <- 9[%r8052]
	cast.32     %r8054 <- (8) %r8053
	and.32      %r8055 <- %r8054, $3
	cbr         %r8055, .L1897, .L1896

.L1897:
	load.64*    %r8056 <- 0[f]
	ptrcast.64* %r8057 <- (64) %r8056
	load.8      %r8058 <- 9[%r8057]
	cast.32     %r8059 <- (8) %r8058
	and.32      %r8060 <- %r8059, $4
	cbr         %r8060, .L1895, .L1896

.L1895:
	load.64*    %r8061 <- 0[ls]
	load.64*    %r8062 <- 56[%r8061]
	load.64*    %r8063 <- 0[f]
	ptrcast.64* %r8064 <- (64) %r8063
	load.64*    %r8065 <- 0[varname]
	ptrcast.64* %r8066 <- (64) %r8065
	push.64*    %r8062
	push.64*    %r8064
	push.64*    %r8066
	call        luaC_barrierf
	br          .L1896

.L1896:
	load.64*    %r8067 <- 0[fs]
	load.16     %r8068 <- 72[%r8067]
	add.16      %r8069 <- %r8068, $1
	store.16    %r8069 -> 72[%r8067]
	scast.32    %r8070 <- (16) %r8068
	phisrc.32   %phi333(return) <- %r8070
	br          .L1898

.L1898:
	phi.32      %r8071 <- %phi333(return)
	ret.32      %r8070


new_localvar:
.L1899:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[name]
	store.32    %arg3 -> 0[n]
	load.64*    %r8072 <- 0[ls]
	load.64*    %r8073 <- 48[%r8072]
	store.64*   %r8073 -> 0[fs]
	load.64*    %r8074 <- 0[fs]
	load.8      %r8075 <- 74[%r8074]
	cast.32     %r8076 <- (8) %r8075
	load.32     %r8077 <- 0[n]
	add.32      %r8078 <- %r8076, %r8077
	add.32      %r8079 <- %r8078, $1
	setgt.32    %r8080 <- %r8079, $200
	cbr         %r8080, .L1900, .L1901

.L1900:
	load.64*    %r8081 <- 0[fs]
	symaddr.64* %r8082 <- <anon symbol:0x1ab72f8>
	push.64*    %r8081
	push.32     $200
	push.64*    %r8082
	call        errorlimit
	br          .L1901

.L1901:
	load.64*    %r8083 <- 0[ls]
	load.64*    %r8084 <- 0[name]
	push.64*    %r8083
	push.64*    %r8084
	call.32     %r8085 <- registerlocalvar
	scast.16    %r8086 <- (32) %r8085
	load.64*    %r8087 <- 0[fs]
	add.64*     %r8088 <- %r8087, $196
	load.64*    %r8089 <- 0[fs]
	load.8      %r8090 <- 74[%r8089]
	cast.32     %r8091 <- (8) %r8090
	load.32     %r8092 <- 0[n]
	add.32      %r8093 <- %r8091, %r8092
	scast.64    %r8094 <- (32) %r8093
	muls.64     %r8095 <- %r8094, $2
	add.64*     %r8096 <- %r8088, %r8095
	store.16    %r8086 -> 0[%r8096]
	br          .L1902

.L1902:
	ret


adjustlocalvars:
.L1903:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[nvars]
	load.64*    %r8097 <- 0[ls]
	load.64*    %r8098 <- 48[%r8097]
	store.64*   %r8098 -> 0[fs]
	load.64*    %r8099 <- 0[fs]
	load.8      %r8100 <- 74[%r8099]
	cast.32     %r8101 <- (8) %r8100
	load.32     %r8102 <- 0[nvars]
	add.32      %r8103 <- %r8101, %r8102
	scast.8     %r8104 <- (32) %r8103
	load.64*    %r8105 <- 0[fs]
	store.8     %r8104 -> 74[%r8105]
	br          .L1907

.L1907:
	load.32     %r8106 <- 0[nvars]
	cbr         %r8106, .L1904, .L1906

.L1904:
	load.64*    %r8107 <- 0[fs]
	load.32     %r8108 <- 48[%r8107]
	load.64*    %r8109 <- 0[fs]
	load.64*    %r8110 <- 0[%r8109]
	load.64*    %r8111 <- 48[%r8110]
	load.64*    %r8112 <- 0[fs]
	add.64*     %r8113 <- %r8112, $196
	load.64*    %r8114 <- 0[fs]
	load.8      %r8115 <- 74[%r8114]
	cast.32     %r8116 <- (8) %r8115
	load.32     %r8117 <- 0[nvars]
	sub.32      %r8118 <- %r8116, %r8117
	scast.64    %r8119 <- (32) %r8118
	muls.64     %r8120 <- %r8119, $2
	add.64*     %r8121 <- %r8113, %r8120
	load.16     %r8122 <- 0[%r8121]
	cast.64     %r8123 <- (16) %r8122
	muls.64     %r8124 <- %r8123, $16
	add.64*     %r8125 <- %r8111, %r8124
	store.32    %r8108 -> 8[%r8125]
	br          .L1905

.L1905:
	load.32     %r8126 <- 0[nvars]
	sub.32      %r8127 <- %r8126, $1
	store.32    %r8127 -> 0[nvars]
	br          .L1907

.L1906:
	ret


removevars:
.L1908:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[tolevel]
	load.64*    %r8128 <- 0[ls]
	load.64*    %r8129 <- 48[%r8128]
	store.64*   %r8129 -> 0[fs]
	br          .L1912

.L1912:
	load.64*    %r8130 <- 0[fs]
	load.8      %r8131 <- 74[%r8130]
	cast.32     %r8132 <- (8) %r8131
	load.32     %r8133 <- 0[tolevel]
	setgt.32    %r8134 <- %r8132, %r8133
	cbr         %r8134, .L1909, .L1911

.L1909:
	load.64*    %r8135 <- 0[fs]
	load.32     %r8136 <- 48[%r8135]
	load.64*    %r8137 <- 0[fs]
	load.64*    %r8138 <- 0[%r8137]
	load.64*    %r8139 <- 48[%r8138]
	load.64*    %r8140 <- 0[fs]
	add.64*     %r8141 <- %r8140, $196
	load.64*    %r8142 <- 0[fs]
	load.8      %r8143 <- 74[%r8142]
	sub.8       %r8144 <- %r8143, $1
	store.8     %r8144 -> 74[%r8142]
	cast.64     %r8145 <- (8) %r8144
	muls.64     %r8146 <- %r8145, $2
	add.64*     %r8147 <- %r8141, %r8146
	load.16     %r8148 <- 0[%r8147]
	cast.64     %r8149 <- (16) %r8148
	muls.64     %r8150 <- %r8149, $16
	add.64*     %r8151 <- %r8139, %r8150
	store.32    %r8136 -> 12[%r8151]
	br          .L1910

.L1910:
	br          .L1912

.L1911:
	ret


indexupvalue:
.L1913:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[name]
	store.64*   %arg3 -> 0[v]
	load.64*    %r8152 <- 0[fs]
	load.64*    %r8153 <- 0[%r8152]
	store.64*   %r8153 -> 0[f]
	load.64*    %r8154 <- 0[f]
	load.32     %r8155 <- 72[%r8154]
	store.32    %r8155 -> 0[oldsize]
	store.32    $0 -> 0[i]
	br          .L1917

.L1917:
	load.32     %r8156 <- 0[i]
	load.64*    %r8157 <- 0[f]
	load.8      %r8158 <- 112[%r8157]
	cast.32     %r8159 <- (8) %r8158
	setlt.32    %r8160 <- %r8156, %r8159
	cbr         %r8160, .L1914, .L1916

.L1914:
	load.64*    %r8161 <- 0[fs]
	add.64*     %r8162 <- %r8161, $75
	load.32     %r8163 <- 0[i]
	scast.64    %r8164 <- (32) %r8163
	muls.64     %r8165 <- %r8164, $2
	add.64*     %r8166 <- %r8162, %r8165
	load.8      %r8167 <- 0[%r8166]
	cast.32     %r8168 <- (8) %r8167
	load.64*    %r8169 <- 0[v]
	load.32     %r8170 <- 0[%r8169]
	scast.32    %r8171 <- (32) %r8170
	seteq.32    %r8172 <- %r8168, %r8171
	cbr         %r8172, .L1920, .L1919

.L1920:
	load.64*    %r8173 <- 0[fs]
	add.64*     %r8174 <- %r8173, $75
	load.32     %r8175 <- 0[i]
	scast.64    %r8176 <- (32) %r8175
	muls.64     %r8177 <- %r8176, $2
	add.64*     %r8178 <- %r8174, %r8177
	load.8      %r8179 <- 1[%r8178]
	cast.32     %r8180 <- (8) %r8179
	load.64*    %r8181 <- 0[v]
	load.32     %r8182 <- 8[%r8181]
	seteq.32    %r8183 <- %r8180, %r8182
	cbr         %r8183, .L1918, .L1919

.L1918:
	load.32     %r8184 <- 0[i]
	phisrc.32   %phi334(return) <- %r8184
	br          .L1921

.L1919:
	br          .L1915

.L1915:
	load.32     %r8186 <- 0[i]
	add.32      %r8187 <- %r8186, $1
	store.32    %r8187 -> 0[i]
	br          .L1917

.L1916:
	load.64*    %r8188 <- 0[f]
	load.8      %r8189 <- 112[%r8188]
	cast.32     %r8190 <- (8) %r8189
	add.32      %r8191 <- %r8190, $1
	setgt.32    %r8192 <- %r8191, $60
	cbr         %r8192, .L1922, .L1923

.L1922:
	load.64*    %r8193 <- 0[fs]
	symaddr.64* %r8194 <- <anon symbol:0x1ac2d50>
	push.64*    %r8193
	push.32     $60
	push.64*    %r8194
	call        errorlimit
	br          .L1923

.L1923:
	load.64*    %r8195 <- 0[f]
	load.8      %r8196 <- 112[%r8195]
	cast.32     %r8197 <- (8) %r8196
	add.32      %r8198 <- %r8197, $1
	load.64*    %r8199 <- 0[f]
	load.32     %r8200 <- 72[%r8199]
	setgt.32    %r8201 <- %r8198, %r8200
	cbr         %r8201, .L1924, .L1925

.L1924:
	load.64*    %r8202 <- 0[fs]
	load.64*    %r8203 <- 32[%r8202]
	load.64*    %r8204 <- 0[f]
	load.64*    %r8205 <- 56[%r8204]
	cast.64*    %r8206 <- (64) %r8205
	load.64*    %r8207 <- 0[f]
	add.64*     %r8208 <- %r8207, $72
	symaddr.64* %r8209 <- <anon symbol:0x1ac3cb8>
	push.64*    %r8203
	push.64*    %r8206
	push.64*    %r8208
	push.64     $8
	push.32     $0x7ffffffd
	push.64*    %r8209
	call.64*    %r8210 <- luaM_growaux_
	ptrcast.64* %r8211 <- (64) %r8210
	load.64*    %r8212 <- 0[f]
	store.64*   %r8211 -> 56[%r8212]
	br          .L1925

.L1925:
	br          .L1929

.L1929:
	load.32     %r8213 <- 0[oldsize]
	load.64*    %r8214 <- 0[f]
	load.32     %r8215 <- 72[%r8214]
	setlt.32    %r8216 <- %r8213, %r8215
	cbr         %r8216, .L1926, .L1928

.L1926:
	load.64*    %r8217 <- 0[f]
	load.64*    %r8218 <- 56[%r8217]
	load.32     %r8219 <- 0[oldsize]
	add.32      %r8220 <- %r8219, $1
	store.32    %r8220 -> 0[oldsize]
	scast.64    %r8221 <- (32) %r8219
	muls.64     %r8222 <- %r8221, $8
	add.64*     %r8223 <- %r8218, %r8222
	store.64*   $0 -> 0[%r8223]
	br          .L1927

.L1927:
	br          .L1929

.L1928:
	load.64*    %r8224 <- 0[name]
	load.64*    %r8225 <- 0[f]
	load.64*    %r8226 <- 56[%r8225]
	load.64*    %r8227 <- 0[f]
	load.8      %r8228 <- 112[%r8227]
	cast.64     %r8229 <- (8) %r8228
	muls.64     %r8230 <- %r8229, $8
	add.64*     %r8231 <- %r8226, %r8230
	store.64*   %r8224 -> 0[%r8231]
	load.64*    %r8232 <- 0[name]
	ptrcast.64* %r8233 <- (64) %r8232
	load.8      %r8234 <- 9[%r8233]
	cast.32     %r8235 <- (8) %r8234
	and.32      %r8236 <- %r8235, $3
	cbr         %r8236, .L1932, .L1931

.L1932:
	load.64*    %r8237 <- 0[f]
	ptrcast.64* %r8238 <- (64) %r8237
	load.8      %r8239 <- 9[%r8238]
	cast.32     %r8240 <- (8) %r8239
	and.32      %r8241 <- %r8240, $4
	cbr         %r8241, .L1930, .L1931

.L1930:
	load.64*    %r8242 <- 0[fs]
	load.64*    %r8243 <- 32[%r8242]
	load.64*    %r8244 <- 0[f]
	ptrcast.64* %r8245 <- (64) %r8244
	load.64*    %r8246 <- 0[name]
	ptrcast.64* %r8247 <- (64) %r8246
	push.64*    %r8243
	push.64*    %r8245
	push.64*    %r8247
	call        luaC_barrierf
	br          .L1931

.L1931:
	load.64*    %r8248 <- 0[v]
	load.32     %r8249 <- 0[%r8248]
	scast.8     %r8250 <- (32) %r8249
	load.64*    %r8251 <- 0[fs]
	add.64*     %r8252 <- %r8251, $75
	load.64*    %r8253 <- 0[f]
	load.8      %r8254 <- 112[%r8253]
	cast.64     %r8255 <- (8) %r8254
	muls.64     %r8256 <- %r8255, $2
	add.64*     %r8257 <- %r8252, %r8256
	store.8     %r8250 -> 0[%r8257]
	load.64*    %r8258 <- 0[v]
	load.32     %r8259 <- 8[%r8258]
	scast.8     %r8260 <- (32) %r8259
	load.64*    %r8261 <- 0[fs]
	add.64*     %r8262 <- %r8261, $75
	load.64*    %r8263 <- 0[f]
	load.8      %r8264 <- 112[%r8263]
	cast.64     %r8265 <- (8) %r8264
	muls.64     %r8266 <- %r8265, $2
	add.64*     %r8267 <- %r8262, %r8266
	store.8     %r8260 -> 1[%r8267]
	load.64*    %r8268 <- 0[f]
	load.8      %r8269 <- 112[%r8268]
	add.8       %r8270 <- %r8269, $1
	store.8     %r8270 -> 112[%r8268]
	cast.32     %r8271 <- (8) %r8269
	phisrc.32   %phi335(return) <- %r8271
	br          .L1921

.L1921:
	phi.32      %r8185 <- %phi334(return), %phi335(return)
	ret.32      %r8185


searchvar:
.L1933:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[n]
	load.64*    %r8272 <- 0[fs]
	load.8      %r8273 <- 74[%r8272]
	cast.32     %r8274 <- (8) %r8273
	sub.32      %r8275 <- %r8274, $1
	store.32    %r8275 -> 0[i]
	br          .L1937

.L1937:
	load.32     %r8276 <- 0[i]
	setge.32    %r8277 <- %r8276, $0
	cbr         %r8277, .L1934, .L1936

.L1934:
	load.64*    %r8278 <- 0[n]
	load.64*    %r8279 <- 0[fs]
	load.64*    %r8280 <- 0[%r8279]
	load.64*    %r8281 <- 48[%r8280]
	load.64*    %r8282 <- 0[fs]
	add.64*     %r8283 <- %r8282, $196
	load.32     %r8284 <- 0[i]
	scast.64    %r8285 <- (32) %r8284
	muls.64     %r8286 <- %r8285, $2
	add.64*     %r8287 <- %r8283, %r8286
	load.16     %r8288 <- 0[%r8287]
	cast.64     %r8289 <- (16) %r8288
	muls.64     %r8290 <- %r8289, $16
	add.64*     %r8291 <- %r8281, %r8290
	load.64*    %r8292 <- 0[%r8291]
	seteq.32    %r8293 <- %r8278, %r8292
	cbr         %r8293, .L1938, .L1939

.L1938:
	load.32     %r8294 <- 0[i]
	phisrc.32   %phi336(return) <- %r8294
	br          .L1940

.L1939:
	br          .L1935

.L1935:
	load.32     %r8296 <- 0[i]
	sub.32      %r8297 <- %r8296, $1
	store.32    %r8297 -> 0[i]
	br          .L1937

.L1936:
	phisrc.32   %phi337(return) <- $0xffffffff
	br          .L1940

.L1940:
	phi.32      %r8295 <- %phi336(return), %phi337(return)
	ret.32      %r8295


markupval:
.L1941:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[level]
	load.64*    %r8298 <- 0[fs]
	load.64*    %r8299 <- 40[%r8298]
	store.64*   %r8299 -> 0[bl]
	br          .L1945

.L1945:
	load.64*    %r8300 <- 0[bl]
	cbr         %r8300, .L1946, .L1944

.L1946:
	load.64*    %r8301 <- 0[bl]
	load.8      %r8302 <- 12[%r8301]
	cast.32     %r8303 <- (8) %r8302
	load.32     %r8304 <- 0[level]
	setgt.32    %r8305 <- %r8303, %r8304
	cbr         %r8305, .L1942, .L1944

.L1942:
	load.64*    %r8306 <- 0[bl]
	load.64*    %r8307 <- 0[%r8306]
	store.64*   %r8307 -> 0[bl]
	br          .L1943

.L1943:
	br          .L1945

.L1944:
	load.64*    %r8308 <- 0[bl]
	cbr         %r8308, .L1947, .L1948

.L1947:
	load.64*    %r8309 <- 0[bl]
	store.8     $1 -> 13[%r8309]
	br          .L1948

.L1948:
	ret


singlevaraux:
.L1949:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[n]
	store.64*   %arg3 -> 0[var]
	store.32    %arg4 -> 0[base]
	load.64*    %r8310 <- 0[fs]
	seteq.32    %r8311 <- %r8310, $0
	cbr         %r8311, .L1950, .L1951

.L1950:
	load.64*    %r8312 <- 0[var]
	push.64*    %r8312
	push.32     $8
	push.32     $255
	call        init_exp
	phisrc.32   %phi338(return) <- $8
	br          .L1952

.L1951:
	load.64*    %r8314 <- 0[fs]
	load.64*    %r8315 <- 0[n]
	push.64*    %r8314
	push.64*    %r8315
	call.32     %r8316 <- searchvar
	store.32    %r8316 -> 0[v]
	load.32     %r8317 <- 0[v]
	setge.32    %r8318 <- %r8317, $0
	cbr         %r8318, .L1954, .L1955

.L1954:
	load.64*    %r8319 <- 0[var]
	load.32     %r8320 <- 0[v]
	push.64*    %r8319
	push.32     $6
	push.32     %r8320
	call        init_exp
	load.32     %r8321 <- 0[base]
	cbr         %r8321, .L1957, .L1956

.L1956:
	load.64*    %r8322 <- 0[fs]
	load.32     %r8323 <- 0[v]
	push.64*    %r8322
	push.32     %r8323
	call        markupval
	br          .L1957

.L1957:
	phisrc.32   %phi339(return) <- $6
	br          .L1952

.L1955:
	load.64*    %r8324 <- 0[fs]
	load.64*    %r8325 <- 16[%r8324]
	load.64*    %r8326 <- 0[n]
	load.64*    %r8327 <- 0[var]
	push.64*    %r8325
	push.64*    %r8326
	push.64*    %r8327
	push.32     $0
	call.32     %r8328 <- singlevaraux
	seteq.32    %r8329 <- %r8328, $8
	cbr         %r8329, .L1959, .L1960

.L1959:
	phisrc.32   %phi340(return) <- $8
	br          .L1952

.L1960:
	load.64*    %r8330 <- 0[fs]
	load.64*    %r8331 <- 0[n]
	load.64*    %r8332 <- 0[var]
	push.64*    %r8330
	push.64*    %r8331
	push.64*    %r8332
	call.32     %r8333 <- indexupvalue
	load.64*    %r8334 <- 0[var]
	store.32    %r8333 -> 8[%r8334]
	load.64*    %r8335 <- 0[var]
	store.32    $7 -> 0[%r8335]
	phisrc.32   %phi341(return) <- $7
	br          .L1952

.L1952:
	phi.32      %r8313 <- %phi338(return), %phi339(return), %phi340(return), %phi341(return)
	ret.32      %r8313


singlevar:
.L1961:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[var]
	load.64*    %r8336 <- 0[ls]
	push.64*    %r8336
	call.64*    %r8337 <- str_checkname
	store.64*   %r8337 -> 0[varname]
	load.64*    %r8338 <- 0[ls]
	load.64*    %r8339 <- 48[%r8338]
	store.64*   %r8339 -> 0[fs]
	load.64*    %r8340 <- 0[fs]
	load.64*    %r8341 <- 0[varname]
	load.64*    %r8342 <- 0[var]
	push.64*    %r8340
	push.64*    %r8341
	push.64*    %r8342
	push.32     $1
	call.32     %r8343 <- singlevaraux
	seteq.32    %r8344 <- %r8343, $8
	cbr         %r8344, .L1962, .L1963

.L1962:
	load.64*    %r8345 <- 0[fs]
	load.64*    %r8346 <- 0[varname]
	push.64*    %r8345
	push.64*    %r8346
	call.32     %r8347 <- luaK_stringK
	load.64*    %r8348 <- 0[var]
	store.32    %r8347 -> 8[%r8348]
	br          .L1963

.L1963:
	ret


adjust_assign:
.L1964:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[nvars]
	store.32    %arg3 -> 0[nexps]
	store.64*   %arg4 -> 0[e]
	load.64*    %r8349 <- 0[ls]
	load.64*    %r8350 <- 48[%r8349]
	store.64*   %r8350 -> 0[fs]
	load.32     %r8351 <- 0[nvars]
	load.32     %r8352 <- 0[nexps]
	sub.32      %r8353 <- %r8351, %r8352
	store.32    %r8353 -> 0[extra]
	load.64*    %r8354 <- 0[e]
	load.32     %r8355 <- 0[%r8354]
	scast.32    %r8356 <- (32) %r8355
	seteq.32    %r8357 <- %r8356, $13
	cbr         %r8357, .L1965, .L1967

.L1967:
	load.64*    %r8358 <- 0[e]
	load.32     %r8359 <- 0[%r8358]
	scast.32    %r8360 <- (32) %r8359
	seteq.32    %r8361 <- %r8360, $14
	cbr         %r8361, .L1965, .L1966

.L1965:
	load.32     %r8362 <- 0[extra]
	add.32      %r8363 <- %r8362, $1
	store.32    %r8363 -> 0[extra]
	load.32     %r8364 <- 0[extra]
	setlt.32    %r8365 <- %r8364, $0
	cbr         %r8365, .L1968, .L1969

.L1968:
	store.32    $0 -> 0[extra]
	br          .L1969

.L1969:
	load.64*    %r8366 <- 0[fs]
	load.64*    %r8367 <- 0[e]
	load.32     %r8368 <- 0[extra]
	push.64*    %r8366
	push.64*    %r8367
	push.32     %r8368
	call        luaK_setreturns
	load.32     %r8369 <- 0[extra]
	setgt.32    %r8370 <- %r8369, $1
	cbr         %r8370, .L1970, .L1971

.L1970:
	load.64*    %r8371 <- 0[fs]
	load.32     %r8372 <- 0[extra]
	sub.32      %r8373 <- %r8372, $1
	push.64*    %r8371
	push.32     %r8373
	call        luaK_reserveregs
	br          .L1971

.L1971:
	br          .L1972

.L1966:
	load.64*    %r8374 <- 0[e]
	load.32     %r8375 <- 0[%r8374]
	scast.32    %r8376 <- (32) %r8375
	setne.32    %r8377 <- %r8376, $0
	cbr         %r8377, .L1973, .L1974

.L1973:
	load.64*    %r8378 <- 0[fs]
	load.64*    %r8379 <- 0[e]
	push.64*    %r8378
	push.64*    %r8379
	call        luaK_exp2nextreg
	br          .L1974

.L1974:
	load.32     %r8380 <- 0[extra]
	setgt.32    %r8381 <- %r8380, $0
	cbr         %r8381, .L1975, .L1976

.L1975:
	load.64*    %r8382 <- 0[fs]
	load.32     %r8383 <- 60[%r8382]
	store.32    %r8383 -> 0[reg]
	load.64*    %r8384 <- 0[fs]
	load.32     %r8385 <- 0[extra]
	push.64*    %r8384
	push.32     %r8385
	call        luaK_reserveregs
	load.64*    %r8386 <- 0[fs]
	load.32     %r8387 <- 0[reg]
	load.32     %r8388 <- 0[extra]
	push.64*    %r8386
	push.32     %r8387
	push.32     %r8388
	call        luaK_nil
	br          .L1976

.L1976:
	br          .L1972

.L1972:
	ret


enterlevel:
.L1977:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8389 <- 0[ls]
	load.64*    %r8390 <- 56[%r8389]
	load.16     %r8391 <- 96[%r8390]
	add.16      %r8392 <- %r8391, $1
	store.16    %r8392 -> 96[%r8390]
	cast.32     %r8393 <- (16) %r8392
	setgt.32    %r8394 <- %r8393, $200
	cbr         %r8394, .L1978, .L1979

.L1978:
	load.64*    %r8395 <- 0[ls]
	symaddr.64* %r8396 <- <anon symbol:0x1ac80b0>
	push.64*    %r8395
	push.64*    %r8396
	push.32     $0
	call        luaX_lexerror
	br          .L1979

.L1979:
	ret


enterblock:
.L1980:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[bl]
	store.8     %arg3 -> 0[isbreakable]
	load.64*    %r8397 <- 0[bl]
	store.32    $0xffffffff -> 8[%r8397]
	load.8      %r8398 <- 0[isbreakable]
	load.64*    %r8399 <- 0[bl]
	store.8     %r8398 -> 14[%r8399]
	load.64*    %r8400 <- 0[fs]
	load.8      %r8401 <- 74[%r8400]
	load.64*    %r8402 <- 0[bl]
	store.8     %r8401 -> 12[%r8402]
	load.64*    %r8403 <- 0[bl]
	store.8     $0 -> 13[%r8403]
	load.64*    %r8404 <- 0[fs]
	load.64*    %r8405 <- 40[%r8404]
	load.64*    %r8406 <- 0[bl]
	store.64*   %r8405 -> 0[%r8406]
	load.64*    %r8407 <- 0[bl]
	load.64*    %r8408 <- 0[fs]
	store.64*   %r8407 -> 40[%r8408]
	br          .L1981

.L1981:
	ret


leaveblock:
.L1982:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r8409 <- 0[fs]
	load.64*    %r8410 <- 40[%r8409]
	store.64*   %r8410 -> 0[bl]
	load.64*    %r8411 <- 0[bl]
	load.64*    %r8412 <- 0[%r8411]
	load.64*    %r8413 <- 0[fs]
	store.64*   %r8412 -> 40[%r8413]
	load.64*    %r8414 <- 0[fs]
	load.64*    %r8415 <- 24[%r8414]
	load.64*    %r8416 <- 0[bl]
	load.8      %r8417 <- 12[%r8416]
	cast.32     %r8418 <- (8) %r8417
	push.64*    %r8415
	push.32     %r8418
	call        removevars
	load.64*    %r8419 <- 0[bl]
	load.8      %r8420 <- 13[%r8419]
	cbr         %r8420, .L1983, .L1984

.L1983:
	load.64*    %r8421 <- 0[fs]
	load.64*    %r8422 <- 0[bl]
	load.8      %r8423 <- 12[%r8422]
	cast.32     %r8424 <- (8) %r8423
	push.64*    %r8421
	push.32     $35
	push.32     %r8424
	push.32     $0
	push.32     $0
	call.32     %r8425 <- luaK_codeABC
	br          .L1984

.L1984:
	load.64*    %r8426 <- 0[fs]
	load.8      %r8427 <- 74[%r8426]
	cast.32     %r8428 <- (8) %r8427
	load.64*    %r8429 <- 0[fs]
	store.32    %r8428 -> 60[%r8429]
	load.64*    %r8430 <- 0[fs]
	load.64*    %r8431 <- 0[bl]
	load.32     %r8432 <- 8[%r8431]
	push.64*    %r8430
	push.32     %r8432
	call        luaK_patchtohere
	br          .L1985

.L1985:
	ret


pushclosure:
.L1986:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[func]
	store.64*   %arg3 -> 0[v]
	load.64*    %r8433 <- 0[ls]
	load.64*    %r8434 <- 48[%r8433]
	store.64*   %r8434 -> 0[fs]
	load.64*    %r8435 <- 0[fs]
	load.64*    %r8436 <- 0[%r8435]
	store.64*   %r8436 -> 0[f]
	load.64*    %r8437 <- 0[f]
	load.32     %r8438 <- 88[%r8437]
	store.32    %r8438 -> 0[oldsize]
	load.64*    %r8439 <- 0[fs]
	load.32     %r8440 <- 68[%r8439]
	add.32      %r8441 <- %r8440, $1
	load.64*    %r8442 <- 0[f]
	load.32     %r8443 <- 88[%r8442]
	setgt.32    %r8444 <- %r8441, %r8443
	cbr         %r8444, .L1987, .L1988

.L1987:
	load.64*    %r8445 <- 0[ls]
	load.64*    %r8446 <- 56[%r8445]
	load.64*    %r8447 <- 0[f]
	load.64*    %r8448 <- 32[%r8447]
	cast.64*    %r8449 <- (64) %r8448
	load.64*    %r8450 <- 0[f]
	add.64*     %r8451 <- %r8450, $88
	symaddr.64* %r8452 <- <anon symbol:0x1ad3028>
	push.64*    %r8446
	push.64*    %r8449
	push.64*    %r8451
	push.64     $8
	push.32     $0x3ffff
	push.64*    %r8452
	call.64*    %r8453 <- luaM_growaux_
	ptrcast.64* %r8454 <- (64) %r8453
	load.64*    %r8455 <- 0[f]
	store.64*   %r8454 -> 32[%r8455]
	br          .L1988

.L1988:
	br          .L1992

.L1992:
	load.32     %r8456 <- 0[oldsize]
	load.64*    %r8457 <- 0[f]
	load.32     %r8458 <- 88[%r8457]
	setlt.32    %r8459 <- %r8456, %r8458
	cbr         %r8459, .L1989, .L1991

.L1989:
	load.64*    %r8460 <- 0[f]
	load.64*    %r8461 <- 32[%r8460]
	load.32     %r8462 <- 0[oldsize]
	add.32      %r8463 <- %r8462, $1
	store.32    %r8463 -> 0[oldsize]
	scast.64    %r8464 <- (32) %r8462
	muls.64     %r8465 <- %r8464, $8
	add.64*     %r8466 <- %r8461, %r8465
	store.64*   $0 -> 0[%r8466]
	br          .L1990

.L1990:
	br          .L1992

.L1991:
	load.64*    %r8467 <- 0[func]
	load.64*    %r8468 <- 0[%r8467]
	load.64*    %r8469 <- 0[f]
	load.64*    %r8470 <- 32[%r8469]
	load.64*    %r8471 <- 0[fs]
	load.32     %r8472 <- 68[%r8471]
	add.32      %r8473 <- %r8472, $1
	store.32    %r8473 -> 68[%r8471]
	scast.64    %r8474 <- (32) %r8472
	muls.64     %r8475 <- %r8474, $8
	add.64*     %r8476 <- %r8470, %r8475
	store.64*   %r8468 -> 0[%r8476]
	load.64*    %r8477 <- 0[func]
	load.64*    %r8478 <- 0[%r8477]
	ptrcast.64* %r8479 <- (64) %r8478
	load.8      %r8480 <- 9[%r8479]
	cast.32     %r8481 <- (8) %r8480
	and.32      %r8482 <- %r8481, $3
	cbr         %r8482, .L1995, .L1994

.L1995:
	load.64*    %r8483 <- 0[f]
	ptrcast.64* %r8484 <- (64) %r8483
	load.8      %r8485 <- 9[%r8484]
	cast.32     %r8486 <- (8) %r8485
	and.32      %r8487 <- %r8486, $4
	cbr         %r8487, .L1993, .L1994

.L1993:
	load.64*    %r8488 <- 0[ls]
	load.64*    %r8489 <- 56[%r8488]
	load.64*    %r8490 <- 0[f]
	ptrcast.64* %r8491 <- (64) %r8490
	load.64*    %r8492 <- 0[func]
	load.64*    %r8493 <- 0[%r8492]
	ptrcast.64* %r8494 <- (64) %r8493
	push.64*    %r8489
	push.64*    %r8491
	push.64*    %r8494
	call        luaC_barrierf
	br          .L1994

.L1994:
	load.64*    %r8495 <- 0[v]
	load.64*    %r8496 <- 0[fs]
	load.64*    %r8497 <- 0[fs]
	load.32     %r8498 <- 68[%r8497]
	sub.32      %r8499 <- %r8498, $1
	scast.32    %r8500 <- (32) %r8499
	push.64*    %r8496
	push.32     $36
	push.32     $0
	push.32     %r8500
	call.32     %r8501 <- luaK_codeABx
	push.64*    %r8495
	push.32     $11
	push.32     %r8501
	call        init_exp
	store.32    $0 -> 0[i]
	br          .L1999

.L1999:
	load.32     %r8502 <- 0[i]
	load.64*    %r8503 <- 0[func]
	load.64*    %r8504 <- 0[%r8503]
	load.8      %r8505 <- 112[%r8504]
	cast.32     %r8506 <- (8) %r8505
	setlt.32    %r8507 <- %r8502, %r8506
	cbr         %r8507, .L1996, .L1998

.L1996:
	load.64*    %r8508 <- 0[func]
	add.64*     %r8509 <- %r8508, $75
	load.32     %r8510 <- 0[i]
	scast.64    %r8511 <- (32) %r8510
	muls.64     %r8512 <- %r8511, $2
	add.64*     %r8513 <- %r8509, %r8512
	load.8      %r8514 <- 0[%r8513]
	cast.32     %r8515 <- (8) %r8514
	seteq.32    %r8516 <- %r8515, $6
	select.32   %r8517 <- %r8516, $0, $4
	scast.32    %r8518 <- (32) %r8517
	store.32    %r8518 -> 0[o]
	load.64*    %r8519 <- 0[fs]
	load.32     %r8520 <- 0[o]
	load.64*    %r8521 <- 0[func]
	add.64*     %r8522 <- %r8521, $75
	load.32     %r8523 <- 0[i]
	scast.64    %r8524 <- (32) %r8523
	muls.64     %r8525 <- %r8524, $2
	add.64*     %r8526 <- %r8522, %r8525
	load.8      %r8527 <- 1[%r8526]
	cast.32     %r8528 <- (8) %r8527
	push.64*    %r8519
	push.32     %r8520
	push.32     $0
	push.32     %r8528
	push.32     $0
	call.32     %r8529 <- luaK_codeABC
	br          .L1997

.L1997:
	load.32     %r8530 <- 0[i]
	add.32      %r8531 <- %r8530, $1
	store.32    %r8531 -> 0[i]
	br          .L1999

.L1998:
	ret


open_func:
.L2000:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[fs]
	load.64*    %r8532 <- 0[ls]
	load.64*    %r8533 <- 56[%r8532]
	store.64*   %r8533 -> 0[L]
	load.64*    %r8534 <- 0[L]
	push.64*    %r8534
	call.64*    %r8535 <- luaF_newproto
	store.64*   %r8535 -> 0[f]
	load.64*    %r8536 <- 0[f]
	load.64*    %r8537 <- 0[fs]
	store.64*   %r8536 -> 0[%r8537]
	load.64*    %r8538 <- 0[ls]
	load.64*    %r8539 <- 48[%r8538]
	load.64*    %r8540 <- 0[fs]
	store.64*   %r8539 -> 16[%r8540]
	load.64*    %r8541 <- 0[ls]
	load.64*    %r8542 <- 0[fs]
	store.64*   %r8541 -> 24[%r8542]
	load.64*    %r8543 <- 0[L]
	load.64*    %r8544 <- 0[fs]
	store.64*   %r8543 -> 32[%r8544]
	load.64*    %r8545 <- 0[fs]
	load.64*    %r8546 <- 0[ls]
	store.64*   %r8545 -> 48[%r8546]
	load.64*    %r8547 <- 0[fs]
	store.32    $0 -> 48[%r8547]
	load.64*    %r8548 <- 0[fs]
	store.32    $0xffffffff -> 52[%r8548]
	load.64*    %r8549 <- 0[fs]
	store.32    $0xffffffff -> 56[%r8549]
	load.64*    %r8550 <- 0[fs]
	store.32    $0 -> 60[%r8550]
	load.64*    %r8551 <- 0[fs]
	store.32    $0 -> 64[%r8551]
	load.64*    %r8552 <- 0[fs]
	store.32    $0 -> 68[%r8552]
	load.64*    %r8553 <- 0[fs]
	store.16    $0 -> 72[%r8553]
	load.64*    %r8554 <- 0[fs]
	store.8     $0 -> 74[%r8554]
	load.64*    %r8555 <- 0[fs]
	store.64*   $0 -> 40[%r8555]
	load.64*    %r8556 <- 0[ls]
	load.64*    %r8557 <- 80[%r8556]
	load.64*    %r8558 <- 0[f]
	store.64*   %r8557 -> 64[%r8558]
	load.64*    %r8559 <- 0[f]
	store.8     $2 -> 115[%r8559]
	load.64*    %r8560 <- 0[L]
	push.64*    %r8560
	push.32     $0
	push.32     $0
	call.64*    %r8561 <- luaH_new
	load.64*    %r8562 <- 0[fs]
	store.64*   %r8561 -> 8[%r8562]
	load.64*    %r8563 <- 0[L]
	load.64*    %r8564 <- 16[%r8563]
	store.64*   %r8564 -> 0[i_o]
	load.64*    %r8565 <- 0[fs]
	load.64*    %r8566 <- 8[%r8565]
	ptrcast.64* %r8567 <- (64) %r8566
	load.64*    %r8568 <- 0[i_o]
	store.64*   %r8567 -> 0[%r8568]
	load.64*    %r8569 <- 0[i_o]
	store.32    $5 -> 8[%r8569]
	load.64*    %r8570 <- 0[L]
	load.64*    %r8571 <- 56[%r8570]
	ptrcast.64* %r8572 <- (64) %r8571
	load.64*    %r8573 <- 0[L]
	load.64*    %r8574 <- 16[%r8573]
	ptrcast.64* %r8575 <- (64) %r8574
	sub.64      %r8576 <- %r8572, %r8575
	setle.32    %r8577 <- %r8576, $16
	cbr         %r8577, .L2001, .L2002

.L2001:
	load.64*    %r8578 <- 0[L]
	push.64*    %r8578
	push.32     $1
	call        luaD_growstack
	br          .L2003

.L2002:
	br          .L2003

.L2003:
	load.64*    %r8579 <- 0[L]
	load.64*    %r8580 <- 16[%r8579]
	add.64*     %r8581 <- %r8580, $16
	store.64*   %r8581 -> 16[%r8579]
	load.64*    %r8582 <- 0[L]
	load.64*    %r8583 <- 16[%r8582]
	store.64*   %r8583 -> 0[i_o]
	load.64*    %r8584 <- 0[f]
	ptrcast.64* %r8585 <- (64) %r8584
	load.64*    %r8586 <- 0[i_o]
	store.64*   %r8585 -> 0[%r8586]
	load.64*    %r8587 <- 0[i_o]
	store.32    $9 -> 8[%r8587]
	load.64*    %r8588 <- 0[L]
	load.64*    %r8589 <- 56[%r8588]
	ptrcast.64* %r8590 <- (64) %r8589
	load.64*    %r8591 <- 0[L]
	load.64*    %r8592 <- 16[%r8591]
	ptrcast.64* %r8593 <- (64) %r8592
	sub.64      %r8594 <- %r8590, %r8593
	setle.32    %r8595 <- %r8594, $16
	cbr         %r8595, .L2004, .L2005

.L2004:
	load.64*    %r8596 <- 0[L]
	push.64*    %r8596
	push.32     $1
	call        luaD_growstack
	br          .L2006

.L2005:
	br          .L2006

.L2006:
	load.64*    %r8597 <- 0[L]
	load.64*    %r8598 <- 16[%r8597]
	add.64*     %r8599 <- %r8598, $16
	store.64*   %r8599 -> 16[%r8597]
	br          .L2007

.L2007:
	ret


close_func:
.L2008:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8600 <- 0[ls]
	load.64*    %r8601 <- 56[%r8600]
	store.64*   %r8601 -> 0[L]
	load.64*    %r8602 <- 0[ls]
	load.64*    %r8603 <- 48[%r8602]
	store.64*   %r8603 -> 0[fs]
	load.64*    %r8604 <- 0[fs]
	load.64*    %r8605 <- 0[%r8604]
	store.64*   %r8605 -> 0[f]
	load.64*    %r8606 <- 0[ls]
	push.64*    %r8606
	push.32     $0
	call        removevars
	load.64*    %r8607 <- 0[fs]
	push.64*    %r8607
	push.32     $0
	push.32     $0
	call        luaK_ret
	load.64*    %r8608 <- 0[fs]
	load.32     %r8609 <- 48[%r8608]
	add.32      %r8610 <- %r8609, $1
	scast.64    %r8611 <- (32) %r8610
	setbe.32    %r8612 <- %r8611, $0x3fffffffffffffff
	cbr         %r8612, .L2009, .L2010

.L2009:
	load.64*    %r8613 <- 0[L]
	load.64*    %r8614 <- 0[f]
	load.64*    %r8615 <- 24[%r8614]
	cast.64*    %r8616 <- (64) %r8615
	load.64*    %r8617 <- 0[f]
	load.32     %r8618 <- 80[%r8617]
	scast.64    %r8619 <- (32) %r8618
	mulu.64     %r8620 <- %r8619, $4
	load.64*    %r8621 <- 0[fs]
	load.32     %r8622 <- 48[%r8621]
	scast.64    %r8623 <- (32) %r8622
	mulu.64     %r8624 <- %r8623, $4
	push.64*    %r8613
	push.64*    %r8616
	push.64     %r8620
	push.64     %r8624
	call.64*    %r8625 <- luaM_realloc_
	phisrc.64*  %phi342 <- %r8625
	br          .L2011

.L2010:
	load.64*    %r8626 <- 0[L]
	push.64*    %r8626
	call.64*    %r8627 <- luaM_toobig
	cast.64*    %r8628 <- (64) %r8627
	phisrc.64*  %phi343 <- %r8628
	br          .L2011

.L2011:
	phi.64*     %r8629 <- %phi342, %phi343
	ptrcast.64* %r8630 <- (64) %r8629
	load.64*    %r8631 <- 0[f]
	store.64*   %r8630 -> 24[%r8631]
	load.64*    %r8632 <- 0[fs]
	load.32     %r8633 <- 48[%r8632]
	load.64*    %r8634 <- 0[f]
	store.32    %r8633 -> 80[%r8634]
	load.64*    %r8635 <- 0[fs]
	load.32     %r8636 <- 48[%r8635]
	add.32      %r8637 <- %r8636, $1
	scast.64    %r8638 <- (32) %r8637
	setbe.32    %r8639 <- %r8638, $0x3fffffffffffffff
	cbr         %r8639, .L2012, .L2013

.L2012:
	load.64*    %r8640 <- 0[L]
	load.64*    %r8641 <- 0[f]
	load.64*    %r8642 <- 40[%r8641]
	cast.64*    %r8643 <- (64) %r8642
	load.64*    %r8644 <- 0[f]
	load.32     %r8645 <- 84[%r8644]
	scast.64    %r8646 <- (32) %r8645
	mulu.64     %r8647 <- %r8646, $4
	load.64*    %r8648 <- 0[fs]
	load.32     %r8649 <- 48[%r8648]
	scast.64    %r8650 <- (32) %r8649
	mulu.64     %r8651 <- %r8650, $4
	push.64*    %r8640
	push.64*    %r8643
	push.64     %r8647
	push.64     %r8651
	call.64*    %r8652 <- luaM_realloc_
	phisrc.64*  %phi344 <- %r8652
	br          .L2014

.L2013:
	load.64*    %r8653 <- 0[L]
	push.64*    %r8653
	call.64*    %r8654 <- luaM_toobig
	cast.64*    %r8655 <- (64) %r8654
	phisrc.64*  %phi345 <- %r8655
	br          .L2014

.L2014:
	phi.64*     %r8656 <- %phi344, %phi345
	ptrcast.64* %r8657 <- (64) %r8656
	load.64*    %r8658 <- 0[f]
	store.64*   %r8657 -> 40[%r8658]
	load.64*    %r8659 <- 0[fs]
	load.32     %r8660 <- 48[%r8659]
	load.64*    %r8661 <- 0[f]
	store.32    %r8660 -> 84[%r8661]
	load.64*    %r8662 <- 0[fs]
	load.32     %r8663 <- 64[%r8662]
	add.32      %r8664 <- %r8663, $1
	scast.64    %r8665 <- (32) %r8664
	setbe.32    %r8666 <- %r8665, $0xfffffffffffffff
	cbr         %r8666, .L2015, .L2016

.L2015:
	load.64*    %r8667 <- 0[L]
	load.64*    %r8668 <- 0[f]
	load.64*    %r8669 <- 16[%r8668]
	cast.64*    %r8670 <- (64) %r8669
	load.64*    %r8671 <- 0[f]
	load.32     %r8672 <- 76[%r8671]
	scast.64    %r8673 <- (32) %r8672
	mulu.64     %r8674 <- %r8673, $16
	load.64*    %r8675 <- 0[fs]
	load.32     %r8676 <- 64[%r8675]
	scast.64    %r8677 <- (32) %r8676
	mulu.64     %r8678 <- %r8677, $16
	push.64*    %r8667
	push.64*    %r8670
	push.64     %r8674
	push.64     %r8678
	call.64*    %r8679 <- luaM_realloc_
	phisrc.64*  %phi346 <- %r8679
	br          .L2017

.L2016:
	load.64*    %r8680 <- 0[L]
	push.64*    %r8680
	call.64*    %r8681 <- luaM_toobig
	cast.64*    %r8682 <- (64) %r8681
	phisrc.64*  %phi347 <- %r8682
	br          .L2017

.L2017:
	phi.64*     %r8683 <- %phi346, %phi347
	ptrcast.64* %r8684 <- (64) %r8683
	load.64*    %r8685 <- 0[f]
	store.64*   %r8684 -> 16[%r8685]
	load.64*    %r8686 <- 0[fs]
	load.32     %r8687 <- 64[%r8686]
	load.64*    %r8688 <- 0[f]
	store.32    %r8687 -> 76[%r8688]
	load.64*    %r8689 <- 0[fs]
	load.32     %r8690 <- 68[%r8689]
	add.32      %r8691 <- %r8690, $1
	scast.64    %r8692 <- (32) %r8691
	setbe.32    %r8693 <- %r8692, $0x1fffffffffffffff
	cbr         %r8693, .L2018, .L2019

.L2018:
	load.64*    %r8694 <- 0[L]
	load.64*    %r8695 <- 0[f]
	load.64*    %r8696 <- 32[%r8695]
	cast.64*    %r8697 <- (64) %r8696
	load.64*    %r8698 <- 0[f]
	load.32     %r8699 <- 88[%r8698]
	scast.64    %r8700 <- (32) %r8699
	mulu.64     %r8701 <- %r8700, $8
	load.64*    %r8702 <- 0[fs]
	load.32     %r8703 <- 68[%r8702]
	scast.64    %r8704 <- (32) %r8703
	mulu.64     %r8705 <- %r8704, $8
	push.64*    %r8694
	push.64*    %r8697
	push.64     %r8701
	push.64     %r8705
	call.64*    %r8706 <- luaM_realloc_
	phisrc.64*  %phi348 <- %r8706
	br          .L2020

.L2019:
	load.64*    %r8707 <- 0[L]
	push.64*    %r8707
	call.64*    %r8708 <- luaM_toobig
	cast.64*    %r8709 <- (64) %r8708
	phisrc.64*  %phi349 <- %r8709
	br          .L2020

.L2020:
	phi.64*     %r8710 <- %phi348, %phi349
	ptrcast.64* %r8711 <- (64) %r8710
	load.64*    %r8712 <- 0[f]
	store.64*   %r8711 -> 32[%r8712]
	load.64*    %r8713 <- 0[fs]
	load.32     %r8714 <- 68[%r8713]
	load.64*    %r8715 <- 0[f]
	store.32    %r8714 -> 88[%r8715]
	load.64*    %r8716 <- 0[fs]
	load.16     %r8717 <- 72[%r8716]
	scast.32    %r8718 <- (16) %r8717
	add.32      %r8719 <- %r8718, $1
	scast.64    %r8720 <- (32) %r8719
	setbe.32    %r8721 <- %r8720, $0xfffffffffffffff
	cbr         %r8721, .L2021, .L2022

.L2021:
	load.64*    %r8722 <- 0[L]
	load.64*    %r8723 <- 0[f]
	load.64*    %r8724 <- 48[%r8723]
	cast.64*    %r8725 <- (64) %r8724
	load.64*    %r8726 <- 0[f]
	load.32     %r8727 <- 92[%r8726]
	scast.64    %r8728 <- (32) %r8727
	mulu.64     %r8729 <- %r8728, $16
	load.64*    %r8730 <- 0[fs]
	load.16     %r8731 <- 72[%r8730]
	scast.64    %r8732 <- (16) %r8731
	mulu.64     %r8733 <- %r8732, $16
	push.64*    %r8722
	push.64*    %r8725
	push.64     %r8729
	push.64     %r8733
	call.64*    %r8734 <- luaM_realloc_
	phisrc.64*  %phi350 <- %r8734
	br          .L2023

.L2022:
	load.64*    %r8735 <- 0[L]
	push.64*    %r8735
	call.64*    %r8736 <- luaM_toobig
	cast.64*    %r8737 <- (64) %r8736
	phisrc.64*  %phi351 <- %r8737
	br          .L2023

.L2023:
	phi.64*     %r8738 <- %phi350, %phi351
	ptrcast.64* %r8739 <- (64) %r8738
	load.64*    %r8740 <- 0[f]
	store.64*   %r8739 -> 48[%r8740]
	load.64*    %r8741 <- 0[fs]
	load.16     %r8742 <- 72[%r8741]
	scast.32    %r8743 <- (16) %r8742
	load.64*    %r8744 <- 0[f]
	store.32    %r8743 -> 92[%r8744]
	load.64*    %r8745 <- 0[f]
	load.8      %r8746 <- 112[%r8745]
	cast.32     %r8747 <- (8) %r8746
	add.32      %r8748 <- %r8747, $1
	scast.64    %r8749 <- (32) %r8748
	setbe.32    %r8750 <- %r8749, $0x1fffffffffffffff
	cbr         %r8750, .L2024, .L2025

.L2024:
	load.64*    %r8751 <- 0[L]
	load.64*    %r8752 <- 0[f]
	load.64*    %r8753 <- 56[%r8752]
	cast.64*    %r8754 <- (64) %r8753
	load.64*    %r8755 <- 0[f]
	load.32     %r8756 <- 72[%r8755]
	scast.64    %r8757 <- (32) %r8756
	mulu.64     %r8758 <- %r8757, $8
	load.64*    %r8759 <- 0[f]
	load.8      %r8760 <- 112[%r8759]
	cast.64     %r8761 <- (8) %r8760
	mulu.64     %r8762 <- %r8761, $8
	push.64*    %r8751
	push.64*    %r8754
	push.64     %r8758
	push.64     %r8762
	call.64*    %r8763 <- luaM_realloc_
	phisrc.64*  %phi352 <- %r8763
	br          .L2026

.L2025:
	load.64*    %r8764 <- 0[L]
	push.64*    %r8764
	call.64*    %r8765 <- luaM_toobig
	cast.64*    %r8766 <- (64) %r8765
	phisrc.64*  %phi353 <- %r8766
	br          .L2026

.L2026:
	phi.64*     %r8767 <- %phi352, %phi353
	ptrcast.64* %r8768 <- (64) %r8767
	load.64*    %r8769 <- 0[f]
	store.64*   %r8768 -> 56[%r8769]
	load.64*    %r8770 <- 0[f]
	load.8      %r8771 <- 112[%r8770]
	cast.32     %r8772 <- (8) %r8771
	load.64*    %r8773 <- 0[f]
	store.32    %r8772 -> 72[%r8773]
	load.64*    %r8774 <- 0[fs]
	load.64*    %r8775 <- 16[%r8774]
	load.64*    %r8776 <- 0[ls]
	store.64*   %r8775 -> 48[%r8776]
	load.64*    %r8777 <- 0[fs]
	cbr         %r8777, .L2027, .L2028

.L2027:
	load.64*    %r8778 <- 0[ls]
	push.64*    %r8778
	call        anchor_token
	br          .L2028

.L2028:
	load.64*    %r8779 <- 0[L]
	load.64*    %r8780 <- 16[%r8779]
	cast.64     %r8781 <- (64) %r8780
	sub.64      %r8782 <- %r8781, $32
	ptrcast.64* %r8783 <- (64) %r8782
	store.64*   %r8783 -> 16[%r8779]
	br          .L2029

.L2029:
	ret


luaY_parser:
.L2030:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[buff]
	store.64*   %arg4 -> 0[name]
	load.64*    %r8784 <- 0[buff]
	store.64*   %r8784 -> 72[lexstate]
	load.64*    %r8785 <- 0[L]
	symaddr.64* %r8786 <- lexstate
	load.64*    %r8787 <- 0[z]
	load.64*    %r8788 <- 0[L]
	load.64*    %r8789 <- 0[name]
	load.64*    %r8790 <- 0[name]
	push.64*    %r8790
	call.64     %r8791 <- strlen
	push.64*    %r8788
	push.64*    %r8789
	push.64     %r8791
	call.64*    %r8792 <- luaS_newlstr
	push.64*    %r8785
	push.64*    %r8786
	push.64*    %r8787
	push.64*    %r8792
	call        luaX_setinput
	symaddr.64* %r8793 <- lexstate
	symaddr.64* %r8794 <- funcstate
	push.64*    %r8793
	push.64*    %r8794
	call        open_func
	load.64*    %r8795 <- 0[funcstate]
	store.8     $2 -> 114[%r8795]
	symaddr.64* %r8796 <- lexstate
	push.64*    %r8796
	call        luaX_next
	symaddr.64* %r8797 <- lexstate
	push.64*    %r8797
	call        chunk
	symaddr.64* %r8798 <- lexstate
	push.64*    %r8798
	push.32     $287
	call        check
	symaddr.64* %r8799 <- lexstate
	push.64*    %r8799
	call        close_func
	load.64*    %r8800 <- 0[funcstate]
	phisrc.64*  %phi354(return) <- %r8800
	br          .L2031

.L2031:
	phi.64*     %r8801 <- %phi354(return)
	ret.64*     %r8800


field:
.L2032:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r8802 <- 0[ls]
	load.64*    %r8803 <- 48[%r8802]
	store.64*   %r8803 -> 0[fs]
	load.64*    %r8804 <- 0[fs]
	load.64*    %r8805 <- 0[v]
	push.64*    %r8804
	push.64*    %r8805
	call.32     %r8806 <- luaK_exp2anyreg
	load.64*    %r8807 <- 0[ls]
	push.64*    %r8807
	call        luaX_next
	load.64*    %r8808 <- 0[ls]
	symaddr.64* %r8809 <- key
	push.64*    %r8808
	push.64*    %r8809
	call        checkname
	load.64*    %r8810 <- 0[fs]
	load.64*    %r8811 <- 0[v]
	symaddr.64* %r8812 <- key
	push.64*    %r8810
	push.64*    %r8811
	push.64*    %r8812
	call        luaK_indexed
	br          .L2033

.L2033:
	ret


yindex:
.L2034:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r8813 <- 0[ls]
	push.64*    %r8813
	call        luaX_next
	load.64*    %r8814 <- 0[ls]
	load.64*    %r8815 <- 0[v]
	push.64*    %r8814
	push.64*    %r8815
	call        expr
	load.64*    %r8816 <- 0[ls]
	load.64*    %r8817 <- 48[%r8816]
	load.64*    %r8818 <- 0[v]
	push.64*    %r8817
	push.64*    %r8818
	call        luaK_exp2val
	load.64*    %r8819 <- 0[ls]
	push.64*    %r8819
	push.32     $93
	call        checknext
	br          .L2035

.L2035:
	ret


recfield:
.L2036:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8820 <- 0[ls]
	load.64*    %r8821 <- 48[%r8820]
	store.64*   %r8821 -> 0[fs]
	load.64*    %r8822 <- 0[ls]
	load.64*    %r8823 <- 48[%r8822]
	load.32     %r8824 <- 60[%r8823]
	store.32    %r8824 -> 0[reg]
	load.64*    %r8825 <- 0[ls]
	load.32     %r8826 <- 16[%r8825]
	seteq.32    %r8827 <- %r8826, $285
	cbr         %r8827, .L2037, .L2038

.L2037:
	load.64*    %r8828 <- 0[cc]
	load.32     %r8829 <- 32[%r8828]
	setgt.32    %r8830 <- %r8829, $0x7ffffffd
	cbr         %r8830, .L2039, .L2040

.L2039:
	load.64*    %r8831 <- 0[fs]
	symaddr.64* %r8832 <- <anon symbol:0x1ade868>
	push.64*    %r8831
	push.32     $0x7ffffffd
	push.64*    %r8832
	call        errorlimit
	br          .L2040

.L2040:
	load.64*    %r8833 <- 0[ls]
	symaddr.64* %r8834 <- key
	push.64*    %r8833
	push.64*    %r8834
	call        checkname
	br          .L2041

.L2038:
	load.64*    %r8835 <- 0[ls]
	symaddr.64* %r8836 <- key
	push.64*    %r8835
	push.64*    %r8836
	call        yindex
	br          .L2041

.L2041:
	load.64*    %r8837 <- 0[cc]
	load.32     %r8838 <- 32[%r8837]
	add.32      %r8839 <- %r8838, $1
	store.32    %r8839 -> 32[%r8837]
	load.64*    %r8840 <- 0[ls]
	push.64*    %r8840
	push.32     $61
	call        checknext
	load.64*    %r8841 <- 0[fs]
	symaddr.64* %r8842 <- key
	push.64*    %r8841
	push.64*    %r8842
	call.32     %r8843 <- luaK_exp2RK
	store.32    %r8843 -> 0[rkkey]
	load.64*    %r8844 <- 0[ls]
	symaddr.64* %r8845 <- val
	push.64*    %r8844
	push.64*    %r8845
	call        expr
	load.64*    %r8846 <- 0[fs]
	load.64*    %r8847 <- 0[cc]
	load.64*    %r8848 <- 24[%r8847]
	load.32     %r8849 <- 8[%r8848]
	load.32     %r8850 <- 0[rkkey]
	load.64*    %r8851 <- 0[fs]
	symaddr.64* %r8852 <- val
	push.64*    %r8851
	push.64*    %r8852
	call.32     %r8853 <- luaK_exp2RK
	push.64*    %r8846
	push.32     $9
	push.32     %r8849
	push.32     %r8850
	push.32     %r8853
	call.32     %r8854 <- luaK_codeABC
	load.32     %r8855 <- 0[reg]
	load.64*    %r8856 <- 0[fs]
	store.32    %r8855 -> 60[%r8856]
	br          .L2042

.L2042:
	ret


closelistfield:
.L2043:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8857 <- 0[cc]
	load.32     %r8858 <- 0[%r8857]
	scast.32    %r8859 <- (32) %r8858
	seteq.32    %r8860 <- %r8859, $0
	cbr         %r8860, .L2044, .L2045

.L2044:
	br          .L2046

.L2045:
	load.64*    %r8861 <- 0[fs]
	load.64*    %r8862 <- 0[cc]
	add.64*     %r8863 <- %r8862, $0
	push.64*    %r8861
	push.64*    %r8863
	call        luaK_exp2nextreg
	load.64*    %r8864 <- 0[cc]
	store.32    $0 -> 0[%r8864]
	load.64*    %r8865 <- 0[cc]
	load.32     %r8866 <- 40[%r8865]
	seteq.32    %r8867 <- %r8866, $50
	cbr         %r8867, .L2047, .L2048

.L2047:
	load.64*    %r8868 <- 0[fs]
	load.64*    %r8869 <- 0[cc]
	load.64*    %r8870 <- 24[%r8869]
	load.32     %r8871 <- 8[%r8870]
	load.64*    %r8872 <- 0[cc]
	load.32     %r8873 <- 36[%r8872]
	load.64*    %r8874 <- 0[cc]
	load.32     %r8875 <- 40[%r8874]
	push.64*    %r8868
	push.32     %r8871
	push.32     %r8873
	push.32     %r8875
	call        luaK_setlist
	load.64*    %r8876 <- 0[cc]
	store.32    $0 -> 40[%r8876]
	br          .L2048

.L2048:
	br          .L2046

.L2046:
	ret


lastlistfield:
.L2049:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8877 <- 0[cc]
	load.32     %r8878 <- 40[%r8877]
	seteq.32    %r8879 <- %r8878, $0
	cbr         %r8879, .L2050, .L2051

.L2050:
	br          .L2052

.L2051:
	load.64*    %r8880 <- 0[cc]
	load.32     %r8881 <- 0[%r8880]
	scast.32    %r8882 <- (32) %r8881
	seteq.32    %r8883 <- %r8882, $13
	cbr         %r8883, .L2053, .L2055

.L2055:
	load.64*    %r8884 <- 0[cc]
	load.32     %r8885 <- 0[%r8884]
	scast.32    %r8886 <- (32) %r8885
	seteq.32    %r8887 <- %r8886, $14
	cbr         %r8887, .L2053, .L2054

.L2053:
	load.64*    %r8888 <- 0[fs]
	load.64*    %r8889 <- 0[cc]
	add.64*     %r8890 <- %r8889, $0
	push.64*    %r8888
	push.64*    %r8890
	push.32     $0xffffffff
	call        luaK_setreturns
	load.64*    %r8891 <- 0[fs]
	load.64*    %r8892 <- 0[cc]
	load.64*    %r8893 <- 24[%r8892]
	load.32     %r8894 <- 8[%r8893]
	load.64*    %r8895 <- 0[cc]
	load.32     %r8896 <- 36[%r8895]
	push.64*    %r8891
	push.32     %r8894
	push.32     %r8896
	push.32     $0xffffffff
	call        luaK_setlist
	load.64*    %r8897 <- 0[cc]
	load.32     %r8898 <- 36[%r8897]
	sub.32      %r8899 <- %r8898, $1
	store.32    %r8899 -> 36[%r8897]
	br          .L2056

.L2054:
	load.64*    %r8900 <- 0[cc]
	load.32     %r8901 <- 0[%r8900]
	scast.32    %r8902 <- (32) %r8901
	setne.32    %r8903 <- %r8902, $0
	cbr         %r8903, .L2057, .L2058

.L2057:
	load.64*    %r8904 <- 0[fs]
	load.64*    %r8905 <- 0[cc]
	add.64*     %r8906 <- %r8905, $0
	push.64*    %r8904
	push.64*    %r8906
	call        luaK_exp2nextreg
	br          .L2058

.L2058:
	load.64*    %r8907 <- 0[fs]
	load.64*    %r8908 <- 0[cc]
	load.64*    %r8909 <- 24[%r8908]
	load.32     %r8910 <- 8[%r8909]
	load.64*    %r8911 <- 0[cc]
	load.32     %r8912 <- 36[%r8911]
	load.64*    %r8913 <- 0[cc]
	load.32     %r8914 <- 40[%r8913]
	push.64*    %r8907
	push.32     %r8910
	push.32     %r8912
	push.32     %r8914
	call        luaK_setlist
	br          .L2056

.L2056:
	br          .L2052

.L2052:
	ret


listfield:
.L2059:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8915 <- 0[ls]
	load.64*    %r8916 <- 0[cc]
	add.64*     %r8917 <- %r8916, $0
	push.64*    %r8915
	push.64*    %r8917
	call        expr
	load.64*    %r8918 <- 0[cc]
	load.32     %r8919 <- 36[%r8918]
	setgt.32    %r8920 <- %r8919, $0x7ffffffd
	cbr         %r8920, .L2060, .L2061

.L2060:
	load.64*    %r8921 <- 0[ls]
	load.64*    %r8922 <- 48[%r8921]
	symaddr.64* %r8923 <- <anon symbol:0x1aea490>
	push.64*    %r8922
	push.32     $0x7ffffffd
	push.64*    %r8923
	call        errorlimit
	br          .L2061

.L2061:
	load.64*    %r8924 <- 0[cc]
	load.32     %r8925 <- 36[%r8924]
	add.32      %r8926 <- %r8925, $1
	store.32    %r8926 -> 36[%r8924]
	load.64*    %r8927 <- 0[cc]
	load.32     %r8928 <- 40[%r8927]
	add.32      %r8929 <- %r8928, $1
	store.32    %r8929 -> 40[%r8927]
	br          .L2062

.L2062:
	ret


constructor:
.L2063:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[t]
	load.64*    %r8930 <- 0[ls]
	load.64*    %r8931 <- 48[%r8930]
	store.64*   %r8931 -> 0[fs]
	load.64*    %r8932 <- 0[ls]
	load.32     %r8933 <- 4[%r8932]
	store.32    %r8933 -> 0[line]
	load.64*    %r8934 <- 0[fs]
	push.64*    %r8934
	push.32     $10
	push.32     $0
	push.32     $0
	push.32     $0
	call.32     %r8935 <- luaK_codeABC
	store.32    %r8935 -> 0[pc]
	store.32    $0 -> 40[cc]
	store.32    $0 -> 32[cc]
	store.32    $0 -> 36[cc]
	load.64*    %r8936 <- 0[t]
	store.64*   %r8936 -> 24[cc]
	load.64*    %r8937 <- 0[t]
	load.32     %r8938 <- 0[pc]
	push.64*    %r8937
	push.32     $11
	push.32     %r8938
	call        init_exp
	symaddr.64* %r8939 <- cc
	add.64*     %r8940 <- %r8939, $0
	push.64*    %r8940
	push.32     $0
	push.32     $0
	call        init_exp
	load.64*    %r8941 <- 0[ls]
	load.64*    %r8942 <- 48[%r8941]
	load.64*    %r8943 <- 0[t]
	push.64*    %r8942
	push.64*    %r8943
	call        luaK_exp2nextreg
	load.64*    %r8944 <- 0[ls]
	push.64*    %r8944
	push.32     $123
	call        checknext
	br          .L2064

.L2064:
	load.64*    %r8945 <- 0[ls]
	load.32     %r8946 <- 16[%r8945]
	seteq.32    %r8947 <- %r8946, $125
	cbr         %r8947, .L2067, .L2068

.L2067:
	br          .L2066

.L2068:
	load.64*    %r8948 <- 0[fs]
	symaddr.64* %r8949 <- cc
	push.64*    %r8948
	push.64*    %r8949
	call        closelistfield
	load.64*    %r8950 <- 0[ls]
	load.32     %r8951 <- 16[%r8950]
	switch.32   %r8951, 91 -> .L2071, 285 -> .L2070, default -> .L2072

.L2070:
	load.64*    %r8952 <- 0[ls]
	push.64*    %r8952
	call        luaX_lookahead
	load.64*    %r8953 <- 0[ls]
	load.32     %r8954 <- 32[%r8953]
	setne.32    %r8955 <- %r8954, $61
	cbr         %r8955, .L2073, .L2074

.L2073:
	load.64*    %r8956 <- 0[ls]
	symaddr.64* %r8957 <- cc
	push.64*    %r8956
	push.64*    %r8957
	call        listfield
	br          .L2075

.L2074:
	load.64*    %r8958 <- 0[ls]
	symaddr.64* %r8959 <- cc
	push.64*    %r8958
	push.64*    %r8959
	call        recfield
	br          .L2075

.L2075:
	br          .L2069

.L2071:
	load.64*    %r8960 <- 0[ls]
	symaddr.64* %r8961 <- cc
	push.64*    %r8960
	push.64*    %r8961
	call        recfield
	br          .L2069

.L2072:
	load.64*    %r8962 <- 0[ls]
	symaddr.64* %r8963 <- cc
	push.64*    %r8962
	push.64*    %r8963
	call        listfield
	br          .L2069

.L2069:
	br          .L2065

.L2065:
	load.64*    %r8964 <- 0[ls]
	push.64*    %r8964
	push.32     $44
	call.32     %r8965 <- testnext
	cbr         %r8965, .L2064, .L2076

.L2076:
	load.64*    %r8966 <- 0[ls]
	push.64*    %r8966
	push.32     $59
	call.32     %r8967 <- testnext
	cbr         %r8967, .L2064, .L2066

.L2066:
	load.64*    %r8968 <- 0[ls]
	load.32     %r8969 <- 0[line]
	push.64*    %r8968
	push.32     $125
	push.32     $123
	push.32     %r8969
	call        check_match
	load.64*    %r8970 <- 0[fs]
	symaddr.64* %r8971 <- cc
	push.64*    %r8970
	push.64*    %r8971
	call        lastlistfield
	load.64*    %r8972 <- 0[fs]
	load.64*    %r8973 <- 0[%r8972]
	load.64*    %r8974 <- 24[%r8973]
	load.32     %r8975 <- 0[pc]
	scast.64    %r8976 <- (32) %r8975
	muls.64     %r8977 <- %r8976, $4
	add.64*     %r8978 <- %r8974, %r8977
	load.32     %r8979 <- 0[%r8978]
	and.32      %r8980 <- %r8979, $0x7fffff
	load.32     %r8981 <- 36[cc]
	scast.32    %r8982 <- (32) %r8981
	push.32     %r8982
	call.32     %r8983 <- luaO_int2fb
	scast.32    %r8984 <- (32) %r8983
	shl.32      %r8985 <- %r8984, $23
	and.32      %r8986 <- %r8985, $0xff800000
	or.32       %r8987 <- %r8980, %r8986
	load.64*    %r8988 <- 0[fs]
	load.64*    %r8989 <- 0[%r8988]
	load.64*    %r8990 <- 24[%r8989]
	load.32     %r8991 <- 0[pc]
	scast.64    %r8992 <- (32) %r8991
	muls.64     %r8993 <- %r8992, $4
	add.64*     %r8994 <- %r8990, %r8993
	store.32    %r8987 -> 0[%r8994]
	load.64*    %r8995 <- 0[fs]
	load.64*    %r8996 <- 0[%r8995]
	load.64*    %r8997 <- 24[%r8996]
	load.32     %r8998 <- 0[pc]
	scast.64    %r8999 <- (32) %r8998
	muls.64     %r9000 <- %r8999, $4
	add.64*     %r9001 <- %r8997, %r9000
	load.32     %r9002 <- 0[%r9001]
	and.32      %r9003 <- %r9002, $0xff803fff
	load.32     %r9004 <- 32[cc]
	scast.32    %r9005 <- (32) %r9004
	push.32     %r9005
	call.32     %r9006 <- luaO_int2fb
	scast.32    %r9007 <- (32) %r9006
	shl.32      %r9008 <- %r9007, $14
	and.32      %r9009 <- %r9008, $0x7fc000
	or.32       %r9010 <- %r9003, %r9009
	load.64*    %r9011 <- 0[fs]
	load.64*    %r9012 <- 0[%r9011]
	load.64*    %r9013 <- 24[%r9012]
	load.32     %r9014 <- 0[pc]
	scast.64    %r9015 <- (32) %r9014
	muls.64     %r9016 <- %r9015, $4
	add.64*     %r9017 <- %r9013, %r9016
	store.32    %r9010 -> 0[%r9017]
	br          .L2077

.L2077:
	ret


parlist:
.L2078:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9018 <- 0[ls]
	load.64*    %r9019 <- 48[%r9018]
	store.64*   %r9019 -> 0[fs]
	load.64*    %r9020 <- 0[fs]
	load.64*    %r9021 <- 0[%r9020]
	store.64*   %r9021 -> 0[f]
	store.32    $0 -> 0[nparams]
	load.64*    %r9022 <- 0[f]
	store.8     $0 -> 114[%r9022]
	load.64*    %r9023 <- 0[ls]
	load.32     %r9024 <- 16[%r9023]
	setne.32    %r9025 <- %r9024, $41
	cbr         %r9025, .L2079, .L2080

.L2079:
	br          .L2081

.L2081:
	load.64*    %r9026 <- 0[ls]
	load.32     %r9027 <- 16[%r9026]
	switch.32   %r9027, 279 -> .L2086, 285 -> .L2085, default -> .L2087

.L2085:
	load.64*    %r9028 <- 0[ls]
	load.64*    %r9029 <- 0[ls]
	push.64*    %r9029
	call.64*    %r9030 <- str_checkname
	load.32     %r9031 <- 0[nparams]
	add.32      %r9032 <- %r9031, $1
	store.32    %r9032 -> 0[nparams]
	push.64*    %r9028
	push.64*    %r9030
	push.32     %r9031
	call        new_localvar
	br          .L2084

.L2086:
	load.64*    %r9033 <- 0[ls]
	push.64*    %r9033
	call        luaX_next
	load.64*    %r9034 <- 0[f]
	load.8      %r9035 <- 114[%r9034]
	cast.32     %r9036 <- (8) %r9035
	or.32       %r9037 <- %r9036, $2
	scast.8     %r9038 <- (32) %r9037
	store.8     %r9038 -> 114[%r9034]
	br          .L2084

.L2087:
	load.64*    %r9039 <- 0[ls]
	symaddr.64* %r9040 <- <anon symbol:0x1aee148>
	push.64*    %r9039
	push.64*    %r9040
	call        luaX_syntaxerror
	br          .L2084

.L2084:
	br          .L2082

.L2082:
	load.64*    %r9041 <- 0[f]
	load.8      %r9042 <- 114[%r9041]
	cbr         %r9042, .L2083, .L2088

.L2088:
	load.64*    %r9043 <- 0[ls]
	push.64*    %r9043
	push.32     $44
	call.32     %r9044 <- testnext
	cbr         %r9044, .L2081, .L2083

.L2083:
	br          .L2080

.L2080:
	load.64*    %r9045 <- 0[ls]
	load.32     %r9046 <- 0[nparams]
	push.64*    %r9045
	push.32     %r9046
	call        adjustlocalvars
	load.64*    %r9047 <- 0[fs]
	load.8      %r9048 <- 74[%r9047]
	cast.32     %r9049 <- (8) %r9048
	load.64*    %r9050 <- 0[f]
	load.8      %r9051 <- 114[%r9050]
	cast.32     %r9052 <- (8) %r9051
	and.32      %r9053 <- %r9052, $1
	sub.32      %r9054 <- %r9049, %r9053
	scast.8     %r9055 <- (32) %r9054
	load.64*    %r9056 <- 0[f]
	store.8     %r9055 -> 113[%r9056]
	load.64*    %r9057 <- 0[fs]
	load.64*    %r9058 <- 0[fs]
	load.8      %r9059 <- 74[%r9058]
	cast.32     %r9060 <- (8) %r9059
	push.64*    %r9057
	push.32     %r9060
	call        luaK_reserveregs
	br          .L2089

.L2089:
	ret


body:
.L2090:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[needself]
	store.32    %arg4 -> 0[line]
	load.64*    %r9061 <- 0[ls]
	symaddr.64* %r9062 <- new_fs
	push.64*    %r9061
	push.64*    %r9062
	call        open_func
	load.32     %r9063 <- 0[line]
	load.64*    %r9064 <- 0[new_fs]
	store.32    %r9063 -> 96[%r9064]
	load.64*    %r9065 <- 0[ls]
	push.64*    %r9065
	push.32     $40
	call        checknext
	load.32     %r9066 <- 0[needself]
	cbr         %r9066, .L2091, .L2092

.L2091:
	load.64*    %r9067 <- 0[ls]
	load.64*    %r9068 <- 0[ls]
	symaddr.64* %r9069 <- <anon symbol:0x1aeed10>
	push.64*    %r9068
	push.64*    %r9069
	push.64     $4
	call.64*    %r9070 <- luaX_newstring
	push.64*    %r9067
	push.64*    %r9070
	push.32     $0
	call        new_localvar
	load.64*    %r9071 <- 0[ls]
	push.64*    %r9071
	push.32     $1
	call        adjustlocalvars
	br          .L2092

.L2092:
	load.64*    %r9072 <- 0[ls]
	push.64*    %r9072
	call        parlist
	load.64*    %r9073 <- 0[ls]
	push.64*    %r9073
	push.32     $41
	call        checknext
	load.64*    %r9074 <- 0[ls]
	push.64*    %r9074
	call        chunk
	load.64*    %r9075 <- 0[ls]
	load.32     %r9076 <- 4[%r9075]
	load.64*    %r9077 <- 0[new_fs]
	store.32    %r9076 -> 100[%r9077]
	load.64*    %r9078 <- 0[ls]
	load.32     %r9079 <- 0[line]
	push.64*    %r9078
	push.32     $262
	push.32     $265
	push.32     %r9079
	call        check_match
	load.64*    %r9080 <- 0[ls]
	push.64*    %r9080
	call        close_func
	load.64*    %r9081 <- 0[ls]
	symaddr.64* %r9082 <- new_fs
	load.64*    %r9083 <- 0[e]
	push.64*    %r9081
	push.64*    %r9082
	push.64*    %r9083
	call        pushclosure
	br          .L2093

.L2093:
	ret


explist1:
.L2094:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    $1 -> 0[n]
	load.64*    %r9084 <- 0[ls]
	load.64*    %r9085 <- 0[v]
	push.64*    %r9084
	push.64*    %r9085
	call        expr
	br          .L2098

.L2098:
	load.64*    %r9086 <- 0[ls]
	push.64*    %r9086
	push.32     $44
	call.32     %r9087 <- testnext
	cbr         %r9087, .L2095, .L2097

.L2095:
	load.64*    %r9088 <- 0[ls]
	load.64*    %r9089 <- 48[%r9088]
	load.64*    %r9090 <- 0[v]
	push.64*    %r9089
	push.64*    %r9090
	call        luaK_exp2nextreg
	load.64*    %r9091 <- 0[ls]
	load.64*    %r9092 <- 0[v]
	push.64*    %r9091
	push.64*    %r9092
	call        expr
	load.32     %r9093 <- 0[n]
	add.32      %r9094 <- %r9093, $1
	store.32    %r9094 -> 0[n]
	br          .L2096

.L2096:
	br          .L2098

.L2097:
	load.32     %r9095 <- 0[n]
	phisrc.32   %phi355(return) <- %r9095
	br          .L2099

.L2099:
	phi.32      %r9096 <- %phi355(return)
	ret.32      %r9095


funcargs:
.L2100:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[f]
	load.64*    %r9097 <- 0[ls]
	load.64*    %r9098 <- 48[%r9097]
	store.64*   %r9098 -> 0[fs]
	load.64*    %r9099 <- 0[ls]
	load.32     %r9100 <- 4[%r9099]
	store.32    %r9100 -> 0[line]
	load.64*    %r9101 <- 0[ls]
	load.32     %r9102 <- 16[%r9101]
	switch.32   %r9102, 40 -> .L2102, 123 -> .L2103, 286 -> .L2104, default -> .L2105

.L2102:
	load.32     %r9103 <- 0[line]
	load.64*    %r9104 <- 0[ls]
	load.32     %r9105 <- 8[%r9104]
	setne.32    %r9106 <- %r9103, %r9105
	cbr         %r9106, .L2106, .L2107

.L2106:
	load.64*    %r9107 <- 0[ls]
	symaddr.64* %r9108 <- <anon symbol:0x1af01e8>
	push.64*    %r9107
	push.64*    %r9108
	call        luaX_syntaxerror
	br          .L2107

.L2107:
	load.64*    %r9109 <- 0[ls]
	push.64*    %r9109
	call        luaX_next
	load.64*    %r9110 <- 0[ls]
	load.32     %r9111 <- 16[%r9110]
	seteq.32    %r9112 <- %r9111, $41
	cbr         %r9112, .L2108, .L2109

.L2108:
	store.32    $0 -> 0[args]
	br          .L2110

.L2109:
	load.64*    %r9113 <- 0[ls]
	symaddr.64* %r9114 <- args
	push.64*    %r9113
	push.64*    %r9114
	call.32     %r9115 <- explist1
	load.64*    %r9116 <- 0[fs]
	symaddr.64* %r9117 <- args
	push.64*    %r9116
	push.64*    %r9117
	push.32     $0xffffffff
	call        luaK_setreturns
	br          .L2110

.L2110:
	load.64*    %r9118 <- 0[ls]
	load.32     %r9119 <- 0[line]
	push.64*    %r9118
	push.32     $41
	push.32     $40
	push.32     %r9119
	call        check_match
	br          .L2101

.L2103:
	load.64*    %r9120 <- 0[ls]
	symaddr.64* %r9121 <- args
	push.64*    %r9120
	push.64*    %r9121
	call        constructor
	br          .L2101

.L2104:
	load.64*    %r9122 <- 0[ls]
	symaddr.64* %r9123 <- args
	load.64*    %r9124 <- 0[ls]
	load.64*    %r9125 <- 24[%r9124]
	push.64*    %r9122
	push.64*    %r9123
	push.64*    %r9125
	call        codestring
	load.64*    %r9126 <- 0[ls]
	push.64*    %r9126
	call        luaX_next
	br          .L2101

.L2105:
	load.64*    %r9127 <- 0[ls]
	symaddr.64* %r9128 <- <anon symbol:0x1af90c0>
	push.64*    %r9127
	push.64*    %r9128
	call        luaX_syntaxerror
	br          .L2111

.L2101:
	load.64*    %r9129 <- 0[f]
	load.32     %r9130 <- 8[%r9129]
	store.32    %r9130 -> 0[base]
	load.32     %r9131 <- 0[args]
	scast.32    %r9132 <- (32) %r9131
	seteq.32    %r9133 <- %r9132, $13
	setne.1     %r9134 <- %r9133, $0
	load.32     %r9135 <- 0[args]
	scast.32    %r9136 <- (32) %r9135
	seteq.32    %r9137 <- %r9136, $14
	setne.1     %r9138 <- %r9137, $0
	or-bool.1   %r9139 <- %r9134, %r9138
	cast.32     %r9140 <- (1) %r9139
	cbr         %r9140, .L2112, .L2113

.L2112:
	store.32    $0xffffffff -> 0[nparams]
	br          .L2114

.L2113:
	load.32     %r9141 <- 0[args]
	scast.32    %r9142 <- (32) %r9141
	setne.32    %r9143 <- %r9142, $0
	cbr         %r9143, .L2115, .L2116

.L2115:
	load.64*    %r9144 <- 0[fs]
	symaddr.64* %r9145 <- args
	push.64*    %r9144
	push.64*    %r9145
	call        luaK_exp2nextreg
	br          .L2116

.L2116:
	load.64*    %r9146 <- 0[fs]
	load.32     %r9147 <- 60[%r9146]
	load.32     %r9148 <- 0[base]
	add.32      %r9149 <- %r9148, $1
	sub.32      %r9150 <- %r9147, %r9149
	store.32    %r9150 -> 0[nparams]
	br          .L2114

.L2114:
	load.64*    %r9151 <- 0[f]
	load.64*    %r9152 <- 0[fs]
	load.32     %r9153 <- 0[base]
	load.32     %r9154 <- 0[nparams]
	add.32      %r9155 <- %r9154, $1
	push.64*    %r9152
	push.32     $28
	push.32     %r9153
	push.32     %r9155
	push.32     $2
	call.32     %r9156 <- luaK_codeABC
	push.64*    %r9151
	push.32     $13
	push.32     %r9156
	call        init_exp
	load.64*    %r9157 <- 0[fs]
	load.32     %r9158 <- 0[line]
	push.64*    %r9157
	push.32     %r9158
	call        luaK_fixline
	load.32     %r9159 <- 0[base]
	add.32      %r9160 <- %r9159, $1
	load.64*    %r9161 <- 0[fs]
	store.32    %r9160 -> 60[%r9161]
	br          .L2111

.L2111:
	ret


prefixexp:
.L2117:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9162 <- 0[ls]
	load.32     %r9163 <- 16[%r9162]
	switch.32   %r9163, 40 -> .L2119, 285 -> .L2120, default -> .L2121

.L2119:
	load.64*    %r9164 <- 0[ls]
	load.32     %r9165 <- 4[%r9164]
	store.32    %r9165 -> 0[line]
	load.64*    %r9166 <- 0[ls]
	push.64*    %r9166
	call        luaX_next
	load.64*    %r9167 <- 0[ls]
	load.64*    %r9168 <- 0[v]
	push.64*    %r9167
	push.64*    %r9168
	call        expr
	load.64*    %r9169 <- 0[ls]
	load.32     %r9170 <- 0[line]
	push.64*    %r9169
	push.32     $41
	push.32     $40
	push.32     %r9170
	call        check_match
	load.64*    %r9171 <- 0[ls]
	load.64*    %r9172 <- 48[%r9171]
	load.64*    %r9173 <- 0[v]
	push.64*    %r9172
	push.64*    %r9173
	call        luaK_dischargevars
	br          .L2122

.L2120:
	load.64*    %r9174 <- 0[ls]
	load.64*    %r9175 <- 0[v]
	push.64*    %r9174
	push.64*    %r9175
	call        singlevar
	br          .L2122

.L2121:
	load.64*    %r9176 <- 0[ls]
	symaddr.64* %r9177 <- <anon symbol:0x1afa598>
	push.64*    %r9176
	push.64*    %r9177
	call        luaX_syntaxerror
	br          .L2122

.L2122:
	ret


primaryexp:
.L2123:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9178 <- 0[ls]
	load.64*    %r9179 <- 48[%r9178]
	store.64*   %r9179 -> 0[fs]
	load.64*    %r9180 <- 0[ls]
	load.64*    %r9181 <- 0[v]
	push.64*    %r9180
	push.64*    %r9181
	call        prefixexp
	br          .L2127

.L2127:
	br          .L2124

.L2124:
	load.64*    %r9182 <- 0[ls]
	load.32     %r9183 <- 16[%r9182]
	switch.32   %r9183, 40 -> .L2132, 46 -> .L2129, 58 -> .L2131, 91 -> .L2130, 123 -> .L2134, 286 -> .L2133, default -> .L2135

.L2129:
	load.64*    %r9184 <- 0[ls]
	load.64*    %r9185 <- 0[v]
	push.64*    %r9184
	push.64*    %r9185
	call        field
	br          .L2128

.L2130:
	load.64*    %r9186 <- 0[fs]
	load.64*    %r9187 <- 0[v]
	push.64*    %r9186
	push.64*    %r9187
	call.32     %r9188 <- luaK_exp2anyreg
	load.64*    %r9189 <- 0[ls]
	symaddr.64* %r9190 <- key
	push.64*    %r9189
	push.64*    %r9190
	call        yindex
	load.64*    %r9191 <- 0[fs]
	load.64*    %r9192 <- 0[v]
	symaddr.64* %r9193 <- key
	push.64*    %r9191
	push.64*    %r9192
	push.64*    %r9193
	call        luaK_indexed
	br          .L2128

.L2131:
	load.64*    %r9194 <- 0[ls]
	push.64*    %r9194
	call        luaX_next
	load.64*    %r9195 <- 0[ls]
	symaddr.64* %r9196 <- key
	push.64*    %r9195
	push.64*    %r9196
	call        checkname
	load.64*    %r9197 <- 0[fs]
	load.64*    %r9198 <- 0[v]
	symaddr.64* %r9199 <- key
	push.64*    %r9197
	push.64*    %r9198
	push.64*    %r9199
	call        luaK_self
	load.64*    %r9200 <- 0[ls]
	load.64*    %r9201 <- 0[v]
	push.64*    %r9200
	push.64*    %r9201
	call        funcargs
	br          .L2128

.L2132:
	br          .L2133

.L2133:
	br          .L2134

.L2134:
	load.64*    %r9202 <- 0[fs]
	load.64*    %r9203 <- 0[v]
	push.64*    %r9202
	push.64*    %r9203
	call        luaK_exp2nextreg
	load.64*    %r9204 <- 0[ls]
	load.64*    %r9205 <- 0[v]
	push.64*    %r9204
	push.64*    %r9205
	call        funcargs
	br          .L2128

.L2135:
	br          .L2136

.L2128:
	br          .L2125

.L2125:
	br          .L2127

.L2136:
	ret


simpleexp:
.L2137:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9206 <- 0[ls]
	load.32     %r9207 <- 16[%r9206]
	switch.32   %r9207, 123 -> .L2145, 263 -> .L2143, 265 -> .L2146, 269 -> .L2141, 275 -> .L2142, 279 -> .L2144, 284 -> .L2139, 286 -> .L2140, default -> .L2147

.L2139:
	load.64*    %r9208 <- 0[v]
	push.64*    %r9208
	push.32     $5
	push.32     $0
	call        init_exp
	load.64*    %r9209 <- 0[ls]
	load.f64    %r9210 <- 24[%r9209]
	load.64*    %r9211 <- 0[v]
	store.f64   %r9210 -> 8[%r9211]
	br          .L2138

.L2140:
	load.64*    %r9212 <- 0[ls]
	load.64*    %r9213 <- 0[v]
	load.64*    %r9214 <- 0[ls]
	load.64*    %r9215 <- 24[%r9214]
	push.64*    %r9212
	push.64*    %r9213
	push.64*    %r9215
	call        codestring
	br          .L2138

.L2141:
	load.64*    %r9216 <- 0[v]
	push.64*    %r9216
	push.32     $1
	push.32     $0
	call        init_exp
	br          .L2138

.L2142:
	load.64*    %r9217 <- 0[v]
	push.64*    %r9217
	push.32     $2
	push.32     $0
	call        init_exp
	br          .L2138

.L2143:
	load.64*    %r9218 <- 0[v]
	push.64*    %r9218
	push.32     $3
	push.32     $0
	call        init_exp
	br          .L2138

.L2144:
	load.64*    %r9219 <- 0[ls]
	load.64*    %r9220 <- 48[%r9219]
	store.64*   %r9220 -> 0[fs]
	load.64*    %r9221 <- 0[fs]
	load.64*    %r9222 <- 0[%r9221]
	load.8      %r9223 <- 114[%r9222]
	cbr         %r9223, .L2149, .L2148

.L2148:
	load.64*    %r9224 <- 0[ls]
	symaddr.64* %r9225 <- <anon symbol:0x1afbef8>
	push.64*    %r9224
	push.64*    %r9225
	call        luaX_syntaxerror
	br          .L2149

.L2149:
	load.64*    %r9226 <- 0[fs]
	load.64*    %r9227 <- 0[%r9226]
	load.8      %r9228 <- 114[%r9227]
	cast.32     %r9229 <- (8) %r9228
	and.32      %r9230 <- %r9229, $0xfffffffb
	scast.8     %r9231 <- (32) %r9230
	store.8     %r9231 -> 114[%r9227]
	load.64*    %r9232 <- 0[v]
	load.64*    %r9233 <- 0[fs]
	push.64*    %r9233
	push.32     $37
	push.32     $0
	push.32     $1
	push.32     $0
	call.32     %r9234 <- luaK_codeABC
	push.64*    %r9232
	push.32     $14
	push.32     %r9234
	call        init_exp
	br          .L2138

.L2145:
	load.64*    %r9235 <- 0[ls]
	load.64*    %r9236 <- 0[v]
	push.64*    %r9235
	push.64*    %r9236
	call        constructor
	br          .L2150

.L2146:
	load.64*    %r9237 <- 0[ls]
	push.64*    %r9237
	call        luaX_next
	load.64*    %r9238 <- 0[ls]
	load.64*    %r9239 <- 0[v]
	load.64*    %r9240 <- 0[ls]
	load.32     %r9241 <- 4[%r9240]
	push.64*    %r9238
	push.64*    %r9239
	push.32     $0
	push.32     %r9241
	call        body
	br          .L2150

.L2147:
	load.64*    %r9242 <- 0[ls]
	load.64*    %r9243 <- 0[v]
	push.64*    %r9242
	push.64*    %r9243
	call        primaryexp
	br          .L2150

.L2138:
	load.64*    %r9244 <- 0[ls]
	push.64*    %r9244
	call        luaX_next
	br          .L2150

.L2150:
	ret


getunopr:
.L2151:
	<entry-point>
	store.32    %arg1 -> 0[op]
	load.32     %r9245 <- 0[op]
	switch.32   %r9245, 35 -> .L2155, 45 -> .L2154, 270 -> .L2153, default -> .L2156

.L2153:
	phisrc.32   %phi356(return) <- $1
	br          .L2157

.L2154:
	phisrc.32   %phi357(return) <- $0
	br          .L2157

.L2155:
	phisrc.32   %phi358(return) <- $2
	br          .L2157

.L2156:
	phisrc.32   %phi359(return) <- $3
	br          .L2157

.L2157:
	phi.32      %r9246 <- %phi356(return), %phi357(return), %phi358(return), %phi359(return)
	ret.32      %r9246


getbinopr:
.L2158:
	<entry-point>
	store.32    %arg1 -> 0[op]
	load.32     %r9247 <- 0[op]
	switch.32   %r9247, 37 -> .L2164, 42 -> .L2162, 43 -> .L2160, 45 -> .L2161, 47 -> .L2163, 60 -> .L2169, 62 -> .L2171, 94 -> .L2165, 257 -> .L2173, 271 -> .L2174, 278 -> .L2166, 280 -> .L2168, 281 -> .L2172, 282 -> .L2170, 283 -> .L2167, default -> .L2175

.L2160:
	phisrc.32   %phi360(return) <- $0
	br          .L2176

.L2161:
	phisrc.32   %phi361(return) <- $1
	br          .L2176

.L2162:
	phisrc.32   %phi362(return) <- $2
	br          .L2176

.L2163:
	phisrc.32   %phi363(return) <- $3
	br          .L2176

.L2164:
	phisrc.32   %phi364(return) <- $4
	br          .L2176

.L2165:
	phisrc.32   %phi365(return) <- $5
	br          .L2176

.L2166:
	phisrc.32   %phi366(return) <- $6
	br          .L2176

.L2167:
	phisrc.32   %phi367(return) <- $7
	br          .L2176

.L2168:
	phisrc.32   %phi368(return) <- $8
	br          .L2176

.L2169:
	phisrc.32   %phi369(return) <- $9
	br          .L2176

.L2170:
	phisrc.32   %phi370(return) <- $10
	br          .L2176

.L2171:
	phisrc.32   %phi371(return) <- $11
	br          .L2176

.L2172:
	phisrc.32   %phi372(return) <- $12
	br          .L2176

.L2173:
	phisrc.32   %phi373(return) <- $13
	br          .L2176

.L2174:
	phisrc.32   %phi374(return) <- $14
	br          .L2176

.L2175:
	phisrc.32   %phi375(return) <- $15
	br          .L2176

.L2176:
	phi.32      %r9248 <- %phi360(return), %phi361(return), %phi362(return), %phi363(return), %phi364(return), %phi365(return), %phi366(return), %phi367(return), %phi368(return), %phi369(return), %phi370(return), %phi371(return), %phi372(return), %phi373(return), %phi374(return), %phi375(return)
	ret.32      %r9248


subexpr:
.L2177:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    %arg3 -> 0[limit]
	load.64*    %r9249 <- 0[ls]
	push.64*    %r9249
	call        enterlevel
	load.64*    %r9250 <- 0[ls]
	load.32     %r9251 <- 16[%r9250]
	push.32     %r9251
	call.32     %r9252 <- getunopr
	store.32    %r9252 -> 0[uop]
	load.32     %r9253 <- 0[uop]
	scast.32    %r9254 <- (32) %r9253
	setne.32    %r9255 <- %r9254, $3
	cbr         %r9255, .L2178, .L2179

.L2178:
	load.64*    %r9256 <- 0[ls]
	push.64*    %r9256
	call        luaX_next
	load.64*    %r9257 <- 0[ls]
	load.64*    %r9258 <- 0[v]
	push.64*    %r9257
	push.64*    %r9258
	push.32     $8
	call.32     %r9259 <- subexpr
	load.64*    %r9260 <- 0[ls]
	load.64*    %r9261 <- 48[%r9260]
	load.32     %r9262 <- 0[uop]
	load.64*    %r9263 <- 0[v]
	push.64*    %r9261
	push.32     %r9262
	push.64*    %r9263
	call        luaK_prefix
	br          .L2180

.L2179:
	load.64*    %r9264 <- 0[ls]
	load.64*    %r9265 <- 0[v]
	push.64*    %r9264
	push.64*    %r9265
	call        simpleexp
	br          .L2180

.L2180:
	load.64*    %r9266 <- 0[ls]
	load.32     %r9267 <- 16[%r9266]
	push.32     %r9267
	call.32     %r9268 <- getbinopr
	store.32    %r9268 -> 0[op]
	br          .L2184

.L2184:
	load.32     %r9269 <- 0[op]
	scast.32    %r9270 <- (32) %r9269
	setne.32    %r9271 <- %r9270, $15
	cbr         %r9271, .L2185, .L2183

.L2185:
	symaddr.64* %r9272 <- priority
	load.32     %r9273 <- 0[op]
	scast.64    %r9274 <- (32) %r9273
	muls.64     %r9275 <- %r9274, $2
	add.64*     %r9276 <- %r9272, %r9275
	load.8      %r9277 <- 0[%r9276]
	cast.32     %r9278 <- (8) %r9277
	load.32     %r9279 <- 0[limit]
	seta.32     %r9280 <- %r9278, %r9279
	cbr         %r9280, .L2181, .L2183

.L2181:
	load.64*    %r9281 <- 0[ls]
	push.64*    %r9281
	call        luaX_next
	load.64*    %r9282 <- 0[ls]
	load.64*    %r9283 <- 48[%r9282]
	load.32     %r9284 <- 0[op]
	load.64*    %r9285 <- 0[v]
	push.64*    %r9283
	push.32     %r9284
	push.64*    %r9285
	call        luaK_infix
	load.64*    %r9286 <- 0[ls]
	symaddr.64* %r9287 <- v2
	symaddr.64* %r9288 <- priority
	load.32     %r9289 <- 0[op]
	scast.64    %r9290 <- (32) %r9289
	muls.64     %r9291 <- %r9290, $2
	add.64*     %r9292 <- %r9288, %r9291
	load.8      %r9293 <- 1[%r9292]
	cast.32     %r9294 <- (8) %r9293
	push.64*    %r9286
	push.64*    %r9287
	push.32     %r9294
	call.32     %r9295 <- subexpr
	store.32    %r9295 -> 0[nextop]
	load.64*    %r9296 <- 0[ls]
	load.64*    %r9297 <- 48[%r9296]
	load.32     %r9298 <- 0[op]
	load.64*    %r9299 <- 0[v]
	symaddr.64* %r9300 <- v2
	push.64*    %r9297
	push.32     %r9298
	push.64*    %r9299
	push.64*    %r9300
	call        luaK_posfix
	load.32     %r9301 <- 0[nextop]
	store.32    %r9301 -> 0[op]
	br          .L2182

.L2182:
	br          .L2184

.L2183:
	load.64*    %r9302 <- 0[ls]
	load.64*    %r9303 <- 56[%r9302]
	load.16     %r9304 <- 96[%r9303]
	sub.16      %r9305 <- %r9304, $1
	store.16    %r9305 -> 96[%r9303]
	load.32     %r9306 <- 0[op]
	phisrc.32   %phi376(return) <- %r9306
	br          .L2186

.L2186:
	phi.32      %r9307 <- %phi376(return)
	ret.32      %r9306


expr:
.L2187:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9308 <- 0[ls]
	load.64*    %r9309 <- 0[v]
	push.64*    %r9308
	push.64*    %r9309
	push.32     $0
	call.32     %r9310 <- subexpr
	br          .L2188

.L2188:
	ret


block_follow:
.L2189:
	<entry-point>
	store.32    %arg1 -> 0[token]
	load.32     %r9311 <- 0[token]
	switch.32   %r9311, 260 -> .L2191, 261 -> .L2192, 262 -> .L2193, 276 -> .L2194, 287 -> .L2195, default -> .L2196

.L2191:
	br          .L2192

.L2192:
	br          .L2193

.L2193:
	br          .L2194

.L2194:
	br          .L2195

.L2195:
	phisrc.32   %phi377(return) <- $1
	br          .L2197

.L2196:
	phisrc.32   %phi378(return) <- $0
	br          .L2197

.L2197:
	phi.32      %r9312 <- %phi377(return), %phi378(return)
	ret.32      %r9312


block:
.L2198:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9313 <- 0[ls]
	load.64*    %r9314 <- 48[%r9313]
	store.64*   %r9314 -> 0[fs]
	load.64*    %r9315 <- 0[fs]
	symaddr.64* %r9316 <- bl
	push.64*    %r9315
	push.64*    %r9316
	push.8      $0
	call        enterblock
	load.64*    %r9317 <- 0[ls]
	push.64*    %r9317
	call        chunk
	load.64*    %r9318 <- 0[fs]
	push.64*    %r9318
	call        leaveblock
	br          .L2199

.L2199:
	ret


check_conflict:
.L2200:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[lh]
	store.64*   %arg3 -> 0[v]
	load.64*    %r9319 <- 0[ls]
	load.64*    %r9320 <- 48[%r9319]
	store.64*   %r9320 -> 0[fs]
	load.64*    %r9321 <- 0[fs]
	load.32     %r9322 <- 60[%r9321]
	store.32    %r9322 -> 0[extra]
	store.32    $0 -> 0[conflict]
	br          .L2204

.L2204:
	load.64*    %r9323 <- 0[lh]
	cbr         %r9323, .L2201, .L2203

.L2201:
	load.64*    %r9324 <- 0[lh]
	load.32     %r9325 <- 8[%r9324]
	scast.32    %r9326 <- (32) %r9325
	seteq.32    %r9327 <- %r9326, $9
	cbr         %r9327, .L2205, .L2206

.L2205:
	load.64*    %r9328 <- 0[lh]
	load.32     %r9329 <- 16[%r9328]
	load.64*    %r9330 <- 0[v]
	load.32     %r9331 <- 8[%r9330]
	seteq.32    %r9332 <- %r9329, %r9331
	cbr         %r9332, .L2207, .L2208

.L2207:
	store.32    $1 -> 0[conflict]
	load.32     %r9333 <- 0[extra]
	load.64*    %r9334 <- 0[lh]
	store.32    %r9333 -> 16[%r9334]
	br          .L2208

.L2208:
	load.64*    %r9335 <- 0[lh]
	load.32     %r9336 <- 20[%r9335]
	load.64*    %r9337 <- 0[v]
	load.32     %r9338 <- 8[%r9337]
	seteq.32    %r9339 <- %r9336, %r9338
	cbr         %r9339, .L2209, .L2210

.L2209:
	store.32    $1 -> 0[conflict]
	load.32     %r9340 <- 0[extra]
	load.64*    %r9341 <- 0[lh]
	store.32    %r9340 -> 20[%r9341]
	br          .L2210

.L2210:
	br          .L2206

.L2206:
	br          .L2202

.L2202:
	load.64*    %r9342 <- 0[lh]
	load.64*    %r9343 <- 0[%r9342]
	store.64*   %r9343 -> 0[lh]
	br          .L2204

.L2203:
	load.32     %r9344 <- 0[conflict]
	cbr         %r9344, .L2211, .L2212

.L2211:
	load.64*    %r9345 <- 0[fs]
	load.64*    %r9346 <- 0[fs]
	load.32     %r9347 <- 60[%r9346]
	load.64*    %r9348 <- 0[v]
	load.32     %r9349 <- 8[%r9348]
	push.64*    %r9345
	push.32     $0
	push.32     %r9347
	push.32     %r9349
	push.32     $0
	call.32     %r9350 <- luaK_codeABC
	load.64*    %r9351 <- 0[fs]
	push.64*    %r9351
	push.32     $1
	call        luaK_reserveregs
	br          .L2212

.L2212:
	ret


assignment:
.L2213:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[lh]
	store.32    %arg3 -> 0[nvars]
	load.64*    %r9352 <- 0[lh]
	load.32     %r9353 <- 8[%r9352]
	scast.32    %r9354 <- (32) %r9353
	setle.32    %r9355 <- $6, %r9354
	cbr         %r9355, .L2216, .L2214

.L2216:
	load.64*    %r9356 <- 0[lh]
	load.32     %r9357 <- 8[%r9356]
	scast.32    %r9358 <- (32) %r9357
	setle.32    %r9359 <- %r9358, $9
	cbr         %r9359, .L2215, .L2214

.L2214:
	load.64*    %r9360 <- 0[ls]
	symaddr.64* %r9361 <- <anon symbol:0x1b00208>
	push.64*    %r9360
	push.64*    %r9361
	call        luaX_syntaxerror
	br          .L2215

.L2215:
	load.64*    %r9362 <- 0[ls]
	push.64*    %r9362
	push.32     $44
	call.32     %r9363 <- testnext
	cbr         %r9363, .L2217, .L2218

.L2217:
	load.64*    %r9364 <- 0[lh]
	store.64*   %r9364 -> 0[nv]
	load.64*    %r9365 <- 0[ls]
	symaddr.64* %r9366 <- nv
	add.64*     %r9367 <- %r9366, $8
	push.64*    %r9365
	push.64*    %r9367
	call        primaryexp
	load.32     %r9368 <- 8[nv]
	scast.32    %r9369 <- (32) %r9368
	seteq.32    %r9370 <- %r9369, $6
	cbr         %r9370, .L2219, .L2220

.L2219:
	load.64*    %r9371 <- 0[ls]
	load.64*    %r9372 <- 0[lh]
	symaddr.64* %r9373 <- nv
	add.64*     %r9374 <- %r9373, $8
	push.64*    %r9371
	push.64*    %r9372
	push.64*    %r9374
	call        check_conflict
	br          .L2220

.L2220:
	load.32     %r9375 <- 0[nvars]
	load.64*    %r9376 <- 0[ls]
	load.64*    %r9377 <- 56[%r9376]
	load.16     %r9378 <- 96[%r9377]
	cast.32     %r9379 <- (16) %r9378
	sub.32      %r9380 <- $200, %r9379
	setgt.32    %r9381 <- %r9375, %r9380
	cbr         %r9381, .L2221, .L2222

.L2221:
	load.64*    %r9382 <- 0[ls]
	load.64*    %r9383 <- 48[%r9382]
	load.64*    %r9384 <- 0[ls]
	load.64*    %r9385 <- 56[%r9384]
	load.16     %r9386 <- 96[%r9385]
	cast.32     %r9387 <- (16) %r9386
	sub.32      %r9388 <- $200, %r9387
	symaddr.64* %r9389 <- <anon symbol:0x1b01470>
	push.64*    %r9383
	push.32     %r9388
	push.64*    %r9389
	call        errorlimit
	br          .L2222

.L2222:
	load.64*    %r9390 <- 0[ls]
	symaddr.64* %r9391 <- nv
	load.32     %r9392 <- 0[nvars]
	add.32      %r9393 <- %r9392, $1
	push.64*    %r9390
	push.64*    %r9391
	push.32     %r9393
	call        assignment
	br          .L2223

.L2218:
	load.64*    %r9394 <- 0[ls]
	push.64*    %r9394
	push.32     $61
	call        checknext
	load.64*    %r9395 <- 0[ls]
	symaddr.64* %r9396 <- e
	push.64*    %r9395
	push.64*    %r9396
	call.32     %r9397 <- explist1
	store.32    %r9397 -> 0[nexps]
	load.32     %r9398 <- 0[nexps]
	load.32     %r9399 <- 0[nvars]
	setne.32    %r9400 <- %r9398, %r9399
	cbr         %r9400, .L2224, .L2225

.L2224:
	load.64*    %r9401 <- 0[ls]
	load.32     %r9402 <- 0[nvars]
	load.32     %r9403 <- 0[nexps]
	symaddr.64* %r9404 <- e
	push.64*    %r9401
	push.32     %r9402
	push.32     %r9403
	push.64*    %r9404
	call        adjust_assign
	load.32     %r9405 <- 0[nexps]
	load.32     %r9406 <- 0[nvars]
	setgt.32    %r9407 <- %r9405, %r9406
	cbr         %r9407, .L2226, .L2227

.L2226:
	load.32     %r9408 <- 0[nexps]
	load.32     %r9409 <- 0[nvars]
	sub.32      %r9410 <- %r9408, %r9409
	load.64*    %r9411 <- 0[ls]
	load.64*    %r9412 <- 48[%r9411]
	load.32     %r9413 <- 60[%r9412]
	scast.32    %r9414 <- (32) %r9413
	sub.32      %r9415 <- %r9414, %r9410
	scast.32    %r9416 <- (32) %r9415
	store.32    %r9416 -> 60[%r9412]
	br          .L2227

.L2227:
	br          .L2228

.L2225:
	load.64*    %r9417 <- 0[ls]
	load.64*    %r9418 <- 48[%r9417]
	symaddr.64* %r9419 <- e
	push.64*    %r9418
	push.64*    %r9419
	call        luaK_setoneret
	load.64*    %r9420 <- 0[ls]
	load.64*    %r9421 <- 48[%r9420]
	load.64*    %r9422 <- 0[lh]
	add.64*     %r9423 <- %r9422, $8
	symaddr.64* %r9424 <- e
	push.64*    %r9421
	push.64*    %r9423
	push.64*    %r9424
	call        luaK_storevar
	br          .L2229

.L2228:
	br          .L2223

.L2223:
	symaddr.64* %r9425 <- e
	load.64*    %r9426 <- 0[ls]
	load.64*    %r9427 <- 48[%r9426]
	load.32     %r9428 <- 60[%r9427]
	sub.32      %r9429 <- %r9428, $1
	push.64*    %r9425
	push.32     $12
	push.32     %r9429
	call        init_exp
	load.64*    %r9430 <- 0[ls]
	load.64*    %r9431 <- 48[%r9430]
	load.64*    %r9432 <- 0[lh]
	add.64*     %r9433 <- %r9432, $8
	symaddr.64* %r9434 <- e
	push.64*    %r9431
	push.64*    %r9433
	push.64*    %r9434
	call        luaK_storevar
	br          .L2229

.L2229:
	ret


cond:
.L2230:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9435 <- 0[ls]
	symaddr.64* %r9436 <- v
	push.64*    %r9435
	push.64*    %r9436
	call        expr
	load.32     %r9437 <- 0[v]
	scast.32    %r9438 <- (32) %r9437
	seteq.32    %r9439 <- %r9438, $1
	cbr         %r9439, .L2231, .L2232

.L2231:
	store.32    $3 -> 0[v]
	br          .L2232

.L2232:
	load.64*    %r9440 <- 0[ls]
	load.64*    %r9441 <- 48[%r9440]
	symaddr.64* %r9442 <- v
	push.64*    %r9441
	push.64*    %r9442
	call        luaK_goiftrue
	load.32     %r9443 <- 20[v]
	phisrc.32   %phi379(return) <- %r9443
	br          .L2233

.L2233:
	phi.32      %r9444 <- %phi379(return)
	ret.32      %r9443


breakstat:
.L2234:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9445 <- 0[ls]
	load.64*    %r9446 <- 48[%r9445]
	store.64*   %r9446 -> 0[fs]
	load.64*    %r9447 <- 0[fs]
	load.64*    %r9448 <- 40[%r9447]
	store.64*   %r9448 -> 0[bl]
	store.32    $0 -> 0[upval]
	br          .L2238

.L2238:
	load.64*    %r9449 <- 0[bl]
	cbr         %r9449, .L2239, .L2237

.L2239:
	load.64*    %r9450 <- 0[bl]
	load.8      %r9451 <- 14[%r9450]
	cbr         %r9451, .L2237, .L2235

.L2235:
	load.64*    %r9452 <- 0[bl]
	load.8      %r9453 <- 13[%r9452]
	cast.32     %r9454 <- (8) %r9453
	load.32     %r9455 <- 0[upval]
	scast.32    %r9456 <- (32) %r9455
	or.32       %r9457 <- %r9456, %r9454
	scast.32    %r9458 <- (32) %r9457
	store.32    %r9458 -> 0[upval]
	load.64*    %r9459 <- 0[bl]
	load.64*    %r9460 <- 0[%r9459]
	store.64*   %r9460 -> 0[bl]
	br          .L2236

.L2236:
	br          .L2238

.L2237:
	load.64*    %r9461 <- 0[bl]
	cbr         %r9461, .L2241, .L2240

.L2240:
	load.64*    %r9462 <- 0[ls]
	symaddr.64* %r9463 <- <anon symbol:0x1b04478>
	push.64*    %r9462
	push.64*    %r9463
	call        luaX_syntaxerror
	br          .L2241

.L2241:
	load.32     %r9464 <- 0[upval]
	cbr         %r9464, .L2242, .L2243

.L2242:
	load.64*    %r9465 <- 0[fs]
	load.64*    %r9466 <- 0[bl]
	load.8      %r9467 <- 12[%r9466]
	cast.32     %r9468 <- (8) %r9467
	push.64*    %r9465
	push.32     $35
	push.32     %r9468
	push.32     $0
	push.32     $0
	call.32     %r9469 <- luaK_codeABC
	br          .L2243

.L2243:
	load.64*    %r9470 <- 0[fs]
	load.64*    %r9471 <- 0[bl]
	add.64*     %r9472 <- %r9471, $8
	load.64*    %r9473 <- 0[fs]
	push.64*    %r9473
	call.32     %r9474 <- luaK_jump
	push.64*    %r9470
	push.64*    %r9472
	push.32     %r9474
	call        luaK_concat
	br          .L2244

.L2244:
	ret


whilestat:
.L2245:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9475 <- 0[ls]
	load.64*    %r9476 <- 48[%r9475]
	store.64*   %r9476 -> 0[fs]
	load.64*    %r9477 <- 0[ls]
	push.64*    %r9477
	call        luaX_next
	load.64*    %r9478 <- 0[fs]
	push.64*    %r9478
	call.32     %r9479 <- luaK_getlabel
	store.32    %r9479 -> 0[whileinit]
	load.64*    %r9480 <- 0[ls]
	push.64*    %r9480
	call.32     %r9481 <- cond
	store.32    %r9481 -> 0[condexit]
	load.64*    %r9482 <- 0[fs]
	symaddr.64* %r9483 <- bl
	push.64*    %r9482
	push.64*    %r9483
	push.8      $1
	call        enterblock
	load.64*    %r9484 <- 0[ls]
	push.64*    %r9484
	push.32     $259
	call        checknext
	load.64*    %r9485 <- 0[ls]
	push.64*    %r9485
	call        block
	load.64*    %r9486 <- 0[fs]
	load.64*    %r9487 <- 0[fs]
	push.64*    %r9487
	call.32     %r9488 <- luaK_jump
	load.32     %r9489 <- 0[whileinit]
	push.64*    %r9486
	push.32     %r9488
	push.32     %r9489
	call        luaK_patchlist
	load.64*    %r9490 <- 0[ls]
	load.32     %r9491 <- 0[line]
	push.64*    %r9490
	push.32     $262
	push.32     $277
	push.32     %r9491
	call        check_match
	load.64*    %r9492 <- 0[fs]
	push.64*    %r9492
	call        leaveblock
	load.64*    %r9493 <- 0[fs]
	load.32     %r9494 <- 0[condexit]
	push.64*    %r9493
	push.32     %r9494
	call        luaK_patchtohere
	br          .L2246

.L2246:
	ret


repeatstat:
.L2247:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9495 <- 0[ls]
	load.64*    %r9496 <- 48[%r9495]
	store.64*   %r9496 -> 0[fs]
	load.64*    %r9497 <- 0[fs]
	push.64*    %r9497
	call.32     %r9498 <- luaK_getlabel
	store.32    %r9498 -> 0[repeat_init]
	load.64*    %r9499 <- 0[fs]
	symaddr.64* %r9500 <- bl1
	push.64*    %r9499
	push.64*    %r9500
	push.8      $1
	call        enterblock
	load.64*    %r9501 <- 0[fs]
	symaddr.64* %r9502 <- bl2
	push.64*    %r9501
	push.64*    %r9502
	push.8      $0
	call        enterblock
	load.64*    %r9503 <- 0[ls]
	push.64*    %r9503
	call        luaX_next
	load.64*    %r9504 <- 0[ls]
	push.64*    %r9504
	call        chunk
	load.64*    %r9505 <- 0[ls]
	load.32     %r9506 <- 0[line]
	push.64*    %r9505
	push.32     $276
	push.32     $272
	push.32     %r9506
	call        check_match
	load.64*    %r9507 <- 0[ls]
	push.64*    %r9507
	call.32     %r9508 <- cond
	store.32    %r9508 -> 0[condexit]
	load.8      %r9509 <- 13[bl2]
	cbr         %r9509, .L2249, .L2248

.L2248:
	load.64*    %r9510 <- 0[fs]
	push.64*    %r9510
	call        leaveblock
	load.64*    %r9511 <- 0[ls]
	load.64*    %r9512 <- 48[%r9511]
	load.32     %r9513 <- 0[condexit]
	load.32     %r9514 <- 0[repeat_init]
	push.64*    %r9512
	push.32     %r9513
	push.32     %r9514
	call        luaK_patchlist
	br          .L2250

.L2249:
	load.64*    %r9515 <- 0[ls]
	push.64*    %r9515
	call        breakstat
	load.64*    %r9516 <- 0[ls]
	load.64*    %r9517 <- 48[%r9516]
	load.32     %r9518 <- 0[condexit]
	push.64*    %r9517
	push.32     %r9518
	call        luaK_patchtohere
	load.64*    %r9519 <- 0[fs]
	push.64*    %r9519
	call        leaveblock
	load.64*    %r9520 <- 0[ls]
	load.64*    %r9521 <- 48[%r9520]
	load.64*    %r9522 <- 0[fs]
	push.64*    %r9522
	call.32     %r9523 <- luaK_jump
	load.32     %r9524 <- 0[repeat_init]
	push.64*    %r9521
	push.32     %r9523
	push.32     %r9524
	call        luaK_patchlist
	br          .L2250

.L2250:
	load.64*    %r9525 <- 0[fs]
	push.64*    %r9525
	call        leaveblock
	br          .L2251

.L2251:
	ret


exp1:
.L2252:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9526 <- 0[ls]
	symaddr.64* %r9527 <- e
	push.64*    %r9526
	push.64*    %r9527
	call        expr
	load.32     %r9528 <- 0[e]
	scast.32    %r9529 <- (32) %r9528
	store.32    %r9529 -> 0[k]
	load.64*    %r9530 <- 0[ls]
	load.64*    %r9531 <- 48[%r9530]
	symaddr.64* %r9532 <- e
	push.64*    %r9531
	push.64*    %r9532
	call        luaK_exp2nextreg
	load.32     %r9533 <- 0[k]
	phisrc.32   %phi380(return) <- %r9533
	br          .L2253

.L2253:
	phi.32      %r9534 <- %phi380(return)
	ret.32      %r9533


forbody:
.L2254:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[base]
	store.32    %arg3 -> 0[line]
	store.32    %arg4 -> 0[nvars]
	store.32    %arg5 -> 0[isnum]
	load.64*    %r9535 <- 0[ls]
	load.64*    %r9536 <- 48[%r9535]
	store.64*   %r9536 -> 0[fs]
	load.64*    %r9537 <- 0[ls]
	push.64*    %r9537
	push.32     $3
	call        adjustlocalvars
	load.64*    %r9538 <- 0[ls]
	push.64*    %r9538
	push.32     $259
	call        checknext
	load.32     %r9539 <- 0[isnum]
	cbr         %r9539, .L2255, .L2256

.L2255:
	load.64*    %r9540 <- 0[fs]
	load.32     %r9541 <- 0[base]
	push.64*    %r9540
	push.32     $32
	push.32     %r9541
	push.32     $0x1fffe
	call.32     %r9542 <- luaK_codeABx
	phisrc.32   %phi381 <- %r9542
	br          .L2257

.L2256:
	load.64*    %r9543 <- 0[fs]
	push.64*    %r9543
	call.32     %r9544 <- luaK_jump
	phisrc.32   %phi382 <- %r9544
	br          .L2257

.L2257:
	phi.32      %r9545 <- %phi381, %phi382
	store.32    %r9545 -> 0[prep]
	load.64*    %r9546 <- 0[fs]
	symaddr.64* %r9547 <- bl
	push.64*    %r9546
	push.64*    %r9547
	push.8      $0
	call        enterblock
	load.64*    %r9548 <- 0[ls]
	load.32     %r9549 <- 0[nvars]
	push.64*    %r9548
	push.32     %r9549
	call        adjustlocalvars
	load.64*    %r9550 <- 0[fs]
	load.32     %r9551 <- 0[nvars]
	push.64*    %r9550
	push.32     %r9551
	call        luaK_reserveregs
	load.64*    %r9552 <- 0[ls]
	push.64*    %r9552
	call        block
	load.64*    %r9553 <- 0[fs]
	push.64*    %r9553
	call        leaveblock
	load.64*    %r9554 <- 0[fs]
	load.32     %r9555 <- 0[prep]
	push.64*    %r9554
	push.32     %r9555
	call        luaK_patchtohere
	load.32     %r9556 <- 0[isnum]
	cbr         %r9556, .L2258, .L2259

.L2258:
	load.64*    %r9557 <- 0[fs]
	load.32     %r9558 <- 0[base]
	push.64*    %r9557
	push.32     $31
	push.32     %r9558
	push.32     $0x1fffe
	call.32     %r9559 <- luaK_codeABx
	phisrc.32   %phi383 <- %r9559
	br          .L2260

.L2259:
	load.64*    %r9560 <- 0[fs]
	load.32     %r9561 <- 0[base]
	load.32     %r9562 <- 0[nvars]
	push.64*    %r9560
	push.32     $33
	push.32     %r9561
	push.32     $0
	push.32     %r9562
	call.32     %r9563 <- luaK_codeABC
	phisrc.32   %phi384 <- %r9563
	br          .L2260

.L2260:
	phi.32      %r9564 <- %phi383, %phi384
	store.32    %r9564 -> 0[endfor]
	load.64*    %r9565 <- 0[fs]
	load.32     %r9566 <- 0[line]
	push.64*    %r9565
	push.32     %r9566
	call        luaK_fixline
	load.64*    %r9567 <- 0[fs]
	load.32     %r9568 <- 0[isnum]
	cbr         %r9568, .L2261, .L2262

.L2261:
	load.32     %r9569 <- 0[endfor]
	phisrc.32   %phi385 <- %r9569
	br          .L2263

.L2262:
	load.64*    %r9570 <- 0[fs]
	push.64*    %r9570
	call.32     %r9571 <- luaK_jump
	phisrc.32   %phi386 <- %r9571
	br          .L2263

.L2263:
	phi.32      %r9572 <- %phi385, %phi386
	load.32     %r9573 <- 0[prep]
	add.32      %r9574 <- %r9573, $1
	push.64*    %r9567
	push.32     %r9572
	push.32     %r9574
	call        luaK_patchlist
	br          .L2264

.L2264:
	ret


fornum:
.L2265:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[varname]
	store.32    %arg3 -> 0[line]
	load.64*    %r9575 <- 0[ls]
	load.64*    %r9576 <- 48[%r9575]
	store.64*   %r9576 -> 0[fs]
	load.64*    %r9577 <- 0[fs]
	load.32     %r9578 <- 60[%r9577]
	store.32    %r9578 -> 0[base]
	load.64*    %r9579 <- 0[ls]
	load.64*    %r9580 <- 0[ls]
	symaddr.64* %r9581 <- <anon symbol:0x1b069a0>
	push.64*    %r9580
	push.64*    %r9581
	push.64     $11
	call.64*    %r9582 <- luaX_newstring
	push.64*    %r9579
	push.64*    %r9582
	push.32     $0
	call        new_localvar
	load.64*    %r9583 <- 0[ls]
	load.64*    %r9584 <- 0[ls]
	symaddr.64* %r9585 <- <anon symbol:0x1b06f10>
	push.64*    %r9584
	push.64*    %r9585
	push.64     $11
	call.64*    %r9586 <- luaX_newstring
	push.64*    %r9583
	push.64*    %r9586
	push.32     $1
	call        new_localvar
	load.64*    %r9587 <- 0[ls]
	load.64*    %r9588 <- 0[ls]
	symaddr.64* %r9589 <- <anon symbol:0x1b07480>
	push.64*    %r9588
	push.64*    %r9589
	push.64     $10
	call.64*    %r9590 <- luaX_newstring
	push.64*    %r9587
	push.64*    %r9590
	push.32     $2
	call        new_localvar
	load.64*    %r9591 <- 0[ls]
	load.64*    %r9592 <- 0[varname]
	push.64*    %r9591
	push.64*    %r9592
	push.32     $3
	call        new_localvar
	load.64*    %r9593 <- 0[ls]
	push.64*    %r9593
	push.32     $61
	call        checknext
	load.64*    %r9594 <- 0[ls]
	push.64*    %r9594
	call.32     %r9595 <- exp1
	load.64*    %r9596 <- 0[ls]
	push.64*    %r9596
	push.32     $44
	call        checknext
	load.64*    %r9597 <- 0[ls]
	push.64*    %r9597
	call.32     %r9598 <- exp1
	load.64*    %r9599 <- 0[ls]
	push.64*    %r9599
	push.32     $44
	call.32     %r9600 <- testnext
	cbr         %r9600, .L2266, .L2267

.L2266:
	load.64*    %r9601 <- 0[ls]
	push.64*    %r9601
	call.32     %r9602 <- exp1
	br          .L2268

.L2267:
	load.64*    %r9603 <- 0[fs]
	load.64*    %r9604 <- 0[fs]
	load.32     %r9605 <- 60[%r9604]
	load.64*    %r9606 <- 0[fs]
	set.f64     %r9607 <- 1.000000
	push.64*    %r9606
	push.f64    %r9607
	call.32     %r9608 <- luaK_numberK
	scast.32    %r9609 <- (32) %r9608
	push.64*    %r9603
	push.32     $1
	push.32     %r9605
	push.32     %r9609
	call.32     %r9610 <- luaK_codeABx
	load.64*    %r9611 <- 0[fs]
	push.64*    %r9611
	push.32     $1
	call        luaK_reserveregs
	br          .L2268

.L2268:
	load.64*    %r9612 <- 0[ls]
	load.32     %r9613 <- 0[base]
	load.32     %r9614 <- 0[line]
	push.64*    %r9612
	push.32     %r9613
	push.32     %r9614
	push.32     $1
	push.32     $1
	call        forbody
	br          .L2269

.L2269:
	ret


forlist:
.L2270:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[indexname]
	load.64*    %r9615 <- 0[ls]
	load.64*    %r9616 <- 48[%r9615]
	store.64*   %r9616 -> 0[fs]
	store.32    $0 -> 0[nvars]
	load.64*    %r9617 <- 0[fs]
	load.32     %r9618 <- 60[%r9617]
	store.32    %r9618 -> 0[base]
	load.64*    %r9619 <- 0[ls]
	load.64*    %r9620 <- 0[ls]
	symaddr.64* %r9621 <- <anon symbol:0x1b07f60>
	push.64*    %r9620
	push.64*    %r9621
	push.64     $15
	call.64*    %r9622 <- luaX_newstring
	load.32     %r9623 <- 0[nvars]
	add.32      %r9624 <- %r9623, $1
	store.32    %r9624 -> 0[nvars]
	push.64*    %r9619
	push.64*    %r9622
	push.32     %r9623
	call        new_localvar
	load.64*    %r9625 <- 0[ls]
	load.64*    %r9626 <- 0[ls]
	symaddr.64* %r9627 <- <anon symbol:0x1b10528>
	push.64*    %r9626
	push.64*    %r9627
	push.64     $11
	call.64*    %r9628 <- luaX_newstring
	load.32     %r9629 <- 0[nvars]
	add.32      %r9630 <- %r9629, $1
	store.32    %r9630 -> 0[nvars]
	push.64*    %r9625
	push.64*    %r9628
	push.32     %r9629
	call        new_localvar
	load.64*    %r9631 <- 0[ls]
	load.64*    %r9632 <- 0[ls]
	symaddr.64* %r9633 <- <anon symbol:0x1b10a98>
	push.64*    %r9632
	push.64*    %r9633
	push.64     $13
	call.64*    %r9634 <- luaX_newstring
	load.32     %r9635 <- 0[nvars]
	add.32      %r9636 <- %r9635, $1
	store.32    %r9636 -> 0[nvars]
	push.64*    %r9631
	push.64*    %r9634
	push.32     %r9635
	call        new_localvar
	load.64*    %r9637 <- 0[ls]
	load.64*    %r9638 <- 0[indexname]
	load.32     %r9639 <- 0[nvars]
	add.32      %r9640 <- %r9639, $1
	store.32    %r9640 -> 0[nvars]
	push.64*    %r9637
	push.64*    %r9638
	push.32     %r9639
	call        new_localvar
	br          .L2274

.L2274:
	load.64*    %r9641 <- 0[ls]
	push.64*    %r9641
	push.32     $44
	call.32     %r9642 <- testnext
	cbr         %r9642, .L2271, .L2273

.L2271:
	load.64*    %r9643 <- 0[ls]
	load.64*    %r9644 <- 0[ls]
	push.64*    %r9644
	call.64*    %r9645 <- str_checkname
	load.32     %r9646 <- 0[nvars]
	add.32      %r9647 <- %r9646, $1
	store.32    %r9647 -> 0[nvars]
	push.64*    %r9643
	push.64*    %r9645
	push.32     %r9646
	call        new_localvar
	br          .L2272

.L2272:
	br          .L2274

.L2273:
	load.64*    %r9648 <- 0[ls]
	push.64*    %r9648
	push.32     $267
	call        checknext
	load.64*    %r9649 <- 0[ls]
	load.32     %r9650 <- 4[%r9649]
	store.32    %r9650 -> 0[line]
	load.64*    %r9651 <- 0[ls]
	load.64*    %r9652 <- 0[ls]
	symaddr.64* %r9653 <- e
	push.64*    %r9652
	push.64*    %r9653
	call.32     %r9654 <- explist1
	symaddr.64* %r9655 <- e
	push.64*    %r9651
	push.32     $3
	push.32     %r9654
	push.64*    %r9655
	call        adjust_assign
	load.64*    %r9656 <- 0[fs]
	push.64*    %r9656
	push.32     $3
	call        luaK_checkstack
	load.64*    %r9657 <- 0[ls]
	load.32     %r9658 <- 0[base]
	load.32     %r9659 <- 0[line]
	load.32     %r9660 <- 0[nvars]
	sub.32      %r9661 <- %r9660, $3
	push.64*    %r9657
	push.32     %r9658
	push.32     %r9659
	push.32     %r9661
	push.32     $0
	call        forbody
	br          .L2275

.L2275:
	ret


forstat:
.L2276:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9662 <- 0[ls]
	load.64*    %r9663 <- 48[%r9662]
	store.64*   %r9663 -> 0[fs]
	load.64*    %r9664 <- 0[fs]
	symaddr.64* %r9665 <- bl
	push.64*    %r9664
	push.64*    %r9665
	push.8      $1
	call        enterblock
	load.64*    %r9666 <- 0[ls]
	push.64*    %r9666
	call        luaX_next
	load.64*    %r9667 <- 0[ls]
	push.64*    %r9667
	call.64*    %r9668 <- str_checkname
	store.64*   %r9668 -> 0[varname]
	load.64*    %r9669 <- 0[ls]
	load.32     %r9670 <- 16[%r9669]
	switch.32   %r9670, 44 -> .L2279, 61 -> .L2278, 267 -> .L2280, default -> .L2281

.L2278:
	load.64*    %r9671 <- 0[ls]
	load.64*    %r9672 <- 0[varname]
	load.32     %r9673 <- 0[line]
	push.64*    %r9671
	push.64*    %r9672
	push.32     %r9673
	call        fornum
	br          .L2277

.L2279:
	br          .L2280

.L2280:
	load.64*    %r9674 <- 0[ls]
	load.64*    %r9675 <- 0[varname]
	push.64*    %r9674
	push.64*    %r9675
	call        forlist
	br          .L2277

.L2281:
	load.64*    %r9676 <- 0[ls]
	symaddr.64* %r9677 <- <anon symbol:0x1b11ae8>
	push.64*    %r9676
	push.64*    %r9677
	call        luaX_syntaxerror
	br          .L2277

.L2277:
	load.64*    %r9678 <- 0[ls]
	load.32     %r9679 <- 0[line]
	push.64*    %r9678
	push.32     $262
	push.32     $264
	push.32     %r9679
	call        check_match
	load.64*    %r9680 <- 0[fs]
	push.64*    %r9680
	call        leaveblock
	br          .L2282

.L2282:
	ret


test_then_block:
.L2283:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9681 <- 0[ls]
	push.64*    %r9681
	call        luaX_next
	load.64*    %r9682 <- 0[ls]
	push.64*    %r9682
	call.32     %r9683 <- cond
	store.32    %r9683 -> 0[condexit]
	load.64*    %r9684 <- 0[ls]
	push.64*    %r9684
	push.32     $274
	call        checknext
	load.64*    %r9685 <- 0[ls]
	push.64*    %r9685
	call        block
	load.32     %r9686 <- 0[condexit]
	phisrc.32   %phi387(return) <- %r9686
	br          .L2284

.L2284:
	phi.32      %r9687 <- %phi387(return)
	ret.32      %r9686


ifstat:
.L2285:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9688 <- 0[ls]
	load.64*    %r9689 <- 48[%r9688]
	store.64*   %r9689 -> 0[fs]
	store.32    $0xffffffff -> 0[escapelist]
	load.64*    %r9690 <- 0[ls]
	push.64*    %r9690
	call.32     %r9691 <- test_then_block
	store.32    %r9691 -> 0[flist]
	br          .L2289

.L2289:
	load.64*    %r9692 <- 0[ls]
	load.32     %r9693 <- 16[%r9692]
	seteq.32    %r9694 <- %r9693, $261
	cbr         %r9694, .L2286, .L2288

.L2286:
	load.64*    %r9695 <- 0[fs]
	symaddr.64* %r9696 <- escapelist
	load.64*    %r9697 <- 0[fs]
	push.64*    %r9697
	call.32     %r9698 <- luaK_jump
	push.64*    %r9695
	push.64*    %r9696
	push.32     %r9698
	call        luaK_concat
	load.64*    %r9699 <- 0[fs]
	load.32     %r9700 <- 0[flist]
	push.64*    %r9699
	push.32     %r9700
	call        luaK_patchtohere
	load.64*    %r9701 <- 0[ls]
	push.64*    %r9701
	call.32     %r9702 <- test_then_block
	store.32    %r9702 -> 0[flist]
	br          .L2287

.L2287:
	br          .L2289

.L2288:
	load.64*    %r9703 <- 0[ls]
	load.32     %r9704 <- 16[%r9703]
	seteq.32    %r9705 <- %r9704, $260
	cbr         %r9705, .L2290, .L2291

.L2290:
	load.64*    %r9706 <- 0[fs]
	symaddr.64* %r9707 <- escapelist
	load.64*    %r9708 <- 0[fs]
	push.64*    %r9708
	call.32     %r9709 <- luaK_jump
	push.64*    %r9706
	push.64*    %r9707
	push.32     %r9709
	call        luaK_concat
	load.64*    %r9710 <- 0[fs]
	load.32     %r9711 <- 0[flist]
	push.64*    %r9710
	push.32     %r9711
	call        luaK_patchtohere
	load.64*    %r9712 <- 0[ls]
	push.64*    %r9712
	call        luaX_next
	load.64*    %r9713 <- 0[ls]
	push.64*    %r9713
	call        block
	br          .L2292

.L2291:
	load.64*    %r9714 <- 0[fs]
	symaddr.64* %r9715 <- escapelist
	load.32     %r9716 <- 0[flist]
	push.64*    %r9714
	push.64*    %r9715
	push.32     %r9716
	call        luaK_concat
	br          .L2292

.L2292:
	load.64*    %r9717 <- 0[fs]
	load.32     %r9718 <- 0[escapelist]
	push.64*    %r9717
	push.32     %r9718
	call        luaK_patchtohere
	load.64*    %r9719 <- 0[ls]
	load.32     %r9720 <- 0[line]
	push.64*    %r9719
	push.32     $262
	push.32     $266
	push.32     %r9720
	call        check_match
	br          .L2293

.L2293:
	ret


localfunc:
.L2294:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9721 <- 0[ls]
	load.64*    %r9722 <- 48[%r9721]
	store.64*   %r9722 -> 0[fs]
	load.64*    %r9723 <- 0[ls]
	load.64*    %r9724 <- 0[ls]
	push.64*    %r9724
	call.64*    %r9725 <- str_checkname
	push.64*    %r9723
	push.64*    %r9725
	push.32     $0
	call        new_localvar
	symaddr.64* %r9726 <- v
	load.64*    %r9727 <- 0[fs]
	load.32     %r9728 <- 60[%r9727]
	push.64*    %r9726
	push.32     $6
	push.32     %r9728
	call        init_exp
	load.64*    %r9729 <- 0[fs]
	push.64*    %r9729
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r9730 <- 0[ls]
	push.64*    %r9730
	push.32     $1
	call        adjustlocalvars
	load.64*    %r9731 <- 0[ls]
	symaddr.64* %r9732 <- b
	load.64*    %r9733 <- 0[ls]
	load.32     %r9734 <- 4[%r9733]
	push.64*    %r9731
	push.64*    %r9732
	push.32     $0
	push.32     %r9734
	call        body
	load.64*    %r9735 <- 0[fs]
	symaddr.64* %r9736 <- v
	symaddr.64* %r9737 <- b
	push.64*    %r9735
	push.64*    %r9736
	push.64*    %r9737
	call        luaK_storevar
	load.64*    %r9738 <- 0[fs]
	load.32     %r9739 <- 48[%r9738]
	load.64*    %r9740 <- 0[fs]
	load.64*    %r9741 <- 0[%r9740]
	load.64*    %r9742 <- 48[%r9741]
	load.64*    %r9743 <- 0[fs]
	add.64*     %r9744 <- %r9743, $196
	load.64*    %r9745 <- 0[fs]
	load.8      %r9746 <- 74[%r9745]
	cast.32     %r9747 <- (8) %r9746
	sub.32      %r9748 <- %r9747, $1
	scast.64    %r9749 <- (32) %r9748
	muls.64     %r9750 <- %r9749, $2
	add.64*     %r9751 <- %r9744, %r9750
	load.16     %r9752 <- 0[%r9751]
	cast.64     %r9753 <- (16) %r9752
	muls.64     %r9754 <- %r9753, $16
	add.64*     %r9755 <- %r9742, %r9754
	store.32    %r9739 -> 8[%r9755]
	br          .L2295

.L2295:
	ret


localstat:
.L2296:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[nvars]
	br          .L2297

.L2297:
	load.64*    %r9756 <- 0[ls]
	load.64*    %r9757 <- 0[ls]
	push.64*    %r9757
	call.64*    %r9758 <- str_checkname
	load.32     %r9759 <- 0[nvars]
	add.32      %r9760 <- %r9759, $1
	store.32    %r9760 -> 0[nvars]
	push.64*    %r9756
	push.64*    %r9758
	push.32     %r9759
	call        new_localvar
	br          .L2298

.L2298:
	load.64*    %r9761 <- 0[ls]
	push.64*    %r9761
	push.32     $44
	call.32     %r9762 <- testnext
	cbr         %r9762, .L2297, .L2299

.L2299:
	load.64*    %r9763 <- 0[ls]
	push.64*    %r9763
	push.32     $61
	call.32     %r9764 <- testnext
	cbr         %r9764, .L2300, .L2301

.L2300:
	load.64*    %r9765 <- 0[ls]
	symaddr.64* %r9766 <- e
	push.64*    %r9765
	push.64*    %r9766
	call.32     %r9767 <- explist1
	store.32    %r9767 -> 0[nexps]
	br          .L2302

.L2301:
	store.32    $0 -> 0[e]
	store.32    $0 -> 0[nexps]
	br          .L2302

.L2302:
	load.64*    %r9768 <- 0[ls]
	load.32     %r9769 <- 0[nvars]
	load.32     %r9770 <- 0[nexps]
	symaddr.64* %r9771 <- e
	push.64*    %r9768
	push.32     %r9769
	push.32     %r9770
	push.64*    %r9771
	call        adjust_assign
	load.64*    %r9772 <- 0[ls]
	load.32     %r9773 <- 0[nvars]
	push.64*    %r9772
	push.32     %r9773
	call        adjustlocalvars
	br          .L2303

.L2303:
	ret


funcname:
.L2304:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    $0 -> 0[needself]
	load.64*    %r9774 <- 0[ls]
	load.64*    %r9775 <- 0[v]
	push.64*    %r9774
	push.64*    %r9775
	call        singlevar
	br          .L2308

.L2308:
	load.64*    %r9776 <- 0[ls]
	load.32     %r9777 <- 16[%r9776]
	seteq.32    %r9778 <- %r9777, $46
	cbr         %r9778, .L2305, .L2307

.L2305:
	load.64*    %r9779 <- 0[ls]
	load.64*    %r9780 <- 0[v]
	push.64*    %r9779
	push.64*    %r9780
	call        field
	br          .L2306

.L2306:
	br          .L2308

.L2307:
	load.64*    %r9781 <- 0[ls]
	load.32     %r9782 <- 16[%r9781]
	seteq.32    %r9783 <- %r9782, $58
	cbr         %r9783, .L2309, .L2310

.L2309:
	store.32    $1 -> 0[needself]
	load.64*    %r9784 <- 0[ls]
	load.64*    %r9785 <- 0[v]
	push.64*    %r9784
	push.64*    %r9785
	call        field
	br          .L2310

.L2310:
	load.32     %r9786 <- 0[needself]
	phisrc.32   %phi388(return) <- %r9786
	br          .L2311

.L2311:
	phi.32      %r9787 <- %phi388(return)
	ret.32      %r9786


funcstat:
.L2312:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9788 <- 0[ls]
	push.64*    %r9788
	call        luaX_next
	load.64*    %r9789 <- 0[ls]
	symaddr.64* %r9790 <- v
	push.64*    %r9789
	push.64*    %r9790
	call.32     %r9791 <- funcname
	store.32    %r9791 -> 0[needself]
	load.64*    %r9792 <- 0[ls]
	symaddr.64* %r9793 <- b
	load.32     %r9794 <- 0[needself]
	load.32     %r9795 <- 0[line]
	push.64*    %r9792
	push.64*    %r9793
	push.32     %r9794
	push.32     %r9795
	call        body
	load.64*    %r9796 <- 0[ls]
	load.64*    %r9797 <- 48[%r9796]
	symaddr.64* %r9798 <- v
	symaddr.64* %r9799 <- b
	push.64*    %r9797
	push.64*    %r9798
	push.64*    %r9799
	call        luaK_storevar
	load.64*    %r9800 <- 0[ls]
	load.64*    %r9801 <- 48[%r9800]
	load.32     %r9802 <- 0[line]
	push.64*    %r9801
	push.32     %r9802
	call        luaK_fixline
	br          .L2313

.L2313:
	ret


exprstat:
.L2314:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9803 <- 0[ls]
	load.64*    %r9804 <- 48[%r9803]
	store.64*   %r9804 -> 0[fs]
	load.64*    %r9805 <- 0[ls]
	symaddr.64* %r9806 <- v
	add.64*     %r9807 <- %r9806, $8
	push.64*    %r9805
	push.64*    %r9807
	call        primaryexp
	load.32     %r9808 <- 8[v]
	scast.32    %r9809 <- (32) %r9808
	seteq.32    %r9810 <- %r9809, $13
	cbr         %r9810, .L2315, .L2316

.L2315:
	load.64*    %r9811 <- 0[fs]
	load.64*    %r9812 <- 0[%r9811]
	load.64*    %r9813 <- 24[%r9812]
	load.32     %r9814 <- 16[v]
	scast.64    %r9815 <- (32) %r9814
	muls.64     %r9816 <- %r9815, $4
	add.64*     %r9817 <- %r9813, %r9816
	load.32     %r9818 <- 0[%r9817]
	and.32      %r9819 <- %r9818, $0xff803fff
	or.32       %r9820 <- %r9819, $0x4000
	load.64*    %r9821 <- 0[fs]
	load.64*    %r9822 <- 0[%r9821]
	load.64*    %r9823 <- 24[%r9822]
	load.32     %r9824 <- 16[v]
	scast.64    %r9825 <- (32) %r9824
	muls.64     %r9826 <- %r9825, $4
	add.64*     %r9827 <- %r9823, %r9826
	store.32    %r9820 -> 0[%r9827]
	br          .L2317

.L2316:
	store.64*   $0 -> 0[v]
	load.64*    %r9828 <- 0[ls]
	symaddr.64* %r9829 <- v
	push.64*    %r9828
	push.64*    %r9829
	push.32     $1
	call        assignment
	br          .L2317

.L2317:
	ret


retstat:
.L2318:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9830 <- 0[ls]
	load.64*    %r9831 <- 48[%r9830]
	store.64*   %r9831 -> 0[fs]
	load.64*    %r9832 <- 0[ls]
	push.64*    %r9832
	call        luaX_next
	load.64*    %r9833 <- 0[ls]
	load.32     %r9834 <- 16[%r9833]
	push.32     %r9834
	call.32     %r9835 <- block_follow
	cbr         %r9835, .L2319, .L2321

.L2321:
	load.64*    %r9836 <- 0[ls]
	load.32     %r9837 <- 16[%r9836]
	seteq.32    %r9838 <- %r9837, $59
	cbr         %r9838, .L2319, .L2320

.L2319:
	store.32    $0 -> 0[nret]
	store.32    $0 -> 0[first]
	br          .L2322

.L2320:
	load.64*    %r9839 <- 0[ls]
	symaddr.64* %r9840 <- e
	push.64*    %r9839
	push.64*    %r9840
	call.32     %r9841 <- explist1
	store.32    %r9841 -> 0[nret]
	load.32     %r9842 <- 0[e]
	scast.32    %r9843 <- (32) %r9842
	seteq.32    %r9844 <- %r9843, $13
	setne.1     %r9845 <- %r9844, $0
	load.32     %r9846 <- 0[e]
	scast.32    %r9847 <- (32) %r9846
	seteq.32    %r9848 <- %r9847, $14
	setne.1     %r9849 <- %r9848, $0
	or-bool.1   %r9850 <- %r9845, %r9849
	cast.32     %r9851 <- (1) %r9850
	cbr         %r9851, .L2323, .L2324

.L2323:
	load.64*    %r9852 <- 0[fs]
	symaddr.64* %r9853 <- e
	push.64*    %r9852
	push.64*    %r9853
	push.32     $0xffffffff
	call        luaK_setreturns
	load.32     %r9854 <- 0[e]
	scast.32    %r9855 <- (32) %r9854
	seteq.32    %r9856 <- %r9855, $13
	setne.1     %r9857 <- %r9856, $0
	load.32     %r9858 <- 0[nret]
	seteq.32    %r9859 <- %r9858, $1
	setne.1     %r9860 <- %r9859, $0
	and-bool.1  %r9861 <- %r9857, %r9860
	cast.32     %r9862 <- (1) %r9861
	cbr         %r9862, .L2325, .L2326

.L2325:
	load.64*    %r9863 <- 0[fs]
	load.64*    %r9864 <- 0[%r9863]
	load.64*    %r9865 <- 24[%r9864]
	load.32     %r9866 <- 8[e]
	scast.64    %r9867 <- (32) %r9866
	muls.64     %r9868 <- %r9867, $4
	add.64*     %r9869 <- %r9865, %r9868
	load.32     %r9870 <- 0[%r9869]
	and.32      %r9871 <- %r9870, $0xffffffc0
	or.32       %r9872 <- %r9871, $29
	load.64*    %r9873 <- 0[fs]
	load.64*    %r9874 <- 0[%r9873]
	load.64*    %r9875 <- 24[%r9874]
	load.32     %r9876 <- 8[e]
	scast.64    %r9877 <- (32) %r9876
	muls.64     %r9878 <- %r9877, $4
	add.64*     %r9879 <- %r9875, %r9878
	store.32    %r9872 -> 0[%r9879]
	br          .L2326

.L2326:
	load.64*    %r9880 <- 0[fs]
	load.8      %r9881 <- 74[%r9880]
	cast.32     %r9882 <- (8) %r9881
	store.32    %r9882 -> 0[first]
	store.32    $0xffffffff -> 0[nret]
	br          .L2327

.L2324:
	load.32     %r9883 <- 0[nret]
	seteq.32    %r9884 <- %r9883, $1
	cbr         %r9884, .L2328, .L2329

.L2328:
	load.64*    %r9885 <- 0[fs]
	symaddr.64* %r9886 <- e
	push.64*    %r9885
	push.64*    %r9886
	call.32     %r9887 <- luaK_exp2anyreg
	store.32    %r9887 -> 0[first]
	br          .L2330

.L2329:
	load.64*    %r9888 <- 0[fs]
	symaddr.64* %r9889 <- e
	push.64*    %r9888
	push.64*    %r9889
	call        luaK_exp2nextreg
	load.64*    %r9890 <- 0[fs]
	load.8      %r9891 <- 74[%r9890]
	cast.32     %r9892 <- (8) %r9891
	store.32    %r9892 -> 0[first]
	br          .L2330

.L2330:
	br          .L2327

.L2327:
	br          .L2322

.L2322:
	load.64*    %r9893 <- 0[fs]
	load.32     %r9894 <- 0[first]
	load.32     %r9895 <- 0[nret]
	push.64*    %r9893
	push.32     %r9894
	push.32     %r9895
	call        luaK_ret
	br          .L2331

.L2331:
	ret


statement:
.L2332:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9896 <- 0[ls]
	load.32     %r9897 <- 4[%r9896]
	store.32    %r9897 -> 0[line]
	load.64*    %r9898 <- 0[ls]
	load.32     %r9899 <- 16[%r9898]
	switch.32   %r9899, 258 -> .L2342, 259 -> .L2336, 264 -> .L2337, 265 -> .L2339, 266 -> .L2334, 268 -> .L2340, 272 -> .L2338, 273 -> .L2341, 277 -> .L2335, default -> .L2343

.L2334:
	load.64*    %r9900 <- 0[ls]
	load.32     %r9901 <- 0[line]
	push.64*    %r9900
	push.32     %r9901
	call        ifstat
	phisrc.32   %phi389(return) <- $0
	br          .L2344

.L2335:
	load.64*    %r9903 <- 0[ls]
	load.32     %r9904 <- 0[line]
	push.64*    %r9903
	push.32     %r9904
	call        whilestat
	phisrc.32   %phi390(return) <- $0
	br          .L2344

.L2336:
	load.64*    %r9905 <- 0[ls]
	push.64*    %r9905
	call        luaX_next
	load.64*    %r9906 <- 0[ls]
	push.64*    %r9906
	call        block
	load.64*    %r9907 <- 0[ls]
	load.32     %r9908 <- 0[line]
	push.64*    %r9907
	push.32     $262
	push.32     $259
	push.32     %r9908
	call        check_match
	phisrc.32   %phi391(return) <- $0
	br          .L2344

.L2337:
	load.64*    %r9909 <- 0[ls]
	load.32     %r9910 <- 0[line]
	push.64*    %r9909
	push.32     %r9910
	call        forstat
	phisrc.32   %phi392(return) <- $0
	br          .L2344

.L2338:
	load.64*    %r9911 <- 0[ls]
	load.32     %r9912 <- 0[line]
	push.64*    %r9911
	push.32     %r9912
	call        repeatstat
	phisrc.32   %phi393(return) <- $0
	br          .L2344

.L2339:
	load.64*    %r9913 <- 0[ls]
	load.32     %r9914 <- 0[line]
	push.64*    %r9913
	push.32     %r9914
	call        funcstat
	phisrc.32   %phi394(return) <- $0
	br          .L2344

.L2340:
	load.64*    %r9915 <- 0[ls]
	push.64*    %r9915
	call        luaX_next
	load.64*    %r9916 <- 0[ls]
	push.64*    %r9916
	push.32     $265
	call.32     %r9917 <- testnext
	cbr         %r9917, .L2345, .L2346

.L2345:
	load.64*    %r9918 <- 0[ls]
	push.64*    %r9918
	call        localfunc
	br          .L2347

.L2346:
	load.64*    %r9919 <- 0[ls]
	push.64*    %r9919
	call        localstat
	br          .L2347

.L2347:
	phisrc.32   %phi395(return) <- $0
	br          .L2344

.L2341:
	load.64*    %r9920 <- 0[ls]
	push.64*    %r9920
	call        retstat
	phisrc.32   %phi396(return) <- $1
	br          .L2344

.L2342:
	load.64*    %r9921 <- 0[ls]
	push.64*    %r9921
	call        luaX_next
	load.64*    %r9922 <- 0[ls]
	push.64*    %r9922
	call        breakstat
	phisrc.32   %phi397(return) <- $1
	br          .L2344

.L2343:
	load.64*    %r9923 <- 0[ls]
	push.64*    %r9923
	call        exprstat
	phisrc.32   %phi398(return) <- $0
	br          .L2344

.L2344:
	phi.32      %r9902 <- %phi389(return), %phi390(return), %phi391(return), %phi392(return), %phi393(return), %phi394(return), %phi395(return), %phi396(return), %phi397(return), %phi398(return)
	ret.32      %r9902


chunk:
.L2348:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[islast]
	load.64*    %r9924 <- 0[ls]
	push.64*    %r9924
	call        enterlevel
	br          .L2352

.L2352:
	load.32     %r9925 <- 0[islast]
	cbr         %r9925, .L2351, .L2353

.L2353:
	load.64*    %r9926 <- 0[ls]
	load.32     %r9927 <- 16[%r9926]
	push.32     %r9927
	call.32     %r9928 <- block_follow
	cbr         %r9928, .L2351, .L2349

.L2349:
	load.64*    %r9929 <- 0[ls]
	push.64*    %r9929
	call.32     %r9930 <- statement
	store.32    %r9930 -> 0[islast]
	load.64*    %r9931 <- 0[ls]
	push.64*    %r9931
	push.32     $59
	call.32     %r9932 <- testnext
	load.64*    %r9933 <- 0[ls]
	load.64*    %r9934 <- 48[%r9933]
	load.8      %r9935 <- 74[%r9934]
	cast.32     %r9936 <- (8) %r9935
	load.64*    %r9937 <- 0[ls]
	load.64*    %r9938 <- 48[%r9937]
	store.32    %r9936 -> 60[%r9938]
	br          .L2350

.L2350:
	br          .L2352

.L2351:
	load.64*    %r9939 <- 0[ls]
	load.64*    %r9940 <- 56[%r9939]
	load.16     %r9941 <- 96[%r9940]
	sub.16      %r9942 <- %r9941, $1
	store.16    %r9942 -> 96[%r9940]
	br          .L2354

.L2354:
	ret


luaV_tonumber:
.L2355:
	<entry-point>
	store.64*   %arg1 -> 0[obj]
	store.64*   %arg2 -> 0[n]
	load.64*    %r9943 <- 0[obj]
	load.32     %r9944 <- 8[%r9943]
	scast.32    %r9945 <- (32) %r9944
	seteq.32    %r9946 <- %r9945, $3
	cbr         %r9946, .L2356, .L2357

.L2356:
	load.64*    %r9947 <- 0[obj]
	phisrc.64*  %phi399(return) <- %r9947
	br          .L2358

.L2357:
	load.64*    %r9949 <- 0[obj]
	load.32     %r9950 <- 8[%r9949]
	scast.32    %r9951 <- (32) %r9950
	seteq.32    %r9952 <- %r9951, $4
	cbr         %r9952, .L2361, .L2360

.L2361:
	load.64*    %r9953 <- 0[obj]
	load.64*    %r9954 <- 0[%r9953]
	add.64*     %r9955 <- %r9954, $0
	add.64*     %r9956 <- %r9955, $24
	ptrcast.64* %r9957 <- (64) %r9956
	symaddr.64* %r9958 <- num
	push.64*    %r9957
	push.64*    %r9958
	call.32     %r9959 <- luaO_str2d
	cbr         %r9959, .L2359, .L2360

.L2359:
	load.64*    %r9960 <- 0[n]
	store.64*   %r9960 -> 0[i_o]
	load.f64    %r9961 <- 0[num]
	load.64*    %r9962 <- 0[i_o]
	store.f64   %r9961 -> 0[%r9962]
	load.64*    %r9963 <- 0[i_o]
	store.32    $3 -> 8[%r9963]
	load.64*    %r9964 <- 0[n]
	phisrc.64*  %phi400(return) <- %r9964
	br          .L2358

.L2360:
	phisrc.64*  %phi401(return) <- $0
	br          .L2358

.L2358:
	phi.64*     %r9948 <- %phi399(return), %phi400(return), %phi401(return)
	ret.64*     %r9948


luaV_tostring:
.L2363:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[obj]
	load.64*    %r9965 <- 0[obj]
	load.32     %r9966 <- 8[%r9965]
	seteq.32    %r9967 <- %r9966, $3
	cbr         %r9967, .L2365, .L2364

.L2364:
	phisrc.32   %phi402(return) <- $0
	br          .L2366

.L2365:
	load.64*    %r9969 <- 0[obj]
	load.f64    %r9970 <- 0[%r9969]
	store.f64   %r9970 -> 0[n]
	symaddr.64* %r9971 <- s
	symaddr.64* %r9972 <- <anon symbol:0x1a48f60>
	load.f64    %r9973 <- 0[n]
	push.64*    %r9971
	push.64*    %r9972
	push.f64    %r9973
	call.32     %r9974 <- sprintf
	load.64*    %r9975 <- 0[obj]
	store.64*   %r9975 -> 0[i_o]
	load.64*    %r9976 <- 0[L]
	symaddr.64* %r9977 <- s
	symaddr.64* %r9978 <- s
	push.64*    %r9978
	call.64     %r9979 <- strlen
	push.64*    %r9976
	push.64*    %r9977
	push.64     %r9979
	call.64*    %r9980 <- luaS_newlstr
	ptrcast.64* %r9981 <- (64) %r9980
	load.64*    %r9982 <- 0[i_o]
	store.64*   %r9981 -> 0[%r9982]
	load.64*    %r9983 <- 0[i_o]
	store.32    $4 -> 8[%r9983]
	phisrc.32   %phi403(return) <- $1
	br          .L2366

.L2366:
	phi.32      %r9968 <- %phi402(return), %phi403(return)
	ret.32      %r9968


callTMres:
.L2368:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[res]
	store.64*   %arg3 -> 0[f]
	store.64*   %arg4 -> 0[p1]
	store.64*   %arg5 -> 0[p2]
	load.64*    %r9984 <- 0[res]
	ptrcast.64* %r9985 <- (64) %r9984
	load.64*    %r9986 <- 0[L]
	load.64*    %r9987 <- 64[%r9986]
	ptrcast.64* %r9988 <- (64) %r9987
	sub.64      %r9989 <- %r9985, %r9988
	store.64    %r9989 -> 0[result]
	load.64*    %r9990 <- 0[f]
	store.64*   %r9990 -> 0[o2]
	load.64*    %r9991 <- 0[L]
	load.64*    %r9992 <- 16[%r9991]
	store.64*   %r9992 -> 0[o1]
	load.64*    %r9993 <- 0[o2]
	load.f64    %r9994 <- 0[%r9993]
	fpcast.f64  %r9995 <- (64) %r9994
	load.64*    %r9996 <- 0[o1]
	store.f64   %r9995 -> 0[%r9996]
	load.64*    %r9997 <- 0[o2]
	load.32     %r9998 <- 8[%r9997]
	scast.32    %r9999 <- (32) %r9998
	load.64*    %r10000 <- 0[o1]
	store.32    %r9999 -> 8[%r10000]
	load.64*    %r10001 <- 0[p1]
	store.64*   %r10001 -> 0[o2]
	load.64*    %r10002 <- 0[L]
	load.64*    %r10003 <- 16[%r10002]
	add.64*     %r10004 <- %r10003, $16
	store.64*   %r10004 -> 0[o1]
	load.64*    %r10005 <- 0[o2]
	load.f64    %r10006 <- 0[%r10005]
	fpcast.f64  %r10007 <- (64) %r10006
	load.64*    %r10008 <- 0[o1]
	store.f64   %r10007 -> 0[%r10008]
	load.64*    %r10009 <- 0[o2]
	load.32     %r10010 <- 8[%r10009]
	scast.32    %r10011 <- (32) %r10010
	load.64*    %r10012 <- 0[o1]
	store.32    %r10011 -> 8[%r10012]
	load.64*    %r10013 <- 0[p2]
	store.64*   %r10013 -> 0[o2]
	load.64*    %r10014 <- 0[L]
	load.64*    %r10015 <- 16[%r10014]
	add.64*     %r10016 <- %r10015, $32
	store.64*   %r10016 -> 0[o1]
	load.64*    %r10017 <- 0[o2]
	load.f64    %r10018 <- 0[%r10017]
	fpcast.f64  %r10019 <- (64) %r10018
	load.64*    %r10020 <- 0[o1]
	store.f64   %r10019 -> 0[%r10020]
	load.64*    %r10021 <- 0[o2]
	load.32     %r10022 <- 8[%r10021]
	scast.32    %r10023 <- (32) %r10022
	load.64*    %r10024 <- 0[o1]
	store.32    %r10023 -> 8[%r10024]
	load.64*    %r10025 <- 0[L]
	load.64*    %r10026 <- 56[%r10025]
	ptrcast.64* %r10027 <- (64) %r10026
	load.64*    %r10028 <- 0[L]
	load.64*    %r10029 <- 16[%r10028]
	ptrcast.64* %r10030 <- (64) %r10029
	sub.64      %r10031 <- %r10027, %r10030
	setle.32    %r10032 <- %r10031, $48
	cbr         %r10032, .L2369, .L2370

.L2369:
	load.64*    %r10033 <- 0[L]
	push.64*    %r10033
	push.32     $3
	call        luaD_growstack
	br          .L2371

.L2370:
	br          .L2371

.L2371:
	load.64*    %r10034 <- 0[L]
	load.64*    %r10035 <- 16[%r10034]
	cast.64     %r10036 <- (64) %r10035
	add.64      %r10037 <- %r10036, $48
	ptrcast.64* %r10038 <- (64) %r10037
	store.64*   %r10038 -> 16[%r10034]
	load.64*    %r10039 <- 0[L]
	load.64*    %r10040 <- 0[L]
	load.64*    %r10041 <- 16[%r10040]
	sub.64*     %r10042 <- %r10041, $48
	push.64*    %r10039
	push.64*    %r10042
	push.32     $1
	call        luaD_call
	load.64*    %r10043 <- 0[L]
	load.64*    %r10044 <- 64[%r10043]
	ptrcast.64* %r10045 <- (64) %r10044
	load.64     %r10046 <- 0[result]
	add.64*     %r10047 <- %r10045, %r10046
	ptrcast.64* %r10048 <- (64) %r10047
	store.64*   %r10048 -> 0[res]
	load.64*    %r10049 <- 0[L]
	load.64*    %r10050 <- 16[%r10049]
	sub.64*     %r10051 <- %r10050, $16
	store.64*   %r10051 -> 16[%r10049]
	load.64*    %r10052 <- 0[L]
	load.64*    %r10053 <- 16[%r10052]
	store.64*   %r10053 -> 0[o2]
	load.64*    %r10054 <- 0[res]
	store.64*   %r10054 -> 0[o1]
	load.64*    %r10055 <- 0[o2]
	load.f64    %r10056 <- 0[%r10055]
	fpcast.f64  %r10057 <- (64) %r10056
	load.64*    %r10058 <- 0[o1]
	store.f64   %r10057 -> 0[%r10058]
	load.64*    %r10059 <- 0[o2]
	load.32     %r10060 <- 8[%r10059]
	scast.32    %r10061 <- (32) %r10060
	load.64*    %r10062 <- 0[o1]
	store.32    %r10061 -> 8[%r10062]
	br          .L2372

.L2372:
	ret


callTM:
.L2373:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64*   %arg3 -> 0[p1]
	store.64*   %arg4 -> 0[p2]
	store.64*   %arg5 -> 0[p3]
	load.64*    %r10063 <- 0[f]
	store.64*   %r10063 -> 0[o2]
	load.64*    %r10064 <- 0[L]
	load.64*    %r10065 <- 16[%r10064]
	store.64*   %r10065 -> 0[o1]
	load.64*    %r10066 <- 0[o2]
	load.f64    %r10067 <- 0[%r10066]
	fpcast.f64  %r10068 <- (64) %r10067
	load.64*    %r10069 <- 0[o1]
	store.f64   %r10068 -> 0[%r10069]
	load.64*    %r10070 <- 0[o2]
	load.32     %r10071 <- 8[%r10070]
	scast.32    %r10072 <- (32) %r10071
	load.64*    %r10073 <- 0[o1]
	store.32    %r10072 -> 8[%r10073]
	load.64*    %r10074 <- 0[p1]
	store.64*   %r10074 -> 0[o2]
	load.64*    %r10075 <- 0[L]
	load.64*    %r10076 <- 16[%r10075]
	add.64*     %r10077 <- %r10076, $16
	store.64*   %r10077 -> 0[o1]
	load.64*    %r10078 <- 0[o2]
	load.f64    %r10079 <- 0[%r10078]
	fpcast.f64  %r10080 <- (64) %r10079
	load.64*    %r10081 <- 0[o1]
	store.f64   %r10080 -> 0[%r10081]
	load.64*    %r10082 <- 0[o2]
	load.32     %r10083 <- 8[%r10082]
	scast.32    %r10084 <- (32) %r10083
	load.64*    %r10085 <- 0[o1]
	store.32    %r10084 -> 8[%r10085]
	load.64*    %r10086 <- 0[p2]
	store.64*   %r10086 -> 0[o2]
	load.64*    %r10087 <- 0[L]
	load.64*    %r10088 <- 16[%r10087]
	add.64*     %r10089 <- %r10088, $32
	store.64*   %r10089 -> 0[o1]
	load.64*    %r10090 <- 0[o2]
	load.f64    %r10091 <- 0[%r10090]
	fpcast.f64  %r10092 <- (64) %r10091
	load.64*    %r10093 <- 0[o1]
	store.f64   %r10092 -> 0[%r10093]
	load.64*    %r10094 <- 0[o2]
	load.32     %r10095 <- 8[%r10094]
	scast.32    %r10096 <- (32) %r10095
	load.64*    %r10097 <- 0[o1]
	store.32    %r10096 -> 8[%r10097]
	load.64*    %r10098 <- 0[p3]
	store.64*   %r10098 -> 0[o2]
	load.64*    %r10099 <- 0[L]
	load.64*    %r10100 <- 16[%r10099]
	add.64*     %r10101 <- %r10100, $48
	store.64*   %r10101 -> 0[o1]
	load.64*    %r10102 <- 0[o2]
	load.f64    %r10103 <- 0[%r10102]
	fpcast.f64  %r10104 <- (64) %r10103
	load.64*    %r10105 <- 0[o1]
	store.f64   %r10104 -> 0[%r10105]
	load.64*    %r10106 <- 0[o2]
	load.32     %r10107 <- 8[%r10106]
	scast.32    %r10108 <- (32) %r10107
	load.64*    %r10109 <- 0[o1]
	store.32    %r10108 -> 8[%r10109]
	load.64*    %r10110 <- 0[L]
	load.64*    %r10111 <- 56[%r10110]
	ptrcast.64* %r10112 <- (64) %r10111
	load.64*    %r10113 <- 0[L]
	load.64*    %r10114 <- 16[%r10113]
	ptrcast.64* %r10115 <- (64) %r10114
	sub.64      %r10116 <- %r10112, %r10115
	setle.32    %r10117 <- %r10116, $64
	cbr         %r10117, .L2374, .L2375

.L2374:
	load.64*    %r10118 <- 0[L]
	push.64*    %r10118
	push.32     $4
	call        luaD_growstack
	br          .L2376

.L2375:
	br          .L2376

.L2376:
	load.64*    %r10119 <- 0[L]
	load.64*    %r10120 <- 16[%r10119]
	cast.64     %r10121 <- (64) %r10120
	add.64      %r10122 <- %r10121, $64
	ptrcast.64* %r10123 <- (64) %r10122
	store.64*   %r10123 -> 16[%r10119]
	load.64*    %r10124 <- 0[L]
	load.64*    %r10125 <- 0[L]
	load.64*    %r10126 <- 16[%r10125]
	sub.64*     %r10127 <- %r10126, $64
	push.64*    %r10124
	push.64*    %r10127
	push.32     $0
	call        luaD_call
	br          .L2377

.L2377:
	ret


luaV_gettable:
.L2378:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	store.64*   %arg4 -> 0[val]
	store.32    $0 -> 0[loop]
	br          .L2382

.L2382:
	load.32     %r10128 <- 0[loop]
	setlt.32    %r10129 <- %r10128, $100
	cbr         %r10129, .L2379, .L2381

.L2379:
	load.64*    %r10130 <- 0[t]
	load.32     %r10131 <- 8[%r10130]
	scast.32    %r10132 <- (32) %r10131
	seteq.32    %r10133 <- %r10132, $5
	cbr         %r10133, .L2383, .L2384

.L2383:
	load.64*    %r10134 <- 0[t]
	load.64*    %r10135 <- 0[%r10134]
	add.64*     %r10136 <- %r10135, $0
	store.64*   %r10136 -> 0[h]
	load.64*    %r10137 <- 0[h]
	load.64*    %r10138 <- 0[key]
	push.64*    %r10137
	push.64*    %r10138
	call.64*    %r10139 <- luaH_get
	store.64*   %r10139 -> 0[res]
	load.64*    %r10140 <- 0[res]
	load.32     %r10141 <- 8[%r10140]
	scast.32    %r10142 <- (32) %r10141
	seteq.32    %r10143 <- %r10142, $0
	cbr         %r10143, .L2387, .L2385

.L2387:
	load.64*    %r10144 <- 0[h]
	load.64*    %r10145 <- 16[%r10144]
	seteq.32    %r10146 <- %r10145, $0
	cbr         %r10146, .L2388, .L2389

.L2388:
	phisrc.64*  %phi404 <- $0
	br          .L2390

.L2389:
	load.64*    %r10147 <- 0[h]
	load.64*    %r10148 <- 16[%r10147]
	load.8      %r10149 <- 10[%r10148]
	cast.32     %r10150 <- (8) %r10149
	and.32      %r10151 <- %r10150, $1
	cbr         %r10151, .L2391, .L2392

.L2391:
	phisrc.64*  %phi405 <- $0
	br          .L2393

.L2392:
	load.64*    %r10152 <- 0[h]
	load.64*    %r10153 <- 16[%r10152]
	load.64*    %r10154 <- 0[L]
	load.64*    %r10155 <- 32[%r10154]
	load.64*    %r10156 <- 296[%r10155]
	push.64*    %r10153
	push.32     $0
	push.64*    %r10156
	call.64*    %r10157 <- luaT_gettm
	phisrc.64*  %phi406 <- %r10157
	br          .L2393

.L2393:
	phi.64*     %r10158 <- %phi405, %phi406
	phisrc.64*  %phi407 <- %r10158
	br          .L2390

.L2390:
	phi.64*     %r10159 <- %phi404, %phi407
	store.64*   %r10159 -> 0[tm]
	seteq.32    %r10160 <- %r10159, $0
	cbr         %r10160, .L2385, .L2386

.L2385:
	load.64*    %r10161 <- 0[res]
	store.64*   %r10161 -> 0[o2]
	load.64*    %r10162 <- 0[val]
	store.64*   %r10162 -> 0[o1]
	load.64*    %r10163 <- 0[o2]
	load.f64    %r10164 <- 0[%r10163]
	fpcast.f64  %r10165 <- (64) %r10164
	load.64*    %r10166 <- 0[o1]
	store.f64   %r10165 -> 0[%r10166]
	load.64*    %r10167 <- 0[o2]
	load.32     %r10168 <- 8[%r10167]
	scast.32    %r10169 <- (32) %r10168
	load.64*    %r10170 <- 0[o1]
	store.32    %r10169 -> 8[%r10170]
	br          .L2394

.L2386:
	br          .L2395

.L2384:
	load.64*    %r10171 <- 0[L]
	load.64*    %r10172 <- 0[t]
	push.64*    %r10171
	push.64*    %r10172
	push.32     $0
	call.64*    %r10173 <- luaT_gettmbyobj
	store.64*   %r10173 -> 0[tm]
	load.32     %r10174 <- 8[%r10173]
	scast.32    %r10175 <- (32) %r10174
	seteq.32    %r10176 <- %r10175, $0
	cbr         %r10176, .L2396, .L2397

.L2396:
	load.64*    %r10177 <- 0[L]
	load.64*    %r10178 <- 0[t]
	symaddr.64* %r10179 <- <anon symbol:0x1b27778>
	push.64*    %r10177
	push.64*    %r10178
	push.64*    %r10179
	call        luaG_typeerror
	br          .L2397

.L2397:
	br          .L2395

.L2395:
	load.64*    %r10180 <- 0[tm]
	load.32     %r10181 <- 8[%r10180]
	scast.32    %r10182 <- (32) %r10181
	seteq.32    %r10183 <- %r10182, $6
	cbr         %r10183, .L2398, .L2399

.L2398:
	load.64*    %r10184 <- 0[L]
	load.64*    %r10185 <- 0[val]
	load.64*    %r10186 <- 0[tm]
	load.64*    %r10187 <- 0[t]
	load.64*    %r10188 <- 0[key]
	push.64*    %r10184
	push.64*    %r10185
	push.64*    %r10186
	push.64*    %r10187
	push.64*    %r10188
	call        callTMres
	br          .L2394

.L2399:
	load.64*    %r10189 <- 0[tm]
	store.64*   %r10189 -> 0[t]
	br          .L2380

.L2380:
	load.32     %r10190 <- 0[loop]
	add.32      %r10191 <- %r10190, $1
	store.32    %r10191 -> 0[loop]
	br          .L2382

.L2381:
	load.64*    %r10192 <- 0[L]
	symaddr.64* %r10193 <- <anon symbol:0x1b27ce8>
	push.64*    %r10192
	push.64*    %r10193
	call        luaG_runerror
	br          .L2394

.L2394:
	ret


luaV_settable:
.L2400:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	store.64*   %arg4 -> 0[val]
	store.32    $0 -> 0[loop]
	br          .L2404

.L2404:
	load.32     %r10194 <- 0[loop]
	setlt.32    %r10195 <- %r10194, $100
	cbr         %r10195, .L2401, .L2403

.L2401:
	load.64*    %r10196 <- 0[t]
	load.32     %r10197 <- 8[%r10196]
	scast.32    %r10198 <- (32) %r10197
	seteq.32    %r10199 <- %r10198, $5
	cbr         %r10199, .L2405, .L2406

.L2405:
	load.64*    %r10200 <- 0[t]
	load.64*    %r10201 <- 0[%r10200]
	add.64*     %r10202 <- %r10201, $0
	store.64*   %r10202 -> 0[h]
	load.64*    %r10203 <- 0[L]
	load.64*    %r10204 <- 0[h]
	load.64*    %r10205 <- 0[key]
	push.64*    %r10203
	push.64*    %r10204
	push.64*    %r10205
	call.64*    %r10206 <- luaH_set
	store.64*   %r10206 -> 0[oldval]
	load.64*    %r10207 <- 0[oldval]
	load.32     %r10208 <- 8[%r10207]
	seteq.32    %r10209 <- %r10208, $0
	cbr         %r10209, .L2409, .L2407

.L2409:
	load.64*    %r10210 <- 0[h]
	load.64*    %r10211 <- 16[%r10210]
	seteq.32    %r10212 <- %r10211, $0
	cbr         %r10212, .L2410, .L2411

.L2410:
	phisrc.64*  %phi408 <- $0
	br          .L2412

.L2411:
	load.64*    %r10213 <- 0[h]
	load.64*    %r10214 <- 16[%r10213]
	load.8      %r10215 <- 10[%r10214]
	cast.32     %r10216 <- (8) %r10215
	and.32      %r10217 <- %r10216, $2
	cbr         %r10217, .L2413, .L2414

.L2413:
	phisrc.64*  %phi409 <- $0
	br          .L2415

.L2414:
	load.64*    %r10218 <- 0[h]
	load.64*    %r10219 <- 16[%r10218]
	load.64*    %r10220 <- 0[L]
	load.64*    %r10221 <- 32[%r10220]
	load.64*    %r10222 <- 304[%r10221]
	push.64*    %r10219
	push.32     $1
	push.64*    %r10222
	call.64*    %r10223 <- luaT_gettm
	phisrc.64*  %phi410 <- %r10223
	br          .L2415

.L2415:
	phi.64*     %r10224 <- %phi409, %phi410
	phisrc.64*  %phi411 <- %r10224
	br          .L2412

.L2412:
	phi.64*     %r10225 <- %phi408, %phi411
	store.64*   %r10225 -> 0[tm]
	seteq.32    %r10226 <- %r10225, $0
	cbr         %r10226, .L2407, .L2408

.L2407:
	load.64*    %r10227 <- 0[val]
	store.64*   %r10227 -> 0[o2]
	load.64*    %r10228 <- 0[oldval]
	store.64*   %r10228 -> 0[o1]
	load.64*    %r10229 <- 0[o2]
	load.f64    %r10230 <- 0[%r10229]
	fpcast.f64  %r10231 <- (64) %r10230
	load.64*    %r10232 <- 0[o1]
	store.f64   %r10231 -> 0[%r10232]
	load.64*    %r10233 <- 0[o2]
	load.32     %r10234 <- 8[%r10233]
	scast.32    %r10235 <- (32) %r10234
	load.64*    %r10236 <- 0[o1]
	store.32    %r10235 -> 8[%r10236]
	load.64*    %r10237 <- 0[h]
	store.8     $0 -> 10[%r10237]
	load.64*    %r10238 <- 0[val]
	load.32     %r10239 <- 8[%r10238]
	setge.32    %r10240 <- %r10239, $4
	cbr         %r10240, .L2419, .L2417

.L2419:
	load.64*    %r10241 <- 0[val]
	load.64*    %r10242 <- 0[%r10241]
	load.8      %r10243 <- 9[%r10242]
	cast.32     %r10244 <- (8) %r10243
	and.32      %r10245 <- %r10244, $3
	cbr         %r10245, .L2418, .L2417

.L2418:
	load.64*    %r10246 <- 0[h]
	ptrcast.64* %r10247 <- (64) %r10246
	load.8      %r10248 <- 9[%r10247]
	cast.32     %r10249 <- (8) %r10248
	and.32      %r10250 <- %r10249, $4
	cbr         %r10250, .L2416, .L2417

.L2416:
	load.64*    %r10251 <- 0[L]
	load.64*    %r10252 <- 0[h]
	push.64*    %r10251
	push.64*    %r10252
	call        luaC_barrierback
	br          .L2417

.L2417:
	br          .L2420

.L2408:
	br          .L2421

.L2406:
	load.64*    %r10253 <- 0[L]
	load.64*    %r10254 <- 0[t]
	push.64*    %r10253
	push.64*    %r10254
	push.32     $1
	call.64*    %r10255 <- luaT_gettmbyobj
	store.64*   %r10255 -> 0[tm]
	load.32     %r10256 <- 8[%r10255]
	scast.32    %r10257 <- (32) %r10256
	seteq.32    %r10258 <- %r10257, $0
	cbr         %r10258, .L2422, .L2423

.L2422:
	load.64*    %r10259 <- 0[L]
	load.64*    %r10260 <- 0[t]
	symaddr.64* %r10261 <- <anon symbol:0x1b326f0>
	push.64*    %r10259
	push.64*    %r10260
	push.64*    %r10261
	call        luaG_typeerror
	br          .L2423

.L2423:
	br          .L2421

.L2421:
	load.64*    %r10262 <- 0[tm]
	load.32     %r10263 <- 8[%r10262]
	scast.32    %r10264 <- (32) %r10263
	seteq.32    %r10265 <- %r10264, $6
	cbr         %r10265, .L2424, .L2425

.L2424:
	load.64*    %r10266 <- 0[L]
	load.64*    %r10267 <- 0[tm]
	load.64*    %r10268 <- 0[t]
	load.64*    %r10269 <- 0[key]
	load.64*    %r10270 <- 0[val]
	push.64*    %r10266
	push.64*    %r10267
	push.64*    %r10268
	push.64*    %r10269
	push.64*    %r10270
	call        callTM
	br          .L2420

.L2425:
	load.64*    %r10271 <- 0[tm]
	store.64*   %r10271 -> 0[o2]
	symaddr.64* %r10272 <- temp
	store.64*   %r10272 -> 0[o1]
	load.64*    %r10273 <- 0[o2]
	load.f64    %r10274 <- 0[%r10273]
	fpcast.f64  %r10275 <- (64) %r10274
	load.64*    %r10276 <- 0[o1]
	store.f64   %r10275 -> 0[%r10276]
	load.64*    %r10277 <- 0[o2]
	load.32     %r10278 <- 8[%r10277]
	scast.32    %r10279 <- (32) %r10278
	load.64*    %r10280 <- 0[o1]
	store.32    %r10279 -> 8[%r10280]
	symaddr.64* %r10281 <- temp
	store.64*   %r10281 -> 0[t]
	br          .L2402

.L2402:
	load.32     %r10282 <- 0[loop]
	add.32      %r10283 <- %r10282, $1
	store.32    %r10283 -> 0[loop]
	br          .L2404

.L2403:
	load.64*    %r10284 <- 0[L]
	symaddr.64* %r10285 <- <anon symbol:0x1b33740>
	push.64*    %r10284
	push.64*    %r10285
	call        luaG_runerror
	br          .L2420

.L2420:
	ret


call_binTM:
.L2426:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	store.64*   %arg4 -> 0[res]
	store.32    %arg5 -> 0[event]
	load.64*    %r10286 <- 0[L]
	load.64*    %r10287 <- 0[p1]
	load.32     %r10288 <- 0[event]
	push.64*    %r10286
	push.64*    %r10287
	push.32     %r10288
	call.64*    %r10289 <- luaT_gettmbyobj
	store.64*   %r10289 -> 0[tm]
	load.64*    %r10290 <- 0[tm]
	load.32     %r10291 <- 8[%r10290]
	scast.32    %r10292 <- (32) %r10291
	seteq.32    %r10293 <- %r10292, $0
	cbr         %r10293, .L2427, .L2428

.L2427:
	load.64*    %r10294 <- 0[L]
	load.64*    %r10295 <- 0[p2]
	load.32     %r10296 <- 0[event]
	push.64*    %r10294
	push.64*    %r10295
	push.32     %r10296
	call.64*    %r10297 <- luaT_gettmbyobj
	store.64*   %r10297 -> 0[tm]
	br          .L2428

.L2428:
	load.64*    %r10298 <- 0[tm]
	load.32     %r10299 <- 8[%r10298]
	scast.32    %r10300 <- (32) %r10299
	seteq.32    %r10301 <- %r10300, $0
	cbr         %r10301, .L2429, .L2430

.L2429:
	phisrc.32   %phi412(return) <- $0
	br          .L2431

.L2430:
	load.64*    %r10303 <- 0[L]
	load.64*    %r10304 <- 0[res]
	load.64*    %r10305 <- 0[tm]
	load.64*    %r10306 <- 0[p1]
	load.64*    %r10307 <- 0[p2]
	push.64*    %r10303
	push.64*    %r10304
	push.64*    %r10305
	push.64*    %r10306
	push.64*    %r10307
	call        callTMres
	phisrc.32   %phi413(return) <- $1
	br          .L2431

.L2431:
	phi.32      %r10302 <- %phi412(return), %phi413(return)
	ret.32      %r10302


get_compTM:
.L2432:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[mt1]
	store.64*   %arg3 -> 0[mt2]
	store.32    %arg4 -> 0[event]
	load.64*    %r10308 <- 0[mt1]
	seteq.32    %r10309 <- %r10308, $0
	cbr         %r10309, .L2433, .L2434

.L2433:
	phisrc.64*  %phi414 <- $0
	br          .L2435

.L2434:
	load.64*    %r10310 <- 0[mt1]
	load.8      %r10311 <- 10[%r10310]
	cast.32     %r10312 <- (8) %r10311
	load.32     %r10313 <- 0[event]
	scast.32    %r10314 <- (32) %r10313
	shl.32      %r10315 <- $1, %r10314
	and.32      %r10316 <- %r10312, %r10315
	cbr         %r10316, .L2436, .L2437

.L2436:
	phisrc.64*  %phi415 <- $0
	br          .L2438

.L2437:
	load.64*    %r10317 <- 0[mt1]
	load.32     %r10318 <- 0[event]
	load.64*    %r10319 <- 0[L]
	load.64*    %r10320 <- 32[%r10319]
	add.64*     %r10321 <- %r10320, $296
	load.32     %r10322 <- 0[event]
	scast.64    %r10323 <- (32) %r10322
	muls.64     %r10324 <- %r10323, $8
	add.64*     %r10325 <- %r10321, %r10324
	load.64*    %r10326 <- 0[%r10325]
	push.64*    %r10317
	push.32     %r10318
	push.64*    %r10326
	call.64*    %r10327 <- luaT_gettm
	phisrc.64*  %phi416 <- %r10327
	br          .L2438

.L2438:
	phi.64*     %r10328 <- %phi415, %phi416
	phisrc.64*  %phi417 <- %r10328
	br          .L2435

.L2435:
	phi.64*     %r10329 <- %phi414, %phi417
	store.64*   %r10329 -> 0[tm1]
	load.64*    %r10330 <- 0[tm1]
	seteq.32    %r10331 <- %r10330, $0
	cbr         %r10331, .L2439, .L2440

.L2439:
	phisrc.64*  %phi418(return) <- $0
	br          .L2441

.L2440:
	load.64*    %r10333 <- 0[mt1]
	load.64*    %r10334 <- 0[mt2]
	seteq.32    %r10335 <- %r10333, %r10334
	cbr         %r10335, .L2442, .L2443

.L2442:
	load.64*    %r10336 <- 0[tm1]
	phisrc.64*  %phi419(return) <- %r10336
	br          .L2441

.L2443:
	load.64*    %r10337 <- 0[mt2]
	seteq.32    %r10338 <- %r10337, $0
	cbr         %r10338, .L2444, .L2445

.L2444:
	phisrc.64*  %phi420 <- $0
	br          .L2446

.L2445:
	load.64*    %r10339 <- 0[mt2]
	load.8      %r10340 <- 10[%r10339]
	cast.32     %r10341 <- (8) %r10340
	load.32     %r10342 <- 0[event]
	scast.32    %r10343 <- (32) %r10342
	shl.32      %r10344 <- $1, %r10343
	and.32      %r10345 <- %r10341, %r10344
	cbr         %r10345, .L2447, .L2448

.L2447:
	phisrc.64*  %phi421 <- $0
	br          .L2449

.L2448:
	load.64*    %r10346 <- 0[mt2]
	load.32     %r10347 <- 0[event]
	load.64*    %r10348 <- 0[L]
	load.64*    %r10349 <- 32[%r10348]
	add.64*     %r10350 <- %r10349, $296
	load.32     %r10351 <- 0[event]
	scast.64    %r10352 <- (32) %r10351
	muls.64     %r10353 <- %r10352, $8
	add.64*     %r10354 <- %r10350, %r10353
	load.64*    %r10355 <- 0[%r10354]
	push.64*    %r10346
	push.32     %r10347
	push.64*    %r10355
	call.64*    %r10356 <- luaT_gettm
	phisrc.64*  %phi422 <- %r10356
	br          .L2449

.L2449:
	phi.64*     %r10357 <- %phi421, %phi422
	phisrc.64*  %phi423 <- %r10357
	br          .L2446

.L2446:
	phi.64*     %r10358 <- %phi420, %phi423
	store.64*   %r10358 -> 0[tm2]
	load.64*    %r10359 <- 0[tm2]
	seteq.32    %r10360 <- %r10359, $0
	cbr         %r10360, .L2450, .L2451

.L2450:
	phisrc.64*  %phi424(return) <- $0
	br          .L2441

.L2451:
	load.64*    %r10361 <- 0[tm1]
	load.64*    %r10362 <- 0[tm2]
	push.64*    %r10361
	push.64*    %r10362
	call.32     %r10363 <- luaO_rawequalObj
	cbr         %r10363, .L2452, .L2453

.L2452:
	load.64*    %r10364 <- 0[tm1]
	phisrc.64*  %phi425(return) <- %r10364
	br          .L2441

.L2453:
	phisrc.64*  %phi426(return) <- $0
	br          .L2441

.L2441:
	phi.64*     %r10332 <- %phi418(return), %phi419(return), %phi424(return), %phi425(return), %phi426(return)
	ret.64*     %r10332


call_orderTM:
.L2454:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	store.32    %arg4 -> 0[event]
	load.64*    %r10365 <- 0[L]
	load.64*    %r10366 <- 0[p1]
	load.32     %r10367 <- 0[event]
	push.64*    %r10365
	push.64*    %r10366
	push.32     %r10367
	call.64*    %r10368 <- luaT_gettmbyobj
	store.64*   %r10368 -> 0[tm1]
	load.64*    %r10369 <- 0[tm1]
	load.32     %r10370 <- 8[%r10369]
	scast.32    %r10371 <- (32) %r10370
	seteq.32    %r10372 <- %r10371, $0
	cbr         %r10372, .L2455, .L2456

.L2455:
	phisrc.32   %phi427(return) <- $0xffffffff
	br          .L2457

.L2456:
	load.64*    %r10374 <- 0[L]
	load.64*    %r10375 <- 0[p2]
	load.32     %r10376 <- 0[event]
	push.64*    %r10374
	push.64*    %r10375
	push.32     %r10376
	call.64*    %r10377 <- luaT_gettmbyobj
	store.64*   %r10377 -> 0[tm2]
	load.64*    %r10378 <- 0[tm1]
	load.64*    %r10379 <- 0[tm2]
	push.64*    %r10378
	push.64*    %r10379
	call.32     %r10380 <- luaO_rawequalObj
	cbr         %r10380, .L2459, .L2458

.L2458:
	phisrc.32   %phi428(return) <- $0xffffffff
	br          .L2457

.L2459:
	load.64*    %r10381 <- 0[L]
	load.64*    %r10382 <- 0[L]
	load.64*    %r10383 <- 16[%r10382]
	load.64*    %r10384 <- 0[tm1]
	load.64*    %r10385 <- 0[p1]
	load.64*    %r10386 <- 0[p2]
	push.64*    %r10381
	push.64*    %r10383
	push.64*    %r10384
	push.64*    %r10385
	push.64*    %r10386
	call        callTMres
	load.64*    %r10387 <- 0[L]
	load.64*    %r10388 <- 16[%r10387]
	load.32     %r10389 <- 8[%r10388]
	seteq.32    %r10390 <- %r10389, $0
	cbr         %r10390, .L2460, .L2461

.L2460:
	phisrc.32   %phi429 <- $1
	br          .L2462

.L2461:
	load.64*    %r10391 <- 0[L]
	load.64*    %r10392 <- 16[%r10391]
	load.32     %r10393 <- 8[%r10392]
	seteq.32    %r10394 <- %r10393, $1
	cbr         %r10394, .L2463, .L2464

.L2463:
	load.64*    %r10395 <- 0[L]
	load.64*    %r10396 <- 16[%r10395]
	load.32     %r10397 <- 0[%r10396]
	seteq.32    %r10398 <- %r10397, $0
	phisrc.32   %phi430 <- %r10398
	br          .L2465

.L2464:
	phisrc.32   %phi431 <- $0
	br          .L2465

.L2465:
	phi.32      %r10399 <- %phi430, %phi431
	phisrc.32   %phi432 <- %r10399
	br          .L2462

.L2462:
	phi.32      %r10400 <- %phi429, %phi432
	seteq.32    %r10401 <- %r10400, $0
	phisrc.32   %phi433(return) <- %r10401
	br          .L2457

.L2457:
	phi.32      %r10373 <- %phi427(return), %phi428(return), %phi433(return)
	ret.32      %r10373


l_strcmp:
.L2466:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[rs]
	load.64*    %r10402 <- 0[ls]
	add.64*     %r10403 <- %r10402, $24
	ptrcast.64* %r10404 <- (64) %r10403
	store.64*   %r10404 -> 0[l]
	load.64*    %r10405 <- 0[ls]
	load.64     %r10406 <- 16[%r10405]
	cast.64     %r10407 <- (64) %r10406
	store.64    %r10407 -> 0[ll]
	load.64*    %r10408 <- 0[rs]
	add.64*     %r10409 <- %r10408, $24
	ptrcast.64* %r10410 <- (64) %r10409
	store.64*   %r10410 -> 0[r]
	load.64*    %r10411 <- 0[rs]
	load.64     %r10412 <- 16[%r10411]
	cast.64     %r10413 <- (64) %r10412
	store.64    %r10413 -> 0[lr]
	br          .L2470

.L2470:
	br          .L2467

.L2467:
	load.64*    %r10414 <- 0[l]
	load.64*    %r10415 <- 0[r]
	push.64*    %r10414
	push.64*    %r10415
	call.32     %r10416 <- strcoll
	store.32    %r10416 -> 0[temp]
	load.32     %r10417 <- 0[temp]
	setne.32    %r10418 <- %r10417, $0
	cbr         %r10418, .L2471, .L2472

.L2471:
	load.32     %r10419 <- 0[temp]
	phisrc.32   %phi434(return) <- %r10419
	br          .L2473

.L2472:
	load.64*    %r10421 <- 0[l]
	push.64*    %r10421
	call.64     %r10422 <- strlen
	store.64    %r10422 -> 0[len]
	load.64     %r10423 <- 0[len]
	load.64     %r10424 <- 0[lr]
	seteq.32    %r10425 <- %r10423, %r10424
	cbr         %r10425, .L2475, .L2476

.L2475:
	load.64     %r10426 <- 0[len]
	load.64     %r10427 <- 0[ll]
	seteq.32    %r10428 <- %r10426, %r10427
	select.32   %r10429 <- %r10428, $0, $1
	phisrc.32   %phi435(return) <- %r10429
	br          .L2473

.L2476:
	load.64     %r10430 <- 0[len]
	load.64     %r10431 <- 0[ll]
	seteq.32    %r10432 <- %r10430, %r10431
	cbr         %r10432, .L2478, .L2479

.L2478:
	phisrc.32   %phi436(return) <- $0xffffffff
	br          .L2473

.L2479:
	br          .L2477

.L2477:
	load.64     %r10433 <- 0[len]
	add.64      %r10434 <- %r10433, $1
	store.64    %r10434 -> 0[len]
	load.64     %r10435 <- 0[len]
	load.64*    %r10436 <- 0[l]
	cast.64     %r10437 <- (64) %r10436
	add.64      %r10438 <- %r10437, %r10435
	ptrcast.64* %r10439 <- (64) %r10438
	store.64*   %r10439 -> 0[l]
	load.64     %r10440 <- 0[len]
	load.64     %r10441 <- 0[ll]
	cast.64     %r10442 <- (64) %r10441
	sub.64      %r10443 <- %r10442, %r10440
	cast.64     %r10444 <- (64) %r10443
	store.64    %r10444 -> 0[ll]
	load.64     %r10445 <- 0[len]
	load.64*    %r10446 <- 0[r]
	cast.64     %r10447 <- (64) %r10446
	add.64      %r10448 <- %r10447, %r10445
	ptrcast.64* %r10449 <- (64) %r10448
	store.64*   %r10449 -> 0[r]
	load.64     %r10450 <- 0[len]
	load.64     %r10451 <- 0[lr]
	cast.64     %r10452 <- (64) %r10451
	sub.64      %r10453 <- %r10452, %r10450
	cast.64     %r10454 <- (64) %r10453
	store.64    %r10454 -> 0[lr]
	br          .L2474

.L2474:
	br          .L2468

.L2468:
	br          .L2470

.L2473:
	phi.32      %r10420 <- %phi434(return), %phi435(return), %phi436(return)
	ret.32      %r10420


luaV_lessthan:
.L2480:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[l]
	store.64*   %arg3 -> 0[r]
	load.64*    %r10455 <- 0[l]
	load.32     %r10456 <- 8[%r10455]
	scast.32    %r10457 <- (32) %r10456
	load.64*    %r10458 <- 0[r]
	load.32     %r10459 <- 8[%r10458]
	scast.32    %r10460 <- (32) %r10459
	setne.32    %r10461 <- %r10457, %r10460
	cbr         %r10461, .L2481, .L2482

.L2481:
	load.64*    %r10462 <- 0[L]
	load.64*    %r10463 <- 0[l]
	load.64*    %r10464 <- 0[r]
	push.64*    %r10462
	push.64*    %r10463
	push.64*    %r10464
	call.32     %r10465 <- luaG_ordererror
	phisrc.32   %phi437(return) <- %r10465
	br          .L2483

.L2482:
	load.64*    %r10467 <- 0[l]
	load.32     %r10468 <- 8[%r10467]
	scast.32    %r10469 <- (32) %r10468
	seteq.32    %r10470 <- %r10469, $3
	cbr         %r10470, .L2485, .L2486

.L2485:
	load.64*    %r10471 <- 0[l]
	load.f64    %r10472 <- 0[%r10471]
	fpcast.f64  %r10473 <- (64) %r10472
	load.64*    %r10474 <- 0[r]
	load.f64    %r10475 <- 0[%r10474]
	fpcast.f64  %r10476 <- (64) %r10475
	setlt.32    %r10477 <- %r10473, %r10476
	phisrc.32   %phi438(return) <- %r10477
	br          .L2483

.L2486:
	load.64*    %r10478 <- 0[l]
	load.32     %r10479 <- 8[%r10478]
	scast.32    %r10480 <- (32) %r10479
	seteq.32    %r10481 <- %r10480, $4
	cbr         %r10481, .L2488, .L2489

.L2488:
	load.64*    %r10482 <- 0[l]
	load.64*    %r10483 <- 0[%r10482]
	add.64*     %r10484 <- %r10483, $0
	load.64*    %r10485 <- 0[r]
	load.64*    %r10486 <- 0[%r10485]
	add.64*     %r10487 <- %r10486, $0
	push.64*    %r10484
	push.64*    %r10487
	call.32     %r10488 <- l_strcmp
	setlt.32    %r10489 <- %r10488, $0
	phisrc.32   %phi439(return) <- %r10489
	br          .L2483

.L2489:
	load.64*    %r10490 <- 0[L]
	load.64*    %r10491 <- 0[l]
	load.64*    %r10492 <- 0[r]
	push.64*    %r10490
	push.64*    %r10491
	push.64*    %r10492
	push.32     $13
	call.32     %r10493 <- call_orderTM
	store.32    %r10493 -> 0[res]
	setne.32    %r10494 <- %r10493, $0xffffffff
	cbr         %r10494, .L2491, .L2492

.L2491:
	load.32     %r10495 <- 0[res]
	phisrc.32   %phi440(return) <- %r10495
	br          .L2483

.L2492:
	br          .L2490

.L2490:
	br          .L2487

.L2487:
	br          .L2484

.L2484:
	load.64*    %r10496 <- 0[L]
	load.64*    %r10497 <- 0[l]
	load.64*    %r10498 <- 0[r]
	push.64*    %r10496
	push.64*    %r10497
	push.64*    %r10498
	call.32     %r10499 <- luaG_ordererror
	phisrc.32   %phi441(return) <- %r10499
	br          .L2483

.L2483:
	phi.32      %r10466 <- %phi437(return), %phi438(return), %phi439(return), %phi440(return), %phi441(return)
	ret.32      %r10466


lessequal:
.L2493:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[l]
	store.64*   %arg3 -> 0[r]
	load.64*    %r10500 <- 0[l]
	load.32     %r10501 <- 8[%r10500]
	scast.32    %r10502 <- (32) %r10501
	load.64*    %r10503 <- 0[r]
	load.32     %r10504 <- 8[%r10503]
	scast.32    %r10505 <- (32) %r10504
	setne.32    %r10506 <- %r10502, %r10505
	cbr         %r10506, .L2494, .L2495

.L2494:
	load.64*    %r10507 <- 0[L]
	load.64*    %r10508 <- 0[l]
	load.64*    %r10509 <- 0[r]
	push.64*    %r10507
	push.64*    %r10508
	push.64*    %r10509
	call.32     %r10510 <- luaG_ordererror
	phisrc.32   %phi442(return) <- %r10510
	br          .L2496

.L2495:
	load.64*    %r10512 <- 0[l]
	load.32     %r10513 <- 8[%r10512]
	scast.32    %r10514 <- (32) %r10513
	seteq.32    %r10515 <- %r10514, $3
	cbr         %r10515, .L2498, .L2499

.L2498:
	load.64*    %r10516 <- 0[l]
	load.f64    %r10517 <- 0[%r10516]
	fpcast.f64  %r10518 <- (64) %r10517
	load.64*    %r10519 <- 0[r]
	load.f64    %r10520 <- 0[%r10519]
	fpcast.f64  %r10521 <- (64) %r10520
	setle.32    %r10522 <- %r10518, %r10521
	phisrc.32   %phi443(return) <- %r10522
	br          .L2496

.L2499:
	load.64*    %r10523 <- 0[l]
	load.32     %r10524 <- 8[%r10523]
	scast.32    %r10525 <- (32) %r10524
	seteq.32    %r10526 <- %r10525, $4
	cbr         %r10526, .L2501, .L2502

.L2501:
	load.64*    %r10527 <- 0[l]
	load.64*    %r10528 <- 0[%r10527]
	add.64*     %r10529 <- %r10528, $0
	load.64*    %r10530 <- 0[r]
	load.64*    %r10531 <- 0[%r10530]
	add.64*     %r10532 <- %r10531, $0
	push.64*    %r10529
	push.64*    %r10532
	call.32     %r10533 <- l_strcmp
	setle.32    %r10534 <- %r10533, $0
	phisrc.32   %phi444(return) <- %r10534
	br          .L2496

.L2502:
	load.64*    %r10535 <- 0[L]
	load.64*    %r10536 <- 0[l]
	load.64*    %r10537 <- 0[r]
	push.64*    %r10535
	push.64*    %r10536
	push.64*    %r10537
	push.32     $14
	call.32     %r10538 <- call_orderTM
	store.32    %r10538 -> 0[res]
	setne.32    %r10539 <- %r10538, $0xffffffff
	cbr         %r10539, .L2504, .L2505

.L2504:
	load.32     %r10540 <- 0[res]
	phisrc.32   %phi445(return) <- %r10540
	br          .L2496

.L2505:
	load.64*    %r10541 <- 0[L]
	load.64*    %r10542 <- 0[r]
	load.64*    %r10543 <- 0[l]
	push.64*    %r10541
	push.64*    %r10542
	push.64*    %r10543
	push.32     $13
	call.32     %r10544 <- call_orderTM
	store.32    %r10544 -> 0[res]
	setne.32    %r10545 <- %r10544, $0xffffffff
	cbr         %r10545, .L2507, .L2508

.L2507:
	load.32     %r10546 <- 0[res]
	seteq.32    %r10547 <- %r10546, $0
	phisrc.32   %phi446(return) <- %r10547
	br          .L2496

.L2508:
	br          .L2506

.L2506:
	br          .L2503

.L2503:
	br          .L2500

.L2500:
	br          .L2497

.L2497:
	load.64*    %r10548 <- 0[L]
	load.64*    %r10549 <- 0[l]
	load.64*    %r10550 <- 0[r]
	push.64*    %r10548
	push.64*    %r10549
	push.64*    %r10550
	call.32     %r10551 <- luaG_ordererror
	phisrc.32   %phi447(return) <- %r10551
	br          .L2496

.L2496:
	phi.32      %r10511 <- %phi442(return), %phi443(return), %phi444(return), %phi445(return), %phi446(return), %phi447(return)
	ret.32      %r10511


luaV_equalval:
.L2509:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t1]
	store.64*   %arg3 -> 0[t2]
	load.64*    %r10552 <- 0[t1]
	load.32     %r10553 <- 8[%r10552]
	switch.32   %r10553, 0 -> .L2511, 1 -> .L2513, 2 -> .L2514, 3 -> .L2512, 5 -> .L2516, 7 -> .L2515, default -> .L2517

.L2511:
	phisrc.32   %phi448(return) <- $1
	br          .L2518

.L2512:
	load.64*    %r10555 <- 0[t1]
	load.f64    %r10556 <- 0[%r10555]
	fpcast.f64  %r10557 <- (64) %r10556
	load.64*    %r10558 <- 0[t2]
	load.f64    %r10559 <- 0[%r10558]
	fpcast.f64  %r10560 <- (64) %r10559
	seteq.32    %r10561 <- %r10557, %r10560
	phisrc.32   %phi449(return) <- %r10561
	br          .L2518

.L2513:
	load.64*    %r10562 <- 0[t1]
	load.32     %r10563 <- 0[%r10562]
	scast.32    %r10564 <- (32) %r10563
	load.64*    %r10565 <- 0[t2]
	load.32     %r10566 <- 0[%r10565]
	scast.32    %r10567 <- (32) %r10566
	seteq.32    %r10568 <- %r10564, %r10567
	phisrc.32   %phi450(return) <- %r10568
	br          .L2518

.L2514:
	load.64*    %r10569 <- 0[t1]
	load.64*    %r10570 <- 0[%r10569]
	load.64*    %r10571 <- 0[t2]
	load.64*    %r10572 <- 0[%r10571]
	seteq.32    %r10573 <- %r10570, %r10572
	phisrc.32   %phi451(return) <- %r10573
	br          .L2518

.L2515:
	load.64*    %r10574 <- 0[t1]
	load.64*    %r10575 <- 0[%r10574]
	add.64*     %r10576 <- %r10575, $0
	add.64*     %r10577 <- %r10576, $0
	load.64*    %r10578 <- 0[t2]
	load.64*    %r10579 <- 0[%r10578]
	add.64*     %r10580 <- %r10579, $0
	add.64*     %r10581 <- %r10580, $0
	seteq.32    %r10582 <- %r10577, %r10581
	cbr         %r10582, .L2519, .L2520

.L2519:
	phisrc.32   %phi452(return) <- $1
	br          .L2518

.L2520:
	load.64*    %r10583 <- 0[L]
	load.64*    %r10584 <- 0[t1]
	load.64*    %r10585 <- 0[%r10584]
	load.64*    %r10586 <- 16[%r10585]
	load.64*    %r10587 <- 0[t2]
	load.64*    %r10588 <- 0[%r10587]
	load.64*    %r10589 <- 16[%r10588]
	push.64*    %r10583
	push.64*    %r10586
	push.64*    %r10589
	push.32     $4
	call.64*    %r10590 <- get_compTM
	store.64*   %r10590 -> 0[tm]
	br          .L2510

.L2516:
	load.64*    %r10591 <- 0[t1]
	load.64*    %r10592 <- 0[%r10591]
	add.64*     %r10593 <- %r10592, $0
	load.64*    %r10594 <- 0[t2]
	load.64*    %r10595 <- 0[%r10594]
	add.64*     %r10596 <- %r10595, $0
	seteq.32    %r10597 <- %r10593, %r10596
	cbr         %r10597, .L2521, .L2522

.L2521:
	phisrc.32   %phi453(return) <- $1
	br          .L2518

.L2522:
	load.64*    %r10598 <- 0[L]
	load.64*    %r10599 <- 0[t1]
	load.64*    %r10600 <- 0[%r10599]
	load.64*    %r10601 <- 16[%r10600]
	load.64*    %r10602 <- 0[t2]
	load.64*    %r10603 <- 0[%r10602]
	load.64*    %r10604 <- 16[%r10603]
	push.64*    %r10598
	push.64*    %r10601
	push.64*    %r10604
	push.32     $4
	call.64*    %r10605 <- get_compTM
	store.64*   %r10605 -> 0[tm]
	br          .L2510

.L2517:
	load.64*    %r10606 <- 0[t1]
	load.64*    %r10607 <- 0[%r10606]
	load.64*    %r10608 <- 0[t2]
	load.64*    %r10609 <- 0[%r10608]
	seteq.32    %r10610 <- %r10607, %r10609
	phisrc.32   %phi454(return) <- %r10610
	br          .L2518

.L2510:
	load.64*    %r10611 <- 0[tm]
	seteq.32    %r10612 <- %r10611, $0
	cbr         %r10612, .L2523, .L2524

.L2523:
	phisrc.32   %phi455(return) <- $0
	br          .L2518

.L2524:
	load.64*    %r10613 <- 0[L]
	load.64*    %r10614 <- 0[L]
	load.64*    %r10615 <- 16[%r10614]
	load.64*    %r10616 <- 0[tm]
	load.64*    %r10617 <- 0[t1]
	load.64*    %r10618 <- 0[t2]
	push.64*    %r10613
	push.64*    %r10615
	push.64*    %r10616
	push.64*    %r10617
	push.64*    %r10618
	call        callTMres
	load.64*    %r10619 <- 0[L]
	load.64*    %r10620 <- 16[%r10619]
	load.32     %r10621 <- 8[%r10620]
	seteq.32    %r10622 <- %r10621, $0
	cbr         %r10622, .L2525, .L2526

.L2525:
	phisrc.32   %phi456 <- $1
	br          .L2527

.L2526:
	load.64*    %r10623 <- 0[L]
	load.64*    %r10624 <- 16[%r10623]
	load.32     %r10625 <- 8[%r10624]
	seteq.32    %r10626 <- %r10625, $1
	cbr         %r10626, .L2528, .L2529

.L2528:
	load.64*    %r10627 <- 0[L]
	load.64*    %r10628 <- 16[%r10627]
	load.32     %r10629 <- 0[%r10628]
	seteq.32    %r10630 <- %r10629, $0
	phisrc.32   %phi457 <- %r10630
	br          .L2530

.L2529:
	phisrc.32   %phi458 <- $0
	br          .L2530

.L2530:
	phi.32      %r10631 <- %phi457, %phi458
	phisrc.32   %phi459 <- %r10631
	br          .L2527

.L2527:
	phi.32      %r10632 <- %phi456, %phi459
	seteq.32    %r10633 <- %r10632, $0
	phisrc.32   %phi460(return) <- %r10633
	br          .L2518

.L2518:
	phi.32      %r10554 <- %phi448(return), %phi449(return), %phi450(return), %phi451(return), %phi452(return), %phi453(return), %phi454(return), %phi455(return), %phi460(return)
	ret.32      %r10554


luaV_concat:
.L2531:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[total]
	store.32    %arg3 -> 0[last]
	br          .L2532

.L2532:
	load.64*    %r10634 <- 0[L]
	load.64*    %r10635 <- 24[%r10634]
	load.32     %r10636 <- 0[last]
	scast.64    %r10637 <- (32) %r10636
	muls.64     %r10638 <- %r10637, $16
	add.64*     %r10639 <- %r10635, %r10638
	add.64*     %r10640 <- %r10639, $16
	store.64*   %r10640 -> 0[top]
	store.32    $2 -> 0[n]
	load.64*    %r10641 <- 0[top]
	sub.64*     %r10642 <- %r10641, $32
	load.32     %r10643 <- 8[%r10642]
	seteq.32    %r10644 <- %r10643, $4
	cbr         %r10644, .L2537, .L2538

.L2538:
	load.64*    %r10645 <- 0[top]
	sub.64*     %r10646 <- %r10645, $32
	load.32     %r10647 <- 8[%r10646]
	seteq.32    %r10648 <- %r10647, $3
	cbr         %r10648, .L2537, .L2535

.L2537:
	load.64*    %r10649 <- 0[top]
	sub.64*     %r10650 <- %r10649, $16
	load.32     %r10651 <- 8[%r10650]
	seteq.32    %r10652 <- %r10651, $4
	cbr         %r10652, .L2536, .L2539

.L2539:
	load.64*    %r10653 <- 0[L]
	load.64*    %r10654 <- 0[top]
	sub.64*     %r10655 <- %r10654, $16
	push.64*    %r10653
	push.64*    %r10655
	call.32     %r10656 <- luaV_tostring
	cbr         %r10656, .L2536, .L2535

.L2535:
	load.64*    %r10657 <- 0[L]
	load.64*    %r10658 <- 0[top]
	sub.64*     %r10659 <- %r10658, $32
	load.64*    %r10660 <- 0[top]
	sub.64*     %r10661 <- %r10660, $16
	load.64*    %r10662 <- 0[top]
	sub.64*     %r10663 <- %r10662, $32
	push.64*    %r10657
	push.64*    %r10659
	push.64*    %r10661
	push.64*    %r10663
	push.32     $15
	call.32     %r10664 <- call_binTM
	cbr         %r10664, .L2541, .L2540

.L2540:
	load.64*    %r10665 <- 0[L]
	load.64*    %r10666 <- 0[top]
	sub.64*     %r10667 <- %r10666, $32
	load.64*    %r10668 <- 0[top]
	sub.64*     %r10669 <- %r10668, $16
	push.64*    %r10665
	push.64*    %r10667
	push.64*    %r10669
	call        luaG_concaterror
	br          .L2541

.L2541:
	br          .L2542

.L2536:
	load.64*    %r10670 <- 0[top]
	sub.64*     %r10671 <- %r10670, $16
	load.64*    %r10672 <- 0[%r10671]
	load.64     %r10673 <- 16[%r10672]
	seteq.32    %r10674 <- %r10673, $0
	cbr         %r10674, .L2543, .L2544

.L2543:
	load.64*    %r10675 <- 0[top]
	sub.64*     %r10676 <- %r10675, $32
	load.32     %r10677 <- 8[%r10676]
	seteq.32    %r10678 <- %r10677, $4
	cbr         %r10678, .L2545, .L2546

.L2545:
	phisrc.32   %phi461 <- $1
	br          .L2547

.L2546:
	load.64*    %r10679 <- 0[L]
	load.64*    %r10680 <- 0[top]
	sub.64*     %r10681 <- %r10680, $32
	push.64*    %r10679
	push.64*    %r10681
	call.32     %r10682 <- luaV_tostring
	phisrc.32   %phi462 <- %r10682
	br          .L2547

.L2547:
	phi.32      %r10683 <- %phi461, %phi462
	br          .L2548

.L2544:
	load.64*    %r10684 <- 0[top]
	sub.64*     %r10685 <- %r10684, $16
	load.64*    %r10686 <- 0[%r10685]
	load.64     %r10687 <- 16[%r10686]
	store.64    %r10687 -> 0[tl]
	store.32    $1 -> 0[n]
	br          .L2552

.L2552:
	load.32     %r10688 <- 0[n]
	load.32     %r10689 <- 0[total]
	setlt.32    %r10690 <- %r10688, %r10689
	cbr         %r10690, .L2553, .L2551

.L2553:
	load.64*    %r10691 <- 0[top]
	load.32     %r10692 <- 0[n]
	scast.64    %r10693 <- (32) %r10692
	muls.64     %r10694 <- %r10693, $16
	sub.64*     %r10695 <- %r10691, %r10694
	sub.64*     %r10696 <- %r10695, $16
	load.32     %r10697 <- 8[%r10696]
	seteq.32    %r10698 <- %r10697, $4
	cbr         %r10698, .L2549, .L2554

.L2554:
	load.64*    %r10699 <- 0[L]
	load.64*    %r10700 <- 0[top]
	load.32     %r10701 <- 0[n]
	scast.64    %r10702 <- (32) %r10701
	muls.64     %r10703 <- %r10702, $16
	sub.64*     %r10704 <- %r10700, %r10703
	sub.64*     %r10705 <- %r10704, $16
	push.64*    %r10699
	push.64*    %r10705
	call.32     %r10706 <- luaV_tostring
	cbr         %r10706, .L2549, .L2551

.L2549:
	load.64*    %r10707 <- 0[top]
	load.32     %r10708 <- 0[n]
	scast.64    %r10709 <- (32) %r10708
	muls.64     %r10710 <- %r10709, $16
	sub.64*     %r10711 <- %r10707, %r10710
	sub.64*     %r10712 <- %r10711, $16
	load.64*    %r10713 <- 0[%r10712]
	load.64     %r10714 <- 16[%r10713]
	store.64    %r10714 -> 0[l]
	load.64     %r10715 <- 0[l]
	load.64     %r10716 <- 0[tl]
	sub.64      %r10717 <- $-3, %r10716
	setae.32    %r10718 <- %r10715, %r10717
	cbr         %r10718, .L2555, .L2556

.L2555:
	load.64*    %r10719 <- 0[L]
	symaddr.64* %r10720 <- <anon symbol:0x1b43590>
	push.64*    %r10719
	push.64*    %r10720
	call        luaG_runerror
	br          .L2556

.L2556:
	load.64     %r10721 <- 0[l]
	load.64     %r10722 <- 0[tl]
	cast.64     %r10723 <- (64) %r10722
	add.64      %r10724 <- %r10723, %r10721
	cast.64     %r10725 <- (64) %r10724
	store.64    %r10725 -> 0[tl]
	br          .L2550

.L2550:
	load.32     %r10726 <- 0[n]
	add.32      %r10727 <- %r10726, $1
	store.32    %r10727 -> 0[n]
	br          .L2552

.L2551:
	load.64*    %r10728 <- 0[L]
	load.64*    %r10729 <- 0[L]
	load.64*    %r10730 <- 32[%r10729]
	add.64*     %r10731 <- %r10730, $88
	load.64     %r10732 <- 0[tl]
	push.64*    %r10728
	push.64*    %r10731
	push.64     %r10732
	call.64*    %r10733 <- luaZ_openspace
	store.64*   %r10733 -> 0[buffer]
	store.64    $0 -> 0[tl]
	load.32     %r10734 <- 0[n]
	store.32    %r10734 -> 0[i]
	br          .L2560

.L2560:
	load.32     %r10735 <- 0[i]
	setgt.32    %r10736 <- %r10735, $0
	cbr         %r10736, .L2557, .L2559

.L2557:
	load.64*    %r10737 <- 0[top]
	load.32     %r10738 <- 0[i]
	scast.64    %r10739 <- (32) %r10738
	muls.64     %r10740 <- %r10739, $16
	sub.64*     %r10741 <- %r10737, %r10740
	load.64*    %r10742 <- 0[%r10741]
	load.64     %r10743 <- 16[%r10742]
	store.64    %r10743 -> 0[l]
	load.64*    %r10744 <- 0[buffer]
	load.64     %r10745 <- 0[tl]
	add.64*     %r10746 <- %r10744, %r10745
	cast.64*    %r10747 <- (64) %r10746
	load.64*    %r10748 <- 0[top]
	load.32     %r10749 <- 0[i]
	scast.64    %r10750 <- (32) %r10749
	muls.64     %r10751 <- %r10750, $16
	sub.64*     %r10752 <- %r10748, %r10751
	load.64*    %r10753 <- 0[%r10752]
	add.64*     %r10754 <- %r10753, $0
	add.64*     %r10755 <- %r10754, $24
	ptrcast.64* %r10756 <- (64) %r10755
	cast.64*    %r10757 <- (64) %r10756
	load.64     %r10758 <- 0[l]
	push.64*    %r10747
	push.64*    %r10757
	push.64     %r10758
	call.64*    %r10759 <- memcpy
	load.64     %r10760 <- 0[l]
	load.64     %r10761 <- 0[tl]
	cast.64     %r10762 <- (64) %r10761
	add.64      %r10763 <- %r10762, %r10760
	cast.64     %r10764 <- (64) %r10763
	store.64    %r10764 -> 0[tl]
	br          .L2558

.L2558:
	load.32     %r10765 <- 0[i]
	sub.32      %r10766 <- %r10765, $1
	store.32    %r10766 -> 0[i]
	br          .L2560

.L2559:
	load.64*    %r10767 <- 0[top]
	load.32     %r10768 <- 0[n]
	scast.64    %r10769 <- (32) %r10768
	muls.64     %r10770 <- %r10769, $16
	sub.64*     %r10771 <- %r10767, %r10770
	store.64*   %r10771 -> 0[i_o]
	load.64*    %r10772 <- 0[L]
	load.64*    %r10773 <- 0[buffer]
	load.64     %r10774 <- 0[tl]
	push.64*    %r10772
	push.64*    %r10773
	push.64     %r10774
	call.64*    %r10775 <- luaS_newlstr
	ptrcast.64* %r10776 <- (64) %r10775
	load.64*    %r10777 <- 0[i_o]
	store.64*   %r10776 -> 0[%r10777]
	load.64*    %r10778 <- 0[i_o]
	store.32    $4 -> 8[%r10778]
	br          .L2548

.L2548:
	br          .L2542

.L2542:
	load.32     %r10779 <- 0[n]
	sub.32      %r10780 <- %r10779, $1
	load.32     %r10781 <- 0[total]
	scast.32    %r10782 <- (32) %r10781
	sub.32      %r10783 <- %r10782, %r10780
	scast.32    %r10784 <- (32) %r10783
	store.32    %r10784 -> 0[total]
	load.32     %r10785 <- 0[n]
	sub.32      %r10786 <- %r10785, $1
	load.32     %r10787 <- 0[last]
	scast.32    %r10788 <- (32) %r10787
	sub.32      %r10789 <- %r10788, %r10786
	scast.32    %r10790 <- (32) %r10789
	store.32    %r10790 -> 0[last]
	br          .L2533

.L2533:
	load.32     %r10791 <- 0[total]
	setgt.32    %r10792 <- %r10791, $1
	cbr         %r10792, .L2532, .L2534

.L2534:
	ret


Arith:
.L2561:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ra]
	store.64*   %arg3 -> 0[rb]
	store.64*   %arg4 -> 0[rc]
	store.32    %arg5 -> 0[op]
	load.64*    %r10793 <- 0[rb]
	symaddr.64* %r10794 <- tempb
	push.64*    %r10793
	push.64*    %r10794
	call.64*    %r10795 <- luaV_tonumber
	store.64*   %r10795 -> 0[b]
	setne.32    %r10796 <- %r10795, $0
	cbr         %r10796, .L2564, .L2563

.L2564:
	load.64*    %r10797 <- 0[rc]
	symaddr.64* %r10798 <- tempc
	push.64*    %r10797
	push.64*    %r10798
	call.64*    %r10799 <- luaV_tonumber
	store.64*   %r10799 -> 0[c]
	setne.32    %r10800 <- %r10799, $0
	cbr         %r10800, .L2562, .L2563

.L2562:
	load.64*    %r10801 <- 0[b]
	load.f64    %r10802 <- 0[%r10801]
	fpcast.f64  %r10803 <- (64) %r10802
	store.f64   %r10803 -> 0[nb]
	load.64*    %r10804 <- 0[c]
	load.f64    %r10805 <- 0[%r10804]
	fpcast.f64  %r10806 <- (64) %r10805
	store.f64   %r10806 -> 0[nc]
	load.32     %r10807 <- 0[op]
	switch.32   %r10807, 5 -> .L2566, 6 -> .L2567, 7 -> .L2568, 8 -> .L2569, 9 -> .L2570, 10 -> .L2571, 11 -> .L2572, default -> .L2573

.L2566:
	load.64*    %r10808 <- 0[ra]
	store.64*   %r10808 -> 0[i_o]
	load.f64    %r10809 <- 0[nb]
	load.f64    %r10810 <- 0[nc]
	add.f64     %r10811 <- %r10809, %r10810
	load.64*    %r10812 <- 0[i_o]
	store.f64   %r10811 -> 0[%r10812]
	load.64*    %r10813 <- 0[i_o]
	store.32    $3 -> 8[%r10813]
	br          .L2565

.L2567:
	load.64*    %r10814 <- 0[ra]
	store.64*   %r10814 -> 0[i_o]
	load.f64    %r10815 <- 0[nb]
	load.f64    %r10816 <- 0[nc]
	sub.f64     %r10817 <- %r10815, %r10816
	load.64*    %r10818 <- 0[i_o]
	store.f64   %r10817 -> 0[%r10818]
	load.64*    %r10819 <- 0[i_o]
	store.32    $3 -> 8[%r10819]
	br          .L2565

.L2568:
	load.64*    %r10820 <- 0[ra]
	store.64*   %r10820 -> 0[i_o]
	load.f64    %r10821 <- 0[nb]
	load.f64    %r10822 <- 0[nc]
	mulu.f64    %r10823 <- %r10821, %r10822
	load.64*    %r10824 <- 0[i_o]
	store.f64   %r10823 -> 0[%r10824]
	load.64*    %r10825 <- 0[i_o]
	store.32    $3 -> 8[%r10825]
	br          .L2565

.L2569:
	load.64*    %r10826 <- 0[ra]
	store.64*   %r10826 -> 0[i_o]
	load.f64    %r10827 <- 0[nb]
	load.f64    %r10828 <- 0[nc]
	divu.f64    %r10829 <- %r10827, %r10828
	load.64*    %r10830 <- 0[i_o]
	store.f64   %r10829 -> 0[%r10830]
	load.64*    %r10831 <- 0[i_o]
	store.32    $3 -> 8[%r10831]
	br          .L2565

.L2570:
	load.64*    %r10832 <- 0[ra]
	store.64*   %r10832 -> 0[i_o]
	load.f64    %r10833 <- 0[nb]
	load.f64    %r10834 <- 0[nb]
	load.f64    %r10835 <- 0[nc]
	divu.f64    %r10836 <- %r10834, %r10835
	push.f64    %r10836
	call.f64    %r10837 <- floor
	load.f64    %r10838 <- 0[nc]
	mulu.f64    %r10839 <- %r10837, %r10838
	sub.f64     %r10840 <- %r10833, %r10839
	load.64*    %r10841 <- 0[i_o]
	store.f64   %r10840 -> 0[%r10841]
	load.64*    %r10842 <- 0[i_o]
	store.32    $3 -> 8[%r10842]
	br          .L2565

.L2571:
	load.64*    %r10843 <- 0[ra]
	store.64*   %r10843 -> 0[i_o]
	load.f64    %r10844 <- 0[nb]
	load.f64    %r10845 <- 0[nc]
	push.f64    %r10844
	push.f64    %r10845
	call.f64    %r10846 <- pow
	load.64*    %r10847 <- 0[i_o]
	store.f64   %r10846 -> 0[%r10847]
	load.64*    %r10848 <- 0[i_o]
	store.32    $3 -> 8[%r10848]
	br          .L2565

.L2572:
	load.64*    %r10849 <- 0[ra]
	store.64*   %r10849 -> 0[i_o]
	load.f64    %r10850 <- 0[nb]
	neg.f64     %r10851 <- %r10850
	load.64*    %r10852 <- 0[i_o]
	store.f64   %r10851 -> 0[%r10852]
	load.64*    %r10853 <- 0[i_o]
	store.32    $3 -> 8[%r10853]
	br          .L2565

.L2573:
	br          .L2565

.L2565:
	br          .L2574

.L2563:
	load.64*    %r10854 <- 0[L]
	load.64*    %r10855 <- 0[rb]
	load.64*    %r10856 <- 0[rc]
	load.64*    %r10857 <- 0[ra]
	load.32     %r10858 <- 0[op]
	push.64*    %r10854
	push.64*    %r10855
	push.64*    %r10856
	push.64*    %r10857
	push.32     %r10858
	call.32     %r10859 <- call_binTM
	cbr         %r10859, .L2576, .L2575

.L2575:
	load.64*    %r10860 <- 0[L]
	load.64*    %r10861 <- 0[rb]
	load.64*    %r10862 <- 0[rc]
	push.64*    %r10860
	push.64*    %r10861
	push.64*    %r10862
	call        luaG_aritherror
	br          .L2576

.L2576:
	br          .L2574

.L2574:
	ret


luaV_execute:
.L2577:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nexeccalls]
	br          .L2578

.L2578:
	load.64*    %r10863 <- 0[L]
	load.64*    %r10864 <- 48[%r10863]
	store.64*   %r10864 -> 0[pc]
	load.64*    %r10865 <- 0[L]
	load.64*    %r10866 <- 40[%r10865]
	load.64*    %r10867 <- 8[%r10866]
	load.64*    %r10868 <- 0[%r10867]
	add.64*     %r10869 <- %r10868, $0
	add.64*     %r10870 <- %r10869, $0
	store.64*   %r10870 -> 0[cl]
	load.64*    %r10871 <- 0[L]
	load.64*    %r10872 <- 24[%r10871]
	store.64*   %r10872 -> 0[base]
	load.64*    %r10873 <- 0[cl]
	load.64*    %r10874 <- 32[%r10873]
	load.64*    %r10875 <- 16[%r10874]
	store.64*   %r10875 -> 0[k]
	br          .L2582

.L2582:
	br          .L2579

.L2579:
	load.64*    %r10876 <- 0[pc]
	add.64*     %r10877 <- %r10876, $4
	store.64*   %r10877 -> 0[pc]
	load.32     %r10878 <- 0[%r10876]
	store.32    %r10878 -> 0[i]
	load.64*    %r10879 <- 0[base]
	load.32     %r10880 <- 0[i]
	cast.32     %r10881 <- (32) %r10880
	lsr.32      %r10882 <- %r10881, $6
	and.32      %r10883 <- %r10882, $255
	cast.32     %r10884 <- (32) %r10883
	scast.64    %r10885 <- (32) %r10884
	muls.64     %r10886 <- %r10885, $16
	add.64*     %r10887 <- %r10879, %r10886
	store.64*   %r10887 -> 0[ra]
	load.32     %r10888 <- 0[i]
	cast.32     %r10889 <- (32) %r10888
	lsr.32      %r10890 <- %r10889, $0
	and.32      %r10891 <- %r10890, $63
	cast.32     %r10892 <- (32) %r10891
	switch.32   %r10892, 0 -> .L2584, 1 -> .L2585, 2 -> .L2586, 3 -> .L2587, 4 -> .L2588, 5 -> .L2589, 6 -> .L2590, 7 -> .L2591, 8 -> .L2592, 9 -> .L2593, 10 -> .L2594, 11 -> .L2595, 12 -> .L2596, 13 -> .L2597, 14 -> .L2598, 15 -> .L2599, 16 -> .L2600, 17 -> .L2601, 18 -> .L2602, 19 -> .L2603, 20 -> .L2604, 21 -> .L2605, 22 -> .L2606, 23 -> .L2607, 24 -> .L2608, 25 -> .L2609, 26 -> .L2610, 27 -> .L2611, 28 -> .L2612, 29 -> .L2613, 30 -> .L2614, 31 -> .L2615, 32 -> .L2616, 33 -> .L2617, 34 -> .L2618, 35 -> .L2619, 36 -> .L2620, 37 -> .L2621, default -> .L2583

.L2584:
	load.64*    %r10893 <- 0[base]
	load.32     %r10894 <- 0[i]
	cast.32     %r10895 <- (32) %r10894
	lsr.32      %r10896 <- %r10895, $23
	and.32      %r10897 <- %r10896, $511
	cast.32     %r10898 <- (32) %r10897
	scast.64    %r10899 <- (32) %r10898
	muls.64     %r10900 <- %r10899, $16
	add.64*     %r10901 <- %r10893, %r10900
	store.64*   %r10901 -> 0[o2]
	load.64*    %r10902 <- 0[ra]
	store.64*   %r10902 -> 0[o1]
	load.64*    %r10903 <- 0[o2]
	load.f64    %r10904 <- 0[%r10903]
	fpcast.f64  %r10905 <- (64) %r10904
	load.64*    %r10906 <- 0[o1]
	store.f64   %r10905 -> 0[%r10906]
	load.64*    %r10907 <- 0[o2]
	load.32     %r10908 <- 8[%r10907]
	scast.32    %r10909 <- (32) %r10908
	load.64*    %r10910 <- 0[o1]
	store.32    %r10909 -> 8[%r10910]
	br          .L2580

.L2585:
	load.64*    %r10911 <- 0[k]
	load.32     %r10912 <- 0[i]
	cast.32     %r10913 <- (32) %r10912
	lsr.32      %r10914 <- %r10913, $14
	and.32      %r10915 <- %r10914, $0x3ffff
	cast.32     %r10916 <- (32) %r10915
	scast.64    %r10917 <- (32) %r10916
	muls.64     %r10918 <- %r10917, $16
	add.64*     %r10919 <- %r10911, %r10918
	store.64*   %r10919 -> 0[o2]
	load.64*    %r10920 <- 0[ra]
	store.64*   %r10920 -> 0[o1]
	load.64*    %r10921 <- 0[o2]
	load.f64    %r10922 <- 0[%r10921]
	fpcast.f64  %r10923 <- (64) %r10922
	load.64*    %r10924 <- 0[o1]
	store.f64   %r10923 -> 0[%r10924]
	load.64*    %r10925 <- 0[o2]
	load.32     %r10926 <- 8[%r10925]
	scast.32    %r10927 <- (32) %r10926
	load.64*    %r10928 <- 0[o1]
	store.32    %r10927 -> 8[%r10928]
	br          .L2580

.L2586:
	load.64*    %r10929 <- 0[ra]
	store.64*   %r10929 -> 0[i_o]
	load.32     %r10930 <- 0[i]
	cast.32     %r10931 <- (32) %r10930
	lsr.32      %r10932 <- %r10931, $23
	and.32      %r10933 <- %r10932, $511
	cast.32     %r10934 <- (32) %r10933
	load.64*    %r10935 <- 0[i_o]
	store.32    %r10934 -> 0[%r10935]
	load.64*    %r10936 <- 0[i_o]
	store.32    $1 -> 8[%r10936]
	load.32     %r10937 <- 0[i]
	cast.32     %r10938 <- (32) %r10937
	lsr.32      %r10939 <- %r10938, $14
	and.32      %r10940 <- %r10939, $511
	cast.32     %r10941 <- (32) %r10940
	cbr         %r10941, .L2622, .L2623

.L2622:
	load.64*    %r10942 <- 0[pc]
	add.64*     %r10943 <- %r10942, $4
	store.64*   %r10943 -> 0[pc]
	br          .L2623

.L2623:
	br          .L2580

.L2587:
	load.64*    %r10944 <- 0[base]
	load.32     %r10945 <- 0[i]
	cast.32     %r10946 <- (32) %r10945
	lsr.32      %r10947 <- %r10946, $23
	and.32      %r10948 <- %r10947, $511
	cast.32     %r10949 <- (32) %r10948
	scast.64    %r10950 <- (32) %r10949
	muls.64     %r10951 <- %r10950, $16
	add.64*     %r10952 <- %r10944, %r10951
	store.64*   %r10952 -> 0[rb]
	br          .L2624

.L2624:
	load.64*    %r10953 <- 0[rb]
	sub.64*     %r10954 <- %r10953, $16
	store.64*   %r10954 -> 0[rb]
	store.32    $0 -> 8[%r10953]
	br          .L2625

.L2625:
	load.64*    %r10955 <- 0[rb]
	load.64*    %r10956 <- 0[ra]
	setae.32    %r10957 <- %r10955, %r10956
	cbr         %r10957, .L2624, .L2626

.L2626:
	br          .L2580

.L2588:
	load.32     %r10958 <- 0[i]
	cast.32     %r10959 <- (32) %r10958
	lsr.32      %r10960 <- %r10959, $23
	and.32      %r10961 <- %r10960, $511
	cast.32     %r10962 <- (32) %r10961
	store.32    %r10962 -> 0[b]
	load.64*    %r10963 <- 0[cl]
	add.64*     %r10964 <- %r10963, $40
	load.32     %r10965 <- 0[b]
	scast.64    %r10966 <- (32) %r10965
	muls.64     %r10967 <- %r10966, $8
	add.64*     %r10968 <- %r10964, %r10967
	load.64*    %r10969 <- 0[%r10968]
	load.64*    %r10970 <- 16[%r10969]
	store.64*   %r10970 -> 0[o2]
	load.64*    %r10971 <- 0[ra]
	store.64*   %r10971 -> 0[o1]
	load.64*    %r10972 <- 0[o2]
	load.f64    %r10973 <- 0[%r10972]
	fpcast.f64  %r10974 <- (64) %r10973
	load.64*    %r10975 <- 0[o1]
	store.f64   %r10974 -> 0[%r10975]
	load.64*    %r10976 <- 0[o2]
	load.32     %r10977 <- 8[%r10976]
	scast.32    %r10978 <- (32) %r10977
	load.64*    %r10979 <- 0[o1]
	store.32    %r10978 -> 8[%r10979]
	br          .L2580

.L2589:
	load.64*    %r10980 <- 0[k]
	load.32     %r10981 <- 0[i]
	cast.32     %r10982 <- (32) %r10981
	lsr.32      %r10983 <- %r10982, $14
	and.32      %r10984 <- %r10983, $0x3ffff
	cast.32     %r10985 <- (32) %r10984
	scast.64    %r10986 <- (32) %r10985
	muls.64     %r10987 <- %r10986, $16
	add.64*     %r10988 <- %r10980, %r10987
	store.64*   %r10988 -> 0[rb]
	symaddr.64* %r10989 <- g
	store.64*   %r10989 -> 0[i_o]
	load.64*    %r10990 <- 0[cl]
	load.64*    %r10991 <- 24[%r10990]
	ptrcast.64* %r10992 <- (64) %r10991
	load.64*    %r10993 <- 0[i_o]
	store.64*   %r10992 -> 0[%r10993]
	load.64*    %r10994 <- 0[i_o]
	store.32    $5 -> 8[%r10994]
	load.64*    %r10995 <- 0[pc]
	load.64*    %r10996 <- 0[L]
	store.64*   %r10995 -> 48[%r10996]
	load.64*    %r10997 <- 0[L]
	symaddr.64* %r10998 <- g
	load.64*    %r10999 <- 0[rb]
	load.64*    %r11000 <- 0[ra]
	push.64*    %r10997
	push.64*    %r10998
	push.64*    %r10999
	push.64*    %r11000
	call        luaV_gettable
	load.64*    %r11001 <- 0[L]
	load.64*    %r11002 <- 24[%r11001]
	store.64*   %r11002 -> 0[base]
	br          .L2580

.L2590:
	load.64*    %r11003 <- 0[pc]
	load.64*    %r11004 <- 0[L]
	store.64*   %r11003 -> 48[%r11004]
	load.64*    %r11005 <- 0[L]
	load.64*    %r11006 <- 0[base]
	load.32     %r11007 <- 0[i]
	cast.32     %r11008 <- (32) %r11007
	lsr.32      %r11009 <- %r11008, $23
	and.32      %r11010 <- %r11009, $511
	cast.32     %r11011 <- (32) %r11010
	scast.64    %r11012 <- (32) %r11011
	muls.64     %r11013 <- %r11012, $16
	add.64*     %r11014 <- %r11006, %r11013
	load.32     %r11015 <- 0[i]
	cast.32     %r11016 <- (32) %r11015
	lsr.32      %r11017 <- %r11016, $14
	and.32      %r11018 <- %r11017, $511
	cast.32     %r11019 <- (32) %r11018
	and.32      %r11020 <- %r11019, $256
	cbr         %r11020, .L2627, .L2628

.L2627:
	load.64*    %r11021 <- 0[k]
	load.32     %r11022 <- 0[i]
	cast.32     %r11023 <- (32) %r11022
	lsr.32      %r11024 <- %r11023, $14
	and.32      %r11025 <- %r11024, $511
	cast.32     %r11026 <- (32) %r11025
	scast.32    %r11027 <- (32) %r11026
	and.32      %r11028 <- %r11027, $0xfffffeff
	scast.64    %r11029 <- (32) %r11028
	muls.64     %r11030 <- %r11029, $16
	add.64*     %r11031 <- %r11021, %r11030
	phisrc.64*  %phi463 <- %r11031
	br          .L2629

.L2628:
	load.64*    %r11032 <- 0[base]
	load.32     %r11033 <- 0[i]
	cast.32     %r11034 <- (32) %r11033
	lsr.32      %r11035 <- %r11034, $14
	and.32      %r11036 <- %r11035, $511
	cast.32     %r11037 <- (32) %r11036
	scast.64    %r11038 <- (32) %r11037
	muls.64     %r11039 <- %r11038, $16
	add.64*     %r11040 <- %r11032, %r11039
	ptrcast.64* %r11041 <- (64) %r11040
	phisrc.64*  %phi464 <- %r11041
	br          .L2629

.L2629:
	phi.64*     %r11042 <- %phi463, %phi464
	load.64*    %r11043 <- 0[ra]
	push.64*    %r11005
	push.64*    %r11014
	push.64*    %r11042
	push.64*    %r11043
	call        luaV_gettable
	load.64*    %r11044 <- 0[L]
	load.64*    %r11045 <- 24[%r11044]
	store.64*   %r11045 -> 0[base]
	br          .L2580

.L2591:
	symaddr.64* %r11046 <- g
	store.64*   %r11046 -> 0[i_o]
	load.64*    %r11047 <- 0[cl]
	load.64*    %r11048 <- 24[%r11047]
	ptrcast.64* %r11049 <- (64) %r11048
	load.64*    %r11050 <- 0[i_o]
	store.64*   %r11049 -> 0[%r11050]
	load.64*    %r11051 <- 0[i_o]
	store.32    $5 -> 8[%r11051]
	load.64*    %r11052 <- 0[pc]
	load.64*    %r11053 <- 0[L]
	store.64*   %r11052 -> 48[%r11053]
	load.64*    %r11054 <- 0[L]
	symaddr.64* %r11055 <- g
	load.64*    %r11056 <- 0[k]
	load.32     %r11057 <- 0[i]
	cast.32     %r11058 <- (32) %r11057
	lsr.32      %r11059 <- %r11058, $14
	and.32      %r11060 <- %r11059, $0x3ffff
	cast.32     %r11061 <- (32) %r11060
	scast.64    %r11062 <- (32) %r11061
	muls.64     %r11063 <- %r11062, $16
	add.64*     %r11064 <- %r11056, %r11063
	load.64*    %r11065 <- 0[ra]
	push.64*    %r11054
	push.64*    %r11055
	push.64*    %r11064
	push.64*    %r11065
	call        luaV_settable
	load.64*    %r11066 <- 0[L]
	load.64*    %r11067 <- 24[%r11066]
	store.64*   %r11067 -> 0[base]
	br          .L2580

.L2592:
	load.64*    %r11068 <- 0[cl]
	add.64*     %r11069 <- %r11068, $40
	load.32     %r11070 <- 0[i]
	cast.32     %r11071 <- (32) %r11070
	lsr.32      %r11072 <- %r11071, $23
	and.32      %r11073 <- %r11072, $511
	cast.32     %r11074 <- (32) %r11073
	scast.64    %r11075 <- (32) %r11074
	muls.64     %r11076 <- %r11075, $8
	add.64*     %r11077 <- %r11069, %r11076
	load.64*    %r11078 <- 0[%r11077]
	store.64*   %r11078 -> 0[uv]
	load.64*    %r11079 <- 0[ra]
	store.64*   %r11079 -> 0[o2]
	load.64*    %r11080 <- 0[uv]
	load.64*    %r11081 <- 16[%r11080]
	store.64*   %r11081 -> 0[o1]
	load.64*    %r11082 <- 0[o2]
	load.f64    %r11083 <- 0[%r11082]
	fpcast.f64  %r11084 <- (64) %r11083
	load.64*    %r11085 <- 0[o1]
	store.f64   %r11084 -> 0[%r11085]
	load.64*    %r11086 <- 0[o2]
	load.32     %r11087 <- 8[%r11086]
	scast.32    %r11088 <- (32) %r11087
	load.64*    %r11089 <- 0[o1]
	store.32    %r11088 -> 8[%r11089]
	load.64*    %r11090 <- 0[ra]
	load.32     %r11091 <- 8[%r11090]
	setge.32    %r11092 <- %r11091, $4
	cbr         %r11092, .L2633, .L2631

.L2633:
	load.64*    %r11093 <- 0[ra]
	load.64*    %r11094 <- 0[%r11093]
	load.8      %r11095 <- 9[%r11094]
	cast.32     %r11096 <- (8) %r11095
	and.32      %r11097 <- %r11096, $3
	cbr         %r11097, .L2632, .L2631

.L2632:
	load.64*    %r11098 <- 0[uv]
	ptrcast.64* %r11099 <- (64) %r11098
	load.8      %r11100 <- 9[%r11099]
	cast.32     %r11101 <- (8) %r11100
	and.32      %r11102 <- %r11101, $4
	cbr         %r11102, .L2630, .L2631

.L2630:
	load.64*    %r11103 <- 0[L]
	load.64*    %r11104 <- 0[uv]
	ptrcast.64* %r11105 <- (64) %r11104
	load.64*    %r11106 <- 0[ra]
	load.64*    %r11107 <- 0[%r11106]
	push.64*    %r11103
	push.64*    %r11105
	push.64*    %r11107
	call        luaC_barrierf
	br          .L2631

.L2631:
	br          .L2580

.L2593:
	load.64*    %r11108 <- 0[pc]
	load.64*    %r11109 <- 0[L]
	store.64*   %r11108 -> 48[%r11109]
	load.64*    %r11110 <- 0[L]
	load.64*    %r11111 <- 0[ra]
	load.32     %r11112 <- 0[i]
	cast.32     %r11113 <- (32) %r11112
	lsr.32      %r11114 <- %r11113, $23
	and.32      %r11115 <- %r11114, $511
	cast.32     %r11116 <- (32) %r11115
	and.32      %r11117 <- %r11116, $256
	cbr         %r11117, .L2634, .L2635

.L2634:
	load.64*    %r11118 <- 0[k]
	load.32     %r11119 <- 0[i]
	cast.32     %r11120 <- (32) %r11119
	lsr.32      %r11121 <- %r11120, $23
	and.32      %r11122 <- %r11121, $511
	cast.32     %r11123 <- (32) %r11122
	scast.32    %r11124 <- (32) %r11123
	and.32      %r11125 <- %r11124, $0xfffffeff
	scast.64    %r11126 <- (32) %r11125
	muls.64     %r11127 <- %r11126, $16
	add.64*     %r11128 <- %r11118, %r11127
	phisrc.64*  %phi465 <- %r11128
	br          .L2636

.L2635:
	load.64*    %r11129 <- 0[base]
	load.32     %r11130 <- 0[i]
	cast.32     %r11131 <- (32) %r11130
	lsr.32      %r11132 <- %r11131, $23
	and.32      %r11133 <- %r11132, $511
	cast.32     %r11134 <- (32) %r11133
	scast.64    %r11135 <- (32) %r11134
	muls.64     %r11136 <- %r11135, $16
	add.64*     %r11137 <- %r11129, %r11136
	ptrcast.64* %r11138 <- (64) %r11137
	phisrc.64*  %phi466 <- %r11138
	br          .L2636

.L2636:
	phi.64*     %r11139 <- %phi465, %phi466
	load.32     %r11140 <- 0[i]
	cast.32     %r11141 <- (32) %r11140
	lsr.32      %r11142 <- %r11141, $14
	and.32      %r11143 <- %r11142, $511
	cast.32     %r11144 <- (32) %r11143
	and.32      %r11145 <- %r11144, $256
	cbr         %r11145, .L2637, .L2638

.L2637:
	load.64*    %r11146 <- 0[k]
	load.32     %r11147 <- 0[i]
	cast.32     %r11148 <- (32) %r11147
	lsr.32      %r11149 <- %r11148, $14
	and.32      %r11150 <- %r11149, $511
	cast.32     %r11151 <- (32) %r11150
	scast.32    %r11152 <- (32) %r11151
	and.32      %r11153 <- %r11152, $0xfffffeff
	scast.64    %r11154 <- (32) %r11153
	muls.64     %r11155 <- %r11154, $16
	add.64*     %r11156 <- %r11146, %r11155
	phisrc.64*  %phi467 <- %r11156
	br          .L2639

.L2638:
	load.64*    %r11157 <- 0[base]
	load.32     %r11158 <- 0[i]
	cast.32     %r11159 <- (32) %r11158
	lsr.32      %r11160 <- %r11159, $14
	and.32      %r11161 <- %r11160, $511
	cast.32     %r11162 <- (32) %r11161
	scast.64    %r11163 <- (32) %r11162
	muls.64     %r11164 <- %r11163, $16
	add.64*     %r11165 <- %r11157, %r11164
	ptrcast.64* %r11166 <- (64) %r11165
	phisrc.64*  %phi468 <- %r11166
	br          .L2639

.L2639:
	phi.64*     %r11167 <- %phi467, %phi468
	push.64*    %r11110
	push.64*    %r11111
	push.64*    %r11139
	push.64*    %r11167
	call        luaV_settable
	load.64*    %r11168 <- 0[L]
	load.64*    %r11169 <- 24[%r11168]
	store.64*   %r11169 -> 0[base]
	br          .L2580

.L2594:
	load.32     %r11170 <- 0[i]
	cast.32     %r11171 <- (32) %r11170
	lsr.32      %r11172 <- %r11171, $23
	and.32      %r11173 <- %r11172, $511
	cast.32     %r11174 <- (32) %r11173
	store.32    %r11174 -> 0[b]
	load.32     %r11175 <- 0[i]
	cast.32     %r11176 <- (32) %r11175
	lsr.32      %r11177 <- %r11176, $14
	and.32      %r11178 <- %r11177, $511
	cast.32     %r11179 <- (32) %r11178
	store.32    %r11179 -> 0[c]
	load.64*    %r11180 <- 0[ra]
	store.64*   %r11180 -> 0[i_o]
	load.64*    %r11181 <- 0[L]
	load.32     %r11182 <- 0[b]
	push.32     %r11182
	call.32     %r11183 <- luaO_fb2int
	load.32     %r11184 <- 0[c]
	push.32     %r11184
	call.32     %r11185 <- luaO_fb2int
	push.64*    %r11181
	push.32     %r11183
	push.32     %r11185
	call.64*    %r11186 <- luaH_new
	ptrcast.64* %r11187 <- (64) %r11186
	load.64*    %r11188 <- 0[i_o]
	store.64*   %r11187 -> 0[%r11188]
	load.64*    %r11189 <- 0[i_o]
	store.32    $5 -> 8[%r11189]
	load.64*    %r11190 <- 0[pc]
	load.64*    %r11191 <- 0[L]
	store.64*   %r11190 -> 48[%r11191]
	load.64*    %r11192 <- 0[L]
	load.64*    %r11193 <- 32[%r11192]
	load.64     %r11194 <- 120[%r11193]
	load.64*    %r11195 <- 0[L]
	load.64*    %r11196 <- 32[%r11195]
	load.64     %r11197 <- 112[%r11196]
	setae.32    %r11198 <- %r11194, %r11197
	cbr         %r11198, .L2640, .L2641

.L2640:
	load.64*    %r11199 <- 0[L]
	push.64*    %r11199
	call        luaC_step
	br          .L2641

.L2641:
	load.64*    %r11200 <- 0[L]
	load.64*    %r11201 <- 24[%r11200]
	store.64*   %r11201 -> 0[base]
	br          .L2580

.L2595:
	load.64*    %r11202 <- 0[base]
	load.32     %r11203 <- 0[i]
	cast.32     %r11204 <- (32) %r11203
	lsr.32      %r11205 <- %r11204, $23
	and.32      %r11206 <- %r11205, $511
	cast.32     %r11207 <- (32) %r11206
	scast.64    %r11208 <- (32) %r11207
	muls.64     %r11209 <- %r11208, $16
	add.64*     %r11210 <- %r11202, %r11209
	store.64*   %r11210 -> 0[rb]
	load.64*    %r11211 <- 0[rb]
	store.64*   %r11211 -> 0[o2]
	load.64*    %r11212 <- 0[ra]
	add.64*     %r11213 <- %r11212, $16
	store.64*   %r11213 -> 0[o1]
	load.64*    %r11214 <- 0[o2]
	load.f64    %r11215 <- 0[%r11214]
	fpcast.f64  %r11216 <- (64) %r11215
	load.64*    %r11217 <- 0[o1]
	store.f64   %r11216 -> 0[%r11217]
	load.64*    %r11218 <- 0[o2]
	load.32     %r11219 <- 8[%r11218]
	scast.32    %r11220 <- (32) %r11219
	load.64*    %r11221 <- 0[o1]
	store.32    %r11220 -> 8[%r11221]
	load.64*    %r11222 <- 0[pc]
	load.64*    %r11223 <- 0[L]
	store.64*   %r11222 -> 48[%r11223]
	load.64*    %r11224 <- 0[L]
	load.64*    %r11225 <- 0[rb]
	load.32     %r11226 <- 0[i]
	cast.32     %r11227 <- (32) %r11226
	lsr.32      %r11228 <- %r11227, $14
	and.32      %r11229 <- %r11228, $511
	cast.32     %r11230 <- (32) %r11229
	and.32      %r11231 <- %r11230, $256
	cbr         %r11231, .L2642, .L2643

.L2642:
	load.64*    %r11232 <- 0[k]
	load.32     %r11233 <- 0[i]
	cast.32     %r11234 <- (32) %r11233
	lsr.32      %r11235 <- %r11234, $14
	and.32      %r11236 <- %r11235, $511
	cast.32     %r11237 <- (32) %r11236
	scast.32    %r11238 <- (32) %r11237
	and.32      %r11239 <- %r11238, $0xfffffeff
	scast.64    %r11240 <- (32) %r11239
	muls.64     %r11241 <- %r11240, $16
	add.64*     %r11242 <- %r11232, %r11241
	phisrc.64*  %phi469 <- %r11242
	br          .L2644

.L2643:
	load.64*    %r11243 <- 0[base]
	load.32     %r11244 <- 0[i]
	cast.32     %r11245 <- (32) %r11244
	lsr.32      %r11246 <- %r11245, $14
	and.32      %r11247 <- %r11246, $511
	cast.32     %r11248 <- (32) %r11247
	scast.64    %r11249 <- (32) %r11248
	muls.64     %r11250 <- %r11249, $16
	add.64*     %r11251 <- %r11243, %r11250
	ptrcast.64* %r11252 <- (64) %r11251
	phisrc.64*  %phi470 <- %r11252
	br          .L2644

.L2644:
	phi.64*     %r11253 <- %phi469, %phi470
	load.64*    %r11254 <- 0[ra]
	push.64*    %r11224
	push.64*    %r11225
	push.64*    %r11253
	push.64*    %r11254
	call        luaV_gettable
	load.64*    %r11255 <- 0[L]
	load.64*    %r11256 <- 24[%r11255]
	store.64*   %r11256 -> 0[base]
	br          .L2580

.L2596:
	load.32     %r11257 <- 0[i]
	cast.32     %r11258 <- (32) %r11257
	lsr.32      %r11259 <- %r11258, $23
	and.32      %r11260 <- %r11259, $511
	cast.32     %r11261 <- (32) %r11260
	and.32      %r11262 <- %r11261, $256
	cbr         %r11262, .L2645, .L2646

.L2645:
	load.64*    %r11263 <- 0[k]
	load.32     %r11264 <- 0[i]
	cast.32     %r11265 <- (32) %r11264
	lsr.32      %r11266 <- %r11265, $23
	and.32      %r11267 <- %r11266, $511
	cast.32     %r11268 <- (32) %r11267
	scast.32    %r11269 <- (32) %r11268
	and.32      %r11270 <- %r11269, $0xfffffeff
	scast.64    %r11271 <- (32) %r11270
	muls.64     %r11272 <- %r11271, $16
	add.64*     %r11273 <- %r11263, %r11272
	phisrc.64*  %phi471 <- %r11273
	br          .L2647

.L2646:
	load.64*    %r11274 <- 0[base]
	load.32     %r11275 <- 0[i]
	cast.32     %r11276 <- (32) %r11275
	lsr.32      %r11277 <- %r11276, $23
	and.32      %r11278 <- %r11277, $511
	cast.32     %r11279 <- (32) %r11278
	scast.64    %r11280 <- (32) %r11279
	muls.64     %r11281 <- %r11280, $16
	add.64*     %r11282 <- %r11274, %r11281
	ptrcast.64* %r11283 <- (64) %r11282
	phisrc.64*  %phi472 <- %r11283
	br          .L2647

.L2647:
	phi.64*     %r11284 <- %phi471, %phi472
	store.64*   %r11284 -> 0[rb]
	load.32     %r11285 <- 0[i]
	cast.32     %r11286 <- (32) %r11285
	lsr.32      %r11287 <- %r11286, $14
	and.32      %r11288 <- %r11287, $511
	cast.32     %r11289 <- (32) %r11288
	and.32      %r11290 <- %r11289, $256
	cbr         %r11290, .L2648, .L2649

.L2648:
	load.64*    %r11291 <- 0[k]
	load.32     %r11292 <- 0[i]
	cast.32     %r11293 <- (32) %r11292
	lsr.32      %r11294 <- %r11293, $14
	and.32      %r11295 <- %r11294, $511
	cast.32     %r11296 <- (32) %r11295
	scast.32    %r11297 <- (32) %r11296
	and.32      %r11298 <- %r11297, $0xfffffeff
	scast.64    %r11299 <- (32) %r11298
	muls.64     %r11300 <- %r11299, $16
	add.64*     %r11301 <- %r11291, %r11300
	phisrc.64*  %phi473 <- %r11301
	br          .L2650

.L2649:
	load.64*    %r11302 <- 0[base]
	load.32     %r11303 <- 0[i]
	cast.32     %r11304 <- (32) %r11303
	lsr.32      %r11305 <- %r11304, $14
	and.32      %r11306 <- %r11305, $511
	cast.32     %r11307 <- (32) %r11306
	scast.64    %r11308 <- (32) %r11307
	muls.64     %r11309 <- %r11308, $16
	add.64*     %r11310 <- %r11302, %r11309
	ptrcast.64* %r11311 <- (64) %r11310
	phisrc.64*  %phi474 <- %r11311
	br          .L2650

.L2650:
	phi.64*     %r11312 <- %phi473, %phi474
	store.64*   %r11312 -> 0[rc]
	load.64*    %r11313 <- 0[rb]
	load.32     %r11314 <- 8[%r11313]
	seteq.32    %r11315 <- %r11314, $3
	cbr         %r11315, .L2653, .L2652

.L2653:
	load.64*    %r11316 <- 0[rc]
	load.32     %r11317 <- 8[%r11316]
	seteq.32    %r11318 <- %r11317, $3
	cbr         %r11318, .L2651, .L2652

.L2651:
	load.64*    %r11319 <- 0[rb]
	load.f64    %r11320 <- 0[%r11319]
	store.f64   %r11320 -> 0[nb]
	load.64*    %r11321 <- 0[rc]
	load.f64    %r11322 <- 0[%r11321]
	store.f64   %r11322 -> 0[nc]
	load.64*    %r11323 <- 0[ra]
	store.64*   %r11323 -> 0[i_o]
	load.f64    %r11324 <- 0[nb]
	load.f64    %r11325 <- 0[nc]
	add.f64     %r11326 <- %r11324, %r11325
	load.64*    %r11327 <- 0[i_o]
	store.f64   %r11326 -> 0[%r11327]
	load.64*    %r11328 <- 0[i_o]
	store.32    $3 -> 8[%r11328]
	br          .L2654

.L2652:
	load.64*    %r11329 <- 0[pc]
	load.64*    %r11330 <- 0[L]
	store.64*   %r11329 -> 48[%r11330]
	load.64*    %r11331 <- 0[L]
	load.64*    %r11332 <- 0[ra]
	load.64*    %r11333 <- 0[rb]
	load.64*    %r11334 <- 0[rc]
	push.64*    %r11331
	push.64*    %r11332
	push.64*    %r11333
	push.64*    %r11334
	push.32     $5
	call        Arith
	load.64*    %r11335 <- 0[L]
	load.64*    %r11336 <- 24[%r11335]
	store.64*   %r11336 -> 0[base]
	br          .L2654

.L2654:
	br          .L2580

.L2597:
	load.32     %r11337 <- 0[i]
	cast.32     %r11338 <- (32) %r11337
	lsr.32      %r11339 <- %r11338, $23
	and.32      %r11340 <- %r11339, $511
	cast.32     %r11341 <- (32) %r11340
	and.32      %r11342 <- %r11341, $256
	cbr         %r11342, .L2655, .L2656

.L2655:
	load.64*    %r11343 <- 0[k]
	load.32     %r11344 <- 0[i]
	cast.32     %r11345 <- (32) %r11344
	lsr.32      %r11346 <- %r11345, $23
	and.32      %r11347 <- %r11346, $511
	cast.32     %r11348 <- (32) %r11347
	scast.32    %r11349 <- (32) %r11348
	and.32      %r11350 <- %r11349, $0xfffffeff
	scast.64    %r11351 <- (32) %r11350
	muls.64     %r11352 <- %r11351, $16
	add.64*     %r11353 <- %r11343, %r11352
	phisrc.64*  %phi475 <- %r11353
	br          .L2657

.L2656:
	load.64*    %r11354 <- 0[base]
	load.32     %r11355 <- 0[i]
	cast.32     %r11356 <- (32) %r11355
	lsr.32      %r11357 <- %r11356, $23
	and.32      %r11358 <- %r11357, $511
	cast.32     %r11359 <- (32) %r11358
	scast.64    %r11360 <- (32) %r11359
	muls.64     %r11361 <- %r11360, $16
	add.64*     %r11362 <- %r11354, %r11361
	ptrcast.64* %r11363 <- (64) %r11362
	phisrc.64*  %phi476 <- %r11363
	br          .L2657

.L2657:
	phi.64*     %r11364 <- %phi475, %phi476
	store.64*   %r11364 -> 0[rb]
	load.32     %r11365 <- 0[i]
	cast.32     %r11366 <- (32) %r11365
	lsr.32      %r11367 <- %r11366, $14
	and.32      %r11368 <- %r11367, $511
	cast.32     %r11369 <- (32) %r11368
	and.32      %r11370 <- %r11369, $256
	cbr         %r11370, .L2658, .L2659

.L2658:
	load.64*    %r11371 <- 0[k]
	load.32     %r11372 <- 0[i]
	cast.32     %r11373 <- (32) %r11372
	lsr.32      %r11374 <- %r11373, $14
	and.32      %r11375 <- %r11374, $511
	cast.32     %r11376 <- (32) %r11375
	scast.32    %r11377 <- (32) %r11376
	and.32      %r11378 <- %r11377, $0xfffffeff
	scast.64    %r11379 <- (32) %r11378
	muls.64     %r11380 <- %r11379, $16
	add.64*     %r11381 <- %r11371, %r11380
	phisrc.64*  %phi477 <- %r11381
	br          .L2660

.L2659:
	load.64*    %r11382 <- 0[base]
	load.32     %r11383 <- 0[i]
	cast.32     %r11384 <- (32) %r11383
	lsr.32      %r11385 <- %r11384, $14
	and.32      %r11386 <- %r11385, $511
	cast.32     %r11387 <- (32) %r11386
	scast.64    %r11388 <- (32) %r11387
	muls.64     %r11389 <- %r11388, $16
	add.64*     %r11390 <- %r11382, %r11389
	ptrcast.64* %r11391 <- (64) %r11390
	phisrc.64*  %phi478 <- %r11391
	br          .L2660

.L2660:
	phi.64*     %r11392 <- %phi477, %phi478
	store.64*   %r11392 -> 0[rc]
	load.64*    %r11393 <- 0[rb]
	load.32     %r11394 <- 8[%r11393]
	seteq.32    %r11395 <- %r11394, $3
	cbr         %r11395, .L2663, .L2662

.L2663:
	load.64*    %r11396 <- 0[rc]
	load.32     %r11397 <- 8[%r11396]
	seteq.32    %r11398 <- %r11397, $3
	cbr         %r11398, .L2661, .L2662

.L2661:
	load.64*    %r11399 <- 0[rb]
	load.f64    %r11400 <- 0[%r11399]
	store.f64   %r11400 -> 0[nb]
	load.64*    %r11401 <- 0[rc]
	load.f64    %r11402 <- 0[%r11401]
	store.f64   %r11402 -> 0[nc]
	load.64*    %r11403 <- 0[ra]
	store.64*   %r11403 -> 0[i_o]
	load.f64    %r11404 <- 0[nb]
	load.f64    %r11405 <- 0[nc]
	sub.f64     %r11406 <- %r11404, %r11405
	load.64*    %r11407 <- 0[i_o]
	store.f64   %r11406 -> 0[%r11407]
	load.64*    %r11408 <- 0[i_o]
	store.32    $3 -> 8[%r11408]
	br          .L2664

.L2662:
	load.64*    %r11409 <- 0[pc]
	load.64*    %r11410 <- 0[L]
	store.64*   %r11409 -> 48[%r11410]
	load.64*    %r11411 <- 0[L]
	load.64*    %r11412 <- 0[ra]
	load.64*    %r11413 <- 0[rb]
	load.64*    %r11414 <- 0[rc]
	push.64*    %r11411
	push.64*    %r11412
	push.64*    %r11413
	push.64*    %r11414
	push.32     $6
	call        Arith
	load.64*    %r11415 <- 0[L]
	load.64*    %r11416 <- 24[%r11415]
	store.64*   %r11416 -> 0[base]
	br          .L2664

.L2664:
	br          .L2580

.L2598:
	load.32     %r11417 <- 0[i]
	cast.32     %r11418 <- (32) %r11417
	lsr.32      %r11419 <- %r11418, $23
	and.32      %r11420 <- %r11419, $511
	cast.32     %r11421 <- (32) %r11420
	and.32      %r11422 <- %r11421, $256
	cbr         %r11422, .L2665, .L2666

.L2665:
	load.64*    %r11423 <- 0[k]
	load.32     %r11424 <- 0[i]
	cast.32     %r11425 <- (32) %r11424
	lsr.32      %r11426 <- %r11425, $23
	and.32      %r11427 <- %r11426, $511
	cast.32     %r11428 <- (32) %r11427
	scast.32    %r11429 <- (32) %r11428
	and.32      %r11430 <- %r11429, $0xfffffeff
	scast.64    %r11431 <- (32) %r11430
	muls.64     %r11432 <- %r11431, $16
	add.64*     %r11433 <- %r11423, %r11432
	phisrc.64*  %phi479 <- %r11433
	br          .L2667

.L2666:
	load.64*    %r11434 <- 0[base]
	load.32     %r11435 <- 0[i]
	cast.32     %r11436 <- (32) %r11435
	lsr.32      %r11437 <- %r11436, $23
	and.32      %r11438 <- %r11437, $511
	cast.32     %r11439 <- (32) %r11438
	scast.64    %r11440 <- (32) %r11439
	muls.64     %r11441 <- %r11440, $16
	add.64*     %r11442 <- %r11434, %r11441
	ptrcast.64* %r11443 <- (64) %r11442
	phisrc.64*  %phi480 <- %r11443
	br          .L2667

.L2667:
	phi.64*     %r11444 <- %phi479, %phi480
	store.64*   %r11444 -> 0[rb]
	load.32     %r11445 <- 0[i]
	cast.32     %r11446 <- (32) %r11445
	lsr.32      %r11447 <- %r11446, $14
	and.32      %r11448 <- %r11447, $511
	cast.32     %r11449 <- (32) %r11448
	and.32      %r11450 <- %r11449, $256
	cbr         %r11450, .L2668, .L2669

.L2668:
	load.64*    %r11451 <- 0[k]
	load.32     %r11452 <- 0[i]
	cast.32     %r11453 <- (32) %r11452
	lsr.32      %r11454 <- %r11453, $14
	and.32      %r11455 <- %r11454, $511
	cast.32     %r11456 <- (32) %r11455
	scast.32    %r11457 <- (32) %r11456
	and.32      %r11458 <- %r11457, $0xfffffeff
	scast.64    %r11459 <- (32) %r11458
	muls.64     %r11460 <- %r11459, $16
	add.64*     %r11461 <- %r11451, %r11460
	phisrc.64*  %phi481 <- %r11461
	br          .L2670

.L2669:
	load.64*    %r11462 <- 0[base]
	load.32     %r11463 <- 0[i]
	cast.32     %r11464 <- (32) %r11463
	lsr.32      %r11465 <- %r11464, $14
	and.32      %r11466 <- %r11465, $511
	cast.32     %r11467 <- (32) %r11466
	scast.64    %r11468 <- (32) %r11467
	muls.64     %r11469 <- %r11468, $16
	add.64*     %r11470 <- %r11462, %r11469
	ptrcast.64* %r11471 <- (64) %r11470
	phisrc.64*  %phi482 <- %r11471
	br          .L2670

.L2670:
	phi.64*     %r11472 <- %phi481, %phi482
	store.64*   %r11472 -> 0[rc]
	load.64*    %r11473 <- 0[rb]
	load.32     %r11474 <- 8[%r11473]
	seteq.32    %r11475 <- %r11474, $3
	cbr         %r11475, .L2673, .L2672

.L2673:
	load.64*    %r11476 <- 0[rc]
	load.32     %r11477 <- 8[%r11476]
	seteq.32    %r11478 <- %r11477, $3
	cbr         %r11478, .L2671, .L2672

.L2671:
	load.64*    %r11479 <- 0[rb]
	load.f64    %r11480 <- 0[%r11479]
	store.f64   %r11480 -> 0[nb]
	load.64*    %r11481 <- 0[rc]
	load.f64    %r11482 <- 0[%r11481]
	store.f64   %r11482 -> 0[nc]
	load.64*    %r11483 <- 0[ra]
	store.64*   %r11483 -> 0[i_o]
	load.f64    %r11484 <- 0[nb]
	load.f64    %r11485 <- 0[nc]
	mulu.f64    %r11486 <- %r11484, %r11485
	load.64*    %r11487 <- 0[i_o]
	store.f64   %r11486 -> 0[%r11487]
	load.64*    %r11488 <- 0[i_o]
	store.32    $3 -> 8[%r11488]
	br          .L2674

.L2672:
	load.64*    %r11489 <- 0[pc]
	load.64*    %r11490 <- 0[L]
	store.64*   %r11489 -> 48[%r11490]
	load.64*    %r11491 <- 0[L]
	load.64*    %r11492 <- 0[ra]
	load.64*    %r11493 <- 0[rb]
	load.64*    %r11494 <- 0[rc]
	push.64*    %r11491
	push.64*    %r11492
	push.64*    %r11493
	push.64*    %r11494
	push.32     $7
	call        Arith
	load.64*    %r11495 <- 0[L]
	load.64*    %r11496 <- 24[%r11495]
	store.64*   %r11496 -> 0[base]
	br          .L2674

.L2674:
	br          .L2580

.L2599:
	load.32     %r11497 <- 0[i]
	cast.32     %r11498 <- (32) %r11497
	lsr.32      %r11499 <- %r11498, $23
	and.32      %r11500 <- %r11499, $511
	cast.32     %r11501 <- (32) %r11500
	and.32      %r11502 <- %r11501, $256
	cbr         %r11502, .L2675, .L2676

.L2675:
	load.64*    %r11503 <- 0[k]
	load.32     %r11504 <- 0[i]
	cast.32     %r11505 <- (32) %r11504
	lsr.32      %r11506 <- %r11505, $23
	and.32      %r11507 <- %r11506, $511
	cast.32     %r11508 <- (32) %r11507
	scast.32    %r11509 <- (32) %r11508
	and.32      %r11510 <- %r11509, $0xfffffeff
	scast.64    %r11511 <- (32) %r11510
	muls.64     %r11512 <- %r11511, $16
	add.64*     %r11513 <- %r11503, %r11512
	phisrc.64*  %phi483 <- %r11513
	br          .L2677

.L2676:
	load.64*    %r11514 <- 0[base]
	load.32     %r11515 <- 0[i]
	cast.32     %r11516 <- (32) %r11515
	lsr.32      %r11517 <- %r11516, $23
	and.32      %r11518 <- %r11517, $511
	cast.32     %r11519 <- (32) %r11518
	scast.64    %r11520 <- (32) %r11519
	muls.64     %r11521 <- %r11520, $16
	add.64*     %r11522 <- %r11514, %r11521
	ptrcast.64* %r11523 <- (64) %r11522
	phisrc.64*  %phi484 <- %r11523
	br          .L2677

.L2677:
	phi.64*     %r11524 <- %phi483, %phi484
	store.64*   %r11524 -> 0[rb]
	load.32     %r11525 <- 0[i]
	cast.32     %r11526 <- (32) %r11525
	lsr.32      %r11527 <- %r11526, $14
	and.32      %r11528 <- %r11527, $511
	cast.32     %r11529 <- (32) %r11528
	and.32      %r11530 <- %r11529, $256
	cbr         %r11530, .L2678, .L2679

.L2678:
	load.64*    %r11531 <- 0[k]
	load.32     %r11532 <- 0[i]
	cast.32     %r11533 <- (32) %r11532
	lsr.32      %r11534 <- %r11533, $14
	and.32      %r11535 <- %r11534, $511
	cast.32     %r11536 <- (32) %r11535
	scast.32    %r11537 <- (32) %r11536
	and.32      %r11538 <- %r11537, $0xfffffeff
	scast.64    %r11539 <- (32) %r11538
	muls.64     %r11540 <- %r11539, $16
	add.64*     %r11541 <- %r11531, %r11540
	phisrc.64*  %phi485 <- %r11541
	br          .L2680

.L2679:
	load.64*    %r11542 <- 0[base]
	load.32     %r11543 <- 0[i]
	cast.32     %r11544 <- (32) %r11543
	lsr.32      %r11545 <- %r11544, $14
	and.32      %r11546 <- %r11545, $511
	cast.32     %r11547 <- (32) %r11546
	scast.64    %r11548 <- (32) %r11547
	muls.64     %r11549 <- %r11548, $16
	add.64*     %r11550 <- %r11542, %r11549
	ptrcast.64* %r11551 <- (64) %r11550
	phisrc.64*  %phi486 <- %r11551
	br          .L2680

.L2680:
	phi.64*     %r11552 <- %phi485, %phi486
	store.64*   %r11552 -> 0[rc]
	load.64*    %r11553 <- 0[rb]
	load.32     %r11554 <- 8[%r11553]
	seteq.32    %r11555 <- %r11554, $3
	cbr         %r11555, .L2683, .L2682

.L2683:
	load.64*    %r11556 <- 0[rc]
	load.32     %r11557 <- 8[%r11556]
	seteq.32    %r11558 <- %r11557, $3
	cbr         %r11558, .L2681, .L2682

.L2681:
	load.64*    %r11559 <- 0[rb]
	load.f64    %r11560 <- 0[%r11559]
	store.f64   %r11560 -> 0[nb]
	load.64*    %r11561 <- 0[rc]
	load.f64    %r11562 <- 0[%r11561]
	store.f64   %r11562 -> 0[nc]
	load.64*    %r11563 <- 0[ra]
	store.64*   %r11563 -> 0[i_o]
	load.f64    %r11564 <- 0[nb]
	load.f64    %r11565 <- 0[nc]
	divu.f64    %r11566 <- %r11564, %r11565
	load.64*    %r11567 <- 0[i_o]
	store.f64   %r11566 -> 0[%r11567]
	load.64*    %r11568 <- 0[i_o]
	store.32    $3 -> 8[%r11568]
	br          .L2684

.L2682:
	load.64*    %r11569 <- 0[pc]
	load.64*    %r11570 <- 0[L]
	store.64*   %r11569 -> 48[%r11570]
	load.64*    %r11571 <- 0[L]
	load.64*    %r11572 <- 0[ra]
	load.64*    %r11573 <- 0[rb]
	load.64*    %r11574 <- 0[rc]
	push.64*    %r11571
	push.64*    %r11572
	push.64*    %r11573
	push.64*    %r11574
	push.32     $8
	call        Arith
	load.64*    %r11575 <- 0[L]
	load.64*    %r11576 <- 24[%r11575]
	store.64*   %r11576 -> 0[base]
	br          .L2684

.L2684:
	br          .L2580

.L2600:
	load.32     %r11577 <- 0[i]
	cast.32     %r11578 <- (32) %r11577
	lsr.32      %r11579 <- %r11578, $23
	and.32      %r11580 <- %r11579, $511
	cast.32     %r11581 <- (32) %r11580
	and.32      %r11582 <- %r11581, $256
	cbr         %r11582, .L2685, .L2686

.L2685:
	load.64*    %r11583 <- 0[k]
	load.32     %r11584 <- 0[i]
	cast.32     %r11585 <- (32) %r11584
	lsr.32      %r11586 <- %r11585, $23
	and.32      %r11587 <- %r11586, $511
	cast.32     %r11588 <- (32) %r11587
	scast.32    %r11589 <- (32) %r11588
	and.32      %r11590 <- %r11589, $0xfffffeff
	scast.64    %r11591 <- (32) %r11590
	muls.64     %r11592 <- %r11591, $16
	add.64*     %r11593 <- %r11583, %r11592
	phisrc.64*  %phi487 <- %r11593
	br          .L2687

.L2686:
	load.64*    %r11594 <- 0[base]
	load.32     %r11595 <- 0[i]
	cast.32     %r11596 <- (32) %r11595
	lsr.32      %r11597 <- %r11596, $23
	and.32      %r11598 <- %r11597, $511
	cast.32     %r11599 <- (32) %r11598
	scast.64    %r11600 <- (32) %r11599
	muls.64     %r11601 <- %r11600, $16
	add.64*     %r11602 <- %r11594, %r11601
	ptrcast.64* %r11603 <- (64) %r11602
	phisrc.64*  %phi488 <- %r11603
	br          .L2687

.L2687:
	phi.64*     %r11604 <- %phi487, %phi488
	store.64*   %r11604 -> 0[rb]
	load.32     %r11605 <- 0[i]
	cast.32     %r11606 <- (32) %r11605
	lsr.32      %r11607 <- %r11606, $14
	and.32      %r11608 <- %r11607, $511
	cast.32     %r11609 <- (32) %r11608
	and.32      %r11610 <- %r11609, $256
	cbr         %r11610, .L2688, .L2689

.L2688:
	load.64*    %r11611 <- 0[k]
	load.32     %r11612 <- 0[i]
	cast.32     %r11613 <- (32) %r11612
	lsr.32      %r11614 <- %r11613, $14
	and.32      %r11615 <- %r11614, $511
	cast.32     %r11616 <- (32) %r11615
	scast.32    %r11617 <- (32) %r11616
	and.32      %r11618 <- %r11617, $0xfffffeff
	scast.64    %r11619 <- (32) %r11618
	muls.64     %r11620 <- %r11619, $16
	add.64*     %r11621 <- %r11611, %r11620
	phisrc.64*  %phi489 <- %r11621
	br          .L2690

.L2689:
	load.64*    %r11622 <- 0[base]
	load.32     %r11623 <- 0[i]
	cast.32     %r11624 <- (32) %r11623
	lsr.32      %r11625 <- %r11624, $14
	and.32      %r11626 <- %r11625, $511
	cast.32     %r11627 <- (32) %r11626
	scast.64    %r11628 <- (32) %r11627
	muls.64     %r11629 <- %r11628, $16
	add.64*     %r11630 <- %r11622, %r11629
	ptrcast.64* %r11631 <- (64) %r11630
	phisrc.64*  %phi490 <- %r11631
	br          .L2690

.L2690:
	phi.64*     %r11632 <- %phi489, %phi490
	store.64*   %r11632 -> 0[rc]
	load.64*    %r11633 <- 0[rb]
	load.32     %r11634 <- 8[%r11633]
	seteq.32    %r11635 <- %r11634, $3
	cbr         %r11635, .L2693, .L2692

.L2693:
	load.64*    %r11636 <- 0[rc]
	load.32     %r11637 <- 8[%r11636]
	seteq.32    %r11638 <- %r11637, $3
	cbr         %r11638, .L2691, .L2692

.L2691:
	load.64*    %r11639 <- 0[rb]
	load.f64    %r11640 <- 0[%r11639]
	store.f64   %r11640 -> 0[nb]
	load.64*    %r11641 <- 0[rc]
	load.f64    %r11642 <- 0[%r11641]
	store.f64   %r11642 -> 0[nc]
	load.64*    %r11643 <- 0[ra]
	store.64*   %r11643 -> 0[i_o]
	load.f64    %r11644 <- 0[nb]
	load.f64    %r11645 <- 0[nb]
	load.f64    %r11646 <- 0[nc]
	divu.f64    %r11647 <- %r11645, %r11646
	push.f64    %r11647
	call.f64    %r11648 <- floor
	load.f64    %r11649 <- 0[nc]
	mulu.f64    %r11650 <- %r11648, %r11649
	sub.f64     %r11651 <- %r11644, %r11650
	load.64*    %r11652 <- 0[i_o]
	store.f64   %r11651 -> 0[%r11652]
	load.64*    %r11653 <- 0[i_o]
	store.32    $3 -> 8[%r11653]
	br          .L2694

.L2692:
	load.64*    %r11654 <- 0[pc]
	load.64*    %r11655 <- 0[L]
	store.64*   %r11654 -> 48[%r11655]
	load.64*    %r11656 <- 0[L]
	load.64*    %r11657 <- 0[ra]
	load.64*    %r11658 <- 0[rb]
	load.64*    %r11659 <- 0[rc]
	push.64*    %r11656
	push.64*    %r11657
	push.64*    %r11658
	push.64*    %r11659
	push.32     $9
	call        Arith
	load.64*    %r11660 <- 0[L]
	load.64*    %r11661 <- 24[%r11660]
	store.64*   %r11661 -> 0[base]
	br          .L2694

.L2694:
	br          .L2580

.L2601:
	load.32     %r11662 <- 0[i]
	cast.32     %r11663 <- (32) %r11662
	lsr.32      %r11664 <- %r11663, $23
	and.32      %r11665 <- %r11664, $511
	cast.32     %r11666 <- (32) %r11665
	and.32      %r11667 <- %r11666, $256
	cbr         %r11667, .L2695, .L2696

.L2695:
	load.64*    %r11668 <- 0[k]
	load.32     %r11669 <- 0[i]
	cast.32     %r11670 <- (32) %r11669
	lsr.32      %r11671 <- %r11670, $23
	and.32      %r11672 <- %r11671, $511
	cast.32     %r11673 <- (32) %r11672
	scast.32    %r11674 <- (32) %r11673
	and.32      %r11675 <- %r11674, $0xfffffeff
	scast.64    %r11676 <- (32) %r11675
	muls.64     %r11677 <- %r11676, $16
	add.64*     %r11678 <- %r11668, %r11677
	phisrc.64*  %phi491 <- %r11678
	br          .L2697

.L2696:
	load.64*    %r11679 <- 0[base]
	load.32     %r11680 <- 0[i]
	cast.32     %r11681 <- (32) %r11680
	lsr.32      %r11682 <- %r11681, $23
	and.32      %r11683 <- %r11682, $511
	cast.32     %r11684 <- (32) %r11683
	scast.64    %r11685 <- (32) %r11684
	muls.64     %r11686 <- %r11685, $16
	add.64*     %r11687 <- %r11679, %r11686
	ptrcast.64* %r11688 <- (64) %r11687
	phisrc.64*  %phi492 <- %r11688
	br          .L2697

.L2697:
	phi.64*     %r11689 <- %phi491, %phi492
	store.64*   %r11689 -> 0[rb]
	load.32     %r11690 <- 0[i]
	cast.32     %r11691 <- (32) %r11690
	lsr.32      %r11692 <- %r11691, $14
	and.32      %r11693 <- %r11692, $511
	cast.32     %r11694 <- (32) %r11693
	and.32      %r11695 <- %r11694, $256
	cbr         %r11695, .L2698, .L2699

.L2698:
	load.64*    %r11696 <- 0[k]
	load.32     %r11697 <- 0[i]
	cast.32     %r11698 <- (32) %r11697
	lsr.32      %r11699 <- %r11698, $14
	and.32      %r11700 <- %r11699, $511
	cast.32     %r11701 <- (32) %r11700
	scast.32    %r11702 <- (32) %r11701
	and.32      %r11703 <- %r11702, $0xfffffeff
	scast.64    %r11704 <- (32) %r11703
	muls.64     %r11705 <- %r11704, $16
	add.64*     %r11706 <- %r11696, %r11705
	phisrc.64*  %phi493 <- %r11706
	br          .L2700

.L2699:
	load.64*    %r11707 <- 0[base]
	load.32     %r11708 <- 0[i]
	cast.32     %r11709 <- (32) %r11708
	lsr.32      %r11710 <- %r11709, $14
	and.32      %r11711 <- %r11710, $511
	cast.32     %r11712 <- (32) %r11711
	scast.64    %r11713 <- (32) %r11712
	muls.64     %r11714 <- %r11713, $16
	add.64*     %r11715 <- %r11707, %r11714
	ptrcast.64* %r11716 <- (64) %r11715
	phisrc.64*  %phi494 <- %r11716
	br          .L2700

.L2700:
	phi.64*     %r11717 <- %phi493, %phi494
	store.64*   %r11717 -> 0[rc]
	load.64*    %r11718 <- 0[rb]
	load.32     %r11719 <- 8[%r11718]
	seteq.32    %r11720 <- %r11719, $3
	cbr         %r11720, .L2703, .L2702

.L2703:
	load.64*    %r11721 <- 0[rc]
	load.32     %r11722 <- 8[%r11721]
	seteq.32    %r11723 <- %r11722, $3
	cbr         %r11723, .L2701, .L2702

.L2701:
	load.64*    %r11724 <- 0[rb]
	load.f64    %r11725 <- 0[%r11724]
	store.f64   %r11725 -> 0[nb]
	load.64*    %r11726 <- 0[rc]
	load.f64    %r11727 <- 0[%r11726]
	store.f64   %r11727 -> 0[nc]
	load.64*    %r11728 <- 0[ra]
	store.64*   %r11728 -> 0[i_o]
	load.f64    %r11729 <- 0[nb]
	load.f64    %r11730 <- 0[nc]
	push.f64    %r11729
	push.f64    %r11730
	call.f64    %r11731 <- pow
	load.64*    %r11732 <- 0[i_o]
	store.f64   %r11731 -> 0[%r11732]
	load.64*    %r11733 <- 0[i_o]
	store.32    $3 -> 8[%r11733]
	br          .L2704

.L2702:
	load.64*    %r11734 <- 0[pc]
	load.64*    %r11735 <- 0[L]
	store.64*   %r11734 -> 48[%r11735]
	load.64*    %r11736 <- 0[L]
	load.64*    %r11737 <- 0[ra]
	load.64*    %r11738 <- 0[rb]
	load.64*    %r11739 <- 0[rc]
	push.64*    %r11736
	push.64*    %r11737
	push.64*    %r11738
	push.64*    %r11739
	push.32     $10
	call        Arith
	load.64*    %r11740 <- 0[L]
	load.64*    %r11741 <- 24[%r11740]
	store.64*   %r11741 -> 0[base]
	br          .L2704

.L2704:
	br          .L2580

.L2602:
	load.64*    %r11742 <- 0[base]
	load.32     %r11743 <- 0[i]
	cast.32     %r11744 <- (32) %r11743
	lsr.32      %r11745 <- %r11744, $23
	and.32      %r11746 <- %r11745, $511
	cast.32     %r11747 <- (32) %r11746
	scast.64    %r11748 <- (32) %r11747
	muls.64     %r11749 <- %r11748, $16
	add.64*     %r11750 <- %r11742, %r11749
	store.64*   %r11750 -> 0[rb]
	load.64*    %r11751 <- 0[rb]
	load.32     %r11752 <- 8[%r11751]
	seteq.32    %r11753 <- %r11752, $3
	cbr         %r11753, .L2705, .L2706

.L2705:
	load.64*    %r11754 <- 0[rb]
	load.f64    %r11755 <- 0[%r11754]
	store.f64   %r11755 -> 0[nb]
	load.64*    %r11756 <- 0[ra]
	store.64*   %r11756 -> 0[i_o]
	load.f64    %r11757 <- 0[nb]
	neg.f64     %r11758 <- %r11757
	load.64*    %r11759 <- 0[i_o]
	store.f64   %r11758 -> 0[%r11759]
	load.64*    %r11760 <- 0[i_o]
	store.32    $3 -> 8[%r11760]
	br          .L2707

.L2706:
	load.64*    %r11761 <- 0[pc]
	load.64*    %r11762 <- 0[L]
	store.64*   %r11761 -> 48[%r11762]
	load.64*    %r11763 <- 0[L]
	load.64*    %r11764 <- 0[ra]
	load.64*    %r11765 <- 0[rb]
	load.64*    %r11766 <- 0[rb]
	push.64*    %r11763
	push.64*    %r11764
	push.64*    %r11765
	push.64*    %r11766
	push.32     $11
	call        Arith
	load.64*    %r11767 <- 0[L]
	load.64*    %r11768 <- 24[%r11767]
	store.64*   %r11768 -> 0[base]
	br          .L2707

.L2707:
	br          .L2580

.L2603:
	load.64*    %r11769 <- 0[base]
	load.32     %r11770 <- 0[i]
	cast.32     %r11771 <- (32) %r11770
	lsr.32      %r11772 <- %r11771, $23
	and.32      %r11773 <- %r11772, $511
	cast.32     %r11774 <- (32) %r11773
	scast.64    %r11775 <- (32) %r11774
	muls.64     %r11776 <- %r11775, $16
	add.64*     %r11777 <- %r11769, %r11776
	load.32     %r11778 <- 8[%r11777]
	seteq.32    %r11779 <- %r11778, $0
	cbr         %r11779, .L2708, .L2709

.L2708:
	phisrc.32   %phi495 <- $1
	br          .L2710

.L2709:
	load.64*    %r11780 <- 0[base]
	load.32     %r11781 <- 0[i]
	cast.32     %r11782 <- (32) %r11781
	lsr.32      %r11783 <- %r11782, $23
	and.32      %r11784 <- %r11783, $511
	cast.32     %r11785 <- (32) %r11784
	scast.64    %r11786 <- (32) %r11785
	muls.64     %r11787 <- %r11786, $16
	add.64*     %r11788 <- %r11780, %r11787
	load.32     %r11789 <- 8[%r11788]
	seteq.32    %r11790 <- %r11789, $1
	cbr         %r11790, .L2711, .L2712

.L2711:
	load.64*    %r11791 <- 0[base]
	load.32     %r11792 <- 0[i]
	cast.32     %r11793 <- (32) %r11792
	lsr.32      %r11794 <- %r11793, $23
	and.32      %r11795 <- %r11794, $511
	cast.32     %r11796 <- (32) %r11795
	scast.64    %r11797 <- (32) %r11796
	muls.64     %r11798 <- %r11797, $16
	add.64*     %r11799 <- %r11791, %r11798
	load.32     %r11800 <- 0[%r11799]
	seteq.32    %r11801 <- %r11800, $0
	phisrc.32   %phi496 <- %r11801
	br          .L2713

.L2712:
	phisrc.32   %phi497 <- $0
	br          .L2713

.L2713:
	phi.32      %r11802 <- %phi496, %phi497
	phisrc.32   %phi498 <- %r11802
	br          .L2710

.L2710:
	phi.32      %r11803 <- %phi495, %phi498
	store.32    %r11803 -> 0[res]
	load.64*    %r11804 <- 0[ra]
	store.64*   %r11804 -> 0[i_o]
	load.32     %r11805 <- 0[res]
	load.64*    %r11806 <- 0[i_o]
	store.32    %r11805 -> 0[%r11806]
	load.64*    %r11807 <- 0[i_o]
	store.32    $1 -> 8[%r11807]
	br          .L2580

.L2604:
	load.64*    %r11808 <- 0[base]
	load.32     %r11809 <- 0[i]
	cast.32     %r11810 <- (32) %r11809
	lsr.32      %r11811 <- %r11810, $23
	and.32      %r11812 <- %r11811, $511
	cast.32     %r11813 <- (32) %r11812
	scast.64    %r11814 <- (32) %r11813
	muls.64     %r11815 <- %r11814, $16
	add.64*     %r11816 <- %r11808, %r11815
	store.64*   %r11816 -> 0[rb]
	load.64*    %r11817 <- 0[rb]
	load.32     %r11818 <- 8[%r11817]
	switch.32   %r11818, 4 -> .L2716, 5 -> .L2715, default -> .L2717

.L2715:
	load.64*    %r11819 <- 0[ra]
	store.64*   %r11819 -> 0[i_o]
	load.64*    %r11820 <- 0[rb]
	load.64*    %r11821 <- 0[%r11820]
	add.64*     %r11822 <- %r11821, $0
	push.64*    %r11822
	call.32     %r11823 <- luaH_getn
	fpcast.f64  %r11824 <- (32) %r11823
	load.64*    %r11825 <- 0[i_o]
	store.f64   %r11824 -> 0[%r11825]
	load.64*    %r11826 <- 0[i_o]
	store.32    $3 -> 8[%r11826]
	br          .L2714

.L2716:
	load.64*    %r11827 <- 0[ra]
	store.64*   %r11827 -> 0[i_o]
	load.64*    %r11828 <- 0[rb]
	load.64*    %r11829 <- 0[%r11828]
	load.64     %r11830 <- 16[%r11829]
	fpcast.f64  %r11831 <- (64) %r11830
	load.64*    %r11832 <- 0[i_o]
	store.f64   %r11831 -> 0[%r11832]
	load.64*    %r11833 <- 0[i_o]
	store.32    $3 -> 8[%r11833]
	br          .L2714

.L2717:
	load.64*    %r11834 <- 0[pc]
	load.64*    %r11835 <- 0[L]
	store.64*   %r11834 -> 48[%r11835]
	load.64*    %r11836 <- 0[L]
	load.64*    %r11837 <- 0[rb]
	symaddr.64* %r11838 <- luaO_nilobject_
	load.64*    %r11839 <- 0[ra]
	push.64*    %r11836
	push.64*    %r11837
	push.64*    %r11838
	push.64*    %r11839
	push.32     $12
	call.32     %r11840 <- call_binTM
	cbr         %r11840, .L2719, .L2718

.L2718:
	load.64*    %r11841 <- 0[L]
	load.64*    %r11842 <- 0[rb]
	symaddr.64* %r11843 <- <anon symbol:0x1d5c698>
	push.64*    %r11841
	push.64*    %r11842
	push.64*    %r11843
	call        luaG_typeerror
	br          .L2719

.L2719:
	load.64*    %r11844 <- 0[L]
	load.64*    %r11845 <- 24[%r11844]
	store.64*   %r11845 -> 0[base]
	br          .L2714

.L2714:
	br          .L2580

.L2605:
	load.32     %r11846 <- 0[i]
	cast.32     %r11847 <- (32) %r11846
	lsr.32      %r11848 <- %r11847, $23
	and.32      %r11849 <- %r11848, $511
	cast.32     %r11850 <- (32) %r11849
	store.32    %r11850 -> 0[b]
	load.32     %r11851 <- 0[i]
	cast.32     %r11852 <- (32) %r11851
	lsr.32      %r11853 <- %r11852, $14
	and.32      %r11854 <- %r11853, $511
	cast.32     %r11855 <- (32) %r11854
	store.32    %r11855 -> 0[c]
	load.64*    %r11856 <- 0[pc]
	load.64*    %r11857 <- 0[L]
	store.64*   %r11856 -> 48[%r11857]
	load.64*    %r11858 <- 0[L]
	load.32     %r11859 <- 0[c]
	load.32     %r11860 <- 0[b]
	sub.32      %r11861 <- %r11859, %r11860
	add.32      %r11862 <- %r11861, $1
	load.32     %r11863 <- 0[c]
	push.64*    %r11858
	push.32     %r11862
	push.32     %r11863
	call        luaV_concat
	load.64*    %r11864 <- 0[L]
	load.64*    %r11865 <- 32[%r11864]
	load.64     %r11866 <- 120[%r11865]
	load.64*    %r11867 <- 0[L]
	load.64*    %r11868 <- 32[%r11867]
	load.64     %r11869 <- 112[%r11868]
	setae.32    %r11870 <- %r11866, %r11869
	cbr         %r11870, .L2720, .L2721

.L2720:
	load.64*    %r11871 <- 0[L]
	push.64*    %r11871
	call        luaC_step
	br          .L2721

.L2721:
	load.64*    %r11872 <- 0[L]
	load.64*    %r11873 <- 24[%r11872]
	store.64*   %r11873 -> 0[base]
	load.64*    %r11874 <- 0[base]
	load.32     %r11875 <- 0[b]
	scast.64    %r11876 <- (32) %r11875
	muls.64     %r11877 <- %r11876, $16
	add.64*     %r11878 <- %r11874, %r11877
	store.64*   %r11878 -> 0[o2]
	load.64*    %r11879 <- 0[base]
	load.32     %r11880 <- 0[i]
	cast.32     %r11881 <- (32) %r11880
	lsr.32      %r11882 <- %r11881, $6
	and.32      %r11883 <- %r11882, $255
	cast.32     %r11884 <- (32) %r11883
	scast.64    %r11885 <- (32) %r11884
	muls.64     %r11886 <- %r11885, $16
	add.64*     %r11887 <- %r11879, %r11886
	store.64*   %r11887 -> 0[o1]
	load.64*    %r11888 <- 0[o2]
	load.f64    %r11889 <- 0[%r11888]
	fpcast.f64  %r11890 <- (64) %r11889
	load.64*    %r11891 <- 0[o1]
	store.f64   %r11890 -> 0[%r11891]
	load.64*    %r11892 <- 0[o2]
	load.32     %r11893 <- 8[%r11892]
	scast.32    %r11894 <- (32) %r11893
	load.64*    %r11895 <- 0[o1]
	store.32    %r11894 -> 8[%r11895]
	br          .L2580

.L2606:
	load.32     %r11896 <- 0[i]
	cast.32     %r11897 <- (32) %r11896
	lsr.32      %r11898 <- %r11897, $14
	and.32      %r11899 <- %r11898, $0x3ffff
	cast.32     %r11900 <- (32) %r11899
	sub.32      %r11901 <- %r11900, $0x1ffff
	scast.64    %r11902 <- (32) %r11901
	muls.64     %r11903 <- %r11902, $4
	load.64*    %r11904 <- 0[pc]
	cast.64     %r11905 <- (64) %r11904
	add.64      %r11906 <- %r11905, %r11903
	ptrcast.64* %r11907 <- (64) %r11906
	store.64*   %r11907 -> 0[pc]
	br          .L2580

.L2607:
	load.32     %r11908 <- 0[i]
	cast.32     %r11909 <- (32) %r11908
	lsr.32      %r11910 <- %r11909, $23
	and.32      %r11911 <- %r11910, $511
	cast.32     %r11912 <- (32) %r11911
	and.32      %r11913 <- %r11912, $256
	cbr         %r11913, .L2722, .L2723

.L2722:
	load.64*    %r11914 <- 0[k]
	load.32     %r11915 <- 0[i]
	cast.32     %r11916 <- (32) %r11915
	lsr.32      %r11917 <- %r11916, $23
	and.32      %r11918 <- %r11917, $511
	cast.32     %r11919 <- (32) %r11918
	scast.32    %r11920 <- (32) %r11919
	and.32      %r11921 <- %r11920, $0xfffffeff
	scast.64    %r11922 <- (32) %r11921
	muls.64     %r11923 <- %r11922, $16
	add.64*     %r11924 <- %r11914, %r11923
	phisrc.64*  %phi499 <- %r11924
	br          .L2724

.L2723:
	load.64*    %r11925 <- 0[base]
	load.32     %r11926 <- 0[i]
	cast.32     %r11927 <- (32) %r11926
	lsr.32      %r11928 <- %r11927, $23
	and.32      %r11929 <- %r11928, $511
	cast.32     %r11930 <- (32) %r11929
	scast.64    %r11931 <- (32) %r11930
	muls.64     %r11932 <- %r11931, $16
	add.64*     %r11933 <- %r11925, %r11932
	ptrcast.64* %r11934 <- (64) %r11933
	phisrc.64*  %phi500 <- %r11934
	br          .L2724

.L2724:
	phi.64*     %r11935 <- %phi499, %phi500
	store.64*   %r11935 -> 0[rb]
	load.32     %r11936 <- 0[i]
	cast.32     %r11937 <- (32) %r11936
	lsr.32      %r11938 <- %r11937, $14
	and.32      %r11939 <- %r11938, $511
	cast.32     %r11940 <- (32) %r11939
	and.32      %r11941 <- %r11940, $256
	cbr         %r11941, .L2725, .L2726

.L2725:
	load.64*    %r11942 <- 0[k]
	load.32     %r11943 <- 0[i]
	cast.32     %r11944 <- (32) %r11943
	lsr.32      %r11945 <- %r11944, $14
	and.32      %r11946 <- %r11945, $511
	cast.32     %r11947 <- (32) %r11946
	scast.32    %r11948 <- (32) %r11947
	and.32      %r11949 <- %r11948, $0xfffffeff
	scast.64    %r11950 <- (32) %r11949
	muls.64     %r11951 <- %r11950, $16
	add.64*     %r11952 <- %r11942, %r11951
	phisrc.64*  %phi501 <- %r11952
	br          .L2727

.L2726:
	load.64*    %r11953 <- 0[base]
	load.32     %r11954 <- 0[i]
	cast.32     %r11955 <- (32) %r11954
	lsr.32      %r11956 <- %r11955, $14
	and.32      %r11957 <- %r11956, $511
	cast.32     %r11958 <- (32) %r11957
	scast.64    %r11959 <- (32) %r11958
	muls.64     %r11960 <- %r11959, $16
	add.64*     %r11961 <- %r11953, %r11960
	ptrcast.64* %r11962 <- (64) %r11961
	phisrc.64*  %phi502 <- %r11962
	br          .L2727

.L2727:
	phi.64*     %r11963 <- %phi501, %phi502
	store.64*   %r11963 -> 0[rc]
	load.64*    %r11964 <- 0[pc]
	load.64*    %r11965 <- 0[L]
	store.64*   %r11964 -> 48[%r11965]
	load.64*    %r11966 <- 0[rb]
	load.32     %r11967 <- 8[%r11966]
	load.64*    %r11968 <- 0[rc]
	load.32     %r11969 <- 8[%r11968]
	seteq.32    %r11970 <- %r11967, %r11969
	cbr         %r11970, .L2730, .L2731

.L2730:
	load.64*    %r11971 <- 0[L]
	load.64*    %r11972 <- 0[rb]
	load.64*    %r11973 <- 0[rc]
	push.64*    %r11971
	push.64*    %r11972
	push.64*    %r11973
	call.32     %r11974 <- luaV_equalval
	phisrc.32   %phi503 <- %r11974
	br          .L2732

.L2731:
	phisrc.32   %phi504 <- $0
	br          .L2732

.L2732:
	phi.32      %r11975 <- %phi503, %phi504
	load.32     %r11976 <- 0[i]
	cast.32     %r11977 <- (32) %r11976
	lsr.32      %r11978 <- %r11977, $6
	and.32      %r11979 <- %r11978, $255
	cast.32     %r11980 <- (32) %r11979
	seteq.32    %r11981 <- %r11975, %r11980
	cbr         %r11981, .L2728, .L2729

.L2728:
	load.64*    %r11982 <- 0[pc]
	load.32     %r11983 <- 0[%r11982]
	cast.32     %r11984 <- (32) %r11983
	lsr.32      %r11985 <- %r11984, $14
	and.32      %r11986 <- %r11985, $0x3ffff
	cast.32     %r11987 <- (32) %r11986
	sub.32      %r11988 <- %r11987, $0x1ffff
	scast.64    %r11989 <- (32) %r11988
	muls.64     %r11990 <- %r11989, $4
	load.64*    %r11991 <- 0[pc]
	cast.64     %r11992 <- (64) %r11991
	add.64      %r11993 <- %r11992, %r11990
	ptrcast.64* %r11994 <- (64) %r11993
	store.64*   %r11994 -> 0[pc]
	br          .L2729

.L2729:
	load.64*    %r11995 <- 0[L]
	load.64*    %r11996 <- 24[%r11995]
	store.64*   %r11996 -> 0[base]
	load.64*    %r11997 <- 0[pc]
	add.64*     %r11998 <- %r11997, $4
	store.64*   %r11998 -> 0[pc]
	br          .L2580

.L2608:
	load.64*    %r11999 <- 0[pc]
	load.64*    %r12000 <- 0[L]
	store.64*   %r11999 -> 48[%r12000]
	load.64*    %r12001 <- 0[L]
	load.32     %r12002 <- 0[i]
	cast.32     %r12003 <- (32) %r12002
	lsr.32      %r12004 <- %r12003, $23
	and.32      %r12005 <- %r12004, $511
	cast.32     %r12006 <- (32) %r12005
	and.32      %r12007 <- %r12006, $256
	cbr         %r12007, .L2735, .L2736

.L2735:
	load.64*    %r12008 <- 0[k]
	load.32     %r12009 <- 0[i]
	cast.32     %r12010 <- (32) %r12009
	lsr.32      %r12011 <- %r12010, $23
	and.32      %r12012 <- %r12011, $511
	cast.32     %r12013 <- (32) %r12012
	scast.32    %r12014 <- (32) %r12013
	and.32      %r12015 <- %r12014, $0xfffffeff
	scast.64    %r12016 <- (32) %r12015
	muls.64     %r12017 <- %r12016, $16
	add.64*     %r12018 <- %r12008, %r12017
	phisrc.64*  %phi505 <- %r12018
	br          .L2737

.L2736:
	load.64*    %r12019 <- 0[base]
	load.32     %r12020 <- 0[i]
	cast.32     %r12021 <- (32) %r12020
	lsr.32      %r12022 <- %r12021, $23
	and.32      %r12023 <- %r12022, $511
	cast.32     %r12024 <- (32) %r12023
	scast.64    %r12025 <- (32) %r12024
	muls.64     %r12026 <- %r12025, $16
	add.64*     %r12027 <- %r12019, %r12026
	ptrcast.64* %r12028 <- (64) %r12027
	phisrc.64*  %phi506 <- %r12028
	br          .L2737

.L2737:
	phi.64*     %r12029 <- %phi505, %phi506
	load.32     %r12030 <- 0[i]
	cast.32     %r12031 <- (32) %r12030
	lsr.32      %r12032 <- %r12031, $14
	and.32      %r12033 <- %r12032, $511
	cast.32     %r12034 <- (32) %r12033
	and.32      %r12035 <- %r12034, $256
	cbr         %r12035, .L2738, .L2739

.L2738:
	load.64*    %r12036 <- 0[k]
	load.32     %r12037 <- 0[i]
	cast.32     %r12038 <- (32) %r12037
	lsr.32      %r12039 <- %r12038, $14
	and.32      %r12040 <- %r12039, $511
	cast.32     %r12041 <- (32) %r12040
	scast.32    %r12042 <- (32) %r12041
	and.32      %r12043 <- %r12042, $0xfffffeff
	scast.64    %r12044 <- (32) %r12043
	muls.64     %r12045 <- %r12044, $16
	add.64*     %r12046 <- %r12036, %r12045
	phisrc.64*  %phi507 <- %r12046
	br          .L2740

.L2739:
	load.64*    %r12047 <- 0[base]
	load.32     %r12048 <- 0[i]
	cast.32     %r12049 <- (32) %r12048
	lsr.32      %r12050 <- %r12049, $14
	and.32      %r12051 <- %r12050, $511
	cast.32     %r12052 <- (32) %r12051
	scast.64    %r12053 <- (32) %r12052
	muls.64     %r12054 <- %r12053, $16
	add.64*     %r12055 <- %r12047, %r12054
	ptrcast.64* %r12056 <- (64) %r12055
	phisrc.64*  %phi508 <- %r12056
	br          .L2740

.L2740:
	phi.64*     %r12057 <- %phi507, %phi508
	push.64*    %r12001
	push.64*    %r12029
	push.64*    %r12057
	call.32     %r12058 <- luaV_lessthan
	load.32     %r12059 <- 0[i]
	cast.32     %r12060 <- (32) %r12059
	lsr.32      %r12061 <- %r12060, $6
	and.32      %r12062 <- %r12061, $255
	cast.32     %r12063 <- (32) %r12062
	seteq.32    %r12064 <- %r12058, %r12063
	cbr         %r12064, .L2733, .L2734

.L2733:
	load.64*    %r12065 <- 0[pc]
	load.32     %r12066 <- 0[%r12065]
	cast.32     %r12067 <- (32) %r12066
	lsr.32      %r12068 <- %r12067, $14
	and.32      %r12069 <- %r12068, $0x3ffff
	cast.32     %r12070 <- (32) %r12069
	sub.32      %r12071 <- %r12070, $0x1ffff
	scast.64    %r12072 <- (32) %r12071
	muls.64     %r12073 <- %r12072, $4
	load.64*    %r12074 <- 0[pc]
	cast.64     %r12075 <- (64) %r12074
	add.64      %r12076 <- %r12075, %r12073
	ptrcast.64* %r12077 <- (64) %r12076
	store.64*   %r12077 -> 0[pc]
	br          .L2734

.L2734:
	load.64*    %r12078 <- 0[L]
	load.64*    %r12079 <- 24[%r12078]
	store.64*   %r12079 -> 0[base]
	load.64*    %r12080 <- 0[pc]
	add.64*     %r12081 <- %r12080, $4
	store.64*   %r12081 -> 0[pc]
	br          .L2580

.L2609:
	load.64*    %r12082 <- 0[pc]
	load.64*    %r12083 <- 0[L]
	store.64*   %r12082 -> 48[%r12083]
	load.64*    %r12084 <- 0[L]
	load.32     %r12085 <- 0[i]
	cast.32     %r12086 <- (32) %r12085
	lsr.32      %r12087 <- %r12086, $23
	and.32      %r12088 <- %r12087, $511
	cast.32     %r12089 <- (32) %r12088
	and.32      %r12090 <- %r12089, $256
	cbr         %r12090, .L2743, .L2744

.L2743:
	load.64*    %r12091 <- 0[k]
	load.32     %r12092 <- 0[i]
	cast.32     %r12093 <- (32) %r12092
	lsr.32      %r12094 <- %r12093, $23
	and.32      %r12095 <- %r12094, $511
	cast.32     %r12096 <- (32) %r12095
	scast.32    %r12097 <- (32) %r12096
	and.32      %r12098 <- %r12097, $0xfffffeff
	scast.64    %r12099 <- (32) %r12098
	muls.64     %r12100 <- %r12099, $16
	add.64*     %r12101 <- %r12091, %r12100
	phisrc.64*  %phi509 <- %r12101
	br          .L2745

.L2744:
	load.64*    %r12102 <- 0[base]
	load.32     %r12103 <- 0[i]
	cast.32     %r12104 <- (32) %r12103
	lsr.32      %r12105 <- %r12104, $23
	and.32      %r12106 <- %r12105, $511
	cast.32     %r12107 <- (32) %r12106
	scast.64    %r12108 <- (32) %r12107
	muls.64     %r12109 <- %r12108, $16
	add.64*     %r12110 <- %r12102, %r12109
	ptrcast.64* %r12111 <- (64) %r12110
	phisrc.64*  %phi510 <- %r12111
	br          .L2745

.L2745:
	phi.64*     %r12112 <- %phi509, %phi510
	load.32     %r12113 <- 0[i]
	cast.32     %r12114 <- (32) %r12113
	lsr.32      %r12115 <- %r12114, $14
	and.32      %r12116 <- %r12115, $511
	cast.32     %r12117 <- (32) %r12116
	and.32      %r12118 <- %r12117, $256
	cbr         %r12118, .L2746, .L2747

.L2746:
	load.64*    %r12119 <- 0[k]
	load.32     %r12120 <- 0[i]
	cast.32     %r12121 <- (32) %r12120
	lsr.32      %r12122 <- %r12121, $14
	and.32      %r12123 <- %r12122, $511
	cast.32     %r12124 <- (32) %r12123
	scast.32    %r12125 <- (32) %r12124
	and.32      %r12126 <- %r12125, $0xfffffeff
	scast.64    %r12127 <- (32) %r12126
	muls.64     %r12128 <- %r12127, $16
	add.64*     %r12129 <- %r12119, %r12128
	phisrc.64*  %phi511 <- %r12129
	br          .L2748

.L2747:
	load.64*    %r12130 <- 0[base]
	load.32     %r12131 <- 0[i]
	cast.32     %r12132 <- (32) %r12131
	lsr.32      %r12133 <- %r12132, $14
	and.32      %r12134 <- %r12133, $511
	cast.32     %r12135 <- (32) %r12134
	scast.64    %r12136 <- (32) %r12135
	muls.64     %r12137 <- %r12136, $16
	add.64*     %r12138 <- %r12130, %r12137
	ptrcast.64* %r12139 <- (64) %r12138
	phisrc.64*  %phi512 <- %r12139
	br          .L2748

.L2748:
	phi.64*     %r12140 <- %phi511, %phi512
	push.64*    %r12084
	push.64*    %r12112
	push.64*    %r12140
	call.32     %r12141 <- lessequal
	load.32     %r12142 <- 0[i]
	cast.32     %r12143 <- (32) %r12142
	lsr.32      %r12144 <- %r12143, $6
	and.32      %r12145 <- %r12144, $255
	cast.32     %r12146 <- (32) %r12145
	seteq.32    %r12147 <- %r12141, %r12146
	cbr         %r12147, .L2741, .L2742

.L2741:
	load.64*    %r12148 <- 0[pc]
	load.32     %r12149 <- 0[%r12148]
	cast.32     %r12150 <- (32) %r12149
	lsr.32      %r12151 <- %r12150, $14
	and.32      %r12152 <- %r12151, $0x3ffff
	cast.32     %r12153 <- (32) %r12152
	sub.32      %r12154 <- %r12153, $0x1ffff
	scast.64    %r12155 <- (32) %r12154
	muls.64     %r12156 <- %r12155, $4
	load.64*    %r12157 <- 0[pc]
	cast.64     %r12158 <- (64) %r12157
	add.64      %r12159 <- %r12158, %r12156
	ptrcast.64* %r12160 <- (64) %r12159
	store.64*   %r12160 -> 0[pc]
	br          .L2742

.L2742:
	load.64*    %r12161 <- 0[L]
	load.64*    %r12162 <- 24[%r12161]
	store.64*   %r12162 -> 0[base]
	load.64*    %r12163 <- 0[pc]
	add.64*     %r12164 <- %r12163, $4
	store.64*   %r12164 -> 0[pc]
	br          .L2580

.L2610:
	load.64*    %r12165 <- 0[ra]
	load.32     %r12166 <- 8[%r12165]
	seteq.32    %r12167 <- %r12166, $0
	cbr         %r12167, .L2751, .L2752

.L2751:
	phisrc.32   %phi513 <- $1
	br          .L2753

.L2752:
	load.64*    %r12168 <- 0[ra]
	load.32     %r12169 <- 8[%r12168]
	seteq.32    %r12170 <- %r12169, $1
	cbr         %r12170, .L2754, .L2755

.L2754:
	load.64*    %r12171 <- 0[ra]
	load.32     %r12172 <- 0[%r12171]
	seteq.32    %r12173 <- %r12172, $0
	phisrc.32   %phi514 <- %r12173
	br          .L2756

.L2755:
	phisrc.32   %phi515 <- $0
	br          .L2756

.L2756:
	phi.32      %r12174 <- %phi514, %phi515
	phisrc.32   %phi516 <- %r12174
	br          .L2753

.L2753:
	phi.32      %r12175 <- %phi513, %phi516
	load.32     %r12176 <- 0[i]
	cast.32     %r12177 <- (32) %r12176
	lsr.32      %r12178 <- %r12177, $14
	and.32      %r12179 <- %r12178, $511
	cast.32     %r12180 <- (32) %r12179
	setne.32    %r12181 <- %r12175, %r12180
	cbr         %r12181, .L2749, .L2750

.L2749:
	load.64*    %r12182 <- 0[pc]
	load.32     %r12183 <- 0[%r12182]
	cast.32     %r12184 <- (32) %r12183
	lsr.32      %r12185 <- %r12184, $14
	and.32      %r12186 <- %r12185, $0x3ffff
	cast.32     %r12187 <- (32) %r12186
	sub.32      %r12188 <- %r12187, $0x1ffff
	scast.64    %r12189 <- (32) %r12188
	muls.64     %r12190 <- %r12189, $4
	load.64*    %r12191 <- 0[pc]
	cast.64     %r12192 <- (64) %r12191
	add.64      %r12193 <- %r12192, %r12190
	ptrcast.64* %r12194 <- (64) %r12193
	store.64*   %r12194 -> 0[pc]
	br          .L2750

.L2750:
	load.64*    %r12195 <- 0[pc]
	add.64*     %r12196 <- %r12195, $4
	store.64*   %r12196 -> 0[pc]
	br          .L2580

.L2611:
	load.64*    %r12197 <- 0[base]
	load.32     %r12198 <- 0[i]
	cast.32     %r12199 <- (32) %r12198
	lsr.32      %r12200 <- %r12199, $23
	and.32      %r12201 <- %r12200, $511
	cast.32     %r12202 <- (32) %r12201
	scast.64    %r12203 <- (32) %r12202
	muls.64     %r12204 <- %r12203, $16
	add.64*     %r12205 <- %r12197, %r12204
	store.64*   %r12205 -> 0[rb]
	load.64*    %r12206 <- 0[rb]
	load.32     %r12207 <- 8[%r12206]
	seteq.32    %r12208 <- %r12207, $0
	cbr         %r12208, .L2759, .L2760

.L2759:
	phisrc.32   %phi517 <- $1
	br          .L2761

.L2760:
	load.64*    %r12209 <- 0[rb]
	load.32     %r12210 <- 8[%r12209]
	seteq.32    %r12211 <- %r12210, $1
	cbr         %r12211, .L2762, .L2763

.L2762:
	load.64*    %r12212 <- 0[rb]
	load.32     %r12213 <- 0[%r12212]
	seteq.32    %r12214 <- %r12213, $0
	phisrc.32   %phi518 <- %r12214
	br          .L2764

.L2763:
	phisrc.32   %phi519 <- $0
	br          .L2764

.L2764:
	phi.32      %r12215 <- %phi518, %phi519
	phisrc.32   %phi520 <- %r12215
	br          .L2761

.L2761:
	phi.32      %r12216 <- %phi517, %phi520
	load.32     %r12217 <- 0[i]
	cast.32     %r12218 <- (32) %r12217
	lsr.32      %r12219 <- %r12218, $14
	and.32      %r12220 <- %r12219, $511
	cast.32     %r12221 <- (32) %r12220
	setne.32    %r12222 <- %r12216, %r12221
	cbr         %r12222, .L2757, .L2758

.L2757:
	load.64*    %r12223 <- 0[rb]
	store.64*   %r12223 -> 0[o2]
	load.64*    %r12224 <- 0[ra]
	store.64*   %r12224 -> 0[o1]
	load.64*    %r12225 <- 0[o2]
	load.f64    %r12226 <- 0[%r12225]
	fpcast.f64  %r12227 <- (64) %r12226
	load.64*    %r12228 <- 0[o1]
	store.f64   %r12227 -> 0[%r12228]
	load.64*    %r12229 <- 0[o2]
	load.32     %r12230 <- 8[%r12229]
	scast.32    %r12231 <- (32) %r12230
	load.64*    %r12232 <- 0[o1]
	store.32    %r12231 -> 8[%r12232]
	load.64*    %r12233 <- 0[pc]
	load.32     %r12234 <- 0[%r12233]
	cast.32     %r12235 <- (32) %r12234
	lsr.32      %r12236 <- %r12235, $14
	and.32      %r12237 <- %r12236, $0x3ffff
	cast.32     %r12238 <- (32) %r12237
	sub.32      %r12239 <- %r12238, $0x1ffff
	scast.64    %r12240 <- (32) %r12239
	muls.64     %r12241 <- %r12240, $4
	load.64*    %r12242 <- 0[pc]
	cast.64     %r12243 <- (64) %r12242
	add.64      %r12244 <- %r12243, %r12241
	ptrcast.64* %r12245 <- (64) %r12244
	store.64*   %r12245 -> 0[pc]
	br          .L2758

.L2758:
	load.64*    %r12246 <- 0[pc]
	add.64*     %r12247 <- %r12246, $4
	store.64*   %r12247 -> 0[pc]
	br          .L2580

.L2612:
	load.32     %r12248 <- 0[i]
	cast.32     %r12249 <- (32) %r12248
	lsr.32      %r12250 <- %r12249, $23
	and.32      %r12251 <- %r12250, $511
	cast.32     %r12252 <- (32) %r12251
	store.32    %r12252 -> 0[b]
	load.32     %r12253 <- 0[i]
	cast.32     %r12254 <- (32) %r12253
	lsr.32      %r12255 <- %r12254, $14
	and.32      %r12256 <- %r12255, $511
	cast.32     %r12257 <- (32) %r12256
	sub.32      %r12258 <- %r12257, $1
	store.32    %r12258 -> 0[nresults]
	load.32     %r12259 <- 0[b]
	setne.32    %r12260 <- %r12259, $0
	cbr         %r12260, .L2765, .L2766

.L2765:
	load.64*    %r12261 <- 0[ra]
	load.32     %r12262 <- 0[b]
	scast.64    %r12263 <- (32) %r12262
	muls.64     %r12264 <- %r12263, $16
	add.64*     %r12265 <- %r12261, %r12264
	load.64*    %r12266 <- 0[L]
	store.64*   %r12265 -> 16[%r12266]
	br          .L2766

.L2766:
	load.64*    %r12267 <- 0[pc]
	load.64*    %r12268 <- 0[L]
	store.64*   %r12267 -> 48[%r12268]
	load.64*    %r12269 <- 0[L]
	load.64*    %r12270 <- 0[ra]
	load.32     %r12271 <- 0[nresults]
	push.64*    %r12269
	push.64*    %r12270
	push.32     %r12271
	call.32     %r12272 <- luaD_precall
	switch.32   %r12272, 0 -> .L2768, 1 -> .L2769, default -> .L2770

.L2768:
	load.32     %r12273 <- 0[nexeccalls]
	add.32      %r12274 <- %r12273, $1
	store.32    %r12274 -> 0[nexeccalls]
	br          .L2578

.L2769:
	load.32     %r12275 <- 0[nresults]
	setge.32    %r12276 <- %r12275, $0
	cbr         %r12276, .L2771, .L2772

.L2771:
	load.64*    %r12277 <- 0[L]
	load.64*    %r12278 <- 40[%r12277]
	load.64*    %r12279 <- 16[%r12278]
	load.64*    %r12280 <- 0[L]
	store.64*   %r12279 -> 16[%r12280]
	br          .L2772

.L2772:
	load.64*    %r12281 <- 0[L]
	load.64*    %r12282 <- 24[%r12281]
	store.64*   %r12282 -> 0[base]
	br          .L2580

.L2770:
	br          .L2773

.L2613:
	load.32     %r12283 <- 0[i]
	cast.32     %r12284 <- (32) %r12283
	lsr.32      %r12285 <- %r12284, $23
	and.32      %r12286 <- %r12285, $511
	cast.32     %r12287 <- (32) %r12286
	store.32    %r12287 -> 0[b]
	load.32     %r12288 <- 0[b]
	setne.32    %r12289 <- %r12288, $0
	cbr         %r12289, .L2774, .L2775

.L2774:
	load.64*    %r12290 <- 0[ra]
	load.32     %r12291 <- 0[b]
	scast.64    %r12292 <- (32) %r12291
	muls.64     %r12293 <- %r12292, $16
	add.64*     %r12294 <- %r12290, %r12293
	load.64*    %r12295 <- 0[L]
	store.64*   %r12294 -> 16[%r12295]
	br          .L2775

.L2775:
	load.64*    %r12296 <- 0[pc]
	load.64*    %r12297 <- 0[L]
	store.64*   %r12296 -> 48[%r12297]
	load.64*    %r12298 <- 0[L]
	load.64*    %r12299 <- 0[ra]
	push.64*    %r12298
	push.64*    %r12299
	push.32     $0xffffffff
	call.32     %r12300 <- luaD_precall
	switch.32   %r12300, 0 -> .L2777, 1 -> .L2778, default -> .L2779

.L2777:
	load.64*    %r12301 <- 0[L]
	load.64*    %r12302 <- 40[%r12301]
	sub.64*     %r12303 <- %r12302, $40
	store.64*   %r12303 -> 0[ci]
	load.64*    %r12304 <- 0[ci]
	load.64*    %r12305 <- 8[%r12304]
	store.64*   %r12305 -> 0[func]
	load.64*    %r12306 <- 0[ci]
	load.64*    %r12307 <- 48[%r12306]
	store.64*   %r12307 -> 0[pfunc]
	load.64*    %r12308 <- 0[L]
	load.64*    %r12309 <- 152[%r12308]
	cbr         %r12309, .L2780, .L2781

.L2780:
	load.64*    %r12310 <- 0[L]
	load.64*    %r12311 <- 0[ci]
	load.64*    %r12312 <- 0[%r12311]
	push.64*    %r12310
	push.64*    %r12312
	call        luaF_close
	br          .L2781

.L2781:
	load.64*    %r12313 <- 0[ci]
	load.64*    %r12314 <- 8[%r12313]
	load.64*    %r12315 <- 0[ci]
	load.64*    %r12316 <- 40[%r12315]
	load.64*    %r12317 <- 0[pfunc]
	sub.64      %r12318 <- %r12316, %r12317
	divs.64     %r12319 <- %r12318, $16
	muls.64     %r12320 <- %r12319, $16
	add.64*     %r12321 <- %r12314, %r12320
	load.64*    %r12322 <- 0[ci]
	store.64*   %r12321 -> 0[%r12322]
	load.64*    %r12323 <- 0[L]
	store.64*   %r12321 -> 24[%r12323]
	store.32    $0 -> 0[aux]
	br          .L2785

.L2785:
	load.64*    %r12324 <- 0[pfunc]
	load.32     %r12325 <- 0[aux]
	scast.64    %r12326 <- (32) %r12325
	muls.64     %r12327 <- %r12326, $16
	add.64*     %r12328 <- %r12324, %r12327
	load.64*    %r12329 <- 0[L]
	load.64*    %r12330 <- 16[%r12329]
	setb.32     %r12331 <- %r12328, %r12330
	cbr         %r12331, .L2782, .L2784

.L2782:
	load.64*    %r12332 <- 0[pfunc]
	load.32     %r12333 <- 0[aux]
	scast.64    %r12334 <- (32) %r12333
	muls.64     %r12335 <- %r12334, $16
	add.64*     %r12336 <- %r12332, %r12335
	store.64*   %r12336 -> 0[o2]
	load.64*    %r12337 <- 0[func]
	load.32     %r12338 <- 0[aux]
	scast.64    %r12339 <- (32) %r12338
	muls.64     %r12340 <- %r12339, $16
	add.64*     %r12341 <- %r12337, %r12340
	store.64*   %r12341 -> 0[o1]
	load.64*    %r12342 <- 0[o2]
	load.f64    %r12343 <- 0[%r12342]
	fpcast.f64  %r12344 <- (64) %r12343
	load.64*    %r12345 <- 0[o1]
	store.f64   %r12344 -> 0[%r12345]
	load.64*    %r12346 <- 0[o2]
	load.32     %r12347 <- 8[%r12346]
	scast.32    %r12348 <- (32) %r12347
	load.64*    %r12349 <- 0[o1]
	store.32    %r12348 -> 8[%r12349]
	br          .L2783

.L2783:
	load.32     %r12350 <- 0[aux]
	add.32      %r12351 <- %r12350, $1
	store.32    %r12351 -> 0[aux]
	br          .L2785

.L2784:
	load.64*    %r12352 <- 0[func]
	load.32     %r12353 <- 0[aux]
	scast.64    %r12354 <- (32) %r12353
	muls.64     %r12355 <- %r12354, $16
	add.64*     %r12356 <- %r12352, %r12355
	load.64*    %r12357 <- 0[L]
	store.64*   %r12356 -> 16[%r12357]
	load.64*    %r12358 <- 0[ci]
	store.64*   %r12356 -> 16[%r12358]
	load.64*    %r12359 <- 0[L]
	load.64*    %r12360 <- 48[%r12359]
	load.64*    %r12361 <- 0[ci]
	store.64*   %r12360 -> 24[%r12361]
	load.64*    %r12362 <- 0[ci]
	load.32     %r12363 <- 36[%r12362]
	add.32      %r12364 <- %r12363, $1
	store.32    %r12364 -> 36[%r12362]
	load.64*    %r12365 <- 0[L]
	load.64*    %r12366 <- 40[%r12365]
	sub.64*     %r12367 <- %r12366, $40
	store.64*   %r12367 -> 40[%r12365]
	br          .L2578

.L2778:
	load.64*    %r12368 <- 0[L]
	load.64*    %r12369 <- 24[%r12368]
	store.64*   %r12369 -> 0[base]
	br          .L2580

.L2779:
	br          .L2773

.L2614:
	load.32     %r12370 <- 0[i]
	cast.32     %r12371 <- (32) %r12370
	lsr.32      %r12372 <- %r12371, $23
	and.32      %r12373 <- %r12372, $511
	cast.32     %r12374 <- (32) %r12373
	store.32    %r12374 -> 0[b]
	load.32     %r12375 <- 0[b]
	setne.32    %r12376 <- %r12375, $0
	cbr         %r12376, .L2786, .L2787

.L2786:
	load.64*    %r12377 <- 0[ra]
	load.32     %r12378 <- 0[b]
	scast.64    %r12379 <- (32) %r12378
	muls.64     %r12380 <- %r12379, $16
	add.64*     %r12381 <- %r12377, %r12380
	sub.64*     %r12382 <- %r12381, $16
	load.64*    %r12383 <- 0[L]
	store.64*   %r12382 -> 16[%r12383]
	br          .L2787

.L2787:
	load.64*    %r12384 <- 0[L]
	load.64*    %r12385 <- 152[%r12384]
	cbr         %r12385, .L2788, .L2789

.L2788:
	load.64*    %r12386 <- 0[L]
	load.64*    %r12387 <- 0[base]
	push.64*    %r12386
	push.64*    %r12387
	call        luaF_close
	br          .L2789

.L2789:
	load.64*    %r12388 <- 0[pc]
	load.64*    %r12389 <- 0[L]
	store.64*   %r12388 -> 48[%r12389]
	load.64*    %r12390 <- 0[L]
	load.64*    %r12391 <- 0[ra]
	push.64*    %r12390
	push.64*    %r12391
	call.32     %r12392 <- luaD_poscall
	store.32    %r12392 -> 0[b]
	load.32     %r12393 <- 0[nexeccalls]
	sub.32      %r12394 <- %r12393, $1
	store.32    %r12394 -> 0[nexeccalls]
	seteq.32    %r12395 <- %r12394, $0
	cbr         %r12395, .L2790, .L2791

.L2790:
	br          .L2773

.L2791:
	load.32     %r12396 <- 0[b]
	cbr         %r12396, .L2793, .L2794

.L2793:
	load.64*    %r12397 <- 0[L]
	load.64*    %r12398 <- 40[%r12397]
	load.64*    %r12399 <- 16[%r12398]
	load.64*    %r12400 <- 0[L]
	store.64*   %r12399 -> 16[%r12400]
	br          .L2794

.L2794:
	br          .L2578

.L2615:
	load.64*    %r12401 <- 0[ra]
	load.f64    %r12402 <- 32[%r12401]
	store.f64   %r12402 -> 0[step]
	load.64*    %r12403 <- 0[ra]
	load.f64    %r12404 <- 0[%r12403]
	load.f64    %r12405 <- 0[step]
	add.f64     %r12406 <- %r12404, %r12405
	store.f64   %r12406 -> 0[idx]
	load.64*    %r12407 <- 0[ra]
	load.f64    %r12408 <- 16[%r12407]
	store.f64   %r12408 -> 0[limit]
	load.f64    %r12409 <- 0[idx]
	load.f64    %r12410 <- 0[limit]
	setle.32    %r12411 <- %r12409, %r12410
	load.f64    %r12412 <- 0[limit]
	load.f64    %r12413 <- 0[idx]
	setle.32    %r12414 <- %r12412, %r12413
	set.f64     %r12415 <- 0.000000
	load.f64    %r12416 <- 0[step]
	setlt.32    %r12417 <- %r12415, %r12416
	select.32   %r12418 <- %r12417, %r12411, %r12414
	cbr         %r12418, .L2795, .L2796

.L2795:
	load.32     %r12419 <- 0[i]
	cast.32     %r12420 <- (32) %r12419
	lsr.32      %r12421 <- %r12420, $14
	and.32      %r12422 <- %r12421, $0x3ffff
	cast.32     %r12423 <- (32) %r12422
	sub.32      %r12424 <- %r12423, $0x1ffff
	scast.64    %r12425 <- (32) %r12424
	muls.64     %r12426 <- %r12425, $4
	load.64*    %r12427 <- 0[pc]
	cast.64     %r12428 <- (64) %r12427
	add.64      %r12429 <- %r12428, %r12426
	ptrcast.64* %r12430 <- (64) %r12429
	store.64*   %r12430 -> 0[pc]
	load.64*    %r12431 <- 0[ra]
	store.64*   %r12431 -> 0[i_o]
	load.f64    %r12432 <- 0[idx]
	load.64*    %r12433 <- 0[i_o]
	store.f64   %r12432 -> 0[%r12433]
	load.64*    %r12434 <- 0[i_o]
	store.32    $3 -> 8[%r12434]
	load.64*    %r12435 <- 0[ra]
	add.64*     %r12436 <- %r12435, $48
	store.64*   %r12436 -> 0[i_o]
	load.f64    %r12437 <- 0[idx]
	load.64*    %r12438 <- 0[i_o]
	store.f64   %r12437 -> 0[%r12438]
	load.64*    %r12439 <- 0[i_o]
	store.32    $3 -> 8[%r12439]
	br          .L2796

.L2796:
	br          .L2580

.L2616:
	load.64*    %r12440 <- 0[ra]
	store.64*   %r12440 -> 0[init]
	load.64*    %r12441 <- 0[ra]
	add.64*     %r12442 <- %r12441, $16
	store.64*   %r12442 -> 0[plimit]
	load.64*    %r12443 <- 0[ra]
	add.64*     %r12444 <- %r12443, $32
	store.64*   %r12444 -> 0[pstep]
	load.64*    %r12445 <- 0[pc]
	load.64*    %r12446 <- 0[L]
	store.64*   %r12445 -> 48[%r12446]
	load.64*    %r12447 <- 0[init]
	load.32     %r12448 <- 8[%r12447]
	scast.32    %r12449 <- (32) %r12448
	seteq.32    %r12450 <- %r12449, $3
	cbr         %r12450, .L2798, .L2799

.L2799:
	load.64*    %r12451 <- 0[init]
	load.64*    %r12452 <- 0[ra]
	push.64*    %r12451
	push.64*    %r12452
	call.64*    %r12453 <- luaV_tonumber
	store.64*   %r12453 -> 0[init]
	setne.32    %r12454 <- %r12453, $0
	cbr         %r12454, .L2798, .L2797

.L2797:
	load.64*    %r12455 <- 0[L]
	symaddr.64* %r12456 <- <anon symbol:0x1d6b750>
	push.64*    %r12455
	push.64*    %r12456
	call        luaG_runerror
	br          .L2800

.L2798:
	load.64*    %r12457 <- 0[plimit]
	load.32     %r12458 <- 8[%r12457]
	scast.32    %r12459 <- (32) %r12458
	seteq.32    %r12460 <- %r12459, $3
	cbr         %r12460, .L2802, .L2803

.L2803:
	load.64*    %r12461 <- 0[plimit]
	load.64*    %r12462 <- 0[ra]
	add.64*     %r12463 <- %r12462, $16
	push.64*    %r12461
	push.64*    %r12463
	call.64*    %r12464 <- luaV_tonumber
	store.64*   %r12464 -> 0[plimit]
	setne.32    %r12465 <- %r12464, $0
	cbr         %r12465, .L2802, .L2801

.L2801:
	load.64*    %r12466 <- 0[L]
	symaddr.64* %r12467 <- <anon symbol:0x1d6bcc0>
	push.64*    %r12466
	push.64*    %r12467
	call        luaG_runerror
	br          .L2804

.L2802:
	load.64*    %r12468 <- 0[pstep]
	load.32     %r12469 <- 8[%r12468]
	scast.32    %r12470 <- (32) %r12469
	seteq.32    %r12471 <- %r12470, $3
	cbr         %r12471, .L2806, .L2807

.L2807:
	load.64*    %r12472 <- 0[pstep]
	load.64*    %r12473 <- 0[ra]
	add.64*     %r12474 <- %r12473, $32
	push.64*    %r12472
	push.64*    %r12474
	call.64*    %r12475 <- luaV_tonumber
	store.64*   %r12475 -> 0[pstep]
	setne.32    %r12476 <- %r12475, $0
	cbr         %r12476, .L2806, .L2805

.L2805:
	load.64*    %r12477 <- 0[L]
	symaddr.64* %r12478 <- <anon symbol:0x1d6c230>
	push.64*    %r12477
	push.64*    %r12478
	call        luaG_runerror
	br          .L2806

.L2806:
	br          .L2804

.L2804:
	br          .L2800

.L2800:
	load.64*    %r12479 <- 0[ra]
	store.64*   %r12479 -> 0[i_o]
	load.64*    %r12480 <- 0[ra]
	load.f64    %r12481 <- 0[%r12480]
	load.64*    %r12482 <- 0[pstep]
	load.f64    %r12483 <- 0[%r12482]
	fpcast.f64  %r12484 <- (64) %r12483
	sub.f64     %r12485 <- %r12481, %r12484
	load.64*    %r12486 <- 0[i_o]
	store.f64   %r12485 -> 0[%r12486]
	load.64*    %r12487 <- 0[i_o]
	store.32    $3 -> 8[%r12487]
	load.32     %r12488 <- 0[i]
	cast.32     %r12489 <- (32) %r12488
	lsr.32      %r12490 <- %r12489, $14
	and.32      %r12491 <- %r12490, $0x3ffff
	cast.32     %r12492 <- (32) %r12491
	sub.32      %r12493 <- %r12492, $0x1ffff
	scast.64    %r12494 <- (32) %r12493
	muls.64     %r12495 <- %r12494, $4
	load.64*    %r12496 <- 0[pc]
	cast.64     %r12497 <- (64) %r12496
	add.64      %r12498 <- %r12497, %r12495
	ptrcast.64* %r12499 <- (64) %r12498
	store.64*   %r12499 -> 0[pc]
	br          .L2580

.L2617:
	load.64*    %r12500 <- 0[ra]
	add.64*     %r12501 <- %r12500, $48
	store.64*   %r12501 -> 0[cb]
	load.64*    %r12502 <- 0[ra]
	add.64*     %r12503 <- %r12502, $32
	store.64*   %r12503 -> 0[o2]
	load.64*    %r12504 <- 0[cb]
	add.64*     %r12505 <- %r12504, $32
	store.64*   %r12505 -> 0[o1]
	load.64*    %r12506 <- 0[o2]
	load.f64    %r12507 <- 0[%r12506]
	fpcast.f64  %r12508 <- (64) %r12507
	load.64*    %r12509 <- 0[o1]
	store.f64   %r12508 -> 0[%r12509]
	load.64*    %r12510 <- 0[o2]
	load.32     %r12511 <- 8[%r12510]
	scast.32    %r12512 <- (32) %r12511
	load.64*    %r12513 <- 0[o1]
	store.32    %r12512 -> 8[%r12513]
	load.64*    %r12514 <- 0[ra]
	add.64*     %r12515 <- %r12514, $16
	store.64*   %r12515 -> 0[o2]
	load.64*    %r12516 <- 0[cb]
	add.64*     %r12517 <- %r12516, $16
	store.64*   %r12517 -> 0[o1]
	load.64*    %r12518 <- 0[o2]
	load.f64    %r12519 <- 0[%r12518]
	fpcast.f64  %r12520 <- (64) %r12519
	load.64*    %r12521 <- 0[o1]
	store.f64   %r12520 -> 0[%r12521]
	load.64*    %r12522 <- 0[o2]
	load.32     %r12523 <- 8[%r12522]
	scast.32    %r12524 <- (32) %r12523
	load.64*    %r12525 <- 0[o1]
	store.32    %r12524 -> 8[%r12525]
	load.64*    %r12526 <- 0[ra]
	store.64*   %r12526 -> 0[o2]
	load.64*    %r12527 <- 0[cb]
	store.64*   %r12527 -> 0[o1]
	load.64*    %r12528 <- 0[o2]
	load.f64    %r12529 <- 0[%r12528]
	fpcast.f64  %r12530 <- (64) %r12529
	load.64*    %r12531 <- 0[o1]
	store.f64   %r12530 -> 0[%r12531]
	load.64*    %r12532 <- 0[o2]
	load.32     %r12533 <- 8[%r12532]
	scast.32    %r12534 <- (32) %r12533
	load.64*    %r12535 <- 0[o1]
	store.32    %r12534 -> 8[%r12535]
	load.64*    %r12536 <- 0[cb]
	add.64*     %r12537 <- %r12536, $48
	load.64*    %r12538 <- 0[L]
	store.64*   %r12537 -> 16[%r12538]
	load.64*    %r12539 <- 0[pc]
	load.64*    %r12540 <- 0[L]
	store.64*   %r12539 -> 48[%r12540]
	load.64*    %r12541 <- 0[L]
	load.64*    %r12542 <- 0[cb]
	load.32     %r12543 <- 0[i]
	cast.32     %r12544 <- (32) %r12543
	lsr.32      %r12545 <- %r12544, $14
	and.32      %r12546 <- %r12545, $511
	cast.32     %r12547 <- (32) %r12546
	push.64*    %r12541
	push.64*    %r12542
	push.32     %r12547
	call        luaD_call
	load.64*    %r12548 <- 0[L]
	load.64*    %r12549 <- 24[%r12548]
	store.64*   %r12549 -> 0[base]
	load.64*    %r12550 <- 0[L]
	load.64*    %r12551 <- 40[%r12550]
	load.64*    %r12552 <- 16[%r12551]
	load.64*    %r12553 <- 0[L]
	store.64*   %r12552 -> 16[%r12553]
	load.64*    %r12554 <- 0[base]
	load.32     %r12555 <- 0[i]
	cast.32     %r12556 <- (32) %r12555
	lsr.32      %r12557 <- %r12556, $6
	and.32      %r12558 <- %r12557, $255
	cast.32     %r12559 <- (32) %r12558
	scast.64    %r12560 <- (32) %r12559
	muls.64     %r12561 <- %r12560, $16
	add.64*     %r12562 <- %r12554, %r12561
	add.64*     %r12563 <- %r12562, $48
	store.64*   %r12563 -> 0[cb]
	load.64*    %r12564 <- 0[cb]
	load.32     %r12565 <- 8[%r12564]
	seteq.32    %r12566 <- %r12565, $0
	cbr         %r12566, .L2809, .L2808

.L2808:
	load.64*    %r12567 <- 0[cb]
	store.64*   %r12567 -> 0[o2]
	load.64*    %r12568 <- 0[cb]
	sub.64*     %r12569 <- %r12568, $16
	store.64*   %r12569 -> 0[o1]
	load.64*    %r12570 <- 0[o2]
	load.f64    %r12571 <- 0[%r12570]
	fpcast.f64  %r12572 <- (64) %r12571
	load.64*    %r12573 <- 0[o1]
	store.f64   %r12572 -> 0[%r12573]
	load.64*    %r12574 <- 0[o2]
	load.32     %r12575 <- 8[%r12574]
	scast.32    %r12576 <- (32) %r12575
	load.64*    %r12577 <- 0[o1]
	store.32    %r12576 -> 8[%r12577]
	load.64*    %r12578 <- 0[pc]
	load.32     %r12579 <- 0[%r12578]
	cast.32     %r12580 <- (32) %r12579
	lsr.32      %r12581 <- %r12580, $14
	and.32      %r12582 <- %r12581, $0x3ffff
	cast.32     %r12583 <- (32) %r12582
	sub.32      %r12584 <- %r12583, $0x1ffff
	scast.64    %r12585 <- (32) %r12584
	muls.64     %r12586 <- %r12585, $4
	load.64*    %r12587 <- 0[pc]
	cast.64     %r12588 <- (64) %r12587
	add.64      %r12589 <- %r12588, %r12586
	ptrcast.64* %r12590 <- (64) %r12589
	store.64*   %r12590 -> 0[pc]
	br          .L2809

.L2809:
	load.64*    %r12591 <- 0[pc]
	add.64*     %r12592 <- %r12591, $4
	store.64*   %r12592 -> 0[pc]
	br          .L2580

.L2618:
	load.32     %r12593 <- 0[i]
	cast.32     %r12594 <- (32) %r12593
	lsr.32      %r12595 <- %r12594, $23
	and.32      %r12596 <- %r12595, $511
	cast.32     %r12597 <- (32) %r12596
	store.32    %r12597 -> 0[n]
	load.32     %r12598 <- 0[i]
	cast.32     %r12599 <- (32) %r12598
	lsr.32      %r12600 <- %r12599, $14
	and.32      %r12601 <- %r12600, $511
	cast.32     %r12602 <- (32) %r12601
	store.32    %r12602 -> 0[c]
	load.32     %r12603 <- 0[n]
	seteq.32    %r12604 <- %r12603, $0
	cbr         %r12604, .L2810, .L2811

.L2810:
	load.64*    %r12605 <- 0[L]
	load.64*    %r12606 <- 16[%r12605]
	load.64*    %r12607 <- 0[ra]
	sub.64      %r12608 <- %r12606, %r12607
	divs.64     %r12609 <- %r12608, $16
	scast.32    %r12610 <- (64) %r12609
	sub.32      %r12611 <- %r12610, $1
	store.32    %r12611 -> 0[n]
	load.64*    %r12612 <- 0[L]
	load.64*    %r12613 <- 40[%r12612]
	load.64*    %r12614 <- 16[%r12613]
	load.64*    %r12615 <- 0[L]
	store.64*   %r12614 -> 16[%r12615]
	br          .L2811

.L2811:
	load.32     %r12616 <- 0[c]
	seteq.32    %r12617 <- %r12616, $0
	cbr         %r12617, .L2812, .L2813

.L2812:
	load.64*    %r12618 <- 0[pc]
	add.64*     %r12619 <- %r12618, $4
	store.64*   %r12619 -> 0[pc]
	load.32     %r12620 <- 0[%r12618]
	cast.32     %r12621 <- (32) %r12620
	store.32    %r12621 -> 0[c]
	br          .L2813

.L2813:
	load.64*    %r12622 <- 0[ra]
	load.32     %r12623 <- 8[%r12622]
	seteq.32    %r12624 <- %r12623, $5
	cbr         %r12624, .L2815, .L2814

.L2814:
	br          .L2583

.L2815:
	load.64*    %r12625 <- 0[ra]
	load.64*    %r12626 <- 0[%r12625]
	add.64*     %r12627 <- %r12626, $0
	store.64*   %r12627 -> 0[h]
	load.32     %r12628 <- 0[c]
	sub.32      %r12629 <- %r12628, $1
	muls.32     %r12630 <- %r12629, $50
	load.32     %r12631 <- 0[n]
	add.32      %r12632 <- %r12630, %r12631
	store.32    %r12632 -> 0[last]
	load.32     %r12633 <- 0[last]
	load.64*    %r12634 <- 0[h]
	load.32     %r12635 <- 56[%r12634]
	setgt.32    %r12636 <- %r12633, %r12635
	cbr         %r12636, .L2816, .L2817

.L2816:
	load.64*    %r12637 <- 0[L]
	load.64*    %r12638 <- 0[h]
	load.32     %r12639 <- 0[last]
	push.64*    %r12637
	push.64*    %r12638
	push.32     %r12639
	call        luaH_resizearray
	br          .L2817

.L2817:
	br          .L2821

.L2821:
	load.32     %r12640 <- 0[n]
	setgt.32    %r12641 <- %r12640, $0
	cbr         %r12641, .L2818, .L2820

.L2818:
	load.64*    %r12642 <- 0[ra]
	load.32     %r12643 <- 0[n]
	scast.64    %r12644 <- (32) %r12643
	muls.64     %r12645 <- %r12644, $16
	add.64*     %r12646 <- %r12642, %r12645
	store.64*   %r12646 -> 0[val]
	load.64*    %r12647 <- 0[val]
	store.64*   %r12647 -> 0[o2]
	load.64*    %r12648 <- 0[L]
	load.64*    %r12649 <- 0[h]
	load.32     %r12650 <- 0[last]
	sub.32      %r12651 <- %r12650, $1
	store.32    %r12651 -> 0[last]
	push.64*    %r12648
	push.64*    %r12649
	push.32     %r12650
	call.64*    %r12652 <- luaH_setnum
	store.64*   %r12652 -> 0[o1]
	load.64*    %r12653 <- 0[o2]
	load.f64    %r12654 <- 0[%r12653]
	fpcast.f64  %r12655 <- (64) %r12654
	load.64*    %r12656 <- 0[o1]
	store.f64   %r12655 -> 0[%r12656]
	load.64*    %r12657 <- 0[o2]
	load.32     %r12658 <- 8[%r12657]
	scast.32    %r12659 <- (32) %r12658
	load.64*    %r12660 <- 0[o1]
	store.32    %r12659 -> 8[%r12660]
	load.64*    %r12661 <- 0[val]
	load.32     %r12662 <- 8[%r12661]
	setge.32    %r12663 <- %r12662, $4
	cbr         %r12663, .L2825, .L2823

.L2825:
	load.64*    %r12664 <- 0[val]
	load.64*    %r12665 <- 0[%r12664]
	load.8      %r12666 <- 9[%r12665]
	cast.32     %r12667 <- (8) %r12666
	and.32      %r12668 <- %r12667, $3
	cbr         %r12668, .L2824, .L2823

.L2824:
	load.64*    %r12669 <- 0[h]
	ptrcast.64* %r12670 <- (64) %r12669
	load.8      %r12671 <- 9[%r12670]
	cast.32     %r12672 <- (8) %r12671
	and.32      %r12673 <- %r12672, $4
	cbr         %r12673, .L2822, .L2823

.L2822:
	load.64*    %r12674 <- 0[L]
	load.64*    %r12675 <- 0[h]
	push.64*    %r12674
	push.64*    %r12675
	call        luaC_barrierback
	br          .L2823

.L2823:
	br          .L2819

.L2819:
	load.32     %r12676 <- 0[n]
	sub.32      %r12677 <- %r12676, $1
	store.32    %r12677 -> 0[n]
	br          .L2821

.L2820:
	br          .L2580

.L2619:
	load.64*    %r12678 <- 0[L]
	load.64*    %r12679 <- 0[ra]
	push.64*    %r12678
	push.64*    %r12679
	call        luaF_close
	br          .L2580

.L2620:
	load.64*    %r12680 <- 0[cl]
	load.64*    %r12681 <- 32[%r12680]
	load.64*    %r12682 <- 32[%r12681]
	load.32     %r12683 <- 0[i]
	cast.32     %r12684 <- (32) %r12683
	lsr.32      %r12685 <- %r12684, $14
	and.32      %r12686 <- %r12685, $0x3ffff
	cast.32     %r12687 <- (32) %r12686
	scast.64    %r12688 <- (32) %r12687
	muls.64     %r12689 <- %r12688, $8
	add.64*     %r12690 <- %r12682, %r12689
	load.64*    %r12691 <- 0[%r12690]
	store.64*   %r12691 -> 0[p]
	load.64*    %r12692 <- 0[p]
	load.8      %r12693 <- 112[%r12692]
	cast.32     %r12694 <- (8) %r12693
	store.32    %r12694 -> 0[nup]
	load.64*    %r12695 <- 0[L]
	load.32     %r12696 <- 0[nup]
	load.64*    %r12697 <- 0[cl]
	load.64*    %r12698 <- 24[%r12697]
	push.64*    %r12695
	push.32     %r12696
	push.64*    %r12698
	call.64*    %r12699 <- luaF_newLclosure
	store.64*   %r12699 -> 0[ncl]
	load.64*    %r12700 <- 0[p]
	load.64*    %r12701 <- 0[ncl]
	store.64*   %r12700 -> 32[%r12701]
	store.32    $0 -> 0[j]
	br          .L2829

.L2829:
	load.32     %r12702 <- 0[j]
	load.32     %r12703 <- 0[nup]
	setlt.32    %r12704 <- %r12702, %r12703
	cbr         %r12704, .L2826, .L2828

.L2826:
	load.64*    %r12705 <- 0[pc]
	load.32     %r12706 <- 0[%r12705]
	cast.32     %r12707 <- (32) %r12706
	lsr.32      %r12708 <- %r12707, $0
	and.32      %r12709 <- %r12708, $63
	cast.32     %r12710 <- (32) %r12709
	scast.32    %r12711 <- (32) %r12710
	seteq.32    %r12712 <- %r12711, $4
	cbr         %r12712, .L2830, .L2831

.L2830:
	load.64*    %r12713 <- 0[cl]
	add.64*     %r12714 <- %r12713, $40
	load.64*    %r12715 <- 0[pc]
	load.32     %r12716 <- 0[%r12715]
	cast.32     %r12717 <- (32) %r12716
	lsr.32      %r12718 <- %r12717, $23
	and.32      %r12719 <- %r12718, $511
	cast.32     %r12720 <- (32) %r12719
	scast.64    %r12721 <- (32) %r12720
	muls.64     %r12722 <- %r12721, $8
	add.64*     %r12723 <- %r12714, %r12722
	load.64*    %r12724 <- 0[%r12723]
	load.64*    %r12725 <- 0[ncl]
	add.64*     %r12726 <- %r12725, $0
	add.64*     %r12727 <- %r12726, $40
	load.32     %r12728 <- 0[j]
	scast.64    %r12729 <- (32) %r12728
	muls.64     %r12730 <- %r12729, $8
	add.64*     %r12731 <- %r12727, %r12730
	store.64*   %r12724 -> 0[%r12731]
	br          .L2832

.L2831:
	load.64*    %r12732 <- 0[L]
	load.64*    %r12733 <- 0[base]
	load.64*    %r12734 <- 0[pc]
	load.32     %r12735 <- 0[%r12734]
	cast.32     %r12736 <- (32) %r12735
	lsr.32      %r12737 <- %r12736, $23
	and.32      %r12738 <- %r12737, $511
	cast.32     %r12739 <- (32) %r12738
	scast.64    %r12740 <- (32) %r12739
	muls.64     %r12741 <- %r12740, $16
	add.64*     %r12742 <- %r12733, %r12741
	push.64*    %r12732
	push.64*    %r12742
	call.64*    %r12743 <- luaF_findupval
	load.64*    %r12744 <- 0[ncl]
	add.64*     %r12745 <- %r12744, $0
	add.64*     %r12746 <- %r12745, $40
	load.32     %r12747 <- 0[j]
	scast.64    %r12748 <- (32) %r12747
	muls.64     %r12749 <- %r12748, $8
	add.64*     %r12750 <- %r12746, %r12749
	store.64*   %r12743 -> 0[%r12750]
	br          .L2832

.L2832:
	br          .L2827

.L2827:
	load.32     %r12751 <- 0[j]
	add.32      %r12752 <- %r12751, $1
	store.32    %r12752 -> 0[j]
	load.64*    %r12753 <- 0[pc]
	add.64*     %r12754 <- %r12753, $4
	store.64*   %r12754 -> 0[pc]
	br          .L2829

.L2828:
	load.64*    %r12755 <- 0[ra]
	store.64*   %r12755 -> 0[i_o]
	load.64*    %r12756 <- 0[ncl]
	ptrcast.64* %r12757 <- (64) %r12756
	load.64*    %r12758 <- 0[i_o]
	store.64*   %r12757 -> 0[%r12758]
	load.64*    %r12759 <- 0[i_o]
	store.32    $6 -> 8[%r12759]
	load.64*    %r12760 <- 0[pc]
	load.64*    %r12761 <- 0[L]
	store.64*   %r12760 -> 48[%r12761]
	load.64*    %r12762 <- 0[L]
	load.64*    %r12763 <- 32[%r12762]
	load.64     %r12764 <- 120[%r12763]
	load.64*    %r12765 <- 0[L]
	load.64*    %r12766 <- 32[%r12765]
	load.64     %r12767 <- 112[%r12766]
	setae.32    %r12768 <- %r12764, %r12767
	cbr         %r12768, .L2833, .L2834

.L2833:
	load.64*    %r12769 <- 0[L]
	push.64*    %r12769
	call        luaC_step
	br          .L2834

.L2834:
	load.64*    %r12770 <- 0[L]
	load.64*    %r12771 <- 24[%r12770]
	store.64*   %r12771 -> 0[base]
	br          .L2580

.L2621:
	load.32     %r12772 <- 0[i]
	cast.32     %r12773 <- (32) %r12772
	lsr.32      %r12774 <- %r12773, $23
	and.32      %r12775 <- %r12774, $511
	cast.32     %r12776 <- (32) %r12775
	sub.32      %r12777 <- %r12776, $1
	store.32    %r12777 -> 0[b]
	load.64*    %r12778 <- 0[L]
	load.64*    %r12779 <- 40[%r12778]
	store.64*   %r12779 -> 0[ci]
	load.64*    %r12780 <- 0[ci]
	load.64*    %r12781 <- 0[%r12780]
	load.64*    %r12782 <- 0[ci]
	load.64*    %r12783 <- 8[%r12782]
	sub.64      %r12784 <- %r12781, %r12783
	divs.64     %r12785 <- %r12784, $16
	scast.32    %r12786 <- (64) %r12785
	load.64*    %r12787 <- 0[cl]
	load.64*    %r12788 <- 32[%r12787]
	load.8      %r12789 <- 113[%r12788]
	cast.32     %r12790 <- (8) %r12789
	sub.32      %r12791 <- %r12786, %r12790
	sub.32      %r12792 <- %r12791, $1
	store.32    %r12792 -> 0[n]
	load.32     %r12793 <- 0[b]
	seteq.32    %r12794 <- %r12793, $0xffffffff
	cbr         %r12794, .L2835, .L2836

.L2835:
	load.64*    %r12795 <- 0[pc]
	load.64*    %r12796 <- 0[L]
	store.64*   %r12795 -> 48[%r12796]
	load.64*    %r12797 <- 0[L]
	load.64*    %r12798 <- 56[%r12797]
	ptrcast.64* %r12799 <- (64) %r12798
	load.64*    %r12800 <- 0[L]
	load.64*    %r12801 <- 16[%r12800]
	ptrcast.64* %r12802 <- (64) %r12801
	sub.64      %r12803 <- %r12799, %r12802
	load.32     %r12804 <- 0[n]
	muls.32     %r12805 <- %r12804, $16
	scast.64    %r12806 <- (32) %r12805
	setle.32    %r12807 <- %r12803, %r12806
	cbr         %r12807, .L2837, .L2838

.L2837:
	load.64*    %r12808 <- 0[L]
	load.32     %r12809 <- 0[n]
	push.64*    %r12808
	push.32     %r12809
	call        luaD_growstack
	br          .L2839

.L2838:
	br          .L2839

.L2839:
	load.64*    %r12810 <- 0[L]
	load.64*    %r12811 <- 24[%r12810]
	store.64*   %r12811 -> 0[base]
	load.64*    %r12812 <- 0[base]
	load.32     %r12813 <- 0[i]
	cast.32     %r12814 <- (32) %r12813
	lsr.32      %r12815 <- %r12814, $6
	and.32      %r12816 <- %r12815, $255
	cast.32     %r12817 <- (32) %r12816
	scast.64    %r12818 <- (32) %r12817
	muls.64     %r12819 <- %r12818, $16
	add.64*     %r12820 <- %r12812, %r12819
	store.64*   %r12820 -> 0[ra]
	load.32     %r12821 <- 0[n]
	store.32    %r12821 -> 0[b]
	load.64*    %r12822 <- 0[ra]
	load.32     %r12823 <- 0[n]
	scast.64    %r12824 <- (32) %r12823
	muls.64     %r12825 <- %r12824, $16
	add.64*     %r12826 <- %r12822, %r12825
	load.64*    %r12827 <- 0[L]
	store.64*   %r12826 -> 16[%r12827]
	br          .L2836

.L2836:
	store.32    $0 -> 0[j]
	br          .L2843

.L2843:
	load.32     %r12828 <- 0[j]
	load.32     %r12829 <- 0[b]
	setlt.32    %r12830 <- %r12828, %r12829
	cbr         %r12830, .L2840, .L2842

.L2840:
	load.32     %r12831 <- 0[j]
	load.32     %r12832 <- 0[n]
	setlt.32    %r12833 <- %r12831, %r12832
	cbr         %r12833, .L2844, .L2845

.L2844:
	load.64*    %r12834 <- 0[ci]
	load.64*    %r12835 <- 0[%r12834]
	load.32     %r12836 <- 0[n]
	scast.64    %r12837 <- (32) %r12836
	muls.64     %r12838 <- %r12837, $16
	sub.64*     %r12839 <- %r12835, %r12838
	load.32     %r12840 <- 0[j]
	scast.64    %r12841 <- (32) %r12840
	muls.64     %r12842 <- %r12841, $16
	add.64*     %r12843 <- %r12839, %r12842
	store.64*   %r12843 -> 0[o2]
	load.64*    %r12844 <- 0[ra]
	load.32     %r12845 <- 0[j]
	scast.64    %r12846 <- (32) %r12845
	muls.64     %r12847 <- %r12846, $16
	add.64*     %r12848 <- %r12844, %r12847
	store.64*   %r12848 -> 0[o1]
	load.64*    %r12849 <- 0[o2]
	load.f64    %r12850 <- 0[%r12849]
	fpcast.f64  %r12851 <- (64) %r12850
	load.64*    %r12852 <- 0[o1]
	store.f64   %r12851 -> 0[%r12852]
	load.64*    %r12853 <- 0[o2]
	load.32     %r12854 <- 8[%r12853]
	scast.32    %r12855 <- (32) %r12854
	load.64*    %r12856 <- 0[o1]
	store.32    %r12855 -> 8[%r12856]
	br          .L2846

.L2845:
	load.64*    %r12857 <- 0[ra]
	load.32     %r12858 <- 0[j]
	scast.64    %r12859 <- (32) %r12858
	muls.64     %r12860 <- %r12859, $16
	add.64*     %r12861 <- %r12857, %r12860
	store.32    $0 -> 8[%r12861]
	br          .L2846

.L2846:
	br          .L2841

.L2841:
	load.32     %r12862 <- 0[j]
	add.32      %r12863 <- %r12862, $1
	store.32    %r12863 -> 0[j]
	br          .L2843

.L2842:
	br          .L2580

.L2583:
	br          .L2580

.L2580:
	br          .L2582

.L2773:
	ret


index2adr:
.L2847:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r12864 <- 0[idx]
	setgt.32    %r12865 <- %r12864, $0
	cbr         %r12865, .L2848, .L2849

.L2848:
	load.64*    %r12866 <- 0[L]
	load.64*    %r12867 <- 24[%r12866]
	load.32     %r12868 <- 0[idx]
	sub.32      %r12869 <- %r12868, $1
	scast.64    %r12870 <- (32) %r12869
	muls.64     %r12871 <- %r12870, $16
	add.64*     %r12872 <- %r12867, %r12871
	store.64*   %r12872 -> 0[o]
	load.64*    %r12873 <- 0[L]
	load.64*    %r12874 <- 0[o]
	load.64*    %r12875 <- 0[L]
	load.64*    %r12876 <- 16[%r12875]
	setae.32    %r12877 <- %r12874, %r12876
	cbr         %r12877, .L2850, .L2851

.L2850:
	symaddr.64* %r12878 <- luaO_nilobject_
	ptrcast.64* %r12879 <- (64) %r12878
	phisrc.64*  %phi521(return) <- %r12879
	br          .L2852

.L2851:
	load.64*    %r12881 <- 0[o]
	phisrc.64*  %phi522(return) <- %r12881
	br          .L2852

.L2849:
	load.32     %r12882 <- 0[idx]
	setgt.32    %r12883 <- %r12882, $0xffffd8f0
	cbr         %r12883, .L2855, .L2856

.L2855:
	load.64*    %r12884 <- 0[L]
	load.64*    %r12885 <- 0[L]
	load.64*    %r12886 <- 16[%r12885]
	load.32     %r12887 <- 0[idx]
	scast.64    %r12888 <- (32) %r12887
	muls.64     %r12889 <- %r12888, $16
	add.64*     %r12890 <- %r12886, %r12889
	phisrc.64*  %phi523(return) <- %r12890
	br          .L2852

.L2856:
	load.32     %r12891 <- 0[idx]
	switch.32   %r12891, 4294957294 -> .L2861, 4294957295 -> .L2860, 4294957296 -> .L2859, default -> .L2862

.L2859:
	load.64*    %r12892 <- 0[L]
	load.64*    %r12893 <- 32[%r12892]
	add.64*     %r12894 <- %r12893, $160
	phisrc.64*  %phi524(return) <- %r12894
	br          .L2852

.L2860:
	load.64*    %r12895 <- 0[L]
	load.64*    %r12896 <- 40[%r12895]
	load.64*    %r12897 <- 8[%r12896]
	load.64*    %r12898 <- 0[%r12897]
	add.64*     %r12899 <- %r12898, $0
	store.64*   %r12899 -> 0[func]
	load.64*    %r12900 <- 0[L]
	add.64*     %r12901 <- %r12900, $136
	store.64*   %r12901 -> 0[i_o]
	load.64*    %r12902 <- 0[func]
	load.64*    %r12903 <- 24[%r12902]
	ptrcast.64* %r12904 <- (64) %r12903
	load.64*    %r12905 <- 0[i_o]
	store.64*   %r12904 -> 0[%r12905]
	load.64*    %r12906 <- 0[i_o]
	store.32    $5 -> 8[%r12906]
	load.64*    %r12907 <- 0[L]
	add.64*     %r12908 <- %r12907, $136
	phisrc.64*  %phi525(return) <- %r12908
	br          .L2852

.L2861:
	load.64*    %r12909 <- 0[L]
	add.64*     %r12910 <- %r12909, $120
	phisrc.64*  %phi526(return) <- %r12910
	br          .L2852

.L2862:
	load.64*    %r12911 <- 0[L]
	load.64*    %r12912 <- 40[%r12911]
	load.64*    %r12913 <- 8[%r12912]
	load.64*    %r12914 <- 0[%r12913]
	add.64*     %r12915 <- %r12914, $0
	store.64*   %r12915 -> 0[func]
	load.32     %r12916 <- 0[idx]
	sub.32      %r12917 <- $0xffffd8ee, %r12916
	store.32    %r12917 -> 0[idx]
	load.64*    %r12918 <- 0[func]
	add.64*     %r12919 <- %r12918, $0
	add.64*     %r12920 <- %r12919, $40
	load.32     %r12921 <- 0[idx]
	sub.32      %r12922 <- %r12921, $1
	scast.64    %r12923 <- (32) %r12922
	muls.64     %r12924 <- %r12923, $16
	add.64*     %r12925 <- %r12920, %r12924
	symaddr.64* %r12926 <- luaO_nilobject_
	ptrcast.64* %r12927 <- (64) %r12926
	ptrcast.64* %r12928 <- (64) %r12927
	load.32     %r12929 <- 0[idx]
	load.64*    %r12930 <- 0[func]
	load.8      %r12931 <- 11[%r12930]
	cast.32     %r12932 <- (8) %r12931
	setle.32    %r12933 <- %r12929, %r12932
	select.64*  %r12934 <- %r12933, %r12925, %r12928
	phisrc.64*  %phi527(return) <- %r12934
	br          .L2852

.L2852:
	phi.64*     %r12880 <- %phi521(return), %phi522(return), %phi523(return), %phi524(return), %phi525(return), %phi526(return), %phi527(return)
	ret.64*     %r12880


getcurrenv:
.L2863:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r12935 <- 0[L]
	load.64*    %r12936 <- 40[%r12935]
	load.64*    %r12937 <- 0[L]
	load.64*    %r12938 <- 80[%r12937]
	seteq.32    %r12939 <- %r12936, %r12938
	cbr         %r12939, .L2864, .L2865

.L2864:
	load.64*    %r12940 <- 0[L]
	load.64*    %r12941 <- 120[%r12940]
	add.64*     %r12942 <- %r12941, $0
	phisrc.64*  %phi528(return) <- %r12942
	br          .L2866

.L2865:
	load.64*    %r12944 <- 0[L]
	load.64*    %r12945 <- 40[%r12944]
	load.64*    %r12946 <- 8[%r12945]
	load.64*    %r12947 <- 0[%r12946]
	add.64*     %r12948 <- %r12947, $0
	store.64*   %r12948 -> 0[func]
	load.64*    %r12949 <- 0[func]
	load.64*    %r12950 <- 24[%r12949]
	phisrc.64*  %phi529(return) <- %r12950
	br          .L2866

.L2866:
	phi.64*     %r12943 <- %phi528(return), %phi529(return)
	ret.64*     %r12943


lua_checkstack:
.L2868:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[size]
	store.32    $1 -> 0[res]
	load.32     %r12951 <- 0[size]
	setgt.32    %r12952 <- %r12951, $0x1f40
	cbr         %r12952, .L2869, .L2871

.L2871:
	load.64*    %r12953 <- 0[L]
	load.64*    %r12954 <- 16[%r12953]
	load.64*    %r12955 <- 0[L]
	load.64*    %r12956 <- 24[%r12955]
	sub.64      %r12957 <- %r12954, %r12956
	divs.64     %r12958 <- %r12957, $16
	load.32     %r12959 <- 0[size]
	scast.64    %r12960 <- (32) %r12959
	add.64      %r12961 <- %r12958, %r12960
	setgt.32    %r12962 <- %r12961, $0x1f40
	cbr         %r12962, .L2869, .L2870

.L2869:
	store.32    $0 -> 0[res]
	br          .L2872

.L2870:
	load.32     %r12963 <- 0[size]
	setgt.32    %r12964 <- %r12963, $0
	cbr         %r12964, .L2873, .L2874

.L2873:
	load.64*    %r12965 <- 0[L]
	load.64*    %r12966 <- 56[%r12965]
	ptrcast.64* %r12967 <- (64) %r12966
	load.64*    %r12968 <- 0[L]
	load.64*    %r12969 <- 16[%r12968]
	ptrcast.64* %r12970 <- (64) %r12969
	sub.64      %r12971 <- %r12967, %r12970
	load.32     %r12972 <- 0[size]
	muls.32     %r12973 <- %r12972, $16
	scast.64    %r12974 <- (32) %r12973
	setle.32    %r12975 <- %r12971, %r12974
	cbr         %r12975, .L2875, .L2876

.L2875:
	load.64*    %r12976 <- 0[L]
	load.32     %r12977 <- 0[size]
	push.64*    %r12976
	push.32     %r12977
	call        luaD_growstack
	br          .L2877

.L2876:
	br          .L2877

.L2877:
	load.64*    %r12978 <- 0[L]
	load.64*    %r12979 <- 40[%r12978]
	load.64*    %r12980 <- 16[%r12979]
	load.64*    %r12981 <- 0[L]
	load.64*    %r12982 <- 16[%r12981]
	load.32     %r12983 <- 0[size]
	scast.64    %r12984 <- (32) %r12983
	muls.64     %r12985 <- %r12984, $16
	add.64*     %r12986 <- %r12982, %r12985
	setb.32     %r12987 <- %r12980, %r12986
	cbr         %r12987, .L2878, .L2879

.L2878:
	load.64*    %r12988 <- 0[L]
	load.64*    %r12989 <- 16[%r12988]
	load.32     %r12990 <- 0[size]
	scast.64    %r12991 <- (32) %r12990
	muls.64     %r12992 <- %r12991, $16
	add.64*     %r12993 <- %r12989, %r12992
	load.64*    %r12994 <- 0[L]
	load.64*    %r12995 <- 40[%r12994]
	store.64*   %r12993 -> 16[%r12995]
	br          .L2879

.L2879:
	br          .L2874

.L2874:
	br          .L2872

.L2872:
	load.32     %r12996 <- 0[res]
	phisrc.32   %phi530(return) <- %r12996
	br          .L2880

.L2880:
	phi.32      %r12997 <- %phi530(return)
	ret.32      %r12996


lua_atpanic:
.L2881:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[panicf]
	load.64*    %r12998 <- 0[L]
	load.64*    %r12999 <- 32[%r12998]
	load.64*    %r13000 <- 152[%r12999]
	store.64*   %r13000 -> 0[old]
	load.64*    %r13001 <- 0[panicf]
	load.64*    %r13002 <- 0[L]
	load.64*    %r13003 <- 32[%r13002]
	store.64*   %r13001 -> 152[%r13003]
	load.64*    %r13004 <- 0[old]
	phisrc.64*  %phi531(return) <- %r13004
	br          .L2882

.L2882:
	phi.64*     %r13005 <- %phi531(return)
	ret.64*     %r13004


lua_gettop:
.L2883:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13006 <- 0[L]
	load.64*    %r13007 <- 16[%r13006]
	load.64*    %r13008 <- 0[L]
	load.64*    %r13009 <- 24[%r13008]
	sub.64      %r13010 <- %r13007, %r13009
	divs.64     %r13011 <- %r13010, $16
	scast.32    %r13012 <- (64) %r13011
	phisrc.32   %phi532(return) <- %r13012
	br          .L2884

.L2884:
	phi.32      %r13013 <- %phi532(return)
	ret.32      %r13012


lua_settop:
.L2885:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r13014 <- 0[idx]
	setge.32    %r13015 <- %r13014, $0
	cbr         %r13015, .L2886, .L2887

.L2886:
	load.64*    %r13016 <- 0[L]
	br          .L2891

.L2891:
	load.64*    %r13017 <- 0[L]
	load.64*    %r13018 <- 16[%r13017]
	load.64*    %r13019 <- 0[L]
	load.64*    %r13020 <- 24[%r13019]
	load.32     %r13021 <- 0[idx]
	scast.64    %r13022 <- (32) %r13021
	muls.64     %r13023 <- %r13022, $16
	add.64*     %r13024 <- %r13020, %r13023
	setb.32     %r13025 <- %r13018, %r13024
	cbr         %r13025, .L2888, .L2890

.L2888:
	load.64*    %r13026 <- 0[L]
	load.64*    %r13027 <- 16[%r13026]
	add.64*     %r13028 <- %r13027, $16
	store.64*   %r13028 -> 16[%r13026]
	store.32    $0 -> 8[%r13027]
	br          .L2889

.L2889:
	br          .L2891

.L2890:
	load.64*    %r13029 <- 0[L]
	load.64*    %r13030 <- 24[%r13029]
	load.32     %r13031 <- 0[idx]
	scast.64    %r13032 <- (32) %r13031
	muls.64     %r13033 <- %r13032, $16
	add.64*     %r13034 <- %r13030, %r13033
	load.64*    %r13035 <- 0[L]
	store.64*   %r13034 -> 16[%r13035]
	br          .L2892

.L2887:
	load.64*    %r13036 <- 0[L]
	load.32     %r13037 <- 0[idx]
	add.32      %r13038 <- %r13037, $1
	scast.64    %r13039 <- (32) %r13038
	muls.64     %r13040 <- %r13039, $16
	load.64*    %r13041 <- 0[L]
	load.64*    %r13042 <- 16[%r13041]
	cast.64     %r13043 <- (64) %r13042
	add.64      %r13044 <- %r13043, %r13040
	ptrcast.64* %r13045 <- (64) %r13044
	store.64*   %r13045 -> 16[%r13041]
	br          .L2892

.L2892:
	ret


lua_remove:
.L2893:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13046 <- 0[L]
	load.32     %r13047 <- 0[idx]
	push.64*    %r13046
	push.32     %r13047
	call.64*    %r13048 <- index2adr
	store.64*   %r13048 -> 0[p]
	load.64*    %r13049 <- 0[L]
	br          .L2897

.L2897:
	load.64*    %r13050 <- 0[p]
	add.64*     %r13051 <- %r13050, $16
	store.64*   %r13051 -> 0[p]
	load.64*    %r13052 <- 0[L]
	load.64*    %r13053 <- 16[%r13052]
	setb.32     %r13054 <- %r13051, %r13053
	cbr         %r13054, .L2894, .L2896

.L2894:
	load.64*    %r13055 <- 0[p]
	store.64*   %r13055 -> 0[o2]
	load.64*    %r13056 <- 0[p]
	sub.64*     %r13057 <- %r13056, $16
	store.64*   %r13057 -> 0[o1]
	load.64*    %r13058 <- 0[o2]
	load.f64    %r13059 <- 0[%r13058]
	fpcast.f64  %r13060 <- (64) %r13059
	load.64*    %r13061 <- 0[o1]
	store.f64   %r13060 -> 0[%r13061]
	load.64*    %r13062 <- 0[o2]
	load.32     %r13063 <- 8[%r13062]
	scast.32    %r13064 <- (32) %r13063
	load.64*    %r13065 <- 0[o1]
	store.32    %r13064 -> 8[%r13065]
	br          .L2895

.L2895:
	br          .L2897

.L2896:
	load.64*    %r13066 <- 0[L]
	load.64*    %r13067 <- 16[%r13066]
	sub.64*     %r13068 <- %r13067, $16
	store.64*   %r13068 -> 16[%r13066]
	br          .L2898

.L2898:
	ret


lua_insert:
.L2899:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13069 <- 0[L]
	load.32     %r13070 <- 0[idx]
	push.64*    %r13069
	push.32     %r13070
	call.64*    %r13071 <- index2adr
	store.64*   %r13071 -> 0[p]
	load.64*    %r13072 <- 0[L]
	load.64*    %r13073 <- 0[L]
	load.64*    %r13074 <- 16[%r13073]
	store.64*   %r13074 -> 0[q]
	br          .L2903

.L2903:
	load.64*    %r13075 <- 0[q]
	load.64*    %r13076 <- 0[p]
	seta.32     %r13077 <- %r13075, %r13076
	cbr         %r13077, .L2900, .L2902

.L2900:
	load.64*    %r13078 <- 0[q]
	sub.64*     %r13079 <- %r13078, $16
	store.64*   %r13079 -> 0[o2]
	load.64*    %r13080 <- 0[q]
	store.64*   %r13080 -> 0[o1]
	load.64*    %r13081 <- 0[o2]
	load.f64    %r13082 <- 0[%r13081]
	fpcast.f64  %r13083 <- (64) %r13082
	load.64*    %r13084 <- 0[o1]
	store.f64   %r13083 -> 0[%r13084]
	load.64*    %r13085 <- 0[o2]
	load.32     %r13086 <- 8[%r13085]
	scast.32    %r13087 <- (32) %r13086
	load.64*    %r13088 <- 0[o1]
	store.32    %r13087 -> 8[%r13088]
	br          .L2901

.L2901:
	load.64*    %r13089 <- 0[q]
	sub.64*     %r13090 <- %r13089, $16
	store.64*   %r13090 -> 0[q]
	br          .L2903

.L2902:
	load.64*    %r13091 <- 0[L]
	load.64*    %r13092 <- 16[%r13091]
	store.64*   %r13092 -> 0[o2]
	load.64*    %r13093 <- 0[p]
	store.64*   %r13093 -> 0[o1]
	load.64*    %r13094 <- 0[o2]
	load.f64    %r13095 <- 0[%r13094]
	fpcast.f64  %r13096 <- (64) %r13095
	load.64*    %r13097 <- 0[o1]
	store.f64   %r13096 -> 0[%r13097]
	load.64*    %r13098 <- 0[o2]
	load.32     %r13099 <- 8[%r13098]
	scast.32    %r13100 <- (32) %r13099
	load.64*    %r13101 <- 0[o1]
	store.32    %r13100 -> 8[%r13101]
	br          .L2904

.L2904:
	ret


lua_replace:
.L2905:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r13102 <- 0[idx]
	seteq.32    %r13103 <- %r13102, $0xffffd8ef
	cbr         %r13103, .L2908, .L2907

.L2908:
	load.64*    %r13104 <- 0[L]
	load.64*    %r13105 <- 40[%r13104]
	load.64*    %r13106 <- 0[L]
	load.64*    %r13107 <- 80[%r13106]
	seteq.32    %r13108 <- %r13105, %r13107
	cbr         %r13108, .L2906, .L2907

.L2906:
	load.64*    %r13109 <- 0[L]
	symaddr.64* %r13110 <- <anon symbol:0x1b4df50>
	push.64*    %r13109
	push.64*    %r13110
	call        luaG_runerror
	br          .L2907

.L2907:
	load.64*    %r13111 <- 0[L]
	load.64*    %r13112 <- 0[L]
	load.32     %r13113 <- 0[idx]
	push.64*    %r13112
	push.32     %r13113
	call.64*    %r13114 <- index2adr
	store.64*   %r13114 -> 0[o]
	load.64*    %r13115 <- 0[L]
	load.32     %r13116 <- 0[idx]
	seteq.32    %r13117 <- %r13116, $0xffffd8ef
	cbr         %r13117, .L2909, .L2910

.L2909:
	load.64*    %r13118 <- 0[L]
	load.64*    %r13119 <- 40[%r13118]
	load.64*    %r13120 <- 8[%r13119]
	load.64*    %r13121 <- 0[%r13120]
	add.64*     %r13122 <- %r13121, $0
	store.64*   %r13122 -> 0[func]
	load.64*    %r13123 <- 0[L]
	load.64*    %r13124 <- 0[L]
	load.64*    %r13125 <- 16[%r13124]
	sub.64*     %r13126 <- %r13125, $16
	load.64*    %r13127 <- 0[%r13126]
	add.64*     %r13128 <- %r13127, $0
	load.64*    %r13129 <- 0[func]
	store.64*   %r13128 -> 24[%r13129]
	load.64*    %r13130 <- 0[L]
	load.64*    %r13131 <- 16[%r13130]
	sub.64*     %r13132 <- %r13131, $16
	load.32     %r13133 <- 8[%r13132]
	setge.32    %r13134 <- %r13133, $4
	cbr         %r13134, .L2914, .L2912

.L2914:
	load.64*    %r13135 <- 0[L]
	load.64*    %r13136 <- 16[%r13135]
	sub.64*     %r13137 <- %r13136, $16
	load.64*    %r13138 <- 0[%r13137]
	load.8      %r13139 <- 9[%r13138]
	cast.32     %r13140 <- (8) %r13139
	and.32      %r13141 <- %r13140, $3
	cbr         %r13141, .L2913, .L2912

.L2913:
	load.64*    %r13142 <- 0[func]
	ptrcast.64* %r13143 <- (64) %r13142
	load.8      %r13144 <- 9[%r13143]
	cast.32     %r13145 <- (8) %r13144
	and.32      %r13146 <- %r13145, $4
	cbr         %r13146, .L2911, .L2912

.L2911:
	load.64*    %r13147 <- 0[L]
	load.64*    %r13148 <- 0[func]
	ptrcast.64* %r13149 <- (64) %r13148
	load.64*    %r13150 <- 0[L]
	load.64*    %r13151 <- 16[%r13150]
	sub.64*     %r13152 <- %r13151, $16
	load.64*    %r13153 <- 0[%r13152]
	push.64*    %r13147
	push.64*    %r13149
	push.64*    %r13153
	call        luaC_barrierf
	br          .L2912

.L2912:
	br          .L2915

.L2910:
	load.64*    %r13154 <- 0[L]
	load.64*    %r13155 <- 16[%r13154]
	sub.64*     %r13156 <- %r13155, $16
	store.64*   %r13156 -> 0[o2]
	load.64*    %r13157 <- 0[o]
	store.64*   %r13157 -> 0[o1]
	load.64*    %r13158 <- 0[o2]
	load.f64    %r13159 <- 0[%r13158]
	fpcast.f64  %r13160 <- (64) %r13159
	load.64*    %r13161 <- 0[o1]
	store.f64   %r13160 -> 0[%r13161]
	load.64*    %r13162 <- 0[o2]
	load.32     %r13163 <- 8[%r13162]
	scast.32    %r13164 <- (32) %r13163
	load.64*    %r13165 <- 0[o1]
	store.32    %r13164 -> 8[%r13165]
	load.32     %r13166 <- 0[idx]
	setlt.32    %r13167 <- %r13166, $0xffffd8ee
	cbr         %r13167, .L2916, .L2917

.L2916:
	load.64*    %r13168 <- 0[L]
	load.64*    %r13169 <- 16[%r13168]
	sub.64*     %r13170 <- %r13169, $16
	load.32     %r13171 <- 8[%r13170]
	setge.32    %r13172 <- %r13171, $4
	cbr         %r13172, .L2921, .L2919

.L2921:
	load.64*    %r13173 <- 0[L]
	load.64*    %r13174 <- 16[%r13173]
	sub.64*     %r13175 <- %r13174, $16
	load.64*    %r13176 <- 0[%r13175]
	load.8      %r13177 <- 9[%r13176]
	cast.32     %r13178 <- (8) %r13177
	and.32      %r13179 <- %r13178, $3
	cbr         %r13179, .L2920, .L2919

.L2920:
	load.64*    %r13180 <- 0[L]
	load.64*    %r13181 <- 40[%r13180]
	load.64*    %r13182 <- 8[%r13181]
	load.64*    %r13183 <- 0[%r13182]
	add.64*     %r13184 <- %r13183, $0
	ptrcast.64* %r13185 <- (64) %r13184
	load.8      %r13186 <- 9[%r13185]
	cast.32     %r13187 <- (8) %r13186
	and.32      %r13188 <- %r13187, $4
	cbr         %r13188, .L2918, .L2919

.L2918:
	load.64*    %r13189 <- 0[L]
	load.64*    %r13190 <- 0[L]
	load.64*    %r13191 <- 40[%r13190]
	load.64*    %r13192 <- 8[%r13191]
	load.64*    %r13193 <- 0[%r13192]
	add.64*     %r13194 <- %r13193, $0
	ptrcast.64* %r13195 <- (64) %r13194
	load.64*    %r13196 <- 0[L]
	load.64*    %r13197 <- 16[%r13196]
	sub.64*     %r13198 <- %r13197, $16
	load.64*    %r13199 <- 0[%r13198]
	push.64*    %r13189
	push.64*    %r13195
	push.64*    %r13199
	call        luaC_barrierf
	br          .L2919

.L2919:
	br          .L2917

.L2917:
	br          .L2915

.L2915:
	load.64*    %r13200 <- 0[L]
	load.64*    %r13201 <- 16[%r13200]
	sub.64*     %r13202 <- %r13201, $16
	store.64*   %r13202 -> 16[%r13200]
	br          .L2922

.L2922:
	ret


lua_pushvalue:
.L2923:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13203 <- 0[L]
	load.32     %r13204 <- 0[idx]
	push.64*    %r13203
	push.32     %r13204
	call.64*    %r13205 <- index2adr
	store.64*   %r13205 -> 0[o2]
	load.64*    %r13206 <- 0[L]
	load.64*    %r13207 <- 16[%r13206]
	store.64*   %r13207 -> 0[o1]
	load.64*    %r13208 <- 0[o2]
	load.f64    %r13209 <- 0[%r13208]
	fpcast.f64  %r13210 <- (64) %r13209
	load.64*    %r13211 <- 0[o1]
	store.f64   %r13210 -> 0[%r13211]
	load.64*    %r13212 <- 0[o2]
	load.32     %r13213 <- 8[%r13212]
	scast.32    %r13214 <- (32) %r13213
	load.64*    %r13215 <- 0[o1]
	store.32    %r13214 -> 8[%r13215]
	load.64*    %r13216 <- 0[L]
	load.64*    %r13217 <- 0[L]
	load.64*    %r13218 <- 16[%r13217]
	add.64*     %r13219 <- %r13218, $16
	store.64*   %r13219 -> 16[%r13217]
	br          .L2924

.L2924:
	ret


lua_type:
.L2925:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13220 <- 0[L]
	load.32     %r13221 <- 0[idx]
	push.64*    %r13220
	push.32     %r13221
	call.64*    %r13222 <- index2adr
	store.64*   %r13222 -> 0[o]
	load.64*    %r13223 <- 0[o]
	symaddr.64* %r13224 <- luaO_nilobject_
	seteq.32    %r13225 <- %r13223, %r13224
	cbr         %r13225, .L2927, .L2928

.L2927:
	phisrc.32   %phi533 <- $0xffffffff
	br          .L2929

.L2928:
	load.64*    %r13226 <- 0[o]
	load.32     %r13227 <- 8[%r13226]
	phisrc.32   %phi534 <- %r13227
	br          .L2929

.L2929:
	phi.32      %r13228 <- %phi533, %phi534
	phisrc.32   %phi535(return) <- %r13228
	br          .L2926

.L2926:
	phi.32      %r13229 <- %phi535(return)
	ret.32      %r13228


lua_typename:
.L2930:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[t]
	load.64*    %r13230 <- 0[L]
	load.32     %r13231 <- 0[t]
	seteq.32    %r13232 <- %r13231, $0xffffffff
	cbr         %r13232, .L2932, .L2933

.L2932:
	symaddr.64* %r13233 <- <anon symbol:0x1d96f30>
	ptrcast.64* %r13234 <- (64) %r13233
	phisrc.64*  %phi536 <- %r13234
	br          .L2934

.L2933:
	symaddr.64* %r13235 <- luaT_typenames
	load.32     %r13236 <- 0[t]
	scast.64    %r13237 <- (32) %r13236
	muls.64     %r13238 <- %r13237, $8
	add.64*     %r13239 <- %r13235, %r13238
	load.64*    %r13240 <- 0[%r13239]
	ptrcast.64* %r13241 <- (64) %r13240
	phisrc.64*  %phi537 <- %r13241
	br          .L2934

.L2934:
	phi.64*     %r13242 <- %phi536, %phi537
	phisrc.64*  %phi538(return) <- %r13242
	br          .L2931

.L2931:
	phi.64*     %r13243 <- %phi538(return)
	ret.64*     %r13242


lua_iscfunction:
.L2935:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13244 <- 0[L]
	load.32     %r13245 <- 0[idx]
	push.64*    %r13244
	push.32     %r13245
	call.64*    %r13246 <- index2adr
	store.64*   %r13246 -> 0[o]
	load.64*    %r13247 <- 0[o]
	load.32     %r13248 <- 8[%r13247]
	seteq.32    %r13249 <- %r13248, $6
	cbr         %r13249, .L2937, .L2938

.L2937:
	load.64*    %r13250 <- 0[o]
	load.64*    %r13251 <- 0[%r13250]
	load.8      %r13252 <- 10[%r13251]
	phisrc.32   %phi539 <- %r13252
	br          .L2939

.L2938:
	phisrc.32   %phi540 <- $0
	br          .L2939

.L2939:
	phi.32      %r13253 <- %phi539, %phi540
	phisrc.32   %phi541(return) <- %r13253
	br          .L2936

.L2936:
	phi.32      %r13254 <- %phi541(return)
	ret.32      %r13253


lua_isnumber:
.L2940:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13255 <- 0[L]
	load.32     %r13256 <- 0[idx]
	push.64*    %r13255
	push.32     %r13256
	call.64*    %r13257 <- index2adr
	store.64*   %r13257 -> 0[o]
	load.64*    %r13258 <- 0[o]
	load.32     %r13259 <- 8[%r13258]
	scast.32    %r13260 <- (32) %r13259
	seteq.32    %r13261 <- %r13260, $3
	cbr         %r13261, .L2942, .L2943

.L2942:
	phisrc.32   %phi542 <- $1
	br          .L2944

.L2943:
	load.64*    %r13262 <- 0[o]
	symaddr.64* %r13263 <- n
	push.64*    %r13262
	push.64*    %r13263
	call.64*    %r13264 <- luaV_tonumber
	store.64*   %r13264 -> 0[o]
	setne.32    %r13265 <- %r13264, $0
	phisrc.32   %phi543 <- %r13265
	br          .L2944

.L2944:
	phi.32      %r13266 <- %phi542, %phi543
	phisrc.32   %phi544(return) <- %r13266
	br          .L2941

.L2941:
	phi.32      %r13267 <- %phi544(return)
	ret.32      %r13266


lua_isstring:
.L2945:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13268 <- 0[L]
	load.32     %r13269 <- 0[idx]
	push.64*    %r13268
	push.32     %r13269
	call.32     %r13270 <- lua_type
	store.32    %r13270 -> 0[t]
	load.32     %r13271 <- 0[t]
	seteq.32    %r13272 <- %r13271, $4
	setne.1     %r13273 <- %r13272, $0
	load.32     %r13274 <- 0[t]
	seteq.32    %r13275 <- %r13274, $3
	setne.1     %r13276 <- %r13275, $0
	or-bool.1   %r13277 <- %r13273, %r13276
	cast.32     %r13278 <- (1) %r13277
	phisrc.32   %phi545(return) <- %r13278
	br          .L2946

.L2946:
	phi.32      %r13279 <- %phi545(return)
	ret.32      %r13278


lua_rawequal:
.L2947:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[index1]
	store.32    %arg3 -> 0[index2]
	load.64*    %r13280 <- 0[L]
	load.32     %r13281 <- 0[index1]
	push.64*    %r13280
	push.32     %r13281
	call.64*    %r13282 <- index2adr
	store.64*   %r13282 -> 0[o1]
	load.64*    %r13283 <- 0[L]
	load.32     %r13284 <- 0[index2]
	push.64*    %r13283
	push.32     %r13284
	call.64*    %r13285 <- index2adr
	store.64*   %r13285 -> 0[o2]
	load.64*    %r13286 <- 0[o1]
	symaddr.64* %r13287 <- luaO_nilobject_
	seteq.32    %r13288 <- %r13286, %r13287
	setne.1     %r13289 <- %r13288, $0
	load.64*    %r13290 <- 0[o2]
	symaddr.64* %r13291 <- luaO_nilobject_
	seteq.32    %r13292 <- %r13290, %r13291
	setne.1     %r13293 <- %r13292, $0
	or-bool.1   %r13294 <- %r13289, %r13293
	cast.32     %r13295 <- (1) %r13294
	cbr         %r13295, .L2949, .L2950

.L2949:
	phisrc.32   %phi546 <- $0
	br          .L2951

.L2950:
	load.64*    %r13296 <- 0[o1]
	load.64*    %r13297 <- 0[o2]
	push.64*    %r13296
	push.64*    %r13297
	call.32     %r13298 <- luaO_rawequalObj
	phisrc.32   %phi547 <- %r13298
	br          .L2951

.L2951:
	phi.32      %r13299 <- %phi546, %phi547
	phisrc.32   %phi548(return) <- %r13299
	br          .L2948

.L2948:
	phi.32      %r13300 <- %phi548(return)
	ret.32      %r13299


lua_lessthan:
.L2952:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[index1]
	store.32    %arg3 -> 0[index2]
	load.64*    %r13301 <- 0[L]
	load.32     %r13302 <- 0[index1]
	push.64*    %r13301
	push.32     %r13302
	call.64*    %r13303 <- index2adr
	store.64*   %r13303 -> 0[o1]
	load.64*    %r13304 <- 0[L]
	load.32     %r13305 <- 0[index2]
	push.64*    %r13304
	push.32     %r13305
	call.64*    %r13306 <- index2adr
	store.64*   %r13306 -> 0[o2]
	load.64*    %r13307 <- 0[o1]
	symaddr.64* %r13308 <- luaO_nilobject_
	seteq.32    %r13309 <- %r13307, %r13308
	setne.1     %r13310 <- %r13309, $0
	load.64*    %r13311 <- 0[o2]
	symaddr.64* %r13312 <- luaO_nilobject_
	seteq.32    %r13313 <- %r13311, %r13312
	setne.1     %r13314 <- %r13313, $0
	or-bool.1   %r13315 <- %r13310, %r13314
	cast.32     %r13316 <- (1) %r13315
	cbr         %r13316, .L2953, .L2954

.L2953:
	phisrc.32   %phi549 <- $0
	br          .L2955

.L2954:
	load.64*    %r13317 <- 0[L]
	load.64*    %r13318 <- 0[o1]
	load.64*    %r13319 <- 0[o2]
	push.64*    %r13317
	push.64*    %r13318
	push.64*    %r13319
	call.32     %r13320 <- luaV_lessthan
	phisrc.32   %phi550 <- %r13320
	br          .L2955

.L2955:
	phi.32      %r13321 <- %phi549, %phi550
	store.32    %r13321 -> 0[i]
	load.32     %r13322 <- 0[i]
	phisrc.32   %phi551(return) <- %r13322
	br          .L2956

.L2956:
	phi.32      %r13323 <- %phi551(return)
	ret.32      %r13322


lua_tonumber:
.L2957:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13324 <- 0[L]
	load.32     %r13325 <- 0[idx]
	push.64*    %r13324
	push.32     %r13325
	call.64*    %r13326 <- index2adr
	store.64*   %r13326 -> 0[o]
	load.64*    %r13327 <- 0[o]
	load.32     %r13328 <- 8[%r13327]
	scast.32    %r13329 <- (32) %r13328
	seteq.32    %r13330 <- %r13329, $3
	cbr         %r13330, .L2958, .L2960

.L2960:
	load.64*    %r13331 <- 0[o]
	symaddr.64* %r13332 <- n
	push.64*    %r13331
	push.64*    %r13332
	call.64*    %r13333 <- luaV_tonumber
	store.64*   %r13333 -> 0[o]
	setne.32    %r13334 <- %r13333, $0
	cbr         %r13334, .L2958, .L2959

.L2958:
	load.64*    %r13335 <- 0[o]
	load.f64    %r13336 <- 0[%r13335]
	fpcast.f64  %r13337 <- (64) %r13336
	phisrc.f64  %phi552(return) <- %r13337
	br          .L2961

.L2959:
	set.f64     %r13339 <- 0.000000
	phisrc.f64  %phi553(return) <- %r13339
	br          .L2961

.L2961:
	phi.f64     %r13338 <- %phi552(return), %phi553(return)
	ret.f64     %r13338


lua_tointeger:
.L2963:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13340 <- 0[L]
	load.32     %r13341 <- 0[idx]
	push.64*    %r13340
	push.32     %r13341
	call.64*    %r13342 <- index2adr
	store.64*   %r13342 -> 0[o]
	load.64*    %r13343 <- 0[o]
	load.32     %r13344 <- 8[%r13343]
	scast.32    %r13345 <- (32) %r13344
	seteq.32    %r13346 <- %r13345, $3
	cbr         %r13346, .L2964, .L2966

.L2966:
	load.64*    %r13347 <- 0[o]
	symaddr.64* %r13348 <- n
	push.64*    %r13347
	push.64*    %r13348
	call.64*    %r13349 <- luaV_tonumber
	store.64*   %r13349 -> 0[o]
	setne.32    %r13350 <- %r13349, $0
	cbr         %r13350, .L2964, .L2965

.L2964:
	load.64*    %r13351 <- 0[o]
	load.f64    %r13352 <- 0[%r13351]
	fpcast.f64  %r13353 <- (64) %r13352
	store.f64   %r13353 -> 0[num]
	load.f64    %r13354 <- 0[num]
	cast.64     %r13355 <- (64) %r13354
	store.64    %r13355 -> 0[res]
	load.64     %r13356 <- 0[res]
	phisrc.64   %phi554(return) <- %r13356
	br          .L2967

.L2965:
	phisrc.64   %phi555(return) <- $0
	br          .L2967

.L2967:
	phi.64      %r13357 <- %phi554(return), %phi555(return)
	ret.64      %r13357


lua_toboolean:
.L2969:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13358 <- 0[L]
	load.32     %r13359 <- 0[idx]
	push.64*    %r13358
	push.32     %r13359
	call.64*    %r13360 <- index2adr
	store.64*   %r13360 -> 0[o]
	load.64*    %r13361 <- 0[o]
	load.32     %r13362 <- 8[%r13361]
	scast.32    %r13363 <- (32) %r13362
	seteq.32    %r13364 <- %r13363, $0
	cbr         %r13364, .L2971, .L2972

.L2971:
	phisrc.32   %phi556 <- $1
	br          .L2973

.L2972:
	load.64*    %r13365 <- 0[o]
	load.32     %r13366 <- 8[%r13365]
	scast.32    %r13367 <- (32) %r13366
	seteq.32    %r13368 <- %r13367, $1
	cbr         %r13368, .L2974, .L2975

.L2974:
	load.64*    %r13369 <- 0[o]
	load.32     %r13370 <- 0[%r13369]
	scast.32    %r13371 <- (32) %r13370
	seteq.32    %r13372 <- %r13371, $0
	phisrc.32   %phi557 <- %r13372
	br          .L2976

.L2975:
	phisrc.32   %phi558 <- $0
	br          .L2976

.L2976:
	phi.32      %r13373 <- %phi557, %phi558
	phisrc.32   %phi559 <- %r13373
	br          .L2973

.L2973:
	phi.32      %r13374 <- %phi556, %phi559
	seteq.32    %r13375 <- %r13374, $0
	phisrc.32   %phi560(return) <- %r13375
	br          .L2970

.L2970:
	phi.32      %r13376 <- %phi560(return)
	ret.32      %r13375


lua_tolstring:
.L2977:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[len]
	load.64*    %r13377 <- 0[L]
	load.32     %r13378 <- 0[idx]
	push.64*    %r13377
	push.32     %r13378
	call.64*    %r13379 <- index2adr
	store.64*   %r13379 -> 0[o]
	load.64*    %r13380 <- 0[o]
	load.32     %r13381 <- 8[%r13380]
	seteq.32    %r13382 <- %r13381, $4
	cbr         %r13382, .L2979, .L2978

.L2978:
	load.64*    %r13383 <- 0[L]
	load.64*    %r13384 <- 0[o]
	push.64*    %r13383
	push.64*    %r13384
	call.32     %r13385 <- luaV_tostring
	cbr         %r13385, .L2981, .L2980

.L2980:
	load.64*    %r13386 <- 0[len]
	setne.32    %r13387 <- %r13386, $0
	cbr         %r13387, .L2982, .L2983

.L2982:
	load.64*    %r13388 <- 0[len]
	store.64    $0 -> 0[%r13388]
	br          .L2983

.L2983:
	phisrc.64*  %phi561(return) <- $0
	br          .L2984

.L2981:
	load.64*    %r13390 <- 0[L]
	load.64*    %r13391 <- 32[%r13390]
	load.64     %r13392 <- 120[%r13391]
	load.64*    %r13393 <- 0[L]
	load.64*    %r13394 <- 32[%r13393]
	load.64     %r13395 <- 112[%r13394]
	setae.32    %r13396 <- %r13392, %r13395
	cbr         %r13396, .L2985, .L2986

.L2985:
	load.64*    %r13397 <- 0[L]
	push.64*    %r13397
	call        luaC_step
	br          .L2986

.L2986:
	load.64*    %r13398 <- 0[L]
	load.32     %r13399 <- 0[idx]
	push.64*    %r13398
	push.32     %r13399
	call.64*    %r13400 <- index2adr
	store.64*   %r13400 -> 0[o]
	br          .L2979

.L2979:
	load.64*    %r13401 <- 0[len]
	setne.32    %r13402 <- %r13401, $0
	cbr         %r13402, .L2987, .L2988

.L2987:
	load.64*    %r13403 <- 0[o]
	load.64*    %r13404 <- 0[%r13403]
	load.64     %r13405 <- 16[%r13404]
	load.64*    %r13406 <- 0[len]
	store.64    %r13405 -> 0[%r13406]
	br          .L2988

.L2988:
	load.64*    %r13407 <- 0[o]
	load.64*    %r13408 <- 0[%r13407]
	add.64*     %r13409 <- %r13408, $0
	add.64*     %r13410 <- %r13409, $24
	ptrcast.64* %r13411 <- (64) %r13410
	phisrc.64*  %phi562(return) <- %r13411
	br          .L2984

.L2984:
	phi.64*     %r13389 <- %phi561(return), %phi562(return)
	ret.64*     %r13389


lua_objlen:
.L2989:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13412 <- 0[L]
	load.32     %r13413 <- 0[idx]
	push.64*    %r13412
	push.32     %r13413
	call.64*    %r13414 <- index2adr
	store.64*   %r13414 -> 0[o]
	load.64*    %r13415 <- 0[o]
	load.32     %r13416 <- 8[%r13415]
	switch.32   %r13416, 3 -> .L2994, 4 -> .L2991, 5 -> .L2993, 7 -> .L2992, default -> .L2995

.L2991:
	load.64*    %r13417 <- 0[o]
	load.64*    %r13418 <- 0[%r13417]
	load.64     %r13419 <- 16[%r13418]
	phisrc.64   %phi563(return) <- %r13419
	br          .L2996

.L2992:
	load.64*    %r13421 <- 0[o]
	load.64*    %r13422 <- 0[%r13421]
	load.64     %r13423 <- 32[%r13422]
	phisrc.64   %phi564(return) <- %r13423
	br          .L2996

.L2993:
	load.64*    %r13424 <- 0[o]
	load.64*    %r13425 <- 0[%r13424]
	add.64*     %r13426 <- %r13425, $0
	push.64*    %r13426
	call.32     %r13427 <- luaH_getn
	scast.64    %r13428 <- (32) %r13427
	phisrc.64   %phi565(return) <- %r13428
	br          .L2996

.L2994:
	load.64*    %r13429 <- 0[L]
	load.64*    %r13430 <- 0[o]
	push.64*    %r13429
	push.64*    %r13430
	call.32     %r13431 <- luaV_tostring
	cbr         %r13431, .L2997, .L2998

.L2997:
	load.64*    %r13432 <- 0[o]
	load.64*    %r13433 <- 0[%r13432]
	load.64     %r13434 <- 16[%r13433]
	phisrc.64   %phi566 <- %r13434
	br          .L2999

.L2998:
	phisrc.64   %phi567 <- $0
	br          .L2999

.L2999:
	phi.64      %r13435 <- %phi566, %phi567
	store.64    %r13435 -> 0[l]
	load.64     %r13436 <- 0[l]
	phisrc.64   %phi568(return) <- %r13436
	br          .L2996

.L2995:
	phisrc.64   %phi569(return) <- $0
	br          .L2996

.L2996:
	phi.64      %r13420 <- %phi563(return), %phi564(return), %phi565(return), %phi568(return), %phi569(return)
	ret.64      %r13420


lua_tocfunction:
.L3000:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13437 <- 0[L]
	load.32     %r13438 <- 0[idx]
	push.64*    %r13437
	push.32     %r13438
	call.64*    %r13439 <- index2adr
	store.64*   %r13439 -> 0[o]
	load.64*    %r13440 <- 0[o]
	load.32     %r13441 <- 8[%r13440]
	seteq.32    %r13442 <- %r13441, $6
	cbr         %r13442, .L3005, .L3002

.L3005:
	load.64*    %r13443 <- 0[o]
	load.64*    %r13444 <- 0[%r13443]
	load.8      %r13445 <- 10[%r13444]
	cbr         %r13445, .L3003, .L3002

.L3002:
	phisrc.64*  %phi570 <- $0
	br          .L3004

.L3003:
	load.64*    %r13446 <- 0[o]
	load.64*    %r13447 <- 0[%r13446]
	load.64*    %r13448 <- 32[%r13447]
	phisrc.64*  %phi571 <- %r13448
	br          .L3004

.L3004:
	phi.64*     %r13449 <- %phi570, %phi571
	phisrc.64*  %phi572(return) <- %r13449
	br          .L3001

.L3001:
	phi.64*     %r13450 <- %phi572(return)
	ret.64*     %r13449


lua_touserdata:
.L3006:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13451 <- 0[L]
	load.32     %r13452 <- 0[idx]
	push.64*    %r13451
	push.32     %r13452
	call.64*    %r13453 <- index2adr
	store.64*   %r13453 -> 0[o]
	load.64*    %r13454 <- 0[o]
	load.32     %r13455 <- 8[%r13454]
	switch.32   %r13455, 2 -> .L3009, 7 -> .L3008, default -> .L3010

.L3008:
	load.64*    %r13456 <- 0[o]
	load.64*    %r13457 <- 0[%r13456]
	add.64*     %r13458 <- %r13457, $0
	add.64*     %r13459 <- %r13458, $40
	cast.64*    %r13460 <- (64) %r13459
	phisrc.64*  %phi573(return) <- %r13460
	br          .L3011

.L3009:
	load.64*    %r13462 <- 0[o]
	load.64*    %r13463 <- 0[%r13462]
	phisrc.64*  %phi574(return) <- %r13463
	br          .L3011

.L3010:
	phisrc.64*  %phi575(return) <- $0
	br          .L3011

.L3011:
	phi.64*     %r13461 <- %phi573(return), %phi574(return), %phi575(return)
	ret.64*     %r13461


lua_pushnil:
.L3012:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13464 <- 0[L]
	load.64*    %r13465 <- 16[%r13464]
	store.32    $0 -> 8[%r13465]
	load.64*    %r13466 <- 0[L]
	load.64*    %r13467 <- 0[L]
	load.64*    %r13468 <- 16[%r13467]
	add.64*     %r13469 <- %r13468, $16
	store.64*   %r13469 -> 16[%r13467]
	br          .L3013

.L3013:
	ret


lua_pushnumber:
.L3014:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.f64   %arg2 -> 0[n]
	load.64*    %r13470 <- 0[L]
	load.64*    %r13471 <- 16[%r13470]
	store.64*   %r13471 -> 0[i_o]
	load.f64    %r13472 <- 0[n]
	load.64*    %r13473 <- 0[i_o]
	store.f64   %r13472 -> 0[%r13473]
	load.64*    %r13474 <- 0[i_o]
	store.32    $3 -> 8[%r13474]
	load.64*    %r13475 <- 0[L]
	load.64*    %r13476 <- 0[L]
	load.64*    %r13477 <- 16[%r13476]
	add.64*     %r13478 <- %r13477, $16
	store.64*   %r13478 -> 16[%r13476]
	br          .L3015

.L3015:
	ret


lua_pushinteger:
.L3016:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[n]
	load.64*    %r13479 <- 0[L]
	load.64*    %r13480 <- 16[%r13479]
	store.64*   %r13480 -> 0[i_o]
	load.64     %r13481 <- 0[n]
	fpcast.f64  %r13482 <- (64) %r13481
	load.64*    %r13483 <- 0[i_o]
	store.f64   %r13482 -> 0[%r13483]
	load.64*    %r13484 <- 0[i_o]
	store.32    $3 -> 8[%r13484]
	load.64*    %r13485 <- 0[L]
	load.64*    %r13486 <- 0[L]
	load.64*    %r13487 <- 16[%r13486]
	add.64*     %r13488 <- %r13487, $16
	store.64*   %r13488 -> 16[%r13486]
	br          .L3017

.L3017:
	ret


lua_pushlstring:
.L3018:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[s]
	store.64    %arg3 -> 0[len]
	load.64*    %r13489 <- 0[L]
	load.64*    %r13490 <- 32[%r13489]
	load.64     %r13491 <- 120[%r13490]
	load.64*    %r13492 <- 0[L]
	load.64*    %r13493 <- 32[%r13492]
	load.64     %r13494 <- 112[%r13493]
	setae.32    %r13495 <- %r13491, %r13494
	cbr         %r13495, .L3019, .L3020

.L3019:
	load.64*    %r13496 <- 0[L]
	push.64*    %r13496
	call        luaC_step
	br          .L3020

.L3020:
	load.64*    %r13497 <- 0[L]
	load.64*    %r13498 <- 16[%r13497]
	store.64*   %r13498 -> 0[i_o]
	load.64*    %r13499 <- 0[L]
	load.64*    %r13500 <- 0[s]
	load.64     %r13501 <- 0[len]
	push.64*    %r13499
	push.64*    %r13500
	push.64     %r13501
	call.64*    %r13502 <- luaS_newlstr
	ptrcast.64* %r13503 <- (64) %r13502
	load.64*    %r13504 <- 0[i_o]
	store.64*   %r13503 -> 0[%r13504]
	load.64*    %r13505 <- 0[i_o]
	store.32    $4 -> 8[%r13505]
	load.64*    %r13506 <- 0[L]
	load.64*    %r13507 <- 0[L]
	load.64*    %r13508 <- 16[%r13507]
	add.64*     %r13509 <- %r13508, $16
	store.64*   %r13509 -> 16[%r13507]
	br          .L3021

.L3021:
	ret


lua_pushstring:
.L3022:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[s]
	load.64*    %r13510 <- 0[s]
	seteq.32    %r13511 <- %r13510, $0
	cbr         %r13511, .L3023, .L3024

.L3023:
	load.64*    %r13512 <- 0[L]
	push.64*    %r13512
	call        lua_pushnil
	br          .L3025

.L3024:
	load.64*    %r13513 <- 0[L]
	load.64*    %r13514 <- 0[s]
	load.64*    %r13515 <- 0[s]
	push.64*    %r13515
	call.64     %r13516 <- strlen
	push.64*    %r13513
	push.64*    %r13514
	push.64     %r13516
	call        lua_pushlstring
	br          .L3025

.L3025:
	ret


lua_pushcclosure:
.L3026:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fn]
	store.32    %arg3 -> 0[n]
	load.64*    %r13517 <- 0[L]
	load.64*    %r13518 <- 32[%r13517]
	load.64     %r13519 <- 120[%r13518]
	load.64*    %r13520 <- 0[L]
	load.64*    %r13521 <- 32[%r13520]
	load.64     %r13522 <- 112[%r13521]
	setae.32    %r13523 <- %r13519, %r13522
	cbr         %r13523, .L3027, .L3028

.L3027:
	load.64*    %r13524 <- 0[L]
	push.64*    %r13524
	call        luaC_step
	br          .L3028

.L3028:
	load.64*    %r13525 <- 0[L]
	load.64*    %r13526 <- 0[L]
	load.32     %r13527 <- 0[n]
	load.64*    %r13528 <- 0[L]
	push.64*    %r13528
	call.64*    %r13529 <- getcurrenv
	push.64*    %r13526
	push.32     %r13527
	push.64*    %r13529
	call.64*    %r13530 <- luaF_newCclosure
	store.64*   %r13530 -> 0[cl]
	load.64*    %r13531 <- 0[fn]
	load.64*    %r13532 <- 0[cl]
	store.64*   %r13531 -> 32[%r13532]
	load.32     %r13533 <- 0[n]
	scast.64    %r13534 <- (32) %r13533
	muls.64     %r13535 <- %r13534, $16
	load.64*    %r13536 <- 0[L]
	load.64*    %r13537 <- 16[%r13536]
	cast.64     %r13538 <- (64) %r13537
	sub.64      %r13539 <- %r13538, %r13535
	ptrcast.64* %r13540 <- (64) %r13539
	store.64*   %r13540 -> 16[%r13536]
	br          .L3032

.L3032:
	load.32     %r13541 <- 0[n]
	sub.32      %r13542 <- %r13541, $1
	store.32    %r13542 -> 0[n]
	cbr         %r13541, .L3029, .L3031

.L3029:
	load.64*    %r13543 <- 0[L]
	load.64*    %r13544 <- 16[%r13543]
	load.32     %r13545 <- 0[n]
	scast.64    %r13546 <- (32) %r13545
	muls.64     %r13547 <- %r13546, $16
	add.64*     %r13548 <- %r13544, %r13547
	store.64*   %r13548 -> 0[o2]
	load.64*    %r13549 <- 0[cl]
	add.64*     %r13550 <- %r13549, $0
	add.64*     %r13551 <- %r13550, $40
	load.32     %r13552 <- 0[n]
	scast.64    %r13553 <- (32) %r13552
	muls.64     %r13554 <- %r13553, $16
	add.64*     %r13555 <- %r13551, %r13554
	store.64*   %r13555 -> 0[o1]
	load.64*    %r13556 <- 0[o2]
	load.f64    %r13557 <- 0[%r13556]
	fpcast.f64  %r13558 <- (64) %r13557
	load.64*    %r13559 <- 0[o1]
	store.f64   %r13558 -> 0[%r13559]
	load.64*    %r13560 <- 0[o2]
	load.32     %r13561 <- 8[%r13560]
	scast.32    %r13562 <- (32) %r13561
	load.64*    %r13563 <- 0[o1]
	store.32    %r13562 -> 8[%r13563]
	br          .L3030

.L3030:
	br          .L3032

.L3031:
	load.64*    %r13564 <- 0[L]
	load.64*    %r13565 <- 16[%r13564]
	store.64*   %r13565 -> 0[i_o]
	load.64*    %r13566 <- 0[cl]
	ptrcast.64* %r13567 <- (64) %r13566
	load.64*    %r13568 <- 0[i_o]
	store.64*   %r13567 -> 0[%r13568]
	load.64*    %r13569 <- 0[i_o]
	store.32    $6 -> 8[%r13569]
	load.64*    %r13570 <- 0[L]
	load.64*    %r13571 <- 0[L]
	load.64*    %r13572 <- 16[%r13571]
	add.64*     %r13573 <- %r13572, $16
	store.64*   %r13573 -> 16[%r13571]
	br          .L3033

.L3033:
	ret


lua_pushboolean:
.L3034:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[b]
	load.64*    %r13574 <- 0[L]
	load.64*    %r13575 <- 16[%r13574]
	store.64*   %r13575 -> 0[i_o]
	load.32     %r13576 <- 0[b]
	setne.32    %r13577 <- %r13576, $0
	load.64*    %r13578 <- 0[i_o]
	store.32    %r13577 -> 0[%r13578]
	load.64*    %r13579 <- 0[i_o]
	store.32    $1 -> 8[%r13579]
	load.64*    %r13580 <- 0[L]
	load.64*    %r13581 <- 0[L]
	load.64*    %r13582 <- 16[%r13581]
	add.64*     %r13583 <- %r13582, $16
	store.64*   %r13583 -> 16[%r13581]
	br          .L3035

.L3035:
	ret


lua_pushthread:
.L3036:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13584 <- 0[L]
	load.64*    %r13585 <- 16[%r13584]
	store.64*   %r13585 -> 0[i_o]
	load.64*    %r13586 <- 0[L]
	ptrcast.64* %r13587 <- (64) %r13586
	load.64*    %r13588 <- 0[i_o]
	store.64*   %r13587 -> 0[%r13588]
	load.64*    %r13589 <- 0[i_o]
	store.32    $8 -> 8[%r13589]
	load.64*    %r13590 <- 0[L]
	load.64*    %r13591 <- 0[L]
	load.64*    %r13592 <- 16[%r13591]
	add.64*     %r13593 <- %r13592, $16
	store.64*   %r13593 -> 16[%r13591]
	load.64*    %r13594 <- 0[L]
	load.64*    %r13595 <- 32[%r13594]
	load.64*    %r13596 <- 176[%r13595]
	load.64*    %r13597 <- 0[L]
	seteq.32    %r13598 <- %r13596, %r13597
	phisrc.32   %phi576(return) <- %r13598
	br          .L3037

.L3037:
	phi.32      %r13599 <- %phi576(return)
	ret.32      %r13598


lua_gettable:
.L3038:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13600 <- 0[L]
	load.32     %r13601 <- 0[idx]
	push.64*    %r13600
	push.32     %r13601
	call.64*    %r13602 <- index2adr
	store.64*   %r13602 -> 0[t]
	load.64*    %r13603 <- 0[L]
	load.64*    %r13604 <- 0[L]
	load.64*    %r13605 <- 0[t]
	load.64*    %r13606 <- 0[L]
	load.64*    %r13607 <- 16[%r13606]
	sub.64*     %r13608 <- %r13607, $16
	load.64*    %r13609 <- 0[L]
	load.64*    %r13610 <- 16[%r13609]
	sub.64*     %r13611 <- %r13610, $16
	push.64*    %r13604
	push.64*    %r13605
	push.64*    %r13608
	push.64*    %r13611
	call        luaV_gettable
	br          .L3039

.L3039:
	ret


lua_getfield:
.L3040:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[k]
	load.64*    %r13612 <- 0[L]
	load.32     %r13613 <- 0[idx]
	push.64*    %r13612
	push.32     %r13613
	call.64*    %r13614 <- index2adr
	store.64*   %r13614 -> 0[t]
	load.64*    %r13615 <- 0[L]
	symaddr.64* %r13616 <- key
	store.64*   %r13616 -> 0[i_o]
	load.64*    %r13617 <- 0[L]
	load.64*    %r13618 <- 0[k]
	load.64*    %r13619 <- 0[k]
	push.64*    %r13619
	call.64     %r13620 <- strlen
	push.64*    %r13617
	push.64*    %r13618
	push.64     %r13620
	call.64*    %r13621 <- luaS_newlstr
	ptrcast.64* %r13622 <- (64) %r13621
	load.64*    %r13623 <- 0[i_o]
	store.64*   %r13622 -> 0[%r13623]
	load.64*    %r13624 <- 0[i_o]
	store.32    $4 -> 8[%r13624]
	load.64*    %r13625 <- 0[L]
	load.64*    %r13626 <- 0[t]
	symaddr.64* %r13627 <- key
	load.64*    %r13628 <- 0[L]
	load.64*    %r13629 <- 16[%r13628]
	push.64*    %r13625
	push.64*    %r13626
	push.64*    %r13627
	push.64*    %r13629
	call        luaV_gettable
	load.64*    %r13630 <- 0[L]
	load.64*    %r13631 <- 0[L]
	load.64*    %r13632 <- 16[%r13631]
	add.64*     %r13633 <- %r13632, $16
	store.64*   %r13633 -> 16[%r13631]
	br          .L3041

.L3041:
	ret


lua_rawget:
.L3042:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13634 <- 0[L]
	load.32     %r13635 <- 0[idx]
	push.64*    %r13634
	push.32     %r13635
	call.64*    %r13636 <- index2adr
	store.64*   %r13636 -> 0[t]
	load.64*    %r13637 <- 0[L]
	load.64*    %r13638 <- 0[t]
	load.64*    %r13639 <- 0[%r13638]
	add.64*     %r13640 <- %r13639, $0
	load.64*    %r13641 <- 0[L]
	load.64*    %r13642 <- 16[%r13641]
	sub.64*     %r13643 <- %r13642, $16
	push.64*    %r13640
	push.64*    %r13643
	call.64*    %r13644 <- luaH_get
	store.64*   %r13644 -> 0[o2]
	load.64*    %r13645 <- 0[L]
	load.64*    %r13646 <- 16[%r13645]
	sub.64*     %r13647 <- %r13646, $16
	store.64*   %r13647 -> 0[o1]
	load.64*    %r13648 <- 0[o2]
	load.f64    %r13649 <- 0[%r13648]
	fpcast.f64  %r13650 <- (64) %r13649
	load.64*    %r13651 <- 0[o1]
	store.f64   %r13650 -> 0[%r13651]
	load.64*    %r13652 <- 0[o2]
	load.32     %r13653 <- 8[%r13652]
	scast.32    %r13654 <- (32) %r13653
	load.64*    %r13655 <- 0[o1]
	store.32    %r13654 -> 8[%r13655]
	br          .L3043

.L3043:
	ret


lua_rawgeti:
.L3044:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[n]
	load.64*    %r13656 <- 0[L]
	load.32     %r13657 <- 0[idx]
	push.64*    %r13656
	push.32     %r13657
	call.64*    %r13658 <- index2adr
	store.64*   %r13658 -> 0[o]
	load.64*    %r13659 <- 0[L]
	load.64*    %r13660 <- 0[o]
	load.64*    %r13661 <- 0[%r13660]
	add.64*     %r13662 <- %r13661, $0
	load.32     %r13663 <- 0[n]
	push.64*    %r13662
	push.32     %r13663
	call.64*    %r13664 <- luaH_getnum
	store.64*   %r13664 -> 0[o2]
	load.64*    %r13665 <- 0[L]
	load.64*    %r13666 <- 16[%r13665]
	store.64*   %r13666 -> 0[o1]
	load.64*    %r13667 <- 0[o2]
	load.f64    %r13668 <- 0[%r13667]
	fpcast.f64  %r13669 <- (64) %r13668
	load.64*    %r13670 <- 0[o1]
	store.f64   %r13669 -> 0[%r13670]
	load.64*    %r13671 <- 0[o2]
	load.32     %r13672 <- 8[%r13671]
	scast.32    %r13673 <- (32) %r13672
	load.64*    %r13674 <- 0[o1]
	store.32    %r13673 -> 8[%r13674]
	load.64*    %r13675 <- 0[L]
	load.64*    %r13676 <- 0[L]
	load.64*    %r13677 <- 16[%r13676]
	add.64*     %r13678 <- %r13677, $16
	store.64*   %r13678 -> 16[%r13676]
	br          .L3045

.L3045:
	ret


lua_createtable:
.L3046:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narray]
	store.32    %arg3 -> 0[nrec]
	load.64*    %r13679 <- 0[L]
	load.64*    %r13680 <- 32[%r13679]
	load.64     %r13681 <- 120[%r13680]
	load.64*    %r13682 <- 0[L]
	load.64*    %r13683 <- 32[%r13682]
	load.64     %r13684 <- 112[%r13683]
	setae.32    %r13685 <- %r13681, %r13684
	cbr         %r13685, .L3047, .L3048

.L3047:
	load.64*    %r13686 <- 0[L]
	push.64*    %r13686
	call        luaC_step
	br          .L3048

.L3048:
	load.64*    %r13687 <- 0[L]
	load.64*    %r13688 <- 16[%r13687]
	store.64*   %r13688 -> 0[i_o]
	load.64*    %r13689 <- 0[L]
	load.32     %r13690 <- 0[narray]
	load.32     %r13691 <- 0[nrec]
	push.64*    %r13689
	push.32     %r13690
	push.32     %r13691
	call.64*    %r13692 <- luaH_new
	ptrcast.64* %r13693 <- (64) %r13692
	load.64*    %r13694 <- 0[i_o]
	store.64*   %r13693 -> 0[%r13694]
	load.64*    %r13695 <- 0[i_o]
	store.32    $5 -> 8[%r13695]
	load.64*    %r13696 <- 0[L]
	load.64*    %r13697 <- 0[L]
	load.64*    %r13698 <- 16[%r13697]
	add.64*     %r13699 <- %r13698, $16
	store.64*   %r13699 -> 16[%r13697]
	br          .L3049

.L3049:
	ret


lua_getmetatable:
.L3050:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[objindex]
	store.64*   $0 -> 0[mt]
	load.64*    %r13700 <- 0[L]
	load.32     %r13701 <- 0[objindex]
	push.64*    %r13700
	push.32     %r13701
	call.64*    %r13702 <- index2adr
	store.64*   %r13702 -> 0[obj]
	load.64*    %r13703 <- 0[obj]
	load.32     %r13704 <- 8[%r13703]
	switch.32   %r13704, 5 -> .L3052, 7 -> .L3053, default -> .L3054

.L3052:
	load.64*    %r13705 <- 0[obj]
	load.64*    %r13706 <- 0[%r13705]
	load.64*    %r13707 <- 16[%r13706]
	store.64*   %r13707 -> 0[mt]
	br          .L3051

.L3053:
	load.64*    %r13708 <- 0[obj]
	load.64*    %r13709 <- 0[%r13708]
	load.64*    %r13710 <- 16[%r13709]
	store.64*   %r13710 -> 0[mt]
	br          .L3051

.L3054:
	load.64*    %r13711 <- 0[L]
	load.64*    %r13712 <- 32[%r13711]
	add.64*     %r13713 <- %r13712, $224
	load.64*    %r13714 <- 0[obj]
	load.32     %r13715 <- 8[%r13714]
	scast.64    %r13716 <- (32) %r13715
	muls.64     %r13717 <- %r13716, $8
	add.64*     %r13718 <- %r13713, %r13717
	load.64*    %r13719 <- 0[%r13718]
	store.64*   %r13719 -> 0[mt]
	br          .L3051

.L3051:
	load.64*    %r13720 <- 0[mt]
	seteq.32    %r13721 <- %r13720, $0
	cbr         %r13721, .L3055, .L3056

.L3055:
	store.32    $0 -> 0[res]
	br          .L3057

.L3056:
	load.64*    %r13722 <- 0[L]
	load.64*    %r13723 <- 16[%r13722]
	store.64*   %r13723 -> 0[i_o]
	load.64*    %r13724 <- 0[mt]
	ptrcast.64* %r13725 <- (64) %r13724
	load.64*    %r13726 <- 0[i_o]
	store.64*   %r13725 -> 0[%r13726]
	load.64*    %r13727 <- 0[i_o]
	store.32    $5 -> 8[%r13727]
	load.64*    %r13728 <- 0[L]
	load.64*    %r13729 <- 0[L]
	load.64*    %r13730 <- 16[%r13729]
	add.64*     %r13731 <- %r13730, $16
	store.64*   %r13731 -> 16[%r13729]
	store.32    $1 -> 0[res]
	br          .L3057

.L3057:
	load.32     %r13732 <- 0[res]
	phisrc.32   %phi577(return) <- %r13732
	br          .L3058

.L3058:
	phi.32      %r13733 <- %phi577(return)
	ret.32      %r13732


lua_getfenv:
.L3059:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13734 <- 0[L]
	load.32     %r13735 <- 0[idx]
	push.64*    %r13734
	push.32     %r13735
	call.64*    %r13736 <- index2adr
	store.64*   %r13736 -> 0[o]
	load.64*    %r13737 <- 0[L]
	load.64*    %r13738 <- 0[o]
	load.32     %r13739 <- 8[%r13738]
	switch.32   %r13739, 6 -> .L3061, 7 -> .L3062, 8 -> .L3063, default -> .L3064

.L3061:
	load.64*    %r13740 <- 0[L]
	load.64*    %r13741 <- 16[%r13740]
	store.64*   %r13741 -> 0[i_o]
	load.64*    %r13742 <- 0[o]
	load.64*    %r13743 <- 0[%r13742]
	load.64*    %r13744 <- 24[%r13743]
	ptrcast.64* %r13745 <- (64) %r13744
	load.64*    %r13746 <- 0[i_o]
	store.64*   %r13745 -> 0[%r13746]
	load.64*    %r13747 <- 0[i_o]
	store.32    $5 -> 8[%r13747]
	br          .L3060

.L3062:
	load.64*    %r13748 <- 0[L]
	load.64*    %r13749 <- 16[%r13748]
	store.64*   %r13749 -> 0[i_o]
	load.64*    %r13750 <- 0[o]
	load.64*    %r13751 <- 0[%r13750]
	load.64*    %r13752 <- 24[%r13751]
	ptrcast.64* %r13753 <- (64) %r13752
	load.64*    %r13754 <- 0[i_o]
	store.64*   %r13753 -> 0[%r13754]
	load.64*    %r13755 <- 0[i_o]
	store.32    $5 -> 8[%r13755]
	br          .L3060

.L3063:
	load.64*    %r13756 <- 0[o]
	load.64*    %r13757 <- 0[%r13756]
	add.64*     %r13758 <- %r13757, $0
	add.64*     %r13759 <- %r13758, $120
	store.64*   %r13759 -> 0[o2]
	load.64*    %r13760 <- 0[L]
	load.64*    %r13761 <- 16[%r13760]
	store.64*   %r13761 -> 0[o1]
	load.64*    %r13762 <- 0[o2]
	load.f64    %r13763 <- 0[%r13762]
	fpcast.f64  %r13764 <- (64) %r13763
	load.64*    %r13765 <- 0[o1]
	store.f64   %r13764 -> 0[%r13765]
	load.64*    %r13766 <- 0[o2]
	load.32     %r13767 <- 8[%r13766]
	scast.32    %r13768 <- (32) %r13767
	load.64*    %r13769 <- 0[o1]
	store.32    %r13768 -> 8[%r13769]
	br          .L3060

.L3064:
	load.64*    %r13770 <- 0[L]
	load.64*    %r13771 <- 16[%r13770]
	store.32    $0 -> 8[%r13771]
	br          .L3060

.L3060:
	load.64*    %r13772 <- 0[L]
	load.64*    %r13773 <- 0[L]
	load.64*    %r13774 <- 16[%r13773]
	add.64*     %r13775 <- %r13774, $16
	store.64*   %r13775 -> 16[%r13773]
	br          .L3065

.L3065:
	ret


lua_settable:
.L3066:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13776 <- 0[L]
	load.64*    %r13777 <- 0[L]
	load.32     %r13778 <- 0[idx]
	push.64*    %r13777
	push.32     %r13778
	call.64*    %r13779 <- index2adr
	store.64*   %r13779 -> 0[t]
	load.64*    %r13780 <- 0[L]
	load.64*    %r13781 <- 0[L]
	load.64*    %r13782 <- 0[t]
	load.64*    %r13783 <- 0[L]
	load.64*    %r13784 <- 16[%r13783]
	sub.64*     %r13785 <- %r13784, $32
	load.64*    %r13786 <- 0[L]
	load.64*    %r13787 <- 16[%r13786]
	sub.64*     %r13788 <- %r13787, $16
	push.64*    %r13781
	push.64*    %r13782
	push.64*    %r13785
	push.64*    %r13788
	call        luaV_settable
	load.64*    %r13789 <- 0[L]
	load.64*    %r13790 <- 16[%r13789]
	cast.64     %r13791 <- (64) %r13790
	sub.64      %r13792 <- %r13791, $32
	ptrcast.64* %r13793 <- (64) %r13792
	store.64*   %r13793 -> 16[%r13789]
	br          .L3067

.L3067:
	ret


lua_setfield:
.L3068:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[k]
	load.64*    %r13794 <- 0[L]
	load.64*    %r13795 <- 0[L]
	load.32     %r13796 <- 0[idx]
	push.64*    %r13795
	push.32     %r13796
	call.64*    %r13797 <- index2adr
	store.64*   %r13797 -> 0[t]
	load.64*    %r13798 <- 0[L]
	symaddr.64* %r13799 <- key
	store.64*   %r13799 -> 0[i_o]
	load.64*    %r13800 <- 0[L]
	load.64*    %r13801 <- 0[k]
	load.64*    %r13802 <- 0[k]
	push.64*    %r13802
	call.64     %r13803 <- strlen
	push.64*    %r13800
	push.64*    %r13801
	push.64     %r13803
	call.64*    %r13804 <- luaS_newlstr
	ptrcast.64* %r13805 <- (64) %r13804
	load.64*    %r13806 <- 0[i_o]
	store.64*   %r13805 -> 0[%r13806]
	load.64*    %r13807 <- 0[i_o]
	store.32    $4 -> 8[%r13807]
	load.64*    %r13808 <- 0[L]
	load.64*    %r13809 <- 0[t]
	symaddr.64* %r13810 <- key
	load.64*    %r13811 <- 0[L]
	load.64*    %r13812 <- 16[%r13811]
	sub.64*     %r13813 <- %r13812, $16
	push.64*    %r13808
	push.64*    %r13809
	push.64*    %r13810
	push.64*    %r13813
	call        luaV_settable
	load.64*    %r13814 <- 0[L]
	load.64*    %r13815 <- 16[%r13814]
	sub.64*     %r13816 <- %r13815, $16
	store.64*   %r13816 -> 16[%r13814]
	br          .L3069

.L3069:
	ret


lua_rawset:
.L3070:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13817 <- 0[L]
	load.64*    %r13818 <- 0[L]
	load.32     %r13819 <- 0[idx]
	push.64*    %r13818
	push.32     %r13819
	call.64*    %r13820 <- index2adr
	store.64*   %r13820 -> 0[t]
	load.64*    %r13821 <- 0[L]
	load.64*    %r13822 <- 0[L]
	load.64*    %r13823 <- 16[%r13822]
	sub.64*     %r13824 <- %r13823, $16
	store.64*   %r13824 -> 0[o2]
	load.64*    %r13825 <- 0[L]
	load.64*    %r13826 <- 0[t]
	load.64*    %r13827 <- 0[%r13826]
	add.64*     %r13828 <- %r13827, $0
	load.64*    %r13829 <- 0[L]
	load.64*    %r13830 <- 16[%r13829]
	sub.64*     %r13831 <- %r13830, $32
	push.64*    %r13825
	push.64*    %r13828
	push.64*    %r13831
	call.64*    %r13832 <- luaH_set
	store.64*   %r13832 -> 0[o1]
	load.64*    %r13833 <- 0[o2]
	load.f64    %r13834 <- 0[%r13833]
	fpcast.f64  %r13835 <- (64) %r13834
	load.64*    %r13836 <- 0[o1]
	store.f64   %r13835 -> 0[%r13836]
	load.64*    %r13837 <- 0[o2]
	load.32     %r13838 <- 8[%r13837]
	scast.32    %r13839 <- (32) %r13838
	load.64*    %r13840 <- 0[o1]
	store.32    %r13839 -> 8[%r13840]
	load.64*    %r13841 <- 0[L]
	load.64*    %r13842 <- 16[%r13841]
	sub.64*     %r13843 <- %r13842, $16
	load.32     %r13844 <- 8[%r13843]
	setge.32    %r13845 <- %r13844, $4
	cbr         %r13845, .L3074, .L3072

.L3074:
	load.64*    %r13846 <- 0[L]
	load.64*    %r13847 <- 16[%r13846]
	sub.64*     %r13848 <- %r13847, $16
	load.64*    %r13849 <- 0[%r13848]
	load.8      %r13850 <- 9[%r13849]
	cast.32     %r13851 <- (8) %r13850
	and.32      %r13852 <- %r13851, $3
	cbr         %r13852, .L3073, .L3072

.L3073:
	load.64*    %r13853 <- 0[t]
	load.64*    %r13854 <- 0[%r13853]
	add.64*     %r13855 <- %r13854, $0
	ptrcast.64* %r13856 <- (64) %r13855
	load.8      %r13857 <- 9[%r13856]
	cast.32     %r13858 <- (8) %r13857
	and.32      %r13859 <- %r13858, $4
	cbr         %r13859, .L3071, .L3072

.L3071:
	load.64*    %r13860 <- 0[L]
	load.64*    %r13861 <- 0[t]
	load.64*    %r13862 <- 0[%r13861]
	add.64*     %r13863 <- %r13862, $0
	push.64*    %r13860
	push.64*    %r13863
	call        luaC_barrierback
	br          .L3072

.L3072:
	load.64*    %r13864 <- 0[L]
	load.64*    %r13865 <- 16[%r13864]
	cast.64     %r13866 <- (64) %r13865
	sub.64      %r13867 <- %r13866, $32
	ptrcast.64* %r13868 <- (64) %r13867
	store.64*   %r13868 -> 16[%r13864]
	br          .L3075

.L3075:
	ret


lua_rawseti:
.L3076:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[n]
	load.64*    %r13869 <- 0[L]
	load.64*    %r13870 <- 0[L]
	load.32     %r13871 <- 0[idx]
	push.64*    %r13870
	push.32     %r13871
	call.64*    %r13872 <- index2adr
	store.64*   %r13872 -> 0[o]
	load.64*    %r13873 <- 0[L]
	load.64*    %r13874 <- 0[L]
	load.64*    %r13875 <- 16[%r13874]
	sub.64*     %r13876 <- %r13875, $16
	store.64*   %r13876 -> 0[o2]
	load.64*    %r13877 <- 0[L]
	load.64*    %r13878 <- 0[o]
	load.64*    %r13879 <- 0[%r13878]
	add.64*     %r13880 <- %r13879, $0
	load.32     %r13881 <- 0[n]
	push.64*    %r13877
	push.64*    %r13880
	push.32     %r13881
	call.64*    %r13882 <- luaH_setnum
	store.64*   %r13882 -> 0[o1]
	load.64*    %r13883 <- 0[o2]
	load.f64    %r13884 <- 0[%r13883]
	fpcast.f64  %r13885 <- (64) %r13884
	load.64*    %r13886 <- 0[o1]
	store.f64   %r13885 -> 0[%r13886]
	load.64*    %r13887 <- 0[o2]
	load.32     %r13888 <- 8[%r13887]
	scast.32    %r13889 <- (32) %r13888
	load.64*    %r13890 <- 0[o1]
	store.32    %r13889 -> 8[%r13890]
	load.64*    %r13891 <- 0[L]
	load.64*    %r13892 <- 16[%r13891]
	sub.64*     %r13893 <- %r13892, $16
	load.32     %r13894 <- 8[%r13893]
	setge.32    %r13895 <- %r13894, $4
	cbr         %r13895, .L3080, .L3078

.L3080:
	load.64*    %r13896 <- 0[L]
	load.64*    %r13897 <- 16[%r13896]
	sub.64*     %r13898 <- %r13897, $16
	load.64*    %r13899 <- 0[%r13898]
	load.8      %r13900 <- 9[%r13899]
	cast.32     %r13901 <- (8) %r13900
	and.32      %r13902 <- %r13901, $3
	cbr         %r13902, .L3079, .L3078

.L3079:
	load.64*    %r13903 <- 0[o]
	load.64*    %r13904 <- 0[%r13903]
	add.64*     %r13905 <- %r13904, $0
	ptrcast.64* %r13906 <- (64) %r13905
	load.8      %r13907 <- 9[%r13906]
	cast.32     %r13908 <- (8) %r13907
	and.32      %r13909 <- %r13908, $4
	cbr         %r13909, .L3077, .L3078

.L3077:
	load.64*    %r13910 <- 0[L]
	load.64*    %r13911 <- 0[o]
	load.64*    %r13912 <- 0[%r13911]
	add.64*     %r13913 <- %r13912, $0
	push.64*    %r13910
	push.64*    %r13913
	call        luaC_barrierback
	br          .L3078

.L3078:
	load.64*    %r13914 <- 0[L]
	load.64*    %r13915 <- 16[%r13914]
	sub.64*     %r13916 <- %r13915, $16
	store.64*   %r13916 -> 16[%r13914]
	br          .L3081

.L3081:
	ret


lua_setmetatable:
.L3082:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[objindex]
	load.64*    %r13917 <- 0[L]
	load.64*    %r13918 <- 0[L]
	load.32     %r13919 <- 0[objindex]
	push.64*    %r13918
	push.32     %r13919
	call.64*    %r13920 <- index2adr
	store.64*   %r13920 -> 0[obj]
	load.64*    %r13921 <- 0[L]
	load.64*    %r13922 <- 0[L]
	load.64*    %r13923 <- 16[%r13922]
	sub.64*     %r13924 <- %r13923, $16
	load.32     %r13925 <- 8[%r13924]
	seteq.32    %r13926 <- %r13925, $0
	cbr         %r13926, .L3083, .L3084

.L3083:
	store.64*   $0 -> 0[mt]
	br          .L3085

.L3084:
	load.64*    %r13927 <- 0[L]
	load.64*    %r13928 <- 0[L]
	load.64*    %r13929 <- 16[%r13928]
	sub.64*     %r13930 <- %r13929, $16
	load.64*    %r13931 <- 0[%r13930]
	add.64*     %r13932 <- %r13931, $0
	store.64*   %r13932 -> 0[mt]
	br          .L3085

.L3085:
	load.64*    %r13933 <- 0[obj]
	load.32     %r13934 <- 8[%r13933]
	switch.32   %r13934, 5 -> .L3087, 7 -> .L3088, default -> .L3089

.L3087:
	load.64*    %r13935 <- 0[mt]
	load.64*    %r13936 <- 0[obj]
	load.64*    %r13937 <- 0[%r13936]
	store.64*   %r13935 -> 16[%r13937]
	load.64*    %r13938 <- 0[mt]
	cbr         %r13938, .L3090, .L3091

.L3090:
	load.64*    %r13939 <- 0[mt]
	ptrcast.64* %r13940 <- (64) %r13939
	load.8      %r13941 <- 9[%r13940]
	cast.32     %r13942 <- (8) %r13941
	and.32      %r13943 <- %r13942, $3
	cbr         %r13943, .L3094, .L3093

.L3094:
	load.64*    %r13944 <- 0[obj]
	load.64*    %r13945 <- 0[%r13944]
	add.64*     %r13946 <- %r13945, $0
	ptrcast.64* %r13947 <- (64) %r13946
	load.8      %r13948 <- 9[%r13947]
	cast.32     %r13949 <- (8) %r13948
	and.32      %r13950 <- %r13949, $4
	cbr         %r13950, .L3092, .L3093

.L3092:
	load.64*    %r13951 <- 0[L]
	load.64*    %r13952 <- 0[obj]
	load.64*    %r13953 <- 0[%r13952]
	add.64*     %r13954 <- %r13953, $0
	push.64*    %r13951
	push.64*    %r13954
	call        luaC_barrierback
	br          .L3093

.L3093:
	br          .L3091

.L3091:
	br          .L3086

.L3088:
	load.64*    %r13955 <- 0[mt]
	load.64*    %r13956 <- 0[obj]
	load.64*    %r13957 <- 0[%r13956]
	store.64*   %r13955 -> 16[%r13957]
	load.64*    %r13958 <- 0[mt]
	cbr         %r13958, .L3095, .L3096

.L3095:
	load.64*    %r13959 <- 0[mt]
	ptrcast.64* %r13960 <- (64) %r13959
	load.8      %r13961 <- 9[%r13960]
	cast.32     %r13962 <- (8) %r13961
	and.32      %r13963 <- %r13962, $3
	cbr         %r13963, .L3099, .L3098

.L3099:
	load.64*    %r13964 <- 0[obj]
	load.64*    %r13965 <- 0[%r13964]
	add.64*     %r13966 <- %r13965, $0
	ptrcast.64* %r13967 <- (64) %r13966
	load.8      %r13968 <- 9[%r13967]
	cast.32     %r13969 <- (8) %r13968
	and.32      %r13970 <- %r13969, $4
	cbr         %r13970, .L3097, .L3098

.L3097:
	load.64*    %r13971 <- 0[L]
	load.64*    %r13972 <- 0[obj]
	load.64*    %r13973 <- 0[%r13972]
	add.64*     %r13974 <- %r13973, $0
	ptrcast.64* %r13975 <- (64) %r13974
	load.64*    %r13976 <- 0[mt]
	ptrcast.64* %r13977 <- (64) %r13976
	push.64*    %r13971
	push.64*    %r13975
	push.64*    %r13977
	call        luaC_barrierf
	br          .L3098

.L3098:
	br          .L3096

.L3096:
	br          .L3086

.L3089:
	load.64*    %r13978 <- 0[mt]
	load.64*    %r13979 <- 0[L]
	load.64*    %r13980 <- 32[%r13979]
	add.64*     %r13981 <- %r13980, $224
	load.64*    %r13982 <- 0[obj]
	load.32     %r13983 <- 8[%r13982]
	scast.64    %r13984 <- (32) %r13983
	muls.64     %r13985 <- %r13984, $8
	add.64*     %r13986 <- %r13981, %r13985
	store.64*   %r13978 -> 0[%r13986]
	br          .L3086

.L3086:
	load.64*    %r13987 <- 0[L]
	load.64*    %r13988 <- 16[%r13987]
	sub.64*     %r13989 <- %r13988, $16
	store.64*   %r13989 -> 16[%r13987]
	phisrc.32   %phi578(return) <- $1
	br          .L3100

.L3100:
	phi.32      %r13990 <- %phi578(return)
	ret.32      $1


lua_setfenv:
.L3101:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    $1 -> 0[res]
	load.64*    %r13991 <- 0[L]
	load.64*    %r13992 <- 0[L]
	load.32     %r13993 <- 0[idx]
	push.64*    %r13992
	push.32     %r13993
	call.64*    %r13994 <- index2adr
	store.64*   %r13994 -> 0[o]
	load.64*    %r13995 <- 0[L]
	load.64*    %r13996 <- 0[L]
	load.64*    %r13997 <- 0[o]
	load.32     %r13998 <- 8[%r13997]
	switch.32   %r13998, 6 -> .L3103, 7 -> .L3104, 8 -> .L3105, default -> .L3106

.L3103:
	load.64*    %r13999 <- 0[L]
	load.64*    %r14000 <- 16[%r13999]
	sub.64*     %r14001 <- %r14000, $16
	load.64*    %r14002 <- 0[%r14001]
	add.64*     %r14003 <- %r14002, $0
	load.64*    %r14004 <- 0[o]
	load.64*    %r14005 <- 0[%r14004]
	store.64*   %r14003 -> 24[%r14005]
	br          .L3102

.L3104:
	load.64*    %r14006 <- 0[L]
	load.64*    %r14007 <- 16[%r14006]
	sub.64*     %r14008 <- %r14007, $16
	load.64*    %r14009 <- 0[%r14008]
	add.64*     %r14010 <- %r14009, $0
	load.64*    %r14011 <- 0[o]
	load.64*    %r14012 <- 0[%r14011]
	store.64*   %r14010 -> 24[%r14012]
	br          .L3102

.L3105:
	load.64*    %r14013 <- 0[o]
	load.64*    %r14014 <- 0[%r14013]
	add.64*     %r14015 <- %r14014, $0
	add.64*     %r14016 <- %r14015, $120
	store.64*   %r14016 -> 0[i_o]
	load.64*    %r14017 <- 0[L]
	load.64*    %r14018 <- 16[%r14017]
	sub.64*     %r14019 <- %r14018, $16
	load.64*    %r14020 <- 0[%r14019]
	add.64*     %r14021 <- %r14020, $0
	ptrcast.64* %r14022 <- (64) %r14021
	load.64*    %r14023 <- 0[i_o]
	store.64*   %r14022 -> 0[%r14023]
	load.64*    %r14024 <- 0[i_o]
	store.32    $5 -> 8[%r14024]
	br          .L3102

.L3106:
	store.32    $0 -> 0[res]
	br          .L3102

.L3102:
	load.32     %r14025 <- 0[res]
	cbr         %r14025, .L3107, .L3108

.L3107:
	load.64*    %r14026 <- 0[L]
	load.64*    %r14027 <- 16[%r14026]
	sub.64*     %r14028 <- %r14027, $16
	load.64*    %r14029 <- 0[%r14028]
	add.64*     %r14030 <- %r14029, $0
	ptrcast.64* %r14031 <- (64) %r14030
	load.8      %r14032 <- 9[%r14031]
	cast.32     %r14033 <- (8) %r14032
	and.32      %r14034 <- %r14033, $3
	cbr         %r14034, .L3111, .L3110

.L3111:
	load.64*    %r14035 <- 0[o]
	load.64*    %r14036 <- 0[%r14035]
	ptrcast.64* %r14037 <- (64) %r14036
	load.8      %r14038 <- 9[%r14037]
	cast.32     %r14039 <- (8) %r14038
	and.32      %r14040 <- %r14039, $4
	cbr         %r14040, .L3109, .L3110

.L3109:
	load.64*    %r14041 <- 0[L]
	load.64*    %r14042 <- 0[o]
	load.64*    %r14043 <- 0[%r14042]
	ptrcast.64* %r14044 <- (64) %r14043
	load.64*    %r14045 <- 0[L]
	load.64*    %r14046 <- 16[%r14045]
	sub.64*     %r14047 <- %r14046, $16
	load.64*    %r14048 <- 0[%r14047]
	add.64*     %r14049 <- %r14048, $0
	ptrcast.64* %r14050 <- (64) %r14049
	push.64*    %r14041
	push.64*    %r14044
	push.64*    %r14050
	call        luaC_barrierf
	br          .L3110

.L3110:
	br          .L3108

.L3108:
	load.64*    %r14051 <- 0[L]
	load.64*    %r14052 <- 16[%r14051]
	sub.64*     %r14053 <- %r14052, $16
	store.64*   %r14053 -> 16[%r14051]
	load.32     %r14054 <- 0[res]
	phisrc.32   %phi579(return) <- %r14054
	br          .L3112

.L3112:
	phi.32      %r14055 <- %phi579(return)
	ret.32      %r14054


lua_call:
.L3113:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nargs]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r14056 <- 0[L]
	load.64*    %r14057 <- 0[L]
	load.64*    %r14058 <- 0[L]
	load.64*    %r14059 <- 16[%r14058]
	load.32     %r14060 <- 0[nargs]
	add.32      %r14061 <- %r14060, $1
	scast.64    %r14062 <- (32) %r14061
	muls.64     %r14063 <- %r14062, $16
	sub.64*     %r14064 <- %r14059, %r14063
	store.64*   %r14064 -> 0[func]
	load.64*    %r14065 <- 0[L]
	load.64*    %r14066 <- 0[func]
	load.32     %r14067 <- 0[nresults]
	push.64*    %r14065
	push.64*    %r14066
	push.32     %r14067
	call        luaD_call
	load.32     %r14068 <- 0[nresults]
	seteq.32    %r14069 <- %r14068, $0xffffffff
	cbr         %r14069, .L3116, .L3115

.L3116:
	load.64*    %r14070 <- 0[L]
	load.64*    %r14071 <- 16[%r14070]
	load.64*    %r14072 <- 0[L]
	load.64*    %r14073 <- 40[%r14072]
	load.64*    %r14074 <- 16[%r14073]
	setae.32    %r14075 <- %r14071, %r14074
	cbr         %r14075, .L3114, .L3115

.L3114:
	load.64*    %r14076 <- 0[L]
	load.64*    %r14077 <- 16[%r14076]
	load.64*    %r14078 <- 0[L]
	load.64*    %r14079 <- 40[%r14078]
	store.64*   %r14077 -> 16[%r14079]
	br          .L3115

.L3115:
	ret


f_call:
.L3117:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r14080 <- 0[ud]
	ptrcast.64* %r14081 <- (64) %r14080
	store.64*   %r14081 -> 0[c]
	load.64*    %r14082 <- 0[L]
	load.64*    %r14083 <- 0[c]
	load.64*    %r14084 <- 0[%r14083]
	load.64*    %r14085 <- 0[c]
	load.32     %r14086 <- 8[%r14085]
	push.64*    %r14082
	push.64*    %r14084
	push.32     %r14086
	call        luaD_call
	br          .L3118

.L3118:
	ret


lua_pcall:
.L3119:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nargs]
	store.32    %arg3 -> 0[nresults]
	store.32    %arg4 -> 0[errfunc]
	load.64*    %r14087 <- 0[L]
	load.64*    %r14088 <- 0[L]
	load.32     %r14089 <- 0[errfunc]
	seteq.32    %r14090 <- %r14089, $0
	cbr         %r14090, .L3120, .L3121

.L3120:
	store.64    $0 -> 0[func]
	br          .L3122

.L3121:
	load.64*    %r14091 <- 0[L]
	load.32     %r14092 <- 0[errfunc]
	push.64*    %r14091
	push.32     %r14092
	call.64*    %r14093 <- index2adr
	store.64*   %r14093 -> 0[o]
	load.64*    %r14094 <- 0[L]
	load.64*    %r14095 <- 0[o]
	ptrcast.64* %r14096 <- (64) %r14095
	load.64*    %r14097 <- 0[L]
	load.64*    %r14098 <- 64[%r14097]
	ptrcast.64* %r14099 <- (64) %r14098
	sub.64      %r14100 <- %r14096, %r14099
	store.64    %r14100 -> 0[func]
	br          .L3122

.L3122:
	load.64*    %r14101 <- 0[L]
	load.64*    %r14102 <- 16[%r14101]
	load.32     %r14103 <- 0[nargs]
	add.32      %r14104 <- %r14103, $1
	scast.64    %r14105 <- (32) %r14104
	muls.64     %r14106 <- %r14105, $16
	sub.64*     %r14107 <- %r14102, %r14106
	store.64*   %r14107 -> 0[c]
	load.32     %r14108 <- 0[nresults]
	store.32    %r14108 -> 8[c]
	load.64*    %r14109 <- 0[L]
	symaddr.64* %r14110 <- f_call
	symaddr.64* %r14111 <- c
	cast.64*    %r14112 <- (64) %r14111
	load.64*    %r14113 <- 0[c]
	ptrcast.64* %r14114 <- (64) %r14113
	load.64*    %r14115 <- 0[L]
	load.64*    %r14116 <- 64[%r14115]
	ptrcast.64* %r14117 <- (64) %r14116
	sub.64      %r14118 <- %r14114, %r14117
	load.64     %r14119 <- 0[func]
	push.64*    %r14109
	push.64*    %r14110
	push.64*    %r14112
	push.64     %r14118
	push.64     %r14119
	call.32     %r14120 <- luaD_pcall
	store.32    %r14120 -> 0[status]
	load.32     %r14121 <- 0[nresults]
	seteq.32    %r14122 <- %r14121, $0xffffffff
	cbr         %r14122, .L3125, .L3124

.L3125:
	load.64*    %r14123 <- 0[L]
	load.64*    %r14124 <- 16[%r14123]
	load.64*    %r14125 <- 0[L]
	load.64*    %r14126 <- 40[%r14125]
	load.64*    %r14127 <- 16[%r14126]
	setae.32    %r14128 <- %r14124, %r14127
	cbr         %r14128, .L3123, .L3124

.L3123:
	load.64*    %r14129 <- 0[L]
	load.64*    %r14130 <- 16[%r14129]
	load.64*    %r14131 <- 0[L]
	load.64*    %r14132 <- 40[%r14131]
	store.64*   %r14130 -> 16[%r14132]
	br          .L3124

.L3124:
	load.32     %r14133 <- 0[status]
	phisrc.32   %phi580(return) <- %r14133
	br          .L3126

.L3126:
	phi.32      %r14134 <- %phi580(return)
	ret.32      %r14133


lua_load:
.L3127:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[reader]
	store.64*   %arg3 -> 0[data]
	store.64*   %arg4 -> 0[chunkname]
	load.64*    %r14135 <- 0[chunkname]
	cbr         %r14135, .L3129, .L3128

.L3128:
	symaddr.64* %r14136 <- <anon symbol:0x1dc2410>
	store.64*   %r14136 -> 0[chunkname]
	br          .L3129

.L3129:
	load.64*    %r14137 <- 0[L]
	symaddr.64* %r14138 <- z
	load.64*    %r14139 <- 0[reader]
	load.64*    %r14140 <- 0[data]
	push.64*    %r14137
	push.64*    %r14138
	push.64*    %r14139
	push.64*    %r14140
	call        luaZ_init
	load.64*    %r14141 <- 0[L]
	symaddr.64* %r14142 <- z
	load.64*    %r14143 <- 0[chunkname]
	push.64*    %r14141
	push.64*    %r14142
	push.64*    %r14143
	call.32     %r14144 <- luaD_protectedparser
	store.32    %r14144 -> 0[status]
	load.32     %r14145 <- 0[status]
	phisrc.32   %phi581(return) <- %r14145
	br          .L3130

.L3130:
	phi.32      %r14146 <- %phi581(return)
	ret.32      %r14145


lua_error:
.L3131:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14147 <- 0[L]
	load.64*    %r14148 <- 0[L]
	push.64*    %r14148
	call        luaG_errormsg
	phisrc.32   %phi582(return) <- $0
	br          .L3132

.L3132:
	phi.32      %r14149 <- %phi582(return)
	ret.32      $0


lua_next:
.L3133:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r14150 <- 0[L]
	load.32     %r14151 <- 0[idx]
	push.64*    %r14150
	push.32     %r14151
	call.64*    %r14152 <- index2adr
	store.64*   %r14152 -> 0[t]
	load.64*    %r14153 <- 0[L]
	load.64*    %r14154 <- 0[L]
	load.64*    %r14155 <- 0[t]
	load.64*    %r14156 <- 0[%r14155]
	add.64*     %r14157 <- %r14156, $0
	load.64*    %r14158 <- 0[L]
	load.64*    %r14159 <- 16[%r14158]
	sub.64*     %r14160 <- %r14159, $16
	push.64*    %r14154
	push.64*    %r14157
	push.64*    %r14160
	call.32     %r14161 <- luaH_next
	store.32    %r14161 -> 0[more]
	load.32     %r14162 <- 0[more]
	cbr         %r14162, .L3134, .L3135

.L3134:
	load.64*    %r14163 <- 0[L]
	load.64*    %r14164 <- 0[L]
	load.64*    %r14165 <- 16[%r14164]
	add.64*     %r14166 <- %r14165, $16
	store.64*   %r14166 -> 16[%r14164]
	br          .L3136

.L3135:
	load.64*    %r14167 <- 0[L]
	load.64*    %r14168 <- 16[%r14167]
	cast.64     %r14169 <- (64) %r14168
	sub.64      %r14170 <- %r14169, $16
	ptrcast.64* %r14171 <- (64) %r14170
	store.64*   %r14171 -> 16[%r14167]
	br          .L3136

.L3136:
	load.32     %r14172 <- 0[more]
	phisrc.32   %phi583(return) <- %r14172
	br          .L3137

.L3137:
	phi.32      %r14173 <- %phi583(return)
	ret.32      %r14172


lua_concat:
.L3138:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[n]
	load.64*    %r14174 <- 0[L]
	load.32     %r14175 <- 0[n]
	setge.32    %r14176 <- %r14175, $2
	cbr         %r14176, .L3139, .L3140

.L3139:
	load.64*    %r14177 <- 0[L]
	load.64*    %r14178 <- 32[%r14177]
	load.64     %r14179 <- 120[%r14178]
	load.64*    %r14180 <- 0[L]
	load.64*    %r14181 <- 32[%r14180]
	load.64     %r14182 <- 112[%r14181]
	setae.32    %r14183 <- %r14179, %r14182
	cbr         %r14183, .L3141, .L3142

.L3141:
	load.64*    %r14184 <- 0[L]
	push.64*    %r14184
	call        luaC_step
	br          .L3142

.L3142:
	load.64*    %r14185 <- 0[L]
	load.32     %r14186 <- 0[n]
	load.64*    %r14187 <- 0[L]
	load.64*    %r14188 <- 16[%r14187]
	load.64*    %r14189 <- 0[L]
	load.64*    %r14190 <- 24[%r14189]
	sub.64      %r14191 <- %r14188, %r14190
	divs.64     %r14192 <- %r14191, $16
	scast.32    %r14193 <- (64) %r14192
	sub.32      %r14194 <- %r14193, $1
	push.64*    %r14185
	push.32     %r14186
	push.32     %r14194
	call        luaV_concat
	load.32     %r14195 <- 0[n]
	sub.32      %r14196 <- %r14195, $1
	scast.64    %r14197 <- (32) %r14196
	muls.64     %r14198 <- %r14197, $16
	load.64*    %r14199 <- 0[L]
	load.64*    %r14200 <- 16[%r14199]
	cast.64     %r14201 <- (64) %r14200
	sub.64      %r14202 <- %r14201, %r14198
	ptrcast.64* %r14203 <- (64) %r14202
	store.64*   %r14203 -> 16[%r14199]
	br          .L3143

.L3140:
	load.32     %r14204 <- 0[n]
	seteq.32    %r14205 <- %r14204, $0
	cbr         %r14205, .L3144, .L3145

.L3144:
	load.64*    %r14206 <- 0[L]
	load.64*    %r14207 <- 16[%r14206]
	store.64*   %r14207 -> 0[i_o]
	load.64*    %r14208 <- 0[L]
	symaddr.64* %r14209 <- <anon symbol:0x1dc3e58>
	push.64*    %r14208
	push.64*    %r14209
	push.64     $0
	call.64*    %r14210 <- luaS_newlstr
	ptrcast.64* %r14211 <- (64) %r14210
	load.64*    %r14212 <- 0[i_o]
	store.64*   %r14211 -> 0[%r14212]
	load.64*    %r14213 <- 0[i_o]
	store.32    $4 -> 8[%r14213]
	load.64*    %r14214 <- 0[L]
	load.64*    %r14215 <- 0[L]
	load.64*    %r14216 <- 16[%r14215]
	add.64*     %r14217 <- %r14216, $16
	store.64*   %r14217 -> 16[%r14215]
	br          .L3145

.L3145:
	br          .L3143

.L3143:
	ret


lua_newuserdata:
.L3146:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[size]
	load.64*    %r14218 <- 0[L]
	load.64*    %r14219 <- 32[%r14218]
	load.64     %r14220 <- 120[%r14219]
	load.64*    %r14221 <- 0[L]
	load.64*    %r14222 <- 32[%r14221]
	load.64     %r14223 <- 112[%r14222]
	setae.32    %r14224 <- %r14220, %r14223
	cbr         %r14224, .L3147, .L3148

.L3147:
	load.64*    %r14225 <- 0[L]
	push.64*    %r14225
	call        luaC_step
	br          .L3148

.L3148:
	load.64*    %r14226 <- 0[L]
	load.64     %r14227 <- 0[size]
	load.64*    %r14228 <- 0[L]
	push.64*    %r14228
	call.64*    %r14229 <- getcurrenv
	push.64*    %r14226
	push.64     %r14227
	push.64*    %r14229
	call.64*    %r14230 <- luaS_newudata
	store.64*   %r14230 -> 0[u]
	load.64*    %r14231 <- 0[L]
	load.64*    %r14232 <- 16[%r14231]
	store.64*   %r14232 -> 0[i_o]
	load.64*    %r14233 <- 0[u]
	ptrcast.64* %r14234 <- (64) %r14233
	load.64*    %r14235 <- 0[i_o]
	store.64*   %r14234 -> 0[%r14235]
	load.64*    %r14236 <- 0[i_o]
	store.32    $7 -> 8[%r14236]
	load.64*    %r14237 <- 0[L]
	load.64*    %r14238 <- 0[L]
	load.64*    %r14239 <- 16[%r14238]
	add.64*     %r14240 <- %r14239, $16
	store.64*   %r14240 -> 16[%r14238]
	load.64*    %r14241 <- 0[u]
	add.64*     %r14242 <- %r14241, $40
	cast.64*    %r14243 <- (64) %r14242
	phisrc.64*  %phi584(return) <- %r14243
	br          .L3149

.L3149:
	phi.64*     %r14244 <- %phi584(return)
	ret.64*     %r14243


luaL_argerror:
.L3150:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[extramsg]
	load.64*    %r14245 <- 0[L]
	symaddr.64* %r14246 <- ar
	push.64*    %r14245
	push.32     $0
	push.64*    %r14246
	call.32     %r14247 <- lua_getstack
	cbr         %r14247, .L3152, .L3151

.L3151:
	load.64*    %r14248 <- 0[L]
	symaddr.64* %r14249 <- <anon symbol:0x1dc5e58>
	load.32     %r14250 <- 0[narg]
	load.64*    %r14251 <- 0[extramsg]
	push.64*    %r14248
	push.64*    %r14249
	push.32     %r14250
	push.64*    %r14251
	call.32     %r14252 <- luaL_error
	phisrc.32   %phi585(return) <- %r14252
	br          .L3153

.L3152:
	load.64*    %r14254 <- 0[L]
	symaddr.64* %r14255 <- <anon symbol:0x1dc61f8>
	symaddr.64* %r14256 <- ar
	push.64*    %r14254
	push.64*    %r14255
	push.64*    %r14256
	call.32     %r14257 <- lua_getinfo
	load.64*    %r14258 <- 16[ar]
	symaddr.64* %r14259 <- <anon symbol:0x1dc6850>
	push.64*    %r14258
	push.64*    %r14259
	call.32     %r14260 <- strcmp
	seteq.32    %r14261 <- %r14260, $0
	cbr         %r14261, .L3154, .L3155

.L3154:
	load.32     %r14262 <- 0[narg]
	sub.32      %r14263 <- %r14262, $1
	store.32    %r14263 -> 0[narg]
	load.32     %r14264 <- 0[narg]
	seteq.32    %r14265 <- %r14264, $0
	cbr         %r14265, .L3156, .L3157

.L3156:
	load.64*    %r14266 <- 0[L]
	symaddr.64* %r14267 <- <anon symbol:0x1dc6bf0>
	load.64*    %r14268 <- 8[ar]
	load.64*    %r14269 <- 0[extramsg]
	push.64*    %r14266
	push.64*    %r14267
	push.64*    %r14268
	push.64*    %r14269
	call.32     %r14270 <- luaL_error
	phisrc.32   %phi586(return) <- %r14270
	br          .L3153

.L3157:
	br          .L3155

.L3155:
	load.64*    %r14271 <- 8[ar]
	seteq.32    %r14272 <- %r14271, $0
	cbr         %r14272, .L3158, .L3159

.L3158:
	symaddr.64* %r14273 <- <anon symbol:0x1dc7248>
	store.64*   %r14273 -> 8[ar]
	br          .L3159

.L3159:
	load.64*    %r14274 <- 0[L]
	symaddr.64* %r14275 <- <anon symbol:0x1dc75e8>
	load.32     %r14276 <- 0[narg]
	load.64*    %r14277 <- 8[ar]
	load.64*    %r14278 <- 0[extramsg]
	push.64*    %r14274
	push.64*    %r14275
	push.32     %r14276
	push.64*    %r14277
	push.64*    %r14278
	call.32     %r14279 <- luaL_error
	phisrc.32   %phi587(return) <- %r14279
	br          .L3153

.L3153:
	phi.32      %r14253 <- %phi585(return), %phi586(return), %phi587(return)
	ret.32      %r14253


luaL_typerror:
.L3160:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[tname]
	load.64*    %r14280 <- 0[L]
	symaddr.64* %r14281 <- <anon symbol:0x1dc80c8>
	load.64*    %r14282 <- 0[tname]
	load.64*    %r14283 <- 0[L]
	load.64*    %r14284 <- 0[L]
	load.32     %r14285 <- 0[narg]
	push.64*    %r14284
	push.32     %r14285
	call.32     %r14286 <- lua_type
	push.64*    %r14283
	push.32     %r14286
	call.64*    %r14287 <- lua_typename
	push.64*    %r14280
	push.64*    %r14281
	push.64*    %r14282
	push.64*    %r14287
	call.64*    %r14288 <- lua_pushfstring
	store.64*   %r14288 -> 0[msg]
	load.64*    %r14289 <- 0[L]
	load.32     %r14290 <- 0[narg]
	load.64*    %r14291 <- 0[msg]
	push.64*    %r14289
	push.32     %r14290
	push.64*    %r14291
	call.32     %r14292 <- luaL_argerror
	phisrc.32   %phi588(return) <- %r14292
	br          .L3161

.L3161:
	phi.32      %r14293 <- %phi588(return)
	ret.32      %r14292


tag_error:
.L3162:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.32    %arg3 -> 0[tag]
	load.64*    %r14294 <- 0[L]
	load.32     %r14295 <- 0[narg]
	load.64*    %r14296 <- 0[L]
	load.32     %r14297 <- 0[tag]
	push.64*    %r14296
	push.32     %r14297
	call.64*    %r14298 <- lua_typename
	push.64*    %r14294
	push.32     %r14295
	push.64*    %r14298
	call.32     %r14299 <- luaL_typerror
	br          .L3163

.L3163:
	ret


luaL_where:
.L3164:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[level]
	load.64*    %r14300 <- 0[L]
	load.32     %r14301 <- 0[level]
	symaddr.64* %r14302 <- ar
	push.64*    %r14300
	push.32     %r14301
	push.64*    %r14302
	call.32     %r14303 <- lua_getstack
	cbr         %r14303, .L3165, .L3166

.L3165:
	load.64*    %r14304 <- 0[L]
	symaddr.64* %r14305 <- <anon symbol:0x1dc8638>
	symaddr.64* %r14306 <- ar
	push.64*    %r14304
	push.64*    %r14305
	push.64*    %r14306
	call.32     %r14307 <- lua_getinfo
	load.32     %r14308 <- 40[ar]
	setgt.32    %r14309 <- %r14308, $0
	cbr         %r14309, .L3167, .L3168

.L3167:
	load.64*    %r14310 <- 0[L]
	symaddr.64* %r14311 <- <anon symbol:0x1dc8c90>
	symaddr.64* %r14312 <- ar
	add.64*     %r14313 <- %r14312, $56
	load.32     %r14314 <- 40[ar]
	push.64*    %r14310
	push.64*    %r14311
	push.64*    %r14313
	push.32     %r14314
	call.64*    %r14315 <- lua_pushfstring
	br          .L3169

.L3168:
	br          .L3166

.L3166:
	load.64*    %r14316 <- 0[L]
	symaddr.64* %r14317 <- <anon symbol:0x1dc93d0>
	push.64*    %r14316
	push.64*    %r14317
	push.64     $0
	call        lua_pushlstring
	br          .L3169

.L3169:
	ret


luaL_newmetatable:
.L3170:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[tname]
	load.64*    %r14318 <- 0[L]
	load.64*    %r14319 <- 0[tname]
	push.64*    %r14318
	push.32     $0xffffd8f0
	push.64*    %r14319
	call        lua_getfield
	load.64*    %r14320 <- 0[L]
	push.64*    %r14320
	push.32     $0xffffffff
	call.32     %r14321 <- lua_type
	seteq.32    %r14322 <- %r14321, $0
	cbr         %r14322, .L3172, .L3171

.L3171:
	phisrc.32   %phi589(return) <- $0
	br          .L3173

.L3172:
	load.64*    %r14324 <- 0[L]
	push.64*    %r14324
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14325 <- 0[L]
	push.64*    %r14325
	push.32     $0
	push.32     $0
	call        lua_createtable
	load.64*    %r14326 <- 0[L]
	push.64*    %r14326
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r14327 <- 0[L]
	load.64*    %r14328 <- 0[tname]
	push.64*    %r14327
	push.32     $0xffffd8f0
	push.64*    %r14328
	call        lua_setfield
	phisrc.32   %phi590(return) <- $1
	br          .L3173

.L3173:
	phi.32      %r14323 <- %phi589(return), %phi590(return)
	ret.32      %r14323


luaL_checkudata:
.L3174:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[tname]
	load.64*    %r14329 <- 0[L]
	load.32     %r14330 <- 0[ud]
	push.64*    %r14329
	push.32     %r14330
	call.64*    %r14331 <- lua_touserdata
	store.64*   %r14331 -> 0[p]
	load.64*    %r14332 <- 0[p]
	setne.32    %r14333 <- %r14332, $0
	cbr         %r14333, .L3175, .L3176

.L3175:
	load.64*    %r14334 <- 0[L]
	load.32     %r14335 <- 0[ud]
	push.64*    %r14334
	push.32     %r14335
	call.32     %r14336 <- lua_getmetatable
	cbr         %r14336, .L3177, .L3178

.L3177:
	load.64*    %r14337 <- 0[L]
	load.64*    %r14338 <- 0[tname]
	push.64*    %r14337
	push.32     $0xffffd8f0
	push.64*    %r14338
	call        lua_getfield
	load.64*    %r14339 <- 0[L]
	push.64*    %r14339
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r14340 <- lua_rawequal
	cbr         %r14340, .L3179, .L3180

.L3179:
	load.64*    %r14341 <- 0[L]
	push.64*    %r14341
	push.32     $0xfffffffd
	call        lua_settop
	load.64*    %r14342 <- 0[p]
	phisrc.64*  %phi591(return) <- %r14342
	br          .L3181

.L3180:
	br          .L3178

.L3178:
	br          .L3176

.L3176:
	load.64*    %r14344 <- 0[L]
	load.32     %r14345 <- 0[ud]
	load.64*    %r14346 <- 0[tname]
	push.64*    %r14344
	push.32     %r14345
	push.64*    %r14346
	call.32     %r14347 <- luaL_typerror
	phisrc.64*  %phi592(return) <- $0
	br          .L3181

.L3181:
	phi.64*     %r14343 <- %phi591(return), %phi592(return)
	ret.64*     %r14343


luaL_checkstack:
.L3182:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[space]
	store.64*   %arg3 -> 0[mes]
	load.64*    %r14348 <- 0[L]
	load.32     %r14349 <- 0[space]
	push.64*    %r14348
	push.32     %r14349
	call.32     %r14350 <- lua_checkstack
	cbr         %r14350, .L3184, .L3183

.L3183:
	load.64*    %r14351 <- 0[L]
	symaddr.64* %r14352 <- <anon symbol:0x1dc9940>
	load.64*    %r14353 <- 0[mes]
	push.64*    %r14351
	push.64*    %r14352
	push.64*    %r14353
	call.32     %r14354 <- luaL_error
	br          .L3184

.L3184:
	ret


luaL_checktype:
.L3185:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.32    %arg3 -> 0[t]
	load.64*    %r14355 <- 0[L]
	load.32     %r14356 <- 0[narg]
	push.64*    %r14355
	push.32     %r14356
	call.32     %r14357 <- lua_type
	load.32     %r14358 <- 0[t]
	setne.32    %r14359 <- %r14357, %r14358
	cbr         %r14359, .L3186, .L3187

.L3186:
	load.64*    %r14360 <- 0[L]
	load.32     %r14361 <- 0[narg]
	load.32     %r14362 <- 0[t]
	push.64*    %r14360
	push.32     %r14361
	push.32     %r14362
	call        tag_error
	br          .L3187

.L3187:
	ret


luaL_checkany:
.L3188:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14363 <- 0[L]
	load.32     %r14364 <- 0[narg]
	push.64*    %r14363
	push.32     %r14364
	call.32     %r14365 <- lua_type
	seteq.32    %r14366 <- %r14365, $0xffffffff
	cbr         %r14366, .L3189, .L3190

.L3189:
	load.64*    %r14367 <- 0[L]
	load.32     %r14368 <- 0[narg]
	symaddr.64* %r14369 <- <anon symbol:0x1dc9ce0>
	push.64*    %r14367
	push.32     %r14368
	push.64*    %r14369
	call.32     %r14370 <- luaL_argerror
	br          .L3190

.L3190:
	ret


luaL_checklstring:
.L3191:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[len]
	load.64*    %r14371 <- 0[L]
	load.32     %r14372 <- 0[narg]
	load.64*    %r14373 <- 0[len]
	push.64*    %r14371
	push.32     %r14372
	push.64*    %r14373
	call.64*    %r14374 <- lua_tolstring
	store.64*   %r14374 -> 0[s]
	load.64*    %r14375 <- 0[s]
	cbr         %r14375, .L3193, .L3192

.L3192:
	load.64*    %r14376 <- 0[L]
	load.32     %r14377 <- 0[narg]
	push.64*    %r14376
	push.32     %r14377
	push.32     $4
	call        tag_error
	br          .L3193

.L3193:
	load.64*    %r14378 <- 0[s]
	phisrc.64*  %phi593(return) <- %r14378
	br          .L3194

.L3194:
	phi.64*     %r14379 <- %phi593(return)
	ret.64*     %r14378


luaL_optlstring:
.L3195:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[def]
	store.64*   %arg4 -> 0[len]
	load.64*    %r14380 <- 0[L]
	load.32     %r14381 <- 0[narg]
	push.64*    %r14380
	push.32     %r14381
	call.32     %r14382 <- lua_type
	setle.32    %r14383 <- %r14382, $0
	cbr         %r14383, .L3196, .L3197

.L3196:
	load.64*    %r14384 <- 0[len]
	cbr         %r14384, .L3198, .L3199

.L3198:
	load.64*    %r14385 <- 0[def]
	push.64*    %r14385
	call.64     %r14386 <- strlen
	load.64*    %r14387 <- 0[def]
	select.64   %r14388 <- %r14387, %r14386, $0
	load.64*    %r14389 <- 0[len]
	store.64    %r14388 -> 0[%r14389]
	br          .L3199

.L3199:
	load.64*    %r14390 <- 0[def]
	phisrc.64*  %phi594(return) <- %r14390
	br          .L3200

.L3197:
	load.64*    %r14392 <- 0[L]
	load.32     %r14393 <- 0[narg]
	load.64*    %r14394 <- 0[len]
	push.64*    %r14392
	push.32     %r14393
	push.64*    %r14394
	call.64*    %r14395 <- luaL_checklstring
	phisrc.64*  %phi595(return) <- %r14395
	br          .L3200

.L3200:
	phi.64*     %r14391 <- %phi594(return), %phi595(return)
	ret.64*     %r14391


luaL_checknumber:
.L3202:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14396 <- 0[L]
	load.32     %r14397 <- 0[narg]
	push.64*    %r14396
	push.32     %r14397
	call.f64    %r14398 <- lua_tonumber
	store.f64   %r14398 -> 0[d]
	load.f64    %r14399 <- 0[d]
	set.f64     %r14400 <- 0.000000
	seteq.32    %r14401 <- %r14399, %r14400
	cbr         %r14401, .L3205, .L3204

.L3205:
	load.64*    %r14402 <- 0[L]
	load.32     %r14403 <- 0[narg]
	push.64*    %r14402
	push.32     %r14403
	call.32     %r14404 <- lua_isnumber
	cbr         %r14404, .L3204, .L3203

.L3203:
	load.64*    %r14405 <- 0[L]
	load.32     %r14406 <- 0[narg]
	push.64*    %r14405
	push.32     %r14406
	push.32     $3
	call        tag_error
	br          .L3204

.L3204:
	load.f64    %r14407 <- 0[d]
	phisrc.f64  %phi596(return) <- %r14407
	br          .L3206

.L3206:
	phi.f64     %r14408 <- %phi596(return)
	ret.f64     %r14407


luaL_checkinteger:
.L3207:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14409 <- 0[L]
	load.32     %r14410 <- 0[narg]
	push.64*    %r14409
	push.32     %r14410
	call.64     %r14411 <- lua_tointeger
	store.64    %r14411 -> 0[d]
	load.64     %r14412 <- 0[d]
	seteq.32    %r14413 <- %r14412, $0
	cbr         %r14413, .L3210, .L3209

.L3210:
	load.64*    %r14414 <- 0[L]
	load.32     %r14415 <- 0[narg]
	push.64*    %r14414
	push.32     %r14415
	call.32     %r14416 <- lua_isnumber
	cbr         %r14416, .L3209, .L3208

.L3208:
	load.64*    %r14417 <- 0[L]
	load.32     %r14418 <- 0[narg]
	push.64*    %r14417
	push.32     %r14418
	push.32     $3
	call        tag_error
	br          .L3209

.L3209:
	load.64     %r14419 <- 0[d]
	phisrc.64   %phi597(return) <- %r14419
	br          .L3211

.L3211:
	phi.64      %r14420 <- %phi597(return)
	ret.64      %r14419


luaL_optinteger:
.L3212:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64    %arg3 -> 0[def]
	load.64*    %r14421 <- 0[L]
	load.32     %r14422 <- 0[narg]
	push.64*    %r14421
	push.32     %r14422
	call.32     %r14423 <- lua_type
	setle.32    %r14424 <- %r14423, $0
	cbr         %r14424, .L3214, .L3215

.L3214:
	load.64     %r14425 <- 0[def]
	phisrc.64   %phi598 <- %r14425
	br          .L3216

.L3215:
	load.64*    %r14426 <- 0[L]
	load.32     %r14427 <- 0[narg]
	push.64*    %r14426
	push.32     %r14427
	call.64     %r14428 <- luaL_checkinteger
	phisrc.64   %phi599 <- %r14428
	br          .L3216

.L3216:
	phi.64      %r14429 <- %phi598, %phi599
	phisrc.64   %phi600(return) <- %r14429
	br          .L3213

.L3213:
	phi.64      %r14430 <- %phi600(return)
	ret.64      %r14429


luaL_getmetafield:
.L3217:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[obj]
	store.64*   %arg3 -> 0[event]
	load.64*    %r14431 <- 0[L]
	load.32     %r14432 <- 0[obj]
	push.64*    %r14431
	push.32     %r14432
	call.32     %r14433 <- lua_getmetatable
	cbr         %r14433, .L3219, .L3218

.L3218:
	phisrc.32   %phi601(return) <- $0
	br          .L3220

.L3219:
	load.64*    %r14435 <- 0[L]
	load.64*    %r14436 <- 0[event]
	push.64*    %r14435
	push.64*    %r14436
	call        lua_pushstring
	load.64*    %r14437 <- 0[L]
	push.64*    %r14437
	push.32     $0xfffffffe
	call        lua_rawget
	load.64*    %r14438 <- 0[L]
	push.64*    %r14438
	push.32     $0xffffffff
	call.32     %r14439 <- lua_type
	seteq.32    %r14440 <- %r14439, $0
	cbr         %r14440, .L3221, .L3222

.L3221:
	load.64*    %r14441 <- 0[L]
	push.64*    %r14441
	push.32     $0xfffffffd
	call        lua_settop
	phisrc.32   %phi602(return) <- $0
	br          .L3220

.L3222:
	load.64*    %r14442 <- 0[L]
	push.64*    %r14442
	push.32     $0xfffffffe
	call        lua_remove
	phisrc.32   %phi603(return) <- $1
	br          .L3220

.L3220:
	phi.32      %r14434 <- %phi601(return), %phi602(return), %phi603(return)
	ret.32      %r14434


luaL_register:
.L3224:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[libname]
	store.64*   %arg3 -> 0[l]
	load.64*    %r14443 <- 0[L]
	load.64*    %r14444 <- 0[libname]
	load.64*    %r14445 <- 0[l]
	push.64*    %r14443
	push.64*    %r14444
	push.64*    %r14445
	push.32     $0
	call        luaI_openlib
	br          .L3225

.L3225:
	ret


libsize:
.L3226:
	<entry-point>
	store.64*   %arg1 -> 0[l]
	store.32    $0 -> 0[size]
	br          .L3230

.L3230:
	load.64*    %r14446 <- 0[l]
	load.64*    %r14447 <- 0[%r14446]
	cbr         %r14447, .L3227, .L3229

.L3227:
	load.32     %r14448 <- 0[size]
	add.32      %r14449 <- %r14448, $1
	store.32    %r14449 -> 0[size]
	br          .L3228

.L3228:
	load.64*    %r14450 <- 0[l]
	add.64*     %r14451 <- %r14450, $16
	store.64*   %r14451 -> 0[l]
	br          .L3230

.L3229:
	load.32     %r14452 <- 0[size]
	phisrc.32   %phi604(return) <- %r14452
	br          .L3231

.L3231:
	phi.32      %r14453 <- %phi604(return)
	ret.32      %r14452


luaI_openlib:
.L3232:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[libname]
	store.64*   %arg3 -> 0[l]
	store.32    %arg4 -> 0[nup]
	load.64*    %r14454 <- 0[libname]
	cbr         %r14454, .L3233, .L3234

.L3233:
	load.64*    %r14455 <- 0[l]
	push.64*    %r14455
	call.32     %r14456 <- libsize
	store.32    %r14456 -> 0[size]
	load.64*    %r14457 <- 0[L]
	symaddr.64* %r14458 <- <anon symbol:0x1dc4fd8>
	push.64*    %r14457
	push.32     $0xffffd8f0
	push.64*    %r14458
	push.32     $1
	call.64*    %r14459 <- luaL_findtable
	load.64*    %r14460 <- 0[L]
	load.64*    %r14461 <- 0[libname]
	push.64*    %r14460
	push.32     $0xffffffff
	push.64*    %r14461
	call        lua_getfield
	load.64*    %r14462 <- 0[L]
	push.64*    %r14462
	push.32     $0xffffffff
	call.32     %r14463 <- lua_type
	seteq.32    %r14464 <- %r14463, $5
	cbr         %r14464, .L3236, .L3235

.L3235:
	load.64*    %r14465 <- 0[L]
	push.64*    %r14465
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14466 <- 0[L]
	load.64*    %r14467 <- 0[libname]
	load.32     %r14468 <- 0[size]
	push.64*    %r14466
	push.32     $0xffffd8ee
	push.64*    %r14467
	push.32     %r14468
	call.64*    %r14469 <- luaL_findtable
	setne.32    %r14470 <- %r14469, $0
	cbr         %r14470, .L3237, .L3238

.L3237:
	load.64*    %r14471 <- 0[L]
	symaddr.64* %r14472 <- <anon symbol:0x1dc5378>
	load.64*    %r14473 <- 0[libname]
	push.64*    %r14471
	push.64*    %r14472
	push.64*    %r14473
	call.32     %r14474 <- luaL_error
	br          .L3238

.L3238:
	load.64*    %r14475 <- 0[L]
	push.64*    %r14475
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r14476 <- 0[L]
	load.64*    %r14477 <- 0[libname]
	push.64*    %r14476
	push.32     $0xfffffffd
	push.64*    %r14477
	call        lua_setfield
	br          .L3236

.L3236:
	load.64*    %r14478 <- 0[L]
	push.64*    %r14478
	push.32     $0xfffffffe
	call        lua_remove
	load.64*    %r14479 <- 0[L]
	load.32     %r14480 <- 0[nup]
	add.32      %r14481 <- %r14480, $1
	neg.32      %r14482 <- %r14481
	push.64*    %r14479
	push.32     %r14482
	call        lua_insert
	br          .L3234

.L3234:
	br          .L3242

.L3242:
	load.64*    %r14483 <- 0[l]
	load.64*    %r14484 <- 0[%r14483]
	cbr         %r14484, .L3239, .L3241

.L3239:
	store.32    $0 -> 0[i]
	br          .L3246

.L3246:
	load.32     %r14485 <- 0[i]
	load.32     %r14486 <- 0[nup]
	setlt.32    %r14487 <- %r14485, %r14486
	cbr         %r14487, .L3243, .L3245

.L3243:
	load.64*    %r14488 <- 0[L]
	load.32     %r14489 <- 0[nup]
	neg.32      %r14490 <- %r14489
	push.64*    %r14488
	push.32     %r14490
	call        lua_pushvalue
	br          .L3244

.L3244:
	load.32     %r14491 <- 0[i]
	add.32      %r14492 <- %r14491, $1
	store.32    %r14492 -> 0[i]
	br          .L3246

.L3245:
	load.64*    %r14493 <- 0[L]
	load.64*    %r14494 <- 0[l]
	load.64*    %r14495 <- 8[%r14494]
	load.32     %r14496 <- 0[nup]
	push.64*    %r14493
	push.64*    %r14495
	push.32     %r14496
	call        lua_pushcclosure
	load.64*    %r14497 <- 0[L]
	load.32     %r14498 <- 0[nup]
	add.32      %r14499 <- %r14498, $2
	neg.32      %r14500 <- %r14499
	load.64*    %r14501 <- 0[l]
	load.64*    %r14502 <- 0[%r14501]
	push.64*    %r14497
	push.32     %r14500
	push.64*    %r14502
	call        lua_setfield
	br          .L3240

.L3240:
	load.64*    %r14503 <- 0[l]
	add.64*     %r14504 <- %r14503, $16
	store.64*   %r14504 -> 0[l]
	br          .L3242

.L3241:
	load.64*    %r14505 <- 0[L]
	load.32     %r14506 <- 0[nup]
	neg.32      %r14507 <- %r14506
	sub.32      %r14508 <- %r14507, $1
	push.64*    %r14505
	push.32     %r14508
	call        lua_settop
	br          .L3247

.L3247:
	ret


luaL_findtable:
.L3248:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[fname]
	store.32    %arg4 -> 0[szhint]
	load.64*    %r14509 <- 0[L]
	load.32     %r14510 <- 0[idx]
	push.64*    %r14509
	push.32     %r14510
	call        lua_pushvalue
	br          .L3249

.L3249:
	load.64*    %r14511 <- 0[fname]
	push.64*    %r14511
	push.32     $46
	call.64*    %r14512 <- strchr
	store.64*   %r14512 -> 0[e]
	load.64*    %r14513 <- 0[e]
	seteq.32    %r14514 <- %r14513, $0
	cbr         %r14514, .L3252, .L3253

.L3252:
	load.64*    %r14515 <- 0[fname]
	load.64*    %r14516 <- 0[fname]
	push.64*    %r14516
	call.64     %r14517 <- strlen
	add.64*     %r14518 <- %r14515, %r14517
	store.64*   %r14518 -> 0[e]
	br          .L3253

.L3253:
	load.64*    %r14519 <- 0[L]
	load.64*    %r14520 <- 0[fname]
	load.64*    %r14521 <- 0[e]
	load.64*    %r14522 <- 0[fname]
	sub.64      %r14523 <- %r14521, %r14522
	scast.64    %r14524 <- (64) %r14523
	push.64*    %r14519
	push.64*    %r14520
	push.64     %r14524
	call        lua_pushlstring
	load.64*    %r14525 <- 0[L]
	push.64*    %r14525
	push.32     $0xfffffffe
	call        lua_rawget
	load.64*    %r14526 <- 0[L]
	push.64*    %r14526
	push.32     $0xffffffff
	call.32     %r14527 <- lua_type
	seteq.32    %r14528 <- %r14527, $0
	cbr         %r14528, .L3254, .L3255

.L3254:
	load.64*    %r14529 <- 0[L]
	push.64*    %r14529
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14530 <- 0[L]
	load.32     %r14531 <- 0[szhint]
	load.64*    %r14532 <- 0[e]
	load.8      %r14533 <- 0[%r14532]
	scast.32    %r14534 <- (8) %r14533
	seteq.32    %r14535 <- %r14534, $46
	select.32   %r14536 <- %r14535, $1, %r14531
	push.64*    %r14530
	push.32     $0
	push.32     %r14536
	call        lua_createtable
	load.64*    %r14537 <- 0[L]
	load.64*    %r14538 <- 0[fname]
	load.64*    %r14539 <- 0[e]
	load.64*    %r14540 <- 0[fname]
	sub.64      %r14541 <- %r14539, %r14540
	scast.64    %r14542 <- (64) %r14541
	push.64*    %r14537
	push.64*    %r14538
	push.64     %r14542
	call        lua_pushlstring
	load.64*    %r14543 <- 0[L]
	push.64*    %r14543
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r14544 <- 0[L]
	push.64*    %r14544
	push.32     $0xfffffffc
	call        lua_settable
	br          .L3256

.L3255:
	load.64*    %r14545 <- 0[L]
	push.64*    %r14545
	push.32     $0xffffffff
	call.32     %r14546 <- lua_type
	seteq.32    %r14547 <- %r14546, $5
	cbr         %r14547, .L3258, .L3257

.L3257:
	load.64*    %r14548 <- 0[L]
	push.64*    %r14548
	push.32     $0xfffffffd
	call        lua_settop
	load.64*    %r14549 <- 0[fname]
	phisrc.64*  %phi605(return) <- %r14549
	br          .L3259

.L3258:
	br          .L3256

.L3256:
	load.64*    %r14551 <- 0[L]
	push.64*    %r14551
	push.32     $0xfffffffe
	call        lua_remove
	load.64*    %r14552 <- 0[e]
	add.64*     %r14553 <- %r14552, $1
	store.64*   %r14553 -> 0[fname]
	br          .L3250

.L3250:
	load.64*    %r14554 <- 0[e]
	load.8      %r14555 <- 0[%r14554]
	scast.32    %r14556 <- (8) %r14555
	seteq.32    %r14557 <- %r14556, $46
	cbr         %r14557, .L3249, .L3251

.L3251:
	phisrc.64*  %phi606(return) <- $0
	br          .L3259

.L3259:
	phi.64*     %r14550 <- %phi605(return), %phi606(return)
	ret.64*     %r14550


emptybuffer:
.L3260:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14558 <- 0[B]
	load.64*    %r14559 <- 0[%r14558]
	load.64*    %r14560 <- 0[B]
	add.64*     %r14561 <- %r14560, $24
	sub.64      %r14562 <- %r14559, %r14561
	scast.64    %r14563 <- (64) %r14562
	store.64    %r14563 -> 0[l]
	load.64     %r14564 <- 0[l]
	seteq.32    %r14565 <- %r14564, $0
	cbr         %r14565, .L3261, .L3262

.L3261:
	phisrc.32   %phi607(return) <- $0
	br          .L3263

.L3262:
	load.64*    %r14567 <- 0[B]
	load.64*    %r14568 <- 16[%r14567]
	load.64*    %r14569 <- 0[B]
	add.64*     %r14570 <- %r14569, $24
	load.64     %r14571 <- 0[l]
	push.64*    %r14568
	push.64*    %r14570
	push.64     %r14571
	call        lua_pushlstring
	load.64*    %r14572 <- 0[B]
	add.64*     %r14573 <- %r14572, $24
	load.64*    %r14574 <- 0[B]
	store.64*   %r14573 -> 0[%r14574]
	load.64*    %r14575 <- 0[B]
	load.32     %r14576 <- 8[%r14575]
	add.32      %r14577 <- %r14576, $1
	store.32    %r14577 -> 8[%r14575]
	phisrc.32   %phi608(return) <- $1
	br          .L3263

.L3263:
	phi.32      %r14566 <- %phi607(return), %phi608(return)
	ret.32      %r14566


adjuststack:
.L3265:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14578 <- 0[B]
	load.32     %r14579 <- 8[%r14578]
	setgt.32    %r14580 <- %r14579, $1
	cbr         %r14580, .L3266, .L3267

.L3266:
	load.64*    %r14581 <- 0[B]
	load.64*    %r14582 <- 16[%r14581]
	store.64*   %r14582 -> 0[L]
	store.32    $1 -> 0[toget]
	load.64*    %r14583 <- 0[L]
	push.64*    %r14583
	push.32     $0xffffffff
	call.64     %r14584 <- lua_objlen
	store.64    %r14584 -> 0[toplen]
	br          .L3268

.L3268:
	load.64*    %r14585 <- 0[L]
	load.32     %r14586 <- 0[toget]
	add.32      %r14587 <- %r14586, $1
	neg.32      %r14588 <- %r14587
	push.64*    %r14585
	push.32     %r14588
	call.64     %r14589 <- lua_objlen
	store.64    %r14589 -> 0[l]
	load.64*    %r14590 <- 0[B]
	load.32     %r14591 <- 8[%r14590]
	load.32     %r14592 <- 0[toget]
	sub.32      %r14593 <- %r14591, %r14592
	add.32      %r14594 <- %r14593, $1
	setge.32    %r14595 <- %r14594, $10
	setne.1     %r14596 <- %r14595, $0
	load.64     %r14597 <- 0[toplen]
	load.64     %r14598 <- 0[l]
	seta.32     %r14599 <- %r14597, %r14598
	setne.1     %r14600 <- %r14599, $0
	or-bool.1   %r14601 <- %r14596, %r14600
	cast.32     %r14602 <- (1) %r14601
	cbr         %r14602, .L3271, .L3272

.L3271:
	load.64     %r14603 <- 0[l]
	load.64     %r14604 <- 0[toplen]
	cast.64     %r14605 <- (64) %r14604
	add.64      %r14606 <- %r14605, %r14603
	cast.64     %r14607 <- (64) %r14606
	store.64    %r14607 -> 0[toplen]
	load.32     %r14608 <- 0[toget]
	add.32      %r14609 <- %r14608, $1
	store.32    %r14609 -> 0[toget]
	br          .L3273

.L3272:
	br          .L3270

.L3273:
	br          .L3269

.L3269:
	load.32     %r14610 <- 0[toget]
	load.64*    %r14611 <- 0[B]
	load.32     %r14612 <- 8[%r14611]
	setlt.32    %r14613 <- %r14610, %r14612
	cbr         %r14613, .L3268, .L3270

.L3270:
	load.64*    %r14614 <- 0[L]
	load.32     %r14615 <- 0[toget]
	push.64*    %r14614
	push.32     %r14615
	call        lua_concat
	load.64*    %r14616 <- 0[B]
	load.32     %r14617 <- 8[%r14616]
	load.32     %r14618 <- 0[toget]
	sub.32      %r14619 <- %r14617, %r14618
	add.32      %r14620 <- %r14619, $1
	load.64*    %r14621 <- 0[B]
	store.32    %r14620 -> 8[%r14621]
	br          .L3267

.L3267:
	ret


luaL_prepbuffer:
.L3274:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14622 <- 0[B]
	push.64*    %r14622
	call.32     %r14623 <- emptybuffer
	cbr         %r14623, .L3275, .L3276

.L3275:
	load.64*    %r14624 <- 0[B]
	push.64*    %r14624
	call        adjuststack
	br          .L3276

.L3276:
	load.64*    %r14625 <- 0[B]
	add.64*     %r14626 <- %r14625, $24
	phisrc.64*  %phi609(return) <- %r14626
	br          .L3277

.L3277:
	phi.64*     %r14627 <- %phi609(return)
	ret.64*     %r14626


luaL_addlstring:
.L3278:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	store.64*   %arg2 -> 0[s]
	store.64    %arg3 -> 0[l]
	br          .L3282

.L3282:
	load.64     %r14628 <- 0[l]
	sub.64      %r14629 <- %r14628, $1
	store.64    %r14629 -> 0[l]
	cbr         %r14628, .L3279, .L3281

.L3279:
	load.64*    %r14630 <- 0[B]
	load.64*    %r14631 <- 0[%r14630]
	load.64*    %r14632 <- 0[B]
	add.64*     %r14633 <- %r14632, $24
	add.64*     %r14634 <- %r14633, $0x2000
	setb.32     %r14635 <- %r14631, %r14634
	cbr         %r14635, .L3283, .L3284

.L3283:
	phisrc.32   %phi610 <- $1
	br          .L3285

.L3284:
	load.64*    %r14636 <- 0[B]
	push.64*    %r14636
	call.64*    %r14637 <- luaL_prepbuffer
	phisrc.32   %phi611 <- %r14637
	br          .L3285

.L3285:
	phi.32      %r14638 <- %phi610, %phi611
	load.64*    %r14639 <- 0[s]
	add.64*     %r14640 <- %r14639, $1
	store.64*   %r14640 -> 0[s]
	load.8      %r14641 <- 0[%r14639]
	scast.8     %r14642 <- (8) %r14641
	load.64*    %r14643 <- 0[B]
	load.64*    %r14644 <- 0[%r14643]
	add.64*     %r14645 <- %r14644, $1
	store.64*   %r14645 -> 0[%r14643]
	store.8     %r14642 -> 0[%r14644]
	br          .L3280

.L3280:
	br          .L3282

.L3281:
	ret


luaL_pushresult:
.L3286:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14646 <- 0[B]
	push.64*    %r14646
	call.32     %r14647 <- emptybuffer
	load.64*    %r14648 <- 0[B]
	load.64*    %r14649 <- 16[%r14648]
	load.64*    %r14650 <- 0[B]
	load.32     %r14651 <- 8[%r14650]
	push.64*    %r14649
	push.32     %r14651
	call        lua_concat
	load.64*    %r14652 <- 0[B]
	store.32    $1 -> 8[%r14652]
	br          .L3287

.L3287:
	ret


luaL_addvalue:
.L3288:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14653 <- 0[B]
	load.64*    %r14654 <- 16[%r14653]
	store.64*   %r14654 -> 0[L]
	load.64*    %r14655 <- 0[L]
	symaddr.64* %r14656 <- vl
	push.64*    %r14655
	push.32     $0xffffffff
	push.64*    %r14656
	call.64*    %r14657 <- lua_tolstring
	store.64*   %r14657 -> 0[s]
	load.64     %r14658 <- 0[vl]
	load.64*    %r14659 <- 0[B]
	load.64*    %r14660 <- 0[%r14659]
	load.64*    %r14661 <- 0[B]
	add.64*     %r14662 <- %r14661, $24
	sub.64      %r14663 <- %r14660, %r14662
	sub.64      %r14664 <- $0x2000, %r14663
	scast.64    %r14665 <- (64) %r14664
	setbe.32    %r14666 <- %r14658, %r14665
	cbr         %r14666, .L3289, .L3290

.L3289:
	load.64*    %r14667 <- 0[B]
	load.64*    %r14668 <- 0[%r14667]
	cast.64*    %r14669 <- (64) %r14668
	load.64*    %r14670 <- 0[s]
	cast.64*    %r14671 <- (64) %r14670
	load.64     %r14672 <- 0[vl]
	push.64*    %r14669
	push.64*    %r14671
	push.64     %r14672
	call.64*    %r14673 <- memcpy
	load.64     %r14674 <- 0[vl]
	load.64*    %r14675 <- 0[B]
	load.64*    %r14676 <- 0[%r14675]
	cast.64     %r14677 <- (64) %r14676
	add.64      %r14678 <- %r14677, %r14674
	ptrcast.64* %r14679 <- (64) %r14678
	store.64*   %r14679 -> 0[%r14675]
	load.64*    %r14680 <- 0[L]
	push.64*    %r14680
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3291

.L3290:
	load.64*    %r14681 <- 0[B]
	push.64*    %r14681
	call.32     %r14682 <- emptybuffer
	cbr         %r14682, .L3292, .L3293

.L3292:
	load.64*    %r14683 <- 0[L]
	push.64*    %r14683
	push.32     $0xfffffffe
	call        lua_insert
	br          .L3293

.L3293:
	load.64*    %r14684 <- 0[B]
	load.32     %r14685 <- 8[%r14684]
	add.32      %r14686 <- %r14685, $1
	store.32    %r14686 -> 8[%r14684]
	load.64*    %r14687 <- 0[B]
	push.64*    %r14687
	call        adjuststack
	br          .L3291

.L3291:
	ret


luaL_buffinit:
.L3294:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[B]
	load.64*    %r14688 <- 0[L]
	load.64*    %r14689 <- 0[B]
	store.64*   %r14688 -> 16[%r14689]
	load.64*    %r14690 <- 0[B]
	add.64*     %r14691 <- %r14690, $24
	load.64*    %r14692 <- 0[B]
	store.64*   %r14691 -> 0[%r14692]
	load.64*    %r14693 <- 0[B]
	store.32    $0 -> 8[%r14693]
	br          .L3295

.L3295:
	ret


getF:
.L3296:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[size]
	load.64*    %r14694 <- 0[ud]
	ptrcast.64* %r14695 <- (64) %r14694
	store.64*   %r14695 -> 0[lf]
	load.64*    %r14696 <- 0[L]
	load.64*    %r14697 <- 0[lf]
	load.32     %r14698 <- 0[%r14697]
	cbr         %r14698, .L3297, .L3298

.L3297:
	load.64*    %r14699 <- 0[lf]
	store.32    $0 -> 0[%r14699]
	load.64*    %r14700 <- 0[size]
	store.64    $1 -> 0[%r14700]
	symaddr.64* %r14701 <- <anon symbol:0x1dd6a40>
	phisrc.64*  %phi612(return) <- %r14701
	br          .L3299

.L3298:
	load.64*    %r14703 <- 0[lf]
	load.64*    %r14704 <- 8[%r14703]
	push.64*    %r14704
	call.32     %r14705 <- feof
	cbr         %r14705, .L3300, .L3301

.L3300:
	phisrc.64*  %phi613(return) <- $0
	br          .L3299

.L3301:
	load.64*    %r14706 <- 0[lf]
	add.64*     %r14707 <- %r14706, $16
	cast.64*    %r14708 <- (64) %r14707
	load.64*    %r14709 <- 0[lf]
	load.64*    %r14710 <- 8[%r14709]
	push.64*    %r14708
	push.64     $1
	push.64     $0x2000
	push.64*    %r14710
	call.64     %r14711 <- fread
	load.64*    %r14712 <- 0[size]
	store.64    %r14711 -> 0[%r14712]
	load.64*    %r14713 <- 0[lf]
	add.64*     %r14714 <- %r14713, $16
	load.64*    %r14715 <- 0[size]
	load.64     %r14716 <- 0[%r14715]
	seta.32     %r14717 <- %r14716, $0
	select.64*  %r14718 <- %r14717, %r14714, $0
	phisrc.64*  %phi614(return) <- %r14718
	br          .L3299

.L3299:
	phi.64*     %r14702 <- %phi612(return), %phi613(return), %phi614(return)
	ret.64*     %r14702


errfile:
.L3302:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.32    %arg3 -> 0[fnameindex]
	call.64*    %r14719 <- __errno_location
	load.32     %r14720 <- 0[%r14719]
	push.32     %r14720
	call.64*    %r14721 <- strerror
	store.64*   %r14721 -> 0[serr]
	load.64*    %r14722 <- 0[L]
	load.32     %r14723 <- 0[fnameindex]
	push.64*    %r14722
	push.32     %r14723
	push.64*    $0
	call.64*    %r14724 <- lua_tolstring
	add.64*     %r14725 <- %r14724, $1
	store.64*   %r14725 -> 0[filename]
	load.64*    %r14726 <- 0[L]
	symaddr.64* %r14727 <- <anon symbol:0x1dd7d48>
	load.64*    %r14728 <- 0[what]
	load.64*    %r14729 <- 0[filename]
	load.64*    %r14730 <- 0[serr]
	push.64*    %r14726
	push.64*    %r14727
	push.64*    %r14728
	push.64*    %r14729
	push.64*    %r14730
	call.64*    %r14731 <- lua_pushfstring
	load.64*    %r14732 <- 0[L]
	load.32     %r14733 <- 0[fnameindex]
	push.64*    %r14732
	push.32     %r14733
	call        lua_remove
	phisrc.32   %phi615(return) <- $6
	br          .L3303

.L3303:
	phi.32      %r14734 <- %phi615(return)
	ret.32      $6


luaL_loadfile:
.L3304:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[filename]
	load.64*    %r14735 <- 0[L]
	push.64*    %r14735
	call.32     %r14736 <- lua_gettop
	add.32      %r14737 <- %r14736, $1
	store.32    %r14737 -> 0[fnameindex]
	store.32    $0 -> 0[lf]
	load.64*    %r14738 <- 0[filename]
	seteq.32    %r14739 <- %r14738, $0
	cbr         %r14739, .L3305, .L3306

.L3305:
	load.64*    %r14740 <- 0[L]
	symaddr.64* %r14741 <- <anon symbol:0x1dd81d0>
	push.64*    %r14740
	push.64*    %r14741
	push.64     $6
	call        lua_pushlstring
	load.64*    %r14742 <- 0[stdin]
	store.64*   %r14742 -> 8[lf]
	br          .L3307

.L3306:
	load.64*    %r14743 <- 0[L]
	symaddr.64* %r14744 <- <anon symbol:0x1dd8828>
	load.64*    %r14745 <- 0[filename]
	push.64*    %r14743
	push.64*    %r14744
	push.64*    %r14745
	call.64*    %r14746 <- lua_pushfstring
	load.64*    %r14747 <- 0[filename]
	symaddr.64* %r14748 <- <anon symbol:0x1dd8cb0>
	push.64*    %r14747
	push.64*    %r14748
	call.64*    %r14749 <- fopen
	store.64*   %r14749 -> 8[lf]
	load.64*    %r14750 <- 8[lf]
	seteq.32    %r14751 <- %r14750, $0
	cbr         %r14751, .L3308, .L3309

.L3308:
	load.64*    %r14752 <- 0[L]
	symaddr.64* %r14753 <- <anon symbol:0x1dd9138>
	load.32     %r14754 <- 0[fnameindex]
	push.64*    %r14752
	push.64*    %r14753
	push.32     %r14754
	call.32     %r14755 <- errfile
	phisrc.32   %phi616(return) <- %r14755
	br          .L3310

.L3309:
	br          .L3307

.L3307:
	load.64*    %r14757 <- 8[lf]
	push.64*    %r14757
	call.32     %r14758 <- _IO_getc
	store.32    %r14758 -> 0[c]
	load.32     %r14759 <- 0[c]
	seteq.32    %r14760 <- %r14759, $35
	cbr         %r14760, .L3311, .L3312

.L3311:
	store.32    $1 -> 0[lf]
	br          .L3316

.L3316:
	load.64*    %r14761 <- 8[lf]
	push.64*    %r14761
	call.32     %r14762 <- _IO_getc
	store.32    %r14762 -> 0[c]
	setne.32    %r14763 <- %r14762, $0xffffffff
	setne.1     %r14764 <- %r14763, $0
	load.32     %r14765 <- 0[c]
	setne.32    %r14766 <- %r14765, $10
	setne.1     %r14767 <- %r14766, $0
	and-bool.1  %r14768 <- %r14764, %r14767
	cast.32     %r14769 <- (1) %r14768
	cbr         %r14769, .L3313, .L3315

.L3313:
	br          .L3314

.L3314:
	br          .L3316

.L3315:
	load.32     %r14770 <- 0[c]
	seteq.32    %r14771 <- %r14770, $10
	cbr         %r14771, .L3317, .L3318

.L3317:
	load.64*    %r14772 <- 8[lf]
	push.64*    %r14772
	call.32     %r14773 <- _IO_getc
	store.32    %r14773 -> 0[c]
	br          .L3318

.L3318:
	br          .L3312

.L3312:
	load.32     %r14774 <- 0[c]
	load.8      %r14775 <- 0["\33Lua"]
	scast.32    %r14776 <- (8) %r14775
	seteq.32    %r14777 <- %r14774, %r14776
	setne.1     %r14778 <- %r14777, $0
	load.64*    %r14779 <- 0[filename]
	setne.1     %r14780 <- %r14779, $0
	and-bool.1  %r14781 <- %r14778, %r14780
	cast.32     %r14782 <- (1) %r14781
	cbr         %r14782, .L3319, .L3320

.L3319:
	load.64*    %r14783 <- 0[filename]
	symaddr.64* %r14784 <- <anon symbol:0x1dd9de8>
	load.64*    %r14785 <- 8[lf]
	push.64*    %r14783
	push.64*    %r14784
	push.64*    %r14785
	call.64*    %r14786 <- freopen
	store.64*   %r14786 -> 8[lf]
	load.64*    %r14787 <- 8[lf]
	seteq.32    %r14788 <- %r14787, $0
	cbr         %r14788, .L3321, .L3322

.L3321:
	load.64*    %r14789 <- 0[L]
	symaddr.64* %r14790 <- <anon symbol:0x1dda358>
	load.32     %r14791 <- 0[fnameindex]
	push.64*    %r14789
	push.64*    %r14790
	push.32     %r14791
	call.32     %r14792 <- errfile
	phisrc.32   %phi617(return) <- %r14792
	br          .L3310

.L3322:
	br          .L3326

.L3326:
	load.64*    %r14793 <- 8[lf]
	push.64*    %r14793
	call.32     %r14794 <- _IO_getc
	store.32    %r14794 -> 0[c]
	setne.32    %r14795 <- %r14794, $0xffffffff
	setne.1     %r14796 <- %r14795, $0
	load.32     %r14797 <- 0[c]
	load.8      %r14798 <- 0["\33Lua"]
	scast.32    %r14799 <- (8) %r14798
	setne.32    %r14800 <- %r14797, %r14799
	setne.1     %r14801 <- %r14800, $0
	and-bool.1  %r14802 <- %r14796, %r14801
	cast.32     %r14803 <- (1) %r14802
	cbr         %r14803, .L3323, .L3325

.L3323:
	br          .L3324

.L3324:
	br          .L3326

.L3325:
	store.32    $0 -> 0[lf]
	br          .L3320

.L3320:
	load.32     %r14804 <- 0[c]
	load.64*    %r14805 <- 8[lf]
	push.32     %r14804
	push.64*    %r14805
	call.32     %r14806 <- ungetc
	load.64*    %r14807 <- 0[L]
	symaddr.64* %r14808 <- getF
	symaddr.64* %r14809 <- lf
	cast.64*    %r14810 <- (64) %r14809
	load.64*    %r14811 <- 0[L]
	push.64*    %r14811
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r14812 <- lua_tolstring
	push.64*    %r14807
	push.64*    %r14808
	push.64*    %r14810
	push.64*    %r14812
	call.32     %r14813 <- lua_load
	store.32    %r14813 -> 0[status]
	load.64*    %r14814 <- 8[lf]
	push.64*    %r14814
	call.32     %r14815 <- ferror
	store.32    %r14815 -> 0[readstatus]
	load.64*    %r14816 <- 0[filename]
	cbr         %r14816, .L3327, .L3328

.L3327:
	load.64*    %r14817 <- 8[lf]
	push.64*    %r14817
	call.32     %r14818 <- fclose
	br          .L3328

.L3328:
	load.32     %r14819 <- 0[readstatus]
	cbr         %r14819, .L3329, .L3330

.L3329:
	load.64*    %r14820 <- 0[L]
	load.32     %r14821 <- 0[fnameindex]
	push.64*    %r14820
	push.32     %r14821
	call        lua_settop
	load.64*    %r14822 <- 0[L]
	symaddr.64* %r14823 <- <anon symbol:0x1ddb3a8>
	load.32     %r14824 <- 0[fnameindex]
	push.64*    %r14822
	push.64*    %r14823
	push.32     %r14824
	call.32     %r14825 <- errfile
	phisrc.32   %phi618(return) <- %r14825
	br          .L3310

.L3330:
	load.64*    %r14826 <- 0[L]
	load.32     %r14827 <- 0[fnameindex]
	push.64*    %r14826
	push.32     %r14827
	call        lua_remove
	load.32     %r14828 <- 0[status]
	phisrc.32   %phi619(return) <- %r14828
	br          .L3310

.L3310:
	phi.32      %r14756 <- %phi616(return), %phi617(return), %phi618(return), %phi619(return)
	ret.32      %r14756


getS:
.L3331:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[size]
	load.64*    %r14829 <- 0[ud]
	ptrcast.64* %r14830 <- (64) %r14829
	store.64*   %r14830 -> 0[ls]
	load.64*    %r14831 <- 0[L]
	load.64*    %r14832 <- 0[ls]
	load.64     %r14833 <- 8[%r14832]
	seteq.32    %r14834 <- %r14833, $0
	cbr         %r14834, .L3332, .L3333

.L3332:
	phisrc.64*  %phi620(return) <- $0
	br          .L3334

.L3333:
	load.64*    %r14836 <- 0[ls]
	load.64     %r14837 <- 8[%r14836]
	load.64*    %r14838 <- 0[size]
	store.64    %r14837 -> 0[%r14838]
	load.64*    %r14839 <- 0[ls]
	store.64    $0 -> 8[%r14839]
	load.64*    %r14840 <- 0[ls]
	load.64*    %r14841 <- 0[%r14840]
	phisrc.64*  %phi621(return) <- %r14841
	br          .L3334

.L3334:
	phi.64*     %r14835 <- %phi620(return), %phi621(return)
	ret.64*     %r14835


luaL_loadbuffer:
.L3335:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[buff]
	store.64    %arg3 -> 0[size]
	store.64*   %arg4 -> 0[name]
	load.64*    %r14842 <- 0[buff]
	store.64*   %r14842 -> 0[ls]
	load.64     %r14843 <- 0[size]
	store.64    %r14843 -> 8[ls]
	load.64*    %r14844 <- 0[L]
	symaddr.64* %r14845 <- getS
	symaddr.64* %r14846 <- ls
	cast.64*    %r14847 <- (64) %r14846
	load.64*    %r14848 <- 0[name]
	push.64*    %r14844
	push.64*    %r14845
	push.64*    %r14847
	push.64*    %r14848
	call.32     %r14849 <- lua_load
	phisrc.32   %phi622(return) <- %r14849
	br          .L3336

.L3336:
	phi.32      %r14850 <- %phi622(return)
	ret.32      %r14849


l_alloc:
.L3337:
	<entry-point>
	store.64*   %arg1 -> 0[ud]
	store.64*   %arg2 -> 0[ptr]
	store.64    %arg3 -> 0[osize]
	store.64    %arg4 -> 0[nsize]
	load.64*    %r14851 <- 0[ud]
	load.64     %r14852 <- 0[osize]
	load.64     %r14853 <- 0[nsize]
	seteq.32    %r14854 <- %r14853, $0
	cbr         %r14854, .L3338, .L3339

.L3338:
	load.64*    %r14855 <- 0[ptr]
	push.64*    %r14855
	call        free
	phisrc.64*  %phi623(return) <- $0
	br          .L3340

.L3339:
	load.64*    %r14857 <- 0[ptr]
	load.64     %r14858 <- 0[nsize]
	push.64*    %r14857
	push.64     %r14858
	call.64*    %r14859 <- realloc
	phisrc.64*  %phi624(return) <- %r14859
	br          .L3340

.L3340:
	phi.64*     %r14856 <- %phi623(return), %phi624(return)
	ret.64*     %r14856


panic:
.L3342:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14860 <- 0[L]
	load.64*    %r14861 <- 0[stderr]
	symaddr.64* %r14862 <- <anon symbol:0x1ddc228>
	load.64*    %r14863 <- 0[L]
	push.64*    %r14863
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r14864 <- lua_tolstring
	push.64*    %r14861
	push.64*    %r14862
	push.64*    %r14864
	call.32     %r14865 <- fprintf
	phisrc.32   %phi625(return) <- $0
	br          .L3343

.L3343:
	phi.32      %r14866 <- %phi625(return)
	ret.32      $0


luaL_newstate:
.L3344:
	<entry-point>
	symaddr.64* %r14867 <- l_alloc
	push.64*    %r14867
	push.64*    $0
	call.64*    %r14868 <- lua_newstate
	store.64*   %r14868 -> 0[L]
	load.64*    %r14869 <- 0[L]
	cbr         %r14869, .L3345, .L3346

.L3345:
	load.64*    %r14870 <- 0[L]
	symaddr.64* %r14871 <- panic
	push.64*    %r14870
	push.64*    %r14871
	call.64*    %r14872 <- lua_atpanic
	br          .L3346

.L3346:
	load.64*    %r14873 <- 0[L]
	phisrc.64*  %phi626(return) <- %r14873
	br          .L3347

.L3347:
	phi.64*     %r14874 <- %phi626(return)
	ret.64*     %r14873


luaB_tonumber:
.L3348:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14875 <- 0[L]
	push.64*    %r14875
	push.32     $2
	push.64     $10
	call.64     %r14876 <- luaL_optinteger
	scast.32    %r14877 <- (64) %r14876
	store.32    %r14877 -> 0[base]
	load.32     %r14878 <- 0[base]
	seteq.32    %r14879 <- %r14878, $10
	cbr         %r14879, .L3349, .L3350

.L3349:
	load.64*    %r14880 <- 0[L]
	push.64*    %r14880
	push.32     $1
	call        luaL_checkany
	load.64*    %r14881 <- 0[L]
	push.64*    %r14881
	push.32     $1
	call.32     %r14882 <- lua_isnumber
	cbr         %r14882, .L3351, .L3352

.L3351:
	load.64*    %r14883 <- 0[L]
	load.64*    %r14884 <- 0[L]
	push.64*    %r14884
	push.32     $1
	call.f64    %r14885 <- lua_tonumber
	push.64*    %r14883
	push.f64    %r14885
	call        lua_pushnumber
	phisrc.32   %phi627(return) <- $1
	br          .L3353

.L3352:
	br          .L3354

.L3350:
	load.64*    %r14887 <- 0[L]
	push.64*    %r14887
	push.32     $1
	push.64*    $0
	call.64*    %r14888 <- luaL_checklstring
	store.64*   %r14888 -> 0[s1]
	load.32     %r14889 <- 0[base]
	setle.32    %r14890 <- $2, %r14889
	setne.1     %r14891 <- %r14890, $0
	load.32     %r14892 <- 0[base]
	setle.32    %r14893 <- %r14892, $36
	setne.1     %r14894 <- %r14893, $0
	and-bool.1  %r14895 <- %r14891, %r14894
	cast.32     %r14896 <- (1) %r14895
	cbr         %r14896, .L3355, .L3356

.L3355:
	phisrc.32   %phi628 <- $1
	br          .L3357

.L3356:
	load.64*    %r14897 <- 0[L]
	symaddr.64* %r14898 <- <anon symbol:0x1de49c0>
	push.64*    %r14897
	push.32     $2
	push.64*    %r14898
	call.32     %r14899 <- luaL_argerror
	phisrc.32   %phi629 <- %r14899
	br          .L3357

.L3357:
	phi.32      %r14900 <- %phi628, %phi629
	load.64*    %r14901 <- 0[s1]
	symaddr.64* %r14902 <- s2
	load.32     %r14903 <- 0[base]
	push.64*    %r14901
	push.64*    %r14902
	push.32     %r14903
	call.64     %r14904 <- strtoul
	store.64    %r14904 -> 0[n]
	load.64*    %r14905 <- 0[s1]
	load.64*    %r14906 <- 0[s2]
	setne.32    %r14907 <- %r14905, %r14906
	cbr         %r14907, .L3358, .L3359

.L3358:
	br          .L3363

.L3363:
	call.64*    %r14908 <- __ctype_b_loc
	load.64*    %r14909 <- 0[%r14908]
	load.64*    %r14910 <- 0[s2]
	load.8      %r14911 <- 0[%r14910]
	scast.8     %r14912 <- (8) %r14911
	cast.32     %r14913 <- (8) %r14912
	scast.64    %r14914 <- (32) %r14913
	muls.64     %r14915 <- %r14914, $2
	add.64*     %r14916 <- %r14909, %r14915
	load.16     %r14917 <- 0[%r14916]
	cast.32     %r14918 <- (16) %r14917
	and.32      %r14919 <- %r14918, $0x2000
	cbr         %r14919, .L3360, .L3362

.L3360:
	load.64*    %r14920 <- 0[s2]
	add.64*     %r14921 <- %r14920, $1
	store.64*   %r14921 -> 0[s2]
	br          .L3361

.L3361:
	br          .L3363

.L3362:
	load.64*    %r14922 <- 0[s2]
	load.8      %r14923 <- 0[%r14922]
	scast.32    %r14924 <- (8) %r14923
	seteq.32    %r14925 <- %r14924, $0
	cbr         %r14925, .L3364, .L3365

.L3364:
	load.64*    %r14926 <- 0[L]
	load.64     %r14927 <- 0[n]
	fpcast.f64  %r14928 <- (64) %r14927
	push.64*    %r14926
	push.f64    %r14928
	call        lua_pushnumber
	phisrc.32   %phi630(return) <- $1
	br          .L3353

.L3365:
	br          .L3359

.L3359:
	br          .L3354

.L3354:
	load.64*    %r14929 <- 0[L]
	push.64*    %r14929
	call        lua_pushnil
	phisrc.32   %phi631(return) <- $1
	br          .L3353

.L3353:
	phi.32      %r14886 <- %phi627(return), %phi630(return), %phi631(return)
	ret.32      %r14886


luaB_error:
.L3366:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14930 <- 0[L]
	push.64*    %r14930
	push.32     $2
	push.64     $1
	call.64     %r14931 <- luaL_optinteger
	scast.32    %r14932 <- (64) %r14931
	store.32    %r14932 -> 0[level]
	load.64*    %r14933 <- 0[L]
	push.64*    %r14933
	push.32     $1
	call        lua_settop
	load.64*    %r14934 <- 0[L]
	push.64*    %r14934
	push.32     $1
	call.32     %r14935 <- lua_isstring
	setne.1     %r14936 <- %r14935, $0
	load.32     %r14937 <- 0[level]
	setgt.32    %r14938 <- %r14937, $0
	setne.1     %r14939 <- %r14938, $0
	and-bool.1  %r14940 <- %r14936, %r14939
	cast.32     %r14941 <- (1) %r14940
	cbr         %r14941, .L3367, .L3368

.L3367:
	load.64*    %r14942 <- 0[L]
	load.32     %r14943 <- 0[level]
	push.64*    %r14942
	push.32     %r14943
	call        luaL_where
	load.64*    %r14944 <- 0[L]
	push.64*    %r14944
	push.32     $1
	call        lua_pushvalue
	load.64*    %r14945 <- 0[L]
	push.64*    %r14945
	push.32     $2
	call        lua_concat
	br          .L3368

.L3368:
	load.64*    %r14946 <- 0[L]
	push.64*    %r14946
	call.32     %r14947 <- lua_error
	phisrc.32   %phi632(return) <- %r14947
	br          .L3369

.L3369:
	phi.32      %r14948 <- %phi632(return)
	ret.32      %r14947


luaB_setmetatable:
.L3370:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14949 <- 0[L]
	push.64*    %r14949
	push.32     $2
	call.32     %r14950 <- lua_type
	store.32    %r14950 -> 0[t]
	load.64*    %r14951 <- 0[L]
	push.64*    %r14951
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.32     %r14952 <- 0[t]
	seteq.32    %r14953 <- %r14952, $0
	setne.1     %r14954 <- %r14953, $0
	load.32     %r14955 <- 0[t]
	seteq.32    %r14956 <- %r14955, $5
	setne.1     %r14957 <- %r14956, $0
	or-bool.1   %r14958 <- %r14954, %r14957
	cast.32     %r14959 <- (1) %r14958
	cbr         %r14959, .L3371, .L3372

.L3371:
	phisrc.32   %phi633 <- $1
	br          .L3373

.L3372:
	load.64*    %r14960 <- 0[L]
	symaddr.64* %r14961 <- <anon symbol:0x1de52d0>
	push.64*    %r14960
	push.32     $2
	push.64*    %r14961
	call.32     %r14962 <- luaL_argerror
	phisrc.32   %phi634 <- %r14962
	br          .L3373

.L3373:
	phi.32      %r14963 <- %phi633, %phi634
	load.64*    %r14964 <- 0[L]
	symaddr.64* %r14965 <- <anon symbol:0x1de5670>
	push.64*    %r14964
	push.32     $1
	push.64*    %r14965
	call.32     %r14966 <- luaL_getmetafield
	cbr         %r14966, .L3374, .L3375

.L3374:
	load.64*    %r14967 <- 0[L]
	symaddr.64* %r14968 <- <anon symbol:0x1de5a10>
	push.64*    %r14967
	push.64*    %r14968
	call.32     %r14969 <- luaL_error
	br          .L3375

.L3375:
	load.64*    %r14970 <- 0[L]
	push.64*    %r14970
	push.32     $2
	call        lua_settop
	load.64*    %r14971 <- 0[L]
	push.64*    %r14971
	push.32     $1
	call.32     %r14972 <- lua_setmetatable
	phisrc.32   %phi635(return) <- $1
	br          .L3376

.L3376:
	phi.32      %r14973 <- %phi635(return)
	ret.32      $1


getfunc:
.L3377:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[opt]
	load.64*    %r14974 <- 0[L]
	push.64*    %r14974
	push.32     $1
	call.32     %r14975 <- lua_type
	seteq.32    %r14976 <- %r14975, $6
	cbr         %r14976, .L3378, .L3379

.L3378:
	load.64*    %r14977 <- 0[L]
	push.64*    %r14977
	push.32     $1
	call        lua_pushvalue
	br          .L3380

.L3379:
	load.32     %r14978 <- 0[opt]
	cbr         %r14978, .L3381, .L3382

.L3381:
	load.64*    %r14979 <- 0[L]
	push.64*    %r14979
	push.32     $1
	push.64     $1
	call.64     %r14980 <- luaL_optinteger
	scast.32    %r14981 <- (64) %r14980
	phisrc.32   %phi636 <- %r14981
	br          .L3383

.L3382:
	load.64*    %r14982 <- 0[L]
	push.64*    %r14982
	push.32     $1
	call.64     %r14983 <- luaL_checkinteger
	scast.32    %r14984 <- (64) %r14983
	phisrc.32   %phi637 <- %r14984
	br          .L3383

.L3383:
	phi.32      %r14985 <- %phi636, %phi637
	store.32    %r14985 -> 0[level]
	load.32     %r14986 <- 0[level]
	setge.32    %r14987 <- %r14986, $0
	cbr         %r14987, .L3384, .L3385

.L3384:
	phisrc.32   %phi638 <- $1
	br          .L3386

.L3385:
	load.64*    %r14988 <- 0[L]
	symaddr.64* %r14989 <- <anon symbol:0x1de5db0>
	push.64*    %r14988
	push.32     $1
	push.64*    %r14989
	call.32     %r14990 <- luaL_argerror
	phisrc.32   %phi639 <- %r14990
	br          .L3386

.L3386:
	phi.32      %r14991 <- %phi638, %phi639
	load.64*    %r14992 <- 0[L]
	load.32     %r14993 <- 0[level]
	symaddr.64* %r14994 <- ar
	push.64*    %r14992
	push.32     %r14993
	push.64*    %r14994
	call.32     %r14995 <- lua_getstack
	seteq.32    %r14996 <- %r14995, $0
	cbr         %r14996, .L3387, .L3388

.L3387:
	load.64*    %r14997 <- 0[L]
	symaddr.64* %r14998 <- <anon symbol:0x1de6320>
	push.64*    %r14997
	push.32     $1
	push.64*    %r14998
	call.32     %r14999 <- luaL_argerror
	br          .L3388

.L3388:
	load.64*    %r15000 <- 0[L]
	symaddr.64* %r15001 <- <anon symbol:0x1de66c0>
	symaddr.64* %r15002 <- ar
	push.64*    %r15000
	push.64*    %r15001
	push.64*    %r15002
	call.32     %r15003 <- lua_getinfo
	load.64*    %r15004 <- 0[L]
	push.64*    %r15004
	push.32     $0xffffffff
	call.32     %r15005 <- lua_type
	seteq.32    %r15006 <- %r15005, $0
	cbr         %r15006, .L3389, .L3390

.L3389:
	load.64*    %r15007 <- 0[L]
	symaddr.64* %r15008 <- <anon symbol:0x1de6c30>
	load.32     %r15009 <- 0[level]
	push.64*    %r15007
	push.64*    %r15008
	push.32     %r15009
	call.32     %r15010 <- luaL_error
	br          .L3390

.L3390:
	br          .L3380

.L3380:
	ret


luaB_setfenv:
.L3391:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15011 <- 0[L]
	push.64*    %r15011
	push.32     $2
	push.32     $5
	call        luaL_checktype
	load.64*    %r15012 <- 0[L]
	push.64*    %r15012
	push.32     $0
	call        getfunc
	load.64*    %r15013 <- 0[L]
	push.64*    %r15013
	push.32     $2
	call        lua_pushvalue
	load.64*    %r15014 <- 0[L]
	push.64*    %r15014
	push.32     $1
	call.32     %r15015 <- lua_isnumber
	cbr         %r15015, .L3394, .L3393

.L3394:
	load.64*    %r15016 <- 0[L]
	push.64*    %r15016
	push.32     $1
	call.f64    %r15017 <- lua_tonumber
	set.f64     %r15018 <- 0.000000
	seteq.32    %r15019 <- %r15017, %r15018
	cbr         %r15019, .L3392, .L3393

.L3392:
	load.64*    %r15020 <- 0[L]
	push.64*    %r15020
	call.32     %r15021 <- lua_pushthread
	load.64*    %r15022 <- 0[L]
	push.64*    %r15022
	push.32     $0xfffffffe
	call        lua_insert
	load.64*    %r15023 <- 0[L]
	push.64*    %r15023
	push.32     $0xfffffffe
	call.32     %r15024 <- lua_setfenv
	phisrc.32   %phi640(return) <- $0
	br          .L3395

.L3393:
	load.64*    %r15026 <- 0[L]
	push.64*    %r15026
	push.32     $0xfffffffe
	call.32     %r15027 <- lua_iscfunction
	cbr         %r15027, .L3397, .L3399

.L3399:
	load.64*    %r15028 <- 0[L]
	push.64*    %r15028
	push.32     $0xfffffffe
	call.32     %r15029 <- lua_setfenv
	seteq.32    %r15030 <- %r15029, $0
	cbr         %r15030, .L3397, .L3398

.L3397:
	load.64*    %r15031 <- 0[L]
	symaddr.64* %r15032 <- <anon symbol:0x1de6fd0>
	push.64*    %r15031
	push.64*    %r15032
	call.32     %r15033 <- luaL_error
	br          .L3398

.L3398:
	br          .L3396

.L3396:
	phisrc.32   %phi641(return) <- $1
	br          .L3395

.L3395:
	phi.32      %r15025 <- %phi640(return), %phi641(return)
	ret.32      %r15025


luaB_rawget:
.L3400:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15034 <- 0[L]
	push.64*    %r15034
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15035 <- 0[L]
	push.64*    %r15035
	push.32     $2
	call        luaL_checkany
	load.64*    %r15036 <- 0[L]
	push.64*    %r15036
	push.32     $2
	call        lua_settop
	load.64*    %r15037 <- 0[L]
	push.64*    %r15037
	push.32     $1
	call        lua_rawget
	phisrc.32   %phi642(return) <- $1
	br          .L3401

.L3401:
	phi.32      %r15038 <- %phi642(return)
	ret.32      $1


luaB_type:
.L3402:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15039 <- 0[L]
	push.64*    %r15039
	push.32     $1
	call        luaL_checkany
	load.64*    %r15040 <- 0[L]
	load.64*    %r15041 <- 0[L]
	load.64*    %r15042 <- 0[L]
	push.64*    %r15042
	push.32     $1
	call.32     %r15043 <- lua_type
	push.64*    %r15041
	push.32     %r15043
	call.64*    %r15044 <- lua_typename
	push.64*    %r15040
	push.64*    %r15044
	call        lua_pushstring
	phisrc.32   %phi643(return) <- $1
	br          .L3403

.L3403:
	phi.32      %r15045 <- %phi643(return)
	ret.32      $1


luaB_next:
.L3404:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15046 <- 0[L]
	push.64*    %r15046
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15047 <- 0[L]
	push.64*    %r15047
	push.32     $2
	call        lua_settop
	load.64*    %r15048 <- 0[L]
	push.64*    %r15048
	push.32     $1
	call.32     %r15049 <- lua_next
	cbr         %r15049, .L3405, .L3406

.L3405:
	phisrc.32   %phi644(return) <- $2
	br          .L3407

.L3406:
	load.64*    %r15051 <- 0[L]
	push.64*    %r15051
	call        lua_pushnil
	phisrc.32   %phi645(return) <- $1
	br          .L3407

.L3407:
	phi.32      %r15050 <- %phi644(return), %phi645(return)
	ret.32      %r15050


luaB_pairs:
.L3409:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15052 <- 0[L]
	push.64*    %r15052
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15053 <- 0[L]
	push.64*    %r15053
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r15054 <- 0[L]
	push.64*    %r15054
	push.32     $1
	call        lua_pushvalue
	load.64*    %r15055 <- 0[L]
	push.64*    %r15055
	call        lua_pushnil
	phisrc.32   %phi646(return) <- $3
	br          .L3410

.L3410:
	phi.32      %r15056 <- %phi646(return)
	ret.32      $3


ipairsaux:
.L3411:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15057 <- 0[L]
	push.64*    %r15057
	push.32     $2
	call.64     %r15058 <- luaL_checkinteger
	scast.32    %r15059 <- (64) %r15058
	store.32    %r15059 -> 0[i]
	load.64*    %r15060 <- 0[L]
	push.64*    %r15060
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.32     %r15061 <- 0[i]
	add.32      %r15062 <- %r15061, $1
	store.32    %r15062 -> 0[i]
	load.64*    %r15063 <- 0[L]
	load.32     %r15064 <- 0[i]
	scast.64    %r15065 <- (32) %r15064
	push.64*    %r15063
	push.64     %r15065
	call        lua_pushinteger
	load.64*    %r15066 <- 0[L]
	load.32     %r15067 <- 0[i]
	push.64*    %r15066
	push.32     $1
	push.32     %r15067
	call        lua_rawgeti
	load.64*    %r15068 <- 0[L]
	push.64*    %r15068
	push.32     $0xffffffff
	call.32     %r15069 <- lua_type
	seteq.32    %r15070 <- %r15069, $0
	select.32   %r15071 <- %r15070, $0, $2
	phisrc.32   %phi647(return) <- %r15071
	br          .L3412

.L3412:
	phi.32      %r15072 <- %phi647(return)
	ret.32      %r15071


luaB_ipairs:
.L3413:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15073 <- 0[L]
	push.64*    %r15073
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15074 <- 0[L]
	push.64*    %r15074
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r15075 <- 0[L]
	push.64*    %r15075
	push.32     $1
	call        lua_pushvalue
	load.64*    %r15076 <- 0[L]
	push.64*    %r15076
	push.64     $0
	call        lua_pushinteger
	phisrc.32   %phi648(return) <- $3
	br          .L3414

.L3414:
	phi.32      %r15077 <- %phi648(return)
	ret.32      $3


load_aux:
.L3415:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[status]
	load.32     %r15078 <- 0[status]
	seteq.32    %r15079 <- %r15078, $0
	cbr         %r15079, .L3416, .L3417

.L3416:
	phisrc.32   %phi649(return) <- $1
	br          .L3418

.L3417:
	load.64*    %r15081 <- 0[L]
	push.64*    %r15081
	call        lua_pushnil
	load.64*    %r15082 <- 0[L]
	push.64*    %r15082
	push.32     $0xfffffffe
	call        lua_insert
	phisrc.32   %phi650(return) <- $2
	br          .L3418

.L3418:
	phi.32      %r15080 <- %phi649(return), %phi650(return)
	ret.32      %r15080


luaB_loadstring:
.L3420:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15083 <- 0[L]
	symaddr.64* %r15084 <- l
	push.64*    %r15083
	push.32     $1
	push.64*    %r15084
	call.64*    %r15085 <- luaL_checklstring
	store.64*   %r15085 -> 0[s]
	load.64*    %r15086 <- 0[L]
	load.64*    %r15087 <- 0[s]
	push.64*    %r15086
	push.32     $2
	push.64*    %r15087
	push.64*    $0
	call.64*    %r15088 <- luaL_optlstring
	store.64*   %r15088 -> 0[chunkname]
	load.64*    %r15089 <- 0[L]
	load.64*    %r15090 <- 0[L]
	load.64*    %r15091 <- 0[s]
	load.64     %r15092 <- 0[l]
	load.64*    %r15093 <- 0[chunkname]
	push.64*    %r15090
	push.64*    %r15091
	push.64     %r15092
	push.64*    %r15093
	call.32     %r15094 <- luaL_loadbuffer
	push.64*    %r15089
	push.32     %r15094
	call.32     %r15095 <- load_aux
	phisrc.32   %phi651(return) <- %r15095
	br          .L3421

.L3421:
	phi.32      %r15096 <- %phi651(return)
	ret.32      %r15095


luaB_loadfile:
.L3422:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15097 <- 0[L]
	push.64*    %r15097
	push.32     $1
	push.64*    $0
	push.64*    $0
	call.64*    %r15098 <- luaL_optlstring
	store.64*   %r15098 -> 0[fname]
	load.64*    %r15099 <- 0[L]
	load.64*    %r15100 <- 0[L]
	load.64*    %r15101 <- 0[fname]
	push.64*    %r15100
	push.64*    %r15101
	call.32     %r15102 <- luaL_loadfile
	push.64*    %r15099
	push.32     %r15102
	call.32     %r15103 <- load_aux
	phisrc.32   %phi652(return) <- %r15103
	br          .L3423

.L3423:
	phi.32      %r15104 <- %phi652(return)
	ret.32      %r15103


luaB_assert:
.L3424:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15105 <- 0[L]
	push.64*    %r15105
	push.32     $1
	call        luaL_checkany
	load.64*    %r15106 <- 0[L]
	push.64*    %r15106
	push.32     $1
	call.32     %r15107 <- lua_toboolean
	cbr         %r15107, .L3426, .L3425

.L3425:
	load.64*    %r15108 <- 0[L]
	symaddr.64* %r15109 <- <anon symbol:0x1de7540>
	load.64*    %r15110 <- 0[L]
	symaddr.64* %r15111 <- <anon symbol:0x1de78e0>
	push.64*    %r15110
	push.32     $2
	push.64*    %r15111
	push.64*    $0
	call.64*    %r15112 <- luaL_optlstring
	push.64*    %r15108
	push.64*    %r15109
	push.64*    %r15112
	call.32     %r15113 <- luaL_error
	phisrc.32   %phi653(return) <- %r15113
	br          .L3427

.L3426:
	load.64*    %r15115 <- 0[L]
	push.64*    %r15115
	call.32     %r15116 <- lua_gettop
	phisrc.32   %phi654(return) <- %r15116
	br          .L3427

.L3427:
	phi.32      %r15114 <- %phi653(return), %phi654(return)
	ret.32      %r15114


luaB_unpack:
.L3428:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15117 <- 0[L]
	push.64*    %r15117
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15118 <- 0[L]
	push.64*    %r15118
	push.32     $2
	push.64     $1
	call.64     %r15119 <- luaL_optinteger
	scast.32    %r15120 <- (64) %r15119
	store.32    %r15120 -> 0[i]
	load.64*    %r15121 <- 0[L]
	push.64*    %r15121
	push.32     $3
	call.32     %r15122 <- lua_type
	setle.32    %r15123 <- %r15122, $0
	cbr         %r15123, .L3429, .L3430

.L3429:
	load.64*    %r15124 <- 0[L]
	push.64*    %r15124
	push.32     $1
	call.64     %r15125 <- lua_objlen
	cast.32     %r15126 <- (64) %r15125
	phisrc.32   %phi655 <- %r15126
	br          .L3431

.L3430:
	load.64*    %r15127 <- 0[L]
	push.64*    %r15127
	push.32     $3
	call.64     %r15128 <- luaL_checkinteger
	scast.32    %r15129 <- (64) %r15128
	phisrc.32   %phi656 <- %r15129
	br          .L3431

.L3431:
	phi.32      %r15130 <- %phi655, %phi656
	store.32    %r15130 -> 0[e]
	load.32     %r15131 <- 0[i]
	load.32     %r15132 <- 0[e]
	setgt.32    %r15133 <- %r15131, %r15132
	cbr         %r15133, .L3432, .L3433

.L3432:
	phisrc.32   %phi657(return) <- $0
	br          .L3434

.L3433:
	load.32     %r15135 <- 0[e]
	load.32     %r15136 <- 0[i]
	sub.32      %r15137 <- %r15135, %r15136
	add.32      %r15138 <- %r15137, $1
	store.32    %r15138 -> 0[n]
	load.32     %r15139 <- 0[n]
	setle.32    %r15140 <- %r15139, $0
	cbr         %r15140, .L3435, .L3437

.L3437:
	load.64*    %r15141 <- 0[L]
	load.32     %r15142 <- 0[n]
	push.64*    %r15141
	push.32     %r15142
	call.32     %r15143 <- lua_checkstack
	cbr         %r15143, .L3436, .L3435

.L3435:
	load.64*    %r15144 <- 0[L]
	symaddr.64* %r15145 <- <anon symbol:0x1de7c80>
	push.64*    %r15144
	push.64*    %r15145
	call.32     %r15146 <- luaL_error
	phisrc.32   %phi658(return) <- %r15146
	br          .L3434

.L3436:
	load.64*    %r15147 <- 0[L]
	load.32     %r15148 <- 0[i]
	push.64*    %r15147
	push.32     $1
	push.32     %r15148
	call        lua_rawgeti
	br          .L3441

.L3441:
	load.32     %r15149 <- 0[i]
	add.32      %r15150 <- %r15149, $1
	store.32    %r15150 -> 0[i]
	load.32     %r15151 <- 0[e]
	setlt.32    %r15152 <- %r15149, %r15151
	cbr         %r15152, .L3438, .L3440

.L3438:
	load.64*    %r15153 <- 0[L]
	load.32     %r15154 <- 0[i]
	push.64*    %r15153
	push.32     $1
	push.32     %r15154
	call        lua_rawgeti
	br          .L3439

.L3439:
	br          .L3441

.L3440:
	load.32     %r15155 <- 0[n]
	phisrc.32   %phi659(return) <- %r15155
	br          .L3434

.L3434:
	phi.32      %r15134 <- %phi657(return), %phi658(return), %phi659(return)
	ret.32      %r15134


luaB_pcall:
.L3442:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15156 <- 0[L]
	push.64*    %r15156
	push.32     $1
	call        luaL_checkany
	load.64*    %r15157 <- 0[L]
	load.64*    %r15158 <- 0[L]
	push.64*    %r15158
	call.32     %r15159 <- lua_gettop
	sub.32      %r15160 <- %r15159, $1
	push.64*    %r15157
	push.32     %r15160
	push.32     $0xffffffff
	push.32     $0
	call.32     %r15161 <- lua_pcall
	store.32    %r15161 -> 0[status]
	load.64*    %r15162 <- 0[L]
	load.32     %r15163 <- 0[status]
	seteq.32    %r15164 <- %r15163, $0
	push.64*    %r15162
	push.32     %r15164
	call        lua_pushboolean
	load.64*    %r15165 <- 0[L]
	push.64*    %r15165
	push.32     $1
	call        lua_insert
	load.64*    %r15166 <- 0[L]
	push.64*    %r15166
	call.32     %r15167 <- lua_gettop
	phisrc.32   %phi660(return) <- %r15167
	br          .L3443

.L3443:
	phi.32      %r15168 <- %phi660(return)
	ret.32      %r15167


luaB_newproxy:
.L3444:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15169 <- 0[L]
	push.64*    %r15169
	push.32     $1
	call        lua_settop
	load.64*    %r15170 <- 0[L]
	push.64*    %r15170
	push.64     $0
	call.64*    %r15171 <- lua_newuserdata
	load.64*    %r15172 <- 0[L]
	push.64*    %r15172
	push.32     $1
	call.32     %r15173 <- lua_toboolean
	seteq.32    %r15174 <- %r15173, $0
	cbr         %r15174, .L3445, .L3446

.L3445:
	phisrc.32   %phi661(return) <- $1
	br          .L3447

.L3446:
	load.64*    %r15176 <- 0[L]
	push.64*    %r15176
	push.32     $1
	call.32     %r15177 <- lua_type
	seteq.32    %r15178 <- %r15177, $1
	cbr         %r15178, .L3449, .L3450

.L3449:
	load.64*    %r15179 <- 0[L]
	push.64*    %r15179
	push.32     $0
	push.32     $0
	call        lua_createtable
	load.64*    %r15180 <- 0[L]
	push.64*    %r15180
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15181 <- 0[L]
	push.64*    %r15181
	push.32     $1
	call        lua_pushboolean
	load.64*    %r15182 <- 0[L]
	push.64*    %r15182
	push.32     $0xffffd8ed
	call        lua_rawset
	br          .L3451

.L3450:
	store.32    $0 -> 0[validproxy]
	load.64*    %r15183 <- 0[L]
	push.64*    %r15183
	push.32     $1
	call.32     %r15184 <- lua_getmetatable
	cbr         %r15184, .L3452, .L3453

.L3452:
	load.64*    %r15185 <- 0[L]
	push.64*    %r15185
	push.32     $0xffffd8ed
	call        lua_rawget
	load.64*    %r15186 <- 0[L]
	push.64*    %r15186
	push.32     $0xffffffff
	call.32     %r15187 <- lua_toboolean
	store.32    %r15187 -> 0[validproxy]
	load.64*    %r15188 <- 0[L]
	push.64*    %r15188
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3453

.L3453:
	load.32     %r15189 <- 0[validproxy]
	cbr         %r15189, .L3454, .L3455

.L3454:
	phisrc.32   %phi662 <- $1
	br          .L3456

.L3455:
	load.64*    %r15190 <- 0[L]
	symaddr.64* %r15191 <- <anon symbol:0x1de8020>
	push.64*    %r15190
	push.32     $1
	push.64*    %r15191
	call.32     %r15192 <- luaL_argerror
	phisrc.32   %phi663 <- %r15192
	br          .L3456

.L3456:
	phi.32      %r15193 <- %phi662, %phi663
	load.64*    %r15194 <- 0[L]
	push.64*    %r15194
	push.32     $1
	call.32     %r15195 <- lua_getmetatable
	br          .L3451

.L3451:
	br          .L3448

.L3448:
	load.64*    %r15196 <- 0[L]
	push.64*    %r15196
	push.32     $2
	call.32     %r15197 <- lua_setmetatable
	phisrc.32   %phi664(return) <- $1
	br          .L3447

.L3447:
	phi.32      %r15175 <- %phi661(return), %phi664(return)
	ret.32      %r15175


auxopen:
.L3457:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[name]
	store.64*   %arg3 -> 0[f]
	store.64*   %arg4 -> 0[u]
	load.64*    %r15198 <- 0[L]
	load.64*    %r15199 <- 0[u]
	push.64*    %r15198
	push.64*    %r15199
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r15200 <- 0[L]
	load.64*    %r15201 <- 0[f]
	push.64*    %r15200
	push.64*    %r15201
	push.32     $1
	call        lua_pushcclosure
	load.64*    %r15202 <- 0[L]
	load.64*    %r15203 <- 0[name]
	push.64*    %r15202
	push.32     $0xfffffffe
	push.64*    %r15203
	call        lua_setfield
	br          .L3458

.L3458:
	ret


base_open:
.L3459:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15204 <- 0[L]
	push.64*    %r15204
	push.32     $0xffffd8ee
	call        lua_pushvalue
	load.64*    %r15205 <- 0[L]
	symaddr.64* %r15206 <- <anon symbol:0x1de83c0>
	push.64*    %r15205
	push.32     $0xffffd8ee
	push.64*    %r15206
	call        lua_setfield
	load.64*    %r15207 <- 0[L]
	symaddr.64* %r15208 <- <anon symbol:0x1de8760>
	symaddr.64* %r15209 <- base_funcs
	push.64*    %r15207
	push.64*    %r15208
	push.64*    %r15209
	call        luaL_register
	load.64*    %r15210 <- 0[L]
	symaddr.64* %r15211 <- <anon symbol:0x1de8cd0>
	push.64*    %r15210
	push.64*    %r15211
	push.64     $7
	call        lua_pushlstring
	load.64*    %r15212 <- 0[L]
	symaddr.64* %r15213 <- <anon symbol:0x1de9240>
	push.64*    %r15212
	push.32     $0xffffd8ee
	push.64*    %r15213
	call        lua_setfield
	load.64*    %r15214 <- 0[L]
	symaddr.64* %r15215 <- <anon symbol:0x1de95e0>
	symaddr.64* %r15216 <- luaB_ipairs
	symaddr.64* %r15217 <- ipairsaux
	push.64*    %r15214
	push.64*    %r15215
	push.64*    %r15216
	push.64*    %r15217
	call        auxopen
	load.64*    %r15218 <- 0[L]
	symaddr.64* %r15219 <- <anon symbol:0x1de9d20>
	symaddr.64* %r15220 <- luaB_pairs
	symaddr.64* %r15221 <- luaB_next
	push.64*    %r15218
	push.64*    %r15219
	push.64*    %r15220
	push.64*    %r15221
	call        auxopen
	load.64*    %r15222 <- 0[L]
	push.64*    %r15222
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r15223 <- 0[L]
	push.64*    %r15223
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15224 <- 0[L]
	push.64*    %r15224
	push.32     $0xfffffffe
	call.32     %r15225 <- lua_setmetatable
	load.64*    %r15226 <- 0[L]
	symaddr.64* %r15227 <- <anon symbol:0x1dea460>
	push.64*    %r15226
	push.64*    %r15227
	push.64     $2
	call        lua_pushlstring
	load.64*    %r15228 <- 0[L]
	symaddr.64* %r15229 <- <anon symbol:0x1dea9d0>
	push.64*    %r15228
	push.32     $0xfffffffe
	push.64*    %r15229
	call        lua_setfield
	load.64*    %r15230 <- 0[L]
	symaddr.64* %r15231 <- luaB_newproxy
	push.64*    %r15230
	push.64*    %r15231
	push.32     $1
	call        lua_pushcclosure
	load.64*    %r15232 <- 0[L]
	symaddr.64* %r15233 <- <anon symbol:0x1deaf40>
	push.64*    %r15232
	push.32     $0xffffd8ee
	push.64*    %r15233
	call        lua_setfield
	br          .L3460

.L3460:
	ret


luaopen_base:
.L3461:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15234 <- 0[L]
	push.64*    %r15234
	call        base_open
	phisrc.32   %phi665(return) <- $1
	br          .L3462

.L3462:
	phi.32      %r15235 <- %phi665(return)
	ret.32      $1


tinsert:
.L3463:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15236 <- 0[L]
	push.64*    %r15236
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15237 <- 0[L]
	push.64*    %r15237
	push.32     $1
	call.64     %r15238 <- lua_objlen
	cast.32     %r15239 <- (64) %r15238
	add.32      %r15240 <- %r15239, $1
	store.32    %r15240 -> 0[e]
	load.64*    %r15241 <- 0[L]
	push.64*    %r15241
	call.32     %r15242 <- lua_gettop
	switch.32   %r15242, 2 -> .L3465, 3 -> .L3466, default -> .L3467

.L3465:
	load.32     %r15243 <- 0[e]
	store.32    %r15243 -> 0[pos]
	br          .L3464

.L3466:
	load.64*    %r15244 <- 0[L]
	push.64*    %r15244
	push.32     $2
	call.64     %r15245 <- luaL_checkinteger
	scast.32    %r15246 <- (64) %r15245
	store.32    %r15246 -> 0[pos]
	load.32     %r15247 <- 0[pos]
	load.32     %r15248 <- 0[e]
	setgt.32    %r15249 <- %r15247, %r15248
	cbr         %r15249, .L3468, .L3469

.L3468:
	load.32     %r15250 <- 0[pos]
	store.32    %r15250 -> 0[e]
	br          .L3469

.L3469:
	load.32     %r15251 <- 0[e]
	store.32    %r15251 -> 0[i]
	br          .L3473

.L3473:
	load.32     %r15252 <- 0[i]
	load.32     %r15253 <- 0[pos]
	setgt.32    %r15254 <- %r15252, %r15253
	cbr         %r15254, .L3470, .L3472

.L3470:
	load.64*    %r15255 <- 0[L]
	load.32     %r15256 <- 0[i]
	sub.32      %r15257 <- %r15256, $1
	push.64*    %r15255
	push.32     $1
	push.32     %r15257
	call        lua_rawgeti
	load.64*    %r15258 <- 0[L]
	load.32     %r15259 <- 0[i]
	push.64*    %r15258
	push.32     $1
	push.32     %r15259
	call        lua_rawseti
	br          .L3471

.L3471:
	load.32     %r15260 <- 0[i]
	sub.32      %r15261 <- %r15260, $1
	store.32    %r15261 -> 0[i]
	br          .L3473

.L3472:
	br          .L3464

.L3467:
	load.64*    %r15262 <- 0[L]
	symaddr.64* %r15263 <- <anon symbol:0x1deb2e0>
	push.64*    %r15262
	push.64*    %r15263
	call.32     %r15264 <- luaL_error
	phisrc.32   %phi666(return) <- %r15264
	br          .L3474

.L3464:
	load.64*    %r15266 <- 0[L]
	load.32     %r15267 <- 0[pos]
	push.64*    %r15266
	push.32     $1
	push.32     %r15267
	call        lua_rawseti
	phisrc.32   %phi667(return) <- $0
	br          .L3474

.L3474:
	phi.32      %r15265 <- %phi666(return), %phi667(return)
	ret.32      %r15265


tremove:
.L3475:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15268 <- 0[L]
	push.64*    %r15268
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15269 <- 0[L]
	push.64*    %r15269
	push.32     $1
	call.64     %r15270 <- lua_objlen
	cast.32     %r15271 <- (64) %r15270
	store.32    %r15271 -> 0[e]
	load.64*    %r15272 <- 0[L]
	load.32     %r15273 <- 0[e]
	scast.64    %r15274 <- (32) %r15273
	push.64*    %r15272
	push.32     $2
	push.64     %r15274
	call.64     %r15275 <- luaL_optinteger
	scast.32    %r15276 <- (64) %r15275
	store.32    %r15276 -> 0[pos]
	load.32     %r15277 <- 0[pos]
	setle.32    %r15278 <- $1, %r15277
	setne.1     %r15279 <- %r15278, $0
	load.32     %r15280 <- 0[pos]
	load.32     %r15281 <- 0[e]
	setle.32    %r15282 <- %r15280, %r15281
	setne.1     %r15283 <- %r15282, $0
	and-bool.1  %r15284 <- %r15279, %r15283
	cast.32     %r15285 <- (1) %r15284
	cbr         %r15285, .L3477, .L3476

.L3476:
	phisrc.32   %phi668(return) <- $0
	br          .L3478

.L3477:
	load.64*    %r15287 <- 0[L]
	load.32     %r15288 <- 0[pos]
	push.64*    %r15287
	push.32     $1
	push.32     %r15288
	call        lua_rawgeti
	br          .L3482

.L3482:
	load.32     %r15289 <- 0[pos]
	load.32     %r15290 <- 0[e]
	setlt.32    %r15291 <- %r15289, %r15290
	cbr         %r15291, .L3479, .L3481

.L3479:
	load.64*    %r15292 <- 0[L]
	load.32     %r15293 <- 0[pos]
	add.32      %r15294 <- %r15293, $1
	push.64*    %r15292
	push.32     $1
	push.32     %r15294
	call        lua_rawgeti
	load.64*    %r15295 <- 0[L]
	load.32     %r15296 <- 0[pos]
	push.64*    %r15295
	push.32     $1
	push.32     %r15296
	call        lua_rawseti
	br          .L3480

.L3480:
	load.32     %r15297 <- 0[pos]
	add.32      %r15298 <- %r15297, $1
	store.32    %r15298 -> 0[pos]
	br          .L3482

.L3481:
	load.64*    %r15299 <- 0[L]
	push.64*    %r15299
	call        lua_pushnil
	load.64*    %r15300 <- 0[L]
	load.32     %r15301 <- 0[e]
	push.64*    %r15300
	push.32     $1
	push.32     %r15301
	call        lua_rawseti
	phisrc.32   %phi669(return) <- $1
	br          .L3478

.L3478:
	phi.32      %r15286 <- %phi668(return), %phi669(return)
	ret.32      %r15286


addfield:
.L3483:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[b]
	store.32    %arg3 -> 0[i]
	load.64*    %r15302 <- 0[L]
	load.32     %r15303 <- 0[i]
	push.64*    %r15302
	push.32     $1
	push.32     %r15303
	call        lua_rawgeti
	load.64*    %r15304 <- 0[L]
	push.64*    %r15304
	push.32     $0xffffffff
	call.32     %r15305 <- lua_isstring
	cbr         %r15305, .L3485, .L3484

.L3484:
	load.64*    %r15306 <- 0[L]
	symaddr.64* %r15307 <- <anon symbol:0x1deb680>
	load.64*    %r15308 <- 0[L]
	load.64*    %r15309 <- 0[L]
	push.64*    %r15309
	push.32     $0xffffffff
	call.32     %r15310 <- lua_type
	push.64*    %r15308
	push.32     %r15310
	call.64*    %r15311 <- lua_typename
	load.32     %r15312 <- 0[i]
	push.64*    %r15306
	push.64*    %r15307
	push.64*    %r15311
	push.32     %r15312
	call.32     %r15313 <- luaL_error
	br          .L3485

.L3485:
	load.64*    %r15314 <- 0[b]
	push.64*    %r15314
	call        luaL_addvalue
	br          .L3486

.L3486:
	ret


tconcat:
.L3487:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15315 <- 0[L]
	symaddr.64* %r15316 <- <anon symbol:0x1deba20>
	symaddr.64* %r15317 <- lsep
	push.64*    %r15315
	push.32     $2
	push.64*    %r15316
	push.64*    %r15317
	call.64*    %r15318 <- luaL_optlstring
	store.64*   %r15318 -> 0[sep]
	load.64*    %r15319 <- 0[L]
	push.64*    %r15319
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15320 <- 0[L]
	push.64*    %r15320
	push.32     $3
	push.64     $1
	call.64     %r15321 <- luaL_optinteger
	scast.32    %r15322 <- (64) %r15321
	store.32    %r15322 -> 0[i]
	load.64*    %r15323 <- 0[L]
	push.64*    %r15323
	push.32     $4
	call.32     %r15324 <- lua_type
	setle.32    %r15325 <- %r15324, $0
	cbr         %r15325, .L3488, .L3489

.L3488:
	load.64*    %r15326 <- 0[L]
	push.64*    %r15326
	push.32     $1
	call.64     %r15327 <- lua_objlen
	cast.32     %r15328 <- (64) %r15327
	phisrc.32   %phi670 <- %r15328
	br          .L3490

.L3489:
	load.64*    %r15329 <- 0[L]
	push.64*    %r15329
	push.32     $4
	call.64     %r15330 <- luaL_checkinteger
	scast.32    %r15331 <- (64) %r15330
	phisrc.32   %phi671 <- %r15331
	br          .L3490

.L3490:
	phi.32      %r15332 <- %phi670, %phi671
	store.32    %r15332 -> 0[last]
	load.64*    %r15333 <- 0[L]
	symaddr.64* %r15334 <- b
	push.64*    %r15333
	push.64*    %r15334
	call        luaL_buffinit
	br          .L3494

.L3494:
	load.32     %r15335 <- 0[i]
	load.32     %r15336 <- 0[last]
	setlt.32    %r15337 <- %r15335, %r15336
	cbr         %r15337, .L3491, .L3493

.L3491:
	load.64*    %r15338 <- 0[L]
	symaddr.64* %r15339 <- b
	load.32     %r15340 <- 0[i]
	push.64*    %r15338
	push.64*    %r15339
	push.32     %r15340
	call        addfield
	symaddr.64* %r15341 <- b
	load.64*    %r15342 <- 0[sep]
	load.64     %r15343 <- 0[lsep]
	push.64*    %r15341
	push.64*    %r15342
	push.64     %r15343
	call        luaL_addlstring
	br          .L3492

.L3492:
	load.32     %r15344 <- 0[i]
	add.32      %r15345 <- %r15344, $1
	store.32    %r15345 -> 0[i]
	br          .L3494

.L3493:
	load.32     %r15346 <- 0[i]
	load.32     %r15347 <- 0[last]
	seteq.32    %r15348 <- %r15346, %r15347
	cbr         %r15348, .L3495, .L3496

.L3495:
	load.64*    %r15349 <- 0[L]
	symaddr.64* %r15350 <- b
	load.32     %r15351 <- 0[i]
	push.64*    %r15349
	push.64*    %r15350
	push.32     %r15351
	call        addfield
	br          .L3496

.L3496:
	symaddr.64* %r15352 <- b
	push.64*    %r15352
	call        luaL_pushresult
	phisrc.32   %phi672(return) <- $1
	br          .L3497

.L3497:
	phi.32      %r15353 <- %phi672(return)
	ret.32      $1


set2:
.L3498:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.32    %arg3 -> 0[j]
	load.64*    %r15354 <- 0[L]
	load.32     %r15355 <- 0[i]
	push.64*    %r15354
	push.32     $1
	push.32     %r15355
	call        lua_rawseti
	load.64*    %r15356 <- 0[L]
	load.32     %r15357 <- 0[j]
	push.64*    %r15356
	push.32     $1
	push.32     %r15357
	call        lua_rawseti
	br          .L3499

.L3499:
	ret


sort_comp:
.L3500:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[a]
	store.32    %arg3 -> 0[b]
	load.64*    %r15358 <- 0[L]
	push.64*    %r15358
	push.32     $2
	call.32     %r15359 <- lua_type
	seteq.32    %r15360 <- %r15359, $0
	cbr         %r15360, .L3502, .L3501

.L3501:
	load.64*    %r15361 <- 0[L]
	push.64*    %r15361
	push.32     $2
	call        lua_pushvalue
	load.64*    %r15362 <- 0[L]
	load.32     %r15363 <- 0[a]
	sub.32      %r15364 <- %r15363, $1
	push.64*    %r15362
	push.32     %r15364
	call        lua_pushvalue
	load.64*    %r15365 <- 0[L]
	load.32     %r15366 <- 0[b]
	sub.32      %r15367 <- %r15366, $2
	push.64*    %r15365
	push.32     %r15367
	call        lua_pushvalue
	load.64*    %r15368 <- 0[L]
	push.64*    %r15368
	push.32     $2
	push.32     $1
	call        lua_call
	load.64*    %r15369 <- 0[L]
	push.64*    %r15369
	push.32     $0xffffffff
	call.32     %r15370 <- lua_toboolean
	store.32    %r15370 -> 0[res]
	load.64*    %r15371 <- 0[L]
	push.64*    %r15371
	push.32     $0xfffffffe
	call        lua_settop
	load.32     %r15372 <- 0[res]
	phisrc.32   %phi673(return) <- %r15372
	br          .L3503

.L3502:
	load.64*    %r15374 <- 0[L]
	load.32     %r15375 <- 0[a]
	load.32     %r15376 <- 0[b]
	push.64*    %r15374
	push.32     %r15375
	push.32     %r15376
	call.32     %r15377 <- lua_lessthan
	phisrc.32   %phi674(return) <- %r15377
	br          .L3503

.L3503:
	phi.32      %r15373 <- %phi673(return), %phi674(return)
	ret.32      %r15373


auxsort:
.L3505:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[l]
	store.32    %arg3 -> 0[u]
	br          .L3509

.L3509:
	load.32     %r15378 <- 0[l]
	load.32     %r15379 <- 0[u]
	setlt.32    %r15380 <- %r15378, %r15379
	cbr         %r15380, .L3506, .L3508

.L3506:
	load.64*    %r15381 <- 0[L]
	load.32     %r15382 <- 0[l]
	push.64*    %r15381
	push.32     $1
	push.32     %r15382
	call        lua_rawgeti
	load.64*    %r15383 <- 0[L]
	load.32     %r15384 <- 0[u]
	push.64*    %r15383
	push.32     $1
	push.32     %r15384
	call        lua_rawgeti
	load.64*    %r15385 <- 0[L]
	push.64*    %r15385
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15386 <- sort_comp
	cbr         %r15386, .L3510, .L3511

.L3510:
	load.64*    %r15387 <- 0[L]
	load.32     %r15388 <- 0[l]
	load.32     %r15389 <- 0[u]
	push.64*    %r15387
	push.32     %r15388
	push.32     %r15389
	call        set2
	br          .L3512

.L3511:
	load.64*    %r15390 <- 0[L]
	push.64*    %r15390
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3512

.L3512:
	load.32     %r15391 <- 0[u]
	load.32     %r15392 <- 0[l]
	sub.32      %r15393 <- %r15391, %r15392
	seteq.32    %r15394 <- %r15393, $1
	cbr         %r15394, .L3513, .L3514

.L3513:
	br          .L3508

.L3514:
	load.32     %r15395 <- 0[l]
	load.32     %r15396 <- 0[u]
	add.32      %r15397 <- %r15395, %r15396
	divs.32     %r15398 <- %r15397, $2
	store.32    %r15398 -> 0[i]
	load.64*    %r15399 <- 0[L]
	load.32     %r15400 <- 0[i]
	push.64*    %r15399
	push.32     $1
	push.32     %r15400
	call        lua_rawgeti
	load.64*    %r15401 <- 0[L]
	load.32     %r15402 <- 0[l]
	push.64*    %r15401
	push.32     $1
	push.32     %r15402
	call        lua_rawgeti
	load.64*    %r15403 <- 0[L]
	push.64*    %r15403
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15404 <- sort_comp
	cbr         %r15404, .L3515, .L3516

.L3515:
	load.64*    %r15405 <- 0[L]
	load.32     %r15406 <- 0[i]
	load.32     %r15407 <- 0[l]
	push.64*    %r15405
	push.32     %r15406
	push.32     %r15407
	call        set2
	br          .L3517

.L3516:
	load.64*    %r15408 <- 0[L]
	push.64*    %r15408
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r15409 <- 0[L]
	load.32     %r15410 <- 0[u]
	push.64*    %r15409
	push.32     $1
	push.32     %r15410
	call        lua_rawgeti
	load.64*    %r15411 <- 0[L]
	push.64*    %r15411
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15412 <- sort_comp
	cbr         %r15412, .L3518, .L3519

.L3518:
	load.64*    %r15413 <- 0[L]
	load.32     %r15414 <- 0[i]
	load.32     %r15415 <- 0[u]
	push.64*    %r15413
	push.32     %r15414
	push.32     %r15415
	call        set2
	br          .L3520

.L3519:
	load.64*    %r15416 <- 0[L]
	push.64*    %r15416
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3520

.L3520:
	br          .L3517

.L3517:
	load.32     %r15417 <- 0[u]
	load.32     %r15418 <- 0[l]
	sub.32      %r15419 <- %r15417, %r15418
	seteq.32    %r15420 <- %r15419, $2
	cbr         %r15420, .L3521, .L3522

.L3521:
	br          .L3508

.L3522:
	load.64*    %r15421 <- 0[L]
	load.32     %r15422 <- 0[i]
	push.64*    %r15421
	push.32     $1
	push.32     %r15422
	call        lua_rawgeti
	load.64*    %r15423 <- 0[L]
	push.64*    %r15423
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15424 <- 0[L]
	load.32     %r15425 <- 0[u]
	sub.32      %r15426 <- %r15425, $1
	push.64*    %r15424
	push.32     $1
	push.32     %r15426
	call        lua_rawgeti
	load.64*    %r15427 <- 0[L]
	load.32     %r15428 <- 0[i]
	load.32     %r15429 <- 0[u]
	sub.32      %r15430 <- %r15429, $1
	push.64*    %r15427
	push.32     %r15428
	push.32     %r15430
	call        set2
	load.32     %r15431 <- 0[l]
	store.32    %r15431 -> 0[i]
	load.32     %r15432 <- 0[u]
	sub.32      %r15433 <- %r15432, $1
	store.32    %r15433 -> 0[j]
	br          .L3526

.L3526:
	br          .L3523

.L3523:
	br          .L3530

.L3530:
	load.64*    %r15434 <- 0[L]
	load.32     %r15435 <- 0[i]
	add.32      %r15436 <- %r15435, $1
	store.32    %r15436 -> 0[i]
	push.64*    %r15434
	push.32     $1
	push.32     %r15436
	call        lua_rawgeti
	load.64*    %r15437 <- 0[L]
	push.64*    %r15437
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15438 <- sort_comp
	cbr         %r15438, .L3527, .L3529

.L3527:
	load.32     %r15439 <- 0[i]
	load.32     %r15440 <- 0[u]
	setgt.32    %r15441 <- %r15439, %r15440
	cbr         %r15441, .L3531, .L3532

.L3531:
	load.64*    %r15442 <- 0[L]
	symaddr.64* %r15443 <- <anon symbol:0x1df48f8>
	push.64*    %r15442
	push.64*    %r15443
	call.32     %r15444 <- luaL_error
	br          .L3532

.L3532:
	load.64*    %r15445 <- 0[L]
	push.64*    %r15445
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3528

.L3528:
	br          .L3530

.L3529:
	br          .L3536

.L3536:
	load.64*    %r15446 <- 0[L]
	load.32     %r15447 <- 0[j]
	sub.32      %r15448 <- %r15447, $1
	store.32    %r15448 -> 0[j]
	push.64*    %r15446
	push.32     $1
	push.32     %r15448
	call        lua_rawgeti
	load.64*    %r15449 <- 0[L]
	push.64*    %r15449
	push.32     $0xfffffffd
	push.32     $0xffffffff
	call.32     %r15450 <- sort_comp
	cbr         %r15450, .L3533, .L3535

.L3533:
	load.32     %r15451 <- 0[j]
	load.32     %r15452 <- 0[l]
	setlt.32    %r15453 <- %r15451, %r15452
	cbr         %r15453, .L3537, .L3538

.L3537:
	load.64*    %r15454 <- 0[L]
	symaddr.64* %r15455 <- <anon symbol:0x1df4c98>
	push.64*    %r15454
	push.64*    %r15455
	call.32     %r15456 <- luaL_error
	br          .L3538

.L3538:
	load.64*    %r15457 <- 0[L]
	push.64*    %r15457
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3534

.L3534:
	br          .L3536

.L3535:
	load.32     %r15458 <- 0[j]
	load.32     %r15459 <- 0[i]
	setlt.32    %r15460 <- %r15458, %r15459
	cbr         %r15460, .L3539, .L3540

.L3539:
	load.64*    %r15461 <- 0[L]
	push.64*    %r15461
	push.32     $0xfffffffc
	call        lua_settop
	br          .L3525

.L3540:
	load.64*    %r15462 <- 0[L]
	load.32     %r15463 <- 0[i]
	load.32     %r15464 <- 0[j]
	push.64*    %r15462
	push.32     %r15463
	push.32     %r15464
	call        set2
	br          .L3524

.L3524:
	br          .L3526

.L3525:
	load.64*    %r15465 <- 0[L]
	load.32     %r15466 <- 0[u]
	sub.32      %r15467 <- %r15466, $1
	push.64*    %r15465
	push.32     $1
	push.32     %r15467
	call        lua_rawgeti
	load.64*    %r15468 <- 0[L]
	load.32     %r15469 <- 0[i]
	push.64*    %r15468
	push.32     $1
	push.32     %r15469
	call        lua_rawgeti
	load.64*    %r15470 <- 0[L]
	load.32     %r15471 <- 0[u]
	sub.32      %r15472 <- %r15471, $1
	load.32     %r15473 <- 0[i]
	push.64*    %r15470
	push.32     %r15472
	push.32     %r15473
	call        set2
	load.32     %r15474 <- 0[i]
	load.32     %r15475 <- 0[l]
	sub.32      %r15476 <- %r15474, %r15475
	load.32     %r15477 <- 0[u]
	load.32     %r15478 <- 0[i]
	sub.32      %r15479 <- %r15477, %r15478
	setlt.32    %r15480 <- %r15476, %r15479
	cbr         %r15480, .L3541, .L3542

.L3541:
	load.32     %r15481 <- 0[l]
	store.32    %r15481 -> 0[j]
	load.32     %r15482 <- 0[i]
	sub.32      %r15483 <- %r15482, $1
	store.32    %r15483 -> 0[i]
	load.32     %r15484 <- 0[i]
	add.32      %r15485 <- %r15484, $2
	store.32    %r15485 -> 0[l]
	br          .L3543

.L3542:
	load.32     %r15486 <- 0[i]
	add.32      %r15487 <- %r15486, $1
	store.32    %r15487 -> 0[j]
	load.32     %r15488 <- 0[u]
	store.32    %r15488 -> 0[i]
	load.32     %r15489 <- 0[j]
	sub.32      %r15490 <- %r15489, $2
	store.32    %r15490 -> 0[u]
	br          .L3543

.L3543:
	load.64*    %r15491 <- 0[L]
	load.32     %r15492 <- 0[j]
	load.32     %r15493 <- 0[i]
	push.64*    %r15491
	push.32     %r15492
	push.32     %r15493
	call        auxsort
	br          .L3507

.L3507:
	br          .L3509

.L3508:
	ret


sort:
.L3544:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15494 <- 0[L]
	push.64*    %r15494
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15495 <- 0[L]
	push.64*    %r15495
	push.32     $1
	call.64     %r15496 <- lua_objlen
	cast.32     %r15497 <- (64) %r15496
	store.32    %r15497 -> 0[n]
	load.64*    %r15498 <- 0[L]
	symaddr.64* %r15499 <- <anon symbol:0x1df5038>
	push.64*    %r15498
	push.32     $40
	push.64*    %r15499
	call        luaL_checkstack
	load.64*    %r15500 <- 0[L]
	push.64*    %r15500
	push.32     $2
	call.32     %r15501 <- lua_type
	setle.32    %r15502 <- %r15501, $0
	cbr         %r15502, .L3546, .L3545

.L3545:
	load.64*    %r15503 <- 0[L]
	push.64*    %r15503
	push.32     $2
	push.32     $6
	call        luaL_checktype
	br          .L3546

.L3546:
	load.64*    %r15504 <- 0[L]
	push.64*    %r15504
	push.32     $2
	call        lua_settop
	load.64*    %r15505 <- 0[L]
	load.32     %r15506 <- 0[n]
	push.64*    %r15505
	push.32     $1
	push.32     %r15506
	call        auxsort
	phisrc.32   %phi675(return) <- $0
	br          .L3547

.L3547:
	phi.32      %r15507 <- %phi675(return)
	ret.32      $0


luaopen_table:
.L3548:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15508 <- 0[L]
	symaddr.64* %r15509 <- <anon symbol:0x1df53d8>
	symaddr.64* %r15510 <- tab_funcs
	push.64*    %r15508
	push.64*    %r15509
	push.64*    %r15510
	call        luaL_register
	phisrc.32   %phi676(return) <- $1
	br          .L3549

.L3549:
	phi.32      %r15511 <- %phi676(return)
	ret.32      $1


pushresult:
.L3550:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[filename]
	call.64*    %r15512 <- __errno_location
	load.32     %r15513 <- 0[%r15512]
	store.32    %r15513 -> 0[en]
	load.32     %r15514 <- 0[i]
	cbr         %r15514, .L3551, .L3552

.L3551:
	load.64*    %r15515 <- 0[L]
	push.64*    %r15515
	push.32     $1
	call        lua_pushboolean
	phisrc.32   %phi677(return) <- $1
	br          .L3553

.L3552:
	load.64*    %r15517 <- 0[L]
	push.64*    %r15517
	call        lua_pushnil
	load.64*    %r15518 <- 0[filename]
	cbr         %r15518, .L3555, .L3556

.L3555:
	load.64*    %r15519 <- 0[L]
	symaddr.64* %r15520 <- <anon symbol:0x1df5a30>
	load.64*    %r15521 <- 0[filename]
	load.32     %r15522 <- 0[en]
	push.32     %r15522
	call.64*    %r15523 <- strerror
	push.64*    %r15519
	push.64*    %r15520
	push.64*    %r15521
	push.64*    %r15523
	call.64*    %r15524 <- lua_pushfstring
	br          .L3557

.L3556:
	load.64*    %r15525 <- 0[L]
	symaddr.64* %r15526 <- <anon symbol:0x1df5dd0>
	load.32     %r15527 <- 0[en]
	push.32     %r15527
	call.64*    %r15528 <- strerror
	push.64*    %r15525
	push.64*    %r15526
	push.64*    %r15528
	call.64*    %r15529 <- lua_pushfstring
	br          .L3557

.L3557:
	load.64*    %r15530 <- 0[L]
	load.32     %r15531 <- 0[en]
	scast.64    %r15532 <- (32) %r15531
	push.64*    %r15530
	push.64     %r15532
	call        lua_pushinteger
	phisrc.32   %phi678(return) <- $3
	br          .L3553

.L3553:
	phi.32      %r15516 <- %phi677(return), %phi678(return)
	ret.32      %r15516


fileerror:
.L3558:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[arg]
	store.64*   %arg3 -> 0[filename]
	load.64*    %r15533 <- 0[L]
	symaddr.64* %r15534 <- <anon symbol:0x1df6170>
	load.64*    %r15535 <- 0[filename]
	call.64*    %r15536 <- __errno_location
	load.32     %r15537 <- 0[%r15536]
	push.32     %r15537
	call.64*    %r15538 <- strerror
	push.64*    %r15533
	push.64*    %r15534
	push.64*    %r15535
	push.64*    %r15538
	call.64*    %r15539 <- lua_pushfstring
	load.64*    %r15540 <- 0[L]
	load.32     %r15541 <- 0[arg]
	load.64*    %r15542 <- 0[L]
	push.64*    %r15542
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r15543 <- lua_tolstring
	push.64*    %r15540
	push.32     %r15541
	push.64*    %r15543
	call.32     %r15544 <- luaL_argerror
	br          .L3559

.L3559:
	ret


io_type:
.L3560:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15545 <- 0[L]
	push.64*    %r15545
	push.32     $1
	call        luaL_checkany
	load.64*    %r15546 <- 0[L]
	push.64*    %r15546
	push.32     $1
	call.64*    %r15547 <- lua_touserdata
	store.64*   %r15547 -> 0[ud]
	load.64*    %r15548 <- 0[L]
	symaddr.64* %r15549 <- <anon symbol:0x1df65f8>
	push.64*    %r15548
	push.32     $0xffffd8f0
	push.64*    %r15549
	call        lua_getfield
	load.64*    %r15550 <- 0[ud]
	seteq.32    %r15551 <- %r15550, $0
	cbr         %r15551, .L3561, .L3564

.L3564:
	load.64*    %r15552 <- 0[L]
	push.64*    %r15552
	push.32     $1
	call.32     %r15553 <- lua_getmetatable
	cbr         %r15553, .L3563, .L3561

.L3563:
	load.64*    %r15554 <- 0[L]
	push.64*    %r15554
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15555 <- lua_rawequal
	cbr         %r15555, .L3562, .L3561

.L3561:
	load.64*    %r15556 <- 0[L]
	push.64*    %r15556
	call        lua_pushnil
	br          .L3565

.L3562:
	load.64*    %r15557 <- 0[ud]
	ptrcast.64* %r15558 <- (64) %r15557
	load.64*    %r15559 <- 0[%r15558]
	seteq.32    %r15560 <- %r15559, $0
	cbr         %r15560, .L3566, .L3567

.L3566:
	load.64*    %r15561 <- 0[L]
	symaddr.64* %r15562 <- <anon symbol:0x1df6a80>
	push.64*    %r15561
	push.64*    %r15562
	push.64     $11
	call        lua_pushlstring
	br          .L3568

.L3567:
	load.64*    %r15563 <- 0[L]
	symaddr.64* %r15564 <- <anon symbol:0x1df6ff0>
	push.64*    %r15563
	push.64*    %r15564
	push.64     $4
	call        lua_pushlstring
	br          .L3568

.L3568:
	br          .L3565

.L3565:
	phisrc.32   %phi679(return) <- $1
	br          .L3569

.L3569:
	phi.32      %r15565 <- %phi679(return)
	ret.32      $1


tofile:
.L3570:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15566 <- 0[L]
	symaddr.64* %r15567 <- <anon symbol:0x1df7560>
	push.64*    %r15566
	push.32     $1
	push.64*    %r15567
	call.64*    %r15568 <- luaL_checkudata
	ptrcast.64* %r15569 <- (64) %r15568
	store.64*   %r15569 -> 0[f]
	load.64*    %r15570 <- 0[f]
	load.64*    %r15571 <- 0[%r15570]
	seteq.32    %r15572 <- %r15571, $0
	cbr         %r15572, .L3571, .L3572

.L3571:
	load.64*    %r15573 <- 0[L]
	symaddr.64* %r15574 <- <anon symbol:0x1df79e8>
	push.64*    %r15573
	push.64*    %r15574
	call.32     %r15575 <- luaL_error
	br          .L3572

.L3572:
	load.64*    %r15576 <- 0[f]
	load.64*    %r15577 <- 0[%r15576]
	phisrc.64*  %phi680(return) <- %r15577
	br          .L3573

.L3573:
	phi.64*     %r15578 <- %phi680(return)
	ret.64*     %r15577


newfile:
.L3574:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15579 <- 0[L]
	push.64*    %r15579
	push.64     $8
	call.64*    %r15580 <- lua_newuserdata
	ptrcast.64* %r15581 <- (64) %r15580
	store.64*   %r15581 -> 0[pf]
	load.64*    %r15582 <- 0[pf]
	store.64*   $0 -> 0[%r15582]
	load.64*    %r15583 <- 0[L]
	symaddr.64* %r15584 <- <anon symbol:0x1df7f58>
	push.64*    %r15583
	push.32     $0xffffd8f0
	push.64*    %r15584
	call        lua_getfield
	load.64*    %r15585 <- 0[L]
	push.64*    %r15585
	push.32     $0xfffffffe
	call.32     %r15586 <- lua_setmetatable
	load.64*    %r15587 <- 0[pf]
	phisrc.64*  %phi681(return) <- %r15587
	br          .L3575

.L3575:
	phi.64*     %r15588 <- %phi681(return)
	ret.64*     %r15587


io_noclose:
.L3576:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15589 <- 0[L]
	push.64*    %r15589
	call        lua_pushnil
	load.64*    %r15590 <- 0[L]
	symaddr.64* %r15591 <- <anon symbol:0x1df82f8>
	push.64*    %r15590
	push.64*    %r15591
	push.64     $26
	call        lua_pushlstring
	phisrc.32   %phi682(return) <- $2
	br          .L3577

.L3577:
	phi.32      %r15592 <- %phi682(return)
	ret.32      $2


io_pclose:
.L3578:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15593 <- 0[L]
	symaddr.64* %r15594 <- <anon symbol:0x1df8868>
	push.64*    %r15593
	push.32     $1
	push.64*    %r15594
	call.64*    %r15595 <- luaL_checkudata
	ptrcast.64* %r15596 <- (64) %r15595
	store.64*   %r15596 -> 0[p]
	load.64*    %r15597 <- 0[L]
	load.64*    %r15598 <- 0[p]
	load.64*    %r15599 <- 0[%r15598]
	store.32    $0 -> 0[ok]
	load.64*    %r15600 <- 0[p]
	store.64*   $0 -> 0[%r15600]
	load.64*    %r15601 <- 0[L]
	load.32     %r15602 <- 0[ok]
	push.64*    %r15601
	push.32     %r15602
	push.64*    $0
	call.32     %r15603 <- pushresult
	phisrc.32   %phi683(return) <- %r15603
	br          .L3579

.L3579:
	phi.32      %r15604 <- %phi683(return)
	ret.32      %r15603


io_fclose:
.L3580:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15605 <- 0[L]
	symaddr.64* %r15606 <- <anon symbol:0x1df8dd8>
	push.64*    %r15605
	push.32     $1
	push.64*    %r15606
	call.64*    %r15607 <- luaL_checkudata
	ptrcast.64* %r15608 <- (64) %r15607
	store.64*   %r15608 -> 0[p]
	load.64*    %r15609 <- 0[p]
	load.64*    %r15610 <- 0[%r15609]
	push.64*    %r15610
	call.32     %r15611 <- fclose
	seteq.32    %r15612 <- %r15611, $0
	store.32    %r15612 -> 0[ok]
	load.64*    %r15613 <- 0[p]
	store.64*   $0 -> 0[%r15613]
	load.64*    %r15614 <- 0[L]
	load.32     %r15615 <- 0[ok]
	push.64*    %r15614
	push.32     %r15615
	push.64*    $0
	call.32     %r15616 <- pushresult
	phisrc.32   %phi684(return) <- %r15616
	br          .L3581

.L3581:
	phi.32      %r15617 <- %phi684(return)
	ret.32      %r15616


aux_close:
.L3582:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15618 <- 0[L]
	push.64*    %r15618
	push.32     $1
	call        lua_getfenv
	load.64*    %r15619 <- 0[L]
	symaddr.64* %r15620 <- <anon symbol:0x1df9348>
	push.64*    %r15619
	push.32     $0xffffffff
	push.64*    %r15620
	call        lua_getfield
	load.64*    %r15621 <- 0[L]
	push.64*    %r15621
	load.64*    %r15622 <- 0[L]
	neg.32      %r15623 <- $1
	push.64*    %r15622
	push.32     %r15623
	call.64*    %r15624 <- lua_tocfunction
	call.32     %r15625 <- %r15624
	phisrc.32   %phi685(return) <- %r15625
	br          .L3583

.L3583:
	phi.32      %r15626 <- %phi685(return)
	ret.32      %r15625


io_close:
.L3584:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15627 <- 0[L]
	push.64*    %r15627
	push.32     $1
	call.32     %r15628 <- lua_type
	seteq.32    %r15629 <- %r15628, $0xffffffff
	cbr         %r15629, .L3585, .L3586

.L3585:
	load.64*    %r15630 <- 0[L]
	push.64*    %r15630
	push.32     $0xffffd8ef
	push.32     $2
	call        lua_rawgeti
	br          .L3586

.L3586:
	load.64*    %r15631 <- 0[L]
	push.64*    %r15631
	call.64*    %r15632 <- tofile
	load.64*    %r15633 <- 0[L]
	push.64*    %r15633
	call.32     %r15634 <- aux_close
	phisrc.32   %phi686(return) <- %r15634
	br          .L3587

.L3587:
	phi.32      %r15635 <- %phi686(return)
	ret.32      %r15634


io_gc:
.L3588:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15636 <- 0[L]
	symaddr.64* %r15637 <- <anon symbol:0x1df96e8>
	push.64*    %r15636
	push.32     $1
	push.64*    %r15637
	call.64*    %r15638 <- luaL_checkudata
	ptrcast.64* %r15639 <- (64) %r15638
	load.64*    %r15640 <- 0[%r15639]
	store.64*   %r15640 -> 0[f]
	load.64*    %r15641 <- 0[f]
	setne.32    %r15642 <- %r15641, $0
	cbr         %r15642, .L3589, .L3590

.L3589:
	load.64*    %r15643 <- 0[L]
	push.64*    %r15643
	call.32     %r15644 <- aux_close
	br          .L3590

.L3590:
	phisrc.32   %phi687(return) <- $0
	br          .L3591

.L3591:
	phi.32      %r15645 <- %phi687(return)
	ret.32      $0


io_open:
.L3592:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15646 <- 0[L]
	push.64*    %r15646
	push.32     $1
	push.64*    $0
	call.64*    %r15647 <- luaL_checklstring
	store.64*   %r15647 -> 0[filename]
	load.64*    %r15648 <- 0[L]
	symaddr.64* %r15649 <- <anon symbol:0x1df9b70>
	push.64*    %r15648
	push.32     $2
	push.64*    %r15649
	push.64*    $0
	call.64*    %r15650 <- luaL_optlstring
	store.64*   %r15650 -> 0[mode]
	load.64*    %r15651 <- 0[L]
	push.64*    %r15651
	call.64*    %r15652 <- newfile
	store.64*   %r15652 -> 0[pf]
	load.64*    %r15653 <- 0[filename]
	load.64*    %r15654 <- 0[mode]
	push.64*    %r15653
	push.64*    %r15654
	call.64*    %r15655 <- fopen
	load.64*    %r15656 <- 0[pf]
	store.64*   %r15655 -> 0[%r15656]
	load.64*    %r15657 <- 0[pf]
	load.64*    %r15658 <- 0[%r15657]
	seteq.32    %r15659 <- %r15658, $0
	cbr         %r15659, .L3594, .L3595

.L3594:
	load.64*    %r15660 <- 0[L]
	load.64*    %r15661 <- 0[filename]
	push.64*    %r15660
	push.32     $0
	push.64*    %r15661
	call.32     %r15662 <- pushresult
	phisrc.32   %phi688 <- %r15662
	br          .L3596

.L3595:
	phisrc.32   %phi689 <- $1
	br          .L3596

.L3596:
	phi.32      %r15663 <- %phi688, %phi689
	phisrc.32   %phi690(return) <- %r15663
	br          .L3593

.L3593:
	phi.32      %r15664 <- %phi690(return)
	ret.32      %r15663


getiofile:
.L3597:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[findex]
	load.64*    %r15665 <- 0[L]
	load.32     %r15666 <- 0[findex]
	push.64*    %r15665
	push.32     $0xffffd8ef
	push.32     %r15666
	call        lua_rawgeti
	load.64*    %r15667 <- 0[L]
	push.64*    %r15667
	push.32     $0xffffffff
	call.64*    %r15668 <- lua_touserdata
	ptrcast.64* %r15669 <- (64) %r15668
	load.64*    %r15670 <- 0[%r15669]
	store.64*   %r15670 -> 0[f]
	load.64*    %r15671 <- 0[f]
	seteq.32    %r15672 <- %r15671, $0
	cbr         %r15672, .L3598, .L3599

.L3598:
	load.64*    %r15673 <- 0[L]
	symaddr.64* %r15674 <- <anon symbol:0x1dfa1c8>
	symaddr.64* %r15675 <- fnames
	load.32     %r15676 <- 0[findex]
	sub.32      %r15677 <- %r15676, $1
	scast.64    %r15678 <- (32) %r15677
	muls.64     %r15679 <- %r15678, $8
	add.64*     %r15680 <- %r15675, %r15679
	load.64*    %r15681 <- 0[%r15680]
	push.64*    %r15673
	push.64*    %r15674
	push.64*    %r15681
	call.32     %r15682 <- luaL_error
	br          .L3599

.L3599:
	load.64*    %r15683 <- 0[f]
	phisrc.64*  %phi691(return) <- %r15683
	br          .L3600

.L3600:
	phi.64*     %r15684 <- %phi691(return)
	ret.64*     %r15683


g_iofile:
.L3601:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[f]
	store.64*   %arg3 -> 0[mode]
	load.64*    %r15685 <- 0[L]
	push.64*    %r15685
	push.32     $1
	call.32     %r15686 <- lua_type
	setle.32    %r15687 <- %r15686, $0
	cbr         %r15687, .L3603, .L3602

.L3602:
	load.64*    %r15688 <- 0[L]
	push.64*    %r15688
	push.32     $1
	push.64*    $0
	call.64*    %r15689 <- lua_tolstring
	store.64*   %r15689 -> 0[filename]
	load.64*    %r15690 <- 0[filename]
	cbr         %r15690, .L3604, .L3605

.L3604:
	load.64*    %r15691 <- 0[L]
	push.64*    %r15691
	call.64*    %r15692 <- newfile
	store.64*   %r15692 -> 0[pf]
	load.64*    %r15693 <- 0[filename]
	load.64*    %r15694 <- 0[mode]
	push.64*    %r15693
	push.64*    %r15694
	call.64*    %r15695 <- fopen
	load.64*    %r15696 <- 0[pf]
	store.64*   %r15695 -> 0[%r15696]
	load.64*    %r15697 <- 0[pf]
	load.64*    %r15698 <- 0[%r15697]
	seteq.32    %r15699 <- %r15698, $0
	cbr         %r15699, .L3606, .L3607

.L3606:
	load.64*    %r15700 <- 0[L]
	load.64*    %r15701 <- 0[filename]
	push.64*    %r15700
	push.32     $1
	push.64*    %r15701
	call        fileerror
	br          .L3607

.L3607:
	br          .L3608

.L3605:
	load.64*    %r15702 <- 0[L]
	push.64*    %r15702
	call.64*    %r15703 <- tofile
	load.64*    %r15704 <- 0[L]
	push.64*    %r15704
	push.32     $1
	call        lua_pushvalue
	br          .L3608

.L3608:
	load.64*    %r15705 <- 0[L]
	load.32     %r15706 <- 0[f]
	push.64*    %r15705
	push.32     $0xffffd8ef
	push.32     %r15706
	call        lua_rawseti
	br          .L3603

.L3603:
	load.64*    %r15707 <- 0[L]
	load.32     %r15708 <- 0[f]
	push.64*    %r15707
	push.32     $0xffffd8ef
	push.32     %r15708
	call        lua_rawgeti
	phisrc.32   %phi692(return) <- $1
	br          .L3609

.L3609:
	phi.32      %r15709 <- %phi692(return)
	ret.32      $1


io_input:
.L3610:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15710 <- 0[L]
	symaddr.64* %r15711 <- <anon symbol:0x1dfa9f0>
	push.64*    %r15710
	push.32     $1
	push.64*    %r15711
	call.32     %r15712 <- g_iofile
	phisrc.32   %phi693(return) <- %r15712
	br          .L3611

.L3611:
	phi.32      %r15713 <- %phi693(return)
	ret.32      %r15712


io_output:
.L3612:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15714 <- 0[L]
	symaddr.64* %r15715 <- <anon symbol:0x1dfad90>
	push.64*    %r15714
	push.32     $2
	push.64*    %r15715
	call.32     %r15716 <- g_iofile
	phisrc.32   %phi694(return) <- %r15716
	br          .L3613

.L3613:
	phi.32      %r15717 <- %phi694(return)
	ret.32      %r15716


aux_lines:
.L3614:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[toclose]
	load.64*    %r15718 <- 0[L]
	load.32     %r15719 <- 0[idx]
	push.64*    %r15718
	push.32     %r15719
	call        lua_pushvalue
	load.64*    %r15720 <- 0[L]
	load.32     %r15721 <- 0[toclose]
	push.64*    %r15720
	push.32     %r15721
	call        lua_pushboolean
	load.64*    %r15722 <- 0[L]
	symaddr.64* %r15723 <- io_readline
	push.64*    %r15722
	push.64*    %r15723
	push.32     $2
	call        lua_pushcclosure
	br          .L3615

.L3615:
	ret


f_lines:
.L3616:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15724 <- 0[L]
	push.64*    %r15724
	call.64*    %r15725 <- tofile
	load.64*    %r15726 <- 0[L]
	push.64*    %r15726
	push.32     $1
	push.32     $0
	call        aux_lines
	phisrc.32   %phi695(return) <- $1
	br          .L3617

.L3617:
	phi.32      %r15727 <- %phi695(return)
	ret.32      $1


io_lines:
.L3618:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15728 <- 0[L]
	push.64*    %r15728
	push.32     $1
	call.32     %r15729 <- lua_type
	setle.32    %r15730 <- %r15729, $0
	cbr         %r15730, .L3619, .L3620

.L3619:
	load.64*    %r15731 <- 0[L]
	push.64*    %r15731
	push.32     $0xffffd8ef
	push.32     $1
	call        lua_rawgeti
	load.64*    %r15732 <- 0[L]
	push.64*    %r15732
	call.32     %r15733 <- f_lines
	phisrc.32   %phi696(return) <- %r15733
	br          .L3621

.L3620:
	load.64*    %r15735 <- 0[L]
	push.64*    %r15735
	push.32     $1
	push.64*    $0
	call.64*    %r15736 <- luaL_checklstring
	store.64*   %r15736 -> 0[filename]
	load.64*    %r15737 <- 0[L]
	push.64*    %r15737
	call.64*    %r15738 <- newfile
	store.64*   %r15738 -> 0[pf]
	load.64*    %r15739 <- 0[filename]
	symaddr.64* %r15740 <- <anon symbol:0x1dfbcf8>
	push.64*    %r15739
	push.64*    %r15740
	call.64*    %r15741 <- fopen
	load.64*    %r15742 <- 0[pf]
	store.64*   %r15741 -> 0[%r15742]
	load.64*    %r15743 <- 0[pf]
	load.64*    %r15744 <- 0[%r15743]
	seteq.32    %r15745 <- %r15744, $0
	cbr         %r15745, .L3623, .L3624

.L3623:
	load.64*    %r15746 <- 0[L]
	load.64*    %r15747 <- 0[filename]
	push.64*    %r15746
	push.32     $1
	push.64*    %r15747
	call        fileerror
	br          .L3624

.L3624:
	load.64*    %r15748 <- 0[L]
	load.64*    %r15749 <- 0[L]
	push.64*    %r15749
	call.32     %r15750 <- lua_gettop
	push.64*    %r15748
	push.32     %r15750
	push.32     $1
	call        aux_lines
	phisrc.32   %phi697(return) <- $1
	br          .L3621

.L3621:
	phi.32      %r15734 <- %phi696(return), %phi697(return)
	ret.32      %r15734


read_number:
.L3625:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15751 <- 0[f]
	symaddr.64* %r15752 <- <anon symbol:0x1dfc180>
	symaddr.64* %r15753 <- d
	push.64*    %r15751
	push.64*    %r15752
	push.64*    %r15753
	call.32     %r15754 <- fscanf
	seteq.32    %r15755 <- %r15754, $1
	cbr         %r15755, .L3626, .L3627

.L3626:
	load.64*    %r15756 <- 0[L]
	load.f64    %r15757 <- 0[d]
	push.64*    %r15756
	push.f64    %r15757
	call        lua_pushnumber
	phisrc.32   %phi698(return) <- $1
	br          .L3628

.L3627:
	load.64*    %r15759 <- 0[L]
	push.64*    %r15759
	call        lua_pushnil
	phisrc.32   %phi699(return) <- $0
	br          .L3628

.L3628:
	phi.32      %r15758 <- %phi698(return), %phi699(return)
	ret.32      %r15758


test_eof:
.L3630:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15760 <- 0[f]
	push.64*    %r15760
	call.32     %r15761 <- _IO_getc
	store.32    %r15761 -> 0[c]
	load.32     %r15762 <- 0[c]
	load.64*    %r15763 <- 0[f]
	push.32     %r15762
	push.64*    %r15763
	call.32     %r15764 <- ungetc
	load.64*    %r15765 <- 0[L]
	push.64*    %r15765
	push.64*    $0
	push.64     $0
	call        lua_pushlstring
	load.32     %r15766 <- 0[c]
	setne.32    %r15767 <- %r15766, $0xffffffff
	phisrc.32   %phi700(return) <- %r15767
	br          .L3631

.L3631:
	phi.32      %r15768 <- %phi700(return)
	ret.32      %r15767


read_line:
.L3632:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15769 <- 0[L]
	symaddr.64* %r15770 <- b
	push.64*    %r15769
	push.64*    %r15770
	call        luaL_buffinit
	br          .L3636

.L3636:
	br          .L3633

.L3633:
	symaddr.64* %r15771 <- b
	push.64*    %r15771
	call.64*    %r15772 <- luaL_prepbuffer
	store.64*   %r15772 -> 0[p]
	load.64*    %r15773 <- 0[p]
	load.64*    %r15774 <- 0[f]
	push.64*    %r15773
	push.32     $0x2000
	push.64*    %r15774
	call.64*    %r15775 <- fgets
	seteq.32    %r15776 <- %r15775, $0
	cbr         %r15776, .L3637, .L3638

.L3637:
	symaddr.64* %r15777 <- b
	push.64*    %r15777
	call        luaL_pushresult
	load.64*    %r15778 <- 0[L]
	push.64*    %r15778
	push.32     $0xffffffff
	call.64     %r15779 <- lua_objlen
	seta.32     %r15780 <- %r15779, $0
	phisrc.32   %phi701(return) <- %r15780
	br          .L3639

.L3638:
	load.64*    %r15782 <- 0[p]
	push.64*    %r15782
	call.64     %r15783 <- strlen
	store.64    %r15783 -> 0[l]
	load.64     %r15784 <- 0[l]
	seteq.32    %r15785 <- %r15784, $0
	cbr         %r15785, .L3640, .L3642

.L3642:
	load.64*    %r15786 <- 0[p]
	load.64     %r15787 <- 0[l]
	sub.64      %r15788 <- %r15787, $1
	add.64*     %r15789 <- %r15786, %r15788
	load.8      %r15790 <- 0[%r15789]
	scast.32    %r15791 <- (8) %r15790
	setne.32    %r15792 <- %r15791, $10
	cbr         %r15792, .L3640, .L3641

.L3640:
	load.64     %r15793 <- 0[l]
	load.64*    %r15794 <- 0[b]
	cast.64     %r15795 <- (64) %r15794
	add.64      %r15796 <- %r15795, %r15793
	ptrcast.64* %r15797 <- (64) %r15796
	store.64*   %r15797 -> 0[b]
	br          .L3643

.L3641:
	load.64     %r15798 <- 0[l]
	sub.64      %r15799 <- %r15798, $1
	load.64*    %r15800 <- 0[b]
	cast.64     %r15801 <- (64) %r15800
	add.64      %r15802 <- %r15801, %r15799
	ptrcast.64* %r15803 <- (64) %r15802
	store.64*   %r15803 -> 0[b]
	symaddr.64* %r15804 <- b
	push.64*    %r15804
	call        luaL_pushresult
	phisrc.32   %phi702(return) <- $1
	br          .L3639

.L3643:
	br          .L3634

.L3634:
	br          .L3636

.L3639:
	phi.32      %r15781 <- %phi701(return), %phi702(return)
	ret.32      %r15781


read_chars:
.L3644:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64    %arg3 -> 0[n]
	load.64*    %r15805 <- 0[L]
	symaddr.64* %r15806 <- b
	push.64*    %r15805
	push.64*    %r15806
	call        luaL_buffinit
	store.64    $0x2000 -> 0[rlen]
	br          .L3645

.L3645:
	symaddr.64* %r15807 <- b
	push.64*    %r15807
	call.64*    %r15808 <- luaL_prepbuffer
	store.64*   %r15808 -> 0[p]
	load.64     %r15809 <- 0[rlen]
	load.64     %r15810 <- 0[n]
	seta.32     %r15811 <- %r15809, %r15810
	cbr         %r15811, .L3648, .L3649

.L3648:
	load.64     %r15812 <- 0[n]
	store.64    %r15812 -> 0[rlen]
	br          .L3649

.L3649:
	load.64*    %r15813 <- 0[p]
	cast.64*    %r15814 <- (64) %r15813
	load.64     %r15815 <- 0[rlen]
	load.64*    %r15816 <- 0[f]
	push.64*    %r15814
	push.64     $1
	push.64     %r15815
	push.64*    %r15816
	call.64     %r15817 <- fread
	store.64    %r15817 -> 0[nr]
	load.64     %r15818 <- 0[nr]
	load.64*    %r15819 <- 0[b]
	cast.64     %r15820 <- (64) %r15819
	add.64      %r15821 <- %r15820, %r15818
	ptrcast.64* %r15822 <- (64) %r15821
	store.64*   %r15822 -> 0[b]
	load.64     %r15823 <- 0[nr]
	load.64     %r15824 <- 0[n]
	cast.64     %r15825 <- (64) %r15824
	sub.64      %r15826 <- %r15825, %r15823
	cast.64     %r15827 <- (64) %r15826
	store.64    %r15827 -> 0[n]
	br          .L3646

.L3646:
	load.64     %r15828 <- 0[n]
	seta.32     %r15829 <- %r15828, $0
	setne.1     %r15830 <- %r15829, $0
	load.64     %r15831 <- 0[nr]
	load.64     %r15832 <- 0[rlen]
	seteq.32    %r15833 <- %r15831, %r15832
	setne.1     %r15834 <- %r15833, $0
	and-bool.1  %r15835 <- %r15830, %r15834
	cast.32     %r15836 <- (1) %r15835
	cbr         %r15836, .L3645, .L3647

.L3647:
	symaddr.64* %r15837 <- b
	push.64*    %r15837
	call        luaL_pushresult
	load.64     %r15838 <- 0[n]
	seteq.32    %r15839 <- %r15838, $0
	cbr         %r15839, .L3651, .L3652

.L3651:
	phisrc.32   %phi703 <- $1
	br          .L3653

.L3652:
	load.64*    %r15840 <- 0[L]
	push.64*    %r15840
	push.32     $0xffffffff
	call.64     %r15841 <- lua_objlen
	seta.32     %r15842 <- %r15841, $0
	phisrc.32   %phi704 <- %r15842
	br          .L3653

.L3653:
	phi.32      %r15843 <- %phi703, %phi704
	phisrc.32   %phi705(return) <- %r15843
	br          .L3650

.L3650:
	phi.32      %r15844 <- %phi705(return)
	ret.32      %r15843


g_read:
.L3654:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[first]
	load.64*    %r15845 <- 0[L]
	push.64*    %r15845
	call.32     %r15846 <- lua_gettop
	sub.32      %r15847 <- %r15846, $1
	store.32    %r15847 -> 0[nargs]
	load.64*    %r15848 <- 0[f]
	push.64*    %r15848
	call        clearerr
	load.32     %r15849 <- 0[nargs]
	seteq.32    %r15850 <- %r15849, $0
	cbr         %r15850, .L3655, .L3656

.L3655:
	load.64*    %r15851 <- 0[L]
	load.64*    %r15852 <- 0[f]
	push.64*    %r15851
	push.64*    %r15852
	call.32     %r15853 <- read_line
	store.32    %r15853 -> 0[success]
	load.32     %r15854 <- 0[first]
	add.32      %r15855 <- %r15854, $1
	store.32    %r15855 -> 0[n]
	br          .L3657

.L3656:
	load.64*    %r15856 <- 0[L]
	load.32     %r15857 <- 0[nargs]
	add.32      %r15858 <- %r15857, $20
	symaddr.64* %r15859 <- <anon symbol:0x1e05d08>
	push.64*    %r15856
	push.32     %r15858
	push.64*    %r15859
	call        luaL_checkstack
	store.32    $1 -> 0[success]
	load.32     %r15860 <- 0[first]
	store.32    %r15860 -> 0[n]
	br          .L3661

.L3661:
	load.32     %r15861 <- 0[nargs]
	sub.32      %r15862 <- %r15861, $1
	store.32    %r15862 -> 0[nargs]
	setne.1     %r15863 <- %r15861, $0
	load.32     %r15864 <- 0[success]
	setne.1     %r15865 <- %r15864, $0
	and-bool.1  %r15866 <- %r15863, %r15865
	cast.32     %r15867 <- (1) %r15866
	cbr         %r15867, .L3658, .L3660

.L3658:
	load.64*    %r15868 <- 0[L]
	load.32     %r15869 <- 0[n]
	push.64*    %r15868
	push.32     %r15869
	call.32     %r15870 <- lua_type
	seteq.32    %r15871 <- %r15870, $3
	cbr         %r15871, .L3662, .L3663

.L3662:
	load.64*    %r15872 <- 0[L]
	load.32     %r15873 <- 0[n]
	push.64*    %r15872
	push.32     %r15873
	call.64     %r15874 <- lua_tointeger
	scast.64    %r15875 <- (64) %r15874
	store.64    %r15875 -> 0[l]
	load.64     %r15876 <- 0[l]
	seteq.32    %r15877 <- %r15876, $0
	cbr         %r15877, .L3664, .L3665

.L3664:
	load.64*    %r15878 <- 0[L]
	load.64*    %r15879 <- 0[f]
	push.64*    %r15878
	push.64*    %r15879
	call.32     %r15880 <- test_eof
	phisrc.32   %phi706 <- %r15880
	br          .L3666

.L3665:
	load.64*    %r15881 <- 0[L]
	load.64*    %r15882 <- 0[f]
	load.64     %r15883 <- 0[l]
	push.64*    %r15881
	push.64*    %r15882
	push.64     %r15883
	call.32     %r15884 <- read_chars
	phisrc.32   %phi707 <- %r15884
	br          .L3666

.L3666:
	phi.32      %r15885 <- %phi706, %phi707
	store.32    %r15885 -> 0[success]
	br          .L3667

.L3663:
	load.64*    %r15886 <- 0[L]
	load.32     %r15887 <- 0[n]
	push.64*    %r15886
	push.32     %r15887
	push.64*    $0
	call.64*    %r15888 <- lua_tolstring
	store.64*   %r15888 -> 0[p]
	load.64*    %r15889 <- 0[p]
	cbr         %r15889, .L3671, .L3669

.L3671:
	load.64*    %r15890 <- 0[p]
	load.8      %r15891 <- 0[%r15890]
	scast.32    %r15892 <- (8) %r15891
	seteq.32    %r15893 <- %r15892, $42
	cbr         %r15893, .L3668, .L3669

.L3668:
	phisrc.32   %phi708 <- $1
	br          .L3670

.L3669:
	load.64*    %r15894 <- 0[L]
	load.32     %r15895 <- 0[n]
	symaddr.64* %r15896 <- <anon symbol:0x1e06190>
	push.64*    %r15894
	push.32     %r15895
	push.64*    %r15896
	call.32     %r15897 <- luaL_argerror
	phisrc.32   %phi709 <- %r15897
	br          .L3670

.L3670:
	phi.32      %r15898 <- %phi708, %phi709
	load.64*    %r15899 <- 0[p]
	load.8      %r15900 <- 1[%r15899]
	switch.8    %r15900, 97 -> .L3675, 108 -> .L3674, 110 -> .L3673, default -> .L3676

.L3673:
	load.64*    %r15901 <- 0[L]
	load.64*    %r15902 <- 0[f]
	push.64*    %r15901
	push.64*    %r15902
	call.32     %r15903 <- read_number
	store.32    %r15903 -> 0[success]
	br          .L3672

.L3674:
	load.64*    %r15904 <- 0[L]
	load.64*    %r15905 <- 0[f]
	push.64*    %r15904
	push.64*    %r15905
	call.32     %r15906 <- read_line
	store.32    %r15906 -> 0[success]
	br          .L3672

.L3675:
	load.64*    %r15907 <- 0[L]
	load.64*    %r15908 <- 0[f]
	push.64*    %r15907
	push.64*    %r15908
	push.64     $-1
	call.32     %r15909 <- read_chars
	store.32    $1 -> 0[success]
	br          .L3672

.L3676:
	load.64*    %r15910 <- 0[L]
	load.32     %r15911 <- 0[n]
	symaddr.64* %r15912 <- <anon symbol:0x1e06618>
	push.64*    %r15910
	push.32     %r15911
	push.64*    %r15912
	call.32     %r15913 <- luaL_argerror
	phisrc.32   %phi710(return) <- %r15913
	br          .L3677

.L3672:
	br          .L3667

.L3667:
	br          .L3659

.L3659:
	load.32     %r15915 <- 0[n]
	add.32      %r15916 <- %r15915, $1
	store.32    %r15916 -> 0[n]
	br          .L3661

.L3660:
	br          .L3657

.L3657:
	load.64*    %r15917 <- 0[f]
	push.64*    %r15917
	call.32     %r15918 <- ferror
	cbr         %r15918, .L3678, .L3679

.L3678:
	load.64*    %r15919 <- 0[L]
	push.64*    %r15919
	push.32     $0
	push.64*    $0
	call.32     %r15920 <- pushresult
	phisrc.32   %phi711(return) <- %r15920
	br          .L3677

.L3679:
	load.32     %r15921 <- 0[success]
	cbr         %r15921, .L3681, .L3680

.L3680:
	load.64*    %r15922 <- 0[L]
	push.64*    %r15922
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r15923 <- 0[L]
	push.64*    %r15923
	call        lua_pushnil
	br          .L3681

.L3681:
	load.32     %r15924 <- 0[n]
	load.32     %r15925 <- 0[first]
	sub.32      %r15926 <- %r15924, %r15925
	phisrc.32   %phi712(return) <- %r15926
	br          .L3677

.L3677:
	phi.32      %r15914 <- %phi710(return), %phi711(return), %phi712(return)
	ret.32      %r15914


io_read:
.L3682:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15927 <- 0[L]
	load.64*    %r15928 <- 0[L]
	push.64*    %r15928
	push.32     $1
	call.64*    %r15929 <- getiofile
	push.64*    %r15927
	push.64*    %r15929
	push.32     $1
	call.32     %r15930 <- g_read
	phisrc.32   %phi713(return) <- %r15930
	br          .L3683

.L3683:
	phi.32      %r15931 <- %phi713(return)
	ret.32      %r15930


f_read:
.L3684:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15932 <- 0[L]
	load.64*    %r15933 <- 0[L]
	push.64*    %r15933
	call.64*    %r15934 <- tofile
	push.64*    %r15932
	push.64*    %r15934
	push.32     $2
	call.32     %r15935 <- g_read
	phisrc.32   %phi714(return) <- %r15935
	br          .L3685

.L3685:
	phi.32      %r15936 <- %phi714(return)
	ret.32      %r15935


io_readline:
.L3686:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15937 <- 0[L]
	push.64*    %r15937
	push.32     $0xffffd8ed
	call.64*    %r15938 <- lua_touserdata
	ptrcast.64* %r15939 <- (64) %r15938
	load.64*    %r15940 <- 0[%r15939]
	store.64*   %r15940 -> 0[f]
	load.64*    %r15941 <- 0[f]
	seteq.32    %r15942 <- %r15941, $0
	cbr         %r15942, .L3687, .L3688

.L3687:
	load.64*    %r15943 <- 0[L]
	symaddr.64* %r15944 <- <anon symbol:0x1dfb218>
	push.64*    %r15943
	push.64*    %r15944
	call.32     %r15945 <- luaL_error
	br          .L3688

.L3688:
	load.64*    %r15946 <- 0[L]
	load.64*    %r15947 <- 0[f]
	push.64*    %r15946
	push.64*    %r15947
	call.32     %r15948 <- read_line
	store.32    %r15948 -> 0[sucess]
	load.64*    %r15949 <- 0[f]
	push.64*    %r15949
	call.32     %r15950 <- ferror
	cbr         %r15950, .L3689, .L3690

.L3689:
	load.64*    %r15951 <- 0[L]
	symaddr.64* %r15952 <- <anon symbol:0x1dfb5b8>
	call.64*    %r15953 <- __errno_location
	load.32     %r15954 <- 0[%r15953]
	push.32     %r15954
	call.64*    %r15955 <- strerror
	push.64*    %r15951
	push.64*    %r15952
	push.64*    %r15955
	call.32     %r15956 <- luaL_error
	phisrc.32   %phi715(return) <- %r15956
	br          .L3691

.L3690:
	load.32     %r15958 <- 0[sucess]
	cbr         %r15958, .L3692, .L3693

.L3692:
	phisrc.32   %phi716(return) <- $1
	br          .L3691

.L3693:
	load.64*    %r15959 <- 0[L]
	push.64*    %r15959
	push.32     $0xffffd8ec
	call.32     %r15960 <- lua_toboolean
	cbr         %r15960, .L3695, .L3696

.L3695:
	load.64*    %r15961 <- 0[L]
	push.64*    %r15961
	push.32     $0
	call        lua_settop
	load.64*    %r15962 <- 0[L]
	push.64*    %r15962
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r15963 <- 0[L]
	push.64*    %r15963
	call.32     %r15964 <- aux_close
	br          .L3696

.L3696:
	phisrc.32   %phi717(return) <- $0
	br          .L3691

.L3691:
	phi.32      %r15957 <- %phi715(return), %phi716(return), %phi717(return)
	ret.32      %r15957


g_write:
.L3697:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[arg]
	load.64*    %r15965 <- 0[L]
	push.64*    %r15965
	call.32     %r15966 <- lua_gettop
	sub.32      %r15967 <- %r15966, $1
	store.32    %r15967 -> 0[nargs]
	store.32    $1 -> 0[status]
	br          .L3701

.L3701:
	load.32     %r15968 <- 0[nargs]
	sub.32      %r15969 <- %r15968, $1
	store.32    %r15969 -> 0[nargs]
	cbr         %r15968, .L3698, .L3700

.L3698:
	load.64*    %r15970 <- 0[L]
	load.32     %r15971 <- 0[arg]
	push.64*    %r15970
	push.32     %r15971
	call.32     %r15972 <- lua_type
	seteq.32    %r15973 <- %r15972, $3
	cbr         %r15973, .L3702, .L3703

.L3702:
	load.32     %r15974 <- 0[status]
	cbr         %r15974, .L3704, .L3705

.L3704:
	load.64*    %r15975 <- 0[f]
	symaddr.64* %r15976 <- <anon symbol:0x1e069b8>
	load.64*    %r15977 <- 0[L]
	load.32     %r15978 <- 0[arg]
	push.64*    %r15977
	push.32     %r15978
	call.f64    %r15979 <- lua_tonumber
	push.64*    %r15975
	push.64*    %r15976
	push.f64    %r15979
	call.32     %r15980 <- fprintf
	setgt.32    %r15981 <- %r15980, $0
	phisrc.32   %phi718 <- %r15981
	br          .L3706

.L3705:
	phisrc.32   %phi719 <- $0
	br          .L3706

.L3706:
	phi.32      %r15982 <- %phi718, %phi719
	store.32    %r15982 -> 0[status]
	br          .L3707

.L3703:
	load.64*    %r15983 <- 0[L]
	load.32     %r15984 <- 0[arg]
	symaddr.64* %r15985 <- l
	push.64*    %r15983
	push.32     %r15984
	push.64*    %r15985
	call.64*    %r15986 <- luaL_checklstring
	store.64*   %r15986 -> 0[s]
	load.32     %r15987 <- 0[status]
	cbr         %r15987, .L3708, .L3709

.L3708:
	load.64*    %r15988 <- 0[s]
	cast.64*    %r15989 <- (64) %r15988
	load.64     %r15990 <- 0[l]
	load.64*    %r15991 <- 0[f]
	push.64*    %r15989
	push.64     $1
	push.64     %r15990
	push.64*    %r15991
	call.64     %r15992 <- fwrite
	load.64     %r15993 <- 0[l]
	seteq.32    %r15994 <- %r15992, %r15993
	phisrc.32   %phi720 <- %r15994
	br          .L3710

.L3709:
	phisrc.32   %phi721 <- $0
	br          .L3710

.L3710:
	phi.32      %r15995 <- %phi720, %phi721
	store.32    %r15995 -> 0[status]
	br          .L3707

.L3707:
	br          .L3699

.L3699:
	load.32     %r15996 <- 0[arg]
	add.32      %r15997 <- %r15996, $1
	store.32    %r15997 -> 0[arg]
	br          .L3701

.L3700:
	load.64*    %r15998 <- 0[L]
	load.32     %r15999 <- 0[status]
	push.64*    %r15998
	push.32     %r15999
	push.64*    $0
	call.32     %r16000 <- pushresult
	phisrc.32   %phi722(return) <- %r16000
	br          .L3711

.L3711:
	phi.32      %r16001 <- %phi722(return)
	ret.32      %r16000


io_write:
.L3712:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16002 <- 0[L]
	load.64*    %r16003 <- 0[L]
	push.64*    %r16003
	push.32     $2
	call.64*    %r16004 <- getiofile
	push.64*    %r16002
	push.64*    %r16004
	push.32     $1
	call.32     %r16005 <- g_write
	phisrc.32   %phi723(return) <- %r16005
	br          .L3713

.L3713:
	phi.32      %r16006 <- %phi723(return)
	ret.32      %r16005


f_write:
.L3714:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16007 <- 0[L]
	load.64*    %r16008 <- 0[L]
	push.64*    %r16008
	call.64*    %r16009 <- tofile
	push.64*    %r16007
	push.64*    %r16009
	push.32     $2
	call.32     %r16010 <- g_write
	phisrc.32   %phi724(return) <- %r16010
	br          .L3715

.L3715:
	phi.32      %r16011 <- %phi724(return)
	ret.32      %r16010


io_flush:
.L3716:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16012 <- 0[L]
	load.64*    %r16013 <- 0[L]
	push.64*    %r16013
	push.32     $2
	call.64*    %r16014 <- getiofile
	push.64*    %r16014
	call.32     %r16015 <- fflush
	seteq.32    %r16016 <- %r16015, $0
	push.64*    %r16012
	push.32     %r16016
	push.64*    $0
	call.32     %r16017 <- pushresult
	phisrc.32   %phi725(return) <- %r16017
	br          .L3717

.L3717:
	phi.32      %r16018 <- %phi725(return)
	ret.32      %r16017


f_flush:
.L3718:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16019 <- 0[L]
	load.64*    %r16020 <- 0[L]
	push.64*    %r16020
	call.64*    %r16021 <- tofile
	push.64*    %r16021
	call.32     %r16022 <- fflush
	seteq.32    %r16023 <- %r16022, $0
	push.64*    %r16019
	push.32     %r16023
	push.64*    $0
	call.32     %r16024 <- pushresult
	phisrc.32   %phi726(return) <- %r16024
	br          .L3719

.L3719:
	phi.32      %r16025 <- %phi726(return)
	ret.32      %r16024


createmeta:
.L3720:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16026 <- 0[L]
	symaddr.64* %r16027 <- <anon symbol:0x1e06f28>
	push.64*    %r16026
	push.64*    %r16027
	call.32     %r16028 <- luaL_newmetatable
	load.64*    %r16029 <- 0[L]
	push.64*    %r16029
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r16030 <- 0[L]
	symaddr.64* %r16031 <- <anon symbol:0x1e072c8>
	push.64*    %r16030
	push.32     $0xfffffffe
	push.64*    %r16031
	call        lua_setfield
	load.64*    %r16032 <- 0[L]
	symaddr.64* %r16033 <- flib
	push.64*    %r16032
	push.64*    $0
	push.64*    %r16033
	call        luaL_register
	br          .L3721

.L3721:
	ret


createstdfile:
.L3722:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[k]
	store.64*   %arg4 -> 0[fname]
	load.64*    %r16034 <- 0[f]
	load.64*    %r16035 <- 0[L]
	push.64*    %r16035
	call.64*    %r16036 <- newfile
	store.64*   %r16034 -> 0[%r16036]
	load.32     %r16037 <- 0[k]
	setgt.32    %r16038 <- %r16037, $0
	cbr         %r16038, .L3723, .L3724

.L3723:
	load.64*    %r16039 <- 0[L]
	push.64*    %r16039
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r16040 <- 0[L]
	load.32     %r16041 <- 0[k]
	push.64*    %r16040
	push.32     $0xffffd8ef
	push.32     %r16041
	call        lua_rawseti
	br          .L3724

.L3724:
	load.64*    %r16042 <- 0[L]
	push.64*    %r16042
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r16043 <- 0[L]
	push.64*    %r16043
	push.32     $0xfffffffe
	call.32     %r16044 <- lua_setfenv
	load.64*    %r16045 <- 0[L]
	load.64*    %r16046 <- 0[fname]
	push.64*    %r16045
	push.32     $0xfffffffd
	push.64*    %r16046
	call        lua_setfield
	br          .L3725

.L3725:
	ret


newfenv:
.L3726:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[cls]
	load.64*    %r16047 <- 0[L]
	push.64*    %r16047
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r16048 <- 0[L]
	load.64*    %r16049 <- 0[cls]
	push.64*    %r16048
	push.64*    %r16049
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r16050 <- 0[L]
	symaddr.64* %r16051 <- <anon symbol:0x1e07920>
	push.64*    %r16050
	push.32     $0xfffffffe
	push.64*    %r16051
	call        lua_setfield
	br          .L3727

.L3727:
	ret


luaopen_io:
.L3728:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16052 <- 0[L]
	push.64*    %r16052
	call        createmeta
	load.64*    %r16053 <- 0[L]
	symaddr.64* %r16054 <- io_fclose
	push.64*    %r16053
	push.64*    %r16054
	call        newfenv
	load.64*    %r16055 <- 0[L]
	push.64*    %r16055
	push.32     $0xffffd8ef
	call        lua_replace
	load.64*    %r16056 <- 0[L]
	symaddr.64* %r16057 <- <anon symbol:0x1e07e90>
	symaddr.64* %r16058 <- iolib
	push.64*    %r16056
	push.64*    %r16057
	push.64*    %r16058
	call        luaL_register
	load.64*    %r16059 <- 0[L]
	symaddr.64* %r16060 <- io_noclose
	push.64*    %r16059
	push.64*    %r16060
	call        newfenv
	load.64*    %r16061 <- 0[L]
	load.64*    %r16062 <- 0[stdin]
	symaddr.64* %r16063 <- <anon symbol:0x1e085d0>
	push.64*    %r16061
	push.64*    %r16062
	push.32     $1
	push.64*    %r16063
	call        createstdfile
	load.64*    %r16064 <- 0[L]
	load.64*    %r16065 <- 0[stdout]
	symaddr.64* %r16066 <- <anon symbol:0x1e08970>
	push.64*    %r16064
	push.64*    %r16065
	push.32     $2
	push.64*    %r16066
	call        createstdfile
	load.64*    %r16067 <- 0[L]
	load.64*    %r16068 <- 0[stderr]
	symaddr.64* %r16069 <- <anon symbol:0x1e08d10>
	push.64*    %r16067
	push.64*    %r16068
	push.32     $0
	push.64*    %r16069
	call        createstdfile
	load.64*    %r16070 <- 0[L]
	push.64*    %r16070
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r16071 <- 0[L]
	symaddr.64* %r16072 <- <anon symbol:0x1e090b0>
	push.64*    %r16071
	push.32     $0xffffffff
	push.64*    %r16072
	call        lua_getfield
	load.64*    %r16073 <- 0[L]
	symaddr.64* %r16074 <- io_pclose
	push.64*    %r16073
	push.64*    %r16074
	call        newfenv
	load.64*    %r16075 <- 0[L]
	push.64*    %r16075
	push.32     $0xfffffffe
	call.32     %r16076 <- lua_setfenv
	load.64*    %r16077 <- 0[L]
	push.64*    %r16077
	push.32     $0xfffffffe
	call        lua_settop
	phisrc.32   %phi727(return) <- $1
	br          .L3729

.L3729:
	phi.32      %r16078 <- %phi727(return)
	ret.32      $1


os_pushresult:
.L3730:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[filename]
	call.64*    %r16079 <- __errno_location
	load.32     %r16080 <- 0[%r16079]
	store.32    %r16080 -> 0[en]
	load.32     %r16081 <- 0[i]
	cbr         %r16081, .L3731, .L3732

.L3731:
	load.64*    %r16082 <- 0[L]
	push.64*    %r16082
	push.32     $1
	call        lua_pushboolean
	phisrc.32   %phi728(return) <- $1
	br          .L3733

.L3732:
	load.64*    %r16084 <- 0[L]
	push.64*    %r16084
	call        lua_pushnil
	load.64*    %r16085 <- 0[L]
	symaddr.64* %r16086 <- <anon symbol:0x1e09708>
	load.64*    %r16087 <- 0[filename]
	load.32     %r16088 <- 0[en]
	push.32     %r16088
	call.64*    %r16089 <- strerror
	push.64*    %r16085
	push.64*    %r16086
	push.64*    %r16087
	push.64*    %r16089
	call.64*    %r16090 <- lua_pushfstring
	load.64*    %r16091 <- 0[L]
	load.32     %r16092 <- 0[en]
	scast.64    %r16093 <- (32) %r16092
	push.64*    %r16091
	push.64     %r16093
	call        lua_pushinteger
	phisrc.32   %phi729(return) <- $3
	br          .L3733

.L3733:
	phi.32      %r16083 <- %phi728(return), %phi729(return)
	ret.32      %r16083


os_remove:
.L3735:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16094 <- 0[L]
	push.64*    %r16094
	push.32     $1
	push.64*    $0
	call.64*    %r16095 <- luaL_checklstring
	store.64*   %r16095 -> 0[filename]
	load.64*    %r16096 <- 0[L]
	load.64*    %r16097 <- 0[filename]
	push.64*    %r16097
	call.32     %r16098 <- remove
	seteq.32    %r16099 <- %r16098, $0
	load.64*    %r16100 <- 0[filename]
	push.64*    %r16096
	push.32     %r16099
	push.64*    %r16100
	call.32     %r16101 <- os_pushresult
	phisrc.32   %phi730(return) <- %r16101
	br          .L3736

.L3736:
	phi.32      %r16102 <- %phi730(return)
	ret.32      %r16101


os_exit:
.L3737:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16103 <- 0[L]
	push.64*    %r16103
	push.32     $1
	push.64     $0
	call.64     %r16104 <- luaL_optinteger
	scast.32    %r16105 <- (64) %r16104
	push.32     %r16105
	call        exit
	phisrc.32   %phi731(return) <- $0
	br          .L3738

.L3738:
	phi.32      %r16106 <- %phi731(return)
	ret.32      $0


luaopen_os:
.L3739:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16107 <- 0[L]
	symaddr.64* %r16108 <- <anon symbol:0x1e09aa8>
	symaddr.64* %r16109 <- syslib
	push.64*    %r16107
	push.64*    %r16108
	push.64*    %r16109
	call        luaL_register
	phisrc.32   %phi732(return) <- $1
	br          .L3740

.L3740:
	phi.32      %r16110 <- %phi732(return)
	ret.32      $1


posrelat:
.L3741:
	<entry-point>
	store.64    %arg1 -> 0[pos]
	store.64    %arg2 -> 0[len]
	load.64     %r16111 <- 0[pos]
	setlt.32    %r16112 <- %r16111, $0
	cbr         %r16112, .L3742, .L3743

.L3742:
	load.64     %r16113 <- 0[len]
	cast.64     %r16114 <- (64) %r16113
	add.64      %r16115 <- %r16114, $1
	load.64     %r16116 <- 0[pos]
	scast.64    %r16117 <- (64) %r16116
	add.64      %r16118 <- %r16117, %r16115
	scast.64    %r16119 <- (64) %r16118
	store.64    %r16119 -> 0[pos]
	br          .L3743

.L3743:
	load.64     %r16120 <- 0[pos]
	load.64     %r16121 <- 0[pos]
	setge.32    %r16122 <- %r16121, $0
	select.64   %r16123 <- %r16122, %r16120, $0
	phisrc.64   %phi733(return) <- %r16123
	br          .L3744

.L3744:
	phi.64      %r16124 <- %phi733(return)
	ret.64      %r16123


str_sub:
.L3745:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16125 <- 0[L]
	symaddr.64* %r16126 <- l
	push.64*    %r16125
	push.32     $1
	push.64*    %r16126
	call.64*    %r16127 <- luaL_checklstring
	store.64*   %r16127 -> 0[s]
	load.64*    %r16128 <- 0[L]
	push.64*    %r16128
	push.32     $2
	call.64     %r16129 <- luaL_checkinteger
	load.64     %r16130 <- 0[l]
	push.64     %r16129
	push.64     %r16130
	call.64     %r16131 <- posrelat
	store.64    %r16131 -> 0[start]
	load.64*    %r16132 <- 0[L]
	push.64*    %r16132
	push.32     $3
	push.64     $-1
	call.64     %r16133 <- luaL_optinteger
	load.64     %r16134 <- 0[l]
	push.64     %r16133
	push.64     %r16134
	call.64     %r16135 <- posrelat
	store.64    %r16135 -> 0[end]
	load.64     %r16136 <- 0[start]
	setlt.32    %r16137 <- %r16136, $1
	cbr         %r16137, .L3746, .L3747

.L3746:
	store.64    $1 -> 0[start]
	br          .L3747

.L3747:
	load.64     %r16138 <- 0[end]
	load.64     %r16139 <- 0[l]
	cast.64     %r16140 <- (64) %r16139
	setgt.32    %r16141 <- %r16138, %r16140
	cbr         %r16141, .L3748, .L3749

.L3748:
	load.64     %r16142 <- 0[l]
	cast.64     %r16143 <- (64) %r16142
	store.64    %r16143 -> 0[end]
	br          .L3749

.L3749:
	load.64     %r16144 <- 0[start]
	load.64     %r16145 <- 0[end]
	setle.32    %r16146 <- %r16144, %r16145
	cbr         %r16146, .L3750, .L3751

.L3750:
	load.64*    %r16147 <- 0[L]
	load.64*    %r16148 <- 0[s]
	load.64     %r16149 <- 0[start]
	add.64*     %r16150 <- %r16148, %r16149
	sub.64*     %r16151 <- %r16150, $1
	load.64     %r16152 <- 0[end]
	load.64     %r16153 <- 0[start]
	sub.64      %r16154 <- %r16152, %r16153
	add.64      %r16155 <- %r16154, $1
	scast.64    %r16156 <- (64) %r16155
	push.64*    %r16147
	push.64*    %r16151
	push.64     %r16156
	call        lua_pushlstring
	br          .L3752

.L3751:
	load.64*    %r16157 <- 0[L]
	symaddr.64* %r16158 <- <anon symbol:0x1e0a1e8>
	push.64*    %r16157
	push.64*    %r16158
	push.64     $0
	call        lua_pushlstring
	br          .L3752

.L3752:
	phisrc.32   %phi734(return) <- $1
	br          .L3753

.L3753:
	phi.32      %r16159 <- %phi734(return)
	ret.32      $1


str_lower:
.L3754:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16160 <- 0[L]
	symaddr.64* %r16161 <- l
	push.64*    %r16160
	push.32     $1
	push.64*    %r16161
	call.64*    %r16162 <- luaL_checklstring
	store.64*   %r16162 -> 0[s]
	load.64*    %r16163 <- 0[L]
	symaddr.64* %r16164 <- b
	push.64*    %r16163
	push.64*    %r16164
	call        luaL_buffinit
	store.64    $0 -> 0[i]
	br          .L3758

.L3758:
	load.64     %r16165 <- 0[i]
	load.64     %r16166 <- 0[l]
	setb.32     %r16167 <- %r16165, %r16166
	cbr         %r16167, .L3755, .L3757

.L3755:
	load.64*    %r16168 <- 0[b]
	symaddr.64* %r16169 <- b
	add.64*     %r16170 <- %r16169, $24
	add.64*     %r16171 <- %r16170, $0x2000
	setb.32     %r16172 <- %r16168, %r16171
	cbr         %r16172, .L3759, .L3760

.L3759:
	phisrc.32   %phi735 <- $1
	br          .L3761

.L3760:
	symaddr.64* %r16173 <- b
	push.64*    %r16173
	call.64*    %r16174 <- luaL_prepbuffer
	phisrc.32   %phi736 <- %r16174
	br          .L3761

.L3761:
	phi.32      %r16175 <- %phi735, %phi736
	load.64*    %r16176 <- 0[s]
	load.64     %r16177 <- 0[i]
	add.64*     %r16178 <- %r16176, %r16177
	load.8      %r16179 <- 0[%r16178]
	scast.8     %r16180 <- (8) %r16179
	cast.32     %r16181 <- (8) %r16180
	push.32     %r16181
	call.32     %r16182 <- tolower
	scast.8     %r16183 <- (32) %r16182
	load.64*    %r16184 <- 0[b]
	add.64*     %r16185 <- %r16184, $1
	store.64*   %r16185 -> 0[b]
	store.8     %r16183 -> 0[%r16184]
	br          .L3756

.L3756:
	load.64     %r16186 <- 0[i]
	add.64      %r16187 <- %r16186, $1
	store.64    %r16187 -> 0[i]
	br          .L3758

.L3757:
	symaddr.64* %r16188 <- b
	push.64*    %r16188
	call        luaL_pushresult
	phisrc.32   %phi737(return) <- $1
	br          .L3762

.L3762:
	phi.32      %r16189 <- %phi737(return)
	ret.32      $1


str_upper:
.L3763:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16190 <- 0[L]
	symaddr.64* %r16191 <- l
	push.64*    %r16190
	push.32     $1
	push.64*    %r16191
	call.64*    %r16192 <- luaL_checklstring
	store.64*   %r16192 -> 0[s]
	load.64*    %r16193 <- 0[L]
	symaddr.64* %r16194 <- b
	push.64*    %r16193
	push.64*    %r16194
	call        luaL_buffinit
	store.64    $0 -> 0[i]
	br          .L3767

.L3767:
	load.64     %r16195 <- 0[i]
	load.64     %r16196 <- 0[l]
	setb.32     %r16197 <- %r16195, %r16196
	cbr         %r16197, .L3764, .L3766

.L3764:
	load.64*    %r16198 <- 0[b]
	symaddr.64* %r16199 <- b
	add.64*     %r16200 <- %r16199, $24
	add.64*     %r16201 <- %r16200, $0x2000
	setb.32     %r16202 <- %r16198, %r16201
	cbr         %r16202, .L3768, .L3769

.L3768:
	phisrc.32   %phi738 <- $1
	br          .L3770

.L3769:
	symaddr.64* %r16203 <- b
	push.64*    %r16203
	call.64*    %r16204 <- luaL_prepbuffer
	phisrc.32   %phi739 <- %r16204
	br          .L3770

.L3770:
	phi.32      %r16205 <- %phi738, %phi739
	load.64*    %r16206 <- 0[s]
	load.64     %r16207 <- 0[i]
	add.64*     %r16208 <- %r16206, %r16207
	load.8      %r16209 <- 0[%r16208]
	scast.8     %r16210 <- (8) %r16209
	cast.32     %r16211 <- (8) %r16210
	push.32     %r16211
	call.32     %r16212 <- toupper
	scast.8     %r16213 <- (32) %r16212
	load.64*    %r16214 <- 0[b]
	add.64*     %r16215 <- %r16214, $1
	store.64*   %r16215 -> 0[b]
	store.8     %r16213 -> 0[%r16214]
	br          .L3765

.L3765:
	load.64     %r16216 <- 0[i]
	add.64      %r16217 <- %r16216, $1
	store.64    %r16217 -> 0[i]
	br          .L3767

.L3766:
	symaddr.64* %r16218 <- b
	push.64*    %r16218
	call        luaL_pushresult
	phisrc.32   %phi740(return) <- $1
	br          .L3771

.L3771:
	phi.32      %r16219 <- %phi740(return)
	ret.32      $1


str_rep:
.L3772:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16220 <- 0[L]
	symaddr.64* %r16221 <- l
	push.64*    %r16220
	push.32     $1
	push.64*    %r16221
	call.64*    %r16222 <- luaL_checklstring
	store.64*   %r16222 -> 0[s]
	load.64*    %r16223 <- 0[L]
	push.64*    %r16223
	push.32     $2
	call.64     %r16224 <- luaL_checkinteger
	scast.32    %r16225 <- (64) %r16224
	store.32    %r16225 -> 0[n]
	load.64*    %r16226 <- 0[L]
	symaddr.64* %r16227 <- b
	push.64*    %r16226
	push.64*    %r16227
	call        luaL_buffinit
	br          .L3776

.L3776:
	load.32     %r16228 <- 0[n]
	sub.32      %r16229 <- %r16228, $1
	store.32    %r16229 -> 0[n]
	setgt.32    %r16230 <- %r16228, $0
	cbr         %r16230, .L3773, .L3775

.L3773:
	symaddr.64* %r16231 <- b
	load.64*    %r16232 <- 0[s]
	load.64     %r16233 <- 0[l]
	push.64*    %r16231
	push.64*    %r16232
	push.64     %r16233
	call        luaL_addlstring
	br          .L3774

.L3774:
	br          .L3776

.L3775:
	symaddr.64* %r16234 <- b
	push.64*    %r16234
	call        luaL_pushresult
	phisrc.32   %phi741(return) <- $1
	br          .L3777

.L3777:
	phi.32      %r16235 <- %phi741(return)
	ret.32      $1


str_byte:
.L3778:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16236 <- 0[L]
	symaddr.64* %r16237 <- l
	push.64*    %r16236
	push.32     $1
	push.64*    %r16237
	call.64*    %r16238 <- luaL_checklstring
	store.64*   %r16238 -> 0[s]
	load.64*    %r16239 <- 0[L]
	push.64*    %r16239
	push.32     $2
	push.64     $1
	call.64     %r16240 <- luaL_optinteger
	load.64     %r16241 <- 0[l]
	push.64     %r16240
	push.64     %r16241
	call.64     %r16242 <- posrelat
	store.64    %r16242 -> 0[posi]
	load.64*    %r16243 <- 0[L]
	load.64     %r16244 <- 0[posi]
	push.64*    %r16243
	push.32     $3
	push.64     %r16244
	call.64     %r16245 <- luaL_optinteger
	load.64     %r16246 <- 0[l]
	push.64     %r16245
	push.64     %r16246
	call.64     %r16247 <- posrelat
	store.64    %r16247 -> 0[pose]
	load.64     %r16248 <- 0[posi]
	setle.32    %r16249 <- %r16248, $0
	cbr         %r16249, .L3779, .L3780

.L3779:
	store.64    $1 -> 0[posi]
	br          .L3780

.L3780:
	load.64     %r16250 <- 0[pose]
	scast.64    %r16251 <- (64) %r16250
	load.64     %r16252 <- 0[l]
	seta.32     %r16253 <- %r16251, %r16252
	cbr         %r16253, .L3781, .L3782

.L3781:
	load.64     %r16254 <- 0[l]
	cast.64     %r16255 <- (64) %r16254
	store.64    %r16255 -> 0[pose]
	br          .L3782

.L3782:
	load.64     %r16256 <- 0[posi]
	load.64     %r16257 <- 0[pose]
	setgt.32    %r16258 <- %r16256, %r16257
	cbr         %r16258, .L3783, .L3784

.L3783:
	phisrc.32   %phi742(return) <- $0
	br          .L3785

.L3784:
	load.64     %r16260 <- 0[pose]
	load.64     %r16261 <- 0[posi]
	sub.64      %r16262 <- %r16260, %r16261
	add.64      %r16263 <- %r16262, $1
	scast.32    %r16264 <- (64) %r16263
	store.32    %r16264 -> 0[n]
	load.64     %r16265 <- 0[posi]
	load.32     %r16266 <- 0[n]
	scast.64    %r16267 <- (32) %r16266
	add.64      %r16268 <- %r16265, %r16267
	load.64     %r16269 <- 0[pose]
	setle.32    %r16270 <- %r16268, %r16269
	cbr         %r16270, .L3786, .L3787

.L3786:
	load.64*    %r16271 <- 0[L]
	symaddr.64* %r16272 <- <anon symbol:0x1e156d0>
	push.64*    %r16271
	push.64*    %r16272
	call.32     %r16273 <- luaL_error
	br          .L3787

.L3787:
	load.64*    %r16274 <- 0[L]
	load.32     %r16275 <- 0[n]
	symaddr.64* %r16276 <- <anon symbol:0x1e15a70>
	push.64*    %r16274
	push.32     %r16275
	push.64*    %r16276
	call        luaL_checkstack
	store.32    $0 -> 0[i]
	br          .L3791

.L3791:
	load.32     %r16277 <- 0[i]
	load.32     %r16278 <- 0[n]
	setlt.32    %r16279 <- %r16277, %r16278
	cbr         %r16279, .L3788, .L3790

.L3788:
	load.64*    %r16280 <- 0[L]
	load.64*    %r16281 <- 0[s]
	load.64     %r16282 <- 0[posi]
	load.32     %r16283 <- 0[i]
	scast.64    %r16284 <- (32) %r16283
	add.64      %r16285 <- %r16282, %r16284
	sub.64      %r16286 <- %r16285, $1
	add.64*     %r16287 <- %r16281, %r16286
	load.8      %r16288 <- 0[%r16287]
	scast.8     %r16289 <- (8) %r16288
	cast.64     %r16290 <- (8) %r16289
	push.64*    %r16280
	push.64     %r16290
	call        lua_pushinteger
	br          .L3789

.L3789:
	load.32     %r16291 <- 0[i]
	add.32      %r16292 <- %r16291, $1
	store.32    %r16292 -> 0[i]
	br          .L3791

.L3790:
	load.32     %r16293 <- 0[n]
	phisrc.32   %phi743(return) <- %r16293
	br          .L3785

.L3785:
	phi.32      %r16259 <- %phi742(return), %phi743(return)
	ret.32      %r16259


str_char:
.L3792:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16294 <- 0[L]
	push.64*    %r16294
	call.32     %r16295 <- lua_gettop
	store.32    %r16295 -> 0[n]
	load.64*    %r16296 <- 0[L]
	symaddr.64* %r16297 <- b
	push.64*    %r16296
	push.64*    %r16297
	call        luaL_buffinit
	store.32    $1 -> 0[i]
	br          .L3796

.L3796:
	load.32     %r16298 <- 0[i]
	load.32     %r16299 <- 0[n]
	setle.32    %r16300 <- %r16298, %r16299
	cbr         %r16300, .L3793, .L3795

.L3793:
	load.64*    %r16301 <- 0[L]
	load.32     %r16302 <- 0[i]
	push.64*    %r16301
	push.32     %r16302
	call.64     %r16303 <- luaL_checkinteger
	scast.32    %r16304 <- (64) %r16303
	store.32    %r16304 -> 0[c]
	load.32     %r16305 <- 0[c]
	scast.8     %r16306 <- (32) %r16305
	cast.32     %r16307 <- (8) %r16306
	load.32     %r16308 <- 0[c]
	seteq.32    %r16309 <- %r16307, %r16308
	cbr         %r16309, .L3797, .L3798

.L3797:
	phisrc.32   %phi744 <- $1
	br          .L3799

.L3798:
	load.64*    %r16310 <- 0[L]
	load.32     %r16311 <- 0[i]
	symaddr.64* %r16312 <- <anon symbol:0x1e160c8>
	push.64*    %r16310
	push.32     %r16311
	push.64*    %r16312
	call.32     %r16313 <- luaL_argerror
	phisrc.32   %phi745 <- %r16313
	br          .L3799

.L3799:
	phi.32      %r16314 <- %phi744, %phi745
	load.64*    %r16315 <- 0[b]
	symaddr.64* %r16316 <- b
	add.64*     %r16317 <- %r16316, $24
	add.64*     %r16318 <- %r16317, $0x2000
	setb.32     %r16319 <- %r16315, %r16318
	cbr         %r16319, .L3800, .L3801

.L3800:
	phisrc.32   %phi746 <- $1
	br          .L3802

.L3801:
	symaddr.64* %r16320 <- b
	push.64*    %r16320
	call.64*    %r16321 <- luaL_prepbuffer
	phisrc.32   %phi747 <- %r16321
	br          .L3802

.L3802:
	phi.32      %r16322 <- %phi746, %phi747
	load.32     %r16323 <- 0[c]
	scast.8     %r16324 <- (32) %r16323
	cast.8      %r16325 <- (8) %r16324
	load.64*    %r16326 <- 0[b]
	add.64*     %r16327 <- %r16326, $1
	store.64*   %r16327 -> 0[b]
	store.8     %r16325 -> 0[%r16326]
	br          .L3794

.L3794:
	load.32     %r16328 <- 0[i]
	add.32      %r16329 <- %r16328, $1
	store.32    %r16329 -> 0[i]
	br          .L3796

.L3795:
	symaddr.64* %r16330 <- b
	push.64*    %r16330
	call        luaL_pushresult
	phisrc.32   %phi748(return) <- $1
	br          .L3803

.L3803:
	phi.32      %r16331 <- %phi748(return)
	ret.32      $1


check_capture:
.L3804:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.32    %arg2 -> 0[l]
	load.32     %r16332 <- 0[l]
	scast.32    %r16333 <- (32) %r16332
	sub.32      %r16334 <- %r16333, $49
	scast.32    %r16335 <- (32) %r16334
	store.32    %r16335 -> 0[l]
	load.32     %r16336 <- 0[l]
	setlt.32    %r16337 <- %r16336, $0
	cbr         %r16337, .L3805, .L3808

.L3808:
	load.32     %r16338 <- 0[l]
	load.64*    %r16339 <- 0[ms]
	load.32     %r16340 <- 24[%r16339]
	setge.32    %r16341 <- %r16338, %r16340
	cbr         %r16341, .L3805, .L3807

.L3807:
	load.64*    %r16342 <- 0[ms]
	add.64*     %r16343 <- %r16342, $32
	load.32     %r16344 <- 0[l]
	scast.64    %r16345 <- (32) %r16344
	muls.64     %r16346 <- %r16345, $16
	add.64*     %r16347 <- %r16343, %r16346
	load.64     %r16348 <- 8[%r16347]
	seteq.32    %r16349 <- %r16348, $-1
	cbr         %r16349, .L3805, .L3806

.L3805:
	load.64*    %r16350 <- 0[ms]
	load.64*    %r16351 <- 16[%r16350]
	symaddr.64* %r16352 <- <anon symbol:0x1e17b10>
	push.64*    %r16351
	push.64*    %r16352
	call.32     %r16353 <- luaL_error
	phisrc.32   %phi749(return) <- %r16353
	br          .L3809

.L3806:
	load.32     %r16355 <- 0[l]
	phisrc.32   %phi750(return) <- %r16355
	br          .L3809

.L3809:
	phi.32      %r16354 <- %phi749(return), %phi750(return)
	ret.32      %r16354


capture_to_close:
.L3810:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	load.64*    %r16356 <- 0[ms]
	load.32     %r16357 <- 24[%r16356]
	store.32    %r16357 -> 0[level]
	load.32     %r16358 <- 0[level]
	sub.32      %r16359 <- %r16358, $1
	store.32    %r16359 -> 0[level]
	br          .L3814

.L3814:
	load.32     %r16360 <- 0[level]
	setge.32    %r16361 <- %r16360, $0
	cbr         %r16361, .L3811, .L3813

.L3811:
	load.64*    %r16362 <- 0[ms]
	add.64*     %r16363 <- %r16362, $32
	load.32     %r16364 <- 0[level]
	scast.64    %r16365 <- (32) %r16364
	muls.64     %r16366 <- %r16365, $16
	add.64*     %r16367 <- %r16363, %r16366
	load.64     %r16368 <- 8[%r16367]
	seteq.32    %r16369 <- %r16368, $-1
	cbr         %r16369, .L3815, .L3816

.L3815:
	load.32     %r16370 <- 0[level]
	phisrc.32   %phi751(return) <- %r16370
	br          .L3817

.L3816:
	br          .L3812

.L3812:
	load.32     %r16372 <- 0[level]
	sub.32      %r16373 <- %r16372, $1
	store.32    %r16373 -> 0[level]
	br          .L3814

.L3813:
	load.64*    %r16374 <- 0[ms]
	load.64*    %r16375 <- 16[%r16374]
	symaddr.64* %r16376 <- <anon symbol:0x1e186d8>
	push.64*    %r16375
	push.64*    %r16376
	call.32     %r16377 <- luaL_error
	phisrc.32   %phi752(return) <- %r16377
	br          .L3817

.L3817:
	phi.32      %r16371 <- %phi751(return), %phi752(return)
	ret.32      %r16371


classend:
.L3818:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[p]
	load.64*    %r16378 <- 0[p]
	add.64*     %r16379 <- %r16378, $1
	store.64*   %r16379 -> 0[p]
	load.8      %r16380 <- 0[%r16378]
	switch.8    %r16380, 37 -> .L3820, 91 -> .L3821, default -> .L3822

.L3820:
	load.64*    %r16381 <- 0[p]
	load.8      %r16382 <- 0[%r16381]
	scast.32    %r16383 <- (8) %r16382
	seteq.32    %r16384 <- %r16383, $0
	cbr         %r16384, .L3823, .L3824

.L3823:
	load.64*    %r16385 <- 0[ms]
	load.64*    %r16386 <- 16[%r16385]
	symaddr.64* %r16387 <- <anon symbol:0x1e18e18>
	push.64*    %r16386
	push.64*    %r16387
	call.32     %r16388 <- luaL_error
	br          .L3824

.L3824:
	load.64*    %r16389 <- 0[p]
	add.64*     %r16390 <- %r16389, $1
	phisrc.64*  %phi753(return) <- %r16390
	br          .L3825

.L3821:
	load.64*    %r16392 <- 0[p]
	load.8      %r16393 <- 0[%r16392]
	scast.32    %r16394 <- (8) %r16393
	seteq.32    %r16395 <- %r16394, $94
	cbr         %r16395, .L3826, .L3827

.L3826:
	load.64*    %r16396 <- 0[p]
	add.64*     %r16397 <- %r16396, $1
	store.64*   %r16397 -> 0[p]
	br          .L3827

.L3827:
	br          .L3828

.L3828:
	load.64*    %r16398 <- 0[p]
	load.8      %r16399 <- 0[%r16398]
	scast.32    %r16400 <- (8) %r16399
	seteq.32    %r16401 <- %r16400, $0
	cbr         %r16401, .L3831, .L3832

.L3831:
	load.64*    %r16402 <- 0[ms]
	load.64*    %r16403 <- 16[%r16402]
	symaddr.64* %r16404 <- <anon symbol:0x1e19640>
	push.64*    %r16403
	push.64*    %r16404
	call.32     %r16405 <- luaL_error
	br          .L3832

.L3832:
	load.64*    %r16406 <- 0[p]
	add.64*     %r16407 <- %r16406, $1
	store.64*   %r16407 -> 0[p]
	load.8      %r16408 <- 0[%r16406]
	scast.32    %r16409 <- (8) %r16408
	seteq.32    %r16410 <- %r16409, $37
	cbr         %r16410, .L3835, .L3834

.L3835:
	load.64*    %r16411 <- 0[p]
	load.8      %r16412 <- 0[%r16411]
	scast.32    %r16413 <- (8) %r16412
	setne.32    %r16414 <- %r16413, $0
	cbr         %r16414, .L3833, .L3834

.L3833:
	load.64*    %r16415 <- 0[p]
	add.64*     %r16416 <- %r16415, $1
	store.64*   %r16416 -> 0[p]
	br          .L3834

.L3834:
	br          .L3829

.L3829:
	load.64*    %r16417 <- 0[p]
	load.8      %r16418 <- 0[%r16417]
	scast.32    %r16419 <- (8) %r16418
	setne.32    %r16420 <- %r16419, $93
	cbr         %r16420, .L3828, .L3830

.L3830:
	load.64*    %r16421 <- 0[p]
	add.64*     %r16422 <- %r16421, $1
	phisrc.64*  %phi754(return) <- %r16422
	br          .L3825

.L3822:
	load.64*    %r16423 <- 0[p]
	phisrc.64*  %phi755(return) <- %r16423
	br          .L3825

.L3825:
	phi.64*     %r16391 <- %phi753(return), %phi754(return), %phi755(return)
	ret.64*     %r16391


match_class:
.L3836:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.32    %arg2 -> 0[cl]
	load.32     %r16424 <- 0[cl]
	push.32     %r16424
	call.32     %r16425 <- tolower
	switch.32   %r16425, 97 -> .L3838, 99 -> .L3839, 100 -> .L3840, 108 -> .L3841, 112 -> .L3842, 115 -> .L3843, 117 -> .L3844, 119 -> .L3845, 120 -> .L3846, 122 -> .L3847, default -> .L3848

.L3838:
	call.64*    %r16426 <- __ctype_b_loc
	load.64*    %r16427 <- 0[%r16426]
	load.32     %r16428 <- 0[c]
	scast.32    %r16429 <- (32) %r16428
	scast.64    %r16430 <- (32) %r16429
	muls.64     %r16431 <- %r16430, $2
	add.64*     %r16432 <- %r16427, %r16431
	load.16     %r16433 <- 0[%r16432]
	cast.32     %r16434 <- (16) %r16433
	and.32      %r16435 <- %r16434, $0x400
	store.32    %r16435 -> 0[res]
	br          .L3837

.L3839:
	call.64*    %r16436 <- __ctype_b_loc
	load.64*    %r16437 <- 0[%r16436]
	load.32     %r16438 <- 0[c]
	scast.32    %r16439 <- (32) %r16438
	scast.64    %r16440 <- (32) %r16439
	muls.64     %r16441 <- %r16440, $2
	add.64*     %r16442 <- %r16437, %r16441
	load.16     %r16443 <- 0[%r16442]
	cast.32     %r16444 <- (16) %r16443
	and.32      %r16445 <- %r16444, $2
	store.32    %r16445 -> 0[res]
	br          .L3837

.L3840:
	call.64*    %r16446 <- __ctype_b_loc
	load.64*    %r16447 <- 0[%r16446]
	load.32     %r16448 <- 0[c]
	scast.32    %r16449 <- (32) %r16448
	scast.64    %r16450 <- (32) %r16449
	muls.64     %r16451 <- %r16450, $2
	add.64*     %r16452 <- %r16447, %r16451
	load.16     %r16453 <- 0[%r16452]
	cast.32     %r16454 <- (16) %r16453
	and.32      %r16455 <- %r16454, $0x800
	store.32    %r16455 -> 0[res]
	br          .L3837

.L3841:
	call.64*    %r16456 <- __ctype_b_loc
	load.64*    %r16457 <- 0[%r16456]
	load.32     %r16458 <- 0[c]
	scast.32    %r16459 <- (32) %r16458
	scast.64    %r16460 <- (32) %r16459
	muls.64     %r16461 <- %r16460, $2
	add.64*     %r16462 <- %r16457, %r16461
	load.16     %r16463 <- 0[%r16462]
	cast.32     %r16464 <- (16) %r16463
	and.32      %r16465 <- %r16464, $512
	store.32    %r16465 -> 0[res]
	br          .L3837

.L3842:
	call.64*    %r16466 <- __ctype_b_loc
	load.64*    %r16467 <- 0[%r16466]
	load.32     %r16468 <- 0[c]
	scast.32    %r16469 <- (32) %r16468
	scast.64    %r16470 <- (32) %r16469
	muls.64     %r16471 <- %r16470, $2
	add.64*     %r16472 <- %r16467, %r16471
	load.16     %r16473 <- 0[%r16472]
	cast.32     %r16474 <- (16) %r16473
	and.32      %r16475 <- %r16474, $4
	store.32    %r16475 -> 0[res]
	br          .L3837

.L3843:
	call.64*    %r16476 <- __ctype_b_loc
	load.64*    %r16477 <- 0[%r16476]
	load.32     %r16478 <- 0[c]
	scast.32    %r16479 <- (32) %r16478
	scast.64    %r16480 <- (32) %r16479
	muls.64     %r16481 <- %r16480, $2
	add.64*     %r16482 <- %r16477, %r16481
	load.16     %r16483 <- 0[%r16482]
	cast.32     %r16484 <- (16) %r16483
	and.32      %r16485 <- %r16484, $0x2000
	store.32    %r16485 -> 0[res]
	br          .L3837

.L3844:
	call.64*    %r16486 <- __ctype_b_loc
	load.64*    %r16487 <- 0[%r16486]
	load.32     %r16488 <- 0[c]
	scast.32    %r16489 <- (32) %r16488
	scast.64    %r16490 <- (32) %r16489
	muls.64     %r16491 <- %r16490, $2
	add.64*     %r16492 <- %r16487, %r16491
	load.16     %r16493 <- 0[%r16492]
	cast.32     %r16494 <- (16) %r16493
	and.32      %r16495 <- %r16494, $256
	store.32    %r16495 -> 0[res]
	br          .L3837

.L3845:
	call.64*    %r16496 <- __ctype_b_loc
	load.64*    %r16497 <- 0[%r16496]
	load.32     %r16498 <- 0[c]
	scast.32    %r16499 <- (32) %r16498
	scast.64    %r16500 <- (32) %r16499
	muls.64     %r16501 <- %r16500, $2
	add.64*     %r16502 <- %r16497, %r16501
	load.16     %r16503 <- 0[%r16502]
	cast.32     %r16504 <- (16) %r16503
	and.32      %r16505 <- %r16504, $8
	store.32    %r16505 -> 0[res]
	br          .L3837

.L3846:
	call.64*    %r16506 <- __ctype_b_loc
	load.64*    %r16507 <- 0[%r16506]
	load.32     %r16508 <- 0[c]
	scast.32    %r16509 <- (32) %r16508
	scast.64    %r16510 <- (32) %r16509
	muls.64     %r16511 <- %r16510, $2
	add.64*     %r16512 <- %r16507, %r16511
	load.16     %r16513 <- 0[%r16512]
	cast.32     %r16514 <- (16) %r16513
	and.32      %r16515 <- %r16514, $0x1000
	store.32    %r16515 -> 0[res]
	br          .L3837

.L3847:
	load.32     %r16516 <- 0[c]
	seteq.32    %r16517 <- %r16516, $0
	store.32    %r16517 -> 0[res]
	br          .L3837

.L3848:
	load.32     %r16518 <- 0[cl]
	load.32     %r16519 <- 0[c]
	seteq.32    %r16520 <- %r16518, %r16519
	phisrc.32   %phi756(return) <- %r16520
	br          .L3849

.L3837:
	load.32     %r16522 <- 0[res]
	load.32     %r16523 <- 0[res]
	seteq.32    %r16524 <- %r16523, $0
	call.64*    %r16525 <- __ctype_b_loc
	load.64*    %r16526 <- 0[%r16525]
	load.32     %r16527 <- 0[cl]
	scast.32    %r16528 <- (32) %r16527
	scast.64    %r16529 <- (32) %r16528
	muls.64     %r16530 <- %r16529, $2
	add.64*     %r16531 <- %r16526, %r16530
	load.16     %r16532 <- 0[%r16531]
	cast.32     %r16533 <- (16) %r16532
	and.32      %r16534 <- %r16533, $512
	select.32   %r16535 <- %r16534, %r16522, %r16524
	phisrc.32   %phi757(return) <- %r16535
	br          .L3849

.L3849:
	phi.32      %r16521 <- %phi756(return), %phi757(return)
	ret.32      %r16521


matchbracketclass:
.L3850:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.64*   %arg2 -> 0[p]
	store.64*   %arg3 -> 0[ec]
	store.32    $1 -> 0[sig]
	load.64*    %r16536 <- 0[p]
	load.8      %r16537 <- 1[%r16536]
	scast.32    %r16538 <- (8) %r16537
	seteq.32    %r16539 <- %r16538, $94
	cbr         %r16539, .L3851, .L3852

.L3851:
	store.32    $0 -> 0[sig]
	load.64*    %r16540 <- 0[p]
	add.64*     %r16541 <- %r16540, $1
	store.64*   %r16541 -> 0[p]
	br          .L3852

.L3852:
	br          .L3856

.L3856:
	load.64*    %r16542 <- 0[p]
	add.64*     %r16543 <- %r16542, $1
	store.64*   %r16543 -> 0[p]
	load.64*    %r16544 <- 0[ec]
	setb.32     %r16545 <- %r16543, %r16544
	cbr         %r16545, .L3853, .L3855

.L3853:
	load.64*    %r16546 <- 0[p]
	load.8      %r16547 <- 0[%r16546]
	scast.32    %r16548 <- (8) %r16547
	seteq.32    %r16549 <- %r16548, $37
	cbr         %r16549, .L3857, .L3858

.L3857:
	load.64*    %r16550 <- 0[p]
	add.64*     %r16551 <- %r16550, $1
	store.64*   %r16551 -> 0[p]
	load.32     %r16552 <- 0[c]
	load.64*    %r16553 <- 0[p]
	load.8      %r16554 <- 0[%r16553]
	scast.8     %r16555 <- (8) %r16554
	cast.32     %r16556 <- (8) %r16555
	push.32     %r16552
	push.32     %r16556
	call.32     %r16557 <- match_class
	cbr         %r16557, .L3859, .L3860

.L3859:
	load.32     %r16558 <- 0[sig]
	phisrc.32   %phi758(return) <- %r16558
	br          .L3861

.L3860:
	br          .L3862

.L3858:
	load.64*    %r16560 <- 0[p]
	load.8      %r16561 <- 1[%r16560]
	scast.32    %r16562 <- (8) %r16561
	seteq.32    %r16563 <- %r16562, $45
	setne.1     %r16564 <- %r16563, $0
	load.64*    %r16565 <- 0[p]
	add.64*     %r16566 <- %r16565, $2
	load.64*    %r16567 <- 0[ec]
	setb.32     %r16568 <- %r16566, %r16567
	setne.1     %r16569 <- %r16568, $0
	and-bool.1  %r16570 <- %r16564, %r16569
	cast.32     %r16571 <- (1) %r16570
	cbr         %r16571, .L3863, .L3864

.L3863:
	load.64*    %r16572 <- 0[p]
	cast.64     %r16573 <- (64) %r16572
	add.64      %r16574 <- %r16573, $2
	ptrcast.64* %r16575 <- (64) %r16574
	store.64*   %r16575 -> 0[p]
	load.64*    %r16576 <- 0[p]
	sub.64*     %r16577 <- %r16576, $2
	load.8      %r16578 <- 0[%r16577]
	scast.8     %r16579 <- (8) %r16578
	cast.32     %r16580 <- (8) %r16579
	load.32     %r16581 <- 0[c]
	setle.32    %r16582 <- %r16580, %r16581
	cbr         %r16582, .L3867, .L3866

.L3867:
	load.32     %r16583 <- 0[c]
	load.64*    %r16584 <- 0[p]
	load.8      %r16585 <- 0[%r16584]
	scast.8     %r16586 <- (8) %r16585
	cast.32     %r16587 <- (8) %r16586
	setle.32    %r16588 <- %r16583, %r16587
	cbr         %r16588, .L3865, .L3866

.L3865:
	load.32     %r16589 <- 0[sig]
	phisrc.32   %phi759(return) <- %r16589
	br          .L3861

.L3866:
	br          .L3868

.L3864:
	load.64*    %r16590 <- 0[p]
	load.8      %r16591 <- 0[%r16590]
	scast.8     %r16592 <- (8) %r16591
	cast.32     %r16593 <- (8) %r16592
	load.32     %r16594 <- 0[c]
	seteq.32    %r16595 <- %r16593, %r16594
	cbr         %r16595, .L3869, .L3870

.L3869:
	load.32     %r16596 <- 0[sig]
	phisrc.32   %phi760(return) <- %r16596
	br          .L3861

.L3870:
	br          .L3868

.L3868:
	br          .L3862

.L3862:
	br          .L3854

.L3854:
	br          .L3856

.L3855:
	load.32     %r16597 <- 0[sig]
	seteq.32    %r16598 <- %r16597, $0
	phisrc.32   %phi761(return) <- %r16598
	br          .L3861

.L3861:
	phi.32      %r16559 <- %phi758(return), %phi759(return), %phi760(return), %phi761(return)
	ret.32      %r16559


singlematch:
.L3871:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.64*   %arg2 -> 0[p]
	store.64*   %arg3 -> 0[ep]
	load.64*    %r16599 <- 0[p]
	load.8      %r16600 <- 0[%r16599]
	switch.8    %r16600, 37 -> .L3874, 46 -> .L3873, 91 -> .L3875, default -> .L3876

.L3873:
	phisrc.32   %phi762(return) <- $1
	br          .L3877

.L3874:
	load.32     %r16602 <- 0[c]
	load.64*    %r16603 <- 0[p]
	load.8      %r16604 <- 1[%r16603]
	scast.8     %r16605 <- (8) %r16604
	cast.32     %r16606 <- (8) %r16605
	push.32     %r16602
	push.32     %r16606
	call.32     %r16607 <- match_class
	phisrc.32   %phi763(return) <- %r16607
	br          .L3877

.L3875:
	load.32     %r16608 <- 0[c]
	load.64*    %r16609 <- 0[p]
	load.64*    %r16610 <- 0[ep]
	sub.64*     %r16611 <- %r16610, $1
	push.32     %r16608
	push.64*    %r16609
	push.64*    %r16611
	call.32     %r16612 <- matchbracketclass
	phisrc.32   %phi764(return) <- %r16612
	br          .L3877

.L3876:
	load.64*    %r16613 <- 0[p]
	load.8      %r16614 <- 0[%r16613]
	scast.8     %r16615 <- (8) %r16614
	cast.32     %r16616 <- (8) %r16615
	load.32     %r16617 <- 0[c]
	seteq.32    %r16618 <- %r16616, %r16617
	phisrc.32   %phi765(return) <- %r16618
	br          .L3877

.L3877:
	phi.32      %r16601 <- %phi762(return), %phi763(return), %phi764(return), %phi765(return)
	ret.32      %r16601


matchbalance:
.L3878:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	load.64*    %r16619 <- 0[p]
	load.8      %r16620 <- 0[%r16619]
	scast.32    %r16621 <- (8) %r16620
	seteq.32    %r16622 <- %r16621, $0
	cbr         %r16622, .L3879, .L3881

.L3881:
	load.64*    %r16623 <- 0[p]
	load.8      %r16624 <- 1[%r16623]
	scast.32    %r16625 <- (8) %r16624
	seteq.32    %r16626 <- %r16625, $0
	cbr         %r16626, .L3879, .L3880

.L3879:
	load.64*    %r16627 <- 0[ms]
	load.64*    %r16628 <- 16[%r16627]
	symaddr.64* %r16629 <- <anon symbol:0x1e25180>
	push.64*    %r16628
	push.64*    %r16629
	call.32     %r16630 <- luaL_error
	br          .L3880

.L3880:
	load.64*    %r16631 <- 0[s]
	load.8      %r16632 <- 0[%r16631]
	scast.32    %r16633 <- (8) %r16632
	load.64*    %r16634 <- 0[p]
	load.8      %r16635 <- 0[%r16634]
	scast.32    %r16636 <- (8) %r16635
	setne.32    %r16637 <- %r16633, %r16636
	cbr         %r16637, .L3882, .L3883

.L3882:
	phisrc.64*  %phi766(return) <- $0
	br          .L3884

.L3883:
	load.64*    %r16639 <- 0[p]
	load.8      %r16640 <- 0[%r16639]
	scast.32    %r16641 <- (8) %r16640
	store.32    %r16641 -> 0[b]
	load.64*    %r16642 <- 0[p]
	load.8      %r16643 <- 1[%r16642]
	scast.32    %r16644 <- (8) %r16643
	store.32    %r16644 -> 0[e]
	store.32    $1 -> 0[cont]
	br          .L3889

.L3889:
	load.64*    %r16645 <- 0[s]
	add.64*     %r16646 <- %r16645, $1
	store.64*   %r16646 -> 0[s]
	load.64*    %r16647 <- 0[ms]
	load.64*    %r16648 <- 8[%r16647]
	setb.32     %r16649 <- %r16646, %r16648
	cbr         %r16649, .L3886, .L3888

.L3886:
	load.64*    %r16650 <- 0[s]
	load.8      %r16651 <- 0[%r16650]
	scast.32    %r16652 <- (8) %r16651
	load.32     %r16653 <- 0[e]
	seteq.32    %r16654 <- %r16652, %r16653
	cbr         %r16654, .L3890, .L3891

.L3890:
	load.32     %r16655 <- 0[cont]
	sub.32      %r16656 <- %r16655, $1
	store.32    %r16656 -> 0[cont]
	seteq.32    %r16657 <- %r16656, $0
	cbr         %r16657, .L3892, .L3893

.L3892:
	load.64*    %r16658 <- 0[s]
	add.64*     %r16659 <- %r16658, $1
	phisrc.64*  %phi767(return) <- %r16659
	br          .L3884

.L3893:
	br          .L3894

.L3891:
	load.64*    %r16660 <- 0[s]
	load.8      %r16661 <- 0[%r16660]
	scast.32    %r16662 <- (8) %r16661
	load.32     %r16663 <- 0[b]
	seteq.32    %r16664 <- %r16662, %r16663
	cbr         %r16664, .L3895, .L3896

.L3895:
	load.32     %r16665 <- 0[cont]
	add.32      %r16666 <- %r16665, $1
	store.32    %r16666 -> 0[cont]
	br          .L3896

.L3896:
	br          .L3894

.L3894:
	br          .L3887

.L3887:
	br          .L3889

.L3888:
	br          .L3885

.L3885:
	phisrc.64*  %phi768(return) <- $0
	br          .L3884

.L3884:
	phi.64*     %r16638 <- %phi766(return), %phi767(return), %phi768(return)
	ret.64*     %r16638


max_expand:
.L3897:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.64*   %arg4 -> 0[ep]
	store.64    $0 -> 0[i]
	br          .L3901

.L3901:
	load.64*    %r16667 <- 0[s]
	load.64     %r16668 <- 0[i]
	add.64*     %r16669 <- %r16667, %r16668
	load.64*    %r16670 <- 0[ms]
	load.64*    %r16671 <- 8[%r16670]
	setb.32     %r16672 <- %r16669, %r16671
	cbr         %r16672, .L3902, .L3900

.L3902:
	load.64*    %r16673 <- 0[s]
	load.64     %r16674 <- 0[i]
	add.64*     %r16675 <- %r16673, %r16674
	load.8      %r16676 <- 0[%r16675]
	scast.8     %r16677 <- (8) %r16676
	cast.32     %r16678 <- (8) %r16677
	load.64*    %r16679 <- 0[p]
	load.64*    %r16680 <- 0[ep]
	push.32     %r16678
	push.64*    %r16679
	push.64*    %r16680
	call.32     %r16681 <- singlematch
	cbr         %r16681, .L3898, .L3900

.L3898:
	load.64     %r16682 <- 0[i]
	add.64      %r16683 <- %r16682, $1
	store.64    %r16683 -> 0[i]
	br          .L3899

.L3899:
	br          .L3901

.L3900:
	br          .L3906

.L3906:
	load.64     %r16684 <- 0[i]
	setge.32    %r16685 <- %r16684, $0
	cbr         %r16685, .L3903, .L3905

.L3903:
	load.64*    %r16686 <- 0[ms]
	load.64*    %r16687 <- 0[s]
	load.64     %r16688 <- 0[i]
	add.64*     %r16689 <- %r16687, %r16688
	load.64*    %r16690 <- 0[ep]
	add.64*     %r16691 <- %r16690, $1
	push.64*    %r16686
	push.64*    %r16689
	push.64*    %r16691
	call.64*    %r16692 <- match
	store.64*   %r16692 -> 0[res]
	load.64*    %r16693 <- 0[res]
	cbr         %r16693, .L3907, .L3908

.L3907:
	load.64*    %r16694 <- 0[res]
	phisrc.64*  %phi769(return) <- %r16694
	br          .L3909

.L3908:
	load.64     %r16696 <- 0[i]
	sub.64      %r16697 <- %r16696, $1
	store.64    %r16697 -> 0[i]
	br          .L3904

.L3904:
	br          .L3906

.L3905:
	phisrc.64*  %phi770(return) <- $0
	br          .L3909

.L3909:
	phi.64*     %r16695 <- %phi769(return), %phi770(return)
	ret.64*     %r16695


min_expand:
.L3910:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.64*   %arg4 -> 0[ep]
	br          .L3914

.L3914:
	br          .L3911

.L3911:
	load.64*    %r16698 <- 0[ms]
	load.64*    %r16699 <- 0[s]
	load.64*    %r16700 <- 0[ep]
	add.64*     %r16701 <- %r16700, $1
	push.64*    %r16698
	push.64*    %r16699
	push.64*    %r16701
	call.64*    %r16702 <- match
	store.64*   %r16702 -> 0[res]
	load.64*    %r16703 <- 0[res]
	setne.32    %r16704 <- %r16703, $0
	cbr         %r16704, .L3915, .L3916

.L3915:
	load.64*    %r16705 <- 0[res]
	phisrc.64*  %phi771(return) <- %r16705
	br          .L3917

.L3916:
	load.64*    %r16707 <- 0[s]
	load.64*    %r16708 <- 0[ms]
	load.64*    %r16709 <- 8[%r16708]
	setb.32     %r16710 <- %r16707, %r16709
	cbr         %r16710, .L3921, .L3920

.L3921:
	load.64*    %r16711 <- 0[s]
	load.8      %r16712 <- 0[%r16711]
	scast.8     %r16713 <- (8) %r16712
	cast.32     %r16714 <- (8) %r16713
	load.64*    %r16715 <- 0[p]
	load.64*    %r16716 <- 0[ep]
	push.32     %r16714
	push.64*    %r16715
	push.64*    %r16716
	call.32     %r16717 <- singlematch
	cbr         %r16717, .L3919, .L3920

.L3919:
	load.64*    %r16718 <- 0[s]
	add.64*     %r16719 <- %r16718, $1
	store.64*   %r16719 -> 0[s]
	br          .L3922

.L3920:
	phisrc.64*  %phi772(return) <- $0
	br          .L3917

.L3922:
	br          .L3918

.L3918:
	br          .L3912

.L3912:
	br          .L3914

.L3917:
	phi.64*     %r16706 <- %phi771(return), %phi772(return)
	ret.64*     %r16706


start_capture:
.L3923:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.32    %arg4 -> 0[what]
	load.64*    %r16720 <- 0[ms]
	load.32     %r16721 <- 24[%r16720]
	store.32    %r16721 -> 0[level]
	load.32     %r16722 <- 0[level]
	setge.32    %r16723 <- %r16722, $32
	cbr         %r16723, .L3924, .L3925

.L3924:
	load.64*    %r16724 <- 0[ms]
	load.64*    %r16725 <- 16[%r16724]
	symaddr.64* %r16726 <- <anon symbol:0x1e26570>
	push.64*    %r16725
	push.64*    %r16726
	call.32     %r16727 <- luaL_error
	br          .L3925

.L3925:
	load.64*    %r16728 <- 0[s]
	load.64*    %r16729 <- 0[ms]
	add.64*     %r16730 <- %r16729, $32
	load.32     %r16731 <- 0[level]
	scast.64    %r16732 <- (32) %r16731
	muls.64     %r16733 <- %r16732, $16
	add.64*     %r16734 <- %r16730, %r16733
	store.64*   %r16728 -> 0[%r16734]
	load.32     %r16735 <- 0[what]
	scast.64    %r16736 <- (32) %r16735
	load.64*    %r16737 <- 0[ms]
	add.64*     %r16738 <- %r16737, $32
	load.32     %r16739 <- 0[level]
	scast.64    %r16740 <- (32) %r16739
	muls.64     %r16741 <- %r16740, $16
	add.64*     %r16742 <- %r16738, %r16741
	store.64    %r16736 -> 8[%r16742]
	load.32     %r16743 <- 0[level]
	add.32      %r16744 <- %r16743, $1
	load.64*    %r16745 <- 0[ms]
	store.32    %r16744 -> 24[%r16745]
	load.64*    %r16746 <- 0[ms]
	load.64*    %r16747 <- 0[s]
	load.64*    %r16748 <- 0[p]
	push.64*    %r16746
	push.64*    %r16747
	push.64*    %r16748
	call.64*    %r16749 <- match
	store.64*   %r16749 -> 0[res]
	seteq.32    %r16750 <- %r16749, $0
	cbr         %r16750, .L3926, .L3927

.L3926:
	load.64*    %r16751 <- 0[ms]
	load.32     %r16752 <- 24[%r16751]
	sub.32      %r16753 <- %r16752, $1
	store.32    %r16753 -> 24[%r16751]
	br          .L3927

.L3927:
	load.64*    %r16754 <- 0[res]
	phisrc.64*  %phi773(return) <- %r16754
	br          .L3928

.L3928:
	phi.64*     %r16755 <- %phi773(return)
	ret.64*     %r16754


end_capture:
.L3929:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	load.64*    %r16756 <- 0[ms]
	push.64*    %r16756
	call.32     %r16757 <- capture_to_close
	store.32    %r16757 -> 0[l]
	load.64*    %r16758 <- 0[s]
	load.64*    %r16759 <- 0[ms]
	add.64*     %r16760 <- %r16759, $32
	load.32     %r16761 <- 0[l]
	scast.64    %r16762 <- (32) %r16761
	muls.64     %r16763 <- %r16762, $16
	add.64*     %r16764 <- %r16760, %r16763
	load.64*    %r16765 <- 0[%r16764]
	sub.64      %r16766 <- %r16758, %r16765
	load.64*    %r16767 <- 0[ms]
	add.64*     %r16768 <- %r16767, $32
	load.32     %r16769 <- 0[l]
	scast.64    %r16770 <- (32) %r16769
	muls.64     %r16771 <- %r16770, $16
	add.64*     %r16772 <- %r16768, %r16771
	store.64    %r16766 -> 8[%r16772]
	load.64*    %r16773 <- 0[ms]
	load.64*    %r16774 <- 0[s]
	load.64*    %r16775 <- 0[p]
	push.64*    %r16773
	push.64*    %r16774
	push.64*    %r16775
	call.64*    %r16776 <- match
	store.64*   %r16776 -> 0[res]
	seteq.32    %r16777 <- %r16776, $0
	cbr         %r16777, .L3930, .L3931

.L3930:
	load.64*    %r16778 <- 0[ms]
	add.64*     %r16779 <- %r16778, $32
	load.32     %r16780 <- 0[l]
	scast.64    %r16781 <- (32) %r16780
	muls.64     %r16782 <- %r16781, $16
	add.64*     %r16783 <- %r16779, %r16782
	store.64    $-1 -> 8[%r16783]
	br          .L3931

.L3931:
	load.64*    %r16784 <- 0[res]
	phisrc.64*  %phi774(return) <- %r16784
	br          .L3932

.L3932:
	phi.64*     %r16785 <- %phi774(return)
	ret.64*     %r16784


match_capture:
.L3933:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.32    %arg3 -> 0[l]
	load.64*    %r16786 <- 0[ms]
	load.32     %r16787 <- 0[l]
	push.64*    %r16786
	push.32     %r16787
	call.32     %r16788 <- check_capture
	store.32    %r16788 -> 0[l]
	load.64*    %r16789 <- 0[ms]
	add.64*     %r16790 <- %r16789, $32
	load.32     %r16791 <- 0[l]
	scast.64    %r16792 <- (32) %r16791
	muls.64     %r16793 <- %r16792, $16
	add.64*     %r16794 <- %r16790, %r16793
	load.64     %r16795 <- 8[%r16794]
	scast.64    %r16796 <- (64) %r16795
	store.64    %r16796 -> 0[len]
	load.64*    %r16797 <- 0[ms]
	load.64*    %r16798 <- 8[%r16797]
	load.64*    %r16799 <- 0[s]
	sub.64      %r16800 <- %r16798, %r16799
	scast.64    %r16801 <- (64) %r16800
	load.64     %r16802 <- 0[len]
	setae.32    %r16803 <- %r16801, %r16802
	cbr         %r16803, .L3936, .L3935

.L3936:
	load.64*    %r16804 <- 0[ms]
	add.64*     %r16805 <- %r16804, $32
	load.32     %r16806 <- 0[l]
	scast.64    %r16807 <- (32) %r16806
	muls.64     %r16808 <- %r16807, $16
	add.64*     %r16809 <- %r16805, %r16808
	load.64*    %r16810 <- 0[%r16809]
	cast.64*    %r16811 <- (64) %r16810
	load.64*    %r16812 <- 0[s]
	cast.64*    %r16813 <- (64) %r16812
	load.64     %r16814 <- 0[len]
	push.64*    %r16811
	push.64*    %r16813
	push.64     %r16814
	call.32     %r16815 <- memcmp
	seteq.32    %r16816 <- %r16815, $0
	cbr         %r16816, .L3934, .L3935

.L3934:
	load.64*    %r16817 <- 0[s]
	load.64     %r16818 <- 0[len]
	add.64*     %r16819 <- %r16817, %r16818
	phisrc.64*  %phi775(return) <- %r16819
	br          .L3937

.L3935:
	phisrc.64*  %phi776(return) <- $0
	br          .L3937

.L3937:
	phi.64*     %r16820 <- %phi775(return), %phi776(return)
	ret.64*     %r16820


match:
.L3939:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	br          .L3940

.L3940:
	load.64*    %r16821 <- 0[p]
	load.8      %r16822 <- 0[%r16821]
	switch.8    %r16822, 0 -> .L3945, 36 -> .L3946, 37 -> .L3944, 40 -> .L3942, 41 -> .L3943, default -> .L3947

.L3942:
	load.64*    %r16823 <- 0[p]
	load.8      %r16824 <- 1[%r16823]
	scast.32    %r16825 <- (8) %r16824
	seteq.32    %r16826 <- %r16825, $41
	cbr         %r16826, .L3948, .L3949

.L3948:
	load.64*    %r16827 <- 0[ms]
	load.64*    %r16828 <- 0[s]
	load.64*    %r16829 <- 0[p]
	add.64*     %r16830 <- %r16829, $2
	push.64*    %r16827
	push.64*    %r16828
	push.64*    %r16830
	push.32     $0xfffffffe
	call.64*    %r16831 <- start_capture
	phisrc.64*  %phi777(return) <- %r16831
	br          .L3950

.L3949:
	load.64*    %r16833 <- 0[ms]
	load.64*    %r16834 <- 0[s]
	load.64*    %r16835 <- 0[p]
	add.64*     %r16836 <- %r16835, $1
	push.64*    %r16833
	push.64*    %r16834
	push.64*    %r16836
	push.32     $0xffffffff
	call.64*    %r16837 <- start_capture
	phisrc.64*  %phi778(return) <- %r16837
	br          .L3950

.L3943:
	load.64*    %r16838 <- 0[ms]
	load.64*    %r16839 <- 0[s]
	load.64*    %r16840 <- 0[p]
	add.64*     %r16841 <- %r16840, $1
	push.64*    %r16838
	push.64*    %r16839
	push.64*    %r16841
	call.64*    %r16842 <- end_capture
	phisrc.64*  %phi779(return) <- %r16842
	br          .L3950

.L3944:
	load.64*    %r16843 <- 0[p]
	load.8      %r16844 <- 1[%r16843]
	switch.8    %r16844, 98 -> .L3953, 102 -> .L3954, default -> .L3955

.L3953:
	load.64*    %r16845 <- 0[ms]
	load.64*    %r16846 <- 0[s]
	load.64*    %r16847 <- 0[p]
	add.64*     %r16848 <- %r16847, $2
	push.64*    %r16845
	push.64*    %r16846
	push.64*    %r16848
	call.64*    %r16849 <- matchbalance
	store.64*   %r16849 -> 0[s]
	load.64*    %r16850 <- 0[s]
	seteq.32    %r16851 <- %r16850, $0
	cbr         %r16851, .L3956, .L3957

.L3956:
	phisrc.64*  %phi780(return) <- $0
	br          .L3950

.L3957:
	load.64*    %r16852 <- 0[p]
	cast.64     %r16853 <- (64) %r16852
	add.64      %r16854 <- %r16853, $4
	ptrcast.64* %r16855 <- (64) %r16854
	store.64*   %r16855 -> 0[p]
	br          .L3940

.L3954:
	load.64*    %r16856 <- 0[p]
	cast.64     %r16857 <- (64) %r16856
	add.64      %r16858 <- %r16857, $2
	ptrcast.64* %r16859 <- (64) %r16858
	store.64*   %r16859 -> 0[p]
	load.64*    %r16860 <- 0[p]
	load.8      %r16861 <- 0[%r16860]
	scast.32    %r16862 <- (8) %r16861
	setne.32    %r16863 <- %r16862, $91
	cbr         %r16863, .L3958, .L3959

.L3958:
	load.64*    %r16864 <- 0[ms]
	load.64*    %r16865 <- 16[%r16864]
	symaddr.64* %r16866 <- <anon symbol:0x1e1bc50>
	push.64*    %r16865
	push.64*    %r16866
	call.32     %r16867 <- luaL_error
	br          .L3959

.L3959:
	load.64*    %r16868 <- 0[ms]
	load.64*    %r16869 <- 0[p]
	push.64*    %r16868
	push.64*    %r16869
	call.64*    %r16870 <- classend
	store.64*   %r16870 -> 0[ep]
	load.64*    %r16871 <- 0[s]
	load.64*    %r16872 <- 0[ms]
	load.64*    %r16873 <- 0[%r16872]
	seteq.32    %r16874 <- %r16871, %r16873
	cbr         %r16874, .L3960, .L3961

.L3960:
	phisrc.32   %phi781 <- $0
	br          .L3962

.L3961:
	load.64*    %r16875 <- 0[s]
	sub.64*     %r16876 <- %r16875, $1
	load.8      %r16877 <- 0[%r16876]
	scast.32    %r16878 <- (8) %r16877
	phisrc.32   %phi782 <- %r16878
	br          .L3962

.L3962:
	phi.32      %r16879 <- %phi781, %phi782
	scast.8     %r16880 <- (32) %r16879
	store.8     %r16880 -> 0[previous]
	load.8      %r16881 <- 0[previous]
	scast.8     %r16882 <- (8) %r16881
	cast.32     %r16883 <- (8) %r16882
	load.64*    %r16884 <- 0[p]
	load.64*    %r16885 <- 0[ep]
	sub.64*     %r16886 <- %r16885, $1
	push.32     %r16883
	push.64*    %r16884
	push.64*    %r16886
	call.32     %r16887 <- matchbracketclass
	cbr         %r16887, .L3963, .L3965

.L3965:
	load.64*    %r16888 <- 0[s]
	load.8      %r16889 <- 0[%r16888]
	scast.8     %r16890 <- (8) %r16889
	cast.32     %r16891 <- (8) %r16890
	load.64*    %r16892 <- 0[p]
	load.64*    %r16893 <- 0[ep]
	sub.64*     %r16894 <- %r16893, $1
	push.32     %r16891
	push.64*    %r16892
	push.64*    %r16894
	call.32     %r16895 <- matchbracketclass
	cbr         %r16895, .L3964, .L3963

.L3963:
	phisrc.64*  %phi783(return) <- $0
	br          .L3950

.L3964:
	load.64*    %r16896 <- 0[ep]
	store.64*   %r16896 -> 0[p]
	br          .L3940

.L3955:
	call.64*    %r16897 <- __ctype_b_loc
	load.64*    %r16898 <- 0[%r16897]
	load.64*    %r16899 <- 0[p]
	load.8      %r16900 <- 1[%r16899]
	scast.8     %r16901 <- (8) %r16900
	cast.32     %r16902 <- (8) %r16901
	scast.64    %r16903 <- (32) %r16902
	muls.64     %r16904 <- %r16903, $2
	add.64*     %r16905 <- %r16898, %r16904
	load.16     %r16906 <- 0[%r16905]
	cast.32     %r16907 <- (16) %r16906
	and.32      %r16908 <- %r16907, $0x800
	cbr         %r16908, .L3966, .L3967

.L3966:
	load.64*    %r16909 <- 0[ms]
	load.64*    %r16910 <- 0[s]
	load.64*    %r16911 <- 0[p]
	load.8      %r16912 <- 1[%r16911]
	scast.8     %r16913 <- (8) %r16912
	cast.32     %r16914 <- (8) %r16913
	push.64*    %r16909
	push.64*    %r16910
	push.32     %r16914
	call.64*    %r16915 <- match_capture
	store.64*   %r16915 -> 0[s]
	load.64*    %r16916 <- 0[s]
	seteq.32    %r16917 <- %r16916, $0
	cbr         %r16917, .L3968, .L3969

.L3968:
	phisrc.64*  %phi784(return) <- $0
	br          .L3950

.L3969:
	load.64*    %r16918 <- 0[p]
	cast.64     %r16919 <- (64) %r16918
	add.64      %r16920 <- %r16919, $2
	ptrcast.64* %r16921 <- (64) %r16920
	store.64*   %r16921 -> 0[p]
	br          .L3940

.L3967:
	br          .L3970

.L3945:
	load.64*    %r16922 <- 0[s]
	phisrc.64*  %phi785(return) <- %r16922
	br          .L3950

.L3946:
	load.64*    %r16923 <- 0[p]
	load.8      %r16924 <- 1[%r16923]
	scast.32    %r16925 <- (8) %r16924
	seteq.32    %r16926 <- %r16925, $0
	cbr         %r16926, .L3971, .L3972

.L3971:
	load.64*    %r16927 <- 0[s]
	load.64*    %r16928 <- 0[s]
	load.64*    %r16929 <- 0[ms]
	load.64*    %r16930 <- 8[%r16929]
	seteq.32    %r16931 <- %r16928, %r16930
	select.64*  %r16932 <- %r16931, %r16927, $0
	phisrc.64*  %phi786(return) <- %r16932
	br          .L3950

.L3972:
	br          .L3970

.L3947:
	br          .L3970

.L3970:
	load.64*    %r16933 <- 0[ms]
	load.64*    %r16934 <- 0[p]
	push.64*    %r16933
	push.64*    %r16934
	call.64*    %r16935 <- classend
	store.64*   %r16935 -> 0[ep]
	load.64*    %r16936 <- 0[s]
	load.64*    %r16937 <- 0[ms]
	load.64*    %r16938 <- 8[%r16937]
	setb.32     %r16939 <- %r16936, %r16938
	cbr         %r16939, .L3974, .L3975

.L3974:
	load.64*    %r16940 <- 0[s]
	load.8      %r16941 <- 0[%r16940]
	scast.8     %r16942 <- (8) %r16941
	cast.32     %r16943 <- (8) %r16942
	load.64*    %r16944 <- 0[p]
	load.64*    %r16945 <- 0[ep]
	push.32     %r16943
	push.64*    %r16944
	push.64*    %r16945
	call.32     %r16946 <- singlematch
	phisrc.32   %phi787 <- %r16946
	br          .L3976

.L3975:
	phisrc.32   %phi788 <- $0
	br          .L3976

.L3976:
	phi.32      %r16947 <- %phi787, %phi788
	store.32    %r16947 -> 0[m]
	load.64*    %r16948 <- 0[ep]
	load.8      %r16949 <- 0[%r16948]
	switch.8    %r16949, 42 -> .L3979, 43 -> .L3980, 45 -> .L3981, 63 -> .L3978, default -> .L3982

.L3978:
	load.32     %r16950 <- 0[m]
	cbr         %r16950, .L3985, .L3984

.L3985:
	load.64*    %r16951 <- 0[ms]
	load.64*    %r16952 <- 0[s]
	add.64*     %r16953 <- %r16952, $1
	load.64*    %r16954 <- 0[ep]
	add.64*     %r16955 <- %r16954, $1
	push.64*    %r16951
	push.64*    %r16953
	push.64*    %r16955
	call.64*    %r16956 <- match
	store.64*   %r16956 -> 0[res]
	setne.32    %r16957 <- %r16956, $0
	cbr         %r16957, .L3983, .L3984

.L3983:
	load.64*    %r16958 <- 0[res]
	phisrc.64*  %phi789(return) <- %r16958
	br          .L3950

.L3984:
	load.64*    %r16959 <- 0[ep]
	add.64*     %r16960 <- %r16959, $1
	store.64*   %r16960 -> 0[p]
	br          .L3940

.L3979:
	load.64*    %r16961 <- 0[ms]
	load.64*    %r16962 <- 0[s]
	load.64*    %r16963 <- 0[p]
	load.64*    %r16964 <- 0[ep]
	push.64*    %r16961
	push.64*    %r16962
	push.64*    %r16963
	push.64*    %r16964
	call.64*    %r16965 <- max_expand
	phisrc.64*  %phi790(return) <- %r16965
	br          .L3950

.L3980:
	load.32     %r16966 <- 0[m]
	cbr         %r16966, .L3986, .L3987

.L3986:
	load.64*    %r16967 <- 0[ms]
	load.64*    %r16968 <- 0[s]
	add.64*     %r16969 <- %r16968, $1
	load.64*    %r16970 <- 0[p]
	load.64*    %r16971 <- 0[ep]
	push.64*    %r16967
	push.64*    %r16969
	push.64*    %r16970
	push.64*    %r16971
	call.64*    %r16972 <- max_expand
	phisrc.64*  %phi791 <- %r16972
	br          .L3988

.L3987:
	phisrc.64*  %phi792 <- $0
	br          .L3988

.L3988:
	phi.64*     %r16973 <- %phi791, %phi792
	phisrc.64*  %phi793(return) <- %r16973
	br          .L3950

.L3981:
	load.64*    %r16974 <- 0[ms]
	load.64*    %r16975 <- 0[s]
	load.64*    %r16976 <- 0[p]
	load.64*    %r16977 <- 0[ep]
	push.64*    %r16974
	push.64*    %r16975
	push.64*    %r16976
	push.64*    %r16977
	call.64*    %r16978 <- min_expand
	phisrc.64*  %phi794(return) <- %r16978
	br          .L3950

.L3982:
	load.32     %r16979 <- 0[m]
	cbr         %r16979, .L3990, .L3989

.L3989:
	phisrc.64*  %phi795(return) <- $0
	br          .L3950

.L3990:
	load.64*    %r16980 <- 0[s]
	add.64*     %r16981 <- %r16980, $1
	store.64*   %r16981 -> 0[s]
	load.64*    %r16982 <- 0[ep]
	store.64*   %r16982 -> 0[p]
	br          .L3940

.L3950:
	phi.64*     %r16832 <- %phi777(return), %phi778(return), %phi779(return), %phi780(return), %phi783(return), %phi784(return), %phi785(return), %phi786(return), %phi789(return), %phi790(return), %phi793(return), %phi794(return), %phi795(return)
	ret.64*     %r16832


lmemfind:
.L3991:
	<entry-point>
	store.64*   %arg1 -> 0[s1]
	store.64    %arg2 -> 0[l1]
	store.64*   %arg3 -> 0[s2]
	store.64    %arg4 -> 0[l2]
	load.64     %r16983 <- 0[l2]
	seteq.32    %r16984 <- %r16983, $0
	cbr         %r16984, .L3992, .L3993

.L3992:
	load.64*    %r16985 <- 0[s1]
	phisrc.64*  %phi796(return) <- %r16985
	br          .L3994

.L3993:
	load.64     %r16987 <- 0[l2]
	load.64     %r16988 <- 0[l1]
	seta.32     %r16989 <- %r16987, %r16988
	cbr         %r16989, .L3996, .L3997

.L3996:
	phisrc.64*  %phi797(return) <- $0
	br          .L3994

.L3997:
	load.64     %r16990 <- 0[l2]
	sub.64      %r16991 <- %r16990, $1
	store.64    %r16991 -> 0[l2]
	load.64     %r16992 <- 0[l1]
	load.64     %r16993 <- 0[l2]
	sub.64      %r16994 <- %r16992, %r16993
	store.64    %r16994 -> 0[l1]
	br          .L4002

.L4002:
	load.64     %r16995 <- 0[l1]
	seta.32     %r16996 <- %r16995, $0
	cbr         %r16996, .L4003, .L4001

.L4003:
	load.64*    %r16997 <- 0[s1]
	cast.64*    %r16998 <- (64) %r16997
	load.64*    %r16999 <- 0[s2]
	load.8      %r17000 <- 0[%r16999]
	scast.32    %r17001 <- (8) %r17000
	load.64     %r17002 <- 0[l1]
	push.64*    %r16998
	push.32     %r17001
	push.64     %r17002
	call.64*    %r17003 <- memchr
	ptrcast.64* %r17004 <- (64) %r17003
	store.64*   %r17004 -> 0[init]
	setne.32    %r17005 <- %r17004, $0
	cbr         %r17005, .L3999, .L4001

.L3999:
	load.64*    %r17006 <- 0[init]
	add.64*     %r17007 <- %r17006, $1
	store.64*   %r17007 -> 0[init]
	load.64*    %r17008 <- 0[init]
	cast.64*    %r17009 <- (64) %r17008
	load.64*    %r17010 <- 0[s2]
	add.64*     %r17011 <- %r17010, $1
	cast.64*    %r17012 <- (64) %r17011
	load.64     %r17013 <- 0[l2]
	push.64*    %r17009
	push.64*    %r17012
	push.64     %r17013
	call.32     %r17014 <- memcmp
	seteq.32    %r17015 <- %r17014, $0
	cbr         %r17015, .L4004, .L4005

.L4004:
	load.64*    %r17016 <- 0[init]
	sub.64*     %r17017 <- %r17016, $1
	phisrc.64*  %phi798(return) <- %r17017
	br          .L3994

.L4005:
	load.64*    %r17018 <- 0[init]
	load.64*    %r17019 <- 0[s1]
	sub.64      %r17020 <- %r17018, %r17019
	scast.64    %r17021 <- (64) %r17020
	load.64     %r17022 <- 0[l1]
	cast.64     %r17023 <- (64) %r17022
	sub.64      %r17024 <- %r17023, %r17021
	cast.64     %r17025 <- (64) %r17024
	store.64    %r17025 -> 0[l1]
	load.64*    %r17026 <- 0[init]
	store.64*   %r17026 -> 0[s1]
	br          .L4006

.L4006:
	br          .L4000

.L4000:
	br          .L4002

.L4001:
	phisrc.64*  %phi799(return) <- $0
	br          .L3994

.L3994:
	phi.64*     %r16986 <- %phi796(return), %phi797(return), %phi798(return), %phi799(return)
	ret.64*     %r16986


push_onecapture:
.L4007:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.32     %r17027 <- 0[i]
	load.64*    %r17028 <- 0[ms]
	load.32     %r17029 <- 24[%r17028]
	setge.32    %r17030 <- %r17027, %r17029
	cbr         %r17030, .L4008, .L4009

.L4008:
	load.32     %r17031 <- 0[i]
	seteq.32    %r17032 <- %r17031, $0
	cbr         %r17032, .L4010, .L4011

.L4010:
	load.64*    %r17033 <- 0[ms]
	load.64*    %r17034 <- 16[%r17033]
	load.64*    %r17035 <- 0[s]
	load.64*    %r17036 <- 0[e]
	load.64*    %r17037 <- 0[s]
	sub.64      %r17038 <- %r17036, %r17037
	scast.64    %r17039 <- (64) %r17038
	push.64*    %r17034
	push.64*    %r17035
	push.64     %r17039
	call        lua_pushlstring
	br          .L4012

.L4011:
	load.64*    %r17040 <- 0[ms]
	load.64*    %r17041 <- 16[%r17040]
	symaddr.64* %r17042 <- <anon symbol:0x1e29490>
	push.64*    %r17041
	push.64*    %r17042
	call.32     %r17043 <- luaL_error
	br          .L4012

.L4012:
	br          .L4013

.L4009:
	load.64*    %r17044 <- 0[ms]
	add.64*     %r17045 <- %r17044, $32
	load.32     %r17046 <- 0[i]
	scast.64    %r17047 <- (32) %r17046
	muls.64     %r17048 <- %r17047, $16
	add.64*     %r17049 <- %r17045, %r17048
	load.64     %r17050 <- 8[%r17049]
	store.64    %r17050 -> 0[l]
	load.64     %r17051 <- 0[l]
	seteq.32    %r17052 <- %r17051, $-1
	cbr         %r17052, .L4014, .L4015

.L4014:
	load.64*    %r17053 <- 0[ms]
	load.64*    %r17054 <- 16[%r17053]
	symaddr.64* %r17055 <- <anon symbol:0x1e29e88>
	push.64*    %r17054
	push.64*    %r17055
	call.32     %r17056 <- luaL_error
	br          .L4015

.L4015:
	load.64     %r17057 <- 0[l]
	seteq.32    %r17058 <- %r17057, $-2
	cbr         %r17058, .L4016, .L4017

.L4016:
	load.64*    %r17059 <- 0[ms]
	load.64*    %r17060 <- 16[%r17059]
	load.64*    %r17061 <- 0[ms]
	add.64*     %r17062 <- %r17061, $32
	load.32     %r17063 <- 0[i]
	scast.64    %r17064 <- (32) %r17063
	muls.64     %r17065 <- %r17064, $16
	add.64*     %r17066 <- %r17062, %r17065
	load.64*    %r17067 <- 0[%r17066]
	load.64*    %r17068 <- 0[ms]
	load.64*    %r17069 <- 0[%r17068]
	sub.64      %r17070 <- %r17067, %r17069
	add.64      %r17071 <- %r17070, $1
	push.64*    %r17060
	push.64     %r17071
	call        lua_pushinteger
	br          .L4018

.L4017:
	load.64*    %r17072 <- 0[ms]
	load.64*    %r17073 <- 16[%r17072]
	load.64*    %r17074 <- 0[ms]
	add.64*     %r17075 <- %r17074, $32
	load.32     %r17076 <- 0[i]
	scast.64    %r17077 <- (32) %r17076
	muls.64     %r17078 <- %r17077, $16
	add.64*     %r17079 <- %r17075, %r17078
	load.64*    %r17080 <- 0[%r17079]
	load.64     %r17081 <- 0[l]
	scast.64    %r17082 <- (64) %r17081
	push.64*    %r17073
	push.64*    %r17080
	push.64     %r17082
	call        lua_pushlstring
	br          .L4018

.L4018:
	br          .L4013

.L4013:
	ret


push_captures:
.L4019:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[e]
	load.64*    %r17083 <- 0[ms]
	load.32     %r17084 <- 24[%r17083]
	seteq.32    %r17085 <- %r17084, $0
	setne.1     %r17086 <- %r17085, $0
	load.64*    %r17087 <- 0[s]
	setne.1     %r17088 <- %r17087, $0
	and-bool.1  %r17089 <- %r17086, %r17088
	cast.32     %r17090 <- (1) %r17089
	cbr         %r17090, .L4020, .L4021

.L4020:
	phisrc.32   %phi800 <- $1
	br          .L4022

.L4021:
	load.64*    %r17091 <- 0[ms]
	load.32     %r17092 <- 24[%r17091]
	phisrc.32   %phi801 <- %r17092
	br          .L4022

.L4022:
	phi.32      %r17093 <- %phi800, %phi801
	store.32    %r17093 -> 0[nlevels]
	load.64*    %r17094 <- 0[ms]
	load.64*    %r17095 <- 16[%r17094]
	load.32     %r17096 <- 0[nlevels]
	symaddr.64* %r17097 <- <anon symbol:0x1e2b618>
	push.64*    %r17095
	push.32     %r17096
	push.64*    %r17097
	call        luaL_checkstack
	store.32    $0 -> 0[i]
	br          .L4026

.L4026:
	load.32     %r17098 <- 0[i]
	load.32     %r17099 <- 0[nlevels]
	setlt.32    %r17100 <- %r17098, %r17099
	cbr         %r17100, .L4023, .L4025

.L4023:
	load.64*    %r17101 <- 0[ms]
	load.32     %r17102 <- 0[i]
	load.64*    %r17103 <- 0[s]
	load.64*    %r17104 <- 0[e]
	push.64*    %r17101
	push.32     %r17102
	push.64*    %r17103
	push.64*    %r17104
	call        push_onecapture
	br          .L4024

.L4024:
	load.32     %r17105 <- 0[i]
	add.32      %r17106 <- %r17105, $1
	store.32    %r17106 -> 0[i]
	br          .L4026

.L4025:
	load.32     %r17107 <- 0[nlevels]
	phisrc.32   %phi802(return) <- %r17107
	br          .L4027

.L4027:
	phi.32      %r17108 <- %phi802(return)
	ret.32      %r17107


str_find_aux:
.L4028:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[find]
	load.64*    %r17109 <- 0[L]
	symaddr.64* %r17110 <- l1
	push.64*    %r17109
	push.32     $1
	push.64*    %r17110
	call.64*    %r17111 <- luaL_checklstring
	store.64*   %r17111 -> 0[s]
	load.64*    %r17112 <- 0[L]
	symaddr.64* %r17113 <- l2
	push.64*    %r17112
	push.32     $2
	push.64*    %r17113
	call.64*    %r17114 <- luaL_checklstring
	store.64*   %r17114 -> 0[p]
	load.64*    %r17115 <- 0[L]
	push.64*    %r17115
	push.32     $3
	push.64     $1
	call.64     %r17116 <- luaL_optinteger
	load.64     %r17117 <- 0[l1]
	push.64     %r17116
	push.64     %r17117
	call.64     %r17118 <- posrelat
	sub.64      %r17119 <- %r17118, $1
	store.64    %r17119 -> 0[init]
	load.64     %r17120 <- 0[init]
	setlt.32    %r17121 <- %r17120, $0
	cbr         %r17121, .L4029, .L4030

.L4029:
	store.64    $0 -> 0[init]
	br          .L4031

.L4030:
	load.64     %r17122 <- 0[init]
	scast.64    %r17123 <- (64) %r17122
	load.64     %r17124 <- 0[l1]
	seta.32     %r17125 <- %r17123, %r17124
	cbr         %r17125, .L4032, .L4033

.L4032:
	load.64     %r17126 <- 0[l1]
	cast.64     %r17127 <- (64) %r17126
	store.64    %r17127 -> 0[init]
	br          .L4033

.L4033:
	br          .L4031

.L4031:
	load.32     %r17128 <- 0[find]
	cbr         %r17128, .L4036, .L4035

.L4036:
	load.64*    %r17129 <- 0[L]
	push.64*    %r17129
	push.32     $4
	call.32     %r17130 <- lua_toboolean
	setne.1     %r17131 <- %r17130, $0
	load.64*    %r17132 <- 0[p]
	symaddr.64* %r17133 <- <anon symbol:0x1e2bd58>
	push.64*    %r17132
	push.64*    %r17133
	call.64*    %r17134 <- strpbrk
	seteq.32    %r17135 <- %r17134, $0
	setne.1     %r17136 <- %r17135, $0
	or-bool.1   %r17137 <- %r17131, %r17136
	cast.32     %r17138 <- (1) %r17137
	cbr         %r17138, .L4034, .L4035

.L4034:
	load.64*    %r17139 <- 0[s]
	load.64     %r17140 <- 0[init]
	add.64*     %r17141 <- %r17139, %r17140
	load.64     %r17142 <- 0[l1]
	load.64     %r17143 <- 0[init]
	scast.64    %r17144 <- (64) %r17143
	sub.64      %r17145 <- %r17142, %r17144
	load.64*    %r17146 <- 0[p]
	load.64     %r17147 <- 0[l2]
	push.64*    %r17141
	push.64     %r17145
	push.64*    %r17146
	push.64     %r17147
	call.64*    %r17148 <- lmemfind
	store.64*   %r17148 -> 0[s2]
	load.64*    %r17149 <- 0[s2]
	cbr         %r17149, .L4037, .L4038

.L4037:
	load.64*    %r17150 <- 0[L]
	load.64*    %r17151 <- 0[s2]
	load.64*    %r17152 <- 0[s]
	sub.64      %r17153 <- %r17151, %r17152
	add.64      %r17154 <- %r17153, $1
	push.64*    %r17150
	push.64     %r17154
	call        lua_pushinteger
	load.64*    %r17155 <- 0[L]
	load.64*    %r17156 <- 0[s2]
	load.64*    %r17157 <- 0[s]
	sub.64      %r17158 <- %r17156, %r17157
	scast.64    %r17159 <- (64) %r17158
	load.64     %r17160 <- 0[l2]
	add.64      %r17161 <- %r17159, %r17160
	cast.64     %r17162 <- (64) %r17161
	push.64*    %r17155
	push.64     %r17162
	call        lua_pushinteger
	phisrc.32   %phi803(return) <- $2
	br          .L4039

.L4038:
	br          .L4040

.L4035:
	load.64*    %r17164 <- 0[p]
	load.8      %r17165 <- 0[%r17164]
	scast.32    %r17166 <- (8) %r17165
	seteq.32    %r17167 <- %r17166, $94
	cbr         %r17167, .L4041, .L4042

.L4041:
	load.64*    %r17168 <- 0[p]
	add.64*     %r17169 <- %r17168, $1
	store.64*   %r17169 -> 0[p]
	phisrc.32   %phi804 <- $1
	br          .L4043

.L4042:
	phisrc.32   %phi805 <- $0
	br          .L4043

.L4043:
	phi.32      %r17170 <- %phi804, %phi805
	store.32    %r17170 -> 0[anchor]
	load.64*    %r17171 <- 0[s]
	load.64     %r17172 <- 0[init]
	add.64*     %r17173 <- %r17171, %r17172
	store.64*   %r17173 -> 0[s1]
	load.64*    %r17174 <- 0[L]
	store.64*   %r17174 -> 16[ms]
	load.64*    %r17175 <- 0[s]
	store.64*   %r17175 -> 0[ms]
	load.64*    %r17176 <- 0[s]
	load.64     %r17177 <- 0[l1]
	add.64*     %r17178 <- %r17176, %r17177
	store.64*   %r17178 -> 8[ms]
	br          .L4044

.L4044:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17179 <- ms
	load.64*    %r17180 <- 0[s1]
	load.64*    %r17181 <- 0[p]
	push.64*    %r17179
	push.64*    %r17180
	push.64*    %r17181
	call.64*    %r17182 <- match
	store.64*   %r17182 -> 0[res]
	setne.32    %r17183 <- %r17182, $0
	cbr         %r17183, .L4047, .L4048

.L4047:
	load.32     %r17184 <- 0[find]
	cbr         %r17184, .L4049, .L4050

.L4049:
	load.64*    %r17185 <- 0[L]
	load.64*    %r17186 <- 0[s1]
	load.64*    %r17187 <- 0[s]
	sub.64      %r17188 <- %r17186, %r17187
	add.64      %r17189 <- %r17188, $1
	push.64*    %r17185
	push.64     %r17189
	call        lua_pushinteger
	load.64*    %r17190 <- 0[L]
	load.64*    %r17191 <- 0[res]
	load.64*    %r17192 <- 0[s]
	sub.64      %r17193 <- %r17191, %r17192
	push.64*    %r17190
	push.64     %r17193
	call        lua_pushinteger
	symaddr.64* %r17194 <- ms
	push.64*    %r17194
	push.64*    $0
	push.64*    $0
	call.32     %r17195 <- push_captures
	add.32      %r17196 <- %r17195, $2
	phisrc.32   %phi806(return) <- %r17196
	br          .L4039

.L4050:
	symaddr.64* %r17197 <- ms
	load.64*    %r17198 <- 0[s1]
	load.64*    %r17199 <- 0[res]
	push.64*    %r17197
	push.64*    %r17198
	push.64*    %r17199
	call.32     %r17200 <- push_captures
	phisrc.32   %phi807(return) <- %r17200
	br          .L4039

.L4048:
	br          .L4045

.L4045:
	load.64*    %r17201 <- 0[s1]
	add.64*     %r17202 <- %r17201, $1
	store.64*   %r17202 -> 0[s1]
	load.64*    %r17203 <- 8[ms]
	setb.32     %r17204 <- %r17201, %r17203
	setne.1     %r17205 <- %r17204, $0
	load.32     %r17206 <- 0[anchor]
	seteq.32    %r17207 <- %r17206, $0
	setne.1     %r17208 <- %r17207, $0
	and-bool.1  %r17209 <- %r17205, %r17208
	cast.32     %r17210 <- (1) %r17209
	cbr         %r17210, .L4044, .L4046

.L4046:
	br          .L4040

.L4040:
	load.64*    %r17211 <- 0[L]
	push.64*    %r17211
	call        lua_pushnil
	phisrc.32   %phi808(return) <- $1
	br          .L4039

.L4039:
	phi.32      %r17163 <- %phi803(return), %phi806(return), %phi807(return), %phi808(return)
	ret.32      %r17163


str_find:
.L4052:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17212 <- 0[L]
	push.64*    %r17212
	push.32     $1
	call.32     %r17213 <- str_find_aux
	phisrc.32   %phi809(return) <- %r17213
	br          .L4053

.L4053:
	phi.32      %r17214 <- %phi809(return)
	ret.32      %r17213


str_match:
.L4054:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17215 <- 0[L]
	push.64*    %r17215
	push.32     $0
	call.32     %r17216 <- str_find_aux
	phisrc.32   %phi810(return) <- %r17216
	br          .L4055

.L4055:
	phi.32      %r17217 <- %phi810(return)
	ret.32      %r17216


gmatch_aux:
.L4056:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17218 <- 0[L]
	symaddr.64* %r17219 <- ls
	push.64*    %r17218
	push.32     $0xffffd8ed
	push.64*    %r17219
	call.64*    %r17220 <- lua_tolstring
	store.64*   %r17220 -> 0[s]
	load.64*    %r17221 <- 0[L]
	push.64*    %r17221
	push.32     $0xffffd8ec
	push.64*    $0
	call.64*    %r17222 <- lua_tolstring
	store.64*   %r17222 -> 0[p]
	load.64*    %r17223 <- 0[L]
	store.64*   %r17223 -> 16[ms]
	load.64*    %r17224 <- 0[s]
	store.64*   %r17224 -> 0[ms]
	load.64*    %r17225 <- 0[s]
	load.64     %r17226 <- 0[ls]
	add.64*     %r17227 <- %r17225, %r17226
	store.64*   %r17227 -> 8[ms]
	load.64*    %r17228 <- 0[s]
	load.64*    %r17229 <- 0[L]
	push.64*    %r17229
	push.32     $0xffffd8eb
	call.64     %r17230 <- lua_tointeger
	scast.64    %r17231 <- (64) %r17230
	add.64*     %r17232 <- %r17228, %r17231
	store.64*   %r17232 -> 0[src]
	br          .L4060

.L4060:
	load.64*    %r17233 <- 0[src]
	load.64*    %r17234 <- 8[ms]
	setbe.32    %r17235 <- %r17233, %r17234
	cbr         %r17235, .L4057, .L4059

.L4057:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17236 <- ms
	load.64*    %r17237 <- 0[src]
	load.64*    %r17238 <- 0[p]
	push.64*    %r17236
	push.64*    %r17237
	push.64*    %r17238
	call.64*    %r17239 <- match
	store.64*   %r17239 -> 0[e]
	setne.32    %r17240 <- %r17239, $0
	cbr         %r17240, .L4061, .L4062

.L4061:
	load.64*    %r17241 <- 0[e]
	load.64*    %r17242 <- 0[s]
	sub.64      %r17243 <- %r17241, %r17242
	store.64    %r17243 -> 0[newstart]
	load.64*    %r17244 <- 0[e]
	load.64*    %r17245 <- 0[src]
	seteq.32    %r17246 <- %r17244, %r17245
	cbr         %r17246, .L4063, .L4064

.L4063:
	load.64     %r17247 <- 0[newstart]
	add.64      %r17248 <- %r17247, $1
	store.64    %r17248 -> 0[newstart]
	br          .L4064

.L4064:
	load.64*    %r17249 <- 0[L]
	load.64     %r17250 <- 0[newstart]
	push.64*    %r17249
	push.64     %r17250
	call        lua_pushinteger
	load.64*    %r17251 <- 0[L]
	push.64*    %r17251
	push.32     $0xffffd8eb
	call        lua_replace
	symaddr.64* %r17252 <- ms
	load.64*    %r17253 <- 0[src]
	load.64*    %r17254 <- 0[e]
	push.64*    %r17252
	push.64*    %r17253
	push.64*    %r17254
	call.32     %r17255 <- push_captures
	phisrc.32   %phi811(return) <- %r17255
	br          .L4065

.L4062:
	br          .L4058

.L4058:
	load.64*    %r17257 <- 0[src]
	add.64*     %r17258 <- %r17257, $1
	store.64*   %r17258 -> 0[src]
	br          .L4060

.L4059:
	phisrc.32   %phi812(return) <- $0
	br          .L4065

.L4065:
	phi.32      %r17256 <- %phi811(return), %phi812(return)
	ret.32      %r17256


gmatch:
.L4066:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17259 <- 0[L]
	push.64*    %r17259
	push.32     $1
	push.64*    $0
	call.64*    %r17260 <- luaL_checklstring
	load.64*    %r17261 <- 0[L]
	push.64*    %r17261
	push.32     $2
	push.64*    $0
	call.64*    %r17262 <- luaL_checklstring
	load.64*    %r17263 <- 0[L]
	push.64*    %r17263
	push.32     $2
	call        lua_settop
	load.64*    %r17264 <- 0[L]
	push.64*    %r17264
	push.64     $0
	call        lua_pushinteger
	load.64*    %r17265 <- 0[L]
	symaddr.64* %r17266 <- gmatch_aux
	push.64*    %r17265
	push.64*    %r17266
	push.32     $3
	call        lua_pushcclosure
	phisrc.32   %phi813(return) <- $1
	br          .L4067

.L4067:
	phi.32      %r17267 <- %phi813(return)
	ret.32      $1


add_s:
.L4068:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[b]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.64*    %r17268 <- 0[ms]
	load.64*    %r17269 <- 16[%r17268]
	symaddr.64* %r17270 <- l
	push.64*    %r17269
	push.32     $3
	push.64*    %r17270
	call.64*    %r17271 <- lua_tolstring
	store.64*   %r17271 -> 0[news]
	store.64    $0 -> 0[i]
	br          .L4072

.L4072:
	load.64     %r17272 <- 0[i]
	load.64     %r17273 <- 0[l]
	setb.32     %r17274 <- %r17272, %r17273
	cbr         %r17274, .L4069, .L4071

.L4069:
	load.64*    %r17275 <- 0[news]
	load.64     %r17276 <- 0[i]
	add.64*     %r17277 <- %r17275, %r17276
	load.8      %r17278 <- 0[%r17277]
	scast.32    %r17279 <- (8) %r17278
	setne.32    %r17280 <- %r17279, $37
	cbr         %r17280, .L4073, .L4074

.L4073:
	load.64*    %r17281 <- 0[b]
	load.64*    %r17282 <- 0[%r17281]
	load.64*    %r17283 <- 0[b]
	add.64*     %r17284 <- %r17283, $24
	add.64*     %r17285 <- %r17284, $0x2000
	setb.32     %r17286 <- %r17282, %r17285
	cbr         %r17286, .L4075, .L4076

.L4075:
	phisrc.32   %phi814 <- $1
	br          .L4077

.L4076:
	load.64*    %r17287 <- 0[b]
	push.64*    %r17287
	call.64*    %r17288 <- luaL_prepbuffer
	phisrc.32   %phi815 <- %r17288
	br          .L4077

.L4077:
	phi.32      %r17289 <- %phi814, %phi815
	load.64*    %r17290 <- 0[news]
	load.64     %r17291 <- 0[i]
	add.64*     %r17292 <- %r17290, %r17291
	load.8      %r17293 <- 0[%r17292]
	scast.8     %r17294 <- (8) %r17293
	load.64*    %r17295 <- 0[b]
	load.64*    %r17296 <- 0[%r17295]
	add.64*     %r17297 <- %r17296, $1
	store.64*   %r17297 -> 0[%r17295]
	store.8     %r17294 -> 0[%r17296]
	br          .L4078

.L4074:
	load.64     %r17298 <- 0[i]
	add.64      %r17299 <- %r17298, $1
	store.64    %r17299 -> 0[i]
	call.64*    %r17300 <- __ctype_b_loc
	load.64*    %r17301 <- 0[%r17300]
	load.64*    %r17302 <- 0[news]
	load.64     %r17303 <- 0[i]
	add.64*     %r17304 <- %r17302, %r17303
	load.8      %r17305 <- 0[%r17304]
	scast.8     %r17306 <- (8) %r17305
	cast.32     %r17307 <- (8) %r17306
	scast.64    %r17308 <- (32) %r17307
	muls.64     %r17309 <- %r17308, $2
	add.64*     %r17310 <- %r17301, %r17309
	load.16     %r17311 <- 0[%r17310]
	cast.32     %r17312 <- (16) %r17311
	and.32      %r17313 <- %r17312, $0x800
	cbr         %r17313, .L4080, .L4079

.L4079:
	load.64*    %r17314 <- 0[b]
	load.64*    %r17315 <- 0[%r17314]
	load.64*    %r17316 <- 0[b]
	add.64*     %r17317 <- %r17316, $24
	add.64*     %r17318 <- %r17317, $0x2000
	setb.32     %r17319 <- %r17315, %r17318
	cbr         %r17319, .L4081, .L4082

.L4081:
	phisrc.32   %phi816 <- $1
	br          .L4083

.L4082:
	load.64*    %r17320 <- 0[b]
	push.64*    %r17320
	call.64*    %r17321 <- luaL_prepbuffer
	phisrc.32   %phi817 <- %r17321
	br          .L4083

.L4083:
	phi.32      %r17322 <- %phi816, %phi817
	load.64*    %r17323 <- 0[news]
	load.64     %r17324 <- 0[i]
	add.64*     %r17325 <- %r17323, %r17324
	load.8      %r17326 <- 0[%r17325]
	scast.8     %r17327 <- (8) %r17326
	load.64*    %r17328 <- 0[b]
	load.64*    %r17329 <- 0[%r17328]
	add.64*     %r17330 <- %r17329, $1
	store.64*   %r17330 -> 0[%r17328]
	store.8     %r17327 -> 0[%r17329]
	br          .L4084

.L4080:
	load.64*    %r17331 <- 0[news]
	load.64     %r17332 <- 0[i]
	add.64*     %r17333 <- %r17331, %r17332
	load.8      %r17334 <- 0[%r17333]
	scast.32    %r17335 <- (8) %r17334
	seteq.32    %r17336 <- %r17335, $48
	cbr         %r17336, .L4085, .L4086

.L4085:
	load.64*    %r17337 <- 0[b]
	load.64*    %r17338 <- 0[s]
	load.64*    %r17339 <- 0[e]
	load.64*    %r17340 <- 0[s]
	sub.64      %r17341 <- %r17339, %r17340
	scast.64    %r17342 <- (64) %r17341
	push.64*    %r17337
	push.64*    %r17338
	push.64     %r17342
	call        luaL_addlstring
	br          .L4087

.L4086:
	load.64*    %r17343 <- 0[ms]
	load.64*    %r17344 <- 0[news]
	load.64     %r17345 <- 0[i]
	add.64*     %r17346 <- %r17344, %r17345
	load.8      %r17347 <- 0[%r17346]
	scast.32    %r17348 <- (8) %r17347
	sub.32      %r17349 <- %r17348, $49
	load.64*    %r17350 <- 0[s]
	load.64*    %r17351 <- 0[e]
	push.64*    %r17343
	push.32     %r17349
	push.64*    %r17350
	push.64*    %r17351
	call        push_onecapture
	load.64*    %r17352 <- 0[b]
	push.64*    %r17352
	call        luaL_addvalue
	br          .L4087

.L4087:
	br          .L4084

.L4084:
	br          .L4078

.L4078:
	br          .L4070

.L4070:
	load.64     %r17353 <- 0[i]
	add.64      %r17354 <- %r17353, $1
	store.64    %r17354 -> 0[i]
	br          .L4072

.L4071:
	ret


add_value:
.L4088:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[b]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.64*    %r17355 <- 0[ms]
	load.64*    %r17356 <- 16[%r17355]
	store.64*   %r17356 -> 0[L]
	load.64*    %r17357 <- 0[L]
	push.64*    %r17357
	push.32     $3
	call.32     %r17358 <- lua_type
	switch.32   %r17358, 3 -> .L4090, 4 -> .L4091, 5 -> .L4093, 6 -> .L4092, default -> .L4089

.L4090:
	br          .L4091

.L4091:
	load.64*    %r17359 <- 0[ms]
	load.64*    %r17360 <- 0[b]
	load.64*    %r17361 <- 0[s]
	load.64*    %r17362 <- 0[e]
	push.64*    %r17359
	push.64*    %r17360
	push.64*    %r17361
	push.64*    %r17362
	call        add_s
	br          .L4094

.L4092:
	load.64*    %r17363 <- 0[L]
	push.64*    %r17363
	push.32     $3
	call        lua_pushvalue
	load.64*    %r17364 <- 0[ms]
	load.64*    %r17365 <- 0[s]
	load.64*    %r17366 <- 0[e]
	push.64*    %r17364
	push.64*    %r17365
	push.64*    %r17366
	call.32     %r17367 <- push_captures
	store.32    %r17367 -> 0[n]
	load.64*    %r17368 <- 0[L]
	load.32     %r17369 <- 0[n]
	push.64*    %r17368
	push.32     %r17369
	push.32     $1
	call        lua_call
	br          .L4089

.L4093:
	load.64*    %r17370 <- 0[ms]
	load.64*    %r17371 <- 0[s]
	load.64*    %r17372 <- 0[e]
	push.64*    %r17370
	push.32     $0
	push.64*    %r17371
	push.64*    %r17372
	call        push_onecapture
	load.64*    %r17373 <- 0[L]
	push.64*    %r17373
	push.32     $3
	call        lua_gettable
	br          .L4089

.L4089:
	load.64*    %r17374 <- 0[L]
	push.64*    %r17374
	push.32     $0xffffffff
	call.32     %r17375 <- lua_toboolean
	cbr         %r17375, .L4096, .L4095

.L4095:
	load.64*    %r17376 <- 0[L]
	push.64*    %r17376
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r17377 <- 0[L]
	load.64*    %r17378 <- 0[s]
	load.64*    %r17379 <- 0[e]
	load.64*    %r17380 <- 0[s]
	sub.64      %r17381 <- %r17379, %r17380
	scast.64    %r17382 <- (64) %r17381
	push.64*    %r17377
	push.64*    %r17378
	push.64     %r17382
	call        lua_pushlstring
	br          .L4097

.L4096:
	load.64*    %r17383 <- 0[L]
	push.64*    %r17383
	push.32     $0xffffffff
	call.32     %r17384 <- lua_isstring
	cbr         %r17384, .L4099, .L4098

.L4098:
	load.64*    %r17385 <- 0[L]
	symaddr.64* %r17386 <- <anon symbol:0x1e374f8>
	load.64*    %r17387 <- 0[L]
	load.64*    %r17388 <- 0[L]
	push.64*    %r17388
	push.32     $0xffffffff
	call.32     %r17389 <- lua_type
	push.64*    %r17387
	push.32     %r17389
	call.64*    %r17390 <- lua_typename
	push.64*    %r17385
	push.64*    %r17386
	push.64*    %r17390
	call.32     %r17391 <- luaL_error
	br          .L4099

.L4099:
	br          .L4097

.L4097:
	load.64*    %r17392 <- 0[b]
	push.64*    %r17392
	call        luaL_addvalue
	br          .L4094

.L4094:
	ret


str_gsub:
.L4100:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17393 <- 0[L]
	symaddr.64* %r17394 <- srcl
	push.64*    %r17393
	push.32     $1
	push.64*    %r17394
	call.64*    %r17395 <- luaL_checklstring
	store.64*   %r17395 -> 0[src]
	load.64*    %r17396 <- 0[L]
	push.64*    %r17396
	push.32     $2
	push.64*    $0
	call.64*    %r17397 <- luaL_checklstring
	store.64*   %r17397 -> 0[p]
	load.64*    %r17398 <- 0[L]
	push.64*    %r17398
	push.32     $3
	call.32     %r17399 <- lua_type
	store.32    %r17399 -> 0[tr]
	load.64*    %r17400 <- 0[L]
	load.64     %r17401 <- 0[srcl]
	add.64      %r17402 <- %r17401, $1
	cast.64     %r17403 <- (64) %r17402
	push.64*    %r17400
	push.32     $4
	push.64     %r17403
	call.64     %r17404 <- luaL_optinteger
	scast.32    %r17405 <- (64) %r17404
	store.32    %r17405 -> 0[max_s]
	load.64*    %r17406 <- 0[p]
	load.8      %r17407 <- 0[%r17406]
	scast.32    %r17408 <- (8) %r17407
	seteq.32    %r17409 <- %r17408, $94
	cbr         %r17409, .L4101, .L4102

.L4101:
	load.64*    %r17410 <- 0[p]
	add.64*     %r17411 <- %r17410, $1
	store.64*   %r17411 -> 0[p]
	phisrc.32   %phi818 <- $1
	br          .L4103

.L4102:
	phisrc.32   %phi819 <- $0
	br          .L4103

.L4103:
	phi.32      %r17412 <- %phi818, %phi819
	store.32    %r17412 -> 0[anchor]
	store.32    $0 -> 0[n]
	load.32     %r17413 <- 0[tr]
	seteq.32    %r17414 <- %r17413, $3
	setne.1     %r17415 <- %r17414, $0
	load.32     %r17416 <- 0[tr]
	seteq.32    %r17417 <- %r17416, $4
	setne.1     %r17418 <- %r17417, $0
	or-bool.1   %r17419 <- %r17415, %r17418
	cast.32     %r17420 <- (1) %r17419
	setne.1     %r17421 <- %r17420, $0
	load.32     %r17422 <- 0[tr]
	seteq.32    %r17423 <- %r17422, $6
	setne.1     %r17424 <- %r17423, $0
	or-bool.1   %r17425 <- %r17421, %r17424
	cast.32     %r17426 <- (1) %r17425
	setne.1     %r17427 <- %r17426, $0
	load.32     %r17428 <- 0[tr]
	seteq.32    %r17429 <- %r17428, $5
	setne.1     %r17430 <- %r17429, $0
	or-bool.1   %r17431 <- %r17427, %r17430
	cast.32     %r17432 <- (1) %r17431
	cbr         %r17432, .L4104, .L4105

.L4104:
	phisrc.32   %phi820 <- $1
	br          .L4106

.L4105:
	load.64*    %r17433 <- 0[L]
	symaddr.64* %r17434 <- <anon symbol:0x1e37b50>
	push.64*    %r17433
	push.32     $3
	push.64*    %r17434
	call.32     %r17435 <- luaL_argerror
	phisrc.32   %phi821 <- %r17435
	br          .L4106

.L4106:
	phi.32      %r17436 <- %phi820, %phi821
	load.64*    %r17437 <- 0[L]
	symaddr.64* %r17438 <- b
	push.64*    %r17437
	push.64*    %r17438
	call        luaL_buffinit
	load.64*    %r17439 <- 0[L]
	store.64*   %r17439 -> 16[ms]
	load.64*    %r17440 <- 0[src]
	store.64*   %r17440 -> 0[ms]
	load.64*    %r17441 <- 0[src]
	load.64     %r17442 <- 0[srcl]
	add.64*     %r17443 <- %r17441, %r17442
	store.64*   %r17443 -> 8[ms]
	br          .L4110

.L4110:
	load.32     %r17444 <- 0[n]
	load.32     %r17445 <- 0[max_s]
	setlt.32    %r17446 <- %r17444, %r17445
	cbr         %r17446, .L4107, .L4109

.L4107:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17447 <- ms
	load.64*    %r17448 <- 0[src]
	load.64*    %r17449 <- 0[p]
	push.64*    %r17447
	push.64*    %r17448
	push.64*    %r17449
	call.64*    %r17450 <- match
	store.64*   %r17450 -> 0[e]
	load.64*    %r17451 <- 0[e]
	cbr         %r17451, .L4111, .L4112

.L4111:
	load.32     %r17452 <- 0[n]
	add.32      %r17453 <- %r17452, $1
	store.32    %r17453 -> 0[n]
	symaddr.64* %r17454 <- ms
	symaddr.64* %r17455 <- b
	load.64*    %r17456 <- 0[src]
	load.64*    %r17457 <- 0[e]
	push.64*    %r17454
	push.64*    %r17455
	push.64*    %r17456
	push.64*    %r17457
	call        add_value
	br          .L4112

.L4112:
	load.64*    %r17458 <- 0[e]
	setne.1     %r17459 <- %r17458, $0
	load.64*    %r17460 <- 0[e]
	load.64*    %r17461 <- 0[src]
	seta.32     %r17462 <- %r17460, %r17461
	setne.1     %r17463 <- %r17462, $0
	and-bool.1  %r17464 <- %r17459, %r17463
	cast.32     %r17465 <- (1) %r17464
	cbr         %r17465, .L4113, .L4114

.L4113:
	load.64*    %r17466 <- 0[e]
	store.64*   %r17466 -> 0[src]
	br          .L4115

.L4114:
	load.64*    %r17467 <- 0[src]
	load.64*    %r17468 <- 8[ms]
	setb.32     %r17469 <- %r17467, %r17468
	cbr         %r17469, .L4116, .L4117

.L4116:
	load.64*    %r17470 <- 0[b]
	symaddr.64* %r17471 <- b
	add.64*     %r17472 <- %r17471, $24
	add.64*     %r17473 <- %r17472, $0x2000
	setb.32     %r17474 <- %r17470, %r17473
	cbr         %r17474, .L4118, .L4119

.L4118:
	phisrc.32   %phi822 <- $1
	br          .L4120

.L4119:
	symaddr.64* %r17475 <- b
	push.64*    %r17475
	call.64*    %r17476 <- luaL_prepbuffer
	phisrc.32   %phi823 <- %r17476
	br          .L4120

.L4120:
	phi.32      %r17477 <- %phi822, %phi823
	load.64*    %r17478 <- 0[src]
	add.64*     %r17479 <- %r17478, $1
	store.64*   %r17479 -> 0[src]
	load.8      %r17480 <- 0[%r17478]
	scast.8     %r17481 <- (8) %r17480
	load.64*    %r17482 <- 0[b]
	add.64*     %r17483 <- %r17482, $1
	store.64*   %r17483 -> 0[b]
	store.8     %r17481 -> 0[%r17482]
	br          .L4121

.L4117:
	br          .L4109

.L4121:
	br          .L4115

.L4115:
	load.32     %r17484 <- 0[anchor]
	cbr         %r17484, .L4122, .L4123

.L4122:
	br          .L4109

.L4123:
	br          .L4108

.L4108:
	br          .L4110

.L4109:
	symaddr.64* %r17485 <- b
	load.64*    %r17486 <- 0[src]
	load.64*    %r17487 <- 8[ms]
	load.64*    %r17488 <- 0[src]
	sub.64      %r17489 <- %r17487, %r17488
	scast.64    %r17490 <- (64) %r17489
	push.64*    %r17485
	push.64*    %r17486
	push.64     %r17490
	call        luaL_addlstring
	symaddr.64* %r17491 <- b
	push.64*    %r17491
	call        luaL_pushresult
	load.64*    %r17492 <- 0[L]
	load.32     %r17493 <- 0[n]
	scast.64    %r17494 <- (32) %r17493
	push.64*    %r17492
	push.64     %r17494
	call        lua_pushinteger
	phisrc.32   %phi824(return) <- $2
	br          .L4124

.L4124:
	phi.32      %r17495 <- %phi824(return)
	ret.32      $2


addquoted:
.L4125:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[b]
	store.32    %arg3 -> 0[arg]
	load.64*    %r17496 <- 0[L]
	load.32     %r17497 <- 0[arg]
	symaddr.64* %r17498 <- l
	push.64*    %r17496
	push.32     %r17497
	push.64*    %r17498
	call.64*    %r17499 <- luaL_checklstring
	store.64*   %r17499 -> 0[s]
	load.64*    %r17500 <- 0[b]
	load.64*    %r17501 <- 0[%r17500]
	load.64*    %r17502 <- 0[b]
	add.64*     %r17503 <- %r17502, $24
	add.64*     %r17504 <- %r17503, $0x2000
	setb.32     %r17505 <- %r17501, %r17504
	cbr         %r17505, .L4126, .L4127

.L4126:
	phisrc.32   %phi825 <- $1
	br          .L4128

.L4127:
	load.64*    %r17506 <- 0[b]
	push.64*    %r17506
	call.64*    %r17507 <- luaL_prepbuffer
	phisrc.32   %phi826 <- %r17507
	br          .L4128

.L4128:
	phi.32      %r17508 <- %phi825, %phi826
	load.64*    %r17509 <- 0[b]
	load.64*    %r17510 <- 0[%r17509]
	add.64*     %r17511 <- %r17510, $1
	store.64*   %r17511 -> 0[%r17509]
	store.8     $34 -> 0[%r17510]
	br          .L4132

.L4132:
	load.64     %r17512 <- 0[l]
	sub.64      %r17513 <- %r17512, $1
	store.64    %r17513 -> 0[l]
	cbr         %r17512, .L4129, .L4131

.L4129:
	load.64*    %r17514 <- 0[s]
	load.8      %r17515 <- 0[%r17514]
	switch.8    %r17515, 0 -> .L4138, 10 -> .L4136, 13 -> .L4137, 34 -> .L4134, 92 -> .L4135, default -> .L4139

.L4134:
	br          .L4135

.L4135:
	br          .L4136

.L4136:
	load.64*    %r17516 <- 0[b]
	load.64*    %r17517 <- 0[%r17516]
	load.64*    %r17518 <- 0[b]
	add.64*     %r17519 <- %r17518, $24
	add.64*     %r17520 <- %r17519, $0x2000
	setb.32     %r17521 <- %r17517, %r17520
	cbr         %r17521, .L4140, .L4141

.L4140:
	phisrc.32   %phi827 <- $1
	br          .L4142

.L4141:
	load.64*    %r17522 <- 0[b]
	push.64*    %r17522
	call.64*    %r17523 <- luaL_prepbuffer
	phisrc.32   %phi828 <- %r17523
	br          .L4142

.L4142:
	phi.32      %r17524 <- %phi827, %phi828
	load.64*    %r17525 <- 0[b]
	load.64*    %r17526 <- 0[%r17525]
	add.64*     %r17527 <- %r17526, $1
	store.64*   %r17527 -> 0[%r17525]
	store.8     $92 -> 0[%r17526]
	load.64*    %r17528 <- 0[b]
	load.64*    %r17529 <- 0[%r17528]
	load.64*    %r17530 <- 0[b]
	add.64*     %r17531 <- %r17530, $24
	add.64*     %r17532 <- %r17531, $0x2000
	setb.32     %r17533 <- %r17529, %r17532
	cbr         %r17533, .L4143, .L4144

.L4143:
	phisrc.32   %phi829 <- $1
	br          .L4145

.L4144:
	load.64*    %r17534 <- 0[b]
	push.64*    %r17534
	call.64*    %r17535 <- luaL_prepbuffer
	phisrc.32   %phi830 <- %r17535
	br          .L4145

.L4145:
	phi.32      %r17536 <- %phi829, %phi830
	load.64*    %r17537 <- 0[s]
	load.8      %r17538 <- 0[%r17537]
	scast.8     %r17539 <- (8) %r17538
	load.64*    %r17540 <- 0[b]
	load.64*    %r17541 <- 0[%r17540]
	add.64*     %r17542 <- %r17541, $1
	store.64*   %r17542 -> 0[%r17540]
	store.8     %r17539 -> 0[%r17541]
	br          .L4133

.L4137:
	load.64*    %r17543 <- 0[b]
	symaddr.64* %r17544 <- <anon symbol:0x1e3b8f0>
	push.64*    %r17543
	push.64*    %r17544
	push.64     $2
	call        luaL_addlstring
	br          .L4133

.L4138:
	load.64*    %r17545 <- 0[b]
	symaddr.64* %r17546 <- <anon symbol:0x1e3bc90>
	push.64*    %r17545
	push.64*    %r17546
	push.64     $4
	call        luaL_addlstring
	br          .L4133

.L4139:
	load.64*    %r17547 <- 0[b]
	load.64*    %r17548 <- 0[%r17547]
	load.64*    %r17549 <- 0[b]
	add.64*     %r17550 <- %r17549, $24
	add.64*     %r17551 <- %r17550, $0x2000
	setb.32     %r17552 <- %r17548, %r17551
	cbr         %r17552, .L4146, .L4147

.L4146:
	phisrc.32   %phi831 <- $1
	br          .L4148

.L4147:
	load.64*    %r17553 <- 0[b]
	push.64*    %r17553
	call.64*    %r17554 <- luaL_prepbuffer
	phisrc.32   %phi832 <- %r17554
	br          .L4148

.L4148:
	phi.32      %r17555 <- %phi831, %phi832
	load.64*    %r17556 <- 0[s]
	load.8      %r17557 <- 0[%r17556]
	scast.8     %r17558 <- (8) %r17557
	load.64*    %r17559 <- 0[b]
	load.64*    %r17560 <- 0[%r17559]
	add.64*     %r17561 <- %r17560, $1
	store.64*   %r17561 -> 0[%r17559]
	store.8     %r17558 -> 0[%r17560]
	br          .L4133

.L4133:
	load.64*    %r17562 <- 0[s]
	add.64*     %r17563 <- %r17562, $1
	store.64*   %r17563 -> 0[s]
	br          .L4130

.L4130:
	br          .L4132

.L4131:
	load.64*    %r17564 <- 0[b]
	load.64*    %r17565 <- 0[%r17564]
	load.64*    %r17566 <- 0[b]
	add.64*     %r17567 <- %r17566, $24
	add.64*     %r17568 <- %r17567, $0x2000
	setb.32     %r17569 <- %r17565, %r17568
	cbr         %r17569, .L4149, .L4150

.L4149:
	phisrc.32   %phi833 <- $1
	br          .L4151

.L4150:
	load.64*    %r17570 <- 0[b]
	push.64*    %r17570
	call.64*    %r17571 <- luaL_prepbuffer
	phisrc.32   %phi834 <- %r17571
	br          .L4151

.L4151:
	phi.32      %r17572 <- %phi833, %phi834
	load.64*    %r17573 <- 0[b]
	load.64*    %r17574 <- 0[%r17573]
	add.64*     %r17575 <- %r17574, $1
	store.64*   %r17575 -> 0[%r17573]
	store.8     $34 -> 0[%r17574]
	br          .L4152

.L4152:
	ret


scanformat:
.L4153:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[strfrmt]
	store.64*   %arg3 -> 0[form]
	load.64*    %r17576 <- 0[strfrmt]
	store.64*   %r17576 -> 0[p]
	br          .L4157

.L4157:
	load.64*    %r17577 <- 0[p]
	load.8      %r17578 <- 0[%r17577]
	scast.32    %r17579 <- (8) %r17578
	setne.32    %r17580 <- %r17579, $0
	cbr         %r17580, .L4158, .L4156

.L4158:
	symaddr.64* %r17581 <- <anon symbol:0x1e3d298>
	load.64*    %r17582 <- 0[p]
	load.8      %r17583 <- 0[%r17582]
	scast.32    %r17584 <- (8) %r17583
	push.64*    %r17581
	push.32     %r17584
	call.64*    %r17585 <- strchr
	setne.32    %r17586 <- %r17585, $0
	cbr         %r17586, .L4154, .L4156

.L4154:
	load.64*    %r17587 <- 0[p]
	add.64*     %r17588 <- %r17587, $1
	store.64*   %r17588 -> 0[p]
	br          .L4155

.L4155:
	br          .L4157

.L4156:
	load.64*    %r17589 <- 0[p]
	load.64*    %r17590 <- 0[strfrmt]
	sub.64      %r17591 <- %r17589, %r17590
	scast.64    %r17592 <- (64) %r17591
	setae.32    %r17593 <- %r17592, $6
	cbr         %r17593, .L4159, .L4160

.L4159:
	load.64*    %r17594 <- 0[L]
	symaddr.64* %r17595 <- <anon symbol:0x1e3d8f0>
	push.64*    %r17594
	push.64*    %r17595
	call.32     %r17596 <- luaL_error
	br          .L4160

.L4160:
	call.64*    %r17597 <- __ctype_b_loc
	load.64*    %r17598 <- 0[%r17597]
	load.64*    %r17599 <- 0[p]
	load.8      %r17600 <- 0[%r17599]
	scast.8     %r17601 <- (8) %r17600
	cast.32     %r17602 <- (8) %r17601
	scast.64    %r17603 <- (32) %r17602
	muls.64     %r17604 <- %r17603, $2
	add.64*     %r17605 <- %r17598, %r17604
	load.16     %r17606 <- 0[%r17605]
	cast.32     %r17607 <- (16) %r17606
	and.32      %r17608 <- %r17607, $0x800
	cbr         %r17608, .L4161, .L4162

.L4161:
	load.64*    %r17609 <- 0[p]
	add.64*     %r17610 <- %r17609, $1
	store.64*   %r17610 -> 0[p]
	br          .L4162

.L4162:
	call.64*    %r17611 <- __ctype_b_loc
	load.64*    %r17612 <- 0[%r17611]
	load.64*    %r17613 <- 0[p]
	load.8      %r17614 <- 0[%r17613]
	scast.8     %r17615 <- (8) %r17614
	cast.32     %r17616 <- (8) %r17615
	scast.64    %r17617 <- (32) %r17616
	muls.64     %r17618 <- %r17617, $2
	add.64*     %r17619 <- %r17612, %r17618
	load.16     %r17620 <- 0[%r17619]
	cast.32     %r17621 <- (16) %r17620
	and.32      %r17622 <- %r17621, $0x800
	cbr         %r17622, .L4163, .L4164

.L4163:
	load.64*    %r17623 <- 0[p]
	add.64*     %r17624 <- %r17623, $1
	store.64*   %r17624 -> 0[p]
	br          .L4164

.L4164:
	load.64*    %r17625 <- 0[p]
	load.8      %r17626 <- 0[%r17625]
	scast.32    %r17627 <- (8) %r17626
	seteq.32    %r17628 <- %r17627, $46
	cbr         %r17628, .L4165, .L4166

.L4165:
	load.64*    %r17629 <- 0[p]
	add.64*     %r17630 <- %r17629, $1
	store.64*   %r17630 -> 0[p]
	call.64*    %r17631 <- __ctype_b_loc
	load.64*    %r17632 <- 0[%r17631]
	load.64*    %r17633 <- 0[p]
	load.8      %r17634 <- 0[%r17633]
	scast.8     %r17635 <- (8) %r17634
	cast.32     %r17636 <- (8) %r17635
	scast.64    %r17637 <- (32) %r17636
	muls.64     %r17638 <- %r17637, $2
	add.64*     %r17639 <- %r17632, %r17638
	load.16     %r17640 <- 0[%r17639]
	cast.32     %r17641 <- (16) %r17640
	and.32      %r17642 <- %r17641, $0x800
	cbr         %r17642, .L4167, .L4168

.L4167:
	load.64*    %r17643 <- 0[p]
	add.64*     %r17644 <- %r17643, $1
	store.64*   %r17644 -> 0[p]
	br          .L4168

.L4168:
	call.64*    %r17645 <- __ctype_b_loc
	load.64*    %r17646 <- 0[%r17645]
	load.64*    %r17647 <- 0[p]
	load.8      %r17648 <- 0[%r17647]
	scast.8     %r17649 <- (8) %r17648
	cast.32     %r17650 <- (8) %r17649
	scast.64    %r17651 <- (32) %r17650
	muls.64     %r17652 <- %r17651, $2
	add.64*     %r17653 <- %r17646, %r17652
	load.16     %r17654 <- 0[%r17653]
	cast.32     %r17655 <- (16) %r17654
	and.32      %r17656 <- %r17655, $0x800
	cbr         %r17656, .L4169, .L4170

.L4169:
	load.64*    %r17657 <- 0[p]
	add.64*     %r17658 <- %r17657, $1
	store.64*   %r17658 -> 0[p]
	br          .L4170

.L4170:
	br          .L4166

.L4166:
	call.64*    %r17659 <- __ctype_b_loc
	load.64*    %r17660 <- 0[%r17659]
	load.64*    %r17661 <- 0[p]
	load.8      %r17662 <- 0[%r17661]
	scast.8     %r17663 <- (8) %r17662
	cast.32     %r17664 <- (8) %r17663
	scast.64    %r17665 <- (32) %r17664
	muls.64     %r17666 <- %r17665, $2
	add.64*     %r17667 <- %r17660, %r17666
	load.16     %r17668 <- 0[%r17667]
	cast.32     %r17669 <- (16) %r17668
	and.32      %r17670 <- %r17669, $0x800
	cbr         %r17670, .L4171, .L4172

.L4171:
	load.64*    %r17671 <- 0[L]
	symaddr.64* %r17672 <- <anon symbol:0x1e3eb10>
	push.64*    %r17671
	push.64*    %r17672
	call.32     %r17673 <- luaL_error
	br          .L4172

.L4172:
	load.64*    %r17674 <- 0[form]
	add.64*     %r17675 <- %r17674, $1
	store.64*   %r17675 -> 0[form]
	store.8     $37 -> 0[%r17674]
	load.64*    %r17676 <- 0[form]
	load.64*    %r17677 <- 0[strfrmt]
	load.64*    %r17678 <- 0[p]
	load.64*    %r17679 <- 0[strfrmt]
	sub.64      %r17680 <- %r17678, %r17679
	add.64      %r17681 <- %r17680, $1
	scast.64    %r17682 <- (64) %r17681
	push.64*    %r17676
	push.64*    %r17677
	push.64     %r17682
	call.64*    %r17683 <- strncpy
	load.64*    %r17684 <- 0[p]
	load.64*    %r17685 <- 0[strfrmt]
	sub.64      %r17686 <- %r17684, %r17685
	add.64      %r17687 <- %r17686, $1
	load.64*    %r17688 <- 0[form]
	cast.64     %r17689 <- (64) %r17688
	add.64      %r17690 <- %r17689, %r17687
	ptrcast.64* %r17691 <- (64) %r17690
	store.64*   %r17691 -> 0[form]
	load.64*    %r17692 <- 0[form]
	store.8     $0 -> 0[%r17692]
	load.64*    %r17693 <- 0[p]
	phisrc.64*  %phi835(return) <- %r17693
	br          .L4173

.L4173:
	phi.64*     %r17694 <- %phi835(return)
	ret.64*     %r17693


addintlen:
.L4174:
	<entry-point>
	store.64*   %arg1 -> 0[form]
	load.64*    %r17695 <- 0[form]
	push.64*    %r17695
	call.64     %r17696 <- strlen
	store.64    %r17696 -> 0[l]
	load.64*    %r17697 <- 0[form]
	load.64     %r17698 <- 0[l]
	sub.64      %r17699 <- %r17698, $1
	add.64*     %r17700 <- %r17697, %r17699
	load.8      %r17701 <- 0[%r17700]
	store.8     %r17701 -> 0[spec]
	load.64*    %r17702 <- 0[form]
	load.64     %r17703 <- 0[l]
	add.64*     %r17704 <- %r17702, %r17703
	sub.64*     %r17705 <- %r17704, $1
	symaddr.64* %r17706 <- <anon symbol:0x1e3f168>
	push.64*    %r17705
	push.64*    %r17706
	call.64*    %r17707 <- strcpy
	load.8      %r17708 <- 0[spec]
	load.64*    %r17709 <- 0[form]
	load.64     %r17710 <- 0[l]
	add.64      %r17711 <- %r17710, $2
	sub.64      %r17712 <- %r17711, $2
	add.64*     %r17713 <- %r17709, %r17712
	store.8     %r17708 -> 0[%r17713]
	load.64*    %r17714 <- 0[form]
	load.64     %r17715 <- 0[l]
	add.64      %r17716 <- %r17715, $2
	sub.64      %r17717 <- %r17716, $1
	add.64*     %r17718 <- %r17714, %r17717
	store.8     $0 -> 0[%r17718]
	br          .L4175

.L4175:
	ret


str_format:
.L4176:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17719 <- 0[L]
	push.64*    %r17719
	call.32     %r17720 <- lua_gettop
	store.32    %r17720 -> 0[top]
	store.32    $1 -> 0[arg]
	load.64*    %r17721 <- 0[L]
	load.32     %r17722 <- 0[arg]
	symaddr.64* %r17723 <- sfl
	push.64*    %r17721
	push.32     %r17722
	push.64*    %r17723
	call.64*    %r17724 <- luaL_checklstring
	store.64*   %r17724 -> 0[strfrmt]
	load.64*    %r17725 <- 0[strfrmt]
	load.64     %r17726 <- 0[sfl]
	add.64*     %r17727 <- %r17725, %r17726
	store.64*   %r17727 -> 0[strfrmt_end]
	load.64*    %r17728 <- 0[L]
	symaddr.64* %r17729 <- b
	push.64*    %r17728
	push.64*    %r17729
	call        luaL_buffinit
	br          .L4180

.L4180:
	load.64*    %r17730 <- 0[strfrmt]
	load.64*    %r17731 <- 0[strfrmt_end]
	setb.32     %r17732 <- %r17730, %r17731
	cbr         %r17732, .L4177, .L4179

.L4177:
	load.64*    %r17733 <- 0[strfrmt]
	load.8      %r17734 <- 0[%r17733]
	scast.32    %r17735 <- (8) %r17734
	setne.32    %r17736 <- %r17735, $37
	cbr         %r17736, .L4181, .L4182

.L4181:
	load.64*    %r17737 <- 0[b]
	symaddr.64* %r17738 <- b
	add.64*     %r17739 <- %r17738, $24
	add.64*     %r17740 <- %r17739, $0x2000
	setb.32     %r17741 <- %r17737, %r17740
	cbr         %r17741, .L4183, .L4184

.L4183:
	phisrc.32   %phi836 <- $1
	br          .L4185

.L4184:
	symaddr.64* %r17742 <- b
	push.64*    %r17742
	call.64*    %r17743 <- luaL_prepbuffer
	phisrc.32   %phi837 <- %r17743
	br          .L4185

.L4185:
	phi.32      %r17744 <- %phi836, %phi837
	load.64*    %r17745 <- 0[strfrmt]
	add.64*     %r17746 <- %r17745, $1
	store.64*   %r17746 -> 0[strfrmt]
	load.8      %r17747 <- 0[%r17745]
	scast.8     %r17748 <- (8) %r17747
	load.64*    %r17749 <- 0[b]
	add.64*     %r17750 <- %r17749, $1
	store.64*   %r17750 -> 0[b]
	store.8     %r17748 -> 0[%r17749]
	br          .L4186

.L4182:
	load.64*    %r17751 <- 0[strfrmt]
	add.64*     %r17752 <- %r17751, $1
	store.64*   %r17752 -> 0[strfrmt]
	load.8      %r17753 <- 0[%r17752]
	scast.32    %r17754 <- (8) %r17753
	seteq.32    %r17755 <- %r17754, $37
	cbr         %r17755, .L4187, .L4188

.L4187:
	load.64*    %r17756 <- 0[b]
	symaddr.64* %r17757 <- b
	add.64*     %r17758 <- %r17757, $24
	add.64*     %r17759 <- %r17758, $0x2000
	setb.32     %r17760 <- %r17756, %r17759
	cbr         %r17760, .L4189, .L4190

.L4189:
	phisrc.32   %phi838 <- $1
	br          .L4191

.L4190:
	symaddr.64* %r17761 <- b
	push.64*    %r17761
	call.64*    %r17762 <- luaL_prepbuffer
	phisrc.32   %phi839 <- %r17762
	br          .L4191

.L4191:
	phi.32      %r17763 <- %phi838, %phi839
	load.64*    %r17764 <- 0[strfrmt]
	add.64*     %r17765 <- %r17764, $1
	store.64*   %r17765 -> 0[strfrmt]
	load.8      %r17766 <- 0[%r17764]
	scast.8     %r17767 <- (8) %r17766
	load.64*    %r17768 <- 0[b]
	add.64*     %r17769 <- %r17768, $1
	store.64*   %r17769 -> 0[b]
	store.8     %r17767 -> 0[%r17768]
	br          .L4192

.L4188:
	load.32     %r17770 <- 0[arg]
	add.32      %r17771 <- %r17770, $1
	store.32    %r17771 -> 0[arg]
	load.32     %r17772 <- 0[top]
	setgt.32    %r17773 <- %r17771, %r17772
	cbr         %r17773, .L4193, .L4194

.L4193:
	load.64*    %r17774 <- 0[L]
	load.32     %r17775 <- 0[arg]
	symaddr.64* %r17776 <- <anon symbol:0x1e41eb8>
	push.64*    %r17774
	push.32     %r17775
	push.64*    %r17776
	call.32     %r17777 <- luaL_argerror
	br          .L4194

.L4194:
	load.64*    %r17778 <- 0[L]
	load.64*    %r17779 <- 0[strfrmt]
	symaddr.64* %r17780 <- form
	push.64*    %r17778
	push.64*    %r17779
	push.64*    %r17780
	call.64*    %r17781 <- scanformat
	store.64*   %r17781 -> 0[strfrmt]
	load.64*    %r17782 <- 0[strfrmt]
	add.64*     %r17783 <- %r17782, $1
	store.64*   %r17783 -> 0[strfrmt]
	load.8      %r17784 <- 0[%r17782]
	switch.8    %r17784, 69 -> .L4204, 71 -> .L4207, 88 -> .L4202, 99 -> .L4196, 100 -> .L4197, 101 -> .L4203, 102 -> .L4205, 103 -> .L4206, 105 -> .L4198, 111 -> .L4199, 113 -> .L4208, 115 -> .L4209, 117 -> .L4200, 120 -> .L4201, default -> .L4210

.L4196:
	symaddr.64* %r17785 <- buff
	symaddr.64* %r17786 <- form
	load.64*    %r17787 <- 0[L]
	load.32     %r17788 <- 0[arg]
	push.64*    %r17787
	push.32     %r17788
	call.f64    %r17789 <- luaL_checknumber
	cast.32     %r17790 <- (64) %r17789
	push.64*    %r17785
	push.64*    %r17786
	push.32     %r17790
	call.32     %r17791 <- sprintf
	br          .L4195

.L4197:
	br          .L4198

.L4198:
	symaddr.64* %r17792 <- form
	push.64*    %r17792
	call        addintlen
	symaddr.64* %r17793 <- buff
	symaddr.64* %r17794 <- form
	load.64*    %r17795 <- 0[L]
	load.32     %r17796 <- 0[arg]
	push.64*    %r17795
	push.32     %r17796
	call.f64    %r17797 <- luaL_checknumber
	cast.64     %r17798 <- (64) %r17797
	push.64*    %r17793
	push.64*    %r17794
	push.64     %r17798
	call.32     %r17799 <- sprintf
	br          .L4195

.L4199:
	br          .L4200

.L4200:
	br          .L4201

.L4201:
	br          .L4202

.L4202:
	symaddr.64* %r17800 <- form
	push.64*    %r17800
	call        addintlen
	symaddr.64* %r17801 <- buff
	symaddr.64* %r17802 <- form
	load.64*    %r17803 <- 0[L]
	load.32     %r17804 <- 0[arg]
	push.64*    %r17803
	push.32     %r17804
	call.f64    %r17805 <- luaL_checknumber
	cast.64     %r17806 <- (64) %r17805
	push.64*    %r17801
	push.64*    %r17802
	push.64     %r17806
	call.32     %r17807 <- sprintf
	br          .L4195

.L4203:
	br          .L4204

.L4204:
	br          .L4205

.L4205:
	br          .L4206

.L4206:
	br          .L4207

.L4207:
	symaddr.64* %r17808 <- buff
	symaddr.64* %r17809 <- form
	load.64*    %r17810 <- 0[L]
	load.32     %r17811 <- 0[arg]
	push.64*    %r17810
	push.32     %r17811
	call.f64    %r17812 <- luaL_checknumber
	fpcast.f64  %r17813 <- (64) %r17812
	push.64*    %r17808
	push.64*    %r17809
	push.f64    %r17813
	call.32     %r17814 <- sprintf
	br          .L4195

.L4208:
	load.64*    %r17815 <- 0[L]
	symaddr.64* %r17816 <- b
	load.32     %r17817 <- 0[arg]
	push.64*    %r17815
	push.64*    %r17816
	push.32     %r17817
	call        addquoted
	br          .L4178

.L4209:
	load.64*    %r17818 <- 0[L]
	load.32     %r17819 <- 0[arg]
	symaddr.64* %r17820 <- l
	push.64*    %r17818
	push.32     %r17819
	push.64*    %r17820
	call.64*    %r17821 <- luaL_checklstring
	store.64*   %r17821 -> 0[s]
	symaddr.64* %r17822 <- form
	push.64*    %r17822
	push.32     $46
	call.64*    %r17823 <- strchr
	seteq.32    %r17824 <- %r17823, $0
	setne.1     %r17825 <- %r17824, $0
	load.64     %r17826 <- 0[l]
	setae.32    %r17827 <- %r17826, $100
	setne.1     %r17828 <- %r17827, $0
	and-bool.1  %r17829 <- %r17825, %r17828
	cast.32     %r17830 <- (1) %r17829
	cbr         %r17830, .L4211, .L4212

.L4211:
	load.64*    %r17831 <- 0[L]
	load.32     %r17832 <- 0[arg]
	push.64*    %r17831
	push.32     %r17832
	call        lua_pushvalue
	symaddr.64* %r17833 <- b
	push.64*    %r17833
	call        luaL_addvalue
	br          .L4178

.L4212:
	symaddr.64* %r17834 <- buff
	symaddr.64* %r17835 <- form
	load.64*    %r17836 <- 0[s]
	push.64*    %r17834
	push.64*    %r17835
	push.64*    %r17836
	call.32     %r17837 <- sprintf
	br          .L4195

.L4210:
	load.64*    %r17838 <- 0[L]
	symaddr.64* %r17839 <- <anon symbol:0x1e44210>
	load.64*    %r17840 <- 0[strfrmt]
	sub.64*     %r17841 <- %r17840, $1
	load.8      %r17842 <- 0[%r17841]
	scast.32    %r17843 <- (8) %r17842
	push.64*    %r17838
	push.64*    %r17839
	push.32     %r17843
	call.32     %r17844 <- luaL_error
	phisrc.32   %phi840(return) <- %r17844
	br          .L4214

.L4195:
	symaddr.64* %r17846 <- b
	symaddr.64* %r17847 <- buff
	symaddr.64* %r17848 <- buff
	push.64*    %r17848
	call.64     %r17849 <- strlen
	push.64*    %r17846
	push.64*    %r17847
	push.64     %r17849
	call        luaL_addlstring
	br          .L4192

.L4192:
	br          .L4186

.L4186:
	br          .L4178

.L4178:
	br          .L4180

.L4179:
	symaddr.64* %r17850 <- b
	push.64*    %r17850
	call        luaL_pushresult
	phisrc.32   %phi841(return) <- $1
	br          .L4214

.L4214:
	phi.32      %r17845 <- %phi840(return), %phi841(return)
	ret.32      %r17845


createmetatable:
.L4215:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17851 <- 0[L]
	push.64*    %r17851
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r17852 <- 0[L]
	symaddr.64* %r17853 <- <anon symbol:0x1e4ce30>
	push.64*    %r17852
	push.64*    %r17853
	push.64     $0
	call        lua_pushlstring
	load.64*    %r17854 <- 0[L]
	push.64*    %r17854
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r17855 <- 0[L]
	push.64*    %r17855
	push.32     $0xfffffffe
	call.32     %r17856 <- lua_setmetatable
	load.64*    %r17857 <- 0[L]
	push.64*    %r17857
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r17858 <- 0[L]
	push.64*    %r17858
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r17859 <- 0[L]
	symaddr.64* %r17860 <- <anon symbol:0x1e4d3a0>
	push.64*    %r17859
	push.32     $0xfffffffe
	push.64*    %r17860
	call        lua_setfield
	load.64*    %r17861 <- 0[L]
	push.64*    %r17861
	push.32     $0xfffffffe
	call        lua_settop
	br          .L4216

.L4216:
	ret


luaopen_string:
.L4217:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17862 <- 0[L]
	symaddr.64* %r17863 <- <anon symbol:0x1e4d740>
	symaddr.64* %r17864 <- strlib
	push.64*    %r17862
	push.64*    %r17863
	push.64*    %r17864
	call        luaL_register
	load.64*    %r17865 <- 0[L]
	push.64*    %r17865
	call        createmetatable
	phisrc.32   %phi842(return) <- $1
	br          .L4218

.L4218:
	phi.32      %r17866 <- %phi842(return)
	ret.32      $1


luaL_openlibs:
.L4219:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	symaddr.64* %r17867 <- lualibs
	store.64*   %r17867 -> 0[lib]
	br          .L4223

.L4223:
	load.64*    %r17868 <- 0[lib]
	load.64*    %r17869 <- 8[%r17868]
	cbr         %r17869, .L4220, .L4222

.L4220:
	load.64*    %r17870 <- 0[L]
	load.64*    %r17871 <- 0[lib]
	load.64*    %r17872 <- 8[%r17871]
	push.64*    %r17870
	push.64*    %r17872
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r17873 <- 0[L]
	load.64*    %r17874 <- 0[lib]
	load.64*    %r17875 <- 0[%r17874]
	push.64*    %r17873
	push.64*    %r17875
	call        lua_pushstring
	load.64*    %r17876 <- 0[L]
	push.64*    %r17876
	push.32     $1
	push.32     $0
	call        lua_call
	br          .L4221

.L4221:
	load.64*    %r17877 <- 0[lib]
	add.64*     %r17878 <- %r17877, $16
	store.64*   %r17878 -> 0[lib]
	br          .L4223

.L4222:
	ret


barg:
.L4224:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r17879 <- 0[L]
	load.32     %r17880 <- 0[idx]
	push.64*    %r17879
	push.32     %r17880
	call.f64    %r17881 <- lua_tonumber
	set.f64     %r17882 <- 6755399441055744.000000
	add.f64     %r17883 <- %r17881, %r17882
	store.f64   %r17883 -> 0[bn]
	load.f64    %r17884 <- 0[bn]
	set.f64     %r17885 <- 0.000000
	seteq.32    %r17886 <- %r17884, %r17885
	cbr         %r17886, .L4227, .L4226

.L4227:
	load.64*    %r17887 <- 0[L]
	load.32     %r17888 <- 0[idx]
	push.64*    %r17887
	push.32     %r17888
	call.32     %r17889 <- lua_isnumber
	cbr         %r17889, .L4226, .L4225

.L4225:
	load.64*    %r17890 <- 0[L]
	load.32     %r17891 <- 0[idx]
	symaddr.64* %r17892 <- <anon symbol:0x1e4e4d8>
	push.64*    %r17890
	push.32     %r17891
	push.64*    %r17892
	call.32     %r17893 <- luaL_typerror
	br          .L4226

.L4226:
	load.64     %r17894 <- 0[bn]
	cast.32     %r17895 <- (64) %r17894
	phisrc.32   %phi843(return) <- %r17895
	br          .L4228

.L4228:
	phi.32      %r17896 <- %phi843(return)
	ret.32      %r17895


tobit:
.L4229:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17897 <- 0[L]
	load.64*    %r17898 <- 0[L]
	push.64*    %r17898
	push.32     $1
	call.32     %r17899 <- barg
	cast.32     %r17900 <- (32) %r17899
	fpcast.f64  %r17901 <- (32) %r17900
	push.64*    %r17897
	push.f64    %r17901
	call        lua_pushnumber
	phisrc.32   %phi844(return) <- $1
	br          .L4230

.L4230:
	phi.32      %r17902 <- %phi844(return)
	ret.32      $1


bnot:
.L4231:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17903 <- 0[L]
	load.64*    %r17904 <- 0[L]
	push.64*    %r17904
	push.32     $1
	call.32     %r17905 <- barg
	not.32      %r17906 <- %r17905
	cast.32     %r17907 <- (32) %r17906
	fpcast.f64  %r17908 <- (32) %r17907
	push.64*    %r17903
	push.f64    %r17908
	call        lua_pushnumber
	phisrc.32   %phi845(return) <- $1
	br          .L4232

.L4232:
	phi.32      %r17909 <- %phi845(return)
	ret.32      $1


band:
.L4233:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17910 <- 0[L]
	push.64*    %r17910
	push.32     $1
	call.32     %r17911 <- barg
	store.32    %r17911 -> 0[b]
	load.64*    %r17912 <- 0[L]
	push.64*    %r17912
	call.32     %r17913 <- lua_gettop
	store.32    %r17913 -> 0[i]
	br          .L4237

.L4237:
	load.32     %r17914 <- 0[i]
	setgt.32    %r17915 <- %r17914, $1
	cbr         %r17915, .L4234, .L4236

.L4234:
	load.64*    %r17916 <- 0[L]
	load.32     %r17917 <- 0[i]
	push.64*    %r17916
	push.32     %r17917
	call.32     %r17918 <- barg
	load.32     %r17919 <- 0[b]
	cast.32     %r17920 <- (32) %r17919
	and.32      %r17921 <- %r17920, %r17918
	cast.32     %r17922 <- (32) %r17921
	store.32    %r17922 -> 0[b]
	br          .L4235

.L4235:
	load.32     %r17923 <- 0[i]
	sub.32      %r17924 <- %r17923, $1
	store.32    %r17924 -> 0[i]
	br          .L4237

.L4236:
	load.64*    %r17925 <- 0[L]
	load.32     %r17926 <- 0[b]
	cast.32     %r17927 <- (32) %r17926
	fpcast.f64  %r17928 <- (32) %r17927
	push.64*    %r17925
	push.f64    %r17928
	call        lua_pushnumber
	phisrc.32   %phi846(return) <- $1
	br          .L4238

.L4238:
	phi.32      %r17929 <- %phi846(return)
	ret.32      $1


bor:
.L4239:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17930 <- 0[L]
	push.64*    %r17930
	push.32     $1
	call.32     %r17931 <- barg
	store.32    %r17931 -> 0[b]
	load.64*    %r17932 <- 0[L]
	push.64*    %r17932
	call.32     %r17933 <- lua_gettop
	store.32    %r17933 -> 0[i]
	br          .L4243

.L4243:
	load.32     %r17934 <- 0[i]
	setgt.32    %r17935 <- %r17934, $1
	cbr         %r17935, .L4240, .L4242

.L4240:
	load.64*    %r17936 <- 0[L]
	load.32     %r17937 <- 0[i]
	push.64*    %r17936
	push.32     %r17937
	call.32     %r17938 <- barg
	load.32     %r17939 <- 0[b]
	cast.32     %r17940 <- (32) %r17939
	or.32       %r17941 <- %r17940, %r17938
	cast.32     %r17942 <- (32) %r17941
	store.32    %r17942 -> 0[b]
	br          .L4241

.L4241:
	load.32     %r17943 <- 0[i]
	sub.32      %r17944 <- %r17943, $1
	store.32    %r17944 -> 0[i]
	br          .L4243

.L4242:
	load.64*    %r17945 <- 0[L]
	load.32     %r17946 <- 0[b]
	cast.32     %r17947 <- (32) %r17946
	fpcast.f64  %r17948 <- (32) %r17947
	push.64*    %r17945
	push.f64    %r17948
	call        lua_pushnumber
	phisrc.32   %phi847(return) <- $1
	br          .L4244

.L4244:
	phi.32      %r17949 <- %phi847(return)
	ret.32      $1


bxor:
.L4245:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17950 <- 0[L]
	push.64*    %r17950
	push.32     $1
	call.32     %r17951 <- barg
	store.32    %r17951 -> 0[b]
	load.64*    %r17952 <- 0[L]
	push.64*    %r17952
	call.32     %r17953 <- lua_gettop
	store.32    %r17953 -> 0[i]
	br          .L4249

.L4249:
	load.32     %r17954 <- 0[i]
	setgt.32    %r17955 <- %r17954, $1
	cbr         %r17955, .L4246, .L4248

.L4246:
	load.64*    %r17956 <- 0[L]
	load.32     %r17957 <- 0[i]
	push.64*    %r17956
	push.32     %r17957
	call.32     %r17958 <- barg
	load.32     %r17959 <- 0[b]
	cast.32     %r17960 <- (32) %r17959
	xor.32      %r17961 <- %r17960, %r17958
	cast.32     %r17962 <- (32) %r17961
	store.32    %r17962 -> 0[b]
	br          .L4247

.L4247:
	load.32     %r17963 <- 0[i]
	sub.32      %r17964 <- %r17963, $1
	store.32    %r17964 -> 0[i]
	br          .L4249

.L4248:
	load.64*    %r17965 <- 0[L]
	load.32     %r17966 <- 0[b]
	cast.32     %r17967 <- (32) %r17966
	fpcast.f64  %r17968 <- (32) %r17967
	push.64*    %r17965
	push.f64    %r17968
	call        lua_pushnumber
	phisrc.32   %phi848(return) <- $1
	br          .L4250

.L4250:
	phi.32      %r17969 <- %phi848(return)
	ret.32      $1


lshift:
.L4251:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17970 <- 0[L]
	push.64*    %r17970
	push.32     $1
	call.32     %r17971 <- barg
	store.32    %r17971 -> 0[b]
	load.64*    %r17972 <- 0[L]
	push.64*    %r17972
	push.32     $2
	call.32     %r17973 <- barg
	and.32      %r17974 <- %r17973, $31
	store.32    %r17974 -> 0[n]
	load.64*    %r17975 <- 0[L]
	load.32     %r17976 <- 0[b]
	load.32     %r17977 <- 0[n]
	shl.32      %r17978 <- %r17976, %r17977
	cast.32     %r17979 <- (32) %r17978
	fpcast.f64  %r17980 <- (32) %r17979
	push.64*    %r17975
	push.f64    %r17980
	call        lua_pushnumber
	phisrc.32   %phi849(return) <- $1
	br          .L4252

.L4252:
	phi.32      %r17981 <- %phi849(return)
	ret.32      $1


rshift:
.L4253:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17982 <- 0[L]
	push.64*    %r17982
	push.32     $1
	call.32     %r17983 <- barg
	store.32    %r17983 -> 0[b]
	load.64*    %r17984 <- 0[L]
	push.64*    %r17984
	push.32     $2
	call.32     %r17985 <- barg
	and.32      %r17986 <- %r17985, $31
	store.32    %r17986 -> 0[n]
	load.64*    %r17987 <- 0[L]
	load.32     %r17988 <- 0[b]
	load.32     %r17989 <- 0[n]
	lsr.32      %r17990 <- %r17988, %r17989
	cast.32     %r17991 <- (32) %r17990
	fpcast.f64  %r17992 <- (32) %r17991
	push.64*    %r17987
	push.f64    %r17992
	call        lua_pushnumber
	phisrc.32   %phi850(return) <- $1
	br          .L4254

.L4254:
	phi.32      %r17993 <- %phi850(return)
	ret.32      $1


arshift:
.L4255:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17994 <- 0[L]
	push.64*    %r17994
	push.32     $1
	call.32     %r17995 <- barg
	store.32    %r17995 -> 0[b]
	load.64*    %r17996 <- 0[L]
	push.64*    %r17996
	push.32     $2
	call.32     %r17997 <- barg
	and.32      %r17998 <- %r17997, $31
	store.32    %r17998 -> 0[n]
	load.64*    %r17999 <- 0[L]
	load.32     %r18000 <- 0[b]
	cast.32     %r18001 <- (32) %r18000
	load.32     %r18002 <- 0[n]
	asr.32      %r18003 <- %r18001, %r18002
	scast.32    %r18004 <- (32) %r18003
	fpcast.f64  %r18005 <- (32) %r18004
	push.64*    %r17999
	push.f64    %r18005
	call        lua_pushnumber
	phisrc.32   %phi851(return) <- $1
	br          .L4256

.L4256:
	phi.32      %r18006 <- %phi851(return)
	ret.32      $1


rol:
.L4257:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18007 <- 0[L]
	push.64*    %r18007
	push.32     $1
	call.32     %r18008 <- barg
	store.32    %r18008 -> 0[b]
	load.64*    %r18009 <- 0[L]
	push.64*    %r18009
	push.32     $2
	call.32     %r18010 <- barg
	and.32      %r18011 <- %r18010, $31
	store.32    %r18011 -> 0[n]
	load.64*    %r18012 <- 0[L]
	load.32     %r18013 <- 0[b]
	load.32     %r18014 <- 0[n]
	shl.32      %r18015 <- %r18013, %r18014
	load.32     %r18016 <- 0[b]
	load.32     %r18017 <- 0[n]
	sub.32      %r18018 <- $32, %r18017
	lsr.32      %r18019 <- %r18016, %r18018
	or.32       %r18020 <- %r18015, %r18019
	cast.32     %r18021 <- (32) %r18020
	fpcast.f64  %r18022 <- (32) %r18021
	push.64*    %r18012
	push.f64    %r18022
	call        lua_pushnumber
	phisrc.32   %phi852(return) <- $1
	br          .L4258

.L4258:
	phi.32      %r18023 <- %phi852(return)
	ret.32      $1


ror:
.L4259:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18024 <- 0[L]
	push.64*    %r18024
	push.32     $1
	call.32     %r18025 <- barg
	store.32    %r18025 -> 0[b]
	load.64*    %r18026 <- 0[L]
	push.64*    %r18026
	push.32     $2
	call.32     %r18027 <- barg
	and.32      %r18028 <- %r18027, $31
	store.32    %r18028 -> 0[n]
	load.64*    %r18029 <- 0[L]
	load.32     %r18030 <- 0[b]
	load.32     %r18031 <- 0[n]
	lsr.32      %r18032 <- %r18030, %r18031
	load.32     %r18033 <- 0[b]
	load.32     %r18034 <- 0[n]
	sub.32      %r18035 <- $32, %r18034
	shl.32      %r18036 <- %r18033, %r18035
	or.32       %r18037 <- %r18032, %r18036
	cast.32     %r18038 <- (32) %r18037
	fpcast.f64  %r18039 <- (32) %r18038
	push.64*    %r18029
	push.f64    %r18039
	call        lua_pushnumber
	phisrc.32   %phi853(return) <- $1
	br          .L4260

.L4260:
	phi.32      %r18040 <- %phi853(return)
	ret.32      $1


bswap:
.L4261:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18041 <- 0[L]
	push.64*    %r18041
	push.32     $1
	call.32     %r18042 <- barg
	store.32    %r18042 -> 0[b]
	load.32     %r18043 <- 0[b]
	lsr.32      %r18044 <- %r18043, $24
	load.32     %r18045 <- 0[b]
	lsr.32      %r18046 <- %r18045, $8
	and.32      %r18047 <- %r18046, $0xff00
	or.32       %r18048 <- %r18044, %r18047
	load.32     %r18049 <- 0[b]
	and.32      %r18050 <- %r18049, $0xff00
	shl.32      %r18051 <- %r18050, $8
	or.32       %r18052 <- %r18048, %r18051
	load.32     %r18053 <- 0[b]
	shl.32      %r18054 <- %r18053, $24
	or.32       %r18055 <- %r18052, %r18054
	store.32    %r18055 -> 0[b]
	load.64*    %r18056 <- 0[L]
	load.32     %r18057 <- 0[b]
	cast.32     %r18058 <- (32) %r18057
	fpcast.f64  %r18059 <- (32) %r18058
	push.64*    %r18056
	push.f64    %r18059
	call        lua_pushnumber
	phisrc.32   %phi854(return) <- $1
	br          .L4262

.L4262:
	phi.32      %r18060 <- %phi854(return)
	ret.32      $1


tohex:
.L4263:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18061 <- 0[L]
	push.64*    %r18061
	push.32     $1
	call.32     %r18062 <- barg
	store.32    %r18062 -> 0[b]
	load.64*    %r18063 <- 0[L]
	push.64*    %r18063
	push.32     $2
	call.32     %r18064 <- lua_type
	seteq.32    %r18065 <- %r18064, $0xffffffff
	cbr         %r18065, .L4264, .L4265

.L4264:
	phisrc.32   %phi855 <- $8
	br          .L4266

.L4265:
	load.64*    %r18066 <- 0[L]
	push.64*    %r18066
	push.32     $2
	call.32     %r18067 <- barg
	cast.32     %r18068 <- (32) %r18067
	phisrc.32   %phi856 <- %r18068
	br          .L4266

.L4266:
	phi.32      %r18069 <- %phi855, %phi856
	store.32    %r18069 -> 0[n]
	symaddr.64* %r18070 <- <anon symbol:0x1e4e960>
	store.64*   %r18070 -> 0[hexdigits]
	load.32     %r18071 <- 0[n]
	setlt.32    %r18072 <- %r18071, $0
	cbr         %r18072, .L4267, .L4268

.L4267:
	load.32     %r18073 <- 0[n]
	neg.32      %r18074 <- %r18073
	store.32    %r18074 -> 0[n]
	symaddr.64* %r18075 <- <anon symbol:0x1e4ed00>
	store.64*   %r18075 -> 0[hexdigits]
	br          .L4268

.L4268:
	load.32     %r18076 <- 0[n]
	setgt.32    %r18077 <- %r18076, $8
	cbr         %r18077, .L4269, .L4270

.L4269:
	store.32    $8 -> 0[n]
	br          .L4270

.L4270:
	load.32     %r18078 <- 0[n]
	scast.32    %r18079 <- (32) %r18078
	store.32    %r18079 -> 0[i]
	br          .L4274

.L4274:
	load.32     %r18080 <- 0[i]
	sub.32      %r18081 <- %r18080, $1
	store.32    %r18081 -> 0[i]
	setge.32    %r18082 <- %r18081, $0
	cbr         %r18082, .L4271, .L4273

.L4271:
	load.64*    %r18083 <- 0[hexdigits]
	load.32     %r18084 <- 0[b]
	and.32      %r18085 <- %r18084, $15
	cast.64     %r18086 <- (32) %r18085
	add.64*     %r18087 <- %r18083, %r18086
	load.8      %r18088 <- 0[%r18087]
	scast.8     %r18089 <- (8) %r18088
	symaddr.64* %r18090 <- buf
	load.32     %r18091 <- 0[i]
	scast.64    %r18092 <- (32) %r18091
	add.64*     %r18093 <- %r18090, %r18092
	store.8     %r18089 -> 0[%r18093]
	load.32     %r18094 <- 0[b]
	cast.32     %r18095 <- (32) %r18094
	lsr.32      %r18096 <- %r18095, $4
	cast.32     %r18097 <- (32) %r18096
	store.32    %r18097 -> 0[b]
	br          .L4272

.L4272:
	br          .L4274

.L4273:
	load.64*    %r18098 <- 0[L]
	symaddr.64* %r18099 <- buf
	load.32     %r18100 <- 0[n]
	scast.64    %r18101 <- (32) %r18100
	push.64*    %r18098
	push.64*    %r18099
	push.64     %r18101
	call        lua_pushlstring
	phisrc.32   %phi857(return) <- $1
	br          .L4275

.L4275:
	phi.32      %r18102 <- %phi857(return)
	ret.32      $1


init_globals:
.L4276:
	<entry-point>
	store.64*   $0 -> 0[luaO_nilobject_]
	store.32    $0 -> 8[luaO_nilobject_]
	store.32    $0 -> 0[i]
	symaddr.64* %r18103 <- log_2
	load.32     %r18104 <- 0[i]
	add.32      %r18105 <- %r18104, $1
	store.32    %r18105 -> 0[i]
	scast.64    %r18106 <- (32) %r18104
	add.64*     %r18107 <- %r18103, %r18106
	store.8     $0 -> 0[%r18107]
	symaddr.64* %r18108 <- log_2
	load.32     %r18109 <- 0[i]
	add.32      %r18110 <- %r18109, $1
	store.32    %r18110 -> 0[i]
	scast.64    %r18111 <- (32) %r18109
	add.64*     %r18112 <- %r18108, %r18111
	store.8     $1 -> 0[%r18112]
	symaddr.64* %r18113 <- log_2
	load.32     %r18114 <- 0[i]
	add.32      %r18115 <- %r18114, $1
	store.32    %r18115 -> 0[i]
	scast.64    %r18116 <- (32) %r18114
	add.64*     %r18117 <- %r18113, %r18116
	store.8     $2 -> 0[%r18117]
	symaddr.64* %r18118 <- log_2
	load.32     %r18119 <- 0[i]
	add.32      %r18120 <- %r18119, $1
	store.32    %r18120 -> 0[i]
	scast.64    %r18121 <- (32) %r18119
	add.64*     %r18122 <- %r18118, %r18121
	store.8     $2 -> 0[%r18122]
	symaddr.64* %r18123 <- log_2
	load.32     %r18124 <- 0[i]
	add.32      %r18125 <- %r18124, $1
	store.32    %r18125 -> 0[i]
	scast.64    %r18126 <- (32) %r18124
	add.64*     %r18127 <- %r18123, %r18126
	store.8     $3 -> 0[%r18127]
	symaddr.64* %r18128 <- log_2
	load.32     %r18129 <- 0[i]
	add.32      %r18130 <- %r18129, $1
	store.32    %r18130 -> 0[i]
	scast.64    %r18131 <- (32) %r18129
	add.64*     %r18132 <- %r18128, %r18131
	store.8     $3 -> 0[%r18132]
	symaddr.64* %r18133 <- log_2
	load.32     %r18134 <- 0[i]
	add.32      %r18135 <- %r18134, $1
	store.32    %r18135 -> 0[i]
	scast.64    %r18136 <- (32) %r18134
	add.64*     %r18137 <- %r18133, %r18136
	store.8     $3 -> 0[%r18137]
	symaddr.64* %r18138 <- log_2
	load.32     %r18139 <- 0[i]
	add.32      %r18140 <- %r18139, $1
	store.32    %r18140 -> 0[i]
	scast.64    %r18141 <- (32) %r18139
	add.64*     %r18142 <- %r18138, %r18141
	store.8     $3 -> 0[%r18142]
	symaddr.64* %r18143 <- log_2
	load.32     %r18144 <- 0[i]
	add.32      %r18145 <- %r18144, $1
	store.32    %r18145 -> 0[i]
	scast.64    %r18146 <- (32) %r18144
	add.64*     %r18147 <- %r18143, %r18146
	store.8     $4 -> 0[%r18147]
	symaddr.64* %r18148 <- log_2
	load.32     %r18149 <- 0[i]
	add.32      %r18150 <- %r18149, $1
	store.32    %r18150 -> 0[i]
	scast.64    %r18151 <- (32) %r18149
	add.64*     %r18152 <- %r18148, %r18151
	store.8     $4 -> 0[%r18152]
	symaddr.64* %r18153 <- log_2
	load.32     %r18154 <- 0[i]
	add.32      %r18155 <- %r18154, $1
	store.32    %r18155 -> 0[i]
	scast.64    %r18156 <- (32) %r18154
	add.64*     %r18157 <- %r18153, %r18156
	store.8     $4 -> 0[%r18157]
	symaddr.64* %r18158 <- log_2
	load.32     %r18159 <- 0[i]
	add.32      %r18160 <- %r18159, $1
	store.32    %r18160 -> 0[i]
	scast.64    %r18161 <- (32) %r18159
	add.64*     %r18162 <- %r18158, %r18161
	store.8     $4 -> 0[%r18162]
	symaddr.64* %r18163 <- log_2
	load.32     %r18164 <- 0[i]
	add.32      %r18165 <- %r18164, $1
	store.32    %r18165 -> 0[i]
	scast.64    %r18166 <- (32) %r18164
	add.64*     %r18167 <- %r18163, %r18166
	store.8     $4 -> 0[%r18167]
	symaddr.64* %r18168 <- log_2
	load.32     %r18169 <- 0[i]
	add.32      %r18170 <- %r18169, $1
	store.32    %r18170 -> 0[i]
	scast.64    %r18171 <- (32) %r18169
	add.64*     %r18172 <- %r18168, %r18171
	store.8     $4 -> 0[%r18172]
	symaddr.64* %r18173 <- log_2
	load.32     %r18174 <- 0[i]
	add.32      %r18175 <- %r18174, $1
	store.32    %r18175 -> 0[i]
	scast.64    %r18176 <- (32) %r18174
	add.64*     %r18177 <- %r18173, %r18176
	store.8     $4 -> 0[%r18177]
	symaddr.64* %r18178 <- log_2
	load.32     %r18179 <- 0[i]
	add.32      %r18180 <- %r18179, $1
	store.32    %r18180 -> 0[i]
	scast.64    %r18181 <- (32) %r18179
	add.64*     %r18182 <- %r18178, %r18181
	store.8     $4 -> 0[%r18182]
	symaddr.64* %r18183 <- log_2
	load.32     %r18184 <- 0[i]
	add.32      %r18185 <- %r18184, $1
	store.32    %r18185 -> 0[i]
	scast.64    %r18186 <- (32) %r18184
	add.64*     %r18187 <- %r18183, %r18186
	store.8     $5 -> 0[%r18187]
	symaddr.64* %r18188 <- log_2
	load.32     %r18189 <- 0[i]
	add.32      %r18190 <- %r18189, $1
	store.32    %r18190 -> 0[i]
	scast.64    %r18191 <- (32) %r18189
	add.64*     %r18192 <- %r18188, %r18191
	store.8     $5 -> 0[%r18192]
	symaddr.64* %r18193 <- log_2
	load.32     %r18194 <- 0[i]
	add.32      %r18195 <- %r18194, $1
	store.32    %r18195 -> 0[i]
	scast.64    %r18196 <- (32) %r18194
	add.64*     %r18197 <- %r18193, %r18196
	store.8     $5 -> 0[%r18197]
	symaddr.64* %r18198 <- log_2
	load.32     %r18199 <- 0[i]
	add.32      %r18200 <- %r18199, $1
	store.32    %r18200 -> 0[i]
	scast.64    %r18201 <- (32) %r18199
	add.64*     %r18202 <- %r18198, %r18201
	store.8     $5 -> 0[%r18202]
	symaddr.64* %r18203 <- log_2
	load.32     %r18204 <- 0[i]
	add.32      %r18205 <- %r18204, $1
	store.32    %r18205 -> 0[i]
	scast.64    %r18206 <- (32) %r18204
	add.64*     %r18207 <- %r18203, %r18206
	store.8     $5 -> 0[%r18207]
	symaddr.64* %r18208 <- log_2
	load.32     %r18209 <- 0[i]
	add.32      %r18210 <- %r18209, $1
	store.32    %r18210 -> 0[i]
	scast.64    %r18211 <- (32) %r18209
	add.64*     %r18212 <- %r18208, %r18211
	store.8     $5 -> 0[%r18212]
	symaddr.64* %r18213 <- log_2
	load.32     %r18214 <- 0[i]
	add.32      %r18215 <- %r18214, $1
	store.32    %r18215 -> 0[i]
	scast.64    %r18216 <- (32) %r18214
	add.64*     %r18217 <- %r18213, %r18216
	store.8     $5 -> 0[%r18217]
	symaddr.64* %r18218 <- log_2
	load.32     %r18219 <- 0[i]
	add.32      %r18220 <- %r18219, $1
	store.32    %r18220 -> 0[i]
	scast.64    %r18221 <- (32) %r18219
	add.64*     %r18222 <- %r18218, %r18221
	store.8     $5 -> 0[%r18222]
	symaddr.64* %r18223 <- log_2
	load.32     %r18224 <- 0[i]
	add.32      %r18225 <- %r18224, $1
	store.32    %r18225 -> 0[i]
	scast.64    %r18226 <- (32) %r18224
	add.64*     %r18227 <- %r18223, %r18226
	store.8     $5 -> 0[%r18227]
	symaddr.64* %r18228 <- log_2
	load.32     %r18229 <- 0[i]
	add.32      %r18230 <- %r18229, $1
	store.32    %r18230 -> 0[i]
	scast.64    %r18231 <- (32) %r18229
	add.64*     %r18232 <- %r18228, %r18231
	store.8     $5 -> 0[%r18232]
	symaddr.64* %r18233 <- log_2
	load.32     %r18234 <- 0[i]
	add.32      %r18235 <- %r18234, $1
	store.32    %r18235 -> 0[i]
	scast.64    %r18236 <- (32) %r18234
	add.64*     %r18237 <- %r18233, %r18236
	store.8     $5 -> 0[%r18237]
	symaddr.64* %r18238 <- log_2
	load.32     %r18239 <- 0[i]
	add.32      %r18240 <- %r18239, $1
	store.32    %r18240 -> 0[i]
	scast.64    %r18241 <- (32) %r18239
	add.64*     %r18242 <- %r18238, %r18241
	store.8     $5 -> 0[%r18242]
	symaddr.64* %r18243 <- log_2
	load.32     %r18244 <- 0[i]
	add.32      %r18245 <- %r18244, $1
	store.32    %r18245 -> 0[i]
	scast.64    %r18246 <- (32) %r18244
	add.64*     %r18247 <- %r18243, %r18246
	store.8     $5 -> 0[%r18247]
	symaddr.64* %r18248 <- log_2
	load.32     %r18249 <- 0[i]
	add.32      %r18250 <- %r18249, $1
	store.32    %r18250 -> 0[i]
	scast.64    %r18251 <- (32) %r18249
	add.64*     %r18252 <- %r18248, %r18251
	store.8     $5 -> 0[%r18252]
	symaddr.64* %r18253 <- log_2
	load.32     %r18254 <- 0[i]
	add.32      %r18255 <- %r18254, $1
	store.32    %r18255 -> 0[i]
	scast.64    %r18256 <- (32) %r18254
	add.64*     %r18257 <- %r18253, %r18256
	store.8     $5 -> 0[%r18257]
	symaddr.64* %r18258 <- log_2
	load.32     %r18259 <- 0[i]
	add.32      %r18260 <- %r18259, $1
	store.32    %r18260 -> 0[i]
	scast.64    %r18261 <- (32) %r18259
	add.64*     %r18262 <- %r18258, %r18261
	store.8     $5 -> 0[%r18262]
	symaddr.64* %r18263 <- log_2
	load.32     %r18264 <- 0[i]
	add.32      %r18265 <- %r18264, $1
	store.32    %r18265 -> 0[i]
	scast.64    %r18266 <- (32) %r18264
	add.64*     %r18267 <- %r18263, %r18266
	store.8     $6 -> 0[%r18267]
	symaddr.64* %r18268 <- log_2
	load.32     %r18269 <- 0[i]
	add.32      %r18270 <- %r18269, $1
	store.32    %r18270 -> 0[i]
	scast.64    %r18271 <- (32) %r18269
	add.64*     %r18272 <- %r18268, %r18271
	store.8     $6 -> 0[%r18272]
	symaddr.64* %r18273 <- log_2
	load.32     %r18274 <- 0[i]
	add.32      %r18275 <- %r18274, $1
	store.32    %r18275 -> 0[i]
	scast.64    %r18276 <- (32) %r18274
	add.64*     %r18277 <- %r18273, %r18276
	store.8     $6 -> 0[%r18277]
	symaddr.64* %r18278 <- log_2
	load.32     %r18279 <- 0[i]
	add.32      %r18280 <- %r18279, $1
	store.32    %r18280 -> 0[i]
	scast.64    %r18281 <- (32) %r18279
	add.64*     %r18282 <- %r18278, %r18281
	store.8     $6 -> 0[%r18282]
	symaddr.64* %r18283 <- log_2
	load.32     %r18284 <- 0[i]
	add.32      %r18285 <- %r18284, $1
	store.32    %r18285 -> 0[i]
	scast.64    %r18286 <- (32) %r18284
	add.64*     %r18287 <- %r18283, %r18286
	store.8     $6 -> 0[%r18287]
	symaddr.64* %r18288 <- log_2
	load.32     %r18289 <- 0[i]
	add.32      %r18290 <- %r18289, $1
	store.32    %r18290 -> 0[i]
	scast.64    %r18291 <- (32) %r18289
	add.64*     %r18292 <- %r18288, %r18291
	store.8     $6 -> 0[%r18292]
	symaddr.64* %r18293 <- log_2
	load.32     %r18294 <- 0[i]
	add.32      %r18295 <- %r18294, $1
	store.32    %r18295 -> 0[i]
	scast.64    %r18296 <- (32) %r18294
	add.64*     %r18297 <- %r18293, %r18296
	store.8     $6 -> 0[%r18297]
	symaddr.64* %r18298 <- log_2
	load.32     %r18299 <- 0[i]
	add.32      %r18300 <- %r18299, $1
	store.32    %r18300 -> 0[i]
	scast.64    %r18301 <- (32) %r18299
	add.64*     %r18302 <- %r18298, %r18301
	store.8     $6 -> 0[%r18302]
	symaddr.64* %r18303 <- log_2
	load.32     %r18304 <- 0[i]
	add.32      %r18305 <- %r18304, $1
	store.32    %r18305 -> 0[i]
	scast.64    %r18306 <- (32) %r18304
	add.64*     %r18307 <- %r18303, %r18306
	store.8     $6 -> 0[%r18307]
	symaddr.64* %r18308 <- log_2
	load.32     %r18309 <- 0[i]
	add.32      %r18310 <- %r18309, $1
	store.32    %r18310 -> 0[i]
	scast.64    %r18311 <- (32) %r18309
	add.64*     %r18312 <- %r18308, %r18311
	store.8     $6 -> 0[%r18312]
	symaddr.64* %r18313 <- log_2
	load.32     %r18314 <- 0[i]
	add.32      %r18315 <- %r18314, $1
	store.32    %r18315 -> 0[i]
	scast.64    %r18316 <- (32) %r18314
	add.64*     %r18317 <- %r18313, %r18316
	store.8     $6 -> 0[%r18317]
	symaddr.64* %r18318 <- log_2
	load.32     %r18319 <- 0[i]
	add.32      %r18320 <- %r18319, $1
	store.32    %r18320 -> 0[i]
	scast.64    %r18321 <- (32) %r18319
	add.64*     %r18322 <- %r18318, %r18321
	store.8     $6 -> 0[%r18322]
	symaddr.64* %r18323 <- log_2
	load.32     %r18324 <- 0[i]
	add.32      %r18325 <- %r18324, $1
	store.32    %r18325 -> 0[i]
	scast.64    %r18326 <- (32) %r18324
	add.64*     %r18327 <- %r18323, %r18326
	store.8     $6 -> 0[%r18327]
	symaddr.64* %r18328 <- log_2
	load.32     %r18329 <- 0[i]
	add.32      %r18330 <- %r18329, $1
	store.32    %r18330 -> 0[i]
	scast.64    %r18331 <- (32) %r18329
	add.64*     %r18332 <- %r18328, %r18331
	store.8     $6 -> 0[%r18332]
	symaddr.64* %r18333 <- log_2
	load.32     %r18334 <- 0[i]
	add.32      %r18335 <- %r18334, $1
	store.32    %r18335 -> 0[i]
	scast.64    %r18336 <- (32) %r18334
	add.64*     %r18337 <- %r18333, %r18336
	store.8     $6 -> 0[%r18337]
	symaddr.64* %r18338 <- log_2
	load.32     %r18339 <- 0[i]
	add.32      %r18340 <- %r18339, $1
	store.32    %r18340 -> 0[i]
	scast.64    %r18341 <- (32) %r18339
	add.64*     %r18342 <- %r18338, %r18341
	store.8     $6 -> 0[%r18342]
	symaddr.64* %r18343 <- log_2
	load.32     %r18344 <- 0[i]
	add.32      %r18345 <- %r18344, $1
	store.32    %r18345 -> 0[i]
	scast.64    %r18346 <- (32) %r18344
	add.64*     %r18347 <- %r18343, %r18346
	store.8     $6 -> 0[%r18347]
	symaddr.64* %r18348 <- log_2
	load.32     %r18349 <- 0[i]
	add.32      %r18350 <- %r18349, $1
	store.32    %r18350 -> 0[i]
	scast.64    %r18351 <- (32) %r18349
	add.64*     %r18352 <- %r18348, %r18351
	store.8     $6 -> 0[%r18352]
	symaddr.64* %r18353 <- log_2
	load.32     %r18354 <- 0[i]
	add.32      %r18355 <- %r18354, $1
	store.32    %r18355 -> 0[i]
	scast.64    %r18356 <- (32) %r18354
	add.64*     %r18357 <- %r18353, %r18356
	store.8     $6 -> 0[%r18357]
	symaddr.64* %r18358 <- log_2
	load.32     %r18359 <- 0[i]
	add.32      %r18360 <- %r18359, $1
	store.32    %r18360 -> 0[i]
	scast.64    %r18361 <- (32) %r18359
	add.64*     %r18362 <- %r18358, %r18361
	store.8     $6 -> 0[%r18362]
	symaddr.64* %r18363 <- log_2
	load.32     %r18364 <- 0[i]
	add.32      %r18365 <- %r18364, $1
	store.32    %r18365 -> 0[i]
	scast.64    %r18366 <- (32) %r18364
	add.64*     %r18367 <- %r18363, %r18366
	store.8     $6 -> 0[%r18367]
	symaddr.64* %r18368 <- log_2
	load.32     %r18369 <- 0[i]
	add.32      %r18370 <- %r18369, $1
	store.32    %r18370 -> 0[i]
	scast.64    %r18371 <- (32) %r18369
	add.64*     %r18372 <- %r18368, %r18371
	store.8     $6 -> 0[%r18372]
	symaddr.64* %r18373 <- log_2
	load.32     %r18374 <- 0[i]
	add.32      %r18375 <- %r18374, $1
	store.32    %r18375 -> 0[i]
	scast.64    %r18376 <- (32) %r18374
	add.64*     %r18377 <- %r18373, %r18376
	store.8     $6 -> 0[%r18377]
	symaddr.64* %r18378 <- log_2
	load.32     %r18379 <- 0[i]
	add.32      %r18380 <- %r18379, $1
	store.32    %r18380 -> 0[i]
	scast.64    %r18381 <- (32) %r18379
	add.64*     %r18382 <- %r18378, %r18381
	store.8     $6 -> 0[%r18382]
	symaddr.64* %r18383 <- log_2
	load.32     %r18384 <- 0[i]
	add.32      %r18385 <- %r18384, $1
	store.32    %r18385 -> 0[i]
	scast.64    %r18386 <- (32) %r18384
	add.64*     %r18387 <- %r18383, %r18386
	store.8     $6 -> 0[%r18387]
	symaddr.64* %r18388 <- log_2
	load.32     %r18389 <- 0[i]
	add.32      %r18390 <- %r18389, $1
	store.32    %r18390 -> 0[i]
	scast.64    %r18391 <- (32) %r18389
	add.64*     %r18392 <- %r18388, %r18391
	store.8     $6 -> 0[%r18392]
	symaddr.64* %r18393 <- log_2
	load.32     %r18394 <- 0[i]
	add.32      %r18395 <- %r18394, $1
	store.32    %r18395 -> 0[i]
	scast.64    %r18396 <- (32) %r18394
	add.64*     %r18397 <- %r18393, %r18396
	store.8     $6 -> 0[%r18397]
	symaddr.64* %r18398 <- log_2
	load.32     %r18399 <- 0[i]
	add.32      %r18400 <- %r18399, $1
	store.32    %r18400 -> 0[i]
	scast.64    %r18401 <- (32) %r18399
	add.64*     %r18402 <- %r18398, %r18401
	store.8     $6 -> 0[%r18402]
	symaddr.64* %r18403 <- log_2
	load.32     %r18404 <- 0[i]
	add.32      %r18405 <- %r18404, $1
	store.32    %r18405 -> 0[i]
	scast.64    %r18406 <- (32) %r18404
	add.64*     %r18407 <- %r18403, %r18406
	store.8     $6 -> 0[%r18407]
	symaddr.64* %r18408 <- log_2
	load.32     %r18409 <- 0[i]
	add.32      %r18410 <- %r18409, $1
	store.32    %r18410 -> 0[i]
	scast.64    %r18411 <- (32) %r18409
	add.64*     %r18412 <- %r18408, %r18411
	store.8     $6 -> 0[%r18412]
	symaddr.64* %r18413 <- log_2
	load.32     %r18414 <- 0[i]
	add.32      %r18415 <- %r18414, $1
	store.32    %r18415 -> 0[i]
	scast.64    %r18416 <- (32) %r18414
	add.64*     %r18417 <- %r18413, %r18416
	store.8     $6 -> 0[%r18417]
	symaddr.64* %r18418 <- log_2
	load.32     %r18419 <- 0[i]
	add.32      %r18420 <- %r18419, $1
	store.32    %r18420 -> 0[i]
	scast.64    %r18421 <- (32) %r18419
	add.64*     %r18422 <- %r18418, %r18421
	store.8     $6 -> 0[%r18422]
	symaddr.64* %r18423 <- log_2
	load.32     %r18424 <- 0[i]
	add.32      %r18425 <- %r18424, $1
	store.32    %r18425 -> 0[i]
	scast.64    %r18426 <- (32) %r18424
	add.64*     %r18427 <- %r18423, %r18426
	store.8     $7 -> 0[%r18427]
	symaddr.64* %r18428 <- log_2
	load.32     %r18429 <- 0[i]
	add.32      %r18430 <- %r18429, $1
	store.32    %r18430 -> 0[i]
	scast.64    %r18431 <- (32) %r18429
	add.64*     %r18432 <- %r18428, %r18431
	store.8     $7 -> 0[%r18432]
	symaddr.64* %r18433 <- log_2
	load.32     %r18434 <- 0[i]
	add.32      %r18435 <- %r18434, $1
	store.32    %r18435 -> 0[i]
	scast.64    %r18436 <- (32) %r18434
	add.64*     %r18437 <- %r18433, %r18436
	store.8     $7 -> 0[%r18437]
	symaddr.64* %r18438 <- log_2
	load.32     %r18439 <- 0[i]
	add.32      %r18440 <- %r18439, $1
	store.32    %r18440 -> 0[i]
	scast.64    %r18441 <- (32) %r18439
	add.64*     %r18442 <- %r18438, %r18441
	store.8     $7 -> 0[%r18442]
	symaddr.64* %r18443 <- log_2
	load.32     %r18444 <- 0[i]
	add.32      %r18445 <- %r18444, $1
	store.32    %r18445 -> 0[i]
	scast.64    %r18446 <- (32) %r18444
	add.64*     %r18447 <- %r18443, %r18446
	store.8     $7 -> 0[%r18447]
	symaddr.64* %r18448 <- log_2
	load.32     %r18449 <- 0[i]
	add.32      %r18450 <- %r18449, $1
	store.32    %r18450 -> 0[i]
	scast.64    %r18451 <- (32) %r18449
	add.64*     %r18452 <- %r18448, %r18451
	store.8     $7 -> 0[%r18452]
	symaddr.64* %r18453 <- log_2
	load.32     %r18454 <- 0[i]
	add.32      %r18455 <- %r18454, $1
	store.32    %r18455 -> 0[i]
	scast.64    %r18456 <- (32) %r18454
	add.64*     %r18457 <- %r18453, %r18456
	store.8     $7 -> 0[%r18457]
	symaddr.64* %r18458 <- log_2
	load.32     %r18459 <- 0[i]
	add.32      %r18460 <- %r18459, $1
	store.32    %r18460 -> 0[i]
	scast.64    %r18461 <- (32) %r18459
	add.64*     %r18462 <- %r18458, %r18461
	store.8     $7 -> 0[%r18462]
	symaddr.64* %r18463 <- log_2
	load.32     %r18464 <- 0[i]
	add.32      %r18465 <- %r18464, $1
	store.32    %r18465 -> 0[i]
	scast.64    %r18466 <- (32) %r18464
	add.64*     %r18467 <- %r18463, %r18466
	store.8     $7 -> 0[%r18467]
	symaddr.64* %r18468 <- log_2
	load.32     %r18469 <- 0[i]
	add.32      %r18470 <- %r18469, $1
	store.32    %r18470 -> 0[i]
	scast.64    %r18471 <- (32) %r18469
	add.64*     %r18472 <- %r18468, %r18471
	store.8     $7 -> 0[%r18472]
	symaddr.64* %r18473 <- log_2
	load.32     %r18474 <- 0[i]
	add.32      %r18475 <- %r18474, $1
	store.32    %r18475 -> 0[i]
	scast.64    %r18476 <- (32) %r18474
	add.64*     %r18477 <- %r18473, %r18476
	store.8     $7 -> 0[%r18477]
	symaddr.64* %r18478 <- log_2
	load.32     %r18479 <- 0[i]
	add.32      %r18480 <- %r18479, $1
	store.32    %r18480 -> 0[i]
	scast.64    %r18481 <- (32) %r18479
	add.64*     %r18482 <- %r18478, %r18481
	store.8     $7 -> 0[%r18482]
	symaddr.64* %r18483 <- log_2
	load.32     %r18484 <- 0[i]
	add.32      %r18485 <- %r18484, $1
	store.32    %r18485 -> 0[i]
	scast.64    %r18486 <- (32) %r18484
	add.64*     %r18487 <- %r18483, %r18486
	store.8     $7 -> 0[%r18487]
	symaddr.64* %r18488 <- log_2
	load.32     %r18489 <- 0[i]
	add.32      %r18490 <- %r18489, $1
	store.32    %r18490 -> 0[i]
	scast.64    %r18491 <- (32) %r18489
	add.64*     %r18492 <- %r18488, %r18491
	store.8     $7 -> 0[%r18492]
	symaddr.64* %r18493 <- log_2
	load.32     %r18494 <- 0[i]
	add.32      %r18495 <- %r18494, $1
	store.32    %r18495 -> 0[i]
	scast.64    %r18496 <- (32) %r18494
	add.64*     %r18497 <- %r18493, %r18496
	store.8     $7 -> 0[%r18497]
	symaddr.64* %r18498 <- log_2
	load.32     %r18499 <- 0[i]
	add.32      %r18500 <- %r18499, $1
	store.32    %r18500 -> 0[i]
	scast.64    %r18501 <- (32) %r18499
	add.64*     %r18502 <- %r18498, %r18501
	store.8     $7 -> 0[%r18502]
	symaddr.64* %r18503 <- log_2
	load.32     %r18504 <- 0[i]
	add.32      %r18505 <- %r18504, $1
	store.32    %r18505 -> 0[i]
	scast.64    %r18506 <- (32) %r18504
	add.64*     %r18507 <- %r18503, %r18506
	store.8     $7 -> 0[%r18507]
	symaddr.64* %r18508 <- log_2
	load.32     %r18509 <- 0[i]
	add.32      %r18510 <- %r18509, $1
	store.32    %r18510 -> 0[i]
	scast.64    %r18511 <- (32) %r18509
	add.64*     %r18512 <- %r18508, %r18511
	store.8     $7 -> 0[%r18512]
	symaddr.64* %r18513 <- log_2
	load.32     %r18514 <- 0[i]
	add.32      %r18515 <- %r18514, $1
	store.32    %r18515 -> 0[i]
	scast.64    %r18516 <- (32) %r18514
	add.64*     %r18517 <- %r18513, %r18516
	store.8     $7 -> 0[%r18517]
	symaddr.64* %r18518 <- log_2
	load.32     %r18519 <- 0[i]
	add.32      %r18520 <- %r18519, $1
	store.32    %r18520 -> 0[i]
	scast.64    %r18521 <- (32) %r18519
	add.64*     %r18522 <- %r18518, %r18521
	store.8     $7 -> 0[%r18522]
	symaddr.64* %r18523 <- log_2
	load.32     %r18524 <- 0[i]
	add.32      %r18525 <- %r18524, $1
	store.32    %r18525 -> 0[i]
	scast.64    %r18526 <- (32) %r18524
	add.64*     %r18527 <- %r18523, %r18526
	store.8     $7 -> 0[%r18527]
	symaddr.64* %r18528 <- log_2
	load.32     %r18529 <- 0[i]
	add.32      %r18530 <- %r18529, $1
	store.32    %r18530 -> 0[i]
	scast.64    %r18531 <- (32) %r18529
	add.64*     %r18532 <- %r18528, %r18531
	store.8     $7 -> 0[%r18532]
	symaddr.64* %r18533 <- log_2
	load.32     %r18534 <- 0[i]
	add.32      %r18535 <- %r18534, $1
	store.32    %r18535 -> 0[i]
	scast.64    %r18536 <- (32) %r18534
	add.64*     %r18537 <- %r18533, %r18536
	store.8     $7 -> 0[%r18537]
	symaddr.64* %r18538 <- log_2
	load.32     %r18539 <- 0[i]
	add.32      %r18540 <- %r18539, $1
	store.32    %r18540 -> 0[i]
	scast.64    %r18541 <- (32) %r18539
	add.64*     %r18542 <- %r18538, %r18541
	store.8     $7 -> 0[%r18542]
	symaddr.64* %r18543 <- log_2
	load.32     %r18544 <- 0[i]
	add.32      %r18545 <- %r18544, $1
	store.32    %r18545 -> 0[i]
	scast.64    %r18546 <- (32) %r18544
	add.64*     %r18547 <- %r18543, %r18546
	store.8     $7 -> 0[%r18547]
	symaddr.64* %r18548 <- log_2
	load.32     %r18549 <- 0[i]
	add.32      %r18550 <- %r18549, $1
	store.32    %r18550 -> 0[i]
	scast.64    %r18551 <- (32) %r18549
	add.64*     %r18552 <- %r18548, %r18551
	store.8     $7 -> 0[%r18552]
	symaddr.64* %r18553 <- log_2
	load.32     %r18554 <- 0[i]
	add.32      %r18555 <- %r18554, $1
	store.32    %r18555 -> 0[i]
	scast.64    %r18556 <- (32) %r18554
	add.64*     %r18557 <- %r18553, %r18556
	store.8     $7 -> 0[%r18557]
	symaddr.64* %r18558 <- log_2
	load.32     %r18559 <- 0[i]
	add.32      %r18560 <- %r18559, $1
	store.32    %r18560 -> 0[i]
	scast.64    %r18561 <- (32) %r18559
	add.64*     %r18562 <- %r18558, %r18561
	store.8     $7 -> 0[%r18562]
	symaddr.64* %r18563 <- log_2
	load.32     %r18564 <- 0[i]
	add.32      %r18565 <- %r18564, $1
	store.32    %r18565 -> 0[i]
	scast.64    %r18566 <- (32) %r18564
	add.64*     %r18567 <- %r18563, %r18566
	store.8     $7 -> 0[%r18567]
	symaddr.64* %r18568 <- log_2
	load.32     %r18569 <- 0[i]
	add.32      %r18570 <- %r18569, $1
	store.32    %r18570 -> 0[i]
	scast.64    %r18571 <- (32) %r18569
	add.64*     %r18572 <- %r18568, %r18571
	store.8     $7 -> 0[%r18572]
	symaddr.64* %r18573 <- log_2
	load.32     %r18574 <- 0[i]
	add.32      %r18575 <- %r18574, $1
	store.32    %r18575 -> 0[i]
	scast.64    %r18576 <- (32) %r18574
	add.64*     %r18577 <- %r18573, %r18576
	store.8     $7 -> 0[%r18577]
	symaddr.64* %r18578 <- log_2
	load.32     %r18579 <- 0[i]
	add.32      %r18580 <- %r18579, $1
	store.32    %r18580 -> 0[i]
	scast.64    %r18581 <- (32) %r18579
	add.64*     %r18582 <- %r18578, %r18581
	store.8     $7 -> 0[%r18582]
	symaddr.64* %r18583 <- log_2
	load.32     %r18584 <- 0[i]
	add.32      %r18585 <- %r18584, $1
	store.32    %r18585 -> 0[i]
	scast.64    %r18586 <- (32) %r18584
	add.64*     %r18587 <- %r18583, %r18586
	store.8     $7 -> 0[%r18587]
	symaddr.64* %r18588 <- log_2
	load.32     %r18589 <- 0[i]
	add.32      %r18590 <- %r18589, $1
	store.32    %r18590 -> 0[i]
	scast.64    %r18591 <- (32) %r18589
	add.64*     %r18592 <- %r18588, %r18591
	store.8     $7 -> 0[%r18592]
	symaddr.64* %r18593 <- log_2
	load.32     %r18594 <- 0[i]
	add.32      %r18595 <- %r18594, $1
	store.32    %r18595 -> 0[i]
	scast.64    %r18596 <- (32) %r18594
	add.64*     %r18597 <- %r18593, %r18596
	store.8     $7 -> 0[%r18597]
	symaddr.64* %r18598 <- log_2
	load.32     %r18599 <- 0[i]
	add.32      %r18600 <- %r18599, $1
	store.32    %r18600 -> 0[i]
	scast.64    %r18601 <- (32) %r18599
	add.64*     %r18602 <- %r18598, %r18601
	store.8     $7 -> 0[%r18602]
	symaddr.64* %r18603 <- log_2
	load.32     %r18604 <- 0[i]
	add.32      %r18605 <- %r18604, $1
	store.32    %r18605 -> 0[i]
	scast.64    %r18606 <- (32) %r18604
	add.64*     %r18607 <- %r18603, %r18606
	store.8     $7 -> 0[%r18607]
	symaddr.64* %r18608 <- log_2
	load.32     %r18609 <- 0[i]
	add.32      %r18610 <- %r18609, $1
	store.32    %r18610 -> 0[i]
	scast.64    %r18611 <- (32) %r18609
	add.64*     %r18612 <- %r18608, %r18611
	store.8     $7 -> 0[%r18612]
	symaddr.64* %r18613 <- log_2
	load.32     %r18614 <- 0[i]
	add.32      %r18615 <- %r18614, $1
	store.32    %r18615 -> 0[i]
	scast.64    %r18616 <- (32) %r18614
	add.64*     %r18617 <- %r18613, %r18616
	store.8     $7 -> 0[%r18617]
	symaddr.64* %r18618 <- log_2
	load.32     %r18619 <- 0[i]
	add.32      %r18620 <- %r18619, $1
	store.32    %r18620 -> 0[i]
	scast.64    %r18621 <- (32) %r18619
	add.64*     %r18622 <- %r18618, %r18621
	store.8     $7 -> 0[%r18622]
	symaddr.64* %r18623 <- log_2
	load.32     %r18624 <- 0[i]
	add.32      %r18625 <- %r18624, $1
	store.32    %r18625 -> 0[i]
	scast.64    %r18626 <- (32) %r18624
	add.64*     %r18627 <- %r18623, %r18626
	store.8     $7 -> 0[%r18627]
	symaddr.64* %r18628 <- log_2
	load.32     %r18629 <- 0[i]
	add.32      %r18630 <- %r18629, $1
	store.32    %r18630 -> 0[i]
	scast.64    %r18631 <- (32) %r18629
	add.64*     %r18632 <- %r18628, %r18631
	store.8     $7 -> 0[%r18632]
	symaddr.64* %r18633 <- log_2
	load.32     %r18634 <- 0[i]
	add.32      %r18635 <- %r18634, $1
	store.32    %r18635 -> 0[i]
	scast.64    %r18636 <- (32) %r18634
	add.64*     %r18637 <- %r18633, %r18636
	store.8     $7 -> 0[%r18637]
	symaddr.64* %r18638 <- log_2
	load.32     %r18639 <- 0[i]
	add.32      %r18640 <- %r18639, $1
	store.32    %r18640 -> 0[i]
	scast.64    %r18641 <- (32) %r18639
	add.64*     %r18642 <- %r18638, %r18641
	store.8     $7 -> 0[%r18642]
	symaddr.64* %r18643 <- log_2
	load.32     %r18644 <- 0[i]
	add.32      %r18645 <- %r18644, $1
	store.32    %r18645 -> 0[i]
	scast.64    %r18646 <- (32) %r18644
	add.64*     %r18647 <- %r18643, %r18646
	store.8     $7 -> 0[%r18647]
	symaddr.64* %r18648 <- log_2
	load.32     %r18649 <- 0[i]
	add.32      %r18650 <- %r18649, $1
	store.32    %r18650 -> 0[i]
	scast.64    %r18651 <- (32) %r18649
	add.64*     %r18652 <- %r18648, %r18651
	store.8     $7 -> 0[%r18652]
	symaddr.64* %r18653 <- log_2
	load.32     %r18654 <- 0[i]
	add.32      %r18655 <- %r18654, $1
	store.32    %r18655 -> 0[i]
	scast.64    %r18656 <- (32) %r18654
	add.64*     %r18657 <- %r18653, %r18656
	store.8     $7 -> 0[%r18657]
	symaddr.64* %r18658 <- log_2
	load.32     %r18659 <- 0[i]
	add.32      %r18660 <- %r18659, $1
	store.32    %r18660 -> 0[i]
	scast.64    %r18661 <- (32) %r18659
	add.64*     %r18662 <- %r18658, %r18661
	store.8     $7 -> 0[%r18662]
	symaddr.64* %r18663 <- log_2
	load.32     %r18664 <- 0[i]
	add.32      %r18665 <- %r18664, $1
	store.32    %r18665 -> 0[i]
	scast.64    %r18666 <- (32) %r18664
	add.64*     %r18667 <- %r18663, %r18666
	store.8     $7 -> 0[%r18667]
	symaddr.64* %r18668 <- log_2
	load.32     %r18669 <- 0[i]
	add.32      %r18670 <- %r18669, $1
	store.32    %r18670 -> 0[i]
	scast.64    %r18671 <- (32) %r18669
	add.64*     %r18672 <- %r18668, %r18671
	store.8     $7 -> 0[%r18672]
	symaddr.64* %r18673 <- log_2
	load.32     %r18674 <- 0[i]
	add.32      %r18675 <- %r18674, $1
	store.32    %r18675 -> 0[i]
	scast.64    %r18676 <- (32) %r18674
	add.64*     %r18677 <- %r18673, %r18676
	store.8     $7 -> 0[%r18677]
	symaddr.64* %r18678 <- log_2
	load.32     %r18679 <- 0[i]
	add.32      %r18680 <- %r18679, $1
	store.32    %r18680 -> 0[i]
	scast.64    %r18681 <- (32) %r18679
	add.64*     %r18682 <- %r18678, %r18681
	store.8     $7 -> 0[%r18682]
	symaddr.64* %r18683 <- log_2
	load.32     %r18684 <- 0[i]
	add.32      %r18685 <- %r18684, $1
	store.32    %r18685 -> 0[i]
	scast.64    %r18686 <- (32) %r18684
	add.64*     %r18687 <- %r18683, %r18686
	store.8     $7 -> 0[%r18687]
	symaddr.64* %r18688 <- log_2
	load.32     %r18689 <- 0[i]
	add.32      %r18690 <- %r18689, $1
	store.32    %r18690 -> 0[i]
	scast.64    %r18691 <- (32) %r18689
	add.64*     %r18692 <- %r18688, %r18691
	store.8     $7 -> 0[%r18692]
	symaddr.64* %r18693 <- log_2
	load.32     %r18694 <- 0[i]
	add.32      %r18695 <- %r18694, $1
	store.32    %r18695 -> 0[i]
	scast.64    %r18696 <- (32) %r18694
	add.64*     %r18697 <- %r18693, %r18696
	store.8     $7 -> 0[%r18697]
	symaddr.64* %r18698 <- log_2
	load.32     %r18699 <- 0[i]
	add.32      %r18700 <- %r18699, $1
	store.32    %r18700 -> 0[i]
	scast.64    %r18701 <- (32) %r18699
	add.64*     %r18702 <- %r18698, %r18701
	store.8     $7 -> 0[%r18702]
	symaddr.64* %r18703 <- log_2
	load.32     %r18704 <- 0[i]
	add.32      %r18705 <- %r18704, $1
	store.32    %r18705 -> 0[i]
	scast.64    %r18706 <- (32) %r18704
	add.64*     %r18707 <- %r18703, %r18706
	store.8     $7 -> 0[%r18707]
	symaddr.64* %r18708 <- log_2
	load.32     %r18709 <- 0[i]
	add.32      %r18710 <- %r18709, $1
	store.32    %r18710 -> 0[i]
	scast.64    %r18711 <- (32) %r18709
	add.64*     %r18712 <- %r18708, %r18711
	store.8     $7 -> 0[%r18712]
	symaddr.64* %r18713 <- log_2
	load.32     %r18714 <- 0[i]
	add.32      %r18715 <- %r18714, $1
	store.32    %r18715 -> 0[i]
	scast.64    %r18716 <- (32) %r18714
	add.64*     %r18717 <- %r18713, %r18716
	store.8     $7 -> 0[%r18717]
	symaddr.64* %r18718 <- log_2
	load.32     %r18719 <- 0[i]
	add.32      %r18720 <- %r18719, $1
	store.32    %r18720 -> 0[i]
	scast.64    %r18721 <- (32) %r18719
	add.64*     %r18722 <- %r18718, %r18721
	store.8     $7 -> 0[%r18722]
	symaddr.64* %r18723 <- log_2
	load.32     %r18724 <- 0[i]
	add.32      %r18725 <- %r18724, $1
	store.32    %r18725 -> 0[i]
	scast.64    %r18726 <- (32) %r18724
	add.64*     %r18727 <- %r18723, %r18726
	store.8     $7 -> 0[%r18727]
	symaddr.64* %r18728 <- log_2
	load.32     %r18729 <- 0[i]
	add.32      %r18730 <- %r18729, $1
	store.32    %r18730 -> 0[i]
	scast.64    %r18731 <- (32) %r18729
	add.64*     %r18732 <- %r18728, %r18731
	store.8     $7 -> 0[%r18732]
	symaddr.64* %r18733 <- log_2
	load.32     %r18734 <- 0[i]
	add.32      %r18735 <- %r18734, $1
	store.32    %r18735 -> 0[i]
	scast.64    %r18736 <- (32) %r18734
	add.64*     %r18737 <- %r18733, %r18736
	store.8     $7 -> 0[%r18737]
	symaddr.64* %r18738 <- log_2
	load.32     %r18739 <- 0[i]
	add.32      %r18740 <- %r18739, $1
	store.32    %r18740 -> 0[i]
	scast.64    %r18741 <- (32) %r18739
	add.64*     %r18742 <- %r18738, %r18741
	store.8     $7 -> 0[%r18742]
	symaddr.64* %r18743 <- log_2
	load.32     %r18744 <- 0[i]
	add.32      %r18745 <- %r18744, $1
	store.32    %r18745 -> 0[i]
	scast.64    %r18746 <- (32) %r18744
	add.64*     %r18747 <- %r18743, %r18746
	store.8     $8 -> 0[%r18747]
	symaddr.64* %r18748 <- log_2
	load.32     %r18749 <- 0[i]
	add.32      %r18750 <- %r18749, $1
	store.32    %r18750 -> 0[i]
	scast.64    %r18751 <- (32) %r18749
	add.64*     %r18752 <- %r18748, %r18751
	store.8     $8 -> 0[%r18752]
	symaddr.64* %r18753 <- log_2
	load.32     %r18754 <- 0[i]
	add.32      %r18755 <- %r18754, $1
	store.32    %r18755 -> 0[i]
	scast.64    %r18756 <- (32) %r18754
	add.64*     %r18757 <- %r18753, %r18756
	store.8     $8 -> 0[%r18757]
	symaddr.64* %r18758 <- log_2
	load.32     %r18759 <- 0[i]
	add.32      %r18760 <- %r18759, $1
	store.32    %r18760 -> 0[i]
	scast.64    %r18761 <- (32) %r18759
	add.64*     %r18762 <- %r18758, %r18761
	store.8     $8 -> 0[%r18762]
	symaddr.64* %r18763 <- log_2
	load.32     %r18764 <- 0[i]
	add.32      %r18765 <- %r18764, $1
	store.32    %r18765 -> 0[i]
	scast.64    %r18766 <- (32) %r18764
	add.64*     %r18767 <- %r18763, %r18766
	store.8     $8 -> 0[%r18767]
	symaddr.64* %r18768 <- log_2
	load.32     %r18769 <- 0[i]
	add.32      %r18770 <- %r18769, $1
	store.32    %r18770 -> 0[i]
	scast.64    %r18771 <- (32) %r18769
	add.64*     %r18772 <- %r18768, %r18771
	store.8     $8 -> 0[%r18772]
	symaddr.64* %r18773 <- log_2
	load.32     %r18774 <- 0[i]
	add.32      %r18775 <- %r18774, $1
	store.32    %r18775 -> 0[i]
	scast.64    %r18776 <- (32) %r18774
	add.64*     %r18777 <- %r18773, %r18776
	store.8     $8 -> 0[%r18777]
	symaddr.64* %r18778 <- log_2
	load.32     %r18779 <- 0[i]
	add.32      %r18780 <- %r18779, $1
	store.32    %r18780 -> 0[i]
	scast.64    %r18781 <- (32) %r18779
	add.64*     %r18782 <- %r18778, %r18781
	store.8     $8 -> 0[%r18782]
	symaddr.64* %r18783 <- log_2
	load.32     %r18784 <- 0[i]
	add.32      %r18785 <- %r18784, $1
	store.32    %r18785 -> 0[i]
	scast.64    %r18786 <- (32) %r18784
	add.64*     %r18787 <- %r18783, %r18786
	store.8     $8 -> 0[%r18787]
	symaddr.64* %r18788 <- log_2
	load.32     %r18789 <- 0[i]
	add.32      %r18790 <- %r18789, $1
	store.32    %r18790 -> 0[i]
	scast.64    %r18791 <- (32) %r18789
	add.64*     %r18792 <- %r18788, %r18791
	store.8     $8 -> 0[%r18792]
	symaddr.64* %r18793 <- log_2
	load.32     %r18794 <- 0[i]
	add.32      %r18795 <- %r18794, $1
	store.32    %r18795 -> 0[i]
	scast.64    %r18796 <- (32) %r18794
	add.64*     %r18797 <- %r18793, %r18796
	store.8     $8 -> 0[%r18797]
	symaddr.64* %r18798 <- log_2
	load.32     %r18799 <- 0[i]
	add.32      %r18800 <- %r18799, $1
	store.32    %r18800 -> 0[i]
	scast.64    %r18801 <- (32) %r18799
	add.64*     %r18802 <- %r18798, %r18801
	store.8     $8 -> 0[%r18802]
	symaddr.64* %r18803 <- log_2
	load.32     %r18804 <- 0[i]
	add.32      %r18805 <- %r18804, $1
	store.32    %r18805 -> 0[i]
	scast.64    %r18806 <- (32) %r18804
	add.64*     %r18807 <- %r18803, %r18806
	store.8     $8 -> 0[%r18807]
	symaddr.64* %r18808 <- log_2
	load.32     %r18809 <- 0[i]
	add.32      %r18810 <- %r18809, $1
	store.32    %r18810 -> 0[i]
	scast.64    %r18811 <- (32) %r18809
	add.64*     %r18812 <- %r18808, %r18811
	store.8     $8 -> 0[%r18812]
	symaddr.64* %r18813 <- log_2
	load.32     %r18814 <- 0[i]
	add.32      %r18815 <- %r18814, $1
	store.32    %r18815 -> 0[i]
	scast.64    %r18816 <- (32) %r18814
	add.64*     %r18817 <- %r18813, %r18816
	store.8     $8 -> 0[%r18817]
	symaddr.64* %r18818 <- log_2
	load.32     %r18819 <- 0[i]
	add.32      %r18820 <- %r18819, $1
	store.32    %r18820 -> 0[i]
	scast.64    %r18821 <- (32) %r18819
	add.64*     %r18822 <- %r18818, %r18821
	store.8     $8 -> 0[%r18822]
	symaddr.64* %r18823 <- log_2
	load.32     %r18824 <- 0[i]
	add.32      %r18825 <- %r18824, $1
	store.32    %r18825 -> 0[i]
	scast.64    %r18826 <- (32) %r18824
	add.64*     %r18827 <- %r18823, %r18826
	store.8     $8 -> 0[%r18827]
	symaddr.64* %r18828 <- log_2
	load.32     %r18829 <- 0[i]
	add.32      %r18830 <- %r18829, $1
	store.32    %r18830 -> 0[i]
	scast.64    %r18831 <- (32) %r18829
	add.64*     %r18832 <- %r18828, %r18831
	store.8     $8 -> 0[%r18832]
	symaddr.64* %r18833 <- log_2
	load.32     %r18834 <- 0[i]
	add.32      %r18835 <- %r18834, $1
	store.32    %r18835 -> 0[i]
	scast.64    %r18836 <- (32) %r18834
	add.64*     %r18837 <- %r18833, %r18836
	store.8     $8 -> 0[%r18837]
	symaddr.64* %r18838 <- log_2
	load.32     %r18839 <- 0[i]
	add.32      %r18840 <- %r18839, $1
	store.32    %r18840 -> 0[i]
	scast.64    %r18841 <- (32) %r18839
	add.64*     %r18842 <- %r18838, %r18841
	store.8     $8 -> 0[%r18842]
	symaddr.64* %r18843 <- log_2
	load.32     %r18844 <- 0[i]
	add.32      %r18845 <- %r18844, $1
	store.32    %r18845 -> 0[i]
	scast.64    %r18846 <- (32) %r18844
	add.64*     %r18847 <- %r18843, %r18846
	store.8     $8 -> 0[%r18847]
	symaddr.64* %r18848 <- log_2
	load.32     %r18849 <- 0[i]
	add.32      %r18850 <- %r18849, $1
	store.32    %r18850 -> 0[i]
	scast.64    %r18851 <- (32) %r18849
	add.64*     %r18852 <- %r18848, %r18851
	store.8     $8 -> 0[%r18852]
	symaddr.64* %r18853 <- log_2
	load.32     %r18854 <- 0[i]
	add.32      %r18855 <- %r18854, $1
	store.32    %r18855 -> 0[i]
	scast.64    %r18856 <- (32) %r18854
	add.64*     %r18857 <- %r18853, %r18856
	store.8     $8 -> 0[%r18857]
	symaddr.64* %r18858 <- log_2
	load.32     %r18859 <- 0[i]
	add.32      %r18860 <- %r18859, $1
	store.32    %r18860 -> 0[i]
	scast.64    %r18861 <- (32) %r18859
	add.64*     %r18862 <- %r18858, %r18861
	store.8     $8 -> 0[%r18862]
	symaddr.64* %r18863 <- log_2
	load.32     %r18864 <- 0[i]
	add.32      %r18865 <- %r18864, $1
	store.32    %r18865 -> 0[i]
	scast.64    %r18866 <- (32) %r18864
	add.64*     %r18867 <- %r18863, %r18866
	store.8     $8 -> 0[%r18867]
	symaddr.64* %r18868 <- log_2
	load.32     %r18869 <- 0[i]
	add.32      %r18870 <- %r18869, $1
	store.32    %r18870 -> 0[i]
	scast.64    %r18871 <- (32) %r18869
	add.64*     %r18872 <- %r18868, %r18871
	store.8     $8 -> 0[%r18872]
	symaddr.64* %r18873 <- log_2
	load.32     %r18874 <- 0[i]
	add.32      %r18875 <- %r18874, $1
	store.32    %r18875 -> 0[i]
	scast.64    %r18876 <- (32) %r18874
	add.64*     %r18877 <- %r18873, %r18876
	store.8     $8 -> 0[%r18877]
	symaddr.64* %r18878 <- log_2
	load.32     %r18879 <- 0[i]
	add.32      %r18880 <- %r18879, $1
	store.32    %r18880 -> 0[i]
	scast.64    %r18881 <- (32) %r18879
	add.64*     %r18882 <- %r18878, %r18881
	store.8     $8 -> 0[%r18882]
	symaddr.64* %r18883 <- log_2
	load.32     %r18884 <- 0[i]
	add.32      %r18885 <- %r18884, $1
	store.32    %r18885 -> 0[i]
	scast.64    %r18886 <- (32) %r18884
	add.64*     %r18887 <- %r18883, %r18886
	store.8     $8 -> 0[%r18887]
	symaddr.64* %r18888 <- log_2
	load.32     %r18889 <- 0[i]
	add.32      %r18890 <- %r18889, $1
	store.32    %r18890 -> 0[i]
	scast.64    %r18891 <- (32) %r18889
	add.64*     %r18892 <- %r18888, %r18891
	store.8     $8 -> 0[%r18892]
	symaddr.64* %r18893 <- log_2
	load.32     %r18894 <- 0[i]
	add.32      %r18895 <- %r18894, $1
	store.32    %r18895 -> 0[i]
	scast.64    %r18896 <- (32) %r18894
	add.64*     %r18897 <- %r18893, %r18896
	store.8     $8 -> 0[%r18897]
	symaddr.64* %r18898 <- log_2
	load.32     %r18899 <- 0[i]
	add.32      %r18900 <- %r18899, $1
	store.32    %r18900 -> 0[i]
	scast.64    %r18901 <- (32) %r18899
	add.64*     %r18902 <- %r18898, %r18901
	store.8     $8 -> 0[%r18902]
	symaddr.64* %r18903 <- log_2
	load.32     %r18904 <- 0[i]
	add.32      %r18905 <- %r18904, $1
	store.32    %r18905 -> 0[i]
	scast.64    %r18906 <- (32) %r18904
	add.64*     %r18907 <- %r18903, %r18906
	store.8     $8 -> 0[%r18907]
	symaddr.64* %r18908 <- log_2
	load.32     %r18909 <- 0[i]
	add.32      %r18910 <- %r18909, $1
	store.32    %r18910 -> 0[i]
	scast.64    %r18911 <- (32) %r18909
	add.64*     %r18912 <- %r18908, %r18911
	store.8     $8 -> 0[%r18912]
	symaddr.64* %r18913 <- log_2
	load.32     %r18914 <- 0[i]
	add.32      %r18915 <- %r18914, $1
	store.32    %r18915 -> 0[i]
	scast.64    %r18916 <- (32) %r18914
	add.64*     %r18917 <- %r18913, %r18916
	store.8     $8 -> 0[%r18917]
	symaddr.64* %r18918 <- log_2
	load.32     %r18919 <- 0[i]
	add.32      %r18920 <- %r18919, $1
	store.32    %r18920 -> 0[i]
	scast.64    %r18921 <- (32) %r18919
	add.64*     %r18922 <- %r18918, %r18921
	store.8     $8 -> 0[%r18922]
	symaddr.64* %r18923 <- log_2
	load.32     %r18924 <- 0[i]
	add.32      %r18925 <- %r18924, $1
	store.32    %r18925 -> 0[i]
	scast.64    %r18926 <- (32) %r18924
	add.64*     %r18927 <- %r18923, %r18926
	store.8     $8 -> 0[%r18927]
	symaddr.64* %r18928 <- log_2
	load.32     %r18929 <- 0[i]
	add.32      %r18930 <- %r18929, $1
	store.32    %r18930 -> 0[i]
	scast.64    %r18931 <- (32) %r18929
	add.64*     %r18932 <- %r18928, %r18931
	store.8     $8 -> 0[%r18932]
	symaddr.64* %r18933 <- log_2
	load.32     %r18934 <- 0[i]
	add.32      %r18935 <- %r18934, $1
	store.32    %r18935 -> 0[i]
	scast.64    %r18936 <- (32) %r18934
	add.64*     %r18937 <- %r18933, %r18936
	store.8     $8 -> 0[%r18937]
	symaddr.64* %r18938 <- log_2
	load.32     %r18939 <- 0[i]
	add.32      %r18940 <- %r18939, $1
	store.32    %r18940 -> 0[i]
	scast.64    %r18941 <- (32) %r18939
	add.64*     %r18942 <- %r18938, %r18941
	store.8     $8 -> 0[%r18942]
	symaddr.64* %r18943 <- log_2
	load.32     %r18944 <- 0[i]
	add.32      %r18945 <- %r18944, $1
	store.32    %r18945 -> 0[i]
	scast.64    %r18946 <- (32) %r18944
	add.64*     %r18947 <- %r18943, %r18946
	store.8     $8 -> 0[%r18947]
	symaddr.64* %r18948 <- log_2
	load.32     %r18949 <- 0[i]
	add.32      %r18950 <- %r18949, $1
	store.32    %r18950 -> 0[i]
	scast.64    %r18951 <- (32) %r18949
	add.64*     %r18952 <- %r18948, %r18951
	store.8     $8 -> 0[%r18952]
	symaddr.64* %r18953 <- log_2
	load.32     %r18954 <- 0[i]
	add.32      %r18955 <- %r18954, $1
	store.32    %r18955 -> 0[i]
	scast.64    %r18956 <- (32) %r18954
	add.64*     %r18957 <- %r18953, %r18956
	store.8     $8 -> 0[%r18957]
	symaddr.64* %r18958 <- log_2
	load.32     %r18959 <- 0[i]
	add.32      %r18960 <- %r18959, $1
	store.32    %r18960 -> 0[i]
	scast.64    %r18961 <- (32) %r18959
	add.64*     %r18962 <- %r18958, %r18961
	store.8     $8 -> 0[%r18962]
	symaddr.64* %r18963 <- log_2
	load.32     %r18964 <- 0[i]
	add.32      %r18965 <- %r18964, $1
	store.32    %r18965 -> 0[i]
	scast.64    %r18966 <- (32) %r18964
	add.64*     %r18967 <- %r18963, %r18966
	store.8     $8 -> 0[%r18967]
	symaddr.64* %r18968 <- log_2
	load.32     %r18969 <- 0[i]
	add.32      %r18970 <- %r18969, $1
	store.32    %r18970 -> 0[i]
	scast.64    %r18971 <- (32) %r18969
	add.64*     %r18972 <- %r18968, %r18971
	store.8     $8 -> 0[%r18972]
	symaddr.64* %r18973 <- log_2
	load.32     %r18974 <- 0[i]
	add.32      %r18975 <- %r18974, $1
	store.32    %r18975 -> 0[i]
	scast.64    %r18976 <- (32) %r18974
	add.64*     %r18977 <- %r18973, %r18976
	store.8     $8 -> 0[%r18977]
	symaddr.64* %r18978 <- log_2
	load.32     %r18979 <- 0[i]
	add.32      %r18980 <- %r18979, $1
	store.32    %r18980 -> 0[i]
	scast.64    %r18981 <- (32) %r18979
	add.64*     %r18982 <- %r18978, %r18981
	store.8     $8 -> 0[%r18982]
	symaddr.64* %r18983 <- log_2
	load.32     %r18984 <- 0[i]
	add.32      %r18985 <- %r18984, $1
	store.32    %r18985 -> 0[i]
	scast.64    %r18986 <- (32) %r18984
	add.64*     %r18987 <- %r18983, %r18986
	store.8     $8 -> 0[%r18987]
	symaddr.64* %r18988 <- log_2
	load.32     %r18989 <- 0[i]
	add.32      %r18990 <- %r18989, $1
	store.32    %r18990 -> 0[i]
	scast.64    %r18991 <- (32) %r18989
	add.64*     %r18992 <- %r18988, %r18991
	store.8     $8 -> 0[%r18992]
	symaddr.64* %r18993 <- log_2
	load.32     %r18994 <- 0[i]
	add.32      %r18995 <- %r18994, $1
	store.32    %r18995 -> 0[i]
	scast.64    %r18996 <- (32) %r18994
	add.64*     %r18997 <- %r18993, %r18996
	store.8     $8 -> 0[%r18997]
	symaddr.64* %r18998 <- log_2
	load.32     %r18999 <- 0[i]
	add.32      %r19000 <- %r18999, $1
	store.32    %r19000 -> 0[i]
	scast.64    %r19001 <- (32) %r18999
	add.64*     %r19002 <- %r18998, %r19001
	store.8     $8 -> 0[%r19002]
	symaddr.64* %r19003 <- log_2
	load.32     %r19004 <- 0[i]
	add.32      %r19005 <- %r19004, $1
	store.32    %r19005 -> 0[i]
	scast.64    %r19006 <- (32) %r19004
	add.64*     %r19007 <- %r19003, %r19006
	store.8     $8 -> 0[%r19007]
	symaddr.64* %r19008 <- log_2
	load.32     %r19009 <- 0[i]
	add.32      %r19010 <- %r19009, $1
	store.32    %r19010 -> 0[i]
	scast.64    %r19011 <- (32) %r19009
	add.64*     %r19012 <- %r19008, %r19011
	store.8     $8 -> 0[%r19012]
	symaddr.64* %r19013 <- log_2
	load.32     %r19014 <- 0[i]
	add.32      %r19015 <- %r19014, $1
	store.32    %r19015 -> 0[i]
	scast.64    %r19016 <- (32) %r19014
	add.64*     %r19017 <- %r19013, %r19016
	store.8     $8 -> 0[%r19017]
	symaddr.64* %r19018 <- log_2
	load.32     %r19019 <- 0[i]
	add.32      %r19020 <- %r19019, $1
	store.32    %r19020 -> 0[i]
	scast.64    %r19021 <- (32) %r19019
	add.64*     %r19022 <- %r19018, %r19021
	store.8     $8 -> 0[%r19022]
	symaddr.64* %r19023 <- log_2
	load.32     %r19024 <- 0[i]
	add.32      %r19025 <- %r19024, $1
	store.32    %r19025 -> 0[i]
	scast.64    %r19026 <- (32) %r19024
	add.64*     %r19027 <- %r19023, %r19026
	store.8     $8 -> 0[%r19027]
	symaddr.64* %r19028 <- log_2
	load.32     %r19029 <- 0[i]
	add.32      %r19030 <- %r19029, $1
	store.32    %r19030 -> 0[i]
	scast.64    %r19031 <- (32) %r19029
	add.64*     %r19032 <- %r19028, %r19031
	store.8     $8 -> 0[%r19032]
	symaddr.64* %r19033 <- log_2
	load.32     %r19034 <- 0[i]
	add.32      %r19035 <- %r19034, $1
	store.32    %r19035 -> 0[i]
	scast.64    %r19036 <- (32) %r19034
	add.64*     %r19037 <- %r19033, %r19036
	store.8     $8 -> 0[%r19037]
	symaddr.64* %r19038 <- log_2
	load.32     %r19039 <- 0[i]
	add.32      %r19040 <- %r19039, $1
	store.32    %r19040 -> 0[i]
	scast.64    %r19041 <- (32) %r19039
	add.64*     %r19042 <- %r19038, %r19041
	store.8     $8 -> 0[%r19042]
	symaddr.64* %r19043 <- log_2
	load.32     %r19044 <- 0[i]
	add.32      %r19045 <- %r19044, $1
	store.32    %r19045 -> 0[i]
	scast.64    %r19046 <- (32) %r19044
	add.64*     %r19047 <- %r19043, %r19046
	store.8     $8 -> 0[%r19047]
	symaddr.64* %r19048 <- log_2
	load.32     %r19049 <- 0[i]
	add.32      %r19050 <- %r19049, $1
	store.32    %r19050 -> 0[i]
	scast.64    %r19051 <- (32) %r19049
	add.64*     %r19052 <- %r19048, %r19051
	store.8     $8 -> 0[%r19052]
	symaddr.64* %r19053 <- log_2
	load.32     %r19054 <- 0[i]
	add.32      %r19055 <- %r19054, $1
	store.32    %r19055 -> 0[i]
	scast.64    %r19056 <- (32) %r19054
	add.64*     %r19057 <- %r19053, %r19056
	store.8     $8 -> 0[%r19057]
	symaddr.64* %r19058 <- log_2
	load.32     %r19059 <- 0[i]
	add.32      %r19060 <- %r19059, $1
	store.32    %r19060 -> 0[i]
	scast.64    %r19061 <- (32) %r19059
	add.64*     %r19062 <- %r19058, %r19061
	store.8     $8 -> 0[%r19062]
	symaddr.64* %r19063 <- log_2
	load.32     %r19064 <- 0[i]
	add.32      %r19065 <- %r19064, $1
	store.32    %r19065 -> 0[i]
	scast.64    %r19066 <- (32) %r19064
	add.64*     %r19067 <- %r19063, %r19066
	store.8     $8 -> 0[%r19067]
	symaddr.64* %r19068 <- log_2
	load.32     %r19069 <- 0[i]
	add.32      %r19070 <- %r19069, $1
	store.32    %r19070 -> 0[i]
	scast.64    %r19071 <- (32) %r19069
	add.64*     %r19072 <- %r19068, %r19071
	store.8     $8 -> 0[%r19072]
	symaddr.64* %r19073 <- log_2
	load.32     %r19074 <- 0[i]
	add.32      %r19075 <- %r19074, $1
	store.32    %r19075 -> 0[i]
	scast.64    %r19076 <- (32) %r19074
	add.64*     %r19077 <- %r19073, %r19076
	store.8     $8 -> 0[%r19077]
	symaddr.64* %r19078 <- log_2
	load.32     %r19079 <- 0[i]
	add.32      %r19080 <- %r19079, $1
	store.32    %r19080 -> 0[i]
	scast.64    %r19081 <- (32) %r19079
	add.64*     %r19082 <- %r19078, %r19081
	store.8     $8 -> 0[%r19082]
	symaddr.64* %r19083 <- log_2
	load.32     %r19084 <- 0[i]
	add.32      %r19085 <- %r19084, $1
	store.32    %r19085 -> 0[i]
	scast.64    %r19086 <- (32) %r19084
	add.64*     %r19087 <- %r19083, %r19086
	store.8     $8 -> 0[%r19087]
	symaddr.64* %r19088 <- log_2
	load.32     %r19089 <- 0[i]
	add.32      %r19090 <- %r19089, $1
	store.32    %r19090 -> 0[i]
	scast.64    %r19091 <- (32) %r19089
	add.64*     %r19092 <- %r19088, %r19091
	store.8     $8 -> 0[%r19092]
	symaddr.64* %r19093 <- log_2
	load.32     %r19094 <- 0[i]
	add.32      %r19095 <- %r19094, $1
	store.32    %r19095 -> 0[i]
	scast.64    %r19096 <- (32) %r19094
	add.64*     %r19097 <- %r19093, %r19096
	store.8     $8 -> 0[%r19097]
	symaddr.64* %r19098 <- log_2
	load.32     %r19099 <- 0[i]
	add.32      %r19100 <- %r19099, $1
	store.32    %r19100 -> 0[i]
	scast.64    %r19101 <- (32) %r19099
	add.64*     %r19102 <- %r19098, %r19101
	store.8     $8 -> 0[%r19102]
	symaddr.64* %r19103 <- log_2
	load.32     %r19104 <- 0[i]
	add.32      %r19105 <- %r19104, $1
	store.32    %r19105 -> 0[i]
	scast.64    %r19106 <- (32) %r19104
	add.64*     %r19107 <- %r19103, %r19106
	store.8     $8 -> 0[%r19107]
	symaddr.64* %r19108 <- log_2
	load.32     %r19109 <- 0[i]
	add.32      %r19110 <- %r19109, $1
	store.32    %r19110 -> 0[i]
	scast.64    %r19111 <- (32) %r19109
	add.64*     %r19112 <- %r19108, %r19111
	store.8     $8 -> 0[%r19112]
	symaddr.64* %r19113 <- log_2
	load.32     %r19114 <- 0[i]
	add.32      %r19115 <- %r19114, $1
	store.32    %r19115 -> 0[i]
	scast.64    %r19116 <- (32) %r19114
	add.64*     %r19117 <- %r19113, %r19116
	store.8     $8 -> 0[%r19117]
	symaddr.64* %r19118 <- log_2
	load.32     %r19119 <- 0[i]
	add.32      %r19120 <- %r19119, $1
	store.32    %r19120 -> 0[i]
	scast.64    %r19121 <- (32) %r19119
	add.64*     %r19122 <- %r19118, %r19121
	store.8     $8 -> 0[%r19122]
	symaddr.64* %r19123 <- log_2
	load.32     %r19124 <- 0[i]
	add.32      %r19125 <- %r19124, $1
	store.32    %r19125 -> 0[i]
	scast.64    %r19126 <- (32) %r19124
	add.64*     %r19127 <- %r19123, %r19126
	store.8     $8 -> 0[%r19127]
	symaddr.64* %r19128 <- log_2
	load.32     %r19129 <- 0[i]
	add.32      %r19130 <- %r19129, $1
	store.32    %r19130 -> 0[i]
	scast.64    %r19131 <- (32) %r19129
	add.64*     %r19132 <- %r19128, %r19131
	store.8     $8 -> 0[%r19132]
	symaddr.64* %r19133 <- log_2
	load.32     %r19134 <- 0[i]
	add.32      %r19135 <- %r19134, $1
	store.32    %r19135 -> 0[i]
	scast.64    %r19136 <- (32) %r19134
	add.64*     %r19137 <- %r19133, %r19136
	store.8     $8 -> 0[%r19137]
	symaddr.64* %r19138 <- log_2
	load.32     %r19139 <- 0[i]
	add.32      %r19140 <- %r19139, $1
	store.32    %r19140 -> 0[i]
	scast.64    %r19141 <- (32) %r19139
	add.64*     %r19142 <- %r19138, %r19141
	store.8     $8 -> 0[%r19142]
	symaddr.64* %r19143 <- log_2
	load.32     %r19144 <- 0[i]
	add.32      %r19145 <- %r19144, $1
	store.32    %r19145 -> 0[i]
	scast.64    %r19146 <- (32) %r19144
	add.64*     %r19147 <- %r19143, %r19146
	store.8     $8 -> 0[%r19147]
	symaddr.64* %r19148 <- log_2
	load.32     %r19149 <- 0[i]
	add.32      %r19150 <- %r19149, $1
	store.32    %r19150 -> 0[i]
	scast.64    %r19151 <- (32) %r19149
	add.64*     %r19152 <- %r19148, %r19151
	store.8     $8 -> 0[%r19152]
	symaddr.64* %r19153 <- log_2
	load.32     %r19154 <- 0[i]
	add.32      %r19155 <- %r19154, $1
	store.32    %r19155 -> 0[i]
	scast.64    %r19156 <- (32) %r19154
	add.64*     %r19157 <- %r19153, %r19156
	store.8     $8 -> 0[%r19157]
	symaddr.64* %r19158 <- log_2
	load.32     %r19159 <- 0[i]
	add.32      %r19160 <- %r19159, $1
	store.32    %r19160 -> 0[i]
	scast.64    %r19161 <- (32) %r19159
	add.64*     %r19162 <- %r19158, %r19161
	store.8     $8 -> 0[%r19162]
	symaddr.64* %r19163 <- log_2
	load.32     %r19164 <- 0[i]
	add.32      %r19165 <- %r19164, $1
	store.32    %r19165 -> 0[i]
	scast.64    %r19166 <- (32) %r19164
	add.64*     %r19167 <- %r19163, %r19166
	store.8     $8 -> 0[%r19167]
	symaddr.64* %r19168 <- log_2
	load.32     %r19169 <- 0[i]
	add.32      %r19170 <- %r19169, $1
	store.32    %r19170 -> 0[i]
	scast.64    %r19171 <- (32) %r19169
	add.64*     %r19172 <- %r19168, %r19171
	store.8     $8 -> 0[%r19172]
	symaddr.64* %r19173 <- log_2
	load.32     %r19174 <- 0[i]
	add.32      %r19175 <- %r19174, $1
	store.32    %r19175 -> 0[i]
	scast.64    %r19176 <- (32) %r19174
	add.64*     %r19177 <- %r19173, %r19176
	store.8     $8 -> 0[%r19177]
	symaddr.64* %r19178 <- log_2
	load.32     %r19179 <- 0[i]
	add.32      %r19180 <- %r19179, $1
	store.32    %r19180 -> 0[i]
	scast.64    %r19181 <- (32) %r19179
	add.64*     %r19182 <- %r19178, %r19181
	store.8     $8 -> 0[%r19182]
	symaddr.64* %r19183 <- log_2
	load.32     %r19184 <- 0[i]
	add.32      %r19185 <- %r19184, $1
	store.32    %r19185 -> 0[i]
	scast.64    %r19186 <- (32) %r19184
	add.64*     %r19187 <- %r19183, %r19186
	store.8     $8 -> 0[%r19187]
	symaddr.64* %r19188 <- log_2
	load.32     %r19189 <- 0[i]
	add.32      %r19190 <- %r19189, $1
	store.32    %r19190 -> 0[i]
	scast.64    %r19191 <- (32) %r19189
	add.64*     %r19192 <- %r19188, %r19191
	store.8     $8 -> 0[%r19192]
	symaddr.64* %r19193 <- log_2
	load.32     %r19194 <- 0[i]
	add.32      %r19195 <- %r19194, $1
	store.32    %r19195 -> 0[i]
	scast.64    %r19196 <- (32) %r19194
	add.64*     %r19197 <- %r19193, %r19196
	store.8     $8 -> 0[%r19197]
	symaddr.64* %r19198 <- log_2
	load.32     %r19199 <- 0[i]
	add.32      %r19200 <- %r19199, $1
	store.32    %r19200 -> 0[i]
	scast.64    %r19201 <- (32) %r19199
	add.64*     %r19202 <- %r19198, %r19201
	store.8     $8 -> 0[%r19202]
	symaddr.64* %r19203 <- log_2
	load.32     %r19204 <- 0[i]
	add.32      %r19205 <- %r19204, $1
	store.32    %r19205 -> 0[i]
	scast.64    %r19206 <- (32) %r19204
	add.64*     %r19207 <- %r19203, %r19206
	store.8     $8 -> 0[%r19207]
	symaddr.64* %r19208 <- log_2
	load.32     %r19209 <- 0[i]
	add.32      %r19210 <- %r19209, $1
	store.32    %r19210 -> 0[i]
	scast.64    %r19211 <- (32) %r19209
	add.64*     %r19212 <- %r19208, %r19211
	store.8     $8 -> 0[%r19212]
	symaddr.64* %r19213 <- log_2
	load.32     %r19214 <- 0[i]
	add.32      %r19215 <- %r19214, $1
	store.32    %r19215 -> 0[i]
	scast.64    %r19216 <- (32) %r19214
	add.64*     %r19217 <- %r19213, %r19216
	store.8     $8 -> 0[%r19217]
	symaddr.64* %r19218 <- log_2
	load.32     %r19219 <- 0[i]
	add.32      %r19220 <- %r19219, $1
	store.32    %r19220 -> 0[i]
	scast.64    %r19221 <- (32) %r19219
	add.64*     %r19222 <- %r19218, %r19221
	store.8     $8 -> 0[%r19222]
	symaddr.64* %r19223 <- log_2
	load.32     %r19224 <- 0[i]
	add.32      %r19225 <- %r19224, $1
	store.32    %r19225 -> 0[i]
	scast.64    %r19226 <- (32) %r19224
	add.64*     %r19227 <- %r19223, %r19226
	store.8     $8 -> 0[%r19227]
	symaddr.64* %r19228 <- log_2
	load.32     %r19229 <- 0[i]
	add.32      %r19230 <- %r19229, $1
	store.32    %r19230 -> 0[i]
	scast.64    %r19231 <- (32) %r19229
	add.64*     %r19232 <- %r19228, %r19231
	store.8     $8 -> 0[%r19232]
	symaddr.64* %r19233 <- log_2
	load.32     %r19234 <- 0[i]
	add.32      %r19235 <- %r19234, $1
	store.32    %r19235 -> 0[i]
	scast.64    %r19236 <- (32) %r19234
	add.64*     %r19237 <- %r19233, %r19236
	store.8     $8 -> 0[%r19237]
	symaddr.64* %r19238 <- log_2
	load.32     %r19239 <- 0[i]
	add.32      %r19240 <- %r19239, $1
	store.32    %r19240 -> 0[i]
	scast.64    %r19241 <- (32) %r19239
	add.64*     %r19242 <- %r19238, %r19241
	store.8     $8 -> 0[%r19242]
	symaddr.64* %r19243 <- log_2
	load.32     %r19244 <- 0[i]
	add.32      %r19245 <- %r19244, $1
	store.32    %r19245 -> 0[i]
	scast.64    %r19246 <- (32) %r19244
	add.64*     %r19247 <- %r19243, %r19246
	store.8     $8 -> 0[%r19247]
	symaddr.64* %r19248 <- log_2
	load.32     %r19249 <- 0[i]
	add.32      %r19250 <- %r19249, $1
	store.32    %r19250 -> 0[i]
	scast.64    %r19251 <- (32) %r19249
	add.64*     %r19252 <- %r19248, %r19251
	store.8     $8 -> 0[%r19252]
	symaddr.64* %r19253 <- log_2
	load.32     %r19254 <- 0[i]
	add.32      %r19255 <- %r19254, $1
	store.32    %r19255 -> 0[i]
	scast.64    %r19256 <- (32) %r19254
	add.64*     %r19257 <- %r19253, %r19256
	store.8     $8 -> 0[%r19257]
	symaddr.64* %r19258 <- log_2
	load.32     %r19259 <- 0[i]
	add.32      %r19260 <- %r19259, $1
	store.32    %r19260 -> 0[i]
	scast.64    %r19261 <- (32) %r19259
	add.64*     %r19262 <- %r19258, %r19261
	store.8     $8 -> 0[%r19262]
	symaddr.64* %r19263 <- log_2
	load.32     %r19264 <- 0[i]
	add.32      %r19265 <- %r19264, $1
	store.32    %r19265 -> 0[i]
	scast.64    %r19266 <- (32) %r19264
	add.64*     %r19267 <- %r19263, %r19266
	store.8     $8 -> 0[%r19267]
	symaddr.64* %r19268 <- log_2
	load.32     %r19269 <- 0[i]
	add.32      %r19270 <- %r19269, $1
	store.32    %r19270 -> 0[i]
	scast.64    %r19271 <- (32) %r19269
	add.64*     %r19272 <- %r19268, %r19271
	store.8     $8 -> 0[%r19272]
	symaddr.64* %r19273 <- log_2
	load.32     %r19274 <- 0[i]
	add.32      %r19275 <- %r19274, $1
	store.32    %r19275 -> 0[i]
	scast.64    %r19276 <- (32) %r19274
	add.64*     %r19277 <- %r19273, %r19276
	store.8     $8 -> 0[%r19277]
	symaddr.64* %r19278 <- log_2
	load.32     %r19279 <- 0[i]
	add.32      %r19280 <- %r19279, $1
	store.32    %r19280 -> 0[i]
	scast.64    %r19281 <- (32) %r19279
	add.64*     %r19282 <- %r19278, %r19281
	store.8     $8 -> 0[%r19282]
	symaddr.64* %r19283 <- log_2
	load.32     %r19284 <- 0[i]
	add.32      %r19285 <- %r19284, $1
	store.32    %r19285 -> 0[i]
	scast.64    %r19286 <- (32) %r19284
	add.64*     %r19287 <- %r19283, %r19286
	store.8     $8 -> 0[%r19287]
	symaddr.64* %r19288 <- log_2
	load.32     %r19289 <- 0[i]
	add.32      %r19290 <- %r19289, $1
	store.32    %r19290 -> 0[i]
	scast.64    %r19291 <- (32) %r19289
	add.64*     %r19292 <- %r19288, %r19291
	store.8     $8 -> 0[%r19292]
	symaddr.64* %r19293 <- log_2
	load.32     %r19294 <- 0[i]
	add.32      %r19295 <- %r19294, $1
	store.32    %r19295 -> 0[i]
	scast.64    %r19296 <- (32) %r19294
	add.64*     %r19297 <- %r19293, %r19296
	store.8     $8 -> 0[%r19297]
	symaddr.64* %r19298 <- log_2
	load.32     %r19299 <- 0[i]
	add.32      %r19300 <- %r19299, $1
	store.32    %r19300 -> 0[i]
	scast.64    %r19301 <- (32) %r19299
	add.64*     %r19302 <- %r19298, %r19301
	store.8     $8 -> 0[%r19302]
	symaddr.64* %r19303 <- log_2
	load.32     %r19304 <- 0[i]
	add.32      %r19305 <- %r19304, $1
	store.32    %r19305 -> 0[i]
	scast.64    %r19306 <- (32) %r19304
	add.64*     %r19307 <- %r19303, %r19306
	store.8     $8 -> 0[%r19307]
	symaddr.64* %r19308 <- log_2
	load.32     %r19309 <- 0[i]
	add.32      %r19310 <- %r19309, $1
	store.32    %r19310 -> 0[i]
	scast.64    %r19311 <- (32) %r19309
	add.64*     %r19312 <- %r19308, %r19311
	store.8     $8 -> 0[%r19312]
	symaddr.64* %r19313 <- log_2
	load.32     %r19314 <- 0[i]
	add.32      %r19315 <- %r19314, $1
	store.32    %r19315 -> 0[i]
	scast.64    %r19316 <- (32) %r19314
	add.64*     %r19317 <- %r19313, %r19316
	store.8     $8 -> 0[%r19317]
	symaddr.64* %r19318 <- log_2
	load.32     %r19319 <- 0[i]
	add.32      %r19320 <- %r19319, $1
	store.32    %r19320 -> 0[i]
	scast.64    %r19321 <- (32) %r19319
	add.64*     %r19322 <- %r19318, %r19321
	store.8     $8 -> 0[%r19322]
	symaddr.64* %r19323 <- log_2
	load.32     %r19324 <- 0[i]
	add.32      %r19325 <- %r19324, $1
	store.32    %r19325 -> 0[i]
	scast.64    %r19326 <- (32) %r19324
	add.64*     %r19327 <- %r19323, %r19326
	store.8     $8 -> 0[%r19327]
	symaddr.64* %r19328 <- log_2
	load.32     %r19329 <- 0[i]
	add.32      %r19330 <- %r19329, $1
	store.32    %r19330 -> 0[i]
	scast.64    %r19331 <- (32) %r19329
	add.64*     %r19332 <- %r19328, %r19331
	store.8     $8 -> 0[%r19332]
	symaddr.64* %r19333 <- log_2
	load.32     %r19334 <- 0[i]
	add.32      %r19335 <- %r19334, $1
	store.32    %r19335 -> 0[i]
	scast.64    %r19336 <- (32) %r19334
	add.64*     %r19337 <- %r19333, %r19336
	store.8     $8 -> 0[%r19337]
	symaddr.64* %r19338 <- log_2
	load.32     %r19339 <- 0[i]
	add.32      %r19340 <- %r19339, $1
	store.32    %r19340 -> 0[i]
	scast.64    %r19341 <- (32) %r19339
	add.64*     %r19342 <- %r19338, %r19341
	store.8     $8 -> 0[%r19342]
	symaddr.64* %r19343 <- log_2
	load.32     %r19344 <- 0[i]
	add.32      %r19345 <- %r19344, $1
	store.32    %r19345 -> 0[i]
	scast.64    %r19346 <- (32) %r19344
	add.64*     %r19347 <- %r19343, %r19346
	store.8     $8 -> 0[%r19347]
	symaddr.64* %r19348 <- log_2
	load.32     %r19349 <- 0[i]
	add.32      %r19350 <- %r19349, $1
	store.32    %r19350 -> 0[i]
	scast.64    %r19351 <- (32) %r19349
	add.64*     %r19352 <- %r19348, %r19351
	store.8     $8 -> 0[%r19352]
	symaddr.64* %r19353 <- log_2
	load.32     %r19354 <- 0[i]
	add.32      %r19355 <- %r19354, $1
	store.32    %r19355 -> 0[i]
	scast.64    %r19356 <- (32) %r19354
	add.64*     %r19357 <- %r19353, %r19356
	store.8     $8 -> 0[%r19357]
	symaddr.64* %r19358 <- log_2
	load.32     %r19359 <- 0[i]
	add.32      %r19360 <- %r19359, $1
	store.32    %r19360 -> 0[i]
	scast.64    %r19361 <- (32) %r19359
	add.64*     %r19362 <- %r19358, %r19361
	store.8     $8 -> 0[%r19362]
	symaddr.64* %r19363 <- log_2
	load.32     %r19364 <- 0[i]
	add.32      %r19365 <- %r19364, $1
	store.32    %r19365 -> 0[i]
	scast.64    %r19366 <- (32) %r19364
	add.64*     %r19367 <- %r19363, %r19366
	store.8     $8 -> 0[%r19367]
	symaddr.64* %r19368 <- log_2
	load.32     %r19369 <- 0[i]
	add.32      %r19370 <- %r19369, $1
	store.32    %r19370 -> 0[i]
	scast.64    %r19371 <- (32) %r19369
	add.64*     %r19372 <- %r19368, %r19371
	store.8     $8 -> 0[%r19372]
	symaddr.64* %r19373 <- log_2
	load.32     %r19374 <- 0[i]
	add.32      %r19375 <- %r19374, $1
	store.32    %r19375 -> 0[i]
	scast.64    %r19376 <- (32) %r19374
	add.64*     %r19377 <- %r19373, %r19376
	store.8     $8 -> 0[%r19377]
	symaddr.64* %r19378 <- log_2
	load.32     %r19379 <- 0[i]
	add.32      %r19380 <- %r19379, $1
	store.32    %r19380 -> 0[i]
	scast.64    %r19381 <- (32) %r19379
	add.64*     %r19382 <- %r19378, %r19381
	store.8     $8 -> 0[%r19382]
	store.32    $0 -> 0[i]
	symaddr.64* %r19383 <- <anon symbol:0x1e8b508>
	symaddr.64* %r19384 <- luaT_typenames
	load.32     %r19385 <- 0[i]
	add.32      %r19386 <- %r19385, $1
	store.32    %r19386 -> 0[i]
	scast.64    %r19387 <- (32) %r19385
	muls.64     %r19388 <- %r19387, $8
	add.64*     %r19389 <- %r19384, %r19388
	store.64*   %r19383 -> 0[%r19389]
	symaddr.64* %r19390 <- <anon symbol:0x1e8bb60>
	symaddr.64* %r19391 <- luaT_typenames
	load.32     %r19392 <- 0[i]
	add.32      %r19393 <- %r19392, $1
	store.32    %r19393 -> 0[i]
	scast.64    %r19394 <- (32) %r19392
	muls.64     %r19395 <- %r19394, $8
	add.64*     %r19396 <- %r19391, %r19395
	store.64*   %r19390 -> 0[%r19396]
	symaddr.64* %r19397 <- <anon symbol:0x1e8c1b8>
	symaddr.64* %r19398 <- luaT_typenames
	load.32     %r19399 <- 0[i]
	add.32      %r19400 <- %r19399, $1
	store.32    %r19400 -> 0[i]
	scast.64    %r19401 <- (32) %r19399
	muls.64     %r19402 <- %r19401, $8
	add.64*     %r19403 <- %r19398, %r19402
	store.64*   %r19397 -> 0[%r19403]
	symaddr.64* %r19404 <- <anon symbol:0x1e8c810>
	symaddr.64* %r19405 <- luaT_typenames
	load.32     %r19406 <- 0[i]
	add.32      %r19407 <- %r19406, $1
	store.32    %r19407 -> 0[i]
	scast.64    %r19408 <- (32) %r19406
	muls.64     %r19409 <- %r19408, $8
	add.64*     %r19410 <- %r19405, %r19409
	store.64*   %r19404 -> 0[%r19410]
	symaddr.64* %r19411 <- <anon symbol:0x1e8ceb0>
	symaddr.64* %r19412 <- luaT_typenames
	load.32     %r19413 <- 0[i]
	add.32      %r19414 <- %r19413, $1
	store.32    %r19414 -> 0[i]
	scast.64    %r19415 <- (32) %r19413
	muls.64     %r19416 <- %r19415, $8
	add.64*     %r19417 <- %r19412, %r19416
	store.64*   %r19411 -> 0[%r19417]
	symaddr.64* %r19418 <- <anon symbol:0x1e8d508>
	symaddr.64* %r19419 <- luaT_typenames
	load.32     %r19420 <- 0[i]
	add.32      %r19421 <- %r19420, $1
	store.32    %r19421 -> 0[i]
	scast.64    %r19422 <- (32) %r19420
	muls.64     %r19423 <- %r19422, $8
	add.64*     %r19424 <- %r19419, %r19423
	store.64*   %r19418 -> 0[%r19424]
	symaddr.64* %r19425 <- <anon symbol:0x1e8db60>
	symaddr.64* %r19426 <- luaT_typenames
	load.32     %r19427 <- 0[i]
	add.32      %r19428 <- %r19427, $1
	store.32    %r19428 -> 0[i]
	scast.64    %r19429 <- (32) %r19427
	muls.64     %r19430 <- %r19429, $8
	add.64*     %r19431 <- %r19426, %r19430
	store.64*   %r19425 -> 0[%r19431]
	symaddr.64* %r19432 <- <anon symbol:0x1e8e1b8>
	symaddr.64* %r19433 <- luaT_typenames
	load.32     %r19434 <- 0[i]
	add.32      %r19435 <- %r19434, $1
	store.32    %r19435 -> 0[i]
	scast.64    %r19436 <- (32) %r19434
	muls.64     %r19437 <- %r19436, $8
	add.64*     %r19438 <- %r19433, %r19437
	store.64*   %r19432 -> 0[%r19438]
	symaddr.64* %r19439 <- <anon symbol:0x1e8e810>
	symaddr.64* %r19440 <- luaT_typenames
	load.32     %r19441 <- 0[i]
	add.32      %r19442 <- %r19441, $1
	store.32    %r19442 -> 0[i]
	scast.64    %r19443 <- (32) %r19441
	muls.64     %r19444 <- %r19443, $8
	add.64*     %r19445 <- %r19440, %r19444
	store.64*   %r19439 -> 0[%r19445]
	symaddr.64* %r19446 <- <anon symbol:0x1e8ee68>
	symaddr.64* %r19447 <- luaT_typenames
	load.32     %r19448 <- 0[i]
	add.32      %r19449 <- %r19448, $1
	store.32    %r19449 -> 0[i]
	scast.64    %r19450 <- (32) %r19448
	muls.64     %r19451 <- %r19450, $8
	add.64*     %r19452 <- %r19447, %r19451
	store.64*   %r19446 -> 0[%r19452]
	symaddr.64* %r19453 <- <anon symbol:0x1e8f4c0>
	symaddr.64* %r19454 <- luaT_typenames
	load.32     %r19455 <- 0[i]
	add.32      %r19456 <- %r19455, $1
	store.32    %r19456 -> 0[i]
	scast.64    %r19457 <- (32) %r19455
	muls.64     %r19458 <- %r19457, $8
	add.64*     %r19459 <- %r19454, %r19458
	store.64*   %r19453 -> 0[%r19459]
	store.32    $0 -> 0[i]
	symaddr.64* %r19460 <- <anon symbol:0x1e8fb18>
	symaddr.64* %r19461 <- luaT_eventname
	load.32     %r19462 <- 0[i]
	add.32      %r19463 <- %r19462, $1
	store.32    %r19463 -> 0[i]
	scast.64    %r19464 <- (32) %r19462
	muls.64     %r19465 <- %r19464, $8
	add.64*     %r19466 <- %r19461, %r19465
	store.64*   %r19460 -> 0[%r19466]
	symaddr.64* %r19467 <- <anon symbol:0x1e90170>
	symaddr.64* %r19468 <- luaT_eventname
	load.32     %r19469 <- 0[i]
	add.32      %r19470 <- %r19469, $1
	store.32    %r19470 -> 0[i]
	scast.64    %r19471 <- (32) %r19469
	muls.64     %r19472 <- %r19471, $8
	add.64*     %r19473 <- %r19468, %r19472
	store.64*   %r19467 -> 0[%r19473]
	symaddr.64* %r19474 <- <anon symbol:0x1e907c8>
	symaddr.64* %r19475 <- luaT_eventname
	load.32     %r19476 <- 0[i]
	add.32      %r19477 <- %r19476, $1
	store.32    %r19477 -> 0[i]
	scast.64    %r19478 <- (32) %r19476
	muls.64     %r19479 <- %r19478, $8
	add.64*     %r19480 <- %r19475, %r19479
	store.64*   %r19474 -> 0[%r19480]
	symaddr.64* %r19481 <- <anon symbol:0x1e90e20>
	symaddr.64* %r19482 <- luaT_eventname
	load.32     %r19483 <- 0[i]
	add.32      %r19484 <- %r19483, $1
	store.32    %r19484 -> 0[i]
	scast.64    %r19485 <- (32) %r19483
	muls.64     %r19486 <- %r19485, $8
	add.64*     %r19487 <- %r19482, %r19486
	store.64*   %r19481 -> 0[%r19487]
	symaddr.64* %r19488 <- <anon symbol:0x1e91478>
	symaddr.64* %r19489 <- luaT_eventname
	load.32     %r19490 <- 0[i]
	add.32      %r19491 <- %r19490, $1
	store.32    %r19491 -> 0[i]
	scast.64    %r19492 <- (32) %r19490
	muls.64     %r19493 <- %r19492, $8
	add.64*     %r19494 <- %r19489, %r19493
	store.64*   %r19488 -> 0[%r19494]
	symaddr.64* %r19495 <- <anon symbol:0x1e91ad0>
	symaddr.64* %r19496 <- luaT_eventname
	load.32     %r19497 <- 0[i]
	add.32      %r19498 <- %r19497, $1
	store.32    %r19498 -> 0[i]
	scast.64    %r19499 <- (32) %r19497
	muls.64     %r19500 <- %r19499, $8
	add.64*     %r19501 <- %r19496, %r19500
	store.64*   %r19495 -> 0[%r19501]
	symaddr.64* %r19502 <- <anon symbol:0x1e92128>
	symaddr.64* %r19503 <- luaT_eventname
	load.32     %r19504 <- 0[i]
	add.32      %r19505 <- %r19504, $1
	store.32    %r19505 -> 0[i]
	scast.64    %r19506 <- (32) %r19504
	muls.64     %r19507 <- %r19506, $8
	add.64*     %r19508 <- %r19503, %r19507
	store.64*   %r19502 -> 0[%r19508]
	symaddr.64* %r19509 <- <anon symbol:0x1e92780>
	symaddr.64* %r19510 <- luaT_eventname
	load.32     %r19511 <- 0[i]
	add.32      %r19512 <- %r19511, $1
	store.32    %r19512 -> 0[i]
	scast.64    %r19513 <- (32) %r19511
	muls.64     %r19514 <- %r19513, $8
	add.64*     %r19515 <- %r19510, %r19514
	store.64*   %r19509 -> 0[%r19515]
	symaddr.64* %r19516 <- <anon symbol:0x1e92dd8>
	symaddr.64* %r19517 <- luaT_eventname
	load.32     %r19518 <- 0[i]
	add.32      %r19519 <- %r19518, $1
	store.32    %r19519 -> 0[i]
	scast.64    %r19520 <- (32) %r19518
	muls.64     %r19521 <- %r19520, $8
	add.64*     %r19522 <- %r19517, %r19521
	store.64*   %r19516 -> 0[%r19522]
	symaddr.64* %r19523 <- <anon symbol:0x1e93430>
	symaddr.64* %r19524 <- luaT_eventname
	load.32     %r19525 <- 0[i]
	add.32      %r19526 <- %r19525, $1
	store.32    %r19526 -> 0[i]
	scast.64    %r19527 <- (32) %r19525
	muls.64     %r19528 <- %r19527, $8
	add.64*     %r19529 <- %r19524, %r19528
	store.64*   %r19523 -> 0[%r19529]
	symaddr.64* %r19530 <- <anon symbol:0x1e93a88>
	symaddr.64* %r19531 <- luaT_eventname
	load.32     %r19532 <- 0[i]
	add.32      %r19533 <- %r19532, $1
	store.32    %r19533 -> 0[i]
	scast.64    %r19534 <- (32) %r19532
	muls.64     %r19535 <- %r19534, $8
	add.64*     %r19536 <- %r19531, %r19535
	store.64*   %r19530 -> 0[%r19536]
	symaddr.64* %r19537 <- <anon symbol:0x1e940e0>
	symaddr.64* %r19538 <- luaT_eventname
	load.32     %r19539 <- 0[i]
	add.32      %r19540 <- %r19539, $1
	store.32    %r19540 -> 0[i]
	scast.64    %r19541 <- (32) %r19539
	muls.64     %r19542 <- %r19541, $8
	add.64*     %r19543 <- %r19538, %r19542
	store.64*   %r19537 -> 0[%r19543]
	symaddr.64* %r19544 <- <anon symbol:0x1e94738>
	symaddr.64* %r19545 <- luaT_eventname
	load.32     %r19546 <- 0[i]
	add.32      %r19547 <- %r19546, $1
	store.32    %r19547 -> 0[i]
	scast.64    %r19548 <- (32) %r19546
	muls.64     %r19549 <- %r19548, $8
	add.64*     %r19550 <- %r19545, %r19549
	store.64*   %r19544 -> 0[%r19550]
	symaddr.64* %r19551 <- <anon symbol:0x1e9cde8>
	symaddr.64* %r19552 <- luaT_eventname
	load.32     %r19553 <- 0[i]
	add.32      %r19554 <- %r19553, $1
	store.32    %r19554 -> 0[i]
	scast.64    %r19555 <- (32) %r19553
	muls.64     %r19556 <- %r19555, $8
	add.64*     %r19557 <- %r19552, %r19556
	store.64*   %r19551 -> 0[%r19557]
	symaddr.64* %r19558 <- <anon symbol:0x1e9d440>
	symaddr.64* %r19559 <- luaT_eventname
	load.32     %r19560 <- 0[i]
	add.32      %r19561 <- %r19560, $1
	store.32    %r19561 -> 0[i]
	scast.64    %r19562 <- (32) %r19560
	muls.64     %r19563 <- %r19562, $8
	add.64*     %r19564 <- %r19559, %r19563
	store.64*   %r19558 -> 0[%r19564]
	symaddr.64* %r19565 <- <anon symbol:0x1e9da98>
	symaddr.64* %r19566 <- luaT_eventname
	load.32     %r19567 <- 0[i]
	add.32      %r19568 <- %r19567, $1
	store.32    %r19568 -> 0[i]
	scast.64    %r19569 <- (32) %r19567
	muls.64     %r19570 <- %r19569, $8
	add.64*     %r19571 <- %r19566, %r19570
	store.64*   %r19565 -> 0[%r19571]
	symaddr.64* %r19572 <- <anon symbol:0x1e9e0f0>
	symaddr.64* %r19573 <- luaT_eventname
	load.32     %r19574 <- 0[i]
	add.32      %r19575 <- %r19574, $1
	store.32    %r19575 -> 0[i]
	scast.64    %r19576 <- (32) %r19574
	muls.64     %r19577 <- %r19576, $8
	add.64*     %r19578 <- %r19573, %r19577
	store.64*   %r19572 -> 0[%r19578]
	store.64*   $0 -> 32[dummynode_]
	store.32    $0 -> 24[dummynode_]
	store.64*   $0 -> 16[dummynode_]
	store.64*   $0 -> 0[dummynode_]
	store.32    $0 -> 8[dummynode_]
	store.32    $0 -> 0[i]
	symaddr.64* %r19579 <- luaP_opmodes
	load.32     %r19580 <- 0[i]
	add.32      %r19581 <- %r19580, $1
	store.32    %r19581 -> 0[i]
	scast.64    %r19582 <- (32) %r19580
	add.64*     %r19583 <- %r19579, %r19582
	store.8     $96 -> 0[%r19583]
	symaddr.64* %r19584 <- luaP_opmodes
	load.32     %r19585 <- 0[i]
	add.32      %r19586 <- %r19585, $1
	store.32    %r19586 -> 0[i]
	scast.64    %r19587 <- (32) %r19585
	add.64*     %r19588 <- %r19584, %r19587
	store.8     $113 -> 0[%r19588]
	symaddr.64* %r19589 <- luaP_opmodes
	load.32     %r19590 <- 0[i]
	add.32      %r19591 <- %r19590, $1
	store.32    %r19591 -> 0[i]
	scast.64    %r19592 <- (32) %r19590
	add.64*     %r19593 <- %r19589, %r19592
	store.8     $84 -> 0[%r19593]
	symaddr.64* %r19594 <- luaP_opmodes
	load.32     %r19595 <- 0[i]
	add.32      %r19596 <- %r19595, $1
	store.32    %r19596 -> 0[i]
	scast.64    %r19597 <- (32) %r19595
	add.64*     %r19598 <- %r19594, %r19597
	store.8     $96 -> 0[%r19598]
	symaddr.64* %r19599 <- luaP_opmodes
	load.32     %r19600 <- 0[i]
	add.32      %r19601 <- %r19600, $1
	store.32    %r19601 -> 0[i]
	scast.64    %r19602 <- (32) %r19600
	add.64*     %r19603 <- %r19599, %r19602
	store.8     $80 -> 0[%r19603]
	symaddr.64* %r19604 <- luaP_opmodes
	load.32     %r19605 <- 0[i]
	add.32      %r19606 <- %r19605, $1
	store.32    %r19606 -> 0[i]
	scast.64    %r19607 <- (32) %r19605
	add.64*     %r19608 <- %r19604, %r19607
	store.8     $113 -> 0[%r19608]
	symaddr.64* %r19609 <- luaP_opmodes
	load.32     %r19610 <- 0[i]
	add.32      %r19611 <- %r19610, $1
	store.32    %r19611 -> 0[i]
	scast.64    %r19612 <- (32) %r19610
	add.64*     %r19613 <- %r19609, %r19612
	store.8     $108 -> 0[%r19613]
	symaddr.64* %r19614 <- luaP_opmodes
	load.32     %r19615 <- 0[i]
	add.32      %r19616 <- %r19615, $1
	store.32    %r19616 -> 0[i]
	scast.64    %r19617 <- (32) %r19615
	add.64*     %r19618 <- %r19614, %r19617
	store.8     $49 -> 0[%r19618]
	symaddr.64* %r19619 <- luaP_opmodes
	load.32     %r19620 <- 0[i]
	add.32      %r19621 <- %r19620, $1
	store.32    %r19621 -> 0[i]
	scast.64    %r19622 <- (32) %r19620
	add.64*     %r19623 <- %r19619, %r19622
	store.8     $16 -> 0[%r19623]
	symaddr.64* %r19624 <- luaP_opmodes
	load.32     %r19625 <- 0[i]
	add.32      %r19626 <- %r19625, $1
	store.32    %r19626 -> 0[i]
	scast.64    %r19627 <- (32) %r19625
	add.64*     %r19628 <- %r19624, %r19627
	store.8     $60 -> 0[%r19628]
	symaddr.64* %r19629 <- luaP_opmodes
	load.32     %r19630 <- 0[i]
	add.32      %r19631 <- %r19630, $1
	store.32    %r19631 -> 0[i]
	scast.64    %r19632 <- (32) %r19630
	add.64*     %r19633 <- %r19629, %r19632
	store.8     $84 -> 0[%r19633]
	symaddr.64* %r19634 <- luaP_opmodes
	load.32     %r19635 <- 0[i]
	add.32      %r19636 <- %r19635, $1
	store.32    %r19636 -> 0[i]
	scast.64    %r19637 <- (32) %r19635
	add.64*     %r19638 <- %r19634, %r19637
	store.8     $108 -> 0[%r19638]
	symaddr.64* %r19639 <- luaP_opmodes
	load.32     %r19640 <- 0[i]
	add.32      %r19641 <- %r19640, $1
	store.32    %r19641 -> 0[i]
	scast.64    %r19642 <- (32) %r19640
	add.64*     %r19643 <- %r19639, %r19642
	store.8     $124 -> 0[%r19643]
	symaddr.64* %r19644 <- luaP_opmodes
	load.32     %r19645 <- 0[i]
	add.32      %r19646 <- %r19645, $1
	store.32    %r19646 -> 0[i]
	scast.64    %r19647 <- (32) %r19645
	add.64*     %r19648 <- %r19644, %r19647
	store.8     $124 -> 0[%r19648]
	symaddr.64* %r19649 <- luaP_opmodes
	load.32     %r19650 <- 0[i]
	add.32      %r19651 <- %r19650, $1
	store.32    %r19651 -> 0[i]
	scast.64    %r19652 <- (32) %r19650
	add.64*     %r19653 <- %r19649, %r19652
	store.8     $124 -> 0[%r19653]
	symaddr.64* %r19654 <- luaP_opmodes
	load.32     %r19655 <- 0[i]
	add.32      %r19656 <- %r19655, $1
	store.32    %r19656 -> 0[i]
	scast.64    %r19657 <- (32) %r19655
	add.64*     %r19658 <- %r19654, %r19657
	store.8     $124 -> 0[%r19658]
	symaddr.64* %r19659 <- luaP_opmodes
	load.32     %r19660 <- 0[i]
	add.32      %r19661 <- %r19660, $1
	store.32    %r19661 -> 0[i]
	scast.64    %r19662 <- (32) %r19660
	add.64*     %r19663 <- %r19659, %r19662
	store.8     $124 -> 0[%r19663]
	symaddr.64* %r19664 <- luaP_opmodes
	load.32     %r19665 <- 0[i]
	add.32      %r19666 <- %r19665, $1
	store.32    %r19666 -> 0[i]
	scast.64    %r19667 <- (32) %r19665
	add.64*     %r19668 <- %r19664, %r19667
	store.8     $124 -> 0[%r19668]
	symaddr.64* %r19669 <- luaP_opmodes
	load.32     %r19670 <- 0[i]
	add.32      %r19671 <- %r19670, $1
	store.32    %r19671 -> 0[i]
	scast.64    %r19672 <- (32) %r19670
	add.64*     %r19673 <- %r19669, %r19672
	store.8     $96 -> 0[%r19673]
	symaddr.64* %r19674 <- luaP_opmodes
	load.32     %r19675 <- 0[i]
	add.32      %r19676 <- %r19675, $1
	store.32    %r19676 -> 0[i]
	scast.64    %r19677 <- (32) %r19675
	add.64*     %r19678 <- %r19674, %r19677
	store.8     $96 -> 0[%r19678]
	symaddr.64* %r19679 <- luaP_opmodes
	load.32     %r19680 <- 0[i]
	add.32      %r19681 <- %r19680, $1
	store.32    %r19681 -> 0[i]
	scast.64    %r19682 <- (32) %r19680
	add.64*     %r19683 <- %r19679, %r19682
	store.8     $96 -> 0[%r19683]
	symaddr.64* %r19684 <- luaP_opmodes
	load.32     %r19685 <- 0[i]
	add.32      %r19686 <- %r19685, $1
	store.32    %r19686 -> 0[i]
	scast.64    %r19687 <- (32) %r19685
	add.64*     %r19688 <- %r19684, %r19687
	store.8     $104 -> 0[%r19688]
	symaddr.64* %r19689 <- luaP_opmodes
	load.32     %r19690 <- 0[i]
	add.32      %r19691 <- %r19690, $1
	store.32    %r19691 -> 0[i]
	scast.64    %r19692 <- (32) %r19690
	add.64*     %r19693 <- %r19689, %r19692
	store.8     $34 -> 0[%r19693]
	symaddr.64* %r19694 <- luaP_opmodes
	load.32     %r19695 <- 0[i]
	add.32      %r19696 <- %r19695, $1
	store.32    %r19696 -> 0[i]
	scast.64    %r19697 <- (32) %r19695
	add.64*     %r19698 <- %r19694, %r19697
	store.8     $188 -> 0[%r19698]
	symaddr.64* %r19699 <- luaP_opmodes
	load.32     %r19700 <- 0[i]
	add.32      %r19701 <- %r19700, $1
	store.32    %r19701 -> 0[i]
	scast.64    %r19702 <- (32) %r19700
	add.64*     %r19703 <- %r19699, %r19702
	store.8     $188 -> 0[%r19703]
	symaddr.64* %r19704 <- luaP_opmodes
	load.32     %r19705 <- 0[i]
	add.32      %r19706 <- %r19705, $1
	store.32    %r19706 -> 0[i]
	scast.64    %r19707 <- (32) %r19705
	add.64*     %r19708 <- %r19704, %r19707
	store.8     $188 -> 0[%r19708]
	symaddr.64* %r19709 <- luaP_opmodes
	load.32     %r19710 <- 0[i]
	add.32      %r19711 <- %r19710, $1
	store.32    %r19711 -> 0[i]
	scast.64    %r19712 <- (32) %r19710
	add.64*     %r19713 <- %r19709, %r19712
	store.8     $228 -> 0[%r19713]
	symaddr.64* %r19714 <- luaP_opmodes
	load.32     %r19715 <- 0[i]
	add.32      %r19716 <- %r19715, $1
	store.32    %r19716 -> 0[i]
	scast.64    %r19717 <- (32) %r19715
	add.64*     %r19718 <- %r19714, %r19717
	store.8     $228 -> 0[%r19718]
	symaddr.64* %r19719 <- luaP_opmodes
	load.32     %r19720 <- 0[i]
	add.32      %r19721 <- %r19720, $1
	store.32    %r19721 -> 0[i]
	scast.64    %r19722 <- (32) %r19720
	add.64*     %r19723 <- %r19719, %r19722
	store.8     $84 -> 0[%r19723]
	symaddr.64* %r19724 <- luaP_opmodes
	load.32     %r19725 <- 0[i]
	add.32      %r19726 <- %r19725, $1
	store.32    %r19726 -> 0[i]
	scast.64    %r19727 <- (32) %r19725
	add.64*     %r19728 <- %r19724, %r19727
	store.8     $84 -> 0[%r19728]
	symaddr.64* %r19729 <- luaP_opmodes
	load.32     %r19730 <- 0[i]
	add.32      %r19731 <- %r19730, $1
	store.32    %r19731 -> 0[i]
	scast.64    %r19732 <- (32) %r19730
	add.64*     %r19733 <- %r19729, %r19732
	store.8     $16 -> 0[%r19733]
	symaddr.64* %r19734 <- luaP_opmodes
	load.32     %r19735 <- 0[i]
	add.32      %r19736 <- %r19735, $1
	store.32    %r19736 -> 0[i]
	scast.64    %r19737 <- (32) %r19735
	add.64*     %r19738 <- %r19734, %r19737
	store.8     $98 -> 0[%r19738]
	symaddr.64* %r19739 <- luaP_opmodes
	load.32     %r19740 <- 0[i]
	add.32      %r19741 <- %r19740, $1
	store.32    %r19741 -> 0[i]
	scast.64    %r19742 <- (32) %r19740
	add.64*     %r19743 <- %r19739, %r19742
	store.8     $98 -> 0[%r19743]
	symaddr.64* %r19744 <- luaP_opmodes
	load.32     %r19745 <- 0[i]
	add.32      %r19746 <- %r19745, $1
	store.32    %r19746 -> 0[i]
	scast.64    %r19747 <- (32) %r19745
	add.64*     %r19748 <- %r19744, %r19747
	store.8     $132 -> 0[%r19748]
	symaddr.64* %r19749 <- luaP_opmodes
	load.32     %r19750 <- 0[i]
	add.32      %r19751 <- %r19750, $1
	store.32    %r19751 -> 0[i]
	scast.64    %r19752 <- (32) %r19750
	add.64*     %r19753 <- %r19749, %r19752
	store.8     $20 -> 0[%r19753]
	symaddr.64* %r19754 <- luaP_opmodes
	load.32     %r19755 <- 0[i]
	add.32      %r19756 <- %r19755, $1
	store.32    %r19756 -> 0[i]
	scast.64    %r19757 <- (32) %r19755
	add.64*     %r19758 <- %r19754, %r19757
	store.8     $0 -> 0[%r19758]
	symaddr.64* %r19759 <- luaP_opmodes
	load.32     %r19760 <- 0[i]
	add.32      %r19761 <- %r19760, $1
	store.32    %r19761 -> 0[i]
	scast.64    %r19762 <- (32) %r19760
	add.64*     %r19763 <- %r19759, %r19762
	store.8     $81 -> 0[%r19763]
	symaddr.64* %r19764 <- luaP_opmodes
	load.32     %r19765 <- 0[i]
	add.32      %r19766 <- %r19765, $1
	store.32    %r19766 -> 0[i]
	scast.64    %r19767 <- (32) %r19765
	add.64*     %r19768 <- %r19764, %r19767
	store.8     $80 -> 0[%r19768]
	store.32    $0 -> 0[i]
	symaddr.64* %r19769 <- <anon symbol:0x1ea5c78>
	symaddr.64* %r19770 <- luaX_tokens
	load.32     %r19771 <- 0[i]
	add.32      %r19772 <- %r19771, $1
	store.32    %r19772 -> 0[i]
	scast.64    %r19773 <- (32) %r19771
	muls.64     %r19774 <- %r19773, $8
	add.64*     %r19775 <- %r19770, %r19774
	store.64*   %r19769 -> 0[%r19775]
	symaddr.64* %r19776 <- <anon symbol:0x1ea62d0>
	symaddr.64* %r19777 <- luaX_tokens
	load.32     %r19778 <- 0[i]
	add.32      %r19779 <- %r19778, $1
	store.32    %r19779 -> 0[i]
	scast.64    %r19780 <- (32) %r19778
	muls.64     %r19781 <- %r19780, $8
	add.64*     %r19782 <- %r19777, %r19781
	store.64*   %r19776 -> 0[%r19782]
	symaddr.64* %r19783 <- <anon symbol:0x1ea6928>
	symaddr.64* %r19784 <- luaX_tokens
	load.32     %r19785 <- 0[i]
	add.32      %r19786 <- %r19785, $1
	store.32    %r19786 -> 0[i]
	scast.64    %r19787 <- (32) %r19785
	muls.64     %r19788 <- %r19787, $8
	add.64*     %r19789 <- %r19784, %r19788
	store.64*   %r19783 -> 0[%r19789]
	symaddr.64* %r19790 <- <anon symbol:0x1ea6f80>
	symaddr.64* %r19791 <- luaX_tokens
	load.32     %r19792 <- 0[i]
	add.32      %r19793 <- %r19792, $1
	store.32    %r19793 -> 0[i]
	scast.64    %r19794 <- (32) %r19792
	muls.64     %r19795 <- %r19794, $8
	add.64*     %r19796 <- %r19791, %r19795
	store.64*   %r19790 -> 0[%r19796]
	symaddr.64* %r19797 <- <anon symbol:0x1ea75d8>
	symaddr.64* %r19798 <- luaX_tokens
	load.32     %r19799 <- 0[i]
	add.32      %r19800 <- %r19799, $1
	store.32    %r19800 -> 0[i]
	scast.64    %r19801 <- (32) %r19799
	muls.64     %r19802 <- %r19801, $8
	add.64*     %r19803 <- %r19798, %r19802
	store.64*   %r19797 -> 0[%r19803]
	symaddr.64* %r19804 <- <anon symbol:0x1ea7c30>
	symaddr.64* %r19805 <- luaX_tokens
	load.32     %r19806 <- 0[i]
	add.32      %r19807 <- %r19806, $1
	store.32    %r19807 -> 0[i]
	scast.64    %r19808 <- (32) %r19806
	muls.64     %r19809 <- %r19808, $8
	add.64*     %r19810 <- %r19805, %r19809
	store.64*   %r19804 -> 0[%r19810]
	symaddr.64* %r19811 <- <anon symbol:0x1ea8288>
	symaddr.64* %r19812 <- luaX_tokens
	load.32     %r19813 <- 0[i]
	add.32      %r19814 <- %r19813, $1
	store.32    %r19814 -> 0[i]
	scast.64    %r19815 <- (32) %r19813
	muls.64     %r19816 <- %r19815, $8
	add.64*     %r19817 <- %r19812, %r19816
	store.64*   %r19811 -> 0[%r19817]
	symaddr.64* %r19818 <- <anon symbol:0x1ea88e0>
	symaddr.64* %r19819 <- luaX_tokens
	load.32     %r19820 <- 0[i]
	add.32      %r19821 <- %r19820, $1
	store.32    %r19821 -> 0[i]
	scast.64    %r19822 <- (32) %r19820
	muls.64     %r19823 <- %r19822, $8
	add.64*     %r19824 <- %r19819, %r19823
	store.64*   %r19818 -> 0[%r19824]
	symaddr.64* %r19825 <- <anon symbol:0x1ea8f38>
	symaddr.64* %r19826 <- luaX_tokens
	load.32     %r19827 <- 0[i]
	add.32      %r19828 <- %r19827, $1
	store.32    %r19828 -> 0[i]
	scast.64    %r19829 <- (32) %r19827
	muls.64     %r19830 <- %r19829, $8
	add.64*     %r19831 <- %r19826, %r19830
	store.64*   %r19825 -> 0[%r19831]
	symaddr.64* %r19832 <- <anon symbol:0x1ea9590>
	symaddr.64* %r19833 <- luaX_tokens
	load.32     %r19834 <- 0[i]
	add.32      %r19835 <- %r19834, $1
	store.32    %r19835 -> 0[i]
	scast.64    %r19836 <- (32) %r19834
	muls.64     %r19837 <- %r19836, $8
	add.64*     %r19838 <- %r19833, %r19837
	store.64*   %r19832 -> 0[%r19838]
	symaddr.64* %r19839 <- <anon symbol:0x1ea9be8>
	symaddr.64* %r19840 <- luaX_tokens
	load.32     %r19841 <- 0[i]
	add.32      %r19842 <- %r19841, $1
	store.32    %r19842 -> 0[i]
	scast.64    %r19843 <- (32) %r19841
	muls.64     %r19844 <- %r19843, $8
	add.64*     %r19845 <- %r19840, %r19844
	store.64*   %r19839 -> 0[%r19845]
	symaddr.64* %r19846 <- <anon symbol:0x1eaa240>
	symaddr.64* %r19847 <- luaX_tokens
	load.32     %r19848 <- 0[i]
	add.32      %r19849 <- %r19848, $1
	store.32    %r19849 -> 0[i]
	scast.64    %r19850 <- (32) %r19848
	muls.64     %r19851 <- %r19850, $8
	add.64*     %r19852 <- %r19847, %r19851
	store.64*   %r19846 -> 0[%r19852]
	symaddr.64* %r19853 <- <anon symbol:0x1eaa898>
	symaddr.64* %r19854 <- luaX_tokens
	load.32     %r19855 <- 0[i]
	add.32      %r19856 <- %r19855, $1
	store.32    %r19856 -> 0[i]
	scast.64    %r19857 <- (32) %r19855
	muls.64     %r19858 <- %r19857, $8
	add.64*     %r19859 <- %r19854, %r19858
	store.64*   %r19853 -> 0[%r19859]
	symaddr.64* %r19860 <- <anon symbol:0x1eaaef0>
	symaddr.64* %r19861 <- luaX_tokens
	load.32     %r19862 <- 0[i]
	add.32      %r19863 <- %r19862, $1
	store.32    %r19863 -> 0[i]
	scast.64    %r19864 <- (32) %r19862
	muls.64     %r19865 <- %r19864, $8
	add.64*     %r19866 <- %r19861, %r19865
	store.64*   %r19860 -> 0[%r19866]
	symaddr.64* %r19867 <- <anon symbol:0x1eab548>
	symaddr.64* %r19868 <- luaX_tokens
	load.32     %r19869 <- 0[i]
	add.32      %r19870 <- %r19869, $1
	store.32    %r19870 -> 0[i]
	scast.64    %r19871 <- (32) %r19869
	muls.64     %r19872 <- %r19871, $8
	add.64*     %r19873 <- %r19868, %r19872
	store.64*   %r19867 -> 0[%r19873]
	symaddr.64* %r19874 <- <anon symbol:0x1eabba0>
	symaddr.64* %r19875 <- luaX_tokens
	load.32     %r19876 <- 0[i]
	add.32      %r19877 <- %r19876, $1
	store.32    %r19877 -> 0[i]
	scast.64    %r19878 <- (32) %r19876
	muls.64     %r19879 <- %r19878, $8
	add.64*     %r19880 <- %r19875, %r19879
	store.64*   %r19874 -> 0[%r19880]
	symaddr.64* %r19881 <- <anon symbol:0x1eac1f8>
	symaddr.64* %r19882 <- luaX_tokens
	load.32     %r19883 <- 0[i]
	add.32      %r19884 <- %r19883, $1
	store.32    %r19884 -> 0[i]
	scast.64    %r19885 <- (32) %r19883
	muls.64     %r19886 <- %r19885, $8
	add.64*     %r19887 <- %r19882, %r19886
	store.64*   %r19881 -> 0[%r19887]
	symaddr.64* %r19888 <- <anon symbol:0x1eac850>
	symaddr.64* %r19889 <- luaX_tokens
	load.32     %r19890 <- 0[i]
	add.32      %r19891 <- %r19890, $1
	store.32    %r19891 -> 0[i]
	scast.64    %r19892 <- (32) %r19890
	muls.64     %r19893 <- %r19892, $8
	add.64*     %r19894 <- %r19889, %r19893
	store.64*   %r19888 -> 0[%r19894]
	symaddr.64* %r19895 <- <anon symbol:0x1eacef0>
	symaddr.64* %r19896 <- luaX_tokens
	load.32     %r19897 <- 0[i]
	add.32      %r19898 <- %r19897, $1
	store.32    %r19898 -> 0[i]
	scast.64    %r19899 <- (32) %r19897
	muls.64     %r19900 <- %r19899, $8
	add.64*     %r19901 <- %r19896, %r19900
	store.64*   %r19895 -> 0[%r19901]
	symaddr.64* %r19902 <- <anon symbol:0x1ead548>
	symaddr.64* %r19903 <- luaX_tokens
	load.32     %r19904 <- 0[i]
	add.32      %r19905 <- %r19904, $1
	store.32    %r19905 -> 0[i]
	scast.64    %r19906 <- (32) %r19904
	muls.64     %r19907 <- %r19906, $8
	add.64*     %r19908 <- %r19903, %r19907
	store.64*   %r19902 -> 0[%r19908]
	symaddr.64* %r19909 <- <anon symbol:0x1eadba0>
	symaddr.64* %r19910 <- luaX_tokens
	load.32     %r19911 <- 0[i]
	add.32      %r19912 <- %r19911, $1
	store.32    %r19912 -> 0[i]
	scast.64    %r19913 <- (32) %r19911
	muls.64     %r19914 <- %r19913, $8
	add.64*     %r19915 <- %r19910, %r19914
	store.64*   %r19909 -> 0[%r19915]
	symaddr.64* %r19916 <- <anon symbol:0x1eae1f8>
	symaddr.64* %r19917 <- luaX_tokens
	load.32     %r19918 <- 0[i]
	add.32      %r19919 <- %r19918, $1
	store.32    %r19919 -> 0[i]
	scast.64    %r19920 <- (32) %r19918
	muls.64     %r19921 <- %r19920, $8
	add.64*     %r19922 <- %r19917, %r19921
	store.64*   %r19916 -> 0[%r19922]
	symaddr.64* %r19923 <- <anon symbol:0x1eae850>
	symaddr.64* %r19924 <- luaX_tokens
	load.32     %r19925 <- 0[i]
	add.32      %r19926 <- %r19925, $1
	store.32    %r19926 -> 0[i]
	scast.64    %r19927 <- (32) %r19925
	muls.64     %r19928 <- %r19927, $8
	add.64*     %r19929 <- %r19924, %r19928
	store.64*   %r19923 -> 0[%r19929]
	symaddr.64* %r19930 <- <anon symbol:0x1eaeea8>
	symaddr.64* %r19931 <- luaX_tokens
	load.32     %r19932 <- 0[i]
	add.32      %r19933 <- %r19932, $1
	store.32    %r19933 -> 0[i]
	scast.64    %r19934 <- (32) %r19932
	muls.64     %r19935 <- %r19934, $8
	add.64*     %r19936 <- %r19931, %r19935
	store.64*   %r19930 -> 0[%r19936]
	symaddr.64* %r19937 <- <anon symbol:0x1eaf500>
	symaddr.64* %r19938 <- luaX_tokens
	load.32     %r19939 <- 0[i]
	add.32      %r19940 <- %r19939, $1
	store.32    %r19940 -> 0[i]
	scast.64    %r19941 <- (32) %r19939
	muls.64     %r19942 <- %r19941, $8
	add.64*     %r19943 <- %r19938, %r19942
	store.64*   %r19937 -> 0[%r19943]
	symaddr.64* %r19944 <- <anon symbol:0x1eafb58>
	symaddr.64* %r19945 <- luaX_tokens
	load.32     %r19946 <- 0[i]
	add.32      %r19947 <- %r19946, $1
	store.32    %r19947 -> 0[i]
	scast.64    %r19948 <- (32) %r19946
	muls.64     %r19949 <- %r19948, $8
	add.64*     %r19950 <- %r19945, %r19949
	store.64*   %r19944 -> 0[%r19950]
	symaddr.64* %r19951 <- <anon symbol:0x1eb01b0>
	symaddr.64* %r19952 <- luaX_tokens
	load.32     %r19953 <- 0[i]
	add.32      %r19954 <- %r19953, $1
	store.32    %r19954 -> 0[i]
	scast.64    %r19955 <- (32) %r19953
	muls.64     %r19956 <- %r19955, $8
	add.64*     %r19957 <- %r19952, %r19956
	store.64*   %r19951 -> 0[%r19957]
	symaddr.64* %r19958 <- <anon symbol:0x1eb0808>
	symaddr.64* %r19959 <- luaX_tokens
	load.32     %r19960 <- 0[i]
	add.32      %r19961 <- %r19960, $1
	store.32    %r19961 -> 0[i]
	scast.64    %r19962 <- (32) %r19960
	muls.64     %r19963 <- %r19962, $8
	add.64*     %r19964 <- %r19959, %r19963
	store.64*   %r19958 -> 0[%r19964]
	symaddr.64* %r19965 <- <anon symbol:0x1eb0e60>
	symaddr.64* %r19966 <- luaX_tokens
	load.32     %r19967 <- 0[i]
	add.32      %r19968 <- %r19967, $1
	store.32    %r19968 -> 0[i]
	scast.64    %r19969 <- (32) %r19967
	muls.64     %r19970 <- %r19969, $8
	add.64*     %r19971 <- %r19966, %r19970
	store.64*   %r19965 -> 0[%r19971]
	symaddr.64* %r19972 <- <anon symbol:0x1eb14b8>
	symaddr.64* %r19973 <- luaX_tokens
	load.32     %r19974 <- 0[i]
	add.32      %r19975 <- %r19974, $1
	store.32    %r19975 -> 0[i]
	scast.64    %r19976 <- (32) %r19974
	muls.64     %r19977 <- %r19976, $8
	add.64*     %r19978 <- %r19973, %r19977
	store.64*   %r19972 -> 0[%r19978]
	symaddr.64* %r19979 <- <anon symbol:0x1eb1b10>
	symaddr.64* %r19980 <- luaX_tokens
	load.32     %r19981 <- 0[i]
	add.32      %r19982 <- %r19981, $1
	store.32    %r19982 -> 0[i]
	scast.64    %r19983 <- (32) %r19981
	muls.64     %r19984 <- %r19983, $8
	add.64*     %r19985 <- %r19980, %r19984
	store.64*   %r19979 -> 0[%r19985]
	symaddr.64* %r19986 <- luaX_tokens
	load.32     %r19987 <- 0[i]
	add.32      %r19988 <- %r19987, $1
	store.32    %r19988 -> 0[i]
	scast.64    %r19989 <- (32) %r19987
	muls.64     %r19990 <- %r19989, $8
	add.64*     %r19991 <- %r19986, %r19990
	store.64*   $0 -> 0[%r19991]
	store.32    $0 -> 0[i]
	symaddr.64* %r19992 <- priority
	load.32     %r19993 <- 0[i]
	scast.64    %r19994 <- (32) %r19993
	muls.64     %r19995 <- %r19994, $2
	add.64*     %r19996 <- %r19992, %r19995
	store.8     $6 -> 0[%r19996]
	symaddr.64* %r19997 <- priority
	load.32     %r19998 <- 0[i]
	add.32      %r19999 <- %r19998, $1
	store.32    %r19999 -> 0[i]
	scast.64    %r20000 <- (32) %r19998
	muls.64     %r20001 <- %r20000, $2
	add.64*     %r20002 <- %r19997, %r20001
	store.8     $6 -> 1[%r20002]
	symaddr.64* %r20003 <- priority
	load.32     %r20004 <- 0[i]
	scast.64    %r20005 <- (32) %r20004
	muls.64     %r20006 <- %r20005, $2
	add.64*     %r20007 <- %r20003, %r20006
	store.8     $6 -> 0[%r20007]
	symaddr.64* %r20008 <- priority
	load.32     %r20009 <- 0[i]
	add.32      %r20010 <- %r20009, $1
	store.32    %r20010 -> 0[i]
	scast.64    %r20011 <- (32) %r20009
	muls.64     %r20012 <- %r20011, $2
	add.64*     %r20013 <- %r20008, %r20012
	store.8     $6 -> 1[%r20013]
	symaddr.64* %r20014 <- priority
	load.32     %r20015 <- 0[i]
	scast.64    %r20016 <- (32) %r20015
	muls.64     %r20017 <- %r20016, $2
	add.64*     %r20018 <- %r20014, %r20017
	store.8     $7 -> 0[%r20018]
	symaddr.64* %r20019 <- priority
	load.32     %r20020 <- 0[i]
	add.32      %r20021 <- %r20020, $1
	store.32    %r20021 -> 0[i]
	scast.64    %r20022 <- (32) %r20020
	muls.64     %r20023 <- %r20022, $2
	add.64*     %r20024 <- %r20019, %r20023
	store.8     $7 -> 1[%r20024]
	symaddr.64* %r20025 <- priority
	load.32     %r20026 <- 0[i]
	scast.64    %r20027 <- (32) %r20026
	muls.64     %r20028 <- %r20027, $2
	add.64*     %r20029 <- %r20025, %r20028
	store.8     $7 -> 0[%r20029]
	symaddr.64* %r20030 <- priority
	load.32     %r20031 <- 0[i]
	add.32      %r20032 <- %r20031, $1
	store.32    %r20032 -> 0[i]
	scast.64    %r20033 <- (32) %r20031
	muls.64     %r20034 <- %r20033, $2
	add.64*     %r20035 <- %r20030, %r20034
	store.8     $7 -> 1[%r20035]
	symaddr.64* %r20036 <- priority
	load.32     %r20037 <- 0[i]
	scast.64    %r20038 <- (32) %r20037
	muls.64     %r20039 <- %r20038, $2
	add.64*     %r20040 <- %r20036, %r20039
	store.8     $7 -> 0[%r20040]
	symaddr.64* %r20041 <- priority
	load.32     %r20042 <- 0[i]
	add.32      %r20043 <- %r20042, $1
	store.32    %r20043 -> 0[i]
	scast.64    %r20044 <- (32) %r20042
	muls.64     %r20045 <- %r20044, $2
	add.64*     %r20046 <- %r20041, %r20045
	store.8     $7 -> 1[%r20046]
	symaddr.64* %r20047 <- priority
	load.32     %r20048 <- 0[i]
	scast.64    %r20049 <- (32) %r20048
	muls.64     %r20050 <- %r20049, $2
	add.64*     %r20051 <- %r20047, %r20050
	store.8     $10 -> 0[%r20051]
	symaddr.64* %r20052 <- priority
	load.32     %r20053 <- 0[i]
	add.32      %r20054 <- %r20053, $1
	store.32    %r20054 -> 0[i]
	scast.64    %r20055 <- (32) %r20053
	muls.64     %r20056 <- %r20055, $2
	add.64*     %r20057 <- %r20052, %r20056
	store.8     $9 -> 1[%r20057]
	symaddr.64* %r20058 <- priority
	load.32     %r20059 <- 0[i]
	scast.64    %r20060 <- (32) %r20059
	muls.64     %r20061 <- %r20060, $2
	add.64*     %r20062 <- %r20058, %r20061
	store.8     $5 -> 0[%r20062]
	symaddr.64* %r20063 <- priority
	load.32     %r20064 <- 0[i]
	add.32      %r20065 <- %r20064, $1
	store.32    %r20065 -> 0[i]
	scast.64    %r20066 <- (32) %r20064
	muls.64     %r20067 <- %r20066, $2
	add.64*     %r20068 <- %r20063, %r20067
	store.8     $4 -> 1[%r20068]
	symaddr.64* %r20069 <- priority
	load.32     %r20070 <- 0[i]
	scast.64    %r20071 <- (32) %r20070
	muls.64     %r20072 <- %r20071, $2
	add.64*     %r20073 <- %r20069, %r20072
	store.8     $3 -> 0[%r20073]
	symaddr.64* %r20074 <- priority
	load.32     %r20075 <- 0[i]
	add.32      %r20076 <- %r20075, $1
	store.32    %r20076 -> 0[i]
	scast.64    %r20077 <- (32) %r20075
	muls.64     %r20078 <- %r20077, $2
	add.64*     %r20079 <- %r20074, %r20078
	store.8     $3 -> 1[%r20079]
	symaddr.64* %r20080 <- priority
	load.32     %r20081 <- 0[i]
	scast.64    %r20082 <- (32) %r20081
	muls.64     %r20083 <- %r20082, $2
	add.64*     %r20084 <- %r20080, %r20083
	store.8     $3 -> 0[%r20084]
	symaddr.64* %r20085 <- priority
	load.32     %r20086 <- 0[i]
	add.32      %r20087 <- %r20086, $1
	store.32    %r20087 -> 0[i]
	scast.64    %r20088 <- (32) %r20086
	muls.64     %r20089 <- %r20088, $2
	add.64*     %r20090 <- %r20085, %r20089
	store.8     $3 -> 1[%r20090]
	symaddr.64* %r20091 <- priority
	load.32     %r20092 <- 0[i]
	scast.64    %r20093 <- (32) %r20092
	muls.64     %r20094 <- %r20093, $2
	add.64*     %r20095 <- %r20091, %r20094
	store.8     $3 -> 0[%r20095]
	symaddr.64* %r20096 <- priority
	load.32     %r20097 <- 0[i]
	add.32      %r20098 <- %r20097, $1
	store.32    %r20098 -> 0[i]
	scast.64    %r20099 <- (32) %r20097
	muls.64     %r20100 <- %r20099, $2
	add.64*     %r20101 <- %r20096, %r20100
	store.8     $3 -> 1[%r20101]
	symaddr.64* %r20102 <- priority
	load.32     %r20103 <- 0[i]
	scast.64    %r20104 <- (32) %r20103
	muls.64     %r20105 <- %r20104, $2
	add.64*     %r20106 <- %r20102, %r20105
	store.8     $3 -> 0[%r20106]
	symaddr.64* %r20107 <- priority
	load.32     %r20108 <- 0[i]
	add.32      %r20109 <- %r20108, $1
	store.32    %r20109 -> 0[i]
	scast.64    %r20110 <- (32) %r20108
	muls.64     %r20111 <- %r20110, $2
	add.64*     %r20112 <- %r20107, %r20111
	store.8     $3 -> 1[%r20112]
	symaddr.64* %r20113 <- priority
	load.32     %r20114 <- 0[i]
	scast.64    %r20115 <- (32) %r20114
	muls.64     %r20116 <- %r20115, $2
	add.64*     %r20117 <- %r20113, %r20116
	store.8     $3 -> 0[%r20117]
	symaddr.64* %r20118 <- priority
	load.32     %r20119 <- 0[i]
	add.32      %r20120 <- %r20119, $1
	store.32    %r20120 -> 0[i]
	scast.64    %r20121 <- (32) %r20119
	muls.64     %r20122 <- %r20121, $2
	add.64*     %r20123 <- %r20118, %r20122
	store.8     $3 -> 1[%r20123]
	symaddr.64* %r20124 <- priority
	load.32     %r20125 <- 0[i]
	scast.64    %r20126 <- (32) %r20125
	muls.64     %r20127 <- %r20126, $2
	add.64*     %r20128 <- %r20124, %r20127
	store.8     $3 -> 0[%r20128]
	symaddr.64* %r20129 <- priority
	load.32     %r20130 <- 0[i]
	add.32      %r20131 <- %r20130, $1
	store.32    %r20131 -> 0[i]
	scast.64    %r20132 <- (32) %r20130
	muls.64     %r20133 <- %r20132, $2
	add.64*     %r20134 <- %r20129, %r20133
	store.8     $3 -> 1[%r20134]
	symaddr.64* %r20135 <- priority
	load.32     %r20136 <- 0[i]
	scast.64    %r20137 <- (32) %r20136
	muls.64     %r20138 <- %r20137, $2
	add.64*     %r20139 <- %r20135, %r20138
	store.8     $2 -> 0[%r20139]
	symaddr.64* %r20140 <- priority
	load.32     %r20141 <- 0[i]
	add.32      %r20142 <- %r20141, $1
	store.32    %r20142 -> 0[i]
	scast.64    %r20143 <- (32) %r20141
	muls.64     %r20144 <- %r20143, $2
	add.64*     %r20145 <- %r20140, %r20144
	store.8     $2 -> 1[%r20145]
	symaddr.64* %r20146 <- priority
	load.32     %r20147 <- 0[i]
	scast.64    %r20148 <- (32) %r20147
	muls.64     %r20149 <- %r20148, $2
	add.64*     %r20150 <- %r20146, %r20149
	store.8     $1 -> 0[%r20150]
	symaddr.64* %r20151 <- priority
	load.32     %r20152 <- 0[i]
	add.32      %r20153 <- %r20152, $1
	store.32    %r20153 -> 0[i]
	scast.64    %r20154 <- (32) %r20152
	muls.64     %r20155 <- %r20154, $2
	add.64*     %r20156 <- %r20151, %r20155
	store.8     $1 -> 1[%r20156]
	store.32    $0 -> 0[i]
	symaddr.64* %r20157 <- <anon symbol:0x1ebf608>
	symaddr.64* %r20158 <- base_funcs
	load.32     %r20159 <- 0[i]
	scast.64    %r20160 <- (32) %r20159
	muls.64     %r20161 <- %r20160, $16
	add.64*     %r20162 <- %r20158, %r20161
	store.64*   %r20157 -> 0[%r20162]
	symaddr.64* %r20163 <- luaB_assert
	symaddr.64* %r20164 <- base_funcs
	load.32     %r20165 <- 0[i]
	scast.64    %r20166 <- (32) %r20165
	muls.64     %r20167 <- %r20166, $16
	add.64*     %r20168 <- %r20164, %r20167
	store.64*   %r20163 -> 8[%r20168]
	load.32     %r20169 <- 0[i]
	add.32      %r20170 <- %r20169, $1
	store.32    %r20170 -> 0[i]
	symaddr.64* %r20171 <- <anon symbol:0x1ec00e8>
	symaddr.64* %r20172 <- base_funcs
	load.32     %r20173 <- 0[i]
	scast.64    %r20174 <- (32) %r20173
	muls.64     %r20175 <- %r20174, $16
	add.64*     %r20176 <- %r20172, %r20175
	store.64*   %r20171 -> 0[%r20176]
	symaddr.64* %r20177 <- luaB_error
	symaddr.64* %r20178 <- base_funcs
	load.32     %r20179 <- 0[i]
	scast.64    %r20180 <- (32) %r20179
	muls.64     %r20181 <- %r20180, $16
	add.64*     %r20182 <- %r20178, %r20181
	store.64*   %r20177 -> 8[%r20182]
	load.32     %r20183 <- 0[i]
	add.32      %r20184 <- %r20183, $1
	store.32    %r20184 -> 0[i]
	symaddr.64* %r20185 <- <anon symbol:0x1ec0bc8>
	symaddr.64* %r20186 <- base_funcs
	load.32     %r20187 <- 0[i]
	scast.64    %r20188 <- (32) %r20187
	muls.64     %r20189 <- %r20188, $16
	add.64*     %r20190 <- %r20186, %r20189
	store.64*   %r20185 -> 0[%r20190]
	symaddr.64* %r20191 <- luaB_loadfile
	symaddr.64* %r20192 <- base_funcs
	load.32     %r20193 <- 0[i]
	scast.64    %r20194 <- (32) %r20193
	muls.64     %r20195 <- %r20194, $16
	add.64*     %r20196 <- %r20192, %r20195
	store.64*   %r20191 -> 8[%r20196]
	load.32     %r20197 <- 0[i]
	add.32      %r20198 <- %r20197, $1
	store.32    %r20198 -> 0[i]
	symaddr.64* %r20199 <- <anon symbol:0x1ec16a8>
	symaddr.64* %r20200 <- base_funcs
	load.32     %r20201 <- 0[i]
	scast.64    %r20202 <- (32) %r20201
	muls.64     %r20203 <- %r20202, $16
	add.64*     %r20204 <- %r20200, %r20203
	store.64*   %r20199 -> 0[%r20204]
	symaddr.64* %r20205 <- luaB_loadstring
	symaddr.64* %r20206 <- base_funcs
	load.32     %r20207 <- 0[i]
	scast.64    %r20208 <- (32) %r20207
	muls.64     %r20209 <- %r20208, $16
	add.64*     %r20210 <- %r20206, %r20209
	store.64*   %r20205 -> 8[%r20210]
	load.32     %r20211 <- 0[i]
	add.32      %r20212 <- %r20211, $1
	store.32    %r20212 -> 0[i]
	symaddr.64* %r20213 <- <anon symbol:0x1ec2188>
	symaddr.64* %r20214 <- base_funcs
	load.32     %r20215 <- 0[i]
	scast.64    %r20216 <- (32) %r20215
	muls.64     %r20217 <- %r20216, $16
	add.64*     %r20218 <- %r20214, %r20217
	store.64*   %r20213 -> 0[%r20218]
	symaddr.64* %r20219 <- luaB_next
	symaddr.64* %r20220 <- base_funcs
	load.32     %r20221 <- 0[i]
	scast.64    %r20222 <- (32) %r20221
	muls.64     %r20223 <- %r20222, $16
	add.64*     %r20224 <- %r20220, %r20223
	store.64*   %r20219 -> 8[%r20224]
	load.32     %r20225 <- 0[i]
	add.32      %r20226 <- %r20225, $1
	store.32    %r20226 -> 0[i]
	symaddr.64* %r20227 <- <anon symbol:0x1ec2c68>
	symaddr.64* %r20228 <- base_funcs
	load.32     %r20229 <- 0[i]
	scast.64    %r20230 <- (32) %r20229
	muls.64     %r20231 <- %r20230, $16
	add.64*     %r20232 <- %r20228, %r20231
	store.64*   %r20227 -> 0[%r20232]
	symaddr.64* %r20233 <- luaB_pcall
	symaddr.64* %r20234 <- base_funcs
	load.32     %r20235 <- 0[i]
	scast.64    %r20236 <- (32) %r20235
	muls.64     %r20237 <- %r20236, $16
	add.64*     %r20238 <- %r20234, %r20237
	store.64*   %r20233 -> 8[%r20238]
	load.32     %r20239 <- 0[i]
	add.32      %r20240 <- %r20239, $1
	store.32    %r20240 -> 0[i]
	symaddr.64* %r20241 <- <anon symbol:0x1ec3748>
	symaddr.64* %r20242 <- base_funcs
	load.32     %r20243 <- 0[i]
	scast.64    %r20244 <- (32) %r20243
	muls.64     %r20245 <- %r20244, $16
	add.64*     %r20246 <- %r20242, %r20245
	store.64*   %r20241 -> 0[%r20246]
	symaddr.64* %r20247 <- luaB_rawget
	symaddr.64* %r20248 <- base_funcs
	load.32     %r20249 <- 0[i]
	scast.64    %r20250 <- (32) %r20249
	muls.64     %r20251 <- %r20250, $16
	add.64*     %r20252 <- %r20248, %r20251
	store.64*   %r20247 -> 8[%r20252]
	load.32     %r20253 <- 0[i]
	add.32      %r20254 <- %r20253, $1
	store.32    %r20254 -> 0[i]
	symaddr.64* %r20255 <- <anon symbol:0x1ec4228>
	symaddr.64* %r20256 <- base_funcs
	load.32     %r20257 <- 0[i]
	scast.64    %r20258 <- (32) %r20257
	muls.64     %r20259 <- %r20258, $16
	add.64*     %r20260 <- %r20256, %r20259
	store.64*   %r20255 -> 0[%r20260]
	symaddr.64* %r20261 <- luaB_setfenv
	symaddr.64* %r20262 <- base_funcs
	load.32     %r20263 <- 0[i]
	scast.64    %r20264 <- (32) %r20263
	muls.64     %r20265 <- %r20264, $16
	add.64*     %r20266 <- %r20262, %r20265
	store.64*   %r20261 -> 8[%r20266]
	load.32     %r20267 <- 0[i]
	add.32      %r20268 <- %r20267, $1
	store.32    %r20268 -> 0[i]
	symaddr.64* %r20269 <- <anon symbol:0x2735e30>
	symaddr.64* %r20270 <- base_funcs
	load.32     %r20271 <- 0[i]
	scast.64    %r20272 <- (32) %r20271
	muls.64     %r20273 <- %r20272, $16
	add.64*     %r20274 <- %r20270, %r20273
	store.64*   %r20269 -> 0[%r20274]
	symaddr.64* %r20275 <- luaB_setmetatable
	symaddr.64* %r20276 <- base_funcs
	load.32     %r20277 <- 0[i]
	scast.64    %r20278 <- (32) %r20277
	muls.64     %r20279 <- %r20278, $16
	add.64*     %r20280 <- %r20276, %r20279
	store.64*   %r20275 -> 8[%r20280]
	load.32     %r20281 <- 0[i]
	add.32      %r20282 <- %r20281, $1
	store.32    %r20282 -> 0[i]
	symaddr.64* %r20283 <- <anon symbol:0x2736910>
	symaddr.64* %r20284 <- base_funcs
	load.32     %r20285 <- 0[i]
	scast.64    %r20286 <- (32) %r20285
	muls.64     %r20287 <- %r20286, $16
	add.64*     %r20288 <- %r20284, %r20287
	store.64*   %r20283 -> 0[%r20288]
	symaddr.64* %r20289 <- luaB_tonumber
	symaddr.64* %r20290 <- base_funcs
	load.32     %r20291 <- 0[i]
	scast.64    %r20292 <- (32) %r20291
	muls.64     %r20293 <- %r20292, $16
	add.64*     %r20294 <- %r20290, %r20293
	store.64*   %r20289 -> 8[%r20294]
	load.32     %r20295 <- 0[i]
	add.32      %r20296 <- %r20295, $1
	store.32    %r20296 -> 0[i]
	symaddr.64* %r20297 <- <anon symbol:0x27373f0>
	symaddr.64* %r20298 <- base_funcs
	load.32     %r20299 <- 0[i]
	scast.64    %r20300 <- (32) %r20299
	muls.64     %r20301 <- %r20300, $16
	add.64*     %r20302 <- %r20298, %r20301
	store.64*   %r20297 -> 0[%r20302]
	symaddr.64* %r20303 <- luaB_type
	symaddr.64* %r20304 <- base_funcs
	load.32     %r20305 <- 0[i]
	scast.64    %r20306 <- (32) %r20305
	muls.64     %r20307 <- %r20306, $16
	add.64*     %r20308 <- %r20304, %r20307
	store.64*   %r20303 -> 8[%r20308]
	load.32     %r20309 <- 0[i]
	add.32      %r20310 <- %r20309, $1
	store.32    %r20310 -> 0[i]
	symaddr.64* %r20311 <- <anon symbol:0x2737ed0>
	symaddr.64* %r20312 <- base_funcs
	load.32     %r20313 <- 0[i]
	scast.64    %r20314 <- (32) %r20313
	muls.64     %r20315 <- %r20314, $16
	add.64*     %r20316 <- %r20312, %r20315
	store.64*   %r20311 -> 0[%r20316]
	symaddr.64* %r20317 <- luaB_unpack
	symaddr.64* %r20318 <- base_funcs
	load.32     %r20319 <- 0[i]
	scast.64    %r20320 <- (32) %r20319
	muls.64     %r20321 <- %r20320, $16
	add.64*     %r20322 <- %r20318, %r20321
	store.64*   %r20317 -> 8[%r20322]
	load.32     %r20323 <- 0[i]
	add.32      %r20324 <- %r20323, $1
	store.32    %r20324 -> 0[i]
	symaddr.64* %r20325 <- base_funcs
	load.32     %r20326 <- 0[i]
	scast.64    %r20327 <- (32) %r20326
	muls.64     %r20328 <- %r20327, $16
	add.64*     %r20329 <- %r20325, %r20328
	store.64*   $0 -> 0[%r20329]
	symaddr.64* %r20330 <- base_funcs
	load.32     %r20331 <- 0[i]
	scast.64    %r20332 <- (32) %r20331
	muls.64     %r20333 <- %r20332, $16
	add.64*     %r20334 <- %r20330, %r20333
	store.64*   $0 -> 8[%r20334]
	store.32    $0 -> 0[i]
	symaddr.64* %r20335 <- <anon symbol:0x2738f20>
	symaddr.64* %r20336 <- tab_funcs
	load.32     %r20337 <- 0[i]
	scast.64    %r20338 <- (32) %r20337
	muls.64     %r20339 <- %r20338, $16
	add.64*     %r20340 <- %r20336, %r20339
	store.64*   %r20335 -> 0[%r20340]
	symaddr.64* %r20341 <- tconcat
	symaddr.64* %r20342 <- tab_funcs
	load.32     %r20343 <- 0[i]
	scast.64    %r20344 <- (32) %r20343
	muls.64     %r20345 <- %r20344, $16
	add.64*     %r20346 <- %r20342, %r20345
	store.64*   %r20341 -> 8[%r20346]
	load.32     %r20347 <- 0[i]
	add.32      %r20348 <- %r20347, $1
	store.32    %r20348 -> 0[i]
	symaddr.64* %r20349 <- <anon symbol:0x2739a00>
	symaddr.64* %r20350 <- tab_funcs
	load.32     %r20351 <- 0[i]
	scast.64    %r20352 <- (32) %r20351
	muls.64     %r20353 <- %r20352, $16
	add.64*     %r20354 <- %r20350, %r20353
	store.64*   %r20349 -> 0[%r20354]
	symaddr.64* %r20355 <- tinsert
	symaddr.64* %r20356 <- tab_funcs
	load.32     %r20357 <- 0[i]
	scast.64    %r20358 <- (32) %r20357
	muls.64     %r20359 <- %r20358, $16
	add.64*     %r20360 <- %r20356, %r20359
	store.64*   %r20355 -> 8[%r20360]
	load.32     %r20361 <- 0[i]
	add.32      %r20362 <- %r20361, $1
	store.32    %r20362 -> 0[i]
	symaddr.64* %r20363 <- <anon symbol:0x273a4e0>
	symaddr.64* %r20364 <- tab_funcs
	load.32     %r20365 <- 0[i]
	scast.64    %r20366 <- (32) %r20365
	muls.64     %r20367 <- %r20366, $16
	add.64*     %r20368 <- %r20364, %r20367
	store.64*   %r20363 -> 0[%r20368]
	symaddr.64* %r20369 <- tremove
	symaddr.64* %r20370 <- tab_funcs
	load.32     %r20371 <- 0[i]
	scast.64    %r20372 <- (32) %r20371
	muls.64     %r20373 <- %r20372, $16
	add.64*     %r20374 <- %r20370, %r20373
	store.64*   %r20369 -> 8[%r20374]
	load.32     %r20375 <- 0[i]
	add.32      %r20376 <- %r20375, $1
	store.32    %r20376 -> 0[i]
	symaddr.64* %r20377 <- <anon symbol:0x273afc0>
	symaddr.64* %r20378 <- tab_funcs
	load.32     %r20379 <- 0[i]
	scast.64    %r20380 <- (32) %r20379
	muls.64     %r20381 <- %r20380, $16
	add.64*     %r20382 <- %r20378, %r20381
	store.64*   %r20377 -> 0[%r20382]
	symaddr.64* %r20383 <- sort
	symaddr.64* %r20384 <- tab_funcs
	load.32     %r20385 <- 0[i]
	scast.64    %r20386 <- (32) %r20385
	muls.64     %r20387 <- %r20386, $16
	add.64*     %r20388 <- %r20384, %r20387
	store.64*   %r20383 -> 8[%r20388]
	load.32     %r20389 <- 0[i]
	add.32      %r20390 <- %r20389, $1
	store.32    %r20390 -> 0[i]
	symaddr.64* %r20391 <- tab_funcs
	load.32     %r20392 <- 0[i]
	scast.64    %r20393 <- (32) %r20392
	muls.64     %r20394 <- %r20393, $16
	add.64*     %r20395 <- %r20391, %r20394
	store.64*   $0 -> 0[%r20395]
	symaddr.64* %r20396 <- tab_funcs
	load.32     %r20397 <- 0[i]
	scast.64    %r20398 <- (32) %r20397
	muls.64     %r20399 <- %r20398, $16
	add.64*     %r20400 <- %r20396, %r20399
	store.64*   $0 -> 8[%r20400]
	symaddr.64* %r20401 <- <anon symbol:0x273c010>
	store.64*   %r20401 -> 0[fnames]
	symaddr.64* %r20402 <- <anon symbol:0x273c668>
	store.64*   %r20402 -> 8[fnames]
	store.32    $0 -> 0[i]
	symaddr.64* %r20403 <- <anon symbol:0x273ccc0>
	symaddr.64* %r20404 <- iolib
	load.32     %r20405 <- 0[i]
	scast.64    %r20406 <- (32) %r20405
	muls.64     %r20407 <- %r20406, $16
	add.64*     %r20408 <- %r20404, %r20407
	store.64*   %r20403 -> 0[%r20408]
	symaddr.64* %r20409 <- io_close
	symaddr.64* %r20410 <- iolib
	load.32     %r20411 <- 0[i]
	scast.64    %r20412 <- (32) %r20411
	muls.64     %r20413 <- %r20412, $16
	add.64*     %r20414 <- %r20410, %r20413
	store.64*   %r20409 -> 8[%r20414]
	load.32     %r20415 <- 0[i]
	add.32      %r20416 <- %r20415, $1
	store.32    %r20416 -> 0[i]
	symaddr.64* %r20417 <- <anon symbol:0x273d7a0>
	symaddr.64* %r20418 <- iolib
	load.32     %r20419 <- 0[i]
	scast.64    %r20420 <- (32) %r20419
	muls.64     %r20421 <- %r20420, $16
	add.64*     %r20422 <- %r20418, %r20421
	store.64*   %r20417 -> 0[%r20422]
	symaddr.64* %r20423 <- io_flush
	symaddr.64* %r20424 <- iolib
	load.32     %r20425 <- 0[i]
	scast.64    %r20426 <- (32) %r20425
	muls.64     %r20427 <- %r20426, $16
	add.64*     %r20428 <- %r20424, %r20427
	store.64*   %r20423 -> 8[%r20428]
	load.32     %r20429 <- 0[i]
	add.32      %r20430 <- %r20429, $1
	store.32    %r20430 -> 0[i]
	symaddr.64* %r20431 <- <anon symbol:0x27462d8>
	symaddr.64* %r20432 <- iolib
	load.32     %r20433 <- 0[i]
	scast.64    %r20434 <- (32) %r20433
	muls.64     %r20435 <- %r20434, $16
	add.64*     %r20436 <- %r20432, %r20435
	store.64*   %r20431 -> 0[%r20436]
	symaddr.64* %r20437 <- io_input
	symaddr.64* %r20438 <- iolib
	load.32     %r20439 <- 0[i]
	scast.64    %r20440 <- (32) %r20439
	muls.64     %r20441 <- %r20440, $16
	add.64*     %r20442 <- %r20438, %r20441
	store.64*   %r20437 -> 8[%r20442]
	load.32     %r20443 <- 0[i]
	add.32      %r20444 <- %r20443, $1
	store.32    %r20444 -> 0[i]
	symaddr.64* %r20445 <- <anon symbol:0x2746db8>
	symaddr.64* %r20446 <- iolib
	load.32     %r20447 <- 0[i]
	scast.64    %r20448 <- (32) %r20447
	muls.64     %r20449 <- %r20448, $16
	add.64*     %r20450 <- %r20446, %r20449
	store.64*   %r20445 -> 0[%r20450]
	symaddr.64* %r20451 <- io_lines
	symaddr.64* %r20452 <- iolib
	load.32     %r20453 <- 0[i]
	scast.64    %r20454 <- (32) %r20453
	muls.64     %r20455 <- %r20454, $16
	add.64*     %r20456 <- %r20452, %r20455
	store.64*   %r20451 -> 8[%r20456]
	load.32     %r20457 <- 0[i]
	add.32      %r20458 <- %r20457, $1
	store.32    %r20458 -> 0[i]
	symaddr.64* %r20459 <- <anon symbol:0x2747898>
	symaddr.64* %r20460 <- iolib
	load.32     %r20461 <- 0[i]
	scast.64    %r20462 <- (32) %r20461
	muls.64     %r20463 <- %r20462, $16
	add.64*     %r20464 <- %r20460, %r20463
	store.64*   %r20459 -> 0[%r20464]
	symaddr.64* %r20465 <- io_open
	symaddr.64* %r20466 <- iolib
	load.32     %r20467 <- 0[i]
	scast.64    %r20468 <- (32) %r20467
	muls.64     %r20469 <- %r20468, $16
	add.64*     %r20470 <- %r20466, %r20469
	store.64*   %r20465 -> 8[%r20470]
	load.32     %r20471 <- 0[i]
	add.32      %r20472 <- %r20471, $1
	store.32    %r20472 -> 0[i]
	symaddr.64* %r20473 <- <anon symbol:0x2748378>
	symaddr.64* %r20474 <- iolib
	load.32     %r20475 <- 0[i]
	scast.64    %r20476 <- (32) %r20475
	muls.64     %r20477 <- %r20476, $16
	add.64*     %r20478 <- %r20474, %r20477
	store.64*   %r20473 -> 0[%r20478]
	symaddr.64* %r20479 <- io_output
	symaddr.64* %r20480 <- iolib
	load.32     %r20481 <- 0[i]
	scast.64    %r20482 <- (32) %r20481
	muls.64     %r20483 <- %r20482, $16
	add.64*     %r20484 <- %r20480, %r20483
	store.64*   %r20479 -> 8[%r20484]
	load.32     %r20485 <- 0[i]
	add.32      %r20486 <- %r20485, $1
	store.32    %r20486 -> 0[i]
	symaddr.64* %r20487 <- <anon symbol:0x2748e58>
	symaddr.64* %r20488 <- iolib
	load.32     %r20489 <- 0[i]
	scast.64    %r20490 <- (32) %r20489
	muls.64     %r20491 <- %r20490, $16
	add.64*     %r20492 <- %r20488, %r20491
	store.64*   %r20487 -> 0[%r20492]
	symaddr.64* %r20493 <- io_read
	symaddr.64* %r20494 <- iolib
	load.32     %r20495 <- 0[i]
	scast.64    %r20496 <- (32) %r20495
	muls.64     %r20497 <- %r20496, $16
	add.64*     %r20498 <- %r20494, %r20497
	store.64*   %r20493 -> 8[%r20498]
	load.32     %r20499 <- 0[i]
	add.32      %r20500 <- %r20499, $1
	store.32    %r20500 -> 0[i]
	symaddr.64* %r20501 <- <anon symbol:0x2749938>
	symaddr.64* %r20502 <- iolib
	load.32     %r20503 <- 0[i]
	scast.64    %r20504 <- (32) %r20503
	muls.64     %r20505 <- %r20504, $16
	add.64*     %r20506 <- %r20502, %r20505
	store.64*   %r20501 -> 0[%r20506]
	symaddr.64* %r20507 <- io_type
	symaddr.64* %r20508 <- iolib
	load.32     %r20509 <- 0[i]
	scast.64    %r20510 <- (32) %r20509
	muls.64     %r20511 <- %r20510, $16
	add.64*     %r20512 <- %r20508, %r20511
	store.64*   %r20507 -> 8[%r20512]
	load.32     %r20513 <- 0[i]
	add.32      %r20514 <- %r20513, $1
	store.32    %r20514 -> 0[i]
	symaddr.64* %r20515 <- <anon symbol:0x274a418>
	symaddr.64* %r20516 <- iolib
	load.32     %r20517 <- 0[i]
	scast.64    %r20518 <- (32) %r20517
	muls.64     %r20519 <- %r20518, $16
	add.64*     %r20520 <- %r20516, %r20519
	store.64*   %r20515 -> 0[%r20520]
	symaddr.64* %r20521 <- io_write
	symaddr.64* %r20522 <- iolib
	load.32     %r20523 <- 0[i]
	scast.64    %r20524 <- (32) %r20523
	muls.64     %r20525 <- %r20524, $16
	add.64*     %r20526 <- %r20522, %r20525
	store.64*   %r20521 -> 8[%r20526]
	load.32     %r20527 <- 0[i]
	add.32      %r20528 <- %r20527, $1
	store.32    %r20528 -> 0[i]
	symaddr.64* %r20529 <- iolib
	load.32     %r20530 <- 0[i]
	scast.64    %r20531 <- (32) %r20530
	muls.64     %r20532 <- %r20531, $16
	add.64*     %r20533 <- %r20529, %r20532
	store.64*   $0 -> 0[%r20533]
	symaddr.64* %r20534 <- iolib
	load.32     %r20535 <- 0[i]
	scast.64    %r20536 <- (32) %r20535
	muls.64     %r20537 <- %r20536, $16
	add.64*     %r20538 <- %r20534, %r20537
	store.64*   $0 -> 8[%r20538]
	store.32    $0 -> 0[i]
	symaddr.64* %r20539 <- <anon symbol:0x274b468>
	symaddr.64* %r20540 <- flib
	load.32     %r20541 <- 0[i]
	scast.64    %r20542 <- (32) %r20541
	muls.64     %r20543 <- %r20542, $16
	add.64*     %r20544 <- %r20540, %r20543
	store.64*   %r20539 -> 0[%r20544]
	symaddr.64* %r20545 <- io_close
	symaddr.64* %r20546 <- flib
	load.32     %r20547 <- 0[i]
	scast.64    %r20548 <- (32) %r20547
	muls.64     %r20549 <- %r20548, $16
	add.64*     %r20550 <- %r20546, %r20549
	store.64*   %r20545 -> 8[%r20550]
	load.32     %r20551 <- 0[i]
	add.32      %r20552 <- %r20551, $1
	store.32    %r20552 -> 0[i]
	symaddr.64* %r20553 <- <anon symbol:0x274bf48>
	symaddr.64* %r20554 <- flib
	load.32     %r20555 <- 0[i]
	scast.64    %r20556 <- (32) %r20555
	muls.64     %r20557 <- %r20556, $16
	add.64*     %r20558 <- %r20554, %r20557
	store.64*   %r20553 -> 0[%r20558]
	symaddr.64* %r20559 <- f_flush
	symaddr.64* %r20560 <- flib
	load.32     %r20561 <- 0[i]
	scast.64    %r20562 <- (32) %r20561
	muls.64     %r20563 <- %r20562, $16
	add.64*     %r20564 <- %r20560, %r20563
	store.64*   %r20559 -> 8[%r20564]
	load.32     %r20565 <- 0[i]
	add.32      %r20566 <- %r20565, $1
	store.32    %r20566 -> 0[i]
	symaddr.64* %r20567 <- <anon symbol:0x274ca28>
	symaddr.64* %r20568 <- flib
	load.32     %r20569 <- 0[i]
	scast.64    %r20570 <- (32) %r20569
	muls.64     %r20571 <- %r20570, $16
	add.64*     %r20572 <- %r20568, %r20571
	store.64*   %r20567 -> 0[%r20572]
	symaddr.64* %r20573 <- f_lines
	symaddr.64* %r20574 <- flib
	load.32     %r20575 <- 0[i]
	scast.64    %r20576 <- (32) %r20575
	muls.64     %r20577 <- %r20576, $16
	add.64*     %r20578 <- %r20574, %r20577
	store.64*   %r20573 -> 8[%r20578]
	load.32     %r20579 <- 0[i]
	add.32      %r20580 <- %r20579, $1
	store.32    %r20580 -> 0[i]
	symaddr.64* %r20581 <- <anon symbol:0x274d508>
	symaddr.64* %r20582 <- flib
	load.32     %r20583 <- 0[i]
	scast.64    %r20584 <- (32) %r20583
	muls.64     %r20585 <- %r20584, $16
	add.64*     %r20586 <- %r20582, %r20585
	store.64*   %r20581 -> 0[%r20586]
	symaddr.64* %r20587 <- f_read
	symaddr.64* %r20588 <- flib
	load.32     %r20589 <- 0[i]
	scast.64    %r20590 <- (32) %r20589
	muls.64     %r20591 <- %r20590, $16
	add.64*     %r20592 <- %r20588, %r20591
	store.64*   %r20587 -> 8[%r20592]
	load.32     %r20593 <- 0[i]
	add.32      %r20594 <- %r20593, $1
	store.32    %r20594 -> 0[i]
	symaddr.64* %r20595 <- <anon symbol:0x274e030>
	symaddr.64* %r20596 <- flib
	load.32     %r20597 <- 0[i]
	scast.64    %r20598 <- (32) %r20597
	muls.64     %r20599 <- %r20598, $16
	add.64*     %r20600 <- %r20596, %r20599
	store.64*   %r20595 -> 0[%r20600]
	symaddr.64* %r20601 <- f_write
	symaddr.64* %r20602 <- flib
	load.32     %r20603 <- 0[i]
	scast.64    %r20604 <- (32) %r20603
	muls.64     %r20605 <- %r20604, $16
	add.64*     %r20606 <- %r20602, %r20605
	store.64*   %r20601 -> 8[%r20606]
	load.32     %r20607 <- 0[i]
	add.32      %r20608 <- %r20607, $1
	store.32    %r20608 -> 0[i]
	symaddr.64* %r20609 <- <anon symbol:0x274eb10>
	symaddr.64* %r20610 <- flib
	load.32     %r20611 <- 0[i]
	scast.64    %r20612 <- (32) %r20611
	muls.64     %r20613 <- %r20612, $16
	add.64*     %r20614 <- %r20610, %r20613
	store.64*   %r20609 -> 0[%r20614]
	symaddr.64* %r20615 <- io_gc
	symaddr.64* %r20616 <- flib
	load.32     %r20617 <- 0[i]
	scast.64    %r20618 <- (32) %r20617
	muls.64     %r20619 <- %r20618, $16
	add.64*     %r20620 <- %r20616, %r20619
	store.64*   %r20615 -> 8[%r20620]
	load.32     %r20621 <- 0[i]
	add.32      %r20622 <- %r20621, $1
	store.32    %r20622 -> 0[i]
	symaddr.64* %r20623 <- flib
	load.32     %r20624 <- 0[i]
	scast.64    %r20625 <- (32) %r20624
	muls.64     %r20626 <- %r20625, $16
	add.64*     %r20627 <- %r20623, %r20626
	store.64*   $0 -> 0[%r20627]
	symaddr.64* %r20628 <- flib
	load.32     %r20629 <- 0[i]
	scast.64    %r20630 <- (32) %r20629
	muls.64     %r20631 <- %r20630, $16
	add.64*     %r20632 <- %r20628, %r20631
	store.64*   $0 -> 8[%r20632]
	store.32    $0 -> 0[i]
	symaddr.64* %r20633 <- <anon symbol:0x274fb60>
	symaddr.64* %r20634 <- syslib
	load.32     %r20635 <- 0[i]
	scast.64    %r20636 <- (32) %r20635
	muls.64     %r20637 <- %r20636, $16
	add.64*     %r20638 <- %r20634, %r20637
	store.64*   %r20633 -> 0[%r20638]
	symaddr.64* %r20639 <- os_exit
	symaddr.64* %r20640 <- syslib
	load.32     %r20641 <- 0[i]
	scast.64    %r20642 <- (32) %r20641
	muls.64     %r20643 <- %r20642, $16
	add.64*     %r20644 <- %r20640, %r20643
	store.64*   %r20639 -> 8[%r20644]
	load.32     %r20645 <- 0[i]
	add.32      %r20646 <- %r20645, $1
	store.32    %r20646 -> 0[i]
	symaddr.64* %r20647 <- <anon symbol:0x2750640>
	symaddr.64* %r20648 <- syslib
	load.32     %r20649 <- 0[i]
	scast.64    %r20650 <- (32) %r20649
	muls.64     %r20651 <- %r20650, $16
	add.64*     %r20652 <- %r20648, %r20651
	store.64*   %r20647 -> 0[%r20652]
	symaddr.64* %r20653 <- os_remove
	symaddr.64* %r20654 <- syslib
	load.32     %r20655 <- 0[i]
	scast.64    %r20656 <- (32) %r20655
	muls.64     %r20657 <- %r20656, $16
	add.64*     %r20658 <- %r20654, %r20657
	store.64*   %r20653 -> 8[%r20658]
	load.32     %r20659 <- 0[i]
	add.32      %r20660 <- %r20659, $1
	store.32    %r20660 -> 0[i]
	symaddr.64* %r20661 <- syslib
	load.32     %r20662 <- 0[i]
	scast.64    %r20663 <- (32) %r20662
	muls.64     %r20664 <- %r20663, $16
	add.64*     %r20665 <- %r20661, %r20664
	store.64*   $0 -> 0[%r20665]
	symaddr.64* %r20666 <- syslib
	load.32     %r20667 <- 0[i]
	scast.64    %r20668 <- (32) %r20667
	muls.64     %r20669 <- %r20668, $16
	add.64*     %r20670 <- %r20666, %r20669
	store.64*   $0 -> 8[%r20670]
	store.32    $0 -> 0[i]
	symaddr.64* %r20671 <- <anon symbol:0x2751690>
	symaddr.64* %r20672 <- strlib
	load.32     %r20673 <- 0[i]
	scast.64    %r20674 <- (32) %r20673
	muls.64     %r20675 <- %r20674, $16
	add.64*     %r20676 <- %r20672, %r20675
	store.64*   %r20671 -> 0[%r20676]
	symaddr.64* %r20677 <- str_byte
	symaddr.64* %r20678 <- strlib
	load.32     %r20679 <- 0[i]
	scast.64    %r20680 <- (32) %r20679
	muls.64     %r20681 <- %r20680, $16
	add.64*     %r20682 <- %r20678, %r20681
	store.64*   %r20677 -> 8[%r20682]
	load.32     %r20683 <- 0[i]
	add.32      %r20684 <- %r20683, $1
	store.32    %r20684 -> 0[i]
	symaddr.64* %r20685 <- <anon symbol:0x2752170>
	symaddr.64* %r20686 <- strlib
	load.32     %r20687 <- 0[i]
	scast.64    %r20688 <- (32) %r20687
	muls.64     %r20689 <- %r20688, $16
	add.64*     %r20690 <- %r20686, %r20689
	store.64*   %r20685 -> 0[%r20690]
	symaddr.64* %r20691 <- str_char
	symaddr.64* %r20692 <- strlib
	load.32     %r20693 <- 0[i]
	scast.64    %r20694 <- (32) %r20693
	muls.64     %r20695 <- %r20694, $16
	add.64*     %r20696 <- %r20692, %r20695
	store.64*   %r20691 -> 8[%r20696]
	load.32     %r20697 <- 0[i]
	add.32      %r20698 <- %r20697, $1
	store.32    %r20698 -> 0[i]
	symaddr.64* %r20699 <- <anon symbol:0x2752c50>
	symaddr.64* %r20700 <- strlib
	load.32     %r20701 <- 0[i]
	scast.64    %r20702 <- (32) %r20701
	muls.64     %r20703 <- %r20702, $16
	add.64*     %r20704 <- %r20700, %r20703
	store.64*   %r20699 -> 0[%r20704]
	symaddr.64* %r20705 <- str_find
	symaddr.64* %r20706 <- strlib
	load.32     %r20707 <- 0[i]
	scast.64    %r20708 <- (32) %r20707
	muls.64     %r20709 <- %r20708, $16
	add.64*     %r20710 <- %r20706, %r20709
	store.64*   %r20705 -> 8[%r20710]
	load.32     %r20711 <- 0[i]
	add.32      %r20712 <- %r20711, $1
	store.32    %r20712 -> 0[i]
	symaddr.64* %r20713 <- <anon symbol:0x2753730>
	symaddr.64* %r20714 <- strlib
	load.32     %r20715 <- 0[i]
	scast.64    %r20716 <- (32) %r20715
	muls.64     %r20717 <- %r20716, $16
	add.64*     %r20718 <- %r20714, %r20717
	store.64*   %r20713 -> 0[%r20718]
	symaddr.64* %r20719 <- str_format
	symaddr.64* %r20720 <- strlib
	load.32     %r20721 <- 0[i]
	scast.64    %r20722 <- (32) %r20721
	muls.64     %r20723 <- %r20722, $16
	add.64*     %r20724 <- %r20720, %r20723
	store.64*   %r20719 -> 8[%r20724]
	load.32     %r20725 <- 0[i]
	add.32      %r20726 <- %r20725, $1
	store.32    %r20726 -> 0[i]
	symaddr.64* %r20727 <- <anon symbol:0x2754210>
	symaddr.64* %r20728 <- strlib
	load.32     %r20729 <- 0[i]
	scast.64    %r20730 <- (32) %r20729
	muls.64     %r20731 <- %r20730, $16
	add.64*     %r20732 <- %r20728, %r20731
	store.64*   %r20727 -> 0[%r20732]
	symaddr.64* %r20733 <- gmatch
	symaddr.64* %r20734 <- strlib
	load.32     %r20735 <- 0[i]
	scast.64    %r20736 <- (32) %r20735
	muls.64     %r20737 <- %r20736, $16
	add.64*     %r20738 <- %r20734, %r20737
	store.64*   %r20733 -> 8[%r20738]
	load.32     %r20739 <- 0[i]
	add.32      %r20740 <- %r20739, $1
	store.32    %r20740 -> 0[i]
	symaddr.64* %r20741 <- <anon symbol:0x2754cf0>
	symaddr.64* %r20742 <- strlib
	load.32     %r20743 <- 0[i]
	scast.64    %r20744 <- (32) %r20743
	muls.64     %r20745 <- %r20744, $16
	add.64*     %r20746 <- %r20742, %r20745
	store.64*   %r20741 -> 0[%r20746]
	symaddr.64* %r20747 <- str_gsub
	symaddr.64* %r20748 <- strlib
	load.32     %r20749 <- 0[i]
	scast.64    %r20750 <- (32) %r20749
	muls.64     %r20751 <- %r20750, $16
	add.64*     %r20752 <- %r20748, %r20751
	store.64*   %r20747 -> 8[%r20752]
	load.32     %r20753 <- 0[i]
	add.32      %r20754 <- %r20753, $1
	store.32    %r20754 -> 0[i]
	symaddr.64* %r20755 <- <anon symbol:0x27557d0>
	symaddr.64* %r20756 <- strlib
	load.32     %r20757 <- 0[i]
	scast.64    %r20758 <- (32) %r20757
	muls.64     %r20759 <- %r20758, $16
	add.64*     %r20760 <- %r20756, %r20759
	store.64*   %r20755 -> 0[%r20760]
	symaddr.64* %r20761 <- str_lower
	symaddr.64* %r20762 <- strlib
	load.32     %r20763 <- 0[i]
	scast.64    %r20764 <- (32) %r20763
	muls.64     %r20765 <- %r20764, $16
	add.64*     %r20766 <- %r20762, %r20765
	store.64*   %r20761 -> 8[%r20766]
	load.32     %r20767 <- 0[i]
	add.32      %r20768 <- %r20767, $1
	store.32    %r20768 -> 0[i]
	symaddr.64* %r20769 <- <anon symbol:0x275e308>
	symaddr.64* %r20770 <- strlib
	load.32     %r20771 <- 0[i]
	scast.64    %r20772 <- (32) %r20771
	muls.64     %r20773 <- %r20772, $16
	add.64*     %r20774 <- %r20770, %r20773
	store.64*   %r20769 -> 0[%r20774]
	symaddr.64* %r20775 <- str_match
	symaddr.64* %r20776 <- strlib
	load.32     %r20777 <- 0[i]
	scast.64    %r20778 <- (32) %r20777
	muls.64     %r20779 <- %r20778, $16
	add.64*     %r20780 <- %r20776, %r20779
	store.64*   %r20775 -> 8[%r20780]
	load.32     %r20781 <- 0[i]
	add.32      %r20782 <- %r20781, $1
	store.32    %r20782 -> 0[i]
	symaddr.64* %r20783 <- <anon symbol:0x275ede8>
	symaddr.64* %r20784 <- strlib
	load.32     %r20785 <- 0[i]
	scast.64    %r20786 <- (32) %r20785
	muls.64     %r20787 <- %r20786, $16
	add.64*     %r20788 <- %r20784, %r20787
	store.64*   %r20783 -> 0[%r20788]
	symaddr.64* %r20789 <- str_rep
	symaddr.64* %r20790 <- strlib
	load.32     %r20791 <- 0[i]
	scast.64    %r20792 <- (32) %r20791
	muls.64     %r20793 <- %r20792, $16
	add.64*     %r20794 <- %r20790, %r20793
	store.64*   %r20789 -> 8[%r20794]
	load.32     %r20795 <- 0[i]
	add.32      %r20796 <- %r20795, $1
	store.32    %r20796 -> 0[i]
	symaddr.64* %r20797 <- <anon symbol:0x275f8c8>
	symaddr.64* %r20798 <- strlib
	load.32     %r20799 <- 0[i]
	scast.64    %r20800 <- (32) %r20799
	muls.64     %r20801 <- %r20800, $16
	add.64*     %r20802 <- %r20798, %r20801
	store.64*   %r20797 -> 0[%r20802]
	symaddr.64* %r20803 <- str_sub
	symaddr.64* %r20804 <- strlib
	load.32     %r20805 <- 0[i]
	scast.64    %r20806 <- (32) %r20805
	muls.64     %r20807 <- %r20806, $16
	add.64*     %r20808 <- %r20804, %r20807
	store.64*   %r20803 -> 8[%r20808]
	load.32     %r20809 <- 0[i]
	add.32      %r20810 <- %r20809, $1
	store.32    %r20810 -> 0[i]
	symaddr.64* %r20811 <- <anon symbol:0x27603a8>
	symaddr.64* %r20812 <- strlib
	load.32     %r20813 <- 0[i]
	scast.64    %r20814 <- (32) %r20813
	muls.64     %r20815 <- %r20814, $16
	add.64*     %r20816 <- %r20812, %r20815
	store.64*   %r20811 -> 0[%r20816]
	symaddr.64* %r20817 <- str_upper
	symaddr.64* %r20818 <- strlib
	load.32     %r20819 <- 0[i]
	scast.64    %r20820 <- (32) %r20819
	muls.64     %r20821 <- %r20820, $16
	add.64*     %r20822 <- %r20818, %r20821
	store.64*   %r20817 -> 8[%r20822]
	load.32     %r20823 <- 0[i]
	add.32      %r20824 <- %r20823, $1
	store.32    %r20824 -> 0[i]
	symaddr.64* %r20825 <- strlib
	load.32     %r20826 <- 0[i]
	scast.64    %r20827 <- (32) %r20826
	muls.64     %r20828 <- %r20827, $16
	add.64*     %r20829 <- %r20825, %r20828
	store.64*   $0 -> 0[%r20829]
	symaddr.64* %r20830 <- strlib
	load.32     %r20831 <- 0[i]
	scast.64    %r20832 <- (32) %r20831
	muls.64     %r20833 <- %r20832, $16
	add.64*     %r20834 <- %r20830, %r20833
	store.64*   $0 -> 8[%r20834]
	store.32    $0 -> 0[i]
	symaddr.64* %r20835 <- <anon symbol:0x27613f8>
	symaddr.64* %r20836 <- lualibs
	load.32     %r20837 <- 0[i]
	scast.64    %r20838 <- (32) %r20837
	muls.64     %r20839 <- %r20838, $16
	add.64*     %r20840 <- %r20836, %r20839
	store.64*   %r20835 -> 0[%r20840]
	symaddr.64* %r20841 <- luaopen_base
	symaddr.64* %r20842 <- lualibs
	load.32     %r20843 <- 0[i]
	scast.64    %r20844 <- (32) %r20843
	muls.64     %r20845 <- %r20844, $16
	add.64*     %r20846 <- %r20842, %r20845
	store.64*   %r20841 -> 8[%r20846]
	load.32     %r20847 <- 0[i]
	add.32      %r20848 <- %r20847, $1
	store.32    %r20848 -> 0[i]
	symaddr.64* %r20849 <- <anon symbol:0x2761ed8>
	symaddr.64* %r20850 <- lualibs
	load.32     %r20851 <- 0[i]
	scast.64    %r20852 <- (32) %r20851
	muls.64     %r20853 <- %r20852, $16
	add.64*     %r20854 <- %r20850, %r20853
	store.64*   %r20849 -> 0[%r20854]
	symaddr.64* %r20855 <- luaopen_table
	symaddr.64* %r20856 <- lualibs
	load.32     %r20857 <- 0[i]
	scast.64    %r20858 <- (32) %r20857
	muls.64     %r20859 <- %r20858, $16
	add.64*     %r20860 <- %r20856, %r20859
	store.64*   %r20855 -> 8[%r20860]
	load.32     %r20861 <- 0[i]
	add.32      %r20862 <- %r20861, $1
	store.32    %r20862 -> 0[i]
	symaddr.64* %r20863 <- <anon symbol:0x27629b8>
	symaddr.64* %r20864 <- lualibs
	load.32     %r20865 <- 0[i]
	scast.64    %r20866 <- (32) %r20865
	muls.64     %r20867 <- %r20866, $16
	add.64*     %r20868 <- %r20864, %r20867
	store.64*   %r20863 -> 0[%r20868]
	symaddr.64* %r20869 <- luaopen_io
	symaddr.64* %r20870 <- lualibs
	load.32     %r20871 <- 0[i]
	scast.64    %r20872 <- (32) %r20871
	muls.64     %r20873 <- %r20872, $16
	add.64*     %r20874 <- %r20870, %r20873
	store.64*   %r20869 -> 8[%r20874]
	load.32     %r20875 <- 0[i]
	add.32      %r20876 <- %r20875, $1
	store.32    %r20876 -> 0[i]
	symaddr.64* %r20877 <- <anon symbol:0x2763498>
	symaddr.64* %r20878 <- lualibs
	load.32     %r20879 <- 0[i]
	scast.64    %r20880 <- (32) %r20879
	muls.64     %r20881 <- %r20880, $16
	add.64*     %r20882 <- %r20878, %r20881
	store.64*   %r20877 -> 0[%r20882]
	symaddr.64* %r20883 <- luaopen_os
	symaddr.64* %r20884 <- lualibs
	load.32     %r20885 <- 0[i]
	scast.64    %r20886 <- (32) %r20885
	muls.64     %r20887 <- %r20886, $16
	add.64*     %r20888 <- %r20884, %r20887
	store.64*   %r20883 -> 8[%r20888]
	load.32     %r20889 <- 0[i]
	add.32      %r20890 <- %r20889, $1
	store.32    %r20890 -> 0[i]
	symaddr.64* %r20891 <- <anon symbol:0x2763f78>
	symaddr.64* %r20892 <- lualibs
	load.32     %r20893 <- 0[i]
	scast.64    %r20894 <- (32) %r20893
	muls.64     %r20895 <- %r20894, $16
	add.64*     %r20896 <- %r20892, %r20895
	store.64*   %r20891 -> 0[%r20896]
	symaddr.64* %r20897 <- luaopen_string
	symaddr.64* %r20898 <- lualibs
	load.32     %r20899 <- 0[i]
	scast.64    %r20900 <- (32) %r20899
	muls.64     %r20901 <- %r20900, $16
	add.64*     %r20902 <- %r20898, %r20901
	store.64*   %r20897 -> 8[%r20902]
	load.32     %r20903 <- 0[i]
	add.32      %r20904 <- %r20903, $1
	store.32    %r20904 -> 0[i]
	symaddr.64* %r20905 <- lualibs
	load.32     %r20906 <- 0[i]
	scast.64    %r20907 <- (32) %r20906
	muls.64     %r20908 <- %r20907, $16
	add.64*     %r20909 <- %r20905, %r20908
	store.64*   $0 -> 0[%r20909]
	symaddr.64* %r20910 <- lualibs
	load.32     %r20911 <- 0[i]
	scast.64    %r20912 <- (32) %r20911
	muls.64     %r20913 <- %r20912, $16
	add.64*     %r20914 <- %r20910, %r20913
	store.64*   $0 -> 8[%r20914]
	store.32    $0 -> 0[i]
	symaddr.64* %r20915 <- <anon symbol:0x2764fc8>
	symaddr.64* %r20916 <- bitlib
	load.32     %r20917 <- 0[i]
	scast.64    %r20918 <- (32) %r20917
	muls.64     %r20919 <- %r20918, $16
	add.64*     %r20920 <- %r20916, %r20919
	store.64*   %r20915 -> 0[%r20920]
	symaddr.64* %r20921 <- tobit
	symaddr.64* %r20922 <- bitlib
	load.32     %r20923 <- 0[i]
	scast.64    %r20924 <- (32) %r20923
	muls.64     %r20925 <- %r20924, $16
	add.64*     %r20926 <- %r20922, %r20925
	store.64*   %r20921 -> 8[%r20926]
	load.32     %r20927 <- 0[i]
	add.32      %r20928 <- %r20927, $1
	store.32    %r20928 -> 0[i]
	symaddr.64* %r20929 <- <anon symbol:0x2765aa8>
	symaddr.64* %r20930 <- bitlib
	load.32     %r20931 <- 0[i]
	scast.64    %r20932 <- (32) %r20931
	muls.64     %r20933 <- %r20932, $16
	add.64*     %r20934 <- %r20930, %r20933
	store.64*   %r20929 -> 0[%r20934]
	symaddr.64* %r20935 <- bnot
	symaddr.64* %r20936 <- bitlib
	load.32     %r20937 <- 0[i]
	scast.64    %r20938 <- (32) %r20937
	muls.64     %r20939 <- %r20938, $16
	add.64*     %r20940 <- %r20936, %r20939
	store.64*   %r20935 -> 8[%r20940]
	load.32     %r20941 <- 0[i]
	add.32      %r20942 <- %r20941, $1
	store.32    %r20942 -> 0[i]
	symaddr.64* %r20943 <- <anon symbol:0x27665d0>
	symaddr.64* %r20944 <- bitlib
	load.32     %r20945 <- 0[i]
	scast.64    %r20946 <- (32) %r20945
	muls.64     %r20947 <- %r20946, $16
	add.64*     %r20948 <- %r20944, %r20947
	store.64*   %r20943 -> 0[%r20948]
	symaddr.64* %r20949 <- band
	symaddr.64* %r20950 <- bitlib
	load.32     %r20951 <- 0[i]
	scast.64    %r20952 <- (32) %r20951
	muls.64     %r20953 <- %r20952, $16
	add.64*     %r20954 <- %r20950, %r20953
	store.64*   %r20949 -> 8[%r20954]
	load.32     %r20955 <- 0[i]
	add.32      %r20956 <- %r20955, $1
	store.32    %r20956 -> 0[i]
	symaddr.64* %r20957 <- <anon symbol:0x27670b0>
	symaddr.64* %r20958 <- bitlib
	load.32     %r20959 <- 0[i]
	scast.64    %r20960 <- (32) %r20959
	muls.64     %r20961 <- %r20960, $16
	add.64*     %r20962 <- %r20958, %r20961
	store.64*   %r20957 -> 0[%r20962]
	symaddr.64* %r20963 <- bor
	symaddr.64* %r20964 <- bitlib
	load.32     %r20965 <- 0[i]
	scast.64    %r20966 <- (32) %r20965
	muls.64     %r20967 <- %r20966, $16
	add.64*     %r20968 <- %r20964, %r20967
	store.64*   %r20963 -> 8[%r20968]
	load.32     %r20969 <- 0[i]
	add.32      %r20970 <- %r20969, $1
	store.32    %r20970 -> 0[i]
	symaddr.64* %r20971 <- <anon symbol:0x2767b90>
	symaddr.64* %r20972 <- bitlib
	load.32     %r20973 <- 0[i]
	scast.64    %r20974 <- (32) %r20973
	muls.64     %r20975 <- %r20974, $16
	add.64*     %r20976 <- %r20972, %r20975
	store.64*   %r20971 -> 0[%r20976]
	symaddr.64* %r20977 <- bxor
	symaddr.64* %r20978 <- bitlib
	load.32     %r20979 <- 0[i]
	scast.64    %r20980 <- (32) %r20979
	muls.64     %r20981 <- %r20980, $16
	add.64*     %r20982 <- %r20978, %r20981
	store.64*   %r20977 -> 8[%r20982]
	load.32     %r20983 <- 0[i]
	add.32      %r20984 <- %r20983, $1
	store.32    %r20984 -> 0[i]
	symaddr.64* %r20985 <- <anon symbol:0x2768670>
	symaddr.64* %r20986 <- bitlib
	load.32     %r20987 <- 0[i]
	scast.64    %r20988 <- (32) %r20987
	muls.64     %r20989 <- %r20988, $16
	add.64*     %r20990 <- %r20986, %r20989
	store.64*   %r20985 -> 0[%r20990]
	symaddr.64* %r20991 <- lshift
	symaddr.64* %r20992 <- bitlib
	load.32     %r20993 <- 0[i]
	scast.64    %r20994 <- (32) %r20993
	muls.64     %r20995 <- %r20994, $16
	add.64*     %r20996 <- %r20992, %r20995
	store.64*   %r20991 -> 8[%r20996]
	load.32     %r20997 <- 0[i]
	add.32      %r20998 <- %r20997, $1
	store.32    %r20998 -> 0[i]
	symaddr.64* %r20999 <- <anon symbol:0x2769150>
	symaddr.64* %r21000 <- bitlib
	load.32     %r21001 <- 0[i]
	scast.64    %r21002 <- (32) %r21001
	muls.64     %r21003 <- %r21002, $16
	add.64*     %r21004 <- %r21000, %r21003
	store.64*   %r20999 -> 0[%r21004]
	symaddr.64* %r21005 <- rshift
	symaddr.64* %r21006 <- bitlib
	load.32     %r21007 <- 0[i]
	scast.64    %r21008 <- (32) %r21007
	muls.64     %r21009 <- %r21008, $16
	add.64*     %r21010 <- %r21006, %r21009
	store.64*   %r21005 -> 8[%r21010]
	load.32     %r21011 <- 0[i]
	add.32      %r21012 <- %r21011, $1
	store.32    %r21012 -> 0[i]
	symaddr.64* %r21013 <- <anon symbol:0x2769c30>
	symaddr.64* %r21014 <- bitlib
	load.32     %r21015 <- 0[i]
	scast.64    %r21016 <- (32) %r21015
	muls.64     %r21017 <- %r21016, $16
	add.64*     %r21018 <- %r21014, %r21017
	store.64*   %r21013 -> 0[%r21018]
	symaddr.64* %r21019 <- arshift
	symaddr.64* %r21020 <- bitlib
	load.32     %r21021 <- 0[i]
	scast.64    %r21022 <- (32) %r21021
	muls.64     %r21023 <- %r21022, $16
	add.64*     %r21024 <- %r21020, %r21023
	store.64*   %r21019 -> 8[%r21024]
	load.32     %r21025 <- 0[i]
	add.32      %r21026 <- %r21025, $1
	store.32    %r21026 -> 0[i]
	symaddr.64* %r21027 <- <anon symbol:0x276a710>
	symaddr.64* %r21028 <- bitlib
	load.32     %r21029 <- 0[i]
	scast.64    %r21030 <- (32) %r21029
	muls.64     %r21031 <- %r21030, $16
	add.64*     %r21032 <- %r21028, %r21031
	store.64*   %r21027 -> 0[%r21032]
	symaddr.64* %r21033 <- rol
	symaddr.64* %r21034 <- bitlib
	load.32     %r21035 <- 0[i]
	scast.64    %r21036 <- (32) %r21035
	muls.64     %r21037 <- %r21036, $16
	add.64*     %r21038 <- %r21034, %r21037
	store.64*   %r21033 -> 8[%r21038]
	load.32     %r21039 <- 0[i]
	add.32      %r21040 <- %r21039, $1
	store.32    %r21040 -> 0[i]
	symaddr.64* %r21041 <- <anon symbol:0x276b1f0>
	symaddr.64* %r21042 <- bitlib
	load.32     %r21043 <- 0[i]
	scast.64    %r21044 <- (32) %r21043
	muls.64     %r21045 <- %r21044, $16
	add.64*     %r21046 <- %r21042, %r21045
	store.64*   %r21041 -> 0[%r21046]
	symaddr.64* %r21047 <- ror
	symaddr.64* %r21048 <- bitlib
	load.32     %r21049 <- 0[i]
	scast.64    %r21050 <- (32) %r21049
	muls.64     %r21051 <- %r21050, $16
	add.64*     %r21052 <- %r21048, %r21051
	store.64*   %r21047 -> 8[%r21052]
	load.32     %r21053 <- 0[i]
	add.32      %r21054 <- %r21053, $1
	store.32    %r21054 -> 0[i]
	symaddr.64* %r21055 <- <anon symbol:0x276bcd0>
	symaddr.64* %r21056 <- bitlib
	load.32     %r21057 <- 0[i]
	scast.64    %r21058 <- (32) %r21057
	muls.64     %r21059 <- %r21058, $16
	add.64*     %r21060 <- %r21056, %r21059
	store.64*   %r21055 -> 0[%r21060]
	symaddr.64* %r21061 <- bswap
	symaddr.64* %r21062 <- bitlib
	load.32     %r21063 <- 0[i]
	scast.64    %r21064 <- (32) %r21063
	muls.64     %r21065 <- %r21064, $16
	add.64*     %r21066 <- %r21062, %r21065
	store.64*   %r21061 -> 8[%r21066]
	load.32     %r21067 <- 0[i]
	add.32      %r21068 <- %r21067, $1
	store.32    %r21068 -> 0[i]
	symaddr.64* %r21069 <- <anon symbol:0x276c7b0>
	symaddr.64* %r21070 <- bitlib
	load.32     %r21071 <- 0[i]
	scast.64    %r21072 <- (32) %r21071
	muls.64     %r21073 <- %r21072, $16
	add.64*     %r21074 <- %r21070, %r21073
	store.64*   %r21069 -> 0[%r21074]
	symaddr.64* %r21075 <- tohex
	symaddr.64* %r21076 <- bitlib
	load.32     %r21077 <- 0[i]
	scast.64    %r21078 <- (32) %r21077
	muls.64     %r21079 <- %r21078, $16
	add.64*     %r21080 <- %r21076, %r21079
	store.64*   %r21075 -> 8[%r21080]
	load.32     %r21081 <- 0[i]
	add.32      %r21082 <- %r21081, $1
	store.32    %r21082 -> 0[i]
	symaddr.64* %r21083 <- bitlib
	load.32     %r21084 <- 0[i]
	scast.64    %r21085 <- (32) %r21084
	muls.64     %r21086 <- %r21085, $16
	add.64*     %r21087 <- %r21083, %r21086
	store.64*   $0 -> 0[%r21087]
	symaddr.64* %r21088 <- bitlib
	load.32     %r21089 <- 0[i]
	scast.64    %r21090 <- (32) %r21089
	muls.64     %r21091 <- %r21090, $16
	add.64*     %r21092 <- %r21088, %r21091
	store.64*   $0 -> 8[%r21092]
	br          .L4277

.L4277:
	ret


main:
.L4278:
	<entry-point>
	store.32    %arg1 -> 0[argc]
	store.64*   %arg2 -> 0[argv]
	call        init_globals
	call.64*    %r21093 <- luaL_newstate
	store.64*   %r21093 -> 0[L]
	load.64*    %r21094 <- 0[L]
	push.64*    %r21094
	call        luaL_openlibs
	load.64*    %r21095 <- 0[L]
	symaddr.64* %r21096 <- <anon symbol:0x276d548>
	symaddr.64* %r21097 <- bitlib
	push.64*    %r21095
	push.64*    %r21096
	push.64*    %r21097
	call        luaL_register
	load.32     %r21098 <- 0[argc]
	setlt.32    %r21099 <- %r21098, $2
	cbr         %r21099, .L4279, .L4280

.L4279:
	phisrc.32   %phi858(return) <- $8
	br          .L4281

.L4280:
	load.64*    %r21101 <- 0[L]
	push.64*    %r21101
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r21102 <- 0[L]
	load.64*    %r21103 <- 0[argv]
	load.64*    %r21104 <- 8[%r21103]
	push.64*    %r21102
	push.64*    %r21104
	call        lua_pushstring
	load.64*    %r21105 <- 0[L]
	push.64*    %r21105
	push.32     $0xfffffffe
	push.32     $0
	call        lua_rawseti
	load.64*    %r21106 <- 0[L]
	symaddr.64* %r21107 <- <anon symbol:0x2775bf8>
	push.64*    %r21106
	push.32     $0xffffd8ee
	push.64*    %r21107
	call        lua_setfield
	load.64*    %r21108 <- 0[L]
	load.64*    %r21109 <- 0[argv]
	load.64*    %r21110 <- 8[%r21109]
	push.64*    %r21108
	push.64*    %r21110
	call.32     %r21111 <- luaL_loadfile
	cbr         %r21111, .L4282, .L4283

.L4282:
	br          .L4284

.L4283:
	store.32    $2 -> 0[i]
	br          .L4288

.L4288:
	load.32     %r21112 <- 0[i]
	load.32     %r21113 <- 0[argc]
	setlt.32    %r21114 <- %r21112, %r21113
	cbr         %r21114, .L4285, .L4287

.L4285:
	load.64*    %r21115 <- 0[L]
	load.64*    %r21116 <- 0[argv]
	load.32     %r21117 <- 0[i]
	scast.64    %r21118 <- (32) %r21117
	muls.64     %r21119 <- %r21118, $8
	add.64*     %r21120 <- %r21116, %r21119
	load.64*    %r21121 <- 0[%r21120]
	push.64*    %r21115
	push.64*    %r21121
	call        lua_pushstring
	br          .L4286

.L4286:
	load.32     %r21122 <- 0[i]
	add.32      %r21123 <- %r21122, $1
	store.32    %r21123 -> 0[i]
	br          .L4288

.L4287:
	load.64*    %r21124 <- 0[L]
	load.32     %r21125 <- 0[argc]
	sub.32      %r21126 <- %r21125, $2
	push.64*    %r21124
	push.32     %r21126
	push.32     $0
	push.32     $0
	call.32     %r21127 <- lua_pcall
	cbr         %r21127, .L4289, .L4290

.L4289:
	br          .L4284

.L4284:
	load.64*    %r21128 <- 0[stderr]
	symaddr.64* %r21129 <- <anon symbol:0x2776168>
	load.64*    %r21130 <- 0[L]
	push.64*    %r21130
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r21131 <- lua_tolstring
	push.64*    %r21128
	push.64*    %r21129
	push.64*    %r21131
	call.32     %r21132 <- fprintf
	phisrc.32   %phi859(return) <- $1
	br          .L4281

.L4290:
	load.64*    %r21133 <- 0[L]
	push.64*    %r21133
	call        lua_close
	phisrc.32   %phi860(return) <- $0
	br          .L4281

.L4281:
	phi.32      %r21100 <- %phi858(return), %phi859(return), %phi860(return)
	ret.32      %r21100


