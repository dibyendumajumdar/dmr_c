swap:
.L0:
	<entry-point>
	symaddr.64* %r1 <- array
	scast.64    %r3 <- (32) %arg1
	muls.64     %r4 <- %r3, $4
	add.64*     %r5 <- %r1, %r4
	load.32     %r6 <- 0[%r5]
	scast.64    %r9 <- (32) %arg2
	muls.64     %r10 <- %r9, $4
	add.64*     %r11 <- %r1, %r10
	load.32     %r12 <- 0[%r11]
	store.32    %r12 -> 0[%r5]
	store.32    %r6 -> 0[%r11]
	ret


partition:
.L2:
	<entry-point>
	symaddr.64* %r25 <- array
	scast.64    %r27 <- (32) %arg1
	muls.64     %r28 <- %r27, $4
	add.64*     %r29 <- %r25, %r28
	load.32     %r30 <- 0[%r29]
	push.32     %arg1
	push.32     %arg2
	call        swap
	phisrc.32   %phi2(index) <- %arg1
	phisrc.32   %phi4(index) <- %arg1
	phisrc.32   %phi10(i) <- %arg1
	br          .L6

.L6:
	phi.32      %r35(i) <- %phi10(i), %phi11(i)
	setlt.32    %r37 <- %r35(i), %arg2
	br          %r37, .L3, .L5

.L3:
	scast.64    %r40 <- (32) %r35(i)
	muls.64     %r41 <- %r40, $4
	add.64*     %r42 <- %r25, %r41
	load.32     %r43 <- 0[%r42]
	setlt.32    %r45 <- %r43, %r30
	br          %r45, .L7, .L4

.L7:
	push.32     %r35(i)
	phi.32      %r47 <- %phi4(index), %phi5(index)
	push.32     %r47
	call        swap
	add.32      %r50 <- %r47, $1
	phisrc.32   %phi3(index) <- %r50
	phisrc.32   %phi5(index) <- %r50
	br          .L4

.L4:
	add.32      %r53 <- %r35(i), $1
	phisrc.32   %phi11(i) <- %r53
	br          .L6

.L5:
	push.32     %arg2
	phi.32      %r55 <- %phi2(index), %phi3(index)
	push.32     %r55
	call        swap
	ret.32      %r55


quicksort:
.L10:
	<entry-point>
	setge.32    %r60 <- %arg1, %arg2
	br          %r60, .L13, .L12

.L12:
	push.32     %arg1
	push.32     %arg2
	call.32     %r63 <- partition
	push.32     %arg1
	add.32      %r66 <- %r63, $-1
	push.32     %r66
	call        quicksort
	add.32      %r68 <- %r63, $1
	push.32     %r68
	push.32     %arg2
	call        quicksort
	br          .L13

.L13:
	ret


main:
.L14:
	<entry-point>
	store.32    $62 -> 0[array]
	store.32    $83 -> 4[array]
	store.32    $4 -> 8[array]
	store.32    $89 -> 12[array]
	store.32    $36 -> 16[array]
	store.32    $21 -> 20[array]
	store.32    $74 -> 24[array]
	store.32    $37 -> 28[array]
	store.32    $65 -> 32[array]
	store.32    $33 -> 36[array]
	store.32    $96 -> 40[array]
	store.32    $38 -> 44[array]
	store.32    $53 -> 48[array]
	store.32    $16 -> 52[array]
	store.32    $74 -> 56[array]
	store.32    $55 -> 60[array]
	phisrc.32   %phi19(i) <- $0
	br          .L18

.L18:
	phi.32      %r70(i) <- %phi19(i), %phi20(i)
	setlt.32    %r71 <- %r70(i), $16
	br          %r71, .L15, .L17

.L15:
	symaddr.64* %r72 <- <anon symbol:0000018FF0288D78>
	push.64*    %r72
	symaddr.64* %r73 <- array
	scast.64    %r75 <- (32) %r70(i)
	muls.64     %r76 <- %r75, $4
	add.64*     %r77 <- %r73, %r76
	load.32     %r78 <- 0[%r77]
	push.32     %r78
	call.32     %r79 <- printf
	add.32      %r81 <- %r70(i), $1
	phisrc.32   %phi20(i) <- %r81
	br          .L18

.L17:
	symaddr.64* %r82 <- <anon symbol:0000018FF0289398>
	push.64*    %r82
	call.32     %r83 <- printf
	push.32     $0
	push.32     $15
	call        quicksort
	phisrc.32   %phi15(i) <- $0
	br          .L22

.L22:
	phi.32      %r84(i) <- %phi15(i), %phi16(i)
	setlt.32    %r85 <- %r84(i), $16
	br          %r85, .L19, .L21

.L19:
	symaddr.64* %r86 <- <anon symbol:0000018FF0289718>
	push.64*    %r86
	symaddr.64* %r87 <- array
	scast.64    %r89 <- (32) %r84(i)
	muls.64     %r90 <- %r89, $4
	add.64*     %r91 <- %r87, %r90
	load.32     %r92 <- 0[%r91]
	push.32     %r92
	call.32     %r93 <- printf
	add.32      %r95 <- %r84(i), $1
	phisrc.32   %phi16(i) <- %r95
	br          .L22

.L21:
	symaddr.64* %r96 <- <anon symbol:0000018FF0289D38>
	push.64*    %r96
	call.32     %r97 <- printf
	ret.32      $0


