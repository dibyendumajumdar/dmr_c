; ModuleID = 'sparse'
source_filename = "sparse"

%struct.lua_TValue = type { { [8 x i8] }, i32 }
%struct.Node = type { %struct.lua_TValue, { [24 x i8] } }
%struct.anno = type { i8, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.luaL_Reg = type { i8*, i32 (%struct.lua_State*)* }
%struct.lua_State = type { { [184 x i8] }*, i8, i8, i8, %struct.lua_TValue*, %struct.lua_TValue*, %struct.global_State*, %struct.CallInfo*, i32*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.CallInfo*, %struct.CallInfo*, i32, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State*, %struct.lua_Debug*)*, %struct.lua_TValue, %struct.lua_TValue, { [184 x i8] }*, { [184 x i8] }*, %struct.lua_longjmp*, i64 }
%struct.global_State = type { %struct.stringtable, i8* (i8*, i8*, i64, i64)*, i8*, i8, i8, i32, { [184 x i8] }*, { [184 x i8] }**, { [184 x i8] }*, { [184 x i8] }*, { [184 x i8] }*, { [184 x i8] }*, %struct.Mbuffer, i64, i64, i64, i64, i32, i32, i32 (%struct.lua_State*)*, %struct.lua_TValue, %struct.lua_State*, %struct.UpVal, [9 x %struct.Table*], [17 x { [24 x i8] }*] }
%struct.stringtable = type { { [184 x i8] }**, i32, i32 }
%struct.Mbuffer = type { i8*, i64, i64 }
%struct.UpVal = type { { [184 x i8] }*, i8, i8, %struct.lua_TValue*, { [16 x i8] } }
%struct.Table = type { { [184 x i8] }*, i8, i8, i8, i8, %struct.Table*, %struct.lua_TValue*, %struct.Node*, %struct.Node*, { [184 x i8] }*, i32 }
%struct.CallInfo = type { %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*, i32*, i32, i32 }
%struct.lua_Debug = type { i32, i8*, i8*, i8*, i8*, i32, i32, i32, i32, [60 x i8], i32 }
%struct.lua_longjmp = type { %struct.lua_longjmp*, [1 x %struct.__jmp_buf_tag], i32 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.Proto = type { { [184 x i8] }*, i8, i8, %struct.lua_TValue*, i32*, %struct.Proto**, i32*, %struct.LocVar*, { [24 x i8] }**, { [24 x i8] }*, i32, i32, i32, i32, i32, i32, i32, i32, { [184 x i8] }*, i8, i8, i8, i8 }
%struct.LocVar = type { { [24 x i8] }*, i32, i32 }
%struct.SParser = type { %struct.Zio*, %struct.Mbuffer, i8* }
%struct.Zio = type { i64, i8*, i8* (%struct.lua_State*, i8*, i64*)*, i8*, %struct.lua_State* }
%struct.LG = type { %struct.lua_State, %struct.global_State }
%struct.LexState = type { i32, i32, i32, %struct.Token, %struct.Token, %struct.FuncState*, %struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, { [24 x i8] }*, i8 }
%struct.Token = type { i32, { [8 x i8] } }
%struct.FuncState = type { %struct.Proto*, %struct.Table*, %struct.FuncState*, %struct.LexState*, %struct.lua_State*, %struct.BlockCnt*, i32, i32, i32, i32, i32, i32, i16, i8, [60 x %struct.upvaldesc], [200 x i16] }
%struct.BlockCnt = type { %struct.BlockCnt*, i32, i8, i8, i8 }
%struct.upvaldesc = type { i8, i8 }
%struct.expdesc = type { i32, { [8 x i8] }, i32, i32 }
%struct.ConsControl = type { %struct.expdesc, %struct.expdesc*, i32, i32, i32 }
%struct.LHS_assign = type { %struct.LHS_assign*, %struct.expdesc }
%struct.CallS = type { %struct.lua_TValue*, i32 }
%struct.luaL_Buffer = type { i8*, i32, %struct.lua_State*, [8192 x i8] }
%struct.LoadF = type { i32, %struct._IO_FILE*, [8192 x i8] }
%struct.LoadS = type { i8*, i64 }
%struct.MatchState = type { i8*, i8*, %struct.lua_State*, i32, [32 x %struct.anno.0] }
%struct.anno.0 = type { i8*, i64 }

@_CRT_glob = private global i32 0, align 4
@luaO_nilobject_ = private global %struct.lua_TValue zeroinitializer, align 8
@.str = private constant [39 x i8] c"memory allocation error: block too big\00"
@luaO_nilobject_.3 = private global %struct.lua_TValue zeroinitializer, align 8
@log_2 = private global [256 x i8] zeroinitializer, align 1
@.str.4 = private constant [1 x i8] zeroinitializer
@.str.5 = private constant [7 x i8] c"(null)\00"
@.str.6 = private constant [3 x i8] c"%p\00"
@.str.7 = private constant [2 x i8] c"%\00"
@.str.8 = private constant [1 x i8] zeroinitializer
@.str.9 = private constant [4 x i8] c"...\00"
@.str.10 = private constant [3 x i8] c"\0A\0D\00"
@.str.11 = private constant [10 x i8] c"[string \22\00"
@.str.12 = private constant [4 x i8] c"...\00"
@.str.13 = private constant [3 x i8] c"\22]\00"
@luaT_typenames = private global [11 x i8*] zeroinitializer, align 8
@luaT_eventname = private global [17 x i8*] zeroinitializer, align 8
@luaP_opmodes = private global [38 x i8] zeroinitializer, align 1
@.str.14 = private constant [18 x i8] c"not enough memory\00"
@.str.15 = private constant [24 x i8] c"error in error handling\00"
@.str.19 = private constant [15 x i8] c"stack overflow\00"
@.str.20 = private constant [5 x i8] c"call\00"
@.str.22 = private constant [17 x i8] c"C stack overflow\00"
@dummynode_ = private global %struct.Node zeroinitializer, align 8
@.str.24 = private constant [22 x i8] c"invalid key to 'next'\00"
@.str.25 = private constant [15 x i8] c"table overflow\00"
@.str.28 = private constant [19 x i8] c"table index is nil\00"
@.str.34 = private constant [18 x i8] c"not enough memory\00"
@.str.36 = private constant [5 x i8] c"=[C]\00"
@.str.37 = private constant [2 x i8] c"C\00"
@.str.38 = private constant [5 x i8] c"main\00"
@.str.39 = private constant [4 x i8] c"Lua\00"
@.str.40 = private constant [1 x i8] zeroinitializer
@.str.41 = private constant [5 x i8] c"tail\00"
@.str.42 = private constant [13 x i8] c"=(tail call)\00"
@.str.43 = private constant [1 x i8] zeroinitializer
@.str.45 = private constant [35 x i8] c"attempt to %s %s '%s' (a %s value)\00"
@.str.46 = private constant [25 x i8] c"attempt to %s a %s value\00"
@.str.47 = private constant [12 x i8] c"concatenate\00"
@.str.48 = private constant [22 x i8] c"perform arithmetic on\00"
@.str.49 = private constant [33 x i8] c"attempt to compare two %s values\00"
@.str.50 = private constant [30 x i8] c"attempt to compare %s with %s\00"
@.str.51 = private constant [10 x i8] c"%s:%d: %s\00"
@luaP_opmodes.53 = private global [38 x i8] zeroinitializer, align 1
@luaX_tokens = private global [32 x i8*] zeroinitializer, align 8
@.str.54 = private constant [25 x i8] c"lexical element too long\00"
@.str.56 = private constant [9 x i8] c"char(%d)\00"
@.str.57 = private constant [3 x i8] c"%c\00"
@.str.59 = private constant [10 x i8] c"%s:%d: %s\00"
@.str.60 = private constant [13 x i8] c"%s near '%s'\00"
@.str.61 = private constant [25 x i8] c"chunk has too many lines\00"
@.str.62 = private constant [3 x i8] c"Ee\00"
@.str.63 = private constant [3 x i8] c"+-\00"
@.str.64 = private constant [17 x i8] c"malformed number\00"
@.str.65 = private constant [23 x i8] c"unfinished long string\00"
@.str.66 = private constant [24 x i8] c"unfinished long comment\00"
@.str.67 = private constant [18 x i8] c"unfinished string\00"
@.str.68 = private constant [18 x i8] c"unfinished string\00"
@.str.69 = private constant [26 x i8] c"escape sequence too large\00"
@.str.70 = private constant [30 x i8] c"invalid long string delimiter\00"
@.str.71 = private constant [2 x i8] c".\00"
@.str.72 = private constant [2 x i8] c".\00"
@.str.73 = private constant [27 x i8] c"control structure too long\00"
@.str.76 = private constant [35 x i8] c"function or expression too complex\00"
@.str.77 = private constant [24 x i8] c"constant table overflow\00"
@.str.78 = private constant [19 x i8] c"code size overflow\00"
@.str.79 = private constant [19 x i8] c"code size overflow\00"
@.str.82 = private constant [14 x i8] c"'%s' expected\00"
@.str.83 = private constant [34 x i8] c"main function has more than %d %s\00"
@.str.84 = private constant [40 x i8] c"function at line %d has more than %d %s\00"
@.str.85 = private constant [41 x i8] c"'%s' expected (to close '%s' at line %d)\00"
@.str.86 = private constant [25 x i8] c"too many local variables\00"
@.str.87 = private constant [16 x i8] c"local variables\00"
@.str.88 = private constant [9 x i8] c"upvalues\00"
@.str.89 = private constant [1 x i8] zeroinitializer
@.str.90 = private constant [33 x i8] c"chunk has too many syntax levels\00"
@.str.91 = private constant [24 x i8] c"constant table overflow\00"
@.str.93 = private constant [23 x i8] c"items in a constructor\00"
@.str.94 = private constant [23 x i8] c"items in a constructor\00"
@.str.95 = private constant [25 x i8] c"<name> or '...' expected\00"
@.str.96 = private constant [5 x i8] c"self\00"
@.str.97 = private constant [49 x i8] c"ambiguous syntax (function call x new statement)\00"
@.str.98 = private constant [28 x i8] c"function arguments expected\00"
@.str.99 = private constant [18 x i8] c"unexpected symbol\00"
@.str.100 = private constant [43 x i8] c"cannot use '...' outside a vararg function\00"
@priority = private global [15 x %struct.anno] zeroinitializer, align 1
@.str.102 = private constant [13 x i8] c"syntax error\00"
@.str.103 = private constant [24 x i8] c"variables in assignment\00"
@.str.104 = private constant [17 x i8] c"no loop to break\00"
@.str.105 = private constant [12 x i8] c"(for index)\00"
@.str.106 = private constant [12 x i8] c"(for limit)\00"
@.str.107 = private constant [11 x i8] c"(for step)\00"
@.str.108 = private constant [16 x i8] c"(for generator)\00"
@.str.109 = private constant [12 x i8] c"(for state)\00"
@.str.110 = private constant [14 x i8] c"(for control)\00"
@.str.111 = private constant [21 x i8] c"'=' or 'in' expected\00"
@.str.114 = private constant [6 x i8] c"%.14g\00"
@.str.115 = private constant [6 x i8] c"index\00"
@.str.116 = private constant [17 x i8] c"loop in gettable\00"
@.str.117 = private constant [6 x i8] c"index\00"
@.str.118 = private constant [17 x i8] c"loop in settable\00"
@.str.120 = private constant [23 x i8] c"string length overflow\00"
@.str.122 = private constant [14 x i8] c"get length of\00"
@.str.123 = private constant [37 x i8] c"'for' initial value must be a number\00"
@.str.124 = private constant [29 x i8] c"'for' limit must be a number\00"
@.str.125 = private constant [28 x i8] c"'for' step must be a number\00"
@.str.126 = private constant [23 x i8] c"no calling environment\00"
@.str.127 = private constant [9 x i8] c"no value\00"
@.str.128 = private constant [2 x i8] c"?\00"
@.str.129 = private constant [1 x i8] zeroinitializer
@.str.130 = private constant [22 x i8] c"bad argument #%d (%s)\00"
@.str.131 = private constant [2 x i8] c"n\00"
@.str.132 = private constant [7 x i8] c"method\00"
@.str.133 = private constant [30 x i8] c"calling '%s' on bad self (%s)\00"
@.str.134 = private constant [2 x i8] c"?\00"
@.str.135 = private constant [30 x i8] c"bad argument #%d to '%s' (%s)\00"
@.str.136 = private constant [20 x i8] c"%s expected, got %s\00"
@.str.137 = private constant [3 x i8] c"Sl\00"
@.str.138 = private constant [8 x i8] c"%s:%d: \00"
@.str.139 = private constant [1 x i8] zeroinitializer
@.str.141 = private constant [20 x i8] c"stack overflow (%s)\00"
@.str.142 = private constant [15 x i8] c"value expected\00"
@.str.144 = private constant [8 x i8] c"_LOADED\00"
@.str.145 = private constant [30 x i8] c"name conflict for module '%s'\00"
@.str.147 = private constant [2 x i8] c"\0A\00"
@.str.148 = private constant [17 x i8] c"cannot %s %s: %s\00"
@.str.149 = private constant [7 x i8] c"=stdin\00"
@stdin = external global %struct._IO_FILE*
@.str.150 = private constant [4 x i8] c"@%s\00"
@.str.151 = private constant [2 x i8] c"r\00"
@.str.152 = private constant [5 x i8] c"open\00"
@.str.153 = private constant [5 x i8] c"\1BLua\00"
@.str.154 = private constant [3 x i8] c"rb\00"
@.str.155 = private constant [7 x i8] c"reopen\00"
@.str.156 = private constant [5 x i8] c"\1BLua\00"
@.str.157 = private constant [5 x i8] c"read\00"
@stderr = external global %struct._IO_FILE*
@.str.158 = private constant [50 x i8] c"PANIC: unprotected error in call to Lua API (%s)\0A\00"
@.str.159 = private constant [18 x i8] c"base out of range\00"
@.str.160 = private constant [22 x i8] c"nil or table expected\00"
@.str.161 = private constant [12 x i8] c"__metatable\00"
@.str.162 = private constant [36 x i8] c"cannot change a protected metatable\00"
@.str.163 = private constant [27 x i8] c"level must be non-negative\00"
@.str.164 = private constant [14 x i8] c"invalid level\00"
@.str.165 = private constant [2 x i8] c"f\00"
@.str.166 = private constant [50 x i8] c"no function environment for tail call at level %d\00"
@.str.167 = private constant [52 x i8] c"'setfenv' cannot change environment of given object\00"
@.str.168 = private constant [3 x i8] c"%s\00"
@.str.169 = private constant [18 x i8] c"assertion failed!\00"
@.str.170 = private constant [27 x i8] c"too many results to unpack\00"
@.str.171 = private constant [26 x i8] c"boolean or proxy expected\00"
@base_funcs = private global [13 x %struct.luaL_Reg] zeroinitializer, align 8
@.str.172 = private constant [3 x i8] c"_G\00"
@.str.173 = private constant [3 x i8] c"_G\00"
@.str.174 = private constant [8 x i8] c"Lua 5.1\00"
@.str.175 = private constant [9 x i8] c"_VERSION\00"
@.str.176 = private constant [7 x i8] c"ipairs\00"
@.str.177 = private constant [6 x i8] c"pairs\00"
@.str.178 = private constant [3 x i8] c"kv\00"
@.str.179 = private constant [7 x i8] c"__mode\00"
@.str.180 = private constant [9 x i8] c"newproxy\00"
@.str.181 = private constant [38 x i8] c"wrong number of arguments to 'insert'\00"
@.str.182 = private constant [53 x i8] c"invalid value (%s) at index %d in table for 'concat'\00"
@.str.183 = private constant [1 x i8] zeroinitializer
@.str.184 = private constant [35 x i8] c"invalid order function for sorting\00"
@.str.185 = private constant [35 x i8] c"invalid order function for sorting\00"
@.str.186 = private constant [1 x i8] zeroinitializer
@tab_funcs = private global [5 x %struct.luaL_Reg] zeroinitializer, align 8
@.str.187 = private constant [6 x i8] c"table\00"
@fnames = private global [2 x i8*] zeroinitializer, align 8
@.str.188 = private constant [7 x i8] c"%s: %s\00"
@.str.189 = private constant [3 x i8] c"%s\00"
@.str.190 = private constant [7 x i8] c"%s: %s\00"
@.str.191 = private constant [6 x i8] c"FILE*\00"
@.str.192 = private constant [12 x i8] c"closed file\00"
@.str.193 = private constant [5 x i8] c"file\00"
@.str.194 = private constant [6 x i8] c"FILE*\00"
@.str.195 = private constant [29 x i8] c"attempt to use a closed file\00"
@.str.196 = private constant [6 x i8] c"FILE*\00"
@.str.197 = private constant [27 x i8] c"cannot close standard file\00"
@.str.198 = private constant [6 x i8] c"FILE*\00"
@.str.199 = private constant [6 x i8] c"FILE*\00"
@.str.200 = private constant [8 x i8] c"__close\00"
@.str.201 = private constant [6 x i8] c"FILE*\00"
@.str.202 = private constant [2 x i8] c"r\00"
@.str.203 = private constant [27 x i8] c"standard %s file is closed\00"
@.str.204 = private constant [2 x i8] c"r\00"
@.str.205 = private constant [2 x i8] c"w\00"
@.str.206 = private constant [2 x i8] c"r\00"
@.str.207 = private constant [4 x i8] c"%lf\00"
@.str.208 = private constant [19 x i8] c"too many arguments\00"
@.str.209 = private constant [15 x i8] c"invalid option\00"
@.str.210 = private constant [15 x i8] c"invalid format\00"
@.str.212 = private constant [23 x i8] c"file is already closed\00"
@.str.213 = private constant [3 x i8] c"%s\00"
@.str.214 = private constant [6 x i8] c"%.14g\00"
@iolib = private global [10 x %struct.luaL_Reg] zeroinitializer, align 8
@flib = private global [7 x %struct.luaL_Reg] zeroinitializer, align 8
@.str.215 = private constant [6 x i8] c"FILE*\00"
@.str.216 = private constant [8 x i8] c"__index\00"
@.str.217 = private constant [8 x i8] c"__close\00"
@.str.218 = private constant [3 x i8] c"io\00"
@.str.219 = private constant [6 x i8] c"stdin\00"
@stdout = external global %struct._IO_FILE*
@.str.220 = private constant [7 x i8] c"stdout\00"
@.str.221 = private constant [7 x i8] c"stderr\00"
@.str.222 = private constant [6 x i8] c"popen\00"
@.str.223 = private constant [7 x i8] c"%s: %s\00"
@syslib = private global [3 x %struct.luaL_Reg] zeroinitializer, align 8
@.str.224 = private constant [3 x i8] c"os\00"
@.str.225 = private constant [1 x i8] zeroinitializer
@.str.226 = private constant [22 x i8] c"string slice too long\00"
@.str.227 = private constant [22 x i8] c"string slice too long\00"
@.str.228 = private constant [14 x i8] c"invalid value\00"
@.str.229 = private constant [22 x i8] c"invalid capture index\00"
@.str.230 = private constant [24 x i8] c"invalid pattern capture\00"
@.str.231 = private constant [35 x i8] c"malformed pattern (ends with '%%')\00"
@.str.232 = private constant [32 x i8] c"malformed pattern (missing ']')\00"
@.str.233 = private constant [19 x i8] c"unbalanced pattern\00"
@.str.234 = private constant [18 x i8] c"too many captures\00"
@.str.236 = private constant [35 x i8] c"missing '[' after '%%f' in pattern\00"
@.str.237 = private constant [22 x i8] c"invalid capture index\00"
@.str.238 = private constant [19 x i8] c"unfinished capture\00"
@.str.239 = private constant [18 x i8] c"too many captures\00"
@.str.240 = private constant [11 x i8] c"^$*+?.([%-\00"
@.str.241 = private constant [33 x i8] c"invalid replacement value (a %s)\00"
@.str.242 = private constant [31 x i8] c"string/function/table expected\00"
@.str.243 = private constant [3 x i8] c"\5Cr\00"
@.str.244 = private constant [5 x i8] c"\5C000\00"
@.str.245 = private constant [6 x i8] c"-+ #0\00"
@.str.246 = private constant [32 x i8] c"invalid format (repeated flags)\00"
@.str.247 = private constant [45 x i8] c"invalid format (width or precision too long)\00"
@.str.248 = private constant [2 x i8] c"l\00"
@.str.249 = private constant [9 x i8] c"no value\00"
@.str.250 = private constant [34 x i8] c"invalid option '%%%c' to 'format'\00"
@strlib = private global [12 x %struct.luaL_Reg] zeroinitializer, align 8
@.str.251 = private constant [1 x i8] zeroinitializer
@.str.252 = private constant [8 x i8] c"__index\00"
@.str.253 = private constant [7 x i8] c"string\00"
@lualibs = private global [6 x %struct.luaL_Reg] zeroinitializer, align 8
@.str.254 = private constant [7 x i8] c"number\00"
@.str.255 = private constant [17 x i8] c"0123456789abcdef\00"
@.str.256 = private constant [17 x i8] c"0123456789ABCDEF\00"
@bitlib = private global [13 x %struct.luaL_Reg] zeroinitializer, align 8
@.str.257 = private constant [4 x i8] c"nil\00"
@.str.258 = private constant [8 x i8] c"boolean\00"
@.str.259 = private constant [9 x i8] c"userdata\00"
@.str.260 = private constant [7 x i8] c"number\00"
@.str.261 = private constant [7 x i8] c"string\00"
@.str.262 = private constant [6 x i8] c"table\00"
@.str.263 = private constant [9 x i8] c"function\00"
@.str.264 = private constant [9 x i8] c"userdata\00"
@.str.265 = private constant [7 x i8] c"thread\00"
@.str.266 = private constant [6 x i8] c"proto\00"
@.str.267 = private constant [6 x i8] c"upval\00"
@.str.268 = private constant [8 x i8] c"__index\00"
@.str.269 = private constant [11 x i8] c"__newindex\00"
@.str.270 = private constant [5 x i8] c"__gc\00"
@.str.271 = private constant [7 x i8] c"__mode\00"
@.str.272 = private constant [5 x i8] c"__eq\00"
@.str.273 = private constant [6 x i8] c"__add\00"
@.str.274 = private constant [6 x i8] c"__sub\00"
@.str.275 = private constant [6 x i8] c"__mul\00"
@.str.276 = private constant [6 x i8] c"__div\00"
@.str.277 = private constant [6 x i8] c"__mod\00"
@.str.278 = private constant [6 x i8] c"__pow\00"
@.str.279 = private constant [6 x i8] c"__unm\00"
@.str.280 = private constant [6 x i8] c"__len\00"
@.str.281 = private constant [5 x i8] c"__lt\00"
@.str.282 = private constant [5 x i8] c"__le\00"
@.str.283 = private constant [9 x i8] c"__concat\00"
@.str.284 = private constant [7 x i8] c"__call\00"
@.str.285 = private constant [4 x i8] c"and\00"
@.str.286 = private constant [6 x i8] c"break\00"
@.str.287 = private constant [3 x i8] c"do\00"
@.str.288 = private constant [5 x i8] c"else\00"
@.str.289 = private constant [7 x i8] c"elseif\00"
@.str.290 = private constant [4 x i8] c"end\00"
@.str.291 = private constant [6 x i8] c"false\00"
@.str.292 = private constant [4 x i8] c"for\00"
@.str.293 = private constant [9 x i8] c"function\00"
@.str.294 = private constant [3 x i8] c"if\00"
@.str.295 = private constant [3 x i8] c"in\00"
@.str.296 = private constant [6 x i8] c"local\00"
@.str.297 = private constant [4 x i8] c"nil\00"
@.str.298 = private constant [4 x i8] c"not\00"
@.str.299 = private constant [3 x i8] c"or\00"
@.str.300 = private constant [7 x i8] c"repeat\00"
@.str.301 = private constant [7 x i8] c"return\00"
@.str.302 = private constant [5 x i8] c"then\00"
@.str.303 = private constant [5 x i8] c"true\00"
@.str.304 = private constant [6 x i8] c"until\00"
@.str.305 = private constant [6 x i8] c"while\00"
@.str.306 = private constant [3 x i8] c"..\00"
@.str.307 = private constant [4 x i8] c"...\00"
@.str.308 = private constant [3 x i8] c"==\00"
@.str.309 = private constant [3 x i8] c">=\00"
@.str.310 = private constant [3 x i8] c"<=\00"
@.str.311 = private constant [3 x i8] c"~=\00"
@.str.312 = private constant [9 x i8] c"<number>\00"
@.str.313 = private constant [7 x i8] c"<name>\00"
@.str.314 = private constant [9 x i8] c"<string>\00"
@.str.315 = private constant [6 x i8] c"<eof>\00"
@.str.316 = private constant [7 x i8] c"assert\00"
@.str.317 = private constant [6 x i8] c"error\00"
@.str.318 = private constant [9 x i8] c"loadfile\00"
@.str.319 = private constant [11 x i8] c"loadstring\00"
@.str.320 = private constant [5 x i8] c"next\00"
@.str.321 = private constant [6 x i8] c"pcall\00"
@.str.322 = private constant [7 x i8] c"rawget\00"
@.str.323 = private constant [8 x i8] c"setfenv\00"
@.str.324 = private constant [13 x i8] c"setmetatable\00"
@.str.325 = private constant [9 x i8] c"tonumber\00"
@.str.326 = private constant [5 x i8] c"type\00"
@.str.327 = private constant [7 x i8] c"unpack\00"
@.str.328 = private constant [7 x i8] c"concat\00"
@.str.329 = private constant [7 x i8] c"insert\00"
@.str.330 = private constant [7 x i8] c"remove\00"
@.str.331 = private constant [5 x i8] c"sort\00"
@.str.332 = private constant [6 x i8] c"input\00"
@.str.333 = private constant [7 x i8] c"output\00"
@.str.334 = private constant [6 x i8] c"close\00"
@.str.335 = private constant [6 x i8] c"flush\00"
@.str.336 = private constant [6 x i8] c"input\00"
@.str.337 = private constant [6 x i8] c"lines\00"
@.str.338 = private constant [5 x i8] c"open\00"
@.str.339 = private constant [7 x i8] c"output\00"
@.str.340 = private constant [5 x i8] c"read\00"
@.str.341 = private constant [5 x i8] c"type\00"
@.str.342 = private constant [6 x i8] c"write\00"
@.str.343 = private constant [6 x i8] c"close\00"
@.str.344 = private constant [6 x i8] c"flush\00"
@.str.345 = private constant [6 x i8] c"lines\00"
@.str.346 = private constant [5 x i8] c"read\00"
@.str.347 = private constant [6 x i8] c"write\00"
@.str.348 = private constant [5 x i8] c"__gc\00"
@.str.349 = private constant [5 x i8] c"exit\00"
@.str.350 = private constant [7 x i8] c"remove\00"
@.str.351 = private constant [5 x i8] c"byte\00"
@.str.352 = private constant [5 x i8] c"char\00"
@.str.353 = private constant [5 x i8] c"find\00"
@.str.354 = private constant [7 x i8] c"format\00"
@.str.355 = private constant [7 x i8] c"gmatch\00"
@.str.356 = private constant [5 x i8] c"gsub\00"
@.str.357 = private constant [6 x i8] c"lower\00"
@.str.358 = private constant [6 x i8] c"match\00"
@.str.359 = private constant [4 x i8] c"rep\00"
@.str.360 = private constant [4 x i8] c"sub\00"
@.str.361 = private constant [6 x i8] c"upper\00"
@.str.362 = private constant [1 x i8] zeroinitializer
@.str.363 = private constant [6 x i8] c"table\00"
@.str.364 = private constant [3 x i8] c"io\00"
@.str.365 = private constant [3 x i8] c"os\00"
@.str.366 = private constant [7 x i8] c"string\00"
@.str.367 = private constant [6 x i8] c"tobit\00"
@.str.368 = private constant [5 x i8] c"bnot\00"
@.str.369 = private constant [5 x i8] c"band\00"
@.str.370 = private constant [4 x i8] c"bor\00"
@.str.371 = private constant [5 x i8] c"bxor\00"
@.str.372 = private constant [7 x i8] c"lshift\00"
@.str.373 = private constant [7 x i8] c"rshift\00"
@.str.374 = private constant [8 x i8] c"arshift\00"
@.str.375 = private constant [4 x i8] c"rol\00"
@.str.376 = private constant [4 x i8] c"ror\00"
@.str.377 = private constant [6 x i8] c"bswap\00"
@.str.378 = private constant [6 x i8] c"tohex\00"
@.str.379 = private constant [4 x i8] c"bit\00"
@.str.380 = private constant [4 x i8] c"arg\00"
@.str.381 = private constant [11 x i8] c"Error: %s\0A\00"

define internal i8* @luaM_growaux_(%struct.lua_State* %ARG1, i8* %ARG2, i32* %ARG3, i64 %ARG4, i32 %ARG5, i8* %ARG6) {
L0:
  %0 = alloca i32
  %1 = alloca i8*
  %2 = bitcast i32* %ARG3 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R4 = sdiv i32 %ARG5, 2
  %R5 = icmp sge i32 %load_target, %R4
  %R51 = zext i1 %R5 to i32
  %cond = icmp ne i32 %R51, 0
  br i1 %cond, label %L1, label %L4

L1:                                               ; preds = %L0
  %R9 = icmp sge i32 %load_target, %ARG5
  %R92 = zext i1 %R9 to i32
  %cond3 = icmp ne i32 %R92, 0
  br i1 %cond3, label %L2, label %L3

L2:                                               ; preds = %L1
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* %ARG6)
  br label %L3

L3:                                               ; preds = %L2, %L1
  store i32 %ARG5, i32* %0
  br label %L6

L4:                                               ; preds = %L0
  %R15 = mul i32 %load_target, 2
  %R17 = icmp slt i32 %R15, 4
  %R174 = zext i1 %R17 to i32
  store i32 %R15, i32* %0
  %cond5 = icmp ne i32 %R174, 0
  br i1 %cond5, label %L5, label %L6

L5:                                               ; preds = %L4
  store i32 4, i32* %0
  br label %L6

L6:                                               ; preds = %L5, %L4, %L3
  %5 = load i32, i32* %0
  %R19 = add i32 %5, 1
  %R20 = sext i32 %R19 to i64
  %R22 = udiv i64 -3, %ARG4
  %R23 = icmp ule i64 %R20, %R22
  %R236 = zext i1 %R23 to i32
  %cond7 = icmp ne i32 %R236, 0
  br i1 %cond7, label %L7, label %L8

L7:                                               ; preds = %L6
  %6 = bitcast i32* %ARG3 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i32*
  %load_target8 = load i32, i32* %8
  %R28 = sext i32 %load_target8 to i64
  %R30 = mul i64 %R28, %ARG4
  %R32 = sext i32 %5 to i64
  %R34 = mul i64 %R32, %ARG4
  %R35 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %ARG2, i64 %R30, i64 %R34)
  store i8* %R35, i8** %1
  br label %L9

L8:                                               ; preds = %L6
  %R37 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R37, i8** %1
  br label %L9

L9:                                               ; preds = %L8, %L7
  %9 = load i8*, i8** %1
  %10 = bitcast i32* %ARG3 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to i32*
  store i32 %5, i32* %12
  ret i8* %9
}

declare void @luaG_runerror(%struct.lua_State*, i8*, ...)

declare i8* @luaM_realloc_(%struct.lua_State*, i8*, i64, i64)

declare i8* @luaM_toobig(%struct.lua_State*)

define internal i8* @luaM_toobig.1(%struct.lua_State* %ARG1) {
L10:
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0))
  ret i8* null
}

define internal i8* @luaM_realloc_.2(%struct.lua_State* %ARG1, i8* %ARG2, i64 %ARG3, i64 %ARG4) {
L11:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i8**
  %5 = bitcast i8** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to i8**
  %load_target1 = load i8*, i8** %7
  %8 = bitcast %struct.global_State* %load_target to i8* (i8*, i8*, i64, i64)**
  %9 = bitcast i8* (i8*, i8*, i64, i64)** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to i8* (i8*, i8*, i64, i64)**
  %load_target2 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %11
  %12 = bitcast i8* (i8*, i8*, i64, i64)* %load_target2 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to i8* (i8*, i8*, i64, i64)*
  %load_target3 = load i8* (i8*, i8*, i64, i64), i8* (i8*, i8*, i64, i64)* %14
  %R57 = call i8 %load_target3(i8* %load_target1, i8* %ARG2, i64 %ARG3, i64 %ARG4)
  %R59 = icmp eq i8 %R57, i8* null
  %R594 = zext i1 %R59 to i32
  %R61 = icmp ugt i64 %ARG4, 0
  %R615 = zext i1 %R61 to i32
  %15 = icmp ne i32 %R594, 0
  %16 = icmp ne i32 %R615, 0
  %R62 = and i1 %15, %16
  %R626 = zext i1 %R62 to i32
  %cond = icmp ne i32 %R626, 0
  br i1 %cond, label %L12, label %L13

L12:                                              ; preds = %L11
  call void @luaD_throw(%struct.lua_State* %ARG1, i32 4)
  br label %L13

L13:                                              ; preds = %L12, %L11
  %17 = bitcast %struct.global_State* %load_target to i64*
  %18 = bitcast i64* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 120
  %20 = bitcast i8* %19 to i64*
  %load_target7 = load i64, i64* %20
  %R67 = sub i64 %load_target7, %ARG3
  %R69 = add i64 %R67, %ARG4
  %21 = bitcast %struct.global_State* %load_target to i64*
  %22 = bitcast i64* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 120
  %24 = bitcast i8* %23 to i64*
  store i64 %R69, i64* %24
  ret i8 %R57
}

declare void @luaD_throw(%struct.lua_State*, i32)

define internal i32 @luaO_int2fb(i32 %ARG1) {
L14:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  store i32 %ARG1, i32* %0
  store i32 0, i32* %2
  store i32 0, i32* %1
  br label %L15

L15:                                              ; preds = %L16, %L14
  %4 = load i32, i32* %0
  %R74 = icmp uge i32 %4, 16
  %R741 = zext i1 %R74 to i32
  %cond = icmp ne i32 %R741, 0
  br i1 %cond, label %L16, label %L17

L16:                                              ; preds = %L15
  %R76 = add i32 %4, 1
  %R77 = lshr i32 %R76, 1
  %5 = load i32, i32* %1
  %R79 = add i32 %5, 1
  store i32 %R77, i32* %0
  store i32 %R79, i32* %2
  store i32 %R79, i32* %1
  br label %L15

L17:                                              ; preds = %L15
  %R81 = icmp ult i32 %4, 8
  %R812 = zext i1 %R81 to i32
  %cond3 = icmp ne i32 %R812, 0
  br i1 %cond3, label %L18, label %L19

L18:                                              ; preds = %L17
  store i32 %4, i32* %3
  br label %L20

L19:                                              ; preds = %L17
  %6 = load i32, i32* %2
  %R86 = add i32 %6, 1
  %R87 = shl i32 %R86, 3
  %R90 = add i32 %4, -8
  %R91 = or i32 %R87, %R90
  store i32 %R91, i32* %3
  br label %L20

L20:                                              ; preds = %L19, %L18
  %7 = load i32, i32* %3
  ret i32 %7
}

define internal i32 @luaO_fb2int(i32 %ARG1) {
L21:
  %0 = alloca i32
  %R93 = ashr i32 %ARG1, 3
  %R94 = and i32 %R93, 31
  %cond = icmp ne i32 %R94, 0
  br i1 %cond, label %L23, label %L22

L22:                                              ; preds = %L21
  store i32 %ARG1, i32* %0
  br label %L24

L23:                                              ; preds = %L21
  %R100 = and i32 %ARG1, 7
  %R101 = add i32 %R100, 8
  %R103 = add i32 %R94, -1
  %R104 = shl i32 %R101, %R103
  store i32 %R104, i32* %0
  br label %L24

L24:                                              ; preds = %L23, %L22
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal i32 @luaO_log2(i32 %ARG1) {
L25:
  %0 = alloca i32
  %1 = alloca i32
  store i32 %ARG1, i32* %0
  store i32 -1, i32* %1
  br label %L26

L26:                                              ; preds = %L27, %L25
  %2 = load i32, i32* %0
  %R106 = icmp uge i32 %2, 256
  %R1061 = zext i1 %R106 to i32
  %3 = load i32, i32* %1
  %cond = icmp ne i32 %R1061, 0
  br i1 %cond, label %L27, label %L28

L27:                                              ; preds = %L26
  %R109 = add i32 %3, 8
  %R113 = lshr i32 %2, 8
  store i32 %R113, i32* %0
  store i32 %R109, i32* %1
  br label %L26

L28:                                              ; preds = %L26
  %R118 = zext i32 %2 to i64
  %4 = getelementptr inbounds i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i32 0), i64 %R118
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %load_target = load i8, i8* %5
  %R121 = zext i8 %load_target to i32
  %R122 = add i32 %3, %R121
  ret i32 %R122
}

define internal i32 @luaO_rawequalObj(%struct.lua_TValue* %ARG1, %struct.lua_TValue* %ARG2) {
L29:
  %0 = alloca i32
  %1 = bitcast %struct.lua_TValue* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %5 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R130 = icmp ne i32 %load_target, %load_target1
  %R1302 = zext i1 %R130 to i32
  %cond = icmp ne i32 %R1302, 0
  br i1 %cond, label %L30, label %L31

L30:                                              ; preds = %L29
  store i32 0, i32* %0
  br label %L37

L31:                                              ; preds = %L29
  switch i32 %load_target, label %L36 [
    i32 0, label %L32
    i32 1, label %L34
    i32 2, label %L35
    i32 3, label %L33
  ]

L32:                                              ; preds = %L31
  store i32 1, i32* %0
  br label %L37

L33:                                              ; preds = %L31
  %9 = bitcast %struct.lua_TValue* %ARG1 to double*
  %10 = bitcast double* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to double*
  %load_target3 = load double, double* %12
  %13 = bitcast %struct.lua_TValue* %ARG2 to double*
  %14 = bitcast double* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to double*
  %load_target4 = load double, double* %16
  %R140 = fcmp oeq double %load_target3, %load_target4
  %R1405 = zext i1 %R140 to i32
  store i32 %R1405, i32* %0
  br label %L37

L34:                                              ; preds = %L31
  %17 = bitcast %struct.lua_TValue* %ARG1 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i32*
  %load_target6 = load i32, i32* %20
  %21 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %22 = bitcast i32* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to i32*
  %load_target7 = load i32, i32* %24
  %R147 = icmp eq i32 %load_target6, %load_target7
  %R1478 = zext i1 %R147 to i32
  store i32 %R1478, i32* %0
  br label %L37

L35:                                              ; preds = %L31
  %25 = bitcast %struct.lua_TValue* %ARG1 to i8**
  %26 = bitcast i8** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = bitcast i8* %27 to i8**
  %load_target9 = load i8*, i8** %28
  %29 = bitcast %struct.lua_TValue* %ARG2 to i8**
  %30 = bitcast i8** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = bitcast i8* %31 to i8**
  %load_target10 = load i8*, i8** %32
  %R152 = icmp eq i8* %load_target9, %load_target10
  %R15211 = zext i1 %R152 to i32
  store i32 %R15211, i32* %0
  br label %L37

L36:                                              ; preds = %L31
  %33 = bitcast %struct.lua_TValue* %ARG1 to { [184 x i8] }**
  %34 = bitcast { [184 x i8] }** %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to { [184 x i8] }**
  %load_target12 = load { [184 x i8] }*, { [184 x i8] }** %36
  %37 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %38 = bitcast { [184 x i8] }** %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to { [184 x i8] }**
  %load_target13 = load { [184 x i8] }*, { [184 x i8] }** %40
  %R157 = icmp eq { [184 x i8] }* %load_target12, %load_target13
  %R15714 = zext i1 %R157 to i32
  store i32 %R15714, i32* %0
  br label %L37

L37:                                              ; preds = %L36, %L35, %L34, %L33, %L32, %L30
  %41 = load i32, i32* %0
  ret i32 %41
}

define internal i32 @luaO_str2d(i8* %ARG1, double* %ARG2) {
L38:
  %endptr_0x62d0007ba040 = alloca i8*
  %0 = alloca i32
  %R160 = call double @strtod(i8* %ARG1, i8** %endptr_0x62d0007ba040)
  %1 = bitcast double* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to double*
  store double %R160, double* %3
  %4 = bitcast i8** %endptr_0x62d0007ba040 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i8**
  %load_target = load i8*, i8** %6
  %R164 = icmp eq i8* %load_target, %ARG1
  %R1641 = zext i1 %R164 to i32
  %cond = icmp ne i32 %R1641, 0
  br i1 %cond, label %L39, label %L40

L39:                                              ; preds = %L38
  store i32 0, i32* %0
  br label %L50

L40:                                              ; preds = %L38
  %7 = getelementptr inbounds i8, i8* %load_target, i64 0
  %load_target2 = load i8, i8* %7
  %R168 = sext i8 %load_target2 to i32
  %R169 = icmp eq i32 %R168, 120
  %R1693 = zext i1 %R169 to i32
  %cond4 = icmp ne i32 %R1693, 0
  br i1 %cond4, label %L42, label %L41

L41:                                              ; preds = %L40
  %R172 = sext i8 %load_target2 to i32
  %R173 = icmp eq i32 %R172, 88
  %R1735 = zext i1 %R173 to i32
  %cond6 = icmp ne i32 %R1735, 0
  br i1 %cond6, label %L42, label %L43

L42:                                              ; preds = %L41, %L40
  %R176 = call i64 @strtoul(i8* %ARG1, i8** %endptr_0x62d0007ba040, i32 16)
  %R177 = sitofp i64 %R176 to double
  %8 = bitcast double* %ARG2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to double*
  store double %R177, double* %10
  br label %L43

L43:                                              ; preds = %L42, %L41
  %11 = bitcast i8** %endptr_0x62d0007ba040 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i8**
  %load_target7 = load i8*, i8** %13
  %14 = getelementptr inbounds i8, i8* %load_target7, i64 0
  %load_target8 = load i8, i8* %14
  %cond9 = icmp ne i8 %load_target8, 0
  br i1 %cond9, label %L45, label %L44

L44:                                              ; preds = %L43
  store i32 1, i32* %0
  br label %L50

L45:                                              ; preds = %L46, %L43
  %R183 = call i16** @__ctype_b_loc()
  %15 = bitcast i16** %R183 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i16**
  %load_target10 = load i16*, i16** %17
  %18 = bitcast i8** %endptr_0x62d0007ba040 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i8**
  %load_target11 = load i8*, i8** %20
  %21 = getelementptr inbounds i8, i8* %load_target11, i64 0
  %load_target12 = load i8, i8* %21
  %R188 = zext i8 %load_target12 to i32
  %R189 = sext i32 %R188 to i64
  %R190 = mul i64 %R189, 2
  %22 = bitcast i16* %load_target10 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %R190
  %24 = bitcast i8* %23 to i16*
  %25 = bitcast i16* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to i16*
  %load_target13 = load i16, i16* %27
  %R193 = zext i16 %load_target13 to i32
  %R194 = and i32 %R193, 8192
  %cond14 = icmp ne i32 %R194, 0
  br i1 %cond14, label %L46, label %L47

L46:                                              ; preds = %L45
  %28 = getelementptr inbounds i8, i8* %load_target11, inttoptr (i64 1 to i8*)
  %29 = bitcast i8** %endptr_0x62d0007ba040 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to i8**
  store i8* %28, i8** %31
  br label %L45

L47:                                              ; preds = %L45
  %cond15 = icmp ne i8 %load_target12, 0
  br i1 %cond15, label %L48, label %L49

L48:                                              ; preds = %L47
  store i32 0, i32* %0
  br label %L50

L49:                                              ; preds = %L47
  store i32 1, i32* %0
  br label %L50

L50:                                              ; preds = %L49, %L48, %L44, %L39
  %32 = load i32, i32* %0
  ret i32 %32
}

declare double @strtod(i8*, i8**)

declare i64 @strtoul(i8*, i8**, i32)

declare i16** @__ctype_b_loc()

define internal void @pushstr(%struct.lua_State* %ARG1, i8* %ARG2) {
L51:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %R206 = call i64 @strlen(i8* %ARG2)
  %R207 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %ARG2, i64 %R206)
  %R208 = bitcast { [24 x i8] }* %R207 to { [184 x i8] }*
  %4 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to { [184 x i8] }**
  store { [184 x i8] }* %R208, { [184 x i8] }** %7
  %8 = bitcast %struct.lua_TValue* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 4, i32* %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 56
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R213 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %19
  %R216 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %R217 = sub i8* %R213, %R216
  %R218 = icmp sle i8* %R217, i64 16
  %R2183 = zext i1 %R218 to i32
  %cond = icmp ne i32 %R2183, 0
  br i1 %cond, label %L52, label %L53

L52:                                              ; preds = %L51
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L53

L53:                                              ; preds = %L52, %L51
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %24 = bitcast %struct.lua_TValue* %load_target4 to i8*
  %25 = getelementptr inbounds i8, i8* %24, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %26 = bitcast i8* %25 to %struct.lua_TValue*
  %27 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %28 = bitcast %struct.lua_TValue** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to %struct.lua_TValue**
  store %struct.lua_TValue* %26, %struct.lua_TValue** %30
  ret void
}

declare i64 @strlen(i8*)

declare { [24 x i8] }* @luaS_newlstr(%struct.lua_State*, i8*, i64)

declare void @luaD_growstack(%struct.lua_State*, i32)

define internal i8* @luaO_pushvfstring(%struct.lua_State* %ARG1, i8* %ARG2, i8* %ARG3) {
L54:
  %buff_0x62d0007e0c50 = alloca [3 x i8]
  %buff_0x62d0007e0088 = alloca [40 x i8]
  %buff_0x62d0007dde18 = alloca [2 x i8]
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i8*
  %3 = alloca i32
  %4 = alloca i32
  call void @pushstr(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0))
  store i8* %ARG2, i8** %0
  store i8* %ARG3, i8** %1
  store i32 1, i32* %4
  store i32 1, i32* %3
  br label %L55

L55:                                              ; preds = %L72, %L54
  %5 = load i8*, i8** %0
  %R226 = call i8* @strchr(i8* %5, i32 37)
  %cond = icmp ne i8* %R226, null
  br i1 %cond, label %L56, label %L73

L56:                                              ; preds = %L55
  %6 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %7 = bitcast %struct.lua_TValue** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %9
  %R235 = sub i8* %R226, %5
  %R237 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %5, i8* %R235)
  %R238 = bitcast { [24 x i8] }* %R237 to { [184 x i8] }*
  %10 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %11 = bitcast { [184 x i8] }** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to { [184 x i8] }**
  store { [184 x i8] }* %R238, { [184 x i8] }** %13
  %14 = bitcast %struct.lua_TValue* %load_target to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 4, i32* %17
  %18 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %19 = bitcast %struct.lua_TValue** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 56
  %21 = bitcast i8* %20 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %21
  %R243 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %25
  %R246 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %R247 = sub i8* %R243, %R246
  %R248 = icmp sle i8* %R247, i64 16
  %R2483 = zext i1 %R248 to i32
  %cond4 = icmp ne i32 %R2483, 0
  br i1 %cond4, label %L57, label %L58

L57:                                              ; preds = %L56
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L58

L58:                                              ; preds = %L57, %L56
  %26 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %27 = bitcast %struct.lua_TValue** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 16
  %29 = bitcast i8* %28 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %29
  %30 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %31 = getelementptr inbounds i8, i8* %30, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %32 = bitcast i8* %31 to %struct.lua_TValue*
  %33 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %34 = bitcast %struct.lua_TValue** %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  %36 = bitcast i8* %35 to %struct.lua_TValue**
  store %struct.lua_TValue* %32, %struct.lua_TValue** %36
  %37 = getelementptr inbounds i8, i8* %R226, i64 1
  %load_target6 = load i8, i8* %37
  %38 = load i8*, i8** %1
  %R259 = ptrtoint i8* %38 to i64
  %R256 = bitcast i8* %38 to i8**
  %R260 = add i64 %R259, 8
  %R273 = add i64 %R259, 4
  %R261 = inttoptr i64 %R260 to i8*
  %R274 = inttoptr i64 %R273 to i8*
  switch i8 %load_target6, label %L71 [
    i32 37, label %L70
    i32 99, label %L62
    i32 100, label %L63
    i32 102, label %L66
    i32 112, label %L69
    i32 115, label %L59
  ]

L59:                                              ; preds = %L58
  %39 = bitcast i8** %R256 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = bitcast i8* %40 to i8**
  %load_target7 = load i8*, i8** %41
  store i8* %R261, i8** %1
  store i8* %load_target7, i8** %2
  %cond8 = icmp ne i8* %load_target7, null
  br i1 %cond8, label %L61, label %L60

L60:                                              ; preds = %L59
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %2
  br label %L61

L61:                                              ; preds = %L60, %L59
  %42 = load i8*, i8** %2
  call void @pushstr(%struct.lua_State* %ARG1, i8* %42)
  br label %L72

L62:                                              ; preds = %L58
  %43 = bitcast i8** %R256 to i32*
  %44 = bitcast i32* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to i32*
  %load_target9 = load i32, i32* %46
  %R276 = trunc i32 %load_target9 to i8
  %47 = bitcast [2 x i8]* %buff_0x62d0007dde18 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  store i8 %R276, i8* %48
  %49 = bitcast [2 x i8]* %buff_0x62d0007dde18 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  store i8 0, i8* %50
  %R278 = bitcast [2 x i8]* %buff_0x62d0007dde18 to i8*
  call void @pushstr(%struct.lua_State* %ARG1, i8* %R278)
  store i8* %R274, i8** %1
  br label %L72

L63:                                              ; preds = %L58
  %51 = bitcast i8** %R256 to i32*
  %52 = bitcast i32* %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 0
  %54 = bitcast i8* %53 to i32*
  %load_target10 = load i32, i32* %54
  %R289 = sitofp i32 %load_target10 to double
  %55 = bitcast %struct.lua_TValue* %load_target5 to double*
  %56 = bitcast double* %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to double*
  store double %R289, double* %58
  %59 = bitcast %struct.lua_TValue* %load_target5 to i32*
  %60 = bitcast i32* %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 24
  %62 = bitcast i8* %61 to i32*
  store i32 3, i32* %62
  %63 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %64 = bitcast %struct.lua_TValue** %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 56
  %66 = bitcast i8* %65 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %66
  %R294 = bitcast %struct.lua_TValue* %load_target11 to i8*
  %67 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %68 = bitcast %struct.lua_TValue** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast i8* %69 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %70
  %R297 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %R298 = sub i8* %R294, %R297
  %R299 = icmp sle i8* %R298, i64 16
  %R29913 = zext i1 %R299 to i32
  store i8* %R274, i8** %1
  %cond14 = icmp ne i32 %R29913, 0
  br i1 %cond14, label %L64, label %L65

L64:                                              ; preds = %L63
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L65

L65:                                              ; preds = %L64, %L63
  %71 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %72 = bitcast %struct.lua_TValue** %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 16
  %74 = bitcast i8* %73 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %74
  %75 = bitcast %struct.lua_TValue* %load_target15 to i8*
  %76 = getelementptr inbounds i8, i8* %75, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %77 = bitcast i8* %76 to %struct.lua_TValue*
  %78 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %79 = bitcast %struct.lua_TValue** %78 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 16
  %81 = bitcast i8* %80 to %struct.lua_TValue**
  store %struct.lua_TValue* %77, %struct.lua_TValue** %81
  br label %L72

L66:                                              ; preds = %L58
  %82 = bitcast i8** %R256 to double*
  %83 = bitcast double* %82 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 0
  %85 = bitcast i8* %84 to double*
  %load_target16 = load double, double* %85
  %86 = bitcast %struct.lua_TValue* %load_target5 to double*
  %87 = bitcast double* %86 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 16
  %89 = bitcast i8* %88 to double*
  store double %load_target16, double* %89
  %90 = bitcast %struct.lua_TValue* %load_target5 to i32*
  %91 = bitcast i32* %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 24
  %93 = bitcast i8* %92 to i32*
  store i32 3, i32* %93
  %94 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %95 = bitcast %struct.lua_TValue** %94 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 56
  %97 = bitcast i8* %96 to %struct.lua_TValue**
  %load_target17 = load %struct.lua_TValue*, %struct.lua_TValue** %97
  %R319 = bitcast %struct.lua_TValue* %load_target17 to i8*
  %98 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %99 = bitcast %struct.lua_TValue** %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 16
  %101 = bitcast i8* %100 to %struct.lua_TValue**
  %load_target18 = load %struct.lua_TValue*, %struct.lua_TValue** %101
  %R322 = bitcast %struct.lua_TValue* %load_target18 to i8*
  %R323 = sub i8* %R319, %R322
  %R324 = icmp sle i8* %R323, i64 16
  %R32419 = zext i1 %R324 to i32
  store i8* %R261, i8** %1
  %cond20 = icmp ne i32 %R32419, 0
  br i1 %cond20, label %L67, label %L68

L67:                                              ; preds = %L66
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L68

L68:                                              ; preds = %L67, %L66
  %102 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %103 = bitcast %struct.lua_TValue** %102 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 16
  %105 = bitcast i8* %104 to %struct.lua_TValue**
  %load_target21 = load %struct.lua_TValue*, %struct.lua_TValue** %105
  %106 = bitcast %struct.lua_TValue* %load_target21 to i8*
  %107 = getelementptr inbounds i8, i8* %106, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %108 = bitcast i8* %107 to %struct.lua_TValue*
  %109 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %110 = bitcast %struct.lua_TValue** %109 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 16
  %112 = bitcast i8* %111 to %struct.lua_TValue**
  store %struct.lua_TValue* %108, %struct.lua_TValue** %112
  br label %L72

L69:                                              ; preds = %L58
  %R329 = bitcast [40 x i8]* %buff_0x62d0007e0088 to i8*
  %113 = bitcast i8** %R256 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 0
  %115 = bitcast i8* %114 to i8**
  %load_target22 = load i8*, i8** %115
  %R339 = call i32 (i8*, i8*, ...) @sprintf(i8* %R329, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %load_target22)
  call void @pushstr(%struct.lua_State* %ARG1, i8* %R329)
  store i8* %R261, i8** %1
  br label %L72

L70:                                              ; preds = %L58
  call void @pushstr(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  br label %L72

L71:                                              ; preds = %L58
  %116 = bitcast [3 x i8]* %buff_0x62d0007e0c50 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 0
  store i8 37, i8* %117
  %118 = bitcast [3 x i8]* %buff_0x62d0007e0c50 to i8*
  %119 = getelementptr inbounds i8, i8* %118, i64 1
  store i8 %load_target6, i8* %119
  %120 = bitcast [3 x i8]* %buff_0x62d0007e0c50 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 2
  store i8 0, i8* %121
  %R348 = bitcast [3 x i8]* %buff_0x62d0007e0c50 to i8*
  call void @pushstr(%struct.lua_State* %ARG1, i8* %R348)
  br label %L72

L72:                                              ; preds = %L71, %L70, %L69, %L68, %L65, %L62, %L61
  %122 = load i32, i32* %3
  %R351 = add i32 %122, 2
  %123 = getelementptr inbounds i8, i8* %R226, i64 2
  store i8* %123, i8** %0
  store i32 %R351, i32* %4
  store i32 %R351, i32* %3
  br label %L55

L73:                                              ; preds = %L55
  call void @pushstr(%struct.lua_State* %ARG1, i8* %5)
  %124 = load i32, i32* %4
  %R359 = add i32 %124, 1
  %125 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %126 = bitcast %struct.lua_TValue** %125 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 16
  %128 = bitcast i8* %127 to %struct.lua_TValue**
  %load_target23 = load %struct.lua_TValue*, %struct.lua_TValue** %128
  %129 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %130 = bitcast %struct.lua_TValue** %129 to i8*
  %131 = getelementptr inbounds i8, i8* %130, i64 24
  %132 = bitcast i8* %131 to %struct.lua_TValue**
  %load_target24 = load %struct.lua_TValue*, %struct.lua_TValue** %132
  %R364 = sub %struct.lua_TValue* %load_target23, %load_target24
  %R365 = sdiv %struct.lua_TValue* %R364, i64 16
  %R366 = ptrtoint %struct.lua_TValue* %R365 to i32
  %R367 = add i32 %R366, -1
  call void @luaV_concat(%struct.lua_State* %ARG1, i32 %R359, i32 %R367)
  %R369 = sext i32 %124 to i64
  %R370 = mul i64 %R369, 16
  %133 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %134 = bitcast %struct.lua_TValue** %133 to i8*
  %135 = getelementptr inbounds i8, i8* %134, i64 16
  %136 = bitcast i8* %135 to %struct.lua_TValue**
  %load_target25 = load %struct.lua_TValue*, %struct.lua_TValue** %136
  %R373 = ptrtoint %struct.lua_TValue* %load_target25 to i64
  %R374 = sub i64 %R373, %R370
  %R375 = inttoptr i64 %R374 to %struct.lua_TValue*
  %137 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %138 = bitcast %struct.lua_TValue** %137 to i8*
  %139 = getelementptr inbounds i8, i8* %138, i64 16
  %140 = bitcast i8* %139 to %struct.lua_TValue**
  store %struct.lua_TValue* %R375, %struct.lua_TValue** %140
  %141 = bitcast %struct.lua_TValue* %R375 to { [184 x i8] }**
  %142 = bitcast { [184 x i8] }** %141 to i8*
  %143 = getelementptr inbounds i8, i8* %142, i64 -16
  %144 = bitcast i8* %143 to { [184 x i8] }**
  %load_target26 = load { [184 x i8] }*, { [184 x i8] }** %144
  %145 = bitcast { [184 x i8] }* %load_target26 to i8*
  %146 = getelementptr inbounds i8, i8* %145, i64 24
  %147 = bitcast i8* %146 to { [184 x i8] }*
  %R382 = bitcast { [184 x i8] }* %147 to i8*
  ret i8* %R382
}

declare i8* @strchr(i8*, i32)

declare i32 @sprintf(i8*, i8*, ...)

declare void @luaV_concat(%struct.lua_State*, i32, i32)

define internal i8* @luaO_pushfstring(%struct.lua_State* %ARG1, i8* %ARG2) {
L74:
  %fmt_0x62d0007e1560 = alloca i8*
  %0 = bitcast i8** %fmt_0x62d0007e1560 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i8**
  store i8* %ARG2, i8** %2
  %R385 = bitcast i8** %fmt_0x62d0007e1560 to i8*
  %R389 = call i8* @luaO_pushvfstring(%struct.lua_State* %ARG1, i8* %ARG2, i8* %R385)
  ret i8* %R389
}

define internal void @luaO_chunkid(i8* %ARG1, i8* %ARG2, i64 %ARG3) {
L75:
  %0 = alloca i8*
  %1 = getelementptr inbounds i8, i8* %ARG2, i64 0
  %load_target = load i8, i8* %1
  %R394 = sext i8 %load_target to i32
  %R395 = icmp eq i32 %R394, 61
  %R3951 = zext i1 %R395 to i32
  %cond = icmp ne i32 %R3951, 0
  br i1 %cond, label %L76, label %L77

L76:                                              ; preds = %L75
  %2 = getelementptr inbounds i8, i8* %ARG2, i64 1
  %R400 = call i8* @strncpy(i8* %ARG1, i8* %2, i64 %ARG3)
  %R403 = add i64 %ARG3, -1
  %3 = getelementptr inbounds i8, i8* %ARG1, i64 %R403
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  store i8 0, i8* %4
  br label %L85

L77:                                              ; preds = %L75
  %R407 = sext i8 %load_target to i32
  %R408 = icmp eq i32 %R407, 64
  %R4082 = zext i1 %R408 to i32
  %cond3 = icmp ne i32 %R4082, 0
  br i1 %cond3, label %L78, label %L81

L78:                                              ; preds = %L77
  %5 = getelementptr inbounds i8, i8* %ARG2, inttoptr (i64 1 to i8*)
  %R413 = add i64 %ARG3, -8
  %R416 = call i64 @strlen(i8* %5)
  %R419 = call i8* @strcpy(i8* %ARG1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0))
  %R422 = icmp ugt i64 %R416, %R413
  %R4224 = zext i1 %R422 to i32
  store i8* %5, i8** %0
  %cond5 = icmp ne i32 %R4224, 0
  br i1 %cond5, label %L79, label %L80

L79:                                              ; preds = %L78
  %R425 = sub i64 %R416, %R413
  %R427 = ptrtoint i8* %5 to i64
  %R428 = add i64 %R427, %R425
  %R429 = inttoptr i64 %R428 to i8*
  %R432 = call i8* @strcat(i8* %ARG1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0))
  store i8* %R429, i8** %0
  br label %L80

L80:                                              ; preds = %L79, %L78
  %6 = load i8*, i8** %0
  %R435 = call i8* @strcat(i8* %ARG1, i8* %6)
  br label %L85

L81:                                              ; preds = %L77
  %R438 = call i64 @strcspn(i8* %ARG2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0))
  %R441 = add i64 %ARG3, -17
  %R445 = icmp ugt i64 %R438, %R441
  %R4456 = zext i1 %R445 to i32
  %cond7 = icmp ne i32 %R4456, 0
  %select = select i1 %cond7, i64 %R441, i64 %R438
  %R449 = call i8* @strcpy(i8* %ARG1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0))
  %7 = getelementptr inbounds i8, i8* %ARG2, i64 %select
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %load_target8 = load i8, i8* %8
  %cond9 = icmp ne i8 %load_target8, 0
  br i1 %cond9, label %L82, label %L83

L82:                                              ; preds = %L81
  %R459 = call i8* @strncat(i8* %ARG1, i8* %ARG2, i64 %select)
  %R462 = call i8* @strcat(i8* %ARG1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0))
  br label %L84

L83:                                              ; preds = %L81
  %R465 = call i8* @strcat(i8* %ARG1, i8* %ARG2)
  br label %L84

L84:                                              ; preds = %L83, %L82
  %R468 = call i8* @strcat(i8* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0))
  br label %L85

L85:                                              ; preds = %L84, %L80, %L76
  ret void
}

declare i8* @strncpy(i8*, i8*, i64)

declare i8* @strcpy(i8*, i8*)

declare i8* @strcat(i8*, i8*)

declare i64 @strcspn(i8*, i8*)

declare i8* @strncat(i8*, i8*, i64)

define internal void @luaT_init(%struct.lua_State* %ARG1) {
L86:
  %0 = alloca i32
  store i32 0, i32* %0
  br label %L87

L87:                                              ; preds = %L88, %L86
  %1 = load i32, i32* %0
  %R470 = icmp slt i32 %1, 17
  %R4701 = zext i1 %R470 to i32
  %cond = icmp ne i32 %R4701, 0
  br i1 %cond, label %L88, label %L89

L88:                                              ; preds = %L87
  %R474 = sext i32 %1 to i64
  %R475 = mul i64 %R474, 8
  %2 = getelementptr inbounds i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 %R475
  %3 = bitcast i8* %2 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i8**
  %load_target = load i8*, i8** %6
  %R484 = call i64 @strlen(i8* %load_target)
  %R485 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %load_target, i64 %R484)
  %7 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %8 = bitcast %struct.global_State** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %10 = bitcast i8* %9 to %struct.global_State**
  %load_target2 = load %struct.global_State*, %struct.global_State** %10
  %11 = bitcast %struct.global_State* %load_target2 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i32 296
  %13 = bitcast i8* %12 to %struct.global_State*
  %14 = bitcast %struct.global_State* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %R475
  %16 = bitcast i8* %15 to %struct.global_State*
  %17 = bitcast %struct.global_State* %16 to { [24 x i8] }**
  %18 = bitcast { [24 x i8] }** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to { [24 x i8] }**
  store { [24 x i8] }* %R485, { [24 x i8] }** %20
  %21 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %22 = bitcast %struct.global_State** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 32
  %24 = bitcast i8* %23 to %struct.global_State**
  %load_target3 = load %struct.global_State*, %struct.global_State** %24
  %25 = bitcast %struct.global_State* %load_target3 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i32 296
  %27 = bitcast i8* %26 to %struct.global_State*
  %28 = bitcast %struct.global_State* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %R475
  %30 = bitcast i8* %29 to %struct.global_State*
  %31 = bitcast %struct.global_State* %30 to { [24 x i8] }**
  %32 = bitcast { [24 x i8] }** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 0
  %34 = bitcast i8* %33 to { [24 x i8] }**
  %load_target4 = load { [24 x i8] }*, { [24 x i8] }** %34
  %35 = bitcast { [24 x i8] }* %load_target4 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 9
  %load_target5 = load i8, i8* %36
  %R502 = zext i8 %load_target5 to i32
  %R503 = or i32 %R502, 32
  %R504 = trunc i32 %R503 to i8
  %37 = bitcast { [24 x i8] }* %load_target4 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 9
  store i8 %R504, i8* %38
  %R506 = add i32 %1, 1
  store i32 %R506, i32* %0
  br label %L87

L89:                                              ; preds = %L87
  ret void
}

define internal %struct.lua_TValue* @luaT_gettm(%struct.Table* %ARG1, i32 %ARG2, { [24 x i8] }* %ARG3) {
L90:
  %R509 = call %struct.lua_TValue* @luaH_getstr(%struct.Table* %ARG1, { [24 x i8] }* %ARG3)
  %0 = bitcast %struct.lua_TValue* %R509 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %cond = icmp ne i32 %load_target, 0
  %select = select i1 %cond, %struct.lua_TValue* %R509, %struct.lua_TValue* null
  %cond1 = icmp ne i32 %load_target, 0
  br i1 %cond1, label %L92, label %L91

L91:                                              ; preds = %L90
  %R516 = shl i32 1, %ARG2
  %R517 = trunc i32 %R516 to i8
  %R518 = zext i8 %R517 to i32
  %4 = bitcast %struct.Table* %ARG1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 10
  %load_target2 = load i8, i8* %5
  %R521 = zext i8 %load_target2 to i32
  %R522 = or i32 %R521, %R518
  %R523 = trunc i32 %R522 to i8
  %6 = bitcast %struct.Table* %ARG1 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 10
  store i8 %R523, i8* %7
  br label %L92

L92:                                              ; preds = %L91, %L90
  ret %struct.lua_TValue* %select
}

declare %struct.lua_TValue* @luaH_getstr(%struct.Table*, { [24 x i8] }*)

define internal %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i32 %ARG3) {
L93:
  %0 = alloca %struct.Table*
  %1 = alloca %struct.lua_TValue*
  %2 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  switch i32 %load_target, label %L96 [
    i32 5, label %L94
    i32 7, label %L95
  ]

L94:                                              ; preds = %L93
  %6 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %7 = bitcast { [184 x i8] }** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %9
  %10 = bitcast { [184 x i8] }* %load_target1 to %struct.Table**
  %11 = bitcast %struct.Table** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  %13 = bitcast i8* %12 to %struct.Table**
  %load_target2 = load %struct.Table*, %struct.Table** %13
  store %struct.Table* %load_target2, %struct.Table** %0
  br label %L97

L95:                                              ; preds = %L93
  %14 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %15 = bitcast { [184 x i8] }** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %17
  %18 = bitcast { [184 x i8] }* %load_target3 to %struct.Table**
  %19 = bitcast %struct.Table** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 16
  %21 = bitcast i8* %20 to %struct.Table**
  %load_target4 = load %struct.Table*, %struct.Table** %21
  store %struct.Table* %load_target4, %struct.Table** %0
  br label %L97

L96:                                              ; preds = %L93
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %23 = bitcast %struct.global_State** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 32
  %25 = bitcast i8* %24 to %struct.global_State**
  %load_target5 = load %struct.global_State*, %struct.global_State** %25
  %26 = bitcast %struct.global_State* %load_target5 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i32 224
  %28 = bitcast i8* %27 to %struct.global_State*
  %R539 = sext i32 %load_target to i64
  %R540 = mul i64 %R539, 8
  %29 = bitcast %struct.global_State* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %R540
  %31 = bitcast i8* %30 to %struct.global_State*
  %32 = bitcast %struct.global_State* %31 to %struct.Table**
  %33 = bitcast %struct.Table** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to %struct.Table**
  %load_target6 = load %struct.Table*, %struct.Table** %35
  store %struct.Table* %load_target6, %struct.Table** %0
  br label %L97

L97:                                              ; preds = %L96, %L95, %L94
  %36 = load %struct.Table*, %struct.Table** %0
  %cond = icmp ne %struct.Table* %36, null
  br i1 %cond, label %L98, label %L99

L98:                                              ; preds = %L97
  %37 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %38 = bitcast %struct.global_State** %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 32
  %40 = bitcast i8* %39 to %struct.global_State**
  %load_target7 = load %struct.global_State*, %struct.global_State** %40
  %41 = bitcast %struct.global_State* %load_target7 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i32 296
  %43 = bitcast i8* %42 to %struct.global_State*
  %R549 = sext i32 %ARG3 to i64
  %R550 = mul i64 %R549, 8
  %44 = bitcast %struct.global_State* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %R550
  %46 = bitcast i8* %45 to %struct.global_State*
  %47 = bitcast %struct.global_State* %46 to { [24 x i8] }**
  %48 = bitcast { [24 x i8] }** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 0
  %50 = bitcast i8* %49 to { [24 x i8] }**
  %load_target8 = load { [24 x i8] }*, { [24 x i8] }** %50
  %R553 = call %struct.lua_TValue* @luaH_getstr(%struct.Table* %36, { [24 x i8] }* %load_target8)
  store %struct.lua_TValue* %R553, %struct.lua_TValue** %1
  br label %L100

L99:                                              ; preds = %L97
  store %struct.lua_TValue* @luaO_nilobject_.3, %struct.lua_TValue** %1
  br label %L100

L100:                                             ; preds = %L99, %L98
  %51 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  ret %struct.lua_TValue* %51
}

define internal { [56 x i8] }* @luaF_newCclosure(%struct.lua_State* %ARG1, i32 %ARG2, %struct.Table* %ARG3) {
L101:
  %R560 = add i32 %ARG2, -1
  %R561 = sext i32 %R560 to i64
  %R562 = mul i64 %R561, 16
  %R563 = trunc i64 %R562 to i32
  %R564 = add i32 %R563, 56
  %R565 = sext i32 %R564 to i64
  %R566 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 %R565)
  %R567 = bitcast i8* %R566 to { [56 x i8] }*
  %R570 = bitcast { [56 x i8] }* %R567 to { [184 x i8] }*
  call void @luaC_link(%struct.lua_State* %ARG1, { [184 x i8] }* %R570, i8 6)
  %0 = bitcast { [56 x i8] }* %R567 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 10
  store i8 1, i8* %1
  %2 = bitcast { [56 x i8] }* %R567 to %struct.Table**
  %3 = bitcast %struct.Table** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 24
  %5 = bitcast i8* %4 to %struct.Table**
  store %struct.Table* %ARG3, %struct.Table** %5
  %R575 = trunc i32 %ARG2 to i8
  %6 = bitcast { [56 x i8] }* %R567 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 11
  store i8 %R575, i8* %7
  ret { [56 x i8] }* %R567
}

declare void @luaC_link(%struct.lua_State*, { [184 x i8] }*, i8)

define internal { [56 x i8] }* @luaF_newLclosure(%struct.lua_State* %ARG1, i32 %ARG2, %struct.Table* %ARG3) {
L102:
  %0 = alloca i32
  %R581 = add i32 %ARG2, -1
  %R582 = sext i32 %R581 to i64
  %R583 = mul i64 %R582, 8
  %R584 = trunc i64 %R583 to i32
  %R585 = add i32 %R584, 48
  %R586 = sext i32 %R585 to i64
  %R587 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 %R586)
  %R588 = bitcast i8* %R587 to { [56 x i8] }*
  %R591 = bitcast { [56 x i8] }* %R588 to { [184 x i8] }*
  call void @luaC_link(%struct.lua_State* %ARG1, { [184 x i8] }* %R591, i8 6)
  %1 = bitcast { [56 x i8] }* %R588 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 0, i8* %2
  %3 = bitcast { [56 x i8] }* %R588 to %struct.Table**
  %4 = bitcast %struct.Table** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = bitcast i8* %5 to %struct.Table**
  store %struct.Table* %ARG3, %struct.Table** %6
  %R596 = trunc i32 %ARG2 to i8
  %7 = bitcast { [56 x i8] }* %R588 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 11
  store i8 %R596, i8* %8
  store i32 %ARG2, i32* %0
  br label %L103

L103:                                             ; preds = %L104, %L102
  %9 = load i32, i32* %0
  %R599 = add i32 %9, -1
  store i32 %R599, i32* %0
  %cond = icmp ne i32 %9, 0
  br i1 %cond, label %L104, label %L105

L104:                                             ; preds = %L103
  %10 = bitcast { [56 x i8] }* %R588 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i32 40
  %12 = bitcast i8* %11 to { [56 x i8] }*
  %R604 = sext i32 %R599 to i64
  %R605 = mul i64 %R604, 8
  %13 = bitcast { [56 x i8] }* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %R605
  %15 = bitcast i8* %14 to { [56 x i8] }*
  %16 = bitcast { [56 x i8] }* %15 to %struct.UpVal**
  %17 = bitcast %struct.UpVal** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to %struct.UpVal**
  store %struct.UpVal* null, %struct.UpVal** %19
  br label %L103

L105:                                             ; preds = %L103
  ret { [56 x i8] }* %R588
}

define internal %struct.UpVal* @luaF_newupval(%struct.lua_State* %ARG1) {
L106:
  %R610 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 40)
  %R611 = bitcast i8* %R610 to %struct.UpVal*
  %R614 = bitcast %struct.UpVal* %R611 to { [184 x i8] }*
  call void @luaC_link(%struct.lua_State* %ARG1, { [184 x i8] }* %R614, i8 10)
  %0 = bitcast %struct.UpVal* %R611 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i32 24
  %2 = bitcast i8* %1 to %struct.UpVal*
  %3 = bitcast %struct.UpVal* %R611 to %struct.lua_TValue**
  %4 = bitcast %struct.lua_TValue** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %struct.lua_TValue**
  store %struct.UpVal* %2, %struct.lua_TValue** %6
  %7 = bitcast %struct.UpVal* %R611 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10
  ret %struct.UpVal* %R611
}

define internal %struct.UpVal* @luaF_findupval(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2) {
L107:
  %0 = alloca { [184 x i8] }**
  %1 = alloca %struct.UpVal*
  %2 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %3 = bitcast %struct.global_State** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %5
  %6 = bitcast %struct.lua_State* %ARG1 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i32 152
  %8 = bitcast i8* %7 to %struct.lua_State*
  store %struct.lua_State* %8, { [184 x i8] }*** %0
  br label %L108

L108:                                             ; preds = %L114, %L107
  %9 = load { [184 x i8] }**, { [184 x i8] }*** %0
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %12
  %cond = icmp ne { [184 x i8] }* %load_target1, null
  br i1 %cond, label %L109, label %L115

L109:                                             ; preds = %L108
  %13 = bitcast { [184 x i8] }* %load_target1 to %struct.lua_TValue**
  %14 = bitcast %struct.lua_TValue** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %15 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %16
  %R635 = icmp uge %struct.lua_TValue* %load_target2, %ARG2
  %R6353 = zext i1 %R635 to i32
  %cond4 = icmp ne i32 %R6353, 0
  br i1 %cond4, label %L110, label %L115

L110:                                             ; preds = %L109
  %R639 = icmp eq %struct.lua_TValue* %load_target2, %ARG2
  %R6395 = zext i1 %R639 to i32
  %cond6 = icmp ne i32 %R6395, 0
  br i1 %cond6, label %L111, label %L114

L111:                                             ; preds = %L110
  %17 = bitcast { [184 x i8] }* %load_target1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 9
  %load_target7 = load i8, i8* %18
  %R643 = zext i8 %load_target7 to i32
  %19 = bitcast %struct.global_State* %load_target to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 32
  %load_target8 = load i8, i8* %20
  %R646 = zext i8 %load_target8 to i32
  %R647 = xor i32 %R646, 3
  %R648 = and i32 %R643, %R647
  %R649 = and i32 %R648, 3
  %cond9 = icmp ne i32 %R649, 0
  br i1 %cond9, label %L112, label %L113

L112:                                             ; preds = %L111
  %R654 = xor i32 %R643, 3
  %R655 = trunc i32 %R654 to i8
  %21 = bitcast { [184 x i8] }* %load_target1 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 9
  store i8 %R655, i8* %22
  br label %L113

L113:                                             ; preds = %L112, %L111
  store { [184 x i8] }* %load_target1, %struct.UpVal** %1
  br label %L116

L114:                                             ; preds = %L110
  store { [184 x i8] }* %load_target1, { [184 x i8] }*** %0
  br label %L108

L115:                                             ; preds = %L109, %L108
  %R661 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 40)
  %R662 = bitcast i8* %R661 to %struct.UpVal*
  %23 = bitcast %struct.UpVal* %R662 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  store i8 10, i8* %24
  %25 = bitcast %struct.global_State* %load_target to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %load_target10 = load i8, i8* %26
  %R666 = zext i8 %load_target10 to i32
  %R667 = and i32 %R666, 3
  %27 = bitcast %struct.UpVal* %R662 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 9
  store i32 %R667, i8* %28
  %29 = bitcast %struct.UpVal* %R662 to %struct.lua_TValue**
  %30 = bitcast %struct.lua_TValue** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 16
  %32 = bitcast i8* %31 to %struct.lua_TValue**
  store %struct.lua_TValue* %ARG2, %struct.lua_TValue** %32
  %33 = bitcast { [184 x i8] }** %9 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %35
  %36 = bitcast %struct.UpVal* %R662 to { [184 x i8] }**
  %37 = bitcast { [184 x i8] }** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  %39 = bitcast i8* %38 to { [184 x i8] }**
  store { [184 x i8] }* %load_target11, { [184 x i8] }** %39
  %R676 = bitcast %struct.UpVal* %R662 to { [184 x i8] }*
  %40 = bitcast { [184 x i8] }** %9 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = bitcast i8* %41 to { [184 x i8] }**
  store { [184 x i8] }* %R676, { [184 x i8] }** %42
  %43 = bitcast %struct.global_State* %load_target to i8*
  %44 = getelementptr inbounds i8, i8* %43, i32 184
  %45 = bitcast i8* %44 to %struct.global_State*
  %46 = bitcast %struct.UpVal* %R662 to %struct.UpVal**
  %47 = bitcast %struct.UpVal** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 24
  %49 = bitcast i8* %48 to %struct.UpVal**
  store %struct.global_State* %45, %struct.UpVal** %49
  %50 = bitcast %struct.global_State* %load_target to %struct.UpVal**
  %51 = bitcast %struct.UpVal** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 216
  %53 = bitcast i8* %52 to %struct.UpVal**
  %load_target12 = load %struct.UpVal*, %struct.UpVal** %53
  %54 = bitcast %struct.UpVal* %R662 to %struct.UpVal**
  %55 = bitcast %struct.UpVal** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = bitcast i8* %56 to %struct.UpVal**
  store %struct.UpVal* %load_target12, %struct.UpVal** %57
  %58 = bitcast %struct.UpVal* %load_target12 to %struct.UpVal**
  %59 = bitcast %struct.UpVal** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 24
  %61 = bitcast i8* %60 to %struct.UpVal**
  store %struct.UpVal* %R662, %struct.UpVal** %61
  %62 = bitcast %struct.global_State* %load_target to %struct.UpVal**
  %63 = bitcast %struct.UpVal** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 216
  %65 = bitcast i8* %64 to %struct.UpVal**
  store %struct.UpVal* %R662, %struct.UpVal** %65
  store %struct.UpVal* %R662, %struct.UpVal** %1
  br label %L116

L116:                                             ; preds = %L115, %L113
  %66 = load %struct.UpVal*, %struct.UpVal** %1
  ret %struct.UpVal* %66
}

define internal void @unlinkupval(%struct.UpVal* %ARG1) {
L117:
  %0 = bitcast %struct.UpVal* %ARG1 to %struct.UpVal**
  %1 = bitcast %struct.UpVal** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to %struct.UpVal**
  %load_target = load %struct.UpVal*, %struct.UpVal** %3
  %4 = bitcast %struct.UpVal* %ARG1 to %struct.UpVal**
  %5 = bitcast %struct.UpVal** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 32
  %7 = bitcast i8* %6 to %struct.UpVal**
  %load_target1 = load %struct.UpVal*, %struct.UpVal** %7
  %8 = bitcast %struct.UpVal* %load_target1 to %struct.UpVal**
  %9 = bitcast %struct.UpVal** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to %struct.UpVal**
  store %struct.UpVal* %load_target, %struct.UpVal** %11
  %12 = bitcast %struct.UpVal* %ARG1 to %struct.UpVal**
  %13 = bitcast %struct.UpVal** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to %struct.UpVal**
  %load_target2 = load %struct.UpVal*, %struct.UpVal** %15
  %16 = bitcast %struct.UpVal* %ARG1 to %struct.UpVal**
  %17 = bitcast %struct.UpVal** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to %struct.UpVal**
  %load_target3 = load %struct.UpVal*, %struct.UpVal** %19
  %20 = bitcast %struct.UpVal* %load_target3 to %struct.UpVal**
  %21 = bitcast %struct.UpVal** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to %struct.UpVal**
  store %struct.UpVal* %load_target2, %struct.UpVal** %23
  ret void
}

define internal void @luaF_freeupval(%struct.lua_State* %ARG1, %struct.UpVal* %ARG2) {
L118:
  %0 = bitcast %struct.UpVal* %ARG2 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.UpVal* %ARG2 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i32 24
  %6 = bitcast i8* %5 to %struct.UpVal*
  %R703 = icmp ne %struct.lua_TValue* %load_target, %struct.UpVal* %6
  %R7031 = zext i1 %R703 to i32
  %cond = icmp ne i32 %R7031, 0
  br i1 %cond, label %L119, label %L120

L119:                                             ; preds = %L118
  call void @unlinkupval(%struct.UpVal* %ARG2)
  br label %L120

L120:                                             ; preds = %L119, %L118
  %R707 = bitcast %struct.UpVal* %ARG2 to i8*
  %R708 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R707, i64 40, i64 0)
  ret void
}

define internal void @luaF_close(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2) {
L121:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  br label %L122

L122:                                             ; preds = %L126, %L125, %L121
  %4 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 152
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %cond = icmp ne { [184 x i8] }* %load_target1, null
  br i1 %cond, label %L123, label %L127

L123:                                             ; preds = %L122
  %8 = bitcast { [184 x i8] }* %load_target1 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %R719 = icmp uge %struct.lua_TValue* %load_target2, %ARG2
  %R7193 = zext i1 %R719 to i32
  %cond4 = icmp ne i32 %R7193, 0
  br i1 %cond4, label %L124, label %L127

L124:                                             ; preds = %L123
  %12 = bitcast { [184 x i8] }* %load_target1 to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %15
  %16 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 152
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %load_target5, { [184 x i8] }** %19
  %20 = bitcast { [184 x i8] }* %load_target1 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 9
  %load_target6 = load i8, i8* %21
  %R727 = zext i8 %load_target6 to i32
  %22 = bitcast %struct.global_State* %load_target to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 32
  %load_target7 = load i8, i8* %23
  %R730 = zext i8 %load_target7 to i32
  %R731 = xor i32 %R730, 3
  %R732 = and i32 %R727, %R731
  %R733 = and i32 %R732, 3
  %cond8 = icmp ne i32 %R733, 0
  br i1 %cond8, label %L125, label %L126

L125:                                             ; preds = %L124
  call void @luaF_freeupval(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target1)
  br label %L122

L126:                                             ; preds = %L124
  call void @unlinkupval({ [184 x i8] }* %load_target1)
  %24 = bitcast { [184 x i8] }* %load_target1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %load_target9 to { [8 x i8] }*
  %29 = bitcast { [8 x i8] }* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [8 x i8] }*
  %load_target10 = load { [8 x i8] }, { [8 x i8] }* %31
  %32 = bitcast { [184 x i8] }* %load_target1 to { [8 x i8] }*
  %33 = bitcast { [8 x i8] }* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 24
  %35 = bitcast i8* %34 to { [8 x i8] }*
  store { [8 x i8] } %load_target10, { [8 x i8] }* %35
  %36 = bitcast %struct.lua_TValue* %load_target9 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  %load_target11 = load i32, i32* %39
  %40 = bitcast { [184 x i8] }* %load_target1 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 32
  %43 = bitcast i8* %42 to i32*
  store i32 %load_target11, i32* %43
  %44 = bitcast { [184 x i8] }* %load_target1 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i32 24
  %46 = bitcast i8* %45 to { [184 x i8] }*
  %47 = bitcast { [184 x i8] }* %load_target1 to %struct.lua_TValue**
  %48 = bitcast %struct.lua_TValue** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 16
  %50 = bitcast i8* %49 to %struct.lua_TValue**
  store { [184 x i8] }* %46, %struct.lua_TValue** %50
  call void @luaC_linkupval(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target1)
  br label %L122

L127:                                             ; preds = %L123, %L122
  ret void
}

declare void @luaC_linkupval(%struct.lua_State*, %struct.UpVal*)

define internal %struct.Proto* @luaF_newproto(%struct.lua_State* %ARG1) {
L128:
  %R756 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 120)
  %R757 = bitcast i8* %R756 to %struct.Proto*
  %R760 = bitcast %struct.Proto* %R757 to { [184 x i8] }*
  call void @luaC_link(%struct.lua_State* %ARG1, { [184 x i8] }* %R760, i8 9)
  %0 = bitcast %struct.Proto* %R757 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  store %struct.lua_TValue* null, %struct.lua_TValue** %3
  %4 = bitcast %struct.Proto* %R757 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 76
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7
  %8 = bitcast %struct.Proto* %R757 to %struct.Proto***
  %9 = bitcast %struct.Proto*** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to %struct.Proto***
  store %struct.Proto** null, %struct.Proto*** %11
  %12 = bitcast %struct.Proto* %R757 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 88
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15
  %16 = bitcast %struct.Proto* %R757 to i32**
  %17 = bitcast i32** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to i32**
  store i32* null, i32** %19
  %20 = bitcast %struct.Proto* %R757 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 80
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23
  %24 = bitcast %struct.Proto* %R757 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 84
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27
  %28 = bitcast %struct.Proto* %R757 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 72
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31
  %32 = bitcast %struct.Proto* %R757 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 112
  store i8 0, i8* %33
  %34 = bitcast %struct.Proto* %R757 to { [24 x i8] }***
  %35 = bitcast { [24 x i8] }*** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 56
  %37 = bitcast i8* %36 to { [24 x i8] }***
  store { [24 x i8] }** null, { [24 x i8] }*** %37
  %38 = bitcast %struct.Proto* %R757 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 113
  store i8 0, i8* %39
  %40 = bitcast %struct.Proto* %R757 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 114
  store i8 0, i8* %41
  %42 = bitcast %struct.Proto* %R757 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 115
  store i8 0, i8* %43
  %44 = bitcast %struct.Proto* %R757 to i32**
  %45 = bitcast i32** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 40
  %47 = bitcast i8* %46 to i32**
  store i32* null, i32** %47
  %48 = bitcast %struct.Proto* %R757 to i32*
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 92
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51
  %52 = bitcast %struct.Proto* %R757 to %struct.LocVar**
  %53 = bitcast %struct.LocVar** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 48
  %55 = bitcast i8* %54 to %struct.LocVar**
  store %struct.LocVar* null, %struct.LocVar** %55
  %56 = bitcast %struct.Proto* %R757 to i32*
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 96
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59
  %60 = bitcast %struct.Proto* %R757 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 100
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63
  %64 = bitcast %struct.Proto* %R757 to { [24 x i8] }**
  %65 = bitcast { [24 x i8] }** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 64
  %67 = bitcast i8* %66 to { [24 x i8] }**
  store { [24 x i8] }* null, { [24 x i8] }** %67
  ret %struct.Proto* %R757
}

define internal void @luaF_freeproto(%struct.lua_State* %ARG1, %struct.Proto* %ARG2) {
L129:
  %0 = bitcast %struct.Proto* %ARG2 to i32**
  %1 = bitcast i32** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to i32**
  %load_target = load i32*, i32** %3
  %R785 = bitcast i32* %load_target to i8*
  %4 = bitcast %struct.Proto* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 80
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R788 = sext i32 %load_target1 to i64
  %R789 = mul i64 %R788, 4
  %R790 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R785, i64 %R789, i64 0)
  %8 = bitcast %struct.Proto* %ARG2 to %struct.Proto***
  %9 = bitcast %struct.Proto*** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to %struct.Proto***
  %load_target2 = load %struct.Proto**, %struct.Proto*** %11
  %R794 = bitcast %struct.Proto** %load_target2 to i8*
  %12 = bitcast %struct.Proto* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 88
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  %R797 = sext i32 %load_target3 to i64
  %R798 = mul i64 %R797, 8
  %R799 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R794, i64 %R798, i64 0)
  %16 = bitcast %struct.Proto* %ARG2 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %19
  %R803 = bitcast %struct.lua_TValue* %load_target4 to i8*
  %20 = bitcast %struct.Proto* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 76
  %23 = bitcast i8* %22 to i32*
  %load_target5 = load i32, i32* %23
  %R806 = sext i32 %load_target5 to i64
  %R807 = mul i64 %R806, 16
  %R808 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R803, i64 %R807, i64 0)
  %24 = bitcast %struct.Proto* %ARG2 to i32**
  %25 = bitcast i32** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 40
  %27 = bitcast i8* %26 to i32**
  %load_target6 = load i32*, i32** %27
  %R812 = bitcast i32* %load_target6 to i8*
  %28 = bitcast %struct.Proto* %ARG2 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 84
  %31 = bitcast i8* %30 to i32*
  %load_target7 = load i32, i32* %31
  %R815 = sext i32 %load_target7 to i64
  %R816 = mul i64 %R815, 4
  %R817 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R812, i64 %R816, i64 0)
  %32 = bitcast %struct.Proto* %ARG2 to %struct.LocVar**
  %33 = bitcast %struct.LocVar** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 48
  %35 = bitcast i8* %34 to %struct.LocVar**
  %load_target8 = load %struct.LocVar*, %struct.LocVar** %35
  %R821 = bitcast %struct.LocVar* %load_target8 to i8*
  %36 = bitcast %struct.Proto* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 92
  %39 = bitcast i8* %38 to i32*
  %load_target9 = load i32, i32* %39
  %R824 = sext i32 %load_target9 to i64
  %R825 = mul i64 %R824, 16
  %R826 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R821, i64 %R825, i64 0)
  %40 = bitcast %struct.Proto* %ARG2 to { [24 x i8] }***
  %41 = bitcast { [24 x i8] }*** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 56
  %43 = bitcast i8* %42 to { [24 x i8] }***
  %load_target10 = load { [24 x i8] }**, { [24 x i8] }*** %43
  %R830 = bitcast { [24 x i8] }** %load_target10 to i8*
  %44 = bitcast %struct.Proto* %ARG2 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 72
  %47 = bitcast i8* %46 to i32*
  %load_target11 = load i32, i32* %47
  %R833 = sext i32 %load_target11 to i64
  %R834 = mul i64 %R833, 8
  %R835 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R830, i64 %R834, i64 0)
  %R838 = bitcast %struct.Proto* %ARG2 to i8*
  %R839 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R838, i64 120, i64 0)
  ret void
}

define internal void @luaF_freeclosure(%struct.lua_State* %ARG1, { [56 x i8] }* %ARG2) {
L130:
  %0 = alloca i32
  %1 = bitcast { [56 x i8] }* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 10
  %load_target = load i8, i8* %2
  %cond = icmp ne i8 %load_target, 0
  br i1 %cond, label %L131, label %L132

L131:                                             ; preds = %L130
  %3 = bitcast { [56 x i8] }* %ARG2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 11
  %load_target1 = load i8, i8* %4
  %R844 = zext i8 %load_target1 to i32
  %R845 = add i32 %R844, -1
  %R846 = sext i32 %R845 to i64
  %R847 = mul i64 %R846, 16
  %R848 = trunc i64 %R847 to i32
  %R849 = add i32 %R848, 56
  store i32 %R849, i32* %0
  br label %L133

L132:                                             ; preds = %L130
  %5 = bitcast { [56 x i8] }* %ARG2 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 11
  %load_target2 = load i8, i8* %6
  %R852 = zext i8 %load_target2 to i32
  %R853 = add i32 %R852, -1
  %R854 = sext i32 %R853 to i64
  %R855 = mul i64 %R854, 8
  %R856 = trunc i64 %R855 to i32
  %R857 = add i32 %R856, 48
  store i32 %R857, i32* %0
  br label %L133

L133:                                             ; preds = %L132, %L131
  %7 = load i32, i32* %0
  %R861 = bitcast { [56 x i8] }* %ARG2 to i8*
  %R863 = sext i32 %7 to i64
  %R864 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R861, i64 %R863, i64 0)
  ret void
}

define internal void @luaD_seterrorobj(%struct.lua_State* %ARG1, i32 %ARG2, %struct.lua_TValue* %ARG3) {
L134:
  switch i32 %ARG2, label %L138 [
    i32 2, label %L137
    i32 3, label %L137
    i32 4, label %L135
    i32 5, label %L136
  ]

L135:                                             ; preds = %L134
  %R869 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i64 17)
  %R870 = bitcast { [24 x i8] }* %R869 to { [184 x i8] }*
  %0 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %1 = bitcast { [184 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to { [184 x i8] }**
  store { [184 x i8] }* %R870, { [184 x i8] }** %3
  %4 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 4, i32* %7
  br label %L138

L136:                                             ; preds = %L134
  %R876 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i64 23)
  %R877 = bitcast { [24 x i8] }* %R876 to { [184 x i8] }*
  %8 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  store { [184 x i8] }* %R877, { [184 x i8] }** %11
  %12 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 4, i32* %15
  br label %L138

L137:                                             ; preds = %L134, %L134
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %19
  %20 = bitcast %struct.lua_TValue* %load_target to { [8 x i8] }*
  %21 = bitcast { [8 x i8] }* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 -16
  %23 = bitcast i8* %22 to { [8 x i8] }*
  %load_target1 = load { [8 x i8] }, { [8 x i8] }* %23
  %24 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %25 = bitcast { [8 x i8] }* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to { [8 x i8] }*
  store { [8 x i8] } %load_target1, { [8 x i8] }* %27
  %28 = bitcast %struct.lua_TValue* %load_target to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 -8
  %31 = bitcast i8* %30 to i32*
  %load_target2 = load i32, i32* %31
  %32 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %load_target2, i32* %35
  br label %L138

L138:                                             ; preds = %L137, %L136, %L135, %L134
  %36 = bitcast %struct.lua_TValue* %ARG3 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 16
  %38 = bitcast i8* %37 to %struct.lua_TValue*
  %39 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %40 = bitcast %struct.lua_TValue** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 16
  %42 = bitcast i8* %41 to %struct.lua_TValue**
  store %struct.lua_TValue* %38, %struct.lua_TValue** %42
  ret void
}

define internal void @restore_stack_limit(%struct.lua_State* %ARG1) {
L139:
  %0 = bitcast %struct.lua_State* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 92
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R896 = icmp sgt i32 %load_target, 20000
  %R8961 = zext i1 %R896 to i32
  %cond = icmp ne i32 %R8961, 0
  br i1 %cond, label %L140, label %L142

L140:                                             ; preds = %L139
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %5 = bitcast %struct.CallInfo** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to %struct.CallInfo**
  %load_target2 = load %struct.CallInfo*, %struct.CallInfo** %7
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %9 = bitcast %struct.CallInfo** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 80
  %11 = bitcast i8* %10 to %struct.CallInfo**
  %load_target3 = load %struct.CallInfo*, %struct.CallInfo** %11
  %R901 = sub %struct.CallInfo* %load_target2, %load_target3
  %R902 = sdiv %struct.CallInfo* %R901, i64 40
  %R903 = ptrtoint %struct.CallInfo* %R902 to i32
  %R905 = add i32 %R903, 1
  %R906 = icmp slt i32 %R905, 20000
  %R9064 = zext i1 %R906 to i32
  %cond5 = icmp ne i32 %R9064, 0
  br i1 %cond5, label %L141, label %L142

L141:                                             ; preds = %L140
  call void @luaD_reallocCI(%struct.lua_State* %ARG1, i32 20000)
  br label %L142

L142:                                             ; preds = %L141, %L140, %L139
  ret void
}

declare void @luaD_reallocCI(%struct.lua_State*, i32)

define internal void @resetstack(%struct.lua_State* %ARG1, i32 %ARG2) {
L143:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1 = bitcast %struct.CallInfo** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 80
  %3 = bitcast i8* %2 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %5 = bitcast %struct.CallInfo** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to %struct.CallInfo**
  store %struct.CallInfo* %load_target, %struct.CallInfo** %7
  %8 = bitcast %struct.CallInfo* %load_target to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target1, %struct.lua_TValue** %15
  call void @luaF_close(%struct.lua_State* %ARG1, %struct.lua_TValue* %load_target1)
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %19
  call void @luaD_seterrorobj(%struct.lua_State* %ARG1, i32 %ARG2, %struct.lua_TValue* %load_target2)
  %20 = bitcast %struct.lua_State* %ARG1 to i16*
  %21 = bitcast i16* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 98
  %23 = bitcast i8* %22 to i16*
  %load_target3 = load i16, i16* %23
  %24 = bitcast %struct.lua_State* %ARG1 to i16*
  %25 = bitcast i16* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 96
  %27 = bitcast i8* %26 to i16*
  store i16 %load_target3, i16* %27
  %28 = bitcast %struct.lua_State* %ARG1 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 101
  store i8 1, i8* %29
  call void @restore_stack_limit(%struct.lua_State* %ARG1)
  %30 = bitcast %struct.lua_State* %ARG1 to i64*
  %31 = bitcast i64* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 176
  %33 = bitcast i8* %32 to i64*
  store i64 0, i64* %33
  %34 = bitcast %struct.lua_State* %ARG1 to %struct.lua_longjmp**
  %35 = bitcast %struct.lua_longjmp** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 168
  %37 = bitcast i8* %36 to %struct.lua_longjmp**
  store %struct.lua_longjmp* null, %struct.lua_longjmp** %37
  ret void
}

define internal void @luaD_throw.16(%struct.lua_State* %ARG1, i32 %ARG2) {
L144:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_longjmp**
  %1 = bitcast %struct.lua_longjmp** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 168
  %3 = bitcast i8* %2 to %struct.lua_longjmp**
  %load_target = load %struct.lua_longjmp*, %struct.lua_longjmp** %3
  %cond = icmp ne %struct.lua_longjmp* %load_target, null
  br i1 %cond, label %L145, label %L146

L145:                                             ; preds = %L144
  %4 = bitcast %struct.lua_longjmp* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 208
  %7 = bitcast i8* %6 to i32*
  store i32 %ARG2, i32* %7
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.lua_longjmp**
  %9 = bitcast %struct.lua_longjmp** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 168
  %11 = bitcast i8* %10 to %struct.lua_longjmp**
  %load_target1 = load %struct.lua_longjmp*, %struct.lua_longjmp** %11
  %12 = bitcast %struct.lua_longjmp* %load_target1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i32 8
  %14 = bitcast i8* %13 to %struct.lua_longjmp*
  call void @longjmp(%struct.lua_longjmp* %14, i32 1)
  br label %L149

L146:                                             ; preds = %L144
  %R939 = trunc i32 %ARG2 to i8
  %15 = bitcast %struct.lua_State* %ARG1 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 10
  store i8 %R939, i8* %16
  %17 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %18 = bitcast %struct.global_State** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 32
  %20 = bitcast i8* %19 to %struct.global_State**
  %load_target2 = load %struct.global_State*, %struct.global_State** %20
  %21 = bitcast %struct.global_State* %load_target2 to i32 (%struct.lua_State*)**
  %22 = bitcast i32 (%struct.lua_State*)** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 152
  %24 = bitcast i8* %23 to i32 (%struct.lua_State*)**
  %load_target3 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %24
  %cond4 = icmp ne i32 (%struct.lua_State*)* %load_target3, null
  br i1 %cond4, label %L147, label %L148

L147:                                             ; preds = %L146
  call void @resetstack(%struct.lua_State* %ARG1, i32 %ARG2)
  %25 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %26 = bitcast %struct.global_State** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 32
  %28 = bitcast i8* %27 to %struct.global_State**
  %load_target5 = load %struct.global_State*, %struct.global_State** %28
  %29 = bitcast %struct.global_State* %load_target5 to i32 (%struct.lua_State*)**
  %30 = bitcast i32 (%struct.lua_State*)** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 152
  %32 = bitcast i8* %31 to i32 (%struct.lua_State*)**
  %load_target6 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %32
  %R950 = call i32 %load_target6(%struct.lua_State* %ARG1)
  br label %L148

L148:                                             ; preds = %L147, %L146
  call void @exit(i32 1)
  br label %L149

L149:                                             ; preds = %L148, %L145
  ret void
}

declare void @longjmp(%struct.__jmp_buf_tag*, i32)

declare void @exit(i32)

define internal i32 @luaD_rawrunprotected(%struct.lua_State* %ARG1, void (%struct.lua_State*, i8*)* %ARG2, i8* %ARG3) {
L150:
  %lj_0x62d000831ca0 = alloca %struct.lua_longjmp
  %0 = bitcast %struct.lua_longjmp* %lj_0x62d000831ca0 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 208
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_longjmp**
  %5 = bitcast %struct.lua_longjmp** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 168
  %7 = bitcast i8* %6 to %struct.lua_longjmp**
  %load_target = load %struct.lua_longjmp*, %struct.lua_longjmp** %7
  %8 = bitcast %struct.lua_longjmp* %lj_0x62d000831ca0 to %struct.lua_longjmp**
  %9 = bitcast %struct.lua_longjmp** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to %struct.lua_longjmp**
  store %struct.lua_longjmp* %load_target, %struct.lua_longjmp** %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_longjmp**
  %13 = bitcast %struct.lua_longjmp** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 168
  %15 = bitcast i8* %14 to %struct.lua_longjmp**
  store %struct.lua_longjmp* %lj_0x62d000831ca0, %struct.lua_longjmp** %15
  %16 = bitcast %struct.lua_longjmp* %lj_0x62d000831ca0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i32 8
  %18 = bitcast i8* %17 to %struct.lua_longjmp*
  %R957 = call i32 @_setjmp(%struct.lua_longjmp* %18)
  %cond = icmp ne i32 %R957, 0
  br i1 %cond, label %L152, label %L151

L151:                                             ; preds = %L150
  call void %ARG2(%struct.lua_State* %ARG1, i8* %ARG3)
  br label %L152

L152:                                             ; preds = %L151, %L150
  %19 = bitcast %struct.lua_longjmp* %lj_0x62d000831ca0 to %struct.lua_longjmp**
  %20 = bitcast %struct.lua_longjmp** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to %struct.lua_longjmp**
  %load_target1 = load %struct.lua_longjmp*, %struct.lua_longjmp** %22
  %23 = bitcast %struct.lua_State* %ARG1 to %struct.lua_longjmp**
  %24 = bitcast %struct.lua_longjmp** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 168
  %26 = bitcast i8* %25 to %struct.lua_longjmp**
  store %struct.lua_longjmp* %load_target1, %struct.lua_longjmp** %26
  %27 = bitcast %struct.lua_longjmp* %lj_0x62d000831ca0 to i32*
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 208
  %30 = bitcast i8* %29 to i32*
  %load_target2 = load i32, i32* %30
  ret i32 %load_target2
}

declare i32 @_setjmp(%struct.__jmp_buf_tag*)

define internal void @correctstack(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2) {
L153:
  %0 = alloca { [184 x i8] }*
  %1 = alloca %struct.CallInfo*
  %2 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %3 = bitcast %struct.lua_TValue** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 64
  %5 = bitcast i8* %4 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %5
  %6 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %7 = bitcast %struct.lua_TValue** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %9
  %R972 = sub %struct.lua_TValue* %load_target1, %ARG2
  %R973 = sdiv %struct.lua_TValue* %R972, i64 16
  %R974 = mul %struct.lua_TValue* %R973, i64 16
  %10 = bitcast %struct.lua_TValue* %load_target to i8*
  %11 = getelementptr inbounds i8, i8* %10, %struct.lua_TValue* %R974
  %12 = bitcast i8* %11 to %struct.lua_TValue*
  %13 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %14 = bitcast %struct.lua_TValue** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %15 to %struct.lua_TValue**
  store %struct.lua_TValue* %12, %struct.lua_TValue** %16
  %17 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %18 = bitcast { [184 x i8] }** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 152
  %20 = bitcast i8* %19 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %20
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %0
  br label %L154

L154:                                             ; preds = %L155, %L153
  %21 = load { [184 x i8] }*, { [184 x i8] }** %0
  %cond = icmp ne { [184 x i8] }* %21, null
  br i1 %cond, label %L155, label %L156

L155:                                             ; preds = %L154
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 64
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %25
  %26 = bitcast { [184 x i8] }* %21 to %struct.lua_TValue**
  %27 = bitcast %struct.lua_TValue** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 16
  %29 = bitcast i8* %28 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %29
  %R986 = sub %struct.lua_TValue* %load_target4, %ARG2
  %R987 = sdiv %struct.lua_TValue* %R986, i64 16
  %R988 = mul %struct.lua_TValue* %R987, i64 16
  %30 = bitcast %struct.lua_TValue* %load_target3 to i8*
  %31 = getelementptr inbounds i8, i8* %30, %struct.lua_TValue* %R988
  %32 = bitcast i8* %31 to %struct.lua_TValue*
  %33 = bitcast { [184 x i8] }* %21 to %struct.lua_TValue**
  %34 = bitcast %struct.lua_TValue** %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  %36 = bitcast i8* %35 to %struct.lua_TValue**
  store %struct.lua_TValue* %32, %struct.lua_TValue** %36
  %37 = bitcast { [184 x i8] }* %21 to { [184 x i8] }**
  %38 = bitcast { [184 x i8] }** %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %40
  store { [184 x i8] }* %load_target5, { [184 x i8] }** %0
  br label %L154

L156:                                             ; preds = %L154
  %41 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %42 = bitcast %struct.CallInfo** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 80
  %44 = bitcast i8* %43 to %struct.CallInfo**
  %load_target6 = load %struct.CallInfo*, %struct.CallInfo** %44
  store %struct.CallInfo* %load_target6, %struct.CallInfo** %1
  br label %L157

L157:                                             ; preds = %L158, %L156
  %45 = load %struct.CallInfo*, %struct.CallInfo** %1
  %46 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %47 = bitcast %struct.CallInfo** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 40
  %49 = bitcast i8* %48 to %struct.CallInfo**
  %load_target7 = load %struct.CallInfo*, %struct.CallInfo** %49
  %R998 = icmp ule %struct.CallInfo* %45, %load_target7
  %R9988 = zext i1 %R998 to i32
  %cond9 = icmp ne i32 %R9988, 0
  br i1 %cond9, label %L158, label %L159

L158:                                             ; preds = %L157
  %50 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %51 = bitcast %struct.lua_TValue** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 64
  %53 = bitcast i8* %52 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %53
  %54 = bitcast %struct.CallInfo* %45 to %struct.lua_TValue**
  %55 = bitcast %struct.lua_TValue** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %57
  %R1004 = sub %struct.lua_TValue* %load_target11, %ARG2
  %R1005 = sdiv %struct.lua_TValue* %R1004, i64 16
  %R1006 = mul %struct.lua_TValue* %R1005, i64 16
  %58 = bitcast %struct.lua_TValue* %load_target10 to i8*
  %59 = getelementptr inbounds i8, i8* %58, %struct.lua_TValue* %R1006
  %60 = bitcast i8* %59 to %struct.lua_TValue*
  %61 = bitcast %struct.CallInfo* %45 to %struct.lua_TValue**
  %62 = bitcast %struct.lua_TValue** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 16
  %64 = bitcast i8* %63 to %struct.lua_TValue**
  store %struct.lua_TValue* %60, %struct.lua_TValue** %64
  %65 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %66 = bitcast %struct.lua_TValue** %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 64
  %68 = bitcast i8* %67 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %68
  %69 = bitcast %struct.CallInfo* %45 to %struct.lua_TValue**
  %70 = bitcast %struct.lua_TValue** %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 0
  %72 = bitcast i8* %71 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %72
  %R1014 = sub %struct.lua_TValue* %load_target13, %ARG2
  %R1015 = sdiv %struct.lua_TValue* %R1014, i64 16
  %R1016 = mul %struct.lua_TValue* %R1015, i64 16
  %73 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %74 = getelementptr inbounds i8, i8* %73, %struct.lua_TValue* %R1016
  %75 = bitcast i8* %74 to %struct.lua_TValue*
  %76 = bitcast %struct.CallInfo* %45 to %struct.lua_TValue**
  %77 = bitcast %struct.lua_TValue** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 0
  %79 = bitcast i8* %78 to %struct.lua_TValue**
  store %struct.lua_TValue* %75, %struct.lua_TValue** %79
  %80 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %81 = bitcast %struct.lua_TValue** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 64
  %83 = bitcast i8* %82 to %struct.lua_TValue**
  %load_target14 = load %struct.lua_TValue*, %struct.lua_TValue** %83
  %84 = bitcast %struct.CallInfo* %45 to %struct.lua_TValue**
  %85 = bitcast %struct.lua_TValue** %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 8
  %87 = bitcast i8* %86 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %87
  %R1024 = sub %struct.lua_TValue* %load_target15, %ARG2
  %R1025 = sdiv %struct.lua_TValue* %R1024, i64 16
  %R1026 = mul %struct.lua_TValue* %R1025, i64 16
  %88 = bitcast %struct.lua_TValue* %load_target14 to i8*
  %89 = getelementptr inbounds i8, i8* %88, %struct.lua_TValue* %R1026
  %90 = bitcast i8* %89 to %struct.lua_TValue*
  %91 = bitcast %struct.CallInfo* %45 to %struct.lua_TValue**
  %92 = bitcast %struct.lua_TValue** %91 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = bitcast i8* %93 to %struct.lua_TValue**
  store %struct.lua_TValue* %90, %struct.lua_TValue** %94
  %95 = bitcast %struct.CallInfo* %45 to i8*
  %96 = getelementptr inbounds i8, i8* %95, %struct.CallInfo* inttoptr (i64 40 to %struct.CallInfo*)
  %97 = bitcast i8* %96 to %struct.CallInfo*
  store %struct.CallInfo* %97, %struct.CallInfo** %1
  br label %L157

L159:                                             ; preds = %L157
  %98 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %99 = bitcast %struct.lua_TValue** %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 64
  %101 = bitcast i8* %100 to %struct.lua_TValue**
  %load_target16 = load %struct.lua_TValue*, %struct.lua_TValue** %101
  %102 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %103 = bitcast %struct.lua_TValue** %102 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 24
  %105 = bitcast i8* %104 to %struct.lua_TValue**
  %load_target17 = load %struct.lua_TValue*, %struct.lua_TValue** %105
  %R1036 = sub %struct.lua_TValue* %load_target17, %ARG2
  %R1037 = sdiv %struct.lua_TValue* %R1036, i64 16
  %R1038 = mul %struct.lua_TValue* %R1037, i64 16
  %106 = bitcast %struct.lua_TValue* %load_target16 to i8*
  %107 = getelementptr inbounds i8, i8* %106, %struct.lua_TValue* %R1038
  %108 = bitcast i8* %107 to %struct.lua_TValue*
  %109 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %110 = bitcast %struct.lua_TValue** %109 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 24
  %112 = bitcast i8* %111 to %struct.lua_TValue**
  store %struct.lua_TValue* %108, %struct.lua_TValue** %112
  ret void
}

define internal void @luaD_reallocstack(%struct.lua_State* %ARG1, i32 %ARG2) {
L160:
  %0 = alloca i8*
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 64
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %R1045 = add i32 %ARG2, 6
  %R1047 = add i32 %R1045, 1
  %R1048 = sext i32 %R1047 to i64
  %R1049 = icmp ule i64 %R1048, 1152921504606846975
  %R10491 = zext i1 %R1049 to i32
  %cond = icmp ne i32 %R10491, 0
  br i1 %cond, label %L161, label %L162

L161:                                             ; preds = %L160
  %R1053 = bitcast %struct.lua_TValue* %load_target to i8*
  %5 = bitcast %struct.lua_State* %ARG1 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 88
  %8 = bitcast i8* %7 to i32*
  %load_target2 = load i32, i32* %8
  %R1056 = sext i32 %load_target2 to i64
  %R1057 = mul i64 %R1056, 16
  %R1059 = sext i32 %R1045 to i64
  %R1060 = mul i64 %R1059, 16
  %R1061 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R1053, i64 %R1057, i64 %R1060)
  store i8* %R1061, i8** %0
  br label %L163

L162:                                             ; preds = %L160
  %R1063 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R1063, i8** %0
  br label %L163

L163:                                             ; preds = %L162, %L161
  %9 = load i8*, i8** %0
  %R1066 = bitcast i8* %9 to %struct.lua_TValue*
  %10 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %11 = bitcast %struct.lua_TValue** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 64
  %13 = bitcast i8* %12 to %struct.lua_TValue**
  store %struct.lua_TValue* %R1066, %struct.lua_TValue** %13
  %14 = bitcast %struct.lua_State* %ARG1 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 88
  %17 = bitcast i8* %16 to i32*
  store i32 %R1045, i32* %17
  %R1073 = sext i32 %ARG2 to i64
  %R1074 = mul i64 %R1073, 16
  %18 = bitcast %struct.lua_TValue* %R1066 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %R1074
  %20 = bitcast i8* %19 to %struct.lua_TValue*
  %21 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %22 = bitcast %struct.lua_TValue** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 56
  %24 = bitcast i8* %23 to %struct.lua_TValue**
  store %struct.lua_TValue* %20, %struct.lua_TValue** %24
  call void @correctstack(%struct.lua_State* %ARG1, %struct.lua_TValue* %load_target)
  ret void
}

define internal void @luaD_reallocCI.17(%struct.lua_State* %ARG1, i32 %ARG2) {
L164:
  %0 = alloca i8*
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %2 = bitcast %struct.CallInfo** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 80
  %4 = bitcast i8* %3 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %4
  %R1082 = add i32 %ARG2, 1
  %R1083 = sext i32 %R1082 to i64
  %R1084 = icmp ule i64 %R1083, 461168601842738790
  %R10841 = zext i1 %R1084 to i32
  %cond = icmp ne i32 %R10841, 0
  br i1 %cond, label %L165, label %L166

L165:                                             ; preds = %L164
  %R1088 = bitcast %struct.CallInfo* %load_target to i8*
  %5 = bitcast %struct.lua_State* %ARG1 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 92
  %8 = bitcast i8* %7 to i32*
  %load_target2 = load i32, i32* %8
  %R1091 = sext i32 %load_target2 to i64
  %R1092 = mul i64 %R1091, 40
  %R1094 = sext i32 %ARG2 to i64
  %R1095 = mul i64 %R1094, 40
  %R1096 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R1088, i64 %R1092, i64 %R1095)
  store i8* %R1096, i8** %0
  br label %L167

L166:                                             ; preds = %L164
  %R1098 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R1098, i8** %0
  br label %L167

L167:                                             ; preds = %L166, %L165
  %9 = load i8*, i8** %0
  %R1101 = bitcast i8* %9 to %struct.CallInfo*
  %10 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %11 = bitcast %struct.CallInfo** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 80
  %13 = bitcast i8* %12 to %struct.CallInfo**
  store %struct.CallInfo* %R1101, %struct.CallInfo** %13
  %14 = bitcast %struct.lua_State* %ARG1 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 92
  %17 = bitcast i8* %16 to i32*
  store i32 %ARG2, i32* %17
  %18 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %19 = bitcast %struct.CallInfo** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 40
  %21 = bitcast i8* %20 to %struct.CallInfo**
  %load_target3 = load %struct.CallInfo*, %struct.CallInfo** %21
  %R1110 = sub %struct.CallInfo* %load_target3, %load_target
  %R1111 = sdiv %struct.CallInfo* %R1110, i64 40
  %R1112 = mul %struct.CallInfo* %R1111, i64 40
  %22 = bitcast %struct.CallInfo* %R1101 to i8*
  %23 = getelementptr inbounds i8, i8* %22, %struct.CallInfo* %R1112
  %24 = bitcast i8* %23 to %struct.CallInfo*
  %25 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %26 = bitcast %struct.CallInfo** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 40
  %28 = bitcast i8* %27 to %struct.CallInfo**
  store %struct.CallInfo* %24, %struct.CallInfo** %28
  %R1119 = sext i32 %ARG2 to i64
  %R1120 = mul i64 %R1119, 40
  %29 = bitcast %struct.CallInfo* %R1101 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %R1120
  %31 = bitcast i8* %30 to %struct.CallInfo*
  %32 = bitcast %struct.CallInfo* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 -40
  %34 = bitcast i8* %33 to %struct.CallInfo*
  %35 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %36 = bitcast %struct.CallInfo** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 72
  %38 = bitcast i8* %37 to %struct.CallInfo**
  store %struct.CallInfo* %34, %struct.CallInfo** %38
  ret void
}

define internal void @luaD_growstack.18(%struct.lua_State* %ARG1, i32 %ARG2) {
L168:
  %0 = bitcast %struct.lua_State* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 88
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R1127 = icmp sle i32 %ARG2, %load_target
  %R11271 = zext i1 %R1127 to i32
  %cond = icmp ne i32 %R11271, 0
  br i1 %cond, label %L169, label %L170

L169:                                             ; preds = %L168
  %R1131 = mul i32 %load_target, 2
  call void @luaD_reallocstack(%struct.lua_State* %ARG1, i32 %R1131)
  br label %L171

L170:                                             ; preds = %L168
  %R1136 = add i32 %load_target, %ARG2
  call void @luaD_reallocstack(%struct.lua_State* %ARG1, i32 %R1136)
  br label %L171

L171:                                             ; preds = %L170, %L169
  ret void
}

define internal %struct.CallInfo* @growCI(%struct.lua_State* %ARG1) {
L172:
  %0 = bitcast %struct.lua_State* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 92
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R1139 = icmp sgt i32 %load_target, 20000
  %R11391 = zext i1 %R1139 to i32
  %cond = icmp ne i32 %R11391, 0
  br i1 %cond, label %L173, label %L174

L173:                                             ; preds = %L172
  call void @luaD_throw(%struct.lua_State* %ARG1, i32 5)
  br label %L176

L174:                                             ; preds = %L172
  %R1144 = mul i32 %load_target, 2
  call void @luaD_reallocCI(%struct.lua_State* %ARG1, i32 %R1144)
  %4 = bitcast %struct.lua_State* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 92
  %7 = bitcast i8* %6 to i32*
  %load_target2 = load i32, i32* %7
  %R1147 = icmp sgt i32 %load_target2, 20000
  %R11473 = zext i1 %R1147 to i32
  %cond4 = icmp ne i32 %R11473, 0
  br i1 %cond4, label %L175, label %L176

L175:                                             ; preds = %L174
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0))
  br label %L176

L176:                                             ; preds = %L175, %L174, %L173
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %9 = bitcast %struct.CallInfo** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to %struct.CallInfo**
  %load_target5 = load %struct.CallInfo*, %struct.CallInfo** %11
  %12 = bitcast %struct.CallInfo* %load_target5 to i8*
  %13 = getelementptr inbounds i8, i8* %12, %struct.CallInfo* inttoptr (i64 40 to %struct.CallInfo*)
  %14 = bitcast i8* %13 to %struct.CallInfo*
  %15 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %16 = bitcast %struct.CallInfo** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %struct.CallInfo**
  store %struct.CallInfo* %14, %struct.CallInfo** %18
  ret %struct.CallInfo* %14
}

define internal %struct.lua_TValue* @adjust_varargs(%struct.lua_State* %ARG1, %struct.Proto* %ARG2, i32 %ARG3) {
L177:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.Proto* %ARG2 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 113
  %load_target = load i8, i8* %3
  %R1156 = zext i8 %load_target to i32
  store i32 %ARG3, i32* %0
  br label %L178

L178:                                             ; preds = %L179, %L177
  %4 = load i32, i32* %0
  %R1159 = icmp slt i32 %4, %R1156
  %R11591 = zext i1 %R1159 to i32
  %cond = icmp ne i32 %R11591, 0
  br i1 %cond, label %L179, label %L180

L179:                                             ; preds = %L178
  %5 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %6 = bitcast %struct.lua_TValue** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %8
  %9 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %10 = getelementptr inbounds i8, i8* %9, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %11 = bitcast i8* %10 to %struct.lua_TValue*
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  store %struct.lua_TValue* %11, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_TValue* %load_target2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19
  %R1164 = add i32 %4, 1
  store i32 %R1164, i32* %0
  br label %L178

L180:                                             ; preds = %L178
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %R1168 = sext i32 %4 to i64
  %R1169 = mul i64 %R1168, 16
  %R1170 = sub %struct.lua_TValue* %load_target3, i64 %R1169
  store i32 0, i32* %1
  br label %L181

L181:                                             ; preds = %L182, %L180
  %24 = load i32, i32* %1
  %R1175 = icmp slt i32 %24, %R1156
  %R11754 = zext i1 %R1175 to i32
  %cond5 = icmp ne i32 %R11754, 0
  br i1 %cond5, label %L182, label %L183

L182:                                             ; preds = %L181
  %R1178 = sext i32 %24 to i64
  %R1179 = mul i64 %R1178, 16
  %25 = bitcast %struct.lua_TValue* %R1170 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 %R1179
  %27 = bitcast i8* %26 to %struct.lua_TValue*
  %28 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %29 = bitcast %struct.lua_TValue** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to %struct.lua_TValue**
  %load_target6 = load %struct.lua_TValue*, %struct.lua_TValue** %31
  %32 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %33 = getelementptr inbounds i8, i8* %32, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %34 = bitcast i8* %33 to %struct.lua_TValue*
  %35 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %36 = bitcast %struct.lua_TValue** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 16
  %38 = bitcast i8* %37 to %struct.lua_TValue**
  store %struct.lua_TValue* %34, %struct.lua_TValue** %38
  %39 = bitcast %struct.lua_TValue* %27 to { [8 x i8] }*
  %40 = bitcast { [8 x i8] }* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = bitcast i8* %41 to { [8 x i8] }*
  %load_target7 = load { [8 x i8] }, { [8 x i8] }* %42
  %43 = bitcast %struct.lua_TValue* %load_target6 to { [8 x i8] }*
  %44 = bitcast { [8 x i8] }* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to { [8 x i8] }*
  store { [8 x i8] } %load_target7, { [8 x i8] }* %46
  %47 = bitcast %struct.lua_TValue* %27 to i32*
  %48 = bitcast i32* %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  %50 = bitcast i8* %49 to i32*
  %load_target8 = load i32, i32* %50
  %51 = bitcast %struct.lua_TValue* %load_target6 to i32*
  %52 = bitcast i32* %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 %load_target8, i32* %54
  %55 = bitcast %struct.lua_TValue* %27 to i32*
  %56 = bitcast i32* %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = bitcast i8* %57 to i32*
  store i32 0, i32* %58
  %R1197 = add i32 %24, 1
  store i32 %R1197, i32* %1
  br label %L181

L183:                                             ; preds = %L181
  ret %struct.lua_TValue* %load_target3
}

define internal %struct.lua_TValue* @tryfuncTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2) {
L184:
  %0 = alloca %struct.lua_TValue*
  %R1207 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i32 16)
  %R1209 = bitcast %struct.lua_TValue* %ARG2 to i8*
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 64
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %R1212 = bitcast %struct.lua_TValue* %load_target to i8*
  %R1213 = sub i8* %R1209, %R1212
  %5 = bitcast %struct.lua_TValue* %R1207 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R1217 = icmp eq i32 %load_target1, 6
  %R12172 = zext i1 %R1217 to i32
  %cond = icmp ne i32 %R12172, 0
  br i1 %cond, label %L186, label %L185

L185:                                             ; preds = %L184
  call void @luaG_typeerror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0))
  br label %L186

L186:                                             ; preds = %L185, %L184
  %9 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %10 = bitcast %struct.lua_TValue** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %12
  store %struct.lua_TValue* %load_target3, %struct.lua_TValue** %0
  br label %L187

L187:                                             ; preds = %L188, %L186
  %13 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %R1225 = icmp ugt %struct.lua_TValue* %13, %ARG2
  %R12254 = zext i1 %R1225 to i32
  %cond5 = icmp ne i32 %R12254, 0
  br i1 %cond5, label %L188, label %L189

L188:                                             ; preds = %L187
  %14 = bitcast %struct.lua_TValue* %13 to { [8 x i8] }*
  %15 = bitcast { [8 x i8] }* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 -16
  %17 = bitcast i8* %16 to { [8 x i8] }*
  %load_target6 = load { [8 x i8] }, { [8 x i8] }* %17
  %18 = bitcast %struct.lua_TValue* %13 to { [8 x i8] }*
  %19 = bitcast { [8 x i8] }* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to { [8 x i8] }*
  store { [8 x i8] } %load_target6, { [8 x i8] }* %21
  %22 = bitcast %struct.lua_TValue* %13 to i32*
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 -8
  %25 = bitcast i8* %24 to i32*
  %load_target7 = load i32, i32* %25
  %26 = bitcast %struct.lua_TValue* %13 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %load_target7, i32* %29
  %30 = bitcast %struct.lua_TValue* %13 to i8*
  %31 = getelementptr inbounds i8, i8* %30, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %32 = bitcast i8* %31 to %struct.lua_TValue*
  store %struct.lua_TValue* %32, %struct.lua_TValue** %0
  br label %L187

L189:                                             ; preds = %L187
  %33 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %34 = bitcast %struct.lua_TValue** %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 56
  %36 = bitcast i8* %35 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %36
  %R1240 = bitcast %struct.lua_TValue* %load_target8 to i8*
  %37 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %38 = bitcast %struct.lua_TValue** %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 16
  %40 = bitcast i8* %39 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %40
  %R1243 = bitcast %struct.lua_TValue* %load_target9 to i8*
  %R1244 = sub i8* %R1240, %R1243
  %R1245 = icmp sle i8* %R1244, i64 16
  %R124510 = zext i1 %R1245 to i32
  %cond11 = icmp ne i32 %R124510, 0
  br i1 %cond11, label %L190, label %L191

L190:                                             ; preds = %L189
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L191

L191:                                             ; preds = %L190, %L189
  %41 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %42 = bitcast %struct.lua_TValue** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 16
  %44 = bitcast i8* %43 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %44
  %45 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %46 = getelementptr inbounds i8, i8* %45, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %47 = bitcast i8* %46 to %struct.lua_TValue*
  %48 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %49 = bitcast %struct.lua_TValue** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 16
  %51 = bitcast i8* %50 to %struct.lua_TValue**
  store %struct.lua_TValue* %47, %struct.lua_TValue** %51
  %52 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %53 = bitcast %struct.lua_TValue** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 64
  %55 = bitcast i8* %54 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %55
  %R1252 = bitcast %struct.lua_TValue* %load_target13 to i8*
  %56 = getelementptr inbounds i8, i8* %R1252, %R1213
  %R1255 = bitcast i8* %56 to %struct.lua_TValue*
  %57 = bitcast %struct.lua_TValue* %R1207 to { [8 x i8] }*
  %58 = bitcast { [8 x i8] }* %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 0
  %60 = bitcast i8* %59 to { [8 x i8] }*
  %load_target14 = load { [8 x i8] }, { [8 x i8] }* %60
  %61 = bitcast %struct.lua_TValue* %R1255 to { [8 x i8] }*
  %62 = bitcast { [8 x i8] }* %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %64 = bitcast i8* %63 to { [8 x i8] }*
  store { [8 x i8] } %load_target14, { [8 x i8] }* %64
  %65 = bitcast %struct.lua_TValue* %R1207 to i32*
  %66 = bitcast i32* %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to i32*
  %load_target15 = load i32, i32* %68
  %69 = bitcast %struct.lua_TValue* %R1255 to i32*
  %70 = bitcast i32* %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 8
  %72 = bitcast i8* %71 to i32*
  store i32 %load_target15, i32* %72
  ret %struct.lua_TValue* %R1255
}

declare void @luaG_typeerror(%struct.lua_State*, %struct.lua_TValue*, i8*)

define internal i32 @luaD_precall(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i32 %ARG3) {
L192:
  %0 = alloca %struct.lua_TValue*
  %1 = alloca %struct.CallInfo*
  %2 = alloca %struct.lua_TValue*
  %3 = alloca %struct.lua_TValue*
  %4 = alloca %struct.lua_TValue*
  %5 = alloca %struct.CallInfo*
  %6 = alloca i32
  %7 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  %load_target = load i32, i32* %10
  %R1269 = icmp eq i32 %load_target, 6
  %R12691 = zext i1 %R1269 to i32
  store %struct.lua_TValue* %ARG2, %struct.lua_TValue** %0
  %cond = icmp ne i32 %R12691, 0
  br i1 %cond, label %L194, label %L193

L193:                                             ; preds = %L192
  %R1272 = call %struct.lua_TValue* @tryfuncTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2)
  store %struct.lua_TValue* %R1272, %struct.lua_TValue** %0
  br label %L194

L194:                                             ; preds = %L193, %L192
  %11 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %R1274 = bitcast %struct.lua_TValue* %11 to i8*
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 64
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R1277 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %R1278 = sub i8* %R1274, %R1277
  %16 = bitcast %struct.lua_TValue* %11 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %19
  %20 = bitcast %struct.lua_State* %ARG1 to i32**
  %21 = bitcast i32** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 48
  %23 = bitcast i8* %22 to i32**
  %load_target4 = load i32*, i32** %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %25 = bitcast %struct.CallInfo** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 40
  %27 = bitcast i8* %26 to %struct.CallInfo**
  %load_target5 = load %struct.CallInfo*, %struct.CallInfo** %27
  %28 = bitcast %struct.CallInfo* %load_target5 to i32**
  %29 = bitcast i32** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 24
  %31 = bitcast i8* %30 to i32**
  store i32* %load_target4, i32** %31
  %32 = bitcast { [184 x i8] }* %load_target3 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 10
  %load_target6 = load i8, i8* %33
  %cond7 = icmp ne i8 %load_target6, 0
  br i1 %cond7, label %L208, label %L195

L195:                                             ; preds = %L194
  %34 = bitcast { [184 x i8] }* %load_target3 to %struct.Proto**
  %35 = bitcast %struct.Proto** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 32
  %37 = bitcast i8* %36 to %struct.Proto**
  %load_target8 = load %struct.Proto*, %struct.Proto** %37
  %38 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %39 = bitcast %struct.lua_TValue** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 56
  %41 = bitcast i8* %40 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %41
  %R1293 = bitcast %struct.lua_TValue* %load_target9 to i8*
  %42 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %43 = bitcast %struct.lua_TValue** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 16
  %45 = bitcast i8* %44 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %45
  %R1296 = bitcast %struct.lua_TValue* %load_target10 to i8*
  %R1297 = sub i8* %R1293, %R1296
  %46 = bitcast %struct.Proto* %load_target8 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 115
  %load_target11 = load i8, i8* %47
  %R1300 = zext i8 %load_target11 to i32
  %R1301 = mul i32 %R1300, 16
  %R1302 = sext i32 %R1301 to i64
  %R1303 = icmp sle i8* %R1297, i64 %R1302
  %R130312 = zext i1 %R1303 to i32
  %cond13 = icmp ne i32 %R130312, 0
  br i1 %cond13, label %L196, label %L197

L196:                                             ; preds = %L195
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 %R1300)
  br label %L197

L197:                                             ; preds = %L196, %L195
  %48 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %49 = bitcast %struct.lua_TValue** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 64
  %51 = bitcast i8* %50 to %struct.lua_TValue**
  %load_target14 = load %struct.lua_TValue*, %struct.lua_TValue** %51
  %R1310 = bitcast %struct.lua_TValue* %load_target14 to i8*
  %52 = getelementptr inbounds i8, i8* %R1310, %R1278
  %R1313 = bitcast i8* %52 to %struct.lua_TValue*
  %53 = bitcast %struct.Proto* %load_target8 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 114
  %load_target15 = load i8, i8* %54
  %cond16 = icmp ne i8 %load_target15, 0
  br i1 %cond16, label %L200, label %L198

L198:                                             ; preds = %L197
  %55 = bitcast %struct.lua_TValue* %R1313 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to %struct.lua_TValue*
  %58 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %59 = bitcast %struct.lua_TValue** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 16
  %61 = bitcast i8* %60 to %struct.lua_TValue**
  %load_target17 = load %struct.lua_TValue*, %struct.lua_TValue** %61
  %62 = bitcast %struct.Proto* %load_target8 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 113
  %load_target18 = load i8, i8* %63
  %R1323 = zext i8 %load_target18 to i64
  %R1324 = mul i64 %R1323, 16
  %64 = bitcast %struct.lua_TValue* %57 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %R1324
  %66 = bitcast i8* %65 to %struct.lua_TValue*
  %R1326 = icmp ugt %struct.lua_TValue* %load_target17, %66
  %R132619 = zext i1 %R1326 to i32
  store %struct.lua_TValue* %R1313, %struct.lua_TValue** %2
  store %struct.lua_TValue* %57, %struct.lua_TValue** %3
  %cond20 = icmp ne i32 %R132619, 0
  br i1 %cond20, label %L199, label %L201

L199:                                             ; preds = %L198
  %67 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %68 = bitcast %struct.lua_TValue** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast i8* %69 to %struct.lua_TValue**
  store %struct.lua_TValue* %66, %struct.lua_TValue** %70
  store %struct.lua_TValue* %57, %struct.lua_TValue** %3
  br label %L201

L200:                                             ; preds = %L197
  %71 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %72 = bitcast %struct.lua_TValue** %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 16
  %74 = bitcast i8* %73 to %struct.lua_TValue**
  %load_target21 = load %struct.lua_TValue*, %struct.lua_TValue** %74
  %R1337 = sub %struct.lua_TValue* %load_target21, %R1313
  %R1338 = sdiv %struct.lua_TValue* %R1337, i64 16
  %R1339 = ptrtoint %struct.lua_TValue* %R1338 to i32
  %R1340 = add i32 %R1339, -1
  %R1344 = call %struct.lua_TValue* @adjust_varargs(%struct.lua_State* %ARG1, %struct.Proto* %load_target8, i32 %R1340)
  %75 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %76 = bitcast %struct.lua_TValue** %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 64
  %78 = bitcast i8* %77 to %struct.lua_TValue**
  %load_target22 = load %struct.lua_TValue*, %struct.lua_TValue** %78
  %R1347 = bitcast %struct.lua_TValue* %load_target22 to i8*
  %79 = getelementptr inbounds i8, i8* %R1347, %R1278
  %R1350 = bitcast i8* %79 to %struct.lua_TValue*
  store %struct.lua_TValue* %R1350, %struct.lua_TValue** %2
  store %struct.lua_TValue* %R1344, %struct.lua_TValue** %3
  br label %L201

L201:                                             ; preds = %L200, %L199, %L198
  %80 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %81 = bitcast %struct.CallInfo** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 40
  %83 = bitcast i8* %82 to %struct.CallInfo**
  %load_target23 = load %struct.CallInfo*, %struct.CallInfo** %83
  %84 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %85 = bitcast %struct.CallInfo** %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 72
  %87 = bitcast i8* %86 to %struct.CallInfo**
  %load_target24 = load %struct.CallInfo*, %struct.CallInfo** %87
  %R1355 = icmp eq %struct.CallInfo* %load_target23, %load_target24
  %R135525 = zext i1 %R1355 to i32
  %cond26 = icmp ne i32 %R135525, 0
  br i1 %cond26, label %L202, label %L203

L202:                                             ; preds = %L201
  %R1357 = call %struct.CallInfo* @growCI(%struct.lua_State* %ARG1)
  store %struct.CallInfo* %R1357, %struct.CallInfo** %1
  br label %L204

L203:                                             ; preds = %L201
  %88 = bitcast %struct.CallInfo* %load_target23 to i8*
  %89 = getelementptr inbounds i8, i8* %88, %struct.CallInfo* inttoptr (i64 40 to %struct.CallInfo*)
  %90 = bitcast i8* %89 to %struct.CallInfo*
  %91 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %92 = bitcast %struct.CallInfo** %91 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 40
  %94 = bitcast i8* %93 to %struct.CallInfo**
  store %struct.CallInfo* %90, %struct.CallInfo** %94
  store %struct.CallInfo* %90, %struct.CallInfo** %1
  br label %L204

L204:                                             ; preds = %L203, %L202
  %95 = load %struct.CallInfo*, %struct.CallInfo** %1
  %96 = load %struct.lua_TValue*, %struct.lua_TValue** %2
  %97 = bitcast %struct.CallInfo* %95 to %struct.lua_TValue**
  %98 = bitcast %struct.lua_TValue** %97 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 8
  %100 = bitcast i8* %99 to %struct.lua_TValue**
  store %struct.lua_TValue* %96, %struct.lua_TValue** %100
  %101 = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %102 = bitcast %struct.CallInfo* %95 to %struct.lua_TValue**
  %103 = bitcast %struct.lua_TValue** %102 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 0
  %105 = bitcast i8* %104 to %struct.lua_TValue**
  store %struct.lua_TValue* %101, %struct.lua_TValue** %105
  %106 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %107 = bitcast %struct.lua_TValue** %106 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 24
  %109 = bitcast i8* %108 to %struct.lua_TValue**
  store %struct.lua_TValue* %101, %struct.lua_TValue** %109
  %110 = bitcast %struct.Proto* %load_target8 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 115
  %load_target27 = load i8, i8* %111
  %R1372 = zext i8 %load_target27 to i64
  %R1373 = mul i64 %R1372, 16
  %112 = bitcast %struct.lua_TValue* %101 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %R1373
  %114 = bitcast i8* %113 to %struct.lua_TValue*
  %115 = bitcast %struct.CallInfo* %95 to %struct.lua_TValue**
  %116 = bitcast %struct.lua_TValue** %115 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = bitcast i8* %117 to %struct.lua_TValue**
  store %struct.lua_TValue* %114, %struct.lua_TValue** %118
  %119 = bitcast %struct.Proto* %load_target8 to i32**
  %120 = bitcast i32** %119 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 24
  %122 = bitcast i8* %121 to i32**
  %load_target28 = load i32*, i32** %122
  %123 = bitcast %struct.lua_State* %ARG1 to i32**
  %124 = bitcast i32** %123 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 48
  %126 = bitcast i8* %125 to i32**
  store i32* %load_target28, i32** %126
  %127 = bitcast %struct.CallInfo* %95 to i32*
  %128 = bitcast i32* %127 to i8*
  %129 = getelementptr inbounds i8, i8* %128, i64 36
  %130 = bitcast i8* %129 to i32*
  store i32 0, i32* %130
  %131 = bitcast %struct.CallInfo* %95 to i32*
  %132 = bitcast i32* %131 to i8*
  %133 = getelementptr inbounds i8, i8* %132, i64 32
  %134 = bitcast i8* %133 to i32*
  store i32 %ARG3, i32* %134
  %135 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %136 = bitcast %struct.lua_TValue** %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 16
  %138 = bitcast i8* %137 to %struct.lua_TValue**
  %load_target29 = load %struct.lua_TValue*, %struct.lua_TValue** %138
  store %struct.lua_TValue* %load_target29, %struct.lua_TValue** %4
  br label %L205

L205:                                             ; preds = %L206, %L204
  %139 = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %140 = bitcast %struct.CallInfo* %95 to %struct.lua_TValue**
  %141 = bitcast %struct.lua_TValue** %140 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 16
  %143 = bitcast i8* %142 to %struct.lua_TValue**
  %load_target30 = load %struct.lua_TValue*, %struct.lua_TValue** %143
  %R1387 = icmp ult %struct.lua_TValue* %139, %load_target30
  %R138731 = zext i1 %R1387 to i32
  %cond32 = icmp ne i32 %R138731, 0
  br i1 %cond32, label %L206, label %L207

L206:                                             ; preds = %L205
  %144 = bitcast %struct.lua_TValue* %139 to i32*
  %145 = bitcast i32* %144 to i8*
  %146 = getelementptr inbounds i8, i8* %145, i64 8
  %147 = bitcast i8* %146 to i32*
  store i32 0, i32* %147
  %148 = bitcast %struct.lua_TValue* %139 to i8*
  %149 = getelementptr inbounds i8, i8* %148, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %150 = bitcast i8* %149 to %struct.lua_TValue*
  store %struct.lua_TValue* %150, %struct.lua_TValue** %4
  br label %L205

L207:                                             ; preds = %L205
  %151 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %152 = bitcast %struct.lua_TValue** %151 to i8*
  %153 = getelementptr inbounds i8, i8* %152, i64 16
  %154 = bitcast i8* %153 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target30, %struct.lua_TValue** %154
  store i32 0, i32* %6
  br label %L216

L208:                                             ; preds = %L194
  %155 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %156 = bitcast %struct.lua_TValue** %155 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 56
  %158 = bitcast i8* %157 to %struct.lua_TValue**
  %load_target33 = load %struct.lua_TValue*, %struct.lua_TValue** %158
  %R1397 = bitcast %struct.lua_TValue* %load_target33 to i8*
  %159 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %160 = bitcast %struct.lua_TValue** %159 to i8*
  %161 = getelementptr inbounds i8, i8* %160, i64 16
  %162 = bitcast i8* %161 to %struct.lua_TValue**
  %load_target34 = load %struct.lua_TValue*, %struct.lua_TValue** %162
  %R1400 = bitcast %struct.lua_TValue* %load_target34 to i8*
  %R1401 = sub i8* %R1397, %R1400
  %R1402 = icmp sle i8* %R1401, i64 320
  %R140235 = zext i1 %R1402 to i32
  %cond36 = icmp ne i32 %R140235, 0
  br i1 %cond36, label %L209, label %L210

L209:                                             ; preds = %L208
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 20)
  br label %L210

L210:                                             ; preds = %L209, %L208
  %163 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %164 = bitcast %struct.CallInfo** %163 to i8*
  %165 = getelementptr inbounds i8, i8* %164, i64 40
  %166 = bitcast i8* %165 to %struct.CallInfo**
  %load_target37 = load %struct.CallInfo*, %struct.CallInfo** %166
  %167 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %168 = bitcast %struct.CallInfo** %167 to i8*
  %169 = getelementptr inbounds i8, i8* %168, i64 72
  %170 = bitcast i8* %169 to %struct.CallInfo**
  %load_target38 = load %struct.CallInfo*, %struct.CallInfo** %170
  %R1408 = icmp eq %struct.CallInfo* %load_target37, %load_target38
  %R140839 = zext i1 %R1408 to i32
  %cond40 = icmp ne i32 %R140839, 0
  br i1 %cond40, label %L211, label %L212

L211:                                             ; preds = %L210
  %R1410 = call %struct.CallInfo* @growCI(%struct.lua_State* %ARG1)
  store %struct.CallInfo* %R1410, %struct.CallInfo** %5
  br label %L213

L212:                                             ; preds = %L210
  %171 = bitcast %struct.CallInfo* %load_target37 to i8*
  %172 = getelementptr inbounds i8, i8* %171, %struct.CallInfo* inttoptr (i64 40 to %struct.CallInfo*)
  %173 = bitcast i8* %172 to %struct.CallInfo*
  %174 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %175 = bitcast %struct.CallInfo** %174 to i8*
  %176 = getelementptr inbounds i8, i8* %175, i64 40
  %177 = bitcast i8* %176 to %struct.CallInfo**
  store %struct.CallInfo* %173, %struct.CallInfo** %177
  store %struct.CallInfo* %173, %struct.CallInfo** %5
  br label %L213

L213:                                             ; preds = %L212, %L211
  %178 = load %struct.CallInfo*, %struct.CallInfo** %5
  %179 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %180 = bitcast %struct.lua_TValue** %179 to i8*
  %181 = getelementptr inbounds i8, i8* %180, i64 64
  %182 = bitcast i8* %181 to %struct.lua_TValue**
  %load_target41 = load %struct.lua_TValue*, %struct.lua_TValue** %182
  %R1418 = bitcast %struct.lua_TValue* %load_target41 to i8*
  %183 = getelementptr inbounds i8, i8* %R1418, %R1278
  %R1421 = bitcast i8* %183 to %struct.lua_TValue*
  %184 = bitcast %struct.CallInfo* %178 to %struct.lua_TValue**
  %185 = bitcast %struct.lua_TValue** %184 to i8*
  %186 = getelementptr inbounds i8, i8* %185, i64 8
  %187 = bitcast i8* %186 to %struct.lua_TValue**
  store %struct.lua_TValue* %R1421, %struct.lua_TValue** %187
  %188 = bitcast %struct.lua_TValue* %R1421 to i8*
  %189 = getelementptr inbounds i8, i8* %188, i64 16
  %190 = bitcast i8* %189 to %struct.lua_TValue*
  %191 = bitcast %struct.CallInfo* %178 to %struct.lua_TValue**
  %192 = bitcast %struct.lua_TValue** %191 to i8*
  %193 = getelementptr inbounds i8, i8* %192, i64 0
  %194 = bitcast i8* %193 to %struct.lua_TValue**
  store %struct.lua_TValue* %190, %struct.lua_TValue** %194
  %195 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %196 = bitcast %struct.lua_TValue** %195 to i8*
  %197 = getelementptr inbounds i8, i8* %196, i64 24
  %198 = bitcast i8* %197 to %struct.lua_TValue**
  store %struct.lua_TValue* %190, %struct.lua_TValue** %198
  %199 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %200 = bitcast %struct.lua_TValue** %199 to i8*
  %201 = getelementptr inbounds i8, i8* %200, i64 16
  %202 = bitcast i8* %201 to %struct.lua_TValue**
  %load_target42 = load %struct.lua_TValue*, %struct.lua_TValue** %202
  %203 = bitcast %struct.lua_TValue* %load_target42 to i8*
  %204 = getelementptr inbounds i8, i8* %203, i64 320
  %205 = bitcast i8* %204 to %struct.lua_TValue*
  %206 = bitcast %struct.CallInfo* %178 to %struct.lua_TValue**
  %207 = bitcast %struct.lua_TValue** %206 to i8*
  %208 = getelementptr inbounds i8, i8* %207, i64 16
  %209 = bitcast i8* %208 to %struct.lua_TValue**
  store %struct.lua_TValue* %205, %struct.lua_TValue** %209
  %210 = bitcast %struct.CallInfo* %178 to i32*
  %211 = bitcast i32* %210 to i8*
  %212 = getelementptr inbounds i8, i8* %211, i64 32
  %213 = bitcast i8* %212 to i32*
  store i32 %ARG3, i32* %213
  %214 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %215 = bitcast %struct.CallInfo** %214 to i8*
  %216 = getelementptr inbounds i8, i8* %215, i64 40
  %217 = bitcast i8* %216 to %struct.CallInfo**
  %load_target43 = load %struct.CallInfo*, %struct.CallInfo** %217
  %218 = bitcast %struct.CallInfo* %load_target43 to %struct.lua_TValue**
  %219 = bitcast %struct.lua_TValue** %218 to i8*
  %220 = getelementptr inbounds i8, i8* %219, i64 8
  %221 = bitcast i8* %220 to %struct.lua_TValue**
  %load_target44 = load %struct.lua_TValue*, %struct.lua_TValue** %221
  %222 = bitcast %struct.lua_TValue* %load_target44 to { [184 x i8] }**
  %223 = bitcast { [184 x i8] }** %222 to i8*
  %224 = getelementptr inbounds i8, i8* %223, i64 0
  %225 = bitcast i8* %224 to { [184 x i8] }**
  %load_target45 = load { [184 x i8] }*, { [184 x i8] }** %225
  %226 = bitcast { [184 x i8] }* %load_target45 to i32 (%struct.lua_State*)**
  %227 = bitcast i32 (%struct.lua_State*)** %226 to i8*
  %228 = getelementptr inbounds i8, i8* %227, i64 32
  %229 = bitcast i8* %228 to i32 (%struct.lua_State*)**
  %load_target46 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %229
  %R1440 = call i32 %load_target46(%struct.lua_State* %ARG1)
  %R1442 = icmp slt i32 %R1440, 0
  %R144247 = zext i1 %R1442 to i32
  %cond48 = icmp ne i32 %R144247, 0
  br i1 %cond48, label %L214, label %L215

L214:                                             ; preds = %L213
  store i32 2, i32* %6
  br label %L216

L215:                                             ; preds = %L213
  %230 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %231 = bitcast %struct.lua_TValue** %230 to i8*
  %232 = getelementptr inbounds i8, i8* %231, i64 16
  %233 = bitcast i8* %232 to %struct.lua_TValue**
  %load_target49 = load %struct.lua_TValue*, %struct.lua_TValue** %233
  %R1447 = sext i32 %R1440 to i64
  %R1448 = mul i64 %R1447, 16
  %R1449 = sub %struct.lua_TValue* %load_target49, i64 %R1448
  %R1450 = call i32 @luaD_poscall(%struct.lua_State* %ARG1, %struct.lua_TValue* %R1449)
  store i32 1, i32* %6
  br label %L216

L216:                                             ; preds = %L215, %L214, %L207
  %234 = load i32, i32* %6
  ret i32 %234
}

declare i32 @luaD_poscall(%struct.lua_State*, %struct.lua_TValue*)

define internal i32 @luaD_poscall.21(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2) {
L217:
  %0 = alloca i32
  %1 = alloca %struct.lua_TValue*
  %2 = alloca %struct.lua_TValue*
  %3 = alloca i32
  %4 = alloca %struct.lua_TValue*
  %5 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %6 = bitcast %struct.CallInfo** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 40
  %8 = bitcast i8* %7 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %8
  %9 = bitcast %struct.CallInfo* %load_target to i8*
  %10 = getelementptr inbounds i8, i8* %9, %struct.CallInfo* inttoptr (i64 -40 to %struct.CallInfo*)
  %11 = bitcast i8* %10 to %struct.CallInfo*
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %13 = bitcast %struct.CallInfo** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 40
  %15 = bitcast i8* %14 to %struct.CallInfo**
  store %struct.CallInfo* %11, %struct.CallInfo** %15
  %16 = bitcast %struct.CallInfo* %load_target to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %19
  %20 = bitcast %struct.CallInfo* %load_target to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to i32*
  %load_target2 = load i32, i32* %23
  %24 = bitcast %struct.CallInfo* %load_target to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 -40
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %29 = bitcast %struct.lua_TValue** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 24
  %31 = bitcast i8* %30 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target3, %struct.lua_TValue** %31
  %32 = bitcast %struct.CallInfo* %load_target to i32**
  %33 = bitcast i32** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 -16
  %35 = bitcast i8* %34 to i32**
  %load_target4 = load i32*, i32** %35
  %36 = bitcast %struct.lua_State* %ARG1 to i32**
  %37 = bitcast i32** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 48
  %39 = bitcast i8* %38 to i32**
  store i32* %load_target4, i32** %39
  store %struct.lua_TValue* %ARG2, %struct.lua_TValue** %1
  store %struct.lua_TValue* %load_target1, %struct.lua_TValue** %4
  store %struct.lua_TValue* %load_target1, %struct.lua_TValue** %2
  store i32 %load_target2, i32* %0
  br label %L218

L218:                                             ; preds = %L220, %L217
  %40 = load i32, i32* %0
  store i32 %40, i32* %3
  %cond = icmp ne i32 %40, 0
  br i1 %cond, label %L219, label %L221

L219:                                             ; preds = %L218
  %41 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  %42 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %43 = bitcast %struct.lua_TValue** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 16
  %45 = bitcast i8* %44 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %45
  %R1472 = icmp ult %struct.lua_TValue* %41, %load_target5
  %R14726 = zext i1 %R1472 to i32
  %cond7 = icmp ne i32 %R14726, 0
  br i1 %cond7, label %L220, label %L221

L220:                                             ; preds = %L219
  %46 = bitcast %struct.lua_TValue* %41 to i8*
  %47 = getelementptr inbounds i8, i8* %46, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %48 = bitcast i8* %47 to %struct.lua_TValue*
  %49 = load %struct.lua_TValue*, %struct.lua_TValue** %2
  %50 = bitcast %struct.lua_TValue* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %52 = bitcast i8* %51 to %struct.lua_TValue*
  %53 = bitcast %struct.lua_TValue* %41 to { [8 x i8] }*
  %54 = bitcast { [8 x i8] }* %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 0
  %56 = bitcast i8* %55 to { [8 x i8] }*
  %load_target8 = load { [8 x i8] }, { [8 x i8] }* %56
  %57 = bitcast %struct.lua_TValue* %49 to { [8 x i8] }*
  %58 = bitcast { [8 x i8] }* %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 0
  %60 = bitcast i8* %59 to { [8 x i8] }*
  store { [8 x i8] } %load_target8, { [8 x i8] }* %60
  %61 = bitcast %struct.lua_TValue* %41 to i32*
  %62 = bitcast i32* %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to i32*
  %load_target9 = load i32, i32* %64
  %65 = bitcast %struct.lua_TValue* %49 to i32*
  %66 = bitcast i32* %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 %load_target9, i32* %68
  store %struct.lua_TValue* %48, %struct.lua_TValue** %1
  store %struct.lua_TValue* %52, %struct.lua_TValue** %4
  store %struct.lua_TValue* %52, %struct.lua_TValue** %2
  %R1485 = add i32 %40, -1
  store i32 %R1485, i32* %0
  br label %L218

L221:                                             ; preds = %L222, %L219, %L218
  %69 = load i32, i32* %3
  %R1487 = add i32 %69, -1
  %R1488 = icmp sgt i32 %69, 0
  %R148810 = zext i1 %R1488 to i32
  store i32 %R1487, i32* %3
  %70 = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %cond11 = icmp ne i32 %R148810, 0
  br i1 %cond11, label %L222, label %L223

L222:                                             ; preds = %L221
  %71 = bitcast %struct.lua_TValue* %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %73 = bitcast i8* %72 to %struct.lua_TValue*
  %74 = bitcast %struct.lua_TValue* %70 to i32*
  %75 = bitcast i32* %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 0, i32* %77
  store %struct.lua_TValue* %73, %struct.lua_TValue** %4
  br label %L221

L223:                                             ; preds = %L221
  %78 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %79 = bitcast %struct.lua_TValue** %78 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 16
  %81 = bitcast i8* %80 to %struct.lua_TValue**
  store %struct.lua_TValue* %70, %struct.lua_TValue** %81
  %R1494 = add i32 %load_target2, 1
  ret i32 %R1494
}

define internal void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i32 %ARG3) {
L224:
  %0 = bitcast %struct.lua_State* %ARG1 to i16*
  %1 = bitcast i16* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 96
  %3 = bitcast i8* %2 to i16*
  %load_target = load i16, i16* %3
  %R1498 = add i16 %load_target, 1
  %4 = bitcast %struct.lua_State* %ARG1 to i16*
  %5 = bitcast i16* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 96
  %7 = bitcast i8* %6 to i16*
  store i16 %R1498, i16* %7
  %R1499 = zext i16 %R1498 to i32
  %R1500 = icmp sge i32 %R1499, 200
  %R15001 = zext i1 %R1500 to i32
  %cond = icmp ne i32 %R15001, 0
  br i1 %cond, label %L225, label %L229

L225:                                             ; preds = %L224
  %R1503 = zext i16 %R1498 to i32
  %R1504 = icmp eq i32 %R1503, 200
  %R15042 = zext i1 %R1504 to i32
  %cond3 = icmp ne i32 %R15042, 0
  br i1 %cond3, label %L226, label %L227

L226:                                             ; preds = %L225
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0))
  br label %L229

L227:                                             ; preds = %L225
  %R1509 = zext i16 %R1498 to i32
  %R1510 = icmp sge i32 %R1509, 225
  %R15104 = zext i1 %R1510 to i32
  %cond5 = icmp ne i32 %R15104, 0
  br i1 %cond5, label %L228, label %L229

L228:                                             ; preds = %L227
  call void @luaD_throw(%struct.lua_State* %ARG1, i32 5)
  br label %L229

L229:                                             ; preds = %L228, %L227, %L226, %L224
  %R1515 = call i32 @luaD_precall(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i32 %ARG3)
  %cond6 = icmp ne i32 %R1515, 0
  br i1 %cond6, label %L231, label %L230

L230:                                             ; preds = %L229
  call void @luaV_execute(%struct.lua_State* %ARG1, i32 1)
  br label %L231

L231:                                             ; preds = %L230, %L229
  %8 = bitcast %struct.lua_State* %ARG1 to i16*
  %9 = bitcast i16* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 96
  %11 = bitcast i8* %10 to i16*
  %load_target7 = load i16, i16* %11
  %R1520 = add i16 %load_target7, -1
  %12 = bitcast %struct.lua_State* %ARG1 to i16*
  %13 = bitcast i16* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 96
  %15 = bitcast i8* %14 to i16*
  store i16 %R1520, i16* %15
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %17 = bitcast %struct.global_State** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 32
  %19 = bitcast i8* %18 to %struct.global_State**
  %load_target8 = load %struct.global_State*, %struct.global_State** %19
  %20 = bitcast %struct.global_State* %load_target8 to i64*
  %21 = bitcast i64* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 120
  %23 = bitcast i8* %22 to i64*
  %load_target9 = load i64, i64* %23
  %24 = bitcast %struct.global_State* %load_target8 to i64*
  %25 = bitcast i64* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 112
  %27 = bitcast i8* %26 to i64*
  %load_target10 = load i64, i64* %27
  %R1527 = icmp uge i64 %load_target9, %load_target10
  %R152711 = zext i1 %R1527 to i32
  %cond12 = icmp ne i32 %R152711, 0
  br i1 %cond12, label %L232, label %L233

L232:                                             ; preds = %L231
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L233

L233:                                             ; preds = %L232, %L231
  ret void
}

declare void @luaV_execute(%struct.lua_State*, i32)

declare void @luaC_step(%struct.lua_State*)

define internal i32 @luaD_pcall(%struct.lua_State* %ARG1, void (%struct.lua_State*, i8*)* %ARG2, i8* %ARG3, i64 %ARG4, i64 %ARG5) {
L234:
  %0 = bitcast %struct.lua_State* %ARG1 to i16*
  %1 = bitcast i16* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 96
  %3 = bitcast i8* %2 to i16*
  %load_target = load i16, i16* %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %5 = bitcast %struct.CallInfo** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to %struct.CallInfo**
  %load_target1 = load %struct.CallInfo*, %struct.CallInfo** %7
  %R1533 = bitcast %struct.CallInfo* %load_target1 to i8*
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %9 = bitcast %struct.CallInfo** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 80
  %11 = bitcast i8* %10 to %struct.CallInfo**
  %load_target2 = load %struct.CallInfo*, %struct.CallInfo** %11
  %R1536 = bitcast %struct.CallInfo* %load_target2 to i8*
  %R1537 = sub i8* %R1533, %R1536
  %12 = bitcast %struct.lua_State* %ARG1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 101
  %load_target3 = load i8, i8* %13
  %14 = bitcast %struct.lua_State* %ARG1 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 176
  %17 = bitcast i8* %16 to i64*
  %load_target4 = load i64, i64* %17
  %18 = bitcast %struct.lua_State* %ARG1 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 176
  %21 = bitcast i8* %20 to i64*
  store i64 %ARG5, i64* %21
  %R1547 = call i32 @luaD_rawrunprotected(%struct.lua_State* %ARG1, void (%struct.lua_State*, i8*)* %ARG2, i8* %ARG3)
  %cond = icmp ne i32 %R1547, 0
  br i1 %cond, label %L235, label %L236

L235:                                             ; preds = %L234
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 64
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %25
  %R1552 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %26 = getelementptr inbounds i8, i8* %R1552, i64 %ARG4
  %R1555 = bitcast i8* %26 to %struct.lua_TValue*
  call void @luaF_close(%struct.lua_State* %ARG1, %struct.lua_TValue* %R1555)
  call void @luaD_seterrorobj(%struct.lua_State* %ARG1, i32 %R1547, %struct.lua_TValue* %R1555)
  %27 = bitcast %struct.lua_State* %ARG1 to i16*
  %28 = bitcast i16* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 96
  %30 = bitcast i8* %29 to i16*
  store i16 %load_target, i16* %30
  %31 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %32 = bitcast %struct.CallInfo** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 80
  %34 = bitcast i8* %33 to %struct.CallInfo**
  %load_target6 = load %struct.CallInfo*, %struct.CallInfo** %34
  %R1565 = bitcast %struct.CallInfo* %load_target6 to i8*
  %35 = getelementptr inbounds i8, i8* %R1565, %R1537
  %R1568 = bitcast i8* %35 to %struct.CallInfo*
  %36 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %37 = bitcast %struct.CallInfo** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 40
  %39 = bitcast i8* %38 to %struct.CallInfo**
  store %struct.CallInfo* %R1568, %struct.CallInfo** %39
  %40 = bitcast %struct.CallInfo* %R1568 to %struct.lua_TValue**
  %41 = bitcast %struct.lua_TValue** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %43
  %44 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %45 = bitcast %struct.lua_TValue** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 24
  %47 = bitcast i8* %46 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target7, %struct.lua_TValue** %47
  %48 = bitcast %struct.CallInfo* %R1568 to i32**
  %49 = bitcast i32** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 24
  %51 = bitcast i8* %50 to i32**
  %load_target8 = load i32*, i32** %51
  %52 = bitcast %struct.lua_State* %ARG1 to i32**
  %53 = bitcast i32** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 48
  %55 = bitcast i8* %54 to i32**
  store i32* %load_target8, i32** %55
  %56 = bitcast %struct.lua_State* %ARG1 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 101
  store i8 %load_target3, i8* %57
  call void @restore_stack_limit(%struct.lua_State* %ARG1)
  br label %L236

L236:                                             ; preds = %L235, %L234
  %58 = bitcast %struct.lua_State* %ARG1 to i64*
  %59 = bitcast i64* %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 176
  %61 = bitcast i8* %60 to i64*
  store i64 %load_target4, i64* %61
  ret i32 %R1547
}

define internal void @f_parser(%struct.lua_State* %ARG1, i8* %ARG2) {
L237:
  %0 = alloca i32
  %R1586 = bitcast i8* %ARG2 to %struct.SParser*
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %2 = bitcast %struct.global_State** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %4
  %5 = bitcast %struct.global_State* %load_target to i64*
  %6 = bitcast i64* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 120
  %8 = bitcast i8* %7 to i64*
  %load_target1 = load i64, i64* %8
  %9 = bitcast %struct.global_State* %load_target to i64*
  %10 = bitcast i64* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 112
  %12 = bitcast i8* %11 to i64*
  %load_target2 = load i64, i64* %12
  %R1593 = icmp uge i64 %load_target1, %load_target2
  %R15933 = zext i1 %R1593 to i32
  %cond = icmp ne i32 %R15933, 0
  br i1 %cond, label %L238, label %L239

L238:                                             ; preds = %L237
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L239

L239:                                             ; preds = %L238, %L237
  %13 = bitcast %struct.SParser* %R1586 to %struct.Zio**
  %14 = bitcast %struct.Zio** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to %struct.Zio**
  %load_target4 = load %struct.Zio*, %struct.Zio** %16
  %17 = bitcast %struct.SParser* %R1586 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i32 8
  %19 = bitcast i8* %18 to %struct.SParser*
  %20 = bitcast %struct.SParser* %R1586 to i8**
  %21 = bitcast i8** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to i8**
  %load_target5 = load i8*, i8** %23
  %R1602 = call %struct.Proto* @luaY_parser(%struct.lua_State* %ARG1, %struct.Zio* %load_target4, %struct.SParser* %19, i8* %load_target5)
  %24 = bitcast %struct.Proto* %R1602 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 112
  %load_target6 = load i8, i8* %25
  %R1606 = zext i8 %load_target6 to i32
  %26 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %27 = bitcast { [184 x i8] }** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 120
  %29 = bitcast i8* %28 to { [184 x i8] }**
  %load_target7 = load { [184 x i8] }*, { [184 x i8] }** %29
  %R1610 = call { [56 x i8] }* @luaF_newLclosure(%struct.lua_State* %ARG1, i32 %R1606, { [184 x i8] }* %load_target7)
  %30 = bitcast { [56 x i8] }* %R1610 to %struct.Proto**
  %31 = bitcast %struct.Proto** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 32
  %33 = bitcast i8* %32 to %struct.Proto**
  store %struct.Proto* %R1602, %struct.Proto** %33
  store i32 0, i32* %0
  br label %L240

L240:                                             ; preds = %L241, %L239
  %34 = load i32, i32* %0
  %35 = bitcast %struct.Proto* %R1602 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 112
  %load_target8 = load i8, i8* %36
  %R1616 = zext i8 %load_target8 to i32
  %R1617 = icmp slt i32 %34, %R1616
  %R16179 = zext i1 %R1617 to i32
  %cond10 = icmp ne i32 %R16179, 0
  br i1 %cond10, label %L241, label %L242

L241:                                             ; preds = %L240
  %R1619 = call %struct.UpVal* @luaF_newupval(%struct.lua_State* %ARG1)
  %37 = bitcast { [56 x i8] }* %R1610 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i32 40
  %39 = bitcast i8* %38 to { [56 x i8] }*
  %R1624 = sext i32 %34 to i64
  %R1625 = mul i64 %R1624, 8
  %40 = bitcast { [56 x i8] }* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 %R1625
  %42 = bitcast i8* %41 to { [56 x i8] }*
  %43 = bitcast { [56 x i8] }* %42 to %struct.UpVal**
  %44 = bitcast %struct.UpVal** %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to %struct.UpVal**
  store %struct.UpVal* %R1619, %struct.UpVal** %46
  %R1628 = add i32 %34, 1
  store i32 %R1628, i32* %0
  br label %L240

L242:                                             ; preds = %L240
  %47 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %48 = bitcast %struct.lua_TValue** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 16
  %50 = bitcast i8* %49 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %50
  %R1632 = bitcast { [56 x i8] }* %R1610 to { [184 x i8] }*
  %51 = bitcast %struct.lua_TValue* %load_target11 to { [184 x i8] }**
  %52 = bitcast { [184 x i8] }** %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 0
  %54 = bitcast i8* %53 to { [184 x i8] }**
  store { [184 x i8] }* %R1632, { [184 x i8] }** %54
  %55 = bitcast %struct.lua_TValue* %load_target11 to i32*
  %56 = bitcast i32* %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = bitcast i8* %57 to i32*
  store i32 6, i32* %58
  %59 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %60 = bitcast %struct.lua_TValue** %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 56
  %62 = bitcast i8* %61 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %62
  %R1637 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %63 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %64 = bitcast %struct.lua_TValue** %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 16
  %66 = bitcast i8* %65 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %66
  %R1640 = bitcast %struct.lua_TValue* %load_target13 to i8*
  %R1641 = sub i8* %R1637, %R1640
  %R1642 = icmp sle i8* %R1641, i64 16
  %R164214 = zext i1 %R1642 to i32
  %cond15 = icmp ne i32 %R164214, 0
  br i1 %cond15, label %L243, label %L244

L243:                                             ; preds = %L242
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L244

L244:                                             ; preds = %L243, %L242
  %67 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %68 = bitcast %struct.lua_TValue** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast i8* %69 to %struct.lua_TValue**
  %load_target16 = load %struct.lua_TValue*, %struct.lua_TValue** %70
  %71 = bitcast %struct.lua_TValue* %load_target16 to i8*
  %72 = getelementptr inbounds i8, i8* %71, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %73 = bitcast i8* %72 to %struct.lua_TValue*
  %74 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %75 = bitcast %struct.lua_TValue** %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 16
  %77 = bitcast i8* %76 to %struct.lua_TValue**
  store %struct.lua_TValue* %73, %struct.lua_TValue** %77
  ret void
}

declare %struct.Proto* @luaY_parser(%struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, i8*)

define internal i32 @luaD_protectedparser(%struct.lua_State* %ARG1, %struct.Zio* %ARG2, i8* %ARG3) {
L245:
  %p_0x62d000859ca0 = alloca %struct.SParser
  %0 = bitcast %struct.SParser* %p_0x62d000859ca0 to %struct.Zio**
  %1 = bitcast %struct.Zio** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct.Zio**
  store %struct.Zio* %ARG2, %struct.Zio** %3
  %4 = bitcast %struct.SParser* %p_0x62d000859ca0 to i8**
  %5 = bitcast i8** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 32
  %7 = bitcast i8* %6 to i8**
  store i8* %ARG3, i8** %7
  %8 = bitcast %struct.SParser* %p_0x62d000859ca0 to i8**
  %9 = bitcast i8** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i8**
  store i8* null, i8** %11
  %12 = bitcast %struct.SParser* %p_0x62d000859ca0 to i64*
  %13 = bitcast i64* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15
  %R1652 = bitcast %struct.SParser* %p_0x62d000859ca0 to i8*
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %19
  %R1655 = bitcast %struct.lua_TValue* %load_target to i8*
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 64
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %R1658 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %R1659 = sub i8* %R1655, %R1658
  %24 = bitcast %struct.lua_State* %ARG1 to i64*
  %25 = bitcast i64* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 176
  %27 = bitcast i8* %26 to i64*
  %load_target2 = load i64, i64* %27
  %R1662 = call i32 @luaD_pcall(%struct.lua_State* %ARG1, void (%struct.lua_State*, i8*)* @f_parser, i8* %R1652, i8* %R1659, i64 %load_target2)
  %28 = bitcast %struct.SParser* %p_0x62d000859ca0 to i8**
  %29 = bitcast i8** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i8**
  %load_target3 = load i8*, i8** %31
  %32 = bitcast %struct.SParser* %p_0x62d000859ca0 to i64*
  %33 = bitcast i64* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 24
  %35 = bitcast i8* %34 to i64*
  %load_target4 = load i64, i64* %35
  %R1668 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %load_target3, i64 %load_target4, i64 0)
  ret i32 %R1662
}

define internal void @luaS_resize(%struct.lua_State* %ARG1, i32 %ARG2) {
L246:
  %0 = alloca i8*
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca { [184 x i8] }*
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %5 = bitcast %struct.global_State** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 32
  %7 = bitcast i8* %6 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %7
  %8 = bitcast %struct.global_State* %load_target to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 33
  %load_target1 = load i8, i8* %9
  %R1675 = zext i8 %load_target1 to i32
  %R1676 = icmp eq i32 %R1675, 2
  %R16762 = zext i1 %R1676 to i32
  %cond = icmp ne i32 %R16762, 0
  br i1 %cond, label %L260, label %L247

L247:                                             ; preds = %L246
  %R1678 = add i32 %ARG2, 1
  %R1679 = sext i32 %R1678 to i64
  %R1680 = icmp ule i64 %R1679, 2305843009213693951
  %R16803 = zext i1 %R1680 to i32
  %cond4 = icmp ne i32 %R16803, 0
  br i1 %cond4, label %L248, label %L249

L248:                                             ; preds = %L247
  %R1683 = sext i32 %ARG2 to i64
  %R1684 = mul i64 %R1683, 8
  %R1685 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 %R1684)
  store i8* %R1685, i8** %0
  br label %L250

L249:                                             ; preds = %L247
  %R1687 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R1687, i8** %0
  br label %L250

L250:                                             ; preds = %L249, %L248
  %10 = load i8*, i8** %0
  %R1690 = bitcast i8* %10 to { [184 x i8] }**
  %11 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %12 = bitcast %struct.global_State** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast i8* %13 to %struct.global_State**
  %load_target5 = load %struct.global_State*, %struct.global_State** %14
  store i32 0, i32* %1
  br label %L251

L251:                                             ; preds = %L252, %L250
  %15 = load i32, i32* %1
  %R1696 = icmp slt i32 %15, %ARG2
  %R16966 = zext i1 %R1696 to i32
  %cond7 = icmp ne i32 %R16966, 0
  br i1 %cond7, label %L252, label %L253

L252:                                             ; preds = %L251
  %R1699 = sext i32 %15 to i64
  %R1700 = mul i64 %R1699, 8
  %16 = bitcast { [184 x i8] }** %R1690 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %R1700
  %18 = bitcast i8* %17 to { [184 x i8] }**
  %19 = bitcast { [184 x i8] }** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %21
  %R1703 = add i32 %15, 1
  store i32 %R1703, i32* %1
  br label %L251

L253:                                             ; preds = %L251
  store i32 0, i32* %2
  br label %L254

L254:                                             ; preds = %L258, %L253
  %22 = load i32, i32* %2
  %23 = bitcast %struct.global_State* %load_target5 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 12
  %26 = bitcast i8* %25 to i32*
  %load_target8 = load i32, i32* %26
  %R1707 = icmp slt i32 %22, %load_target8
  %R17079 = zext i1 %R1707 to i32
  %cond10 = icmp ne i32 %R17079, 0
  br i1 %cond10, label %L255, label %L259

L255:                                             ; preds = %L254
  %27 = bitcast %struct.global_State* %load_target5 to { [184 x i8] }***
  %28 = bitcast { [184 x i8] }*** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 0
  %30 = bitcast i8* %29 to { [184 x i8] }***
  %load_target11 = load { [184 x i8] }**, { [184 x i8] }*** %30
  %R1711 = sext i32 %22 to i64
  %R1712 = mul i64 %R1711, 8
  %31 = bitcast { [184 x i8] }** %load_target11 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %R1712
  %33 = bitcast i8* %32 to { [184 x i8] }**
  %34 = bitcast { [184 x i8] }** %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to { [184 x i8] }**
  %load_target12 = load { [184 x i8] }*, { [184 x i8] }** %36
  store { [184 x i8] }* %load_target12, { [184 x i8] }** %3
  br label %L256

L256:                                             ; preds = %L257, %L255
  %37 = load { [184 x i8] }*, { [184 x i8] }** %3
  %cond13 = icmp ne { [184 x i8] }* %37, null
  br i1 %cond13, label %L257, label %L258

L257:                                             ; preds = %L256
  %38 = bitcast { [184 x i8] }* %37 to { [184 x i8] }**
  %39 = bitcast { [184 x i8] }** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = bitcast i8* %40 to { [184 x i8] }**
  %load_target14 = load { [184 x i8] }*, { [184 x i8] }** %41
  %42 = bitcast { [184 x i8] }* %37 to i32*
  %43 = bitcast i32* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 12
  %45 = bitcast i8* %44 to i32*
  %load_target15 = load i32, i32* %45
  %R1722 = add i32 %ARG2, -1
  %R1724 = and i32 %load_target15, %R1722
  %R1728 = sext i32 %R1724 to i64
  %R1729 = mul i64 %R1728, 8
  %46 = bitcast { [184 x i8] }** %R1690 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %R1729
  %48 = bitcast i8* %47 to { [184 x i8] }**
  %49 = bitcast { [184 x i8] }** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to { [184 x i8] }**
  %load_target16 = load { [184 x i8] }*, { [184 x i8] }** %51
  %52 = bitcast { [184 x i8] }* %37 to { [184 x i8] }**
  %53 = bitcast { [184 x i8] }** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  %55 = bitcast i8* %54 to { [184 x i8] }**
  store { [184 x i8] }* %load_target16, { [184 x i8] }** %55
  %56 = bitcast { [184 x i8] }** %48 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  %58 = bitcast i8* %57 to { [184 x i8] }**
  store { [184 x i8] }* %37, { [184 x i8] }** %58
  store { [184 x i8] }* %load_target14, { [184 x i8] }** %3
  br label %L256

L258:                                             ; preds = %L256
  %R1741 = add i32 %22, 1
  store i32 %R1741, i32* %2
  br label %L254

L259:                                             ; preds = %L254
  %59 = bitcast %struct.global_State* %load_target5 to { [184 x i8] }***
  %60 = bitcast { [184 x i8] }*** %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 0
  %62 = bitcast i8* %61 to { [184 x i8] }***
  %load_target17 = load { [184 x i8] }**, { [184 x i8] }*** %62
  %R1745 = bitcast { [184 x i8] }** %load_target17 to i8*
  %R1748 = sext i32 %load_target8 to i64
  %R1749 = mul i64 %R1748, 8
  %R1750 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R1745, i64 %R1749, i64 0)
  %63 = bitcast %struct.global_State* %load_target5 to i32*
  %64 = bitcast i32* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 12
  %66 = bitcast i8* %65 to i32*
  store i32 %ARG2, i32* %66
  %67 = bitcast %struct.global_State* %load_target5 to { [184 x i8] }***
  %68 = bitcast { [184 x i8] }*** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 0
  %70 = bitcast i8* %69 to { [184 x i8] }***
  store { [184 x i8] }** %R1690, { [184 x i8] }*** %70
  br label %L260

L260:                                             ; preds = %L259, %L246
  ret void
}

define internal { [24 x i8] }* @newlstr(%struct.lua_State* %ARG1, i8* %ARG2, i64 %ARG3, i32 %ARG4) {
L261:
  %R1756 = add i64 %ARG3, 1
  %R1757 = icmp ugt i64 %R1756, -27
  %R17571 = zext i1 %R1757 to i32
  %cond = icmp ne i32 %R17571, 0
  br i1 %cond, label %L262, label %L263

L262:                                             ; preds = %L261
  %R1759 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  br label %L263

L263:                                             ; preds = %L262, %L261
  %R1764 = add i64 %ARG3, 25
  %R1765 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 %R1764)
  %R1766 = bitcast i8* %R1765 to { [24 x i8] }*
  %0 = bitcast { [24 x i8] }* %R1766 to i64*
  %1 = bitcast i64* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i64*
  store i64 %ARG3, i64* %3
  %4 = bitcast { [24 x i8] }* %R1766 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 12
  %7 = bitcast i8* %6 to i32*
  store i32 %ARG4, i32* %7
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %9 = bitcast %struct.global_State** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %11
  %12 = bitcast %struct.global_State* %load_target to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %load_target2 = load i8, i8* %13
  %R1774 = zext i8 %load_target2 to i32
  %R1775 = and i32 %R1774, 3
  %14 = bitcast { [24 x i8] }* %R1766 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 9
  store i32 %R1775, i8* %15
  %16 = bitcast { [24 x i8] }* %R1766 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  store i8 4, i8* %17
  %18 = bitcast { [24 x i8] }* %R1766 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 10
  store i8 0, i8* %19
  %20 = bitcast { [24 x i8] }* %R1766 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 24
  %22 = bitcast i8* %21 to { [24 x i8] }*
  %R1782 = bitcast { [24 x i8] }* %22 to i8*
  %R1787 = call i8* @memcpy(i8* %R1782, i8* %ARG2, i64 %ARG3)
  %R1790 = bitcast { [24 x i8] }* %22 to i8*
  %23 = getelementptr inbounds i8, i8* %R1790, i64 %ARG3
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  store i8 0, i8* %24
  %25 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %26 = bitcast %struct.global_State** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 32
  %28 = bitcast i8* %27 to %struct.global_State**
  %load_target3 = load %struct.global_State*, %struct.global_State** %28
  %29 = bitcast %struct.global_State* %load_target3 to i32*
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 12
  %32 = bitcast i8* %31 to i32*
  %load_target4 = load i32, i32* %32
  %R1799 = add i32 %load_target4, -1
  %R1801 = and i32 %ARG4, %R1799
  %33 = bitcast %struct.global_State* %load_target3 to { [184 x i8] }***
  %34 = bitcast { [184 x i8] }*** %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to { [184 x i8] }***
  %load_target5 = load { [184 x i8] }**, { [184 x i8] }*** %36
  %R1807 = zext i32 %R1801 to i64
  %R1808 = mul i64 %R1807, 8
  %37 = bitcast { [184 x i8] }** %load_target5 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %R1808
  %39 = bitcast i8* %38 to { [184 x i8] }**
  %40 = bitcast { [184 x i8] }** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = bitcast i8* %41 to { [184 x i8] }**
  %load_target6 = load { [184 x i8] }*, { [184 x i8] }** %42
  %43 = bitcast { [24 x i8] }* %R1766 to { [184 x i8] }**
  %44 = bitcast { [184 x i8] }** %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to { [184 x i8] }**
  store { [184 x i8] }* %load_target6, { [184 x i8] }** %46
  %R1813 = bitcast { [24 x i8] }* %R1766 to { [184 x i8] }*
  %47 = bitcast %struct.global_State* %load_target3 to { [184 x i8] }***
  %48 = bitcast { [184 x i8] }*** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 0
  %50 = bitcast i8* %49 to { [184 x i8] }***
  %load_target7 = load { [184 x i8] }**, { [184 x i8] }*** %50
  %51 = bitcast { [184 x i8] }** %load_target7 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 %R1808
  %53 = bitcast i8* %52 to { [184 x i8] }**
  %54 = bitcast { [184 x i8] }** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 0
  %56 = bitcast i8* %55 to { [184 x i8] }**
  store { [184 x i8] }* %R1813, { [184 x i8] }** %56
  %57 = bitcast %struct.global_State* %load_target3 to i32*
  %58 = bitcast i32* %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  %60 = bitcast i8* %59 to i32*
  %load_target8 = load i32, i32* %60
  %R1822 = add i32 %load_target8, 1
  %61 = bitcast %struct.global_State* %load_target3 to i32*
  %62 = bitcast i32* %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to i32*
  store i32 %R1822, i32* %64
  %65 = bitcast %struct.global_State* %load_target3 to i32*
  %66 = bitcast i32* %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 12
  %68 = bitcast i8* %67 to i32*
  %load_target9 = load i32, i32* %68
  %R1828 = icmp ugt i32 %R1822, %load_target9
  %R182810 = zext i1 %R1828 to i32
  %cond11 = icmp ne i32 %R182810, 0
  br i1 %cond11, label %L264, label %L266

L264:                                             ; preds = %L263
  %R1831 = icmp sle i32 %load_target9, 1073741822
  %R183112 = zext i1 %R1831 to i32
  %cond13 = icmp ne i32 %R183112, 0
  br i1 %cond13, label %L265, label %L266

L265:                                             ; preds = %L264
  %R1835 = mul i32 %load_target9, 2
  call void @luaS_resize(%struct.lua_State* %ARG1, i32 %R1835)
  br label %L266

L266:                                             ; preds = %L265, %L264, %L263
  ret { [24 x i8] }* %R1766
}

declare i8* @memcpy(i8*, i8*, i64)

define internal { [24 x i8] }* @luaS_newlstr.23(%struct.lua_State* %ARG1, i8* %ARG2, i64 %ARG3) {
L267:
  %0 = alloca i64
  %1 = alloca i32
  %2 = alloca { [184 x i8] }*
  %3 = alloca { [24 x i8] }*
  %R1839 = trunc i64 %ARG3 to i32
  %R1841 = lshr i64 %ARG3, i32 5
  %R1842 = add i64 %R1841, 1
  store i32 %R1839, i32* %1
  store i64 %ARG3, i64* %0
  br label %L268

L268:                                             ; preds = %L269, %L267
  %4 = load i64, i64* %0
  %R1846 = icmp uge i64 %4, %R1842
  %R18461 = zext i1 %R1846 to i32
  %5 = load i32, i32* %1
  %cond = icmp ne i32 %R18461, 0
  br i1 %cond, label %L269, label %L270

L269:                                             ; preds = %L268
  %R1849 = shl i32 %5, 5
  %R1851 = lshr i32 %5, 2
  %R1852 = add i32 %R1849, %R1851
  %R1855 = add i64 %4, -1
  %6 = getelementptr inbounds i8, i8* %ARG2, i64 %R1855
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %load_target = load i8, i8* %7
  %R1859 = zext i8 %load_target to i32
  %R1860 = add i32 %R1852, %R1859
  %R1861 = xor i32 %5, %R1860
  store i32 %R1861, i32* %1
  %R1865 = sub i64 %4, %R1842
  store i64 %R1865, i64* %0
  br label %L268

L270:                                             ; preds = %L268
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %9 = bitcast %struct.global_State** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to %struct.global_State**
  %load_target2 = load %struct.global_State*, %struct.global_State** %11
  %12 = bitcast %struct.global_State* %load_target2 to { [184 x i8] }***
  %13 = bitcast { [184 x i8] }*** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [184 x i8] }***
  %load_target3 = load { [184 x i8] }**, { [184 x i8] }*** %15
  %16 = bitcast %struct.global_State* %load_target2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 12
  %19 = bitcast i8* %18 to i32*
  %load_target4 = load i32, i32* %19
  %R1874 = add i32 %load_target4, -1
  %R1876 = and i32 %5, %R1874
  %R1878 = sext i32 %R1876 to i64
  %R1879 = mul i64 %R1878, 8
  %20 = bitcast { [184 x i8] }** %load_target3 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %R1879
  %22 = bitcast i8* %21 to { [184 x i8] }**
  %23 = bitcast { [184 x i8] }** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = bitcast i8* %24 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %25
  store { [184 x i8] }* %load_target5, { [184 x i8] }** %2
  br label %L271

L271:                                             ; preds = %L276, %L270
  %26 = load { [184 x i8] }*, { [184 x i8] }** %2
  %cond6 = icmp ne { [184 x i8] }* %26, null
  br i1 %cond6, label %L272, label %L277

L272:                                             ; preds = %L271
  %27 = bitcast { [184 x i8] }* %26 to i64*
  %28 = bitcast i64* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to i64*
  %load_target7 = load i64, i64* %30
  %R1889 = icmp eq i64 %load_target7, %ARG3
  %R18898 = zext i1 %R1889 to i32
  %31 = bitcast { [184 x i8] }* %26 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 24
  %33 = bitcast i8* %32 to { [184 x i8] }*
  %R1894 = bitcast { [184 x i8] }* %33 to i8*
  %R1897 = call i32 @memcmp(i8* %ARG2, i8* %R1894, i64 %ARG3)
  %R1898 = icmp eq i32 %R1897, 0
  %R18989 = zext i1 %R1898 to i32
  %34 = icmp ne i32 %R18898, 0
  %35 = icmp ne i32 %R18989, 0
  %R1899 = and i1 %34, %35
  %R189910 = zext i1 %R1899 to i32
  %cond11 = icmp ne i32 %R189910, 0
  br i1 %cond11, label %L273, label %L276

L273:                                             ; preds = %L272
  %36 = bitcast { [184 x i8] }* %26 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 9
  %load_target12 = load i8, i8* %37
  %R1902 = zext i8 %load_target12 to i32
  %38 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %39 = bitcast %struct.global_State** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 32
  %41 = bitcast i8* %40 to %struct.global_State**
  %load_target13 = load %struct.global_State*, %struct.global_State** %41
  %42 = bitcast %struct.global_State* %load_target13 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 32
  %load_target14 = load i8, i8* %43
  %R1906 = zext i8 %load_target14 to i32
  %R1907 = xor i32 %R1906, 3
  %R1908 = and i32 %R1902, %R1907
  %R1909 = and i32 %R1908, 3
  %cond15 = icmp ne i32 %R1909, 0
  br i1 %cond15, label %L274, label %L275

L274:                                             ; preds = %L273
  %R1913 = xor i32 %R1902, 3
  %R1914 = trunc i32 %R1913 to i8
  %44 = bitcast { [184 x i8] }* %26 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 9
  store i8 %R1914, i8* %45
  br label %L275

L275:                                             ; preds = %L274, %L273
  store { [184 x i8] }* %26, { [24 x i8] }** %3
  br label %L278

L276:                                             ; preds = %L272
  %46 = bitcast { [184 x i8] }* %26 to { [184 x i8] }**
  %47 = bitcast { [184 x i8] }** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  %49 = bitcast i8* %48 to { [184 x i8] }**
  %load_target16 = load { [184 x i8] }*, { [184 x i8] }** %49
  store { [184 x i8] }* %load_target16, { [184 x i8] }** %2
  br label %L271

L277:                                             ; preds = %L271
  %R1923 = call { [24 x i8] }* @newlstr(%struct.lua_State* %ARG1, i8* %ARG2, i64 %ARG3, i32 %5)
  store { [24 x i8] }* %R1923, { [24 x i8] }** %3
  br label %L278

L278:                                             ; preds = %L277, %L275
  %50 = load { [24 x i8] }*, { [24 x i8] }** %3
  ret { [24 x i8] }* %50
}

declare i32 @memcmp(i8*, i8*, i64)

define internal { [40 x i8] }* @luaS_newudata(%struct.lua_State* %ARG1, i64 %ARG2, %struct.Table* %ARG3) {
L279:
  %R1925 = icmp ugt i64 %ARG2, -43
  %R19251 = zext i1 %R1925 to i32
  %cond = icmp ne i32 %R19251, 0
  br i1 %cond, label %L280, label %L281

L280:                                             ; preds = %L279
  %R1927 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  br label %L281

L281:                                             ; preds = %L280, %L279
  %R1930 = add i64 %ARG2, 40
  %R1931 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 %R1930)
  %R1932 = bitcast i8* %R1931 to { [40 x i8] }*
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %load_target2 = load i8, i8* %5
  %R1936 = zext i8 %load_target2 to i32
  %R1937 = and i32 %R1936, 3
  %6 = bitcast { [40 x i8] }* %R1932 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 9
  store i32 %R1937, i8* %7
  %8 = bitcast { [40 x i8] }* %R1932 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  store i8 7, i8* %9
  %10 = bitcast { [40 x i8] }* %R1932 to i64*
  %11 = bitcast i64* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast i8* %12 to i64*
  store i64 %ARG2, i64* %13
  %14 = bitcast { [40 x i8] }* %R1932 to %struct.Table**
  %15 = bitcast %struct.Table** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %struct.Table**
  store %struct.Table* null, %struct.Table** %17
  %18 = bitcast { [40 x i8] }* %R1932 to %struct.Table**
  %19 = bitcast %struct.Table** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 24
  %21 = bitcast i8* %20 to %struct.Table**
  store %struct.Table* %ARG3, %struct.Table** %21
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %23 = bitcast %struct.global_State** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 32
  %25 = bitcast i8* %24 to %struct.global_State**
  %load_target3 = load %struct.global_State*, %struct.global_State** %25
  %26 = bitcast %struct.global_State* %load_target3 to %struct.lua_State**
  %27 = bitcast %struct.lua_State** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 176
  %29 = bitcast i8* %28 to %struct.lua_State**
  %load_target4 = load %struct.lua_State*, %struct.lua_State** %29
  %30 = bitcast %struct.lua_State* %load_target4 to { [184 x i8] }**
  %31 = bitcast { [184 x i8] }** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %33
  %34 = bitcast { [40 x i8] }* %R1932 to { [184 x i8] }**
  %35 = bitcast { [184 x i8] }** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to { [184 x i8] }**
  store { [184 x i8] }* %load_target5, { [184 x i8] }** %37
  %R1952 = bitcast { [40 x i8] }* %R1932 to { [184 x i8] }*
  %38 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %39 = bitcast %struct.global_State** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 32
  %41 = bitcast i8* %40 to %struct.global_State**
  %load_target6 = load %struct.global_State*, %struct.global_State** %41
  %42 = bitcast %struct.global_State* %load_target6 to %struct.lua_State**
  %43 = bitcast %struct.lua_State** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 176
  %45 = bitcast i8* %44 to %struct.lua_State**
  %load_target7 = load %struct.lua_State*, %struct.lua_State** %45
  %46 = bitcast %struct.lua_State* %load_target7 to { [184 x i8] }**
  %47 = bitcast { [184 x i8] }** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  %49 = bitcast i8* %48 to { [184 x i8] }**
  store { [184 x i8] }* %R1952, { [184 x i8] }** %49
  ret { [40 x i8] }* %R1932
}

define internal %struct.Node* @hashnum(%struct.Table* %ARG1, double %ARG2) {
L282:
  %a_0x62d00088eb58 = alloca [2 x i32]
  %n_0x62d00088e988 = alloca double
  %0 = alloca i32
  %1 = alloca %struct.Node*
  %2 = bitcast double* %n_0x62d00088e988 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to double*
  store double %ARG2, double* %4
  %R1960 = fcmp oeq double %ARG2, 0.000000e+00
  %R19601 = zext i1 %R1960 to i32
  %cond = icmp ne i32 %R19601, 0
  br i1 %cond, label %L283, label %L284

L283:                                             ; preds = %L282
  %5 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %6 = bitcast %struct.Node** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = bitcast i8* %7 to %struct.Node**
  %load_target = load %struct.Node*, %struct.Node** %8
  store %struct.Node* %load_target, %struct.Node** %1
  br label %L288

L284:                                             ; preds = %L282
  %R1965 = bitcast [2 x i32]* %a_0x62d00088eb58 to i32*
  %R1966 = bitcast i32* %R1965 to i8*
  %R1968 = bitcast double* %n_0x62d00088e988 to i8*
  %R1969 = call i8* @memcpy(i8* %R1966, i8* %R1968, i64 8)
  store i32 1, i32* %0
  br label %L285

L285:                                             ; preds = %L286, %L284
  %9 = load i32, i32* %0
  %R1971 = icmp slt i32 %9, 2
  %R19712 = zext i1 %R1971 to i32
  %cond3 = icmp ne i32 %R19712, 0
  br i1 %cond3, label %L286, label %L287

L286:                                             ; preds = %L285
  %R1974 = sext i32 %9 to i64
  %R1975 = mul i64 %R1974, 4
  %10 = bitcast i32* %R1965 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %R1975
  %12 = bitcast i8* %11 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i32*
  %load_target4 = load i32, i32* %15
  %16 = bitcast [2 x i32]* %a_0x62d00088eb58 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i32*
  %load_target5 = load i32, i32* %19
  %R1980 = add i32 %load_target5, %load_target4
  %20 = bitcast [2 x i32]* %a_0x62d00088eb58 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i32*
  store i32 %R1980, i32* %23
  %R1983 = add i32 %9, 1
  store i32 %R1983, i32* %0
  br label %L285

L287:                                             ; preds = %L285
  %24 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %25 = bitcast %struct.Node** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %27 = bitcast i8* %26 to %struct.Node**
  %load_target6 = load %struct.Node*, %struct.Node** %27
  %28 = bitcast [2 x i32]* %a_0x62d00088eb58 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to i32*
  %load_target7 = load i32, i32* %31
  %R1987 = zext i32 %load_target7 to i64
  %32 = bitcast %struct.Table* %ARG1 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 11
  %load_target8 = load i8, i8* %33
  %R1990 = zext i8 %load_target8 to i32
  %R1991 = shl i64 1, i32 %R1990
  %R1992 = add i64 %R1991, -1
  %R1993 = or i64 %R1992, 1
  %R1994 = urem i64 %R1987, %R1993
  %R1995 = mul i64 %R1994, 40
  %34 = bitcast %struct.Node* %load_target6 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %R1995
  %36 = bitcast i8* %35 to %struct.Node*
  store %struct.Node* %36, %struct.Node** %1
  br label %L288

L288:                                             ; preds = %L287, %L283
  %37 = load %struct.Node*, %struct.Node** %1
  ret %struct.Node* %37
}

define internal %struct.Node* @mainposition(%struct.Table* %ARG1, %struct.lua_TValue* %ARG2) {
L289:
  %0 = alloca %struct.Node*
  %1 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  switch i32 %load_target, label %L294 [
    i32 1, label %L292
    i32 2, label %L293
    i32 3, label %L290
    i32 4, label %L291
  ]

L290:                                             ; preds = %L289
  %5 = bitcast %struct.lua_TValue* %ARG2 to double*
  %6 = bitcast double* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to double*
  %load_target1 = load double, double* %8
  %R2003 = call %struct.Node* @hashnum(%struct.Table* %ARG1, double %load_target1)
  store %struct.Node* %R2003, %struct.Node** %0
  br label %L295

L291:                                             ; preds = %L289
  %9 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %10 = bitcast %struct.Node** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 32
  %12 = bitcast i8* %11 to %struct.Node**
  %load_target2 = load %struct.Node*, %struct.Node** %12
  %13 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %14 = bitcast { [184 x i8] }** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %16
  %17 = bitcast { [184 x i8] }* %load_target3 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 12
  %20 = bitcast i8* %19 to i32*
  %load_target4 = load i32, i32* %20
  %R2010 = zext i32 %load_target4 to i64
  %21 = bitcast %struct.Table* %ARG1 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 11
  %load_target5 = load i8, i8* %22
  %R2013 = zext i8 %load_target5 to i32
  %R2014 = shl i64 1, i32 %R2013
  %R2015 = add i64 %R2014, -1
  %R2016 = and i64 %R2010, %R2015
  %R2017 = trunc i64 %R2016 to i32
  %R2018 = sext i32 %R2017 to i64
  %R2019 = mul i64 %R2018, 40
  %23 = bitcast %struct.Node* %load_target2 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %R2019
  %25 = bitcast i8* %24 to %struct.Node*
  store %struct.Node* %25, %struct.Node** %0
  br label %L295

L292:                                             ; preds = %L289
  %26 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %27 = bitcast %struct.Node** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 32
  %29 = bitcast i8* %28 to %struct.Node**
  %load_target6 = load %struct.Node*, %struct.Node** %29
  %30 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %31 = bitcast i32* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i32*
  %load_target7 = load i32, i32* %33
  %R2025 = sext i32 %load_target7 to i64
  %34 = bitcast %struct.Table* %ARG1 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 11
  %load_target8 = load i8, i8* %35
  %R2028 = zext i8 %load_target8 to i32
  %R2029 = shl i64 1, i32 %R2028
  %R2030 = add i64 %R2029, -1
  %R2031 = and i64 %R2025, %R2030
  %R2032 = trunc i64 %R2031 to i32
  %R2033 = sext i32 %R2032 to i64
  %R2034 = mul i64 %R2033, 40
  %36 = bitcast %struct.Node* %load_target6 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 %R2034
  %38 = bitcast i8* %37 to %struct.Node*
  store %struct.Node* %38, %struct.Node** %0
  br label %L295

L293:                                             ; preds = %L289
  %39 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %40 = bitcast %struct.Node** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 32
  %42 = bitcast i8* %41 to %struct.Node**
  %load_target9 = load %struct.Node*, %struct.Node** %42
  %43 = bitcast %struct.lua_TValue* %ARG2 to i8**
  %44 = bitcast i8** %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to i8**
  %load_target10 = load i8*, i8** %46
  %R2040 = ptrtoint i8* %load_target10 to i64
  %R2041 = trunc i64 %R2040 to i32
  %R2042 = zext i32 %R2041 to i64
  %47 = bitcast %struct.Table* %ARG1 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 11
  %load_target11 = load i8, i8* %48
  %R2045 = zext i8 %load_target11 to i32
  %R2046 = shl i64 1, i32 %R2045
  %R2047 = add i64 %R2046, -1
  %R2048 = or i64 %R2047, 1
  %R2049 = urem i64 %R2042, %R2048
  %R2050 = mul i64 %R2049, 40
  %49 = bitcast %struct.Node* %load_target9 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 %R2050
  %51 = bitcast i8* %50 to %struct.Node*
  store %struct.Node* %51, %struct.Node** %0
  br label %L295

L294:                                             ; preds = %L289
  %52 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %53 = bitcast %struct.Node** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 32
  %55 = bitcast i8* %54 to %struct.Node**
  %load_target12 = load %struct.Node*, %struct.Node** %55
  %56 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %57 = bitcast { [184 x i8] }** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  %59 = bitcast i8* %58 to { [184 x i8] }**
  %load_target13 = load { [184 x i8] }*, { [184 x i8] }** %59
  %R2056 = ptrtoint { [184 x i8] }* %load_target13 to i64
  %R2057 = trunc i64 %R2056 to i32
  %R2058 = zext i32 %R2057 to i64
  %60 = bitcast %struct.Table* %ARG1 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 11
  %load_target14 = load i8, i8* %61
  %R2061 = zext i8 %load_target14 to i32
  %R2062 = shl i64 1, i32 %R2061
  %R2063 = add i64 %R2062, -1
  %R2064 = or i64 %R2063, 1
  %R2065 = urem i64 %R2058, %R2064
  %R2066 = mul i64 %R2065, 40
  %62 = bitcast %struct.Node* %load_target12 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %R2066
  %64 = bitcast i8* %63 to %struct.Node*
  store %struct.Node* %64, %struct.Node** %0
  br label %L295

L295:                                             ; preds = %L294, %L293, %L292, %L291, %L290
  %65 = load %struct.Node*, %struct.Node** %0
  ret %struct.Node* %65
}

define internal i32 @arrayindex(%struct.lua_TValue* %ARG1) {
L296:
  %0 = alloca i32
  %1 = bitcast %struct.lua_TValue* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R2071 = icmp eq i32 %load_target, 3
  %R20711 = zext i1 %R2071 to i32
  %cond = icmp ne i32 %R20711, 0
  br i1 %cond, label %L297, label %L299

L297:                                             ; preds = %L296
  %5 = bitcast %struct.lua_TValue* %ARG1 to double*
  %6 = bitcast double* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to double*
  %load_target2 = load double, double* %8
  %R2076 = fptosi double %load_target2 to i32
  %R2078 = sitofp i32 %R2076 to double
  %R2080 = fcmp oeq double %R2078, %load_target2
  %R20803 = zext i1 %R2080 to i32
  %cond4 = icmp ne i32 %R20803, 0
  br i1 %cond4, label %L298, label %L299

L298:                                             ; preds = %L297
  store i32 %R2076, i32* %0
  br label %L300

L299:                                             ; preds = %L297, %L296
  store i32 -1, i32* %0
  br label %L300

L300:                                             ; preds = %L299, %L298
  %9 = load i32, i32* %0
  ret i32 %9
}

define internal i32 @findindex(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3) {
L301:
  %0 = alloca %struct.Node*
  %1 = alloca i32
  %2 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L303, label %L302

L302:                                             ; preds = %L301
  store i32 -1, i32* %1
  br label %L314

L303:                                             ; preds = %L301
  %R2088 = call i32 @arrayindex(%struct.lua_TValue* %ARG3)
  %R2090 = icmp slt i32 0, %R2088
  %R20901 = zext i1 %R2090 to i32
  %cond2 = icmp ne i32 %R20901, 0
  br i1 %cond2, label %L304, label %L306

L304:                                             ; preds = %L303
  %6 = bitcast %struct.Table* %ARG2 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 56
  %9 = bitcast i8* %8 to i32*
  %load_target3 = load i32, i32* %9
  %R2094 = icmp sle i32 %R2088, %load_target3
  %R20944 = zext i1 %R2094 to i32
  %cond5 = icmp ne i32 %R20944, 0
  br i1 %cond5, label %L305, label %L306

L305:                                             ; preds = %L304
  %R2096 = add i32 %R2088, -1
  store i32 %R2096, i32* %1
  br label %L314

L306:                                             ; preds = %L304, %L303
  %R2099 = call %struct.Node* @mainposition(%struct.Table* %ARG2, %struct.lua_TValue* %ARG3)
  store %struct.Node* %R2099, %struct.Node** %0
  br label %L307

L307:                                             ; preds = %L312, %L306
  %10 = load %struct.Node*, %struct.Node** %0
  %11 = bitcast %struct.Node* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i32 16
  %13 = bitcast i8* %12 to %struct.Node*
  %R2104 = call i32 @luaO_rawequalObj(%struct.Node* %13, %struct.lua_TValue* %ARG3)
  %cond6 = icmp ne i32 %R2104, 0
  br i1 %cond6, label %L311, label %L308

L308:                                             ; preds = %L307
  %14 = bitcast %struct.Node* %10 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 24
  %17 = bitcast i8* %16 to i32*
  %load_target7 = load i32, i32* %17
  %R2107 = icmp eq i32 %load_target7, 11
  %R21078 = zext i1 %R2107 to i32
  %cond9 = icmp ne i32 %R21078, 0
  br i1 %cond9, label %L309, label %L312

L309:                                             ; preds = %L308
  %18 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  %load_target10 = load i32, i32* %21
  %R2110 = icmp sge i32 %load_target10, 4
  %R211011 = zext i1 %R2110 to i32
  %cond12 = icmp ne i32 %R211011, 0
  br i1 %cond12, label %L310, label %L312

L310:                                             ; preds = %L309
  %22 = bitcast %struct.Node* %10 to { [184 x i8] }**
  %23 = bitcast { [184 x i8] }** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to { [184 x i8] }**
  %load_target13 = load { [184 x i8] }*, { [184 x i8] }** %25
  %26 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %27 = bitcast { [184 x i8] }** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to { [184 x i8] }**
  %load_target14 = load { [184 x i8] }*, { [184 x i8] }** %29
  %R2115 = icmp eq { [184 x i8] }* %load_target13, %load_target14
  %R211515 = zext i1 %R2115 to i32
  %cond16 = icmp ne i32 %R211515, 0
  br i1 %cond16, label %L311, label %L312

L311:                                             ; preds = %L310, %L307
  %30 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %31 = bitcast %struct.Node** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 32
  %33 = bitcast i8* %32 to %struct.Node**
  %load_target17 = load %struct.Node*, %struct.Node** %33
  %R2120 = sub %struct.Node* %10, %load_target17
  %R2121 = sdiv %struct.Node* %R2120, i64 40
  %R2122 = ptrtoint %struct.Node* %R2121 to i32
  %34 = bitcast %struct.Table* %ARG2 to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 56
  %37 = bitcast i8* %36 to i32*
  %load_target18 = load i32, i32* %37
  %R2126 = add i32 %R2122, %load_target18
  store i32 %R2126, i32* %1
  br label %L314

L312:                                             ; preds = %L310, %L309, %L308
  %38 = bitcast %struct.Node* %10 to %struct.Node**
  %39 = bitcast %struct.Node** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 32
  %41 = bitcast i8* %40 to %struct.Node**
  %load_target19 = load %struct.Node*, %struct.Node** %41
  store %struct.Node* %load_target19, %struct.Node** %0
  %cond20 = icmp ne %struct.Node* %load_target19, null
  br i1 %cond20, label %L307, label %L313

L313:                                             ; preds = %L312
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0))
  store i32 0, i32* %1
  br label %L314

L314:                                             ; preds = %L313, %L311, %L305, %L302
  %42 = load i32, i32* %1
  ret i32 %42
}

define internal i32 @luaH_next(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3) {
L315:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %R2135 = call i32 @findindex(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3)
  %R2137 = add i32 %R2135, 1
  store i32 %R2137, i32* %0
  br label %L316

L316:                                             ; preds = %L319, %L315
  %3 = load i32, i32* %0
  %4 = bitcast %struct.Table* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 56
  %7 = bitcast i8* %6 to i32*
  %load_target = load i32, i32* %7
  %R2141 = icmp slt i32 %3, %load_target
  %R21411 = zext i1 %R2141 to i32
  %cond = icmp ne i32 %R21411, 0
  br i1 %cond, label %L317, label %L320

L317:                                             ; preds = %L316
  %8 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %R2145 = sext i32 %3 to i64
  %R2146 = mul i64 %R2145, 16
  %12 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %R2146
  %14 = bitcast i8* %13 to %struct.lua_TValue*
  %15 = bitcast %struct.lua_TValue* %14 to i32*
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i32*
  %load_target3 = load i32, i32* %18
  %R2152 = add i32 %3, 1
  %cond4 = icmp ne i32 %load_target3, 0
  br i1 %cond4, label %L318, label %L319

L318:                                             ; preds = %L317
  %R2153 = sitofp i32 %R2152 to double
  %19 = bitcast %struct.lua_TValue* %ARG3 to double*
  %20 = bitcast double* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to double*
  store double %R2153, double* %22
  %23 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 3, i32* %26
  %27 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %28 = bitcast %struct.lua_TValue** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 24
  %30 = bitcast i8* %29 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %30
  %31 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %R2146
  %33 = bitcast i8* %32 to %struct.lua_TValue*
  %34 = bitcast %struct.lua_TValue* %33 to { [8 x i8] }*
  %35 = bitcast { [8 x i8] }* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to { [8 x i8] }*
  %load_target6 = load { [8 x i8] }, { [8 x i8] }* %37
  %38 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %39 = bitcast { [8 x i8] }* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 16
  %41 = bitcast i8* %40 to { [8 x i8] }*
  store { [8 x i8] } %load_target6, { [8 x i8] }* %41
  %42 = bitcast %struct.lua_TValue* %33 to i32*
  %43 = bitcast i32* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = bitcast i8* %44 to i32*
  %load_target7 = load i32, i32* %45
  %46 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 24
  %49 = bitcast i8* %48 to i32*
  store i32 %load_target7, i32* %49
  store i32 1, i32* %2
  br label %L326

L319:                                             ; preds = %L317
  store i32 %R2152, i32* %0
  br label %L316

L320:                                             ; preds = %L316
  %R2178 = sub i32 %3, %load_target
  store i32 %R2178, i32* %1
  br label %L321

L321:                                             ; preds = %L324, %L320
  %50 = load i32, i32* %1
  %51 = bitcast %struct.Table* %ARG2 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 11
  %load_target8 = load i8, i8* %52
  %R2183 = zext i8 %load_target8 to i32
  %R2184 = shl i64 1, i32 %R2183
  %R2185 = trunc i64 %R2184 to i32
  %R2186 = icmp slt i32 %50, %R2185
  %R21869 = zext i1 %R2186 to i32
  %cond10 = icmp ne i32 %R21869, 0
  br i1 %cond10, label %L322, label %L325

L322:                                             ; preds = %L321
  %53 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %54 = bitcast %struct.Node** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 32
  %56 = bitcast i8* %55 to %struct.Node**
  %load_target11 = load %struct.Node*, %struct.Node** %56
  %R2190 = sext i32 %50 to i64
  %R2191 = mul i64 %R2190, 40
  %57 = bitcast %struct.Node* %load_target11 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 %R2191
  %59 = bitcast i8* %58 to %struct.Node*
  %60 = bitcast %struct.Node* %59 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 8
  %63 = bitcast i8* %62 to i32*
  %load_target12 = load i32, i32* %63
  %cond13 = icmp ne i32 %load_target12, 0
  br i1 %cond13, label %L323, label %L324

L323:                                             ; preds = %L322
  %64 = bitcast %struct.Node* %59 to { [8 x i8] }*
  %65 = bitcast { [8 x i8] }* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 16
  %67 = bitcast i8* %66 to { [8 x i8] }*
  %load_target14 = load { [8 x i8] }, { [8 x i8] }* %67
  %68 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %69 = bitcast { [8 x i8] }* %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 0
  %71 = bitcast i8* %70 to { [8 x i8] }*
  store { [8 x i8] } %load_target14, { [8 x i8] }* %71
  %72 = bitcast %struct.Node* %59 to i32*
  %73 = bitcast i32* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 24
  %75 = bitcast i8* %74 to i32*
  %load_target15 = load i32, i32* %75
  %76 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %77 = bitcast i32* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 8
  %79 = bitcast i8* %78 to i32*
  store i32 %load_target15, i32* %79
  %80 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %81 = bitcast %struct.Node** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 32
  %83 = bitcast i8* %82 to %struct.Node**
  %load_target16 = load %struct.Node*, %struct.Node** %83
  %84 = bitcast %struct.Node* %load_target16 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %R2191
  %86 = bitcast i8* %85 to %struct.Node*
  %87 = bitcast %struct.Node* %86 to { [8 x i8] }*
  %88 = bitcast { [8 x i8] }* %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 0
  %90 = bitcast i8* %89 to { [8 x i8] }*
  %load_target17 = load { [8 x i8] }, { [8 x i8] }* %90
  %91 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %92 = bitcast { [8 x i8] }* %91 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 16
  %94 = bitcast i8* %93 to { [8 x i8] }*
  store { [8 x i8] } %load_target17, { [8 x i8] }* %94
  %95 = bitcast %struct.Node* %86 to i32*
  %96 = bitcast i32* %95 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 8
  %98 = bitcast i8* %97 to i32*
  %load_target18 = load i32, i32* %98
  %99 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %100 = bitcast i32* %99 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 24
  %102 = bitcast i8* %101 to i32*
  store i32 %load_target18, i32* %102
  store i32 1, i32* %2
  br label %L326

L324:                                             ; preds = %L322
  %R2228 = add i32 %50, 1
  store i32 %R2228, i32* %1
  br label %L321

L325:                                             ; preds = %L321
  store i32 0, i32* %2
  br label %L326

L326:                                             ; preds = %L325, %L323, %L318
  %103 = load i32, i32* %2
  ret i32 %103
}

define internal i32 @computesizes(i32* %ARG1, i32* %ARG2) {
L327:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  store i32 0, i32* %3
  store i32 0, i32* %2
  store i32 0, i32* %5
  store i32 0, i32* %4
  store i32 0, i32* %1
  store i32 1, i32* %0
  br label %L328

L328:                                             ; preds = %L333, %L327
  %6 = load i32, i32* %0
  %R2230 = sdiv i32 %6, 2
  %7 = bitcast i32* %ARG2 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i32*
  %load_target = load i32, i32* %9
  %R2233 = icmp slt i32 %R2230, %load_target
  %R22331 = zext i1 %R2233 to i32
  %cond = icmp ne i32 %R22331, 0
  br i1 %cond, label %L329, label %L334

L329:                                             ; preds = %L328
  %10 = load i32, i32* %1
  %R2236 = sext i32 %10 to i64
  %R2237 = mul i64 %R2236, 4
  %11 = bitcast i32* %ARG1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %R2237
  %13 = bitcast i8* %12 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to i32*
  %load_target2 = load i32, i32* %16
  %R2240 = icmp sgt i32 %load_target2, 0
  %R22403 = zext i1 %R2240 to i32
  %cond4 = icmp ne i32 %R22403, 0
  br i1 %cond4, label %L330, label %L332

L330:                                             ; preds = %L329
  %17 = load i32, i32* %2
  %R2249 = add i32 %17, %load_target2
  %R2254 = icmp sgt i32 %R2249, %R2230
  %R22545 = zext i1 %R2254 to i32
  store i32 %R2249, i32* %3
  store i32 %R2249, i32* %2
  %cond6 = icmp ne i32 %R22545, 0
  br i1 %cond6, label %L331, label %L332

L331:                                             ; preds = %L330
  store i32 %R2249, i32* %3
  store i32 %R2249, i32* %5
  store i32 %6, i32* %4
  br label %L332

L332:                                             ; preds = %L331, %L330, %L329
  %18 = load i32, i32* %3
  %R2260 = icmp eq i32 %18, %load_target
  %R22607 = zext i1 %R2260 to i32
  %cond8 = icmp ne i32 %R22607, 0
  br i1 %cond8, label %L334, label %L333

L333:                                             ; preds = %L332
  %R2262 = add i32 %10, 1
  %R2265 = mul i32 %6, 2
  store i32 %R2262, i32* %1
  store i32 %R2265, i32* %0
  br label %L328

L334:                                             ; preds = %L332, %L328
  %19 = load i32, i32* %4
  %20 = bitcast i32* %ARG2 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to i32*
  store i32 %19, i32* %22
  %23 = load i32, i32* %5
  ret i32 %23
}

define internal i32 @countint(%struct.lua_TValue* %ARG1, i32* %ARG2) {
L335:
  %R2272 = call i32 @arrayindex(%struct.lua_TValue* %ARG1)
  %R2274 = icmp slt i32 0, %R2272
  %R22741 = zext i1 %R2274 to i32
  %R2276 = icmp sle i32 %R2272, 1073741824
  %R22762 = zext i1 %R2276 to i32
  %0 = icmp ne i32 %R22741, 0
  %1 = icmp ne i32 %R22762, 0
  %R2277 = and i1 %0, %1
  %R22773 = zext i1 %R2277 to i32
  %R2289 = icmp ne i32 %R22773, 0
  %R22894 = zext i1 %R2289 to i32
  %cond = icmp ne i32 %R22773, 0
  br i1 %cond, label %L336, label %L337

L336:                                             ; preds = %L335
  %R2280 = add i32 %R2272, -1
  %R2282 = call i32 @luaO_log2(i32 %R2280)
  %R2283 = add i32 %R2282, 1
  %R2284 = sext i32 %R2283 to i64
  %R2285 = mul i64 %R2284, 4
  %2 = bitcast i32* %ARG2 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %R2285
  %4 = bitcast i8* %3 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  %load_target = load i32, i32* %7
  %R2288 = add i32 %load_target, 1
  %8 = bitcast i32* %4 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i32*
  store i32 %R2288, i32* %10
  br label %L337

L337:                                             ; preds = %L336, %L335
  ret i32 %R22894
}

define internal i32 @numusearray(%struct.Table* %ARG1, i32* %ARG2) {
L338:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca i32
  %8 = alloca i32
  store i32 0, i32* %8
  store i32 0, i32* %7
  store i32 1, i32* %3
  store i32 1, i32* %2
  store i32 0, i32* %0
  store i32 1, i32* %1
  br label %L339

L339:                                             ; preds = %L346, %L338
  %9 = load i32, i32* %0
  %R2291 = icmp sle i32 %9, 30
  %R22911 = zext i1 %R2291 to i32
  %cond = icmp ne i32 %R22911, 0
  br i1 %cond, label %L340, label %L347

L340:                                             ; preds = %L339
  %10 = load i32, i32* %1
  %11 = bitcast %struct.Table* %ARG1 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 56
  %14 = bitcast i8* %13 to i32*
  %load_target = load i32, i32* %14
  %R2297 = icmp sgt i32 %10, %load_target
  %R22972 = zext i1 %R2297 to i32
  store i32 0, i32* %6
  store i32 0, i32* %5
  store i32 %10, i32* %4
  %cond3 = icmp ne i32 %R22972, 0
  br i1 %cond3, label %L341, label %L342

L341:                                             ; preds = %L340
  %15 = load i32, i32* %2
  %R2303 = icmp sgt i32 %15, %load_target
  %R23034 = zext i1 %R2303 to i32
  store i32 %15, i32* %3
  store i32 %load_target, i32* %4
  %cond5 = icmp ne i32 %R23034, 0
  br i1 %cond5, label %L347, label %L342

L342:                                             ; preds = %L345, %L341, %L340
  %16 = load i32, i32* %3
  %17 = load i32, i32* %4
  %R2306 = icmp sle i32 %16, %17
  %R23066 = zext i1 %R2306 to i32
  %cond7 = icmp ne i32 %R23066, 0
  br i1 %cond7, label %L343, label %L346

L343:                                             ; preds = %L342
  %18 = bitcast %struct.Table* %ARG1 to %struct.lua_TValue**
  %19 = bitcast %struct.lua_TValue** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 24
  %21 = bitcast i8* %20 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %21
  %R2310 = add i32 %16, -1
  %R2311 = sext i32 %R2310 to i64
  %R2312 = mul i64 %R2311, 16
  %22 = bitcast %struct.lua_TValue* %load_target8 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %R2312
  %24 = bitcast i8* %23 to %struct.lua_TValue*
  %25 = bitcast %struct.lua_TValue* %24 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i32*
  %load_target9 = load i32, i32* %28
  %cond10 = icmp ne i32 %load_target9, 0
  br i1 %cond10, label %L344, label %L345

L344:                                             ; preds = %L343
  %29 = load i32, i32* %5
  %R2317 = add i32 %29, 1
  store i32 %R2317, i32* %6
  store i32 %R2317, i32* %5
  br label %L345

L345:                                             ; preds = %L344, %L343
  %R2319 = add i32 %16, 1
  store i32 %R2319, i32* %3
  store i32 %R2319, i32* %2
  br label %L342

L346:                                             ; preds = %L342
  %30 = load i32, i32* %6
  %R2323 = sext i32 %9 to i64
  %R2324 = mul i64 %R2323, 4
  %31 = bitcast i32* %ARG2 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %R2324
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to i32*
  %load_target11 = load i32, i32* %36
  %R2328 = add i32 %load_target11, %30
  %37 = bitcast i32* %33 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  %39 = bitcast i8* %38 to i32*
  store i32 %R2328, i32* %39
  %40 = load i32, i32* %7
  %R2333 = add i32 %40, %30
  store i32 %R2333, i32* %8
  store i32 %R2333, i32* %7
  %R2336 = add i32 %9, 1
  %R2339 = mul i32 %10, 2
  store i32 %R2336, i32* %0
  store i32 %R2339, i32* %1
  br label %L339

L347:                                             ; preds = %L341, %L339
  %41 = load i32, i32* %8
  ret i32 %41
}

define internal i32 @numusehash(%struct.Table* %ARG1, i32* %ARG2, i32* %ARG3) {
L348:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = bitcast %struct.Table* %ARG1 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 11
  %load_target = load i8, i8* %6
  %R2345 = zext i8 %load_target to i32
  %R2346 = shl i64 1, i32 %R2345
  %R2347 = trunc i64 %R2346 to i32
  store i32 0, i32* %4
  store i32 0, i32* %2
  store i32 0, i32* %3
  store i32 0, i32* %1
  store i32 %R2347, i32* %0
  br label %L349

L349:                                             ; preds = %L351, %L350, %L348
  %7 = load i32, i32* %0
  %R2349 = add i32 %7, -1
  store i32 %R2349, i32* %0
  %cond = icmp ne i32 %7, 0
  br i1 %cond, label %L350, label %L352

L350:                                             ; preds = %L349
  %8 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %9 = bitcast %struct.Node** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to %struct.Node**
  %load_target1 = load %struct.Node*, %struct.Node** %11
  %R2353 = sext i32 %R2349 to i64
  %R2354 = mul i64 %R2353, 40
  %12 = bitcast %struct.Node* %load_target1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %R2354
  %14 = bitcast i8* %13 to %struct.Node*
  %15 = bitcast %struct.Node* %14 to i32*
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i32*
  %load_target2 = load i32, i32* %18
  %cond3 = icmp ne i32 %load_target2, 0
  br i1 %cond3, label %L351, label %L349

L351:                                             ; preds = %L350
  %19 = bitcast %struct.Node* %14 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i32 16
  %21 = bitcast i8* %20 to %struct.Node*
  %R2363 = call i32 @countint(%struct.Node* %21, i32* %ARG2)
  %22 = load i32, i32* %1
  %R2366 = add i32 %22, %R2363
  %23 = load i32, i32* %2
  %R2369 = add i32 %23, 1
  store i32 %R2369, i32* %4
  store i32 %R2369, i32* %2
  store i32 %R2366, i32* %3
  store i32 %R2366, i32* %1
  br label %L349

L352:                                             ; preds = %L349
  %24 = load i32, i32* %3
  %25 = bitcast i32* %ARG3 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to i32*
  %load_target4 = load i32, i32* %27
  %R2374 = add i32 %load_target4, %24
  %28 = bitcast i32* %ARG3 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 0
  %30 = bitcast i8* %29 to i32*
  store i32 %R2374, i32* %30
  %31 = load i32, i32* %4
  ret i32 %31
}

define internal void @setarrayvector(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG3) {
L353:
  %0 = alloca i8*
  %1 = alloca i32
  %R2379 = add i32 %ARG3, 1
  %R2380 = sext i32 %R2379 to i64
  %R2381 = icmp ule i64 %R2380, 1152921504606846975
  %R23811 = zext i1 %R2381 to i32
  %cond = icmp ne i32 %R23811, 0
  br i1 %cond, label %L354, label %L355

L354:                                             ; preds = %L353
  %2 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %3 = bitcast %struct.lua_TValue** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 24
  %5 = bitcast i8* %4 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %5
  %R2385 = bitcast %struct.lua_TValue* %load_target to i8*
  %6 = bitcast %struct.Table* %ARG2 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 56
  %9 = bitcast i8* %8 to i32*
  %load_target2 = load i32, i32* %9
  %R2388 = sext i32 %load_target2 to i64
  %R2389 = mul i64 %R2388, 16
  %R2391 = sext i32 %ARG3 to i64
  %R2392 = mul i64 %R2391, 16
  %R2393 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R2385, i64 %R2389, i64 %R2392)
  store i8* %R2393, i8** %0
  br label %L356

L355:                                             ; preds = %L353
  %R2395 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R2395, i8** %0
  br label %L356

L356:                                             ; preds = %L355, %L354
  %10 = load i8*, i8** %0
  %R2398 = bitcast i8* %10 to %struct.lua_TValue*
  %11 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %12 = bitcast %struct.lua_TValue** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 24
  %14 = bitcast i8* %13 to %struct.lua_TValue**
  store %struct.lua_TValue* %R2398, %struct.lua_TValue** %14
  %15 = bitcast %struct.Table* %ARG2 to i32*
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 56
  %18 = bitcast i8* %17 to i32*
  %load_target3 = load i32, i32* %18
  store i32 %load_target3, i32* %1
  br label %L357

L357:                                             ; preds = %L358, %L356
  %19 = load i32, i32* %1
  %R2404 = icmp slt i32 %19, %ARG3
  %R24044 = zext i1 %R2404 to i32
  %cond5 = icmp ne i32 %R24044, 0
  br i1 %cond5, label %L358, label %L359

L358:                                             ; preds = %L357
  %20 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 24
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target6 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %R2408 = sext i32 %19 to i64
  %R2409 = mul i64 %R2408, 16
  %24 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %R2409
  %26 = bitcast i8* %25 to %struct.lua_TValue*
  %27 = bitcast %struct.lua_TValue* %26 to i32*
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30
  %R2412 = add i32 %19, 1
  store i32 %R2412, i32* %1
  br label %L357

L359:                                             ; preds = %L357
  %31 = bitcast %struct.Table* %ARG2 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 56
  %34 = bitcast i8* %33 to i32*
  store i32 %ARG3, i32* %34
  ret void
}

define internal void @setnodevector(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG3) {
L360:
  %0 = alloca i8*
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  store i32 %ARG3, i32* %3
  %cond = icmp ne i32 %ARG3, 0
  br i1 %cond, label %L362, label %L361

L361:                                             ; preds = %L360
  %4 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %5 = bitcast %struct.Node** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 32
  %7 = bitcast i8* %6 to %struct.Node**
  store %struct.Node* @dummynode_, %struct.Node** %7
  store i32 0, i32* %2
  br label %L370

L362:                                             ; preds = %L360
  %R2421 = add i32 %ARG3, -1
  %R2423 = call i32 @luaO_log2(i32 %R2421)
  %R2424 = add i32 %R2423, 1
  %R2426 = icmp sgt i32 %R2424, 30
  %R24261 = zext i1 %R2426 to i32
  %cond2 = icmp ne i32 %R24261, 0
  br i1 %cond2, label %L363, label %L364

L363:                                             ; preds = %L362
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0))
  br label %L364

L364:                                             ; preds = %L363, %L362
  %R2430 = shl i64 1, i32 %R2424
  %R2431 = trunc i64 %R2430 to i32
  %R2433 = add i32 %R2431, 1
  %R2434 = sext i32 %R2433 to i64
  %R2435 = icmp ule i64 %R2434, 461168601842738790
  %R24353 = zext i1 %R2435 to i32
  store i32 %R2424, i32* %2
  %cond4 = icmp ne i32 %R24353, 0
  br i1 %cond4, label %L365, label %L366

L365:                                             ; preds = %L364
  %R2438 = sext i32 %R2431 to i64
  %R2439 = mul i64 %R2438, 40
  %R2440 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 %R2439)
  store i8* %R2440, i8** %0
  br label %L367

L366:                                             ; preds = %L364
  %R2442 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R2442, i8** %0
  br label %L367

L367:                                             ; preds = %L366, %L365
  %8 = load i8*, i8** %0
  %R2445 = bitcast i8* %8 to %struct.Node*
  %9 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %10 = bitcast %struct.Node** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 32
  %12 = bitcast i8* %11 to %struct.Node**
  store %struct.Node* %R2445, %struct.Node** %12
  store i32 0, i32* %1
  br label %L368

L368:                                             ; preds = %L369, %L367
  %13 = load i32, i32* %1
  %R2449 = icmp slt i32 %13, %R2431
  %R24495 = zext i1 %R2449 to i32
  store i32 %R2431, i32* %3
  %cond6 = icmp ne i32 %R24495, 0
  br i1 %cond6, label %L369, label %L370

L369:                                             ; preds = %L368
  %14 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %15 = bitcast %struct.Node** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 32
  %17 = bitcast i8* %16 to %struct.Node**
  %load_target = load %struct.Node*, %struct.Node** %17
  %R2453 = sext i32 %13 to i64
  %R2454 = mul i64 %R2453, 40
  %18 = bitcast %struct.Node* %load_target to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %R2454
  %20 = bitcast i8* %19 to %struct.Node*
  %21 = bitcast %struct.Node* %20 to %struct.Node**
  %22 = bitcast %struct.Node** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 32
  %24 = bitcast i8* %23 to %struct.Node**
  store %struct.Node* null, %struct.Node** %24
  %25 = bitcast %struct.Node* %20 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 24
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28
  %29 = bitcast %struct.Node* %20 to i32*
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32
  %R2460 = add i32 %13, 1
  store i32 %R2460, i32* %1
  br label %L368

L370:                                             ; preds = %L368, %L361
  %33 = load i32, i32* %2
  %R2462 = trunc i32 %33 to i8
  %34 = bitcast %struct.Table* %ARG2 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 11
  store i8 %R2462, i8* %35
  %36 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %37 = bitcast %struct.Node** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 32
  %39 = bitcast i8* %38 to %struct.Node**
  %load_target7 = load %struct.Node*, %struct.Node** %39
  %40 = load i32, i32* %3
  %R2467 = sext i32 %40 to i64
  %R2468 = mul i64 %R2467, 40
  %41 = bitcast %struct.Node* %load_target7 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %R2468
  %43 = bitcast i8* %42 to %struct.Node*
  %44 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %45 = bitcast %struct.Node** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 40
  %47 = bitcast i8* %46 to %struct.Node**
  store %struct.Node* %43, %struct.Node** %47
  ret void
}

define internal void @resize(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG3, i32 %ARG4) {
L371:
  %0 = alloca i32
  %1 = alloca i8*
  %2 = alloca i32
  %3 = bitcast %struct.Table* %ARG2 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 56
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %7 = bitcast %struct.Table* %ARG2 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 11
  %load_target1 = load i8, i8* %8
  %R2475 = zext i8 %load_target1 to i32
  %9 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %10 = bitcast %struct.Node** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 32
  %12 = bitcast i8* %11 to %struct.Node**
  %load_target2 = load %struct.Node*, %struct.Node** %12
  %R2480 = icmp sgt i32 %ARG3, %load_target
  %R24803 = zext i1 %R2480 to i32
  %cond = icmp ne i32 %R24803, 0
  br i1 %cond, label %L372, label %L373

L372:                                             ; preds = %L371
  call void @setarrayvector(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG3)
  br label %L373

L373:                                             ; preds = %L372, %L371
  call void @setnodevector(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG4)
  %R2489 = icmp slt i32 %ARG3, %load_target
  %R24894 = zext i1 %R2489 to i32
  %cond5 = icmp ne i32 %R24894, 0
  br i1 %cond5, label %L374, label %L383

L374:                                             ; preds = %L373
  %13 = bitcast %struct.Table* %ARG2 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 56
  %16 = bitcast i8* %15 to i32*
  store i32 %ARG3, i32* %16
  store i32 %ARG3, i32* %0
  br label %L375

L375:                                             ; preds = %L378, %L374
  %17 = load i32, i32* %0
  %R2495 = icmp slt i32 %17, %load_target
  %R24956 = zext i1 %R2495 to i32
  %cond7 = icmp ne i32 %R24956, 0
  br i1 %cond7, label %L376, label %L379

L376:                                             ; preds = %L375
  %18 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %19 = bitcast %struct.lua_TValue** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 24
  %21 = bitcast i8* %20 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %21
  %R2499 = sext i32 %17 to i64
  %R2500 = mul i64 %R2499, 16
  %22 = bitcast %struct.lua_TValue* %load_target8 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %R2500
  %24 = bitcast i8* %23 to %struct.lua_TValue*
  %25 = bitcast %struct.lua_TValue* %24 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i32*
  %load_target9 = load i32, i32* %28
  %cond10 = icmp ne i32 %load_target9, 0
  br i1 %cond10, label %L377, label %L378

L377:                                             ; preds = %L376
  %R2513 = add i32 %17, 1
  %R2514 = call %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %R2513)
  %29 = bitcast %struct.lua_TValue* %24 to { [8 x i8] }*
  %30 = bitcast { [8 x i8] }* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = bitcast i8* %31 to { [8 x i8] }*
  %load_target11 = load { [8 x i8] }, { [8 x i8] }* %32
  %33 = bitcast %struct.lua_TValue* %R2514 to { [8 x i8] }*
  %34 = bitcast { [8 x i8] }* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to { [8 x i8] }*
  store { [8 x i8] } %load_target11, { [8 x i8] }* %36
  %37 = bitcast %struct.lua_TValue* %24 to i32*
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to i32*
  %load_target12 = load i32, i32* %40
  %41 = bitcast %struct.lua_TValue* %R2514 to i32*
  %42 = bitcast i32* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 %load_target12, i32* %44
  br label %L378

L378:                                             ; preds = %L377, %L376
  %R2523 = add i32 %17, 1
  store i32 %R2523, i32* %0
  br label %L375

L379:                                             ; preds = %L375
  %R2525 = add i32 %ARG3, 1
  %R2526 = sext i32 %R2525 to i64
  %R2527 = icmp ule i64 %R2526, 1152921504606846975
  %R252713 = zext i1 %R2527 to i32
  %cond14 = icmp ne i32 %R252713, 0
  br i1 %cond14, label %L380, label %L381

L380:                                             ; preds = %L379
  %45 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %46 = bitcast %struct.lua_TValue** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 24
  %48 = bitcast i8* %47 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %48
  %R2531 = bitcast %struct.lua_TValue* %load_target15 to i8*
  %R2533 = sext i32 %load_target to i64
  %R2534 = mul i64 %R2533, 16
  %R2536 = sext i32 %ARG3 to i64
  %R2537 = mul i64 %R2536, 16
  %R2538 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R2531, i64 %R2534, i64 %R2537)
  store i8* %R2538, i8** %1
  br label %L382

L381:                                             ; preds = %L379
  %R2540 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R2540, i8** %1
  br label %L382

L382:                                             ; preds = %L381, %L380
  %49 = load i8*, i8** %1
  %R2543 = bitcast i8* %49 to %struct.lua_TValue*
  %50 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %51 = bitcast %struct.lua_TValue** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 24
  %53 = bitcast i8* %52 to %struct.lua_TValue**
  store %struct.lua_TValue* %R2543, %struct.lua_TValue** %53
  br label %L383

L383:                                             ; preds = %L382, %L373
  %R2546 = shl i64 1, i32 %R2475
  %R2547 = add i64 %R2546, -1
  %R2548 = trunc i64 %R2547 to i32
  store i32 %R2548, i32* %2
  br label %L384

L384:                                             ; preds = %L387, %L383
  %54 = load i32, i32* %2
  %R2550 = icmp sge i32 %54, 0
  %R255016 = zext i1 %R2550 to i32
  %cond17 = icmp ne i32 %R255016, 0
  br i1 %cond17, label %L385, label %L388

L385:                                             ; preds = %L384
  %R2553 = sext i32 %54 to i64
  %R2554 = mul i64 %R2553, 40
  %55 = bitcast %struct.Node* %load_target2 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 %R2554
  %57 = bitcast i8* %56 to %struct.Node*
  %58 = bitcast %struct.Node* %57 to i32*
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 8
  %61 = bitcast i8* %60 to i32*
  %load_target18 = load i32, i32* %61
  %cond19 = icmp ne i32 %load_target18, 0
  br i1 %cond19, label %L386, label %L387

L386:                                             ; preds = %L385
  %62 = bitcast %struct.Node* %57 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i32 16
  %64 = bitcast i8* %63 to %struct.Node*
  %R2566 = call %struct.lua_TValue* @luaH_set(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.Node* %64)
  %65 = bitcast %struct.Node* %57 to { [8 x i8] }*
  %66 = bitcast { [8 x i8] }* %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = bitcast i8* %67 to { [8 x i8] }*
  %load_target20 = load { [8 x i8] }, { [8 x i8] }* %68
  %69 = bitcast %struct.lua_TValue* %R2566 to { [8 x i8] }*
  %70 = bitcast { [8 x i8] }* %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 0
  %72 = bitcast i8* %71 to { [8 x i8] }*
  store { [8 x i8] } %load_target20, { [8 x i8] }* %72
  %73 = bitcast %struct.Node* %57 to i32*
  %74 = bitcast i32* %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 8
  %76 = bitcast i8* %75 to i32*
  %load_target21 = load i32, i32* %76
  %77 = bitcast %struct.lua_TValue* %R2566 to i32*
  %78 = bitcast i32* %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = bitcast i8* %79 to i32*
  store i32 %load_target21, i32* %80
  br label %L387

L387:                                             ; preds = %L386, %L385
  %R2575 = add i32 %54, -1
  store i32 %R2575, i32* %2
  br label %L384

L388:                                             ; preds = %L384
  %R2578 = icmp ne %struct.Node* %load_target2, @dummynode_
  %R257822 = zext i1 %R2578 to i32
  %cond23 = icmp ne i32 %R257822, 0
  br i1 %cond23, label %L389, label %L390

L389:                                             ; preds = %L388
  %R2581 = bitcast %struct.Node* %load_target2 to i8*
  %R2583 = shl i64 1, i32 %R2475
  %R2584 = mul i64 %R2583, 40
  %R2585 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R2581, i64 %R2584, i64 0)
  br label %L390

L390:                                             ; preds = %L389, %L388
  ret void
}

declare %struct.lua_TValue* @luaH_setnum(%struct.lua_State*, %struct.Table*, i32)

declare %struct.lua_TValue* @luaH_set(%struct.lua_State*, %struct.Table*, %struct.lua_TValue*)

define internal void @luaH_resizearray(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG3) {
L391:
  %0 = alloca i64
  %1 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %2 = bitcast %struct.Node** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.Node**
  %load_target = load %struct.Node*, %struct.Node** %4
  %R2589 = icmp eq %struct.Node* %load_target, @dummynode_
  %R25891 = zext i1 %R2589 to i32
  %cond = icmp ne i32 %R25891, 0
  br i1 %cond, label %L392, label %L393

L392:                                             ; preds = %L391
  store i64 0, i64* %0
  br label %L394

L393:                                             ; preds = %L391
  %5 = bitcast %struct.Table* %ARG2 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 11
  %load_target2 = load i8, i8* %6
  %R2592 = zext i8 %load_target2 to i32
  %R2593 = shl i64 1, i32 %R2592
  store i64 %R2593, i64* %0
  br label %L394

L394:                                             ; preds = %L393, %L392
  %7 = load i64, i64* %0
  %R2595 = trunc i64 %7 to i32
  call void @resize(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG3, i32 %R2595)
  ret void
}

define internal void @rehash(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3) {
L395:
  %nasize_0x62d0008c7560 = alloca i32
  %nums_0x62d0008c7730 = alloca [31 x i32]
  %0 = alloca i32
  store i32 0, i32* %0
  br label %L396

L396:                                             ; preds = %L397, %L395
  %1 = load i32, i32* %0
  %R2601 = icmp sle i32 %1, 30
  %R26011 = zext i1 %R2601 to i32
  %R2602 = bitcast [31 x i32]* %nums_0x62d0008c7730 to i32*
  %cond = icmp ne i32 %R26011, 0
  br i1 %cond, label %L397, label %L398

L397:                                             ; preds = %L396
  %R2604 = sext i32 %1 to i64
  %R2605 = mul i64 %R2604, 4
  %2 = bitcast i32* %R2602 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %R2605
  %4 = bitcast i8* %3 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7
  %R2608 = add i32 %1, 1
  store i32 %R2608, i32* %0
  br label %L396

L398:                                             ; preds = %L396
  %R2611 = call i32 @numusearray(%struct.Table* %ARG2, i32* %R2602)
  %8 = bitcast i32* %nasize_0x62d0008c7560 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i32*
  store i32 %R2611, i32* %10
  %R2616 = call i32 @numusehash(%struct.Table* %ARG2, i32* %R2602, i32* %nasize_0x62d0008c7560)
  %R2619 = add i32 %R2611, %R2616
  %R2623 = call i32 @countint(%struct.lua_TValue* %ARG3, i32* %R2602)
  %11 = bitcast i32* %nasize_0x62d0008c7560 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i32*
  %load_target = load i32, i32* %13
  %R2626 = add i32 %load_target, %R2623
  %14 = bitcast i32* %nasize_0x62d0008c7560 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to i32*
  store i32 %R2626, i32* %16
  %R2629 = add i32 %R2619, 1
  %R2632 = call i32 @computesizes(i32* %R2602, i32* %nasize_0x62d0008c7560)
  %17 = bitcast i32* %nasize_0x62d0008c7560 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i32*
  %load_target2 = load i32, i32* %19
  %R2638 = sub i32 %R2629, %R2632
  call void @resize(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %load_target2, i32 %R2638)
  ret void
}

define internal %struct.Table* @luaH_new(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L399:
  %R2640 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* null, i64 0, i64 64)
  %R2641 = bitcast i8* %R2640 to %struct.Table*
  %R2644 = bitcast %struct.Table* %R2641 to { [184 x i8] }*
  call void @luaC_link(%struct.lua_State* %ARG1, { [184 x i8] }* %R2644, i8 5)
  %0 = bitcast %struct.Table* %R2641 to %struct.Table**
  %1 = bitcast %struct.Table** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.Table**
  store %struct.Table* null, %struct.Table** %3
  %4 = bitcast %struct.Table* %R2641 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 10
  store i8 -1, i8* %5
  %6 = bitcast %struct.Table* %R2641 to %struct.lua_TValue**
  %7 = bitcast %struct.lua_TValue** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  %9 = bitcast i8* %8 to %struct.lua_TValue**
  store %struct.lua_TValue* null, %struct.lua_TValue** %9
  %10 = bitcast %struct.Table* %R2641 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 56
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13
  %14 = bitcast %struct.Table* %R2641 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 11
  store i8 0, i8* %15
  %16 = bitcast %struct.Table* %R2641 to %struct.Node**
  %17 = bitcast %struct.Node** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 32
  %19 = bitcast i8* %18 to %struct.Node**
  store %struct.Node* @dummynode_, %struct.Node** %19
  call void @setarrayvector(%struct.lua_State* %ARG1, %struct.Table* %R2641, i32 %ARG2)
  call void @setnodevector(%struct.lua_State* %ARG1, %struct.Table* %R2641, i32 %ARG3)
  ret %struct.Table* %R2641
}

define internal void @luaH_free(%struct.lua_State* %ARG1, %struct.Table* %ARG2) {
L400:
  %0 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %1 = bitcast %struct.Node** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.Node**
  %load_target = load %struct.Node*, %struct.Node** %3
  %R2664 = icmp ne %struct.Node* %load_target, @dummynode_
  %R26641 = zext i1 %R2664 to i32
  %cond = icmp ne i32 %R26641, 0
  br i1 %cond, label %L401, label %L402

L401:                                             ; preds = %L400
  %R2668 = bitcast %struct.Node* %load_target to i8*
  %4 = bitcast %struct.Table* %ARG2 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 11
  %load_target2 = load i8, i8* %5
  %R2671 = zext i8 %load_target2 to i32
  %R2672 = shl i64 1, i32 %R2671
  %R2673 = mul i64 %R2672, 40
  %R2674 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R2668, i64 %R2673, i64 0)
  br label %L402

L402:                                             ; preds = %L401, %L400
  %6 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %7 = bitcast %struct.lua_TValue** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  %9 = bitcast i8* %8 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %9
  %R2678 = bitcast %struct.lua_TValue* %load_target3 to i8*
  %10 = bitcast %struct.Table* %ARG2 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 56
  %13 = bitcast i8* %12 to i32*
  %load_target4 = load i32, i32* %13
  %R2681 = sext i32 %load_target4 to i64
  %R2682 = mul i64 %R2681, 16
  %R2683 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R2678, i64 %R2682, i64 0)
  %R2686 = bitcast %struct.Table* %ARG2 to i8*
  %R2687 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R2686, i64 64, i64 0)
  ret void
}

define internal %struct.Node* @getfreepos(%struct.Table* %ARG1) {
L403:
  %0 = alloca %struct.Node*
  br label %L404

L404:                                             ; preds = %L405, %L403
  %1 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %2 = bitcast %struct.Node** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 40
  %4 = bitcast i8* %3 to %struct.Node**
  %load_target = load %struct.Node*, %struct.Node** %4
  %5 = bitcast %struct.Node* %load_target to i8*
  %6 = getelementptr inbounds i8, i8* %5, %struct.Node* inttoptr (i64 -40 to %struct.Node*)
  %7 = bitcast i8* %6 to %struct.Node*
  %8 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %9 = bitcast %struct.Node** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to %struct.Node**
  store %struct.Node* %7, %struct.Node** %11
  %12 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %13 = bitcast %struct.Node** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to %struct.Node**
  %load_target1 = load %struct.Node*, %struct.Node** %15
  %R2693 = icmp ugt %struct.Node* %load_target, %load_target1
  %R26932 = zext i1 %R2693 to i32
  %cond = icmp ne i32 %R26932, 0
  br i1 %cond, label %L405, label %L407

L405:                                             ; preds = %L404
  %16 = bitcast %struct.Node* %load_target to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 -16
  %19 = bitcast i8* %18 to i32*
  %load_target3 = load i32, i32* %19
  %cond4 = icmp ne i32 %load_target3, 0
  br i1 %cond4, label %L404, label %L406

L406:                                             ; preds = %L405
  store %struct.Node* %7, %struct.Node** %0
  br label %L408

L407:                                             ; preds = %L404
  store %struct.Node* null, %struct.Node** %0
  br label %L408

L408:                                             ; preds = %L407, %L406
  %20 = load %struct.Node*, %struct.Node** %0
  ret %struct.Node* %20
}

define internal %struct.lua_TValue* @newkey(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3) {
L409:
  %0 = alloca %struct.Node*
  %1 = alloca %struct.Node*
  %2 = alloca %struct.lua_TValue*
  %R2703 = call %struct.Node* @mainposition(%struct.Table* %ARG2, %struct.lua_TValue* %ARG3)
  %3 = bitcast %struct.Node* %R2703 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %R2707 = icmp ne i32 %load_target, 0
  %R27071 = zext i1 %R2707 to i32
  %R2710 = icmp eq %struct.Node* %R2703, @dummynode_
  %R27102 = zext i1 %R2710 to i32
  %7 = icmp ne i32 %R27071, 0
  %8 = icmp ne i32 %R27102, 0
  %R2711 = or i1 %7, %8
  %R27113 = zext i1 %R2711 to i32
  store %struct.Node* %R2703, %struct.Node** %1
  %cond = icmp ne i32 %R27113, 0
  br i1 %cond, label %L410, label %L417

L410:                                             ; preds = %L409
  %R2713 = call %struct.Node* @getfreepos(%struct.Table* %ARG2)
  %cond4 = icmp ne %struct.Node* %R2713, null
  br i1 %cond4, label %L412, label %L411

L411:                                             ; preds = %L410
  call void @rehash(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3)
  %R2722 = call %struct.lua_TValue* @luaH_set(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3)
  store %struct.lua_TValue* %R2722, %struct.lua_TValue** %2
  br label %L422

L412:                                             ; preds = %L410
  %9 = bitcast %struct.Node* %R2703 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i32 16
  %11 = bitcast i8* %10 to %struct.Node*
  %R2728 = call %struct.Node* @mainposition(%struct.Table* %ARG2, %struct.Node* %11)
  %R2731 = icmp ne %struct.Node* %R2728, %R2703
  %R27315 = zext i1 %R2731 to i32
  store %struct.Node* %R2728, %struct.Node** %0
  %cond6 = icmp ne i32 %R27315, 0
  br i1 %cond6, label %L413, label %L416

L413:                                             ; preds = %L414, %L412
  %12 = load %struct.Node*, %struct.Node** %0
  %13 = bitcast %struct.Node* %12 to %struct.Node**
  %14 = bitcast %struct.Node** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast i8* %15 to %struct.Node**
  %load_target7 = load %struct.Node*, %struct.Node** %16
  %R2735 = icmp ne %struct.Node* %load_target7, %R2703
  %R27358 = zext i1 %R2735 to i32
  %cond9 = icmp ne i32 %R27358, 0
  br i1 %cond9, label %L414, label %L415

L414:                                             ; preds = %L413
  store %struct.Node* %load_target7, %struct.Node** %0
  br label %L413

L415:                                             ; preds = %L413
  %17 = bitcast %struct.Node* %12 to %struct.Node**
  %18 = bitcast %struct.Node** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 32
  %20 = bitcast i8* %19 to %struct.Node**
  store %struct.Node* %R2713, %struct.Node** %20
  %21 = bitcast %struct.Node* %R2703 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to %struct.Node*
  %load_target10 = load %struct.Node, %struct.Node* %23
  %24 = bitcast %struct.Node* %R2713 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to %struct.Node*
  store %struct.Node %load_target10, %struct.Node* %26
  %27 = bitcast %struct.Node* %R2703 to %struct.Node**
  %28 = bitcast %struct.Node** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 32
  %30 = bitcast i8* %29 to %struct.Node**
  store %struct.Node* null, %struct.Node** %30
  %31 = bitcast %struct.Node* %R2703 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34
  store %struct.Node* %R2703, %struct.Node** %1
  br label %L417

L416:                                             ; preds = %L412
  %35 = bitcast %struct.Node* %R2703 to %struct.Node**
  %36 = bitcast %struct.Node** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 32
  %38 = bitcast i8* %37 to %struct.Node**
  %load_target11 = load %struct.Node*, %struct.Node** %38
  %39 = bitcast %struct.Node* %R2713 to %struct.Node**
  %40 = bitcast %struct.Node** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 32
  %42 = bitcast i8* %41 to %struct.Node**
  store %struct.Node* %load_target11, %struct.Node** %42
  %43 = bitcast %struct.Node* %R2703 to %struct.Node**
  %44 = bitcast %struct.Node** %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %struct.Node**
  store %struct.Node* %R2713, %struct.Node** %46
  store %struct.Node* %R2713, %struct.Node** %1
  br label %L417

L417:                                             ; preds = %L416, %L415, %L409
  %47 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %48 = bitcast { [8 x i8] }* %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 0
  %50 = bitcast i8* %49 to { [8 x i8] }*
  %load_target12 = load { [8 x i8] }, { [8 x i8] }* %50
  %51 = load %struct.Node*, %struct.Node** %1
  %52 = bitcast %struct.Node* %51 to { [8 x i8] }*
  %53 = bitcast { [8 x i8] }* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 16
  %55 = bitcast i8* %54 to { [8 x i8] }*
  store { [8 x i8] } %load_target12, { [8 x i8] }* %55
  %56 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = bitcast i8* %58 to i32*
  %load_target13 = load i32, i32* %59
  %60 = bitcast %struct.Node* %51 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 24
  %63 = bitcast i8* %62 to i32*
  store i32 %load_target13, i32* %63
  %64 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %65 = bitcast i32* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i32*
  %load_target14 = load i32, i32* %67
  %R2761 = icmp sge i32 %load_target14, 4
  %R276115 = zext i1 %R2761 to i32
  %cond16 = icmp ne i32 %R276115, 0
  br i1 %cond16, label %L418, label %L421

L418:                                             ; preds = %L417
  %68 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %69 = bitcast { [184 x i8] }** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 0
  %71 = bitcast i8* %70 to { [184 x i8] }**
  %load_target17 = load { [184 x i8] }*, { [184 x i8] }** %71
  %72 = bitcast { [184 x i8] }* %load_target17 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 9
  %load_target18 = load i8, i8* %73
  %R2765 = zext i8 %load_target18 to i32
  %R2766 = and i32 %R2765, 3
  %cond19 = icmp ne i32 %R2766, 0
  br i1 %cond19, label %L419, label %L421

L419:                                             ; preds = %L418
  %R2768 = bitcast %struct.Table* %ARG2 to { [184 x i8] }*
  %74 = bitcast { [184 x i8] }* %R2768 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 9
  %load_target20 = load i8, i8* %75
  %R2770 = zext i8 %load_target20 to i32
  %R2771 = and i32 %R2770, 4
  %cond21 = icmp ne i32 %R2771, 0
  br i1 %cond21, label %L420, label %L421

L420:                                             ; preds = %L419
  call void @luaC_barrierback(%struct.lua_State* %ARG1, %struct.Table* %ARG2)
  br label %L421

L421:                                             ; preds = %L420, %L419, %L418, %L417
  store %struct.Node* %51, %struct.lua_TValue** %2
  br label %L422

L422:                                             ; preds = %L421, %L411
  %76 = load %struct.lua_TValue*, %struct.lua_TValue** %2
  ret %struct.lua_TValue* %76
}

declare void @luaC_barrierback(%struct.lua_State*, %struct.Table*)

define internal %struct.lua_TValue* @luaH_getnum(%struct.Table* %ARG1, i32 %ARG2) {
L423:
  %0 = alloca %struct.Node*
  %1 = alloca %struct.lua_TValue*
  %R2778 = add i32 %ARG2, -1
  %2 = bitcast %struct.Table* %ARG1 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 56
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %R2782 = icmp ult i32 %R2778, %load_target
  %R27821 = zext i1 %R2782 to i32
  %cond = icmp ne i32 %R27821, 0
  br i1 %cond, label %L424, label %L425

L424:                                             ; preds = %L423
  %6 = bitcast %struct.Table* %ARG1 to %struct.lua_TValue**
  %7 = bitcast %struct.lua_TValue** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  %9 = bitcast i8* %8 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %9
  %R2786 = add i32 %ARG2, -1
  %R2787 = sext i32 %R2786 to i64
  %R2788 = mul i64 %R2787, 16
  %10 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %R2788
  %12 = bitcast i8* %11 to %struct.lua_TValue*
  store %struct.lua_TValue* %12, %struct.lua_TValue** %1
  br label %L431

L425:                                             ; preds = %L423
  %R2792 = sitofp i32 %ARG2 to double
  %R2795 = call %struct.Node* @hashnum(%struct.Table* %ARG1, double %R2792)
  store %struct.Node* %R2795, %struct.Node** %0
  br label %L426

L426:                                             ; preds = %L429, %L425
  %13 = load %struct.Node*, %struct.Node** %0
  %14 = bitcast %struct.Node* %13 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 24
  %17 = bitcast i8* %16 to i32*
  %load_target3 = load i32, i32* %17
  %R2798 = icmp eq i32 %load_target3, 3
  %R27984 = zext i1 %R2798 to i32
  %cond5 = icmp ne i32 %R27984, 0
  br i1 %cond5, label %L427, label %L429

L427:                                             ; preds = %L426
  %18 = bitcast %struct.Node* %13 to double*
  %19 = bitcast double* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 16
  %21 = bitcast i8* %20 to double*
  %load_target6 = load double, double* %21
  %R2802 = fcmp oeq double %load_target6, %R2792
  %R28027 = zext i1 %R2802 to i32
  %cond8 = icmp ne i32 %R28027, 0
  br i1 %cond8, label %L428, label %L429

L428:                                             ; preds = %L427
  store %struct.Node* %13, %struct.lua_TValue** %1
  br label %L431

L429:                                             ; preds = %L427, %L426
  %22 = bitcast %struct.Node* %13 to %struct.Node**
  %23 = bitcast %struct.Node** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 32
  %25 = bitcast i8* %24 to %struct.Node**
  %load_target9 = load %struct.Node*, %struct.Node** %25
  store %struct.Node* %load_target9, %struct.Node** %0
  %cond10 = icmp ne %struct.Node* %load_target9, null
  br i1 %cond10, label %L426, label %L430

L430:                                             ; preds = %L429
  store %struct.lua_TValue* @luaO_nilobject_.3, %struct.lua_TValue** %1
  br label %L431

L431:                                             ; preds = %L430, %L428, %L424
  %26 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  ret %struct.lua_TValue* %26
}

define internal %struct.lua_TValue* @luaH_getstr.26(%struct.Table* %ARG1, { [24 x i8] }* %ARG2) {
L432:
  %0 = alloca %struct.Node*
  %1 = alloca %struct.lua_TValue*
  %2 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %3 = bitcast %struct.Node** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to %struct.Node**
  %load_target = load %struct.Node*, %struct.Node** %5
  %6 = bitcast { [24 x i8] }* %ARG2 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 12
  %9 = bitcast i8* %8 to i32*
  %load_target1 = load i32, i32* %9
  %R2813 = zext i32 %load_target1 to i64
  %10 = bitcast %struct.Table* %ARG1 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 11
  %load_target2 = load i8, i8* %11
  %R2816 = zext i8 %load_target2 to i32
  %R2817 = shl i64 1, i32 %R2816
  %R2818 = add i64 %R2817, -1
  %R2819 = and i64 %R2813, %R2818
  %R2820 = trunc i64 %R2819 to i32
  %R2821 = sext i32 %R2820 to i64
  %R2822 = mul i64 %R2821, 40
  %12 = bitcast %struct.Node* %load_target to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %R2822
  %14 = bitcast i8* %13 to %struct.Node*
  store %struct.Node* %14, %struct.Node** %0
  br label %L433

L433:                                             ; preds = %L436, %L432
  %15 = load %struct.Node*, %struct.Node** %0
  %16 = bitcast %struct.Node* %15 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to i32*
  %load_target3 = load i32, i32* %19
  %R2826 = icmp eq i32 %load_target3, 4
  %R28264 = zext i1 %R2826 to i32
  %cond = icmp ne i32 %R28264, 0
  br i1 %cond, label %L434, label %L436

L434:                                             ; preds = %L433
  %20 = bitcast %struct.Node* %15 to { [184 x i8] }**
  %21 = bitcast { [184 x i8] }** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %23
  %R2831 = icmp eq { [184 x i8] }* %load_target5, { [24 x i8] }* %ARG2
  %R28316 = zext i1 %R2831 to i32
  %cond7 = icmp ne i32 %R28316, 0
  br i1 %cond7, label %L435, label %L436

L435:                                             ; preds = %L434
  store %struct.Node* %15, %struct.lua_TValue** %1
  br label %L438

L436:                                             ; preds = %L434, %L433
  %24 = bitcast %struct.Node* %15 to %struct.Node**
  %25 = bitcast %struct.Node** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %27 = bitcast i8* %26 to %struct.Node**
  %load_target8 = load %struct.Node*, %struct.Node** %27
  store %struct.Node* %load_target8, %struct.Node** %0
  %cond9 = icmp ne %struct.Node* %load_target8, null
  br i1 %cond9, label %L433, label %L437

L437:                                             ; preds = %L436
  store %struct.lua_TValue* @luaO_nilobject_.3, %struct.lua_TValue** %1
  br label %L438

L438:                                             ; preds = %L437, %L435
  %28 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  ret %struct.lua_TValue* %28
}

define internal %struct.lua_TValue* @luaH_get(%struct.Table* %ARG1, %struct.lua_TValue* %ARG2) {
L439:
  %0 = alloca %struct.Node*
  %1 = alloca %struct.lua_TValue*
  %2 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  switch i32 %load_target, label %L444 [
    i32 0, label %L440
    i32 3, label %L442
    i32 4, label %L441
  ]

L440:                                             ; preds = %L439
  store %struct.lua_TValue* @luaO_nilobject_.3, %struct.lua_TValue** %1
  br label %L449

L441:                                             ; preds = %L439
  %6 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %7 = bitcast { [184 x i8] }** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %9
  %R2847 = call %struct.lua_TValue* @luaH_getstr(%struct.Table* %ARG1, { [184 x i8] }* %load_target1)
  store %struct.lua_TValue* %R2847, %struct.lua_TValue** %1
  br label %L449

L442:                                             ; preds = %L439
  %10 = bitcast %struct.lua_TValue* %ARG2 to double*
  %11 = bitcast double* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to double*
  %load_target2 = load double, double* %13
  %R2852 = fptosi double %load_target2 to i32
  %R2854 = sitofp i32 %R2852 to double
  %R2858 = fcmp oeq double %R2854, %load_target2
  %R28583 = zext i1 %R2858 to i32
  %cond = icmp ne i32 %R28583, 0
  br i1 %cond, label %L443, label %L444

L443:                                             ; preds = %L442
  %R2861 = call %struct.lua_TValue* @luaH_getnum(%struct.Table* %ARG1, i32 %R2852)
  store %struct.lua_TValue* %R2861, %struct.lua_TValue** %1
  br label %L449

L444:                                             ; preds = %L442, %L439
  %R2864 = call %struct.Node* @mainposition(%struct.Table* %ARG1, %struct.lua_TValue* %ARG2)
  store %struct.Node* %R2864, %struct.Node** %0
  br label %L445

L445:                                             ; preds = %L447, %L444
  %14 = load %struct.Node*, %struct.Node** %0
  %15 = bitcast %struct.Node* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i32 16
  %17 = bitcast i8* %16 to %struct.Node*
  %R2869 = call i32 @luaO_rawequalObj(%struct.Node* %17, %struct.lua_TValue* %ARG2)
  %cond4 = icmp ne i32 %R2869, 0
  br i1 %cond4, label %L446, label %L447

L446:                                             ; preds = %L445
  store %struct.Node* %14, %struct.lua_TValue** %1
  br label %L449

L447:                                             ; preds = %L445
  %18 = bitcast %struct.Node* %14 to %struct.Node**
  %19 = bitcast %struct.Node** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 32
  %21 = bitcast i8* %20 to %struct.Node**
  %load_target5 = load %struct.Node*, %struct.Node** %21
  store %struct.Node* %load_target5, %struct.Node** %0
  %cond6 = icmp ne %struct.Node* %load_target5, null
  br i1 %cond6, label %L445, label %L448

L448:                                             ; preds = %L447
  store %struct.lua_TValue* @luaO_nilobject_.3, %struct.lua_TValue** %1
  br label %L449

L449:                                             ; preds = %L448, %L446, %L443, %L441, %L440
  %22 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  ret %struct.lua_TValue* %22
}

define internal %struct.lua_TValue* @luaH_set.27(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3) {
L450:
  %0 = alloca %struct.lua_TValue*
  %R2878 = call %struct.lua_TValue* @luaH_get(%struct.Table* %ARG2, %struct.lua_TValue* %ARG3)
  %1 = bitcast %struct.Table* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 0, i8* %2
  %R2882 = icmp ne %struct.lua_TValue* %R2878, @luaO_nilobject_.3
  %R28821 = zext i1 %R2882 to i32
  %cond = icmp ne i32 %R28821, 0
  br i1 %cond, label %L451, label %L452

L451:                                             ; preds = %L450
  store %struct.lua_TValue* %R2878, %struct.lua_TValue** %0
  br label %L455

L452:                                             ; preds = %L450
  %3 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %cond2 = icmp ne i32 %load_target, 0
  br i1 %cond2, label %L454, label %L453

L453:                                             ; preds = %L452
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0))
  br label %L454

L454:                                             ; preds = %L453, %L452
  %R2908 = call %struct.lua_TValue* @newkey(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %ARG3)
  store %struct.lua_TValue* %R2908, %struct.lua_TValue** %0
  br label %L455

L455:                                             ; preds = %L454, %L451
  %7 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  ret %struct.lua_TValue* %7
}

define internal %struct.lua_TValue* @luaH_setnum.29(%struct.lua_State* %ARG1, %struct.Table* %ARG2, i32 %ARG3) {
L456:
  %k_0x62d000906a70 = alloca %struct.lua_TValue
  %0 = alloca %struct.lua_TValue*
  %R2911 = call %struct.lua_TValue* @luaH_getnum(%struct.Table* %ARG2, i32 %ARG3)
  %R2914 = icmp ne %struct.lua_TValue* %R2911, @luaO_nilobject_.3
  %R29141 = zext i1 %R2914 to i32
  %cond = icmp ne i32 %R29141, 0
  br i1 %cond, label %L457, label %L458

L457:                                             ; preds = %L456
  store %struct.lua_TValue* %R2911, %struct.lua_TValue** %0
  br label %L459

L458:                                             ; preds = %L456
  %R2920 = sitofp i32 %ARG3 to double
  %1 = bitcast %struct.lua_TValue* %k_0x62d000906a70 to double*
  %2 = bitcast double* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to double*
  store double %R2920, double* %4
  %5 = bitcast %struct.lua_TValue* %k_0x62d000906a70 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 3, i32* %8
  %R2926 = call %struct.lua_TValue* @newkey(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %k_0x62d000906a70)
  store %struct.lua_TValue* %R2926, %struct.lua_TValue** %0
  br label %L459

L459:                                             ; preds = %L458, %L457
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  ret %struct.lua_TValue* %9
}

define internal %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %ARG1, %struct.Table* %ARG2, { [24 x i8] }* %ARG3) {
L460:
  %k_0x62d000907ac0 = alloca %struct.lua_TValue
  %0 = alloca %struct.lua_TValue*
  %R2929 = call %struct.lua_TValue* @luaH_getstr(%struct.Table* %ARG2, { [24 x i8] }* %ARG3)
  %R2932 = icmp ne %struct.lua_TValue* %R2929, @luaO_nilobject_.3
  %R29321 = zext i1 %R2932 to i32
  %cond = icmp ne i32 %R29321, 0
  br i1 %cond, label %L461, label %L462

L461:                                             ; preds = %L460
  store %struct.lua_TValue* %R2929, %struct.lua_TValue** %0
  br label %L463

L462:                                             ; preds = %L460
  %R2938 = bitcast { [24 x i8] }* %ARG3 to { [184 x i8] }*
  %1 = bitcast %struct.lua_TValue* %k_0x62d000907ac0 to { [184 x i8] }**
  %2 = bitcast { [184 x i8] }** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to { [184 x i8] }**
  store { [184 x i8] }* %R2938, { [184 x i8] }** %4
  %5 = bitcast %struct.lua_TValue* %k_0x62d000907ac0 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 4, i32* %8
  %R2944 = call %struct.lua_TValue* @newkey(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.lua_TValue* %k_0x62d000907ac0)
  store %struct.lua_TValue* %R2944, %struct.lua_TValue** %0
  br label %L463

L463:                                             ; preds = %L462, %L461
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  ret %struct.lua_TValue* %9
}

define internal i32 @unbound_search(%struct.Table* %ARG1, i32 %ARG2) {
L464:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %R2947 = add i32 %ARG2, 1
  store i32 %R2947, i32* %0
  store i32 %ARG2, i32* %3
  br label %L465

L465:                                             ; preds = %L466, %L464
  %5 = load i32, i32* %0
  %R2951 = call %struct.lua_TValue* @luaH_getnum(%struct.Table* %ARG1, i32 %5)
  %6 = bitcast %struct.lua_TValue* %R2951 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to i32*
  %load_target = load i32, i32* %9
  store i32 %5, i32* %2
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L466, label %L471

L466:                                             ; preds = %L465
  %R2958 = mul i32 %5, 2
  %R2961 = icmp ugt i32 %R2958, 2147483645
  %R29611 = zext i1 %R2961 to i32
  store i32 %R2958, i32* %0
  store i32 %5, i32* %3
  %cond2 = icmp ne i32 %R29611, 0
  br i1 %cond2, label %L467, label %L465

L467:                                             ; preds = %L466
  store i32 1, i32* %1
  br label %L468

L468:                                             ; preds = %L469, %L467
  %10 = load i32, i32* %1
  %R2965 = call %struct.lua_TValue* @luaH_getnum(%struct.Table* %ARG1, i32 %10)
  %11 = bitcast %struct.lua_TValue* %R2965 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  %load_target3 = load i32, i32* %14
  %cond4 = icmp ne i32 %load_target3, 0
  br i1 %cond4, label %L469, label %L470

L469:                                             ; preds = %L468
  %R2970 = add i32 %10, 1
  store i32 %R2970, i32* %1
  br label %L468

L470:                                             ; preds = %L468
  %R2972 = add i32 %10, -1
  store i32 %R2972, i32* %4
  br label %L476

L471:                                             ; preds = %L474, %L473, %L465
  %15 = load i32, i32* %2
  %16 = load i32, i32* %3
  %R2977 = sub i32 %15, %16
  %R2978 = icmp ugt i32 %R2977, 1
  %R29785 = zext i1 %R2978 to i32
  %cond6 = icmp ne i32 %R29785, 0
  br i1 %cond6, label %L472, label %L475

L472:                                             ; preds = %L471
  %R2981 = add i32 %16, %15
  %R2982 = udiv i32 %R2981, 2
  %R2986 = call %struct.lua_TValue* @luaH_getnum(%struct.Table* %ARG1, i32 %R2982)
  %17 = bitcast %struct.lua_TValue* %R2986 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i32*
  %load_target7 = load i32, i32* %20
  %cond8 = icmp ne i32 %load_target7, 0
  br i1 %cond8, label %L474, label %L473

L473:                                             ; preds = %L472
  store i32 %R2982, i32* %2
  br label %L471

L474:                                             ; preds = %L472
  store i32 %R2982, i32* %3
  br label %L471

L475:                                             ; preds = %L471
  store i32 %16, i32* %4
  br label %L476

L476:                                             ; preds = %L475, %L470
  %21 = load i32, i32* %4
  ret i32 %21
}

define internal i32 @luaH_getn(%struct.Table* %ARG1) {
L477:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = bitcast %struct.Table* %ARG1 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 56
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %R2998 = icmp ugt i32 %load_target, 0
  %R29981 = zext i1 %R2998 to i32
  %cond = icmp ne i32 %R29981, 0
  br i1 %cond, label %L478, label %L485

L478:                                             ; preds = %L477
  %7 = bitcast %struct.Table* %ARG1 to %struct.lua_TValue**
  %8 = bitcast %struct.lua_TValue** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 24
  %10 = bitcast i8* %9 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %10
  %R3002 = add i32 %load_target, -1
  %R3003 = zext i32 %R3002 to i64
  %R3004 = mul i64 %R3003, 16
  %11 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %R3004
  %13 = bitcast i8* %12 to %struct.lua_TValue*
  %14 = bitcast %struct.lua_TValue* %13 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  %load_target3 = load i32, i32* %17
  store i32 %load_target, i32* %0
  %cond4 = icmp ne i32 %load_target3, 0
  br i1 %cond4, label %L485, label %L479

L479:                                             ; preds = %L478
  store i32 0, i32* %1
  br label %L480

L480:                                             ; preds = %L483, %L482, %L479
  %18 = load i32, i32* %0
  %19 = load i32, i32* %1
  %R3010 = sub i32 %18, %19
  %R3011 = icmp ugt i32 %R3010, 1
  %R30115 = zext i1 %R3011 to i32
  %cond6 = icmp ne i32 %R30115, 0
  br i1 %cond6, label %L481, label %L484

L481:                                             ; preds = %L480
  %R3014 = add i32 %19, %18
  %R3015 = udiv i32 %R3014, 2
  %R3019 = add i32 %R3015, -1
  %R3020 = zext i32 %R3019 to i64
  %R3021 = mul i64 %R3020, 16
  %20 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %R3021
  %22 = bitcast i8* %21 to %struct.lua_TValue*
  %23 = bitcast %struct.lua_TValue* %22 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i32*
  %load_target7 = load i32, i32* %26
  %cond8 = icmp ne i32 %load_target7, 0
  br i1 %cond8, label %L483, label %L482

L482:                                             ; preds = %L481
  store i32 %R3015, i32* %0
  br label %L480

L483:                                             ; preds = %L481
  store i32 %R3015, i32* %1
  br label %L480

L484:                                             ; preds = %L480
  store i32 %19, i32* %2
  br label %L488

L485:                                             ; preds = %L478, %L477
  %27 = bitcast %struct.Table* %ARG1 to %struct.Node**
  %28 = bitcast %struct.Node** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 32
  %30 = bitcast i8* %29 to %struct.Node**
  %load_target9 = load %struct.Node*, %struct.Node** %30
  %R3033 = icmp eq %struct.Node* %load_target9, @dummynode_
  %R303310 = zext i1 %R3033 to i32
  %cond11 = icmp ne i32 %R303310, 0
  br i1 %cond11, label %L486, label %L487

L486:                                             ; preds = %L485
  store i32 %load_target, i32* %2
  br label %L488

L487:                                             ; preds = %L485
  %R3038 = call i32 @unbound_search(%struct.Table* %ARG1, i32 %load_target)
  store i32 %R3038, i32* %2
  br label %L488

L488:                                             ; preds = %L487, %L486, %L484
  %31 = load i32, i32* %2
  ret i32 %31
}

define internal void @removeentry(%struct.Node* %ARG1) {
L489:
  %0 = bitcast %struct.Node* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R3041 = icmp sge i32 %load_target, 4
  %R30411 = zext i1 %R3041 to i32
  %cond = icmp ne i32 %R30411, 0
  br i1 %cond, label %L490, label %L491

L490:                                             ; preds = %L489
  %4 = bitcast %struct.Node* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to i32*
  store i32 11, i32* %7
  br label %L491

L491:                                             ; preds = %L490, %L489
  ret void
}

define internal void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %ARG2) {
L492:
  %0 = bitcast { [184 x i8] }* %ARG2 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 9
  %load_target = load i8, i8* %1
  %R3045 = zext i8 %load_target to i32
  %R3046 = and i32 %R3045, 252
  %R3047 = trunc i32 %R3046 to i8
  %2 = bitcast { [184 x i8] }* %ARG2 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 9
  store i8 %R3047, i8* %3
  %4 = bitcast { [184 x i8] }* %ARG2 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %load_target1 = load i8, i8* %5
  switch i8 %load_target1, label %L507 [
    i32 4, label %L507
    i32 5, label %L504
    i32 6, label %L503
    i32 7, label %L493
    i32 8, label %L505
    i32 9, label %L506
    i32 10, label %L498
  ]

L493:                                             ; preds = %L492
  %6 = bitcast { [184 x i8] }* %ARG2 to %struct.Table**
  %7 = bitcast %struct.Table** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %struct.Table**
  %load_target2 = load %struct.Table*, %struct.Table** %9
  %R3054 = zext i8 %R3047 to i32
  %R3055 = or i32 %R3054, 4
  %R3056 = trunc i32 %R3055 to i8
  %10 = bitcast { [184 x i8] }* %ARG2 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 9
  store i8 %R3056, i8* %11
  %cond = icmp ne %struct.Table* %load_target2, null
  br i1 %cond, label %L494, label %L496

L494:                                             ; preds = %L493
  %R3059 = bitcast %struct.Table* %load_target2 to { [184 x i8] }*
  %12 = bitcast { [184 x i8] }* %R3059 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 9
  %load_target3 = load i8, i8* %13
  %R3061 = zext i8 %load_target3 to i32
  %R3062 = and i32 %R3061, 3
  %cond4 = icmp ne i32 %R3062, 0
  br i1 %cond4, label %L495, label %L496

L495:                                             ; preds = %L494
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R3059)
  br label %L496

L496:                                             ; preds = %L495, %L494, %L493
  %14 = bitcast { [184 x i8] }* %ARG2 to %struct.Table**
  %15 = bitcast %struct.Table** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 24
  %17 = bitcast i8* %16 to %struct.Table**
  %load_target5 = load %struct.Table*, %struct.Table** %17
  %R3068 = bitcast %struct.Table* %load_target5 to { [184 x i8] }*
  %18 = bitcast { [184 x i8] }* %R3068 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 9
  %load_target6 = load i8, i8* %19
  %R3070 = zext i8 %load_target6 to i32
  %R3071 = and i32 %R3070, 3
  %cond7 = icmp ne i32 %R3071, 0
  br i1 %cond7, label %L497, label %L507

L497:                                             ; preds = %L496
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R3068)
  br label %L507

L498:                                             ; preds = %L492
  %20 = bitcast { [184 x i8] }* %ARG2 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %24 = bitcast %struct.lua_TValue* %load_target8 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  %load_target9 = load i32, i32* %27
  %R3081 = icmp sge i32 %load_target9, 4
  %R308110 = zext i1 %R3081 to i32
  %cond11 = icmp ne i32 %R308110, 0
  br i1 %cond11, label %L499, label %L501

L499:                                             ; preds = %L498
  %28 = bitcast %struct.lua_TValue* %load_target8 to { [184 x i8] }**
  %29 = bitcast { [184 x i8] }** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [184 x i8] }**
  %load_target12 = load { [184 x i8] }*, { [184 x i8] }** %31
  %32 = bitcast { [184 x i8] }* %load_target12 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 9
  %load_target13 = load i8, i8* %33
  %R3086 = zext i8 %load_target13 to i32
  %R3087 = and i32 %R3086, 3
  %cond14 = icmp ne i32 %R3087, 0
  br i1 %cond14, label %L500, label %L501

L500:                                             ; preds = %L499
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target12)
  br label %L501

L501:                                             ; preds = %L500, %L499, %L498
  %34 = bitcast { [184 x i8] }* %ARG2 to %struct.lua_TValue**
  %35 = bitcast %struct.lua_TValue** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 16
  %37 = bitcast i8* %36 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %37
  %38 = bitcast { [184 x i8] }* %ARG2 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i32 24
  %40 = bitcast i8* %39 to { [184 x i8] }*
  %R3097 = icmp eq %struct.lua_TValue* %load_target15, { [184 x i8] }* %40
  %R309716 = zext i1 %R3097 to i32
  %cond17 = icmp ne i32 %R309716, 0
  br i1 %cond17, label %L502, label %L507

L502:                                             ; preds = %L501
  %41 = bitcast { [184 x i8] }* %ARG2 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 9
  %load_target18 = load i8, i8* %42
  %R3100 = zext i8 %load_target18 to i32
  %R3101 = or i32 %R3100, 4
  %R3102 = trunc i32 %R3101 to i8
  %43 = bitcast { [184 x i8] }* %ARG2 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 9
  store i8 %R3102, i8* %44
  br label %L507

L503:                                             ; preds = %L492
  %45 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %46 = bitcast { [184 x i8] }** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 56
  %48 = bitcast i8* %47 to { [184 x i8] }**
  %load_target19 = load { [184 x i8] }*, { [184 x i8] }** %48
  %49 = bitcast { [184 x i8] }* %ARG2 to { [184 x i8] }**
  %50 = bitcast { [184 x i8] }** %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 16
  %52 = bitcast i8* %51 to { [184 x i8] }**
  store { [184 x i8] }* %load_target19, { [184 x i8] }** %52
  %53 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %54 = bitcast { [184 x i8] }** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 56
  %56 = bitcast i8* %55 to { [184 x i8] }**
  store { [184 x i8] }* %ARG2, { [184 x i8] }** %56
  br label %L507

L504:                                             ; preds = %L492
  %57 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %58 = bitcast { [184 x i8] }** %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 56
  %60 = bitcast i8* %59 to { [184 x i8] }**
  %load_target20 = load { [184 x i8] }*, { [184 x i8] }** %60
  %61 = bitcast { [184 x i8] }* %ARG2 to { [184 x i8] }**
  %62 = bitcast { [184 x i8] }** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 48
  %64 = bitcast i8* %63 to { [184 x i8] }**
  store { [184 x i8] }* %load_target20, { [184 x i8] }** %64
  %65 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %66 = bitcast { [184 x i8] }** %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 56
  %68 = bitcast i8* %67 to { [184 x i8] }**
  store { [184 x i8] }* %ARG2, { [184 x i8] }** %68
  br label %L507

L505:                                             ; preds = %L492
  %69 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %70 = bitcast { [184 x i8] }** %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 56
  %72 = bitcast i8* %71 to { [184 x i8] }**
  %load_target21 = load { [184 x i8] }*, { [184 x i8] }** %72
  %73 = bitcast { [184 x i8] }* %ARG2 to { [184 x i8] }**
  %74 = bitcast { [184 x i8] }** %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 160
  %76 = bitcast i8* %75 to { [184 x i8] }**
  store { [184 x i8] }* %load_target21, { [184 x i8] }** %76
  %77 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %78 = bitcast { [184 x i8] }** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 56
  %80 = bitcast i8* %79 to { [184 x i8] }**
  store { [184 x i8] }* %ARG2, { [184 x i8] }** %80
  br label %L507

L506:                                             ; preds = %L492
  %81 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %82 = bitcast { [184 x i8] }** %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 56
  %84 = bitcast i8* %83 to { [184 x i8] }**
  %load_target22 = load { [184 x i8] }*, { [184 x i8] }** %84
  %85 = bitcast { [184 x i8] }* %ARG2 to { [184 x i8] }**
  %86 = bitcast { [184 x i8] }** %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 104
  %88 = bitcast i8* %87 to { [184 x i8] }**
  store { [184 x i8] }* %load_target22, { [184 x i8] }** %88
  %89 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %90 = bitcast { [184 x i8] }** %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 56
  %92 = bitcast i8* %91 to { [184 x i8] }**
  store { [184 x i8] }* %ARG2, { [184 x i8] }** %92
  br label %L507

L507:                                             ; preds = %L506, %L505, %L504, %L503, %L502, %L501, %L497, %L496, %L492, %L492
  ret void
}

define internal void @marktmu(%struct.global_State* %ARG1) {
L508:
  %0 = alloca { [184 x i8] }*
  %1 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %2 = bitcast { [184 x i8] }** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 80
  %4 = bitcast i8* %3 to { [184 x i8] }**
  %load_target = load { [184 x i8] }*, { [184 x i8] }** %4
  store { [184 x i8] }* %load_target, { [184 x i8] }** %0
  %cond = icmp ne { [184 x i8] }* %load_target, null
  br i1 %cond, label %L509, label %L510

L509:                                             ; preds = %L509, %L508
  %5 = load { [184 x i8] }*, { [184 x i8] }** %0
  %6 = bitcast { [184 x i8] }* %5 to { [184 x i8] }**
  %7 = bitcast { [184 x i8] }** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %9
  %10 = bitcast { [184 x i8] }* %load_target1 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 9
  %load_target2 = load i8, i8* %11
  %R3130 = zext i8 %load_target2 to i32
  %R3131 = and i32 %R3130, 248
  %12 = bitcast %struct.global_State* %ARG1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %load_target3 = load i8, i8* %13
  %R3134 = zext i8 %load_target3 to i32
  %R3135 = and i32 %R3134, 3
  %R3138 = or i32 %R3131, %R3135
  %R3139 = trunc i32 %R3138 to i8
  %14 = bitcast { [184 x i8] }* %load_target1 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 9
  store i8 %R3139, i8* %15
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target1)
  store { [184 x i8] }* %load_target1, { [184 x i8] }** %0
  %16 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 80
  %19 = bitcast i8* %18 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %19
  %R3146 = icmp ne { [184 x i8] }* %load_target1, %load_target4
  %R31465 = zext i1 %R3146 to i32
  %cond6 = icmp ne i32 %R31465, 0
  br i1 %cond6, label %L509, label %L510

L510:                                             ; preds = %L509, %L508
  ret void
}

define internal i64 @luaC_separateudata(%struct.lua_State* %ARG1, i32 %ARG2) {
L511:
  %0 = alloca { [184 x i8] }**
  %1 = alloca i64
  %2 = alloca i64
  %3 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %4 = bitcast %struct.global_State** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = bitcast i8* %5 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %6
  %7 = bitcast %struct.global_State* %load_target to %struct.lua_State**
  %8 = bitcast %struct.lua_State** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 176
  %10 = bitcast i8* %9 to %struct.lua_State**
  %load_target1 = load %struct.lua_State*, %struct.lua_State** %10
  store i64 0, i64* %2
  store i64 0, i64* %1
  store %struct.lua_State* %load_target1, { [184 x i8] }*** %0
  br label %L512

L512:                                             ; preds = %L522, %L521, %L519, %L515, %L511
  %11 = load { [184 x i8] }**, { [184 x i8] }*** %0
  %12 = bitcast { [184 x i8] }** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %14
  %cond = icmp ne { [184 x i8] }* %load_target2, null
  br i1 %cond, label %L513, label %L523

L513:                                             ; preds = %L512
  %15 = bitcast { [184 x i8] }* %load_target2 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 9
  %load_target3 = load i8, i8* %16
  %R3157 = zext i8 %load_target3 to i32
  %R3158 = and i32 %R3157, 3
  %17 = icmp ne i32 %R3158, 0
  %18 = icmp ne i32 %ARG2, 0
  %R3160 = or i1 %17, %18
  %R31604 = zext i1 %R3160 to i32
  %cond5 = icmp ne i32 %R31604, 0
  br i1 %cond5, label %L514, label %L515

L514:                                             ; preds = %L513
  %R3163 = zext i8 %load_target3 to i32
  %R3164 = and i32 %R3163, 8
  %cond6 = icmp ne i32 %R3164, 0
  br i1 %cond6, label %L515, label %L516

L515:                                             ; preds = %L514, %L513
  store { [184 x i8] }* %load_target2, { [184 x i8] }*** %0
  br label %L512

L516:                                             ; preds = %L514
  %19 = bitcast { [184 x i8] }* %load_target2 to %struct.Table**
  %20 = bitcast %struct.Table** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 16
  %22 = bitcast i8* %21 to %struct.Table**
  %load_target7 = load %struct.Table*, %struct.Table** %22
  %cond8 = icmp ne %struct.Table* %load_target7, null
  br i1 %cond8, label %L517, label %L519

L517:                                             ; preds = %L516
  %23 = bitcast %struct.Table* %load_target7 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 10
  %load_target9 = load i8, i8* %24
  %R3174 = zext i8 %load_target9 to i32
  %R3175 = and i32 %R3174, 4
  %cond10 = icmp ne i32 %R3175, 0
  br i1 %cond10, label %L519, label %L518

L518:                                             ; preds = %L517
  %25 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %26 = bitcast %struct.global_State** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 32
  %28 = bitcast i8* %27 to %struct.global_State**
  %load_target11 = load %struct.global_State*, %struct.global_State** %28
  %29 = bitcast %struct.global_State* %load_target11 to { [24 x i8] }**
  %30 = bitcast { [24 x i8] }** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 312
  %32 = bitcast i8* %31 to { [24 x i8] }**
  %load_target12 = load { [24 x i8] }*, { [24 x i8] }** %32
  %R3181 = call %struct.lua_TValue* @luaT_gettm(%struct.Table* %load_target7, i32 2, { [24 x i8] }* %load_target12)
  %cond13 = icmp ne %struct.lua_TValue* %R3181, null
  br i1 %cond13, label %L520, label %L519

L519:                                             ; preds = %L518, %L517, %L516
  %33 = bitcast { [184 x i8] }* %load_target2 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 9
  %load_target14 = load i8, i8* %34
  %R3187 = zext i8 %load_target14 to i32
  %R3188 = or i32 %R3187, 8
  %R3189 = trunc i32 %R3188 to i8
  %35 = bitcast { [184 x i8] }* %load_target2 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 9
  store i8 %R3189, i8* %36
  store { [184 x i8] }* %load_target2, { [184 x i8] }*** %0
  br label %L512

L520:                                             ; preds = %L518
  %37 = bitcast { [184 x i8] }* %load_target2 to i64*
  %38 = bitcast i64* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 32
  %40 = bitcast i8* %39 to i64*
  %load_target15 = load i64, i64* %40
  %R3195 = add i64 %load_target15, 40
  %41 = load i64, i64* %1
  %R3198 = add i64 %41, %R3195
  %42 = bitcast { [184 x i8] }* %load_target2 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 9
  %load_target16 = load i8, i8* %43
  %R3202 = zext i8 %load_target16 to i32
  %R3203 = or i32 %R3202, 8
  %R3204 = trunc i32 %R3203 to i8
  %44 = bitcast { [184 x i8] }* %load_target2 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 9
  store i8 %R3204, i8* %45
  %46 = bitcast { [184 x i8] }* %load_target2 to { [184 x i8] }**
  %47 = bitcast { [184 x i8] }** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  %49 = bitcast i8* %48 to { [184 x i8] }**
  %load_target17 = load { [184 x i8] }*, { [184 x i8] }** %49
  %50 = bitcast { [184 x i8] }** %11 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %52 = bitcast i8* %51 to { [184 x i8] }**
  store { [184 x i8] }* %load_target17, { [184 x i8] }** %52
  %53 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %54 = bitcast { [184 x i8] }** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 80
  %56 = bitcast i8* %55 to { [184 x i8] }**
  %load_target18 = load { [184 x i8] }*, { [184 x i8] }** %56
  store i64 %R3198, i64* %2
  store i64 %R3198, i64* %1
  %cond19 = icmp ne { [184 x i8] }* %load_target18, null
  br i1 %cond19, label %L522, label %L521

L521:                                             ; preds = %L520
  %57 = bitcast { [184 x i8] }* %load_target2 to { [184 x i8] }**
  %58 = bitcast { [184 x i8] }** %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 0
  %60 = bitcast i8* %59 to { [184 x i8] }**
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %60
  %61 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %62 = bitcast { [184 x i8] }** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 80
  %64 = bitcast i8* %63 to { [184 x i8] }**
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %64
  br label %L512

L522:                                             ; preds = %L520
  %65 = bitcast { [184 x i8] }* %load_target18 to { [184 x i8] }**
  %66 = bitcast { [184 x i8] }** %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = bitcast i8* %67 to { [184 x i8] }**
  %load_target20 = load { [184 x i8] }*, { [184 x i8] }** %68
  %69 = bitcast { [184 x i8] }* %load_target2 to { [184 x i8] }**
  %70 = bitcast { [184 x i8] }** %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 0
  %72 = bitcast i8* %71 to { [184 x i8] }**
  store { [184 x i8] }* %load_target20, { [184 x i8] }** %72
  %73 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %74 = bitcast { [184 x i8] }** %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 80
  %76 = bitcast i8* %75 to { [184 x i8] }**
  %load_target21 = load { [184 x i8] }*, { [184 x i8] }** %76
  %77 = bitcast { [184 x i8] }* %load_target21 to { [184 x i8] }**
  %78 = bitcast { [184 x i8] }** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 0
  %80 = bitcast i8* %79 to { [184 x i8] }**
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %80
  %81 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %82 = bitcast { [184 x i8] }** %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 80
  %84 = bitcast i8* %83 to { [184 x i8] }**
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %84
  br label %L512

L523:                                             ; preds = %L512
  %85 = load i64, i64* %2
  ret i64 %85
}

define internal i32 @traversetable(%struct.global_State* %ARG1, %struct.Table* %ARG2) {
L524:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = bitcast %struct.Table* %ARG2 to %struct.Table**
  %6 = bitcast %struct.Table** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to %struct.Table**
  %load_target = load %struct.Table*, %struct.Table** %8
  store i32 0, i32* %0
  store i32 0, i32* %1
  %cond = icmp ne %struct.Table* %load_target, null
  br i1 %cond, label %L525, label %L527

L525:                                             ; preds = %L524
  %R3229 = bitcast %struct.Table* %load_target to { [184 x i8] }*
  %9 = bitcast { [184 x i8] }* %R3229 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 9
  %load_target1 = load i8, i8* %10
  %R3231 = zext i8 %load_target1 to i32
  %R3232 = and i32 %R3231, 3
  %cond2 = icmp ne i32 %R3232, 0
  br i1 %cond2, label %L526, label %L527

L526:                                             ; preds = %L525
  %R3236 = bitcast %struct.Table* %load_target to { [184 x i8] }*
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R3236)
  br label %L527

L527:                                             ; preds = %L526, %L525, %L524
  %11 = bitcast %struct.Table* %ARG2 to %struct.Table**
  %12 = bitcast %struct.Table** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to %struct.Table**
  %load_target3 = load %struct.Table*, %struct.Table** %14
  %cond4 = icmp ne %struct.Table* %load_target3, null
  br i1 %cond4, label %L528, label %L533

L528:                                             ; preds = %L527
  %15 = bitcast %struct.Table* %load_target3 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 10
  %load_target5 = load i8, i8* %16
  %R3243 = zext i8 %load_target5 to i32
  %R3244 = and i32 %R3243, 8
  %cond6 = icmp ne i32 %R3244, 0
  br i1 %cond6, label %L533, label %L529

L529:                                             ; preds = %L528
  %17 = bitcast %struct.global_State* %ARG1 to { [24 x i8] }**
  %18 = bitcast { [24 x i8] }** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 320
  %20 = bitcast i8* %19 to { [24 x i8] }**
  %load_target7 = load { [24 x i8] }*, { [24 x i8] }** %20
  %R3249 = call %struct.lua_TValue* @luaT_gettm(%struct.Table* %load_target3, i32 3, { [24 x i8] }* %load_target7)
  %cond8 = icmp ne %struct.lua_TValue* %R3249, null
  br i1 %cond8, label %L530, label %L533

L530:                                             ; preds = %L529
  %21 = bitcast %struct.lua_TValue* %R3249 to i32*
  %22 = bitcast i32* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to i32*
  %load_target9 = load i32, i32* %24
  %R3256 = icmp eq i32 %load_target9, 4
  %R325610 = zext i1 %R3256 to i32
  %cond11 = icmp ne i32 %R325610, 0
  br i1 %cond11, label %L531, label %L533

L531:                                             ; preds = %L530
  %25 = bitcast %struct.lua_TValue* %R3249 to { [184 x i8] }**
  %26 = bitcast { [184 x i8] }** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = bitcast i8* %27 to { [184 x i8] }**
  %load_target12 = load { [184 x i8] }*, { [184 x i8] }** %28
  %29 = bitcast { [184 x i8] }* %load_target12 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 24
  %31 = bitcast i8* %30 to { [184 x i8] }*
  %R3261 = bitcast { [184 x i8] }* %31 to i8*
  %R3262 = call i8* @strchr(i8* %R3261, i32 107)
  %R3263 = icmp ne i8* %R3262, null
  %R326313 = zext i1 %R3263 to i32
  %32 = bitcast %struct.lua_TValue* %R3249 to { [184 x i8] }**
  %33 = bitcast { [184 x i8] }** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to { [184 x i8] }**
  %load_target14 = load { [184 x i8] }*, { [184 x i8] }** %35
  %36 = bitcast { [184 x i8] }* %load_target14 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 24
  %38 = bitcast i8* %37 to { [184 x i8] }*
  %R3268 = bitcast { [184 x i8] }* %38 to i8*
  %R3269 = call i8* @strchr(i8* %R3268, i32 118)
  %R3270 = icmp ne i8* %R3269, null
  %R327015 = zext i1 %R3270 to i32
  %39 = icmp ne i32 %R326313, 0
  %40 = icmp ne i32 %R327015, 0
  %R3273 = or i1 %39, %40
  %R327316 = zext i1 %R3273 to i32
  store i32 %R326313, i32* %0
  store i32 %R327015, i32* %1
  %cond17 = icmp ne i32 %R327316, 0
  br i1 %cond17, label %L532, label %L533

L532:                                             ; preds = %L531
  %41 = bitcast %struct.Table* %ARG2 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 9
  %load_target18 = load i8, i8* %42
  %R3276 = zext i8 %load_target18 to i32
  %R3277 = and i32 %R3276, -25
  %R3278 = trunc i32 %R3277 to i8
  %R3280 = shl i32 %R326313, 3
  %R3282 = shl i32 %R327015, 4
  %R3283 = or i32 %R3280, %R3282
  %R3284 = trunc i32 %R3283 to i8
  %R3285 = zext i8 %R3284 to i32
  %R3288 = zext i8 %R3278 to i32
  %R3289 = or i32 %R3288, %R3285
  %R3290 = trunc i32 %R3289 to i8
  %43 = bitcast %struct.Table* %ARG2 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 9
  store i8 %R3290, i8* %44
  %45 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %46 = bitcast { [184 x i8] }** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 72
  %48 = bitcast i8* %47 to { [184 x i8] }**
  %load_target19 = load { [184 x i8] }*, { [184 x i8] }** %48
  %49 = bitcast %struct.Table* %ARG2 to { [184 x i8] }**
  %50 = bitcast { [184 x i8] }** %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 48
  %52 = bitcast i8* %51 to { [184 x i8] }**
  store { [184 x i8] }* %load_target19, { [184 x i8] }** %52
  %R3295 = bitcast %struct.Table* %ARG2 to { [184 x i8] }*
  %53 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %54 = bitcast { [184 x i8] }** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 72
  %56 = bitcast i8* %55 to { [184 x i8] }**
  store { [184 x i8] }* %R3295, { [184 x i8] }** %56
  store i32 %R326313, i32* %0
  store i32 %R327015, i32* %1
  br label %L533

L533:                                             ; preds = %L532, %L531, %L530, %L529, %L528, %L527
  %57 = load i32, i32* %0
  %58 = load i32, i32* %1
  %59 = icmp ne i32 %57, 0
  %60 = icmp ne i32 %58, 0
  %R3299 = and i1 %59, %60
  %R329920 = zext i1 %R3299 to i32
  %cond21 = icmp ne i32 %R329920, 0
  br i1 %cond21, label %L534, label %L535

L534:                                             ; preds = %L533
  store i32 1, i32* %4
  br label %L554

L535:                                             ; preds = %L533
  %cond22 = icmp ne i32 %58, 0
  br i1 %cond22, label %L541, label %L536

L536:                                             ; preds = %L535
  %61 = bitcast %struct.Table* %ARG2 to i32*
  %62 = bitcast i32* %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 56
  %64 = bitcast i8* %63 to i32*
  %load_target23 = load i32, i32* %64
  store i32 %load_target23, i32* %2
  br label %L537

L537:                                             ; preds = %L540, %L539, %L538, %L536
  %65 = load i32, i32* %2
  %R3305 = add i32 %65, -1
  store i32 %R3305, i32* %2
  %cond24 = icmp ne i32 %65, 0
  br i1 %cond24, label %L538, label %L541

L538:                                             ; preds = %L537
  %66 = bitcast %struct.Table* %ARG2 to %struct.lua_TValue**
  %67 = bitcast %struct.lua_TValue** %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 24
  %69 = bitcast i8* %68 to %struct.lua_TValue**
  %load_target25 = load %struct.lua_TValue*, %struct.lua_TValue** %69
  %R3309 = sext i32 %R3305 to i64
  %R3310 = mul i64 %R3309, 16
  %70 = bitcast %struct.lua_TValue* %load_target25 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %R3310
  %72 = bitcast i8* %71 to %struct.lua_TValue*
  %73 = bitcast %struct.lua_TValue* %72 to i32*
  %74 = bitcast i32* %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 8
  %76 = bitcast i8* %75 to i32*
  %load_target26 = load i32, i32* %76
  %R3313 = icmp sge i32 %load_target26, 4
  %R331327 = zext i1 %R3313 to i32
  %cond28 = icmp ne i32 %R331327, 0
  br i1 %cond28, label %L539, label %L537

L539:                                             ; preds = %L538
  %77 = bitcast %struct.lua_TValue* %72 to { [184 x i8] }**
  %78 = bitcast { [184 x i8] }** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 0
  %80 = bitcast i8* %79 to { [184 x i8] }**
  %load_target29 = load { [184 x i8] }*, { [184 x i8] }** %80
  %81 = bitcast { [184 x i8] }* %load_target29 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 9
  %load_target30 = load i8, i8* %82
  %R3322 = zext i8 %load_target30 to i32
  %R3323 = and i32 %R3322, 3
  %cond31 = icmp ne i32 %R3323, 0
  br i1 %cond31, label %L540, label %L537

L540:                                             ; preds = %L539
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target29)
  br label %L537

L541:                                             ; preds = %L537, %L535
  %83 = bitcast %struct.Table* %ARG2 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 11
  %load_target32 = load i8, i8* %84
  %R3334 = zext i8 %load_target32 to i32
  %R3335 = shl i64 1, i32 %R3334
  %R3336 = trunc i64 %R3335 to i32
  store i32 %R3336, i32* %3
  br label %L542

L542:                                             ; preds = %L552, %L551, %L550, %L549, %L544, %L541
  %85 = load i32, i32* %3
  %R3338 = add i32 %85, -1
  store i32 %R3338, i32* %3
  %cond33 = icmp ne i32 %85, 0
  br i1 %cond33, label %L543, label %L553

L543:                                             ; preds = %L542
  %86 = bitcast %struct.Table* %ARG2 to %struct.Node**
  %87 = bitcast %struct.Node** %86 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 32
  %89 = bitcast i8* %88 to %struct.Node**
  %load_target34 = load %struct.Node*, %struct.Node** %89
  %R3342 = sext i32 %R3338 to i64
  %R3343 = mul i64 %R3342, 40
  %90 = bitcast %struct.Node* %load_target34 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 %R3343
  %92 = bitcast i8* %91 to %struct.Node*
  %93 = bitcast %struct.Node* %92 to i32*
  %94 = bitcast i32* %93 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 8
  %96 = bitcast i8* %95 to i32*
  %load_target35 = load i32, i32* %96
  %cond36 = icmp ne i32 %load_target35, 0
  br i1 %cond36, label %L545, label %L544

L544:                                             ; preds = %L543
  call void @removeentry(%struct.Node* %92)
  br label %L542

L545:                                             ; preds = %L543
  %cond37 = icmp ne i32 %57, 0
  br i1 %cond37, label %L549, label %L546

L546:                                             ; preds = %L545
  %97 = bitcast %struct.Node* %92 to i32*
  %98 = bitcast i32* %97 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 24
  %100 = bitcast i8* %99 to i32*
  %load_target38 = load i32, i32* %100
  %R3352 = icmp sge i32 %load_target38, 4
  %R335239 = zext i1 %R3352 to i32
  %cond40 = icmp ne i32 %R335239, 0
  br i1 %cond40, label %L547, label %L549

L547:                                             ; preds = %L546
  %101 = bitcast %struct.Node* %92 to { [184 x i8] }**
  %102 = bitcast { [184 x i8] }** %101 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 16
  %104 = bitcast i8* %103 to { [184 x i8] }**
  %load_target41 = load { [184 x i8] }*, { [184 x i8] }** %104
  %105 = bitcast { [184 x i8] }* %load_target41 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 9
  %load_target42 = load i8, i8* %106
  %R3356 = zext i8 %load_target42 to i32
  %R3357 = and i32 %R3356, 3
  %cond43 = icmp ne i32 %R3357, 0
  br i1 %cond43, label %L548, label %L549

L548:                                             ; preds = %L547
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target41)
  br label %L549

L549:                                             ; preds = %L548, %L547, %L546, %L545
  %cond44 = icmp ne i32 %58, 0
  br i1 %cond44, label %L542, label %L550

L550:                                             ; preds = %L549
  %107 = bitcast %struct.Node* %92 to i32*
  %108 = bitcast i32* %107 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 8
  %110 = bitcast i8* %109 to i32*
  %load_target45 = load i32, i32* %110
  %R3364 = icmp sge i32 %load_target45, 4
  %R336446 = zext i1 %R3364 to i32
  %cond47 = icmp ne i32 %R336446, 0
  br i1 %cond47, label %L551, label %L542

L551:                                             ; preds = %L550
  %111 = bitcast %struct.Node* %92 to { [184 x i8] }**
  %112 = bitcast { [184 x i8] }** %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 0
  %114 = bitcast i8* %113 to { [184 x i8] }**
  %load_target48 = load { [184 x i8] }*, { [184 x i8] }** %114
  %115 = bitcast { [184 x i8] }* %load_target48 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 9
  %load_target49 = load i8, i8* %116
  %R3368 = zext i8 %load_target49 to i32
  %R3369 = and i32 %R3368, 3
  %cond50 = icmp ne i32 %R3369, 0
  br i1 %cond50, label %L552, label %L542

L552:                                             ; preds = %L551
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target48)
  br label %L542

L553:                                             ; preds = %L542
  %117 = icmp ne i32 %57, 0
  %118 = icmp ne i32 %58, 0
  %R3375 = or i1 %117, %118
  %R337551 = zext i1 %R3375 to i32
  store i32 %R337551, i32* %4
  br label %L554

L554:                                             ; preds = %L553, %L534
  %119 = load i32, i32* %4
  ret i32 %119
}

define internal void @traverseproto(%struct.global_State* %ARG1, %struct.Proto* %ARG2) {
L555:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = bitcast %struct.Proto* %ARG2 to { [24 x i8] }**
  %5 = bitcast { [24 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 64
  %7 = bitcast i8* %6 to { [24 x i8] }**
  %load_target = load { [24 x i8] }*, { [24 x i8] }** %7
  %cond = icmp ne { [24 x i8] }* %load_target, null
  br i1 %cond, label %L556, label %L557

L556:                                             ; preds = %L555
  %8 = bitcast { [24 x i8] }* %load_target to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 9
  %load_target1 = load i8, i8* %9
  %R3381 = zext i8 %load_target1 to i32
  %R3382 = and i32 %R3381, 252
  %R3383 = trunc i32 %R3382 to i8
  %10 = bitcast { [24 x i8] }* %load_target to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 9
  store i8 %R3383, i8* %11
  br label %L557

L557:                                             ; preds = %L556, %L555
  store i32 0, i32* %0
  br label %L558

L558:                                             ; preds = %L562, %L557
  %12 = load i32, i32* %0
  %13 = bitcast %struct.Proto* %ARG2 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 76
  %16 = bitcast i8* %15 to i32*
  %load_target2 = load i32, i32* %16
  %R3387 = icmp slt i32 %12, %load_target2
  %R33873 = zext i1 %R3387 to i32
  %cond4 = icmp ne i32 %R33873, 0
  br i1 %cond4, label %L559, label %L563

L559:                                             ; preds = %L558
  %17 = bitcast %struct.Proto* %ARG2 to %struct.lua_TValue**
  %18 = bitcast %struct.lua_TValue** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %20
  %R3391 = sext i32 %12 to i64
  %R3392 = mul i64 %R3391, 16
  %21 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %R3392
  %23 = bitcast i8* %22 to %struct.lua_TValue*
  %24 = bitcast %struct.lua_TValue* %23 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  %load_target6 = load i32, i32* %27
  %R3395 = icmp sge i32 %load_target6, 4
  %R33957 = zext i1 %R3395 to i32
  %cond8 = icmp ne i32 %R33957, 0
  br i1 %cond8, label %L560, label %L562

L560:                                             ; preds = %L559
  %28 = bitcast %struct.lua_TValue* %23 to { [184 x i8] }**
  %29 = bitcast { [184 x i8] }** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [184 x i8] }**
  %load_target9 = load { [184 x i8] }*, { [184 x i8] }** %31
  %32 = bitcast { [184 x i8] }* %load_target9 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 9
  %load_target10 = load i8, i8* %33
  %R3404 = zext i8 %load_target10 to i32
  %R3405 = and i32 %R3404, 3
  %cond11 = icmp ne i32 %R3405, 0
  br i1 %cond11, label %L561, label %L562

L561:                                             ; preds = %L560
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target9)
  br label %L562

L562:                                             ; preds = %L561, %L560, %L559
  %R3415 = add i32 %12, 1
  store i32 %R3415, i32* %0
  br label %L558

L563:                                             ; preds = %L558
  store i32 0, i32* %1
  br label %L564

L564:                                             ; preds = %L567, %L563
  %34 = load i32, i32* %1
  %35 = bitcast %struct.Proto* %ARG2 to i32*
  %36 = bitcast i32* %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 72
  %38 = bitcast i8* %37 to i32*
  %load_target12 = load i32, i32* %38
  %R3419 = icmp slt i32 %34, %load_target12
  %R341913 = zext i1 %R3419 to i32
  %cond14 = icmp ne i32 %R341913, 0
  br i1 %cond14, label %L565, label %L568

L565:                                             ; preds = %L564
  %39 = bitcast %struct.Proto* %ARG2 to { [24 x i8] }***
  %40 = bitcast { [24 x i8] }*** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 56
  %42 = bitcast i8* %41 to { [24 x i8] }***
  %load_target15 = load { [24 x i8] }**, { [24 x i8] }*** %42
  %R3423 = sext i32 %34 to i64
  %R3424 = mul i64 %R3423, 8
  %43 = bitcast { [24 x i8] }** %load_target15 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %R3424
  %45 = bitcast i8* %44 to { [24 x i8] }**
  %46 = bitcast { [24 x i8] }** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 0
  %48 = bitcast i8* %47 to { [24 x i8] }**
  %load_target16 = load { [24 x i8] }*, { [24 x i8] }** %48
  %cond17 = icmp ne { [24 x i8] }* %load_target16, null
  br i1 %cond17, label %L566, label %L567

L566:                                             ; preds = %L565
  %49 = bitcast { [24 x i8] }* %load_target16 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 9
  %load_target18 = load i8, i8* %50
  %R3435 = zext i8 %load_target18 to i32
  %R3436 = and i32 %R3435, 252
  %R3437 = trunc i32 %R3436 to i8
  %51 = bitcast { [24 x i8] }* %load_target16 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 9
  store i8 %R3437, i8* %52
  br label %L567

L567:                                             ; preds = %L566, %L565
  %R3439 = add i32 %34, 1
  store i32 %R3439, i32* %1
  br label %L564

L568:                                             ; preds = %L564
  store i32 0, i32* %2
  br label %L569

L569:                                             ; preds = %L573, %L568
  %53 = load i32, i32* %2
  %54 = bitcast %struct.Proto* %ARG2 to i32*
  %55 = bitcast i32* %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 88
  %57 = bitcast i8* %56 to i32*
  %load_target19 = load i32, i32* %57
  %R3443 = icmp slt i32 %53, %load_target19
  %R344320 = zext i1 %R3443 to i32
  %cond21 = icmp ne i32 %R344320, 0
  br i1 %cond21, label %L570, label %L574

L570:                                             ; preds = %L569
  %58 = bitcast %struct.Proto* %ARG2 to %struct.Proto***
  %59 = bitcast %struct.Proto*** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 32
  %61 = bitcast i8* %60 to %struct.Proto***
  %load_target22 = load %struct.Proto**, %struct.Proto*** %61
  %R3447 = sext i32 %53 to i64
  %R3448 = mul i64 %R3447, 8
  %62 = bitcast %struct.Proto** %load_target22 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %R3448
  %64 = bitcast i8* %63 to %struct.Proto**
  %65 = bitcast %struct.Proto** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = bitcast i8* %66 to %struct.Proto**
  %load_target23 = load %struct.Proto*, %struct.Proto** %67
  %cond24 = icmp ne %struct.Proto* %load_target23, null
  br i1 %cond24, label %L571, label %L573

L571:                                             ; preds = %L570
  %R3458 = bitcast %struct.Proto* %load_target23 to { [184 x i8] }*
  %68 = bitcast { [184 x i8] }* %R3458 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 9
  %load_target25 = load i8, i8* %69
  %R3460 = zext i8 %load_target25 to i32
  %R3461 = and i32 %R3460, 3
  %cond26 = icmp ne i32 %R3461, 0
  br i1 %cond26, label %L572, label %L573

L572:                                             ; preds = %L571
  %R3470 = bitcast %struct.Proto* %load_target23 to { [184 x i8] }*
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R3470)
  br label %L573

L573:                                             ; preds = %L572, %L571, %L570
  %R3472 = add i32 %53, 1
  store i32 %R3472, i32* %2
  br label %L569

L574:                                             ; preds = %L569
  store i32 0, i32* %3
  br label %L575

L575:                                             ; preds = %L578, %L574
  %70 = load i32, i32* %3
  %71 = bitcast %struct.Proto* %ARG2 to i32*
  %72 = bitcast i32* %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 92
  %74 = bitcast i8* %73 to i32*
  %load_target27 = load i32, i32* %74
  %R3476 = icmp slt i32 %70, %load_target27
  %R347628 = zext i1 %R3476 to i32
  %cond29 = icmp ne i32 %R347628, 0
  br i1 %cond29, label %L576, label %L579

L576:                                             ; preds = %L575
  %75 = bitcast %struct.Proto* %ARG2 to %struct.LocVar**
  %76 = bitcast %struct.LocVar** %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 48
  %78 = bitcast i8* %77 to %struct.LocVar**
  %load_target30 = load %struct.LocVar*, %struct.LocVar** %78
  %R3480 = sext i32 %70 to i64
  %R3481 = mul i64 %R3480, 16
  %79 = bitcast %struct.LocVar* %load_target30 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 %R3481
  %81 = bitcast i8* %80 to %struct.LocVar*
  %82 = bitcast %struct.LocVar* %81 to { [24 x i8] }**
  %83 = bitcast { [24 x i8] }** %82 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 0
  %85 = bitcast i8* %84 to { [24 x i8] }**
  %load_target31 = load { [24 x i8] }*, { [24 x i8] }** %85
  %cond32 = icmp ne { [24 x i8] }* %load_target31, null
  br i1 %cond32, label %L577, label %L578

L577:                                             ; preds = %L576
  %86 = bitcast { [24 x i8] }* %load_target31 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 9
  %load_target33 = load i8, i8* %87
  %R3492 = zext i8 %load_target33 to i32
  %R3493 = and i32 %R3492, 252
  %R3494 = trunc i32 %R3493 to i8
  %88 = bitcast { [24 x i8] }* %load_target31 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 9
  store i8 %R3494, i8* %89
  br label %L578

L578:                                             ; preds = %L577, %L576
  %R3496 = add i32 %70, 1
  store i32 %R3496, i32* %3
  br label %L575

L579:                                             ; preds = %L575
  ret void
}

define internal void @traverseclosure(%struct.global_State* %ARG1, { [56 x i8] }* %ARG2) {
L580:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast { [56 x i8] }* %ARG2 to %struct.Table**
  %3 = bitcast %struct.Table** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 24
  %5 = bitcast i8* %4 to %struct.Table**
  %load_target = load %struct.Table*, %struct.Table** %5
  %R3499 = bitcast %struct.Table* %load_target to { [184 x i8] }*
  %6 = bitcast { [184 x i8] }* %R3499 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 9
  %load_target1 = load i8, i8* %7
  %R3501 = zext i8 %load_target1 to i32
  %R3502 = and i32 %R3501, 3
  %cond = icmp ne i32 %R3502, 0
  br i1 %cond, label %L581, label %L582

L581:                                             ; preds = %L580
  %R3506 = bitcast %struct.Table* %load_target to { [184 x i8] }*
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R3506)
  br label %L582

L582:                                             ; preds = %L581, %L580
  %8 = bitcast { [56 x i8] }* %ARG2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 10
  %load_target2 = load i8, i8* %9
  %cond3 = icmp ne i8 %load_target2, 0
  br i1 %cond3, label %L583, label %L589

L583:                                             ; preds = %L582
  store i32 0, i32* %0
  br label %L584

L584:                                             ; preds = %L588, %L583
  %10 = load i32, i32* %0
  %11 = bitcast { [56 x i8] }* %ARG2 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 11
  %load_target4 = load i8, i8* %12
  %R3512 = zext i8 %load_target4 to i32
  %R3513 = icmp slt i32 %10, %R3512
  %R35135 = zext i1 %R3513 to i32
  %cond6 = icmp ne i32 %R35135, 0
  br i1 %cond6, label %L585, label %L596

L585:                                             ; preds = %L584
  %13 = bitcast { [56 x i8] }* %ARG2 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i32 40
  %15 = bitcast i8* %14 to { [56 x i8] }*
  %R3518 = sext i32 %10 to i64
  %R3519 = mul i64 %R3518, 16
  %16 = bitcast { [56 x i8] }* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %R3519
  %18 = bitcast i8* %17 to { [56 x i8] }*
  %19 = bitcast { [56 x i8] }* %18 to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i32*
  %load_target7 = load i32, i32* %22
  %R3522 = icmp sge i32 %load_target7, 4
  %R35228 = zext i1 %R3522 to i32
  %cond9 = icmp ne i32 %R35228, 0
  br i1 %cond9, label %L586, label %L588

L586:                                             ; preds = %L585
  %23 = bitcast { [56 x i8] }* %18 to { [184 x i8] }**
  %24 = bitcast { [184 x i8] }** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %26
  %27 = bitcast { [184 x i8] }* %load_target10 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 9
  %load_target11 = load i8, i8* %28
  %R3532 = zext i8 %load_target11 to i32
  %R3533 = and i32 %R3532, 3
  %cond12 = icmp ne i32 %R3533, 0
  br i1 %cond12, label %L587, label %L588

L587:                                             ; preds = %L586
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target10)
  br label %L588

L588:                                             ; preds = %L587, %L586, %L585
  %R3544 = add i32 %10, 1
  store i32 %R3544, i32* %0
  br label %L584

L589:                                             ; preds = %L582
  %29 = bitcast { [56 x i8] }* %ARG2 to %struct.Proto**
  %30 = bitcast %struct.Proto** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 32
  %32 = bitcast i8* %31 to %struct.Proto**
  %load_target13 = load %struct.Proto*, %struct.Proto** %32
  %R3547 = bitcast %struct.Proto* %load_target13 to { [184 x i8] }*
  %33 = bitcast { [184 x i8] }* %R3547 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 9
  %load_target14 = load i8, i8* %34
  %R3549 = zext i8 %load_target14 to i32
  %R3550 = and i32 %R3549, 3
  %cond15 = icmp ne i32 %R3550, 0
  br i1 %cond15, label %L590, label %L591

L590:                                             ; preds = %L589
  %R3554 = bitcast %struct.Proto* %load_target13 to { [184 x i8] }*
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R3554)
  br label %L591

L591:                                             ; preds = %L590, %L589
  store i32 0, i32* %1
  br label %L592

L592:                                             ; preds = %L595, %L591
  %35 = load i32, i32* %1
  %36 = bitcast { [56 x i8] }* %ARG2 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 11
  %load_target16 = load i8, i8* %37
  %R3558 = zext i8 %load_target16 to i32
  %R3559 = icmp slt i32 %35, %R3558
  %R355917 = zext i1 %R3559 to i32
  %cond18 = icmp ne i32 %R355917, 0
  br i1 %cond18, label %L593, label %L596

L593:                                             ; preds = %L592
  %38 = bitcast { [56 x i8] }* %ARG2 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i32 40
  %40 = bitcast i8* %39 to { [56 x i8] }*
  %R3564 = sext i32 %35 to i64
  %R3565 = mul i64 %R3564, 8
  %41 = bitcast { [56 x i8] }* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %R3565
  %43 = bitcast i8* %42 to { [56 x i8] }*
  %44 = bitcast { [56 x i8] }* %43 to %struct.UpVal**
  %45 = bitcast %struct.UpVal** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to %struct.UpVal**
  %load_target19 = load %struct.UpVal*, %struct.UpVal** %47
  %R3568 = bitcast %struct.UpVal* %load_target19 to { [184 x i8] }*
  %48 = bitcast { [184 x i8] }* %R3568 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 9
  %load_target20 = load i8, i8* %49
  %R3570 = zext i8 %load_target20 to i32
  %R3571 = and i32 %R3570, 3
  %cond21 = icmp ne i32 %R3571, 0
  br i1 %cond21, label %L594, label %L595

L594:                                             ; preds = %L593
  %50 = bitcast { [56 x i8] }* %ARG2 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i32 40
  %52 = bitcast i8* %51 to { [56 x i8] }*
  %53 = bitcast { [56 x i8] }* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 %R3565
  %55 = bitcast i8* %54 to { [56 x i8] }*
  %56 = bitcast { [56 x i8] }* %55 to %struct.UpVal**
  %57 = bitcast %struct.UpVal** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  %59 = bitcast i8* %58 to %struct.UpVal**
  %load_target22 = load %struct.UpVal*, %struct.UpVal** %59
  %R3581 = bitcast %struct.UpVal* %load_target22 to { [184 x i8] }*
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R3581)
  br label %L595

L595:                                             ; preds = %L594, %L593
  %R3583 = add i32 %35, 1
  store i32 %R3583, i32* %1
  br label %L592

L596:                                             ; preds = %L592, %L584
  ret void
}

define internal void @checkstacksizes(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2) {
L597:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1 = bitcast %struct.CallInfo** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 40
  %3 = bitcast i8* %2 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %5 = bitcast %struct.CallInfo** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 80
  %7 = bitcast i8* %6 to %struct.CallInfo**
  %load_target1 = load %struct.CallInfo*, %struct.CallInfo** %7
  %R3588 = sub %struct.CallInfo* %load_target, %load_target1
  %R3589 = sdiv %struct.CallInfo* %R3588, i64 40
  %R3590 = ptrtoint %struct.CallInfo* %R3589 to i32
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 64
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %R3594 = sub %struct.lua_TValue* %ARG2, %load_target2
  %R3595 = sdiv %struct.lua_TValue* %R3594, i64 16
  %R3596 = ptrtoint %struct.lua_TValue* %R3595 to i32
  %12 = bitcast %struct.lua_State* %ARG1 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 92
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  %R3599 = icmp sgt i32 %load_target3, 20000
  %R35994 = zext i1 %R3599 to i32
  %cond = icmp ne i32 %R35994, 0
  br i1 %cond, label %L604, label %L598

L598:                                             ; preds = %L597
  %R3601 = mul i32 %R3590, 4
  %R3604 = icmp slt i32 %R3601, %load_target3
  %R36045 = zext i1 %R3604 to i32
  %cond6 = icmp ne i32 %R36045, 0
  br i1 %cond6, label %L599, label %L601

L599:                                             ; preds = %L598
  %R3607 = icmp slt i32 16, %load_target3
  %R36077 = zext i1 %R3607 to i32
  %cond8 = icmp ne i32 %R36077, 0
  br i1 %cond8, label %L600, label %L601

L600:                                             ; preds = %L599
  %R3611 = sdiv i32 %load_target3, 2
  call void @luaD_reallocCI(%struct.lua_State* %ARG1, i32 %R3611)
  br label %L601

L601:                                             ; preds = %L600, %L599, %L598
  %R3613 = mul i32 %R3596, 4
  %16 = bitcast %struct.lua_State* %ARG1 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 88
  %19 = bitcast i8* %18 to i32*
  %load_target9 = load i32, i32* %19
  %R3616 = icmp slt i32 %R3613, %load_target9
  %R361610 = zext i1 %R3616 to i32
  %cond11 = icmp ne i32 %R361610, 0
  br i1 %cond11, label %L602, label %L604

L602:                                             ; preds = %L601
  %R3619 = icmp slt i32 90, %load_target9
  %R361912 = zext i1 %R3619 to i32
  %cond13 = icmp ne i32 %R361912, 0
  br i1 %cond13, label %L603, label %L604

L603:                                             ; preds = %L602
  %R3623 = sdiv i32 %load_target9, 2
  call void @luaD_reallocstack(%struct.lua_State* %ARG1, i32 %R3623)
  br label %L604

L604:                                             ; preds = %L603, %L602, %L601, %L597
  ret void
}

define internal void @traversestack(%struct.global_State* %ARG1, %struct.lua_State* %ARG2) {
L605:
  %0 = alloca %struct.CallInfo*
  %1 = alloca %struct.lua_TValue*
  %2 = alloca %struct.lua_TValue*
  %3 = alloca %struct.lua_TValue*
  %4 = alloca %struct.lua_TValue*
  %5 = bitcast %struct.lua_State* %ARG2 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 128
  %8 = bitcast i8* %7 to i32*
  %load_target = load i32, i32* %8
  %R3626 = icmp sge i32 %load_target, 4
  %R36261 = zext i1 %R3626 to i32
  %cond = icmp ne i32 %R36261, 0
  br i1 %cond, label %L606, label %L608

L606:                                             ; preds = %L605
  %9 = bitcast %struct.lua_State* %ARG2 to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 120
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %12
  %13 = bitcast { [184 x i8] }* %load_target2 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 9
  %load_target3 = load i8, i8* %14
  %R3630 = zext i8 %load_target3 to i32
  %R3631 = and i32 %R3630, 3
  %cond4 = icmp ne i32 %R3631, 0
  br i1 %cond4, label %L607, label %L608

L607:                                             ; preds = %L606
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target2)
  br label %L608

L608:                                             ; preds = %L607, %L606, %L605
  %15 = bitcast %struct.lua_State* %ARG2 to %struct.lua_TValue**
  %16 = bitcast %struct.lua_TValue** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %18
  %19 = bitcast %struct.lua_State* %ARG2 to %struct.CallInfo**
  %20 = bitcast %struct.CallInfo** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 80
  %22 = bitcast i8* %21 to %struct.CallInfo**
  %load_target6 = load %struct.CallInfo*, %struct.CallInfo** %22
  store %struct.lua_TValue* %load_target5, %struct.lua_TValue** %4
  store %struct.lua_TValue* %load_target5, %struct.lua_TValue** %1
  store %struct.CallInfo* %load_target6, %struct.CallInfo** %0
  br label %L609

L609:                                             ; preds = %L612, %L608
  %23 = load %struct.CallInfo*, %struct.CallInfo** %0
  %24 = bitcast %struct.lua_State* %ARG2 to %struct.CallInfo**
  %25 = bitcast %struct.CallInfo** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 40
  %27 = bitcast i8* %26 to %struct.CallInfo**
  %load_target7 = load %struct.CallInfo*, %struct.CallInfo** %27
  %R3642 = icmp ule %struct.CallInfo* %23, %load_target7
  %R36428 = zext i1 %R3642 to i32
  %cond9 = icmp ne i32 %R36428, 0
  br i1 %cond9, label %L610, label %L613

L610:                                             ; preds = %L609
  %28 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  %29 = bitcast %struct.CallInfo* %23 to %struct.lua_TValue**
  %30 = bitcast %struct.lua_TValue** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 16
  %32 = bitcast i8* %31 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %32
  %R3646 = icmp ult %struct.lua_TValue* %28, %load_target10
  %R364611 = zext i1 %R3646 to i32
  store %struct.lua_TValue* %28, %struct.lua_TValue** %4
  %cond12 = icmp ne i32 %R364611, 0
  br i1 %cond12, label %L611, label %L612

L611:                                             ; preds = %L610
  store %struct.lua_TValue* %load_target10, %struct.lua_TValue** %4
  store %struct.lua_TValue* %load_target10, %struct.lua_TValue** %1
  br label %L612

L612:                                             ; preds = %L611, %L610
  %33 = bitcast %struct.CallInfo* %23 to i8*
  %34 = getelementptr inbounds i8, i8* %33, %struct.CallInfo* inttoptr (i64 40 to %struct.CallInfo*)
  %35 = bitcast i8* %34 to %struct.CallInfo*
  store %struct.CallInfo* %35, %struct.CallInfo** %0
  br label %L609

L613:                                             ; preds = %L609
  %36 = bitcast %struct.lua_State* %ARG2 to %struct.lua_TValue**
  %37 = bitcast %struct.lua_TValue** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 64
  %39 = bitcast i8* %38 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %39
  store %struct.lua_TValue* %load_target13, %struct.lua_TValue** %2
  br label %L614

L614:                                             ; preds = %L618, %L613
  %40 = load %struct.lua_TValue*, %struct.lua_TValue** %2
  %41 = bitcast %struct.lua_State* %ARG2 to %struct.lua_TValue**
  %42 = bitcast %struct.lua_TValue** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 16
  %44 = bitcast i8* %43 to %struct.lua_TValue**
  %load_target14 = load %struct.lua_TValue*, %struct.lua_TValue** %44
  %R3656 = icmp ult %struct.lua_TValue* %40, %load_target14
  %R365615 = zext i1 %R3656 to i32
  store %struct.lua_TValue* %40, %struct.lua_TValue** %3
  %cond16 = icmp ne i32 %R365615, 0
  br i1 %cond16, label %L615, label %L619

L615:                                             ; preds = %L614
  %45 = bitcast %struct.lua_TValue* %40 to i32*
  %46 = bitcast i32* %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  %48 = bitcast i8* %47 to i32*
  %load_target17 = load i32, i32* %48
  %R3659 = icmp sge i32 %load_target17, 4
  %R365918 = zext i1 %R3659 to i32
  %cond19 = icmp ne i32 %R365918, 0
  br i1 %cond19, label %L616, label %L618

L616:                                             ; preds = %L615
  %49 = bitcast %struct.lua_TValue* %40 to { [184 x i8] }**
  %50 = bitcast { [184 x i8] }** %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %52 = bitcast i8* %51 to { [184 x i8] }**
  %load_target20 = load { [184 x i8] }*, { [184 x i8] }** %52
  %53 = bitcast { [184 x i8] }* %load_target20 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 9
  %load_target21 = load i8, i8* %54
  %R3663 = zext i8 %load_target21 to i32
  %R3664 = and i32 %R3663, 3
  %cond22 = icmp ne i32 %R3664, 0
  br i1 %cond22, label %L617, label %L618

L617:                                             ; preds = %L616
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target20)
  br label %L618

L618:                                             ; preds = %L617, %L616, %L615
  %55 = bitcast %struct.lua_TValue* %40 to i8*
  %56 = getelementptr inbounds i8, i8* %55, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %57 = bitcast i8* %56 to %struct.lua_TValue*
  store %struct.lua_TValue* %57, %struct.lua_TValue** %2
  br label %L614

L619:                                             ; preds = %L620, %L614
  %58 = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %59 = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %R3672 = icmp ule %struct.lua_TValue* %58, %59
  %R367223 = zext i1 %R3672 to i32
  %cond24 = icmp ne i32 %R367223, 0
  br i1 %cond24, label %L620, label %L621

L620:                                             ; preds = %L619
  %60 = bitcast %struct.lua_TValue* %58 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 8
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63
  %64 = bitcast %struct.lua_TValue* %58 to i8*
  %65 = getelementptr inbounds i8, i8* %64, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %66 = bitcast i8* %65 to %struct.lua_TValue*
  store %struct.lua_TValue* %66, %struct.lua_TValue** %3
  br label %L619

L621:                                             ; preds = %L619
  call void @checkstacksizes(%struct.lua_State* %ARG2, %struct.lua_TValue* %59)
  ret void
}

define internal i64 @propagatemark(%struct.global_State* %ARG1) {
L622:
  %0 = alloca i32
  %1 = alloca i64
  %2 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %3 = bitcast { [184 x i8] }** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 56
  %5 = bitcast i8* %4 to { [184 x i8] }**
  %load_target = load { [184 x i8] }*, { [184 x i8] }** %5
  %6 = bitcast { [184 x i8] }* %load_target to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 9
  %load_target1 = load i8, i8* %7
  %R3682 = zext i8 %load_target1 to i32
  %R3683 = or i32 %R3682, 4
  %R3684 = trunc i32 %R3683 to i8
  %8 = bitcast { [184 x i8] }* %load_target to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 9
  store i8 %R3684, i8* %9
  %10 = bitcast { [184 x i8] }* %load_target to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %load_target2 = load i8, i8* %11
  switch i8 %load_target2, label %L632 [
    i32 5, label %L623
    i32 6, label %L626
    i32 8, label %L630
    i32 9, label %L631
  ]

L623:                                             ; preds = %L622
  %12 = bitcast { [184 x i8] }* %load_target to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 48
  %15 = bitcast i8* %14 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %15
  %16 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 56
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %load_target3, { [184 x i8] }** %19
  %R3694 = call i32 @traversetable(%struct.global_State* %ARG1, { [184 x i8] }* %load_target)
  %cond = icmp ne i32 %R3694, 0
  br i1 %cond, label %L624, label %L625

L624:                                             ; preds = %L623
  %20 = bitcast { [184 x i8] }* %load_target to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 9
  %load_target4 = load i8, i8* %21
  %R3697 = zext i8 %load_target4 to i32
  %R3698 = and i32 %R3697, 251
  %R3699 = trunc i32 %R3698 to i8
  %22 = bitcast { [184 x i8] }* %load_target to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 9
  store i8 %R3699, i8* %23
  br label %L625

L625:                                             ; preds = %L624, %L623
  %24 = bitcast { [184 x i8] }* %load_target to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 56
  %27 = bitcast i8* %26 to i32*
  %load_target5 = load i32, i32* %27
  %R3702 = sext i32 %load_target5 to i64
  %R3703 = mul i64 %R3702, 16
  %R3704 = add i64 %R3703, 64
  %28 = bitcast { [184 x i8] }* %load_target to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 11
  %load_target6 = load i8, i8* %29
  %R3707 = zext i8 %load_target6 to i32
  %R3708 = shl i64 1, i32 %R3707
  %R3709 = mul i64 %R3708, 40
  %R3710 = add i64 %R3704, %R3709
  store i64 %R3710, i64* %1
  br label %L633

L626:                                             ; preds = %L622
  %30 = bitcast { [184 x i8] }* %load_target to { [184 x i8] }**
  %31 = bitcast { [184 x i8] }** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  %33 = bitcast i8* %32 to { [184 x i8] }**
  %load_target7 = load { [184 x i8] }*, { [184 x i8] }** %33
  %34 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %35 = bitcast { [184 x i8] }** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 56
  %37 = bitcast i8* %36 to { [184 x i8] }**
  store { [184 x i8] }* %load_target7, { [184 x i8] }** %37
  call void @traverseclosure(%struct.global_State* %ARG1, { [184 x i8] }* %load_target)
  %38 = bitcast { [184 x i8] }* %load_target to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 10
  %load_target8 = load i8, i8* %39
  %cond9 = icmp ne i8 %load_target8, 0
  br i1 %cond9, label %L627, label %L628

L627:                                             ; preds = %L626
  %40 = bitcast { [184 x i8] }* %load_target to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 11
  %load_target10 = load i8, i8* %41
  %R3724 = zext i8 %load_target10 to i32
  %R3725 = add i32 %R3724, -1
  %R3726 = sext i32 %R3725 to i64
  %R3727 = mul i64 %R3726, 16
  %R3728 = trunc i64 %R3727 to i32
  %R3729 = add i32 %R3728, 56
  store i32 %R3729, i32* %0
  br label %L629

L628:                                             ; preds = %L626
  %42 = bitcast { [184 x i8] }* %load_target to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 11
  %load_target11 = load i8, i8* %43
  %R3732 = zext i8 %load_target11 to i32
  %R3733 = add i32 %R3732, -1
  %R3734 = sext i32 %R3733 to i64
  %R3735 = mul i64 %R3734, 8
  %R3736 = trunc i64 %R3735 to i32
  %R3737 = add i32 %R3736, 48
  store i32 %R3737, i32* %0
  br label %L629

L629:                                             ; preds = %L628, %L627
  %44 = load i32, i32* %0
  %R3739 = sext i32 %44 to i64
  store i64 %R3739, i64* %1
  br label %L633

L630:                                             ; preds = %L622
  %45 = bitcast { [184 x i8] }* %load_target to { [184 x i8] }**
  %46 = bitcast { [184 x i8] }** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 160
  %48 = bitcast i8* %47 to { [184 x i8] }**
  %load_target12 = load { [184 x i8] }*, { [184 x i8] }** %48
  %49 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %50 = bitcast { [184 x i8] }** %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 56
  %52 = bitcast i8* %51 to { [184 x i8] }**
  store { [184 x i8] }* %load_target12, { [184 x i8] }** %52
  %53 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %54 = bitcast { [184 x i8] }** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 64
  %56 = bitcast i8* %55 to { [184 x i8] }**
  %load_target13 = load { [184 x i8] }*, { [184 x i8] }** %56
  %57 = bitcast { [184 x i8] }* %load_target to { [184 x i8] }**
  %58 = bitcast { [184 x i8] }** %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 160
  %60 = bitcast i8* %59 to { [184 x i8] }**
  store { [184 x i8] }* %load_target13, { [184 x i8] }** %60
  %61 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %62 = bitcast { [184 x i8] }** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 64
  %64 = bitcast i8* %63 to { [184 x i8] }**
  store { [184 x i8] }* %load_target, { [184 x i8] }** %64
  %65 = bitcast { [184 x i8] }* %load_target to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 9
  %load_target14 = load i8, i8* %66
  %R3752 = zext i8 %load_target14 to i32
  %R3753 = and i32 %R3752, 251
  %R3754 = trunc i32 %R3753 to i8
  %67 = bitcast { [184 x i8] }* %load_target to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 9
  store i8 %R3754, i8* %68
  call void @traversestack(%struct.global_State* %ARG1, { [184 x i8] }* %load_target)
  %69 = bitcast { [184 x i8] }* %load_target to i32*
  %70 = bitcast i32* %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 88
  %72 = bitcast i8* %71 to i32*
  %load_target15 = load i32, i32* %72
  %R3759 = sext i32 %load_target15 to i64
  %R3760 = mul i64 %R3759, 16
  %R3761 = add i64 %R3760, 184
  %73 = bitcast { [184 x i8] }* %load_target to i32*
  %74 = bitcast i32* %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 92
  %76 = bitcast i8* %75 to i32*
  %load_target16 = load i32, i32* %76
  %R3764 = sext i32 %load_target16 to i64
  %R3765 = mul i64 %R3764, 40
  %R3766 = add i64 %R3761, %R3765
  store i64 %R3766, i64* %1
  br label %L633

L631:                                             ; preds = %L622
  %77 = bitcast { [184 x i8] }* %load_target to { [184 x i8] }**
  %78 = bitcast { [184 x i8] }** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 104
  %80 = bitcast i8* %79 to { [184 x i8] }**
  %load_target17 = load { [184 x i8] }*, { [184 x i8] }** %80
  %81 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %82 = bitcast { [184 x i8] }** %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 56
  %84 = bitcast i8* %83 to { [184 x i8] }**
  store { [184 x i8] }* %load_target17, { [184 x i8] }** %84
  call void @traverseproto(%struct.global_State* %ARG1, { [184 x i8] }* %load_target)
  %85 = bitcast { [184 x i8] }* %load_target to i32*
  %86 = bitcast i32* %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 80
  %88 = bitcast i8* %87 to i32*
  %load_target18 = load i32, i32* %88
  %R3777 = sext i32 %load_target18 to i64
  %R3778 = mul i64 %R3777, 4
  %R3779 = add i64 %R3778, 120
  %89 = bitcast { [184 x i8] }* %load_target to i32*
  %90 = bitcast i32* %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 88
  %92 = bitcast i8* %91 to i32*
  %load_target19 = load i32, i32* %92
  %R3782 = sext i32 %load_target19 to i64
  %R3783 = mul i64 %R3782, 8
  %R3784 = add i64 %R3779, %R3783
  %93 = bitcast { [184 x i8] }* %load_target to i32*
  %94 = bitcast i32* %93 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 76
  %96 = bitcast i8* %95 to i32*
  %load_target20 = load i32, i32* %96
  %R3787 = sext i32 %load_target20 to i64
  %R3788 = mul i64 %R3787, 16
  %R3789 = add i64 %R3784, %R3788
  %97 = bitcast { [184 x i8] }* %load_target to i32*
  %98 = bitcast i32* %97 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 84
  %100 = bitcast i8* %99 to i32*
  %load_target21 = load i32, i32* %100
  %R3792 = sext i32 %load_target21 to i64
  %R3793 = mul i64 %R3792, 4
  %R3794 = add i64 %R3789, %R3793
  %101 = bitcast { [184 x i8] }* %load_target to i32*
  %102 = bitcast i32* %101 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 92
  %104 = bitcast i8* %103 to i32*
  %load_target22 = load i32, i32* %104
  %R3797 = sext i32 %load_target22 to i64
  %R3798 = mul i64 %R3797, 16
  %R3799 = add i64 %R3794, %R3798
  %105 = bitcast { [184 x i8] }* %load_target to i32*
  %106 = bitcast i32* %105 to i8*
  %107 = getelementptr inbounds i8, i8* %106, i64 72
  %108 = bitcast i8* %107 to i32*
  %load_target23 = load i32, i32* %108
  %R3802 = sext i32 %load_target23 to i64
  %R3803 = mul i64 %R3802, 8
  %R3804 = add i64 %R3799, %R3803
  store i64 %R3804, i64* %1
  br label %L633

L632:                                             ; preds = %L622
  store i64 0, i64* %1
  br label %L633

L633:                                             ; preds = %L632, %L631, %L630, %L629, %L625
  %109 = load i64, i64* %1
  ret i64 %109
}

define internal i64 @propagateall(%struct.global_State* %ARG1) {
L634:
  %0 = alloca i64
  store i64 0, i64* %0
  br label %L635

L635:                                             ; preds = %L636, %L634
  %1 = bitcast %struct.global_State* %ARG1 to { [184 x i8] }**
  %2 = bitcast { [184 x i8] }** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 56
  %4 = bitcast i8* %3 to { [184 x i8] }**
  %load_target = load { [184 x i8] }*, { [184 x i8] }** %4
  %5 = load i64, i64* %0
  %cond = icmp ne { [184 x i8] }* %load_target, null
  br i1 %cond, label %L636, label %L637

L636:                                             ; preds = %L635
  %R3809 = call i64 @propagatemark(%struct.global_State* %ARG1)
  %R3813 = add i64 %5, %R3809
  store i64 %R3813, i64* %0
  br label %L635

L637:                                             ; preds = %L635
  ret i64 %5
}

define internal i32 @iscleared(%struct.lua_TValue* %ARG1, i32 %ARG2) {
L638:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = bitcast %struct.lua_TValue* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target = load i32, i32* %7
  %R3820 = icmp sge i32 %load_target, 4
  %R38201 = zext i1 %R3820 to i32
  %cond = icmp ne i32 %R38201, 0
  br i1 %cond, label %L640, label %L639

L639:                                             ; preds = %L638
  store i32 0, i32* %3
  br label %L652

L640:                                             ; preds = %L638
  %R3825 = icmp eq i32 %load_target, 4
  %R38252 = zext i1 %R3825 to i32
  %cond3 = icmp ne i32 %R38252, 0
  br i1 %cond3, label %L641, label %L642

L641:                                             ; preds = %L640
  %8 = bitcast %struct.lua_TValue* %ARG1 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %11
  %12 = bitcast { [184 x i8] }* %load_target4 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 9
  %load_target5 = load i8, i8* %13
  %R3829 = zext i8 %load_target5 to i32
  %R3830 = and i32 %R3829, 252
  %R3831 = trunc i32 %R3830 to i8
  %14 = bitcast { [184 x i8] }* %load_target4 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 9
  store i8 %R3831, i8* %15
  store i32 0, i32* %3
  br label %L652

L642:                                             ; preds = %L640
  %16 = bitcast %struct.lua_TValue* %ARG1 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  %load_target6 = load { [184 x i8] }*, { [184 x i8] }** %19
  %20 = bitcast { [184 x i8] }* %load_target6 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 9
  %load_target7 = load i8, i8* %21
  %R3835 = zext i8 %load_target7 to i32
  %R3836 = and i32 %R3835, 3
  %cond8 = icmp ne i32 %R3836, 0
  br i1 %cond8, label %L643, label %L644

L643:                                             ; preds = %L642
  store i32 1, i32* %2
  br label %L651

L644:                                             ; preds = %L642
  %R3840 = icmp eq i32 %load_target, 7
  %R38409 = zext i1 %R3840 to i32
  %cond10 = icmp ne i32 %R38409, 0
  br i1 %cond10, label %L645, label %L649

L645:                                             ; preds = %L644
  %cond11 = icmp ne i32 %ARG2, 0
  br i1 %cond11, label %L647, label %L646

L646:                                             ; preds = %L645
  %22 = bitcast { [184 x i8] }* %load_target6 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 9
  %load_target12 = load i8, i8* %23
  %R3845 = zext i8 %load_target12 to i32
  %R3846 = and i32 %R3845, 8
  store i32 %R3846, i32* %0
  br label %L648

L647:                                             ; preds = %L645
  store i32 0, i32* %0
  br label %L648

L648:                                             ; preds = %L647, %L646
  %24 = load i32, i32* %0
  store i32 %24, i32* %1
  br label %L650

L649:                                             ; preds = %L644
  store i32 0, i32* %1
  br label %L650

L650:                                             ; preds = %L649, %L648
  %25 = load i32, i32* %1
  store i32 %25, i32* %2
  br label %L651

L651:                                             ; preds = %L650, %L643
  %26 = load i32, i32* %2
  store i32 %26, i32* %3
  br label %L652

L652:                                             ; preds = %L651, %L641, %L639
  %27 = load i32, i32* %3
  ret i32 %27
}

define internal void @cleartable({ [184 x i8] }* %ARG1) {
L653:
  %0 = alloca { [184 x i8] }*
  %1 = alloca i32
  %2 = alloca i32
  store { [184 x i8] }* %ARG1, { [184 x i8] }** %0
  br label %L654

L654:                                             ; preds = %L665, %L653
  %3 = load { [184 x i8] }*, { [184 x i8] }** %0
  %cond = icmp ne { [184 x i8] }* %3, null
  br i1 %cond, label %L655, label %L666

L655:                                             ; preds = %L654
  %4 = bitcast { [184 x i8] }* %3 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 56
  %7 = bitcast i8* %6 to i32*
  %load_target = load i32, i32* %7
  %8 = bitcast { [184 x i8] }* %3 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 9
  %load_target1 = load i8, i8* %9
  %R3857 = zext i8 %load_target1 to i32
  %R3858 = and i32 %R3857, 16
  store i32 %load_target, i32* %1
  %cond2 = icmp ne i32 %R3858, 0
  br i1 %cond2, label %L656, label %L659

L656:                                             ; preds = %L658, %L657, %L655
  %10 = load i32, i32* %1
  %R3860 = add i32 %10, -1
  store i32 %R3860, i32* %1
  %cond3 = icmp ne i32 %10, 0
  br i1 %cond3, label %L657, label %L659

L657:                                             ; preds = %L656
  %11 = bitcast { [184 x i8] }* %3 to %struct.lua_TValue**
  %12 = bitcast %struct.lua_TValue** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 24
  %14 = bitcast i8* %13 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %14
  %R3864 = sext i32 %R3860 to i64
  %R3865 = mul i64 %R3864, 16
  %15 = bitcast %struct.lua_TValue* %load_target4 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %R3865
  %17 = bitcast i8* %16 to %struct.lua_TValue*
  %R3868 = call i32 @iscleared(%struct.lua_TValue* %17, i32 0)
  %cond5 = icmp ne i32 %R3868, 0
  br i1 %cond5, label %L658, label %L656

L658:                                             ; preds = %L657
  %18 = bitcast %struct.lua_TValue* %17 to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21
  br label %L656

L659:                                             ; preds = %L656, %L655
  %22 = bitcast { [184 x i8] }* %3 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 11
  %load_target6 = load i8, i8* %23
  %R3872 = zext i8 %load_target6 to i32
  %R3873 = shl i64 1, i32 %R3872
  %R3874 = trunc i64 %R3873 to i32
  store i32 %R3874, i32* %2
  br label %L660

L660:                                             ; preds = %L664, %L663, %L661, %L659
  %24 = load i32, i32* %2
  %R3876 = add i32 %24, -1
  store i32 %R3876, i32* %2
  %cond7 = icmp ne i32 %24, 0
  br i1 %cond7, label %L661, label %L665

L661:                                             ; preds = %L660
  %25 = bitcast { [184 x i8] }* %3 to %struct.Node**
  %26 = bitcast %struct.Node** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 32
  %28 = bitcast i8* %27 to %struct.Node**
  %load_target8 = load %struct.Node*, %struct.Node** %28
  %R3880 = sext i32 %R3876 to i64
  %R3881 = mul i64 %R3880, 40
  %29 = bitcast %struct.Node* %load_target8 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %R3881
  %31 = bitcast i8* %30 to %struct.Node*
  %32 = bitcast %struct.Node* %31 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i32*
  %load_target9 = load i32, i32* %35
  %cond10 = icmp ne i32 %load_target9, 0
  br i1 %cond10, label %L662, label %L660

L662:                                             ; preds = %L661
  %36 = bitcast %struct.Node* %31 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i32 16
  %38 = bitcast i8* %37 to %struct.Node*
  %R3889 = call i32 @iscleared(%struct.Node* %38, i32 1)
  %cond11 = icmp ne i32 %R3889, 0
  br i1 %cond11, label %L664, label %L663

L663:                                             ; preds = %L662
  %R3892 = call i32 @iscleared(%struct.Node* %31, i32 0)
  %cond12 = icmp ne i32 %R3892, 0
  br i1 %cond12, label %L664, label %L660

L664:                                             ; preds = %L663, %L662
  %39 = bitcast %struct.Node* %31 to i32*
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42
  call void @removeentry(%struct.Node* %31)
  br label %L660

L665:                                             ; preds = %L660
  %43 = bitcast { [184 x i8] }* %3 to { [184 x i8] }**
  %44 = bitcast { [184 x i8] }** %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 48
  %46 = bitcast i8* %45 to { [184 x i8] }**
  %load_target13 = load { [184 x i8] }*, { [184 x i8] }** %46
  store { [184 x i8] }* %load_target13, { [184 x i8] }** %0
  br label %L654

L666:                                             ; preds = %L654
  ret void
}

define internal void @freeobj(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2) {
L667:
  %0 = bitcast { [184 x i8] }* %ARG2 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 8
  %load_target = load i8, i8* %1
  %R3920 = bitcast { [184 x i8] }* %ARG2 to i8*
  switch i8 %load_target, label %L675 [
    i32 4, label %L673
    i32 5, label %L671
    i32 6, label %L669
    i32 7, label %L674
    i32 8, label %L672
    i32 9, label %L668
    i32 10, label %L670
  ]

L668:                                             ; preds = %L667
  call void @luaF_freeproto(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2)
  br label %L675

L669:                                             ; preds = %L667
  call void @luaF_freeclosure(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2)
  br label %L675

L670:                                             ; preds = %L667
  call void @luaF_freeupval(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2)
  br label %L675

L671:                                             ; preds = %L667
  call void @luaH_free(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2)
  br label %L675

L672:                                             ; preds = %L667
  call void @luaE_freethread(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2)
  br label %L675

L673:                                             ; preds = %L667
  %2 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %3 = bitcast %struct.global_State** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to %struct.global_State**
  %load_target1 = load %struct.global_State*, %struct.global_State** %5
  %6 = bitcast %struct.global_State* %load_target1 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to i32*
  %load_target2 = load i32, i32* %9
  %R3917 = add i32 %load_target2, -1
  %10 = bitcast %struct.global_State* %load_target1 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %R3917, i32* %13
  %14 = bitcast { [184 x i8] }* %ARG2 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to i64*
  %load_target3 = load i64, i64* %17
  %R3925 = add i64 %load_target3, 25
  %R3926 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R3920, i64 %R3925, i64 0)
  br label %L675

L674:                                             ; preds = %L667
  %18 = bitcast { [184 x i8] }* %ARG2 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 32
  %21 = bitcast i8* %20 to i64*
  %load_target4 = load i64, i64* %21
  %R3932 = add i64 %load_target4, 40
  %R3933 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R3920, i64 %R3932, i64 0)
  br label %L675

L675:                                             ; preds = %L674, %L673, %L672, %L671, %L670, %L669, %L668, %L667
  ret void
}

declare void @luaE_freethread(%struct.lua_State*, %struct.lua_State*)

define internal { [184 x i8] }** @sweeplist(%struct.lua_State* %ARG1, { [184 x i8] }** %ARG2, i64 %ARG3) {
L676:
  %0 = alloca { [184 x i8] }**
  %1 = alloca i64
  %2 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %3 = bitcast %struct.global_State** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %5
  %6 = bitcast %struct.global_State* %load_target to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %load_target1 = load i8, i8* %7
  %R3938 = zext i8 %load_target1 to i32
  %R3939 = xor i32 %R3938, 3
  store { [184 x i8] }** %ARG2, { [184 x i8] }*** %0
  store i64 %ARG3, i64* %1
  br label %L677

L677:                                             ; preds = %L685, %L682, %L676
  %8 = load { [184 x i8] }**, { [184 x i8] }*** %0
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %11
  %cond = icmp ne { [184 x i8] }* %load_target2, null
  br i1 %cond, label %L678, label %L686

L678:                                             ; preds = %L677
  %12 = load i64, i64* %1
  %R3944 = add i64 %12, -1
  %R3945 = icmp ugt i64 %12, 0
  %R39453 = zext i1 %R3945 to i32
  store i64 %R3944, i64* %1
  %cond4 = icmp ne i32 %R39453, 0
  br i1 %cond4, label %L679, label %L686

L679:                                             ; preds = %L678
  %13 = bitcast { [184 x i8] }* %load_target2 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %load_target5 = load i8, i8* %14
  %R3948 = zext i8 %load_target5 to i32
  %R3949 = icmp eq i32 %R3948, 8
  %R39496 = zext i1 %R3949 to i32
  %cond7 = icmp ne i32 %R39496, 0
  br i1 %cond7, label %L680, label %L681

L680:                                             ; preds = %L679
  %15 = bitcast { [184 x i8] }* %load_target2 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i32 152
  %17 = bitcast i8* %16 to { [184 x i8] }*
  %R3954 = call { [184 x i8] }** @sweeplist(%struct.lua_State* %ARG1, { [184 x i8] }* %17, i64 -3)
  br label %L681

L681:                                             ; preds = %L680, %L679
  %18 = bitcast { [184 x i8] }* %load_target2 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 9
  %load_target8 = load i8, i8* %19
  %R3957 = zext i8 %load_target8 to i32
  %R3958 = xor i32 %R3957, 3
  %R3960 = and i32 %R3958, %R3939
  %cond9 = icmp ne i32 %R3960, 0
  br i1 %cond9, label %L682, label %L683

L682:                                             ; preds = %L681
  %R3964 = and i32 %R3957, 248
  %20 = bitcast %struct.global_State* %load_target to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 32
  %load_target10 = load i8, i8* %21
  %R3967 = zext i8 %load_target10 to i32
  %R3968 = and i32 %R3967, 3
  %R3971 = or i32 %R3964, %R3968
  %R3972 = trunc i32 %R3971 to i8
  %22 = bitcast { [184 x i8] }* %load_target2 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 9
  store i8 %R3972, i8* %23
  store { [184 x i8] }* %load_target2, { [184 x i8] }*** %0
  br label %L677

L683:                                             ; preds = %L681
  %24 = bitcast { [184 x i8] }* %load_target2 to { [184 x i8] }**
  %25 = bitcast { [184 x i8] }** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %27
  %28 = bitcast { [184 x i8] }** %8 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 0
  %30 = bitcast i8* %29 to { [184 x i8] }**
  store { [184 x i8] }* %load_target11, { [184 x i8] }** %30
  %31 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %32 = bitcast { [184 x i8] }** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 40
  %34 = bitcast i8* %33 to { [184 x i8] }**
  %load_target12 = load { [184 x i8] }*, { [184 x i8] }** %34
  %R3983 = icmp eq { [184 x i8] }* %load_target2, %load_target12
  %R398313 = zext i1 %R3983 to i32
  %cond14 = icmp ne i32 %R398313, 0
  br i1 %cond14, label %L684, label %L685

L684:                                             ; preds = %L683
  %35 = bitcast { [184 x i8] }* %load_target2 to { [184 x i8] }**
  %36 = bitcast { [184 x i8] }** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to { [184 x i8] }**
  %load_target15 = load { [184 x i8] }*, { [184 x i8] }** %38
  %39 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %40 = bitcast { [184 x i8] }** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 40
  %42 = bitcast i8* %41 to { [184 x i8] }**
  store { [184 x i8] }* %load_target15, { [184 x i8] }** %42
  br label %L685

L685:                                             ; preds = %L684, %L683
  call void @freeobj(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target2)
  br label %L677

L686:                                             ; preds = %L678, %L677
  ret { [184 x i8] }** %8
}

define internal void @checkSizes(%struct.lua_State* %ARG1) {
L687:
  %0 = alloca i8*
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %2 = bitcast %struct.global_State** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %4
  %5 = bitcast %struct.global_State* %load_target to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %9 = bitcast %struct.global_State* %load_target to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 12
  %12 = bitcast i8* %11 to i32*
  %load_target2 = load i32, i32* %12
  %R3997 = sdiv i32 %load_target2, 4
  %R3999 = icmp ult i32 %load_target1, %R3997
  %R39993 = zext i1 %R3999 to i32
  %cond = icmp ne i32 %R39993, 0
  br i1 %cond, label %L688, label %L690

L688:                                             ; preds = %L687
  %R4002 = icmp sgt i32 %load_target2, 64
  %R40024 = zext i1 %R4002 to i32
  %cond5 = icmp ne i32 %R40024, 0
  br i1 %cond5, label %L689, label %L690

L689:                                             ; preds = %L688
  %R4006 = sdiv i32 %load_target2, 2
  call void @luaS_resize(%struct.lua_State* %ARG1, i32 %R4006)
  br label %L690

L690:                                             ; preds = %L689, %L688, %L687
  %13 = bitcast %struct.global_State* %load_target to i64*
  %14 = bitcast i64* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 104
  %16 = bitcast i8* %15 to i64*
  %load_target6 = load i64, i64* %16
  %R4009 = icmp ugt i64 %load_target6, 64
  %R40097 = zext i1 %R4009 to i32
  %cond8 = icmp ne i32 %R40097, 0
  br i1 %cond8, label %L691, label %L695

L691:                                             ; preds = %L690
  %R4012 = udiv i64 %load_target6, 2
  %R4014 = add i64 %R4012, 1
  %R4016 = icmp ule i64 %R4014, -3
  %R40169 = zext i1 %R4016 to i32
  %cond10 = icmp ne i32 %R40169, 0
  br i1 %cond10, label %L692, label %L693

L692:                                             ; preds = %L691
  %17 = bitcast %struct.global_State* %load_target to i8**
  %18 = bitcast i8** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 88
  %20 = bitcast i8* %19 to i8**
  %load_target11 = load i8*, i8** %20
  %R4026 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %load_target11, i64 %load_target6, i64 %R4012)
  store i8* %R4026, i8** %0
  br label %L694

L693:                                             ; preds = %L691
  %R4028 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R4028, i8** %0
  br label %L694

L694:                                             ; preds = %L693, %L692
  %21 = load i8*, i8** %0
  %22 = bitcast %struct.global_State* %load_target to i8**
  %23 = bitcast i8** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 88
  %25 = bitcast i8* %24 to i8**
  store i8* %21, i8** %25
  %26 = bitcast %struct.global_State* %load_target to i64*
  %27 = bitcast i64* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 104
  %29 = bitcast i8* %28 to i64*
  store i64 %R4012, i64* %29
  br label %L695

L695:                                             ; preds = %L694, %L690
  ret void
}

define internal void @GCTM(%struct.lua_State* %ARG1) {
L696:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 80
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %8 = bitcast { [184 x i8] }* %load_target1 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %11
  %R4045 = icmp eq { [184 x i8] }* %load_target2, %load_target1
  %R40453 = zext i1 %R4045 to i32
  %cond = icmp ne i32 %R40453, 0
  br i1 %cond, label %L697, label %L698

L697:                                             ; preds = %L696
  %12 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 80
  %15 = bitcast i8* %14 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %15
  br label %L699

L698:                                             ; preds = %L696
  %16 = bitcast { [184 x i8] }* %load_target2 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %19
  %20 = bitcast { [184 x i8] }* %load_target1 to { [184 x i8] }**
  %21 = bitcast { [184 x i8] }** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to { [184 x i8] }**
  store { [184 x i8] }* %load_target4, { [184 x i8] }** %23
  br label %L699

L699:                                             ; preds = %L698, %L697
  %24 = bitcast %struct.global_State* %load_target to %struct.lua_State**
  %25 = bitcast %struct.lua_State** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 176
  %27 = bitcast i8* %26 to %struct.lua_State**
  %load_target5 = load %struct.lua_State*, %struct.lua_State** %27
  %28 = bitcast %struct.lua_State* %load_target5 to { [184 x i8] }**
  %29 = bitcast { [184 x i8] }** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [184 x i8] }**
  %load_target6 = load { [184 x i8] }*, { [184 x i8] }** %31
  %32 = bitcast { [184 x i8] }* %load_target2 to { [184 x i8] }**
  %33 = bitcast { [184 x i8] }** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to { [184 x i8] }**
  store { [184 x i8] }* %load_target6, { [184 x i8] }** %35
  %36 = bitcast %struct.global_State* %load_target to %struct.lua_State**
  %37 = bitcast %struct.lua_State** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 176
  %39 = bitcast i8* %38 to %struct.lua_State**
  %load_target7 = load %struct.lua_State*, %struct.lua_State** %39
  %40 = bitcast %struct.lua_State* %load_target7 to { [184 x i8] }**
  %41 = bitcast { [184 x i8] }** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to { [184 x i8] }**
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %43
  %44 = bitcast { [184 x i8] }* %load_target2 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 9
  %load_target8 = load i8, i8* %45
  %R4060 = zext i8 %load_target8 to i32
  %R4061 = and i32 %R4060, 248
  %46 = bitcast %struct.global_State* %load_target to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %load_target9 = load i8, i8* %47
  %R4064 = zext i8 %load_target9 to i32
  %R4065 = and i32 %R4064, 3
  %R4068 = or i32 %R4061, %R4065
  %R4069 = trunc i32 %R4068 to i8
  %48 = bitcast { [184 x i8] }* %load_target2 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 9
  store i8 %R4069, i8* %49
  %50 = bitcast { [184 x i8] }* %load_target2 to %struct.Table**
  %51 = bitcast %struct.Table** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 16
  %53 = bitcast i8* %52 to %struct.Table**
  %load_target10 = load %struct.Table*, %struct.Table** %53
  %cond11 = icmp ne %struct.Table* %load_target10, null
  br i1 %cond11, label %L700, label %L703

L700:                                             ; preds = %L699
  %54 = bitcast %struct.Table* %load_target10 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 10
  %load_target12 = load i8, i8* %55
  %R4077 = zext i8 %load_target12 to i32
  %R4078 = and i32 %R4077, 4
  %cond13 = icmp ne i32 %R4078, 0
  br i1 %cond13, label %L703, label %L701

L701:                                             ; preds = %L700
  %56 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %57 = bitcast %struct.global_State** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 32
  %59 = bitcast i8* %58 to %struct.global_State**
  %load_target14 = load %struct.global_State*, %struct.global_State** %59
  %60 = bitcast %struct.global_State* %load_target14 to { [24 x i8] }**
  %61 = bitcast { [24 x i8] }** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 312
  %63 = bitcast i8* %62 to { [24 x i8] }**
  %load_target15 = load { [24 x i8] }*, { [24 x i8] }** %63
  %R4084 = call %struct.lua_TValue* @luaT_gettm(%struct.Table* %load_target10, i32 2, { [24 x i8] }* %load_target15)
  %cond16 = icmp ne %struct.lua_TValue* %R4084, null
  br i1 %cond16, label %L702, label %L703

L702:                                             ; preds = %L701
  %64 = bitcast %struct.lua_State* %ARG1 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 101
  %load_target17 = load i8, i8* %65
  %66 = bitcast %struct.global_State* %load_target to i64*
  %67 = bitcast i64* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 112
  %69 = bitcast i8* %68 to i64*
  %load_target18 = load i64, i64* %69
  %70 = bitcast %struct.lua_State* %ARG1 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 101
  store i8 0, i8* %71
  %72 = bitcast %struct.global_State* %load_target to i64*
  %73 = bitcast i64* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 120
  %75 = bitcast i8* %74 to i64*
  %load_target19 = load i64, i64* %75
  %R4096 = mul i64 %load_target19, 2
  %76 = bitcast %struct.global_State* %load_target to i64*
  %77 = bitcast i64* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 112
  %79 = bitcast i8* %78 to i64*
  store i64 %R4096, i64* %79
  %80 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %81 = bitcast %struct.lua_TValue** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 16
  %83 = bitcast i8* %82 to %struct.lua_TValue**
  %load_target20 = load %struct.lua_TValue*, %struct.lua_TValue** %83
  %84 = bitcast %struct.lua_TValue* %R4084 to { [8 x i8] }*
  %85 = bitcast { [8 x i8] }* %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 0
  %87 = bitcast i8* %86 to { [8 x i8] }*
  %load_target21 = load { [8 x i8] }, { [8 x i8] }* %87
  %88 = bitcast %struct.lua_TValue* %load_target20 to { [8 x i8] }*
  %89 = bitcast { [8 x i8] }* %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 0
  %91 = bitcast i8* %90 to { [8 x i8] }*
  store { [8 x i8] } %load_target21, { [8 x i8] }* %91
  %92 = bitcast %struct.lua_TValue* %R4084 to i32*
  %93 = bitcast i32* %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 8
  %95 = bitcast i8* %94 to i32*
  %load_target22 = load i32, i32* %95
  %96 = bitcast %struct.lua_TValue* %load_target20 to i32*
  %97 = bitcast i32* %96 to i8*
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 %load_target22, i32* %99
  %100 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %101 = bitcast %struct.lua_TValue** %100 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 16
  %103 = bitcast i8* %102 to %struct.lua_TValue**
  %load_target23 = load %struct.lua_TValue*, %struct.lua_TValue** %103
  %104 = bitcast %struct.lua_TValue* %load_target23 to { [184 x i8] }**
  %105 = bitcast { [184 x i8] }** %104 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 16
  %107 = bitcast i8* %106 to { [184 x i8] }**
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %107
  %108 = bitcast %struct.lua_TValue* %load_target23 to i32*
  %109 = bitcast i32* %108 to i8*
  %110 = getelementptr inbounds i8, i8* %109, i64 24
  %111 = bitcast i8* %110 to i32*
  store i32 7, i32* %111
  %112 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %113 = bitcast %struct.lua_TValue** %112 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 16
  %115 = bitcast i8* %114 to %struct.lua_TValue**
  %load_target24 = load %struct.lua_TValue*, %struct.lua_TValue** %115
  %R4117 = ptrtoint %struct.lua_TValue* %load_target24 to i64
  %R4118 = add i64 %R4117, 32
  %R4119 = inttoptr i64 %R4118 to %struct.lua_TValue*
  %116 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %117 = bitcast %struct.lua_TValue** %116 to i8*
  %118 = getelementptr inbounds i8, i8* %117, i64 16
  %119 = bitcast i8* %118 to %struct.lua_TValue**
  store %struct.lua_TValue* %R4119, %struct.lua_TValue** %119
  %120 = bitcast %struct.lua_TValue* %R4119 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 -32
  %122 = bitcast i8* %121 to %struct.lua_TValue*
  call void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %122, i32 0)
  %123 = bitcast %struct.lua_State* %ARG1 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 101
  store i8 %load_target17, i8* %124
  %125 = bitcast %struct.global_State* %load_target to i64*
  %126 = bitcast i64* %125 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 112
  %128 = bitcast i8* %127 to i64*
  store i64 %load_target18, i64* %128
  br label %L703

L703:                                             ; preds = %L702, %L701, %L700, %L699
  ret void
}

define internal void @luaC_callGCTM(%struct.lua_State* %ARG1) {
L704:
  br label %L705

L705:                                             ; preds = %L706, %L704
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 80
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %cond = icmp ne { [184 x i8] }* %load_target1, null
  br i1 %cond, label %L706, label %L707

L706:                                             ; preds = %L705
  call void @GCTM(%struct.lua_State* %ARG1)
  br label %L705

L707:                                             ; preds = %L705
  ret void
}

define internal void @luaC_freeall(%struct.lua_State* %ARG1) {
L708:
  %0 = alloca i32
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %2 = bitcast %struct.global_State** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %4
  %5 = bitcast %struct.global_State* %load_target to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 32
  store i8 67, i8* %6
  %7 = bitcast %struct.global_State* %load_target to i8*
  %8 = getelementptr inbounds i8, i8* %7, i32 40
  %9 = bitcast i8* %8 to %struct.global_State*
  %R4138 = call { [184 x i8] }** @sweeplist(%struct.lua_State* %ARG1, %struct.global_State* %9, i64 -3)
  store i32 0, i32* %0
  br label %L709

L709:                                             ; preds = %L710, %L708
  %10 = load i32, i32* %0
  %11 = bitcast %struct.global_State* %load_target to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 12
  %14 = bitcast i8* %13 to i32*
  %load_target1 = load i32, i32* %14
  %R4142 = icmp slt i32 %10, %load_target1
  %R41422 = zext i1 %R4142 to i32
  %cond = icmp ne i32 %R41422, 0
  br i1 %cond, label %L710, label %L711

L710:                                             ; preds = %L709
  %15 = bitcast %struct.global_State* %load_target to { [184 x i8] }***
  %16 = bitcast { [184 x i8] }*** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = bitcast i8* %17 to { [184 x i8] }***
  %load_target3 = load { [184 x i8] }**, { [184 x i8] }*** %18
  %R4147 = sext i32 %10 to i64
  %R4148 = mul i64 %R4147, 8
  %19 = bitcast { [184 x i8] }** %load_target3 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %R4148
  %21 = bitcast i8* %20 to { [184 x i8] }**
  %R4150 = call { [184 x i8] }** @sweeplist(%struct.lua_State* %ARG1, { [184 x i8] }** %21, i64 -3)
  %R4152 = add i32 %10, 1
  store i32 %R4152, i32* %0
  br label %L709

L711:                                             ; preds = %L709
  ret void
}

define internal void @markmt(%struct.global_State* %ARG1) {
L712:
  %0 = alloca i32
  store i32 0, i32* %0
  br label %L713

L713:                                             ; preds = %L717, %L712
  %1 = load i32, i32* %0
  %R4154 = icmp slt i32 %1, 9
  %R41541 = zext i1 %R4154 to i32
  %cond = icmp ne i32 %R41541, 0
  br i1 %cond, label %L714, label %L718

L714:                                             ; preds = %L713
  %2 = bitcast %struct.global_State* %ARG1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i32 224
  %4 = bitcast i8* %3 to %struct.global_State*
  %R4158 = sext i32 %1 to i64
  %R4159 = mul i64 %R4158, 8
  %5 = bitcast %struct.global_State* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 %R4159
  %7 = bitcast i8* %6 to %struct.global_State*
  %8 = bitcast %struct.global_State* %7 to %struct.Table**
  %9 = bitcast %struct.Table** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to %struct.Table**
  %load_target = load %struct.Table*, %struct.Table** %11
  %cond2 = icmp ne %struct.Table* %load_target, null
  br i1 %cond2, label %L715, label %L717

L715:                                             ; preds = %L714
  %R4169 = bitcast %struct.Table* %load_target to { [184 x i8] }*
  %12 = bitcast { [184 x i8] }* %R4169 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 9
  %load_target3 = load i8, i8* %13
  %R4171 = zext i8 %load_target3 to i32
  %R4172 = and i32 %R4171, 3
  %cond4 = icmp ne i32 %R4172, 0
  br i1 %cond4, label %L716, label %L717

L716:                                             ; preds = %L715
  %R4181 = bitcast %struct.Table* %load_target to { [184 x i8] }*
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %R4181)
  br label %L717

L717:                                             ; preds = %L716, %L715, %L714
  %R4183 = add i32 %1, 1
  store i32 %R4183, i32* %0
  br label %L713

L718:                                             ; preds = %L713
  ret void
}

define internal void @markroot(%struct.lua_State* %ARG1) {
L719:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 56
  %7 = bitcast i8* %6 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %7
  %8 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 64
  %11 = bitcast i8* %10 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %11
  %12 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 72
  %15 = bitcast i8* %14 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %15
  %16 = bitcast %struct.global_State* %load_target to %struct.lua_State**
  %17 = bitcast %struct.lua_State** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 176
  %19 = bitcast i8* %18 to %struct.lua_State**
  %load_target1 = load %struct.lua_State*, %struct.lua_State** %19
  %R4191 = bitcast %struct.lua_State* %load_target1 to { [184 x i8] }*
  %20 = bitcast { [184 x i8] }* %R4191 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 9
  %load_target2 = load i8, i8* %21
  %R4193 = zext i8 %load_target2 to i32
  %R4194 = and i32 %R4193, 3
  %cond = icmp ne i32 %R4194, 0
  br i1 %cond, label %L720, label %L721

L720:                                             ; preds = %L719
  %R4198 = bitcast %struct.lua_State* %load_target1 to { [184 x i8] }*
  call void @reallymarkobject(%struct.global_State* %load_target, { [184 x i8] }* %R4198)
  br label %L721

L721:                                             ; preds = %L720, %L719
  %22 = bitcast %struct.global_State* %load_target to %struct.lua_State**
  %23 = bitcast %struct.lua_State** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 176
  %25 = bitcast i8* %24 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %25
  %26 = bitcast %struct.lua_State* %load_target3 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 128
  %29 = bitcast i8* %28 to i32*
  %load_target4 = load i32, i32* %29
  %R4202 = icmp sge i32 %load_target4, 4
  %R42025 = zext i1 %R4202 to i32
  %cond6 = icmp ne i32 %R42025, 0
  br i1 %cond6, label %L722, label %L724

L722:                                             ; preds = %L721
  %30 = bitcast %struct.lua_State* %load_target3 to { [184 x i8] }**
  %31 = bitcast { [184 x i8] }** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 120
  %33 = bitcast i8* %32 to { [184 x i8] }**
  %load_target7 = load { [184 x i8] }*, { [184 x i8] }** %33
  %34 = bitcast { [184 x i8] }* %load_target7 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 9
  %load_target8 = load i8, i8* %35
  %R4207 = zext i8 %load_target8 to i32
  %R4208 = and i32 %R4207, 3
  %cond9 = icmp ne i32 %R4208, 0
  br i1 %cond9, label %L723, label %L724

L723:                                             ; preds = %L722
  call void @reallymarkobject(%struct.global_State* %load_target, { [184 x i8] }* %load_target7)
  br label %L724

L724:                                             ; preds = %L723, %L722, %L721
  %36 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %37 = bitcast %struct.global_State** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 32
  %39 = bitcast i8* %38 to %struct.global_State**
  %load_target10 = load %struct.global_State*, %struct.global_State** %39
  %40 = bitcast %struct.global_State* %load_target10 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 168
  %43 = bitcast i8* %42 to i32*
  %load_target11 = load i32, i32* %43
  %R4216 = icmp sge i32 %load_target11, 4
  %R421612 = zext i1 %R4216 to i32
  %cond13 = icmp ne i32 %R421612, 0
  br i1 %cond13, label %L725, label %L727

L725:                                             ; preds = %L724
  %44 = bitcast %struct.global_State* %load_target10 to { [184 x i8] }**
  %45 = bitcast { [184 x i8] }** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 160
  %47 = bitcast i8* %46 to { [184 x i8] }**
  %load_target14 = load { [184 x i8] }*, { [184 x i8] }** %47
  %48 = bitcast { [184 x i8] }* %load_target14 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 9
  %load_target15 = load i8, i8* %49
  %R4221 = zext i8 %load_target15 to i32
  %R4222 = and i32 %R4221, 3
  %cond16 = icmp ne i32 %R4222, 0
  br i1 %cond16, label %L726, label %L727

L726:                                             ; preds = %L725
  call void @reallymarkobject(%struct.global_State* %load_target, { [184 x i8] }* %load_target14)
  br label %L727

L727:                                             ; preds = %L726, %L725, %L724
  call void @markmt(%struct.global_State* %load_target)
  %50 = bitcast %struct.global_State* %load_target to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 33
  store i8 1, i8* %51
  ret void
}

define internal void @remarkupvals(%struct.global_State* %ARG1) {
L728:
  %0 = alloca %struct.UpVal*
  %1 = bitcast %struct.global_State* %ARG1 to %struct.UpVal**
  %2 = bitcast %struct.UpVal** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 216
  %4 = bitcast i8* %3 to %struct.UpVal**
  %load_target = load %struct.UpVal*, %struct.UpVal** %4
  store %struct.UpVal* %load_target, %struct.UpVal** %0
  br label %L729

L729:                                             ; preds = %L735, %L728
  %5 = load %struct.UpVal*, %struct.UpVal** %0
  %6 = bitcast %struct.global_State* %ARG1 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i32 184
  %8 = bitcast i8* %7 to %struct.global_State*
  %R4234 = icmp ne %struct.UpVal* %5, %struct.global_State* %8
  %R42341 = zext i1 %R4234 to i32
  %cond = icmp ne i32 %R42341, 0
  br i1 %cond, label %L730, label %L736

L730:                                             ; preds = %L729
  %R4236 = bitcast %struct.UpVal* %5 to { [184 x i8] }*
  %9 = bitcast { [184 x i8] }* %R4236 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 9
  %load_target2 = load i8, i8* %10
  %R4238 = zext i8 %load_target2 to i32
  %R4239 = and i32 %R4238, 4
  %cond3 = icmp ne i32 %R4239, 0
  br i1 %cond3, label %L735, label %L731

L731:                                             ; preds = %L730
  %R4244 = and i32 %R4238, 3
  %cond4 = icmp ne i32 %R4244, 0
  br i1 %cond4, label %L735, label %L732

L732:                                             ; preds = %L731
  %11 = bitcast %struct.UpVal* %5 to %struct.lua_TValue**
  %12 = bitcast %struct.lua_TValue** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %14
  %15 = bitcast %struct.lua_TValue* %load_target5 to i32*
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i32*
  %load_target6 = load i32, i32* %18
  %R4248 = icmp sge i32 %load_target6, 4
  %R42487 = zext i1 %R4248 to i32
  %cond8 = icmp ne i32 %R42487, 0
  br i1 %cond8, label %L733, label %L735

L733:                                             ; preds = %L732
  %19 = bitcast %struct.lua_TValue* %load_target5 to { [184 x i8] }**
  %20 = bitcast { [184 x i8] }** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to { [184 x i8] }**
  %load_target9 = load { [184 x i8] }*, { [184 x i8] }** %22
  %23 = bitcast { [184 x i8] }* %load_target9 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 9
  %load_target10 = load i8, i8* %24
  %R4253 = zext i8 %load_target10 to i32
  %R4254 = and i32 %R4253, 3
  %cond11 = icmp ne i32 %R4254, 0
  br i1 %cond11, label %L734, label %L735

L734:                                             ; preds = %L733
  call void @reallymarkobject(%struct.global_State* %ARG1, { [184 x i8] }* %load_target9)
  br label %L735

L735:                                             ; preds = %L734, %L733, %L732, %L731, %L730
  %25 = bitcast %struct.UpVal* %5 to %struct.UpVal**
  %26 = bitcast %struct.UpVal** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 32
  %28 = bitcast i8* %27 to %struct.UpVal**
  %load_target12 = load %struct.UpVal*, %struct.UpVal** %28
  store %struct.UpVal* %load_target12, %struct.UpVal** %0
  br label %L729

L736:                                             ; preds = %L729
  ret void
}

define internal void @atomic(%struct.lua_State* %ARG1) {
L737:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  call void @remarkupvals(%struct.global_State* %load_target)
  %R4265 = call i64 @propagateall(%struct.global_State* %load_target)
  %4 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 72
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %8 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 56
  %11 = bitcast i8* %10 to { [184 x i8] }**
  store { [184 x i8] }* %load_target1, { [184 x i8] }** %11
  %12 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 72
  %15 = bitcast i8* %14 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %15
  %R4271 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }*
  %16 = bitcast { [184 x i8] }* %R4271 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 9
  %load_target2 = load i8, i8* %17
  %R4273 = zext i8 %load_target2 to i32
  %R4274 = and i32 %R4273, 3
  %cond = icmp ne i32 %R4274, 0
  br i1 %cond, label %L738, label %L739

L738:                                             ; preds = %L737
  call void @reallymarkobject(%struct.global_State* %load_target, { [184 x i8] }* %R4271)
  br label %L739

L739:                                             ; preds = %L738, %L737
  call void @markmt(%struct.global_State* %load_target)
  %R4280 = call i64 @propagateall(%struct.global_State* %load_target)
  %18 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %19 = bitcast { [184 x i8] }** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 64
  %21 = bitcast i8* %20 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %21
  %22 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %23 = bitcast { [184 x i8] }** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 56
  %25 = bitcast i8* %24 to { [184 x i8] }**
  store { [184 x i8] }* %load_target3, { [184 x i8] }** %25
  %26 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %27 = bitcast { [184 x i8] }** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 64
  %29 = bitcast i8* %28 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %29
  %R4286 = call i64 @propagateall(%struct.global_State* %load_target)
  %R4288 = call i64 @luaC_separateudata(%struct.lua_State* %ARG1, i32 0)
  call void @marktmu(%struct.global_State* %load_target)
  %R4291 = call i64 @propagateall(%struct.global_State* %load_target)
  %R4294 = add i64 %R4288, %R4291
  %30 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %31 = bitcast { [184 x i8] }** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 72
  %33 = bitcast i8* %32 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %33
  call void @cleartable({ [184 x i8] }* %load_target4)
  %34 = bitcast %struct.global_State* %load_target to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 32
  %load_target5 = load i8, i8* %35
  %R4300 = zext i8 %load_target5 to i32
  %R4301 = xor i32 %R4300, 3
  %R4302 = trunc i32 %R4301 to i8
  %36 = bitcast %struct.global_State* %load_target to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 32
  store i8 %R4302, i8* %37
  %38 = bitcast %struct.global_State* %load_target to i32*
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 36
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41
  %42 = bitcast %struct.global_State* %load_target to i8*
  %43 = getelementptr inbounds i8, i8* %42, i32 40
  %44 = bitcast i8* %43 to %struct.global_State*
  %45 = bitcast %struct.global_State* %load_target to { [184 x i8] }***
  %46 = bitcast { [184 x i8] }*** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 48
  %48 = bitcast i8* %47 to { [184 x i8] }***
  store %struct.global_State* %44, { [184 x i8] }*** %48
  %49 = bitcast %struct.global_State* %load_target to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 33
  store i8 2, i8* %50
  %51 = bitcast %struct.global_State* %load_target to i64*
  %52 = bitcast i64* %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 120
  %54 = bitcast i8* %53 to i64*
  %load_target6 = load i64, i64* %54
  %R4312 = sub i64 %load_target6, %R4294
  %55 = bitcast %struct.global_State* %load_target to i64*
  %56 = bitcast i64* %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 128
  %58 = bitcast i8* %57 to i64*
  store i64 %R4312, i64* %58
  ret void
}

define internal i64 @singlestep(%struct.lua_State* %ARG1) {
L740:
  %0 = alloca i64
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %2 = bitcast %struct.global_State** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %4
  %5 = bitcast %struct.global_State* %load_target to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 33
  %load_target1 = load i8, i8* %6
  switch i8 %load_target1, label %L756 [
    i32 0, label %L741
    i32 1, label %L742
    i32 2, label %L745
    i32 3, label %L748
    i32 4, label %L751
  ]

L741:                                             ; preds = %L740
  call void @markroot(%struct.lua_State* %ARG1)
  store i64 0, i64* %0
  br label %L757

L742:                                             ; preds = %L740
  %7 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %8 = bitcast { [184 x i8] }** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 56
  %10 = bitcast i8* %9 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %10
  %cond = icmp ne { [184 x i8] }* %load_target2, null
  br i1 %cond, label %L743, label %L744

L743:                                             ; preds = %L742
  %R4323 = call i64 @propagatemark(%struct.global_State* %load_target)
  store i64 %R4323, i64* %0
  br label %L757

L744:                                             ; preds = %L742
  call void @atomic(%struct.lua_State* %ARG1)
  store i64 0, i64* %0
  br label %L757

L745:                                             ; preds = %L740
  %11 = bitcast %struct.global_State* %load_target to i64*
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 120
  %14 = bitcast i8* %13 to i64*
  %load_target3 = load i64, i64* %14
  %15 = bitcast %struct.global_State* %load_target to { [184 x i8] }***
  %16 = bitcast { [184 x i8] }*** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = bitcast i8* %17 to { [184 x i8] }***
  %load_target4 = load { [184 x i8] }**, { [184 x i8] }*** %18
  %19 = bitcast %struct.global_State* %load_target to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 36
  %22 = bitcast i8* %21 to i32*
  %load_target5 = load i32, i32* %22
  %R4332 = add i32 %load_target5, 1
  %23 = bitcast %struct.global_State* %load_target to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 36
  %26 = bitcast i8* %25 to i32*
  store i32 %R4332, i32* %26
  %R4333 = sext i32 %load_target5 to i64
  %R4334 = mul i64 %R4333, 8
  %27 = bitcast { [184 x i8] }** %load_target4 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 %R4334
  %29 = bitcast i8* %28 to { [184 x i8] }**
  %R4336 = call { [184 x i8] }** @sweeplist(%struct.lua_State* %ARG1, { [184 x i8] }** %29, i64 -3)
  %30 = bitcast %struct.global_State* %load_target to i32*
  %31 = bitcast i32* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 36
  %33 = bitcast i8* %32 to i32*
  %load_target6 = load i32, i32* %33
  %34 = bitcast %struct.global_State* %load_target to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 12
  %37 = bitcast i8* %36 to i32*
  %load_target7 = load i32, i32* %37
  %R4341 = icmp sge i32 %load_target6, %load_target7
  %R43418 = zext i1 %R4341 to i32
  %cond9 = icmp ne i32 %R43418, 0
  br i1 %cond9, label %L746, label %L747

L746:                                             ; preds = %L745
  %38 = bitcast %struct.global_State* %load_target to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 33
  store i8 3, i8* %39
  br label %L747

L747:                                             ; preds = %L746, %L745
  %40 = bitcast %struct.global_State* %load_target to i64*
  %41 = bitcast i64* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 120
  %43 = bitcast i8* %42 to i64*
  %load_target10 = load i64, i64* %43
  %R4346 = sub i64 %load_target3, %load_target10
  %44 = bitcast %struct.global_State* %load_target to i64*
  %45 = bitcast i64* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 128
  %47 = bitcast i8* %46 to i64*
  %load_target11 = load i64, i64* %47
  %R4350 = sub i64 %load_target11, %R4346
  %48 = bitcast %struct.global_State* %load_target to i64*
  %49 = bitcast i64* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 128
  %51 = bitcast i8* %50 to i64*
  store i64 %R4350, i64* %51
  store i64 10, i64* %0
  br label %L757

L748:                                             ; preds = %L740
  %52 = bitcast %struct.global_State* %load_target to i64*
  %53 = bitcast i64* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 120
  %55 = bitcast i8* %54 to i64*
  %load_target12 = load i64, i64* %55
  %56 = bitcast %struct.global_State* %load_target to { [184 x i8] }***
  %57 = bitcast { [184 x i8] }*** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 48
  %59 = bitcast i8* %58 to { [184 x i8] }***
  %load_target13 = load { [184 x i8] }**, { [184 x i8] }*** %59
  %R4357 = call { [184 x i8] }** @sweeplist(%struct.lua_State* %ARG1, { [184 x i8] }** %load_target13, i64 40)
  %60 = bitcast %struct.global_State* %load_target to { [184 x i8] }***
  %61 = bitcast { [184 x i8] }*** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 48
  %63 = bitcast i8* %62 to { [184 x i8] }***
  store { [184 x i8] }** %R4357, { [184 x i8] }*** %63
  %64 = bitcast { [184 x i8] }** %R4357 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 0
  %66 = bitcast i8* %65 to { [184 x i8] }**
  %load_target14 = load { [184 x i8] }*, { [184 x i8] }** %66
  %cond15 = icmp ne { [184 x i8] }* %load_target14, null
  br i1 %cond15, label %L750, label %L749

L749:                                             ; preds = %L748
  call void @checkSizes(%struct.lua_State* %ARG1)
  %67 = bitcast %struct.global_State* %load_target to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 33
  store i8 4, i8* %68
  br label %L750

L750:                                             ; preds = %L749, %L748
  %69 = bitcast %struct.global_State* %load_target to i64*
  %70 = bitcast i64* %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 120
  %72 = bitcast i8* %71 to i64*
  %load_target16 = load i64, i64* %72
  %R4368 = sub i64 %load_target12, %load_target16
  %73 = bitcast %struct.global_State* %load_target to i64*
  %74 = bitcast i64* %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 128
  %76 = bitcast i8* %75 to i64*
  %load_target17 = load i64, i64* %76
  %R4372 = sub i64 %load_target17, %R4368
  %77 = bitcast %struct.global_State* %load_target to i64*
  %78 = bitcast i64* %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 128
  %80 = bitcast i8* %79 to i64*
  store i64 %R4372, i64* %80
  store i64 400, i64* %0
  br label %L757

L751:                                             ; preds = %L740
  %81 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %82 = bitcast { [184 x i8] }** %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 80
  %84 = bitcast i8* %83 to { [184 x i8] }**
  %load_target18 = load { [184 x i8] }*, { [184 x i8] }** %84
  %cond19 = icmp ne { [184 x i8] }* %load_target18, null
  br i1 %cond19, label %L752, label %L755

L752:                                             ; preds = %L751
  call void @GCTM(%struct.lua_State* %ARG1)
  %85 = bitcast %struct.global_State* %load_target to i64*
  %86 = bitcast i64* %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 128
  %88 = bitcast i8* %87 to i64*
  %load_target20 = load i64, i64* %88
  %R4379 = icmp ugt i64 %load_target20, 100
  %R437921 = zext i1 %R4379 to i32
  %cond22 = icmp ne i32 %R437921, 0
  br i1 %cond22, label %L753, label %L754

L753:                                             ; preds = %L752
  %R4383 = add i64 %load_target20, -100
  %89 = bitcast %struct.global_State* %load_target to i64*
  %90 = bitcast i64* %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 128
  %92 = bitcast i8* %91 to i64*
  store i64 %R4383, i64* %92
  br label %L754

L754:                                             ; preds = %L753, %L752
  store i64 100, i64* %0
  br label %L757

L755:                                             ; preds = %L751
  %93 = bitcast %struct.global_State* %load_target to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 33
  store i8 0, i8* %94
  %95 = bitcast %struct.global_State* %load_target to i64*
  %96 = bitcast i64* %95 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 136
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98
  store i64 0, i64* %0
  br label %L757

L756:                                             ; preds = %L740
  store i64 0, i64* %0
  br label %L757

L757:                                             ; preds = %L756, %L755, %L754, %L750, %L747, %L744, %L743, %L741
  %99 = load i64, i64* %0
  ret i64 %99
}

define internal void @luaC_step.30(%struct.lua_State* %ARG1) {
L758:
  %0 = alloca i64
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %2 = bitcast %struct.global_State** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %4
  %5 = bitcast %struct.global_State* %load_target to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 148
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R4392 = mul i32 %load_target1, 10
  %R4393 = zext i32 %R4392 to i64
  store i64 %R4393, i64* %0
  %cond = icmp ne i32 %R4392, 0
  br i1 %cond, label %L760, label %L759

L759:                                             ; preds = %L758
  store i64 9223372036854775806, i64* %0
  br label %L760

L760:                                             ; preds = %L759, %L758
  %9 = bitcast %struct.global_State* %load_target to i64*
  %10 = bitcast i64* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 120
  %12 = bitcast i8* %11 to i64*
  %load_target2 = load i64, i64* %12
  %13 = bitcast %struct.global_State* %load_target to i64*
  %14 = bitcast i64* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 112
  %16 = bitcast i8* %15 to i64*
  %load_target3 = load i64, i64* %16
  %R4400 = sub i64 %load_target2, %load_target3
  %17 = bitcast %struct.global_State* %load_target to i64*
  %18 = bitcast i64* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 136
  %20 = bitcast i8* %19 to i64*
  %load_target4 = load i64, i64* %20
  %R4404 = add i64 %load_target4, %R4400
  %21 = bitcast %struct.global_State* %load_target to i64*
  %22 = bitcast i64* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 136
  %24 = bitcast i8* %23 to i64*
  store i64 %R4404, i64* %24
  br label %L761

L761:                                             ; preds = %L762, %L760
  %R4407 = call i64 @singlestep(%struct.lua_State* %ARG1)
  %25 = load i64, i64* %0
  %R4410 = sub i64 %25, %R4407
  %26 = bitcast %struct.global_State* %load_target to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 33
  %load_target5 = load i8, i8* %27
  store i64 %R4410, i64* %0
  %cond6 = icmp ne i8 %load_target5, 0
  br i1 %cond6, label %L762, label %L767

L762:                                             ; preds = %L761
  %R4417 = icmp sgt i64 %R4410, 0
  %R44177 = zext i1 %R4417 to i32
  %cond8 = icmp ne i32 %R44177, 0
  br i1 %cond8, label %L761, label %L763

L763:                                             ; preds = %L762
  %cond9 = icmp ne i8 %load_target5, 0
  br i1 %cond9, label %L764, label %L767

L764:                                             ; preds = %L763
  %28 = bitcast %struct.global_State* %load_target to i64*
  %29 = bitcast i64* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 136
  %31 = bitcast i8* %30 to i64*
  %load_target10 = load i64, i64* %31
  %R4424 = icmp ult i64 %load_target10, 1024
  %R442411 = zext i1 %R4424 to i32
  %cond12 = icmp ne i32 %R442411, 0
  br i1 %cond12, label %L765, label %L766

L765:                                             ; preds = %L764
  %32 = bitcast %struct.global_State* %load_target to i64*
  %33 = bitcast i64* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 120
  %35 = bitcast i8* %34 to i64*
  %load_target13 = load i64, i64* %35
  %R4427 = add i64 %load_target13, 1024
  %36 = bitcast %struct.global_State* %load_target to i64*
  %37 = bitcast i64* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 112
  %39 = bitcast i8* %38 to i64*
  store i64 %R4427, i64* %39
  br label %L768

L766:                                             ; preds = %L764
  %R4432 = add i64 %load_target10, -1024
  %40 = bitcast %struct.global_State* %load_target to i64*
  %41 = bitcast i64* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 136
  %43 = bitcast i8* %42 to i64*
  store i64 %R4432, i64* %43
  %44 = bitcast %struct.global_State* %load_target to i64*
  %45 = bitcast i64* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 120
  %47 = bitcast i8* %46 to i64*
  %load_target14 = load i64, i64* %47
  %48 = bitcast %struct.global_State* %load_target to i64*
  %49 = bitcast i64* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 112
  %51 = bitcast i8* %50 to i64*
  store i64 %load_target14, i64* %51
  br label %L768

L767:                                             ; preds = %L763, %L761
  %52 = bitcast %struct.global_State* %load_target to i64*
  %53 = bitcast i64* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 128
  %55 = bitcast i8* %54 to i64*
  %load_target15 = load i64, i64* %55
  %R4439 = udiv i64 %load_target15, 100
  %56 = bitcast %struct.global_State* %load_target to i32*
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 144
  %59 = bitcast i8* %58 to i32*
  %load_target16 = load i32, i32* %59
  %R4442 = sext i32 %load_target16 to i64
  %R4443 = mul i64 %R4439, %R4442
  %60 = bitcast %struct.global_State* %load_target to i64*
  %61 = bitcast i64* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 112
  %63 = bitcast i8* %62 to i64*
  store i64 %R4443, i64* %63
  br label %L768

L768:                                             ; preds = %L767, %L766, %L765
  ret void
}

define internal void @luaC_barrierf(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2, { [184 x i8] }* %ARG3) {
L769:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 33
  %load_target1 = load i8, i8* %5
  %R4449 = zext i8 %load_target1 to i32
  %R4450 = icmp eq i32 %R4449, 1
  %R44502 = zext i1 %R4450 to i32
  %cond = icmp ne i32 %R44502, 0
  br i1 %cond, label %L770, label %L771

L770:                                             ; preds = %L769
  call void @reallymarkobject(%struct.global_State* %load_target, { [184 x i8] }* %ARG3)
  br label %L772

L771:                                             ; preds = %L769
  %6 = bitcast { [184 x i8] }* %ARG2 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 9
  %load_target3 = load i8, i8* %7
  %R4455 = zext i8 %load_target3 to i32
  %R4456 = and i32 %R4455, 248
  %8 = bitcast %struct.global_State* %load_target to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %load_target4 = load i8, i8* %9
  %R4459 = zext i8 %load_target4 to i32
  %R4460 = and i32 %R4459, 3
  %R4463 = or i32 %R4456, %R4460
  %R4464 = trunc i32 %R4463 to i8
  %10 = bitcast { [184 x i8] }* %ARG2 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 9
  store i8 %R4464, i8* %11
  br label %L772

L772:                                             ; preds = %L771, %L770
  ret void
}

define internal void @luaC_barrierback.31(%struct.lua_State* %ARG1, %struct.Table* %ARG2) {
L773:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %R4469 = bitcast %struct.Table* %ARG2 to { [184 x i8] }*
  %4 = bitcast { [184 x i8] }* %R4469 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 9
  %load_target1 = load i8, i8* %5
  %R4472 = zext i8 %load_target1 to i32
  %R4473 = and i32 %R4472, 251
  %R4474 = trunc i32 %R4473 to i8
  %6 = bitcast { [184 x i8] }* %R4469 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 %R4474, i8* %7
  %8 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 64
  %11 = bitcast i8* %10 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %11
  %12 = bitcast %struct.Table* %ARG2 to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 48
  %15 = bitcast i8* %14 to { [184 x i8] }**
  store { [184 x i8] }* %load_target2, { [184 x i8] }** %15
  %16 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 64
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %R4469, { [184 x i8] }** %19
  ret void
}

define internal void @luaC_link.32(%struct.lua_State* %ARG1, { [184 x i8] }* %ARG2, i8 %ARG3) {
L774:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %8 = bitcast { [184 x i8] }* %ARG2 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  store { [184 x i8] }* %load_target1, { [184 x i8] }** %11
  %12 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 40
  %15 = bitcast i8* %14 to { [184 x i8] }**
  store { [184 x i8] }* %ARG2, { [184 x i8] }** %15
  %16 = bitcast %struct.global_State* %load_target to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 32
  %load_target2 = load i8, i8* %17
  %R4489 = zext i8 %load_target2 to i32
  %R4490 = and i32 %R4489, 3
  %18 = bitcast { [184 x i8] }* %ARG2 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 9
  store i32 %R4490, i8* %19
  %20 = bitcast { [184 x i8] }* %ARG2 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  store i8 %ARG3, i8* %21
  ret void
}

define internal void @luaC_linkupval.33(%struct.lua_State* %ARG1, %struct.UpVal* %ARG2) {
L775:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %R4498 = bitcast %struct.UpVal* %ARG2 to { [184 x i8] }*
  %4 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %8 = bitcast { [184 x i8] }* %R4498 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  store { [184 x i8] }* %load_target1, { [184 x i8] }** %11
  %12 = bitcast %struct.global_State* %load_target to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 40
  %15 = bitcast i8* %14 to { [184 x i8] }**
  store { [184 x i8] }* %R4498, { [184 x i8] }** %15
  %16 = bitcast { [184 x i8] }* %R4498 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 9
  %load_target2 = load i8, i8* %17
  %R4506 = zext i8 %load_target2 to i32
  %R4507 = and i32 %R4506, 4
  %cond = icmp ne i32 %R4507, 0
  br i1 %cond, label %L783, label %L776

L776:                                             ; preds = %L775
  %R4511 = and i32 %R4506, 3
  %cond3 = icmp ne i32 %R4511, 0
  br i1 %cond3, label %L783, label %L777

L777:                                             ; preds = %L776
  %18 = bitcast %struct.global_State* %load_target to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 33
  %load_target4 = load i8, i8* %19
  %R4514 = zext i8 %load_target4 to i32
  %R4515 = icmp eq i32 %R4514, 1
  %R45155 = zext i1 %R4515 to i32
  %cond6 = icmp ne i32 %R45155, 0
  br i1 %cond6, label %L778, label %L782

L778:                                             ; preds = %L777
  %R4519 = or i32 %R4506, 4
  %R4520 = trunc i32 %R4519 to i8
  %20 = bitcast { [184 x i8] }* %R4498 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 9
  store i8 %R4520, i8* %21
  %22 = bitcast %struct.UpVal* %ARG2 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %25
  %26 = bitcast %struct.lua_TValue* %load_target7 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to i32*
  %load_target8 = load i32, i32* %29
  %R4524 = icmp sge i32 %load_target8, 4
  %R45249 = zext i1 %R4524 to i32
  %cond10 = icmp ne i32 %R45249, 0
  br i1 %cond10, label %L779, label %L783

L779:                                             ; preds = %L778
  %30 = bitcast %struct.lua_TValue* %load_target7 to { [184 x i8] }**
  %31 = bitcast { [184 x i8] }** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %33
  %34 = bitcast { [184 x i8] }* %load_target11 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 9
  %load_target12 = load i8, i8* %35
  %R4529 = zext i8 %load_target12 to i32
  %R4530 = and i32 %R4529, 3
  %cond13 = icmp ne i32 %R4530, 0
  br i1 %cond13, label %L780, label %L783

L780:                                             ; preds = %L779
  %R4534 = zext i8 %R4520 to i32
  %R4535 = and i32 %R4534, 4
  %cond14 = icmp ne i32 %R4535, 0
  br i1 %cond14, label %L781, label %L783

L781:                                             ; preds = %L780
  call void @luaC_barrierf(%struct.lua_State* %ARG1, { [184 x i8] }* %R4498, { [184 x i8] }* %load_target11)
  br label %L783

L782:                                             ; preds = %L777
  %R4545 = and i32 %R4506, 248
  %36 = bitcast %struct.global_State* %load_target to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 32
  %load_target15 = load i8, i8* %37
  %R4548 = zext i8 %load_target15 to i32
  %R4549 = and i32 %R4548, 3
  %R4552 = or i32 %R4545, %R4549
  %R4553 = trunc i32 %R4552 to i8
  %38 = bitcast { [184 x i8] }* %R4498 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 9
  store i8 %R4553, i8* %39
  br label %L783

L783:                                             ; preds = %L782, %L781, %L780, %L779, %L778, %L776, %L775
  ret void
}

define internal void @stack_init(%struct.lua_State* %ARG1, %struct.lua_State* %ARG2) {
L784:
  %R4556 = call i8* @luaM_realloc_(%struct.lua_State* %ARG2, i8* null, i64 0, i64 320)
  %R4557 = bitcast i8* %R4556 to %struct.CallInfo*
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1 = bitcast %struct.CallInfo** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 80
  %3 = bitcast i8* %2 to %struct.CallInfo**
  store %struct.CallInfo* %R4557, %struct.CallInfo** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %5 = bitcast %struct.CallInfo** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to %struct.CallInfo**
  store %struct.CallInfo* %R4557, %struct.CallInfo** %7
  %8 = bitcast %struct.lua_State* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 92
  %11 = bitcast i8* %10 to i32*
  store i32 8, i32* %11
  %12 = bitcast %struct.CallInfo* %R4557 to i8*
  %13 = getelementptr inbounds i8, i8* %12, %struct.CallInfo* inttoptr (i64 280 to %struct.CallInfo*)
  %14 = bitcast i8* %13 to %struct.CallInfo*
  %15 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %16 = bitcast %struct.CallInfo** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 72
  %18 = bitcast i8* %17 to %struct.CallInfo**
  store %struct.CallInfo* %14, %struct.CallInfo** %18
  %R4573 = call i8* @luaM_realloc_(%struct.lua_State* %ARG2, i8* null, i64 0, i64 720)
  %R4574 = bitcast i8* %R4573 to %struct.lua_TValue*
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %20 = bitcast %struct.lua_TValue** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 64
  %22 = bitcast i8* %21 to %struct.lua_TValue**
  store %struct.lua_TValue* %R4574, %struct.lua_TValue** %22
  %23 = bitcast %struct.lua_State* %ARG1 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 88
  %26 = bitcast i8* %25 to i32*
  store i32 45, i32* %26
  %27 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %28 = bitcast %struct.lua_TValue** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to %struct.lua_TValue**
  store %struct.lua_TValue* %R4574, %struct.lua_TValue** %30
  %31 = bitcast %struct.lua_TValue* %R4574 to i8*
  %32 = getelementptr inbounds i8, i8* %31, %struct.lua_TValue* inttoptr (i64 624 to %struct.lua_TValue*)
  %33 = bitcast i8* %32 to %struct.lua_TValue*
  %34 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %35 = bitcast %struct.lua_TValue** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 56
  %37 = bitcast i8* %36 to %struct.lua_TValue**
  store %struct.lua_TValue* %33, %struct.lua_TValue** %37
  %38 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %39 = bitcast %struct.CallInfo** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 40
  %41 = bitcast i8* %40 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %41
  %42 = bitcast %struct.CallInfo* %load_target to %struct.lua_TValue**
  %43 = bitcast %struct.lua_TValue** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = bitcast i8* %44 to %struct.lua_TValue**
  store %struct.lua_TValue* %R4574, %struct.lua_TValue** %45
  %46 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %47 = bitcast %struct.lua_TValue** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 16
  %49 = bitcast i8* %48 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %49
  %50 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %51 = getelementptr inbounds i8, i8* %50, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %52 = bitcast i8* %51 to %struct.lua_TValue*
  %53 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %54 = bitcast %struct.lua_TValue** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 16
  %56 = bitcast i8* %55 to %struct.lua_TValue**
  store %struct.lua_TValue* %52, %struct.lua_TValue** %56
  %57 = bitcast %struct.lua_TValue* %load_target1 to i32*
  %58 = bitcast i32* %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 0, i32* %60
  %61 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %62 = bitcast %struct.lua_TValue** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 16
  %64 = bitcast i8* %63 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %64
  %65 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %66 = bitcast %struct.CallInfo** %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 40
  %68 = bitcast i8* %67 to %struct.CallInfo**
  %load_target3 = load %struct.CallInfo*, %struct.CallInfo** %68
  %69 = bitcast %struct.CallInfo* %load_target3 to %struct.lua_TValue**
  %70 = bitcast %struct.lua_TValue** %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 0
  %72 = bitcast i8* %71 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target2, %struct.lua_TValue** %72
  %73 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %74 = bitcast %struct.lua_TValue** %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 24
  %76 = bitcast i8* %75 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target2, %struct.lua_TValue** %76
  %77 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %78 = bitcast %struct.lua_TValue** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 16
  %80 = bitcast i8* %79 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %80
  %81 = bitcast %struct.lua_TValue* %load_target4 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 320
  %83 = bitcast i8* %82 to %struct.lua_TValue*
  %84 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %85 = bitcast %struct.CallInfo** %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 40
  %87 = bitcast i8* %86 to %struct.CallInfo**
  %load_target5 = load %struct.CallInfo*, %struct.CallInfo** %87
  %88 = bitcast %struct.CallInfo* %load_target5 to %struct.lua_TValue**
  %89 = bitcast %struct.lua_TValue** %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 16
  %91 = bitcast i8* %90 to %struct.lua_TValue**
  store %struct.lua_TValue* %83, %struct.lua_TValue** %91
  ret void
}

define internal void @freestack(%struct.lua_State* %ARG1, %struct.lua_State* %ARG2) {
L785:
  %0 = bitcast %struct.lua_State* %ARG2 to %struct.CallInfo**
  %1 = bitcast %struct.CallInfo** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 80
  %3 = bitcast i8* %2 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %3
  %R4610 = bitcast %struct.CallInfo* %load_target to i8*
  %4 = bitcast %struct.lua_State* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 92
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R4613 = sext i32 %load_target1 to i64
  %R4614 = mul i64 %R4613, 40
  %R4615 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R4610, i64 %R4614, i64 0)
  %8 = bitcast %struct.lua_State* %ARG2 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 64
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %R4619 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %12 = bitcast %struct.lua_State* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 88
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  %R4622 = sext i32 %load_target3 to i64
  %R4623 = mul i64 %R4622, 16
  %R4624 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R4619, i64 %R4623, i64 0)
  ret void
}

define internal void @f_luaopen(%struct.lua_State* %ARG1, i8* %ARG2) {
L786:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  call void @stack_init(%struct.lua_State* %ARG1, %struct.lua_State* %ARG1)
  %R4633 = call %struct.Table* @luaH_new(%struct.lua_State* %ARG1, i32 0, i32 2)
  %R4634 = bitcast %struct.Table* %R4633 to { [184 x i8] }*
  %4 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 120
  %7 = bitcast i8* %6 to { [184 x i8] }**
  store { [184 x i8] }* %R4634, { [184 x i8] }** %7
  %8 = bitcast %struct.lua_State* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 128
  %11 = bitcast i8* %10 to i32*
  store i32 5, i32* %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %13 = bitcast %struct.global_State** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to %struct.global_State**
  %load_target1 = load %struct.global_State*, %struct.global_State** %15
  %R4641 = call %struct.Table* @luaH_new(%struct.lua_State* %ARG1, i32 0, i32 2)
  %R4642 = bitcast %struct.Table* %R4641 to { [184 x i8] }*
  %16 = bitcast %struct.global_State* %load_target1 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 160
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %R4642, { [184 x i8] }** %19
  %20 = bitcast %struct.global_State* %load_target1 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 168
  %23 = bitcast i8* %22 to i32*
  store i32 5, i32* %23
  call void @luaS_resize(%struct.lua_State* %ARG1, i32 32)
  call void @luaT_init(%struct.lua_State* %ARG1)
  call void @luaX_init(%struct.lua_State* %ARG1)
  %R4650 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i64 17)
  %24 = bitcast { [24 x i8] }* %R4650 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 9
  %load_target2 = load i8, i8* %25
  %R4652 = zext i8 %load_target2 to i32
  %R4653 = or i32 %R4652, 32
  %R4654 = trunc i32 %R4653 to i8
  %26 = bitcast { [24 x i8] }* %R4650 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 9
  store i8 %R4654, i8* %27
  %28 = bitcast %struct.global_State* %load_target to i64*
  %29 = bitcast i64* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 120
  %31 = bitcast i8* %30 to i64*
  %load_target3 = load i64, i64* %31
  %R4657 = mul i64 %load_target3, 4
  %32 = bitcast %struct.global_State* %load_target to i64*
  %33 = bitcast i64* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 112
  %35 = bitcast i8* %34 to i64*
  store i64 %R4657, i64* %35
  ret void
}

declare void @luaX_init(%struct.lua_State*)

define internal void @preinit_state(%struct.lua_State* %ARG1, %struct.global_State* %ARG2) {
L787:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  store %struct.global_State* %ARG2, %struct.global_State** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 64
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  store %struct.lua_TValue* null, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_State* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 88
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_longjmp**
  %13 = bitcast %struct.lua_longjmp** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 168
  %15 = bitcast i8* %14 to %struct.lua_longjmp**
  store %struct.lua_longjmp* null, %struct.lua_longjmp** %15
  %16 = bitcast %struct.lua_State* %ARG1 to void (%struct.lua_State*, %struct.lua_Debug*)**
  %17 = bitcast void (%struct.lua_State*, %struct.lua_Debug*)** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 112
  %19 = bitcast i8* %18 to void (%struct.lua_State*, %struct.lua_Debug*)**
  store void (%struct.lua_State*, %struct.lua_Debug*)* null, void (%struct.lua_State*, %struct.lua_Debug*)** %19
  %20 = bitcast %struct.lua_State* %ARG1 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 100
  store i8 0, i8* %21
  %22 = bitcast %struct.lua_State* %ARG1 to i32*
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 104
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25
  %26 = bitcast %struct.lua_State* %ARG1 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 101
  store i8 1, i8* %27
  %28 = bitcast %struct.lua_State* %ARG1 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 108
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31
  %32 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %33 = bitcast { [184 x i8] }** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 152
  %35 = bitcast i8* %34 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %35
  %36 = bitcast %struct.lua_State* %ARG1 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 92
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39
  %40 = bitcast %struct.lua_State* %ARG1 to i16*
  %41 = bitcast i16* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 98
  %43 = bitcast i8* %42 to i16*
  store i16 0, i16* %43
  %44 = bitcast %struct.lua_State* %ARG1 to i16*
  %45 = bitcast i16* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 96
  %47 = bitcast i8* %46 to i16*
  store i16 0, i16* %47
  %48 = bitcast %struct.lua_State* %ARG1 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 10
  store i8 0, i8* %49
  %50 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %51 = bitcast %struct.CallInfo** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 40
  %53 = bitcast i8* %52 to %struct.CallInfo**
  store %struct.CallInfo* null, %struct.CallInfo** %53
  %54 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %55 = bitcast %struct.CallInfo** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 80
  %57 = bitcast i8* %56 to %struct.CallInfo**
  store %struct.CallInfo* null, %struct.CallInfo** %57
  %58 = bitcast %struct.lua_State* %ARG1 to i32**
  %59 = bitcast i32** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 48
  %61 = bitcast i8* %60 to i32**
  store i32* null, i32** %61
  %62 = bitcast %struct.lua_State* %ARG1 to i64*
  %63 = bitcast i64* %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 176
  %65 = bitcast i8* %64 to i64*
  store i64 0, i64* %65
  %66 = bitcast %struct.lua_State* %ARG1 to i32*
  %67 = bitcast i32* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 128
  %69 = bitcast i8* %68 to i32*
  store i32 0, i32* %69
  ret void
}

define internal void @close_state(%struct.lua_State* %ARG1) {
L788:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 64
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  call void @luaF_close(%struct.lua_State* %ARG1, %struct.lua_TValue* %load_target1)
  call void @luaC_freeall(%struct.lua_State* %ARG1)
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %9 = bitcast %struct.global_State** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to %struct.global_State**
  %load_target2 = load %struct.global_State*, %struct.global_State** %11
  %12 = bitcast %struct.global_State* %load_target2 to { [184 x i8] }***
  %13 = bitcast { [184 x i8] }*** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [184 x i8] }***
  %load_target3 = load { [184 x i8] }**, { [184 x i8] }*** %15
  %R4691 = bitcast { [184 x i8] }** %load_target3 to i8*
  %16 = bitcast %struct.global_State* %load_target2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 12
  %19 = bitcast i8* %18 to i32*
  %load_target4 = load i32, i32* %19
  %R4695 = sext i32 %load_target4 to i64
  %R4696 = mul i64 %R4695, 8
  %R4697 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R4691, i64 %R4696, i64 0)
  %20 = bitcast %struct.global_State* %load_target to i8**
  %21 = bitcast i8** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 88
  %23 = bitcast i8* %22 to i8**
  %load_target5 = load i8*, i8** %23
  %24 = bitcast %struct.global_State* %load_target to i64*
  %25 = bitcast i64* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 104
  %27 = bitcast i8* %26 to i64*
  %load_target6 = load i64, i64* %27
  %R4705 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %load_target5, i64 %load_target6, i64 0)
  %28 = bitcast %struct.global_State* %load_target to i8**
  %29 = bitcast i8** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 88
  %31 = bitcast i8* %30 to i8**
  store i8* %R4705, i8** %31
  %32 = bitcast %struct.global_State* %load_target to i64*
  %33 = bitcast i64* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 104
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35
  call void @freestack(%struct.lua_State* %ARG1, %struct.lua_State* %ARG1)
  %36 = bitcast %struct.global_State* %load_target to i8**
  %37 = bitcast i8** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 24
  %39 = bitcast i8* %38 to i8**
  %load_target7 = load i8*, i8** %39
  %R4714 = bitcast %struct.lua_State* %ARG1 to i8*
  %40 = bitcast %struct.global_State* %load_target to i8* (i8*, i8*, i64, i64)**
  %41 = bitcast i8* (i8*, i8*, i64, i64)** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to i8* (i8*, i8*, i64, i64)**
  %load_target8 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %43
  %R4719 = call i8* %load_target8(i8* %load_target7, i8* %R4714, i64 616, i64 0)
  ret void
}

define internal void @luaE_freethread.35(%struct.lua_State* %ARG1, %struct.lua_State* %ARG2) {
L789:
  %0 = bitcast %struct.lua_State* %ARG2 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 64
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  call void @luaF_close(%struct.lua_State* %ARG2, %struct.lua_TValue* %load_target)
  call void @freestack(%struct.lua_State* %ARG1, %struct.lua_State* %ARG2)
  %R4727 = bitcast %struct.lua_State* %ARG2 to i8*
  %R4730 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %R4727, i64 184, i64 0)
  ret void
}

define internal %struct.lua_State* @lua_newstate(i8* (i8*, i8*, i64, i64)* %ARG1, i8* %ARG2) {
L790:
  %0 = alloca i32
  %1 = alloca %struct.lua_State*
  %R4733 = call i8* %ARG1(i8* %ARG2, i8* null, i64 0, i64 616)
  %cond = icmp ne i8* %R4733, null
  br i1 %cond, label %L792, label %L791

L791:                                             ; preds = %L790
  store %struct.lua_State* null, %struct.lua_State** %1
  br label %L798

L792:                                             ; preds = %L790
  %R4740 = bitcast i8* %R4733 to %struct.lua_State*
  %R4742 = bitcast %struct.lua_State* %R4740 to %struct.LG*
  %2 = bitcast %struct.LG* %R4742 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i32 184
  %4 = bitcast i8* %3 to %struct.LG*
  %5 = bitcast %struct.lua_State* %R4740 to { [184 x i8] }**
  %6 = bitcast { [184 x i8] }** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %8
  %9 = bitcast %struct.lua_State* %R4740 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  store i8 8, i8* %10
  %11 = bitcast %struct.LG* %R4742 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 216
  store i8 33, i8* %12
  %13 = bitcast %struct.lua_State* %R4740 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 9
  store i8 97, i8* %14
  call void @preinit_state(%struct.lua_State* %R4740, %struct.LG* %4)
  %15 = bitcast %struct.LG* %R4742 to i8* (i8*, i8*, i64, i64)**
  %16 = bitcast i8* (i8*, i8*, i64, i64)** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 200
  %18 = bitcast i8* %17 to i8* (i8*, i8*, i64, i64)**
  store i8* (i8*, i8*, i64, i64)* %ARG1, i8* (i8*, i8*, i64, i64)** %18
  %19 = bitcast %struct.LG* %R4742 to i8**
  %20 = bitcast i8** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 208
  %22 = bitcast i8* %21 to i8**
  store i8* %ARG2, i8** %22
  %23 = bitcast %struct.LG* %R4742 to %struct.lua_State**
  %24 = bitcast %struct.lua_State** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 360
  %26 = bitcast i8* %25 to %struct.lua_State**
  store %struct.lua_State* %R4740, %struct.lua_State** %26
  %27 = bitcast %struct.LG* %4 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i32 184
  %29 = bitcast i8* %28 to %struct.LG*
  %30 = bitcast %struct.LG* %R4742 to %struct.UpVal**
  %31 = bitcast %struct.UpVal** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 392
  %33 = bitcast i8* %32 to %struct.UpVal**
  store %struct.LG* %29, %struct.UpVal** %33
  %34 = bitcast %struct.LG* %R4742 to %struct.UpVal**
  %35 = bitcast %struct.UpVal** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 400
  %37 = bitcast i8* %36 to %struct.UpVal**
  store %struct.LG* %29, %struct.UpVal** %37
  %38 = bitcast %struct.LG* %R4742 to i64*
  %39 = bitcast i64* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 296
  %41 = bitcast i8* %40 to i64*
  store i64 0, i64* %41
  %42 = bitcast %struct.LG* %R4742 to i32*
  %43 = bitcast i32* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 196
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45
  %46 = bitcast %struct.LG* %R4742 to i32*
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 192
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49
  %50 = bitcast %struct.LG* %R4742 to { [184 x i8] }***
  %51 = bitcast { [184 x i8] }*** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 184
  %53 = bitcast i8* %52 to { [184 x i8] }***
  store { [184 x i8] }** null, { [184 x i8] }*** %53
  %54 = bitcast %struct.lua_State* %R4740 to %struct.global_State**
  %55 = bitcast %struct.global_State** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = bitcast i8* %56 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %57
  %58 = bitcast %struct.global_State* %load_target to i32*
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 168
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61
  %62 = bitcast %struct.LG* %R4742 to i8**
  %63 = bitcast i8** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 272
  %65 = bitcast i8* %64 to i8**
  store i8* null, i8** %65
  %66 = bitcast %struct.LG* %R4742 to i64*
  %67 = bitcast i64* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 288
  %69 = bitcast i8* %68 to i64*
  store i64 0, i64* %69
  %70 = bitcast %struct.LG* %R4742 to i32 (%struct.lua_State*)**
  %71 = bitcast i32 (%struct.lua_State*)** %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 336
  %73 = bitcast i8* %72 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %73
  %74 = bitcast %struct.LG* %R4742 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 217
  store i8 0, i8* %75
  %76 = bitcast %struct.LG* %R4742 to { [184 x i8] }**
  %77 = bitcast { [184 x i8] }** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 224
  %79 = bitcast i8* %78 to { [184 x i8] }**
  store %struct.LG* %R4742, { [184 x i8] }** %79
  %80 = bitcast %struct.LG* %R4742 to i32*
  %81 = bitcast i32* %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 220
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83
  %84 = bitcast %struct.LG* %4 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i32 40
  %86 = bitcast i8* %85 to %struct.LG*
  %87 = bitcast %struct.LG* %R4742 to { [184 x i8] }***
  %88 = bitcast { [184 x i8] }*** %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 232
  %90 = bitcast i8* %89 to { [184 x i8] }***
  store %struct.LG* %86, { [184 x i8] }*** %90
  %91 = bitcast %struct.LG* %R4742 to { [184 x i8] }**
  %92 = bitcast { [184 x i8] }** %91 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 240
  %94 = bitcast i8* %93 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %94
  %95 = bitcast %struct.LG* %R4742 to { [184 x i8] }**
  %96 = bitcast { [184 x i8] }** %95 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 248
  %98 = bitcast i8* %97 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %98
  %99 = bitcast %struct.LG* %R4742 to { [184 x i8] }**
  %100 = bitcast { [184 x i8] }** %99 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 256
  %102 = bitcast i8* %101 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %102
  %103 = bitcast %struct.LG* %R4742 to { [184 x i8] }**
  %104 = bitcast { [184 x i8] }** %103 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 264
  %106 = bitcast i8* %105 to { [184 x i8] }**
  store { [184 x i8] }* null, { [184 x i8] }** %106
  %107 = bitcast %struct.LG* %R4742 to i64*
  %108 = bitcast i64* %107 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 304
  %110 = bitcast i8* %109 to i64*
  store i64 616, i64* %110
  %111 = bitcast %struct.LG* %R4742 to i32*
  %112 = bitcast i32* %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 328
  %114 = bitcast i8* %113 to i32*
  store i32 200, i32* %114
  %115 = bitcast %struct.LG* %R4742 to i32*
  %116 = bitcast i32* %115 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 332
  %118 = bitcast i8* %117 to i32*
  store i32 200, i32* %118
  %119 = bitcast %struct.LG* %R4742 to i64*
  %120 = bitcast i64* %119 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 320
  %122 = bitcast i8* %121 to i64*
  store i64 0, i64* %122
  store i32 0, i32* %0
  br label %L793

L793:                                             ; preds = %L794, %L792
  %123 = load i32, i32* %0
  %R4798 = icmp slt i32 %123, 9
  %R47981 = zext i1 %R4798 to i32
  %cond2 = icmp ne i32 %R47981, 0
  br i1 %cond2, label %L794, label %L795

L794:                                             ; preds = %L793
  %124 = bitcast %struct.LG* %4 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i32 224
  %126 = bitcast i8* %125 to %struct.LG*
  %R4802 = sext i32 %123 to i64
  %R4803 = mul i64 %R4802, 8
  %127 = bitcast %struct.LG* %126 to i8*
  %128 = getelementptr inbounds i8, i8* %127, i64 %R4803
  %129 = bitcast i8* %128 to %struct.LG*
  %130 = bitcast %struct.LG* %129 to %struct.Table**
  %131 = bitcast %struct.Table** %130 to i8*
  %132 = getelementptr inbounds i8, i8* %131, i64 0
  %133 = bitcast i8* %132 to %struct.Table**
  store %struct.Table* null, %struct.Table** %133
  %R4806 = add i32 %123, 1
  store i32 %R4806, i32* %0
  br label %L793

L795:                                             ; preds = %L793
  %R4809 = call i32 @luaD_rawrunprotected(%struct.lua_State* %R4740, void (%struct.lua_State*, i8*)* @f_luaopen, i8* null)
  %cond3 = icmp ne i32 %R4809, 0
  %select = select i1 %cond3, %struct.lua_State* null, %struct.lua_State* %R4740
  %cond4 = icmp ne i32 %R4809, 0
  br i1 %cond4, label %L796, label %L797

L796:                                             ; preds = %L795
  call void @close_state(%struct.lua_State* %R4740)
  br label %L797

L797:                                             ; preds = %L796, %L795
  store %struct.lua_State* %select, %struct.lua_State** %1
  br label %L798

L798:                                             ; preds = %L797, %L791
  %134 = load %struct.lua_State*, %struct.lua_State** %1
  ret %struct.lua_State* %134
}

define internal void @callallgcTM(%struct.lua_State* %ARG1, i8* %ARG2) {
L799:
  call void @luaC_callGCTM(%struct.lua_State* %ARG1)
  ret void
}

define internal void @lua_close(%struct.lua_State* %ARG1) {
L800:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to %struct.lua_State**
  %5 = bitcast %struct.lua_State** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 176
  %7 = bitcast i8* %6 to %struct.lua_State**
  %load_target1 = load %struct.lua_State*, %struct.lua_State** %7
  %8 = bitcast %struct.lua_State* %load_target1 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 64
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  call void @luaF_close(%struct.lua_State* %load_target1, %struct.lua_TValue* %load_target2)
  %R4822 = call i64 @luaC_separateudata(%struct.lua_State* %load_target1, i32 1)
  %12 = bitcast %struct.lua_State* %load_target1 to i64*
  %13 = bitcast i64* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 176
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15
  br label %L801

L801:                                             ; preds = %L801, %L800
  %16 = bitcast %struct.lua_State* %load_target1 to %struct.CallInfo**
  %17 = bitcast %struct.CallInfo** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 80
  %19 = bitcast i8* %18 to %struct.CallInfo**
  %load_target3 = load %struct.CallInfo*, %struct.CallInfo** %19
  %20 = bitcast %struct.lua_State* %load_target1 to %struct.CallInfo**
  %21 = bitcast %struct.CallInfo** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 40
  %23 = bitcast i8* %22 to %struct.CallInfo**
  store %struct.CallInfo* %load_target3, %struct.CallInfo** %23
  %24 = bitcast %struct.CallInfo* %load_target3 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_State* %load_target1 to %struct.lua_TValue**
  %29 = bitcast %struct.lua_TValue** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target4, %struct.lua_TValue** %31
  %32 = bitcast %struct.lua_State* %load_target1 to %struct.lua_TValue**
  %33 = bitcast %struct.lua_TValue** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 24
  %35 = bitcast i8* %34 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target4, %struct.lua_TValue** %35
  %36 = bitcast %struct.lua_State* %load_target1 to i16*
  %37 = bitcast i16* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 98
  %39 = bitcast i8* %38 to i16*
  store i16 0, i16* %39
  %40 = bitcast %struct.lua_State* %load_target1 to i16*
  %41 = bitcast i16* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 96
  %43 = bitcast i8* %42 to i16*
  store i16 0, i16* %43
  %R4836 = call i32 @luaD_rawrunprotected(%struct.lua_State* %load_target1, void (%struct.lua_State*, i8*)* @callallgcTM, i8* null)
  %cond = icmp ne i32 %R4836, 0
  br i1 %cond, label %L801, label %L802

L802:                                             ; preds = %L801
  call void @close_state(%struct.lua_State* %load_target1)
  ret void
}

define internal i32 @currentpc(%struct.lua_State* %ARG1, %struct.CallInfo* %ARG2) {
L803:
  %0 = alloca i32
  %1 = bitcast %struct.CallInfo* %ARG2 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %5 = bitcast %struct.lua_TValue* %load_target to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R4842 = icmp eq i32 %load_target1, 6
  %R48422 = zext i1 %R4842 to i32
  %cond = icmp ne i32 %R48422, 0
  br i1 %cond, label %L804, label %L805

L804:                                             ; preds = %L803
  %9 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %12
  %13 = bitcast { [184 x i8] }* %load_target3 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 10
  %load_target4 = load i8, i8* %14
  %cond5 = icmp ne i8 %load_target4, 0
  br i1 %cond5, label %L805, label %L806

L805:                                             ; preds = %L804, %L803
  store i32 -1, i32* %0
  br label %L809

L806:                                             ; preds = %L804
  %15 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %16 = bitcast %struct.CallInfo** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %struct.CallInfo**
  %load_target6 = load %struct.CallInfo*, %struct.CallInfo** %18
  %R4851 = icmp eq %struct.CallInfo* %ARG2, %load_target6
  %R48517 = zext i1 %R4851 to i32
  %cond8 = icmp ne i32 %R48517, 0
  br i1 %cond8, label %L807, label %L808

L807:                                             ; preds = %L806
  %19 = bitcast %struct.lua_State* %ARG1 to i32**
  %20 = bitcast i32** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 48
  %22 = bitcast i8* %21 to i32**
  %load_target9 = load i32*, i32** %22
  %23 = bitcast %struct.CallInfo* %ARG2 to i32**
  %24 = bitcast i32** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 24
  %26 = bitcast i8* %25 to i32**
  store i32* %load_target9, i32** %26
  br label %L808

L808:                                             ; preds = %L807, %L806
  %27 = bitcast %struct.CallInfo* %ARG2 to i32**
  %28 = bitcast i32** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 24
  %30 = bitcast i8* %29 to i32**
  %load_target10 = load i32*, i32** %30
  %31 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %32 = bitcast { [184 x i8] }** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 0
  %34 = bitcast i8* %33 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %34
  %35 = bitcast { [184 x i8] }* %load_target11 to %struct.Proto**
  %36 = bitcast %struct.Proto** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 32
  %38 = bitcast i8* %37 to %struct.Proto**
  %load_target12 = load %struct.Proto*, %struct.Proto** %38
  %39 = bitcast %struct.Proto* %load_target12 to i32**
  %40 = bitcast i32** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 24
  %42 = bitcast i8* %41 to i32**
  %load_target13 = load i32*, i32** %42
  %R4862 = sub i32* %load_target10, %load_target13
  %R4863 = sdiv i32* %R4862, i64 4
  %R4864 = ptrtoint i32* %R4863 to i32
  %R4865 = add i32 %R4864, -1
  store i32 %R4865, i32* %0
  br label %L809

L809:                                             ; preds = %L808, %L805
  %43 = load i32, i32* %0
  ret i32 %43
}

define internal i32 @currentline(%struct.lua_State* %ARG1, %struct.CallInfo* %ARG2) {
L810:
  %0 = alloca i32
  %1 = alloca i32
  %R4868 = call i32 @currentpc(%struct.lua_State* %ARG1, %struct.CallInfo* %ARG2)
  %R4870 = icmp slt i32 %R4868, 0
  %R48701 = zext i1 %R4870 to i32
  %cond = icmp ne i32 %R48701, 0
  br i1 %cond, label %L811, label %L812

L811:                                             ; preds = %L810
  store i32 -1, i32* %1
  br label %L816

L812:                                             ; preds = %L810
  %2 = bitcast %struct.CallInfo* %ARG2 to %struct.lua_TValue**
  %3 = bitcast %struct.lua_TValue** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %5
  %6 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %7 = bitcast { [184 x i8] }** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %9
  %10 = bitcast { [184 x i8] }* %load_target2 to %struct.Proto**
  %11 = bitcast %struct.Proto** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast i8* %12 to %struct.Proto**
  %load_target3 = load %struct.Proto*, %struct.Proto** %13
  %14 = bitcast %struct.Proto* %load_target3 to i32**
  %15 = bitcast i32** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 40
  %17 = bitcast i8* %16 to i32**
  %load_target4 = load i32*, i32** %17
  %cond5 = icmp ne i32* %load_target4, null
  br i1 %cond5, label %L813, label %L814

L813:                                             ; preds = %L812
  %18 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %19 = bitcast { [184 x i8] }** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to { [184 x i8] }**
  %load_target6 = load { [184 x i8] }*, { [184 x i8] }** %21
  %22 = bitcast { [184 x i8] }* %load_target6 to %struct.Proto**
  %23 = bitcast %struct.Proto** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 32
  %25 = bitcast i8* %24 to %struct.Proto**
  %load_target7 = load %struct.Proto*, %struct.Proto** %25
  %26 = bitcast %struct.Proto* %load_target7 to i32**
  %27 = bitcast i32** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 40
  %29 = bitcast i8* %28 to i32**
  %load_target8 = load i32*, i32** %29
  %R4883 = sext i32 %R4868 to i64
  %R4884 = mul i64 %R4883, 4
  %30 = bitcast i32* %load_target8 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %R4884
  %32 = bitcast i8* %31 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to i32*
  %load_target9 = load i32, i32* %35
  store i32 %load_target9, i32* %0
  br label %L815

L814:                                             ; preds = %L812
  store i32 0, i32* %0
  br label %L815

L815:                                             ; preds = %L814, %L813
  %36 = load i32, i32* %0
  store i32 %36, i32* %1
  br label %L816

L816:                                             ; preds = %L815, %L811
  %37 = load i32, i32* %1
  ret i32 %37
}

define internal i32 @lua_getstack(%struct.lua_State* %ARG1, i32 %ARG2, %struct.lua_Debug* %ARG3) {
L817:
  %0 = alloca i32
  %1 = alloca %struct.CallInfo*
  %2 = alloca %struct.CallInfo*
  %3 = alloca i32
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %5 = bitcast %struct.CallInfo** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %7
  store i32 %ARG2, i32* %0
  store %struct.CallInfo* %load_target, %struct.CallInfo** %2
  store %struct.CallInfo* %load_target, %struct.CallInfo** %1
  br label %L818

L818:                                             ; preds = %L822, %L817
  %8 = load i32, i32* %0
  %R4891 = icmp sgt i32 %8, 0
  %R48911 = zext i1 %R4891 to i32
  %cond = icmp ne i32 %R48911, 0
  br i1 %cond, label %L819, label %L823

L819:                                             ; preds = %L818
  %9 = load %struct.CallInfo*, %struct.CallInfo** %1
  %10 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %11 = bitcast %struct.CallInfo** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 80
  %13 = bitcast i8* %12 to %struct.CallInfo**
  %load_target2 = load %struct.CallInfo*, %struct.CallInfo** %13
  %R4895 = icmp ugt %struct.CallInfo* %9, %load_target2
  %R48953 = zext i1 %R4895 to i32
  store %struct.CallInfo* %9, %struct.CallInfo** %2
  %cond4 = icmp ne i32 %R48953, 0
  br i1 %cond4, label %L820, label %L823

L820:                                             ; preds = %L819
  %R4897 = add i32 %8, -1
  %14 = bitcast %struct.CallInfo* %9 to %struct.lua_TValue**
  %15 = bitcast %struct.lua_TValue** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %17
  %18 = bitcast %struct.lua_TValue* %load_target5 to { [184 x i8] }**
  %19 = bitcast { [184 x i8] }** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to { [184 x i8] }**
  %load_target6 = load { [184 x i8] }*, { [184 x i8] }** %21
  %22 = bitcast { [184 x i8] }* %load_target6 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 10
  %load_target7 = load i8, i8* %23
  store i32 %R4897, i32* %0
  %cond8 = icmp ne i8 %load_target7, 0
  br i1 %cond8, label %L822, label %L821

L821:                                             ; preds = %L820
  %24 = bitcast %struct.CallInfo* %9 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 36
  %27 = bitcast i8* %26 to i32*
  %load_target9 = load i32, i32* %27
  %R4906 = sub i32 %R4897, %load_target9
  store i32 %R4906, i32* %0
  br label %L822

L822:                                             ; preds = %L821, %L820
  %28 = bitcast %struct.CallInfo* %9 to i8*
  %29 = getelementptr inbounds i8, i8* %28, %struct.CallInfo* inttoptr (i64 -40 to %struct.CallInfo*)
  %30 = bitcast i8* %29 to %struct.CallInfo*
  store %struct.CallInfo* %30, %struct.CallInfo** %2
  store %struct.CallInfo* %30, %struct.CallInfo** %1
  br label %L818

L823:                                             ; preds = %L819, %L818
  %cond10 = icmp ne i32 %8, 0
  br i1 %cond10, label %L826, label %L824

L824:                                             ; preds = %L823
  %31 = load %struct.CallInfo*, %struct.CallInfo** %2
  %32 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %33 = bitcast %struct.CallInfo** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 80
  %35 = bitcast i8* %34 to %struct.CallInfo**
  %load_target11 = load %struct.CallInfo*, %struct.CallInfo** %35
  %R4915 = icmp ugt %struct.CallInfo* %31, %load_target11
  %R491512 = zext i1 %R4915 to i32
  %cond13 = icmp ne i32 %R491512, 0
  br i1 %cond13, label %L825, label %L826

L825:                                             ; preds = %L824
  %R4919 = sub %struct.CallInfo* %31, %load_target11
  %R4920 = sdiv %struct.CallInfo* %R4919, i64 40
  %R4921 = ptrtoint %struct.CallInfo* %R4920 to i32
  %36 = bitcast %struct.lua_Debug* %ARG3 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 116
  %39 = bitcast i8* %38 to i32*
  store i32 %R4921, i32* %39
  store i32 1, i32* %3
  br label %L829

L826:                                             ; preds = %L824, %L823
  %R4924 = icmp slt i32 %8, 0
  %R492414 = zext i1 %R4924 to i32
  %cond15 = icmp ne i32 %R492414, 0
  br i1 %cond15, label %L827, label %L828

L827:                                             ; preds = %L826
  %40 = bitcast %struct.lua_Debug* %ARG3 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 116
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43
  store i32 1, i32* %3
  br label %L829

L828:                                             ; preds = %L826
  store i32 0, i32* %3
  br label %L829

L829:                                             ; preds = %L828, %L827, %L825
  %44 = load i32, i32* %3
  ret i32 %44
}

define internal %struct.Proto* @getluaproto(%struct.CallInfo* %ARG1) {
L830:
  %0 = alloca %struct.Proto*
  %1 = bitcast %struct.CallInfo* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %5 = bitcast %struct.lua_TValue* %load_target to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R4931 = icmp eq i32 %load_target1, 6
  %R49312 = zext i1 %R4931 to i32
  %cond = icmp ne i32 %R49312, 0
  br i1 %cond, label %L831, label %L833

L831:                                             ; preds = %L830
  %9 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %12
  %13 = bitcast { [184 x i8] }* %load_target3 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 10
  %load_target4 = load i8, i8* %14
  %cond5 = icmp ne i8 %load_target4, 0
  br i1 %cond5, label %L833, label %L832

L832:                                             ; preds = %L831
  %15 = bitcast { [184 x i8] }* %load_target3 to %struct.Proto**
  %16 = bitcast %struct.Proto** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 32
  %18 = bitcast i8* %17 to %struct.Proto**
  %load_target6 = load %struct.Proto*, %struct.Proto** %18
  store %struct.Proto* %load_target6, %struct.Proto** %0
  br label %L834

L833:                                             ; preds = %L831, %L830
  store %struct.Proto* null, %struct.Proto** %0
  br label %L834

L834:                                             ; preds = %L833, %L832
  %19 = load %struct.Proto*, %struct.Proto** %0
  ret %struct.Proto* %19
}

define internal void @funcinfo(%struct.lua_Debug* %ARG1, { [56 x i8] }* %ARG2) {
L835:
  %0 = alloca i8*
  %1 = bitcast { [56 x i8] }* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 10
  %load_target = load i8, i8* %2
  %cond = icmp ne i8 %load_target, 0
  br i1 %cond, label %L836, label %L837

L836:                                             ; preds = %L835
  %3 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = bitcast i8* %5 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8** %6
  %7 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 48
  %10 = bitcast i8* %9 to i32*
  store i32 -1, i32* %10
  %11 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 52
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14
  %15 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %16 = bitcast i8** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 24
  %18 = bitcast i8* %17 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i8** %18
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8** %0
  br label %L838

L837:                                             ; preds = %L835
  %19 = bitcast { [56 x i8] }* %ARG2 to %struct.Proto**
  %20 = bitcast %struct.Proto** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 32
  %22 = bitcast i8* %21 to %struct.Proto**
  %load_target1 = load %struct.Proto*, %struct.Proto** %22
  %23 = bitcast %struct.Proto* %load_target1 to { [24 x i8] }**
  %24 = bitcast { [24 x i8] }** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 64
  %26 = bitcast i8* %25 to { [24 x i8] }**
  %load_target2 = load { [24 x i8] }*, { [24 x i8] }** %26
  %27 = bitcast { [24 x i8] }* %load_target2 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 24
  %29 = bitcast i8* %28 to { [24 x i8] }*
  %R4954 = bitcast { [24 x i8] }* %29 to i8*
  %30 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %31 = bitcast i8** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 32
  %33 = bitcast i8* %32 to i8**
  store i8* %R4954, i8** %33
  %34 = bitcast { [56 x i8] }* %ARG2 to %struct.Proto**
  %35 = bitcast %struct.Proto** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 32
  %37 = bitcast i8* %36 to %struct.Proto**
  %load_target3 = load %struct.Proto*, %struct.Proto** %37
  %38 = bitcast %struct.Proto* %load_target3 to i32*
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 96
  %41 = bitcast i8* %40 to i32*
  %load_target4 = load i32, i32* %41
  %42 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %43 = bitcast i32* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 48
  %45 = bitcast i8* %44 to i32*
  store i32 %load_target4, i32* %45
  %46 = bitcast { [56 x i8] }* %ARG2 to %struct.Proto**
  %47 = bitcast %struct.Proto** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = bitcast i8* %48 to %struct.Proto**
  %load_target5 = load %struct.Proto*, %struct.Proto** %49
  %50 = bitcast %struct.Proto* %load_target5 to i32*
  %51 = bitcast i32* %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 100
  %53 = bitcast i8* %52 to i32*
  %load_target6 = load i32, i32* %53
  %54 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %55 = bitcast i32* %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 52
  %57 = bitcast i8* %56 to i32*
  store i32 %load_target6, i32* %57
  %R4969 = icmp eq i32 %load_target4, 0
  %R49697 = zext i1 %R4969 to i32
  %cond8 = icmp ne i32 %R49697, 0
  %select = select i1 %cond8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0)
  %58 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %59 = bitcast i8** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 24
  %61 = bitcast i8* %60 to i8**
  store i8* %select, i8** %61
  store i8* %R4954, i8** %0
  br label %L838

L838:                                             ; preds = %L837, %L836
  %62 = bitcast %struct.lua_Debug* %ARG1 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i32 56
  %64 = bitcast i8* %63 to %struct.lua_Debug*
  %65 = load i8*, i8** %0
  call void @luaO_chunkid(%struct.lua_Debug* %64, i8* %65, i64 60)
  ret void
}

define internal void @info_tailcall(%struct.lua_Debug* %ARG1) {
L839:
  %0 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %1 = bitcast i8** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %3
  %4 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %5 = bitcast i8** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.40, i64 0, i64 0), i8** %7
  %8 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %9 = bitcast i8** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), i8** %11
  %12 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 40
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15
  %16 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 48
  %19 = bitcast i8* %18 to i32*
  store i32 -1, i32* %19
  %20 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 -1, i32* %23
  %24 = bitcast %struct.lua_Debug* %ARG1 to i8**
  %25 = bitcast i8** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %27 = bitcast i8* %26 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0), i8** %27
  %28 = bitcast %struct.lua_Debug* %ARG1 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i32 56
  %30 = bitcast i8* %29 to %struct.lua_Debug*
  call void @luaO_chunkid(%struct.lua_Debug* %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0), i64 60)
  %31 = bitcast %struct.lua_Debug* %ARG1 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 44
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34
  ret void
}

define internal void @collectvalidlines(%struct.lua_State* %ARG1, { [56 x i8] }* %ARG2) {
L840:
  %0 = alloca i32
  %cond = icmp ne { [56 x i8] }* %ARG2, null
  br i1 %cond, label %L841, label %L842

L841:                                             ; preds = %L840
  %1 = bitcast { [56 x i8] }* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 10
  %load_target = load i8, i8* %2
  %cond1 = icmp ne i8 %load_target, 0
  br i1 %cond1, label %L842, label %L843

L842:                                             ; preds = %L841, %L840
  %3 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %4 = bitcast %struct.lua_TValue** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %6
  %7 = bitcast %struct.lua_TValue* %load_target2 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10
  br label %L847

L843:                                             ; preds = %L841
  %R4998 = call %struct.Table* @luaH_new(%struct.lua_State* %ARG1, i32 0, i32 0)
  %11 = bitcast { [56 x i8] }* %ARG2 to %struct.Proto**
  %12 = bitcast %struct.Proto** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast i8* %13 to %struct.Proto**
  %load_target3 = load %struct.Proto*, %struct.Proto** %14
  %15 = bitcast %struct.Proto* %load_target3 to i32**
  %16 = bitcast i32** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to i32**
  %load_target4 = load i32*, i32** %18
  store i32 0, i32* %0
  br label %L844

L844:                                             ; preds = %L845, %L843
  %19 = load i32, i32* %0
  %20 = bitcast { [56 x i8] }* %ARG2 to %struct.Proto**
  %21 = bitcast %struct.Proto** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to %struct.Proto**
  %load_target5 = load %struct.Proto*, %struct.Proto** %23
  %24 = bitcast %struct.Proto* %load_target5 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 84
  %27 = bitcast i8* %26 to i32*
  %load_target6 = load i32, i32* %27
  %R5006 = icmp slt i32 %19, %load_target6
  %R50067 = zext i1 %R5006 to i32
  %cond8 = icmp ne i32 %R50067, 0
  br i1 %cond8, label %L845, label %L846

L845:                                             ; preds = %L844
  %R5011 = sext i32 %19 to i64
  %R5012 = mul i64 %R5011, 4
  %28 = bitcast i32* %load_target4 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %R5012
  %30 = bitcast i8* %29 to i32*
  %31 = bitcast i32* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i32*
  %load_target9 = load i32, i32* %33
  %R5015 = call %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %ARG1, %struct.Table* %R4998, i32 %load_target9)
  %34 = bitcast %struct.lua_TValue* %R5015 to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to i32*
  store i32 1, i32* %37
  %38 = bitcast %struct.lua_TValue* %R5015 to i32*
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to i32*
  store i32 1, i32* %41
  %R5019 = add i32 %19, 1
  store i32 %R5019, i32* %0
  br label %L844

L846:                                             ; preds = %L844
  %42 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %43 = bitcast %struct.lua_TValue** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 16
  %45 = bitcast i8* %44 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %45
  %R5023 = bitcast %struct.Table* %R4998 to { [184 x i8] }*
  %46 = bitcast %struct.lua_TValue* %load_target10 to { [184 x i8] }**
  %47 = bitcast { [184 x i8] }** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  %49 = bitcast i8* %48 to { [184 x i8] }**
  store { [184 x i8] }* %R5023, { [184 x i8] }** %49
  %50 = bitcast %struct.lua_TValue* %load_target10 to i32*
  %51 = bitcast i32* %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 5, i32* %53
  br label %L847

L847:                                             ; preds = %L846, %L842
  %54 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %55 = bitcast %struct.lua_TValue** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 56
  %57 = bitcast i8* %56 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %57
  %R5028 = bitcast %struct.lua_TValue* %load_target11 to i8*
  %58 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %59 = bitcast %struct.lua_TValue** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 16
  %61 = bitcast i8* %60 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %61
  %R5031 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %R5032 = sub i8* %R5028, %R5031
  %R5033 = icmp sle i8* %R5032, i64 16
  %R503313 = zext i1 %R5033 to i32
  %cond14 = icmp ne i32 %R503313, 0
  br i1 %cond14, label %L848, label %L849

L848:                                             ; preds = %L847
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L849

L849:                                             ; preds = %L848, %L847
  %62 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %63 = bitcast %struct.lua_TValue** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 16
  %65 = bitcast i8* %64 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %65
  %66 = bitcast %struct.lua_TValue* %load_target15 to i8*
  %67 = getelementptr inbounds i8, i8* %66, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %68 = bitcast i8* %67 to %struct.lua_TValue*
  %69 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %70 = bitcast %struct.lua_TValue** %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast i8* %71 to %struct.lua_TValue**
  store %struct.lua_TValue* %68, %struct.lua_TValue** %72
  ret void
}

define internal i32 @auxgetinfo(%struct.lua_State* %ARG1, i8* %ARG2, %struct.lua_Debug* %ARG3, { [56 x i8] }* %ARG4, %struct.CallInfo* %ARG5) {
L850:
  %0 = alloca i8*
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  store i8* %ARG2, i8** %0
  store i32 1, i32* %2
  %cond = icmp ne { [56 x i8] }* %ARG4, null
  br i1 %cond, label %L852, label %L851

L851:                                             ; preds = %L850
  call void @info_tailcall(%struct.lua_Debug* %ARG3)
  store i32 1, i32* %3
  br label %L865

L852:                                             ; preds = %L863, %L850
  %4 = load i8*, i8** %0
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %load_target = load i8, i8* %5
  %cond1 = icmp ne i8 %load_target, 0
  br i1 %cond1, label %L853, label %L864

L853:                                             ; preds = %L852
  switch i8 %load_target, label %L862 [
    i32 76, label %L863
    i32 83, label %L854
    i32 102, label %L863
    i32 108, label %L855
    i32 110, label %L860
    i32 117, label %L859
  ]

L854:                                             ; preds = %L853
  call void @funcinfo(%struct.lua_Debug* %ARG3, { [56 x i8] }* %ARG4)
  br label %L863

L855:                                             ; preds = %L853
  %cond2 = icmp ne %struct.CallInfo* %ARG5, null
  br i1 %cond2, label %L856, label %L857

L856:                                             ; preds = %L855
  %R5052 = call i32 @currentline(%struct.lua_State* %ARG1, %struct.CallInfo* %ARG5)
  store i32 %R5052, i32* %1
  br label %L858

L857:                                             ; preds = %L855
  store i32 -1, i32* %1
  br label %L858

L858:                                             ; preds = %L857, %L856
  %6 = load i32, i32* %1
  %7 = bitcast %struct.lua_Debug* %ARG3 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 40
  %10 = bitcast i8* %9 to i32*
  store i32 %6, i32* %10
  br label %L863

L859:                                             ; preds = %L853
  %11 = bitcast { [56 x i8] }* %ARG4 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 11
  %load_target3 = load i8, i8* %12
  %R5057 = zext i8 %load_target3 to i32
  %13 = bitcast %struct.lua_Debug* %ARG3 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 44
  %16 = bitcast i8* %15 to i32*
  store i32 %R5057, i32* %16
  br label %L863

L860:                                             ; preds = %L853
  %17 = bitcast %struct.lua_Debug* %ARG3 to i8**
  %18 = bitcast i8** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to i8**
  store i8* null, i8** %20
  br i1 false, label %L863, label %L861

L861:                                             ; preds = %L860
  %21 = bitcast %struct.lua_Debug* %ARG3 to i8**
  %22 = bitcast i8** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 16
  %24 = bitcast i8* %23 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.43, i64 0, i64 0), i8** %24
  %25 = bitcast %struct.lua_Debug* %ARG3 to i8**
  %26 = bitcast i8** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i8**
  store i8* null, i8** %28
  br label %L863

L862:                                             ; preds = %L853
  store i32 0, i32* %2
  br label %L863

L863:                                             ; preds = %L862, %L861, %L860, %L859, %L858, %L854, %L853, %L853
  %29 = getelementptr inbounds i8, i8* %4, inttoptr (i64 1 to i8*)
  store i8* %29, i8** %0
  br label %L852

L864:                                             ; preds = %L852
  %30 = load i32, i32* %2
  store i32 %30, i32* %3
  br label %L865

L865:                                             ; preds = %L864, %L851
  %31 = load i32, i32* %3
  ret i32 %31
}

define internal i32 @lua_getinfo(%struct.lua_State* %ARG1, i8* %ARG2, %struct.lua_Debug* %ARG3) {
L866:
  %0 = alloca i8*
  %1 = alloca { [56 x i8] }*
  %2 = alloca %struct.CallInfo*
  %3 = getelementptr inbounds i8, i8* %ARG2, i64 0
  %load_target = load i8, i8* %3
  %R5074 = sext i8 %load_target to i32
  %R5075 = icmp eq i32 %R5074, 62
  %R50751 = zext i1 %R5075 to i32
  store i8* %ARG2, i8** %0
  store { [56 x i8] }* null, { [56 x i8] }** %1
  store %struct.CallInfo* null, %struct.CallInfo** %2
  %cond = icmp ne i32 %R50751, 0
  br i1 %cond, label %L867, label %L868

L867:                                             ; preds = %L866
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = getelementptr inbounds i8, i8* %ARG2, inttoptr (i64 1 to i8*)
  %9 = bitcast %struct.lua_TValue* %load_target2 to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 -16
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %12
  %13 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %14 = getelementptr inbounds i8, i8* %13, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %15 = bitcast i8* %14 to %struct.lua_TValue*
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  store %struct.lua_TValue* %15, %struct.lua_TValue** %19
  store i8* %8, i8** %0
  store { [184 x i8] }* %load_target3, { [56 x i8] }** %1
  br label %L870

L868:                                             ; preds = %L866
  %20 = bitcast %struct.lua_Debug* %ARG3 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 116
  %23 = bitcast i8* %22 to i32*
  %load_target4 = load i32, i32* %23
  %cond5 = icmp ne i32 %load_target4, 0
  br i1 %cond5, label %L869, label %L870

L869:                                             ; preds = %L868
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %25 = bitcast %struct.CallInfo** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 80
  %27 = bitcast i8* %26 to %struct.CallInfo**
  %load_target6 = load %struct.CallInfo*, %struct.CallInfo** %27
  %R5095 = sext i32 %load_target4 to i64
  %R5096 = mul i64 %R5095, 40
  %28 = bitcast %struct.CallInfo* %load_target6 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %R5096
  %30 = bitcast i8* %29 to %struct.CallInfo*
  %31 = bitcast %struct.CallInfo* %30 to %struct.lua_TValue**
  %32 = bitcast %struct.lua_TValue** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %34
  %35 = bitcast %struct.lua_TValue* %load_target7 to { [184 x i8] }**
  %36 = bitcast { [184 x i8] }** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to { [184 x i8] }**
  %load_target8 = load { [184 x i8] }*, { [184 x i8] }** %38
  store { [184 x i8] }* %load_target8, { [56 x i8] }** %1
  store %struct.CallInfo* %30, %struct.CallInfo** %2
  br label %L870

L870:                                             ; preds = %L869, %L868, %L867
  %39 = load i8*, i8** %0
  %40 = load { [56 x i8] }*, { [56 x i8] }** %1
  %41 = load %struct.CallInfo*, %struct.CallInfo** %2
  %R5107 = call i32 @auxgetinfo(%struct.lua_State* %ARG1, i8* %39, %struct.lua_Debug* %ARG3, { [56 x i8] }* %40, %struct.CallInfo* %41)
  %R5109 = call i8* @strchr(i8* %39, i32 102)
  %cond9 = icmp ne i8* %R5109, null
  br i1 %cond9, label %L871, label %L877

L871:                                             ; preds = %L870
  %cond10 = icmp ne { [56 x i8] }* %40, null
  br i1 %cond10, label %L873, label %L872

L872:                                             ; preds = %L871
  %42 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %43 = bitcast %struct.lua_TValue** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 16
  %45 = bitcast i8* %44 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %45
  %46 = bitcast %struct.lua_TValue* %load_target11 to i32*
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49
  br label %L874

L873:                                             ; preds = %L871
  %50 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %51 = bitcast %struct.lua_TValue** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 16
  %53 = bitcast i8* %52 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %53
  %R5117 = bitcast { [56 x i8] }* %40 to { [184 x i8] }*
  %54 = bitcast %struct.lua_TValue* %load_target12 to { [184 x i8] }**
  %55 = bitcast { [184 x i8] }** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 0
  %57 = bitcast i8* %56 to { [184 x i8] }**
  store { [184 x i8] }* %R5117, { [184 x i8] }** %57
  %58 = bitcast %struct.lua_TValue* %load_target12 to i32*
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 8
  %61 = bitcast i8* %60 to i32*
  store i32 6, i32* %61
  br label %L874

L874:                                             ; preds = %L873, %L872
  %62 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %63 = bitcast %struct.lua_TValue** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 56
  %65 = bitcast i8* %64 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %65
  %R5122 = bitcast %struct.lua_TValue* %load_target13 to i8*
  %66 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %67 = bitcast %struct.lua_TValue** %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 16
  %69 = bitcast i8* %68 to %struct.lua_TValue**
  %load_target14 = load %struct.lua_TValue*, %struct.lua_TValue** %69
  %R5125 = bitcast %struct.lua_TValue* %load_target14 to i8*
  %R5126 = sub i8* %R5122, %R5125
  %R5127 = icmp sle i8* %R5126, i64 16
  %R512715 = zext i1 %R5127 to i32
  %cond16 = icmp ne i32 %R512715, 0
  br i1 %cond16, label %L875, label %L876

L875:                                             ; preds = %L874
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L876

L876:                                             ; preds = %L875, %L874
  %70 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %71 = bitcast %struct.lua_TValue** %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast i8* %72 to %struct.lua_TValue**
  %load_target17 = load %struct.lua_TValue*, %struct.lua_TValue** %73
  %74 = bitcast %struct.lua_TValue* %load_target17 to i8*
  %75 = getelementptr inbounds i8, i8* %74, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %76 = bitcast i8* %75 to %struct.lua_TValue*
  %77 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %78 = bitcast %struct.lua_TValue** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 16
  %80 = bitcast i8* %79 to %struct.lua_TValue**
  store %struct.lua_TValue* %76, %struct.lua_TValue** %80
  br label %L877

L877:                                             ; preds = %L876, %L870
  %R5133 = call i8* @strchr(i8* %39, i32 76)
  %cond18 = icmp ne i8* %R5133, null
  br i1 %cond18, label %L878, label %L879

L878:                                             ; preds = %L877
  call void @collectvalidlines(%struct.lua_State* %ARG1, { [56 x i8] }* %40)
  br label %L879

L879:                                             ; preds = %L878, %L877
  ret i32 %R5107
}

define internal i32 @isinstack(%struct.CallInfo* %ARG1, %struct.lua_TValue* %ARG2) {
L880:
  %0 = alloca %struct.lua_TValue*
  %1 = alloca i32
  %2 = bitcast %struct.CallInfo* %ARG1 to %struct.lua_TValue**
  %3 = bitcast %struct.lua_TValue** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %5
  store %struct.lua_TValue* %load_target, %struct.lua_TValue** %0
  br label %L881

L881:                                             ; preds = %L884, %L880
  %6 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %7 = bitcast %struct.CallInfo* %ARG1 to %struct.lua_TValue**
  %8 = bitcast %struct.lua_TValue** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %10
  %R5143 = icmp ult %struct.lua_TValue* %6, %load_target1
  %R51432 = zext i1 %R5143 to i32
  %cond = icmp ne i32 %R51432, 0
  br i1 %cond, label %L882, label %L885

L882:                                             ; preds = %L881
  %R5146 = icmp eq %struct.lua_TValue* %ARG2, %6
  %R51463 = zext i1 %R5146 to i32
  %cond4 = icmp ne i32 %R51463, 0
  br i1 %cond4, label %L883, label %L884

L883:                                             ; preds = %L882
  store i32 1, i32* %1
  br label %L886

L884:                                             ; preds = %L882
  %11 = bitcast %struct.lua_TValue* %6 to i8*
  %12 = getelementptr inbounds i8, i8* %11, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %13 = bitcast i8* %12 to %struct.lua_TValue*
  store %struct.lua_TValue* %13, %struct.lua_TValue** %0
  br label %L881

L885:                                             ; preds = %L881
  store i32 0, i32* %1
  br label %L886

L886:                                             ; preds = %L885, %L883
  %14 = load i32, i32* %1
  ret i32 %14
}

define internal void @luaG_typeerror.44(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i8* %ARG3) {
L887:
  %0 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R5153 = sext i32 %load_target to i64
  %R5154 = mul i64 %R5153, 8
  %4 = getelementptr inbounds i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 %R5154
  %5 = bitcast i8* %4 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i8**
  %load_target1 = load i8*, i8** %8
  %9 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %10 = bitcast %struct.CallInfo** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 40
  %12 = bitcast i8* %11 to %struct.CallInfo**
  %load_target2 = load %struct.CallInfo*, %struct.CallInfo** %12
  %R5160 = call i32 @isinstack(%struct.CallInfo* %load_target2, %struct.lua_TValue* %ARG2)
  br i1 false, label %L888, label %L889

L888:                                             ; preds = %L887
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i64 0, i64 0), i8* %ARG3, i8* null, i8* null, i8* %load_target1)
  br label %L890

L889:                                             ; preds = %L887
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.46, i64 0, i64 0), i8* %ARG3, i8* %load_target1)
  br label %L890

L890:                                             ; preds = %L889, %L888
  ret void
}

define internal void @luaG_concaterror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3) {
L891:
  %0 = alloca %struct.lua_TValue*
  %1 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R5175 = icmp eq i32 %load_target, 4
  %R51751 = zext i1 %R5175 to i32
  %cond = icmp ne i32 %R51751, 0
  br i1 %cond, label %L893, label %L892

L892:                                             ; preds = %L891
  %R5178 = icmp eq i32 %load_target, 3
  %R51782 = zext i1 %R5178 to i32
  store %struct.lua_TValue* %ARG2, %struct.lua_TValue** %0
  %cond3 = icmp ne i32 %R51782, 0
  br i1 %cond3, label %L893, label %L894

L893:                                             ; preds = %L892, %L891
  store %struct.lua_TValue* %ARG3, %struct.lua_TValue** %0
  br label %L894

L894:                                             ; preds = %L893, %L892
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  call void @luaG_typeerror(%struct.lua_State* %ARG1, %struct.lua_TValue* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0))
  ret void
}

define internal void @luaG_aritherror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3) {
L895:
  %temp_0x62d000a18ac8 = alloca %struct.lua_TValue
  %R5185 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %ARG2, %struct.lua_TValue* %temp_0x62d000a18ac8)
  %cond = icmp ne %struct.lua_TValue* %R5185, null
  %select = select i1 %cond, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG2
  call void @luaG_typeerror(%struct.lua_State* %ARG1, %struct.lua_TValue* %select, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i64 0, i64 0))
  ret void
}

declare %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue*, %struct.lua_TValue*)

define internal i32 @luaG_ordererror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3) {
L896:
  %0 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R5194 = sext i32 %load_target to i64
  %R5195 = mul i64 %R5194, 8
  %4 = getelementptr inbounds i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 %R5195
  %5 = bitcast i8* %4 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i8**
  %load_target1 = load i8*, i8** %8
  %9 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  %load_target2 = load i32, i32* %12
  %R5201 = sext i32 %load_target2 to i64
  %R5202 = mul i64 %R5201, 8
  %13 = getelementptr inbounds i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 %R5202
  %14 = bitcast i8* %13 to i8**
  %15 = bitcast i8** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i8**
  %load_target3 = load i8*, i8** %17
  %18 = getelementptr inbounds i8, i8* %load_target1, i64 2
  %load_target4 = load i8, i8* %18
  %R5207 = sext i8 %load_target4 to i32
  %19 = getelementptr inbounds i8, i8* %load_target3, i64 2
  %load_target5 = load i8, i8* %19
  %R5210 = sext i8 %load_target5 to i32
  %R5211 = icmp eq i32 %R5207, %R5210
  %R52116 = zext i1 %R5211 to i32
  %cond = icmp ne i32 %R52116, 0
  br i1 %cond, label %L897, label %L898

L897:                                             ; preds = %L896
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.49, i64 0, i64 0), i8* %load_target1)
  br label %L899

L898:                                             ; preds = %L896
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i64 0, i64 0), i8* %load_target1, i8* %load_target3)
  br label %L899

L899:                                             ; preds = %L898, %L897
  ret i32 0
}

define internal void @addinfo(%struct.lua_State* %ARG1, i8* %ARG2) {
L900:
  %buff_0x62d000a1a170 = alloca [60 x i8]
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1 = bitcast %struct.CallInfo** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 40
  %3 = bitcast i8* %2 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %3
  %4 = bitcast %struct.CallInfo* %load_target to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_TValue* %load_target1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  %load_target2 = load i32, i32* %11
  %R5225 = icmp eq i32 %load_target2, 6
  %R52253 = zext i1 %R5225 to i32
  %cond = icmp ne i32 %R52253, 0
  br i1 %cond, label %L901, label %L903

L901:                                             ; preds = %L900
  %12 = bitcast %struct.lua_TValue* %load_target1 to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %15
  %16 = bitcast { [184 x i8] }* %load_target4 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 10
  %load_target5 = load i8, i8* %17
  %cond6 = icmp ne i8 %load_target5, 0
  br i1 %cond6, label %L903, label %L902

L902:                                             ; preds = %L901
  %R5232 = call i32 @currentline(%struct.lua_State* %ARG1, %struct.CallInfo* %load_target)
  %R5233 = bitcast [60 x i8]* %buff_0x62d000a1a170 to i8*
  %R5235 = call %struct.Proto* @getluaproto(%struct.CallInfo* %load_target)
  %18 = bitcast %struct.Proto* %R5235 to { [24 x i8] }**
  %19 = bitcast { [24 x i8] }** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 64
  %21 = bitcast i8* %20 to { [24 x i8] }**
  %load_target7 = load { [24 x i8] }*, { [24 x i8] }** %21
  %22 = bitcast { [24 x i8] }* %load_target7 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 24
  %24 = bitcast i8* %23 to { [24 x i8] }*
  %R5238 = bitcast { [24 x i8] }* %24 to i8*
  call void @luaO_chunkid(i8* %R5233, i8* %R5238, i64 60)
  %R5244 = call i8* @luaO_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0), i8* %R5233, i32 %R5232, i8* %ARG2)
  br label %L903

L903:                                             ; preds = %L902, %L901, %L900
  ret void
}

define internal void @luaG_errormsg(%struct.lua_State* %ARG1) {
L904:
  %0 = bitcast %struct.lua_State* %ARG1 to i64*
  %1 = bitcast i64* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 176
  %3 = bitcast i8* %2 to i64*
  %load_target = load i64, i64* %3
  %cond = icmp ne i64 %load_target, 0
  br i1 %cond, label %L905, label %L910

L905:                                             ; preds = %L904
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 64
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %R5250 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %8 = getelementptr inbounds i8, i8* %R5250, i64 %load_target
  %R5254 = bitcast i8* %8 to %struct.lua_TValue*
  %9 = bitcast %struct.lua_TValue* %R5254 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  %load_target2 = load i32, i32* %12
  %R5257 = icmp eq i32 %load_target2, 6
  %R52573 = zext i1 %R5257 to i32
  %cond4 = icmp ne i32 %R52573, 0
  br i1 %cond4, label %L907, label %L906

L906:                                             ; preds = %L905
  call void @luaD_throw(%struct.lua_State* %ARG1, i32 5)
  br label %L907

L907:                                             ; preds = %L906, %L905
  %13 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %14 = bitcast %struct.lua_TValue** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %15 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %16
  %17 = bitcast %struct.lua_TValue* %load_target5 to { [8 x i8] }*
  %18 = bitcast { [8 x i8] }* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 -16
  %20 = bitcast i8* %19 to { [8 x i8] }*
  %load_target6 = load { [8 x i8] }, { [8 x i8] }* %20
  %21 = bitcast %struct.lua_TValue* %load_target5 to { [8 x i8] }*
  %22 = bitcast { [8 x i8] }* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to { [8 x i8] }*
  store { [8 x i8] } %load_target6, { [8 x i8] }* %24
  %25 = bitcast %struct.lua_TValue* %load_target5 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 -8
  %28 = bitcast i8* %27 to i32*
  %load_target7 = load i32, i32* %28
  %29 = bitcast %struct.lua_TValue* %load_target5 to i32*
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %load_target7, i32* %32
  %33 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %34 = bitcast %struct.lua_TValue** %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  %36 = bitcast i8* %35 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %36
  %37 = bitcast %struct.lua_TValue* %R5254 to { [8 x i8] }*
  %38 = bitcast { [8 x i8] }* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to { [8 x i8] }*
  %load_target9 = load { [8 x i8] }, { [8 x i8] }* %40
  %41 = bitcast %struct.lua_TValue* %load_target8 to { [8 x i8] }*
  %42 = bitcast { [8 x i8] }* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 -16
  %44 = bitcast i8* %43 to { [8 x i8] }*
  store { [8 x i8] } %load_target9, { [8 x i8] }* %44
  %45 = bitcast %struct.lua_TValue* %R5254 to i32*
  %46 = bitcast i32* %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  %48 = bitcast i8* %47 to i32*
  %load_target10 = load i32, i32* %48
  %49 = bitcast %struct.lua_TValue* %load_target8 to i32*
  %50 = bitcast i32* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 -8
  %52 = bitcast i8* %51 to i32*
  store i32 %load_target10, i32* %52
  %53 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %54 = bitcast %struct.lua_TValue** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 56
  %56 = bitcast i8* %55 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %56
  %R5284 = bitcast %struct.lua_TValue* %load_target11 to i8*
  %57 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %58 = bitcast %struct.lua_TValue** %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 16
  %60 = bitcast i8* %59 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %60
  %R5287 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %R5288 = sub i8* %R5284, %R5287
  %R5289 = icmp sle i8* %R5288, i64 16
  %R528913 = zext i1 %R5289 to i32
  %cond14 = icmp ne i32 %R528913, 0
  br i1 %cond14, label %L908, label %L909

L908:                                             ; preds = %L907
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 1)
  br label %L909

L909:                                             ; preds = %L908, %L907
  %61 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %62 = bitcast %struct.lua_TValue** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 16
  %64 = bitcast i8* %63 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %64
  %65 = bitcast %struct.lua_TValue* %load_target15 to i8*
  %66 = getelementptr inbounds i8, i8* %65, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %67 = bitcast i8* %66 to %struct.lua_TValue*
  %68 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %69 = bitcast %struct.lua_TValue** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to %struct.lua_TValue**
  store %struct.lua_TValue* %67, %struct.lua_TValue** %71
  %72 = bitcast %struct.lua_TValue* %67 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 -32
  %74 = bitcast i8* %73 to %struct.lua_TValue*
  call void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %74, i32 1)
  br label %L910

L910:                                             ; preds = %L909, %L904
  call void @luaD_throw(%struct.lua_State* %ARG1, i32 2)
  ret void
}

define internal void @luaG_runerror.52(%struct.lua_State* %ARG1, i8* %ARG2) {
L911:
  %fmt_0x62d000a1c040 = alloca i8*
  %0 = bitcast i8** %fmt_0x62d000a1c040 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i8**
  store i8* %ARG2, i8** %2
  %R5300 = bitcast i8** %fmt_0x62d000a1c040 to i8*
  %R5305 = call i8* @luaO_pushvfstring(%struct.lua_State* %ARG1, i8* %ARG2, i8* %R5300)
  call void @addinfo(%struct.lua_State* %ARG1, i8* %R5305)
  call void @luaG_errormsg(%struct.lua_State* %ARG1)
  ret void
}

define internal i32 @luaZ_fill(%struct.Zio* %ARG1) {
L912:
  %size_0x62d000a3c988 = alloca i64
  %0 = alloca i32
  %1 = bitcast %struct.Zio* %ARG1 to %struct.lua_State**
  %2 = bitcast %struct.lua_State** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %4
  %5 = bitcast %struct.Zio* %ARG1 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  %8 = bitcast i8* %7 to i8**
  %load_target1 = load i8*, i8** %8
  %9 = bitcast %struct.Zio* %ARG1 to i8* (%struct.lua_State*, i8*, i64*)**
  %10 = bitcast i8* (%struct.lua_State*, i8*, i64*)** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to i8* (%struct.lua_State*, i8*, i64*)**
  %load_target2 = load i8* (%struct.lua_State*, i8*, i64*)*, i8* (%struct.lua_State*, i8*, i64*)** %12
  %R5315 = call i8* %load_target2(%struct.lua_State* %load_target, i8* %load_target1, i64* %size_0x62d000a3c988)
  %R5317 = icmp eq i8* %R5315, null
  %R53173 = zext i1 %R5317 to i32
  %13 = bitcast i64* %size_0x62d000a3c988 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i64*
  %load_target4 = load i64, i64* %15
  %R5319 = icmp eq i64 %load_target4, 0
  %R53195 = zext i1 %R5319 to i32
  %16 = icmp ne i32 %R53173, 0
  %17 = icmp ne i32 %R53195, 0
  %R5320 = or i1 %16, %17
  %R53206 = zext i1 %R5320 to i32
  %cond = icmp ne i32 %R53206, 0
  br i1 %cond, label %L913, label %L914

L913:                                             ; preds = %L912
  store i32 -1, i32* %0
  br label %L915

L914:                                             ; preds = %L912
  %R5323 = add i64 %load_target4, -1
  %18 = bitcast %struct.Zio* %ARG1 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to i64*
  store i64 %R5323, i64* %21
  %22 = getelementptr inbounds i8, i8* %R5315, inttoptr (i64 1 to i8*)
  %23 = bitcast %struct.Zio* %ARG1 to i8**
  %24 = bitcast i8** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i8**
  store i8* %22, i8** %26
  %27 = getelementptr inbounds i8, i8* %R5315, i64 0
  %load_target7 = load i8, i8* %27
  %R5332 = zext i8 %load_target7 to i32
  store i32 %R5332, i32* %0
  br label %L915

L915:                                             ; preds = %L914, %L913
  %28 = load i32, i32* %0
  ret i32 %28
}

define internal void @luaZ_init(%struct.lua_State* %ARG1, %struct.Zio* %ARG2, i8* (%struct.lua_State*, i8*, i64*)* %ARG3, i8* %ARG4) {
L916:
  %0 = bitcast %struct.Zio* %ARG2 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.lua_State**
  store %struct.lua_State* %ARG1, %struct.lua_State** %3
  %4 = bitcast %struct.Zio* %ARG2 to i8* (%struct.lua_State*, i8*, i64*)**
  %5 = bitcast i8* (%struct.lua_State*, i8*, i64*)** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to i8* (%struct.lua_State*, i8*, i64*)**
  store i8* (%struct.lua_State*, i8*, i64*)* %ARG3, i8* (%struct.lua_State*, i8*, i64*)** %7
  %8 = bitcast %struct.Zio* %ARG2 to i8**
  %9 = bitcast i8** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to i8**
  store i8* %ARG4, i8** %11
  %12 = bitcast %struct.Zio* %ARG2 to i64*
  %13 = bitcast i64* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15
  %16 = bitcast %struct.Zio* %ARG2 to i8**
  %17 = bitcast i8** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i8**
  store i8* null, i8** %19
  ret void
}

define internal i8* @luaZ_openspace(%struct.lua_State* %ARG1, %struct.Mbuffer* %ARG2, i64 %ARG3) {
L917:
  %0 = alloca i8*
  %1 = bitcast %struct.Mbuffer* %ARG2 to i64*
  %2 = bitcast i64* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to i64*
  %load_target = load i64, i64* %4
  %R5344 = icmp ugt i64 %ARG3, %load_target
  %R53441 = zext i1 %R5344 to i32
  %cond = icmp ne i32 %R53441, 0
  br i1 %cond, label %L918, label %L922

L918:                                             ; preds = %L917
  %R5346 = icmp ult i64 %ARG3, 32
  %R53462 = zext i1 %R5346 to i32
  %cond3 = icmp ne i32 %R53462, 0
  %select = select i1 %cond3, i64 32, i64 %ARG3
  %R5348 = add i64 %select, 1
  %R5350 = icmp ule i64 %R5348, -3
  %R53504 = zext i1 %R5350 to i32
  %cond5 = icmp ne i32 %R53504, 0
  br i1 %cond5, label %L919, label %L920

L919:                                             ; preds = %L918
  %5 = bitcast %struct.Mbuffer* %ARG2 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i8**
  %load_target6 = load i8*, i8** %8
  %R5360 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %load_target6, i64 %load_target, i64 %select)
  store i8* %R5360, i8** %0
  br label %L921

L920:                                             ; preds = %L918
  %R5362 = call i8* @luaM_toobig(%struct.lua_State* %ARG1)
  store i8* %R5362, i8** %0
  br label %L921

L921:                                             ; preds = %L920, %L919
  %9 = load i8*, i8** %0
  %10 = bitcast %struct.Mbuffer* %ARG2 to i8**
  %11 = bitcast i8** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i8**
  store i8* %9, i8** %13
  %14 = bitcast %struct.Mbuffer* %ARG2 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %select, i64* %17
  br label %L922

L922:                                             ; preds = %L921, %L917
  %18 = bitcast %struct.Mbuffer* %ARG2 to i8**
  %19 = bitcast i8** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to i8**
  %load_target7 = load i8*, i8** %21
  ret i8* %load_target7
}

define internal void @save(%struct.LexState* %ARG1, i32 %ARG2) {
L923:
  %0 = alloca i8*
  %1 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %2 = bitcast %struct.Mbuffer** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 72
  %4 = bitcast i8* %3 to %struct.Mbuffer**
  %load_target = load %struct.Mbuffer*, %struct.Mbuffer** %4
  %5 = bitcast %struct.Mbuffer* %load_target to i64*
  %6 = bitcast i64* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i64*
  %load_target1 = load i64, i64* %8
  %R5376 = add i64 %load_target1, 1
  %9 = bitcast %struct.Mbuffer* %load_target to i64*
  %10 = bitcast i64* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to i64*
  %load_target2 = load i64, i64* %12
  %R5379 = icmp ugt i64 %R5376, %load_target2
  %R53793 = zext i1 %R5379 to i32
  %cond = icmp ne i32 %R53793, 0
  br i1 %cond, label %L924, label %L930

L924:                                             ; preds = %L923
  %R5382 = icmp uge i64 %load_target2, 9223372036854775806
  %R53824 = zext i1 %R5382 to i32
  %cond5 = icmp ne i32 %R53824, 0
  br i1 %cond5, label %L925, label %L926

L925:                                             ; preds = %L924
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i64 0, i64 0), i32 0)
  br label %L926

L926:                                             ; preds = %L925, %L924
  %13 = bitcast %struct.Mbuffer* %load_target to i64*
  %14 = bitcast i64* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %15 to i64*
  %load_target6 = load i64, i64* %16
  %R5387 = mul i64 %load_target6, 2
  %R5389 = add i64 %R5387, 1
  %R5391 = icmp ule i64 %R5389, -3
  %R53917 = zext i1 %R5391 to i32
  %cond8 = icmp ne i32 %R53917, 0
  br i1 %cond8, label %L927, label %L928

L927:                                             ; preds = %L926
  %17 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %18 = bitcast %struct.lua_State** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 56
  %20 = bitcast i8* %19 to %struct.lua_State**
  %load_target9 = load %struct.lua_State*, %struct.lua_State** %20
  %21 = bitcast %struct.Mbuffer* %load_target to i8**
  %22 = bitcast i8** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to i8**
  %load_target10 = load i8*, i8** %24
  %R5402 = call i8* @luaM_realloc_(%struct.lua_State* %load_target9, i8* %load_target10, i64 %load_target6, i64 %R5387)
  store i8* %R5402, i8** %0
  br label %L929

L928:                                             ; preds = %L926
  %25 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %26 = bitcast %struct.lua_State** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 56
  %28 = bitcast i8* %27 to %struct.lua_State**
  %load_target11 = load %struct.lua_State*, %struct.lua_State** %28
  %R5405 = call i8* @luaM_toobig(%struct.lua_State* %load_target11)
  store i8* %R5405, i8** %0
  br label %L929

L929:                                             ; preds = %L928, %L927
  %29 = load i8*, i8** %0
  %30 = bitcast %struct.Mbuffer* %load_target to i8**
  %31 = bitcast i8** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i8**
  store i8* %29, i8** %33
  %34 = bitcast %struct.Mbuffer* %load_target to i64*
  %35 = bitcast i64* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 16
  %37 = bitcast i8* %36 to i64*
  store i64 %R5387, i64* %37
  br label %L930

L930:                                             ; preds = %L929, %L923
  %R5413 = trunc i32 %ARG2 to i8
  %38 = bitcast %struct.Mbuffer* %load_target to i8**
  %39 = bitcast i8** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = bitcast i8* %40 to i8**
  %load_target12 = load i8*, i8** %41
  %42 = bitcast %struct.Mbuffer* %load_target to i64*
  %43 = bitcast i64* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = bitcast i8* %44 to i64*
  %load_target13 = load i64, i64* %45
  %R5418 = add i64 %load_target13, 1
  %46 = bitcast %struct.Mbuffer* %load_target to i64*
  %47 = bitcast i64* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to i64*
  store i64 %R5418, i64* %49
  %50 = getelementptr inbounds i8, i8* %load_target12, i64 %load_target13
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  store i8 %R5413, i8* %51
  ret void
}

declare void @luaX_lexerror(%struct.LexState*, i8*, i32)

define internal void @luaX_init.55(%struct.lua_State* %ARG1) {
L931:
  %0 = alloca i32
  store i32 0, i32* %0
  br label %L932

L932:                                             ; preds = %L933, %L931
  %1 = load i32, i32* %0
  %R5421 = icmp slt i32 %1, 21
  %R54211 = zext i1 %R5421 to i32
  %cond = icmp ne i32 %R54211, 0
  br i1 %cond, label %L933, label %L934

L933:                                             ; preds = %L932
  %R5425 = sext i32 %1 to i64
  %R5426 = mul i64 %R5425, 8
  %2 = getelementptr inbounds i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 %R5426
  %3 = bitcast i8* %2 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i8**
  %load_target = load i8*, i8** %6
  %R5435 = call i64 @strlen(i8* %load_target)
  %R5436 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %load_target, i64 %R5435)
  %7 = bitcast { [24 x i8] }* %R5436 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 9
  %load_target2 = load i8, i8* %8
  %R5439 = zext i8 %load_target2 to i32
  %R5440 = or i32 %R5439, 32
  %R5441 = trunc i32 %R5440 to i8
  %9 = bitcast { [24 x i8] }* %R5436 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 9
  store i8 %R5441, i8* %10
  %R5443 = add i32 %1, 1
  %R5444 = trunc i32 %R5443 to i8
  %11 = bitcast { [24 x i8] }* %R5436 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 10
  store i8 %R5444, i8* %12
  store i32 %R5443, i32* %0
  br label %L932

L934:                                             ; preds = %L932
  ret void
}

define internal i8* @luaX_token2str(%struct.LexState* %ARG1, i32 %ARG2) {
L935:
  %0 = alloca i8*
  %1 = alloca i8*
  %R5449 = icmp slt i32 %ARG2, 257
  %R54491 = zext i1 %R5449 to i32
  %cond = icmp ne i32 %R54491, 0
  br i1 %cond, label %L936, label %L940

L936:                                             ; preds = %L935
  %R5450 = call i16** @__ctype_b_loc()
  %2 = bitcast i16** %R5450 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i16**
  %load_target = load i16*, i16** %4
  %R5454 = sext i32 %ARG2 to i64
  %R5455 = mul i64 %R5454, 2
  %5 = bitcast i16* %load_target to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 %R5455
  %7 = bitcast i8* %6 to i16*
  %8 = bitcast i16* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i16*
  %load_target2 = load i16, i16* %10
  %R5458 = zext i16 %load_target2 to i32
  %R5459 = and i32 %R5458, 2
  %cond3 = icmp ne i32 %R5459, 0
  br i1 %cond3, label %L937, label %L938

L937:                                             ; preds = %L936
  %11 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %12 = bitcast %struct.lua_State** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 56
  %14 = bitcast i8* %13 to %struct.lua_State**
  %load_target4 = load %struct.lua_State*, %struct.lua_State** %14
  %R5464 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i32 %ARG2)
  store i8* %R5464, i8** %0
  br label %L939

L938:                                             ; preds = %L936
  %15 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %16 = bitcast %struct.lua_State** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 56
  %18 = bitcast i8* %17 to %struct.lua_State**
  %load_target5 = load %struct.lua_State*, %struct.lua_State** %18
  %R5469 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i32 %ARG2)
  store i8* %R5469, i8** %0
  br label %L939

L939:                                             ; preds = %L938, %L937
  %19 = load i8*, i8** %0
  store i8* %19, i8** %1
  br label %L941

L940:                                             ; preds = %L935
  %R5474 = add i32 %ARG2, -257
  %R5475 = sext i32 %R5474 to i64
  %R5476 = mul i64 %R5475, 8
  %20 = getelementptr inbounds i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 %R5476
  %21 = bitcast i8* %20 to i8**
  %22 = bitcast i8** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to i8**
  %load_target6 = load i8*, i8** %24
  store i8* %load_target6, i8** %1
  br label %L941

L941:                                             ; preds = %L940, %L939
  %25 = load i8*, i8** %1
  ret i8* %25
}

define internal i8* @txtToken(%struct.LexState* %ARG1, i32 %ARG2) {
L942:
  %0 = alloca i8*
  switch i32 %ARG2, label %L944 [
    i32 284, label %L943
    i32 285, label %L943
    i32 286, label %L943
  ]

L943:                                             ; preds = %L942, %L942, %L942
  call void @save(%struct.LexState* %ARG1, i32 0)
  %1 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %2 = bitcast %struct.Mbuffer** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 72
  %4 = bitcast i8* %3 to %struct.Mbuffer**
  %load_target = load %struct.Mbuffer*, %struct.Mbuffer** %4
  %5 = bitcast %struct.Mbuffer* %load_target to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i8**
  %load_target1 = load i8*, i8** %8
  store i8* %load_target1, i8** %0
  br label %L945

L944:                                             ; preds = %L942
  %R5487 = call i8* @luaX_token2str(%struct.LexState* %ARG1, i32 %ARG2)
  store i8* %R5487, i8** %0
  br label %L945

L945:                                             ; preds = %L944, %L943
  %9 = load i8*, i8** %0
  ret i8* %9
}

define internal void @luaX_lexerror.58(%struct.LexState* %ARG1, i8* %ARG2, i32 %ARG3) {
L946:
  %buff_0x62d000a42998 = alloca [80 x i8]
  %R5488 = bitcast [80 x i8]* %buff_0x62d000a42998 to i8*
  %0 = bitcast %struct.LexState* %ARG1 to { [24 x i8] }**
  %1 = bitcast { [24 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 80
  %3 = bitcast i8* %2 to { [24 x i8] }**
  %load_target = load { [24 x i8] }*, { [24 x i8] }** %3
  %4 = bitcast { [24 x i8] }* %load_target to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = bitcast i8* %5 to { [24 x i8] }*
  %R5492 = bitcast { [24 x i8] }* %6 to i8*
  call void @luaO_chunkid(i8* %R5488, i8* %R5492, i64 80)
  %7 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %8 = bitcast %struct.lua_State** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 56
  %10 = bitcast i8* %9 to %struct.lua_State**
  %load_target1 = load %struct.lua_State*, %struct.lua_State** %10
  %11 = bitcast %struct.LexState* %ARG1 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4
  %14 = bitcast i8* %13 to i32*
  %load_target2 = load i32, i32* %14
  %R5500 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), i8* %R5488, i32 %load_target2, i8* %ARG2)
  %cond = icmp ne i32 %ARG3, 0
  br i1 %cond, label %L947, label %L948

L947:                                             ; preds = %L946
  %15 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %16 = bitcast %struct.lua_State** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 56
  %18 = bitcast i8* %17 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %18
  %R5508 = call i8* @txtToken(%struct.LexState* %ARG1, i32 %ARG3)
  %R5509 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i64 0, i64 0), i8* %R5500, i8* %R5508)
  br label %L948

L948:                                             ; preds = %L947, %L946
  %19 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %20 = bitcast %struct.lua_State** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 56
  %22 = bitcast i8* %21 to %struct.lua_State**
  %load_target4 = load %struct.lua_State*, %struct.lua_State** %22
  call void @luaD_throw(%struct.lua_State* %load_target4, i32 3)
  ret void
}

define internal void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* %ARG2) {
L949:
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* %ARG2, i32 %load_target)
  ret void
}

define internal { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* %ARG2, i64 %ARG3) {
L950:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 56
  %3 = bitcast i8* %2 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %3
  %R5521 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %load_target, i8* %ARG2, i64 %ARG3)
  %4 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %5 = bitcast %struct.FuncState** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 48
  %7 = bitcast i8* %6 to %struct.FuncState**
  %load_target1 = load %struct.FuncState*, %struct.FuncState** %7
  %8 = bitcast %struct.FuncState* %load_target1 to %struct.Table**
  %9 = bitcast %struct.Table** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to %struct.Table**
  %load_target2 = load %struct.Table*, %struct.Table** %11
  %R5527 = call %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %load_target, %struct.Table* %load_target2, { [24 x i8] }* %R5521)
  %12 = bitcast %struct.lua_TValue* %R5527 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  %cond = icmp ne i32 %load_target3, 0
  br i1 %cond, label %L953, label %L951

L951:                                             ; preds = %L950
  %16 = bitcast %struct.lua_TValue* %R5527 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19
  %20 = bitcast %struct.lua_TValue* %R5527 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23
  %24 = bitcast %struct.lua_State* %load_target to %struct.global_State**
  %25 = bitcast %struct.global_State** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 32
  %27 = bitcast i8* %26 to %struct.global_State**
  %load_target4 = load %struct.global_State*, %struct.global_State** %27
  %28 = bitcast %struct.global_State* %load_target4 to i64*
  %29 = bitcast i64* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 120
  %31 = bitcast i8* %30 to i64*
  %load_target5 = load i64, i64* %31
  %32 = bitcast %struct.global_State* %load_target4 to i64*
  %33 = bitcast i64* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 112
  %35 = bitcast i8* %34 to i64*
  %load_target6 = load i64, i64* %35
  %R5540 = icmp uge i64 %load_target5, %load_target6
  %R55407 = zext i1 %R5540 to i32
  %cond8 = icmp ne i32 %R55407, 0
  br i1 %cond8, label %L952, label %L953

L952:                                             ; preds = %L951
  call void @luaC_step(%struct.lua_State* %load_target)
  br label %L953

L953:                                             ; preds = %L952, %L951, %L950
  ret { [24 x i8] }* %R5521
}

define internal void @inclinenumber(%struct.LexState* %ARG1) {
L954:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.LexState* %ARG1 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %6 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %7 = bitcast %struct.Zio** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 64
  %9 = bitcast i8* %8 to %struct.Zio**
  %load_target1 = load %struct.Zio*, %struct.Zio** %9
  %10 = bitcast %struct.Zio* %load_target1 to i64*
  %11 = bitcast i64* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i64*
  %load_target2 = load i64, i64* %13
  %R5549 = add i64 %load_target2, -1
  %14 = bitcast %struct.Zio* %load_target1 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i64*
  store i64 %R5549, i64* %17
  %R5550 = icmp ugt i64 %load_target2, 0
  %R55503 = zext i1 %R5550 to i32
  %cond = icmp ne i32 %R55503, 0
  br i1 %cond, label %L955, label %L956

L955:                                             ; preds = %L954
  %18 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %19 = bitcast %struct.Zio** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 64
  %21 = bitcast i8* %20 to %struct.Zio**
  %load_target4 = load %struct.Zio*, %struct.Zio** %21
  %22 = bitcast %struct.Zio* %load_target4 to i8**
  %23 = bitcast i8** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i8**
  %load_target5 = load i8*, i8** %25
  %26 = getelementptr inbounds i8, i8* %load_target5, inttoptr (i64 1 to i8*)
  %27 = bitcast %struct.Zio* %load_target4 to i8**
  %28 = bitcast i8** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i8**
  store i8* %26, i8** %30
  %31 = getelementptr inbounds i8, i8* %load_target5, i64 0
  %load_target6 = load i8, i8* %31
  %R5557 = zext i8 %load_target6 to i32
  store i32 %R5557, i32* %0
  br label %L957

L956:                                             ; preds = %L954
  %32 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %33 = bitcast %struct.Zio** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 64
  %35 = bitcast i8* %34 to %struct.Zio**
  %load_target7 = load %struct.Zio*, %struct.Zio** %35
  %R5560 = call i32 @luaZ_fill(%struct.Zio* %load_target7)
  store i32 %R5560, i32* %0
  br label %L957

L957:                                             ; preds = %L956, %L955
  %36 = load i32, i32* %0
  %37 = bitcast %struct.LexState* %ARG1 to i32*
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to i32*
  store i32 %36, i32* %40
  %R5565 = icmp eq i32 %36, 10
  %R55658 = zext i1 %R5565 to i32
  %cond9 = icmp ne i32 %R55658, 0
  br i1 %cond9, label %L959, label %L958

L958:                                             ; preds = %L957
  %R5568 = icmp eq i32 %36, 13
  %R556810 = zext i1 %R5568 to i32
  %cond11 = icmp ne i32 %R556810, 0
  br i1 %cond11, label %L959, label %L964

L959:                                             ; preds = %L958, %L957
  %R5572 = icmp ne i32 %36, %load_target
  %R557212 = zext i1 %R5572 to i32
  %cond13 = icmp ne i32 %R557212, 0
  br i1 %cond13, label %L960, label %L964

L960:                                             ; preds = %L959
  %41 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %42 = bitcast %struct.Zio** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 64
  %44 = bitcast i8* %43 to %struct.Zio**
  %load_target14 = load %struct.Zio*, %struct.Zio** %44
  %45 = bitcast %struct.Zio* %load_target14 to i64*
  %46 = bitcast i64* %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 0
  %48 = bitcast i8* %47 to i64*
  %load_target15 = load i64, i64* %48
  %R5576 = add i64 %load_target15, -1
  %49 = bitcast %struct.Zio* %load_target14 to i64*
  %50 = bitcast i64* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %52 = bitcast i8* %51 to i64*
  store i64 %R5576, i64* %52
  %R5577 = icmp ugt i64 %load_target15, 0
  %R557716 = zext i1 %R5577 to i32
  %cond17 = icmp ne i32 %R557716, 0
  br i1 %cond17, label %L961, label %L962

L961:                                             ; preds = %L960
  %53 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %54 = bitcast %struct.Zio** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 64
  %56 = bitcast i8* %55 to %struct.Zio**
  %load_target18 = load %struct.Zio*, %struct.Zio** %56
  %57 = bitcast %struct.Zio* %load_target18 to i8**
  %58 = bitcast i8** %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  %60 = bitcast i8* %59 to i8**
  %load_target19 = load i8*, i8** %60
  %61 = getelementptr inbounds i8, i8* %load_target19, inttoptr (i64 1 to i8*)
  %62 = bitcast %struct.Zio* %load_target18 to i8**
  %63 = bitcast i8** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 8
  %65 = bitcast i8* %64 to i8**
  store i8* %61, i8** %65
  %66 = getelementptr inbounds i8, i8* %load_target19, i64 0
  %load_target20 = load i8, i8* %66
  %R5584 = zext i8 %load_target20 to i32
  store i32 %R5584, i32* %1
  br label %L963

L962:                                             ; preds = %L960
  %67 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %68 = bitcast %struct.Zio** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 64
  %70 = bitcast i8* %69 to %struct.Zio**
  %load_target21 = load %struct.Zio*, %struct.Zio** %70
  %R5587 = call i32 @luaZ_fill(%struct.Zio* %load_target21)
  store i32 %R5587, i32* %1
  br label %L963

L963:                                             ; preds = %L962, %L961
  %71 = load i32, i32* %1
  %72 = bitcast %struct.LexState* %ARG1 to i32*
  %73 = bitcast i32* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 0
  %75 = bitcast i8* %74 to i32*
  store i32 %71, i32* %75
  br label %L964

L964:                                             ; preds = %L963, %L959, %L958
  %76 = bitcast %struct.LexState* %ARG1 to i32*
  %77 = bitcast i32* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 4
  %79 = bitcast i8* %78 to i32*
  %load_target22 = load i32, i32* %79
  %R5592 = add i32 %load_target22, 1
  %80 = bitcast %struct.LexState* %ARG1 to i32*
  %81 = bitcast i32* %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  %83 = bitcast i8* %82 to i32*
  store i32 %R5592, i32* %83
  %R5593 = icmp sge i32 %R5592, 2147483645
  %R559323 = zext i1 %R5593 to i32
  %cond24 = icmp ne i32 %R559323, 0
  br i1 %cond24, label %L965, label %L966

L965:                                             ; preds = %L964
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i64 0, i64 0))
  br label %L966

L966:                                             ; preds = %L965, %L964
  ret void
}

define internal void @luaX_setinput(%struct.lua_State* %ARG1, %struct.LexState* %ARG2, %struct.Zio* %ARG3, { [24 x i8] }* %ARG4) {
L967:
  %0 = alloca i32
  %1 = bitcast %struct.LexState* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 88
  store i8 46, i8* %2
  %3 = bitcast %struct.LexState* %ARG2 to %struct.lua_State**
  %4 = bitcast %struct.lua_State** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 56
  %6 = bitcast i8* %5 to %struct.lua_State**
  store %struct.lua_State* %ARG1, %struct.lua_State** %6
  %7 = bitcast %struct.LexState* %ARG2 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 32
  %10 = bitcast i8* %9 to i32*
  store i32 287, i32* %10
  %11 = bitcast %struct.LexState* %ARG2 to %struct.Zio**
  %12 = bitcast %struct.Zio** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 64
  %14 = bitcast i8* %13 to %struct.Zio**
  store %struct.Zio* %ARG3, %struct.Zio** %14
  %15 = bitcast %struct.LexState* %ARG2 to %struct.FuncState**
  %16 = bitcast %struct.FuncState** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 48
  %18 = bitcast i8* %17 to %struct.FuncState**
  store %struct.FuncState* null, %struct.FuncState** %18
  %19 = bitcast %struct.LexState* %ARG2 to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22
  %23 = bitcast %struct.LexState* %ARG2 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 1, i32* %26
  %27 = bitcast %struct.LexState* %ARG2 to { [24 x i8] }**
  %28 = bitcast { [24 x i8] }** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 80
  %30 = bitcast i8* %29 to { [24 x i8] }**
  store { [24 x i8] }* %ARG4, { [24 x i8] }** %30
  %31 = bitcast %struct.LexState* %ARG2 to %struct.Mbuffer**
  %32 = bitcast %struct.Mbuffer** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 72
  %34 = bitcast i8* %33 to %struct.Mbuffer**
  %load_target = load %struct.Mbuffer*, %struct.Mbuffer** %34
  %35 = bitcast %struct.Mbuffer* %load_target to i8**
  %36 = bitcast i8** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to i8**
  %load_target1 = load i8*, i8** %38
  %39 = bitcast %struct.Mbuffer* %load_target to i64*
  %40 = bitcast i64* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 16
  %42 = bitcast i8* %41 to i64*
  %load_target2 = load i64, i64* %42
  %R5617 = call i8* @luaM_realloc_(%struct.lua_State* %ARG1, i8* %load_target1, i64 %load_target2, i64 32)
  %43 = bitcast %struct.LexState* %ARG2 to %struct.Mbuffer**
  %44 = bitcast %struct.Mbuffer** %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 72
  %46 = bitcast i8* %45 to %struct.Mbuffer**
  %load_target3 = load %struct.Mbuffer*, %struct.Mbuffer** %46
  %47 = bitcast %struct.Mbuffer* %load_target3 to i8**
  %48 = bitcast i8** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 0
  %50 = bitcast i8* %49 to i8**
  store i8* %R5617, i8** %50
  %51 = bitcast %struct.LexState* %ARG2 to %struct.Mbuffer**
  %52 = bitcast %struct.Mbuffer** %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 72
  %54 = bitcast i8* %53 to %struct.Mbuffer**
  %load_target4 = load %struct.Mbuffer*, %struct.Mbuffer** %54
  %55 = bitcast %struct.Mbuffer* %load_target4 to i64*
  %56 = bitcast i64* %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to i64*
  store i64 32, i64* %58
  %59 = bitcast %struct.LexState* %ARG2 to %struct.Zio**
  %60 = bitcast %struct.Zio** %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 64
  %62 = bitcast i8* %61 to %struct.Zio**
  %load_target5 = load %struct.Zio*, %struct.Zio** %62
  %63 = bitcast %struct.Zio* %load_target5 to i64*
  %64 = bitcast i64* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 0
  %66 = bitcast i8* %65 to i64*
  %load_target6 = load i64, i64* %66
  %R5626 = add i64 %load_target6, -1
  %67 = bitcast %struct.Zio* %load_target5 to i64*
  %68 = bitcast i64* %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 0
  %70 = bitcast i8* %69 to i64*
  store i64 %R5626, i64* %70
  %R5627 = icmp ugt i64 %load_target6, 0
  %R56277 = zext i1 %R5627 to i32
  %cond = icmp ne i32 %R56277, 0
  br i1 %cond, label %L968, label %L969

L968:                                             ; preds = %L967
  %71 = bitcast %struct.LexState* %ARG2 to %struct.Zio**
  %72 = bitcast %struct.Zio** %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 64
  %74 = bitcast i8* %73 to %struct.Zio**
  %load_target8 = load %struct.Zio*, %struct.Zio** %74
  %75 = bitcast %struct.Zio* %load_target8 to i8**
  %76 = bitcast i8** %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = bitcast i8* %77 to i8**
  %load_target9 = load i8*, i8** %78
  %79 = getelementptr inbounds i8, i8* %load_target9, inttoptr (i64 1 to i8*)
  %80 = bitcast %struct.Zio* %load_target8 to i8**
  %81 = bitcast i8** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = bitcast i8* %82 to i8**
  store i8* %79, i8** %83
  %84 = getelementptr inbounds i8, i8* %load_target9, i64 0
  %load_target10 = load i8, i8* %84
  %R5634 = zext i8 %load_target10 to i32
  store i32 %R5634, i32* %0
  br label %L970

L969:                                             ; preds = %L967
  %85 = bitcast %struct.LexState* %ARG2 to %struct.Zio**
  %86 = bitcast %struct.Zio** %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 64
  %88 = bitcast i8* %87 to %struct.Zio**
  %load_target11 = load %struct.Zio*, %struct.Zio** %88
  %R5637 = call i32 @luaZ_fill(%struct.Zio* %load_target11)
  store i32 %R5637, i32* %0
  br label %L970

L970:                                             ; preds = %L969, %L968
  %89 = load i32, i32* %0
  %90 = bitcast %struct.LexState* %ARG2 to i32*
  %91 = bitcast i32* %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 0
  %93 = bitcast i8* %92 to i32*
  store i32 %89, i32* %93
  ret void
}

define internal i32 @check_next(%struct.LexState* %ARG1, i8* %ARG2) {
L971:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.LexState* %ARG1 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %R5643 = call i8* @strchr(i8* %ARG2, i32 %load_target)
  %cond = icmp ne i8* %R5643, null
  br i1 %cond, label %L973, label %L972

L972:                                             ; preds = %L971
  store i32 0, i32* %1
  br label %L977

L973:                                             ; preds = %L971
  %6 = bitcast %struct.LexState* %ARG1 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i32*
  %load_target1 = load i32, i32* %9
  call void @save(%struct.LexState* %ARG1, i32 %load_target1)
  %10 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %11 = bitcast %struct.Zio** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 64
  %13 = bitcast i8* %12 to %struct.Zio**
  %load_target2 = load %struct.Zio*, %struct.Zio** %13
  %14 = bitcast %struct.Zio* %load_target2 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i64*
  %load_target3 = load i64, i64* %17
  %R5651 = add i64 %load_target3, -1
  %18 = bitcast %struct.Zio* %load_target2 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to i64*
  store i64 %R5651, i64* %21
  %R5652 = icmp ugt i64 %load_target3, 0
  %R56524 = zext i1 %R5652 to i32
  %cond5 = icmp ne i32 %R56524, 0
  br i1 %cond5, label %L974, label %L975

L974:                                             ; preds = %L973
  %22 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %23 = bitcast %struct.Zio** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 64
  %25 = bitcast i8* %24 to %struct.Zio**
  %load_target6 = load %struct.Zio*, %struct.Zio** %25
  %26 = bitcast %struct.Zio* %load_target6 to i8**
  %27 = bitcast i8** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to i8**
  %load_target7 = load i8*, i8** %29
  %30 = getelementptr inbounds i8, i8* %load_target7, inttoptr (i64 1 to i8*)
  %31 = bitcast %struct.Zio* %load_target6 to i8**
  %32 = bitcast i8** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to i8**
  store i8* %30, i8** %34
  %35 = getelementptr inbounds i8, i8* %load_target7, i64 0
  %load_target8 = load i8, i8* %35
  %R5659 = zext i8 %load_target8 to i32
  store i32 %R5659, i32* %0
  br label %L976

L975:                                             ; preds = %L973
  %36 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %37 = bitcast %struct.Zio** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 64
  %39 = bitcast i8* %38 to %struct.Zio**
  %load_target9 = load %struct.Zio*, %struct.Zio** %39
  %R5662 = call i32 @luaZ_fill(%struct.Zio* %load_target9)
  store i32 %R5662, i32* %0
  br label %L976

L976:                                             ; preds = %L975, %L974
  %40 = load i32, i32* %0
  %41 = bitcast %struct.LexState* %ARG1 to i32*
  %42 = bitcast i32* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 0
  %44 = bitcast i8* %43 to i32*
  store i32 %40, i32* %44
  store i32 1, i32* %1
  br label %L977

L977:                                             ; preds = %L976, %L972
  %45 = load i32, i32* %1
  ret i32 %45
}

define internal void @buffreplace(%struct.LexState* %ARG1, i8 %ARG2, i8 %ARG3) {
L978:
  %0 = alloca i64
  %1 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %2 = bitcast %struct.Mbuffer** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 72
  %4 = bitcast i8* %3 to %struct.Mbuffer**
  %load_target = load %struct.Mbuffer*, %struct.Mbuffer** %4
  %5 = bitcast %struct.Mbuffer* %load_target to i64*
  %6 = bitcast i64* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i64*
  %load_target1 = load i64, i64* %8
  %9 = bitcast %struct.Mbuffer* %load_target to i8**
  %10 = bitcast i8** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to i8**
  %load_target2 = load i8*, i8** %12
  store i64 %load_target1, i64* %0
  br label %L979

L979:                                             ; preds = %L981, %L980, %L978
  %13 = load i64, i64* %0
  %R5672 = add i64 %13, -1
  store i64 %R5672, i64* %0
  %cond = icmp ne i64 %13, 0
  br i1 %cond, label %L980, label %L982

L980:                                             ; preds = %L979
  %14 = getelementptr inbounds i8, i8* %load_target2, i64 %R5672
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %load_target3 = load i8, i8* %15
  %R5677 = sext i8 %load_target3 to i32
  %R5679 = sext i8 %ARG2 to i32
  %R5680 = icmp eq i32 %R5677, %R5679
  %R56804 = zext i1 %R5680 to i32
  %cond5 = icmp ne i32 %R56804, 0
  br i1 %cond5, label %L981, label %L979

L981:                                             ; preds = %L980
  %16 = getelementptr inbounds i8, i8* %14, i64 0
  store i8 %ARG3, i8* %16
  br label %L979

L982:                                             ; preds = %L979
  ret void
}

define internal void @read_numeral(%struct.LexState* %ARG1, { [8 x i8] }* %ARG2) {
L983:
  %0 = alloca i32
  %1 = alloca i32
  br label %L984

L984:                                             ; preds = %L988, %L987, %L983
  %2 = bitcast %struct.LexState* %ARG1 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  call void @save(%struct.LexState* %ARG1, i32 %load_target)
  %6 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %7 = bitcast %struct.Zio** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 64
  %9 = bitcast i8* %8 to %struct.Zio**
  %load_target1 = load %struct.Zio*, %struct.Zio** %9
  %10 = bitcast %struct.Zio* %load_target1 to i64*
  %11 = bitcast i64* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i64*
  %load_target2 = load i64, i64* %13
  %R5691 = add i64 %load_target2, -1
  %14 = bitcast %struct.Zio* %load_target1 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i64*
  store i64 %R5691, i64* %17
  %R5692 = icmp ugt i64 %load_target2, 0
  %R56923 = zext i1 %R5692 to i32
  %cond = icmp ne i32 %R56923, 0
  br i1 %cond, label %L985, label %L986

L985:                                             ; preds = %L984
  %18 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %19 = bitcast %struct.Zio** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 64
  %21 = bitcast i8* %20 to %struct.Zio**
  %load_target4 = load %struct.Zio*, %struct.Zio** %21
  %22 = bitcast %struct.Zio* %load_target4 to i8**
  %23 = bitcast i8** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i8**
  %load_target5 = load i8*, i8** %25
  %26 = getelementptr inbounds i8, i8* %load_target5, inttoptr (i64 1 to i8*)
  %27 = bitcast %struct.Zio* %load_target4 to i8**
  %28 = bitcast i8** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i8**
  store i8* %26, i8** %30
  %31 = getelementptr inbounds i8, i8* %load_target5, i64 0
  %load_target6 = load i8, i8* %31
  %R5699 = zext i8 %load_target6 to i32
  store i32 %R5699, i32* %0
  br label %L987

L986:                                             ; preds = %L984
  %32 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %33 = bitcast %struct.Zio** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 64
  %35 = bitcast i8* %34 to %struct.Zio**
  %load_target7 = load %struct.Zio*, %struct.Zio** %35
  %R5702 = call i32 @luaZ_fill(%struct.Zio* %load_target7)
  store i32 %R5702, i32* %0
  br label %L987

L987:                                             ; preds = %L986, %L985
  %36 = load i32, i32* %0
  %37 = bitcast %struct.LexState* %ARG1 to i32*
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to i32*
  store i32 %36, i32* %40
  %R5705 = call i16** @__ctype_b_loc()
  %41 = bitcast i16** %R5705 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to i16**
  %load_target8 = load i16*, i16** %43
  %44 = bitcast %struct.LexState* %ARG1 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to i32*
  %load_target9 = load i32, i32* %47
  %R5710 = sext i32 %load_target9 to i64
  %R5711 = mul i64 %R5710, 2
  %48 = bitcast i16* %load_target8 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %R5711
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast i16* %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = bitcast i8* %52 to i16*
  %load_target10 = load i16, i16* %53
  %R5714 = zext i16 %load_target10 to i32
  %R5715 = and i32 %R5714, 2048
  %cond11 = icmp ne i32 %R5715, 0
  br i1 %cond11, label %L984, label %L988

L988:                                             ; preds = %L987
  %R5718 = icmp eq i32 %load_target9, 46
  %R571812 = zext i1 %R5718 to i32
  %cond13 = icmp ne i32 %R571812, 0
  br i1 %cond13, label %L984, label %L989

L989:                                             ; preds = %L988
  %R5721 = call i32 @check_next(%struct.LexState* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0))
  %cond14 = icmp ne i32 %R5721, 0
  br i1 %cond14, label %L990, label %L991

L990:                                             ; preds = %L989
  %R5724 = call i32 @check_next(%struct.LexState* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i64 0, i64 0))
  br label %L991

L991:                                             ; preds = %L996, %L990, %L989
  %R5725 = call i16** @__ctype_b_loc()
  %54 = bitcast i16** %R5725 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 0
  %56 = bitcast i8* %55 to i16**
  %load_target15 = load i16*, i16** %56
  %57 = bitcast %struct.LexState* %ARG1 to i32*
  %58 = bitcast i32* %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 0
  %60 = bitcast i8* %59 to i32*
  %load_target16 = load i32, i32* %60
  %R5730 = sext i32 %load_target16 to i64
  %R5731 = mul i64 %R5730, 2
  %61 = bitcast i16* %load_target15 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %R5731
  %63 = bitcast i8* %62 to i16*
  %64 = bitcast i16* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 0
  %66 = bitcast i8* %65 to i16*
  %load_target17 = load i16, i16* %66
  %R5734 = zext i16 %load_target17 to i32
  %R5735 = and i32 %R5734, 8
  %cond18 = icmp ne i32 %R5735, 0
  br i1 %cond18, label %L993, label %L992

L992:                                             ; preds = %L991
  %R5738 = icmp eq i32 %load_target16, 95
  %R573819 = zext i1 %R5738 to i32
  %cond20 = icmp ne i32 %R573819, 0
  br i1 %cond20, label %L993, label %L997

L993:                                             ; preds = %L992, %L991
  call void @save(%struct.LexState* %ARG1, i32 %load_target16)
  %67 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %68 = bitcast %struct.Zio** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 64
  %70 = bitcast i8* %69 to %struct.Zio**
  %load_target21 = load %struct.Zio*, %struct.Zio** %70
  %71 = bitcast %struct.Zio* %load_target21 to i64*
  %72 = bitcast i64* %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 0
  %74 = bitcast i8* %73 to i64*
  %load_target22 = load i64, i64* %74
  %R5745 = add i64 %load_target22, -1
  %75 = bitcast %struct.Zio* %load_target21 to i64*
  %76 = bitcast i64* %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 0
  %78 = bitcast i8* %77 to i64*
  store i64 %R5745, i64* %78
  %R5746 = icmp ugt i64 %load_target22, 0
  %R574623 = zext i1 %R5746 to i32
  %cond24 = icmp ne i32 %R574623, 0
  br i1 %cond24, label %L994, label %L995

L994:                                             ; preds = %L993
  %79 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %80 = bitcast %struct.Zio** %79 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 64
  %82 = bitcast i8* %81 to %struct.Zio**
  %load_target25 = load %struct.Zio*, %struct.Zio** %82
  %83 = bitcast %struct.Zio* %load_target25 to i8**
  %84 = bitcast i8** %83 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 8
  %86 = bitcast i8* %85 to i8**
  %load_target26 = load i8*, i8** %86
  %87 = getelementptr inbounds i8, i8* %load_target26, inttoptr (i64 1 to i8*)
  %88 = bitcast %struct.Zio* %load_target25 to i8**
  %89 = bitcast i8** %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 8
  %91 = bitcast i8* %90 to i8**
  store i8* %87, i8** %91
  %92 = getelementptr inbounds i8, i8* %load_target26, i64 0
  %load_target27 = load i8, i8* %92
  %R5753 = zext i8 %load_target27 to i32
  store i32 %R5753, i32* %1
  br label %L996

L995:                                             ; preds = %L993
  %93 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %94 = bitcast %struct.Zio** %93 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 64
  %96 = bitcast i8* %95 to %struct.Zio**
  %load_target28 = load %struct.Zio*, %struct.Zio** %96
  %R5756 = call i32 @luaZ_fill(%struct.Zio* %load_target28)
  store i32 %R5756, i32* %1
  br label %L996

L996:                                             ; preds = %L995, %L994
  %97 = load i32, i32* %1
  %98 = bitcast %struct.LexState* %ARG1 to i32*
  %99 = bitcast i32* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 0
  %101 = bitcast i8* %100 to i32*
  store i32 %97, i32* %101
  br label %L991

L997:                                             ; preds = %L992
  call void @save(%struct.LexState* %ARG1, i32 0)
  %102 = bitcast %struct.LexState* %ARG1 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 88
  %load_target29 = load i8, i8* %103
  call void @buffreplace(%struct.LexState* %ARG1, i8 46, i8 %load_target29)
  %104 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %105 = bitcast %struct.Mbuffer** %104 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 72
  %107 = bitcast i8* %106 to %struct.Mbuffer**
  %load_target30 = load %struct.Mbuffer*, %struct.Mbuffer** %107
  %108 = bitcast %struct.Mbuffer* %load_target30 to i8**
  %109 = bitcast i8** %108 to i8*
  %110 = getelementptr inbounds i8, i8* %109, i64 0
  %111 = bitcast i8* %110 to i8**
  %load_target31 = load i8*, i8** %111
  %R5768 = call i32 @luaO_str2d(i8* %load_target31, { [8 x i8] }* %ARG2)
  %cond32 = icmp ne i32 %R5768, 0
  br i1 %cond32, label %L999, label %L998

L998:                                             ; preds = %L997
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i64 0, i64 0), i32 284)
  br label %L999

L999:                                             ; preds = %L998, %L997
  ret void
}

define internal i32 @skip_sep(%struct.LexState* %ARG1) {
L1000:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = bitcast %struct.LexState* %ARG1 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i32*
  %load_target = load i32, i32* %8
  call void @save(%struct.LexState* %ARG1, i32 %load_target)
  %9 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %10 = bitcast %struct.Zio** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 64
  %12 = bitcast i8* %11 to %struct.Zio**
  %load_target1 = load %struct.Zio*, %struct.Zio** %12
  %13 = bitcast %struct.Zio* %load_target1 to i64*
  %14 = bitcast i64* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to i64*
  %load_target2 = load i64, i64* %16
  %R5779 = add i64 %load_target2, -1
  %17 = bitcast %struct.Zio* %load_target1 to i64*
  %18 = bitcast i64* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i64*
  store i64 %R5779, i64* %20
  %R5780 = icmp ugt i64 %load_target2, 0
  %R57803 = zext i1 %R5780 to i32
  store i32 0, i32* %4
  store i32 0, i32* %3
  %cond = icmp ne i32 %R57803, 0
  br i1 %cond, label %L1001, label %L1002

L1001:                                            ; preds = %L1000
  %21 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %22 = bitcast %struct.Zio** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 64
  %24 = bitcast i8* %23 to %struct.Zio**
  %load_target4 = load %struct.Zio*, %struct.Zio** %24
  %25 = bitcast %struct.Zio* %load_target4 to i8**
  %26 = bitcast i8** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i8**
  %load_target5 = load i8*, i8** %28
  %29 = getelementptr inbounds i8, i8* %load_target5, inttoptr (i64 1 to i8*)
  %30 = bitcast %struct.Zio* %load_target4 to i8**
  %31 = bitcast i8** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 8
  %33 = bitcast i8* %32 to i8**
  store i8* %29, i8** %33
  %34 = getelementptr inbounds i8, i8* %load_target5, i64 0
  %load_target6 = load i8, i8* %34
  %R5787 = zext i8 %load_target6 to i32
  store i32 %R5787, i32* %0
  br label %L1003

L1002:                                            ; preds = %L1000
  %35 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %36 = bitcast %struct.Zio** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 64
  %38 = bitcast i8* %37 to %struct.Zio**
  %load_target7 = load %struct.Zio*, %struct.Zio** %38
  %R5790 = call i32 @luaZ_fill(%struct.Zio* %load_target7)
  store i32 %R5790, i32* %0
  br label %L1003

L1003:                                            ; preds = %L1002, %L1001
  %39 = load i32, i32* %0
  %40 = bitcast %struct.LexState* %ARG1 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to i32*
  store i32 %39, i32* %43
  store i32 %39, i32* %1
  br label %L1004

L1004:                                            ; preds = %L1008, %L1003
  %44 = load i32, i32* %1
  %R5795 = icmp eq i32 %44, 61
  %R57958 = zext i1 %R5795 to i32
  %cond9 = icmp ne i32 %R57958, 0
  br i1 %cond9, label %L1005, label %L1009

L1005:                                            ; preds = %L1004
  call void @save(%struct.LexState* %ARG1, i32 %44)
  %45 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %46 = bitcast %struct.Zio** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 64
  %48 = bitcast i8* %47 to %struct.Zio**
  %load_target10 = load %struct.Zio*, %struct.Zio** %48
  %49 = bitcast %struct.Zio* %load_target10 to i64*
  %50 = bitcast i64* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %52 = bitcast i8* %51 to i64*
  %load_target11 = load i64, i64* %52
  %R5802 = add i64 %load_target11, -1
  %53 = bitcast %struct.Zio* %load_target10 to i64*
  %54 = bitcast i64* %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 0
  %56 = bitcast i8* %55 to i64*
  store i64 %R5802, i64* %56
  %R5803 = icmp ugt i64 %load_target11, 0
  %R580312 = zext i1 %R5803 to i32
  %cond13 = icmp ne i32 %R580312, 0
  br i1 %cond13, label %L1006, label %L1007

L1006:                                            ; preds = %L1005
  %57 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %58 = bitcast %struct.Zio** %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 64
  %60 = bitcast i8* %59 to %struct.Zio**
  %load_target14 = load %struct.Zio*, %struct.Zio** %60
  %61 = bitcast %struct.Zio* %load_target14 to i8**
  %62 = bitcast i8** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to i8**
  %load_target15 = load i8*, i8** %64
  %65 = getelementptr inbounds i8, i8* %load_target15, inttoptr (i64 1 to i8*)
  %66 = bitcast %struct.Zio* %load_target14 to i8**
  %67 = bitcast i8** %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = bitcast i8* %68 to i8**
  store i8* %65, i8** %69
  %70 = getelementptr inbounds i8, i8* %load_target15, i64 0
  %load_target16 = load i8, i8* %70
  %R5810 = zext i8 %load_target16 to i32
  store i32 %R5810, i32* %2
  br label %L1008

L1007:                                            ; preds = %L1005
  %71 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %72 = bitcast %struct.Zio** %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 64
  %74 = bitcast i8* %73 to %struct.Zio**
  %load_target17 = load %struct.Zio*, %struct.Zio** %74
  %R5813 = call i32 @luaZ_fill(%struct.Zio* %load_target17)
  store i32 %R5813, i32* %2
  br label %L1008

L1008:                                            ; preds = %L1007, %L1006
  %75 = load i32, i32* %2
  %76 = bitcast %struct.LexState* %ARG1 to i32*
  %77 = bitcast i32* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 0
  %79 = bitcast i8* %78 to i32*
  store i32 %75, i32* %79
  %80 = load i32, i32* %3
  %R5817 = add i32 %80, 1
  store i32 %R5817, i32* %4
  store i32 %R5817, i32* %3
  store i32 %75, i32* %1
  br label %L1004

L1009:                                            ; preds = %L1004
  %81 = load i32, i32* %4
  %R5820 = sub i32 0, %81
  %R5821 = add i32 %R5820, -1
  %R5825 = icmp eq i32 %44, %load_target
  %R582518 = zext i1 %R5825 to i32
  %cond19 = icmp ne i32 %R582518, 0
  %select = select i1 %cond19, i32 %81, i32 %R5821
  ret i32 %select
}

define internal void @read_long_string(%struct.LexState* %ARG1, { [8 x i8] }* %ARG2, i32 %ARG3) {
L1010:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = bitcast %struct.LexState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  %load_target = load i32, i32* %7
  call void @save(%struct.LexState* %ARG1, i32 %load_target)
  %8 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %9 = bitcast %struct.Zio** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 64
  %11 = bitcast i8* %10 to %struct.Zio**
  %load_target1 = load %struct.Zio*, %struct.Zio** %11
  %12 = bitcast %struct.Zio* %load_target1 to i64*
  %13 = bitcast i64* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i64*
  %load_target2 = load i64, i64* %15
  %R5834 = add i64 %load_target2, -1
  %16 = bitcast %struct.Zio* %load_target1 to i64*
  %17 = bitcast i64* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i64*
  store i64 %R5834, i64* %19
  %R5835 = icmp ugt i64 %load_target2, 0
  %R58353 = zext i1 %R5835 to i32
  %cond = icmp ne i32 %R58353, 0
  br i1 %cond, label %L1011, label %L1012

L1011:                                            ; preds = %L1010
  %20 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %21 = bitcast %struct.Zio** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 64
  %23 = bitcast i8* %22 to %struct.Zio**
  %load_target4 = load %struct.Zio*, %struct.Zio** %23
  %24 = bitcast %struct.Zio* %load_target4 to i8**
  %25 = bitcast i8** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i8**
  %load_target5 = load i8*, i8** %27
  %28 = getelementptr inbounds i8, i8* %load_target5, inttoptr (i64 1 to i8*)
  %29 = bitcast %struct.Zio* %load_target4 to i8**
  %30 = bitcast i8** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i8**
  store i8* %28, i8** %32
  %33 = getelementptr inbounds i8, i8* %load_target5, i64 0
  %load_target6 = load i8, i8* %33
  %R5842 = zext i8 %load_target6 to i32
  store i32 %R5842, i32* %0
  br label %L1013

L1012:                                            ; preds = %L1010
  %34 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %35 = bitcast %struct.Zio** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 64
  %37 = bitcast i8* %36 to %struct.Zio**
  %load_target7 = load %struct.Zio*, %struct.Zio** %37
  %R5845 = call i32 @luaZ_fill(%struct.Zio* %load_target7)
  store i32 %R5845, i32* %0
  br label %L1013

L1013:                                            ; preds = %L1012, %L1011
  %38 = load i32, i32* %0
  %39 = bitcast %struct.LexState* %ARG1 to i32*
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = bitcast i8* %41 to i32*
  store i32 %38, i32* %42
  %R5850 = icmp eq i32 %38, 10
  %R58508 = zext i1 %R5850 to i32
  %cond9 = icmp ne i32 %R58508, 0
  br i1 %cond9, label %L1015, label %L1014

L1014:                                            ; preds = %L1013
  %R5853 = icmp eq i32 %38, 13
  %R585310 = zext i1 %R5853 to i32
  %cond11 = icmp ne i32 %R585310, 0
  br i1 %cond11, label %L1015, label %L1016

L1015:                                            ; preds = %L1014, %L1013
  call void @inclinenumber(%struct.LexState* %ARG1)
  br label %L1016

L1016:                                            ; preds = %L1033, %L1029, %L1024, %L1023, %L1018, %L1017, %L1015, %L1014
  %43 = bitcast %struct.LexState* %ARG1 to i32*
  %44 = bitcast i32* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to i32*
  %load_target12 = load i32, i32* %46
  switch i32 %load_target12, label %L1025 [
    i32 -1, label %L1017
    i32 10, label %L1023
    i32 13, label %L1023
    i32 93, label %L1018
  ]

L1017:                                            ; preds = %L1016
  %cond13 = icmp ne { [8 x i8] }* %ARG2, null
  %select = select i1 %cond13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i64 0, i64 0)
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* %select, i32 287)
  br label %L1016

L1018:                                            ; preds = %L1016
  %R5864 = call i32 @skip_sep(%struct.LexState* %ARG1)
  %R5866 = icmp eq i32 %R5864, %ARG3
  %R586614 = zext i1 %R5866 to i32
  %cond15 = icmp ne i32 %R586614, 0
  br i1 %cond15, label %L1019, label %L1016

L1019:                                            ; preds = %L1018
  %47 = bitcast %struct.LexState* %ARG1 to i32*
  %48 = bitcast i32* %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 0
  %50 = bitcast i8* %49 to i32*
  %load_target16 = load i32, i32* %50
  call void @save(%struct.LexState* %ARG1, i32 %load_target16)
  %51 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %52 = bitcast %struct.Zio** %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 64
  %54 = bitcast i8* %53 to %struct.Zio**
  %load_target17 = load %struct.Zio*, %struct.Zio** %54
  %55 = bitcast %struct.Zio* %load_target17 to i64*
  %56 = bitcast i64* %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  %58 = bitcast i8* %57 to i64*
  %load_target18 = load i64, i64* %58
  %R5873 = add i64 %load_target18, -1
  %59 = bitcast %struct.Zio* %load_target17 to i64*
  %60 = bitcast i64* %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 0
  %62 = bitcast i8* %61 to i64*
  store i64 %R5873, i64* %62
  %R5874 = icmp ugt i64 %load_target18, 0
  %R587419 = zext i1 %R5874 to i32
  %cond20 = icmp ne i32 %R587419, 0
  br i1 %cond20, label %L1020, label %L1021

L1020:                                            ; preds = %L1019
  %63 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %64 = bitcast %struct.Zio** %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 64
  %66 = bitcast i8* %65 to %struct.Zio**
  %load_target21 = load %struct.Zio*, %struct.Zio** %66
  %67 = bitcast %struct.Zio* %load_target21 to i8**
  %68 = bitcast i8** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = bitcast i8* %69 to i8**
  %load_target22 = load i8*, i8** %70
  %71 = getelementptr inbounds i8, i8* %load_target22, inttoptr (i64 1 to i8*)
  %72 = bitcast %struct.Zio* %load_target21 to i8**
  %73 = bitcast i8** %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 8
  %75 = bitcast i8* %74 to i8**
  store i8* %71, i8** %75
  %76 = getelementptr inbounds i8, i8* %load_target22, i64 0
  %load_target23 = load i8, i8* %76
  %R5881 = zext i8 %load_target23 to i32
  store i32 %R5881, i32* %1
  br label %L1022

L1021:                                            ; preds = %L1019
  %77 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %78 = bitcast %struct.Zio** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 64
  %80 = bitcast i8* %79 to %struct.Zio**
  %load_target24 = load %struct.Zio*, %struct.Zio** %80
  %R5884 = call i32 @luaZ_fill(%struct.Zio* %load_target24)
  store i32 %R5884, i32* %1
  br label %L1022

L1022:                                            ; preds = %L1021, %L1020
  %81 = load i32, i32* %1
  %82 = bitcast %struct.LexState* %ARG1 to i32*
  %83 = bitcast i32* %82 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 0
  %85 = bitcast i8* %84 to i32*
  store i32 %81, i32* %85
  %cond25 = icmp ne { [8 x i8] }* %ARG2, null
  br i1 %cond25, label %L1034, label %L1035

L1023:                                            ; preds = %L1016, %L1016
  call void @save(%struct.LexState* %ARG1, i32 10)
  call void @inclinenumber(%struct.LexState* %ARG1)
  %cond26 = icmp ne { [8 x i8] }* %ARG2, null
  br i1 %cond26, label %L1016, label %L1024

L1024:                                            ; preds = %L1023
  %86 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %87 = bitcast %struct.Mbuffer** %86 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 72
  %89 = bitcast i8* %88 to %struct.Mbuffer**
  %load_target27 = load %struct.Mbuffer*, %struct.Mbuffer** %89
  %90 = bitcast %struct.Mbuffer* %load_target27 to i64*
  %91 = bitcast i64* %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 8
  %93 = bitcast i8* %92 to i64*
  store i64 0, i64* %93
  br label %L1016

L1025:                                            ; preds = %L1016
  %cond28 = icmp ne { [8 x i8] }* %ARG2, null
  br i1 %cond28, label %L1026, label %L1030

L1026:                                            ; preds = %L1025
  call void @save(%struct.LexState* %ARG1, i32 %load_target12)
  %94 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %95 = bitcast %struct.Zio** %94 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 64
  %97 = bitcast i8* %96 to %struct.Zio**
  %load_target29 = load %struct.Zio*, %struct.Zio** %97
  %98 = bitcast %struct.Zio* %load_target29 to i64*
  %99 = bitcast i64* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 0
  %101 = bitcast i8* %100 to i64*
  %load_target30 = load i64, i64* %101
  %R5899 = add i64 %load_target30, -1
  %102 = bitcast %struct.Zio* %load_target29 to i64*
  %103 = bitcast i64* %102 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 0
  %105 = bitcast i8* %104 to i64*
  store i64 %R5899, i64* %105
  %R5900 = icmp ugt i64 %load_target30, 0
  %R590031 = zext i1 %R5900 to i32
  %cond32 = icmp ne i32 %R590031, 0
  br i1 %cond32, label %L1027, label %L1028

L1027:                                            ; preds = %L1026
  %106 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %107 = bitcast %struct.Zio** %106 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 64
  %109 = bitcast i8* %108 to %struct.Zio**
  %load_target33 = load %struct.Zio*, %struct.Zio** %109
  %110 = bitcast %struct.Zio* %load_target33 to i8**
  %111 = bitcast i8** %110 to i8*
  %112 = getelementptr inbounds i8, i8* %111, i64 8
  %113 = bitcast i8* %112 to i8**
  %load_target34 = load i8*, i8** %113
  %114 = getelementptr inbounds i8, i8* %load_target34, inttoptr (i64 1 to i8*)
  %115 = bitcast %struct.Zio* %load_target33 to i8**
  %116 = bitcast i8** %115 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 8
  %118 = bitcast i8* %117 to i8**
  store i8* %114, i8** %118
  %119 = getelementptr inbounds i8, i8* %load_target34, i64 0
  %load_target35 = load i8, i8* %119
  %R5907 = zext i8 %load_target35 to i32
  store i32 %R5907, i32* %2
  br label %L1029

L1028:                                            ; preds = %L1026
  %120 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %121 = bitcast %struct.Zio** %120 to i8*
  %122 = getelementptr inbounds i8, i8* %121, i64 64
  %123 = bitcast i8* %122 to %struct.Zio**
  %load_target36 = load %struct.Zio*, %struct.Zio** %123
  %R5910 = call i32 @luaZ_fill(%struct.Zio* %load_target36)
  store i32 %R5910, i32* %2
  br label %L1029

L1029:                                            ; preds = %L1028, %L1027
  %124 = load i32, i32* %2
  %125 = bitcast %struct.LexState* %ARG1 to i32*
  %126 = bitcast i32* %125 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 0
  %128 = bitcast i8* %127 to i32*
  store i32 %124, i32* %128
  br label %L1016

L1030:                                            ; preds = %L1025
  %129 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %130 = bitcast %struct.Zio** %129 to i8*
  %131 = getelementptr inbounds i8, i8* %130, i64 64
  %132 = bitcast i8* %131 to %struct.Zio**
  %load_target37 = load %struct.Zio*, %struct.Zio** %132
  %133 = bitcast %struct.Zio* %load_target37 to i64*
  %134 = bitcast i64* %133 to i8*
  %135 = getelementptr inbounds i8, i8* %134, i64 0
  %136 = bitcast i8* %135 to i64*
  %load_target38 = load i64, i64* %136
  %R5916 = add i64 %load_target38, -1
  %137 = bitcast %struct.Zio* %load_target37 to i64*
  %138 = bitcast i64* %137 to i8*
  %139 = getelementptr inbounds i8, i8* %138, i64 0
  %140 = bitcast i8* %139 to i64*
  store i64 %R5916, i64* %140
  %R5917 = icmp ugt i64 %load_target38, 0
  %R591739 = zext i1 %R5917 to i32
  %cond40 = icmp ne i32 %R591739, 0
  br i1 %cond40, label %L1031, label %L1032

L1031:                                            ; preds = %L1030
  %141 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %142 = bitcast %struct.Zio** %141 to i8*
  %143 = getelementptr inbounds i8, i8* %142, i64 64
  %144 = bitcast i8* %143 to %struct.Zio**
  %load_target41 = load %struct.Zio*, %struct.Zio** %144
  %145 = bitcast %struct.Zio* %load_target41 to i8**
  %146 = bitcast i8** %145 to i8*
  %147 = getelementptr inbounds i8, i8* %146, i64 8
  %148 = bitcast i8* %147 to i8**
  %load_target42 = load i8*, i8** %148
  %149 = getelementptr inbounds i8, i8* %load_target42, inttoptr (i64 1 to i8*)
  %150 = bitcast %struct.Zio* %load_target41 to i8**
  %151 = bitcast i8** %150 to i8*
  %152 = getelementptr inbounds i8, i8* %151, i64 8
  %153 = bitcast i8* %152 to i8**
  store i8* %149, i8** %153
  %154 = getelementptr inbounds i8, i8* %load_target42, i64 0
  %load_target43 = load i8, i8* %154
  %R5924 = zext i8 %load_target43 to i32
  store i32 %R5924, i32* %3
  br label %L1033

L1032:                                            ; preds = %L1030
  %155 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %156 = bitcast %struct.Zio** %155 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 64
  %158 = bitcast i8* %157 to %struct.Zio**
  %load_target44 = load %struct.Zio*, %struct.Zio** %158
  %R5927 = call i32 @luaZ_fill(%struct.Zio* %load_target44)
  store i32 %R5927, i32* %3
  br label %L1033

L1033:                                            ; preds = %L1032, %L1031
  %159 = load i32, i32* %3
  %160 = bitcast %struct.LexState* %ARG1 to i32*
  %161 = bitcast i32* %160 to i8*
  %162 = getelementptr inbounds i8, i8* %161, i64 0
  %163 = bitcast i8* %162 to i32*
  store i32 %159, i32* %163
  br label %L1016

L1034:                                            ; preds = %L1022
  %164 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %165 = bitcast %struct.Mbuffer** %164 to i8*
  %166 = getelementptr inbounds i8, i8* %165, i64 72
  %167 = bitcast i8* %166 to %struct.Mbuffer**
  %load_target45 = load %struct.Mbuffer*, %struct.Mbuffer** %167
  %168 = bitcast %struct.Mbuffer* %load_target45 to i8**
  %169 = bitcast i8** %168 to i8*
  %170 = getelementptr inbounds i8, i8* %169, i64 0
  %171 = bitcast i8* %170 to i8**
  %load_target46 = load i8*, i8** %171
  %R5936 = add i32 %ARG3, 2
  %R5937 = sext i32 %R5936 to i64
  %172 = getelementptr inbounds i8, i8* %load_target46, i64 %R5937
  %173 = bitcast %struct.Mbuffer* %load_target45 to i64*
  %174 = bitcast i64* %173 to i8*
  %175 = getelementptr inbounds i8, i8* %174, i64 8
  %176 = bitcast i8* %175 to i64*
  %load_target47 = load i64, i64* %176
  %R5944 = mul i32 %R5936, 2
  %R5945 = sext i32 %R5944 to i64
  %R5946 = sub i64 %load_target47, %R5945
  %R5947 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* %172, i64 %R5946)
  %177 = bitcast { [8 x i8] }* %ARG2 to { [24 x i8] }**
  %178 = bitcast { [24 x i8] }** %177 to i8*
  %179 = getelementptr inbounds i8, i8* %178, i64 0
  %180 = bitcast i8* %179 to { [24 x i8] }**
  store { [24 x i8] }* %R5947, { [24 x i8] }** %180
  br label %L1035

L1035:                                            ; preds = %L1034, %L1022
  ret void
}

define internal void @read_string(%struct.LexState* %ARG1, i32 %ARG2, { [8 x i8] }* %ARG3) {
L1036:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca i32
  %8 = alloca i32
  %9 = alloca i32
  %10 = alloca i32
  %11 = bitcast %struct.LexState* %ARG1 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to i32*
  %load_target = load i32, i32* %14
  call void @save(%struct.LexState* %ARG1, i32 %load_target)
  %15 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %16 = bitcast %struct.Zio** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 64
  %18 = bitcast i8* %17 to %struct.Zio**
  %load_target1 = load %struct.Zio*, %struct.Zio** %18
  %19 = bitcast %struct.Zio* %load_target1 to i64*
  %20 = bitcast i64* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to i64*
  %load_target2 = load i64, i64* %22
  %R5955 = add i64 %load_target2, -1
  %23 = bitcast %struct.Zio* %load_target1 to i64*
  %24 = bitcast i64* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to i64*
  store i64 %R5955, i64* %26
  %R5956 = icmp ugt i64 %load_target2, 0
  %R59563 = zext i1 %R5956 to i32
  %cond = icmp ne i32 %R59563, 0
  br i1 %cond, label %L1037, label %L1038

L1037:                                            ; preds = %L1036
  %27 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %28 = bitcast %struct.Zio** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 64
  %30 = bitcast i8* %29 to %struct.Zio**
  %load_target4 = load %struct.Zio*, %struct.Zio** %30
  %31 = bitcast %struct.Zio* %load_target4 to i8**
  %32 = bitcast i8** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to i8**
  %load_target5 = load i8*, i8** %34
  %35 = getelementptr inbounds i8, i8* %load_target5, inttoptr (i64 1 to i8*)
  %36 = bitcast %struct.Zio* %load_target4 to i8**
  %37 = bitcast i8** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i8**
  store i8* %35, i8** %39
  %40 = getelementptr inbounds i8, i8* %load_target5, i64 0
  %load_target6 = load i8, i8* %40
  %R5963 = zext i8 %load_target6 to i32
  store i32 %R5963, i32* %0
  br label %L1039

L1038:                                            ; preds = %L1036
  %41 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %42 = bitcast %struct.Zio** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 64
  %44 = bitcast i8* %43 to %struct.Zio**
  %load_target7 = load %struct.Zio*, %struct.Zio** %44
  %R5966 = call i32 @luaZ_fill(%struct.Zio* %load_target7)
  store i32 %R5966, i32* %0
  br label %L1039

L1039:                                            ; preds = %L1038, %L1037
  %45 = load i32, i32* %0
  %46 = bitcast %struct.LexState* %ARG1 to i32*
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  %49 = bitcast i8* %48 to i32*
  store i32 %45, i32* %49
  br label %L1040

L1040:                                            ; preds = %L1077, %L1073, %L1069, %L1060, %L1055, %L1047, %L1043, %L1042, %L1039
  %50 = bitcast %struct.LexState* %ARG1 to i32*
  %51 = bitcast i32* %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = bitcast i8* %52 to i32*
  %load_target8 = load i32, i32* %53
  %R5972 = icmp ne i32 %load_target8, %ARG2
  %R59729 = zext i1 %R5972 to i32
  %cond10 = icmp ne i32 %R59729, 0
  br i1 %cond10, label %L1041, label %L1078

L1041:                                            ; preds = %L1040
  switch i32 %load_target8, label %L1074 [
    i32 -1, label %L1042
    i32 10, label %L1043
    i32 13, label %L1043
    i32 92, label %L1044
  ]

L1042:                                            ; preds = %L1041
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i64 0, i64 0), i32 287)
  br label %L1040

L1043:                                            ; preds = %L1041, %L1041
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i32 286)
  br label %L1040

L1044:                                            ; preds = %L1041
  %54 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %55 = bitcast %struct.Zio** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 64
  %57 = bitcast i8* %56 to %struct.Zio**
  %load_target11 = load %struct.Zio*, %struct.Zio** %57
  %58 = bitcast %struct.Zio* %load_target11 to i64*
  %59 = bitcast i64* %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 0
  %61 = bitcast i8* %60 to i64*
  %load_target12 = load i64, i64* %61
  %R5982 = add i64 %load_target12, -1
  %62 = bitcast %struct.Zio* %load_target11 to i64*
  %63 = bitcast i64* %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 0
  %65 = bitcast i8* %64 to i64*
  store i64 %R5982, i64* %65
  %R5983 = icmp ugt i64 %load_target12, 0
  %R598313 = zext i1 %R5983 to i32
  %cond14 = icmp ne i32 %R598313, 0
  br i1 %cond14, label %L1045, label %L1046

L1045:                                            ; preds = %L1044
  %66 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %67 = bitcast %struct.Zio** %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 64
  %69 = bitcast i8* %68 to %struct.Zio**
  %load_target15 = load %struct.Zio*, %struct.Zio** %69
  %70 = bitcast %struct.Zio* %load_target15 to i8**
  %71 = bitcast i8** %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 8
  %73 = bitcast i8* %72 to i8**
  %load_target16 = load i8*, i8** %73
  %74 = getelementptr inbounds i8, i8* %load_target16, inttoptr (i64 1 to i8*)
  %75 = bitcast %struct.Zio* %load_target15 to i8**
  %76 = bitcast i8** %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 8
  %78 = bitcast i8* %77 to i8**
  store i8* %74, i8** %78
  %79 = getelementptr inbounds i8, i8* %load_target16, i64 0
  %load_target17 = load i8, i8* %79
  %R5990 = zext i8 %load_target17 to i32
  store i32 %R5990, i32* %1
  br label %L1047

L1046:                                            ; preds = %L1044
  %80 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %81 = bitcast %struct.Zio** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 64
  %83 = bitcast i8* %82 to %struct.Zio**
  %load_target18 = load %struct.Zio*, %struct.Zio** %83
  %R5993 = call i32 @luaZ_fill(%struct.Zio* %load_target18)
  store i32 %R5993, i32* %1
  br label %L1047

L1047:                                            ; preds = %L1046, %L1045
  %84 = load i32, i32* %1
  %85 = bitcast %struct.LexState* %ARG1 to i32*
  %86 = bitcast i32* %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 0
  %88 = bitcast i8* %87 to i32*
  store i32 %84, i32* %88
  switch i32 %84, label %L1056 [
    i32 -1, label %L1040
    i32 10, label %L1055
    i32 13, label %L1055
    i32 97, label %L1048
    i32 98, label %L1049
    i32 102, label %L1050
    i32 110, label %L1051
    i32 114, label %L1052
    i32 116, label %L1053
    i32 118, label %L1054
  ]

L1048:                                            ; preds = %L1047
  store i32 7, i32* %7
  br label %L1070

L1049:                                            ; preds = %L1047
  store i32 8, i32* %7
  br label %L1070

L1050:                                            ; preds = %L1047
  store i32 12, i32* %7
  br label %L1070

L1051:                                            ; preds = %L1047
  store i32 10, i32* %7
  br label %L1070

L1052:                                            ; preds = %L1047
  store i32 13, i32* %7
  br label %L1070

L1053:                                            ; preds = %L1047
  store i32 9, i32* %7
  br label %L1070

L1054:                                            ; preds = %L1047
  store i32 11, i32* %7
  br label %L1070

L1055:                                            ; preds = %L1047, %L1047
  call void @save(%struct.LexState* %ARG1, i32 10)
  call void @inclinenumber(%struct.LexState* %ARG1)
  br label %L1040

L1056:                                            ; preds = %L1047
  %R6000 = call i16** @__ctype_b_loc()
  %89 = bitcast i16** %R6000 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 0
  %91 = bitcast i8* %90 to i16**
  %load_target19 = load i16*, i16** %91
  %92 = bitcast %struct.LexState* %ARG1 to i32*
  %93 = bitcast i32* %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 0
  %95 = bitcast i8* %94 to i32*
  %load_target20 = load i32, i32* %95
  %R6005 = sext i32 %load_target20 to i64
  %R6006 = mul i64 %R6005, 2
  %96 = bitcast i16* %load_target19 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 %R6006
  %98 = bitcast i8* %97 to i16*
  %99 = bitcast i16* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 0
  %101 = bitcast i8* %100 to i16*
  %load_target21 = load i16, i16* %101
  %R6009 = zext i16 %load_target21 to i32
  %R6010 = and i32 %R6009, 2048
  store i32 %load_target20, i32* %4
  %cond22 = icmp ne i32 %R6010, 0
  br i1 %cond22, label %L1061, label %L1057

L1057:                                            ; preds = %L1056
  call void @save(%struct.LexState* %ARG1, i32 %load_target20)
  %102 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %103 = bitcast %struct.Zio** %102 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 64
  %105 = bitcast i8* %104 to %struct.Zio**
  %load_target23 = load %struct.Zio*, %struct.Zio** %105
  %106 = bitcast %struct.Zio* %load_target23 to i64*
  %107 = bitcast i64* %106 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 0
  %109 = bitcast i8* %108 to i64*
  %load_target24 = load i64, i64* %109
  %R6017 = add i64 %load_target24, -1
  %110 = bitcast %struct.Zio* %load_target23 to i64*
  %111 = bitcast i64* %110 to i8*
  %112 = getelementptr inbounds i8, i8* %111, i64 0
  %113 = bitcast i8* %112 to i64*
  store i64 %R6017, i64* %113
  %R6018 = icmp ugt i64 %load_target24, 0
  %R601825 = zext i1 %R6018 to i32
  %cond26 = icmp ne i32 %R601825, 0
  br i1 %cond26, label %L1058, label %L1059

L1058:                                            ; preds = %L1057
  %114 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %115 = bitcast %struct.Zio** %114 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 64
  %117 = bitcast i8* %116 to %struct.Zio**
  %load_target27 = load %struct.Zio*, %struct.Zio** %117
  %118 = bitcast %struct.Zio* %load_target27 to i8**
  %119 = bitcast i8** %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 8
  %121 = bitcast i8* %120 to i8**
  %load_target28 = load i8*, i8** %121
  %122 = getelementptr inbounds i8, i8* %load_target28, inttoptr (i64 1 to i8*)
  %123 = bitcast %struct.Zio* %load_target27 to i8**
  %124 = bitcast i8** %123 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 8
  %126 = bitcast i8* %125 to i8**
  store i8* %122, i8** %126
  %127 = getelementptr inbounds i8, i8* %load_target28, i64 0
  %load_target29 = load i8, i8* %127
  %R6025 = zext i8 %load_target29 to i32
  store i32 %R6025, i32* %2
  br label %L1060

L1059:                                            ; preds = %L1057
  %128 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %129 = bitcast %struct.Zio** %128 to i8*
  %130 = getelementptr inbounds i8, i8* %129, i64 64
  %131 = bitcast i8* %130 to %struct.Zio**
  %load_target30 = load %struct.Zio*, %struct.Zio** %131
  %R6028 = call i32 @luaZ_fill(%struct.Zio* %load_target30)
  store i32 %R6028, i32* %2
  br label %L1060

L1060:                                            ; preds = %L1059, %L1058
  %132 = load i32, i32* %2
  %133 = bitcast %struct.LexState* %ARG1 to i32*
  %134 = bitcast i32* %133 to i8*
  %135 = getelementptr inbounds i8, i8* %134, i64 0
  %136 = bitcast i8* %135 to i32*
  store i32 %132, i32* %136
  br label %L1040

L1061:                                            ; preds = %L1056
  store i32 0, i32* %3
  store i32 0, i32* %6
  br label %L1062

L1062:                                            ; preds = %L1066, %L1061
  %137 = load i32, i32* %3
  %R6032 = mul i32 %137, 10
  %138 = load i32, i32* %4
  %R6035 = add i32 %138, -48
  %R6036 = add i32 %R6032, %R6035
  %139 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %140 = bitcast %struct.Zio** %139 to i8*
  %141 = getelementptr inbounds i8, i8* %140, i64 64
  %142 = bitcast i8* %141 to %struct.Zio**
  %load_target31 = load %struct.Zio*, %struct.Zio** %142
  %143 = bitcast %struct.Zio* %load_target31 to i64*
  %144 = bitcast i64* %143 to i8*
  %145 = getelementptr inbounds i8, i8* %144, i64 0
  %146 = bitcast i8* %145 to i64*
  %load_target32 = load i64, i64* %146
  %R6040 = add i64 %load_target32, -1
  %147 = bitcast %struct.Zio* %load_target31 to i64*
  %148 = bitcast i64* %147 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 0
  %150 = bitcast i8* %149 to i64*
  store i64 %R6040, i64* %150
  %R6041 = icmp ugt i64 %load_target32, 0
  %R604133 = zext i1 %R6041 to i32
  store i32 %R6036, i32* %3
  %cond34 = icmp ne i32 %R604133, 0
  br i1 %cond34, label %L1063, label %L1064

L1063:                                            ; preds = %L1062
  %151 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %152 = bitcast %struct.Zio** %151 to i8*
  %153 = getelementptr inbounds i8, i8* %152, i64 64
  %154 = bitcast i8* %153 to %struct.Zio**
  %load_target35 = load %struct.Zio*, %struct.Zio** %154
  %155 = bitcast %struct.Zio* %load_target35 to i8**
  %156 = bitcast i8** %155 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 8
  %158 = bitcast i8* %157 to i8**
  %load_target36 = load i8*, i8** %158
  %159 = getelementptr inbounds i8, i8* %load_target36, inttoptr (i64 1 to i8*)
  %160 = bitcast %struct.Zio* %load_target35 to i8**
  %161 = bitcast i8** %160 to i8*
  %162 = getelementptr inbounds i8, i8* %161, i64 8
  %163 = bitcast i8* %162 to i8**
  store i8* %159, i8** %163
  %164 = getelementptr inbounds i8, i8* %load_target36, i64 0
  %load_target37 = load i8, i8* %164
  %R6048 = zext i8 %load_target37 to i32
  store i32 %R6048, i32* %5
  br label %L1065

L1064:                                            ; preds = %L1062
  %165 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %166 = bitcast %struct.Zio** %165 to i8*
  %167 = getelementptr inbounds i8, i8* %166, i64 64
  %168 = bitcast i8* %167 to %struct.Zio**
  %load_target38 = load %struct.Zio*, %struct.Zio** %168
  %R6051 = call i32 @luaZ_fill(%struct.Zio* %load_target38)
  store i32 %R6051, i32* %5
  br label %L1065

L1065:                                            ; preds = %L1064, %L1063
  %169 = load i32, i32* %5
  %170 = bitcast %struct.LexState* %ARG1 to i32*
  %171 = bitcast i32* %170 to i8*
  %172 = getelementptr inbounds i8, i8* %171, i64 0
  %173 = bitcast i8* %172 to i32*
  store i32 %169, i32* %173
  %174 = load i32, i32* %6
  %R6055 = add i32 %174, 1
  %R6056 = icmp slt i32 %R6055, 3
  %R605639 = zext i1 %R6056 to i32
  store i32 %R6055, i32* %6
  %cond40 = icmp ne i32 %R605639, 0
  br i1 %cond40, label %L1066, label %L1067

L1066:                                            ; preds = %L1065
  %R6057 = call i16** @__ctype_b_loc()
  %175 = bitcast i16** %R6057 to i8*
  %176 = getelementptr inbounds i8, i8* %175, i64 0
  %177 = bitcast i8* %176 to i16**
  %load_target41 = load i16*, i16** %177
  %178 = bitcast %struct.LexState* %ARG1 to i32*
  %179 = bitcast i32* %178 to i8*
  %180 = getelementptr inbounds i8, i8* %179, i64 0
  %181 = bitcast i8* %180 to i32*
  %load_target42 = load i32, i32* %181
  %R6062 = sext i32 %load_target42 to i64
  %R6063 = mul i64 %R6062, 2
  %182 = bitcast i16* %load_target41 to i8*
  %183 = getelementptr inbounds i8, i8* %182, i64 %R6063
  %184 = bitcast i8* %183 to i16*
  %185 = bitcast i16* %184 to i8*
  %186 = getelementptr inbounds i8, i8* %185, i64 0
  %187 = bitcast i8* %186 to i16*
  %load_target43 = load i16, i16* %187
  %R6066 = zext i16 %load_target43 to i32
  %R6067 = and i32 %R6066, 2048
  store i32 %load_target42, i32* %4
  %cond44 = icmp ne i32 %R6067, 0
  br i1 %cond44, label %L1062, label %L1067

L1067:                                            ; preds = %L1066, %L1065
  %R6069 = icmp sgt i32 %R6036, 255
  %R606945 = zext i1 %R6069 to i32
  %cond46 = icmp ne i32 %R606945, 0
  br i1 %cond46, label %L1068, label %L1069

L1068:                                            ; preds = %L1067
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i64 0, i64 0), i32 286)
  br label %L1069

L1069:                                            ; preds = %L1068, %L1067
  call void @save(%struct.LexState* %ARG1, i32 %R6036)
  br label %L1040

L1070:                                            ; preds = %L1054, %L1053, %L1052, %L1051, %L1050, %L1049, %L1048
  %188 = load i32, i32* %7
  call void @save(%struct.LexState* %ARG1, i32 %188)
  %189 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %190 = bitcast %struct.Zio** %189 to i8*
  %191 = getelementptr inbounds i8, i8* %190, i64 64
  %192 = bitcast i8* %191 to %struct.Zio**
  %load_target47 = load %struct.Zio*, %struct.Zio** %192
  %193 = bitcast %struct.Zio* %load_target47 to i64*
  %194 = bitcast i64* %193 to i8*
  %195 = getelementptr inbounds i8, i8* %194, i64 0
  %196 = bitcast i8* %195 to i64*
  %load_target48 = load i64, i64* %196
  %R6079 = add i64 %load_target48, -1
  %197 = bitcast %struct.Zio* %load_target47 to i64*
  %198 = bitcast i64* %197 to i8*
  %199 = getelementptr inbounds i8, i8* %198, i64 0
  %200 = bitcast i8* %199 to i64*
  store i64 %R6079, i64* %200
  %R6080 = icmp ugt i64 %load_target48, 0
  %R608049 = zext i1 %R6080 to i32
  %cond50 = icmp ne i32 %R608049, 0
  br i1 %cond50, label %L1071, label %L1072

L1071:                                            ; preds = %L1070
  %201 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %202 = bitcast %struct.Zio** %201 to i8*
  %203 = getelementptr inbounds i8, i8* %202, i64 64
  %204 = bitcast i8* %203 to %struct.Zio**
  %load_target51 = load %struct.Zio*, %struct.Zio** %204
  %205 = bitcast %struct.Zio* %load_target51 to i8**
  %206 = bitcast i8** %205 to i8*
  %207 = getelementptr inbounds i8, i8* %206, i64 8
  %208 = bitcast i8* %207 to i8**
  %load_target52 = load i8*, i8** %208
  %209 = getelementptr inbounds i8, i8* %load_target52, inttoptr (i64 1 to i8*)
  %210 = bitcast %struct.Zio* %load_target51 to i8**
  %211 = bitcast i8** %210 to i8*
  %212 = getelementptr inbounds i8, i8* %211, i64 8
  %213 = bitcast i8* %212 to i8**
  store i8* %209, i8** %213
  %214 = getelementptr inbounds i8, i8* %load_target52, i64 0
  %load_target53 = load i8, i8* %214
  %R6087 = zext i8 %load_target53 to i32
  store i32 %R6087, i32* %8
  br label %L1073

L1072:                                            ; preds = %L1070
  %215 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %216 = bitcast %struct.Zio** %215 to i8*
  %217 = getelementptr inbounds i8, i8* %216, i64 64
  %218 = bitcast i8* %217 to %struct.Zio**
  %load_target54 = load %struct.Zio*, %struct.Zio** %218
  %R6090 = call i32 @luaZ_fill(%struct.Zio* %load_target54)
  store i32 %R6090, i32* %8
  br label %L1073

L1073:                                            ; preds = %L1072, %L1071
  %219 = load i32, i32* %8
  %220 = bitcast %struct.LexState* %ARG1 to i32*
  %221 = bitcast i32* %220 to i8*
  %222 = getelementptr inbounds i8, i8* %221, i64 0
  %223 = bitcast i8* %222 to i32*
  store i32 %219, i32* %223
  br label %L1040

L1074:                                            ; preds = %L1041
  call void @save(%struct.LexState* %ARG1, i32 %load_target8)
  %224 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %225 = bitcast %struct.Zio** %224 to i8*
  %226 = getelementptr inbounds i8, i8* %225, i64 64
  %227 = bitcast i8* %226 to %struct.Zio**
  %load_target55 = load %struct.Zio*, %struct.Zio** %227
  %228 = bitcast %struct.Zio* %load_target55 to i64*
  %229 = bitcast i64* %228 to i8*
  %230 = getelementptr inbounds i8, i8* %229, i64 0
  %231 = bitcast i8* %230 to i64*
  %load_target56 = load i64, i64* %231
  %R6099 = add i64 %load_target56, -1
  %232 = bitcast %struct.Zio* %load_target55 to i64*
  %233 = bitcast i64* %232 to i8*
  %234 = getelementptr inbounds i8, i8* %233, i64 0
  %235 = bitcast i8* %234 to i64*
  store i64 %R6099, i64* %235
  %R6100 = icmp ugt i64 %load_target56, 0
  %R610057 = zext i1 %R6100 to i32
  %cond58 = icmp ne i32 %R610057, 0
  br i1 %cond58, label %L1075, label %L1076

L1075:                                            ; preds = %L1074
  %236 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %237 = bitcast %struct.Zio** %236 to i8*
  %238 = getelementptr inbounds i8, i8* %237, i64 64
  %239 = bitcast i8* %238 to %struct.Zio**
  %load_target59 = load %struct.Zio*, %struct.Zio** %239
  %240 = bitcast %struct.Zio* %load_target59 to i8**
  %241 = bitcast i8** %240 to i8*
  %242 = getelementptr inbounds i8, i8* %241, i64 8
  %243 = bitcast i8* %242 to i8**
  %load_target60 = load i8*, i8** %243
  %244 = getelementptr inbounds i8, i8* %load_target60, inttoptr (i64 1 to i8*)
  %245 = bitcast %struct.Zio* %load_target59 to i8**
  %246 = bitcast i8** %245 to i8*
  %247 = getelementptr inbounds i8, i8* %246, i64 8
  %248 = bitcast i8* %247 to i8**
  store i8* %244, i8** %248
  %249 = getelementptr inbounds i8, i8* %load_target60, i64 0
  %load_target61 = load i8, i8* %249
  %R6107 = zext i8 %load_target61 to i32
  store i32 %R6107, i32* %9
  br label %L1077

L1076:                                            ; preds = %L1074
  %250 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %251 = bitcast %struct.Zio** %250 to i8*
  %252 = getelementptr inbounds i8, i8* %251, i64 64
  %253 = bitcast i8* %252 to %struct.Zio**
  %load_target62 = load %struct.Zio*, %struct.Zio** %253
  %R6110 = call i32 @luaZ_fill(%struct.Zio* %load_target62)
  store i32 %R6110, i32* %9
  br label %L1077

L1077:                                            ; preds = %L1076, %L1075
  %254 = load i32, i32* %9
  %255 = bitcast %struct.LexState* %ARG1 to i32*
  %256 = bitcast i32* %255 to i8*
  %257 = getelementptr inbounds i8, i8* %256, i64 0
  %258 = bitcast i8* %257 to i32*
  store i32 %254, i32* %258
  br label %L1040

L1078:                                            ; preds = %L1040
  call void @save(%struct.LexState* %ARG1, i32 %load_target8)
  %259 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %260 = bitcast %struct.Zio** %259 to i8*
  %261 = getelementptr inbounds i8, i8* %260, i64 64
  %262 = bitcast i8* %261 to %struct.Zio**
  %load_target63 = load %struct.Zio*, %struct.Zio** %262
  %263 = bitcast %struct.Zio* %load_target63 to i64*
  %264 = bitcast i64* %263 to i8*
  %265 = getelementptr inbounds i8, i8* %264, i64 0
  %266 = bitcast i8* %265 to i64*
  %load_target64 = load i64, i64* %266
  %R6119 = add i64 %load_target64, -1
  %267 = bitcast %struct.Zio* %load_target63 to i64*
  %268 = bitcast i64* %267 to i8*
  %269 = getelementptr inbounds i8, i8* %268, i64 0
  %270 = bitcast i8* %269 to i64*
  store i64 %R6119, i64* %270
  %R6120 = icmp ugt i64 %load_target64, 0
  %R612065 = zext i1 %R6120 to i32
  %cond66 = icmp ne i32 %R612065, 0
  br i1 %cond66, label %L1079, label %L1080

L1079:                                            ; preds = %L1078
  %271 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %272 = bitcast %struct.Zio** %271 to i8*
  %273 = getelementptr inbounds i8, i8* %272, i64 64
  %274 = bitcast i8* %273 to %struct.Zio**
  %load_target67 = load %struct.Zio*, %struct.Zio** %274
  %275 = bitcast %struct.Zio* %load_target67 to i8**
  %276 = bitcast i8** %275 to i8*
  %277 = getelementptr inbounds i8, i8* %276, i64 8
  %278 = bitcast i8* %277 to i8**
  %load_target68 = load i8*, i8** %278
  %279 = getelementptr inbounds i8, i8* %load_target68, inttoptr (i64 1 to i8*)
  %280 = bitcast %struct.Zio* %load_target67 to i8**
  %281 = bitcast i8** %280 to i8*
  %282 = getelementptr inbounds i8, i8* %281, i64 8
  %283 = bitcast i8* %282 to i8**
  store i8* %279, i8** %283
  %284 = getelementptr inbounds i8, i8* %load_target68, i64 0
  %load_target69 = load i8, i8* %284
  %R6127 = zext i8 %load_target69 to i32
  store i32 %R6127, i32* %10
  br label %L1081

L1080:                                            ; preds = %L1078
  %285 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %286 = bitcast %struct.Zio** %285 to i8*
  %287 = getelementptr inbounds i8, i8* %286, i64 64
  %288 = bitcast i8* %287 to %struct.Zio**
  %load_target70 = load %struct.Zio*, %struct.Zio** %288
  %R6130 = call i32 @luaZ_fill(%struct.Zio* %load_target70)
  store i32 %R6130, i32* %10
  br label %L1081

L1081:                                            ; preds = %L1080, %L1079
  %289 = load i32, i32* %10
  %290 = bitcast %struct.LexState* %ARG1 to i32*
  %291 = bitcast i32* %290 to i8*
  %292 = getelementptr inbounds i8, i8* %291, i64 0
  %293 = bitcast i8* %292 to i32*
  store i32 %289, i32* %293
  %294 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %295 = bitcast %struct.Mbuffer** %294 to i8*
  %296 = getelementptr inbounds i8, i8* %295, i64 72
  %297 = bitcast i8* %296 to %struct.Mbuffer**
  %load_target71 = load %struct.Mbuffer*, %struct.Mbuffer** %297
  %298 = bitcast %struct.Mbuffer* %load_target71 to i8**
  %299 = bitcast i8** %298 to i8*
  %300 = getelementptr inbounds i8, i8* %299, i64 0
  %301 = bitcast i8* %300 to i8**
  %load_target72 = load i8*, i8** %301
  %302 = getelementptr inbounds i8, i8* %load_target72, i64 1
  %303 = bitcast %struct.Mbuffer* %load_target71 to i64*
  %304 = bitcast i64* %303 to i8*
  %305 = getelementptr inbounds i8, i8* %304, i64 8
  %306 = bitcast i8* %305 to i64*
  %load_target73 = load i64, i64* %306
  %R6141 = add i64 %load_target73, -2
  %R6142 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* %302, i64 %R6141)
  %307 = bitcast { [8 x i8] }* %ARG3 to { [24 x i8] }**
  %308 = bitcast { [24 x i8] }** %307 to i8*
  %309 = getelementptr inbounds i8, i8* %308, i64 0
  %310 = bitcast i8* %309 to { [24 x i8] }**
  store { [24 x i8] }* %R6142, { [24 x i8] }** %310
  ret void
}

define internal i32 @llex(%struct.LexState* %ARG1, { [8 x i8] }* %ARG2) {
L1082:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca i32
  %8 = alloca i32
  %9 = alloca i32
  %10 = alloca i32
  %11 = alloca i32
  %12 = alloca i32
  %13 = alloca i32
  %14 = alloca i32
  %15 = alloca i32
  %16 = alloca i32
  %17 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %18 = bitcast %struct.Mbuffer** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 72
  %20 = bitcast i8* %19 to %struct.Mbuffer**
  %load_target = load %struct.Mbuffer*, %struct.Mbuffer** %20
  %21 = bitcast %struct.Mbuffer* %load_target to i64*
  %22 = bitcast i64* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24
  br label %L1083

L1083:                                            ; preds = %L1160, %L1098, %L1097, %L1096, %L1095, %L1084, %L1082
  %25 = bitcast %struct.LexState* %ARG1 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = bitcast i8* %27 to i32*
  %load_target1 = load i32, i32* %28
  switch i32 %load_target1, label %L1156 [
    i32 -1, label %L1155
    i32 10, label %L1084
    i32 13, label %L1084
    i32 34, label %L1144
    i32 39, label %L1144
    i32 45, label %L1085
    i32 46, label %L1145
    i32 60, label %L1117
    i32 61, label %L1108
    i32 62, label %L1126
    i32 91, label %L1103
    i32 126, label %L1135
  ]

L1084:                                            ; preds = %L1083, %L1083
  call void @inclinenumber(%struct.LexState* %ARG1)
  br label %L1083

L1085:                                            ; preds = %L1083
  %29 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %30 = bitcast %struct.Zio** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 64
  %32 = bitcast i8* %31 to %struct.Zio**
  %load_target2 = load %struct.Zio*, %struct.Zio** %32
  %33 = bitcast %struct.Zio* %load_target2 to i64*
  %34 = bitcast i64* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to i64*
  %load_target3 = load i64, i64* %36
  %R6152 = add i64 %load_target3, -1
  %37 = bitcast %struct.Zio* %load_target2 to i64*
  %38 = bitcast i64* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to i64*
  store i64 %R6152, i64* %40
  %R6153 = icmp ugt i64 %load_target3, 0
  %R61534 = zext i1 %R6153 to i32
  %cond = icmp ne i32 %R61534, 0
  br i1 %cond, label %L1086, label %L1087

L1086:                                            ; preds = %L1085
  %41 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %42 = bitcast %struct.Zio** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 64
  %44 = bitcast i8* %43 to %struct.Zio**
  %load_target5 = load %struct.Zio*, %struct.Zio** %44
  %45 = bitcast %struct.Zio* %load_target5 to i8**
  %46 = bitcast i8** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  %48 = bitcast i8* %47 to i8**
  %load_target6 = load i8*, i8** %48
  %49 = getelementptr inbounds i8, i8* %load_target6, inttoptr (i64 1 to i8*)
  %50 = bitcast %struct.Zio* %load_target5 to i8**
  %51 = bitcast i8** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i8**
  store i8* %49, i8** %53
  %54 = getelementptr inbounds i8, i8* %load_target6, i64 0
  %load_target7 = load i8, i8* %54
  %R6160 = zext i8 %load_target7 to i32
  store i32 %R6160, i32* %0
  br label %L1088

L1087:                                            ; preds = %L1085
  %55 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %56 = bitcast %struct.Zio** %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 64
  %58 = bitcast i8* %57 to %struct.Zio**
  %load_target8 = load %struct.Zio*, %struct.Zio** %58
  %R6163 = call i32 @luaZ_fill(%struct.Zio* %load_target8)
  store i32 %R6163, i32* %0
  br label %L1088

L1088:                                            ; preds = %L1087, %L1086
  %59 = load i32, i32* %0
  %60 = bitcast %struct.LexState* %ARG1 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 0
  %63 = bitcast i8* %62 to i32*
  store i32 %59, i32* %63
  %R6168 = icmp ne i32 %59, 45
  %R61689 = zext i1 %R6168 to i32
  %cond10 = icmp ne i32 %R61689, 0
  br i1 %cond10, label %L1089, label %L1090

L1089:                                            ; preds = %L1088
  store i32 45, i32* %16
  br label %L1177

L1090:                                            ; preds = %L1088
  %64 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %65 = bitcast %struct.Zio** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 64
  %67 = bitcast i8* %66 to %struct.Zio**
  %load_target11 = load %struct.Zio*, %struct.Zio** %67
  %68 = bitcast %struct.Zio* %load_target11 to i64*
  %69 = bitcast i64* %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 0
  %71 = bitcast i8* %70 to i64*
  %load_target12 = load i64, i64* %71
  %R6173 = add i64 %load_target12, -1
  %72 = bitcast %struct.Zio* %load_target11 to i64*
  %73 = bitcast i64* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 0
  %75 = bitcast i8* %74 to i64*
  store i64 %R6173, i64* %75
  %R6174 = icmp ugt i64 %load_target12, 0
  %R617413 = zext i1 %R6174 to i32
  %cond14 = icmp ne i32 %R617413, 0
  br i1 %cond14, label %L1091, label %L1092

L1091:                                            ; preds = %L1090
  %76 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %77 = bitcast %struct.Zio** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 64
  %79 = bitcast i8* %78 to %struct.Zio**
  %load_target15 = load %struct.Zio*, %struct.Zio** %79
  %80 = bitcast %struct.Zio* %load_target15 to i8**
  %81 = bitcast i8** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = bitcast i8* %82 to i8**
  %load_target16 = load i8*, i8** %83
  %84 = getelementptr inbounds i8, i8* %load_target16, inttoptr (i64 1 to i8*)
  %85 = bitcast %struct.Zio* %load_target15 to i8**
  %86 = bitcast i8** %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 8
  %88 = bitcast i8* %87 to i8**
  store i8* %84, i8** %88
  %89 = getelementptr inbounds i8, i8* %load_target16, i64 0
  %load_target17 = load i8, i8* %89
  %R6181 = zext i8 %load_target17 to i32
  store i32 %R6181, i32* %1
  br label %L1093

L1092:                                            ; preds = %L1090
  %90 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %91 = bitcast %struct.Zio** %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 64
  %93 = bitcast i8* %92 to %struct.Zio**
  %load_target18 = load %struct.Zio*, %struct.Zio** %93
  %R6184 = call i32 @luaZ_fill(%struct.Zio* %load_target18)
  store i32 %R6184, i32* %1
  br label %L1093

L1093:                                            ; preds = %L1092, %L1091
  %94 = load i32, i32* %1
  %95 = bitcast %struct.LexState* %ARG1 to i32*
  %96 = bitcast i32* %95 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 0
  %98 = bitcast i8* %97 to i32*
  store i32 %94, i32* %98
  %R6189 = icmp eq i32 %94, 91
  %R618919 = zext i1 %R6189 to i32
  %cond20 = icmp ne i32 %R618919, 0
  br i1 %cond20, label %L1094, label %L1096

L1094:                                            ; preds = %L1093
  %R6191 = call i32 @skip_sep(%struct.LexState* %ARG1)
  %99 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %100 = bitcast %struct.Mbuffer** %99 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 72
  %102 = bitcast i8* %101 to %struct.Mbuffer**
  %load_target21 = load %struct.Mbuffer*, %struct.Mbuffer** %102
  %103 = bitcast %struct.Mbuffer* %load_target21 to i64*
  %104 = bitcast i64* %103 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 8
  %106 = bitcast i8* %105 to i64*
  store i64 0, i64* %106
  %R6195 = icmp sge i32 %R6191, 0
  %R619522 = zext i1 %R6195 to i32
  %cond23 = icmp ne i32 %R619522, 0
  br i1 %cond23, label %L1095, label %L1096

L1095:                                            ; preds = %L1094
  call void @read_long_string(%struct.LexState* %ARG1, { [8 x i8] }* null, i32 %R6191)
  %107 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %108 = bitcast %struct.Mbuffer** %107 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 72
  %110 = bitcast i8* %109 to %struct.Mbuffer**
  %load_target24 = load %struct.Mbuffer*, %struct.Mbuffer** %110
  %111 = bitcast %struct.Mbuffer* %load_target24 to i64*
  %112 = bitcast i64* %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 8
  %114 = bitcast i8* %113 to i64*
  store i64 0, i64* %114
  br label %L1083

L1096:                                            ; preds = %L1102, %L1094, %L1093
  %115 = bitcast %struct.LexState* %ARG1 to i32*
  %116 = bitcast i32* %115 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 0
  %118 = bitcast i8* %117 to i32*
  %load_target25 = load i32, i32* %118
  %R6202 = icmp eq i32 %load_target25, 10
  %R620226 = zext i1 %R6202 to i32
  %cond27 = icmp ne i32 %R620226, 0
  br i1 %cond27, label %L1083, label %L1097

L1097:                                            ; preds = %L1096
  %R6205 = icmp eq i32 %load_target25, 13
  %R620528 = zext i1 %R6205 to i32
  %cond29 = icmp ne i32 %R620528, 0
  br i1 %cond29, label %L1083, label %L1098

L1098:                                            ; preds = %L1097
  %R6208 = icmp ne i32 %load_target25, -1
  %R620830 = zext i1 %R6208 to i32
  %cond31 = icmp ne i32 %R620830, 0
  br i1 %cond31, label %L1099, label %L1083

L1099:                                            ; preds = %L1098
  %119 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %120 = bitcast %struct.Zio** %119 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 64
  %122 = bitcast i8* %121 to %struct.Zio**
  %load_target32 = load %struct.Zio*, %struct.Zio** %122
  %123 = bitcast %struct.Zio* %load_target32 to i64*
  %124 = bitcast i64* %123 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 0
  %126 = bitcast i8* %125 to i64*
  %load_target33 = load i64, i64* %126
  %R6212 = add i64 %load_target33, -1
  %127 = bitcast %struct.Zio* %load_target32 to i64*
  %128 = bitcast i64* %127 to i8*
  %129 = getelementptr inbounds i8, i8* %128, i64 0
  %130 = bitcast i8* %129 to i64*
  store i64 %R6212, i64* %130
  %R6213 = icmp ugt i64 %load_target33, 0
  %R621334 = zext i1 %R6213 to i32
  %cond35 = icmp ne i32 %R621334, 0
  br i1 %cond35, label %L1100, label %L1101

L1100:                                            ; preds = %L1099
  %131 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %132 = bitcast %struct.Zio** %131 to i8*
  %133 = getelementptr inbounds i8, i8* %132, i64 64
  %134 = bitcast i8* %133 to %struct.Zio**
  %load_target36 = load %struct.Zio*, %struct.Zio** %134
  %135 = bitcast %struct.Zio* %load_target36 to i8**
  %136 = bitcast i8** %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 8
  %138 = bitcast i8* %137 to i8**
  %load_target37 = load i8*, i8** %138
  %139 = getelementptr inbounds i8, i8* %load_target37, inttoptr (i64 1 to i8*)
  %140 = bitcast %struct.Zio* %load_target36 to i8**
  %141 = bitcast i8** %140 to i8*
  %142 = getelementptr inbounds i8, i8* %141, i64 8
  %143 = bitcast i8* %142 to i8**
  store i8* %139, i8** %143
  %144 = getelementptr inbounds i8, i8* %load_target37, i64 0
  %load_target38 = load i8, i8* %144
  %R6220 = zext i8 %load_target38 to i32
  store i32 %R6220, i32* %2
  br label %L1102

L1101:                                            ; preds = %L1099
  %145 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %146 = bitcast %struct.Zio** %145 to i8*
  %147 = getelementptr inbounds i8, i8* %146, i64 64
  %148 = bitcast i8* %147 to %struct.Zio**
  %load_target39 = load %struct.Zio*, %struct.Zio** %148
  %R6223 = call i32 @luaZ_fill(%struct.Zio* %load_target39)
  store i32 %R6223, i32* %2
  br label %L1102

L1102:                                            ; preds = %L1101, %L1100
  %149 = load i32, i32* %2
  %150 = bitcast %struct.LexState* %ARG1 to i32*
  %151 = bitcast i32* %150 to i8*
  %152 = getelementptr inbounds i8, i8* %151, i64 0
  %153 = bitcast i8* %152 to i32*
  store i32 %149, i32* %153
  br label %L1096

L1103:                                            ; preds = %L1083
  %R6227 = call i32 @skip_sep(%struct.LexState* %ARG1)
  %R6229 = icmp sge i32 %R6227, 0
  %R622940 = zext i1 %R6229 to i32
  %cond41 = icmp ne i32 %R622940, 0
  br i1 %cond41, label %L1104, label %L1105

L1104:                                            ; preds = %L1103
  call void @read_long_string(%struct.LexState* %ARG1, { [8 x i8] }* %ARG2, i32 %R6227)
  store i32 286, i32* %16
  br label %L1177

L1105:                                            ; preds = %L1103
  %R6234 = icmp eq i32 %R6227, -1
  %R623442 = zext i1 %R6234 to i32
  %cond43 = icmp ne i32 %R623442, 0
  br i1 %cond43, label %L1106, label %L1107

L1106:                                            ; preds = %L1105
  store i32 91, i32* %16
  br label %L1177

L1107:                                            ; preds = %L1105
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i64 0, i64 0), i32 286)
  br label %L1108

L1108:                                            ; preds = %L1107, %L1083
  %154 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %155 = bitcast %struct.Zio** %154 to i8*
  %156 = getelementptr inbounds i8, i8* %155, i64 64
  %157 = bitcast i8* %156 to %struct.Zio**
  %load_target44 = load %struct.Zio*, %struct.Zio** %157
  %158 = bitcast %struct.Zio* %load_target44 to i64*
  %159 = bitcast i64* %158 to i8*
  %160 = getelementptr inbounds i8, i8* %159, i64 0
  %161 = bitcast i8* %160 to i64*
  %load_target45 = load i64, i64* %161
  %R6240 = add i64 %load_target45, -1
  %162 = bitcast %struct.Zio* %load_target44 to i64*
  %163 = bitcast i64* %162 to i8*
  %164 = getelementptr inbounds i8, i8* %163, i64 0
  %165 = bitcast i8* %164 to i64*
  store i64 %R6240, i64* %165
  %R6241 = icmp ugt i64 %load_target45, 0
  %R624146 = zext i1 %R6241 to i32
  %cond47 = icmp ne i32 %R624146, 0
  br i1 %cond47, label %L1109, label %L1110

L1109:                                            ; preds = %L1108
  %166 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %167 = bitcast %struct.Zio** %166 to i8*
  %168 = getelementptr inbounds i8, i8* %167, i64 64
  %169 = bitcast i8* %168 to %struct.Zio**
  %load_target48 = load %struct.Zio*, %struct.Zio** %169
  %170 = bitcast %struct.Zio* %load_target48 to i8**
  %171 = bitcast i8** %170 to i8*
  %172 = getelementptr inbounds i8, i8* %171, i64 8
  %173 = bitcast i8* %172 to i8**
  %load_target49 = load i8*, i8** %173
  %174 = getelementptr inbounds i8, i8* %load_target49, inttoptr (i64 1 to i8*)
  %175 = bitcast %struct.Zio* %load_target48 to i8**
  %176 = bitcast i8** %175 to i8*
  %177 = getelementptr inbounds i8, i8* %176, i64 8
  %178 = bitcast i8* %177 to i8**
  store i8* %174, i8** %178
  %179 = getelementptr inbounds i8, i8* %load_target49, i64 0
  %load_target50 = load i8, i8* %179
  %R6248 = zext i8 %load_target50 to i32
  store i32 %R6248, i32* %3
  br label %L1111

L1110:                                            ; preds = %L1108
  %180 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %181 = bitcast %struct.Zio** %180 to i8*
  %182 = getelementptr inbounds i8, i8* %181, i64 64
  %183 = bitcast i8* %182 to %struct.Zio**
  %load_target51 = load %struct.Zio*, %struct.Zio** %183
  %R6251 = call i32 @luaZ_fill(%struct.Zio* %load_target51)
  store i32 %R6251, i32* %3
  br label %L1111

L1111:                                            ; preds = %L1110, %L1109
  %184 = load i32, i32* %3
  %185 = bitcast %struct.LexState* %ARG1 to i32*
  %186 = bitcast i32* %185 to i8*
  %187 = getelementptr inbounds i8, i8* %186, i64 0
  %188 = bitcast i8* %187 to i32*
  store i32 %184, i32* %188
  %R6256 = icmp ne i32 %184, 61
  %R625652 = zext i1 %R6256 to i32
  %cond53 = icmp ne i32 %R625652, 0
  br i1 %cond53, label %L1112, label %L1113

L1112:                                            ; preds = %L1111
  store i32 61, i32* %16
  br label %L1177

L1113:                                            ; preds = %L1111
  %189 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %190 = bitcast %struct.Zio** %189 to i8*
  %191 = getelementptr inbounds i8, i8* %190, i64 64
  %192 = bitcast i8* %191 to %struct.Zio**
  %load_target54 = load %struct.Zio*, %struct.Zio** %192
  %193 = bitcast %struct.Zio* %load_target54 to i64*
  %194 = bitcast i64* %193 to i8*
  %195 = getelementptr inbounds i8, i8* %194, i64 0
  %196 = bitcast i8* %195 to i64*
  %load_target55 = load i64, i64* %196
  %R6260 = add i64 %load_target55, -1
  %197 = bitcast %struct.Zio* %load_target54 to i64*
  %198 = bitcast i64* %197 to i8*
  %199 = getelementptr inbounds i8, i8* %198, i64 0
  %200 = bitcast i8* %199 to i64*
  store i64 %R6260, i64* %200
  %R6261 = icmp ugt i64 %load_target55, 0
  %R626156 = zext i1 %R6261 to i32
  %cond57 = icmp ne i32 %R626156, 0
  br i1 %cond57, label %L1114, label %L1115

L1114:                                            ; preds = %L1113
  %201 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %202 = bitcast %struct.Zio** %201 to i8*
  %203 = getelementptr inbounds i8, i8* %202, i64 64
  %204 = bitcast i8* %203 to %struct.Zio**
  %load_target58 = load %struct.Zio*, %struct.Zio** %204
  %205 = bitcast %struct.Zio* %load_target58 to i8**
  %206 = bitcast i8** %205 to i8*
  %207 = getelementptr inbounds i8, i8* %206, i64 8
  %208 = bitcast i8* %207 to i8**
  %load_target59 = load i8*, i8** %208
  %209 = getelementptr inbounds i8, i8* %load_target59, inttoptr (i64 1 to i8*)
  %210 = bitcast %struct.Zio* %load_target58 to i8**
  %211 = bitcast i8** %210 to i8*
  %212 = getelementptr inbounds i8, i8* %211, i64 8
  %213 = bitcast i8* %212 to i8**
  store i8* %209, i8** %213
  %214 = getelementptr inbounds i8, i8* %load_target59, i64 0
  %load_target60 = load i8, i8* %214
  %R6268 = zext i8 %load_target60 to i32
  store i32 %R6268, i32* %4
  br label %L1116

L1115:                                            ; preds = %L1113
  %215 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %216 = bitcast %struct.Zio** %215 to i8*
  %217 = getelementptr inbounds i8, i8* %216, i64 64
  %218 = bitcast i8* %217 to %struct.Zio**
  %load_target61 = load %struct.Zio*, %struct.Zio** %218
  %R6271 = call i32 @luaZ_fill(%struct.Zio* %load_target61)
  store i32 %R6271, i32* %4
  br label %L1116

L1116:                                            ; preds = %L1115, %L1114
  %219 = load i32, i32* %4
  %220 = bitcast %struct.LexState* %ARG1 to i32*
  %221 = bitcast i32* %220 to i8*
  %222 = getelementptr inbounds i8, i8* %221, i64 0
  %223 = bitcast i8* %222 to i32*
  store i32 %219, i32* %223
  store i32 280, i32* %16
  br label %L1177

L1117:                                            ; preds = %L1083
  %224 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %225 = bitcast %struct.Zio** %224 to i8*
  %226 = getelementptr inbounds i8, i8* %225, i64 64
  %227 = bitcast i8* %226 to %struct.Zio**
  %load_target62 = load %struct.Zio*, %struct.Zio** %227
  %228 = bitcast %struct.Zio* %load_target62 to i64*
  %229 = bitcast i64* %228 to i8*
  %230 = getelementptr inbounds i8, i8* %229, i64 0
  %231 = bitcast i8* %230 to i64*
  %load_target63 = load i64, i64* %231
  %R6277 = add i64 %load_target63, -1
  %232 = bitcast %struct.Zio* %load_target62 to i64*
  %233 = bitcast i64* %232 to i8*
  %234 = getelementptr inbounds i8, i8* %233, i64 0
  %235 = bitcast i8* %234 to i64*
  store i64 %R6277, i64* %235
  %R6278 = icmp ugt i64 %load_target63, 0
  %R627864 = zext i1 %R6278 to i32
  %cond65 = icmp ne i32 %R627864, 0
  br i1 %cond65, label %L1118, label %L1119

L1118:                                            ; preds = %L1117
  %236 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %237 = bitcast %struct.Zio** %236 to i8*
  %238 = getelementptr inbounds i8, i8* %237, i64 64
  %239 = bitcast i8* %238 to %struct.Zio**
  %load_target66 = load %struct.Zio*, %struct.Zio** %239
  %240 = bitcast %struct.Zio* %load_target66 to i8**
  %241 = bitcast i8** %240 to i8*
  %242 = getelementptr inbounds i8, i8* %241, i64 8
  %243 = bitcast i8* %242 to i8**
  %load_target67 = load i8*, i8** %243
  %244 = getelementptr inbounds i8, i8* %load_target67, inttoptr (i64 1 to i8*)
  %245 = bitcast %struct.Zio* %load_target66 to i8**
  %246 = bitcast i8** %245 to i8*
  %247 = getelementptr inbounds i8, i8* %246, i64 8
  %248 = bitcast i8* %247 to i8**
  store i8* %244, i8** %248
  %249 = getelementptr inbounds i8, i8* %load_target67, i64 0
  %load_target68 = load i8, i8* %249
  %R6285 = zext i8 %load_target68 to i32
  store i32 %R6285, i32* %5
  br label %L1120

L1119:                                            ; preds = %L1117
  %250 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %251 = bitcast %struct.Zio** %250 to i8*
  %252 = getelementptr inbounds i8, i8* %251, i64 64
  %253 = bitcast i8* %252 to %struct.Zio**
  %load_target69 = load %struct.Zio*, %struct.Zio** %253
  %R6288 = call i32 @luaZ_fill(%struct.Zio* %load_target69)
  store i32 %R6288, i32* %5
  br label %L1120

L1120:                                            ; preds = %L1119, %L1118
  %254 = load i32, i32* %5
  %255 = bitcast %struct.LexState* %ARG1 to i32*
  %256 = bitcast i32* %255 to i8*
  %257 = getelementptr inbounds i8, i8* %256, i64 0
  %258 = bitcast i8* %257 to i32*
  store i32 %254, i32* %258
  %R6293 = icmp ne i32 %254, 61
  %R629370 = zext i1 %R6293 to i32
  %cond71 = icmp ne i32 %R629370, 0
  br i1 %cond71, label %L1121, label %L1122

L1121:                                            ; preds = %L1120
  store i32 60, i32* %16
  br label %L1177

L1122:                                            ; preds = %L1120
  %259 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %260 = bitcast %struct.Zio** %259 to i8*
  %261 = getelementptr inbounds i8, i8* %260, i64 64
  %262 = bitcast i8* %261 to %struct.Zio**
  %load_target72 = load %struct.Zio*, %struct.Zio** %262
  %263 = bitcast %struct.Zio* %load_target72 to i64*
  %264 = bitcast i64* %263 to i8*
  %265 = getelementptr inbounds i8, i8* %264, i64 0
  %266 = bitcast i8* %265 to i64*
  %load_target73 = load i64, i64* %266
  %R6297 = add i64 %load_target73, -1
  %267 = bitcast %struct.Zio* %load_target72 to i64*
  %268 = bitcast i64* %267 to i8*
  %269 = getelementptr inbounds i8, i8* %268, i64 0
  %270 = bitcast i8* %269 to i64*
  store i64 %R6297, i64* %270
  %R6298 = icmp ugt i64 %load_target73, 0
  %R629874 = zext i1 %R6298 to i32
  %cond75 = icmp ne i32 %R629874, 0
  br i1 %cond75, label %L1123, label %L1124

L1123:                                            ; preds = %L1122
  %271 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %272 = bitcast %struct.Zio** %271 to i8*
  %273 = getelementptr inbounds i8, i8* %272, i64 64
  %274 = bitcast i8* %273 to %struct.Zio**
  %load_target76 = load %struct.Zio*, %struct.Zio** %274
  %275 = bitcast %struct.Zio* %load_target76 to i8**
  %276 = bitcast i8** %275 to i8*
  %277 = getelementptr inbounds i8, i8* %276, i64 8
  %278 = bitcast i8* %277 to i8**
  %load_target77 = load i8*, i8** %278
  %279 = getelementptr inbounds i8, i8* %load_target77, inttoptr (i64 1 to i8*)
  %280 = bitcast %struct.Zio* %load_target76 to i8**
  %281 = bitcast i8** %280 to i8*
  %282 = getelementptr inbounds i8, i8* %281, i64 8
  %283 = bitcast i8* %282 to i8**
  store i8* %279, i8** %283
  %284 = getelementptr inbounds i8, i8* %load_target77, i64 0
  %load_target78 = load i8, i8* %284
  %R6305 = zext i8 %load_target78 to i32
  store i32 %R6305, i32* %6
  br label %L1125

L1124:                                            ; preds = %L1122
  %285 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %286 = bitcast %struct.Zio** %285 to i8*
  %287 = getelementptr inbounds i8, i8* %286, i64 64
  %288 = bitcast i8* %287 to %struct.Zio**
  %load_target79 = load %struct.Zio*, %struct.Zio** %288
  %R6308 = call i32 @luaZ_fill(%struct.Zio* %load_target79)
  store i32 %R6308, i32* %6
  br label %L1125

L1125:                                            ; preds = %L1124, %L1123
  %289 = load i32, i32* %6
  %290 = bitcast %struct.LexState* %ARG1 to i32*
  %291 = bitcast i32* %290 to i8*
  %292 = getelementptr inbounds i8, i8* %291, i64 0
  %293 = bitcast i8* %292 to i32*
  store i32 %289, i32* %293
  store i32 282, i32* %16
  br label %L1177

L1126:                                            ; preds = %L1083
  %294 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %295 = bitcast %struct.Zio** %294 to i8*
  %296 = getelementptr inbounds i8, i8* %295, i64 64
  %297 = bitcast i8* %296 to %struct.Zio**
  %load_target80 = load %struct.Zio*, %struct.Zio** %297
  %298 = bitcast %struct.Zio* %load_target80 to i64*
  %299 = bitcast i64* %298 to i8*
  %300 = getelementptr inbounds i8, i8* %299, i64 0
  %301 = bitcast i8* %300 to i64*
  %load_target81 = load i64, i64* %301
  %R6314 = add i64 %load_target81, -1
  %302 = bitcast %struct.Zio* %load_target80 to i64*
  %303 = bitcast i64* %302 to i8*
  %304 = getelementptr inbounds i8, i8* %303, i64 0
  %305 = bitcast i8* %304 to i64*
  store i64 %R6314, i64* %305
  %R6315 = icmp ugt i64 %load_target81, 0
  %R631582 = zext i1 %R6315 to i32
  %cond83 = icmp ne i32 %R631582, 0
  br i1 %cond83, label %L1127, label %L1128

L1127:                                            ; preds = %L1126
  %306 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %307 = bitcast %struct.Zio** %306 to i8*
  %308 = getelementptr inbounds i8, i8* %307, i64 64
  %309 = bitcast i8* %308 to %struct.Zio**
  %load_target84 = load %struct.Zio*, %struct.Zio** %309
  %310 = bitcast %struct.Zio* %load_target84 to i8**
  %311 = bitcast i8** %310 to i8*
  %312 = getelementptr inbounds i8, i8* %311, i64 8
  %313 = bitcast i8* %312 to i8**
  %load_target85 = load i8*, i8** %313
  %314 = getelementptr inbounds i8, i8* %load_target85, inttoptr (i64 1 to i8*)
  %315 = bitcast %struct.Zio* %load_target84 to i8**
  %316 = bitcast i8** %315 to i8*
  %317 = getelementptr inbounds i8, i8* %316, i64 8
  %318 = bitcast i8* %317 to i8**
  store i8* %314, i8** %318
  %319 = getelementptr inbounds i8, i8* %load_target85, i64 0
  %load_target86 = load i8, i8* %319
  %R6322 = zext i8 %load_target86 to i32
  store i32 %R6322, i32* %7
  br label %L1129

L1128:                                            ; preds = %L1126
  %320 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %321 = bitcast %struct.Zio** %320 to i8*
  %322 = getelementptr inbounds i8, i8* %321, i64 64
  %323 = bitcast i8* %322 to %struct.Zio**
  %load_target87 = load %struct.Zio*, %struct.Zio** %323
  %R6325 = call i32 @luaZ_fill(%struct.Zio* %load_target87)
  store i32 %R6325, i32* %7
  br label %L1129

L1129:                                            ; preds = %L1128, %L1127
  %324 = load i32, i32* %7
  %325 = bitcast %struct.LexState* %ARG1 to i32*
  %326 = bitcast i32* %325 to i8*
  %327 = getelementptr inbounds i8, i8* %326, i64 0
  %328 = bitcast i8* %327 to i32*
  store i32 %324, i32* %328
  %R6330 = icmp ne i32 %324, 61
  %R633088 = zext i1 %R6330 to i32
  %cond89 = icmp ne i32 %R633088, 0
  br i1 %cond89, label %L1130, label %L1131

L1130:                                            ; preds = %L1129
  store i32 62, i32* %16
  br label %L1177

L1131:                                            ; preds = %L1129
  %329 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %330 = bitcast %struct.Zio** %329 to i8*
  %331 = getelementptr inbounds i8, i8* %330, i64 64
  %332 = bitcast i8* %331 to %struct.Zio**
  %load_target90 = load %struct.Zio*, %struct.Zio** %332
  %333 = bitcast %struct.Zio* %load_target90 to i64*
  %334 = bitcast i64* %333 to i8*
  %335 = getelementptr inbounds i8, i8* %334, i64 0
  %336 = bitcast i8* %335 to i64*
  %load_target91 = load i64, i64* %336
  %R6334 = add i64 %load_target91, -1
  %337 = bitcast %struct.Zio* %load_target90 to i64*
  %338 = bitcast i64* %337 to i8*
  %339 = getelementptr inbounds i8, i8* %338, i64 0
  %340 = bitcast i8* %339 to i64*
  store i64 %R6334, i64* %340
  %R6335 = icmp ugt i64 %load_target91, 0
  %R633592 = zext i1 %R6335 to i32
  %cond93 = icmp ne i32 %R633592, 0
  br i1 %cond93, label %L1132, label %L1133

L1132:                                            ; preds = %L1131
  %341 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %342 = bitcast %struct.Zio** %341 to i8*
  %343 = getelementptr inbounds i8, i8* %342, i64 64
  %344 = bitcast i8* %343 to %struct.Zio**
  %load_target94 = load %struct.Zio*, %struct.Zio** %344
  %345 = bitcast %struct.Zio* %load_target94 to i8**
  %346 = bitcast i8** %345 to i8*
  %347 = getelementptr inbounds i8, i8* %346, i64 8
  %348 = bitcast i8* %347 to i8**
  %load_target95 = load i8*, i8** %348
  %349 = getelementptr inbounds i8, i8* %load_target95, inttoptr (i64 1 to i8*)
  %350 = bitcast %struct.Zio* %load_target94 to i8**
  %351 = bitcast i8** %350 to i8*
  %352 = getelementptr inbounds i8, i8* %351, i64 8
  %353 = bitcast i8* %352 to i8**
  store i8* %349, i8** %353
  %354 = getelementptr inbounds i8, i8* %load_target95, i64 0
  %load_target96 = load i8, i8* %354
  %R6342 = zext i8 %load_target96 to i32
  store i32 %R6342, i32* %8
  br label %L1134

L1133:                                            ; preds = %L1131
  %355 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %356 = bitcast %struct.Zio** %355 to i8*
  %357 = getelementptr inbounds i8, i8* %356, i64 64
  %358 = bitcast i8* %357 to %struct.Zio**
  %load_target97 = load %struct.Zio*, %struct.Zio** %358
  %R6345 = call i32 @luaZ_fill(%struct.Zio* %load_target97)
  store i32 %R6345, i32* %8
  br label %L1134

L1134:                                            ; preds = %L1133, %L1132
  %359 = load i32, i32* %8
  %360 = bitcast %struct.LexState* %ARG1 to i32*
  %361 = bitcast i32* %360 to i8*
  %362 = getelementptr inbounds i8, i8* %361, i64 0
  %363 = bitcast i8* %362 to i32*
  store i32 %359, i32* %363
  store i32 281, i32* %16
  br label %L1177

L1135:                                            ; preds = %L1083
  %364 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %365 = bitcast %struct.Zio** %364 to i8*
  %366 = getelementptr inbounds i8, i8* %365, i64 64
  %367 = bitcast i8* %366 to %struct.Zio**
  %load_target98 = load %struct.Zio*, %struct.Zio** %367
  %368 = bitcast %struct.Zio* %load_target98 to i64*
  %369 = bitcast i64* %368 to i8*
  %370 = getelementptr inbounds i8, i8* %369, i64 0
  %371 = bitcast i8* %370 to i64*
  %load_target99 = load i64, i64* %371
  %R6351 = add i64 %load_target99, -1
  %372 = bitcast %struct.Zio* %load_target98 to i64*
  %373 = bitcast i64* %372 to i8*
  %374 = getelementptr inbounds i8, i8* %373, i64 0
  %375 = bitcast i8* %374 to i64*
  store i64 %R6351, i64* %375
  %R6352 = icmp ugt i64 %load_target99, 0
  %R6352100 = zext i1 %R6352 to i32
  %cond101 = icmp ne i32 %R6352100, 0
  br i1 %cond101, label %L1136, label %L1137

L1136:                                            ; preds = %L1135
  %376 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %377 = bitcast %struct.Zio** %376 to i8*
  %378 = getelementptr inbounds i8, i8* %377, i64 64
  %379 = bitcast i8* %378 to %struct.Zio**
  %load_target102 = load %struct.Zio*, %struct.Zio** %379
  %380 = bitcast %struct.Zio* %load_target102 to i8**
  %381 = bitcast i8** %380 to i8*
  %382 = getelementptr inbounds i8, i8* %381, i64 8
  %383 = bitcast i8* %382 to i8**
  %load_target103 = load i8*, i8** %383
  %384 = getelementptr inbounds i8, i8* %load_target103, inttoptr (i64 1 to i8*)
  %385 = bitcast %struct.Zio* %load_target102 to i8**
  %386 = bitcast i8** %385 to i8*
  %387 = getelementptr inbounds i8, i8* %386, i64 8
  %388 = bitcast i8* %387 to i8**
  store i8* %384, i8** %388
  %389 = getelementptr inbounds i8, i8* %load_target103, i64 0
  %load_target104 = load i8, i8* %389
  %R6359 = zext i8 %load_target104 to i32
  store i32 %R6359, i32* %9
  br label %L1138

L1137:                                            ; preds = %L1135
  %390 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %391 = bitcast %struct.Zio** %390 to i8*
  %392 = getelementptr inbounds i8, i8* %391, i64 64
  %393 = bitcast i8* %392 to %struct.Zio**
  %load_target105 = load %struct.Zio*, %struct.Zio** %393
  %R6362 = call i32 @luaZ_fill(%struct.Zio* %load_target105)
  store i32 %R6362, i32* %9
  br label %L1138

L1138:                                            ; preds = %L1137, %L1136
  %394 = load i32, i32* %9
  %395 = bitcast %struct.LexState* %ARG1 to i32*
  %396 = bitcast i32* %395 to i8*
  %397 = getelementptr inbounds i8, i8* %396, i64 0
  %398 = bitcast i8* %397 to i32*
  store i32 %394, i32* %398
  %R6367 = icmp ne i32 %394, 61
  %R6367106 = zext i1 %R6367 to i32
  %cond107 = icmp ne i32 %R6367106, 0
  br i1 %cond107, label %L1139, label %L1140

L1139:                                            ; preds = %L1138
  store i32 126, i32* %16
  br label %L1177

L1140:                                            ; preds = %L1138
  %399 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %400 = bitcast %struct.Zio** %399 to i8*
  %401 = getelementptr inbounds i8, i8* %400, i64 64
  %402 = bitcast i8* %401 to %struct.Zio**
  %load_target108 = load %struct.Zio*, %struct.Zio** %402
  %403 = bitcast %struct.Zio* %load_target108 to i64*
  %404 = bitcast i64* %403 to i8*
  %405 = getelementptr inbounds i8, i8* %404, i64 0
  %406 = bitcast i8* %405 to i64*
  %load_target109 = load i64, i64* %406
  %R6371 = add i64 %load_target109, -1
  %407 = bitcast %struct.Zio* %load_target108 to i64*
  %408 = bitcast i64* %407 to i8*
  %409 = getelementptr inbounds i8, i8* %408, i64 0
  %410 = bitcast i8* %409 to i64*
  store i64 %R6371, i64* %410
  %R6372 = icmp ugt i64 %load_target109, 0
  %R6372110 = zext i1 %R6372 to i32
  %cond111 = icmp ne i32 %R6372110, 0
  br i1 %cond111, label %L1141, label %L1142

L1141:                                            ; preds = %L1140
  %411 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %412 = bitcast %struct.Zio** %411 to i8*
  %413 = getelementptr inbounds i8, i8* %412, i64 64
  %414 = bitcast i8* %413 to %struct.Zio**
  %load_target112 = load %struct.Zio*, %struct.Zio** %414
  %415 = bitcast %struct.Zio* %load_target112 to i8**
  %416 = bitcast i8** %415 to i8*
  %417 = getelementptr inbounds i8, i8* %416, i64 8
  %418 = bitcast i8* %417 to i8**
  %load_target113 = load i8*, i8** %418
  %419 = getelementptr inbounds i8, i8* %load_target113, inttoptr (i64 1 to i8*)
  %420 = bitcast %struct.Zio* %load_target112 to i8**
  %421 = bitcast i8** %420 to i8*
  %422 = getelementptr inbounds i8, i8* %421, i64 8
  %423 = bitcast i8* %422 to i8**
  store i8* %419, i8** %423
  %424 = getelementptr inbounds i8, i8* %load_target113, i64 0
  %load_target114 = load i8, i8* %424
  %R6379 = zext i8 %load_target114 to i32
  store i32 %R6379, i32* %10
  br label %L1143

L1142:                                            ; preds = %L1140
  %425 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %426 = bitcast %struct.Zio** %425 to i8*
  %427 = getelementptr inbounds i8, i8* %426, i64 64
  %428 = bitcast i8* %427 to %struct.Zio**
  %load_target115 = load %struct.Zio*, %struct.Zio** %428
  %R6382 = call i32 @luaZ_fill(%struct.Zio* %load_target115)
  store i32 %R6382, i32* %10
  br label %L1143

L1143:                                            ; preds = %L1142, %L1141
  %429 = load i32, i32* %10
  %430 = bitcast %struct.LexState* %ARG1 to i32*
  %431 = bitcast i32* %430 to i8*
  %432 = getelementptr inbounds i8, i8* %431, i64 0
  %433 = bitcast i8* %432 to i32*
  store i32 %429, i32* %433
  store i32 283, i32* %16
  br label %L1177

L1144:                                            ; preds = %L1083, %L1083
  call void @read_string(%struct.LexState* %ARG1, i32 %load_target1, { [8 x i8] }* %ARG2)
  store i32 286, i32* %16
  br label %L1177

L1145:                                            ; preds = %L1083
  call void @save(%struct.LexState* %ARG1, i32 %load_target1)
  %434 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %435 = bitcast %struct.Zio** %434 to i8*
  %436 = getelementptr inbounds i8, i8* %435, i64 64
  %437 = bitcast i8* %436 to %struct.Zio**
  %load_target116 = load %struct.Zio*, %struct.Zio** %437
  %438 = bitcast %struct.Zio* %load_target116 to i64*
  %439 = bitcast i64* %438 to i8*
  %440 = getelementptr inbounds i8, i8* %439, i64 0
  %441 = bitcast i8* %440 to i64*
  %load_target117 = load i64, i64* %441
  %R6395 = add i64 %load_target117, -1
  %442 = bitcast %struct.Zio* %load_target116 to i64*
  %443 = bitcast i64* %442 to i8*
  %444 = getelementptr inbounds i8, i8* %443, i64 0
  %445 = bitcast i8* %444 to i64*
  store i64 %R6395, i64* %445
  %R6396 = icmp ugt i64 %load_target117, 0
  %R6396118 = zext i1 %R6396 to i32
  %cond119 = icmp ne i32 %R6396118, 0
  br i1 %cond119, label %L1146, label %L1147

L1146:                                            ; preds = %L1145
  %446 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %447 = bitcast %struct.Zio** %446 to i8*
  %448 = getelementptr inbounds i8, i8* %447, i64 64
  %449 = bitcast i8* %448 to %struct.Zio**
  %load_target120 = load %struct.Zio*, %struct.Zio** %449
  %450 = bitcast %struct.Zio* %load_target120 to i8**
  %451 = bitcast i8** %450 to i8*
  %452 = getelementptr inbounds i8, i8* %451, i64 8
  %453 = bitcast i8* %452 to i8**
  %load_target121 = load i8*, i8** %453
  %454 = getelementptr inbounds i8, i8* %load_target121, inttoptr (i64 1 to i8*)
  %455 = bitcast %struct.Zio* %load_target120 to i8**
  %456 = bitcast i8** %455 to i8*
  %457 = getelementptr inbounds i8, i8* %456, i64 8
  %458 = bitcast i8* %457 to i8**
  store i8* %454, i8** %458
  %459 = getelementptr inbounds i8, i8* %load_target121, i64 0
  %load_target122 = load i8, i8* %459
  %R6403 = zext i8 %load_target122 to i32
  store i32 %R6403, i32* %11
  br label %L1148

L1147:                                            ; preds = %L1145
  %460 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %461 = bitcast %struct.Zio** %460 to i8*
  %462 = getelementptr inbounds i8, i8* %461, i64 64
  %463 = bitcast i8* %462 to %struct.Zio**
  %load_target123 = load %struct.Zio*, %struct.Zio** %463
  %R6406 = call i32 @luaZ_fill(%struct.Zio* %load_target123)
  store i32 %R6406, i32* %11
  br label %L1148

L1148:                                            ; preds = %L1147, %L1146
  %464 = load i32, i32* %11
  %465 = bitcast %struct.LexState* %ARG1 to i32*
  %466 = bitcast i32* %465 to i8*
  %467 = getelementptr inbounds i8, i8* %466, i64 0
  %468 = bitcast i8* %467 to i32*
  store i32 %464, i32* %468
  %R6411 = call i32 @check_next(%struct.LexState* %ARG1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0))
  %cond124 = icmp ne i32 %R6411, 0
  br i1 %cond124, label %L1149, label %L1152

L1149:                                            ; preds = %L1148
  %R6414 = call i32 @check_next(%struct.LexState* %ARG1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.72, i64 0, i64 0))
  %cond125 = icmp ne i32 %R6414, 0
  br i1 %cond125, label %L1150, label %L1151

L1150:                                            ; preds = %L1149
  store i32 279, i32* %16
  br label %L1177

L1151:                                            ; preds = %L1149
  store i32 278, i32* %16
  br label %L1177

L1152:                                            ; preds = %L1148
  %R6415 = call i16** @__ctype_b_loc()
  %469 = bitcast i16** %R6415 to i8*
  %470 = getelementptr inbounds i8, i8* %469, i64 0
  %471 = bitcast i8* %470 to i16**
  %load_target126 = load i16*, i16** %471
  %472 = bitcast %struct.LexState* %ARG1 to i32*
  %473 = bitcast i32* %472 to i8*
  %474 = getelementptr inbounds i8, i8* %473, i64 0
  %475 = bitcast i8* %474 to i32*
  %load_target127 = load i32, i32* %475
  %R6420 = sext i32 %load_target127 to i64
  %R6421 = mul i64 %R6420, 2
  %476 = bitcast i16* %load_target126 to i8*
  %477 = getelementptr inbounds i8, i8* %476, i64 %R6421
  %478 = bitcast i8* %477 to i16*
  %479 = bitcast i16* %478 to i8*
  %480 = getelementptr inbounds i8, i8* %479, i64 0
  %481 = bitcast i8* %480 to i16*
  %load_target128 = load i16, i16* %481
  %R6424 = zext i16 %load_target128 to i32
  %R6425 = and i32 %R6424, 2048
  %cond129 = icmp ne i32 %R6425, 0
  br i1 %cond129, label %L1154, label %L1153

L1153:                                            ; preds = %L1152
  store i32 46, i32* %16
  br label %L1177

L1154:                                            ; preds = %L1152
  call void @read_numeral(%struct.LexState* %ARG1, { [8 x i8] }* %ARG2)
  store i32 284, i32* %16
  br label %L1177

L1155:                                            ; preds = %L1083
  store i32 287, i32* %16
  br label %L1177

L1156:                                            ; preds = %L1083
  %R6428 = call i16** @__ctype_b_loc()
  %482 = bitcast i16** %R6428 to i8*
  %483 = getelementptr inbounds i8, i8* %482, i64 0
  %484 = bitcast i8* %483 to i16**
  %load_target130 = load i16*, i16** %484
  %485 = bitcast %struct.LexState* %ARG1 to i32*
  %486 = bitcast i32* %485 to i8*
  %487 = getelementptr inbounds i8, i8* %486, i64 0
  %488 = bitcast i8* %487 to i32*
  %load_target131 = load i32, i32* %488
  %R6433 = sext i32 %load_target131 to i64
  %R6434 = mul i64 %R6433, 2
  %489 = bitcast i16* %load_target130 to i8*
  %490 = getelementptr inbounds i8, i8* %489, i64 %R6434
  %491 = bitcast i8* %490 to i16*
  %492 = bitcast i16* %491 to i8*
  %493 = getelementptr inbounds i8, i8* %492, i64 0
  %494 = bitcast i8* %493 to i16*
  %load_target132 = load i16, i16* %494
  %R6437 = zext i16 %load_target132 to i32
  %R6438 = and i32 %R6437, 8192
  %cond133 = icmp ne i32 %R6438, 0
  br i1 %cond133, label %L1157, label %L1161

L1157:                                            ; preds = %L1156
  %495 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %496 = bitcast %struct.Zio** %495 to i8*
  %497 = getelementptr inbounds i8, i8* %496, i64 64
  %498 = bitcast i8* %497 to %struct.Zio**
  %load_target134 = load %struct.Zio*, %struct.Zio** %498
  %499 = bitcast %struct.Zio* %load_target134 to i64*
  %500 = bitcast i64* %499 to i8*
  %501 = getelementptr inbounds i8, i8* %500, i64 0
  %502 = bitcast i8* %501 to i64*
  %load_target135 = load i64, i64* %502
  %R6442 = add i64 %load_target135, -1
  %503 = bitcast %struct.Zio* %load_target134 to i64*
  %504 = bitcast i64* %503 to i8*
  %505 = getelementptr inbounds i8, i8* %504, i64 0
  %506 = bitcast i8* %505 to i64*
  store i64 %R6442, i64* %506
  %R6443 = icmp ugt i64 %load_target135, 0
  %R6443136 = zext i1 %R6443 to i32
  %cond137 = icmp ne i32 %R6443136, 0
  br i1 %cond137, label %L1158, label %L1159

L1158:                                            ; preds = %L1157
  %507 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %508 = bitcast %struct.Zio** %507 to i8*
  %509 = getelementptr inbounds i8, i8* %508, i64 64
  %510 = bitcast i8* %509 to %struct.Zio**
  %load_target138 = load %struct.Zio*, %struct.Zio** %510
  %511 = bitcast %struct.Zio* %load_target138 to i8**
  %512 = bitcast i8** %511 to i8*
  %513 = getelementptr inbounds i8, i8* %512, i64 8
  %514 = bitcast i8* %513 to i8**
  %load_target139 = load i8*, i8** %514
  %515 = getelementptr inbounds i8, i8* %load_target139, inttoptr (i64 1 to i8*)
  %516 = bitcast %struct.Zio* %load_target138 to i8**
  %517 = bitcast i8** %516 to i8*
  %518 = getelementptr inbounds i8, i8* %517, i64 8
  %519 = bitcast i8* %518 to i8**
  store i8* %515, i8** %519
  %520 = getelementptr inbounds i8, i8* %load_target139, i64 0
  %load_target140 = load i8, i8* %520
  %R6450 = zext i8 %load_target140 to i32
  store i32 %R6450, i32* %12
  br label %L1160

L1159:                                            ; preds = %L1157
  %521 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %522 = bitcast %struct.Zio** %521 to i8*
  %523 = getelementptr inbounds i8, i8* %522, i64 64
  %524 = bitcast i8* %523 to %struct.Zio**
  %load_target141 = load %struct.Zio*, %struct.Zio** %524
  %R6453 = call i32 @luaZ_fill(%struct.Zio* %load_target141)
  store i32 %R6453, i32* %12
  br label %L1160

L1160:                                            ; preds = %L1159, %L1158
  %525 = load i32, i32* %12
  %526 = bitcast %struct.LexState* %ARG1 to i32*
  %527 = bitcast i32* %526 to i8*
  %528 = getelementptr inbounds i8, i8* %527, i64 0
  %529 = bitcast i8* %528 to i32*
  store i32 %525, i32* %529
  br label %L1083

L1161:                                            ; preds = %L1156
  %R6456 = call i16** @__ctype_b_loc()
  %530 = bitcast i16** %R6456 to i8*
  %531 = getelementptr inbounds i8, i8* %530, i64 0
  %532 = bitcast i8* %531 to i16**
  %load_target142 = load i16*, i16** %532
  %533 = bitcast %struct.LexState* %ARG1 to i32*
  %534 = bitcast i32* %533 to i8*
  %535 = getelementptr inbounds i8, i8* %534, i64 0
  %536 = bitcast i8* %535 to i32*
  %load_target143 = load i32, i32* %536
  %R6461 = sext i32 %load_target143 to i64
  %R6462 = mul i64 %R6461, 2
  %537 = bitcast i16* %load_target142 to i8*
  %538 = getelementptr inbounds i8, i8* %537, i64 %R6462
  %539 = bitcast i8* %538 to i16*
  %540 = bitcast i16* %539 to i8*
  %541 = getelementptr inbounds i8, i8* %540, i64 0
  %542 = bitcast i8* %541 to i16*
  %load_target144 = load i16, i16* %542
  %R6465 = zext i16 %load_target144 to i32
  %R6466 = and i32 %R6465, 2048
  %cond145 = icmp ne i32 %R6466, 0
  br i1 %cond145, label %L1162, label %L1163

L1162:                                            ; preds = %L1161
  call void @read_numeral(%struct.LexState* %ARG1, { [8 x i8] }* %ARG2)
  store i32 284, i32* %16
  br label %L1177

L1163:                                            ; preds = %L1161
  %R6469 = call i16** @__ctype_b_loc()
  %543 = bitcast i16** %R6469 to i8*
  %544 = getelementptr inbounds i8, i8* %543, i64 0
  %545 = bitcast i8* %544 to i16**
  %load_target146 = load i16*, i16** %545
  %546 = bitcast %struct.LexState* %ARG1 to i32*
  %547 = bitcast i32* %546 to i8*
  %548 = getelementptr inbounds i8, i8* %547, i64 0
  %549 = bitcast i8* %548 to i32*
  %load_target147 = load i32, i32* %549
  %R6474 = sext i32 %load_target147 to i64
  %R6475 = mul i64 %R6474, 2
  %550 = bitcast i16* %load_target146 to i8*
  %551 = getelementptr inbounds i8, i8* %550, i64 %R6475
  %552 = bitcast i8* %551 to i16*
  %553 = bitcast i16* %552 to i8*
  %554 = getelementptr inbounds i8, i8* %553, i64 0
  %555 = bitcast i8* %554 to i16*
  %load_target148 = load i16, i16* %555
  %R6478 = zext i16 %load_target148 to i32
  %R6479 = and i32 %R6478, 1024
  store i32 %load_target147, i32* %13
  %cond149 = icmp ne i32 %R6479, 0
  br i1 %cond149, label %L1165, label %L1164

L1164:                                            ; preds = %L1163
  %R6482 = icmp eq i32 %load_target147, 95
  %R6482150 = zext i1 %R6482 to i32
  store i32 %load_target147, i32* %13
  %cond151 = icmp ne i32 %R6482150, 0
  br i1 %cond151, label %L1165, label %L1173

L1165:                                            ; preds = %L1169, %L1168, %L1164, %L1163
  %556 = load i32, i32* %13
  call void @save(%struct.LexState* %ARG1, i32 %556)
  %557 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %558 = bitcast %struct.Zio** %557 to i8*
  %559 = getelementptr inbounds i8, i8* %558, i64 64
  %560 = bitcast i8* %559 to %struct.Zio**
  %load_target152 = load %struct.Zio*, %struct.Zio** %560
  %561 = bitcast %struct.Zio* %load_target152 to i64*
  %562 = bitcast i64* %561 to i8*
  %563 = getelementptr inbounds i8, i8* %562, i64 0
  %564 = bitcast i8* %563 to i64*
  %load_target153 = load i64, i64* %564
  %R6489 = add i64 %load_target153, -1
  %565 = bitcast %struct.Zio* %load_target152 to i64*
  %566 = bitcast i64* %565 to i8*
  %567 = getelementptr inbounds i8, i8* %566, i64 0
  %568 = bitcast i8* %567 to i64*
  store i64 %R6489, i64* %568
  %R6490 = icmp ugt i64 %load_target153, 0
  %R6490154 = zext i1 %R6490 to i32
  %cond155 = icmp ne i32 %R6490154, 0
  br i1 %cond155, label %L1166, label %L1167

L1166:                                            ; preds = %L1165
  %569 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %570 = bitcast %struct.Zio** %569 to i8*
  %571 = getelementptr inbounds i8, i8* %570, i64 64
  %572 = bitcast i8* %571 to %struct.Zio**
  %load_target156 = load %struct.Zio*, %struct.Zio** %572
  %573 = bitcast %struct.Zio* %load_target156 to i8**
  %574 = bitcast i8** %573 to i8*
  %575 = getelementptr inbounds i8, i8* %574, i64 8
  %576 = bitcast i8* %575 to i8**
  %load_target157 = load i8*, i8** %576
  %577 = getelementptr inbounds i8, i8* %load_target157, inttoptr (i64 1 to i8*)
  %578 = bitcast %struct.Zio* %load_target156 to i8**
  %579 = bitcast i8** %578 to i8*
  %580 = getelementptr inbounds i8, i8* %579, i64 8
  %581 = bitcast i8* %580 to i8**
  store i8* %577, i8** %581
  %582 = getelementptr inbounds i8, i8* %load_target157, i64 0
  %load_target158 = load i8, i8* %582
  %R6497 = zext i8 %load_target158 to i32
  store i32 %R6497, i32* %14
  br label %L1168

L1167:                                            ; preds = %L1165
  %583 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %584 = bitcast %struct.Zio** %583 to i8*
  %585 = getelementptr inbounds i8, i8* %584, i64 64
  %586 = bitcast i8* %585 to %struct.Zio**
  %load_target159 = load %struct.Zio*, %struct.Zio** %586
  %R6500 = call i32 @luaZ_fill(%struct.Zio* %load_target159)
  store i32 %R6500, i32* %14
  br label %L1168

L1168:                                            ; preds = %L1167, %L1166
  %587 = load i32, i32* %14
  %588 = bitcast %struct.LexState* %ARG1 to i32*
  %589 = bitcast i32* %588 to i8*
  %590 = getelementptr inbounds i8, i8* %589, i64 0
  %591 = bitcast i8* %590 to i32*
  store i32 %587, i32* %591
  %R6503 = call i16** @__ctype_b_loc()
  %592 = bitcast i16** %R6503 to i8*
  %593 = getelementptr inbounds i8, i8* %592, i64 0
  %594 = bitcast i8* %593 to i16**
  %load_target160 = load i16*, i16** %594
  %595 = bitcast %struct.LexState* %ARG1 to i32*
  %596 = bitcast i32* %595 to i8*
  %597 = getelementptr inbounds i8, i8* %596, i64 0
  %598 = bitcast i8* %597 to i32*
  %load_target161 = load i32, i32* %598
  %R6508 = sext i32 %load_target161 to i64
  %R6509 = mul i64 %R6508, 2
  %599 = bitcast i16* %load_target160 to i8*
  %600 = getelementptr inbounds i8, i8* %599, i64 %R6509
  %601 = bitcast i8* %600 to i16*
  %602 = bitcast i16* %601 to i8*
  %603 = getelementptr inbounds i8, i8* %602, i64 0
  %604 = bitcast i8* %603 to i16*
  %load_target162 = load i16, i16* %604
  %R6512 = zext i16 %load_target162 to i32
  %R6513 = and i32 %R6512, 8
  store i32 %load_target161, i32* %13
  store i32 %load_target161, i32* %13
  %cond163 = icmp ne i32 %R6513, 0
  br i1 %cond163, label %L1165, label %L1169

L1169:                                            ; preds = %L1168
  %R6516 = icmp eq i32 %load_target161, 95
  %R6516164 = zext i1 %R6516 to i32
  %cond165 = icmp ne i32 %R6516164, 0
  br i1 %cond165, label %L1165, label %L1170

L1170:                                            ; preds = %L1169
  %605 = bitcast %struct.LexState* %ARG1 to %struct.Mbuffer**
  %606 = bitcast %struct.Mbuffer** %605 to i8*
  %607 = getelementptr inbounds i8, i8* %606, i64 72
  %608 = bitcast i8* %607 to %struct.Mbuffer**
  %load_target166 = load %struct.Mbuffer*, %struct.Mbuffer** %608
  %609 = bitcast %struct.Mbuffer* %load_target166 to i8**
  %610 = bitcast i8** %609 to i8*
  %611 = getelementptr inbounds i8, i8* %610, i64 0
  %612 = bitcast i8* %611 to i8**
  %load_target167 = load i8*, i8** %612
  %613 = bitcast %struct.Mbuffer* %load_target166 to i64*
  %614 = bitcast i64* %613 to i8*
  %615 = getelementptr inbounds i8, i8* %614, i64 8
  %616 = bitcast i8* %615 to i64*
  %load_target168 = load i64, i64* %616
  %R6524 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* %load_target167, i64 %load_target168)
  %617 = bitcast { [24 x i8] }* %R6524 to i8*
  %618 = getelementptr inbounds i8, i8* %617, i64 10
  %load_target169 = load i8, i8* %618
  %R6527 = zext i8 %load_target169 to i32
  %R6528 = icmp sgt i32 %R6527, 0
  %R6528170 = zext i1 %R6528 to i32
  %cond171 = icmp ne i32 %R6528170, 0
  br i1 %cond171, label %L1171, label %L1172

L1171:                                            ; preds = %L1170
  %R6533 = add i32 %R6527, 256
  store i32 %R6533, i32* %16
  br label %L1177

L1172:                                            ; preds = %L1170
  %619 = bitcast { [8 x i8] }* %ARG2 to { [24 x i8] }**
  %620 = bitcast { [24 x i8] }** %619 to i8*
  %621 = getelementptr inbounds i8, i8* %620, i64 0
  %622 = bitcast i8* %621 to { [24 x i8] }**
  store { [24 x i8] }* %R6524, { [24 x i8] }** %622
  store i32 285, i32* %16
  br label %L1177

L1173:                                            ; preds = %L1164
  %623 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %624 = bitcast %struct.Zio** %623 to i8*
  %625 = getelementptr inbounds i8, i8* %624, i64 64
  %626 = bitcast i8* %625 to %struct.Zio**
  %load_target172 = load %struct.Zio*, %struct.Zio** %626
  %627 = bitcast %struct.Zio* %load_target172 to i64*
  %628 = bitcast i64* %627 to i8*
  %629 = getelementptr inbounds i8, i8* %628, i64 0
  %630 = bitcast i8* %629 to i64*
  %load_target173 = load i64, i64* %630
  %R6541 = add i64 %load_target173, -1
  %631 = bitcast %struct.Zio* %load_target172 to i64*
  %632 = bitcast i64* %631 to i8*
  %633 = getelementptr inbounds i8, i8* %632, i64 0
  %634 = bitcast i8* %633 to i64*
  store i64 %R6541, i64* %634
  %R6542 = icmp ugt i64 %load_target173, 0
  %R6542174 = zext i1 %R6542 to i32
  %cond175 = icmp ne i32 %R6542174, 0
  br i1 %cond175, label %L1174, label %L1175

L1174:                                            ; preds = %L1173
  %635 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %636 = bitcast %struct.Zio** %635 to i8*
  %637 = getelementptr inbounds i8, i8* %636, i64 64
  %638 = bitcast i8* %637 to %struct.Zio**
  %load_target176 = load %struct.Zio*, %struct.Zio** %638
  %639 = bitcast %struct.Zio* %load_target176 to i8**
  %640 = bitcast i8** %639 to i8*
  %641 = getelementptr inbounds i8, i8* %640, i64 8
  %642 = bitcast i8* %641 to i8**
  %load_target177 = load i8*, i8** %642
  %643 = getelementptr inbounds i8, i8* %load_target177, inttoptr (i64 1 to i8*)
  %644 = bitcast %struct.Zio* %load_target176 to i8**
  %645 = bitcast i8** %644 to i8*
  %646 = getelementptr inbounds i8, i8* %645, i64 8
  %647 = bitcast i8* %646 to i8**
  store i8* %643, i8** %647
  %648 = getelementptr inbounds i8, i8* %load_target177, i64 0
  %load_target178 = load i8, i8* %648
  %R6549 = zext i8 %load_target178 to i32
  store i32 %R6549, i32* %15
  br label %L1176

L1175:                                            ; preds = %L1173
  %649 = bitcast %struct.LexState* %ARG1 to %struct.Zio**
  %650 = bitcast %struct.Zio** %649 to i8*
  %651 = getelementptr inbounds i8, i8* %650, i64 64
  %652 = bitcast i8* %651 to %struct.Zio**
  %load_target179 = load %struct.Zio*, %struct.Zio** %652
  %R6552 = call i32 @luaZ_fill(%struct.Zio* %load_target179)
  store i32 %R6552, i32* %15
  br label %L1176

L1176:                                            ; preds = %L1175, %L1174
  %653 = load i32, i32* %15
  %654 = bitcast %struct.LexState* %ARG1 to i32*
  %655 = bitcast i32* %654 to i8*
  %656 = getelementptr inbounds i8, i8* %655, i64 0
  %657 = bitcast i8* %656 to i32*
  store i32 %653, i32* %657
  store i32 %load_target147, i32* %16
  br label %L1177

L1177:                                            ; preds = %L1176, %L1172, %L1171, %L1162, %L1155, %L1154, %L1153, %L1151, %L1150, %L1144, %L1143, %L1139, %L1134, %L1130, %L1125, %L1121, %L1116, %L1112, %L1106, %L1104, %L1089
  %658 = load i32, i32* %16
  ret i32 %658
}

define internal void @luaX_next(%struct.LexState* %ARG1) {
L1178:
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 4
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %4 = bitcast %struct.LexState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %load_target, i32* %7
  %8 = bitcast %struct.LexState* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to i32*
  %load_target1 = load i32, i32* %11
  %R6561 = icmp ne i32 %load_target1, 287
  %R65612 = zext i1 %R6561 to i32
  %cond = icmp ne i32 %R65612, 0
  br i1 %cond, label %L1179, label %L1180

L1179:                                            ; preds = %L1178
  %12 = bitcast %struct.LexState* %ARG1 to %struct.Token*
  %13 = bitcast %struct.Token* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to %struct.Token*
  %load_target3 = load %struct.Token, %struct.Token* %15
  %16 = bitcast %struct.LexState* %ARG1 to %struct.Token*
  %17 = bitcast %struct.Token* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.Token*
  store %struct.Token %load_target3, %struct.Token* %19
  %20 = bitcast %struct.LexState* %ARG1 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to i32*
  store i32 287, i32* %23
  br label %L1181

L1180:                                            ; preds = %L1178
  %24 = bitcast %struct.LexState* %ARG1 to i8*
  %25 = getelementptr inbounds i8, i8* %24, inttoptr (i64 24 to i8*)
  %26 = bitcast i8* %25 to %struct.LexState*
  %R6570 = call i32 @llex(%struct.LexState* %ARG1, %struct.LexState* %26)
  %27 = bitcast %struct.LexState* %ARG1 to i32*
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to i32*
  store i32 %R6570, i32* %30
  br label %L1181

L1181:                                            ; preds = %L1180, %L1179
  ret void
}

define internal void @luaX_lookahead(%struct.LexState* %ARG1) {
L1182:
  %0 = bitcast %struct.LexState* %ARG1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, inttoptr (i64 40 to i8*)
  %2 = bitcast i8* %1 to %struct.LexState*
  %R6576 = call i32 @llex(%struct.LexState* %ARG1, %struct.LexState* %2)
  %3 = bitcast %struct.LexState* %ARG1 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = bitcast i8* %5 to i32*
  store i32 %R6576, i32* %6
  ret void
}

define internal i32 @isnumeral(%struct.expdesc* %ARG1) {
L1183:
  %0 = alloca i32
  %1 = bitcast %struct.expdesc* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R6581 = icmp eq i32 %load_target, 5
  %R65811 = zext i1 %R6581 to i32
  %cond = icmp ne i32 %R65811, 0
  br i1 %cond, label %L1184, label %L1186

L1184:                                            ; preds = %L1183
  %5 = bitcast %struct.expdesc* %ARG1 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to i32*
  %load_target2 = load i32, i32* %8
  %R6584 = icmp eq i32 %load_target2, -1
  %R65843 = zext i1 %R6584 to i32
  %cond4 = icmp ne i32 %R65843, 0
  br i1 %cond4, label %L1185, label %L1186

L1185:                                            ; preds = %L1184
  %9 = bitcast %struct.expdesc* %ARG1 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 20
  %12 = bitcast i8* %11 to i32*
  %load_target5 = load i32, i32* %12
  %R6587 = icmp eq i32 %load_target5, -1
  %R65876 = zext i1 %R6587 to i32
  store i32 %R65876, i32* %0
  br label %L1187

L1186:                                            ; preds = %L1184, %L1183
  store i32 0, i32* %0
  br label %L1187

L1187:                                            ; preds = %L1186, %L1185
  %13 = load i32, i32* %0
  ret i32 %13
}

define internal void @luaK_nil(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3) {
L1188:
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %4 = bitcast %struct.FuncState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 52
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R6594 = icmp sgt i32 %load_target, %load_target1
  %R65942 = zext i1 %R6594 to i32
  %cond = icmp ne i32 %R65942, 0
  br i1 %cond, label %L1189, label %L1195

L1189:                                            ; preds = %L1188
  %cond3 = icmp ne i32 %load_target, 0
  br i1 %cond3, label %L1191, label %L1190

L1190:                                            ; preds = %L1189
  %8 = bitcast %struct.FuncState* %ARG1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 74
  %load_target4 = load i8, i8* %9
  %R6601 = zext i8 %load_target4 to i32
  %R6602 = icmp sge i32 %ARG2, %R6601
  %R66025 = zext i1 %R6602 to i32
  %cond6 = icmp ne i32 %R66025, 0
  br i1 %cond6, label %L1196, label %L1195

L1191:                                            ; preds = %L1189
  %10 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %11 = bitcast %struct.Proto** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to %struct.Proto**
  %load_target7 = load %struct.Proto*, %struct.Proto** %13
  %14 = bitcast %struct.Proto* %load_target7 to i32**
  %15 = bitcast i32** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 24
  %17 = bitcast i8* %16 to i32**
  %load_target8 = load i32*, i32** %17
  %R6608 = add i32 %load_target, -1
  %R6609 = sext i32 %R6608 to i64
  %R6610 = mul i64 %R6609, 4
  %18 = bitcast i32* %load_target8 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %R6610
  %20 = bitcast i8* %19 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i32*
  %load_target9 = load i32, i32* %23
  %R6615 = and i32 %load_target9, 63
  %R6618 = icmp eq i32 %R6615, 3
  %R661810 = zext i1 %R6618 to i32
  %cond11 = icmp ne i32 %R661810, 0
  br i1 %cond11, label %L1192, label %L1195

L1192:                                            ; preds = %L1191
  %R6621 = lshr i32 %load_target9, 6
  %R6622 = and i32 %R6621, 255
  %R6626 = lshr i32 %load_target9, 23
  %R6627 = and i32 %R6626, 511
  %R6631 = icmp sle i32 %R6622, %ARG2
  %R663112 = zext i1 %R6631 to i32
  %R6634 = add i32 %R6627, 1
  %R6635 = icmp sle i32 %ARG2, %R6634
  %R663513 = zext i1 %R6635 to i32
  %24 = icmp ne i32 %R663112, 0
  %25 = icmp ne i32 %R663513, 0
  %R6636 = and i1 %24, %25
  %R663614 = zext i1 %R6636 to i32
  %cond15 = icmp ne i32 %R663614, 0
  br i1 %cond15, label %L1193, label %L1195

L1193:                                            ; preds = %L1192
  %R6639 = add i32 %ARG2, %ARG3
  %R6640 = add i32 %R6639, -1
  %R6642 = icmp sgt i32 %R6640, %R6627
  %R664216 = zext i1 %R6642 to i32
  %cond17 = icmp ne i32 %R664216, 0
  br i1 %cond17, label %L1194, label %L1196

L1194:                                            ; preds = %L1193
  %R6645 = and i32 %load_target9, 8388607
  %R6651 = shl i32 %R6640, 23
  %R6652 = and i32 %R6651, -8388608
  %R6653 = or i32 %R6645, %R6652
  %26 = bitcast i32* %20 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = bitcast i8* %27 to i32*
  store i32 %R6653, i32* %28
  br label %L1196

L1195:                                            ; preds = %L1192, %L1191, %L1190, %L1188
  %R6659 = add i32 %ARG2, %ARG3
  %R6660 = add i32 %R6659, -1
  %R6661 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 3, i32 %ARG2, i32 %R6660, i32 0)
  br label %L1196

L1196:                                            ; preds = %L1195, %L1194, %L1193, %L1190
  ret void
}

declare i32 @luaK_codeABC(%struct.FuncState*, i32, i32, i32, i32)

define internal i32 @luaK_jump(%struct.FuncState* %ARG1) {
L1197:
  %j_0x62d000aa0418 = alloca i32
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 56
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %4 = bitcast %struct.FuncState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 56
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7
  %R6666 = call i32 @luaK_codeABx(%struct.FuncState* %ARG1, i32 22, i32 0, i32 131070)
  %8 = bitcast i32* %j_0x62d000aa0418 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i32*
  store i32 %R6666, i32* %10
  call void @luaK_concat(%struct.FuncState* %ARG1, i32* %j_0x62d000aa0418, i32 %load_target)
  %11 = bitcast i32* %j_0x62d000aa0418 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i32*
  %load_target1 = load i32, i32* %13
  ret i32 %load_target1
}

declare i32 @luaK_codeABx(%struct.FuncState*, i32, i32, i32)

declare void @luaK_concat(%struct.FuncState*, i32*, i32)

define internal void @luaK_ret(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3) {
L1198:
  %R6675 = add i32 %ARG3, 1
  %R6676 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 30, i32 %ARG2, i32 %R6675, i32 0)
  ret void
}

define internal i32 @condjump(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4, i32 %ARG5) {
L1199:
  %R6682 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4, i32 %ARG5)
  %R6684 = call i32 @luaK_jump(%struct.FuncState* %ARG1)
  ret i32 %R6684
}

define internal void @fixjump(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3) {
L1200:
  %0 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %1 = bitcast %struct.Proto** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %3
  %4 = bitcast %struct.Proto* %load_target to i32**
  %5 = bitcast i32** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to i32**
  %load_target1 = load i32*, i32** %7
  %R6690 = sext i32 %ARG2 to i64
  %R6691 = mul i64 %R6690, 4
  %8 = bitcast i32* %load_target1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %R6691
  %10 = bitcast i8* %9 to i32*
  %R6695 = add i32 %ARG2, 1
  %R6696 = sub i32 %ARG3, %R6695
  %R6698 = call i32 @abs(i32 %R6696)
  %R6699 = icmp sgt i32 %R6698, 131071
  %R66992 = zext i1 %R6699 to i32
  %cond = icmp ne i32 %R66992, 0
  br i1 %cond, label %L1201, label %L1202

L1201:                                            ; preds = %L1200
  %11 = bitcast %struct.FuncState* %ARG1 to %struct.LexState**
  %12 = bitcast %struct.LexState** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 24
  %14 = bitcast i8* %13 to %struct.LexState**
  %load_target3 = load %struct.LexState*, %struct.LexState** %14
  call void @luaX_syntaxerror(%struct.LexState* %load_target3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0))
  br label %L1202

L1202:                                            ; preds = %L1201, %L1200
  %15 = bitcast i32* %10 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i32*
  %load_target4 = load i32, i32* %17
  %R6705 = and i32 %load_target4, 16383
  %R6707 = add i32 %R6696, 131071
  %R6710 = shl i32 %R6707, 14
  %R6711 = and i32 %R6710, -16384
  %R6712 = or i32 %R6705, %R6711
  %18 = bitcast i32* %10 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i32*
  store i32 %R6712, i32* %20
  ret void
}

declare i32 @abs(i32)

define internal i32 @luaK_getlabel(%struct.FuncState* %ARG1) {
L1203:
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %4 = bitcast %struct.FuncState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 52
  %7 = bitcast i8* %6 to i32*
  store i32 %load_target, i32* %7
  ret i32 %load_target
}

define internal i32 @getjump(%struct.FuncState* %ARG1, i32 %ARG2) {
L1204:
  %0 = alloca i32
  %1 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %2 = bitcast %struct.Proto** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %4
  %5 = bitcast %struct.Proto* %load_target to i32**
  %6 = bitcast i32** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  %8 = bitcast i8* %7 to i32**
  %load_target1 = load i32*, i32** %8
  %R6724 = sext i32 %ARG2 to i64
  %R6725 = mul i64 %R6724, 4
  %9 = bitcast i32* %load_target1 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %R6725
  %11 = bitcast i8* %10 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to i32*
  %load_target2 = load i32, i32* %14
  %R6728 = lshr i32 %load_target2, 14
  %R6729 = and i32 %R6728, 262143
  %R6731 = add i32 %R6729, -131071
  %R6733 = icmp eq i32 %R6731, -1
  %R67333 = zext i1 %R6733 to i32
  %cond = icmp ne i32 %R67333, 0
  br i1 %cond, label %L1205, label %L1206

L1205:                                            ; preds = %L1204
  store i32 -1, i32* %0
  br label %L1207

L1206:                                            ; preds = %L1204
  %R6736 = add i32 %ARG2, 1
  %R6738 = add i32 %R6736, %R6731
  store i32 %R6738, i32* %0
  br label %L1207

L1207:                                            ; preds = %L1206, %L1205
  %15 = load i32, i32* %0
  ret i32 %15
}

define internal i32* @getjumpcontrol(%struct.FuncState* %ARG1, i32 %ARG2) {
L1208:
  %0 = alloca i32*
  %1 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %2 = bitcast %struct.Proto** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %4
  %5 = bitcast %struct.Proto* %load_target to i32**
  %6 = bitcast i32** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  %8 = bitcast i8* %7 to i32**
  %load_target1 = load i32*, i32** %8
  %R6743 = sext i32 %ARG2 to i64
  %R6744 = mul i64 %R6743, 4
  %9 = bitcast i32* %load_target1 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %R6744
  %11 = bitcast i8* %10 to i32*
  %R6747 = icmp sge i32 %ARG2, 1
  %R67472 = zext i1 %R6747 to i32
  %cond = icmp ne i32 %R67472, 0
  br i1 %cond, label %L1209, label %L1211

L1209:                                            ; preds = %L1208
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 -4
  %14 = bitcast i8* %13 to i32*
  %load_target3 = load i32, i32* %14
  %R6753 = and i32 %load_target3, 63
  %R6755 = sext i32 %R6753 to i64
  %15 = getelementptr inbounds i8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i32 0), i64 %R6755
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %load_target4 = load i8, i8* %16
  %R6758 = zext i8 %load_target4 to i32
  %R6759 = and i32 %R6758, 128
  %cond5 = icmp ne i32 %R6759, 0
  br i1 %cond5, label %L1210, label %L1211

L1210:                                            ; preds = %L1209
  %17 = bitcast i32* %11 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 -4
  %19 = bitcast i8* %18 to i32*
  store i32* %19, i32** %0
  br label %L1212

L1211:                                            ; preds = %L1209, %L1208
  store i32* %11, i32** %0
  br label %L1212

L1212:                                            ; preds = %L1211, %L1210
  %20 = load i32*, i32** %0
  ret i32* %20
}

define internal i32 @need_value(%struct.FuncState* %ARG1, i32 %ARG2) {
L1213:
  %0 = alloca i32
  %1 = alloca i32
  store i32 %ARG2, i32* %0
  br label %L1214

L1214:                                            ; preds = %L1217, %L1213
  %2 = load i32, i32* %0
  %R6765 = icmp ne i32 %2, -1
  %R67651 = zext i1 %R6765 to i32
  %cond = icmp ne i32 %R67651, 0
  br i1 %cond, label %L1215, label %L1218

L1215:                                            ; preds = %L1214
  %R6768 = call i32* @getjumpcontrol(%struct.FuncState* %ARG1, i32 %2)
  %3 = bitcast i32* %R6768 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %R6772 = and i32 %load_target, 63
  %R6775 = icmp ne i32 %R6772, 27
  %R67752 = zext i1 %R6775 to i32
  %cond3 = icmp ne i32 %R67752, 0
  br i1 %cond3, label %L1216, label %L1217

L1216:                                            ; preds = %L1215
  store i32 1, i32* %1
  br label %L1219

L1217:                                            ; preds = %L1215
  %R6779 = call i32 @getjump(%struct.FuncState* %ARG1, i32 %2)
  store i32 %R6779, i32* %0
  br label %L1214

L1218:                                            ; preds = %L1214
  store i32 0, i32* %1
  br label %L1219

L1219:                                            ; preds = %L1218, %L1216
  %6 = load i32, i32* %1
  ret i32 %6
}

define internal i32 @patchtestreg(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3) {
L1220:
  %0 = alloca i32
  %R6782 = call i32* @getjumpcontrol(%struct.FuncState* %ARG1, i32 %ARG2)
  %1 = bitcast i32* %R6782 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R6786 = and i32 %load_target, 63
  %R6789 = icmp ne i32 %R6786, 27
  %R67891 = zext i1 %R6789 to i32
  %cond = icmp ne i32 %R67891, 0
  br i1 %cond, label %L1221, label %L1222

L1221:                                            ; preds = %L1220
  store i32 0, i32* %0
  br label %L1227

L1222:                                            ; preds = %L1220
  %R6792 = icmp ne i32 %ARG3, 255
  %R67922 = zext i1 %R6792 to i32
  %cond3 = icmp ne i32 %R67922, 0
  br i1 %cond3, label %L1223, label %L1225

L1223:                                            ; preds = %L1222
  %R6796 = lshr i32 %load_target, 23
  %R6797 = and i32 %R6796, 511
  %R6799 = icmp ne i32 %ARG3, %R6797
  %R67994 = zext i1 %R6799 to i32
  %cond5 = icmp ne i32 %R67994, 0
  br i1 %cond5, label %L1224, label %L1225

L1224:                                            ; preds = %L1223
  %R6802 = and i32 %load_target, -16321
  %R6805 = shl i32 %ARG3, 6
  %R6806 = and i32 %R6805, 16320
  %R6807 = or i32 %R6802, %R6806
  %4 = bitcast i32* %R6782 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i32*
  store i32 %R6807, i32* %6
  br label %L1226

L1225:                                            ; preds = %L1223, %L1222
  %R6811 = lshr i32 %load_target, 23
  %R6812 = and i32 %R6811, 511
  %R6815 = shl i32 %R6812, 6
  %R6816 = or i32 %R6815, 26
  %R6820 = lshr i32 %load_target, 14
  %R6821 = and i32 %R6820, 511
  %R6824 = shl i32 %R6821, 14
  %R6825 = or i32 %R6816, %R6824
  %7 = bitcast i32* %R6782 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i32*
  store i32 %R6825, i32* %9
  br label %L1226

L1226:                                            ; preds = %L1225, %L1224
  store i32 1, i32* %0
  br label %L1227

L1227:                                            ; preds = %L1226, %L1221
  %10 = load i32, i32* %0
  ret i32 %10
}

define internal void @removevalues(%struct.FuncState* %ARG1, i32 %ARG2) {
L1228:
  %0 = alloca i32
  store i32 %ARG2, i32* %0
  br label %L1229

L1229:                                            ; preds = %L1230, %L1228
  %1 = load i32, i32* %0
  %R6828 = icmp ne i32 %1, -1
  %R68281 = zext i1 %R6828 to i32
  %cond = icmp ne i32 %R68281, 0
  br i1 %cond, label %L1230, label %L1231

L1230:                                            ; preds = %L1229
  %R6831 = call i32 @patchtestreg(%struct.FuncState* %ARG1, i32 %1, i32 255)
  %R6834 = call i32 @getjump(%struct.FuncState* %ARG1, i32 %1)
  store i32 %R6834, i32* %0
  br label %L1229

L1231:                                            ; preds = %L1229
  ret void
}

define internal void @patchlistaux(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4, i32 %ARG5) {
L1232:
  %0 = alloca i32
  store i32 %ARG2, i32* %0
  br label %L1233

L1233:                                            ; preds = %L1237, %L1232
  %1 = load i32, i32* %0
  %R6836 = icmp ne i32 %1, -1
  %R68361 = zext i1 %R6836 to i32
  %cond = icmp ne i32 %R68361, 0
  br i1 %cond, label %L1234, label %L1238

L1234:                                            ; preds = %L1233
  %R6839 = call i32 @getjump(%struct.FuncState* %ARG1, i32 %1)
  %R6843 = call i32 @patchtestreg(%struct.FuncState* %ARG1, i32 %1, i32 %ARG4)
  %cond2 = icmp ne i32 %R6843, 0
  br i1 %cond2, label %L1235, label %L1236

L1235:                                            ; preds = %L1234
  call void @fixjump(%struct.FuncState* %ARG1, i32 %1, i32 %ARG3)
  br label %L1237

L1236:                                            ; preds = %L1234
  call void @fixjump(%struct.FuncState* %ARG1, i32 %1, i32 %ARG5)
  br label %L1237

L1237:                                            ; preds = %L1236, %L1235
  store i32 %R6839, i32* %0
  br label %L1233

L1238:                                            ; preds = %L1233
  ret void
}

define internal void @dischargejpc(%struct.FuncState* %ARG1) {
L1239:
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 56
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %4 = bitcast %struct.FuncState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 48
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  call void @patchlistaux(%struct.FuncState* %ARG1, i32 %load_target, i32 %load_target1, i32 255, i32 %load_target1)
  %8 = bitcast %struct.FuncState* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 56
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11
  ret void
}

define internal void @luaK_patchlist(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3) {
L1240:
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R6862 = icmp eq i32 %ARG3, %load_target
  %R68621 = zext i1 %R6862 to i32
  %cond = icmp ne i32 %R68621, 0
  br i1 %cond, label %L1241, label %L1242

L1241:                                            ; preds = %L1240
  call void @luaK_patchtohere(%struct.FuncState* %ARG1, i32 %ARG2)
  br label %L1243

L1242:                                            ; preds = %L1240
  call void @patchlistaux(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 255, i32 %ARG3)
  br label %L1243

L1243:                                            ; preds = %L1242, %L1241
  ret void
}

declare void @luaK_patchtohere(%struct.FuncState*, i32)

define internal void @luaK_patchtohere.74(%struct.FuncState* %ARG1, i32 %ARG2) {
L1244:
  %R6870 = call i32 @luaK_getlabel(%struct.FuncState* %ARG1)
  %0 = bitcast %struct.FuncState* %ARG1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i32 56
  %2 = bitcast i8* %1 to %struct.FuncState*
  call void @luaK_concat(%struct.FuncState* %ARG1, %struct.FuncState* %2, i32 %ARG2)
  ret void
}

define internal void @luaK_concat.75(%struct.FuncState* %ARG1, i32* %ARG2, i32 %ARG3) {
L1245:
  %0 = alloca i32
  %R6876 = icmp eq i32 %ARG3, -1
  %R68761 = zext i1 %R6876 to i32
  %cond = icmp ne i32 %R68761, 0
  br i1 %cond, label %L1252, label %L1246

L1246:                                            ; preds = %L1245
  %1 = bitcast i32* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R6879 = icmp eq i32 %load_target, -1
  %R68792 = zext i1 %R6879 to i32
  %cond3 = icmp ne i32 %R68792, 0
  br i1 %cond3, label %L1247, label %L1248

L1247:                                            ; preds = %L1246
  %4 = bitcast i32* %ARG2 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i32*
  store i32 %ARG3, i32* %6
  br label %L1252

L1248:                                            ; preds = %L1246
  store i32 %load_target, i32* %0
  br label %L1249

L1249:                                            ; preds = %L1250, %L1248
  %7 = load i32, i32* %0
  %R6886 = call i32 @getjump(%struct.FuncState* %ARG1, i32 %7)
  %R6887 = icmp ne i32 %R6886, -1
  %R68874 = zext i1 %R6887 to i32
  %cond5 = icmp ne i32 %R68874, 0
  br i1 %cond5, label %L1250, label %L1251

L1250:                                            ; preds = %L1249
  store i32 %R6886, i32* %0
  br label %L1249

L1251:                                            ; preds = %L1249
  call void @fixjump(%struct.FuncState* %ARG1, i32 %7, i32 %ARG3)
  br label %L1252

L1252:                                            ; preds = %L1251, %L1247, %L1245
  ret void
}

define internal void @luaK_checkstack(%struct.FuncState* %ARG1, i32 %ARG2) {
L1253:
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 60
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R6895 = add i32 %load_target, %ARG2
  %4 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %5 = bitcast %struct.Proto** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to %struct.Proto**
  %load_target1 = load %struct.Proto*, %struct.Proto** %7
  %8 = bitcast %struct.Proto* %load_target1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 115
  %load_target2 = load i8, i8* %9
  %R6900 = zext i8 %load_target2 to i32
  %R6901 = icmp sgt i32 %R6895, %R6900
  %R69013 = zext i1 %R6901 to i32
  %cond = icmp ne i32 %R69013, 0
  br i1 %cond, label %L1254, label %L1257

L1254:                                            ; preds = %L1253
  %R6903 = icmp sge i32 %R6895, 250
  %R69034 = zext i1 %R6903 to i32
  %cond5 = icmp ne i32 %R69034, 0
  br i1 %cond5, label %L1255, label %L1256

L1255:                                            ; preds = %L1254
  %10 = bitcast %struct.FuncState* %ARG1 to %struct.LexState**
  %11 = bitcast %struct.LexState** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 24
  %13 = bitcast i8* %12 to %struct.LexState**
  %load_target6 = load %struct.LexState*, %struct.LexState** %13
  call void @luaX_syntaxerror(%struct.LexState* %load_target6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0))
  br label %L1256

L1256:                                            ; preds = %L1255, %L1254
  %R6908 = trunc i32 %R6895 to i8
  %14 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %15 = bitcast %struct.Proto** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to %struct.Proto**
  %load_target7 = load %struct.Proto*, %struct.Proto** %17
  %18 = bitcast %struct.Proto* %load_target7 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 115
  store i8 %R6908, i8* %19
  br label %L1257

L1257:                                            ; preds = %L1256, %L1253
  ret void
}

define internal void @luaK_reserveregs(%struct.FuncState* %ARG1, i32 %ARG2) {
L1258:
  call void @luaK_checkstack(%struct.FuncState* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 60
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R6917 = add i32 %load_target, %ARG2
  %4 = bitcast %struct.FuncState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 60
  %7 = bitcast i8* %6 to i32*
  store i32 %R6917, i32* %7
  ret void
}

define internal void @freereg(%struct.FuncState* %ARG1, i32 %ARG2) {
L1259:
  %R6920 = and i32 %ARG2, 256
  %cond = icmp ne i32 %R6920, 0
  br i1 %cond, label %L1262, label %L1260

L1260:                                            ; preds = %L1259
  %0 = bitcast %struct.FuncState* %ARG1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 74
  %load_target = load i8, i8* %1
  %R6924 = zext i8 %load_target to i32
  %R6925 = icmp sge i32 %ARG2, %R6924
  %R69251 = zext i1 %R6925 to i32
  %cond2 = icmp ne i32 %R69251, 0
  br i1 %cond2, label %L1261, label %L1262

L1261:                                            ; preds = %L1260
  %2 = bitcast %struct.FuncState* %ARG1 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 60
  %5 = bitcast i8* %4 to i32*
  %load_target3 = load i32, i32* %5
  %R6928 = add i32 %load_target3, -1
  %6 = bitcast %struct.FuncState* %ARG1 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 60
  %9 = bitcast i8* %8 to i32*
  store i32 %R6928, i32* %9
  br label %L1262

L1262:                                            ; preds = %L1261, %L1260, %L1259
  ret void
}

define internal void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1263:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R6932 = icmp eq i32 %load_target, 12
  %R69321 = zext i1 %R6932 to i32
  %cond = icmp ne i32 %R69321, 0
  br i1 %cond, label %L1264, label %L1265

L1264:                                            ; preds = %L1263
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target2 = load i32, i32* %7
  call void @freereg(%struct.FuncState* %ARG1, i32 %load_target2)
  br label %L1265

L1265:                                            ; preds = %L1264, %L1263
  ret void
}

define internal i32 @addk(%struct.FuncState* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3) {
L1266:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.FuncState* %ARG1 to %struct.lua_State**
  %3 = bitcast %struct.lua_State** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %5
  %6 = bitcast %struct.FuncState* %ARG1 to %struct.Table**
  %7 = bitcast %struct.Table** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to %struct.Table**
  %load_target1 = load %struct.Table*, %struct.Table** %9
  %R6942 = call %struct.lua_TValue* @luaH_set(%struct.lua_State* %load_target, %struct.Table* %load_target1, %struct.lua_TValue* %ARG2)
  %10 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %11 = bitcast %struct.Proto** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to %struct.Proto**
  %load_target2 = load %struct.Proto*, %struct.Proto** %13
  %14 = bitcast %struct.Proto* %load_target2 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 76
  %17 = bitcast i8* %16 to i32*
  %load_target3 = load i32, i32* %17
  %18 = bitcast %struct.lua_TValue* %R6942 to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  %load_target4 = load i32, i32* %21
  %R6949 = icmp eq i32 %load_target4, 3
  %R69495 = zext i1 %R6949 to i32
  store i32 %load_target3, i32* %0
  %cond = icmp ne i32 %R69495, 0
  br i1 %cond, label %L1267, label %L1268

L1267:                                            ; preds = %L1266
  %22 = bitcast %struct.lua_TValue* %R6942 to double*
  %23 = bitcast double* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = bitcast i8* %24 to double*
  %load_target6 = load double, double* %25
  %R6952 = fptosi double %load_target6 to i32
  store i32 %R6952, i32* %1
  br label %L1277

L1268:                                            ; preds = %L1266
  %26 = bitcast %struct.FuncState* %ARG1 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 64
  %29 = bitcast i8* %28 to i32*
  %load_target7 = load i32, i32* %29
  %R6957 = sitofp i32 %load_target7 to double
  %30 = bitcast %struct.lua_TValue* %R6942 to double*
  %31 = bitcast double* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to double*
  store double %R6957, double* %33
  %34 = bitcast %struct.lua_TValue* %R6942 to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 3, i32* %37
  %38 = bitcast %struct.FuncState* %ARG1 to i32*
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 64
  %41 = bitcast i8* %40 to i32*
  %load_target8 = load i32, i32* %41
  %R6962 = add i32 %load_target8, 1
  %42 = bitcast %struct.Proto* %load_target2 to i32*
  %43 = bitcast i32* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 76
  %45 = bitcast i8* %44 to i32*
  %load_target9 = load i32, i32* %45
  %R6965 = icmp sgt i32 %R6962, %load_target9
  %R696510 = zext i1 %R6965 to i32
  %cond11 = icmp ne i32 %R696510, 0
  br i1 %cond11, label %L1269, label %L1270

L1269:                                            ; preds = %L1268
  %46 = bitcast %struct.Proto* %load_target2 to %struct.lua_TValue**
  %47 = bitcast %struct.lua_TValue** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 16
  %49 = bitcast i8* %48 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %49
  %R6969 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %50 = bitcast %struct.Proto* %load_target2 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i32 76
  %52 = bitcast i8* %51 to %struct.Proto*
  %R6973 = call i8* @luaM_growaux_(%struct.lua_State* %load_target, i8* %R6969, %struct.Proto* %52, i64 16, i32 262143, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.77, i64 0, i64 0))
  %R6974 = bitcast i8* %R6973 to %struct.lua_TValue*
  %53 = bitcast %struct.Proto* %load_target2 to %struct.lua_TValue**
  %54 = bitcast %struct.lua_TValue** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 16
  %56 = bitcast i8* %55 to %struct.lua_TValue**
  store %struct.lua_TValue* %R6974, %struct.lua_TValue** %56
  br label %L1270

L1270:                                            ; preds = %L1271, %L1269, %L1268
  %57 = load i32, i32* %0
  %58 = bitcast %struct.Proto* %load_target2 to i32*
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 76
  %61 = bitcast i8* %60 to i32*
  %load_target13 = load i32, i32* %61
  %R6979 = icmp slt i32 %57, %load_target13
  %R697914 = zext i1 %R6979 to i32
  %cond15 = icmp ne i32 %R697914, 0
  br i1 %cond15, label %L1271, label %L1272

L1271:                                            ; preds = %L1270
  %62 = bitcast %struct.Proto* %load_target2 to %struct.lua_TValue**
  %63 = bitcast %struct.lua_TValue** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 16
  %65 = bitcast i8* %64 to %struct.lua_TValue**
  %load_target16 = load %struct.lua_TValue*, %struct.lua_TValue** %65
  %R6983 = add i32 %57, 1
  %R6984 = sext i32 %57 to i64
  %R6985 = mul i64 %R6984, 16
  %66 = bitcast %struct.lua_TValue* %load_target16 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 %R6985
  %68 = bitcast i8* %67 to %struct.lua_TValue*
  %69 = bitcast %struct.lua_TValue* %68 to i32*
  %70 = bitcast i32* %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 8
  %72 = bitcast i8* %71 to i32*
  store i32 0, i32* %72
  store i32 %R6983, i32* %0
  br label %L1270

L1272:                                            ; preds = %L1270
  %73 = bitcast %struct.Proto* %load_target2 to %struct.lua_TValue**
  %74 = bitcast %struct.lua_TValue** %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast i8* %75 to %struct.lua_TValue**
  %load_target17 = load %struct.lua_TValue*, %struct.lua_TValue** %76
  %77 = bitcast %struct.FuncState* %ARG1 to i32*
  %78 = bitcast i32* %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 64
  %80 = bitcast i8* %79 to i32*
  %load_target18 = load i32, i32* %80
  %R6992 = sext i32 %load_target18 to i64
  %R6993 = mul i64 %R6992, 16
  %81 = bitcast %struct.lua_TValue* %load_target17 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 %R6993
  %83 = bitcast i8* %82 to %struct.lua_TValue*
  %84 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %85 = bitcast { [8 x i8] }* %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 0
  %87 = bitcast i8* %86 to { [8 x i8] }*
  %load_target19 = load { [8 x i8] }, { [8 x i8] }* %87
  %88 = bitcast %struct.lua_TValue* %83 to { [8 x i8] }*
  %89 = bitcast { [8 x i8] }* %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 0
  %91 = bitcast i8* %90 to { [8 x i8] }*
  store { [8 x i8] } %load_target19, { [8 x i8] }* %91
  %92 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %93 = bitcast i32* %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 8
  %95 = bitcast i8* %94 to i32*
  %load_target20 = load i32, i32* %95
  %96 = bitcast %struct.lua_TValue* %83 to i32*
  %97 = bitcast i32* %96 to i8*
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 %load_target20, i32* %99
  %100 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %101 = bitcast i32* %100 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 8
  %103 = bitcast i8* %102 to i32*
  %load_target21 = load i32, i32* %103
  %R7004 = icmp sge i32 %load_target21, 4
  %R700422 = zext i1 %R7004 to i32
  %cond23 = icmp ne i32 %R700422, 0
  br i1 %cond23, label %L1273, label %L1276

L1273:                                            ; preds = %L1272
  %104 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %105 = bitcast { [184 x i8] }** %104 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 0
  %107 = bitcast i8* %106 to { [184 x i8] }**
  %load_target24 = load { [184 x i8] }*, { [184 x i8] }** %107
  %108 = bitcast { [184 x i8] }* %load_target24 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 9
  %load_target25 = load i8, i8* %109
  %R7008 = zext i8 %load_target25 to i32
  %R7009 = and i32 %R7008, 3
  %cond26 = icmp ne i32 %R7009, 0
  br i1 %cond26, label %L1274, label %L1276

L1274:                                            ; preds = %L1273
  %R7011 = bitcast %struct.Proto* %load_target2 to { [184 x i8] }*
  %110 = bitcast { [184 x i8] }* %R7011 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 9
  %load_target27 = load i8, i8* %111
  %R7013 = zext i8 %load_target27 to i32
  %R7014 = and i32 %R7013, 4
  %cond28 = icmp ne i32 %R7014, 0
  br i1 %cond28, label %L1275, label %L1276

L1275:                                            ; preds = %L1274
  call void @luaC_barrierf(%struct.lua_State* %load_target, { [184 x i8] }* %R7011, { [184 x i8] }* %load_target24)
  br label %L1276

L1276:                                            ; preds = %L1275, %L1274, %L1273, %L1272
  %112 = bitcast %struct.FuncState* %ARG1 to i32*
  %113 = bitcast i32* %112 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 64
  %115 = bitcast i8* %114 to i32*
  %load_target29 = load i32, i32* %115
  %R7022 = add i32 %load_target29, 1
  %116 = bitcast %struct.FuncState* %ARG1 to i32*
  %117 = bitcast i32* %116 to i8*
  %118 = getelementptr inbounds i8, i8* %117, i64 64
  %119 = bitcast i8* %118 to i32*
  store i32 %R7022, i32* %119
  store i32 %load_target29, i32* %1
  br label %L1277

L1277:                                            ; preds = %L1276, %L1267
  %120 = load i32, i32* %1
  ret i32 %120
}

define internal i32 @luaK_stringK(%struct.FuncState* %ARG1, { [24 x i8] }* %ARG2) {
L1278:
  %o_0x62d000ae00d0 = alloca %struct.lua_TValue
  %R7025 = bitcast { [24 x i8] }* %ARG2 to { [184 x i8] }*
  %0 = bitcast %struct.lua_TValue* %o_0x62d000ae00d0 to { [184 x i8] }**
  %1 = bitcast { [184 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to { [184 x i8] }**
  store { [184 x i8] }* %R7025, { [184 x i8] }** %3
  %4 = bitcast %struct.lua_TValue* %o_0x62d000ae00d0 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 4, i32* %7
  %R7031 = call i32 @addk(%struct.FuncState* %ARG1, %struct.lua_TValue* %o_0x62d000ae00d0, %struct.lua_TValue* %o_0x62d000ae00d0)
  ret i32 %R7031
}

define internal i32 @luaK_numberK(%struct.FuncState* %ARG1, double %ARG2) {
L1279:
  %o_0x62d000ae0ac8 = alloca %struct.lua_TValue
  %0 = bitcast %struct.lua_TValue* %o_0x62d000ae0ac8 to double*
  %1 = bitcast double* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to double*
  store double %ARG2, double* %3
  %4 = bitcast %struct.lua_TValue* %o_0x62d000ae0ac8 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 3, i32* %7
  %R7040 = call i32 @addk(%struct.FuncState* %ARG1, %struct.lua_TValue* %o_0x62d000ae0ac8, %struct.lua_TValue* %o_0x62d000ae0ac8)
  ret i32 %R7040
}

define internal i32 @boolK(%struct.FuncState* %ARG1, i32 %ARG2) {
L1280:
  %o_0x62d000ae12f0 = alloca %struct.lua_TValue
  %0 = bitcast %struct.lua_TValue* %o_0x62d000ae12f0 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  store i32 %ARG2, i32* %3
  %4 = bitcast %struct.lua_TValue* %o_0x62d000ae12f0 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7
  %R7049 = call i32 @addk(%struct.FuncState* %ARG1, %struct.lua_TValue* %o_0x62d000ae12f0, %struct.lua_TValue* %o_0x62d000ae12f0)
  ret i32 %R7049
}

define internal i32 @nilK(%struct.FuncState* %ARG1) {
L1281:
  %k_0x62d000ae1a30 = alloca %struct.lua_TValue
  %v_0x62d000ae1b18 = alloca %struct.lua_TValue
  %0 = bitcast %struct.lua_TValue* %v_0x62d000ae1b18 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3
  %4 = bitcast %struct.FuncState* %ARG1 to %struct.Table**
  %5 = bitcast %struct.Table** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to %struct.Table**
  %load_target = load %struct.Table*, %struct.Table** %7
  %R7054 = bitcast %struct.Table* %load_target to { [184 x i8] }*
  %8 = bitcast %struct.lua_TValue* %k_0x62d000ae1a30 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  store { [184 x i8] }* %R7054, { [184 x i8] }** %11
  %12 = bitcast %struct.lua_TValue* %k_0x62d000ae1a30 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 5, i32* %15
  %R7060 = call i32 @addk(%struct.FuncState* %ARG1, %struct.lua_TValue* %k_0x62d000ae1a30, %struct.lua_TValue* %v_0x62d000ae1b18)
  ret i32 %R7060
}

define internal void @luaK_setreturns(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %ARG3) {
L1282:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R7065 = icmp eq i32 %load_target, 13
  %R70651 = zext i1 %R7065 to i32
  %cond = icmp ne i32 %R70651, 0
  br i1 %cond, label %L1283, label %L1284

L1283:                                            ; preds = %L1282
  %4 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %5 = bitcast %struct.Proto** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to %struct.Proto**
  %load_target2 = load %struct.Proto*, %struct.Proto** %7
  %8 = bitcast %struct.Proto* %load_target2 to i32**
  %9 = bitcast i32** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to i32**
  %load_target3 = load i32*, i32** %11
  %12 = bitcast %struct.expdesc* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target4 = load i32, i32* %15
  %R7071 = sext i32 %load_target4 to i64
  %R7072 = mul i64 %R7071, 4
  %16 = bitcast i32* %load_target3 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %R7072
  %18 = bitcast i8* %17 to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to i32*
  %load_target5 = load i32, i32* %21
  %R7075 = and i32 %load_target5, -8372225
  %R7077 = add i32 %ARG3, 1
  %R7079 = shl i32 %R7077, 14
  %R7080 = and i32 %R7079, 8372224
  %R7081 = or i32 %R7075, %R7080
  %R7087 = sext i32 %load_target4 to i64
  %R7088 = mul i64 %R7087, 4
  %22 = bitcast i32* %load_target3 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %R7088
  %24 = bitcast i8* %23 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to i32*
  store i32 %R7081, i32* %27
  br label %L1286

L1284:                                            ; preds = %L1282
  %R7093 = icmp eq i32 %load_target, 14
  %R70936 = zext i1 %R7093 to i32
  %cond7 = icmp ne i32 %R70936, 0
  br i1 %cond7, label %L1285, label %L1286

L1285:                                            ; preds = %L1284
  %28 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %29 = bitcast %struct.Proto** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to %struct.Proto**
  %load_target8 = load %struct.Proto*, %struct.Proto** %31
  %32 = bitcast %struct.Proto* %load_target8 to i32**
  %33 = bitcast i32** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 24
  %35 = bitcast i8* %34 to i32**
  %load_target9 = load i32*, i32** %35
  %36 = bitcast %struct.expdesc* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  %load_target10 = load i32, i32* %39
  %R7099 = sext i32 %load_target10 to i64
  %R7100 = mul i64 %R7099, 4
  %40 = bitcast i32* %load_target9 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 %R7100
  %42 = bitcast i8* %41 to i32*
  %43 = bitcast i32* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 0
  %45 = bitcast i8* %44 to i32*
  %load_target11 = load i32, i32* %45
  %R7103 = and i32 %load_target11, 8388607
  %R7105 = add i32 %ARG3, 1
  %R7107 = shl i32 %R7105, 23
  %R7108 = and i32 %R7107, -8388608
  %R7109 = or i32 %R7103, %R7108
  %R7115 = sext i32 %load_target10 to i64
  %R7116 = mul i64 %R7115, 4
  %46 = bitcast i32* %load_target9 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %R7116
  %48 = bitcast i8* %47 to i32*
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to i32*
  store i32 %R7109, i32* %51
  %52 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %53 = bitcast %struct.Proto** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  %55 = bitcast i8* %54 to %struct.Proto**
  %load_target12 = load %struct.Proto*, %struct.Proto** %55
  %56 = bitcast %struct.Proto* %load_target12 to i32**
  %57 = bitcast i32** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 24
  %59 = bitcast i8* %58 to i32**
  %load_target13 = load i32*, i32** %59
  %60 = bitcast %struct.expdesc* %ARG2 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 8
  %63 = bitcast i8* %62 to i32*
  %load_target14 = load i32, i32* %63
  %R7123 = sext i32 %load_target14 to i64
  %R7124 = mul i64 %R7123, 4
  %64 = bitcast i32* %load_target13 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %R7124
  %66 = bitcast i8* %65 to i32*
  %67 = bitcast i32* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 0
  %69 = bitcast i8* %68 to i32*
  %load_target15 = load i32, i32* %69
  %R7127 = and i32 %load_target15, -16321
  %70 = bitcast %struct.FuncState* %ARG1 to i32*
  %71 = bitcast i32* %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 60
  %73 = bitcast i8* %72 to i32*
  %load_target16 = load i32, i32* %73
  %R7131 = shl i32 %load_target16, 6
  %R7132 = and i32 %R7131, 16320
  %R7133 = or i32 %R7127, %R7132
  %R7139 = sext i32 %load_target14 to i64
  %R7140 = mul i64 %R7139, 4
  %74 = bitcast i32* %load_target13 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 %R7140
  %76 = bitcast i8* %75 to i32*
  %77 = bitcast i32* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 0
  %79 = bitcast i8* %78 to i32*
  store i32 %R7133, i32* %79
  call void @luaK_reserveregs(%struct.FuncState* %ARG1, i32 1)
  br label %L1286

L1286:                                            ; preds = %L1285, %L1284, %L1283
  ret void
}

define internal void @luaK_setoneret(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1287:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R7146 = icmp eq i32 %load_target, 13
  %R71461 = zext i1 %R7146 to i32
  %cond = icmp ne i32 %R71461, 0
  br i1 %cond, label %L1288, label %L1289

L1288:                                            ; preds = %L1287
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 12, i32* %7
  %8 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %9 = bitcast %struct.Proto** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to %struct.Proto**
  %load_target2 = load %struct.Proto*, %struct.Proto** %11
  %12 = bitcast %struct.Proto* %load_target2 to i32**
  %13 = bitcast i32** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to i32**
  %load_target3 = load i32*, i32** %15
  %16 = bitcast %struct.expdesc* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  %load_target4 = load i32, i32* %19
  %R7153 = sext i32 %load_target4 to i64
  %R7154 = mul i64 %R7153, 4
  %20 = bitcast i32* %load_target3 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %R7154
  %22 = bitcast i8* %21 to i32*
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = bitcast i8* %24 to i32*
  %load_target5 = load i32, i32* %25
  %R7157 = lshr i32 %load_target5, 6
  %R7158 = and i32 %R7157, 255
  %26 = bitcast %struct.expdesc* %ARG2 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %R7158, i32* %29
  br label %L1291

L1289:                                            ; preds = %L1287
  %R7164 = icmp eq i32 %load_target, 14
  %R71646 = zext i1 %R7164 to i32
  %cond7 = icmp ne i32 %R71646, 0
  br i1 %cond7, label %L1290, label %L1291

L1290:                                            ; preds = %L1289
  %30 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %31 = bitcast %struct.Proto** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to %struct.Proto**
  %load_target8 = load %struct.Proto*, %struct.Proto** %33
  %34 = bitcast %struct.Proto* %load_target8 to i32**
  %35 = bitcast i32** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 24
  %37 = bitcast i8* %36 to i32**
  %load_target9 = load i32*, i32** %37
  %38 = bitcast %struct.expdesc* %ARG2 to i32*
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to i32*
  %load_target10 = load i32, i32* %41
  %R7170 = sext i32 %load_target10 to i64
  %R7171 = mul i64 %R7170, 4
  %42 = bitcast i32* %load_target9 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %R7171
  %44 = bitcast i8* %43 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to i32*
  %load_target11 = load i32, i32* %47
  %R7174 = and i32 %load_target11, 8388607
  %R7175 = or i32 %R7174, 16777216
  %R7181 = sext i32 %load_target10 to i64
  %R7182 = mul i64 %R7181, 4
  %48 = bitcast i32* %load_target9 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %R7182
  %50 = bitcast i8* %49 to i32*
  %51 = bitcast i32* %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = bitcast i8* %52 to i32*
  store i32 %R7175, i32* %53
  %54 = bitcast %struct.expdesc* %ARG2 to i32*
  %55 = bitcast i32* %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 0
  %57 = bitcast i8* %56 to i32*
  store i32 11, i32* %57
  br label %L1291

L1291:                                            ; preds = %L1290, %L1289, %L1288
  ret void
}

define internal void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1292:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L1298 [
    i32 6, label %L1293
    i32 7, label %L1294
    i32 8, label %L1295
    i32 9, label %L1296
    i32 13, label %L1297
    i32 14, label %L1297
  ]

L1293:                                            ; preds = %L1292
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 12, i32* %7
  br label %L1298

L1294:                                            ; preds = %L1292
  %8 = bitcast %struct.expdesc* %ARG2 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  %load_target1 = load i32, i32* %11
  %R7191 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 4, i32 0, i32 %load_target1, i32 0)
  %12 = bitcast %struct.expdesc* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 %R7191, i32* %15
  %16 = bitcast %struct.expdesc* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i32*
  store i32 11, i32* %19
  br label %L1298

L1295:                                            ; preds = %L1292
  %20 = bitcast %struct.expdesc* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  %load_target2 = load i32, i32* %23
  %R7198 = call i32 @luaK_codeABx(%struct.FuncState* %ARG1, i32 5, i32 0, i32 %load_target2)
  %24 = bitcast %struct.expdesc* %ARG2 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 %R7198, i32* %27
  %28 = bitcast %struct.expdesc* %ARG2 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to i32*
  store i32 11, i32* %31
  br label %L1298

L1296:                                            ; preds = %L1292
  %32 = bitcast %struct.expdesc* %ARG2 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 12
  %35 = bitcast i8* %34 to i32*
  %load_target3 = load i32, i32* %35
  call void @freereg(%struct.FuncState* %ARG1, i32 %load_target3)
  %36 = bitcast %struct.expdesc* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  %load_target4 = load i32, i32* %39
  call void @freereg(%struct.FuncState* %ARG1, i32 %load_target4)
  %40 = bitcast %struct.expdesc* %ARG2 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 8
  %43 = bitcast i8* %42 to i32*
  %load_target5 = load i32, i32* %43
  %44 = bitcast %struct.expdesc* %ARG2 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 12
  %47 = bitcast i8* %46 to i32*
  %load_target6 = load i32, i32* %47
  %R7212 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 6, i32 0, i32 %load_target5, i32 %load_target6)
  %48 = bitcast %struct.expdesc* %ARG2 to i32*
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 %R7212, i32* %51
  %52 = bitcast %struct.expdesc* %ARG2 to i32*
  %53 = bitcast i32* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  %55 = bitcast i8* %54 to i32*
  store i32 11, i32* %55
  br label %L1298

L1297:                                            ; preds = %L1292, %L1292
  call void @luaK_setoneret(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1298

L1298:                                            ; preds = %L1297, %L1296, %L1295, %L1294, %L1293, %L1292
  ret void
}

define internal i32 @code_label(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4) {
L1299:
  %R7218 = call i32 @luaK_getlabel(%struct.FuncState* %ARG1)
  %R7223 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 2, i32 %ARG2, i32 %ARG3, i32 %ARG4)
  ret i32 %R7223
}

define internal void @discharge2reg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %ARG3) {
L1300:
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L1309 [
    i32 1, label %L1301
    i32 2, label %L1302
    i32 3, label %L1302
    i32 4, label %L1303
    i32 5, label %L1304
    i32 11, label %L1305
    i32 12, label %L1306
  ]

L1301:                                            ; preds = %L1300
  call void @luaK_nil(%struct.FuncState* %ARG1, i32 %ARG3, i32 1)
  br label %L1308

L1302:                                            ; preds = %L1300, %L1300
  %R7236 = icmp eq i32 %load_target, 2
  %R72361 = zext i1 %R7236 to i32
  %R7237 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 2, i32 %ARG3, i32 %R72361, i32 0)
  br label %L1308

L1303:                                            ; preds = %L1300
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target2 = load i32, i32* %7
  %R7243 = call i32 @luaK_codeABx(%struct.FuncState* %ARG1, i32 1, i32 %ARG3, i32 %load_target2)
  br label %L1308

L1304:                                            ; preds = %L1300
  %8 = bitcast %struct.expdesc* %ARG2 to double*
  %9 = bitcast double* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to double*
  %load_target3 = load double, double* %11
  %R7249 = call i32 @luaK_numberK(%struct.FuncState* %ARG1, double %load_target3)
  %R7251 = call i32 @luaK_codeABx(%struct.FuncState* %ARG1, i32 1, i32 %ARG3, i32 %R7249)
  br label %L1308

L1305:                                            ; preds = %L1300
  %12 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %13 = bitcast %struct.Proto** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to %struct.Proto**
  %load_target4 = load %struct.Proto*, %struct.Proto** %15
  %16 = bitcast %struct.Proto* %load_target4 to i32**
  %17 = bitcast i32** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to i32**
  %load_target5 = load i32*, i32** %19
  %20 = bitcast %struct.expdesc* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  %load_target6 = load i32, i32* %23
  %R7257 = sext i32 %load_target6 to i64
  %R7258 = mul i64 %R7257, 4
  %24 = bitcast i32* %load_target5 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %R7258
  %26 = bitcast i8* %25 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to i32*
  %load_target7 = load i32, i32* %29
  %R7262 = and i32 %load_target7, -16321
  %R7265 = shl i32 %ARG3, 6
  %R7266 = and i32 %R7265, 16320
  %R7267 = or i32 %R7262, %R7266
  %30 = bitcast i32* %26 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = bitcast i8* %31 to i32*
  store i32 %R7267, i32* %32
  br label %L1308

L1306:                                            ; preds = %L1300
  %33 = bitcast %struct.expdesc* %ARG2 to i32*
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to i32*
  %load_target8 = load i32, i32* %36
  %R7272 = icmp ne i32 %ARG3, %load_target8
  %R72729 = zext i1 %R7272 to i32
  %cond = icmp ne i32 %R72729, 0
  br i1 %cond, label %L1307, label %L1308

L1307:                                            ; preds = %L1306
  %R7277 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 0, i32 %ARG3, i32 %load_target8, i32 0)
  br label %L1308

L1308:                                            ; preds = %L1307, %L1306, %L1305, %L1304, %L1303, %L1302, %L1301
  %37 = bitcast %struct.expdesc* %ARG2 to i32*
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 %ARG3, i32* %40
  %41 = bitcast %struct.expdesc* %ARG2 to i32*
  %42 = bitcast i32* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 0
  %44 = bitcast i8* %43 to i32*
  store i32 12, i32* %44
  br label %L1309

L1309:                                            ; preds = %L1308, %L1300
  ret void
}

define internal void @discharge2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1310:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R7284 = icmp ne i32 %load_target, 12
  %R72841 = zext i1 %R7284 to i32
  %cond = icmp ne i32 %R72841, 0
  br i1 %cond, label %L1311, label %L1312

L1311:                                            ; preds = %L1310
  call void @luaK_reserveregs(%struct.FuncState* %ARG1, i32 1)
  %4 = bitcast %struct.FuncState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 60
  %7 = bitcast i8* %6 to i32*
  %load_target2 = load i32, i32* %7
  %R7290 = add i32 %load_target2, -1
  call void @discharge2reg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %R7290)
  br label %L1312

L1312:                                            ; preds = %L1311, %L1310
  ret void
}

define internal void @exp2reg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %ARG3) {
L1313:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  call void @discharge2reg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %ARG3)
  %3 = bitcast %struct.expdesc* %ARG2 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %R7297 = icmp eq i32 %load_target, 10
  %R72971 = zext i1 %R7297 to i32
  %cond = icmp ne i32 %R72971, 0
  br i1 %cond, label %L1314, label %L1315

L1314:                                            ; preds = %L1313
  %7 = bitcast %struct.expdesc* %ARG2 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i32 16
  %9 = bitcast i8* %8 to %struct.expdesc*
  %10 = bitcast %struct.expdesc* %ARG2 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i32*
  %load_target2 = load i32, i32* %13
  call void @luaK_concat(%struct.FuncState* %ARG1, %struct.expdesc* %9, i32 %load_target2)
  br label %L1315

L1315:                                            ; preds = %L1314, %L1313
  %14 = bitcast %struct.expdesc* %ARG2 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to i32*
  %load_target3 = load i32, i32* %17
  %18 = bitcast %struct.expdesc* %ARG2 to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 20
  %21 = bitcast i8* %20 to i32*
  %load_target4 = load i32, i32* %21
  %R7307 = icmp ne i32 %load_target3, %load_target4
  %R73075 = zext i1 %R7307 to i32
  %cond6 = icmp ne i32 %R73075, 0
  br i1 %cond6, label %L1316, label %L1323

L1316:                                            ; preds = %L1315
  %R7311 = call i32 @need_value(%struct.FuncState* %ARG1, i32 %load_target3)
  store i32 -1, i32* %1
  store i32 -1, i32* %2
  %cond7 = icmp ne i32 %R7311, 0
  br i1 %cond7, label %L1318, label %L1317

L1317:                                            ; preds = %L1316
  %22 = bitcast %struct.expdesc* %ARG2 to i32*
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 20
  %25 = bitcast i8* %24 to i32*
  %load_target8 = load i32, i32* %25
  %R7315 = call i32 @need_value(%struct.FuncState* %ARG1, i32 %load_target8)
  %cond9 = icmp ne i32 %R7315, 0
  br i1 %cond9, label %L1318, label %L1322

L1318:                                            ; preds = %L1317, %L1316
  %26 = bitcast %struct.expdesc* %ARG2 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to i32*
  %load_target10 = load i32, i32* %29
  %R7319 = icmp eq i32 %load_target10, 10
  %R731911 = zext i1 %R7319 to i32
  %cond12 = icmp ne i32 %R731911, 0
  br i1 %cond12, label %L1319, label %L1320

L1319:                                            ; preds = %L1318
  store i32 -1, i32* %0
  br label %L1321

L1320:                                            ; preds = %L1318
  %R7321 = call i32 @luaK_jump(%struct.FuncState* %ARG1)
  store i32 %R7321, i32* %0
  br label %L1321

L1321:                                            ; preds = %L1320, %L1319
  %30 = load i32, i32* %0
  %R7325 = call i32 @code_label(%struct.FuncState* %ARG1, i32 %ARG3, i32 0, i32 1)
  %R7328 = call i32 @code_label(%struct.FuncState* %ARG1, i32 %ARG3, i32 1, i32 0)
  call void @luaK_patchtohere(%struct.FuncState* %ARG1, i32 %30)
  store i32 %R7325, i32* %1
  store i32 %R7328, i32* %2
  br label %L1322

L1322:                                            ; preds = %L1321, %L1317
  %R7332 = call i32 @luaK_getlabel(%struct.FuncState* %ARG1)
  %31 = bitcast %struct.expdesc* %ARG2 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 20
  %34 = bitcast i8* %33 to i32*
  %load_target13 = load i32, i32* %34
  %35 = load i32, i32* %1
  call void @patchlistaux(%struct.FuncState* %ARG1, i32 %load_target13, i32 %R7332, i32 %ARG3, i32 %35)
  %36 = bitcast %struct.expdesc* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 16
  %39 = bitcast i8* %38 to i32*
  %load_target14 = load i32, i32* %39
  %40 = load i32, i32* %2
  call void @patchlistaux(%struct.FuncState* %ARG1, i32 %load_target14, i32 %R7332, i32 %ARG3, i32 %40)
  br label %L1323

L1323:                                            ; preds = %L1322, %L1315
  %41 = bitcast %struct.expdesc* %ARG2 to i32*
  %42 = bitcast i32* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 16
  %44 = bitcast i8* %43 to i32*
  store i32 -1, i32* %44
  %45 = bitcast %struct.expdesc* %ARG2 to i32*
  %46 = bitcast i32* %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 20
  %48 = bitcast i8* %47 to i32*
  store i32 -1, i32* %48
  %49 = bitcast %struct.expdesc* %ARG2 to i32*
  %50 = bitcast i32* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = bitcast i8* %51 to i32*
  store i32 %ARG3, i32* %52
  %53 = bitcast %struct.expdesc* %ARG2 to i32*
  %54 = bitcast i32* %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 0
  %56 = bitcast i8* %55 to i32*
  store i32 12, i32* %56
  ret void
}

define internal void @luaK_exp2nextreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1324:
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  call void @luaK_reserveregs(%struct.FuncState* %ARG1, i32 1)
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 60
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R7359 = add i32 %load_target, -1
  call void @exp2reg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %R7359)
  ret void
}

define internal i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1325:
  %0 = alloca i32
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %1 = bitcast %struct.expdesc* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R7365 = icmp eq i32 %load_target, 12
  %R73651 = zext i1 %R7365 to i32
  %cond = icmp ne i32 %R73651, 0
  br i1 %cond, label %L1326, label %L1330

L1326:                                            ; preds = %L1325
  %5 = bitcast %struct.expdesc* %ARG2 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to i32*
  %load_target2 = load i32, i32* %8
  %9 = bitcast %struct.expdesc* %ARG2 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 20
  %12 = bitcast i8* %11 to i32*
  %load_target3 = load i32, i32* %12
  %R7370 = icmp ne i32 %load_target2, %load_target3
  %R73704 = zext i1 %R7370 to i32
  %cond5 = icmp ne i32 %R73704, 0
  br i1 %cond5, label %L1328, label %L1327

L1327:                                            ; preds = %L1326
  %13 = bitcast %struct.expdesc* %ARG2 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  %load_target6 = load i32, i32* %16
  store i32 %load_target6, i32* %0
  br label %L1331

L1328:                                            ; preds = %L1326
  %17 = bitcast %struct.expdesc* %ARG2 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i32*
  %load_target7 = load i32, i32* %20
  %21 = bitcast %struct.FuncState* %ARG1 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 74
  %load_target8 = load i8, i8* %22
  %R7378 = zext i8 %load_target8 to i32
  %R7379 = icmp sge i32 %load_target7, %R7378
  %R73799 = zext i1 %R7379 to i32
  %cond10 = icmp ne i32 %R73799, 0
  br i1 %cond10, label %L1329, label %L1330

L1329:                                            ; preds = %L1328
  call void @exp2reg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %load_target7)
  %23 = bitcast %struct.expdesc* %ARG2 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i32*
  %load_target11 = load i32, i32* %26
  store i32 %load_target11, i32* %0
  br label %L1331

L1330:                                            ; preds = %L1328, %L1325
  call void @luaK_exp2nextreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %27 = bitcast %struct.expdesc* %ARG2 to i32*
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i32*
  %load_target12 = load i32, i32* %30
  store i32 %load_target12, i32* %0
  br label %L1331

L1331:                                            ; preds = %L1330, %L1329, %L1327
  %31 = load i32, i32* %0
  ret i32 %31
}

define internal void @luaK_exp2val(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1332:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 20
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R7394 = icmp ne i32 %load_target, %load_target1
  %R73942 = zext i1 %R7394 to i32
  %cond = icmp ne i32 %R73942, 0
  br i1 %cond, label %L1333, label %L1334

L1333:                                            ; preds = %L1332
  %R7397 = call i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1335

L1334:                                            ; preds = %L1332
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1335

L1335:                                            ; preds = %L1334, %L1333
  ret void
}

define internal i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1336:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  call void @luaK_exp2val(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %3 = bitcast %struct.expdesc* %ARG2 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  switch i32 %load_target, label %L1347 [
    i32 1, label %L1337
    i32 2, label %L1337
    i32 3, label %L1337
    i32 4, label %L1345
    i32 5, label %L1337
  ]

L1337:                                            ; preds = %L1336, %L1336, %L1336, %L1336
  %7 = bitcast %struct.FuncState* %ARG1 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 64
  %10 = bitcast i8* %9 to i32*
  %load_target1 = load i32, i32* %10
  %R7406 = icmp sle i32 %load_target1, 255
  %R74062 = zext i1 %R7406 to i32
  %cond = icmp ne i32 %R74062, 0
  br i1 %cond, label %L1338, label %L1347

L1338:                                            ; preds = %L1337
  %R7410 = icmp eq i32 %load_target, 1
  %R74103 = zext i1 %R7410 to i32
  %cond4 = icmp ne i32 %R74103, 0
  br i1 %cond4, label %L1339, label %L1340

L1339:                                            ; preds = %L1338
  %R7412 = call i32 @nilK(%struct.FuncState* %ARG1)
  store i32 %R7412, i32* %1
  br label %L1344

L1340:                                            ; preds = %L1338
  %R7416 = icmp eq i32 %load_target, 5
  %R74165 = zext i1 %R7416 to i32
  %cond6 = icmp ne i32 %R74165, 0
  br i1 %cond6, label %L1341, label %L1342

L1341:                                            ; preds = %L1340
  %11 = bitcast %struct.expdesc* %ARG2 to double*
  %12 = bitcast double* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to double*
  %load_target7 = load double, double* %14
  %R7420 = call i32 @luaK_numberK(%struct.FuncState* %ARG1, double %load_target7)
  store i32 %R7420, i32* %0
  br label %L1343

L1342:                                            ; preds = %L1340
  %R7425 = icmp eq i32 %load_target, 2
  %R74258 = zext i1 %R7425 to i32
  %R7426 = call i32 @boolK(%struct.FuncState* %ARG1, i32 %R74258)
  store i32 %R7426, i32* %0
  br label %L1343

L1343:                                            ; preds = %L1342, %L1341
  %15 = load i32, i32* %0
  store i32 %15, i32* %1
  br label %L1344

L1344:                                            ; preds = %L1343, %L1339
  %16 = load i32, i32* %1
  %17 = bitcast %struct.expdesc* %ARG2 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 %16, i32* %20
  %21 = bitcast %struct.expdesc* %ARG2 to i32*
  %22 = bitcast i32* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to i32*
  store i32 4, i32* %24
  %R7433 = or i32 %16, 256
  store i32 %R7433, i32* %2
  br label %L1348

L1345:                                            ; preds = %L1336
  %25 = bitcast %struct.expdesc* %ARG2 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i32*
  %load_target9 = load i32, i32* %28
  %R7437 = icmp sle i32 %load_target9, 255
  %R743710 = zext i1 %R7437 to i32
  %cond11 = icmp ne i32 %R743710, 0
  br i1 %cond11, label %L1346, label %L1347

L1346:                                            ; preds = %L1345
  %R7440 = or i32 %load_target9, 256
  store i32 %R7440, i32* %2
  br label %L1348

L1347:                                            ; preds = %L1345, %L1337, %L1336
  %R7443 = call i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  store i32 %R7443, i32* %2
  br label %L1348

L1348:                                            ; preds = %L1347, %L1346, %L1344
  %29 = load i32, i32* %2
  ret i32 %29
}

define internal void @luaK_storevar(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, %struct.expdesc* %ARG3) {
L1349:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L1354 [
    i32 6, label %L1350
    i32 7, label %L1351
    i32 8, label %L1352
    i32 9, label %L1353
  ]

L1350:                                            ; preds = %L1349
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  call void @exp2reg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3, i32 %load_target1)
  br label %L1355

L1351:                                            ; preds = %L1349
  %R7454 = call i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %8 = bitcast %struct.expdesc* %ARG2 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  %load_target2 = load i32, i32* %11
  %R7459 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 8, i32 %R7454, i32 %load_target2, i32 0)
  br label %L1354

L1352:                                            ; preds = %L1349
  %R7462 = call i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %12 = bitcast %struct.expdesc* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  %R7468 = call i32 @luaK_codeABx(%struct.FuncState* %ARG1, i32 7, i32 %R7462, i32 %load_target3)
  br label %L1354

L1353:                                            ; preds = %L1349
  %R7471 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %16 = bitcast %struct.expdesc* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  %load_target4 = load i32, i32* %19
  %20 = bitcast %struct.expdesc* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 12
  %23 = bitcast i8* %22 to i32*
  %load_target5 = load i32, i32* %23
  %R7478 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 9, i32 %load_target4, i32 %load_target5, i32 %R7471)
  br label %L1354

L1354:                                            ; preds = %L1353, %L1352, %L1351, %L1349
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1355

L1355:                                            ; preds = %L1354, %L1350
  ret void
}

define internal void @luaK_self(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, %struct.expdesc* %ARG3) {
L1356:
  %R7483 = call i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %0 = bitcast %struct.FuncState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 60
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  call void @luaK_reserveregs(%struct.FuncState* %ARG1, i32 2)
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R7495 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %R7496 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 11, i32 %load_target, i32 %load_target1, i32 %R7495)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %8 = bitcast %struct.expdesc* %ARG2 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %load_target, i32* %11
  %12 = bitcast %struct.expdesc* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i32*
  store i32 12, i32* %15
  ret void
}

define internal void @invertjump(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1357:
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R7505 = call i32* @getjumpcontrol(%struct.FuncState* %ARG1, i32 %load_target)
  %4 = bitcast i32* %R7505 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i32*
  %load_target1 = load i32, i32* %6
  %R7508 = and i32 %load_target1, -16321
  %R7511 = lshr i32 %load_target1, 6
  %R7512 = and i32 %R7511, 255
  %R7514 = icmp eq i32 %R7512, 0
  %R75142 = zext i1 %R7514 to i32
  %R7516 = shl i32 %R75142, 6
  %R7517 = and i32 %R7516, 16320
  %R7518 = or i32 %R7508, %R7517
  %7 = bitcast i32* %R7505 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i32*
  store i32 %R7518, i32* %9
  ret void
}

define internal i32 @jumponcond(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 %ARG3) {
L1358:
  %0 = alloca i32
  %1 = bitcast %struct.expdesc* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R7523 = icmp eq i32 %load_target, 11
  %R75231 = zext i1 %R7523 to i32
  %cond = icmp ne i32 %R75231, 0
  br i1 %cond, label %L1359, label %L1361

L1359:                                            ; preds = %L1358
  %5 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %6 = bitcast %struct.Proto** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to %struct.Proto**
  %load_target2 = load %struct.Proto*, %struct.Proto** %8
  %9 = bitcast %struct.Proto* %load_target2 to i32**
  %10 = bitcast i32** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 24
  %12 = bitcast i8* %11 to i32**
  %load_target3 = load i32*, i32** %12
  %13 = bitcast %struct.expdesc* %ARG2 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  %load_target4 = load i32, i32* %16
  %R7529 = sext i32 %load_target4 to i64
  %R7530 = mul i64 %R7529, 4
  %17 = bitcast i32* %load_target3 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %R7530
  %19 = bitcast i8* %18 to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to i32*
  %load_target5 = load i32, i32* %22
  %R7535 = and i32 %load_target5, 63
  %R7538 = icmp eq i32 %R7535, 19
  %R75386 = zext i1 %R7538 to i32
  %cond7 = icmp ne i32 %R75386, 0
  br i1 %cond7, label %L1360, label %L1361

L1360:                                            ; preds = %L1359
  %23 = bitcast %struct.FuncState* %ARG1 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 48
  %26 = bitcast i8* %25 to i32*
  %load_target8 = load i32, i32* %26
  %R7541 = add i32 %load_target8, -1
  %27 = bitcast %struct.FuncState* %ARG1 to i32*
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 48
  %30 = bitcast i8* %29 to i32*
  store i32 %R7541, i32* %30
  %R7544 = lshr i32 %load_target5, 23
  %R7545 = and i32 %R7544, 511
  %R7548 = icmp eq i32 %ARG3, 0
  %R75489 = zext i1 %R7548 to i32
  %R7549 = call i32 @condjump(%struct.FuncState* %ARG1, i32 26, i32 %R7545, i32 0, i32 %R75489)
  store i32 %R7549, i32* %0
  br label %L1362

L1361:                                            ; preds = %L1359, %L1358
  call void @discharge2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %31 = bitcast %struct.expdesc* %ARG2 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to i32*
  %load_target10 = load i32, i32* %34
  %R7559 = call i32 @condjump(%struct.FuncState* %ARG1, i32 27, i32 255, i32 %load_target10, i32 %ARG3)
  store i32 %R7559, i32* %0
  br label %L1362

L1362:                                            ; preds = %L1361, %L1360
  %35 = load i32, i32* %0
  ret i32 %35
}

define internal void @luaK_goiftrue(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1363:
  %0 = alloca i32
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %1 = bitcast %struct.expdesc* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  switch i32 %load_target, label %L1366 [
    i32 2, label %L1364
    i32 4, label %L1364
    i32 5, label %L1364
    i32 10, label %L1365
  ]

L1364:                                            ; preds = %L1363, %L1363, %L1363
  store i32 -1, i32* %0
  br label %L1367

L1365:                                            ; preds = %L1363
  call void @invertjump(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %5 = bitcast %struct.expdesc* %ARG2 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  store i32 %load_target1, i32* %0
  br label %L1367

L1366:                                            ; preds = %L1363
  %R7570 = call i32 @jumponcond(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 0)
  store i32 %R7570, i32* %0
  br label %L1367

L1367:                                            ; preds = %L1366, %L1365, %L1364
  %9 = bitcast %struct.expdesc* %ARG2 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i32 20
  %11 = bitcast i8* %10 to %struct.expdesc*
  %12 = load i32, i32* %0
  call void @luaK_concat(%struct.FuncState* %ARG1, %struct.expdesc* %11, i32 %12)
  %13 = bitcast %struct.expdesc* %ARG2 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = bitcast i8* %15 to i32*
  %load_target2 = load i32, i32* %16
  call void @luaK_patchtohere(%struct.FuncState* %ARG1, i32 %load_target2)
  %17 = bitcast %struct.expdesc* %ARG2 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to i32*
  store i32 -1, i32* %20
  ret void
}

define internal void @luaK_goiffalse(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1368:
  %0 = alloca i32
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %1 = bitcast %struct.expdesc* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  switch i32 %load_target, label %L1371 [
    i32 1, label %L1369
    i32 3, label %L1369
    i32 10, label %L1370
  ]

L1369:                                            ; preds = %L1368, %L1368
  store i32 -1, i32* %0
  br label %L1372

L1370:                                            ; preds = %L1368
  %5 = bitcast %struct.expdesc* %ARG2 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  store i32 %load_target1, i32* %0
  br label %L1372

L1371:                                            ; preds = %L1368
  %R7587 = call i32 @jumponcond(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, i32 1)
  store i32 %R7587, i32* %0
  br label %L1372

L1372:                                            ; preds = %L1371, %L1370, %L1369
  %9 = bitcast %struct.expdesc* %ARG2 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i32 16
  %11 = bitcast i8* %10 to %struct.expdesc*
  %12 = load i32, i32* %0
  call void @luaK_concat(%struct.FuncState* %ARG1, %struct.expdesc* %11, i32 %12)
  %13 = bitcast %struct.expdesc* %ARG2 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 20
  %16 = bitcast i8* %15 to i32*
  %load_target2 = load i32, i32* %16
  call void @luaK_patchtohere(%struct.FuncState* %ARG1, i32 %load_target2)
  %17 = bitcast %struct.expdesc* %ARG2 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 20
  %20 = bitcast i8* %19 to i32*
  store i32 -1, i32* %20
  ret void
}

define internal void @codenot(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2) {
L1373:
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L1378 [
    i32 1, label %L1374
    i32 2, label %L1375
    i32 3, label %L1374
    i32 4, label %L1375
    i32 5, label %L1375
    i32 10, label %L1376
    i32 11, label %L1377
    i32 12, label %L1377
  ]

L1374:                                            ; preds = %L1373, %L1373
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 2, i32* %7
  br label %L1378

L1375:                                            ; preds = %L1373, %L1373, %L1373
  %8 = bitcast %struct.expdesc* %ARG2 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to i32*
  store i32 3, i32* %11
  br label %L1378

L1376:                                            ; preds = %L1373
  call void @invertjump(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1378

L1377:                                            ; preds = %L1373, %L1373
  call void @discharge2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2)
  %12 = bitcast %struct.expdesc* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target1 = load i32, i32* %15
  %R7611 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 19, i32 0, i32 %load_target1, i32 0)
  %16 = bitcast %struct.expdesc* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %R7611, i32* %19
  %20 = bitcast %struct.expdesc* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i32*
  store i32 11, i32* %23
  br label %L1378

L1378:                                            ; preds = %L1377, %L1376, %L1375, %L1374, %L1373
  %24 = bitcast %struct.expdesc* %ARG2 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 20
  %27 = bitcast i8* %26 to i32*
  %load_target2 = load i32, i32* %27
  %28 = bitcast %struct.expdesc* %ARG2 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to i32*
  %load_target3 = load i32, i32* %31
  %32 = bitcast %struct.expdesc* %ARG2 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 20
  %35 = bitcast i8* %34 to i32*
  store i32 %load_target3, i32* %35
  %36 = bitcast %struct.expdesc* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 16
  %39 = bitcast i8* %38 to i32*
  store i32 %load_target2, i32* %39
  call void @removevalues(%struct.FuncState* %ARG1, i32 %load_target3)
  %40 = bitcast %struct.expdesc* %ARG2 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to i32*
  %load_target4 = load i32, i32* %43
  call void @removevalues(%struct.FuncState* %ARG1, i32 %load_target4)
  ret void
}

define internal void @luaK_indexed(%struct.FuncState* %ARG1, %struct.expdesc* %ARG2, %struct.expdesc* %ARG3) {
L1379:
  %R7629 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %0 = bitcast %struct.expdesc* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 12
  %3 = bitcast i8* %2 to i32*
  store i32 %R7629, i32* %3
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 9, i32* %7
  ret void
}

define internal i32 @constfolding(i32 %ARG1, %struct.expdesc* %ARG2, %struct.expdesc* %ARG3) {
L1380:
  %0 = alloca double
  %1 = alloca i32
  %R7633 = call i32 @isnumeral(%struct.expdesc* %ARG2)
  %cond = icmp ne i32 %R7633, 0
  br i1 %cond, label %L1381, label %L1382

L1381:                                            ; preds = %L1380
  %R7635 = call i32 @isnumeral(%struct.expdesc* %ARG3)
  %cond1 = icmp ne i32 %R7635, 0
  br i1 %cond1, label %L1383, label %L1382

L1382:                                            ; preds = %L1381, %L1380
  store i32 0, i32* %1
  br label %L1398

L1383:                                            ; preds = %L1381
  %2 = bitcast %struct.expdesc* %ARG2 to double*
  %3 = bitcast double* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to double*
  %load_target = load double, double* %5
  %6 = bitcast %struct.expdesc* %ARG3 to double*
  %7 = bitcast double* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to double*
  %load_target2 = load double, double* %9
  switch i32 %ARG1, label %L1396 [
    i32 12, label %L1384
    i32 13, label %L1385
    i32 14, label %L1386
    i32 15, label %L1387
    i32 16, label %L1390
    i32 17, label %L1393
    i32 18, label %L1394
    i32 20, label %L1395
  ]

L1384:                                            ; preds = %L1383
  %R7644 = fadd double %load_target, %load_target2
  store double %R7644, double* %0
  br label %L1397

L1385:                                            ; preds = %L1383
  %R7647 = fsub double %load_target, %load_target2
  store double %R7647, double* %0
  br label %L1397

L1386:                                            ; preds = %L1383
  %R7650 = fmul double %load_target, %load_target2
  store double %R7650, double* %0
  br label %L1397

L1387:                                            ; preds = %L1383
  %R7653 = fcmp oeq double %load_target2, 0.000000e+00
  %R76533 = zext i1 %R7653 to i32
  %cond4 = icmp ne i32 %R76533, 0
  br i1 %cond4, label %L1388, label %L1389

L1388:                                            ; preds = %L1387
  store i32 0, i32* %1
  br label %L1398

L1389:                                            ; preds = %L1387
  %R7656 = fdiv double %load_target, %load_target2
  store double %R7656, double* %0
  br label %L1397

L1390:                                            ; preds = %L1383
  %R7659 = fcmp oeq double %load_target2, 0.000000e+00
  %R76595 = zext i1 %R7659 to i32
  %cond6 = icmp ne i32 %R76595, 0
  br i1 %cond6, label %L1391, label %L1392

L1391:                                            ; preds = %L1390
  store i32 0, i32* %1
  br label %L1398

L1392:                                            ; preds = %L1390
  %R7663 = fdiv double %load_target, %load_target2
  %R7664 = call double @floor(double %R7663)
  %R7666 = fmul double %R7664, %load_target2
  %R7667 = fsub double %load_target, %R7666
  store double %R7667, double* %0
  br label %L1397

L1393:                                            ; preds = %L1383
  %R7670 = call double @pow(double %load_target, double %load_target2)
  store double %R7670, double* %0
  br label %L1397

L1394:                                            ; preds = %L1383
  %R7672 = fsub double -0.000000e+00, %load_target
  store double %R7672, double* %0
  br label %L1397

L1395:                                            ; preds = %L1383
  store i32 0, i32* %1
  br label %L1398

L1396:                                            ; preds = %L1383
  store double 0.000000e+00, double* %0
  br label %L1397

L1397:                                            ; preds = %L1396, %L1394, %L1393, %L1392, %L1389, %L1386, %L1385, %L1384
  %10 = load double, double* %0
  %11 = bitcast %struct.expdesc* %ARG2 to double*
  %12 = bitcast double* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to double*
  store double %10, double* %14
  store i32 1, i32* %1
  br label %L1398

L1398:                                            ; preds = %L1397, %L1395, %L1391, %L1388, %L1382
  %15 = load i32, i32* %1
  ret i32 %15
}

declare double @floor(double)

declare double @pow(double, double)

define internal void @codearith(%struct.FuncState* %ARG1, i32 %ARG2, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4) {
L1399:
  %0 = alloca i32
  %R7681 = call i32 @constfolding(i32 %ARG2, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  %cond = icmp ne i32 %R7681, 0
  br i1 %cond, label %L1407, label %L1400

L1400:                                            ; preds = %L1399
  %R7684 = icmp ne i32 %ARG2, 18
  %R76841 = zext i1 %R7684 to i32
  %R7687 = icmp ne i32 %ARG2, 20
  %R76872 = zext i1 %R7687 to i32
  %1 = icmp ne i32 %R76841, 0
  %2 = icmp ne i32 %R76872, 0
  %R7688 = and i1 %1, %2
  %R76883 = zext i1 %R7688 to i32
  %cond4 = icmp ne i32 %R76883, 0
  br i1 %cond4, label %L1401, label %L1402

L1401:                                            ; preds = %L1400
  %R7691 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  store i32 %R7691, i32* %0
  br label %L1403

L1402:                                            ; preds = %L1400
  store i32 0, i32* %0
  br label %L1403

L1403:                                            ; preds = %L1402, %L1401
  %3 = load i32, i32* %0
  %R7695 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %R7698 = icmp sgt i32 %R7695, %3
  %R76985 = zext i1 %R7698 to i32
  %cond6 = icmp ne i32 %R76985, 0
  br i1 %cond6, label %L1404, label %L1405

L1404:                                            ; preds = %L1403
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  br label %L1406

L1405:                                            ; preds = %L1403
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1406

L1406:                                            ; preds = %L1405, %L1404
  %R7711 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 %ARG2, i32 0, i32 %R7695, i32 %3)
  %4 = bitcast %struct.expdesc* %ARG3 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %R7711, i32* %7
  %8 = bitcast %struct.expdesc* %ARG3 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to i32*
  store i32 11, i32* %11
  br label %L1407

L1407:                                            ; preds = %L1406, %L1399
  ret void
}

define internal void @codecomp(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, %struct.expdesc* %ARG4, %struct.expdesc* %ARG5) {
L1408:
  %R7716 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  %R7719 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG5)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG5)
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  %R7725 = icmp eq i32 %ARG3, 0
  %R77251 = zext i1 %R7725 to i32
  %R7728 = icmp ne i32 %ARG2, 23
  %R77282 = zext i1 %R7728 to i32
  %0 = icmp ne i32 %R77251, 0
  %1 = icmp ne i32 %R77282, 0
  %R7729 = and i1 %0, %1
  %R77293 = zext i1 %R7729 to i32
  %cond = icmp ne i32 %R77293, 0
  %select = select i1 %cond, i32 1, i32 %ARG3
  %cond4 = icmp ne i32 %R77293, 0
  %select5 = select i1 %cond4, i32 %R7719, i32 %R7716
  %cond6 = icmp ne i32 %R77293, 0
  %select7 = select i1 %cond6, i32 %R7716, i32 %R7719
  %R7738 = call i32 @condjump(%struct.FuncState* %ARG1, i32 %ARG2, i32 %select, i32 %select5, i32 %select7)
  %2 = bitcast %struct.expdesc* %ARG4 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 %R7738, i32* %5
  %6 = bitcast %struct.expdesc* %ARG4 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i32*
  store i32 10, i32* %9
  ret void
}

define internal void @luaK_prefix(%struct.FuncState* %ARG1, i32 %ARG2, %struct.expdesc* %ARG3) {
L1409:
  %e2_0x62d000b32ff0 = alloca %struct.expdesc
  %0 = bitcast %struct.expdesc* %e2_0x62d000b32ff0 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 20
  %3 = bitcast i8* %2 to i32*
  store i32 -1, i32* %3
  %4 = bitcast %struct.expdesc* %e2_0x62d000b32ff0 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7
  %8 = bitcast %struct.expdesc* %e2_0x62d000b32ff0 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to i32*
  store i32 5, i32* %11
  %12 = bitcast %struct.expdesc* %e2_0x62d000b32ff0 to double*
  %13 = bitcast double* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to double*
  store double 0.000000e+00, double* %15
  switch i32 %ARG2, label %L1415 [
    i32 0, label %L1410
    i32 1, label %L1413
    i32 2, label %L1414
  ]

L1410:                                            ; preds = %L1409
  %R7743 = call i32 @isnumeral(%struct.expdesc* %ARG3)
  %cond = icmp ne i32 %R7743, 0
  br i1 %cond, label %L1412, label %L1411

L1411:                                            ; preds = %L1410
  %R7746 = call i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1412

L1412:                                            ; preds = %L1411, %L1410
  call void @codearith(%struct.FuncState* %ARG1, i32 18, %struct.expdesc* %ARG3, %struct.expdesc* %e2_0x62d000b32ff0)
  br label %L1415

L1413:                                            ; preds = %L1409
  call void @codenot(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1415

L1414:                                            ; preds = %L1409
  %R7754 = call i32 @luaK_exp2anyreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  call void @codearith(%struct.FuncState* %ARG1, i32 20, %struct.expdesc* %ARG3, %struct.expdesc* %e2_0x62d000b32ff0)
  br label %L1415

L1415:                                            ; preds = %L1414, %L1413, %L1412, %L1409
  ret void
}

define internal void @luaK_infix(%struct.FuncState* %ARG1, i32 %ARG2, %struct.expdesc* %ARG3) {
L1416:
  switch i32 %ARG2, label %L1422 [
    i32 0, label %L1420
    i32 1, label %L1420
    i32 2, label %L1420
    i32 3, label %L1420
    i32 4, label %L1420
    i32 5, label %L1420
    i32 6, label %L1419
    i32 13, label %L1417
    i32 14, label %L1418
  ]

L1417:                                            ; preds = %L1416
  call void @luaK_goiftrue(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1423

L1418:                                            ; preds = %L1416
  call void @luaK_goiffalse(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1423

L1419:                                            ; preds = %L1416
  call void @luaK_exp2nextreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1423

L1420:                                            ; preds = %L1416, %L1416, %L1416, %L1416, %L1416, %L1416
  %R7766 = call i32 @isnumeral(%struct.expdesc* %ARG3)
  %cond = icmp ne i32 %R7766, 0
  br i1 %cond, label %L1423, label %L1421

L1421:                                            ; preds = %L1420
  %R7769 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1423

L1422:                                            ; preds = %L1416
  %R7772 = call i32 @luaK_exp2RK(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  br label %L1423

L1423:                                            ; preds = %L1422, %L1421, %L1420, %L1419, %L1418, %L1417
  ret void
}

define internal void @luaK_posfix(%struct.FuncState* %ARG1, i32 %ARG2, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4) {
L1424:
  switch i32 %ARG2, label %L1443 [
    i32 0, label %L1431
    i32 1, label %L1432
    i32 2, label %L1433
    i32 3, label %L1434
    i32 4, label %L1435
    i32 5, label %L1436
    i32 6, label %L1427
    i32 7, label %L1438
    i32 8, label %L1437
    i32 9, label %L1439
    i32 10, label %L1440
    i32 11, label %L1441
    i32 12, label %L1442
    i32 13, label %L1425
    i32 14, label %L1426
  ]

L1425:                                            ; preds = %L1424
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  %0 = bitcast %struct.expdesc* %ARG4 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i32 20
  %2 = bitcast i8* %1 to %struct.expdesc*
  %3 = bitcast %struct.expdesc* %ARG3 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 20
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  call void @luaK_concat(%struct.FuncState* %ARG1, %struct.expdesc* %2, i32 %load_target)
  %7 = bitcast %struct.expdesc* %ARG4 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to %struct.expdesc*
  %load_target1 = load %struct.expdesc, %struct.expdesc* %9
  %10 = bitcast %struct.expdesc* %ARG3 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to %struct.expdesc*
  store %struct.expdesc %load_target1, %struct.expdesc* %12
  br label %L1443

L1426:                                            ; preds = %L1424
  call void @luaK_dischargevars(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  %13 = bitcast %struct.expdesc* %ARG4 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i32 16
  %15 = bitcast i8* %14 to %struct.expdesc*
  %16 = bitcast %struct.expdesc* %ARG3 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to i32*
  %load_target2 = load i32, i32* %19
  call void @luaK_concat(%struct.FuncState* %ARG1, %struct.expdesc* %15, i32 %load_target2)
  %20 = bitcast %struct.expdesc* %ARG4 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to %struct.expdesc*
  %load_target3 = load %struct.expdesc, %struct.expdesc* %22
  %23 = bitcast %struct.expdesc* %ARG3 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = bitcast i8* %24 to %struct.expdesc*
  store %struct.expdesc %load_target3, %struct.expdesc* %25
  br label %L1443

L1427:                                            ; preds = %L1424
  call void @luaK_exp2val(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  %26 = bitcast %struct.expdesc* %ARG4 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to i32*
  %load_target4 = load i32, i32* %29
  %R7799 = icmp eq i32 %load_target4, 11
  %R77995 = zext i1 %R7799 to i32
  %cond = icmp ne i32 %R77995, 0
  br i1 %cond, label %L1428, label %L1430

L1428:                                            ; preds = %L1427
  %30 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %31 = bitcast %struct.Proto** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to %struct.Proto**
  %load_target6 = load %struct.Proto*, %struct.Proto** %33
  %34 = bitcast %struct.Proto* %load_target6 to i32**
  %35 = bitcast i32** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 24
  %37 = bitcast i8* %36 to i32**
  %load_target7 = load i32*, i32** %37
  %38 = bitcast %struct.expdesc* %ARG4 to i32*
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to i32*
  %load_target8 = load i32, i32* %41
  %R7805 = sext i32 %load_target8 to i64
  %R7806 = mul i64 %R7805, 4
  %42 = bitcast i32* %load_target7 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %R7806
  %44 = bitcast i8* %43 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to i32*
  %load_target9 = load i32, i32* %47
  %R7810 = and i32 %load_target9, 63
  %R7813 = icmp eq i32 %R7810, 21
  %R781310 = zext i1 %R7813 to i32
  %cond11 = icmp ne i32 %R781310, 0
  br i1 %cond11, label %L1429, label %L1430

L1429:                                            ; preds = %L1428
  call void @freeexp(%struct.FuncState* %ARG1, %struct.expdesc* %ARG3)
  %48 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %49 = bitcast %struct.Proto** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to %struct.Proto**
  %load_target12 = load %struct.Proto*, %struct.Proto** %51
  %52 = bitcast %struct.Proto* %load_target12 to i32**
  %53 = bitcast i32** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 24
  %55 = bitcast i8* %54 to i32**
  %load_target13 = load i32*, i32** %55
  %56 = bitcast %struct.expdesc* %ARG4 to i32*
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = bitcast i8* %58 to i32*
  %load_target14 = load i32, i32* %59
  %R7821 = sext i32 %load_target14 to i64
  %R7822 = mul i64 %R7821, 4
  %60 = bitcast i32* %load_target13 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %R7822
  %62 = bitcast i8* %61 to i32*
  %63 = bitcast i32* %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 0
  %65 = bitcast i8* %64 to i32*
  %load_target15 = load i32, i32* %65
  %R7825 = and i32 %load_target15, 8388607
  %66 = bitcast %struct.expdesc* %ARG3 to i32*
  %67 = bitcast i32* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = bitcast i8* %68 to i32*
  %load_target16 = load i32, i32* %69
  %R7829 = shl i32 %load_target16, 23
  %R7830 = and i32 %R7829, -8388608
  %R7831 = or i32 %R7825, %R7830
  %R7837 = sext i32 %load_target14 to i64
  %R7838 = mul i64 %R7837, 4
  %70 = bitcast i32* %load_target13 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %R7838
  %72 = bitcast i8* %71 to i32*
  %73 = bitcast i32* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 0
  %75 = bitcast i8* %74 to i32*
  store i32 %R7831, i32* %75
  %76 = bitcast %struct.expdesc* %ARG3 to i32*
  %77 = bitcast i32* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 0
  %79 = bitcast i8* %78 to i32*
  store i32 11, i32* %79
  %80 = bitcast %struct.expdesc* %ARG4 to i32*
  %81 = bitcast i32* %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = bitcast i8* %82 to i32*
  %load_target17 = load i32, i32* %83
  %84 = bitcast %struct.expdesc* %ARG3 to i32*
  %85 = bitcast i32* %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 8
  %87 = bitcast i8* %86 to i32*
  store i32 %load_target17, i32* %87
  br label %L1443

L1430:                                            ; preds = %L1428, %L1427
  call void @luaK_exp2nextreg(%struct.FuncState* %ARG1, %struct.expdesc* %ARG4)
  call void @codearith(%struct.FuncState* %ARG1, i32 21, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1431:                                            ; preds = %L1424
  call void @codearith(%struct.FuncState* %ARG1, i32 12, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1432:                                            ; preds = %L1424
  call void @codearith(%struct.FuncState* %ARG1, i32 13, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1433:                                            ; preds = %L1424
  call void @codearith(%struct.FuncState* %ARG1, i32 14, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1434:                                            ; preds = %L1424
  call void @codearith(%struct.FuncState* %ARG1, i32 15, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1435:                                            ; preds = %L1424
  call void @codearith(%struct.FuncState* %ARG1, i32 16, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1436:                                            ; preds = %L1424
  call void @codearith(%struct.FuncState* %ARG1, i32 17, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1437:                                            ; preds = %L1424
  call void @codecomp(%struct.FuncState* %ARG1, i32 23, i32 1, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1438:                                            ; preds = %L1424
  call void @codecomp(%struct.FuncState* %ARG1, i32 23, i32 0, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1439:                                            ; preds = %L1424
  call void @codecomp(%struct.FuncState* %ARG1, i32 24, i32 1, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1440:                                            ; preds = %L1424
  call void @codecomp(%struct.FuncState* %ARG1, i32 25, i32 1, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1441:                                            ; preds = %L1424
  call void @codecomp(%struct.FuncState* %ARG1, i32 24, i32 0, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1442:                                            ; preds = %L1424
  call void @codecomp(%struct.FuncState* %ARG1, i32 25, i32 0, %struct.expdesc* %ARG3, %struct.expdesc* %ARG4)
  br label %L1443

L1443:                                            ; preds = %L1442, %L1441, %L1440, %L1439, %L1438, %L1437, %L1436, %L1435, %L1434, %L1433, %L1432, %L1431, %L1430, %L1429, %L1426, %L1425, %L1424
  ret void
}

define internal void @luaK_fixline(%struct.FuncState* %ARG1, i32 %ARG2) {
L1444:
  %0 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %1 = bitcast %struct.Proto** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %3
  %4 = bitcast %struct.Proto* %load_target to i32**
  %5 = bitcast i32** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 40
  %7 = bitcast i8* %6 to i32**
  %load_target1 = load i32*, i32** %7
  %8 = bitcast %struct.FuncState* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 48
  %11 = bitcast i8* %10 to i32*
  %load_target2 = load i32, i32* %11
  %R7891 = add i32 %load_target2, -1
  %R7892 = sext i32 %R7891 to i64
  %R7893 = mul i64 %R7892, 4
  %12 = bitcast i32* %load_target1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %R7893
  %14 = bitcast i8* %13 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i32*
  store i32 %ARG2, i32* %17
  ret void
}

define internal i32 @luaK_code(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3) {
L1445:
  %0 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %1 = bitcast %struct.Proto** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %3
  call void @dischargejpc(%struct.FuncState* %ARG1)
  %4 = bitcast %struct.FuncState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 48
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R7900 = add i32 %load_target1, 1
  %8 = bitcast %struct.Proto* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 80
  %11 = bitcast i8* %10 to i32*
  %load_target2 = load i32, i32* %11
  %R7903 = icmp sgt i32 %R7900, %load_target2
  %R79033 = zext i1 %R7903 to i32
  %cond = icmp ne i32 %R79033, 0
  br i1 %cond, label %L1446, label %L1447

L1446:                                            ; preds = %L1445
  %12 = bitcast %struct.FuncState* %ARG1 to %struct.lua_State**
  %13 = bitcast %struct.lua_State** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to %struct.lua_State**
  %load_target4 = load %struct.lua_State*, %struct.lua_State** %15
  %16 = bitcast %struct.Proto* %load_target to i32**
  %17 = bitcast i32** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to i32**
  %load_target5 = load i32*, i32** %19
  %R7908 = bitcast i32* %load_target5 to i8*
  %20 = bitcast %struct.Proto* %load_target to i8*
  %21 = getelementptr inbounds i8, i8* %20, i32 80
  %22 = bitcast i8* %21 to %struct.Proto*
  %R7912 = call i8* @luaM_growaux_(%struct.lua_State* %load_target4, i8* %R7908, %struct.Proto* %22, i64 4, i32 2147483645, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i64 0, i64 0))
  %R7913 = bitcast i8* %R7912 to i32*
  %23 = bitcast %struct.Proto* %load_target to i32**
  %24 = bitcast i32** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 24
  %26 = bitcast i8* %25 to i32**
  store i32* %R7913, i32** %26
  br label %L1447

L1447:                                            ; preds = %L1446, %L1445
  %27 = bitcast %struct.Proto* %load_target to i32**
  %28 = bitcast i32** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 24
  %30 = bitcast i8* %29 to i32**
  %load_target6 = load i32*, i32** %30
  %31 = bitcast %struct.FuncState* %ARG1 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 48
  %34 = bitcast i8* %33 to i32*
  %load_target7 = load i32, i32* %34
  %R7920 = sext i32 %load_target7 to i64
  %R7921 = mul i64 %R7920, 4
  %35 = bitcast i32* %load_target6 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %R7921
  %37 = bitcast i8* %36 to i32*
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to i32*
  store i32 %ARG2, i32* %40
  %41 = bitcast %struct.FuncState* %ARG1 to i32*
  %42 = bitcast i32* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 48
  %44 = bitcast i8* %43 to i32*
  %load_target8 = load i32, i32* %44
  %R7925 = add i32 %load_target8, 1
  %45 = bitcast %struct.Proto* %load_target to i32*
  %46 = bitcast i32* %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 84
  %48 = bitcast i8* %47 to i32*
  %load_target9 = load i32, i32* %48
  %R7928 = icmp sgt i32 %R7925, %load_target9
  %R792810 = zext i1 %R7928 to i32
  %cond11 = icmp ne i32 %R792810, 0
  br i1 %cond11, label %L1448, label %L1449

L1448:                                            ; preds = %L1447
  %49 = bitcast %struct.FuncState* %ARG1 to %struct.lua_State**
  %50 = bitcast %struct.lua_State** %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  %52 = bitcast i8* %51 to %struct.lua_State**
  %load_target12 = load %struct.lua_State*, %struct.lua_State** %52
  %53 = bitcast %struct.Proto* %load_target to i32**
  %54 = bitcast i32** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 40
  %56 = bitcast i8* %55 to i32**
  %load_target13 = load i32*, i32** %56
  %R7933 = bitcast i32* %load_target13 to i8*
  %57 = bitcast %struct.Proto* %load_target to i8*
  %58 = getelementptr inbounds i8, i8* %57, i32 84
  %59 = bitcast i8* %58 to %struct.Proto*
  %R7937 = call i8* @luaM_growaux_(%struct.lua_State* %load_target12, i8* %R7933, %struct.Proto* %59, i64 4, i32 2147483645, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79, i64 0, i64 0))
  %R7938 = bitcast i8* %R7937 to i32*
  %60 = bitcast %struct.Proto* %load_target to i32**
  %61 = bitcast i32** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 40
  %63 = bitcast i8* %62 to i32**
  store i32* %R7938, i32** %63
  br label %L1449

L1449:                                            ; preds = %L1448, %L1447
  %64 = bitcast %struct.Proto* %load_target to i32**
  %65 = bitcast i32** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 40
  %67 = bitcast i8* %66 to i32**
  %load_target14 = load i32*, i32** %67
  %68 = bitcast %struct.FuncState* %ARG1 to i32*
  %69 = bitcast i32* %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 48
  %71 = bitcast i8* %70 to i32*
  %load_target15 = load i32, i32* %71
  %R7945 = sext i32 %load_target15 to i64
  %R7946 = mul i64 %R7945, 4
  %72 = bitcast i32* %load_target14 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 %R7946
  %74 = bitcast i8* %73 to i32*
  %75 = bitcast i32* %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 0
  %77 = bitcast i8* %76 to i32*
  store i32 %ARG3, i32* %77
  %78 = bitcast %struct.FuncState* %ARG1 to i32*
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 48
  %81 = bitcast i8* %80 to i32*
  %load_target16 = load i32, i32* %81
  %R7950 = add i32 %load_target16, 1
  %82 = bitcast %struct.FuncState* %ARG1 to i32*
  %83 = bitcast i32* %82 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 48
  %85 = bitcast i8* %84 to i32*
  store i32 %R7950, i32* %85
  ret i32 %load_target16
}

define internal i32 @luaK_codeABC.80(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4, i32 %ARG5) {
L1450:
  %R7958 = shl i32 %ARG3, 6
  %R7959 = or i32 %ARG2, %R7958
  %R7962 = shl i32 %ARG4, 23
  %R7963 = or i32 %R7959, %R7962
  %R7966 = shl i32 %ARG5, 14
  %R7967 = or i32 %R7963, %R7966
  %0 = bitcast %struct.FuncState* %ARG1 to %struct.LexState**
  %1 = bitcast %struct.LexState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to %struct.LexState**
  %load_target = load %struct.LexState*, %struct.LexState** %3
  %4 = bitcast %struct.LexState* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R7971 = call i32 @luaK_code(%struct.FuncState* %ARG1, i32 %R7967, i32 %load_target1)
  ret i32 %R7971
}

define internal i32 @luaK_codeABx.81(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4) {
L1451:
  %R7979 = shl i32 %ARG3, 6
  %R7980 = or i32 %ARG2, %R7979
  %R7983 = shl i32 %ARG4, 14
  %R7984 = or i32 %R7980, %R7983
  %0 = bitcast %struct.FuncState* %ARG1 to %struct.LexState**
  %1 = bitcast %struct.LexState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to %struct.LexState**
  %load_target = load %struct.LexState*, %struct.LexState** %3
  %4 = bitcast %struct.LexState* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R7988 = call i32 @luaK_code(%struct.FuncState* %ARG1, i32 %R7984, i32 %load_target1)
  ret i32 %R7988
}

define internal void @luaK_setlist(%struct.FuncState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4) {
L1452:
  %R7991 = add i32 %ARG3, -1
  %R7992 = sdiv i32 %R7991, 50
  %R7993 = add i32 %R7992, 1
  %R7996 = icmp eq i32 %ARG4, -1
  %R79961 = zext i1 %R7996 to i32
  %cond = icmp ne i32 %R79961, 0
  %select = select i1 %cond, i32 0, i32 %ARG4
  %R7999 = icmp sle i32 %R7993, 511
  %R79992 = zext i1 %R7999 to i32
  %cond3 = icmp ne i32 %R79992, 0
  br i1 %cond3, label %L1453, label %L1454

L1453:                                            ; preds = %L1452
  %R8004 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 34, i32 %ARG2, i32 %select, i32 %R7993)
  br label %L1455

L1454:                                            ; preds = %L1452
  %R8008 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 34, i32 %ARG2, i32 %select, i32 0)
  %0 = bitcast %struct.FuncState* %ARG1 to %struct.LexState**
  %1 = bitcast %struct.LexState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to %struct.LexState**
  %load_target = load %struct.LexState*, %struct.LexState** %3
  %4 = bitcast %struct.LexState* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target4 = load i32, i32* %7
  %R8015 = call i32 @luaK_code(%struct.FuncState* %ARG1, i32 %R7993, i32 %load_target4)
  br label %L1455

L1455:                                            ; preds = %L1454, %L1453
  %R8017 = add i32 %ARG2, 1
  %8 = bitcast %struct.FuncState* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 60
  %11 = bitcast i8* %10 to i32*
  store i32 %R8017, i32* %11
  ret void
}

define internal void @anchor_token(%struct.LexState* %ARG1) {
L1456:
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R8021 = icmp eq i32 %load_target, 285
  %R80211 = zext i1 %R8021 to i32
  %cond = icmp ne i32 %R80211, 0
  br i1 %cond, label %L1458, label %L1457

L1457:                                            ; preds = %L1456
  %R8024 = icmp eq i32 %load_target, 286
  %R80242 = zext i1 %R8024 to i32
  %cond3 = icmp ne i32 %R80242, 0
  br i1 %cond3, label %L1458, label %L1459

L1458:                                            ; preds = %L1457, %L1456
  %4 = bitcast %struct.LexState* %ARG1 to { [24 x i8] }**
  %5 = bitcast { [24 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to { [24 x i8] }**
  %load_target4 = load { [24 x i8] }*, { [24 x i8] }** %7
  %8 = bitcast { [24 x i8] }* %load_target4 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 24
  %10 = bitcast i8* %9 to { [24 x i8] }*
  %R8030 = bitcast { [24 x i8] }* %10 to i8*
  %11 = bitcast { [24 x i8] }* %load_target4 to i64*
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to i64*
  %load_target5 = load i64, i64* %14
  %R8033 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* %R8030, i64 %load_target5)
  br label %L1459

L1459:                                            ; preds = %L1458, %L1457
  ret void
}

define internal void @error_expected(%struct.LexState* %ARG1, i32 %ARG2) {
L1460:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 56
  %3 = bitcast i8* %2 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %3
  %R8040 = call i8* @luaX_token2str(%struct.LexState* %ARG1, i32 %ARG2)
  %R8041 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), i8* %R8040)
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* %R8041)
  ret void
}

define internal void @errorlimit(%struct.FuncState* %ARG1, i32 %ARG2, i8* %ARG3) {
L1461:
  %0 = alloca i8*
  %1 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %2 = bitcast %struct.Proto** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %4
  %5 = bitcast %struct.Proto* %load_target to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 96
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %cond = icmp ne i32 %load_target1, 0
  br i1 %cond, label %L1463, label %L1462

L1462:                                            ; preds = %L1461
  %9 = bitcast %struct.FuncState* %ARG1 to %struct.lua_State**
  %10 = bitcast %struct.lua_State** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 32
  %12 = bitcast i8* %11 to %struct.lua_State**
  %load_target2 = load %struct.lua_State*, %struct.lua_State** %12
  %R8051 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.83, i64 0, i64 0), i32 %ARG2, i8* %ARG3)
  store i8* %R8051, i8** %0
  br label %L1464

L1463:                                            ; preds = %L1461
  %13 = bitcast %struct.FuncState* %ARG1 to %struct.lua_State**
  %14 = bitcast %struct.lua_State** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast i8* %15 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %16
  %R8060 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.84, i64 0, i64 0), i32 %load_target1, i32 %ARG2, i8* %ARG3)
  store i8* %R8060, i8** %0
  br label %L1464

L1464:                                            ; preds = %L1463, %L1462
  %17 = load i8*, i8** %0
  %18 = bitcast %struct.FuncState* %ARG1 to %struct.LexState**
  %19 = bitcast %struct.LexState** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 24
  %21 = bitcast i8* %20 to %struct.LexState**
  %load_target4 = load %struct.LexState*, %struct.LexState** %21
  call void @luaX_lexerror(%struct.LexState* %load_target4, i8* %17, i32 0)
  ret void
}

define internal i32 @testnext(%struct.LexState* %ARG1, i32 %ARG2) {
L1465:
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R8068 = icmp eq i32 %load_target, %ARG2
  %R80681 = zext i1 %R8068 to i32
  %cond = icmp ne i32 %R80681, 0
  br i1 %cond, label %L1466, label %L1467

L1466:                                            ; preds = %L1465
  call void @luaX_next(%struct.LexState* %ARG1)
  br label %L1467

L1467:                                            ; preds = %L1466, %L1465
  ret i32 %R80681
}

define internal void @check(%struct.LexState* %ARG1, i32 %ARG2) {
L1468:
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R8074 = icmp ne i32 %load_target, %ARG2
  %R80741 = zext i1 %R8074 to i32
  %cond = icmp ne i32 %R80741, 0
  br i1 %cond, label %L1469, label %L1470

L1469:                                            ; preds = %L1468
  call void @error_expected(%struct.LexState* %ARG1, i32 %ARG2)
  br label %L1470

L1470:                                            ; preds = %L1469, %L1468
  ret void
}

define internal void @checknext(%struct.LexState* %ARG1, i32 %ARG2) {
L1471:
  call void @check(%struct.LexState* %ARG1, i32 %ARG2)
  call void @luaX_next(%struct.LexState* %ARG1)
  ret void
}

define internal void @check_match(%struct.LexState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4) {
L1472:
  %R8082 = call i32 @testnext(%struct.LexState* %ARG1, i32 %ARG2)
  %cond = icmp ne i32 %R8082, 0
  br i1 %cond, label %L1476, label %L1473

L1473:                                            ; preds = %L1472
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 4
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R8086 = icmp eq i32 %ARG4, %load_target
  %R80861 = zext i1 %R8086 to i32
  %cond2 = icmp ne i32 %R80861, 0
  br i1 %cond2, label %L1474, label %L1475

L1474:                                            ; preds = %L1473
  call void @error_expected(%struct.LexState* %ARG1, i32 %ARG2)
  br label %L1476

L1475:                                            ; preds = %L1473
  %4 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %5 = bitcast %struct.lua_State** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 56
  %7 = bitcast i8* %6 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %7
  %R8095 = call i8* @luaX_token2str(%struct.LexState* %ARG1, i32 %ARG2)
  %R8098 = call i8* @luaX_token2str(%struct.LexState* %ARG1, i32 %ARG3)
  %R8100 = call i8* @luaO_pushfstring(%struct.lua_State* %load_target3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.85, i64 0, i64 0), i8* %R8095, i8* %R8098, i32 %ARG4)
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* %R8100)
  br label %L1476

L1476:                                            ; preds = %L1475, %L1474, %L1472
  ret void
}

define internal { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1) {
L1477:
  call void @check(%struct.LexState* %ARG1, i32 285)
  %0 = bitcast %struct.LexState* %ARG1 to { [24 x i8] }**
  %1 = bitcast { [24 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to { [24 x i8] }**
  %load_target = load { [24 x i8] }*, { [24 x i8] }** %3
  call void @luaX_next(%struct.LexState* %ARG1)
  ret { [24 x i8] }* %load_target
}

define internal void @init_exp(%struct.expdesc* %ARG1, i32 %ARG2, i32 %ARG3) {
L1478:
  %0 = bitcast %struct.expdesc* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  store i32 -1, i32* %3
  %4 = bitcast %struct.expdesc* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 20
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7
  %8 = bitcast %struct.expdesc* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to i32*
  store i32 %ARG2, i32* %11
  %12 = bitcast %struct.expdesc* %ARG1 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 %ARG3, i32* %15
  ret void
}

define internal void @codestring(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, { [24 x i8] }* %ARG3) {
L1479:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %R8117 = call i32 @luaK_stringK(%struct.FuncState* %load_target, { [24 x i8] }* %ARG3)
  call void @init_exp(%struct.expdesc* %ARG2, i32 4, i32 %R8117)
  ret void
}

define internal void @checkname(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1480:
  %R8121 = call { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1)
  call void @codestring(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, { [24 x i8] }* %R8121)
  ret void
}

define internal i32 @registerlocalvar(%struct.LexState* %ARG1, { [24 x i8] }* %ARG2) {
L1481:
  %0 = alloca i32
  %1 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %2 = bitcast %struct.FuncState** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 48
  %4 = bitcast i8* %3 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %4
  %5 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %6 = bitcast %struct.Proto** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to %struct.Proto**
  %load_target1 = load %struct.Proto*, %struct.Proto** %8
  %9 = bitcast %struct.Proto* %load_target1 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 92
  %12 = bitcast i8* %11 to i32*
  %load_target2 = load i32, i32* %12
  %13 = bitcast %struct.FuncState* %load_target to i16*
  %14 = bitcast i16* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 72
  %16 = bitcast i8* %15 to i16*
  %load_target3 = load i16, i16* %16
  %R8130 = sext i16 %load_target3 to i32
  %R8131 = add i32 %R8130, 1
  %R8134 = icmp sgt i32 %R8131, %load_target2
  %R81344 = zext i1 %R8134 to i32
  store i32 %load_target2, i32* %0
  %cond = icmp ne i32 %R81344, 0
  br i1 %cond, label %L1482, label %L1483

L1482:                                            ; preds = %L1481
  %17 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %18 = bitcast %struct.lua_State** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 56
  %20 = bitcast i8* %19 to %struct.lua_State**
  %load_target5 = load %struct.lua_State*, %struct.lua_State** %20
  %21 = bitcast %struct.Proto* %load_target1 to %struct.LocVar**
  %22 = bitcast %struct.LocVar** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 48
  %24 = bitcast i8* %23 to %struct.LocVar**
  %load_target6 = load %struct.LocVar*, %struct.LocVar** %24
  %R8139 = bitcast %struct.LocVar* %load_target6 to i8*
  %25 = bitcast %struct.Proto* %load_target1 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i32 92
  %27 = bitcast i8* %26 to %struct.Proto*
  %R8143 = call i8* @luaM_growaux_(%struct.lua_State* %load_target5, i8* %R8139, %struct.Proto* %27, i64 16, i32 32767, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.86, i64 0, i64 0))
  %R8144 = bitcast i8* %R8143 to %struct.LocVar*
  %28 = bitcast %struct.Proto* %load_target1 to %struct.LocVar**
  %29 = bitcast %struct.LocVar** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 48
  %31 = bitcast i8* %30 to %struct.LocVar**
  store %struct.LocVar* %R8144, %struct.LocVar** %31
  br label %L1483

L1483:                                            ; preds = %L1484, %L1482, %L1481
  %32 = load i32, i32* %0
  %33 = bitcast %struct.Proto* %load_target1 to i32*
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 92
  %36 = bitcast i8* %35 to i32*
  %load_target7 = load i32, i32* %36
  %R8149 = icmp slt i32 %32, %load_target7
  %R81498 = zext i1 %R8149 to i32
  %cond9 = icmp ne i32 %R81498, 0
  br i1 %cond9, label %L1484, label %L1485

L1484:                                            ; preds = %L1483
  %37 = bitcast %struct.Proto* %load_target1 to %struct.LocVar**
  %38 = bitcast %struct.LocVar** %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 48
  %40 = bitcast i8* %39 to %struct.LocVar**
  %load_target10 = load %struct.LocVar*, %struct.LocVar** %40
  %R8153 = add i32 %32, 1
  %R8154 = sext i32 %32 to i64
  %R8155 = mul i64 %R8154, 16
  %41 = bitcast %struct.LocVar* %load_target10 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %R8155
  %43 = bitcast i8* %42 to %struct.LocVar*
  %44 = bitcast %struct.LocVar* %43 to { [24 x i8] }**
  %45 = bitcast { [24 x i8] }** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to { [24 x i8] }**
  store { [24 x i8] }* null, { [24 x i8] }** %47
  store i32 %R8153, i32* %0
  br label %L1483

L1485:                                            ; preds = %L1483
  %48 = bitcast %struct.Proto* %load_target1 to %struct.LocVar**
  %49 = bitcast %struct.LocVar** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 48
  %51 = bitcast i8* %50 to %struct.LocVar**
  %load_target11 = load %struct.LocVar*, %struct.LocVar** %51
  %52 = bitcast %struct.FuncState* %load_target to i16*
  %53 = bitcast i16* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 72
  %55 = bitcast i8* %54 to i16*
  %load_target12 = load i16, i16* %55
  %R8162 = sext i16 %load_target12 to i64
  %R8163 = mul i64 %R8162, 16
  %56 = bitcast %struct.LocVar* %load_target11 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 %R8163
  %58 = bitcast i8* %57 to %struct.LocVar*
  %59 = bitcast %struct.LocVar* %58 to { [24 x i8] }**
  %60 = bitcast { [24 x i8] }** %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 0
  %62 = bitcast i8* %61 to { [24 x i8] }**
  store { [24 x i8] }* %ARG2, { [24 x i8] }** %62
  %R8166 = bitcast { [24 x i8] }* %ARG2 to { [184 x i8] }*
  %63 = bitcast { [184 x i8] }* %R8166 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 9
  %load_target13 = load i8, i8* %64
  %R8168 = zext i8 %load_target13 to i32
  %R8169 = and i32 %R8168, 3
  %cond14 = icmp ne i32 %R8169, 0
  br i1 %cond14, label %L1486, label %L1488

L1486:                                            ; preds = %L1485
  %R8171 = bitcast %struct.Proto* %load_target1 to { [184 x i8] }*
  %65 = bitcast { [184 x i8] }* %R8171 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 9
  %load_target15 = load i8, i8* %66
  %R8173 = zext i8 %load_target15 to i32
  %R8174 = and i32 %R8173, 4
  %cond16 = icmp ne i32 %R8174, 0
  br i1 %cond16, label %L1487, label %L1488

L1487:                                            ; preds = %L1486
  %67 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %68 = bitcast %struct.lua_State** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 56
  %70 = bitcast i8* %69 to %struct.lua_State**
  %load_target17 = load %struct.lua_State*, %struct.lua_State** %70
  call void @luaC_barrierf(%struct.lua_State* %load_target17, { [184 x i8] }* %R8171, { [184 x i8] }* %R8166)
  br label %L1488

L1488:                                            ; preds = %L1487, %L1486, %L1485
  %71 = bitcast %struct.FuncState* %load_target to i16*
  %72 = bitcast i16* %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 72
  %74 = bitcast i8* %73 to i16*
  %load_target18 = load i16, i16* %74
  %R8183 = add i16 %load_target18, 1
  %75 = bitcast %struct.FuncState* %load_target to i16*
  %76 = bitcast i16* %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 72
  %78 = bitcast i8* %77 to i16*
  store i16 %R8183, i16* %78
  %R8184 = sext i16 %load_target18 to i32
  ret i32 %R8184
}

define internal void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %ARG2, i32 %ARG3) {
L1489:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %4 = bitcast %struct.FuncState* %load_target to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 74
  %load_target1 = load i8, i8* %5
  %R8190 = zext i8 %load_target1 to i32
  %R8192 = add i32 %R8190, %ARG3
  %R8193 = add i32 %R8192, 1
  %R8194 = icmp sgt i32 %R8193, 200
  %R81942 = zext i1 %R8194 to i32
  %cond = icmp ne i32 %R81942, 0
  br i1 %cond, label %L1490, label %L1491

L1490:                                            ; preds = %L1489
  call void @errorlimit(%struct.FuncState* %load_target, i32 200, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i64 0, i64 0))
  br label %L1491

L1491:                                            ; preds = %L1490, %L1489
  %R8199 = call i32 @registerlocalvar(%struct.LexState* %ARG1, { [24 x i8] }* %ARG2)
  %R8200 = trunc i32 %R8199 to i16
  %6 = bitcast %struct.FuncState* %load_target to i8*
  %7 = getelementptr inbounds i8, i8* %6, i32 196
  %8 = bitcast i8* %7 to %struct.FuncState*
  %9 = bitcast %struct.FuncState* %load_target to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 74
  %load_target3 = load i8, i8* %10
  %R8205 = zext i8 %load_target3 to i32
  %R8207 = add i32 %R8205, %ARG3
  %R8208 = sext i32 %R8207 to i64
  %R8209 = mul i64 %R8208, 2
  %11 = bitcast %struct.FuncState* %8 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %R8209
  %13 = bitcast i8* %12 to %struct.FuncState*
  %14 = bitcast %struct.FuncState* %13 to i16*
  %15 = bitcast i16* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i16*
  store i16 %R8200, i16* %17
  ret void
}

define internal void @adjustlocalvars(%struct.LexState* %ARG1, i32 %ARG2) {
L1492:
  %0 = alloca i32
  %1 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %2 = bitcast %struct.FuncState** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 48
  %4 = bitcast i8* %3 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %4
  %5 = bitcast %struct.FuncState* %load_target to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 74
  %load_target1 = load i8, i8* %6
  %R8215 = zext i8 %load_target1 to i32
  %R8217 = add i32 %R8215, %ARG2
  %R8218 = trunc i32 %R8217 to i8
  %7 = bitcast %struct.FuncState* %load_target to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 74
  store i8 %R8218, i8* %8
  store i32 %ARG2, i32* %0
  br label %L1493

L1493:                                            ; preds = %L1494, %L1492
  %9 = load i32, i32* %0
  %cond = icmp ne i32 %9, 0
  br i1 %cond, label %L1494, label %L1495

L1494:                                            ; preds = %L1493
  %10 = bitcast %struct.FuncState* %load_target to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 48
  %13 = bitcast i8* %12 to i32*
  %load_target2 = load i32, i32* %13
  %14 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %15 = bitcast %struct.Proto** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to %struct.Proto**
  %load_target3 = load %struct.Proto*, %struct.Proto** %17
  %18 = bitcast %struct.Proto* %load_target3 to %struct.LocVar**
  %19 = bitcast %struct.LocVar** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 48
  %21 = bitcast i8* %20 to %struct.LocVar**
  %load_target4 = load %struct.LocVar*, %struct.LocVar** %21
  %22 = bitcast %struct.FuncState* %load_target to i8*
  %23 = getelementptr inbounds i8, i8* %22, i32 196
  %24 = bitcast i8* %23 to %struct.FuncState*
  %25 = bitcast %struct.FuncState* %load_target to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 74
  %load_target5 = load i8, i8* %26
  %R8230 = zext i8 %load_target5 to i32
  %R8232 = sub i32 %R8230, %9
  %R8233 = sext i32 %R8232 to i64
  %R8234 = mul i64 %R8233, 2
  %27 = bitcast %struct.FuncState* %24 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 %R8234
  %29 = bitcast i8* %28 to %struct.FuncState*
  %30 = bitcast %struct.FuncState* %29 to i16*
  %31 = bitcast i16* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i16*
  %load_target6 = load i16, i16* %33
  %R8237 = zext i16 %load_target6 to i64
  %R8238 = mul i64 %R8237, 16
  %34 = bitcast %struct.LocVar* %load_target4 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %R8238
  %36 = bitcast i8* %35 to %struct.LocVar*
  %37 = bitcast %struct.LocVar* %36 to i32*
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 %load_target2, i32* %40
  %R8241 = add i32 %9, -1
  store i32 %R8241, i32* %0
  br label %L1493

L1495:                                            ; preds = %L1493
  ret void
}

define internal void @removevars(%struct.LexState* %ARG1, i32 %ARG2) {
L1496:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  br label %L1497

L1497:                                            ; preds = %L1498, %L1496
  %4 = bitcast %struct.FuncState* %load_target to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 74
  %load_target1 = load i8, i8* %5
  %R8246 = zext i8 %load_target1 to i32
  %R8248 = icmp sgt i32 %R8246, %ARG2
  %R82482 = zext i1 %R8248 to i32
  %cond = icmp ne i32 %R82482, 0
  br i1 %cond, label %L1498, label %L1499

L1498:                                            ; preds = %L1497
  %6 = bitcast %struct.FuncState* %load_target to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 48
  %9 = bitcast i8* %8 to i32*
  %load_target3 = load i32, i32* %9
  %10 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %11 = bitcast %struct.Proto** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to %struct.Proto**
  %load_target4 = load %struct.Proto*, %struct.Proto** %13
  %14 = bitcast %struct.Proto* %load_target4 to %struct.LocVar**
  %15 = bitcast %struct.LocVar** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 48
  %17 = bitcast i8* %16 to %struct.LocVar**
  %load_target5 = load %struct.LocVar*, %struct.LocVar** %17
  %18 = bitcast %struct.FuncState* %load_target to i8*
  %19 = getelementptr inbounds i8, i8* %18, i32 196
  %20 = bitcast i8* %19 to %struct.FuncState*
  %R8258 = add i8 %load_target1, -1
  %21 = bitcast %struct.FuncState* %load_target to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 74
  store i8 %R8258, i8* %22
  %R8259 = zext i8 %R8258 to i64
  %R8260 = mul i64 %R8259, 2
  %23 = bitcast %struct.FuncState* %20 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %R8260
  %25 = bitcast i8* %24 to %struct.FuncState*
  %26 = bitcast %struct.FuncState* %25 to i16*
  %27 = bitcast i16* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to i16*
  %load_target6 = load i16, i16* %29
  %R8263 = zext i16 %load_target6 to i64
  %R8264 = mul i64 %R8263, 16
  %30 = bitcast %struct.LocVar* %load_target5 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %R8264
  %32 = bitcast i8* %31 to %struct.LocVar*
  %33 = bitcast %struct.LocVar* %32 to i32*
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %load_target3, i32* %36
  br label %L1497

L1499:                                            ; preds = %L1497
  ret void
}

define internal i32 @indexupvalue(%struct.FuncState* %ARG1, { [24 x i8] }* %ARG2, %struct.expdesc* %ARG3) {
L1500:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %4 = bitcast %struct.Proto** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %6
  %7 = bitcast %struct.Proto* %load_target to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 72
  %10 = bitcast i8* %9 to i32*
  %load_target1 = load i32, i32* %10
  store i32 %load_target1, i32* %1
  store i32 0, i32* %0
  br label %L1501

L1501:                                            ; preds = %L1505, %L1500
  %11 = load i32, i32* %0
  %12 = bitcast %struct.Proto* %load_target to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 112
  %load_target2 = load i8, i8* %13
  %R8273 = zext i8 %load_target2 to i32
  %R8274 = icmp slt i32 %11, %R8273
  %R82743 = zext i1 %R8274 to i32
  %cond = icmp ne i32 %R82743, 0
  br i1 %cond, label %L1502, label %L1506

L1502:                                            ; preds = %L1501
  %14 = bitcast %struct.FuncState* %ARG1 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i32 75
  %16 = bitcast i8* %15 to %struct.FuncState*
  %R8278 = sext i32 %11 to i64
  %R8279 = mul i64 %R8278, 2
  %17 = bitcast %struct.FuncState* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %R8279
  %19 = bitcast i8* %18 to %struct.FuncState*
  %20 = bitcast %struct.FuncState* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %load_target4 = load i8, i8* %21
  %R8282 = zext i8 %load_target4 to i32
  %22 = bitcast %struct.expdesc* %ARG3 to i32*
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = bitcast i8* %24 to i32*
  %load_target5 = load i32, i32* %25
  %R8286 = icmp eq i32 %R8282, %load_target5
  %R82866 = zext i1 %R8286 to i32
  %cond7 = icmp ne i32 %R82866, 0
  br i1 %cond7, label %L1503, label %L1505

L1503:                                            ; preds = %L1502
  %26 = bitcast %struct.FuncState* %19 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %load_target8 = load i8, i8* %27
  %R8294 = zext i8 %load_target8 to i32
  %28 = bitcast %struct.expdesc* %ARG3 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %load_target9 = load i32, i32* %31
  %R8297 = icmp eq i32 %R8294, %load_target9
  %R829710 = zext i1 %R8297 to i32
  %cond11 = icmp ne i32 %R829710, 0
  br i1 %cond11, label %L1504, label %L1505

L1504:                                            ; preds = %L1503
  store i32 %11, i32* %2
  br label %L1516

L1505:                                            ; preds = %L1503, %L1502
  %R8301 = add i32 %11, 1
  store i32 %R8301, i32* %0
  br label %L1501

L1506:                                            ; preds = %L1501
  %R8305 = add i32 %R8273, 1
  %R8306 = icmp sgt i32 %R8305, 60
  %R830612 = zext i1 %R8306 to i32
  %cond13 = icmp ne i32 %R830612, 0
  br i1 %cond13, label %L1507, label %L1508

L1507:                                            ; preds = %L1506
  call void @errorlimit(%struct.FuncState* %ARG1, i32 60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0))
  br label %L1508

L1508:                                            ; preds = %L1507, %L1506
  %32 = bitcast %struct.Proto* %load_target to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 112
  %load_target14 = load i8, i8* %33
  %R8311 = zext i8 %load_target14 to i32
  %R8312 = add i32 %R8311, 1
  %34 = bitcast %struct.Proto* %load_target to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 72
  %37 = bitcast i8* %36 to i32*
  %load_target15 = load i32, i32* %37
  %R8315 = icmp sgt i32 %R8312, %load_target15
  %R831516 = zext i1 %R8315 to i32
  %cond17 = icmp ne i32 %R831516, 0
  br i1 %cond17, label %L1509, label %L1510

L1509:                                            ; preds = %L1508
  %38 = bitcast %struct.FuncState* %ARG1 to %struct.lua_State**
  %39 = bitcast %struct.lua_State** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 32
  %41 = bitcast i8* %40 to %struct.lua_State**
  %load_target18 = load %struct.lua_State*, %struct.lua_State** %41
  %42 = bitcast %struct.Proto* %load_target to { [24 x i8] }***
  %43 = bitcast { [24 x i8] }*** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 56
  %45 = bitcast i8* %44 to { [24 x i8] }***
  %load_target19 = load { [24 x i8] }**, { [24 x i8] }*** %45
  %R8320 = bitcast { [24 x i8] }** %load_target19 to i8*
  %46 = bitcast %struct.Proto* %load_target to i8*
  %47 = getelementptr inbounds i8, i8* %46, i32 72
  %48 = bitcast i8* %47 to %struct.Proto*
  %R8324 = call i8* @luaM_growaux_(%struct.lua_State* %load_target18, i8* %R8320, %struct.Proto* %48, i64 8, i32 2147483645, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.89, i64 0, i64 0))
  %R8325 = bitcast i8* %R8324 to { [24 x i8] }**
  %49 = bitcast %struct.Proto* %load_target to { [24 x i8] }***
  %50 = bitcast { [24 x i8] }*** %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 56
  %52 = bitcast i8* %51 to { [24 x i8] }***
  store { [24 x i8] }** %R8325, { [24 x i8] }*** %52
  br label %L1510

L1510:                                            ; preds = %L1511, %L1509, %L1508
  %53 = load i32, i32* %1
  %54 = bitcast %struct.Proto* %load_target to i32*
  %55 = bitcast i32* %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 72
  %57 = bitcast i8* %56 to i32*
  %load_target20 = load i32, i32* %57
  %R8330 = icmp slt i32 %53, %load_target20
  %R833021 = zext i1 %R8330 to i32
  %cond22 = icmp ne i32 %R833021, 0
  br i1 %cond22, label %L1511, label %L1512

L1511:                                            ; preds = %L1510
  %58 = bitcast %struct.Proto* %load_target to { [24 x i8] }***
  %59 = bitcast { [24 x i8] }*** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 56
  %61 = bitcast i8* %60 to { [24 x i8] }***
  %load_target23 = load { [24 x i8] }**, { [24 x i8] }*** %61
  %R8334 = add i32 %53, 1
  %R8335 = sext i32 %53 to i64
  %R8336 = mul i64 %R8335, 8
  %62 = bitcast { [24 x i8] }** %load_target23 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %R8336
  %64 = bitcast i8* %63 to { [24 x i8] }**
  %65 = bitcast { [24 x i8] }** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = bitcast i8* %66 to { [24 x i8] }**
  store { [24 x i8] }* null, { [24 x i8] }** %67
  store i32 %R8334, i32* %1
  br label %L1510

L1512:                                            ; preds = %L1510
  %68 = bitcast %struct.Proto* %load_target to { [24 x i8] }***
  %69 = bitcast { [24 x i8] }*** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 56
  %71 = bitcast i8* %70 to { [24 x i8] }***
  %load_target24 = load { [24 x i8] }**, { [24 x i8] }*** %71
  %72 = bitcast %struct.Proto* %load_target to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 112
  %load_target25 = load i8, i8* %73
  %R8343 = zext i8 %load_target25 to i64
  %R8344 = mul i64 %R8343, 8
  %74 = bitcast { [24 x i8] }** %load_target24 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 %R8344
  %76 = bitcast i8* %75 to { [24 x i8] }**
  %77 = bitcast { [24 x i8] }** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 0
  %79 = bitcast i8* %78 to { [24 x i8] }**
  store { [24 x i8] }* %ARG2, { [24 x i8] }** %79
  %R8347 = bitcast { [24 x i8] }* %ARG2 to { [184 x i8] }*
  %80 = bitcast { [184 x i8] }* %R8347 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 9
  %load_target26 = load i8, i8* %81
  %R8349 = zext i8 %load_target26 to i32
  %R8350 = and i32 %R8349, 3
  %cond27 = icmp ne i32 %R8350, 0
  br i1 %cond27, label %L1513, label %L1515

L1513:                                            ; preds = %L1512
  %R8352 = bitcast %struct.Proto* %load_target to { [184 x i8] }*
  %82 = bitcast { [184 x i8] }* %R8352 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 9
  %load_target28 = load i8, i8* %83
  %R8354 = zext i8 %load_target28 to i32
  %R8355 = and i32 %R8354, 4
  %cond29 = icmp ne i32 %R8355, 0
  br i1 %cond29, label %L1514, label %L1515

L1514:                                            ; preds = %L1513
  %84 = bitcast %struct.FuncState* %ARG1 to %struct.lua_State**
  %85 = bitcast %struct.lua_State** %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 32
  %87 = bitcast i8* %86 to %struct.lua_State**
  %load_target30 = load %struct.lua_State*, %struct.lua_State** %87
  call void @luaC_barrierf(%struct.lua_State* %load_target30, { [184 x i8] }* %R8352, { [184 x i8] }* %R8347)
  br label %L1515

L1515:                                            ; preds = %L1514, %L1513, %L1512
  %88 = bitcast %struct.expdesc* %ARG3 to i32*
  %89 = bitcast i32* %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 0
  %91 = bitcast i8* %90 to i32*
  %load_target31 = load i32, i32* %91
  %R8364 = trunc i32 %load_target31 to i8
  %92 = bitcast %struct.FuncState* %ARG1 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i32 75
  %94 = bitcast i8* %93 to %struct.FuncState*
  %95 = bitcast %struct.Proto* %load_target to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 112
  %load_target32 = load i8, i8* %96
  %R8369 = zext i8 %load_target32 to i64
  %R8370 = mul i64 %R8369, 2
  %97 = bitcast %struct.FuncState* %94 to i8*
  %98 = getelementptr inbounds i8, i8* %97, i64 %R8370
  %99 = bitcast i8* %98 to %struct.FuncState*
  %100 = bitcast %struct.FuncState* %99 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 0
  store i8 %R8364, i8* %101
  %102 = bitcast %struct.expdesc* %ARG3 to i32*
  %103 = bitcast i32* %102 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 8
  %105 = bitcast i8* %104 to i32*
  %load_target33 = load i32, i32* %105
  %R8374 = trunc i32 %load_target33 to i8
  %106 = bitcast %struct.FuncState* %ARG1 to i8*
  %107 = getelementptr inbounds i8, i8* %106, i32 75
  %108 = bitcast i8* %107 to %struct.FuncState*
  %109 = bitcast %struct.Proto* %load_target to i8*
  %110 = getelementptr inbounds i8, i8* %109, i64 112
  %load_target34 = load i8, i8* %110
  %R8379 = zext i8 %load_target34 to i64
  %R8380 = mul i64 %R8379, 2
  %111 = bitcast %struct.FuncState* %108 to i8*
  %112 = getelementptr inbounds i8, i8* %111, i64 %R8380
  %113 = bitcast i8* %112 to %struct.FuncState*
  %114 = bitcast %struct.FuncState* %113 to i8*
  %115 = getelementptr inbounds i8, i8* %114, i64 1
  store i8 %R8374, i8* %115
  %116 = bitcast %struct.Proto* %load_target to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 112
  %load_target35 = load i8, i8* %117
  %R8384 = add i8 %load_target35, 1
  %118 = bitcast %struct.Proto* %load_target to i8*
  %119 = getelementptr inbounds i8, i8* %118, i64 112
  store i8 %R8384, i8* %119
  %R8385 = zext i8 %load_target35 to i32
  store i32 %R8385, i32* %2
  br label %L1516

L1516:                                            ; preds = %L1515, %L1504
  %120 = load i32, i32* %2
  ret i32 %120
}

define internal i32 @searchvar(%struct.FuncState* %ARG1, { [24 x i8] }* %ARG2) {
L1517:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.FuncState* %ARG1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 74
  %load_target = load i8, i8* %3
  %R8388 = zext i8 %load_target to i32
  %R8389 = add i32 %R8388, -1
  store i32 %R8389, i32* %0
  br label %L1518

L1518:                                            ; preds = %L1521, %L1517
  %4 = load i32, i32* %0
  %R8391 = icmp sge i32 %4, 0
  %R83911 = zext i1 %R8391 to i32
  %cond = icmp ne i32 %R83911, 0
  br i1 %cond, label %L1519, label %L1522

L1519:                                            ; preds = %L1518
  %5 = bitcast %struct.FuncState* %ARG1 to %struct.Proto**
  %6 = bitcast %struct.Proto** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to %struct.Proto**
  %load_target2 = load %struct.Proto*, %struct.Proto** %8
  %9 = bitcast %struct.Proto* %load_target2 to %struct.LocVar**
  %10 = bitcast %struct.LocVar** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 48
  %12 = bitcast i8* %11 to %struct.LocVar**
  %load_target3 = load %struct.LocVar*, %struct.LocVar** %12
  %13 = bitcast %struct.FuncState* %ARG1 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i32 196
  %15 = bitcast i8* %14 to %struct.FuncState*
  %R8399 = sext i32 %4 to i64
  %R8400 = mul i64 %R8399, 2
  %16 = bitcast %struct.FuncState* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %R8400
  %18 = bitcast i8* %17 to %struct.FuncState*
  %19 = bitcast %struct.FuncState* %18 to i16*
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to i16*
  %load_target4 = load i16, i16* %22
  %R8403 = zext i16 %load_target4 to i64
  %R8404 = mul i64 %R8403, 16
  %23 = bitcast %struct.LocVar* %load_target3 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %R8404
  %25 = bitcast i8* %24 to %struct.LocVar*
  %26 = bitcast %struct.LocVar* %25 to { [24 x i8] }**
  %27 = bitcast { [24 x i8] }** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to { [24 x i8] }**
  %load_target5 = load { [24 x i8] }*, { [24 x i8] }** %29
  %R8407 = icmp eq { [24 x i8] }* %ARG2, %load_target5
  %R84076 = zext i1 %R8407 to i32
  %cond7 = icmp ne i32 %R84076, 0
  br i1 %cond7, label %L1520, label %L1521

L1520:                                            ; preds = %L1519
  store i32 %4, i32* %1
  br label %L1523

L1521:                                            ; preds = %L1519
  %R8411 = add i32 %4, -1
  store i32 %R8411, i32* %0
  br label %L1518

L1522:                                            ; preds = %L1518
  store i32 -1, i32* %1
  br label %L1523

L1523:                                            ; preds = %L1522, %L1520
  %30 = load i32, i32* %1
  ret i32 %30
}

define internal void @markupval(%struct.FuncState* %ARG1, i32 %ARG2) {
L1524:
  %0 = alloca %struct.BlockCnt*
  %1 = bitcast %struct.FuncState* %ARG1 to %struct.BlockCnt**
  %2 = bitcast %struct.BlockCnt** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 40
  %4 = bitcast i8* %3 to %struct.BlockCnt**
  %load_target = load %struct.BlockCnt*, %struct.BlockCnt** %4
  store %struct.BlockCnt* %load_target, %struct.BlockCnt** %0
  br label %L1525

L1525:                                            ; preds = %L1527, %L1524
  %5 = load %struct.BlockCnt*, %struct.BlockCnt** %0
  %cond = icmp ne %struct.BlockCnt* %5, null
  br i1 %cond, label %L1526, label %L1530

L1526:                                            ; preds = %L1525
  %6 = bitcast %struct.BlockCnt* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 12
  %load_target1 = load i8, i8* %7
  %R8417 = zext i8 %load_target1 to i32
  %R8419 = icmp sgt i32 %R8417, %ARG2
  %R84192 = zext i1 %R8419 to i32
  %cond3 = icmp ne i32 %R84192, 0
  br i1 %cond3, label %L1527, label %L1528

L1527:                                            ; preds = %L1526
  %8 = bitcast %struct.BlockCnt* %5 to %struct.BlockCnt**
  %9 = bitcast %struct.BlockCnt** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to %struct.BlockCnt**
  %load_target4 = load %struct.BlockCnt*, %struct.BlockCnt** %11
  store %struct.BlockCnt* %load_target4, %struct.BlockCnt** %0
  br label %L1525

L1528:                                            ; preds = %L1526
  %cond5 = icmp ne %struct.BlockCnt* %5, null
  br i1 %cond5, label %L1529, label %L1530

L1529:                                            ; preds = %L1528
  %12 = bitcast %struct.BlockCnt* %5 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 13
  store i8 1, i8* %13
  br label %L1530

L1530:                                            ; preds = %L1529, %L1528, %L1525
  ret void
}

define internal i32 @singlevaraux(%struct.FuncState* %ARG1, { [24 x i8] }* %ARG2, %struct.expdesc* %ARG3, i32 %ARG4) {
L1531:
  %0 = alloca i32
  %cond = icmp ne %struct.FuncState* %ARG1, null
  br i1 %cond, label %L1533, label %L1532

L1532:                                            ; preds = %L1531
  call void @init_exp(%struct.expdesc* %ARG3, i32 8, i32 255)
  store i32 8, i32* %0
  br label %L1540

L1533:                                            ; preds = %L1531
  %R8430 = call i32 @searchvar(%struct.FuncState* %ARG1, { [24 x i8] }* %ARG2)
  %R8432 = icmp sge i32 %R8430, 0
  %R84321 = zext i1 %R8432 to i32
  %cond2 = icmp ne i32 %R84321, 0
  br i1 %cond2, label %L1534, label %L1537

L1534:                                            ; preds = %L1533
  call void @init_exp(%struct.expdesc* %ARG3, i32 6, i32 %R8430)
  %cond3 = icmp ne i32 %ARG4, 0
  br i1 %cond3, label %L1536, label %L1535

L1535:                                            ; preds = %L1534
  call void @markupval(%struct.FuncState* %ARG1, i32 %R8430)
  br label %L1536

L1536:                                            ; preds = %L1535, %L1534
  store i32 6, i32* %0
  br label %L1540

L1537:                                            ; preds = %L1533
  %1 = bitcast %struct.FuncState* %ARG1 to %struct.FuncState**
  %2 = bitcast %struct.FuncState** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %4
  %R8442 = call i32 @singlevaraux(%struct.FuncState* %load_target, { [24 x i8] }* %ARG2, %struct.expdesc* %ARG3, i32 0)
  %R8443 = icmp eq i32 %R8442, 8
  %R84434 = zext i1 %R8443 to i32
  %cond5 = icmp ne i32 %R84434, 0
  br i1 %cond5, label %L1538, label %L1539

L1538:                                            ; preds = %L1537
  store i32 8, i32* %0
  br label %L1540

L1539:                                            ; preds = %L1537
  %R8447 = call i32 @indexupvalue(%struct.FuncState* %ARG1, { [24 x i8] }* %ARG2, %struct.expdesc* %ARG3)
  %5 = bitcast %struct.expdesc* %ARG3 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 %R8447, i32* %8
  %9 = bitcast %struct.expdesc* %ARG3 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to i32*
  store i32 7, i32* %12
  store i32 7, i32* %0
  br label %L1540

L1540:                                            ; preds = %L1539, %L1538, %L1536, %L1532
  %13 = load i32, i32* %0
  ret i32 %13
}

define internal void @singlevar(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1541:
  %R8451 = call { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1)
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %R8457 = call i32 @singlevaraux(%struct.FuncState* %load_target, { [24 x i8] }* %R8451, %struct.expdesc* %ARG2, i32 1)
  %R8458 = icmp eq i32 %R8457, 8
  %R84581 = zext i1 %R8458 to i32
  %cond = icmp ne i32 %R84581, 0
  br i1 %cond, label %L1542, label %L1543

L1542:                                            ; preds = %L1541
  %R8461 = call i32 @luaK_stringK(%struct.FuncState* %load_target, { [24 x i8] }* %R8451)
  %4 = bitcast %struct.expdesc* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %R8461, i32* %7
  br label %L1543

L1543:                                            ; preds = %L1542, %L1541
  ret void
}

define internal void @adjust_assign(%struct.LexState* %ARG1, i32 %ARG2, i32 %ARG3, %struct.expdesc* %ARG4) {
L1544:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %R8467 = sub i32 %ARG2, %ARG3
  %4 = bitcast %struct.expdesc* %ARG4 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R8471 = icmp eq i32 %load_target1, 13
  %R84712 = zext i1 %R8471 to i32
  %cond = icmp ne i32 %R84712, 0
  br i1 %cond, label %L1546, label %L1545

L1545:                                            ; preds = %L1544
  %R8475 = icmp eq i32 %load_target1, 14
  %R84753 = zext i1 %R8475 to i32
  %cond4 = icmp ne i32 %R84753, 0
  br i1 %cond4, label %L1546, label %L1548

L1546:                                            ; preds = %L1545, %L1544
  %R8477 = add i32 %R8467, 1
  %R8479 = icmp slt i32 %R8477, 0
  %R84795 = zext i1 %R8479 to i32
  %cond6 = icmp ne i32 %R84795, 0
  %select = select i1 %cond6, i32 0, i32 %R8477
  call void @luaK_setreturns(%struct.FuncState* %load_target, %struct.expdesc* %ARG4, i32 %select)
  %R8484 = icmp sgt i32 %select, 1
  %R84847 = zext i1 %R8484 to i32
  %cond8 = icmp ne i32 %R84847, 0
  br i1 %cond8, label %L1547, label %L1552

L1547:                                            ; preds = %L1546
  %R8487 = add i32 %select, -1
  call void @luaK_reserveregs(%struct.FuncState* %load_target, i32 %R8487)
  br label %L1552

L1548:                                            ; preds = %L1545
  %cond9 = icmp ne i32 %load_target1, 0
  br i1 %cond9, label %L1549, label %L1550

L1549:                                            ; preds = %L1548
  call void @luaK_exp2nextreg(%struct.FuncState* %load_target, %struct.expdesc* %ARG4)
  br label %L1550

L1550:                                            ; preds = %L1549, %L1548
  %R8495 = icmp sgt i32 %R8467, 0
  %R849510 = zext i1 %R8495 to i32
  %cond11 = icmp ne i32 %R849510, 0
  br i1 %cond11, label %L1551, label %L1552

L1551:                                            ; preds = %L1550
  %8 = bitcast %struct.FuncState* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 60
  %11 = bitcast i8* %10 to i32*
  %load_target12 = load i32, i32* %11
  call void @luaK_reserveregs(%struct.FuncState* %load_target, i32 %R8467)
  call void @luaK_nil(%struct.FuncState* %load_target, i32 %load_target12, i32 %R8467)
  br label %L1552

L1552:                                            ; preds = %L1551, %L1550, %L1547, %L1546
  ret void
}

define internal void @enterlevel(%struct.LexState* %ARG1) {
L1553:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 56
  %3 = bitcast i8* %2 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %3
  %4 = bitcast %struct.lua_State* %load_target to i16*
  %5 = bitcast i16* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 96
  %7 = bitcast i8* %6 to i16*
  %load_target1 = load i16, i16* %7
  %R8506 = add i16 %load_target1, 1
  %8 = bitcast %struct.lua_State* %load_target to i16*
  %9 = bitcast i16* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 96
  %11 = bitcast i8* %10 to i16*
  store i16 %R8506, i16* %11
  %R8507 = zext i16 %R8506 to i32
  %R8508 = icmp sgt i32 %R8507, 200
  %R85082 = zext i1 %R8508 to i32
  %cond = icmp ne i32 %R85082, 0
  br i1 %cond, label %L1554, label %L1555

L1554:                                            ; preds = %L1553
  call void @luaX_lexerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.90, i64 0, i64 0), i32 0)
  br label %L1555

L1555:                                            ; preds = %L1554, %L1553
  ret void
}

define internal void @enterblock(%struct.FuncState* %ARG1, %struct.BlockCnt* %ARG2, i8 %ARG3) {
L1556:
  %0 = bitcast %struct.BlockCnt* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  store i32 -1, i32* %3
  %4 = bitcast %struct.BlockCnt* %ARG2 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 14
  store i8 %ARG3, i8* %5
  %6 = bitcast %struct.FuncState* %ARG1 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 74
  %load_target = load i8, i8* %7
  %8 = bitcast %struct.BlockCnt* %ARG2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 12
  store i8 %load_target, i8* %9
  %10 = bitcast %struct.BlockCnt* %ARG2 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 13
  store i8 0, i8* %11
  %12 = bitcast %struct.FuncState* %ARG1 to %struct.BlockCnt**
  %13 = bitcast %struct.BlockCnt** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 40
  %15 = bitcast i8* %14 to %struct.BlockCnt**
  %load_target1 = load %struct.BlockCnt*, %struct.BlockCnt** %15
  %16 = bitcast %struct.BlockCnt* %ARG2 to %struct.BlockCnt**
  %17 = bitcast %struct.BlockCnt** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to %struct.BlockCnt**
  store %struct.BlockCnt* %load_target1, %struct.BlockCnt** %19
  %20 = bitcast %struct.FuncState* %ARG1 to %struct.BlockCnt**
  %21 = bitcast %struct.BlockCnt** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 40
  %23 = bitcast i8* %22 to %struct.BlockCnt**
  store %struct.BlockCnt* %ARG2, %struct.BlockCnt** %23
  ret void
}

define internal void @leaveblock(%struct.FuncState* %ARG1) {
L1557:
  %0 = bitcast %struct.FuncState* %ARG1 to %struct.BlockCnt**
  %1 = bitcast %struct.BlockCnt** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 40
  %3 = bitcast i8* %2 to %struct.BlockCnt**
  %load_target = load %struct.BlockCnt*, %struct.BlockCnt** %3
  %4 = bitcast %struct.BlockCnt* %load_target to %struct.BlockCnt**
  %5 = bitcast %struct.BlockCnt** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to %struct.BlockCnt**
  %load_target1 = load %struct.BlockCnt*, %struct.BlockCnt** %7
  %8 = bitcast %struct.FuncState* %ARG1 to %struct.BlockCnt**
  %9 = bitcast %struct.BlockCnt** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to %struct.BlockCnt**
  store %struct.BlockCnt* %load_target1, %struct.BlockCnt** %11
  %12 = bitcast %struct.FuncState* %ARG1 to %struct.LexState**
  %13 = bitcast %struct.LexState** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to %struct.LexState**
  %load_target2 = load %struct.LexState*, %struct.LexState** %15
  %16 = bitcast %struct.BlockCnt* %load_target to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 12
  %load_target3 = load i8, i8* %17
  %R8532 = zext i8 %load_target3 to i32
  call void @removevars(%struct.LexState* %load_target2, i32 %R8532)
  %18 = bitcast %struct.BlockCnt* %load_target to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 13
  %load_target4 = load i8, i8* %19
  %cond = icmp ne i8 %load_target4, 0
  br i1 %cond, label %L1558, label %L1559

L1558:                                            ; preds = %L1557
  %20 = bitcast %struct.BlockCnt* %load_target to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 12
  %load_target5 = load i8, i8* %21
  %R8538 = zext i8 %load_target5 to i32
  %R8539 = call i32 @luaK_codeABC(%struct.FuncState* %ARG1, i32 35, i32 %R8538, i32 0, i32 0)
  br label %L1559

L1559:                                            ; preds = %L1558, %L1557
  %22 = bitcast %struct.FuncState* %ARG1 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 74
  %load_target6 = load i8, i8* %23
  %R8542 = zext i8 %load_target6 to i32
  %24 = bitcast %struct.FuncState* %ARG1 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 60
  %27 = bitcast i8* %26 to i32*
  store i32 %R8542, i32* %27
  %28 = bitcast %struct.BlockCnt* %load_target to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %load_target7 = load i32, i32* %31
  call void @luaK_patchtohere(%struct.FuncState* %ARG1, i32 %load_target7)
  ret void
}

define internal void @pushclosure(%struct.LexState* %ARG1, %struct.FuncState* %ARG2, %struct.expdesc* %ARG3) {
L1560:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %3 = bitcast %struct.FuncState** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 48
  %5 = bitcast i8* %4 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %5
  %6 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %7 = bitcast %struct.Proto** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to %struct.Proto**
  %load_target1 = load %struct.Proto*, %struct.Proto** %9
  %10 = bitcast %struct.Proto* %load_target1 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 88
  %13 = bitcast i8* %12 to i32*
  %load_target2 = load i32, i32* %13
  %14 = bitcast %struct.FuncState* %load_target to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 68
  %17 = bitcast i8* %16 to i32*
  %load_target3 = load i32, i32* %17
  %R8555 = add i32 %load_target3, 1
  %R8558 = icmp sgt i32 %R8555, %load_target2
  %R85584 = zext i1 %R8558 to i32
  store i32 %load_target2, i32* %0
  %cond = icmp ne i32 %R85584, 0
  br i1 %cond, label %L1561, label %L1562

L1561:                                            ; preds = %L1560
  %18 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %19 = bitcast %struct.lua_State** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 56
  %21 = bitcast i8* %20 to %struct.lua_State**
  %load_target5 = load %struct.lua_State*, %struct.lua_State** %21
  %22 = bitcast %struct.Proto* %load_target1 to %struct.Proto***
  %23 = bitcast %struct.Proto*** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 32
  %25 = bitcast i8* %24 to %struct.Proto***
  %load_target6 = load %struct.Proto**, %struct.Proto*** %25
  %R8563 = bitcast %struct.Proto** %load_target6 to i8*
  %26 = bitcast %struct.Proto* %load_target1 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i32 88
  %28 = bitcast i8* %27 to %struct.Proto*
  %R8567 = call i8* @luaM_growaux_(%struct.lua_State* %load_target5, i8* %R8563, %struct.Proto* %28, i64 8, i32 262143, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.91, i64 0, i64 0))
  %R8568 = bitcast i8* %R8567 to %struct.Proto**
  %29 = bitcast %struct.Proto* %load_target1 to %struct.Proto***
  %30 = bitcast %struct.Proto*** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 32
  %32 = bitcast i8* %31 to %struct.Proto***
  store %struct.Proto** %R8568, %struct.Proto*** %32
  br label %L1562

L1562:                                            ; preds = %L1563, %L1561, %L1560
  %33 = load i32, i32* %0
  %34 = bitcast %struct.Proto* %load_target1 to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 88
  %37 = bitcast i8* %36 to i32*
  %load_target7 = load i32, i32* %37
  %R8573 = icmp slt i32 %33, %load_target7
  %R85738 = zext i1 %R8573 to i32
  %cond9 = icmp ne i32 %R85738, 0
  br i1 %cond9, label %L1563, label %L1564

L1563:                                            ; preds = %L1562
  %38 = bitcast %struct.Proto* %load_target1 to %struct.Proto***
  %39 = bitcast %struct.Proto*** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 32
  %41 = bitcast i8* %40 to %struct.Proto***
  %load_target10 = load %struct.Proto**, %struct.Proto*** %41
  %R8577 = add i32 %33, 1
  %R8578 = sext i32 %33 to i64
  %R8579 = mul i64 %R8578, 8
  %42 = bitcast %struct.Proto** %load_target10 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %R8579
  %44 = bitcast i8* %43 to %struct.Proto**
  %45 = bitcast %struct.Proto** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to %struct.Proto**
  store %struct.Proto* null, %struct.Proto** %47
  store i32 %R8577, i32* %0
  br label %L1562

L1564:                                            ; preds = %L1562
  %48 = bitcast %struct.FuncState* %ARG2 to %struct.Proto**
  %49 = bitcast %struct.Proto** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to %struct.Proto**
  %load_target11 = load %struct.Proto*, %struct.Proto** %51
  %52 = bitcast %struct.Proto* %load_target1 to %struct.Proto***
  %53 = bitcast %struct.Proto*** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 32
  %55 = bitcast i8* %54 to %struct.Proto***
  %load_target12 = load %struct.Proto**, %struct.Proto*** %55
  %56 = bitcast %struct.FuncState* %load_target to i32*
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 68
  %59 = bitcast i8* %58 to i32*
  %load_target13 = load i32, i32* %59
  %R8587 = add i32 %load_target13, 1
  %60 = bitcast %struct.FuncState* %load_target to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 68
  %63 = bitcast i8* %62 to i32*
  store i32 %R8587, i32* %63
  %R8588 = sext i32 %load_target13 to i64
  %R8589 = mul i64 %R8588, 8
  %64 = bitcast %struct.Proto** %load_target12 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %R8589
  %66 = bitcast i8* %65 to %struct.Proto**
  %67 = bitcast %struct.Proto** %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 0
  %69 = bitcast i8* %68 to %struct.Proto**
  store %struct.Proto* %load_target11, %struct.Proto** %69
  %70 = bitcast %struct.FuncState* %ARG2 to %struct.Proto**
  %71 = bitcast %struct.Proto** %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 0
  %73 = bitcast i8* %72 to %struct.Proto**
  %load_target14 = load %struct.Proto*, %struct.Proto** %73
  %R8593 = bitcast %struct.Proto* %load_target14 to { [184 x i8] }*
  %74 = bitcast { [184 x i8] }* %R8593 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 9
  %load_target15 = load i8, i8* %75
  %R8595 = zext i8 %load_target15 to i32
  %R8596 = and i32 %R8595, 3
  %cond16 = icmp ne i32 %R8596, 0
  br i1 %cond16, label %L1565, label %L1567

L1565:                                            ; preds = %L1564
  %R8598 = bitcast %struct.Proto* %load_target1 to { [184 x i8] }*
  %76 = bitcast { [184 x i8] }* %R8598 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 9
  %load_target17 = load i8, i8* %77
  %R8600 = zext i8 %load_target17 to i32
  %R8601 = and i32 %R8600, 4
  %cond18 = icmp ne i32 %R8601, 0
  br i1 %cond18, label %L1566, label %L1567

L1566:                                            ; preds = %L1565
  %78 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %79 = bitcast %struct.lua_State** %78 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 56
  %81 = bitcast i8* %80 to %struct.lua_State**
  %load_target19 = load %struct.lua_State*, %struct.lua_State** %81
  %R8608 = bitcast %struct.Proto* %load_target14 to { [184 x i8] }*
  call void @luaC_barrierf(%struct.lua_State* %load_target19, { [184 x i8] }* %R8598, { [184 x i8] }* %R8608)
  br label %L1567

L1567:                                            ; preds = %L1566, %L1565, %L1564
  %82 = bitcast %struct.FuncState* %load_target to i32*
  %83 = bitcast i32* %82 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 68
  %85 = bitcast i8* %84 to i32*
  %load_target20 = load i32, i32* %85
  %R8613 = add i32 %load_target20, -1
  %R8615 = call i32 @luaK_codeABx(%struct.FuncState* %load_target, i32 36, i32 0, i32 %R8613)
  call void @init_exp(%struct.expdesc* %ARG3, i32 11, i32 %R8615)
  store i32 0, i32* %1
  br label %L1568

L1568:                                            ; preds = %L1569, %L1567
  %86 = load i32, i32* %1
  %87 = bitcast %struct.FuncState* %ARG2 to %struct.Proto**
  %88 = bitcast %struct.Proto** %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 0
  %90 = bitcast i8* %89 to %struct.Proto**
  %load_target21 = load %struct.Proto*, %struct.Proto** %90
  %91 = bitcast %struct.Proto* %load_target21 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 112
  %load_target22 = load i8, i8* %92
  %R8620 = zext i8 %load_target22 to i32
  %R8621 = icmp slt i32 %86, %R8620
  %R862123 = zext i1 %R8621 to i32
  %cond24 = icmp ne i32 %R862123, 0
  br i1 %cond24, label %L1569, label %L1570

L1569:                                            ; preds = %L1568
  %93 = bitcast %struct.FuncState* %ARG2 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i32 75
  %95 = bitcast i8* %94 to %struct.FuncState*
  %R8625 = sext i32 %86 to i64
  %R8626 = mul i64 %R8625, 2
  %96 = bitcast %struct.FuncState* %95 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 %R8626
  %98 = bitcast i8* %97 to %struct.FuncState*
  %99 = bitcast %struct.FuncState* %98 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 0
  %load_target25 = load i8, i8* %100
  %R8629 = zext i8 %load_target25 to i32
  %R8630 = icmp eq i32 %R8629, 6
  %R863026 = zext i1 %R8630 to i32
  %cond27 = icmp ne i32 %R863026, 0
  %select = select i1 %cond27, i32 0, i32 4
  %101 = bitcast %struct.FuncState* %98 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  %load_target28 = load i8, i8* %102
  %R8642 = zext i8 %load_target28 to i32
  %R8643 = call i32 @luaK_codeABC(%struct.FuncState* %load_target, i32 %select, i32 0, i32 %R8642, i32 0)
  %R8645 = add i32 %86, 1
  store i32 %R8645, i32* %1
  br label %L1568

L1570:                                            ; preds = %L1568
  ret void
}

define internal void @open_func(%struct.LexState* %ARG1, %struct.FuncState* %ARG2) {
L1571:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 56
  %3 = bitcast i8* %2 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %3
  %R8649 = call %struct.Proto* @luaF_newproto(%struct.lua_State* %load_target)
  %4 = bitcast %struct.FuncState* %ARG2 to %struct.Proto**
  %5 = bitcast %struct.Proto** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to %struct.Proto**
  store %struct.Proto* %R8649, %struct.Proto** %7
  %8 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %9 = bitcast %struct.FuncState** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 48
  %11 = bitcast i8* %10 to %struct.FuncState**
  %load_target1 = load %struct.FuncState*, %struct.FuncState** %11
  %12 = bitcast %struct.FuncState* %ARG2 to %struct.FuncState**
  %13 = bitcast %struct.FuncState** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.FuncState**
  store %struct.FuncState* %load_target1, %struct.FuncState** %15
  %16 = bitcast %struct.FuncState* %ARG2 to %struct.LexState**
  %17 = bitcast %struct.LexState** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to %struct.LexState**
  store %struct.LexState* %ARG1, %struct.LexState** %19
  %20 = bitcast %struct.FuncState* %ARG2 to %struct.lua_State**
  %21 = bitcast %struct.lua_State** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to %struct.lua_State**
  store %struct.lua_State* %load_target, %struct.lua_State** %23
  %24 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %25 = bitcast %struct.FuncState** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 48
  %27 = bitcast i8* %26 to %struct.FuncState**
  store %struct.FuncState* %ARG2, %struct.FuncState** %27
  %28 = bitcast %struct.FuncState* %ARG2 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 48
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31
  %32 = bitcast %struct.FuncState* %ARG2 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 52
  %35 = bitcast i8* %34 to i32*
  store i32 -1, i32* %35
  %36 = bitcast %struct.FuncState* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 56
  %39 = bitcast i8* %38 to i32*
  store i32 -1, i32* %39
  %40 = bitcast %struct.FuncState* %ARG2 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 60
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43
  %44 = bitcast %struct.FuncState* %ARG2 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 64
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47
  %48 = bitcast %struct.FuncState* %ARG2 to i32*
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 68
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51
  %52 = bitcast %struct.FuncState* %ARG2 to i16*
  %53 = bitcast i16* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 72
  %55 = bitcast i8* %54 to i16*
  store i16 0, i16* %55
  %56 = bitcast %struct.FuncState* %ARG2 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 74
  store i8 0, i8* %57
  %58 = bitcast %struct.FuncState* %ARG2 to %struct.BlockCnt**
  %59 = bitcast %struct.BlockCnt** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 40
  %61 = bitcast i8* %60 to %struct.BlockCnt**
  store %struct.BlockCnt* null, %struct.BlockCnt** %61
  %62 = bitcast %struct.LexState* %ARG1 to { [24 x i8] }**
  %63 = bitcast { [24 x i8] }** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 80
  %65 = bitcast i8* %64 to { [24 x i8] }**
  %load_target2 = load { [24 x i8] }*, { [24 x i8] }** %65
  %66 = bitcast %struct.Proto* %R8649 to { [24 x i8] }**
  %67 = bitcast { [24 x i8] }** %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 64
  %69 = bitcast i8* %68 to { [24 x i8] }**
  store { [24 x i8] }* %load_target2, { [24 x i8] }** %69
  %70 = bitcast %struct.Proto* %R8649 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 115
  store i8 2, i8* %71
  %R8675 = call %struct.Table* @luaH_new(%struct.lua_State* %load_target, i32 0, i32 0)
  %72 = bitcast %struct.FuncState* %ARG2 to %struct.Table**
  %73 = bitcast %struct.Table** %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 8
  %75 = bitcast i8* %74 to %struct.Table**
  store %struct.Table* %R8675, %struct.Table** %75
  %76 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %77 = bitcast %struct.lua_TValue** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 16
  %79 = bitcast i8* %78 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %79
  %R8681 = bitcast %struct.Table* %R8675 to { [184 x i8] }*
  %80 = bitcast %struct.lua_TValue* %load_target3 to { [184 x i8] }**
  %81 = bitcast { [184 x i8] }** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  %83 = bitcast i8* %82 to { [184 x i8] }**
  store { [184 x i8] }* %R8681, { [184 x i8] }** %83
  %84 = bitcast %struct.lua_TValue* %load_target3 to i32*
  %85 = bitcast i32* %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 8
  %87 = bitcast i8* %86 to i32*
  store i32 5, i32* %87
  %88 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %89 = bitcast %struct.lua_TValue** %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 56
  %91 = bitcast i8* %90 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %91
  %R8686 = bitcast %struct.lua_TValue* %load_target4 to i8*
  %92 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %93 = bitcast %struct.lua_TValue** %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 16
  %95 = bitcast i8* %94 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %95
  %R8689 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %R8690 = sub i8* %R8686, %R8689
  %R8691 = icmp sle i8* %R8690, i64 16
  %R86916 = zext i1 %R8691 to i32
  %cond = icmp ne i32 %R86916, 0
  br i1 %cond, label %L1572, label %L1573

L1572:                                            ; preds = %L1571
  call void @luaD_growstack(%struct.lua_State* %load_target, i32 1)
  br label %L1573

L1573:                                            ; preds = %L1572, %L1571
  %96 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %97 = bitcast %struct.lua_TValue** %96 to i8*
  %98 = getelementptr inbounds i8, i8* %97, i64 16
  %99 = bitcast i8* %98 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %99
  %100 = bitcast %struct.lua_TValue* %load_target7 to i8*
  %101 = getelementptr inbounds i8, i8* %100, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %102 = bitcast i8* %101 to %struct.lua_TValue*
  %103 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %104 = bitcast %struct.lua_TValue** %103 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 16
  %106 = bitcast i8* %105 to %struct.lua_TValue**
  store %struct.lua_TValue* %102, %struct.lua_TValue** %106
  %R8699 = bitcast %struct.Proto* %R8649 to { [184 x i8] }*
  %107 = bitcast %struct.lua_TValue* %load_target7 to { [184 x i8] }**
  %108 = bitcast { [184 x i8] }** %107 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 16
  %110 = bitcast i8* %109 to { [184 x i8] }**
  store { [184 x i8] }* %R8699, { [184 x i8] }** %110
  %111 = bitcast %struct.lua_TValue* %load_target7 to i32*
  %112 = bitcast i32* %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 24
  %114 = bitcast i8* %113 to i32*
  store i32 9, i32* %114
  %115 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %116 = bitcast %struct.lua_TValue** %115 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 56
  %118 = bitcast i8* %117 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %118
  %R8704 = bitcast %struct.lua_TValue* %load_target8 to i8*
  %119 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %120 = bitcast %struct.lua_TValue** %119 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 16
  %122 = bitcast i8* %121 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %122
  %R8707 = bitcast %struct.lua_TValue* %load_target9 to i8*
  %R8708 = sub i8* %R8704, %R8707
  %R8709 = icmp sle i8* %R8708, i64 16
  %R870910 = zext i1 %R8709 to i32
  %cond11 = icmp ne i32 %R870910, 0
  br i1 %cond11, label %L1574, label %L1575

L1574:                                            ; preds = %L1573
  call void @luaD_growstack(%struct.lua_State* %load_target, i32 1)
  br label %L1575

L1575:                                            ; preds = %L1574, %L1573
  %123 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %124 = bitcast %struct.lua_TValue** %123 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 16
  %126 = bitcast i8* %125 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %126
  %127 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %128 = getelementptr inbounds i8, i8* %127, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %129 = bitcast i8* %128 to %struct.lua_TValue*
  %130 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %131 = bitcast %struct.lua_TValue** %130 to i8*
  %132 = getelementptr inbounds i8, i8* %131, i64 16
  %133 = bitcast i8* %132 to %struct.lua_TValue**
  store %struct.lua_TValue* %129, %struct.lua_TValue** %133
  ret void
}

define internal void @close_func(%struct.LexState* %ARG1) {
L1576:
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i8*
  %3 = alloca i8*
  %4 = alloca i8*
  %5 = alloca i8*
  %6 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %7 = bitcast %struct.lua_State** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 56
  %9 = bitcast i8* %8 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %9
  %10 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %11 = bitcast %struct.FuncState** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 48
  %13 = bitcast i8* %12 to %struct.FuncState**
  %load_target1 = load %struct.FuncState*, %struct.FuncState** %13
  %14 = bitcast %struct.FuncState* %load_target1 to %struct.Proto**
  %15 = bitcast %struct.Proto** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to %struct.Proto**
  %load_target2 = load %struct.Proto*, %struct.Proto** %17
  call void @removevars(%struct.LexState* %ARG1, i32 0)
  call void @luaK_ret(%struct.FuncState* %load_target1, i32 0, i32 0)
  %18 = bitcast %struct.FuncState* %load_target1 to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 48
  %21 = bitcast i8* %20 to i32*
  %load_target3 = load i32, i32* %21
  %R8724 = add i32 %load_target3, 1
  %R8725 = sext i32 %R8724 to i64
  %R8726 = icmp ule i64 %R8725, 4611686018427387903
  %R87264 = zext i1 %R8726 to i32
  %cond = icmp ne i32 %R87264, 0
  br i1 %cond, label %L1577, label %L1578

L1577:                                            ; preds = %L1576
  %22 = bitcast %struct.Proto* %load_target2 to i32**
  %23 = bitcast i32** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 24
  %25 = bitcast i8* %24 to i32**
  %load_target5 = load i32*, i32** %25
  %R8730 = bitcast i32* %load_target5 to i8*
  %26 = bitcast %struct.Proto* %load_target2 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 80
  %29 = bitcast i8* %28 to i32*
  %load_target6 = load i32, i32* %29
  %R8733 = sext i32 %load_target6 to i64
  %R8734 = mul i64 %R8733, 4
  %R8737 = sext i32 %load_target3 to i64
  %R8738 = mul i64 %R8737, 4
  %R8739 = call i8* @luaM_realloc_(%struct.lua_State* %load_target, i8* %R8730, i64 %R8734, i64 %R8738)
  store i8* %R8739, i8** %0
  br label %L1579

L1578:                                            ; preds = %L1576
  %R8741 = call i8* @luaM_toobig(%struct.lua_State* %load_target)
  store i8* %R8741, i8** %0
  br label %L1579

L1579:                                            ; preds = %L1578, %L1577
  %30 = load i8*, i8** %0
  %R8744 = bitcast i8* %30 to i32*
  %31 = bitcast %struct.Proto* %load_target2 to i32**
  %32 = bitcast i32** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 24
  %34 = bitcast i8* %33 to i32**
  store i32* %R8744, i32** %34
  %35 = bitcast %struct.FuncState* %load_target1 to i32*
  %36 = bitcast i32* %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 48
  %38 = bitcast i8* %37 to i32*
  %load_target7 = load i32, i32* %38
  %39 = bitcast %struct.Proto* %load_target2 to i32*
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 80
  %42 = bitcast i8* %41 to i32*
  store i32 %load_target7, i32* %42
  %43 = bitcast %struct.FuncState* %load_target1 to i32*
  %44 = bitcast i32* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 48
  %46 = bitcast i8* %45 to i32*
  %load_target8 = load i32, i32* %46
  %R8751 = add i32 %load_target8, 1
  %R8752 = sext i32 %R8751 to i64
  %R8753 = icmp ule i64 %R8752, 4611686018427387903
  %R87539 = zext i1 %R8753 to i32
  %cond10 = icmp ne i32 %R87539, 0
  br i1 %cond10, label %L1580, label %L1581

L1580:                                            ; preds = %L1579
  %47 = bitcast %struct.Proto* %load_target2 to i32**
  %48 = bitcast i32** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 40
  %50 = bitcast i8* %49 to i32**
  %load_target11 = load i32*, i32** %50
  %R8757 = bitcast i32* %load_target11 to i8*
  %51 = bitcast %struct.Proto* %load_target2 to i32*
  %52 = bitcast i32* %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 84
  %54 = bitcast i8* %53 to i32*
  %load_target12 = load i32, i32* %54
  %R8760 = sext i32 %load_target12 to i64
  %R8761 = mul i64 %R8760, 4
  %R8764 = sext i32 %load_target8 to i64
  %R8765 = mul i64 %R8764, 4
  %R8766 = call i8* @luaM_realloc_(%struct.lua_State* %load_target, i8* %R8757, i64 %R8761, i64 %R8765)
  store i8* %R8766, i8** %1
  br label %L1582

L1581:                                            ; preds = %L1579
  %R8768 = call i8* @luaM_toobig(%struct.lua_State* %load_target)
  store i8* %R8768, i8** %1
  br label %L1582

L1582:                                            ; preds = %L1581, %L1580
  %55 = load i8*, i8** %1
  %R8771 = bitcast i8* %55 to i32*
  %56 = bitcast %struct.Proto* %load_target2 to i32**
  %57 = bitcast i32** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 40
  %59 = bitcast i8* %58 to i32**
  store i32* %R8771, i32** %59
  %60 = bitcast %struct.FuncState* %load_target1 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 48
  %63 = bitcast i8* %62 to i32*
  %load_target13 = load i32, i32* %63
  %64 = bitcast %struct.Proto* %load_target2 to i32*
  %65 = bitcast i32* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 84
  %67 = bitcast i8* %66 to i32*
  store i32 %load_target13, i32* %67
  %68 = bitcast %struct.FuncState* %load_target1 to i32*
  %69 = bitcast i32* %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 64
  %71 = bitcast i8* %70 to i32*
  %load_target14 = load i32, i32* %71
  %R8778 = add i32 %load_target14, 1
  %R8779 = sext i32 %R8778 to i64
  %R8780 = icmp ule i64 %R8779, 1152921504606846975
  %R878015 = zext i1 %R8780 to i32
  %cond16 = icmp ne i32 %R878015, 0
  br i1 %cond16, label %L1583, label %L1584

L1583:                                            ; preds = %L1582
  %72 = bitcast %struct.Proto* %load_target2 to %struct.lua_TValue**
  %73 = bitcast %struct.lua_TValue** %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 16
  %75 = bitcast i8* %74 to %struct.lua_TValue**
  %load_target17 = load %struct.lua_TValue*, %struct.lua_TValue** %75
  %R8784 = bitcast %struct.lua_TValue* %load_target17 to i8*
  %76 = bitcast %struct.Proto* %load_target2 to i32*
  %77 = bitcast i32* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 76
  %79 = bitcast i8* %78 to i32*
  %load_target18 = load i32, i32* %79
  %R8787 = sext i32 %load_target18 to i64
  %R8788 = mul i64 %R8787, 16
  %R8791 = sext i32 %load_target14 to i64
  %R8792 = mul i64 %R8791, 16
  %R8793 = call i8* @luaM_realloc_(%struct.lua_State* %load_target, i8* %R8784, i64 %R8788, i64 %R8792)
  store i8* %R8793, i8** %2
  br label %L1585

L1584:                                            ; preds = %L1582
  %R8795 = call i8* @luaM_toobig(%struct.lua_State* %load_target)
  store i8* %R8795, i8** %2
  br label %L1585

L1585:                                            ; preds = %L1584, %L1583
  %80 = load i8*, i8** %2
  %R8798 = bitcast i8* %80 to %struct.lua_TValue*
  %81 = bitcast %struct.Proto* %load_target2 to %struct.lua_TValue**
  %82 = bitcast %struct.lua_TValue** %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 16
  %84 = bitcast i8* %83 to %struct.lua_TValue**
  store %struct.lua_TValue* %R8798, %struct.lua_TValue** %84
  %85 = bitcast %struct.FuncState* %load_target1 to i32*
  %86 = bitcast i32* %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 64
  %88 = bitcast i8* %87 to i32*
  %load_target19 = load i32, i32* %88
  %89 = bitcast %struct.Proto* %load_target2 to i32*
  %90 = bitcast i32* %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 76
  %92 = bitcast i8* %91 to i32*
  store i32 %load_target19, i32* %92
  %93 = bitcast %struct.FuncState* %load_target1 to i32*
  %94 = bitcast i32* %93 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 68
  %96 = bitcast i8* %95 to i32*
  %load_target20 = load i32, i32* %96
  %R8805 = add i32 %load_target20, 1
  %R8806 = sext i32 %R8805 to i64
  %R8807 = icmp ule i64 %R8806, 2305843009213693951
  %R880721 = zext i1 %R8807 to i32
  %cond22 = icmp ne i32 %R880721, 0
  br i1 %cond22, label %L1586, label %L1587

L1586:                                            ; preds = %L1585
  %97 = bitcast %struct.Proto* %load_target2 to %struct.Proto***
  %98 = bitcast %struct.Proto*** %97 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 32
  %100 = bitcast i8* %99 to %struct.Proto***
  %load_target23 = load %struct.Proto**, %struct.Proto*** %100
  %R8811 = bitcast %struct.Proto** %load_target23 to i8*
  %101 = bitcast %struct.Proto* %load_target2 to i32*
  %102 = bitcast i32* %101 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 88
  %104 = bitcast i8* %103 to i32*
  %load_target24 = load i32, i32* %104
  %R8814 = sext i32 %load_target24 to i64
  %R8815 = mul i64 %R8814, 8
  %R8818 = sext i32 %load_target20 to i64
  %R8819 = mul i64 %R8818, 8
  %R8820 = call i8* @luaM_realloc_(%struct.lua_State* %load_target, i8* %R8811, i64 %R8815, i64 %R8819)
  store i8* %R8820, i8** %3
  br label %L1588

L1587:                                            ; preds = %L1585
  %R8822 = call i8* @luaM_toobig(%struct.lua_State* %load_target)
  store i8* %R8822, i8** %3
  br label %L1588

L1588:                                            ; preds = %L1587, %L1586
  %105 = load i8*, i8** %3
  %R8825 = bitcast i8* %105 to %struct.Proto**
  %106 = bitcast %struct.Proto* %load_target2 to %struct.Proto***
  %107 = bitcast %struct.Proto*** %106 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 32
  %109 = bitcast i8* %108 to %struct.Proto***
  store %struct.Proto** %R8825, %struct.Proto*** %109
  %110 = bitcast %struct.FuncState* %load_target1 to i32*
  %111 = bitcast i32* %110 to i8*
  %112 = getelementptr inbounds i8, i8* %111, i64 68
  %113 = bitcast i8* %112 to i32*
  %load_target25 = load i32, i32* %113
  %114 = bitcast %struct.Proto* %load_target2 to i32*
  %115 = bitcast i32* %114 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 88
  %117 = bitcast i8* %116 to i32*
  store i32 %load_target25, i32* %117
  %118 = bitcast %struct.FuncState* %load_target1 to i16*
  %119 = bitcast i16* %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 72
  %121 = bitcast i8* %120 to i16*
  %load_target26 = load i16, i16* %121
  %R8832 = sext i16 %load_target26 to i32
  %R8833 = add i32 %R8832, 1
  %R8834 = sext i32 %R8833 to i64
  %R8835 = icmp ule i64 %R8834, 1152921504606846975
  %R883527 = zext i1 %R8835 to i32
  %cond28 = icmp ne i32 %R883527, 0
  br i1 %cond28, label %L1589, label %L1590

L1589:                                            ; preds = %L1588
  %122 = bitcast %struct.Proto* %load_target2 to %struct.LocVar**
  %123 = bitcast %struct.LocVar** %122 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 48
  %125 = bitcast i8* %124 to %struct.LocVar**
  %load_target29 = load %struct.LocVar*, %struct.LocVar** %125
  %R8839 = bitcast %struct.LocVar* %load_target29 to i8*
  %126 = bitcast %struct.Proto* %load_target2 to i32*
  %127 = bitcast i32* %126 to i8*
  %128 = getelementptr inbounds i8, i8* %127, i64 92
  %129 = bitcast i8* %128 to i32*
  %load_target30 = load i32, i32* %129
  %R8842 = sext i32 %load_target30 to i64
  %R8843 = mul i64 %R8842, 16
  %R8846 = sext i16 %load_target26 to i64
  %R8847 = mul i64 %R8846, 16
  %R8848 = call i8* @luaM_realloc_(%struct.lua_State* %load_target, i8* %R8839, i64 %R8843, i64 %R8847)
  store i8* %R8848, i8** %4
  br label %L1591

L1590:                                            ; preds = %L1588
  %R8850 = call i8* @luaM_toobig(%struct.lua_State* %load_target)
  store i8* %R8850, i8** %4
  br label %L1591

L1591:                                            ; preds = %L1590, %L1589
  %130 = load i8*, i8** %4
  %R8853 = bitcast i8* %130 to %struct.LocVar*
  %131 = bitcast %struct.Proto* %load_target2 to %struct.LocVar**
  %132 = bitcast %struct.LocVar** %131 to i8*
  %133 = getelementptr inbounds i8, i8* %132, i64 48
  %134 = bitcast i8* %133 to %struct.LocVar**
  store %struct.LocVar* %R8853, %struct.LocVar** %134
  %135 = bitcast %struct.FuncState* %load_target1 to i16*
  %136 = bitcast i16* %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 72
  %138 = bitcast i8* %137 to i16*
  %load_target31 = load i16, i16* %138
  %R8857 = sext i16 %load_target31 to i32
  %139 = bitcast %struct.Proto* %load_target2 to i32*
  %140 = bitcast i32* %139 to i8*
  %141 = getelementptr inbounds i8, i8* %140, i64 92
  %142 = bitcast i8* %141 to i32*
  store i32 %R8857, i32* %142
  %143 = bitcast %struct.Proto* %load_target2 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 112
  %load_target32 = load i8, i8* %144
  %R8861 = zext i8 %load_target32 to i32
  %R8862 = add i32 %R8861, 1
  %R8863 = sext i32 %R8862 to i64
  %R8864 = icmp ule i64 %R8863, 2305843009213693951
  %R886433 = zext i1 %R8864 to i32
  %cond34 = icmp ne i32 %R886433, 0
  br i1 %cond34, label %L1592, label %L1593

L1592:                                            ; preds = %L1591
  %145 = bitcast %struct.Proto* %load_target2 to { [24 x i8] }***
  %146 = bitcast { [24 x i8] }*** %145 to i8*
  %147 = getelementptr inbounds i8, i8* %146, i64 56
  %148 = bitcast i8* %147 to { [24 x i8] }***
  %load_target35 = load { [24 x i8] }**, { [24 x i8] }*** %148
  %R8868 = bitcast { [24 x i8] }** %load_target35 to i8*
  %149 = bitcast %struct.Proto* %load_target2 to i32*
  %150 = bitcast i32* %149 to i8*
  %151 = getelementptr inbounds i8, i8* %150, i64 72
  %152 = bitcast i8* %151 to i32*
  %load_target36 = load i32, i32* %152
  %R8871 = sext i32 %load_target36 to i64
  %R8872 = mul i64 %R8871, 8
  %R8875 = zext i8 %load_target32 to i64
  %R8876 = mul i64 %R8875, 8
  %R8877 = call i8* @luaM_realloc_(%struct.lua_State* %load_target, i8* %R8868, i64 %R8872, i64 %R8876)
  store i8* %R8877, i8** %5
  br label %L1594

L1593:                                            ; preds = %L1591
  %R8879 = call i8* @luaM_toobig(%struct.lua_State* %load_target)
  store i8* %R8879, i8** %5
  br label %L1594

L1594:                                            ; preds = %L1593, %L1592
  %153 = load i8*, i8** %5
  %R8882 = bitcast i8* %153 to { [24 x i8] }**
  %154 = bitcast %struct.Proto* %load_target2 to { [24 x i8] }***
  %155 = bitcast { [24 x i8] }*** %154 to i8*
  %156 = getelementptr inbounds i8, i8* %155, i64 56
  %157 = bitcast i8* %156 to { [24 x i8] }***
  store { [24 x i8] }** %R8882, { [24 x i8] }*** %157
  %158 = bitcast %struct.Proto* %load_target2 to i8*
  %159 = getelementptr inbounds i8, i8* %158, i64 112
  %load_target37 = load i8, i8* %159
  %R8886 = zext i8 %load_target37 to i32
  %160 = bitcast %struct.Proto* %load_target2 to i32*
  %161 = bitcast i32* %160 to i8*
  %162 = getelementptr inbounds i8, i8* %161, i64 72
  %163 = bitcast i8* %162 to i32*
  store i32 %R8886, i32* %163
  %164 = bitcast %struct.FuncState* %load_target1 to %struct.FuncState**
  %165 = bitcast %struct.FuncState** %164 to i8*
  %166 = getelementptr inbounds i8, i8* %165, i64 16
  %167 = bitcast i8* %166 to %struct.FuncState**
  %load_target38 = load %struct.FuncState*, %struct.FuncState** %167
  %168 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %169 = bitcast %struct.FuncState** %168 to i8*
  %170 = getelementptr inbounds i8, i8* %169, i64 48
  %171 = bitcast i8* %170 to %struct.FuncState**
  store %struct.FuncState* %load_target38, %struct.FuncState** %171
  %cond39 = icmp ne %struct.FuncState* %load_target1, null
  br i1 %cond39, label %L1595, label %L1596

L1595:                                            ; preds = %L1594
  call void @anchor_token(%struct.LexState* %ARG1)
  br label %L1596

L1596:                                            ; preds = %L1595, %L1594
  %172 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %173 = bitcast %struct.lua_TValue** %172 to i8*
  %174 = getelementptr inbounds i8, i8* %173, i64 16
  %175 = bitcast i8* %174 to %struct.lua_TValue**
  %load_target40 = load %struct.lua_TValue*, %struct.lua_TValue** %175
  %R8895 = ptrtoint %struct.lua_TValue* %load_target40 to i64
  %R8896 = add i64 %R8895, -32
  %R8897 = inttoptr i64 %R8896 to %struct.lua_TValue*
  %176 = bitcast %struct.lua_State* %load_target to %struct.lua_TValue**
  %177 = bitcast %struct.lua_TValue** %176 to i8*
  %178 = getelementptr inbounds i8, i8* %177, i64 16
  %179 = bitcast i8* %178 to %struct.lua_TValue**
  store %struct.lua_TValue* %R8897, %struct.lua_TValue** %179
  ret void
}

define internal %struct.Proto* @luaY_parser.92(%struct.lua_State* %ARG1, %struct.Zio* %ARG2, %struct.Mbuffer* %ARG3, i8* %ARG4) {
L1597:
  %funcstate_0x62d000ba95a8 = alloca %struct.FuncState
  %lexstate_0x62d000ba94c0 = alloca %struct.LexState
  %0 = bitcast %struct.LexState* %lexstate_0x62d000ba94c0 to %struct.Mbuffer**
  %1 = bitcast %struct.Mbuffer** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 72
  %3 = bitcast i8* %2 to %struct.Mbuffer**
  store %struct.Mbuffer* %ARG3, %struct.Mbuffer** %3
  %R8905 = call i64 @strlen(i8* %ARG4)
  %R8906 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %ARG4, i64 %R8905)
  call void @luaX_setinput(%struct.lua_State* %ARG1, %struct.LexState* %lexstate_0x62d000ba94c0, %struct.Zio* %ARG2, { [24 x i8] }* %R8906)
  call void @open_func(%struct.LexState* %lexstate_0x62d000ba94c0, %struct.FuncState* %funcstate_0x62d000ba95a8)
  %4 = bitcast %struct.FuncState* %funcstate_0x62d000ba95a8 to %struct.Proto**
  %5 = bitcast %struct.Proto** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %7
  %8 = bitcast %struct.Proto* %load_target to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 114
  store i8 2, i8* %9
  call void @luaX_next(%struct.LexState* %lexstate_0x62d000ba94c0)
  call void @chunk(%struct.LexState* %lexstate_0x62d000ba94c0)
  call void @check(%struct.LexState* %lexstate_0x62d000ba94c0, i32 287)
  call void @close_func(%struct.LexState* %lexstate_0x62d000ba94c0)
  %10 = bitcast %struct.FuncState* %funcstate_0x62d000ba95a8 to %struct.Proto**
  %11 = bitcast %struct.Proto** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to %struct.Proto**
  %load_target1 = load %struct.Proto*, %struct.Proto** %13
  ret %struct.Proto* %load_target1
}

declare void @chunk(%struct.LexState*)

define internal void @field(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1598:
  %key_0x62d000ba9eb8 = alloca %struct.expdesc
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %R8920 = call i32 @luaK_exp2anyreg(%struct.FuncState* %load_target, %struct.expdesc* %ARG2)
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @checkname(%struct.LexState* %ARG1, %struct.expdesc* %key_0x62d000ba9eb8)
  call void @luaK_indexed(%struct.FuncState* %load_target, %struct.expdesc* %ARG2, %struct.expdesc* %key_0x62d000ba9eb8)
  ret void
}

define internal void @yindex(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1599:
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @expr(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  call void @luaK_exp2val(%struct.FuncState* %load_target, %struct.expdesc* %ARG2)
  call void @checknext(%struct.LexState* %ARG1, i32 93)
  ret void
}

declare void @expr(%struct.LexState*, %struct.expdesc*)

define internal void @recfield(%struct.LexState* %ARG1, %struct.ConsControl* %ARG2) {
L1600:
  %val_0x62d000bab730 = alloca %struct.expdesc
  %key_0x62d000bab648 = alloca %struct.expdesc
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %4 = bitcast %struct.FuncState* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 60
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %8 = bitcast %struct.LexState* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to i32*
  %load_target2 = load i32, i32* %11
  %R8941 = icmp eq i32 %load_target2, 285
  %R89413 = zext i1 %R8941 to i32
  %cond = icmp ne i32 %R89413, 0
  br i1 %cond, label %L1601, label %L1604

L1601:                                            ; preds = %L1600
  %12 = bitcast %struct.ConsControl* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to i32*
  %load_target4 = load i32, i32* %15
  %R8944 = icmp sgt i32 %load_target4, 2147483645
  %R89445 = zext i1 %R8944 to i32
  %cond6 = icmp ne i32 %R89445, 0
  br i1 %cond6, label %L1602, label %L1603

L1602:                                            ; preds = %L1601
  call void @errorlimit(%struct.FuncState* %load_target, i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0))
  br label %L1603

L1603:                                            ; preds = %L1602, %L1601
  call void @checkname(%struct.LexState* %ARG1, %struct.expdesc* %key_0x62d000bab648)
  br label %L1605

L1604:                                            ; preds = %L1600
  call void @yindex(%struct.LexState* %ARG1, %struct.expdesc* %key_0x62d000bab648)
  br label %L1605

L1605:                                            ; preds = %L1604, %L1603
  %16 = bitcast %struct.ConsControl* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 32
  %19 = bitcast i8* %18 to i32*
  %load_target7 = load i32, i32* %19
  %R8953 = add i32 %load_target7, 1
  %20 = bitcast %struct.ConsControl* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 32
  %23 = bitcast i8* %22 to i32*
  store i32 %R8953, i32* %23
  call void @checknext(%struct.LexState* %ARG1, i32 61)
  %R8957 = call i32 @luaK_exp2RK(%struct.FuncState* %load_target, %struct.expdesc* %key_0x62d000bab648)
  call void @expr(%struct.LexState* %ARG1, %struct.expdesc* %val_0x62d000bab730)
  %24 = bitcast %struct.ConsControl* %ARG2 to %struct.expdesc**
  %25 = bitcast %struct.expdesc** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 24
  %27 = bitcast i8* %26 to %struct.expdesc**
  %load_target8 = load %struct.expdesc*, %struct.expdesc** %27
  %28 = bitcast %struct.expdesc* %load_target8 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %load_target9 = load i32, i32* %31
  %R8967 = call i32 @luaK_exp2RK(%struct.FuncState* %load_target, %struct.expdesc* %val_0x62d000bab730)
  %R8968 = call i32 @luaK_codeABC(%struct.FuncState* %load_target, i32 9, i32 %load_target9, i32 %R8957, i32 %R8967)
  %32 = bitcast %struct.FuncState* %load_target to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 60
  %35 = bitcast i8* %34 to i32*
  store i32 %load_target1, i32* %35
  ret void
}

define internal void @closelistfield(%struct.FuncState* %ARG1, %struct.ConsControl* %ARG2) {
L1606:
  %0 = bitcast %struct.ConsControl* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L1607, label %L1609

L1607:                                            ; preds = %L1606
  call void @luaK_exp2nextreg(%struct.FuncState* %ARG1, %struct.ConsControl* %ARG2)
  %4 = bitcast %struct.ConsControl* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7
  %8 = bitcast %struct.ConsControl* %ARG2 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to i32*
  %load_target1 = load i32, i32* %11
  %R8981 = icmp eq i32 %load_target1, 50
  %R89812 = zext i1 %R8981 to i32
  %cond3 = icmp ne i32 %R89812, 0
  br i1 %cond3, label %L1608, label %L1609

L1608:                                            ; preds = %L1607
  %12 = bitcast %struct.ConsControl* %ARG2 to %struct.expdesc**
  %13 = bitcast %struct.expdesc** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to %struct.expdesc**
  %load_target4 = load %struct.expdesc*, %struct.expdesc** %15
  %16 = bitcast %struct.expdesc* %load_target4 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  %load_target5 = load i32, i32* %19
  %20 = bitcast %struct.ConsControl* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 36
  %23 = bitcast i8* %22 to i32*
  %load_target6 = load i32, i32* %23
  call void @luaK_setlist(%struct.FuncState* %ARG1, i32 %load_target5, i32 %load_target6, i32 %load_target1)
  %24 = bitcast %struct.ConsControl* %ARG2 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 40
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27
  br label %L1609

L1609:                                            ; preds = %L1608, %L1607, %L1606
  ret void
}

define internal void @lastlistfield(%struct.FuncState* %ARG1, %struct.ConsControl* %ARG2) {
L1610:
  %0 = bitcast %struct.ConsControl* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 40
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L1611, label %L1617

L1611:                                            ; preds = %L1610
  %4 = bitcast %struct.ConsControl* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R8997 = icmp eq i32 %load_target1, 13
  %R89972 = zext i1 %R8997 to i32
  %cond3 = icmp ne i32 %R89972, 0
  br i1 %cond3, label %L1613, label %L1612

L1612:                                            ; preds = %L1611
  %R9001 = icmp eq i32 %load_target1, 14
  %R90014 = zext i1 %R9001 to i32
  %cond5 = icmp ne i32 %R90014, 0
  br i1 %cond5, label %L1613, label %L1614

L1613:                                            ; preds = %L1612, %L1611
  call void @luaK_setreturns(%struct.FuncState* %ARG1, %struct.ConsControl* %ARG2, i32 -1)
  %8 = bitcast %struct.ConsControl* %ARG2 to %struct.expdesc**
  %9 = bitcast %struct.expdesc** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to %struct.expdesc**
  %load_target6 = load %struct.expdesc*, %struct.expdesc** %11
  %12 = bitcast %struct.expdesc* %load_target6 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target7 = load i32, i32* %15
  %16 = bitcast %struct.ConsControl* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 36
  %19 = bitcast i8* %18 to i32*
  %load_target8 = load i32, i32* %19
  call void @luaK_setlist(%struct.FuncState* %ARG1, i32 %load_target7, i32 %load_target8, i32 -1)
  %20 = bitcast %struct.ConsControl* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 36
  %23 = bitcast i8* %22 to i32*
  %load_target9 = load i32, i32* %23
  %R9013 = add i32 %load_target9, -1
  %24 = bitcast %struct.ConsControl* %ARG2 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 36
  %27 = bitcast i8* %26 to i32*
  store i32 %R9013, i32* %27
  br label %L1617

L1614:                                            ; preds = %L1612
  %cond10 = icmp ne i32 %load_target1, 0
  br i1 %cond10, label %L1615, label %L1616

L1615:                                            ; preds = %L1614
  call void @luaK_exp2nextreg(%struct.FuncState* %ARG1, %struct.ConsControl* %ARG2)
  br label %L1616

L1616:                                            ; preds = %L1615, %L1614
  %28 = bitcast %struct.ConsControl* %ARG2 to %struct.expdesc**
  %29 = bitcast %struct.expdesc** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 24
  %31 = bitcast i8* %30 to %struct.expdesc**
  %load_target11 = load %struct.expdesc*, %struct.expdesc** %31
  %32 = bitcast %struct.expdesc* %load_target11 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i32*
  %load_target12 = load i32, i32* %35
  %36 = bitcast %struct.ConsControl* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 36
  %39 = bitcast i8* %38 to i32*
  %load_target13 = load i32, i32* %39
  %40 = bitcast %struct.ConsControl* %ARG2 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 40
  %43 = bitcast i8* %42 to i32*
  %load_target14 = load i32, i32* %43
  call void @luaK_setlist(%struct.FuncState* %ARG1, i32 %load_target12, i32 %load_target13, i32 %load_target14)
  br label %L1617

L1617:                                            ; preds = %L1616, %L1613, %L1610
  ret void
}

define internal void @listfield(%struct.LexState* %ARG1, %struct.ConsControl* %ARG2) {
L1618:
  call void @expr(%struct.LexState* %ARG1, %struct.ConsControl* %ARG2)
  %0 = bitcast %struct.ConsControl* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 36
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R9034 = icmp sgt i32 %load_target, 2147483645
  %R90341 = zext i1 %R9034 to i32
  %cond = icmp ne i32 %R90341, 0
  br i1 %cond, label %L1619, label %L1620

L1619:                                            ; preds = %L1618
  %4 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %5 = bitcast %struct.FuncState** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 48
  %7 = bitcast i8* %6 to %struct.FuncState**
  %load_target2 = load %struct.FuncState*, %struct.FuncState** %7
  call void @errorlimit(%struct.FuncState* %load_target2, i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.94, i64 0, i64 0))
  br label %L1620

L1620:                                            ; preds = %L1619, %L1618
  %8 = bitcast %struct.ConsControl* %ARG2 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 36
  %11 = bitcast i8* %10 to i32*
  %load_target3 = load i32, i32* %11
  %R9040 = add i32 %load_target3, 1
  %12 = bitcast %struct.ConsControl* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 36
  %15 = bitcast i8* %14 to i32*
  store i32 %R9040, i32* %15
  %16 = bitcast %struct.ConsControl* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 40
  %19 = bitcast i8* %18 to i32*
  %load_target4 = load i32, i32* %19
  %R9043 = add i32 %load_target4, 1
  %20 = bitcast %struct.ConsControl* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 40
  %23 = bitcast i8* %22 to i32*
  store i32 %R9043, i32* %23
  ret void
}

define internal void @constructor(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1621:
  %cc_0x62d000bc3638 = alloca %struct.ConsControl
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %4 = bitcast %struct.LexState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 4
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R9049 = call i32 @luaK_codeABC(%struct.FuncState* %load_target, i32 10, i32 0, i32 0, i32 0)
  %8 = bitcast %struct.ConsControl* %cc_0x62d000bc3638 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11
  %12 = bitcast %struct.ConsControl* %cc_0x62d000bc3638 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15
  %16 = bitcast %struct.ConsControl* %cc_0x62d000bc3638 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 36
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19
  %20 = bitcast %struct.ConsControl* %cc_0x62d000bc3638 to %struct.expdesc**
  %21 = bitcast %struct.expdesc** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 24
  %23 = bitcast i8* %22 to %struct.expdesc**
  store %struct.expdesc* %ARG2, %struct.expdesc** %23
  call void @init_exp(%struct.expdesc* %ARG2, i32 11, i32 %R9049)
  %R9053 = bitcast %struct.ConsControl* %cc_0x62d000bc3638 to i8*
  call void @init_exp(i8* %R9053, i32 0, i32 0)
  %24 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %25 = bitcast %struct.FuncState** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 48
  %27 = bitcast i8* %26 to %struct.FuncState**
  %load_target2 = load %struct.FuncState*, %struct.FuncState** %27
  call void @luaK_exp2nextreg(%struct.FuncState* %load_target2, %struct.expdesc* %ARG2)
  call void @checknext(%struct.LexState* %ARG1, i32 123)
  br label %L1622

L1622:                                            ; preds = %L1630, %L1629, %L1621
  %28 = bitcast %struct.LexState* %ARG1 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to i32*
  %load_target3 = load i32, i32* %31
  %R9061 = icmp eq i32 %load_target3, 125
  %R90614 = zext i1 %R9061 to i32
  %cond = icmp ne i32 %R90614, 0
  br i1 %cond, label %L1631, label %L1623

L1623:                                            ; preds = %L1622
  call void @closelistfield(%struct.FuncState* %load_target, i8* %R9053)
  %32 = bitcast %struct.LexState* %ARG1 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 16
  %35 = bitcast i8* %34 to i32*
  %load_target5 = load i32, i32* %35
  switch i32 %load_target5, label %L1628 [
    i32 91, label %L1627
    i32 285, label %L1624
  ]

L1624:                                            ; preds = %L1623
  call void @luaX_lookahead(%struct.LexState* %ARG1)
  %36 = bitcast %struct.LexState* %ARG1 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 32
  %39 = bitcast i8* %38 to i32*
  %load_target6 = load i32, i32* %39
  %R9069 = icmp ne i32 %load_target6, 61
  %R90697 = zext i1 %R9069 to i32
  %cond8 = icmp ne i32 %R90697, 0
  br i1 %cond8, label %L1625, label %L1626

L1625:                                            ; preds = %L1624
  call void @listfield(%struct.LexState* %ARG1, i8* %R9053)
  br label %L1629

L1626:                                            ; preds = %L1624
  call void @recfield(%struct.LexState* %ARG1, i8* %R9053)
  br label %L1629

L1627:                                            ; preds = %L1623
  call void @recfield(%struct.LexState* %ARG1, i8* %R9053)
  br label %L1629

L1628:                                            ; preds = %L1623
  call void @listfield(%struct.LexState* %ARG1, i8* %R9053)
  br label %L1629

L1629:                                            ; preds = %L1628, %L1627, %L1626, %L1625
  %R9079 = call i32 @testnext(%struct.LexState* %ARG1, i32 44)
  %cond9 = icmp ne i32 %R9079, 0
  br i1 %cond9, label %L1622, label %L1630

L1630:                                            ; preds = %L1629
  %R9081 = call i32 @testnext(%struct.LexState* %ARG1, i32 59)
  %cond10 = icmp ne i32 %R9081, 0
  br i1 %cond10, label %L1622, label %L1631

L1631:                                            ; preds = %L1630, %L1622
  call void @check_match(%struct.LexState* %ARG1, i32 125, i32 123, i32 %load_target1)
  call void @lastlistfield(%struct.FuncState* %load_target, i8* %R9053)
  %40 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %41 = bitcast %struct.Proto** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to %struct.Proto**
  %load_target11 = load %struct.Proto*, %struct.Proto** %43
  %44 = bitcast %struct.Proto* %load_target11 to i32**
  %45 = bitcast i32** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 24
  %47 = bitcast i8* %46 to i32**
  %load_target12 = load i32*, i32** %47
  %R9090 = sext i32 %R9049 to i64
  %R9091 = mul i64 %R9090, 4
  %48 = bitcast i32* %load_target12 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %R9091
  %50 = bitcast i8* %49 to i32*
  %51 = bitcast i32* %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = bitcast i8* %52 to i32*
  %load_target13 = load i32, i32* %53
  %R9094 = and i32 %load_target13, 8388607
  %54 = bitcast %struct.ConsControl* %cc_0x62d000bc3638 to i32*
  %55 = bitcast i32* %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 36
  %57 = bitcast i8* %56 to i32*
  %load_target14 = load i32, i32* %57
  %R9097 = call i32 @luaO_int2fb(i32 %load_target14)
  %R9099 = shl i32 %R9097, 23
  %R9100 = and i32 %R9099, -8388608
  %R9101 = or i32 %R9094, %R9100
  %58 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %59 = bitcast %struct.Proto** %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 0
  %61 = bitcast i8* %60 to %struct.Proto**
  %load_target15 = load %struct.Proto*, %struct.Proto** %61
  %62 = bitcast %struct.Proto* %load_target15 to i32**
  %63 = bitcast i32** %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 24
  %65 = bitcast i8* %64 to i32**
  %load_target16 = load i32*, i32** %65
  %66 = bitcast i32* %load_target16 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 %R9091
  %68 = bitcast i8* %67 to i32*
  %69 = bitcast i32* %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 0
  %71 = bitcast i8* %70 to i32*
  store i32 %R9101, i32* %71
  %72 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %73 = bitcast %struct.Proto** %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 0
  %75 = bitcast i8* %74 to %struct.Proto**
  %load_target17 = load %struct.Proto*, %struct.Proto** %75
  %76 = bitcast %struct.Proto* %load_target17 to i32**
  %77 = bitcast i32** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 24
  %79 = bitcast i8* %78 to i32**
  %load_target18 = load i32*, i32** %79
  %80 = bitcast i32* %load_target18 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 %R9091
  %82 = bitcast i8* %81 to i32*
  %83 = bitcast i32* %82 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 0
  %85 = bitcast i8* %84 to i32*
  %load_target19 = load i32, i32* %85
  %R9117 = and i32 %load_target19, -8372225
  %86 = bitcast %struct.ConsControl* %cc_0x62d000bc3638 to i32*
  %87 = bitcast i32* %86 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 32
  %89 = bitcast i8* %88 to i32*
  %load_target20 = load i32, i32* %89
  %R9120 = call i32 @luaO_int2fb(i32 %load_target20)
  %R9122 = shl i32 %R9120, 14
  %R9123 = and i32 %R9122, 8372224
  %R9124 = or i32 %R9117, %R9123
  %90 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %91 = bitcast %struct.Proto** %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 0
  %93 = bitcast i8* %92 to %struct.Proto**
  %load_target21 = load %struct.Proto*, %struct.Proto** %93
  %94 = bitcast %struct.Proto* %load_target21 to i32**
  %95 = bitcast i32** %94 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 24
  %97 = bitcast i8* %96 to i32**
  %load_target22 = load i32*, i32** %97
  %98 = bitcast i32* %load_target22 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 %R9091
  %100 = bitcast i8* %99 to i32*
  %101 = bitcast i32* %100 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 0
  %103 = bitcast i8* %102 to i32*
  store i32 %R9124, i32* %103
  ret void
}

define internal void @parlist(%struct.LexState* %ARG1) {
L1632:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %3 = bitcast %struct.FuncState** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 48
  %5 = bitcast i8* %4 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %5
  %6 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %7 = bitcast %struct.Proto** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to %struct.Proto**
  %load_target1 = load %struct.Proto*, %struct.Proto** %9
  %10 = bitcast %struct.Proto* %load_target1 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 114
  store i8 0, i8* %11
  %12 = bitcast %struct.LexState* %ARG1 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to i32*
  %load_target2 = load i32, i32* %15
  %R9139 = icmp ne i32 %load_target2, 41
  %R91393 = zext i1 %R9139 to i32
  store i32 0, i32* %1
  store i32 0, i32* %0
  %cond = icmp ne i32 %R91393, 0
  br i1 %cond, label %L1633, label %L1639

L1633:                                            ; preds = %L1638, %L1632
  %16 = bitcast %struct.LexState* %ARG1 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to i32*
  %load_target4 = load i32, i32* %19
  switch i32 %load_target4, label %L1636 [
    i32 279, label %L1635
    i32 285, label %L1634
  ]

L1634:                                            ; preds = %L1633
  %R9144 = call { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1)
  %20 = load i32, i32* %0
  %R9146 = add i32 %20, 1
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9144, i32 %20)
  store i32 %R9146, i32* %1
  store i32 %R9146, i32* %0
  br label %L1637

L1635:                                            ; preds = %L1633
  call void @luaX_next(%struct.LexState* %ARG1)
  %21 = bitcast %struct.Proto* %load_target1 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 114
  %load_target5 = load i8, i8* %22
  %R9150 = zext i8 %load_target5 to i32
  %R9151 = or i32 %R9150, 2
  %R9152 = trunc i32 %R9151 to i8
  %23 = bitcast %struct.Proto* %load_target1 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 114
  store i8 %R9152, i8* %24
  br label %L1637

L1636:                                            ; preds = %L1633
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.95, i64 0, i64 0))
  br label %L1637

L1637:                                            ; preds = %L1636, %L1635, %L1634
  %25 = bitcast %struct.Proto* %load_target1 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 114
  %load_target6 = load i8, i8* %26
  %cond7 = icmp ne i8 %load_target6, 0
  br i1 %cond7, label %L1639, label %L1638

L1638:                                            ; preds = %L1637
  %R9158 = call i32 @testnext(%struct.LexState* %ARG1, i32 44)
  %cond8 = icmp ne i32 %R9158, 0
  br i1 %cond8, label %L1633, label %L1639

L1639:                                            ; preds = %L1638, %L1637, %L1632
  %27 = load i32, i32* %1
  call void @adjustlocalvars(%struct.LexState* %ARG1, i32 %27)
  %28 = bitcast %struct.FuncState* %load_target to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 74
  %load_target9 = load i8, i8* %29
  %R9163 = zext i8 %load_target9 to i32
  %30 = bitcast %struct.Proto* %load_target1 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 114
  %load_target10 = load i8, i8* %31
  %R9166 = zext i8 %load_target10 to i32
  %R9167 = and i32 %R9166, 1
  %R9168 = sub i32 %R9163, %R9167
  %R9169 = trunc i32 %R9168 to i8
  %32 = bitcast %struct.Proto* %load_target1 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 113
  store i8 %R9169, i8* %33
  %34 = bitcast %struct.FuncState* %load_target to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 74
  %load_target11 = load i8, i8* %35
  %R9174 = zext i8 %load_target11 to i32
  call void @luaK_reserveregs(%struct.FuncState* %load_target, i32 %R9174)
  ret void
}

define internal void @body(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, i32 %ARG3, i32 %ARG4) {
L1640:
  %new_fs_0x62d000bc5b60 = alloca %struct.FuncState
  call void @open_func(%struct.LexState* %ARG1, %struct.FuncState* %new_fs_0x62d000bc5b60)
  %0 = bitcast %struct.FuncState* %new_fs_0x62d000bc5b60 to %struct.Proto**
  %1 = bitcast %struct.Proto** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct.Proto**
  %load_target = load %struct.Proto*, %struct.Proto** %3
  %4 = bitcast %struct.Proto* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 96
  %7 = bitcast i8* %6 to i32*
  store i32 %ARG4, i32* %7
  call void @checknext(%struct.LexState* %ARG1, i32 40)
  %cond = icmp ne i32 %ARG3, 0
  br i1 %cond, label %L1641, label %L1642

L1641:                                            ; preds = %L1640
  %R9184 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.96, i64 0, i64 0), i64 4)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9184, i32 0)
  call void @adjustlocalvars(%struct.LexState* %ARG1, i32 1)
  br label %L1642

L1642:                                            ; preds = %L1641, %L1640
  call void @parlist(%struct.LexState* %ARG1)
  call void @checknext(%struct.LexState* %ARG1, i32 41)
  call void @chunk(%struct.LexState* %ARG1)
  %8 = bitcast %struct.LexState* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4
  %11 = bitcast i8* %10 to i32*
  %load_target1 = load i32, i32* %11
  %12 = bitcast %struct.FuncState* %new_fs_0x62d000bc5b60 to %struct.Proto**
  %13 = bitcast %struct.Proto** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to %struct.Proto**
  %load_target2 = load %struct.Proto*, %struct.Proto** %15
  %16 = bitcast %struct.Proto* %load_target2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 100
  %19 = bitcast i8* %18 to i32*
  store i32 %load_target1, i32* %19
  call void @check_match(%struct.LexState* %ARG1, i32 262, i32 265, i32 %ARG4)
  call void @close_func(%struct.LexState* %ARG1)
  call void @pushclosure(%struct.LexState* %ARG1, %struct.FuncState* %new_fs_0x62d000bc5b60, %struct.expdesc* %ARG2)
  ret void
}

define internal i32 @explist1(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1643:
  %0 = alloca i32
  call void @expr(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  store i32 1, i32* %0
  br label %L1644

L1644:                                            ; preds = %L1645, %L1643
  %R9201 = call i32 @testnext(%struct.LexState* %ARG1, i32 44)
  %1 = load i32, i32* %0
  %cond = icmp ne i32 %R9201, 0
  br i1 %cond, label %L1645, label %L1646

L1645:                                            ; preds = %L1644
  %2 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %3 = bitcast %struct.FuncState** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 48
  %5 = bitcast i8* %4 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %5
  call void @luaK_exp2nextreg(%struct.FuncState* %load_target, %struct.expdesc* %ARG2)
  call void @expr(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  %R9208 = add i32 %1, 1
  store i32 %R9208, i32* %0
  br label %L1644

L1646:                                            ; preds = %L1644
  ret i32 %1
}

define internal void @funcargs(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1647:
  %args_0x62d000bc6e68 = alloca %struct.expdesc
  %0 = alloca i32
  %1 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %2 = bitcast %struct.FuncState** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 48
  %4 = bitcast i8* %3 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %4
  %5 = bitcast %struct.LexState* %ARG1 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 4
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %9 = bitcast %struct.LexState* %ARG1 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to i32*
  %load_target2 = load i32, i32* %12
  switch i32 %load_target2, label %L1656 [
    i32 40, label %L1648
    i32 123, label %L1654
    i32 286, label %L1655
  ]

L1648:                                            ; preds = %L1647
  %13 = bitcast %struct.LexState* %ARG1 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  %load_target3 = load i32, i32* %16
  %R9220 = icmp ne i32 %load_target1, %load_target3
  %R92204 = zext i1 %R9220 to i32
  %cond = icmp ne i32 %R92204, 0
  br i1 %cond, label %L1649, label %L1650

L1649:                                            ; preds = %L1648
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.97, i64 0, i64 0))
  br label %L1650

L1650:                                            ; preds = %L1649, %L1648
  call void @luaX_next(%struct.LexState* %ARG1)
  %17 = bitcast %struct.LexState* %ARG1 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to i32*
  %load_target5 = load i32, i32* %20
  %R9226 = icmp eq i32 %load_target5, 41
  %R92266 = zext i1 %R9226 to i32
  %cond7 = icmp ne i32 %R92266, 0
  br i1 %cond7, label %L1651, label %L1652

L1651:                                            ; preds = %L1650
  %21 = bitcast %struct.expdesc* %args_0x62d000bc6e68 to i32*
  %22 = bitcast i32* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24
  br label %L1653

L1652:                                            ; preds = %L1650
  %R9229 = call i32 @explist1(%struct.LexState* %ARG1, %struct.expdesc* %args_0x62d000bc6e68)
  call void @luaK_setreturns(%struct.FuncState* %load_target, %struct.expdesc* %args_0x62d000bc6e68, i32 -1)
  br label %L1653

L1653:                                            ; preds = %L1652, %L1651
  call void @check_match(%struct.LexState* %ARG1, i32 41, i32 40, i32 %load_target1)
  br label %L1657

L1654:                                            ; preds = %L1647
  call void @constructor(%struct.LexState* %ARG1, %struct.expdesc* %args_0x62d000bc6e68)
  br label %L1657

L1655:                                            ; preds = %L1647
  %25 = bitcast %struct.LexState* %ARG1 to { [24 x i8] }**
  %26 = bitcast { [24 x i8] }** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 24
  %28 = bitcast i8* %27 to { [24 x i8] }**
  %load_target8 = load { [24 x i8] }*, { [24 x i8] }** %28
  call void @codestring(%struct.LexState* %ARG1, %struct.expdesc* %args_0x62d000bc6e68, { [24 x i8] }* %load_target8)
  call void @luaX_next(%struct.LexState* %ARG1)
  br label %L1657

L1656:                                            ; preds = %L1647
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.98, i64 0, i64 0))
  br label %L1663

L1657:                                            ; preds = %L1655, %L1654, %L1653
  %29 = bitcast %struct.expdesc* %ARG2 to i32*
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i32*
  %load_target9 = load i32, i32* %32
  %33 = bitcast %struct.expdesc* %args_0x62d000bc6e68 to i32*
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to i32*
  %load_target10 = load i32, i32* %36
  %R9247 = icmp eq i32 %load_target10, 13
  %R924711 = zext i1 %R9247 to i32
  %R9250 = icmp eq i32 %load_target10, 14
  %R925012 = zext i1 %R9250 to i32
  %37 = icmp ne i32 %R924711, 0
  %38 = icmp ne i32 %R925012, 0
  %R9251 = or i1 %37, %38
  %R925113 = zext i1 %R9251 to i32
  %cond14 = icmp ne i32 %R925113, 0
  br i1 %cond14, label %L1658, label %L1659

L1658:                                            ; preds = %L1657
  store i32 -1, i32* %0
  br label %L1662

L1659:                                            ; preds = %L1657
  %cond15 = icmp ne i32 %load_target10, 0
  br i1 %cond15, label %L1660, label %L1661

L1660:                                            ; preds = %L1659
  call void @luaK_exp2nextreg(%struct.FuncState* %load_target, %struct.expdesc* %args_0x62d000bc6e68)
  br label %L1661

L1661:                                            ; preds = %L1660, %L1659
  %39 = bitcast %struct.FuncState* %load_target to i32*
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 60
  %42 = bitcast i8* %41 to i32*
  %load_target16 = load i32, i32* %42
  %R9260 = add i32 %load_target9, 1
  %R9261 = sub i32 %load_target16, %R9260
  store i32 %R9261, i32* %0
  br label %L1662

L1662:                                            ; preds = %L1661, %L1658
  %43 = load i32, i32* %0
  %R9266 = add i32 %43, 1
  %R9267 = call i32 @luaK_codeABC(%struct.FuncState* %load_target, i32 28, i32 %load_target9, i32 %R9266, i32 2)
  call void @init_exp(%struct.expdesc* %ARG2, i32 13, i32 %R9267)
  call void @luaK_fixline(%struct.FuncState* %load_target, i32 %load_target1)
  %R9271 = add i32 %load_target9, 1
  %44 = bitcast %struct.FuncState* %load_target to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 60
  %47 = bitcast i8* %46 to i32*
  store i32 %R9271, i32* %47
  br label %L1663

L1663:                                            ; preds = %L1662, %L1656
  ret void
}

define internal void @prefixexp(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1664:
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L1667 [
    i32 40, label %L1665
    i32 285, label %L1666
  ]

L1665:                                            ; preds = %L1664
  %4 = bitcast %struct.LexState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 4
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @expr(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  call void @check_match(%struct.LexState* %ARG1, i32 41, i32 40, i32 %load_target1)
  %8 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %9 = bitcast %struct.FuncState** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 48
  %11 = bitcast i8* %10 to %struct.FuncState**
  %load_target2 = load %struct.FuncState*, %struct.FuncState** %11
  call void @luaK_dischargevars(%struct.FuncState* %load_target2, %struct.expdesc* %ARG2)
  br label %L1668

L1666:                                            ; preds = %L1664
  call void @singlevar(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1668

L1667:                                            ; preds = %L1664
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i64 0, i64 0))
  br label %L1668

L1668:                                            ; preds = %L1667, %L1666, %L1665
  ret void
}

define internal void @primaryexp(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1669:
  %key_0x62d000bc92a8 = alloca %struct.expdesc
  %key_0x62d000bc90d8 = alloca %struct.expdesc
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  call void @prefixexp(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1670

L1670:                                            ; preds = %L1674, %L1673, %L1672, %L1671, %L1669
  %4 = bitcast %struct.LexState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  switch i32 %load_target1, label %L1675 [
    i32 40, label %L1674
    i32 46, label %L1671
    i32 58, label %L1673
    i32 91, label %L1672
    i32 123, label %L1674
    i32 286, label %L1674
  ]

L1671:                                            ; preds = %L1670
  call void @field(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1670

L1672:                                            ; preds = %L1670
  %R9299 = call i32 @luaK_exp2anyreg(%struct.FuncState* %load_target, %struct.expdesc* %ARG2)
  call void @yindex(%struct.LexState* %ARG1, %struct.expdesc* %key_0x62d000bc90d8)
  call void @luaK_indexed(%struct.FuncState* %load_target, %struct.expdesc* %ARG2, %struct.expdesc* %key_0x62d000bc90d8)
  br label %L1670

L1673:                                            ; preds = %L1670
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @checkname(%struct.LexState* %ARG1, %struct.expdesc* %key_0x62d000bc92a8)
  call void @luaK_self(%struct.FuncState* %load_target, %struct.expdesc* %ARG2, %struct.expdesc* %key_0x62d000bc92a8)
  call void @funcargs(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1670

L1674:                                            ; preds = %L1670, %L1670, %L1670
  call void @luaK_exp2nextreg(%struct.FuncState* %load_target, %struct.expdesc* %ARG2)
  call void @funcargs(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1670

L1675:                                            ; preds = %L1670
  ret void
}

define internal void @simpleexp(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1676:
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L1687 [
    i32 123, label %L1685
    i32 263, label %L1681
    i32 265, label %L1686
    i32 269, label %L1679
    i32 275, label %L1680
    i32 279, label %L1682
    i32 284, label %L1677
    i32 286, label %L1678
  ]

L1677:                                            ; preds = %L1676
  call void @init_exp(%struct.expdesc* %ARG2, i32 5, i32 0)
  %4 = bitcast %struct.LexState* %ARG1 to double*
  %5 = bitcast double* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to double*
  %load_target1 = load double, double* %7
  %8 = bitcast %struct.expdesc* %ARG2 to double*
  %9 = bitcast double* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to double*
  store double %load_target1, double* %11
  br label %L1688

L1678:                                            ; preds = %L1676
  %12 = bitcast %struct.LexState* %ARG1 to { [24 x i8] }**
  %13 = bitcast { [24 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to { [24 x i8] }**
  %load_target2 = load { [24 x i8] }*, { [24 x i8] }** %15
  call void @codestring(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, { [24 x i8] }* %load_target2)
  br label %L1688

L1679:                                            ; preds = %L1676
  call void @init_exp(%struct.expdesc* %ARG2, i32 1, i32 0)
  br label %L1688

L1680:                                            ; preds = %L1676
  call void @init_exp(%struct.expdesc* %ARG2, i32 2, i32 0)
  br label %L1688

L1681:                                            ; preds = %L1676
  call void @init_exp(%struct.expdesc* %ARG2, i32 3, i32 0)
  br label %L1688

L1682:                                            ; preds = %L1676
  %16 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %17 = bitcast %struct.FuncState** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 48
  %19 = bitcast i8* %18 to %struct.FuncState**
  %load_target3 = load %struct.FuncState*, %struct.FuncState** %19
  %20 = bitcast %struct.FuncState* %load_target3 to %struct.Proto**
  %21 = bitcast %struct.Proto** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to %struct.Proto**
  %load_target4 = load %struct.Proto*, %struct.Proto** %23
  %24 = bitcast %struct.Proto* %load_target4 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 114
  %load_target5 = load i8, i8* %25
  %cond = icmp ne i8 %load_target5, 0
  br i1 %cond, label %L1684, label %L1683

L1683:                                            ; preds = %L1682
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.100, i64 0, i64 0))
  br label %L1684

L1684:                                            ; preds = %L1683, %L1682
  %26 = bitcast %struct.FuncState* %load_target3 to %struct.Proto**
  %27 = bitcast %struct.Proto** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to %struct.Proto**
  %load_target6 = load %struct.Proto*, %struct.Proto** %29
  %30 = bitcast %struct.Proto* %load_target6 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 114
  %load_target7 = load i8, i8* %31
  %R9340 = zext i8 %load_target7 to i32
  %R9341 = and i32 %R9340, -5
  %R9342 = trunc i32 %R9341 to i8
  %32 = bitcast %struct.Proto* %load_target6 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 114
  store i8 %R9342, i8* %33
  %R9345 = call i32 @luaK_codeABC(%struct.FuncState* %load_target3, i32 37, i32 0, i32 1, i32 0)
  call void @init_exp(%struct.expdesc* %ARG2, i32 14, i32 %R9345)
  br label %L1688

L1685:                                            ; preds = %L1676
  call void @constructor(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1689

L1686:                                            ; preds = %L1676
  call void @luaX_next(%struct.LexState* %ARG1)
  %34 = bitcast %struct.LexState* %ARG1 to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  %37 = bitcast i8* %36 to i32*
  %load_target8 = load i32, i32* %37
  call void @body(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, i32 0, i32 %load_target8)
  br label %L1689

L1687:                                            ; preds = %L1676
  call void @primaryexp(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1689

L1688:                                            ; preds = %L1684, %L1681, %L1680, %L1679, %L1678, %L1677
  call void @luaX_next(%struct.LexState* %ARG1)
  br label %L1689

L1689:                                            ; preds = %L1688, %L1687, %L1686, %L1685
  ret void
}

define internal i32 @getunopr(i32 %ARG1) {
L1690:
  %0 = alloca i32
  switch i32 %ARG1, label %L1694 [
    i32 35, label %L1693
    i32 45, label %L1692
    i32 270, label %L1691
  ]

L1691:                                            ; preds = %L1690
  store i32 1, i32* %0
  br label %L1695

L1692:                                            ; preds = %L1690
  store i32 0, i32* %0
  br label %L1695

L1693:                                            ; preds = %L1690
  store i32 2, i32* %0
  br label %L1695

L1694:                                            ; preds = %L1690
  store i32 3, i32* %0
  br label %L1695

L1695:                                            ; preds = %L1694, %L1693, %L1692, %L1691
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal i32 @getbinopr(i32 %ARG1) {
L1696:
  %0 = alloca i32
  switch i32 %ARG1, label %L1712 [
    i32 37, label %L1701
    i32 42, label %L1699
    i32 43, label %L1697
    i32 45, label %L1698
    i32 47, label %L1700
    i32 60, label %L1706
    i32 62, label %L1708
    i32 94, label %L1702
    i32 257, label %L1710
    i32 271, label %L1711
    i32 278, label %L1703
    i32 280, label %L1705
    i32 281, label %L1709
    i32 282, label %L1707
    i32 283, label %L1704
  ]

L1697:                                            ; preds = %L1696
  store i32 0, i32* %0
  br label %L1713

L1698:                                            ; preds = %L1696
  store i32 1, i32* %0
  br label %L1713

L1699:                                            ; preds = %L1696
  store i32 2, i32* %0
  br label %L1713

L1700:                                            ; preds = %L1696
  store i32 3, i32* %0
  br label %L1713

L1701:                                            ; preds = %L1696
  store i32 4, i32* %0
  br label %L1713

L1702:                                            ; preds = %L1696
  store i32 5, i32* %0
  br label %L1713

L1703:                                            ; preds = %L1696
  store i32 6, i32* %0
  br label %L1713

L1704:                                            ; preds = %L1696
  store i32 7, i32* %0
  br label %L1713

L1705:                                            ; preds = %L1696
  store i32 8, i32* %0
  br label %L1713

L1706:                                            ; preds = %L1696
  store i32 9, i32* %0
  br label %L1713

L1707:                                            ; preds = %L1696
  store i32 10, i32* %0
  br label %L1713

L1708:                                            ; preds = %L1696
  store i32 11, i32* %0
  br label %L1713

L1709:                                            ; preds = %L1696
  store i32 12, i32* %0
  br label %L1713

L1710:                                            ; preds = %L1696
  store i32 13, i32* %0
  br label %L1713

L1711:                                            ; preds = %L1696
  store i32 14, i32* %0
  br label %L1713

L1712:                                            ; preds = %L1696
  store i32 15, i32* %0
  br label %L1713

L1713:                                            ; preds = %L1712, %L1711, %L1710, %L1709, %L1708, %L1707, %L1706, %L1705, %L1704, %L1703, %L1702, %L1701, %L1700, %L1699, %L1698, %L1697
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal i32 @subexpr(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, i32 %ARG3) {
L1714:
  %v2_0x62d000bf75f0 = alloca %struct.expdesc
  %0 = alloca i32
  call void @enterlevel(%struct.LexState* %ARG1)
  %1 = bitcast %struct.LexState* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R9363 = call i32 @getunopr(i32 %load_target)
  %R9366 = icmp ne i32 %R9363, 3
  %R93661 = zext i1 %R9366 to i32
  %cond = icmp ne i32 %R93661, 0
  br i1 %cond, label %L1715, label %L1716

L1715:                                            ; preds = %L1714
  call void @luaX_next(%struct.LexState* %ARG1)
  %R9370 = call i32 @subexpr(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, i32 8)
  %5 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %6 = bitcast %struct.FuncState** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 48
  %8 = bitcast i8* %7 to %struct.FuncState**
  %load_target2 = load %struct.FuncState*, %struct.FuncState** %8
  call void @luaK_prefix(%struct.FuncState* %load_target2, i32 %R9363, %struct.expdesc* %ARG2)
  br label %L1717

L1716:                                            ; preds = %L1714
  call void @simpleexp(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1717

L1717:                                            ; preds = %L1716, %L1715
  %9 = bitcast %struct.LexState* %ARG1 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to i32*
  %load_target3 = load i32, i32* %12
  %R9379 = call i32 @getbinopr(i32 %load_target3)
  store i32 %R9379, i32* %0
  br label %L1718

L1718:                                            ; preds = %L1720, %L1717
  %13 = load i32, i32* %0
  %R9382 = icmp ne i32 %13, 15
  %R93824 = zext i1 %R9382 to i32
  %cond5 = icmp ne i32 %R93824, 0
  br i1 %cond5, label %L1719, label %L1721

L1719:                                            ; preds = %L1718
  %R9385 = sext i32 %13 to i64
  %R9386 = mul i64 %R9385, 2
  %14 = getelementptr inbounds i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 %R9386
  %15 = bitcast i8* %14 to %struct.anno*
  %16 = bitcast %struct.anno* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %load_target6 = load i8, i8* %17
  %R9389 = zext i8 %load_target6 to i32
  %R9391 = icmp ugt i32 %R9389, %ARG3
  %R93917 = zext i1 %R9391 to i32
  %cond8 = icmp ne i32 %R93917, 0
  br i1 %cond8, label %L1720, label %L1721

L1720:                                            ; preds = %L1719
  call void @luaX_next(%struct.LexState* %ARG1)
  %18 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %19 = bitcast %struct.FuncState** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 48
  %21 = bitcast i8* %20 to %struct.FuncState**
  %load_target9 = load %struct.FuncState*, %struct.FuncState** %21
  call void @luaK_infix(%struct.FuncState* %load_target9, i32 %13, %struct.expdesc* %ARG2)
  %22 = bitcast %struct.anno* %15 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %load_target10 = load i8, i8* %23
  %R9405 = zext i8 %load_target10 to i32
  %R9406 = call i32 @subexpr(%struct.LexState* %ARG1, %struct.expdesc* %v2_0x62d000bf75f0, i32 %R9405)
  %24 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %25 = bitcast %struct.FuncState** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 48
  %27 = bitcast i8* %26 to %struct.FuncState**
  %load_target11 = load %struct.FuncState*, %struct.FuncState** %27
  call void @luaK_posfix(%struct.FuncState* %load_target11, i32 %13, %struct.expdesc* %ARG2, %struct.expdesc* %v2_0x62d000bf75f0)
  store i32 %R9406, i32* %0
  br label %L1718

L1721:                                            ; preds = %L1719, %L1718
  %28 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %29 = bitcast %struct.lua_State** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 56
  %31 = bitcast i8* %30 to %struct.lua_State**
  %load_target12 = load %struct.lua_State*, %struct.lua_State** %31
  %32 = bitcast %struct.lua_State* %load_target12 to i16*
  %33 = bitcast i16* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 96
  %35 = bitcast i8* %34 to i16*
  %load_target13 = load i16, i16* %35
  %R9416 = add i16 %load_target13, -1
  %36 = bitcast %struct.lua_State* %load_target12 to i16*
  %37 = bitcast i16* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 96
  %39 = bitcast i8* %38 to i16*
  store i16 %R9416, i16* %39
  ret i32 %13
}

define internal void @expr.101(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1722:
  %R9421 = call i32 @subexpr(%struct.LexState* %ARG1, %struct.expdesc* %ARG2, i32 0)
  ret void
}

define internal i32 @block_follow(i32 %ARG1) {
L1723:
  %0 = alloca i32
  switch i32 %ARG1, label %L1725 [
    i32 260, label %L1724
    i32 261, label %L1724
    i32 262, label %L1724
    i32 276, label %L1724
    i32 287, label %L1724
  ]

L1724:                                            ; preds = %L1723, %L1723, %L1723, %L1723, %L1723
  store i32 1, i32* %0
  br label %L1726

L1725:                                            ; preds = %L1723
  store i32 0, i32* %0
  br label %L1726

L1726:                                            ; preds = %L1725, %L1724
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal void @block(%struct.LexState* %ARG1) {
L1727:
  %bl_0x62d000bf8f50 = alloca %struct.BlockCnt
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  call void @enterblock(%struct.FuncState* %load_target, %struct.BlockCnt* %bl_0x62d000bf8f50, i8 0)
  call void @chunk(%struct.LexState* %ARG1)
  call void @leaveblock(%struct.FuncState* %load_target)
  ret void
}

define internal void @check_conflict(%struct.LexState* %ARG1, %struct.LHS_assign* %ARG2, %struct.expdesc* %ARG3) {
L1728:
  %0 = alloca %struct.LHS_assign*
  %1 = alloca i32
  %2 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %3 = bitcast %struct.FuncState** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 48
  %5 = bitcast i8* %4 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %5
  %6 = bitcast %struct.FuncState* %load_target to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 60
  %9 = bitcast i8* %8 to i32*
  %load_target1 = load i32, i32* %9
  store %struct.LHS_assign* %ARG2, %struct.LHS_assign** %0
  store i32 0, i32* %1
  br label %L1729

L1729:                                            ; preds = %L1735, %L1728
  %10 = load %struct.LHS_assign*, %struct.LHS_assign** %0
  %cond = icmp ne %struct.LHS_assign* %10, null
  br i1 %cond, label %L1730, label %L1736

L1730:                                            ; preds = %L1729
  %11 = bitcast %struct.LHS_assign* %10 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  %load_target2 = load i32, i32* %14
  %R9438 = icmp eq i32 %load_target2, 9
  %R94383 = zext i1 %R9438 to i32
  %cond4 = icmp ne i32 %R94383, 0
  br i1 %cond4, label %L1731, label %L1735

L1731:                                            ; preds = %L1730
  %15 = bitcast %struct.LHS_assign* %10 to i32*
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to i32*
  %load_target5 = load i32, i32* %18
  %19 = bitcast %struct.expdesc* %ARG3 to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i32*
  %load_target6 = load i32, i32* %22
  %R9443 = icmp eq i32 %load_target5, %load_target6
  %R94437 = zext i1 %R9443 to i32
  %cond8 = icmp ne i32 %R94437, 0
  br i1 %cond8, label %L1732, label %L1733

L1732:                                            ; preds = %L1731
  %23 = bitcast %struct.LHS_assign* %10 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to i32*
  store i32 %load_target1, i32* %26
  store i32 1, i32* %1
  br label %L1733

L1733:                                            ; preds = %L1732, %L1731
  %27 = bitcast %struct.LHS_assign* %10 to i32*
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 20
  %30 = bitcast i8* %29 to i32*
  %load_target9 = load i32, i32* %30
  %31 = bitcast %struct.expdesc* %ARG3 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to i32*
  %load_target10 = load i32, i32* %34
  %R9450 = icmp eq i32 %load_target9, %load_target10
  %R945011 = zext i1 %R9450 to i32
  %cond12 = icmp ne i32 %R945011, 0
  br i1 %cond12, label %L1734, label %L1735

L1734:                                            ; preds = %L1733
  %35 = bitcast %struct.LHS_assign* %10 to i32*
  %36 = bitcast i32* %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 20
  %38 = bitcast i8* %37 to i32*
  store i32 %load_target1, i32* %38
  store i32 1, i32* %1
  br label %L1735

L1735:                                            ; preds = %L1734, %L1733, %L1730
  %39 = bitcast %struct.LHS_assign* %10 to %struct.LHS_assign**
  %40 = bitcast %struct.LHS_assign** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = bitcast i8* %41 to %struct.LHS_assign**
  %load_target13 = load %struct.LHS_assign*, %struct.LHS_assign** %42
  store %struct.LHS_assign* %load_target13, %struct.LHS_assign** %0
  br label %L1729

L1736:                                            ; preds = %L1729
  %43 = load i32, i32* %1
  %cond14 = icmp ne i32 %43, 0
  br i1 %cond14, label %L1737, label %L1738

L1737:                                            ; preds = %L1736
  %44 = bitcast %struct.FuncState* %load_target to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 60
  %47 = bitcast i8* %46 to i32*
  %load_target15 = load i32, i32* %47
  %48 = bitcast %struct.expdesc* %ARG3 to i32*
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  %51 = bitcast i8* %50 to i32*
  %load_target16 = load i32, i32* %51
  %R9461 = call i32 @luaK_codeABC(%struct.FuncState* %load_target, i32 0, i32 %load_target15, i32 %load_target16, i32 0)
  call void @luaK_reserveregs(%struct.FuncState* %load_target, i32 1)
  br label %L1738

L1738:                                            ; preds = %L1737, %L1736
  ret void
}

define internal void @assignment(%struct.LexState* %ARG1, %struct.LHS_assign* %ARG2, i32 %ARG3) {
L1739:
  %e_0x62d000bfa998 = alloca %struct.expdesc
  %nv_0x62d000bfaa80 = alloca %struct.LHS_assign
  %0 = bitcast %struct.LHS_assign* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R9466 = icmp sle i32 6, %load_target
  %R94661 = zext i1 %R9466 to i32
  %cond = icmp ne i32 %R94661, 0
  br i1 %cond, label %L1740, label %L1741

L1740:                                            ; preds = %L1739
  %R9470 = icmp sle i32 %load_target, 9
  %R94702 = zext i1 %R9470 to i32
  %cond3 = icmp ne i32 %R94702, 0
  br i1 %cond3, label %L1742, label %L1741

L1741:                                            ; preds = %L1740, %L1739
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.102, i64 0, i64 0))
  br label %L1742

L1742:                                            ; preds = %L1741, %L1740
  %R9474 = call i32 @testnext(%struct.LexState* %ARG1, i32 44)
  %cond4 = icmp ne i32 %R9474, 0
  br i1 %cond4, label %L1743, label %L1748

L1743:                                            ; preds = %L1742
  %4 = bitcast %struct.LHS_assign* %nv_0x62d000bfaa80 to %struct.LHS_assign**
  %5 = bitcast %struct.LHS_assign** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to %struct.LHS_assign**
  store %struct.LHS_assign* %ARG2, %struct.LHS_assign** %7
  %R9477 = bitcast %struct.LHS_assign* %nv_0x62d000bfaa80 to i8*
  %8 = getelementptr inbounds i8, i8* %R9477, i32 8
  call void @primaryexp(%struct.LexState* %ARG1, i8* %8)
  %9 = bitcast %struct.LHS_assign* %nv_0x62d000bfaa80 to i32*
  %10 = bitcast i32* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i32*
  %load_target5 = load i32, i32* %12
  %R9481 = icmp eq i32 %load_target5, 6
  %R94816 = zext i1 %R9481 to i32
  %cond7 = icmp ne i32 %R94816, 0
  br i1 %cond7, label %L1744, label %L1745

L1744:                                            ; preds = %L1743
  call void @check_conflict(%struct.LexState* %ARG1, %struct.LHS_assign* %ARG2, i8* %8)
  br label %L1745

L1745:                                            ; preds = %L1744, %L1743
  %13 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %14 = bitcast %struct.lua_State** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 56
  %16 = bitcast i8* %15 to %struct.lua_State**
  %load_target8 = load %struct.lua_State*, %struct.lua_State** %16
  %17 = bitcast %struct.lua_State* %load_target8 to i16*
  %18 = bitcast i16* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 96
  %20 = bitcast i8* %19 to i16*
  %load_target9 = load i16, i16* %20
  %R9490 = zext i16 %load_target9 to i32
  %R9491 = sub i32 200, %R9490
  %R9492 = icmp sgt i32 %ARG3, %R9491
  %R949210 = zext i1 %R9492 to i32
  %cond11 = icmp ne i32 %R949210, 0
  br i1 %cond11, label %L1746, label %L1747

L1746:                                            ; preds = %L1745
  %21 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %22 = bitcast %struct.FuncState** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 48
  %24 = bitcast i8* %23 to %struct.FuncState**
  %load_target12 = load %struct.FuncState*, %struct.FuncState** %24
  call void @errorlimit(%struct.FuncState* %load_target12, i32 %R9491, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.103, i64 0, i64 0))
  br label %L1747

L1747:                                            ; preds = %L1746, %L1745
  %R9504 = add i32 %ARG3, 1
  call void @assignment(%struct.LexState* %ARG1, i8* %R9477, i32 %R9504)
  br label %L1752

L1748:                                            ; preds = %L1742
  call void @checknext(%struct.LexState* %ARG1, i32 61)
  %R9508 = call i32 @explist1(%struct.LexState* %ARG1, %struct.expdesc* %e_0x62d000bfa998)
  %R9511 = icmp ne i32 %R9508, %ARG3
  %R951113 = zext i1 %R9511 to i32
  %cond14 = icmp ne i32 %R951113, 0
  br i1 %cond14, label %L1749, label %L1751

L1749:                                            ; preds = %L1748
  call void @adjust_assign(%struct.LexState* %ARG1, i32 %ARG3, i32 %R9508, %struct.expdesc* %e_0x62d000bfa998)
  %R9518 = icmp sgt i32 %R9508, %ARG3
  %R951815 = zext i1 %R9518 to i32
  %cond16 = icmp ne i32 %R951815, 0
  br i1 %cond16, label %L1750, label %L1752

L1750:                                            ; preds = %L1749
  %R9521 = sub i32 %R9508, %ARG3
  %25 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %26 = bitcast %struct.FuncState** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 48
  %28 = bitcast i8* %27 to %struct.FuncState**
  %load_target17 = load %struct.FuncState*, %struct.FuncState** %28
  %29 = bitcast %struct.FuncState* %load_target17 to i32*
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 60
  %32 = bitcast i8* %31 to i32*
  %load_target18 = load i32, i32* %32
  %R9526 = sub i32 %load_target18, %R9521
  %33 = bitcast %struct.FuncState* %load_target17 to i32*
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 60
  %36 = bitcast i8* %35 to i32*
  store i32 %R9526, i32* %36
  br label %L1752

L1751:                                            ; preds = %L1748
  %37 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %38 = bitcast %struct.FuncState** %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 48
  %40 = bitcast i8* %39 to %struct.FuncState**
  %load_target19 = load %struct.FuncState*, %struct.FuncState** %40
  call void @luaK_setoneret(%struct.FuncState* %load_target19, %struct.expdesc* %e_0x62d000bfa998)
  %41 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %42 = bitcast %struct.FuncState** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 48
  %44 = bitcast i8* %43 to %struct.FuncState**
  %load_target20 = load %struct.FuncState*, %struct.FuncState** %44
  %45 = bitcast %struct.LHS_assign* %ARG2 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i32 8
  %47 = bitcast i8* %46 to %struct.LHS_assign*
  call void @luaK_storevar(%struct.FuncState* %load_target20, %struct.LHS_assign* %47, %struct.expdesc* %e_0x62d000bfa998)
  br label %L1753

L1752:                                            ; preds = %L1750, %L1749, %L1747
  %48 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %49 = bitcast %struct.FuncState** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 48
  %51 = bitcast i8* %50 to %struct.FuncState**
  %load_target21 = load %struct.FuncState*, %struct.FuncState** %51
  %52 = bitcast %struct.FuncState* %load_target21 to i32*
  %53 = bitcast i32* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 60
  %55 = bitcast i8* %54 to i32*
  %load_target22 = load i32, i32* %55
  %R9540 = add i32 %load_target22, -1
  call void @init_exp(%struct.expdesc* %e_0x62d000bfa998, i32 12, i32 %R9540)
  %56 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %57 = bitcast %struct.FuncState** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 48
  %59 = bitcast i8* %58 to %struct.FuncState**
  %load_target23 = load %struct.FuncState*, %struct.FuncState** %59
  %60 = bitcast %struct.LHS_assign* %ARG2 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i32 8
  %62 = bitcast i8* %61 to %struct.LHS_assign*
  call void @luaK_storevar(%struct.FuncState* %load_target23, %struct.LHS_assign* %62, %struct.expdesc* %e_0x62d000bfa998)
  br label %L1753

L1753:                                            ; preds = %L1752, %L1751
  ret void
}

define internal i32 @cond(%struct.LexState* %ARG1) {
L1754:
  %v_0x62d000bfb0d8 = alloca %struct.expdesc
  call void @expr(%struct.LexState* %ARG1, %struct.expdesc* %v_0x62d000bfb0d8)
  %0 = bitcast %struct.expdesc* %v_0x62d000bfb0d8 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R9550 = icmp eq i32 %load_target, 1
  %R95501 = zext i1 %R9550 to i32
  %cond = icmp ne i32 %R95501, 0
  br i1 %cond, label %L1755, label %L1756

L1755:                                            ; preds = %L1754
  %4 = bitcast %struct.expdesc* %v_0x62d000bfb0d8 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 3, i32* %7
  br label %L1756

L1756:                                            ; preds = %L1755, %L1754
  %8 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %9 = bitcast %struct.FuncState** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 48
  %11 = bitcast i8* %10 to %struct.FuncState**
  %load_target2 = load %struct.FuncState*, %struct.FuncState** %11
  call void @luaK_goiftrue(%struct.FuncState* %load_target2, %struct.expdesc* %v_0x62d000bfb0d8)
  %12 = bitcast %struct.expdesc* %v_0x62d000bfb0d8 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 20
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  ret i32 %load_target3
}

define internal void @breakstat(%struct.LexState* %ARG1) {
L1757:
  %0 = alloca %struct.BlockCnt*
  %1 = alloca i32
  %2 = alloca i32
  %3 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %4 = bitcast %struct.FuncState** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 48
  %6 = bitcast i8* %5 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %6
  %7 = bitcast %struct.FuncState* %load_target to %struct.BlockCnt**
  %8 = bitcast %struct.BlockCnt** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 40
  %10 = bitcast i8* %9 to %struct.BlockCnt**
  %load_target1 = load %struct.BlockCnt*, %struct.BlockCnt** %10
  store %struct.BlockCnt* %load_target1, %struct.BlockCnt** %0
  store i32 0, i32* %2
  store i32 0, i32* %1
  br label %L1758

L1758:                                            ; preds = %L1760, %L1757
  %11 = load %struct.BlockCnt*, %struct.BlockCnt** %0
  %cond = icmp ne %struct.BlockCnt* %11, null
  br i1 %cond, label %L1759, label %L1762

L1759:                                            ; preds = %L1758
  %12 = bitcast %struct.BlockCnt* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 14
  %load_target2 = load i8, i8* %13
  %cond3 = icmp ne i8 %load_target2, 0
  br i1 %cond3, label %L1761, label %L1760

L1760:                                            ; preds = %L1759
  %14 = bitcast %struct.BlockCnt* %11 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 13
  %load_target4 = load i8, i8* %15
  %R9565 = zext i8 %load_target4 to i32
  %16 = load i32, i32* %1
  %R9568 = or i32 %16, %R9565
  %17 = bitcast %struct.BlockCnt* %11 to %struct.BlockCnt**
  %18 = bitcast %struct.BlockCnt** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to %struct.BlockCnt**
  %load_target5 = load %struct.BlockCnt*, %struct.BlockCnt** %20
  store %struct.BlockCnt* %load_target5, %struct.BlockCnt** %0
  store i32 %R9568, i32* %2
  store i32 %R9568, i32* %1
  br label %L1758

L1761:                                            ; preds = %L1759
  %cond6 = icmp ne %struct.BlockCnt* %11, null
  br i1 %cond6, label %L1763, label %L1762

L1762:                                            ; preds = %L1761, %L1758
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i64 0, i64 0))
  br label %L1763

L1763:                                            ; preds = %L1762, %L1761
  %21 = load i32, i32* %2
  %cond7 = icmp ne i32 %21, 0
  br i1 %cond7, label %L1764, label %L1765

L1764:                                            ; preds = %L1763
  %22 = bitcast %struct.BlockCnt* %11 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 12
  %load_target8 = load i8, i8* %23
  %R9579 = zext i8 %load_target8 to i32
  %R9580 = call i32 @luaK_codeABC(%struct.FuncState* %load_target, i32 35, i32 %R9579, i32 0, i32 0)
  br label %L1765

L1765:                                            ; preds = %L1764, %L1763
  %24 = bitcast %struct.BlockCnt* %11 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i32 8
  %26 = bitcast i8* %25 to %struct.BlockCnt*
  %R9585 = call i32 @luaK_jump(%struct.FuncState* %load_target)
  call void @luaK_concat(%struct.FuncState* %load_target, %struct.BlockCnt* %26, i32 %R9585)
  ret void
}

define internal void @whilestat(%struct.LexState* %ARG1, i32 %ARG2) {
L1766:
  %bl_0x62d000c125e8 = alloca %struct.BlockCnt
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  call void @luaX_next(%struct.LexState* %ARG1)
  %R9590 = call i32 @luaK_getlabel(%struct.FuncState* %load_target)
  %R9592 = call i32 @cond(%struct.LexState* %ARG1)
  call void @enterblock(%struct.FuncState* %load_target, %struct.BlockCnt* %bl_0x62d000c125e8, i8 1)
  call void @checknext(%struct.LexState* %ARG1, i32 259)
  call void @block(%struct.LexState* %ARG1)
  %R9599 = call i32 @luaK_jump(%struct.FuncState* %load_target)
  call void @luaK_patchlist(%struct.FuncState* %load_target, i32 %R9599, i32 %R9590)
  call void @check_match(%struct.LexState* %ARG1, i32 262, i32 277, i32 %ARG2)
  call void @leaveblock(%struct.FuncState* %load_target)
  call void @luaK_patchtohere(%struct.FuncState* %load_target, i32 %R9592)
  ret void
}

define internal void @repeatstat(%struct.LexState* %ARG1, i32 %ARG2) {
L1767:
  %bl2_0x62d000c130c8 = alloca %struct.BlockCnt
  %bl1_0x62d000c12fe0 = alloca %struct.BlockCnt
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %R9609 = call i32 @luaK_getlabel(%struct.FuncState* %load_target)
  call void @enterblock(%struct.FuncState* %load_target, %struct.BlockCnt* %bl1_0x62d000c12fe0, i8 1)
  call void @enterblock(%struct.FuncState* %load_target, %struct.BlockCnt* %bl2_0x62d000c130c8, i8 0)
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @chunk(%struct.LexState* %ARG1)
  call void @check_match(%struct.LexState* %ARG1, i32 276, i32 272, i32 %ARG2)
  %R9619 = call i32 @cond(%struct.LexState* %ARG1)
  %4 = bitcast %struct.BlockCnt* %bl2_0x62d000c130c8 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 13
  %load_target1 = load i8, i8* %5
  %cond = icmp ne i8 %load_target1, 0
  br i1 %cond, label %L1769, label %L1768

L1768:                                            ; preds = %L1767
  call void @leaveblock(%struct.FuncState* %load_target)
  %6 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %7 = bitcast %struct.FuncState** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 48
  %9 = bitcast i8* %8 to %struct.FuncState**
  %load_target2 = load %struct.FuncState*, %struct.FuncState** %9
  call void @luaK_patchlist(%struct.FuncState* %load_target2, i32 %R9619, i32 %R9609)
  br label %L1770

L1769:                                            ; preds = %L1767
  call void @breakstat(%struct.LexState* %ARG1)
  %10 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %11 = bitcast %struct.FuncState** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 48
  %13 = bitcast i8* %12 to %struct.FuncState**
  %load_target3 = load %struct.FuncState*, %struct.FuncState** %13
  call void @luaK_patchtohere(%struct.FuncState* %load_target3, i32 %R9619)
  call void @leaveblock(%struct.FuncState* %load_target)
  %14 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %15 = bitcast %struct.FuncState** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 48
  %17 = bitcast i8* %16 to %struct.FuncState**
  %load_target4 = load %struct.FuncState*, %struct.FuncState** %17
  %R9634 = call i32 @luaK_jump(%struct.FuncState* %load_target)
  call void @luaK_patchlist(%struct.FuncState* %load_target4, i32 %R9634, i32 %R9609)
  br label %L1770

L1770:                                            ; preds = %L1769, %L1768
  call void @leaveblock(%struct.FuncState* %load_target)
  ret void
}

define internal i32 @exp1(%struct.LexState* %ARG1) {
L1771:
  %e_0x62d000c13638 = alloca %struct.expdesc
  call void @expr(%struct.LexState* %ARG1, %struct.expdesc* %e_0x62d000c13638)
  %0 = bitcast %struct.expdesc* %e_0x62d000c13638 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %4 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %5 = bitcast %struct.FuncState** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 48
  %7 = bitcast i8* %6 to %struct.FuncState**
  %load_target1 = load %struct.FuncState*, %struct.FuncState** %7
  call void @luaK_exp2nextreg(%struct.FuncState* %load_target1, %struct.expdesc* %e_0x62d000c13638)
  ret i32 %load_target
}

define internal void @forbody(%struct.LexState* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4, i32 %ARG5) {
L1772:
  %bl_0x62d000c14030 = alloca %struct.BlockCnt
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %4 = bitcast %struct.FuncState** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 48
  %6 = bitcast i8* %5 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %6
  call void @adjustlocalvars(%struct.LexState* %ARG1, i32 3)
  call void @checknext(%struct.LexState* %ARG1, i32 259)
  %cond = icmp ne i32 %ARG5, 0
  br i1 %cond, label %L1773, label %L1774

L1773:                                            ; preds = %L1772
  %R9653 = call i32 @luaK_codeABx(%struct.FuncState* %load_target, i32 32, i32 %ARG2, i32 131070)
  store i32 %R9653, i32* %0
  br label %L1775

L1774:                                            ; preds = %L1772
  %R9655 = call i32 @luaK_jump(%struct.FuncState* %load_target)
  store i32 %R9655, i32* %0
  br label %L1775

L1775:                                            ; preds = %L1774, %L1773
  %7 = load i32, i32* %0
  call void @enterblock(%struct.FuncState* %load_target, %struct.BlockCnt* %bl_0x62d000c14030, i8 0)
  call void @adjustlocalvars(%struct.LexState* %ARG1, i32 %ARG4)
  call void @luaK_reserveregs(%struct.FuncState* %load_target, i32 %ARG4)
  call void @block(%struct.LexState* %ARG1)
  call void @leaveblock(%struct.FuncState* %load_target)
  call void @luaK_patchtohere(%struct.FuncState* %load_target, i32 %7)
  %cond1 = icmp ne i32 %ARG5, 0
  br i1 %cond1, label %L1776, label %L1777

L1776:                                            ; preds = %L1775
  %R9670 = call i32 @luaK_codeABx(%struct.FuncState* %load_target, i32 31, i32 %ARG2, i32 131070)
  store i32 %R9670, i32* %1
  br label %L1778

L1777:                                            ; preds = %L1775
  %R9674 = call i32 @luaK_codeABC(%struct.FuncState* %load_target, i32 33, i32 %ARG2, i32 0, i32 %ARG4)
  store i32 %R9674, i32* %1
  br label %L1778

L1778:                                            ; preds = %L1777, %L1776
  %8 = load i32, i32* %1
  call void @luaK_fixline(%struct.FuncState* %load_target, i32 %ARG3)
  %cond2 = icmp ne i32 %ARG5, 0
  br i1 %cond2, label %L1779, label %L1780

L1779:                                            ; preds = %L1778
  store i32 %8, i32* %2
  br label %L1781

L1780:                                            ; preds = %L1778
  %R9682 = call i32 @luaK_jump(%struct.FuncState* %load_target)
  store i32 %R9682, i32* %2
  br label %L1781

L1781:                                            ; preds = %L1780, %L1779
  %9 = load i32, i32* %2
  %R9685 = add i32 %7, 1
  call void @luaK_patchlist(%struct.FuncState* %load_target, i32 %9, i32 %R9685)
  ret void
}

define internal void @fornum(%struct.LexState* %ARG1, { [24 x i8] }* %ARG2, i32 %ARG3) {
L1782:
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %4 = bitcast %struct.FuncState* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 60
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  %R9693 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.105, i64 0, i64 0), i64 11)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9693, i32 0)
  %R9697 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i64 11)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9697, i32 1)
  %R9701 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i64 0, i64 0), i64 10)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9701, i32 2)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %ARG2, i32 3)
  call void @checknext(%struct.LexState* %ARG1, i32 61)
  %R9706 = call i32 @exp1(%struct.LexState* %ARG1)
  call void @checknext(%struct.LexState* %ARG1, i32 44)
  %R9709 = call i32 @exp1(%struct.LexState* %ARG1)
  %R9711 = call i32 @testnext(%struct.LexState* %ARG1, i32 44)
  %cond = icmp ne i32 %R9711, 0
  br i1 %cond, label %L1783, label %L1784

L1783:                                            ; preds = %L1782
  %R9713 = call i32 @exp1(%struct.LexState* %ARG1)
  br label %L1785

L1784:                                            ; preds = %L1782
  %8 = bitcast %struct.FuncState* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 60
  %11 = bitcast i8* %10 to i32*
  %load_target2 = load i32, i32* %11
  %R9718 = call i32 @luaK_numberK(%struct.FuncState* %load_target, double 1.000000e+00)
  %R9720 = call i32 @luaK_codeABx(%struct.FuncState* %load_target, i32 1, i32 %load_target2, i32 %R9718)
  call void @luaK_reserveregs(%struct.FuncState* %load_target, i32 1)
  br label %L1785

L1785:                                            ; preds = %L1784, %L1783
  call void @forbody(%struct.LexState* %ARG1, i32 %load_target1, i32 %ARG3, i32 1, i32 1)
  ret void
}

define internal void @forlist(%struct.LexState* %ARG1, { [24 x i8] }* %ARG2) {
L1786:
  %e_0x62d000c15990 = alloca %struct.expdesc
  %0 = alloca i32
  %1 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %2 = bitcast %struct.FuncState** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 48
  %4 = bitcast i8* %3 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %4
  %5 = bitcast %struct.FuncState* %load_target to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 60
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R9732 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i64 0, i64 0), i64 15)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9732, i32 0)
  %R9738 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.109, i64 0, i64 0), i64 11)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9738, i32 1)
  %R9744 = call { [24 x i8] }* @luaX_newstring(%struct.LexState* %ARG1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i64 0, i64 0), i64 13)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9744, i32 2)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %ARG2, i32 3)
  store i32 4, i32* %0
  br label %L1787

L1787:                                            ; preds = %L1788, %L1786
  %R9752 = call i32 @testnext(%struct.LexState* %ARG1, i32 44)
  %9 = load i32, i32* %0
  %cond = icmp ne i32 %R9752, 0
  br i1 %cond, label %L1788, label %L1789

L1788:                                            ; preds = %L1787
  %R9755 = call { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1)
  %R9757 = add i32 %9, 1
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9755, i32 %9)
  store i32 %R9757, i32* %0
  br label %L1787

L1789:                                            ; preds = %L1787
  call void @checknext(%struct.LexState* %ARG1, i32 267)
  %10 = bitcast %struct.LexState* %ARG1 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4
  %13 = bitcast i8* %12 to i32*
  %load_target2 = load i32, i32* %13
  %R9764 = call i32 @explist1(%struct.LexState* %ARG1, %struct.expdesc* %e_0x62d000c15990)
  call void @adjust_assign(%struct.LexState* %ARG1, i32 3, i32 %R9764, %struct.expdesc* %e_0x62d000c15990)
  call void @luaK_checkstack(%struct.FuncState* %load_target, i32 3)
  %R9771 = add i32 %9, -3
  call void @forbody(%struct.LexState* %ARG1, i32 %load_target1, i32 %load_target2, i32 %R9771, i32 0)
  ret void
}

define internal void @forstat(%struct.LexState* %ARG1, i32 %ARG2) {
L1790:
  %bl_0x62d000c16ac8 = alloca %struct.BlockCnt
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  call void @enterblock(%struct.FuncState* %load_target, %struct.BlockCnt* %bl_0x62d000c16ac8, i8 1)
  call void @luaX_next(%struct.LexState* %ARG1)
  %R9778 = call { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1)
  %4 = bitcast %struct.LexState* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  switch i32 %load_target1, label %L1793 [
    i32 44, label %L1792
    i32 61, label %L1791
    i32 267, label %L1792
  ]

L1791:                                            ; preds = %L1790
  call void @fornum(%struct.LexState* %ARG1, { [24 x i8] }* %R9778, i32 %ARG2)
  br label %L1794

L1792:                                            ; preds = %L1790, %L1790
  call void @forlist(%struct.LexState* %ARG1, { [24 x i8] }* %R9778)
  br label %L1794

L1793:                                            ; preds = %L1790
  call void @luaX_syntaxerror(%struct.LexState* %ARG1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i64 0, i64 0))
  br label %L1794

L1794:                                            ; preds = %L1793, %L1792, %L1791
  call void @check_match(%struct.LexState* %ARG1, i32 262, i32 264, i32 %ARG2)
  call void @leaveblock(%struct.FuncState* %load_target)
  ret void
}

define internal i32 @test_then_block(%struct.LexState* %ARG1) {
L1795:
  call void @luaX_next(%struct.LexState* %ARG1)
  %R9793 = call i32 @cond(%struct.LexState* %ARG1)
  call void @checknext(%struct.LexState* %ARG1, i32 274)
  call void @block(%struct.LexState* %ARG1)
  ret i32 %R9793
}

define internal void @ifstat(%struct.LexState* %ARG1, i32 %ARG2) {
L1796:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %4 = bitcast %struct.FuncState** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 48
  %6 = bitcast i8* %5 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %6
  store i32 -1, i32 addrspace(32)* bitcast (i32 -1 to i32 addrspace(32)*)
  %R9801 = call i32 @test_then_block(%struct.LexState* %ARG1)
  store i32 %R9801, i32* %2
  store i32 %R9801, i32* %1
  store i32 %R9801, i32* %0
  br label %L1797

L1797:                                            ; preds = %L1798, %L1796
  %7 = bitcast %struct.LexState* %ARG1 to i32*
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to i32*
  %load_target1 = load i32, i32* %10
  %R9804 = icmp eq i32 %load_target1, 261
  %R98042 = zext i1 %R9804 to i32
  %cond = icmp ne i32 %R98042, 0
  br i1 %cond, label %L1798, label %L1799

L1798:                                            ; preds = %L1797
  %R9808 = call i32 @luaK_jump(%struct.FuncState* %load_target)
  call void @luaK_concat(%struct.FuncState* %load_target, i32* bitcast (i32 -1 to i32*), i32 %R9808)
  %11 = load i32, i32* %0
  call void @luaK_patchtohere(%struct.FuncState* %load_target, i32 %11)
  %R9812 = call i32 @test_then_block(%struct.LexState* %ARG1)
  store i32 %R9812, i32* %2
  store i32 %R9812, i32* %1
  store i32 %R9812, i32* %0
  br label %L1797

L1799:                                            ; preds = %L1797
  %R9815 = icmp eq i32 %load_target1, 260
  %R98153 = zext i1 %R9815 to i32
  %cond4 = icmp ne i32 %R98153, 0
  br i1 %cond4, label %L1800, label %L1801

L1800:                                            ; preds = %L1799
  %R9819 = call i32 @luaK_jump(%struct.FuncState* %load_target)
  call void @luaK_concat(%struct.FuncState* %load_target, i32* bitcast (i32 -1 to i32*), i32 %R9819)
  %12 = load i32, i32* %1
  call void @luaK_patchtohere(%struct.FuncState* %load_target, i32 %12)
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @block(%struct.LexState* %ARG1)
  br label %L1802

L1801:                                            ; preds = %L1799
  %13 = load i32, i32* %2
  call void @luaK_concat(%struct.FuncState* %load_target, i32* bitcast (i32 -1 to i32*), i32 %13)
  br label %L1802

L1802:                                            ; preds = %L1801, %L1800
  %load_target5 = load i32, i32 addrspace(32)* bitcast (i32 -1 to i32 addrspace(32)*)
  call void @luaK_patchtohere(%struct.FuncState* %load_target, i32 %load_target5)
  call void @check_match(%struct.LexState* %ARG1, i32 262, i32 266, i32 %ARG2)
  ret void
}

define internal void @localfunc(%struct.LexState* %ARG1) {
L1803:
  %b_0x62d000c186e0 = alloca %struct.expdesc
  %v_0x62d000c185f8 = alloca %struct.expdesc
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %R9835 = call { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1)
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9835, i32 0)
  %4 = bitcast %struct.FuncState* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 60
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  call void @init_exp(%struct.expdesc* %v_0x62d000c185f8, i32 6, i32 %load_target1)
  call void @luaK_reserveregs(%struct.FuncState* %load_target, i32 1)
  call void @adjustlocalvars(%struct.LexState* %ARG1, i32 1)
  %8 = bitcast %struct.LexState* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4
  %11 = bitcast i8* %10 to i32*
  %load_target2 = load i32, i32* %11
  call void @body(%struct.LexState* %ARG1, %struct.expdesc* %b_0x62d000c186e0, i32 0, i32 %load_target2)
  call void @luaK_storevar(%struct.FuncState* %load_target, %struct.expdesc* %v_0x62d000c185f8, %struct.expdesc* %b_0x62d000c186e0)
  %12 = bitcast %struct.FuncState* %load_target to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 48
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  %16 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %17 = bitcast %struct.Proto** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to %struct.Proto**
  %load_target4 = load %struct.Proto*, %struct.Proto** %19
  %20 = bitcast %struct.Proto* %load_target4 to %struct.LocVar**
  %21 = bitcast %struct.LocVar** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 48
  %23 = bitcast i8* %22 to %struct.LocVar**
  %load_target5 = load %struct.LocVar*, %struct.LocVar** %23
  %24 = bitcast %struct.FuncState* %load_target to i8*
  %25 = getelementptr inbounds i8, i8* %24, i32 196
  %26 = bitcast i8* %25 to %struct.FuncState*
  %27 = bitcast %struct.FuncState* %load_target to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 74
  %load_target6 = load i8, i8* %28
  %R9857 = zext i8 %load_target6 to i32
  %R9858 = add i32 %R9857, -1
  %R9859 = sext i32 %R9858 to i64
  %R9860 = mul i64 %R9859, 2
  %29 = bitcast %struct.FuncState* %26 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %R9860
  %31 = bitcast i8* %30 to %struct.FuncState*
  %32 = bitcast %struct.FuncState* %31 to i16*
  %33 = bitcast i16* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to i16*
  %load_target7 = load i16, i16* %35
  %R9863 = zext i16 %load_target7 to i64
  %R9864 = mul i64 %R9863, 16
  %36 = bitcast %struct.LocVar* %load_target5 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 %R9864
  %38 = bitcast i8* %37 to %struct.LocVar*
  %39 = bitcast %struct.LocVar* %38 to i32*
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %load_target3, i32* %42
  ret void
}

define internal void @localstat(%struct.LexState* %ARG1) {
L1804:
  %e_0x62d000c18ff0 = alloca %struct.expdesc
  %0 = alloca i32
  %1 = alloca i32
  store i32 0, i32* %0
  br label %L1805

L1805:                                            ; preds = %L1805, %L1804
  %R9868 = call { [24 x i8] }* @str_checkname(%struct.LexState* %ARG1)
  %2 = load i32, i32* %0
  %R9870 = add i32 %2, 1
  call void @new_localvar(%struct.LexState* %ARG1, { [24 x i8] }* %R9868, i32 %2)
  store i32 %R9870, i32* %0
  %R9872 = call i32 @testnext(%struct.LexState* %ARG1, i32 44)
  %cond = icmp ne i32 %R9872, 0
  br i1 %cond, label %L1805, label %L1806

L1806:                                            ; preds = %L1805
  %R9874 = call i32 @testnext(%struct.LexState* %ARG1, i32 61)
  %cond1 = icmp ne i32 %R9874, 0
  br i1 %cond1, label %L1807, label %L1808

L1807:                                            ; preds = %L1806
  %R9877 = call i32 @explist1(%struct.LexState* %ARG1, %struct.expdesc* %e_0x62d000c18ff0)
  store i32 %R9877, i32* %1
  br label %L1809

L1808:                                            ; preds = %L1806
  %3 = bitcast %struct.expdesc* %e_0x62d000c18ff0 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6
  store i32 0, i32* %1
  br label %L1809

L1809:                                            ; preds = %L1808, %L1807
  %7 = load i32, i32* %1
  call void @adjust_assign(%struct.LexState* %ARG1, i32 %R9870, i32 %7, %struct.expdesc* %e_0x62d000c18ff0)
  call void @adjustlocalvars(%struct.LexState* %ARG1, i32 %R9870)
  ret void
}

define internal i32 @funcname(%struct.LexState* %ARG1, %struct.expdesc* %ARG2) {
L1810:
  %0 = alloca i32
  call void @singlevar(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  store i32 0, i32* %0
  br label %L1811

L1811:                                            ; preds = %L1812, %L1810
  %1 = bitcast %struct.LexState* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R9888 = icmp eq i32 %load_target, 46
  %R98881 = zext i1 %R9888 to i32
  %cond = icmp ne i32 %R98881, 0
  br i1 %cond, label %L1812, label %L1813

L1812:                                            ; preds = %L1811
  call void @field(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  br label %L1811

L1813:                                            ; preds = %L1811
  %R9893 = icmp eq i32 %load_target, 58
  %R98932 = zext i1 %R9893 to i32
  %cond3 = icmp ne i32 %R98932, 0
  br i1 %cond3, label %L1814, label %L1815

L1814:                                            ; preds = %L1813
  call void @field(%struct.LexState* %ARG1, %struct.expdesc* %ARG2)
  store i32 1, i32* %0
  br label %L1815

L1815:                                            ; preds = %L1814, %L1813
  %5 = load i32, i32* %0
  ret i32 %5
}

define internal void @funcstat(%struct.LexState* %ARG1, i32 %ARG2) {
L1816:
  %b_0x62d000c1a2f8 = alloca %struct.expdesc
  %v_0x62d000c1a210 = alloca %struct.expdesc
  call void @luaX_next(%struct.LexState* %ARG1)
  %R9901 = call i32 @funcname(%struct.LexState* %ARG1, %struct.expdesc* %v_0x62d000c1a210)
  call void @body(%struct.LexState* %ARG1, %struct.expdesc* %b_0x62d000c1a2f8, i32 %R9901, i32 %ARG2)
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  call void @luaK_storevar(%struct.FuncState* %load_target, %struct.expdesc* %v_0x62d000c1a210, %struct.expdesc* %b_0x62d000c1a2f8)
  %4 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %5 = bitcast %struct.FuncState** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 48
  %7 = bitcast i8* %6 to %struct.FuncState**
  %load_target1 = load %struct.FuncState*, %struct.FuncState** %7
  call void @luaK_fixline(%struct.FuncState* %load_target1, i32 %ARG2)
  ret void
}

define internal void @exprstat(%struct.LexState* %ARG1) {
L1817:
  %v_0x62d000c58a70 = alloca %struct.LHS_assign
  %0 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %1 = bitcast %struct.FuncState** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 48
  %3 = bitcast i8* %2 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %3
  %R9916 = bitcast %struct.LHS_assign* %v_0x62d000c58a70 to i8*
  %4 = getelementptr inbounds i8, i8* %R9916, i32 8
  call void @primaryexp(%struct.LexState* %ARG1, i8* %4)
  %5 = bitcast %struct.LHS_assign* %v_0x62d000c58a70 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R9920 = icmp eq i32 %load_target1, 13
  %R99202 = zext i1 %R9920 to i32
  %cond = icmp ne i32 %R99202, 0
  br i1 %cond, label %L1818, label %L1819

L1818:                                            ; preds = %L1817
  %9 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %10 = bitcast %struct.Proto** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to %struct.Proto**
  %load_target3 = load %struct.Proto*, %struct.Proto** %12
  %13 = bitcast %struct.Proto* %load_target3 to i32**
  %14 = bitcast i32** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 24
  %16 = bitcast i8* %15 to i32**
  %load_target4 = load i32*, i32** %16
  %17 = bitcast %struct.LHS_assign* %v_0x62d000c58a70 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to i32*
  %load_target5 = load i32, i32* %20
  %R9925 = sext i32 %load_target5 to i64
  %R9926 = mul i64 %R9925, 4
  %21 = bitcast i32* %load_target4 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %R9926
  %23 = bitcast i8* %22 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to i32*
  %load_target6 = load i32, i32* %26
  %R9929 = and i32 %load_target6, -8372225
  %R9930 = or i32 %R9929, 16384
  %27 = bitcast i32* %23 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to i32*
  store i32 %R9930, i32* %29
  br label %L1820

L1819:                                            ; preds = %L1817
  %30 = bitcast %struct.LHS_assign* %v_0x62d000c58a70 to %struct.LHS_assign**
  %31 = bitcast %struct.LHS_assign** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to %struct.LHS_assign**
  store %struct.LHS_assign* null, %struct.LHS_assign** %33
  call void @assignment(%struct.LexState* %ARG1, i8* %R9916, i32 1)
  br label %L1820

L1820:                                            ; preds = %L1819, %L1818
  ret void
}

define internal void @retstat(%struct.LexState* %ARG1) {
L1821:
  %e_0x62d000c59638 = alloca %struct.expdesc
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %3 = bitcast %struct.FuncState** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 48
  %5 = bitcast i8* %4 to %struct.FuncState**
  %load_target = load %struct.FuncState*, %struct.FuncState** %5
  call void @luaX_next(%struct.LexState* %ARG1)
  %6 = bitcast %struct.LexState* %ARG1 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to i32*
  %load_target1 = load i32, i32* %9
  %R9945 = call i32 @block_follow(i32 %load_target1)
  %cond = icmp ne i32 %R9945, 0
  br i1 %cond, label %L1823, label %L1822

L1822:                                            ; preds = %L1821
  %10 = bitcast %struct.LexState* %ARG1 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  %13 = bitcast i8* %12 to i32*
  %load_target2 = load i32, i32* %13
  %R9948 = icmp eq i32 %load_target2, 59
  %R99483 = zext i1 %R9948 to i32
  %cond4 = icmp ne i32 %R99483, 0
  br i1 %cond4, label %L1823, label %L1824

L1823:                                            ; preds = %L1822, %L1821
  store i32 0, i32* %1
  store i32 0, i32* %0
  br label %L1831

L1824:                                            ; preds = %L1822
  %R9951 = call i32 @explist1(%struct.LexState* %ARG1, %struct.expdesc* %e_0x62d000c59638)
  %14 = bitcast %struct.expdesc* %e_0x62d000c59638 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i32*
  %load_target5 = load i32, i32* %17
  %R9954 = icmp eq i32 %load_target5, 13
  %R99546 = zext i1 %R9954 to i32
  %R9957 = icmp eq i32 %load_target5, 14
  %R99577 = zext i1 %R9957 to i32
  %18 = icmp ne i32 %R99546, 0
  %19 = icmp ne i32 %R99577, 0
  %R9958 = or i1 %18, %19
  %R99588 = zext i1 %R9958 to i32
  %R9965 = icmp eq i32 %R9951, 1
  %R99659 = zext i1 %R9965 to i32
  %cond10 = icmp ne i32 %R99588, 0
  br i1 %cond10, label %L1825, label %L1828

L1825:                                            ; preds = %L1824
  call void @luaK_setreturns(%struct.FuncState* %load_target, %struct.expdesc* %e_0x62d000c59638, i32 -1)
  %20 = bitcast %struct.expdesc* %e_0x62d000c59638 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i32*
  %load_target11 = load i32, i32* %23
  %R9963 = icmp eq i32 %load_target11, 13
  %R996312 = zext i1 %R9963 to i32
  %24 = icmp ne i32 %R996312, 0
  %25 = icmp ne i32 %R99659, 0
  %R9966 = and i1 %24, %25
  %R996613 = zext i1 %R9966 to i32
  %cond14 = icmp ne i32 %R996613, 0
  br i1 %cond14, label %L1826, label %L1827

L1826:                                            ; preds = %L1825
  %26 = bitcast %struct.FuncState* %load_target to %struct.Proto**
  %27 = bitcast %struct.Proto** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to %struct.Proto**
  %load_target15 = load %struct.Proto*, %struct.Proto** %29
  %30 = bitcast %struct.Proto* %load_target15 to i32**
  %31 = bitcast i32** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 24
  %33 = bitcast i8* %32 to i32**
  %load_target16 = load i32*, i32** %33
  %34 = bitcast %struct.expdesc* %e_0x62d000c59638 to i32*
  %35 = bitcast i32* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 8
  %37 = bitcast i8* %36 to i32*
  %load_target17 = load i32, i32* %37
  %R9971 = sext i32 %load_target17 to i64
  %R9972 = mul i64 %R9971, 4
  %38 = bitcast i32* %load_target16 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %R9972
  %40 = bitcast i8* %39 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to i32*
  %load_target18 = load i32, i32* %43
  %R9975 = and i32 %load_target18, -64
  %R9976 = or i32 %R9975, 29
  %44 = bitcast i32* %40 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to i32*
  store i32 %R9976, i32* %46
  br label %L1827

L1827:                                            ; preds = %L1826, %L1825
  %47 = bitcast %struct.FuncState* %load_target to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 74
  %load_target19 = load i8, i8* %48
  %R9986 = zext i8 %load_target19 to i32
  store i32 -1, i32* %1
  store i32 %R9986, i32* %0
  br label %L1831

L1828:                                            ; preds = %L1824
  store i32 %R9951, i32* %1
  %cond20 = icmp ne i32 %R99659, 0
  br i1 %cond20, label %L1829, label %L1830

L1829:                                            ; preds = %L1828
  %R9991 = call i32 @luaK_exp2anyreg(%struct.FuncState* %load_target, %struct.expdesc* %e_0x62d000c59638)
  store i32 %R9991, i32* %0
  br label %L1831

L1830:                                            ; preds = %L1828
  call void @luaK_exp2nextreg(%struct.FuncState* %load_target, %struct.expdesc* %e_0x62d000c59638)
  %49 = bitcast %struct.FuncState* %load_target to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 74
  %load_target21 = load i8, i8* %50
  %R9996 = zext i8 %load_target21 to i32
  store i32 %R9996, i32* %0
  br label %L1831

L1831:                                            ; preds = %L1830, %L1829, %L1827, %L1823
  %51 = load i32, i32* %0
  %52 = load i32, i32* %1
  call void @luaK_ret(%struct.FuncState* %load_target, i32 %51, i32 %52)
  ret void
}

define internal i32 @statement(%struct.LexState* %ARG1) {
L1832:
  %0 = alloca i32
  %1 = bitcast %struct.LexState* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 4
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %5 = bitcast %struct.LexState* %ARG1 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  switch i32 %load_target1, label %L1845 [
    i32 258, label %L1844
    i32 259, label %L1835
    i32 264, label %L1836
    i32 265, label %L1838
    i32 266, label %L1833
    i32 268, label %L1839
    i32 272, label %L1837
    i32 273, label %L1843
    i32 277, label %L1834
  ]

L1833:                                            ; preds = %L1832
  call void @ifstat(%struct.LexState* %ARG1, i32 %load_target)
  store i32 0, i32* %0
  br label %L1846

L1834:                                            ; preds = %L1832
  call void @whilestat(%struct.LexState* %ARG1, i32 %load_target)
  store i32 0, i32* %0
  br label %L1846

L1835:                                            ; preds = %L1832
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @block(%struct.LexState* %ARG1)
  call void @check_match(%struct.LexState* %ARG1, i32 262, i32 259, i32 %load_target)
  store i32 0, i32* %0
  br label %L1846

L1836:                                            ; preds = %L1832
  call void @forstat(%struct.LexState* %ARG1, i32 %load_target)
  store i32 0, i32* %0
  br label %L1846

L1837:                                            ; preds = %L1832
  call void @repeatstat(%struct.LexState* %ARG1, i32 %load_target)
  store i32 0, i32* %0
  br label %L1846

L1838:                                            ; preds = %L1832
  call void @funcstat(%struct.LexState* %ARG1, i32 %load_target)
  store i32 0, i32* %0
  br label %L1846

L1839:                                            ; preds = %L1832
  call void @luaX_next(%struct.LexState* %ARG1)
  %R10021 = call i32 @testnext(%struct.LexState* %ARG1, i32 265)
  %cond = icmp ne i32 %R10021, 0
  br i1 %cond, label %L1840, label %L1841

L1840:                                            ; preds = %L1839
  call void @localfunc(%struct.LexState* %ARG1)
  br label %L1842

L1841:                                            ; preds = %L1839
  call void @localstat(%struct.LexState* %ARG1)
  br label %L1842

L1842:                                            ; preds = %L1841, %L1840
  store i32 0, i32* %0
  br label %L1846

L1843:                                            ; preds = %L1832
  call void @retstat(%struct.LexState* %ARG1)
  store i32 1, i32* %0
  br label %L1846

L1844:                                            ; preds = %L1832
  call void @luaX_next(%struct.LexState* %ARG1)
  call void @breakstat(%struct.LexState* %ARG1)
  store i32 1, i32* %0
  br label %L1846

L1845:                                            ; preds = %L1832
  call void @exprstat(%struct.LexState* %ARG1)
  store i32 0, i32* %0
  br label %L1846

L1846:                                            ; preds = %L1845, %L1844, %L1843, %L1842, %L1838, %L1837, %L1836, %L1835, %L1834, %L1833
  %9 = load i32, i32* %0
  ret i32 %9
}

define internal void @chunk.112(%struct.LexState* %ARG1) {
L1847:
  call void @enterlevel(%struct.LexState* %ARG1)
  br label %L1848

L1848:                                            ; preds = %L1849, %L1847
  %0 = bitcast %struct.LexState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R10032 = call i32 @block_follow(i32 %load_target)
  %cond = icmp ne i32 %R10032, 0
  br i1 %cond, label %L1850, label %L1849

L1849:                                            ; preds = %L1848
  %R10034 = call i32 @statement(%struct.LexState* %ARG1)
  %R10036 = call i32 @testnext(%struct.LexState* %ARG1, i32 59)
  %4 = bitcast %struct.LexState* %ARG1 to %struct.FuncState**
  %5 = bitcast %struct.FuncState** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 48
  %7 = bitcast i8* %6 to %struct.FuncState**
  %load_target1 = load %struct.FuncState*, %struct.FuncState** %7
  %8 = bitcast %struct.FuncState* %load_target1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 74
  %load_target2 = load i8, i8* %9
  %R10040 = zext i8 %load_target2 to i32
  %10 = bitcast %struct.FuncState* %load_target1 to i32*
  %11 = bitcast i32* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 60
  %13 = bitcast i8* %12 to i32*
  store i32 %R10040, i32* %13
  %cond3 = icmp ne i32 %R10034, 0
  br i1 %cond3, label %L1850, label %L1848

L1850:                                            ; preds = %L1849, %L1848
  %14 = bitcast %struct.LexState* %ARG1 to %struct.lua_State**
  %15 = bitcast %struct.lua_State** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 56
  %17 = bitcast i8* %16 to %struct.lua_State**
  %load_target4 = load %struct.lua_State*, %struct.lua_State** %17
  %18 = bitcast %struct.lua_State* %load_target4 to i16*
  %19 = bitcast i16* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 96
  %21 = bitcast i8* %20 to i16*
  %load_target5 = load i16, i16* %21
  %R10046 = add i16 %load_target5, -1
  %22 = bitcast %struct.lua_State* %load_target4 to i16*
  %23 = bitcast i16* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 96
  %25 = bitcast i8* %24 to i16*
  store i16 %R10046, i16* %25
  ret void
}

define internal %struct.lua_TValue* @luaV_tonumber.113(%struct.lua_TValue* %ARG1, %struct.lua_TValue* %ARG2) {
L1851:
  %num_0x62d000c5ba78 = alloca double
  %0 = alloca %struct.lua_TValue*
  %1 = bitcast %struct.lua_TValue* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R10050 = icmp eq i32 %load_target, 3
  %R100501 = zext i1 %R10050 to i32
  %cond = icmp ne i32 %R100501, 0
  br i1 %cond, label %L1852, label %L1853

L1852:                                            ; preds = %L1851
  store %struct.lua_TValue* %ARG1, %struct.lua_TValue** %0
  br label %L1857

L1853:                                            ; preds = %L1851
  %R10056 = icmp eq i32 %load_target, 4
  %R100562 = zext i1 %R10056 to i32
  %cond3 = icmp ne i32 %R100562, 0
  br i1 %cond3, label %L1854, label %L1856

L1854:                                            ; preds = %L1853
  %5 = bitcast %struct.lua_TValue* %ARG1 to { [184 x i8] }**
  %6 = bitcast { [184 x i8] }** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %8
  %9 = bitcast { [184 x i8] }* %load_target4 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to { [184 x i8] }*
  %R10061 = bitcast { [184 x i8] }* %11 to i8*
  %R10063 = call i32 @luaO_str2d(i8* %R10061, double* %num_0x62d000c5ba78)
  %cond5 = icmp ne i32 %R10063, 0
  br i1 %cond5, label %L1855, label %L1856

L1855:                                            ; preds = %L1854
  %12 = bitcast double* %num_0x62d000c5ba78 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to double*
  %load_target6 = load double, double* %14
  %15 = bitcast %struct.lua_TValue* %ARG2 to double*
  %16 = bitcast double* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = bitcast i8* %17 to double*
  store double %load_target6, double* %18
  %19 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 3, i32* %22
  store %struct.lua_TValue* %ARG2, %struct.lua_TValue** %0
  br label %L1857

L1856:                                            ; preds = %L1854, %L1853
  store %struct.lua_TValue* null, %struct.lua_TValue** %0
  br label %L1857

L1857:                                            ; preds = %L1856, %L1855, %L1852
  %23 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  ret %struct.lua_TValue* %23
}

define internal i32 @luaV_tostring(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2) {
L1858:
  %s_0x62d000c5c640 = alloca [32 x i8]
  %0 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R10071 = icmp eq i32 %load_target, 3
  %R100711 = zext i1 %R10071 to i32
  %cond = icmp ne i32 %R100711, 0
  br i1 %cond, label %L1859, label %L1860

L1859:                                            ; preds = %L1858
  %4 = bitcast %struct.lua_TValue* %ARG2 to double*
  %5 = bitcast double* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to double*
  %load_target2 = load double, double* %7
  %R10075 = bitcast [32 x i8]* %s_0x62d000c5c640 to i8*
  %R10078 = call i32 (i8*, i8*, ...) @sprintf(i8* %R10075, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i64 0, i64 0), double %load_target2)
  %R10083 = call i64 @strlen(i8* %R10075)
  %R10084 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %R10075, i64 %R10083)
  %R10085 = bitcast { [24 x i8] }* %R10084 to { [184 x i8] }*
  %8 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  store { [184 x i8] }* %R10085, { [184 x i8] }** %11
  %12 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 4, i32* %15
  br label %L1860

L1860:                                            ; preds = %L1859, %L1858
  ret i32 %R100711
}

define internal void @callTMres(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4, %struct.lua_TValue* %ARG5) {
L1861:
  %R10089 = bitcast %struct.lua_TValue* %ARG2 to i8*
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 64
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %R10092 = bitcast %struct.lua_TValue* %load_target to i8*
  %R10093 = sub i8* %R10089, %R10092
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %9 = bitcast { [8 x i8] }* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [8 x i8] }*
  %load_target2 = load { [8 x i8] }, { [8 x i8] }* %11
  %12 = bitcast %struct.lua_TValue* %load_target1 to { [8 x i8] }*
  %13 = bitcast { [8 x i8] }* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [8 x i8] }*
  store { [8 x i8] } %load_target2, { [8 x i8] }* %15
  %16 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  %load_target3 = load i32, i32* %19
  %20 = bitcast %struct.lua_TValue* %load_target1 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %load_target3, i32* %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %ARG4 to { [8 x i8] }*
  %29 = bitcast { [8 x i8] }* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [8 x i8] }*
  %load_target5 = load { [8 x i8] }, { [8 x i8] }* %31
  %32 = bitcast %struct.lua_TValue* %load_target4 to { [8 x i8] }*
  %33 = bitcast { [8 x i8] }* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 16
  %35 = bitcast i8* %34 to { [8 x i8] }*
  store { [8 x i8] } %load_target5, { [8 x i8] }* %35
  %36 = bitcast %struct.lua_TValue* %ARG4 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  %load_target6 = load i32, i32* %39
  %40 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 24
  %43 = bitcast i8* %42 to i32*
  store i32 %load_target6, i32* %43
  %44 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %45 = bitcast %struct.lua_TValue** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 16
  %47 = bitcast i8* %46 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %47
  %48 = bitcast %struct.lua_TValue* %ARG5 to { [8 x i8] }*
  %49 = bitcast { [8 x i8] }* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to { [8 x i8] }*
  %load_target8 = load { [8 x i8] }, { [8 x i8] }* %51
  %52 = bitcast %struct.lua_TValue* %load_target7 to { [8 x i8] }*
  %53 = bitcast { [8 x i8] }* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 32
  %55 = bitcast i8* %54 to { [8 x i8] }*
  store { [8 x i8] } %load_target8, { [8 x i8] }* %55
  %56 = bitcast %struct.lua_TValue* %ARG5 to i32*
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = bitcast i8* %58 to i32*
  %load_target9 = load i32, i32* %59
  %60 = bitcast %struct.lua_TValue* %load_target7 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 40
  %63 = bitcast i8* %62 to i32*
  store i32 %load_target9, i32* %63
  %64 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %65 = bitcast %struct.lua_TValue** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 56
  %67 = bitcast i8* %66 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %67
  %R10128 = bitcast %struct.lua_TValue* %load_target10 to i8*
  %68 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %69 = bitcast %struct.lua_TValue** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %71
  %R10131 = bitcast %struct.lua_TValue* %load_target11 to i8*
  %R10132 = sub i8* %R10128, %R10131
  %R10133 = icmp sle i8* %R10132, i64 48
  %R1013312 = zext i1 %R10133 to i32
  %cond = icmp ne i32 %R1013312, 0
  br i1 %cond, label %L1862, label %L1863

L1862:                                            ; preds = %L1861
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 3)
  br label %L1863

L1863:                                            ; preds = %L1862, %L1861
  %72 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %73 = bitcast %struct.lua_TValue** %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 16
  %75 = bitcast i8* %74 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %75
  %R10137 = ptrtoint %struct.lua_TValue* %load_target13 to i64
  %R10138 = add i64 %R10137, 48
  %R10139 = inttoptr i64 %R10138 to %struct.lua_TValue*
  %76 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %77 = bitcast %struct.lua_TValue** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 16
  %79 = bitcast i8* %78 to %struct.lua_TValue**
  store %struct.lua_TValue* %R10139, %struct.lua_TValue** %79
  %80 = bitcast %struct.lua_TValue* %R10139 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 -48
  %82 = bitcast i8* %81 to %struct.lua_TValue*
  call void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %82, i32 1)
  %83 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %84 = bitcast %struct.lua_TValue** %83 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 64
  %86 = bitcast i8* %85 to %struct.lua_TValue**
  %load_target14 = load %struct.lua_TValue*, %struct.lua_TValue** %86
  %R10146 = bitcast %struct.lua_TValue* %load_target14 to i8*
  %87 = getelementptr inbounds i8, i8* %R10146, %R10093
  %R10149 = bitcast i8* %87 to %struct.lua_TValue*
  %88 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %89 = bitcast %struct.lua_TValue** %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 16
  %91 = bitcast i8* %90 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %91
  %92 = bitcast %struct.lua_TValue* %load_target15 to i8*
  %93 = getelementptr inbounds i8, i8* %92, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %94 = bitcast i8* %93 to %struct.lua_TValue*
  %95 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %96 = bitcast %struct.lua_TValue** %95 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 16
  %98 = bitcast i8* %97 to %struct.lua_TValue**
  store %struct.lua_TValue* %94, %struct.lua_TValue** %98
  %99 = bitcast %struct.lua_TValue* %load_target15 to { [8 x i8] }*
  %100 = bitcast { [8 x i8] }* %99 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 -16
  %102 = bitcast i8* %101 to { [8 x i8] }*
  %load_target16 = load { [8 x i8] }, { [8 x i8] }* %102
  %103 = bitcast %struct.lua_TValue* %R10149 to { [8 x i8] }*
  %104 = bitcast { [8 x i8] }* %103 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 0
  %106 = bitcast i8* %105 to { [8 x i8] }*
  store { [8 x i8] } %load_target16, { [8 x i8] }* %106
  %107 = bitcast %struct.lua_TValue* %load_target15 to i32*
  %108 = bitcast i32* %107 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 -8
  %110 = bitcast i8* %109 to i32*
  %load_target17 = load i32, i32* %110
  %111 = bitcast %struct.lua_TValue* %R10149 to i32*
  %112 = bitcast i32* %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 8
  %114 = bitcast i8* %113 to i32*
  store i32 %load_target17, i32* %114
  ret void
}

define internal void @callTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4, %struct.lua_TValue* %ARG5) {
L1864:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %ARG2 to { [8 x i8] }*
  %5 = bitcast { [8 x i8] }* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to { [8 x i8] }*
  %load_target1 = load { [8 x i8] }, { [8 x i8] }* %7
  %8 = bitcast %struct.lua_TValue* %load_target to { [8 x i8] }*
  %9 = bitcast { [8 x i8] }* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [8 x i8] }*
  store { [8 x i8] } %load_target1, { [8 x i8] }* %11
  %12 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target2 = load i32, i32* %15
  %16 = bitcast %struct.lua_TValue* %load_target to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %load_target2, i32* %19
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %24 = bitcast %struct.lua_TValue* %ARG3 to { [8 x i8] }*
  %25 = bitcast { [8 x i8] }* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to { [8 x i8] }*
  %load_target4 = load { [8 x i8] }, { [8 x i8] }* %27
  %28 = bitcast %struct.lua_TValue* %load_target3 to { [8 x i8] }*
  %29 = bitcast { [8 x i8] }* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to { [8 x i8] }*
  store { [8 x i8] } %load_target4, { [8 x i8] }* %31
  %32 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %33 = bitcast i32* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i32*
  %load_target5 = load i32, i32* %35
  %36 = bitcast %struct.lua_TValue* %load_target3 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 24
  %39 = bitcast i8* %38 to i32*
  store i32 %load_target5, i32* %39
  %40 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %41 = bitcast %struct.lua_TValue** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to %struct.lua_TValue**
  %load_target6 = load %struct.lua_TValue*, %struct.lua_TValue** %43
  %44 = bitcast %struct.lua_TValue* %ARG4 to { [8 x i8] }*
  %45 = bitcast { [8 x i8] }* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to { [8 x i8] }*
  %load_target7 = load { [8 x i8] }, { [8 x i8] }* %47
  %48 = bitcast %struct.lua_TValue* %load_target6 to { [8 x i8] }*
  %49 = bitcast { [8 x i8] }* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 32
  %51 = bitcast i8* %50 to { [8 x i8] }*
  store { [8 x i8] } %load_target7, { [8 x i8] }* %51
  %52 = bitcast %struct.lua_TValue* %ARG4 to i32*
  %53 = bitcast i32* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 8
  %55 = bitcast i8* %54 to i32*
  %load_target8 = load i32, i32* %55
  %56 = bitcast %struct.lua_TValue* %load_target6 to i32*
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 40
  %59 = bitcast i8* %58 to i32*
  store i32 %load_target8, i32* %59
  %60 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %61 = bitcast %struct.lua_TValue** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 16
  %63 = bitcast i8* %62 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %63
  %64 = bitcast %struct.lua_TValue* %ARG5 to { [8 x i8] }*
  %65 = bitcast { [8 x i8] }* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = bitcast i8* %66 to { [8 x i8] }*
  %load_target10 = load { [8 x i8] }, { [8 x i8] }* %67
  %68 = bitcast %struct.lua_TValue* %load_target9 to { [8 x i8] }*
  %69 = bitcast { [8 x i8] }* %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 48
  %71 = bitcast i8* %70 to { [8 x i8] }*
  store { [8 x i8] } %load_target10, { [8 x i8] }* %71
  %72 = bitcast %struct.lua_TValue* %ARG5 to i32*
  %73 = bitcast i32* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 8
  %75 = bitcast i8* %74 to i32*
  %load_target11 = load i32, i32* %75
  %76 = bitcast %struct.lua_TValue* %load_target9 to i32*
  %77 = bitcast i32* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 56
  %79 = bitcast i8* %78 to i32*
  store i32 %load_target11, i32* %79
  %80 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %81 = bitcast %struct.lua_TValue** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 56
  %83 = bitcast i8* %82 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %83
  %R10208 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %84 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %85 = bitcast %struct.lua_TValue** %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8* %86 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %87
  %R10211 = bitcast %struct.lua_TValue* %load_target13 to i8*
  %R10212 = sub i8* %R10208, %R10211
  %R10213 = icmp sle i8* %R10212, i64 64
  %R1021314 = zext i1 %R10213 to i32
  %cond = icmp ne i32 %R1021314, 0
  br i1 %cond, label %L1865, label %L1866

L1865:                                            ; preds = %L1864
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 4)
  br label %L1866

L1866:                                            ; preds = %L1865, %L1864
  %88 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %89 = bitcast %struct.lua_TValue** %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 16
  %91 = bitcast i8* %90 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %91
  %R10217 = ptrtoint %struct.lua_TValue* %load_target15 to i64
  %R10218 = add i64 %R10217, 64
  %R10219 = inttoptr i64 %R10218 to %struct.lua_TValue*
  %92 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %93 = bitcast %struct.lua_TValue** %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 16
  %95 = bitcast i8* %94 to %struct.lua_TValue**
  store %struct.lua_TValue* %R10219, %struct.lua_TValue** %95
  %96 = bitcast %struct.lua_TValue* %R10219 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 -64
  %98 = bitcast i8* %97 to %struct.lua_TValue*
  call void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %98, i32 0)
  ret void
}

define internal void @luaV_gettable(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4) {
L1867:
  %0 = alloca i32
  %1 = alloca %struct.lua_TValue*
  %2 = alloca %struct.lua_TValue*
  store %struct.lua_TValue* %ARG2, %struct.lua_TValue** %1
  store i32 0, i32* %0
  br label %L1868

L1868:                                            ; preds = %L1879, %L1867
  %3 = load i32, i32* %0
  %R10225 = icmp slt i32 %3, 100
  %R102251 = zext i1 %R10225 to i32
  %cond = icmp ne i32 %R102251, 0
  br i1 %cond, label %L1869, label %L1880

L1869:                                            ; preds = %L1868
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  %5 = bitcast %struct.lua_TValue* %4 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target = load i32, i32* %8
  %R10229 = icmp eq i32 %load_target, 5
  %R102292 = zext i1 %R10229 to i32
  %cond3 = icmp ne i32 %R102292, 0
  br i1 %cond3, label %L1870, label %L1875

L1870:                                            ; preds = %L1869
  %9 = bitcast %struct.lua_TValue* %4 to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %12
  %R10235 = call %struct.lua_TValue* @luaH_get({ [184 x i8] }* %load_target4, %struct.lua_TValue* %ARG3)
  %13 = bitcast %struct.lua_TValue* %R10235 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  %load_target5 = load i32, i32* %16
  %cond6 = icmp ne i32 %load_target5, 0
  br i1 %cond6, label %L1874, label %L1871

L1871:                                            ; preds = %L1870
  %17 = bitcast { [184 x i8] }* %load_target4 to %struct.Table**
  %18 = bitcast %struct.Table** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to %struct.Table**
  %load_target7 = load %struct.Table*, %struct.Table** %20
  %cond8 = icmp ne %struct.Table* %load_target7, null
  br i1 %cond8, label %L1872, label %L1874

L1872:                                            ; preds = %L1871
  %21 = bitcast %struct.Table* %load_target7 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 10
  %load_target9 = load i8, i8* %22
  %R10246 = zext i8 %load_target9 to i32
  %R10247 = and i32 %R10246, 1
  %cond10 = icmp ne i32 %R10247, 0
  br i1 %cond10, label %L1874, label %L1873

L1873:                                            ; preds = %L1872
  %23 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %24 = bitcast %struct.global_State** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 32
  %26 = bitcast i8* %25 to %struct.global_State**
  %load_target11 = load %struct.global_State*, %struct.global_State** %26
  %27 = bitcast %struct.global_State* %load_target11 to { [24 x i8] }**
  %28 = bitcast { [24 x i8] }** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 296
  %30 = bitcast i8* %29 to { [24 x i8] }**
  %load_target12 = load { [24 x i8] }*, { [24 x i8] }** %30
  %R10253 = call %struct.lua_TValue* @luaT_gettm(%struct.Table* %load_target7, i32 0, { [24 x i8] }* %load_target12)
  store %struct.lua_TValue* %R10253, %struct.lua_TValue** %2
  %cond13 = icmp ne %struct.lua_TValue* %R10253, null
  br i1 %cond13, label %L1877, label %L1874

L1874:                                            ; preds = %L1873, %L1872, %L1871, %L1870
  %31 = bitcast %struct.lua_TValue* %R10235 to { [8 x i8] }*
  %32 = bitcast { [8 x i8] }* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 0
  %34 = bitcast i8* %33 to { [8 x i8] }*
  %load_target14 = load { [8 x i8] }, { [8 x i8] }* %34
  %35 = bitcast %struct.lua_TValue* %ARG4 to { [8 x i8] }*
  %36 = bitcast { [8 x i8] }* %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to { [8 x i8] }*
  store { [8 x i8] } %load_target14, { [8 x i8] }* %38
  %39 = bitcast %struct.lua_TValue* %R10235 to i32*
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to i32*
  %load_target15 = load i32, i32* %42
  %43 = bitcast %struct.lua_TValue* %ARG4 to i32*
  %44 = bitcast i32* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = bitcast i8* %45 to i32*
  store i32 %load_target15, i32* %46
  br label %L1881

L1875:                                            ; preds = %L1869
  %R10268 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %4, i32 0)
  %47 = bitcast %struct.lua_TValue* %R10268 to i32*
  %48 = bitcast i32* %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  %50 = bitcast i8* %49 to i32*
  %load_target16 = load i32, i32* %50
  store %struct.lua_TValue* %R10268, %struct.lua_TValue** %2
  %cond17 = icmp ne i32 %load_target16, 0
  br i1 %cond17, label %L1877, label %L1876

L1876:                                            ; preds = %L1875
  call void @luaG_typeerror(%struct.lua_State* %ARG1, %struct.lua_TValue* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i64 0, i64 0))
  br label %L1877

L1877:                                            ; preds = %L1876, %L1875, %L1873
  %51 = load %struct.lua_TValue*, %struct.lua_TValue** %2
  %52 = bitcast %struct.lua_TValue* %51 to i32*
  %53 = bitcast i32* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 8
  %55 = bitcast i8* %54 to i32*
  %load_target18 = load i32, i32* %55
  %R10278 = icmp eq i32 %load_target18, 6
  %R1027819 = zext i1 %R10278 to i32
  %cond20 = icmp ne i32 %R1027819, 0
  br i1 %cond20, label %L1878, label %L1879

L1878:                                            ; preds = %L1877
  call void @callTMres(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG4, %struct.lua_TValue* %51, %struct.lua_TValue* %4, %struct.lua_TValue* %ARG3)
  br label %L1881

L1879:                                            ; preds = %L1877
  store %struct.lua_TValue* %51, %struct.lua_TValue** %1
  %R10286 = add i32 %3, 1
  store i32 %R10286, i32* %0
  br label %L1868

L1880:                                            ; preds = %L1868
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.116, i64 0, i64 0))
  br label %L1881

L1881:                                            ; preds = %L1880, %L1878, %L1874
  ret void
}

define internal void @luaV_settable(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4) {
L1882:
  %temp_0x62d000c65b60 = alloca %struct.lua_TValue
  %0 = alloca i32
  %1 = alloca %struct.lua_TValue*
  %2 = alloca %struct.lua_TValue*
  store %struct.lua_TValue* %ARG2, %struct.lua_TValue** %1
  store i32 0, i32* %0
  br label %L1883

L1883:                                            ; preds = %L1897, %L1882
  %3 = load i32, i32* %0
  %R10290 = icmp slt i32 %3, 100
  %R102901 = zext i1 %R10290 to i32
  %cond = icmp ne i32 %R102901, 0
  br i1 %cond, label %L1884, label %L1898

L1884:                                            ; preds = %L1883
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  %5 = bitcast %struct.lua_TValue* %4 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target = load i32, i32* %8
  %R10294 = icmp eq i32 %load_target, 5
  %R102942 = zext i1 %R10294 to i32
  %cond3 = icmp ne i32 %R102942, 0
  br i1 %cond3, label %L1885, label %L1893

L1885:                                            ; preds = %L1884
  %9 = bitcast %struct.lua_TValue* %4 to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %12
  %R10301 = call %struct.lua_TValue* @luaH_set(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target4, %struct.lua_TValue* %ARG3)
  %13 = bitcast %struct.lua_TValue* %R10301 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  %load_target5 = load i32, i32* %16
  %cond6 = icmp ne i32 %load_target5, 0
  br i1 %cond6, label %L1889, label %L1886

L1886:                                            ; preds = %L1885
  %17 = bitcast { [184 x i8] }* %load_target4 to %struct.Table**
  %18 = bitcast %struct.Table** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to %struct.Table**
  %load_target7 = load %struct.Table*, %struct.Table** %20
  %cond8 = icmp ne %struct.Table* %load_target7, null
  br i1 %cond8, label %L1887, label %L1889

L1887:                                            ; preds = %L1886
  %21 = bitcast %struct.Table* %load_target7 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 10
  %load_target9 = load i8, i8* %22
  %R10311 = zext i8 %load_target9 to i32
  %R10312 = and i32 %R10311, 2
  %cond10 = icmp ne i32 %R10312, 0
  br i1 %cond10, label %L1889, label %L1888

L1888:                                            ; preds = %L1887
  %23 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %24 = bitcast %struct.global_State** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 32
  %26 = bitcast i8* %25 to %struct.global_State**
  %load_target11 = load %struct.global_State*, %struct.global_State** %26
  %27 = bitcast %struct.global_State* %load_target11 to { [24 x i8] }**
  %28 = bitcast { [24 x i8] }** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 304
  %30 = bitcast i8* %29 to { [24 x i8] }**
  %load_target12 = load { [24 x i8] }*, { [24 x i8] }** %30
  %R10318 = call %struct.lua_TValue* @luaT_gettm(%struct.Table* %load_target7, i32 1, { [24 x i8] }* %load_target12)
  store %struct.lua_TValue* %R10318, %struct.lua_TValue** %2
  %cond13 = icmp ne %struct.lua_TValue* %R10318, null
  br i1 %cond13, label %L1895, label %L1889

L1889:                                            ; preds = %L1888, %L1887, %L1886, %L1885
  %31 = bitcast %struct.lua_TValue* %ARG4 to { [8 x i8] }*
  %32 = bitcast { [8 x i8] }* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 0
  %34 = bitcast i8* %33 to { [8 x i8] }*
  %load_target14 = load { [8 x i8] }, { [8 x i8] }* %34
  %35 = bitcast %struct.lua_TValue* %R10301 to { [8 x i8] }*
  %36 = bitcast { [8 x i8] }* %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to { [8 x i8] }*
  store { [8 x i8] } %load_target14, { [8 x i8] }* %38
  %39 = bitcast %struct.lua_TValue* %ARG4 to i32*
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to i32*
  %load_target15 = load i32, i32* %42
  %43 = bitcast %struct.lua_TValue* %R10301 to i32*
  %44 = bitcast i32* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = bitcast i8* %45 to i32*
  store i32 %load_target15, i32* %46
  %47 = bitcast { [184 x i8] }* %load_target4 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 10
  store i8 0, i8* %48
  %49 = bitcast %struct.lua_TValue* %ARG4 to i32*
  %50 = bitcast i32* %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = bitcast i8* %51 to i32*
  %load_target16 = load i32, i32* %52
  %R10334 = icmp sge i32 %load_target16, 4
  %R1033417 = zext i1 %R10334 to i32
  %cond18 = icmp ne i32 %R1033417, 0
  br i1 %cond18, label %L1890, label %L1899

L1890:                                            ; preds = %L1889
  %53 = bitcast %struct.lua_TValue* %ARG4 to { [184 x i8] }**
  %54 = bitcast { [184 x i8] }** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 0
  %56 = bitcast i8* %55 to { [184 x i8] }**
  %load_target19 = load { [184 x i8] }*, { [184 x i8] }** %56
  %57 = bitcast { [184 x i8] }* %load_target19 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 9
  %load_target20 = load i8, i8* %58
  %R10338 = zext i8 %load_target20 to i32
  %R10339 = and i32 %R10338, 3
  %cond21 = icmp ne i32 %R10339, 0
  br i1 %cond21, label %L1891, label %L1899

L1891:                                            ; preds = %L1890
  %59 = bitcast { [184 x i8] }* %load_target4 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 9
  %load_target22 = load i8, i8* %60
  %R10343 = zext i8 %load_target22 to i32
  %R10344 = and i32 %R10343, 4
  %cond23 = icmp ne i32 %R10344, 0
  br i1 %cond23, label %L1892, label %L1899

L1892:                                            ; preds = %L1891
  call void @luaC_barrierback(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target4)
  br label %L1899

L1893:                                            ; preds = %L1884
  %R10349 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %4, i32 1)
  %61 = bitcast %struct.lua_TValue* %R10349 to i32*
  %62 = bitcast i32* %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to i32*
  %load_target24 = load i32, i32* %64
  store %struct.lua_TValue* %R10349, %struct.lua_TValue** %2
  %cond25 = icmp ne i32 %load_target24, 0
  br i1 %cond25, label %L1895, label %L1894

L1894:                                            ; preds = %L1893
  call void @luaG_typeerror(%struct.lua_State* %ARG1, %struct.lua_TValue* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i64 0, i64 0))
  br label %L1895

L1895:                                            ; preds = %L1894, %L1893, %L1888
  %65 = load %struct.lua_TValue*, %struct.lua_TValue** %2
  %66 = bitcast %struct.lua_TValue* %65 to i32*
  %67 = bitcast i32* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = bitcast i8* %68 to i32*
  %load_target26 = load i32, i32* %69
  %R10359 = icmp eq i32 %load_target26, 6
  %R1035927 = zext i1 %R10359 to i32
  %cond28 = icmp ne i32 %R1035927, 0
  br i1 %cond28, label %L1896, label %L1897

L1896:                                            ; preds = %L1895
  call void @callTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %65, %struct.lua_TValue* %4, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4)
  br label %L1899

L1897:                                            ; preds = %L1895
  %70 = bitcast %struct.lua_TValue* %65 to { [8 x i8] }*
  %71 = bitcast { [8 x i8] }* %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 0
  %73 = bitcast i8* %72 to { [8 x i8] }*
  %load_target29 = load { [8 x i8] }, { [8 x i8] }* %73
  %74 = bitcast %struct.lua_TValue* %temp_0x62d000c65b60 to { [8 x i8] }*
  %75 = bitcast { [8 x i8] }* %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 0
  %77 = bitcast i8* %76 to { [8 x i8] }*
  store { [8 x i8] } %load_target29, { [8 x i8] }* %77
  %78 = bitcast %struct.lua_TValue* %temp_0x62d000c65b60 to i32*
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 8
  %81 = bitcast i8* %80 to i32*
  store i32 %load_target26, i32* %81
  store %struct.lua_TValue* %temp_0x62d000c65b60, %struct.lua_TValue** %1
  %R10376 = add i32 %3, 1
  store i32 %R10376, i32* %0
  br label %L1883

L1898:                                            ; preds = %L1883
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.118, i64 0, i64 0))
  br label %L1899

L1899:                                            ; preds = %L1898, %L1896, %L1892, %L1891, %L1890, %L1889
  ret void
}

define internal i32 @call_binTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4, i32 %ARG5) {
L1900:
  %0 = alloca %struct.lua_TValue*
  %R10382 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i32 %ARG5)
  %1 = bitcast %struct.lua_TValue* %R10382 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  store %struct.lua_TValue* %R10382, %struct.lua_TValue** %0
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L1902, label %L1901

L1901:                                            ; preds = %L1900
  %R10390 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG3, i32 %ARG5)
  store %struct.lua_TValue* %R10390, %struct.lua_TValue** %0
  br label %L1902

L1902:                                            ; preds = %L1901, %L1900
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %6 = bitcast %struct.lua_TValue* %5 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to i32*
  %load_target1 = load i32, i32* %9
  %R10395 = icmp ne i32 %load_target1, 0
  %R103952 = zext i1 %R10395 to i32
  %cond3 = icmp ne i32 %load_target1, 0
  br i1 %cond3, label %L1903, label %L1904

L1903:                                            ; preds = %L1902
  call void @callTMres(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG4, %struct.lua_TValue* %5, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3)
  br label %L1904

L1904:                                            ; preds = %L1903, %L1902
  ret i32 %R103952
}

define internal %struct.lua_TValue* @get_compTM(%struct.lua_State* %ARG1, %struct.Table* %ARG2, %struct.Table* %ARG3, i32 %ARG4) {
L1905:
  %0 = alloca %struct.lua_TValue*
  %cond = icmp ne %struct.Table* %ARG2, null
  br i1 %cond, label %L1906, label %L1908

L1906:                                            ; preds = %L1905
  %1 = bitcast %struct.Table* %ARG2 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 10
  %load_target = load i8, i8* %2
  %R10405 = zext i8 %load_target to i32
  %R10408 = shl i32 1, %ARG4
  %R10409 = and i32 %R10405, %R10408
  %cond1 = icmp ne i32 %R10409, 0
  br i1 %cond1, label %L1908, label %L1907

L1907:                                            ; preds = %L1906
  %3 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %4 = bitcast %struct.global_State** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = bitcast i8* %5 to %struct.global_State**
  %load_target2 = load %struct.global_State*, %struct.global_State** %6
  %7 = bitcast %struct.global_State* %load_target2 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i32 296
  %9 = bitcast i8* %8 to %struct.global_State*
  %R10416 = sext i32 %ARG4 to i64
  %R10417 = mul i64 %R10416, 8
  %10 = bitcast %struct.global_State* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %R10417
  %12 = bitcast i8* %11 to %struct.global_State*
  %13 = bitcast %struct.global_State* %12 to { [24 x i8] }**
  %14 = bitcast { [24 x i8] }** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to { [24 x i8] }**
  %load_target3 = load { [24 x i8] }*, { [24 x i8] }** %16
  %R10420 = call %struct.lua_TValue* @luaT_gettm(%struct.Table* %ARG2, i32 %ARG4, { [24 x i8] }* %load_target3)
  %cond4 = icmp ne %struct.lua_TValue* %R10420, null
  br i1 %cond4, label %L1909, label %L1908

L1908:                                            ; preds = %L1907, %L1906, %L1905
  store %struct.lua_TValue* null, %struct.lua_TValue** %0
  br label %L1918

L1909:                                            ; preds = %L1907
  %R10428 = icmp eq %struct.Table* %ARG2, %ARG3
  %R104285 = zext i1 %R10428 to i32
  %cond6 = icmp ne i32 %R104285, 0
  br i1 %cond6, label %L1910, label %L1911

L1910:                                            ; preds = %L1909
  store %struct.lua_TValue* %R10420, %struct.lua_TValue** %0
  br label %L1918

L1911:                                            ; preds = %L1909
  %cond7 = icmp ne %struct.Table* %ARG3, null
  br i1 %cond7, label %L1912, label %L1914

L1912:                                            ; preds = %L1911
  %17 = bitcast %struct.Table* %ARG3 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 10
  %load_target8 = load i8, i8* %18
  %R10434 = zext i8 %load_target8 to i32
  %R10438 = and i32 %R10434, %R10408
  %cond9 = icmp ne i32 %R10438, 0
  br i1 %cond9, label %L1914, label %L1913

L1913:                                            ; preds = %L1912
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %20 = bitcast %struct.global_State** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 32
  %22 = bitcast i8* %21 to %struct.global_State**
  %load_target10 = load %struct.global_State*, %struct.global_State** %22
  %23 = bitcast %struct.global_State* %load_target10 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i32 296
  %25 = bitcast i8* %24 to %struct.global_State*
  %26 = bitcast %struct.global_State* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %R10417
  %28 = bitcast i8* %27 to %struct.global_State*
  %29 = bitcast %struct.global_State* %28 to { [24 x i8] }**
  %30 = bitcast { [24 x i8] }** %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = bitcast i8* %31 to { [24 x i8] }**
  %load_target11 = load { [24 x i8] }*, { [24 x i8] }** %32
  %R10449 = call %struct.lua_TValue* @luaT_gettm(%struct.Table* %ARG3, i32 %ARG4, { [24 x i8] }* %load_target11)
  %cond12 = icmp ne %struct.lua_TValue* %R10449, null
  br i1 %cond12, label %L1915, label %L1914

L1914:                                            ; preds = %L1913, %L1912, %L1911
  store %struct.lua_TValue* null, %struct.lua_TValue** %0
  br label %L1918

L1915:                                            ; preds = %L1913
  %R10456 = call i32 @luaO_rawequalObj(%struct.lua_TValue* %R10420, %struct.lua_TValue* %R10449)
  %cond13 = icmp ne i32 %R10456, 0
  br i1 %cond13, label %L1916, label %L1917

L1916:                                            ; preds = %L1915
  store %struct.lua_TValue* %R10420, %struct.lua_TValue** %0
  br label %L1918

L1917:                                            ; preds = %L1915
  store %struct.lua_TValue* null, %struct.lua_TValue** %0
  br label %L1918

L1918:                                            ; preds = %L1917, %L1916, %L1914, %L1910, %L1908
  %33 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  ret %struct.lua_TValue* %33
}

define internal i32 @call_orderTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, i32 %ARG4) {
L1919:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %R10461 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, i32 %ARG4)
  %3 = bitcast %struct.lua_TValue* %R10461 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L1921, label %L1920

L1920:                                            ; preds = %L1919
  store i32 -1, i32* %2
  br label %L1930

L1921:                                            ; preds = %L1919
  %R10470 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG3, i32 %ARG4)
  %R10473 = call i32 @luaO_rawequalObj(%struct.lua_TValue* %R10461, %struct.lua_TValue* %R10470)
  %cond1 = icmp ne i32 %R10473, 0
  br i1 %cond1, label %L1923, label %L1922

L1922:                                            ; preds = %L1921
  store i32 -1, i32* %2
  br label %L1930

L1923:                                            ; preds = %L1921
  %7 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %8 = bitcast %struct.lua_TValue** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %10
  call void @callTMres(%struct.lua_State* %ARG1, %struct.lua_TValue* %load_target2, %struct.lua_TValue* %R10461, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3)
  %11 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %12 = bitcast %struct.lua_TValue** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %14
  %15 = bitcast %struct.lua_TValue* %load_target3 to i32*
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i32*
  %load_target4 = load i32, i32* %18
  %cond5 = icmp ne i32 %load_target4, 0
  br i1 %cond5, label %L1925, label %L1924

L1924:                                            ; preds = %L1923
  store i32 1, i32* %1
  br label %L1929

L1925:                                            ; preds = %L1923
  %19 = bitcast %struct.lua_TValue* %load_target3 to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i32*
  %load_target6 = load i32, i32* %22
  %R10487 = icmp eq i32 %load_target6, 1
  %R104877 = zext i1 %R10487 to i32
  %cond8 = icmp ne i32 %R104877, 0
  br i1 %cond8, label %L1926, label %L1927

L1926:                                            ; preds = %L1925
  %23 = bitcast %struct.lua_TValue* %load_target3 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to i32*
  %load_target9 = load i32, i32* %26
  %R10491 = icmp eq i32 %load_target9, 0
  %R1049110 = zext i1 %R10491 to i32
  store i32 %R1049110, i32* %0
  br label %L1928

L1927:                                            ; preds = %L1925
  store i32 0, i32* %0
  br label %L1928

L1928:                                            ; preds = %L1927, %L1926
  %27 = load i32, i32* %0
  store i32 %27, i32* %1
  br label %L1929

L1929:                                            ; preds = %L1928, %L1924
  %28 = load i32, i32* %1
  %R10494 = icmp eq i32 %28, 0
  %R1049411 = zext i1 %R10494 to i32
  store i32 %R1049411, i32* %2
  br label %L1930

L1930:                                            ; preds = %L1929, %L1922, %L1920
  %29 = load i32, i32* %2
  ret i32 %29
}

define internal i32 @l_strcmp({ [24 x i8] }* %ARG1, { [24 x i8] }* %ARG2) {
L1931:
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i32
  %5 = bitcast { [24 x i8] }* %ARG1 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to { [24 x i8] }*
  %R10497 = bitcast { [24 x i8] }* %7 to i8*
  %8 = bitcast { [24 x i8] }* %ARG1 to i64*
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to i64*
  %load_target = load i64, i64* %11
  %12 = bitcast { [24 x i8] }* %ARG2 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 24
  %14 = bitcast i8* %13 to { [24 x i8] }*
  %R10503 = bitcast { [24 x i8] }* %14 to i8*
  %15 = bitcast { [24 x i8] }* %ARG2 to i64*
  %16 = bitcast i64* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to i64*
  %load_target1 = load i64, i64* %18
  store i8* %R10497, i8** %0
  store i64 %load_target, i64* %3
  store i8* %R10503, i8** %1
  store i64 %load_target1, i64* %2
  br label %L1932

L1932:                                            ; preds = %L1938, %L1931
  %19 = load i8*, i8** %0
  %20 = load i8*, i8** %1
  %R10509 = call i32 @strcoll(i8* %19, i8* %20)
  %cond = icmp ne i32 %R10509, 0
  br i1 %cond, label %L1933, label %L1934

L1933:                                            ; preds = %L1932
  store i32 %R10509, i32* %4
  br label %L1939

L1934:                                            ; preds = %L1932
  %R10515 = call i64 @strlen(i8* %19)
  %21 = load i64, i64* %2
  %R10518 = icmp eq i64 %R10515, %21
  %R105182 = zext i1 %R10518 to i32
  %22 = load i64, i64* %3
  %cond3 = icmp ne i32 %R105182, 0
  br i1 %cond3, label %L1935, label %L1936

L1935:                                            ; preds = %L1934
  %R10522 = icmp ne i64 %R10515, %22
  %R105224 = zext i1 %R10522 to i32
  store i32 %R105224, i32* %4
  br label %L1939

L1936:                                            ; preds = %L1934
  %R10525 = icmp eq i64 %R10515, %22
  %R105255 = zext i1 %R10525 to i32
  %cond6 = icmp ne i32 %R105255, 0
  br i1 %cond6, label %L1937, label %L1938

L1937:                                            ; preds = %L1936
  store i32 -1, i32* %4
  br label %L1939

L1938:                                            ; preds = %L1936
  %R10527 = add i64 %R10515, 1
  %R10530 = ptrtoint i8* %19 to i64
  %R10531 = add i64 %R10530, %R10527
  %R10532 = inttoptr i64 %R10531 to i8*
  %R10536 = sub i64 %22, %R10527
  %R10540 = ptrtoint i8* %20 to i64
  %R10541 = add i64 %R10540, %R10527
  %R10542 = inttoptr i64 %R10541 to i8*
  %R10546 = sub i64 %21, %R10527
  store i8* %R10532, i8** %0
  store i64 %R10536, i64* %3
  store i8* %R10542, i8** %1
  store i64 %R10546, i64* %2
  br label %L1932

L1939:                                            ; preds = %L1937, %L1935, %L1933
  %23 = load i32, i32* %4
  ret i32 %23
}

declare i32 @strcoll(i8*, i8*)

define internal i32 @luaV_lessthan(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3) {
L1940:
  %0 = alloca i32
  %1 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %5 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R10554 = icmp ne i32 %load_target, %load_target1
  %R105542 = zext i1 %R10554 to i32
  %cond = icmp ne i32 %R105542, 0
  br i1 %cond, label %L1941, label %L1942

L1941:                                            ; preds = %L1940
  %R10558 = call i32 @luaG_ordererror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3)
  store i32 %R10558, i32* %0
  br label %L1949

L1942:                                            ; preds = %L1940
  %R10563 = icmp eq i32 %load_target, 3
  %R105633 = zext i1 %R10563 to i32
  %cond4 = icmp ne i32 %R105633, 0
  br i1 %cond4, label %L1943, label %L1944

L1943:                                            ; preds = %L1942
  %9 = bitcast %struct.lua_TValue* %ARG2 to double*
  %10 = bitcast double* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to double*
  %load_target5 = load double, double* %12
  %13 = bitcast %struct.lua_TValue* %ARG3 to double*
  %14 = bitcast double* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to double*
  %load_target6 = load double, double* %16
  %R10570 = fcmp olt double %load_target5, %load_target6
  %R105707 = zext i1 %R10570 to i32
  store i32 %R105707, i32* %0
  br label %L1949

L1944:                                            ; preds = %L1942
  %R10574 = icmp eq i32 %load_target, 4
  %R105748 = zext i1 %R10574 to i32
  %cond9 = icmp ne i32 %R105748, 0
  br i1 %cond9, label %L1945, label %L1946

L1945:                                            ; preds = %L1944
  %17 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %18 = bitcast { [184 x i8] }** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %20
  %21 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %22 = bitcast { [184 x i8] }** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %24
  %R10581 = call i32 @l_strcmp({ [184 x i8] }* %load_target10, { [184 x i8] }* %load_target11)
  %R10582 = icmp slt i32 %R10581, 0
  %R1058212 = zext i1 %R10582 to i32
  store i32 %R1058212, i32* %0
  br label %L1949

L1946:                                            ; preds = %L1944
  %R10586 = call i32 @call_orderTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, i32 13)
  %R10587 = icmp ne i32 %R10586, -1
  %R1058713 = zext i1 %R10587 to i32
  %cond14 = icmp ne i32 %R1058713, 0
  br i1 %cond14, label %L1947, label %L1948

L1947:                                            ; preds = %L1946
  store i32 %R10586, i32* %0
  br label %L1949

L1948:                                            ; preds = %L1946
  %R10592 = call i32 @luaG_ordererror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3)
  store i32 %R10592, i32* %0
  br label %L1949

L1949:                                            ; preds = %L1948, %L1947, %L1945, %L1943, %L1941
  %25 = load i32, i32* %0
  ret i32 %25
}

define internal i32 @lessequal(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3) {
L1950:
  %0 = alloca i32
  %1 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %5 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %R10599 = icmp ne i32 %load_target, %load_target1
  %R105992 = zext i1 %R10599 to i32
  %cond = icmp ne i32 %R105992, 0
  br i1 %cond, label %L1951, label %L1952

L1951:                                            ; preds = %L1950
  %R10603 = call i32 @luaG_ordererror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3)
  store i32 %R10603, i32* %0
  br label %L1961

L1952:                                            ; preds = %L1950
  %R10608 = icmp eq i32 %load_target, 3
  %R106083 = zext i1 %R10608 to i32
  %cond4 = icmp ne i32 %R106083, 0
  br i1 %cond4, label %L1953, label %L1954

L1953:                                            ; preds = %L1952
  %9 = bitcast %struct.lua_TValue* %ARG2 to double*
  %10 = bitcast double* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to double*
  %load_target5 = load double, double* %12
  %13 = bitcast %struct.lua_TValue* %ARG3 to double*
  %14 = bitcast double* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to double*
  %load_target6 = load double, double* %16
  %R10615 = fcmp ole double %load_target5, %load_target6
  %R106157 = zext i1 %R10615 to i32
  store i32 %R106157, i32* %0
  br label %L1961

L1954:                                            ; preds = %L1952
  %R10619 = icmp eq i32 %load_target, 4
  %R106198 = zext i1 %R10619 to i32
  %cond9 = icmp ne i32 %R106198, 0
  br i1 %cond9, label %L1955, label %L1956

L1955:                                            ; preds = %L1954
  %17 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %18 = bitcast { [184 x i8] }** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %20
  %21 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %22 = bitcast { [184 x i8] }** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %24
  %R10626 = call i32 @l_strcmp({ [184 x i8] }* %load_target10, { [184 x i8] }* %load_target11)
  %R10627 = icmp sle i32 %R10626, 0
  %R1062712 = zext i1 %R10627 to i32
  store i32 %R1062712, i32* %0
  br label %L1961

L1956:                                            ; preds = %L1954
  %R10631 = call i32 @call_orderTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, i32 14)
  %R10632 = icmp ne i32 %R10631, -1
  %R1063213 = zext i1 %R10632 to i32
  %cond14 = icmp ne i32 %R1063213, 0
  br i1 %cond14, label %L1957, label %L1958

L1957:                                            ; preds = %L1956
  store i32 %R10631, i32* %0
  br label %L1961

L1958:                                            ; preds = %L1956
  %R10637 = call i32 @call_orderTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG2, i32 13)
  %R10638 = icmp ne i32 %R10637, -1
  %R1063815 = zext i1 %R10638 to i32
  %cond16 = icmp ne i32 %R1063815, 0
  br i1 %cond16, label %L1959, label %L1960

L1959:                                            ; preds = %L1958
  %R10640 = icmp eq i32 %R10637, 0
  %R1064017 = zext i1 %R10640 to i32
  store i32 %R1064017, i32* %0
  br label %L1961

L1960:                                            ; preds = %L1958
  %R10644 = call i32 @luaG_ordererror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3)
  store i32 %R10644, i32* %0
  br label %L1961

L1961:                                            ; preds = %L1960, %L1959, %L1957, %L1955, %L1953, %L1951
  %25 = load i32, i32* %0
  ret i32 %25
}

define internal i32 @luaV_equalval(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3) {
L1962:
  %0 = alloca %struct.lua_TValue*
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target = load i32, i32* %7
  switch i32 %load_target, label %L1973 [
    i32 0, label %L1963
    i32 1, label %L1965
    i32 2, label %L1966
    i32 3, label %L1964
    i32 5, label %L1970
    i32 7, label %L1967
  ]

L1963:                                            ; preds = %L1962
  store i32 1, i32* %3
  br label %L1983

L1964:                                            ; preds = %L1962
  %8 = bitcast %struct.lua_TValue* %ARG2 to double*
  %9 = bitcast double* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to double*
  %load_target1 = load double, double* %11
  %12 = bitcast %struct.lua_TValue* %ARG3 to double*
  %13 = bitcast double* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to double*
  %load_target2 = load double, double* %15
  %R10654 = fcmp oeq double %load_target1, %load_target2
  %R106543 = zext i1 %R10654 to i32
  store i32 %R106543, i32* %3
  br label %L1983

L1965:                                            ; preds = %L1962
  %16 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i32*
  %load_target4 = load i32, i32* %19
  %20 = bitcast %struct.lua_TValue* %ARG3 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i32*
  %load_target5 = load i32, i32* %23
  %R10661 = icmp eq i32 %load_target4, %load_target5
  %R106616 = zext i1 %R10661 to i32
  store i32 %R106616, i32* %3
  br label %L1983

L1966:                                            ; preds = %L1962
  %24 = bitcast %struct.lua_TValue* %ARG2 to i8**
  %25 = bitcast i8** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to i8**
  %load_target7 = load i8*, i8** %27
  %28 = bitcast %struct.lua_TValue* %ARG3 to i8**
  %29 = bitcast i8** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to i8**
  %load_target8 = load i8*, i8** %31
  %R10666 = icmp eq i8* %load_target7, %load_target8
  %R106669 = zext i1 %R10666 to i32
  store i32 %R106669, i32* %3
  br label %L1983

L1967:                                            ; preds = %L1962
  %32 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %33 = bitcast { [184 x i8] }** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %35
  %36 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %37 = bitcast { [184 x i8] }** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  %39 = bitcast i8* %38 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %39
  %R10675 = icmp eq { [184 x i8] }* %load_target10, %load_target11
  %R1067512 = zext i1 %R10675 to i32
  %cond = icmp ne i32 %R1067512, 0
  br i1 %cond, label %L1968, label %L1969

L1968:                                            ; preds = %L1967
  store i32 1, i32* %3
  br label %L1983

L1969:                                            ; preds = %L1967
  %40 = bitcast { [184 x i8] }* %load_target10 to %struct.Table**
  %41 = bitcast %struct.Table** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to %struct.Table**
  %load_target13 = load %struct.Table*, %struct.Table** %43
  %44 = bitcast { [184 x i8] }* %load_target11 to %struct.Table**
  %45 = bitcast %struct.Table** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 16
  %47 = bitcast i8* %46 to %struct.Table**
  %load_target14 = load %struct.Table*, %struct.Table** %47
  %R10683 = call %struct.lua_TValue* @get_compTM(%struct.lua_State* %ARG1, %struct.Table* %load_target13, %struct.Table* %load_target14, i32 4)
  store %struct.lua_TValue* %R10683, %struct.lua_TValue** %0
  br label %L1974

L1970:                                            ; preds = %L1962
  %48 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %49 = bitcast { [184 x i8] }** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to { [184 x i8] }**
  %load_target15 = load { [184 x i8] }*, { [184 x i8] }** %51
  %52 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %53 = bitcast { [184 x i8] }** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  %55 = bitcast i8* %54 to { [184 x i8] }**
  %load_target16 = load { [184 x i8] }*, { [184 x i8] }** %55
  %R10690 = icmp eq { [184 x i8] }* %load_target15, %load_target16
  %R1069017 = zext i1 %R10690 to i32
  %cond18 = icmp ne i32 %R1069017, 0
  br i1 %cond18, label %L1971, label %L1972

L1971:                                            ; preds = %L1970
  store i32 1, i32* %3
  br label %L1983

L1972:                                            ; preds = %L1970
  %56 = bitcast { [184 x i8] }* %load_target15 to %struct.Table**
  %57 = bitcast %struct.Table** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = bitcast i8* %58 to %struct.Table**
  %load_target19 = load %struct.Table*, %struct.Table** %59
  %60 = bitcast { [184 x i8] }* %load_target16 to %struct.Table**
  %61 = bitcast %struct.Table** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 16
  %63 = bitcast i8* %62 to %struct.Table**
  %load_target20 = load %struct.Table*, %struct.Table** %63
  %R10698 = call %struct.lua_TValue* @get_compTM(%struct.lua_State* %ARG1, %struct.Table* %load_target19, %struct.Table* %load_target20, i32 4)
  store %struct.lua_TValue* %R10698, %struct.lua_TValue** %0
  br label %L1974

L1973:                                            ; preds = %L1962
  %64 = bitcast %struct.lua_TValue* %ARG2 to { [184 x i8] }**
  %65 = bitcast { [184 x i8] }** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = bitcast i8* %66 to { [184 x i8] }**
  %load_target21 = load { [184 x i8] }*, { [184 x i8] }** %67
  %68 = bitcast %struct.lua_TValue* %ARG3 to { [184 x i8] }**
  %69 = bitcast { [184 x i8] }** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 0
  %71 = bitcast i8* %70 to { [184 x i8] }**
  %load_target22 = load { [184 x i8] }*, { [184 x i8] }** %71
  %R10703 = icmp eq { [184 x i8] }* %load_target21, %load_target22
  %R1070323 = zext i1 %R10703 to i32
  store i32 %R1070323, i32* %3
  br label %L1983

L1974:                                            ; preds = %L1972, %L1969
  %72 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %cond24 = icmp ne %struct.lua_TValue* %72, null
  br i1 %cond24, label %L1976, label %L1975

L1975:                                            ; preds = %L1974
  store i32 0, i32* %3
  br label %L1983

L1976:                                            ; preds = %L1974
  %73 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %74 = bitcast %struct.lua_TValue** %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast i8* %75 to %struct.lua_TValue**
  %load_target25 = load %struct.lua_TValue*, %struct.lua_TValue** %76
  call void @callTMres(%struct.lua_State* %ARG1, %struct.lua_TValue* %load_target25, %struct.lua_TValue* %72, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3)
  %77 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %78 = bitcast %struct.lua_TValue** %77 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 16
  %80 = bitcast i8* %79 to %struct.lua_TValue**
  %load_target26 = load %struct.lua_TValue*, %struct.lua_TValue** %80
  %81 = bitcast %struct.lua_TValue* %load_target26 to i32*
  %82 = bitcast i32* %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 8
  %84 = bitcast i8* %83 to i32*
  %load_target27 = load i32, i32* %84
  %cond28 = icmp ne i32 %load_target27, 0
  br i1 %cond28, label %L1978, label %L1977

L1977:                                            ; preds = %L1976
  store i32 1, i32* %2
  br label %L1982

L1978:                                            ; preds = %L1976
  %85 = bitcast %struct.lua_TValue* %load_target26 to i32*
  %86 = bitcast i32* %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 8
  %88 = bitcast i8* %87 to i32*
  %load_target29 = load i32, i32* %88
  %R10719 = icmp eq i32 %load_target29, 1
  %R1071930 = zext i1 %R10719 to i32
  %cond31 = icmp ne i32 %R1071930, 0
  br i1 %cond31, label %L1979, label %L1980

L1979:                                            ; preds = %L1978
  %89 = bitcast %struct.lua_TValue* %load_target26 to i32*
  %90 = bitcast i32* %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 0
  %92 = bitcast i8* %91 to i32*
  %load_target32 = load i32, i32* %92
  %R10723 = icmp eq i32 %load_target32, 0
  %R1072333 = zext i1 %R10723 to i32
  store i32 %R1072333, i32* %1
  br label %L1981

L1980:                                            ; preds = %L1978
  store i32 0, i32* %1
  br label %L1981

L1981:                                            ; preds = %L1980, %L1979
  %93 = load i32, i32* %1
  store i32 %93, i32* %2
  br label %L1982

L1982:                                            ; preds = %L1981, %L1977
  %94 = load i32, i32* %2
  %R10726 = icmp eq i32 %94, 0
  %R1072634 = zext i1 %R10726 to i32
  store i32 %R1072634, i32* %3
  br label %L1983

L1983:                                            ; preds = %L1982, %L1975, %L1973, %L1971, %L1968, %L1966, %L1965, %L1964, %L1963
  %95 = load i32, i32* %3
  ret i32 %95
}

define internal void @luaV_concat.119(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L1984:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i32
  %6 = alloca i64
  %7 = alloca i32
  %8 = alloca i32
  store i32 %ARG2, i32* %8
  store i32 %ARG2, i32* %2
  store i32 %ARG3, i32* %0
  br label %L1985

L1985:                                            ; preds = %L2005, %L1984
  %9 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %10 = bitcast %struct.lua_TValue** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 24
  %12 = bitcast i8* %11 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %12
  %13 = load i32, i32* %0
  %R10730 = sext i32 %13 to i64
  %R10731 = mul i64 %R10730, 16
  %14 = bitcast %struct.lua_TValue* %load_target to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %R10731
  %16 = bitcast i8* %15 to %struct.lua_TValue*
  %17 = bitcast %struct.lua_TValue* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue*
  %20 = bitcast %struct.lua_TValue* %16 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 -8
  %23 = bitcast i8* %22 to i32*
  %load_target1 = load i32, i32* %23
  %R10737 = icmp eq i32 %load_target1, 4
  %R107372 = zext i1 %R10737 to i32
  store i32 2, i32* %7
  %cond = icmp ne i32 %R107372, 0
  br i1 %cond, label %L1987, label %L1986

L1986:                                            ; preds = %L1985
  %R10741 = icmp eq i32 %load_target1, 3
  %R107413 = zext i1 %R10741 to i32
  %cond4 = icmp ne i32 %R107413, 0
  br i1 %cond4, label %L1987, label %L1989

L1987:                                            ; preds = %L1986, %L1985
  %24 = bitcast %struct.lua_TValue* %16 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  %load_target5 = load i32, i32* %27
  %R10745 = icmp eq i32 %load_target5, 4
  %R107456 = zext i1 %R10745 to i32
  %cond7 = icmp ne i32 %R107456, 0
  br i1 %cond7, label %L1991, label %L1988

L1988:                                            ; preds = %L1987
  %28 = bitcast %struct.lua_TValue* %19 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 -16
  %30 = bitcast i8* %29 to %struct.lua_TValue*
  %R10749 = call i32 @luaV_tostring(%struct.lua_State* %ARG1, %struct.lua_TValue* %30)
  %cond8 = icmp ne i32 %R10749, 0
  br i1 %cond8, label %L1991, label %L1989

L1989:                                            ; preds = %L1988, %L1986
  %31 = bitcast %struct.lua_TValue* %19 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 -32
  %33 = bitcast i8* %32 to %struct.lua_TValue*
  %34 = bitcast %struct.lua_TValue* %19 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 -16
  %36 = bitcast i8* %35 to %struct.lua_TValue*
  %R10757 = call i32 @call_binTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %33, %struct.lua_TValue* %36, %struct.lua_TValue* %33, i32 15)
  %cond9 = icmp ne i32 %R10757, 0
  br i1 %cond9, label %L2005, label %L1990

L1990:                                            ; preds = %L1989
  %37 = bitcast %struct.lua_TValue* %19 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 -16
  %39 = bitcast i8* %38 to %struct.lua_TValue*
  call void @luaG_concaterror(%struct.lua_State* %ARG1, %struct.lua_TValue* %33, %struct.lua_TValue* %39)
  br label %L2005

L1991:                                            ; preds = %L1988, %L1987
  %40 = bitcast %struct.lua_TValue* %16 to { [184 x i8] }**
  %41 = bitcast { [184 x i8] }** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %43
  %44 = bitcast { [184 x i8] }* %load_target10 to i64*
  %45 = bitcast i64* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 16
  %47 = bitcast i8* %46 to i64*
  %load_target11 = load i64, i64* %47
  %cond12 = icmp ne i64 %load_target11, 0
  br i1 %cond12, label %L1994, label %L1992

L1992:                                            ; preds = %L1991
  %48 = bitcast %struct.lua_TValue* %16 to i32*
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 -8
  %51 = bitcast i8* %50 to i32*
  %load_target13 = load i32, i32* %51
  %R10771 = icmp eq i32 %load_target13, 4
  %R1077114 = zext i1 %R10771 to i32
  %cond15 = icmp ne i32 %R1077114, 0
  br i1 %cond15, label %L2005, label %L1993

L1993:                                            ; preds = %L1992
  %52 = bitcast %struct.lua_TValue* %19 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 -32
  %54 = bitcast i8* %53 to %struct.lua_TValue*
  %R10775 = call i32 @luaV_tostring(%struct.lua_State* %ARG1, %struct.lua_TValue* %54)
  br label %L2005

L1994:                                            ; preds = %L1991
  store i32 1, i32* %1
  store i64 %load_target11, i64* %4
  store i64 %load_target11, i64* %3
  br label %L1995

L1995:                                            ; preds = %L2000, %L1994
  %55 = load i32, i32* %1
  %56 = load i32, i32* %2
  %R10783 = icmp slt i32 %55, %56
  %R1078316 = zext i1 %R10783 to i32
  store i32 %56, i32* %8
  %cond17 = icmp ne i32 %R1078316, 0
  br i1 %cond17, label %L1996, label %L2001

L1996:                                            ; preds = %L1995
  %R10786 = sext i32 %55 to i64
  %R10787 = mul i64 %R10786, 16
  %R10788 = sub %struct.lua_TValue* %19, i64 %R10787
  %57 = bitcast %struct.lua_TValue* %R10788 to i32*
  %58 = bitcast i32* %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 -8
  %60 = bitcast i8* %59 to i32*
  %load_target18 = load i32, i32* %60
  %R10791 = icmp eq i32 %load_target18, 4
  %R1079119 = zext i1 %R10791 to i32
  %cond20 = icmp ne i32 %R1079119, 0
  br i1 %cond20, label %L1998, label %L1997

L1997:                                            ; preds = %L1996
  %61 = bitcast %struct.lua_TValue* %R10788 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 -16
  %63 = bitcast i8* %62 to %struct.lua_TValue*
  %R10799 = call i32 @luaV_tostring(%struct.lua_State* %ARG1, %struct.lua_TValue* %63)
  %cond21 = icmp ne i32 %R10799, 0
  br i1 %cond21, label %L1998, label %L2001

L1998:                                            ; preds = %L1997, %L1996
  %64 = bitcast %struct.lua_TValue* %R10788 to { [184 x i8] }**
  %65 = bitcast { [184 x i8] }** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 -16
  %67 = bitcast i8* %66 to { [184 x i8] }**
  %load_target22 = load { [184 x i8] }*, { [184 x i8] }** %67
  %68 = bitcast { [184 x i8] }* %load_target22 to i64*
  %69 = bitcast i64* %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to i64*
  %load_target23 = load i64, i64* %71
  %72 = load i64, i64* %3
  %R10810 = sub i64 -3, %72
  %R10811 = icmp uge i64 %load_target23, %R10810
  %R1081124 = zext i1 %R10811 to i32
  %cond25 = icmp ne i32 %R1081124, 0
  br i1 %cond25, label %L1999, label %L2000

L1999:                                            ; preds = %L1998
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.120, i64 0, i64 0))
  br label %L2000

L2000:                                            ; preds = %L1999, %L1998
  %R10817 = add i64 %72, %load_target23
  store i64 %R10817, i64* %4
  store i64 %R10817, i64* %3
  %R10820 = add i32 %55, 1
  store i32 %R10820, i32* %1
  br label %L1995

L2001:                                            ; preds = %L1997, %L1995
  %73 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %74 = bitcast %struct.global_State** %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 32
  %76 = bitcast i8* %75 to %struct.global_State**
  %load_target26 = load %struct.global_State*, %struct.global_State** %76
  %77 = bitcast %struct.global_State* %load_target26 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i32 88
  %79 = bitcast i8* %78 to %struct.global_State*
  %80 = load i64, i64* %4
  %R10826 = call i8* @luaZ_openspace(%struct.lua_State* %ARG1, %struct.global_State* %79, i64 %80)
  store i64 0, i64* %6
  store i32 %55, i32* %5
  br label %L2002

L2002:                                            ; preds = %L2003, %L2001
  %81 = load i32, i32* %5
  %R10829 = icmp sgt i32 %81, 0
  %R1082927 = zext i1 %R10829 to i32
  %82 = load i64, i64* %6
  %cond28 = icmp ne i32 %R1082927, 0
  br i1 %cond28, label %L2003, label %L2004

L2003:                                            ; preds = %L2002
  %R10832 = sext i32 %81 to i64
  %R10833 = mul i64 %R10832, 16
  %R10834 = sub %struct.lua_TValue* %19, i64 %R10833
  %83 = bitcast %struct.lua_TValue* %R10834 to { [184 x i8] }**
  %84 = bitcast { [184 x i8] }** %83 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 0
  %86 = bitcast i8* %85 to { [184 x i8] }**
  %load_target29 = load { [184 x i8] }*, { [184 x i8] }** %86
  %87 = bitcast { [184 x i8] }* %load_target29 to i64*
  %88 = bitcast i64* %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 16
  %90 = bitcast i8* %89 to i64*
  %load_target30 = load i64, i64* %90
  %91 = getelementptr inbounds i8, i8* %R10826, i64 %82
  %92 = bitcast { [184 x i8] }* %load_target29 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 24
  %94 = bitcast i8* %93 to { [184 x i8] }*
  %R10849 = bitcast { [184 x i8] }* %94 to i8*
  %R10852 = call i8* @memcpy(i8* %91, i8* %R10849, i64 %load_target30)
  %R10856 = add i64 %82, %load_target30
  store i64 %R10856, i64* %6
  %R10859 = add i32 %81, -1
  store i32 %R10859, i32* %5
  br label %L2002

L2004:                                            ; preds = %L2002
  %R10862 = sext i32 %55 to i64
  %R10863 = mul i64 %R10862, 16
  %R10864 = sub %struct.lua_TValue* %19, i64 %R10863
  %R10868 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %R10826, i64 %82)
  %R10869 = bitcast { [24 x i8] }* %R10868 to { [184 x i8] }*
  %95 = bitcast %struct.lua_TValue* %R10864 to { [184 x i8] }**
  %96 = bitcast { [184 x i8] }** %95 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 0
  %98 = bitcast i8* %97 to { [184 x i8] }**
  store { [184 x i8] }* %R10869, { [184 x i8] }** %98
  %99 = bitcast %struct.lua_TValue* %R10864 to i32*
  %100 = bitcast i32* %99 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 8
  %102 = bitcast i8* %101 to i32*
  store i32 4, i32* %102
  store i32 %55, i32* %7
  br label %L2005

L2005:                                            ; preds = %L2004, %L1993, %L1992, %L1990, %L1989
  %103 = load i32, i32* %7
  %R10873 = add i32 %103, -1
  %104 = load i32, i32* %8
  %R10876 = sub i32 %104, %R10873
  %R10882 = sub i32 %13, %R10873
  store i32 %R10876, i32* %8
  store i32 %R10876, i32* %2
  store i32 %R10882, i32* %0
  %R10885 = icmp sgt i32 %R10876, 1
  %R1088531 = zext i1 %R10885 to i32
  %cond32 = icmp ne i32 %R1088531, 0
  br i1 %cond32, label %L1985, label %L2006

L2006:                                            ; preds = %L2005
  ret void
}

define internal void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG2, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4, i32 %ARG5) {
L2007:
  %tempc_0x62d000c86d38 = alloca %struct.lua_TValue
  %tempb_0x62d000c86c50 = alloca %struct.lua_TValue
  %R10888 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %ARG3, %struct.lua_TValue* %tempb_0x62d000c86c50)
  %cond = icmp ne %struct.lua_TValue* %R10888, null
  br i1 %cond, label %L2008, label %L2017

L2008:                                            ; preds = %L2007
  %R10892 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %ARG4, %struct.lua_TValue* %tempc_0x62d000c86d38)
  %cond1 = icmp ne %struct.lua_TValue* %R10892, null
  br i1 %cond1, label %L2009, label %L2017

L2009:                                            ; preds = %L2008
  %0 = bitcast %struct.lua_TValue* %R10888 to double*
  %1 = bitcast double* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to double*
  %load_target = load double, double* %3
  %4 = bitcast %struct.lua_TValue* %R10892 to double*
  %5 = bitcast double* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to double*
  %load_target2 = load double, double* %7
  %R10922 = fdiv double %load_target, %load_target2
  switch i32 %ARG5, label %L2019 [
    i32 5, label %L2010
    i32 6, label %L2011
    i32 7, label %L2012
    i32 8, label %L2013
    i32 9, label %L2014
    i32 10, label %L2015
    i32 11, label %L2016
  ]

L2010:                                            ; preds = %L2009
  %R10904 = fadd double %load_target, %load_target2
  %8 = bitcast %struct.lua_TValue* %ARG2 to double*
  %9 = bitcast double* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to double*
  store double %R10904, double* %11
  %12 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 3, i32* %15
  br label %L2019

L2011:                                            ; preds = %L2009
  %R10910 = fsub double %load_target, %load_target2
  %16 = bitcast %struct.lua_TValue* %ARG2 to double*
  %17 = bitcast double* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to double*
  store double %R10910, double* %19
  %20 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 3, i32* %23
  br label %L2019

L2012:                                            ; preds = %L2009
  %R10916 = fmul double %load_target, %load_target2
  %24 = bitcast %struct.lua_TValue* %ARG2 to double*
  %25 = bitcast double* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to double*
  store double %R10916, double* %27
  %28 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 3, i32* %31
  br label %L2019

L2013:                                            ; preds = %L2009
  %32 = bitcast %struct.lua_TValue* %ARG2 to double*
  %33 = bitcast double* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to double*
  store double %R10922, double* %35
  %36 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 3, i32* %39
  br label %L2019

L2014:                                            ; preds = %L2009
  %R10930 = call double @floor(double %R10922)
  %R10932 = fmul double %R10930, %load_target2
  %R10933 = fsub double %load_target, %R10932
  %40 = bitcast %struct.lua_TValue* %ARG2 to double*
  %41 = bitcast double* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to double*
  store double %R10933, double* %43
  %44 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 3, i32* %47
  br label %L2019

L2015:                                            ; preds = %L2009
  %R10939 = call double @pow(double %load_target, double %load_target2)
  %48 = bitcast %struct.lua_TValue* %ARG2 to double*
  %49 = bitcast double* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to double*
  store double %R10939, double* %51
  %52 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %53 = bitcast i32* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 8
  %55 = bitcast i8* %54 to i32*
  store i32 3, i32* %55
  br label %L2019

L2016:                                            ; preds = %L2009
  %R10944 = fsub double -0.000000e+00, %load_target
  %56 = bitcast %struct.lua_TValue* %ARG2 to double*
  %57 = bitcast double* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  %59 = bitcast i8* %58 to double*
  store double %R10944, double* %59
  %60 = bitcast %struct.lua_TValue* %ARG2 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 8
  %63 = bitcast i8* %62 to i32*
  store i32 3, i32* %63
  br label %L2019

L2017:                                            ; preds = %L2008, %L2007
  %R10952 = call i32 @call_binTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4, %struct.lua_TValue* %ARG2, i32 %ARG5)
  %cond3 = icmp ne i32 %R10952, 0
  br i1 %cond3, label %L2019, label %L2018

L2018:                                            ; preds = %L2017
  call void @luaG_aritherror(%struct.lua_State* %ARG1, %struct.lua_TValue* %ARG3, %struct.lua_TValue* %ARG4)
  br label %L2019

L2019:                                            ; preds = %L2018, %L2017, %L2016, %L2015, %L2014, %L2013, %L2012, %L2011, %L2010, %L2009
  ret void
}

define internal void @luaV_execute.121(%struct.lua_State* %ARG1, i32 %ARG2) {
L2020:
  %g_0x62d000cb7690 = alloca %struct.lua_TValue
  %g_0x62d000cb6470 = alloca %struct.lua_TValue
  %0 = alloca i32*
  %1 = alloca %struct.lua_TValue*
  %2 = alloca %struct.lua_TValue*
  %3 = alloca %struct.lua_TValue*
  %4 = alloca %struct.lua_TValue*
  %5 = alloca %struct.lua_TValue*
  %6 = alloca %struct.lua_TValue*
  %7 = alloca %struct.lua_TValue*
  %8 = alloca %struct.lua_TValue*
  %9 = alloca %struct.lua_TValue*
  %10 = alloca %struct.lua_TValue*
  %11 = alloca %struct.lua_TValue*
  %12 = alloca %struct.lua_TValue*
  %13 = alloca %struct.lua_TValue*
  %14 = alloca %struct.lua_TValue*
  %15 = alloca %struct.lua_TValue*
  %16 = alloca %struct.lua_TValue*
  %17 = alloca %struct.lua_TValue*
  %18 = alloca %struct.lua_TValue*
  %19 = alloca i32
  %20 = alloca i32
  %21 = alloca %struct.lua_TValue*
  %22 = alloca %struct.lua_TValue*
  %23 = alloca i32
  %24 = alloca i32*
  %25 = alloca %struct.lua_TValue*
  %26 = alloca %struct.lua_TValue*
  %27 = alloca i32*
  %28 = alloca %struct.lua_TValue*
  %29 = alloca %struct.lua_TValue*
  %30 = alloca i32*
  %31 = alloca i32
  %32 = alloca i32
  %33 = alloca i32*
  %34 = alloca i32
  %35 = alloca i32
  %36 = alloca i32*
  %37 = alloca i32
  %38 = alloca i32
  %39 = alloca i32
  %40 = alloca %struct.lua_TValue*
  %41 = alloca i32*
  %42 = alloca i32
  %43 = alloca i32
  %44 = alloca i32
  %45 = alloca i32
  %46 = alloca i32
  %47 = alloca i32*
  %48 = alloca i32
  %49 = alloca i32
  %50 = alloca %struct.lua_TValue*
  %51 = alloca %struct.lua_TValue*
  store i32 %ARG2, i32* %39
  store i32 %ARG2, i32* %37
  br label %L2021

L2021:                                            ; preds = %L2205, %L2204, %L2197, %L2185, %L2020
  %52 = bitcast %struct.lua_State* %ARG1 to i32**
  %53 = bitcast i32** %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 48
  %55 = bitcast i8* %54 to i32**
  %load_target = load i32*, i32** %55
  %56 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %57 = bitcast %struct.CallInfo** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 40
  %59 = bitcast i8* %58 to %struct.CallInfo**
  %load_target1 = load %struct.CallInfo*, %struct.CallInfo** %59
  %60 = bitcast %struct.CallInfo* %load_target1 to %struct.lua_TValue**
  %61 = bitcast %struct.lua_TValue** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 8
  %63 = bitcast i8* %62 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %63
  %64 = bitcast %struct.lua_TValue* %load_target2 to { [184 x i8] }**
  %65 = bitcast { [184 x i8] }** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = bitcast i8* %66 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %67
  %68 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %69 = bitcast %struct.lua_TValue** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 24
  %71 = bitcast i8* %70 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %71
  %72 = bitcast { [184 x i8] }* %load_target3 to %struct.Proto**
  %73 = bitcast %struct.Proto** %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 32
  %75 = bitcast i8* %74 to %struct.Proto**
  %load_target5 = load %struct.Proto*, %struct.Proto** %75
  %76 = bitcast %struct.Proto* %load_target5 to %struct.lua_TValue**
  %77 = bitcast %struct.lua_TValue** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 16
  %79 = bitcast i8* %78 to %struct.lua_TValue**
  %load_target6 = load %struct.lua_TValue*, %struct.lua_TValue** %79
  store i32* %load_target, i32** %0
  store %struct.lua_TValue* %load_target4, %struct.lua_TValue** %1
  br label %L2022

L2022:                                            ; preds = %L2249, %L2243, %L2234, %L2228, %L2225, %L2220, %L2217, %L2207, %L2206, %L2198, %L2188, %L2181, %L2172, %L2163, %L2154, %L2145, %L2133, %L2132, %L2129, %L2126, %L2125, %L2123, %L2116, %L2115, %L2113, %L2112, %L2103, %L2102, %L2093, %L2092, %L2083, %L2082, %L2073, %L2072, %L2063, %L2062, %L2053, %L2049, %L2046, %L2039, %L2038, %L2037, %L2036, %L2035, %L2034, %L2030, %L2029, %L2028, %L2026, %L2025, %L2024, %L2023, %L2022, %L2021
  %80 = load i32*, i32** %0
  %81 = bitcast i32* %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i32* inttoptr (i64 4 to i32*)
  %83 = bitcast i8* %82 to i32*
  %84 = bitcast i32* %80 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 0
  %86 = bitcast i8* %85 to i32*
  %load_target7 = load i32, i32* %86
  %87 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  %R10975 = lshr i32 %load_target7, 6
  %R10976 = and i32 %R10975, 255
  %R10978 = sext i32 %R10976 to i64
  %R10979 = mul i64 %R10978, 16
  %88 = bitcast %struct.lua_TValue* %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %R10979
  %90 = bitcast i8* %89 to %struct.lua_TValue*
  %R10984 = and i32 %load_target7, 63
  store i32* %83, i32** %47
  store i32* %83, i32** %36
  store i32* %83, i32** %33
  store i32* %83, i32** %0
  store %struct.lua_TValue* %90, %struct.lua_TValue** %51
  store %struct.lua_TValue* %90, %struct.lua_TValue** %50
  %R10989 = lshr i32 %load_target7, 23
  %R11006 = lshr i32 %load_target7, 14
  %R11100 = and i32 %R10989, 511
  %R11150 = and i32 %R11006, 262143
  %91 = bitcast { [184 x i8] }* %load_target3 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i32 40
  %93 = bitcast i8* %92 to { [184 x i8] }*
  %R11110 = and i32 %R11006, 256
  %R11206 = and i32 %R10989, 256
  %R11031 = and i32 %R11006, 511
  switch i32 %R10984, label %L2022 [
    i32 0, label %L2023
    i32 1, label %L2024
    i32 2, label %L2025
    i32 3, label %L2027
    i32 4, label %L2029
    i32 5, label %L2030
    i32 6, label %L2031
    i32 7, label %L2035
    i32 8, label %L2036
    i32 9, label %L2040
    i32 10, label %L2047
    i32 11, label %L2050
    i32 12, label %L2054
    i32 13, label %L2064
    i32 14, label %L2074
    i32 15, label %L2084
    i32 16, label %L2094
    i32 17, label %L2104
    i32 18, label %L2114
    i32 19, label %L2117
    i32 20, label %L2124
    i32 21, label %L2130
    i32 22, label %L2133
    i32 23, label %L2134
    i32 24, label %L2146
    i32 25, label %L2155
    i32 26, label %L2164
    i32 27, label %L2173
    i32 28, label %L2182
    i32 29, label %L2189
    i32 30, label %L2199
    i32 31, label %L2206
    i32 32, label %L2208
    i32 33, label %L2218
    i32 34, label %L2221
    i32 35, label %L2234
    i32 36, label %L2235
    i32 37, label %L2244
  ]

L2023:                                            ; preds = %L2022
  %R10992 = sext i32 %R11100 to i64
  %R10993 = mul i64 %R10992, 16
  %94 = bitcast %struct.lua_TValue* %87 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %R10993
  %96 = bitcast i8* %95 to %struct.lua_TValue*
  %97 = bitcast %struct.lua_TValue* %96 to { [8 x i8] }*
  %98 = bitcast { [8 x i8] }* %97 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 0
  %100 = bitcast i8* %99 to { [8 x i8] }*
  %load_target8 = load { [8 x i8] }, { [8 x i8] }* %100
  %101 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %102 = bitcast { [8 x i8] }* %101 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 0
  %104 = bitcast i8* %103 to { [8 x i8] }*
  store { [8 x i8] } %load_target8, { [8 x i8] }* %104
  %105 = bitcast %struct.lua_TValue* %96 to i32*
  %106 = bitcast i32* %105 to i8*
  %107 = getelementptr inbounds i8, i8* %106, i64 8
  %108 = bitcast i8* %107 to i32*
  %load_target9 = load i32, i32* %108
  %109 = bitcast %struct.lua_TValue* %90 to i32*
  %110 = bitcast i32* %109 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 8
  %112 = bitcast i8* %111 to i32*
  store i32 %load_target9, i32* %112
  br label %L2022

L2024:                                            ; preds = %L2022
  %R11009 = sext i32 %R11150 to i64
  %R11010 = mul i64 %R11009, 16
  %113 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 %R11010
  %115 = bitcast i8* %114 to %struct.lua_TValue*
  %116 = bitcast %struct.lua_TValue* %115 to { [8 x i8] }*
  %117 = bitcast { [8 x i8] }* %116 to i8*
  %118 = getelementptr inbounds i8, i8* %117, i64 0
  %119 = bitcast i8* %118 to { [8 x i8] }*
  %load_target10 = load { [8 x i8] }, { [8 x i8] }* %119
  %120 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %121 = bitcast { [8 x i8] }* %120 to i8*
  %122 = getelementptr inbounds i8, i8* %121, i64 0
  %123 = bitcast i8* %122 to { [8 x i8] }*
  store { [8 x i8] } %load_target10, { [8 x i8] }* %123
  %124 = bitcast %struct.lua_TValue* %115 to i32*
  %125 = bitcast i32* %124 to i8*
  %126 = getelementptr inbounds i8, i8* %125, i64 8
  %127 = bitcast i8* %126 to i32*
  %load_target11 = load i32, i32* %127
  %128 = bitcast %struct.lua_TValue* %90 to i32*
  %129 = bitcast i32* %128 to i8*
  %130 = getelementptr inbounds i8, i8* %129, i64 8
  %131 = bitcast i8* %130 to i32*
  store i32 %load_target11, i32* %131
  br label %L2022

L2025:                                            ; preds = %L2022
  %132 = bitcast %struct.lua_TValue* %90 to i32*
  %133 = bitcast i32* %132 to i8*
  %134 = getelementptr inbounds i8, i8* %133, i64 0
  %135 = bitcast i8* %134 to i32*
  store i32 %R11100, i32* %135
  %136 = bitcast %struct.lua_TValue* %90 to i32*
  %137 = bitcast i32* %136 to i8*
  %138 = getelementptr inbounds i8, i8* %137, i64 8
  %139 = bitcast i8* %138 to i32*
  store i32 1, i32* %139
  %cond = icmp ne i32 %R11031, 0
  br i1 %cond, label %L2026, label %L2022

L2026:                                            ; preds = %L2025
  %140 = bitcast i32* %83 to i8*
  %141 = getelementptr inbounds i8, i8* %140, i32* inttoptr (i64 4 to i32*)
  %142 = bitcast i8* %141 to i32*
  store i32* %142, i32** %0
  br label %L2022

L2027:                                            ; preds = %L2022
  %R11041 = sext i32 %R11100 to i64
  %R11042 = mul i64 %R11041, 16
  %143 = bitcast %struct.lua_TValue* %87 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 %R11042
  %145 = bitcast i8* %144 to %struct.lua_TValue*
  store %struct.lua_TValue* %145, %struct.lua_TValue** %2
  br label %L2028

L2028:                                            ; preds = %L2028, %L2027
  %146 = load %struct.lua_TValue*, %struct.lua_TValue** %2
  %147 = bitcast %struct.lua_TValue* %146 to i8*
  %148 = getelementptr inbounds i8, i8* %147, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %149 = bitcast i8* %148 to %struct.lua_TValue*
  %150 = bitcast %struct.lua_TValue* %146 to i32*
  %151 = bitcast i32* %150 to i8*
  %152 = getelementptr inbounds i8, i8* %151, i64 8
  %153 = bitcast i8* %152 to i32*
  store i32 0, i32* %153
  store %struct.lua_TValue* %149, %struct.lua_TValue** %2
  %R11048 = icmp uge %struct.lua_TValue* %149, %90
  %R1104812 = zext i1 %R11048 to i32
  %cond13 = icmp ne i32 %R1104812, 0
  br i1 %cond13, label %L2028, label %L2022

L2029:                                            ; preds = %L2022
  %R11057 = sext i32 %R11100 to i64
  %R11058 = mul i64 %R11057, 8
  %154 = bitcast { [184 x i8] }* %93 to i8*
  %155 = getelementptr inbounds i8, i8* %154, i64 %R11058
  %156 = bitcast i8* %155 to { [184 x i8] }*
  %157 = bitcast { [184 x i8] }* %156 to %struct.UpVal**
  %158 = bitcast %struct.UpVal** %157 to i8*
  %159 = getelementptr inbounds i8, i8* %158, i64 0
  %160 = bitcast i8* %159 to %struct.UpVal**
  %load_target14 = load %struct.UpVal*, %struct.UpVal** %160
  %161 = bitcast %struct.UpVal* %load_target14 to %struct.lua_TValue**
  %162 = bitcast %struct.lua_TValue** %161 to i8*
  %163 = getelementptr inbounds i8, i8* %162, i64 16
  %164 = bitcast i8* %163 to %struct.lua_TValue**
  %load_target15 = load %struct.lua_TValue*, %struct.lua_TValue** %164
  %165 = bitcast %struct.lua_TValue* %load_target15 to { [8 x i8] }*
  %166 = bitcast { [8 x i8] }* %165 to i8*
  %167 = getelementptr inbounds i8, i8* %166, i64 0
  %168 = bitcast i8* %167 to { [8 x i8] }*
  %load_target16 = load { [8 x i8] }, { [8 x i8] }* %168
  %169 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %170 = bitcast { [8 x i8] }* %169 to i8*
  %171 = getelementptr inbounds i8, i8* %170, i64 0
  %172 = bitcast i8* %171 to { [8 x i8] }*
  store { [8 x i8] } %load_target16, { [8 x i8] }* %172
  %173 = bitcast %struct.lua_TValue* %load_target15 to i32*
  %174 = bitcast i32* %173 to i8*
  %175 = getelementptr inbounds i8, i8* %174, i64 8
  %176 = bitcast i8* %175 to i32*
  %load_target17 = load i32, i32* %176
  %177 = bitcast %struct.lua_TValue* %90 to i32*
  %178 = bitcast i32* %177 to i8*
  %179 = getelementptr inbounds i8, i8* %178, i64 8
  %180 = bitcast i8* %179 to i32*
  store i32 %load_target17, i32* %180
  br label %L2022

L2030:                                            ; preds = %L2022
  %R11076 = sext i32 %R11150 to i64
  %R11077 = mul i64 %R11076, 16
  %181 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %182 = getelementptr inbounds i8, i8* %181, i64 %R11077
  %183 = bitcast i8* %182 to %struct.lua_TValue*
  %184 = bitcast { [184 x i8] }* %load_target3 to %struct.Table**
  %185 = bitcast %struct.Table** %184 to i8*
  %186 = getelementptr inbounds i8, i8* %185, i64 24
  %187 = bitcast i8* %186 to %struct.Table**
  %load_target18 = load %struct.Table*, %struct.Table** %187
  %R11082 = bitcast %struct.Table* %load_target18 to { [184 x i8] }*
  %188 = bitcast %struct.lua_TValue* %g_0x62d000cb6470 to { [184 x i8] }**
  %189 = bitcast { [184 x i8] }** %188 to i8*
  %190 = getelementptr inbounds i8, i8* %189, i64 0
  %191 = bitcast i8* %190 to { [184 x i8] }**
  store { [184 x i8] }* %R11082, { [184 x i8] }** %191
  %192 = bitcast %struct.lua_TValue* %g_0x62d000cb6470 to i32*
  %193 = bitcast i32* %192 to i8*
  %194 = getelementptr inbounds i8, i8* %193, i64 8
  %195 = bitcast i8* %194 to i32*
  store i32 5, i32* %195
  %196 = bitcast %struct.lua_State* %ARG1 to i32**
  %197 = bitcast i32** %196 to i8*
  %198 = getelementptr inbounds i8, i8* %197, i64 48
  %199 = bitcast i8* %198 to i32**
  store i32* %83, i32** %199
  call void @luaV_gettable(%struct.lua_State* %ARG1, %struct.lua_TValue* %g_0x62d000cb6470, %struct.lua_TValue* %183, %struct.lua_TValue* %90)
  %200 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %201 = bitcast %struct.lua_TValue** %200 to i8*
  %202 = getelementptr inbounds i8, i8* %201, i64 24
  %203 = bitcast i8* %202 to %struct.lua_TValue**
  %load_target19 = load %struct.lua_TValue*, %struct.lua_TValue** %203
  store %struct.lua_TValue* %load_target19, %struct.lua_TValue** %1
  br label %L2022

L2031:                                            ; preds = %L2022
  %204 = bitcast %struct.lua_State* %ARG1 to i32**
  %205 = bitcast i32** %204 to i8*
  %206 = getelementptr inbounds i8, i8* %205, i64 48
  %207 = bitcast i8* %206 to i32**
  store i32* %83, i32** %207
  %R11102 = sext i32 %R11100 to i64
  %R11103 = mul i64 %R11102, 16
  %208 = bitcast %struct.lua_TValue* %87 to i8*
  %209 = getelementptr inbounds i8, i8* %208, i64 %R11103
  %210 = bitcast i8* %209 to %struct.lua_TValue*
  %cond20 = icmp ne i32 %R11110, 0
  br i1 %cond20, label %L2032, label %L2033

L2032:                                            ; preds = %L2031
  %R11118 = and i32 %R11006, 255
  %R11119 = sext i32 %R11118 to i64
  %R11120 = mul i64 %R11119, 16
  %211 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %212 = getelementptr inbounds i8, i8* %211, i64 %R11120
  %213 = bitcast i8* %212 to %struct.lua_TValue*
  store %struct.lua_TValue* %213, %struct.lua_TValue** %3
  br label %L2034

L2033:                                            ; preds = %L2031
  %R11128 = sext i32 %R11031 to i64
  %R11129 = mul i64 %R11128, 16
  %214 = bitcast %struct.lua_TValue* %87 to i8*
  %215 = getelementptr inbounds i8, i8* %214, i64 %R11129
  %216 = bitcast i8* %215 to %struct.lua_TValue*
  store %struct.lua_TValue* %216, %struct.lua_TValue** %3
  br label %L2034

L2034:                                            ; preds = %L2033, %L2032
  %217 = load %struct.lua_TValue*, %struct.lua_TValue** %3
  call void @luaV_gettable(%struct.lua_State* %ARG1, %struct.lua_TValue* %210, %struct.lua_TValue* %217, %struct.lua_TValue* %90)
  %218 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %219 = bitcast %struct.lua_TValue** %218 to i8*
  %220 = getelementptr inbounds i8, i8* %219, i64 24
  %221 = bitcast i8* %220 to %struct.lua_TValue**
  %load_target21 = load %struct.lua_TValue*, %struct.lua_TValue** %221
  store %struct.lua_TValue* %load_target21, %struct.lua_TValue** %1
  br label %L2022

L2035:                                            ; preds = %L2022
  %222 = bitcast { [184 x i8] }* %load_target3 to %struct.Table**
  %223 = bitcast %struct.Table** %222 to i8*
  %224 = getelementptr inbounds i8, i8* %223, i64 24
  %225 = bitcast i8* %224 to %struct.Table**
  %load_target22 = load %struct.Table*, %struct.Table** %225
  %R11139 = bitcast %struct.Table* %load_target22 to { [184 x i8] }*
  %226 = bitcast %struct.lua_TValue* %g_0x62d000cb7690 to { [184 x i8] }**
  %227 = bitcast { [184 x i8] }** %226 to i8*
  %228 = getelementptr inbounds i8, i8* %227, i64 0
  %229 = bitcast i8* %228 to { [184 x i8] }**
  store { [184 x i8] }* %R11139, { [184 x i8] }** %229
  %230 = bitcast %struct.lua_TValue* %g_0x62d000cb7690 to i32*
  %231 = bitcast i32* %230 to i8*
  %232 = getelementptr inbounds i8, i8* %231, i64 8
  %233 = bitcast i8* %232 to i32*
  store i32 5, i32* %233
  %234 = bitcast %struct.lua_State* %ARG1 to i32**
  %235 = bitcast i32** %234 to i8*
  %236 = getelementptr inbounds i8, i8* %235, i64 48
  %237 = bitcast i8* %236 to i32**
  store i32* %83, i32** %237
  %R11152 = sext i32 %R11150 to i64
  %R11153 = mul i64 %R11152, 16
  %238 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %239 = getelementptr inbounds i8, i8* %238, i64 %R11153
  %240 = bitcast i8* %239 to %struct.lua_TValue*
  call void @luaV_settable(%struct.lua_State* %ARG1, %struct.lua_TValue* %g_0x62d000cb7690, %struct.lua_TValue* %240, %struct.lua_TValue* %90)
  %241 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %242 = bitcast %struct.lua_TValue** %241 to i8*
  %243 = getelementptr inbounds i8, i8* %242, i64 24
  %244 = bitcast i8* %243 to %struct.lua_TValue**
  %load_target23 = load %struct.lua_TValue*, %struct.lua_TValue** %244
  store %struct.lua_TValue* %load_target23, %struct.lua_TValue** %1
  br label %L2022

L2036:                                            ; preds = %L2022
  %R11165 = sext i32 %R11100 to i64
  %R11166 = mul i64 %R11165, 8
  %245 = bitcast { [184 x i8] }* %93 to i8*
  %246 = getelementptr inbounds i8, i8* %245, i64 %R11166
  %247 = bitcast i8* %246 to { [184 x i8] }*
  %248 = bitcast { [184 x i8] }* %247 to %struct.UpVal**
  %249 = bitcast %struct.UpVal** %248 to i8*
  %250 = getelementptr inbounds i8, i8* %249, i64 0
  %251 = bitcast i8* %250 to %struct.UpVal**
  %load_target24 = load %struct.UpVal*, %struct.UpVal** %251
  %252 = bitcast %struct.UpVal* %load_target24 to %struct.lua_TValue**
  %253 = bitcast %struct.lua_TValue** %252 to i8*
  %254 = getelementptr inbounds i8, i8* %253, i64 16
  %255 = bitcast i8* %254 to %struct.lua_TValue**
  %load_target25 = load %struct.lua_TValue*, %struct.lua_TValue** %255
  %256 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %257 = bitcast { [8 x i8] }* %256 to i8*
  %258 = getelementptr inbounds i8, i8* %257, i64 0
  %259 = bitcast i8* %258 to { [8 x i8] }*
  %load_target26 = load { [8 x i8] }, { [8 x i8] }* %259
  %260 = bitcast %struct.lua_TValue* %load_target25 to { [8 x i8] }*
  %261 = bitcast { [8 x i8] }* %260 to i8*
  %262 = getelementptr inbounds i8, i8* %261, i64 0
  %263 = bitcast i8* %262 to { [8 x i8] }*
  store { [8 x i8] } %load_target26, { [8 x i8] }* %263
  %264 = bitcast %struct.lua_TValue* %90 to i32*
  %265 = bitcast i32* %264 to i8*
  %266 = getelementptr inbounds i8, i8* %265, i64 8
  %267 = bitcast i8* %266 to i32*
  %load_target27 = load i32, i32* %267
  %268 = bitcast %struct.lua_TValue* %load_target25 to i32*
  %269 = bitcast i32* %268 to i8*
  %270 = getelementptr inbounds i8, i8* %269, i64 8
  %271 = bitcast i8* %270 to i32*
  store i32 %load_target27, i32* %271
  %272 = bitcast %struct.lua_TValue* %90 to i32*
  %273 = bitcast i32* %272 to i8*
  %274 = getelementptr inbounds i8, i8* %273, i64 8
  %275 = bitcast i8* %274 to i32*
  %load_target28 = load i32, i32* %275
  %R11181 = icmp sge i32 %load_target28, 4
  %R1118129 = zext i1 %R11181 to i32
  %cond30 = icmp ne i32 %R1118129, 0
  br i1 %cond30, label %L2037, label %L2022

L2037:                                            ; preds = %L2036
  %276 = bitcast %struct.lua_TValue* %90 to { [184 x i8] }**
  %277 = bitcast { [184 x i8] }** %276 to i8*
  %278 = getelementptr inbounds i8, i8* %277, i64 0
  %279 = bitcast i8* %278 to { [184 x i8] }**
  %load_target31 = load { [184 x i8] }*, { [184 x i8] }** %279
  %280 = bitcast { [184 x i8] }* %load_target31 to i8*
  %281 = getelementptr inbounds i8, i8* %280, i64 9
  %load_target32 = load i8, i8* %281
  %R11185 = zext i8 %load_target32 to i32
  %R11186 = and i32 %R11185, 3
  %cond33 = icmp ne i32 %R11186, 0
  br i1 %cond33, label %L2038, label %L2022

L2038:                                            ; preds = %L2037
  %R11188 = bitcast %struct.UpVal* %load_target24 to { [184 x i8] }*
  %282 = bitcast { [184 x i8] }* %R11188 to i8*
  %283 = getelementptr inbounds i8, i8* %282, i64 9
  %load_target34 = load i8, i8* %283
  %R11190 = zext i8 %load_target34 to i32
  %R11191 = and i32 %R11190, 4
  %cond35 = icmp ne i32 %R11191, 0
  br i1 %cond35, label %L2039, label %L2022

L2039:                                            ; preds = %L2038
  call void @luaC_barrierf(%struct.lua_State* %ARG1, { [184 x i8] }* %R11188, { [184 x i8] }* %load_target31)
  br label %L2022

L2040:                                            ; preds = %L2022
  %284 = bitcast %struct.lua_State* %ARG1 to i32**
  %285 = bitcast i32** %284 to i8*
  %286 = getelementptr inbounds i8, i8* %285, i64 48
  %287 = bitcast i8* %286 to i32**
  store i32* %83, i32** %287
  %cond36 = icmp ne i32 %R11206, 0
  br i1 %cond36, label %L2041, label %L2042

L2041:                                            ; preds = %L2040
  %R11214 = and i32 %R10989, 255
  %R11215 = sext i32 %R11214 to i64
  %R11216 = mul i64 %R11215, 16
  %288 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %289 = getelementptr inbounds i8, i8* %288, i64 %R11216
  %290 = bitcast i8* %289 to %struct.lua_TValue*
  store %struct.lua_TValue* %290, %struct.lua_TValue** %4
  br label %L2043

L2042:                                            ; preds = %L2040
  %R11224 = sext i32 %R11100 to i64
  %R11225 = mul i64 %R11224, 16
  %291 = bitcast %struct.lua_TValue* %87 to i8*
  %292 = getelementptr inbounds i8, i8* %291, i64 %R11225
  %293 = bitcast i8* %292 to %struct.lua_TValue*
  store %struct.lua_TValue* %293, %struct.lua_TValue** %4
  br label %L2043

L2043:                                            ; preds = %L2042, %L2041
  %294 = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %cond37 = icmp ne i32 %R11110, 0
  br i1 %cond37, label %L2044, label %L2045

L2044:                                            ; preds = %L2043
  %R11242 = and i32 %R11006, 255
  %R11243 = sext i32 %R11242 to i64
  %R11244 = mul i64 %R11243, 16
  %295 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %296 = getelementptr inbounds i8, i8* %295, i64 %R11244
  %297 = bitcast i8* %296 to %struct.lua_TValue*
  store %struct.lua_TValue* %297, %struct.lua_TValue** %5
  br label %L2046

L2045:                                            ; preds = %L2043
  %R11252 = sext i32 %R11031 to i64
  %R11253 = mul i64 %R11252, 16
  %298 = bitcast %struct.lua_TValue* %87 to i8*
  %299 = getelementptr inbounds i8, i8* %298, i64 %R11253
  %300 = bitcast i8* %299 to %struct.lua_TValue*
  store %struct.lua_TValue* %300, %struct.lua_TValue** %5
  br label %L2046

L2046:                                            ; preds = %L2045, %L2044
  %301 = load %struct.lua_TValue*, %struct.lua_TValue** %5
  call void @luaV_settable(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %294, %struct.lua_TValue* %301)
  %302 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %303 = bitcast %struct.lua_TValue** %302 to i8*
  %304 = getelementptr inbounds i8, i8* %303, i64 24
  %305 = bitcast i8* %304 to %struct.lua_TValue**
  %load_target38 = load %struct.lua_TValue*, %struct.lua_TValue** %305
  store %struct.lua_TValue* %load_target38, %struct.lua_TValue** %1
  br label %L2022

L2047:                                            ; preds = %L2022
  %R11272 = call i32 @luaO_fb2int(i32 %R11100)
  %R11274 = call i32 @luaO_fb2int(i32 %R11031)
  %R11275 = call %struct.Table* @luaH_new(%struct.lua_State* %ARG1, i32 %R11272, i32 %R11274)
  %R11276 = bitcast %struct.Table* %R11275 to { [184 x i8] }*
  %306 = bitcast %struct.lua_TValue* %90 to { [184 x i8] }**
  %307 = bitcast { [184 x i8] }** %306 to i8*
  %308 = getelementptr inbounds i8, i8* %307, i64 0
  %309 = bitcast i8* %308 to { [184 x i8] }**
  store { [184 x i8] }* %R11276, { [184 x i8] }** %309
  %310 = bitcast %struct.lua_TValue* %90 to i32*
  %311 = bitcast i32* %310 to i8*
  %312 = getelementptr inbounds i8, i8* %311, i64 8
  %313 = bitcast i8* %312 to i32*
  store i32 5, i32* %313
  %314 = bitcast %struct.lua_State* %ARG1 to i32**
  %315 = bitcast i32** %314 to i8*
  %316 = getelementptr inbounds i8, i8* %315, i64 48
  %317 = bitcast i8* %316 to i32**
  store i32* %83, i32** %317
  %318 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %319 = bitcast %struct.global_State** %318 to i8*
  %320 = getelementptr inbounds i8, i8* %319, i64 32
  %321 = bitcast i8* %320 to %struct.global_State**
  %load_target39 = load %struct.global_State*, %struct.global_State** %321
  %322 = bitcast %struct.global_State* %load_target39 to i64*
  %323 = bitcast i64* %322 to i8*
  %324 = getelementptr inbounds i8, i8* %323, i64 120
  %325 = bitcast i8* %324 to i64*
  %load_target40 = load i64, i64* %325
  %326 = bitcast %struct.global_State* %load_target39 to i64*
  %327 = bitcast i64* %326 to i8*
  %328 = getelementptr inbounds i8, i8* %327, i64 112
  %329 = bitcast i8* %328 to i64*
  %load_target41 = load i64, i64* %329
  %R11287 = icmp uge i64 %load_target40, %load_target41
  %R1128742 = zext i1 %R11287 to i32
  %cond43 = icmp ne i32 %R1128742, 0
  br i1 %cond43, label %L2048, label %L2049

L2048:                                            ; preds = %L2047
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2049

L2049:                                            ; preds = %L2048, %L2047
  %330 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %331 = bitcast %struct.lua_TValue** %330 to i8*
  %332 = getelementptr inbounds i8, i8* %331, i64 24
  %333 = bitcast i8* %332 to %struct.lua_TValue**
  %load_target44 = load %struct.lua_TValue*, %struct.lua_TValue** %333
  store %struct.lua_TValue* %load_target44, %struct.lua_TValue** %1
  br label %L2022

L2050:                                            ; preds = %L2022
  %R11297 = sext i32 %R11100 to i64
  %R11298 = mul i64 %R11297, 16
  %334 = bitcast %struct.lua_TValue* %87 to i8*
  %335 = getelementptr inbounds i8, i8* %334, i64 %R11298
  %336 = bitcast i8* %335 to %struct.lua_TValue*
  %337 = bitcast %struct.lua_TValue* %336 to { [8 x i8] }*
  %338 = bitcast { [8 x i8] }* %337 to i8*
  %339 = getelementptr inbounds i8, i8* %338, i64 0
  %340 = bitcast i8* %339 to { [8 x i8] }*
  %load_target45 = load { [8 x i8] }, { [8 x i8] }* %340
  %341 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %342 = bitcast { [8 x i8] }* %341 to i8*
  %343 = getelementptr inbounds i8, i8* %342, i64 16
  %344 = bitcast i8* %343 to { [8 x i8] }*
  store { [8 x i8] } %load_target45, { [8 x i8] }* %344
  %345 = bitcast %struct.lua_TValue* %336 to i32*
  %346 = bitcast i32* %345 to i8*
  %347 = getelementptr inbounds i8, i8* %346, i64 8
  %348 = bitcast i8* %347 to i32*
  %load_target46 = load i32, i32* %348
  %349 = bitcast %struct.lua_TValue* %90 to i32*
  %350 = bitcast i32* %349 to i8*
  %351 = getelementptr inbounds i8, i8* %350, i64 24
  %352 = bitcast i8* %351 to i32*
  store i32 %load_target46, i32* %352
  %353 = bitcast %struct.lua_State* %ARG1 to i32**
  %354 = bitcast i32** %353 to i8*
  %355 = getelementptr inbounds i8, i8* %354, i64 48
  %356 = bitcast i8* %355 to i32**
  store i32* %83, i32** %356
  %cond47 = icmp ne i32 %R11110, 0
  br i1 %cond47, label %L2051, label %L2052

L2051:                                            ; preds = %L2050
  %R11327 = and i32 %R11006, 255
  %R11328 = sext i32 %R11327 to i64
  %R11329 = mul i64 %R11328, 16
  %357 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %358 = getelementptr inbounds i8, i8* %357, i64 %R11329
  %359 = bitcast i8* %358 to %struct.lua_TValue*
  store %struct.lua_TValue* %359, %struct.lua_TValue** %6
  br label %L2053

L2052:                                            ; preds = %L2050
  %R11337 = sext i32 %R11031 to i64
  %R11338 = mul i64 %R11337, 16
  %360 = bitcast %struct.lua_TValue* %87 to i8*
  %361 = getelementptr inbounds i8, i8* %360, i64 %R11338
  %362 = bitcast i8* %361 to %struct.lua_TValue*
  store %struct.lua_TValue* %362, %struct.lua_TValue** %6
  br label %L2053

L2053:                                            ; preds = %L2052, %L2051
  %363 = load %struct.lua_TValue*, %struct.lua_TValue** %6
  call void @luaV_gettable(%struct.lua_State* %ARG1, %struct.lua_TValue* %336, %struct.lua_TValue* %363, %struct.lua_TValue* %90)
  %364 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %365 = bitcast %struct.lua_TValue** %364 to i8*
  %366 = getelementptr inbounds i8, i8* %365, i64 24
  %367 = bitcast i8* %366 to %struct.lua_TValue**
  %load_target48 = load %struct.lua_TValue*, %struct.lua_TValue** %367
  store %struct.lua_TValue* %load_target48, %struct.lua_TValue** %1
  br label %L2022

L2054:                                            ; preds = %L2022
  %cond49 = icmp ne i32 %R11206, 0
  br i1 %cond49, label %L2055, label %L2056

L2055:                                            ; preds = %L2054
  %R11358 = and i32 %R10989, 255
  %R11359 = sext i32 %R11358 to i64
  %R11360 = mul i64 %R11359, 16
  %368 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %369 = getelementptr inbounds i8, i8* %368, i64 %R11360
  %370 = bitcast i8* %369 to %struct.lua_TValue*
  store %struct.lua_TValue* %370, %struct.lua_TValue** %7
  br label %L2057

L2056:                                            ; preds = %L2054
  %R11368 = sext i32 %R11100 to i64
  %R11369 = mul i64 %R11368, 16
  %371 = bitcast %struct.lua_TValue* %87 to i8*
  %372 = getelementptr inbounds i8, i8* %371, i64 %R11369
  %373 = bitcast i8* %372 to %struct.lua_TValue*
  store %struct.lua_TValue* %373, %struct.lua_TValue** %7
  br label %L2057

L2057:                                            ; preds = %L2056, %L2055
  %374 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %cond50 = icmp ne i32 %R11110, 0
  br i1 %cond50, label %L2058, label %L2059

L2058:                                            ; preds = %L2057
  %R11386 = and i32 %R11006, 255
  %R11387 = sext i32 %R11386 to i64
  %R11388 = mul i64 %R11387, 16
  %375 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %376 = getelementptr inbounds i8, i8* %375, i64 %R11388
  %377 = bitcast i8* %376 to %struct.lua_TValue*
  store %struct.lua_TValue* %377, %struct.lua_TValue** %8
  br label %L2060

L2059:                                            ; preds = %L2057
  %R11396 = sext i32 %R11031 to i64
  %R11397 = mul i64 %R11396, 16
  %378 = bitcast %struct.lua_TValue* %87 to i8*
  %379 = getelementptr inbounds i8, i8* %378, i64 %R11397
  %380 = bitcast i8* %379 to %struct.lua_TValue*
  store %struct.lua_TValue* %380, %struct.lua_TValue** %8
  br label %L2060

L2060:                                            ; preds = %L2059, %L2058
  %381 = load %struct.lua_TValue*, %struct.lua_TValue** %8
  %382 = bitcast %struct.lua_TValue* %374 to i32*
  %383 = bitcast i32* %382 to i8*
  %384 = getelementptr inbounds i8, i8* %383, i64 8
  %385 = bitcast i8* %384 to i32*
  %load_target51 = load i32, i32* %385
  %R11403 = icmp eq i32 %load_target51, 3
  %R1140352 = zext i1 %R11403 to i32
  %cond53 = icmp ne i32 %R1140352, 0
  br i1 %cond53, label %L2061, label %L2063

L2061:                                            ; preds = %L2060
  %386 = bitcast %struct.lua_TValue* %381 to i32*
  %387 = bitcast i32* %386 to i8*
  %388 = getelementptr inbounds i8, i8* %387, i64 8
  %389 = bitcast i8* %388 to i32*
  %load_target54 = load i32, i32* %389
  %R11406 = icmp eq i32 %load_target54, 3
  %R1140655 = zext i1 %R11406 to i32
  %cond56 = icmp ne i32 %R1140655, 0
  br i1 %cond56, label %L2062, label %L2063

L2062:                                            ; preds = %L2061
  %390 = bitcast %struct.lua_TValue* %374 to double*
  %391 = bitcast double* %390 to i8*
  %392 = getelementptr inbounds i8, i8* %391, i64 0
  %393 = bitcast i8* %392 to double*
  %load_target57 = load double, double* %393
  %394 = bitcast %struct.lua_TValue* %381 to double*
  %395 = bitcast double* %394 to i8*
  %396 = getelementptr inbounds i8, i8* %395, i64 0
  %397 = bitcast i8* %396 to double*
  %load_target58 = load double, double* %397
  %R11414 = fadd double %load_target57, %load_target58
  %398 = bitcast %struct.lua_TValue* %90 to double*
  %399 = bitcast double* %398 to i8*
  %400 = getelementptr inbounds i8, i8* %399, i64 0
  %401 = bitcast i8* %400 to double*
  store double %R11414, double* %401
  %402 = bitcast %struct.lua_TValue* %90 to i32*
  %403 = bitcast i32* %402 to i8*
  %404 = getelementptr inbounds i8, i8* %403, i64 8
  %405 = bitcast i8* %404 to i32*
  store i32 3, i32* %405
  br label %L2022

L2063:                                            ; preds = %L2061, %L2060
  %406 = bitcast %struct.lua_State* %ARG1 to i32**
  %407 = bitcast i32** %406 to i8*
  %408 = getelementptr inbounds i8, i8* %407, i64 48
  %409 = bitcast i8* %408 to i32**
  store i32* %83, i32** %409
  call void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %374, %struct.lua_TValue* %381, i32 5)
  %410 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %411 = bitcast %struct.lua_TValue** %410 to i8*
  %412 = getelementptr inbounds i8, i8* %411, i64 24
  %413 = bitcast i8* %412 to %struct.lua_TValue**
  %load_target59 = load %struct.lua_TValue*, %struct.lua_TValue** %413
  store %struct.lua_TValue* %load_target59, %struct.lua_TValue** %1
  br label %L2022

L2064:                                            ; preds = %L2022
  %cond60 = icmp ne i32 %R11206, 0
  br i1 %cond60, label %L2065, label %L2066

L2065:                                            ; preds = %L2064
  %R11438 = and i32 %R10989, 255
  %R11439 = sext i32 %R11438 to i64
  %R11440 = mul i64 %R11439, 16
  %414 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %415 = getelementptr inbounds i8, i8* %414, i64 %R11440
  %416 = bitcast i8* %415 to %struct.lua_TValue*
  store %struct.lua_TValue* %416, %struct.lua_TValue** %9
  br label %L2067

L2066:                                            ; preds = %L2064
  %R11448 = sext i32 %R11100 to i64
  %R11449 = mul i64 %R11448, 16
  %417 = bitcast %struct.lua_TValue* %87 to i8*
  %418 = getelementptr inbounds i8, i8* %417, i64 %R11449
  %419 = bitcast i8* %418 to %struct.lua_TValue*
  store %struct.lua_TValue* %419, %struct.lua_TValue** %9
  br label %L2067

L2067:                                            ; preds = %L2066, %L2065
  %420 = load %struct.lua_TValue*, %struct.lua_TValue** %9
  %cond61 = icmp ne i32 %R11110, 0
  br i1 %cond61, label %L2068, label %L2069

L2068:                                            ; preds = %L2067
  %R11466 = and i32 %R11006, 255
  %R11467 = sext i32 %R11466 to i64
  %R11468 = mul i64 %R11467, 16
  %421 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %422 = getelementptr inbounds i8, i8* %421, i64 %R11468
  %423 = bitcast i8* %422 to %struct.lua_TValue*
  store %struct.lua_TValue* %423, %struct.lua_TValue** %10
  br label %L2070

L2069:                                            ; preds = %L2067
  %R11476 = sext i32 %R11031 to i64
  %R11477 = mul i64 %R11476, 16
  %424 = bitcast %struct.lua_TValue* %87 to i8*
  %425 = getelementptr inbounds i8, i8* %424, i64 %R11477
  %426 = bitcast i8* %425 to %struct.lua_TValue*
  store %struct.lua_TValue* %426, %struct.lua_TValue** %10
  br label %L2070

L2070:                                            ; preds = %L2069, %L2068
  %427 = load %struct.lua_TValue*, %struct.lua_TValue** %10
  %428 = bitcast %struct.lua_TValue* %420 to i32*
  %429 = bitcast i32* %428 to i8*
  %430 = getelementptr inbounds i8, i8* %429, i64 8
  %431 = bitcast i8* %430 to i32*
  %load_target62 = load i32, i32* %431
  %R11483 = icmp eq i32 %load_target62, 3
  %R1148363 = zext i1 %R11483 to i32
  %cond64 = icmp ne i32 %R1148363, 0
  br i1 %cond64, label %L2071, label %L2073

L2071:                                            ; preds = %L2070
  %432 = bitcast %struct.lua_TValue* %427 to i32*
  %433 = bitcast i32* %432 to i8*
  %434 = getelementptr inbounds i8, i8* %433, i64 8
  %435 = bitcast i8* %434 to i32*
  %load_target65 = load i32, i32* %435
  %R11486 = icmp eq i32 %load_target65, 3
  %R1148666 = zext i1 %R11486 to i32
  %cond67 = icmp ne i32 %R1148666, 0
  br i1 %cond67, label %L2072, label %L2073

L2072:                                            ; preds = %L2071
  %436 = bitcast %struct.lua_TValue* %420 to double*
  %437 = bitcast double* %436 to i8*
  %438 = getelementptr inbounds i8, i8* %437, i64 0
  %439 = bitcast i8* %438 to double*
  %load_target68 = load double, double* %439
  %440 = bitcast %struct.lua_TValue* %427 to double*
  %441 = bitcast double* %440 to i8*
  %442 = getelementptr inbounds i8, i8* %441, i64 0
  %443 = bitcast i8* %442 to double*
  %load_target69 = load double, double* %443
  %R11494 = fsub double %load_target68, %load_target69
  %444 = bitcast %struct.lua_TValue* %90 to double*
  %445 = bitcast double* %444 to i8*
  %446 = getelementptr inbounds i8, i8* %445, i64 0
  %447 = bitcast i8* %446 to double*
  store double %R11494, double* %447
  %448 = bitcast %struct.lua_TValue* %90 to i32*
  %449 = bitcast i32* %448 to i8*
  %450 = getelementptr inbounds i8, i8* %449, i64 8
  %451 = bitcast i8* %450 to i32*
  store i32 3, i32* %451
  br label %L2022

L2073:                                            ; preds = %L2071, %L2070
  %452 = bitcast %struct.lua_State* %ARG1 to i32**
  %453 = bitcast i32** %452 to i8*
  %454 = getelementptr inbounds i8, i8* %453, i64 48
  %455 = bitcast i8* %454 to i32**
  store i32* %83, i32** %455
  call void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %420, %struct.lua_TValue* %427, i32 6)
  %456 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %457 = bitcast %struct.lua_TValue** %456 to i8*
  %458 = getelementptr inbounds i8, i8* %457, i64 24
  %459 = bitcast i8* %458 to %struct.lua_TValue**
  %load_target70 = load %struct.lua_TValue*, %struct.lua_TValue** %459
  store %struct.lua_TValue* %load_target70, %struct.lua_TValue** %1
  br label %L2022

L2074:                                            ; preds = %L2022
  %cond71 = icmp ne i32 %R11206, 0
  br i1 %cond71, label %L2075, label %L2076

L2075:                                            ; preds = %L2074
  %R11518 = and i32 %R10989, 255
  %R11519 = sext i32 %R11518 to i64
  %R11520 = mul i64 %R11519, 16
  %460 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %461 = getelementptr inbounds i8, i8* %460, i64 %R11520
  %462 = bitcast i8* %461 to %struct.lua_TValue*
  store %struct.lua_TValue* %462, %struct.lua_TValue** %11
  br label %L2077

L2076:                                            ; preds = %L2074
  %R11528 = sext i32 %R11100 to i64
  %R11529 = mul i64 %R11528, 16
  %463 = bitcast %struct.lua_TValue* %87 to i8*
  %464 = getelementptr inbounds i8, i8* %463, i64 %R11529
  %465 = bitcast i8* %464 to %struct.lua_TValue*
  store %struct.lua_TValue* %465, %struct.lua_TValue** %11
  br label %L2077

L2077:                                            ; preds = %L2076, %L2075
  %466 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %cond72 = icmp ne i32 %R11110, 0
  br i1 %cond72, label %L2078, label %L2079

L2078:                                            ; preds = %L2077
  %R11546 = and i32 %R11006, 255
  %R11547 = sext i32 %R11546 to i64
  %R11548 = mul i64 %R11547, 16
  %467 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %468 = getelementptr inbounds i8, i8* %467, i64 %R11548
  %469 = bitcast i8* %468 to %struct.lua_TValue*
  store %struct.lua_TValue* %469, %struct.lua_TValue** %12
  br label %L2080

L2079:                                            ; preds = %L2077
  %R11556 = sext i32 %R11031 to i64
  %R11557 = mul i64 %R11556, 16
  %470 = bitcast %struct.lua_TValue* %87 to i8*
  %471 = getelementptr inbounds i8, i8* %470, i64 %R11557
  %472 = bitcast i8* %471 to %struct.lua_TValue*
  store %struct.lua_TValue* %472, %struct.lua_TValue** %12
  br label %L2080

L2080:                                            ; preds = %L2079, %L2078
  %473 = load %struct.lua_TValue*, %struct.lua_TValue** %12
  %474 = bitcast %struct.lua_TValue* %466 to i32*
  %475 = bitcast i32* %474 to i8*
  %476 = getelementptr inbounds i8, i8* %475, i64 8
  %477 = bitcast i8* %476 to i32*
  %load_target73 = load i32, i32* %477
  %R11563 = icmp eq i32 %load_target73, 3
  %R1156374 = zext i1 %R11563 to i32
  %cond75 = icmp ne i32 %R1156374, 0
  br i1 %cond75, label %L2081, label %L2083

L2081:                                            ; preds = %L2080
  %478 = bitcast %struct.lua_TValue* %473 to i32*
  %479 = bitcast i32* %478 to i8*
  %480 = getelementptr inbounds i8, i8* %479, i64 8
  %481 = bitcast i8* %480 to i32*
  %load_target76 = load i32, i32* %481
  %R11566 = icmp eq i32 %load_target76, 3
  %R1156677 = zext i1 %R11566 to i32
  %cond78 = icmp ne i32 %R1156677, 0
  br i1 %cond78, label %L2082, label %L2083

L2082:                                            ; preds = %L2081
  %482 = bitcast %struct.lua_TValue* %466 to double*
  %483 = bitcast double* %482 to i8*
  %484 = getelementptr inbounds i8, i8* %483, i64 0
  %485 = bitcast i8* %484 to double*
  %load_target79 = load double, double* %485
  %486 = bitcast %struct.lua_TValue* %473 to double*
  %487 = bitcast double* %486 to i8*
  %488 = getelementptr inbounds i8, i8* %487, i64 0
  %489 = bitcast i8* %488 to double*
  %load_target80 = load double, double* %489
  %R11574 = fmul double %load_target79, %load_target80
  %490 = bitcast %struct.lua_TValue* %90 to double*
  %491 = bitcast double* %490 to i8*
  %492 = getelementptr inbounds i8, i8* %491, i64 0
  %493 = bitcast i8* %492 to double*
  store double %R11574, double* %493
  %494 = bitcast %struct.lua_TValue* %90 to i32*
  %495 = bitcast i32* %494 to i8*
  %496 = getelementptr inbounds i8, i8* %495, i64 8
  %497 = bitcast i8* %496 to i32*
  store i32 3, i32* %497
  br label %L2022

L2083:                                            ; preds = %L2081, %L2080
  %498 = bitcast %struct.lua_State* %ARG1 to i32**
  %499 = bitcast i32** %498 to i8*
  %500 = getelementptr inbounds i8, i8* %499, i64 48
  %501 = bitcast i8* %500 to i32**
  store i32* %83, i32** %501
  call void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %466, %struct.lua_TValue* %473, i32 7)
  %502 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %503 = bitcast %struct.lua_TValue** %502 to i8*
  %504 = getelementptr inbounds i8, i8* %503, i64 24
  %505 = bitcast i8* %504 to %struct.lua_TValue**
  %load_target81 = load %struct.lua_TValue*, %struct.lua_TValue** %505
  store %struct.lua_TValue* %load_target81, %struct.lua_TValue** %1
  br label %L2022

L2084:                                            ; preds = %L2022
  %cond82 = icmp ne i32 %R11206, 0
  br i1 %cond82, label %L2085, label %L2086

L2085:                                            ; preds = %L2084
  %R11598 = and i32 %R10989, 255
  %R11599 = sext i32 %R11598 to i64
  %R11600 = mul i64 %R11599, 16
  %506 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %507 = getelementptr inbounds i8, i8* %506, i64 %R11600
  %508 = bitcast i8* %507 to %struct.lua_TValue*
  store %struct.lua_TValue* %508, %struct.lua_TValue** %13
  br label %L2087

L2086:                                            ; preds = %L2084
  %R11608 = sext i32 %R11100 to i64
  %R11609 = mul i64 %R11608, 16
  %509 = bitcast %struct.lua_TValue* %87 to i8*
  %510 = getelementptr inbounds i8, i8* %509, i64 %R11609
  %511 = bitcast i8* %510 to %struct.lua_TValue*
  store %struct.lua_TValue* %511, %struct.lua_TValue** %13
  br label %L2087

L2087:                                            ; preds = %L2086, %L2085
  %512 = load %struct.lua_TValue*, %struct.lua_TValue** %13
  %cond83 = icmp ne i32 %R11110, 0
  br i1 %cond83, label %L2088, label %L2089

L2088:                                            ; preds = %L2087
  %R11626 = and i32 %R11006, 255
  %R11627 = sext i32 %R11626 to i64
  %R11628 = mul i64 %R11627, 16
  %513 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %514 = getelementptr inbounds i8, i8* %513, i64 %R11628
  %515 = bitcast i8* %514 to %struct.lua_TValue*
  store %struct.lua_TValue* %515, %struct.lua_TValue** %14
  br label %L2090

L2089:                                            ; preds = %L2087
  %R11636 = sext i32 %R11031 to i64
  %R11637 = mul i64 %R11636, 16
  %516 = bitcast %struct.lua_TValue* %87 to i8*
  %517 = getelementptr inbounds i8, i8* %516, i64 %R11637
  %518 = bitcast i8* %517 to %struct.lua_TValue*
  store %struct.lua_TValue* %518, %struct.lua_TValue** %14
  br label %L2090

L2090:                                            ; preds = %L2089, %L2088
  %519 = load %struct.lua_TValue*, %struct.lua_TValue** %14
  %520 = bitcast %struct.lua_TValue* %512 to i32*
  %521 = bitcast i32* %520 to i8*
  %522 = getelementptr inbounds i8, i8* %521, i64 8
  %523 = bitcast i8* %522 to i32*
  %load_target84 = load i32, i32* %523
  %R11643 = icmp eq i32 %load_target84, 3
  %R1164385 = zext i1 %R11643 to i32
  %cond86 = icmp ne i32 %R1164385, 0
  br i1 %cond86, label %L2091, label %L2093

L2091:                                            ; preds = %L2090
  %524 = bitcast %struct.lua_TValue* %519 to i32*
  %525 = bitcast i32* %524 to i8*
  %526 = getelementptr inbounds i8, i8* %525, i64 8
  %527 = bitcast i8* %526 to i32*
  %load_target87 = load i32, i32* %527
  %R11646 = icmp eq i32 %load_target87, 3
  %R1164688 = zext i1 %R11646 to i32
  %cond89 = icmp ne i32 %R1164688, 0
  br i1 %cond89, label %L2092, label %L2093

L2092:                                            ; preds = %L2091
  %528 = bitcast %struct.lua_TValue* %512 to double*
  %529 = bitcast double* %528 to i8*
  %530 = getelementptr inbounds i8, i8* %529, i64 0
  %531 = bitcast i8* %530 to double*
  %load_target90 = load double, double* %531
  %532 = bitcast %struct.lua_TValue* %519 to double*
  %533 = bitcast double* %532 to i8*
  %534 = getelementptr inbounds i8, i8* %533, i64 0
  %535 = bitcast i8* %534 to double*
  %load_target91 = load double, double* %535
  %R11654 = fdiv double %load_target90, %load_target91
  %536 = bitcast %struct.lua_TValue* %90 to double*
  %537 = bitcast double* %536 to i8*
  %538 = getelementptr inbounds i8, i8* %537, i64 0
  %539 = bitcast i8* %538 to double*
  store double %R11654, double* %539
  %540 = bitcast %struct.lua_TValue* %90 to i32*
  %541 = bitcast i32* %540 to i8*
  %542 = getelementptr inbounds i8, i8* %541, i64 8
  %543 = bitcast i8* %542 to i32*
  store i32 3, i32* %543
  br label %L2022

L2093:                                            ; preds = %L2091, %L2090
  %544 = bitcast %struct.lua_State* %ARG1 to i32**
  %545 = bitcast i32** %544 to i8*
  %546 = getelementptr inbounds i8, i8* %545, i64 48
  %547 = bitcast i8* %546 to i32**
  store i32* %83, i32** %547
  call void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %512, %struct.lua_TValue* %519, i32 8)
  %548 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %549 = bitcast %struct.lua_TValue** %548 to i8*
  %550 = getelementptr inbounds i8, i8* %549, i64 24
  %551 = bitcast i8* %550 to %struct.lua_TValue**
  %load_target92 = load %struct.lua_TValue*, %struct.lua_TValue** %551
  store %struct.lua_TValue* %load_target92, %struct.lua_TValue** %1
  br label %L2022

L2094:                                            ; preds = %L2022
  %cond93 = icmp ne i32 %R11206, 0
  br i1 %cond93, label %L2095, label %L2096

L2095:                                            ; preds = %L2094
  %R11678 = and i32 %R10989, 255
  %R11679 = sext i32 %R11678 to i64
  %R11680 = mul i64 %R11679, 16
  %552 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %553 = getelementptr inbounds i8, i8* %552, i64 %R11680
  %554 = bitcast i8* %553 to %struct.lua_TValue*
  store %struct.lua_TValue* %554, %struct.lua_TValue** %15
  br label %L2097

L2096:                                            ; preds = %L2094
  %R11688 = sext i32 %R11100 to i64
  %R11689 = mul i64 %R11688, 16
  %555 = bitcast %struct.lua_TValue* %87 to i8*
  %556 = getelementptr inbounds i8, i8* %555, i64 %R11689
  %557 = bitcast i8* %556 to %struct.lua_TValue*
  store %struct.lua_TValue* %557, %struct.lua_TValue** %15
  br label %L2097

L2097:                                            ; preds = %L2096, %L2095
  %558 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %cond94 = icmp ne i32 %R11110, 0
  br i1 %cond94, label %L2098, label %L2099

L2098:                                            ; preds = %L2097
  %R11706 = and i32 %R11006, 255
  %R11707 = sext i32 %R11706 to i64
  %R11708 = mul i64 %R11707, 16
  %559 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %560 = getelementptr inbounds i8, i8* %559, i64 %R11708
  %561 = bitcast i8* %560 to %struct.lua_TValue*
  store %struct.lua_TValue* %561, %struct.lua_TValue** %16
  br label %L2100

L2099:                                            ; preds = %L2097
  %R11716 = sext i32 %R11031 to i64
  %R11717 = mul i64 %R11716, 16
  %562 = bitcast %struct.lua_TValue* %87 to i8*
  %563 = getelementptr inbounds i8, i8* %562, i64 %R11717
  %564 = bitcast i8* %563 to %struct.lua_TValue*
  store %struct.lua_TValue* %564, %struct.lua_TValue** %16
  br label %L2100

L2100:                                            ; preds = %L2099, %L2098
  %565 = load %struct.lua_TValue*, %struct.lua_TValue** %16
  %566 = bitcast %struct.lua_TValue* %558 to i32*
  %567 = bitcast i32* %566 to i8*
  %568 = getelementptr inbounds i8, i8* %567, i64 8
  %569 = bitcast i8* %568 to i32*
  %load_target95 = load i32, i32* %569
  %R11723 = icmp eq i32 %load_target95, 3
  %R1172396 = zext i1 %R11723 to i32
  %cond97 = icmp ne i32 %R1172396, 0
  br i1 %cond97, label %L2101, label %L2103

L2101:                                            ; preds = %L2100
  %570 = bitcast %struct.lua_TValue* %565 to i32*
  %571 = bitcast i32* %570 to i8*
  %572 = getelementptr inbounds i8, i8* %571, i64 8
  %573 = bitcast i8* %572 to i32*
  %load_target98 = load i32, i32* %573
  %R11726 = icmp eq i32 %load_target98, 3
  %R1172699 = zext i1 %R11726 to i32
  %cond100 = icmp ne i32 %R1172699, 0
  br i1 %cond100, label %L2102, label %L2103

L2102:                                            ; preds = %L2101
  %574 = bitcast %struct.lua_TValue* %558 to double*
  %575 = bitcast double* %574 to i8*
  %576 = getelementptr inbounds i8, i8* %575, i64 0
  %577 = bitcast i8* %576 to double*
  %load_target101 = load double, double* %577
  %578 = bitcast %struct.lua_TValue* %565 to double*
  %579 = bitcast double* %578 to i8*
  %580 = getelementptr inbounds i8, i8* %579, i64 0
  %581 = bitcast i8* %580 to double*
  %load_target102 = load double, double* %581
  %R11735 = fdiv double %load_target101, %load_target102
  %R11736 = call double @floor(double %R11735)
  %R11738 = fmul double %R11736, %load_target102
  %R11739 = fsub double %load_target101, %R11738
  %582 = bitcast %struct.lua_TValue* %90 to double*
  %583 = bitcast double* %582 to i8*
  %584 = getelementptr inbounds i8, i8* %583, i64 0
  %585 = bitcast i8* %584 to double*
  store double %R11739, double* %585
  %586 = bitcast %struct.lua_TValue* %90 to i32*
  %587 = bitcast i32* %586 to i8*
  %588 = getelementptr inbounds i8, i8* %587, i64 8
  %589 = bitcast i8* %588 to i32*
  store i32 3, i32* %589
  br label %L2022

L2103:                                            ; preds = %L2101, %L2100
  %590 = bitcast %struct.lua_State* %ARG1 to i32**
  %591 = bitcast i32** %590 to i8*
  %592 = getelementptr inbounds i8, i8* %591, i64 48
  %593 = bitcast i8* %592 to i32**
  store i32* %83, i32** %593
  call void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %558, %struct.lua_TValue* %565, i32 9)
  %594 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %595 = bitcast %struct.lua_TValue** %594 to i8*
  %596 = getelementptr inbounds i8, i8* %595, i64 24
  %597 = bitcast i8* %596 to %struct.lua_TValue**
  %load_target103 = load %struct.lua_TValue*, %struct.lua_TValue** %597
  store %struct.lua_TValue* %load_target103, %struct.lua_TValue** %1
  br label %L2022

L2104:                                            ; preds = %L2022
  %cond104 = icmp ne i32 %R11206, 0
  br i1 %cond104, label %L2105, label %L2106

L2105:                                            ; preds = %L2104
  %R11763 = and i32 %R10989, 255
  %R11764 = sext i32 %R11763 to i64
  %R11765 = mul i64 %R11764, 16
  %598 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %599 = getelementptr inbounds i8, i8* %598, i64 %R11765
  %600 = bitcast i8* %599 to %struct.lua_TValue*
  store %struct.lua_TValue* %600, %struct.lua_TValue** %17
  br label %L2107

L2106:                                            ; preds = %L2104
  %R11773 = sext i32 %R11100 to i64
  %R11774 = mul i64 %R11773, 16
  %601 = bitcast %struct.lua_TValue* %87 to i8*
  %602 = getelementptr inbounds i8, i8* %601, i64 %R11774
  %603 = bitcast i8* %602 to %struct.lua_TValue*
  store %struct.lua_TValue* %603, %struct.lua_TValue** %17
  br label %L2107

L2107:                                            ; preds = %L2106, %L2105
  %604 = load %struct.lua_TValue*, %struct.lua_TValue** %17
  %cond105 = icmp ne i32 %R11110, 0
  br i1 %cond105, label %L2108, label %L2109

L2108:                                            ; preds = %L2107
  %R11791 = and i32 %R11006, 255
  %R11792 = sext i32 %R11791 to i64
  %R11793 = mul i64 %R11792, 16
  %605 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %606 = getelementptr inbounds i8, i8* %605, i64 %R11793
  %607 = bitcast i8* %606 to %struct.lua_TValue*
  store %struct.lua_TValue* %607, %struct.lua_TValue** %18
  br label %L2110

L2109:                                            ; preds = %L2107
  %R11801 = sext i32 %R11031 to i64
  %R11802 = mul i64 %R11801, 16
  %608 = bitcast %struct.lua_TValue* %87 to i8*
  %609 = getelementptr inbounds i8, i8* %608, i64 %R11802
  %610 = bitcast i8* %609 to %struct.lua_TValue*
  store %struct.lua_TValue* %610, %struct.lua_TValue** %18
  br label %L2110

L2110:                                            ; preds = %L2109, %L2108
  %611 = load %struct.lua_TValue*, %struct.lua_TValue** %18
  %612 = bitcast %struct.lua_TValue* %604 to i32*
  %613 = bitcast i32* %612 to i8*
  %614 = getelementptr inbounds i8, i8* %613, i64 8
  %615 = bitcast i8* %614 to i32*
  %load_target106 = load i32, i32* %615
  %R11808 = icmp eq i32 %load_target106, 3
  %R11808107 = zext i1 %R11808 to i32
  %cond108 = icmp ne i32 %R11808107, 0
  br i1 %cond108, label %L2111, label %L2113

L2111:                                            ; preds = %L2110
  %616 = bitcast %struct.lua_TValue* %611 to i32*
  %617 = bitcast i32* %616 to i8*
  %618 = getelementptr inbounds i8, i8* %617, i64 8
  %619 = bitcast i8* %618 to i32*
  %load_target109 = load i32, i32* %619
  %R11811 = icmp eq i32 %load_target109, 3
  %R11811110 = zext i1 %R11811 to i32
  %cond111 = icmp ne i32 %R11811110, 0
  br i1 %cond111, label %L2112, label %L2113

L2112:                                            ; preds = %L2111
  %620 = bitcast %struct.lua_TValue* %604 to double*
  %621 = bitcast double* %620 to i8*
  %622 = getelementptr inbounds i8, i8* %621, i64 0
  %623 = bitcast i8* %622 to double*
  %load_target112 = load double, double* %623
  %624 = bitcast %struct.lua_TValue* %611 to double*
  %625 = bitcast double* %624 to i8*
  %626 = getelementptr inbounds i8, i8* %625, i64 0
  %627 = bitcast i8* %626 to double*
  %load_target113 = load double, double* %627
  %R11819 = call double @pow(double %load_target112, double %load_target113)
  %628 = bitcast %struct.lua_TValue* %90 to double*
  %629 = bitcast double* %628 to i8*
  %630 = getelementptr inbounds i8, i8* %629, i64 0
  %631 = bitcast i8* %630 to double*
  store double %R11819, double* %631
  %632 = bitcast %struct.lua_TValue* %90 to i32*
  %633 = bitcast i32* %632 to i8*
  %634 = getelementptr inbounds i8, i8* %633, i64 8
  %635 = bitcast i8* %634 to i32*
  store i32 3, i32* %635
  br label %L2022

L2113:                                            ; preds = %L2111, %L2110
  %636 = bitcast %struct.lua_State* %ARG1 to i32**
  %637 = bitcast i32** %636 to i8*
  %638 = getelementptr inbounds i8, i8* %637, i64 48
  %639 = bitcast i8* %638 to i32**
  store i32* %83, i32** %639
  call void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %604, %struct.lua_TValue* %611, i32 10)
  %640 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %641 = bitcast %struct.lua_TValue** %640 to i8*
  %642 = getelementptr inbounds i8, i8* %641, i64 24
  %643 = bitcast i8* %642 to %struct.lua_TValue**
  %load_target114 = load %struct.lua_TValue*, %struct.lua_TValue** %643
  store %struct.lua_TValue* %load_target114, %struct.lua_TValue** %1
  br label %L2022

L2114:                                            ; preds = %L2022
  %R11836 = sext i32 %R11100 to i64
  %R11837 = mul i64 %R11836, 16
  %644 = bitcast %struct.lua_TValue* %87 to i8*
  %645 = getelementptr inbounds i8, i8* %644, i64 %R11837
  %646 = bitcast i8* %645 to %struct.lua_TValue*
  %647 = bitcast %struct.lua_TValue* %646 to i32*
  %648 = bitcast i32* %647 to i8*
  %649 = getelementptr inbounds i8, i8* %648, i64 8
  %650 = bitcast i8* %649 to i32*
  %load_target115 = load i32, i32* %650
  %R11841 = icmp eq i32 %load_target115, 3
  %R11841116 = zext i1 %R11841 to i32
  %cond117 = icmp ne i32 %R11841116, 0
  br i1 %cond117, label %L2115, label %L2116

L2115:                                            ; preds = %L2114
  %651 = bitcast %struct.lua_TValue* %646 to double*
  %652 = bitcast double* %651 to i8*
  %653 = getelementptr inbounds i8, i8* %652, i64 0
  %654 = bitcast i8* %653 to double*
  %load_target118 = load double, double* %654
  %R11846 = fsub double -0.000000e+00, %load_target118
  %655 = bitcast %struct.lua_TValue* %90 to double*
  %656 = bitcast double* %655 to i8*
  %657 = getelementptr inbounds i8, i8* %656, i64 0
  %658 = bitcast i8* %657 to double*
  store double %R11846, double* %658
  %659 = bitcast %struct.lua_TValue* %90 to i32*
  %660 = bitcast i32* %659 to i8*
  %661 = getelementptr inbounds i8, i8* %660, i64 8
  %662 = bitcast i8* %661 to i32*
  store i32 3, i32* %662
  br label %L2022

L2116:                                            ; preds = %L2114
  %663 = bitcast %struct.lua_State* %ARG1 to i32**
  %664 = bitcast i32** %663 to i8*
  %665 = getelementptr inbounds i8, i8* %664, i64 48
  %666 = bitcast i8* %665 to i32**
  store i32* %83, i32** %666
  call void @Arith(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, %struct.lua_TValue* %646, %struct.lua_TValue* %646, i32 11)
  %667 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %668 = bitcast %struct.lua_TValue** %667 to i8*
  %669 = getelementptr inbounds i8, i8* %668, i64 24
  %670 = bitcast i8* %669 to %struct.lua_TValue**
  %load_target119 = load %struct.lua_TValue*, %struct.lua_TValue** %670
  store %struct.lua_TValue* %load_target119, %struct.lua_TValue** %1
  br label %L2022

L2117:                                            ; preds = %L2022
  %R11863 = sext i32 %R11100 to i64
  %R11864 = mul i64 %R11863, 16
  %671 = bitcast %struct.lua_TValue* %87 to i8*
  %672 = getelementptr inbounds i8, i8* %671, i64 %R11864
  %673 = bitcast i8* %672 to %struct.lua_TValue*
  %674 = bitcast %struct.lua_TValue* %673 to i32*
  %675 = bitcast i32* %674 to i8*
  %676 = getelementptr inbounds i8, i8* %675, i64 8
  %677 = bitcast i8* %676 to i32*
  %load_target120 = load i32, i32* %677
  %cond121 = icmp ne i32 %load_target120, 0
  br i1 %cond121, label %L2119, label %L2118

L2118:                                            ; preds = %L2117
  store i32 1, i32* %20
  br label %L2123

L2119:                                            ; preds = %L2117
  %R11874 = sext i32 %R11100 to i64
  %R11875 = mul i64 %R11874, 16
  %678 = bitcast %struct.lua_TValue* %87 to i8*
  %679 = getelementptr inbounds i8, i8* %678, i64 %R11875
  %680 = bitcast i8* %679 to %struct.lua_TValue*
  %681 = bitcast %struct.lua_TValue* %680 to i32*
  %682 = bitcast i32* %681 to i8*
  %683 = getelementptr inbounds i8, i8* %682, i64 8
  %684 = bitcast i8* %683 to i32*
  %load_target122 = load i32, i32* %684
  %R11878 = icmp eq i32 %load_target122, 1
  %R11878123 = zext i1 %R11878 to i32
  %cond124 = icmp ne i32 %R11878123, 0
  br i1 %cond124, label %L2120, label %L2121

L2120:                                            ; preds = %L2119
  %R11885 = sext i32 %R11100 to i64
  %R11886 = mul i64 %R11885, 16
  %685 = bitcast %struct.lua_TValue* %87 to i8*
  %686 = getelementptr inbounds i8, i8* %685, i64 %R11886
  %687 = bitcast i8* %686 to %struct.lua_TValue*
  %688 = bitcast %struct.lua_TValue* %687 to i32*
  %689 = bitcast i32* %688 to i8*
  %690 = getelementptr inbounds i8, i8* %689, i64 0
  %691 = bitcast i8* %690 to i32*
  %load_target125 = load i32, i32* %691
  %R11889 = icmp eq i32 %load_target125, 0
  %R11889126 = zext i1 %R11889 to i32
  store i32 %R11889126, i32* %19
  br label %L2122

L2121:                                            ; preds = %L2119
  store i32 0, i32* %19
  br label %L2122

L2122:                                            ; preds = %L2121, %L2120
  %692 = load i32, i32* %19
  store i32 %692, i32* %20
  br label %L2123

L2123:                                            ; preds = %L2122, %L2118
  %693 = load i32, i32* %20
  %694 = bitcast %struct.lua_TValue* %90 to i32*
  %695 = bitcast i32* %694 to i8*
  %696 = getelementptr inbounds i8, i8* %695, i64 0
  %697 = bitcast i8* %696 to i32*
  store i32 %693, i32* %697
  %698 = bitcast %struct.lua_TValue* %90 to i32*
  %699 = bitcast i32* %698 to i8*
  %700 = getelementptr inbounds i8, i8* %699, i64 8
  %701 = bitcast i8* %700 to i32*
  store i32 1, i32* %701
  br label %L2022

L2124:                                            ; preds = %L2022
  %R11902 = sext i32 %R11100 to i64
  %R11903 = mul i64 %R11902, 16
  %702 = bitcast %struct.lua_TValue* %87 to i8*
  %703 = getelementptr inbounds i8, i8* %702, i64 %R11903
  %704 = bitcast i8* %703 to %struct.lua_TValue*
  %705 = bitcast %struct.lua_TValue* %704 to i32*
  %706 = bitcast i32* %705 to i8*
  %707 = getelementptr inbounds i8, i8* %706, i64 8
  %708 = bitcast i8* %707 to i32*
  %load_target127 = load i32, i32* %708
  switch i32 %load_target127, label %L2127 [
    i32 4, label %L2126
    i32 5, label %L2125
  ]

L2125:                                            ; preds = %L2124
  %709 = bitcast %struct.lua_TValue* %704 to { [184 x i8] }**
  %710 = bitcast { [184 x i8] }** %709 to i8*
  %711 = getelementptr inbounds i8, i8* %710, i64 0
  %712 = bitcast i8* %711 to { [184 x i8] }**
  %load_target128 = load { [184 x i8] }*, { [184 x i8] }** %712
  %R11911 = call i32 @luaH_getn({ [184 x i8] }* %load_target128)
  %R11912 = sitofp i32 %R11911 to double
  %713 = bitcast %struct.lua_TValue* %90 to double*
  %714 = bitcast double* %713 to i8*
  %715 = getelementptr inbounds i8, i8* %714, i64 0
  %716 = bitcast i8* %715 to double*
  store double %R11912, double* %716
  %717 = bitcast %struct.lua_TValue* %90 to i32*
  %718 = bitcast i32* %717 to i8*
  %719 = getelementptr inbounds i8, i8* %718, i64 8
  %720 = bitcast i8* %719 to i32*
  store i32 3, i32* %720
  br label %L2022

L2126:                                            ; preds = %L2124
  %721 = bitcast %struct.lua_TValue* %704 to { [184 x i8] }**
  %722 = bitcast { [184 x i8] }** %721 to i8*
  %723 = getelementptr inbounds i8, i8* %722, i64 0
  %724 = bitcast i8* %723 to { [184 x i8] }**
  %load_target129 = load { [184 x i8] }*, { [184 x i8] }** %724
  %725 = bitcast { [184 x i8] }* %load_target129 to i64*
  %726 = bitcast i64* %725 to i8*
  %727 = getelementptr inbounds i8, i8* %726, i64 16
  %728 = bitcast i8* %727 to i64*
  %load_target130 = load i64, i64* %728
  %R11919 = sitofp i64 %load_target130 to double
  %729 = bitcast %struct.lua_TValue* %90 to double*
  %730 = bitcast double* %729 to i8*
  %731 = getelementptr inbounds i8, i8* %730, i64 0
  %732 = bitcast i8* %731 to double*
  store double %R11919, double* %732
  %733 = bitcast %struct.lua_TValue* %90 to i32*
  %734 = bitcast i32* %733 to i8*
  %735 = getelementptr inbounds i8, i8* %734, i64 8
  %736 = bitcast i8* %735 to i32*
  store i32 3, i32* %736
  br label %L2022

L2127:                                            ; preds = %L2124
  %737 = bitcast %struct.lua_State* %ARG1 to i32**
  %738 = bitcast i32** %737 to i8*
  %739 = getelementptr inbounds i8, i8* %738, i64 48
  %740 = bitcast i8* %739 to i32**
  store i32* %83, i32** %740
  %R11928 = call i32 @call_binTM(%struct.lua_State* %ARG1, %struct.lua_TValue* %704, %struct.lua_TValue* @luaO_nilobject_.3, %struct.lua_TValue* %90, i32 12)
  %cond131 = icmp ne i32 %R11928, 0
  br i1 %cond131, label %L2129, label %L2128

L2128:                                            ; preds = %L2127
  call void @luaG_typeerror(%struct.lua_State* %ARG1, %struct.lua_TValue* %704, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.122, i64 0, i64 0))
  br label %L2129

L2129:                                            ; preds = %L2128, %L2127
  %741 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %742 = bitcast %struct.lua_TValue** %741 to i8*
  %743 = getelementptr inbounds i8, i8* %742, i64 24
  %744 = bitcast i8* %743 to %struct.lua_TValue**
  %load_target132 = load %struct.lua_TValue*, %struct.lua_TValue** %744
  store %struct.lua_TValue* %load_target132, %struct.lua_TValue** %1
  br label %L2022

L2130:                                            ; preds = %L2022
  %745 = bitcast %struct.lua_State* %ARG1 to i32**
  %746 = bitcast i32** %745 to i8*
  %747 = getelementptr inbounds i8, i8* %746, i64 48
  %748 = bitcast i8* %747 to i32**
  store i32* %83, i32** %748
  %R11949 = sub i32 %R11031, %R11100
  %R11950 = add i32 %R11949, 1
  call void @luaV_concat(%struct.lua_State* %ARG1, i32 %R11950, i32 %R11031)
  %749 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %750 = bitcast %struct.global_State** %749 to i8*
  %751 = getelementptr inbounds i8, i8* %750, i64 32
  %752 = bitcast i8* %751 to %struct.global_State**
  %load_target133 = load %struct.global_State*, %struct.global_State** %752
  %753 = bitcast %struct.global_State* %load_target133 to i64*
  %754 = bitcast i64* %753 to i8*
  %755 = getelementptr inbounds i8, i8* %754, i64 120
  %756 = bitcast i8* %755 to i64*
  %load_target134 = load i64, i64* %756
  %757 = bitcast %struct.global_State* %load_target133 to i64*
  %758 = bitcast i64* %757 to i8*
  %759 = getelementptr inbounds i8, i8* %758, i64 112
  %760 = bitcast i8* %759 to i64*
  %load_target135 = load i64, i64* %760
  %R11958 = icmp uge i64 %load_target134, %load_target135
  %R11958136 = zext i1 %R11958 to i32
  %cond137 = icmp ne i32 %R11958136, 0
  br i1 %cond137, label %L2131, label %L2132

L2131:                                            ; preds = %L2130
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2132

L2132:                                            ; preds = %L2131, %L2130
  %761 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %762 = bitcast %struct.lua_TValue** %761 to i8*
  %763 = getelementptr inbounds i8, i8* %762, i64 24
  %764 = bitcast i8* %763 to %struct.lua_TValue**
  %load_target138 = load %struct.lua_TValue*, %struct.lua_TValue** %764
  %R11964 = sext i32 %R11100 to i64
  %R11965 = mul i64 %R11964, 16
  %765 = bitcast %struct.lua_TValue* %load_target138 to i8*
  %766 = getelementptr inbounds i8, i8* %765, i64 %R11965
  %767 = bitcast i8* %766 to %struct.lua_TValue*
  %R11973 = sext i32 %R10976 to i64
  %R11974 = mul i64 %R11973, 16
  %768 = bitcast %struct.lua_TValue* %load_target138 to i8*
  %769 = getelementptr inbounds i8, i8* %768, i64 %R11974
  %770 = bitcast i8* %769 to %struct.lua_TValue*
  %771 = bitcast %struct.lua_TValue* %767 to { [8 x i8] }*
  %772 = bitcast { [8 x i8] }* %771 to i8*
  %773 = getelementptr inbounds i8, i8* %772, i64 0
  %774 = bitcast i8* %773 to { [8 x i8] }*
  %load_target139 = load { [8 x i8] }, { [8 x i8] }* %774
  %775 = bitcast %struct.lua_TValue* %770 to { [8 x i8] }*
  %776 = bitcast { [8 x i8] }* %775 to i8*
  %777 = getelementptr inbounds i8, i8* %776, i64 0
  %778 = bitcast i8* %777 to { [8 x i8] }*
  store { [8 x i8] } %load_target139, { [8 x i8] }* %778
  %779 = bitcast %struct.lua_TValue* %767 to i32*
  %780 = bitcast i32* %779 to i8*
  %781 = getelementptr inbounds i8, i8* %780, i64 8
  %782 = bitcast i8* %781 to i32*
  %load_target140 = load i32, i32* %782
  %783 = bitcast %struct.lua_TValue* %770 to i32*
  %784 = bitcast i32* %783 to i8*
  %785 = getelementptr inbounds i8, i8* %784, i64 8
  %786 = bitcast i8* %785 to i32*
  store i32 %load_target140, i32* %786
  store %struct.lua_TValue* %load_target138, %struct.lua_TValue** %1
  br label %L2022

L2133:                                            ; preds = %L2022
  %R11988 = add i32 %R11150, -131071
  %R11989 = sext i32 %R11988 to i64
  %R11990 = mul i64 %R11989, 4
  %R11992 = ptrtoint i32* %83 to i64
  %R11993 = add i64 %R11992, %R11990
  %R11994 = inttoptr i64 %R11993 to i32*
  store i32* %R11994, i32** %0
  br label %L2022

L2134:                                            ; preds = %L2022
  %cond141 = icmp ne i32 %R11206, 0
  br i1 %cond141, label %L2135, label %L2136

L2135:                                            ; preds = %L2134
  %R12008 = and i32 %R10989, 255
  %R12009 = sext i32 %R12008 to i64
  %R12010 = mul i64 %R12009, 16
  %787 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %788 = getelementptr inbounds i8, i8* %787, i64 %R12010
  %789 = bitcast i8* %788 to %struct.lua_TValue*
  store %struct.lua_TValue* %789, %struct.lua_TValue** %21
  br label %L2137

L2136:                                            ; preds = %L2134
  %R12018 = sext i32 %R11100 to i64
  %R12019 = mul i64 %R12018, 16
  %790 = bitcast %struct.lua_TValue* %87 to i8*
  %791 = getelementptr inbounds i8, i8* %790, i64 %R12019
  %792 = bitcast i8* %791 to %struct.lua_TValue*
  store %struct.lua_TValue* %792, %struct.lua_TValue** %21
  br label %L2137

L2137:                                            ; preds = %L2136, %L2135
  %793 = load %struct.lua_TValue*, %struct.lua_TValue** %21
  %cond142 = icmp ne i32 %R11110, 0
  br i1 %cond142, label %L2138, label %L2139

L2138:                                            ; preds = %L2137
  %R12036 = and i32 %R11006, 255
  %R12037 = sext i32 %R12036 to i64
  %R12038 = mul i64 %R12037, 16
  %794 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %795 = getelementptr inbounds i8, i8* %794, i64 %R12038
  %796 = bitcast i8* %795 to %struct.lua_TValue*
  store %struct.lua_TValue* %796, %struct.lua_TValue** %22
  br label %L2140

L2139:                                            ; preds = %L2137
  %R12046 = sext i32 %R11031 to i64
  %R12047 = mul i64 %R12046, 16
  %797 = bitcast %struct.lua_TValue* %87 to i8*
  %798 = getelementptr inbounds i8, i8* %797, i64 %R12047
  %799 = bitcast i8* %798 to %struct.lua_TValue*
  store %struct.lua_TValue* %799, %struct.lua_TValue** %22
  br label %L2140

L2140:                                            ; preds = %L2139, %L2138
  %800 = load %struct.lua_TValue*, %struct.lua_TValue** %22
  %801 = bitcast %struct.lua_State* %ARG1 to i32**
  %802 = bitcast i32** %801 to i8*
  %803 = getelementptr inbounds i8, i8* %802, i64 48
  %804 = bitcast i8* %803 to i32**
  store i32* %83, i32** %804
  %805 = bitcast %struct.lua_TValue* %793 to i32*
  %806 = bitcast i32* %805 to i8*
  %807 = getelementptr inbounds i8, i8* %806, i64 8
  %808 = bitcast i8* %807 to i32*
  %load_target143 = load i32, i32* %808
  %809 = bitcast %struct.lua_TValue* %800 to i32*
  %810 = bitcast i32* %809 to i8*
  %811 = getelementptr inbounds i8, i8* %810, i64 8
  %812 = bitcast i8* %811 to i32*
  %load_target144 = load i32, i32* %812
  %R12057 = icmp eq i32 %load_target143, %load_target144
  %R12057145 = zext i1 %R12057 to i32
  store i32* %83, i32** %24
  %cond146 = icmp ne i32 %R12057145, 0
  br i1 %cond146, label %L2141, label %L2142

L2141:                                            ; preds = %L2140
  %R12061 = call i32 @luaV_equalval(%struct.lua_State* %ARG1, %struct.lua_TValue* %793, %struct.lua_TValue* %800)
  store i32 %R12061, i32* %23
  br label %L2143

L2142:                                            ; preds = %L2140
  store i32 0, i32* %23
  br label %L2143

L2143:                                            ; preds = %L2142, %L2141
  %813 = load i32, i32* %23
  %R12068 = icmp eq i32 %813, %R10976
  %R12068147 = zext i1 %R12068 to i32
  %cond148 = icmp ne i32 %R12068147, 0
  br i1 %cond148, label %L2144, label %L2145

L2144:                                            ; preds = %L2143
  %814 = bitcast i32* %80 to i8*
  %815 = getelementptr inbounds i8, i8* %814, i64 4
  %816 = bitcast i8* %815 to i32*
  %load_target149 = load i32, i32* %816
  %R12072 = lshr i32 %load_target149, 14
  %R12073 = and i32 %R12072, 262143
  %R12075 = add i32 %R12073, -131071
  %R12076 = sext i32 %R12075 to i64
  %R12077 = mul i64 %R12076, 4
  %R12079 = ptrtoint i32* %83 to i64
  %R12080 = add i64 %R12079, %R12077
  %R12081 = inttoptr i64 %R12080 to i32*
  store i32* %R12081, i32** %24
  br label %L2145

L2145:                                            ; preds = %L2144, %L2143
  %817 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %818 = bitcast %struct.lua_TValue** %817 to i8*
  %819 = getelementptr inbounds i8, i8* %818, i64 24
  %820 = bitcast i8* %819 to %struct.lua_TValue**
  %load_target150 = load %struct.lua_TValue*, %struct.lua_TValue** %820
  %821 = load i32*, i32** %24
  %822 = bitcast i32* %821 to i8*
  %823 = getelementptr inbounds i8, i8* %822, i32* inttoptr (i64 4 to i32*)
  %824 = bitcast i8* %823 to i32*
  store i32* %824, i32** %0
  store %struct.lua_TValue* %load_target150, %struct.lua_TValue** %1
  br label %L2022

L2146:                                            ; preds = %L2022
  %825 = bitcast %struct.lua_State* %ARG1 to i32**
  %826 = bitcast i32** %825 to i8*
  %827 = getelementptr inbounds i8, i8* %826, i64 48
  %828 = bitcast i8* %827 to i32**
  store i32* %83, i32** %828
  store i32* %83, i32** %27
  %cond151 = icmp ne i32 %R11206, 0
  br i1 %cond151, label %L2147, label %L2148

L2147:                                            ; preds = %L2146
  %R12102 = and i32 %R10989, 255
  %R12103 = sext i32 %R12102 to i64
  %R12104 = mul i64 %R12103, 16
  %829 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %830 = getelementptr inbounds i8, i8* %829, i64 %R12104
  %831 = bitcast i8* %830 to %struct.lua_TValue*
  store %struct.lua_TValue* %831, %struct.lua_TValue** %25
  br label %L2149

L2148:                                            ; preds = %L2146
  %R12112 = sext i32 %R11100 to i64
  %R12113 = mul i64 %R12112, 16
  %832 = bitcast %struct.lua_TValue* %87 to i8*
  %833 = getelementptr inbounds i8, i8* %832, i64 %R12113
  %834 = bitcast i8* %833 to %struct.lua_TValue*
  store %struct.lua_TValue* %834, %struct.lua_TValue** %25
  br label %L2149

L2149:                                            ; preds = %L2148, %L2147
  %835 = load %struct.lua_TValue*, %struct.lua_TValue** %25
  %cond152 = icmp ne i32 %R11110, 0
  br i1 %cond152, label %L2150, label %L2151

L2150:                                            ; preds = %L2149
  %R12130 = and i32 %R11006, 255
  %R12131 = sext i32 %R12130 to i64
  %R12132 = mul i64 %R12131, 16
  %836 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %837 = getelementptr inbounds i8, i8* %836, i64 %R12132
  %838 = bitcast i8* %837 to %struct.lua_TValue*
  store %struct.lua_TValue* %838, %struct.lua_TValue** %26
  br label %L2152

L2151:                                            ; preds = %L2149
  %R12140 = sext i32 %R11031 to i64
  %R12141 = mul i64 %R12140, 16
  %839 = bitcast %struct.lua_TValue* %87 to i8*
  %840 = getelementptr inbounds i8, i8* %839, i64 %R12141
  %841 = bitcast i8* %840 to %struct.lua_TValue*
  store %struct.lua_TValue* %841, %struct.lua_TValue** %26
  br label %L2152

L2152:                                            ; preds = %L2151, %L2150
  %842 = load %struct.lua_TValue*, %struct.lua_TValue** %26
  %R12145 = call i32 @luaV_lessthan(%struct.lua_State* %ARG1, %struct.lua_TValue* %835, %struct.lua_TValue* %842)
  %R12151 = icmp eq i32 %R12145, %R10976
  %R12151153 = zext i1 %R12151 to i32
  %cond154 = icmp ne i32 %R12151153, 0
  br i1 %cond154, label %L2153, label %L2154

L2153:                                            ; preds = %L2152
  %843 = bitcast i32* %80 to i8*
  %844 = getelementptr inbounds i8, i8* %843, i64 4
  %845 = bitcast i8* %844 to i32*
  %load_target155 = load i32, i32* %845
  %R12155 = lshr i32 %load_target155, 14
  %R12156 = and i32 %R12155, 262143
  %R12158 = add i32 %R12156, -131071
  %R12159 = sext i32 %R12158 to i64
  %R12160 = mul i64 %R12159, 4
  %R12162 = ptrtoint i32* %83 to i64
  %R12163 = add i64 %R12162, %R12160
  %R12164 = inttoptr i64 %R12163 to i32*
  store i32* %R12164, i32** %27
  br label %L2154

L2154:                                            ; preds = %L2153, %L2152
  %846 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %847 = bitcast %struct.lua_TValue** %846 to i8*
  %848 = getelementptr inbounds i8, i8* %847, i64 24
  %849 = bitcast i8* %848 to %struct.lua_TValue**
  %load_target156 = load %struct.lua_TValue*, %struct.lua_TValue** %849
  %850 = load i32*, i32** %27
  %851 = bitcast i32* %850 to i8*
  %852 = getelementptr inbounds i8, i8* %851, i32* inttoptr (i64 4 to i32*)
  %853 = bitcast i8* %852 to i32*
  store i32* %853, i32** %0
  store %struct.lua_TValue* %load_target156, %struct.lua_TValue** %1
  br label %L2022

L2155:                                            ; preds = %L2022
  %854 = bitcast %struct.lua_State* %ARG1 to i32**
  %855 = bitcast i32** %854 to i8*
  %856 = getelementptr inbounds i8, i8* %855, i64 48
  %857 = bitcast i8* %856 to i32**
  store i32* %83, i32** %857
  store i32* %83, i32** %30
  %cond157 = icmp ne i32 %R11206, 0
  br i1 %cond157, label %L2156, label %L2157

L2156:                                            ; preds = %L2155
  %R12185 = and i32 %R10989, 255
  %R12186 = sext i32 %R12185 to i64
  %R12187 = mul i64 %R12186, 16
  %858 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %859 = getelementptr inbounds i8, i8* %858, i64 %R12187
  %860 = bitcast i8* %859 to %struct.lua_TValue*
  store %struct.lua_TValue* %860, %struct.lua_TValue** %28
  br label %L2158

L2157:                                            ; preds = %L2155
  %R12195 = sext i32 %R11100 to i64
  %R12196 = mul i64 %R12195, 16
  %861 = bitcast %struct.lua_TValue* %87 to i8*
  %862 = getelementptr inbounds i8, i8* %861, i64 %R12196
  %863 = bitcast i8* %862 to %struct.lua_TValue*
  store %struct.lua_TValue* %863, %struct.lua_TValue** %28
  br label %L2158

L2158:                                            ; preds = %L2157, %L2156
  %864 = load %struct.lua_TValue*, %struct.lua_TValue** %28
  %cond158 = icmp ne i32 %R11110, 0
  br i1 %cond158, label %L2159, label %L2160

L2159:                                            ; preds = %L2158
  %R12213 = and i32 %R11006, 255
  %R12214 = sext i32 %R12213 to i64
  %R12215 = mul i64 %R12214, 16
  %865 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %866 = getelementptr inbounds i8, i8* %865, i64 %R12215
  %867 = bitcast i8* %866 to %struct.lua_TValue*
  store %struct.lua_TValue* %867, %struct.lua_TValue** %29
  br label %L2161

L2160:                                            ; preds = %L2158
  %R12223 = sext i32 %R11031 to i64
  %R12224 = mul i64 %R12223, 16
  %868 = bitcast %struct.lua_TValue* %87 to i8*
  %869 = getelementptr inbounds i8, i8* %868, i64 %R12224
  %870 = bitcast i8* %869 to %struct.lua_TValue*
  store %struct.lua_TValue* %870, %struct.lua_TValue** %29
  br label %L2161

L2161:                                            ; preds = %L2160, %L2159
  %871 = load %struct.lua_TValue*, %struct.lua_TValue** %29
  %R12228 = call i32 @lessequal(%struct.lua_State* %ARG1, %struct.lua_TValue* %864, %struct.lua_TValue* %871)
  %R12234 = icmp eq i32 %R12228, %R10976
  %R12234159 = zext i1 %R12234 to i32
  %cond160 = icmp ne i32 %R12234159, 0
  br i1 %cond160, label %L2162, label %L2163

L2162:                                            ; preds = %L2161
  %872 = bitcast i32* %80 to i8*
  %873 = getelementptr inbounds i8, i8* %872, i64 4
  %874 = bitcast i8* %873 to i32*
  %load_target161 = load i32, i32* %874
  %R12238 = lshr i32 %load_target161, 14
  %R12239 = and i32 %R12238, 262143
  %R12241 = add i32 %R12239, -131071
  %R12242 = sext i32 %R12241 to i64
  %R12243 = mul i64 %R12242, 4
  %R12245 = ptrtoint i32* %83 to i64
  %R12246 = add i64 %R12245, %R12243
  %R12247 = inttoptr i64 %R12246 to i32*
  store i32* %R12247, i32** %30
  br label %L2163

L2163:                                            ; preds = %L2162, %L2161
  %875 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %876 = bitcast %struct.lua_TValue** %875 to i8*
  %877 = getelementptr inbounds i8, i8* %876, i64 24
  %878 = bitcast i8* %877 to %struct.lua_TValue**
  %load_target162 = load %struct.lua_TValue*, %struct.lua_TValue** %878
  %879 = load i32*, i32** %30
  %880 = bitcast i32* %879 to i8*
  %881 = getelementptr inbounds i8, i8* %880, i32* inttoptr (i64 4 to i32*)
  %882 = bitcast i8* %881 to i32*
  store i32* %882, i32** %0
  store %struct.lua_TValue* %load_target162, %struct.lua_TValue** %1
  br label %L2022

L2164:                                            ; preds = %L2022
  %883 = bitcast %struct.lua_TValue* %90 to i32*
  %884 = bitcast i32* %883 to i8*
  %885 = getelementptr inbounds i8, i8* %884, i64 8
  %886 = bitcast i8* %885 to i32*
  %load_target163 = load i32, i32* %886
  %cond164 = icmp ne i32 %load_target163, 0
  br i1 %cond164, label %L2166, label %L2165

L2165:                                            ; preds = %L2164
  store i32 1, i32* %32
  br label %L2170

L2166:                                            ; preds = %L2164
  %R12257 = icmp eq i32 %load_target163, 1
  %R12257165 = zext i1 %R12257 to i32
  %cond166 = icmp ne i32 %R12257165, 0
  br i1 %cond166, label %L2167, label %L2168

L2167:                                            ; preds = %L2166
  %887 = bitcast %struct.lua_TValue* %90 to i32*
  %888 = bitcast i32* %887 to i8*
  %889 = getelementptr inbounds i8, i8* %888, i64 0
  %890 = bitcast i8* %889 to i32*
  %load_target167 = load i32, i32* %890
  %R12260 = icmp eq i32 %load_target167, 0
  %R12260168 = zext i1 %R12260 to i32
  store i32 %R12260168, i32* %31
  br label %L2169

L2168:                                            ; preds = %L2166
  store i32 0, i32* %31
  br label %L2169

L2169:                                            ; preds = %L2168, %L2167
  %891 = load i32, i32* %31
  store i32 %891, i32* %32
  br label %L2170

L2170:                                            ; preds = %L2169, %L2165
  %892 = load i32, i32* %32
  %R12268 = icmp ne i32 %892, %R11031
  %R12268169 = zext i1 %R12268 to i32
  %cond170 = icmp ne i32 %R12268169, 0
  br i1 %cond170, label %L2171, label %L2172

L2171:                                            ; preds = %L2170
  %893 = bitcast i32* %80 to i8*
  %894 = getelementptr inbounds i8, i8* %893, i64 4
  %895 = bitcast i8* %894 to i32*
  %load_target171 = load i32, i32* %895
  %R12272 = lshr i32 %load_target171, 14
  %R12273 = and i32 %R12272, 262143
  %R12275 = add i32 %R12273, -131071
  %R12276 = sext i32 %R12275 to i64
  %R12277 = mul i64 %R12276, 4
  %R12279 = ptrtoint i32* %83 to i64
  %R12280 = add i64 %R12279, %R12277
  %R12281 = inttoptr i64 %R12280 to i32*
  store i32* %R12281, i32** %33
  br label %L2172

L2172:                                            ; preds = %L2171, %L2170
  %896 = load i32*, i32** %33
  %897 = bitcast i32* %896 to i8*
  %898 = getelementptr inbounds i8, i8* %897, i32* inttoptr (i64 4 to i32*)
  %899 = bitcast i8* %898 to i32*
  store i32* %899, i32** %0
  br label %L2022

L2173:                                            ; preds = %L2022
  %R12290 = sext i32 %R11100 to i64
  %R12291 = mul i64 %R12290, 16
  %900 = bitcast %struct.lua_TValue* %87 to i8*
  %901 = getelementptr inbounds i8, i8* %900, i64 %R12291
  %902 = bitcast i8* %901 to %struct.lua_TValue*
  %903 = bitcast %struct.lua_TValue* %902 to i32*
  %904 = bitcast i32* %903 to i8*
  %905 = getelementptr inbounds i8, i8* %904, i64 8
  %906 = bitcast i8* %905 to i32*
  %load_target172 = load i32, i32* %906
  %cond173 = icmp ne i32 %load_target172, 0
  br i1 %cond173, label %L2175, label %L2174

L2174:                                            ; preds = %L2173
  store i32 1, i32* %35
  br label %L2179

L2175:                                            ; preds = %L2173
  %R12298 = icmp eq i32 %load_target172, 1
  %R12298174 = zext i1 %R12298 to i32
  %cond175 = icmp ne i32 %R12298174, 0
  br i1 %cond175, label %L2176, label %L2177

L2176:                                            ; preds = %L2175
  %907 = bitcast %struct.lua_TValue* %902 to i32*
  %908 = bitcast i32* %907 to i8*
  %909 = getelementptr inbounds i8, i8* %908, i64 0
  %910 = bitcast i8* %909 to i32*
  %load_target176 = load i32, i32* %910
  %R12301 = icmp eq i32 %load_target176, 0
  %R12301177 = zext i1 %R12301 to i32
  store i32 %R12301177, i32* %34
  br label %L2178

L2177:                                            ; preds = %L2175
  store i32 0, i32* %34
  br label %L2178

L2178:                                            ; preds = %L2177, %L2176
  %911 = load i32, i32* %34
  store i32 %911, i32* %35
  br label %L2179

L2179:                                            ; preds = %L2178, %L2174
  %912 = load i32, i32* %35
  %R12309 = icmp ne i32 %912, %R11031
  %R12309178 = zext i1 %R12309 to i32
  %cond179 = icmp ne i32 %R12309178, 0
  br i1 %cond179, label %L2180, label %L2181

L2180:                                            ; preds = %L2179
  %913 = bitcast %struct.lua_TValue* %902 to { [8 x i8] }*
  %914 = bitcast { [8 x i8] }* %913 to i8*
  %915 = getelementptr inbounds i8, i8* %914, i64 0
  %916 = bitcast i8* %915 to { [8 x i8] }*
  %load_target180 = load { [8 x i8] }, { [8 x i8] }* %916
  %917 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %918 = bitcast { [8 x i8] }* %917 to i8*
  %919 = getelementptr inbounds i8, i8* %918, i64 0
  %920 = bitcast i8* %919 to { [8 x i8] }*
  store { [8 x i8] } %load_target180, { [8 x i8] }* %920
  %921 = bitcast %struct.lua_TValue* %902 to i32*
  %922 = bitcast i32* %921 to i8*
  %923 = getelementptr inbounds i8, i8* %922, i64 8
  %924 = bitcast i8* %923 to i32*
  %load_target181 = load i32, i32* %924
  %925 = bitcast %struct.lua_TValue* %90 to i32*
  %926 = bitcast i32* %925 to i8*
  %927 = getelementptr inbounds i8, i8* %926, i64 8
  %928 = bitcast i8* %927 to i32*
  store i32 %load_target181, i32* %928
  %929 = bitcast i32* %80 to i8*
  %930 = getelementptr inbounds i8, i8* %929, i64 4
  %931 = bitcast i8* %930 to i32*
  %load_target182 = load i32, i32* %931
  %R12322 = lshr i32 %load_target182, 14
  %R12323 = and i32 %R12322, 262143
  %R12325 = add i32 %R12323, -131071
  %R12326 = sext i32 %R12325 to i64
  %R12327 = mul i64 %R12326, 4
  %R12329 = ptrtoint i32* %83 to i64
  %R12330 = add i64 %R12329, %R12327
  %R12331 = inttoptr i64 %R12330 to i32*
  store i32* %R12331, i32** %36
  br label %L2181

L2181:                                            ; preds = %L2180, %L2179
  %932 = load i32*, i32** %36
  %933 = bitcast i32* %932 to i8*
  %934 = getelementptr inbounds i8, i8* %933, i32* inttoptr (i64 4 to i32*)
  %935 = bitcast i8* %934 to i32*
  store i32* %935, i32** %0
  br label %L2022

L2182:                                            ; preds = %L2022
  %R12344 = add i32 %R11031, -1
  %cond183 = icmp ne i32 %R11100, 0
  br i1 %cond183, label %L2183, label %L2184

L2183:                                            ; preds = %L2182
  %R12349 = sext i32 %R11100 to i64
  %R12350 = mul i64 %R12349, 16
  %936 = bitcast %struct.lua_TValue* %90 to i8*
  %937 = getelementptr inbounds i8, i8* %936, i64 %R12350
  %938 = bitcast i8* %937 to %struct.lua_TValue*
  %939 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %940 = bitcast %struct.lua_TValue** %939 to i8*
  %941 = getelementptr inbounds i8, i8* %940, i64 16
  %942 = bitcast i8* %941 to %struct.lua_TValue**
  store %struct.lua_TValue* %938, %struct.lua_TValue** %942
  br label %L2184

L2184:                                            ; preds = %L2183, %L2182
  %943 = bitcast %struct.lua_State* %ARG1 to i32**
  %944 = bitcast i32** %943 to i8*
  %945 = getelementptr inbounds i8, i8* %944, i64 48
  %946 = bitcast i8* %945 to i32**
  store i32* %83, i32** %946
  %R12358 = call i32 @luaD_precall(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, i32 %R12344)
  switch i32 %R12358, label %L2254 [
    i32 0, label %L2185
    i32 1, label %L2186
  ]

L2185:                                            ; preds = %L2184
  %947 = load i32, i32* %37
  %R12360 = add i32 %947, 1
  store i32 %R12360, i32* %39
  store i32 %R12360, i32* %37
  br label %L2021

L2186:                                            ; preds = %L2184
  %R12362 = icmp sge i32 %R12344, 0
  %R12362184 = zext i1 %R12362 to i32
  %cond185 = icmp ne i32 %R12362184, 0
  br i1 %cond185, label %L2187, label %L2188

L2187:                                            ; preds = %L2186
  %948 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %949 = bitcast %struct.CallInfo** %948 to i8*
  %950 = getelementptr inbounds i8, i8* %949, i64 40
  %951 = bitcast i8* %950 to %struct.CallInfo**
  %load_target186 = load %struct.CallInfo*, %struct.CallInfo** %951
  %952 = bitcast %struct.CallInfo* %load_target186 to %struct.lua_TValue**
  %953 = bitcast %struct.lua_TValue** %952 to i8*
  %954 = getelementptr inbounds i8, i8* %953, i64 16
  %955 = bitcast i8* %954 to %struct.lua_TValue**
  %load_target187 = load %struct.lua_TValue*, %struct.lua_TValue** %955
  %956 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %957 = bitcast %struct.lua_TValue** %956 to i8*
  %958 = getelementptr inbounds i8, i8* %957, i64 16
  %959 = bitcast i8* %958 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target187, %struct.lua_TValue** %959
  br label %L2188

L2188:                                            ; preds = %L2187, %L2186
  %960 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %961 = bitcast %struct.lua_TValue** %960 to i8*
  %962 = getelementptr inbounds i8, i8* %961, i64 24
  %963 = bitcast i8* %962 to %struct.lua_TValue**
  %load_target188 = load %struct.lua_TValue*, %struct.lua_TValue** %963
  store %struct.lua_TValue* %load_target188, %struct.lua_TValue** %1
  br label %L2022

L2189:                                            ; preds = %L2022
  %cond189 = icmp ne i32 %R11100, 0
  br i1 %cond189, label %L2190, label %L2191

L2190:                                            ; preds = %L2189
  %R12378 = sext i32 %R11100 to i64
  %R12379 = mul i64 %R12378, 16
  %964 = bitcast %struct.lua_TValue* %90 to i8*
  %965 = getelementptr inbounds i8, i8* %964, i64 %R12379
  %966 = bitcast i8* %965 to %struct.lua_TValue*
  %967 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %968 = bitcast %struct.lua_TValue** %967 to i8*
  %969 = getelementptr inbounds i8, i8* %968, i64 16
  %970 = bitcast i8* %969 to %struct.lua_TValue**
  store %struct.lua_TValue* %966, %struct.lua_TValue** %970
  br label %L2191

L2191:                                            ; preds = %L2190, %L2189
  %971 = bitcast %struct.lua_State* %ARG1 to i32**
  %972 = bitcast i32** %971 to i8*
  %973 = getelementptr inbounds i8, i8* %972, i64 48
  %974 = bitcast i8* %973 to i32**
  store i32* %83, i32** %974
  %R12386 = call i32 @luaD_precall(%struct.lua_State* %ARG1, %struct.lua_TValue* %90, i32 -1)
  switch i32 %R12386, label %L2254 [
    i32 0, label %L2192
    i32 1, label %L2198
  ]

L2192:                                            ; preds = %L2191
  %975 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %976 = bitcast %struct.CallInfo** %975 to i8*
  %977 = getelementptr inbounds i8, i8* %976, i64 40
  %978 = bitcast i8* %977 to %struct.CallInfo**
  %load_target190 = load %struct.CallInfo*, %struct.CallInfo** %978
  %979 = bitcast %struct.CallInfo* %load_target190 to %struct.lua_TValue**
  %980 = bitcast %struct.lua_TValue** %979 to i8*
  %981 = getelementptr inbounds i8, i8* %980, i64 -32
  %982 = bitcast i8* %981 to %struct.lua_TValue**
  %load_target191 = load %struct.lua_TValue*, %struct.lua_TValue** %982
  %983 = bitcast %struct.CallInfo* %load_target190 to %struct.lua_TValue**
  %984 = bitcast %struct.lua_TValue** %983 to i8*
  %985 = getelementptr inbounds i8, i8* %984, i64 8
  %986 = bitcast i8* %985 to %struct.lua_TValue**
  %load_target192 = load %struct.lua_TValue*, %struct.lua_TValue** %986
  %987 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %988 = bitcast { [184 x i8] }** %987 to i8*
  %989 = getelementptr inbounds i8, i8* %988, i64 152
  %990 = bitcast i8* %989 to { [184 x i8] }**
  %load_target193 = load { [184 x i8] }*, { [184 x i8] }** %990
  %cond194 = icmp ne { [184 x i8] }* %load_target193, null
  br i1 %cond194, label %L2193, label %L2194

L2193:                                            ; preds = %L2192
  %991 = bitcast %struct.CallInfo* %load_target190 to %struct.lua_TValue**
  %992 = bitcast %struct.lua_TValue** %991 to i8*
  %993 = getelementptr inbounds i8, i8* %992, i64 -40
  %994 = bitcast i8* %993 to %struct.lua_TValue**
  %load_target195 = load %struct.lua_TValue*, %struct.lua_TValue** %994
  call void @luaF_close(%struct.lua_State* %ARG1, %struct.lua_TValue* %load_target195)
  br label %L2194

L2194:                                            ; preds = %L2193, %L2192
  %995 = bitcast %struct.CallInfo* %load_target190 to %struct.lua_TValue**
  %996 = bitcast %struct.lua_TValue** %995 to i8*
  %997 = getelementptr inbounds i8, i8* %996, i64 -32
  %998 = bitcast i8* %997 to %struct.lua_TValue**
  %load_target196 = load %struct.lua_TValue*, %struct.lua_TValue** %998
  %999 = bitcast %struct.CallInfo* %load_target190 to %struct.lua_TValue**
  %1000 = bitcast %struct.lua_TValue** %999 to i8*
  %1001 = getelementptr inbounds i8, i8* %1000, i64 0
  %1002 = bitcast i8* %1001 to %struct.lua_TValue**
  %load_target197 = load %struct.lua_TValue*, %struct.lua_TValue** %1002
  %R12404 = sub %struct.lua_TValue* %load_target197, %load_target192
  %R12405 = sdiv %struct.lua_TValue* %R12404, i64 16
  %R12406 = mul %struct.lua_TValue* %R12405, i64 16
  %1003 = bitcast %struct.lua_TValue* %load_target196 to i8*
  %1004 = getelementptr inbounds i8, i8* %1003, %struct.lua_TValue* %R12406
  %1005 = bitcast i8* %1004 to %struct.lua_TValue*
  %1006 = bitcast %struct.CallInfo* %load_target190 to %struct.lua_TValue**
  %1007 = bitcast %struct.lua_TValue** %1006 to i8*
  %1008 = getelementptr inbounds i8, i8* %1007, i64 -40
  %1009 = bitcast i8* %1008 to %struct.lua_TValue**
  store %struct.lua_TValue* %1005, %struct.lua_TValue** %1009
  %1010 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1011 = bitcast %struct.lua_TValue** %1010 to i8*
  %1012 = getelementptr inbounds i8, i8* %1011, i64 24
  %1013 = bitcast i8* %1012 to %struct.lua_TValue**
  store %struct.lua_TValue* %1005, %struct.lua_TValue** %1013
  store i32 0, i32* %38
  br label %L2195

L2195:                                            ; preds = %L2196, %L2194
  %1014 = load i32, i32* %38
  %R12412 = sext i32 %1014 to i64
  %R12413 = mul i64 %R12412, 16
  %1015 = bitcast %struct.lua_TValue* %load_target192 to i8*
  %1016 = getelementptr inbounds i8, i8* %1015, i64 %R12413
  %1017 = bitcast i8* %1016 to %struct.lua_TValue*
  %1018 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1019 = bitcast %struct.lua_TValue** %1018 to i8*
  %1020 = getelementptr inbounds i8, i8* %1019, i64 16
  %1021 = bitcast i8* %1020 to %struct.lua_TValue**
  %load_target198 = load %struct.lua_TValue*, %struct.lua_TValue** %1021
  %R12417 = icmp ult %struct.lua_TValue* %1017, %load_target198
  %R12417199 = zext i1 %R12417 to i32
  %1022 = bitcast %struct.lua_TValue* %load_target191 to i8*
  %1023 = getelementptr inbounds i8, i8* %1022, i64 %R12413
  %1024 = bitcast i8* %1023 to %struct.lua_TValue*
  %cond200 = icmp ne i32 %R12417199, 0
  br i1 %cond200, label %L2196, label %L2197

L2196:                                            ; preds = %L2195
  %1025 = bitcast %struct.lua_TValue* %1017 to { [8 x i8] }*
  %1026 = bitcast { [8 x i8] }* %1025 to i8*
  %1027 = getelementptr inbounds i8, i8* %1026, i64 0
  %1028 = bitcast i8* %1027 to { [8 x i8] }*
  %load_target201 = load { [8 x i8] }, { [8 x i8] }* %1028
  %1029 = bitcast %struct.lua_TValue* %1024 to { [8 x i8] }*
  %1030 = bitcast { [8 x i8] }* %1029 to i8*
  %1031 = getelementptr inbounds i8, i8* %1030, i64 0
  %1032 = bitcast i8* %1031 to { [8 x i8] }*
  store { [8 x i8] } %load_target201, { [8 x i8] }* %1032
  %1033 = bitcast %struct.lua_TValue* %1017 to i32*
  %1034 = bitcast i32* %1033 to i8*
  %1035 = getelementptr inbounds i8, i8* %1034, i64 8
  %1036 = bitcast i8* %1035 to i32*
  %load_target202 = load i32, i32* %1036
  %1037 = bitcast %struct.lua_TValue* %1024 to i32*
  %1038 = bitcast i32* %1037 to i8*
  %1039 = getelementptr inbounds i8, i8* %1038, i64 8
  %1040 = bitcast i8* %1039 to i32*
  store i32 %load_target202, i32* %1040
  %R12436 = add i32 %1014, 1
  store i32 %R12436, i32* %38
  br label %L2195

L2197:                                            ; preds = %L2195
  %1041 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1042 = bitcast %struct.lua_TValue** %1041 to i8*
  %1043 = getelementptr inbounds i8, i8* %1042, i64 16
  %1044 = bitcast i8* %1043 to %struct.lua_TValue**
  store %struct.lua_TValue* %1024, %struct.lua_TValue** %1044
  %1045 = bitcast %struct.CallInfo* %load_target190 to %struct.lua_TValue**
  %1046 = bitcast %struct.lua_TValue** %1045 to i8*
  %1047 = getelementptr inbounds i8, i8* %1046, i64 -24
  %1048 = bitcast i8* %1047 to %struct.lua_TValue**
  store %struct.lua_TValue* %1024, %struct.lua_TValue** %1048
  %1049 = bitcast %struct.lua_State* %ARG1 to i32**
  %1050 = bitcast i32** %1049 to i8*
  %1051 = getelementptr inbounds i8, i8* %1050, i64 48
  %1052 = bitcast i8* %1051 to i32**
  %load_target203 = load i32*, i32** %1052
  %1053 = bitcast %struct.CallInfo* %load_target190 to i32**
  %1054 = bitcast i32** %1053 to i8*
  %1055 = getelementptr inbounds i8, i8* %1054, i64 -16
  %1056 = bitcast i8* %1055 to i32**
  store i32* %load_target203, i32** %1056
  %1057 = bitcast %struct.CallInfo* %load_target190 to i32*
  %1058 = bitcast i32* %1057 to i8*
  %1059 = getelementptr inbounds i8, i8* %1058, i64 -4
  %1060 = bitcast i8* %1059 to i32*
  %load_target204 = load i32, i32* %1060
  %R12449 = add i32 %load_target204, 1
  %1061 = bitcast %struct.CallInfo* %load_target190 to i32*
  %1062 = bitcast i32* %1061 to i8*
  %1063 = getelementptr inbounds i8, i8* %1062, i64 -4
  %1064 = bitcast i8* %1063 to i32*
  store i32 %R12449, i32* %1064
  %1065 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1066 = bitcast %struct.CallInfo** %1065 to i8*
  %1067 = getelementptr inbounds i8, i8* %1066, i64 40
  %1068 = bitcast i8* %1067 to %struct.CallInfo**
  %load_target205 = load %struct.CallInfo*, %struct.CallInfo** %1068
  %1069 = bitcast %struct.CallInfo* %load_target205 to i8*
  %1070 = getelementptr inbounds i8, i8* %1069, %struct.CallInfo* inttoptr (i64 -40 to %struct.CallInfo*)
  %1071 = bitcast i8* %1070 to %struct.CallInfo*
  %1072 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1073 = bitcast %struct.CallInfo** %1072 to i8*
  %1074 = getelementptr inbounds i8, i8* %1073, i64 40
  %1075 = bitcast i8* %1074 to %struct.CallInfo**
  store %struct.CallInfo* %1071, %struct.CallInfo** %1075
  br label %L2021

L2198:                                            ; preds = %L2191
  %1076 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1077 = bitcast %struct.lua_TValue** %1076 to i8*
  %1078 = getelementptr inbounds i8, i8* %1077, i64 24
  %1079 = bitcast i8* %1078 to %struct.lua_TValue**
  %load_target206 = load %struct.lua_TValue*, %struct.lua_TValue** %1079
  store %struct.lua_TValue* %load_target206, %struct.lua_TValue** %1
  br label %L2022

L2199:                                            ; preds = %L2022
  %cond207 = icmp ne i32 %R11100, 0
  br i1 %cond207, label %L2200, label %L2201

L2200:                                            ; preds = %L2199
  %R12464 = sext i32 %R11100 to i64
  %R12465 = mul i64 %R12464, 16
  %1080 = bitcast %struct.lua_TValue* %90 to i8*
  %1081 = getelementptr inbounds i8, i8* %1080, i64 %R12465
  %1082 = bitcast i8* %1081 to %struct.lua_TValue*
  %1083 = bitcast %struct.lua_TValue* %1082 to i8*
  %1084 = getelementptr inbounds i8, i8* %1083, i64 -16
  %1085 = bitcast i8* %1084 to %struct.lua_TValue*
  %1086 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1087 = bitcast %struct.lua_TValue** %1086 to i8*
  %1088 = getelementptr inbounds i8, i8* %1087, i64 16
  %1089 = bitcast i8* %1088 to %struct.lua_TValue**
  store %struct.lua_TValue* %1085, %struct.lua_TValue** %1089
  br label %L2201

L2201:                                            ; preds = %L2200, %L2199
  %1090 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %1091 = bitcast { [184 x i8] }** %1090 to i8*
  %1092 = getelementptr inbounds i8, i8* %1091, i64 152
  %1093 = bitcast i8* %1092 to { [184 x i8] }**
  %load_target208 = load { [184 x i8] }*, { [184 x i8] }** %1093
  %cond209 = icmp ne { [184 x i8] }* %load_target208, null
  br i1 %cond209, label %L2202, label %L2203

L2202:                                            ; preds = %L2201
  call void @luaF_close(%struct.lua_State* %ARG1, %struct.lua_TValue* %87)
  br label %L2203

L2203:                                            ; preds = %L2202, %L2201
  %1094 = bitcast %struct.lua_State* %ARG1 to i32**
  %1095 = bitcast i32** %1094 to i8*
  %1096 = getelementptr inbounds i8, i8* %1095, i64 48
  %1097 = bitcast i8* %1096 to i32**
  store i32* %83, i32** %1097
  %R12477 = call i32 @luaD_poscall(%struct.lua_State* %ARG1, %struct.lua_TValue* %90)
  %1098 = load i32, i32* %39
  %R12479 = add i32 %1098, -1
  store i32 %R12479, i32* %39
  store i32 %R12479, i32* %37
  %cond210 = icmp ne i32 %R12479, 0
  br i1 %cond210, label %L2204, label %L2254

L2204:                                            ; preds = %L2203
  %cond211 = icmp ne i32 %R12477, 0
  br i1 %cond211, label %L2205, label %L2021

L2205:                                            ; preds = %L2204
  %1099 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1100 = bitcast %struct.CallInfo** %1099 to i8*
  %1101 = getelementptr inbounds i8, i8* %1100, i64 40
  %1102 = bitcast i8* %1101 to %struct.CallInfo**
  %load_target212 = load %struct.CallInfo*, %struct.CallInfo** %1102
  %1103 = bitcast %struct.CallInfo* %load_target212 to %struct.lua_TValue**
  %1104 = bitcast %struct.lua_TValue** %1103 to i8*
  %1105 = getelementptr inbounds i8, i8* %1104, i64 16
  %1106 = bitcast i8* %1105 to %struct.lua_TValue**
  %load_target213 = load %struct.lua_TValue*, %struct.lua_TValue** %1106
  %1107 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1108 = bitcast %struct.lua_TValue** %1107 to i8*
  %1109 = getelementptr inbounds i8, i8* %1108, i64 16
  %1110 = bitcast i8* %1109 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target213, %struct.lua_TValue** %1110
  br label %L2021

L2206:                                            ; preds = %L2022
  %1111 = bitcast %struct.lua_TValue* %90 to double*
  %1112 = bitcast double* %1111 to i8*
  %1113 = getelementptr inbounds i8, i8* %1112, i64 32
  %1114 = bitcast i8* %1113 to double*
  %load_target214 = load double, double* %1114
  %1115 = bitcast %struct.lua_TValue* %90 to double*
  %1116 = bitcast double* %1115 to i8*
  %1117 = getelementptr inbounds i8, i8* %1116, i64 0
  %1118 = bitcast i8* %1117 to double*
  %load_target215 = load double, double* %1118
  %R12491 = fadd double %load_target215, %load_target214
  %1119 = bitcast %struct.lua_TValue* %90 to double*
  %1120 = bitcast double* %1119 to i8*
  %1121 = getelementptr inbounds i8, i8* %1120, i64 16
  %1122 = bitcast i8* %1121 to double*
  %load_target216 = load double, double* %1122
  %R12496 = fcmp ole double %R12491, %load_target216
  %R12496217 = zext i1 %R12496 to i32
  %R12499 = fcmp ole double %load_target216, %R12491
  %R12499218 = zext i1 %R12499 to i32
  %R12502 = fcmp olt double 0.000000e+00, %load_target214
  %R12502219 = zext i1 %R12502 to i32
  %cond220 = icmp ne i32 %R12502219, 0
  %select = select i1 %cond220, i32 %R12496217, i32 %R12499218
  %cond221 = icmp ne i32 %select, 0
  br i1 %cond221, label %L2207, label %L2022

L2207:                                            ; preds = %L2206
  %R12509 = add i32 %R11150, -131071
  %R12510 = sext i32 %R12509 to i64
  %R12511 = mul i64 %R12510, 4
  %R12513 = ptrtoint i32* %83 to i64
  %R12514 = add i64 %R12513, %R12511
  %R12515 = inttoptr i64 %R12514 to i32*
  %1123 = bitcast %struct.lua_TValue* %90 to double*
  %1124 = bitcast double* %1123 to i8*
  %1125 = getelementptr inbounds i8, i8* %1124, i64 0
  %1126 = bitcast i8* %1125 to double*
  store double %R12491, double* %1126
  %1127 = bitcast %struct.lua_TValue* %90 to i32*
  %1128 = bitcast i32* %1127 to i8*
  %1129 = getelementptr inbounds i8, i8* %1128, i64 8
  %1130 = bitcast i8* %1129 to i32*
  store i32 3, i32* %1130
  %1131 = bitcast %struct.lua_TValue* %90 to double*
  %1132 = bitcast double* %1131 to i8*
  %1133 = getelementptr inbounds i8, i8* %1132, i64 48
  %1134 = bitcast i8* %1133 to double*
  store double %R12491, double* %1134
  %1135 = bitcast %struct.lua_TValue* %90 to i32*
  %1136 = bitcast i32* %1135 to i8*
  %1137 = getelementptr inbounds i8, i8* %1136, i64 56
  %1138 = bitcast i8* %1137 to i32*
  store i32 3, i32* %1138
  store i32* %R12515, i32** %0
  br label %L2022

L2208:                                            ; preds = %L2022
  %1139 = bitcast %struct.lua_TValue* %90 to i8*
  %1140 = getelementptr inbounds i8, i8* %1139, i64 16
  %1141 = bitcast i8* %1140 to %struct.lua_TValue*
  %1142 = bitcast %struct.lua_TValue* %90 to i8*
  %1143 = getelementptr inbounds i8, i8* %1142, i64 32
  %1144 = bitcast i8* %1143 to %struct.lua_TValue*
  %1145 = bitcast %struct.lua_State* %ARG1 to i32**
  %1146 = bitcast i32** %1145 to i8*
  %1147 = getelementptr inbounds i8, i8* %1146, i64 48
  %1148 = bitcast i8* %1147 to i32**
  store i32* %83, i32** %1148
  %1149 = bitcast %struct.lua_TValue* %90 to i32*
  %1150 = bitcast i32* %1149 to i8*
  %1151 = getelementptr inbounds i8, i8* %1150, i64 8
  %1152 = bitcast i8* %1151 to i32*
  %load_target222 = load i32, i32* %1152
  %R12535 = icmp eq i32 %load_target222, 3
  %R12535223 = zext i1 %R12535 to i32
  store %struct.lua_TValue* %1144, %struct.lua_TValue** %40
  %cond224 = icmp ne i32 %R12535223, 0
  br i1 %cond224, label %L2211, label %L2209

L2209:                                            ; preds = %L2208
  %R12538 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %90, %struct.lua_TValue* %90)
  %cond225 = icmp ne %struct.lua_TValue* %R12538, null
  br i1 %cond225, label %L2211, label %L2210

L2210:                                            ; preds = %L2209
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.123, i64 0, i64 0))
  br label %L2217

L2211:                                            ; preds = %L2209, %L2208
  %1153 = bitcast %struct.lua_TValue* %90 to i32*
  %1154 = bitcast i32* %1153 to i8*
  %1155 = getelementptr inbounds i8, i8* %1154, i64 24
  %1156 = bitcast i8* %1155 to i32*
  %load_target226 = load i32, i32* %1156
  %R12545 = icmp eq i32 %load_target226, 3
  %R12545227 = zext i1 %R12545 to i32
  %cond228 = icmp ne i32 %R12545227, 0
  br i1 %cond228, label %L2214, label %L2212

L2212:                                            ; preds = %L2211
  %R12549 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %1141, %struct.lua_TValue* %1141)
  %cond229 = icmp ne %struct.lua_TValue* %R12549, null
  br i1 %cond229, label %L2214, label %L2213

L2213:                                            ; preds = %L2212
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.124, i64 0, i64 0))
  br label %L2217

L2214:                                            ; preds = %L2212, %L2211
  %1157 = bitcast %struct.lua_TValue* %90 to i32*
  %1158 = bitcast i32* %1157 to i8*
  %1159 = getelementptr inbounds i8, i8* %1158, i64 40
  %1160 = bitcast i8* %1159 to i32*
  %load_target230 = load i32, i32* %1160
  %R12556 = icmp eq i32 %load_target230, 3
  %R12556231 = zext i1 %R12556 to i32
  store %struct.lua_TValue* %1144, %struct.lua_TValue** %40
  %cond232 = icmp ne i32 %R12556231, 0
  br i1 %cond232, label %L2217, label %L2215

L2215:                                            ; preds = %L2214
  %R12560 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %1144, %struct.lua_TValue* %1144)
  store %struct.lua_TValue* %R12560, %struct.lua_TValue** %40
  %cond233 = icmp ne %struct.lua_TValue* %R12560, null
  br i1 %cond233, label %L2217, label %L2216

L2216:                                            ; preds = %L2215
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.125, i64 0, i64 0))
  br label %L2217

L2217:                                            ; preds = %L2216, %L2215, %L2214, %L2213, %L2210
  %1161 = bitcast %struct.lua_TValue* %90 to double*
  %1162 = bitcast double* %1161 to i8*
  %1163 = getelementptr inbounds i8, i8* %1162, i64 0
  %1164 = bitcast i8* %1163 to double*
  %load_target234 = load double, double* %1164
  %1165 = load %struct.lua_TValue*, %struct.lua_TValue** %40
  %1166 = bitcast %struct.lua_TValue* %1165 to double*
  %1167 = bitcast double* %1166 to i8*
  %1168 = getelementptr inbounds i8, i8* %1167, i64 0
  %1169 = bitcast i8* %1168 to double*
  %load_target235 = load double, double* %1169
  %R12570 = fsub double %load_target234, %load_target235
  %1170 = bitcast %struct.lua_TValue* %90 to double*
  %1171 = bitcast double* %1170 to i8*
  %1172 = getelementptr inbounds i8, i8* %1171, i64 0
  %1173 = bitcast i8* %1172 to double*
  store double %R12570, double* %1173
  %1174 = bitcast %struct.lua_TValue* %90 to i32*
  %1175 = bitcast i32* %1174 to i8*
  %1176 = getelementptr inbounds i8, i8* %1175, i64 8
  %1177 = bitcast i8* %1176 to i32*
  store i32 3, i32* %1177
  %R12578 = add i32 %R11150, -131071
  %R12579 = sext i32 %R12578 to i64
  %R12580 = mul i64 %R12579, 4
  %R12582 = ptrtoint i32* %83 to i64
  %R12583 = add i64 %R12582, %R12580
  %R12584 = inttoptr i64 %R12583 to i32*
  store i32* %R12584, i32** %0
  br label %L2022

L2218:                                            ; preds = %L2022
  %1178 = bitcast %struct.lua_TValue* %90 to i8*
  %1179 = getelementptr inbounds i8, i8* %1178, i64 48
  %1180 = bitcast i8* %1179 to %struct.lua_TValue*
  %1181 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %1182 = bitcast { [8 x i8] }* %1181 to i8*
  %1183 = getelementptr inbounds i8, i8* %1182, i64 32
  %1184 = bitcast i8* %1183 to { [8 x i8] }*
  %load_target236 = load { [8 x i8] }, { [8 x i8] }* %1184
  %1185 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %1186 = bitcast { [8 x i8] }* %1185 to i8*
  %1187 = getelementptr inbounds i8, i8* %1186, i64 80
  %1188 = bitcast i8* %1187 to { [8 x i8] }*
  store { [8 x i8] } %load_target236, { [8 x i8] }* %1188
  %1189 = bitcast %struct.lua_TValue* %90 to i32*
  %1190 = bitcast i32* %1189 to i8*
  %1191 = getelementptr inbounds i8, i8* %1190, i64 40
  %1192 = bitcast i8* %1191 to i32*
  %load_target237 = load i32, i32* %1192
  %1193 = bitcast %struct.lua_TValue* %90 to i32*
  %1194 = bitcast i32* %1193 to i8*
  %1195 = getelementptr inbounds i8, i8* %1194, i64 88
  %1196 = bitcast i8* %1195 to i32*
  store i32 %load_target237, i32* %1196
  %1197 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %1198 = bitcast { [8 x i8] }* %1197 to i8*
  %1199 = getelementptr inbounds i8, i8* %1198, i64 16
  %1200 = bitcast i8* %1199 to { [8 x i8] }*
  %load_target238 = load { [8 x i8] }, { [8 x i8] }* %1200
  %1201 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %1202 = bitcast { [8 x i8] }* %1201 to i8*
  %1203 = getelementptr inbounds i8, i8* %1202, i64 64
  %1204 = bitcast i8* %1203 to { [8 x i8] }*
  store { [8 x i8] } %load_target238, { [8 x i8] }* %1204
  %1205 = bitcast %struct.lua_TValue* %90 to i32*
  %1206 = bitcast i32* %1205 to i8*
  %1207 = getelementptr inbounds i8, i8* %1206, i64 24
  %1208 = bitcast i8* %1207 to i32*
  %load_target239 = load i32, i32* %1208
  %1209 = bitcast %struct.lua_TValue* %90 to i32*
  %1210 = bitcast i32* %1209 to i8*
  %1211 = getelementptr inbounds i8, i8* %1210, i64 72
  %1212 = bitcast i8* %1211 to i32*
  store i32 %load_target239, i32* %1212
  %1213 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %1214 = bitcast { [8 x i8] }* %1213 to i8*
  %1215 = getelementptr inbounds i8, i8* %1214, i64 0
  %1216 = bitcast i8* %1215 to { [8 x i8] }*
  %load_target240 = load { [8 x i8] }, { [8 x i8] }* %1216
  %1217 = bitcast %struct.lua_TValue* %90 to { [8 x i8] }*
  %1218 = bitcast { [8 x i8] }* %1217 to i8*
  %1219 = getelementptr inbounds i8, i8* %1218, i64 48
  %1220 = bitcast i8* %1219 to { [8 x i8] }*
  store { [8 x i8] } %load_target240, { [8 x i8] }* %1220
  %1221 = bitcast %struct.lua_TValue* %90 to i32*
  %1222 = bitcast i32* %1221 to i8*
  %1223 = getelementptr inbounds i8, i8* %1222, i64 8
  %1224 = bitcast i8* %1223 to i32*
  %load_target241 = load i32, i32* %1224
  %1225 = bitcast %struct.lua_TValue* %90 to i32*
  %1226 = bitcast i32* %1225 to i8*
  %1227 = getelementptr inbounds i8, i8* %1226, i64 56
  %1228 = bitcast i8* %1227 to i32*
  store i32 %load_target241, i32* %1228
  %1229 = bitcast %struct.lua_TValue* %1180 to i8*
  %1230 = getelementptr inbounds i8, i8* %1229, i64 48
  %1231 = bitcast i8* %1230 to %struct.lua_TValue*
  %1232 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1233 = bitcast %struct.lua_TValue** %1232 to i8*
  %1234 = getelementptr inbounds i8, i8* %1233, i64 16
  %1235 = bitcast i8* %1234 to %struct.lua_TValue**
  store %struct.lua_TValue* %1231, %struct.lua_TValue** %1235
  %1236 = bitcast %struct.lua_State* %ARG1 to i32**
  %1237 = bitcast i32** %1236 to i8*
  %1238 = getelementptr inbounds i8, i8* %1237, i64 48
  %1239 = bitcast i8* %1238 to i32**
  store i32* %83, i32** %1239
  call void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %1180, i32 %R11031)
  %1240 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1241 = bitcast %struct.lua_TValue** %1240 to i8*
  %1242 = getelementptr inbounds i8, i8* %1241, i64 24
  %1243 = bitcast i8* %1242 to %struct.lua_TValue**
  %load_target242 = load %struct.lua_TValue*, %struct.lua_TValue** %1243
  %1244 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1245 = bitcast %struct.CallInfo** %1244 to i8*
  %1246 = getelementptr inbounds i8, i8* %1245, i64 40
  %1247 = bitcast i8* %1246 to %struct.CallInfo**
  %load_target243 = load %struct.CallInfo*, %struct.CallInfo** %1247
  %1248 = bitcast %struct.CallInfo* %load_target243 to %struct.lua_TValue**
  %1249 = bitcast %struct.lua_TValue** %1248 to i8*
  %1250 = getelementptr inbounds i8, i8* %1249, i64 16
  %1251 = bitcast i8* %1250 to %struct.lua_TValue**
  %load_target244 = load %struct.lua_TValue*, %struct.lua_TValue** %1251
  %1252 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1253 = bitcast %struct.lua_TValue** %1252 to i8*
  %1254 = getelementptr inbounds i8, i8* %1253, i64 16
  %1255 = bitcast i8* %1254 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target244, %struct.lua_TValue** %1255
  %R12642 = sext i32 %R10976 to i64
  %R12643 = mul i64 %R12642, 16
  %1256 = bitcast %struct.lua_TValue* %load_target242 to i8*
  %1257 = getelementptr inbounds i8, i8* %1256, i64 %R12643
  %1258 = bitcast i8* %1257 to %struct.lua_TValue*
  %1259 = bitcast %struct.lua_TValue* %1258 to i32*
  %1260 = bitcast i32* %1259 to i8*
  %1261 = getelementptr inbounds i8, i8* %1260, i64 56
  %1262 = bitcast i8* %1261 to i32*
  %load_target245 = load i32, i32* %1262
  store i32* %83, i32** %41
  store %struct.lua_TValue* %load_target242, %struct.lua_TValue** %1
  %cond246 = icmp ne i32 %load_target245, 0
  br i1 %cond246, label %L2219, label %L2220

L2219:                                            ; preds = %L2218
  %1263 = bitcast %struct.lua_TValue* %1258 to { [8 x i8] }*
  %1264 = bitcast { [8 x i8] }* %1263 to i8*
  %1265 = getelementptr inbounds i8, i8* %1264, i64 48
  %1266 = bitcast i8* %1265 to { [8 x i8] }*
  %load_target247 = load { [8 x i8] }, { [8 x i8] }* %1266
  %1267 = bitcast %struct.lua_TValue* %1258 to { [8 x i8] }*
  %1268 = bitcast { [8 x i8] }* %1267 to i8*
  %1269 = getelementptr inbounds i8, i8* %1268, i64 32
  %1270 = bitcast i8* %1269 to { [8 x i8] }*
  store { [8 x i8] } %load_target247, { [8 x i8] }* %1270
  %1271 = bitcast %struct.lua_TValue* %1258 to i32*
  %1272 = bitcast i32* %1271 to i8*
  %1273 = getelementptr inbounds i8, i8* %1272, i64 40
  %1274 = bitcast i8* %1273 to i32*
  store i32 %load_target245, i32* %1274
  %1275 = bitcast i32* %80 to i8*
  %1276 = getelementptr inbounds i8, i8* %1275, i64 4
  %1277 = bitcast i8* %1276 to i32*
  %load_target248 = load i32, i32* %1277
  %R12662 = lshr i32 %load_target248, 14
  %R12663 = and i32 %R12662, 262143
  %R12665 = add i32 %R12663, -131071
  %R12666 = sext i32 %R12665 to i64
  %R12667 = mul i64 %R12666, 4
  %R12669 = ptrtoint i32* %83 to i64
  %R12670 = add i64 %R12669, %R12667
  %R12671 = inttoptr i64 %R12670 to i32*
  store i32* %R12671, i32** %41
  br label %L2220

L2220:                                            ; preds = %L2219, %L2218
  %1278 = load i32*, i32** %41
  %1279 = bitcast i32* %1278 to i8*
  %1280 = getelementptr inbounds i8, i8* %1279, i32* inttoptr (i64 4 to i32*)
  %1281 = bitcast i8* %1280 to i32*
  store i32* %1281, i32** %0
  br label %L2022

L2221:                                            ; preds = %L2022
  store i32 %R11100, i32* %43
  %cond249 = icmp ne i32 %R11100, 0
  br i1 %cond249, label %L2223, label %L2222

L2222:                                            ; preds = %L2221
  %1282 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1283 = bitcast %struct.lua_TValue** %1282 to i8*
  %1284 = getelementptr inbounds i8, i8* %1283, i64 16
  %1285 = bitcast i8* %1284 to %struct.lua_TValue**
  %load_target250 = load %struct.lua_TValue*, %struct.lua_TValue** %1285
  %R12689 = sub %struct.lua_TValue* %load_target250, %90
  %R12690 = sdiv %struct.lua_TValue* %R12689, i64 16
  %R12691 = ptrtoint %struct.lua_TValue* %R12690 to i32
  %R12692 = add i32 %R12691, -1
  %1286 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1287 = bitcast %struct.CallInfo** %1286 to i8*
  %1288 = getelementptr inbounds i8, i8* %1287, i64 40
  %1289 = bitcast i8* %1288 to %struct.CallInfo**
  %load_target251 = load %struct.CallInfo*, %struct.CallInfo** %1289
  %1290 = bitcast %struct.CallInfo* %load_target251 to %struct.lua_TValue**
  %1291 = bitcast %struct.lua_TValue** %1290 to i8*
  %1292 = getelementptr inbounds i8, i8* %1291, i64 16
  %1293 = bitcast i8* %1292 to %struct.lua_TValue**
  %load_target252 = load %struct.lua_TValue*, %struct.lua_TValue** %1293
  %1294 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1295 = bitcast %struct.lua_TValue** %1294 to i8*
  %1296 = getelementptr inbounds i8, i8* %1295, i64 16
  %1297 = bitcast i8* %1296 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target252, %struct.lua_TValue** %1297
  store i32 %R12692, i32* %43
  br label %L2223

L2223:                                            ; preds = %L2222, %L2221
  store i32 %R11031, i32* %42
  %cond253 = icmp ne i32 %R11031, 0
  br i1 %cond253, label %L2225, label %L2224

L2224:                                            ; preds = %L2223
  %1298 = bitcast i32* %83 to i8*
  %1299 = getelementptr inbounds i8, i8* %1298, i32* inttoptr (i64 4 to i32*)
  %1300 = bitcast i8* %1299 to i32*
  %1301 = bitcast i32* %80 to i8*
  %1302 = getelementptr inbounds i8, i8* %1301, i64 4
  %1303 = bitcast i8* %1302 to i32*
  %load_target254 = load i32, i32* %1303
  store i32* %1300, i32** %0
  store i32 %load_target254, i32* %42
  br label %L2225

L2225:                                            ; preds = %L2224, %L2223
  %1304 = bitcast %struct.lua_TValue* %90 to i32*
  %1305 = bitcast i32* %1304 to i8*
  %1306 = getelementptr inbounds i8, i8* %1305, i64 8
  %1307 = bitcast i8* %1306 to i32*
  %load_target255 = load i32, i32* %1307
  %R12705 = icmp eq i32 %load_target255, 5
  %R12705256 = zext i1 %R12705 to i32
  %cond257 = icmp ne i32 %R12705256, 0
  br i1 %cond257, label %L2226, label %L2022

L2226:                                            ; preds = %L2225
  %1308 = bitcast %struct.lua_TValue* %90 to { [184 x i8] }**
  %1309 = bitcast { [184 x i8] }** %1308 to i8*
  %1310 = getelementptr inbounds i8, i8* %1309, i64 0
  %1311 = bitcast i8* %1310 to { [184 x i8] }**
  %load_target258 = load { [184 x i8] }*, { [184 x i8] }** %1311
  %1312 = load i32, i32* %42
  %R12710 = add i32 %1312, -1
  %R12711 = mul i32 %R12710, 50
  %1313 = load i32, i32* %43
  %R12713 = add i32 %R12711, %1313
  %1314 = bitcast { [184 x i8] }* %load_target258 to i32*
  %1315 = bitcast i32* %1314 to i8*
  %1316 = getelementptr inbounds i8, i8* %1315, i64 56
  %1317 = bitcast i8* %1316 to i32*
  %load_target259 = load i32, i32* %1317
  %R12717 = icmp sgt i32 %R12713, %load_target259
  %R12717260 = zext i1 %R12717 to i32
  store i32 %1313, i32* %44
  store i32 %R12713, i32* %45
  %cond261 = icmp ne i32 %R12717260, 0
  br i1 %cond261, label %L2227, label %L2228

L2227:                                            ; preds = %L2226
  call void @luaH_resizearray(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target258, i32 %R12713)
  store i32 %R12713, i32* %45
  br label %L2228

L2228:                                            ; preds = %L2233, %L2227, %L2226
  %1318 = load i32, i32* %44
  %R12722 = icmp sgt i32 %1318, 0
  %R12722262 = zext i1 %R12722 to i32
  %cond263 = icmp ne i32 %R12722262, 0
  br i1 %cond263, label %L2229, label %L2022

L2229:                                            ; preds = %L2228
  %R12725 = sext i32 %1318 to i64
  %R12726 = mul i64 %R12725, 16
  %1319 = bitcast %struct.lua_TValue* %90 to i8*
  %1320 = getelementptr inbounds i8, i8* %1319, i64 %R12726
  %1321 = bitcast i8* %1320 to %struct.lua_TValue*
  %1322 = load i32, i32* %45
  %R12732 = add i32 %1322, -1
  %R12733 = call %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target258, i32 %1322)
  %1323 = bitcast %struct.lua_TValue* %1321 to { [8 x i8] }*
  %1324 = bitcast { [8 x i8] }* %1323 to i8*
  %1325 = getelementptr inbounds i8, i8* %1324, i64 0
  %1326 = bitcast i8* %1325 to { [8 x i8] }*
  %load_target264 = load { [8 x i8] }, { [8 x i8] }* %1326
  %1327 = bitcast %struct.lua_TValue* %R12733 to { [8 x i8] }*
  %1328 = bitcast { [8 x i8] }* %1327 to i8*
  %1329 = getelementptr inbounds i8, i8* %1328, i64 0
  %1330 = bitcast i8* %1329 to { [8 x i8] }*
  store { [8 x i8] } %load_target264, { [8 x i8] }* %1330
  %1331 = bitcast %struct.lua_TValue* %1321 to i32*
  %1332 = bitcast i32* %1331 to i8*
  %1333 = getelementptr inbounds i8, i8* %1332, i64 8
  %1334 = bitcast i8* %1333 to i32*
  %load_target265 = load i32, i32* %1334
  %1335 = bitcast %struct.lua_TValue* %R12733 to i32*
  %1336 = bitcast i32* %1335 to i8*
  %1337 = getelementptr inbounds i8, i8* %1336, i64 8
  %1338 = bitcast i8* %1337 to i32*
  store i32 %load_target265, i32* %1338
  %1339 = bitcast %struct.lua_TValue* %1321 to i32*
  %1340 = bitcast i32* %1339 to i8*
  %1341 = getelementptr inbounds i8, i8* %1340, i64 8
  %1342 = bitcast i8* %1341 to i32*
  %load_target266 = load i32, i32* %1342
  %R12743 = icmp sge i32 %load_target266, 4
  %R12743267 = zext i1 %R12743 to i32
  store i32 %R12732, i32* %45
  %cond268 = icmp ne i32 %R12743267, 0
  br i1 %cond268, label %L2230, label %L2233

L2230:                                            ; preds = %L2229
  %1343 = bitcast %struct.lua_TValue* %1321 to { [184 x i8] }**
  %1344 = bitcast { [184 x i8] }** %1343 to i8*
  %1345 = getelementptr inbounds i8, i8* %1344, i64 0
  %1346 = bitcast i8* %1345 to { [184 x i8] }**
  %load_target269 = load { [184 x i8] }*, { [184 x i8] }** %1346
  %1347 = bitcast { [184 x i8] }* %load_target269 to i8*
  %1348 = getelementptr inbounds i8, i8* %1347, i64 9
  %load_target270 = load i8, i8* %1348
  %R12747 = zext i8 %load_target270 to i32
  %R12748 = and i32 %R12747, 3
  %cond271 = icmp ne i32 %R12748, 0
  br i1 %cond271, label %L2231, label %L2233

L2231:                                            ; preds = %L2230
  %1349 = bitcast { [184 x i8] }* %load_target258 to i8*
  %1350 = getelementptr inbounds i8, i8* %1349, i64 9
  %load_target272 = load i8, i8* %1350
  %R12752 = zext i8 %load_target272 to i32
  %R12753 = and i32 %R12752, 4
  %cond273 = icmp ne i32 %R12753, 0
  br i1 %cond273, label %L2232, label %L2233

L2232:                                            ; preds = %L2231
  call void @luaC_barrierback(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target258)
  br label %L2233

L2233:                                            ; preds = %L2232, %L2231, %L2230, %L2229
  %R12757 = add i32 %1318, -1
  store i32 %R12757, i32* %44
  br label %L2228

L2234:                                            ; preds = %L2022
  call void @luaF_close(%struct.lua_State* %ARG1, %struct.lua_TValue* %90)
  br label %L2022

L2235:                                            ; preds = %L2022
  %1351 = bitcast { [184 x i8] }* %load_target3 to %struct.Proto**
  %1352 = bitcast %struct.Proto** %1351 to i8*
  %1353 = getelementptr inbounds i8, i8* %1352, i64 32
  %1354 = bitcast i8* %1353 to %struct.Proto**
  %load_target274 = load %struct.Proto*, %struct.Proto** %1354
  %1355 = bitcast %struct.Proto* %load_target274 to %struct.Proto***
  %1356 = bitcast %struct.Proto*** %1355 to i8*
  %1357 = getelementptr inbounds i8, i8* %1356, i64 32
  %1358 = bitcast i8* %1357 to %struct.Proto***
  %load_target275 = load %struct.Proto**, %struct.Proto*** %1358
  %R12768 = sext i32 %R11150 to i64
  %R12769 = mul i64 %R12768, 8
  %1359 = bitcast %struct.Proto** %load_target275 to i8*
  %1360 = getelementptr inbounds i8, i8* %1359, i64 %R12769
  %1361 = bitcast i8* %1360 to %struct.Proto**
  %1362 = bitcast %struct.Proto** %1361 to i8*
  %1363 = getelementptr inbounds i8, i8* %1362, i64 0
  %1364 = bitcast i8* %1363 to %struct.Proto**
  %load_target276 = load %struct.Proto*, %struct.Proto** %1364
  %1365 = bitcast %struct.Proto* %load_target276 to i8*
  %1366 = getelementptr inbounds i8, i8* %1365, i64 112
  %load_target277 = load i8, i8* %1366
  %R12774 = zext i8 %load_target277 to i32
  %1367 = bitcast { [184 x i8] }* %load_target3 to %struct.Table**
  %1368 = bitcast %struct.Table** %1367 to i8*
  %1369 = getelementptr inbounds i8, i8* %1368, i64 24
  %1370 = bitcast i8* %1369 to %struct.Table**
  %load_target278 = load %struct.Table*, %struct.Table** %1370
  %R12779 = call { [56 x i8] }* @luaF_newLclosure(%struct.lua_State* %ARG1, i32 %R12774, %struct.Table* %load_target278)
  %1371 = bitcast { [56 x i8] }* %R12779 to %struct.Proto**
  %1372 = bitcast %struct.Proto** %1371 to i8*
  %1373 = getelementptr inbounds i8, i8* %1372, i64 32
  %1374 = bitcast i8* %1373 to %struct.Proto**
  store %struct.Proto* %load_target276, %struct.Proto** %1374
  store i32 0, i32* %46
  br label %L2236

L2236:                                            ; preds = %L2240, %L2235
  %1375 = load i32, i32* %46
  %R12784 = icmp slt i32 %1375, %R12774
  %R12784279 = zext i1 %R12784 to i32
  %1376 = load i32*, i32** %47
  %cond280 = icmp ne i32 %R12784279, 0
  br i1 %cond280, label %L2237, label %L2241

L2237:                                            ; preds = %L2236
  %1377 = bitcast i32* %1376 to i8*
  %1378 = getelementptr inbounds i8, i8* %1377, i64 0
  %1379 = bitcast i8* %1378 to i32*
  %load_target281 = load i32, i32* %1379
  %R12789 = and i32 %load_target281, 63
  %R12792 = icmp eq i32 %R12789, 4
  %R12792282 = zext i1 %R12792 to i32
  %R12809 = sext i32 %1375 to i64
  %1380 = bitcast { [56 x i8] }* %R12779 to i8*
  %1381 = getelementptr inbounds i8, i8* %1380, i32 40
  %1382 = bitcast i8* %1381 to { [56 x i8] }*
  %R12798 = lshr i32 %load_target281, 23
  %R12810 = mul i64 %R12809, 8
  %R12799 = and i32 %R12798, 511
  %1383 = bitcast { [56 x i8] }* %1382 to i8*
  %1384 = getelementptr inbounds i8, i8* %1383, i64 %R12810
  %1385 = bitcast i8* %1384 to { [56 x i8] }*
  %cond283 = icmp ne i32 %R12792282, 0
  br i1 %cond283, label %L2238, label %L2239

L2238:                                            ; preds = %L2237
  %R12801 = sext i32 %R12799 to i64
  %R12802 = mul i64 %R12801, 8
  %1386 = bitcast { [184 x i8] }* %93 to i8*
  %1387 = getelementptr inbounds i8, i8* %1386, i64 %R12802
  %1388 = bitcast i8* %1387 to { [184 x i8] }*
  %1389 = bitcast { [184 x i8] }* %1388 to %struct.UpVal**
  %1390 = bitcast %struct.UpVal** %1389 to i8*
  %1391 = getelementptr inbounds i8, i8* %1390, i64 0
  %1392 = bitcast i8* %1391 to %struct.UpVal**
  %load_target284 = load %struct.UpVal*, %struct.UpVal** %1392
  %1393 = bitcast { [56 x i8] }* %1385 to %struct.UpVal**
  %1394 = bitcast %struct.UpVal** %1393 to i8*
  %1395 = getelementptr inbounds i8, i8* %1394, i64 0
  %1396 = bitcast i8* %1395 to %struct.UpVal**
  store %struct.UpVal* %load_target284, %struct.UpVal** %1396
  br label %L2240

L2239:                                            ; preds = %L2237
  %R12820 = sext i32 %R12799 to i64
  %R12821 = mul i64 %R12820, 16
  %1397 = bitcast %struct.lua_TValue* %87 to i8*
  %1398 = getelementptr inbounds i8, i8* %1397, i64 %R12821
  %1399 = bitcast i8* %1398 to %struct.lua_TValue*
  %R12823 = call %struct.UpVal* @luaF_findupval(%struct.lua_State* %ARG1, %struct.lua_TValue* %1399)
  %1400 = bitcast { [56 x i8] }* %1385 to %struct.UpVal**
  %1401 = bitcast %struct.UpVal** %1400 to i8*
  %1402 = getelementptr inbounds i8, i8* %1401, i64 0
  %1403 = bitcast i8* %1402 to %struct.UpVal**
  store %struct.UpVal* %R12823, %struct.UpVal** %1403
  br label %L2240

L2240:                                            ; preds = %L2239, %L2238
  %R12832 = add i32 %1375, 1
  %1404 = bitcast i32* %1376 to i8*
  %1405 = getelementptr inbounds i8, i8* %1404, i32* inttoptr (i64 4 to i32*)
  %1406 = bitcast i8* %1405 to i32*
  store i32* %1406, i32** %47
  store i32* %1406, i32** %0
  store i32 %R12832, i32* %46
  br label %L2236

L2241:                                            ; preds = %L2236
  %R12837 = bitcast { [56 x i8] }* %R12779 to { [184 x i8] }*
  %1407 = bitcast %struct.lua_TValue* %90 to { [184 x i8] }**
  %1408 = bitcast { [184 x i8] }** %1407 to i8*
  %1409 = getelementptr inbounds i8, i8* %1408, i64 0
  %1410 = bitcast i8* %1409 to { [184 x i8] }**
  store { [184 x i8] }* %R12837, { [184 x i8] }** %1410
  %1411 = bitcast %struct.lua_TValue* %90 to i32*
  %1412 = bitcast i32* %1411 to i8*
  %1413 = getelementptr inbounds i8, i8* %1412, i64 8
  %1414 = bitcast i8* %1413 to i32*
  store i32 6, i32* %1414
  %1415 = bitcast %struct.lua_State* %ARG1 to i32**
  %1416 = bitcast i32** %1415 to i8*
  %1417 = getelementptr inbounds i8, i8* %1416, i64 48
  %1418 = bitcast i8* %1417 to i32**
  store i32* %1376, i32** %1418
  %1419 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1420 = bitcast %struct.global_State** %1419 to i8*
  %1421 = getelementptr inbounds i8, i8* %1420, i64 32
  %1422 = bitcast i8* %1421 to %struct.global_State**
  %load_target285 = load %struct.global_State*, %struct.global_State** %1422
  %1423 = bitcast %struct.global_State* %load_target285 to i64*
  %1424 = bitcast i64* %1423 to i8*
  %1425 = getelementptr inbounds i8, i8* %1424, i64 120
  %1426 = bitcast i8* %1425 to i64*
  %load_target286 = load i64, i64* %1426
  %1427 = bitcast %struct.global_State* %load_target285 to i64*
  %1428 = bitcast i64* %1427 to i8*
  %1429 = getelementptr inbounds i8, i8* %1428, i64 112
  %1430 = bitcast i8* %1429 to i64*
  %load_target287 = load i64, i64* %1430
  %R12848 = icmp uge i64 %load_target286, %load_target287
  %R12848288 = zext i1 %R12848 to i32
  %cond289 = icmp ne i32 %R12848288, 0
  br i1 %cond289, label %L2242, label %L2243

L2242:                                            ; preds = %L2241
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2243

L2243:                                            ; preds = %L2242, %L2241
  %1431 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1432 = bitcast %struct.lua_TValue** %1431 to i8*
  %1433 = getelementptr inbounds i8, i8* %1432, i64 24
  %1434 = bitcast i8* %1433 to %struct.lua_TValue**
  %load_target290 = load %struct.lua_TValue*, %struct.lua_TValue** %1434
  store %struct.lua_TValue* %load_target290, %struct.lua_TValue** %1
  br label %L2022

L2244:                                            ; preds = %L2022
  %R12857 = add i32 %R11100, -1
  %1435 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1436 = bitcast %struct.CallInfo** %1435 to i8*
  %1437 = getelementptr inbounds i8, i8* %1436, i64 40
  %1438 = bitcast i8* %1437 to %struct.CallInfo**
  %load_target291 = load %struct.CallInfo*, %struct.CallInfo** %1438
  %1439 = bitcast %struct.CallInfo* %load_target291 to %struct.lua_TValue**
  %1440 = bitcast %struct.lua_TValue** %1439 to i8*
  %1441 = getelementptr inbounds i8, i8* %1440, i64 0
  %1442 = bitcast i8* %1441 to %struct.lua_TValue**
  %load_target292 = load %struct.lua_TValue*, %struct.lua_TValue** %1442
  %1443 = bitcast %struct.CallInfo* %load_target291 to %struct.lua_TValue**
  %1444 = bitcast %struct.lua_TValue** %1443 to i8*
  %1445 = getelementptr inbounds i8, i8* %1444, i64 8
  %1446 = bitcast i8* %1445 to %struct.lua_TValue**
  %load_target293 = load %struct.lua_TValue*, %struct.lua_TValue** %1446
  %R12864 = sub %struct.lua_TValue* %load_target292, %load_target293
  %R12865 = sdiv %struct.lua_TValue* %R12864, i64 16
  %R12866 = ptrtoint %struct.lua_TValue* %R12865 to i32
  %1447 = bitcast { [184 x i8] }* %load_target3 to %struct.Proto**
  %1448 = bitcast %struct.Proto** %1447 to i8*
  %1449 = getelementptr inbounds i8, i8* %1448, i64 32
  %1450 = bitcast i8* %1449 to %struct.Proto**
  %load_target294 = load %struct.Proto*, %struct.Proto** %1450
  %1451 = bitcast %struct.Proto* %load_target294 to i8*
  %1452 = getelementptr inbounds i8, i8* %1451, i64 113
  %load_target295 = load i8, i8* %1452
  %R12870 = zext i8 %load_target295 to i32
  %R12871 = sub i32 %R12866, %R12870
  %R12872 = add i32 %R12871, -1
  %R12874 = icmp eq i32 %R12857, -1
  %R12874296 = zext i1 %R12874 to i32
  store i32 %R12857, i32* %49
  %cond297 = icmp ne i32 %R12874296, 0
  br i1 %cond297, label %L2245, label %L2248

L2245:                                            ; preds = %L2244
  %1453 = bitcast %struct.lua_State* %ARG1 to i32**
  %1454 = bitcast i32** %1453 to i8*
  %1455 = getelementptr inbounds i8, i8* %1454, i64 48
  %1456 = bitcast i8* %1455 to i32**
  store i32* %83, i32** %1456
  %1457 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1458 = bitcast %struct.lua_TValue** %1457 to i8*
  %1459 = getelementptr inbounds i8, i8* %1458, i64 56
  %1460 = bitcast i8* %1459 to %struct.lua_TValue**
  %load_target298 = load %struct.lua_TValue*, %struct.lua_TValue** %1460
  %R12879 = bitcast %struct.lua_TValue* %load_target298 to i8*
  %1461 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1462 = bitcast %struct.lua_TValue** %1461 to i8*
  %1463 = getelementptr inbounds i8, i8* %1462, i64 16
  %1464 = bitcast i8* %1463 to %struct.lua_TValue**
  %load_target299 = load %struct.lua_TValue*, %struct.lua_TValue** %1464
  %R12882 = bitcast %struct.lua_TValue* %load_target299 to i8*
  %R12883 = sub i8* %R12879, %R12882
  %R12885 = mul i32 %R12872, 16
  %R12886 = sext i32 %R12885 to i64
  %R12887 = icmp sle i8* %R12883, i64 %R12886
  %R12887300 = zext i1 %R12887 to i32
  %cond301 = icmp ne i32 %R12887300, 0
  br i1 %cond301, label %L2246, label %L2247

L2246:                                            ; preds = %L2245
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 %R12872)
  br label %L2247

L2247:                                            ; preds = %L2246, %L2245
  %1465 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1466 = bitcast %struct.lua_TValue** %1465 to i8*
  %1467 = getelementptr inbounds i8, i8* %1466, i64 24
  %1468 = bitcast i8* %1467 to %struct.lua_TValue**
  %load_target302 = load %struct.lua_TValue*, %struct.lua_TValue** %1468
  %R12898 = sext i32 %R10976 to i64
  %R12899 = mul i64 %R12898, 16
  %1469 = bitcast %struct.lua_TValue* %load_target302 to i8*
  %1470 = getelementptr inbounds i8, i8* %1469, i64 %R12899
  %1471 = bitcast i8* %1470 to %struct.lua_TValue*
  %R12904 = sext i32 %R12872 to i64
  %R12905 = mul i64 %R12904, 16
  %1472 = bitcast %struct.lua_TValue* %1471 to i8*
  %1473 = getelementptr inbounds i8, i8* %1472, i64 %R12905
  %1474 = bitcast i8* %1473 to %struct.lua_TValue*
  %1475 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1476 = bitcast %struct.lua_TValue** %1475 to i8*
  %1477 = getelementptr inbounds i8, i8* %1476, i64 16
  %1478 = bitcast i8* %1477 to %struct.lua_TValue**
  store %struct.lua_TValue* %1474, %struct.lua_TValue** %1478
  store %struct.lua_TValue* %load_target302, %struct.lua_TValue** %1
  store %struct.lua_TValue* %1471, %struct.lua_TValue** %51
  store %struct.lua_TValue* %1471, %struct.lua_TValue** %50
  store i32 %R12872, i32* %49
  br label %L2248

L2248:                                            ; preds = %L2247, %L2244
  store i32 0, i32* %48
  br label %L2249

L2249:                                            ; preds = %L2253, %L2248
  %1479 = load i32, i32* %48
  %1480 = load i32, i32* %49
  %R12910 = icmp slt i32 %1479, %1480
  %R12910303 = zext i1 %R12910 to i32
  %cond304 = icmp ne i32 %R12910303, 0
  br i1 %cond304, label %L2250, label %L2022

L2250:                                            ; preds = %L2249
  %R12913 = icmp slt i32 %1479, %R12872
  %R12913305 = zext i1 %R12913 to i32
  %R12921 = sext i32 %1479 to i64
  %R12922 = mul i64 %R12921, 16
  %cond306 = icmp ne i32 %R12913305, 0
  br i1 %cond306, label %L2251, label %L2252

L2251:                                            ; preds = %L2250
  %1481 = bitcast %struct.CallInfo* %load_target291 to %struct.lua_TValue**
  %1482 = bitcast %struct.lua_TValue** %1481 to i8*
  %1483 = getelementptr inbounds i8, i8* %1482, i64 0
  %1484 = bitcast i8* %1483 to %struct.lua_TValue**
  %load_target307 = load %struct.lua_TValue*, %struct.lua_TValue** %1484
  %R12917 = sext i32 %R12872 to i64
  %R12918 = mul i64 %R12917, 16
  %R12919 = sub %struct.lua_TValue* %load_target307, i64 %R12918
  %1485 = bitcast %struct.lua_TValue* %R12919 to i8*
  %1486 = getelementptr inbounds i8, i8* %1485, i64 %R12922
  %1487 = bitcast i8* %1486 to %struct.lua_TValue*
  %1488 = load %struct.lua_TValue*, %struct.lua_TValue** %50
  %1489 = bitcast %struct.lua_TValue* %1488 to i8*
  %1490 = getelementptr inbounds i8, i8* %1489, i64 %R12922
  %1491 = bitcast i8* %1490 to %struct.lua_TValue*
  %1492 = bitcast %struct.lua_TValue* %1487 to { [8 x i8] }*
  %1493 = bitcast { [8 x i8] }* %1492 to i8*
  %1494 = getelementptr inbounds i8, i8* %1493, i64 0
  %1495 = bitcast i8* %1494 to { [8 x i8] }*
  %load_target308 = load { [8 x i8] }, { [8 x i8] }* %1495
  %1496 = bitcast %struct.lua_TValue* %1491 to { [8 x i8] }*
  %1497 = bitcast { [8 x i8] }* %1496 to i8*
  %1498 = getelementptr inbounds i8, i8* %1497, i64 0
  %1499 = bitcast i8* %1498 to { [8 x i8] }*
  store { [8 x i8] } %load_target308, { [8 x i8] }* %1499
  %1500 = bitcast %struct.lua_TValue* %1487 to i32*
  %1501 = bitcast i32* %1500 to i8*
  %1502 = getelementptr inbounds i8, i8* %1501, i64 8
  %1503 = bitcast i8* %1502 to i32*
  %load_target309 = load i32, i32* %1503
  %1504 = bitcast %struct.lua_TValue* %1491 to i32*
  %1505 = bitcast i32* %1504 to i8*
  %1506 = getelementptr inbounds i8, i8* %1505, i64 8
  %1507 = bitcast i8* %1506 to i32*
  store i32 %load_target309, i32* %1507
  store %struct.lua_TValue* %1488, %struct.lua_TValue** %51
  br label %L2253

L2252:                                            ; preds = %L2250
  %1508 = load %struct.lua_TValue*, %struct.lua_TValue** %51
  %1509 = bitcast %struct.lua_TValue* %1508 to i8*
  %1510 = getelementptr inbounds i8, i8* %1509, i64 %R12922
  %1511 = bitcast i8* %1510 to %struct.lua_TValue*
  %1512 = bitcast %struct.lua_TValue* %1511 to i32*
  %1513 = bitcast i32* %1512 to i8*
  %1514 = getelementptr inbounds i8, i8* %1513, i64 8
  %1515 = bitcast i8* %1514 to i32*
  store i32 0, i32* %1515
  br label %L2253

L2253:                                            ; preds = %L2252, %L2251
  %R12942 = add i32 %1479, 1
  store i32 %R12942, i32* %48
  br label %L2249

L2254:                                            ; preds = %L2203, %L2191, %L2184
  ret void
}

define internal %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2) {
L2255:
  %0 = alloca %struct.lua_TValue*
  %R12944 = icmp sgt i32 %ARG2, 0
  %R129441 = zext i1 %R12944 to i32
  %cond = icmp ne i32 %R129441, 0
  br i1 %cond, label %L2256, label %L2259

L2256:                                            ; preds = %L2255
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %R12948 = add i32 %ARG2, -1
  %R12949 = sext i32 %R12948 to i64
  %R12950 = mul i64 %R12949, 16
  %5 = bitcast %struct.lua_TValue* %load_target to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 %R12950
  %7 = bitcast i8* %6 to %struct.lua_TValue*
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %R12956 = icmp uge %struct.lua_TValue* %7, %load_target2
  %R129563 = zext i1 %R12956 to i32
  %cond4 = icmp ne i32 %R129563, 0
  br i1 %cond4, label %L2257, label %L2258

L2257:                                            ; preds = %L2256
  store %struct.lua_TValue* @luaO_nilobject_.3, %struct.lua_TValue** %0
  br label %L2266

L2258:                                            ; preds = %L2256
  store %struct.lua_TValue* %7, %struct.lua_TValue** %0
  br label %L2266

L2259:                                            ; preds = %L2255
  %R12962 = icmp sgt i32 %ARG2, -10000
  %R129625 = zext i1 %R12962 to i32
  %cond6 = icmp ne i32 %R129625, 0
  br i1 %cond6, label %L2260, label %L2261

L2260:                                            ; preds = %L2259
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R12967 = sext i32 %ARG2 to i64
  %R12968 = mul i64 %R12967, 16
  %16 = bitcast %struct.lua_TValue* %load_target7 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %R12968
  %18 = bitcast i8* %17 to %struct.lua_TValue*
  store %struct.lua_TValue* %18, %struct.lua_TValue** %0
  br label %L2266

L2261:                                            ; preds = %L2259
  switch i32 %ARG2, label %L2265 [
    i32 -10002, label %L2264
    i32 -10001, label %L2263
    i32 -10000, label %L2262
  ]

L2262:                                            ; preds = %L2261
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %20 = bitcast %struct.global_State** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 32
  %22 = bitcast i8* %21 to %struct.global_State**
  %load_target8 = load %struct.global_State*, %struct.global_State** %22
  %23 = bitcast %struct.global_State* %load_target8 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i32 160
  %25 = bitcast i8* %24 to %struct.global_State*
  store %struct.global_State* %25, %struct.lua_TValue** %0
  br label %L2266

L2263:                                            ; preds = %L2261
  %26 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %27 = bitcast %struct.CallInfo** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 40
  %29 = bitcast i8* %28 to %struct.CallInfo**
  %load_target9 = load %struct.CallInfo*, %struct.CallInfo** %29
  %30 = bitcast %struct.CallInfo* %load_target9 to %struct.lua_TValue**
  %31 = bitcast %struct.lua_TValue** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 8
  %33 = bitcast i8* %32 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %33
  %34 = bitcast %struct.lua_TValue* %load_target10 to { [184 x i8] }**
  %35 = bitcast { [184 x i8] }** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %37
  %38 = bitcast { [184 x i8] }* %load_target11 to %struct.Table**
  %39 = bitcast %struct.Table** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 24
  %41 = bitcast i8* %40 to %struct.Table**
  %load_target12 = load %struct.Table*, %struct.Table** %41
  %R12983 = bitcast %struct.Table* %load_target12 to { [184 x i8] }*
  %42 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %43 = bitcast { [184 x i8] }** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 136
  %45 = bitcast i8* %44 to { [184 x i8] }**
  store { [184 x i8] }* %R12983, { [184 x i8] }** %45
  %46 = bitcast %struct.lua_State* %ARG1 to i32*
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 144
  %49 = bitcast i8* %48 to i32*
  store i32 5, i32* %49
  %50 = bitcast %struct.lua_State* %ARG1 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i32 136
  %52 = bitcast i8* %51 to %struct.lua_State*
  store %struct.lua_State* %52, %struct.lua_TValue** %0
  br label %L2266

L2264:                                            ; preds = %L2261
  %53 = bitcast %struct.lua_State* %ARG1 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i32 120
  %55 = bitcast i8* %54 to %struct.lua_State*
  store %struct.lua_State* %55, %struct.lua_TValue** %0
  br label %L2266

L2265:                                            ; preds = %L2261
  %56 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %57 = bitcast %struct.CallInfo** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 40
  %59 = bitcast i8* %58 to %struct.CallInfo**
  %load_target13 = load %struct.CallInfo*, %struct.CallInfo** %59
  %60 = bitcast %struct.CallInfo* %load_target13 to %struct.lua_TValue**
  %61 = bitcast %struct.lua_TValue** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 8
  %63 = bitcast i8* %62 to %struct.lua_TValue**
  %load_target14 = load %struct.lua_TValue*, %struct.lua_TValue** %63
  %64 = bitcast %struct.lua_TValue* %load_target14 to { [184 x i8] }**
  %65 = bitcast { [184 x i8] }** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = bitcast i8* %66 to { [184 x i8] }**
  %load_target15 = load { [184 x i8] }*, { [184 x i8] }** %67
  %R12996 = sub i32 -10002, %ARG2
  %68 = bitcast { [184 x i8] }* %load_target15 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i32 40
  %70 = bitcast i8* %69 to { [184 x i8] }*
  %R13001 = add i32 %R12996, -1
  %R13002 = sext i32 %R13001 to i64
  %R13003 = mul i64 %R13002, 16
  %71 = bitcast { [184 x i8] }* %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 %R13003
  %73 = bitcast i8* %72 to { [184 x i8] }*
  %74 = bitcast { [184 x i8] }* %load_target15 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 11
  %load_target16 = load i8, i8* %75
  %R13011 = zext i8 %load_target16 to i32
  %R13012 = icmp sle i32 %R12996, %R13011
  %R1301217 = zext i1 %R13012 to i32
  %cond18 = icmp ne i32 %R1301217, 0
  %select = select i1 %cond18, { [184 x i8] }* %73, %struct.lua_TValue* @luaO_nilobject_.3
  store { [184 x i8] }* %select, %struct.lua_TValue** %0
  br label %L2266

L2266:                                            ; preds = %L2265, %L2264, %L2263, %L2262, %L2260, %L2258, %L2257
  %76 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  ret %struct.lua_TValue* %76
}

define internal %struct.Table* @getcurrenv(%struct.lua_State* %ARG1) {
L2267:
  %0 = alloca %struct.Table*
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %2 = bitcast %struct.CallInfo** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 40
  %4 = bitcast i8* %3 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %4
  %5 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %6 = bitcast %struct.CallInfo** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 80
  %8 = bitcast i8* %7 to %struct.CallInfo**
  %load_target1 = load %struct.CallInfo*, %struct.CallInfo** %8
  %R13018 = icmp eq %struct.CallInfo* %load_target, %load_target1
  %R130182 = zext i1 %R13018 to i32
  %cond = icmp ne i32 %R130182, 0
  br i1 %cond, label %L2268, label %L2269

L2268:                                            ; preds = %L2267
  %9 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 120
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %12
  store { [184 x i8] }* %load_target3, %struct.Table** %0
  br label %L2270

L2269:                                            ; preds = %L2267
  %13 = bitcast %struct.CallInfo* %load_target to %struct.lua_TValue**
  %14 = bitcast %struct.lua_TValue** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %16
  %17 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %18 = bitcast { [184 x i8] }** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %20
  %21 = bitcast { [184 x i8] }* %load_target5 to %struct.Table**
  %22 = bitcast %struct.Table** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 24
  %24 = bitcast i8* %23 to %struct.Table**
  %load_target6 = load %struct.Table*, %struct.Table** %24
  store %struct.Table* %load_target6, %struct.Table** %0
  br label %L2270

L2270:                                            ; preds = %L2269, %L2268
  %25 = load %struct.Table*, %struct.Table** %0
  ret %struct.Table* %25
}

define internal i32 @lua_checkstack(%struct.lua_State* %ARG1, i32 %ARG2) {
L2271:
  %0 = alloca i32
  %R13031 = icmp sgt i32 %ARG2, 8000
  %R130311 = zext i1 %R13031 to i32
  store i32 1, i32* %0
  %cond = icmp ne i32 %R130311, 0
  br i1 %cond, label %L2273, label %L2272

L2272:                                            ; preds = %L2271
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %5 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %6 = bitcast %struct.lua_TValue** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  %8 = bitcast i8* %7 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %8
  %R13036 = sub %struct.lua_TValue* %load_target, %load_target2
  %R13037 = sdiv %struct.lua_TValue* %R13036, i64 16
  %R13039 = sext i32 %ARG2 to i64
  %9 = bitcast %struct.lua_TValue* %R13037 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %R13039
  %11 = bitcast i8* %10 to %struct.lua_TValue*
  %R13041 = icmp sgt %struct.lua_TValue* %11, i64 8000
  %R130413 = zext i1 %R13041 to i32
  %cond4 = icmp ne i32 %R130413, 0
  br i1 %cond4, label %L2273, label %L2274

L2273:                                            ; preds = %L2272, %L2271
  store i32 0, i32* %0
  br label %L2279

L2274:                                            ; preds = %L2272
  %R13043 = icmp sgt i32 %ARG2, 0
  %R130435 = zext i1 %R13043 to i32
  %cond6 = icmp ne i32 %R130435, 0
  br i1 %cond6, label %L2275, label %L2279

L2275:                                            ; preds = %L2274
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 56
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R13046 = bitcast %struct.lua_TValue* %load_target7 to i8*
  %R13049 = bitcast %struct.lua_TValue* %load_target to i8*
  %R13050 = sub i8* %R13046, %R13049
  %R13052 = mul i32 %ARG2, 16
  %R13053 = sext i32 %R13052 to i64
  %R13054 = icmp sle i8* %R13050, i64 %R13053
  %R130548 = zext i1 %R13054 to i32
  %cond9 = icmp ne i32 %R130548, 0
  br i1 %cond9, label %L2276, label %L2277

L2276:                                            ; preds = %L2275
  call void @luaD_growstack(%struct.lua_State* %ARG1, i32 %ARG2)
  br label %L2277

L2277:                                            ; preds = %L2276, %L2275
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %17 = bitcast %struct.CallInfo** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 40
  %19 = bitcast i8* %18 to %struct.CallInfo**
  %load_target10 = load %struct.CallInfo*, %struct.CallInfo** %19
  %20 = bitcast %struct.CallInfo* %load_target10 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %R13064 = mul i64 %R13039, 16
  %28 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %R13064
  %30 = bitcast i8* %29 to %struct.lua_TValue*
  %R13066 = icmp ult %struct.lua_TValue* %load_target11, %30
  %R1306613 = zext i1 %R13066 to i32
  %cond14 = icmp ne i32 %R1306613, 0
  br i1 %cond14, label %L2278, label %L2279

L2278:                                            ; preds = %L2277
  %31 = bitcast %struct.CallInfo* %load_target10 to %struct.lua_TValue**
  %32 = bitcast %struct.lua_TValue** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  %34 = bitcast i8* %33 to %struct.lua_TValue**
  store %struct.lua_TValue* %30, %struct.lua_TValue** %34
  br label %L2279

L2279:                                            ; preds = %L2278, %L2277, %L2274, %L2273
  %35 = load i32, i32* %0
  ret i32 %35
}

define internal i32 (%struct.lua_State*)* @lua_atpanic(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %ARG2) {
L2280:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i32 (%struct.lua_State*)**
  %5 = bitcast i32 (%struct.lua_State*)** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 152
  %7 = bitcast i8* %6 to i32 (%struct.lua_State*)**
  %load_target1 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %7
  %8 = bitcast %struct.global_State* %load_target to i32 (%struct.lua_State*)**
  %9 = bitcast i32 (%struct.lua_State*)** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 152
  %11 = bitcast i8* %10 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* %ARG2, i32 (%struct.lua_State*)** %11
  ret i32 (%struct.lua_State*)* %load_target1
}

define internal i32 @lua_gettop(%struct.lua_State* %ARG1) {
L2281:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %R13089 = sub %struct.lua_TValue* %load_target, %load_target1
  %R13090 = sdiv %struct.lua_TValue* %R13089, i64 16
  %R13091 = ptrtoint %struct.lua_TValue* %R13090 to i32
  ret i32 %R13091
}

define internal void @lua_settop(%struct.lua_State* %ARG1, i32 %ARG2) {
L2282:
  %R13094 = icmp sge i32 %ARG2, 0
  %R130941 = zext i1 %R13094 to i32
  %cond = icmp ne i32 %R130941, 0
  br i1 %cond, label %L2283, label %L2286

L2283:                                            ; preds = %L2284, %L2282
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %R13101 = sext i32 %ARG2 to i64
  %R13102 = mul i64 %R13101, 16
  %8 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %R13102
  %10 = bitcast i8* %9 to %struct.lua_TValue*
  %R13104 = icmp ult %struct.lua_TValue* %load_target, %10
  %R131043 = zext i1 %R13104 to i32
  %cond4 = icmp ne i32 %R131043, 0
  br i1 %cond4, label %L2284, label %L2285

L2284:                                            ; preds = %L2283
  %11 = bitcast %struct.lua_TValue* %load_target to i8*
  %12 = getelementptr inbounds i8, i8* %11, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %13 = bitcast i8* %12 to %struct.lua_TValue*
  %14 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %15 = bitcast %struct.lua_TValue** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %struct.lua_TValue**
  store %struct.lua_TValue* %13, %struct.lua_TValue** %17
  %18 = bitcast %struct.lua_TValue* %load_target to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21
  br label %L2283

L2285:                                            ; preds = %L2283
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  store %struct.lua_TValue* %10, %struct.lua_TValue** %25
  br label %L2287

L2286:                                            ; preds = %L2282
  %R13117 = add i32 %ARG2, 1
  %R13118 = sext i32 %R13117 to i64
  %R13119 = mul i64 %R13118, 16
  %26 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %27 = bitcast %struct.lua_TValue** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 16
  %29 = bitcast i8* %28 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %29
  %R13122 = ptrtoint %struct.lua_TValue* %load_target5 to i64
  %R13123 = add i64 %R13122, %R13119
  %R13124 = inttoptr i64 %R13123 to %struct.lua_TValue*
  %30 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %31 = bitcast %struct.lua_TValue** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  %33 = bitcast i8* %32 to %struct.lua_TValue**
  store %struct.lua_TValue* %R13124, %struct.lua_TValue** %33
  br label %L2287

L2287:                                            ; preds = %L2286, %L2285
  ret void
}

define internal void @lua_remove(%struct.lua_State* %ARG1, i32 %ARG2) {
L2288:
  %0 = alloca %struct.lua_TValue*
  %R13127 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  store %struct.lua_TValue* %R13127, %struct.lua_TValue** %0
  br label %L2289

L2289:                                            ; preds = %L2290, %L2288
  %1 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %2 = bitcast %struct.lua_TValue* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %4 = bitcast i8* %3 to %struct.lua_TValue*
  %5 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %6 = bitcast %struct.lua_TValue** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %8
  %R13133 = icmp ult %struct.lua_TValue* %4, %load_target
  %R131331 = zext i1 %R13133 to i32
  store %struct.lua_TValue* %4, %struct.lua_TValue** %0
  %cond = icmp ne i32 %R131331, 0
  br i1 %cond, label %L2290, label %L2291

L2290:                                            ; preds = %L2289
  %9 = bitcast %struct.lua_TValue* %1 to { [8 x i8] }*
  %10 = bitcast { [8 x i8] }* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to { [8 x i8] }*
  %load_target2 = load { [8 x i8] }, { [8 x i8] }* %12
  %13 = bitcast %struct.lua_TValue* %1 to { [8 x i8] }*
  %14 = bitcast { [8 x i8] }* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to { [8 x i8] }*
  store { [8 x i8] } %load_target2, { [8 x i8] }* %16
  %17 = bitcast %struct.lua_TValue* %1 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 24
  %20 = bitcast i8* %19 to i32*
  %load_target3 = load i32, i32* %20
  %21 = bitcast %struct.lua_TValue* %1 to i32*
  %22 = bitcast i32* %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %load_target3, i32* %24
  br label %L2289

L2291:                                            ; preds = %L2289
  %25 = bitcast %struct.lua_TValue* %load_target to i8*
  %26 = getelementptr inbounds i8, i8* %25, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %27 = bitcast i8* %26 to %struct.lua_TValue*
  %28 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %29 = bitcast %struct.lua_TValue** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to %struct.lua_TValue**
  store %struct.lua_TValue* %27, %struct.lua_TValue** %31
  ret void
}

define internal void @lua_insert(%struct.lua_State* %ARG1, i32 %ARG2) {
L2292:
  %0 = alloca %struct.lua_TValue*
  %R13149 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  store %struct.lua_TValue* %load_target, %struct.lua_TValue** %0
  br label %L2293

L2293:                                            ; preds = %L2294, %L2292
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %R13155 = icmp ugt %struct.lua_TValue* %5, %R13149
  %R131551 = zext i1 %R13155 to i32
  %cond = icmp ne i32 %R131551, 0
  br i1 %cond, label %L2294, label %L2295

L2294:                                            ; preds = %L2293
  %6 = bitcast %struct.lua_TValue* %5 to { [8 x i8] }*
  %7 = bitcast { [8 x i8] }* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 -16
  %9 = bitcast i8* %8 to { [8 x i8] }*
  %load_target2 = load { [8 x i8] }, { [8 x i8] }* %9
  %10 = bitcast %struct.lua_TValue* %5 to { [8 x i8] }*
  %11 = bitcast { [8 x i8] }* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to { [8 x i8] }*
  store { [8 x i8] } %load_target2, { [8 x i8] }* %13
  %14 = bitcast %struct.lua_TValue* %5 to i32*
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 -8
  %17 = bitcast i8* %16 to i32*
  %load_target3 = load i32, i32* %17
  %18 = bitcast %struct.lua_TValue* %5 to i32*
  %19 = bitcast i32* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %load_target3, i32* %21
  %22 = bitcast %struct.lua_TValue* %5 to i8*
  %23 = getelementptr inbounds i8, i8* %22, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %24 = bitcast i8* %23 to %struct.lua_TValue*
  store %struct.lua_TValue* %24, %struct.lua_TValue** %0
  br label %L2293

L2295:                                            ; preds = %L2293
  %25 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %26 = bitcast %struct.lua_TValue** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 16
  %28 = bitcast i8* %27 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %28
  %29 = bitcast %struct.lua_TValue* %load_target4 to { [8 x i8] }*
  %30 = bitcast { [8 x i8] }* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = bitcast i8* %31 to { [8 x i8] }*
  %load_target5 = load { [8 x i8] }, { [8 x i8] }* %32
  %33 = bitcast %struct.lua_TValue* %R13149 to { [8 x i8] }*
  %34 = bitcast { [8 x i8] }* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 0
  %36 = bitcast i8* %35 to { [8 x i8] }*
  store { [8 x i8] } %load_target5, { [8 x i8] }* %36
  %37 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %38 = bitcast i32* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to i32*
  %load_target6 = load i32, i32* %40
  %41 = bitcast %struct.lua_TValue* %R13149 to i32*
  %42 = bitcast i32* %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 %load_target6, i32* %44
  ret void
}

define internal void @lua_replace(%struct.lua_State* %ARG1, i32 %ARG2) {
L2296:
  %R13179 = icmp eq i32 %ARG2, -10001
  %R131791 = zext i1 %R13179 to i32
  %cond = icmp ne i32 %R131791, 0
  br i1 %cond, label %L2297, label %L2299

L2297:                                            ; preds = %L2296
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %1 = bitcast %struct.CallInfo** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 40
  %3 = bitcast i8* %2 to %struct.CallInfo**
  %load_target = load %struct.CallInfo*, %struct.CallInfo** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %5 = bitcast %struct.CallInfo** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 80
  %7 = bitcast i8* %6 to %struct.CallInfo**
  %load_target2 = load %struct.CallInfo*, %struct.CallInfo** %7
  %R13184 = icmp eq %struct.CallInfo* %load_target, %load_target2
  %R131843 = zext i1 %R13184 to i32
  %cond4 = icmp ne i32 %R131843, 0
  br i1 %cond4, label %L2298, label %L2299

L2298:                                            ; preds = %L2297
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.126, i64 0, i64 0))
  br label %L2299

L2299:                                            ; preds = %L2298, %L2297, %L2296
  %R13190 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond5 = icmp ne i32 %R131791, 0
  br i1 %cond5, label %L2300, label %L2304

L2300:                                            ; preds = %L2299
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %9 = bitcast %struct.CallInfo** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to %struct.CallInfo**
  %load_target6 = load %struct.CallInfo*, %struct.CallInfo** %11
  %12 = bitcast %struct.CallInfo* %load_target6 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_TValue* %load_target7 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  %load_target8 = load { [184 x i8] }*, { [184 x i8] }** %19
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %24 = bitcast %struct.lua_TValue* %load_target9 to { [184 x i8] }**
  %25 = bitcast { [184 x i8] }** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 -16
  %27 = bitcast i8* %26 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %27
  %28 = bitcast { [184 x i8] }* %load_target8 to %struct.Table**
  %29 = bitcast %struct.Table** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 24
  %31 = bitcast i8* %30 to %struct.Table**
  store { [184 x i8] }* %load_target10, %struct.Table** %31
  %32 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %33 = bitcast %struct.lua_TValue** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 16
  %35 = bitcast i8* %34 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %35
  %36 = bitcast %struct.lua_TValue* %load_target11 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 -8
  %39 = bitcast i8* %38 to i32*
  %load_target12 = load i32, i32* %39
  %R13210 = icmp sge i32 %load_target12, 4
  %R1321013 = zext i1 %R13210 to i32
  %cond14 = icmp ne i32 %R1321013, 0
  br i1 %cond14, label %L2301, label %L2309

L2301:                                            ; preds = %L2300
  %40 = bitcast %struct.lua_TValue* %load_target11 to { [184 x i8] }**
  %41 = bitcast { [184 x i8] }** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 -16
  %43 = bitcast i8* %42 to { [184 x i8] }**
  %load_target15 = load { [184 x i8] }*, { [184 x i8] }** %43
  %44 = bitcast { [184 x i8] }* %load_target15 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 9
  %load_target16 = load i8, i8* %45
  %R13216 = zext i8 %load_target16 to i32
  %R13217 = and i32 %R13216, 3
  %cond17 = icmp ne i32 %R13217, 0
  br i1 %cond17, label %L2302, label %L2309

L2302:                                            ; preds = %L2301
  %46 = bitcast { [184 x i8] }* %load_target8 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 9
  %load_target18 = load i8, i8* %47
  %R13221 = zext i8 %load_target18 to i32
  %R13222 = and i32 %R13221, 4
  %cond19 = icmp ne i32 %R13222, 0
  br i1 %cond19, label %L2303, label %L2309

L2303:                                            ; preds = %L2302
  call void @luaC_barrierf(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target8, { [184 x i8] }* %load_target15)
  br label %L2309

L2304:                                            ; preds = %L2299
  %48 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %49 = bitcast %struct.lua_TValue** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 16
  %51 = bitcast i8* %50 to %struct.lua_TValue**
  %load_target20 = load %struct.lua_TValue*, %struct.lua_TValue** %51
  %52 = bitcast %struct.lua_TValue* %load_target20 to { [8 x i8] }*
  %53 = bitcast { [8 x i8] }* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 -16
  %55 = bitcast i8* %54 to { [8 x i8] }*
  %load_target21 = load { [8 x i8] }, { [8 x i8] }* %55
  %56 = bitcast %struct.lua_TValue* %R13190 to { [8 x i8] }*
  %57 = bitcast { [8 x i8] }* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  %59 = bitcast i8* %58 to { [8 x i8] }*
  store { [8 x i8] } %load_target21, { [8 x i8] }* %59
  %60 = bitcast %struct.lua_TValue* %load_target20 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 -8
  %63 = bitcast i8* %62 to i32*
  %load_target22 = load i32, i32* %63
  %64 = bitcast %struct.lua_TValue* %R13190 to i32*
  %65 = bitcast i32* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i32*
  store i32 %load_target22, i32* %67
  %R13242 = icmp slt i32 %ARG2, -10002
  %R1324223 = zext i1 %R13242 to i32
  %cond24 = icmp ne i32 %R1324223, 0
  br i1 %cond24, label %L2305, label %L2309

L2305:                                            ; preds = %L2304
  %68 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %69 = bitcast %struct.lua_TValue** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to %struct.lua_TValue**
  %load_target25 = load %struct.lua_TValue*, %struct.lua_TValue** %71
  %72 = bitcast %struct.lua_TValue* %load_target25 to i32*
  %73 = bitcast i32* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 -8
  %75 = bitcast i8* %74 to i32*
  %load_target26 = load i32, i32* %75
  %R13247 = icmp sge i32 %load_target26, 4
  %R1324727 = zext i1 %R13247 to i32
  %cond28 = icmp ne i32 %R1324727, 0
  br i1 %cond28, label %L2306, label %L2309

L2306:                                            ; preds = %L2305
  %76 = bitcast %struct.lua_TValue* %load_target25 to { [184 x i8] }**
  %77 = bitcast { [184 x i8] }** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 -16
  %79 = bitcast i8* %78 to { [184 x i8] }**
  %load_target29 = load { [184 x i8] }*, { [184 x i8] }** %79
  %80 = bitcast { [184 x i8] }* %load_target29 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 9
  %load_target30 = load i8, i8* %81
  %R13253 = zext i8 %load_target30 to i32
  %R13254 = and i32 %R13253, 3
  %cond31 = icmp ne i32 %R13254, 0
  br i1 %cond31, label %L2307, label %L2309

L2307:                                            ; preds = %L2306
  %82 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %83 = bitcast %struct.CallInfo** %82 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 40
  %85 = bitcast i8* %84 to %struct.CallInfo**
  %load_target32 = load %struct.CallInfo*, %struct.CallInfo** %85
  %86 = bitcast %struct.CallInfo* %load_target32 to %struct.lua_TValue**
  %87 = bitcast %struct.lua_TValue** %86 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = bitcast i8* %88 to %struct.lua_TValue**
  %load_target33 = load %struct.lua_TValue*, %struct.lua_TValue** %89
  %90 = bitcast %struct.lua_TValue* %load_target33 to { [184 x i8] }**
  %91 = bitcast { [184 x i8] }** %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 0
  %93 = bitcast i8* %92 to { [184 x i8] }**
  %load_target34 = load { [184 x i8] }*, { [184 x i8] }** %93
  %94 = bitcast { [184 x i8] }* %load_target34 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 9
  %load_target35 = load i8, i8* %95
  %R13262 = zext i8 %load_target35 to i32
  %R13263 = and i32 %R13262, 4
  %cond36 = icmp ne i32 %R13263, 0
  br i1 %cond36, label %L2308, label %L2309

L2308:                                            ; preds = %L2307
  call void @luaC_barrierf(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target34, { [184 x i8] }* %load_target29)
  br label %L2309

L2309:                                            ; preds = %L2308, %L2307, %L2306, %L2305, %L2304, %L2303, %L2302, %L2301, %L2300
  %96 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %97 = bitcast %struct.lua_TValue** %96 to i8*
  %98 = getelementptr inbounds i8, i8* %97, i64 16
  %99 = bitcast i8* %98 to %struct.lua_TValue**
  %load_target37 = load %struct.lua_TValue*, %struct.lua_TValue** %99
  %100 = bitcast %struct.lua_TValue* %load_target37 to i8*
  %101 = getelementptr inbounds i8, i8* %100, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %102 = bitcast i8* %101 to %struct.lua_TValue*
  %103 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %104 = bitcast %struct.lua_TValue** %103 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 16
  %106 = bitcast i8* %105 to %struct.lua_TValue**
  store %struct.lua_TValue* %102, %struct.lua_TValue** %106
  ret void
}

define internal void @lua_pushvalue(%struct.lua_State* %ARG1, i32 %ARG2) {
L2310:
  %R13280 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %R13280 to { [8 x i8] }*
  %5 = bitcast { [8 x i8] }* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to { [8 x i8] }*
  %load_target1 = load { [8 x i8] }, { [8 x i8] }* %7
  %8 = bitcast %struct.lua_TValue* %load_target to { [8 x i8] }*
  %9 = bitcast { [8 x i8] }* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [8 x i8] }*
  store { [8 x i8] } %load_target1, { [8 x i8] }* %11
  %12 = bitcast %struct.lua_TValue* %R13280 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target2 = load i32, i32* %15
  %16 = bitcast %struct.lua_TValue* %load_target to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %load_target2, i32* %19
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %24 = bitcast %struct.lua_TValue* %load_target3 to i8*
  %25 = getelementptr inbounds i8, i8* %24, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %26 = bitcast i8* %25 to %struct.lua_TValue*
  %27 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %28 = bitcast %struct.lua_TValue** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to %struct.lua_TValue**
  store %struct.lua_TValue* %26, %struct.lua_TValue** %30
  ret void
}

define internal i32 @lua_type(%struct.lua_State* %ARG1, i32 %ARG2) {
L2311:
  %0 = alloca i32
  %R13296 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %R13299 = icmp eq %struct.lua_TValue* %R13296, @luaO_nilobject_.3
  %R132991 = zext i1 %R13299 to i32
  %cond = icmp ne i32 %R132991, 0
  br i1 %cond, label %L2312, label %L2313

L2312:                                            ; preds = %L2311
  store i32 -1, i32* %0
  br label %L2314

L2313:                                            ; preds = %L2311
  %1 = bitcast %struct.lua_TValue* %R13296 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  store i32 %load_target, i32* %0
  br label %L2314

L2314:                                            ; preds = %L2313, %L2312
  %5 = load i32, i32* %0
  ret i32 %5
}

define internal i8* @lua_typename(%struct.lua_State* %ARG1, i32 %ARG2) {
L2315:
  %0 = alloca i8*
  %R13306 = icmp eq i32 %ARG2, -1
  %R133061 = zext i1 %R13306 to i32
  %cond = icmp ne i32 %R133061, 0
  br i1 %cond, label %L2316, label %L2317

L2316:                                            ; preds = %L2315
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i64 0, i64 0), i8** %0
  br label %L2318

L2317:                                            ; preds = %L2315
  %R13311 = sext i32 %ARG2 to i64
  %R13312 = mul i64 %R13311, 8
  %1 = getelementptr inbounds i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 %R13312
  %2 = bitcast i8* %1 to i8**
  %3 = bitcast i8** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i8**
  %load_target = load i8*, i8** %5
  store i8* %load_target, i8** %0
  br label %L2318

L2318:                                            ; preds = %L2317, %L2316
  %6 = load i8*, i8** %0
  ret i8* %6
}

define internal i32 @lua_iscfunction(%struct.lua_State* %ARG1, i32 %ARG2) {
L2319:
  %0 = alloca i32
  %R13320 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %1 = bitcast %struct.lua_TValue* %R13320 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R13323 = icmp eq i32 %load_target, 6
  %R133231 = zext i1 %R13323 to i32
  %cond = icmp ne i32 %R133231, 0
  br i1 %cond, label %L2320, label %L2321

L2320:                                            ; preds = %L2319
  %5 = bitcast %struct.lua_TValue* %R13320 to { [184 x i8] }**
  %6 = bitcast { [184 x i8] }** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %8
  %9 = bitcast { [184 x i8] }* %load_target2 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 10
  %load_target3 = load i8, i8* %10
  store i8 %load_target3, i32* %0
  br label %L2322

L2321:                                            ; preds = %L2319
  store i32 0, i32* %0
  br label %L2322

L2322:                                            ; preds = %L2321, %L2320
  %11 = load i32, i32* %0
  ret i32 %11
}

define internal i32 @lua_isnumber(%struct.lua_State* %ARG1, i32 %ARG2) {
L2323:
  %n_0x62d000dcca28 = alloca %struct.lua_TValue
  %0 = alloca i32
  %R13331 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %1 = bitcast %struct.lua_TValue* %R13331 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R13335 = icmp eq i32 %load_target, 3
  %R133351 = zext i1 %R13335 to i32
  %cond = icmp ne i32 %R133351, 0
  br i1 %cond, label %L2324, label %L2325

L2324:                                            ; preds = %L2323
  store i32 1, i32* %0
  br label %L2326

L2325:                                            ; preds = %L2323
  %R13338 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %R13331, %struct.lua_TValue* %n_0x62d000dcca28)
  %R13339 = icmp ne %struct.lua_TValue* %R13338, null
  %R133392 = zext i1 %R13339 to i32
  store i32 %R133392, i32* %0
  br label %L2326

L2326:                                            ; preds = %L2325, %L2324
  %5 = load i32, i32* %0
  ret i32 %5
}

define internal i32 @lua_isstring(%struct.lua_State* %ARG1, i32 %ARG2) {
L2327:
  %R13344 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %ARG2)
  %R13346 = icmp eq i32 %R13344, 4
  %R133461 = zext i1 %R13346 to i32
  %R13348 = icmp eq i32 %R13344, 3
  %R133482 = zext i1 %R13348 to i32
  %0 = icmp ne i32 %R133461, 0
  %1 = icmp ne i32 %R133482, 0
  %R13349 = or i1 %0, %1
  %R133493 = zext i1 %R13349 to i32
  ret i32 %R133493
}

define internal i32 @lua_rawequal(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2328:
  %0 = alloca i32
  %R13353 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %R13356 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG3)
  %R13359 = icmp eq %struct.lua_TValue* %R13353, @luaO_nilobject_.3
  %R133591 = zext i1 %R13359 to i32
  %R13362 = icmp eq %struct.lua_TValue* %R13356, @luaO_nilobject_.3
  %R133622 = zext i1 %R13362 to i32
  %1 = icmp ne i32 %R133591, 0
  %2 = icmp ne i32 %R133622, 0
  %R13363 = or i1 %1, %2
  %R133633 = zext i1 %R13363 to i32
  %cond = icmp ne i32 %R133633, 0
  br i1 %cond, label %L2329, label %L2330

L2329:                                            ; preds = %L2328
  store i32 0, i32* %0
  br label %L2331

L2330:                                            ; preds = %L2328
  %R13366 = call i32 @luaO_rawequalObj(%struct.lua_TValue* %R13353, %struct.lua_TValue* %R13356)
  store i32 %R13366, i32* %0
  br label %L2331

L2331:                                            ; preds = %L2330, %L2329
  %3 = load i32, i32* %0
  ret i32 %3
}

define internal i32 @lua_lessthan(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2332:
  %0 = alloca i32
  %R13371 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %R13374 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG3)
  %R13377 = icmp eq %struct.lua_TValue* %R13371, @luaO_nilobject_.3
  %R133771 = zext i1 %R13377 to i32
  %R13380 = icmp eq %struct.lua_TValue* %R13374, @luaO_nilobject_.3
  %R133802 = zext i1 %R13380 to i32
  %1 = icmp ne i32 %R133771, 0
  %2 = icmp ne i32 %R133802, 0
  %R13381 = or i1 %1, %2
  %R133813 = zext i1 %R13381 to i32
  %cond = icmp ne i32 %R133813, 0
  br i1 %cond, label %L2333, label %L2334

L2333:                                            ; preds = %L2332
  store i32 0, i32* %0
  br label %L2335

L2334:                                            ; preds = %L2332
  %R13385 = call i32 @luaV_lessthan(%struct.lua_State* %ARG1, %struct.lua_TValue* %R13371, %struct.lua_TValue* %R13374)
  store i32 %R13385, i32* %0
  br label %L2335

L2335:                                            ; preds = %L2334, %L2333
  %3 = load i32, i32* %0
  ret i32 %3
}

define internal double @lua_tonumber(%struct.lua_State* %ARG1, i32 %ARG2) {
L2336:
  %n_0x62d000dcebb0 = alloca %struct.lua_TValue
  %0 = alloca %struct.lua_TValue*
  %1 = alloca double
  %R13391 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %2 = bitcast %struct.lua_TValue* %R13391 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %R13395 = icmp eq i32 %load_target, 3
  %R133951 = zext i1 %R13395 to i32
  store %struct.lua_TValue* %R13391, %struct.lua_TValue** %0
  %cond = icmp ne i32 %R133951, 0
  br i1 %cond, label %L2338, label %L2337

L2337:                                            ; preds = %L2336
  %R13398 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %R13391, %struct.lua_TValue* %n_0x62d000dcebb0)
  store %struct.lua_TValue* %R13398, %struct.lua_TValue** %0
  %cond2 = icmp ne %struct.lua_TValue* %R13398, null
  br i1 %cond2, label %L2338, label %L2339

L2338:                                            ; preds = %L2337, %L2336
  %6 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %7 = bitcast %struct.lua_TValue* %6 to double*
  %8 = bitcast double* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to double*
  %load_target3 = load double, double* %10
  store double %load_target3, double* %1
  br label %L2340

L2339:                                            ; preds = %L2337
  store double 0.000000e+00, double* %1
  br label %L2340

L2340:                                            ; preds = %L2339, %L2338
  %11 = load double, double* %1
  ret double %11
}

define internal i64 @lua_tointeger(%struct.lua_State* %ARG1, i32 %ARG2) {
L2341:
  %n_0x62d000dcf5a8 = alloca %struct.lua_TValue
  %0 = alloca %struct.lua_TValue*
  %1 = alloca i64
  %R13407 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %2 = bitcast %struct.lua_TValue* %R13407 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %R13411 = icmp eq i32 %load_target, 3
  %R134111 = zext i1 %R13411 to i32
  store %struct.lua_TValue* %R13407, %struct.lua_TValue** %0
  %cond = icmp ne i32 %R134111, 0
  br i1 %cond, label %L2343, label %L2342

L2342:                                            ; preds = %L2341
  %R13414 = call %struct.lua_TValue* @luaV_tonumber(%struct.lua_TValue* %R13407, %struct.lua_TValue* %n_0x62d000dcf5a8)
  store %struct.lua_TValue* %R13414, %struct.lua_TValue** %0
  %cond2 = icmp ne %struct.lua_TValue* %R13414, null
  br i1 %cond2, label %L2343, label %L2344

L2343:                                            ; preds = %L2342, %L2341
  %6 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %7 = bitcast %struct.lua_TValue* %6 to double*
  %8 = bitcast double* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to double*
  %load_target3 = load double, double* %10
  store double %load_target3, i64* %1
  br label %L2345

L2344:                                            ; preds = %L2342
  store i64 0, i64* %1
  br label %L2345

L2345:                                            ; preds = %L2344, %L2343
  %11 = load i64, i64* %1
  ret i64 %11
}

define internal i32 @lua_toboolean(%struct.lua_State* %ARG1, i32 %ARG2) {
L2346:
  %0 = alloca i32
  %1 = alloca i32
  %R13425 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %2 = bitcast %struct.lua_TValue* %R13425 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L2348, label %L2347

L2347:                                            ; preds = %L2346
  store i32 1, i32* %1
  br label %L2352

L2348:                                            ; preds = %L2346
  %R13433 = icmp eq i32 %load_target, 1
  %R134331 = zext i1 %R13433 to i32
  %cond2 = icmp ne i32 %R134331, 0
  br i1 %cond2, label %L2349, label %L2350

L2349:                                            ; preds = %L2348
  %6 = bitcast %struct.lua_TValue* %R13425 to i32*
  %7 = bitcast i32* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i32*
  %load_target3 = load i32, i32* %9
  %R13437 = icmp eq i32 %load_target3, 0
  %R134374 = zext i1 %R13437 to i32
  store i32 %R134374, i32* %0
  br label %L2351

L2350:                                            ; preds = %L2348
  store i32 0, i32* %0
  br label %L2351

L2351:                                            ; preds = %L2350, %L2349
  %10 = load i32, i32* %0
  store i32 %10, i32* %1
  br label %L2352

L2352:                                            ; preds = %L2351, %L2347
  %11 = load i32, i32* %1
  %R13440 = icmp eq i32 %11, 0
  %R134405 = zext i1 %R13440 to i32
  ret i32 %R134405
}

define internal i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 %ARG2, i64* %ARG3) {
L2353:
  %0 = alloca %struct.lua_TValue*
  %1 = alloca %struct.lua_TValue*
  %2 = alloca i8*
  %R13444 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %3 = bitcast %struct.lua_TValue* %R13444 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %R13447 = icmp eq i32 %load_target, 4
  %R134471 = zext i1 %R13447 to i32
  store %struct.lua_TValue* %R13444, %struct.lua_TValue** %1
  store %struct.lua_TValue* %R13444, %struct.lua_TValue** %0
  %cond = icmp ne i32 %R134471, 0
  br i1 %cond, label %L2361, label %L2354

L2354:                                            ; preds = %L2353
  %R13450 = call i32 @luaV_tostring(%struct.lua_State* %ARG1, %struct.lua_TValue* %R13444)
  %cond2 = icmp ne i32 %R13450, 0
  br i1 %cond2, label %L2358, label %L2355

L2355:                                            ; preds = %L2354
  %cond3 = icmp ne i64* %ARG3, null
  br i1 %cond3, label %L2356, label %L2357

L2356:                                            ; preds = %L2355
  %7 = bitcast i64* %ARG3 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i64*
  store i64 0, i64* %9
  br label %L2357

L2357:                                            ; preds = %L2356, %L2355
  store i8* null, i8** %2
  br label %L2364

L2358:                                            ; preds = %L2354
  %10 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %11 = bitcast %struct.global_State** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast i8* %12 to %struct.global_State**
  %load_target4 = load %struct.global_State*, %struct.global_State** %13
  %14 = bitcast %struct.global_State* %load_target4 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 120
  %17 = bitcast i8* %16 to i64*
  %load_target5 = load i64, i64* %17
  %18 = bitcast %struct.global_State* %load_target4 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  %21 = bitcast i8* %20 to i64*
  %load_target6 = load i64, i64* %21
  %R13461 = icmp uge i64 %load_target5, %load_target6
  %R134617 = zext i1 %R13461 to i32
  %cond8 = icmp ne i32 %R134617, 0
  br i1 %cond8, label %L2359, label %L2360

L2359:                                            ; preds = %L2358
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2360

L2360:                                            ; preds = %L2359, %L2358
  %R13465 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  store %struct.lua_TValue* %R13465, %struct.lua_TValue** %1
  store %struct.lua_TValue* %R13465, %struct.lua_TValue** %0
  br label %L2361

L2361:                                            ; preds = %L2360, %L2353
  %cond9 = icmp ne i64* %ARG3, null
  br i1 %cond9, label %L2362, label %L2363

L2362:                                            ; preds = %L2361
  %22 = load %struct.lua_TValue*, %struct.lua_TValue** %0
  %23 = bitcast %struct.lua_TValue* %22 to { [184 x i8] }**
  %24 = bitcast { [184 x i8] }** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %26
  %27 = bitcast { [184 x i8] }* %load_target10 to i64*
  %28 = bitcast i64* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to i64*
  %load_target11 = load i64, i64* %30
  %31 = bitcast i64* %ARG3 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i64*
  store i64 %load_target11, i64* %33
  store %struct.lua_TValue* %22, %struct.lua_TValue** %1
  br label %L2363

L2363:                                            ; preds = %L2362, %L2361
  %34 = load %struct.lua_TValue*, %struct.lua_TValue** %1
  %35 = bitcast %struct.lua_TValue* %34 to { [184 x i8] }**
  %36 = bitcast { [184 x i8] }** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to { [184 x i8] }**
  %load_target12 = load { [184 x i8] }*, { [184 x i8] }** %38
  %39 = bitcast { [184 x i8] }* %load_target12 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 24
  %41 = bitcast i8* %40 to { [184 x i8] }*
  %R13476 = bitcast { [184 x i8] }* %41 to i8*
  store i8* %R13476, i8** %2
  br label %L2364

L2364:                                            ; preds = %L2363, %L2357
  %42 = load i8*, i8** %2
  ret i8* %42
}

define internal i64 @lua_objlen(%struct.lua_State* %ARG1, i32 %ARG2) {
L2365:
  %0 = alloca i64
  %1 = alloca i64
  %R13479 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %2 = bitcast %struct.lua_TValue* %R13479 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  switch i32 %load_target, label %L2373 [
    i32 3, label %L2369
    i32 4, label %L2366
    i32 5, label %L2368
    i32 7, label %L2367
  ]

L2366:                                            ; preds = %L2365
  %6 = bitcast %struct.lua_TValue* %R13479 to { [184 x i8] }**
  %7 = bitcast { [184 x i8] }** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %9
  %10 = bitcast { [184 x i8] }* %load_target1 to i64*
  %11 = bitcast i64* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  %13 = bitcast i8* %12 to i64*
  %load_target2 = load i64, i64* %13
  store i64 %load_target2, i64* %1
  br label %L2374

L2367:                                            ; preds = %L2365
  %14 = bitcast %struct.lua_TValue* %R13479 to { [184 x i8] }**
  %15 = bitcast { [184 x i8] }** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %17
  %18 = bitcast { [184 x i8] }* %load_target3 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 32
  %21 = bitcast i8* %20 to i64*
  %load_target4 = load i64, i64* %21
  store i64 %load_target4, i64* %1
  br label %L2374

L2368:                                            ; preds = %L2365
  %22 = bitcast %struct.lua_TValue* %R13479 to { [184 x i8] }**
  %23 = bitcast { [184 x i8] }** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = bitcast i8* %24 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %25
  %R13492 = call i32 @luaH_getn({ [184 x i8] }* %load_target5)
  %R13493 = sext i32 %R13492 to i64
  store i64 %R13493, i64* %1
  br label %L2374

L2369:                                            ; preds = %L2365
  %R13496 = call i32 @luaV_tostring(%struct.lua_State* %ARG1, %struct.lua_TValue* %R13479)
  %cond = icmp ne i32 %R13496, 0
  br i1 %cond, label %L2370, label %L2371

L2370:                                            ; preds = %L2369
  %26 = bitcast %struct.lua_TValue* %R13479 to { [184 x i8] }**
  %27 = bitcast { [184 x i8] }** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to { [184 x i8] }**
  %load_target6 = load { [184 x i8] }*, { [184 x i8] }** %29
  %30 = bitcast { [184 x i8] }* %load_target6 to i64*
  %31 = bitcast i64* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  %33 = bitcast i8* %32 to i64*
  %load_target7 = load i64, i64* %33
  store i64 %load_target7, i64* %0
  br label %L2372

L2371:                                            ; preds = %L2369
  store i64 0, i64* %0
  br label %L2372

L2372:                                            ; preds = %L2371, %L2370
  %34 = load i64, i64* %0
  store i64 %34, i64* %1
  br label %L2374

L2373:                                            ; preds = %L2365
  store i64 0, i64* %1
  br label %L2374

L2374:                                            ; preds = %L2373, %L2372, %L2368, %L2367, %L2366
  %35 = load i64, i64* %1
  ret i64 %35
}

define internal i32 (%struct.lua_State*)* @lua_tocfunction(%struct.lua_State* %ARG1, i32 %ARG2) {
L2375:
  %0 = alloca i32 (%struct.lua_State*)*
  %R13504 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %1 = bitcast %struct.lua_TValue* %R13504 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R13507 = icmp eq i32 %load_target, 6
  %R135071 = zext i1 %R13507 to i32
  %cond = icmp ne i32 %R135071, 0
  br i1 %cond, label %L2376, label %L2377

L2376:                                            ; preds = %L2375
  %5 = bitcast %struct.lua_TValue* %R13504 to { [184 x i8] }**
  %6 = bitcast { [184 x i8] }** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %8
  %9 = bitcast { [184 x i8] }* %load_target2 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 10
  %load_target3 = load i8, i8* %10
  %cond4 = icmp ne i8 %load_target3, 0
  br i1 %cond4, label %L2378, label %L2377

L2377:                                            ; preds = %L2376, %L2375
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %0
  br label %L2379

L2378:                                            ; preds = %L2376
  %11 = bitcast { [184 x i8] }* %load_target2 to i32 (%struct.lua_State*)**
  %12 = bitcast i32 (%struct.lua_State*)** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast i8* %13 to i32 (%struct.lua_State*)**
  %load_target5 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %14
  store i32 (%struct.lua_State*)* %load_target5, i32 (%struct.lua_State*)** %0
  br label %L2379

L2379:                                            ; preds = %L2378, %L2377
  %15 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %0
  ret i32 (%struct.lua_State*)* %15
}

define internal i8* @lua_touserdata(%struct.lua_State* %ARG1, i32 %ARG2) {
L2380:
  %0 = alloca i8*
  %R13518 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %1 = bitcast %struct.lua_TValue* %R13518 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  switch i32 %load_target, label %L2383 [
    i32 2, label %L2382
    i32 7, label %L2381
  ]

L2381:                                            ; preds = %L2380
  %5 = bitcast %struct.lua_TValue* %R13518 to { [184 x i8] }**
  %6 = bitcast { [184 x i8] }** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %8
  %9 = bitcast { [184 x i8] }* %load_target1 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to { [184 x i8] }*
  %R13525 = bitcast { [184 x i8] }* %11 to i8*
  store i8* %R13525, i8** %0
  br label %L2384

L2382:                                            ; preds = %L2380
  %12 = bitcast %struct.lua_TValue* %R13518 to i8**
  %13 = bitcast i8** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i8**
  %load_target2 = load i8*, i8** %15
  store i8* %load_target2, i8** %0
  br label %L2384

L2383:                                            ; preds = %L2380
  store i8* null, i8** %0
  br label %L2384

L2384:                                            ; preds = %L2383, %L2382, %L2381
  %16 = load i8*, i8** %0
  ret i8* %16
}

define internal void @lua_pushnil(%struct.lua_State* %ARG1) {
L2385:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %12 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %14 = bitcast i8* %13 to %struct.lua_TValue*
  %15 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %16 = bitcast %struct.lua_TValue** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to %struct.lua_TValue**
  store %struct.lua_TValue* %14, %struct.lua_TValue** %18
  ret void
}

define internal void @lua_pushnumber(%struct.lua_State* %ARG1, double %ARG2) {
L2386:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %load_target to double*
  %5 = bitcast double* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to double*
  store double %ARG2, double* %7
  %8 = bitcast %struct.lua_TValue* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 3, i32* %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %17 = getelementptr inbounds i8, i8* %16, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %18 = bitcast i8* %17 to %struct.lua_TValue*
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %20 = bitcast %struct.lua_TValue** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 16
  %22 = bitcast i8* %21 to %struct.lua_TValue**
  store %struct.lua_TValue* %18, %struct.lua_TValue** %22
  ret void
}

define internal void @lua_pushinteger(%struct.lua_State* %ARG1, i64 %ARG2) {
L2387:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %R13547 = sitofp i64 %ARG2 to double
  %4 = bitcast %struct.lua_TValue* %load_target to double*
  %5 = bitcast double* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to double*
  store double %R13547, double* %7
  %8 = bitcast %struct.lua_TValue* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 3, i32* %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %17 = getelementptr inbounds i8, i8* %16, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %18 = bitcast i8* %17 to %struct.lua_TValue*
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %20 = bitcast %struct.lua_TValue** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 16
  %22 = bitcast i8* %21 to %struct.lua_TValue**
  store %struct.lua_TValue* %18, %struct.lua_TValue** %22
  ret void
}

define internal void @lua_pushlstring(%struct.lua_State* %ARG1, i8* %ARG2, i64 %ARG3) {
L2388:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i64*
  %5 = bitcast i64* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 120
  %7 = bitcast i8* %6 to i64*
  %load_target1 = load i64, i64* %7
  %8 = bitcast %struct.global_State* %load_target to i64*
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 112
  %11 = bitcast i8* %10 to i64*
  %load_target2 = load i64, i64* %11
  %R13560 = icmp uge i64 %load_target1, %load_target2
  %R135603 = zext i1 %R13560 to i32
  %cond = icmp ne i32 %R135603, 0
  br i1 %cond, label %L2389, label %L2390

L2389:                                            ; preds = %L2388
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2390

L2390:                                            ; preds = %L2389, %L2388
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R13567 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %ARG2, i64 %ARG3)
  %R13568 = bitcast { [24 x i8] }* %R13567 to { [184 x i8] }*
  %16 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %R13568, { [184 x i8] }** %19
  %20 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 4, i32* %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %29 = getelementptr inbounds i8, i8* %28, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %30 = bitcast i8* %29 to %struct.lua_TValue*
  %31 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %32 = bitcast %struct.lua_TValue** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  %34 = bitcast i8* %33 to %struct.lua_TValue**
  store %struct.lua_TValue* %30, %struct.lua_TValue** %34
  ret void
}

define internal void @lua_pushstring(%struct.lua_State* %ARG1, i8* %ARG2) {
L2391:
  %cond = icmp ne i8* %ARG2, null
  br i1 %cond, label %L2393, label %L2392

L2392:                                            ; preds = %L2391
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  br label %L2394

L2393:                                            ; preds = %L2391
  %R13581 = call i64 @strlen(i8* %ARG2)
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* %ARG2, i64 %R13581)
  br label %L2394

L2394:                                            ; preds = %L2393, %L2392
  ret void
}

define internal i8* @lua_pushvfstring(%struct.lua_State* %ARG1, i8* %ARG2, i8* %ARG3) {
L2395:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i64*
  %5 = bitcast i64* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 120
  %7 = bitcast i8* %6 to i64*
  %load_target1 = load i64, i64* %7
  %8 = bitcast %struct.global_State* %load_target to i64*
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 112
  %11 = bitcast i8* %10 to i64*
  %load_target2 = load i64, i64* %11
  %R13588 = icmp uge i64 %load_target1, %load_target2
  %R135883 = zext i1 %R13588 to i32
  %cond = icmp ne i32 %R135883, 0
  br i1 %cond, label %L2396, label %L2397

L2396:                                            ; preds = %L2395
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2397

L2397:                                            ; preds = %L2396, %L2395
  %R13593 = call i8* @luaO_pushvfstring(%struct.lua_State* %ARG1, i8* %ARG2, i8* %ARG3)
  ret i8* %R13593
}

define internal i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* %ARG2) {
L2398:
  %fmt_0x62d000de33d8 = alloca i8*
  %0 = bitcast i8** %fmt_0x62d000de33d8 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i8**
  store i8* %ARG2, i8** %2
  %3 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %4 = bitcast %struct.global_State** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = bitcast i8* %5 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %6
  %7 = bitcast %struct.global_State* %load_target to i64*
  %8 = bitcast i64* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 120
  %10 = bitcast i8* %9 to i64*
  %load_target1 = load i64, i64* %10
  %11 = bitcast %struct.global_State* %load_target to i64*
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 112
  %14 = bitcast i8* %13 to i64*
  %load_target2 = load i64, i64* %14
  %R13602 = icmp uge i64 %load_target1, %load_target2
  %R136023 = zext i1 %R13602 to i32
  %cond = icmp ne i32 %R136023, 0
  br i1 %cond, label %L2399, label %L2400

L2399:                                            ; preds = %L2398
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2400

L2400:                                            ; preds = %L2399, %L2398
  %R13605 = bitcast i8** %fmt_0x62d000de33d8 to i8*
  %15 = bitcast i8** %fmt_0x62d000de33d8 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i8**
  %load_target4 = load i8*, i8** %17
  %R13609 = call i8* @luaO_pushvfstring(%struct.lua_State* %ARG1, i8* %load_target4, i8* %R13605)
  ret i8* %R13609
}

define internal void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %ARG2, i32 %ARG3) {
L2401:
  %0 = alloca i32
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %2 = bitcast %struct.global_State** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %4
  %5 = bitcast %struct.global_State* %load_target to i64*
  %6 = bitcast i64* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 120
  %8 = bitcast i8* %7 to i64*
  %load_target1 = load i64, i64* %8
  %9 = bitcast %struct.global_State* %load_target to i64*
  %10 = bitcast i64* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 112
  %12 = bitcast i8* %11 to i64*
  %load_target2 = load i64, i64* %12
  %R13618 = icmp uge i64 %load_target1, %load_target2
  %R136183 = zext i1 %R13618 to i32
  %cond = icmp ne i32 %R136183, 0
  br i1 %cond, label %L2402, label %L2403

L2402:                                            ; preds = %L2401
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2403

L2403:                                            ; preds = %L2402, %L2401
  %R13624 = call %struct.Table* @getcurrenv(%struct.lua_State* %ARG1)
  %R13625 = call { [56 x i8] }* @luaF_newCclosure(%struct.lua_State* %ARG1, i32 %ARG3, %struct.Table* %R13624)
  %13 = bitcast { [56 x i8] }* %R13625 to i32 (%struct.lua_State*)**
  %14 = bitcast i32 (%struct.lua_State*)** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast i8* %15 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* %ARG2, i32 (%struct.lua_State*)** %16
  %R13629 = sext i32 %ARG3 to i64
  %R13630 = mul i64 %R13629, 16
  %17 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %18 = bitcast %struct.lua_TValue** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %20
  %R13633 = ptrtoint %struct.lua_TValue* %load_target4 to i64
  %R13634 = sub i64 %R13633, %R13630
  %R13635 = inttoptr i64 %R13634 to %struct.lua_TValue*
  %21 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %22 = bitcast %struct.lua_TValue** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 16
  %24 = bitcast i8* %23 to %struct.lua_TValue**
  store %struct.lua_TValue* %R13635, %struct.lua_TValue** %24
  store i32 %ARG3, i32* %0
  br label %L2404

L2404:                                            ; preds = %L2405, %L2403
  %25 = load i32, i32* %0
  %R13637 = add i32 %25, -1
  store i32 %R13637, i32* %0
  %cond5 = icmp ne i32 %25, 0
  br i1 %cond5, label %L2405, label %L2406

L2405:                                            ; preds = %L2404
  %26 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %27 = bitcast %struct.lua_TValue** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 16
  %29 = bitcast i8* %28 to %struct.lua_TValue**
  %load_target6 = load %struct.lua_TValue*, %struct.lua_TValue** %29
  %R13641 = sext i32 %R13637 to i64
  %R13642 = mul i64 %R13641, 16
  %30 = bitcast %struct.lua_TValue* %load_target6 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %R13642
  %32 = bitcast i8* %31 to %struct.lua_TValue*
  %33 = bitcast { [56 x i8] }* %R13625 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i32 40
  %35 = bitcast i8* %34 to { [56 x i8] }*
  %36 = bitcast { [56 x i8] }* %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 %R13642
  %38 = bitcast i8* %37 to { [56 x i8] }*
  %39 = bitcast %struct.lua_TValue* %32 to { [8 x i8] }*
  %40 = bitcast { [8 x i8] }* %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = bitcast i8* %41 to { [8 x i8] }*
  %load_target7 = load { [8 x i8] }, { [8 x i8] }* %42
  %43 = bitcast { [56 x i8] }* %38 to { [8 x i8] }*
  %44 = bitcast { [8 x i8] }* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to { [8 x i8] }*
  store { [8 x i8] } %load_target7, { [8 x i8] }* %46
  %47 = bitcast %struct.lua_TValue* %32 to i32*
  %48 = bitcast i32* %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  %50 = bitcast i8* %49 to i32*
  %load_target8 = load i32, i32* %50
  %51 = bitcast { [56 x i8] }* %38 to i32*
  %52 = bitcast i32* %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 %load_target8, i32* %54
  br label %L2404

L2406:                                            ; preds = %L2404
  %55 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %56 = bitcast %struct.lua_TValue** %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %58
  %R13661 = bitcast { [56 x i8] }* %R13625 to { [184 x i8] }*
  %59 = bitcast %struct.lua_TValue* %load_target9 to { [184 x i8] }**
  %60 = bitcast { [184 x i8] }** %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 0
  %62 = bitcast i8* %61 to { [184 x i8] }**
  store { [184 x i8] }* %R13661, { [184 x i8] }** %62
  %63 = bitcast %struct.lua_TValue* %load_target9 to i32*
  %64 = bitcast i32* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 8
  %66 = bitcast i8* %65 to i32*
  store i32 6, i32* %66
  %67 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %68 = bitcast %struct.lua_TValue** %67 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast i8* %69 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %70
  %71 = bitcast %struct.lua_TValue* %load_target10 to i8*
  %72 = getelementptr inbounds i8, i8* %71, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %73 = bitcast i8* %72 to %struct.lua_TValue*
  %74 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %75 = bitcast %struct.lua_TValue** %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 16
  %77 = bitcast i8* %76 to %struct.lua_TValue**
  store %struct.lua_TValue* %73, %struct.lua_TValue** %77
  ret void
}

define internal void @lua_pushboolean(%struct.lua_State* %ARG1, i32 %ARG2) {
L2407:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %R13671 = icmp ne i32 %ARG2, 0
  %R136711 = zext i1 %R13671 to i32
  %4 = bitcast %struct.lua_TValue* %load_target to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 %R136711, i32* %7
  %8 = bitcast %struct.lua_TValue* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %17 = getelementptr inbounds i8, i8* %16, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %18 = bitcast i8* %17 to %struct.lua_TValue*
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %20 = bitcast %struct.lua_TValue** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 16
  %22 = bitcast i8* %21 to %struct.lua_TValue**
  store %struct.lua_TValue* %18, %struct.lua_TValue** %22
  ret void
}

define internal i32 @lua_pushthread(%struct.lua_State* %ARG1) {
L2408:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %R13681 = bitcast %struct.lua_State* %ARG1 to { [184 x i8] }*
  %4 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to { [184 x i8] }**
  store { [184 x i8] }* %R13681, { [184 x i8] }** %7
  %8 = bitcast %struct.lua_TValue* %load_target to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 8, i32* %11
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %17 = getelementptr inbounds i8, i8* %16, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %18 = bitcast i8* %17 to %struct.lua_TValue*
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %20 = bitcast %struct.lua_TValue** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 16
  %22 = bitcast i8* %21 to %struct.lua_TValue**
  store %struct.lua_TValue* %18, %struct.lua_TValue** %22
  %23 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %24 = bitcast %struct.global_State** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 32
  %26 = bitcast i8* %25 to %struct.global_State**
  %load_target2 = load %struct.global_State*, %struct.global_State** %26
  %27 = bitcast %struct.global_State* %load_target2 to %struct.lua_State**
  %28 = bitcast %struct.lua_State** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 176
  %30 = bitcast i8* %29 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %30
  %R13692 = icmp eq %struct.lua_State* %load_target3, %ARG1
  %R136924 = zext i1 %R13692 to i32
  ret i32 %R136924
}

define internal void @lua_gettable(%struct.lua_State* %ARG1, i32 %ARG2) {
L2409:
  %R13696 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %load_target to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 -16
  %6 = bitcast i8* %5 to %struct.lua_TValue*
  call void @luaV_gettable(%struct.lua_State* %ARG1, %struct.lua_TValue* %R13696, %struct.lua_TValue* %6, %struct.lua_TValue* %6)
  ret void
}

define internal void @lua_getfield(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2410:
  %key_0x62d000df2fe0 = alloca %struct.lua_TValue
  %R13708 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %R13714 = call i64 @strlen(i8* %ARG3)
  %R13715 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %ARG3, i64 %R13714)
  %R13716 = bitcast { [24 x i8] }* %R13715 to { [184 x i8] }*
  %0 = bitcast %struct.lua_TValue* %key_0x62d000df2fe0 to { [184 x i8] }**
  %1 = bitcast { [184 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to { [184 x i8] }**
  store { [184 x i8] }* %R13716, { [184 x i8] }** %3
  %4 = bitcast %struct.lua_TValue* %key_0x62d000df2fe0 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 4, i32* %7
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %11
  call void @luaV_gettable(%struct.lua_State* %ARG1, %struct.lua_TValue* %R13708, %struct.lua_TValue* %key_0x62d000df2fe0, %struct.lua_TValue* %load_target)
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %17 = getelementptr inbounds i8, i8* %16, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %18 = bitcast i8* %17 to %struct.lua_TValue*
  %19 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %20 = bitcast %struct.lua_TValue** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 16
  %22 = bitcast i8* %21 to %struct.lua_TValue**
  store %struct.lua_TValue* %18, %struct.lua_TValue** %22
  ret void
}

define internal void @lua_rawget(%struct.lua_State* %ARG1, i32 %ARG2) {
L2411:
  %R13730 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_TValue* %R13730 to { [184 x i8] }**
  %1 = bitcast { [184 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to { [184 x i8] }**
  %load_target = load { [184 x i8] }*, { [184 x i8] }** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 -16
  %10 = bitcast i8* %9 to %struct.lua_TValue*
  %R13738 = call %struct.lua_TValue* @luaH_get({ [184 x i8] }* %load_target, %struct.lua_TValue* %10)
  %11 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %12 = bitcast %struct.lua_TValue** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %14
  %15 = bitcast %struct.lua_TValue* %R13738 to { [8 x i8] }*
  %16 = bitcast { [8 x i8] }* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = bitcast i8* %17 to { [8 x i8] }*
  %load_target3 = load { [8 x i8] }, { [8 x i8] }* %18
  %19 = bitcast %struct.lua_TValue* %load_target2 to { [8 x i8] }*
  %20 = bitcast { [8 x i8] }* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 -16
  %22 = bitcast i8* %21 to { [8 x i8] }*
  store { [8 x i8] } %load_target3, { [8 x i8] }* %22
  %23 = bitcast %struct.lua_TValue* %R13738 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i32*
  %load_target4 = load i32, i32* %26
  %27 = bitcast %struct.lua_TValue* %load_target2 to i32*
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 -8
  %30 = bitcast i8* %29 to i32*
  store i32 %load_target4, i32* %30
  ret void
}

define internal void @lua_rawgeti(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2412:
  %R13751 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_TValue* %R13751 to { [184 x i8] }**
  %1 = bitcast { [184 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to { [184 x i8] }**
  %load_target = load { [184 x i8] }*, { [184 x i8] }** %3
  %R13757 = call %struct.lua_TValue* @luaH_getnum({ [184 x i8] }* %load_target, i32 %ARG3)
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_TValue* %R13757 to { [8 x i8] }*
  %9 = bitcast { [8 x i8] }* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [8 x i8] }*
  %load_target2 = load { [8 x i8] }, { [8 x i8] }* %11
  %12 = bitcast %struct.lua_TValue* %load_target1 to { [8 x i8] }*
  %13 = bitcast { [8 x i8] }* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [8 x i8] }*
  store { [8 x i8] } %load_target2, { [8 x i8] }* %15
  %16 = bitcast %struct.lua_TValue* %R13757 to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  %load_target3 = load i32, i32* %19
  %20 = bitcast %struct.lua_TValue* %load_target1 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %load_target3, i32* %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %load_target4 to i8*
  %29 = getelementptr inbounds i8, i8* %28, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %30 = bitcast i8* %29 to %struct.lua_TValue*
  %31 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %32 = bitcast %struct.lua_TValue** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  %34 = bitcast i8* %33 to %struct.lua_TValue**
  store %struct.lua_TValue* %30, %struct.lua_TValue** %34
  ret void
}

define internal void @lua_createtable(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2413:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i64*
  %5 = bitcast i64* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 120
  %7 = bitcast i8* %6 to i64*
  %load_target1 = load i64, i64* %7
  %8 = bitcast %struct.global_State* %load_target to i64*
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 112
  %11 = bitcast i8* %10 to i64*
  %load_target2 = load i64, i64* %11
  %R13777 = icmp uge i64 %load_target1, %load_target2
  %R137773 = zext i1 %R13777 to i32
  %cond = icmp ne i32 %R137773, 0
  br i1 %cond, label %L2414, label %L2415

L2414:                                            ; preds = %L2413
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2415

L2415:                                            ; preds = %L2414, %L2413
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R13784 = call %struct.Table* @luaH_new(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3)
  %R13785 = bitcast %struct.Table* %R13784 to { [184 x i8] }*
  %16 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %R13785, { [184 x i8] }** %19
  %20 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 5, i32* %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %29 = getelementptr inbounds i8, i8* %28, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %30 = bitcast i8* %29 to %struct.lua_TValue*
  %31 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %32 = bitcast %struct.lua_TValue** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  %34 = bitcast i8* %33 to %struct.lua_TValue**
  store %struct.lua_TValue* %30, %struct.lua_TValue** %34
  ret void
}

define internal i32 @lua_getmetatable(%struct.lua_State* %ARG1, i32 %ARG2) {
L2416:
  %0 = alloca %struct.Table*
  %R13794 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %1 = bitcast %struct.lua_TValue* %R13794 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  switch i32 %load_target, label %L2419 [
    i32 5, label %L2417
    i32 7, label %L2418
  ]

L2417:                                            ; preds = %L2416
  %5 = bitcast %struct.lua_TValue* %R13794 to { [184 x i8] }**
  %6 = bitcast { [184 x i8] }** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %8
  %9 = bitcast { [184 x i8] }* %load_target1 to %struct.Table**
  %10 = bitcast %struct.Table** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 16
  %12 = bitcast i8* %11 to %struct.Table**
  %load_target2 = load %struct.Table*, %struct.Table** %12
  store %struct.Table* %load_target2, %struct.Table** %0
  br label %L2420

L2418:                                            ; preds = %L2416
  %13 = bitcast %struct.lua_TValue* %R13794 to { [184 x i8] }**
  %14 = bitcast { [184 x i8] }** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %16
  %17 = bitcast { [184 x i8] }* %load_target3 to %struct.Table**
  %18 = bitcast %struct.Table** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to %struct.Table**
  %load_target4 = load %struct.Table*, %struct.Table** %20
  store %struct.Table* %load_target4, %struct.Table** %0
  br label %L2420

L2419:                                            ; preds = %L2416
  %21 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %22 = bitcast %struct.global_State** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 32
  %24 = bitcast i8* %23 to %struct.global_State**
  %load_target5 = load %struct.global_State*, %struct.global_State** %24
  %25 = bitcast %struct.global_State* %load_target5 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i32 224
  %27 = bitcast i8* %26 to %struct.global_State*
  %R13808 = sext i32 %load_target to i64
  %R13809 = mul i64 %R13808, 8
  %28 = bitcast %struct.global_State* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %R13809
  %30 = bitcast i8* %29 to %struct.global_State*
  %31 = bitcast %struct.global_State* %30 to %struct.Table**
  %32 = bitcast %struct.Table** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 0
  %34 = bitcast i8* %33 to %struct.Table**
  %load_target6 = load %struct.Table*, %struct.Table** %34
  store %struct.Table* %load_target6, %struct.Table** %0
  br label %L2420

L2420:                                            ; preds = %L2419, %L2418, %L2417
  %35 = load %struct.Table*, %struct.Table** %0
  %R13824 = icmp ne %struct.Table* %35, null
  %R138247 = zext i1 %R13824 to i32
  %cond = icmp ne %struct.Table* %35, null
  br i1 %cond, label %L2421, label %L2422

L2421:                                            ; preds = %L2420
  %36 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %37 = bitcast %struct.lua_TValue** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 16
  %39 = bitcast i8* %38 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %39
  %R13817 = bitcast %struct.Table* %35 to { [184 x i8] }*
  %40 = bitcast %struct.lua_TValue* %load_target8 to { [184 x i8] }**
  %41 = bitcast { [184 x i8] }** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to { [184 x i8] }**
  store { [184 x i8] }* %R13817, { [184 x i8] }** %43
  %44 = bitcast %struct.lua_TValue* %load_target8 to i32*
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 5, i32* %47
  %48 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %49 = bitcast %struct.lua_TValue** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 16
  %51 = bitcast i8* %50 to %struct.lua_TValue**
  %load_target9 = load %struct.lua_TValue*, %struct.lua_TValue** %51
  %52 = bitcast %struct.lua_TValue* %load_target9 to i8*
  %53 = getelementptr inbounds i8, i8* %52, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %54 = bitcast i8* %53 to %struct.lua_TValue*
  %55 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %56 = bitcast %struct.lua_TValue** %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to %struct.lua_TValue**
  store %struct.lua_TValue* %54, %struct.lua_TValue** %58
  br label %L2422

L2422:                                            ; preds = %L2421, %L2420
  ret i32 %R138247
}

define internal void @lua_getfenv(%struct.lua_State* %ARG1, i32 %ARG2) {
L2423:
  %R13828 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_TValue* %R13828 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L2427 [
    i32 6, label %L2424
    i32 7, label %L2425
    i32 8, label %L2426
  ]

L2424:                                            ; preds = %L2423
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_TValue* %R13828 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %11
  %12 = bitcast { [184 x i8] }* %load_target2 to %struct.Table**
  %13 = bitcast %struct.Table** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to %struct.Table**
  %load_target3 = load %struct.Table*, %struct.Table** %15
  %R13837 = bitcast %struct.Table* %load_target3 to { [184 x i8] }*
  %16 = bitcast %struct.lua_TValue* %load_target1 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %R13837, { [184 x i8] }** %19
  %20 = bitcast %struct.lua_TValue* %load_target1 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 5, i32* %23
  br label %L2428

L2425:                                            ; preds = %L2423
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %R13828 to { [184 x i8] }**
  %29 = bitcast { [184 x i8] }** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %31
  %32 = bitcast { [184 x i8] }* %load_target5 to %struct.Table**
  %33 = bitcast %struct.Table** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 24
  %35 = bitcast i8* %34 to %struct.Table**
  %load_target6 = load %struct.Table*, %struct.Table** %35
  %R13845 = bitcast %struct.Table* %load_target6 to { [184 x i8] }*
  %36 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %37 = bitcast { [184 x i8] }** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  %39 = bitcast i8* %38 to { [184 x i8] }**
  store { [184 x i8] }* %R13845, { [184 x i8] }** %39
  %40 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 5, i32* %43
  br label %L2428

L2426:                                            ; preds = %L2423
  %44 = bitcast %struct.lua_TValue* %R13828 to { [184 x i8] }**
  %45 = bitcast { [184 x i8] }** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to { [184 x i8] }**
  %load_target7 = load { [184 x i8] }*, { [184 x i8] }** %47
  %48 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %49 = bitcast %struct.lua_TValue** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 16
  %51 = bitcast i8* %50 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %51
  %52 = bitcast { [184 x i8] }* %load_target7 to { [8 x i8] }*
  %53 = bitcast { [8 x i8] }* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 120
  %55 = bitcast i8* %54 to { [8 x i8] }*
  %load_target9 = load { [8 x i8] }, { [8 x i8] }* %55
  %56 = bitcast %struct.lua_TValue* %load_target8 to { [8 x i8] }*
  %57 = bitcast { [8 x i8] }* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  %59 = bitcast i8* %58 to { [8 x i8] }*
  store { [8 x i8] } %load_target9, { [8 x i8] }* %59
  %60 = bitcast { [184 x i8] }* %load_target7 to i32*
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 128
  %63 = bitcast i8* %62 to i32*
  %load_target10 = load i32, i32* %63
  %64 = bitcast %struct.lua_TValue* %load_target8 to i32*
  %65 = bitcast i32* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i32*
  store i32 %load_target10, i32* %67
  br label %L2428

L2427:                                            ; preds = %L2423
  %68 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %69 = bitcast %struct.lua_TValue** %68 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %71
  %72 = bitcast %struct.lua_TValue* %load_target11 to i32*
  %73 = bitcast i32* %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 8
  %75 = bitcast i8* %74 to i32*
  store i32 0, i32* %75
  br label %L2428

L2428:                                            ; preds = %L2427, %L2426, %L2425, %L2424
  %76 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %77 = bitcast %struct.lua_TValue** %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 16
  %79 = bitcast i8* %78 to %struct.lua_TValue**
  %load_target12 = load %struct.lua_TValue*, %struct.lua_TValue** %79
  %80 = bitcast %struct.lua_TValue* %load_target12 to i8*
  %81 = getelementptr inbounds i8, i8* %80, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %82 = bitcast i8* %81 to %struct.lua_TValue*
  %83 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %84 = bitcast %struct.lua_TValue** %83 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast i8* %85 to %struct.lua_TValue**
  store %struct.lua_TValue* %82, %struct.lua_TValue** %86
  ret void
}

define internal void @lua_settable(%struct.lua_State* %ARG1, i32 %ARG2) {
L2429:
  %R13870 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %load_target to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 -32
  %6 = bitcast i8* %5 to %struct.lua_TValue*
  %7 = bitcast %struct.lua_TValue* %load_target to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 -16
  %9 = bitcast i8* %8 to %struct.lua_TValue*
  call void @luaV_settable(%struct.lua_State* %ARG1, %struct.lua_TValue* %R13870, %struct.lua_TValue* %6, %struct.lua_TValue* %9)
  %10 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %11 = bitcast %struct.lua_TValue** %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  %13 = bitcast i8* %12 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %13
  %R13882 = ptrtoint %struct.lua_TValue* %load_target1 to i64
  %R13883 = add i64 %R13882, -32
  %R13884 = inttoptr i64 %R13883 to %struct.lua_TValue*
  %14 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %15 = bitcast %struct.lua_TValue** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %struct.lua_TValue**
  store %struct.lua_TValue* %R13884, %struct.lua_TValue** %17
  ret void
}

define internal void @lua_setfield(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2430:
  %key_0x62d000df9900 = alloca %struct.lua_TValue
  %R13888 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %R13894 = call i64 @strlen(i8* %ARG3)
  %R13895 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* %ARG3, i64 %R13894)
  %R13896 = bitcast { [24 x i8] }* %R13895 to { [184 x i8] }*
  %0 = bitcast %struct.lua_TValue* %key_0x62d000df9900 to { [184 x i8] }**
  %1 = bitcast { [184 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to { [184 x i8] }**
  store { [184 x i8] }* %R13896, { [184 x i8] }** %3
  %4 = bitcast %struct.lua_TValue* %key_0x62d000df9900 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 4, i32* %7
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %9 = bitcast %struct.lua_TValue** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %11
  %12 = bitcast %struct.lua_TValue* %load_target to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 -16
  %14 = bitcast i8* %13 to %struct.lua_TValue*
  call void @luaV_settable(%struct.lua_State* %ARG1, %struct.lua_TValue* %R13888, %struct.lua_TValue* %key_0x62d000df9900, %struct.lua_TValue* %14)
  %15 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %16 = bitcast %struct.lua_TValue** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %18
  %19 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %20 = getelementptr inbounds i8, i8* %19, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %21 = bitcast i8* %20 to %struct.lua_TValue*
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  store %struct.lua_TValue* %21, %struct.lua_TValue** %25
  ret void
}

define internal void @lua_rawset(%struct.lua_State* %ARG1, i32 %ARG2) {
L2431:
  %R13911 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %R13911 to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %8 = bitcast %struct.lua_TValue* %load_target to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 -32
  %10 = bitcast i8* %9 to %struct.lua_TValue*
  %R13923 = call %struct.lua_TValue* @luaH_set(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target1, %struct.lua_TValue* %10)
  %11 = bitcast %struct.lua_TValue* %load_target to { [8 x i8] }*
  %12 = bitcast { [8 x i8] }* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 -16
  %14 = bitcast i8* %13 to { [8 x i8] }*
  %load_target2 = load { [8 x i8] }, { [8 x i8] }* %14
  %15 = bitcast %struct.lua_TValue* %R13923 to { [8 x i8] }*
  %16 = bitcast { [8 x i8] }* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = bitcast i8* %17 to { [8 x i8] }*
  store { [8 x i8] } %load_target2, { [8 x i8] }* %18
  %19 = bitcast %struct.lua_TValue* %load_target to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 -8
  %22 = bitcast i8* %21 to i32*
  %load_target3 = load i32, i32* %22
  %23 = bitcast %struct.lua_TValue* %R13923 to i32*
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %load_target3, i32* %26
  %27 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %28 = bitcast %struct.lua_TValue** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  %30 = bitcast i8* %29 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %30
  %31 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %32 = bitcast i32* %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 -8
  %34 = bitcast i8* %33 to i32*
  %load_target5 = load i32, i32* %34
  %R13935 = icmp sge i32 %load_target5, 4
  %R139356 = zext i1 %R13935 to i32
  %cond = icmp ne i32 %R139356, 0
  br i1 %cond, label %L2432, label %L2435

L2432:                                            ; preds = %L2431
  %35 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %36 = bitcast { [184 x i8] }** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 -16
  %38 = bitcast i8* %37 to { [184 x i8] }**
  %load_target7 = load { [184 x i8] }*, { [184 x i8] }** %38
  %39 = bitcast { [184 x i8] }* %load_target7 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 9
  %load_target8 = load i8, i8* %40
  %R13941 = zext i8 %load_target8 to i32
  %R13942 = and i32 %R13941, 3
  %cond9 = icmp ne i32 %R13942, 0
  br i1 %cond9, label %L2433, label %L2435

L2433:                                            ; preds = %L2432
  %41 = bitcast %struct.lua_TValue* %R13911 to { [184 x i8] }**
  %42 = bitcast { [184 x i8] }** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 0
  %44 = bitcast i8* %43 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %44
  %45 = bitcast { [184 x i8] }* %load_target10 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 9
  %load_target11 = load i8, i8* %46
  %R13948 = zext i8 %load_target11 to i32
  %R13949 = and i32 %R13948, 4
  %cond12 = icmp ne i32 %R13949, 0
  br i1 %cond12, label %L2434, label %L2435

L2434:                                            ; preds = %L2433
  call void @luaC_barrierback(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target10)
  br label %L2435

L2435:                                            ; preds = %L2434, %L2433, %L2432, %L2431
  %47 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %48 = bitcast %struct.lua_TValue** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 16
  %50 = bitcast i8* %49 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %50
  %R13956 = ptrtoint %struct.lua_TValue* %load_target13 to i64
  %R13957 = add i64 %R13956, -32
  %R13958 = inttoptr i64 %R13957 to %struct.lua_TValue*
  %51 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %52 = bitcast %struct.lua_TValue** %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 16
  %54 = bitcast i8* %53 to %struct.lua_TValue**
  store %struct.lua_TValue* %R13958, %struct.lua_TValue** %54
  ret void
}

define internal void @lua_rawseti(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2436:
  %R13962 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.lua_TValue* %R13962 to { [184 x i8] }**
  %5 = bitcast { [184 x i8] }** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to { [184 x i8] }**
  %load_target1 = load { [184 x i8] }*, { [184 x i8] }** %7
  %R13972 = call %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target1, i32 %ARG3)
  %8 = bitcast %struct.lua_TValue* %load_target to { [8 x i8] }*
  %9 = bitcast { [8 x i8] }* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 -16
  %11 = bitcast i8* %10 to { [8 x i8] }*
  %load_target2 = load { [8 x i8] }, { [8 x i8] }* %11
  %12 = bitcast %struct.lua_TValue* %R13972 to { [8 x i8] }*
  %13 = bitcast { [8 x i8] }* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [8 x i8] }*
  store { [8 x i8] } %load_target2, { [8 x i8] }* %15
  %16 = bitcast %struct.lua_TValue* %load_target to i32*
  %17 = bitcast i32* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 -8
  %19 = bitcast i8* %18 to i32*
  %load_target3 = load i32, i32* %19
  %20 = bitcast %struct.lua_TValue* %R13972 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %load_target3, i32* %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %29 = bitcast i32* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 -8
  %31 = bitcast i8* %30 to i32*
  %load_target5 = load i32, i32* %31
  %R13984 = icmp sge i32 %load_target5, 4
  %R139846 = zext i1 %R13984 to i32
  %cond = icmp ne i32 %R139846, 0
  br i1 %cond, label %L2437, label %L2440

L2437:                                            ; preds = %L2436
  %32 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %33 = bitcast { [184 x i8] }** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 -16
  %35 = bitcast i8* %34 to { [184 x i8] }**
  %load_target7 = load { [184 x i8] }*, { [184 x i8] }** %35
  %36 = bitcast { [184 x i8] }* %load_target7 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 9
  %load_target8 = load i8, i8* %37
  %R13990 = zext i8 %load_target8 to i32
  %R13991 = and i32 %R13990, 3
  %cond9 = icmp ne i32 %R13991, 0
  br i1 %cond9, label %L2438, label %L2440

L2438:                                            ; preds = %L2437
  %38 = bitcast %struct.lua_TValue* %R13962 to { [184 x i8] }**
  %39 = bitcast { [184 x i8] }** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = bitcast i8* %40 to { [184 x i8] }**
  %load_target10 = load { [184 x i8] }*, { [184 x i8] }** %41
  %42 = bitcast { [184 x i8] }* %load_target10 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 9
  %load_target11 = load i8, i8* %43
  %R13997 = zext i8 %load_target11 to i32
  %R13998 = and i32 %R13997, 4
  %cond12 = icmp ne i32 %R13998, 0
  br i1 %cond12, label %L2439, label %L2440

L2439:                                            ; preds = %L2438
  call void @luaC_barrierback(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target10)
  br label %L2440

L2440:                                            ; preds = %L2439, %L2438, %L2437, %L2436
  %44 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %45 = bitcast %struct.lua_TValue** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 16
  %47 = bitcast i8* %46 to %struct.lua_TValue**
  %load_target13 = load %struct.lua_TValue*, %struct.lua_TValue** %47
  %48 = bitcast %struct.lua_TValue* %load_target13 to i8*
  %49 = getelementptr inbounds i8, i8* %48, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %50 = bitcast i8* %49 to %struct.lua_TValue*
  %51 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %52 = bitcast %struct.lua_TValue** %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 16
  %54 = bitcast i8* %53 to %struct.lua_TValue**
  store %struct.lua_TValue* %50, %struct.lua_TValue** %54
  ret void
}

define internal i32 @lua_setmetatable(%struct.lua_State* %ARG1, i32 %ARG2) {
L2441:
  %0 = alloca %struct.Table*
  %R14009 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %5 = bitcast %struct.lua_TValue* %load_target to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 -8
  %8 = bitcast i8* %7 to i32*
  %load_target1 = load i32, i32* %8
  %cond = icmp ne i32 %load_target1, 0
  br i1 %cond, label %L2443, label %L2442

L2442:                                            ; preds = %L2441
  store %struct.Table* null, %struct.Table** %0
  br label %L2444

L2443:                                            ; preds = %L2441
  %9 = bitcast %struct.lua_TValue* %load_target to { [184 x i8] }**
  %10 = bitcast { [184 x i8] }** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 -16
  %12 = bitcast i8* %11 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %12
  store { [184 x i8] }* %load_target2, %struct.Table** %0
  br label %L2444

L2444:                                            ; preds = %L2443, %L2442
  %13 = bitcast %struct.lua_TValue* %R14009 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  %load_target3 = load i32, i32* %16
  %17 = load %struct.Table*, %struct.Table** %0
  switch i32 %load_target3, label %L2453 [
    i32 5, label %L2445
    i32 7, label %L2449
  ]

L2445:                                            ; preds = %L2444
  %18 = bitcast %struct.lua_TValue* %R14009 to { [184 x i8] }**
  %19 = bitcast { [184 x i8] }** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to { [184 x i8] }**
  %load_target4 = load { [184 x i8] }*, { [184 x i8] }** %21
  %22 = bitcast { [184 x i8] }* %load_target4 to %struct.Table**
  %23 = bitcast %struct.Table** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.Table**
  store %struct.Table* %17, %struct.Table** %25
  %cond5 = icmp ne %struct.Table* %17, null
  br i1 %cond5, label %L2446, label %L2454

L2446:                                            ; preds = %L2445
  %R14029 = bitcast %struct.Table* %17 to { [184 x i8] }*
  %26 = bitcast { [184 x i8] }* %R14029 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 9
  %load_target6 = load i8, i8* %27
  %R14031 = zext i8 %load_target6 to i32
  %R14032 = and i32 %R14031, 3
  %cond7 = icmp ne i32 %R14032, 0
  br i1 %cond7, label %L2447, label %L2454

L2447:                                            ; preds = %L2446
  %28 = bitcast %struct.lua_TValue* %R14009 to { [184 x i8] }**
  %29 = bitcast { [184 x i8] }** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [184 x i8] }**
  %load_target8 = load { [184 x i8] }*, { [184 x i8] }** %31
  %32 = bitcast { [184 x i8] }* %load_target8 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 9
  %load_target9 = load i8, i8* %33
  %R14038 = zext i8 %load_target9 to i32
  %R14039 = and i32 %R14038, 4
  %cond10 = icmp ne i32 %R14039, 0
  br i1 %cond10, label %L2448, label %L2454

L2448:                                            ; preds = %L2447
  call void @luaC_barrierback(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target8)
  br label %L2454

L2449:                                            ; preds = %L2444
  %34 = bitcast %struct.lua_TValue* %R14009 to { [184 x i8] }**
  %35 = bitcast { [184 x i8] }** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %37
  %38 = bitcast { [184 x i8] }* %load_target11 to %struct.Table**
  %39 = bitcast %struct.Table** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 16
  %41 = bitcast i8* %40 to %struct.Table**
  store %struct.Table* %17, %struct.Table** %41
  %cond12 = icmp ne %struct.Table* %17, null
  br i1 %cond12, label %L2450, label %L2454

L2450:                                            ; preds = %L2449
  %R14049 = bitcast %struct.Table* %17 to { [184 x i8] }*
  %42 = bitcast { [184 x i8] }* %R14049 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 9
  %load_target13 = load i8, i8* %43
  %R14051 = zext i8 %load_target13 to i32
  %R14052 = and i32 %R14051, 3
  %cond14 = icmp ne i32 %R14052, 0
  br i1 %cond14, label %L2451, label %L2454

L2451:                                            ; preds = %L2450
  %44 = bitcast %struct.lua_TValue* %R14009 to { [184 x i8] }**
  %45 = bitcast { [184 x i8] }** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to { [184 x i8] }**
  %load_target15 = load { [184 x i8] }*, { [184 x i8] }** %47
  %48 = bitcast { [184 x i8] }* %load_target15 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 9
  %load_target16 = load i8, i8* %49
  %R14058 = zext i8 %load_target16 to i32
  %R14059 = and i32 %R14058, 4
  %cond17 = icmp ne i32 %R14059, 0
  br i1 %cond17, label %L2452, label %L2454

L2452:                                            ; preds = %L2451
  call void @luaC_barrierf(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target15, { [184 x i8] }* %R14049)
  br label %L2454

L2453:                                            ; preds = %L2444
  %50 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %51 = bitcast %struct.global_State** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 32
  %53 = bitcast i8* %52 to %struct.global_State**
  %load_target18 = load %struct.global_State*, %struct.global_State** %53
  %54 = bitcast %struct.global_State* %load_target18 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i32 224
  %56 = bitcast i8* %55 to %struct.global_State*
  %R14073 = sext i32 %load_target3 to i64
  %R14074 = mul i64 %R14073, 8
  %57 = bitcast %struct.global_State* %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 %R14074
  %59 = bitcast i8* %58 to %struct.global_State*
  %60 = bitcast %struct.global_State* %59 to %struct.Table**
  %61 = bitcast %struct.Table** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 0
  %63 = bitcast i8* %62 to %struct.Table**
  store %struct.Table* %17, %struct.Table** %63
  br label %L2454

L2454:                                            ; preds = %L2453, %L2452, %L2451, %L2450, %L2449, %L2448, %L2447, %L2446, %L2445
  %64 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %65 = bitcast %struct.lua_TValue** %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 16
  %67 = bitcast i8* %66 to %struct.lua_TValue**
  %load_target19 = load %struct.lua_TValue*, %struct.lua_TValue** %67
  %68 = bitcast %struct.lua_TValue* %load_target19 to i8*
  %69 = getelementptr inbounds i8, i8* %68, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %70 = bitcast i8* %69 to %struct.lua_TValue*
  %71 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %72 = bitcast %struct.lua_TValue** %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 16
  %74 = bitcast i8* %73 to %struct.lua_TValue**
  store %struct.lua_TValue* %70, %struct.lua_TValue** %74
  ret i32 1
}

define internal i32 @lua_setfenv(%struct.lua_State* %ARG1, i32 %ARG2) {
L2455:
  %R14083 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_TValue* %R14083 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  switch i32 %load_target, label %L2462 [
    i32 6, label %L2456
    i32 7, label %L2457
    i32 8, label %L2458
  ]

L2456:                                            ; preds = %L2455
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_TValue* %load_target1 to { [184 x i8] }**
  %9 = bitcast { [184 x i8] }** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 -16
  %11 = bitcast i8* %10 to { [184 x i8] }**
  %load_target2 = load { [184 x i8] }*, { [184 x i8] }** %11
  %12 = bitcast %struct.lua_TValue* %R14083 to { [184 x i8] }**
  %13 = bitcast { [184 x i8] }** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to { [184 x i8] }**
  %load_target3 = load { [184 x i8] }*, { [184 x i8] }** %15
  %16 = bitcast { [184 x i8] }* %load_target3 to %struct.Table**
  %17 = bitcast %struct.Table** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to %struct.Table**
  store { [184 x i8] }* %load_target2, %struct.Table** %19
  br label %L2459

L2457:                                            ; preds = %L2455
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %24 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %25 = bitcast { [184 x i8] }** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 -16
  %27 = bitcast i8* %26 to { [184 x i8] }**
  %load_target5 = load { [184 x i8] }*, { [184 x i8] }** %27
  %28 = bitcast %struct.lua_TValue* %R14083 to { [184 x i8] }**
  %29 = bitcast { [184 x i8] }** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to { [184 x i8] }**
  %load_target6 = load { [184 x i8] }*, { [184 x i8] }** %31
  %32 = bitcast { [184 x i8] }* %load_target6 to %struct.Table**
  %33 = bitcast %struct.Table** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 24
  %35 = bitcast i8* %34 to %struct.Table**
  store { [184 x i8] }* %load_target5, %struct.Table** %35
  br label %L2459

L2458:                                            ; preds = %L2455
  %36 = bitcast %struct.lua_TValue* %R14083 to { [184 x i8] }**
  %37 = bitcast { [184 x i8] }** %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  %39 = bitcast i8* %38 to { [184 x i8] }**
  %load_target7 = load { [184 x i8] }*, { [184 x i8] }** %39
  %40 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %41 = bitcast %struct.lua_TValue** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %43
  %44 = bitcast %struct.lua_TValue* %load_target8 to { [184 x i8] }**
  %45 = bitcast { [184 x i8] }** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 -16
  %47 = bitcast i8* %46 to { [184 x i8] }**
  %load_target9 = load { [184 x i8] }*, { [184 x i8] }** %47
  %48 = bitcast { [184 x i8] }* %load_target7 to { [184 x i8] }**
  %49 = bitcast { [184 x i8] }** %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 120
  %51 = bitcast i8* %50 to { [184 x i8] }**
  store { [184 x i8] }* %load_target9, { [184 x i8] }** %51
  %52 = bitcast { [184 x i8] }* %load_target7 to i32*
  %53 = bitcast i32* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 128
  %55 = bitcast i8* %54 to i32*
  store i32 5, i32* %55
  br label %L2459

L2459:                                            ; preds = %L2458, %L2457, %L2456
  %56 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %57 = bitcast %struct.lua_TValue** %56 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = bitcast i8* %58 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %59
  %60 = bitcast %struct.lua_TValue* %load_target10 to { [184 x i8] }**
  %61 = bitcast { [184 x i8] }** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 -16
  %63 = bitcast i8* %62 to { [184 x i8] }**
  %load_target11 = load { [184 x i8] }*, { [184 x i8] }** %63
  %64 = bitcast { [184 x i8] }* %load_target11 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 9
  %load_target12 = load i8, i8* %65
  %R14122 = zext i8 %load_target12 to i32
  %R14123 = and i32 %R14122, 3
  %cond = icmp ne i32 %R14123, 0
  br i1 %cond, label %L2460, label %L2462

L2460:                                            ; preds = %L2459
  %66 = bitcast %struct.lua_TValue* %R14083 to { [184 x i8] }**
  %67 = bitcast { [184 x i8] }** %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 0
  %69 = bitcast i8* %68 to { [184 x i8] }**
  %load_target13 = load { [184 x i8] }*, { [184 x i8] }** %69
  %70 = bitcast { [184 x i8] }* %load_target13 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 9
  %load_target14 = load i8, i8* %71
  %R14128 = zext i8 %load_target14 to i32
  %R14129 = and i32 %R14128, 4
  %cond15 = icmp ne i32 %R14129, 0
  br i1 %cond15, label %L2461, label %L2462

L2461:                                            ; preds = %L2460
  call void @luaC_barrierf(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target13, { [184 x i8] }* %load_target11)
  br label %L2462

L2462:                                            ; preds = %L2461, %L2460, %L2459, %L2455
  %72 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %73 = bitcast %struct.lua_TValue** %72 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 16
  %75 = bitcast i8* %74 to %struct.lua_TValue**
  %load_target16 = load %struct.lua_TValue*, %struct.lua_TValue** %75
  %76 = bitcast %struct.lua_TValue* %load_target16 to i8*
  %77 = getelementptr inbounds i8, i8* %76, %struct.lua_TValue* inttoptr (i64 -16 to %struct.lua_TValue*)
  %78 = bitcast i8* %77 to %struct.lua_TValue*
  %79 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %80 = bitcast %struct.lua_TValue** %79 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 16
  %82 = bitcast i8* %81 to %struct.lua_TValue**
  store %struct.lua_TValue* %78, %struct.lua_TValue** %82
  ret i32 1
}

define internal void @lua_call(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2463:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %R14150 = add i32 %ARG2, 1
  %R14151 = sext i32 %R14150 to i64
  %R14152 = mul i64 %R14151, 16
  %R14153 = sub %struct.lua_TValue* %load_target, i64 %R14152
  call void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %R14153, i32 %ARG3)
  %R14158 = icmp eq i32 %ARG3, -1
  %R141581 = zext i1 %R14158 to i32
  %cond = icmp ne i32 %R141581, 0
  br i1 %cond, label %L2464, label %L2466

L2464:                                            ; preds = %L2463
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %9 = bitcast %struct.CallInfo** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 40
  %11 = bitcast i8* %10 to %struct.CallInfo**
  %load_target3 = load %struct.CallInfo*, %struct.CallInfo** %11
  %12 = bitcast %struct.CallInfo* %load_target3 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R14164 = icmp uge %struct.lua_TValue* %load_target2, %load_target4
  %R141645 = zext i1 %R14164 to i32
  %cond6 = icmp ne i32 %R141645, 0
  br i1 %cond6, label %L2465, label %L2466

L2465:                                            ; preds = %L2464
  %16 = bitcast %struct.CallInfo* %load_target3 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target2, %struct.lua_TValue** %19
  br label %L2466

L2466:                                            ; preds = %L2465, %L2464, %L2463
  ret void
}

define internal void @f_call(%struct.lua_State* %ARG1, i8* %ARG2) {
L2467:
  %R14170 = bitcast i8* %ARG2 to %struct.CallS*
  %0 = bitcast %struct.CallS* %R14170 to %struct.lua_TValue**
  %1 = bitcast %struct.lua_TValue** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %3
  %4 = bitcast %struct.CallS* %R14170 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  call void @luaD_call(%struct.lua_State* %ARG1, %struct.lua_TValue* %load_target, i32 %load_target1)
  ret void
}

define internal i32 @lua_pcall(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3, i32 %ARG4) {
L2468:
  %c_0x62d000e2b0d8 = alloca %struct.CallS
  %0 = alloca i64
  %cond = icmp ne i32 %ARG4, 0
  br i1 %cond, label %L2470, label %L2469

L2469:                                            ; preds = %L2468
  store i64 0, i64* %0
  br label %L2471

L2470:                                            ; preds = %L2468
  %R14182 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG4)
  %R14185 = bitcast %struct.lua_TValue* %R14182 to i8*
  %1 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %2 = bitcast %struct.lua_TValue** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 64
  %4 = bitcast i8* %3 to %struct.lua_TValue**
  %load_target = load %struct.lua_TValue*, %struct.lua_TValue** %4
  %R14188 = bitcast %struct.lua_TValue* %load_target to i8*
  %R14189 = sub i8* %R14185, %R14188
  store i8* %R14189, i64* %0
  br label %L2471

L2471:                                            ; preds = %L2470, %L2469
  %5 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %6 = bitcast %struct.lua_TValue** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %7 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %8
  %R14193 = add i32 %ARG2, 1
  %R14194 = sext i32 %R14193 to i64
  %R14195 = mul i64 %R14194, 16
  %R14196 = sub %struct.lua_TValue* %load_target1, i64 %R14195
  %9 = bitcast %struct.CallS* %c_0x62d000e2b0d8 to %struct.lua_TValue**
  %10 = bitcast %struct.lua_TValue** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to %struct.lua_TValue**
  store %struct.lua_TValue* %R14196, %struct.lua_TValue** %12
  %13 = bitcast %struct.CallS* %c_0x62d000e2b0d8 to i32*
  %14 = bitcast i32* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 %ARG3, i32* %16
  %R14201 = bitcast %struct.CallS* %c_0x62d000e2b0d8 to i8*
  %R14203 = bitcast %struct.lua_TValue* %R14196 to i8*
  %17 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %18 = bitcast %struct.lua_TValue** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 64
  %20 = bitcast i8* %19 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %20
  %R14206 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %R14207 = sub i8* %R14203, %R14206
  %21 = load i64, i64* %0
  %R14209 = call i32 @luaD_pcall(%struct.lua_State* %ARG1, void (%struct.lua_State*, i8*)* @f_call, i8* %R14201, i8* %R14207, i64 %21)
  %R14211 = icmp eq i32 %ARG3, -1
  %R142113 = zext i1 %R14211 to i32
  %cond4 = icmp ne i32 %R142113, 0
  br i1 %cond4, label %L2472, label %L2474

L2472:                                            ; preds = %L2471
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %25
  %26 = bitcast %struct.lua_State* %ARG1 to %struct.CallInfo**
  %27 = bitcast %struct.CallInfo** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 40
  %29 = bitcast i8* %28 to %struct.CallInfo**
  %load_target6 = load %struct.CallInfo*, %struct.CallInfo** %29
  %30 = bitcast %struct.CallInfo* %load_target6 to %struct.lua_TValue**
  %31 = bitcast %struct.lua_TValue** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  %33 = bitcast i8* %32 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %33
  %R14217 = icmp uge %struct.lua_TValue* %load_target5, %load_target7
  %R142178 = zext i1 %R14217 to i32
  %cond9 = icmp ne i32 %R142178, 0
  br i1 %cond9, label %L2473, label %L2474

L2473:                                            ; preds = %L2472
  %34 = bitcast %struct.CallInfo* %load_target6 to %struct.lua_TValue**
  %35 = bitcast %struct.lua_TValue** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 16
  %37 = bitcast i8* %36 to %struct.lua_TValue**
  store %struct.lua_TValue* %load_target5, %struct.lua_TValue** %37
  br label %L2474

L2474:                                            ; preds = %L2473, %L2472, %L2471
  ret i32 %R14209
}

define internal i32 @lua_load(%struct.lua_State* %ARG1, i8* (%struct.lua_State*, i8*, i64*)* %ARG2, i8* %ARG3, i8* %ARG4) {
L2475:
  %z_0x62d000e427b8 = alloca %struct.Zio
  %0 = alloca i8*
  store i8* %ARG4, i8** %0
  %cond = icmp ne i8* %ARG4, null
  br i1 %cond, label %L2477, label %L2476

L2476:                                            ; preds = %L2475
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128, i64 0, i64 0), i8** %0
  br label %L2477

L2477:                                            ; preds = %L2476, %L2475
  call void @luaZ_init(%struct.lua_State* %ARG1, %struct.Zio* %z_0x62d000e427b8, i8* (%struct.lua_State*, i8*, i64*)* %ARG2, i8* %ARG3)
  %1 = load i8*, i8** %0
  %R14233 = call i32 @luaD_protectedparser(%struct.lua_State* %ARG1, %struct.Zio* %z_0x62d000e427b8, i8* %1)
  ret i32 %R14233
}

define internal i32 @lua_error(%struct.lua_State* %ARG1) {
L2478:
  call void @luaG_errormsg(%struct.lua_State* %ARG1)
  ret i32 0
}

define internal i32 @lua_next(%struct.lua_State* %ARG1, i32 %ARG2) {
L2479:
  %R14241 = call %struct.lua_TValue* @index2adr(%struct.lua_State* %ARG1, i32 %ARG2)
  %0 = bitcast %struct.lua_TValue* %R14241 to { [184 x i8] }**
  %1 = bitcast { [184 x i8] }** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to { [184 x i8] }**
  %load_target = load { [184 x i8] }*, { [184 x i8] }** %3
  %4 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %5 = bitcast %struct.lua_TValue** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_TValue**
  %load_target1 = load %struct.lua_TValue*, %struct.lua_TValue** %7
  %8 = bitcast %struct.lua_TValue* %load_target1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 -16
  %10 = bitcast i8* %9 to %struct.lua_TValue*
  %R14250 = call i32 @luaH_next(%struct.lua_State* %ARG1, { [184 x i8] }* %load_target, %struct.lua_TValue* %10)
  %cond = icmp ne i32 %R14250, 0
  br i1 %cond, label %L2480, label %L2481

L2480:                                            ; preds = %L2479
  %11 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %12 = bitcast %struct.lua_TValue** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %13 to %struct.lua_TValue**
  %load_target2 = load %struct.lua_TValue*, %struct.lua_TValue** %14
  %15 = bitcast %struct.lua_TValue* %load_target2 to i8*
  %16 = getelementptr inbounds i8, i8* %15, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %17 = bitcast i8* %16 to %struct.lua_TValue*
  %18 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %19 = bitcast %struct.lua_TValue** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 16
  %21 = bitcast i8* %20 to %struct.lua_TValue**
  store %struct.lua_TValue* %17, %struct.lua_TValue** %21
  br label %L2482

L2481:                                            ; preds = %L2479
  %22 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %23 = bitcast %struct.lua_TValue** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.lua_TValue**
  %load_target3 = load %struct.lua_TValue*, %struct.lua_TValue** %25
  %R14258 = ptrtoint %struct.lua_TValue* %load_target3 to i64
  %R14259 = add i64 %R14258, -16
  %R14260 = inttoptr i64 %R14259 to %struct.lua_TValue*
  %26 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %27 = bitcast %struct.lua_TValue** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 16
  %29 = bitcast i8* %28 to %struct.lua_TValue**
  store %struct.lua_TValue* %R14260, %struct.lua_TValue** %29
  br label %L2482

L2482:                                            ; preds = %L2481, %L2480
  ret i32 %R14250
}

define internal void @lua_concat(%struct.lua_State* %ARG1, i32 %ARG2) {
L2483:
  %R14265 = icmp sge i32 %ARG2, 2
  %R142651 = zext i1 %R14265 to i32
  %cond = icmp ne i32 %R142651, 0
  br i1 %cond, label %L2484, label %L2487

L2484:                                            ; preds = %L2483
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i64*
  %5 = bitcast i64* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 120
  %7 = bitcast i8* %6 to i64*
  %load_target2 = load i64, i64* %7
  %8 = bitcast %struct.global_State* %load_target to i64*
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 112
  %11 = bitcast i8* %10 to i64*
  %load_target3 = load i64, i64* %11
  %R14272 = icmp uge i64 %load_target2, %load_target3
  %R142724 = zext i1 %R14272 to i32
  %cond5 = icmp ne i32 %R142724, 0
  br i1 %cond5, label %L2485, label %L2486

L2485:                                            ; preds = %L2484
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2486

L2486:                                            ; preds = %L2485, %L2484
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target6 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %16 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %17 = bitcast %struct.lua_TValue** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 24
  %19 = bitcast i8* %18 to %struct.lua_TValue**
  %load_target7 = load %struct.lua_TValue*, %struct.lua_TValue** %19
  %R14280 = sub %struct.lua_TValue* %load_target6, %load_target7
  %R14281 = sdiv %struct.lua_TValue* %R14280, i64 16
  %R14282 = ptrtoint %struct.lua_TValue* %R14281 to i32
  %R14283 = add i32 %R14282, -1
  call void @luaV_concat(%struct.lua_State* %ARG1, i32 %ARG2, i32 %R14283)
  %R14285 = add i32 %ARG2, -1
  %R14286 = sext i32 %R14285 to i64
  %R14287 = mul i64 %R14286, 16
  %20 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %21 = bitcast %struct.lua_TValue** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_TValue**
  %load_target8 = load %struct.lua_TValue*, %struct.lua_TValue** %23
  %R14290 = ptrtoint %struct.lua_TValue* %load_target8 to i64
  %R14291 = sub i64 %R14290, %R14287
  %R14292 = inttoptr i64 %R14291 to %struct.lua_TValue*
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  store %struct.lua_TValue* %R14292, %struct.lua_TValue** %27
  br label %L2489

L2487:                                            ; preds = %L2483
  %cond9 = icmp ne i32 %ARG2, 0
  br i1 %cond9, label %L2489, label %L2488

L2488:                                            ; preds = %L2487
  %28 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %29 = bitcast %struct.lua_TValue** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to %struct.lua_TValue**
  %load_target10 = load %struct.lua_TValue*, %struct.lua_TValue** %31
  %R14299 = call { [24 x i8] }* @luaS_newlstr(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.129, i64 0, i64 0), i64 0)
  %R14300 = bitcast { [24 x i8] }* %R14299 to { [184 x i8] }*
  %32 = bitcast %struct.lua_TValue* %load_target10 to { [184 x i8] }**
  %33 = bitcast { [184 x i8] }** %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = bitcast i8* %34 to { [184 x i8] }**
  store { [184 x i8] }* %R14300, { [184 x i8] }** %35
  %36 = bitcast %struct.lua_TValue* %load_target10 to i32*
  %37 = bitcast i32* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 4, i32* %39
  %40 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %41 = bitcast %struct.lua_TValue** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to %struct.lua_TValue**
  %load_target11 = load %struct.lua_TValue*, %struct.lua_TValue** %43
  %44 = bitcast %struct.lua_TValue* %load_target11 to i8*
  %45 = getelementptr inbounds i8, i8* %44, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %46 = bitcast i8* %45 to %struct.lua_TValue*
  %47 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %48 = bitcast %struct.lua_TValue** %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 16
  %50 = bitcast i8* %49 to %struct.lua_TValue**
  store %struct.lua_TValue* %46, %struct.lua_TValue** %50
  br label %L2489

L2489:                                            ; preds = %L2488, %L2487, %L2486
  ret void
}

define internal i8* @lua_newuserdata(%struct.lua_State* %ARG1, i64 %ARG2) {
L2490:
  %0 = bitcast %struct.lua_State* %ARG1 to %struct.global_State**
  %1 = bitcast %struct.global_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 32
  %3 = bitcast i8* %2 to %struct.global_State**
  %load_target = load %struct.global_State*, %struct.global_State** %3
  %4 = bitcast %struct.global_State* %load_target to i64*
  %5 = bitcast i64* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 120
  %7 = bitcast i8* %6 to i64*
  %load_target1 = load i64, i64* %7
  %8 = bitcast %struct.global_State* %load_target to i64*
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 112
  %11 = bitcast i8* %10 to i64*
  %load_target2 = load i64, i64* %11
  %R14313 = icmp uge i64 %load_target1, %load_target2
  %R143133 = zext i1 %R14313 to i32
  %cond = icmp ne i32 %R143133, 0
  br i1 %cond, label %L2491, label %L2492

L2491:                                            ; preds = %L2490
  call void @luaC_step(%struct.lua_State* %ARG1)
  br label %L2492

L2492:                                            ; preds = %L2491, %L2490
  %R14318 = call %struct.Table* @getcurrenv(%struct.lua_State* %ARG1)
  %R14319 = call { [40 x i8] }* @luaS_newudata(%struct.lua_State* %ARG1, i64 %ARG2, %struct.Table* %R14318)
  %12 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %13 = bitcast %struct.lua_TValue** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 16
  %15 = bitcast i8* %14 to %struct.lua_TValue**
  %load_target4 = load %struct.lua_TValue*, %struct.lua_TValue** %15
  %R14323 = bitcast { [40 x i8] }* %R14319 to { [184 x i8] }*
  %16 = bitcast %struct.lua_TValue* %load_target4 to { [184 x i8] }**
  %17 = bitcast { [184 x i8] }** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to { [184 x i8] }**
  store { [184 x i8] }* %R14323, { [184 x i8] }** %19
  %20 = bitcast %struct.lua_TValue* %load_target4 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 7, i32* %23
  %24 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %25 = bitcast %struct.lua_TValue** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %struct.lua_TValue**
  %load_target5 = load %struct.lua_TValue*, %struct.lua_TValue** %27
  %28 = bitcast %struct.lua_TValue* %load_target5 to i8*
  %29 = getelementptr inbounds i8, i8* %28, %struct.lua_TValue* inttoptr (i64 16 to %struct.lua_TValue*)
  %30 = bitcast i8* %29 to %struct.lua_TValue*
  %31 = bitcast %struct.lua_State* %ARG1 to %struct.lua_TValue**
  %32 = bitcast %struct.lua_TValue** %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  %34 = bitcast i8* %33 to %struct.lua_TValue**
  store %struct.lua_TValue* %30, %struct.lua_TValue** %34
  %35 = bitcast { [40 x i8] }* %R14319 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 40
  %37 = bitcast i8* %36 to { [40 x i8] }*
  %R14332 = bitcast { [40 x i8] }* %37 to i8*
  ret i8* %R14332
}

define internal i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2493:
  %ar_0x62d000e4a128 = alloca %struct.lua_Debug
  %0 = alloca i32
  %1 = alloca i8*
  %2 = alloca i32
  %R14336 = call i32 @lua_getstack(%struct.lua_State* %ARG1, i32 0, %struct.lua_Debug* %ar_0x62d000e4a128)
  store i32 %ARG2, i32* %0
  %cond = icmp ne i32 %R14336, 0
  br i1 %cond, label %L2495, label %L2494

L2494:                                            ; preds = %L2493
  %R14341 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.130, i64 0, i64 0), i32 %ARG2, i8* %ARG3)
  store i32 %R14341, i32* %2
  br label %L2501

L2495:                                            ; preds = %L2493
  %R14346 = call i32 @lua_getinfo(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.131, i64 0, i64 0), %struct.lua_Debug* %ar_0x62d000e4a128)
  %3 = bitcast %struct.lua_Debug* %ar_0x62d000e4a128 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to i8**
  %load_target = load i8*, i8** %6
  %R14349 = call i32 @strcmp(i8* %load_target, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i64 0, i64 0))
  %cond1 = icmp ne i32 %R14349, 0
  br i1 %cond1, label %L2498, label %L2496

L2496:                                            ; preds = %L2495
  %R14352 = add i32 %ARG2, -1
  store i32 %R14352, i32* %0
  %cond2 = icmp ne i32 %R14352, 0
  br i1 %cond2, label %L2498, label %L2497

L2497:                                            ; preds = %L2496
  %7 = bitcast %struct.lua_Debug* %ar_0x62d000e4a128 to i8**
  %8 = bitcast i8** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i8**
  %load_target3 = load i8*, i8** %10
  %R14359 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.133, i64 0, i64 0), i8* %load_target3, i8* %ARG3)
  store i32 %R14359, i32* %2
  br label %L2501

L2498:                                            ; preds = %L2496, %L2495
  %11 = bitcast %struct.lua_Debug* %ar_0x62d000e4a128 to i8**
  %12 = bitcast i8** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i8**
  %load_target4 = load i8*, i8** %14
  store i8* %load_target4, i8** %1
  %cond5 = icmp ne i8* %load_target4, null
  br i1 %cond5, label %L2500, label %L2499

L2499:                                            ; preds = %L2498
  %15 = bitcast %struct.lua_Debug* %ar_0x62d000e4a128 to i8**
  %16 = bitcast i8** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i64 0, i64 0), i8** %18
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134, i64 0, i64 0), i8** %1
  br label %L2500

L2500:                                            ; preds = %L2499, %L2498
  %19 = load i32, i32* %0
  %20 = load i8*, i8** %1
  %R14368 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.135, i64 0, i64 0), i32 %19, i8* %20, i8* %ARG3)
  store i32 %R14368, i32* %2
  br label %L2501

L2501:                                            ; preds = %L2500, %L2497, %L2494
  %21 = load i32, i32* %2
  ret i32 %21
}

declare i32 @luaL_error(%struct.lua_State*, i8*, ...)

declare i32 @strcmp(i8*, i8*)

define internal i32 @luaL_typerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2502:
  %R14375 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %ARG2)
  %R14376 = call i8* @lua_typename(%struct.lua_State* %ARG1, i32 %R14375)
  %R14377 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.136, i64 0, i64 0), i8* %ARG3, i8* %R14376)
  %R14381 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* %R14377)
  ret i32 %R14381
}

define internal void @tag_error(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2503:
  %R14387 = call i8* @lua_typename(%struct.lua_State* %ARG1, i32 %ARG3)
  %R14388 = call i32 @luaL_typerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* %R14387)
  ret void
}

define internal void @luaL_where(%struct.lua_State* %ARG1, i32 %ARG2) {
L2504:
  %ar_0x62d000e618f0 = alloca %struct.lua_Debug
  %R14392 = call i32 @lua_getstack(%struct.lua_State* %ARG1, i32 %ARG2, %struct.lua_Debug* %ar_0x62d000e618f0)
  %cond = icmp ne i32 %R14392, 0
  br i1 %cond, label %L2505, label %L2507

L2505:                                            ; preds = %L2504
  %R14396 = call i32 @lua_getinfo(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), %struct.lua_Debug* %ar_0x62d000e618f0)
  %0 = bitcast %struct.lua_Debug* %ar_0x62d000e618f0 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 40
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R14398 = icmp sgt i32 %load_target, 0
  %R143981 = zext i1 %R14398 to i32
  %cond2 = icmp ne i32 %R143981, 0
  br i1 %cond2, label %L2506, label %L2507

L2506:                                            ; preds = %L2505
  %4 = bitcast %struct.lua_Debug* %ar_0x62d000e618f0 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i32 56
  %6 = bitcast i8* %5 to %struct.lua_Debug*
  %R14404 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.138, i64 0, i64 0), %struct.lua_Debug* %6, i32 %load_target)
  br label %L2508

L2507:                                            ; preds = %L2505, %L2504
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.139, i64 0, i64 0), i64 0)
  br label %L2508

L2508:                                            ; preds = %L2507, %L2506
  ret void
}

define internal i32 @luaL_error.140(%struct.lua_State* %ARG1, i8* %ARG2) {
L2509:
  %fmt_0x62d000e61e60 = alloca i8*
  %0 = bitcast i8** %fmt_0x62d000e61e60 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i8**
  store i8* %ARG2, i8** %2
  %R14408 = bitcast i8** %fmt_0x62d000e61e60 to i8*
  call void @luaL_where(%struct.lua_State* %ARG1, i32 1)
  %3 = bitcast i8** %fmt_0x62d000e61e60 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i8**
  %load_target = load i8*, i8** %5
  %R14413 = call i8* @lua_pushvfstring(%struct.lua_State* %ARG1, i8* %load_target, i8* %R14408)
  call void @lua_concat(%struct.lua_State* %ARG1, i32 2)
  %R14416 = call i32 @lua_error(%struct.lua_State* %ARG1)
  ret i32 %R14416
}

define internal i32 @luaL_newmetatable(%struct.lua_State* %ARG1, i8* %ARG2) {
L2510:
  call void @lua_getfield(%struct.lua_State* %ARG1, i32 -10000, i8* %ARG2)
  %R14421 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %R14423 = icmp eq i32 %R14421, 0
  %R144231 = zext i1 %R14423 to i32
  %cond = icmp ne i32 %R14421, 0
  br i1 %cond, label %L2512, label %L2511

L2511:                                            ; preds = %L2510
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_createtable(%struct.lua_State* %ARG1, i32 0, i32 0)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -1)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -10000, i8* %ARG2)
  br label %L2512

L2512:                                            ; preds = %L2511, %L2510
  ret i32 %R144231
}

define internal i8* @luaL_checkudata(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2513:
  %0 = alloca i8*
  %R14431 = call i8* @lua_touserdata(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond = icmp ne i8* %R14431, null
  br i1 %cond, label %L2514, label %L2517

L2514:                                            ; preds = %L2513
  %R14436 = call i32 @lua_getmetatable(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond1 = icmp ne i32 %R14436, 0
  br i1 %cond1, label %L2515, label %L2517

L2515:                                            ; preds = %L2514
  call void @lua_getfield(%struct.lua_State* %ARG1, i32 -10000, i8* %ARG3)
  %R14440 = call i32 @lua_rawequal(%struct.lua_State* %ARG1, i32 -1, i32 -2)
  %cond2 = icmp ne i32 %R14440, 0
  br i1 %cond2, label %L2516, label %L2517

L2516:                                            ; preds = %L2515
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -3)
  store i8* %R14431, i8** %0
  br label %L2518

L2517:                                            ; preds = %L2515, %L2514, %L2513
  %R14447 = call i32 @luaL_typerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3)
  store i8* null, i8** %0
  br label %L2518

L2518:                                            ; preds = %L2517, %L2516
  %1 = load i8*, i8** %0
  ret i8* %1
}

define internal void @luaL_checkstack(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2519:
  %R14450 = call i32 @lua_checkstack(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond = icmp ne i32 %R14450, 0
  br i1 %cond, label %L2521, label %L2520

L2520:                                            ; preds = %L2519
  %R14454 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.141, i64 0, i64 0), i8* %ARG3)
  br label %L2521

L2521:                                            ; preds = %L2520, %L2519
  ret void
}

define internal void @luaL_checktype(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2522:
  %R14457 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %ARG2)
  %R14459 = icmp ne i32 %R14457, %ARG3
  %R144591 = zext i1 %R14459 to i32
  %cond = icmp ne i32 %R144591, 0
  br i1 %cond, label %L2523, label %L2524

L2523:                                            ; preds = %L2522
  call void @tag_error(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3)
  br label %L2524

L2524:                                            ; preds = %L2523, %L2522
  ret void
}

define internal void @luaL_checkany(%struct.lua_State* %ARG1, i32 %ARG2) {
L2525:
  %R14465 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %ARG2)
  %R14466 = icmp eq i32 %R14465, -1
  %R144661 = zext i1 %R14466 to i32
  %cond = icmp ne i32 %R144661, 0
  br i1 %cond, label %L2526, label %L2527

L2526:                                            ; preds = %L2525
  %R14470 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.142, i64 0, i64 0))
  br label %L2527

L2527:                                            ; preds = %L2526, %L2525
  ret void
}

define internal i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 %ARG2, i64* %ARG3) {
L2528:
  %R14474 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 %ARG2, i64* %ARG3)
  %cond = icmp ne i8* %R14474, null
  br i1 %cond, label %L2530, label %L2529

L2529:                                            ; preds = %L2528
  call void @tag_error(%struct.lua_State* %ARG1, i32 %ARG2, i32 4)
  br label %L2530

L2530:                                            ; preds = %L2529, %L2528
  ret i8* %R14474
}

define internal i8* @luaL_optlstring(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3, i64* %ARG4) {
L2531:
  %0 = alloca i8*
  %R14482 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %ARG2)
  %R14483 = icmp sle i32 %R14482, 0
  %R144831 = zext i1 %R14483 to i32
  %cond = icmp ne i32 %R144831, 0
  br i1 %cond, label %L2532, label %L2535

L2532:                                            ; preds = %L2531
  %cond2 = icmp ne i64* %ARG4, null
  br i1 %cond2, label %L2533, label %L2534

L2533:                                            ; preds = %L2532
  %R14486 = call i64 @strlen(i8* %ARG3)
  %cond3 = icmp ne i8* %ARG3, null
  %select = select i1 %cond3, i64 %R14486, i64 0
  %1 = bitcast i64* %ARG4 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i64*
  store i64 %select, i64* %3
  br label %L2534

L2534:                                            ; preds = %L2533, %L2532
  store i8* %ARG3, i8** %0
  br label %L2536

L2535:                                            ; preds = %L2531
  %R14495 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 %ARG2, i64* %ARG4)
  store i8* %R14495, i8** %0
  br label %L2536

L2536:                                            ; preds = %L2535, %L2534
  %4 = load i8*, i8** %0
  ret i8* %4
}

define internal double @luaL_checknumber(%struct.lua_State* %ARG1, i32 %ARG2) {
L2537:
  %R14498 = call double @lua_tonumber(%struct.lua_State* %ARG1, i32 %ARG2)
  %R14501 = fcmp oeq double %R14498, 0.000000e+00
  %R145011 = zext i1 %R14501 to i32
  %cond = icmp ne i32 %R145011, 0
  br i1 %cond, label %L2538, label %L2540

L2538:                                            ; preds = %L2537
  %R14504 = call i32 @lua_isnumber(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond2 = icmp ne i32 %R14504, 0
  br i1 %cond2, label %L2540, label %L2539

L2539:                                            ; preds = %L2538
  call void @tag_error(%struct.lua_State* %ARG1, i32 %ARG2, i32 3)
  br label %L2540

L2540:                                            ; preds = %L2539, %L2538, %L2537
  ret double %R14498
}

define internal i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 %ARG2) {
L2541:
  %R14511 = call i64 @lua_tointeger(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond = icmp ne i64 %R14511, 0
  br i1 %cond, label %L2544, label %L2542

L2542:                                            ; preds = %L2541
  %R14516 = call i32 @lua_isnumber(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond1 = icmp ne i32 %R14516, 0
  br i1 %cond1, label %L2544, label %L2543

L2543:                                            ; preds = %L2542
  call void @tag_error(%struct.lua_State* %ARG1, i32 %ARG2, i32 3)
  br label %L2544

L2544:                                            ; preds = %L2543, %L2542, %L2541
  ret i64 %R14511
}

define internal i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 %ARG2, i64 %ARG3) {
L2545:
  %0 = alloca i64
  %R14523 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %ARG2)
  %R14524 = icmp sle i32 %R14523, 0
  %R145241 = zext i1 %R14524 to i32
  %cond = icmp ne i32 %R145241, 0
  br i1 %cond, label %L2546, label %L2547

L2546:                                            ; preds = %L2545
  store i64 %ARG3, i64* %0
  br label %L2548

L2547:                                            ; preds = %L2545
  %R14528 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 %ARG2)
  store i64 %R14528, i64* %0
  br label %L2548

L2548:                                            ; preds = %L2547, %L2546
  %1 = load i64, i64* %0
  ret i64 %1
}

define internal i32 @luaL_getmetafield(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2549:
  %0 = alloca i32
  %R14533 = call i32 @lua_getmetatable(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond = icmp ne i32 %R14533, 0
  br i1 %cond, label %L2551, label %L2550

L2550:                                            ; preds = %L2549
  store i32 0, i32* %0
  br label %L2554

L2551:                                            ; preds = %L2549
  call void @lua_pushstring(%struct.lua_State* %ARG1, i8* %ARG3)
  call void @lua_rawget(%struct.lua_State* %ARG1, i32 -2)
  %R14539 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %cond1 = icmp ne i32 %R14539, 0
  br i1 %cond1, label %L2553, label %L2552

L2552:                                            ; preds = %L2551
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -3)
  store i32 0, i32* %0
  br label %L2554

L2553:                                            ; preds = %L2551
  call void @lua_remove(%struct.lua_State* %ARG1, i32 -2)
  store i32 1, i32* %0
  br label %L2554

L2554:                                            ; preds = %L2553, %L2552, %L2550
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal void @luaL_register(%struct.lua_State* %ARG1, i8* %ARG2, %struct.luaL_Reg* %ARG3) {
L2555:
  call void @luaI_openlib(%struct.lua_State* %ARG1, i8* %ARG2, %struct.luaL_Reg* %ARG3, i32 0)
  ret void
}

declare void @luaI_openlib(%struct.lua_State*, i8*, %struct.luaL_Reg*, i32)

define internal i32 @libsize(%struct.luaL_Reg* %ARG1) {
L2556:
  %0 = alloca %struct.luaL_Reg*
  %1 = alloca i32
  store %struct.luaL_Reg* %ARG1, %struct.luaL_Reg** %0
  store i32 0, i32* %1
  br label %L2557

L2557:                                            ; preds = %L2558, %L2556
  %2 = load %struct.luaL_Reg*, %struct.luaL_Reg** %0
  %3 = bitcast %struct.luaL_Reg* %2 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i8**
  %load_target = load i8*, i8** %6
  %7 = load i32, i32* %1
  %cond = icmp ne i8* %load_target, null
  br i1 %cond, label %L2558, label %L2559

L2558:                                            ; preds = %L2557
  %R14549 = add i32 %7, 1
  store i32 %R14549, i32* %1
  %8 = bitcast %struct.luaL_Reg* %2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, %struct.luaL_Reg* inttoptr (i64 16 to %struct.luaL_Reg*)
  %10 = bitcast i8* %9 to %struct.luaL_Reg*
  store %struct.luaL_Reg* %10, %struct.luaL_Reg** %0
  br label %L2557

L2559:                                            ; preds = %L2557
  ret i32 %7
}

define internal void @luaI_openlib.143(%struct.lua_State* %ARG1, i8* %ARG2, %struct.luaL_Reg* %ARG3, i32 %ARG4) {
L2560:
  %0 = alloca %struct.luaL_Reg*
  %1 = alloca i32
  store %struct.luaL_Reg* %ARG3, %struct.luaL_Reg** %0
  %cond = icmp ne i8* %ARG2, null
  br i1 %cond, label %L2561, label %L2566

L2561:                                            ; preds = %L2560
  %R14556 = call i32 @libsize(%struct.luaL_Reg* %ARG3)
  %R14559 = call i8* @luaL_findtable(%struct.lua_State* %ARG1, i32 -10000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.144, i64 0, i64 0), i32 1)
  call void @lua_getfield(%struct.lua_State* %ARG1, i32 -1, i8* %ARG2)
  %R14563 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %R14564 = icmp eq i32 %R14563, 5
  %R145641 = zext i1 %R14564 to i32
  store %struct.luaL_Reg* %ARG3, %struct.luaL_Reg** %0
  %cond2 = icmp ne i32 %R145641, 0
  br i1 %cond2, label %L2565, label %L2562

L2562:                                            ; preds = %L2561
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  %R14569 = call i8* @luaL_findtable(%struct.lua_State* %ARG1, i32 -10002, i8* %ARG2, i32 %R14556)
  %cond3 = icmp ne i8* %R14569, null
  br i1 %cond3, label %L2563, label %L2564

L2563:                                            ; preds = %L2562
  %R14574 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.145, i64 0, i64 0), i8* %ARG2)
  br label %L2564

L2564:                                            ; preds = %L2563, %L2562
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -1)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -3, i8* %ARG2)
  br label %L2565

L2565:                                            ; preds = %L2564, %L2561
  call void @lua_remove(%struct.lua_State* %ARG1, i32 -2)
  %R14581 = add i32 %ARG4, 1
  %R14582 = sub i32 0, %R14581
  call void @lua_insert(%struct.lua_State* %ARG1, i32 %R14582)
  br label %L2566

L2566:                                            ; preds = %L2570, %L2565, %L2560
  %2 = load %struct.luaL_Reg*, %struct.luaL_Reg** %0
  %3 = bitcast %struct.luaL_Reg* %2 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i8**
  %load_target = load i8*, i8** %6
  %cond4 = icmp ne i8* %load_target, null
  br i1 %cond4, label %L2567, label %L2571

L2567:                                            ; preds = %L2566
  store i32 0, i32* %1
  br label %L2568

L2568:                                            ; preds = %L2569, %L2567
  %7 = load i32, i32* %1
  %R14587 = icmp slt i32 %7, %ARG4
  %R145875 = zext i1 %R14587 to i32
  %cond6 = icmp ne i32 %R145875, 0
  br i1 %cond6, label %L2569, label %L2570

L2569:                                            ; preds = %L2568
  %R14590 = sub i32 0, %ARG4
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 %R14590)
  %R14592 = add i32 %7, 1
  store i32 %R14592, i32* %1
  br label %L2568

L2570:                                            ; preds = %L2568
  %8 = bitcast %struct.luaL_Reg* %2 to i32 (%struct.lua_State*)**
  %9 = bitcast i32 (%struct.lua_State*)** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32 (%struct.lua_State*)**
  %load_target7 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %11
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %load_target7, i32 %ARG4)
  %R14599 = add i32 %ARG4, 2
  %R14600 = sub i32 0, %R14599
  %12 = bitcast %struct.luaL_Reg* %2 to i8**
  %13 = bitcast i8** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i8**
  %load_target8 = load i8*, i8** %15
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 %R14600, i8* %load_target8)
  %16 = bitcast %struct.luaL_Reg* %2 to i8*
  %17 = getelementptr inbounds i8, i8* %16, %struct.luaL_Reg* inttoptr (i64 16 to %struct.luaL_Reg*)
  %18 = bitcast i8* %17 to %struct.luaL_Reg*
  store %struct.luaL_Reg* %18, %struct.luaL_Reg** %0
  br label %L2566

L2571:                                            ; preds = %L2566
  %R14607 = sub i32 0, %ARG4
  %R14608 = add i32 %R14607, -1
  call void @lua_settop(%struct.lua_State* %ARG1, i32 %R14608)
  ret void
}

declare i8* @luaL_findtable(%struct.lua_State*, i32, i8*, i32)

define internal i8* @luaL_findtable.146(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3, i32 %ARG4) {
L2572:
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i8*
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 %ARG2)
  store i8* %ARG3, i8** %0
  br label %L2573

L2573:                                            ; preds = %L2579, %L2572
  %3 = load i8*, i8** %0
  %R14612 = call i8* @strchr(i8* %3, i32 46)
  store i8* %R14612, i8** %1
  %cond = icmp ne i8* %R14612, null
  br i1 %cond, label %L2575, label %L2574

L2574:                                            ; preds = %L2573
  %R14617 = call i64 @strlen(i8* %3)
  %4 = getelementptr inbounds i8, i8* %3, i64 %R14617
  store i8* %4, i8** %1
  br label %L2575

L2575:                                            ; preds = %L2574, %L2573
  %5 = load i8*, i8** %1
  %R14623 = sub i8* %5, %3
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* %3, i8* %R14623)
  call void @lua_rawget(%struct.lua_State* %ARG1, i32 -2)
  %R14627 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %cond1 = icmp ne i32 %R14627, 0
  br i1 %cond1, label %L2577, label %L2576

L2576:                                            ; preds = %L2575
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %load_target = load i8, i8* %6
  %R14634 = sext i8 %load_target to i32
  %R14635 = icmp eq i32 %R14634, 46
  %R146352 = zext i1 %R14635 to i32
  %cond3 = icmp ne i32 %R146352, 0
  %select = select i1 %cond3, i32 1, i32 %ARG4
  call void @lua_createtable(%struct.lua_State* %ARG1, i32 0, i32 %select)
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* %3, i8* %R14623)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_settable(%struct.lua_State* %ARG1, i32 -4)
  br label %L2579

L2577:                                            ; preds = %L2575
  %R14646 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %R14647 = icmp eq i32 %R14646, 5
  %R146474 = zext i1 %R14647 to i32
  %cond5 = icmp ne i32 %R146474, 0
  br i1 %cond5, label %L2579, label %L2578

L2578:                                            ; preds = %L2577
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -3)
  store i8* %3, i8** %2
  br label %L2581

L2579:                                            ; preds = %L2577, %L2576
  call void @lua_remove(%struct.lua_State* %ARG1, i32 -2)
  %7 = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %7, i8** %0
  %8 = getelementptr inbounds i8, i8* %5, i64 0
  %load_target6 = load i8, i8* %8
  %R14656 = sext i8 %load_target6 to i32
  %R14657 = icmp eq i32 %R14656, 46
  %R146577 = zext i1 %R14657 to i32
  %cond8 = icmp ne i32 %R146577, 0
  br i1 %cond8, label %L2573, label %L2580

L2580:                                            ; preds = %L2579
  store i8* null, i8** %2
  br label %L2581

L2581:                                            ; preds = %L2580, %L2578
  %9 = load i8*, i8** %2
  ret i8* %9
}

define internal i32 @emptybuffer(%struct.luaL_Buffer* %ARG1) {
L2582:
  %0 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %1 = bitcast i8** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i8**
  %load_target = load i8*, i8** %3
  %4 = bitcast %struct.luaL_Buffer* %ARG1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i32 24
  %6 = bitcast i8* %5 to %struct.luaL_Buffer*
  %R14662 = sub i8* %load_target, %struct.luaL_Buffer* %6
  %R14666 = icmp ne i8* %R14662, i64 0
  %R146661 = zext i1 %R14666 to i32
  %cond = icmp ne i8* %R14662, null
  br i1 %cond, label %L2583, label %L2584

L2583:                                            ; preds = %L2582
  %7 = bitcast %struct.luaL_Buffer* %ARG1 to %struct.lua_State**
  %8 = bitcast %struct.lua_State** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to %struct.lua_State**
  %load_target2 = load %struct.lua_State*, %struct.lua_State** %10
  call void @lua_pushlstring(%struct.lua_State* %load_target2, %struct.luaL_Buffer* %6, i8* %R14662)
  %11 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %12 = bitcast i8** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to i8**
  store %struct.luaL_Buffer* %6, i8** %14
  %15 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i32*
  %load_target3 = load i32, i32* %18
  %R14677 = add i32 %load_target3, 1
  %19 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %R14677, i32* %22
  br label %L2584

L2584:                                            ; preds = %L2583, %L2582
  ret i32 %R146661
}

define internal void @adjuststack(%struct.luaL_Buffer* %ARG1) {
L2585:
  %0 = alloca i32
  %1 = alloca i64
  %2 = alloca i32
  %3 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  %load_target = load i32, i32* %6
  %R14680 = icmp sgt i32 %load_target, 1
  %R146801 = zext i1 %R14680 to i32
  %cond = icmp ne i32 %R146801, 0
  br i1 %cond, label %L2586, label %L2590

L2586:                                            ; preds = %L2585
  %7 = bitcast %struct.luaL_Buffer* %ARG1 to %struct.lua_State**
  %8 = bitcast %struct.lua_State** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to %struct.lua_State**
  %load_target2 = load %struct.lua_State*, %struct.lua_State** %10
  %R14684 = call i64 @lua_objlen(%struct.lua_State* %load_target2, i32 -1)
  store i32 1, i32* %0
  store i64 %R14684, i64* %1
  br label %L2587

L2587:                                            ; preds = %L2588, %L2586
  %11 = load i32, i32* %0
  %R14687 = add i32 %11, 1
  %R14688 = sub i32 0, %R14687
  %R14689 = call i64 @lua_objlen(%struct.lua_State* %load_target2, i32 %R14688)
  %12 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %load_target3 = load i32, i32* %15
  %R14693 = sub i32 %load_target3, %11
  %R14694 = add i32 %R14693, 1
  %R14695 = icmp sge i32 %R14694, 10
  %R146954 = zext i1 %R14695 to i32
  %16 = load i64, i64* %1
  %R14698 = icmp ugt i64 %16, %R14689
  %R146985 = zext i1 %R14698 to i32
  %17 = icmp ne i32 %R146954, 0
  %18 = icmp ne i32 %R146985, 0
  %R14699 = or i1 %17, %18
  %R146996 = zext i1 %R14699 to i32
  store i32 %11, i32* %2
  %cond7 = icmp ne i32 %R146996, 0
  br i1 %cond7, label %L2588, label %L2589

L2588:                                            ; preds = %L2587
  %R14703 = add i64 %16, %R14689
  store i32 %R14687, i32* %0
  store i64 %R14703, i64* %1
  %R14710 = icmp slt i32 %R14687, %load_target3
  %R147108 = zext i1 %R14710 to i32
  store i32 %R14687, i32* %2
  %cond9 = icmp ne i32 %R147108, 0
  br i1 %cond9, label %L2587, label %L2589

L2589:                                            ; preds = %L2588, %L2587
  %19 = load i32, i32* %2
  call void @lua_concat(%struct.lua_State* %load_target2, i32 %19)
  %20 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %21 = bitcast i32* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  %load_target10 = load i32, i32* %23
  %R14716 = sub i32 %load_target10, %19
  %R14717 = add i32 %R14716, 1
  %24 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %25 = bitcast i32* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 %R14717, i32* %27
  br label %L2590

L2590:                                            ; preds = %L2589, %L2585
  ret void
}

define internal i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG1) {
L2591:
  %R14720 = call i32 @emptybuffer(%struct.luaL_Buffer* %ARG1)
  %cond = icmp ne i32 %R14720, 0
  br i1 %cond, label %L2592, label %L2593

L2592:                                            ; preds = %L2591
  call void @adjuststack(%struct.luaL_Buffer* %ARG1)
  br label %L2593

L2593:                                            ; preds = %L2592, %L2591
  %0 = bitcast %struct.luaL_Buffer* %ARG1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i32 24
  %2 = bitcast i8* %1 to %struct.luaL_Buffer*
  ret %struct.luaL_Buffer* %2
}

define internal void @luaL_addlstring(%struct.luaL_Buffer* %ARG1, i8* %ARG2, i64 %ARG3) {
L2594:
  %0 = alloca i64
  %1 = alloca i8*
  store i8* %ARG2, i8** %1
  store i64 %ARG3, i64* %0
  br label %L2595

L2595:                                            ; preds = %L2598, %L2594
  %2 = load i64, i64* %0
  %R14726 = add i64 %2, -1
  store i64 %R14726, i64* %0
  %cond = icmp ne i64 %2, 0
  br i1 %cond, label %L2596, label %L2599

L2596:                                            ; preds = %L2595
  %3 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i8**
  %load_target = load i8*, i8** %6
  %7 = bitcast %struct.luaL_Buffer* %ARG1 to i8*
  %8 = getelementptr inbounds i8, i8* %7, inttoptr (i64 8216 to i8*)
  %9 = bitcast i8* %8 to %struct.luaL_Buffer*
  %R14732 = icmp ult i8* %load_target, %struct.luaL_Buffer* %9
  %R147321 = zext i1 %R14732 to i32
  %cond2 = icmp ne i32 %R147321, 0
  br i1 %cond2, label %L2598, label %L2597

L2597:                                            ; preds = %L2596
  %R14734 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG1)
  br label %L2598

L2598:                                            ; preds = %L2597, %L2596
  %10 = load i8*, i8** %1
  %11 = getelementptr inbounds i8, i8* %10, inttoptr (i64 1 to i8*)
  %12 = getelementptr inbounds i8, i8* %10, i64 0
  %load_target3 = load i8, i8* %12
  %13 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %14 = bitcast i8** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to i8**
  %load_target4 = load i8*, i8** %16
  %17 = getelementptr inbounds i8, i8* %load_target4, inttoptr (i64 1 to i8*)
  %18 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %19 = bitcast i8** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to i8**
  store i8* %17, i8** %21
  %22 = getelementptr inbounds i8, i8* %load_target4, i64 0
  store i8 %load_target3, i8* %22
  store i8* %11, i8** %1
  br label %L2595

L2599:                                            ; preds = %L2595
  ret void
}

define internal void @luaL_pushresult(%struct.luaL_Buffer* %ARG1) {
L2600:
  %R14744 = call i32 @emptybuffer(%struct.luaL_Buffer* %ARG1)
  %0 = bitcast %struct.luaL_Buffer* %ARG1 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %3
  %4 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  %load_target1 = load i32, i32* %7
  call void @lua_concat(%struct.lua_State* %load_target, i32 %load_target1)
  %8 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %9 = bitcast i32* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11
  ret void
}

define internal void @luaL_addvalue(%struct.luaL_Buffer* %ARG1) {
L2601:
  %vl_0x62d000e8d3d8 = alloca i64
  %0 = bitcast %struct.luaL_Buffer* %ARG1 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %3
  %R14754 = call i8* @lua_tolstring(%struct.lua_State* %load_target, i32 -1, i64* %vl_0x62d000e8d3d8)
  %4 = bitcast i64* %vl_0x62d000e8d3d8 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i64*
  %load_target1 = load i64, i64* %6
  %7 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %8 = bitcast i8** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i8**
  %load_target2 = load i8*, i8** %10
  %11 = bitcast %struct.luaL_Buffer* %ARG1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i32 24
  %13 = bitcast i8* %12 to %struct.luaL_Buffer*
  %R14760 = sub i8* %load_target2, %struct.luaL_Buffer* %13
  %R14761 = sub i64 8192, i8* %R14760
  %R14763 = icmp ule i64 %load_target1, %R14761
  %R147633 = zext i1 %R14763 to i32
  %cond = icmp ne i32 %R147633, 0
  br i1 %cond, label %L2602, label %L2603

L2602:                                            ; preds = %L2601
  %R14770 = call i8* @memcpy(i8* %load_target2, i8* %R14754, i64 %load_target1)
  %14 = bitcast i64* %vl_0x62d000e8d3d8 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to i64*
  %load_target4 = load i64, i64* %16
  %17 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %18 = bitcast i8** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i8**
  %load_target5 = load i8*, i8** %20
  %R14774 = ptrtoint i8* %load_target5 to i64
  %R14775 = add i64 %R14774, %load_target4
  %R14776 = inttoptr i64 %R14775 to i8*
  %21 = bitcast %struct.luaL_Buffer* %ARG1 to i8**
  %22 = bitcast i8** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to i8**
  store i8* %R14776, i8** %24
  call void @lua_settop(%struct.lua_State* %load_target, i32 -2)
  br label %L2606

L2603:                                            ; preds = %L2601
  %R14779 = call i32 @emptybuffer(%struct.luaL_Buffer* %ARG1)
  %cond6 = icmp ne i32 %R14779, 0
  br i1 %cond6, label %L2604, label %L2605

L2604:                                            ; preds = %L2603
  call void @lua_insert(%struct.lua_State* %load_target, i32 -2)
  br label %L2605

L2605:                                            ; preds = %L2604, %L2603
  %25 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = bitcast i8* %27 to i32*
  %load_target7 = load i32, i32* %28
  %R14783 = add i32 %load_target7, 1
  %29 = bitcast %struct.luaL_Buffer* %ARG1 to i32*
  %30 = bitcast i32* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %R14783, i32* %32
  call void @adjuststack(%struct.luaL_Buffer* %ARG1)
  br label %L2606

L2606:                                            ; preds = %L2605, %L2602
  ret void
}

define internal void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %ARG2) {
L2607:
  %0 = bitcast %struct.luaL_Buffer* %ARG2 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_State**
  store %struct.lua_State* %ARG1, %struct.lua_State** %3
  %4 = bitcast %struct.luaL_Buffer* %ARG2 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i32 24
  %6 = bitcast i8* %5 to %struct.luaL_Buffer*
  %7 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %8 = bitcast i8** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i8**
  store %struct.luaL_Buffer* %6, i8** %10
  %11 = bitcast %struct.luaL_Buffer* %ARG2 to i32*
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14
  ret void
}

define internal i8* @getF(%struct.lua_State* %ARG1, i8* %ARG2, i64* %ARG3) {
L2608:
  %0 = alloca i8*
  %R14792 = bitcast i8* %ARG2 to %struct.LoadF*
  %1 = bitcast %struct.LoadF* %R14792 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %cond = icmp ne i32 %load_target, 0
  br i1 %cond, label %L2609, label %L2610

L2609:                                            ; preds = %L2608
  %5 = bitcast %struct.LoadF* %R14792 to i32*
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8
  %9 = bitcast i64* %ARG3 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to i64*
  store i64 1, i64* %11
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i64 0, i64 0), i8** %0
  br label %L2613

L2610:                                            ; preds = %L2608
  %12 = bitcast %struct.LoadF* %R14792 to %struct._IO_FILE**
  %13 = bitcast %struct._IO_FILE** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to %struct._IO_FILE**
  %load_target1 = load %struct._IO_FILE*, %struct._IO_FILE** %15
  %R14802 = call i32 @feof(%struct._IO_FILE* %load_target1)
  %cond2 = icmp ne i32 %R14802, 0
  br i1 %cond2, label %L2611, label %L2612

L2611:                                            ; preds = %L2610
  store i8* null, i8** %0
  br label %L2613

L2612:                                            ; preds = %L2610
  %16 = bitcast %struct.LoadF* %R14792 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i32 16
  %18 = bitcast i8* %17 to %struct.LoadF*
  %R14805 = bitcast %struct.LoadF* %18 to i8*
  %19 = bitcast %struct.LoadF* %R14792 to %struct._IO_FILE**
  %20 = bitcast %struct._IO_FILE** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to %struct._IO_FILE**
  %load_target3 = load %struct._IO_FILE*, %struct._IO_FILE** %22
  %R14808 = call i64 @fread(i8* %R14805, i64 1, i64 8192, %struct._IO_FILE* %load_target3)
  %23 = bitcast i64* %ARG3 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %25 = bitcast i8* %24 to i64*
  store i64 %R14808, i64* %25
  %R14814 = icmp ugt i64 %R14808, 0
  %R148144 = zext i1 %R14814 to i32
  %cond5 = icmp ne i32 %R148144, 0
  %select = select i1 %cond5, %struct.LoadF* %18, i8* null
  store %struct.LoadF* %select, i8** %0
  br label %L2613

L2613:                                            ; preds = %L2612, %L2611, %L2609
  %26 = load i8*, i8** %0
  ret i8* %26
}

declare i32 @feof(%struct._IO_FILE*)

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*)

define internal i32 @errfile(%struct.lua_State* %ARG1, i8* %ARG2, i32 %ARG3) {
L2614:
  %R14816 = call i32* @__errno_location()
  %0 = bitcast i32* %R14816 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i32*
  %load_target = load i32, i32* %2
  %R14818 = call i8* @strerror(i32 %load_target)
  %R14821 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 %ARG3, i64* null)
  %3 = getelementptr inbounds i8, i8* %R14821, i64 1
  %R14828 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.148, i64 0, i64 0), i8* %ARG2, i8* %3, i8* %R14818)
  call void @lua_remove(%struct.lua_State* %ARG1, i32 %ARG3)
  ret i32 6
}

declare i32* @__errno_location()

declare i8* @strerror(i32)

define internal i32 @luaL_loadfile(%struct.lua_State* %ARG1, i8* %ARG2) {
L2615:
  %lf_0x62d000ea68a0 = alloca %struct.LoadF
  %0 = alloca %struct._IO_FILE*
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %R14833 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  %R14834 = add i32 %R14833, 1
  %4 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to i32*
  %5 = bitcast i32* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7
  %cond = icmp ne i8* %ARG2, null
  br i1 %cond, label %L2617, label %L2616

L2616:                                            ; preds = %L2615
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i64 0, i64 0), i64 6)
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** @stdin
  %8 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %9 = bitcast %struct._IO_FILE** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to %struct._IO_FILE**
  store %struct._IO_FILE* %load_target, %struct._IO_FILE** %11
  store %struct._IO_FILE* %load_target, %struct._IO_FILE** %0
  br label %L2619

L2617:                                            ; preds = %L2615
  %R14843 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.150, i64 0, i64 0), i8* %ARG2)
  %R14846 = call %struct._IO_FILE* @fopen(i8* %ARG2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i64 0, i64 0))
  %12 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %13 = bitcast %struct._IO_FILE** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to %struct._IO_FILE**
  store %struct._IO_FILE* %R14846, %struct._IO_FILE** %15
  store %struct._IO_FILE* %R14846, %struct._IO_FILE** %0
  %cond1 = icmp ne %struct._IO_FILE* %R14846, null
  br i1 %cond1, label %L2619, label %L2618

L2618:                                            ; preds = %L2617
  %R14852 = call i32 @errfile(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.152, i64 0, i64 0), i32 %R14834)
  store i32 %R14852, i32* %3
  br label %L2634

L2619:                                            ; preds = %L2617, %L2616
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %0
  %R14855 = call i32 @_IO_getc(%struct._IO_FILE* %16)
  %R14857 = icmp eq i32 %R14855, 35
  %R148572 = zext i1 %R14857 to i32
  store i32 %R14855, i32* %1
  %cond3 = icmp ne i32 %R148572, 0
  br i1 %cond3, label %L2620, label %L2624

L2620:                                            ; preds = %L2619
  %17 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to i32*
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20
  br label %L2621

L2621:                                            ; preds = %L2621, %L2620
  %21 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %22 = bitcast %struct._IO_FILE** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to %struct._IO_FILE**
  %load_target4 = load %struct._IO_FILE*, %struct._IO_FILE** %24
  %R14859 = call i32 @_IO_getc(%struct._IO_FILE* %load_target4)
  %R14860 = icmp ne i32 %R14859, -1
  %R148605 = zext i1 %R14860 to i32
  %R14862 = icmp ne i32 %R14859, 10
  %R148626 = zext i1 %R14862 to i32
  %25 = icmp ne i32 %R148605, 0
  %26 = icmp ne i32 %R148626, 0
  %R14863 = and i1 %25, %26
  %R148637 = zext i1 %R14863 to i32
  %cond8 = icmp ne i32 %R148637, 0
  br i1 %cond8, label %L2621, label %L2622

L2622:                                            ; preds = %L2621
  %R14865 = icmp eq i32 %R14859, 10
  %R148659 = zext i1 %R14865 to i32
  store i32 %R14859, i32* %1
  %cond10 = icmp ne i32 %R148659, 0
  br i1 %cond10, label %L2623, label %L2624

L2623:                                            ; preds = %L2622
  %27 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %28 = bitcast %struct._IO_FILE** %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to %struct._IO_FILE**
  %load_target11 = load %struct._IO_FILE*, %struct._IO_FILE** %30
  %R14867 = call i32 @_IO_getc(%struct._IO_FILE* %load_target11)
  store i32 %R14867, i32* %1
  br label %L2624

L2624:                                            ; preds = %L2623, %L2622, %L2619
  %31 = load i32, i32* %1
  %load_target12 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i64 0, i64 0)
  %R14870 = sext i8 %load_target12 to i32
  %R14871 = icmp eq i32 %31, %R14870
  %R1487113 = zext i1 %R14871 to i32
  %32 = icmp ne i32 %R1487113, 0
  %33 = icmp ne i8* %ARG2, null
  %R14873 = and i1 %32, %33
  %R1487314 = zext i1 %R14873 to i32
  store i32 %31, i32* %2
  %cond15 = icmp ne i32 %R1487314, 0
  br i1 %cond15, label %L2625, label %L2629

L2625:                                            ; preds = %L2624
  %34 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %35 = bitcast %struct._IO_FILE** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 8
  %37 = bitcast i8* %36 to %struct._IO_FILE**
  %load_target16 = load %struct._IO_FILE*, %struct._IO_FILE** %37
  %R14877 = call %struct._IO_FILE* @freopen(i8* %ARG2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154, i64 0, i64 0), %struct._IO_FILE* %load_target16)
  %38 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %39 = bitcast %struct._IO_FILE** %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to %struct._IO_FILE**
  store %struct._IO_FILE* %R14877, %struct._IO_FILE** %41
  %cond17 = icmp ne %struct._IO_FILE* %R14877, null
  br i1 %cond17, label %L2627, label %L2626

L2626:                                            ; preds = %L2625
  %R14883 = call i32 @errfile(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i64 0, i64 0), i32 %R14834)
  store i32 %R14883, i32* %3
  br label %L2634

L2627:                                            ; preds = %L2627, %L2625
  %42 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %43 = bitcast %struct._IO_FILE** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = bitcast i8* %44 to %struct._IO_FILE**
  %load_target18 = load %struct._IO_FILE*, %struct._IO_FILE** %45
  %R14885 = call i32 @_IO_getc(%struct._IO_FILE* %load_target18)
  %R14886 = icmp ne i32 %R14885, -1
  %R1488619 = zext i1 %R14886 to i32
  %load_target20 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.156, i64 0, i64 0)
  %R14889 = sext i8 %load_target20 to i32
  %R14890 = icmp ne i32 %R14885, %R14889
  %R1489021 = zext i1 %R14890 to i32
  %46 = icmp ne i32 %R1488619, 0
  %47 = icmp ne i32 %R1489021, 0
  %R14891 = and i1 %46, %47
  %R1489122 = zext i1 %R14891 to i32
  store i32 %R14885, i32* %2
  %cond23 = icmp ne i32 %R1489122, 0
  br i1 %cond23, label %L2627, label %L2628

L2628:                                            ; preds = %L2627
  %48 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to i32*
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 0
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51
  br label %L2629

L2629:                                            ; preds = %L2628, %L2624
  %52 = load i32, i32* %2
  %53 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %54 = bitcast %struct._IO_FILE** %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = bitcast i8* %55 to %struct._IO_FILE**
  %load_target24 = load %struct._IO_FILE*, %struct._IO_FILE** %56
  %R14894 = call i32 @ungetc(i32 %52, %struct._IO_FILE* %load_target24)
  %R14898 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to i8*
  %R14900 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 -1, i64* null)
  %R14901 = call i32 @lua_load(%struct.lua_State* %ARG1, i8* (%struct.lua_State*, i8*, i64*)* @getF, i8* %R14898, i8* %R14900)
  %57 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %58 = bitcast %struct._IO_FILE** %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  %60 = bitcast i8* %59 to %struct._IO_FILE**
  %load_target25 = load %struct._IO_FILE*, %struct._IO_FILE** %60
  %R14903 = call i32 @ferror(%struct._IO_FILE* %load_target25)
  %cond26 = icmp ne i8* %ARG2, null
  br i1 %cond26, label %L2630, label %L2631

L2630:                                            ; preds = %L2629
  %61 = bitcast %struct.LoadF* %lf_0x62d000ea68a0 to %struct._IO_FILE**
  %62 = bitcast %struct._IO_FILE** %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to %struct._IO_FILE**
  %load_target27 = load %struct._IO_FILE*, %struct._IO_FILE** %64
  %R14906 = call i32 @fclose(%struct._IO_FILE* %load_target27)
  br label %L2631

L2631:                                            ; preds = %L2630, %L2629
  %cond28 = icmp ne i32 %R14903, 0
  br i1 %cond28, label %L2632, label %L2633

L2632:                                            ; preds = %L2631
  call void @lua_settop(%struct.lua_State* %ARG1, i32 %R14834)
  %R14913 = call i32 @errfile(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.157, i64 0, i64 0), i32 %R14834)
  store i32 %R14913, i32* %3
  br label %L2634

L2633:                                            ; preds = %L2631
  call void @lua_remove(%struct.lua_State* %ARG1, i32 %R14834)
  store i32 %R14901, i32* %3
  br label %L2634

L2634:                                            ; preds = %L2633, %L2632, %L2626, %L2618
  %65 = load i32, i32* %3
  ret i32 %65
}

declare %struct._IO_FILE* @fopen(i8*, i8*)

declare i32 @_IO_getc(%struct._IO_FILE*)

declare %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*)

declare i32 @ungetc(i32, %struct._IO_FILE*)

declare i32 @ferror(%struct._IO_FILE*)

declare i32 @fclose(%struct._IO_FILE*)

define internal i8* @getS(%struct.lua_State* %ARG1, i8* %ARG2, i64* %ARG3) {
L2635:
  %0 = alloca i8*
  %R14918 = bitcast i8* %ARG2 to %struct.LoadS*
  %1 = bitcast %struct.LoadS* %R14918 to i64*
  %2 = bitcast i64* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i64*
  %load_target = load i64, i64* %4
  %cond = icmp ne i64 %load_target, 0
  br i1 %cond, label %L2637, label %L2636

L2636:                                            ; preds = %L2635
  store i8* null, i8** %0
  br label %L2638

L2637:                                            ; preds = %L2635
  %5 = bitcast i64* %ARG3 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i64*
  store i64 %load_target, i64* %7
  %8 = bitcast %struct.LoadS* %R14918 to i64*
  %9 = bitcast i64* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11
  %12 = bitcast %struct.LoadS* %R14918 to i8**
  %13 = bitcast i8** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i8**
  %load_target1 = load i8*, i8** %15
  store i8* %load_target1, i8** %0
  br label %L2638

L2638:                                            ; preds = %L2637, %L2636
  %16 = load i8*, i8** %0
  ret i8* %16
}

define internal i32 @luaL_loadbuffer(%struct.lua_State* %ARG1, i8* %ARG2, i64 %ARG3, i8* %ARG4) {
L2639:
  %ls_0x62d000ea95f0 = alloca %struct.LoadS
  %0 = bitcast %struct.LoadS* %ls_0x62d000ea95f0 to i8**
  %1 = bitcast i8** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i8**
  store i8* %ARG2, i8** %3
  %4 = bitcast %struct.LoadS* %ls_0x62d000ea95f0 to i64*
  %5 = bitcast i64* %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %ARG3, i64* %7
  %R14935 = bitcast %struct.LoadS* %ls_0x62d000ea95f0 to i8*
  %R14937 = call i32 @lua_load(%struct.lua_State* %ARG1, i8* (%struct.lua_State*, i8*, i64*)* @getS, i8* %R14935, i8* %ARG4)
  ret i32 %R14937
}

define internal i8* @l_alloc(i8* %ARG1, i8* %ARG2, i64 %ARG3, i64 %ARG4) {
L2640:
  %0 = alloca i8*
  %cond = icmp ne i64 %ARG4, 0
  br i1 %cond, label %L2642, label %L2641

L2641:                                            ; preds = %L2640
  call void @free(i8* %ARG2)
  store i8* null, i8** %0
  br label %L2643

L2642:                                            ; preds = %L2640
  %R14947 = call i8* @realloc(i8* %ARG2, i64 %ARG4)
  store i8* %R14947, i8** %0
  br label %L2643

L2643:                                            ; preds = %L2642, %L2641
  %1 = load i8*, i8** %0
  ret i8* %1
}

declare void @free(i8*)

declare i8* @realloc(i8*, i64)

define internal i32 @panic(%struct.lua_State* %ARG1) {
L2644:
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** @stderr
  %R14952 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 -1, i64* null)
  %R14953 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %load_target, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.158, i64 0, i64 0), i8* %R14952)
  ret i32 0
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...)

define internal %struct.lua_State* @luaL_newstate() {
L2645:
  %R14956 = call %struct.lua_State* @lua_newstate(i8* (i8*, i8*, i64, i64)* @l_alloc, i8* null)
  %cond = icmp ne %struct.lua_State* %R14956, null
  br i1 %cond, label %L2646, label %L2647

L2646:                                            ; preds = %L2645
  %R14960 = call i32 (%struct.lua_State*)* @lua_atpanic(%struct.lua_State* %R14956, i32 (%struct.lua_State*)* @panic)
  br label %L2647

L2647:                                            ; preds = %L2646, %L2645
  ret %struct.lua_State* %R14956
}

define internal i32 @luaB_tonumber(%struct.lua_State* %ARG1) {
L2648:
  %s2_0x62d000eabce8 = alloca i8*
  %R14964 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 2, i64 10)
  %R14965 = trunc i64 %R14964 to i32
  %R14967 = icmp eq i32 %R14965, 10
  %R149671 = zext i1 %R14967 to i32
  %cond = icmp ne i32 %R149671, 0
  br i1 %cond, label %L2649, label %L2651

L2649:                                            ; preds = %L2648
  call void @luaL_checkany(%struct.lua_State* %ARG1, i32 1)
  %R14970 = call i32 @lua_isnumber(%struct.lua_State* %ARG1, i32 1)
  %cond2 = icmp ne i32 %R14970, 0
  br i1 %cond2, label %L2650, label %L2658

L2650:                                            ; preds = %L2649
  %R14973 = call double @lua_tonumber(%struct.lua_State* %ARG1, i32 1)
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R14973)
  br label %L2659

L2651:                                            ; preds = %L2648
  %R14976 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* null)
  %R14978 = icmp sle i32 2, %R14965
  %R149783 = zext i1 %R14978 to i32
  %R14980 = icmp sle i32 %R14965, 36
  %R149804 = zext i1 %R14980 to i32
  %0 = icmp ne i32 %R149783, 0
  %1 = icmp ne i32 %R149804, 0
  %R14981 = and i1 %0, %1
  %R149815 = zext i1 %R14981 to i32
  %cond6 = icmp ne i32 %R149815, 0
  br i1 %cond6, label %L2653, label %L2652

L2652:                                            ; preds = %L2651
  %R14984 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.159, i64 0, i64 0))
  br label %L2653

L2653:                                            ; preds = %L2652, %L2651
  %R14989 = call i64 @strtoul(i8* %R14976, i8** %s2_0x62d000eabce8, i32 %R14965)
  %2 = bitcast i8** %s2_0x62d000eabce8 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i8**
  %load_target = load i8*, i8** %4
  %R14992 = icmp ne i8* %R14976, %load_target
  %R149927 = zext i1 %R14992 to i32
  %cond8 = icmp ne i32 %R149927, 0
  br i1 %cond8, label %L2654, label %L2658

L2654:                                            ; preds = %L2655, %L2653
  %R14993 = call i16** @__ctype_b_loc()
  %5 = bitcast i16** %R14993 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i16**
  %load_target9 = load i16*, i16** %7
  %8 = bitcast i8** %s2_0x62d000eabce8 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i8**
  %load_target10 = load i8*, i8** %10
  %11 = getelementptr inbounds i8, i8* %load_target10, i64 0
  %load_target11 = load i8, i8* %11
  %R14998 = zext i8 %load_target11 to i32
  %R14999 = sext i32 %R14998 to i64
  %R15000 = mul i64 %R14999, 2
  %12 = bitcast i16* %load_target9 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %R15000
  %14 = bitcast i8* %13 to i16*
  %15 = bitcast i16* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i16*
  %load_target12 = load i16, i16* %17
  %R15003 = zext i16 %load_target12 to i32
  %R15004 = and i32 %R15003, 8192
  %cond13 = icmp ne i32 %R15004, 0
  br i1 %cond13, label %L2655, label %L2656

L2655:                                            ; preds = %L2654
  %18 = getelementptr inbounds i8, i8* %load_target10, inttoptr (i64 1 to i8*)
  %19 = bitcast i8** %s2_0x62d000eabce8 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to i8**
  store i8* %18, i8** %21
  br label %L2654

L2656:                                            ; preds = %L2654
  %cond14 = icmp ne i8 %load_target11, 0
  br i1 %cond14, label %L2658, label %L2657

L2657:                                            ; preds = %L2656
  %R15013 = sitofp i64 %R14989 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R15013)
  br label %L2659

L2658:                                            ; preds = %L2656, %L2653, %L2649
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  br label %L2659

L2659:                                            ; preds = %L2658, %L2657, %L2650
  ret i32 1
}

define internal i32 @luaB_error(%struct.lua_State* %ARG1) {
L2660:
  %R15016 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 2, i64 1)
  %R15017 = trunc i64 %R15016 to i32
  call void @lua_settop(%struct.lua_State* %ARG1, i32 1)
  %R15020 = call i32 @lua_isstring(%struct.lua_State* %ARG1, i32 1)
  %R15022 = icmp sgt i32 %R15017, 0
  %R150221 = zext i1 %R15022 to i32
  %0 = icmp ne i32 %R15020, 0
  %1 = icmp ne i32 %R150221, 0
  %R15023 = and i1 %0, %1
  %R150232 = zext i1 %R15023 to i32
  %cond = icmp ne i32 %R150232, 0
  br i1 %cond, label %L2661, label %L2662

L2661:                                            ; preds = %L2660
  call void @luaL_where(%struct.lua_State* %ARG1, i32 %R15017)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 1)
  call void @lua_concat(%struct.lua_State* %ARG1, i32 2)
  br label %L2662

L2662:                                            ; preds = %L2661, %L2660
  %R15029 = call i32 @lua_error(%struct.lua_State* %ARG1)
  ret i32 %R15029
}

define internal i32 @luaB_setmetatable(%struct.lua_State* %ARG1) {
L2663:
  %R15032 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 2)
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  %R15035 = icmp eq i32 %R15032, 0
  %R150351 = zext i1 %R15035 to i32
  %R15037 = icmp eq i32 %R15032, 5
  %R150372 = zext i1 %R15037 to i32
  %0 = icmp ne i32 %R150351, 0
  %1 = icmp ne i32 %R150372, 0
  %R15038 = or i1 %0, %1
  %R150383 = zext i1 %R15038 to i32
  %cond = icmp ne i32 %R150383, 0
  br i1 %cond, label %L2665, label %L2664

L2664:                                            ; preds = %L2663
  %R15041 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.160, i64 0, i64 0))
  br label %L2665

L2665:                                            ; preds = %L2664, %L2663
  %R15045 = call i32 @luaL_getmetafield(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i64 0, i64 0))
  %cond4 = icmp ne i32 %R15045, 0
  br i1 %cond4, label %L2666, label %L2667

L2666:                                            ; preds = %L2665
  %R15048 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.162, i64 0, i64 0))
  br label %L2667

L2667:                                            ; preds = %L2666, %L2665
  call void @lua_settop(%struct.lua_State* %ARG1, i32 2)
  %R15051 = call i32 @lua_setmetatable(%struct.lua_State* %ARG1, i32 1)
  ret i32 1
}

define internal void @getfunc(%struct.lua_State* %ARG1, i32 %ARG2) {
L2668:
  %ar_0x62d000ead818 = alloca %struct.lua_Debug
  %0 = alloca i32
  %R15054 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 1)
  %R15055 = icmp eq i32 %R15054, 6
  %R150551 = zext i1 %R15055 to i32
  %cond = icmp ne i32 %R150551, 0
  br i1 %cond, label %L2669, label %L2670

L2669:                                            ; preds = %L2668
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 1)
  br label %L2679

L2670:                                            ; preds = %L2668
  %cond2 = icmp ne i32 %ARG2, 0
  br i1 %cond2, label %L2671, label %L2672

L2671:                                            ; preds = %L2670
  %R15059 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 1, i64 1)
  %R15060 = trunc i64 %R15059 to i32
  store i32 %R15060, i32* %0
  br label %L2673

L2672:                                            ; preds = %L2670
  %R15062 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 1)
  %R15063 = trunc i64 %R15062 to i32
  store i32 %R15063, i32* %0
  br label %L2673

L2673:                                            ; preds = %L2672, %L2671
  %1 = load i32, i32* %0
  %R15066 = icmp sge i32 %1, 0
  %R150663 = zext i1 %R15066 to i32
  %cond4 = icmp ne i32 %R150663, 0
  br i1 %cond4, label %L2675, label %L2674

L2674:                                            ; preds = %L2673
  %R15069 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.163, i64 0, i64 0))
  br label %L2675

L2675:                                            ; preds = %L2674, %L2673
  %R15074 = call i32 @lua_getstack(%struct.lua_State* %ARG1, i32 %1, %struct.lua_Debug* %ar_0x62d000ead818)
  %cond5 = icmp ne i32 %R15074, 0
  br i1 %cond5, label %L2677, label %L2676

L2676:                                            ; preds = %L2675
  %R15078 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.164, i64 0, i64 0))
  br label %L2677

L2677:                                            ; preds = %L2676, %L2675
  %R15082 = call i32 @lua_getinfo(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.165, i64 0, i64 0), %struct.lua_Debug* %ar_0x62d000ead818)
  %R15084 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %cond6 = icmp ne i32 %R15084, 0
  br i1 %cond6, label %L2679, label %L2678

L2678:                                            ; preds = %L2677
  %R15089 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.166, i64 0, i64 0), i32 %1)
  br label %L2679

L2679:                                            ; preds = %L2678, %L2677, %L2669
  ret void
}

define internal i32 @luaB_setfenv(%struct.lua_State* %ARG1) {
L2680:
  %0 = alloca i32
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 2, i32 5)
  call void @getfunc(%struct.lua_State* %ARG1, i32 0)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 2)
  %R15094 = call i32 @lua_isnumber(%struct.lua_State* %ARG1, i32 1)
  %cond = icmp ne i32 %R15094, 0
  br i1 %cond, label %L2681, label %L2683

L2681:                                            ; preds = %L2680
  %R15096 = call double @lua_tonumber(%struct.lua_State* %ARG1, i32 1)
  %R15098 = fcmp oeq double %R15096, 0.000000e+00
  %R150981 = zext i1 %R15098 to i32
  %cond2 = icmp ne i32 %R150981, 0
  br i1 %cond2, label %L2682, label %L2683

L2682:                                            ; preds = %L2681
  %R15100 = call i32 @lua_pushthread(%struct.lua_State* %ARG1)
  call void @lua_insert(%struct.lua_State* %ARG1, i32 -2)
  %R15103 = call i32 @lua_setfenv(%struct.lua_State* %ARG1, i32 -2)
  store i32 0, i32* %0
  br label %L2687

L2683:                                            ; preds = %L2681, %L2680
  %R15106 = call i32 @lua_iscfunction(%struct.lua_State* %ARG1, i32 -2)
  %cond3 = icmp ne i32 %R15106, 0
  br i1 %cond3, label %L2685, label %L2684

L2684:                                            ; preds = %L2683
  %R15108 = call i32 @lua_setfenv(%struct.lua_State* %ARG1, i32 -2)
  %cond4 = icmp ne i32 %R15108, 0
  br i1 %cond4, label %L2686, label %L2685

L2685:                                            ; preds = %L2684, %L2683
  %R15112 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.167, i64 0, i64 0))
  br label %L2686

L2686:                                            ; preds = %L2685, %L2684
  store i32 1, i32* %0
  br label %L2687

L2687:                                            ; preds = %L2686, %L2682
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal i32 @luaB_rawget(%struct.lua_State* %ARG1) {
L2688:
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  call void @luaL_checkany(%struct.lua_State* %ARG1, i32 2)
  call void @lua_settop(%struct.lua_State* %ARG1, i32 2)
  call void @lua_rawget(%struct.lua_State* %ARG1, i32 1)
  ret i32 1
}

define internal i32 @luaB_type(%struct.lua_State* %ARG1) {
L2689:
  call void @luaL_checkany(%struct.lua_State* %ARG1, i32 1)
  %R15122 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 1)
  %R15123 = call i8* @lua_typename(%struct.lua_State* %ARG1, i32 %R15122)
  call void @lua_pushstring(%struct.lua_State* %ARG1, i8* %R15123)
  ret i32 1
}

define internal i32 @luaB_next(%struct.lua_State* %ARG1) {
L2690:
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  call void @lua_settop(%struct.lua_State* %ARG1, i32 2)
  %R15128 = call i32 @lua_next(%struct.lua_State* %ARG1, i32 1)
  %cond = icmp ne i32 %R15128, 0
  %select = select i1 %cond, i32 2, i32 1
  %cond1 = icmp ne i32 %R15128, 0
  br i1 %cond1, label %L2692, label %L2691

L2691:                                            ; preds = %L2690
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  br label %L2692

L2692:                                            ; preds = %L2691, %L2690
  ret i32 %select
}

define internal i32 @luaB_pairs(%struct.lua_State* %ARG1) {
L2693:
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -10003)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 1)
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  ret i32 3
}

define internal i32 @ipairsaux(%struct.lua_State* %ARG1) {
L2694:
  %R15137 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 2)
  %R15138 = trunc i64 %R15137 to i32
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  %R15141 = add i32 %R15138, 1
  %R15144 = sext i32 %R15141 to i64
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 %R15144)
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15141)
  %R15148 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %R15149 = icmp eq i32 %R15148, 0
  %R151491 = zext i1 %R15149 to i32
  %cond = icmp ne i32 %R151491, 0
  %select = select i1 %cond, i32 0, i32 2
  ret i32 %select
}

define internal i32 @luaB_ipairs(%struct.lua_State* %ARG1) {
L2695:
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -10003)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 1)
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 0)
  ret i32 3
}

define internal i32 @load_aux(%struct.lua_State* %ARG1, i32 %ARG2) {
L2696:
  %cond = icmp ne i32 %ARG2, 0
  %select = select i1 %cond, i32 2, i32 1
  %cond1 = icmp ne i32 %ARG2, 0
  br i1 %cond1, label %L2697, label %L2698

L2697:                                            ; preds = %L2696
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  call void @lua_insert(%struct.lua_State* %ARG1, i32 -2)
  br label %L2698

L2698:                                            ; preds = %L2697, %L2696
  ret i32 %select
}

define internal i32 @luaB_loadstring(%struct.lua_State* %ARG1) {
L2699:
  %l_0x62d000eda858 = alloca i64
  %R15164 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %l_0x62d000eda858)
  %R15167 = call i8* @luaL_optlstring(%struct.lua_State* %ARG1, i32 2, i8* %R15164, i64* null)
  %0 = bitcast i64* %l_0x62d000eda858 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i64*
  %load_target = load i64, i64* %2
  %R15173 = call i32 @luaL_loadbuffer(%struct.lua_State* %ARG1, i8* %R15164, i64 %load_target, i8* %R15167)
  %R15174 = call i32 @load_aux(%struct.lua_State* %ARG1, i32 %R15173)
  ret i32 %R15174
}

define internal i32 @luaB_loadfile(%struct.lua_State* %ARG1) {
L2700:
  %R15177 = call i8* @luaL_optlstring(%struct.lua_State* %ARG1, i32 1, i8* null, i64* null)
  %R15181 = call i32 @luaL_loadfile(%struct.lua_State* %ARG1, i8* %R15177)
  %R15182 = call i32 @load_aux(%struct.lua_State* %ARG1, i32 %R15181)
  ret i32 %R15182
}

define internal i32 @luaB_assert(%struct.lua_State* %ARG1) {
L2701:
  %0 = alloca i32
  call void @luaL_checkany(%struct.lua_State* %ARG1, i32 1)
  %R15186 = call i32 @lua_toboolean(%struct.lua_State* %ARG1, i32 1)
  %cond = icmp ne i32 %R15186, 0
  br i1 %cond, label %L2703, label %L2702

L2702:                                            ; preds = %L2701
  %R15191 = call i8* @luaL_optlstring(%struct.lua_State* %ARG1, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.169, i64 0, i64 0), i64* null)
  %R15192 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i64 0, i64 0), i8* %R15191)
  store i32 %R15192, i32* %0
  br label %L2704

L2703:                                            ; preds = %L2701
  %R15195 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  store i32 %R15195, i32* %0
  br label %L2704

L2704:                                            ; preds = %L2703, %L2702
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal i32 @luaB_unpack(%struct.lua_State* %ARG1) {
L2705:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  %R15198 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 2, i64 1)
  %R15199 = trunc i64 %R15198 to i32
  %R15201 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 3)
  %R15202 = icmp sle i32 %R15201, 0
  %R152021 = zext i1 %R15202 to i32
  %cond = icmp ne i32 %R152021, 0
  br i1 %cond, label %L2706, label %L2707

L2706:                                            ; preds = %L2705
  %R15204 = call i64 @lua_objlen(%struct.lua_State* %ARG1, i32 1)
  %R15205 = trunc i64 %R15204 to i32
  store i32 %R15205, i32* %0
  br label %L2708

L2707:                                            ; preds = %L2705
  %R15207 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 3)
  %R15208 = trunc i64 %R15207 to i32
  store i32 %R15208, i32* %0
  br label %L2708

L2708:                                            ; preds = %L2707, %L2706
  %3 = load i32, i32* %0
  %R15212 = icmp sgt i32 %R15199, %3
  %R152122 = zext i1 %R15212 to i32
  %cond3 = icmp ne i32 %R152122, 0
  br i1 %cond3, label %L2709, label %L2710

L2709:                                            ; preds = %L2708
  store i32 0, i32* %2
  br label %L2717

L2710:                                            ; preds = %L2708
  %R15216 = sub i32 %3, %R15199
  %R15217 = add i32 %R15216, 1
  %R15219 = icmp sle i32 %R15217, 0
  %R152194 = zext i1 %R15219 to i32
  %cond5 = icmp ne i32 %R152194, 0
  br i1 %cond5, label %L2712, label %L2711

L2711:                                            ; preds = %L2710
  %R15222 = call i32 @lua_checkstack(%struct.lua_State* %ARG1, i32 %R15217)
  %cond6 = icmp ne i32 %R15222, 0
  br i1 %cond6, label %L2713, label %L2712

L2712:                                            ; preds = %L2711, %L2710
  %R15225 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.170, i64 0, i64 0))
  store i32 %R15225, i32* %2
  br label %L2717

L2713:                                            ; preds = %L2711
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15199)
  store i32 %R15199, i32* %1
  br label %L2714

L2714:                                            ; preds = %L2715, %L2713
  %4 = load i32, i32* %1
  %R15229 = add i32 %4, 1
  %R15231 = icmp slt i32 %4, %3
  %R152317 = zext i1 %R15231 to i32
  store i32 %R15229, i32* %1
  %cond8 = icmp ne i32 %R152317, 0
  br i1 %cond8, label %L2715, label %L2716

L2715:                                            ; preds = %L2714
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15229)
  br label %L2714

L2716:                                            ; preds = %L2714
  store i32 %R15217, i32* %2
  br label %L2717

L2717:                                            ; preds = %L2716, %L2712, %L2709
  %5 = load i32, i32* %2
  ret i32 %5
}

define internal i32 @luaB_pcall(%struct.lua_State* %ARG1) {
L2718:
  call void @luaL_checkany(%struct.lua_State* %ARG1, i32 1)
  %R15238 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  %R15239 = add i32 %R15238, -1
  %R15240 = call i32 @lua_pcall(%struct.lua_State* %ARG1, i32 %R15239, i32 -1, i32 0)
  %R15243 = icmp eq i32 %R15240, 0
  %R152431 = zext i1 %R15243 to i32
  call void @lua_pushboolean(%struct.lua_State* %ARG1, i32 %R152431)
  call void @lua_insert(%struct.lua_State* %ARG1, i32 1)
  %R15246 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  ret i32 %R15246
}

define internal i32 @luaB_newproxy(%struct.lua_State* %ARG1) {
L2719:
  call void @lua_settop(%struct.lua_State* %ARG1, i32 1)
  %R15250 = call i8* @lua_newuserdata(%struct.lua_State* %ARG1, i64 0)
  %R15252 = call i32 @lua_toboolean(%struct.lua_State* %ARG1, i32 1)
  %cond = icmp ne i32 %R15252, 0
  br i1 %cond, label %L2720, label %L2727

L2720:                                            ; preds = %L2719
  %R15256 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 1)
  %R15257 = icmp eq i32 %R15256, 1
  %R152571 = zext i1 %R15257 to i32
  %cond2 = icmp ne i32 %R152571, 0
  br i1 %cond2, label %L2721, label %L2722

L2721:                                            ; preds = %L2720
  call void @lua_createtable(%struct.lua_State* %ARG1, i32 0, i32 0)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -1)
  call void @lua_pushboolean(%struct.lua_State* %ARG1, i32 1)
  call void @lua_rawset(%struct.lua_State* %ARG1, i32 -10003)
  br label %L2726

L2722:                                            ; preds = %L2720
  %R15263 = call i32 @lua_getmetatable(%struct.lua_State* %ARG1, i32 1)
  %cond3 = icmp ne i32 %R15263, 0
  br i1 %cond3, label %L2723, label %L2724

L2723:                                            ; preds = %L2722
  call void @lua_rawget(%struct.lua_State* %ARG1, i32 -10003)
  %R15266 = call i32 @lua_toboolean(%struct.lua_State* %ARG1, i32 -1)
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  %cond4 = icmp ne i32 %R15266, 0
  br i1 %cond4, label %L2725, label %L2724

L2724:                                            ; preds = %L2723, %L2722
  %R15271 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.171, i64 0, i64 0))
  br label %L2725

L2725:                                            ; preds = %L2724, %L2723
  %R15274 = call i32 @lua_getmetatable(%struct.lua_State* %ARG1, i32 1)
  br label %L2726

L2726:                                            ; preds = %L2725, %L2721
  %R15276 = call i32 @lua_setmetatable(%struct.lua_State* %ARG1, i32 2)
  br label %L2727

L2727:                                            ; preds = %L2726, %L2719
  ret i32 1
}

define internal void @auxopen(%struct.lua_State* %ARG1, i8* %ARG2, i32 (%struct.lua_State*)* %ARG3, i32 (%struct.lua_State*)* %ARG4) {
L2728:
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %ARG4, i32 0)
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %ARG3, i32 1)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -2, i8* %ARG2)
  ret void
}

define internal void @base_open(%struct.lua_State* %ARG1) {
L2729:
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -10002)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -10002, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i64 0, i64 0))
  call void @luaL_register(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.173, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([13 x %struct.luaL_Reg], [13 x %struct.luaL_Reg]* @base_funcs, i32 0, i32 0))
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.174, i64 0, i64 0), i64 7)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -10002, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.175, i64 0, i64 0))
  call void @auxopen(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i64 0, i64 0), i32 (%struct.lua_State*)* @luaB_ipairs, i32 (%struct.lua_State*)* @ipairsaux)
  call void @auxopen(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i64 0, i64 0), i32 (%struct.lua_State*)* @luaB_pairs, i32 (%struct.lua_State*)* @luaB_next)
  call void @lua_createtable(%struct.lua_State* %ARG1, i32 0, i32 1)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -1)
  %R15304 = call i32 @lua_setmetatable(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.178, i64 0, i64 0), i64 2)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.179, i64 0, i64 0))
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* @luaB_newproxy, i32 1)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -10002, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.180, i64 0, i64 0))
  ret void
}

define internal i32 @luaopen_base(%struct.lua_State* %ARG1) {
L2730:
  call void @base_open(%struct.lua_State* %ARG1)
  ret i32 1
}

define internal i32 @tinsert(%struct.lua_State* %ARG1) {
L2731:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  %R15317 = call i64 @lua_objlen(%struct.lua_State* %ARG1, i32 1)
  %R15318 = trunc i64 %R15317 to i32
  %R15319 = add i32 %R15318, 1
  %R15321 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  switch i32 %R15321, label %L2736 [
    i32 2, label %L2732
    i32 3, label %L2733
  ]

L2732:                                            ; preds = %L2731
  store i32 %R15319, i32* %1
  br label %L2737

L2733:                                            ; preds = %L2731
  %R15324 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 2)
  %R15325 = trunc i64 %R15324 to i32
  %R15328 = icmp sgt i32 %R15325, %R15319
  %R153281 = zext i1 %R15328 to i32
  %cond = icmp ne i32 %R153281, 0
  %select = select i1 %cond, i32 %R15325, i32 %R15319
  store i32 %select, i32* %0
  br label %L2734

L2734:                                            ; preds = %L2735, %L2733
  %3 = load i32, i32* %0
  %R15333 = icmp sgt i32 %3, %R15325
  %R153332 = zext i1 %R15333 to i32
  store i32 %R15325, i32* %1
  %cond3 = icmp ne i32 %R153332, 0
  br i1 %cond3, label %L2735, label %L2737

L2735:                                            ; preds = %L2734
  %R15336 = add i32 %3, -1
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15336)
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 1, i32 %3)
  store i32 %R15336, i32* %0
  br label %L2734

L2736:                                            ; preds = %L2731
  %R15343 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.181, i64 0, i64 0))
  store i32 %R15343, i32* %2
  br label %L2738

L2737:                                            ; preds = %L2734, %L2732
  %4 = load i32, i32* %1
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 1, i32 %4)
  store i32 0, i32* %2
  br label %L2738

L2738:                                            ; preds = %L2737, %L2736
  %5 = load i32, i32* %2
  ret i32 %5
}

define internal i32 @tremove(%struct.lua_State* %ARG1) {
L2739:
  %0 = alloca i32
  %1 = alloca i32
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  %R15349 = call i64 @lua_objlen(%struct.lua_State* %ARG1, i32 1)
  %R15350 = trunc i64 %R15349 to i32
  %R15353 = sext i32 %R15350 to i64
  %R15354 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 2, i64 %R15353)
  %R15355 = trunc i64 %R15354 to i32
  %R15357 = icmp sle i32 1, %R15355
  %R153571 = zext i1 %R15357 to i32
  %R15360 = icmp sle i32 %R15355, %R15350
  %R153602 = zext i1 %R15360 to i32
  %2 = icmp ne i32 %R153571, 0
  %3 = icmp ne i32 %R153602, 0
  %R15361 = and i1 %2, %3
  %R153613 = zext i1 %R15361 to i32
  %cond = icmp ne i32 %R153613, 0
  br i1 %cond, label %L2741, label %L2740

L2740:                                            ; preds = %L2739
  store i32 0, i32* %1
  br label %L2745

L2741:                                            ; preds = %L2739
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15355)
  store i32 %R15355, i32* %0
  br label %L2742

L2742:                                            ; preds = %L2743, %L2741
  %4 = load i32, i32* %0
  %R15367 = icmp slt i32 %4, %R15350
  %R153674 = zext i1 %R15367 to i32
  %cond5 = icmp ne i32 %R153674, 0
  br i1 %cond5, label %L2743, label %L2744

L2743:                                            ; preds = %L2742
  %R15370 = add i32 %4, 1
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15370)
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 1, i32 %4)
  store i32 %R15370, i32* %0
  br label %L2742

L2744:                                            ; preds = %L2742
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 1, i32 %R15350)
  store i32 1, i32* %1
  br label %L2745

L2745:                                            ; preds = %L2744, %L2740
  %5 = load i32, i32* %1
  ret i32 %5
}

define internal void @addfield(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %ARG2, i32 %ARG3) {
L2746:
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %ARG3)
  %R15381 = call i32 @lua_isstring(%struct.lua_State* %ARG1, i32 -1)
  %cond = icmp ne i32 %R15381, 0
  br i1 %cond, label %L2748, label %L2747

L2747:                                            ; preds = %L2746
  %R15386 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 -1)
  %R15387 = call i8* @lua_typename(%struct.lua_State* %ARG1, i32 %R15386)
  %R15389 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.182, i64 0, i64 0), i8* %R15387, i32 %ARG3)
  br label %L2748

L2748:                                            ; preds = %L2747, %L2746
  call void @luaL_addvalue(%struct.luaL_Buffer* %ARG2)
  ret void
}

define internal i32 @tconcat(%struct.lua_State* %ARG1) {
L2749:
  %b_0x62d000ef7298 = alloca %struct.luaL_Buffer
  %lsep_0x62d000ef7380 = alloca i64
  %0 = alloca i32
  %1 = alloca i32
  %R15394 = call i8* @luaL_optlstring(%struct.lua_State* %ARG1, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.183, i64 0, i64 0), i64* %lsep_0x62d000ef7380)
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  %R15397 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 3, i64 1)
  %R15398 = trunc i64 %R15397 to i32
  %R15400 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 4)
  %R15401 = icmp sle i32 %R15400, 0
  %R154011 = zext i1 %R15401 to i32
  store i32 %R15398, i32* %1
  %cond = icmp ne i32 %R154011, 0
  br i1 %cond, label %L2750, label %L2751

L2750:                                            ; preds = %L2749
  %R15403 = call i64 @lua_objlen(%struct.lua_State* %ARG1, i32 1)
  %R15404 = trunc i64 %R15403 to i32
  store i32 %R15404, i32* %0
  br label %L2752

L2751:                                            ; preds = %L2749
  %R15406 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 4)
  %R15407 = trunc i64 %R15406 to i32
  store i32 %R15407, i32* %0
  br label %L2752

L2752:                                            ; preds = %L2751, %L2750
  %2 = load i32, i32* %0
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000ef7298)
  br label %L2753

L2753:                                            ; preds = %L2754, %L2752
  %3 = load i32, i32* %1
  %R15413 = icmp slt i32 %3, %2
  %R154132 = zext i1 %R15413 to i32
  %cond3 = icmp ne i32 %R154132, 0
  br i1 %cond3, label %L2754, label %L2755

L2754:                                            ; preds = %L2753
  call void @addfield(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000ef7298, i32 %3)
  %4 = bitcast i64* %lsep_0x62d000ef7380 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i64*
  %load_target = load i64, i64* %6
  call void @luaL_addlstring(%struct.luaL_Buffer* %b_0x62d000ef7298, i8* %R15394, i64 %load_target)
  %R15421 = add i32 %3, 1
  store i32 %R15421, i32* %1
  br label %L2753

L2755:                                            ; preds = %L2753
  %R15424 = icmp eq i32 %3, %2
  %R154244 = zext i1 %R15424 to i32
  %cond5 = icmp ne i32 %R154244, 0
  br i1 %cond5, label %L2756, label %L2757

L2756:                                            ; preds = %L2755
  call void @addfield(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000ef7298, i32 %3)
  br label %L2757

L2757:                                            ; preds = %L2756, %L2755
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000ef7298)
  ret i32 1
}

define internal void @set2(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2758:
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 1, i32 %ARG2)
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 1, i32 %ARG3)
  ret void
}

define internal i32 @sort_comp(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2759:
  %0 = alloca i32
  %R15435 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 2)
  %cond = icmp ne i32 %R15435, 0
  br i1 %cond, label %L2760, label %L2761

L2760:                                            ; preds = %L2759
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 2)
  %R15440 = add i32 %ARG2, -1
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 %R15440)
  %R15443 = add i32 %ARG3, -2
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 %R15443)
  call void @lua_call(%struct.lua_State* %ARG1, i32 2, i32 1)
  %R15446 = call i32 @lua_toboolean(%struct.lua_State* %ARG1, i32 -1)
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  store i32 %R15446, i32* %0
  br label %L2762

L2761:                                            ; preds = %L2759
  %R15453 = call i32 @lua_lessthan(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3)
  store i32 %R15453, i32* %0
  br label %L2762

L2762:                                            ; preds = %L2761, %L2760
  %1 = load i32, i32* %0
  ret i32 %1
}

define internal void @auxsort(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2763:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  store i32 %ARG2, i32* %0
  store i32 %ARG3, i32* %1
  br label %L2764

L2764:                                            ; preds = %L2789, %L2763
  %6 = load i32, i32* %0
  %7 = load i32, i32* %1
  %R15456 = icmp slt i32 %6, %7
  %R154561 = zext i1 %R15456 to i32
  %cond = icmp ne i32 %R154561, 0
  br i1 %cond, label %L2765, label %L2790

L2765:                                            ; preds = %L2764
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %6)
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %7)
  %R15462 = call i32 @sort_comp(%struct.lua_State* %ARG1, i32 -1, i32 -2)
  %cond2 = icmp ne i32 %R15462, 0
  br i1 %cond2, label %L2766, label %L2767

L2766:                                            ; preds = %L2765
  call void @set2(%struct.lua_State* %ARG1, i32 %6, i32 %7)
  br label %L2768

L2767:                                            ; preds = %L2765
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -3)
  br label %L2768

L2768:                                            ; preds = %L2767, %L2766
  %R15469 = sub i32 %7, %6
  %R15470 = icmp eq i32 %R15469, 1
  %R154703 = zext i1 %R15470 to i32
  %cond4 = icmp ne i32 %R154703, 0
  br i1 %cond4, label %L2790, label %L2769

L2769:                                            ; preds = %L2768
  %R15473 = add i32 %6, %7
  %R15474 = sdiv i32 %R15473, 2
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15474)
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %6)
  %R15480 = call i32 @sort_comp(%struct.lua_State* %ARG1, i32 -2, i32 -1)
  %cond5 = icmp ne i32 %R15480, 0
  br i1 %cond5, label %L2770, label %L2771

L2770:                                            ; preds = %L2769
  call void @set2(%struct.lua_State* %ARG1, i32 %R15474, i32 %6)
  br label %L2774

L2771:                                            ; preds = %L2769
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %7)
  %R15488 = call i32 @sort_comp(%struct.lua_State* %ARG1, i32 -1, i32 -2)
  %cond6 = icmp ne i32 %R15488, 0
  br i1 %cond6, label %L2772, label %L2773

L2772:                                            ; preds = %L2771
  call void @set2(%struct.lua_State* %ARG1, i32 %R15474, i32 %7)
  br label %L2774

L2773:                                            ; preds = %L2771
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -3)
  br label %L2774

L2774:                                            ; preds = %L2773, %L2772, %L2770
  %R15496 = icmp eq i32 %R15469, 2
  %R154967 = zext i1 %R15496 to i32
  %cond8 = icmp ne i32 %R154967, 0
  br i1 %cond8, label %L2790, label %L2775

L2775:                                            ; preds = %L2774
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15474)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -1)
  %R15502 = add i32 %7, -1
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15502)
  call void @set2(%struct.lua_State* %ARG1, i32 %R15474, i32 %R15502)
  store i32 %6, i32* %2
  store i32 %R15502, i32* %3
  br label %L2776

L2776:                                            ; preds = %L2786, %L2779, %L2775
  %8 = load i32, i32* %2
  %R15512 = add i32 %8, 1
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15512)
  %R15514 = call i32 @sort_comp(%struct.lua_State* %ARG1, i32 -1, i32 -2)
  store i32 %R15512, i32* %2
  %cond9 = icmp ne i32 %R15514, 0
  br i1 %cond9, label %L2777, label %L2780

L2777:                                            ; preds = %L2776
  %R15517 = icmp sgt i32 %R15512, %7
  %R1551710 = zext i1 %R15517 to i32
  %cond11 = icmp ne i32 %R1551710, 0
  br i1 %cond11, label %L2778, label %L2779

L2778:                                            ; preds = %L2777
  %R15520 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.184, i64 0, i64 0))
  br label %L2779

L2779:                                            ; preds = %L2778, %L2777
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  br label %L2776

L2780:                                            ; preds = %L2783, %L2776
  %9 = load i32, i32* %3
  %R15524 = add i32 %9, -1
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15524)
  %R15526 = call i32 @sort_comp(%struct.lua_State* %ARG1, i32 -3, i32 -1)
  store i32 %R15524, i32* %3
  %cond12 = icmp ne i32 %R15526, 0
  br i1 %cond12, label %L2781, label %L2784

L2781:                                            ; preds = %L2780
  %R15529 = icmp slt i32 %R15524, %6
  %R1552913 = zext i1 %R15529 to i32
  %cond14 = icmp ne i32 %R1552913, 0
  br i1 %cond14, label %L2782, label %L2783

L2782:                                            ; preds = %L2781
  %R15532 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.185, i64 0, i64 0))
  br label %L2783

L2783:                                            ; preds = %L2782, %L2781
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  br label %L2780

L2784:                                            ; preds = %L2780
  %R15536 = icmp slt i32 %R15524, %R15512
  %R1553615 = zext i1 %R15536 to i32
  %cond16 = icmp ne i32 %R1553615, 0
  br i1 %cond16, label %L2785, label %L2786

L2785:                                            ; preds = %L2784
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -4)
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15502)
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 1, i32 %R15512)
  call void @set2(%struct.lua_State* %ARG1, i32 %R15502, i32 %R15512)
  %R15552 = sub i32 %R15512, %6
  %R15555 = sub i32 %7, %R15512
  %R15556 = icmp slt i32 %R15552, %R15555
  %R1555617 = zext i1 %R15556 to i32
  %cond18 = icmp ne i32 %R1555617, 0
  br i1 %cond18, label %L2787, label %L2788

L2786:                                            ; preds = %L2784
  call void @set2(%struct.lua_State* %ARG1, i32 %R15512, i32 %R15524)
  br label %L2776

L2787:                                            ; preds = %L2785
  %R15559 = add i32 %R15512, -1
  %R15561 = add i32 %R15559, 2
  store i32 %R15561, i32* %0
  store i32 %R15559, i32* %5
  store i32 %6, i32* %4
  br label %L2789

L2788:                                            ; preds = %L2785
  %R15563 = add i32 %R15512, 1
  %R15566 = add i32 %R15563, -2
  store i32 %R15566, i32* %1
  store i32 %7, i32* %5
  store i32 %R15563, i32* %4
  br label %L2789

L2789:                                            ; preds = %L2788, %L2787
  %10 = load i32, i32* %4
  %11 = load i32, i32* %5
  call void @auxsort(%struct.lua_State* %ARG1, i32 %10, i32 %11)
  br label %L2764

L2790:                                            ; preds = %L2774, %L2768, %L2764
  ret void
}

define internal i32 @sort(%struct.lua_State* %ARG1) {
L2791:
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 1, i32 5)
  %R15572 = call i64 @lua_objlen(%struct.lua_State* %ARG1, i32 1)
  %R15573 = trunc i64 %R15572 to i32
  call void @luaL_checkstack(%struct.lua_State* %ARG1, i32 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.186, i64 0, i64 0))
  %R15577 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 2)
  %R15578 = icmp sle i32 %R15577, 0
  %R155781 = zext i1 %R15578 to i32
  %cond = icmp ne i32 %R155781, 0
  br i1 %cond, label %L2793, label %L2792

L2792:                                            ; preds = %L2791
  call void @luaL_checktype(%struct.lua_State* %ARG1, i32 2, i32 6)
  br label %L2793

L2793:                                            ; preds = %L2792, %L2791
  call void @lua_settop(%struct.lua_State* %ARG1, i32 2)
  call void @auxsort(%struct.lua_State* %ARG1, i32 1, i32 %R15573)
  ret i32 0
}

define internal i32 @luaopen_table(%struct.lua_State* %ARG1) {
L2794:
  call void @luaL_register(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([5 x %struct.luaL_Reg], [5 x %struct.luaL_Reg]* @tab_funcs, i32 0, i32 0))
  ret i32 1
}

define internal i32 @pushresult(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2795:
  %0 = alloca i32
  %R15588 = call i32* @__errno_location()
  %1 = bitcast i32* %R15588 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %cond = icmp ne i32 %ARG2, 0
  br i1 %cond, label %L2796, label %L2797

L2796:                                            ; preds = %L2795
  call void @lua_pushboolean(%struct.lua_State* %ARG1, i32 1)
  store i32 1, i32* %0
  br label %L2801

L2797:                                            ; preds = %L2795
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  %cond1 = icmp ne i8* %ARG3, null
  br i1 %cond1, label %L2798, label %L2799

L2798:                                            ; preds = %L2797
  %R15599 = call i8* @strerror(i32 %load_target)
  %R15600 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.188, i64 0, i64 0), i8* %ARG3, i8* %R15599)
  br label %L2800

L2799:                                            ; preds = %L2797
  %R15604 = call i8* @strerror(i32 %load_target)
  %R15605 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189, i64 0, i64 0), i8* %R15604)
  br label %L2800

L2800:                                            ; preds = %L2799, %L2798
  %R15608 = sext i32 %load_target to i64
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 %R15608)
  store i32 3, i32* %0
  br label %L2801

L2801:                                            ; preds = %L2800, %L2796
  %4 = load i32, i32* %0
  ret i32 %4
}

define internal void @fileerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2802:
  %R15612 = call i32* @__errno_location()
  %0 = bitcast i32* %R15612 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i32*
  %load_target = load i32, i32* %2
  %R15614 = call i8* @strerror(i32 %load_target)
  %R15615 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i64 0, i64 0), i8* %ARG3, i8* %R15614)
  %R15619 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 -1, i64* null)
  %R15620 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* %R15619)
  ret void
}

define internal i32 @io_type(%struct.lua_State* %ARG1) {
L2803:
  call void @luaL_checkany(%struct.lua_State* %ARG1, i32 1)
  %R15623 = call i8* @lua_touserdata(%struct.lua_State* %ARG1, i32 1)
  call void @lua_getfield(%struct.lua_State* %ARG1, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.191, i64 0, i64 0))
  %cond = icmp ne i8* %R15623, null
  br i1 %cond, label %L2804, label %L2806

L2804:                                            ; preds = %L2803
  %R15629 = call i32 @lua_getmetatable(%struct.lua_State* %ARG1, i32 1)
  %cond1 = icmp ne i32 %R15629, 0
  br i1 %cond1, label %L2805, label %L2806

L2805:                                            ; preds = %L2804
  %R15631 = call i32 @lua_rawequal(%struct.lua_State* %ARG1, i32 -2, i32 -1)
  %cond2 = icmp ne i32 %R15631, 0
  br i1 %cond2, label %L2807, label %L2806

L2806:                                            ; preds = %L2805, %L2804, %L2803
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  br label %L2810

L2807:                                            ; preds = %L2805
  %R15634 = bitcast i8* %R15623 to %struct._IO_FILE**
  %0 = bitcast %struct._IO_FILE** %R15634 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** %2
  %cond3 = icmp ne %struct._IO_FILE* %load_target, null
  br i1 %cond3, label %L2809, label %L2808

L2808:                                            ; preds = %L2807
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.192, i64 0, i64 0), i64 11)
  br label %L2810

L2809:                                            ; preds = %L2807
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i64 0, i64 0), i64 4)
  br label %L2810

L2810:                                            ; preds = %L2809, %L2808, %L2806
  ret i32 1
}

define internal %struct._IO_FILE* @tofile(%struct.lua_State* %ARG1) {
L2811:
  %R15644 = call i8* @luaL_checkudata(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i64 0, i64 0))
  %R15645 = bitcast i8* %R15644 to %struct._IO_FILE**
  %0 = bitcast %struct._IO_FILE** %R15645 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** %2
  %cond = icmp ne %struct._IO_FILE* %load_target, null
  br i1 %cond, label %L2813, label %L2812

L2812:                                            ; preds = %L2811
  %R15651 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.195, i64 0, i64 0))
  br label %L2813

L2813:                                            ; preds = %L2812, %L2811
  %3 = bitcast %struct._IO_FILE** %R15645 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to %struct._IO_FILE**
  %load_target1 = load %struct._IO_FILE*, %struct._IO_FILE** %5
  ret %struct._IO_FILE* %load_target1
}

define internal %struct._IO_FILE** @newfile(%struct.lua_State* %ARG1) {
L2814:
  %R15656 = call i8* @lua_newuserdata(%struct.lua_State* %ARG1, i64 8)
  %R15657 = bitcast i8* %R15656 to %struct._IO_FILE**
  %0 = bitcast %struct._IO_FILE** %R15657 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %2
  call void @lua_getfield(%struct.lua_State* %ARG1, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i64 0, i64 0))
  %R15662 = call i32 @lua_setmetatable(%struct.lua_State* %ARG1, i32 -2)
  ret %struct._IO_FILE** %R15657
}

define internal i32 @io_noclose(%struct.lua_State* %ARG1) {
L2815:
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.197, i64 0, i64 0), i64 26)
  ret i32 2
}

define internal i32 @io_pclose(%struct.lua_State* %ARG1) {
L2816:
  %R15671 = call i8* @luaL_checkudata(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198, i64 0, i64 0))
  %R15672 = bitcast i8* %R15671 to %struct._IO_FILE**
  %0 = bitcast %struct._IO_FILE** %R15672 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** %2
  %3 = bitcast %struct._IO_FILE** %R15672 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %5
  %R15679 = call i32 @pushresult(%struct.lua_State* %ARG1, i32 0, i8* null)
  ret i32 %R15679
}

define internal i32 @io_fclose(%struct.lua_State* %ARG1) {
L2817:
  %R15683 = call i8* @luaL_checkudata(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i64 0, i64 0))
  %R15684 = bitcast i8* %R15683 to %struct._IO_FILE**
  %0 = bitcast %struct._IO_FILE** %R15684 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** %2
  %R15687 = call i32 @fclose(%struct._IO_FILE* %load_target)
  %R15688 = icmp eq i32 %R15687, 0
  %R156881 = zext i1 %R15688 to i32
  %3 = bitcast %struct._IO_FILE** %R15684 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %5
  %R15692 = call i32 @pushresult(%struct.lua_State* %ARG1, i32 %R156881, i8* null)
  ret i32 %R15692
}

define internal i32 @aux_close(%struct.lua_State* %ARG1) {
L2818:
  call void @lua_getfenv(%struct.lua_State* %ARG1, i32 1)
  call void @lua_getfield(%struct.lua_State* %ARG1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.200, i64 0, i64 0))
  %R15700 = call i32 (%struct.lua_State*)* @lua_tocfunction(%struct.lua_State* %ARG1, i32 -1)
  %R15701 = call i32 %R15700(%struct.lua_State* %ARG1)
  ret i32 %R15701
}

define internal i32 @io_close(%struct.lua_State* %ARG1) {
L2819:
  %R15704 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 1)
  %R15705 = icmp eq i32 %R15704, -1
  %R157051 = zext i1 %R15705 to i32
  %cond = icmp ne i32 %R157051, 0
  br i1 %cond, label %L2820, label %L2821

L2820:                                            ; preds = %L2819
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 -10001, i32 2)
  br label %L2821

L2821:                                            ; preds = %L2820, %L2819
  %R15708 = call %struct._IO_FILE* @tofile(%struct.lua_State* %ARG1)
  %R15710 = call i32 @aux_close(%struct.lua_State* %ARG1)
  ret i32 %R15710
}

define internal i32 @io_gc(%struct.lua_State* %ARG1) {
L2822:
  %R15714 = call i8* @luaL_checkudata(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i64 0, i64 0))
  %R15715 = bitcast i8* %R15714 to %struct._IO_FILE**
  %0 = bitcast %struct._IO_FILE** %R15715 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** %2
  %cond = icmp ne %struct._IO_FILE* %load_target, null
  br i1 %cond, label %L2823, label %L2824

L2823:                                            ; preds = %L2822
  %R15720 = call i32 @aux_close(%struct.lua_State* %ARG1)
  br label %L2824

L2824:                                            ; preds = %L2823, %L2822
  ret i32 0
}

define internal i32 @io_open(%struct.lua_State* %ARG1) {
L2825:
  %0 = alloca i32
  %R15723 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* null)
  %R15726 = call i8* @luaL_optlstring(%struct.lua_State* %ARG1, i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.202, i64 0, i64 0), i64* null)
  %R15728 = call %struct._IO_FILE** @newfile(%struct.lua_State* %ARG1)
  %R15731 = call %struct._IO_FILE* @fopen(i8* %R15723, i8* %R15726)
  %1 = bitcast %struct._IO_FILE** %R15728 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct._IO_FILE**
  store %struct._IO_FILE* %R15731, %struct._IO_FILE** %3
  %cond = icmp ne %struct._IO_FILE* %R15731, null
  br i1 %cond, label %L2827, label %L2826

L2826:                                            ; preds = %L2825
  %R15738 = call i32 @pushresult(%struct.lua_State* %ARG1, i32 0, i8* %R15723)
  store i32 %R15738, i32* %0
  br label %L2828

L2827:                                            ; preds = %L2825
  store i32 1, i32* %0
  br label %L2828

L2828:                                            ; preds = %L2827, %L2826
  %4 = load i32, i32* %0
  ret i32 %4
}

define internal %struct._IO_FILE* @getiofile(%struct.lua_State* %ARG1, i32 %ARG2) {
L2829:
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 -10001, i32 %ARG2)
  %R15744 = call i8* @lua_touserdata(%struct.lua_State* %ARG1, i32 -1)
  %R15745 = bitcast i8* %R15744 to %struct._IO_FILE**
  %0 = bitcast %struct._IO_FILE** %R15745 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** %2
  %cond = icmp ne %struct._IO_FILE* %load_target, null
  br i1 %cond, label %L2831, label %L2830

L2830:                                            ; preds = %L2829
  %R15753 = add i32 %ARG2, -1
  %R15754 = sext i32 %R15753 to i64
  %R15755 = mul i64 %R15754, 8
  %3 = getelementptr inbounds i8, i8* bitcast ([2 x i8*]* @fnames to i8*), i64 %R15755
  %4 = bitcast i8* %3 to i8**
  %5 = bitcast i8** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i8**
  %load_target1 = load i8*, i8** %7
  %R15758 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.203, i64 0, i64 0), i8* %load_target1)
  br label %L2831

L2831:                                            ; preds = %L2830, %L2829
  ret %struct._IO_FILE* %load_target
}

define internal i32 @g_iofile(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2832:
  %R15762 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 1)
  %R15763 = icmp sle i32 %R15762, 0
  %R157631 = zext i1 %R15763 to i32
  %cond = icmp ne i32 %R157631, 0
  br i1 %cond, label %L2838, label %L2833

L2833:                                            ; preds = %L2832
  %R15765 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 1, i64* null)
  %cond2 = icmp ne i8* %R15765, null
  br i1 %cond2, label %L2834, label %L2836

L2834:                                            ; preds = %L2833
  %R15768 = call %struct._IO_FILE** @newfile(%struct.lua_State* %ARG1)
  %R15771 = call %struct._IO_FILE* @fopen(i8* %R15765, i8* %ARG3)
  %0 = bitcast %struct._IO_FILE** %R15768 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  store %struct._IO_FILE* %R15771, %struct._IO_FILE** %2
  %cond3 = icmp ne %struct._IO_FILE* %R15771, null
  br i1 %cond3, label %L2837, label %L2835

L2835:                                            ; preds = %L2834
  call void @fileerror(%struct.lua_State* %ARG1, i32 1, i8* %R15765)
  br label %L2837

L2836:                                            ; preds = %L2833
  %R15779 = call %struct._IO_FILE* @tofile(%struct.lua_State* %ARG1)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 1)
  br label %L2837

L2837:                                            ; preds = %L2836, %L2835, %L2834
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 -10001, i32 %ARG2)
  br label %L2838

L2838:                                            ; preds = %L2837, %L2832
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 -10001, i32 %ARG2)
  ret i32 1
}

define internal i32 @io_input(%struct.lua_State* %ARG1) {
L2839:
  %R15788 = call i32 @g_iofile(%struct.lua_State* %ARG1, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.204, i64 0, i64 0))
  ret i32 %R15788
}

define internal i32 @io_output(%struct.lua_State* %ARG1) {
L2840:
  %R15792 = call i32 @g_iofile(%struct.lua_State* %ARG1, i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.205, i64 0, i64 0))
  ret i32 %R15792
}

define internal void @aux_lines(%struct.lua_State* %ARG1, i32 %ARG2, i32 %ARG3) {
L2841:
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 %ARG2)
  call void @lua_pushboolean(%struct.lua_State* %ARG1, i32 %ARG3)
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* @io_readline, i32 2)
  ret void
}

declare i32 @io_readline(%struct.lua_State*)

define internal i32 @f_lines(%struct.lua_State* %ARG1) {
L2842:
  %R15801 = call %struct._IO_FILE* @tofile(%struct.lua_State* %ARG1)
  call void @aux_lines(%struct.lua_State* %ARG1, i32 1, i32 0)
  ret i32 1
}

define internal i32 @io_lines(%struct.lua_State* %ARG1) {
L2843:
  %0 = alloca i32
  %R15805 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 1)
  %R15806 = icmp sle i32 %R15805, 0
  %R158061 = zext i1 %R15806 to i32
  %cond = icmp ne i32 %R158061, 0
  br i1 %cond, label %L2844, label %L2845

L2844:                                            ; preds = %L2843
  call void @lua_rawgeti(%struct.lua_State* %ARG1, i32 -10001, i32 1)
  %R15809 = call i32 @f_lines(%struct.lua_State* %ARG1)
  store i32 %R15809, i32* %0
  br label %L2848

L2845:                                            ; preds = %L2843
  %R15812 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* null)
  %R15814 = call %struct._IO_FILE** @newfile(%struct.lua_State* %ARG1)
  %R15817 = call %struct._IO_FILE* @fopen(i8* %R15812, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.206, i64 0, i64 0))
  %1 = bitcast %struct._IO_FILE** %R15814 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct._IO_FILE**
  store %struct._IO_FILE* %R15817, %struct._IO_FILE** %3
  %cond2 = icmp ne %struct._IO_FILE* %R15817, null
  br i1 %cond2, label %L2847, label %L2846

L2846:                                            ; preds = %L2845
  call void @fileerror(%struct.lua_State* %ARG1, i32 1, i8* %R15812)
  br label %L2847

L2847:                                            ; preds = %L2846, %L2845
  %R15826 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  call void @aux_lines(%struct.lua_State* %ARG1, i32 %R15826, i32 1)
  store i32 1, i32* %0
  br label %L2848

L2848:                                            ; preds = %L2847, %L2844
  %4 = load i32, i32* %0
  ret i32 %4
}

define internal i32 @read_number(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2) {
L2849:
  %d_0x62d000f33468 = alloca double
  %R15830 = call i32 (%struct._IO_FILE*, i8*, ...) @fscanf(%struct._IO_FILE* %ARG2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.207, i64 0, i64 0), double* %d_0x62d000f33468)
  %R15831 = icmp eq i32 %R15830, 1
  %R158311 = zext i1 %R15831 to i32
  %cond = icmp ne i32 %R158311, 0
  br i1 %cond, label %L2850, label %L2851

L2850:                                            ; preds = %L2849
  %0 = bitcast double* %d_0x62d000f33468 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to double*
  %load_target = load double, double* %2
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %load_target)
  br label %L2852

L2851:                                            ; preds = %L2849
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  br label %L2852

L2852:                                            ; preds = %L2851, %L2850
  ret i32 %R158311
}

declare i32 @fscanf(%struct._IO_FILE*, i8*, ...)

define internal i32 @test_eof(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2) {
L2853:
  %R15837 = call i32 @_IO_getc(%struct._IO_FILE* %ARG2)
  %R15840 = call i32 @ungetc(i32 %R15837, %struct._IO_FILE* %ARG2)
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* null, i64 0)
  %R15843 = icmp ne i32 %R15837, -1
  %R158431 = zext i1 %R15843 to i32
  ret i32 %R158431
}

define internal i32 @read_line(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2) {
L2854:
  %b_0x62d000f344b8 = alloca %struct.luaL_Buffer
  %0 = alloca i32
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000f344b8)
  br label %L2855

L2855:                                            ; preds = %L2859, %L2854
  %R15848 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000f344b8)
  %R15851 = call i8* @fgets(i8* %R15848, i32 8192, %struct._IO_FILE* %ARG2)
  %cond = icmp ne i8* %R15851, null
  br i1 %cond, label %L2857, label %L2856

L2856:                                            ; preds = %L2855
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000f344b8)
  %R15855 = call i64 @lua_objlen(%struct.lua_State* %ARG1, i32 -1)
  %R15856 = icmp ugt i64 %R15855, 0
  %R158561 = zext i1 %R15856 to i32
  store i32 %R158561, i32* %0
  br label %L2861

L2857:                                            ; preds = %L2855
  %R15859 = call i64 @strlen(i8* %R15848)
  %cond2 = icmp ne i64 %R15859, 0
  br i1 %cond2, label %L2858, label %L2859

L2858:                                            ; preds = %L2857
  %R15864 = add i64 %R15859, -1
  %1 = getelementptr inbounds i8, i8* %R15848, i64 %R15864
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %load_target = load i8, i8* %2
  %R15867 = sext i8 %load_target to i32
  %R15868 = icmp ne i32 %R15867, 10
  %R158683 = zext i1 %R15868 to i32
  %cond4 = icmp ne i32 %R158683, 0
  br i1 %cond4, label %L2859, label %L2860

L2859:                                            ; preds = %L2858, %L2857
  %3 = bitcast %struct.luaL_Buffer* %b_0x62d000f344b8 to i8**
  %4 = bitcast i8** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i8**
  %load_target5 = load i8*, i8** %6
  %R15871 = ptrtoint i8* %load_target5 to i64
  %R15872 = add i64 %R15871, %R15859
  %R15873 = inttoptr i64 %R15872 to i8*
  %7 = bitcast %struct.luaL_Buffer* %b_0x62d000f344b8 to i8**
  %8 = bitcast i8** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i8**
  store i8* %R15873, i8** %10
  br label %L2855

L2860:                                            ; preds = %L2858
  %11 = bitcast %struct.luaL_Buffer* %b_0x62d000f344b8 to i8**
  %12 = bitcast i8** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to i8**
  %load_target6 = load i8*, i8** %14
  %R15877 = ptrtoint i8* %load_target6 to i64
  %R15878 = add i64 %R15877, %R15864
  %R15879 = inttoptr i64 %R15878 to i8*
  %15 = bitcast %struct.luaL_Buffer* %b_0x62d000f344b8 to i8**
  %16 = bitcast i8** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = bitcast i8* %17 to i8**
  store i8* %R15879, i8** %18
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000f344b8)
  store i32 1, i32* %0
  br label %L2861

L2861:                                            ; preds = %L2860, %L2856
  %19 = load i32, i32* %0
  ret i32 %19
}

declare i8* @fgets(i8*, i32, %struct._IO_FILE*)

define internal i32 @read_chars(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2, i64 %ARG3) {
L2862:
  %b_0x62d000f35508 = alloca %struct.luaL_Buffer
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i32
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000f35508)
  store i64 %ARG3, i64* %1
  store i64 8192, i64* %0
  br label %L2863

L2863:                                            ; preds = %L2865, %L2862
  %R15884 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000f35508)
  %3 = load i64, i64* %0
  %4 = load i64, i64* %1
  %R15887 = icmp ugt i64 %3, %4
  %R158871 = zext i1 %R15887 to i32
  %cond = icmp ne i32 %R158871, 0
  %select = select i1 %cond, i64 %4, i64 %3
  %cond2 = icmp ne i32 %R158871, 0
  br i1 %cond2, label %L2864, label %L2865

L2864:                                            ; preds = %L2863
  store i64 %4, i64* %0
  br label %L2865

L2865:                                            ; preds = %L2864, %L2863
  %R15893 = call i64 @fread(i8* %R15884, i64 1, i64 %select, %struct._IO_FILE* %ARG2)
  %5 = bitcast %struct.luaL_Buffer* %b_0x62d000f35508 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i8**
  %load_target = load i8*, i8** %8
  %R15896 = ptrtoint i8* %load_target to i64
  %R15897 = add i64 %R15896, %R15893
  %R15898 = inttoptr i64 %R15897 to i8*
  %9 = bitcast %struct.luaL_Buffer* %b_0x62d000f35508 to i8**
  %10 = bitcast i8** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to i8**
  store i8* %R15898, i8** %12
  %R15902 = sub i64 %4, %R15893
  store i64 %R15902, i64* %1
  %R15905 = icmp ugt i64 %R15902, 0
  %R159053 = zext i1 %R15905 to i32
  %R15908 = icmp eq i64 %R15893, %select
  %R159084 = zext i1 %R15908 to i32
  %13 = icmp ne i32 %R159053, 0
  %14 = icmp ne i32 %R159084, 0
  %R15909 = and i1 %13, %14
  %R159095 = zext i1 %R15909 to i32
  %cond6 = icmp ne i32 %R159095, 0
  br i1 %cond6, label %L2863, label %L2866

L2866:                                            ; preds = %L2865
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000f35508)
  %cond7 = icmp ne i64 %R15902, 0
  br i1 %cond7, label %L2868, label %L2867

L2867:                                            ; preds = %L2866
  store i32 1, i32* %2
  br label %L2869

L2868:                                            ; preds = %L2866
  %R15914 = call i64 @lua_objlen(%struct.lua_State* %ARG1, i32 -1)
  %R15915 = icmp ugt i64 %R15914, 0
  %R159158 = zext i1 %R15915 to i32
  store i32 %R159158, i32* %2
  br label %L2869

L2869:                                            ; preds = %L2868, %L2867
  %15 = load i32, i32* %2
  ret i32 %15
}

define internal i32 @g_read(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2, i32 %ARG3) {
L2870:
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i32
  %R15919 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  %R15920 = add i32 %R15919, -1
  call void @clearerr(%struct._IO_FILE* %ARG2)
  %cond = icmp ne i32 %R15920, 0
  br i1 %cond, label %L2872, label %L2871

L2871:                                            ; preds = %L2870
  %R15926 = call i32 @read_line(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2)
  %R15928 = add i32 %ARG3, 1
  store i32 %R15926, i32* %4
  store i32 %R15928, i32* %5
  br label %L2888

L2872:                                            ; preds = %L2870
  %R15931 = add i32 %R15920, 20
  call void @luaL_checkstack(%struct.lua_State* %ARG1, i32 %R15931, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.208, i64 0, i64 0))
  store i32 %R15920, i32* %0
  store i32 1, i32* %1
  store i32 %ARG3, i32* %5
  store i32 %ARG3, i32* %2
  br label %L2873

L2873:                                            ; preds = %L2887, %L2872
  %7 = load i32, i32* %0
  %R15935 = add i32 %7, -1
  %8 = load i32, i32* %1
  %9 = icmp ne i32 %7, 0
  %10 = icmp ne i32 %8, 0
  %R15937 = and i1 %9, %10
  %R159371 = zext i1 %R15937 to i32
  store i32 %R15935, i32* %0
  store i32 %8, i32* %4
  %cond2 = icmp ne i32 %R159371, 0
  br i1 %cond2, label %L2874, label %L2888

L2874:                                            ; preds = %L2873
  %11 = load i32, i32* %2
  %R15940 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %11)
  %R15941 = icmp eq i32 %R15940, 3
  %R159413 = zext i1 %R15941 to i32
  %cond4 = icmp ne i32 %R159413, 0
  br i1 %cond4, label %L2875, label %L2879

L2875:                                            ; preds = %L2874
  %R15944 = call i64 @lua_tointeger(%struct.lua_State* %ARG1, i32 %11)
  %cond5 = icmp ne i64 %R15944, 0
  br i1 %cond5, label %L2877, label %L2876

L2876:                                            ; preds = %L2875
  %R15950 = call i32 @test_eof(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2)
  store i32 %R15950, i32* %3
  br label %L2878

L2877:                                            ; preds = %L2875
  %R15954 = call i32 @read_chars(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2, i64 %R15944)
  store i32 %R15954, i32* %3
  br label %L2878

L2878:                                            ; preds = %L2877, %L2876
  %12 = load i32, i32* %3
  store i32 %12, i32* %1
  br label %L2887

L2879:                                            ; preds = %L2874
  %R15958 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 %11, i64* null)
  %cond6 = icmp ne i8* %R15958, null
  br i1 %cond6, label %L2880, label %L2881

L2880:                                            ; preds = %L2879
  %13 = getelementptr inbounds i8, i8* %R15958, i64 0
  %load_target = load i8, i8* %13
  %R15962 = sext i8 %load_target to i32
  %R15963 = icmp eq i32 %R15962, 42
  %R159637 = zext i1 %R15963 to i32
  %cond8 = icmp ne i32 %R159637, 0
  br i1 %cond8, label %L2882, label %L2881

L2881:                                            ; preds = %L2880, %L2879
  %R15967 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.209, i64 0, i64 0))
  br label %L2882

L2882:                                            ; preds = %L2881, %L2880
  %14 = getelementptr inbounds i8, i8* %R15958, i64 1
  %load_target9 = load i8, i8* %14
  switch i8 %load_target9, label %L2886 [
    i32 97, label %L2885
    i32 108, label %L2884
    i32 110, label %L2883
  ]

L2883:                                            ; preds = %L2882
  %R15973 = call i32 @read_number(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2)
  store i32 %R15973, i32* %1
  br label %L2887

L2884:                                            ; preds = %L2882
  %R15976 = call i32 @read_line(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2)
  store i32 %R15976, i32* %1
  br label %L2887

L2885:                                            ; preds = %L2882
  %R15979 = call i32 @read_chars(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2, i64 -1)
  store i32 1, i32* %1
  br label %L2887

L2886:                                            ; preds = %L2882
  %R15983 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.210, i64 0, i64 0))
  store i32 %R15983, i32* %6
  br label %L2893

L2887:                                            ; preds = %L2885, %L2884, %L2883, %L2878
  %R15986 = add i32 %11, 1
  store i32 %R15986, i32* %5
  store i32 %R15986, i32* %2
  br label %L2873

L2888:                                            ; preds = %L2873, %L2871
  %R15988 = call i32 @ferror(%struct._IO_FILE* %ARG2)
  %cond10 = icmp ne i32 %R15988, 0
  br i1 %cond10, label %L2889, label %L2890

L2889:                                            ; preds = %L2888
  %R15990 = call i32 @pushresult(%struct.lua_State* %ARG1, i32 0, i8* null)
  store i32 %R15990, i32* %6
  br label %L2893

L2890:                                            ; preds = %L2888
  %15 = load i32, i32* %4
  %cond11 = icmp ne i32 %15, 0
  br i1 %cond11, label %L2892, label %L2891

L2891:                                            ; preds = %L2890
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  br label %L2892

L2892:                                            ; preds = %L2891, %L2890
  %16 = load i32, i32* %5
  %R15996 = sub i32 %16, %ARG3
  store i32 %R15996, i32* %6
  br label %L2893

L2893:                                            ; preds = %L2892, %L2889, %L2886
  %17 = load i32, i32* %6
  ret i32 %17
}

declare void @clearerr(%struct._IO_FILE*)

define internal i32 @io_read(%struct.lua_State* %ARG1) {
L2894:
  %R15999 = call %struct._IO_FILE* @getiofile(%struct.lua_State* %ARG1, i32 1)
  %R16000 = call i32 @g_read(%struct.lua_State* %ARG1, %struct._IO_FILE* %R15999, i32 1)
  ret i32 %R16000
}

define internal i32 @f_read(%struct.lua_State* %ARG1) {
L2895:
  %R16004 = call %struct._IO_FILE* @tofile(%struct.lua_State* %ARG1)
  %R16005 = call i32 @g_read(%struct.lua_State* %ARG1, %struct._IO_FILE* %R16004, i32 2)
  ret i32 %R16005
}

define internal i32 @io_readline.211(%struct.lua_State* %ARG1) {
L2896:
  %0 = alloca i32
  %R16008 = call i8* @lua_touserdata(%struct.lua_State* %ARG1, i32 -10003)
  %R16009 = bitcast i8* %R16008 to %struct._IO_FILE**
  %1 = bitcast %struct._IO_FILE** %R16009 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  %3 = bitcast i8* %2 to %struct._IO_FILE**
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** %3
  %cond = icmp ne %struct._IO_FILE* %load_target, null
  br i1 %cond, label %L2898, label %L2897

L2897:                                            ; preds = %L2896
  %R16015 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.212, i64 0, i64 0))
  br label %L2898

L2898:                                            ; preds = %L2897, %L2896
  %R16018 = call i32 @read_line(%struct.lua_State* %ARG1, %struct._IO_FILE* %load_target)
  %R16020 = call i32 @ferror(%struct._IO_FILE* %load_target)
  %cond1 = icmp ne i32 %R16020, 0
  br i1 %cond1, label %L2899, label %L2900

L2899:                                            ; preds = %L2898
  %R16023 = call i32* @__errno_location()
  %4 = bitcast i32* %R16023 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  %6 = bitcast i8* %5 to i32*
  %load_target2 = load i32, i32* %6
  %R16025 = call i8* @strerror(i32 %load_target2)
  %R16026 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i64 0, i64 0), i8* %R16025)
  store i32 %R16026, i32* %0
  br label %L2905

L2900:                                            ; preds = %L2898
  %cond3 = icmp ne i32 %R16018, 0
  br i1 %cond3, label %L2901, label %L2902

L2901:                                            ; preds = %L2900
  store i32 1, i32* %0
  br label %L2905

L2902:                                            ; preds = %L2900
  %R16030 = call i32 @lua_toboolean(%struct.lua_State* %ARG1, i32 -10004)
  %cond4 = icmp ne i32 %R16030, 0
  br i1 %cond4, label %L2903, label %L2904

L2903:                                            ; preds = %L2902
  call void @lua_settop(%struct.lua_State* %ARG1, i32 0)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -10003)
  %R16034 = call i32 @aux_close(%struct.lua_State* %ARG1)
  br label %L2904

L2904:                                            ; preds = %L2903, %L2902
  store i32 0, i32* %0
  br label %L2905

L2905:                                            ; preds = %L2904, %L2901, %L2899
  %7 = load i32, i32* %0
  ret i32 %7
}

define internal i32 @g_write(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2, i32 %ARG3) {
L2906:
  %l_0x62d000f39478 = alloca i64
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %R16036 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  %R16037 = add i32 %R16036, -1
  store i32 %ARG3, i32* %2
  store i32 %R16037, i32* %0
  store i32 1, i32* %1
  br label %L2907

L2907:                                            ; preds = %L2917, %L2906
  %5 = load i32, i32* %0
  %R16039 = add i32 %5, -1
  store i32 %R16039, i32* %0
  %6 = load i32, i32* %1
  %cond = icmp ne i32 %5, 0
  br i1 %cond, label %L2908, label %L2918

L2908:                                            ; preds = %L2907
  %7 = load i32, i32* %2
  %R16042 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 %7)
  %R16043 = icmp eq i32 %R16042, 3
  %R160431 = zext i1 %R16043 to i32
  %cond2 = icmp ne i32 %R160431, 0
  br i1 %cond2, label %L2909, label %L2913

L2909:                                            ; preds = %L2908
  %cond3 = icmp ne i32 %6, 0
  br i1 %cond3, label %L2910, label %L2911

L2910:                                            ; preds = %L2909
  %R16049 = call double @lua_tonumber(%struct.lua_State* %ARG1, i32 %7)
  %R16050 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %ARG2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i64 0, i64 0), double %R16049)
  %R16051 = icmp sgt i32 %R16050, 0
  %R160514 = zext i1 %R16051 to i32
  store i32 %R160514, i32* %3
  br label %L2912

L2911:                                            ; preds = %L2909
  store i32 0, i32* %3
  br label %L2912

L2912:                                            ; preds = %L2911, %L2910
  %8 = load i32, i32* %3
  store i32 %8, i32* %1
  br label %L2917

L2913:                                            ; preds = %L2908
  %R16056 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 %7, i64* %l_0x62d000f39478)
  %cond5 = icmp ne i32 %6, 0
  br i1 %cond5, label %L2914, label %L2915

L2914:                                            ; preds = %L2913
  %9 = bitcast i64* %l_0x62d000f39478 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to i64*
  %load_target = load i64, i64* %11
  %R16062 = call i64 @fwrite(i8* %R16056, i64 1, i64 %load_target, %struct._IO_FILE* %ARG2)
  %12 = bitcast i64* %l_0x62d000f39478 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to i64*
  %load_target6 = load i64, i64* %14
  %R16064 = icmp eq i64 %R16062, %load_target6
  %R160647 = zext i1 %R16064 to i32
  store i32 %R160647, i32* %4
  br label %L2916

L2915:                                            ; preds = %L2913
  store i32 0, i32* %4
  br label %L2916

L2916:                                            ; preds = %L2915, %L2914
  %15 = load i32, i32* %4
  store i32 %15, i32* %1
  br label %L2917

L2917:                                            ; preds = %L2916, %L2912
  %R16067 = add i32 %7, 1
  store i32 %R16067, i32* %2
  br label %L2907

L2918:                                            ; preds = %L2907
  %R16070 = call i32 @pushresult(%struct.lua_State* %ARG1, i32 %6, i8* null)
  ret i32 %R16070
}

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*)

define internal i32 @io_write(%struct.lua_State* %ARG1) {
L2919:
  %R16074 = call %struct._IO_FILE* @getiofile(%struct.lua_State* %ARG1, i32 2)
  %R16075 = call i32 @g_write(%struct.lua_State* %ARG1, %struct._IO_FILE* %R16074, i32 1)
  ret i32 %R16075
}

define internal i32 @f_write(%struct.lua_State* %ARG1) {
L2920:
  %R16079 = call %struct._IO_FILE* @tofile(%struct.lua_State* %ARG1)
  %R16080 = call i32 @g_write(%struct.lua_State* %ARG1, %struct._IO_FILE* %R16079, i32 2)
  ret i32 %R16080
}

define internal i32 @io_flush(%struct.lua_State* %ARG1) {
L2921:
  %R16084 = call %struct._IO_FILE* @getiofile(%struct.lua_State* %ARG1, i32 2)
  %R16085 = call i32 @fflush(%struct._IO_FILE* %R16084)
  %R16086 = icmp eq i32 %R16085, 0
  %R160861 = zext i1 %R16086 to i32
  %R16087 = call i32 @pushresult(%struct.lua_State* %ARG1, i32 %R160861, i8* null)
  ret i32 %R16087
}

declare i32 @fflush(%struct._IO_FILE*)

define internal i32 @f_flush(%struct.lua_State* %ARG1) {
L2922:
  %R16091 = call %struct._IO_FILE* @tofile(%struct.lua_State* %ARG1)
  %R16092 = call i32 @fflush(%struct._IO_FILE* %R16091)
  %R16093 = icmp eq i32 %R16092, 0
  %R160931 = zext i1 %R16093 to i32
  %R16094 = call i32 @pushresult(%struct.lua_State* %ARG1, i32 %R160931, i8* null)
  ret i32 %R16094
}

define internal void @createmeta(%struct.lua_State* %ARG1) {
L2923:
  %R16098 = call i32 @luaL_newmetatable(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.215, i64 0, i64 0))
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -1)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.216, i64 0, i64 0))
  call void @luaL_register(%struct.lua_State* %ARG1, i8* null, %struct.luaL_Reg* getelementptr inbounds ([7 x %struct.luaL_Reg], [7 x %struct.luaL_Reg]* @flib, i32 0, i32 0))
  ret void
}

define internal void @createstdfile(%struct.lua_State* %ARG1, %struct._IO_FILE* %ARG2, i32 %ARG3, i8* %ARG4) {
L2924:
  %R16106 = call %struct._IO_FILE** @newfile(%struct.lua_State* %ARG1)
  %0 = bitcast %struct._IO_FILE** %R16106 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  store %struct._IO_FILE* %ARG2, %struct._IO_FILE** %2
  %R16108 = icmp sgt i32 %ARG3, 0
  %R161081 = zext i1 %R16108 to i32
  %cond = icmp ne i32 %R161081, 0
  br i1 %cond, label %L2925, label %L2926

L2925:                                            ; preds = %L2924
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -1)
  call void @lua_rawseti(%struct.lua_State* %ARG1, i32 -10001, i32 %ARG3)
  br label %L2926

L2926:                                            ; preds = %L2925, %L2924
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -2)
  %R16114 = call i32 @lua_setfenv(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -3, i8* %ARG4)
  ret void
}

define internal void @newfenv(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %ARG2) {
L2927:
  call void @lua_createtable(%struct.lua_State* %ARG1, i32 0, i32 1)
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %ARG2, i32 0)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.217, i64 0, i64 0))
  ret void
}

define internal i32 @luaopen_io(%struct.lua_State* %ARG1) {
L2928:
  call void @createmeta(%struct.lua_State* %ARG1)
  call void @newfenv(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* @io_fclose)
  call void @lua_replace(%struct.lua_State* %ARG1, i32 -10001)
  call void @luaL_register(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.218, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([10 x %struct.luaL_Reg], [10 x %struct.luaL_Reg]* @iolib, i32 0, i32 0))
  call void @newfenv(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* @io_noclose)
  %load_target = load %struct._IO_FILE*, %struct._IO_FILE** @stdin
  call void @createstdfile(%struct.lua_State* %ARG1, %struct._IO_FILE* %load_target, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.219, i64 0, i64 0))
  %load_target1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout
  call void @createstdfile(%struct.lua_State* %ARG1, %struct._IO_FILE* %load_target1, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.220, i64 0, i64 0))
  %load_target2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr
  call void @createstdfile(%struct.lua_State* %ARG1, %struct._IO_FILE* %load_target2, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.221, i64 0, i64 0))
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_getfield(%struct.lua_State* %ARG1, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i64 0, i64 0))
  call void @newfenv(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* @io_pclose)
  %R16146 = call i32 @lua_setfenv(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  ret i32 1
}

define internal i32 @os_pushresult(%struct.lua_State* %ARG1, i32 %ARG2, i8* %ARG3) {
L2929:
  %R16149 = call i32* @__errno_location()
  %0 = bitcast i32* %R16149 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i32*
  %load_target = load i32, i32* %2
  %cond = icmp ne i32 %ARG2, 0
  %select = select i1 %cond, i32 1, i32 3
  %cond1 = icmp ne i32 %ARG2, 0
  br i1 %cond1, label %L2930, label %L2931

L2930:                                            ; preds = %L2929
  call void @lua_pushboolean(%struct.lua_State* %ARG1, i32 1)
  br label %L2932

L2931:                                            ; preds = %L2929
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  %R16159 = call i8* @strerror(i32 %load_target)
  %R16160 = call i8* @lua_pushfstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.223, i64 0, i64 0), i8* %ARG3, i8* %R16159)
  %R16163 = sext i32 %load_target to i64
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 %R16163)
  br label %L2932

L2932:                                            ; preds = %L2931, %L2930
  ret i32 %select
}

define internal i32 @os_remove(%struct.lua_State* %ARG1) {
L2933:
  %R16165 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* null)
  %R16168 = call i32 @remove(i8* %R16165)
  %R16169 = icmp eq i32 %R16168, 0
  %R161691 = zext i1 %R16169 to i32
  %R16171 = call i32 @os_pushresult(%struct.lua_State* %ARG1, i32 %R161691, i8* %R16165)
  ret i32 %R16171
}

declare i32 @remove(i8*)

define internal i32 @os_exit(%struct.lua_State* %ARG1) {
L2934:
  %R16174 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 1, i64 0)
  %R16175 = trunc i64 %R16174 to i32
  call void @exit(i32 %R16175)
  ret void
}

define internal i32 @luaopen_os(%struct.lua_State* %ARG1) {
L2935:
  call void @luaL_register(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.224, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([3 x %struct.luaL_Reg], [3 x %struct.luaL_Reg]* @syslib, i32 0, i32 0))
  ret i32 1
}

define internal i64 @posrelat(i64 %ARG1, i64 %ARG2) {
L2936:
  %0 = alloca i64
  %R16181 = icmp slt i64 %ARG1, 0
  %R161811 = zext i1 %R16181 to i32
  store i64 %ARG1, i64* %0
  %cond = icmp ne i32 %R161811, 0
  br i1 %cond, label %L2937, label %L2938

L2937:                                            ; preds = %L2936
  %R16184 = add i64 %ARG2, 1
  %R16187 = add i64 %ARG1, %R16184
  store i64 %R16187, i64* %0
  br label %L2938

L2938:                                            ; preds = %L2937, %L2936
  %1 = load i64, i64* %0
  %R16191 = icmp sge i64 %1, 0
  %R161912 = zext i1 %R16191 to i32
  %cond3 = icmp ne i32 %R161912, 0
  %select = select i1 %cond3, i64 %1, i64 0
  ret i64 %select
}

define internal i32 @str_sub(%struct.lua_State* %ARG1) {
L2939:
  %l_0x62d000f692f0 = alloca i64
  %R16196 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %l_0x62d000f692f0)
  %R16198 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 2)
  %0 = bitcast i64* %l_0x62d000f692f0 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %2 = bitcast i8* %1 to i64*
  %load_target = load i64, i64* %2
  %R16200 = call i64 @posrelat(i64 %R16198, i64 %load_target)
  %R16202 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 3, i64 -1)
  %3 = bitcast i64* %l_0x62d000f692f0 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i64*
  %load_target1 = load i64, i64* %5
  %R16204 = call i64 @posrelat(i64 %R16202, i64 %load_target1)
  %R16206 = icmp slt i64 %R16200, 1
  %R162062 = zext i1 %R16206 to i32
  %cond = icmp ne i32 %R162062, 0
  %select = select i1 %cond, i64 1, i64 %R16200
  %6 = bitcast i64* %l_0x62d000f692f0 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i64*
  %load_target3 = load i64, i64* %8
  %R16210 = icmp sgt i64 %R16204, %load_target3
  %R162104 = zext i1 %R16210 to i32
  %cond5 = icmp ne i32 %R162104, 0
  %select6 = select i1 %cond5, i64 %load_target3, i64 %R16204
  %R16215 = icmp sle i64 %select, %select6
  %R162157 = zext i1 %R16215 to i32
  %cond8 = icmp ne i32 %R162157, 0
  br i1 %cond8, label %L2940, label %L2941

L2940:                                            ; preds = %L2939
  %9 = getelementptr inbounds i8, i8* %R16196, i64 %select
  %10 = getelementptr inbounds i8, i8* %9, i64 -1
  %R16223 = sub i64 %select6, %select
  %R16224 = add i64 %R16223, 1
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* %10, i64 %R16224)
  br label %L2942

L2941:                                            ; preds = %L2939
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.225, i64 0, i64 0), i64 0)
  br label %L2942

L2942:                                            ; preds = %L2941, %L2940
  ret i32 1
}

define internal i32 @str_lower(%struct.lua_State* %ARG1) {
L2943:
  %b_0x62d000f6a088 = alloca %struct.luaL_Buffer
  %l_0x62d000f69eb8 = alloca i64
  %0 = alloca i64
  %R16231 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %l_0x62d000f69eb8)
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000f6a088)
  store i64 0, i64* %0
  br label %L2944

L2944:                                            ; preds = %L2947, %L2943
  %1 = load i64, i64* %0
  %2 = bitcast i64* %l_0x62d000f69eb8 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i64*
  %load_target = load i64, i64* %4
  %R16236 = icmp ult i64 %1, %load_target
  %R162361 = zext i1 %R16236 to i32
  %cond = icmp ne i32 %R162361, 0
  br i1 %cond, label %L2945, label %L2948

L2945:                                            ; preds = %L2944
  %5 = bitcast %struct.luaL_Buffer* %b_0x62d000f6a088 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i8**
  %load_target2 = load i8*, i8** %8
  %9 = bitcast %struct.luaL_Buffer* %b_0x62d000f6a088 to i8*
  %10 = getelementptr inbounds i8, i8* %9, inttoptr (i64 8216 to i8*)
  %11 = bitcast i8* %10 to %struct.luaL_Buffer*
  %R16241 = icmp ult i8* %load_target2, %struct.luaL_Buffer* %11
  %R162413 = zext i1 %R16241 to i32
  %cond4 = icmp ne i32 %R162413, 0
  br i1 %cond4, label %L2947, label %L2946

L2946:                                            ; preds = %L2945
  %R16243 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000f6a088)
  br label %L2947

L2947:                                            ; preds = %L2946, %L2945
  %12 = getelementptr inbounds i8, i8* %R16231, i64 %1
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %load_target5 = load i8, i8* %13
  %R16250 = zext i8 %load_target5 to i32
  %R16251 = call i32 @tolower(i32 %R16250)
  %R16252 = trunc i32 %R16251 to i8
  %14 = bitcast %struct.luaL_Buffer* %b_0x62d000f6a088 to i8**
  %15 = bitcast i8** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i8**
  %load_target6 = load i8*, i8** %17
  %18 = getelementptr inbounds i8, i8* %load_target6, inttoptr (i64 1 to i8*)
  %19 = bitcast %struct.luaL_Buffer* %b_0x62d000f6a088 to i8**
  %20 = bitcast i8** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to i8**
  store i8* %18, i8** %22
  %23 = getelementptr inbounds i8, i8* %load_target6, i64 0
  store i8 %R16252, i8* %23
  %R16256 = add i64 %1, 1
  store i64 %R16256, i64* %0
  br label %L2944

L2948:                                            ; preds = %L2944
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000f6a088)
  ret i32 1
}

declare i32 @tolower(i32)

define internal i32 @str_upper(%struct.lua_State* %ARG1) {
L2949:
  %b_0x62d000f6ae20 = alloca %struct.luaL_Buffer
  %l_0x62d000f6ac50 = alloca i64
  %0 = alloca i64
  %R16261 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %l_0x62d000f6ac50)
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000f6ae20)
  store i64 0, i64* %0
  br label %L2950

L2950:                                            ; preds = %L2953, %L2949
  %1 = load i64, i64* %0
  %2 = bitcast i64* %l_0x62d000f6ac50 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i64*
  %load_target = load i64, i64* %4
  %R16266 = icmp ult i64 %1, %load_target
  %R162661 = zext i1 %R16266 to i32
  %cond = icmp ne i32 %R162661, 0
  br i1 %cond, label %L2951, label %L2954

L2951:                                            ; preds = %L2950
  %5 = bitcast %struct.luaL_Buffer* %b_0x62d000f6ae20 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  %8 = bitcast i8* %7 to i8**
  %load_target2 = load i8*, i8** %8
  %9 = bitcast %struct.luaL_Buffer* %b_0x62d000f6ae20 to i8*
  %10 = getelementptr inbounds i8, i8* %9, inttoptr (i64 8216 to i8*)
  %11 = bitcast i8* %10 to %struct.luaL_Buffer*
  %R16271 = icmp ult i8* %load_target2, %struct.luaL_Buffer* %11
  %R162713 = zext i1 %R16271 to i32
  %cond4 = icmp ne i32 %R162713, 0
  br i1 %cond4, label %L2953, label %L2952

L2952:                                            ; preds = %L2951
  %R16273 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000f6ae20)
  br label %L2953

L2953:                                            ; preds = %L2952, %L2951
  %12 = getelementptr inbounds i8, i8* %R16261, i64 %1
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %load_target5 = load i8, i8* %13
  %R16280 = zext i8 %load_target5 to i32
  %R16281 = call i32 @toupper(i32 %R16280)
  %R16282 = trunc i32 %R16281 to i8
  %14 = bitcast %struct.luaL_Buffer* %b_0x62d000f6ae20 to i8**
  %15 = bitcast i8** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i8**
  %load_target6 = load i8*, i8** %17
  %18 = getelementptr inbounds i8, i8* %load_target6, inttoptr (i64 1 to i8*)
  %19 = bitcast %struct.luaL_Buffer* %b_0x62d000f6ae20 to i8**
  %20 = bitcast i8** %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to i8**
  store i8* %18, i8** %22
  %23 = getelementptr inbounds i8, i8* %load_target6, i64 0
  store i8 %R16282, i8* %23
  %R16286 = add i64 %1, 1
  store i64 %R16286, i64* %0
  br label %L2950

L2954:                                            ; preds = %L2950
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000f6ae20)
  ret i32 1
}

declare i32 @toupper(i32)

define internal i32 @str_rep(%struct.lua_State* %ARG1) {
L2955:
  %b_0x62d000f6bad0 = alloca %struct.luaL_Buffer
  %l_0x62d000f6b9e8 = alloca i64
  %0 = alloca i32
  %R16291 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %l_0x62d000f6b9e8)
  %R16293 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 2)
  %R16294 = trunc i64 %R16293 to i32
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000f6bad0)
  store i32 %R16294, i32* %0
  br label %L2956

L2956:                                            ; preds = %L2957, %L2955
  %1 = load i32, i32* %0
  %R16298 = add i32 %1, -1
  %R16299 = icmp sgt i32 %1, 0
  %R162991 = zext i1 %R16299 to i32
  store i32 %R16298, i32* %0
  %cond = icmp ne i32 %R162991, 0
  br i1 %cond, label %L2957, label %L2958

L2957:                                            ; preds = %L2956
  %2 = bitcast i64* %l_0x62d000f6b9e8 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i64*
  %load_target = load i64, i64* %4
  call void @luaL_addlstring(%struct.luaL_Buffer* %b_0x62d000f6bad0, i8* %R16291, i64 %load_target)
  br label %L2956

L2958:                                            ; preds = %L2956
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000f6bad0)
  ret i32 1
}

define internal i32 @str_byte(%struct.lua_State* %ARG1) {
L2959:
  %l_0x62d000f8c5e8 = alloca i64
  %0 = alloca i32
  %1 = alloca i32
  %R16307 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %l_0x62d000f8c5e8)
  %R16309 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 2, i64 1)
  %2 = bitcast i64* %l_0x62d000f8c5e8 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i64*
  %load_target = load i64, i64* %4
  %R16311 = call i64 @posrelat(i64 %R16309, i64 %load_target)
  %R16314 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 3, i64 %R16311)
  %5 = bitcast i64* %l_0x62d000f8c5e8 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i64*
  %load_target1 = load i64, i64* %7
  %R16316 = call i64 @posrelat(i64 %R16314, i64 %load_target1)
  %R16318 = icmp sle i64 %R16311, 0
  %R163182 = zext i1 %R16318 to i32
  %cond = icmp ne i32 %R163182, 0
  %select = select i1 %cond, i64 1, i64 %R16311
  %8 = bitcast i64* %l_0x62d000f8c5e8 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i64*
  %load_target3 = load i64, i64* %10
  %R16322 = icmp ugt i64 %R16316, %load_target3
  %R163224 = zext i1 %R16322 to i32
  %cond5 = icmp ne i32 %R163224, 0
  %select6 = select i1 %cond5, i64 %load_target3, i64 %R16316
  %R16327 = icmp sgt i64 %select, %select6
  %R163277 = zext i1 %R16327 to i32
  %cond8 = icmp ne i32 %R163277, 0
  br i1 %cond8, label %L2960, label %L2961

L2960:                                            ; preds = %L2959
  store i32 0, i32* %1
  br label %L2967

L2961:                                            ; preds = %L2959
  %R16331 = sub i64 %select6, %select
  %R16332 = add i64 %R16331, 1
  %R16333 = trunc i64 %R16332 to i32
  %R16336 = sext i32 %R16333 to i64
  %R16337 = add i64 %select, %R16336
  %R16339 = icmp sle i64 %R16337, %select6
  %R163399 = zext i1 %R16339 to i32
  %cond10 = icmp ne i32 %R163399, 0
  br i1 %cond10, label %L2962, label %L2963

L2962:                                            ; preds = %L2961
  %R16342 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.226, i64 0, i64 0))
  br label %L2963

L2963:                                            ; preds = %L2962, %L2961
  call void @luaL_checkstack(%struct.lua_State* %ARG1, i32 %R16333, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.227, i64 0, i64 0))
  store i32 0, i32* %0
  br label %L2964

L2964:                                            ; preds = %L2965, %L2963
  %11 = load i32, i32* %0
  %R16348 = icmp slt i32 %11, %R16333
  %R1634811 = zext i1 %R16348 to i32
  %cond12 = icmp ne i32 %R1634811, 0
  br i1 %cond12, label %L2965, label %L2966

L2965:                                            ; preds = %L2964
  %R16353 = sext i32 %11 to i64
  %R16354 = add i64 %select, %R16353
  %R16355 = add i64 %R16354, -1
  %12 = getelementptr inbounds i8, i8* %R16307, i64 %R16355
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %load_target13 = load i8, i8* %13
  %R16359 = zext i8 %load_target13 to i64
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 %R16359)
  %R16361 = add i32 %11, 1
  store i32 %R16361, i32* %0
  br label %L2964

L2966:                                            ; preds = %L2964
  store i32 %R16333, i32* %1
  br label %L2967

L2967:                                            ; preds = %L2966, %L2960
  %14 = load i32, i32* %1
  ret i32 %14
}

define internal i32 @str_char(%struct.lua_State* %ARG1) {
L2968:
  %b_0x62d000f8d720 = alloca %struct.luaL_Buffer
  %0 = alloca i32
  %R16364 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000f8d720)
  store i32 1, i32* %0
  br label %L2969

L2969:                                            ; preds = %L2974, %L2968
  %1 = load i32, i32* %0
  %R16369 = icmp sle i32 %1, %R16364
  %R163691 = zext i1 %R16369 to i32
  %cond = icmp ne i32 %R163691, 0
  br i1 %cond, label %L2970, label %L2975

L2970:                                            ; preds = %L2969
  %R16372 = call i64 @luaL_checkinteger(%struct.lua_State* %ARG1, i32 %1)
  %R16373 = trunc i64 %R16372 to i32
  %R16375 = trunc i32 %R16373 to i8
  %R16376 = zext i8 %R16375 to i32
  %R16378 = icmp eq i32 %R16376, %R16373
  %R163782 = zext i1 %R16378 to i32
  %cond3 = icmp ne i32 %R163782, 0
  br i1 %cond3, label %L2972, label %L2971

L2971:                                            ; preds = %L2970
  %R16382 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i64 0, i64 0))
  br label %L2972

L2972:                                            ; preds = %L2971, %L2970
  %2 = bitcast %struct.luaL_Buffer* %b_0x62d000f8d720 to i8**
  %3 = bitcast i8** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i8**
  %load_target = load i8*, i8** %5
  %6 = bitcast %struct.luaL_Buffer* %b_0x62d000f8d720 to i8*
  %7 = getelementptr inbounds i8, i8* %6, inttoptr (i64 8216 to i8*)
  %8 = bitcast i8* %7 to %struct.luaL_Buffer*
  %R16388 = icmp ult i8* %load_target, %struct.luaL_Buffer* %8
  %R163884 = zext i1 %R16388 to i32
  %cond5 = icmp ne i32 %R163884, 0
  br i1 %cond5, label %L2974, label %L2973

L2973:                                            ; preds = %L2972
  %R16390 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000f8d720)
  br label %L2974

L2974:                                            ; preds = %L2973, %L2972
  %9 = bitcast %struct.luaL_Buffer* %b_0x62d000f8d720 to i8**
  %10 = bitcast i8** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to i8**
  %load_target6 = load i8*, i8** %12
  %13 = getelementptr inbounds i8, i8* %load_target6, inttoptr (i64 1 to i8*)
  %14 = bitcast %struct.luaL_Buffer* %b_0x62d000f8d720 to i8**
  %15 = bitcast i8** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i8**
  store i8* %13, i8** %17
  %18 = getelementptr inbounds i8, i8* %load_target6, i64 0
  store i8 %R16375, i8* %18
  %R16398 = add i32 %1, 1
  store i32 %R16398, i32* %0
  br label %L2969

L2975:                                            ; preds = %L2969
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000f8d720)
  ret i32 1
}

define internal i32 @check_capture(%struct.MatchState* %ARG1, i32 %ARG2) {
L2976:
  %0 = alloca i32
  %R16403 = add i32 %ARG2, -49
  %R16406 = icmp slt i32 %R16403, 0
  %R164061 = zext i1 %R16406 to i32
  %cond = icmp ne i32 %R164061, 0
  br i1 %cond, label %L2979, label %L2977

L2977:                                            ; preds = %L2976
  %1 = bitcast %struct.MatchState* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R16410 = icmp sge i32 %R16403, %load_target
  %R164102 = zext i1 %R16410 to i32
  %cond3 = icmp ne i32 %R164102, 0
  br i1 %cond3, label %L2979, label %L2978

L2978:                                            ; preds = %L2977
  %5 = bitcast %struct.MatchState* %ARG1 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i32 32
  %7 = bitcast i8* %6 to %struct.MatchState*
  %R16414 = sext i32 %R16403 to i64
  %R16415 = mul i64 %R16414, 16
  %8 = bitcast %struct.MatchState* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %R16415
  %10 = bitcast i8* %9 to %struct.MatchState*
  %11 = bitcast %struct.MatchState* %10 to i64*
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i64*
  %load_target4 = load i64, i64* %14
  %R16418 = icmp eq i64 %load_target4, -1
  %R164185 = zext i1 %R16418 to i32
  %cond6 = icmp ne i32 %R164185, 0
  br i1 %cond6, label %L2979, label %L2980

L2979:                                            ; preds = %L2978, %L2977, %L2976
  %15 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %16 = bitcast %struct.lua_State** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to %struct.lua_State**
  %load_target7 = load %struct.lua_State*, %struct.lua_State** %18
  %R16422 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.229, i64 0, i64 0))
  store i32 %R16422, i32* %0
  br label %L2981

L2980:                                            ; preds = %L2978
  store i32 %R16403, i32* %0
  br label %L2981

L2981:                                            ; preds = %L2980, %L2979
  %19 = load i32, i32* %0
  ret i32 %19
}

define internal i32 @capture_to_close(%struct.MatchState* %ARG1) {
L2982:
  %0 = alloca i32
  %1 = alloca i32
  %2 = bitcast %struct.MatchState* %ARG1 to i32*
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 24
  %5 = bitcast i8* %4 to i32*
  %load_target = load i32, i32* %5
  %R16428 = add i32 %load_target, -1
  store i32 %R16428, i32* %0
  br label %L2983

L2983:                                            ; preds = %L2986, %L2982
  %6 = load i32, i32* %0
  %R16430 = icmp sge i32 %6, 0
  %R164301 = zext i1 %R16430 to i32
  %cond = icmp ne i32 %R164301, 0
  br i1 %cond, label %L2984, label %L2987

L2984:                                            ; preds = %L2983
  %7 = bitcast %struct.MatchState* %ARG1 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i32 32
  %9 = bitcast i8* %8 to %struct.MatchState*
  %R16434 = sext i32 %6 to i64
  %R16435 = mul i64 %R16434, 16
  %10 = bitcast %struct.MatchState* %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %R16435
  %12 = bitcast i8* %11 to %struct.MatchState*
  %13 = bitcast %struct.MatchState* %12 to i64*
  %14 = bitcast i64* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 8
  %16 = bitcast i8* %15 to i64*
  %load_target2 = load i64, i64* %16
  %R16438 = icmp eq i64 %load_target2, -1
  %R164383 = zext i1 %R16438 to i32
  %cond4 = icmp ne i32 %R164383, 0
  br i1 %cond4, label %L2985, label %L2986

L2985:                                            ; preds = %L2984
  store i32 %6, i32* %1
  br label %L2988

L2986:                                            ; preds = %L2984
  %R16442 = add i32 %6, -1
  store i32 %R16442, i32* %0
  br label %L2983

L2987:                                            ; preds = %L2983
  %17 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %18 = bitcast %struct.lua_State** %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 16
  %20 = bitcast i8* %19 to %struct.lua_State**
  %load_target5 = load %struct.lua_State*, %struct.lua_State** %20
  %R16446 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.230, i64 0, i64 0))
  store i32 %R16446, i32* %1
  br label %L2988

L2988:                                            ; preds = %L2987, %L2985
  %21 = load i32, i32* %1
  ret i32 %21
}

define internal i8* @classend(%struct.MatchState* %ARG1, i8* %ARG2) {
L2989:
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i8*
  %3 = getelementptr inbounds i8, i8* %ARG2, inttoptr (i64 1 to i8*)
  %4 = getelementptr inbounds i8, i8* %ARG2, i64 0
  %load_target = load i8, i8* %4
  switch i8 %load_target, label %L3002 [
    i32 37, label %L2990
    i32 91, label %L2993
  ]

L2990:                                            ; preds = %L2989
  %5 = getelementptr inbounds i8, i8* %ARG2, i64 1
  %load_target1 = load i8, i8* %5
  %cond = icmp ne i8 %load_target1, 0
  br i1 %cond, label %L2992, label %L2991

L2991:                                            ; preds = %L2990
  %6 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %7 = bitcast %struct.lua_State** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %struct.lua_State**
  %load_target2 = load %struct.lua_State*, %struct.lua_State** %9
  %R16457 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.231, i64 0, i64 0))
  br label %L2992

L2992:                                            ; preds = %L2991, %L2990
  %10 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %10, i8** %2
  br label %L3003

L2993:                                            ; preds = %L2989
  %11 = getelementptr inbounds i8, i8* %ARG2, i64 1
  %load_target3 = load i8, i8* %11
  %R16463 = sext i8 %load_target3 to i32
  %R16464 = icmp eq i32 %R16463, 94
  %R164644 = zext i1 %R16464 to i32
  store i8* %3, i8** %0
  %cond5 = icmp ne i32 %R164644, 0
  br i1 %cond5, label %L2994, label %L2995

L2994:                                            ; preds = %L2993
  %12 = getelementptr inbounds i8, i8* %3, inttoptr (i64 1 to i8*)
  store i8* %12, i8** %0
  br label %L2995

L2995:                                            ; preds = %L3000, %L2994, %L2993
  %13 = load i8*, i8** %0
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %load_target6 = load i8, i8* %14
  %cond7 = icmp ne i8 %load_target6, 0
  br i1 %cond7, label %L2997, label %L2996

L2996:                                            ; preds = %L2995
  %15 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %16 = bitcast %struct.lua_State** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to %struct.lua_State**
  %load_target8 = load %struct.lua_State*, %struct.lua_State** %18
  %R16474 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.232, i64 0, i64 0))
  br label %L2997

L2997:                                            ; preds = %L2996, %L2995
  %19 = getelementptr inbounds i8, i8* %13, inttoptr (i64 1 to i8*)
  %20 = getelementptr inbounds i8, i8* %13, i64 0
  %load_target9 = load i8, i8* %20
  %R16478 = sext i8 %load_target9 to i32
  %R16479 = icmp eq i32 %R16478, 37
  %R1647910 = zext i1 %R16479 to i32
  store i8* %19, i8** %1
  store i8* %19, i8** %0
  %cond11 = icmp ne i32 %R1647910, 0
  br i1 %cond11, label %L2998, label %L3000

L2998:                                            ; preds = %L2997
  %21 = getelementptr inbounds i8, i8* %13, i64 1
  %load_target12 = load i8, i8* %21
  store i8* %19, i8** %1
  %cond13 = icmp ne i8 %load_target12, 0
  br i1 %cond13, label %L2999, label %L3000

L2999:                                            ; preds = %L2998
  %22 = getelementptr inbounds i8, i8* %19, inttoptr (i64 1 to i8*)
  store i8* %22, i8** %1
  store i8* %22, i8** %0
  br label %L3000

L3000:                                            ; preds = %L2999, %L2998, %L2997
  %23 = load i8*, i8** %1
  %24 = getelementptr inbounds i8, i8* %23, i64 0
  %load_target14 = load i8, i8* %24
  %R16488 = sext i8 %load_target14 to i32
  %R16489 = icmp ne i32 %R16488, 93
  %R1648915 = zext i1 %R16489 to i32
  %cond16 = icmp ne i32 %R1648915, 0
  br i1 %cond16, label %L2995, label %L3001

L3001:                                            ; preds = %L3000
  %25 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %25, i8** %2
  br label %L3003

L3002:                                            ; preds = %L2989
  store i8* %3, i8** %2
  br label %L3003

L3003:                                            ; preds = %L3002, %L3001, %L2992
  %26 = load i8*, i8** %2
  ret i8* %26
}

define internal i32 @match_class(i32 %ARG1, i32 %ARG2) {
L3004:
  %0 = alloca i32
  %1 = alloca i32
  %R16494 = call i32 @tolower(i32 %ARG2)
  switch i32 %R16494, label %L3015 [
    i32 97, label %L3005
    i32 99, label %L3006
    i32 100, label %L3007
    i32 108, label %L3008
    i32 112, label %L3009
    i32 115, label %L3010
    i32 117, label %L3011
    i32 119, label %L3012
    i32 120, label %L3013
    i32 122, label %L3014
  ]

L3005:                                            ; preds = %L3004
  %R16495 = call i16** @__ctype_b_loc()
  %2 = bitcast i16** %R16495 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i16**
  %load_target = load i16*, i16** %4
  %R16499 = sext i32 %ARG1 to i64
  %R16500 = mul i64 %R16499, 2
  %5 = bitcast i16* %load_target to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 %R16500
  %7 = bitcast i8* %6 to i16*
  %8 = bitcast i16* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i16*
  %load_target1 = load i16, i16* %10
  %R16503 = zext i16 %load_target1 to i32
  %R16504 = and i32 %R16503, 1024
  store i32 %R16504, i32* %0
  br label %L3016

L3006:                                            ; preds = %L3004
  %R16505 = call i16** @__ctype_b_loc()
  %11 = bitcast i16** %R16505 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i16**
  %load_target2 = load i16*, i16** %13
  %R16509 = sext i32 %ARG1 to i64
  %R16510 = mul i64 %R16509, 2
  %14 = bitcast i16* %load_target2 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %R16510
  %16 = bitcast i8* %15 to i16*
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i16*
  %load_target3 = load i16, i16* %19
  %R16513 = zext i16 %load_target3 to i32
  %R16514 = and i32 %R16513, 2
  store i32 %R16514, i32* %0
  br label %L3016

L3007:                                            ; preds = %L3004
  %R16515 = call i16** @__ctype_b_loc()
  %20 = bitcast i16** %R16515 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to i16**
  %load_target4 = load i16*, i16** %22
  %R16519 = sext i32 %ARG1 to i64
  %R16520 = mul i64 %R16519, 2
  %23 = bitcast i16* %load_target4 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %R16520
  %25 = bitcast i8* %24 to i16*
  %26 = bitcast i16* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = bitcast i8* %27 to i16*
  %load_target5 = load i16, i16* %28
  %R16523 = zext i16 %load_target5 to i32
  %R16524 = and i32 %R16523, 2048
  store i32 %R16524, i32* %0
  br label %L3016

L3008:                                            ; preds = %L3004
  %R16525 = call i16** @__ctype_b_loc()
  %29 = bitcast i16** %R16525 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to i16**
  %load_target6 = load i16*, i16** %31
  %R16529 = sext i32 %ARG1 to i64
  %R16530 = mul i64 %R16529, 2
  %32 = bitcast i16* %load_target6 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %R16530
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast i16* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to i16*
  %load_target7 = load i16, i16* %37
  %R16533 = zext i16 %load_target7 to i32
  %R16534 = and i32 %R16533, 512
  store i32 %R16534, i32* %0
  br label %L3016

L3009:                                            ; preds = %L3004
  %R16535 = call i16** @__ctype_b_loc()
  %38 = bitcast i16** %R16535 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to i16**
  %load_target8 = load i16*, i16** %40
  %R16539 = sext i32 %ARG1 to i64
  %R16540 = mul i64 %R16539, 2
  %41 = bitcast i16* %load_target8 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %R16540
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast i16* %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to i16*
  %load_target9 = load i16, i16* %46
  %R16543 = zext i16 %load_target9 to i32
  %R16544 = and i32 %R16543, 4
  store i32 %R16544, i32* %0
  br label %L3016

L3010:                                            ; preds = %L3004
  %R16545 = call i16** @__ctype_b_loc()
  %47 = bitcast i16** %R16545 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  %49 = bitcast i8* %48 to i16**
  %load_target10 = load i16*, i16** %49
  %R16549 = sext i32 %ARG1 to i64
  %R16550 = mul i64 %R16549, 2
  %50 = bitcast i16* %load_target10 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %R16550
  %52 = bitcast i8* %51 to i16*
  %53 = bitcast i16* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 0
  %55 = bitcast i8* %54 to i16*
  %load_target11 = load i16, i16* %55
  %R16553 = zext i16 %load_target11 to i32
  %R16554 = and i32 %R16553, 8192
  store i32 %R16554, i32* %0
  br label %L3016

L3011:                                            ; preds = %L3004
  %R16555 = call i16** @__ctype_b_loc()
  %56 = bitcast i16** %R16555 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  %58 = bitcast i8* %57 to i16**
  %load_target12 = load i16*, i16** %58
  %R16559 = sext i32 %ARG1 to i64
  %R16560 = mul i64 %R16559, 2
  %59 = bitcast i16* %load_target12 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 %R16560
  %61 = bitcast i8* %60 to i16*
  %62 = bitcast i16* %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %64 = bitcast i8* %63 to i16*
  %load_target13 = load i16, i16* %64
  %R16563 = zext i16 %load_target13 to i32
  %R16564 = and i32 %R16563, 256
  store i32 %R16564, i32* %0
  br label %L3016

L3012:                                            ; preds = %L3004
  %R16565 = call i16** @__ctype_b_loc()
  %65 = bitcast i16** %R16565 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = bitcast i8* %66 to i16**
  %load_target14 = load i16*, i16** %67
  %R16569 = sext i32 %ARG1 to i64
  %R16570 = mul i64 %R16569, 2
  %68 = bitcast i16* %load_target14 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 %R16570
  %70 = bitcast i8* %69 to i16*
  %71 = bitcast i16* %70 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 0
  %73 = bitcast i8* %72 to i16*
  %load_target15 = load i16, i16* %73
  %R16573 = zext i16 %load_target15 to i32
  %R16574 = and i32 %R16573, 8
  store i32 %R16574, i32* %0
  br label %L3016

L3013:                                            ; preds = %L3004
  %R16575 = call i16** @__ctype_b_loc()
  %74 = bitcast i16** %R16575 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 0
  %76 = bitcast i8* %75 to i16**
  %load_target16 = load i16*, i16** %76
  %R16579 = sext i32 %ARG1 to i64
  %R16580 = mul i64 %R16579, 2
  %77 = bitcast i16* %load_target16 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %R16580
  %79 = bitcast i8* %78 to i16*
  %80 = bitcast i16* %79 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 0
  %82 = bitcast i8* %81 to i16*
  %load_target17 = load i16, i16* %82
  %R16583 = zext i16 %load_target17 to i32
  %R16584 = and i32 %R16583, 4096
  store i32 %R16584, i32* %0
  br label %L3016

L3014:                                            ; preds = %L3004
  %R16586 = icmp eq i32 %ARG1, 0
  %R1658618 = zext i1 %R16586 to i32
  store i32 %R1658618, i32* %0
  br label %L3016

L3015:                                            ; preds = %L3004
  %R16589 = icmp eq i32 %ARG2, %ARG1
  %R1658919 = zext i1 %R16589 to i32
  store i32 %R1658919, i32* %1
  br label %L3017

L3016:                                            ; preds = %L3014, %L3013, %L3012, %L3011, %L3010, %L3009, %L3008, %L3007, %L3006, %L3005
  %83 = load i32, i32* %0
  %R16593 = icmp eq i32 %83, 0
  %R1659320 = zext i1 %R16593 to i32
  %R16594 = call i16** @__ctype_b_loc()
  %84 = bitcast i16** %R16594 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 0
  %86 = bitcast i8* %85 to i16**
  %load_target21 = load i16*, i16** %86
  %R16598 = sext i32 %ARG2 to i64
  %R16599 = mul i64 %R16598, 2
  %87 = bitcast i16* %load_target21 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 %R16599
  %89 = bitcast i8* %88 to i16*
  %90 = bitcast i16* %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 0
  %92 = bitcast i8* %91 to i16*
  %load_target22 = load i16, i16* %92
  %R16602 = zext i16 %load_target22 to i32
  %R16603 = and i32 %R16602, 512
  %cond = icmp ne i32 %R16603, 0
  %select = select i1 %cond, i32 %83, i32 %R1659320
  store i32 %select, i32* %1
  br label %L3017

L3017:                                            ; preds = %L3016, %L3015
  %93 = load i32, i32* %1
  ret i32 %93
}

define internal i32 @matchbracketclass(i32 %ARG1, i8* %ARG2, i8* %ARG3) {
L3018:
  %0 = alloca i8*
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = getelementptr inbounds i8, i8* %ARG2, i64 1
  %load_target = load i8, i8* %6
  %R16607 = sext i8 %load_target to i32
  %R16608 = icmp eq i32 %R16607, 94
  %R166081 = zext i1 %R16608 to i32
  store i8* %ARG2, i8** %0
  store i32 1, i32* %4
  store i32 1, i32* %3
  store i32 1, i32* %2
  store i32 1, i32* %1
  %cond = icmp ne i32 %R166081, 0
  br i1 %cond, label %L3019, label %L3020

L3019:                                            ; preds = %L3018
  %7 = getelementptr inbounds i8, i8* %ARG2, inttoptr (i64 1 to i8*)
  store i8* %7, i8** %0
  store i32 0, i32* %4
  store i32 0, i32* %3
  store i32 0, i32* %2
  store i32 0, i32* %1
  br label %L3020

L3020:                                            ; preds = %L3028, %L3026, %L3025, %L3022, %L3019, %L3018
  %8 = load i8*, i8** %0
  %9 = getelementptr inbounds i8, i8* %8, inttoptr (i64 1 to i8*)
  %R16614 = icmp ult i8* %9, %ARG3
  %R166142 = zext i1 %R16614 to i32
  store i8* %9, i8** %0
  %cond3 = icmp ne i32 %R166142, 0
  br i1 %cond3, label %L3021, label %L3030

L3021:                                            ; preds = %L3020
  %10 = getelementptr inbounds i8, i8* %8, i64 1
  %load_target4 = load i8, i8* %10
  %R16617 = sext i8 %load_target4 to i32
  %R16618 = icmp eq i32 %R16617, 37
  %R166185 = zext i1 %R16618 to i32
  %cond6 = icmp ne i32 %R166185, 0
  br i1 %cond6, label %L3022, label %L3024

L3022:                                            ; preds = %L3021
  %11 = getelementptr inbounds i8, i8* %9, inttoptr (i64 1 to i8*)
  %12 = getelementptr inbounds i8, i8* %8, i64 2
  %load_target7 = load i8, i8* %12
  %R16625 = zext i8 %load_target7 to i32
  %R16626 = call i32 @match_class(i32 %ARG1, i32 %R16625)
  store i8* %11, i8** %0
  %cond8 = icmp ne i32 %R16626, 0
  br i1 %cond8, label %L3023, label %L3020

L3023:                                            ; preds = %L3022
  %13 = load i32, i32* %1
  store i32 %13, i32* %5
  br label %L3031

L3024:                                            ; preds = %L3021
  %14 = getelementptr inbounds i8, i8* %8, i64 2
  %load_target9 = load i8, i8* %14
  %R16631 = sext i8 %load_target9 to i32
  %R16632 = icmp eq i32 %R16631, 45
  %R1663210 = zext i1 %R16632 to i32
  %15 = getelementptr inbounds i8, i8* %9, i64 2
  %R16636 = icmp ult i8* %15, %ARG3
  %R1663611 = zext i1 %R16636 to i32
  %16 = icmp ne i32 %R1663210, 0
  %17 = icmp ne i32 %R1663611, 0
  %R16637 = and i1 %16, %17
  %R1663712 = zext i1 %R16637 to i32
  %cond13 = icmp ne i32 %R1663712, 0
  br i1 %cond13, label %L3025, label %L3028

L3025:                                            ; preds = %L3024
  %R16639 = ptrtoint i8* %9 to i64
  %R16640 = add i64 %R16639, 2
  %R16641 = inttoptr i64 %R16640 to i8*
  %18 = getelementptr inbounds i8, i8* %R16641, i64 -2
  %load_target14 = load i8, i8* %18
  %R16646 = zext i8 %load_target14 to i32
  %R16648 = icmp sle i32 %R16646, %ARG1
  %R1664815 = zext i1 %R16648 to i32
  store i8* %R16641, i8** %0
  %cond16 = icmp ne i32 %R1664815, 0
  br i1 %cond16, label %L3026, label %L3020

L3026:                                            ; preds = %L3025
  %19 = getelementptr inbounds i8, i8* %R16641, i64 0
  %load_target17 = load i8, i8* %19
  %R16653 = zext i8 %load_target17 to i32
  %R16654 = icmp sle i32 %ARG1, %R16653
  %R1665418 = zext i1 %R16654 to i32
  %cond19 = icmp ne i32 %R1665418, 0
  br i1 %cond19, label %L3027, label %L3020

L3027:                                            ; preds = %L3026
  %20 = load i32, i32* %2
  store i32 %20, i32* %5
  br label %L3031

L3028:                                            ; preds = %L3024
  %R16659 = zext i8 %load_target4 to i32
  %R16661 = icmp eq i32 %R16659, %ARG1
  %R1666120 = zext i1 %R16661 to i32
  %cond21 = icmp ne i32 %R1666120, 0
  br i1 %cond21, label %L3029, label %L3020

L3029:                                            ; preds = %L3028
  %21 = load i32, i32* %3
  store i32 %21, i32* %5
  br label %L3031

L3030:                                            ; preds = %L3020
  %22 = load i32, i32* %4
  %R16664 = icmp eq i32 %22, 0
  %R1666422 = zext i1 %R16664 to i32
  store i32 %R1666422, i32* %5
  br label %L3031

L3031:                                            ; preds = %L3030, %L3029, %L3027, %L3023
  %23 = load i32, i32* %5
  ret i32 %23
}

define internal i32 @singlematch(i32 %ARG1, i8* %ARG2, i8* %ARG3) {
L3032:
  %0 = alloca i32
  %1 = getelementptr inbounds i8, i8* %ARG2, i64 0
  %load_target = load i8, i8* %1
  switch i8 %load_target, label %L3036 [
    i32 37, label %L3034
    i32 46, label %L3033
    i32 91, label %L3035
  ]

L3033:                                            ; preds = %L3032
  store i32 1, i32* %0
  br label %L3037

L3034:                                            ; preds = %L3032
  %2 = getelementptr inbounds i8, i8* %ARG2, i64 1
  %load_target1 = load i8, i8* %2
  %R16672 = zext i8 %load_target1 to i32
  %R16673 = call i32 @match_class(i32 %ARG1, i32 %R16672)
  store i32 %R16673, i32* %0
  br label %L3037

L3035:                                            ; preds = %L3032
  %3 = getelementptr inbounds i8, i8* %ARG3, i64 -1
  %R16678 = call i32 @matchbracketclass(i32 %ARG1, i8* %ARG2, i8* %3)
  store i32 %R16678, i32* %0
  br label %L3037

L3036:                                            ; preds = %L3032
  %R16682 = zext i8 %load_target to i32
  %R16684 = icmp eq i32 %R16682, %ARG1
  %R166842 = zext i1 %R16684 to i32
  store i32 %R166842, i32* %0
  br label %L3037

L3037:                                            ; preds = %L3036, %L3035, %L3034, %L3033
  %4 = load i32, i32* %0
  ret i32 %4
}

define internal i8* @matchbalance(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3) {
L3038:
  %0 = alloca i8*
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i8*
  %4 = getelementptr inbounds i8, i8* %ARG3, i64 0
  %load_target = load i8, i8* %4
  %cond = icmp ne i8 %load_target, 0
  br i1 %cond, label %L3039, label %L3040

L3039:                                            ; preds = %L3038
  %5 = getelementptr inbounds i8, i8* %ARG3, i64 1
  %load_target1 = load i8, i8* %5
  %cond2 = icmp ne i8 %load_target1, 0
  br i1 %cond2, label %L3041, label %L3040

L3040:                                            ; preds = %L3039, %L3038
  %6 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %7 = bitcast %struct.lua_State** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %9
  %R16696 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.233, i64 0, i64 0))
  br label %L3041

L3041:                                            ; preds = %L3040, %L3039
  %10 = getelementptr inbounds i8, i8* %ARG2, i64 0
  %load_target4 = load i8, i8* %10
  %R16699 = sext i8 %load_target4 to i32
  %11 = getelementptr inbounds i8, i8* %ARG3, i64 0
  %load_target5 = load i8, i8* %11
  %R16702 = sext i8 %load_target5 to i32
  %R16703 = icmp ne i32 %R16699, %R16702
  %R167036 = zext i1 %R16703 to i32
  store i8* %ARG2, i8** %0
  %cond7 = icmp ne i32 %R167036, 0
  br i1 %cond7, label %L3042, label %L3043

L3042:                                            ; preds = %L3041
  store i8* null, i8** %3
  br label %L3051

L3043:                                            ; preds = %L3041
  %R16707 = sext i8 %load_target5 to i32
  %12 = getelementptr inbounds i8, i8* %ARG3, i64 1
  %load_target8 = load i8, i8* %12
  %R16710 = sext i8 %load_target8 to i32
  store i32 1, i32* %2
  store i32 1, i32* %1
  br label %L3044

L3044:                                            ; preds = %L3049, %L3048, %L3046, %L3043
  %13 = load i8*, i8** %0
  %14 = getelementptr inbounds i8, i8* %13, inttoptr (i64 1 to i8*)
  %15 = bitcast %struct.MatchState* %ARG1 to i8**
  %16 = bitcast i8** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i8**
  %load_target9 = load i8*, i8** %18
  %R16715 = icmp ult i8* %14, %load_target9
  %R1671510 = zext i1 %R16715 to i32
  store i8* %14, i8** %0
  %cond11 = icmp ne i32 %R1671510, 0
  br i1 %cond11, label %L3045, label %L3050

L3045:                                            ; preds = %L3044
  %19 = getelementptr inbounds i8, i8* %13, i64 1
  %load_target12 = load i8, i8* %19
  %R16718 = sext i8 %load_target12 to i32
  %R16720 = icmp eq i32 %R16718, %R16710
  %R1672013 = zext i1 %R16720 to i32
  %cond14 = icmp ne i32 %R1672013, 0
  br i1 %cond14, label %L3046, label %L3048

L3046:                                            ; preds = %L3045
  %20 = load i32, i32* %1
  %R16722 = add i32 %20, -1
  store i32 %R16722, i32* %2
  store i32 %R16722, i32* %1
  %cond15 = icmp ne i32 %R16722, 0
  br i1 %cond15, label %L3044, label %L3047

L3047:                                            ; preds = %L3046
  %21 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %21, i8** %3
  br label %L3051

L3048:                                            ; preds = %L3045
  %R16728 = sext i8 %load_target12 to i32
  %R16730 = icmp eq i32 %R16728, %R16707
  %R1673016 = zext i1 %R16730 to i32
  %cond17 = icmp ne i32 %R1673016, 0
  br i1 %cond17, label %L3049, label %L3044

L3049:                                            ; preds = %L3048
  %22 = load i32, i32* %2
  %R16732 = add i32 %22, 1
  store i32 %R16732, i32* %2
  store i32 %R16732, i32* %1
  br label %L3044

L3050:                                            ; preds = %L3044
  store i8* null, i8** %3
  br label %L3051

L3051:                                            ; preds = %L3050, %L3047, %L3042
  %23 = load i8*, i8** %3
  ret i8* %23
}

define internal i8* @max_expand(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3, i8* %ARG4) {
L3052:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i8*
  store i64 0, i64* %0
  br label %L3053

L3053:                                            ; preds = %L3055, %L3052
  %3 = load i64, i64* %0
  %4 = getelementptr inbounds i8, i8* %ARG2, i64 %3
  %5 = bitcast %struct.MatchState* %ARG1 to i8**
  %6 = bitcast i8** %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to i8**
  %load_target = load i8*, i8** %8
  %R16738 = icmp ult i8* %4, %load_target
  %R167381 = zext i1 %R16738 to i32
  store i64 %3, i64* %1
  %cond = icmp ne i32 %R167381, 0
  br i1 %cond, label %L3054, label %L3056

L3054:                                            ; preds = %L3053
  %9 = getelementptr inbounds i8, i8* %4, i64 0
  %load_target2 = load i8, i8* %9
  %R16744 = zext i8 %load_target2 to i32
  %R16747 = call i32 @singlematch(i32 %R16744, i8* %ARG3, i8* %ARG4)
  store i64 %3, i64* %1
  %cond3 = icmp ne i32 %R16747, 0
  br i1 %cond3, label %L3055, label %L3056

L3055:                                            ; preds = %L3054
  %R16749 = add i64 %3, 1
  store i64 %R16749, i64* %0
  br label %L3053

L3056:                                            ; preds = %L3059, %L3054, %L3053
  %10 = load i64, i64* %1
  %R16751 = icmp sge i64 %10, 0
  %R167514 = zext i1 %R16751 to i32
  %cond5 = icmp ne i32 %R167514, 0
  br i1 %cond5, label %L3057, label %L3060

L3057:                                            ; preds = %L3056
  %11 = getelementptr inbounds i8, i8* %ARG2, i64 %10
  %12 = getelementptr inbounds i8, i8* %ARG4, i64 1
  %R16758 = call i8* @match(%struct.MatchState* %ARG1, i8* %11, i8* %12)
  %cond6 = icmp ne i8* %R16758, null
  br i1 %cond6, label %L3058, label %L3059

L3058:                                            ; preds = %L3057
  store i8* %R16758, i8** %2
  br label %L3061

L3059:                                            ; preds = %L3057
  %R16763 = add i64 %10, -1
  store i64 %R16763, i64* %1
  br label %L3056

L3060:                                            ; preds = %L3056
  store i8* null, i8** %2
  br label %L3061

L3061:                                            ; preds = %L3060, %L3058
  %13 = load i8*, i8** %2
  ret i8* %13
}

declare i8* @match(%struct.MatchState*, i8*, i8*)

define internal i8* @min_expand(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3, i8* %ARG4) {
L3062:
  %0 = alloca i8*
  %1 = alloca i8*
  store i8* %ARG2, i8** %0
  br label %L3063

L3063:                                            ; preds = %L3067, %L3062
  %2 = load i8*, i8** %0
  %3 = getelementptr inbounds i8, i8* %ARG4, i64 1
  %R16768 = call i8* @match(%struct.MatchState* %ARG1, i8* %2, i8* %3)
  %cond = icmp ne i8* %R16768, null
  br i1 %cond, label %L3064, label %L3065

L3064:                                            ; preds = %L3063
  store i8* %R16768, i8** %1
  br label %L3069

L3065:                                            ; preds = %L3063
  %4 = bitcast %struct.MatchState* %ARG1 to i8**
  %5 = bitcast i8** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i8**
  %load_target = load i8*, i8** %7
  %R16776 = icmp ult i8* %2, %load_target
  %R167761 = zext i1 %R16776 to i32
  %cond2 = icmp ne i32 %R167761, 0
  br i1 %cond2, label %L3066, label %L3068

L3066:                                            ; preds = %L3065
  %8 = getelementptr inbounds i8, i8* %2, i64 0
  %load_target3 = load i8, i8* %8
  %R16780 = zext i8 %load_target3 to i32
  %R16783 = call i32 @singlematch(i32 %R16780, i8* %ARG3, i8* %ARG4)
  %cond4 = icmp ne i32 %R16783, 0
  br i1 %cond4, label %L3067, label %L3068

L3067:                                            ; preds = %L3066
  %9 = getelementptr inbounds i8, i8* %2, inttoptr (i64 1 to i8*)
  store i8* %9, i8** %0
  br label %L3063

L3068:                                            ; preds = %L3066, %L3065
  store i8* null, i8** %1
  br label %L3069

L3069:                                            ; preds = %L3068, %L3064
  %10 = load i8*, i8** %1
  ret i8* %10
}

define internal i8* @start_capture(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3, i32 %ARG4) {
L3070:
  %0 = bitcast %struct.MatchState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R16789 = icmp sge i32 %load_target, 32
  %R167891 = zext i1 %R16789 to i32
  %cond = icmp ne i32 %R167891, 0
  br i1 %cond, label %L3071, label %L3072

L3071:                                            ; preds = %L3070
  %4 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %5 = bitcast %struct.lua_State** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_State**
  %load_target2 = load %struct.lua_State*, %struct.lua_State** %7
  %R16793 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.234, i64 0, i64 0))
  br label %L3072

L3072:                                            ; preds = %L3071, %L3070
  %8 = bitcast %struct.MatchState* %ARG1 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i32 32
  %10 = bitcast i8* %9 to %struct.MatchState*
  %R16798 = sext i32 %load_target to i64
  %R16799 = mul i64 %R16798, 16
  %11 = bitcast %struct.MatchState* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %R16799
  %13 = bitcast i8* %12 to %struct.MatchState*
  %14 = bitcast %struct.MatchState* %13 to i8**
  %15 = bitcast i8** %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i8**
  store i8* %ARG2, i8** %17
  %R16802 = sext i32 %ARG4 to i64
  %18 = bitcast %struct.MatchState* %13 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %R16802, i64* %21
  %R16810 = add i32 %load_target, 1
  %22 = bitcast %struct.MatchState* %ARG1 to i32*
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 24
  %25 = bitcast i8* %24 to i32*
  store i32 %R16810, i32* %25
  %R16815 = call i8* @match(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3)
  %cond3 = icmp ne i8* %R16815, null
  br i1 %cond3, label %L3074, label %L3073

L3073:                                            ; preds = %L3072
  %26 = bitcast %struct.MatchState* %ARG1 to i32*
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 24
  %29 = bitcast i8* %28 to i32*
  %load_target4 = load i32, i32* %29
  %R16819 = add i32 %load_target4, -1
  %30 = bitcast %struct.MatchState* %ARG1 to i32*
  %31 = bitcast i32* %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 24
  %33 = bitcast i8* %32 to i32*
  store i32 %R16819, i32* %33
  br label %L3074

L3074:                                            ; preds = %L3073, %L3072
  ret i8* %R16815
}

define internal i8* @end_capture(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3) {
L3075:
  %R16823 = call i32 @capture_to_close(%struct.MatchState* %ARG1)
  %0 = bitcast %struct.MatchState* %ARG1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i32 32
  %2 = bitcast i8* %1 to %struct.MatchState*
  %R16828 = sext i32 %R16823 to i64
  %R16829 = mul i64 %R16828, 16
  %3 = bitcast %struct.MatchState* %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %R16829
  %5 = bitcast i8* %4 to %struct.MatchState*
  %6 = bitcast %struct.MatchState* %5 to i8**
  %7 = bitcast i8** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i8**
  %load_target = load i8*, i8** %9
  %R16832 = sub i8* %ARG2, %load_target
  %10 = bitcast %struct.MatchState* %5 to i64*
  %11 = bitcast i64* %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i64*
  store i8* %R16832, i64* %13
  %R16842 = call i8* @match(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3)
  %cond = icmp ne i8* %R16842, null
  br i1 %cond, label %L3077, label %L3076

L3076:                                            ; preds = %L3075
  %14 = bitcast %struct.MatchState* %5 to i64*
  %15 = bitcast i64* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 -1, i64* %17
  br label %L3077

L3077:                                            ; preds = %L3076, %L3075
  ret i8* %R16842
}

define internal i8* @match_capture(%struct.MatchState* %ARG1, i8* %ARG2, i32 %ARG3) {
L3078:
  %0 = alloca i8*
  %R16854 = call i32 @check_capture(%struct.MatchState* %ARG1, i32 %ARG3)
  %1 = bitcast %struct.MatchState* %ARG1 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i32 32
  %3 = bitcast i8* %2 to %struct.MatchState*
  %R16858 = sext i32 %R16854 to i64
  %R16859 = mul i64 %R16858, 16
  %4 = bitcast %struct.MatchState* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %R16859
  %6 = bitcast i8* %5 to %struct.MatchState*
  %7 = bitcast %struct.MatchState* %6 to i64*
  %8 = bitcast i64* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i64*
  %load_target = load i64, i64* %10
  %11 = bitcast %struct.MatchState* %ARG1 to i8**
  %12 = bitcast i8** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i8**
  %load_target1 = load i8*, i8** %14
  %R16866 = sub i8* %load_target1, %ARG2
  %R16869 = icmp uge i8* %R16866, i64 %load_target
  %R168692 = zext i1 %R16869 to i32
  %15 = bitcast %struct.MatchState* %6 to i8**
  %16 = bitcast i8** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = bitcast i8* %17 to i8**
  %load_target3 = load i8*, i8** %18
  %R16881 = call i32 @memcmp(i8* %load_target3, i8* %ARG2, i64 %load_target)
  %R16882 = icmp eq i32 %R16881, 0
  %R168824 = zext i1 %R16882 to i32
  %19 = icmp ne i32 %R168692, 0
  %20 = icmp ne i32 %R168824, 0
  %R16883 = and i1 %19, %20
  %R168835 = zext i1 %R16883 to i32
  %cond = icmp ne i32 %R168835, 0
  br i1 %cond, label %L3079, label %L3080

L3079:                                            ; preds = %L3078
  %21 = getelementptr inbounds i8, i8* %ARG2, i64 %load_target
  store i8* %21, i8** %0
  br label %L3081

L3080:                                            ; preds = %L3078
  store i8* null, i8** %0
  br label %L3081

L3081:                                            ; preds = %L3080, %L3079
  %22 = load i8*, i8** %0
  ret i8* %22
}

define internal i8* @match.235(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3) {
L3082:
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i32
  %3 = alloca i8*
  %4 = alloca i8*
  %5 = alloca i8*
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i8*
  %9 = alloca i8*
  store i8* %ARG2, i8** %6
  store i8* %ARG2, i8** %5
  store i8* %ARG2, i8** %4
  store i8* %ARG2, i8** %3
  store i8* %ARG2, i8** %1
  store i8* %ARG3, i8** %0
  br label %L3083

L3083:                                            ; preds = %L3124, %L3115, %L3104, %L3100, %L3091, %L3082
  %10 = load i8*, i8** %0
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %load_target = load i8, i8* %11
  %12 = load i8*, i8** %1
  switch i8 %load_target, label %L3108 [
    i32 0, label %L3105
    i32 36, label %L3106
    i32 37, label %L3088
    i32 40, label %L3084
    i32 41, label %L3087
  ]

L3084:                                            ; preds = %L3083
  %13 = getelementptr inbounds i8, i8* %10, i64 1
  %load_target1 = load i8, i8* %13
  %R16892 = sext i8 %load_target1 to i32
  %R16893 = icmp eq i32 %R16892, 41
  %R168932 = zext i1 %R16893 to i32
  %cond = icmp ne i32 %R168932, 0
  br i1 %cond, label %L3085, label %L3086

L3085:                                            ; preds = %L3084
  %14 = getelementptr inbounds i8, i8* %10, i64 2
  %R16898 = call i8* @start_capture(%struct.MatchState* %ARG1, i8* %12, i8* %14, i32 -2)
  store i8* %R16898, i8** %9
  br label %L3125

L3086:                                            ; preds = %L3084
  %15 = getelementptr inbounds i8, i8* %10, i64 1
  %R16904 = call i8* @start_capture(%struct.MatchState* %ARG1, i8* %12, i8* %15, i32 -1)
  store i8* %R16904, i8** %9
  br label %L3125

L3087:                                            ; preds = %L3083
  %16 = getelementptr inbounds i8, i8* %10, i64 1
  %R16909 = call i8* @end_capture(%struct.MatchState* %ARG1, i8* %12, i8* %16)
  store i8* %R16909, i8** %9
  br label %L3125

L3088:                                            ; preds = %L3083
  %17 = getelementptr inbounds i8, i8* %10, i64 1
  %load_target3 = load i8, i8* %17
  switch i8 %load_target3, label %L3101 [
    i32 98, label %L3089
    i32 102, label %L3092
  ]

L3089:                                            ; preds = %L3088
  %18 = getelementptr inbounds i8, i8* %10, i64 2
  %R16916 = call i8* @matchbalance(%struct.MatchState* %ARG1, i8* %12, i8* %18)
  store i8* %R16916, i8** %6
  store i8* %R16916, i8** %5
  store i8* %R16916, i8** %4
  store i8* %R16916, i8** %3
  store i8* %R16916, i8** %1
  %cond4 = icmp ne i8* %R16916, null
  br i1 %cond4, label %L3091, label %L3090

L3090:                                            ; preds = %L3089
  store i8* null, i8** %9
  br label %L3125

L3091:                                            ; preds = %L3089
  %R16920 = ptrtoint i8* %10 to i64
  %R16921 = add i64 %R16920, 4
  %R16922 = inttoptr i64 %R16921 to i8*
  store i8* %R16922, i8** %0
  br label %L3083

L3092:                                            ; preds = %L3088
  %R16924 = ptrtoint i8* %10 to i64
  %R16925 = add i64 %R16924, 2
  %R16926 = inttoptr i64 %R16925 to i8*
  %19 = getelementptr inbounds i8, i8* %R16926, i64 0
  %load_target5 = load i8, i8* %19
  %R16929 = sext i8 %load_target5 to i32
  %R16930 = icmp ne i32 %R16929, 91
  %R169306 = zext i1 %R16930 to i32
  %cond7 = icmp ne i32 %R169306, 0
  br i1 %cond7, label %L3093, label %L3094

L3093:                                            ; preds = %L3092
  %20 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %21 = bitcast %struct.lua_State** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 16
  %23 = bitcast i8* %22 to %struct.lua_State**
  %load_target8 = load %struct.lua_State*, %struct.lua_State** %23
  %R16934 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.236, i64 0, i64 0))
  br label %L3094

L3094:                                            ; preds = %L3093, %L3092
  %R16937 = call i8* @classend(%struct.MatchState* %ARG1, i8* %R16926)
  %24 = bitcast %struct.MatchState* %ARG1 to i8**
  %25 = bitcast i8** %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = bitcast i8* %26 to i8**
  %load_target9 = load i8*, i8** %27
  %R16941 = icmp eq i8* %12, %load_target9
  %R1694110 = zext i1 %R16941 to i32
  %cond11 = icmp ne i32 %R1694110, 0
  br i1 %cond11, label %L3095, label %L3096

L3095:                                            ; preds = %L3094
  store i32 0, i32* %2
  br label %L3097

L3096:                                            ; preds = %L3094
  %28 = getelementptr inbounds i8, i8* %12, i64 -1
  %load_target12 = load i8, i8* %28
  %R16945 = sext i8 %load_target12 to i32
  store i32 %R16945, i32* %2
  br label %L3097

L3097:                                            ; preds = %L3096, %L3095
  %29 = load i32, i32* %2
  %R16947 = trunc i32 %29 to i8
  %R16950 = zext i8 %R16947 to i32
  %30 = getelementptr inbounds i8, i8* %R16937, i64 -1
  %R16954 = call i32 @matchbracketclass(i32 %R16950, i8* %R16926, i8* %30)
  %cond13 = icmp ne i32 %R16954, 0
  br i1 %cond13, label %L3099, label %L3098

L3098:                                            ; preds = %L3097
  %31 = getelementptr inbounds i8, i8* %12, i64 0
  %load_target14 = load i8, i8* %31
  %R16958 = zext i8 %load_target14 to i32
  %R16962 = call i32 @matchbracketclass(i32 %R16958, i8* %R16926, i8* %30)
  store i8* %12, i8** %6
  store i8* %12, i8** %5
  store i8* %12, i8** %4
  store i8* %12, i8** %3
  %cond15 = icmp ne i32 %R16962, 0
  br i1 %cond15, label %L3100, label %L3099

L3099:                                            ; preds = %L3098, %L3097
  store i8* null, i8** %9
  br label %L3125

L3100:                                            ; preds = %L3098
  store i8* %R16937, i8** %0
  br label %L3083

L3101:                                            ; preds = %L3088
  %R16964 = call i16** @__ctype_b_loc()
  %32 = bitcast i16** %R16964 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 0
  %34 = bitcast i8* %33 to i16**
  %load_target16 = load i16*, i16** %34
  %35 = getelementptr inbounds i8, i8* %10, i64 1
  %load_target17 = load i8, i8* %35
  %R16969 = zext i8 %load_target17 to i32
  %R16970 = sext i32 %R16969 to i64
  %R16971 = mul i64 %R16970, 2
  %36 = bitcast i16* %load_target16 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 %R16971
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast i16* %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = bitcast i8* %40 to i16*
  %load_target18 = load i16, i16* %41
  %R16974 = zext i16 %load_target18 to i32
  %R16975 = and i32 %R16974, 2048
  %cond19 = icmp ne i32 %R16975, 0
  br i1 %cond19, label %L3102, label %L3108

L3102:                                            ; preds = %L3101
  %42 = load i8*, i8** %3
  %R16981 = zext i8 %load_target17 to i32
  %R16982 = call i8* @match_capture(%struct.MatchState* %ARG1, i8* %42, i32 %R16981)
  store i8* %R16982, i8** %6
  store i8* %R16982, i8** %5
  store i8* %R16982, i8** %4
  store i8* %R16982, i8** %3
  store i8* %R16982, i8** %1
  %cond20 = icmp ne i8* %R16982, null
  br i1 %cond20, label %L3104, label %L3103

L3103:                                            ; preds = %L3102
  store i8* null, i8** %9
  br label %L3125

L3104:                                            ; preds = %L3102
  %R16986 = ptrtoint i8* %10 to i64
  %R16987 = add i64 %R16986, 2
  %R16988 = inttoptr i64 %R16987 to i8*
  store i8* %R16988, i8** %0
  br label %L3083

L3105:                                            ; preds = %L3083
  %43 = load i8*, i8** %4
  store i8* %43, i8** %9
  br label %L3125

L3106:                                            ; preds = %L3083
  %44 = getelementptr inbounds i8, i8* %10, i64 1
  %load_target21 = load i8, i8* %44
  %cond22 = icmp ne i8 %load_target21, 0
  br i1 %cond22, label %L3108, label %L3107

L3107:                                            ; preds = %L3106
  %45 = load i8*, i8** %5
  %46 = bitcast %struct.MatchState* %ARG1 to i8**
  %47 = bitcast i8** %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to i8**
  %load_target23 = load i8*, i8** %49
  %R16998 = icmp eq i8* %45, %load_target23
  %R1699824 = zext i1 %R16998 to i32
  %cond25 = icmp ne i32 %R1699824, 0
  %select = select i1 %cond25, i8* %45, i8* null
  store i8* %select, i8** %9
  br label %L3125

L3108:                                            ; preds = %L3106, %L3101, %L3083
  %R17002 = call i8* @classend(%struct.MatchState* %ARG1, i8* %10)
  %50 = load i8*, i8** %6
  %51 = bitcast %struct.MatchState* %ARG1 to i8**
  %52 = bitcast i8** %51 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 8
  %54 = bitcast i8* %53 to i8**
  %load_target26 = load i8*, i8** %54
  %R17006 = icmp ult i8* %50, %load_target26
  %R1700627 = zext i1 %R17006 to i32
  %cond28 = icmp ne i32 %R1700627, 0
  br i1 %cond28, label %L3109, label %L3110

L3109:                                            ; preds = %L3108
  %55 = getelementptr inbounds i8, i8* %50, i64 0
  %load_target29 = load i8, i8* %55
  %R17010 = zext i8 %load_target29 to i32
  %R17013 = call i32 @singlematch(i32 %R17010, i8* %10, i8* %R17002)
  store i32 %R17013, i32* %7
  br label %L3111

L3110:                                            ; preds = %L3108
  store i32 0, i32* %7
  br label %L3111

L3111:                                            ; preds = %L3110, %L3109
  %56 = load i32, i32* %7
  %57 = getelementptr inbounds i8, i8* %R17002, i64 0
  %load_target30 = load i8, i8* %57
  switch i8 %load_target30, label %L3122 [
    i32 42, label %L3116
    i32 43, label %L3117
    i32 45, label %L3121
    i32 63, label %L3112
  ]

L3112:                                            ; preds = %L3111
  %cond31 = icmp ne i32 %56, 0
  br i1 %cond31, label %L3113, label %L3115

L3113:                                            ; preds = %L3112
  %58 = getelementptr inbounds i8, i8* %50, i64 1
  %59 = getelementptr inbounds i8, i8* %R17002, i64 1
  %R17023 = call i8* @match(%struct.MatchState* %ARG1, i8* %58, i8* %59)
  %cond32 = icmp ne i8* %R17023, null
  br i1 %cond32, label %L3114, label %L3115

L3114:                                            ; preds = %L3113
  store i8* %R17023, i8** %9
  br label %L3125

L3115:                                            ; preds = %L3113, %L3112
  %60 = getelementptr inbounds i8, i8* %R17002, i64 1
  store i8* %60, i8** %0
  br label %L3083

L3116:                                            ; preds = %L3111
  %R17032 = call i8* @max_expand(%struct.MatchState* %ARG1, i8* %50, i8* %10, i8* %R17002)
  store i8* %R17032, i8** %9
  br label %L3125

L3117:                                            ; preds = %L3111
  %cond33 = icmp ne i32 %56, 0
  br i1 %cond33, label %L3118, label %L3119

L3118:                                            ; preds = %L3117
  %61 = getelementptr inbounds i8, i8* %50, i64 1
  %R17039 = call i8* @max_expand(%struct.MatchState* %ARG1, i8* %61, i8* %10, i8* %R17002)
  store i8* %R17039, i8** %8
  br label %L3120

L3119:                                            ; preds = %L3117
  store i8* null, i8** %8
  br label %L3120

L3120:                                            ; preds = %L3119, %L3118
  %62 = load i8*, i8** %8
  store i8* %62, i8** %9
  br label %L3125

L3121:                                            ; preds = %L3111
  %R17045 = call i8* @min_expand(%struct.MatchState* %ARG1, i8* %50, i8* %10, i8* %R17002)
  store i8* %R17045, i8** %9
  br label %L3125

L3122:                                            ; preds = %L3111
  %cond34 = icmp ne i32 %56, 0
  br i1 %cond34, label %L3124, label %L3123

L3123:                                            ; preds = %L3122
  store i8* null, i8** %9
  br label %L3125

L3124:                                            ; preds = %L3122
  %63 = getelementptr inbounds i8, i8* %50, inttoptr (i64 1 to i8*)
  store i8* %63, i8** %6
  store i8* %63, i8** %5
  store i8* %63, i8** %4
  store i8* %63, i8** %3
  store i8* %63, i8** %1
  store i8* %R17002, i8** %0
  br label %L3083

L3125:                                            ; preds = %L3123, %L3121, %L3120, %L3116, %L3114, %L3107, %L3105, %L3103, %L3099, %L3090, %L3087, %L3086, %L3085
  %64 = load i8*, i8** %9
  ret i8* %64
}

define internal i8* @lmemfind(i8* %ARG1, i64 %ARG2, i8* %ARG3, i64 %ARG4) {
L3126:
  %0 = alloca i64
  %1 = alloca i8*
  %2 = alloca i8*
  store i8* %ARG1, i8** %1
  %cond = icmp ne i64 %ARG4, 0
  br i1 %cond, label %L3128, label %L3127

L3127:                                            ; preds = %L3126
  store i8* %ARG1, i8** %2
  br label %L3137

L3128:                                            ; preds = %L3126
  %R17056 = icmp ugt i64 %ARG4, %ARG2
  %R170561 = zext i1 %R17056 to i32
  %cond2 = icmp ne i32 %R170561, 0
  br i1 %cond2, label %L3129, label %L3130

L3129:                                            ; preds = %L3128
  store i8* null, i8** %2
  br label %L3137

L3130:                                            ; preds = %L3128
  %R17058 = add i64 %ARG4, -1
  %R17061 = sub i64 %ARG2, %R17058
  store i64 %R17061, i64* %0
  br label %L3131

L3131:                                            ; preds = %L3135, %L3130
  %3 = load i64, i64* %0
  %R17063 = icmp ugt i64 %3, 0
  %R170633 = zext i1 %R17063 to i32
  %cond4 = icmp ne i32 %R170633, 0
  br i1 %cond4, label %L3132, label %L3136

L3132:                                            ; preds = %L3131
  %4 = load i8*, i8** %1
  %5 = getelementptr inbounds i8, i8* %ARG3, i64 0
  %load_target = load i8, i8* %5
  %R17068 = sext i8 %load_target to i32
  %R17070 = call i8* @memchr(i8* %4, i32 %R17068, i64 %3)
  %cond5 = icmp ne i8* %R17070, null
  br i1 %cond5, label %L3133, label %L3136

L3133:                                            ; preds = %L3132
  %6 = getelementptr inbounds i8, i8* %R17070, inttoptr (i64 1 to i8*)
  %7 = getelementptr inbounds i8, i8* %ARG3, i64 1
  %R17081 = call i32 @memcmp(i8* %6, i8* %7, i64 %R17058)
  %cond6 = icmp ne i32 %R17081, 0
  br i1 %cond6, label %L3135, label %L3134

L3134:                                            ; preds = %L3133
  %8 = getelementptr inbounds i8, i8* %6, i64 -1
  store i8* %8, i8** %2
  br label %L3137

L3135:                                            ; preds = %L3133
  %R17087 = sub i8* %6, %4
  %R17091 = sub i64 %3, i8* %R17087
  store i8* %6, i8** %1
  store i64 %R17091, i64* %0
  br label %L3131

L3136:                                            ; preds = %L3132, %L3131
  store i8* null, i8** %2
  br label %L3137

L3137:                                            ; preds = %L3136, %L3134, %L3129, %L3127
  %9 = load i8*, i8** %2
  ret i8* %9
}

declare i8* @memchr(i8*, i32, i64)

define internal void @push_onecapture(%struct.MatchState* %ARG1, i32 %ARG2, i8* %ARG3, i8* %ARG4) {
L3138:
  %0 = bitcast %struct.MatchState* %ARG1 to i32*
  %1 = bitcast i32* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to i32*
  %load_target = load i32, i32* %3
  %R17097 = icmp sge i32 %ARG2, %load_target
  %R170971 = zext i1 %R17097 to i32
  %cond = icmp ne i32 %R170971, 0
  br i1 %cond, label %L3139, label %L3142

L3139:                                            ; preds = %L3138
  %cond2 = icmp ne i32 %ARG2, 0
  br i1 %cond2, label %L3141, label %L3140

L3140:                                            ; preds = %L3139
  %4 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %5 = bitcast %struct.lua_State** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 16
  %7 = bitcast i8* %6 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %7
  %R17105 = sub i8* %ARG4, %ARG3
  call void @lua_pushlstring(%struct.lua_State* %load_target3, i8* %ARG3, i8* %R17105)
  br label %L3147

L3141:                                            ; preds = %L3139
  %8 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %9 = bitcast %struct.lua_State** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to %struct.lua_State**
  %load_target4 = load %struct.lua_State*, %struct.lua_State** %11
  %R17110 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.237, i64 0, i64 0))
  br label %L3147

L3142:                                            ; preds = %L3138
  %12 = bitcast %struct.MatchState* %ARG1 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i32 32
  %14 = bitcast i8* %13 to %struct.MatchState*
  %R17114 = sext i32 %ARG2 to i64
  %R17115 = mul i64 %R17114, 16
  %15 = bitcast %struct.MatchState* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %R17115
  %17 = bitcast i8* %16 to %struct.MatchState*
  %18 = bitcast %struct.MatchState* %17 to i64*
  %19 = bitcast i64* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i64*
  %load_target5 = load i64, i64* %21
  %R17119 = icmp eq i64 %load_target5, -1
  %R171196 = zext i1 %R17119 to i32
  %cond7 = icmp ne i32 %R171196, 0
  br i1 %cond7, label %L3143, label %L3144

L3143:                                            ; preds = %L3142
  %22 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %23 = bitcast %struct.lua_State** %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %struct.lua_State**
  %load_target8 = load %struct.lua_State*, %struct.lua_State** %25
  %R17123 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.238, i64 0, i64 0))
  br label %L3144

L3144:                                            ; preds = %L3143, %L3142
  %R17125 = icmp eq i64 %load_target5, -2
  %R171259 = zext i1 %R17125 to i32
  %cond10 = icmp ne i32 %R171259, 0
  br i1 %cond10, label %L3145, label %L3146

L3145:                                            ; preds = %L3144
  %26 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %27 = bitcast %struct.lua_State** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 16
  %29 = bitcast i8* %28 to %struct.lua_State**
  %load_target11 = load %struct.lua_State*, %struct.lua_State** %29
  %30 = bitcast %struct.MatchState* %17 to i8**
  %31 = bitcast i8** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i8**
  %load_target12 = load i8*, i8** %33
  %34 = bitcast %struct.MatchState* %ARG1 to i8**
  %35 = bitcast i8** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to i8**
  %load_target13 = load i8*, i8** %37
  %R17137 = sub i8* %load_target12, %load_target13
  %38 = getelementptr inbounds i8, i8* %R17137, i64 1
  call void @lua_pushinteger(%struct.lua_State* %load_target11, i8* %38)
  br label %L3147

L3146:                                            ; preds = %L3144
  %39 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %40 = bitcast %struct.lua_State** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 16
  %42 = bitcast i8* %41 to %struct.lua_State**
  %load_target14 = load %struct.lua_State*, %struct.lua_State** %42
  %43 = bitcast %struct.MatchState* %17 to i8**
  %44 = bitcast i8** %43 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = bitcast i8* %45 to i8**
  %load_target15 = load i8*, i8** %46
  call void @lua_pushlstring(%struct.lua_State* %load_target14, i8* %load_target15, i64 %load_target5)
  br label %L3147

L3147:                                            ; preds = %L3146, %L3145, %L3141, %L3140
  ret void
}

define internal i32 @push_captures(%struct.MatchState* %ARG1, i8* %ARG2, i8* %ARG3) {
L3148:
  %0 = alloca i32
  %1 = bitcast %struct.MatchState* %ARG1 to i32*
  %2 = bitcast i32* %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to i32*
  %load_target = load i32, i32* %4
  %R17152 = icmp eq i32 %load_target, 0
  %R171521 = zext i1 %R17152 to i32
  %5 = icmp ne i32 %R171521, 0
  %6 = icmp ne i8* %ARG2, null
  %R17154 = and i1 %5, %6
  %R171542 = zext i1 %R17154 to i32
  %cond = icmp ne i32 %R171542, 0
  %select = select i1 %cond, i32 1, i32 %load_target
  %7 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %8 = bitcast %struct.lua_State** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %9 to %struct.lua_State**
  %load_target3 = load %struct.lua_State*, %struct.lua_State** %10
  call void @luaL_checkstack(%struct.lua_State* %load_target3, i32 %select, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.239, i64 0, i64 0))
  store i32 0, i32* %0
  br label %L3149

L3149:                                            ; preds = %L3150, %L3148
  %11 = load i32, i32* %0
  %R17164 = icmp slt i32 %11, %select
  %R171644 = zext i1 %R17164 to i32
  %cond5 = icmp ne i32 %R171644, 0
  br i1 %cond5, label %L3150, label %L3151

L3150:                                            ; preds = %L3149
  call void @push_onecapture(%struct.MatchState* %ARG1, i32 %11, i8* %ARG2, i8* %ARG3)
  %R17170 = add i32 %11, 1
  store i32 %R17170, i32* %0
  br label %L3149

L3151:                                            ; preds = %L3149
  ret i32 %select
}

define internal i32 @str_find_aux(%struct.lua_State* %ARG1, i32 %ARG2) {
L3152:
  %ms_0x62d000fce5f8 = alloca %struct.MatchState
  %l2_0x62d000fcdb18 = alloca i64
  %l1_0x62d000fcda30 = alloca i64
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i8*
  %3 = alloca i8*
  %4 = alloca i32
  %R17175 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %l1_0x62d000fcda30)
  %R17178 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 2, i64* %l2_0x62d000fcdb18)
  %R17180 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 3, i64 1)
  %5 = bitcast i64* %l1_0x62d000fcda30 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i64*
  %load_target = load i64, i64* %7
  %R17182 = call i64 @posrelat(i64 %R17180, i64 %load_target)
  %R17183 = add i64 %R17182, -1
  %R17185 = icmp slt i64 %R17183, 0
  %R171851 = zext i1 %R17185 to i32
  %cond = icmp ne i32 %R171851, 0
  br i1 %cond, label %L3153, label %L3154

L3153:                                            ; preds = %L3152
  store i64 0, i64* %1
  store i64 0, i64* %0
  br label %L3156

L3154:                                            ; preds = %L3152
  %8 = bitcast i64* %l1_0x62d000fcda30 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i64*
  %load_target2 = load i64, i64* %10
  %R17189 = icmp ugt i64 %R17183, %load_target2
  %R171893 = zext i1 %R17189 to i32
  store i64 %R17183, i64* %1
  store i64 %R17183, i64* %0
  %cond4 = icmp ne i32 %R171893, 0
  br i1 %cond4, label %L3155, label %L3156

L3155:                                            ; preds = %L3154
  store i64 %load_target2, i64* %1
  store i64 %load_target2, i64* %0
  br label %L3156

L3156:                                            ; preds = %L3155, %L3154, %L3153
  %cond5 = icmp ne i32 %ARG2, 0
  br i1 %cond5, label %L3157, label %L3160

L3157:                                            ; preds = %L3156
  %R17194 = call i32 @lua_toboolean(%struct.lua_State* %ARG1, i32 4)
  %R17197 = call i8* @strpbrk(i8* %R17178, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.240, i64 0, i64 0))
  %R17198 = icmp eq i8* %R17197, null
  %R171986 = zext i1 %R17198 to i32
  %11 = icmp ne i32 %R17194, 0
  %12 = icmp ne i32 %R171986, 0
  %R17199 = or i1 %11, %12
  %R171997 = zext i1 %R17199 to i32
  %cond8 = icmp ne i32 %R171997, 0
  br i1 %cond8, label %L3158, label %L3160

L3158:                                            ; preds = %L3157
  %13 = load i64, i64* %0
  %14 = getelementptr inbounds i8, i8* %R17175, i64 %13
  %15 = bitcast i64* %l1_0x62d000fcda30 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i64*
  %load_target9 = load i64, i64* %17
  %R17206 = sub i64 %load_target9, %13
  %18 = bitcast i64* %l2_0x62d000fcdb18 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i64*
  %load_target10 = load i64, i64* %20
  %R17209 = call i8* @lmemfind(i8* %14, i64 %R17206, i8* %R17178, i64 %load_target10)
  %cond11 = icmp ne i8* %R17209, null
  br i1 %cond11, label %L3159, label %L3168

L3159:                                            ; preds = %L3158
  %R17214 = sub i8* %R17209, %R17175
  %21 = getelementptr inbounds i8, i8* %R17214, i64 1
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i8* %21)
  %22 = bitcast i64* %l2_0x62d000fcdb18 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = bitcast i8* %23 to i64*
  %load_target12 = load i64, i64* %24
  %25 = getelementptr inbounds i8, i8* %R17214, i64 %load_target12
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i8* %25)
  store i32 2, i32* %4
  br label %L3169

L3160:                                            ; preds = %L3157, %L3156
  %26 = getelementptr inbounds i8, i8* %R17178, i64 0
  %load_target13 = load i8, i8* %26
  %R17227 = sext i8 %load_target13 to i32
  %R17228 = icmp eq i32 %R17227, 94
  %R1722814 = zext i1 %R17228 to i32
  store i8* %R17178, i8** %3
  %cond15 = icmp ne i32 %R1722814, 0
  br i1 %cond15, label %L3161, label %L3162

L3161:                                            ; preds = %L3160
  %27 = getelementptr inbounds i8, i8* %R17178, inttoptr (i64 1 to i8*)
  store i8* %27, i8** %3
  br label %L3162

L3162:                                            ; preds = %L3161, %L3160
  %28 = load i64, i64* %1
  %29 = getelementptr inbounds i8, i8* %R17175, i64 %28
  %30 = bitcast %struct.MatchState* %ms_0x62d000fce5f8 to %struct.lua_State**
  %31 = bitcast %struct.lua_State** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 16
  %33 = bitcast i8* %32 to %struct.lua_State**
  store %struct.lua_State* %ARG1, %struct.lua_State** %33
  %34 = bitcast %struct.MatchState* %ms_0x62d000fce5f8 to i8**
  %35 = bitcast i8** %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 0
  %37 = bitcast i8* %36 to i8**
  store i8* %R17175, i8** %37
  %38 = bitcast i64* %l1_0x62d000fcda30 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to i64*
  %load_target16 = load i64, i64* %40
  %41 = getelementptr inbounds i8, i8* %R17175, i64 %load_target16
  %42 = bitcast %struct.MatchState* %ms_0x62d000fce5f8 to i8**
  %43 = bitcast i8** %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 8
  %45 = bitcast i8* %44 to i8**
  store i8* %41, i8** %45
  store i8* %29, i8** %2
  br label %L3163

L3163:                                            ; preds = %L3167, %L3162
  %46 = bitcast %struct.MatchState* %ms_0x62d000fce5f8 to i32*
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 24
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49
  %50 = load i8*, i8** %2
  %51 = load i8*, i8** %3
  %R17243 = call i8* @match(%struct.MatchState* %ms_0x62d000fce5f8, i8* %50, i8* %51)
  %cond17 = icmp ne i8* %R17243, null
  br i1 %cond17, label %L3164, label %L3167

L3164:                                            ; preds = %L3163
  %cond18 = icmp ne i32 %ARG2, 0
  br i1 %cond18, label %L3165, label %L3166

L3165:                                            ; preds = %L3164
  %R17249 = sub i8* %50, %R17175
  %52 = getelementptr inbounds i8, i8* %R17249, i64 1
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i8* %52)
  %R17254 = sub i8* %R17243, %R17175
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i8* %R17254)
  %R17256 = call i32 @push_captures(%struct.MatchState* %ms_0x62d000fce5f8, i8* null, i8* null)
  %R17257 = add i32 %R17256, 2
  store i32 %R17257, i32* %4
  br label %L3169

L3166:                                            ; preds = %L3164
  %R17261 = call i32 @push_captures(%struct.MatchState* %ms_0x62d000fce5f8, i8* %50, i8* %R17243)
  store i32 %R17261, i32* %4
  br label %L3169

L3167:                                            ; preds = %L3163
  %53 = getelementptr inbounds i8, i8* %50, inttoptr (i64 1 to i8*)
  %54 = bitcast %struct.MatchState* %ms_0x62d000fce5f8 to i8**
  %55 = bitcast i8** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = bitcast i8* %56 to i8**
  %load_target19 = load i8*, i8** %57
  %R17265 = icmp ult i8* %50, %load_target19
  %R1726520 = zext i1 %R17265 to i32
  %R17267 = icmp ne i32 %R17227, 94
  %R1726721 = zext i1 %R17267 to i32
  %58 = icmp ne i32 %R1726520, 0
  %59 = icmp ne i32 %R1726721, 0
  %R17268 = and i1 %58, %59
  %R1726822 = zext i1 %R17268 to i32
  store i8* %53, i8** %2
  %cond23 = icmp ne i32 %R1726822, 0
  br i1 %cond23, label %L3163, label %L3168

L3168:                                            ; preds = %L3167, %L3158
  call void @lua_pushnil(%struct.lua_State* %ARG1)
  store i32 1, i32* %4
  br label %L3169

L3169:                                            ; preds = %L3168, %L3166, %L3165, %L3159
  %60 = load i32, i32* %4
  ret i32 %60
}

declare i8* @strpbrk(i8*, i8*)

define internal i32 @str_find(%struct.lua_State* %ARG1) {
L3170:
  %R17271 = call i32 @str_find_aux(%struct.lua_State* %ARG1, i32 1)
  ret i32 %R17271
}

define internal i32 @str_match(%struct.lua_State* %ARG1) {
L3171:
  %R17274 = call i32 @str_find_aux(%struct.lua_State* %ARG1, i32 0)
  ret i32 %R17274
}

define internal i32 @gmatch_aux(%struct.lua_State* %ARG1) {
L3172:
  %ms_0x62d000fd0040 = alloca %struct.MatchState
  %ls_0x62d000fd0128 = alloca i64
  %0 = alloca i8*
  %1 = alloca i64
  %2 = alloca i32
  %R17278 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 -10003, i64* %ls_0x62d000fd0128)
  %R17280 = call i8* @lua_tolstring(%struct.lua_State* %ARG1, i32 -10004, i64* null)
  %3 = bitcast %struct.MatchState* %ms_0x62d000fd0040 to %struct.lua_State**
  %4 = bitcast %struct.lua_State** %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %struct.lua_State**
  store %struct.lua_State* %ARG1, %struct.lua_State** %6
  %7 = bitcast %struct.MatchState* %ms_0x62d000fd0040 to i8**
  %8 = bitcast i8** %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 0
  %10 = bitcast i8* %9 to i8**
  store i8* %R17278, i8** %10
  %11 = bitcast i64* %ls_0x62d000fd0128 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  %13 = bitcast i8* %12 to i64*
  %load_target = load i64, i64* %13
  %14 = getelementptr inbounds i8, i8* %R17278, i64 %load_target
  %15 = bitcast %struct.MatchState* %ms_0x62d000fd0040 to i8**
  %16 = bitcast i8** %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i8**
  store i8* %14, i8** %18
  %R17288 = call i64 @lua_tointeger(%struct.lua_State* %ARG1, i32 -10005)
  %19 = getelementptr inbounds i8, i8* %R17278, i64 %R17288
  store i8* %19, i8** %0
  br label %L3173

L3173:                                            ; preds = %L3178, %L3172
  %20 = load i8*, i8** %0
  %21 = bitcast %struct.MatchState* %ms_0x62d000fd0040 to i8**
  %22 = bitcast i8** %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to i8**
  %load_target1 = load i8*, i8** %24
  %R17293 = icmp ule i8* %20, %load_target1
  %R172932 = zext i1 %R17293 to i32
  %cond = icmp ne i32 %R172932, 0
  br i1 %cond, label %L3174, label %L3179

L3174:                                            ; preds = %L3173
  %25 = bitcast %struct.MatchState* %ms_0x62d000fd0040 to i32*
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 24
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28
  %R17297 = call i8* @match(%struct.MatchState* %ms_0x62d000fd0040, i8* %20, i8* %R17280)
  %cond3 = icmp ne i8* %R17297, null
  br i1 %cond3, label %L3175, label %L3178

L3175:                                            ; preds = %L3174
  %R17301 = sub i8* %R17297, %R17278
  %R17304 = icmp eq i8* %R17297, %20
  %R173044 = zext i1 %R17304 to i32
  store i8* %R17301, i64* %1
  %cond5 = icmp ne i32 %R173044, 0
  br i1 %cond5, label %L3176, label %L3177

L3176:                                            ; preds = %L3175
  %29 = getelementptr inbounds i8, i8* %R17301, i64 1
  store i8* %29, i64* %1
  br label %L3177

L3177:                                            ; preds = %L3176, %L3175
  %30 = load i64, i64* %1
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 %30)
  call void @lua_replace(%struct.lua_State* %ARG1, i32 -10005)
  %R17313 = call i32 @push_captures(%struct.MatchState* %ms_0x62d000fd0040, i8* %20, i8* %R17297)
  store i32 %R17313, i32* %2
  br label %L3180

L3178:                                            ; preds = %L3174
  %31 = getelementptr inbounds i8, i8* %20, inttoptr (i64 1 to i8*)
  store i8* %31, i8** %0
  br label %L3173

L3179:                                            ; preds = %L3173
  store i32 0, i32* %2
  br label %L3180

L3180:                                            ; preds = %L3179, %L3177
  %32 = load i32, i32* %2
  ret i32 %32
}

define internal i32 @gmatch(%struct.lua_State* %ARG1) {
L3181:
  %R17318 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* null)
  %R17320 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 2, i64* null)
  call void @lua_settop(%struct.lua_State* %ARG1, i32 2)
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 0)
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* @gmatch_aux, i32 3)
  ret i32 1
}

define internal void @add_s(%struct.MatchState* %ARG1, %struct.luaL_Buffer* %ARG2, i8* %ARG3, i8* %ARG4) {
L3182:
  %l_0x62d000fd42e8 = alloca i64
  %0 = alloca i64
  %1 = alloca i64
  %2 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %3 = bitcast %struct.lua_State** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %5
  %R17329 = call i8* @lua_tolstring(%struct.lua_State* %load_target, i32 3, i64* %l_0x62d000fd42e8)
  store i64 0, i64* %0
  br label %L3183

L3183:                                            ; preds = %L3195, %L3182
  %6 = load i64, i64* %0
  %7 = bitcast i64* %l_0x62d000fd42e8 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i64*
  %load_target1 = load i64, i64* %9
  %R17332 = icmp ult i64 %6, %load_target1
  %R173322 = zext i1 %R17332 to i32
  %cond = icmp ne i32 %R173322, 0
  br i1 %cond, label %L3184, label %L3196

L3184:                                            ; preds = %L3183
  %10 = getelementptr inbounds i8, i8* %R17329, i64 %6
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %load_target3 = load i8, i8* %11
  %R17337 = sext i8 %load_target3 to i32
  %R17338 = icmp ne i32 %R17337, 37
  %R173384 = zext i1 %R17338 to i32
  %cond5 = icmp ne i32 %R173384, 0
  br i1 %cond5, label %L3185, label %L3188

L3185:                                            ; preds = %L3184
  %12 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %13 = bitcast i8** %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = bitcast i8* %14 to i8**
  %load_target6 = load i8*, i8** %15
  %16 = bitcast %struct.luaL_Buffer* %ARG2 to i8*
  %17 = getelementptr inbounds i8, i8* %16, inttoptr (i64 8216 to i8*)
  %18 = bitcast i8* %17 to %struct.luaL_Buffer*
  %R17344 = icmp ult i8* %load_target6, %struct.luaL_Buffer* %18
  %R173447 = zext i1 %R17344 to i32
  %cond8 = icmp ne i32 %R173447, 0
  br i1 %cond8, label %L3187, label %L3186

L3186:                                            ; preds = %L3185
  %R17346 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG2)
  br label %L3187

L3187:                                            ; preds = %L3186, %L3185
  %19 = getelementptr inbounds i8, i8* %10, i64 0
  %load_target9 = load i8, i8* %19
  %20 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %21 = bitcast i8** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i8**
  %load_target10 = load i8*, i8** %23
  %24 = getelementptr inbounds i8, i8* %load_target10, inttoptr (i64 1 to i8*)
  %25 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %26 = bitcast i8** %25 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = bitcast i8* %27 to i8**
  store i8* %24, i8** %28
  %29 = getelementptr inbounds i8, i8* %load_target10, i64 0
  store i8 %load_target9, i8* %29
  store i64 %6, i64* %1
  br label %L3195

L3188:                                            ; preds = %L3184
  %R17357 = add i64 %6, 1
  %R17358 = call i16** @__ctype_b_loc()
  %30 = bitcast i16** %R17358 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  %32 = bitcast i8* %31 to i16**
  %load_target11 = load i16*, i16** %32
  %33 = getelementptr inbounds i8, i8* %R17329, i64 %R17357
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %load_target12 = load i8, i8* %34
  %R17365 = zext i8 %load_target12 to i32
  %R17366 = sext i32 %R17365 to i64
  %R17367 = mul i64 %R17366, 2
  %35 = bitcast i16* %load_target11 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %R17367
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast i16* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 0
  %40 = bitcast i8* %39 to i16*
  %load_target13 = load i16, i16* %40
  %R17370 = zext i16 %load_target13 to i32
  %R17371 = and i32 %R17370, 2048
  %cond14 = icmp ne i32 %R17371, 0
  br i1 %cond14, label %L3192, label %L3189

L3189:                                            ; preds = %L3188
  %41 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %42 = bitcast i8** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 0
  %44 = bitcast i8* %43 to i8**
  %load_target15 = load i8*, i8** %44
  %45 = bitcast %struct.luaL_Buffer* %ARG2 to i8*
  %46 = getelementptr inbounds i8, i8* %45, inttoptr (i64 8216 to i8*)
  %47 = bitcast i8* %46 to %struct.luaL_Buffer*
  %R17377 = icmp ult i8* %load_target15, %struct.luaL_Buffer* %47
  %R1737716 = zext i1 %R17377 to i32
  %cond17 = icmp ne i32 %R1737716, 0
  br i1 %cond17, label %L3191, label %L3190

L3190:                                            ; preds = %L3189
  %R17379 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG2)
  br label %L3191

L3191:                                            ; preds = %L3190, %L3189
  %48 = getelementptr inbounds i8, i8* %33, i64 0
  %load_target18 = load i8, i8* %48
  %49 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %50 = bitcast i8** %49 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %52 = bitcast i8* %51 to i8**
  %load_target19 = load i8*, i8** %52
  %53 = getelementptr inbounds i8, i8* %load_target19, inttoptr (i64 1 to i8*)
  %54 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %55 = bitcast i8** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 0
  %57 = bitcast i8* %56 to i8**
  store i8* %53, i8** %57
  %58 = getelementptr inbounds i8, i8* %load_target19, i64 0
  store i8 %load_target18, i8* %58
  store i64 %R17357, i64* %1
  br label %L3195

L3192:                                            ; preds = %L3188
  %R17393 = sext i8 %load_target12 to i32
  %R17394 = icmp eq i32 %R17393, 48
  %R1739420 = zext i1 %R17394 to i32
  store i64 %R17357, i64* %1
  %cond21 = icmp ne i32 %R1739420, 0
  br i1 %cond21, label %L3193, label %L3194

L3193:                                            ; preds = %L3192
  %R17399 = sub i8* %ARG4, %ARG3
  call void @luaL_addlstring(%struct.luaL_Buffer* %ARG2, i8* %ARG3, i8* %R17399)
  br label %L3195

L3194:                                            ; preds = %L3192
  %R17406 = sext i8 %load_target12 to i32
  %R17407 = add i32 %R17406, -49
  call void @push_onecapture(%struct.MatchState* %ARG1, i32 %R17407, i8* %ARG3, i8* %ARG4)
  call void @luaL_addvalue(%struct.luaL_Buffer* %ARG2)
  store i64 %R17357, i64* %1
  br label %L3195

L3195:                                            ; preds = %L3194, %L3193, %L3191, %L3187
  %59 = load i64, i64* %1
  %R17412 = add i64 %59, 1
  store i64 %R17412, i64* %0
  br label %L3183

L3196:                                            ; preds = %L3183
  ret void
}

define internal void @add_value(%struct.MatchState* %ARG1, %struct.luaL_Buffer* %ARG2, i8* %ARG3, i8* %ARG4) {
L3197:
  %0 = bitcast %struct.MatchState* %ARG1 to %struct.lua_State**
  %1 = bitcast %struct.lua_State** %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 16
  %3 = bitcast i8* %2 to %struct.lua_State**
  %load_target = load %struct.lua_State*, %struct.lua_State** %3
  %R17416 = call i32 @lua_type(%struct.lua_State* %load_target, i32 3)
  switch i32 %R17416, label %L3201 [
    i32 3, label %L3198
    i32 4, label %L3198
    i32 5, label %L3200
    i32 6, label %L3199
  ]

L3198:                                            ; preds = %L3197, %L3197
  call void @add_s(%struct.MatchState* %ARG1, %struct.luaL_Buffer* %ARG2, i8* %ARG3, i8* %ARG4)
  br label %L3206

L3199:                                            ; preds = %L3197
  call void @lua_pushvalue(%struct.lua_State* %load_target, i32 3)
  %R17425 = call i32 @push_captures(%struct.MatchState* %ARG1, i8* %ARG3, i8* %ARG4)
  call void @lua_call(%struct.lua_State* %load_target, i32 %R17425, i32 1)
  br label %L3201

L3200:                                            ; preds = %L3197
  call void @push_onecapture(%struct.MatchState* %ARG1, i32 0, i8* %ARG3, i8* %ARG4)
  call void @lua_gettable(%struct.lua_State* %load_target, i32 3)
  br label %L3201

L3201:                                            ; preds = %L3200, %L3199, %L3197
  %R17433 = call i32 @lua_toboolean(%struct.lua_State* %load_target, i32 -1)
  %cond = icmp ne i32 %R17433, 0
  br i1 %cond, label %L3203, label %L3202

L3202:                                            ; preds = %L3201
  call void @lua_settop(%struct.lua_State* %load_target, i32 -2)
  %R17439 = sub i8* %ARG4, %ARG3
  call void @lua_pushlstring(%struct.lua_State* %load_target, i8* %ARG3, i8* %R17439)
  br label %L3205

L3203:                                            ; preds = %L3201
  %R17442 = call i32 @lua_isstring(%struct.lua_State* %load_target, i32 -1)
  %cond1 = icmp ne i32 %R17442, 0
  br i1 %cond1, label %L3205, label %L3204

L3204:                                            ; preds = %L3203
  %R17447 = call i32 @lua_type(%struct.lua_State* %load_target, i32 -1)
  %R17448 = call i8* @lua_typename(%struct.lua_State* %load_target, i32 %R17447)
  %R17449 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %load_target, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.241, i64 0, i64 0), i8* %R17448)
  br label %L3205

L3205:                                            ; preds = %L3204, %L3203, %L3202
  call void @luaL_addvalue(%struct.luaL_Buffer* %ARG2)
  br label %L3206

L3206:                                            ; preds = %L3205, %L3198
  ret void
}

define internal i32 @str_gsub(%struct.lua_State* %ARG1) {
L3207:
  %ms_0x62d000fd7038 = alloca %struct.MatchState
  %b_0x62d000fd7120 = alloca %struct.luaL_Buffer
  %srcl_0x62d000fd6558 = alloca i64
  %0 = alloca i32
  %1 = alloca i8*
  %2 = alloca i8*
  %3 = alloca i8*
  %4 = alloca i32
  %R17453 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %srcl_0x62d000fd6558)
  %R17455 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 2, i64* null)
  %R17457 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 3)
  %5 = bitcast i64* %srcl_0x62d000fd6558 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = bitcast i8* %6 to i64*
  %load_target = load i64, i64* %7
  %R17460 = add i64 %load_target, 1
  %R17462 = call i64 @luaL_optinteger(%struct.lua_State* %ARG1, i32 4, i64 %R17460)
  %R17463 = trunc i64 %R17462 to i32
  %8 = getelementptr inbounds i8, i8* %R17455, i64 0
  %load_target1 = load i8, i8* %8
  %R17466 = sext i8 %load_target1 to i32
  %R17467 = icmp eq i32 %R17466, 94
  %R174672 = zext i1 %R17467 to i32
  store i8* %R17455, i8** %2
  %cond = icmp ne i32 %R174672, 0
  br i1 %cond, label %L3208, label %L3209

L3208:                                            ; preds = %L3207
  %9 = getelementptr inbounds i8, i8* %R17455, inttoptr (i64 1 to i8*)
  store i8* %9, i8** %2
  br label %L3209

L3209:                                            ; preds = %L3208, %L3207
  %R17472 = icmp eq i32 %R17457, 3
  %R174723 = zext i1 %R17472 to i32
  %R17474 = icmp eq i32 %R17457, 4
  %R174744 = zext i1 %R17474 to i32
  %10 = icmp ne i32 %R174723, 0
  %11 = icmp ne i32 %R174744, 0
  %R17475 = or i1 %10, %11
  %R174755 = zext i1 %R17475 to i32
  %R17477 = icmp eq i32 %R17457, 6
  %R174776 = zext i1 %R17477 to i32
  %12 = icmp ne i32 %R174755, 0
  %13 = icmp ne i32 %R174776, 0
  %R17478 = or i1 %12, %13
  %R174787 = zext i1 %R17478 to i32
  %R17480 = icmp eq i32 %R17457, 5
  %R174808 = zext i1 %R17480 to i32
  %14 = icmp ne i32 %R174787, 0
  %15 = icmp ne i32 %R174808, 0
  %R17481 = or i1 %14, %15
  %R174819 = zext i1 %R17481 to i32
  store i32 0, i32* %0
  %cond10 = icmp ne i32 %R174819, 0
  br i1 %cond10, label %L3211, label %L3210

L3210:                                            ; preds = %L3209
  %R17484 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.242, i64 0, i64 0))
  br label %L3211

L3211:                                            ; preds = %L3210, %L3209
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000fd7120)
  %16 = bitcast %struct.MatchState* %ms_0x62d000fd7038 to %struct.lua_State**
  %17 = bitcast %struct.lua_State** %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %struct.lua_State**
  store %struct.lua_State* %ARG1, %struct.lua_State** %19
  %20 = bitcast %struct.MatchState* %ms_0x62d000fd7038 to i8**
  %21 = bitcast i8** %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i8**
  store i8* %R17453, i8** %23
  %24 = bitcast i64* %srcl_0x62d000fd6558 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to i64*
  %load_target11 = load i64, i64* %26
  %27 = getelementptr inbounds i8, i8* %R17453, i64 %load_target11
  %28 = bitcast %struct.MatchState* %ms_0x62d000fd7038 to i8**
  %29 = bitcast i8** %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i8**
  store i8* %27, i8** %31
  store i8* %R17453, i8** %3
  store i8* %R17453, i8** %1
  br label %L3212

L3212:                                            ; preds = %L3221, %L3211
  %32 = load i32, i32* %0
  %R17495 = icmp slt i32 %32, %R17463
  %R1749512 = zext i1 %R17495 to i32
  store i32 %32, i32* %4
  %cond13 = icmp ne i32 %R1749512, 0
  br i1 %cond13, label %L3213, label %L3222

L3213:                                            ; preds = %L3212
  %33 = bitcast %struct.MatchState* %ms_0x62d000fd7038 to i32*
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 24
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36
  %37 = load i8*, i8** %1
  %38 = load i8*, i8** %2
  %R17499 = call i8* @match(%struct.MatchState* %ms_0x62d000fd7038, i8* %37, i8* %38)
  %cond14 = icmp ne i8* %R17499, null
  br i1 %cond14, label %L3214, label %L3215

L3214:                                            ; preds = %L3213
  %R17502 = add i32 %32, 1
  call void @add_value(%struct.MatchState* %ms_0x62d000fd7038, %struct.luaL_Buffer* %b_0x62d000fd7120, i8* %37, i8* %R17499)
  store i32 %R17502, i32* %4
  store i32 %R17502, i32* %0
  br label %L3215

L3215:                                            ; preds = %L3214, %L3213
  %R17510 = icmp ugt i8* %R17499, %37
  %R1751015 = zext i1 %R17510 to i32
  %39 = icmp ne i8* %R17499, null
  %40 = icmp ne i32 %R1751015, 0
  %R17511 = and i1 %39, %40
  %R1751116 = zext i1 %R17511 to i32
  %cond17 = icmp ne i32 %R1751116, 0
  br i1 %cond17, label %L3216, label %L3217

L3216:                                            ; preds = %L3215
  store i8* %R17499, i8** %3
  store i8* %R17499, i8** %1
  br label %L3221

L3217:                                            ; preds = %L3215
  %41 = bitcast %struct.MatchState* %ms_0x62d000fd7038 to i8**
  %42 = bitcast i8** %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 8
  %44 = bitcast i8* %43 to i8**
  %load_target18 = load i8*, i8** %44
  %R17515 = icmp ult i8* %37, %load_target18
  %R1751519 = zext i1 %R17515 to i32
  store i8* %37, i8** %3
  %cond20 = icmp ne i32 %R1751519, 0
  br i1 %cond20, label %L3218, label %L3222

L3218:                                            ; preds = %L3217
  %45 = bitcast %struct.luaL_Buffer* %b_0x62d000fd7120 to i8**
  %46 = bitcast i8** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 0
  %48 = bitcast i8* %47 to i8**
  %load_target21 = load i8*, i8** %48
  %49 = bitcast %struct.luaL_Buffer* %b_0x62d000fd7120 to i8*
  %50 = getelementptr inbounds i8, i8* %49, inttoptr (i64 8216 to i8*)
  %51 = bitcast i8* %50 to %struct.luaL_Buffer*
  %R17520 = icmp ult i8* %load_target21, %struct.luaL_Buffer* %51
  %R1752022 = zext i1 %R17520 to i32
  %cond23 = icmp ne i32 %R1752022, 0
  br i1 %cond23, label %L3220, label %L3219

L3219:                                            ; preds = %L3218
  %R17522 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000fd7120)
  br label %L3220

L3220:                                            ; preds = %L3219, %L3218
  %52 = getelementptr inbounds i8, i8* %37, inttoptr (i64 1 to i8*)
  %53 = getelementptr inbounds i8, i8* %37, i64 0
  %load_target24 = load i8, i8* %53
  %54 = bitcast %struct.luaL_Buffer* %b_0x62d000fd7120 to i8**
  %55 = bitcast i8** %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 0
  %57 = bitcast i8* %56 to i8**
  %load_target25 = load i8*, i8** %57
  %58 = getelementptr inbounds i8, i8* %load_target25, inttoptr (i64 1 to i8*)
  %59 = bitcast %struct.luaL_Buffer* %b_0x62d000fd7120 to i8**
  %60 = bitcast i8** %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 0
  %62 = bitcast i8* %61 to i8**
  store i8* %58, i8** %62
  %63 = getelementptr inbounds i8, i8* %load_target25, i64 0
  store i8 %load_target24, i8* %63
  store i8* %52, i8** %3
  store i8* %52, i8** %1
  br label %L3221

L3221:                                            ; preds = %L3220, %L3216
  %cond26 = icmp ne i32 %R174672, 0
  br i1 %cond26, label %L3222, label %L3212

L3222:                                            ; preds = %L3221, %L3217, %L3212
  %64 = load i8*, i8** %3
  %65 = bitcast %struct.MatchState* %ms_0x62d000fd7038 to i8**
  %66 = bitcast i8** %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to i8**
  %load_target27 = load i8*, i8** %68
  %R17535 = sub i8* %load_target27, %64
  call void @luaL_addlstring(%struct.luaL_Buffer* %b_0x62d000fd7120, i8* %64, i8* %R17535)
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000fd7120)
  %69 = load i32, i32* %4
  %R17540 = sext i32 %69 to i64
  call void @lua_pushinteger(%struct.lua_State* %ARG1, i64 %R17540)
  ret i32 2
}

define internal void @addquoted(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %ARG2, i32 %ARG3) {
L3223:
  %l_0x62d000fd7fa0 = alloca i64
  %0 = alloca i8*
  %R17545 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 %ARG3, i64* %l_0x62d000fd7fa0)
  %1 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %2 = bitcast i8** %1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = bitcast i8* %3 to i8**
  %load_target = load i8*, i8** %4
  %5 = bitcast %struct.luaL_Buffer* %ARG2 to i8*
  %6 = getelementptr inbounds i8, i8* %5, inttoptr (i64 8216 to i8*)
  %7 = bitcast i8* %6 to %struct.luaL_Buffer*
  %R17551 = icmp ult i8* %load_target, %struct.luaL_Buffer* %7
  %R175511 = zext i1 %R17551 to i32
  store i8* %R17545, i8** %0
  %cond = icmp ne i32 %R175511, 0
  br i1 %cond, label %L3225, label %L3224

L3224:                                            ; preds = %L3223
  %R17553 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG2)
  br label %L3225

L3225:                                            ; preds = %L3224, %L3223
  %8 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %9 = bitcast i8** %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = bitcast i8* %10 to i8**
  %load_target2 = load i8*, i8** %11
  %12 = getelementptr inbounds i8, i8* %load_target2, inttoptr (i64 1 to i8*)
  %13 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %14 = bitcast i8** %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = bitcast i8* %15 to i8**
  store i8* %12, i8** %16
  %17 = getelementptr inbounds i8, i8* %load_target2, i64 0
  store i8 34, i8* %17
  br label %L3226

L3226:                                            ; preds = %L3238, %L3225
  %18 = bitcast i64* %l_0x62d000fd7fa0 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to i64*
  %load_target3 = load i64, i64* %20
  %R17559 = add i64 %load_target3, -1
  %21 = bitcast i64* %l_0x62d000fd7fa0 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i64*
  store i64 %R17559, i64* %23
  %cond4 = icmp ne i64 %load_target3, 0
  br i1 %cond4, label %L3227, label %L3239

L3227:                                            ; preds = %L3226
  %24 = load i8*, i8** %0
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %load_target5 = load i8, i8* %25
  switch i8 %load_target5, label %L3235 [
    i32 0, label %L3234
    i32 10, label %L3228
    i32 13, label %L3233
    i32 34, label %L3228
    i32 92, label %L3228
  ]

L3228:                                            ; preds = %L3227, %L3227, %L3227
  %26 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %27 = bitcast i8** %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = bitcast i8* %28 to i8**
  %load_target6 = load i8*, i8** %29
  %R17567 = icmp ult i8* %load_target6, %struct.luaL_Buffer* %7
  %R175677 = zext i1 %R17567 to i32
  %cond8 = icmp ne i32 %R175677, 0
  br i1 %cond8, label %L3230, label %L3229

L3229:                                            ; preds = %L3228
  %R17569 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG2)
  br label %L3230

L3230:                                            ; preds = %L3229, %L3228
  %30 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %31 = bitcast i8** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i8**
  %load_target9 = load i8*, i8** %33
  %34 = getelementptr inbounds i8, i8* %load_target9, inttoptr (i64 1 to i8*)
  %35 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %36 = bitcast i8** %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to i8**
  store i8* %34, i8** %38
  %39 = getelementptr inbounds i8, i8* %load_target9, i64 0
  store i8 92, i8* %39
  %40 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %41 = bitcast i8** %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = bitcast i8* %42 to i8**
  %load_target10 = load i8*, i8** %43
  %R17579 = icmp ult i8* %load_target10, %struct.luaL_Buffer* %7
  %R1757911 = zext i1 %R17579 to i32
  %cond12 = icmp ne i32 %R1757911, 0
  br i1 %cond12, label %L3232, label %L3231

L3231:                                            ; preds = %L3230
  %R17581 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG2)
  br label %L3232

L3232:                                            ; preds = %L3231, %L3230
  %44 = getelementptr inbounds i8, i8* %24, i64 0
  %load_target13 = load i8, i8* %44
  %45 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %46 = bitcast i8** %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 0
  %48 = bitcast i8* %47 to i8**
  %load_target14 = load i8*, i8** %48
  %49 = getelementptr inbounds i8, i8* %load_target14, inttoptr (i64 1 to i8*)
  %50 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %51 = bitcast i8** %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 0
  %53 = bitcast i8* %52 to i8**
  store i8* %49, i8** %53
  %54 = getelementptr inbounds i8, i8* %load_target14, i64 0
  store i8 %load_target13, i8* %54
  br label %L3238

L3233:                                            ; preds = %L3227
  call void @luaL_addlstring(%struct.luaL_Buffer* %ARG2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.243, i64 0, i64 0), i64 2)
  br label %L3238

L3234:                                            ; preds = %L3227
  call void @luaL_addlstring(%struct.luaL_Buffer* %ARG2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.244, i64 0, i64 0), i64 4)
  br label %L3238

L3235:                                            ; preds = %L3227
  %55 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %56 = bitcast i8** %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  %58 = bitcast i8* %57 to i8**
  %load_target15 = load i8*, i8** %58
  %R17598 = icmp ult i8* %load_target15, %struct.luaL_Buffer* %7
  %R1759816 = zext i1 %R17598 to i32
  %cond17 = icmp ne i32 %R1759816, 0
  br i1 %cond17, label %L3237, label %L3236

L3236:                                            ; preds = %L3235
  %R17600 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG2)
  br label %L3237

L3237:                                            ; preds = %L3236, %L3235
  %59 = getelementptr inbounds i8, i8* %24, i64 0
  %load_target18 = load i8, i8* %59
  %60 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %61 = bitcast i8** %60 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 0
  %63 = bitcast i8* %62 to i8**
  %load_target19 = load i8*, i8** %63
  %64 = getelementptr inbounds i8, i8* %load_target19, inttoptr (i64 1 to i8*)
  %65 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %66 = bitcast i8** %65 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = bitcast i8* %67 to i8**
  store i8* %64, i8** %68
  %69 = getelementptr inbounds i8, i8* %load_target19, i64 0
  store i8 %load_target18, i8* %69
  br label %L3238

L3238:                                            ; preds = %L3237, %L3234, %L3233, %L3232
  %70 = getelementptr inbounds i8, i8* %24, inttoptr (i64 1 to i8*)
  store i8* %70, i8** %0
  br label %L3226

L3239:                                            ; preds = %L3226
  %71 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %72 = bitcast i8** %71 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 0
  %74 = bitcast i8* %73 to i8**
  %load_target20 = load i8*, i8** %74
  %R17615 = icmp ult i8* %load_target20, %struct.luaL_Buffer* %7
  %R1761521 = zext i1 %R17615 to i32
  %cond22 = icmp ne i32 %R1761521, 0
  br i1 %cond22, label %L3241, label %L3240

L3240:                                            ; preds = %L3239
  %R17617 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %ARG2)
  br label %L3241

L3241:                                            ; preds = %L3240, %L3239
  %75 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %76 = bitcast i8** %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 0
  %78 = bitcast i8* %77 to i8**
  %load_target23 = load i8*, i8** %78
  %79 = getelementptr inbounds i8, i8* %load_target23, inttoptr (i64 1 to i8*)
  %80 = bitcast %struct.luaL_Buffer* %ARG2 to i8**
  %81 = bitcast i8** %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  %83 = bitcast i8* %82 to i8**
  store i8* %79, i8** %83
  %84 = getelementptr inbounds i8, i8* %load_target23, i64 0
  store i8 34, i8* %84
  ret void
}

define internal i8* @scanformat(%struct.lua_State* %ARG1, i8* %ARG2, i8* %ARG3) {
L3242:
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i8*
  %3 = alloca i8*
  %4 = alloca i8*
  store i8* %ARG2, i8** %0
  br label %L3243

L3243:                                            ; preds = %L3244, %L3242
  %5 = load i8*, i8** %0
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %load_target = load i8, i8* %6
  %R17625 = sext i8 %load_target to i32
  %R17626 = icmp ne i32 %R17625, 0
  %R176261 = zext i1 %R17626 to i32
  %R17630 = sext i8 %load_target to i32
  %R17631 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.245, i64 0, i64 0), i32 %R17630)
  %R17632 = icmp ne i8* %R17631, null
  %R176322 = zext i1 %R17632 to i32
  %7 = icmp ne i32 %R176261, 0
  %8 = icmp ne i32 %R176322, 0
  %R17633 = and i1 %7, %8
  %R176333 = zext i1 %R17633 to i32
  %cond = icmp ne i32 %R176333, 0
  br i1 %cond, label %L3244, label %L3245

L3244:                                            ; preds = %L3243
  %9 = getelementptr inbounds i8, i8* %5, inttoptr (i64 1 to i8*)
  store i8* %9, i8** %0
  br label %L3243

L3245:                                            ; preds = %L3243
  %R17638 = sub i8* %5, %ARG2
  %R17640 = icmp uge i8* %R17638, i64 6
  %R176404 = zext i1 %R17640 to i32
  %cond5 = icmp ne i32 %R176404, 0
  br i1 %cond5, label %L3246, label %L3247

L3246:                                            ; preds = %L3245
  %R17643 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.246, i64 0, i64 0))
  br label %L3247

L3247:                                            ; preds = %L3246, %L3245
  %R17644 = call i16** @__ctype_b_loc()
  %10 = bitcast i16** %R17644 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to i16**
  %load_target6 = load i16*, i16** %12
  %13 = getelementptr inbounds i8, i8* %5, i64 0
  %load_target7 = load i8, i8* %13
  %R17649 = zext i8 %load_target7 to i32
  %R17650 = sext i32 %R17649 to i64
  %R17651 = mul i64 %R17650, 2
  %14 = bitcast i16* %load_target6 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %R17651
  %16 = bitcast i8* %15 to i16*
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to i16*
  %load_target8 = load i16, i16* %19
  %R17654 = zext i16 %load_target8 to i32
  %R17655 = and i32 %R17654, 2048
  store i8* %5, i8** %1
  %cond9 = icmp ne i32 %R17655, 0
  br i1 %cond9, label %L3248, label %L3249

L3248:                                            ; preds = %L3247
  %20 = getelementptr inbounds i8, i8* %5, inttoptr (i64 1 to i8*)
  store i8* %20, i8** %1
  br label %L3249

L3249:                                            ; preds = %L3248, %L3247
  %R17658 = call i16** @__ctype_b_loc()
  %21 = bitcast i16** %R17658 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to i16**
  %load_target10 = load i16*, i16** %23
  %24 = load i8*, i8** %1
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %load_target11 = load i8, i8* %25
  %R17663 = zext i8 %load_target11 to i32
  %R17664 = sext i32 %R17663 to i64
  %R17665 = mul i64 %R17664, 2
  %26 = bitcast i16* %load_target10 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %R17665
  %28 = bitcast i8* %27 to i16*
  %29 = bitcast i16* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = bitcast i8* %30 to i16*
  %load_target12 = load i16, i16* %31
  %R17668 = zext i16 %load_target12 to i32
  %R17669 = and i32 %R17668, 2048
  store i8* %24, i8** %2
  %cond13 = icmp ne i32 %R17669, 0
  br i1 %cond13, label %L3250, label %L3251

L3250:                                            ; preds = %L3249
  %32 = getelementptr inbounds i8, i8* %24, inttoptr (i64 1 to i8*)
  store i8* %32, i8** %2
  br label %L3251

L3251:                                            ; preds = %L3250, %L3249
  %33 = load i8*, i8** %2
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %load_target14 = load i8, i8* %34
  %R17674 = sext i8 %load_target14 to i32
  %R17675 = icmp eq i32 %R17674, 46
  %R1767515 = zext i1 %R17675 to i32
  store i8* %33, i8** %4
  %cond16 = icmp ne i32 %R1767515, 0
  br i1 %cond16, label %L3252, label %L3256

L3252:                                            ; preds = %L3251
  %35 = getelementptr inbounds i8, i8* %33, inttoptr (i64 1 to i8*)
  %R17678 = call i16** @__ctype_b_loc()
  %36 = bitcast i16** %R17678 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = bitcast i8* %37 to i16**
  %load_target17 = load i16*, i16** %38
  %39 = getelementptr inbounds i8, i8* %33, i64 1
  %load_target18 = load i8, i8* %39
  %R17683 = zext i8 %load_target18 to i32
  %R17684 = sext i32 %R17683 to i64
  %R17685 = mul i64 %R17684, 2
  %40 = bitcast i16* %load_target17 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 %R17685
  %42 = bitcast i8* %41 to i16*
  %43 = bitcast i16* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 0
  %45 = bitcast i8* %44 to i16*
  %load_target19 = load i16, i16* %45
  %R17688 = zext i16 %load_target19 to i32
  %R17689 = and i32 %R17688, 2048
  store i8* %35, i8** %3
  %cond20 = icmp ne i32 %R17689, 0
  br i1 %cond20, label %L3253, label %L3254

L3253:                                            ; preds = %L3252
  %46 = getelementptr inbounds i8, i8* %35, inttoptr (i64 1 to i8*)
  store i8* %46, i8** %3
  br label %L3254

L3254:                                            ; preds = %L3253, %L3252
  %R17692 = call i16** @__ctype_b_loc()
  %47 = bitcast i16** %R17692 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 0
  %49 = bitcast i8* %48 to i16**
  %load_target21 = load i16*, i16** %49
  %50 = load i8*, i8** %3
  %51 = getelementptr inbounds i8, i8* %50, i64 0
  %load_target22 = load i8, i8* %51
  %R17697 = zext i8 %load_target22 to i32
  %R17698 = sext i32 %R17697 to i64
  %R17699 = mul i64 %R17698, 2
  %52 = bitcast i16* %load_target21 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 %R17699
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast i16* %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 0
  %57 = bitcast i8* %56 to i16*
  %load_target23 = load i16, i16* %57
  %R17702 = zext i16 %load_target23 to i32
  %R17703 = and i32 %R17702, 2048
  store i8* %50, i8** %4
  %cond24 = icmp ne i32 %R17703, 0
  br i1 %cond24, label %L3255, label %L3256

L3255:                                            ; preds = %L3254
  %58 = getelementptr inbounds i8, i8* %50, inttoptr (i64 1 to i8*)
  store i8* %58, i8** %4
  br label %L3256

L3256:                                            ; preds = %L3255, %L3254, %L3251
  %R17706 = call i16** @__ctype_b_loc()
  %59 = bitcast i16** %R17706 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 0
  %61 = bitcast i8* %60 to i16**
  %load_target25 = load i16*, i16** %61
  %62 = load i8*, i8** %4
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %load_target26 = load i8, i8* %63
  %R17711 = zext i8 %load_target26 to i32
  %R17712 = sext i32 %R17711 to i64
  %R17713 = mul i64 %R17712, 2
  %64 = bitcast i16* %load_target25 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %R17713
  %66 = bitcast i8* %65 to i16*
  %67 = bitcast i16* %66 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 0
  %69 = bitcast i8* %68 to i16*
  %load_target27 = load i16, i16* %69
  %R17716 = zext i16 %load_target27 to i32
  %R17717 = and i32 %R17716, 2048
  %cond28 = icmp ne i32 %R17717, 0
  br i1 %cond28, label %L3257, label %L3258

L3257:                                            ; preds = %L3256
  %R17720 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.247, i64 0, i64 0))
  br label %L3258

L3258:                                            ; preds = %L3257, %L3256
  %70 = getelementptr inbounds i8, i8* %ARG3, inttoptr (i64 1 to i8*)
  %71 = getelementptr inbounds i8, i8* %ARG3, i64 0
  store i8 37, i8* %71
  %R17727 = sub i8* %62, %ARG2
  %72 = getelementptr inbounds i8, i8* %R17727, i64 1
  %R17730 = call i8* @strncpy(i8* %70, i8* %ARG2, i8* %72)
  %R17736 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds i8, i8* %72, i64 %R17736
  %74 = getelementptr inbounds i8, i8* %73, i64 0
  store i8 0, i8* %74
  ret i8* %62
}

define internal void @addintlen(i8* %ARG1) {
L3259:
  %R17743 = call i64 @strlen(i8* %ARG1)
  %R17746 = add i64 %R17743, -1
  %0 = getelementptr inbounds i8, i8* %ARG1, i64 %R17746
  %1 = getelementptr inbounds i8, i8* %0, i64 0
  %load_target = load i8, i8* %1
  %2 = getelementptr inbounds i8, i8* %ARG1, i64 %R17743
  %3 = getelementptr inbounds i8, i8* %2, i64 -1
  %R17754 = call i8* @strcpy(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.248, i64 0, i64 0))
  %R17758 = add i64 %R17743, 2
  %R17759 = add i64 %R17758, -2
  %4 = getelementptr inbounds i8, i8* %ARG1, i64 %R17759
  %5 = getelementptr inbounds i8, i8* %4, i64 0
  store i8 %load_target, i8* %5
  %R17764 = add i64 %R17758, -1
  %6 = getelementptr inbounds i8, i8* %ARG1, i64 %R17764
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  store i8 0, i8* %7
  ret void
}

define internal i32 @str_format(%struct.lua_State* %ARG1) {
L3260:
  %l_0x62d000ff3f00 = alloca i64
  %buff_0x62d000ff2b10 = alloca [512 x i8]
  %form_0x62d000ff2940 = alloca [18 x i8]
  %b_0x62d000ff22e8 = alloca %struct.luaL_Buffer
  %sfl_0x62d000ff1e60 = alloca i64
  %0 = alloca i8*
  %1 = alloca i32
  %2 = alloca i32
  %R17767 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  %R17771 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 1, i64* %sfl_0x62d000ff1e60)
  %3 = bitcast i64* %sfl_0x62d000ff1e60 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 0
  %5 = bitcast i8* %4 to i64*
  %load_target = load i64, i64* %5
  %6 = getelementptr inbounds i8, i8* %R17771, i64 %load_target
  call void @luaL_buffinit(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000ff22e8)
  store i32 1, i32* %1
  store i8* %R17771, i8** %0
  br label %L3261

L3261:                                            ; preds = %L3282, %L3279, %L3277, %L3269, %L3265, %L3260
  %7 = load i8*, i8** %0
  %R17779 = icmp ult i8* %7, %6
  %R177791 = zext i1 %R17779 to i32
  %cond = icmp ne i32 %R177791, 0
  br i1 %cond, label %L3262, label %L3283

L3262:                                            ; preds = %L3261
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %load_target2 = load i8, i8* %8
  %R17782 = sext i8 %load_target2 to i32
  %R17783 = icmp ne i32 %R17782, 37
  %R177833 = zext i1 %R17783 to i32
  %cond4 = icmp ne i32 %R177833, 0
  br i1 %cond4, label %L3263, label %L3266

L3263:                                            ; preds = %L3262
  %9 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8**
  %10 = bitcast i8** %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %12 = bitcast i8* %11 to i8**
  %load_target5 = load i8*, i8** %12
  %13 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8*
  %14 = getelementptr inbounds i8, i8* %13, inttoptr (i64 8216 to i8*)
  %15 = bitcast i8* %14 to %struct.luaL_Buffer*
  %R17788 = icmp ult i8* %load_target5, %struct.luaL_Buffer* %15
  %R177886 = zext i1 %R17788 to i32
  %cond7 = icmp ne i32 %R177886, 0
  br i1 %cond7, label %L3265, label %L3264

L3264:                                            ; preds = %L3263
  %R17790 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000ff22e8)
  br label %L3265

L3265:                                            ; preds = %L3264, %L3263
  %16 = getelementptr inbounds i8, i8* %7, inttoptr (i64 1 to i8*)
  %17 = getelementptr inbounds i8, i8* %7, i64 0
  %load_target8 = load i8, i8* %17
  %18 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8**
  %19 = bitcast i8** %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = bitcast i8* %20 to i8**
  %load_target9 = load i8*, i8** %21
  %22 = getelementptr inbounds i8, i8* %load_target9, inttoptr (i64 1 to i8*)
  %23 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8**
  %24 = bitcast i8** %23 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 0
  %26 = bitcast i8* %25 to i8**
  store i8* %22, i8** %26
  %27 = getelementptr inbounds i8, i8* %load_target9, i64 0
  store i8 %load_target8, i8* %27
  store i8* %16, i8** %0
  br label %L3261

L3266:                                            ; preds = %L3262
  %28 = getelementptr inbounds i8, i8* %7, inttoptr (i64 1 to i8*)
  %29 = getelementptr inbounds i8, i8* %7, i64 1
  %load_target10 = load i8, i8* %29
  %R17801 = sext i8 %load_target10 to i32
  %R17802 = icmp eq i32 %R17801, 37
  %R1780211 = zext i1 %R17802 to i32
  %cond12 = icmp ne i32 %R1780211, 0
  br i1 %cond12, label %L3267, label %L3270

L3267:                                            ; preds = %L3266
  %30 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8**
  %31 = bitcast i8** %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = bitcast i8* %32 to i8**
  %load_target13 = load i8*, i8** %33
  %34 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8*
  %35 = getelementptr inbounds i8, i8* %34, inttoptr (i64 8216 to i8*)
  %36 = bitcast i8* %35 to %struct.luaL_Buffer*
  %R17807 = icmp ult i8* %load_target13, %struct.luaL_Buffer* %36
  %R1780714 = zext i1 %R17807 to i32
  %cond15 = icmp ne i32 %R1780714, 0
  br i1 %cond15, label %L3269, label %L3268

L3268:                                            ; preds = %L3267
  %R17809 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %b_0x62d000ff22e8)
  br label %L3269

L3269:                                            ; preds = %L3268, %L3267
  %37 = getelementptr inbounds i8, i8* %28, inttoptr (i64 1 to i8*)
  %38 = getelementptr inbounds i8, i8* %7, i64 1
  %load_target16 = load i8, i8* %38
  %39 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8**
  %40 = bitcast i8** %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = bitcast i8* %41 to i8**
  %load_target17 = load i8*, i8** %42
  %43 = getelementptr inbounds i8, i8* %load_target17, inttoptr (i64 1 to i8*)
  %44 = bitcast %struct.luaL_Buffer* %b_0x62d000ff22e8 to i8**
  %45 = bitcast i8** %44 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 0
  %47 = bitcast i8* %46 to i8**
  store i8* %43, i8** %47
  %48 = getelementptr inbounds i8, i8* %load_target17, i64 0
  store i8 %load_target16, i8* %48
  store i8* %37, i8** %0
  br label %L3261

L3270:                                            ; preds = %L3266
  %49 = load i32, i32* %1
  %R17818 = add i32 %49, 1
  %R17820 = icmp sgt i32 %R17818, %R17767
  %R1782018 = zext i1 %R17820 to i32
  store i32 %R17818, i32* %1
  %cond19 = icmp ne i32 %R1782018, 0
  br i1 %cond19, label %L3271, label %L3272

L3271:                                            ; preds = %L3270
  %R17824 = call i32 @luaL_argerror(%struct.lua_State* %ARG1, i32 %R17818, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.249, i64 0, i64 0))
  br label %L3272

L3272:                                            ; preds = %L3271, %L3270
  %R17827 = bitcast [18 x i8]* %form_0x62d000ff2940 to i8*
  %R17828 = call i8* @scanformat(%struct.lua_State* %ARG1, i8* %28, i8* %R17827)
  %50 = getelementptr inbounds i8, i8* %R17828, inttoptr (i64 1 to i8*)
  %51 = getelementptr inbounds i8, i8* %R17828, i64 0
  %load_target20 = load i8, i8* %51
  store i8* %50, i8** %0
  switch i8 %load_target20, label %L3281 [
    i32 69, label %L3276
    i32 71, label %L3276
    i32 88, label %L3275
    i32 99, label %L3273
    i32 100, label %L3274
    i32 101, label %L3276
    i32 102, label %L3276
    i32 103, label %L3276
    i32 105, label %L3274
    i32 111, label %L3275
    i32 113, label %L3277
    i32 115, label %L3278
    i32 117, label %L3275
    i32 120, label %L3275
  ]

L3273:                                            ; preds = %L3272
  %R17832 = bitcast [512 x i8]* %buff_0x62d000ff2b10 to i8*
  %R17836 = call double @luaL_checknumber(%struct.lua_State* %ARG1, i32 %R17818)
  %R17837 = fptosi double %R17836 to i32
  %R17838 = call i32 (i8*, i8*, ...) @sprintf(i8* %R17832, i8* %R17827, i32 %R17837)
  br label %L3282

L3274:                                            ; preds = %L3272, %L3272
  call void @addintlen(i8* %R17827)
  %R17840 = bitcast [512 x i8]* %buff_0x62d000ff2b10 to i8*
  %R17844 = call double @luaL_checknumber(%struct.lua_State* %ARG1, i32 %R17818)
  %R17846 = call i32 (i8*, i8*, ...) @sprintf(i8* %R17840, i8* %R17827, double %R17844)
  br label %L3282

L3275:                                            ; preds = %L3272, %L3272, %L3272, %L3272
  call void @addintlen(i8* %R17827)
  %R17848 = bitcast [512 x i8]* %buff_0x62d000ff2b10 to i8*
  %R17852 = call double @luaL_checknumber(%struct.lua_State* %ARG1, i32 %R17818)
  %R17854 = call i32 (i8*, i8*, ...) @sprintf(i8* %R17848, i8* %R17827, double %R17852)
  br label %L3282

L3276:                                            ; preds = %L3272, %L3272, %L3272, %L3272, %L3272
  %R17855 = bitcast [512 x i8]* %buff_0x62d000ff2b10 to i8*
  %R17859 = call double @luaL_checknumber(%struct.lua_State* %ARG1, i32 %R17818)
  %R17861 = call i32 (i8*, i8*, ...) @sprintf(i8* %R17855, i8* %R17827, double %R17859)
  br label %L3282

L3277:                                            ; preds = %L3272
  call void @addquoted(%struct.lua_State* %ARG1, %struct.luaL_Buffer* %b_0x62d000ff22e8, i32 %R17818)
  br label %L3261

L3278:                                            ; preds = %L3272
  %R17868 = call i8* @luaL_checklstring(%struct.lua_State* %ARG1, i32 %R17818, i64* %l_0x62d000ff3f00)
  %R17870 = call i8* @strchr(i8* %R17827, i32 46)
  %R17871 = icmp eq i8* %R17870, null
  %R1787121 = zext i1 %R17871 to i32
  %52 = bitcast i64* %l_0x62d000ff3f00 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 0
  %54 = bitcast i8* %53 to i64*
  %load_target22 = load i64, i64* %54
  %R17873 = icmp uge i64 %load_target22, 100
  %R1787323 = zext i1 %R17873 to i32
  %55 = icmp ne i32 %R1787121, 0
  %56 = icmp ne i32 %R1787323, 0
  %R17874 = and i1 %55, %56
  %R1787424 = zext i1 %R17874 to i32
  %cond25 = icmp ne i32 %R1787424, 0
  br i1 %cond25, label %L3279, label %L3280

L3279:                                            ; preds = %L3278
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 %R17818)
  call void @luaL_addvalue(%struct.luaL_Buffer* %b_0x62d000ff22e8)
  br label %L3261

L3280:                                            ; preds = %L3278
  %R17878 = bitcast [512 x i8]* %buff_0x62d000ff2b10 to i8*
  %R17881 = call i32 (i8*, i8*, ...) @sprintf(i8* %R17878, i8* %R17827, i8* %R17868)
  br label %L3282

L3281:                                            ; preds = %L3272
  %R17887 = sext i8 %load_target20 to i32
  %R17888 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.250, i64 0, i64 0), i32 %R17887)
  store i32 %R17888, i32* %2
  br label %L3284

L3282:                                            ; preds = %L3280, %L3276, %L3275, %L3274, %L3273
  %R17891 = bitcast [512 x i8]* %buff_0x62d000ff2b10 to i8*
  %R17892 = bitcast [512 x i8]* %buff_0x62d000ff2b10 to i8*
  %R17893 = call i64 @strlen(i8* %R17892)
  call void @luaL_addlstring(%struct.luaL_Buffer* %b_0x62d000ff22e8, i8* %R17891, i64 %R17893)
  br label %L3261

L3283:                                            ; preds = %L3261
  call void @luaL_pushresult(%struct.luaL_Buffer* %b_0x62d000ff22e8)
  store i32 1, i32* %2
  br label %L3284

L3284:                                            ; preds = %L3283, %L3281
  %57 = load i32, i32* %2
  ret i32 %57
}

define internal void @createmetatable(%struct.lua_State* %ARG1) {
L3285:
  call void @lua_createtable(%struct.lua_State* %ARG1, i32 0, i32 1)
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.251, i64 0, i64 0), i64 0)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -2)
  %R17900 = call i32 @lua_setmetatable(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_pushvalue(%struct.lua_State* %ARG1, i32 -2)
  call void @lua_setfield(%struct.lua_State* %ARG1, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.252, i64 0, i64 0))
  call void @lua_settop(%struct.lua_State* %ARG1, i32 -2)
  ret void
}

define internal i32 @luaopen_string(%struct.lua_State* %ARG1) {
L3286:
  call void @luaL_register(%struct.lua_State* %ARG1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.253, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([12 x %struct.luaL_Reg], [12 x %struct.luaL_Reg]* @strlib, i32 0, i32 0))
  call void @createmetatable(%struct.lua_State* %ARG1)
  ret i32 1
}

define internal void @luaL_openlibs(%struct.lua_State* %ARG1) {
L3287:
  %0 = alloca %struct.luaL_Reg*
  store %struct.luaL_Reg* getelementptr inbounds ([6 x %struct.luaL_Reg], [6 x %struct.luaL_Reg]* @lualibs, i32 0, i32 0), %struct.luaL_Reg** %0
  br label %L3288

L3288:                                            ; preds = %L3289, %L3287
  %1 = load %struct.luaL_Reg*, %struct.luaL_Reg** %0
  %2 = bitcast %struct.luaL_Reg* %1 to i32 (%struct.lua_State*)**
  %3 = bitcast i32 (%struct.lua_State*)** %2 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to i32 (%struct.lua_State*)**
  %load_target = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %5
  %cond = icmp ne i32 (%struct.lua_State*)* %load_target, null
  br i1 %cond, label %L3289, label %L3290

L3289:                                            ; preds = %L3288
  call void @lua_pushcclosure(%struct.lua_State* %ARG1, i32 (%struct.lua_State*)* %load_target, i32 0)
  %6 = bitcast %struct.luaL_Reg* %1 to i8**
  %7 = bitcast i8** %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to i8**
  %load_target1 = load i8*, i8** %9
  call void @lua_pushstring(%struct.lua_State* %ARG1, i8* %load_target1)
  call void @lua_call(%struct.lua_State* %ARG1, i32 1, i32 0)
  %10 = bitcast %struct.luaL_Reg* %1 to i8*
  %11 = getelementptr inbounds i8, i8* %10, %struct.luaL_Reg* inttoptr (i64 16 to %struct.luaL_Reg*)
  %12 = bitcast i8* %11 to %struct.luaL_Reg*
  store %struct.luaL_Reg* %12, %struct.luaL_Reg** %0
  br label %L3288

L3290:                                            ; preds = %L3288
  ret void
}

define internal i32 @barg(%struct.lua_State* %ARG1, i32 %ARG2) {
L3291:
  %R17925 = call double @lua_tonumber(%struct.lua_State* %ARG1, i32 %ARG2)
  %R17927 = fadd double %R17925, 0x4338000000000000
  %R17930 = fcmp oeq double %R17927, 0.000000e+00
  %R179301 = zext i1 %R17930 to i32
  %cond = icmp ne i32 %R179301, 0
  br i1 %cond, label %L3292, label %L3294

L3292:                                            ; preds = %L3291
  %R17933 = call i32 @lua_isnumber(%struct.lua_State* %ARG1, i32 %ARG2)
  %cond2 = icmp ne i32 %R17933, 0
  br i1 %cond2, label %L3294, label %L3293

L3293:                                            ; preds = %L3292
  %R17937 = call i32 @luaL_typerror(%struct.lua_State* %ARG1, i32 %ARG2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.254, i64 0, i64 0))
  br label %L3294

L3294:                                            ; preds = %L3293, %L3292, %L3291
  %R17939 = fptosi double %R17927 to i32
  ret i32 %R17939
}

define internal i32 @tobit(%struct.lua_State* %ARG1) {
L3295:
  %R17943 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R17945 = sitofp i32 %R17943 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R17945)
  ret i32 1
}

define internal i32 @bnot(%struct.lua_State* %ARG1) {
L3296:
  %R17949 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R17950 = xor i32 %R17949, -1
  %R17952 = sitofp i32 %R17950 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R17952)
  ret i32 1
}

define internal i32 @band(%struct.lua_State* %ARG1) {
L3297:
  %0 = alloca i32
  %1 = alloca i32
  %R17955 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R17957 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  store i32 %R17955, i32* %1
  store i32 %R17957, i32* %0
  br label %L3298

L3298:                                            ; preds = %L3299, %L3297
  %2 = load i32, i32* %0
  %R17959 = icmp sgt i32 %2, 1
  %R179591 = zext i1 %R17959 to i32
  %3 = load i32, i32* %1
  %cond = icmp ne i32 %R179591, 0
  br i1 %cond, label %L3299, label %L3300

L3299:                                            ; preds = %L3298
  %R17962 = call i32 @barg(%struct.lua_State* %ARG1, i32 %2)
  %R17965 = and i32 %3, %R17962
  store i32 %R17965, i32* %1
  %R17968 = add i32 %2, -1
  store i32 %R17968, i32* %0
  br label %L3298

L3300:                                            ; preds = %L3298
  %R17972 = sitofp i32 %3 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R17972)
  ret i32 1
}

define internal i32 @bor(%struct.lua_State* %ARG1) {
L3301:
  %0 = alloca i32
  %1 = alloca i32
  %R17975 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R17977 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  store i32 %R17975, i32* %1
  store i32 %R17977, i32* %0
  br label %L3302

L3302:                                            ; preds = %L3303, %L3301
  %2 = load i32, i32* %0
  %R17979 = icmp sgt i32 %2, 1
  %R179791 = zext i1 %R17979 to i32
  %3 = load i32, i32* %1
  %cond = icmp ne i32 %R179791, 0
  br i1 %cond, label %L3303, label %L3304

L3303:                                            ; preds = %L3302
  %R17982 = call i32 @barg(%struct.lua_State* %ARG1, i32 %2)
  %R17985 = or i32 %3, %R17982
  store i32 %R17985, i32* %1
  %R17988 = add i32 %2, -1
  store i32 %R17988, i32* %0
  br label %L3302

L3304:                                            ; preds = %L3302
  %R17992 = sitofp i32 %3 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R17992)
  ret i32 1
}

define internal i32 @bxor(%struct.lua_State* %ARG1) {
L3305:
  %0 = alloca i32
  %1 = alloca i32
  %R17995 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R17997 = call i32 @lua_gettop(%struct.lua_State* %ARG1)
  store i32 %R17995, i32* %1
  store i32 %R17997, i32* %0
  br label %L3306

L3306:                                            ; preds = %L3307, %L3305
  %2 = load i32, i32* %0
  %R17999 = icmp sgt i32 %2, 1
  %R179991 = zext i1 %R17999 to i32
  %3 = load i32, i32* %1
  %cond = icmp ne i32 %R179991, 0
  br i1 %cond, label %L3307, label %L3308

L3307:                                            ; preds = %L3306
  %R18002 = call i32 @barg(%struct.lua_State* %ARG1, i32 %2)
  %R18005 = xor i32 %3, %R18002
  store i32 %R18005, i32* %1
  %R18008 = add i32 %2, -1
  store i32 %R18008, i32* %0
  br label %L3306

L3308:                                            ; preds = %L3306
  %R18012 = sitofp i32 %3 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R18012)
  ret i32 1
}

define internal i32 @lshift(%struct.lua_State* %ARG1) {
L3309:
  %R18015 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R18017 = call i32 @barg(%struct.lua_State* %ARG1, i32 2)
  %R18018 = and i32 %R18017, 31
  %R18022 = shl i32 %R18015, %R18018
  %R18024 = sitofp i32 %R18022 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R18024)
  ret i32 1
}

define internal i32 @rshift(%struct.lua_State* %ARG1) {
L3310:
  %R18027 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R18029 = call i32 @barg(%struct.lua_State* %ARG1, i32 2)
  %R18030 = and i32 %R18029, 31
  %R18034 = lshr i32 %R18027, %R18030
  %R18036 = sitofp i32 %R18034 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R18036)
  ret i32 1
}

define internal i32 @arshift(%struct.lua_State* %ARG1) {
L3311:
  %R18039 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R18041 = call i32 @barg(%struct.lua_State* %ARG1, i32 2)
  %R18042 = and i32 %R18041, 31
  %R18047 = ashr i32 %R18039, %R18042
  %R18049 = sitofp i32 %R18047 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R18049)
  ret i32 1
}

define internal i32 @rol(%struct.lua_State* %ARG1) {
L3312:
  %R18052 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R18054 = call i32 @barg(%struct.lua_State* %ARG1, i32 2)
  %R18055 = and i32 %R18054, 31
  %R18059 = shl i32 %R18052, %R18055
  %R18062 = sub i32 32, %R18055
  %R18063 = lshr i32 %R18052, %R18062
  %R18064 = or i32 %R18059, %R18063
  %R18066 = sitofp i32 %R18064 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R18066)
  ret i32 1
}

define internal i32 @ror(%struct.lua_State* %ARG1) {
L3313:
  %R18069 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R18071 = call i32 @barg(%struct.lua_State* %ARG1, i32 2)
  %R18072 = and i32 %R18071, 31
  %R18076 = lshr i32 %R18069, %R18072
  %R18079 = sub i32 32, %R18072
  %R18080 = shl i32 %R18069, %R18079
  %R18081 = or i32 %R18076, %R18080
  %R18083 = sitofp i32 %R18081 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R18083)
  ret i32 1
}

define internal i32 @bswap(%struct.lua_State* %ARG1) {
L3314:
  %R18086 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R18088 = lshr i32 %R18086, 24
  %R18090 = lshr i32 %R18086, 8
  %R18091 = and i32 %R18090, 65280
  %R18092 = or i32 %R18088, %R18091
  %R18094 = and i32 %R18086, 65280
  %R18095 = shl i32 %R18094, 8
  %R18096 = or i32 %R18092, %R18095
  %R18098 = shl i32 %R18086, 24
  %R18099 = or i32 %R18096, %R18098
  %R18103 = sitofp i32 %R18099 to double
  call void @lua_pushnumber(%struct.lua_State* %ARG1, double %R18103)
  ret i32 1
}

define internal i32 @tohex(%struct.lua_State* %ARG1) {
L3315:
  %buf_0x62d001026810 = alloca [8 x i8]
  %0 = alloca i32
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i8*
  %4 = alloca i32
  %R18106 = call i32 @barg(%struct.lua_State* %ARG1, i32 1)
  %R18108 = call i32 @lua_type(%struct.lua_State* %ARG1, i32 2)
  %R18109 = icmp eq i32 %R18108, -1
  %R181091 = zext i1 %R18109 to i32
  store i32 %R18106, i32* %4
  %cond = icmp ne i32 %R181091, 0
  br i1 %cond, label %L3316, label %L3317

L3316:                                            ; preds = %L3315
  store i32 8, i32* %0
  br label %L3318

L3317:                                            ; preds = %L3315
  %R18111 = call i32 @barg(%struct.lua_State* %ARG1, i32 2)
  store i32 %R18111, i32* %0
  br label %L3318

L3318:                                            ; preds = %L3317, %L3316
  %5 = load i32, i32* %0
  %R18116 = icmp slt i32 %5, 0
  %R181162 = zext i1 %R18116 to i32
  store i32 %5, i32* %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.255, i64 0, i64 0), i8** %3
  %cond3 = icmp ne i32 %R181162, 0
  br i1 %cond3, label %L3319, label %L3320

L3319:                                            ; preds = %L3318
  %R18118 = sub i32 0, %5
  store i32 %R18118, i32* %1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.256, i64 0, i64 0), i8** %3
  br label %L3320

L3320:                                            ; preds = %L3319, %L3318
  %6 = load i32, i32* %1
  %R18121 = icmp sgt i32 %6, 8
  %R181214 = zext i1 %R18121 to i32
  %cond5 = icmp ne i32 %R181214, 0
  %select = select i1 %cond5, i32 8, i32 %6
  store i32 %select, i32* %2
  br label %L3321

L3321:                                            ; preds = %L3322, %L3320
  %7 = load i32, i32* %2
  %R18125 = add i32 %7, -1
  %R18126 = icmp sge i32 %R18125, 0
  %R181266 = zext i1 %R18126 to i32
  store i32 %R18125, i32* %2
  %R18134 = bitcast [8 x i8]* %buf_0x62d001026810 to i8*
  %cond7 = icmp ne i32 %R181266, 0
  br i1 %cond7, label %L3322, label %L3323

L3322:                                            ; preds = %L3321
  %8 = load i8*, i8** %3
  %9 = load i32, i32* %4
  %R18129 = and i32 %9, 15
  %R18130 = zext i32 %R18129 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %R18130
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  %load_target = load i8, i8* %11
  %R18136 = sext i32 %R18125 to i64
  %12 = getelementptr inbounds i8, i8* %R18134, i64 %R18136
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  store i8 %load_target, i8* %13
  %R18140 = lshr i32 %9, 4
  store i32 %R18140, i32* %4
  br label %L3321

L3323:                                            ; preds = %L3321
  %R18145 = sext i32 %select to i64
  call void @lua_pushlstring(%struct.lua_State* %ARG1, i8* %R18134, i64 %R18145)
  ret i32 1
}

define internal void @init_globals() {
L3324:
  store i8* null, i8** bitcast (%struct.lua_TValue* @luaO_nilobject_.3 to i8**)
  store i32 0, i32* bitcast (i8* getelementptr inbounds (i8, i8* getelementptr inbounds (%struct.lua_TValue, %struct.lua_TValue* @luaO_nilobject_.3, i32 0, i32 0, i32 0, i32 0), i64 8) to i32*)
  store i8 0, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i32 0)
  store i8 1, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 1)
  store i8 2, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 2)
  store i8 2, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 3)
  store i8 3, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 4)
  store i8 3, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 5)
  store i8 3, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 6)
  store i8 3, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 7)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 8)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 9)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 10)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 11)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 12)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 13)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 14)
  store i8 4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 15)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 16)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 17)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 18)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 19)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 20)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 21)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 22)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 23)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 24)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 25)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 26)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 27)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 28)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 29)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 30)
  store i8 5, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 31)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 32)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 33)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 34)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 35)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 36)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 37)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 38)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 39)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 40)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 41)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 42)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 43)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 44)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 45)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 46)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 47)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 48)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 49)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 50)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 51)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 52)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 53)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 54)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 55)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 56)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 57)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 58)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 59)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 60)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 61)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 62)
  store i8 6, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 63)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 64)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 65)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 66)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 67)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 68)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 69)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 70)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 71)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 72)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 73)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 74)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 75)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 76)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 77)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 78)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 79)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 80)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 81)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 82)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 83)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 84)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 85)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 86)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 87)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 88)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 89)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 90)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 91)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 92)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 93)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 94)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 95)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 96)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 97)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 98)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 99)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 100)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 101)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 102)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 103)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 104)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 105)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 106)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 107)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 108)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 109)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 110)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 111)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 112)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 113)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 114)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 115)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 116)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 117)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 118)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 119)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 120)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 121)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 122)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 123)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 124)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 125)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 126)
  store i8 7, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 127)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 128)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 129)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 130)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 131)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 132)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 133)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 134)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 135)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 136)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 137)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 138)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 139)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 140)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 141)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 142)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 143)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 144)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 145)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 146)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 147)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 148)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 149)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 150)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 151)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 152)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 153)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 154)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 155)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 156)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 157)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 158)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 159)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 160)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 161)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 162)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 163)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 164)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 165)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 166)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 167)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 168)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 169)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 170)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 171)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 172)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 173)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 174)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 175)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 176)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 177)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 178)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 179)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 180)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 181)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 182)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 183)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 184)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 185)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 186)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 187)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 188)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 189)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 190)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 191)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 192)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 193)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 194)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 195)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 196)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 197)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 198)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 199)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 200)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 201)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 202)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 203)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 204)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 205)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 206)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 207)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 208)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 209)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 210)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 211)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 212)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 213)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 214)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 215)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 216)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 217)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 218)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 219)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 220)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 221)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 222)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 223)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 224)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 225)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 226)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 227)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 228)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 229)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 230)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 231)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 232)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 233)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 234)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 235)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 236)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 237)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 238)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 239)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 240)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 241)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 242)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 243)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 244)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 245)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 246)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 247)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 248)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 249)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 250)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 251)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 252)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 253)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 254)
  store i8 8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @log_2, i32 0, i64 255)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i64 0, i64 0), i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @luaT_typenames, i32 0, i32 0)
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.258, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 8) to i8**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.259, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 16) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 24) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.261, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 32) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.262, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 40) to i8**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.263, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 48) to i8**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.264, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 56) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.265, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 64) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.266, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 72) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.267, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([11 x i8*]* @luaT_typenames to i8*), i64 80) to i8**)
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.268, i64 0, i64 0), i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @luaT_eventname, i32 0, i32 0)
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.269, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 8) to i8**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.270, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 16) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.271, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 24) to i8**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 32) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.273, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 40) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 48) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.275, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 56) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.276, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 64) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.277, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 72) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.278, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 80) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.279, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 88) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.280, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 96) to i8**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.281, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 104) to i8**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.282, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 112) to i8**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.283, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 120) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.284, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([17 x i8*]* @luaT_eventname to i8*), i64 128) to i8**)
  store %struct.Node* null, %struct.Node** bitcast (i8* getelementptr inbounds (i8, i8* getelementptr inbounds (%struct.Node, %struct.Node* @dummynode_, i32 0, i32 0, i32 0, i32 0, i32 0), i64 32) to %struct.Node**)
  store i32 0, i32* bitcast (i8* getelementptr inbounds (i8, i8* getelementptr inbounds (%struct.Node, %struct.Node* @dummynode_, i32 0, i32 0, i32 0, i32 0, i32 0), i64 24) to i32*)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* getelementptr inbounds (%struct.Node, %struct.Node* @dummynode_, i32 0, i32 0, i32 0, i32 0, i32 0), i64 16) to i8**)
  store i8* null, i8** bitcast (%struct.Node* @dummynode_ to i8**)
  store i32 0, i32* bitcast (i8* getelementptr inbounds (i8, i8* getelementptr inbounds (%struct.Node, %struct.Node* @dummynode_, i32 0, i32 0, i32 0, i32 0, i32 0), i64 8) to i32*)
  store i8 96, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i32 0)
  store i8 113, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 1)
  store i8 84, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 2)
  store i8 96, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 3)
  store i8 80, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 4)
  store i8 113, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 5)
  store i8 108, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 6)
  store i8 49, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 7)
  store i8 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 8)
  store i8 60, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 9)
  store i8 84, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 10)
  store i8 108, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 11)
  store i8 124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 12)
  store i8 124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 13)
  store i8 124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 14)
  store i8 124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 15)
  store i8 124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 16)
  store i8 124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 17)
  store i8 96, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 18)
  store i8 96, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 19)
  store i8 96, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 20)
  store i8 104, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 21)
  store i8 34, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 22)
  store i8 -68, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 23)
  store i8 -68, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 24)
  store i8 -68, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 25)
  store i8 -28, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 26)
  store i8 -28, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 27)
  store i8 84, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 28)
  store i8 84, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 29)
  store i8 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 30)
  store i8 98, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 31)
  store i8 98, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 32)
  store i8 -124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 33)
  store i8 20, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 34)
  store i8 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 35)
  store i8 81, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 36)
  store i8 80, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @luaP_opmodes.53, i32 0, i64 37)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.285, i64 0, i64 0), i8** getelementptr inbounds ([32 x i8*], [32 x i8*]* @luaX_tokens, i32 0, i32 0)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.286, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 8) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 16) to i8**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.288, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 24) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.289, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 32) to i8**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.290, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 40) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.291, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 48) to i8**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.292, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 56) to i8**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.293, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 64) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.294, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 72) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.295, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 80) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.296, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 88) to i8**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.297, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 96) to i8**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.298, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 104) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.299, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 112) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.300, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 120) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 128) to i8**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.302, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 136) to i8**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.303, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 144) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.304, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 152) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.305, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 160) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.306, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 168) to i8**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 176) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.308, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 184) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.309, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 192) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.310, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 200) to i8**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.311, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 208) to i8**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.312, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 216) to i8**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 224) to i8**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.314, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 232) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.315, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 240) to i8**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([32 x i8*]* @luaX_tokens to i8*), i64 248) to i8**)
  store i8 6, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0)
  store i8 6, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 1)
  store i8 6, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 2)
  store i8 6, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 3)
  store i8 7, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 4)
  store i8 7, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 5)
  store i8 7, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 6)
  store i8 7, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 7)
  store i8 7, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 8)
  store i8 7, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 9)
  store i8 10, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 10)
  store i8 9, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 11)
  store i8 5, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 12)
  store i8 4, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 13)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 14)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 15)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 16)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 17)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 18)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 19)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 20)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 21)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 22)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 23)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 24)
  store i8 3, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 25)
  store i8 2, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 26)
  store i8 2, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 27)
  store i8 1, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 28)
  store i8 1, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([15 x %struct.anno], [15 x %struct.anno]* @priority, i32 0, i32 0, i32 0), i64 29)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.316, i64 0, i64 0), i8** getelementptr inbounds ([13 x %struct.luaL_Reg], [13 x %struct.luaL_Reg]* @base_funcs, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @luaB_assert, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.317, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @luaB_error, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.318, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* @luaB_loadfile, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.319, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 48) to i8**)
  store i32 (%struct.lua_State*)* @luaB_loadstring, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 56) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.320, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 64) to i8**)
  store i32 (%struct.lua_State*)* @luaB_next, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 72) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.321, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 80) to i8**)
  store i32 (%struct.lua_State*)* @luaB_pcall, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 88) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.322, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 96) to i8**)
  store i32 (%struct.lua_State*)* @luaB_rawget, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 104) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.323, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 112) to i8**)
  store i32 (%struct.lua_State*)* @luaB_setfenv, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 120) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.324, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 128) to i8**)
  store i32 (%struct.lua_State*)* @luaB_setmetatable, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 136) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.325, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 144) to i8**)
  store i32 (%struct.lua_State*)* @luaB_tonumber, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 152) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.326, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 160) to i8**)
  store i32 (%struct.lua_State*)* @luaB_type, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 168) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.327, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 176) to i8**)
  store i32 (%struct.lua_State*)* @luaB_unpack, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 184) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 192) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @base_funcs to i8*), i64 200) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.328, i64 0, i64 0), i8** getelementptr inbounds ([5 x %struct.luaL_Reg], [5 x %struct.luaL_Reg]* @tab_funcs, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @tconcat, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.329, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @tinsert, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* @tremove, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.331, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 48) to i8**)
  store i32 (%struct.lua_State*)* @sort, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 56) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 64) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([5 x %struct.luaL_Reg]* @tab_funcs to i8*), i64 72) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.332, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @fnames, i32 0, i32 0)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.333, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([2 x i8*]* @fnames to i8*), i64 8) to i8**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.334, i64 0, i64 0), i8** getelementptr inbounds ([10 x %struct.luaL_Reg], [10 x %struct.luaL_Reg]* @iolib, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @io_close, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.335, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @io_flush, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* @io_input, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.337, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 48) to i8**)
  store i32 (%struct.lua_State*)* @io_lines, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 56) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.338, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 64) to i8**)
  store i32 (%struct.lua_State*)* @io_open, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 72) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.339, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 80) to i8**)
  store i32 (%struct.lua_State*)* @io_output, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 88) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.340, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 96) to i8**)
  store i32 (%struct.lua_State*)* @io_read, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 104) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 112) to i8**)
  store i32 (%struct.lua_State*)* @io_type, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 120) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.342, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 128) to i8**)
  store i32 (%struct.lua_State*)* @io_write, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 136) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 144) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([10 x %struct.luaL_Reg]* @iolib to i8*), i64 152) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.343, i64 0, i64 0), i8** getelementptr inbounds ([7 x %struct.luaL_Reg], [7 x %struct.luaL_Reg]* @flib, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @io_close, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.344, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @f_flush, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* @f_lines, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.346, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 48) to i8**)
  store i32 (%struct.lua_State*)* @f_read, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 56) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 64) to i8**)
  store i32 (%struct.lua_State*)* @f_write, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 72) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.348, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 80) to i8**)
  store i32 (%struct.lua_State*)* @io_gc, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 88) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 96) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([7 x %struct.luaL_Reg]* @flib to i8*), i64 104) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.349, i64 0, i64 0), i8** getelementptr inbounds ([3 x %struct.luaL_Reg], [3 x %struct.luaL_Reg]* @syslib, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @os_exit, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([3 x %struct.luaL_Reg]* @syslib to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.350, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([3 x %struct.luaL_Reg]* @syslib to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @os_remove, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([3 x %struct.luaL_Reg]* @syslib to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([3 x %struct.luaL_Reg]* @syslib to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([3 x %struct.luaL_Reg]* @syslib to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.351, i64 0, i64 0), i8** getelementptr inbounds ([12 x %struct.luaL_Reg], [12 x %struct.luaL_Reg]* @strlib, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @str_byte, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.352, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @str_char, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.353, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* @str_find, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.354, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 48) to i8**)
  store i32 (%struct.lua_State*)* @str_format, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 56) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.355, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 64) to i8**)
  store i32 (%struct.lua_State*)* @gmatch, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 72) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.356, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 80) to i8**)
  store i32 (%struct.lua_State*)* @str_gsub, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 88) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.357, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 96) to i8**)
  store i32 (%struct.lua_State*)* @str_lower, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 104) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.358, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 112) to i8**)
  store i32 (%struct.lua_State*)* @str_match, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 120) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.359, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 128) to i8**)
  store i32 (%struct.lua_State*)* @str_rep, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 136) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.360, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 144) to i8**)
  store i32 (%struct.lua_State*)* @str_sub, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 152) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.361, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 160) to i8**)
  store i32 (%struct.lua_State*)* @str_upper, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 168) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 176) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([12 x %struct.luaL_Reg]* @strlib to i8*), i64 184) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.362, i64 0, i64 0), i8** getelementptr inbounds ([6 x %struct.luaL_Reg], [6 x %struct.luaL_Reg]* @lualibs, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @luaopen_base, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.363, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @luaopen_table, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.364, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* @luaopen_io, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.365, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 48) to i8**)
  store i32 (%struct.lua_State*)* @luaopen_os, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 56) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.366, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 64) to i8**)
  store i32 (%struct.lua_State*)* @luaopen_string, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 72) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 80) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([6 x %struct.luaL_Reg]* @lualibs to i8*), i64 88) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i64 0, i64 0), i8** getelementptr inbounds ([13 x %struct.luaL_Reg], [13 x %struct.luaL_Reg]* @bitlib, i32 0, i32 0, i32 0)
  store i32 (%struct.lua_State*)* @tobit, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 8) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.368, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 16) to i8**)
  store i32 (%struct.lua_State*)* @bnot, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 24) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.369, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 32) to i8**)
  store i32 (%struct.lua_State*)* @band, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 40) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.370, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 48) to i8**)
  store i32 (%struct.lua_State*)* @bor, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 56) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.371, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 64) to i8**)
  store i32 (%struct.lua_State*)* @bxor, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 72) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.372, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 80) to i8**)
  store i32 (%struct.lua_State*)* @lshift, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 88) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.373, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 96) to i8**)
  store i32 (%struct.lua_State*)* @rshift, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 104) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.374, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 112) to i8**)
  store i32 (%struct.lua_State*)* @arshift, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 120) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.375, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 128) to i8**)
  store i32 (%struct.lua_State*)* @rol, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 136) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.376, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 144) to i8**)
  store i32 (%struct.lua_State*)* @ror, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 152) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.377, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 160) to i8**)
  store i32 (%struct.lua_State*)* @bswap, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 168) to i32 (%struct.lua_State*)**)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.378, i64 0, i64 0), i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 176) to i8**)
  store i32 (%struct.lua_State*)* @tohex, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 184) to i32 (%struct.lua_State*)**)
  store i8* null, i8** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 192) to i8**)
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** bitcast (i8* getelementptr inbounds (i8, i8* bitcast ([13 x %struct.luaL_Reg]* @bitlib to i8*), i64 200) to i32 (%struct.lua_State*)**)
  ret void
}

define i32 @main(i32 %ARG1, i8** %ARG2) {
L3325:
  %0 = alloca i32
  %1 = alloca i32
  call void @init_globals()
  %R21137 = call %struct.lua_State* @luaL_newstate()
  call void @luaL_openlibs(%struct.lua_State* %R21137)
  call void @luaL_register(%struct.lua_State* %R21137, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([13 x %struct.luaL_Reg], [13 x %struct.luaL_Reg]* @bitlib, i32 0, i32 0))
  %R21143 = icmp slt i32 %ARG1, 2
  %R211431 = zext i1 %R21143 to i32
  %cond = icmp ne i32 %R211431, 0
  br i1 %cond, label %L3326, label %L3327

L3326:                                            ; preds = %L3325
  store i32 8, i32* %1
  br label %L3334

L3327:                                            ; preds = %L3325
  call void @lua_createtable(%struct.lua_State* %R21137, i32 0, i32 1)
  %2 = bitcast i8** %ARG2 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i8**
  %load_target = load i8*, i8** %4
  call void @lua_pushstring(%struct.lua_State* %R21137, i8* %load_target)
  call void @lua_rawseti(%struct.lua_State* %R21137, i32 -2, i32 0)
  call void @lua_setfield(%struct.lua_State* %R21137, i32 -10002, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.380, i64 0, i64 0))
  %5 = bitcast i8** %ARG2 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i8**
  %load_target2 = load i8*, i8** %7
  %R21155 = call i32 @luaL_loadfile(%struct.lua_State* %R21137, i8* %load_target2)
  %cond3 = icmp ne i32 %R21155, 0
  br i1 %cond3, label %L3332, label %L3328

L3328:                                            ; preds = %L3327
  store i32 2, i32* %0
  br label %L3329

L3329:                                            ; preds = %L3330, %L3328
  %8 = load i32, i32* %0
  %R21158 = icmp slt i32 %8, %ARG1
  %R211584 = zext i1 %R21158 to i32
  %cond5 = icmp ne i32 %R211584, 0
  br i1 %cond5, label %L3330, label %L3331

L3330:                                            ; preds = %L3329
  %R21162 = sext i32 %8 to i64
  %R21163 = mul i64 %R21162, 8
  %9 = bitcast i8** %ARG2 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %R21163
  %11 = bitcast i8* %10 to i8**
  %12 = bitcast i8** %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to i8**
  %load_target6 = load i8*, i8** %14
  call void @lua_pushstring(%struct.lua_State* %R21137, i8* %load_target6)
  %R21167 = add i32 %8, 1
  store i32 %R21167, i32* %0
  br label %L3329

L3331:                                            ; preds = %L3329
  %R21170 = add i32 %ARG1, -2
  %R21171 = call i32 @lua_pcall(%struct.lua_State* %R21137, i32 %R21170, i32 0, i32 0)
  %cond7 = icmp ne i32 %R21171, 0
  br i1 %cond7, label %L3332, label %L3333

L3332:                                            ; preds = %L3331, %L3327
  %load_target8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr
  %R21175 = call i8* @lua_tolstring(%struct.lua_State* %R21137, i32 -1, i64* null)
  %R21176 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %load_target8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.381, i64 0, i64 0), i8* %R21175)
  store i32 1, i32* %1
  br label %L3334

L3333:                                            ; preds = %L3331
  call void @lua_close(%struct.lua_State* %R21137)
  store i32 0, i32* %1
  br label %L3334

L3334:                                            ; preds = %L3333, %L3332, %L3326
  %15 = load i32, i32* %1
  ret i32 %15
}
