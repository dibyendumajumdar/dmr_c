luaM_growaux_:
.L0:
	<entry-point>
	load.32     %r2 <- 0[%arg3]
	divs.32     %r4 <- %arg5, $2
	setge.32    %r5 <- %r2, %r4
	phisrc.32   %phi13 <- %r2
	br          %r5, .L1, .L2

.L1:
	setge.32    %r9 <- %r2, %arg5
	phisrc.32   %phi10 <- %r2
	br          %r9, .L3, .L4

.L3:
	call        luaG_runerror, %arg1, %arg6
	br          .L4

.L4:
	phisrc.32   %phi7(newsize) <- %arg5
	br          .L5

.L2:
	muls.32     %r15 <- %r2, $2
	setlt.32    %r17 <- %r15, $4
	phisrc.32   %phi8(newsize) <- %r15
	br          %r17, .L6, .L5

.L6:
	phisrc.32   %phi9(newsize) <- $4
	br          .L5

.L5:
	phi.32      %r18(newsize) <- %phi7(newsize), %phi8(newsize), %phi9(newsize)
	add.32      %r19 <- %r18(newsize), $1
	scast.64    %r20 <- (32) %r19
	divu.64     %r22 <- $-3, %arg4
	setbe.32    %r23 <- %r20, %r22
	br          %r23, .L8, .L9

.L8:
	load.32     %r27 <- 0[%arg3]
	scast.64    %r28 <- (32) %r27
	mulu.64     %r30 <- %r28, %arg4
	scast.64    %r32 <- (32) %r18(newsize)
	mulu.64     %r34 <- %r32, %arg4
	call.64     %r35 <- luaM_realloc_, %arg1, %arg2, %r30, %r34
	phisrc.64   %phi1 <- %r35
	br          .L10

.L9:
	call.64     %r37 <- luaM_toobig, %arg1
	cast.64     %r38 <- (64) %r37
	phisrc.64   %phi2 <- %r38
	br          .L10

.L10:
	phi.64      %r39 <- %phi1, %phi2
	store.32    %r18(newsize) -> 0[%arg3]
	ret.64      %r39


luaM_toobig:
.L12:
	<entry-point>
	symaddr.64  %r45 <- <anon symbol:0x62d0010cd380>
	call        luaG_runerror, %arg1, %r45
	ret.64      $0


luaM_realloc_:
.L14:
	<entry-point>
	load.64     %r48 <- 32[%arg1]
	load.64     %r50 <- 24[%r48]
	load.64     %r55 <- 16[%r48]
	load        %r56 <- 0[%r55]
	call.64     %r57 <- %r56, %r50, %arg2, %arg3, %arg4
	seteq.32    %r59 <- %r57, $0
	seta.32     %r61 <- %arg4, $0
	and-bool.32 %r62 <- %r59, %r61
	br          %r62, .L15, .L16

.L15:
	call        luaD_throw, %arg1, $4
	br          .L16

.L16:
	load.64     %r65 <- 120[%r48]
	sub.64      %r67 <- %r65, %arg3
	add.64      %r69 <- %r67, %arg4
	store.64    %r69 -> 120[%r48]
	ret.64      %r57


luaO_int2fb:
.L18:
	<entry-point>
	phisrc.32   %phi23(x) <- %arg1
	phisrc.32   %phi25(e) <- $0
	phisrc.32   %phi27(e) <- $0
	br          .L22

.L22:
	phi.32      %r73(x) <- %phi23(x), %phi24(x)
	setae.32    %r74 <- %r73(x), $16
	br          %r74, .L19, .L21

.L19:
	add.32      %r76 <- %r73(x), $1
	lsr.32      %r77 <- %r76, $1
	phi.32      %r78 <- %phi27(e), %phi28(e)
	add.32      %r79 <- %r78, $1
	phisrc.32   %phi24(x) <- %r77
	phisrc.32   %phi26(e) <- %r79
	phisrc.32   %phi28(e) <- %r79
	br          .L22

.L21:
	setb.32     %r81 <- %r73(x), $8
	br          %r81, .L23, .L24

.L23:
	phisrc.32   %phi17(return) <- %r73(x)
	br          .L25

.L24:
	phi.32      %r85 <- %phi25(e), %phi26(e)
	add.32      %r86 <- %r85, $1
	shl.32      %r87 <- %r86, $3
	add.32      %r90 <- %r73(x), $-8
	or.32       %r91 <- %r87, %r90
	phisrc.32   %phi18(return) <- %r91
	br          .L25

.L25:
	phi.32      %r84 <- %phi17(return), %phi18(return)
	ret.32      %r84


luaO_fb2int:
.L27:
	<entry-point>
	asr.32      %r93 <- %arg1, $3
	and.32      %r94 <- %r93, $31
	br          %r94, .L29, .L28

.L28:
	phisrc.32   %phi29(return) <- %arg1
	br          .L30

.L29:
	and.32      %r100 <- %arg1, $7
	add.32      %r101 <- %r100, $8
	add.32      %r103 <- %r94, $-1
	shl.32      %r104 <- %r101, %r103
	phisrc.32   %phi30(return) <- %r104
	br          .L30

.L30:
	phi.32      %r98 <- %phi29(return), %phi30(return)
	ret.32      %r98


luaO_log2:
.L32:
	<entry-point>
	phisrc.32   %phi34(x) <- %arg1
	phisrc.32   %phi38(l) <- $0xffffffff
	br          .L36

.L36:
	phi.32      %r105(x) <- %phi34(x), %phi35(x)
	setae.32    %r106 <- %r105(x), $256
	phi.32      %r107 <- %phi38(l), %phi39(l)
	br          %r106, .L33, .L35

.L33:
	add.32      %r109 <- %r107, $8
	lsr.32      %r113 <- %r105(x), $8
	phisrc.32   %phi35(x) <- %r113
	phisrc.32   %phi39(l) <- %r109
	br          .L36

.L35:
	symaddr.64  %r116 <- log_2
	cast.64     %r118 <- (32) %r105(x)
	add.64      %r119 <- %r116, %r118
	load.8      %r120 <- 0[%r119]
	cast.32     %r121 <- (8) %r120
	add.32      %r122 <- %r107, %r121
	ret.32      %r122


luaO_rawequalObj:
.L38:
	<entry-point>
	load.32     %r125 <- 8[%arg1]
	load.32     %r128 <- 8[%arg2]
	setne.32    %r130 <- %r125, %r128
	br          %r130, .L39, .L40

.L39:
	phisrc.32   %phi40(return) <- $0
	br          .L41

.L40:
	switch      %r125, 0 -> .L44, 1 -> .L46, 2 -> .L47, 3 -> .L45, default -> .L48

.L44:
	phisrc.32   %phi41(return) <- $1
	br          .L41

.L45:
	load.64     %r135 <- 0[%arg1]
	load.64     %r138 <- 0[%arg2]
	seteq.32    %r140 <- %r135, %r138
	phisrc.32   %phi42(return) <- %r140
	br          .L41

.L46:
	load.32     %r142 <- 0[%arg1]
	load.32     %r145 <- 0[%arg2]
	seteq.32    %r147 <- %r142, %r145
	phisrc.32   %phi43(return) <- %r147
	br          .L41

.L47:
	load.64     %r149 <- 0[%arg1]
	load.64     %r151 <- 0[%arg2]
	seteq.32    %r152 <- %r149, %r151
	phisrc.32   %phi44(return) <- %r152
	br          .L41

.L48:
	load.64     %r154 <- 0[%arg1]
	load.64     %r156 <- 0[%arg2]
	seteq.32    %r157 <- %r154, %r156
	phisrc.32   %phi45(return) <- %r157
	br          .L41

.L41:
	phi.32      %r131 <- %phi40(return), %phi41(return), %phi42(return), %phi43(return), %phi44(return), %phi45(return)
	ret.32      %r131


luaO_str2d:
.L49:
	<entry-point>
	symaddr.64  %r159 <- endptr
	call.64     %r160 <- strtod, %arg1, %r159
	store.64    %r160 -> 0[%arg2]
	load.64     %r162(endptr) <- 0[endptr]
	seteq.32    %r164 <- %r162(endptr), %arg1
	phisrc.64   %phi57(endptr) <- %r162(endptr)
	phisrc.64   %phi59(endptr) <- %r162(endptr)
	phisrc.64   %phi60(endptr) <- %r162(endptr)
	br          %r164, .L50, .L51

.L50:
	phisrc.32   %phi47(return) <- $0
	br          .L52

.L51:
	load.8      %r167 <- 0[%r162(endptr)]
	scast.32    %r168 <- (8) %r167
	seteq.32    %r169 <- %r168, $120
	br          %r169, .L53, .L55

.L55:
	scast.32    %r172 <- (8) %r167
	seteq.32    %r173 <- %r172, $88
	phisrc.64   %phi53(endptr) <- %r162(endptr)
	br          %r173, .L53, .L54

.L53:
	call.64     %r176 <- strtoul, %arg1, %r159, $16
	fpcast.64   %r177 <- (64) %r176
	store.64    %r177 -> 0[%arg2]
	br          .L54

.L54:
	load.64     %r179 <- 0[endptr]
	load.8      %r180 <- 0[%r179]
	br          %r180, .L61, .L56

.L56:
	phisrc.32   %phi48(return) <- $1
	br          .L52

.L61:
	call.64     %r183 <- __ctype_b_loc
	load.64     %r184 <- 0[%r183]
	load.64     %r185(endptr) <- 0[endptr]
	load.8      %r186 <- 0[%r185(endptr)]
	cast.32     %r188 <- (8) %r186
	scast.64    %r189 <- (32) %r188
	muls.64     %r190 <- %r189, $2
	add.64      %r191 <- %r184, %r190
	load.16     %r192 <- 0[%r191]
	cast.32     %r193 <- (16) %r192
	and.32      %r194 <- %r193, $0x2000
	br          %r194, .L58, .L60

.L58:
	add.64      %r196 <- %r185(endptr), $1
	store.64    %r196 -> 0[endptr]
	br          .L61

.L60:
	br          %r186, .L62, .L63

.L62:
	phisrc.32   %phi49(return) <- $0
	br          .L52

.L63:
	phisrc.32   %phi50(return) <- $1
	br          .L52

.L52:
	phi.32      %r165 <- %phi47(return), %phi48(return), %phi49(return), %phi50(return)
	ret.32      %r165


pushstr:
.L64:
	<entry-point>
	load.64     %r202 <- 16[%arg1]
	call.64     %r206 <- strlen, %arg2
	call.64     %r207 <- luaS_newlstr, %arg1, %arg2, %r206
	ptrcast.64  %r208 <- (64) %r207
	store.64    %r208 -> 0[%r202]
	store.32    $4 -> 8[%r202]
	load.64     %r212 <- 56[%arg1]
	ptrcast.64  %r213 <- (64) %r212
	load.64     %r215 <- 16[%arg1]
	ptrcast.64  %r216 <- (64) %r215
	sub.64      %r217 <- %r213, %r216
	setle.32    %r218 <- %r217, $16
	br          %r218, .L65, .L67

.L65:
	call        luaD_growstack, %arg1, $1
	br          .L67

.L67:
	load.64     %r221 <- 16[%arg1]
	add.64      %r222 <- %r221, $16
	store.64    %r222 -> 16[%arg1]
	ret


luaO_pushvfstring:
.L69:
	<entry-point>
	symaddr.64  %r224 <- <anon symbol:0x62d001146118>
	call        pushstr, %arg1, %r224
	phisrc.64   %phi64(fmt) <- %arg2
	phisrc.64   %phi90(argp) <- %arg3
	phisrc.32   %phi96(n) <- $1
	phisrc.32   %phi98(n) <- $1
	br          .L70

.L70:
	phi.64      %r225(fmt) <- %phi64(fmt), %phi65(fmt)
	call.64     %r226 <- strchr, %r225(fmt), $37
	br          %r226, .L75, .L72

.L75:
	load.64     %r230 <- 16[%arg1]
	sub.64      %r235 <- %r226, %r225(fmt)
	call.64     %r237 <- luaS_newlstr, %arg1, %r225(fmt), %r235
	ptrcast.64  %r238 <- (64) %r237
	store.64    %r238 -> 0[%r230]
	store.32    $4 -> 8[%r230]
	load.64     %r242 <- 56[%arg1]
	ptrcast.64  %r243 <- (64) %r242
	load.64     %r245 <- 16[%arg1]
	ptrcast.64  %r246 <- (64) %r245
	sub.64      %r247 <- %r243, %r246
	setle.32    %r248 <- %r247, $16
	br          %r248, .L76, .L78

.L76:
	call        luaD_growstack, %arg1, $1
	br          .L78

.L78:
	load.64     %r251 <- 16[%arg1]
	add.64      %r252 <- %r251, $16
	store.64    %r252 -> 16[%arg1]
	load.8      %r254 <- 1[%r226]
	phi.64      %r255 <- %phi90(argp), %phi91(argp), %phi92(argp), %phi93(argp), %phi94(argp), %phi95(argp)
	cast.64     %r259 <- (64) %r255
	ptrcast.64  %r256 <- (64) %r255
	add.64      %r260 <- %r259, $8
	add.64      %r273 <- %r259, $4
	cast.64     %r261 <- (64) %r260
	cast.64     %r274 <- (64) %r273
	switch      %r254, 37 -> .L85, 99 -> .L81, 100 -> .L82, 102 -> .L83, 112 -> .L84, 115 -> .L80, default -> .L86

.L80:
	load.64     %r257 <- 0[%r256]
	phisrc.64   %phi91(argp) <- %r261
	phisrc.64   %phi100(s) <- %r257
	br          %r257, .L88, .L87

.L87:
	symaddr.64  %r265 <- <anon symbol:0x62d001146dc8>
	phisrc.64   %phi101(s) <- %r265
	br          .L88

.L88:
	phi.64      %r267 <- %phi100(s), %phi101(s)
	call        pushstr, %arg1, %r267
	br          .L79

.L81:
	load.32     %r270 <- 0[%r256]
	scast.8     %r276 <- (32) %r270
	store.8     %r276 -> 0[buff]
	store.8     $0 -> 1[buff]
	symaddr.64  %r278 <- buff
	call        pushstr, %arg1, %r278
	phisrc.64   %phi92(argp) <- %r274
	br          .L79

.L82:
	load.32     %r283 <- 0[%r256]
	fpcast.64   %r289 <- (32) %r283
	store.64    %r289 -> 16[%r251]
	store.32    $3 -> 24[%r251]
	load.64     %r293 <- 56[%arg1]
	ptrcast.64  %r294 <- (64) %r293
	load.64     %r296 <- 16[%arg1]
	ptrcast.64  %r297 <- (64) %r296
	sub.64      %r298 <- %r294, %r297
	setle.32    %r299 <- %r298, $16
	phisrc.64   %phi93(argp) <- %r274
	br          %r299, .L89, .L91

.L89:
	call        luaD_growstack, %arg1, $1
	br          .L91

.L91:
	load.64     %r302 <- 16[%arg1]
	add.64      %r303 <- %r302, $16
	store.64    %r303 -> 16[%arg1]
	br          .L79

.L83:
	load.64     %r308 <- 0[%r256]
	store.64    %r308 -> 16[%r251]
	store.32    $3 -> 24[%r251]
	load.64     %r318 <- 56[%arg1]
	ptrcast.64  %r319 <- (64) %r318
	load.64     %r321 <- 16[%arg1]
	ptrcast.64  %r322 <- (64) %r321
	sub.64      %r323 <- %r319, %r322
	setle.32    %r324 <- %r323, $16
	phisrc.64   %phi94(argp) <- %r261
	br          %r324, .L92, .L94

.L92:
	call        luaD_growstack, %arg1, $1
	br          .L94

.L94:
	load.64     %r327 <- 16[%arg1]
	add.64      %r328 <- %r327, $16
	store.64    %r328 -> 16[%arg1]
	br          .L79

.L84:
	symaddr.64  %r329 <- buff
	symaddr.64  %r330 <- <anon symbol:0x62d0011489e0>
	load.64     %r333 <- 0[%r256]
	call.32     %r339 <- sprintf, %r329, %r330, %r333
	call        pushstr, %arg1, %r329
	phisrc.64   %phi95(argp) <- %r261
	br          .L79

.L85:
	symaddr.64  %r343 <- <anon symbol:0x62d001149038>
	call        pushstr, %arg1, %r343
	br          .L79

.L86:
	store.8     $37 -> 0[buff]
	store.8     %r254 -> 1[buff]
	store.8     $0 -> 2[buff]
	symaddr.64  %r348 <- buff
	call        pushstr, %arg1, %r348
	br          .L79

.L79:
	phi.32      %r349 <- %phi98(n), %phi99(n)
	add.32      %r351 <- %r349, $2
	add.64      %r354 <- %r226, $2
	phisrc.64   %phi65(fmt) <- %r354
	phisrc.32   %phi97(n) <- %r351
	phisrc.32   %phi99(n) <- %r351
	br          .L70

.L72:
	call        pushstr, %arg1, %r225(fmt)
	phi.32      %r358 <- %phi96(n), %phi97(n)
	add.32      %r359 <- %r358, $1
	load.64     %r361 <- 16[%arg1]
	load.64     %r363 <- 24[%arg1]
	sub.64      %r364 <- %r361, %r363
	divs.64     %r365 <- %r364, $16
	scast.32    %r366 <- (64) %r365
	add.32      %r367 <- %r366, $-1
	call        luaV_concat, %arg1, %r359, %r367
	scast.64    %r369 <- (32) %r358
	muls.64     %r370 <- %r369, $16
	load.64     %r372 <- 16[%arg1]
	cast.64     %r373 <- (64) %r372
	sub.64      %r374 <- %r373, %r370
	ptrcast.64  %r375 <- (64) %r374
	store.64    %r375 -> 16[%arg1]
	load.64     %r379 <- -16[%r375]
	add.64      %r381 <- %r379, $24
	ptrcast.64  %r382 <- (64) %r381
	ret.64      %r382


luaO_pushfstring:
.L96:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	symaddr.64  %r384 <- fmt
	cast.64     %r385 <- (64) %r384
	call.64     %r389 <- luaO_pushvfstring, %arg1, %arg2, %r385
	ret.64      %r389


luaO_chunkid:
.L98:
	<entry-point>
	load.8      %r393 <- 0[%arg2]
	scast.32    %r394 <- (8) %r393
	seteq.32    %r395 <- %r394, $61
	br          %r395, .L99, .L100

.L99:
	add.64      %r398 <- %arg2, $1
	call.64     %r400 <- strncpy, %arg1, %r398, %arg3
	add.64      %r403 <- %arg3, $-1
	add.64      %r404 <- %arg1, %r403
	store.8     $0 -> 0[%r404]
	br          .L101

.L100:
	scast.32    %r407 <- (8) %r393
	seteq.32    %r408 <- %r407, $64
	br          %r408, .L102, .L103

.L102:
	add.64      %r410 <- %arg2, $1
	add.64      %r413 <- %arg3, $-8
	call.64     %r416 <- strlen, %r410
	symaddr.64  %r418 <- <anon symbol:0x62d00114ae20>
	call.64     %r419 <- strcpy, %arg1, %r418
	seta.32     %r422 <- %r416, %r413
	phisrc.64   %phi110(source) <- %r410
	br          %r422, .L104, .L105

.L104:
	sub.64      %r425 <- %r416, %r413
	cast.64     %r427 <- (64) %r410
	add.64      %r428 <- %r427, %r425
	ptrcast.64  %r429 <- (64) %r428
	symaddr.64  %r431 <- <anon symbol:0x62d00114b1c0>
	call.64     %r432 <- strcat, %arg1, %r431
	phisrc.64   %phi111(source) <- %r429
	br          .L105

.L105:
	phi.64      %r434 <- %phi110(source), %phi111(source)
	call.64     %r435 <- strcat, %arg1, %r434
	br          .L101

.L103:
	symaddr.64  %r437 <- <anon symbol:0x62d00114b560>
	call.64     %r438 <- strcspn, %arg2, %r437
	add.64      %r441 <- %arg3, $-17
	seta.32     %r445 <- %r438, %r441
	select.64   %r451(len) <- %r445, %r441, %r438
	symaddr.64  %r448 <- <anon symbol:0x62d00114bad0>
	call.64     %r449 <- strcpy, %arg1, %r448
	add.64      %r452 <- %arg2, %r451(len)
	load.8      %r453 <- 0[%r452]
	br          %r453, .L109, .L110

.L109:
	call.64     %r459 <- strncat, %arg1, %arg2, %r451(len)
	symaddr.64  %r461 <- <anon symbol:0x62d00114bf58>
	call.64     %r462 <- strcat, %arg1, %r461
	br          .L111

.L110:
	call.64     %r465 <- strcat, %arg1, %arg2
	br          .L111

.L111:
	symaddr.64  %r467 <- <anon symbol:0x62d00114c2f8>
	call.64     %r468 <- strcat, %arg1, %r467
	br          .L101

.L101:
	ret


luaT_init:
.L112:
	<entry-point>
	phisrc.32   %phi127(i) <- $0
	br          .L116

.L116:
	phi.32      %r469(i) <- %phi127(i), %phi128(i)
	setlt.32    %r470 <- %r469(i), $17
	br          %r470, .L113, .L115

.L113:
	symaddr.64  %r472 <- luaT_eventname
	scast.64    %r474 <- (32) %r469(i)
	muls.64     %r475 <- %r474, $8
	add.64      %r476 <- %r472, %r475
	load.64     %r477 <- 0[%r476]
	call.64     %r484 <- strlen, %r477
	call.64     %r485 <- luaS_newlstr, %arg1, %r477, %r484
	load.64     %r487 <- 32[%arg1]
	add.64      %r488 <- %r487, $296
	add.64      %r492 <- %r488, %r475
	store.64    %r485 -> 0[%r492]
	load.64     %r494 <- 32[%arg1]
	add.64      %r495 <- %r494, $296
	add.64      %r499 <- %r495, %r475
	load.64     %r500 <- 0[%r499]
	load.8      %r501 <- 9[%r500]
	cast.32     %r502 <- (8) %r501
	or.32       %r503 <- %r502, $32
	scast.8     %r504 <- (32) %r503
	store.8     %r504 -> 9[%r500]
	add.32      %r506 <- %r469(i), $1
	phisrc.32   %phi128(i) <- %r506
	br          .L116

.L115:
	ret


luaT_gettm:
.L117:
	<entry-point>
	call.64     %r509 <- luaH_getstr, %arg1, %arg3
	load.32     %r511 <- 8[%r509]
	select.64   %r524 <- %r511, %r509, $0
	br          %r511, .L120, .L118

.L118:
	shl.32      %r516 <- $1, %arg2
	cast.8      %r517 <- (32) %r516
	cast.32     %r518 <- (8) %r517
	load.8      %r520 <- 10[%arg1]
	cast.32     %r521 <- (8) %r520
	or.32       %r522 <- %r521, %r518
	scast.8     %r523 <- (32) %r522
	store.8     %r523 -> 10[%arg1]
	br          .L120

.L120:
	ret.64      %r524


luaT_gettmbyobj:
.L122:
	<entry-point>
	load.32     %r527 <- 8[%arg2]
	switch      %r527, 5 -> .L124, 7 -> .L125, default -> .L126

.L124:
	load.64     %r529 <- 0[%arg2]
	load.64     %r530(mt) <- 16[%r529]
	phisrc.64   %phi135(mt) <- %r530(mt)
	br          .L123

.L125:
	load.64     %r532 <- 0[%arg2]
	load.64     %r533 <- 16[%r532]
	phisrc.64   %phi136(mt) <- %r533
	br          .L123

.L126:
	load.64     %r535 <- 32[%arg1]
	add.64      %r536 <- %r535, $224
	scast.64    %r539 <- (32) %r527
	muls.64     %r540 <- %r539, $8
	add.64      %r541 <- %r536, %r540
	load.64     %r542 <- 0[%r541]
	phisrc.64   %phi137(mt) <- %r542
	br          .L123

.L123:
	phi.64      %r543(mt) <- %phi135(mt), %phi136(mt), %phi137(mt)
	br          %r543(mt), .L128, .L129

.L128:
	load.64     %r546 <- 32[%arg1]
	add.64      %r547 <- %r546, $296
	scast.64    %r549 <- (32) %arg3
	muls.64     %r550 <- %r549, $8
	add.64      %r551 <- %r547, %r550
	load.64     %r552 <- 0[%r551]
	call.64     %r553 <- luaH_getstr, %r543(mt), %r552
	phisrc.64   %phi131 <- %r553
	br          .L130

.L129:
	symaddr.64  %r554 <- luaO_nilobject_
	ptrcast.64  %r555 <- (64) %r554
	phisrc.64   %phi132 <- %r555
	br          .L130

.L130:
	phi.64      %r556 <- %phi131, %phi132
	ret.64      %r556


luaF_newCclosure:
.L131:
	<entry-point>
	add.32      %r560 <- %arg2, $-1
	scast.64    %r561 <- (32) %r560
	mulu.64     %r562 <- %r561, $16
	cast.32     %r563 <- (64) %r562
	add.32      %r564 <- %r563, $56
	scast.64    %r565 <- (32) %r564
	call.64     %r566 <- luaM_realloc_, %arg1, $0, $0, %r565
	ptrcast.64  %r567 <- (64) %r566
	ptrcast.64  %r570 <- (64) %r567
	call        luaC_link, %arg1, %r570, $6
	store.8     $1 -> 10[%r567]
	store.64    %arg3 -> 24[%r567]
	scast.8     %r575 <- (32) %arg2
	store.8     %r575 -> 11[%r567]
	ret.64      %r567


luaF_newLclosure:
.L133:
	<entry-point>
	add.32      %r581 <- %arg2, $-1
	scast.64    %r582 <- (32) %r581
	mulu.64     %r583 <- %r582, $8
	cast.32     %r584 <- (64) %r583
	add.32      %r585 <- %r584, $48
	scast.64    %r586 <- (32) %r585
	call.64     %r587 <- luaM_realloc_, %arg1, $0, $0, %r586
	ptrcast.64  %r588 <- (64) %r587
	ptrcast.64  %r591 <- (64) %r588
	call        luaC_link, %arg1, %r591, $6
	store.8     $0 -> 10[%r588]
	store.64    %arg3 -> 24[%r588]
	scast.8     %r596 <- (32) %arg2
	store.8     %r596 -> 11[%r588]
	phisrc.32   %phi142(nelems) <- %arg2
	br          .L137

.L137:
	phi.32      %r598 <- %phi142(nelems), %phi143(nelems)
	add.32      %r599(nelems) <- %r598, $-1
	phisrc.32   %phi143(nelems) <- %r599(nelems)
	br          %r598, .L134, .L138

.L134:
	add.64      %r602 <- %r588, $40
	scast.64    %r604 <- (32) %r599(nelems)
	muls.64     %r605 <- %r604, $8
	add.64      %r606 <- %r602, %r605
	store.64    $0 -> 0[%r606]
	br          .L137

.L138:
	ret.64      %r588


luaF_newupval:
.L139:
	<entry-point>
	call.64     %r610 <- luaM_realloc_, %arg1, $0, $0, $40
	ptrcast.64  %r611 <- (64) %r610
	ptrcast.64  %r614 <- (64) %r611
	call        luaC_link, %arg1, %r614, $10
	add.64      %r616 <- %r611, $24
	store.64    %r616 -> 16[%r611]
	store.32    $0 -> 32[%r611]
	ret.64      %r611


luaF_findupval:
.L141:
	<entry-point>
	load.64     %r624 <- 32[%arg1]
	add.64      %r626(pp) <- %arg1, $152
	phisrc.64   %phi150(pp) <- %r626(pp)
	br          .L145

.L145:
	phi.64      %r627(pp) <- %phi150(pp), %phi151(pp)
	load.64     %r628 <- 0[%r627(pp)]
	br          %r628, .L146, .L144

.L146:
	load.64     %r633 <- 16[%r628]
	setae.32    %r635 <- %r633, %arg2
	br          %r635, .L142, .L144

.L142:
	seteq.32    %r639 <- %r633, %arg2
	br          %r639, .L147, .L148

.L147:
	ptrcast.64  %r641 <- (64) %r628
	load.8      %r642 <- 9[%r641]
	cast.32     %r643 <- (8) %r642
	load.8      %r645 <- 32[%r624]
	cast.32     %r646 <- (8) %r645
	xor.32      %r647 <- %r646, $3
	and.32      %r648 <- %r643, %r647
	and.32      %r649 <- %r648, $3
	br          %r649, .L149, .L150

.L149:
	xor.32      %r654 <- %r643, $3
	scast.8     %r655 <- (32) %r654
	store.8     %r655 -> 9[%r641]
	br          .L150

.L150:
	phisrc.64   %phi145(return) <- %r628
	br          .L151

.L148:
	phisrc.64   %phi151(pp) <- %r628
	br          .L145

.L144:
	call.64     %r661 <- luaM_realloc_, %arg1, $0, $0, $40
	ptrcast.64  %r662 <- (64) %r661
	store.8     $10 -> 8[%r662]
	load.8      %r665 <- 32[%r624]
	cast.32     %r666 <- (8) %r665
	and.32      %r667 <- %r666, $3
	store.8     %r667 -> 9[%r662]
	store.64    %arg2 -> 16[%r662]
	load.64     %r673 <- 0[%r627(pp)]
	store.64    %r673 -> 0[%r662]
	ptrcast.64  %r676 <- (64) %r662
	store.64    %r676 -> 0[%r627(pp)]
	add.64      %r679 <- %r624, $184
	store.64    %r679 -> 24[%r662]
	load.64     %r682 <- 216[%r624]
	store.64    %r682 -> 32[%r662]
	store.64    %r662 -> 24[%r682]
	store.64    %r662 -> 216[%r624]
	phisrc.64   %phi146(return) <- %r662
	br          .L151

.L151:
	phi.64      %r657 <- %phi145(return), %phi146(return)
	ret.64      %r657


unlinkupval:
.L152:
	<entry-point>
	load.64     %r691 <- 24[%arg1]
	load.64     %r693 <- 32[%arg1]
	store.64    %r691 -> 24[%r693]
	load.64     %r695 <- 32[%arg1]
	load.64     %r697 <- 24[%arg1]
	store.64    %r695 -> 32[%r697]
	ret


luaF_freeupval:
.L154:
	<entry-point>
	load.64     %r699 <- 16[%arg2]
	add.64      %r701 <- %arg2, $24
	setne.32    %r703 <- %r699, %r701
	br          %r703, .L155, .L156

.L155:
	call        unlinkupval, %arg2
	br          .L156

.L156:
	cast.64     %r707 <- (64) %arg2
	call.64     %r708 <- luaM_realloc_, %arg1, %r707, $40, $0
	ret


luaF_close:
.L158:
	<entry-point>
	load.64     %r710 <- 32[%arg1]
	br          .L162

.L162:
	load.64     %r712 <- 152[%arg1]
	br          %r712, .L163, .L161

.L163:
	load.64     %r717 <- 16[%r712]
	setae.32    %r719 <- %r717, %arg2
	br          %r719, .L159, .L161

.L159:
	ptrcast.64  %r721 <- (64) %r712
	load.64     %r723 <- 0[%r712]
	store.64    %r723 -> 152[%arg1]
	load.8      %r726 <- 9[%r721]
	cast.32     %r727 <- (8) %r726
	load.8      %r729 <- 32[%r710]
	cast.32     %r730 <- (8) %r729
	xor.32      %r731 <- %r730, $3
	and.32      %r732 <- %r727, %r731
	and.32      %r733 <- %r732, $3
	br          %r733, .L164, .L165

.L164:
	call        luaF_freeupval, %arg1, %r712
	br          .L162

.L165:
	call        unlinkupval, %r712
	load.64     %r738 <- 16[%r712]
	load.64     %r743 <- 0[%r738]
	store.64    %r743 -> 24[%r712]
	load.32     %r746 <- 8[%r738]
	store.32    %r746 -> 32[%r712]
	add.64      %r750 <- %r712, $24
	store.64    %r750 -> 16[%r712]
	call        luaC_linkupval, %arg1, %r712
	br          .L162

.L161:
	ret


luaF_newproto:
.L167:
	<entry-point>
	call.64     %r756 <- luaM_realloc_, %arg1, $0, $0, $120
	ptrcast.64  %r757 <- (64) %r756
	ptrcast.64  %r760 <- (64) %r757
	call        luaC_link, %arg1, %r760, $9
	store.64    $0 -> 16[%r757]
	store.32    $0 -> 76[%r757]
	store.64    $0 -> 32[%r757]
	store.32    $0 -> 88[%r757]
	store.64    $0 -> 24[%r757]
	store.32    $0 -> 80[%r757]
	store.32    $0 -> 84[%r757]
	store.32    $0 -> 72[%r757]
	store.8     $0 -> 112[%r757]
	store.64    $0 -> 56[%r757]
	store.8     $0 -> 113[%r757]
	store.8     $0 -> 114[%r757]
	store.8     $0 -> 115[%r757]
	store.64    $0 -> 40[%r757]
	store.32    $0 -> 92[%r757]
	store.64    $0 -> 48[%r757]
	store.32    $0 -> 96[%r757]
	store.32    $0 -> 100[%r757]
	store.64    $0 -> 64[%r757]
	ret.64      %r757


luaF_freeproto:
.L169:
	<entry-point>
	load.64     %r784 <- 24[%arg2]
	cast.64     %r785 <- (64) %r784
	load.32     %r787 <- 80[%arg2]
	scast.64    %r788 <- (32) %r787
	mulu.64     %r789 <- %r788, $4
	call.64     %r790 <- luaM_realloc_, %arg1, %r785, %r789, $0
	load.64     %r793 <- 32[%arg2]
	cast.64     %r794 <- (64) %r793
	load.32     %r796 <- 88[%arg2]
	scast.64    %r797 <- (32) %r796
	mulu.64     %r798 <- %r797, $8
	call.64     %r799 <- luaM_realloc_, %arg1, %r794, %r798, $0
	load.64     %r802 <- 16[%arg2]
	cast.64     %r803 <- (64) %r802
	load.32     %r805 <- 76[%arg2]
	scast.64    %r806 <- (32) %r805
	mulu.64     %r807 <- %r806, $16
	call.64     %r808 <- luaM_realloc_, %arg1, %r803, %r807, $0
	load.64     %r811 <- 40[%arg2]
	cast.64     %r812 <- (64) %r811
	load.32     %r814 <- 84[%arg2]
	scast.64    %r815 <- (32) %r814
	mulu.64     %r816 <- %r815, $4
	call.64     %r817 <- luaM_realloc_, %arg1, %r812, %r816, $0
	load.64     %r820 <- 48[%arg2]
	cast.64     %r821 <- (64) %r820
	load.32     %r823 <- 92[%arg2]
	scast.64    %r824 <- (32) %r823
	mulu.64     %r825 <- %r824, $16
	call.64     %r826 <- luaM_realloc_, %arg1, %r821, %r825, $0
	load.64     %r829 <- 56[%arg2]
	cast.64     %r830 <- (64) %r829
	load.32     %r832 <- 72[%arg2]
	scast.64    %r833 <- (32) %r832
	mulu.64     %r834 <- %r833, $8
	call.64     %r835 <- luaM_realloc_, %arg1, %r830, %r834, $0
	cast.64     %r838 <- (64) %arg2
	call.64     %r839 <- luaM_realloc_, %arg1, %r838, $120, $0
	ret


luaF_freeclosure:
.L171:
	<entry-point>
	load.8      %r841 <- 10[%arg2]
	br          %r841, .L172, .L173

.L172:
	load.8      %r843 <- 11[%arg2]
	cast.32     %r844 <- (8) %r843
	add.32      %r845 <- %r844, $-1
	scast.64    %r846 <- (32) %r845
	mulu.64     %r847 <- %r846, $16
	cast.32     %r848 <- (64) %r847
	add.32      %r849 <- %r848, $56
	phisrc.32   %phi157 <- %r849
	br          .L174

.L173:
	load.8      %r851 <- 11[%arg2]
	cast.32     %r852 <- (8) %r851
	add.32      %r853 <- %r852, $-1
	scast.64    %r854 <- (32) %r853
	mulu.64     %r855 <- %r854, $8
	cast.32     %r856 <- (64) %r855
	add.32      %r857 <- %r856, $48
	phisrc.32   %phi158 <- %r857
	br          .L174

.L174:
	phi.32      %r858 <- %phi157, %phi158
	cast.64     %r861 <- (64) %arg2
	scast.64    %r863 <- (32) %r858
	call.64     %r864 <- luaM_realloc_, %arg1, %r861, %r863, $0
	ret


luaD_seterrorobj:
.L176:
	<entry-point>
	switch      %arg2, 2 -> .L181, 3 -> .L181, 4 -> .L178, 5 -> .L179, default -> .L177

.L178:
	symaddr.64  %r868 <- <anon symbol:0x62d001179e18>
	call.64     %r869 <- luaS_newlstr, %arg1, %r868, $17
	ptrcast.64  %r870 <- (64) %r869
	store.64    %r870 -> 0[%arg3]
	store.32    $4 -> 8[%arg3]
	br          .L177

.L179:
	symaddr.64  %r875 <- <anon symbol:0x62d00117a728>
	call.64     %r876 <- luaS_newlstr, %arg1, %r875, $23
	ptrcast.64  %r877 <- (64) %r876
	store.64    %r877 -> 0[%arg3]
	store.32    $4 -> 8[%arg3]
	br          .L177

.L181:
	load.64     %r881 <- 16[%arg1]
	load.64     %r885 <- -16[%r881]
	store.64    %r885 -> 0[%arg3]
	load.32     %r888 <- -8[%r881]
	store.32    %r888 -> 8[%arg3]
	br          .L177

.L177:
	add.64      %r892 <- %arg3, $16
	store.64    %r892 -> 16[%arg1]
	ret


restore_stack_limit:
.L183:
	<entry-point>
	load.32     %r895 <- 92[%arg1]
	setgt.32    %r896 <- %r895, $0x4e20
	br          %r896, .L184, .L185

.L184:
	load.64     %r898 <- 40[%arg1]
	load.64     %r900 <- 80[%arg1]
	sub.64      %r901 <- %r898, %r900
	divs.64     %r902 <- %r901, $40
	scast.32    %r903 <- (64) %r902
	add.32      %r905 <- %r903, $1
	setlt.32    %r906 <- %r905, $0x4e20
	br          %r906, .L186, .L185

.L186:
	call        luaD_reallocCI, %arg1, $0x4e20
	br          .L185

.L185:
	ret


resetstack:
.L188:
	<entry-point>
	load.64     %r909 <- 80[%arg1]
	store.64    %r909 -> 40[%arg1]
	load.64     %r913 <- 0[%r909]
	store.64    %r913 -> 24[%arg1]
	call        luaF_close, %arg1, %r913
	load.64     %r921 <- 24[%arg1]
	call        luaD_seterrorobj, %arg1, %arg2, %r921
	load.16     %r923 <- 98[%arg1]
	store.16    %r923 -> 96[%arg1]
	store.8     $1 -> 101[%arg1]
	call        restore_stack_limit, %arg1
	store.64    $0 -> 176[%arg1]
	store.64    $0 -> 168[%arg1]
	ret


luaD_throw:
.L190:
	<entry-point>
	load.64     %r930 <- 168[%arg1]
	br          %r930, .L191, .L192

.L191:
	store.32    %arg2 -> 208[%r930]
	load.64     %r936 <- 168[%arg1]
	add.64      %r937 <- %r936, $8
	call        longjmp, %r937, $1
	br          .L193

.L192:
	scast.8     %r939 <- (32) %arg2
	store.8     %r939 -> 10[%arg1]
	load.64     %r942 <- 32[%arg1]
	load.64     %r943 <- 152[%r942]
	br          %r943, .L194, .L195

.L194:
	call        resetstack, %arg1, %arg2
	load.64     %r948 <- 32[%arg1]
	load.64     %r949 <- 152[%r948]
	call.32     %r950 <- %r949, %arg1
	br          .L195

.L195:
	call        exit, $1
	br          .L193

.L193:
	ret


luaD_rawrunprotected:
.L196:
	<entry-point>
	store.32    $0 -> 208[lj]
	load.64     %r952 <- 168[%arg1]
	store.64    %r952 -> 0[lj]
	symaddr.64  %r953 <- lj
	store.64    %r953 -> 168[%arg1]
	add.64      %r956 <- %r953, $8
	call.32     %r957 <- _setjmp, %r956
	br          %r957, .L198, .L197

.L197:
	call        %arg2, %arg1, %arg3
	br          .L198

.L198:
	load.64     %r962 <- 0[lj]
	store.64    %r962 -> 168[%arg1]
	load.32     %r964 <- 208[lj]
	ret.32      %r964


correctstack:
.L200:
	<entry-point>
	load.64     %r968 <- 64[%arg1]
	load.64     %r970 <- 16[%arg1]
	sub.64      %r972 <- %r970, %arg2
	divs.64     %r973 <- %r972, $16
	muls.64     %r974 <- %r973, $16
	add.64      %r975 <- %r968, %r974
	store.64    %r975 -> 16[%arg1]
	load.64     %r978(up) <- 152[%arg1]
	phisrc.64   %phi163(up) <- %r978(up)
	phisrc.64   %phi169 <- %r968
	phisrc.64   %phi170 <- %r968
	phisrc.64   %phi171 <- %r968
	phisrc.64   %phi172 <- %r968
	phisrc.64   %phi173 <- %r968
	phisrc.64   %phi174 <- %r968
	br          .L204

.L204:
	phi.64      %r979(up) <- %phi163(up), %phi164(up)
	br          %r979(up), .L201, .L203

.L201:
	load.64     %r982 <- 64[%arg1]
	load.64     %r984 <- 16[%r979(up)]
	sub.64      %r986 <- %r984, %arg2
	divs.64     %r987 <- %r986, $16
	muls.64     %r988 <- %r987, $16
	add.64      %r989 <- %r982, %r988
	store.64    %r989 -> 16[%r979(up)]
	load.64     %r992 <- 0[%r979(up)]
	phisrc.64   %phi164(up) <- %r992
	br          .L204

.L203:
	load.64     %r994(ci) <- 80[%arg1]
	phisrc.64   %phi167(ci) <- %r994(ci)
	br          .L208

.L208:
	phi.64      %r995(ci) <- %phi167(ci), %phi168(ci)
	load.64     %r997 <- 40[%arg1]
	setbe.32    %r998 <- %r995(ci), %r997
	br          %r998, .L205, .L207

.L205:
	load.64     %r1000 <- 64[%arg1]
	load.64     %r1002 <- 16[%r995(ci)]
	sub.64      %r1004 <- %r1002, %arg2
	divs.64     %r1005 <- %r1004, $16
	muls.64     %r1006 <- %r1005, $16
	add.64      %r1007 <- %r1000, %r1006
	store.64    %r1007 -> 16[%r995(ci)]
	load.64     %r1010 <- 64[%arg1]
	load.64     %r1012 <- 0[%r995(ci)]
	sub.64      %r1014 <- %r1012, %arg2
	divs.64     %r1015 <- %r1014, $16
	muls.64     %r1016 <- %r1015, $16
	add.64      %r1017 <- %r1010, %r1016
	store.64    %r1017 -> 0[%r995(ci)]
	load.64     %r1020 <- 64[%arg1]
	load.64     %r1022 <- 8[%r995(ci)]
	sub.64      %r1024 <- %r1022, %arg2
	divs.64     %r1025 <- %r1024, $16
	muls.64     %r1026 <- %r1025, $16
	add.64      %r1027 <- %r1020, %r1026
	store.64    %r1027 -> 8[%r995(ci)]
	add.64      %r1030 <- %r995(ci), $40
	phisrc.64   %phi168(ci) <- %r1030
	br          .L208

.L207:
	load.64     %r1032 <- 64[%arg1]
	load.64     %r1034 <- 24[%arg1]
	sub.64      %r1036 <- %r1034, %arg2
	divs.64     %r1037 <- %r1036, $16
	muls.64     %r1038 <- %r1037, $16
	add.64      %r1039 <- %r1032, %r1038
	store.64    %r1039 -> 24[%arg1]
	ret


luaD_reallocstack:
.L210:
	<entry-point>
	load.64     %r1042 <- 64[%arg1]
	add.32      %r1045 <- %arg2, $6
	add.32      %r1047 <- %r1045, $1
	scast.64    %r1048 <- (32) %r1047
	setbe.32    %r1049 <- %r1048, $0xfffffffffffffff
	br          %r1049, .L211, .L212

.L211:
	cast.64     %r1053 <- (64) %r1042
	load.32     %r1055 <- 88[%arg1]
	scast.64    %r1056 <- (32) %r1055
	mulu.64     %r1057 <- %r1056, $16
	scast.64    %r1059 <- (32) %r1045
	mulu.64     %r1060 <- %r1059, $16
	call.64     %r1061 <- luaM_realloc_, %arg1, %r1053, %r1057, %r1060
	phisrc.64   %phi175 <- %r1061
	br          .L213

.L212:
	call.64     %r1063 <- luaM_toobig, %arg1
	cast.64     %r1064 <- (64) %r1063
	phisrc.64   %phi176 <- %r1064
	br          .L213

.L213:
	phi.64      %r1065 <- %phi175, %phi176
	ptrcast.64  %r1066 <- (64) %r1065
	store.64    %r1066 -> 64[%arg1]
	store.32    %r1045 -> 88[%arg1]
	scast.64    %r1073 <- (32) %arg2
	muls.64     %r1074 <- %r1073, $16
	add.64      %r1075 <- %r1066, %r1074
	store.64    %r1075 -> 56[%arg1]
	call        correctstack, %arg1, %r1042
	ret


luaD_reallocCI:
.L215:
	<entry-point>
	load.64     %r1080 <- 80[%arg1]
	add.32      %r1082 <- %arg2, $1
	scast.64    %r1083 <- (32) %r1082
	setbe.32    %r1084 <- %r1083, $0x666666666666666
	br          %r1084, .L216, .L217

.L216:
	cast.64     %r1088 <- (64) %r1080
	load.32     %r1090 <- 92[%arg1]
	scast.64    %r1091 <- (32) %r1090
	mulu.64     %r1092 <- %r1091, $40
	scast.64    %r1094 <- (32) %arg2
	mulu.64     %r1095 <- %r1094, $40
	call.64     %r1096 <- luaM_realloc_, %arg1, %r1088, %r1092, %r1095
	phisrc.64   %phi178 <- %r1096
	br          .L218

.L217:
	call.64     %r1098 <- luaM_toobig, %arg1
	cast.64     %r1099 <- (64) %r1098
	phisrc.64   %phi179 <- %r1099
	br          .L218

.L218:
	phi.64      %r1100 <- %phi178, %phi179
	ptrcast.64  %r1101 <- (64) %r1100
	store.64    %r1101 -> 80[%arg1]
	store.32    %arg2 -> 92[%arg1]
	load.64     %r1108 <- 40[%arg1]
	sub.64      %r1110 <- %r1108, %r1080
	divs.64     %r1111 <- %r1110, $40
	muls.64     %r1112 <- %r1111, $40
	add.64      %r1113 <- %r1101, %r1112
	store.64    %r1113 -> 40[%arg1]
	scast.64    %r1119 <- (32) %arg2
	muls.64     %r1120 <- %r1119, $40
	add.64      %r1121 <- %r1101, %r1120
	add.64      %r1122 <- %r1121, $-40
	store.64    %r1122 -> 72[%arg1]
	ret


luaD_growstack:
.L220:
	<entry-point>
	load.32     %r1126 <- 88[%arg1]
	setle.32    %r1127 <- %arg2, %r1126
	br          %r1127, .L221, .L222

.L221:
	muls.32     %r1131 <- %r1126, $2
	call        luaD_reallocstack, %arg1, %r1131
	br          .L223

.L222:
	add.32      %r1136 <- %r1126, %arg2
	call        luaD_reallocstack, %arg1, %r1136
	br          .L223

.L223:
	ret


growCI:
.L224:
	<entry-point>
	load.32     %r1138 <- 92[%arg1]
	setgt.32    %r1139 <- %r1138, $0x4e20
	br          %r1139, .L225, .L226

.L225:
	call        luaD_throw, %arg1, $5
	br          .L227

.L226:
	muls.32     %r1144 <- %r1138, $2
	call        luaD_reallocCI, %arg1, %r1144
	load.32     %r1146 <- 92[%arg1]
	setgt.32    %r1147 <- %r1146, $0x4e20
	br          %r1147, .L228, .L227

.L228:
	symaddr.64  %r1149 <- <anon symbol:0x62d001182030>
	call        luaG_runerror, %arg1, %r1149
	br          .L227

.L227:
	load.64     %r1151 <- 40[%arg1]
	add.64      %r1152 <- %r1151, $40
	store.64    %r1152 -> 40[%arg1]
	ret.64      %r1152


adjust_varargs:
.L231:
	<entry-point>
	load.8      %r1155 <- 113[%arg2]
	cast.32     %r1156 <- (8) %r1155
	phisrc.32   %phi188(actual) <- %arg3
	br          .L235

.L235:
	phi.32      %r1157(actual) <- %phi188(actual), %phi189(actual)
	setlt.32    %r1159 <- %r1157(actual), %r1156
	br          %r1159, .L232, .L234

.L232:
	load.64     %r1161 <- 16[%arg1]
	add.64      %r1162 <- %r1161, $16
	store.64    %r1162 -> 16[%arg1]
	store.32    $0 -> 8[%r1161]
	add.32      %r1164 <- %r1157(actual), $1
	phisrc.32   %phi189(actual) <- %r1164
	br          .L235

.L234:
	load.64     %r1166 <- 16[%arg1]
	scast.64    %r1168 <- (32) %r1157(actual)
	muls.64     %r1169 <- %r1168, $16
	sub.64      %r1170 <- %r1166, %r1169
	phisrc.32   %phi192(i) <- $0
	phisrc.64   %phi194 <- %r1166
	phisrc.64   %phi195 <- %r1166
	br          .L239

.L239:
	phi.32      %r1173(i) <- %phi192(i), %phi193(i)
	setlt.32    %r1175 <- %r1173(i), %r1156
	br          %r1175, .L236, .L242

.L236:
	scast.64    %r1178 <- (32) %r1173(i)
	muls.64     %r1179 <- %r1178, $16
	add.64      %r1180 <- %r1170, %r1179
	load.64     %r1182 <- 16[%arg1]
	add.64      %r1183 <- %r1182, $16
	store.64    %r1183 -> 16[%arg1]
	load.64     %r1185 <- 0[%r1180]
	store.64    %r1185 -> 0[%r1182]
	load.32     %r1188 <- 8[%r1180]
	store.32    %r1188 -> 8[%r1182]
	store.32    $0 -> 8[%r1180]
	add.32      %r1197 <- %r1173(i), $1
	phisrc.32   %phi193(i) <- %r1197
	br          .L239

.L242:
	ret.64      %r1166


tryfuncTM:
.L243:
	<entry-point>
	call.64     %r1207 <- luaT_gettmbyobj, %arg1, %arg2, $16
	ptrcast.64  %r1209 <- (64) %arg2
	load.64     %r1211 <- 64[%arg1]
	ptrcast.64  %r1212 <- (64) %r1211
	sub.64      %r1213 <- %r1209, %r1212
	load.32     %r1215 <- 8[%r1207]
	seteq.32    %r1217 <- %r1215, $6
	br          %r1217, .L245, .L244

.L244:
	symaddr.64  %r1220 <- <anon symbol:0x62d001183b60>
	call        luaG_typeerror, %arg1, %arg2, %r1220
	br          .L245

.L245:
	load.64     %r1222(p) <- 16[%arg1]
	phisrc.64   %phi202(p) <- %r1222(p)
	phisrc.64   %phi204(p) <- %r1222(p)
	phisrc.64   %phi205(p) <- %r1222(p)
	phisrc.64   %phi206(p) <- %r1222(p)
	br          .L249

.L249:
	phi.64      %r1223(p) <- %phi202(p), %phi203(p)
	seta.32     %r1225 <- %r1223(p), %arg2
	br          %r1225, .L246, .L248

.L246:
	load.64     %r1230 <- -16[%r1223(p)]
	store.64    %r1230 -> 0[%r1223(p)]
	load.32     %r1233 <- -8[%r1223(p)]
	store.32    %r1233 -> 8[%r1223(p)]
	add.64      %r1237 <- %r1223(p), $-16
	phisrc.64   %phi203(p) <- %r1237
	br          .L249

.L248:
	load.64     %r1239 <- 56[%arg1]
	ptrcast.64  %r1240 <- (64) %r1239
	load.64     %r1242 <- 16[%arg1]
	ptrcast.64  %r1243 <- (64) %r1242
	sub.64      %r1244 <- %r1240, %r1243
	setle.32    %r1245 <- %r1244, $16
	br          %r1245, .L250, .L252

.L250:
	call        luaD_growstack, %arg1, $1
	br          .L252

.L252:
	load.64     %r1248 <- 16[%arg1]
	add.64      %r1249 <- %r1248, $16
	store.64    %r1249 -> 16[%arg1]
	load.64     %r1251 <- 64[%arg1]
	ptrcast.64  %r1252 <- (64) %r1251
	add.64      %r1254 <- %r1252, %r1213
	ptrcast.64  %r1255 <- (64) %r1254
	load.64     %r1259 <- 0[%r1207]
	store.64    %r1259 -> 0[%r1255]
	load.32     %r1262 <- 8[%r1207]
	store.32    %r1262 -> 8[%r1255]
	ret.64      %r1255


luaD_precall:
.L254:
	<entry-point>
	load.32     %r1268 <- 8[%arg2]
	seteq.32    %r1269 <- %r1268, $6
	phisrc.64   %phi218(func) <- %arg2
	br          %r1269, .L256, .L255

.L255:
	call.64     %r1272 <- tryfuncTM, %arg1, %arg2
	phisrc.64   %phi219(func) <- %r1272
	br          .L256

.L256:
	phi.64      %r1273 <- %phi218(func), %phi219(func)
	ptrcast.64  %r1274 <- (64) %r1273
	load.64     %r1276 <- 64[%arg1]
	ptrcast.64  %r1277 <- (64) %r1276
	sub.64      %r1278 <- %r1274, %r1277
	load.64     %r1280 <- 0[%r1273]
	load.64     %r1284 <- 48[%arg1]
	load.64     %r1286 <- 40[%arg1]
	store.64    %r1284 -> 24[%r1286]
	load.8      %r1288 <- 10[%r1280]
	br          %r1288, .L258, .L257

.L257:
	load.64     %r1290 <- 32[%r1280]
	load.64     %r1292 <- 56[%arg1]
	ptrcast.64  %r1293 <- (64) %r1292
	load.64     %r1295 <- 16[%arg1]
	ptrcast.64  %r1296 <- (64) %r1295
	sub.64      %r1297 <- %r1293, %r1296
	load.8      %r1299 <- 115[%r1290]
	cast.32     %r1300 <- (8) %r1299
	muls.32     %r1301 <- %r1300, $16
	scast.64    %r1302 <- (32) %r1301
	setle.32    %r1303 <- %r1297, %r1302
	br          %r1303, .L259, .L261

.L259:
	call        luaD_growstack, %arg1, %r1300
	br          .L261

.L261:
	load.64     %r1309 <- 64[%arg1]
	ptrcast.64  %r1310 <- (64) %r1309
	add.64      %r1312 <- %r1310, %r1278
	ptrcast.64  %r1313(func) <- (64) %r1312
	load.8      %r1315 <- 114[%r1290]
	br          %r1315, .L263, .L262

.L262:
	add.64      %r1317 <- %r1313(func), $16
	load.64     %r1319 <- 16[%arg1]
	load.8      %r1322 <- 113[%r1290]
	cast.64     %r1323 <- (8) %r1322
	muls.64     %r1324 <- %r1323, $16
	add.64      %r1325 <- %r1317, %r1324
	seta.32     %r1326 <- %r1319, %r1325
	phisrc.64   %phi214(func) <- %r1313(func)
	phisrc.64   %phi221(base) <- %r1317
	br          %r1326, .L264, .L266

.L264:
	store.64    %r1325 -> 16[%arg1]
	phisrc.64   %phi222(base) <- %r1317
	br          .L266

.L263:
	load.64     %r1335 <- 16[%arg1]
	sub.64      %r1337 <- %r1335, %r1313(func)
	divs.64     %r1338 <- %r1337, $16
	scast.32    %r1339 <- (64) %r1338
	add.32      %r1340 <- %r1339, $-1
	call.64     %r1344 <- adjust_varargs, %arg1, %r1290, %r1340
	load.64     %r1346 <- 64[%arg1]
	ptrcast.64  %r1347 <- (64) %r1346
	add.64      %r1349 <- %r1347, %r1278
	ptrcast.64  %r1350 <- (64) %r1349
	phisrc.64   %phi215(func) <- %r1350
	phisrc.64   %phi223(base) <- %r1344
	br          .L266

.L266:
	load.64     %r1352 <- 40[%arg1]
	load.64     %r1354 <- 72[%arg1]
	seteq.32    %r1355 <- %r1352, %r1354
	br          %r1355, .L267, .L268

.L267:
	call.64     %r1357 <- growCI, %arg1
	phisrc.64   %phi207 <- %r1357
	br          .L269

.L268:
	add.64      %r1360 <- %r1352, $40
	store.64    %r1360 -> 40[%arg1]
	ptrcast.64  %r1361 <- (64) %r1360
	phisrc.64   %phi208 <- %r1361
	br          .L269

.L269:
	phi.64      %r1362 <- %phi207, %phi208
	phi.64      %r1363 <- %phi214(func), %phi215(func)
	store.64    %r1363 -> 8[%r1362]
	phi.64      %r1365 <- %phi221(base), %phi222(base), %phi223(base)
	store.64    %r1365 -> 0[%r1362]
	store.64    %r1365 -> 24[%arg1]
	load.8      %r1371 <- 115[%r1290]
	cast.64     %r1372 <- (8) %r1371
	muls.64     %r1373 <- %r1372, $16
	add.64      %r1374 <- %r1365, %r1373
	store.64    %r1374 -> 16[%r1362]
	load.64     %r1377 <- 24[%r1290]
	store.64    %r1377 -> 48[%arg1]
	store.32    $0 -> 36[%r1362]
	store.32    %arg3 -> 32[%r1362]
	load.64     %r1383(st) <- 16[%arg1]
	phisrc.64   %phi227(st) <- %r1383(st)
	br          .L273

.L273:
	phi.64      %r1384(st) <- %phi227(st), %phi228(st)
	load.64     %r1386 <- 16[%r1362]
	setb.32     %r1387 <- %r1384(st), %r1386
	br          %r1387, .L270, .L272

.L270:
	store.32    $0 -> 8[%r1384(st)]
	add.64      %r1390 <- %r1384(st), $16
	phisrc.64   %phi228(st) <- %r1390
	br          .L273

.L272:
	store.64    %r1386 -> 16[%arg1]
	phisrc.32   %phi209(return) <- $0
	br          .L274

.L258:
	load.64     %r1396 <- 56[%arg1]
	ptrcast.64  %r1397 <- (64) %r1396
	load.64     %r1399 <- 16[%arg1]
	ptrcast.64  %r1400 <- (64) %r1399
	sub.64      %r1401 <- %r1397, %r1400
	setle.32    %r1402 <- %r1401, $320
	br          %r1402, .L276, .L278

.L276:
	call        luaD_growstack, %arg1, $20
	br          .L278

.L278:
	load.64     %r1405 <- 40[%arg1]
	load.64     %r1407 <- 72[%arg1]
	seteq.32    %r1408 <- %r1405, %r1407
	br          %r1408, .L279, .L280

.L279:
	call.64     %r1410 <- growCI, %arg1
	phisrc.64   %phi210 <- %r1410
	br          .L281

.L280:
	add.64      %r1413 <- %r1405, $40
	store.64    %r1413 -> 40[%arg1]
	ptrcast.64  %r1414 <- (64) %r1413
	phisrc.64   %phi211 <- %r1414
	br          .L281

.L281:
	phi.64      %r1415 <- %phi210, %phi211
	load.64     %r1417 <- 64[%arg1]
	ptrcast.64  %r1418 <- (64) %r1417
	add.64      %r1420 <- %r1418, %r1278
	ptrcast.64  %r1421 <- (64) %r1420
	store.64    %r1421 -> 8[%r1415]
	add.64      %r1425 <- %r1421, $16
	store.64    %r1425 -> 0[%r1415]
	store.64    %r1425 -> 24[%arg1]
	load.64     %r1429 <- 16[%arg1]
	add.64      %r1430 <- %r1429, $320
	store.64    %r1430 -> 16[%r1415]
	store.32    %arg3 -> 32[%r1415]
	load.64     %r1436 <- 40[%arg1]
	load.64     %r1437 <- 8[%r1436]
	load.64     %r1438 <- 0[%r1437]
	load.64     %r1439 <- 32[%r1438]
	call.32     %r1440 <- %r1439, %arg1
	setlt.32    %r1442 <- %r1440, $0
	br          %r1442, .L282, .L283

.L282:
	phisrc.32   %phi212(return) <- $2
	br          .L274

.L283:
	load.64     %r1445 <- 16[%arg1]
	scast.64    %r1447 <- (32) %r1440
	muls.64     %r1448 <- %r1447, $16
	sub.64      %r1449 <- %r1445, %r1448
	call.32     %r1450 <- luaD_poscall, %arg1, %r1449
	phisrc.32   %phi213(return) <- $1
	br          .L274

.L274:
	phi.32      %r1394 <- %phi209(return), %phi212(return), %phi213(return)
	ret.32      %r1394


luaD_poscall:
.L285:
	<entry-point>
	load.64     %r1452 <- 40[%arg1]
	add.64      %r1453 <- %r1452, $-40
	store.64    %r1453 -> 40[%arg1]
	load.64     %r1455(res) <- 8[%r1452]
	load.32     %r1457(i) <- 32[%r1452]
	load.64     %r1460 <- -40[%r1452]
	store.64    %r1460 -> 24[%arg1]
	load.64     %r1464 <- -16[%r1452]
	store.64    %r1464 -> 48[%arg1]
	phisrc.64   %phi236(firstResult) <- %arg2
	phisrc.64   %phi241(res) <- %r1455(res)
	phisrc.64   %phi244(res) <- %r1455(res)
	phisrc.32   %phi249(i) <- %r1457(i)
	br          .L289

.L289:
	phi.32      %r1467(i) <- %phi249(i), %phi250(i)
	phisrc.32   %phi246(i) <- %r1467(i)
	br          %r1467(i), .L290, .L294

.L290:
	phi.64      %r1469(firstResult) <- %phi236(firstResult), %phi237(firstResult)
	load.64     %r1471 <- 16[%arg1]
	setb.32     %r1472 <- %r1469(firstResult), %r1471
	br          %r1472, .L286, .L294

.L286:
	add.64      %r1474 <- %r1469(firstResult), $16
	phi.64      %r1475 <- %phi244(res), %phi245(res)
	add.64      %r1476 <- %r1475, $16
	load.64     %r1478 <- 0[%r1469(firstResult)]
	store.64    %r1478 -> 0[%r1475]
	load.32     %r1481 <- 8[%r1469(firstResult)]
	store.32    %r1481 -> 8[%r1475]
	phisrc.64   %phi237(firstResult) <- %r1474
	phisrc.64   %phi242(res) <- %r1476
	phisrc.64   %phi245(res) <- %r1476
	add.32      %r1485 <- %r1467(i), $-1
	phisrc.32   %phi250(i) <- %r1485
	br          .L289

.L294:
	phi.32      %r1486 <- %phi246(i), %phi247(i)
	add.32      %r1487 <- %r1486, $-1
	setgt.32    %r1488 <- %r1486, $0
	phisrc.32   %phi247(i) <- %r1487
	phi.64      %r1489 <- %phi241(res), %phi242(res), %phi243(res)
	br          %r1488, .L291, .L293

.L291:
	add.64      %r1490 <- %r1489, $16
	store.32    $0 -> 8[%r1489]
	phisrc.64   %phi243(res) <- %r1490
	br          .L294

.L293:
	store.64    %r1489 -> 16[%arg1]
	add.32      %r1494 <- %r1457(i), $0xffffffff00000001
	ret.32      %r1494


luaD_call:
.L296:
	<entry-point>
	load.16     %r1497 <- 96[%arg1]
	add.16      %r1498 <- %r1497, $1
	store.16    %r1498 -> 96[%arg1]
	cast.32     %r1499 <- (16) %r1498
	setge.32    %r1500 <- %r1499, $200
	br          %r1500, .L297, .L298

.L297:
	cast.32     %r1503 <- (16) %r1498
	seteq.32    %r1504 <- %r1503, $200
	br          %r1504, .L299, .L300

.L299:
	symaddr.64  %r1506 <- <anon symbol:0x62d0011aa2e8>
	call        luaG_runerror, %arg1, %r1506
	br          .L298

.L300:
	cast.32     %r1509 <- (16) %r1498
	setge.32    %r1510 <- %r1509, $225
	br          %r1510, .L302, .L298

.L302:
	call        luaD_throw, %arg1, $5
	br          .L298

.L298:
	call.32     %r1515 <- luaD_precall, %arg1, %arg2, %arg3
	br          %r1515, .L305, .L304

.L304:
	call        luaV_execute, %arg1, $1
	br          .L305

.L305:
	load.16     %r1519 <- 96[%arg1]
	add.16      %r1520 <- %r1519, $-1
	store.16    %r1520 -> 96[%arg1]
	load.64     %r1522 <- 32[%arg1]
	load.64     %r1523 <- 120[%r1522]
	load.64     %r1526 <- 112[%r1522]
	setae.32    %r1527 <- %r1523, %r1526
	br          %r1527, .L306, .L307

.L306:
	call        luaC_step, %arg1
	br          .L307

.L307:
	ret


luaD_pcall:
.L308:
	<entry-point>
	load.16     %r1530 <- 96[%arg1]
	load.64     %r1532 <- 40[%arg1]
	ptrcast.64  %r1533 <- (64) %r1532
	load.64     %r1535 <- 80[%arg1]
	ptrcast.64  %r1536 <- (64) %r1535
	sub.64      %r1537 <- %r1533, %r1536
	load.8      %r1539 <- 101[%arg1]
	load.64     %r1541 <- 176[%arg1]
	store.64    %arg5 -> 176[%arg1]
	call.32     %r1547 <- luaD_rawrunprotected, %arg1, %arg2, %arg3
	br          %r1547, .L309, .L310

.L309:
	load.64     %r1551 <- 64[%arg1]
	ptrcast.64  %r1552 <- (64) %r1551
	add.64      %r1554 <- %r1552, %arg4
	ptrcast.64  %r1555 <- (64) %r1554
	call        luaF_close, %arg1, %r1555
	call        luaD_seterrorobj, %arg1, %r1547, %r1555
	store.16    %r1530 -> 96[%arg1]
	load.64     %r1564 <- 80[%arg1]
	ptrcast.64  %r1565 <- (64) %r1564
	add.64      %r1567 <- %r1565, %r1537
	ptrcast.64  %r1568 <- (64) %r1567
	store.64    %r1568 -> 40[%arg1]
	load.64     %r1572 <- 0[%r1568]
	store.64    %r1572 -> 24[%arg1]
	load.64     %r1576 <- 24[%r1568]
	store.64    %r1576 -> 48[%arg1]
	store.8     %r1539 -> 101[%arg1]
	call        restore_stack_limit, %arg1
	br          .L310

.L310:
	store.64    %r1541 -> 176[%arg1]
	ret.32      %r1547


f_parser:
.L312:
	<entry-point>
	ptrcast.64  %r1586 <- (64) %arg2
	load.64     %r1588 <- 32[%arg1]
	load.64     %r1589 <- 120[%r1588]
	load.64     %r1592 <- 112[%r1588]
	setae.32    %r1593 <- %r1589, %r1592
	br          %r1593, .L313, .L314

.L313:
	call        luaC_step, %arg1
	br          .L314

.L314:
	load.64     %r1597 <- 0[%r1586]
	add.64      %r1599 <- %r1586, $8
	load.64     %r1601 <- 32[%r1586]
	call.64     %r1602 <- luaY_parser, %arg1, %r1597, %r1599, %r1601
	load.8      %r1605 <- 112[%r1602]
	cast.32     %r1606 <- (8) %r1605
	load.64     %r1608 <- 120[%arg1]
	call.64     %r1610 <- luaF_newLclosure, %arg1, %r1606, %r1608
	store.64    %r1602 -> 32[%r1610]
	phisrc.32   %phi256(i) <- $0
	br          .L318

.L318:
	phi.32      %r1613(i) <- %phi256(i), %phi257(i)
	load.8      %r1615 <- 112[%r1602]
	cast.32     %r1616 <- (8) %r1615
	setlt.32    %r1617 <- %r1613(i), %r1616
	br          %r1617, .L315, .L317

.L315:
	call.64     %r1619 <- luaF_newupval, %arg1
	add.64      %r1622 <- %r1610, $40
	scast.64    %r1624 <- (32) %r1613(i)
	muls.64     %r1625 <- %r1624, $8
	add.64      %r1626 <- %r1622, %r1625
	store.64    %r1619 -> 0[%r1626]
	add.32      %r1628 <- %r1613(i), $1
	phisrc.32   %phi257(i) <- %r1628
	br          .L318

.L317:
	load.64     %r1630 <- 16[%arg1]
	ptrcast.64  %r1632 <- (64) %r1610
	store.64    %r1632 -> 0[%r1630]
	store.32    $6 -> 8[%r1630]
	load.64     %r1636 <- 56[%arg1]
	ptrcast.64  %r1637 <- (64) %r1636
	load.64     %r1639 <- 16[%arg1]
	ptrcast.64  %r1640 <- (64) %r1639
	sub.64      %r1641 <- %r1637, %r1640
	setle.32    %r1642 <- %r1641, $16
	br          %r1642, .L319, .L321

.L319:
	call        luaD_growstack, %arg1, $1
	br          .L321

.L321:
	load.64     %r1645 <- 16[%arg1]
	add.64      %r1646 <- %r1645, $16
	store.64    %r1646 -> 16[%arg1]
	ret


luaD_protectedparser:
.L323:
	<entry-point>
	store.64    %arg2 -> 0[p]
	store.64    %arg3 -> 32[p]
	store.64    $0 -> 8[p]
	store.64    $0 -> 24[p]
	symaddr.64  %r1650 <- f_parser
	symaddr.64  %r1651 <- p
	cast.64     %r1652 <- (64) %r1651
	load.64     %r1654 <- 16[%arg1]
	ptrcast.64  %r1655 <- (64) %r1654
	load.64     %r1657 <- 64[%arg1]
	ptrcast.64  %r1658 <- (64) %r1657
	sub.64      %r1659 <- %r1655, %r1658
	load.64     %r1661 <- 176[%arg1]
	call.32     %r1662 <- luaD_pcall, %arg1, %r1650, %r1652, %r1659, %r1661
	load.64     %r1664 <- 8[p]
	cast.64     %r1665 <- (64) %r1664
	load.64     %r1666 <- 24[p]
	call.64     %r1668 <- luaM_realloc_, %arg1, %r1665, %r1666, $0
	ret.32      %r1662


luaS_resize:
.L325:
	<entry-point>
	load.64     %r1673 <- 32[%arg1]
	load.8      %r1674 <- 33[%r1673]
	cast.32     %r1675 <- (8) %r1674
	seteq.32    %r1676 <- %r1675, $2
	br          %r1676, .L328, .L327

.L327:
	add.32      %r1678 <- %arg2, $1
	scast.64    %r1679 <- (32) %r1678
	setbe.32    %r1680 <- %r1679, $0x1fffffffffffffff
	br          %r1680, .L329, .L330

.L329:
	scast.64    %r1683 <- (32) %arg2
	mulu.64     %r1684 <- %r1683, $8
	call.64     %r1685 <- luaM_realloc_, %arg1, $0, $0, %r1684
	phisrc.64   %phi259 <- %r1685
	br          .L331

.L330:
	call.64     %r1687 <- luaM_toobig, %arg1
	cast.64     %r1688 <- (64) %r1687
	phisrc.64   %phi260 <- %r1688
	br          .L331

.L331:
	phi.64      %r1689 <- %phi259, %phi260
	ptrcast.64  %r1690 <- (64) %r1689
	load.64     %r1692 <- 32[%arg1]
	phisrc.32   %phi267(i) <- $0
	br          .L335

.L335:
	phi.32      %r1694(i) <- %phi267(i), %phi268(i)
	setlt.32    %r1696 <- %r1694(i), %arg2
	br          %r1696, .L332, .L334

.L332:
	scast.64    %r1699 <- (32) %r1694(i)
	muls.64     %r1700 <- %r1699, $8
	add.64      %r1701 <- %r1690, %r1700
	store.64    $0 -> 0[%r1701]
	add.32      %r1703 <- %r1694(i), $1
	phisrc.32   %phi268(i) <- %r1703
	br          .L335

.L334:
	phisrc.32   %phi263(i) <- $0
	br          .L339

.L339:
	phi.32      %r1704(i) <- %phi263(i), %phi264(i)
	load.32     %r1706 <- 12[%r1692]
	setlt.32    %r1707 <- %r1704(i), %r1706
	br          %r1707, .L336, .L338

.L336:
	load.64     %r1709 <- 0[%r1692]
	scast.64    %r1711 <- (32) %r1704(i)
	muls.64     %r1712 <- %r1711, $8
	add.64      %r1713 <- %r1709, %r1712
	load.64     %r1714(p) <- 0[%r1713]
	phisrc.64   %phi270(p) <- %r1714(p)
	br          .L343

.L343:
	phi.64      %r1715(p) <- %phi270(p), %phi271(p)
	br          %r1715(p), .L340, .L337

.L340:
	load.64     %r1717 <- 0[%r1715(p)]
	load.32     %r1719 <- 12[%r1715(p)]
	add.32      %r1722 <- %arg2, $-1
	and.32      %r1724 <- %r1719, %r1722
	scast.64    %r1728 <- (32) %r1724
	muls.64     %r1729 <- %r1728, $8
	add.64      %r1730 <- %r1690, %r1729
	load.64     %r1731 <- 0[%r1730]
	store.64    %r1731 -> 0[%r1715(p)]
	store.64    %r1715(p) -> 0[%r1730]
	phisrc.64   %phi271(p) <- %r1717
	br          .L343

.L337:
	add.32      %r1741 <- %r1704(i), $1
	phisrc.32   %phi264(i) <- %r1741
	br          .L339

.L338:
	load.64     %r1744 <- 0[%r1692]
	cast.64     %r1745 <- (64) %r1744
	scast.64    %r1748 <- (32) %r1706
	mulu.64     %r1749 <- %r1748, $8
	call.64     %r1750 <- luaM_realloc_, %arg1, %r1745, %r1749, $0
	store.32    %arg2 -> 12[%r1692]
	store.64    %r1690 -> 0[%r1692]
	br          .L328

.L328:
	ret


newlstr:
.L344:
	<entry-point>
	add.64      %r1756 <- %arg3, $1
	seta.32     %r1757 <- %r1756, $-27
	br          %r1757, .L345, .L346

.L345:
	call.64     %r1759 <- luaM_toobig, %arg1
	br          .L346

.L346:
	add.64      %r1764 <- %arg3, $25
	call.64     %r1765 <- luaM_realloc_, %arg1, $0, $0, %r1764
	ptrcast.64  %r1766 <- (64) %r1765
	store.64    %arg3 -> 16[%r1766]
	store.32    %arg4 -> 12[%r1766]
	load.64     %r1772 <- 32[%arg1]
	load.8      %r1773 <- 32[%r1772]
	cast.32     %r1774 <- (8) %r1773
	and.32      %r1775 <- %r1774, $3
	store.8     %r1775 -> 9[%r1766]
	store.8     $4 -> 8[%r1766]
	store.8     $0 -> 10[%r1766]
	add.64      %r1781 <- %r1766, $24
	cast.64     %r1782 <- (64) %r1781
	cast.64     %r1784 <- (64) %arg2
	call.64     %r1787 <- memcpy, %r1782, %r1784, %arg3
	ptrcast.64  %r1790 <- (64) %r1781
	add.64      %r1792 <- %r1790, %arg3
	store.8     $0 -> 0[%r1792]
	load.64     %r1794 <- 32[%arg1]
	load.32     %r1798 <- 12[%r1794]
	add.32      %r1799 <- %r1798, $-1
	and.32      %r1801 <- %arg4, %r1799
	load.64     %r1805 <- 0[%r1794]
	cast.64     %r1807 <- (32) %r1801
	muls.64     %r1808 <- %r1807, $8
	add.64      %r1809 <- %r1805, %r1808
	load.64     %r1810 <- 0[%r1809]
	store.64    %r1810 -> 0[%r1766]
	ptrcast.64  %r1813 <- (64) %r1766
	load.64     %r1815 <- 0[%r1794]
	add.64      %r1819 <- %r1815, %r1808
	store.64    %r1813 -> 0[%r1819]
	load.32     %r1821 <- 8[%r1794]
	add.32      %r1822 <- %r1821, $1
	store.32    %r1822 -> 8[%r1794]
	load.32     %r1826 <- 12[%r1794]
	seta.32     %r1828 <- %r1822, %r1826
	br          %r1828, .L349, .L350

.L349:
	setle.32    %r1831 <- %r1826, $0x3ffffffe
	br          %r1831, .L347, .L350

.L347:
	muls.32     %r1835 <- %r1826, $2
	call        luaS_resize, %arg1, %r1835
	br          .L350

.L350:
	ret.64      %r1766


luaS_newlstr:
.L351:
	<entry-point>
	cast.32     %r1839(h) <- (64) %arg3
	lsr.64      %r1841 <- %arg3, $5
	add.64      %r1842 <- %r1841, $1
	phisrc.32   %phi282(h) <- %r1839(h)
	phisrc.64   %phi286(l1) <- %arg3
	br          .L355

.L355:
	phi.64      %r1844(l1) <- %phi286(l1), %phi287(l1)
	setae.32    %r1846 <- %r1844(l1), %r1842
	phi.32      %r1847 <- %phi282(h), %phi283(h)
	br          %r1846, .L352, .L354

.L352:
	shl.32      %r1849 <- %r1847, $5
	lsr.32      %r1851 <- %r1847, $2
	add.32      %r1852 <- %r1849, %r1851
	add.64      %r1855 <- %r1844(l1), $-1
	add.64      %r1856 <- %arg2, %r1855
	load.8      %r1857 <- 0[%r1856]
	cast.32     %r1859 <- (8) %r1857
	add.32      %r1860 <- %r1852, %r1859
	xor.32      %r1861 <- %r1847, %r1860
	phisrc.32   %phi283(h) <- %r1861
	sub.64      %r1865 <- %r1844(l1), %r1842
	phisrc.64   %phi287(l1) <- %r1865
	br          .L355

.L354:
	load.64     %r1868 <- 32[%arg1]
	load.64     %r1869 <- 0[%r1868]
	load.32     %r1873 <- 12[%r1868]
	add.32      %r1874 <- %r1873, $-1
	and.32      %r1876 <- %r1847, %r1874
	scast.64    %r1878 <- (32) %r1876
	muls.64     %r1879 <- %r1878, $8
	add.64      %r1880 <- %r1869, %r1879
	load.64     %r1881(o) <- 0[%r1880]
	phisrc.64   %phi292(o) <- %r1881(o)
	br          .L359

.L359:
	phi.64      %r1882(o) <- %phi292(o), %phi293(o)
	br          %r1882(o), .L356, .L358

.L356:
	load.64     %r1887 <- 16[%r1882(o)]
	seteq.32    %r1889 <- %r1887, %arg3
	cast.64     %r1891 <- (64) %arg2
	add.64      %r1893 <- %r1882(o), $24
	ptrcast.64  %r1894 <- (64) %r1893
	cast.64     %r1895 <- (64) %r1894
	call.32     %r1897 <- memcmp, %r1891, %r1895, %arg3
	seteq.32    %r1898 <- %r1897, $0
	and-bool.32 %r1899 <- %r1889, %r1898
	br          %r1899, .L360, .L357

.L360:
	load.8      %r1901 <- 9[%r1882(o)]
	cast.32     %r1902 <- (8) %r1901
	load.64     %r1904 <- 32[%arg1]
	load.8      %r1905 <- 32[%r1904]
	cast.32     %r1906 <- (8) %r1905
	xor.32      %r1907 <- %r1906, $3
	and.32      %r1908 <- %r1902, %r1907
	and.32      %r1909 <- %r1908, $3
	br          %r1909, .L362, .L363

.L362:
	xor.32      %r1913 <- %r1902, $3
	scast.8     %r1914 <- (32) %r1913
	store.8     %r1914 -> 9[%r1882(o)]
	br          .L363

.L363:
	phisrc.64   %phi277(return) <- %r1882(o)
	br          .L364

.L357:
	load.64     %r1918 <- 0[%r1882(o)]
	phisrc.64   %phi293(o) <- %r1918
	br          .L359

.L358:
	call.64     %r1923 <- newlstr, %arg1, %arg2, %arg3, %r1847
	phisrc.64   %phi278(return) <- %r1923
	br          .L364

.L364:
	phi.64      %r1916 <- %phi277(return), %phi278(return)
	ret.64      %r1916


luaS_newudata:
.L365:
	<entry-point>
	seta.32     %r1925 <- %arg2, $-43
	br          %r1925, .L366, .L367

.L366:
	call.64     %r1927 <- luaM_toobig, %arg1
	br          .L367

.L367:
	add.64      %r1930 <- %arg2, $40
	call.64     %r1931 <- luaM_realloc_, %arg1, $0, $0, %r1930
	ptrcast.64  %r1932 <- (64) %r1931
	load.64     %r1934 <- 32[%arg1]
	load.8      %r1935 <- 32[%r1934]
	cast.32     %r1936 <- (8) %r1935
	and.32      %r1937 <- %r1936, $3
	store.8     %r1937 -> 9[%r1932]
	store.8     $7 -> 8[%r1932]
	store.64    %arg2 -> 32[%r1932]
	store.64    $0 -> 16[%r1932]
	store.64    %arg3 -> 24[%r1932]
	load.64     %r1947 <- 32[%arg1]
	load.64     %r1948 <- 176[%r1947]
	load.64     %r1949 <- 0[%r1948]
	store.64    %r1949 -> 0[%r1932]
	ptrcast.64  %r1952 <- (64) %r1932
	load.64     %r1954 <- 32[%arg1]
	load.64     %r1955 <- 176[%r1954]
	store.64    %r1952 -> 0[%r1955]
	ret.64      %r1932


hashnum:
.L369:
	<entry-point>
	store.64    %arg2 -> 0[n]
	set.64      %r1959 <- 0.000000
	seteq.32    %r1960 <- %arg2, %r1959
	br          %r1960, .L370, .L371

.L370:
	load.64     %r1962 <- 32[%arg1]
	phisrc.64   %phi296(return) <- %r1962
	br          .L372

.L371:
	symaddr.64  %r1965 <- a
	cast.64     %r1966 <- (64) %r1965
	symaddr.64  %r1967 <- n
	cast.64     %r1968 <- (64) %r1967
	call.64     %r1969 <- memcpy, %r1966, %r1968, $8
	phisrc.32   %phi300(i) <- $1
	br          .L376

.L376:
	phi.32      %r1970(i) <- %phi300(i), %phi301(i)
	setlt.32    %r1971 <- %r1970(i), $2
	br          %r1971, .L373, .L375

.L373:
	scast.64    %r1974 <- (32) %r1970(i)
	muls.64     %r1975 <- %r1974, $4
	add.64      %r1976 <- %r1965, %r1975
	load.32     %r1977 <- 0[%r1976]
	load.32     %r1978 <- 0[a]
	add.32      %r1980 <- %r1978, %r1977
	store.32    %r1980 -> 0[a]
	add.32      %r1983 <- %r1970(i), $1
	phisrc.32   %phi301(i) <- %r1983
	br          .L376

.L375:
	load.64     %r1985 <- 32[%arg1]
	load.32     %r1986 <- 0[a]
	cast.64     %r1987 <- (32) %r1986
	load.8      %r1989 <- 11[%arg1]
	cast.32     %r1990 <- (8) %r1989
	shl.64      %r1991 <- $1, %r1990
	add.64      %r1992 <- %r1991, $-1
	or.64       %r1993 <- %r1992, $1
	modu.64     %r1994 <- %r1987, %r1993
	muls.64     %r1995 <- %r1994, $40
	add.64      %r1996 <- %r1985, %r1995
	phisrc.64   %phi297(return) <- %r1996
	br          .L372

.L372:
	phi.64      %r1964 <- %phi296(return), %phi297(return)
	ret.64      %r1964


mainposition:
.L377:
	<entry-point>
	load.32     %r1998 <- 8[%arg2]
	switch      %r1998, 1 -> .L381, 2 -> .L382, 3 -> .L379, 4 -> .L380, default -> .L383

.L379:
	load.64     %r2001 <- 0[%arg2]
	call.64     %r2003 <- hashnum, %arg1, %r2001
	phisrc.64   %phi302(return) <- %r2003
	br          .L384

.L380:
	load.64     %r2006 <- 32[%arg1]
	load.64     %r2008 <- 0[%arg2]
	load.32     %r2009 <- 12[%r2008]
	cast.64     %r2010 <- (32) %r2009
	load.8      %r2012 <- 11[%arg1]
	cast.32     %r2013 <- (8) %r2012
	shl.64      %r2014 <- $1, %r2013
	add.64      %r2015 <- %r2014, $-1
	and.64      %r2016 <- %r2010, %r2015
	cast.32     %r2017 <- (64) %r2016
	scast.64    %r2018 <- (32) %r2017
	muls.64     %r2019 <- %r2018, $40
	add.64      %r2020 <- %r2006, %r2019
	phisrc.64   %phi303(return) <- %r2020
	br          .L384

.L381:
	load.64     %r2022 <- 32[%arg1]
	load.32     %r2024 <- 0[%arg2]
	scast.64    %r2025 <- (32) %r2024
	load.8      %r2027 <- 11[%arg1]
	cast.32     %r2028 <- (8) %r2027
	shl.64      %r2029 <- $1, %r2028
	add.64      %r2030 <- %r2029, $-1
	and.64      %r2031 <- %r2025, %r2030
	cast.32     %r2032 <- (64) %r2031
	scast.64    %r2033 <- (32) %r2032
	muls.64     %r2034 <- %r2033, $40
	add.64      %r2035 <- %r2022, %r2034
	phisrc.64   %phi304(return) <- %r2035
	br          .L384

.L382:
	load.64     %r2037 <- 32[%arg1]
	load.64     %r2039 <- 0[%arg2]
	cast.64     %r2040 <- (64) %r2039
	cast.32     %r2041 <- (64) %r2040
	cast.64     %r2042 <- (32) %r2041
	load.8      %r2044 <- 11[%arg1]
	cast.32     %r2045 <- (8) %r2044
	shl.64      %r2046 <- $1, %r2045
	add.64      %r2047 <- %r2046, $-1
	or.64       %r2048 <- %r2047, $1
	modu.64     %r2049 <- %r2042, %r2048
	muls.64     %r2050 <- %r2049, $40
	add.64      %r2051 <- %r2037, %r2050
	phisrc.64   %phi305(return) <- %r2051
	br          .L384

.L383:
	load.64     %r2053 <- 32[%arg1]
	load.64     %r2055 <- 0[%arg2]
	cast.64     %r2056 <- (64) %r2055
	cast.32     %r2057 <- (64) %r2056
	cast.64     %r2058 <- (32) %r2057
	load.8      %r2060 <- 11[%arg1]
	cast.32     %r2061 <- (8) %r2060
	shl.64      %r2062 <- $1, %r2061
	add.64      %r2063 <- %r2062, $-1
	or.64       %r2064 <- %r2063, $1
	modu.64     %r2065 <- %r2058, %r2064
	muls.64     %r2066 <- %r2065, $40
	add.64      %r2067 <- %r2053, %r2066
	phisrc.64   %phi306(return) <- %r2067
	br          .L384

.L384:
	phi.64      %r2004 <- %phi302(return), %phi303(return), %phi304(return), %phi305(return), %phi306(return)
	ret.64      %r2004


arrayindex:
.L385:
	<entry-point>
	load.32     %r2069 <- 8[%arg1]
	seteq.32    %r2071 <- %r2069, $3
	br          %r2071, .L386, .L387

.L386:
	load.64     %r2073 <- 0[%arg1]
	cast.32     %r2076 <- (64) %r2073
	fpcast.64   %r2078 <- (32) %r2076
	seteq.32    %r2080 <- %r2078, %r2073
	br          %r2080, .L388, .L387

.L388:
	phisrc.32   %phi307(return) <- %r2076
	br          .L390

.L387:
	phisrc.32   %phi308(return) <- $0xffffffff
	br          .L390

.L390:
	phi.32      %r2082 <- %phi307(return), %phi308(return)
	ret.32      %r2082


findindex:
.L391:
	<entry-point>
	load.32     %r2084 <- 8[%arg3]
	br          %r2084, .L393, .L392

.L392:
	phisrc.32   %phi309(return) <- $0xffffffff
	br          .L394

.L393:
	call.32     %r2088 <- arrayindex, %arg3
	setlt.32    %r2090 <- $0, %r2088
	br          %r2090, .L397, .L396

.L397:
	load.32     %r2093 <- 56[%arg2]
	setle.32    %r2094 <- %r2088, %r2093
	br          %r2094, .L395, .L396

.L395:
	add.32      %r2096 <- %r2088, $-1
	phisrc.32   %phi310(return) <- %r2096
	br          .L394

.L396:
	call.64     %r2099(n) <- mainposition, %arg2, %arg3
	phisrc.64   %phi322(n) <- %r2099(n)
	br          .L399

.L399:
	phi.64      %r2100(n) <- %phi322(n), %phi323(n)
	add.64      %r2101 <- %r2100(n), $16
	call.32     %r2104 <- luaO_rawequalObj, %r2101, %arg3
	br          %r2104, .L402, .L404

.L404:
	load.32     %r2106 <- 24[%r2100(n)]
	seteq.32    %r2107 <- %r2106, $11
	br          %r2107, .L406, .L403

.L406:
	load.32     %r2109 <- 8[%arg3]
	setge.32    %r2110 <- %r2109, $4
	br          %r2110, .L405, .L403

.L405:
	load.64     %r2112 <- 16[%r2100(n)]
	load.64     %r2114 <- 0[%arg3]
	seteq.32    %r2115 <- %r2112, %r2114
	br          %r2115, .L402, .L403

.L402:
	load.64     %r2118 <- 32[%arg2]
	sub.64      %r2120 <- %r2100(n), %r2118
	divs.64     %r2121 <- %r2120, $40
	scast.32    %r2122 <- (64) %r2121
	load.32     %r2125 <- 56[%arg2]
	add.32      %r2126 <- %r2122, %r2125
	phisrc.32   %phi311(return) <- %r2126
	br          .L394

.L403:
	load.64     %r2128(n) <- 32[%r2100(n)]
	phisrc.64   %phi323(n) <- %r2128(n)
	br          %r2128(n), .L399, .L401

.L401:
	symaddr.64  %r2131 <- <anon symbol:0x62d0011b5e18>
	call        luaG_runerror, %arg1, %r2131
	phisrc.32   %phi312(return) <- $0
	br          .L394

.L394:
	phi.32      %r2086 <- %phi309(return), %phi310(return), %phi311(return), %phi312(return)
	ret.32      %r2086


luaH_next:
.L408:
	<entry-point>
	call.32     %r2135 <- findindex, %arg1, %arg2, %arg3
	add.32      %r2137(i) <- %r2135, $1
	phisrc.32   %phi336(i) <- %r2137(i)
	br          .L412

.L412:
	phi.32      %r2138(i) <- %phi336(i), %phi337(i)
	load.32     %r2140 <- 56[%arg2]
	setlt.32    %r2141 <- %r2138(i), %r2140
	br          %r2141, .L409, .L411

.L409:
	load.64     %r2143 <- 24[%arg2]
	scast.64    %r2145 <- (32) %r2138(i)
	muls.64     %r2146 <- %r2145, $16
	add.64      %r2147 <- %r2143, %r2146
	load.32     %r2148 <- 8[%r2147]
	add.32      %r2152 <- %r2138(i), $1
	br          %r2148, .L413, .L410

.L413:
	fpcast.64   %r2153 <- (32) %r2152
	store.64    %r2153 -> 0[%arg3]
	store.32    $3 -> 8[%arg3]
	load.64     %r2157 <- 24[%arg2]
	add.64      %r2161 <- %r2157, %r2146
	load.64     %r2165 <- 0[%r2161]
	store.64    %r2165 -> 16[%arg3]
	load.32     %r2168 <- 8[%r2161]
	store.32    %r2168 -> 24[%arg3]
	phisrc.32   %phi324(return) <- $1
	br          .L415

.L410:
	phisrc.32   %phi337(i) <- %r2152
	br          .L412

.L411:
	sub.32      %r2178 <- %r2138(i), %r2140
	phisrc.32   %phi330(i) <- %r2178
	br          .L419

.L419:
	phi.32      %r2180(i) <- %phi330(i), %phi331(i)
	load.8      %r2182 <- 11[%arg2]
	cast.32     %r2183 <- (8) %r2182
	shl.64      %r2184 <- $1, %r2183
	cast.32     %r2185 <- (64) %r2184
	setlt.32    %r2186 <- %r2180(i), %r2185
	br          %r2186, .L416, .L418

.L416:
	load.64     %r2188 <- 32[%arg2]
	scast.64    %r2190 <- (32) %r2180(i)
	muls.64     %r2191 <- %r2190, $40
	add.64      %r2192 <- %r2188, %r2191
	load.32     %r2193 <- 8[%r2192]
	br          %r2193, .L420, .L417

.L420:
	load.64     %r2205 <- 16[%r2192]
	store.64    %r2205 -> 0[%arg3]
	load.32     %r2208 <- 24[%r2192]
	store.32    %r2208 -> 8[%arg3]
	load.64     %r2212 <- 32[%arg2]
	add.64      %r2216 <- %r2212, %r2191
	load.64     %r2221 <- 0[%r2216]
	store.64    %r2221 -> 16[%arg3]
	load.32     %r2224 <- 8[%r2216]
	store.32    %r2224 -> 24[%arg3]
	phisrc.32   %phi325(return) <- $1
	br          .L415

.L417:
	add.32      %r2228 <- %r2180(i), $1
	phisrc.32   %phi331(i) <- %r2228
	br          .L419

.L418:
	phisrc.32   %phi326(return) <- $0
	br          .L415

.L415:
	phi.32      %r2171 <- %phi324(return), %phi325(return), %phi326(return)
	ret.32      %r2171


computesizes:
.L422:
	<entry-point>
	phisrc.32   %phi341(a) <- $0
	phisrc.32   %phi345(a) <- $0
	phisrc.32   %phi347(na) <- $0
	phisrc.32   %phi349(n) <- $0
	phisrc.32   %phi354(i) <- $0
	phisrc.32   %phi361(twotoi) <- $1
	br          .L426

.L426:
	phi.32      %r2229(twotoi) <- %phi361(twotoi), %phi362(twotoi)
	divs.32     %r2230 <- %r2229(twotoi), $2
	load.32     %r2232 <- 0[%arg2]
	setlt.32    %r2233 <- %r2230, %r2232
	br          %r2233, .L423, .L425

.L423:
	phi.32      %r2235(i) <- %phi354(i), %phi355(i)
	scast.64    %r2236 <- (32) %r2235(i)
	muls.64     %r2237 <- %r2236, $4
	add.64      %r2238 <- %arg1, %r2237
	load.32     %r2239 <- 0[%r2238]
	setgt.32    %r2240 <- %r2239, $0
	br          %r2240, .L427, .L428

.L427:
	phi.32      %r2247 <- %phi345(a), %phi346(a)
	add.32      %r2249 <- %r2247, %r2239
	setgt.32    %r2254 <- %r2249, %r2230
	phisrc.32   %phi342(a) <- %r2249
	phisrc.32   %phi346(a) <- %r2249
	br          %r2254, .L429, .L428

.L429:
	phisrc.32   %phi343(a) <- %r2249
	phisrc.32   %phi348(na) <- %r2249
	phisrc.32   %phi350(n) <- %r2229(twotoi)
	br          .L428

.L428:
	phi.32      %r2257 <- %phi341(a), %phi342(a), %phi343(a)
	seteq.32    %r2260 <- %r2257, %r2232
	br          %r2260, .L425, .L424

.L424:
	add.32      %r2262 <- %r2235(i), $1
	muls.32     %r2265 <- %r2229(twotoi), $2
	phisrc.32   %phi355(i) <- %r2262
	phisrc.32   %phi362(twotoi) <- %r2265
	br          .L426

.L425:
	phi.32      %r2267 <- %phi349(n), %phi350(n)
	store.32    %r2267 -> 0[%arg2]
	phi.32      %r2269 <- %phi347(na), %phi348(na)
	ret.32      %r2269


countint:
.L434:
	<entry-point>
	call.32     %r2272 <- arrayindex, %arg1
	setlt.32    %r2274 <- $0, %r2272
	setle.32    %r2276 <- %r2272, $0x40000000
	and-bool.32 %r2277 <- %r2274, %r2276
	setne.32    %r2289 <- %r2277, $0
	br          %r2277, .L435, .L437

.L435:
	add.32      %r2280 <- %r2272, $-1
	call.32     %r2282 <- luaO_log2, %r2280
	add.32      %r2283 <- %r2282, $1
	scast.64    %r2284 <- (32) %r2283
	muls.64     %r2285 <- %r2284, $4
	add.64      %r2286 <- %arg2, %r2285
	load.32     %r2287 <- 0[%r2286]
	add.32      %r2288 <- %r2287, $1
	store.32    %r2288 -> 0[%r2286]
	br          .L437

.L437:
	ret.32      %r2289


numusearray:
.L439:
	<entry-point>
	phisrc.32   %phi368(ause) <- $0
	phisrc.32   %phi370(ause) <- $0
	phisrc.32   %phi374(i) <- $1
	phisrc.32   %phi377(i) <- $1
	phisrc.32   %phi381(lg) <- $0
	phisrc.32   %phi384(ttlg) <- $1
	br          .L443

.L443:
	phi.32      %r2290(lg) <- %phi381(lg), %phi382(lg)
	setle.32    %r2291 <- %r2290(lg), $30
	br          %r2291, .L440, .L442

.L440:
	phi.32      %r2292(ttlg) <- %phi384(ttlg), %phi385(ttlg)
	load.32     %r2295 <- 56[%arg1]
	setgt.32    %r2297 <- %r2292(ttlg), %r2295
	phisrc.32   %phi386(lc) <- $0
	phisrc.32   %phi388(lc) <- $0
	phisrc.32   %phi390(lim) <- %r2292(ttlg)
	br          %r2297, .L444, .L451

.L444:
	phi.32      %r2301 <- %phi377(i), %phi378(i)
	setgt.32    %r2303 <- %r2301, %r2295
	phisrc.32   %phi375(i) <- %r2301
	phisrc.32   %phi391(lim) <- %r2295
	br          %r2303, .L442, .L451

.L451:
	phi.32      %r2304(i) <- %phi374(i), %phi375(i), %phi376(i)
	phi.32      %r2305 <- %phi390(lim), %phi391(lim)
	setle.32    %r2306 <- %r2304(i), %r2305
	br          %r2306, .L448, .L450

.L448:
	load.64     %r2308 <- 24[%arg1]
	add.32      %r2310 <- %r2304(i), $-1
	scast.64    %r2311 <- (32) %r2310
	muls.64     %r2312 <- %r2311, $16
	add.64      %r2313 <- %r2308, %r2312
	load.32     %r2314 <- 8[%r2313]
	br          %r2314, .L452, .L449

.L452:
	phi.32      %r2316 <- %phi388(lc), %phi389(lc)
	add.32      %r2317 <- %r2316, $1
	phisrc.32   %phi387(lc) <- %r2317
	phisrc.32   %phi389(lc) <- %r2317
	br          .L449

.L449:
	add.32      %r2319 <- %r2304(i), $1
	phisrc.32   %phi376(i) <- %r2319
	phisrc.32   %phi378(i) <- %r2319
	br          .L451

.L450:
	phi.32      %r2320 <- %phi386(lc), %phi387(lc)
	scast.64    %r2323 <- (32) %r2290(lg)
	muls.64     %r2324 <- %r2323, $4
	add.64      %r2325 <- %arg2, %r2324
	load.32     %r2326 <- 0[%r2325]
	add.32      %r2328 <- %r2326, %r2320
	store.32    %r2328 -> 0[%r2325]
	phi.32      %r2331 <- %phi370(ause), %phi371(ause)
	add.32      %r2333 <- %r2331, %r2320
	phisrc.32   %phi369(ause) <- %r2333
	phisrc.32   %phi371(ause) <- %r2333
	add.32      %r2336 <- %r2290(lg), $1
	muls.32     %r2339 <- %r2292(ttlg), $2
	phisrc.32   %phi382(lg) <- %r2336
	phisrc.32   %phi385(ttlg) <- %r2339
	br          .L443

.L442:
	phi.32      %r2341 <- %phi368(ause), %phi369(ause)
	ret.32      %r2341


numusehash:
.L455:
	<entry-point>
	load.8      %r2344 <- 11[%arg1]
	cast.32     %r2345 <- (8) %r2344
	shl.64      %r2346 <- $1, %r2345
	cast.32     %r2347(i) <- (64) %r2346
	phisrc.32   %phi394(totaluse) <- $0
	phisrc.32   %phi396(totaluse) <- $0
	phisrc.32   %phi398(ause) <- $0
	phisrc.32   %phi400(ause) <- $0
	phisrc.32   %phi403(i) <- %r2347(i)
	br          .L459

.L459:
	phi.32      %r2348 <- %phi403(i), %phi404(i)
	add.32      %r2349(i) <- %r2348, $-1
	phisrc.32   %phi404(i) <- %r2349(i)
	br          %r2348, .L456, .L458

.L456:
	load.64     %r2351 <- 32[%arg1]
	scast.64    %r2353 <- (32) %r2349(i)
	muls.64     %r2354 <- %r2353, $40
	add.64      %r2355 <- %r2351, %r2354
	load.32     %r2357 <- 8[%r2355]
	br          %r2357, .L460, .L459

.L460:
	add.64      %r2360 <- %r2355, $16
	call.32     %r2363 <- countint, %r2360, %arg2
	phi.32      %r2364 <- %phi400(ause), %phi401(ause)
	add.32      %r2366 <- %r2364, %r2363
	phi.32      %r2368 <- %phi396(totaluse), %phi397(totaluse)
	add.32      %r2369 <- %r2368, $1
	phisrc.32   %phi395(totaluse) <- %r2369
	phisrc.32   %phi397(totaluse) <- %r2369
	phisrc.32   %phi399(ause) <- %r2366
	phisrc.32   %phi401(ause) <- %r2366
	br          .L459

.L458:
	phi.32      %r2370 <- %phi398(ause), %phi399(ause)
	load.32     %r2372 <- 0[%arg3]
	add.32      %r2374 <- %r2372, %r2370
	store.32    %r2374 -> 0[%arg3]
	phi.32      %r2376 <- %phi394(totaluse), %phi395(totaluse)
	ret.32      %r2376


setarrayvector:
.L463:
	<entry-point>
	add.32      %r2379 <- %arg3, $1
	scast.64    %r2380 <- (32) %r2379
	setbe.32    %r2381 <- %r2380, $0xfffffffffffffff
	br          %r2381, .L464, .L465

.L464:
	load.64     %r2384 <- 24[%arg2]
	cast.64     %r2385 <- (64) %r2384
	load.32     %r2387 <- 56[%arg2]
	scast.64    %r2388 <- (32) %r2387
	mulu.64     %r2389 <- %r2388, $16
	scast.64    %r2391 <- (32) %arg3
	mulu.64     %r2392 <- %r2391, $16
	call.64     %r2393 <- luaM_realloc_, %arg1, %r2385, %r2389, %r2392
	phisrc.64   %phi405 <- %r2393
	br          .L466

.L465:
	call.64     %r2395 <- luaM_toobig, %arg1
	cast.64     %r2396 <- (64) %r2395
	phisrc.64   %phi406 <- %r2396
	br          .L466

.L466:
	phi.64      %r2397 <- %phi405, %phi406
	ptrcast.64  %r2398 <- (64) %r2397
	store.64    %r2398 -> 24[%arg2]
	load.32     %r2401(i) <- 56[%arg2]
	phisrc.32   %phi409(i) <- %r2401(i)
	phisrc.64   %phi411 <- %r2398
	phisrc.64   %phi412 <- %r2398
	br          .L470

.L470:
	phi.32      %r2402(i) <- %phi409(i), %phi410(i)
	setlt.32    %r2404 <- %r2402(i), %arg3
	br          %r2404, .L467, .L469

.L467:
	load.64     %r2406 <- 24[%arg2]
	scast.64    %r2408 <- (32) %r2402(i)
	muls.64     %r2409 <- %r2408, $16
	add.64      %r2410 <- %r2406, %r2409
	store.32    $0 -> 8[%r2410]
	add.32      %r2412 <- %r2402(i), $1
	phisrc.32   %phi410(i) <- %r2412
	br          .L470

.L469:
	store.32    %arg3 -> 56[%arg2]
	ret


setnodevector:
.L472:
	<entry-point>
	phisrc.32   %phi415(size) <- %arg3
	br          %arg3, .L474, .L473

.L473:
	symaddr.64  %r2417 <- dummynode_
	ptrcast.64  %r2418 <- (64) %r2417
	store.64    %r2418 -> 32[%arg2]
	phisrc.32   %phi421(lsize) <- $0
	phisrc.64   %phi428 <- %r2418
	phisrc.64   %phi431 <- %r2418
	br          .L475

.L474:
	add.32      %r2421 <- %arg3, $-1
	call.32     %r2423 <- luaO_log2, %r2421
	add.32      %r2424 <- %r2423, $1
	setgt.32    %r2426 <- %r2424, $30
	br          %r2426, .L476, .L477

.L476:
	symaddr.64  %r2428 <- <anon symbol:0x62d0011dc118>
	call        luaG_runerror, %arg1, %r2428
	br          .L477

.L477:
	shl.64      %r2430 <- $1, %r2424
	cast.32     %r2431 <- (64) %r2430
	add.32      %r2433 <- %r2431, $1
	scast.64    %r2434 <- (32) %r2433
	setbe.32    %r2435 <- %r2434, $0x666666666666666
	phisrc.32   %phi422(lsize) <- %r2424
	br          %r2435, .L478, .L479

.L478:
	scast.64    %r2438 <- (32) %r2431
	mulu.64     %r2439 <- %r2438, $40
	call.64     %r2440 <- luaM_realloc_, %arg1, $0, $0, %r2439
	phisrc.64   %phi413 <- %r2440
	br          .L480

.L479:
	call.64     %r2442 <- luaM_toobig, %arg1
	cast.64     %r2443 <- (64) %r2442
	phisrc.64   %phi414 <- %r2443
	br          .L480

.L480:
	phi.64      %r2444 <- %phi413, %phi414
	ptrcast.64  %r2445 <- (64) %r2444
	store.64    %r2445 -> 32[%arg2]
	phisrc.32   %phi426(i) <- $0
	phisrc.64   %phi429 <- %r2445
	phisrc.64   %phi430 <- %r2445
	phisrc.64   %phi432 <- %r2445
	phisrc.64   %phi433 <- %r2445
	br          .L484

.L484:
	phi.32      %r2447(i) <- %phi426(i), %phi427(i)
	setlt.32    %r2449 <- %r2447(i), %r2431
	phisrc.32   %phi416(size) <- %r2431
	br          %r2449, .L481, .L475

.L481:
	load.64     %r2451 <- 32[%arg2]
	scast.64    %r2453 <- (32) %r2447(i)
	muls.64     %r2454 <- %r2453, $40
	add.64      %r2455 <- %r2451, %r2454
	store.64    $0 -> 32[%r2455]
	store.32    $0 -> 24[%r2455]
	store.32    $0 -> 8[%r2455]
	add.32      %r2460 <- %r2447(i), $1
	phisrc.32   %phi427(i) <- %r2460
	br          .L484

.L475:
	phi.32      %r2461 <- %phi421(lsize), %phi422(lsize)
	scast.8     %r2462 <- (32) %r2461
	store.8     %r2462 -> 11[%arg2]
	load.64     %r2465 <- 32[%arg2]
	phi.32      %r2466 <- %phi415(size), %phi416(size)
	scast.64    %r2467 <- (32) %r2466
	muls.64     %r2468 <- %r2467, $40
	add.64      %r2469 <- %r2465, %r2468
	store.64    %r2469 -> 40[%arg2]
	ret


resize:
.L486:
	<entry-point>
	load.32     %r2472 <- 56[%arg2]
	load.8      %r2474 <- 11[%arg2]
	cast.32     %r2475 <- (8) %r2474
	load.64     %r2477 <- 32[%arg2]
	setgt.32    %r2480 <- %arg3, %r2472
	br          %r2480, .L487, .L488

.L487:
	call        setarrayvector, %arg1, %arg2, %arg3
	br          .L488

.L488:
	call        setnodevector, %arg1, %arg2, %arg4
	setlt.32    %r2489 <- %arg3, %r2472
	br          %r2489, .L489, .L490

.L489:
	store.32    %arg3 -> 56[%arg2]
	phisrc.32   %phi444(i) <- %arg3
	br          .L494

.L494:
	phi.32      %r2493(i) <- %phi444(i), %phi445(i)
	setlt.32    %r2495 <- %r2493(i), %r2472
	br          %r2495, .L491, .L493

.L491:
	load.64     %r2497 <- 24[%arg2]
	scast.64    %r2499 <- (32) %r2493(i)
	muls.64     %r2500 <- %r2499, $16
	add.64      %r2501 <- %r2497, %r2500
	load.32     %r2502 <- 8[%r2501]
	br          %r2502, .L495, .L492

.L495:
	add.32      %r2513 <- %r2493(i), $1
	call.64     %r2514 <- luaH_setnum, %arg1, %arg2, %r2513
	load.64     %r2516 <- 0[%r2501]
	store.64    %r2516 -> 0[%r2514]
	load.32     %r2519 <- 8[%r2501]
	store.32    %r2519 -> 8[%r2514]
	br          .L492

.L492:
	add.32      %r2523 <- %r2493(i), $1
	phisrc.32   %phi445(i) <- %r2523
	br          .L494

.L493:
	add.32      %r2525 <- %arg3, $1
	scast.64    %r2526 <- (32) %r2525
	setbe.32    %r2527 <- %r2526, $0xfffffffffffffff
	br          %r2527, .L497, .L498

.L497:
	load.64     %r2530 <- 24[%arg2]
	cast.64     %r2531 <- (64) %r2530
	scast.64    %r2533 <- (32) %r2472
	mulu.64     %r2534 <- %r2533, $16
	scast.64    %r2536 <- (32) %arg3
	mulu.64     %r2537 <- %r2536, $16
	call.64     %r2538 <- luaM_realloc_, %arg1, %r2531, %r2534, %r2537
	phisrc.64   %phi434 <- %r2538
	br          .L499

.L498:
	call.64     %r2540 <- luaM_toobig, %arg1
	cast.64     %r2541 <- (64) %r2540
	phisrc.64   %phi435 <- %r2541
	br          .L499

.L499:
	phi.64      %r2542 <- %phi434, %phi435
	ptrcast.64  %r2543 <- (64) %r2542
	store.64    %r2543 -> 24[%arg2]
	br          .L490

.L490:
	shl.64      %r2546 <- $1, %r2475
	add.64      %r2547 <- %r2546, $-1
	cast.32     %r2548(i) <- (64) %r2547
	phisrc.32   %phi438(i) <- %r2548(i)
	br          .L503

.L503:
	phi.32      %r2549(i) <- %phi438(i), %phi439(i)
	setge.32    %r2550 <- %r2549(i), $0
	br          %r2550, .L500, .L502

.L500:
	scast.64    %r2553 <- (32) %r2549(i)
	muls.64     %r2554 <- %r2553, $40
	add.64      %r2555 <- %r2477, %r2554
	load.32     %r2557 <- 8[%r2555]
	br          %r2557, .L504, .L501

.L504:
	add.64      %r2564 <- %r2555, $16
	call.64     %r2566 <- luaH_set, %arg1, %arg2, %r2564
	load.64     %r2568 <- 0[%r2555]
	store.64    %r2568 -> 0[%r2566]
	load.32     %r2571 <- 8[%r2555]
	store.32    %r2571 -> 8[%r2566]
	br          .L501

.L501:
	add.32      %r2575 <- %r2549(i), $-1
	phisrc.32   %phi439(i) <- %r2575
	br          .L503

.L502:
	symaddr.64  %r2577 <- dummynode_
	setne.32    %r2578 <- %r2477, %r2577
	br          %r2578, .L506, .L507

.L506:
	cast.64     %r2581 <- (64) %r2477
	shl.64      %r2583 <- $1, %r2475
	mulu.64     %r2584 <- %r2583, $40
	call.64     %r2585 <- luaM_realloc_, %arg1, %r2581, %r2584, $0
	br          .L507

.L507:
	ret


luaH_resizearray:
.L508:
	<entry-point>
	load.64     %r2587 <- 32[%arg2]
	symaddr.64  %r2588 <- dummynode_
	seteq.32    %r2589 <- %r2587, %r2588
	br          %r2589, .L509, .L510

.L509:
	phisrc.64   %phi447 <- $0
	br          .L511

.L510:
	load.8      %r2591 <- 11[%arg2]
	cast.32     %r2592 <- (8) %r2591
	shl.64      %r2593 <- $1, %r2592
	phisrc.64   %phi448 <- %r2593
	br          .L511

.L511:
	phi.64      %r2594 <- %phi447, %phi448
	cast.32     %r2595 <- (64) %r2594
	call        resize, %arg1, %arg2, %arg3, %r2595
	ret


rehash:
.L513:
	<entry-point>
	phisrc.32   %phi451(i) <- $0
	br          .L517

.L517:
	phi.32      %r2600(i) <- %phi451(i), %phi452(i)
	setle.32    %r2601 <- %r2600(i), $30
	symaddr.64  %r2602 <- nums
	br          %r2601, .L514, .L516

.L514:
	scast.64    %r2604 <- (32) %r2600(i)
	muls.64     %r2605 <- %r2604, $4
	add.64      %r2606 <- %r2602, %r2605
	store.32    $0 -> 0[%r2606]
	add.32      %r2608 <- %r2600(i), $1
	phisrc.32   %phi452(i) <- %r2608
	br          .L517

.L516:
	call.32     %r2611 <- numusearray, %arg2, %r2602
	store.32    %r2611 -> 0[nasize]
	symaddr.64  %r2615 <- nasize
	call.32     %r2616 <- numusehash, %arg2, %r2602, %r2615
	add.32      %r2619 <- %r2611, %r2616
	call.32     %r2623 <- countint, %arg3, %r2602
	load.32     %r2624 <- 0[nasize]
	add.32      %r2626 <- %r2624, %r2623
	store.32    %r2626 -> 0[nasize]
	add.32      %r2629 <- %r2619, $1
	call.32     %r2632 <- computesizes, %r2602, %r2615
	load.32     %r2635 <- 0[nasize]
	sub.32      %r2638 <- %r2629, %r2632
	call        resize, %arg1, %arg2, %r2635, %r2638
	ret


luaH_new:
.L519:
	<entry-point>
	call.64     %r2640 <- luaM_realloc_, %arg1, $0, $0, $64
	ptrcast.64  %r2641 <- (64) %r2640
	ptrcast.64  %r2644 <- (64) %r2641
	call        luaC_link, %arg1, %r2644, $5
	store.64    $0 -> 16[%r2641]
	store.8     $255 -> 10[%r2641]
	store.64    $0 -> 24[%r2641]
	store.32    $0 -> 56[%r2641]
	store.8     $0 -> 11[%r2641]
	symaddr.64  %r2650 <- dummynode_
	ptrcast.64  %r2651 <- (64) %r2650
	store.64    %r2651 -> 32[%r2641]
	call        setarrayvector, %arg1, %r2641, %arg2
	call        setnodevector, %arg1, %r2641, %arg3
	ret.64      %r2641


luaH_free:
.L521:
	<entry-point>
	load.64     %r2662 <- 32[%arg2]
	symaddr.64  %r2663 <- dummynode_
	setne.32    %r2664 <- %r2662, %r2663
	br          %r2664, .L522, .L523

.L522:
	cast.64     %r2668 <- (64) %r2662
	load.8      %r2670 <- 11[%arg2]
	cast.32     %r2671 <- (8) %r2670
	shl.64      %r2672 <- $1, %r2671
	mulu.64     %r2673 <- %r2672, $40
	call.64     %r2674 <- luaM_realloc_, %arg1, %r2668, %r2673, $0
	br          .L523

.L523:
	load.64     %r2677 <- 24[%arg2]
	cast.64     %r2678 <- (64) %r2677
	load.32     %r2680 <- 56[%arg2]
	scast.64    %r2681 <- (32) %r2680
	mulu.64     %r2682 <- %r2681, $16
	call.64     %r2683 <- luaM_realloc_, %arg1, %r2678, %r2682, $0
	cast.64     %r2686 <- (64) %arg2
	call.64     %r2687 <- luaM_realloc_, %arg1, %r2686, $64, $0
	ret


getfreepos:
.L525:
	<entry-point>
	br          .L529

.L529:
	load.64     %r2689 <- 40[%arg1]
	add.64      %r2690 <- %r2689, $-40
	store.64    %r2690 -> 40[%arg1]
	load.64     %r2692 <- 32[%arg1]
	seta.32     %r2693 <- %r2689, %r2692
	br          %r2693, .L526, .L528

.L526:
	load.32     %r2696 <- -16[%r2689]
	br          %r2696, .L529, .L530

.L530:
	phisrc.64   %phi455(return) <- %r2690
	br          .L532

.L528:
	phisrc.64   %phi456(return) <- $0
	br          .L532

.L532:
	phi.64      %r2700 <- %phi455(return), %phi456(return)
	ret.64      %r2700


newkey:
.L533:
	<entry-point>
	call.64     %r2703 <- mainposition, %arg2, %arg3
	load.32     %r2705 <- 8[%r2703]
	setne.32    %r2707 <- %r2705, $0
	symaddr.64  %r2709 <- dummynode_
	seteq.32    %r2710 <- %r2703, %r2709
	or-bool.32  %r2711 <- %r2707, %r2710
	phisrc.64   %phi462(mp) <- %r2703
	br          %r2711, .L534, .L535

.L534:
	call.64     %r2713 <- getfreepos, %arg2
	br          %r2713, .L537, .L536

.L536:
	call        rehash, %arg1, %arg2, %arg3
	call.64     %r2722 <- luaH_set, %arg1, %arg2, %arg3
	phisrc.64   %phi459(return) <- %r2722
	br          .L538

.L537:
	add.64      %r2726 <- %r2703, $16
	call.64     %r2728 <- mainposition, %arg2, %r2726
	setne.32    %r2731 <- %r2728, %r2703
	phisrc.64   %phi471(othern) <- %r2728
	br          %r2731, .L544, .L540

.L544:
	phi.64      %r2732(othern) <- %phi471(othern), %phi472(othern)
	load.64     %r2733 <- 32[%r2732(othern)]
	setne.32    %r2735 <- %r2733, %r2703
	br          %r2735, .L541, .L543

.L541:
	phisrc.64   %phi472(othern) <- %r2733
	br          .L544

.L543:
	store.64    %r2713 -> 32[%r2732(othern)]
	load.320    %r2741 <- 0[%r2703]
	store.320   %r2741 -> 0[%r2713]
	store.64    $0 -> 32[%r2703]
	store.32    $0 -> 8[%r2703]
	phisrc.64   %phi463(mp) <- %r2703
	br          .L535

.L540:
	load.64     %r2746 <- 32[%r2703]
	store.64    %r2746 -> 32[%r2713]
	store.64    %r2713 -> 32[%r2703]
	phisrc.64   %phi464(mp) <- %r2713
	br          .L535

.L535:
	load.64     %r2752 <- 0[%arg3]
	phi.64      %r2753 <- %phi462(mp), %phi463(mp), %phi464(mp)
	store.64    %r2752 -> 16[%r2753]
	load.32     %r2755 <- 8[%arg3]
	store.32    %r2755 -> 24[%r2753]
	load.32     %r2759 <- 8[%arg3]
	setge.32    %r2761 <- %r2759, $4
	br          %r2761, .L549, .L547

.L549:
	load.64     %r2763 <- 0[%arg3]
	load.8      %r2764 <- 9[%r2763]
	cast.32     %r2765 <- (8) %r2764
	and.32      %r2766 <- %r2765, $3
	br          %r2766, .L548, .L547

.L548:
	ptrcast.64  %r2768 <- (64) %arg2
	load.8      %r2769 <- 9[%r2768]
	cast.32     %r2770 <- (8) %r2769
	and.32      %r2771 <- %r2770, $4
	br          %r2771, .L546, .L547

.L546:
	call        luaC_barrierback, %arg1, %arg2
	br          .L547

.L547:
	phisrc.64   %phi460(return) <- %r2753
	br          .L538

.L538:
	phi.64      %r2723 <- %phi459(return), %phi460(return)
	ret.64      %r2723


luaH_getnum:
.L550:
	<entry-point>
	add.32      %r2778 <- %arg2, $-1
	load.32     %r2780 <- 56[%arg1]
	setb.32     %r2782 <- %r2778, %r2780
	br          %r2782, .L551, .L552

.L551:
	load.64     %r2784 <- 24[%arg1]
	add.32      %r2786 <- %arg2, $-1
	scast.64    %r2787 <- (32) %r2786
	muls.64     %r2788 <- %r2787, $16
	add.64      %r2789 <- %r2784, %r2788
	phisrc.64   %phi474(return) <- %r2789
	br          .L553

.L552:
	fpcast.64   %r2792 <- (32) %arg2
	call.64     %r2795(n) <- hashnum, %arg1, %r2792
	phisrc.64   %phi482(n) <- %r2795(n)
	br          .L555

.L555:
	phi.64      %r2796(n) <- %phi482(n), %phi483(n)
	load.32     %r2797 <- 24[%r2796(n)]
	seteq.32    %r2798 <- %r2797, $3
	br          %r2798, .L560, .L559

.L560:
	load.64     %r2800 <- 16[%r2796(n)]
	seteq.32    %r2802 <- %r2800, %r2792
	br          %r2802, .L558, .L559

.L558:
	phisrc.64   %phi475(return) <- %r2796(n)
	br          .L553

.L559:
	load.64     %r2806(n) <- 32[%r2796(n)]
	phisrc.64   %phi483(n) <- %r2806(n)
	br          %r2806(n), .L555, .L557

.L557:
	symaddr.64  %r2808 <- luaO_nilobject_
	phisrc.64   %phi476(return) <- %r2808
	br          .L553

.L553:
	phi.64      %r2790 <- %phi474(return), %phi475(return), %phi476(return)
	ret.64      %r2790


luaH_getstr:
.L562:
	<entry-point>
	load.64     %r2810 <- 32[%arg1]
	load.32     %r2812 <- 12[%arg2]
	cast.64     %r2813 <- (32) %r2812
	load.8      %r2815 <- 11[%arg1]
	cast.32     %r2816 <- (8) %r2815
	shl.64      %r2817 <- $1, %r2816
	add.64      %r2818 <- %r2817, $-1
	and.64      %r2819 <- %r2813, %r2818
	cast.32     %r2820 <- (64) %r2819
	scast.64    %r2821 <- (32) %r2820
	muls.64     %r2822 <- %r2821, $40
	add.64      %r2823(n) <- %r2810, %r2822
	phisrc.64   %phi491(n) <- %r2823(n)
	br          .L563

.L563:
	phi.64      %r2824(n) <- %phi491(n), %phi492(n)
	load.32     %r2825 <- 24[%r2824(n)]
	seteq.32    %r2826 <- %r2825, $4
	br          %r2826, .L568, .L567

.L568:
	load.64     %r2828 <- 16[%r2824(n)]
	seteq.32    %r2831 <- %r2828, %arg2
	br          %r2831, .L566, .L567

.L566:
	phisrc.64   %phi484(return) <- %r2824(n)
	br          .L569

.L567:
	load.64     %r2836(n) <- 32[%r2824(n)]
	phisrc.64   %phi492(n) <- %r2836(n)
	br          %r2836(n), .L563, .L565

.L565:
	symaddr.64  %r2838 <- luaO_nilobject_
	phisrc.64   %phi485(return) <- %r2838
	br          .L569

.L569:
	phi.64      %r2834 <- %phi484(return), %phi485(return)
	ret.64      %r2834


luaH_get:
.L571:
	<entry-point>
	load.32     %r2840 <- 8[%arg2]
	switch      %r2840, 0 -> .L573, 3 -> .L575, 4 -> .L574, default -> .L576

.L573:
	symaddr.64  %r2841 <- luaO_nilobject_
	phisrc.64   %phi493(return) <- %r2841
	br          .L577

.L574:
	load.64     %r2845 <- 0[%arg2]
	call.64     %r2847 <- luaH_getstr, %arg1, %r2845
	phisrc.64   %phi494(return) <- %r2847
	br          .L577

.L575:
	load.64     %r2849 <- 0[%arg2]
	cast.32     %r2852 <- (64) %r2849
	fpcast.64   %r2854 <- (32) %r2852
	seteq.32    %r2858 <- %r2854, %r2849
	br          %r2858, .L578, .L576

.L578:
	call.64     %r2861 <- luaH_getnum, %arg1, %r2852
	phisrc.64   %phi495(return) <- %r2861
	br          .L577

.L576:
	call.64     %r2864(n) <- mainposition, %arg1, %arg2
	phisrc.64   %phi501(n) <- %r2864(n)
	br          .L580

.L580:
	phi.64      %r2865(n) <- %phi501(n), %phi502(n)
	add.64      %r2866 <- %r2865(n), $16
	call.32     %r2869 <- luaO_rawequalObj, %r2866, %arg2
	br          %r2869, .L583, .L584

.L583:
	phisrc.64   %phi496(return) <- %r2865(n)
	br          .L577

.L584:
	load.64     %r2873(n) <- 32[%r2865(n)]
	phisrc.64   %phi502(n) <- %r2873(n)
	br          %r2873(n), .L580, .L582

.L582:
	symaddr.64  %r2875 <- luaO_nilobject_
	phisrc.64   %phi497(return) <- %r2875
	br          .L577

.L577:
	phi.64      %r2842 <- %phi493(return), %phi494(return), %phi495(return), %phi496(return), %phi497(return)
	ret.64      %r2842


luaH_set:
.L586:
	<entry-point>
	call.64     %r2878 <- luaH_get, %arg2, %arg3
	store.8     $0 -> 10[%arg2]
	symaddr.64  %r2881 <- luaO_nilobject_
	setne.32    %r2882 <- %r2878, %r2881
	br          %r2882, .L587, .L588

.L587:
	ptrcast.64  %r2884 <- (64) %r2878
	phisrc.64   %phi503(return) <- %r2884
	br          .L589

.L588:
	load.32     %r2887 <- 8[%arg3]
	br          %r2887, .L593, .L591

.L591:
	symaddr.64  %r2891 <- <anon symbol:0x62d001150eb0>
	call        luaG_runerror, %arg1, %r2891
	br          .L593

.L593:
	call.64     %r2908 <- newkey, %arg1, %arg2, %arg3
	phisrc.64   %phi504(return) <- %r2908
	br          .L589

.L589:
	phi.64      %r2885 <- %phi503(return), %phi504(return)
	ret.64      %r2885


luaH_setnum:
.L597:
	<entry-point>
	call.64     %r2911 <- luaH_getnum, %arg2, %arg3
	symaddr.64  %r2913 <- luaO_nilobject_
	setne.32    %r2914 <- %r2911, %r2913
	br          %r2914, .L598, .L599

.L598:
	ptrcast.64  %r2916 <- (64) %r2911
	phisrc.64   %phi506(return) <- %r2916
	br          .L600

.L599:
	fpcast.64   %r2920 <- (32) %arg3
	store.64    %r2920 -> 0[k]
	store.32    $3 -> 8[k]
	symaddr.64  %r2925 <- k
	call.64     %r2926 <- newkey, %arg1, %arg2, %r2925
	phisrc.64   %phi507(return) <- %r2926
	br          .L600

.L600:
	phi.64      %r2917 <- %phi506(return), %phi507(return)
	ret.64      %r2917


luaH_setstr:
.L602:
	<entry-point>
	call.64     %r2929 <- luaH_getstr, %arg2, %arg3
	symaddr.64  %r2931 <- luaO_nilobject_
	setne.32    %r2932 <- %r2929, %r2931
	br          %r2932, .L603, .L604

.L603:
	ptrcast.64  %r2934 <- (64) %r2929
	phisrc.64   %phi508(return) <- %r2934
	br          .L605

.L604:
	ptrcast.64  %r2938 <- (64) %arg3
	store.64    %r2938 -> 0[k]
	store.32    $4 -> 8[k]
	symaddr.64  %r2943 <- k
	call.64     %r2944 <- newkey, %arg1, %arg2, %r2943
	phisrc.64   %phi509(return) <- %r2944
	br          .L605

.L605:
	phi.64      %r2935 <- %phi508(return), %phi509(return)
	ret.64      %r2935


unbound_search:
.L607:
	<entry-point>
	add.32      %r2947(j) <- %arg2, $1
	phisrc.32   %phi516(j) <- %r2947(j)
	phisrc.32   %phi520(i) <- %arg2
	br          .L611

.L611:
	phi.32      %r2949(j) <- %phi516(j), %phi517(j)
	call.64     %r2951 <- luaH_getnum, %arg1, %r2949(j)
	load.32     %r2952 <- 8[%r2951]
	phisrc.32   %phi513(j) <- %r2949(j)
	br          %r2952, .L608, .L622

.L608:
	mulu.32     %r2958 <- %r2949(j), $2
	seta.32     %r2961 <- %r2958, $0x7ffffffd
	phisrc.32   %phi517(j) <- %r2958
	phisrc.32   %phi521(i) <- %r2949(j)
	br          %r2961, .L612, .L611

.L612:
	phisrc.32   %phi525(i) <- $1
	br          .L617

.L617:
	phi.32      %r2963(i) <- %phi525(i), %phi526(i)
	call.64     %r2965 <- luaH_getnum, %arg1, %r2963(i)
	load.32     %r2966 <- 8[%r2965]
	br          %r2966, .L614, .L616

.L614:
	add.32      %r2970 <- %r2963(i), $1
	phisrc.32   %phi526(i) <- %r2970
	br          .L617

.L616:
	add.32      %r2972 <- %r2963(i), $-1
	phisrc.32   %phi510(return) <- %r2972
	br          .L618

.L622:
	phi.32      %r2975(j) <- %phi513(j), %phi514(j)
	phi.32      %r2976(i) <- %phi520(i), %phi521(i), %phi522(i)
	sub.32      %r2977 <- %r2975(j), %r2976(i)
	seta.32     %r2978 <- %r2977, $1
	br          %r2978, .L619, .L621

.L619:
	add.32      %r2981 <- %r2976(i), %r2975(j)
	divu.32     %r2982 <- %r2981, $2
	call.64     %r2986 <- luaH_getnum, %arg1, %r2982
	load.32     %r2987 <- 8[%r2986]
	br          %r2987, .L624, .L623

.L623:
	phisrc.32   %phi514(j) <- %r2982
	br          .L622

.L624:
	phisrc.32   %phi522(i) <- %r2982
	br          .L622

.L621:
	phisrc.32   %phi511(return) <- %r2976(i)
	br          .L618

.L618:
	phi.32      %r2974 <- %phi510(return), %phi511(return)
	ret.32      %r2974


luaH_getn:
.L626:
	<entry-point>
	load.32     %r2995 <- 56[%arg1]
	seta.32     %r2998 <- %r2995, $0
	br          %r2998, .L629, .L628

.L629:
	load.64     %r3000 <- 24[%arg1]
	add.32      %r3002 <- %r2995, $-1
	cast.64     %r3003 <- (32) %r3002
	muls.64     %r3004 <- %r3003, $16
	add.64      %r3005 <- %r3000, %r3004
	load.32     %r3006 <- 8[%r3005]
	phisrc.32   %phi535(j) <- %r2995
	br          %r3006, .L628, .L627

.L627:
	phisrc.32   %phi540(i) <- $0
	br          .L633

.L633:
	phi.32      %r3008(j) <- %phi535(j), %phi536(j)
	phi.32      %r3009(i) <- %phi540(i), %phi541(i)
	sub.32      %r3010 <- %r3008(j), %r3009(i)
	seta.32     %r3011 <- %r3010, $1
	br          %r3011, .L630, .L632

.L630:
	add.32      %r3014 <- %r3009(i), %r3008(j)
	divu.32     %r3015 <- %r3014, $2
	add.32      %r3019 <- %r3015, $-1
	cast.64     %r3020 <- (32) %r3019
	muls.64     %r3021 <- %r3020, $16
	add.64      %r3022 <- %r3000, %r3021
	load.32     %r3023 <- 8[%r3022]
	br          %r3023, .L635, .L634

.L634:
	phisrc.32   %phi536(j) <- %r3015
	br          .L633

.L635:
	phisrc.32   %phi541(i) <- %r3015
	br          .L633

.L632:
	phisrc.32   %phi527(return) <- %r3009(i)
	br          .L637

.L628:
	load.64     %r3031 <- 32[%arg1]
	symaddr.64  %r3032 <- dummynode_
	seteq.32    %r3033 <- %r3031, %r3032
	br          %r3033, .L639, .L640

.L639:
	phisrc.32   %phi528(return) <- %r2995
	br          .L637

.L640:
	call.32     %r3038 <- unbound_search, %arg1, %r2995
	phisrc.32   %phi529(return) <- %r3038
	br          .L637

.L637:
	phi.32      %r3029 <- %phi527(return), %phi528(return), %phi529(return)
	ret.32      %r3029


removeentry:
.L642:
	<entry-point>
	load.32     %r3040 <- 24[%arg1]
	setge.32    %r3041 <- %r3040, $4
	br          %r3041, .L643, .L644

.L643:
	store.32    $11 -> 24[%arg1]
	br          .L644

.L644:
	ret


reallymarkobject:
.L645:
	<entry-point>
	load.8      %r3044 <- 9[%arg2]
	cast.32     %r3045 <- (8) %r3044
	and.32      %r3046 <- %r3045, $252
	scast.8     %r3047 <- (32) %r3046
	store.8     %r3047 -> 9[%arg2]
	load.8      %r3049 <- 8[%arg2]
	phisrc.8    %phi543 <- %r3047
	phisrc.8    %phi550 <- %r3047
	switch      %r3049, 4 -> .L655, 5 -> .L651, 6 -> .L650, 7 -> .L648, 8 -> .L652, 9 -> .L653, 10 -> .L649, default -> .L655

.L648:
	load.64     %r3051 <- 16[%arg2]
	cast.32     %r3054 <- (8) %r3047
	or.32       %r3055 <- %r3054, $4
	scast.8     %r3056 <- (32) %r3055
	store.8     %r3056 -> 9[%arg2]
	br          %r3051, .L656, .L657

.L656:
	ptrcast.64  %r3059 <- (64) %r3051
	load.8      %r3060 <- 9[%r3059]
	cast.32     %r3061 <- (8) %r3060
	and.32      %r3062 <- %r3061, $3
	br          %r3062, .L658, .L657

.L658:
	call        reallymarkobject, %arg1, %r3059
	br          .L657

.L657:
	load.64     %r3067 <- 24[%arg2]
	ptrcast.64  %r3068 <- (64) %r3067
	load.8      %r3069 <- 9[%r3068]
	cast.32     %r3070 <- (8) %r3069
	and.32      %r3071 <- %r3070, $3
	br          %r3071, .L660, .L655

.L660:
	call        reallymarkobject, %arg1, %r3068
	br          .L655

.L649:
	load.64     %r3079 <- 16[%arg2]
	load.32     %r3080 <- 8[%r3079]
	setge.32    %r3081 <- %r3080, $4
	phisrc.64   %phi544 <- %r3079
	phisrc.64   %phi551 <- %r3079
	phisrc.64   %phi552 <- %r3079
	br          %r3081, .L664, .L663

.L664:
	load.64     %r3084 <- 0[%r3079]
	load.8      %r3085 <- 9[%r3084]
	cast.32     %r3086 <- (8) %r3085
	and.32      %r3087 <- %r3086, $3
	phisrc.64   %phi545 <- %r3079
	br          %r3087, .L662, .L663

.L662:
	call        reallymarkobject, %arg1, %r3084
	br          .L663

.L663:
	load.64     %r3093 <- 16[%arg2]
	add.64      %r3095 <- %arg2, $24
	seteq.32    %r3097 <- %r3093, %r3095
	br          %r3097, .L665, .L655

.L665:
	load.8      %r3099 <- 9[%arg2]
	cast.32     %r3100 <- (8) %r3099
	or.32       %r3101 <- %r3100, $4
	scast.8     %r3102 <- (32) %r3101
	store.8     %r3102 -> 9[%arg2]
	br          .L655

.L650:
	load.64     %r3104 <- 56[%arg1]
	store.64    %r3104 -> 16[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L651:
	load.64     %r3109 <- 56[%arg1]
	store.64    %r3109 -> 48[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L652:
	load.64     %r3114 <- 56[%arg1]
	store.64    %r3114 -> 160[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L653:
	load.64     %r3119 <- 56[%arg1]
	store.64    %r3119 -> 104[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L655:
	ret


marktmu:
.L667:
	<entry-point>
	load.64     %r3124 <- 80[%arg1]
	phisrc.64   %phi555(u) <- %r3124
	br          %r3124, .L670, .L669

.L670:
	phi.64      %r3126 <- %phi555(u), %phi556(u)
	load.64     %r3127 <- 0[%r3126]
	load.8      %r3129 <- 9[%r3127]
	cast.32     %r3130 <- (8) %r3129
	and.32      %r3131 <- %r3130, $248
	load.8      %r3133 <- 32[%arg1]
	cast.32     %r3134 <- (8) %r3133
	and.32      %r3135 <- %r3134, $3
	or.32       %r3138 <- %r3131, %r3135
	scast.8     %r3139 <- (32) %r3138
	store.8     %r3139 -> 9[%r3127]
	call        reallymarkobject, %arg1, %r3127
	phisrc.64   %phi556(u) <- %r3127
	load.64     %r3145 <- 80[%arg1]
	setne.32    %r3146 <- %r3127, %r3145
	br          %r3146, .L670, .L669

.L669:
	ret


luaC_separateudata:
.L673:
	<entry-point>
	load.64     %r3148 <- 32[%arg1]
	load.64     %r3150 <- 176[%r3148]
	phisrc.64   %phi562(deadmem) <- $0
	phisrc.64   %phi564(deadmem) <- $0
	phisrc.64   %phi567(p) <- %r3150
	phisrc.64   %phi573 <- %r3148
	phisrc.64   %phi579 <- %r3148
	phisrc.64   %phi582 <- %r3148
	phisrc.64   %phi585 <- %r3148
	phisrc.64   %phi586 <- %r3148
	phisrc.64   %phi587 <- %r3148
	br          .L677

.L677:
	phi.64      %r3152(p) <- %phi567(p), %phi568(p), %phi569(p)
	load.64     %r3153 <- 0[%r3152(p)]
	br          %r3153, .L674, .L676

.L674:
	load.8      %r3156 <- 9[%r3153]
	cast.32     %r3157 <- (8) %r3156
	and.32      %r3158 <- %r3157, $3
	or-bool.32  %r3160 <- %r3158, %arg2
	phisrc.8    %phi577 <- %r3156
	phisrc.8    %phi578 <- %r3156
	phisrc.8    %phi580 <- %r3156
	phisrc.8    %phi581 <- %r3156
	phisrc.8    %phi583 <- %r3156
	phisrc.8    %phi584 <- %r3156
	br          %r3160, .L680, .L678

.L680:
	cast.32     %r3163 <- (8) %r3156
	and.32      %r3164 <- %r3163, $8
	phisrc.8    %phi571 <- %r3156
	phisrc.8    %phi572 <- %r3156
	br          %r3164, .L678, .L679

.L678:
	phisrc.64   %phi568(p) <- %r3153
	br          .L677

.L679:
	load.64     %r3169 <- 16[%r3153]
	br          %r3169, .L685, .L682

.L685:
	load.8      %r3173 <- 10[%r3169]
	cast.32     %r3174 <- (8) %r3173
	and.32      %r3175 <- %r3174, $4
	br          %r3175, .L682, .L688

.L688:
	load.64     %r3179 <- 32[%arg1]
	load.64     %r3180 <- 312[%r3179]
	call.64     %r3181 <- luaT_gettm, %r3169, $2, %r3180
	br          %r3181, .L683, .L682

.L682:
	load.8      %r3186 <- 9[%r3153]
	cast.32     %r3187 <- (8) %r3186
	or.32       %r3188 <- %r3187, $8
	scast.8     %r3189 <- (32) %r3188
	store.8     %r3189 -> 9[%r3153]
	phisrc.64   %phi569(p) <- %r3153
	br          .L677

.L683:
	load.64     %r3194 <- 32[%r3153]
	add.64      %r3195 <- %r3194, $40
	phi.64      %r3196 <- %phi564(deadmem), %phi565(deadmem)
	add.64      %r3198 <- %r3196, %r3195
	load.8      %r3201 <- 9[%r3153]
	cast.32     %r3202 <- (8) %r3201
	or.32       %r3203 <- %r3202, $8
	scast.8     %r3204 <- (32) %r3203
	store.8     %r3204 -> 9[%r3153]
	load.64     %r3206 <- 0[%r3153]
	store.64    %r3206 -> 0[%r3152(p)]
	load.64     %r3209 <- 80[%r3148]
	phisrc.64   %phi563(deadmem) <- %r3198
	phisrc.64   %phi565(deadmem) <- %r3198
	br          %r3209, .L692, .L691

.L691:
	store.64    %r3153 -> 0[%r3153]
	store.64    %r3153 -> 80[%r3148]
	br          .L677

.L692:
	load.64     %r3216 <- 0[%r3209]
	store.64    %r3216 -> 0[%r3153]
	load.64     %r3220 <- 80[%r3148]
	store.64    %r3153 -> 0[%r3220]
	store.64    %r3153 -> 80[%r3148]
	br          .L677

.L676:
	phi.64      %r3223 <- %phi562(deadmem), %phi563(deadmem)
	ret.64      %r3223


traversetable:
.L695:
	<entry-point>
	load.64     %r3226 <- 16[%arg2]
	phisrc.32   %phi597(weakkey) <- $0
	phisrc.32   %phi605(weakvalue) <- $0
	phisrc.64   %phi624 <- %r3226
	phisrc.64   %phi630 <- %r3226
	phisrc.64   %phi631 <- %r3226
	phisrc.64   %phi633 <- %r3226
	phisrc.64   %phi634 <- %r3226
	phisrc.64   %phi636 <- %r3226
	phisrc.64   %phi637 <- %r3226
	phisrc.64   %phi639 <- %r3226
	phisrc.64   %phi640 <- %r3226
	phisrc.64   %phi642 <- %r3226
	phisrc.64   %phi643 <- %r3226
	br          %r3226, .L696, .L697

.L696:
	ptrcast.64  %r3229 <- (64) %r3226
	load.8      %r3230 <- 9[%r3229]
	cast.32     %r3231 <- (8) %r3230
	and.32      %r3232 <- %r3231, $3
	phisrc.64   %phi625 <- %r3226
	br          %r3232, .L698, .L697

.L698:
	ptrcast.64  %r3236 <- (64) %r3226
	call        reallymarkobject, %arg1, %r3236
	br          .L697

.L697:
	load.64     %r3238 <- 16[%arg2]
	br          %r3238, .L701, .L707

.L701:
	load.8      %r3242 <- 10[%r3238]
	cast.32     %r3243 <- (8) %r3242
	and.32      %r3244 <- %r3243, $8
	br          %r3244, .L707, .L704

.L704:
	load.64     %r3248 <- 320[%arg1]
	call.64     %r3249 <- luaT_gettm, %r3238, $3, %r3248
	br          %r3249, .L708, .L707

.L708:
	load.32     %r3254 <- 8[%r3249]
	seteq.32    %r3256 <- %r3254, $4
	br          %r3256, .L706, .L707

.L706:
	load.64     %r3258 <- 0[%r3249]
	add.64      %r3260 <- %r3258, $24
	ptrcast.64  %r3261 <- (64) %r3260
	call.64     %r3262 <- strchr, %r3261, $107
	setne.32    %r3263 <- %r3262, $0
	load.64     %r3265 <- 0[%r3249]
	add.64      %r3267 <- %r3265, $24
	ptrcast.64  %r3268 <- (64) %r3267
	call.64     %r3269 <- strchr, %r3268, $118
	setne.32    %r3270 <- %r3269, $0
	or-bool.32  %r3273 <- %r3263, %r3270
	phisrc.32   %phi598(weakkey) <- %r3263
	phisrc.32   %phi606(weakvalue) <- %r3270
	br          %r3273, .L709, .L707

.L709:
	load.8      %r3275 <- 9[%arg2]
	cast.32     %r3276 <- (8) %r3275
	and.32      %r3277 <- %r3276, $0xffffffe7
	scast.8     %r3278 <- (32) %r3277
	shl.32      %r3280 <- %r3263, $3
	shl.32      %r3282 <- %r3270, $4
	or.32       %r3283 <- %r3280, %r3282
	scast.8     %r3284 <- (32) %r3283
	cast.32     %r3285 <- (8) %r3284
	cast.32     %r3288 <- (8) %r3278
	or.32       %r3289 <- %r3288, %r3285
	scast.8     %r3290 <- (32) %r3289
	store.8     %r3290 -> 9[%arg2]
	load.64     %r3292 <- 72[%arg1]
	store.64    %r3292 -> 48[%arg2]
	ptrcast.64  %r3295 <- (64) %arg2
	store.64    %r3295 -> 72[%arg1]
	phisrc.32   %phi599(weakkey) <- %r3263
	phisrc.32   %phi607(weakvalue) <- %r3270
	br          .L707

.L707:
	phi.32      %r3297(weakkey) <- %phi597(weakkey), %phi598(weakkey), %phi599(weakkey)
	phi.32      %r3298(weakvalue) <- %phi605(weakvalue), %phi606(weakvalue), %phi607(weakvalue)
	and-bool.32 %r3299 <- %r3297(weakkey), %r3298(weakvalue)
	br          %r3299, .L711, .L712

.L711:
	phisrc.32   %phi592(return) <- $1
	br          .L713

.L712:
	br          %r3298(weakvalue), .L715, .L714

.L714:
	load.32     %r3303(i) <- 56[%arg2]
	phisrc.32   %phi615(i) <- %r3303(i)
	br          .L719

.L719:
	phi.32      %r3304 <- %phi615(i), %phi616(i)
	add.32      %r3305(i) <- %r3304, $-1
	phisrc.32   %phi616(i) <- %r3305(i)
	br          %r3304, .L716, .L715

.L716:
	load.64     %r3307 <- 24[%arg2]
	scast.64    %r3309 <- (32) %r3305(i)
	muls.64     %r3310 <- %r3309, $16
	add.64      %r3311 <- %r3307, %r3310
	load.32     %r3312 <- 8[%r3311]
	setge.32    %r3313 <- %r3312, $4
	br          %r3313, .L722, .L719

.L722:
	load.64     %r3320 <- 0[%r3311]
	load.8      %r3321 <- 9[%r3320]
	cast.32     %r3322 <- (8) %r3321
	and.32      %r3323 <- %r3322, $3
	br          %r3323, .L720, .L719

.L720:
	call        reallymarkobject, %arg1, %r3320
	br          .L719

.L715:
	load.8      %r3333 <- 11[%arg2]
	cast.32     %r3334 <- (8) %r3333
	shl.64      %r3335 <- $1, %r3334
	cast.32     %r3336(i) <- (64) %r3335
	phisrc.32   %phi610(i) <- %r3336(i)
	br          .L726

.L726:
	phi.32      %r3337 <- %phi610(i), %phi611(i)
	add.32      %r3338(i) <- %r3337, $-1
	phisrc.32   %phi611(i) <- %r3338(i)
	br          %r3337, .L723, .L725

.L723:
	load.64     %r3340 <- 32[%arg2]
	scast.64    %r3342 <- (32) %r3338(i)
	muls.64     %r3343 <- %r3342, $40
	add.64      %r3344 <- %r3340, %r3343
	load.32     %r3346 <- 8[%r3344]
	phisrc.32   %phi618 <- %r3346
	phisrc.32   %phi628 <- %r3346
	phisrc.32   %phi632 <- %r3346
	phisrc.32   %phi635 <- %r3346
	phisrc.32   %phi638 <- %r3346
	phisrc.32   %phi641 <- %r3346
	br          %r3346, .L728, .L727

.L727:
	call        removeentry, %r3344
	br          .L726

.L728:
	br          %r3297(weakkey), .L731, .L730

.L730:
	load.32     %r3351 <- 24[%r3344]
	setge.32    %r3352 <- %r3351, $4
	br          %r3352, .L734, .L731

.L734:
	load.64     %r3354 <- 16[%r3344]
	load.8      %r3355 <- 9[%r3354]
	cast.32     %r3356 <- (8) %r3355
	and.32      %r3357 <- %r3356, $3
	br          %r3357, .L732, .L731

.L732:
	call        reallymarkobject, %arg1, %r3354
	br          .L731

.L731:
	br          %r3298(weakvalue), .L726, .L735

.L735:
	load.32     %r3363 <- 8[%r3344]
	setge.32    %r3364 <- %r3363, $4
	br          %r3364, .L739, .L726

.L739:
	load.64     %r3366 <- 0[%r3344]
	load.8      %r3367 <- 9[%r3366]
	cast.32     %r3368 <- (8) %r3367
	and.32      %r3369 <- %r3368, $3
	br          %r3369, .L737, .L726

.L737:
	call        reallymarkobject, %arg1, %r3366
	br          .L726

.L725:
	or-bool.32  %r3375 <- %r3297(weakkey), %r3298(weakvalue)
	phisrc.32   %phi593(return) <- %r3375
	br          .L713

.L713:
	phi.32      %r3300 <- %phi592(return), %phi593(return)
	ret.32      %r3300


traverseproto:
.L740:
	<entry-point>
	load.64     %r3377 <- 64[%arg2]
	br          %r3377, .L741, .L742

.L741:
	load.8      %r3380 <- 9[%r3377]
	cast.32     %r3381 <- (8) %r3380
	and.32      %r3382 <- %r3381, $252
	scast.8     %r3383 <- (32) %r3382
	store.8     %r3383 -> 9[%r3377]
	br          .L742

.L742:
	phisrc.32   %phi670(i) <- $0
	br          .L746

.L746:
	phi.32      %r3384(i) <- %phi670(i), %phi671(i)
	load.32     %r3386 <- 76[%arg2]
	setlt.32    %r3387 <- %r3384(i), %r3386
	br          %r3387, .L743, .L745

.L743:
	load.64     %r3389 <- 16[%arg2]
	scast.64    %r3391 <- (32) %r3384(i)
	muls.64     %r3392 <- %r3391, $16
	add.64      %r3393 <- %r3389, %r3392
	load.32     %r3394 <- 8[%r3393]
	setge.32    %r3395 <- %r3394, $4
	br          %r3395, .L749, .L744

.L749:
	load.64     %r3402 <- 0[%r3393]
	load.8      %r3403 <- 9[%r3402]
	cast.32     %r3404 <- (8) %r3403
	and.32      %r3405 <- %r3404, $3
	br          %r3405, .L747, .L744

.L747:
	call        reallymarkobject, %arg1, %r3402
	br          .L744

.L744:
	add.32      %r3415 <- %r3384(i), $1
	phisrc.32   %phi671(i) <- %r3415
	br          .L746

.L745:
	phisrc.32   %phi662(i) <- $0
	br          .L753

.L753:
	phi.32      %r3416(i) <- %phi662(i), %phi663(i)
	load.32     %r3418 <- 72[%arg2]
	setlt.32    %r3419 <- %r3416(i), %r3418
	br          %r3419, .L750, .L752

.L750:
	load.64     %r3421 <- 56[%arg2]
	scast.64    %r3423 <- (32) %r3416(i)
	muls.64     %r3424 <- %r3423, $8
	add.64      %r3425 <- %r3421, %r3424
	load.64     %r3426 <- 0[%r3425]
	br          %r3426, .L754, .L751

.L754:
	load.8      %r3434 <- 9[%r3426]
	cast.32     %r3435 <- (8) %r3434
	and.32      %r3436 <- %r3435, $252
	scast.8     %r3437 <- (32) %r3436
	store.8     %r3437 -> 9[%r3426]
	br          .L751

.L751:
	add.32      %r3439 <- %r3416(i), $1
	phisrc.32   %phi663(i) <- %r3439
	br          .L753

.L752:
	phisrc.32   %phi656(i) <- $0
	br          .L759

.L759:
	phi.32      %r3440(i) <- %phi656(i), %phi657(i)
	load.32     %r3442 <- 88[%arg2]
	setlt.32    %r3443 <- %r3440(i), %r3442
	br          %r3443, .L756, .L758

.L756:
	load.64     %r3445 <- 32[%arg2]
	scast.64    %r3447 <- (32) %r3440(i)
	muls.64     %r3448 <- %r3447, $8
	add.64      %r3449 <- %r3445, %r3448
	load.64     %r3450 <- 0[%r3449]
	br          %r3450, .L760, .L757

.L760:
	ptrcast.64  %r3458 <- (64) %r3450
	load.8      %r3459 <- 9[%r3458]
	cast.32     %r3460 <- (8) %r3459
	and.32      %r3461 <- %r3460, $3
	br          %r3461, .L762, .L757

.L762:
	ptrcast.64  %r3470 <- (64) %r3450
	call        reallymarkobject, %arg1, %r3470
	br          .L757

.L757:
	add.32      %r3472 <- %r3440(i), $1
	phisrc.32   %phi657(i) <- %r3472
	br          .L759

.L758:
	phisrc.32   %phi648(i) <- $0
	br          .L767

.L767:
	phi.32      %r3473(i) <- %phi648(i), %phi649(i)
	load.32     %r3475 <- 92[%arg2]
	setlt.32    %r3476 <- %r3473(i), %r3475
	br          %r3476, .L764, .L766

.L764:
	load.64     %r3478 <- 48[%arg2]
	scast.64    %r3480 <- (32) %r3473(i)
	muls.64     %r3481 <- %r3480, $16
	add.64      %r3482 <- %r3478, %r3481
	load.64     %r3483 <- 0[%r3482]
	br          %r3483, .L768, .L765

.L768:
	load.8      %r3491 <- 9[%r3483]
	cast.32     %r3492 <- (8) %r3491
	and.32      %r3493 <- %r3492, $252
	scast.8     %r3494 <- (32) %r3493
	store.8     %r3494 -> 9[%r3483]
	br          .L765

.L765:
	add.32      %r3496 <- %r3473(i), $1
	phisrc.32   %phi649(i) <- %r3496
	br          .L767

.L766:
	ret


traverseclosure:
.L770:
	<entry-point>
	load.64     %r3498 <- 24[%arg2]
	ptrcast.64  %r3499 <- (64) %r3498
	load.8      %r3500 <- 9[%r3499]
	cast.32     %r3501 <- (8) %r3500
	and.32      %r3502 <- %r3501, $3
	br          %r3502, .L771, .L772

.L771:
	ptrcast.64  %r3506 <- (64) %r3498
	call        reallymarkobject, %arg1, %r3506
	br          .L772

.L772:
	load.8      %r3508 <- 10[%arg2]
	br          %r3508, .L773, .L774

.L773:
	phisrc.32   %phi690(i) <- $0
	br          .L778

.L778:
	phi.32      %r3509(i) <- %phi690(i), %phi691(i)
	load.8      %r3511 <- 11[%arg2]
	cast.32     %r3512 <- (8) %r3511
	setlt.32    %r3513 <- %r3509(i), %r3512
	br          %r3513, .L775, .L782

.L775:
	add.64      %r3516 <- %arg2, $40
	scast.64    %r3518 <- (32) %r3509(i)
	muls.64     %r3519 <- %r3518, $16
	add.64      %r3520 <- %r3516, %r3519
	load.32     %r3521 <- 8[%r3520]
	setge.32    %r3522 <- %r3521, $4
	br          %r3522, .L781, .L776

.L781:
	load.64     %r3530 <- 0[%r3520]
	load.8      %r3531 <- 9[%r3530]
	cast.32     %r3532 <- (8) %r3531
	and.32      %r3533 <- %r3532, $3
	br          %r3533, .L779, .L776

.L779:
	call        reallymarkobject, %arg1, %r3530
	br          .L776

.L776:
	add.32      %r3544 <- %r3509(i), $1
	phisrc.32   %phi691(i) <- %r3544
	br          .L778

.L774:
	load.64     %r3546 <- 32[%arg2]
	ptrcast.64  %r3547 <- (64) %r3546
	load.8      %r3548 <- 9[%r3547]
	cast.32     %r3549 <- (8) %r3548
	and.32      %r3550 <- %r3549, $3
	br          %r3550, .L783, .L784

.L783:
	ptrcast.64  %r3554 <- (64) %r3546
	call        reallymarkobject, %arg1, %r3554
	br          .L784

.L784:
	phisrc.32   %phi696(i) <- $0
	br          .L788

.L788:
	phi.32      %r3555(i) <- %phi696(i), %phi697(i)
	load.8      %r3557 <- 11[%arg2]
	cast.32     %r3558 <- (8) %r3557
	setlt.32    %r3559 <- %r3555(i), %r3558
	br          %r3559, .L785, .L782

.L785:
	add.64      %r3562 <- %arg2, $40
	scast.64    %r3564 <- (32) %r3555(i)
	muls.64     %r3565 <- %r3564, $8
	add.64      %r3566 <- %r3562, %r3565
	load.64     %r3567 <- 0[%r3566]
	ptrcast.64  %r3568 <- (64) %r3567
	load.8      %r3569 <- 9[%r3568]
	cast.32     %r3570 <- (8) %r3569
	and.32      %r3571 <- %r3570, $3
	br          %r3571, .L789, .L786

.L789:
	add.64      %r3575 <- %arg2, $40
	add.64      %r3579 <- %r3575, %r3565
	load.64     %r3580 <- 0[%r3579]
	ptrcast.64  %r3581 <- (64) %r3580
	call        reallymarkobject, %arg1, %r3581
	br          .L786

.L786:
	add.32      %r3583 <- %r3555(i), $1
	phisrc.32   %phi697(i) <- %r3583
	br          .L788

.L782:
	ret


checkstacksizes:
.L791:
	<entry-point>
	load.64     %r3585 <- 40[%arg1]
	load.64     %r3587 <- 80[%arg1]
	sub.64      %r3588 <- %r3585, %r3587
	divs.64     %r3589 <- %r3588, $40
	scast.32    %r3590 <- (64) %r3589
	load.64     %r3593 <- 64[%arg1]
	sub.64      %r3594 <- %arg2, %r3593
	divs.64     %r3595 <- %r3594, $16
	scast.32    %r3596 <- (64) %r3595
	load.32     %r3598 <- 92[%arg1]
	setgt.32    %r3599 <- %r3598, $0x4e20
	br          %r3599, .L794, .L793

.L793:
	muls.32     %r3601 <- %r3590, $4
	setlt.32    %r3604 <- %r3601, %r3598
	br          %r3604, .L797, .L796

.L797:
	setlt.32    %r3607 <- $16, %r3598
	br          %r3607, .L795, .L796

.L795:
	divs.32     %r3611 <- %r3598, $2
	call        luaD_reallocCI, %arg1, %r3611
	br          .L796

.L796:
	muls.32     %r3613 <- %r3596, $4
	load.32     %r3615 <- 88[%arg1]
	setlt.32    %r3616 <- %r3613, %r3615
	br          %r3616, .L800, .L794

.L800:
	setlt.32    %r3619 <- $90, %r3615
	br          %r3619, .L798, .L794

.L798:
	divs.32     %r3623 <- %r3615, $2
	call        luaD_reallocstack, %arg1, %r3623
	br          .L794

.L794:
	ret


traversestack:
.L801:
	<entry-point>
	load.32     %r3625 <- 128[%arg2]
	setge.32    %r3626 <- %r3625, $4
	br          %r3626, .L804, .L803

.L804:
	load.64     %r3628 <- 120[%arg2]
	load.8      %r3629 <- 9[%r3628]
	cast.32     %r3630 <- (8) %r3629
	and.32      %r3631 <- %r3630, $3
	br          %r3631, .L802, .L803

.L802:
	call        reallymarkobject, %arg1, %r3628
	br          .L803

.L803:
	load.64     %r3636(lim) <- 16[%arg2]
	load.64     %r3638(ci) <- 80[%arg2]
	phisrc.64   %phi707(lim) <- %r3636(lim)
	phisrc.64   %phi710(lim) <- %r3636(lim)
	phisrc.64   %phi716(ci) <- %r3638(ci)
	phisrc.64   %phi731(lim) <- %r3636(lim)
	phisrc.64   %phi734(lim) <- %r3636(lim)
	br          .L808

.L808:
	phi.64      %r3639(ci) <- %phi716(ci), %phi717(ci)
	load.64     %r3641 <- 40[%arg2]
	setbe.32    %r3642 <- %r3639(ci), %r3641
	br          %r3642, .L805, .L807

.L805:
	phi.64      %r3643 <- %phi710(lim), %phi711(lim)
	load.64     %r3645 <- 16[%r3639(ci)]
	setb.32     %r3646 <- %r3643, %r3645
	phisrc.64   %phi708(lim) <- %r3643
	br          %r3646, .L809, .L806

.L809:
	phisrc.64   %phi709(lim) <- %r3645
	phisrc.64   %phi711(lim) <- %r3645
	br          .L806

.L806:
	add.64      %r3650 <- %r3639(ci), $40
	phisrc.64   %phi717(ci) <- %r3650
	br          .L808

.L807:
	load.64     %r3652(o) <- 64[%arg2]
	phisrc.64   %phi728(o) <- %r3652(o)
	br          .L814

.L814:
	phi.64      %r3653(o) <- %phi728(o), %phi729(o)
	load.64     %r3655 <- 16[%arg2]
	setb.32     %r3656 <- %r3653(o), %r3655
	phisrc.64   %phi720(o) <- %r3653(o)
	br          %r3656, .L811, .L821

.L811:
	load.32     %r3658 <- 8[%r3653(o)]
	setge.32    %r3659 <- %r3658, $4
	br          %r3659, .L817, .L812

.L817:
	load.64     %r3661 <- 0[%r3653(o)]
	load.8      %r3662 <- 9[%r3661]
	cast.32     %r3663 <- (8) %r3662
	and.32      %r3664 <- %r3663, $3
	br          %r3664, .L815, .L812

.L815:
	call        reallymarkobject, %arg1, %r3661
	br          .L812

.L812:
	add.64      %r3669 <- %r3653(o), $16
	phisrc.64   %phi729(o) <- %r3669
	br          .L814

.L821:
	phi.64      %r3670(o) <- %phi720(o), %phi721(o)
	phi.64      %r3671(lim) <- %phi707(lim), %phi708(lim), %phi709(lim)
	setbe.32    %r3672 <- %r3670(o), %r3671(lim)
	br          %r3672, .L818, .L820

.L818:
	store.32    $0 -> 8[%r3670(o)]
	add.64      %r3675 <- %r3670(o), $16
	phisrc.64   %phi721(o) <- %r3675
	br          .L821

.L820:
	call        checkstacksizes, %arg2, %r3671(lim)
	ret


propagatemark:
.L823:
	<entry-point>
	load.64     %r3679 <- 56[%arg1]
	load.8      %r3681 <- 9[%r3679]
	cast.32     %r3682 <- (8) %r3681
	or.32       %r3683 <- %r3682, $4
	scast.8     %r3684 <- (32) %r3683
	store.8     %r3684 -> 9[%r3679]
	load.8      %r3686 <- 8[%r3679]
	switch      %r3686, 5 -> .L825, 6 -> .L826, 8 -> .L827, 9 -> .L828, default -> .L829

.L825:
	load.64     %r3690 <- 48[%r3679]
	store.64    %r3690 -> 56[%arg1]
	call.32     %r3694 <- traversetable, %arg1, %r3679
	br          %r3694, .L830, .L831

.L830:
	load.8      %r3696 <- 9[%r3679]
	cast.32     %r3697 <- (8) %r3696
	and.32      %r3698 <- %r3697, $251
	scast.8     %r3699 <- (32) %r3698
	store.8     %r3699 -> 9[%r3679]
	br          .L831

.L831:
	load.32     %r3701 <- 56[%r3679]
	scast.64    %r3702 <- (32) %r3701
	mulu.64     %r3703 <- %r3702, $16
	add.64      %r3704 <- %r3703, $64
	load.8      %r3706 <- 11[%r3679]
	cast.32     %r3707 <- (8) %r3706
	shl.64      %r3708 <- $1, %r3707
	mulu.64     %r3709 <- %r3708, $40
	add.64      %r3710 <- %r3704, %r3709
	phisrc.64   %phi735(return) <- %r3710
	br          .L832

.L826:
	load.64     %r3716 <- 16[%r3679]
	store.64    %r3716 -> 56[%arg1]
	call        traverseclosure, %arg1, %r3679
	load.8      %r3721 <- 10[%r3679]
	br          %r3721, .L833, .L834

.L833:
	load.8      %r3723 <- 11[%r3679]
	cast.32     %r3724 <- (8) %r3723
	add.32      %r3725 <- %r3724, $-1
	scast.64    %r3726 <- (32) %r3725
	mulu.64     %r3727 <- %r3726, $16
	cast.32     %r3728 <- (64) %r3727
	add.32      %r3729 <- %r3728, $56
	phisrc.32   %phi736 <- %r3729
	br          .L835

.L834:
	load.8      %r3731 <- 11[%r3679]
	cast.32     %r3732 <- (8) %r3731
	add.32      %r3733 <- %r3732, $-1
	scast.64    %r3734 <- (32) %r3733
	mulu.64     %r3735 <- %r3734, $8
	cast.32     %r3736 <- (64) %r3735
	add.32      %r3737 <- %r3736, $48
	phisrc.32   %phi737 <- %r3737
	br          .L835

.L835:
	phi.32      %r3738 <- %phi736, %phi737
	scast.64    %r3739 <- (32) %r3738
	phisrc.64   %phi738(return) <- %r3739
	br          .L832

.L827:
	load.64     %r3743 <- 160[%r3679]
	store.64    %r3743 -> 56[%arg1]
	load.64     %r3746 <- 64[%arg1]
	store.64    %r3746 -> 160[%r3679]
	store.64    %r3679 -> 64[%arg1]
	load.8      %r3751 <- 9[%r3679]
	cast.32     %r3752 <- (8) %r3751
	and.32      %r3753 <- %r3752, $251
	scast.8     %r3754 <- (32) %r3753
	store.8     %r3754 -> 9[%r3679]
	call        traversestack, %arg1, %r3679
	load.32     %r3758 <- 88[%r3679]
	scast.64    %r3759 <- (32) %r3758
	mulu.64     %r3760 <- %r3759, $16
	add.64      %r3761 <- %r3760, $184
	load.32     %r3763 <- 92[%r3679]
	scast.64    %r3764 <- (32) %r3763
	mulu.64     %r3765 <- %r3764, $40
	add.64      %r3766 <- %r3761, %r3765
	phisrc.64   %phi739(return) <- %r3766
	br          .L832

.L828:
	load.64     %r3771 <- 104[%r3679]
	store.64    %r3771 -> 56[%arg1]
	call        traverseproto, %arg1, %r3679
	load.32     %r3776 <- 80[%r3679]
	scast.64    %r3777 <- (32) %r3776
	mulu.64     %r3778 <- %r3777, $4
	add.64      %r3779 <- %r3778, $120
	load.32     %r3781 <- 88[%r3679]
	scast.64    %r3782 <- (32) %r3781
	mulu.64     %r3783 <- %r3782, $8
	add.64      %r3784 <- %r3779, %r3783
	load.32     %r3786 <- 76[%r3679]
	scast.64    %r3787 <- (32) %r3786
	mulu.64     %r3788 <- %r3787, $16
	add.64      %r3789 <- %r3784, %r3788
	load.32     %r3791 <- 84[%r3679]
	scast.64    %r3792 <- (32) %r3791
	mulu.64     %r3793 <- %r3792, $4
	add.64      %r3794 <- %r3789, %r3793
	load.32     %r3796 <- 92[%r3679]
	scast.64    %r3797 <- (32) %r3796
	mulu.64     %r3798 <- %r3797, $16
	add.64      %r3799 <- %r3794, %r3798
	load.32     %r3801 <- 72[%r3679]
	scast.64    %r3802 <- (32) %r3801
	mulu.64     %r3803 <- %r3802, $8
	add.64      %r3804 <- %r3799, %r3803
	phisrc.64   %phi740(return) <- %r3804
	br          .L832

.L829:
	phisrc.64   %phi741(return) <- $0
	br          .L832

.L832:
	phi.64      %r3712 <- %phi735(return), %phi738(return), %phi739(return), %phi740(return), %phi741(return)
	ret.64      %r3712


propagateall:
.L836:
	<entry-point>
	phisrc.64   %phi745(m) <- $0
	br          .L840

.L840:
	load.64     %r3807 <- 56[%arg1]
	phi.64      %r3811 <- %phi745(m), %phi746(m)
	br          %r3807, .L837, .L841

.L837:
	call.64     %r3809 <- propagatemark, %arg1
	add.64      %r3813 <- %r3811, %r3809
	phisrc.64   %phi746(m) <- %r3813
	br          .L840

.L841:
	ret.64      %r3811


iscleared:
.L842:
	<entry-point>
	load.32     %r3818 <- 8[%arg1]
	setge.32    %r3820 <- %r3818, $4
	br          %r3820, .L844, .L843

.L843:
	phisrc.32   %phi747(return) <- $0
	br          .L845

.L844:
	seteq.32    %r3825 <- %r3818, $4
	br          %r3825, .L846, .L847

.L846:
	load.64     %r3827 <- 0[%arg1]
	load.8      %r3828 <- 9[%r3827]
	cast.32     %r3829 <- (8) %r3828
	and.32      %r3830 <- %r3829, $252
	scast.8     %r3831 <- (32) %r3830
	store.8     %r3831 -> 9[%r3827]
	phisrc.32   %phi748(return) <- $0
	br          .L845

.L847:
	load.64     %r3833 <- 0[%arg1]
	load.8      %r3834 <- 9[%r3833]
	cast.32     %r3835 <- (8) %r3834
	and.32      %r3836 <- %r3835, $3
	br          %r3836, .L848, .L849

.L848:
	phisrc.32   %phi749 <- $1
	br          .L850

.L849:
	seteq.32    %r3840 <- %r3818, $7
	br          %r3840, .L851, .L852

.L851:
	br          %arg2, .L855, .L854

.L854:
	load.8      %r3844 <- 9[%r3833]
	cast.32     %r3845 <- (8) %r3844
	and.32      %r3846 <- %r3845, $8
	phisrc.32   %phi750 <- %r3846
	br          .L856

.L855:
	phisrc.32   %phi751 <- $0
	br          .L856

.L856:
	phi.32      %r3847 <- %phi750, %phi751
	phisrc.32   %phi752 <- %r3847
	br          .L853

.L852:
	phisrc.32   %phi753 <- $0
	br          .L853

.L853:
	phi.32      %r3848 <- %phi752, %phi753
	phisrc.32   %phi754 <- %r3848
	br          .L850

.L850:
	phi.32      %r3849 <- %phi749, %phi754
	phisrc.32   %phi755(return) <- %r3849
	br          .L845

.L845:
	phi.32      %r3821 <- %phi747(return), %phi748(return), %phi755(return)
	ret.32      %r3821


cleartable:
.L857:
	<entry-point>
	phisrc.64   %phi760(l) <- %arg1
	br          .L861

.L861:
	phi.64      %r3850(l) <- %phi760(l), %phi761(l)
	br          %r3850(l), .L858, .L860

.L858:
	load.32     %r3854(i) <- 56[%r3850(l)]
	load.8      %r3856 <- 9[%r3850(l)]
	cast.32     %r3857 <- (8) %r3856
	and.32      %r3858 <- %r3857, $16
	phisrc.32   %phi766(i) <- %r3854(i)
	br          %r3858, .L867, .L863

.L867:
	phi.32      %r3859 <- %phi766(i), %phi767(i)
	add.32      %r3860(i) <- %r3859, $-1
	phisrc.32   %phi767(i) <- %r3860(i)
	br          %r3859, .L864, .L863

.L864:
	load.64     %r3862 <- 24[%r3850(l)]
	scast.64    %r3864 <- (32) %r3860(i)
	muls.64     %r3865 <- %r3864, $16
	add.64      %r3866 <- %r3862, %r3865
	call.32     %r3868 <- iscleared, %r3866, $0
	br          %r3868, .L868, .L867

.L868:
	store.32    $0 -> 8[%r3866]
	br          .L867

.L863:
	load.8      %r3871 <- 11[%r3850(l)]
	cast.32     %r3872 <- (8) %r3871
	shl.64      %r3873 <- $1, %r3872
	cast.32     %r3874(i) <- (64) %r3873
	phisrc.32   %phi763(i) <- %r3874(i)
	br          .L873

.L873:
	phi.32      %r3875 <- %phi763(i), %phi764(i)
	add.32      %r3876(i) <- %r3875, $-1
	phisrc.32   %phi764(i) <- %r3876(i)
	br          %r3875, .L870, .L872

.L870:
	load.64     %r3878 <- 32[%r3850(l)]
	scast.64    %r3880 <- (32) %r3876(i)
	muls.64     %r3881 <- %r3880, $40
	add.64      %r3882 <- %r3878, %r3881
	load.32     %r3884 <- 8[%r3882]
	br          %r3884, .L876, .L873

.L876:
	add.64      %r3887 <- %r3882, $16
	call.32     %r3889 <- iscleared, %r3887, $1
	br          %r3889, .L874, .L877

.L877:
	call.32     %r3892 <- iscleared, %r3882, $0
	br          %r3892, .L874, .L873

.L874:
	store.32    $0 -> 8[%r3882]
	call        removeentry, %r3882
	br          .L873

.L872:
	load.64     %r3896 <- 48[%r3850(l)]
	phisrc.64   %phi761(l) <- %r3896
	br          .L861

.L860:
	ret


freeobj:
.L878:
	<entry-point>
	load.8      %r3898 <- 8[%arg2]
	cast.64     %r3920 <- (64) %arg2
	switch      %r3898, 4 -> .L885, 5 -> .L883, 6 -> .L881, 7 -> .L886, 8 -> .L884, 9 -> .L880, 10 -> .L882, default -> .L879

.L880:
	call        luaF_freeproto, %arg1, %arg2
	br          .L879

.L881:
	call        luaF_freeclosure, %arg1, %arg2
	br          .L879

.L882:
	call        luaF_freeupval, %arg1, %arg2
	br          .L879

.L883:
	call        luaH_free, %arg1, %arg2
	br          .L879

.L884:
	call        luaE_freethread, %arg1, %arg2
	br          .L879

.L885:
	load.64     %r3915 <- 32[%arg1]
	load.32     %r3916 <- 8[%r3915]
	add.32      %r3917 <- %r3916, $-1
	store.32    %r3917 -> 8[%r3915]
	load.64     %r3922 <- 16[%arg2]
	add.64      %r3925 <- %r3922, $25
	call.64     %r3926 <- luaM_realloc_, %arg1, %r3920, %r3925, $0
	br          .L879

.L886:
	load.64     %r3931 <- 32[%arg2]
	add.64      %r3932 <- %r3931, $40
	call.64     %r3933 <- luaM_realloc_, %arg1, %r3920, %r3932, $0
	br          .L879

.L879:
	ret


sweeplist:
.L888:
	<entry-point>
	load.64     %r3935 <- 32[%arg1]
	load.8      %r3937 <- 32[%r3935]
	cast.32     %r3938 <- (8) %r3937
	xor.32      %r3939 <- %r3938, $3
	phisrc.64   %phi771(p) <- %arg2
	phisrc.64   %phi773(count) <- %arg3
	phisrc.8    %phi775 <- %r3937
	phisrc.8    %phi777 <- %r3937
	br          .L892

.L892:
	phi.64      %r3940(p) <- %phi771(p), %phi772(p)
	load.64     %r3941 <- 0[%r3940(p)]
	br          %r3941, .L893, .L901

.L893:
	phi.64      %r3943 <- %phi773(count), %phi774(count)
	add.64      %r3944 <- %r3943, $-1
	seta.32     %r3945 <- %r3943, $0
	phisrc.64   %phi774(count) <- %r3944
	br          %r3945, .L889, .L901

.L889:
	load.8      %r3947 <- 8[%r3941]
	cast.32     %r3948 <- (8) %r3947
	seteq.32    %r3949 <- %r3948, $8
	br          %r3949, .L894, .L895

.L894:
	add.64      %r3953 <- %r3941, $152
	call.64     %r3954 <- sweeplist, %arg1, %r3953, $-3
	br          .L895

.L895:
	load.8      %r3956 <- 9[%r3941]
	cast.32     %r3957 <- (8) %r3956
	xor.32      %r3958 <- %r3957, $3
	and.32      %r3960 <- %r3958, %r3939
	br          %r3960, .L896, .L897

.L896:
	and.32      %r3964 <- %r3957, $248
	load.8      %r3966 <- 32[%r3935]
	cast.32     %r3967 <- (8) %r3966
	and.32      %r3968 <- %r3967, $3
	or.32       %r3971 <- %r3964, %r3968
	scast.8     %r3972 <- (32) %r3971
	store.8     %r3972 -> 9[%r3941]
	phisrc.64   %phi772(p) <- %r3941
	br          .L892

.L897:
	load.64     %r3978 <- 0[%r3941]
	store.64    %r3978 -> 0[%r3940(p)]
	load.64     %r3982 <- 40[%r3935]
	seteq.32    %r3983 <- %r3941, %r3982
	br          %r3983, .L899, .L900

.L899:
	load.64     %r3985 <- 0[%r3941]
	store.64    %r3985 -> 40[%r3935]
	br          .L900

.L900:
	call        freeobj, %arg1, %r3941
	br          .L892

.L901:
	ret.64      %r3940(p)


checkSizes:
.L902:
	<entry-point>
	load.64     %r3992 <- 32[%arg1]
	load.32     %r3994 <- 8[%r3992]
	load.32     %r3996 <- 12[%r3992]
	divs.32     %r3997 <- %r3996, $4
	setb.32     %r3999 <- %r3994, %r3997
	br          %r3999, .L905, .L904

.L905:
	setgt.32    %r4002 <- %r3996, $64
	br          %r4002, .L903, .L904

.L903:
	divs.32     %r4006 <- %r3996, $2
	call        luaS_resize, %arg1, %r4006
	br          .L904

.L904:
	load.64     %r4008 <- 104[%r3992]
	seta.32     %r4009 <- %r4008, $64
	br          %r4009, .L906, .L907

.L906:
	divu.64     %r4012 <- %r4008, $2
	add.64      %r4014 <- %r4012, $1
	setbe.32    %r4016 <- %r4014, $-3
	br          %r4016, .L908, .L909

.L908:
	load.64     %r4019 <- 88[%r3992]
	cast.64     %r4020 <- (64) %r4019
	call.64     %r4026 <- luaM_realloc_, %arg1, %r4020, %r4008, %r4012
	phisrc.64   %phi778 <- %r4026
	br          .L910

.L909:
	call.64     %r4028 <- luaM_toobig, %arg1
	cast.64     %r4029 <- (64) %r4028
	phisrc.64   %phi779 <- %r4029
	br          .L910

.L910:
	phi.64      %r4030 <- %phi778, %phi779
	ptrcast.64  %r4031 <- (64) %r4030
	store.64    %r4031 -> 88[%r3992]
	store.64    %r4012 -> 104[%r3992]
	br          .L907

.L907:
	ret


GCTM:
.L911:
	<entry-point>
	load.64     %r4036 <- 32[%arg1]
	load.64     %r4038 <- 80[%r4036]
	load.64     %r4039 <- 0[%r4038]
	seteq.32    %r4045 <- %r4039, %r4038
	br          %r4045, .L912, .L913

.L912:
	store.64    $0 -> 80[%r4036]
	br          .L914

.L913:
	load.64     %r4048 <- 0[%r4039]
	store.64    %r4048 -> 0[%r4038]
	br          .L914

.L914:
	load.64     %r4052 <- 176[%r4036]
	load.64     %r4053 <- 0[%r4052]
	store.64    %r4053 -> 0[%r4039]
	load.64     %r4057 <- 176[%r4036]
	store.64    %r4039 -> 0[%r4057]
	load.8      %r4059 <- 9[%r4039]
	cast.32     %r4060 <- (8) %r4059
	and.32      %r4061 <- %r4060, $248
	load.8      %r4063 <- 32[%r4036]
	cast.32     %r4064 <- (8) %r4063
	and.32      %r4065 <- %r4064, $3
	or.32       %r4068 <- %r4061, %r4065
	scast.8     %r4069 <- (32) %r4068
	store.8     %r4069 -> 9[%r4039]
	load.64     %r4072 <- 16[%r4039]
	br          %r4072, .L916, .L922

.L916:
	load.8      %r4076 <- 10[%r4072]
	cast.32     %r4077 <- (8) %r4076
	and.32      %r4078 <- %r4077, $4
	br          %r4078, .L922, .L919

.L919:
	load.64     %r4082 <- 32[%arg1]
	load.64     %r4083 <- 312[%r4082]
	call.64     %r4084 <- luaT_gettm, %r4072, $2, %r4083
	br          %r4084, .L921, .L922

.L921:
	load.8      %r4090 <- 101[%arg1]
	load.64     %r4092 <- 112[%r4036]
	store.8     $0 -> 101[%arg1]
	load.64     %r4095 <- 120[%r4036]
	mulu.64     %r4096 <- %r4095, $2
	store.64    %r4096 -> 112[%r4036]
	load.64     %r4100 <- 16[%arg1]
	load.64     %r4102 <- 0[%r4084]
	store.64    %r4102 -> 0[%r4100]
	load.32     %r4105 <- 8[%r4084]
	store.32    %r4105 -> 8[%r4100]
	load.64     %r4109 <- 16[%arg1]
	ptrcast.64  %r4112 <- (64) %r4039
	store.64    %r4112 -> 16[%r4109]
	store.32    $7 -> 24[%r4109]
	load.64     %r4116 <- 16[%arg1]
	cast.64     %r4117 <- (64) %r4116
	add.64      %r4118 <- %r4117, $32
	ptrcast.64  %r4119 <- (64) %r4118
	store.64    %r4119 -> 16[%arg1]
	add.64      %r4123 <- %r4119, $-32
	call        luaD_call, %arg1, %r4123, $0
	store.8     %r4090 -> 101[%arg1]
	store.64    %r4092 -> 112[%r4036]
	br          .L922

.L922:
	ret


luaC_callGCTM:
.L923:
	<entry-point>
	br          .L927

.L927:
	load.64     %r4129 <- 32[%arg1]
	load.64     %r4130 <- 80[%r4129]
	br          %r4130, .L924, .L926

.L924:
	call        GCTM, %arg1
	br          .L927

.L926:
	ret


luaC_freeall:
.L928:
	<entry-point>
	load.64     %r4133 <- 32[%arg1]
	store.8     $67 -> 32[%r4133]
	add.64      %r4137 <- %r4133, $40
	call.64     %r4138 <- sweeplist, %arg1, %r4137, $-3
	phisrc.32   %phi793(i) <- $0
	br          .L932

.L932:
	phi.32      %r4139(i) <- %phi793(i), %phi794(i)
	load.32     %r4141 <- 12[%r4133]
	setlt.32    %r4142 <- %r4139(i), %r4141
	br          %r4142, .L929, .L931

.L929:
	load.64     %r4145 <- 0[%r4133]
	scast.64    %r4147 <- (32) %r4139(i)
	muls.64     %r4148 <- %r4147, $8
	add.64      %r4149 <- %r4145, %r4148
	call.64     %r4150 <- sweeplist, %arg1, %r4149, $-3
	add.32      %r4152 <- %r4139(i), $1
	phisrc.32   %phi794(i) <- %r4152
	br          .L932

.L931:
	ret


markmt:
.L933:
	<entry-point>
	phisrc.32   %phi801(i) <- $0
	br          .L937

.L937:
	phi.32      %r4153(i) <- %phi801(i), %phi802(i)
	setlt.32    %r4154 <- %r4153(i), $9
	br          %r4154, .L934, .L936

.L934:
	add.64      %r4156 <- %arg1, $224
	scast.64    %r4158 <- (32) %r4153(i)
	muls.64     %r4159 <- %r4158, $8
	add.64      %r4160 <- %r4156, %r4159
	load.64     %r4161 <- 0[%r4160]
	br          %r4161, .L938, .L935

.L938:
	ptrcast.64  %r4169 <- (64) %r4161
	load.8      %r4170 <- 9[%r4169]
	cast.32     %r4171 <- (8) %r4170
	and.32      %r4172 <- %r4171, $3
	br          %r4172, .L940, .L935

.L940:
	ptrcast.64  %r4181 <- (64) %r4161
	call        reallymarkobject, %arg1, %r4181
	br          .L935

.L935:
	add.32      %r4183 <- %r4153(i), $1
	phisrc.32   %phi802(i) <- %r4183
	br          .L937

.L936:
	ret


markroot:
.L942:
	<entry-point>
	load.64     %r4185 <- 32[%arg1]
	store.64    $0 -> 56[%r4185]
	store.64    $0 -> 64[%r4185]
	store.64    $0 -> 72[%r4185]
	load.64     %r4190 <- 176[%r4185]
	ptrcast.64  %r4191 <- (64) %r4190
	load.8      %r4192 <- 9[%r4191]
	cast.32     %r4193 <- (8) %r4192
	and.32      %r4194 <- %r4193, $3
	phisrc.64   %phi809 <- %r4190
	phisrc.64   %phi813 <- %r4190
	br          %r4194, .L943, .L944

.L943:
	ptrcast.64  %r4198 <- (64) %r4190
	call        reallymarkobject, %r4185, %r4198
	br          .L944

.L944:
	load.64     %r4200 <- 176[%r4185]
	load.32     %r4201 <- 128[%r4200]
	setge.32    %r4202 <- %r4201, $4
	br          %r4202, .L947, .L946

.L947:
	load.64     %r4205 <- 120[%r4200]
	load.8      %r4206 <- 9[%r4205]
	cast.32     %r4207 <- (8) %r4206
	and.32      %r4208 <- %r4207, $3
	br          %r4208, .L945, .L946

.L945:
	call        reallymarkobject, %r4185, %r4205
	br          .L946

.L946:
	load.64     %r4214 <- 32[%arg1]
	load.32     %r4215 <- 168[%r4214]
	setge.32    %r4216 <- %r4215, $4
	br          %r4216, .L950, .L949

.L950:
	load.64     %r4219 <- 160[%r4214]
	load.8      %r4220 <- 9[%r4219]
	cast.32     %r4221 <- (8) %r4220
	and.32      %r4222 <- %r4221, $3
	br          %r4222, .L948, .L949

.L948:
	call        reallymarkobject, %r4185, %r4219
	br          .L949

.L949:
	call        markmt, %r4185
	store.8     $1 -> 33[%r4185]
	ret


remarkupvals:
.L952:
	<entry-point>
	load.64     %r4230(uv) <- 216[%arg1]
	phisrc.64   %phi824(uv) <- %r4230(uv)
	br          .L956

.L956:
	phi.64      %r4231(uv) <- %phi824(uv), %phi825(uv)
	add.64      %r4233 <- %arg1, $184
	setne.32    %r4234 <- %r4231(uv), %r4233
	br          %r4234, .L953, .L955

.L953:
	ptrcast.64  %r4236 <- (64) %r4231(uv)
	load.8      %r4237 <- 9[%r4236]
	cast.32     %r4238 <- (8) %r4237
	and.32      %r4239 <- %r4238, $4
	br          %r4239, .L954, .L959

.L959:
	and.32      %r4244 <- %r4238, $3
	br          %r4244, .L954, .L957

.L957:
	load.64     %r4246 <- 16[%r4231(uv)]
	load.32     %r4247 <- 8[%r4246]
	setge.32    %r4248 <- %r4247, $4
	br          %r4248, .L962, .L954

.L962:
	load.64     %r4251 <- 0[%r4246]
	load.8      %r4252 <- 9[%r4251]
	cast.32     %r4253 <- (8) %r4252
	and.32      %r4254 <- %r4253, $3
	br          %r4254, .L960, .L954

.L960:
	call        reallymarkobject, %arg1, %r4251
	br          .L954

.L954:
	load.64     %r4260 <- 32[%r4231(uv)]
	phisrc.64   %phi825(uv) <- %r4260
	br          .L956

.L955:
	ret


atomic:
.L963:
	<entry-point>
	load.64     %r4262 <- 32[%arg1]
	call        remarkupvals, %r4262
	call.64     %r4265 <- propagateall, %r4262
	load.64     %r4267 <- 72[%r4262]
	store.64    %r4267 -> 56[%r4262]
	store.64    $0 -> 72[%r4262]
	ptrcast.64  %r4271 <- (64) %arg1
	load.8      %r4272 <- 9[%r4271]
	cast.32     %r4273 <- (8) %r4272
	and.32      %r4274 <- %r4273, $3
	br          %r4274, .L964, .L965

.L964:
	call        reallymarkobject, %r4262, %r4271
	br          .L965

.L965:
	call        markmt, %r4262
	call.64     %r4280 <- propagateall, %r4262
	load.64     %r4282 <- 64[%r4262]
	store.64    %r4282 -> 56[%r4262]
	store.64    $0 -> 64[%r4262]
	call.64     %r4286 <- propagateall, %r4262
	call.64     %r4288 <- luaC_separateudata, %arg1, $0
	call        marktmu, %r4262
	call.64     %r4291 <- propagateall, %r4262
	add.64      %r4294 <- %r4288, %r4291
	load.64     %r4297 <- 72[%r4262]
	call        cleartable, %r4297
	load.8      %r4299 <- 32[%r4262]
	cast.32     %r4300 <- (8) %r4299
	xor.32      %r4301 <- %r4300, $3
	scast.8     %r4302 <- (32) %r4301
	store.8     %r4302 -> 32[%r4262]
	store.32    $0 -> 36[%r4262]
	add.64      %r4306 <- %r4262, $40
	store.64    %r4306 -> 48[%r4262]
	store.8     $2 -> 33[%r4262]
	load.64     %r4310 <- 120[%r4262]
	sub.64      %r4312 <- %r4310, %r4294
	store.64    %r4312 -> 128[%r4262]
	ret


singlestep:
.L967:
	<entry-point>
	load.64     %r4315 <- 32[%arg1]
	load.8      %r4317 <- 33[%r4315]
	switch      %r4317, 0 -> .L969, 1 -> .L970, 2 -> .L971, 3 -> .L972, 4 -> .L973, default -> .L974

.L969:
	call        markroot, %arg1
	phisrc.64   %phi830(return) <- $0
	br          .L975

.L970:
	load.64     %r4321 <- 56[%r4315]
	br          %r4321, .L976, .L977

.L976:
	call.64     %r4323 <- propagatemark, %r4315
	phisrc.64   %phi831(return) <- %r4323
	br          .L975

.L977:
	call        atomic, %arg1
	phisrc.64   %phi832(return) <- $0
	br          .L975

.L971:
	load.64     %r4326 <- 120[%r4315]
	load.64     %r4329 <- 0[%r4315]
	load.32     %r4331 <- 36[%r4315]
	add.32      %r4332 <- %r4331, $1
	store.32    %r4332 -> 36[%r4315]
	scast.64    %r4333 <- (32) %r4331
	muls.64     %r4334 <- %r4333, $8
	add.64      %r4335 <- %r4329, %r4334
	call.64     %r4336 <- sweeplist, %arg1, %r4335, $-3
	load.32     %r4338 <- 36[%r4315]
	load.32     %r4340 <- 12[%r4315]
	setge.32    %r4341 <- %r4338, %r4340
	br          %r4341, .L979, .L980

.L979:
	store.8     $3 -> 33[%r4315]
	br          .L980

.L980:
	load.64     %r4345 <- 120[%r4315]
	sub.64      %r4346 <- %r4326, %r4345
	load.64     %r4348 <- 128[%r4315]
	sub.64      %r4350 <- %r4348, %r4346
	store.64    %r4350 -> 128[%r4315]
	phisrc.64   %phi833(return) <- $10
	br          .L975

.L972:
	load.64     %r4353 <- 120[%r4315]
	load.64     %r4356 <- 48[%r4315]
	call.64     %r4357 <- sweeplist, %arg1, %r4356, $40
	store.64    %r4357 -> 48[%r4315]
	load.64     %r4361 <- 0[%r4357]
	br          %r4361, .L982, .L981

.L981:
	call        checkSizes, %arg1
	store.8     $4 -> 33[%r4315]
	br          .L982

.L982:
	load.64     %r4367 <- 120[%r4315]
	sub.64      %r4368 <- %r4353, %r4367
	load.64     %r4370 <- 128[%r4315]
	sub.64      %r4372 <- %r4370, %r4368
	store.64    %r4372 -> 128[%r4315]
	phisrc.64   %phi834(return) <- $400
	br          .L975

.L973:
	load.64     %r4375 <- 80[%r4315]
	br          %r4375, .L983, .L984

.L983:
	call        GCTM, %arg1
	load.64     %r4378 <- 128[%r4315]
	seta.32     %r4379 <- %r4378, $100
	br          %r4379, .L985, .L986

.L985:
	add.64      %r4383 <- %r4378, $-100
	store.64    %r4383 -> 128[%r4315]
	br          .L986

.L986:
	phisrc.64   %phi835(return) <- $100
	br          .L975

.L984:
	store.8     $0 -> 33[%r4315]
	store.64    $0 -> 136[%r4315]
	phisrc.64   %phi836(return) <- $0
	br          .L975

.L974:
	phisrc.64   %phi837(return) <- $0
	br          .L975

.L975:
	phi.64      %r4319 <- %phi830(return), %phi831(return), %phi832(return), %phi833(return), %phi834(return), %phi835(return), %phi836(return), %phi837(return)
	ret.64      %r4319


luaC_step:
.L988:
	<entry-point>
	load.64     %r4388 <- 32[%arg1]
	load.32     %r4390 <- 148[%r4388]
	mulu.32     %r4392 <- %r4390, $10
	cast.64     %r4393 <- (32) %r4392
	phisrc.64   %phi840(lim) <- %r4393
	br          %r4392, .L990, .L989

.L989:
	phisrc.64   %phi841(lim) <- $0x7ffffffffffffffe
	br          .L990

.L990:
	load.64     %r4397 <- 120[%r4388]
	load.64     %r4399 <- 112[%r4388]
	sub.64      %r4400 <- %r4397, %r4399
	load.64     %r4402 <- 136[%r4388]
	add.64      %r4404 <- %r4402, %r4400
	store.64    %r4404 -> 136[%r4388]
	br          .L991

.L991:
	call.64     %r4407 <- singlestep, %arg1
	phi.64      %r4408 <- %phi840(lim), %phi841(lim), %phi842(lim)
	sub.64      %r4410 <- %r4408, %r4407
	load.8      %r4413 <- 33[%r4388]
	phisrc.64   %phi842(lim) <- %r4410
	br          %r4413, .L992, .L997

.L992:
	setgt.32    %r4417 <- %r4410, $0
	br          %r4417, .L991, .L993

.L993:
	br          %r4413, .L996, .L997

.L996:
	load.64     %r4423 <- 136[%r4388]
	setb.32     %r4424 <- %r4423, $0x400
	br          %r4424, .L998, .L999

.L998:
	load.64     %r4426 <- 120[%r4388]
	add.64      %r4427 <- %r4426, $0x400
	store.64    %r4427 -> 112[%r4388]
	br          .L1001

.L999:
	add.64      %r4432 <- %r4423, $0xfffffffffffffc00
	store.64    %r4432 -> 136[%r4388]
	load.64     %r4435 <- 120[%r4388]
	store.64    %r4435 -> 112[%r4388]
	br          .L1001

.L997:
	load.64     %r4438 <- 128[%r4388]
	divu.64     %r4439 <- %r4438, $100
	load.32     %r4441 <- 144[%r4388]
	scast.64    %r4442 <- (32) %r4441
	mulu.64     %r4443 <- %r4439, %r4442
	store.64    %r4443 -> 112[%r4388]
	br          .L1001

.L1001:
	ret


luaC_barrierf:
.L1002:
	<entry-point>
	load.64     %r4446 <- 32[%arg1]
	load.8      %r4448 <- 33[%r4446]
	cast.32     %r4449 <- (8) %r4448
	seteq.32    %r4450 <- %r4449, $1
	br          %r4450, .L1003, .L1004

.L1003:
	call        reallymarkobject, %r4446, %arg3
	br          .L1005

.L1004:
	load.8      %r4454 <- 9[%arg2]
	cast.32     %r4455 <- (8) %r4454
	and.32      %r4456 <- %r4455, $248
	load.8      %r4458 <- 32[%r4446]
	cast.32     %r4459 <- (8) %r4458
	and.32      %r4460 <- %r4459, $3
	or.32       %r4463 <- %r4456, %r4460
	scast.8     %r4464 <- (32) %r4463
	store.8     %r4464 -> 9[%arg2]
	br          .L1005

.L1005:
	ret


luaC_barrierback:
.L1006:
	<entry-point>
	load.64     %r4467 <- 32[%arg1]
	ptrcast.64  %r4469 <- (64) %arg2
	load.8      %r4471 <- 9[%r4469]
	cast.32     %r4472 <- (8) %r4471
	and.32      %r4473 <- %r4472, $251
	scast.8     %r4474 <- (32) %r4473
	store.8     %r4474 -> 9[%r4469]
	load.64     %r4476 <- 64[%r4467]
	store.64    %r4476 -> 48[%arg2]
	store.64    %r4469 -> 64[%r4467]
	ret


luaC_link:
.L1008:
	<entry-point>
	load.64     %r4481 <- 32[%arg1]
	load.64     %r4483 <- 40[%r4481]
	store.64    %r4483 -> 0[%arg2]
	store.64    %arg2 -> 40[%r4481]
	load.8      %r4488 <- 32[%r4481]
	cast.32     %r4489 <- (8) %r4488
	and.32      %r4490 <- %r4489, $3
	store.8     %r4490 -> 9[%arg2]
	store.8     %arg3 -> 8[%arg2]
	ret


luaC_linkupval:
.L1010:
	<entry-point>
	load.64     %r4496 <- 32[%arg1]
	ptrcast.64  %r4498 <- (64) %arg2
	load.64     %r4500 <- 40[%r4496]
	store.64    %r4500 -> 0[%r4498]
	store.64    %r4498 -> 40[%r4496]
	load.8      %r4505 <- 9[%r4498]
	cast.32     %r4506 <- (8) %r4505
	and.32      %r4507 <- %r4506, $4
	br          %r4507, .L1012, .L1013

.L1013:
	and.32      %r4511 <- %r4506, $3
	br          %r4511, .L1012, .L1011

.L1011:
	load.8      %r4513 <- 33[%r4496]
	cast.32     %r4514 <- (8) %r4513
	seteq.32    %r4515 <- %r4514, $1
	br          %r4515, .L1014, .L1015

.L1014:
	or.32       %r4519 <- %r4506, $4
	scast.8     %r4520 <- (32) %r4519
	store.8     %r4520 -> 9[%r4498]
	load.64     %r4522 <- 16[%arg2]
	load.32     %r4523 <- 8[%r4522]
	setge.32    %r4524 <- %r4523, $4
	br          %r4524, .L1019, .L1012

.L1019:
	load.64     %r4527 <- 0[%r4522]
	load.8      %r4528 <- 9[%r4527]
	cast.32     %r4529 <- (8) %r4528
	and.32      %r4530 <- %r4529, $3
	br          %r4530, .L1018, .L1012

.L1018:
	cast.32     %r4534 <- (8) %r4520
	and.32      %r4535 <- %r4534, $4
	br          %r4535, .L1016, .L1012

.L1016:
	call        luaC_barrierf, %arg1, %r4498, %r4527
	br          .L1012

.L1015:
	and.32      %r4545 <- %r4506, $248
	load.8      %r4547 <- 32[%r4496]
	cast.32     %r4548 <- (8) %r4547
	and.32      %r4549 <- %r4548, $3
	or.32       %r4552 <- %r4545, %r4549
	scast.8     %r4553 <- (32) %r4552
	store.8     %r4553 -> 9[%r4498]
	br          .L1012

.L1012:
	ret


stack_init:
.L1021:
	<entry-point>
	call.64     %r4556 <- luaM_realloc_, %arg2, $0, $0, $320
	ptrcast.64  %r4557 <- (64) %r4556
	store.64    %r4557 -> 80[%arg1]
	store.64    %r4557 -> 40[%arg1]
	store.32    $8 -> 92[%arg1]
	add.64      %r4570 <- %r4557, $280
	store.64    %r4570 -> 72[%arg1]
	call.64     %r4573 <- luaM_realloc_, %arg2, $0, $0, $720
	ptrcast.64  %r4574 <- (64) %r4573
	store.64    %r4574 -> 64[%arg1]
	store.32    $45 -> 88[%arg1]
	store.64    %r4574 -> 16[%arg1]
	add.64      %r4588 <- %r4574, $624
	store.64    %r4588 -> 56[%arg1]
	load.64     %r4593 <- 40[%arg1]
	store.64    %r4574 -> 8[%r4593]
	load.64     %r4595 <- 16[%arg1]
	add.64      %r4596 <- %r4595, $16
	store.64    %r4596 -> 16[%arg1]
	store.32    $0 -> 8[%r4595]
	load.64     %r4598 <- 16[%arg1]
	load.64     %r4600 <- 40[%arg1]
	store.64    %r4598 -> 0[%r4600]
	store.64    %r4598 -> 24[%arg1]
	load.64     %r4603 <- 16[%arg1]
	add.64      %r4604 <- %r4603, $320
	load.64     %r4606 <- 40[%arg1]
	store.64    %r4604 -> 16[%r4606]
	ret


freestack:
.L1023:
	<entry-point>
	load.64     %r4609 <- 80[%arg2]
	cast.64     %r4610 <- (64) %r4609
	load.32     %r4612 <- 92[%arg2]
	scast.64    %r4613 <- (32) %r4612
	mulu.64     %r4614 <- %r4613, $40
	call.64     %r4615 <- luaM_realloc_, %arg1, %r4610, %r4614, $0
	load.64     %r4618 <- 64[%arg2]
	cast.64     %r4619 <- (64) %r4618
	load.32     %r4621 <- 88[%arg2]
	scast.64    %r4622 <- (32) %r4621
	mulu.64     %r4623 <- %r4622, $16
	call.64     %r4624 <- luaM_realloc_, %arg1, %r4619, %r4623, $0
	ret


f_luaopen:
.L1025:
	<entry-point>
	load.64     %r4626 <- 32[%arg1]
	call        stack_init, %arg1, %arg1
	call.64     %r4633 <- luaH_new, %arg1, $0, $2
	ptrcast.64  %r4634 <- (64) %r4633
	store.64    %r4634 -> 120[%arg1]
	store.32    $5 -> 128[%arg1]
	load.64     %r4638 <- 32[%arg1]
	call.64     %r4641 <- luaH_new, %arg1, $0, $2
	ptrcast.64  %r4642 <- (64) %r4641
	store.64    %r4642 -> 160[%r4638]
	store.32    $5 -> 168[%r4638]
	call        luaS_resize, %arg1, $32
	call        luaT_init, %arg1
	call        luaX_init, %arg1
	symaddr.64  %r4649 <- <anon symbol:0x62d001256bb0>
	call.64     %r4650 <- luaS_newlstr, %arg1, %r4649, $17
	load.8      %r4651 <- 9[%r4650]
	cast.32     %r4652 <- (8) %r4651
	or.32       %r4653 <- %r4652, $32
	scast.8     %r4654 <- (32) %r4653
	store.8     %r4654 -> 9[%r4650]
	load.64     %r4656 <- 120[%r4626]
	mulu.64     %r4657 <- %r4656, $4
	store.64    %r4657 -> 112[%r4626]
	ret


preinit_state:
.L1027:
	<entry-point>
	store.64    %arg2 -> 32[%arg1]
	store.64    $0 -> 64[%arg1]
	store.32    $0 -> 88[%arg1]
	store.64    $0 -> 168[%arg1]
	store.64    $0 -> 112[%arg1]
	store.8     $0 -> 100[%arg1]
	store.32    $0 -> 104[%arg1]
	store.8     $1 -> 101[%arg1]
	store.32    $0 -> 108[%arg1]
	store.64    $0 -> 152[%arg1]
	store.32    $0 -> 92[%arg1]
	store.16    $0 -> 98[%arg1]
	store.16    $0 -> 96[%arg1]
	store.8     $0 -> 10[%arg1]
	store.64    $0 -> 40[%arg1]
	store.64    $0 -> 80[%arg1]
	store.64    $0 -> 48[%arg1]
	store.64    $0 -> 176[%arg1]
	store.32    $0 -> 128[%arg1]
	ret


close_state:
.L1029:
	<entry-point>
	load.64     %r4682 <- 32[%arg1]
	load.64     %r4685 <- 64[%arg1]
	call        luaF_close, %arg1, %r4685
	call        luaC_freeall, %arg1
	load.64     %r4689 <- 32[%arg1]
	load.64     %r4690 <- 0[%r4689]
	cast.64     %r4691 <- (64) %r4690
	load.32     %r4694 <- 12[%r4689]
	scast.64    %r4695 <- (32) %r4694
	mulu.64     %r4696 <- %r4695, $8
	call.64     %r4697 <- luaM_realloc_, %arg1, %r4691, %r4696, $0
	load.64     %r4700 <- 88[%r4682]
	cast.64     %r4701 <- (64) %r4700
	load.64     %r4703 <- 104[%r4682]
	call.64     %r4705 <- luaM_realloc_, %arg1, %r4701, %r4703, $0
	ptrcast.64  %r4706 <- (64) %r4705
	store.64    %r4706 -> 88[%r4682]
	store.64    $0 -> 104[%r4682]
	call        freestack, %arg1, %arg1
	load.64     %r4712 <- 24[%r4682]
	ptrcast.64  %r4714 <- (64) %arg1
	cast.64     %r4716 <- (64) %r4714
	load.64     %r4718 <- 16[%r4682]
	call.64     %r4719 <- %r4718, %r4712, %r4716, $616, $0
	ret


luaE_freethread:
.L1031:
	<entry-point>
	load.64     %r4722 <- 64[%arg2]
	call        luaF_close, %arg2, %r4722
	call        freestack, %arg1, %arg2
	ptrcast.64  %r4727 <- (64) %arg2
	cast.64     %r4729 <- (64) %r4727
	call.64     %r4730 <- luaM_realloc_, %arg1, %r4729, $184, $0
	ret


lua_newstate:
.L1033:
	<entry-point>
	call.64     %r4733 <- %arg1, %arg2, $0, $0, $616
	br          %r4733, .L1035, .L1034

.L1034:
	phisrc.64   %phi853(return) <- $0
	br          .L1036

.L1035:
	ptrcast.64  %r4738 <- (64) %r4733
	ptrcast.64  %r4740 <- (64) %r4738
	ptrcast.64  %r4742 <- (64) %r4740
	add.64      %r4743 <- %r4742, $184
	store.64    $0 -> 0[%r4740]
	store.8     $8 -> 8[%r4740]
	store.8     $33 -> 216[%r4742]
	store.8     $97 -> 9[%r4740]
	call        preinit_state, %r4740, %r4743
	store.64    %arg1 -> 200[%r4742]
	store.64    %arg2 -> 208[%r4742]
	store.64    %r4740 -> 360[%r4742]
	add.64      %r4767 <- %r4743, $184
	store.64    %r4767 -> 392[%r4742]
	store.64    %r4767 -> 400[%r4742]
	store.64    $0 -> 296[%r4742]
	store.32    $0 -> 196[%r4742]
	store.32    $0 -> 192[%r4742]
	store.64    $0 -> 184[%r4742]
	load.64     %r4777 <- 32[%r4740]
	store.32    $0 -> 168[%r4777]
	store.64    $0 -> 272[%r4742]
	store.64    $0 -> 288[%r4742]
	store.64    $0 -> 336[%r4742]
	store.8     $0 -> 217[%r4742]
	store.64    %r4742 -> 224[%r4742]
	store.32    $0 -> 220[%r4742]
	add.64      %r4787 <- %r4743, $40
	store.64    %r4787 -> 232[%r4742]
	store.64    $0 -> 240[%r4742]
	store.64    $0 -> 248[%r4742]
	store.64    $0 -> 256[%r4742]
	store.64    $0 -> 264[%r4742]
	store.64    $616 -> 304[%r4742]
	store.32    $200 -> 328[%r4742]
	store.32    $200 -> 332[%r4742]
	store.64    $0 -> 320[%r4742]
	phisrc.32   %phi861(i) <- $0
	br          .L1040

.L1040:
	phi.32      %r4797(i) <- %phi861(i), %phi862(i)
	setlt.32    %r4798 <- %r4797(i), $9
	br          %r4798, .L1037, .L1039

.L1037:
	add.64      %r4800 <- %r4743, $224
	scast.64    %r4802 <- (32) %r4797(i)
	muls.64     %r4803 <- %r4802, $8
	add.64      %r4804 <- %r4800, %r4803
	store.64    $0 -> 0[%r4804]
	add.32      %r4806 <- %r4797(i), $1
	phisrc.32   %phi862(i) <- %r4806
	br          .L1040

.L1039:
	symaddr.64  %r4808 <- f_luaopen
	call.32     %r4809 <- luaD_rawrunprotected, %r4740, %r4808, $0
	select.64   %r4812 <- %r4809, $0, %r4740
	br          %r4809, .L1041, .L1043

.L1041:
	call        close_state, %r4740
	br          .L1043

.L1043:
	phisrc.64   %phi854(return) <- %r4812
	br          .L1036

.L1036:
	phi.64      %r4736 <- %phi853(return), %phi854(return)
	ret.64      %r4736


callallgcTM:
.L1044:
	<entry-point>
	call        luaC_callGCTM, %arg1
	ret


lua_close:
.L1046:
	<entry-point>
	load.64     %r4816 <- 32[%arg1]
	load.64     %r4817 <- 176[%r4816]
	load.64     %r4820 <- 64[%r4817]
	call        luaF_close, %r4817, %r4820
	call.64     %r4822 <- luaC_separateudata, %r4817, $1
	store.64    $0 -> 176[%r4817]
	br          .L1047

.L1047:
	load.64     %r4825 <- 80[%r4817]
	store.64    %r4825 -> 40[%r4817]
	load.64     %r4829 <- 0[%r4825]
	store.64    %r4829 -> 16[%r4817]
	store.64    %r4829 -> 24[%r4817]
	store.16    $0 -> 98[%r4817]
	store.16    $0 -> 96[%r4817]
	symaddr.64  %r4835 <- callallgcTM
	call.32     %r4836 <- luaD_rawrunprotected, %r4817, %r4835, $0
	br          %r4836, .L1047, .L1049

.L1049:
	call        close_state, %r4817
	ret


currentpc:
.L1051:
	<entry-point>
	load.64     %r4840 <- 8[%arg2]
	load.32     %r4841 <- 8[%r4840]
	seteq.32    %r4842 <- %r4841, $6
	br          %r4842, .L1054, .L1052

.L1054:
	load.64     %r4845 <- 0[%r4840]
	load.8      %r4846 <- 10[%r4845]
	br          %r4846, .L1052, .L1053

.L1052:
	phisrc.32   %phi866(return) <- $0xffffffff
	br          .L1055

.L1053:
	load.64     %r4850 <- 40[%arg1]
	seteq.32    %r4851 <- %arg2, %r4850
	br          %r4851, .L1056, .L1057

.L1056:
	load.64     %r4853 <- 48[%arg1]
	store.64    %r4853 -> 24[%arg2]
	br          .L1057

.L1057:
	load.64     %r4856 <- 24[%arg2]
	load.64     %r4859 <- 0[%r4840]
	load.64     %r4860 <- 32[%r4859]
	load.64     %r4861 <- 24[%r4860]
	sub.64      %r4862 <- %r4856, %r4861
	divs.64     %r4863 <- %r4862, $4
	scast.32    %r4864 <- (64) %r4863
	add.32      %r4865 <- %r4864, $-1
	phisrc.32   %phi867(return) <- %r4865
	br          .L1055

.L1055:
	phi.32      %r4847 <- %phi866(return), %phi867(return)
	ret.32      %r4847


currentline:
.L1058:
	<entry-point>
	call.32     %r4868 <- currentpc, %arg1, %arg2
	setlt.32    %r4870 <- %r4868, $0
	br          %r4870, .L1059, .L1060

.L1059:
	phisrc.32   %phi870(return) <- $0xffffffff
	br          .L1061

.L1060:
	load.64     %r4873 <- 8[%arg2]
	load.64     %r4874 <- 0[%r4873]
	load.64     %r4875 <- 32[%r4874]
	load.64     %r4876 <- 40[%r4875]
	br          %r4876, .L1063, .L1064

.L1063:
	load.64     %r4879 <- 0[%r4873]
	load.64     %r4880 <- 32[%r4879]
	load.64     %r4881 <- 40[%r4880]
	scast.64    %r4883 <- (32) %r4868
	muls.64     %r4884 <- %r4883, $4
	add.64      %r4885 <- %r4881, %r4884
	load.32     %r4886 <- 0[%r4885]
	phisrc.32   %phi871 <- %r4886
	br          .L1065

.L1064:
	phisrc.32   %phi872 <- $0
	br          .L1065

.L1065:
	phi.32      %r4887 <- %phi871, %phi872
	phisrc.32   %phi873(return) <- %r4887
	br          .L1061

.L1061:
	phi.32      %r4871 <- %phi870(return), %phi873(return)
	ret.32      %r4871


lua_getstack:
.L1066:
	<entry-point>
	load.64     %r4889(ci) <- 40[%arg1]
	phisrc.32   %phi880(level) <- %arg2
	phisrc.64   %phi884(ci) <- %r4889(ci)
	phisrc.64   %phi891(ci) <- %r4889(ci)
	br          .L1070

.L1070:
	phi.32      %r4890(level) <- %phi880(level), %phi881(level), %phi882(level)
	setgt.32    %r4891 <- %r4890(level), $0
	br          %r4891, .L1071, .L1069

.L1071:
	phi.64      %r4892(ci) <- %phi891(ci), %phi892(ci)
	load.64     %r4894 <- 80[%arg1]
	seta.32     %r4895 <- %r4892(ci), %r4894
	phisrc.64   %phi886(ci) <- %r4892(ci)
	br          %r4895, .L1067, .L1069

.L1067:
	add.32      %r4897(level) <- %r4890(level), $-1
	load.64     %r4899 <- 8[%r4892(ci)]
	load.64     %r4900 <- 0[%r4899]
	load.8      %r4901 <- 10[%r4900]
	phisrc.32   %phi881(level) <- %r4897(level)
	br          %r4901, .L1068, .L1072

.L1072:
	load.32     %r4903 <- 36[%r4892(ci)]
	sub.32      %r4906 <- %r4897(level), %r4903
	phisrc.32   %phi882(level) <- %r4906
	br          .L1068

.L1068:
	add.64      %r4909 <- %r4892(ci), $-40
	phisrc.64   %phi885(ci) <- %r4909
	phisrc.64   %phi892(ci) <- %r4909
	br          .L1070

.L1069:
	br          %r4890(level), .L1075, .L1076

.L1076:
	phi.64      %r4912(ci) <- %phi884(ci), %phi885(ci), %phi886(ci)
	load.64     %r4914 <- 80[%arg1]
	seta.32     %r4915 <- %r4912(ci), %r4914
	br          %r4915, .L1074, .L1075

.L1074:
	sub.64      %r4919 <- %r4912(ci), %r4914
	divs.64     %r4920 <- %r4919, $40
	scast.32    %r4921 <- (64) %r4920
	store.32    %r4921 -> 116[%arg3]
	phisrc.32   %phi893(status) <- $1
	br          .L1077

.L1075:
	setlt.32    %r4924 <- %r4890(level), $0
	br          %r4924, .L1078, .L1079

.L1078:
	store.32    $0 -> 116[%arg3]
	phisrc.32   %phi894(status) <- $1
	br          .L1077

.L1079:
	phisrc.32   %phi895(status) <- $0
	br          .L1077

.L1077:
	phi.32      %r4926 <- %phi893(status), %phi894(status), %phi895(status)
	ret.32      %r4926


getluaproto:
.L1082:
	<entry-point>
	load.64     %r4929 <- 8[%arg1]
	load.32     %r4930 <- 8[%r4929]
	seteq.32    %r4931 <- %r4930, $6
	br          %r4931, .L1087, .L1085

.L1087:
	load.64     %r4934 <- 0[%r4929]
	load.8      %r4935 <- 10[%r4934]
	br          %r4935, .L1085, .L1084

.L1084:
	load.64     %r4939 <- 32[%r4934]
	phisrc.64   %phi897 <- %r4939
	br          .L1086

.L1085:
	phisrc.64   %phi898 <- $0
	br          .L1086

.L1086:
	phi.64      %r4940 <- %phi897, %phi898
	ret.64      %r4940


funcinfo:
.L1088:
	<entry-point>
	load.8      %r4943 <- 10[%arg2]
	br          %r4943, .L1089, .L1090

.L1089:
	symaddr.64  %r4944 <- <anon symbol:0x62d001298500>
	store.64    %r4944 -> 32[%arg1]
	store.32    $0xffffffff -> 48[%arg1]
	store.32    $0xffffffff -> 52[%arg1]
	symaddr.64  %r4948 <- <anon symbol:0x62d001298e10>
	store.64    %r4948 -> 24[%arg1]
	phisrc.64   %phi903 <- %r4944
	br          .L1091

.L1090:
	load.64     %r4951 <- 32[%arg2]
	load.64     %r4952 <- 64[%r4951]
	add.64      %r4953 <- %r4952, $24
	ptrcast.64  %r4954 <- (64) %r4953
	store.64    %r4954 -> 32[%arg1]
	load.64     %r4957 <- 32[%arg2]
	load.32     %r4958 <- 96[%r4957]
	store.32    %r4958 -> 48[%arg1]
	load.64     %r4961 <- 32[%arg2]
	load.32     %r4962 <- 100[%r4961]
	store.32    %r4962 -> 52[%arg1]
	symaddr.64  %r4964 <- <anon symbol:0x62d00129a688>
	symaddr.64  %r4965 <- <anon symbol:0x62d00129a2e8>
	ptrcast.64  %r4966 <- (64) %r4965
	seteq.32    %r4969 <- %r4958, $0
	select.64   %r4970 <- %r4969, %r4964, %r4966
	store.64    %r4970 -> 24[%arg1]
	phisrc.64   %phi904 <- %r4954
	br          .L1091

.L1091:
	add.64      %r4973 <- %arg1, $56
	phi.64      %r4975 <- %phi903, %phi904
	call        luaO_chunkid, %r4973, %r4975, $60
	ret


info_tailcall:
.L1093:
	<entry-point>
	symaddr.64  %r4976 <- <anon symbol:0x62d00129b338>
	store.64    %r4976 -> 16[%arg1]
	store.64    %r4976 -> 8[%arg1]
	symaddr.64  %r4979 <- <anon symbol:0x62d00129b8a8>
	store.64    %r4979 -> 24[%arg1]
	store.32    $0xffffffff -> 40[%arg1]
	store.32    $0xffffffff -> 48[%arg1]
	store.32    $0xffffffff -> 52[%arg1]
	symaddr.64  %r4984 <- <anon symbol:0x62d00129c388>
	store.64    %r4984 -> 32[%arg1]
	add.64      %r4987 <- %arg1, $56
	call        luaO_chunkid, %r4987, %r4984, $60
	store.32    $0 -> 44[%arg1]
	ret


collectvalidlines:
.L1095:
	<entry-point>
	br          %arg2, .L1098, .L1096

.L1098:
	load.8      %r4994 <- 10[%arg2]
	br          %r4994, .L1096, .L1097

.L1096:
	load.64     %r4996 <- 16[%arg1]
	store.32    $0 -> 8[%r4996]
	br          .L1099

.L1097:
	call.64     %r4998 <- luaH_new, %arg1, $0, $0
	load.64     %r5000 <- 32[%arg2]
	load.64     %r5001 <- 40[%r5000]
	phisrc.32   %phi907(i) <- $0
	phisrc.64   %phi909 <- %r5000
	phisrc.64   %phi910 <- %r5000
	br          .L1103

.L1103:
	phi.32      %r5002(i) <- %phi907(i), %phi908(i)
	load.64     %r5004 <- 32[%arg2]
	load.32     %r5005 <- 84[%r5004]
	setlt.32    %r5006 <- %r5002(i), %r5005
	br          %r5006, .L1100, .L1102

.L1100:
	scast.64    %r5011 <- (32) %r5002(i)
	muls.64     %r5012 <- %r5011, $4
	add.64      %r5013 <- %r5001, %r5012
	load.32     %r5014 <- 0[%r5013]
	call.64     %r5015 <- luaH_setnum, %arg1, %r4998, %r5014
	store.32    $1 -> 0[%r5015]
	store.32    $1 -> 8[%r5015]
	add.32      %r5019 <- %r5002(i), $1
	phisrc.32   %phi908(i) <- %r5019
	br          .L1103

.L1102:
	load.64     %r5021 <- 16[%arg1]
	ptrcast.64  %r5023 <- (64) %r4998
	store.64    %r5023 -> 0[%r5021]
	store.32    $5 -> 8[%r5021]
	br          .L1099

.L1099:
	load.64     %r5027 <- 56[%arg1]
	ptrcast.64  %r5028 <- (64) %r5027
	load.64     %r5030 <- 16[%arg1]
	ptrcast.64  %r5031 <- (64) %r5030
	sub.64      %r5032 <- %r5028, %r5031
	setle.32    %r5033 <- %r5032, $16
	br          %r5033, .L1104, .L1106

.L1104:
	call        luaD_growstack, %arg1, $1
	br          .L1106

.L1106:
	load.64     %r5036 <- 16[%arg1]
	add.64      %r5037 <- %r5036, $16
	store.64    %r5037 -> 16[%arg1]
	ret


auxgetinfo:
.L1108:
	<entry-point>
	phisrc.64   %phi917(what) <- %arg2
	phisrc.32   %phi919(status) <- $1
	br          %arg4, .L1115, .L1109

.L1109:
	call        info_tailcall, %arg3
	phisrc.32   %phi911(return) <- $1
	br          .L1111

.L1115:
	phi.64      %r5043(what) <- %phi917(what), %phi918(what)
	load.8      %r5044 <- 0[%r5043(what)]
	br          %r5044, .L1112, .L1114

.L1112:
	switch      %r5044, 76 -> .L1113, 83 -> .L1117, 102 -> .L1113, 108 -> .L1118, 110 -> .L1120, 117 -> .L1119, default -> .L1123

.L1117:
	call        funcinfo, %arg3, %arg4
	br          .L1113

.L1118:
	br          %arg5, .L1124, .L1125

.L1124:
	call.32     %r5052 <- currentline, %arg1, %arg5
	phisrc.32   %phi912 <- %r5052
	br          .L1126

.L1125:
	phisrc.32   %phi913 <- $0xffffffff
	br          .L1126

.L1126:
	phi.32      %r5053 <- %phi912, %phi913
	store.32    %r5053 -> 40[%arg3]
	br          .L1113

.L1119:
	load.8      %r5056 <- 11[%arg4]
	cast.32     %r5057 <- (8) %r5056
	store.32    %r5057 -> 44[%arg3]
	br          .L1113

.L1120:
	ptrcast.64  %r5061 <- (64) $0
	store.64    %r5061 -> 16[%arg3]
	br          %r5061, .L1113, .L1127

.L1127:
	symaddr.64  %r5066 <- <anon symbol:0x62d00129ef08>
	store.64    %r5066 -> 16[%arg3]
	store.64    $0 -> 8[%arg3]
	br          .L1113

.L1123:
	phisrc.32   %phi920(status) <- $0
	br          .L1113

.L1113:
	add.64      %r5070 <- %r5043(what), $1
	phisrc.64   %phi918(what) <- %r5070
	br          .L1115

.L1114:
	phi.32      %r5071 <- %phi919(status), %phi920(status)
	phisrc.32   %phi914(return) <- %r5071
	br          .L1111

.L1111:
	phi.32      %r5042 <- %phi911(return), %phi914(return)
	ret.32      %r5042


lua_getinfo:
.L1129:
	<entry-point>
	load.8      %r5073 <- 0[%arg2]
	scast.32    %r5074 <- (8) %r5073
	seteq.32    %r5075 <- %r5074, $62
	phisrc.64   %phi926(what) <- %arg2
	phisrc.64   %phi934(f) <- $0
	phisrc.64   %phi936(ci) <- $0
	br          %r5075, .L1130, .L1131

.L1130:
	load.64     %r5077 <- 16[%arg1]
	add.64      %r5081(what) <- %arg2, $1
	load.64     %r5083 <- -16[%r5077]
	add.64      %r5087 <- %r5077, $-16
	store.64    %r5087 -> 16[%arg1]
	phisrc.64   %phi925(what) <- %r5081(what)
	phisrc.64   %phi933(f) <- %r5083
	br          .L1132

.L1131:
	load.32     %r5089 <- 116[%arg3]
	br          %r5089, .L1133, .L1132

.L1133:
	load.64     %r5092 <- 80[%arg1]
	scast.64    %r5095 <- (32) %r5089
	muls.64     %r5096 <- %r5095, $40
	add.64      %r5097 <- %r5092, %r5096
	load.64     %r5099 <- 8[%r5097]
	load.64     %r5100 <- 0[%r5099]
	phisrc.64   %phi935(f) <- %r5100
	phisrc.64   %phi937(ci) <- %r5097
	br          .L1132

.L1132:
	phi.64      %r5103 <- %phi925(what), %phi926(what)
	phi.64      %r5105(f) <- %phi933(f), %phi934(f), %phi935(f)
	phi.64      %r5106 <- %phi936(ci), %phi937(ci)
	call.32     %r5107 <- auxgetinfo, %arg1, %r5103, %arg3, %r5105(f), %r5106
	call.64     %r5109 <- strchr, %r5103, $102
	br          %r5109, .L1135, .L1136

.L1135:
	br          %r5105(f), .L1138, .L1137

.L1137:
	load.64     %r5113 <- 16[%arg1]
	store.32    $0 -> 8[%r5113]
	br          .L1139

.L1138:
	load.64     %r5115 <- 16[%arg1]
	ptrcast.64  %r5117 <- (64) %r5105(f)
	store.64    %r5117 -> 0[%r5115]
	store.32    $6 -> 8[%r5115]
	br          .L1139

.L1139:
	load.64     %r5121 <- 56[%arg1]
	ptrcast.64  %r5122 <- (64) %r5121
	load.64     %r5124 <- 16[%arg1]
	ptrcast.64  %r5125 <- (64) %r5124
	sub.64      %r5126 <- %r5122, %r5125
	setle.32    %r5127 <- %r5126, $16
	br          %r5127, .L1140, .L1142

.L1140:
	call        luaD_growstack, %arg1, $1
	br          .L1142

.L1142:
	load.64     %r5130 <- 16[%arg1]
	add.64      %r5131 <- %r5130, $16
	store.64    %r5131 -> 16[%arg1]
	br          .L1136

.L1136:
	call.64     %r5133 <- strchr, %r5103, $76
	br          %r5133, .L1143, .L1145

.L1143:
	call        collectvalidlines, %arg1, %r5105(f)
	br          .L1145

.L1145:
	ret.32      %r5107


isinstack:
.L1146:
	<entry-point>
	load.64     %r5139(p) <- 0[%arg1]
	phisrc.64   %phi943(p) <- %r5139(p)
	br          .L1150

.L1150:
	phi.64      %r5140(p) <- %phi943(p), %phi944(p)
	load.64     %r5142 <- 16[%arg1]
	setb.32     %r5143 <- %r5140(p), %r5142
	br          %r5143, .L1147, .L1149

.L1147:
	seteq.32    %r5146 <- %arg2, %r5140(p)
	br          %r5146, .L1151, .L1148

.L1151:
	phisrc.32   %phi939(return) <- $1
	br          .L1153

.L1148:
	add.64      %r5149 <- %r5140(p), $16
	phisrc.64   %phi944(p) <- %r5149
	br          .L1150

.L1149:
	phisrc.32   %phi940(return) <- $0
	br          .L1153

.L1153:
	phi.32      %r5147 <- %phi939(return), %phi940(return)
	ret.32      %r5147


luaG_typeerror:
.L1154:
	<entry-point>
	symaddr.64  %r5150 <- luaT_typenames
	load.32     %r5152 <- 8[%arg2]
	scast.64    %r5153 <- (32) %r5152
	muls.64     %r5154 <- %r5153, $8
	add.64      %r5155 <- %r5150, %r5154
	load.64     %r5156 <- 0[%r5155]
	load.64     %r5158 <- 40[%arg1]
	call.32     %r5160 <- isinstack, %r5158, %arg2
	ptrcast.64  %r5162 <- (64) $0
	br          %r5162, .L1155, .L1156

.L1155:
	symaddr.64  %r5165 <- <anon symbol:0x62d0010ceeb0>
	call        luaG_runerror, %arg1, %r5165, %arg3, %r5162, $0, %r5156
	br          .L1157

.L1156:
	symaddr.64  %r5170 <- <anon symbol:0x62d0010cf250>
	call        luaG_runerror, %arg1, %r5170, %arg3, %r5156
	br          .L1157

.L1157:
	ret


luaG_concaterror:
.L1158:
	<entry-point>
	load.32     %r5174 <- 8[%arg2]
	seteq.32    %r5175 <- %r5174, $4
	br          %r5175, .L1159, .L1161

.L1161:
	seteq.32    %r5178 <- %r5174, $3
	phisrc.64   %phi945(p1) <- %arg2
	br          %r5178, .L1159, .L1160

.L1159:
	phisrc.64   %phi946(p1) <- %arg3
	br          .L1160

.L1160:
	phi.64      %r5181 <- %phi945(p1), %phi946(p1)
	symaddr.64  %r5182 <- <anon symbol:0x62d0012ad808>
	call        luaG_typeerror, %arg1, %r5181, %r5182
	ret


luaG_aritherror:
.L1163:
	<entry-point>
	symaddr.64  %r5184 <- temp
	call.64     %r5185 <- luaV_tonumber, %arg2, %r5184
	select.64   %r5189 <- %r5185, %arg3, %arg2
	symaddr.64  %r5190 <- <anon symbol:0x62d0012add78>
	call        luaG_typeerror, %arg1, %r5189, %r5190
	ret


luaG_ordererror:
.L1167:
	<entry-point>
	symaddr.64  %r5191 <- luaT_typenames
	load.32     %r5193 <- 8[%arg2]
	scast.64    %r5194 <- (32) %r5193
	muls.64     %r5195 <- %r5194, $8
	add.64      %r5196 <- %r5191, %r5195
	load.64     %r5197 <- 0[%r5196]
	load.32     %r5200 <- 8[%arg3]
	scast.64    %r5201 <- (32) %r5200
	muls.64     %r5202 <- %r5201, $8
	add.64      %r5203 <- %r5191, %r5202
	load.64     %r5204 <- 0[%r5203]
	load.8      %r5206 <- 2[%r5197]
	scast.32    %r5207 <- (8) %r5206
	load.8      %r5209 <- 2[%r5204]
	scast.32    %r5210 <- (8) %r5209
	seteq.32    %r5211 <- %r5207, %r5210
	br          %r5211, .L1168, .L1169

.L1168:
	symaddr.64  %r5213 <- <anon symbol:0x62d0012aebf8>
	call        luaG_runerror, %arg1, %r5213, %r5197
	br          .L1171

.L1169:
	symaddr.64  %r5216 <- <anon symbol:0x62d0012aef98>
	call        luaG_runerror, %arg1, %r5216, %r5197, %r5204
	br          .L1171

.L1171:
	ret.32      $0


addinfo:
.L1172:
	<entry-point>
	load.64     %r5221 <- 40[%arg1]
	load.64     %r5223 <- 8[%r5221]
	load.32     %r5224 <- 8[%r5223]
	seteq.32    %r5225 <- %r5224, $6
	br          %r5225, .L1175, .L1174

.L1175:
	load.64     %r5228 <- 0[%r5223]
	load.8      %r5229 <- 10[%r5228]
	br          %r5229, .L1174, .L1173

.L1173:
	call.32     %r5232 <- currentline, %arg1, %r5221
	symaddr.64  %r5233 <- buff
	call.64     %r5235 <- getluaproto, %r5221
	load.64     %r5236 <- 64[%r5235]
	add.64      %r5237 <- %r5236, $24
	ptrcast.64  %r5238 <- (64) %r5237
	call        luaO_chunkid, %r5233, %r5238, $60
	symaddr.64  %r5240 <- <anon symbol:0x62d0012b02a0>
	call.64     %r5244 <- luaO_pushfstring, %arg1, %r5240, %r5233, %r5232, %arg2
	br          .L1174

.L1174:
	ret


luaG_errormsg:
.L1176:
	<entry-point>
	load.64     %r5246 <- 176[%arg1]
	br          %r5246, .L1177, .L1178

.L1177:
	load.64     %r5249 <- 64[%arg1]
	ptrcast.64  %r5250 <- (64) %r5249
	add.64      %r5253 <- %r5250, %r5246
	ptrcast.64  %r5254 <- (64) %r5253
	load.32     %r5256 <- 8[%r5254]
	seteq.32    %r5257 <- %r5256, $6
	br          %r5257, .L1180, .L1179

.L1179:
	call        luaD_throw, %arg1, $5
	br          .L1180

.L1180:
	load.64     %r5260 <- 16[%arg1]
	load.64     %r5265 <- -16[%r5260]
	store.64    %r5265 -> 0[%r5260]
	load.32     %r5268 <- -8[%r5260]
	store.32    %r5268 -> 8[%r5260]
	load.64     %r5273 <- 16[%arg1]
	load.64     %r5276 <- 0[%r5254]
	store.64    %r5276 -> -16[%r5273]
	load.32     %r5279 <- 8[%r5254]
	store.32    %r5279 -> -8[%r5273]
	load.64     %r5283 <- 56[%arg1]
	ptrcast.64  %r5284 <- (64) %r5283
	load.64     %r5286 <- 16[%arg1]
	ptrcast.64  %r5287 <- (64) %r5286
	sub.64      %r5288 <- %r5284, %r5287
	setle.32    %r5289 <- %r5288, $16
	br          %r5289, .L1181, .L1183

.L1181:
	call        luaD_growstack, %arg1, $1
	br          .L1183

.L1183:
	load.64     %r5292 <- 16[%arg1]
	add.64      %r5293 <- %r5292, $16
	store.64    %r5293 -> 16[%arg1]
	add.64      %r5297 <- %r5293, $-32
	call        luaD_call, %arg1, %r5297, $1
	br          .L1178

.L1178:
	call        luaD_throw, %arg1, $2
	ret


luaG_runerror:
.L1185:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	symaddr.64  %r5299 <- fmt
	cast.64     %r5300 <- (64) %r5299
	call.64     %r5305 <- luaO_pushvfstring, %arg1, %arg2, %r5300
	call        addinfo, %arg1, %r5305
	call        luaG_errormsg, %arg1
	ret


luaZ_fill:
.L1187:
	<entry-point>
	load.64     %r5308 <- 32[%arg1]
	load.64     %r5311 <- 24[%arg1]
	symaddr.64  %r5312 <- size
	load.64     %r5314 <- 16[%arg1]
	call.64     %r5315 <- %r5314, %r5308, %r5311, %r5312
	seteq.32    %r5317 <- %r5315, $0
	load.64     %r5318(size) <- 0[size]
	seteq.32    %r5319 <- %r5318(size), $0
	or-bool.32  %r5320 <- %r5317, %r5319
	br          %r5320, .L1188, .L1189

.L1188:
	phisrc.32   %phi954(return) <- $0xffffffff
	br          .L1190

.L1189:
	add.64      %r5323 <- %r5318(size), $-1
	store.64    %r5323 -> 0[%arg1]
	add.64      %r5329 <- %r5315, $1
	store.64    %r5329 -> 8[%arg1]
	load.8      %r5330 <- 0[%r5315]
	cast.32     %r5332 <- (8) %r5330
	phisrc.32   %phi955(return) <- %r5332
	br          .L1190

.L1190:
	phi.32      %r5321 <- %phi954(return), %phi955(return)
	ret.32      %r5321


luaZ_init:
.L1191:
	<entry-point>
	store.64    %arg1 -> 32[%arg2]
	store.64    %arg3 -> 16[%arg2]
	store.64    %arg4 -> 24[%arg2]
	store.64    $0 -> 0[%arg2]
	store.64    $0 -> 8[%arg2]
	ret


luaZ_openspace:
.L1193:
	<entry-point>
	load.64     %r5343 <- 16[%arg2]
	seta.32     %r5344 <- %arg3, %r5343
	br          %r5344, .L1194, .L1195

.L1194:
	setb.32     %r5346 <- %arg3, $32
	select.64   %r5347(n) <- %r5346, $32, %arg3
	add.64      %r5348 <- %r5347(n), $1
	setbe.32    %r5350 <- %r5348, $-3
	br          %r5350, .L1198, .L1199

.L1198:
	load.64     %r5353 <- 0[%arg2]
	cast.64     %r5354 <- (64) %r5353
	call.64     %r5360 <- luaM_realloc_, %arg1, %r5354, %r5343, %r5347(n)
	phisrc.64   %phi957 <- %r5360
	br          .L1200

.L1199:
	call.64     %r5362 <- luaM_toobig, %arg1
	cast.64     %r5363 <- (64) %r5362
	phisrc.64   %phi958 <- %r5363
	br          .L1200

.L1200:
	phi.64      %r5364 <- %phi957, %phi958
	ptrcast.64  %r5365 <- (64) %r5364
	store.64    %r5365 -> 0[%arg2]
	store.64    %r5347(n) -> 16[%arg2]
	br          .L1195

.L1195:
	load.64     %r5370 <- 0[%arg2]
	ret.64      %r5370


save:
.L1202:
	<entry-point>
	load.64     %r5373 <- 72[%arg1]
	load.64     %r5375 <- 8[%r5373]
	add.64      %r5376 <- %r5375, $1
	load.64     %r5378 <- 16[%r5373]
	seta.32     %r5379 <- %r5376, %r5378
	phisrc.64   %phi969 <- %r5375
	phisrc.64   %phi973 <- %r5375
	phisrc.64   %phi974 <- %r5378
	br          %r5379, .L1203, .L1204

.L1203:
	setae.32    %r5382 <- %r5378, $0x7ffffffffffffffe
	phisrc.64   %phi971 <- %r5378
	br          %r5382, .L1205, .L1206

.L1205:
	symaddr.64  %r5384 <- <anon symbol:0x62d0012b3390>
	call        luaX_lexerror, %arg1, %r5384, $0
	br          .L1206

.L1206:
	load.64     %r5386 <- 16[%r5373]
	mulu.64     %r5387 <- %r5386, $2
	add.64      %r5389 <- %r5387, $1
	setbe.32    %r5391 <- %r5389, $-3
	br          %r5391, .L1207, .L1208

.L1207:
	load.64     %r5393 <- 56[%arg1]
	load.64     %r5395 <- 0[%r5373]
	cast.64     %r5396 <- (64) %r5395
	call.64     %r5402 <- luaM_realloc_, %r5393, %r5396, %r5386, %r5387
	phisrc.64   %phi967 <- %r5402
	br          .L1209

.L1208:
	load.64     %r5404 <- 56[%arg1]
	call.64     %r5405 <- luaM_toobig, %r5404
	cast.64     %r5406 <- (64) %r5405
	phisrc.64   %phi968 <- %r5406
	br          .L1209

.L1209:
	phi.64      %r5407 <- %phi967, %phi968
	ptrcast.64  %r5408 <- (64) %r5407
	store.64    %r5408 -> 0[%r5373]
	store.64    %r5387 -> 16[%r5373]
	br          .L1204

.L1204:
	scast.8     %r5413 <- (32) %arg2
	load.64     %r5415 <- 0[%r5373]
	load.64     %r5417 <- 8[%r5373]
	add.64      %r5418 <- %r5417, $1
	store.64    %r5418 -> 8[%r5373]
	add.64      %r5419 <- %r5415, %r5417
	store.8     %r5413 -> 0[%r5419]
	ret


luaX_init:
.L1211:
	<entry-point>
	phisrc.32   %phi977(i) <- $0
	br          .L1215

.L1215:
	phi.32      %r5420(i) <- %phi977(i), %phi978(i)
	setlt.32    %r5421 <- %r5420(i), $21
	br          %r5421, .L1212, .L1214

.L1212:
	symaddr.64  %r5423 <- luaX_tokens
	scast.64    %r5425 <- (32) %r5420(i)
	muls.64     %r5426 <- %r5425, $8
	add.64      %r5427 <- %r5423, %r5426
	load.64     %r5428 <- 0[%r5427]
	call.64     %r5435 <- strlen, %r5428
	call.64     %r5436 <- luaS_newlstr, %arg1, %r5428, %r5435
	load.8      %r5438 <- 9[%r5436]
	cast.32     %r5439 <- (8) %r5438
	or.32       %r5440 <- %r5439, $32
	scast.8     %r5441 <- (32) %r5440
	store.8     %r5441 -> 9[%r5436]
	add.32      %r5443 <- %r5420(i), $1
	scast.8     %r5444 <- (32) %r5443
	store.8     %r5444 -> 10[%r5436]
	phisrc.32   %phi978(i) <- %r5443
	br          .L1215

.L1214:
	ret


luaX_token2str:
.L1216:
	<entry-point>
	setlt.32    %r5449 <- %arg2, $257
	br          %r5449, .L1217, .L1218

.L1217:
	call.64     %r5450 <- __ctype_b_loc
	load.64     %r5451 <- 0[%r5450]
	scast.64    %r5454 <- (32) %arg2
	muls.64     %r5455 <- %r5454, $2
	add.64      %r5456 <- %r5451, %r5455
	load.16     %r5457 <- 0[%r5456]
	cast.32     %r5458 <- (16) %r5457
	and.32      %r5459 <- %r5458, $2
	br          %r5459, .L1220, .L1221

.L1220:
	load.64     %r5461 <- 56[%arg1]
	symaddr.64  %r5462 <- <anon symbol:0x62d0012a2e10>
	call.64     %r5464 <- luaO_pushfstring, %r5461, %r5462, %arg2
	phisrc.64   %phi979 <- %r5464
	br          .L1222

.L1221:
	load.64     %r5466 <- 56[%arg1]
	symaddr.64  %r5467 <- <anon symbol:0x62d0012a28a0>
	call.64     %r5469 <- luaO_pushfstring, %r5466, %r5467, %arg2
	phisrc.64   %phi980 <- %r5469
	br          .L1222

.L1222:
	phi.64      %r5470 <- %phi979, %phi980
	phisrc.64   %phi981(return) <- %r5470
	br          .L1219

.L1218:
	symaddr.64  %r5472 <- luaX_tokens
	add.32      %r5474 <- %arg2, $-257
	scast.64    %r5475 <- (32) %r5474
	muls.64     %r5476 <- %r5475, $8
	add.64      %r5477 <- %r5472, %r5476
	load.64     %r5478 <- 0[%r5477]
	phisrc.64   %phi982(return) <- %r5478
	br          .L1219

.L1219:
	phi.64      %r5471 <- %phi981(return), %phi982(return)
	ret.64      %r5471


txtToken:
.L1224:
	<entry-point>
	switch      %arg2, 284 -> .L1228, 285 -> .L1228, 286 -> .L1228, default -> .L1229

.L1228:
	call        save, %arg1, $0
	load.64     %r5482 <- 72[%arg1]
	load.64     %r5483 <- 0[%r5482]
	phisrc.64   %phi983(return) <- %r5483
	br          .L1230

.L1229:
	call.64     %r5487 <- luaX_token2str, %arg1, %arg2
	phisrc.64   %phi984(return) <- %r5487
	br          .L1230

.L1230:
	phi.64      %r5484 <- %phi983(return), %phi984(return)
	ret.64      %r5484


luaX_lexerror:
.L1231:
	<entry-point>
	symaddr.64  %r5488 <- buff
	load.64     %r5490 <- 80[%arg1]
	add.64      %r5491 <- %r5490, $24
	ptrcast.64  %r5492 <- (64) %r5491
	call        luaO_chunkid, %r5488, %r5492, $80
	load.64     %r5494 <- 56[%arg1]
	symaddr.64  %r5495 <- <anon symbol:0x62d0012642f8>
	load.32     %r5498 <- 4[%arg1]
	call.64     %r5500(msg) <- luaO_pushfstring, %r5494, %r5495, %r5488, %r5498, %arg2
	br          %arg3, .L1232, .L1233

.L1232:
	load.64     %r5503 <- 56[%arg1]
	symaddr.64  %r5504 <- <anon symbol:0x62d001252c40>
	call.64     %r5508 <- txtToken, %arg1, %arg3
	call.64     %r5509 <- luaO_pushfstring, %r5503, %r5504, %r5500(msg), %r5508
	br          .L1233

.L1233:
	load.64     %r5511 <- 56[%arg1]
	call        luaD_throw, %r5511, $3
	ret


luaX_syntaxerror:
.L1235:
	<entry-point>
	load.32     %r5515 <- 16[%arg1]
	call        luaX_lexerror, %arg1, %arg2, %r5515
	ret


luaX_newstring:
.L1237:
	<entry-point>
	load.64     %r5517 <- 56[%arg1]
	call.64     %r5521 <- luaS_newlstr, %r5517, %arg2, %arg3
	load.64     %r5524 <- 48[%arg1]
	load.64     %r5525 <- 8[%r5524]
	call.64     %r5527 <- luaH_setstr, %r5517, %r5525, %r5521
	load.32     %r5529 <- 8[%r5527]
	br          %r5529, .L1242, .L1238

.L1238:
	store.32    $1 -> 0[%r5527]
	store.32    $1 -> 8[%r5527]
	load.64     %r5535 <- 32[%r5517]
	load.64     %r5536 <- 120[%r5535]
	load.64     %r5539 <- 112[%r5535]
	setae.32    %r5540 <- %r5536, %r5539
	br          %r5540, .L1240, .L1242

.L1240:
	call        luaC_step, %r5517
	br          .L1242

.L1242:
	ret.64      %r5521


inclinenumber:
.L1243:
	<entry-point>
	load.32     %r5545 <- 0[%arg1]
	load.64     %r5547 <- 64[%arg1]
	load.64     %r5548 <- 0[%r5547]
	add.64      %r5549 <- %r5548, $-1
	store.64    %r5549 -> 0[%r5547]
	seta.32     %r5550 <- %r5548, $0
	br          %r5550, .L1244, .L1245

.L1244:
	load.64     %r5552 <- 64[%arg1]
	load.64     %r5553 <- 8[%r5552]
	add.64      %r5554 <- %r5553, $1
	store.64    %r5554 -> 8[%r5552]
	load.8      %r5555 <- 0[%r5553]
	cast.32     %r5557 <- (8) %r5555
	phisrc.32   %phi987 <- %r5557
	br          .L1246

.L1245:
	load.64     %r5559 <- 64[%arg1]
	call.32     %r5560 <- luaZ_fill, %r5559
	phisrc.32   %phi988 <- %r5560
	br          .L1246

.L1246:
	phi.32      %r5561 <- %phi987, %phi988
	store.32    %r5561 -> 0[%arg1]
	seteq.32    %r5565 <- %r5561, $10
	br          %r5565, .L1249, .L1250

.L1250:
	seteq.32    %r5568 <- %r5561, $13
	br          %r5568, .L1249, .L1248

.L1249:
	setne.32    %r5572 <- %r5561, %r5545
	br          %r5572, .L1247, .L1248

.L1247:
	load.64     %r5574 <- 64[%arg1]
	load.64     %r5575 <- 0[%r5574]
	add.64      %r5576 <- %r5575, $-1
	store.64    %r5576 -> 0[%r5574]
	seta.32     %r5577 <- %r5575, $0
	br          %r5577, .L1251, .L1252

.L1251:
	load.64     %r5579 <- 64[%arg1]
	load.64     %r5580 <- 8[%r5579]
	add.64      %r5581 <- %r5580, $1
	store.64    %r5581 -> 8[%r5579]
	load.8      %r5582 <- 0[%r5580]
	cast.32     %r5584 <- (8) %r5582
	phisrc.32   %phi989 <- %r5584
	br          .L1253

.L1252:
	load.64     %r5586 <- 64[%arg1]
	call.32     %r5587 <- luaZ_fill, %r5586
	phisrc.32   %phi990 <- %r5587
	br          .L1253

.L1253:
	phi.32      %r5588 <- %phi989, %phi990
	store.32    %r5588 -> 0[%arg1]
	br          .L1248

.L1248:
	load.32     %r5591 <- 4[%arg1]
	add.32      %r5592 <- %r5591, $1
	store.32    %r5592 -> 4[%arg1]
	setge.32    %r5593 <- %r5592, $0x7ffffffd
	br          %r5593, .L1254, .L1255

.L1254:
	symaddr.64  %r5595 <- <anon symbol:0x62d0012a6810>
	call        luaX_syntaxerror, %arg1, %r5595
	br          .L1255

.L1255:
	ret


luaX_setinput:
.L1256:
	<entry-point>
	store.8     $46 -> 88[%arg2]
	store.64    %arg1 -> 56[%arg2]
	store.32    $287 -> 32[%arg2]
	store.64    %arg3 -> 64[%arg2]
	store.64    $0 -> 48[%arg2]
	store.32    $1 -> 4[%arg2]
	store.32    $1 -> 8[%arg2]
	store.64    %arg4 -> 80[%arg2]
	load.64     %r5610 <- 72[%arg2]
	load.64     %r5611 <- 0[%r5610]
	cast.64     %r5612 <- (64) %r5611
	load.64     %r5615 <- 16[%r5610]
	call.64     %r5617 <- luaM_realloc_, %arg1, %r5612, %r5615, $32
	ptrcast.64  %r5618 <- (64) %r5617
	load.64     %r5620 <- 72[%arg2]
	store.64    %r5618 -> 0[%r5620]
	load.64     %r5622 <- 72[%arg2]
	store.64    $32 -> 16[%r5622]
	load.64     %r5624 <- 64[%arg2]
	load.64     %r5625 <- 0[%r5624]
	add.64      %r5626 <- %r5625, $-1
	store.64    %r5626 -> 0[%r5624]
	seta.32     %r5627 <- %r5625, $0
	br          %r5627, .L1257, .L1258

.L1257:
	load.64     %r5629 <- 64[%arg2]
	load.64     %r5630 <- 8[%r5629]
	add.64      %r5631 <- %r5630, $1
	store.64    %r5631 -> 8[%r5629]
	load.8      %r5632 <- 0[%r5630]
	cast.32     %r5634 <- (8) %r5632
	phisrc.32   %phi994 <- %r5634
	br          .L1259

.L1258:
	load.64     %r5636 <- 64[%arg2]
	call.32     %r5637 <- luaZ_fill, %r5636
	phisrc.32   %phi995 <- %r5637
	br          .L1259

.L1259:
	phi.32      %r5638 <- %phi994, %phi995
	store.32    %r5638 -> 0[%arg2]
	ret


check_next:
.L1261:
	<entry-point>
	load.32     %r5642 <- 0[%arg1]
	call.64     %r5643 <- strchr, %arg2, %r5642
	br          %r5643, .L1263, .L1262

.L1262:
	phisrc.32   %phi996(return) <- $0
	br          .L1264

.L1263:
	load.32     %r5647 <- 0[%arg1]
	call        save, %arg1, %r5647
	load.64     %r5649 <- 64[%arg1]
	load.64     %r5650 <- 0[%r5649]
	add.64      %r5651 <- %r5650, $-1
	store.64    %r5651 -> 0[%r5649]
	seta.32     %r5652 <- %r5650, $0
	br          %r5652, .L1265, .L1266

.L1265:
	load.64     %r5654 <- 64[%arg1]
	load.64     %r5655 <- 8[%r5654]
	add.64      %r5656 <- %r5655, $1
	store.64    %r5656 -> 8[%r5654]
	load.8      %r5657 <- 0[%r5655]
	cast.32     %r5659 <- (8) %r5657
	phisrc.32   %phi997 <- %r5659
	br          .L1267

.L1266:
	load.64     %r5661 <- 64[%arg1]
	call.32     %r5662 <- luaZ_fill, %r5661
	phisrc.32   %phi998 <- %r5662
	br          .L1267

.L1267:
	phi.32      %r5663 <- %phi997, %phi998
	store.32    %r5663 -> 0[%arg1]
	phisrc.32   %phi999(return) <- $1
	br          .L1264

.L1264:
	phi.32      %r5644 <- %phi996(return), %phi999(return)
	ret.32      %r5644


buffreplace:
.L1268:
	<entry-point>
	load.64     %r5666 <- 72[%arg1]
	load.64     %r5667(n) <- 8[%r5666]
	load.64     %r5670 <- 0[%r5666]
	phisrc.64   %phi1002(n) <- %r5667(n)
	br          .L1272

.L1272:
	phi.64      %r5671 <- %phi1002(n), %phi1003(n)
	add.64      %r5672(n) <- %r5671, $-1
	phisrc.64   %phi1003(n) <- %r5672(n)
	br          %r5671, .L1269, .L1271

.L1269:
	add.64      %r5675 <- %r5670, %r5672(n)
	load.8      %r5676 <- 0[%r5675]
	scast.32    %r5677 <- (8) %r5676
	scast.32    %r5679 <- (8) %arg2
	seteq.32    %r5680 <- %r5677, %r5679
	br          %r5680, .L1273, .L1272

.L1273:
	store.8     %arg3 -> 0[%r5675]
	br          .L1272

.L1271:
	ret


read_numeral:
.L1275:
	<entry-point>
	br          .L1276

.L1276:
	load.32     %r5687 <- 0[%arg1]
	call        save, %arg1, %r5687
	load.64     %r5689 <- 64[%arg1]
	load.64     %r5690 <- 0[%r5689]
	add.64      %r5691 <- %r5690, $-1
	store.64    %r5691 -> 0[%r5689]
	seta.32     %r5692 <- %r5690, $0
	br          %r5692, .L1279, .L1280

.L1279:
	load.64     %r5694 <- 64[%arg1]
	load.64     %r5695 <- 8[%r5694]
	add.64      %r5696 <- %r5695, $1
	store.64    %r5696 -> 8[%r5694]
	load.8      %r5697 <- 0[%r5695]
	cast.32     %r5699 <- (8) %r5697
	phisrc.32   %phi1004 <- %r5699
	br          .L1281

.L1280:
	load.64     %r5701 <- 64[%arg1]
	call.32     %r5702 <- luaZ_fill, %r5701
	phisrc.32   %phi1005 <- %r5702
	br          .L1281

.L1281:
	phi.32      %r5703 <- %phi1004, %phi1005
	store.32    %r5703 -> 0[%arg1]
	call.64     %r5705 <- __ctype_b_loc
	load.64     %r5706 <- 0[%r5705]
	load.32     %r5708 <- 0[%arg1]
	scast.64    %r5710 <- (32) %r5708
	muls.64     %r5711 <- %r5710, $2
	add.64      %r5712 <- %r5706, %r5711
	load.16     %r5713 <- 0[%r5712]
	cast.32     %r5714 <- (16) %r5713
	and.32      %r5715 <- %r5714, $0x800
	br          %r5715, .L1276, .L1282

.L1282:
	seteq.32    %r5718 <- %r5708, $46
	br          %r5718, .L1276, .L1278

.L1278:
	symaddr.64  %r5720 <- <anon symbol:0x62d0012cbe60>
	call.32     %r5721 <- check_next, %arg1, %r5720
	br          %r5721, .L1283, .L1288

.L1283:
	symaddr.64  %r5723 <- <anon symbol:0x62d0012cc200>
	call.32     %r5724 <- check_next, %arg1, %r5723
	br          .L1288

.L1288:
	call.64     %r5725 <- __ctype_b_loc
	load.64     %r5726 <- 0[%r5725]
	load.32     %r5728 <- 0[%arg1]
	scast.64    %r5730 <- (32) %r5728
	muls.64     %r5731 <- %r5730, $2
	add.64      %r5732 <- %r5726, %r5731
	load.16     %r5733 <- 0[%r5732]
	cast.32     %r5734 <- (16) %r5733
	and.32      %r5735 <- %r5734, $8
	br          %r5735, .L1285, .L1289

.L1289:
	seteq.32    %r5738 <- %r5728, $95
	br          %r5738, .L1285, .L1287

.L1285:
	call        save, %arg1, %r5728
	load.64     %r5743 <- 64[%arg1]
	load.64     %r5744 <- 0[%r5743]
	add.64      %r5745 <- %r5744, $-1
	store.64    %r5745 -> 0[%r5743]
	seta.32     %r5746 <- %r5744, $0
	br          %r5746, .L1290, .L1291

.L1290:
	load.64     %r5748 <- 64[%arg1]
	load.64     %r5749 <- 8[%r5748]
	add.64      %r5750 <- %r5749, $1
	store.64    %r5750 -> 8[%r5748]
	load.8      %r5751 <- 0[%r5749]
	cast.32     %r5753 <- (8) %r5751
	phisrc.32   %phi1006 <- %r5753
	br          .L1292

.L1291:
	load.64     %r5755 <- 64[%arg1]
	call.32     %r5756 <- luaZ_fill, %r5755
	phisrc.32   %phi1007 <- %r5756
	br          .L1292

.L1292:
	phi.32      %r5757 <- %phi1006, %phi1007
	store.32    %r5757 -> 0[%arg1]
	br          .L1288

.L1287:
	call        save, %arg1, $0
	load.8      %r5762 <- 88[%arg1]
	call        buffreplace, %arg1, $46, %r5762
	load.64     %r5764 <- 72[%arg1]
	load.64     %r5765 <- 0[%r5764]
	call.32     %r5768 <- luaO_str2d, %r5765, %arg2
	br          %r5768, .L1294, .L1293

.L1293:
	symaddr.64  %r5770 <- <anon symbol:0x62d0012cdfe8>
	call        luaX_lexerror, %arg1, %r5770, $284
	br          .L1294

.L1294:
	ret


skip_sep:
.L1295:
	<entry-point>
	load.32     %r5772 <- 0[%arg1]
	call        save, %arg1, %r5772
	load.64     %r5777 <- 64[%arg1]
	load.64     %r5778 <- 0[%r5777]
	add.64      %r5779 <- %r5778, $-1
	store.64    %r5779 -> 0[%r5777]
	seta.32     %r5780 <- %r5778, $0
	phisrc.32   %phi1017(count) <- $0
	phisrc.32   %phi1019(count) <- $0
	br          %r5780, .L1296, .L1297

.L1296:
	load.64     %r5782 <- 64[%arg1]
	load.64     %r5783 <- 8[%r5782]
	add.64      %r5784 <- %r5783, $1
	store.64    %r5784 -> 8[%r5782]
	load.8      %r5785 <- 0[%r5783]
	cast.32     %r5787 <- (8) %r5785
	phisrc.32   %phi1012 <- %r5787
	br          .L1298

.L1297:
	load.64     %r5789 <- 64[%arg1]
	call.32     %r5790 <- luaZ_fill, %r5789
	phisrc.32   %phi1013 <- %r5790
	br          .L1298

.L1298:
	phi.32      %r5791 <- %phi1012, %phi1013
	store.32    %r5791 -> 0[%arg1]
	phisrc.32   %phi1023 <- %r5791
	br          .L1302

.L1302:
	phi.32      %r5794 <- %phi1023, %phi1024
	seteq.32    %r5795 <- %r5794, $61
	br          %r5795, .L1299, .L1301

.L1299:
	call        save, %arg1, %r5794
	load.64     %r5800 <- 64[%arg1]
	load.64     %r5801 <- 0[%r5800]
	add.64      %r5802 <- %r5801, $-1
	store.64    %r5802 -> 0[%r5800]
	seta.32     %r5803 <- %r5801, $0
	br          %r5803, .L1303, .L1304

.L1303:
	load.64     %r5805 <- 64[%arg1]
	load.64     %r5806 <- 8[%r5805]
	add.64      %r5807 <- %r5806, $1
	store.64    %r5807 -> 8[%r5805]
	load.8      %r5808 <- 0[%r5806]
	cast.32     %r5810 <- (8) %r5808
	phisrc.32   %phi1014 <- %r5810
	br          .L1305

.L1304:
	load.64     %r5812 <- 64[%arg1]
	call.32     %r5813 <- luaZ_fill, %r5812
	phisrc.32   %phi1015 <- %r5813
	br          .L1305

.L1305:
	phi.32      %r5814 <- %phi1014, %phi1015
	store.32    %r5814 -> 0[%arg1]
	phi.32      %r5816 <- %phi1019(count), %phi1020(count)
	add.32      %r5817 <- %r5816, $1
	phisrc.32   %phi1018(count) <- %r5817
	phisrc.32   %phi1020(count) <- %r5817
	phisrc.32   %phi1024 <- %r5814
	br          .L1302

.L1301:
	phi.32      %r5818 <- %phi1017(count), %phi1018(count)
	neg.32      %r5820 <- %r5818
	add.32      %r5821 <- %r5820, $-1
	seteq.32    %r5825 <- %r5794, %r5772
	select.32   %r5826 <- %r5825, %r5818, %r5821
	ret.32      %r5826


read_long_string:
.L1307:
	<entry-point>
	load.32     %r5830 <- 0[%arg1]
	call        save, %arg1, %r5830
	load.64     %r5832 <- 64[%arg1]
	load.64     %r5833 <- 0[%r5832]
	add.64      %r5834 <- %r5833, $-1
	store.64    %r5834 -> 0[%r5832]
	seta.32     %r5835 <- %r5833, $0
	br          %r5835, .L1308, .L1309

.L1308:
	load.64     %r5837 <- 64[%arg1]
	load.64     %r5838 <- 8[%r5837]
	add.64      %r5839 <- %r5838, $1
	store.64    %r5839 -> 8[%r5837]
	load.8      %r5840 <- 0[%r5838]
	cast.32     %r5842 <- (8) %r5840
	phisrc.32   %phi1025 <- %r5842
	br          .L1310

.L1309:
	load.64     %r5844 <- 64[%arg1]
	call.32     %r5845 <- luaZ_fill, %r5844
	phisrc.32   %phi1026 <- %r5845
	br          .L1310

.L1310:
	phi.32      %r5846 <- %phi1025, %phi1026
	store.32    %r5846 -> 0[%arg1]
	seteq.32    %r5850 <- %r5846, $10
	phisrc.32   %phi1036 <- %r5846
	br          %r5850, .L1311, .L1313

.L1313:
	seteq.32    %r5853 <- %r5846, $13
	phisrc.32   %phi1034 <- %r5846
	br          %r5853, .L1311, .L1314

.L1311:
	call        inclinenumber, %arg1
	br          .L1314

.L1314:
	load.32     %r5856 <- 0[%arg1]
	switch      %r5856, -1 -> .L1319, 10 -> .L1322, 13 -> .L1322, 93 -> .L1320, default -> .L1323

.L1319:
	symaddr.64  %r5858 <- <anon symbol:0x62d0012d1818>
	symaddr.64  %r5859 <- <anon symbol:0x62d0012d1478>
	ptrcast.64  %r5860 <- (64) %r5859
	select.64   %r5862 <- %arg2, %r5858, %r5860
	call        luaX_lexerror, %arg1, %r5862, $287
	br          .L1314

.L1320:
	call.32     %r5864 <- skip_sep, %arg1
	seteq.32    %r5866 <- %r5864, %arg3
	br          %r5866, .L1324, .L1314

.L1324:
	load.32     %r5869 <- 0[%arg1]
	call        save, %arg1, %r5869
	load.64     %r5871 <- 64[%arg1]
	load.64     %r5872 <- 0[%r5871]
	add.64      %r5873 <- %r5872, $-1
	store.64    %r5873 -> 0[%r5871]
	seta.32     %r5874 <- %r5872, $0
	br          %r5874, .L1326, .L1327

.L1326:
	load.64     %r5876 <- 64[%arg1]
	load.64     %r5877 <- 8[%r5876]
	add.64      %r5878 <- %r5877, $1
	store.64    %r5878 -> 8[%r5876]
	load.8      %r5879 <- 0[%r5877]
	cast.32     %r5881 <- (8) %r5879
	phisrc.32   %phi1027 <- %r5881
	br          .L1328

.L1327:
	load.64     %r5883 <- 64[%arg1]
	call.32     %r5884 <- luaZ_fill, %r5883
	phisrc.32   %phi1028 <- %r5884
	br          .L1328

.L1328:
	phi.32      %r5885 <- %phi1027, %phi1028
	store.32    %r5885 -> 0[%arg1]
	br          %arg2, .L1341, .L1342

.L1322:
	call        save, %arg1, $10
	call        inclinenumber, %arg1
	br          %arg2, .L1314, .L1330

.L1330:
	load.64     %r5891 <- 72[%arg1]
	store.64    $0 -> 8[%r5891]
	br          .L1314

.L1323:
	br          %arg2, .L1332, .L1333

.L1332:
	call        save, %arg1, %r5856
	load.64     %r5897 <- 64[%arg1]
	load.64     %r5898 <- 0[%r5897]
	add.64      %r5899 <- %r5898, $-1
	store.64    %r5899 -> 0[%r5897]
	seta.32     %r5900 <- %r5898, $0
	br          %r5900, .L1334, .L1335

.L1334:
	load.64     %r5902 <- 64[%arg1]
	load.64     %r5903 <- 8[%r5902]
	add.64      %r5904 <- %r5903, $1
	store.64    %r5904 -> 8[%r5902]
	load.8      %r5905 <- 0[%r5903]
	cast.32     %r5907 <- (8) %r5905
	phisrc.32   %phi1029 <- %r5907
	br          .L1336

.L1335:
	load.64     %r5909 <- 64[%arg1]
	call.32     %r5910 <- luaZ_fill, %r5909
	phisrc.32   %phi1030 <- %r5910
	br          .L1336

.L1336:
	phi.32      %r5911 <- %phi1029, %phi1030
	store.32    %r5911 -> 0[%arg1]
	br          .L1314

.L1333:
	load.64     %r5914 <- 64[%arg1]
	load.64     %r5915 <- 0[%r5914]
	add.64      %r5916 <- %r5915, $-1
	store.64    %r5916 -> 0[%r5914]
	seta.32     %r5917 <- %r5915, $0
	br          %r5917, .L1338, .L1339

.L1338:
	load.64     %r5919 <- 64[%arg1]
	load.64     %r5920 <- 8[%r5919]
	add.64      %r5921 <- %r5920, $1
	store.64    %r5921 -> 8[%r5919]
	load.8      %r5922 <- 0[%r5920]
	cast.32     %r5924 <- (8) %r5922
	phisrc.32   %phi1031 <- %r5924
	br          .L1340

.L1339:
	load.64     %r5926 <- 64[%arg1]
	call.32     %r5927 <- luaZ_fill, %r5926
	phisrc.32   %phi1032 <- %r5927
	br          .L1340

.L1340:
	phi.32      %r5928 <- %phi1031, %phi1032
	store.32    %r5928 -> 0[%arg1]
	br          .L1314

.L1341:
	load.64     %r5933 <- 72[%arg1]
	load.64     %r5934 <- 0[%r5933]
	add.32      %r5936 <- %arg3, $2
	scast.64    %r5937 <- (32) %r5936
	add.64      %r5938 <- %r5934, %r5937
	load.64     %r5941 <- 8[%r5933]
	muls.32     %r5944 <- %r5936, $2
	scast.64    %r5945 <- (32) %r5944
	sub.64      %r5946 <- %r5941, %r5945
	call.64     %r5947 <- luaX_newstring, %arg1, %r5938, %r5946
	store.64    %r5947 -> 0[%arg2]
	br          .L1342

.L1342:
	ret


read_string:
.L1343:
	<entry-point>
	load.32     %r5951 <- 0[%arg1]
	call        save, %arg1, %r5951
	load.64     %r5953 <- 64[%arg1]
	load.64     %r5954 <- 0[%r5953]
	add.64      %r5955 <- %r5954, $-1
	store.64    %r5955 -> 0[%r5953]
	seta.32     %r5956 <- %r5954, $0
	br          %r5956, .L1344, .L1345

.L1344:
	load.64     %r5958 <- 64[%arg1]
	load.64     %r5959 <- 8[%r5958]
	add.64      %r5960 <- %r5959, $1
	store.64    %r5960 -> 8[%r5958]
	load.8      %r5961 <- 0[%r5959]
	cast.32     %r5963 <- (8) %r5961
	phisrc.32   %phi1037 <- %r5963
	br          .L1346

.L1345:
	load.64     %r5965 <- 64[%arg1]
	call.32     %r5966 <- luaZ_fill, %r5965
	phisrc.32   %phi1038 <- %r5966
	br          .L1346

.L1346:
	phi.32      %r5967 <- %phi1037, %phi1038
	store.32    %r5967 -> 0[%arg1]
	phisrc.32   %phi1070 <- %r5967
	phisrc.32   %phi1071 <- %r5967
	br          .L1350

.L1350:
	load.32     %r5970 <- 0[%arg1]
	setne.32    %r5972 <- %r5970, %arg2
	br          %r5972, .L1347, .L1349

.L1347:
	switch      %r5970, -1 -> .L1352, 10 -> .L1354, 13 -> .L1354, 92 -> .L1355, default -> .L1356

.L1352:
	symaddr.64  %r5976 <- <anon symbol:0x62d0012c3b60>
	call        luaX_lexerror, %arg1, %r5976, $287
	br          .L1350

.L1354:
	symaddr.64  %r5978 <- <anon symbol:0x62d0012c3f00>
	call        luaX_lexerror, %arg1, %r5978, $286
	br          .L1350

.L1355:
	load.64     %r5980 <- 64[%arg1]
	load.64     %r5981 <- 0[%r5980]
	add.64      %r5982 <- %r5981, $-1
	store.64    %r5982 -> 0[%r5980]
	seta.32     %r5983 <- %r5981, $0
	br          %r5983, .L1357, .L1358

.L1357:
	load.64     %r5985 <- 64[%arg1]
	load.64     %r5986 <- 8[%r5985]
	add.64      %r5987 <- %r5986, $1
	store.64    %r5987 -> 8[%r5985]
	load.8      %r5988 <- 0[%r5986]
	cast.32     %r5990 <- (8) %r5988
	phisrc.32   %phi1039 <- %r5990
	br          .L1359

.L1358:
	load.64     %r5992 <- 64[%arg1]
	call.32     %r5993 <- luaZ_fill, %r5992
	phisrc.32   %phi1040 <- %r5993
	br          .L1359

.L1359:
	phi.32      %r5994 <- %phi1039, %phi1040
	store.32    %r5994 -> 0[%arg1]
	switch      %r5994, -1 -> .L1350, 10 -> .L1369, 13 -> .L1369, 97 -> .L1361, 98 -> .L1362, 102 -> .L1363, 110 -> .L1364, 114 -> .L1365, 116 -> .L1366, 118 -> .L1367, default -> .L1371

.L1361:
	phisrc.32   %phi1051(c) <- $7
	br          .L1360

.L1362:
	phisrc.32   %phi1052(c) <- $8
	br          .L1360

.L1363:
	phisrc.32   %phi1053(c) <- $12
	br          .L1360

.L1364:
	phisrc.32   %phi1054(c) <- $10
	br          .L1360

.L1365:
	phisrc.32   %phi1055(c) <- $13
	br          .L1360

.L1366:
	phisrc.32   %phi1056(c) <- $9
	br          .L1360

.L1367:
	phisrc.32   %phi1057(c) <- $11
	br          .L1360

.L1369:
	call        save, %arg1, $10
	call        inclinenumber, %arg1
	br          .L1350

.L1371:
	call.64     %r6000 <- __ctype_b_loc
	load.64     %r6001 <- 0[%r6000]
	load.32     %r6003 <- 0[%arg1]
	scast.64    %r6005 <- (32) %r6003
	muls.64     %r6006 <- %r6005, $2
	add.64      %r6007 <- %r6001, %r6006
	load.16     %r6008 <- 0[%r6007]
	cast.32     %r6009 <- (16) %r6008
	and.32      %r6010 <- %r6009, $0x800
	phisrc.32   %phi1066 <- %r6003
	br          %r6010, .L1373, .L1372

.L1372:
	call        save, %arg1, %r6003
	load.64     %r6015 <- 64[%arg1]
	load.64     %r6016 <- 0[%r6015]
	add.64      %r6017 <- %r6016, $-1
	store.64    %r6017 -> 0[%r6015]
	seta.32     %r6018 <- %r6016, $0
	br          %r6018, .L1374, .L1375

.L1374:
	load.64     %r6020 <- 64[%arg1]
	load.64     %r6021 <- 8[%r6020]
	add.64      %r6022 <- %r6021, $1
	store.64    %r6022 -> 8[%r6020]
	load.8      %r6023 <- 0[%r6021]
	cast.32     %r6025 <- (8) %r6023
	phisrc.32   %phi1041 <- %r6025
	br          .L1376

.L1375:
	load.64     %r6027 <- 64[%arg1]
	call.32     %r6028 <- luaZ_fill, %r6027
	phisrc.32   %phi1042 <- %r6028
	br          .L1376

.L1376:
	phi.32      %r6029 <- %phi1041, %phi1042
	store.32    %r6029 -> 0[%arg1]
	br          .L1350

.L1373:
	phisrc.32   %phi1060(c) <- $0
	phisrc.32   %phi1062(i) <- $0
	br          .L1378

.L1378:
	phi.32      %r6031 <- %phi1060(c), %phi1061(c)
	muls.32     %r6032 <- %r6031, $10
	phi.32      %r6034 <- %phi1066, %phi1067
	add.32      %r6035 <- %r6034, $-48
	add.32      %r6036(c) <- %r6032, %r6035
	load.64     %r6038 <- 64[%arg1]
	load.64     %r6039 <- 0[%r6038]
	add.64      %r6040 <- %r6039, $-1
	store.64    %r6040 -> 0[%r6038]
	seta.32     %r6041 <- %r6039, $0
	phisrc.32   %phi1061(c) <- %r6036(c)
	br          %r6041, .L1381, .L1382

.L1381:
	load.64     %r6043 <- 64[%arg1]
	load.64     %r6044 <- 8[%r6043]
	add.64      %r6045 <- %r6044, $1
	store.64    %r6045 -> 8[%r6043]
	load.8      %r6046 <- 0[%r6044]
	cast.32     %r6048 <- (8) %r6046
	phisrc.32   %phi1043 <- %r6048
	br          .L1383

.L1382:
	load.64     %r6050 <- 64[%arg1]
	call.32     %r6051 <- luaZ_fill, %r6050
	phisrc.32   %phi1044 <- %r6051
	br          .L1383

.L1383:
	phi.32      %r6052 <- %phi1043, %phi1044
	store.32    %r6052 -> 0[%arg1]
	phi.32      %r6054 <- %phi1062(i), %phi1063(i)
	add.32      %r6055 <- %r6054, $1
	setlt.32    %r6056 <- %r6055, $3
	phisrc.32   %phi1063(i) <- %r6055
	br          %r6056, .L1384, .L1380

.L1384:
	call.64     %r6057 <- __ctype_b_loc
	load.64     %r6058 <- 0[%r6057]
	load.32     %r6060 <- 0[%arg1]
	scast.64    %r6062 <- (32) %r6060
	muls.64     %r6063 <- %r6062, $2
	add.64      %r6064 <- %r6058, %r6063
	load.16     %r6065 <- 0[%r6064]
	cast.32     %r6066 <- (16) %r6065
	and.32      %r6067 <- %r6066, $0x800
	phisrc.32   %phi1067 <- %r6060
	br          %r6067, .L1378, .L1380

.L1380:
	setgt.32    %r6069 <- %r6036(c), $255
	br          %r6069, .L1385, .L1386

.L1385:
	symaddr.64  %r6071 <- <anon symbol:0x62d0012c6ff0>
	call        luaX_lexerror, %arg1, %r6071, $286
	br          .L1386

.L1386:
	call        save, %arg1, %r6036(c)
	br          .L1350

.L1360:
	phi.32      %r6075 <- %phi1051(c), %phi1052(c), %phi1053(c), %phi1054(c), %phi1055(c), %phi1056(c), %phi1057(c)
	call        save, %arg1, %r6075
	load.64     %r6077 <- 64[%arg1]
	load.64     %r6078 <- 0[%r6077]
	add.64      %r6079 <- %r6078, $-1
	store.64    %r6079 -> 0[%r6077]
	seta.32     %r6080 <- %r6078, $0
	br          %r6080, .L1387, .L1388

.L1387:
	load.64     %r6082 <- 64[%arg1]
	load.64     %r6083 <- 8[%r6082]
	add.64      %r6084 <- %r6083, $1
	store.64    %r6084 -> 8[%r6082]
	load.8      %r6085 <- 0[%r6083]
	cast.32     %r6087 <- (8) %r6085
	phisrc.32   %phi1045 <- %r6087
	br          .L1389

.L1388:
	load.64     %r6089 <- 64[%arg1]
	call.32     %r6090 <- luaZ_fill, %r6089
	phisrc.32   %phi1046 <- %r6090
	br          .L1389

.L1389:
	phi.32      %r6091 <- %phi1045, %phi1046
	store.32    %r6091 -> 0[%arg1]
	br          .L1350

.L1356:
	call        save, %arg1, %r5970
	load.64     %r6097 <- 64[%arg1]
	load.64     %r6098 <- 0[%r6097]
	add.64      %r6099 <- %r6098, $-1
	store.64    %r6099 -> 0[%r6097]
	seta.32     %r6100 <- %r6098, $0
	br          %r6100, .L1390, .L1391

.L1390:
	load.64     %r6102 <- 64[%arg1]
	load.64     %r6103 <- 8[%r6102]
	add.64      %r6104 <- %r6103, $1
	store.64    %r6104 -> 8[%r6102]
	load.8      %r6105 <- 0[%r6103]
	cast.32     %r6107 <- (8) %r6105
	phisrc.32   %phi1047 <- %r6107
	br          .L1392

.L1391:
	load.64     %r6109 <- 64[%arg1]
	call.32     %r6110 <- luaZ_fill, %r6109
	phisrc.32   %phi1048 <- %r6110
	br          .L1392

.L1392:
	phi.32      %r6111 <- %phi1047, %phi1048
	store.32    %r6111 -> 0[%arg1]
	br          .L1350

.L1349:
	call        save, %arg1, %r5970
	load.64     %r6117 <- 64[%arg1]
	load.64     %r6118 <- 0[%r6117]
	add.64      %r6119 <- %r6118, $-1
	store.64    %r6119 -> 0[%r6117]
	seta.32     %r6120 <- %r6118, $0
	br          %r6120, .L1393, .L1394

.L1393:
	load.64     %r6122 <- 64[%arg1]
	load.64     %r6123 <- 8[%r6122]
	add.64      %r6124 <- %r6123, $1
	store.64    %r6124 -> 8[%r6122]
	load.8      %r6125 <- 0[%r6123]
	cast.32     %r6127 <- (8) %r6125
	phisrc.32   %phi1049 <- %r6127
	br          .L1395

.L1394:
	load.64     %r6129 <- 64[%arg1]
	call.32     %r6130 <- luaZ_fill, %r6129
	phisrc.32   %phi1050 <- %r6130
	br          .L1395

.L1395:
	phi.32      %r6131 <- %phi1049, %phi1050
	store.32    %r6131 -> 0[%arg1]
	load.64     %r6135 <- 72[%arg1]
	load.64     %r6136 <- 0[%r6135]
	add.64      %r6137 <- %r6136, $1
	load.64     %r6140 <- 8[%r6135]
	add.64      %r6141 <- %r6140, $-2
	call.64     %r6142 <- luaX_newstring, %arg1, %r6137, %r6141
	store.64    %r6142 -> 0[%arg3]
	ret


llex:
.L1397:
	<entry-point>
	load.64     %r6145 <- 72[%arg1]
	store.64    $0 -> 8[%r6145]
	br          .L1398

.L1398:
	load.32     %r6147 <- 0[%arg1]
	switch      %r6147, -1 -> .L1414, 10 -> .L1404, 13 -> .L1404, 34 -> .L1412, 39 -> .L1412, 45 -> .L1405, 46 -> .L1413, 60 -> .L1408, 61 -> .L1407, 62 -> .L1409, 91 -> .L1406, 126 -> .L1410, default -> .L1415

.L1404:
	call        inclinenumber, %arg1
	br          .L1398

.L1405:
	load.64     %r6150 <- 64[%arg1]
	load.64     %r6151 <- 0[%r6150]
	add.64      %r6152 <- %r6151, $-1
	store.64    %r6152 -> 0[%r6150]
	seta.32     %r6153 <- %r6151, $0
	br          %r6153, .L1416, .L1417

.L1416:
	load.64     %r6155 <- 64[%arg1]
	load.64     %r6156 <- 8[%r6155]
	add.64      %r6157 <- %r6156, $1
	store.64    %r6157 -> 8[%r6155]
	load.8      %r6158 <- 0[%r6156]
	cast.32     %r6160 <- (8) %r6158
	phisrc.32   %phi1072 <- %r6160
	br          .L1418

.L1417:
	load.64     %r6162 <- 64[%arg1]
	call.32     %r6163 <- luaZ_fill, %r6162
	phisrc.32   %phi1073 <- %r6163
	br          .L1418

.L1418:
	phi.32      %r6164 <- %phi1072, %phi1073
	store.32    %r6164 -> 0[%arg1]
	setne.32    %r6168 <- %r6164, $45
	br          %r6168, .L1419, .L1420

.L1419:
	phisrc.32   %phi1074(return) <- $45
	br          .L1421

.L1420:
	load.64     %r6171 <- 64[%arg1]
	load.64     %r6172 <- 0[%r6171]
	add.64      %r6173 <- %r6172, $-1
	store.64    %r6173 -> 0[%r6171]
	seta.32     %r6174 <- %r6172, $0
	br          %r6174, .L1422, .L1423

.L1422:
	load.64     %r6176 <- 64[%arg1]
	load.64     %r6177 <- 8[%r6176]
	add.64      %r6178 <- %r6177, $1
	store.64    %r6178 -> 8[%r6176]
	load.8      %r6179 <- 0[%r6177]
	cast.32     %r6181 <- (8) %r6179
	phisrc.32   %phi1075 <- %r6181
	br          .L1424

.L1423:
	load.64     %r6183 <- 64[%arg1]
	call.32     %r6184 <- luaZ_fill, %r6183
	phisrc.32   %phi1076 <- %r6184
	br          .L1424

.L1424:
	phi.32      %r6185 <- %phi1075, %phi1076
	store.32    %r6185 -> 0[%arg1]
	seteq.32    %r6189 <- %r6185, $91
	phisrc.32   %phi1136 <- %r6185
	phisrc.32   %phi1137 <- %r6185
	br          %r6189, .L1425, .L1432

.L1425:
	call.32     %r6191 <- skip_sep, %arg1
	load.64     %r6193 <- 72[%arg1]
	store.64    $0 -> 8[%r6193]
	setge.32    %r6195 <- %r6191, $0
	br          %r6195, .L1427, .L1432

.L1427:
	call        read_long_string, %arg1, $0, %r6191
	load.64     %r6199 <- 72[%arg1]
	store.64    $0 -> 8[%r6199]
	br          .L1398

.L1432:
	load.32     %r6201 <- 0[%arg1]
	seteq.32    %r6202 <- %r6201, $10
	br          %r6202, .L1398, .L1434

.L1434:
	seteq.32    %r6205 <- %r6201, $13
	br          %r6205, .L1398, .L1433

.L1433:
	setne.32    %r6208 <- %r6201, $0xffffffff
	br          %r6208, .L1429, .L1398

.L1429:
	load.64     %r6210 <- 64[%arg1]
	load.64     %r6211 <- 0[%r6210]
	add.64      %r6212 <- %r6211, $-1
	store.64    %r6212 -> 0[%r6210]
	seta.32     %r6213 <- %r6211, $0
	br          %r6213, .L1435, .L1436

.L1435:
	load.64     %r6215 <- 64[%arg1]
	load.64     %r6216 <- 8[%r6215]
	add.64      %r6217 <- %r6216, $1
	store.64    %r6217 -> 8[%r6215]
	load.8      %r6218 <- 0[%r6216]
	cast.32     %r6220 <- (8) %r6218
	phisrc.32   %phi1077 <- %r6220
	br          .L1437

.L1436:
	load.64     %r6222 <- 64[%arg1]
	call.32     %r6223 <- luaZ_fill, %r6222
	phisrc.32   %phi1078 <- %r6223
	br          .L1437

.L1437:
	phi.32      %r6224 <- %phi1077, %phi1078
	store.32    %r6224 -> 0[%arg1]
	br          .L1432

.L1406:
	call.32     %r6227 <- skip_sep, %arg1
	setge.32    %r6229 <- %r6227, $0
	br          %r6229, .L1438, .L1439

.L1438:
	call        read_long_string, %arg1, %arg2, %r6227
	phisrc.32   %phi1079(return) <- $286
	br          .L1421

.L1439:
	seteq.32    %r6234 <- %r6227, $0xffffffff
	br          %r6234, .L1441, .L1442

.L1441:
	phisrc.32   %phi1080(return) <- $91
	br          .L1421

.L1442:
	symaddr.64  %r6236 <- <anon symbol:0x62d0012ed3d8>
	call        luaX_lexerror, %arg1, %r6236, $286
	br          .L1407

.L1407:
	load.64     %r6238 <- 64[%arg1]
	load.64     %r6239 <- 0[%r6238]
	add.64      %r6240 <- %r6239, $-1
	store.64    %r6240 -> 0[%r6238]
	seta.32     %r6241 <- %r6239, $0
	br          %r6241, .L1444, .L1445

.L1444:
	load.64     %r6243 <- 64[%arg1]
	load.64     %r6244 <- 8[%r6243]
	add.64      %r6245 <- %r6244, $1
	store.64    %r6245 -> 8[%r6243]
	load.8      %r6246 <- 0[%r6244]
	cast.32     %r6248 <- (8) %r6246
	phisrc.32   %phi1081 <- %r6248
	br          .L1446

.L1445:
	load.64     %r6250 <- 64[%arg1]
	call.32     %r6251 <- luaZ_fill, %r6250
	phisrc.32   %phi1082 <- %r6251
	br          .L1446

.L1446:
	phi.32      %r6252 <- %phi1081, %phi1082
	store.32    %r6252 -> 0[%arg1]
	setne.32    %r6256 <- %r6252, $61
	br          %r6256, .L1447, .L1448

.L1447:
	phisrc.32   %phi1083(return) <- $61
	br          .L1421

.L1448:
	load.64     %r6258 <- 64[%arg1]
	load.64     %r6259 <- 0[%r6258]
	add.64      %r6260 <- %r6259, $-1
	store.64    %r6260 -> 0[%r6258]
	seta.32     %r6261 <- %r6259, $0
	br          %r6261, .L1450, .L1451

.L1450:
	load.64     %r6263 <- 64[%arg1]
	load.64     %r6264 <- 8[%r6263]
	add.64      %r6265 <- %r6264, $1
	store.64    %r6265 -> 8[%r6263]
	load.8      %r6266 <- 0[%r6264]
	cast.32     %r6268 <- (8) %r6266
	phisrc.32   %phi1084 <- %r6268
	br          .L1452

.L1451:
	load.64     %r6270 <- 64[%arg1]
	call.32     %r6271 <- luaZ_fill, %r6270
	phisrc.32   %phi1085 <- %r6271
	br          .L1452

.L1452:
	phi.32      %r6272 <- %phi1084, %phi1085
	store.32    %r6272 -> 0[%arg1]
	phisrc.32   %phi1086(return) <- $280
	br          .L1421

.L1408:
	load.64     %r6275 <- 64[%arg1]
	load.64     %r6276 <- 0[%r6275]
	add.64      %r6277 <- %r6276, $-1
	store.64    %r6277 -> 0[%r6275]
	seta.32     %r6278 <- %r6276, $0
	br          %r6278, .L1453, .L1454

.L1453:
	load.64     %r6280 <- 64[%arg1]
	load.64     %r6281 <- 8[%r6280]
	add.64      %r6282 <- %r6281, $1
	store.64    %r6282 -> 8[%r6280]
	load.8      %r6283 <- 0[%r6281]
	cast.32     %r6285 <- (8) %r6283
	phisrc.32   %phi1087 <- %r6285
	br          .L1455

.L1454:
	load.64     %r6287 <- 64[%arg1]
	call.32     %r6288 <- luaZ_fill, %r6287
	phisrc.32   %phi1088 <- %r6288
	br          .L1455

.L1455:
	phi.32      %r6289 <- %phi1087, %phi1088
	store.32    %r6289 -> 0[%arg1]
	setne.32    %r6293 <- %r6289, $61
	br          %r6293, .L1456, .L1457

.L1456:
	phisrc.32   %phi1089(return) <- $60
	br          .L1421

.L1457:
	load.64     %r6295 <- 64[%arg1]
	load.64     %r6296 <- 0[%r6295]
	add.64      %r6297 <- %r6296, $-1
	store.64    %r6297 -> 0[%r6295]
	seta.32     %r6298 <- %r6296, $0
	br          %r6298, .L1459, .L1460

.L1459:
	load.64     %r6300 <- 64[%arg1]
	load.64     %r6301 <- 8[%r6300]
	add.64      %r6302 <- %r6301, $1
	store.64    %r6302 -> 8[%r6300]
	load.8      %r6303 <- 0[%r6301]
	cast.32     %r6305 <- (8) %r6303
	phisrc.32   %phi1090 <- %r6305
	br          .L1461

.L1460:
	load.64     %r6307 <- 64[%arg1]
	call.32     %r6308 <- luaZ_fill, %r6307
	phisrc.32   %phi1091 <- %r6308
	br          .L1461

.L1461:
	phi.32      %r6309 <- %phi1090, %phi1091
	store.32    %r6309 -> 0[%arg1]
	phisrc.32   %phi1092(return) <- $282
	br          .L1421

.L1409:
	load.64     %r6312 <- 64[%arg1]
	load.64     %r6313 <- 0[%r6312]
	add.64      %r6314 <- %r6313, $-1
	store.64    %r6314 -> 0[%r6312]
	seta.32     %r6315 <- %r6313, $0
	br          %r6315, .L1462, .L1463

.L1462:
	load.64     %r6317 <- 64[%arg1]
	load.64     %r6318 <- 8[%r6317]
	add.64      %r6319 <- %r6318, $1
	store.64    %r6319 -> 8[%r6317]
	load.8      %r6320 <- 0[%r6318]
	cast.32     %r6322 <- (8) %r6320
	phisrc.32   %phi1093 <- %r6322
	br          .L1464

.L1463:
	load.64     %r6324 <- 64[%arg1]
	call.32     %r6325 <- luaZ_fill, %r6324
	phisrc.32   %phi1094 <- %r6325
	br          .L1464

.L1464:
	phi.32      %r6326 <- %phi1093, %phi1094
	store.32    %r6326 -> 0[%arg1]
	setne.32    %r6330 <- %r6326, $61
	br          %r6330, .L1465, .L1466

.L1465:
	phisrc.32   %phi1095(return) <- $62
	br          .L1421

.L1466:
	load.64     %r6332 <- 64[%arg1]
	load.64     %r6333 <- 0[%r6332]
	add.64      %r6334 <- %r6333, $-1
	store.64    %r6334 -> 0[%r6332]
	seta.32     %r6335 <- %r6333, $0
	br          %r6335, .L1468, .L1469

.L1468:
	load.64     %r6337 <- 64[%arg1]
	load.64     %r6338 <- 8[%r6337]
	add.64      %r6339 <- %r6338, $1
	store.64    %r6339 -> 8[%r6337]
	load.8      %r6340 <- 0[%r6338]
	cast.32     %r6342 <- (8) %r6340
	phisrc.32   %phi1096 <- %r6342
	br          .L1470

.L1469:
	load.64     %r6344 <- 64[%arg1]
	call.32     %r6345 <- luaZ_fill, %r6344
	phisrc.32   %phi1097 <- %r6345
	br          .L1470

.L1470:
	phi.32      %r6346 <- %phi1096, %phi1097
	store.32    %r6346 -> 0[%arg1]
	phisrc.32   %phi1098(return) <- $281
	br          .L1421

.L1410:
	load.64     %r6349 <- 64[%arg1]
	load.64     %r6350 <- 0[%r6349]
	add.64      %r6351 <- %r6350, $-1
	store.64    %r6351 -> 0[%r6349]
	seta.32     %r6352 <- %r6350, $0
	br          %r6352, .L1471, .L1472

.L1471:
	load.64     %r6354 <- 64[%arg1]
	load.64     %r6355 <- 8[%r6354]
	add.64      %r6356 <- %r6355, $1
	store.64    %r6356 -> 8[%r6354]
	load.8      %r6357 <- 0[%r6355]
	cast.32     %r6359 <- (8) %r6357
	phisrc.32   %phi1099 <- %r6359
	br          .L1473

.L1472:
	load.64     %r6361 <- 64[%arg1]
	call.32     %r6362 <- luaZ_fill, %r6361
	phisrc.32   %phi1100 <- %r6362
	br          .L1473

.L1473:
	phi.32      %r6363 <- %phi1099, %phi1100
	store.32    %r6363 -> 0[%arg1]
	setne.32    %r6367 <- %r6363, $61
	br          %r6367, .L1474, .L1475

.L1474:
	phisrc.32   %phi1101(return) <- $126
	br          .L1421

.L1475:
	load.64     %r6369 <- 64[%arg1]
	load.64     %r6370 <- 0[%r6369]
	add.64      %r6371 <- %r6370, $-1
	store.64    %r6371 -> 0[%r6369]
	seta.32     %r6372 <- %r6370, $0
	br          %r6372, .L1477, .L1478

.L1477:
	load.64     %r6374 <- 64[%arg1]
	load.64     %r6375 <- 8[%r6374]
	add.64      %r6376 <- %r6375, $1
	store.64    %r6376 -> 8[%r6374]
	load.8      %r6377 <- 0[%r6375]
	cast.32     %r6379 <- (8) %r6377
	phisrc.32   %phi1102 <- %r6379
	br          .L1479

.L1478:
	load.64     %r6381 <- 64[%arg1]
	call.32     %r6382 <- luaZ_fill, %r6381
	phisrc.32   %phi1103 <- %r6382
	br          .L1479

.L1479:
	phi.32      %r6383 <- %phi1102, %phi1103
	store.32    %r6383 -> 0[%arg1]
	phisrc.32   %phi1104(return) <- $283
	br          .L1421

.L1412:
	call        read_string, %arg1, %r6147, %arg2
	phisrc.32   %phi1105(return) <- $286
	br          .L1421

.L1413:
	call        save, %arg1, %r6147
	load.64     %r6393 <- 64[%arg1]
	load.64     %r6394 <- 0[%r6393]
	add.64      %r6395 <- %r6394, $-1
	store.64    %r6395 -> 0[%r6393]
	seta.32     %r6396 <- %r6394, $0
	br          %r6396, .L1480, .L1481

.L1480:
	load.64     %r6398 <- 64[%arg1]
	load.64     %r6399 <- 8[%r6398]
	add.64      %r6400 <- %r6399, $1
	store.64    %r6400 -> 8[%r6398]
	load.8      %r6401 <- 0[%r6399]
	cast.32     %r6403 <- (8) %r6401
	phisrc.32   %phi1106 <- %r6403
	br          .L1482

.L1481:
	load.64     %r6405 <- 64[%arg1]
	call.32     %r6406 <- luaZ_fill, %r6405
	phisrc.32   %phi1107 <- %r6406
	br          .L1482

.L1482:
	phi.32      %r6407 <- %phi1106, %phi1107
	store.32    %r6407 -> 0[%arg1]
	symaddr.64  %r6410 <- <anon symbol:0x62d0012e2470>
	call.32     %r6411 <- check_next, %arg1, %r6410
	br          %r6411, .L1483, .L1484

.L1483:
	symaddr.64  %r6413 <- <anon symbol:0x62d0012e2810>
	call.32     %r6414 <- check_next, %arg1, %r6413
	br          %r6414, .L1485, .L1486

.L1485:
	phisrc.32   %phi1108(return) <- $279
	br          .L1421

.L1486:
	phisrc.32   %phi1109(return) <- $278
	br          .L1421

.L1484:
	call.64     %r6415 <- __ctype_b_loc
	load.64     %r6416 <- 0[%r6415]
	load.32     %r6418 <- 0[%arg1]
	scast.64    %r6420 <- (32) %r6418
	muls.64     %r6421 <- %r6420, $2
	add.64      %r6422 <- %r6416, %r6421
	load.16     %r6423 <- 0[%r6422]
	cast.32     %r6424 <- (16) %r6423
	and.32      %r6425 <- %r6424, $0x800
	br          %r6425, .L1490, .L1489

.L1489:
	phisrc.32   %phi1110(return) <- $46
	br          .L1421

.L1490:
	call        read_numeral, %arg1, %arg2
	phisrc.32   %phi1111(return) <- $284
	br          .L1421

.L1414:
	phisrc.32   %phi1112(return) <- $287
	br          .L1421

.L1415:
	call.64     %r6428 <- __ctype_b_loc
	load.64     %r6429 <- 0[%r6428]
	load.32     %r6431 <- 0[%arg1]
	scast.64    %r6433 <- (32) %r6431
	muls.64     %r6434 <- %r6433, $2
	add.64      %r6435 <- %r6429, %r6434
	load.16     %r6436 <- 0[%r6435]
	cast.32     %r6437 <- (16) %r6436
	and.32      %r6438 <- %r6437, $0x2000
	br          %r6438, .L1492, .L1493

.L1492:
	load.64     %r6440 <- 64[%arg1]
	load.64     %r6441 <- 0[%r6440]
	add.64      %r6442 <- %r6441, $-1
	store.64    %r6442 -> 0[%r6440]
	seta.32     %r6443 <- %r6441, $0
	br          %r6443, .L1494, .L1495

.L1494:
	load.64     %r6445 <- 64[%arg1]
	load.64     %r6446 <- 8[%r6445]
	add.64      %r6447 <- %r6446, $1
	store.64    %r6447 -> 8[%r6445]
	load.8      %r6448 <- 0[%r6446]
	cast.32     %r6450 <- (8) %r6448
	phisrc.32   %phi1113 <- %r6450
	br          .L1496

.L1495:
	load.64     %r6452 <- 64[%arg1]
	call.32     %r6453 <- luaZ_fill, %r6452
	phisrc.32   %phi1114 <- %r6453
	br          .L1496

.L1496:
	phi.32      %r6454 <- %phi1113, %phi1114
	store.32    %r6454 -> 0[%arg1]
	br          .L1398

.L1493:
	call.64     %r6456 <- __ctype_b_loc
	load.64     %r6457 <- 0[%r6456]
	load.32     %r6459 <- 0[%arg1]
	scast.64    %r6461 <- (32) %r6459
	muls.64     %r6462 <- %r6461, $2
	add.64      %r6463 <- %r6457, %r6462
	load.16     %r6464 <- 0[%r6463]
	cast.32     %r6465 <- (16) %r6464
	and.32      %r6466 <- %r6465, $0x800
	br          %r6466, .L1498, .L1499

.L1498:
	call        read_numeral, %arg1, %arg2
	phisrc.32   %phi1115(return) <- $284
	br          .L1421

.L1499:
	call.64     %r6469 <- __ctype_b_loc
	load.64     %r6470 <- 0[%r6469]
	load.32     %r6472 <- 0[%arg1]
	scast.64    %r6474 <- (32) %r6472
	muls.64     %r6475 <- %r6474, $2
	add.64      %r6476 <- %r6470, %r6475
	load.16     %r6477 <- 0[%r6476]
	cast.32     %r6478 <- (16) %r6477
	and.32      %r6479 <- %r6478, $0x400
	phisrc.32   %phi1126 <- %r6472
	br          %r6479, .L1504, .L1503

.L1503:
	seteq.32    %r6482 <- %r6472, $95
	phisrc.32   %phi1127 <- %r6472
	br          %r6482, .L1504, .L1502

.L1504:
	phi.32      %r6485 <- %phi1126, %phi1127, %phi1128, %phi1129
	call        save, %arg1, %r6485
	load.64     %r6487 <- 64[%arg1]
	load.64     %r6488 <- 0[%r6487]
	add.64      %r6489 <- %r6488, $-1
	store.64    %r6489 -> 0[%r6487]
	seta.32     %r6490 <- %r6488, $0
	br          %r6490, .L1507, .L1508

.L1507:
	load.64     %r6492 <- 64[%arg1]
	load.64     %r6493 <- 8[%r6492]
	add.64      %r6494 <- %r6493, $1
	store.64    %r6494 -> 8[%r6492]
	load.8      %r6495 <- 0[%r6493]
	cast.32     %r6497 <- (8) %r6495
	phisrc.32   %phi1116 <- %r6497
	br          .L1509

.L1508:
	load.64     %r6499 <- 64[%arg1]
	call.32     %r6500 <- luaZ_fill, %r6499
	phisrc.32   %phi1117 <- %r6500
	br          .L1509

.L1509:
	phi.32      %r6501 <- %phi1116, %phi1117
	store.32    %r6501 -> 0[%arg1]
	call.64     %r6503 <- __ctype_b_loc
	load.64     %r6504 <- 0[%r6503]
	load.32     %r6506 <- 0[%arg1]
	scast.64    %r6508 <- (32) %r6506
	muls.64     %r6509 <- %r6508, $2
	add.64      %r6510 <- %r6504, %r6509
	load.16     %r6511 <- 0[%r6510]
	cast.32     %r6512 <- (16) %r6511
	and.32      %r6513 <- %r6512, $8
	phisrc.32   %phi1128 <- %r6506
	phisrc.32   %phi1129 <- %r6506
	br          %r6513, .L1504, .L1510

.L1510:
	seteq.32    %r6516 <- %r6506, $95
	br          %r6516, .L1504, .L1506

.L1506:
	load.64     %r6519 <- 72[%arg1]
	load.64     %r6520 <- 0[%r6519]
	load.64     %r6523 <- 8[%r6519]
	call.64     %r6524 <- luaX_newstring, %arg1, %r6520, %r6523
	load.8      %r6526 <- 10[%r6524]
	cast.32     %r6527 <- (8) %r6526
	setgt.32    %r6528 <- %r6527, $0
	br          %r6528, .L1511, .L1512

.L1511:
	add.32      %r6533 <- %r6527, $256
	phisrc.32   %phi1118(return) <- %r6533
	br          .L1421

.L1512:
	store.64    %r6524 -> 0[%arg2]
	phisrc.32   %phi1119(return) <- $285
	br          .L1421

.L1502:
	load.64     %r6539 <- 64[%arg1]
	load.64     %r6540 <- 0[%r6539]
	add.64      %r6541 <- %r6540, $-1
	store.64    %r6541 -> 0[%r6539]
	seta.32     %r6542 <- %r6540, $0
	br          %r6542, .L1515, .L1516

.L1515:
	load.64     %r6544 <- 64[%arg1]
	load.64     %r6545 <- 8[%r6544]
	add.64      %r6546 <- %r6545, $1
	store.64    %r6546 -> 8[%r6544]
	load.8      %r6547 <- 0[%r6545]
	cast.32     %r6549 <- (8) %r6547
	phisrc.32   %phi1120 <- %r6549
	br          .L1517

.L1516:
	load.64     %r6551 <- 64[%arg1]
	call.32     %r6552 <- luaZ_fill, %r6551
	phisrc.32   %phi1121 <- %r6552
	br          .L1517

.L1517:
	phi.32      %r6553 <- %phi1120, %phi1121
	store.32    %r6553 -> 0[%arg1]
	phisrc.32   %phi1122(return) <- %r6472
	br          .L1421

.L1421:
	phi.32      %r6169 <- %phi1074(return), %phi1079(return), %phi1080(return), %phi1083(return), %phi1086(return), %phi1089(return), %phi1092(return), %phi1095(return), %phi1098(return), %phi1101(return), %phi1104(return), %phi1105(return), %phi1108(return), %phi1109(return), %phi1110(return), %phi1111(return), %phi1112(return), %phi1115(return), %phi1118(return), %phi1119(return), %phi1122(return)
	ret.32      %r6169


luaX_next:
.L1518:
	<entry-point>
	load.32     %r6557 <- 4[%arg1]
	store.32    %r6557 -> 8[%arg1]
	load.32     %r6560 <- 32[%arg1]
	setne.32    %r6561 <- %r6560, $287
	br          %r6561, .L1519, .L1520

.L1519:
	load.128    %r6563 <- 32[%arg1]
	store.128   %r6563 -> 16[%arg1]
	store.32    $287 -> 32[%arg1]
	br          .L1521

.L1520:
	add.64      %r6569 <- %arg1, $24
	call.32     %r6570 <- llex, %arg1, %r6569
	store.32    %r6570 -> 16[%arg1]
	br          .L1521

.L1521:
	ret


luaX_lookahead:
.L1522:
	<entry-point>
	add.64      %r6575 <- %arg1, $40
	call.32     %r6576 <- llex, %arg1, %r6575
	store.32    %r6576 -> 32[%arg1]
	ret


isnumeral:
.L1524:
	<entry-point>
	load.32     %r6579 <- 0[%arg1]
	seteq.32    %r6581 <- %r6579, $5
	br          %r6581, .L1529, .L1527

.L1529:
	load.32     %r6583 <- 16[%arg1]
	seteq.32    %r6584 <- %r6583, $0xffffffff
	br          %r6584, .L1526, .L1527

.L1526:
	load.32     %r6586 <- 20[%arg1]
	seteq.32    %r6587 <- %r6586, $0xffffffff
	phisrc.32   %phi1138 <- %r6587
	br          .L1528

.L1527:
	phisrc.32   %phi1139 <- $0
	br          .L1528

.L1528:
	phi.32      %r6588 <- %phi1138, %phi1139
	ret.32      %r6588


luaK_nil:
.L1530:
	<entry-point>
	load.32     %r6591 <- 48[%arg1]
	load.32     %r6593 <- 52[%arg1]
	setgt.32    %r6594 <- %r6591, %r6593
	br          %r6594, .L1531, .L1532

.L1531:
	br          %r6591, .L1534, .L1533

.L1533:
	load.8      %r6600 <- 74[%arg1]
	cast.32     %r6601 <- (8) %r6600
	setge.32    %r6602 <- %arg2, %r6601
	br          %r6602, .L1537, .L1532

.L1534:
	load.64     %r6604 <- 0[%arg1]
	load.64     %r6605 <- 24[%r6604]
	add.32      %r6608 <- %r6591, $-1
	scast.64    %r6609 <- (32) %r6608
	muls.64     %r6610 <- %r6609, $4
	add.64      %r6611 <- %r6605, %r6610
	load.32     %r6613 <- 0[%r6611]
	and.32      %r6615 <- %r6613, $63
	seteq.32    %r6618 <- %r6615, $3
	br          %r6618, .L1539, .L1532

.L1539:
	lsr.32      %r6621 <- %r6613, $6
	and.32      %r6622 <- %r6621, $255
	lsr.32      %r6626 <- %r6613, $23
	and.32      %r6627 <- %r6626, $511
	setle.32    %r6631 <- %r6622, %arg2
	add.32      %r6634 <- %r6627, $1
	setle.32    %r6635 <- %arg2, %r6634
	and-bool.32 %r6636 <- %r6631, %r6635
	br          %r6636, .L1541, .L1532

.L1541:
	add.32      %r6639 <- %arg2, %arg3
	add.32      %r6640 <- %r6639, $-1
	setgt.32    %r6642 <- %r6640, %r6627
	br          %r6642, .L1543, .L1537

.L1543:
	and.32      %r6645 <- %r6613, $0x7fffff
	shl.32      %r6651 <- %r6640, $23
	and.32      %r6652 <- %r6651, $0xff800000
	or.32       %r6653 <- %r6645, %r6652
	store.32    %r6653 -> 0[%r6611]
	br          .L1537

.L1532:
	add.32      %r6659 <- %arg2, %arg3
	add.32      %r6660 <- %r6659, $-1
	call.32     %r6661 <- luaK_codeABC, %arg1, $3, %arg2, %r6660, $0
	br          .L1537

.L1537:
	ret


luaK_jump:
.L1545:
	<entry-point>
	load.32     %r6663 <- 56[%arg1]
	store.32    $0xffffffff -> 56[%arg1]
	call.32     %r6666 <- luaK_codeABx, %arg1, $22, $0, $0x1fffe
	store.32    %r6666 -> 0[j]
	symaddr.64  %r6668 <- j
	call        luaK_concat, %arg1, %r6668, %r6663
	load.32     %r6670 <- 0[j]
	ret.32      %r6670


luaK_ret:
.L1547:
	<entry-point>
	add.32      %r6675 <- %arg3, $1
	call.32     %r6676 <- luaK_codeABC, %arg1, $30, %arg2, %r6675, $0
	ret


condjump:
.L1549:
	<entry-point>
	call.32     %r6682 <- luaK_codeABC, %arg1, %arg2, %arg3, %arg4, %arg5
	call.32     %r6684 <- luaK_jump, %arg1
	ret.32      %r6684


fixjump:
.L1551:
	<entry-point>
	load.64     %r6687 <- 0[%arg1]
	load.64     %r6688 <- 24[%r6687]
	scast.64    %r6690 <- (32) %arg2
	muls.64     %r6691 <- %r6690, $4
	add.64      %r6692 <- %r6688, %r6691
	add.32      %r6695 <- %arg2, $1
	sub.32      %r6696 <- %arg3, %r6695
	call.32     %r6698 <- abs, %r6696
	setgt.32    %r6699 <- %r6698, $0x1ffff
	br          %r6699, .L1552, .L1553

.L1552:
	load.64     %r6701 <- 24[%arg1]
	symaddr.64  %r6702 <- <anon symbol:0x62d0012f6558>
	call        luaX_syntaxerror, %r6701, %r6702
	br          .L1553

.L1553:
	load.32     %r6704 <- 0[%r6692]
	and.32      %r6705 <- %r6704, $0x3fff
	add.32      %r6707 <- %r6696, $0x1ffff
	shl.32      %r6710 <- %r6707, $14
	and.32      %r6711 <- %r6710, $0xffffc000
	or.32       %r6712 <- %r6705, %r6711
	store.32    %r6712 -> 0[%r6692]
	ret


luaK_getlabel:
.L1555:
	<entry-point>
	load.32     %r6715 <- 48[%arg1]
	store.32    %r6715 -> 52[%arg1]
	ret.32      %r6715


getjump:
.L1557:
	<entry-point>
	load.64     %r6721 <- 0[%arg1]
	load.64     %r6722 <- 24[%r6721]
	scast.64    %r6724 <- (32) %arg2
	muls.64     %r6725 <- %r6724, $4
	add.64      %r6726 <- %r6722, %r6725
	load.32     %r6727 <- 0[%r6726]
	lsr.32      %r6728 <- %r6727, $14
	and.32      %r6729 <- %r6728, $0x3ffff
	add.32      %r6731 <- %r6729, $0xfffffffffffe0001
	seteq.32    %r6733 <- %r6731, $0xffffffff
	br          %r6733, .L1558, .L1559

.L1558:
	phisrc.32   %phi1148(return) <- $0xffffffff
	br          .L1560

.L1559:
	add.32      %r6736 <- %arg2, $1
	add.32      %r6738 <- %r6736, %r6731
	phisrc.32   %phi1149(return) <- %r6738
	br          .L1560

.L1560:
	phi.32      %r6734 <- %phi1148(return), %phi1149(return)
	ret.32      %r6734


getjumpcontrol:
.L1562:
	<entry-point>
	load.64     %r6740 <- 0[%arg1]
	load.64     %r6741 <- 24[%r6740]
	scast.64    %r6743 <- (32) %arg2
	muls.64     %r6744 <- %r6743, $4
	add.64      %r6745 <- %r6741, %r6744
	setge.32    %r6747 <- %arg2, $1
	br          %r6747, .L1565, .L1564

.L1565:
	symaddr.64  %r6748 <- luaP_opmodes
	load.32     %r6751 <- -4[%r6745]
	and.32      %r6753 <- %r6751, $63
	scast.64    %r6755 <- (32) %r6753
	add.64      %r6756 <- %r6748, %r6755
	load.8      %r6757 <- 0[%r6756]
	cast.32     %r6758 <- (8) %r6757
	and.32      %r6759 <- %r6758, $128
	br          %r6759, .L1563, .L1564

.L1563:
	add.64      %r6761 <- %r6745, $-4
	phisrc.64   %phi1150(return) <- %r6761
	br          .L1566

.L1564:
	phisrc.64   %phi1151(return) <- %r6745
	br          .L1566

.L1566:
	phi.64      %r6762 <- %phi1150(return), %phi1151(return)
	ret.64      %r6762


need_value:
.L1568:
	<entry-point>
	phisrc.32   %phi1156(list) <- %arg2
	br          .L1572

.L1572:
	phi.32      %r6764(list) <- %phi1156(list), %phi1157(list)
	setne.32    %r6765 <- %r6764(list), $0xffffffff
	br          %r6765, .L1569, .L1571

.L1569:
	call.64     %r6768 <- getjumpcontrol, %arg1, %r6764(list)
	load.32     %r6769 <- 0[%r6768]
	and.32      %r6772 <- %r6769, $63
	setne.32    %r6775 <- %r6772, $27
	br          %r6775, .L1573, .L1570

.L1573:
	phisrc.32   %phi1152(return) <- $1
	br          .L1575

.L1570:
	call.32     %r6779 <- getjump, %arg1, %r6764(list)
	phisrc.32   %phi1157(list) <- %r6779
	br          .L1572

.L1571:
	phisrc.32   %phi1153(return) <- $0
	br          .L1575

.L1575:
	phi.32      %r6776 <- %phi1152(return), %phi1153(return)
	ret.32      %r6776


patchtestreg:
.L1576:
	<entry-point>
	call.64     %r6782 <- getjumpcontrol, %arg1, %arg2
	load.32     %r6784 <- 0[%r6782]
	and.32      %r6786 <- %r6784, $63
	setne.32    %r6789 <- %r6786, $27
	br          %r6789, .L1577, .L1578

.L1577:
	phisrc.32   %phi1158(return) <- $0
	br          .L1579

.L1578:
	setne.32    %r6792 <- %arg3, $255
	br          %r6792, .L1582, .L1581

.L1582:
	lsr.32      %r6796 <- %r6784, $23
	and.32      %r6797 <- %r6796, $511
	setne.32    %r6799 <- %arg3, %r6797
	br          %r6799, .L1580, .L1581

.L1580:
	and.32      %r6802 <- %r6784, $0xffffc03f
	shl.32      %r6805 <- %arg3, $6
	and.32      %r6806 <- %r6805, $0x3fc0
	or.32       %r6807 <- %r6802, %r6806
	store.32    %r6807 -> 0[%r6782]
	br          .L1583

.L1581:
	lsr.32      %r6811 <- %r6784, $23
	and.32      %r6812 <- %r6811, $511
	shl.32      %r6815 <- %r6812, $6
	or.32       %r6816 <- %r6815, $26
	lsr.32      %r6820 <- %r6784, $14
	and.32      %r6821 <- %r6820, $511
	shl.32      %r6824 <- %r6821, $14
	or.32       %r6825 <- %r6816, %r6824
	store.32    %r6825 -> 0[%r6782]
	br          .L1583

.L1583:
	phisrc.32   %phi1159(return) <- $1
	br          .L1579

.L1579:
	phi.32      %r6790 <- %phi1158(return), %phi1159(return)
	ret.32      %r6790


removevalues:
.L1584:
	<entry-point>
	phisrc.32   %phi1166(list) <- %arg2
	br          .L1588

.L1588:
	phi.32      %r6827(list) <- %phi1166(list), %phi1167(list)
	setne.32    %r6828 <- %r6827(list), $0xffffffff
	br          %r6828, .L1585, .L1587

.L1585:
	call.32     %r6831 <- patchtestreg, %arg1, %r6827(list), $255
	call.32     %r6834 <- getjump, %arg1, %r6827(list)
	phisrc.32   %phi1167(list) <- %r6834
	br          .L1588

.L1587:
	ret


patchlistaux:
.L1589:
	<entry-point>
	phisrc.32   %phi1171(list) <- %arg2
	br          .L1593

.L1593:
	phi.32      %r6835(list) <- %phi1171(list), %phi1172(list)
	setne.32    %r6836 <- %r6835(list), $0xffffffff
	br          %r6836, .L1590, .L1592

.L1590:
	call.32     %r6839 <- getjump, %arg1, %r6835(list)
	call.32     %r6843 <- patchtestreg, %arg1, %r6835(list), %arg4
	br          %r6843, .L1594, .L1595

.L1594:
	call        fixjump, %arg1, %r6835(list), %arg3
	br          .L1596

.L1595:
	call        fixjump, %arg1, %r6835(list), %arg5
	br          .L1596

.L1596:
	phisrc.32   %phi1172(list) <- %r6839
	br          .L1593

.L1592:
	ret


dischargejpc:
.L1597:
	<entry-point>
	load.32     %r6853 <- 56[%arg1]
	load.32     %r6855 <- 48[%arg1]
	call        patchlistaux, %arg1, %r6853, %r6855, $255, %r6855
	store.32    $0xffffffff -> 56[%arg1]
	ret


luaK_patchlist:
.L1599:
	<entry-point>
	load.32     %r6861 <- 48[%arg1]
	seteq.32    %r6862 <- %arg3, %r6861
	br          %r6862, .L1600, .L1601

.L1600:
	call        luaK_patchtohere, %arg1, %arg2
	br          .L1602

.L1601:
	call        patchlistaux, %arg1, %arg2, %arg3, $255, %arg3
	br          .L1602

.L1602:
	ret


luaK_patchtohere:
.L1603:
	<entry-point>
	call.32     %r6870 <- luaK_getlabel, %arg1
	add.64      %r6873 <- %arg1, $56
	call        luaK_concat, %arg1, %r6873, %arg2
	ret


luaK_concat:
.L1605:
	<entry-point>
	seteq.32    %r6876 <- %arg3, $0xffffffff
	br          %r6876, .L1608, .L1607

.L1607:
	load.32     %r6878 <- 0[%arg2]
	seteq.32    %r6879 <- %r6878, $0xffffffff
	br          %r6879, .L1610, .L1611

.L1610:
	store.32    %arg3 -> 0[%arg2]
	br          .L1608

.L1611:
	phisrc.32   %phi1174(list) <- %r6878
	br          .L1616

.L1616:
	phi.32      %r6885(list) <- %phi1174(list), %phi1175(list)
	call.32     %r6886 <- getjump, %arg1, %r6885(list)
	setne.32    %r6887 <- %r6886, $0xffffffff
	br          %r6887, .L1613, .L1615

.L1613:
	phisrc.32   %phi1175(list) <- %r6886
	br          .L1616

.L1615:
	call        fixjump, %arg1, %r6885(list), %arg3
	br          .L1608

.L1608:
	ret


luaK_checkstack:
.L1617:
	<entry-point>
	load.32     %r6893 <- 60[%arg1]
	add.32      %r6895 <- %r6893, %arg2
	load.64     %r6898 <- 0[%arg1]
	load.8      %r6899 <- 115[%r6898]
	cast.32     %r6900 <- (8) %r6899
	setgt.32    %r6901 <- %r6895, %r6900
	phisrc.64   %phi1177 <- %r6898
	br          %r6901, .L1618, .L1619

.L1618:
	setge.32    %r6903 <- %r6895, $250
	br          %r6903, .L1620, .L1621

.L1620:
	load.64     %r6905 <- 24[%arg1]
	symaddr.64  %r6906 <- <anon symbol:0x62d0012f9390>
	call        luaX_syntaxerror, %r6905, %r6906
	br          .L1621

.L1621:
	scast.8     %r6908 <- (32) %r6895
	load.64     %r6910 <- 0[%arg1]
	store.8     %r6908 -> 115[%r6910]
	br          .L1619

.L1619:
	ret


luaK_reserveregs:
.L1622:
	<entry-point>
	call        luaK_checkstack, %arg1, %arg2
	load.32     %r6915 <- 60[%arg1]
	add.32      %r6917 <- %r6915, %arg2
	store.32    %r6917 -> 60[%arg1]
	ret


freereg:
.L1624:
	<entry-point>
	and.32      %r6920 <- %arg2, $256
	br          %r6920, .L1626, .L1627

.L1627:
	load.8      %r6923 <- 74[%arg1]
	cast.32     %r6924 <- (8) %r6923
	setge.32    %r6925 <- %arg2, %r6924
	br          %r6925, .L1625, .L1626

.L1625:
	load.32     %r6927 <- 60[%arg1]
	add.32      %r6928 <- %r6927, $-1
	store.32    %r6928 -> 60[%arg1]
	br          .L1626

.L1626:
	ret


freeexp:
.L1628:
	<entry-point>
	load.32     %r6930 <- 0[%arg2]
	seteq.32    %r6932 <- %r6930, $12
	br          %r6932, .L1629, .L1630

.L1629:
	load.32     %r6935 <- 8[%arg2]
	call        freereg, %arg1, %r6935
	br          .L1630

.L1630:
	ret


addk:
.L1631:
	<entry-point>
	load.64     %r6937 <- 32[%arg1]
	load.64     %r6940 <- 8[%arg1]
	call.64     %r6942 <- luaH_set, %r6937, %r6940, %arg2
	load.64     %r6944 <- 0[%arg1]
	load.32     %r6946(oldsize) <- 76[%r6944]
	load.32     %r6948 <- 8[%r6942]
	seteq.32    %r6949 <- %r6948, $3
	phisrc.32   %phi1181(oldsize) <- %r6946(oldsize)
	br          %r6949, .L1632, .L1633

.L1632:
	load.64     %r6951 <- 0[%r6942]
	cast.32     %r6952 <- (64) %r6951
	phisrc.32   %phi1178(return) <- %r6952
	br          .L1634

.L1633:
	load.32     %r6956 <- 64[%arg1]
	fpcast.64   %r6957 <- (32) %r6956
	store.64    %r6957 -> 0[%r6942]
	store.32    $3 -> 8[%r6942]
	load.32     %r6961 <- 64[%arg1]
	add.32      %r6962 <- %r6961, $1
	load.32     %r6964 <- 76[%r6944]
	setgt.32    %r6965 <- %r6962, %r6964
	phisrc.32   %phi1184 <- %r6961
	phisrc.32   %phi1185 <- %r6964
	phisrc.32   %phi1186 <- %r6961
	phisrc.32   %phi1187 <- %r6964
	br          %r6965, .L1636, .L1641

.L1636:
	load.64     %r6968 <- 16[%r6944]
	cast.64     %r6969 <- (64) %r6968
	add.64      %r6971 <- %r6944, $76
	symaddr.64  %r6972 <- <anon symbol:0x62d001307c90>
	call.64     %r6973 <- luaM_growaux_, %r6937, %r6969, %r6971, $16, $0x3ffff, %r6972
	ptrcast.64  %r6974 <- (64) %r6973
	store.64    %r6974 -> 16[%r6944]
	br          .L1641

.L1641:
	phi.32      %r6976(oldsize) <- %phi1181(oldsize), %phi1182(oldsize)
	load.32     %r6978 <- 76[%r6944]
	setlt.32    %r6979 <- %r6976(oldsize), %r6978
	br          %r6979, .L1638, .L1640

.L1638:
	load.64     %r6981 <- 16[%r6944]
	add.32      %r6983 <- %r6976(oldsize), $1
	scast.64    %r6984 <- (32) %r6976(oldsize)
	muls.64     %r6985 <- %r6984, $16
	add.64      %r6986 <- %r6981, %r6985
	store.32    $0 -> 8[%r6986]
	phisrc.32   %phi1182(oldsize) <- %r6983
	br          .L1641

.L1640:
	load.64     %r6989 <- 16[%r6944]
	load.32     %r6991 <- 64[%arg1]
	scast.64    %r6992 <- (32) %r6991
	muls.64     %r6993 <- %r6992, $16
	add.64      %r6994 <- %r6989, %r6993
	load.64     %r6996 <- 0[%arg3]
	store.64    %r6996 -> 0[%r6994]
	load.32     %r6999 <- 8[%arg3]
	store.32    %r6999 -> 8[%r6994]
	load.32     %r7003 <- 8[%arg3]
	setge.32    %r7004 <- %r7003, $4
	br          %r7004, .L1645, .L1643

.L1645:
	load.64     %r7006 <- 0[%arg3]
	load.8      %r7007 <- 9[%r7006]
	cast.32     %r7008 <- (8) %r7007
	and.32      %r7009 <- %r7008, $3
	br          %r7009, .L1644, .L1643

.L1644:
	ptrcast.64  %r7011 <- (64) %r6944
	load.8      %r7012 <- 9[%r7011]
	cast.32     %r7013 <- (8) %r7012
	and.32      %r7014 <- %r7013, $4
	br          %r7014, .L1642, .L1643

.L1642:
	call        luaC_barrierf, %r6937, %r7011, %r7006
	br          .L1643

.L1643:
	load.32     %r7021 <- 64[%arg1]
	add.32      %r7022 <- %r7021, $1
	store.32    %r7022 -> 64[%arg1]
	phisrc.32   %phi1179(return) <- %r7021
	br          .L1634

.L1634:
	phi.32      %r6953 <- %phi1178(return), %phi1179(return)
	ret.32      %r6953


luaK_stringK:
.L1646:
	<entry-point>
	ptrcast.64  %r7025 <- (64) %arg2
	store.64    %r7025 -> 0[o]
	store.32    $4 -> 8[o]
	symaddr.64  %r7029 <- o
	call.32     %r7031 <- addk, %arg1, %r7029, %r7029
	ret.32      %r7031


luaK_numberK:
.L1648:
	<entry-point>
	store.64    %arg2 -> 0[o]
	store.32    $3 -> 8[o]
	symaddr.64  %r7038 <- o
	call.32     %r7040 <- addk, %arg1, %r7038, %r7038
	ret.32      %r7040


boolK:
.L1650:
	<entry-point>
	store.32    %arg2 -> 0[o]
	store.32    $1 -> 8[o]
	symaddr.64  %r7047 <- o
	call.32     %r7049 <- addk, %arg1, %r7047, %r7047
	ret.32      %r7049


nilK:
.L1652:
	<entry-point>
	store.32    $0 -> 8[v]
	load.64     %r7053 <- 8[%arg1]
	ptrcast.64  %r7054 <- (64) %r7053
	store.64    %r7054 -> 0[k]
	store.32    $5 -> 8[k]
	symaddr.64  %r7058 <- k
	symaddr.64  %r7059 <- v
	call.32     %r7060 <- addk, %arg1, %r7058, %r7059
	ret.32      %r7060


luaK_setreturns:
.L1654:
	<entry-point>
	load.32     %r7063 <- 0[%arg2]
	seteq.32    %r7065 <- %r7063, $13
	br          %r7065, .L1655, .L1656

.L1655:
	load.64     %r7067 <- 0[%arg1]
	load.64     %r7068 <- 24[%r7067]
	load.32     %r7070 <- 8[%arg2]
	scast.64    %r7071 <- (32) %r7070
	muls.64     %r7072 <- %r7071, $4
	add.64      %r7073 <- %r7068, %r7072
	load.32     %r7074 <- 0[%r7073]
	and.32      %r7075 <- %r7074, $0xff803fff
	add.32      %r7077 <- %arg3, $1
	shl.32      %r7079 <- %r7077, $14
	and.32      %r7080 <- %r7079, $0x7fc000
	or.32       %r7081 <- %r7075, %r7080
	scast.64    %r7087 <- (32) %r7070
	muls.64     %r7088 <- %r7087, $4
	add.64      %r7089 <- %r7068, %r7088
	store.32    %r7081 -> 0[%r7089]
	br          .L1657

.L1656:
	seteq.32    %r7093 <- %r7063, $14
	br          %r7093, .L1658, .L1657

.L1658:
	load.64     %r7095 <- 0[%arg1]
	load.64     %r7096 <- 24[%r7095]
	load.32     %r7098 <- 8[%arg2]
	scast.64    %r7099 <- (32) %r7098
	muls.64     %r7100 <- %r7099, $4
	add.64      %r7101 <- %r7096, %r7100
	load.32     %r7102 <- 0[%r7101]
	and.32      %r7103 <- %r7102, $0x7fffff
	add.32      %r7105 <- %arg3, $1
	shl.32      %r7107 <- %r7105, $23
	and.32      %r7108 <- %r7107, $0xff800000
	or.32       %r7109 <- %r7103, %r7108
	scast.64    %r7115 <- (32) %r7098
	muls.64     %r7116 <- %r7115, $4
	add.64      %r7117 <- %r7096, %r7116
	store.32    %r7109 -> 0[%r7117]
	load.64     %r7119 <- 0[%arg1]
	load.64     %r7120 <- 24[%r7119]
	load.32     %r7122 <- 8[%arg2]
	scast.64    %r7123 <- (32) %r7122
	muls.64     %r7124 <- %r7123, $4
	add.64      %r7125 <- %r7120, %r7124
	load.32     %r7126 <- 0[%r7125]
	and.32      %r7127 <- %r7126, $0xffffc03f
	load.32     %r7129 <- 60[%arg1]
	shl.32      %r7131 <- %r7129, $6
	and.32      %r7132 <- %r7131, $0x3fc0
	or.32       %r7133 <- %r7127, %r7132
	scast.64    %r7139 <- (32) %r7122
	muls.64     %r7140 <- %r7139, $4
	add.64      %r7141 <- %r7120, %r7140
	store.32    %r7133 -> 0[%r7141]
	call        luaK_reserveregs, %arg1, $1
	br          .L1657

.L1657:
	ret


luaK_setoneret:
.L1660:
	<entry-point>
	load.32     %r7144 <- 0[%arg2]
	seteq.32    %r7146 <- %r7144, $13
	br          %r7146, .L1661, .L1662

.L1661:
	store.32    $12 -> 0[%arg2]
	load.64     %r7149 <- 0[%arg1]
	load.64     %r7150 <- 24[%r7149]
	load.32     %r7152 <- 8[%arg2]
	scast.64    %r7153 <- (32) %r7152
	muls.64     %r7154 <- %r7153, $4
	add.64      %r7155 <- %r7150, %r7154
	load.32     %r7156 <- 0[%r7155]
	lsr.32      %r7157 <- %r7156, $6
	and.32      %r7158 <- %r7157, $255
	store.32    %r7158 -> 8[%arg2]
	br          .L1663

.L1662:
	seteq.32    %r7164 <- %r7144, $14
	br          %r7164, .L1664, .L1663

.L1664:
	load.64     %r7166 <- 0[%arg1]
	load.64     %r7167 <- 24[%r7166]
	load.32     %r7169 <- 8[%arg2]
	scast.64    %r7170 <- (32) %r7169
	muls.64     %r7171 <- %r7170, $4
	add.64      %r7172 <- %r7167, %r7171
	load.32     %r7173 <- 0[%r7172]
	and.32      %r7174 <- %r7173, $0x7fffff
	or.32       %r7175 <- %r7174, $0x1000000
	scast.64    %r7181 <- (32) %r7169
	muls.64     %r7182 <- %r7181, $4
	add.64      %r7183 <- %r7167, %r7182
	store.32    %r7175 -> 0[%r7183]
	store.32    $11 -> 0[%arg2]
	br          .L1663

.L1663:
	ret


luaK_dischargevars:
.L1666:
	<entry-point>
	load.32     %r7186 <- 0[%arg2]
	switch      %r7186, 6 -> .L1668, 7 -> .L1669, 8 -> .L1670, 9 -> .L1671, 13 -> .L1673, 14 -> .L1673, default -> .L1667

.L1668:
	store.32    $12 -> 0[%arg2]
	br          .L1667

.L1669:
	load.32     %r7190 <- 8[%arg2]
	call.32     %r7191 <- luaK_codeABC, %arg1, $4, $0, %r7190, $0
	store.32    %r7191 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1667

.L1670:
	load.32     %r7196 <- 8[%arg2]
	call.32     %r7198 <- luaK_codeABx, %arg1, $5, $0, %r7196
	store.32    %r7198 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1667

.L1671:
	load.32     %r7203 <- 12[%arg2]
	call        freereg, %arg1, %r7203
	load.32     %r7206 <- 8[%arg2]
	call        freereg, %arg1, %r7206
	load.32     %r7209 <- 8[%arg2]
	load.32     %r7211 <- 12[%arg2]
	call.32     %r7212 <- luaK_codeABC, %arg1, $6, $0, %r7209, %r7211
	store.32    %r7212 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1667

.L1673:
	call        luaK_setoneret, %arg1, %arg2
	br          .L1667

.L1667:
	ret


code_label:
.L1675:
	<entry-point>
	call.32     %r7218 <- luaK_getlabel, %arg1
	call.32     %r7223 <- luaK_codeABC, %arg1, $2, %arg2, %arg3, %arg4
	ret.32      %r7223


discharge2reg:
.L1677:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7228 <- 0[%arg2]
	switch      %r7228, 1 -> .L1679, 2 -> .L1681, 3 -> .L1681, 4 -> .L1682, 5 -> .L1683, 11 -> .L1684, 12 -> .L1685, default -> .L1689

.L1679:
	call        luaK_nil, %arg1, %arg3, $1
	br          .L1678

.L1681:
	seteq.32    %r7236 <- %r7228, $2
	call.32     %r7237 <- luaK_codeABC, %arg1, $2, %arg3, %r7236, $0
	br          .L1678

.L1682:
	load.32     %r7241 <- 8[%arg2]
	call.32     %r7243 <- luaK_codeABx, %arg1, $1, %arg3, %r7241
	br          .L1678

.L1683:
	load.64     %r7248 <- 8[%arg2]
	call.32     %r7249 <- luaK_numberK, %arg1, %r7248
	call.32     %r7251 <- luaK_codeABx, %arg1, $1, %arg3, %r7249
	br          .L1678

.L1684:
	load.64     %r7253 <- 0[%arg1]
	load.64     %r7254 <- 24[%r7253]
	load.32     %r7256 <- 8[%arg2]
	scast.64    %r7257 <- (32) %r7256
	muls.64     %r7258 <- %r7257, $4
	add.64      %r7259 <- %r7254, %r7258
	load.32     %r7261 <- 0[%r7259]
	and.32      %r7262 <- %r7261, $0xffffc03f
	shl.32      %r7265 <- %arg3, $6
	and.32      %r7266 <- %r7265, $0x3fc0
	or.32       %r7267 <- %r7262, %r7266
	store.32    %r7267 -> 0[%r7259]
	br          .L1678

.L1685:
	load.32     %r7271 <- 8[%arg2]
	setne.32    %r7272 <- %arg3, %r7271
	br          %r7272, .L1687, .L1678

.L1687:
	call.32     %r7277 <- luaK_codeABC, %arg1, $0, %arg3, %r7271, $0
	br          .L1678

.L1678:
	store.32    %arg3 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	br          .L1689

.L1689:
	ret


discharge2anyreg:
.L1690:
	<entry-point>
	load.32     %r7282 <- 0[%arg2]
	setne.32    %r7284 <- %r7282, $12
	br          %r7284, .L1691, .L1692

.L1691:
	call        luaK_reserveregs, %arg1, $1
	load.32     %r7289 <- 60[%arg1]
	add.32      %r7290 <- %r7289, $-1
	call        discharge2reg, %arg1, %arg2, %r7290
	br          .L1692

.L1692:
	ret


exp2reg:
.L1693:
	<entry-point>
	call        discharge2reg, %arg1, %arg2, %arg3
	load.32     %r7295 <- 0[%arg2]
	seteq.32    %r7297 <- %r7295, $10
	br          %r7297, .L1694, .L1695

.L1694:
	add.64      %r7300 <- %arg2, $16
	load.32     %r7302 <- 8[%arg2]
	call        luaK_concat, %arg1, %r7300, %r7302
	br          .L1695

.L1695:
	load.32     %r7304 <- 16[%arg2]
	load.32     %r7306 <- 20[%arg2]
	setne.32    %r7307 <- %r7304, %r7306
	br          %r7307, .L1696, .L1697

.L1696:
	call.32     %r7311 <- need_value, %arg1, %r7304
	phisrc.32   %phi1200(p_f) <- $0xffffffff
	phisrc.32   %phi1202(p_t) <- $0xffffffff
	br          %r7311, .L1698, .L1700

.L1700:
	load.32     %r7314 <- 20[%arg2]
	call.32     %r7315 <- need_value, %arg1, %r7314
	br          %r7315, .L1698, .L1699

.L1698:
	load.32     %r7317 <- 0[%arg2]
	seteq.32    %r7319 <- %r7317, $10
	br          %r7319, .L1701, .L1702

.L1701:
	phisrc.32   %phi1198 <- $0xffffffff
	br          .L1703

.L1702:
	call.32     %r7321 <- luaK_jump, %arg1
	phisrc.32   %phi1199 <- %r7321
	br          .L1703

.L1703:
	phi.32      %r7322 <- %phi1198, %phi1199
	call.32     %r7325 <- code_label, %arg1, %arg3, $0, $1
	call.32     %r7328 <- code_label, %arg1, %arg3, $1, $0
	call        luaK_patchtohere, %arg1, %r7322
	phisrc.32   %phi1201(p_f) <- %r7325
	phisrc.32   %phi1203(p_t) <- %r7328
	br          .L1699

.L1699:
	call.32     %r7332 <- luaK_getlabel, %arg1
	load.32     %r7335 <- 20[%arg2]
	phi.32      %r7338 <- %phi1200(p_f), %phi1201(p_f)
	call        patchlistaux, %arg1, %r7335, %r7332, %arg3, %r7338
	load.32     %r7341 <- 16[%arg2]
	phi.32      %r7344 <- %phi1202(p_t), %phi1203(p_t)
	call        patchlistaux, %arg1, %r7341, %r7332, %arg3, %r7344
	br          .L1697

.L1697:
	store.32    $0xffffffff -> 16[%arg2]
	store.32    $0xffffffff -> 20[%arg2]
	store.32    %arg3 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	ret


luaK_exp2nextreg:
.L1705:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	call        luaK_reserveregs, %arg1, $1
	load.32     %r7358 <- 60[%arg1]
	add.32      %r7359 <- %r7358, $-1
	call        exp2reg, %arg1, %arg2, %r7359
	ret


luaK_exp2anyreg:
.L1707:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7363 <- 0[%arg2]
	seteq.32    %r7365 <- %r7363, $12
	br          %r7365, .L1708, .L1709

.L1708:
	load.32     %r7367 <- 16[%arg2]
	load.32     %r7369 <- 20[%arg2]
	setne.32    %r7370 <- %r7367, %r7369
	br          %r7370, .L1711, .L1710

.L1710:
	load.32     %r7372 <- 8[%arg2]
	phisrc.32   %phi1205(return) <- %r7372
	br          .L1712

.L1711:
	load.32     %r7375 <- 8[%arg2]
	load.8      %r7377 <- 74[%arg1]
	cast.32     %r7378 <- (8) %r7377
	setge.32    %r7379 <- %r7375, %r7378
	br          %r7379, .L1713, .L1709

.L1713:
	call        exp2reg, %arg1, %arg2, %r7375
	load.32     %r7385 <- 8[%arg2]
	phisrc.32   %phi1206(return) <- %r7385
	br          .L1712

.L1709:
	call        luaK_exp2nextreg, %arg1, %arg2
	load.32     %r7389 <- 8[%arg2]
	phisrc.32   %phi1207(return) <- %r7389
	br          .L1712

.L1712:
	phi.32      %r7373 <- %phi1205(return), %phi1206(return), %phi1207(return)
	ret.32      %r7373


luaK_exp2val:
.L1715:
	<entry-point>
	load.32     %r7391 <- 16[%arg2]
	load.32     %r7393 <- 20[%arg2]
	setne.32    %r7394 <- %r7391, %r7393
	br          %r7394, .L1716, .L1717

.L1716:
	call.32     %r7397 <- luaK_exp2anyreg, %arg1, %arg2
	br          .L1718

.L1717:
	call        luaK_dischargevars, %arg1, %arg2
	br          .L1718

.L1718:
	ret


luaK_exp2RK:
.L1719:
	<entry-point>
	call        luaK_exp2val, %arg1, %arg2
	load.32     %r7403 <- 0[%arg2]
	switch      %r7403, 1 -> .L1724, 2 -> .L1724, 3 -> .L1724, 4 -> .L1725, 5 -> .L1724, default -> .L1720

.L1724:
	load.32     %r7405 <- 64[%arg1]
	setle.32    %r7406 <- %r7405, $255
	br          %r7406, .L1727, .L1720

.L1727:
	seteq.32    %r7410 <- %r7403, $1
	br          %r7410, .L1729, .L1730

.L1729:
	call.32     %r7412 <- nilK, %arg1
	phisrc.32   %phi1209 <- %r7412
	br          .L1731

.L1730:
	seteq.32    %r7416 <- %r7403, $5
	br          %r7416, .L1732, .L1733

.L1732:
	load.64     %r7419 <- 8[%arg2]
	call.32     %r7420 <- luaK_numberK, %arg1, %r7419
	phisrc.32   %phi1210 <- %r7420
	br          .L1734

.L1733:
	seteq.32    %r7425 <- %r7403, $2
	call.32     %r7426 <- boolK, %arg1, %r7425
	phisrc.32   %phi1211 <- %r7426
	br          .L1734

.L1734:
	phi.32      %r7427 <- %phi1210, %phi1211
	phisrc.32   %phi1212 <- %r7427
	br          .L1731

.L1731:
	phi.32      %r7428 <- %phi1209, %phi1212
	store.32    %r7428 -> 8[%arg2]
	store.32    $4 -> 0[%arg2]
	or.32       %r7433 <- %r7428, $256
	phisrc.32   %phi1213(return) <- %r7433
	br          .L1735

.L1725:
	load.32     %r7436 <- 8[%arg2]
	setle.32    %r7437 <- %r7436, $255
	br          %r7437, .L1737, .L1720

.L1737:
	or.32       %r7440 <- %r7436, $256
	phisrc.32   %phi1214(return) <- %r7440
	br          .L1735

.L1720:
	call.32     %r7443 <- luaK_exp2anyreg, %arg1, %arg2
	phisrc.32   %phi1215(return) <- %r7443
	br          .L1735

.L1735:
	phi.32      %r7434 <- %phi1213(return), %phi1214(return), %phi1215(return)
	ret.32      %r7434


luaK_storevar:
.L1740:
	<entry-point>
	load.32     %r7445 <- 0[%arg2]
	switch      %r7445, 6 -> .L1742, 7 -> .L1743, 8 -> .L1744, 9 -> .L1745, default -> .L1741

.L1742:
	call        freeexp, %arg1, %arg3
	load.32     %r7451 <- 8[%arg2]
	call        exp2reg, %arg1, %arg3, %r7451
	br          .L1747

.L1743:
	call.32     %r7454 <- luaK_exp2anyreg, %arg1, %arg3
	load.32     %r7458 <- 8[%arg2]
	call.32     %r7459 <- luaK_codeABC, %arg1, $8, %r7454, %r7458, $0
	br          .L1741

.L1744:
	call.32     %r7462 <- luaK_exp2anyreg, %arg1, %arg3
	load.32     %r7466 <- 8[%arg2]
	call.32     %r7468 <- luaK_codeABx, %arg1, $7, %r7462, %r7466
	br          .L1741

.L1745:
	call.32     %r7471 <- luaK_exp2RK, %arg1, %arg3
	load.32     %r7474 <- 8[%arg2]
	load.32     %r7476 <- 12[%arg2]
	call.32     %r7478 <- luaK_codeABC, %arg1, $9, %r7474, %r7476, %r7471
	br          .L1741

.L1741:
	call        freeexp, %arg1, %arg3
	br          .L1747

.L1747:
	ret


luaK_self:
.L1748:
	<entry-point>
	call.32     %r7483 <- luaK_exp2anyreg, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	load.32     %r7487 <- 60[%arg1]
	call        luaK_reserveregs, %arg1, $2
	load.32     %r7492 <- 8[%arg2]
	call.32     %r7495 <- luaK_exp2RK, %arg1, %arg3
	call.32     %r7496 <- luaK_codeABC, %arg1, $11, %r7487, %r7492, %r7495
	call        freeexp, %arg1, %arg3
	store.32    %r7487 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	ret


invertjump:
.L1750:
	<entry-point>
	load.32     %r7504 <- 8[%arg2]
	call.64     %r7505 <- getjumpcontrol, %arg1, %r7504
	load.32     %r7507 <- 0[%r7505]
	and.32      %r7508 <- %r7507, $0xffffc03f
	lsr.32      %r7511 <- %r7507, $6
	and.32      %r7512 <- %r7511, $255
	seteq.32    %r7514 <- %r7512, $0
	shl.32      %r7516 <- %r7514, $6
	and.32      %r7517 <- %r7516, $0x3fc0
	or.32       %r7518 <- %r7508, %r7517
	store.32    %r7518 -> 0[%r7505]
	ret


jumponcond:
.L1752:
	<entry-point>
	load.32     %r7521 <- 0[%arg2]
	seteq.32    %r7523 <- %r7521, $11
	br          %r7523, .L1753, .L1754

.L1753:
	load.64     %r7525 <- 0[%arg1]
	load.64     %r7526 <- 24[%r7525]
	load.32     %r7528 <- 8[%arg2]
	scast.64    %r7529 <- (32) %r7528
	muls.64     %r7530 <- %r7529, $4
	add.64      %r7531 <- %r7526, %r7530
	load.32     %r7532 <- 0[%r7531]
	and.32      %r7535 <- %r7532, $63
	seteq.32    %r7538 <- %r7535, $19
	br          %r7538, .L1755, .L1754

.L1755:
	load.32     %r7540 <- 48[%arg1]
	add.32      %r7541 <- %r7540, $-1
	store.32    %r7541 -> 48[%arg1]
	lsr.32      %r7544 <- %r7532, $23
	and.32      %r7545 <- %r7544, $511
	seteq.32    %r7548 <- %arg3, $0
	call.32     %r7549 <- condjump, %arg1, $26, %r7545, $0, %r7548
	phisrc.32   %phi1223(return) <- %r7549
	br          .L1757

.L1754:
	call        discharge2anyreg, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	load.32     %r7557 <- 8[%arg2]
	call.32     %r7559 <- condjump, %arg1, $27, $255, %r7557, %arg3
	phisrc.32   %phi1224(return) <- %r7559
	br          .L1757

.L1757:
	phi.32      %r7550 <- %phi1223(return), %phi1224(return)
	ret.32      %r7550


luaK_goiftrue:
.L1758:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7563 <- 0[%arg2]
	switch      %r7563, 2 -> .L1762, 4 -> .L1762, 5 -> .L1762, 10 -> .L1763, default -> .L1764

.L1762:
	phisrc.32   %phi1225(pc) <- $0xffffffff
	br          .L1759

.L1763:
	call        invertjump, %arg1, %arg2
	load.32     %r7567 <- 8[%arg2]
	phisrc.32   %phi1226(pc) <- %r7567
	br          .L1759

.L1764:
	call.32     %r7570 <- jumponcond, %arg1, %arg2, $0
	phisrc.32   %phi1227(pc) <- %r7570
	br          .L1759

.L1759:
	add.64      %r7573 <- %arg2, $20
	phi.32      %r7574 <- %phi1225(pc), %phi1226(pc), %phi1227(pc)
	call        luaK_concat, %arg1, %r7573, %r7574
	load.32     %r7577 <- 16[%arg2]
	call        luaK_patchtohere, %arg1, %r7577
	store.32    $0xffffffff -> 16[%arg2]
	ret


luaK_goiffalse:
.L1766:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7582 <- 0[%arg2]
	switch      %r7582, 1 -> .L1769, 3 -> .L1769, 10 -> .L1770, default -> .L1771

.L1769:
	phisrc.32   %phi1228(pc) <- $0xffffffff
	br          .L1767

.L1770:
	load.32     %r7584 <- 8[%arg2]
	phisrc.32   %phi1229(pc) <- %r7584
	br          .L1767

.L1771:
	call.32     %r7587 <- jumponcond, %arg1, %arg2, $1
	phisrc.32   %phi1230(pc) <- %r7587
	br          .L1767

.L1767:
	add.64      %r7590 <- %arg2, $16
	phi.32      %r7591 <- %phi1228(pc), %phi1229(pc), %phi1230(pc)
	call        luaK_concat, %arg1, %r7590, %r7591
	load.32     %r7594 <- 20[%arg2]
	call        luaK_patchtohere, %arg1, %r7594
	store.32    $0xffffffff -> 20[%arg2]
	ret


codenot:
.L1773:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7599 <- 0[%arg2]
	switch      %r7599, 1 -> .L1776, 2 -> .L1779, 3 -> .L1776, 4 -> .L1779, 5 -> .L1779, 10 -> .L1780, 11 -> .L1782, 12 -> .L1782, default -> .L1774

.L1776:
	store.32    $2 -> 0[%arg2]
	br          .L1774

.L1779:
	store.32    $3 -> 0[%arg2]
	br          .L1774

.L1780:
	call        invertjump, %arg1, %arg2
	br          .L1774

.L1782:
	call        discharge2anyreg, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	load.32     %r7610 <- 8[%arg2]
	call.32     %r7611 <- luaK_codeABC, %arg1, $19, $0, %r7610, $0
	store.32    %r7611 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1774

.L1774:
	load.32     %r7615 <- 20[%arg2]
	load.32     %r7617 <- 16[%arg2]
	store.32    %r7617 -> 20[%arg2]
	store.32    %r7615 -> 16[%arg2]
	call        removevalues, %arg1, %r7617
	load.32     %r7626 <- 16[%arg2]
	call        removevalues, %arg1, %r7626
	ret


luaK_indexed:
.L1785:
	<entry-point>
	call.32     %r7629 <- luaK_exp2RK, %arg1, %arg3
	store.32    %r7629 -> 12[%arg2]
	store.32    $9 -> 0[%arg2]
	ret


constfolding:
.L1787:
	<entry-point>
	call.32     %r7633 <- isnumeral, %arg2
	br          %r7633, .L1790, .L1788

.L1790:
	call.32     %r7635 <- isnumeral, %arg3
	br          %r7635, .L1789, .L1788

.L1788:
	phisrc.32   %phi1231(return) <- $0
	br          .L1791

.L1789:
	load.64     %r7638 <- 8[%arg2]
	load.64     %r7640 <- 8[%arg3]
	switch      %arg1, 12 -> .L1793, 13 -> .L1794, 14 -> .L1795, 15 -> .L1796, 16 -> .L1797, 17 -> .L1798, 18 -> .L1799, 20 -> .L1800, default -> .L1801

.L1793:
	add.64      %r7644(r) <- %r7638, %r7640
	phisrc.64   %phi1238(r) <- %r7644(r)
	br          .L1792

.L1794:
	sub.64      %r7647 <- %r7638, %r7640
	phisrc.64   %phi1239(r) <- %r7647
	br          .L1792

.L1795:
	mulu.64     %r7650 <- %r7638, %r7640
	phisrc.64   %phi1240(r) <- %r7650
	br          .L1792

.L1796:
	set.64      %r7652 <- 0.000000
	seteq.32    %r7653 <- %r7640, %r7652
	br          %r7653, .L1802, .L1803

.L1802:
	phisrc.32   %phi1232(return) <- $0
	br          .L1791

.L1803:
	divu.64     %r7656 <- %r7638, %r7640
	phisrc.64   %phi1241(r) <- %r7656
	br          .L1792

.L1797:
	set.64      %r7658 <- 0.000000
	seteq.32    %r7659 <- %r7640, %r7658
	br          %r7659, .L1804, .L1805

.L1804:
	phisrc.32   %phi1233(return) <- $0
	br          .L1791

.L1805:
	divu.64     %r7663 <- %r7638, %r7640
	call.64     %r7664 <- floor, %r7663
	mulu.64     %r7666 <- %r7664, %r7640
	sub.64      %r7667 <- %r7638, %r7666
	phisrc.64   %phi1242(r) <- %r7667
	br          .L1792

.L1798:
	call.64     %r7670 <- pow, %r7638, %r7640
	phisrc.64   %phi1243(r) <- %r7670
	br          .L1792

.L1799:
	neg.64      %r7672 <- %r7638
	phisrc.64   %phi1244(r) <- %r7672
	br          .L1792

.L1800:
	phisrc.32   %phi1234(return) <- $0
	br          .L1791

.L1801:
	phisrc.64   %phi1245(r) <- $0
	br          .L1792

.L1792:
	phi.64      %r7673 <- %phi1238(r), %phi1239(r), %phi1240(r), %phi1241(r), %phi1242(r), %phi1243(r), %phi1244(r), %phi1245(r)
	store.64    %r7673 -> 8[%arg2]
	phisrc.32   %phi1236(return) <- $1
	br          .L1791

.L1791:
	phi.32      %r7636 <- %phi1231(return), %phi1232(return), %phi1233(return), %phi1234(return), VOID, %phi1236(return)
	ret.32      %r7636


codearith:
.L1808:
	<entry-point>
	call.32     %r7681 <- constfolding, %arg2, %arg3, %arg4
	br          %r7681, .L1811, .L1810

.L1810:
	setne.32    %r7684 <- %arg2, $18
	setne.32    %r7687 <- %arg2, $20
	and-bool.32 %r7688 <- %r7684, %r7687
	br          %r7688, .L1813, .L1814

.L1813:
	call.32     %r7691 <- luaK_exp2RK, %arg1, %arg4
	phisrc.32   %phi1246 <- %r7691
	br          .L1815

.L1814:
	phisrc.32   %phi1247 <- $0
	br          .L1815

.L1815:
	phi.32      %r7692 <- %phi1246, %phi1247
	call.32     %r7695 <- luaK_exp2RK, %arg1, %arg3
	setgt.32    %r7698 <- %r7695, %r7692
	br          %r7698, .L1816, .L1817

.L1816:
	call        freeexp, %arg1, %arg3
	call        freeexp, %arg1, %arg4
	br          .L1818

.L1817:
	call        freeexp, %arg1, %arg4
	call        freeexp, %arg1, %arg3
	br          .L1818

.L1818:
	call.32     %r7711 <- luaK_codeABC, %arg1, %arg2, $0, %r7695, %r7692
	store.32    %r7711 -> 8[%arg3]
	store.32    $11 -> 0[%arg3]
	br          .L1811

.L1811:
	ret


codecomp:
.L1819:
	<entry-point>
	call.32     %r7716(o1) <- luaK_exp2RK, %arg1, %arg4
	call.32     %r7719(o2) <- luaK_exp2RK, %arg1, %arg5
	call        freeexp, %arg1, %arg5
	call        freeexp, %arg1, %arg4
	seteq.32    %r7725 <- %arg3, $0
	setne.32    %r7728 <- %arg2, $23
	and-bool.32 %r7729 <- %r7725, %r7728
	select.32   %r7735 <- %r7729, $1, %arg3
	select.32   %r7736 <- %r7729, %r7719(o2), %r7716(o1)
	select.32   %r7737 <- %r7729, %r7716(o1), %r7719(o2)
	call.32     %r7738 <- condjump, %arg1, %arg2, %r7735, %r7736, %r7737
	store.32    %r7738 -> 8[%arg4]
	store.32    $10 -> 0[%arg4]
	ret


luaK_prefix:
.L1823:
	<entry-point>
	store.32    $0xffffffff -> 20[e2]
	store.32    $0xffffffff -> 16[e2]
	store.32    $5 -> 0[e2]
	store.64    $0 -> 8[e2]
	switch      %arg2, 0 -> .L1825, 1 -> .L1826, 2 -> .L1827, default -> .L1824

.L1825:
	call.32     %r7743 <- isnumeral, %arg3
	br          %r7743, .L1830, .L1829

.L1829:
	call.32     %r7746 <- luaK_exp2anyreg, %arg1, %arg3
	br          .L1830

.L1830:
	symaddr.64  %r7749 <- e2
	call        codearith, %arg1, $18, %arg3, %r7749
	br          .L1824

.L1826:
	call        codenot, %arg1, %arg3
	br          .L1824

.L1827:
	call.32     %r7754 <- luaK_exp2anyreg, %arg1, %arg3
	symaddr.64  %r7757 <- e2
	call        codearith, %arg1, $20, %arg3, %r7757
	br          .L1824

.L1824:
	ret


luaK_infix:
.L1831:
	<entry-point>
	switch      %arg2, 0 -> .L1841, 1 -> .L1841, 2 -> .L1841, 3 -> .L1841, 4 -> .L1841, 5 -> .L1841, 6 -> .L1835, 13 -> .L1833, 14 -> .L1834, default -> .L1842

.L1833:
	call        luaK_goiftrue, %arg1, %arg3
	br          .L1832

.L1834:
	call        luaK_goiffalse, %arg1, %arg3
	br          .L1832

.L1835:
	call        luaK_exp2nextreg, %arg1, %arg3
	br          .L1832

.L1841:
	call.32     %r7766 <- isnumeral, %arg3
	br          %r7766, .L1832, .L1843

.L1843:
	call.32     %r7769 <- luaK_exp2RK, %arg1, %arg3
	br          .L1832

.L1842:
	call.32     %r7772 <- luaK_exp2RK, %arg1, %arg3
	br          .L1832

.L1832:
	ret


luaK_posfix:
.L1845:
	<entry-point>
	switch      %arg2, 0 -> .L1850, 1 -> .L1851, 2 -> .L1852, 3 -> .L1853, 4 -> .L1854, 5 -> .L1855, 6 -> .L1849, 7 -> .L1857, 8 -> .L1856, 9 -> .L1858, 10 -> .L1859, 11 -> .L1860, 12 -> .L1861, 13 -> .L1847, 14 -> .L1848, default -> .L1846

.L1847:
	call        luaK_dischargevars, %arg1, %arg4
	add.64      %r7778 <- %arg4, $20
	load.32     %r7780 <- 20[%arg3]
	call        luaK_concat, %arg1, %r7778, %r7780
	load.192    %r7782 <- 0[%arg4]
	store.192   %r7782 -> 0[%arg3]
	br          .L1846

.L1848:
	call        luaK_dischargevars, %arg1, %arg4
	add.64      %r7788 <- %arg4, $16
	load.32     %r7790 <- 16[%arg3]
	call        luaK_concat, %arg1, %r7788, %r7790
	load.192    %r7792 <- 0[%arg4]
	store.192   %r7792 -> 0[%arg3]
	br          .L1846

.L1849:
	call        luaK_exp2val, %arg1, %arg4
	load.32     %r7797 <- 0[%arg4]
	seteq.32    %r7799 <- %r7797, $11
	br          %r7799, .L1865, .L1864

.L1865:
	load.64     %r7801 <- 0[%arg1]
	load.64     %r7802 <- 24[%r7801]
	load.32     %r7804 <- 8[%arg4]
	scast.64    %r7805 <- (32) %r7804
	muls.64     %r7806 <- %r7805, $4
	add.64      %r7807 <- %r7802, %r7806
	load.32     %r7808 <- 0[%r7807]
	and.32      %r7810 <- %r7808, $63
	seteq.32    %r7813 <- %r7810, $21
	br          %r7813, .L1863, .L1864

.L1863:
	call        freeexp, %arg1, %arg3
	load.64     %r7817 <- 0[%arg1]
	load.64     %r7818 <- 24[%r7817]
	load.32     %r7820 <- 8[%arg4]
	scast.64    %r7821 <- (32) %r7820
	muls.64     %r7822 <- %r7821, $4
	add.64      %r7823 <- %r7818, %r7822
	load.32     %r7824 <- 0[%r7823]
	and.32      %r7825 <- %r7824, $0x7fffff
	load.32     %r7827 <- 8[%arg3]
	shl.32      %r7829 <- %r7827, $23
	and.32      %r7830 <- %r7829, $0xff800000
	or.32       %r7831 <- %r7825, %r7830
	scast.64    %r7837 <- (32) %r7820
	muls.64     %r7838 <- %r7837, $4
	add.64      %r7839 <- %r7818, %r7838
	store.32    %r7831 -> 0[%r7839]
	store.32    $11 -> 0[%arg3]
	load.32     %r7842 <- 8[%arg4]
	store.32    %r7842 -> 8[%arg3]
	br          .L1846

.L1864:
	call        luaK_exp2nextreg, %arg1, %arg4
	call        codearith, %arg1, $21, %arg3, %arg4
	br          .L1846

.L1850:
	call        codearith, %arg1, $12, %arg3, %arg4
	br          .L1846

.L1851:
	call        codearith, %arg1, $13, %arg3, %arg4
	br          .L1846

.L1852:
	call        codearith, %arg1, $14, %arg3, %arg4
	br          .L1846

.L1853:
	call        codearith, %arg1, $15, %arg3, %arg4
	br          .L1846

.L1854:
	call        codearith, %arg1, $16, %arg3, %arg4
	br          .L1846

.L1855:
	call        codearith, %arg1, $17, %arg3, %arg4
	br          .L1846

.L1856:
	call        codecomp, %arg1, $23, $1, %arg3, %arg4
	br          .L1846

.L1857:
	call        codecomp, %arg1, $23, $0, %arg3, %arg4
	br          .L1846

.L1858:
	call        codecomp, %arg1, $24, $1, %arg3, %arg4
	br          .L1846

.L1859:
	call        codecomp, %arg1, $25, $1, %arg3, %arg4
	br          .L1846

.L1860:
	call        codecomp, %arg1, $24, $0, %arg3, %arg4
	br          .L1846

.L1861:
	call        codecomp, %arg1, $25, $0, %arg3, %arg4
	br          .L1846

.L1846:
	ret


luaK_fixline:
.L1867:
	<entry-point>
	load.64     %r7887 <- 0[%arg1]
	load.64     %r7888 <- 40[%r7887]
	load.32     %r7890 <- 48[%arg1]
	add.32      %r7891 <- %r7890, $-1
	scast.64    %r7892 <- (32) %r7891
	muls.64     %r7893 <- %r7892, $4
	add.64      %r7894 <- %r7888, %r7893
	store.32    %arg2 -> 0[%r7894]
	ret


luaK_code:
.L1869:
	<entry-point>
	load.64     %r7896 <- 0[%arg1]
	call        dischargejpc, %arg1
	load.32     %r7899 <- 48[%arg1]
	add.32      %r7900 <- %r7899, $1
	load.32     %r7902 <- 80[%r7896]
	setgt.32    %r7903 <- %r7900, %r7902
	phisrc.32   %phi1258 <- %r7899
	phisrc.32   %phi1260 <- %r7899
	br          %r7903, .L1870, .L1871

.L1870:
	load.64     %r7905 <- 32[%arg1]
	load.64     %r7907 <- 24[%r7896]
	cast.64     %r7908 <- (64) %r7907
	add.64      %r7910 <- %r7896, $80
	symaddr.64  %r7911 <- <anon symbol:0x62d001351a30>
	call.64     %r7912 <- luaM_growaux_, %r7905, %r7908, %r7910, $4, $0x7ffffffd, %r7911
	ptrcast.64  %r7913 <- (64) %r7912
	store.64    %r7913 -> 24[%r7896]
	br          .L1871

.L1871:
	load.64     %r7917 <- 24[%r7896]
	load.32     %r7919 <- 48[%arg1]
	scast.64    %r7920 <- (32) %r7919
	muls.64     %r7921 <- %r7920, $4
	add.64      %r7922 <- %r7917, %r7921
	store.32    %arg2 -> 0[%r7922]
	load.32     %r7924 <- 48[%arg1]
	add.32      %r7925 <- %r7924, $1
	load.32     %r7927 <- 84[%r7896]
	setgt.32    %r7928 <- %r7925, %r7927
	phisrc.32   %phi1257 <- %r7924
	phisrc.32   %phi1259 <- %r7924
	br          %r7928, .L1872, .L1873

.L1872:
	load.64     %r7930 <- 32[%arg1]
	load.64     %r7932 <- 40[%r7896]
	cast.64     %r7933 <- (64) %r7932
	add.64      %r7935 <- %r7896, $84
	symaddr.64  %r7936 <- <anon symbol:0x62d001352f08>
	call.64     %r7937 <- luaM_growaux_, %r7930, %r7933, %r7935, $4, $0x7ffffffd, %r7936
	ptrcast.64  %r7938 <- (64) %r7937
	store.64    %r7938 -> 40[%r7896]
	br          .L1873

.L1873:
	load.64     %r7942 <- 40[%r7896]
	load.32     %r7944 <- 48[%arg1]
	scast.64    %r7945 <- (32) %r7944
	muls.64     %r7946 <- %r7945, $4
	add.64      %r7947 <- %r7942, %r7946
	store.32    %arg3 -> 0[%r7947]
	load.32     %r7949 <- 48[%arg1]
	add.32      %r7950 <- %r7949, $1
	store.32    %r7950 -> 48[%arg1]
	ret.32      %r7949


luaK_codeABC:
.L1875:
	<entry-point>
	shl.32      %r7958 <- %arg3, $6
	or.32       %r7959 <- %arg2, %r7958
	shl.32      %r7962 <- %arg4, $23
	or.32       %r7963 <- %r7959, %r7962
	shl.32      %r7966 <- %arg5, $14
	or.32       %r7967 <- %r7963, %r7966
	load.64     %r7969 <- 24[%arg1]
	load.32     %r7970 <- 8[%r7969]
	call.32     %r7971 <- luaK_code, %arg1, %r7967, %r7970
	ret.32      %r7971


luaK_codeABx:
.L1877:
	<entry-point>
	shl.32      %r7979 <- %arg3, $6
	or.32       %r7980 <- %arg2, %r7979
	shl.32      %r7983 <- %arg4, $14
	or.32       %r7984 <- %r7980, %r7983
	load.64     %r7986 <- 24[%arg1]
	load.32     %r7987 <- 8[%r7986]
	call.32     %r7988 <- luaK_code, %arg1, %r7984, %r7987
	ret.32      %r7988


luaK_setlist:
.L1879:
	<entry-point>
	add.32      %r7991 <- %arg3, $-1
	divs.32     %r7992 <- %r7991, $50
	add.32      %r7993 <- %r7992, $1
	seteq.32    %r7996 <- %arg4, $0xffffffff
	select.32   %r7997 <- %r7996, $0, %arg4
	setle.32    %r7999 <- %r7993, $511
	br          %r7999, .L1880, .L1881

.L1880:
	call.32     %r8004 <- luaK_codeABC, %arg1, $34, %arg2, %r7997, %r7993
	br          .L1882

.L1881:
	call.32     %r8008 <- luaK_codeABC, %arg1, $34, %arg2, %r7997, $0
	load.64     %r8013 <- 24[%arg1]
	load.32     %r8014 <- 8[%r8013]
	call.32     %r8015 <- luaK_code, %arg1, %r7993, %r8014
	br          .L1882

.L1882:
	add.32      %r8017 <- %arg2, $1
	store.32    %r8017 -> 60[%arg1]
	ret


anchor_token:
.L1884:
	<entry-point>
	load.32     %r8020 <- 16[%arg1]
	seteq.32    %r8021 <- %r8020, $285
	br          %r8021, .L1885, .L1887

.L1887:
	seteq.32    %r8024 <- %r8020, $286
	br          %r8024, .L1885, .L1886

.L1885:
	load.64     %r8026 <- 24[%arg1]
	add.64      %r8029 <- %r8026, $24
	ptrcast.64  %r8030 <- (64) %r8029
	load.64     %r8032 <- 16[%r8026]
	call.64     %r8033 <- luaX_newstring, %arg1, %r8030, %r8032
	br          .L1886

.L1886:
	ret


error_expected:
.L1888:
	<entry-point>
	load.64     %r8036 <- 56[%arg1]
	symaddr.64  %r8037 <- <anon symbol:0x62d0013430c8>
	call.64     %r8040 <- luaX_token2str, %arg1, %arg2
	call.64     %r8041 <- luaO_pushfstring, %r8036, %r8037, %r8040
	call        luaX_syntaxerror, %arg1, %r8041
	ret


errorlimit:
.L1890:
	<entry-point>
	load.64     %r8043 <- 0[%arg1]
	load.32     %r8044 <- 96[%r8043]
	br          %r8044, .L1892, .L1891

.L1891:
	load.64     %r8047 <- 32[%arg1]
	symaddr.64  %r8048 <- <anon symbol:0x62d0013442e8>
	call.64     %r8051 <- luaO_pushfstring, %r8047, %r8048, %arg2, %arg3
	phisrc.64   %phi1264 <- %r8051
	br          .L1893

.L1892:
	load.64     %r8053 <- 32[%arg1]
	symaddr.64  %r8054 <- <anon symbol:0x62d0013439d8>
	call.64     %r8060 <- luaO_pushfstring, %r8053, %r8054, %r8044, %arg2, %arg3
	phisrc.64   %phi1265 <- %r8060
	br          .L1893

.L1893:
	phi.64      %r8061 <- %phi1264, %phi1265
	load.64     %r8063 <- 24[%arg1]
	call        luaX_lexerror, %r8063, %r8061, $0
	ret


testnext:
.L1895:
	<entry-point>
	load.32     %r8066 <- 16[%arg1]
	seteq.32    %r8068 <- %r8066, %arg2
	br          %r8068, .L1896, .L1898

.L1896:
	call        luaX_next, %arg1
	br          .L1898

.L1898:
	ret.32      %r8068


check:
.L1900:
	<entry-point>
	load.32     %r8072 <- 16[%arg1]
	setne.32    %r8074 <- %r8072, %arg2
	br          %r8074, .L1901, .L1902

.L1901:
	call        error_expected, %arg1, %arg2
	br          .L1902

.L1902:
	ret


checknext:
.L1903:
	<entry-point>
	call        check, %arg1, %arg2
	call        luaX_next, %arg1
	ret


check_match:
.L1905:
	<entry-point>
	call.32     %r8082 <- testnext, %arg1, %arg2
	br          %r8082, .L1907, .L1906

.L1906:
	load.32     %r8085 <- 4[%arg1]
	seteq.32    %r8086 <- %arg4, %r8085
	br          %r8086, .L1908, .L1909

.L1908:
	call        error_expected, %arg1, %arg2
	br          .L1907

.L1909:
	load.64     %r8091 <- 56[%arg1]
	symaddr.64  %r8092 <- <anon symbol:0x62d001344f98>
	call.64     %r8095 <- luaX_token2str, %arg1, %arg2
	call.64     %r8098 <- luaX_token2str, %arg1, %arg3
	call.64     %r8100 <- luaO_pushfstring, %r8091, %r8092, %r8095, %r8098, %arg4
	call        luaX_syntaxerror, %arg1, %r8100
	br          .L1907

.L1907:
	ret


str_checkname:
.L1911:
	<entry-point>
	call        check, %arg1, $285
	load.64     %r8103 <- 24[%arg1]
	call        luaX_next, %arg1
	ret.64      %r8103


init_exp:
.L1913:
	<entry-point>
	store.32    $0xffffffff -> 16[%arg1]
	store.32    $0xffffffff -> 20[%arg1]
	store.32    %arg2 -> 0[%arg1]
	store.32    %arg3 -> 8[%arg1]
	ret


codestring:
.L1915:
	<entry-point>
	load.64     %r8115 <- 48[%arg1]
	call.32     %r8117 <- luaK_stringK, %r8115, %arg3
	call        init_exp, %arg2, $4, %r8117
	ret


checkname:
.L1917:
	<entry-point>
	call.64     %r8121 <- str_checkname, %arg1
	call        codestring, %arg1, %arg2, %r8121
	ret


registerlocalvar:
.L1919:
	<entry-point>
	load.64     %r8123 <- 48[%arg1]
	load.64     %r8125 <- 0[%r8123]
	load.32     %r8127(oldsize) <- 92[%r8125]
	load.16     %r8129 <- 72[%r8123]
	scast.32    %r8130 <- (16) %r8129
	add.32      %r8131 <- %r8130, $1
	setgt.32    %r8134 <- %r8131, %r8127(oldsize)
	phisrc.32   %phi1273(oldsize) <- %r8127(oldsize)
	phisrc.16   %phi1275 <- %r8129
	phisrc.32   %phi1276 <- %r8127(oldsize)
	phisrc.16   %phi1277 <- %r8129
	phisrc.32   %phi1278(oldsize) <- %r8127(oldsize)
	br          %r8134, .L1920, .L1925

.L1920:
	load.64     %r8136 <- 56[%arg1]
	load.64     %r8138 <- 48[%r8125]
	cast.64     %r8139 <- (64) %r8138
	add.64      %r8141 <- %r8125, $92
	symaddr.64  %r8142 <- <anon symbol:0x62d001347120>
	call.64     %r8143 <- luaM_growaux_, %r8136, %r8139, %r8141, $16, $0x7fff, %r8142
	ptrcast.64  %r8144 <- (64) %r8143
	store.64    %r8144 -> 48[%r8125]
	br          .L1925

.L1925:
	phi.32      %r8146(oldsize) <- %phi1273(oldsize), %phi1274(oldsize)
	load.32     %r8148 <- 92[%r8125]
	setlt.32    %r8149 <- %r8146(oldsize), %r8148
	br          %r8149, .L1922, .L1924

.L1922:
	load.64     %r8151 <- 48[%r8125]
	add.32      %r8153 <- %r8146(oldsize), $1
	scast.64    %r8154 <- (32) %r8146(oldsize)
	muls.64     %r8155 <- %r8154, $16
	add.64      %r8156 <- %r8151, %r8155
	store.64    $0 -> 0[%r8156]
	phisrc.32   %phi1274(oldsize) <- %r8153
	br          .L1925

.L1924:
	load.64     %r8159 <- 48[%r8125]
	load.16     %r8161 <- 72[%r8123]
	scast.64    %r8162 <- (16) %r8161
	muls.64     %r8163 <- %r8162, $16
	add.64      %r8164 <- %r8159, %r8163
	store.64    %arg2 -> 0[%r8164]
	ptrcast.64  %r8166 <- (64) %arg2
	load.8      %r8167 <- 9[%r8166]
	cast.32     %r8168 <- (8) %r8167
	and.32      %r8169 <- %r8168, $3
	br          %r8169, .L1928, .L1927

.L1928:
	ptrcast.64  %r8171 <- (64) %r8125
	load.8      %r8172 <- 9[%r8171]
	cast.32     %r8173 <- (8) %r8172
	and.32      %r8174 <- %r8173, $4
	br          %r8174, .L1926, .L1927

.L1926:
	load.64     %r8176 <- 56[%arg1]
	call        luaC_barrierf, %r8176, %r8171, %r8166
	br          .L1927

.L1927:
	load.16     %r8182 <- 72[%r8123]
	add.16      %r8183 <- %r8182, $1
	store.16    %r8183 -> 72[%r8123]
	scast.32    %r8184 <- (16) %r8182
	ret.32      %r8184


new_localvar:
.L1930:
	<entry-point>
	load.64     %r8187 <- 48[%arg1]
	load.8      %r8189 <- 74[%r8187]
	cast.32     %r8190 <- (8) %r8189
	add.32      %r8192 <- %r8190, %arg3
	add.32      %r8193 <- %r8192, $1
	setgt.32    %r8194 <- %r8193, $200
	br          %r8194, .L1931, .L1932

.L1931:
	symaddr.64  %r8196 <- <anon symbol:0x62d0013485f8>
	call        errorlimit, %r8187, $200, %r8196
	br          .L1932

.L1932:
	call.32     %r8199 <- registerlocalvar, %arg1, %arg2
	scast.16    %r8200 <- (32) %r8199
	add.64      %r8202 <- %r8187, $196
	load.8      %r8204 <- 74[%r8187]
	cast.32     %r8205 <- (8) %r8204
	add.32      %r8207 <- %r8205, %arg3
	scast.64    %r8208 <- (32) %r8207
	muls.64     %r8209 <- %r8208, $2
	add.64      %r8210 <- %r8202, %r8209
	store.16    %r8200 -> 0[%r8210]
	ret


adjustlocalvars:
.L1934:
	<entry-point>
	load.64     %r8212 <- 48[%arg1]
	load.8      %r8214 <- 74[%r8212]
	cast.32     %r8215 <- (8) %r8214
	add.32      %r8217 <- %r8215, %arg2
	scast.8     %r8218 <- (32) %r8217
	store.8     %r8218 -> 74[%r8212]
	phisrc.32   %phi1281(nvars) <- %arg2
	phisrc.8    %phi1283 <- %r8218
	phisrc.8    %phi1284 <- %r8218
	br          .L1938

.L1938:
	phi.32      %r8220(nvars) <- %phi1281(nvars), %phi1282(nvars)
	br          %r8220(nvars), .L1935, .L1937

.L1935:
	load.32     %r8222 <- 48[%r8212]
	load.64     %r8224 <- 0[%r8212]
	load.64     %r8225 <- 48[%r8224]
	add.64      %r8227 <- %r8212, $196
	load.8      %r8229 <- 74[%r8212]
	cast.32     %r8230 <- (8) %r8229
	sub.32      %r8232 <- %r8230, %r8220(nvars)
	scast.64    %r8233 <- (32) %r8232
	muls.64     %r8234 <- %r8233, $2
	add.64      %r8235 <- %r8227, %r8234
	load.16     %r8236 <- 0[%r8235]
	cast.64     %r8237 <- (16) %r8236
	muls.64     %r8238 <- %r8237, $16
	add.64      %r8239 <- %r8225, %r8238
	store.32    %r8222 -> 8[%r8239]
	add.32      %r8241 <- %r8220(nvars), $-1
	phisrc.32   %phi1282(nvars) <- %r8241
	br          .L1938

.L1937:
	ret


removevars:
.L1939:
	<entry-point>
	load.64     %r8243 <- 48[%arg1]
	br          .L1943

.L1943:
	load.8      %r8245 <- 74[%r8243]
	cast.32     %r8246 <- (8) %r8245
	setgt.32    %r8248 <- %r8246, %arg2
	br          %r8248, .L1940, .L1942

.L1940:
	load.32     %r8250 <- 48[%r8243]
	load.64     %r8252 <- 0[%r8243]
	load.64     %r8253 <- 48[%r8252]
	add.64      %r8255 <- %r8243, $196
	add.8       %r8258 <- %r8245, $-1
	store.8     %r8258 -> 74[%r8243]
	cast.64     %r8259 <- (8) %r8258
	muls.64     %r8260 <- %r8259, $2
	add.64      %r8261 <- %r8255, %r8260
	load.16     %r8262 <- 0[%r8261]
	cast.64     %r8263 <- (16) %r8262
	muls.64     %r8264 <- %r8263, $16
	add.64      %r8265 <- %r8253, %r8264
	store.32    %r8250 -> 12[%r8265]
	br          .L1943

.L1942:
	ret


indexupvalue:
.L1944:
	<entry-point>
	load.64     %r8267 <- 0[%arg1]
	load.32     %r8269(oldsize) <- 72[%r8267]
	phisrc.32   %phi1289(oldsize) <- %r8269(oldsize)
	phisrc.32   %phi1296(i) <- $0
	phisrc.32   %phi1300(oldsize) <- %r8269(oldsize)
	phisrc.32   %phi1305(oldsize) <- %r8269(oldsize)
	br          .L1948

.L1948:
	phi.32      %r8270(i) <- %phi1296(i), %phi1297(i)
	load.8      %r8272 <- 112[%r8267]
	cast.32     %r8273 <- (8) %r8272
	setlt.32    %r8274 <- %r8270(i), %r8273
	phisrc.8    %phi1306 <- %r8272
	br          %r8274, .L1945, .L1947

.L1945:
	add.64      %r8276 <- %arg1, $75
	scast.64    %r8278 <- (32) %r8270(i)
	muls.64     %r8279 <- %r8278, $2
	add.64      %r8280 <- %r8276, %r8279
	load.8      %r8281 <- 0[%r8280]
	cast.32     %r8282 <- (8) %r8281
	load.32     %r8284 <- 0[%arg3]
	seteq.32    %r8286 <- %r8282, %r8284
	br          %r8286, .L1951, .L1946

.L1951:
	load.8      %r8293 <- 1[%r8280]
	cast.32     %r8294 <- (8) %r8293
	load.32     %r8296 <- 8[%arg3]
	seteq.32    %r8297 <- %r8294, %r8296
	br          %r8297, .L1949, .L1946

.L1949:
	phisrc.32   %phi1286(return) <- %r8270(i)
	br          .L1952

.L1946:
	add.32      %r8301 <- %r8270(i), $1
	phisrc.32   %phi1297(i) <- %r8301
	br          .L1948

.L1947:
	add.32      %r8305 <- %r8273, $1
	setgt.32    %r8306 <- %r8305, $60
	phisrc.8    %phi1301 <- %r8272
	br          %r8306, .L1953, .L1954

.L1953:
	symaddr.64  %r8308 <- <anon symbol:0x62d00136c030>
	call        errorlimit, %arg1, $60, %r8308
	br          .L1954

.L1954:
	load.8      %r8310 <- 112[%r8267]
	cast.32     %r8311 <- (8) %r8310
	add.32      %r8312 <- %r8311, $1
	load.32     %r8314 <- 72[%r8267]
	setgt.32    %r8315 <- %r8312, %r8314
	phisrc.8    %phi1298 <- %r8310
	phisrc.32   %phi1299 <- %r8314
	phisrc.8    %phi1303 <- %r8310
	phisrc.32   %phi1304 <- %r8314
	br          %r8315, .L1955, .L1960

.L1955:
	load.64     %r8317 <- 32[%arg1]
	load.64     %r8319 <- 56[%r8267]
	cast.64     %r8320 <- (64) %r8319
	add.64      %r8322 <- %r8267, $72
	symaddr.64  %r8323 <- <anon symbol:0x62d00136cf98>
	call.64     %r8324 <- luaM_growaux_, %r8317, %r8320, %r8322, $8, $0x7ffffffd, %r8323
	ptrcast.64  %r8325 <- (64) %r8324
	store.64    %r8325 -> 56[%r8267]
	br          .L1960

.L1960:
	phi.32      %r8327(oldsize) <- %phi1289(oldsize), %phi1290(oldsize)
	load.32     %r8329 <- 72[%r8267]
	setlt.32    %r8330 <- %r8327(oldsize), %r8329
	br          %r8330, .L1957, .L1959

.L1957:
	load.64     %r8332 <- 56[%r8267]
	add.32      %r8334 <- %r8327(oldsize), $1
	scast.64    %r8335 <- (32) %r8327(oldsize)
	muls.64     %r8336 <- %r8335, $8
	add.64      %r8337 <- %r8332, %r8336
	store.64    $0 -> 0[%r8337]
	phisrc.32   %phi1290(oldsize) <- %r8334
	br          .L1960

.L1959:
	load.64     %r8340 <- 56[%r8267]
	load.8      %r8342 <- 112[%r8267]
	cast.64     %r8343 <- (8) %r8342
	muls.64     %r8344 <- %r8343, $8
	add.64      %r8345 <- %r8340, %r8344
	store.64    %arg2 -> 0[%r8345]
	ptrcast.64  %r8347 <- (64) %arg2
	load.8      %r8348 <- 9[%r8347]
	cast.32     %r8349 <- (8) %r8348
	and.32      %r8350 <- %r8349, $3
	br          %r8350, .L1963, .L1962

.L1963:
	ptrcast.64  %r8352 <- (64) %r8267
	load.8      %r8353 <- 9[%r8352]
	cast.32     %r8354 <- (8) %r8353
	and.32      %r8355 <- %r8354, $4
	br          %r8355, .L1961, .L1962

.L1961:
	load.64     %r8357 <- 32[%arg1]
	call        luaC_barrierf, %r8357, %r8352, %r8347
	br          .L1962

.L1962:
	load.32     %r8363 <- 0[%arg3]
	scast.8     %r8364 <- (32) %r8363
	add.64      %r8366 <- %arg1, $75
	load.8      %r8368 <- 112[%r8267]
	cast.64     %r8369 <- (8) %r8368
	muls.64     %r8370 <- %r8369, $2
	add.64      %r8371 <- %r8366, %r8370
	store.8     %r8364 -> 0[%r8371]
	load.32     %r8373 <- 8[%arg3]
	scast.8     %r8374 <- (32) %r8373
	add.64      %r8376 <- %arg1, $75
	load.8      %r8378 <- 112[%r8267]
	cast.64     %r8379 <- (8) %r8378
	muls.64     %r8380 <- %r8379, $2
	add.64      %r8381 <- %r8376, %r8380
	store.8     %r8374 -> 1[%r8381]
	load.8      %r8383 <- 112[%r8267]
	add.8       %r8384 <- %r8383, $1
	store.8     %r8384 -> 112[%r8267]
	cast.32     %r8385 <- (8) %r8383
	phisrc.32   %phi1287(return) <- %r8385
	br          .L1952

.L1952:
	phi.32      %r8299 <- %phi1286(return), %phi1287(return)
	ret.32      %r8299


searchvar:
.L1964:
	<entry-point>
	load.8      %r8387 <- 74[%arg1]
	cast.32     %r8388 <- (8) %r8387
	add.32      %r8389(i) <- %r8388, $-1
	phisrc.32   %phi1312(i) <- %r8389(i)
	br          .L1968

.L1968:
	phi.32      %r8390(i) <- %phi1312(i), %phi1313(i)
	setge.32    %r8391 <- %r8390(i), $0
	br          %r8391, .L1965, .L1967

.L1965:
	load.64     %r8394 <- 0[%arg1]
	load.64     %r8395 <- 48[%r8394]
	add.64      %r8397 <- %arg1, $196
	scast.64    %r8399 <- (32) %r8390(i)
	muls.64     %r8400 <- %r8399, $2
	add.64      %r8401 <- %r8397, %r8400
	load.16     %r8402 <- 0[%r8401]
	cast.64     %r8403 <- (16) %r8402
	muls.64     %r8404 <- %r8403, $16
	add.64      %r8405 <- %r8395, %r8404
	load.64     %r8406 <- 0[%r8405]
	seteq.32    %r8407 <- %arg2, %r8406
	br          %r8407, .L1969, .L1966

.L1969:
	phisrc.32   %phi1307(return) <- %r8390(i)
	br          .L1971

.L1966:
	add.32      %r8411 <- %r8390(i), $-1
	phisrc.32   %phi1313(i) <- %r8411
	br          .L1968

.L1967:
	phisrc.32   %phi1308(return) <- $0xffffffff
	br          .L1971

.L1971:
	phi.32      %r8409 <- %phi1307(return), %phi1308(return)
	ret.32      %r8409


markupval:
.L1972:
	<entry-point>
	load.64     %r8413(bl) <- 40[%arg1]
	phisrc.64   %phi1319(bl) <- %r8413(bl)
	br          .L1976

.L1976:
	phi.64      %r8414(bl) <- %phi1319(bl), %phi1320(bl)
	br          %r8414(bl), .L1977, .L1979

.L1977:
	load.8      %r8416 <- 12[%r8414(bl)]
	cast.32     %r8417 <- (8) %r8416
	setgt.32    %r8419 <- %r8417, %arg2
	br          %r8419, .L1973, .L1975

.L1973:
	load.64     %r8421 <- 0[%r8414(bl)]
	phisrc.64   %phi1320(bl) <- %r8421
	br          .L1976

.L1975:
	br          %r8414(bl), .L1978, .L1979

.L1978:
	store.8     $1 -> 13[%r8414(bl)]
	br          .L1979

.L1979:
	ret


singlevaraux:
.L1980:
	<entry-point>
	br          %arg1, .L1982, .L1981

.L1981:
	call        init_exp, %arg3, $8, $255
	phisrc.32   %phi1321(return) <- $8
	br          .L1983

.L1982:
	call.32     %r8430 <- searchvar, %arg1, %arg2
	setge.32    %r8432 <- %r8430, $0
	br          %r8432, .L1985, .L1986

.L1985:
	call        init_exp, %arg3, $6, %r8430
	br          %arg4, .L1988, .L1987

.L1987:
	call        markupval, %arg1, %r8430
	br          .L1988

.L1988:
	phisrc.32   %phi1322(return) <- $6
	br          .L1983

.L1986:
	load.64     %r8439 <- 16[%arg1]
	call.32     %r8442 <- singlevaraux, %r8439, %arg2, %arg3, $0
	seteq.32    %r8443 <- %r8442, $8
	br          %r8443, .L1990, .L1991

.L1990:
	phisrc.32   %phi1323(return) <- $8
	br          .L1983

.L1991:
	call.32     %r8447 <- indexupvalue, %arg1, %arg2, %arg3
	store.32    %r8447 -> 8[%arg3]
	store.32    $7 -> 0[%arg3]
	phisrc.32   %phi1324(return) <- $7
	br          .L1983

.L1983:
	phi.32      %r8427 <- %phi1321(return), %phi1322(return), %phi1323(return), %phi1324(return)
	ret.32      %r8427


singlevar:
.L1992:
	<entry-point>
	call.64     %r8451 <- str_checkname, %arg1
	load.64     %r8453 <- 48[%arg1]
	call.32     %r8457 <- singlevaraux, %r8453, %r8451, %arg2, $1
	seteq.32    %r8458 <- %r8457, $8
	br          %r8458, .L1993, .L1994

.L1993:
	call.32     %r8461 <- luaK_stringK, %r8453, %r8451
	store.32    %r8461 -> 8[%arg2]
	br          .L1994

.L1994:
	ret


adjust_assign:
.L1995:
	<entry-point>
	load.64     %r8464 <- 48[%arg1]
	sub.32      %r8467(extra) <- %arg2, %arg3
	load.32     %r8469 <- 0[%arg4]
	seteq.32    %r8471 <- %r8469, $13
	br          %r8471, .L1996, .L1998

.L1998:
	seteq.32    %r8475 <- %r8469, $14
	br          %r8475, .L1996, .L1997

.L1996:
	add.32      %r8477 <- %r8467(extra), $1
	setlt.32    %r8479 <- %r8477, $0
	select.32   %r8482 <- %r8479, $0, %r8477
	call        luaK_setreturns, %r8464, %arg4, %r8482
	setgt.32    %r8484 <- %r8482, $1
	br          %r8484, .L2001, .L2003

.L2001:
	add.32      %r8487 <- %r8482, $-1
	call        luaK_reserveregs, %r8464, %r8487
	br          .L2003

.L1997:
	br          %r8469, .L2004, .L2005

.L2004:
	call        luaK_exp2nextreg, %r8464, %arg4
	br          .L2005

.L2005:
	setgt.32    %r8495 <- %r8467(extra), $0
	br          %r8495, .L2006, .L2003

.L2006:
	load.32     %r8497 <- 60[%r8464]
	call        luaK_reserveregs, %r8464, %r8467(extra)
	call        luaK_nil, %r8464, %r8497, %r8467(extra)
	br          .L2003

.L2003:
	ret


enterlevel:
.L2008:
	<entry-point>
	load.64     %r8504 <- 56[%arg1]
	load.16     %r8505 <- 96[%r8504]
	add.16      %r8506 <- %r8505, $1
	store.16    %r8506 -> 96[%r8504]
	cast.32     %r8507 <- (16) %r8506
	setgt.32    %r8508 <- %r8507, $200
	br          %r8508, .L2009, .L2010

.L2009:
	symaddr.64  %r8510 <- <anon symbol:0x62d001371390>
	call        luaX_lexerror, %arg1, %r8510, $0
	br          .L2010

.L2010:
	ret


enterblock:
.L2011:
	<entry-point>
	store.32    $0xffffffff -> 8[%arg2]
	store.8     %arg3 -> 14[%arg2]
	load.8      %r8515 <- 74[%arg1]
	store.8     %r8515 -> 12[%arg2]
	store.8     $0 -> 13[%arg2]
	load.64     %r8519 <- 40[%arg1]
	store.64    %r8519 -> 0[%arg2]
	store.64    %arg2 -> 40[%arg1]
	ret


leaveblock:
.L2013:
	<entry-point>
	load.64     %r8524 <- 40[%arg1]
	load.64     %r8526 <- 0[%r8524]
	store.64    %r8526 -> 40[%arg1]
	load.64     %r8529 <- 24[%arg1]
	load.8      %r8531 <- 12[%r8524]
	cast.32     %r8532 <- (8) %r8531
	call        removevars, %r8529, %r8532
	load.8      %r8534 <- 13[%r8524]
	br          %r8534, .L2014, .L2015

.L2014:
	load.8      %r8537 <- 12[%r8524]
	cast.32     %r8538 <- (8) %r8537
	call.32     %r8539 <- luaK_codeABC, %arg1, $35, %r8538, $0, $0
	br          .L2015

.L2015:
	load.8      %r8541 <- 74[%arg1]
	cast.32     %r8542 <- (8) %r8541
	store.32    %r8542 -> 60[%arg1]
	load.32     %r8546 <- 8[%r8524]
	call        luaK_patchtohere, %arg1, %r8546
	ret


pushclosure:
.L2017:
	<entry-point>
	load.64     %r8548 <- 48[%arg1]
	load.64     %r8550 <- 0[%r8548]
	load.32     %r8552(oldsize) <- 88[%r8550]
	load.32     %r8554 <- 68[%r8548]
	add.32      %r8555 <- %r8554, $1
	setgt.32    %r8558 <- %r8555, %r8552(oldsize)
	phisrc.32   %phi1334(oldsize) <- %r8552(oldsize)
	phisrc.32   %phi1341 <- %r8554
	phisrc.32   %phi1342 <- %r8552(oldsize)
	phisrc.32   %phi1343 <- %r8554
	phisrc.32   %phi1344(oldsize) <- %r8552(oldsize)
	br          %r8558, .L2018, .L2023

.L2018:
	load.64     %r8560 <- 56[%arg1]
	load.64     %r8562 <- 32[%r8550]
	cast.64     %r8563 <- (64) %r8562
	add.64      %r8565 <- %r8550, $88
	symaddr.64  %r8566 <- <anon symbol:0x62d0013762e8>
	call.64     %r8567 <- luaM_growaux_, %r8560, %r8563, %r8565, $8, $0x3ffff, %r8566
	ptrcast.64  %r8568 <- (64) %r8567
	store.64    %r8568 -> 32[%r8550]
	br          .L2023

.L2023:
	phi.32      %r8570(oldsize) <- %phi1334(oldsize), %phi1335(oldsize)
	load.32     %r8572 <- 88[%r8550]
	setlt.32    %r8573 <- %r8570(oldsize), %r8572
	br          %r8573, .L2020, .L2022

.L2020:
	load.64     %r8575 <- 32[%r8550]
	add.32      %r8577 <- %r8570(oldsize), $1
	scast.64    %r8578 <- (32) %r8570(oldsize)
	muls.64     %r8579 <- %r8578, $8
	add.64      %r8580 <- %r8575, %r8579
	store.64    $0 -> 0[%r8580]
	phisrc.32   %phi1335(oldsize) <- %r8577
	br          .L2023

.L2022:
	load.64     %r8582 <- 0[%arg2]
	load.64     %r8584 <- 32[%r8550]
	load.32     %r8586 <- 68[%r8548]
	add.32      %r8587 <- %r8586, $1
	store.32    %r8587 -> 68[%r8548]
	scast.64    %r8588 <- (32) %r8586
	muls.64     %r8589 <- %r8588, $8
	add.64      %r8590 <- %r8584, %r8589
	store.64    %r8582 -> 0[%r8590]
	load.64     %r8592 <- 0[%arg2]
	ptrcast.64  %r8593 <- (64) %r8592
	load.8      %r8594 <- 9[%r8593]
	cast.32     %r8595 <- (8) %r8594
	and.32      %r8596 <- %r8595, $3
	br          %r8596, .L2026, .L2025

.L2026:
	ptrcast.64  %r8598 <- (64) %r8550
	load.8      %r8599 <- 9[%r8598]
	cast.32     %r8600 <- (8) %r8599
	and.32      %r8601 <- %r8600, $4
	br          %r8601, .L2024, .L2025

.L2024:
	load.64     %r8603 <- 56[%arg1]
	ptrcast.64  %r8608 <- (64) %r8592
	call        luaC_barrierf, %r8603, %r8598, %r8608
	br          .L2025

.L2025:
	load.32     %r8612 <- 68[%r8548]
	add.32      %r8613 <- %r8612, $-1
	call.32     %r8615 <- luaK_codeABx, %r8548, $36, $0, %r8613
	call        init_exp, %arg3, $11, %r8615
	phisrc.32   %phi1338(i) <- $0
	br          .L2030

.L2030:
	phi.32      %r8616(i) <- %phi1338(i), %phi1339(i)
	load.64     %r8618 <- 0[%arg2]
	load.8      %r8619 <- 112[%r8618]
	cast.32     %r8620 <- (8) %r8619
	setlt.32    %r8621 <- %r8616(i), %r8620
	br          %r8621, .L2027, .L2029

.L2027:
	add.64      %r8623 <- %arg2, $75
	scast.64    %r8625 <- (32) %r8616(i)
	muls.64     %r8626 <- %r8625, $2
	add.64      %r8627 <- %r8623, %r8626
	load.8      %r8628 <- 0[%r8627]
	cast.32     %r8629 <- (8) %r8628
	seteq.32    %r8630 <- %r8629, $6
	select.32   %r8631 <- %r8630, $0, $4
	load.8      %r8641 <- 1[%r8627]
	cast.32     %r8642 <- (8) %r8641
	call.32     %r8643 <- luaK_codeABC, %r8548, %r8631, $0, %r8642, $0
	add.32      %r8645 <- %r8616(i), $1
	phisrc.32   %phi1339(i) <- %r8645
	br          .L2030

.L2029:
	ret


open_func:
.L2031:
	<entry-point>
	load.64     %r8647 <- 56[%arg1]
	call.64     %r8649 <- luaF_newproto, %r8647
	store.64    %r8649 -> 0[%arg2]
	load.64     %r8653 <- 48[%arg1]
	store.64    %r8653 -> 16[%arg2]
	store.64    %arg1 -> 24[%arg2]
	store.64    %r8647 -> 32[%arg2]
	store.64    %arg2 -> 48[%arg1]
	store.32    $0 -> 48[%arg2]
	store.32    $0xffffffff -> 52[%arg2]
	store.32    $0xffffffff -> 56[%arg2]
	store.32    $0 -> 60[%arg2]
	store.32    $0 -> 64[%arg2]
	store.32    $0 -> 68[%arg2]
	store.16    $0 -> 72[%arg2]
	store.8     $0 -> 74[%arg2]
	store.64    $0 -> 40[%arg2]
	load.64     %r8671 <- 80[%arg1]
	store.64    %r8671 -> 64[%r8649]
	store.8     $2 -> 115[%r8649]
	call.64     %r8675 <- luaH_new, %r8647, $0, $0
	store.64    %r8675 -> 8[%arg2]
	load.64     %r8678 <- 16[%r8647]
	ptrcast.64  %r8681 <- (64) %r8675
	store.64    %r8681 -> 0[%r8678]
	store.32    $5 -> 8[%r8678]
	load.64     %r8685 <- 56[%r8647]
	ptrcast.64  %r8686 <- (64) %r8685
	load.64     %r8688 <- 16[%r8647]
	ptrcast.64  %r8689 <- (64) %r8688
	sub.64      %r8690 <- %r8686, %r8689
	setle.32    %r8691 <- %r8690, $16
	br          %r8691, .L2032, .L2034

.L2032:
	call        luaD_growstack, %r8647, $1
	br          .L2034

.L2034:
	load.64     %r8694 <- 16[%r8647]
	add.64      %r8695 <- %r8694, $16
	store.64    %r8695 -> 16[%r8647]
	ptrcast.64  %r8699 <- (64) %r8649
	store.64    %r8699 -> 16[%r8694]
	store.32    $9 -> 24[%r8694]
	load.64     %r8703 <- 56[%r8647]
	ptrcast.64  %r8704 <- (64) %r8703
	load.64     %r8706 <- 16[%r8647]
	ptrcast.64  %r8707 <- (64) %r8706
	sub.64      %r8708 <- %r8704, %r8707
	setle.32    %r8709 <- %r8708, $16
	br          %r8709, .L2035, .L2037

.L2035:
	call        luaD_growstack, %r8647, $1
	br          .L2037

.L2037:
	load.64     %r8712 <- 16[%r8647]
	add.64      %r8713 <- %r8712, $16
	store.64    %r8713 -> 16[%r8647]
	ret


close_func:
.L2039:
	<entry-point>
	load.64     %r8715 <- 56[%arg1]
	load.64     %r8717 <- 48[%arg1]
	load.64     %r8719 <- 0[%r8717]
	call        removevars, %arg1, $0
	call        luaK_ret, %r8717, $0, $0
	load.32     %r8723 <- 48[%r8717]
	add.32      %r8724 <- %r8723, $1
	scast.64    %r8725 <- (32) %r8724
	setbe.32    %r8726 <- %r8725, $0x3fffffffffffffff
	br          %r8726, .L2040, .L2041

.L2040:
	load.64     %r8729 <- 24[%r8719]
	cast.64     %r8730 <- (64) %r8729
	load.32     %r8732 <- 80[%r8719]
	scast.64    %r8733 <- (32) %r8732
	mulu.64     %r8734 <- %r8733, $4
	scast.64    %r8737 <- (32) %r8723
	mulu.64     %r8738 <- %r8737, $4
	call.64     %r8739 <- luaM_realloc_, %r8715, %r8730, %r8734, %r8738
	phisrc.64   %phi1345 <- %r8739
	br          .L2042

.L2041:
	call.64     %r8741 <- luaM_toobig, %r8715
	cast.64     %r8742 <- (64) %r8741
	phisrc.64   %phi1346 <- %r8742
	br          .L2042

.L2042:
	phi.64      %r8743 <- %phi1345, %phi1346
	ptrcast.64  %r8744 <- (64) %r8743
	store.64    %r8744 -> 24[%r8719]
	load.32     %r8747 <- 48[%r8717]
	store.32    %r8747 -> 80[%r8719]
	load.32     %r8750 <- 48[%r8717]
	add.32      %r8751 <- %r8750, $1
	scast.64    %r8752 <- (32) %r8751
	setbe.32    %r8753 <- %r8752, $0x3fffffffffffffff
	br          %r8753, .L2043, .L2044

.L2043:
	load.64     %r8756 <- 40[%r8719]
	cast.64     %r8757 <- (64) %r8756
	load.32     %r8759 <- 84[%r8719]
	scast.64    %r8760 <- (32) %r8759
	mulu.64     %r8761 <- %r8760, $4
	scast.64    %r8764 <- (32) %r8750
	mulu.64     %r8765 <- %r8764, $4
	call.64     %r8766 <- luaM_realloc_, %r8715, %r8757, %r8761, %r8765
	phisrc.64   %phi1347 <- %r8766
	br          .L2045

.L2044:
	call.64     %r8768 <- luaM_toobig, %r8715
	cast.64     %r8769 <- (64) %r8768
	phisrc.64   %phi1348 <- %r8769
	br          .L2045

.L2045:
	phi.64      %r8770 <- %phi1347, %phi1348
	ptrcast.64  %r8771 <- (64) %r8770
	store.64    %r8771 -> 40[%r8719]
	load.32     %r8774 <- 48[%r8717]
	store.32    %r8774 -> 84[%r8719]
	load.32     %r8777 <- 64[%r8717]
	add.32      %r8778 <- %r8777, $1
	scast.64    %r8779 <- (32) %r8778
	setbe.32    %r8780 <- %r8779, $0xfffffffffffffff
	br          %r8780, .L2046, .L2047

.L2046:
	load.64     %r8783 <- 16[%r8719]
	cast.64     %r8784 <- (64) %r8783
	load.32     %r8786 <- 76[%r8719]
	scast.64    %r8787 <- (32) %r8786
	mulu.64     %r8788 <- %r8787, $16
	scast.64    %r8791 <- (32) %r8777
	mulu.64     %r8792 <- %r8791, $16
	call.64     %r8793 <- luaM_realloc_, %r8715, %r8784, %r8788, %r8792
	phisrc.64   %phi1349 <- %r8793
	br          .L2048

.L2047:
	call.64     %r8795 <- luaM_toobig, %r8715
	cast.64     %r8796 <- (64) %r8795
	phisrc.64   %phi1350 <- %r8796
	br          .L2048

.L2048:
	phi.64      %r8797 <- %phi1349, %phi1350
	ptrcast.64  %r8798 <- (64) %r8797
	store.64    %r8798 -> 16[%r8719]
	load.32     %r8801 <- 64[%r8717]
	store.32    %r8801 -> 76[%r8719]
	load.32     %r8804 <- 68[%r8717]
	add.32      %r8805 <- %r8804, $1
	scast.64    %r8806 <- (32) %r8805
	setbe.32    %r8807 <- %r8806, $0x1fffffffffffffff
	br          %r8807, .L2049, .L2050

.L2049:
	load.64     %r8810 <- 32[%r8719]
	cast.64     %r8811 <- (64) %r8810
	load.32     %r8813 <- 88[%r8719]
	scast.64    %r8814 <- (32) %r8813
	mulu.64     %r8815 <- %r8814, $8
	scast.64    %r8818 <- (32) %r8804
	mulu.64     %r8819 <- %r8818, $8
	call.64     %r8820 <- luaM_realloc_, %r8715, %r8811, %r8815, %r8819
	phisrc.64   %phi1351 <- %r8820
	br          .L2051

.L2050:
	call.64     %r8822 <- luaM_toobig, %r8715
	cast.64     %r8823 <- (64) %r8822
	phisrc.64   %phi1352 <- %r8823
	br          .L2051

.L2051:
	phi.64      %r8824 <- %phi1351, %phi1352
	ptrcast.64  %r8825 <- (64) %r8824
	store.64    %r8825 -> 32[%r8719]
	load.32     %r8828 <- 68[%r8717]
	store.32    %r8828 -> 88[%r8719]
	load.16     %r8831 <- 72[%r8717]
	scast.32    %r8832 <- (16) %r8831
	add.32      %r8833 <- %r8832, $1
	scast.64    %r8834 <- (32) %r8833
	setbe.32    %r8835 <- %r8834, $0xfffffffffffffff
	br          %r8835, .L2052, .L2053

.L2052:
	load.64     %r8838 <- 48[%r8719]
	cast.64     %r8839 <- (64) %r8838
	load.32     %r8841 <- 92[%r8719]
	scast.64    %r8842 <- (32) %r8841
	mulu.64     %r8843 <- %r8842, $16
	scast.64    %r8846 <- (16) %r8831
	mulu.64     %r8847 <- %r8846, $16
	call.64     %r8848 <- luaM_realloc_, %r8715, %r8839, %r8843, %r8847
	phisrc.64   %phi1353 <- %r8848
	br          .L2054

.L2053:
	call.64     %r8850 <- luaM_toobig, %r8715
	cast.64     %r8851 <- (64) %r8850
	phisrc.64   %phi1354 <- %r8851
	br          .L2054

.L2054:
	phi.64      %r8852 <- %phi1353, %phi1354
	ptrcast.64  %r8853 <- (64) %r8852
	store.64    %r8853 -> 48[%r8719]
	load.16     %r8856 <- 72[%r8717]
	scast.32    %r8857 <- (16) %r8856
	store.32    %r8857 -> 92[%r8719]
	load.8      %r8860 <- 112[%r8719]
	cast.32     %r8861 <- (8) %r8860
	add.32      %r8862 <- %r8861, $1
	scast.64    %r8863 <- (32) %r8862
	setbe.32    %r8864 <- %r8863, $0x1fffffffffffffff
	br          %r8864, .L2055, .L2056

.L2055:
	load.64     %r8867 <- 56[%r8719]
	cast.64     %r8868 <- (64) %r8867
	load.32     %r8870 <- 72[%r8719]
	scast.64    %r8871 <- (32) %r8870
	mulu.64     %r8872 <- %r8871, $8
	cast.64     %r8875 <- (8) %r8860
	mulu.64     %r8876 <- %r8875, $8
	call.64     %r8877 <- luaM_realloc_, %r8715, %r8868, %r8872, %r8876
	phisrc.64   %phi1355 <- %r8877
	br          .L2057

.L2056:
	call.64     %r8879 <- luaM_toobig, %r8715
	cast.64     %r8880 <- (64) %r8879
	phisrc.64   %phi1356 <- %r8880
	br          .L2057

.L2057:
	phi.64      %r8881 <- %phi1355, %phi1356
	ptrcast.64  %r8882 <- (64) %r8881
	store.64    %r8882 -> 56[%r8719]
	load.8      %r8885 <- 112[%r8719]
	cast.32     %r8886 <- (8) %r8885
	store.32    %r8886 -> 72[%r8719]
	load.64     %r8889 <- 16[%r8717]
	store.64    %r8889 -> 48[%arg1]
	br          %r8717, .L2058, .L2059

.L2058:
	call        anchor_token, %arg1
	br          .L2059

.L2059:
	load.64     %r8894 <- 16[%r8715]
	cast.64     %r8895 <- (64) %r8894
	add.64      %r8896 <- %r8895, $-32
	ptrcast.64  %r8897 <- (64) %r8896
	store.64    %r8897 -> 16[%r8715]
	ret


luaY_parser:
.L2061:
	<entry-point>
	store.64    %arg3 -> 72[lexstate]
	symaddr.64  %r8900 <- lexstate
	call.64     %r8905 <- strlen, %arg4
	call.64     %r8906 <- luaS_newlstr, %arg1, %arg4, %r8905
	call        luaX_setinput, %arg1, %r8900, %arg2, %r8906
	symaddr.64  %r8908 <- funcstate
	call        open_func, %r8900, %r8908
	load.64     %r8909 <- 0[funcstate]
	store.8     $2 -> 114[%r8909]
	call        luaX_next, %r8900
	call        chunk, %r8900
	call        check, %r8900, $287
	call        close_func, %r8900
	load.64     %r8914 <- 0[funcstate]
	ret.64      %r8914


field:
.L2063:
	<entry-point>
	load.64     %r8917 <- 48[%arg1]
	call.32     %r8920 <- luaK_exp2anyreg, %r8917, %arg2
	call        luaX_next, %arg1
	symaddr.64  %r8923 <- key
	call        checkname, %arg1, %r8923
	call        luaK_indexed, %r8917, %arg2, %r8923
	ret


yindex:
.L2065:
	<entry-point>
	call        luaX_next, %arg1
	call        expr, %arg1, %arg2
	load.64     %r8931 <- 48[%arg1]
	call        luaK_exp2val, %r8931, %arg2
	call        checknext, %arg1, $93
	ret


recfield:
.L2067:
	<entry-point>
	load.64     %r8935 <- 48[%arg1]
	load.32     %r8938 <- 60[%r8935]
	load.32     %r8940 <- 16[%arg1]
	seteq.32    %r8941 <- %r8940, $285
	br          %r8941, .L2068, .L2069

.L2068:
	load.32     %r8943 <- 32[%arg2]
	setgt.32    %r8944 <- %r8943, $0x7ffffffd
	br          %r8944, .L2070, .L2071

.L2070:
	symaddr.64  %r8946 <- <anon symbol:0x62d00138db18>
	call        errorlimit, %r8935, $0x7ffffffd, %r8946
	br          .L2071

.L2071:
	symaddr.64  %r8948 <- key
	call        checkname, %arg1, %r8948
	br          .L2072

.L2069:
	symaddr.64  %r8950 <- key
	call        yindex, %arg1, %r8950
	br          .L2072

.L2072:
	load.32     %r8952 <- 32[%arg2]
	add.32      %r8953 <- %r8952, $1
	store.32    %r8953 -> 32[%arg2]
	call        checknext, %arg1, $61
	symaddr.64  %r8956 <- key
	call.32     %r8957 <- luaK_exp2RK, %r8935, %r8956
	symaddr.64  %r8959 <- val
	call        expr, %arg1, %r8959
	load.64     %r8962 <- 24[%arg2]
	load.32     %r8963 <- 8[%r8962]
	call.32     %r8967 <- luaK_exp2RK, %r8935, %r8959
	call.32     %r8968 <- luaK_codeABC, %r8935, $9, %r8963, %r8957, %r8967
	store.32    %r8938 -> 60[%r8935]
	ret


closelistfield:
.L2074:
	<entry-point>
	load.32     %r8972 <- 0[%arg2]
	br          %r8972, .L2076, .L2077

.L2076:
	call        luaK_exp2nextreg, %arg1, %arg2
	store.32    $0 -> 0[%arg2]
	load.32     %r8980 <- 40[%arg2]
	seteq.32    %r8981 <- %r8980, $50
	br          %r8981, .L2078, .L2077

.L2078:
	load.64     %r8984 <- 24[%arg2]
	load.32     %r8985 <- 8[%r8984]
	load.32     %r8987 <- 36[%arg2]
	call        luaK_setlist, %arg1, %r8985, %r8987, %r8980
	store.32    $0 -> 40[%arg2]
	br          .L2077

.L2077:
	ret


lastlistfield:
.L2080:
	<entry-point>
	load.32     %r8992 <- 40[%arg2]
	phisrc.32   %phi1365 <- %r8992
	phisrc.32   %phi1368 <- %r8992
	br          %r8992, .L2082, .L2083

.L2082:
	load.32     %r8995 <- 0[%arg2]
	seteq.32    %r8997 <- %r8995, $13
	br          %r8997, .L2084, .L2086

.L2086:
	seteq.32    %r9001 <- %r8995, $14
	br          %r9001, .L2084, .L2085

.L2084:
	call        luaK_setreturns, %arg1, %arg2, $0xffffffff
	load.64     %r9007 <- 24[%arg2]
	load.32     %r9008 <- 8[%r9007]
	load.32     %r9010 <- 36[%arg2]
	call        luaK_setlist, %arg1, %r9008, %r9010, $0xffffffff
	load.32     %r9012 <- 36[%arg2]
	add.32      %r9013 <- %r9012, $-1
	store.32    %r9013 -> 36[%arg2]
	br          .L2083

.L2085:
	br          %r8995, .L2088, .L2089

.L2088:
	call        luaK_exp2nextreg, %arg1, %arg2
	br          .L2089

.L2089:
	load.64     %r9023 <- 24[%arg2]
	load.32     %r9024 <- 8[%r9023]
	load.32     %r9026 <- 36[%arg2]
	load.32     %r9028 <- 40[%arg2]
	call        luaK_setlist, %arg1, %r9024, %r9026, %r9028
	br          .L2083

.L2083:
	ret


listfield:
.L2090:
	<entry-point>
	call        expr, %arg1, %arg2
	load.32     %r9033 <- 36[%arg2]
	setgt.32    %r9034 <- %r9033, $0x7ffffffd
	phisrc.32   %phi1369 <- %r9033
	phisrc.32   %phi1370 <- %r9033
	br          %r9034, .L2091, .L2092

.L2091:
	load.64     %r9036 <- 48[%arg1]
	symaddr.64  %r9037 <- <anon symbol:0x62d00139d720>
	call        errorlimit, %r9036, $0x7ffffffd, %r9037
	br          .L2092

.L2092:
	load.32     %r9039 <- 36[%arg2]
	add.32      %r9040 <- %r9039, $1
	store.32    %r9040 -> 36[%arg2]
	load.32     %r9042 <- 40[%arg2]
	add.32      %r9043 <- %r9042, $1
	store.32    %r9043 -> 40[%arg2]
	ret


constructor:
.L2094:
	<entry-point>
	load.64     %r9045 <- 48[%arg1]
	load.32     %r9047 <- 4[%arg1]
	call.32     %r9049 <- luaK_codeABC, %r9045, $10, $0, $0, $0
	store.32    $0 -> 40[cc]
	store.32    $0 -> 32[cc]
	store.32    $0 -> 36[cc]
	store.64    %arg2 -> 24[cc]
	call        init_exp, %arg2, $11, %r9049
	symaddr.64  %r9053 <- cc
	call        init_exp, %r9053, $0, $0
	load.64     %r9056 <- 48[%arg1]
	call        luaK_exp2nextreg, %r9056, %arg2
	call        checknext, %arg1, $123
	br          .L2095

.L2095:
	load.32     %r9060 <- 16[%arg1]
	seteq.32    %r9061 <- %r9060, $125
	br          %r9061, .L2097, .L2099

.L2099:
	call        closelistfield, %r9045, %r9053
	load.32     %r9065 <- 16[%arg1]
	switch      %r9065, 91 -> .L2102, 285 -> .L2101, default -> .L2103

.L2101:
	call        luaX_lookahead, %arg1
	load.32     %r9068 <- 32[%arg1]
	setne.32    %r9069 <- %r9068, $61
	br          %r9069, .L2104, .L2105

.L2104:
	call        listfield, %arg1, %r9053
	br          .L2096

.L2105:
	call        recfield, %arg1, %r9053
	br          .L2096

.L2102:
	call        recfield, %arg1, %r9053
	br          .L2096

.L2103:
	call        listfield, %arg1, %r9053
	br          .L2096

.L2096:
	call.32     %r9079 <- testnext, %arg1, $44
	br          %r9079, .L2095, .L2107

.L2107:
	call.32     %r9081 <- testnext, %arg1, $59
	br          %r9081, .L2095, .L2097

.L2097:
	call        check_match, %arg1, $125, $123, %r9047
	call        lastlistfield, %r9045, %r9053
	load.64     %r9087 <- 0[%r9045]
	load.64     %r9088 <- 24[%r9087]
	scast.64    %r9090 <- (32) %r9049
	muls.64     %r9091 <- %r9090, $4
	add.64      %r9092 <- %r9088, %r9091
	load.32     %r9093 <- 0[%r9092]
	and.32      %r9094 <- %r9093, $0x7fffff
	load.32     %r9095 <- 36[cc]
	call.32     %r9097 <- luaO_int2fb, %r9095
	shl.32      %r9099 <- %r9097, $23
	and.32      %r9100 <- %r9099, $0xff800000
	or.32       %r9101 <- %r9094, %r9100
	load.64     %r9103 <- 0[%r9045]
	load.64     %r9104 <- 24[%r9103]
	add.64      %r9108 <- %r9104, %r9091
	store.32    %r9101 -> 0[%r9108]
	load.64     %r9110 <- 0[%r9045]
	load.64     %r9111 <- 24[%r9110]
	add.64      %r9115 <- %r9111, %r9091
	load.32     %r9116 <- 0[%r9115]
	and.32      %r9117 <- %r9116, $0xff803fff
	load.32     %r9118 <- 32[cc]
	call.32     %r9120 <- luaO_int2fb, %r9118
	shl.32      %r9122 <- %r9120, $14
	and.32      %r9123 <- %r9122, $0x7fc000
	or.32       %r9124 <- %r9117, %r9123
	load.64     %r9126 <- 0[%r9045]
	load.64     %r9127 <- 24[%r9126]
	add.64      %r9131 <- %r9127, %r9091
	store.32    %r9124 -> 0[%r9131]
	ret


parlist:
.L2109:
	<entry-point>
	load.64     %r9133 <- 48[%arg1]
	load.64     %r9135 <- 0[%r9133]
	store.8     $0 -> 114[%r9135]
	load.32     %r9138 <- 16[%arg1]
	setne.32    %r9139 <- %r9138, $41
	phisrc.32   %phi1371(nparams) <- $0
	phisrc.32   %phi1373(nparams) <- $0
	phisrc.32   %phi1375 <- %r9138
	br          %r9139, .L2112, .L2111

.L2112:
	load.32     %r9141 <- 16[%arg1]
	switch      %r9141, 279 -> .L2117, 285 -> .L2116, default -> .L2118

.L2116:
	call.64     %r9144 <- str_checkname, %arg1
	phi.32      %r9145 <- %phi1373(nparams), %phi1374(nparams)
	add.32      %r9146 <- %r9145, $1
	call        new_localvar, %arg1, %r9144, %r9145
	phisrc.32   %phi1372(nparams) <- %r9146
	phisrc.32   %phi1374(nparams) <- %r9146
	br          .L2113

.L2117:
	call        luaX_next, %arg1
	load.8      %r9149 <- 114[%r9135]
	cast.32     %r9150 <- (8) %r9149
	or.32       %r9151 <- %r9150, $2
	scast.8     %r9152 <- (32) %r9151
	store.8     %r9152 -> 114[%r9135]
	br          .L2113

.L2118:
	symaddr.64  %r9154 <- <anon symbol:0x62d0013a13d8>
	call        luaX_syntaxerror, %arg1, %r9154
	br          .L2113

.L2113:
	load.8      %r9156 <- 114[%r9135]
	br          %r9156, .L2111, .L2119

.L2119:
	call.32     %r9158 <- testnext, %arg1, $44
	br          %r9158, .L2112, .L2111

.L2111:
	phi.32      %r9160 <- %phi1371(nparams), %phi1372(nparams)
	call        adjustlocalvars, %arg1, %r9160
	load.8      %r9162 <- 74[%r9133]
	cast.32     %r9163 <- (8) %r9162
	load.8      %r9165 <- 114[%r9135]
	cast.32     %r9166 <- (8) %r9165
	and.32      %r9167 <- %r9166, $1
	sub.32      %r9168 <- %r9163, %r9167
	scast.8     %r9169 <- (32) %r9168
	store.8     %r9169 -> 113[%r9135]
	load.8      %r9173 <- 74[%r9133]
	cast.32     %r9174 <- (8) %r9173
	call        luaK_reserveregs, %r9133, %r9174
	ret


body:
.L2121:
	<entry-point>
	symaddr.64  %r9176 <- new_fs
	call        open_func, %arg1, %r9176
	load.64     %r9178 <- 0[new_fs]
	store.32    %arg4 -> 96[%r9178]
	call        checknext, %arg1, $40
	br          %arg3, .L2122, .L2123

.L2122:
	symaddr.64  %r9183 <- <anon symbol:0x62d0013a1fa0>
	call.64     %r9184 <- luaX_newstring, %arg1, %r9183, $4
	call        new_localvar, %arg1, %r9184, $0
	call        adjustlocalvars, %arg1, $1
	br          .L2123

.L2123:
	call        parlist, %arg1
	call        checknext, %arg1, $41
	call        chunk, %arg1
	load.32     %r9190 <- 4[%arg1]
	load.64     %r9191 <- 0[new_fs]
	store.32    %r9190 -> 100[%r9191]
	call        check_match, %arg1, $262, $265, %arg4
	call        close_func, %arg1
	call        pushclosure, %arg1, %r9176, %arg2
	ret


explist1:
.L2125:
	<entry-point>
	call        expr, %arg1, %arg2
	phisrc.32   %phi1379(n) <- $1
	br          .L2129

.L2129:
	call.32     %r9201 <- testnext, %arg1, $44
	phi.32      %r9207 <- %phi1379(n), %phi1380(n)
	br          %r9201, .L2126, .L2130

.L2126:
	load.64     %r9203 <- 48[%arg1]
	call        luaK_exp2nextreg, %r9203, %arg2
	call        expr, %arg1, %arg2
	add.32      %r9208 <- %r9207, $1
	phisrc.32   %phi1380(n) <- %r9208
	br          .L2129

.L2130:
	ret.32      %r9207


funcargs:
.L2131:
	<entry-point>
	load.64     %r9212 <- 48[%arg1]
	load.32     %r9214 <- 4[%arg1]
	load.32     %r9216 <- 16[%arg1]
	switch      %r9216, 40 -> .L2133, 123 -> .L2134, 286 -> .L2135, default -> .L2136

.L2133:
	load.32     %r9219 <- 8[%arg1]
	setne.32    %r9220 <- %r9214, %r9219
	br          %r9220, .L2137, .L2138

.L2137:
	symaddr.64  %r9222 <- <anon symbol:0x62d0013a3478>
	call        luaX_syntaxerror, %arg1, %r9222
	br          .L2138

.L2138:
	call        luaX_next, %arg1
	load.32     %r9225 <- 16[%arg1]
	seteq.32    %r9226 <- %r9225, $41
	br          %r9226, .L2139, .L2140

.L2139:
	store.32    $0 -> 0[args]
	br          .L2141

.L2140:
	symaddr.64  %r9228 <- args
	call.32     %r9229 <- explist1, %arg1, %r9228
	call        luaK_setreturns, %r9212, %r9228, $0xffffffff
	br          .L2141

.L2141:
	call        check_match, %arg1, $41, $40, %r9214
	br          .L2132

.L2134:
	symaddr.64  %r9235 <- args
	call        constructor, %arg1, %r9235
	br          .L2132

.L2135:
	symaddr.64  %r9237 <- args
	load.64     %r9239 <- 24[%arg1]
	call        codestring, %arg1, %r9237, %r9239
	call        luaX_next, %arg1
	br          .L2132

.L2136:
	symaddr.64  %r9242 <- <anon symbol:0x62d0013a42f8>
	call        luaX_syntaxerror, %arg1, %r9242
	br          .L2142

.L2132:
	load.32     %r9244 <- 8[%arg2]
	load.32     %r9245 <- 0[args]
	seteq.32    %r9247 <- %r9245, $13
	seteq.32    %r9250 <- %r9245, $14
	or-bool.32  %r9251 <- %r9247, %r9250
	br          %r9251, .L2143, .L2144

.L2143:
	phisrc.32   %phi1382(nparams) <- $0xffffffff
	br          .L2145

.L2144:
	br          %r9245, .L2146, .L2147

.L2146:
	symaddr.64  %r9256 <- args
	call        luaK_exp2nextreg, %r9212, %r9256
	br          .L2147

.L2147:
	load.32     %r9258 <- 60[%r9212]
	add.32      %r9260 <- %r9244, $1
	sub.32      %r9261 <- %r9258, %r9260
	phisrc.32   %phi1383(nparams) <- %r9261
	br          .L2145

.L2145:
	phi.32      %r9265 <- %phi1382(nparams), %phi1383(nparams)
	add.32      %r9266 <- %r9265, $1
	call.32     %r9267 <- luaK_codeABC, %r9212, $28, %r9244, %r9266, $2
	call        init_exp, %arg2, $13, %r9267
	call        luaK_fixline, %r9212, %r9214
	add.32      %r9271 <- %r9244, $1
	store.32    %r9271 -> 60[%r9212]
	br          .L2142

.L2142:
	ret


prefixexp:
.L2148:
	<entry-point>
	load.32     %r9274 <- 16[%arg1]
	switch      %r9274, 40 -> .L2150, 285 -> .L2151, default -> .L2152

.L2150:
	load.32     %r9276 <- 4[%arg1]
	call        luaX_next, %arg1
	call        expr, %arg1, %arg2
	call        check_match, %arg1, $41, $40, %r9276
	load.64     %r9283 <- 48[%arg1]
	call        luaK_dischargevars, %r9283, %arg2
	br          .L2153

.L2151:
	call        singlevar, %arg1, %arg2
	br          .L2153

.L2152:
	symaddr.64  %r9288 <- <anon symbol:0x62d0013a7808>
	call        luaX_syntaxerror, %arg1, %r9288
	br          .L2153

.L2153:
	ret


primaryexp:
.L2154:
	<entry-point>
	load.64     %r9290 <- 48[%arg1]
	call        prefixexp, %arg1, %arg2
	br          .L2155

.L2155:
	load.32     %r9294 <- 16[%arg1]
	switch      %r9294, 40 -> .L2165, 46 -> .L2160, 58 -> .L2162, 91 -> .L2161, 123 -> .L2165, 286 -> .L2165, default -> .L2167

.L2160:
	call        field, %arg1, %arg2
	br          .L2155

.L2161:
	call.32     %r9299 <- luaK_exp2anyreg, %r9290, %arg2
	symaddr.64  %r9301 <- key
	call        yindex, %arg1, %r9301
	call        luaK_indexed, %r9290, %arg2, %r9301
	br          .L2155

.L2162:
	call        luaX_next, %arg1
	symaddr.64  %r9307 <- key
	call        checkname, %arg1, %r9307
	call        luaK_self, %r9290, %arg2, %r9307
	call        funcargs, %arg1, %arg2
	br          .L2155

.L2165:
	call        luaK_exp2nextreg, %r9290, %arg2
	call        funcargs, %arg1, %arg2
	br          .L2155

.L2167:
	ret


simpleexp:
.L2168:
	<entry-point>
	load.32     %r9318 <- 16[%arg1]
	switch      %r9318, 123 -> .L2176, 263 -> .L2174, 265 -> .L2177, 269 -> .L2172, 275 -> .L2173, 279 -> .L2175, 284 -> .L2170, 286 -> .L2171, default -> .L2178

.L2170:
	call        init_exp, %arg2, $5, $0
	load.64     %r9321 <- 24[%arg1]
	store.64    %r9321 -> 8[%arg2]
	br          .L2169

.L2171:
	load.64     %r9326 <- 24[%arg1]
	call        codestring, %arg1, %arg2, %r9326
	br          .L2169

.L2172:
	call        init_exp, %arg2, $1, $0
	br          .L2169

.L2173:
	call        init_exp, %arg2, $2, $0
	br          .L2169

.L2174:
	call        init_exp, %arg2, $3, $0
	br          .L2169

.L2175:
	load.64     %r9331 <- 48[%arg1]
	load.64     %r9333 <- 0[%r9331]
	load.8      %r9334 <- 114[%r9333]
	phisrc.64   %phi1384 <- %r9333
	br          %r9334, .L2180, .L2179

.L2179:
	symaddr.64  %r9336 <- <anon symbol:0x62d0013a9168>
	call        luaX_syntaxerror, %arg1, %r9336
	br          .L2180

.L2180:
	load.64     %r9338 <- 0[%r9331]
	load.8      %r9339 <- 114[%r9338]
	cast.32     %r9340 <- (8) %r9339
	and.32      %r9341 <- %r9340, $0xfffffffb
	scast.8     %r9342 <- (32) %r9341
	store.8     %r9342 -> 114[%r9338]
	call.32     %r9345 <- luaK_codeABC, %r9331, $37, $0, $1, $0
	call        init_exp, %arg2, $14, %r9345
	br          .L2169

.L2176:
	call        constructor, %arg1, %arg2
	br          .L2181

.L2177:
	call        luaX_next, %arg1
	load.32     %r9352 <- 4[%arg1]
	call        body, %arg1, %arg2, $0, %r9352
	br          .L2181

.L2178:
	call        primaryexp, %arg1, %arg2
	br          .L2181

.L2169:
	call        luaX_next, %arg1
	br          .L2181

.L2181:
	ret


getunopr:
.L2182:
	<entry-point>
	switch      %arg1, 35 -> .L2186, 45 -> .L2185, 270 -> .L2184, default -> .L2187

.L2184:
	phisrc.32   %phi1385(return) <- $1
	br          .L2188

.L2185:
	phisrc.32   %phi1386(return) <- $0
	br          .L2188

.L2186:
	phisrc.32   %phi1387(return) <- $2
	br          .L2188

.L2187:
	phisrc.32   %phi1388(return) <- $3
	br          .L2188

.L2188:
	phi.32      %r9357 <- %phi1385(return), %phi1386(return), %phi1387(return), %phi1388(return)
	ret.32      %r9357


getbinopr:
.L2189:
	<entry-point>
	switch      %arg1, 37 -> .L2195, 42 -> .L2193, 43 -> .L2191, 45 -> .L2192, 47 -> .L2194, 60 -> .L2200, 62 -> .L2202, 94 -> .L2196, 257 -> .L2204, 271 -> .L2205, 278 -> .L2197, 280 -> .L2199, 281 -> .L2203, 282 -> .L2201, 283 -> .L2198, default -> .L2206

.L2191:
	phisrc.32   %phi1389(return) <- $0
	br          .L2207

.L2192:
	phisrc.32   %phi1390(return) <- $1
	br          .L2207

.L2193:
	phisrc.32   %phi1391(return) <- $2
	br          .L2207

.L2194:
	phisrc.32   %phi1392(return) <- $3
	br          .L2207

.L2195:
	phisrc.32   %phi1393(return) <- $4
	br          .L2207

.L2196:
	phisrc.32   %phi1394(return) <- $5
	br          .L2207

.L2197:
	phisrc.32   %phi1395(return) <- $6
	br          .L2207

.L2198:
	phisrc.32   %phi1396(return) <- $7
	br          .L2207

.L2199:
	phisrc.32   %phi1397(return) <- $8
	br          .L2207

.L2200:
	phisrc.32   %phi1398(return) <- $9
	br          .L2207

.L2201:
	phisrc.32   %phi1399(return) <- $10
	br          .L2207

.L2202:
	phisrc.32   %phi1400(return) <- $11
	br          .L2207

.L2203:
	phisrc.32   %phi1401(return) <- $12
	br          .L2207

.L2204:
	phisrc.32   %phi1402(return) <- $13
	br          .L2207

.L2205:
	phisrc.32   %phi1403(return) <- $14
	br          .L2207

.L2206:
	phisrc.32   %phi1404(return) <- $15
	br          .L2207

.L2207:
	phi.32      %r9359 <- %phi1389(return), %phi1390(return), %phi1391(return), %phi1392(return), %phi1393(return), %phi1394(return), %phi1395(return), %phi1396(return), %phi1397(return), %phi1398(return), %phi1399(return), %phi1400(return), %phi1401(return), %phi1402(return), %phi1403(return), %phi1404(return)
	ret.32      %r9359


subexpr:
.L2208:
	<entry-point>
	call        enterlevel, %arg1
	load.32     %r9362 <- 16[%arg1]
	call.32     %r9363 <- getunopr, %r9362
	setne.32    %r9366 <- %r9363, $3
	br          %r9366, .L2209, .L2210

.L2209:
	call        luaX_next, %arg1
	call.32     %r9370 <- subexpr, %arg1, %arg2, $8
	load.64     %r9372 <- 48[%arg1]
	call        luaK_prefix, %r9372, %r9363, %arg2
	br          .L2211

.L2210:
	call        simpleexp, %arg1, %arg2
	br          .L2211

.L2211:
	load.32     %r9378 <- 16[%arg1]
	call.32     %r9379(op) <- getbinopr, %r9378
	phisrc.32   %phi1410(op) <- %r9379(op)
	br          .L2215

.L2215:
	phi.32      %r9380(op) <- %phi1410(op), %phi1411(op)
	setne.32    %r9382 <- %r9380(op), $15
	br          %r9382, .L2216, .L2214

.L2216:
	symaddr.64  %r9383 <- priority
	scast.64    %r9385 <- (32) %r9380(op)
	muls.64     %r9386 <- %r9385, $2
	add.64      %r9387 <- %r9383, %r9386
	load.8      %r9388 <- 0[%r9387]
	cast.32     %r9389 <- (8) %r9388
	seta.32     %r9391 <- %r9389, %arg3
	br          %r9391, .L2212, .L2214

.L2212:
	call        luaX_next, %arg1
	load.64     %r9394 <- 48[%arg1]
	call        luaK_infix, %r9394, %r9380(op), %arg2
	symaddr.64  %r9398 <- v2
	load.8      %r9404 <- 1[%r9387]
	cast.32     %r9405 <- (8) %r9404
	call.32     %r9406 <- subexpr, %arg1, %r9398, %r9405
	load.64     %r9408 <- 48[%arg1]
	call        luaK_posfix, %r9408, %r9380(op), %arg2, %r9398
	phisrc.32   %phi1411(op) <- %r9406
	br          .L2215

.L2214:
	load.64     %r9414 <- 56[%arg1]
	load.16     %r9415 <- 96[%r9414]
	add.16      %r9416 <- %r9415, $-1
	store.16    %r9416 -> 96[%r9414]
	ret.32      %r9380(op)


expr:
.L2218:
	<entry-point>
	call.32     %r9421 <- subexpr, %arg1, %arg2, $0
	ret


block_follow:
.L2220:
	<entry-point>
	switch      %arg1, 260 -> .L2226, 261 -> .L2226, 262 -> .L2226, 276 -> .L2226, 287 -> .L2226, default -> .L2227

.L2226:
	phisrc.32   %phi1412(return) <- $1
	br          .L2228

.L2227:
	phisrc.32   %phi1413(return) <- $0
	br          .L2228

.L2228:
	phi.32      %r9423 <- %phi1412(return), %phi1413(return)
	ret.32      %r9423


block:
.L2229:
	<entry-point>
	load.64     %r9425 <- 48[%arg1]
	symaddr.64  %r9427 <- bl
	call        enterblock, %r9425, %r9427, $0
	call        chunk, %arg1
	call        leaveblock, %r9425
	ret


check_conflict:
.L2231:
	<entry-point>
	load.64     %r9431 <- 48[%arg1]
	load.32     %r9433 <- 60[%r9431]
	phisrc.64   %phi1423(lh) <- %arg2
	phisrc.32   %phi1425(conflict) <- $0
	phisrc.32   %phi1428 <- %r9433
	phisrc.32   %phi1430 <- %r9433
	br          .L2235

.L2235:
	phi.64      %r9434(lh) <- %phi1423(lh), %phi1424(lh)
	br          %r9434(lh), .L2232, .L2234

.L2232:
	load.32     %r9436 <- 8[%r9434(lh)]
	seteq.32    %r9438 <- %r9436, $9
	br          %r9438, .L2236, .L2233

.L2236:
	load.32     %r9440 <- 16[%r9434(lh)]
	load.32     %r9442 <- 8[%arg3]
	seteq.32    %r9443 <- %r9440, %r9442
	phisrc.32   %phi1429 <- %r9442
	phisrc.32   %phi1431 <- %r9442
	br          %r9443, .L2238, .L2239

.L2238:
	store.32    %r9433 -> 16[%r9434(lh)]
	phisrc.32   %phi1426(conflict) <- $1
	br          .L2239

.L2239:
	load.32     %r9447 <- 20[%r9434(lh)]
	load.32     %r9449 <- 8[%arg3]
	seteq.32    %r9450 <- %r9447, %r9449
	br          %r9450, .L2240, .L2233

.L2240:
	store.32    %r9433 -> 20[%r9434(lh)]
	phisrc.32   %phi1427(conflict) <- $1
	br          .L2233

.L2233:
	load.64     %r9454 <- 0[%r9434(lh)]
	phisrc.64   %phi1424(lh) <- %r9454
	br          .L2235

.L2234:
	phi.32      %r9455 <- %phi1425(conflict), %phi1426(conflict), %phi1427(conflict)
	br          %r9455, .L2242, .L2243

.L2242:
	load.32     %r9458 <- 60[%r9431]
	load.32     %r9460 <- 8[%arg3]
	call.32     %r9461 <- luaK_codeABC, %r9431, $0, %r9458, %r9460, $0
	call        luaK_reserveregs, %r9431, $1
	br          .L2243

.L2243:
	ret


assignment:
.L2244:
	<entry-point>
	load.32     %r9464 <- 8[%arg2]
	setle.32    %r9466 <- $6, %r9464
	br          %r9466, .L2247, .L2245

.L2247:
	setle.32    %r9470 <- %r9464, $9
	br          %r9470, .L2246, .L2245

.L2245:
	symaddr.64  %r9472 <- <anon symbol:0x62d0013ad478>
	call        luaX_syntaxerror, %arg1, %r9472
	br          .L2246

.L2246:
	call.32     %r9474 <- testnext, %arg1, $44
	br          %r9474, .L2248, .L2249

.L2248:
	store.64    %arg2 -> 0[nv]
	symaddr.64  %r9477 <- nv
	add.64      %r9478 <- %r9477, $8
	call        primaryexp, %arg1, %r9478
	load.32     %r9479 <- 8[nv]
	seteq.32    %r9481 <- %r9479, $6
	br          %r9481, .L2250, .L2251

.L2250:
	call        check_conflict, %arg1, %arg2, %r9478
	br          .L2251

.L2251:
	load.64     %r9488 <- 56[%arg1]
	load.16     %r9489 <- 96[%r9488]
	cast.32     %r9490 <- (16) %r9489
	sub.32      %r9491 <- $200, %r9490
	setgt.32    %r9492 <- %arg3, %r9491
	br          %r9492, .L2252, .L2253

.L2252:
	load.64     %r9494 <- 48[%arg1]
	symaddr.64  %r9500 <- <anon symbol:0x62d0013b06d0>
	call        errorlimit, %r9494, %r9491, %r9500
	br          .L2253

.L2253:
	add.32      %r9504 <- %arg3, $1
	call        assignment, %arg1, %r9477, %r9504
	br          .L2254

.L2249:
	call        checknext, %arg1, $61
	symaddr.64  %r9507 <- e
	call.32     %r9508 <- explist1, %arg1, %r9507
	setne.32    %r9511 <- %r9508, %arg3
	br          %r9511, .L2255, .L2256

.L2255:
	call        adjust_assign, %arg1, %arg3, %r9508, %r9507
	setgt.32    %r9518 <- %r9508, %arg3
	br          %r9518, .L2257, .L2254

.L2257:
	sub.32      %r9521 <- %r9508, %arg3
	load.64     %r9523 <- 48[%arg1]
	load.32     %r9524 <- 60[%r9523]
	sub.32      %r9526 <- %r9524, %r9521
	store.32    %r9526 -> 60[%r9523]
	br          .L2254

.L2256:
	load.64     %r9529 <- 48[%arg1]
	call        luaK_setoneret, %r9529, %r9507
	load.64     %r9532 <- 48[%arg1]
	add.64      %r9534 <- %arg2, $8
	call        luaK_storevar, %r9532, %r9534, %r9507
	br          .L2260

.L2254:
	symaddr.64  %r9536 <- e
	load.64     %r9538 <- 48[%arg1]
	load.32     %r9539 <- 60[%r9538]
	add.32      %r9540 <- %r9539, $-1
	call        init_exp, %r9536, $12, %r9540
	load.64     %r9542 <- 48[%arg1]
	add.64      %r9544 <- %arg2, $8
	symaddr.64  %r9545 <- e
	call        luaK_storevar, %r9542, %r9544, %r9545
	br          .L2260

.L2260:
	ret


cond:
.L2261:
	<entry-point>
	symaddr.64  %r9547 <- v
	call        expr, %arg1, %r9547
	load.32     %r9548 <- 0[v]
	seteq.32    %r9550 <- %r9548, $1
	br          %r9550, .L2262, .L2263

.L2262:
	store.32    $3 -> 0[v]
	br          .L2263

.L2263:
	load.64     %r9552 <- 48[%arg1]
	call        luaK_goiftrue, %r9552, %r9547
	load.32     %r9554 <- 20[v]
	ret.32      %r9554


breakstat:
.L2265:
	<entry-point>
	load.64     %r9557 <- 48[%arg1]
	load.64     %r9559(bl) <- 40[%r9557]
	phisrc.64   %phi1443(bl) <- %r9559(bl)
	phisrc.32   %phi1445(upval) <- $0
	phisrc.32   %phi1447(upval) <- $0
	br          .L2269

.L2269:
	phi.64      %r9560(bl) <- %phi1443(bl), %phi1444(bl)
	br          %r9560(bl), .L2270, .L2271

.L2270:
	load.8      %r9562 <- 14[%r9560(bl)]
	br          %r9562, .L2268, .L2266

.L2266:
	load.8      %r9564 <- 13[%r9560(bl)]
	cast.32     %r9565 <- (8) %r9564
	phi.32      %r9566 <- %phi1447(upval), %phi1448(upval)
	or.32       %r9568 <- %r9566, %r9565
	load.64     %r9571 <- 0[%r9560(bl)]
	phisrc.64   %phi1444(bl) <- %r9571
	phisrc.32   %phi1446(upval) <- %r9568
	phisrc.32   %phi1448(upval) <- %r9568
	br          .L2269

.L2268:
	br          %r9560(bl), .L2272, .L2271

.L2271:
	symaddr.64  %r9574 <- <anon symbol:0x62d0013b36d8>
	call        luaX_syntaxerror, %arg1, %r9574
	br          .L2272

.L2272:
	phi.32      %r9575 <- %phi1445(upval), %phi1446(upval)
	br          %r9575, .L2273, .L2274

.L2273:
	load.8      %r9578 <- 12[%r9560(bl)]
	cast.32     %r9579 <- (8) %r9578
	call.32     %r9580 <- luaK_codeABC, %r9557, $35, %r9579, $0, $0
	br          .L2274

.L2274:
	add.64      %r9583 <- %r9560(bl), $8
	call.32     %r9585 <- luaK_jump, %r9557
	call        luaK_concat, %r9557, %r9583, %r9585
	ret


whilestat:
.L2276:
	<entry-point>
	load.64     %r9587 <- 48[%arg1]
	call        luaX_next, %arg1
	call.32     %r9590 <- luaK_getlabel, %r9587
	call.32     %r9592 <- cond, %arg1
	symaddr.64  %r9594 <- bl
	call        enterblock, %r9587, %r9594, $1
	call        checknext, %arg1, $259
	call        block, %arg1
	call.32     %r9599 <- luaK_jump, %r9587
	call        luaK_patchlist, %r9587, %r9599, %r9590
	call        check_match, %arg1, $262, $277, %arg2
	call        leaveblock, %r9587
	call        luaK_patchtohere, %r9587, %r9592
	ret


repeatstat:
.L2278:
	<entry-point>
	load.64     %r9607 <- 48[%arg1]
	call.32     %r9609 <- luaK_getlabel, %r9607
	symaddr.64  %r9611 <- bl1
	call        enterblock, %r9607, %r9611, $1
	symaddr.64  %r9613 <- bl2
	call        enterblock, %r9607, %r9613, $0
	call        luaX_next, %arg1
	call        chunk, %arg1
	call        check_match, %arg1, $276, $272, %arg2
	call.32     %r9619 <- cond, %arg1
	load.8      %r9620 <- 13[bl2]
	br          %r9620, .L2280, .L2279

.L2279:
	call        leaveblock, %r9607
	load.64     %r9623 <- 48[%arg1]
	call        luaK_patchlist, %r9623, %r9619, %r9609
	br          .L2281

.L2280:
	call        breakstat, %arg1
	load.64     %r9628 <- 48[%arg1]
	call        luaK_patchtohere, %r9628, %r9619
	call        leaveblock, %r9607
	load.64     %r9632 <- 48[%arg1]
	call.32     %r9634 <- luaK_jump, %r9607
	call        luaK_patchlist, %r9632, %r9634, %r9609
	br          .L2281

.L2281:
	call        leaveblock, %r9607
	ret


exp1:
.L2283:
	<entry-point>
	symaddr.64  %r9638 <- e
	call        expr, %arg1, %r9638
	load.32     %r9639 <- 0[e]
	load.64     %r9642 <- 48[%arg1]
	call        luaK_exp2nextreg, %r9642, %r9638
	ret.32      %r9639


forbody:
.L2285:
	<entry-point>
	load.64     %r9647 <- 48[%arg1]
	call        adjustlocalvars, %arg1, $3
	call        checknext, %arg1, $259
	br          %arg5, .L2286, .L2287

.L2286:
	call.32     %r9653 <- luaK_codeABx, %r9647, $32, %arg2, $0x1fffe
	phisrc.32   %phi1450 <- %r9653
	br          .L2288

.L2287:
	call.32     %r9655 <- luaK_jump, %r9647
	phisrc.32   %phi1451 <- %r9655
	br          .L2288

.L2288:
	phi.32      %r9656 <- %phi1450, %phi1451
	symaddr.64  %r9658 <- bl
	call        enterblock, %r9647, %r9658, $0
	call        adjustlocalvars, %arg1, %arg4
	call        luaK_reserveregs, %r9647, %arg4
	call        block, %arg1
	call        leaveblock, %r9647
	call        luaK_patchtohere, %r9647, %r9656
	br          %arg5, .L2289, .L2290

.L2289:
	call.32     %r9670 <- luaK_codeABx, %r9647, $31, %arg2, $0x1fffe
	phisrc.32   %phi1452 <- %r9670
	br          .L2291

.L2290:
	call.32     %r9674 <- luaK_codeABC, %r9647, $33, %arg2, $0, %arg4
	phisrc.32   %phi1453 <- %r9674
	br          .L2291

.L2291:
	phi.32      %r9675 <- %phi1452, %phi1453
	call        luaK_fixline, %r9647, %arg3
	br          %arg5, .L2292, .L2293

.L2292:
	phisrc.32   %phi1454 <- %r9675
	br          .L2294

.L2293:
	call.32     %r9682 <- luaK_jump, %r9647
	phisrc.32   %phi1455 <- %r9682
	br          .L2294

.L2294:
	phi.32      %r9683 <- %phi1454, %phi1455
	add.32      %r9685 <- %r9656, $1
	call        luaK_patchlist, %r9647, %r9683, %r9685
	ret


fornum:
.L2296:
	<entry-point>
	load.64     %r9687 <- 48[%arg1]
	load.32     %r9689 <- 60[%r9687]
	symaddr.64  %r9692 <- <anon symbol:0x62d0013b5c00>
	call.64     %r9693 <- luaX_newstring, %arg1, %r9692, $11
	call        new_localvar, %arg1, %r9693, $0
	symaddr.64  %r9696 <- <anon symbol:0x62d0013b6170>
	call.64     %r9697 <- luaX_newstring, %arg1, %r9696, $11
	call        new_localvar, %arg1, %r9697, $1
	symaddr.64  %r9700 <- <anon symbol:0x62d0013b66e0>
	call.64     %r9701 <- luaX_newstring, %arg1, %r9700, $10
	call        new_localvar, %arg1, %r9701, $2
	call        new_localvar, %arg1, %arg2, $3
	call        checknext, %arg1, $61
	call.32     %r9706 <- exp1, %arg1
	call        checknext, %arg1, $44
	call.32     %r9709 <- exp1, %arg1
	call.32     %r9711 <- testnext, %arg1, $44
	br          %r9711, .L2297, .L2298

.L2297:
	call.32     %r9713 <- exp1, %arg1
	br          .L2299

.L2298:
	load.32     %r9716 <- 60[%r9687]
	call.32     %r9718 <- luaK_numberK, %r9687, $1
	call.32     %r9720 <- luaK_codeABx, %r9687, $1, %r9716, %r9718
	call        luaK_reserveregs, %r9687, $1
	br          .L2299

.L2299:
	call        forbody, %arg1, %r9689, %arg3, $1, $1
	ret


forlist:
.L2301:
	<entry-point>
	load.64     %r9726 <- 48[%arg1]
	load.32     %r9728 <- 60[%r9726]
	symaddr.64  %r9731 <- <anon symbol:0x62d0013b71c0>
	call.64     %r9732 <- luaX_newstring, %arg1, %r9731, $15
	call        new_localvar, %arg1, %r9732, $0
	symaddr.64  %r9737 <- <anon symbol:0x62d0013b7730>
	call.64     %r9738 <- luaX_newstring, %arg1, %r9737, $11
	call        new_localvar, %arg1, %r9738, $1
	symaddr.64  %r9743 <- <anon symbol:0x62d0013b7ca0>
	call.64     %r9744 <- luaX_newstring, %arg1, %r9743, $13
	call        new_localvar, %arg1, %r9744, $2
	call        new_localvar, %arg1, %arg2, $3
	phisrc.32   %phi1458(nvars) <- $4
	br          .L2305

.L2305:
	call.32     %r9752 <- testnext, %arg1, $44
	phi.32      %r9756 <- %phi1458(nvars), %phi1459(nvars)
	br          %r9752, .L2302, .L2304

.L2302:
	call.64     %r9755 <- str_checkname, %arg1
	add.32      %r9757 <- %r9756, $1
	call        new_localvar, %arg1, %r9755, %r9756
	phisrc.32   %phi1459(nvars) <- %r9757
	br          .L2305

.L2304:
	call        checknext, %arg1, $267
	load.32     %r9760 <- 4[%arg1]
	symaddr.64  %r9763 <- e
	call.32     %r9764 <- explist1, %arg1, %r9763
	call        adjust_assign, %arg1, $3, %r9764, %r9763
	call        luaK_checkstack, %r9726, $3
	add.32      %r9771 <- %r9756, $-3
	call        forbody, %arg1, %r9728, %r9760, %r9771, $0
	ret


forstat:
.L2307:
	<entry-point>
	load.64     %r9773 <- 48[%arg1]
	symaddr.64  %r9775 <- bl
	call        enterblock, %r9773, %r9775, $1
	call        luaX_next, %arg1
	call.64     %r9778 <- str_checkname, %arg1
	load.32     %r9780 <- 16[%arg1]
	switch      %r9780, 44 -> .L2311, 61 -> .L2309, 267 -> .L2311, default -> .L2312

.L2309:
	call        fornum, %arg1, %r9778, %arg2
	br          .L2308

.L2311:
	call        forlist, %arg1, %r9778
	br          .L2308

.L2312:
	symaddr.64  %r9787 <- <anon symbol:0x62d0013c4d28>
	call        luaX_syntaxerror, %arg1, %r9787
	br          .L2308

.L2308:
	call        check_match, %arg1, $262, $264, %arg2
	call        leaveblock, %r9773
	ret


test_then_block:
.L2314:
	<entry-point>
	call        luaX_next, %arg1
	call.32     %r9793 <- cond, %arg1
	call        checknext, %arg1, $274
	call        block, %arg1
	ret.32      %r9793


ifstat:
.L2316:
	<entry-point>
	load.64     %r9799 <- 48[%arg1]
	store.32    $0xffffffff -> 0[escapelist]
	call.32     %r9801(flist) <- test_then_block, %arg1
	phisrc.32   %phi1461(flist) <- %r9801(flist)
	phisrc.32   %phi1463(flist) <- %r9801(flist)
	phisrc.32   %phi1465(flist) <- %r9801(flist)
	br          .L2320

.L2320:
	load.32     %r9803 <- 16[%arg1]
	seteq.32    %r9804 <- %r9803, $261
	br          %r9804, .L2317, .L2319

.L2317:
	symaddr.64  %r9806 <- escapelist
	call.32     %r9808 <- luaK_jump, %r9799
	call        luaK_concat, %r9799, %r9806, %r9808
	phi.32      %r9810 <- %phi1465(flist), %phi1466(flist)
	call        luaK_patchtohere, %r9799, %r9810
	call.32     %r9812 <- test_then_block, %arg1
	phisrc.32   %phi1462(flist) <- %r9812
	phisrc.32   %phi1464(flist) <- %r9812
	phisrc.32   %phi1466(flist) <- %r9812
	br          .L2320

.L2319:
	seteq.32    %r9815 <- %r9803, $260
	br          %r9815, .L2321, .L2322

.L2321:
	symaddr.64  %r9817 <- escapelist
	call.32     %r9819 <- luaK_jump, %r9799
	call        luaK_concat, %r9799, %r9817, %r9819
	phi.32      %r9821 <- %phi1463(flist), %phi1464(flist)
	call        luaK_patchtohere, %r9799, %r9821
	call        luaX_next, %arg1
	call        block, %arg1
	br          .L2323

.L2322:
	symaddr.64  %r9825 <- escapelist
	phi.32      %r9826 <- %phi1461(flist), %phi1462(flist)
	call        luaK_concat, %r9799, %r9825, %r9826
	br          .L2323

.L2323:
	load.32     %r9828 <- 0[escapelist]
	call        luaK_patchtohere, %r9799, %r9828
	call        check_match, %arg1, $262, $266, %arg2
	ret


localfunc:
.L2325:
	<entry-point>
	load.64     %r9832 <- 48[%arg1]
	call.64     %r9835 <- str_checkname, %arg1
	call        new_localvar, %arg1, %r9835, $0
	symaddr.64  %r9836 <- v
	load.32     %r9838 <- 60[%r9832]
	call        init_exp, %r9836, $6, %r9838
	call        luaK_reserveregs, %r9832, $1
	call        adjustlocalvars, %arg1, $1
	symaddr.64  %r9842 <- b
	load.32     %r9844 <- 4[%arg1]
	call        body, %arg1, %r9842, $0, %r9844
	call        luaK_storevar, %r9832, %r9836, %r9842
	load.32     %r9849 <- 48[%r9832]
	load.64     %r9851 <- 0[%r9832]
	load.64     %r9852 <- 48[%r9851]
	add.64      %r9854 <- %r9832, $196
	load.8      %r9856 <- 74[%r9832]
	cast.32     %r9857 <- (8) %r9856
	add.32      %r9858 <- %r9857, $-1
	scast.64    %r9859 <- (32) %r9858
	muls.64     %r9860 <- %r9859, $2
	add.64      %r9861 <- %r9854, %r9860
	load.16     %r9862 <- 0[%r9861]
	cast.64     %r9863 <- (16) %r9862
	muls.64     %r9864 <- %r9863, $16
	add.64      %r9865 <- %r9852, %r9864
	store.32    %r9849 -> 8[%r9865]
	ret


localstat:
.L2327:
	<entry-point>
	phisrc.32   %phi1469(nvars) <- $0
	br          .L2328

.L2328:
	call.64     %r9868 <- str_checkname, %arg1
	phi.32      %r9869 <- %phi1469(nvars), %phi1470(nvars)
	add.32      %r9870(nvars) <- %r9869, $1
	call        new_localvar, %arg1, %r9868, %r9869
	phisrc.32   %phi1470(nvars) <- %r9870(nvars)
	call.32     %r9872 <- testnext, %arg1, $44
	br          %r9872, .L2328, .L2330

.L2330:
	call.32     %r9874 <- testnext, %arg1, $61
	br          %r9874, .L2331, .L2332

.L2331:
	symaddr.64  %r9876 <- e
	call.32     %r9877(nexps) <- explist1, %arg1, %r9876
	phisrc.32   %phi1471(nexps) <- %r9877(nexps)
	br          .L2333

.L2332:
	store.32    $0 -> 0[e]
	phisrc.32   %phi1472(nexps) <- $0
	br          .L2333

.L2333:
	phi.32      %r9880 <- %phi1471(nexps), %phi1472(nexps)
	symaddr.64  %r9881 <- e
	call        adjust_assign, %arg1, %r9870(nvars), %r9880, %r9881
	call        adjustlocalvars, %arg1, %r9870(nvars)
	ret


funcname:
.L2335:
	<entry-point>
	call        singlevar, %arg1, %arg2
	phisrc.32   %phi1474(needself) <- $0
	br          .L2339

.L2339:
	load.32     %r9887 <- 16[%arg1]
	seteq.32    %r9888 <- %r9887, $46
	br          %r9888, .L2336, .L2338

.L2336:
	call        field, %arg1, %arg2
	br          .L2339

.L2338:
	seteq.32    %r9893 <- %r9887, $58
	br          %r9893, .L2340, .L2341

.L2340:
	call        field, %arg1, %arg2
	phisrc.32   %phi1475(needself) <- $1
	br          .L2341

.L2341:
	phi.32      %r9896 <- %phi1474(needself), %phi1475(needself)
	ret.32      %r9896


funcstat:
.L2343:
	<entry-point>
	call        luaX_next, %arg1
	symaddr.64  %r9900 <- v
	call.32     %r9901 <- funcname, %arg1, %r9900
	symaddr.64  %r9903 <- b
	call        body, %arg1, %r9903, %r9901, %arg2
	load.64     %r9907 <- 48[%arg1]
	call        luaK_storevar, %r9907, %r9900, %r9903
	load.64     %r9911 <- 48[%arg1]
	call        luaK_fixline, %r9911, %arg2
	ret


exprstat:
.L2345:
	<entry-point>
	load.64     %r9914 <- 48[%arg1]
	symaddr.64  %r9916 <- v
	add.64      %r9917 <- %r9916, $8
	call        primaryexp, %arg1, %r9917
	load.32     %r9918 <- 8[v]
	seteq.32    %r9920 <- %r9918, $13
	br          %r9920, .L2346, .L2347

.L2346:
	load.64     %r9922 <- 0[%r9914]
	load.64     %r9923 <- 24[%r9922]
	load.32     %r9924 <- 16[v]
	scast.64    %r9925 <- (32) %r9924
	muls.64     %r9926 <- %r9925, $4
	add.64      %r9927 <- %r9923, %r9926
	load.32     %r9928 <- 0[%r9927]
	and.32      %r9929 <- %r9928, $0xff803fff
	or.32       %r9930 <- %r9929, $0x4000
	store.32    %r9930 -> 0[%r9927]
	br          .L2348

.L2347:
	store.64    $0 -> 0[v]
	call        assignment, %arg1, %r9916, $1
	br          .L2348

.L2348:
	ret


retstat:
.L2349:
	<entry-point>
	load.64     %r9941 <- 48[%arg1]
	call        luaX_next, %arg1
	load.32     %r9944 <- 16[%arg1]
	call.32     %r9945 <- block_follow, %r9944
	br          %r9945, .L2350, .L2352

.L2352:
	load.32     %r9947 <- 16[%arg1]
	seteq.32    %r9948 <- %r9947, $59
	br          %r9948, .L2350, .L2351

.L2350:
	phisrc.32   %phi1477(nret) <- $0
	phisrc.32   %phi1482(first) <- $0
	br          .L2353

.L2351:
	symaddr.64  %r9950 <- e
	call.32     %r9951(nret) <- explist1, %arg1, %r9950
	load.32     %r9952 <- 0[e]
	seteq.32    %r9954 <- %r9952, $13
	seteq.32    %r9957 <- %r9952, $14
	or-bool.32  %r9958 <- %r9954, %r9957
	seteq.32    %r9965 <- %r9951(nret), $1
	br          %r9958, .L2354, .L2355

.L2354:
	call        luaK_setreturns, %r9941, %r9950, $0xffffffff
	load.32     %r9961 <- 0[e]
	seteq.32    %r9963 <- %r9961, $13
	and-bool.32 %r9966 <- %r9963, %r9965
	br          %r9966, .L2356, .L2357

.L2356:
	load.64     %r9968 <- 0[%r9941]
	load.64     %r9969 <- 24[%r9968]
	load.32     %r9970 <- 8[e]
	scast.64    %r9971 <- (32) %r9970
	muls.64     %r9972 <- %r9971, $4
	add.64      %r9973 <- %r9969, %r9972
	load.32     %r9974 <- 0[%r9973]
	and.32      %r9975 <- %r9974, $0xffffffc0
	or.32       %r9976 <- %r9975, $29
	store.32    %r9976 -> 0[%r9973]
	br          .L2357

.L2357:
	load.8      %r9985 <- 74[%r9941]
	cast.32     %r9986 <- (8) %r9985
	phisrc.32   %phi1478(nret) <- $0xffffffff
	phisrc.32   %phi1483(first) <- %r9986
	br          .L2353

.L2355:
	phisrc.32   %phi1479(nret) <- %r9951(nret)
	br          %r9965, .L2359, .L2360

.L2359:
	call.32     %r9991 <- luaK_exp2anyreg, %r9941, %r9950
	phisrc.32   %phi1484(first) <- %r9991
	br          .L2353

.L2360:
	call        luaK_exp2nextreg, %r9941, %r9950
	load.8      %r9995 <- 74[%r9941]
	cast.32     %r9996 <- (8) %r9995
	phisrc.32   %phi1485(first) <- %r9996
	br          .L2353

.L2353:
	phi.32      %r9998 <- %phi1482(first), %phi1483(first), %phi1484(first), %phi1485(first)
	phi.32      %r9999 <- %phi1477(nret), %phi1478(nret), %phi1479(nret)
	call        luaK_ret, %r9941, %r9998, %r9999
	ret


statement:
.L2363:
	<entry-point>
	load.32     %r10001 <- 4[%arg1]
	load.32     %r10003 <- 16[%arg1]
	switch      %r10003, 258 -> .L2373, 259 -> .L2367, 264 -> .L2368, 265 -> .L2370, 266 -> .L2365, 268 -> .L2371, 272 -> .L2369, 273 -> .L2372, 277 -> .L2366, default -> .L2374

.L2365:
	call        ifstat, %arg1, %r10001
	phisrc.32   %phi1486(return) <- $0
	br          .L2375

.L2366:
	call        whilestat, %arg1, %r10001
	phisrc.32   %phi1487(return) <- $0
	br          .L2375

.L2367:
	call        luaX_next, %arg1
	call        block, %arg1
	call        check_match, %arg1, $262, $259, %r10001
	phisrc.32   %phi1488(return) <- $0
	br          .L2375

.L2368:
	call        forstat, %arg1, %r10001
	phisrc.32   %phi1489(return) <- $0
	br          .L2375

.L2369:
	call        repeatstat, %arg1, %r10001
	phisrc.32   %phi1490(return) <- $0
	br          .L2375

.L2370:
	call        funcstat, %arg1, %r10001
	phisrc.32   %phi1491(return) <- $0
	br          .L2375

.L2371:
	call        luaX_next, %arg1
	call.32     %r10021 <- testnext, %arg1, $265
	br          %r10021, .L2376, .L2377

.L2376:
	call        localfunc, %arg1
	br          .L2378

.L2377:
	call        localstat, %arg1
	br          .L2378

.L2378:
	phisrc.32   %phi1492(return) <- $0
	br          .L2375

.L2372:
	call        retstat, %arg1
	phisrc.32   %phi1493(return) <- $1
	br          .L2375

.L2373:
	call        luaX_next, %arg1
	call        breakstat, %arg1
	phisrc.32   %phi1494(return) <- $1
	br          .L2375

.L2374:
	call        exprstat, %arg1
	phisrc.32   %phi1495(return) <- $0
	br          .L2375

.L2375:
	phi.32      %r10006 <- %phi1486(return), %phi1487(return), %phi1488(return), %phi1489(return), %phi1490(return), %phi1491(return), %phi1492(return), %phi1493(return), %phi1494(return), %phi1495(return)
	ret.32      %r10006


chunk:
.L2379:
	<entry-point>
	call        enterlevel, %arg1
	br          .L2384

.L2384:
	load.32     %r10031 <- 16[%arg1]
	call.32     %r10032 <- block_follow, %r10031
	br          %r10032, .L2382, .L2380

.L2380:
	call.32     %r10034 <- statement, %arg1
	call.32     %r10036 <- testnext, %arg1, $59
	load.64     %r10038 <- 48[%arg1]
	load.8      %r10039 <- 74[%r10038]
	cast.32     %r10040 <- (8) %r10039
	store.32    %r10040 -> 60[%r10038]
	br          %r10034, .L2382, .L2384

.L2382:
	load.64     %r10044 <- 56[%arg1]
	load.16     %r10045 <- 96[%r10044]
	add.16      %r10046 <- %r10045, $-1
	store.16    %r10046 -> 96[%r10044]
	ret


luaV_tonumber:
.L2386:
	<entry-point>
	load.32     %r10048 <- 8[%arg1]
	seteq.32    %r10050 <- %r10048, $3
	br          %r10050, .L2387, .L2388

.L2387:
	phisrc.64   %phi1498(return) <- %arg1
	br          .L2389

.L2388:
	seteq.32    %r10056 <- %r10048, $4
	br          %r10056, .L2392, .L2391

.L2392:
	load.64     %r10058 <- 0[%arg1]
	add.64      %r10060 <- %r10058, $24
	ptrcast.64  %r10061 <- (64) %r10060
	symaddr.64  %r10062 <- num
	call.32     %r10063 <- luaO_str2d, %r10061, %r10062
	br          %r10063, .L2390, .L2391

.L2390:
	load.64     %r10065 <- 0[num]
	store.64    %r10065 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	phisrc.64   %phi1499(return) <- %arg2
	br          .L2389

.L2391:
	phisrc.64   %phi1500(return) <- $0
	br          .L2389

.L2389:
	phi.64      %r10052 <- %phi1498(return), %phi1499(return), %phi1500(return)
	ret.64      %r10052


luaV_tostring:
.L2394:
	<entry-point>
	load.32     %r10070 <- 8[%arg2]
	seteq.32    %r10071 <- %r10070, $3
	br          %r10071, .L2396, .L2397

.L2396:
	load.64     %r10074 <- 0[%arg2]
	symaddr.64  %r10075 <- s
	symaddr.64  %r10076 <- <anon symbol:0x62d0010e4ac8>
	call.32     %r10078 <- sprintf, %r10075, %r10076, %r10074
	call.64     %r10083 <- strlen, %r10075
	call.64     %r10084 <- luaS_newlstr, %arg1, %r10075, %r10083
	ptrcast.64  %r10085 <- (64) %r10084
	store.64    %r10085 -> 0[%arg2]
	store.32    $4 -> 8[%arg2]
	br          .L2397

.L2397:
	ret.32      %r10071


callTMres:
.L2399:
	<entry-point>
	ptrcast.64  %r10089 <- (64) %arg2
	load.64     %r10091 <- 64[%arg1]
	ptrcast.64  %r10092 <- (64) %r10091
	sub.64      %r10093 <- %r10089, %r10092
	load.64     %r10096 <- 16[%arg1]
	load.64     %r10098 <- 0[%arg3]
	store.64    %r10098 -> 0[%r10096]
	load.32     %r10101 <- 8[%arg3]
	store.32    %r10101 -> 8[%r10096]
	load.64     %r10106 <- 16[%arg1]
	load.64     %r10109 <- 0[%arg4]
	store.64    %r10109 -> 16[%r10106]
	load.32     %r10112 <- 8[%arg4]
	store.32    %r10112 -> 24[%r10106]
	load.64     %r10117 <- 16[%arg1]
	load.64     %r10120 <- 0[%arg5]
	store.64    %r10120 -> 32[%r10117]
	load.32     %r10123 <- 8[%arg5]
	store.32    %r10123 -> 40[%r10117]
	load.64     %r10127 <- 56[%arg1]
	ptrcast.64  %r10128 <- (64) %r10127
	load.64     %r10130 <- 16[%arg1]
	ptrcast.64  %r10131 <- (64) %r10130
	sub.64      %r10132 <- %r10128, %r10131
	setle.32    %r10133 <- %r10132, $48
	br          %r10133, .L2400, .L2402

.L2400:
	call        luaD_growstack, %arg1, $3
	br          .L2402

.L2402:
	load.64     %r10136 <- 16[%arg1]
	cast.64     %r10137 <- (64) %r10136
	add.64      %r10138 <- %r10137, $48
	ptrcast.64  %r10139 <- (64) %r10138
	store.64    %r10139 -> 16[%arg1]
	add.64      %r10143 <- %r10139, $-48
	call        luaD_call, %arg1, %r10143, $1
	load.64     %r10145 <- 64[%arg1]
	ptrcast.64  %r10146 <- (64) %r10145
	add.64      %r10148 <- %r10146, %r10093
	ptrcast.64  %r10149 <- (64) %r10148
	load.64     %r10151 <- 16[%arg1]
	add.64      %r10152 <- %r10151, $-16
	store.64    %r10152 -> 16[%arg1]
	load.64     %r10157 <- -16[%r10151]
	store.64    %r10157 -> 0[%r10149]
	load.32     %r10160 <- -8[%r10151]
	store.32    %r10160 -> 8[%r10149]
	ret


callTM:
.L2404:
	<entry-point>
	load.64     %r10165 <- 16[%arg1]
	load.64     %r10167 <- 0[%arg2]
	store.64    %r10167 -> 0[%r10165]
	load.32     %r10170 <- 8[%arg2]
	store.32    %r10170 -> 8[%r10165]
	load.64     %r10175 <- 16[%arg1]
	load.64     %r10178 <- 0[%arg3]
	store.64    %r10178 -> 16[%r10175]
	load.32     %r10181 <- 8[%arg3]
	store.32    %r10181 -> 24[%r10175]
	load.64     %r10186 <- 16[%arg1]
	load.64     %r10189 <- 0[%arg4]
	store.64    %r10189 -> 32[%r10186]
	load.32     %r10192 <- 8[%arg4]
	store.32    %r10192 -> 40[%r10186]
	load.64     %r10197 <- 16[%arg1]
	load.64     %r10200 <- 0[%arg5]
	store.64    %r10200 -> 48[%r10197]
	load.32     %r10203 <- 8[%arg5]
	store.32    %r10203 -> 56[%r10197]
	load.64     %r10207 <- 56[%arg1]
	ptrcast.64  %r10208 <- (64) %r10207
	load.64     %r10210 <- 16[%arg1]
	ptrcast.64  %r10211 <- (64) %r10210
	sub.64      %r10212 <- %r10208, %r10211
	setle.32    %r10213 <- %r10212, $64
	br          %r10213, .L2405, .L2407

.L2405:
	call        luaD_growstack, %arg1, $4
	br          .L2407

.L2407:
	load.64     %r10216 <- 16[%arg1]
	cast.64     %r10217 <- (64) %r10216
	add.64      %r10218 <- %r10217, $64
	ptrcast.64  %r10219 <- (64) %r10218
	store.64    %r10219 -> 16[%arg1]
	add.64      %r10223 <- %r10219, $-64
	call        luaD_call, %arg1, %r10223, $0
	ret


luaV_gettable:
.L2409:
	<entry-point>
	phisrc.64   %phi1514(t) <- %arg2
	phisrc.32   %phi1517(loop) <- $0
	br          .L2413

.L2413:
	phi.32      %r10224(loop) <- %phi1517(loop), %phi1518(loop)
	setlt.32    %r10225 <- %r10224(loop), $100
	br          %r10225, .L2410, .L2412

.L2410:
	phi.64      %r10226(t) <- %phi1514(t), %phi1515(t)
	load.32     %r10227 <- 8[%r10226(t)]
	seteq.32    %r10229 <- %r10227, $5
	br          %r10229, .L2414, .L2415

.L2414:
	load.64     %r10231 <- 0[%r10226(t)]
	call.64     %r10235 <- luaH_get, %r10231, %arg3
	load.32     %r10237 <- 8[%r10235]
	br          %r10237, .L2416, .L2418

.L2418:
	load.64     %r10241 <- 16[%r10231]
	br          %r10241, .L2420, .L2416

.L2420:
	load.8      %r10245 <- 10[%r10241]
	cast.32     %r10246 <- (8) %r10245
	and.32      %r10247 <- %r10246, $1
	br          %r10247, .L2416, .L2423

.L2423:
	load.64     %r10251 <- 32[%arg1]
	load.64     %r10252 <- 296[%r10251]
	call.64     %r10253 <- luaT_gettm, %r10241, $0, %r10252
	phisrc.64   %phi1521(tm) <- %r10253
	br          %r10253, .L2426, .L2416

.L2416:
	load.64     %r10260 <- 0[%r10235]
	store.64    %r10260 -> 0[%arg4]
	load.32     %r10263 <- 8[%r10235]
	store.32    %r10263 -> 8[%arg4]
	br          .L2425

.L2415:
	call.64     %r10268 <- luaT_gettmbyobj, %arg1, %r10226(t), $0
	load.32     %r10269 <- 8[%r10268]
	phisrc.64   %phi1522(tm) <- %r10268
	br          %r10269, .L2426, .L2427

.L2427:
	symaddr.64  %r10274 <- <anon symbol:0x62d0013d4170>
	call        luaG_typeerror, %arg1, %r10226(t), %r10274
	br          .L2426

.L2426:
	phi.64      %r10275(tm) <- %phi1521(tm), %phi1522(tm)
	load.32     %r10276 <- 8[%r10275(tm)]
	seteq.32    %r10278 <- %r10276, $6
	br          %r10278, .L2429, .L2430

.L2429:
	call        callTMres, %arg1, %arg4, %r10275(tm), %r10226(t), %arg3
	br          .L2425

.L2430:
	phisrc.64   %phi1515(t) <- %r10275(tm)
	add.32      %r10286 <- %r10224(loop), $1
	phisrc.32   %phi1518(loop) <- %r10286
	br          .L2413

.L2412:
	symaddr.64  %r10288 <- <anon symbol:0x62d0013d46e0>
	call        luaG_runerror, %arg1, %r10288
	br          .L2425

.L2425:
	ret


luaV_settable:
.L2431:
	<entry-point>
	phisrc.64   %phi1535(t) <- %arg2
	phisrc.32   %phi1538(loop) <- $0
	br          .L2435

.L2435:
	phi.32      %r10289(loop) <- %phi1538(loop), %phi1539(loop)
	setlt.32    %r10290 <- %r10289(loop), $100
	br          %r10290, .L2432, .L2434

.L2432:
	phi.64      %r10291(t) <- %phi1535(t), %phi1536(t)
	load.32     %r10292 <- 8[%r10291(t)]
	seteq.32    %r10294 <- %r10292, $5
	br          %r10294, .L2436, .L2437

.L2436:
	load.64     %r10296 <- 0[%r10291(t)]
	call.64     %r10301 <- luaH_set, %arg1, %r10296, %arg3
	load.32     %r10303 <- 8[%r10301]
	br          %r10303, .L2438, .L2440

.L2440:
	load.64     %r10306 <- 16[%r10296]
	br          %r10306, .L2442, .L2438

.L2442:
	load.8      %r10310 <- 10[%r10306]
	cast.32     %r10311 <- (8) %r10310
	and.32      %r10312 <- %r10311, $2
	br          %r10312, .L2438, .L2445

.L2445:
	load.64     %r10316 <- 32[%arg1]
	load.64     %r10317 <- 304[%r10316]
	call.64     %r10318 <- luaT_gettm, %r10306, $1, %r10317
	phisrc.64   %phi1542(tm) <- %r10318
	br          %r10318, .L2452, .L2438

.L2438:
	load.64     %r10325 <- 0[%arg4]
	store.64    %r10325 -> 0[%r10301]
	load.32     %r10328 <- 8[%arg4]
	store.32    %r10328 -> 8[%r10301]
	store.8     $0 -> 10[%r10296]
	load.32     %r10333 <- 8[%arg4]
	setge.32    %r10334 <- %r10333, $4
	br          %r10334, .L2450, .L2451

.L2450:
	load.64     %r10336 <- 0[%arg4]
	load.8      %r10337 <- 9[%r10336]
	cast.32     %r10338 <- (8) %r10337
	and.32      %r10339 <- %r10338, $3
	br          %r10339, .L2449, .L2451

.L2449:
	ptrcast.64  %r10341 <- (64) %r10296
	load.8      %r10342 <- 9[%r10341]
	cast.32     %r10343 <- (8) %r10342
	and.32      %r10344 <- %r10343, $4
	br          %r10344, .L2447, .L2451

.L2447:
	call        luaC_barrierback, %arg1, %r10296
	br          .L2451

.L2437:
	call.64     %r10349 <- luaT_gettmbyobj, %arg1, %r10291(t), $1
	load.32     %r10350 <- 8[%r10349]
	phisrc.64   %phi1543(tm) <- %r10349
	br          %r10350, .L2452, .L2453

.L2453:
	symaddr.64  %r10355 <- <anon symbol:0x62d0013e2fe0>
	call        luaG_typeerror, %arg1, %r10291(t), %r10355
	br          .L2452

.L2452:
	phi.64      %r10356(tm) <- %phi1542(tm), %phi1543(tm)
	load.32     %r10357 <- 8[%r10356(tm)]
	seteq.32    %r10359 <- %r10357, $6
	br          %r10359, .L2455, .L2456

.L2455:
	call        callTM, %arg1, %r10356(tm), %r10291(t), %arg3, %arg4
	br          .L2451

.L2456:
	load.64     %r10368 <- 0[%r10356(tm)]
	store.64    %r10368 -> 0[temp]
	store.32    %r10357 -> 8[temp]
	symaddr.64  %r10374 <- temp
	phisrc.64   %phi1536(t) <- %r10374
	add.32      %r10376 <- %r10289(loop), $1
	phisrc.32   %phi1539(loop) <- %r10376
	br          .L2435

.L2434:
	symaddr.64  %r10378 <- <anon symbol:0x62d0013e3f48>
	call        luaG_runerror, %arg1, %r10378
	br          .L2451

.L2451:
	ret


call_binTM:
.L2457:
	<entry-point>
	call.64     %r10382 <- luaT_gettmbyobj, %arg1, %arg2, %arg5
	load.32     %r10384 <- 8[%r10382]
	phisrc.64   %phi1550(tm) <- %r10382
	br          %r10384, .L2459, .L2458

.L2458:
	call.64     %r10390 <- luaT_gettmbyobj, %arg1, %arg3, %arg5
	phisrc.64   %phi1551(tm) <- %r10390
	br          .L2459

.L2459:
	phi.64      %r10391(tm) <- %phi1550(tm), %phi1551(tm)
	load.32     %r10392 <- 8[%r10391(tm)]
	setne.32    %r10395 <- %r10392, $0
	br          %r10392, .L2461, .L2462

.L2461:
	call        callTMres, %arg1, %arg4, %r10391(tm), %arg2, %arg3
	br          .L2462

.L2462:
	ret.32      %r10395


get_compTM:
.L2463:
	<entry-point>
	br          %arg2, .L2465, .L2470

.L2465:
	load.8      %r10404 <- 10[%arg2]
	cast.32     %r10405 <- (8) %r10404
	shl.32      %r10408 <- $1, %arg4
	and.32      %r10409 <- %r10405, %r10408
	br          %r10409, .L2470, .L2468

.L2468:
	load.64     %r10413 <- 32[%arg1]
	add.64      %r10414 <- %r10413, $296
	scast.64    %r10416 <- (32) %arg4
	muls.64     %r10417 <- %r10416, $8
	add.64      %r10418 <- %r10414, %r10417
	load.64     %r10419 <- 0[%r10418]
	call.64     %r10420 <- luaT_gettm, %arg2, %arg4, %r10419
	br          %r10420, .L2471, .L2470

.L2470:
	phisrc.64   %phi1556(return) <- $0
	br          .L2472

.L2471:
	seteq.32    %r10428 <- %arg2, %arg3
	br          %r10428, .L2473, .L2474

.L2473:
	phisrc.64   %phi1557(return) <- %r10420
	br          .L2472

.L2474:
	br          %arg3, .L2476, .L2481

.L2476:
	load.8      %r10433 <- 10[%arg3]
	cast.32     %r10434 <- (8) %r10433
	and.32      %r10438 <- %r10434, %r10408
	br          %r10438, .L2481, .L2479

.L2479:
	load.64     %r10442 <- 32[%arg1]
	add.64      %r10443 <- %r10442, $296
	add.64      %r10447 <- %r10443, %r10417
	load.64     %r10448 <- 0[%r10447]
	call.64     %r10449 <- luaT_gettm, %arg3, %arg4, %r10448
	br          %r10449, .L2482, .L2481

.L2481:
	phisrc.64   %phi1562(return) <- $0
	br          .L2472

.L2482:
	call.32     %r10456 <- luaO_rawequalObj, %r10420, %r10449
	br          %r10456, .L2483, .L2484

.L2483:
	phisrc.64   %phi1563(return) <- %r10420
	br          .L2472

.L2484:
	phisrc.64   %phi1564(return) <- $0
	br          .L2472

.L2472:
	phi.64      %r10425 <- %phi1556(return), %phi1557(return), %phi1562(return), %phi1563(return), %phi1564(return)
	ret.64      %r10425


call_orderTM:
.L2485:
	<entry-point>
	call.64     %r10461 <- luaT_gettmbyobj, %arg1, %arg2, %arg4
	load.32     %r10463 <- 8[%r10461]
	br          %r10463, .L2487, .L2486

.L2486:
	phisrc.32   %phi1565(return) <- $0xffffffff
	br          .L2488

.L2487:
	call.64     %r10470 <- luaT_gettmbyobj, %arg1, %arg3, %arg4
	call.32     %r10473 <- luaO_rawequalObj, %r10461, %r10470
	br          %r10473, .L2490, .L2489

.L2489:
	phisrc.32   %phi1566(return) <- $0xffffffff
	br          .L2488

.L2490:
	load.64     %r10476 <- 16[%arg1]
	call        callTMres, %arg1, %r10476, %r10461, %arg2, %arg3
	load.64     %r10481 <- 16[%arg1]
	load.32     %r10482 <- 8[%r10481]
	br          %r10482, .L2492, .L2491

.L2491:
	phisrc.32   %phi1567 <- $1
	br          .L2493

.L2492:
	load.32     %r10486 <- 8[%r10481]
	seteq.32    %r10487 <- %r10486, $1
	br          %r10487, .L2494, .L2495

.L2494:
	load.32     %r10490 <- 0[%r10481]
	seteq.32    %r10491 <- %r10490, $0
	phisrc.32   %phi1568 <- %r10491
	br          .L2496

.L2495:
	phisrc.32   %phi1569 <- $0
	br          .L2496

.L2496:
	phi.32      %r10492 <- %phi1568, %phi1569
	phisrc.32   %phi1570 <- %r10492
	br          .L2493

.L2493:
	phi.32      %r10493 <- %phi1567, %phi1570
	seteq.32    %r10494 <- %r10493, $0
	phisrc.32   %phi1571(return) <- %r10494
	br          .L2488

.L2488:
	phi.32      %r10466 <- %phi1565(return), %phi1566(return), %phi1571(return)
	ret.32      %r10466


l_strcmp:
.L2497:
	<entry-point>
	add.64      %r10496 <- %arg1, $24
	ptrcast.64  %r10497(l) <- (64) %r10496
	load.64     %r10499 <- 16[%arg1]
	add.64      %r10502 <- %arg2, $24
	ptrcast.64  %r10503(r) <- (64) %r10502
	load.64     %r10505 <- 16[%arg2]
	phisrc.64   %phi1579(l) <- %r10497(l)
	phisrc.64   %phi1584(ll) <- %r10499
	phisrc.64   %phi1587(r) <- %r10503(r)
	phisrc.64   %phi1590(lr) <- %r10505
	br          .L2498

.L2498:
	phi.64      %r10507(l) <- %phi1579(l), %phi1580(l)
	phi.64      %r10508(r) <- %phi1587(r), %phi1588(r)
	call.32     %r10509 <- strcoll, %r10507(l), %r10508(r)
	br          %r10509, .L2502, .L2503

.L2502:
	phisrc.32   %phi1574(return) <- %r10509
	br          .L2504

.L2503:
	call.64     %r10515 <- strlen, %r10507(l)
	phi.64      %r10517(lr) <- %phi1590(lr), %phi1591(lr)
	seteq.32    %r10518 <- %r10515, %r10517(lr)
	phi.64      %r10520 <- %phi1584(ll), %phi1585(ll)
	br          %r10518, .L2506, .L2507

.L2506:
	setne.32    %r10522 <- %r10515, %r10520
	phisrc.32   %phi1575(return) <- %r10522
	br          .L2504

.L2507:
	seteq.32    %r10525 <- %r10515, %r10520
	br          %r10525, .L2509, .L2508

.L2509:
	phisrc.32   %phi1576(return) <- $0xffffffff
	br          .L2504

.L2508:
	add.64      %r10527 <- %r10515, $1
	cast.64     %r10530 <- (64) %r10507(l)
	add.64      %r10531 <- %r10530, %r10527
	ptrcast.64  %r10532 <- (64) %r10531
	sub.64      %r10536 <- %r10520, %r10527
	cast.64     %r10540 <- (64) %r10508(r)
	add.64      %r10541 <- %r10540, %r10527
	ptrcast.64  %r10542 <- (64) %r10541
	sub.64      %r10546 <- %r10517(lr), %r10527
	phisrc.64   %phi1580(l) <- %r10532
	phisrc.64   %phi1585(ll) <- %r10536
	phisrc.64   %phi1588(r) <- %r10542
	phisrc.64   %phi1591(lr) <- %r10546
	br          .L2498

.L2504:
	phi.32      %r10513 <- %phi1574(return), %phi1575(return), %phi1576(return)
	ret.32      %r10513


luaV_lessthan:
.L2511:
	<entry-point>
	load.32     %r10549 <- 8[%arg2]
	load.32     %r10552 <- 8[%arg3]
	setne.32    %r10554 <- %r10549, %r10552
	br          %r10554, .L2512, .L2513

.L2512:
	call.32     %r10558 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1595(return) <- %r10558
	br          .L2514

.L2513:
	seteq.32    %r10563 <- %r10549, $3
	br          %r10563, .L2516, .L2517

.L2516:
	load.64     %r10565 <- 0[%arg2]
	load.64     %r10568 <- 0[%arg3]
	setlt.32    %r10570 <- %r10565, %r10568
	phisrc.32   %phi1596(return) <- %r10570
	br          .L2514

.L2517:
	seteq.32    %r10574 <- %r10549, $4
	br          %r10574, .L2519, .L2520

.L2519:
	load.64     %r10576 <- 0[%arg2]
	load.64     %r10579 <- 0[%arg3]
	call.32     %r10581 <- l_strcmp, %r10576, %r10579
	setlt.32    %r10582 <- %r10581, $0
	phisrc.32   %phi1597(return) <- %r10582
	br          .L2514

.L2520:
	call.32     %r10586 <- call_orderTM, %arg1, %arg2, %arg3, $13
	setne.32    %r10587 <- %r10586, $0xffffffff
	br          %r10587, .L2522, .L2515

.L2522:
	phisrc.32   %phi1598(return) <- %r10586
	br          .L2514

.L2515:
	call.32     %r10592 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1599(return) <- %r10592
	br          .L2514

.L2514:
	phi.32      %r10559 <- %phi1595(return), %phi1596(return), %phi1597(return), %phi1598(return), %phi1599(return)
	ret.32      %r10559


lessequal:
.L2524:
	<entry-point>
	load.32     %r10594 <- 8[%arg2]
	load.32     %r10597 <- 8[%arg3]
	setne.32    %r10599 <- %r10594, %r10597
	br          %r10599, .L2525, .L2526

.L2525:
	call.32     %r10603 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1602(return) <- %r10603
	br          .L2527

.L2526:
	seteq.32    %r10608 <- %r10594, $3
	br          %r10608, .L2529, .L2530

.L2529:
	load.64     %r10610 <- 0[%arg2]
	load.64     %r10613 <- 0[%arg3]
	setle.32    %r10615 <- %r10610, %r10613
	phisrc.32   %phi1603(return) <- %r10615
	br          .L2527

.L2530:
	seteq.32    %r10619 <- %r10594, $4
	br          %r10619, .L2532, .L2533

.L2532:
	load.64     %r10621 <- 0[%arg2]
	load.64     %r10624 <- 0[%arg3]
	call.32     %r10626 <- l_strcmp, %r10621, %r10624
	setle.32    %r10627 <- %r10626, $0
	phisrc.32   %phi1604(return) <- %r10627
	br          .L2527

.L2533:
	call.32     %r10631(res) <- call_orderTM, %arg1, %arg2, %arg3, $14
	setne.32    %r10632 <- %r10631(res), $0xffffffff
	br          %r10632, .L2535, .L2536

.L2535:
	phisrc.32   %phi1605(return) <- %r10631(res)
	br          .L2527

.L2536:
	call.32     %r10637(res) <- call_orderTM, %arg1, %arg3, %arg2, $13
	setne.32    %r10638 <- %r10637(res), $0xffffffff
	br          %r10638, .L2538, .L2528

.L2538:
	seteq.32    %r10640 <- %r10637(res), $0
	phisrc.32   %phi1606(return) <- %r10640
	br          .L2527

.L2528:
	call.32     %r10644 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1607(return) <- %r10644
	br          .L2527

.L2527:
	phi.32      %r10604 <- %phi1602(return), %phi1603(return), %phi1604(return), %phi1605(return), %phi1606(return), %phi1607(return)
	ret.32      %r10604


luaV_equalval:
.L2540:
	<entry-point>
	load.32     %r10646 <- 8[%arg2]
	switch      %r10646, 0 -> .L2542, 1 -> .L2544, 2 -> .L2545, 3 -> .L2543, 5 -> .L2547, 7 -> .L2546, default -> .L2548

.L2542:
	phisrc.32   %phi1612(return) <- $1
	br          .L2549

.L2543:
	load.64     %r10649 <- 0[%arg2]
	load.64     %r10652 <- 0[%arg3]
	seteq.32    %r10654 <- %r10649, %r10652
	phisrc.32   %phi1613(return) <- %r10654
	br          .L2549

.L2544:
	load.32     %r10656 <- 0[%arg2]
	load.32     %r10659 <- 0[%arg3]
	seteq.32    %r10661 <- %r10656, %r10659
	phisrc.32   %phi1614(return) <- %r10661
	br          .L2549

.L2545:
	load.64     %r10663 <- 0[%arg2]
	load.64     %r10665 <- 0[%arg3]
	seteq.32    %r10666 <- %r10663, %r10665
	phisrc.32   %phi1615(return) <- %r10666
	br          .L2549

.L2546:
	load.64     %r10668 <- 0[%arg2]
	load.64     %r10672 <- 0[%arg3]
	seteq.32    %r10675 <- %r10668, %r10672
	br          %r10675, .L2550, .L2551

.L2550:
	phisrc.32   %phi1616(return) <- $1
	br          .L2549

.L2551:
	load.64     %r10679 <- 16[%r10668]
	load.64     %r10682 <- 16[%r10672]
	call.64     %r10683(tm) <- get_compTM, %arg1, %r10679, %r10682, $4
	phisrc.64   %phi1626(tm) <- %r10683(tm)
	br          .L2541

.L2547:
	load.64     %r10685 <- 0[%arg2]
	load.64     %r10688 <- 0[%arg3]
	seteq.32    %r10690 <- %r10685, %r10688
	br          %r10690, .L2552, .L2553

.L2552:
	phisrc.32   %phi1617(return) <- $1
	br          .L2549

.L2553:
	load.64     %r10694 <- 16[%r10685]
	load.64     %r10697 <- 16[%r10688]
	call.64     %r10698 <- get_compTM, %arg1, %r10694, %r10697, $4
	phisrc.64   %phi1627(tm) <- %r10698
	br          .L2541

.L2548:
	load.64     %r10700 <- 0[%arg2]
	load.64     %r10702 <- 0[%arg3]
	seteq.32    %r10703 <- %r10700, %r10702
	phisrc.32   %phi1618(return) <- %r10703
	br          .L2549

.L2541:
	phi.64      %r10704(tm) <- %phi1626(tm), %phi1627(tm)
	br          %r10704(tm), .L2555, .L2554

.L2554:
	phisrc.32   %phi1619(return) <- $0
	br          .L2549

.L2555:
	load.64     %r10708 <- 16[%arg1]
	call        callTMres, %arg1, %r10708, %r10704(tm), %arg2, %arg3
	load.64     %r10713 <- 16[%arg1]
	load.32     %r10714 <- 8[%r10713]
	br          %r10714, .L2557, .L2556

.L2556:
	phisrc.32   %phi1620 <- $1
	br          .L2558

.L2557:
	load.32     %r10718 <- 8[%r10713]
	seteq.32    %r10719 <- %r10718, $1
	br          %r10719, .L2559, .L2560

.L2559:
	load.32     %r10722 <- 0[%r10713]
	seteq.32    %r10723 <- %r10722, $0
	phisrc.32   %phi1621 <- %r10723
	br          .L2561

.L2560:
	phisrc.32   %phi1622 <- $0
	br          .L2561

.L2561:
	phi.32      %r10724 <- %phi1621, %phi1622
	phisrc.32   %phi1623 <- %r10724
	br          .L2558

.L2558:
	phi.32      %r10725 <- %phi1620, %phi1623
	seteq.32    %r10726 <- %r10725, $0
	phisrc.32   %phi1624(return) <- %r10726
	br          .L2549

.L2549:
	phi.32      %r10647 <- %phi1612(return), %phi1613(return), %phi1614(return), %phi1615(return), %phi1616(return), %phi1617(return), %phi1618(return), %phi1619(return), %phi1624(return)
	ret.32      %r10647


luaV_concat:
.L2562:
	<entry-point>
	phisrc.32   %phi1637(total) <- %arg2
	phisrc.32   %phi1640(total) <- %arg2
	phisrc.32   %phi1643(last) <- %arg3
	br          .L2563

.L2563:
	load.64     %r10728 <- 24[%arg1]
	phi.32      %r10729(last) <- %phi1643(last), %phi1644(last)
	scast.64    %r10730 <- (32) %r10729(last)
	muls.64     %r10731 <- %r10730, $16
	add.64      %r10732 <- %r10728, %r10731
	add.64      %r10733 <- %r10732, $16
	load.32     %r10736 <- -8[%r10732]
	seteq.32    %r10737 <- %r10736, $4
	phisrc.32   %phi1645(n) <- $2
	phisrc.32   %phi1671 <- %r10736
	phisrc.32   %phi1675 <- %r10736
	phisrc.32   %phi1676 <- %r10736
	br          %r10737, .L2568, .L2569

.L2569:
	seteq.32    %r10741 <- %r10736, $3
	phisrc.32   %phi1672 <- %r10736
	br          %r10741, .L2568, .L2566

.L2568:
	load.32     %r10744 <- 8[%r10732]
	seteq.32    %r10745 <- %r10744, $4
	br          %r10745, .L2567, .L2570

.L2570:
	add.64      %r10748 <- %r10733, $-16
	call.32     %r10749 <- luaV_tostring, %arg1, %r10748
	br          %r10749, .L2567, .L2566

.L2566:
	add.64      %r10752 <- %r10733, $-32
	add.64      %r10754 <- %r10733, $-16
	call.32     %r10757 <- call_binTM, %arg1, %r10752, %r10754, %r10752, $15
	br          %r10757, .L2573, .L2571

.L2571:
	add.64      %r10762 <- %r10733, $-16
	call        luaG_concaterror, %arg1, %r10752, %r10762
	br          .L2573

.L2567:
	load.64     %r10765 <- 0[%r10732]
	load.64     %r10766 <- 16[%r10765]
	br          %r10766, .L2575, .L2574

.L2574:
	load.32     %r10770 <- -8[%r10732]
	seteq.32    %r10771 <- %r10770, $4
	br          %r10771, .L2573, .L2577

.L2577:
	add.64      %r10774 <- %r10733, $-32
	call.32     %r10775 <- luaV_tostring, %arg1, %r10774
	br          .L2573

.L2575:
	phisrc.32   %phi1655(n) <- $1
	phisrc.64   %phi1661(tl) <- %r10766
	phisrc.64   %phi1664(tl) <- %r10766
	br          .L2583

.L2583:
	phi.32      %r10781(n) <- %phi1655(n), %phi1656(n)
	phi.32      %r10782 <- %phi1640(total), %phi1641(total)
	setlt.32    %r10783 <- %r10781(n), %r10782
	phisrc.32   %phi1639(total) <- %r10782
	br          %r10783, .L2584, .L2582

.L2584:
	scast.64    %r10786 <- (32) %r10781(n)
	muls.64     %r10787 <- %r10786, $16
	sub.64      %r10788 <- %r10733, %r10787
	load.32     %r10790 <- -8[%r10788]
	seteq.32    %r10791 <- %r10790, $4
	br          %r10791, .L2580, .L2585

.L2585:
	add.64      %r10798 <- %r10788, $-16
	call.32     %r10799 <- luaV_tostring, %arg1, %r10798
	br          %r10799, .L2580, .L2582

.L2580:
	load.64     %r10806 <- -16[%r10788]
	load.64     %r10807 <- 16[%r10806]
	phi.64      %r10809(tl) <- %phi1664(tl), %phi1665(tl)
	sub.64      %r10810 <- $-3, %r10809(tl)
	setae.32    %r10811 <- %r10807, %r10810
	br          %r10811, .L2586, .L2587

.L2586:
	symaddr.64  %r10813 <- <anon symbol:0x62d001135860>
	call        luaG_runerror, %arg1, %r10813
	br          .L2587

.L2587:
	add.64      %r10817 <- %r10809(tl), %r10807
	phisrc.64   %phi1662(tl) <- %r10817
	phisrc.64   %phi1665(tl) <- %r10817
	add.32      %r10820 <- %r10781(n), $1
	phisrc.32   %phi1656(n) <- %r10820
	br          .L2583

.L2582:
	load.64     %r10823 <- 32[%arg1]
	add.64      %r10824 <- %r10823, $88
	phi.64      %r10825 <- %phi1661(tl), %phi1662(tl)
	call.64     %r10826 <- luaZ_openspace, %arg1, %r10824, %r10825
	phisrc.64   %phi1659(tl) <- $0
	phisrc.32   %phi1668(i) <- %r10781(n)
	br          .L2591

.L2591:
	phi.32      %r10828(i) <- %phi1668(i), %phi1669(i)
	setgt.32    %r10829 <- %r10828(i), $0
	phi.64      %r10838 <- %phi1659(tl), %phi1660(tl)
	br          %r10829, .L2588, .L2590

.L2588:
	scast.64    %r10832 <- (32) %r10828(i)
	muls.64     %r10833 <- %r10832, $16
	sub.64      %r10834 <- %r10733, %r10833
	load.64     %r10835 <- 0[%r10834]
	load.64     %r10836 <- 16[%r10835]
	add.64      %r10839 <- %r10826, %r10838
	cast.64     %r10840 <- (64) %r10839
	add.64      %r10848 <- %r10835, $24
	ptrcast.64  %r10849 <- (64) %r10848
	cast.64     %r10850 <- (64) %r10849
	call.64     %r10852 <- memcpy, %r10840, %r10850, %r10836
	add.64      %r10856 <- %r10838, %r10836
	phisrc.64   %phi1660(tl) <- %r10856
	add.32      %r10859 <- %r10828(i), $-1
	phisrc.32   %phi1669(i) <- %r10859
	br          .L2591

.L2590:
	scast.64    %r10862 <- (32) %r10781(n)
	muls.64     %r10863 <- %r10862, $16
	sub.64      %r10864 <- %r10733, %r10863
	call.64     %r10868 <- luaS_newlstr, %arg1, %r10826, %r10838
	ptrcast.64  %r10869 <- (64) %r10868
	store.64    %r10869 -> 0[%r10864]
	store.32    $4 -> 8[%r10864]
	phisrc.32   %phi1646(n) <- %r10781(n)
	br          .L2573

.L2573:
	phi.32      %r10872 <- %phi1645(n), %phi1646(n)
	add.32      %r10873 <- %r10872, $-1
	phi.32      %r10874 <- %phi1637(total), %phi1638(total), %phi1639(total)
	sub.32      %r10876 <- %r10874, %r10873
	sub.32      %r10882 <- %r10729(last), %r10873
	phisrc.32   %phi1638(total) <- %r10876
	phisrc.32   %phi1641(total) <- %r10876
	phisrc.32   %phi1644(last) <- %r10882
	setgt.32    %r10885 <- %r10876, $1
	br          %r10885, .L2563, .L2565

.L2565:
	ret


Arith:
.L2592:
	<entry-point>
	symaddr.64  %r10887 <- tempb
	call.64     %r10888 <- luaV_tonumber, %arg3, %r10887
	br          %r10888, .L2595, .L2594

.L2595:
	symaddr.64  %r10891 <- tempc
	call.64     %r10892 <- luaV_tonumber, %arg4, %r10891
	br          %r10892, .L2593, .L2594

.L2593:
	load.64     %r10895 <- 0[%r10888]
	load.64     %r10898 <- 0[%r10892]
	divu.64     %r10922 <- %r10895, %r10898
	switch      %arg5, 5 -> .L2597, 6 -> .L2598, 7 -> .L2599, 8 -> .L2600, 9 -> .L2601, 10 -> .L2602, 11 -> .L2603, default -> .L2605

.L2597:
	add.64      %r10904 <- %r10895, %r10898
	store.64    %r10904 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2598:
	sub.64      %r10910 <- %r10895, %r10898
	store.64    %r10910 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2599:
	mulu.64     %r10916 <- %r10895, %r10898
	store.64    %r10916 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2600:
	store.64    %r10922 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2601:
	call.64     %r10930 <- floor, %r10922
	mulu.64     %r10932 <- %r10930, %r10898
	sub.64      %r10933 <- %r10895, %r10932
	store.64    %r10933 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2602:
	call.64     %r10939 <- pow, %r10895, %r10898
	store.64    %r10939 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2603:
	neg.64      %r10944 <- %r10895
	store.64    %r10944 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2594:
	call.32     %r10952 <- call_binTM, %arg1, %arg3, %arg4, %arg2, %arg5
	br          %r10952, .L2605, .L2606

.L2606:
	call        luaG_aritherror, %arg1, %arg3, %arg4
	br          .L2605

.L2605:
	ret


luaV_execute:
.L2608:
	<entry-point>
	phisrc.32   %phi1735(nexeccalls) <- %arg2
	phisrc.32   %phi1738(nexeccalls) <- %arg2
	br          .L2609

.L2609:
	load.64     %r10957(pc) <- 48[%arg1]
	load.64     %r10959 <- 40[%arg1]
	load.64     %r10960 <- 8[%r10959]
	load.64     %r10961 <- 0[%r10960]
	load.64     %r10965(base) <- 24[%arg1]
	load.64     %r10967 <- 32[%r10961]
	load.64     %r10968 <- 16[%r10967]
	phisrc.64   %phi1796(pc) <- %r10957(pc)
	phisrc.64   %phi1854(base) <- %r10965(base)
	phisrc.64   %phi1998 <- %r10967
	phisrc.64   %phi1999 <- %r10959
	phisrc.64   %phi2002 <- %r10967
	phisrc.64   %phi2003 <- %r10959
	phisrc.64   %phi2009 <- %r10967
	phisrc.64   %phi2010 <- %r10959
	phisrc.64   %phi2011 <- %r10967
	phisrc.64   %phi2012 <- %r10959
	phisrc.64   %phi2016 <- %r10967
	phisrc.64   %phi2017 <- %r10959
	phisrc.64   %phi2018 <- %r10967
	phisrc.64   %phi2019 <- %r10959
	br          .L2610

.L2610:
	phi.64      %r10969 <- %phi1796(pc), %phi1797(pc), %phi1798(pc), %phi1799(pc), %phi1800(pc), %phi1801(pc), %phi1802(pc), %phi1803(pc), %phi1804(pc), %phi1805(pc), %phi1806(pc), %phi1807(pc), %phi1808(pc), %phi1809(pc)
	add.64      %r10970(pc) <- %r10969, $4
	load.32     %r10971 <- 0[%r10969]
	phi.64      %r10972(base) <- %phi1854(base), %phi1855(base), %phi1856(base), %phi1857(base), %phi1858(base), %phi1859(base), %phi1860(base), %phi1861(base), %phi1862(base), %phi1863(base), %phi1864(base), %phi1865(base), %phi1866(base), %phi1867(base), %phi1868(base), %phi1869(base), %phi1870(base), %phi1871(base), %phi1872(base), %phi1873(base), %phi1874(base), %phi1875(base), %phi1876(base), %phi1877(base)
	lsr.32      %r10975 <- %r10971, $6
	and.32      %r10976 <- %r10975, $255
	scast.64    %r10978 <- (32) %r10976
	muls.64     %r10979 <- %r10978, $16
	add.64      %r10980(ra) <- %r10972(base), %r10979
	and.32      %r10984 <- %r10971, $63
	phisrc.64   %phi1748(pc) <- %r10970(pc)
	phisrc.64   %phi1761(pc) <- %r10970(pc)
	phisrc.64   %phi1764(pc) <- %r10970(pc)
	phisrc.64   %phi1797(pc) <- %r10970(pc)
	phisrc.64   %phi1878(ra) <- %r10980(ra)
	phisrc.64   %phi1881(ra) <- %r10980(ra)
	lsr.32      %r11006 <- %r10971, $14
	and.32      %r11074 <- %r11006, $0x3ffff
	add.64      %r11055 <- %r10961, $40
	lsr.32      %r10989 <- %r10971, $23
	and.32      %r11110 <- %r11006, $256
	and.32      %r11206 <- %r10989, $256
	and.32      %r11031 <- %r11006, $511
	and.32      %r10990 <- %r10989, $511
	switch      %r10984, 0 -> .L2615, 1 -> .L2616, 2 -> .L2617, 3 -> .L2618, 4 -> .L2619, 5 -> .L2620, 6 -> .L2621, 7 -> .L2622, 8 -> .L2623, 9 -> .L2624, 10 -> .L2625, 11 -> .L2626, 12 -> .L2627, 13 -> .L2628, 14 -> .L2629, 15 -> .L2630, 16 -> .L2631, 17 -> .L2632, 18 -> .L2633, 19 -> .L2634, 20 -> .L2635, 21 -> .L2636, 22 -> .L2637, 23 -> .L2638, 24 -> .L2639, 25 -> .L2640, 26 -> .L2641, 27 -> .L2642, 28 -> .L2643, 29 -> .L2644, 30 -> .L2645, 31 -> .L2646, 32 -> .L2647, 33 -> .L2648, 34 -> .L2649, 35 -> .L2650, 36 -> .L2651, 37 -> .L2652, default -> .L2610

.L2615:
	scast.64    %r10992 <- (32) %r10990
	muls.64     %r10993 <- %r10992, $16
	add.64      %r10994 <- %r10972(base), %r10993
	load.64     %r10997 <- 0[%r10994]
	store.64    %r10997 -> 0[%r10980(ra)]
	load.32     %r11000 <- 8[%r10994]
	store.32    %r11000 -> 8[%r10980(ra)]
	br          .L2610

.L2616:
	scast.64    %r11009 <- (32) %r11074
	muls.64     %r11010 <- %r11009, $16
	add.64      %r11011 <- %r10968, %r11010
	load.64     %r11014 <- 0[%r11011]
	store.64    %r11014 -> 0[%r10980(ra)]
	load.32     %r11017 <- 8[%r11011]
	store.32    %r11017 -> 8[%r10980(ra)]
	br          .L2610

.L2617:
	store.32    %r10990 -> 0[%r10980(ra)]
	store.32    $1 -> 8[%r10980(ra)]
	br          %r11031, .L2653, .L2610

.L2653:
	add.64      %r11034 <- %r10970(pc), $4
	phisrc.64   %phi1798(pc) <- %r11034
	br          .L2610

.L2618:
	scast.64    %r11041 <- (32) %r10990
	muls.64     %r11042 <- %r11041, $16
	add.64      %r11043(rb) <- %r10972(base), %r11042
	phisrc.64   %phi1951(rb) <- %r11043(rb)
	br          .L2655

.L2655:
	phi.64      %r11044 <- %phi1951(rb), %phi1952(rb)
	add.64      %r11045(rb) <- %r11044, $-16
	store.32    $0 -> 8[%r11044]
	phisrc.64   %phi1952(rb) <- %r11045(rb)
	setae.32    %r11048 <- %r11045(rb), %r10980(ra)
	br          %r11048, .L2655, .L2610

.L2619:
	scast.64    %r11057 <- (32) %r10990
	muls.64     %r11058 <- %r11057, $8
	add.64      %r11059 <- %r11055, %r11058
	load.64     %r11060 <- 0[%r11059]
	load.64     %r11061 <- 16[%r11060]
	load.64     %r11064 <- 0[%r11061]
	store.64    %r11064 -> 0[%r10980(ra)]
	load.32     %r11067 <- 8[%r11061]
	store.32    %r11067 -> 8[%r10980(ra)]
	br          .L2610

.L2620:
	scast.64    %r11076 <- (32) %r11074
	muls.64     %r11077 <- %r11076, $16
	add.64      %r11078 <- %r10968, %r11077
	load.64     %r11081 <- 24[%r10961]
	ptrcast.64  %r11082 <- (64) %r11081
	store.64    %r11082 -> 0[g]
	store.32    $5 -> 8[g]
	store.64    %r10970(pc) -> 48[%arg1]
	symaddr.64  %r11088 <- g
	call        luaV_gettable, %arg1, %r11088, %r11078, %r10980(ra)
	load.64     %r11092 <- 24[%arg1]
	phisrc.64   %phi1855(base) <- %r11092
	br          .L2610

.L2621:
	store.64    %r10970(pc) -> 48[%arg1]
	scast.64    %r11102 <- (32) %r10990
	muls.64     %r11103 <- %r11102, $16
	add.64      %r11104 <- %r10972(base), %r11103
	br          %r11110, .L2658, .L2659

.L2658:
	and.32      %r11118 <- %r11006, $255
	scast.64    %r11119 <- (32) %r11118
	muls.64     %r11120 <- %r11119, $16
	add.64      %r11121 <- %r10968, %r11120
	phisrc.64   %phi1677 <- %r11121
	br          .L2660

.L2659:
	scast.64    %r11128 <- (32) %r11031
	muls.64     %r11129 <- %r11128, $16
	add.64      %r11130 <- %r10972(base), %r11129
	ptrcast.64  %r11131 <- (64) %r11130
	phisrc.64   %phi1678 <- %r11131
	br          .L2660

.L2660:
	phi.64      %r11132 <- %phi1677, %phi1678
	call        luaV_gettable, %arg1, %r11104, %r11132, %r10980(ra)
	load.64     %r11135 <- 24[%arg1]
	phisrc.64   %phi1856(base) <- %r11135
	br          .L2610

.L2622:
	load.64     %r11138 <- 24[%r10961]
	ptrcast.64  %r11139 <- (64) %r11138
	store.64    %r11139 -> 0[g]
	store.32    $5 -> 8[g]
	store.64    %r10970(pc) -> 48[%arg1]
	symaddr.64  %r11145 <- g
	scast.64    %r11152 <- (32) %r11074
	muls.64     %r11153 <- %r11152, $16
	add.64      %r11154 <- %r10968, %r11153
	call        luaV_settable, %arg1, %r11145, %r11154, %r10980(ra)
	load.64     %r11157 <- 24[%arg1]
	phisrc.64   %phi1857(base) <- %r11157
	br          .L2610

.L2623:
	scast.64    %r11165 <- (32) %r10990
	muls.64     %r11166 <- %r11165, $8
	add.64      %r11167 <- %r11055, %r11166
	load.64     %r11168 <- 0[%r11167]
	load.64     %r11171 <- 16[%r11168]
	load.64     %r11173 <- 0[%r10980(ra)]
	store.64    %r11173 -> 0[%r11171]
	load.32     %r11176 <- 8[%r10980(ra)]
	store.32    %r11176 -> 8[%r11171]
	load.32     %r11180 <- 8[%r10980(ra)]
	setge.32    %r11181 <- %r11180, $4
	br          %r11181, .L2664, .L2610

.L2664:
	load.64     %r11183 <- 0[%r10980(ra)]
	load.8      %r11184 <- 9[%r11183]
	cast.32     %r11185 <- (8) %r11184
	and.32      %r11186 <- %r11185, $3
	br          %r11186, .L2663, .L2610

.L2663:
	ptrcast.64  %r11188 <- (64) %r11168
	load.8      %r11189 <- 9[%r11188]
	cast.32     %r11190 <- (8) %r11189
	and.32      %r11191 <- %r11190, $4
	br          %r11191, .L2661, .L2610

.L2661:
	call        luaC_barrierf, %arg1, %r11188, %r11183
	br          .L2610

.L2624:
	store.64    %r10970(pc) -> 48[%arg1]
	br          %r11206, .L2665, .L2666

.L2665:
	and.32      %r11214 <- %r10989, $255
	scast.64    %r11215 <- (32) %r11214
	muls.64     %r11216 <- %r11215, $16
	add.64      %r11217 <- %r10968, %r11216
	phisrc.64   %phi1679 <- %r11217
	br          .L2667

.L2666:
	scast.64    %r11224 <- (32) %r10990
	muls.64     %r11225 <- %r11224, $16
	add.64      %r11226 <- %r10972(base), %r11225
	ptrcast.64  %r11227 <- (64) %r11226
	phisrc.64   %phi1680 <- %r11227
	br          .L2667

.L2667:
	phi.64      %r11228 <- %phi1679, %phi1680
	br          %r11110, .L2668, .L2669

.L2668:
	and.32      %r11242 <- %r11006, $255
	scast.64    %r11243 <- (32) %r11242
	muls.64     %r11244 <- %r11243, $16
	add.64      %r11245 <- %r10968, %r11244
	phisrc.64   %phi1681 <- %r11245
	br          .L2670

.L2669:
	scast.64    %r11252 <- (32) %r11031
	muls.64     %r11253 <- %r11252, $16
	add.64      %r11254 <- %r10972(base), %r11253
	ptrcast.64  %r11255 <- (64) %r11254
	phisrc.64   %phi1682 <- %r11255
	br          .L2670

.L2670:
	phi.64      %r11256 <- %phi1681, %phi1682
	call        luaV_settable, %arg1, %r10980(ra), %r11228, %r11256
	load.64     %r11258 <- 24[%arg1]
	phisrc.64   %phi1858(base) <- %r11258
	br          .L2610

.L2625:
	call.32     %r11272 <- luaO_fb2int, %r10990
	call.32     %r11274 <- luaO_fb2int, %r11031
	call.64     %r11275 <- luaH_new, %arg1, %r11272, %r11274
	ptrcast.64  %r11276 <- (64) %r11275
	store.64    %r11276 -> 0[%r10980(ra)]
	store.32    $5 -> 8[%r10980(ra)]
	store.64    %r10970(pc) -> 48[%arg1]
	load.64     %r11282 <- 32[%arg1]
	load.64     %r11283 <- 120[%r11282]
	load.64     %r11286 <- 112[%r11282]
	setae.32    %r11287 <- %r11283, %r11286
	br          %r11287, .L2671, .L2672

.L2671:
	call        luaC_step, %arg1
	br          .L2672

.L2672:
	load.64     %r11290 <- 24[%arg1]
	phisrc.64   %phi1859(base) <- %r11290
	br          .L2610

.L2626:
	scast.64    %r11297 <- (32) %r10990
	muls.64     %r11298 <- %r11297, $16
	add.64      %r11299 <- %r10972(base), %r11298
	load.64     %r11304 <- 0[%r11299]
	store.64    %r11304 -> 16[%r10980(ra)]
	load.32     %r11307 <- 8[%r11299]
	store.32    %r11307 -> 24[%r10980(ra)]
	store.64    %r10970(pc) -> 48[%arg1]
	br          %r11110, .L2673, .L2674

.L2673:
	and.32      %r11327 <- %r11006, $255
	scast.64    %r11328 <- (32) %r11327
	muls.64     %r11329 <- %r11328, $16
	add.64      %r11330 <- %r10968, %r11329
	phisrc.64   %phi1683 <- %r11330
	br          .L2675

.L2674:
	scast.64    %r11337 <- (32) %r11031
	muls.64     %r11338 <- %r11337, $16
	add.64      %r11339 <- %r10972(base), %r11338
	ptrcast.64  %r11340 <- (64) %r11339
	phisrc.64   %phi1684 <- %r11340
	br          .L2675

.L2675:
	phi.64      %r11341 <- %phi1683, %phi1684
	call        luaV_gettable, %arg1, %r11299, %r11341, %r10980(ra)
	load.64     %r11344 <- 24[%arg1]
	phisrc.64   %phi1860(base) <- %r11344
	br          .L2610

.L2627:
	br          %r11206, .L2676, .L2677

.L2676:
	and.32      %r11358 <- %r10989, $255
	scast.64    %r11359 <- (32) %r11358
	muls.64     %r11360 <- %r11359, $16
	add.64      %r11361 <- %r10968, %r11360
	phisrc.64   %phi1685 <- %r11361
	br          .L2678

.L2677:
	scast.64    %r11368 <- (32) %r10990
	muls.64     %r11369 <- %r11368, $16
	add.64      %r11370 <- %r10972(base), %r11369
	ptrcast.64  %r11371 <- (64) %r11370
	phisrc.64   %phi1686 <- %r11371
	br          .L2678

.L2678:
	phi.64      %r11372 <- %phi1685, %phi1686
	br          %r11110, .L2679, .L2680

.L2679:
	and.32      %r11386 <- %r11006, $255
	scast.64    %r11387 <- (32) %r11386
	muls.64     %r11388 <- %r11387, $16
	add.64      %r11389 <- %r10968, %r11388
	phisrc.64   %phi1687 <- %r11389
	br          .L2681

.L2680:
	scast.64    %r11396 <- (32) %r11031
	muls.64     %r11397 <- %r11396, $16
	add.64      %r11398 <- %r10972(base), %r11397
	ptrcast.64  %r11399 <- (64) %r11398
	phisrc.64   %phi1688 <- %r11399
	br          .L2681

.L2681:
	phi.64      %r11400 <- %phi1687, %phi1688
	load.32     %r11402 <- 8[%r11372]
	seteq.32    %r11403 <- %r11402, $3
	br          %r11403, .L2684, .L2683

.L2684:
	load.32     %r11405 <- 8[%r11400]
	seteq.32    %r11406 <- %r11405, $3
	br          %r11406, .L2682, .L2683

.L2682:
	load.64     %r11408 <- 0[%r11372]
	load.64     %r11410 <- 0[%r11400]
	add.64      %r11414 <- %r11408, %r11410
	store.64    %r11414 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2683:
	store.64    %r10970(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10980(ra), %r11372, %r11400, $5
	load.64     %r11424 <- 24[%arg1]
	phisrc.64   %phi1861(base) <- %r11424
	br          .L2610

.L2628:
	br          %r11206, .L2686, .L2687

.L2686:
	and.32      %r11438 <- %r10989, $255
	scast.64    %r11439 <- (32) %r11438
	muls.64     %r11440 <- %r11439, $16
	add.64      %r11441 <- %r10968, %r11440
	phisrc.64   %phi1689 <- %r11441
	br          .L2688

.L2687:
	scast.64    %r11448 <- (32) %r10990
	muls.64     %r11449 <- %r11448, $16
	add.64      %r11450 <- %r10972(base), %r11449
	ptrcast.64  %r11451 <- (64) %r11450
	phisrc.64   %phi1690 <- %r11451
	br          .L2688

.L2688:
	phi.64      %r11452 <- %phi1689, %phi1690
	br          %r11110, .L2689, .L2690

.L2689:
	and.32      %r11466 <- %r11006, $255
	scast.64    %r11467 <- (32) %r11466
	muls.64     %r11468 <- %r11467, $16
	add.64      %r11469 <- %r10968, %r11468
	phisrc.64   %phi1691 <- %r11469
	br          .L2691

.L2690:
	scast.64    %r11476 <- (32) %r11031
	muls.64     %r11477 <- %r11476, $16
	add.64      %r11478 <- %r10972(base), %r11477
	ptrcast.64  %r11479 <- (64) %r11478
	phisrc.64   %phi1692 <- %r11479
	br          .L2691

.L2691:
	phi.64      %r11480 <- %phi1691, %phi1692
	load.32     %r11482 <- 8[%r11452]
	seteq.32    %r11483 <- %r11482, $3
	br          %r11483, .L2694, .L2693

.L2694:
	load.32     %r11485 <- 8[%r11480]
	seteq.32    %r11486 <- %r11485, $3
	br          %r11486, .L2692, .L2693

.L2692:
	load.64     %r11488 <- 0[%r11452]
	load.64     %r11490 <- 0[%r11480]
	sub.64      %r11494 <- %r11488, %r11490
	store.64    %r11494 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2693:
	store.64    %r10970(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10980(ra), %r11452, %r11480, $6
	load.64     %r11504 <- 24[%arg1]
	phisrc.64   %phi1862(base) <- %r11504
	br          .L2610

.L2629:
	br          %r11206, .L2696, .L2697

.L2696:
	and.32      %r11518 <- %r10989, $255
	scast.64    %r11519 <- (32) %r11518
	muls.64     %r11520 <- %r11519, $16
	add.64      %r11521 <- %r10968, %r11520
	phisrc.64   %phi1693 <- %r11521
	br          .L2698

.L2697:
	scast.64    %r11528 <- (32) %r10990
	muls.64     %r11529 <- %r11528, $16
	add.64      %r11530 <- %r10972(base), %r11529
	ptrcast.64  %r11531 <- (64) %r11530
	phisrc.64   %phi1694 <- %r11531
	br          .L2698

.L2698:
	phi.64      %r11532 <- %phi1693, %phi1694
	br          %r11110, .L2699, .L2700

.L2699:
	and.32      %r11546 <- %r11006, $255
	scast.64    %r11547 <- (32) %r11546
	muls.64     %r11548 <- %r11547, $16
	add.64      %r11549 <- %r10968, %r11548
	phisrc.64   %phi1695 <- %r11549
	br          .L2701

.L2700:
	scast.64    %r11556 <- (32) %r11031
	muls.64     %r11557 <- %r11556, $16
	add.64      %r11558 <- %r10972(base), %r11557
	ptrcast.64  %r11559 <- (64) %r11558
	phisrc.64   %phi1696 <- %r11559
	br          .L2701

.L2701:
	phi.64      %r11560 <- %phi1695, %phi1696
	load.32     %r11562 <- 8[%r11532]
	seteq.32    %r11563 <- %r11562, $3
	br          %r11563, .L2704, .L2703

.L2704:
	load.32     %r11565 <- 8[%r11560]
	seteq.32    %r11566 <- %r11565, $3
	br          %r11566, .L2702, .L2703

.L2702:
	load.64     %r11568 <- 0[%r11532]
	load.64     %r11570 <- 0[%r11560]
	mulu.64     %r11574 <- %r11568, %r11570
	store.64    %r11574 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2703:
	store.64    %r10970(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10980(ra), %r11532, %r11560, $7
	load.64     %r11584 <- 24[%arg1]
	phisrc.64   %phi1863(base) <- %r11584
	br          .L2610

.L2630:
	br          %r11206, .L2706, .L2707

.L2706:
	and.32      %r11598 <- %r10989, $255
	scast.64    %r11599 <- (32) %r11598
	muls.64     %r11600 <- %r11599, $16
	add.64      %r11601 <- %r10968, %r11600
	phisrc.64   %phi1697 <- %r11601
	br          .L2708

.L2707:
	scast.64    %r11608 <- (32) %r10990
	muls.64     %r11609 <- %r11608, $16
	add.64      %r11610 <- %r10972(base), %r11609
	ptrcast.64  %r11611 <- (64) %r11610
	phisrc.64   %phi1698 <- %r11611
	br          .L2708

.L2708:
	phi.64      %r11612 <- %phi1697, %phi1698
	br          %r11110, .L2709, .L2710

.L2709:
	and.32      %r11626 <- %r11006, $255
	scast.64    %r11627 <- (32) %r11626
	muls.64     %r11628 <- %r11627, $16
	add.64      %r11629 <- %r10968, %r11628
	phisrc.64   %phi1699 <- %r11629
	br          .L2711

.L2710:
	scast.64    %r11636 <- (32) %r11031
	muls.64     %r11637 <- %r11636, $16
	add.64      %r11638 <- %r10972(base), %r11637
	ptrcast.64  %r11639 <- (64) %r11638
	phisrc.64   %phi1700 <- %r11639
	br          .L2711

.L2711:
	phi.64      %r11640 <- %phi1699, %phi1700
	load.32     %r11642 <- 8[%r11612]
	seteq.32    %r11643 <- %r11642, $3
	br          %r11643, .L2714, .L2713

.L2714:
	load.32     %r11645 <- 8[%r11640]
	seteq.32    %r11646 <- %r11645, $3
	br          %r11646, .L2712, .L2713

.L2712:
	load.64     %r11648 <- 0[%r11612]
	load.64     %r11650 <- 0[%r11640]
	divu.64     %r11654 <- %r11648, %r11650
	store.64    %r11654 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2713:
	store.64    %r10970(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10980(ra), %r11612, %r11640, $8
	load.64     %r11664 <- 24[%arg1]
	phisrc.64   %phi1864(base) <- %r11664
	br          .L2610

.L2631:
	br          %r11206, .L2716, .L2717

.L2716:
	and.32      %r11678 <- %r10989, $255
	scast.64    %r11679 <- (32) %r11678
	muls.64     %r11680 <- %r11679, $16
	add.64      %r11681 <- %r10968, %r11680
	phisrc.64   %phi1701 <- %r11681
	br          .L2718

.L2717:
	scast.64    %r11688 <- (32) %r10990
	muls.64     %r11689 <- %r11688, $16
	add.64      %r11690 <- %r10972(base), %r11689
	ptrcast.64  %r11691 <- (64) %r11690
	phisrc.64   %phi1702 <- %r11691
	br          .L2718

.L2718:
	phi.64      %r11692 <- %phi1701, %phi1702
	br          %r11110, .L2719, .L2720

.L2719:
	and.32      %r11706 <- %r11006, $255
	scast.64    %r11707 <- (32) %r11706
	muls.64     %r11708 <- %r11707, $16
	add.64      %r11709 <- %r10968, %r11708
	phisrc.64   %phi1703 <- %r11709
	br          .L2721

.L2720:
	scast.64    %r11716 <- (32) %r11031
	muls.64     %r11717 <- %r11716, $16
	add.64      %r11718 <- %r10972(base), %r11717
	ptrcast.64  %r11719 <- (64) %r11718
	phisrc.64   %phi1704 <- %r11719
	br          .L2721

.L2721:
	phi.64      %r11720 <- %phi1703, %phi1704
	load.32     %r11722 <- 8[%r11692]
	seteq.32    %r11723 <- %r11722, $3
	br          %r11723, .L2724, .L2723

.L2724:
	load.32     %r11725 <- 8[%r11720]
	seteq.32    %r11726 <- %r11725, $3
	br          %r11726, .L2722, .L2723

.L2722:
	load.64     %r11728 <- 0[%r11692]
	load.64     %r11730 <- 0[%r11720]
	divu.64     %r11735 <- %r11728, %r11730
	call.64     %r11736 <- floor, %r11735
	mulu.64     %r11738 <- %r11736, %r11730
	sub.64      %r11739 <- %r11728, %r11738
	store.64    %r11739 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2723:
	store.64    %r10970(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10980(ra), %r11692, %r11720, $9
	load.64     %r11749 <- 24[%arg1]
	phisrc.64   %phi1865(base) <- %r11749
	br          .L2610

.L2632:
	br          %r11206, .L2726, .L2727

.L2726:
	and.32      %r11763 <- %r10989, $255
	scast.64    %r11764 <- (32) %r11763
	muls.64     %r11765 <- %r11764, $16
	add.64      %r11766 <- %r10968, %r11765
	phisrc.64   %phi1705 <- %r11766
	br          .L2728

.L2727:
	scast.64    %r11773 <- (32) %r10990
	muls.64     %r11774 <- %r11773, $16
	add.64      %r11775 <- %r10972(base), %r11774
	ptrcast.64  %r11776 <- (64) %r11775
	phisrc.64   %phi1706 <- %r11776
	br          .L2728

.L2728:
	phi.64      %r11777 <- %phi1705, %phi1706
	br          %r11110, .L2729, .L2730

.L2729:
	and.32      %r11791 <- %r11006, $255
	scast.64    %r11792 <- (32) %r11791
	muls.64     %r11793 <- %r11792, $16
	add.64      %r11794 <- %r10968, %r11793
	phisrc.64   %phi1707 <- %r11794
	br          .L2731

.L2730:
	scast.64    %r11801 <- (32) %r11031
	muls.64     %r11802 <- %r11801, $16
	add.64      %r11803 <- %r10972(base), %r11802
	ptrcast.64  %r11804 <- (64) %r11803
	phisrc.64   %phi1708 <- %r11804
	br          .L2731

.L2731:
	phi.64      %r11805 <- %phi1707, %phi1708
	load.32     %r11807 <- 8[%r11777]
	seteq.32    %r11808 <- %r11807, $3
	br          %r11808, .L2734, .L2733

.L2734:
	load.32     %r11810 <- 8[%r11805]
	seteq.32    %r11811 <- %r11810, $3
	br          %r11811, .L2732, .L2733

.L2732:
	load.64     %r11813 <- 0[%r11777]
	load.64     %r11815 <- 0[%r11805]
	call.64     %r11819 <- pow, %r11813, %r11815
	store.64    %r11819 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2733:
	store.64    %r10970(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10980(ra), %r11777, %r11805, $10
	load.64     %r11829 <- 24[%arg1]
	phisrc.64   %phi1866(base) <- %r11829
	br          .L2610

.L2633:
	scast.64    %r11836 <- (32) %r10990
	muls.64     %r11837 <- %r11836, $16
	add.64      %r11838 <- %r10972(base), %r11837
	load.32     %r11840 <- 8[%r11838]
	seteq.32    %r11841 <- %r11840, $3
	br          %r11841, .L2736, .L2737

.L2736:
	load.64     %r11843 <- 0[%r11838]
	neg.64      %r11846 <- %r11843
	store.64    %r11846 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2737:
	store.64    %r10970(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10980(ra), %r11838, %r11838, $11
	load.64     %r11856 <- 24[%arg1]
	phisrc.64   %phi1867(base) <- %r11856
	br          .L2610

.L2634:
	scast.64    %r11863 <- (32) %r10990
	muls.64     %r11864 <- %r11863, $16
	add.64      %r11865 <- %r10972(base), %r11864
	load.32     %r11866 <- 8[%r11865]
	br          %r11866, .L2740, .L2739

.L2739:
	phisrc.32   %phi1709 <- $1
	br          .L2741

.L2740:
	scast.64    %r11874 <- (32) %r10990
	muls.64     %r11875 <- %r11874, $16
	add.64      %r11876 <- %r10972(base), %r11875
	load.32     %r11877 <- 8[%r11876]
	seteq.32    %r11878 <- %r11877, $1
	br          %r11878, .L2742, .L2743

.L2742:
	scast.64    %r11885 <- (32) %r10990
	muls.64     %r11886 <- %r11885, $16
	add.64      %r11887 <- %r10972(base), %r11886
	load.32     %r11888 <- 0[%r11887]
	seteq.32    %r11889 <- %r11888, $0
	phisrc.32   %phi1710 <- %r11889
	br          .L2744

.L2743:
	phisrc.32   %phi1711 <- $0
	br          .L2744

.L2744:
	phi.32      %r11890 <- %phi1710, %phi1711
	phisrc.32   %phi1712 <- %r11890
	br          .L2741

.L2741:
	phi.32      %r11891 <- %phi1709, %phi1712
	store.32    %r11891 -> 0[%r10980(ra)]
	store.32    $1 -> 8[%r10980(ra)]
	br          .L2610

.L2635:
	scast.64    %r11902 <- (32) %r10990
	muls.64     %r11903 <- %r11902, $16
	add.64      %r11904 <- %r10972(base), %r11903
	load.32     %r11906 <- 8[%r11904]
	switch      %r11906, 4 -> .L2747, 5 -> .L2746, default -> .L2748

.L2746:
	load.64     %r11909 <- 0[%r11904]
	call.32     %r11911 <- luaH_getn, %r11909
	fpcast.64   %r11912 <- (32) %r11911
	store.64    %r11912 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2747:
	load.64     %r11917 <- 0[%r11904]
	load.64     %r11918 <- 16[%r11917]
	fpcast.64   %r11919 <- (64) %r11918
	store.64    %r11919 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	br          .L2610

.L2748:
	store.64    %r10970(pc) -> 48[%arg1]
	symaddr.64  %r11926 <- luaO_nilobject_
	call.32     %r11928 <- call_binTM, %arg1, %r11904, %r11926, %r10980(ra), $12
	br          %r11928, .L2750, .L2749

.L2749:
	symaddr.64  %r11931 <- <anon symbol:0x62d00111f990>
	call        luaG_typeerror, %arg1, %r11904, %r11931
	br          .L2750

.L2750:
	load.64     %r11933 <- 24[%arg1]
	phisrc.64   %phi1868(base) <- %r11933
	br          .L2610

.L2636:
	store.64    %r10970(pc) -> 48[%arg1]
	sub.32      %r11949 <- %r11031, %r10990
	add.32      %r11950 <- %r11949, $1
	call        luaV_concat, %arg1, %r11950, %r11031
	load.64     %r11953 <- 32[%arg1]
	load.64     %r11954 <- 120[%r11953]
	load.64     %r11957 <- 112[%r11953]
	setae.32    %r11958 <- %r11954, %r11957
	br          %r11958, .L2751, .L2752

.L2751:
	call        luaC_step, %arg1
	br          .L2752

.L2752:
	load.64     %r11961 <- 24[%arg1]
	scast.64    %r11964 <- (32) %r10990
	muls.64     %r11965 <- %r11964, $16
	add.64      %r11966 <- %r11961, %r11965
	scast.64    %r11973 <- (32) %r10976
	muls.64     %r11974 <- %r11973, $16
	add.64      %r11975 <- %r11961, %r11974
	load.64     %r11977 <- 0[%r11966]
	store.64    %r11977 -> 0[%r11975]
	load.32     %r11980 <- 8[%r11966]
	store.32    %r11980 -> 8[%r11975]
	phisrc.64   %phi1869(base) <- %r11961
	br          .L2610

.L2637:
	add.32      %r11988 <- %r11074, $0xfffffffffffe0001
	scast.64    %r11989 <- (32) %r11988
	muls.64     %r11990 <- %r11989, $4
	cast.64     %r11992 <- (64) %r10970(pc)
	add.64      %r11993 <- %r11992, %r11990
	ptrcast.64  %r11994 <- (64) %r11993
	phisrc.64   %phi1799(pc) <- %r11994
	br          .L2610

.L2638:
	br          %r11206, .L2753, .L2754

.L2753:
	and.32      %r12008 <- %r10989, $255
	scast.64    %r12009 <- (32) %r12008
	muls.64     %r12010 <- %r12009, $16
	add.64      %r12011 <- %r10968, %r12010
	phisrc.64   %phi1713 <- %r12011
	br          .L2755

.L2754:
	scast.64    %r12018 <- (32) %r10990
	muls.64     %r12019 <- %r12018, $16
	add.64      %r12020 <- %r10972(base), %r12019
	ptrcast.64  %r12021 <- (64) %r12020
	phisrc.64   %phi1714 <- %r12021
	br          .L2755

.L2755:
	phi.64      %r12022 <- %phi1713, %phi1714
	br          %r11110, .L2756, .L2757

.L2756:
	and.32      %r12036 <- %r11006, $255
	scast.64    %r12037 <- (32) %r12036
	muls.64     %r12038 <- %r12037, $16
	add.64      %r12039 <- %r10968, %r12038
	phisrc.64   %phi1715 <- %r12039
	br          .L2758

.L2757:
	scast.64    %r12046 <- (32) %r11031
	muls.64     %r12047 <- %r12046, $16
	add.64      %r12048 <- %r10972(base), %r12047
	ptrcast.64  %r12049 <- (64) %r12048
	phisrc.64   %phi1716 <- %r12049
	br          .L2758

.L2758:
	phi.64      %r12050 <- %phi1715, %phi1716
	store.64    %r10970(pc) -> 48[%arg1]
	load.32     %r12054 <- 8[%r12022]
	load.32     %r12056 <- 8[%r12050]
	seteq.32    %r12057 <- %r12054, %r12056
	phisrc.64   %phi1775(pc) <- %r10970(pc)
	br          %r12057, .L2761, .L2762

.L2761:
	call.32     %r12061 <- luaV_equalval, %arg1, %r12022, %r12050
	phisrc.32   %phi1717 <- %r12061
	br          .L2763

.L2762:
	phisrc.32   %phi1718 <- $0
	br          .L2763

.L2763:
	phi.32      %r12062 <- %phi1717, %phi1718
	seteq.32    %r12068 <- %r12062, %r10976
	br          %r12068, .L2759, .L2760

.L2759:
	load.32     %r12070 <- 4[%r10969]
	lsr.32      %r12072 <- %r12070, $14
	and.32      %r12073 <- %r12072, $0x3ffff
	add.32      %r12075 <- %r12073, $0xfffffffffffe0001
	scast.64    %r12076 <- (32) %r12075
	muls.64     %r12077 <- %r12076, $4
	cast.64     %r12079 <- (64) %r10970(pc)
	add.64      %r12080 <- %r12079, %r12077
	ptrcast.64  %r12081 <- (64) %r12080
	phisrc.64   %phi1776(pc) <- %r12081
	br          .L2760

.L2760:
	load.64     %r12083 <- 24[%arg1]
	phi.64      %r12084 <- %phi1775(pc), %phi1776(pc)
	add.64      %r12085 <- %r12084, $4
	phisrc.64   %phi1800(pc) <- %r12085
	phisrc.64   %phi1870(base) <- %r12083
	br          .L2610

.L2639:
	store.64    %r10970(pc) -> 48[%arg1]
	phisrc.64   %phi1771(pc) <- %r10970(pc)
	br          %r11206, .L2766, .L2767

.L2766:
	and.32      %r12102 <- %r10989, $255
	scast.64    %r12103 <- (32) %r12102
	muls.64     %r12104 <- %r12103, $16
	add.64      %r12105 <- %r10968, %r12104
	phisrc.64   %phi1719 <- %r12105
	br          .L2768

.L2767:
	scast.64    %r12112 <- (32) %r10990
	muls.64     %r12113 <- %r12112, $16
	add.64      %r12114 <- %r10972(base), %r12113
	ptrcast.64  %r12115 <- (64) %r12114
	phisrc.64   %phi1720 <- %r12115
	br          .L2768

.L2768:
	phi.64      %r12116 <- %phi1719, %phi1720
	br          %r11110, .L2769, .L2770

.L2769:
	and.32      %r12130 <- %r11006, $255
	scast.64    %r12131 <- (32) %r12130
	muls.64     %r12132 <- %r12131, $16
	add.64      %r12133 <- %r10968, %r12132
	phisrc.64   %phi1721 <- %r12133
	br          .L2771

.L2770:
	scast.64    %r12140 <- (32) %r11031
	muls.64     %r12141 <- %r12140, $16
	add.64      %r12142 <- %r10972(base), %r12141
	ptrcast.64  %r12143 <- (64) %r12142
	phisrc.64   %phi1722 <- %r12143
	br          .L2771

.L2771:
	phi.64      %r12144 <- %phi1721, %phi1722
	call.32     %r12145 <- luaV_lessthan, %arg1, %r12116, %r12144
	seteq.32    %r12151 <- %r12145, %r10976
	br          %r12151, .L2764, .L2765

.L2764:
	load.32     %r12153 <- 4[%r10969]
	lsr.32      %r12155 <- %r12153, $14
	and.32      %r12156 <- %r12155, $0x3ffff
	add.32      %r12158 <- %r12156, $0xfffffffffffe0001
	scast.64    %r12159 <- (32) %r12158
	muls.64     %r12160 <- %r12159, $4
	cast.64     %r12162 <- (64) %r10970(pc)
	add.64      %r12163 <- %r12162, %r12160
	ptrcast.64  %r12164 <- (64) %r12163
	phisrc.64   %phi1772(pc) <- %r12164
	br          .L2765

.L2765:
	load.64     %r12166 <- 24[%arg1]
	phi.64      %r12167 <- %phi1771(pc), %phi1772(pc)
	add.64      %r12168 <- %r12167, $4
	phisrc.64   %phi1801(pc) <- %r12168
	phisrc.64   %phi1871(base) <- %r12166
	br          .L2610

.L2640:
	store.64    %r10970(pc) -> 48[%arg1]
	phisrc.64   %phi1767(pc) <- %r10970(pc)
	br          %r11206, .L2774, .L2775

.L2774:
	and.32      %r12185 <- %r10989, $255
	scast.64    %r12186 <- (32) %r12185
	muls.64     %r12187 <- %r12186, $16
	add.64      %r12188 <- %r10968, %r12187
	phisrc.64   %phi1723 <- %r12188
	br          .L2776

.L2775:
	scast.64    %r12195 <- (32) %r10990
	muls.64     %r12196 <- %r12195, $16
	add.64      %r12197 <- %r10972(base), %r12196
	ptrcast.64  %r12198 <- (64) %r12197
	phisrc.64   %phi1724 <- %r12198
	br          .L2776

.L2776:
	phi.64      %r12199 <- %phi1723, %phi1724
	br          %r11110, .L2777, .L2778

.L2777:
	and.32      %r12213 <- %r11006, $255
	scast.64    %r12214 <- (32) %r12213
	muls.64     %r12215 <- %r12214, $16
	add.64      %r12216 <- %r10968, %r12215
	phisrc.64   %phi1725 <- %r12216
	br          .L2779

.L2778:
	scast.64    %r12223 <- (32) %r11031
	muls.64     %r12224 <- %r12223, $16
	add.64      %r12225 <- %r10972(base), %r12224
	ptrcast.64  %r12226 <- (64) %r12225
	phisrc.64   %phi1726 <- %r12226
	br          .L2779

.L2779:
	phi.64      %r12227 <- %phi1725, %phi1726
	call.32     %r12228 <- lessequal, %arg1, %r12199, %r12227
	seteq.32    %r12234 <- %r12228, %r10976
	br          %r12234, .L2772, .L2773

.L2772:
	load.32     %r12236 <- 4[%r10969]
	lsr.32      %r12238 <- %r12236, $14
	and.32      %r12239 <- %r12238, $0x3ffff
	add.32      %r12241 <- %r12239, $0xfffffffffffe0001
	scast.64    %r12242 <- (32) %r12241
	muls.64     %r12243 <- %r12242, $4
	cast.64     %r12245 <- (64) %r10970(pc)
	add.64      %r12246 <- %r12245, %r12243
	ptrcast.64  %r12247 <- (64) %r12246
	phisrc.64   %phi1768(pc) <- %r12247
	br          .L2773

.L2773:
	load.64     %r12249 <- 24[%arg1]
	phi.64      %r12250 <- %phi1767(pc), %phi1768(pc)
	add.64      %r12251 <- %r12250, $4
	phisrc.64   %phi1802(pc) <- %r12251
	phisrc.64   %phi1872(base) <- %r12249
	br          .L2610

.L2641:
	load.32     %r12253 <- 8[%r10980(ra)]
	br          %r12253, .L2783, .L2782

.L2782:
	phisrc.32   %phi1727 <- $1
	br          .L2784

.L2783:
	seteq.32    %r12257 <- %r12253, $1
	br          %r12257, .L2785, .L2786

.L2785:
	load.32     %r12259 <- 0[%r10980(ra)]
	seteq.32    %r12260 <- %r12259, $0
	phisrc.32   %phi1728 <- %r12260
	br          .L2787

.L2786:
	phisrc.32   %phi1729 <- $0
	br          .L2787

.L2787:
	phi.32      %r12261 <- %phi1728, %phi1729
	phisrc.32   %phi1730 <- %r12261
	br          .L2784

.L2784:
	phi.32      %r12262 <- %phi1727, %phi1730
	setne.32    %r12268 <- %r12262, %r11031
	br          %r12268, .L2780, .L2781

.L2780:
	load.32     %r12270 <- 4[%r10969]
	lsr.32      %r12272 <- %r12270, $14
	and.32      %r12273 <- %r12272, $0x3ffff
	add.32      %r12275 <- %r12273, $0xfffffffffffe0001
	scast.64    %r12276 <- (32) %r12275
	muls.64     %r12277 <- %r12276, $4
	cast.64     %r12279 <- (64) %r10970(pc)
	add.64      %r12280 <- %r12279, %r12277
	ptrcast.64  %r12281 <- (64) %r12280
	phisrc.64   %phi1765(pc) <- %r12281
	br          .L2781

.L2781:
	phi.64      %r12282 <- %phi1764(pc), %phi1765(pc)
	add.64      %r12283 <- %r12282, $4
	phisrc.64   %phi1803(pc) <- %r12283
	br          .L2610

.L2642:
	scast.64    %r12290 <- (32) %r10990
	muls.64     %r12291 <- %r12290, $16
	add.64      %r12292 <- %r10972(base), %r12291
	load.32     %r12294 <- 8[%r12292]
	br          %r12294, .L2791, .L2790

.L2790:
	phisrc.32   %phi1731 <- $1
	br          .L2792

.L2791:
	seteq.32    %r12298 <- %r12294, $1
	br          %r12298, .L2793, .L2794

.L2793:
	load.32     %r12300 <- 0[%r12292]
	seteq.32    %r12301 <- %r12300, $0
	phisrc.32   %phi1732 <- %r12301
	br          .L2795

.L2794:
	phisrc.32   %phi1733 <- $0
	br          .L2795

.L2795:
	phi.32      %r12302 <- %phi1732, %phi1733
	phisrc.32   %phi1734 <- %r12302
	br          .L2792

.L2792:
	phi.32      %r12303 <- %phi1731, %phi1734
	setne.32    %r12309 <- %r12303, %r11031
	br          %r12309, .L2788, .L2789

.L2788:
	load.64     %r12313 <- 0[%r12292]
	store.64    %r12313 -> 0[%r10980(ra)]
	load.32     %r12316 <- 8[%r12292]
	store.32    %r12316 -> 8[%r10980(ra)]
	load.32     %r12320 <- 4[%r10969]
	lsr.32      %r12322 <- %r12320, $14
	and.32      %r12323 <- %r12322, $0x3ffff
	add.32      %r12325 <- %r12323, $0xfffffffffffe0001
	scast.64    %r12326 <- (32) %r12325
	muls.64     %r12327 <- %r12326, $4
	cast.64     %r12329 <- (64) %r10970(pc)
	add.64      %r12330 <- %r12329, %r12327
	ptrcast.64  %r12331 <- (64) %r12330
	phisrc.64   %phi1762(pc) <- %r12331
	br          .L2789

.L2789:
	phi.64      %r12332 <- %phi1761(pc), %phi1762(pc)
	add.64      %r12333 <- %r12332, $4
	phisrc.64   %phi1804(pc) <- %r12333
	br          .L2610

.L2643:
	add.32      %r12344 <- %r11031, $-1
	br          %r10990, .L2796, .L2797

.L2796:
	scast.64    %r12349 <- (32) %r10990
	muls.64     %r12350 <- %r12349, $16
	add.64      %r12351 <- %r10980(ra), %r12350
	store.64    %r12351 -> 16[%arg1]
	br          .L2797

.L2797:
	store.64    %r10970(pc) -> 48[%arg1]
	call.32     %r12358 <- luaD_precall, %arg1, %r10980(ra), %r12344
	switch      %r12358, 0 -> .L2799, 1 -> .L2800, default -> .L2804

.L2799:
	phi.32      %r12359 <- %phi1738(nexeccalls), %phi1739(nexeccalls), %phi1740(nexeccalls)
	add.32      %r12360 <- %r12359, $1
	phisrc.32   %phi1736(nexeccalls) <- %r12360
	phisrc.32   %phi1739(nexeccalls) <- %r12360
	br          .L2609

.L2800:
	setge.32    %r12362 <- %r12344, $0
	br          %r12362, .L2802, .L2803

.L2802:
	load.64     %r12364 <- 40[%arg1]
	load.64     %r12365 <- 16[%r12364]
	store.64    %r12365 -> 16[%arg1]
	br          .L2803

.L2803:
	load.64     %r12368 <- 24[%arg1]
	phisrc.64   %phi1873(base) <- %r12368
	br          .L2610

.L2644:
	br          %r10990, .L2805, .L2806

.L2805:
	scast.64    %r12378 <- (32) %r10990
	muls.64     %r12379 <- %r12378, $16
	add.64      %r12380 <- %r10980(ra), %r12379
	store.64    %r12380 -> 16[%arg1]
	br          .L2806

.L2806:
	store.64    %r10970(pc) -> 48[%arg1]
	call.32     %r12386 <- luaD_precall, %arg1, %r10980(ra), $0xffffffff
	switch      %r12386, 0 -> .L2808, 1 -> .L2809, default -> .L2804

.L2808:
	load.64     %r12388 <- 40[%arg1]
	load.64     %r12391 <- -32[%r12388]
	load.64     %r12393 <- 8[%r12388]
	load.64     %r12395 <- 152[%arg1]
	phisrc.64   %phi2004 <- %r12391
	phisrc.64   %phi2014 <- %r12391
	phisrc.64   %phi2020 <- %r12391
	br          %r12395, .L2811, .L2812

.L2811:
	load.64     %r12398 <- -40[%r12388]
	call        luaF_close, %arg1, %r12398
	br          .L2812

.L2812:
	load.64     %r12400 <- -32[%r12388]
	load.64     %r12402 <- 0[%r12388]
	sub.64      %r12404 <- %r12402, %r12393
	divs.64     %r12405 <- %r12404, $16
	muls.64     %r12406 <- %r12405, $16
	add.64      %r12407 <- %r12400, %r12406
	store.64    %r12407 -> -40[%r12388]
	store.64    %r12407 -> 24[%arg1]
	phisrc.32   %phi1956(aux) <- $0
	br          .L2816

.L2816:
	phi.32      %r12411(aux) <- %phi1956(aux), %phi1957(aux)
	scast.64    %r12412 <- (32) %r12411(aux)
	muls.64     %r12413 <- %r12412, $16
	add.64      %r12414 <- %r12393, %r12413
	load.64     %r12416 <- 16[%arg1]
	setb.32     %r12417 <- %r12414, %r12416
	add.64      %r12427 <- %r12391, %r12413
	br          %r12417, .L2813, .L2815

.L2813:
	load.64     %r12429 <- 0[%r12414]
	store.64    %r12429 -> 0[%r12427]
	load.32     %r12432 <- 8[%r12414]
	store.32    %r12432 -> 8[%r12427]
	add.32      %r12436 <- %r12411(aux), $1
	phisrc.32   %phi1957(aux) <- %r12436
	br          .L2816

.L2815:
	store.64    %r12427 -> 16[%arg1]
	store.64    %r12427 -> -24[%r12388]
	load.64     %r12445 <- 48[%arg1]
	store.64    %r12445 -> -16[%r12388]
	load.32     %r12448 <- -4[%r12388]
	add.32      %r12449 <- %r12448, $1
	store.32    %r12449 -> -4[%r12388]
	load.64     %r12451 <- 40[%arg1]
	add.64      %r12452 <- %r12451, $-40
	store.64    %r12452 -> 40[%arg1]
	br          .L2609

.L2809:
	load.64     %r12454 <- 24[%arg1]
	phisrc.64   %phi1874(base) <- %r12454
	br          .L2610

.L2645:
	br          %r10990, .L2817, .L2818

.L2817:
	scast.64    %r12464 <- (32) %r10990
	muls.64     %r12465 <- %r12464, $16
	add.64      %r12466 <- %r10980(ra), %r12465
	add.64      %r12467 <- %r12466, $-16
	store.64    %r12467 -> 16[%arg1]
	br          .L2818

.L2818:
	load.64     %r12470 <- 152[%arg1]
	br          %r12470, .L2819, .L2820

.L2819:
	call        luaF_close, %arg1, %r10972(base)
	br          .L2820

.L2820:
	store.64    %r10970(pc) -> 48[%arg1]
	call.32     %r12477(b) <- luaD_poscall, %arg1, %r10980(ra)
	phi.32      %r12478 <- %phi1735(nexeccalls), %phi1736(nexeccalls), %phi1737(nexeccalls)
	add.32      %r12479 <- %r12478, $-1
	phisrc.32   %phi1737(nexeccalls) <- %r12479
	phisrc.32   %phi1740(nexeccalls) <- %r12479
	br          %r12479, .L2822, .L2804

.L2822:
	br          %r12477(b), .L2824, .L2609

.L2824:
	load.64     %r12483 <- 40[%arg1]
	load.64     %r12484 <- 16[%r12483]
	store.64    %r12484 -> 16[%arg1]
	br          .L2609

.L2646:
	load.64     %r12487 <- 32[%r10980(ra)]
	load.64     %r12489 <- 0[%r10980(ra)]
	add.64      %r12491 <- %r12489, %r12487
	load.64     %r12493 <- 16[%r10980(ra)]
	setle.32    %r12496 <- %r12491, %r12493
	setle.32    %r12499 <- %r12493, %r12491
	set.64      %r12500 <- 0.000000
	setlt.32    %r12502 <- %r12500, %r12487
	select.32   %r12503 <- %r12502, %r12496, %r12499
	br          %r12503, .L2826, .L2610

.L2826:
	add.32      %r12509 <- %r11074, $0xfffffffffffe0001
	scast.64    %r12510 <- (32) %r12509
	muls.64     %r12511 <- %r12510, $4
	cast.64     %r12513 <- (64) %r10970(pc)
	add.64      %r12514 <- %r12513, %r12511
	ptrcast.64  %r12515 <- (64) %r12514
	store.64    %r12491 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	store.64    %r12491 -> 48[%r10980(ra)]
	store.32    $3 -> 56[%r10980(ra)]
	phisrc.64   %phi1805(pc) <- %r12515
	br          .L2610

.L2647:
	add.64      %r12527(plimit) <- %r10980(ra), $16
	add.64      %r12529(pstep) <- %r10980(ra), $32
	store.64    %r10970(pc) -> 48[%arg1]
	load.32     %r12533 <- 8[%r10980(ra)]
	seteq.32    %r12535 <- %r12533, $3
	phisrc.64   %phi1963(pstep) <- %r12529(pstep)
	br          %r12535, .L2829, .L2830

.L2830:
	call.64     %r12538 <- luaV_tonumber, %r10980(ra), %r10980(ra)
	br          %r12538, .L2829, .L2828

.L2828:
	symaddr.64  %r12541 <- <anon symbol:0x62d001128770>
	call        luaG_runerror, %arg1, %r12541
	br          .L2831

.L2829:
	load.32     %r12543 <- 24[%r10980(ra)]
	seteq.32    %r12545 <- %r12543, $3
	br          %r12545, .L2833, .L2834

.L2834:
	call.64     %r12549 <- luaV_tonumber, %r12527(plimit), %r12527(plimit)
	br          %r12549, .L2833, .L2832

.L2832:
	symaddr.64  %r12552 <- <anon symbol:0x62d001128ce0>
	call        luaG_runerror, %arg1, %r12552
	br          .L2831

.L2833:
	load.32     %r12554 <- 40[%r10980(ra)]
	seteq.32    %r12556 <- %r12554, $3
	phisrc.64   %phi1964(pstep) <- %r12529(pstep)
	br          %r12556, .L2831, .L2838

.L2838:
	call.64     %r12560 <- luaV_tonumber, %r12529(pstep), %r12529(pstep)
	phisrc.64   %phi1965(pstep) <- %r12560
	br          %r12560, .L2831, .L2836

.L2836:
	symaddr.64  %r12563 <- <anon symbol:0x62d001129250>
	call        luaG_runerror, %arg1, %r12563
	br          .L2831

.L2831:
	load.64     %r12566 <- 0[%r10980(ra)]
	phi.64      %r12567 <- %phi1963(pstep), %phi1964(pstep), %phi1965(pstep)
	load.64     %r12568 <- 0[%r12567]
	sub.64      %r12570 <- %r12566, %r12568
	store.64    %r12570 -> 0[%r10980(ra)]
	store.32    $3 -> 8[%r10980(ra)]
	add.32      %r12578 <- %r11074, $0xfffffffffffe0001
	scast.64    %r12579 <- (32) %r12578
	muls.64     %r12580 <- %r12579, $4
	cast.64     %r12582 <- (64) %r10970(pc)
	add.64      %r12583 <- %r12582, %r12580
	ptrcast.64  %r12584 <- (64) %r12583
	phisrc.64   %phi1806(pc) <- %r12584
	br          .L2610

.L2648:
	add.64      %r12586 <- %r10980(ra), $48
	load.64     %r12592 <- 32[%r10980(ra)]
	store.64    %r12592 -> 80[%r10980(ra)]
	load.32     %r12595 <- 40[%r10980(ra)]
	store.32    %r12595 -> 88[%r10980(ra)]
	load.64     %r12603 <- 16[%r10980(ra)]
	store.64    %r12603 -> 64[%r10980(ra)]
	load.32     %r12606 <- 24[%r10980(ra)]
	store.32    %r12606 -> 72[%r10980(ra)]
	load.64     %r12612 <- 0[%r10980(ra)]
	store.64    %r12612 -> 48[%r10980(ra)]
	load.32     %r12615 <- 8[%r10980(ra)]
	store.32    %r12615 -> 56[%r10980(ra)]
	add.64      %r12619 <- %r12586, $48
	store.64    %r12619 -> 16[%arg1]
	store.64    %r10970(pc) -> 48[%arg1]
	call        luaD_call, %arg1, %r12586, %r11031
	load.64     %r12631 <- 24[%arg1]
	load.64     %r12633 <- 40[%arg1]
	load.64     %r12634 <- 16[%r12633]
	store.64    %r12634 -> 16[%arg1]
	scast.64    %r12642 <- (32) %r10976
	muls.64     %r12643 <- %r12642, $16
	add.64      %r12644 <- %r12631, %r12643
	load.32     %r12647 <- 56[%r12644]
	phisrc.64   %phi1751(pc) <- %r10970(pc)
	phisrc.64   %phi1875(base) <- %r12631
	br          %r12647, .L2839, .L2840

.L2839:
	load.64     %r12653 <- 48[%r12644]
	store.64    %r12653 -> 32[%r12644]
	store.32    %r12647 -> 40[%r12644]
	load.32     %r12660 <- 4[%r10969]
	lsr.32      %r12662 <- %r12660, $14
	and.32      %r12663 <- %r12662, $0x3ffff
	add.32      %r12665 <- %r12663, $0xfffffffffffe0001
	scast.64    %r12666 <- (32) %r12665
	muls.64     %r12667 <- %r12666, $4
	cast.64     %r12669 <- (64) %r10970(pc)
	add.64      %r12670 <- %r12669, %r12667
	ptrcast.64  %r12671 <- (64) %r12670
	phisrc.64   %phi1752(pc) <- %r12671
	br          .L2840

.L2840:
	phi.64      %r12672 <- %phi1751(pc), %phi1752(pc)
	add.64      %r12673 <- %r12672, $4
	phisrc.64   %phi1807(pc) <- %r12673
	br          .L2610

.L2649:
	phisrc.32   %phi1973(n) <- %r10990
	br          %r10990, .L2842, .L2841

.L2841:
	load.64     %r12687 <- 16[%arg1]
	sub.64      %r12689 <- %r12687, %r10980(ra)
	divs.64     %r12690 <- %r12689, $16
	scast.32    %r12691 <- (64) %r12690
	add.32      %r12692 <- %r12691, $-1
	load.64     %r12694 <- 40[%arg1]
	load.64     %r12695 <- 16[%r12694]
	store.64    %r12695 -> 16[%arg1]
	phisrc.32   %phi1974(n) <- %r12692
	br          .L2842

.L2842:
	phisrc.32   %phi1975(c) <- %r11031
	br          %r11031, .L2844, .L2843

.L2843:
	add.64      %r12700 <- %r10970(pc), $4
	load.32     %r12701 <- 4[%r10969]
	phisrc.64   %phi1808(pc) <- %r12700
	phisrc.32   %phi1976(c) <- %r12701
	br          .L2844

.L2844:
	load.32     %r12704 <- 8[%r10980(ra)]
	seteq.32    %r12705 <- %r12704, $5
	br          %r12705, .L2846, .L2610

.L2846:
	load.64     %r12707 <- 0[%r10980(ra)]
	phi.32      %r12709 <- %phi1975(c), %phi1976(c)
	add.32      %r12710 <- %r12709, $-1
	muls.32     %r12711 <- %r12710, $50
	phi.32      %r12712(n) <- %phi1973(n), %phi1974(n)
	add.32      %r12713 <- %r12711, %r12712(n)
	load.32     %r12716 <- 56[%r12707]
	setgt.32    %r12717 <- %r12713, %r12716
	phisrc.32   %phi1971(n) <- %r12712(n)
	phisrc.32   %phi1978(last) <- %r12713
	br          %r12717, .L2847, .L2852

.L2847:
	call        luaH_resizearray, %arg1, %r12707, %r12713
	phisrc.32   %phi1979(last) <- %r12713
	br          .L2852

.L2852:
	phi.32      %r12721(n) <- %phi1971(n), %phi1972(n)
	setgt.32    %r12722 <- %r12721(n), $0
	br          %r12722, .L2849, .L2610

.L2849:
	scast.64    %r12725 <- (32) %r12721(n)
	muls.64     %r12726 <- %r12725, $16
	add.64      %r12727 <- %r10980(ra), %r12726
	phi.32      %r12731 <- %phi1978(last), %phi1979(last), %phi1980(last)
	add.32      %r12732 <- %r12731, $-1
	call.64     %r12733 <- luaH_setnum, %arg1, %r12707, %r12731
	load.64     %r12735 <- 0[%r12727]
	store.64    %r12735 -> 0[%r12733]
	load.32     %r12738 <- 8[%r12727]
	store.32    %r12738 -> 8[%r12733]
	load.32     %r12742 <- 8[%r12727]
	setge.32    %r12743 <- %r12742, $4
	phisrc.32   %phi1980(last) <- %r12732
	br          %r12743, .L2856, .L2850

.L2856:
	load.64     %r12745 <- 0[%r12727]
	load.8      %r12746 <- 9[%r12745]
	cast.32     %r12747 <- (8) %r12746
	and.32      %r12748 <- %r12747, $3
	br          %r12748, .L2855, .L2850

.L2855:
	ptrcast.64  %r12750 <- (64) %r12707
	load.8      %r12751 <- 9[%r12750]
	cast.32     %r12752 <- (8) %r12751
	and.32      %r12753 <- %r12752, $4
	br          %r12753, .L2853, .L2850

.L2853:
	call        luaC_barrierback, %arg1, %r12707
	br          .L2850

.L2850:
	add.32      %r12757 <- %r12721(n), $-1
	phisrc.32   %phi1972(n) <- %r12757
	br          .L2852

.L2650:
	call        luaF_close, %arg1, %r10980(ra)
	br          .L2610

.L2651:
	load.64     %r12761 <- 32[%r10961]
	load.64     %r12762 <- 32[%r12761]
	scast.64    %r12768 <- (32) %r11074
	muls.64     %r12769 <- %r12768, $8
	add.64      %r12770 <- %r12762, %r12769
	load.64     %r12771 <- 0[%r12770]
	load.8      %r12773 <- 112[%r12771]
	cast.32     %r12774 <- (8) %r12773
	load.64     %r12778 <- 24[%r10961]
	call.64     %r12779 <- luaF_newLclosure, %arg1, %r12774, %r12778
	store.64    %r12771 -> 32[%r12779]
	phisrc.32   %phi1986(j) <- $0
	br          .L2860

.L2860:
	phi.32      %r12782(j) <- %phi1986(j), %phi1987(j)
	setlt.32    %r12784 <- %r12782(j), %r12774
	phi.64      %r12785(pc) <- %phi1748(pc), %phi1749(pc)
	br          %r12784, .L2857, .L2859

.L2857:
	load.32     %r12786 <- 0[%r12785(pc)]
	and.32      %r12789 <- %r12786, $63
	seteq.32    %r12792 <- %r12789, $4
	scast.64    %r12809 <- (32) %r12782(j)
	add.64      %r12807 <- %r12779, $40
	lsr.32      %r12798 <- %r12786, $23
	and.32      %r12799 <- %r12798, $511
	muls.64     %r12810 <- %r12809, $8
	add.64      %r12811 <- %r12807, %r12810
	br          %r12792, .L2861, .L2862

.L2861:
	scast.64    %r12801 <- (32) %r12799
	muls.64     %r12802 <- %r12801, $8
	add.64      %r12803 <- %r11055, %r12802
	load.64     %r12804 <- 0[%r12803]
	store.64    %r12804 -> 0[%r12811]
	br          .L2858

.L2862:
	scast.64    %r12820 <- (32) %r12799
	muls.64     %r12821 <- %r12820, $16
	add.64      %r12822 <- %r10972(base), %r12821
	call.64     %r12823 <- luaF_findupval, %arg1, %r12822
	store.64    %r12823 -> 0[%r12811]
	br          .L2858

.L2858:
	add.32      %r12832 <- %r12782(j), $1
	add.64      %r12834 <- %r12785(pc), $4
	phisrc.64   %phi1749(pc) <- %r12834
	phisrc.64   %phi1809(pc) <- %r12834
	phisrc.32   %phi1987(j) <- %r12832
	br          .L2860

.L2859:
	ptrcast.64  %r12837 <- (64) %r12779
	store.64    %r12837 -> 0[%r10980(ra)]
	store.32    $6 -> 8[%r10980(ra)]
	store.64    %r12785(pc) -> 48[%arg1]
	load.64     %r12843 <- 32[%arg1]
	load.64     %r12844 <- 120[%r12843]
	load.64     %r12847 <- 112[%r12843]
	setae.32    %r12848 <- %r12844, %r12847
	br          %r12848, .L2864, .L2865

.L2864:
	call        luaC_step, %arg1
	br          .L2865

.L2865:
	load.64     %r12851 <- 24[%arg1]
	phisrc.64   %phi1876(base) <- %r12851
	br          .L2610

.L2652:
	add.32      %r12857 <- %r10990, $-1
	load.64     %r12859 <- 40[%arg1]
	load.64     %r12861 <- 0[%r12859]
	load.64     %r12863 <- 8[%r12859]
	sub.64      %r12864 <- %r12861, %r12863
	divs.64     %r12865 <- %r12864, $16
	scast.32    %r12866 <- (64) %r12865
	load.64     %r12868 <- 32[%r10961]
	load.8      %r12869 <- 113[%r12868]
	cast.32     %r12870 <- (8) %r12869
	sub.32      %r12871 <- %r12866, %r12870
	add.32      %r12872 <- %r12871, $-1
	seteq.32    %r12874 <- %r12857, $0xffffffff
	phisrc.32   %phi1988(b) <- %r12857
	phisrc.64   %phi1997 <- %r12861
	phisrc.64   %phi2008 <- %r12861
	phisrc.64   %phi2015 <- %r12861
	br          %r12874, .L2866, .L2867

.L2866:
	store.64    %r10970(pc) -> 48[%arg1]
	load.64     %r12878 <- 56[%arg1]
	ptrcast.64  %r12879 <- (64) %r12878
	load.64     %r12881 <- 16[%arg1]
	ptrcast.64  %r12882 <- (64) %r12881
	sub.64      %r12883 <- %r12879, %r12882
	muls.32     %r12885 <- %r12872, $16
	scast.64    %r12886 <- (32) %r12885
	setle.32    %r12887 <- %r12883, %r12886
	br          %r12887, .L2868, .L2870

.L2868:
	call        luaD_growstack, %arg1, %r12872
	br          .L2870

.L2870:
	load.64     %r12891 <- 24[%arg1]
	scast.64    %r12898 <- (32) %r10976
	muls.64     %r12899 <- %r12898, $16
	add.64      %r12900 <- %r12891, %r12899
	scast.64    %r12904 <- (32) %r12872
	muls.64     %r12905 <- %r12904, $16
	add.64      %r12906 <- %r12900, %r12905
	store.64    %r12906 -> 16[%arg1]
	phisrc.64   %phi1877(base) <- %r12891
	phisrc.64   %phi1879(ra) <- %r12900
	phisrc.64   %phi1882(ra) <- %r12900
	phisrc.32   %phi1989(b) <- %r12872
	br          .L2867

.L2867:
	phisrc.32   %phi1995(j) <- $0
	br          .L2874

.L2874:
	phi.32      %r12908(j) <- %phi1995(j), %phi1996(j)
	phi.32      %r12909 <- %phi1988(b), %phi1989(b)
	setlt.32    %r12910 <- %r12908(j), %r12909
	br          %r12910, .L2871, .L2610

.L2871:
	setlt.32    %r12913 <- %r12908(j), %r12872
	scast.64    %r12921 <- (32) %r12908(j)
	muls.64     %r12922 <- %r12921, $16
	br          %r12913, .L2875, .L2876

.L2875:
	load.64     %r12915 <- 0[%r12859]
	scast.64    %r12917 <- (32) %r12872
	muls.64     %r12918 <- %r12917, $16
	sub.64      %r12919 <- %r12915, %r12918
	add.64      %r12923 <- %r12919, %r12922
	phi.64      %r12924 <- %phi1881(ra), %phi1882(ra)
	add.64      %r12928 <- %r12924, %r12922
	load.64     %r12930 <- 0[%r12923]
	store.64    %r12930 -> 0[%r12928]
	load.32     %r12933 <- 8[%r12923]
	store.32    %r12933 -> 8[%r12928]
	phisrc.64   %phi1880(ra) <- %r12924
	br          .L2872

.L2876:
	phi.64      %r12936 <- %phi1878(ra), %phi1879(ra), %phi1880(ra)
	add.64      %r12940 <- %r12936, %r12922
	store.32    $0 -> 8[%r12940]
	br          .L2872

.L2872:
	add.32      %r12942 <- %r12908(j), $1
	phisrc.32   %phi1996(j) <- %r12942
	br          .L2874

.L2804:
	ret


index2adr:
.L2878:
	<entry-point>
	setgt.32    %r12944 <- %arg2, $0
	br          %r12944, .L2879, .L2880

.L2879:
	load.64     %r12946 <- 24[%arg1]
	add.32      %r12948 <- %arg2, $-1
	scast.64    %r12949 <- (32) %r12948
	muls.64     %r12950 <- %r12949, $16
	add.64      %r12951 <- %r12946, %r12950
	load.64     %r12955 <- 16[%arg1]
	setae.32    %r12956 <- %r12951, %r12955
	br          %r12956, .L2881, .L2882

.L2881:
	symaddr.64  %r12957 <- luaO_nilobject_
	ptrcast.64  %r12958 <- (64) %r12957
	phisrc.64   %phi2021(return) <- %r12958
	br          .L2883

.L2882:
	phisrc.64   %phi2022(return) <- %r12951
	br          .L2883

.L2880:
	setgt.32    %r12962 <- %arg2, $0xffffd8f0
	br          %r12962, .L2886, .L2887

.L2886:
	load.64     %r12965 <- 16[%arg1]
	scast.64    %r12967 <- (32) %arg2
	muls.64     %r12968 <- %r12967, $16
	add.64      %r12969 <- %r12965, %r12968
	phisrc.64   %phi2023(return) <- %r12969
	br          .L2883

.L2887:
	switch      %arg2, -10002 -> .L2892, -10001 -> .L2891, -10000 -> .L2890, default -> .L2893

.L2890:
	load.64     %r12972 <- 32[%arg1]
	add.64      %r12973 <- %r12972, $160
	phisrc.64   %phi2024(return) <- %r12973
	br          .L2883

.L2891:
	load.64     %r12975 <- 40[%arg1]
	load.64     %r12976 <- 8[%r12975]
	load.64     %r12977 <- 0[%r12976]
	load.64     %r12982 <- 24[%r12977]
	ptrcast.64  %r12983 <- (64) %r12982
	store.64    %r12983 -> 136[%arg1]
	store.32    $5 -> 144[%arg1]
	add.64      %r12987 <- %arg1, $136
	phisrc.64   %phi2025(return) <- %r12987
	br          .L2883

.L2892:
	add.64      %r12989 <- %arg1, $120
	phisrc.64   %phi2026(return) <- %r12989
	br          .L2883

.L2893:
	load.64     %r12991 <- 40[%arg1]
	load.64     %r12992 <- 8[%r12991]
	load.64     %r12993 <- 0[%r12992]
	sub.32      %r12996 <- $0xffffd8ee, %arg2
	add.64      %r12999 <- %r12993, $40
	add.32      %r13001 <- %r12996, $-1
	scast.64    %r13002 <- (32) %r13001
	muls.64     %r13003 <- %r13002, $16
	add.64      %r13004 <- %r12999, %r13003
	symaddr.64  %r13005 <- luaO_nilobject_
	ptrcast.64  %r13006 <- (64) %r13005
	ptrcast.64  %r13007 <- (64) %r13006
	load.8      %r13010 <- 11[%r12993]
	cast.32     %r13011 <- (8) %r13010
	setle.32    %r13012 <- %r12996, %r13011
	select.64   %r13013 <- %r13012, %r13004, %r13007
	phisrc.64   %phi2027(return) <- %r13013
	br          .L2883

.L2883:
	phi.64      %r12959 <- %phi2021(return), %phi2022(return), %phi2023(return), %phi2024(return), %phi2025(return), %phi2026(return), %phi2027(return)
	ret.64      %r12959


getcurrenv:
.L2894:
	<entry-point>
	load.64     %r13015 <- 40[%arg1]
	load.64     %r13017 <- 80[%arg1]
	seteq.32    %r13018 <- %r13015, %r13017
	br          %r13018, .L2895, .L2896

.L2895:
	load.64     %r13020 <- 120[%arg1]
	phisrc.64   %phi2033(return) <- %r13020
	br          .L2897

.L2896:
	load.64     %r13025 <- 8[%r13015]
	load.64     %r13026 <- 0[%r13025]
	load.64     %r13029 <- 24[%r13026]
	phisrc.64   %phi2034(return) <- %r13029
	br          .L2897

.L2897:
	phi.64      %r13022 <- %phi2033(return), %phi2034(return)
	ret.64      %r13022


lua_checkstack:
.L2899:
	<entry-point>
	setgt.32    %r13031 <- %arg2, $0x1f40
	phisrc.32   %phi2038(res) <- $1
	br          %r13031, .L2900, .L2902

.L2902:
	load.64     %r13033 <- 16[%arg1]
	load.64     %r13035 <- 24[%arg1]
	sub.64      %r13036 <- %r13033, %r13035
	divs.64     %r13037 <- %r13036, $16
	scast.64    %r13039 <- (32) %arg2
	add.64      %r13040 <- %r13037, %r13039
	setgt.32    %r13041 <- %r13040, $0x1f40
	br          %r13041, .L2900, .L2901

.L2900:
	phisrc.32   %phi2037(res) <- $0
	br          .L2903

.L2901:
	setgt.32    %r13043 <- %arg2, $0
	br          %r13043, .L2904, .L2903

.L2904:
	load.64     %r13045 <- 56[%arg1]
	ptrcast.64  %r13046 <- (64) %r13045
	ptrcast.64  %r13049 <- (64) %r13033
	sub.64      %r13050 <- %r13046, %r13049
	muls.32     %r13052 <- %arg2, $16
	scast.64    %r13053 <- (32) %r13052
	setle.32    %r13054 <- %r13050, %r13053
	br          %r13054, .L2906, .L2908

.L2906:
	call        luaD_growstack, %arg1, %arg2
	br          .L2908

.L2908:
	load.64     %r13058 <- 40[%arg1]
	load.64     %r13059 <- 16[%r13058]
	load.64     %r13061 <- 16[%arg1]
	muls.64     %r13064 <- %r13039, $16
	add.64      %r13065 <- %r13061, %r13064
	setb.32     %r13066 <- %r13059, %r13065
	br          %r13066, .L2909, .L2903

.L2909:
	store.64    %r13065 -> 16[%r13058]
	br          .L2903

.L2903:
	phi.32      %r13075 <- %phi2037(res), %phi2038(res)
	ret.32      %r13075


lua_atpanic:
.L2912:
	<entry-point>
	load.64     %r13078 <- 32[%arg1]
	load.64     %r13079 <- 152[%r13078]
	store.64    %arg2 -> 152[%r13078]
	ret.64      %r13079


lua_gettop:
.L2914:
	<entry-point>
	load.64     %r13086 <- 16[%arg1]
	load.64     %r13088 <- 24[%arg1]
	sub.64      %r13089 <- %r13086, %r13088
	divs.64     %r13090 <- %r13089, $16
	scast.32    %r13091 <- (64) %r13090
	ret.32      %r13091


lua_settop:
.L2916:
	<entry-point>
	setge.32    %r13094 <- %arg2, $0
	br          %r13094, .L2922, .L2918

.L2922:
	load.64     %r13097 <- 16[%arg1]
	load.64     %r13099 <- 24[%arg1]
	scast.64    %r13101 <- (32) %arg2
	muls.64     %r13102 <- %r13101, $16
	add.64      %r13103 <- %r13099, %r13102
	setb.32     %r13104 <- %r13097, %r13103
	br          %r13104, .L2919, .L2921

.L2919:
	add.64      %r13107 <- %r13097, $16
	store.64    %r13107 -> 16[%arg1]
	store.32    $0 -> 8[%r13097]
	br          .L2922

.L2921:
	store.64    %r13103 -> 16[%arg1]
	br          .L2923

.L2918:
	add.32      %r13117 <- %arg2, $1
	scast.64    %r13118 <- (32) %r13117
	muls.64     %r13119 <- %r13118, $16
	load.64     %r13121 <- 16[%arg1]
	cast.64     %r13122 <- (64) %r13121
	add.64      %r13123 <- %r13122, %r13119
	ptrcast.64  %r13124 <- (64) %r13123
	store.64    %r13124 -> 16[%arg1]
	br          .L2923

.L2923:
	ret


lua_remove:
.L2924:
	<entry-point>
	call.64     %r13127(p) <- index2adr, %arg1, %arg2
	phisrc.64   %phi2047(p) <- %r13127(p)
	br          .L2928

.L2928:
	phi.64      %r13129 <- %phi2047(p), %phi2048(p)
	add.64      %r13130(p) <- %r13129, $16
	load.64     %r13132 <- 16[%arg1]
	setb.32     %r13133 <- %r13130(p), %r13132
	phisrc.64   %phi2048(p) <- %r13130(p)
	br          %r13133, .L2925, .L2927

.L2925:
	load.64     %r13138 <- 16[%r13129]
	store.64    %r13138 -> 0[%r13129]
	load.32     %r13141 <- 24[%r13129]
	store.32    %r13141 -> 8[%r13129]
	br          .L2928

.L2927:
	add.64      %r13146 <- %r13132, $-16
	store.64    %r13146 -> 16[%arg1]
	ret


lua_insert:
.L2930:
	<entry-point>
	call.64     %r13149 <- index2adr, %arg1, %arg2
	load.64     %r13152(q) <- 16[%arg1]
	phisrc.64   %phi2052(q) <- %r13152(q)
	phisrc.64   %phi2054(q) <- %r13152(q)
	phisrc.64   %phi2055(q) <- %r13152(q)
	phisrc.64   %phi2056(q) <- %r13152(q)
	br          .L2934

.L2934:
	phi.64      %r13153(q) <- %phi2052(q), %phi2053(q)
	seta.32     %r13155 <- %r13153(q), %r13149
	br          %r13155, .L2931, .L2933

.L2931:
	load.64     %r13160 <- -16[%r13153(q)]
	store.64    %r13160 -> 0[%r13153(q)]
	load.32     %r13163 <- -8[%r13153(q)]
	store.32    %r13163 -> 8[%r13153(q)]
	add.64      %r13167 <- %r13153(q), $-16
	phisrc.64   %phi2053(q) <- %r13167
	br          .L2934

.L2933:
	load.64     %r13169 <- 16[%arg1]
	load.64     %r13172 <- 0[%r13169]
	store.64    %r13172 -> 0[%r13149]
	load.32     %r13175 <- 8[%r13169]
	store.32    %r13175 -> 8[%r13149]
	ret


lua_replace:
.L2936:
	<entry-point>
	seteq.32    %r13179 <- %arg2, $0xffffd8ef
	br          %r13179, .L2939, .L2938

.L2939:
	load.64     %r13181 <- 40[%arg1]
	load.64     %r13183 <- 80[%arg1]
	seteq.32    %r13184 <- %r13181, %r13183
	br          %r13184, .L2937, .L2938

.L2937:
	symaddr.64  %r13186 <- <anon symbol:0x62d001400500>
	call        luaG_runerror, %arg1, %r13186
	br          .L2938

.L2938:
	call.64     %r13190 <- index2adr, %arg1, %arg2
	br          %r13179, .L2940, .L2941

.L2940:
	load.64     %r13195 <- 40[%arg1]
	load.64     %r13196 <- 8[%r13195]
	load.64     %r13197 <- 0[%r13196]
	load.64     %r13201 <- 16[%arg1]
	load.64     %r13203 <- -16[%r13201]
	store.64    %r13203 -> 24[%r13197]
	load.64     %r13207 <- 16[%arg1]
	load.32     %r13209 <- -8[%r13207]
	setge.32    %r13210 <- %r13209, $4
	phisrc.64   %phi2057 <- %r13207
	phisrc.64   %phi2065 <- %r13207
	phisrc.64   %phi2066 <- %r13207
	phisrc.64   %phi2070 <- %r13207
	phisrc.64   %phi2071 <- %r13207
	br          %r13210, .L2945, .L2946

.L2945:
	load.64     %r13214 <- -16[%r13207]
	load.8      %r13215 <- 9[%r13214]
	cast.32     %r13216 <- (8) %r13215
	and.32      %r13217 <- %r13216, $3
	phisrc.64   %phi2058 <- %r13207
	phisrc.64   %phi2059 <- %r13207
	br          %r13217, .L2944, .L2946

.L2944:
	ptrcast.64  %r13219 <- (64) %r13197
	load.8      %r13220 <- 9[%r13219]
	cast.32     %r13221 <- (8) %r13220
	and.32      %r13222 <- %r13221, $4
	br          %r13222, .L2942, .L2946

.L2942:
	call        luaC_barrierf, %arg1, %r13219, %r13214
	br          .L2946

.L2941:
	load.64     %r13231 <- 16[%arg1]
	load.64     %r13235 <- -16[%r13231]
	store.64    %r13235 -> 0[%r13190]
	load.32     %r13238 <- -8[%r13231]
	store.32    %r13238 -> 8[%r13190]
	setlt.32    %r13242 <- %arg2, $0xffffd8ee
	br          %r13242, .L2947, .L2946

.L2947:
	load.64     %r13244 <- 16[%arg1]
	load.32     %r13246 <- -8[%r13244]
	setge.32    %r13247 <- %r13246, $4
	br          %r13247, .L2952, .L2946

.L2952:
	load.64     %r13251 <- -16[%r13244]
	load.8      %r13252 <- 9[%r13251]
	cast.32     %r13253 <- (8) %r13252
	and.32      %r13254 <- %r13253, $3
	br          %r13254, .L2951, .L2946

.L2951:
	load.64     %r13256 <- 40[%arg1]
	load.64     %r13257 <- 8[%r13256]
	load.64     %r13258 <- 0[%r13257]
	ptrcast.64  %r13260 <- (64) %r13258
	load.8      %r13261 <- 9[%r13260]
	cast.32     %r13262 <- (8) %r13261
	and.32      %r13263 <- %r13262, $4
	br          %r13263, .L2949, .L2946

.L2949:
	ptrcast.64  %r13270 <- (64) %r13258
	call        luaC_barrierf, %arg1, %r13270, %r13251
	br          .L2946

.L2946:
	load.64     %r13276 <- 16[%arg1]
	add.64      %r13277 <- %r13276, $-16
	store.64    %r13277 -> 16[%arg1]
	ret


lua_pushvalue:
.L2954:
	<entry-point>
	call.64     %r13280 <- index2adr, %arg1, %arg2
	load.64     %r13282 <- 16[%arg1]
	load.64     %r13284 <- 0[%r13280]
	store.64    %r13284 -> 0[%r13282]
	load.32     %r13287 <- 8[%r13280]
	store.32    %r13287 -> 8[%r13282]
	load.64     %r13292 <- 16[%arg1]
	add.64      %r13293 <- %r13292, $16
	store.64    %r13293 -> 16[%arg1]
	ret


lua_type:
.L2956:
	<entry-point>
	call.64     %r13296 <- index2adr, %arg1, %arg2
	symaddr.64  %r13298 <- luaO_nilobject_
	seteq.32    %r13299 <- %r13296, %r13298
	br          %r13299, .L2958, .L2959

.L2958:
	phisrc.32   %phi2073 <- $0xffffffff
	br          .L2960

.L2959:
	load.32     %r13301 <- 8[%r13296]
	phisrc.32   %phi2074 <- %r13301
	br          .L2960

.L2960:
	phi.32      %r13302 <- %phi2073, %phi2074
	ret.32      %r13302


lua_typename:
.L2961:
	<entry-point>
	seteq.32    %r13306 <- %arg2, $0xffffffff
	br          %r13306, .L2963, .L2964

.L2963:
	symaddr.64  %r13307 <- <anon symbol:0x62d001405038>
	ptrcast.64  %r13308 <- (64) %r13307
	phisrc.64   %phi2076 <- %r13308
	br          .L2965

.L2964:
	symaddr.64  %r13309 <- luaT_typenames
	scast.64    %r13311 <- (32) %arg2
	muls.64     %r13312 <- %r13311, $8
	add.64      %r13313 <- %r13309, %r13312
	load.64     %r13314 <- 0[%r13313]
	ptrcast.64  %r13315 <- (64) %r13314
	phisrc.64   %phi2077 <- %r13315
	br          .L2965

.L2965:
	phi.64      %r13316 <- %phi2076, %phi2077
	ret.64      %r13316


lua_iscfunction:
.L2966:
	<entry-point>
	call.64     %r13320 <- index2adr, %arg1, %arg2
	load.32     %r13322 <- 8[%r13320]
	seteq.32    %r13323 <- %r13322, $6
	br          %r13323, .L2968, .L2969

.L2968:
	load.64     %r13325 <- 0[%r13320]
	load.8      %r13326 <- 10[%r13325]
	phisrc.32   %phi2079 <- %r13326
	br          .L2970

.L2969:
	phisrc.32   %phi2080 <- $0
	br          .L2970

.L2970:
	phi.32      %r13327 <- %phi2079, %phi2080
	ret.32      %r13327


lua_isnumber:
.L2971:
	<entry-point>
	call.64     %r13331 <- index2adr, %arg1, %arg2
	load.32     %r13333 <- 8[%r13331]
	seteq.32    %r13335 <- %r13333, $3
	br          %r13335, .L2973, .L2974

.L2973:
	phisrc.32   %phi2082 <- $1
	br          .L2975

.L2974:
	symaddr.64  %r13337 <- n
	call.64     %r13338 <- luaV_tonumber, %r13331, %r13337
	setne.32    %r13339 <- %r13338, $0
	phisrc.32   %phi2083 <- %r13339
	br          .L2975

.L2975:
	phi.32      %r13340 <- %phi2082, %phi2083
	ret.32      %r13340


lua_isstring:
.L2976:
	<entry-point>
	call.32     %r13344 <- lua_type, %arg1, %arg2
	seteq.32    %r13346 <- %r13344, $4
	seteq.32    %r13348 <- %r13344, $3
	or-bool.32  %r13349 <- %r13346, %r13348
	ret.32      %r13349


lua_rawequal:
.L2978:
	<entry-point>
	call.64     %r13353 <- index2adr, %arg1, %arg2
	call.64     %r13356 <- index2adr, %arg1, %arg3
	symaddr.64  %r13358 <- luaO_nilobject_
	seteq.32    %r13359 <- %r13353, %r13358
	seteq.32    %r13362 <- %r13356, %r13358
	or-bool.32  %r13363 <- %r13359, %r13362
	br          %r13363, .L2980, .L2981

.L2980:
	phisrc.32   %phi2087 <- $0
	br          .L2982

.L2981:
	call.32     %r13366 <- luaO_rawequalObj, %r13353, %r13356
	phisrc.32   %phi2088 <- %r13366
	br          .L2982

.L2982:
	phi.32      %r13367 <- %phi2087, %phi2088
	ret.32      %r13367


lua_lessthan:
.L2983:
	<entry-point>
	call.64     %r13371 <- index2adr, %arg1, %arg2
	call.64     %r13374 <- index2adr, %arg1, %arg3
	symaddr.64  %r13376 <- luaO_nilobject_
	seteq.32    %r13377 <- %r13371, %r13376
	seteq.32    %r13380 <- %r13374, %r13376
	or-bool.32  %r13381 <- %r13377, %r13380
	br          %r13381, .L2984, .L2985

.L2984:
	phisrc.32   %phi2090 <- $0
	br          .L2986

.L2985:
	call.32     %r13385 <- luaV_lessthan, %arg1, %r13371, %r13374
	phisrc.32   %phi2091 <- %r13385
	br          .L2986

.L2986:
	phi.32      %r13386 <- %phi2090, %phi2091
	ret.32      %r13386


lua_tonumber:
.L2988:
	<entry-point>
	call.64     %r13391 <- index2adr, %arg1, %arg2
	load.32     %r13393 <- 8[%r13391]
	seteq.32    %r13395 <- %r13393, $3
	phisrc.64   %phi2095(o) <- %r13391
	br          %r13395, .L2989, .L2991

.L2991:
	symaddr.64  %r13397 <- n
	call.64     %r13398 <- luaV_tonumber, %r13391, %r13397
	phisrc.64   %phi2096(o) <- %r13398
	br          %r13398, .L2989, .L2990

.L2989:
	phi.64      %r13400 <- %phi2095(o), %phi2096(o)
	load.64     %r13401 <- 0[%r13400]
	phisrc.64   %phi2093(return) <- %r13401
	br          .L2992

.L2990:
	set.64      %r13404 <- 0.000000
	phisrc.64   %phi2094(return) <- %r13404
	br          .L2992

.L2992:
	phi.64      %r13403 <- %phi2093(return), %phi2094(return)
	ret.64      %r13403


lua_tointeger:
.L2994:
	<entry-point>
	call.64     %r13407 <- index2adr, %arg1, %arg2
	load.32     %r13409 <- 8[%r13407]
	seteq.32    %r13411 <- %r13409, $3
	phisrc.64   %phi2100(o) <- %r13407
	br          %r13411, .L2995, .L2997

.L2997:
	symaddr.64  %r13413 <- n
	call.64     %r13414 <- luaV_tonumber, %r13407, %r13413
	phisrc.64   %phi2101(o) <- %r13414
	br          %r13414, .L2995, .L2996

.L2995:
	phi.64      %r13416 <- %phi2100(o), %phi2101(o)
	load.64     %r13417 <- 0[%r13416]
	phisrc.64   %phi2098(return) <- %r13417
	br          .L2998

.L2996:
	phisrc.64   %phi2099(return) <- $0
	br          .L2998

.L2998:
	phi.64      %r13422 <- %phi2098(return), %phi2099(return)
	ret.64      %r13422


lua_toboolean:
.L3000:
	<entry-point>
	call.64     %r13425 <- index2adr, %arg1, %arg2
	load.32     %r13427 <- 8[%r13425]
	br          %r13427, .L3003, .L3002

.L3002:
	phisrc.32   %phi2103 <- $1
	br          .L3004

.L3003:
	seteq.32    %r13433 <- %r13427, $1
	br          %r13433, .L3005, .L3006

.L3005:
	load.32     %r13435 <- 0[%r13425]
	seteq.32    %r13437 <- %r13435, $0
	phisrc.32   %phi2104 <- %r13437
	br          .L3007

.L3006:
	phisrc.32   %phi2105 <- $0
	br          .L3007

.L3007:
	phi.32      %r13438 <- %phi2104, %phi2105
	phisrc.32   %phi2106 <- %r13438
	br          .L3004

.L3004:
	phi.32      %r13439 <- %phi2103, %phi2106
	seteq.32    %r13440 <- %r13439, $0
	ret.32      %r13440


lua_tolstring:
.L3008:
	<entry-point>
	call.64     %r13444 <- index2adr, %arg1, %arg2
	load.32     %r13446 <- 8[%r13444]
	seteq.32    %r13447 <- %r13446, $4
	phisrc.64   %phi2111(o) <- %r13444
	phisrc.64   %phi2114(o) <- %r13444
	br          %r13447, .L3010, .L3009

.L3009:
	call.32     %r13450 <- luaV_tostring, %arg1, %r13444
	br          %r13450, .L3012, .L3011

.L3011:
	br          %arg3, .L3013, .L3014

.L3013:
	store.64    $0 -> 0[%arg3]
	br          .L3014

.L3014:
	phisrc.64   %phi2109(return) <- $0
	br          .L3015

.L3012:
	load.64     %r13456 <- 32[%arg1]
	load.64     %r13457 <- 120[%r13456]
	load.64     %r13460 <- 112[%r13456]
	setae.32    %r13461 <- %r13457, %r13460
	br          %r13461, .L3016, .L3017

.L3016:
	call        luaC_step, %arg1
	br          .L3017

.L3017:
	call.64     %r13465 <- index2adr, %arg1, %arg2
	phisrc.64   %phi2112(o) <- %r13465
	phisrc.64   %phi2115(o) <- %r13465
	br          .L3010

.L3010:
	br          %arg3, .L3018, .L3019

.L3018:
	phi.64      %r13468 <- %phi2114(o), %phi2115(o)
	load.64     %r13469 <- 0[%r13468]
	load.64     %r13470 <- 16[%r13469]
	store.64    %r13470 -> 0[%arg3]
	phisrc.64   %phi2113(o) <- %r13468
	br          .L3019

.L3019:
	phi.64      %r13472 <- %phi2111(o), %phi2112(o), %phi2113(o)
	load.64     %r13473 <- 0[%r13472]
	add.64      %r13475 <- %r13473, $24
	ptrcast.64  %r13476 <- (64) %r13475
	phisrc.64   %phi2110(return) <- %r13476
	br          .L3015

.L3015:
	phi.64      %r13454 <- %phi2109(return), %phi2110(return)
	ret.64      %r13454


lua_objlen:
.L3020:
	<entry-point>
	call.64     %r13479 <- index2adr, %arg1, %arg2
	load.32     %r13481 <- 8[%r13479]
	switch      %r13481, 3 -> .L3025, 4 -> .L3022, 5 -> .L3024, 7 -> .L3023, default -> .L3026

.L3022:
	load.64     %r13483 <- 0[%r13479]
	load.64     %r13484 <- 16[%r13483]
	phisrc.64   %phi2117(return) <- %r13484
	br          .L3027

.L3023:
	load.64     %r13487 <- 0[%r13479]
	load.64     %r13488 <- 32[%r13487]
	phisrc.64   %phi2118(return) <- %r13488
	br          .L3027

.L3024:
	load.64     %r13490 <- 0[%r13479]
	call.32     %r13492 <- luaH_getn, %r13490
	scast.64    %r13493 <- (32) %r13492
	phisrc.64   %phi2119(return) <- %r13493
	br          .L3027

.L3025:
	call.32     %r13496 <- luaV_tostring, %arg1, %r13479
	br          %r13496, .L3028, .L3029

.L3028:
	load.64     %r13498 <- 0[%r13479]
	load.64     %r13499 <- 16[%r13498]
	phisrc.64   %phi2120 <- %r13499
	br          .L3030

.L3029:
	phisrc.64   %phi2121 <- $0
	br          .L3030

.L3030:
	phi.64      %r13500 <- %phi2120, %phi2121
	phisrc.64   %phi2122(return) <- %r13500
	br          .L3027

.L3026:
	phisrc.64   %phi2123(return) <- $0
	br          .L3027

.L3027:
	phi.64      %r13485 <- %phi2117(return), %phi2118(return), %phi2119(return), %phi2122(return), %phi2123(return)
	ret.64      %r13485


lua_tocfunction:
.L3031:
	<entry-point>
	call.64     %r13504 <- index2adr, %arg1, %arg2
	load.32     %r13506 <- 8[%r13504]
	seteq.32    %r13507 <- %r13506, $6
	br          %r13507, .L3036, .L3033

.L3036:
	load.64     %r13509 <- 0[%r13504]
	load.8      %r13510 <- 10[%r13509]
	br          %r13510, .L3034, .L3033

.L3033:
	phisrc.64   %phi2124 <- $0
	br          .L3035

.L3034:
	load.64     %r13513 <- 32[%r13509]
	phisrc.64   %phi2125 <- %r13513
	br          .L3035

.L3035:
	phi.64      %r13514 <- %phi2124, %phi2125
	ret.64      %r13514


lua_touserdata:
.L3037:
	<entry-point>
	call.64     %r13518 <- index2adr, %arg1, %arg2
	load.32     %r13520 <- 8[%r13518]
	switch      %r13520, 2 -> .L3040, 7 -> .L3039, default -> .L3041

.L3039:
	load.64     %r13522 <- 0[%r13518]
	add.64      %r13524 <- %r13522, $40
	cast.64     %r13525 <- (64) %r13524
	phisrc.64   %phi2128(return) <- %r13525
	br          .L3042

.L3040:
	load.64     %r13528 <- 0[%r13518]
	phisrc.64   %phi2129(return) <- %r13528
	br          .L3042

.L3041:
	phisrc.64   %phi2130(return) <- $0
	br          .L3042

.L3042:
	phi.64      %r13526 <- %phi2128(return), %phi2129(return), %phi2130(return)
	ret.64      %r13526


lua_pushnil:
.L3043:
	<entry-point>
	load.64     %r13530 <- 16[%arg1]
	store.32    $0 -> 8[%r13530]
	load.64     %r13533 <- 16[%arg1]
	add.64      %r13534 <- %r13533, $16
	store.64    %r13534 -> 16[%arg1]
	ret


lua_pushnumber:
.L3045:
	<entry-point>
	load.64     %r13536 <- 16[%arg1]
	store.64    %arg2 -> 0[%r13536]
	store.32    $3 -> 8[%r13536]
	load.64     %r13542 <- 16[%arg1]
	add.64      %r13543 <- %r13542, $16
	store.64    %r13543 -> 16[%arg1]
	ret


lua_pushinteger:
.L3047:
	<entry-point>
	load.64     %r13545 <- 16[%arg1]
	fpcast.64   %r13547 <- (64) %arg2
	store.64    %r13547 -> 0[%r13545]
	store.32    $3 -> 8[%r13545]
	load.64     %r13552 <- 16[%arg1]
	add.64      %r13553 <- %r13552, $16
	store.64    %r13553 -> 16[%arg1]
	ret


lua_pushlstring:
.L3049:
	<entry-point>
	load.64     %r13555 <- 32[%arg1]
	load.64     %r13556 <- 120[%r13555]
	load.64     %r13559 <- 112[%r13555]
	setae.32    %r13560 <- %r13556, %r13559
	br          %r13560, .L3050, .L3051

.L3050:
	call        luaC_step, %arg1
	br          .L3051

.L3051:
	load.64     %r13563 <- 16[%arg1]
	call.64     %r13567 <- luaS_newlstr, %arg1, %arg2, %arg3
	ptrcast.64  %r13568 <- (64) %r13567
	store.64    %r13568 -> 0[%r13563]
	store.32    $4 -> 8[%r13563]
	load.64     %r13573 <- 16[%arg1]
	add.64      %r13574 <- %r13573, $16
	store.64    %r13574 -> 16[%arg1]
	ret


lua_pushstring:
.L3053:
	<entry-point>
	br          %arg2, .L3055, .L3054

.L3054:
	call        lua_pushnil, %arg1
	br          .L3056

.L3055:
	call.64     %r13581 <- strlen, %arg2
	call        lua_pushlstring, %arg1, %arg2, %r13581
	br          .L3056

.L3056:
	ret


lua_pushvfstring:
.L3057:
	<entry-point>
	load.64     %r13583 <- 32[%arg1]
	load.64     %r13584 <- 120[%r13583]
	load.64     %r13587 <- 112[%r13583]
	setae.32    %r13588 <- %r13584, %r13587
	br          %r13588, .L3058, .L3059

.L3058:
	call        luaC_step, %arg1
	br          .L3059

.L3059:
	call.64     %r13593 <- luaO_pushvfstring, %arg1, %arg2, %arg3
	ret.64      %r13593


lua_pushfstring:
.L3061:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	load.64     %r13597 <- 32[%arg1]
	load.64     %r13598 <- 120[%r13597]
	load.64     %r13601 <- 112[%r13597]
	setae.32    %r13602 <- %r13598, %r13601
	phisrc.64   %phi2133(fmt) <- %arg2
	phisrc.64   %phi2134 <- %arg2
	phisrc.64   %phi2135 <- %arg2
	br          %r13602, .L3062, .L3063

.L3062:
	call        luaC_step, %arg1
	br          .L3063

.L3063:
	symaddr.64  %r13604 <- fmt
	cast.64     %r13605 <- (64) %r13604
	load.64     %r13607 <- 0[fmt]
	call.64     %r13609 <- luaO_pushvfstring, %arg1, %r13607, %r13605
	ret.64      %r13609


lua_pushcclosure:
.L3065:
	<entry-point>
	load.64     %r13613 <- 32[%arg1]
	load.64     %r13614 <- 120[%r13613]
	load.64     %r13617 <- 112[%r13613]
	setae.32    %r13618 <- %r13614, %r13617
	br          %r13618, .L3066, .L3067

.L3066:
	call        luaC_step, %arg1
	br          .L3067

.L3067:
	call.64     %r13624 <- getcurrenv, %arg1
	call.64     %r13625 <- luaF_newCclosure, %arg1, %arg3, %r13624
	store.64    %arg2 -> 32[%r13625]
	scast.64    %r13629 <- (32) %arg3
	muls.64     %r13630 <- %r13629, $16
	load.64     %r13632 <- 16[%arg1]
	cast.64     %r13633 <- (64) %r13632
	sub.64      %r13634 <- %r13633, %r13630
	ptrcast.64  %r13635 <- (64) %r13634
	store.64    %r13635 -> 16[%arg1]
	phisrc.32   %phi2137(n) <- %arg3
	phisrc.64   %phi2140 <- %r13635
	phisrc.64   %phi2141 <- %r13635
	phisrc.64   %phi2142 <- %r13635
	phisrc.64   %phi2143 <- %r13635
	br          .L3071

.L3071:
	phi.32      %r13636 <- %phi2137(n), %phi2138(n)
	add.32      %r13637(n) <- %r13636, $-1
	phisrc.32   %phi2138(n) <- %r13637(n)
	br          %r13636, .L3068, .L3070

.L3068:
	load.64     %r13639 <- 16[%arg1]
	scast.64    %r13641 <- (32) %r13637(n)
	muls.64     %r13642 <- %r13641, $16
	add.64      %r13643 <- %r13639, %r13642
	add.64      %r13646 <- %r13625, $40
	add.64      %r13650 <- %r13646, %r13642
	load.64     %r13652 <- 0[%r13643]
	store.64    %r13652 -> 0[%r13650]
	load.32     %r13655 <- 8[%r13643]
	store.32    %r13655 -> 8[%r13650]
	br          .L3071

.L3070:
	load.64     %r13659 <- 16[%arg1]
	ptrcast.64  %r13661 <- (64) %r13625
	store.64    %r13661 -> 0[%r13659]
	store.32    $6 -> 8[%r13659]
	load.64     %r13666 <- 16[%arg1]
	add.64      %r13667 <- %r13666, $16
	store.64    %r13667 -> 16[%arg1]
	ret


lua_pushboolean:
.L3073:
	<entry-point>
	load.64     %r13669 <- 16[%arg1]
	setne.32    %r13671 <- %arg2, $0
	store.32    %r13671 -> 0[%r13669]
	store.32    $1 -> 8[%r13669]
	load.64     %r13676 <- 16[%arg1]
	add.64      %r13677 <- %r13676, $16
	store.64    %r13677 -> 16[%arg1]
	ret


lua_pushthread:
.L3075:
	<entry-point>
	load.64     %r13679 <- 16[%arg1]
	ptrcast.64  %r13681 <- (64) %arg1
	store.64    %r13681 -> 0[%r13679]
	store.32    $8 -> 8[%r13679]
	load.64     %r13686 <- 16[%arg1]
	add.64      %r13687 <- %r13686, $16
	store.64    %r13687 -> 16[%arg1]
	load.64     %r13689 <- 32[%arg1]
	load.64     %r13690 <- 176[%r13689]
	seteq.32    %r13692 <- %r13690, %arg1
	ret.32      %r13692


lua_gettable:
.L3077:
	<entry-point>
	call.64     %r13696 <- index2adr, %arg1, %arg2
	load.64     %r13701 <- 16[%arg1]
	add.64      %r13702 <- %r13701, $-16
	call        luaV_gettable, %arg1, %r13696, %r13702, %r13702
	ret


lua_getfield:
.L3079:
	<entry-point>
	call.64     %r13708 <- index2adr, %arg1, %arg2
	call.64     %r13714 <- strlen, %arg3
	call.64     %r13715 <- luaS_newlstr, %arg1, %arg3, %r13714
	ptrcast.64  %r13716 <- (64) %r13715
	store.64    %r13716 -> 0[key]
	store.32    $4 -> 8[key]
	symaddr.64  %r13721 <- key
	load.64     %r13723 <- 16[%arg1]
	call        luaV_gettable, %arg1, %r13708, %r13721, %r13723
	load.64     %r13726 <- 16[%arg1]
	add.64      %r13727 <- %r13726, $16
	store.64    %r13727 -> 16[%arg1]
	ret


lua_rawget:
.L3081:
	<entry-point>
	call.64     %r13730 <- index2adr, %arg1, %arg2
	load.64     %r13733 <- 0[%r13730]
	load.64     %r13736 <- 16[%arg1]
	add.64      %r13737 <- %r13736, $-16
	call.64     %r13738 <- luaH_get, %r13733, %r13737
	load.64     %r13740 <- 16[%arg1]
	load.64     %r13743 <- 0[%r13738]
	store.64    %r13743 -> -16[%r13740]
	load.32     %r13746 <- 8[%r13738]
	store.32    %r13746 -> -8[%r13740]
	ret


lua_rawgeti:
.L3083:
	<entry-point>
	call.64     %r13751 <- index2adr, %arg1, %arg2
	load.64     %r13754 <- 0[%r13751]
	call.64     %r13757 <- luaH_getnum, %r13754, %arg3
	load.64     %r13759 <- 16[%arg1]
	load.64     %r13761 <- 0[%r13757]
	store.64    %r13761 -> 0[%r13759]
	load.32     %r13764 <- 8[%r13757]
	store.32    %r13764 -> 8[%r13759]
	load.64     %r13769 <- 16[%arg1]
	add.64      %r13770 <- %r13769, $16
	store.64    %r13770 -> 16[%arg1]
	ret


lua_createtable:
.L3085:
	<entry-point>
	load.64     %r13772 <- 32[%arg1]
	load.64     %r13773 <- 120[%r13772]
	load.64     %r13776 <- 112[%r13772]
	setae.32    %r13777 <- %r13773, %r13776
	br          %r13777, .L3086, .L3087

.L3086:
	call        luaC_step, %arg1
	br          .L3087

.L3087:
	load.64     %r13780 <- 16[%arg1]
	call.64     %r13784 <- luaH_new, %arg1, %arg2, %arg3
	ptrcast.64  %r13785 <- (64) %r13784
	store.64    %r13785 -> 0[%r13780]
	store.32    $5 -> 8[%r13780]
	load.64     %r13790 <- 16[%arg1]
	add.64      %r13791 <- %r13790, $16
	store.64    %r13791 -> 16[%arg1]
	ret


lua_getmetatable:
.L3089:
	<entry-point>
	call.64     %r13794 <- index2adr, %arg1, %arg2
	load.32     %r13796 <- 8[%r13794]
	switch      %r13796, 5 -> .L3091, 7 -> .L3092, default -> .L3093

.L3091:
	load.64     %r13798 <- 0[%r13794]
	load.64     %r13799(mt) <- 16[%r13798]
	phisrc.64   %phi2147(mt) <- %r13799(mt)
	br          .L3090

.L3092:
	load.64     %r13801 <- 0[%r13794]
	load.64     %r13802 <- 16[%r13801]
	phisrc.64   %phi2148(mt) <- %r13802
	br          .L3090

.L3093:
	load.64     %r13804 <- 32[%arg1]
	add.64      %r13805 <- %r13804, $224
	scast.64    %r13808 <- (32) %r13796
	muls.64     %r13809 <- %r13808, $8
	add.64      %r13810 <- %r13805, %r13809
	load.64     %r13811 <- 0[%r13810]
	phisrc.64   %phi2149(mt) <- %r13811
	br          .L3090

.L3090:
	phi.64      %r13812(mt) <- %phi2147(mt), %phi2148(mt), %phi2149(mt)
	setne.32    %r13824 <- %r13812(mt), $0
	br          %r13812(mt), .L3095, .L3097

.L3095:
	load.64     %r13815 <- 16[%arg1]
	ptrcast.64  %r13817 <- (64) %r13812(mt)
	store.64    %r13817 -> 0[%r13815]
	store.32    $5 -> 8[%r13815]
	load.64     %r13822 <- 16[%arg1]
	add.64      %r13823 <- %r13822, $16
	store.64    %r13823 -> 16[%arg1]
	br          .L3097

.L3097:
	ret.32      %r13824


lua_getfenv:
.L3098:
	<entry-point>
	call.64     %r13828 <- index2adr, %arg1, %arg2
	load.32     %r13831 <- 8[%r13828]
	switch      %r13831, 6 -> .L3100, 7 -> .L3101, 8 -> .L3102, default -> .L3103

.L3100:
	load.64     %r13833 <- 16[%arg1]
	load.64     %r13835 <- 0[%r13828]
	load.64     %r13836 <- 24[%r13835]
	ptrcast.64  %r13837 <- (64) %r13836
	store.64    %r13837 -> 0[%r13833]
	store.32    $5 -> 8[%r13833]
	br          .L3099

.L3101:
	load.64     %r13841 <- 16[%arg1]
	load.64     %r13843 <- 0[%r13828]
	load.64     %r13844 <- 24[%r13843]
	ptrcast.64  %r13845 <- (64) %r13844
	store.64    %r13845 -> 0[%r13841]
	store.32    $5 -> 8[%r13841]
	br          .L3099

.L3102:
	load.64     %r13849 <- 0[%r13828]
	load.64     %r13853 <- 16[%arg1]
	load.64     %r13855 <- 120[%r13849]
	store.64    %r13855 -> 0[%r13853]
	load.32     %r13858 <- 128[%r13849]
	store.32    %r13858 -> 8[%r13853]
	br          .L3099

.L3103:
	load.64     %r13862 <- 16[%arg1]
	store.32    $0 -> 8[%r13862]
	br          .L3099

.L3099:
	load.64     %r13865 <- 16[%arg1]
	add.64      %r13866 <- %r13865, $16
	store.64    %r13866 -> 16[%arg1]
	ret


lua_settable:
.L3105:
	<entry-point>
	call.64     %r13870 <- index2adr, %arg1, %arg2
	load.64     %r13875 <- 16[%arg1]
	add.64      %r13876 <- %r13875, $-32
	add.64      %r13879 <- %r13875, $-16
	call        luaV_settable, %arg1, %r13870, %r13876, %r13879
	load.64     %r13881 <- 16[%arg1]
	cast.64     %r13882 <- (64) %r13881
	add.64      %r13883 <- %r13882, $-32
	ptrcast.64  %r13884 <- (64) %r13883
	store.64    %r13884 -> 16[%arg1]
	ret


lua_setfield:
.L3107:
	<entry-point>
	call.64     %r13888 <- index2adr, %arg1, %arg2
	call.64     %r13894 <- strlen, %arg3
	call.64     %r13895 <- luaS_newlstr, %arg1, %arg3, %r13894
	ptrcast.64  %r13896 <- (64) %r13895
	store.64    %r13896 -> 0[key]
	store.32    $4 -> 8[key]
	symaddr.64  %r13901 <- key
	load.64     %r13903 <- 16[%arg1]
	add.64      %r13904 <- %r13903, $-16
	call        luaV_settable, %arg1, %r13888, %r13901, %r13904
	load.64     %r13906 <- 16[%arg1]
	add.64      %r13907 <- %r13906, $-16
	store.64    %r13907 -> 16[%arg1]
	ret


lua_rawset:
.L3109:
	<entry-point>
	call.64     %r13911 <- index2adr, %arg1, %arg2
	load.64     %r13914 <- 16[%arg1]
	load.64     %r13918 <- 0[%r13911]
	add.64      %r13922 <- %r13914, $-32
	call.64     %r13923 <- luaH_set, %arg1, %r13918, %r13922
	load.64     %r13925 <- -16[%r13914]
	store.64    %r13925 -> 0[%r13923]
	load.32     %r13928 <- -8[%r13914]
	store.32    %r13928 -> 8[%r13923]
	load.64     %r13932 <- 16[%arg1]
	load.32     %r13934 <- -8[%r13932]
	setge.32    %r13935 <- %r13934, $4
	phisrc.64   %phi2153 <- %r13932
	phisrc.64   %phi2158 <- %r13932
	phisrc.64   %phi2159 <- %r13932
	phisrc.64   %phi2160 <- %r13932
	phisrc.64   %phi2161 <- %r13932
	br          %r13935, .L3113, .L3111

.L3113:
	load.64     %r13939 <- -16[%r13932]
	load.8      %r13940 <- 9[%r13939]
	cast.32     %r13941 <- (8) %r13940
	and.32      %r13942 <- %r13941, $3
	phisrc.64   %phi2154 <- %r13932
	phisrc.64   %phi2155 <- %r13932
	br          %r13942, .L3112, .L3111

.L3112:
	load.64     %r13944 <- 0[%r13911]
	ptrcast.64  %r13946 <- (64) %r13944
	load.8      %r13947 <- 9[%r13946]
	cast.32     %r13948 <- (8) %r13947
	and.32      %r13949 <- %r13948, $4
	br          %r13949, .L3110, .L3111

.L3110:
	call        luaC_barrierback, %arg1, %r13944
	br          .L3111

.L3111:
	load.64     %r13955 <- 16[%arg1]
	cast.64     %r13956 <- (64) %r13955
	add.64      %r13957 <- %r13956, $-32
	ptrcast.64  %r13958 <- (64) %r13957
	store.64    %r13958 -> 16[%arg1]
	ret


lua_rawseti:
.L3115:
	<entry-point>
	call.64     %r13962 <- index2adr, %arg1, %arg2
	load.64     %r13965 <- 16[%arg1]
	load.64     %r13969 <- 0[%r13962]
	call.64     %r13972 <- luaH_setnum, %arg1, %r13969, %arg3
	load.64     %r13974 <- -16[%r13965]
	store.64    %r13974 -> 0[%r13972]
	load.32     %r13977 <- -8[%r13965]
	store.32    %r13977 -> 8[%r13972]
	load.64     %r13981 <- 16[%arg1]
	load.32     %r13983 <- -8[%r13981]
	setge.32    %r13984 <- %r13983, $4
	phisrc.64   %phi2162 <- %r13981
	phisrc.64   %phi2167 <- %r13981
	phisrc.64   %phi2168 <- %r13981
	phisrc.64   %phi2169 <- %r13981
	phisrc.64   %phi2170 <- %r13981
	br          %r13984, .L3119, .L3117

.L3119:
	load.64     %r13988 <- -16[%r13981]
	load.8      %r13989 <- 9[%r13988]
	cast.32     %r13990 <- (8) %r13989
	and.32      %r13991 <- %r13990, $3
	phisrc.64   %phi2163 <- %r13981
	phisrc.64   %phi2164 <- %r13981
	br          %r13991, .L3118, .L3117

.L3118:
	load.64     %r13993 <- 0[%r13962]
	ptrcast.64  %r13995 <- (64) %r13993
	load.8      %r13996 <- 9[%r13995]
	cast.32     %r13997 <- (8) %r13996
	and.32      %r13998 <- %r13997, $4
	br          %r13998, .L3116, .L3117

.L3116:
	call        luaC_barrierback, %arg1, %r13993
	br          .L3117

.L3117:
	load.64     %r14004 <- 16[%arg1]
	add.64      %r14005 <- %r14004, $-16
	store.64    %r14005 -> 16[%arg1]
	ret


lua_setmetatable:
.L3121:
	<entry-point>
	call.64     %r14009 <- index2adr, %arg1, %arg2
	load.64     %r14012 <- 16[%arg1]
	load.32     %r14014 <- -8[%r14012]
	br          %r14014, .L3123, .L3122

.L3122:
	phisrc.64   %phi2179(mt) <- $0
	br          .L3124

.L3123:
	load.64     %r14020 <- -16[%r14012]
	phisrc.64   %phi2180(mt) <- %r14020
	br          .L3124

.L3124:
	load.32     %r14023 <- 8[%r14009]
	phi.64      %r14024 <- %phi2179(mt), %phi2180(mt)
	switch      %r14023, 5 -> .L3126, 7 -> .L3127, default -> .L3128

.L3126:
	load.64     %r14026 <- 0[%r14009]
	store.64    %r14024 -> 16[%r14026]
	br          %r14024, .L3129, .L3125

.L3129:
	ptrcast.64  %r14029 <- (64) %r14024
	load.8      %r14030 <- 9[%r14029]
	cast.32     %r14031 <- (8) %r14030
	and.32      %r14032 <- %r14031, $3
	br          %r14032, .L3133, .L3125

.L3133:
	load.64     %r14034 <- 0[%r14009]
	ptrcast.64  %r14036 <- (64) %r14034
	load.8      %r14037 <- 9[%r14036]
	cast.32     %r14038 <- (8) %r14037
	and.32      %r14039 <- %r14038, $4
	br          %r14039, .L3131, .L3125

.L3131:
	call        luaC_barrierback, %arg1, %r14034
	br          .L3125

.L3127:
	load.64     %r14046 <- 0[%r14009]
	store.64    %r14024 -> 16[%r14046]
	br          %r14024, .L3134, .L3125

.L3134:
	ptrcast.64  %r14049 <- (64) %r14024
	load.8      %r14050 <- 9[%r14049]
	cast.32     %r14051 <- (8) %r14050
	and.32      %r14052 <- %r14051, $3
	br          %r14052, .L3138, .L3125

.L3138:
	load.64     %r14054 <- 0[%r14009]
	ptrcast.64  %r14056 <- (64) %r14054
	load.8      %r14057 <- 9[%r14056]
	cast.32     %r14058 <- (8) %r14057
	and.32      %r14059 <- %r14058, $4
	br          %r14059, .L3136, .L3125

.L3136:
	ptrcast.64  %r14064 <- (64) %r14054
	call        luaC_barrierf, %arg1, %r14064, %r14049
	br          .L3125

.L3128:
	load.64     %r14069 <- 32[%arg1]
	add.64      %r14070 <- %r14069, $224
	scast.64    %r14073 <- (32) %r14023
	muls.64     %r14074 <- %r14073, $8
	add.64      %r14075 <- %r14070, %r14074
	store.64    %r14024 -> 0[%r14075]
	br          .L3125

.L3125:
	load.64     %r14077 <- 16[%arg1]
	add.64      %r14078 <- %r14077, $-16
	store.64    %r14078 -> 16[%arg1]
	ret.32      $1


lua_setfenv:
.L3140:
	<entry-point>
	call.64     %r14083 <- index2adr, %arg1, %arg2
	load.32     %r14087 <- 8[%r14083]
	switch      %r14087, 6 -> .L3142, 7 -> .L3143, 8 -> .L3144, default -> .L3147

.L3142:
	load.64     %r14089 <- 16[%arg1]
	load.64     %r14091 <- -16[%r14089]
	load.64     %r14094 <- 0[%r14083]
	store.64    %r14091 -> 24[%r14094]
	br          .L3146

.L3143:
	load.64     %r14096 <- 16[%arg1]
	load.64     %r14098 <- -16[%r14096]
	load.64     %r14101 <- 0[%r14083]
	store.64    %r14098 -> 24[%r14101]
	br          .L3146

.L3144:
	load.64     %r14103 <- 0[%r14083]
	load.64     %r14107 <- 16[%arg1]
	load.64     %r14109 <- -16[%r14107]
	ptrcast.64  %r14111 <- (64) %r14109
	store.64    %r14111 -> 120[%r14103]
	store.32    $5 -> 128[%r14103]
	br          .L3146

.L3146:
	load.64     %r14116 <- 16[%arg1]
	load.64     %r14118 <- -16[%r14116]
	ptrcast.64  %r14120 <- (64) %r14118
	load.8      %r14121 <- 9[%r14120]
	cast.32     %r14122 <- (8) %r14121
	and.32      %r14123 <- %r14122, $3
	phisrc.64   %phi2192 <- %r14116
	phisrc.64   %phi2193 <- %r14116
	br          %r14123, .L3150, .L3147

.L3150:
	load.64     %r14125 <- 0[%r14083]
	ptrcast.64  %r14126 <- (64) %r14125
	load.8      %r14127 <- 9[%r14126]
	cast.32     %r14128 <- (8) %r14127
	and.32      %r14129 <- %r14128, $4
	br          %r14129, .L3148, .L3147

.L3148:
	ptrcast.64  %r14133 <- (64) %r14125
	ptrcast.64  %r14139 <- (64) %r14118
	call        luaC_barrierf, %arg1, %r14133, %r14139
	br          .L3147

.L3147:
	load.64     %r14141 <- 16[%arg1]
	add.64      %r14142 <- %r14141, $-16
	store.64    %r14142 -> 16[%arg1]
	ret.32      $1


lua_call:
.L3152:
	<entry-point>
	load.64     %r14148 <- 16[%arg1]
	add.32      %r14150 <- %arg2, $1
	scast.64    %r14151 <- (32) %r14150
	muls.64     %r14152 <- %r14151, $16
	sub.64      %r14153 <- %r14148, %r14152
	call        luaD_call, %arg1, %r14153, %arg3
	seteq.32    %r14158 <- %arg3, $0xffffffff
	br          %r14158, .L3155, .L3154

.L3155:
	load.64     %r14160 <- 16[%arg1]
	load.64     %r14162 <- 40[%arg1]
	load.64     %r14163 <- 16[%r14162]
	setae.32    %r14164 <- %r14160, %r14163
	br          %r14164, .L3153, .L3154

.L3153:
	store.64    %r14160 -> 16[%r14162]
	br          .L3154

.L3154:
	ret


f_call:
.L3156:
	<entry-point>
	ptrcast.64  %r14170 <- (64) %arg2
	load.64     %r14173 <- 0[%r14170]
	load.32     %r14175 <- 8[%r14170]
	call        luaD_call, %arg1, %r14173, %r14175
	ret


lua_pcall:
.L3158:
	<entry-point>
	br          %arg4, .L3160, .L3159

.L3159:
	phisrc.64   %phi2197(func) <- $0
	br          .L3161

.L3160:
	call.64     %r14182 <- index2adr, %arg1, %arg4
	ptrcast.64  %r14185 <- (64) %r14182
	load.64     %r14187 <- 64[%arg1]
	ptrcast.64  %r14188 <- (64) %r14187
	sub.64      %r14189 <- %r14185, %r14188
	phisrc.64   %phi2198(func) <- %r14189
	br          .L3161

.L3161:
	load.64     %r14191 <- 16[%arg1]
	add.32      %r14193 <- %arg2, $1
	scast.64    %r14194 <- (32) %r14193
	muls.64     %r14195 <- %r14194, $16
	sub.64      %r14196 <- %r14191, %r14195
	store.64    %r14196 -> 0[c]
	store.32    %arg3 -> 8[c]
	symaddr.64  %r14199 <- f_call
	symaddr.64  %r14200 <- c
	cast.64     %r14201 <- (64) %r14200
	ptrcast.64  %r14203 <- (64) %r14196
	load.64     %r14205 <- 64[%arg1]
	ptrcast.64  %r14206 <- (64) %r14205
	sub.64      %r14207 <- %r14203, %r14206
	phi.64      %r14208 <- %phi2197(func), %phi2198(func)
	call.32     %r14209 <- luaD_pcall, %arg1, %r14199, %r14201, %r14207, %r14208
	seteq.32    %r14211 <- %arg3, $0xffffffff
	br          %r14211, .L3164, .L3165

.L3164:
	load.64     %r14213 <- 16[%arg1]
	load.64     %r14215 <- 40[%arg1]
	load.64     %r14216 <- 16[%r14215]
	setae.32    %r14217 <- %r14213, %r14216
	br          %r14217, .L3162, .L3165

.L3162:
	store.64    %r14213 -> 16[%r14215]
	br          .L3165

.L3165:
	ret.32      %r14209


lua_load:
.L3166:
	<entry-point>
	phisrc.64   %phi2202(chunkname) <- %arg4
	br          %arg4, .L3168, .L3167

.L3167:
	symaddr.64  %r14225 <- <anon symbol:0x62d00145ad28>
	phisrc.64   %phi2203(chunkname) <- %r14225
	br          .L3168

.L3168:
	symaddr.64  %r14227 <- z
	call        luaZ_init, %arg1, %r14227, %arg2, %arg3
	phi.64      %r14232 <- %phi2202(chunkname), %phi2203(chunkname)
	call.32     %r14233 <- luaD_protectedparser, %arg1, %r14227, %r14232
	ret.32      %r14233


lua_error:
.L3170:
	<entry-point>
	call        luaG_errormsg, %arg1
	ret.32      $0


lua_next:
.L3172:
	<entry-point>
	call.64     %r14241 <- index2adr, %arg1, %arg2
	load.64     %r14245 <- 0[%r14241]
	load.64     %r14248 <- 16[%arg1]
	add.64      %r14249 <- %r14248, $-16
	call.32     %r14250 <- luaH_next, %arg1, %r14245, %r14249
	br          %r14250, .L3173, .L3174

.L3173:
	load.64     %r14254 <- 16[%arg1]
	add.64      %r14255 <- %r14254, $16
	store.64    %r14255 -> 16[%arg1]
	br          .L3176

.L3174:
	load.64     %r14257 <- 16[%arg1]
	cast.64     %r14258 <- (64) %r14257
	add.64      %r14259 <- %r14258, $-16
	ptrcast.64  %r14260 <- (64) %r14259
	store.64    %r14260 -> 16[%arg1]
	br          .L3176

.L3176:
	ret.32      %r14250


lua_concat:
.L3177:
	<entry-point>
	setge.32    %r14265 <- %arg2, $2
	br          %r14265, .L3178, .L3179

.L3178:
	load.64     %r14267 <- 32[%arg1]
	load.64     %r14268 <- 120[%r14267]
	load.64     %r14271 <- 112[%r14267]
	setae.32    %r14272 <- %r14268, %r14271
	br          %r14272, .L3180, .L3181

.L3180:
	call        luaC_step, %arg1
	br          .L3181

.L3181:
	load.64     %r14277 <- 16[%arg1]
	load.64     %r14279 <- 24[%arg1]
	sub.64      %r14280 <- %r14277, %r14279
	divs.64     %r14281 <- %r14280, $16
	scast.32    %r14282 <- (64) %r14281
	add.32      %r14283 <- %r14282, $-1
	call        luaV_concat, %arg1, %arg2, %r14283
	add.32      %r14285 <- %arg2, $-1
	scast.64    %r14286 <- (32) %r14285
	muls.64     %r14287 <- %r14286, $16
	load.64     %r14289 <- 16[%arg1]
	cast.64     %r14290 <- (64) %r14289
	sub.64      %r14291 <- %r14290, %r14287
	ptrcast.64  %r14292 <- (64) %r14291
	store.64    %r14292 -> 16[%arg1]
	br          .L3182

.L3179:
	br          %arg2, .L3182, .L3183

.L3183:
	load.64     %r14296 <- 16[%arg1]
	symaddr.64  %r14298 <- <anon symbol:0x62d00145c770>
	call.64     %r14299 <- luaS_newlstr, %arg1, %r14298, $0
	ptrcast.64  %r14300 <- (64) %r14299
	store.64    %r14300 -> 0[%r14296]
	store.32    $4 -> 8[%r14296]
	load.64     %r14305 <- 16[%arg1]
	add.64      %r14306 <- %r14305, $16
	store.64    %r14306 -> 16[%arg1]
	br          .L3182

.L3182:
	ret


lua_newuserdata:
.L3185:
	<entry-point>
	load.64     %r14308 <- 32[%arg1]
	load.64     %r14309 <- 120[%r14308]
	load.64     %r14312 <- 112[%r14308]
	setae.32    %r14313 <- %r14309, %r14312
	br          %r14313, .L3186, .L3187

.L3186:
	call        luaC_step, %arg1
	br          .L3187

.L3187:
	call.64     %r14318 <- getcurrenv, %arg1
	call.64     %r14319 <- luaS_newudata, %arg1, %arg2, %r14318
	load.64     %r14321 <- 16[%arg1]
	ptrcast.64  %r14323 <- (64) %r14319
	store.64    %r14323 -> 0[%r14321]
	store.32    $7 -> 8[%r14321]
	load.64     %r14328 <- 16[%arg1]
	add.64      %r14329 <- %r14328, $16
	store.64    %r14329 -> 16[%arg1]
	add.64      %r14331 <- %r14319, $40
	cast.64     %r14332 <- (64) %r14331
	ret.64      %r14332


luaL_argerror:
.L3189:
	<entry-point>
	symaddr.64  %r14335 <- ar
	call.32     %r14336 <- lua_getstack, %arg1, $0, %r14335
	phisrc.32   %phi2210(narg) <- %arg2
	br          %r14336, .L3191, .L3190

.L3190:
	symaddr.64  %r14338 <- <anon symbol:0x62d00145e728>
	call.32     %r14341 <- luaL_error, %arg1, %r14338, %arg2, %arg3
	phisrc.32   %phi2207(return) <- %r14341
	br          .L3192

.L3191:
	symaddr.64  %r14344 <- <anon symbol:0x62d00145eac8>
	call.32     %r14346 <- lua_getinfo, %arg1, %r14344, %r14335
	load.64     %r14347 <- 16[ar]
	symaddr.64  %r14348 <- <anon symbol:0x62d00145f120>
	call.32     %r14349 <- strcmp, %r14347, %r14348
	br          %r14349, .L3194, .L3193

.L3193:
	add.32      %r14352 <- %arg2, $-1
	phisrc.32   %phi2211(narg) <- %r14352
	br          %r14352, .L3194, .L3195

.L3195:
	symaddr.64  %r14356 <- <anon symbol:0x62d00145f4c0>
	load.64     %r14357 <- 8[ar]
	call.32     %r14359 <- luaL_error, %arg1, %r14356, %r14357, %arg3
	phisrc.32   %phi2208(return) <- %r14359
	br          .L3192

.L3194:
	load.64     %r14360(ar) <- 8[ar]
	phisrc.64   %phi2214(ar) <- %r14360(ar)
	br          %r14360(ar), .L3198, .L3197

.L3197:
	symaddr.64  %r14362 <- <anon symbol:0x62d00145fb18>
	store.64    %r14362 -> 8[ar]
	phisrc.64   %phi2215(ar) <- %r14362
	br          .L3198

.L3198:
	symaddr.64  %r14364 <- <anon symbol:0x62d00145feb8>
	phi.32      %r14365 <- %phi2210(narg), %phi2211(narg)
	phi.64      %r14366 <- %phi2214(ar), %phi2215(ar)
	call.32     %r14368 <- luaL_error, %arg1, %r14364, %r14365, %r14366, %arg3
	phisrc.32   %phi2209(return) <- %r14368
	br          .L3192

.L3192:
	phi.32      %r14342 <- %phi2207(return), %phi2208(return), %phi2209(return)
	ret.32      %r14342


luaL_typerror:
.L3199:
	<entry-point>
	symaddr.64  %r14370 <- <anon symbol:0x62d001460b68>
	call.32     %r14375 <- lua_type, %arg1, %arg2
	call.64     %r14376 <- lua_typename, %arg1, %r14375
	call.64     %r14377 <- lua_pushfstring, %arg1, %r14370, %arg3, %r14376
	call.32     %r14381 <- luaL_argerror, %arg1, %arg2, %r14377
	ret.32      %r14381


tag_error:
.L3201:
	<entry-point>
	call.64     %r14387 <- lua_typename, %arg1, %arg3
	call.32     %r14388 <- luaL_typerror, %arg1, %arg2, %r14387
	ret


luaL_where:
.L3203:
	<entry-point>
	symaddr.64  %r14391 <- ar
	call.32     %r14392 <- lua_getstack, %arg1, %arg2, %r14391
	br          %r14392, .L3204, .L3205

.L3204:
	symaddr.64  %r14394 <- <anon symbol:0x62d0014610d8>
	call.32     %r14396 <- lua_getinfo, %arg1, %r14394, %r14391
	load.32     %r14397(ar) <- 40[ar]
	setgt.32    %r14398 <- %r14397(ar), $0
	br          %r14398, .L3206, .L3205

.L3206:
	symaddr.64  %r14400 <- <anon symbol:0x62d001461730>
	add.64      %r14402 <- %r14391, $56
	call.64     %r14404 <- lua_pushfstring, %arg1, %r14400, %r14402, %r14397(ar)
	br          .L3208

.L3205:
	symaddr.64  %r14406 <- <anon symbol:0x62d001461e70>
	call        lua_pushlstring, %arg1, %r14406, $0
	br          .L3208

.L3208:
	ret


luaL_error:
.L3209:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	symaddr.64  %r14407 <- fmt
	cast.64     %r14408 <- (64) %r14407
	call        luaL_where, %arg1, $1
	load.64     %r14411 <- 0[fmt]
	call.64     %r14413 <- lua_pushvfstring, %arg1, %r14411, %r14408
	call        lua_concat, %arg1, $2
	call.32     %r14416 <- lua_error, %arg1
	ret.32      %r14416


luaL_newmetatable:
.L3211:
	<entry-point>
	call        lua_getfield, %arg1, $0xffffd8f0, %arg2
	call.32     %r14421 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r14423 <- %r14421, $0
	br          %r14421, .L3214, .L3213

.L3213:
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_createtable, %arg1, $0, $0
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_setfield, %arg1, $0xffffd8f0, %arg2
	br          .L3214

.L3214:
	ret.32      %r14423


luaL_checkudata:
.L3215:
	<entry-point>
	call.64     %r14431 <- lua_touserdata, %arg1, %arg2
	br          %r14431, .L3216, .L3217

.L3216:
	call.32     %r14436 <- lua_getmetatable, %arg1, %arg2
	br          %r14436, .L3218, .L3217

.L3218:
	call        lua_getfield, %arg1, $0xffffd8f0, %arg3
	call.32     %r14440 <- lua_rawequal, %arg1, $0xffffffff, $0xfffffffe
	br          %r14440, .L3220, .L3217

.L3220:
	call        lua_settop, %arg1, $0xfffffffd
	phisrc.64   %phi2221(return) <- %r14431
	br          .L3222

.L3217:
	call.32     %r14447 <- luaL_typerror, %arg1, %arg2, %arg3
	phisrc.64   %phi2222(return) <- $0
	br          .L3222

.L3222:
	phi.64      %r14443 <- %phi2221(return), %phi2222(return)
	ret.64      %r14443


luaL_checkstack:
.L3223:
	<entry-point>
	call.32     %r14450 <- lua_checkstack, %arg1, %arg2
	br          %r14450, .L3225, .L3224

.L3224:
	symaddr.64  %r14452 <- <anon symbol:0x62d001464418>
	call.32     %r14454 <- luaL_error, %arg1, %r14452, %arg3
	br          .L3225

.L3225:
	ret


luaL_checktype:
.L3226:
	<entry-point>
	call.32     %r14457 <- lua_type, %arg1, %arg2
	setne.32    %r14459 <- %r14457, %arg3
	br          %r14459, .L3227, .L3228

.L3227:
	call        tag_error, %arg1, %arg2, %arg3
	br          .L3228

.L3228:
	ret


luaL_checkany:
.L3229:
	<entry-point>
	call.32     %r14465 <- lua_type, %arg1, %arg2
	seteq.32    %r14466 <- %r14465, $0xffffffff
	br          %r14466, .L3230, .L3231

.L3230:
	symaddr.64  %r14469 <- <anon symbol:0x62d0014647b8>
	call.32     %r14470 <- luaL_argerror, %arg1, %arg2, %r14469
	br          .L3231

.L3231:
	ret


luaL_checklstring:
.L3232:
	<entry-point>
	call.64     %r14474 <- lua_tolstring, %arg1, %arg2, %arg3
	br          %r14474, .L3235, .L3233

.L3233:
	call        tag_error, %arg1, %arg2, $4
	br          .L3235

.L3235:
	ret.64      %r14474


luaL_optlstring:
.L3236:
	<entry-point>
	call.32     %r14482 <- lua_type, %arg1, %arg2
	setle.32    %r14483 <- %r14482, $0
	br          %r14483, .L3237, .L3238

.L3237:
	br          %arg4, .L3239, .L3240

.L3239:
	call.64     %r14486 <- strlen, %arg3
	select.64   %r14488 <- %arg3, %r14486, $0
	store.64    %r14488 -> 0[%arg4]
	br          .L3240

.L3240:
	phisrc.64   %phi2224(return) <- %arg3
	br          .L3241

.L3238:
	call.64     %r14495 <- luaL_checklstring, %arg1, %arg2, %arg4
	phisrc.64   %phi2225(return) <- %r14495
	br          .L3241

.L3241:
	phi.64      %r14491 <- %phi2224(return), %phi2225(return)
	ret.64      %r14491


luaL_checknumber:
.L3243:
	<entry-point>
	call.64     %r14498 <- lua_tonumber, %arg1, %arg2
	set.64      %r14500 <- 0.000000
	seteq.32    %r14501 <- %r14498, %r14500
	br          %r14501, .L3246, .L3247

.L3246:
	call.32     %r14504 <- lua_isnumber, %arg1, %arg2
	br          %r14504, .L3247, .L3244

.L3244:
	call        tag_error, %arg1, %arg2, $3
	br          .L3247

.L3247:
	ret.64      %r14498


luaL_checkinteger:
.L3248:
	<entry-point>
	call.64     %r14511 <- lua_tointeger, %arg1, %arg2
	br          %r14511, .L3252, .L3251

.L3251:
	call.32     %r14516 <- lua_isnumber, %arg1, %arg2
	br          %r14516, .L3252, .L3249

.L3249:
	call        tag_error, %arg1, %arg2, $3
	br          .L3252

.L3252:
	ret.64      %r14511


luaL_optinteger:
.L3253:
	<entry-point>
	call.32     %r14523 <- lua_type, %arg1, %arg2
	setle.32    %r14524 <- %r14523, $0
	br          %r14524, .L3255, .L3256

.L3255:
	phisrc.64   %phi2228 <- %arg3
	br          .L3257

.L3256:
	call.64     %r14528 <- luaL_checkinteger, %arg1, %arg2
	phisrc.64   %phi2229 <- %r14528
	br          .L3257

.L3257:
	phi.64      %r14529 <- %phi2228, %phi2229
	ret.64      %r14529


luaL_getmetafield:
.L3258:
	<entry-point>
	call.32     %r14533 <- lua_getmetatable, %arg1, %arg2
	br          %r14533, .L3260, .L3259

.L3259:
	phisrc.32   %phi2231(return) <- $0
	br          .L3261

.L3260:
	call        lua_pushstring, %arg1, %arg3
	call        lua_rawget, %arg1, $0xfffffffe
	call.32     %r14539 <- lua_type, %arg1, $0xffffffff
	br          %r14539, .L3263, .L3262

.L3262:
	call        lua_settop, %arg1, $0xfffffffd
	phisrc.32   %phi2232(return) <- $0
	br          .L3261

.L3263:
	call        lua_remove, %arg1, $0xfffffffe
	phisrc.32   %phi2233(return) <- $1
	br          .L3261

.L3261:
	phi.32      %r14534 <- %phi2231(return), %phi2232(return), %phi2233(return)
	ret.32      %r14534


luaL_register:
.L3265:
	<entry-point>
	call        luaI_openlib, %arg1, %arg2, %arg3, $0
	ret


libsize:
.L3267:
	<entry-point>
	phisrc.64   %phi2236(l) <- %arg1
	phisrc.32   %phi2240(size) <- $0
	br          .L3271

.L3271:
	phi.64      %r14546(l) <- %phi2236(l), %phi2237(l)
	load.64     %r14547 <- 0[%r14546(l)]
	phi.32      %r14548 <- %phi2240(size), %phi2241(size)
	br          %r14547, .L3268, .L3272

.L3268:
	add.32      %r14549 <- %r14548, $1
	phisrc.32   %phi2241(size) <- %r14549
	add.64      %r14551 <- %r14546(l), $16
	phisrc.64   %phi2237(l) <- %r14551
	br          .L3271

.L3272:
	ret.32      %r14548


luaI_openlib:
.L3273:
	<entry-point>
	phisrc.64   %phi2244(l) <- %arg3
	br          %arg2, .L3274, .L3283

.L3274:
	call.32     %r14556 <- libsize, %arg3
	symaddr.64  %r14558 <- <anon symbol:0x62d00145d8a8>
	call.64     %r14559 <- luaL_findtable, %arg1, $0xffffd8f0, %r14558, $1
	call        lua_getfield, %arg1, $0xffffffff, %arg2
	call.32     %r14563 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r14564 <- %r14563, $5
	phisrc.64   %phi2245(l) <- %arg3
	br          %r14564, .L3277, .L3276

.L3276:
	call        lua_settop, %arg1, $0xfffffffe
	call.64     %r14569 <- luaL_findtable, %arg1, $0xffffd8ee, %arg2, %r14556
	br          %r14569, .L3278, .L3279

.L3278:
	symaddr.64  %r14572 <- <anon symbol:0x62d00145dc48>
	call.32     %r14574 <- luaL_error, %arg1, %r14572, %arg2
	br          .L3279

.L3279:
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_setfield, %arg1, $0xfffffffd, %arg2
	br          .L3277

.L3277:
	call        lua_remove, %arg1, $0xfffffffe
	add.32      %r14581 <- %arg4, $1
	neg.32      %r14582 <- %r14581
	call        lua_insert, %arg1, %r14582
	br          .L3283

.L3283:
	phi.64      %r14583(l) <- %phi2244(l), %phi2245(l), %phi2246(l)
	load.64     %r14584 <- 0[%r14583(l)]
	br          %r14584, .L3280, .L3282

.L3280:
	phisrc.32   %phi2249(i) <- $0
	br          .L3287

.L3287:
	phi.32      %r14585(i) <- %phi2249(i), %phi2250(i)
	setlt.32    %r14587 <- %r14585(i), %arg4
	br          %r14587, .L3284, .L3286

.L3284:
	neg.32      %r14590 <- %arg4
	call        lua_pushvalue, %arg1, %r14590
	add.32      %r14592 <- %r14585(i), $1
	phisrc.32   %phi2250(i) <- %r14592
	br          .L3287

.L3286:
	load.64     %r14595 <- 8[%r14583(l)]
	call        lua_pushcclosure, %arg1, %r14595, %arg4
	add.32      %r14599 <- %arg4, $2
	neg.32      %r14600 <- %r14599
	load.64     %r14602 <- 0[%r14583(l)]
	call        lua_setfield, %arg1, %r14600, %r14602
	add.64      %r14604 <- %r14583(l), $16
	phisrc.64   %phi2246(l) <- %r14604
	br          .L3283

.L3282:
	neg.32      %r14607 <- %arg4
	add.32      %r14608 <- %r14607, $-1
	call        lua_settop, %arg1, %r14608
	ret


luaL_findtable:
.L3289:
	<entry-point>
	call        lua_pushvalue, %arg1, %arg2
	phisrc.64   %phi2258(fname) <- %arg3
	br          .L3290

.L3290:
	phi.64      %r14611(fname) <- %phi2258(fname), %phi2259(fname)
	call.64     %r14612 <- strchr, %r14611(fname), $46
	phisrc.64   %phi2264(e) <- %r14612
	br          %r14612, .L3294, .L3293

.L3293:
	call.64     %r14617 <- strlen, %r14611(fname)
	add.64      %r14618 <- %r14611(fname), %r14617
	phisrc.64   %phi2265(e) <- %r14618
	br          .L3294

.L3294:
	phi.64      %r14621(e) <- %phi2264(e), %phi2265(e)
	sub.64      %r14623 <- %r14621(e), %r14611(fname)
	call        lua_pushlstring, %arg1, %r14611(fname), %r14623
	call        lua_rawget, %arg1, $0xfffffffe
	call.32     %r14627 <- lua_type, %arg1, $0xffffffff
	br          %r14627, .L3296, .L3295

.L3295:
	call        lua_settop, %arg1, $0xfffffffe
	load.8      %r14633 <- 0[%r14621(e)]
	scast.32    %r14634 <- (8) %r14633
	seteq.32    %r14635 <- %r14634, $46
	select.32   %r14636 <- %r14635, $1, %arg4
	call        lua_createtable, %arg1, $0, %r14636
	call        lua_pushlstring, %arg1, %r14611(fname), %r14623
	call        lua_pushvalue, %arg1, $0xfffffffe
	call        lua_settable, %arg1, $0xfffffffc
	br          .L3297

.L3296:
	call.32     %r14646 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r14647 <- %r14646, $5
	br          %r14647, .L3297, .L3298

.L3298:
	call        lua_settop, %arg1, $0xfffffffd
	phisrc.64   %phi2251(return) <- %r14611(fname)
	br          .L3300

.L3297:
	call        lua_remove, %arg1, $0xfffffffe
	add.64      %r14653 <- %r14621(e), $1
	phisrc.64   %phi2259(fname) <- %r14653
	load.8      %r14655 <- 0[%r14621(e)]
	scast.32    %r14656 <- (8) %r14655
	seteq.32    %r14657 <- %r14656, $46
	br          %r14657, .L3290, .L3292

.L3292:
	phisrc.64   %phi2252(return) <- $0
	br          .L3300

.L3300:
	phi.64      %r14650 <- %phi2251(return), %phi2252(return)
	ret.64      %r14650


emptybuffer:
.L3301:
	<entry-point>
	load.64     %r14659 <- 0[%arg1]
	add.64      %r14661 <- %arg1, $24
	sub.64      %r14662 <- %r14659, %r14661
	setne.32    %r14666 <- %r14662, $0
	br          %r14662, .L3303, .L3304

.L3303:
	load.64     %r14668 <- 16[%arg1]
	call        lua_pushlstring, %r14668, %r14661, %r14662
	store.64    %r14661 -> 0[%arg1]
	load.32     %r14676 <- 8[%arg1]
	add.32      %r14677 <- %r14676, $1
	store.32    %r14677 -> 8[%arg1]
	br          .L3304

.L3304:
	ret.32      %r14666


adjuststack:
.L3306:
	<entry-point>
	load.32     %r14679 <- 8[%arg1]
	setgt.32    %r14680 <- %r14679, $1
	br          %r14680, .L3307, .L3308

.L3307:
	load.64     %r14682 <- 16[%arg1]
	call.64     %r14684(toplen) <- lua_objlen, %r14682, $0xffffffff
	phisrc.32   %phi2272(toget) <- $1
	phisrc.64   %phi2275(toplen) <- %r14684(toplen)
	br          .L3309

.L3309:
	phi.32      %r14686 <- %phi2272(toget), %phi2273(toget)
	add.32      %r14687 <- %r14686, $1
	neg.32      %r14688 <- %r14687
	call.64     %r14689 <- lua_objlen, %r14682, %r14688
	load.32     %r14691 <- 8[%arg1]
	sub.32      %r14693 <- %r14691, %r14686
	add.32      %r14694 <- %r14693, $1
	setge.32    %r14695 <- %r14694, $10
	phi.64      %r14696(toplen) <- %phi2275(toplen), %phi2276(toplen)
	seta.32     %r14698 <- %r14696(toplen), %r14689
	or-bool.32  %r14699 <- %r14695, %r14698
	phisrc.32   %phi2268(toget) <- %r14686
	br          %r14699, .L3312, .L3311

.L3312:
	add.64      %r14703 <- %r14696(toplen), %r14689
	phisrc.32   %phi2273(toget) <- %r14687
	phisrc.64   %phi2276(toplen) <- %r14703
	setlt.32    %r14710 <- %r14687, %r14691
	phisrc.32   %phi2269(toget) <- %r14687
	br          %r14710, .L3309, .L3311

.L3311:
	phi.32      %r14712 <- %phi2268(toget), %phi2269(toget)
	call        lua_concat, %r14682, %r14712
	load.32     %r14714 <- 8[%arg1]
	sub.32      %r14716 <- %r14714, %r14712
	add.32      %r14717 <- %r14716, $1
	store.32    %r14717 -> 8[%arg1]
	br          .L3308

.L3308:
	ret


luaL_prepbuffer:
.L3315:
	<entry-point>
	call.32     %r14720 <- emptybuffer, %arg1
	br          %r14720, .L3316, .L3317

.L3316:
	call        adjuststack, %arg1
	br          .L3317

.L3317:
	add.64      %r14723 <- %arg1, $24
	ret.64      %r14723


luaL_addlstring:
.L3319:
	<entry-point>
	phisrc.64   %phi2281(s) <- %arg2
	phisrc.64   %phi2283(l) <- %arg3
	br          .L3323

.L3323:
	phi.64      %r14725 <- %phi2283(l), %phi2284(l)
	add.64      %r14726 <- %r14725, $-1
	phisrc.64   %phi2284(l) <- %r14726
	br          %r14725, .L3320, .L3322

.L3320:
	load.64     %r14728 <- 0[%arg1]
	add.64      %r14731 <- %arg1, $0x2018
	setb.32     %r14732 <- %r14728, %r14731
	phisrc.64   %phi2285 <- %r14728
	br          %r14732, .L3326, .L3325

.L3325:
	call.64     %r14734 <- luaL_prepbuffer, %arg1
	br          .L3326

.L3326:
	phi.64      %r14736 <- %phi2281(s), %phi2282(s)
	add.64      %r14737 <- %r14736, $1
	load.8      %r14738 <- 0[%r14736]
	load.64     %r14741 <- 0[%arg1]
	add.64      %r14742 <- %r14741, $1
	store.64    %r14742 -> 0[%arg1]
	store.8     %r14738 -> 0[%r14741]
	phisrc.64   %phi2282(s) <- %r14737
	br          .L3323

.L3322:
	ret


luaL_pushresult:
.L3327:
	<entry-point>
	call.32     %r14744 <- emptybuffer, %arg1
	load.64     %r14746 <- 16[%arg1]
	load.32     %r14748 <- 8[%arg1]
	call        lua_concat, %r14746, %r14748
	store.32    $1 -> 8[%arg1]
	ret


luaL_addvalue:
.L3329:
	<entry-point>
	load.64     %r14751 <- 16[%arg1]
	symaddr.64  %r14753 <- vl
	call.64     %r14754 <- lua_tolstring, %r14751, $0xffffffff, %r14753
	load.64     %r14755(vl) <- 0[vl]
	load.64     %r14757 <- 0[%arg1]
	add.64      %r14759 <- %arg1, $24
	sub.64      %r14760 <- %r14757, %r14759
	sub.64      %r14761 <- $0x2000, %r14760
	setbe.32    %r14763 <- %r14755(vl), %r14761
	br          %r14763, .L3330, .L3331

.L3330:
	cast.64     %r14766 <- (64) %r14757
	cast.64     %r14768 <- (64) %r14754
	call.64     %r14770 <- memcpy, %r14766, %r14768, %r14755(vl)
	load.64     %r14771 <- 0[vl]
	load.64     %r14773 <- 0[%arg1]
	cast.64     %r14774 <- (64) %r14773
	add.64      %r14775 <- %r14774, %r14771
	ptrcast.64  %r14776 <- (64) %r14775
	store.64    %r14776 -> 0[%arg1]
	call        lua_settop, %r14751, $0xfffffffe
	br          .L3332

.L3331:
	call.32     %r14779 <- emptybuffer, %arg1
	br          %r14779, .L3333, .L3334

.L3333:
	call        lua_insert, %r14751, $0xfffffffe
	br          .L3334

.L3334:
	load.32     %r14782 <- 8[%arg1]
	add.32      %r14783 <- %r14782, $1
	store.32    %r14783 -> 8[%arg1]
	call        adjuststack, %arg1
	br          .L3332

.L3332:
	ret


luaL_buffinit:
.L3335:
	<entry-point>
	store.64    %arg1 -> 16[%arg2]
	add.64      %r14788 <- %arg2, $24
	store.64    %r14788 -> 0[%arg2]
	store.32    $0 -> 8[%arg2]
	ret


getF:
.L3337:
	<entry-point>
	ptrcast.64  %r14792 <- (64) %arg2
	load.32     %r14795 <- 0[%r14792]
	br          %r14795, .L3338, .L3339

.L3338:
	store.32    $0 -> 0[%r14792]
	store.64    $1 -> 0[%arg3]
	symaddr.64  %r14798 <- <anon symbol:0x62d0014694c0>
	phisrc.64   %phi2288(return) <- %r14798
	br          .L3340

.L3339:
	load.64     %r14801 <- 8[%r14792]
	call.32     %r14802 <- feof, %r14801
	br          %r14802, .L3341, .L3342

.L3341:
	phisrc.64   %phi2289(return) <- $0
	br          .L3340

.L3342:
	add.64      %r14804 <- %r14792, $16
	cast.64     %r14805 <- (64) %r14804
	load.64     %r14807 <- 8[%r14792]
	call.64     %r14808 <- fread, %r14805, $1, $0x2000, %r14807
	store.64    %r14808 -> 0[%arg3]
	seta.32     %r14814 <- %r14808, $0
	select.64   %r14815 <- %r14814, %r14804, $0
	phisrc.64   %phi2290(return) <- %r14815
	br          .L3340

.L3340:
	phi.64      %r14799 <- %phi2288(return), %phi2289(return), %phi2290(return)
	ret.64      %r14799


errfile:
.L3343:
	<entry-point>
	call.64     %r14816 <- __errno_location
	load.32     %r14817 <- 0[%r14816]
	call.64     %r14818 <- strerror, %r14817
	call.64     %r14821 <- lua_tolstring, %arg1, %arg3, $0
	add.64      %r14822 <- %r14821, $1
	symaddr.64  %r14824 <- <anon symbol:0x62d00146a7c8>
	call.64     %r14828 <- lua_pushfstring, %arg1, %r14824, %arg2, %r14822, %r14818
	call        lua_remove, %arg1, %arg3
	ret.32      $6


luaL_loadfile:
.L3345:
	<entry-point>
	call.32     %r14833 <- lua_gettop, %arg1
	add.32      %r14834 <- %r14833, $1
	store.32    $0 -> 0[lf]
	br          %arg2, .L3347, .L3346

.L3346:
	symaddr.64  %r14838 <- <anon symbol:0x62d00146ac50>
	call        lua_pushlstring, %arg1, %r14838, $6
	load.64     %r14839(lf) <- 0[stdin]
	store.64    %r14839(lf) -> 8[lf]
	phisrc.64   %phi2297(lf) <- %r14839(lf)
	br          .L3348

.L3347:
	symaddr.64  %r14841 <- <anon symbol:0x62d00146b2a8>
	call.64     %r14843 <- lua_pushfstring, %arg1, %r14841, %arg2
	symaddr.64  %r14845 <- <anon symbol:0x62d00146b730>
	call.64     %r14846 <- fopen, %arg2, %r14845
	store.64    %r14846 -> 8[lf]
	phisrc.64   %phi2298(lf) <- %r14846
	br          %r14846, .L3348, .L3349

.L3349:
	symaddr.64  %r14850 <- <anon symbol:0x62d00146bbb8>
	call.32     %r14852 <- errfile, %arg1, %r14850, %r14834
	phisrc.32   %phi2292(return) <- %r14852
	br          .L3351

.L3348:
	phi.64      %r14854 <- %phi2297(lf), %phi2298(lf)
	call.32     %r14855 <- _IO_getc, %r14854
	seteq.32    %r14857 <- %r14855, $35
	phisrc.32   %phi2301(c) <- %r14855
	br          %r14857, .L3352, .L3353

.L3352:
	store.32    $1 -> 0[lf]
	br          .L3357

.L3357:
	load.64     %r14858 <- 8[lf]
	call.32     %r14859 <- _IO_getc, %r14858
	setne.32    %r14860 <- %r14859, $0xffffffff
	setne.32    %r14862 <- %r14859, $10
	and-bool.32 %r14863 <- %r14860, %r14862
	br          %r14863, .L3357, .L3356

.L3356:
	seteq.32    %r14865 <- %r14859, $10
	phisrc.32   %phi2302(c) <- %r14859
	br          %r14865, .L3358, .L3353

.L3358:
	load.64     %r14866 <- 8[lf]
	call.32     %r14867 <- _IO_getc, %r14866
	phisrc.32   %phi2303(c) <- %r14867
	br          .L3353

.L3353:
	phi.32      %r14868(c) <- %phi2301(c), %phi2302(c), %phi2303(c)
	load.8      %r14869 <- 0["\33Lua"]
	scast.32    %r14870 <- (8) %r14869
	seteq.32    %r14871 <- %r14868(c), %r14870
	and-bool.32 %r14873 <- %r14871, %arg2
	phisrc.32   %phi2299(c) <- %r14868(c)
	br          %r14873, .L3360, .L3361

.L3360:
	symaddr.64  %r14875 <- <anon symbol:0x62d0014788a0>
	load.64     %r14876 <- 8[lf]
	call.64     %r14877 <- freopen, %arg2, %r14875, %r14876
	store.64    %r14877 -> 8[lf]
	phisrc.64   %phi2296(lf) <- %r14877
	phisrc.64   %phi2305 <- %r14877
	phisrc.64   %phi2306 <- %r14877
	br          %r14877, .L3367, .L3362

.L3362:
	symaddr.64  %r14881 <- <anon symbol:0x62d001478e10>
	call.32     %r14883 <- errfile, %arg1, %r14881, %r14834
	phisrc.32   %phi2293(return) <- %r14883
	br          .L3351

.L3367:
	load.64     %r14884 <- 8[lf]
	call.32     %r14885 <- _IO_getc, %r14884
	setne.32    %r14886 <- %r14885, $0xffffffff
	load.8      %r14888 <- 0["\33Lua"]
	scast.32    %r14889 <- (8) %r14888
	setne.32    %r14890 <- %r14885, %r14889
	and-bool.32 %r14891 <- %r14886, %r14890
	phisrc.32   %phi2300(c) <- %r14885
	br          %r14891, .L3367, .L3366

.L3366:
	store.32    $0 -> 0[lf]
	br          .L3361

.L3361:
	phi.32      %r14892 <- %phi2299(c), %phi2300(c)
	load.64     %r14893 <- 8[lf]
	call.32     %r14894 <- ungetc, %r14892, %r14893
	symaddr.64  %r14896 <- getF
	symaddr.64  %r14897 <- lf
	cast.64     %r14898 <- (64) %r14897
	call.64     %r14900 <- lua_tolstring, %arg1, $0xffffffff, $0
	call.32     %r14901 <- lua_load, %arg1, %r14896, %r14898, %r14900
	load.64     %r14902 <- 8[lf]
	call.32     %r14903 <- ferror, %r14902
	br          %arg2, .L3368, .L3369

.L3368:
	load.64     %r14905 <- 8[lf]
	call.32     %r14906 <- fclose, %r14905
	br          .L3369

.L3369:
	br          %r14903, .L3370, .L3371

.L3370:
	call        lua_settop, %arg1, %r14834
	symaddr.64  %r14911 <- <anon symbol:0x62d001479e60>
	call.32     %r14913 <- errfile, %arg1, %r14911, %r14834
	phisrc.32   %phi2294(return) <- %r14913
	br          .L3351

.L3371:
	call        lua_remove, %arg1, %r14834
	phisrc.32   %phi2295(return) <- %r14901
	br          .L3351

.L3351:
	phi.32      %r14853 <- %phi2292(return), %phi2293(return), %phi2294(return), %phi2295(return)
	ret.32      %r14853


getS:
.L3372:
	<entry-point>
	ptrcast.64  %r14918 <- (64) %arg2
	load.64     %r14921 <- 8[%r14918]
	br          %r14921, .L3374, .L3373

.L3373:
	phisrc.64   %phi2307(return) <- $0
	br          .L3375

.L3374:
	store.64    %r14921 -> 0[%arg3]
	store.64    $0 -> 8[%r14918]
	load.64     %r14929 <- 0[%r14918]
	phisrc.64   %phi2308(return) <- %r14929
	br          .L3375

.L3375:
	phi.64      %r14923 <- %phi2307(return), %phi2308(return)
	ret.64      %r14923


luaL_loadbuffer:
.L3376:
	<entry-point>
	store.64    %arg2 -> 0[ls]
	store.64    %arg3 -> 8[ls]
	symaddr.64  %r14933 <- getS
	symaddr.64  %r14934 <- ls
	cast.64     %r14935 <- (64) %r14934
	call.32     %r14937 <- lua_load, %arg1, %r14933, %r14935, %arg4
	ret.32      %r14937


l_alloc:
.L3378:
	<entry-point>
	br          %arg4, .L3380, .L3379

.L3379:
	call        free, %arg2
	phisrc.64   %phi2311(return) <- $0
	br          .L3381

.L3380:
	call.64     %r14947 <- realloc, %arg2, %arg4
	phisrc.64   %phi2312(return) <- %r14947
	br          .L3381

.L3381:
	phi.64      %r14944 <- %phi2311(return), %phi2312(return)
	ret.64      %r14944


panic:
.L3383:
	<entry-point>
	load.64     %r14949 <- 0[stderr]
	symaddr.64  %r14950 <- <anon symbol:0x62d00147ace0>
	call.64     %r14952 <- lua_tolstring, %arg1, $0xffffffff, $0
	call.32     %r14953 <- fprintf, %r14949, %r14950, %r14952
	ret.32      $0


luaL_newstate:
.L3385:
	<entry-point>
	symaddr.64  %r14955 <- l_alloc
	call.64     %r14956 <- lua_newstate, %r14955, $0
	br          %r14956, .L3386, .L3388

.L3386:
	symaddr.64  %r14959 <- panic
	call.64     %r14960 <- lua_atpanic, %r14956, %r14959
	br          .L3388

.L3388:
	ret.64      %r14956


luaB_tonumber:
.L3389:
	<entry-point>
	call.64     %r14964 <- luaL_optinteger, %arg1, $2, $10
	scast.32    %r14965 <- (64) %r14964
	seteq.32    %r14967 <- %r14965, $10
	br          %r14967, .L3390, .L3391

.L3390:
	call        luaL_checkany, %arg1, $1
	call.32     %r14970 <- lua_isnumber, %arg1, $1
	br          %r14970, .L3392, .L3395

.L3392:
	call.64     %r14973 <- lua_tonumber, %arg1, $1
	call        lua_pushnumber, %arg1, %r14973
	br          .L3394

.L3391:
	call.64     %r14976 <- luaL_checklstring, %arg1, $1, $0
	setle.32    %r14978 <- $2, %r14965
	setle.32    %r14980 <- %r14965, $36
	and-bool.32 %r14981 <- %r14978, %r14980
	br          %r14981, .L3398, .L3397

.L3397:
	symaddr.64  %r14983 <- <anon symbol:0x62d00147b420>
	call.32     %r14984 <- luaL_argerror, %arg1, $2, %r14983
	br          .L3398

.L3398:
	symaddr.64  %r14987 <- s2
	call.64     %r14989 <- strtoul, %r14976, %r14987, %r14965
	load.64     %r14991 <- 0[s2]
	setne.32    %r14992 <- %r14976, %r14991
	br          %r14992, .L3404, .L3395

.L3404:
	call.64     %r14993 <- __ctype_b_loc
	load.64     %r14994 <- 0[%r14993]
	load.64     %r14995(s2) <- 0[s2]
	load.8      %r14996 <- 0[%r14995(s2)]
	cast.32     %r14998 <- (8) %r14996
	scast.64    %r14999 <- (32) %r14998
	muls.64     %r15000 <- %r14999, $2
	add.64      %r15001 <- %r14994, %r15000
	load.16     %r15002 <- 0[%r15001]
	cast.32     %r15003 <- (16) %r15002
	and.32      %r15004 <- %r15003, $0x2000
	br          %r15004, .L3401, .L3403

.L3401:
	add.64      %r15006 <- %r14995(s2), $1
	store.64    %r15006 -> 0[s2]
	br          .L3404

.L3403:
	br          %r14996, .L3395, .L3405

.L3405:
	fpcast.64   %r15013 <- (64) %r14989
	call        lua_pushnumber, %arg1, %r15013
	br          .L3394

.L3395:
	call        lua_pushnil, %arg1
	br          .L3394

.L3394:
	ret.32      $1


luaB_error:
.L3407:
	<entry-point>
	call.64     %r15016 <- luaL_optinteger, %arg1, $2, $1
	scast.32    %r15017 <- (64) %r15016
	call        lua_settop, %arg1, $1
	call.32     %r15020 <- lua_isstring, %arg1, $1
	setgt.32    %r15022 <- %r15017, $0
	and-bool.32 %r15023 <- %r15020, %r15022
	br          %r15023, .L3408, .L3409

.L3408:
	call        luaL_where, %arg1, %r15017
	call        lua_pushvalue, %arg1, $1
	call        lua_concat, %arg1, $2
	br          .L3409

.L3409:
	call.32     %r15029 <- lua_error, %arg1
	ret.32      %r15029


luaB_setmetatable:
.L3411:
	<entry-point>
	call.32     %r15032 <- lua_type, %arg1, $2
	call        luaL_checktype, %arg1, $1, $5
	seteq.32    %r15035 <- %r15032, $0
	seteq.32    %r15037 <- %r15032, $5
	or-bool.32  %r15038 <- %r15035, %r15037
	br          %r15038, .L3414, .L3413

.L3413:
	symaddr.64  %r15040 <- <anon symbol:0x62d00147bd30>
	call.32     %r15041 <- luaL_argerror, %arg1, $2, %r15040
	br          .L3414

.L3414:
	symaddr.64  %r15044 <- <anon symbol:0x62d00147c0d0>
	call.32     %r15045 <- luaL_getmetafield, %arg1, $1, %r15044
	br          %r15045, .L3415, .L3416

.L3415:
	symaddr.64  %r15047 <- <anon symbol:0x62d00147c470>
	call.32     %r15048 <- luaL_error, %arg1, %r15047
	br          .L3416

.L3416:
	call        lua_settop, %arg1, $2
	call.32     %r15051 <- lua_setmetatable, %arg1, $1
	ret.32      $1


getfunc:
.L3418:
	<entry-point>
	call.32     %r15054 <- lua_type, %arg1, $1
	seteq.32    %r15055 <- %r15054, $6
	br          %r15055, .L3419, .L3420

.L3419:
	call        lua_pushvalue, %arg1, $1
	br          .L3421

.L3420:
	br          %arg2, .L3422, .L3423

.L3422:
	call.64     %r15059 <- luaL_optinteger, %arg1, $1, $1
	scast.32    %r15060 <- (64) %r15059
	phisrc.32   %phi2327 <- %r15060
	br          .L3424

.L3423:
	call.64     %r15062 <- luaL_checkinteger, %arg1, $1
	scast.32    %r15063 <- (64) %r15062
	phisrc.32   %phi2328 <- %r15063
	br          .L3424

.L3424:
	phi.32      %r15064 <- %phi2327, %phi2328
	setge.32    %r15066 <- %r15064, $0
	br          %r15066, .L3427, .L3426

.L3426:
	symaddr.64  %r15068 <- <anon symbol:0x62d00147c810>
	call.32     %r15069 <- luaL_argerror, %arg1, $1, %r15068
	br          .L3427

.L3427:
	symaddr.64  %r15073 <- ar
	call.32     %r15074 <- lua_getstack, %arg1, %r15064, %r15073
	br          %r15074, .L3429, .L3428

.L3428:
	symaddr.64  %r15077 <- <anon symbol:0x62d00147cd80>
	call.32     %r15078 <- luaL_argerror, %arg1, $1, %r15077
	br          .L3429

.L3429:
	symaddr.64  %r15080 <- <anon symbol:0x62d00147d120>
	call.32     %r15082 <- lua_getinfo, %arg1, %r15080, %r15073
	call.32     %r15084 <- lua_type, %arg1, $0xffffffff
	br          %r15084, .L3421, .L3430

.L3430:
	symaddr.64  %r15087 <- <anon symbol:0x62d00147d690>
	call.32     %r15089 <- luaL_error, %arg1, %r15087, %r15064
	br          .L3421

.L3421:
	ret


luaB_setfenv:
.L3432:
	<entry-point>
	call        luaL_checktype, %arg1, $2, $5
	call        getfunc, %arg1, $0
	call        lua_pushvalue, %arg1, $2
	call.32     %r15094 <- lua_isnumber, %arg1, $1
	br          %r15094, .L3435, .L3434

.L3435:
	call.64     %r15096 <- lua_tonumber, %arg1, $1
	set.64      %r15097 <- 0.000000
	seteq.32    %r15098 <- %r15096, %r15097
	br          %r15098, .L3433, .L3434

.L3433:
	call.32     %r15100 <- lua_pushthread, %arg1
	call        lua_insert, %arg1, $0xfffffffe
	call.32     %r15103 <- lua_setfenv, %arg1, $0xfffffffe
	phisrc.32   %phi2331(return) <- $0
	br          .L3436

.L3434:
	call.32     %r15106 <- lua_iscfunction, %arg1, $0xfffffffe
	br          %r15106, .L3438, .L3440

.L3440:
	call.32     %r15108 <- lua_setfenv, %arg1, $0xfffffffe
	br          %r15108, .L3437, .L3438

.L3438:
	symaddr.64  %r15111 <- <anon symbol:0x62d00147da30>
	call.32     %r15112 <- luaL_error, %arg1, %r15111
	br          .L3437

.L3437:
	phisrc.32   %phi2332(return) <- $1
	br          .L3436

.L3436:
	phi.32      %r15104 <- %phi2331(return), %phi2332(return)
	ret.32      %r15104


luaB_rawget:
.L3441:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        luaL_checkany, %arg1, $2
	call        lua_settop, %arg1, $2
	call        lua_rawget, %arg1, $1
	ret.32      $1


luaB_type:
.L3443:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.32     %r15122 <- lua_type, %arg1, $1
	call.64     %r15123 <- lua_typename, %arg1, %r15122
	call        lua_pushstring, %arg1, %r15123
	ret.32      $1


luaB_next:
.L3445:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        lua_settop, %arg1, $2
	call.32     %r15128 <- lua_next, %arg1, $1
	select.32   %r15129 <- %r15128, $2, $1
	br          %r15128, .L3448, .L3447

.L3447:
	call        lua_pushnil, %arg1
	br          .L3448

.L3448:
	ret.32      %r15129


luaB_pairs:
.L3450:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        lua_pushvalue, %arg1, $0xffffd8ed
	call        lua_pushvalue, %arg1, $1
	call        lua_pushnil, %arg1
	ret.32      $3


ipairsaux:
.L3452:
	<entry-point>
	call.64     %r15137 <- luaL_checkinteger, %arg1, $2
	scast.32    %r15138 <- (64) %r15137
	call        luaL_checktype, %arg1, $1, $5
	add.32      %r15141 <- %r15138, $1
	scast.64    %r15144 <- (32) %r15141
	call        lua_pushinteger, %arg1, %r15144
	call        lua_rawgeti, %arg1, $1, %r15141
	call.32     %r15148 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r15149 <- %r15148, $0
	select.32   %r15150 <- %r15149, $0, $2
	ret.32      %r15150


luaB_ipairs:
.L3454:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        lua_pushvalue, %arg1, $0xffffd8ed
	call        lua_pushvalue, %arg1, $1
	call        lua_pushinteger, %arg1, $0
	ret.32      $3


load_aux:
.L3456:
	<entry-point>
	select.32   %r15159 <- %arg2, $2, $1
	br          %arg2, .L3458, .L3459

.L3458:
	call        lua_pushnil, %arg1
	call        lua_insert, %arg1, $0xfffffffe
	br          .L3459

.L3459:
	ret.32      %r15159


luaB_loadstring:
.L3461:
	<entry-point>
	symaddr.64  %r15163 <- l
	call.64     %r15164 <- luaL_checklstring, %arg1, $1, %r15163
	call.64     %r15167 <- luaL_optlstring, %arg1, $2, %r15164, $0
	load.64     %r15171 <- 0[l]
	call.32     %r15173 <- luaL_loadbuffer, %arg1, %r15164, %r15171, %r15167
	call.32     %r15174 <- load_aux, %arg1, %r15173
	ret.32      %r15174


luaB_loadfile:
.L3463:
	<entry-point>
	call.64     %r15177 <- luaL_optlstring, %arg1, $1, $0, $0
	call.32     %r15181 <- luaL_loadfile, %arg1, %r15177
	call.32     %r15182 <- load_aux, %arg1, %r15181
	ret.32      %r15182


luaB_assert:
.L3465:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.32     %r15186 <- lua_toboolean, %arg1, $1
	br          %r15186, .L3467, .L3466

.L3466:
	symaddr.64  %r15188 <- <anon symbol:0x62d00147dfa0>
	symaddr.64  %r15190 <- <anon symbol:0x62d00147e340>
	call.64     %r15191 <- luaL_optlstring, %arg1, $2, %r15190, $0
	call.32     %r15192 <- luaL_error, %arg1, %r15188, %r15191
	phisrc.32   %phi2344(return) <- %r15192
	br          .L3468

.L3467:
	call.32     %r15195 <- lua_gettop, %arg1
	phisrc.32   %phi2345(return) <- %r15195
	br          .L3468

.L3468:
	phi.32      %r15193 <- %phi2344(return), %phi2345(return)
	ret.32      %r15193


luaB_unpack:
.L3469:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15198 <- luaL_optinteger, %arg1, $2, $1
	scast.32    %r15199(i) <- (64) %r15198
	call.32     %r15201 <- lua_type, %arg1, $3
	setle.32    %r15202 <- %r15201, $0
	br          %r15202, .L3470, .L3471

.L3470:
	call.64     %r15204 <- lua_objlen, %arg1, $1
	cast.32     %r15205 <- (64) %r15204
	phisrc.32   %phi2346 <- %r15205
	br          .L3472

.L3471:
	call.64     %r15207 <- luaL_checkinteger, %arg1, $3
	scast.32    %r15208 <- (64) %r15207
	phisrc.32   %phi2347 <- %r15208
	br          .L3472

.L3472:
	phi.32      %r15209 <- %phi2346, %phi2347
	setgt.32    %r15212 <- %r15199(i), %r15209
	br          %r15212, .L3473, .L3474

.L3473:
	phisrc.32   %phi2348(return) <- $0
	br          .L3475

.L3474:
	sub.32      %r15216 <- %r15209, %r15199(i)
	add.32      %r15217 <- %r15216, $1
	setle.32    %r15219 <- %r15217, $0
	br          %r15219, .L3476, .L3478

.L3478:
	call.32     %r15222 <- lua_checkstack, %arg1, %r15217
	br          %r15222, .L3477, .L3476

.L3476:
	symaddr.64  %r15224 <- <anon symbol:0x62d00147e6e0>
	call.32     %r15225 <- luaL_error, %arg1, %r15224
	phisrc.32   %phi2349(return) <- %r15225
	br          .L3475

.L3477:
	call        lua_rawgeti, %arg1, $1, %r15199(i)
	phisrc.32   %phi2352(i) <- %r15199(i)
	br          .L3482

.L3482:
	phi.32      %r15228 <- %phi2352(i), %phi2353(i)
	add.32      %r15229(i) <- %r15228, $1
	setlt.32    %r15231 <- %r15228, %r15209
	phisrc.32   %phi2353(i) <- %r15229(i)
	br          %r15231, .L3479, .L3481

.L3479:
	call        lua_rawgeti, %arg1, $1, %r15229(i)
	br          .L3482

.L3481:
	phisrc.32   %phi2350(return) <- %r15217
	br          .L3475

.L3475:
	phi.32      %r15213 <- %phi2348(return), %phi2349(return), %phi2350(return)
	ret.32      %r15213


luaB_pcall:
.L3483:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.32     %r15238 <- lua_gettop, %arg1
	add.32      %r15239 <- %r15238, $-1
	call.32     %r15240 <- lua_pcall, %arg1, %r15239, $0xffffffff, $0
	seteq.32    %r15243 <- %r15240, $0
	call        lua_pushboolean, %arg1, %r15243
	call        lua_insert, %arg1, $1
	call.32     %r15246 <- lua_gettop, %arg1
	ret.32      %r15246


luaB_newproxy:
.L3485:
	<entry-point>
	call        lua_settop, %arg1, $1
	call.64     %r15250 <- lua_newuserdata, %arg1, $0
	call.32     %r15252 <- lua_toboolean, %arg1, $1
	br          %r15252, .L3487, .L3488

.L3487:
	call.32     %r15256 <- lua_type, %arg1, $1
	seteq.32    %r15257 <- %r15256, $1
	br          %r15257, .L3490, .L3491

.L3490:
	call        lua_createtable, %arg1, $0, $0
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_pushboolean, %arg1, $1
	call        lua_rawset, %arg1, $0xffffd8ed
	br          .L3489

.L3491:
	call.32     %r15263 <- lua_getmetatable, %arg1, $1
	br          %r15263, .L3493, .L3496

.L3493:
	call        lua_rawget, %arg1, $0xffffd8ed
	call.32     %r15266 <- lua_toboolean, %arg1, $0xffffffff
	call        lua_settop, %arg1, $0xfffffffe
	br          %r15266, .L3497, .L3496

.L3496:
	symaddr.64  %r15270 <- <anon symbol:0x62d00147ea80>
	call.32     %r15271 <- luaL_argerror, %arg1, $1, %r15270
	br          .L3497

.L3497:
	call.32     %r15274 <- lua_getmetatable, %arg1, $1
	br          .L3489

.L3489:
	call.32     %r15276 <- lua_setmetatable, %arg1, $2
	br          .L3488

.L3488:
	ret.32      $1


auxopen:
.L3498:
	<entry-point>
	call        lua_pushcclosure, %arg1, %arg4, $0
	call        lua_pushcclosure, %arg1, %arg3, $1
	call        lua_setfield, %arg1, $0xfffffffe, %arg2
	ret


base_open:
.L3500:
	<entry-point>
	call        lua_pushvalue, %arg1, $0xffffd8ee
	symaddr.64  %r15285 <- <anon symbol:0x62d00147ee20>
	call        lua_setfield, %arg1, $0xffffd8ee, %r15285
	symaddr.64  %r15287 <- <anon symbol:0x62d00147f1c0>
	symaddr.64  %r15288 <- base_funcs
	call        luaL_register, %arg1, %r15287, %r15288
	symaddr.64  %r15290 <- <anon symbol:0x62d00147f730>
	call        lua_pushlstring, %arg1, %r15290, $7
	symaddr.64  %r15292 <- <anon symbol:0x62d00147fca0>
	call        lua_setfield, %arg1, $0xffffd8ee, %r15292
	symaddr.64  %r15294 <- <anon symbol:0x62d001480040>
	symaddr.64  %r15295 <- luaB_ipairs
	symaddr.64  %r15296 <- ipairsaux
	call        auxopen, %arg1, %r15294, %r15295, %r15296
	symaddr.64  %r15298 <- <anon symbol:0x62d00148c7b8>
	symaddr.64  %r15299 <- luaB_pairs
	symaddr.64  %r15300 <- luaB_next
	call        auxopen, %arg1, %r15298, %r15299, %r15300
	call        lua_createtable, %arg1, $0, $1
	call        lua_pushvalue, %arg1, $0xffffffff
	call.32     %r15304 <- lua_setmetatable, %arg1, $0xfffffffe
	symaddr.64  %r15306 <- <anon symbol:0x62d00148cef8>
	call        lua_pushlstring, %arg1, %r15306, $2
	symaddr.64  %r15308 <- <anon symbol:0x62d00148d468>
	call        lua_setfield, %arg1, $0xfffffffe, %r15308
	symaddr.64  %r15310 <- luaB_newproxy
	call        lua_pushcclosure, %arg1, %r15310, $1
	symaddr.64  %r15312 <- <anon symbol:0x62d00148d9d8>
	call        lua_setfield, %arg1, $0xffffd8ee, %r15312
	ret


luaopen_base:
.L3502:
	<entry-point>
	call        base_open, %arg1
	ret.32      $1


tinsert:
.L3504:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15317 <- lua_objlen, %arg1, $1
	cast.32     %r15318 <- (64) %r15317
	add.32      %r15319(e) <- %r15318, $1
	call.32     %r15321 <- lua_gettop, %arg1
	switch      %r15321, 2 -> .L3506, 3 -> .L3507, default -> .L3508

.L3506:
	phisrc.32   %phi2371(pos) <- %r15319(e)
	br          .L3505

.L3507:
	call.64     %r15324 <- luaL_checkinteger, %arg1, $2
	scast.32    %r15325 <- (64) %r15324
	setgt.32    %r15328 <- %r15325, %r15319(e)
	select.32   %r15330(i) <- %r15328, %r15325, %r15319(e)
	phisrc.32   %phi2378(i) <- %r15330(i)
	br          .L3514

.L3514:
	phi.32      %r15331(i) <- %phi2378(i), %phi2379(i)
	setgt.32    %r15333 <- %r15331(i), %r15325
	phisrc.32   %phi2372(pos) <- %r15325
	br          %r15333, .L3511, .L3505

.L3511:
	add.32      %r15336 <- %r15331(i), $-1
	call        lua_rawgeti, %arg1, $1, %r15336
	call        lua_rawseti, %arg1, $1, %r15331(i)
	phisrc.32   %phi2379(i) <- %r15336
	br          .L3514

.L3508:
	symaddr.64  %r15342 <- <anon symbol:0x62d00148dd78>
	call.32     %r15343 <- luaL_error, %arg1, %r15342
	phisrc.32   %phi2365(return) <- %r15343
	br          .L3515

.L3505:
	phi.32      %r15346 <- %phi2371(pos), %phi2372(pos)
	call        lua_rawseti, %arg1, $1, %r15346
	phisrc.32   %phi2366(return) <- $0
	br          .L3515

.L3515:
	phi.32      %r15344 <- %phi2365(return), %phi2366(return)
	ret.32      %r15344


tremove:
.L3516:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15349 <- lua_objlen, %arg1, $1
	cast.32     %r15350 <- (64) %r15349
	scast.64    %r15353 <- (32) %r15350
	call.64     %r15354 <- luaL_optinteger, %arg1, $2, %r15353
	scast.32    %r15355 <- (64) %r15354
	setle.32    %r15357 <- $1, %r15355
	setle.32    %r15360 <- %r15355, %r15350
	and-bool.32 %r15361 <- %r15357, %r15360
	br          %r15361, .L3518, .L3517

.L3517:
	phisrc.32   %phi2380(return) <- $0
	br          .L3519

.L3518:
	call        lua_rawgeti, %arg1, $1, %r15355
	phisrc.32   %phi2384(pos) <- %r15355
	br          .L3523

.L3523:
	phi.32      %r15365(pos) <- %phi2384(pos), %phi2385(pos)
	setlt.32    %r15367 <- %r15365(pos), %r15350
	br          %r15367, .L3520, .L3522

.L3520:
	add.32      %r15370 <- %r15365(pos), $1
	call        lua_rawgeti, %arg1, $1, %r15370
	call        lua_rawseti, %arg1, $1, %r15365(pos)
	phisrc.32   %phi2385(pos) <- %r15370
	br          .L3523

.L3522:
	call        lua_pushnil, %arg1
	call        lua_rawseti, %arg1, $1, %r15350
	phisrc.32   %phi2381(return) <- $1
	br          .L3519

.L3519:
	phi.32      %r15362 <- %phi2380(return), %phi2381(return)
	ret.32      %r15362


addfield:
.L3524:
	<entry-point>
	call        lua_rawgeti, %arg1, $1, %arg3
	call.32     %r15381 <- lua_isstring, %arg1, $0xffffffff
	br          %r15381, .L3526, .L3525

.L3525:
	symaddr.64  %r15383 <- <anon symbol:0x62d00148e118>
	call.32     %r15386 <- lua_type, %arg1, $0xffffffff
	call.64     %r15387 <- lua_typename, %arg1, %r15386
	call.32     %r15389 <- luaL_error, %arg1, %r15383, %r15387, %arg3
	br          .L3526

.L3526:
	call        luaL_addvalue, %arg2
	ret


tconcat:
.L3528:
	<entry-point>
	symaddr.64  %r15392 <- <anon symbol:0x62d00148e4b8>
	symaddr.64  %r15393 <- lsep
	call.64     %r15394 <- luaL_optlstring, %arg1, $2, %r15392, %r15393
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15397 <- luaL_optinteger, %arg1, $3, $1
	scast.32    %r15398(i) <- (64) %r15397
	call.32     %r15400 <- lua_type, %arg1, $4
	setle.32    %r15401 <- %r15400, $0
	phisrc.32   %phi2394(i) <- %r15398(i)
	br          %r15401, .L3529, .L3530

.L3529:
	call.64     %r15403 <- lua_objlen, %arg1, $1
	cast.32     %r15404 <- (64) %r15403
	phisrc.32   %phi2387 <- %r15404
	br          .L3531

.L3530:
	call.64     %r15406 <- luaL_checkinteger, %arg1, $4
	scast.32    %r15407 <- (64) %r15406
	phisrc.32   %phi2388 <- %r15407
	br          .L3531

.L3531:
	phi.32      %r15408 <- %phi2387, %phi2388
	symaddr.64  %r15410 <- b
	call        luaL_buffinit, %arg1, %r15410
	br          .L3535

.L3535:
	phi.32      %r15411(i) <- %phi2394(i), %phi2395(i)
	setlt.32    %r15413 <- %r15411(i), %r15408
	br          %r15413, .L3532, .L3534

.L3532:
	call        addfield, %arg1, %r15410, %r15411(i)
	load.64     %r15419 <- 0[lsep]
	call        luaL_addlstring, %r15410, %r15394, %r15419
	add.32      %r15421 <- %r15411(i), $1
	phisrc.32   %phi2395(i) <- %r15421
	br          .L3535

.L3534:
	seteq.32    %r15424 <- %r15411(i), %r15408
	br          %r15424, .L3536, .L3537

.L3536:
	call        addfield, %arg1, %r15410, %r15411(i)
	br          .L3537

.L3537:
	call        luaL_pushresult, %r15410
	ret.32      $1


set2:
.L3539:
	<entry-point>
	call        lua_rawseti, %arg1, $1, %arg2
	call        lua_rawseti, %arg1, $1, %arg3
	ret


sort_comp:
.L3541:
	<entry-point>
	call.32     %r15435 <- lua_type, %arg1, $2
	br          %r15435, .L3542, .L3543

.L3542:
	call        lua_pushvalue, %arg1, $2
	add.32      %r15440 <- %arg2, $-1
	call        lua_pushvalue, %arg1, %r15440
	add.32      %r15443 <- %arg3, $-2
	call        lua_pushvalue, %arg1, %r15443
	call        lua_call, %arg1, $2, $1
	call.32     %r15446 <- lua_toboolean, %arg1, $0xffffffff
	call        lua_settop, %arg1, $0xfffffffe
	phisrc.32   %phi2396(return) <- %r15446
	br          .L3544

.L3543:
	call.32     %r15453 <- lua_lessthan, %arg1, %arg2, %arg3
	phisrc.32   %phi2397(return) <- %r15453
	br          .L3544

.L3544:
	phi.32      %r15449 <- %phi2396(return), %phi2397(return)
	ret.32      %r15449


auxsort:
.L3546:
	<entry-point>
	phisrc.32   %phi2411(l) <- %arg2
	phisrc.32   %phi2428(u) <- %arg3
	br          .L3550

.L3550:
	phi.32      %r15454(l) <- %phi2411(l), %phi2412(l)
	phi.32      %r15455(u) <- %phi2428(u), %phi2429(u)
	setlt.32    %r15456 <- %r15454(l), %r15455(u)
	br          %r15456, .L3547, .L3549

.L3547:
	call        lua_rawgeti, %arg1, $1, %r15454(l)
	call        lua_rawgeti, %arg1, $1, %r15455(u)
	call.32     %r15462 <- sort_comp, %arg1, $0xffffffff, $0xfffffffe
	br          %r15462, .L3551, .L3552

.L3551:
	call        set2, %arg1, %r15454(l), %r15455(u)
	br          .L3553

.L3552:
	call        lua_settop, %arg1, $0xfffffffd
	br          .L3553

.L3553:
	sub.32      %r15469 <- %r15455(u), %r15454(l)
	seteq.32    %r15470 <- %r15469, $1
	br          %r15470, .L3549, .L3555

.L3555:
	add.32      %r15473 <- %r15454(l), %r15455(u)
	divs.32     %r15474 <- %r15473, $2
	call        lua_rawgeti, %arg1, $1, %r15474
	call        lua_rawgeti, %arg1, $1, %r15454(l)
	call.32     %r15480 <- sort_comp, %arg1, $0xfffffffe, $0xffffffff
	br          %r15480, .L3556, .L3557

.L3556:
	call        set2, %arg1, %r15474, %r15454(l)
	br          .L3558

.L3557:
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_rawgeti, %arg1, $1, %r15455(u)
	call.32     %r15488 <- sort_comp, %arg1, $0xffffffff, $0xfffffffe
	br          %r15488, .L3559, .L3560

.L3559:
	call        set2, %arg1, %r15474, %r15455(u)
	br          .L3558

.L3560:
	call        lua_settop, %arg1, $0xfffffffd
	br          .L3558

.L3558:
	seteq.32    %r15496 <- %r15469, $2
	br          %r15496, .L3549, .L3563

.L3563:
	call        lua_rawgeti, %arg1, $1, %r15474
	call        lua_pushvalue, %arg1, $0xffffffff
	add.32      %r15502 <- %r15455(u), $-1
	call        lua_rawgeti, %arg1, $1, %r15502
	call        set2, %arg1, %r15474, %r15502
	phisrc.32   %phi2438(i) <- %r15454(l)
	phisrc.32   %phi2450(j) <- %r15502
	br          .L3571

.L3571:
	phi.32      %r15511 <- %phi2438(i), %phi2439(i)
	add.32      %r15512(i) <- %r15511, $1
	call        lua_rawgeti, %arg1, $1, %r15512(i)
	call.32     %r15514 <- sort_comp, %arg1, $0xffffffff, $0xfffffffe
	phisrc.32   %phi2439(i) <- %r15512(i)
	br          %r15514, .L3568, .L3577

.L3568:
	setgt.32    %r15517 <- %r15512(i), %r15455(u)
	br          %r15517, .L3572, .L3573

.L3572:
	symaddr.64  %r15519 <- <anon symbol:0x62d00148f338>
	call.32     %r15520 <- luaL_error, %arg1, %r15519
	br          .L3573

.L3573:
	call        lua_settop, %arg1, $0xfffffffe
	br          .L3571

.L3577:
	phi.32      %r15523 <- %phi2450(j), %phi2451(j)
	add.32      %r15524(j) <- %r15523, $-1
	call        lua_rawgeti, %arg1, $1, %r15524(j)
	call.32     %r15526 <- sort_comp, %arg1, $0xfffffffd, $0xffffffff
	phisrc.32   %phi2451(j) <- %r15524(j)
	br          %r15526, .L3574, .L3576

.L3574:
	setlt.32    %r15529 <- %r15524(j), %r15454(l)
	br          %r15529, .L3578, .L3579

.L3578:
	symaddr.64  %r15531 <- <anon symbol:0x62d00148f6d8>
	call.32     %r15532 <- luaL_error, %arg1, %r15531
	br          .L3579

.L3579:
	call        lua_settop, %arg1, $0xfffffffe
	br          .L3577

.L3576:
	setlt.32    %r15536 <- %r15524(j), %r15512(i)
	br          %r15536, .L3580, .L3581

.L3580:
	call        lua_settop, %arg1, $0xfffffffc
	call        lua_rawgeti, %arg1, $1, %r15502
	call        lua_rawgeti, %arg1, $1, %r15512(i)
	call        set2, %arg1, %r15502, %r15512(i)
	sub.32      %r15552 <- %r15512(i), %r15454(l)
	sub.32      %r15555 <- %r15455(u), %r15512(i)
	setlt.32    %r15556 <- %r15552, %r15555
	br          %r15556, .L3582, .L3583

.L3581:
	call        set2, %arg1, %r15512(i), %r15524(j)
	br          .L3571

.L3582:
	add.32      %r15559 <- %r15512(i), $-1
	add.32      %r15561 <- %r15559, $2
	phisrc.32   %phi2412(l) <- %r15561
	phisrc.32   %phi2430(i) <- %r15559
	phisrc.32   %phi2445(j) <- %r15454(l)
	br          .L3584

.L3583:
	add.32      %r15563 <- %r15512(i), $1
	add.32      %r15566 <- %r15563, $-2
	phisrc.32   %phi2429(u) <- %r15566
	phisrc.32   %phi2431(i) <- %r15455(u)
	phisrc.32   %phi2446(j) <- %r15563
	br          .L3584

.L3584:
	phi.32      %r15568 <- %phi2445(j), %phi2446(j)
	phi.32      %r15569 <- %phi2430(i), %phi2431(i)
	call        auxsort, %arg1, %r15568, %r15569
	br          .L3550

.L3549:
	ret


sort:
.L3585:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15572 <- lua_objlen, %arg1, $1
	cast.32     %r15573 <- (64) %r15572
	symaddr.64  %r15575 <- <anon symbol:0x62d00148fa78>
	call        luaL_checkstack, %arg1, $40, %r15575
	call.32     %r15577 <- lua_type, %arg1, $2
	setle.32    %r15578 <- %r15577, $0
	br          %r15578, .L3587, .L3586

.L3586:
	call        luaL_checktype, %arg1, $2, $6
	br          .L3587

.L3587:
	call        lua_settop, %arg1, $2
	call        auxsort, %arg1, $1, %r15573
	ret.32      $0


luaopen_table:
.L3589:
	<entry-point>
	symaddr.64  %r15585 <- <anon symbol:0x62d00148fe18>
	symaddr.64  %r15586 <- tab_funcs
	call        luaL_register, %arg1, %r15585, %r15586
	ret.32      $1


pushresult:
.L3591:
	<entry-point>
	call.64     %r15588 <- __errno_location
	load.32     %r15589 <- 0[%r15588]
	br          %arg2, .L3592, .L3593

.L3592:
	call        lua_pushboolean, %arg1, $1
	phisrc.32   %phi2454(return) <- $1
	br          .L3594

.L3593:
	call        lua_pushnil, %arg1
	br          %arg3, .L3596, .L3597

.L3596:
	symaddr.64  %r15596 <- <anon symbol:0x62d001490470>
	call.64     %r15599 <- strerror, %r15589
	call.64     %r15600 <- lua_pushfstring, %arg1, %r15596, %arg3, %r15599
	br          .L3598

.L3597:
	symaddr.64  %r15602 <- <anon symbol:0x62d001490810>
	call.64     %r15604 <- strerror, %r15589
	call.64     %r15605 <- lua_pushfstring, %arg1, %r15602, %r15604
	br          .L3598

.L3598:
	scast.64    %r15608 <- (32) %r15589
	call        lua_pushinteger, %arg1, %r15608
	phisrc.32   %phi2455(return) <- $3
	br          .L3594

.L3594:
	phi.32      %r15592 <- %phi2454(return), %phi2455(return)
	ret.32      %r15592


fileerror:
.L3599:
	<entry-point>
	symaddr.64  %r15610 <- <anon symbol:0x62d001490bb0>
	call.64     %r15612 <- __errno_location
	load.32     %r15613 <- 0[%r15612]
	call.64     %r15614 <- strerror, %r15613
	call.64     %r15615 <- lua_pushfstring, %arg1, %r15610, %arg3, %r15614
	call.64     %r15619 <- lua_tolstring, %arg1, $0xffffffff, $0
	call.32     %r15620 <- luaL_argerror, %arg1, %arg2, %r15619
	ret


io_type:
.L3601:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.64     %r15623 <- lua_touserdata, %arg1, $1
	symaddr.64  %r15625 <- <anon symbol:0x62d001491038>
	call        lua_getfield, %arg1, $0xffffd8f0, %r15625
	br          %r15623, .L3605, .L3602

.L3605:
	call.32     %r15629 <- lua_getmetatable, %arg1, $1
	br          %r15629, .L3604, .L3602

.L3604:
	call.32     %r15631 <- lua_rawequal, %arg1, $0xfffffffe, $0xffffffff
	br          %r15631, .L3603, .L3602

.L3602:
	call        lua_pushnil, %arg1
	br          .L3610

.L3603:
	ptrcast.64  %r15634 <- (64) %r15623
	load.64     %r15635 <- 0[%r15634]
	br          %r15635, .L3608, .L3607

.L3607:
	symaddr.64  %r15638 <- <anon symbol:0x62d0014914c0>
	call        lua_pushlstring, %arg1, %r15638, $11
	br          .L3610

.L3608:
	symaddr.64  %r15640 <- <anon symbol:0x62d001491a30>
	call        lua_pushlstring, %arg1, %r15640, $4
	br          .L3610

.L3610:
	ret.32      $1


tofile:
.L3611:
	<entry-point>
	symaddr.64  %r15643 <- <anon symbol:0x62d001491fa0>
	call.64     %r15644 <- luaL_checkudata, %arg1, $1, %r15643
	ptrcast.64  %r15645 <- (64) %r15644
	load.64     %r15647 <- 0[%r15645]
	phisrc.64   %phi2458 <- %r15647
	phisrc.64   %phi2459 <- %r15647
	br          %r15647, .L3613, .L3612

.L3612:
	symaddr.64  %r15650 <- <anon symbol:0x62d001492428>
	call.32     %r15651 <- luaL_error, %arg1, %r15650
	br          .L3613

.L3613:
	load.64     %r15653 <- 0[%r15645]
	ret.64      %r15653


newfile:
.L3615:
	<entry-point>
	call.64     %r15656 <- lua_newuserdata, %arg1, $8
	ptrcast.64  %r15657 <- (64) %r15656
	store.64    $0 -> 0[%r15657]
	symaddr.64  %r15660 <- <anon symbol:0x62d001492998>
	call        lua_getfield, %arg1, $0xffffd8f0, %r15660
	call.32     %r15662 <- lua_setmetatable, %arg1, $0xfffffffe
	ret.64      %r15657


io_noclose:
.L3617:
	<entry-point>
	call        lua_pushnil, %arg1
	symaddr.64  %r15667 <- <anon symbol:0x62d001492d38>
	call        lua_pushlstring, %arg1, %r15667, $26
	ret.32      $2


io_pclose:
.L3619:
	<entry-point>
	symaddr.64  %r15670 <- <anon symbol:0x62d0014932a8>
	call.64     %r15671 <- luaL_checkudata, %arg1, $1, %r15670
	ptrcast.64  %r15672 <- (64) %r15671
	load.64     %r15675 <- 0[%r15672]
	store.64    $0 -> 0[%r15672]
	call.32     %r15679 <- pushresult, %arg1, $0, $0
	ret.32      %r15679


io_fclose:
.L3621:
	<entry-point>
	symaddr.64  %r15682 <- <anon symbol:0x62d001493818>
	call.64     %r15683 <- luaL_checkudata, %arg1, $1, %r15682
	ptrcast.64  %r15684 <- (64) %r15683
	load.64     %r15686 <- 0[%r15684]
	call.32     %r15687 <- fclose, %r15686
	seteq.32    %r15688 <- %r15687, $0
	store.64    $0 -> 0[%r15684]
	call.32     %r15692 <- pushresult, %arg1, %r15688, $0
	ret.32      %r15692


aux_close:
.L3623:
	<entry-point>
	call        lua_getfenv, %arg1, $1
	symaddr.64  %r15696 <- <anon symbol:0x62d001493d88>
	call        lua_getfield, %arg1, $0xffffffff, %r15696
	call.64     %r15700 <- lua_tocfunction, %arg1, $0xffffffff
	call.32     %r15701 <- %r15700, %arg1
	ret.32      %r15701


io_close:
.L3625:
	<entry-point>
	call.32     %r15704 <- lua_type, %arg1, $1
	seteq.32    %r15705 <- %r15704, $0xffffffff
	br          %r15705, .L3626, .L3627

.L3626:
	call        lua_rawgeti, %arg1, $0xffffd8ef, $2
	br          .L3627

.L3627:
	call.64     %r15708 <- tofile, %arg1
	call.32     %r15710 <- aux_close, %arg1
	ret.32      %r15710


io_gc:
.L3629:
	<entry-point>
	symaddr.64  %r15713 <- <anon symbol:0x62d001494128>
	call.64     %r15714 <- luaL_checkudata, %arg1, $1, %r15713
	ptrcast.64  %r15715 <- (64) %r15714
	load.64     %r15716 <- 0[%r15715]
	br          %r15716, .L3630, .L3632

.L3630:
	call.32     %r15720 <- aux_close, %arg1
	br          .L3632

.L3632:
	ret.32      $0


io_open:
.L3633:
	<entry-point>
	call.64     %r15723 <- luaL_checklstring, %arg1, $1, $0
	symaddr.64  %r15725 <- <anon symbol:0x62d0014965e8>
	call.64     %r15726 <- luaL_optlstring, %arg1, $2, %r15725, $0
	call.64     %r15728 <- newfile, %arg1
	call.64     %r15731 <- fopen, %r15723, %r15726
	store.64    %r15731 -> 0[%r15728]
	br          %r15731, .L3636, .L3635

.L3635:
	call.32     %r15738 <- pushresult, %arg1, $0, %r15723
	phisrc.32   %phi2467 <- %r15738
	br          .L3637

.L3636:
	phisrc.32   %phi2468 <- $1
	br          .L3637

.L3637:
	phi.32      %r15739 <- %phi2467, %phi2468
	ret.32      %r15739


getiofile:
.L3638:
	<entry-point>
	call        lua_rawgeti, %arg1, $0xffffd8ef, %arg2
	call.64     %r15744 <- lua_touserdata, %arg1, $0xffffffff
	ptrcast.64  %r15745 <- (64) %r15744
	load.64     %r15746 <- 0[%r15745]
	br          %r15746, .L3641, .L3639

.L3639:
	symaddr.64  %r15750 <- <anon symbol:0x62d001496c40>
	symaddr.64  %r15751 <- fnames
	add.32      %r15753 <- %arg2, $-1
	scast.64    %r15754 <- (32) %r15753
	muls.64     %r15755 <- %r15754, $8
	add.64      %r15756 <- %r15751, %r15755
	load.64     %r15757 <- 0[%r15756]
	call.32     %r15758 <- luaL_error, %arg1, %r15750, %r15757
	br          .L3641

.L3641:
	ret.64      %r15746


g_iofile:
.L3642:
	<entry-point>
	call.32     %r15762 <- lua_type, %arg1, $1
	setle.32    %r15763 <- %r15762, $0
	br          %r15763, .L3644, .L3643

.L3643:
	call.64     %r15765 <- lua_tolstring, %arg1, $1, $0
	br          %r15765, .L3645, .L3646

.L3645:
	call.64     %r15768 <- newfile, %arg1
	call.64     %r15771 <- fopen, %r15765, %arg3
	store.64    %r15771 -> 0[%r15768]
	br          %r15771, .L3649, .L3647

.L3647:
	call        fileerror, %arg1, $1, %r15765
	br          .L3649

.L3646:
	call.64     %r15779 <- tofile, %arg1
	call        lua_pushvalue, %arg1, $1
	br          .L3649

.L3649:
	call        lua_rawseti, %arg1, $0xffffd8ef, %arg2
	br          .L3644

.L3644:
	call        lua_rawgeti, %arg1, $0xffffd8ef, %arg2
	ret.32      $1


io_input:
.L3651:
	<entry-point>
	symaddr.64  %r15787 <- <anon symbol:0x62d001497468>
	call.32     %r15788 <- g_iofile, %arg1, $1, %r15787
	ret.32      %r15788


io_output:
.L3653:
	<entry-point>
	symaddr.64  %r15791 <- <anon symbol:0x62d001497808>
	call.32     %r15792 <- g_iofile, %arg1, $2, %r15791
	ret.32      %r15792


aux_lines:
.L3655:
	<entry-point>
	call        lua_pushvalue, %arg1, %arg2
	call        lua_pushboolean, %arg1, %arg3
	symaddr.64  %r15799 <- io_readline
	call        lua_pushcclosure, %arg1, %r15799, $2
	ret


f_lines:
.L3657:
	<entry-point>
	call.64     %r15801 <- tofile, %arg1
	call        aux_lines, %arg1, $1, $0
	ret.32      $1


io_lines:
.L3659:
	<entry-point>
	call.32     %r15805 <- lua_type, %arg1, $1
	setle.32    %r15806 <- %r15805, $0
	br          %r15806, .L3660, .L3661

.L3660:
	call        lua_rawgeti, %arg1, $0xffffd8ef, $1
	call.32     %r15809 <- f_lines, %arg1
	phisrc.32   %phi2475(return) <- %r15809
	br          .L3662

.L3661:
	call.64     %r15812 <- luaL_checklstring, %arg1, $1, $0
	call.64     %r15814 <- newfile, %arg1
	symaddr.64  %r15816 <- <anon symbol:0x62d001498770>
	call.64     %r15817 <- fopen, %r15812, %r15816
	store.64    %r15817 -> 0[%r15814]
	br          %r15817, .L3665, .L3664

.L3664:
	call        fileerror, %arg1, $1, %r15812
	br          .L3665

.L3665:
	call.32     %r15826 <- lua_gettop, %arg1
	call        aux_lines, %arg1, %r15826, $1
	phisrc.32   %phi2476(return) <- $1
	br          .L3662

.L3662:
	phi.32      %r15810 <- %phi2475(return), %phi2476(return)
	ret.32      %r15810


read_number:
.L3666:
	<entry-point>
	symaddr.64  %r15828 <- <anon symbol:0x62d001498bf8>
	symaddr.64  %r15829 <- d
	call.32     %r15830 <- fscanf, %arg2, %r15828, %r15829
	seteq.32    %r15831 <- %r15830, $1
	br          %r15831, .L3667, .L3668

.L3667:
	load.64     %r15833 <- 0[d]
	call        lua_pushnumber, %arg1, %r15833
	br          .L3669

.L3668:
	call        lua_pushnil, %arg1
	br          .L3669

.L3669:
	ret.32      %r15831


test_eof:
.L3671:
	<entry-point>
	call.32     %r15837 <- _IO_getc, %arg2
	call.32     %r15840 <- ungetc, %r15837, %arg2
	call        lua_pushlstring, %arg1, $0, $0
	setne.32    %r15843 <- %r15837, $0xffffffff
	ret.32      %r15843


read_line:
.L3673:
	<entry-point>
	symaddr.64  %r15846 <- b
	call        luaL_buffinit, %arg1, %r15846
	br          .L3674

.L3674:
	call.64     %r15848 <- luaL_prepbuffer, %r15846
	call.64     %r15851 <- fgets, %r15848, $0x2000, %arg2
	br          %r15851, .L3679, .L3678

.L3678:
	call        luaL_pushresult, %r15846
	call.64     %r15855 <- lua_objlen, %arg1, $0xffffffff
	seta.32     %r15856 <- %r15855, $0
	phisrc.32   %phi2480(return) <- %r15856
	br          .L3680

.L3679:
	call.64     %r15859 <- strlen, %r15848
	br          %r15859, .L3683, .L3681

.L3683:
	add.64      %r15864 <- %r15859, $-1
	add.64      %r15865 <- %r15848, %r15864
	load.8      %r15866 <- 0[%r15865]
	scast.32    %r15867 <- (8) %r15866
	setne.32    %r15868 <- %r15867, $10
	br          %r15868, .L3681, .L3682

.L3681:
	load.64     %r15870 <- 0[b]
	cast.64     %r15871 <- (64) %r15870
	add.64      %r15872 <- %r15871, %r15859
	ptrcast.64  %r15873 <- (64) %r15872
	store.64    %r15873 -> 0[b]
	br          .L3674

.L3682:
	load.64     %r15876 <- 0[b]
	cast.64     %r15877 <- (64) %r15876
	add.64      %r15878 <- %r15877, %r15864
	ptrcast.64  %r15879 <- (64) %r15878
	store.64    %r15879 -> 0[b]
	call        luaL_pushresult, %r15846
	phisrc.32   %phi2481(return) <- $1
	br          .L3680

.L3680:
	phi.32      %r15857 <- %phi2480(return), %phi2481(return)
	ret.32      %r15857


read_chars:
.L3685:
	<entry-point>
	symaddr.64  %r15882 <- b
	call        luaL_buffinit, %arg1, %r15882
	phisrc.64   %phi2490(n) <- %arg3
	phisrc.64   %phi2495(rlen) <- $0x2000
	br          .L3686

.L3686:
	call.64     %r15884 <- luaL_prepbuffer, %r15882
	phi.64      %r15885(rlen) <- %phi2495(rlen), %phi2496(rlen)
	phi.64      %r15886(n) <- %phi2490(n), %phi2491(n)
	seta.32     %r15887 <- %r15885(rlen), %r15886(n)
	select.64   %r15891(rlen) <- %r15887, %r15886(n), %r15885(rlen)
	br          %r15887, .L3689, .L3690

.L3689:
	phisrc.64   %phi2496(rlen) <- %r15886(n)
	br          .L3690

.L3690:
	cast.64     %r15890 <- (64) %r15884
	call.64     %r15893 <- fread, %r15890, $1, %r15891(rlen), %arg2
	load.64     %r15895 <- 0[b]
	cast.64     %r15896 <- (64) %r15895
	add.64      %r15897 <- %r15896, %r15893
	ptrcast.64  %r15898 <- (64) %r15897
	store.64    %r15898 -> 0[b]
	sub.64      %r15902 <- %r15886(n), %r15893
	phisrc.64   %phi2491(n) <- %r15902
	seta.32     %r15905 <- %r15902, $0
	seteq.32    %r15908 <- %r15893, %r15891(rlen)
	and-bool.32 %r15909 <- %r15905, %r15908
	br          %r15909, .L3686, .L3688

.L3688:
	call        luaL_pushresult, %r15882
	br          %r15902, .L3693, .L3692

.L3692:
	phisrc.32   %phi2482 <- $1
	br          .L3694

.L3693:
	call.64     %r15914 <- lua_objlen, %arg1, $0xffffffff
	seta.32     %r15915 <- %r15914, $0
	phisrc.32   %phi2483 <- %r15915
	br          .L3694

.L3694:
	phi.32      %r15916 <- %phi2482, %phi2483
	ret.32      %r15916


g_read:
.L3695:
	<entry-point>
	call.32     %r15919 <- lua_gettop, %arg1
	add.32      %r15920 <- %r15919, $-1
	call        clearerr, %arg2
	br          %r15920, .L3697, .L3696

.L3696:
	call.32     %r15926(success) <- read_line, %arg1, %arg2
	add.32      %r15928(n) <- %arg3, $1
	phisrc.32   %phi2507(success) <- %r15926(success)
	phisrc.32   %phi2514(n) <- %r15928(n)
	br          .L3698

.L3697:
	add.32      %r15931 <- %r15920, $20
	symaddr.64  %r15932 <- <anon symbol:0x62d00149a728>
	call        luaL_checkstack, %arg1, %r15931, %r15932
	phisrc.32   %phi2504(nargs) <- %r15920
	phisrc.32   %phi2509(success) <- $1
	phisrc.32   %phi2515(n) <- %arg3
	phisrc.32   %phi2525(n) <- %arg3
	br          .L3702

.L3702:
	phi.32      %r15934 <- %phi2504(nargs), %phi2505(nargs)
	add.32      %r15935 <- %r15934, $-1
	phi.32      %r15936 <- %phi2509(success), %phi2510(success), %phi2511(success), %phi2512(success), %phi2513(success)
	and-bool.32 %r15937 <- %r15934, %r15936
	phisrc.32   %phi2505(nargs) <- %r15935
	phisrc.32   %phi2508(success) <- %r15936
	br          %r15937, .L3699, .L3698

.L3699:
	phi.32      %r15939(n) <- %phi2525(n), %phi2526(n)
	call.32     %r15940 <- lua_type, %arg1, %r15939(n)
	seteq.32    %r15941 <- %r15940, $3
	br          %r15941, .L3703, .L3704

.L3703:
	call.64     %r15944 <- lua_tointeger, %arg1, %r15939(n)
	br          %r15944, .L3706, .L3705

.L3705:
	call.32     %r15950 <- test_eof, %arg1, %arg2
	phisrc.32   %phi2497 <- %r15950
	br          .L3707

.L3706:
	call.32     %r15954 <- read_chars, %arg1, %arg2, %r15944
	phisrc.32   %phi2498 <- %r15954
	br          .L3707

.L3707:
	phi.32      %r15955 <- %phi2497, %phi2498
	phisrc.32   %phi2510(success) <- %r15955
	br          .L3700

.L3704:
	call.64     %r15958 <- lua_tolstring, %arg1, %r15939(n), $0
	br          %r15958, .L3712, .L3710

.L3712:
	load.8      %r15961 <- 0[%r15958]
	scast.32    %r15962 <- (8) %r15961
	seteq.32    %r15963 <- %r15962, $42
	br          %r15963, .L3711, .L3710

.L3710:
	symaddr.64  %r15966 <- <anon symbol:0x62d00149abb0>
	call.32     %r15967 <- luaL_argerror, %arg1, %r15939(n), %r15966
	br          .L3711

.L3711:
	load.8      %r15970 <- 1[%r15958]
	switch      %r15970, 97 -> .L3716, 108 -> .L3715, 110 -> .L3714, default -> .L3717

.L3714:
	call.32     %r15973 <- read_number, %arg1, %arg2
	phisrc.32   %phi2511(success) <- %r15973
	br          .L3700

.L3715:
	call.32     %r15976 <- read_line, %arg1, %arg2
	phisrc.32   %phi2512(success) <- %r15976
	br          .L3700

.L3716:
	call.32     %r15979 <- read_chars, %arg1, %arg2, $-1
	phisrc.32   %phi2513(success) <- $1
	br          .L3700

.L3717:
	symaddr.64  %r15982 <- <anon symbol:0x62d00149b038>
	call.32     %r15983 <- luaL_argerror, %arg1, %r15939(n), %r15982
	phisrc.32   %phi2501(return) <- %r15983
	br          .L3718

.L3700:
	add.32      %r15986 <- %r15939(n), $1
	phisrc.32   %phi2516(n) <- %r15986
	phisrc.32   %phi2526(n) <- %r15986
	br          .L3702

.L3698:
	call.32     %r15988 <- ferror, %arg2
	br          %r15988, .L3719, .L3720

.L3719:
	call.32     %r15990 <- pushresult, %arg1, $0, $0
	phisrc.32   %phi2502(return) <- %r15990
	br          .L3718

.L3720:
	phi.32      %r15991 <- %phi2507(success), %phi2508(success)
	br          %r15991, .L3722, .L3721

.L3721:
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_pushnil, %arg1
	br          .L3722

.L3722:
	phi.32      %r15994 <- %phi2514(n), %phi2515(n), %phi2516(n)
	sub.32      %r15996 <- %r15994, %arg3
	phisrc.32   %phi2503(return) <- %r15996
	br          .L3718

.L3718:
	phi.32      %r15984 <- %phi2501(return), %phi2502(return), %phi2503(return)
	ret.32      %r15984


io_read:
.L3723:
	<entry-point>
	call.64     %r15999 <- getiofile, %arg1, $1
	call.32     %r16000 <- g_read, %arg1, %r15999, $1
	ret.32      %r16000


f_read:
.L3725:
	<entry-point>
	call.64     %r16004 <- tofile, %arg1
	call.32     %r16005 <- g_read, %arg1, %r16004, $2
	ret.32      %r16005


io_readline:
.L3727:
	<entry-point>
	call.64     %r16008 <- lua_touserdata, %arg1, $0xffffd8ed
	ptrcast.64  %r16009 <- (64) %r16008
	load.64     %r16010 <- 0[%r16009]
	br          %r16010, .L3729, .L3728

.L3728:
	symaddr.64  %r16014 <- <anon symbol:0x62d001497c90>
	call.32     %r16015 <- luaL_error, %arg1, %r16014
	br          .L3729

.L3729:
	call.32     %r16018 <- read_line, %arg1, %r16010
	call.32     %r16020 <- ferror, %r16010
	br          %r16020, .L3730, .L3731

.L3730:
	symaddr.64  %r16022 <- <anon symbol:0x62d001498030>
	call.64     %r16023 <- __errno_location
	load.32     %r16024 <- 0[%r16023]
	call.64     %r16025 <- strerror, %r16024
	call.32     %r16026 <- luaL_error, %arg1, %r16022, %r16025
	phisrc.32   %phi2529(return) <- %r16026
	br          .L3732

.L3731:
	br          %r16018, .L3733, .L3734

.L3733:
	phisrc.32   %phi2530(return) <- $1
	br          .L3732

.L3734:
	call.32     %r16030 <- lua_toboolean, %arg1, $0xffffd8ec
	br          %r16030, .L3736, .L3737

.L3736:
	call        lua_settop, %arg1, $0
	call        lua_pushvalue, %arg1, $0xffffd8ed
	call.32     %r16034 <- aux_close, %arg1
	br          .L3737

.L3737:
	phisrc.32   %phi2531(return) <- $0
	br          .L3732

.L3732:
	phi.32      %r16027 <- %phi2529(return), %phi2530(return), %phi2531(return)
	ret.32      %r16027


g_write:
.L3738:
	<entry-point>
	call.32     %r16036 <- lua_gettop, %arg1
	add.32      %r16037(nargs) <- %r16036, $-1
	phisrc.32   %phi2542(arg) <- %arg3
	phisrc.32   %phi2544(nargs) <- %r16037(nargs)
	phisrc.32   %phi2552(status) <- $1
	br          .L3742

.L3742:
	phi.32      %r16038 <- %phi2544(nargs), %phi2545(nargs)
	add.32      %r16039 <- %r16038, $-1
	phisrc.32   %phi2545(nargs) <- %r16039
	phi.32      %r16044 <- %phi2552(status), %phi2553(status), %phi2554(status)
	br          %r16038, .L3739, .L3741

.L3739:
	phi.32      %r16041(arg) <- %phi2542(arg), %phi2543(arg)
	call.32     %r16042 <- lua_type, %arg1, %r16041(arg)
	seteq.32    %r16043 <- %r16042, $3
	br          %r16043, .L3743, .L3744

.L3743:
	br          %r16044, .L3745, .L3746

.L3745:
	symaddr.64  %r16046 <- <anon symbol:0x62d00149b3d8>
	call.64     %r16049 <- lua_tonumber, %arg1, %r16041(arg)
	call.32     %r16050 <- fprintf, %arg2, %r16046, %r16049
	setgt.32    %r16051 <- %r16050, $0
	phisrc.32   %phi2532 <- %r16051
	br          .L3747

.L3746:
	phisrc.32   %phi2533 <- $0
	br          .L3747

.L3747:
	phi.32      %r16052 <- %phi2532, %phi2533
	phisrc.32   %phi2553(status) <- %r16052
	br          .L3740

.L3744:
	symaddr.64  %r16055 <- l
	call.64     %r16056 <- luaL_checklstring, %arg1, %r16041(arg), %r16055
	br          %r16044, .L3749, .L3750

.L3749:
	cast.64     %r16059 <- (64) %r16056
	load.64     %r16060 <- 0[l]
	call.64     %r16062 <- fwrite, %r16059, $1, %r16060, %arg2
	load.64     %r16063 <- 0[l]
	seteq.32    %r16064 <- %r16062, %r16063
	phisrc.32   %phi2534 <- %r16064
	br          .L3751

.L3750:
	phisrc.32   %phi2535 <- $0
	br          .L3751

.L3751:
	phi.32      %r16065 <- %phi2534, %phi2535
	phisrc.32   %phi2554(status) <- %r16065
	br          .L3740

.L3740:
	add.32      %r16067 <- %r16041(arg), $1
	phisrc.32   %phi2543(arg) <- %r16067
	br          .L3742

.L3741:
	call.32     %r16070 <- pushresult, %arg1, %r16044, $0
	ret.32      %r16070


io_write:
.L3753:
	<entry-point>
	call.64     %r16074 <- getiofile, %arg1, $2
	call.32     %r16075 <- g_write, %arg1, %r16074, $1
	ret.32      %r16075


f_write:
.L3755:
	<entry-point>
	call.64     %r16079 <- tofile, %arg1
	call.32     %r16080 <- g_write, %arg1, %r16079, $2
	ret.32      %r16080


io_flush:
.L3757:
	<entry-point>
	call.64     %r16084 <- getiofile, %arg1, $2
	call.32     %r16085 <- fflush, %r16084
	seteq.32    %r16086 <- %r16085, $0
	call.32     %r16087 <- pushresult, %arg1, %r16086, $0
	ret.32      %r16087


f_flush:
.L3759:
	<entry-point>
	call.64     %r16091 <- tofile, %arg1
	call.32     %r16092 <- fflush, %r16091
	seteq.32    %r16093 <- %r16092, $0
	call.32     %r16094 <- pushresult, %arg1, %r16093, $0
	ret.32      %r16094


createmeta:
.L3761:
	<entry-point>
	symaddr.64  %r16097 <- <anon symbol:0x62d00149b948>
	call.32     %r16098 <- luaL_newmetatable, %arg1, %r16097
	call        lua_pushvalue, %arg1, $0xffffffff
	symaddr.64  %r16101 <- <anon symbol:0x62d00149bce8>
	call        lua_setfield, %arg1, $0xfffffffe, %r16101
	symaddr.64  %r16103 <- flib
	call        luaL_register, %arg1, $0, %r16103
	ret


createstdfile:
.L3763:
	<entry-point>
	call.64     %r16106 <- newfile, %arg1
	store.64    %arg2 -> 0[%r16106]
	setgt.32    %r16108 <- %arg3, $0
	br          %r16108, .L3764, .L3765

.L3764:
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_rawseti, %arg1, $0xffffd8ef, %arg3
	br          .L3765

.L3765:
	call        lua_pushvalue, %arg1, $0xfffffffe
	call.32     %r16114 <- lua_setfenv, %arg1, $0xfffffffe
	call        lua_setfield, %arg1, $0xfffffffd, %arg4
	ret


newfenv:
.L3767:
	<entry-point>
	call        lua_createtable, %arg1, $0, $1
	call        lua_pushcclosure, %arg1, %arg2, $0
	symaddr.64  %r16121 <- <anon symbol:0x62d00149c340>
	call        lua_setfield, %arg1, $0xfffffffe, %r16121
	ret


luaopen_io:
.L3769:
	<entry-point>
	call        createmeta, %arg1
	symaddr.64  %r16124 <- io_fclose
	call        newfenv, %arg1, %r16124
	call        lua_replace, %arg1, $0xffffd8ef
	symaddr.64  %r16127 <- <anon symbol:0x62d00149c8b0>
	symaddr.64  %r16128 <- iolib
	call        luaL_register, %arg1, %r16127, %r16128
	symaddr.64  %r16130 <- io_noclose
	call        newfenv, %arg1, %r16130
	load.64     %r16132 <- 0[stdin]
	symaddr.64  %r16133 <- <anon symbol:0x62d00149cff0>
	call        createstdfile, %arg1, %r16132, $1, %r16133
	load.64     %r16135 <- 0[stdout]
	symaddr.64  %r16136 <- <anon symbol:0x62d00149d390>
	call        createstdfile, %arg1, %r16135, $2, %r16136
	load.64     %r16138 <- 0[stderr]
	symaddr.64  %r16139 <- <anon symbol:0x62d00149d730>
	call        createstdfile, %arg1, %r16138, $0, %r16139
	call        lua_settop, %arg1, $0xfffffffe
	symaddr.64  %r16142 <- <anon symbol:0x62d00149dad0>
	call        lua_getfield, %arg1, $0xffffffff, %r16142
	symaddr.64  %r16144 <- io_pclose
	call        newfenv, %arg1, %r16144
	call.32     %r16146 <- lua_setfenv, %arg1, $0xfffffffe
	call        lua_settop, %arg1, $0xfffffffe
	ret.32      $1


os_pushresult:
.L3771:
	<entry-point>
	call.64     %r16149 <- __errno_location
	load.32     %r16150 <- 0[%r16149]
	select.32   %r16153 <- %arg2, $1, $3
	br          %arg2, .L3772, .L3773

.L3772:
	call        lua_pushboolean, %arg1, $1
	br          .L3774

.L3773:
	call        lua_pushnil, %arg1
	symaddr.64  %r16156 <- <anon symbol:0x62d00149e128>
	call.64     %r16159 <- strerror, %r16150
	call.64     %r16160 <- lua_pushfstring, %arg1, %r16156, %arg3, %r16159
	scast.64    %r16163 <- (32) %r16150
	call        lua_pushinteger, %arg1, %r16163
	br          .L3774

.L3774:
	ret.32      %r16153


os_remove:
.L3776:
	<entry-point>
	call.64     %r16165 <- luaL_checklstring, %arg1, $1, $0
	call.32     %r16168 <- remove, %r16165
	seteq.32    %r16169 <- %r16168, $0
	call.32     %r16171 <- os_pushresult, %arg1, %r16169, %r16165
	ret.32      %r16171


os_exit:
.L3778:
	<entry-point>
	call.64     %r16174 <- luaL_optinteger, %arg1, $1, $0
	scast.32    %r16175 <- (64) %r16174
	call        exit, %r16175
	ret.32


luaopen_os:
.L3780:
	<entry-point>
	symaddr.64  %r16177 <- <anon symbol:0x62d0014a0500>
	symaddr.64  %r16178 <- syslib
	call        luaL_register, %arg1, %r16177, %r16178
	ret.32      $1


posrelat:
.L3782:
	<entry-point>
	setlt.32    %r16181 <- %arg1, $0
	phisrc.64   %phi2565(pos) <- %arg1
	br          %r16181, .L3783, .L3784

.L3783:
	add.64      %r16184 <- %arg2, $1
	add.64      %r16187 <- %arg1, %r16184
	phisrc.64   %phi2566(pos) <- %r16187
	br          .L3784

.L3784:
	phi.64      %r16189 <- %phi2565(pos), %phi2566(pos)
	setge.32    %r16191 <- %r16189, $0
	select.64   %r16192 <- %r16191, %r16189, $0
	ret.64      %r16192


str_sub:
.L3786:
	<entry-point>
	symaddr.64  %r16195 <- l
	call.64     %r16196 <- luaL_checklstring, %arg1, $1, %r16195
	call.64     %r16198 <- luaL_checkinteger, %arg1, $2
	load.64     %r16199 <- 0[l]
	call.64     %r16200 <- posrelat, %r16198, %r16199
	call.64     %r16202 <- luaL_optinteger, %arg1, $3, $-1
	load.64     %r16203 <- 0[l]
	call.64     %r16204(end) <- posrelat, %r16202, %r16203
	setlt.32    %r16206 <- %r16200, $1
	select.64   %r16213(start) <- %r16206, $1, %r16200
	load.64     %r16208(l) <- 0[l]
	setgt.32    %r16210 <- %r16204(end), %r16208(l)
	select.64   %r16214(end) <- %r16210, %r16208(l), %r16204(end)
	setle.32    %r16215 <- %r16213(start), %r16214(end)
	br          %r16215, .L3791, .L3792

.L3791:
	add.64      %r16219 <- %r16196, %r16213(start)
	add.64      %r16220 <- %r16219, $-1
	sub.64      %r16223 <- %r16214(end), %r16213(start)
	add.64      %r16224 <- %r16223, $1
	call        lua_pushlstring, %arg1, %r16220, %r16224
	br          .L3794

.L3792:
	symaddr.64  %r16227 <- <anon symbol:0x62d0014a0c40>
	call        lua_pushlstring, %arg1, %r16227, $0
	br          .L3794

.L3794:
	ret.32      $1


str_lower:
.L3795:
	<entry-point>
	symaddr.64  %r16230 <- l
	call.64     %r16231 <- luaL_checklstring, %arg1, $1, %r16230
	symaddr.64  %r16233 <- b
	call        luaL_buffinit, %arg1, %r16233
	phisrc.64   %phi2582(i) <- $0
	br          .L3799

.L3799:
	phi.64      %r16234(i) <- %phi2582(i), %phi2583(i)
	load.64     %r16235 <- 0[l]
	setb.32     %r16236 <- %r16234(i), %r16235
	br          %r16236, .L3796, .L3798

.L3796:
	load.64     %r16237 <- 0[b]
	add.64      %r16240 <- %r16233, $0x2018
	setb.32     %r16241 <- %r16237, %r16240
	br          %r16241, .L3802, .L3801

.L3801:
	call.64     %r16243 <- luaL_prepbuffer, %r16233
	br          .L3802

.L3802:
	add.64      %r16247 <- %r16231, %r16234(i)
	load.8      %r16248 <- 0[%r16247]
	cast.32     %r16250 <- (8) %r16248
	call.32     %r16251 <- tolower, %r16250
	scast.8     %r16252 <- (32) %r16251
	load.64     %r16253 <- 0[b]
	add.64      %r16254 <- %r16253, $1
	store.64    %r16254 -> 0[b]
	store.8     %r16252 -> 0[%r16253]
	add.64      %r16256 <- %r16234(i), $1
	phisrc.64   %phi2583(i) <- %r16256
	br          .L3799

.L3798:
	call        luaL_pushresult, %r16233
	ret.32      $1


str_upper:
.L3804:
	<entry-point>
	symaddr.64  %r16260 <- l
	call.64     %r16261 <- luaL_checklstring, %arg1, $1, %r16260
	symaddr.64  %r16263 <- b
	call        luaL_buffinit, %arg1, %r16263
	phisrc.64   %phi2589(i) <- $0
	br          .L3808

.L3808:
	phi.64      %r16264(i) <- %phi2589(i), %phi2590(i)
	load.64     %r16265 <- 0[l]
	setb.32     %r16266 <- %r16264(i), %r16265
	br          %r16266, .L3805, .L3807

.L3805:
	load.64     %r16267 <- 0[b]
	add.64      %r16270 <- %r16263, $0x2018
	setb.32     %r16271 <- %r16267, %r16270
	br          %r16271, .L3811, .L3810

.L3810:
	call.64     %r16273 <- luaL_prepbuffer, %r16263
	br          .L3811

.L3811:
	add.64      %r16277 <- %r16261, %r16264(i)
	load.8      %r16278 <- 0[%r16277]
	cast.32     %r16280 <- (8) %r16278
	call.32     %r16281 <- toupper, %r16280
	scast.8     %r16282 <- (32) %r16281
	load.64     %r16283 <- 0[b]
	add.64      %r16284 <- %r16283, $1
	store.64    %r16284 -> 0[b]
	store.8     %r16282 -> 0[%r16283]
	add.64      %r16286 <- %r16264(i), $1
	phisrc.64   %phi2590(i) <- %r16286
	br          .L3808

.L3807:
	call        luaL_pushresult, %r16263
	ret.32      $1


str_rep:
.L3813:
	<entry-point>
	symaddr.64  %r16290 <- l
	call.64     %r16291 <- luaL_checklstring, %arg1, $1, %r16290
	call.64     %r16293 <- luaL_checkinteger, %arg1, $2
	scast.32    %r16294(n) <- (64) %r16293
	symaddr.64  %r16296 <- b
	call        luaL_buffinit, %arg1, %r16296
	phisrc.32   %phi2592(n) <- %r16294(n)
	br          .L3817

.L3817:
	phi.32      %r16297 <- %phi2592(n), %phi2593(n)
	add.32      %r16298 <- %r16297, $-1
	setgt.32    %r16299 <- %r16297, $0
	phisrc.32   %phi2593(n) <- %r16298
	br          %r16299, .L3814, .L3816

.L3814:
	load.64     %r16302 <- 0[l]
	call        luaL_addlstring, %r16296, %r16291, %r16302
	br          .L3817

.L3816:
	call        luaL_pushresult, %r16296
	ret.32      $1


str_byte:
.L3819:
	<entry-point>
	symaddr.64  %r16306 <- l
	call.64     %r16307 <- luaL_checklstring, %arg1, $1, %r16306
	call.64     %r16309 <- luaL_optinteger, %arg1, $2, $1
	load.64     %r16310 <- 0[l]
	call.64     %r16311 <- posrelat, %r16309, %r16310
	call.64     %r16314 <- luaL_optinteger, %arg1, $3, %r16311
	load.64     %r16315 <- 0[l]
	call.64     %r16316(pose) <- posrelat, %r16314, %r16315
	setle.32    %r16318 <- %r16311, $0
	select.64   %r16325(posi) <- %r16318, $1, %r16311
	load.64     %r16321(l) <- 0[l]
	seta.32     %r16322 <- %r16316(pose), %r16321(l)
	select.64   %r16326(pose) <- %r16322, %r16321(l), %r16316(pose)
	setgt.32    %r16327 <- %r16325(posi), %r16326(pose)
	br          %r16327, .L3824, .L3825

.L3824:
	phisrc.32   %phi2594(return) <- $0
	br          .L3826

.L3825:
	sub.64      %r16331 <- %r16326(pose), %r16325(posi)
	add.64      %r16332 <- %r16331, $1
	scast.32    %r16333 <- (64) %r16332
	scast.64    %r16336 <- (32) %r16333
	add.64      %r16337 <- %r16325(posi), %r16336
	setle.32    %r16339 <- %r16337, %r16326(pose)
	br          %r16339, .L3827, .L3828

.L3827:
	symaddr.64  %r16341 <- <anon symbol:0x62d0014a40d0>
	call.32     %r16342 <- luaL_error, %arg1, %r16341
	br          .L3828

.L3828:
	symaddr.64  %r16345 <- <anon symbol:0x62d0014a4470>
	call        luaL_checkstack, %arg1, %r16333, %r16345
	phisrc.32   %phi2607(i) <- $0
	br          .L3832

.L3832:
	phi.32      %r16346(i) <- %phi2607(i), %phi2608(i)
	setlt.32    %r16348 <- %r16346(i), %r16333
	br          %r16348, .L3829, .L3831

.L3829:
	scast.64    %r16353 <- (32) %r16346(i)
	add.64      %r16354 <- %r16325(posi), %r16353
	add.64      %r16355 <- %r16354, $-1
	add.64      %r16356 <- %r16307, %r16355
	load.8      %r16357 <- 0[%r16356]
	cast.64     %r16359 <- (8) %r16357
	call        lua_pushinteger, %arg1, %r16359
	add.32      %r16361 <- %r16346(i), $1
	phisrc.32   %phi2608(i) <- %r16361
	br          .L3832

.L3831:
	phisrc.32   %phi2595(return) <- %r16333
	br          .L3826

.L3826:
	phi.32      %r16328 <- %phi2594(return), %phi2595(return)
	ret.32      %r16328


str_char:
.L3833:
	<entry-point>
	call.32     %r16364 <- lua_gettop, %arg1
	symaddr.64  %r16366 <- b
	call        luaL_buffinit, %arg1, %r16366
	phisrc.32   %phi2619(i) <- $1
	br          .L3837

.L3837:
	phi.32      %r16367(i) <- %phi2619(i), %phi2620(i)
	setle.32    %r16369 <- %r16367(i), %r16364
	br          %r16369, .L3834, .L3836

.L3834:
	call.64     %r16372 <- luaL_checkinteger, %arg1, %r16367(i)
	scast.32    %r16373 <- (64) %r16372
	scast.8     %r16375 <- (32) %r16373
	cast.32     %r16376 <- (8) %r16375
	seteq.32    %r16378 <- %r16376, %r16373
	br          %r16378, .L3840, .L3839

.L3839:
	symaddr.64  %r16381 <- <anon symbol:0x62d0014a4ac8>
	call.32     %r16382 <- luaL_argerror, %arg1, %r16367(i), %r16381
	br          .L3840

.L3840:
	load.64     %r16384 <- 0[b]
	add.64      %r16387 <- %r16366, $0x2018
	setb.32     %r16388 <- %r16384, %r16387
	phisrc.64   %phi2614(b) <- %r16384
	phisrc.64   %phi2621 <- %r16384
	phisrc.64   %phi2622 <- %r16384
	br          %r16388, .L3843, .L3842

.L3842:
	call.64     %r16390 <- luaL_prepbuffer, %r16366
	br          .L3843

.L3843:
	load.64     %r16395 <- 0[b]
	add.64      %r16396 <- %r16395, $1
	store.64    %r16396 -> 0[b]
	store.8     %r16375 -> 0[%r16395]
	add.32      %r16398 <- %r16367(i), $1
	phisrc.32   %phi2620(i) <- %r16398
	br          .L3837

.L3836:
	call        luaL_pushresult, %r16366
	ret.32      $1


check_capture:
.L3845:
	<entry-point>
	add.32      %r16403 <- %arg2, $-49
	setlt.32    %r16406 <- %r16403, $0
	br          %r16406, .L3846, .L3849

.L3849:
	load.32     %r16409 <- 24[%arg1]
	setge.32    %r16410 <- %r16403, %r16409
	br          %r16410, .L3846, .L3848

.L3848:
	add.64      %r16412 <- %arg1, $32
	scast.64    %r16414 <- (32) %r16403
	muls.64     %r16415 <- %r16414, $16
	add.64      %r16416 <- %r16412, %r16415
	load.64     %r16417 <- 8[%r16416]
	seteq.32    %r16418 <- %r16417, $-1
	br          %r16418, .L3846, .L3847

.L3846:
	load.64     %r16420 <- 16[%arg1]
	symaddr.64  %r16421 <- <anon symbol:0x62d0014a6510>
	call.32     %r16422 <- luaL_error, %r16420, %r16421
	phisrc.32   %phi2623(return) <- %r16422
	br          .L3850

.L3847:
	phisrc.32   %phi2624(return) <- %r16403
	br          .L3850

.L3850:
	phi.32      %r16423 <- %phi2623(return), %phi2624(return)
	ret.32      %r16423


capture_to_close:
.L3851:
	<entry-point>
	load.32     %r16426 <- 24[%arg1]
	add.32      %r16428(level) <- %r16426, $-1
	phisrc.32   %phi2633(level) <- %r16428(level)
	br          .L3855

.L3855:
	phi.32      %r16429(level) <- %phi2633(level), %phi2634(level)
	setge.32    %r16430 <- %r16429(level), $0
	br          %r16430, .L3852, .L3854

.L3852:
	add.64      %r16432 <- %arg1, $32
	scast.64    %r16434 <- (32) %r16429(level)
	muls.64     %r16435 <- %r16434, $16
	add.64      %r16436 <- %r16432, %r16435
	load.64     %r16437 <- 8[%r16436]
	seteq.32    %r16438 <- %r16437, $-1
	br          %r16438, .L3856, .L3853

.L3856:
	phisrc.32   %phi2628(return) <- %r16429(level)
	br          .L3858

.L3853:
	add.32      %r16442 <- %r16429(level), $-1
	phisrc.32   %phi2634(level) <- %r16442
	br          .L3855

.L3854:
	load.64     %r16444 <- 16[%arg1]
	symaddr.64  %r16445 <- <anon symbol:0x62d0014a70d8>
	call.32     %r16446 <- luaL_error, %r16444, %r16445
	phisrc.32   %phi2629(return) <- %r16446
	br          .L3858

.L3858:
	phi.32      %r16440 <- %phi2628(return), %phi2629(return)
	ret.32      %r16440


classend:
.L3859:
	<entry-point>
	add.64      %r16448(p) <- %arg2, $1
	load.8      %r16449 <- 0[%arg2]
	switch      %r16449, 37 -> .L3861, 91 -> .L3862, default -> .L3863

.L3861:
	load.8      %r16451 <- 1[%arg2]
	br          %r16451, .L3865, .L3864

.L3864:
	load.64     %r16455 <- 16[%arg1]
	symaddr.64  %r16456 <- <anon symbol:0x62d0014a7818>
	call.32     %r16457 <- luaL_error, %r16455, %r16456
	br          .L3865

.L3865:
	add.64      %r16459 <- %r16448(p), $1
	phisrc.64   %phi2635(return) <- %r16459
	br          .L3866

.L3862:
	load.8      %r16462 <- 1[%arg2]
	scast.32    %r16463 <- (8) %r16462
	seteq.32    %r16464 <- %r16463, $94
	phisrc.64   %phi2646(p) <- %r16448(p)
	br          %r16464, .L3867, .L3869

.L3867:
	add.64      %r16466 <- %r16448(p), $1
	phisrc.64   %phi2647(p) <- %r16466
	br          .L3869

.L3869:
	phi.64      %r16467(p) <- %phi2646(p), %phi2647(p), %phi2648(p), %phi2649(p)
	load.8      %r16468 <- 0[%r16467(p)]
	phisrc.8    %phi2654 <- %r16468
	phisrc.8    %phi2655 <- %r16468
	phisrc.8    %phi2656 <- %r16468
	br          %r16468, .L3873, .L3872

.L3872:
	load.64     %r16472 <- 16[%arg1]
	symaddr.64  %r16473 <- <anon symbol:0x62d0014a8040>
	call.32     %r16474 <- luaL_error, %r16472, %r16473
	br          .L3873

.L3873:
	add.64      %r16476(p) <- %r16467(p), $1
	load.8      %r16477 <- 0[%r16467(p)]
	scast.32    %r16478 <- (8) %r16477
	seteq.32    %r16479 <- %r16478, $37
	phisrc.64   %phi2640(p) <- %r16476(p)
	phisrc.64   %phi2648(p) <- %r16476(p)
	phisrc.8    %phi2657 <- %r16477
	phisrc.8    %phi2658 <- %r16477
	br          %r16479, .L3876, .L3870

.L3876:
	load.8      %r16481 <- 1[%r16467(p)]
	phisrc.64   %phi2641(p) <- %r16476(p)
	br          %r16481, .L3874, .L3870

.L3874:
	add.64      %r16485 <- %r16476(p), $1
	phisrc.64   %phi2642(p) <- %r16485
	phisrc.64   %phi2649(p) <- %r16485
	br          .L3870

.L3870:
	phi.64      %r16486(p) <- %phi2640(p), %phi2641(p), %phi2642(p)
	load.8      %r16487 <- 0[%r16486(p)]
	scast.32    %r16488 <- (8) %r16487
	setne.32    %r16489 <- %r16488, $93
	br          %r16489, .L3869, .L3871

.L3871:
	add.64      %r16491 <- %r16486(p), $1
	phisrc.64   %phi2636(return) <- %r16491
	br          .L3866

.L3863:
	phisrc.64   %phi2637(return) <- %r16448(p)
	br          .L3866

.L3866:
	phi.64      %r16460 <- %phi2635(return), %phi2636(return), %phi2637(return)
	ret.64      %r16460


match_class:
.L3877:
	<entry-point>
	call.32     %r16494 <- tolower, %arg2
	switch      %r16494, 97 -> .L3879, 99 -> .L3880, 100 -> .L3881, 108 -> .L3882, 112 -> .L3883, 115 -> .L3884, 117 -> .L3885, 119 -> .L3886, 120 -> .L3887, 122 -> .L3888, default -> .L3889

.L3879:
	call.64     %r16495 <- __ctype_b_loc
	load.64     %r16496 <- 0[%r16495]
	scast.64    %r16499 <- (32) %arg1
	muls.64     %r16500 <- %r16499, $2
	add.64      %r16501 <- %r16496, %r16500
	load.16     %r16502 <- 0[%r16501]
	cast.32     %r16503 <- (16) %r16502
	and.32      %r16504(res) <- %r16503, $0x400
	phisrc.32   %phi2661(res) <- %r16504(res)
	br          .L3878

.L3880:
	call.64     %r16505 <- __ctype_b_loc
	load.64     %r16506 <- 0[%r16505]
	scast.64    %r16509 <- (32) %arg1
	muls.64     %r16510 <- %r16509, $2
	add.64      %r16511 <- %r16506, %r16510
	load.16     %r16512 <- 0[%r16511]
	cast.32     %r16513 <- (16) %r16512
	and.32      %r16514 <- %r16513, $2
	phisrc.32   %phi2662(res) <- %r16514
	br          .L3878

.L3881:
	call.64     %r16515 <- __ctype_b_loc
	load.64     %r16516 <- 0[%r16515]
	scast.64    %r16519 <- (32) %arg1
	muls.64     %r16520 <- %r16519, $2
	add.64      %r16521 <- %r16516, %r16520
	load.16     %r16522 <- 0[%r16521]
	cast.32     %r16523 <- (16) %r16522
	and.32      %r16524 <- %r16523, $0x800
	phisrc.32   %phi2663(res) <- %r16524
	br          .L3878

.L3882:
	call.64     %r16525 <- __ctype_b_loc
	load.64     %r16526 <- 0[%r16525]
	scast.64    %r16529 <- (32) %arg1
	muls.64     %r16530 <- %r16529, $2
	add.64      %r16531 <- %r16526, %r16530
	load.16     %r16532 <- 0[%r16531]
	cast.32     %r16533 <- (16) %r16532
	and.32      %r16534 <- %r16533, $512
	phisrc.32   %phi2664(res) <- %r16534
	br          .L3878

.L3883:
	call.64     %r16535 <- __ctype_b_loc
	load.64     %r16536 <- 0[%r16535]
	scast.64    %r16539 <- (32) %arg1
	muls.64     %r16540 <- %r16539, $2
	add.64      %r16541 <- %r16536, %r16540
	load.16     %r16542 <- 0[%r16541]
	cast.32     %r16543 <- (16) %r16542
	and.32      %r16544 <- %r16543, $4
	phisrc.32   %phi2665(res) <- %r16544
	br          .L3878

.L3884:
	call.64     %r16545 <- __ctype_b_loc
	load.64     %r16546 <- 0[%r16545]
	scast.64    %r16549 <- (32) %arg1
	muls.64     %r16550 <- %r16549, $2
	add.64      %r16551 <- %r16546, %r16550
	load.16     %r16552 <- 0[%r16551]
	cast.32     %r16553 <- (16) %r16552
	and.32      %r16554 <- %r16553, $0x2000
	phisrc.32   %phi2666(res) <- %r16554
	br          .L3878

.L3885:
	call.64     %r16555 <- __ctype_b_loc
	load.64     %r16556 <- 0[%r16555]
	scast.64    %r16559 <- (32) %arg1
	muls.64     %r16560 <- %r16559, $2
	add.64      %r16561 <- %r16556, %r16560
	load.16     %r16562 <- 0[%r16561]
	cast.32     %r16563 <- (16) %r16562
	and.32      %r16564 <- %r16563, $256
	phisrc.32   %phi2667(res) <- %r16564
	br          .L3878

.L3886:
	call.64     %r16565 <- __ctype_b_loc
	load.64     %r16566 <- 0[%r16565]
	scast.64    %r16569 <- (32) %arg1
	muls.64     %r16570 <- %r16569, $2
	add.64      %r16571 <- %r16566, %r16570
	load.16     %r16572 <- 0[%r16571]
	cast.32     %r16573 <- (16) %r16572
	and.32      %r16574 <- %r16573, $8
	phisrc.32   %phi2668(res) <- %r16574
	br          .L3878

.L3887:
	call.64     %r16575 <- __ctype_b_loc
	load.64     %r16576 <- 0[%r16575]
	scast.64    %r16579 <- (32) %arg1
	muls.64     %r16580 <- %r16579, $2
	add.64      %r16581 <- %r16576, %r16580
	load.16     %r16582 <- 0[%r16581]
	cast.32     %r16583 <- (16) %r16582
	and.32      %r16584 <- %r16583, $0x1000
	phisrc.32   %phi2669(res) <- %r16584
	br          .L3878

.L3888:
	seteq.32    %r16586 <- %arg1, $0
	phisrc.32   %phi2670(res) <- %r16586
	br          .L3878

.L3889:
	seteq.32    %r16589 <- %arg2, %arg1
	phisrc.32   %phi2659(return) <- %r16589
	br          .L3890

.L3878:
	phi.32      %r16591 <- %phi2661(res), %phi2662(res), %phi2663(res), %phi2664(res), %phi2665(res), %phi2666(res), %phi2667(res), %phi2668(res), %phi2669(res), %phi2670(res)
	seteq.32    %r16593 <- %r16591, $0
	call.64     %r16594 <- __ctype_b_loc
	load.64     %r16595 <- 0[%r16594]
	scast.64    %r16598 <- (32) %arg2
	muls.64     %r16599 <- %r16598, $2
	add.64      %r16600 <- %r16595, %r16599
	load.16     %r16601 <- 0[%r16600]
	cast.32     %r16602 <- (16) %r16601
	and.32      %r16603 <- %r16602, $512
	select.32   %r16604 <- %r16603, %r16591, %r16593
	phisrc.32   %phi2660(return) <- %r16604
	br          .L3890

.L3890:
	phi.32      %r16590 <- %phi2659(return), %phi2660(return)
	ret.32      %r16590


matchbracketclass:
.L3891:
	<entry-point>
	load.8      %r16606 <- 1[%arg2]
	scast.32    %r16607 <- (8) %r16606
	seteq.32    %r16608 <- %r16607, $94
	phisrc.64   %phi2681(p) <- %arg2
	phisrc.32   %phi2687(sig) <- $1
	phisrc.32   %phi2689(sig) <- $1
	phisrc.32   %phi2691(sig) <- $1
	phisrc.32   %phi2693(sig) <- $1
	br          %r16608, .L3892, .L3897

.L3892:
	add.64      %r16610 <- %arg2, $1
	phisrc.64   %phi2682(p) <- %r16610
	phisrc.32   %phi2688(sig) <- $0
	phisrc.32   %phi2690(sig) <- $0
	phisrc.32   %phi2692(sig) <- $0
	phisrc.32   %phi2694(sig) <- $0
	br          .L3897

.L3897:
	phi.64      %r16611 <- %phi2681(p), %phi2682(p), %phi2683(p), %phi2684(p), %phi2685(p)
	add.64      %r16612(p) <- %r16611, $1
	setb.32     %r16614 <- %r16612(p), %arg3
	phisrc.64   %phi2685(p) <- %r16612(p)
	br          %r16614, .L3894, .L3896

.L3894:
	load.8      %r16616 <- 1[%r16611]
	scast.32    %r16617 <- (8) %r16616
	seteq.32    %r16618 <- %r16617, $37
	br          %r16618, .L3898, .L3899

.L3898:
	add.64      %r16620 <- %r16612(p), $1
	load.8      %r16623 <- 2[%r16611]
	cast.32     %r16625 <- (8) %r16623
	call.32     %r16626 <- match_class, %arg1, %r16625
	phisrc.64   %phi2683(p) <- %r16620
	br          %r16626, .L3900, .L3897

.L3900:
	phi.32      %r16627 <- %phi2693(sig), %phi2694(sig)
	phisrc.32   %phi2671(return) <- %r16627
	br          .L3902

.L3899:
	load.8      %r16630 <- 2[%r16611]
	scast.32    %r16631 <- (8) %r16630
	seteq.32    %r16632 <- %r16631, $45
	add.64      %r16634 <- %r16612(p), $2
	setb.32     %r16636 <- %r16634, %arg3
	and-bool.32 %r16637 <- %r16632, %r16636
	br          %r16637, .L3904, .L3905

.L3904:
	cast.64     %r16639 <- (64) %r16612(p)
	add.64      %r16640 <- %r16639, $2
	ptrcast.64  %r16641 <- (64) %r16640
	load.8      %r16644 <- -2[%r16641]
	cast.32     %r16646 <- (8) %r16644
	setle.32    %r16648 <- %r16646, %arg1
	phisrc.64   %phi2684(p) <- %r16641
	br          %r16648, .L3908, .L3897

.L3908:
	load.8      %r16651 <- 0[%r16641]
	cast.32     %r16653 <- (8) %r16651
	setle.32    %r16654 <- %arg1, %r16653
	br          %r16654, .L3906, .L3897

.L3906:
	phi.32      %r16655 <- %phi2691(sig), %phi2692(sig)
	phisrc.32   %phi2672(return) <- %r16655
	br          .L3902

.L3905:
	cast.32     %r16659 <- (8) %r16616
	seteq.32    %r16661 <- %r16659, %arg1
	br          %r16661, .L3910, .L3897

.L3910:
	phi.32      %r16662 <- %phi2689(sig), %phi2690(sig)
	phisrc.32   %phi2673(return) <- %r16662
	br          .L3902

.L3896:
	phi.32      %r16663 <- %phi2687(sig), %phi2688(sig)
	seteq.32    %r16664 <- %r16663, $0
	phisrc.32   %phi2674(return) <- %r16664
	br          .L3902

.L3902:
	phi.32      %r16628 <- %phi2671(return), %phi2672(return), %phi2673(return), %phi2674(return)
	ret.32      %r16628


singlematch:
.L3912:
	<entry-point>
	load.8      %r16666 <- 0[%arg2]
	switch      %r16666, 37 -> .L3915, 46 -> .L3914, 91 -> .L3916, default -> .L3917

.L3914:
	phisrc.32   %phi2696(return) <- $1
	br          .L3918

.L3915:
	load.8      %r16670 <- 1[%arg2]
	cast.32     %r16672 <- (8) %r16670
	call.32     %r16673 <- match_class, %arg1, %r16672
	phisrc.32   %phi2697(return) <- %r16673
	br          .L3918

.L3916:
	add.64      %r16677 <- %arg3, $-1
	call.32     %r16678 <- matchbracketclass, %arg1, %arg2, %r16677
	phisrc.32   %phi2698(return) <- %r16678
	br          .L3918

.L3917:
	cast.32     %r16682 <- (8) %r16666
	seteq.32    %r16684 <- %r16682, %arg1
	phisrc.32   %phi2699(return) <- %r16684
	br          .L3918

.L3918:
	phi.32      %r16667 <- %phi2696(return), %phi2697(return), %phi2698(return), %phi2699(return)
	ret.32      %r16667


matchbalance:
.L3919:
	<entry-point>
	load.8      %r16686 <- 0[%arg3]
	phisrc.8    %phi2719 <- %r16686
	phisrc.8    %phi2721 <- %r16686
	phisrc.8    %phi2723 <- %r16686
	br          %r16686, .L3922, .L3920

.L3922:
	load.8      %r16690 <- 1[%arg3]
	phisrc.8    %phi2717 <- %r16690
	phisrc.8    %phi2720 <- %r16690
	phisrc.8    %phi2722 <- %r16690
	br          %r16690, .L3921, .L3920

.L3920:
	load.64     %r16694 <- 16[%arg1]
	symaddr.64  %r16695 <- <anon symbol:0x62d0014cbb60>
	call.32     %r16696 <- luaL_error, %r16694, %r16695
	br          .L3921

.L3921:
	load.8      %r16698 <- 0[%arg2]
	scast.32    %r16699 <- (8) %r16698
	load.8      %r16701 <- 0[%arg3]
	scast.32    %r16702 <- (8) %r16701
	setne.32    %r16703 <- %r16699, %r16702
	phisrc.64   %phi2707(s) <- %arg2
	br          %r16703, .L3923, .L3924

.L3923:
	phisrc.64   %phi2701(return) <- $0
	br          .L3925

.L3924:
	scast.32    %r16707 <- (8) %r16701
	load.8      %r16709 <- 1[%arg3]
	scast.32    %r16710 <- (8) %r16709
	phisrc.32   %phi2710(cont) <- $1
	phisrc.32   %phi2713(cont) <- $1
	br          .L3930

.L3930:
	phi.64      %r16711 <- %phi2707(s), %phi2708(s)
	add.64      %r16712(s) <- %r16711, $1
	load.64     %r16714 <- 8[%arg1]
	setb.32     %r16715 <- %r16712(s), %r16714
	phisrc.64   %phi2708(s) <- %r16712(s)
	br          %r16715, .L3927, .L3926

.L3927:
	load.8      %r16717 <- 1[%r16711]
	scast.32    %r16718 <- (8) %r16717
	seteq.32    %r16720 <- %r16718, %r16710
	br          %r16720, .L3931, .L3932

.L3931:
	phi.32      %r16721 <- %phi2713(cont), %phi2714(cont), %phi2715(cont)
	add.32      %r16722 <- %r16721, $-1
	phisrc.32   %phi2711(cont) <- %r16722
	phisrc.32   %phi2714(cont) <- %r16722
	br          %r16722, .L3930, .L3933

.L3933:
	add.64      %r16725 <- %r16712(s), $1
	phisrc.64   %phi2702(return) <- %r16725
	br          .L3925

.L3932:
	scast.32    %r16728 <- (8) %r16717
	seteq.32    %r16730 <- %r16728, %r16707
	br          %r16730, .L3936, .L3930

.L3936:
	phi.32      %r16731 <- %phi2710(cont), %phi2711(cont), %phi2712(cont)
	add.32      %r16732 <- %r16731, $1
	phisrc.32   %phi2712(cont) <- %r16732
	phisrc.32   %phi2715(cont) <- %r16732
	br          .L3930

.L3926:
	phisrc.64   %phi2703(return) <- $0
	br          .L3925

.L3925:
	phi.64      %r16704 <- %phi2701(return), %phi2702(return), %phi2703(return)
	ret.64      %r16704


max_expand:
.L3938:
	<entry-point>
	phisrc.64   %phi2733(i) <- $0
	br          .L3942

.L3942:
	phi.64      %r16734(i) <- %phi2733(i), %phi2734(i)
	add.64      %r16735 <- %arg2, %r16734(i)
	load.64     %r16737 <- 8[%arg1]
	setb.32     %r16738 <- %r16735, %r16737
	phisrc.64   %phi2728(i) <- %r16734(i)
	br          %r16738, .L3943, .L3947

.L3943:
	load.8      %r16742 <- 0[%r16735]
	cast.32     %r16744 <- (8) %r16742
	call.32     %r16747 <- singlematch, %r16744, %arg3, %arg4
	phisrc.64   %phi2729(i) <- %r16734(i)
	br          %r16747, .L3939, .L3947

.L3939:
	add.64      %r16749 <- %r16734(i), $1
	phisrc.64   %phi2734(i) <- %r16749
	br          .L3942

.L3947:
	phi.64      %r16750(i) <- %phi2728(i), %phi2729(i), %phi2730(i)
	setge.32    %r16751 <- %r16750(i), $0
	br          %r16751, .L3944, .L3946

.L3944:
	add.64      %r16755 <- %arg2, %r16750(i)
	add.64      %r16757 <- %arg4, $1
	call.64     %r16758 <- match, %arg1, %r16755, %r16757
	br          %r16758, .L3948, .L3949

.L3948:
	phisrc.64   %phi2724(return) <- %r16758
	br          .L3950

.L3949:
	add.64      %r16763 <- %r16750(i), $-1
	phisrc.64   %phi2730(i) <- %r16763
	br          .L3947

.L3946:
	phisrc.64   %phi2725(return) <- $0
	br          .L3950

.L3950:
	phi.64      %r16761 <- %phi2724(return), %phi2725(return)
	ret.64      %r16761


min_expand:
.L3951:
	<entry-point>
	phisrc.64   %phi2740(s) <- %arg2
	br          .L3952

.L3952:
	phi.64      %r16765(s) <- %phi2740(s), %phi2741(s)
	add.64      %r16767 <- %arg4, $1
	call.64     %r16768 <- match, %arg1, %r16765(s), %r16767
	br          %r16768, .L3956, .L3957

.L3956:
	phisrc.64   %phi2735(return) <- %r16768
	br          .L3958

.L3957:
	load.64     %r16775 <- 8[%arg1]
	setb.32     %r16776 <- %r16765(s), %r16775
	br          %r16776, .L3962, .L3961

.L3962:
	load.8      %r16778 <- 0[%r16765(s)]
	cast.32     %r16780 <- (8) %r16778
	call.32     %r16783 <- singlematch, %r16780, %arg3, %arg4
	br          %r16783, .L3960, .L3961

.L3960:
	add.64      %r16785 <- %r16765(s), $1
	phisrc.64   %phi2741(s) <- %r16785
	br          .L3952

.L3961:
	phisrc.64   %phi2736(return) <- $0
	br          .L3958

.L3958:
	phi.64      %r16772 <- %phi2735(return), %phi2736(return)
	ret.64      %r16772


start_capture:
.L3964:
	<entry-point>
	load.32     %r16787 <- 24[%arg1]
	setge.32    %r16789 <- %r16787, $32
	br          %r16789, .L3965, .L3966

.L3965:
	load.64     %r16791 <- 16[%arg1]
	symaddr.64  %r16792 <- <anon symbol:0x62d0014ccf50>
	call.32     %r16793 <- luaL_error, %r16791, %r16792
	br          .L3966

.L3966:
	add.64      %r16796 <- %arg1, $32
	scast.64    %r16798 <- (32) %r16787
	muls.64     %r16799 <- %r16798, $16
	add.64      %r16800 <- %r16796, %r16799
	store.64    %arg2 -> 0[%r16800]
	scast.64    %r16802 <- (32) %arg4
	store.64    %r16802 -> 8[%r16800]
	add.32      %r16810 <- %r16787, $1
	store.32    %r16810 -> 24[%arg1]
	call.64     %r16815 <- match, %arg1, %arg2, %arg3
	br          %r16815, .L3969, .L3967

.L3967:
	load.32     %r16818 <- 24[%arg1]
	add.32      %r16819 <- %r16818, $-1
	store.32    %r16819 -> 24[%arg1]
	br          .L3969

.L3969:
	ret.64      %r16815


end_capture:
.L3970:
	<entry-point>
	call.32     %r16823 <- capture_to_close, %arg1
	add.64      %r16826 <- %arg1, $32
	scast.64    %r16828 <- (32) %r16823
	muls.64     %r16829 <- %r16828, $16
	add.64      %r16830 <- %r16826, %r16829
	load.64     %r16831 <- 0[%r16830]
	sub.64      %r16832 <- %arg2, %r16831
	store.64    %r16832 -> 8[%r16830]
	call.64     %r16842 <- match, %arg1, %arg2, %arg3
	br          %r16842, .L3973, .L3971

.L3971:
	store.64    $-1 -> 8[%r16830]
	br          .L3973

.L3973:
	ret.64      %r16842


match_capture:
.L3974:
	<entry-point>
	call.32     %r16854 <- check_capture, %arg1, %arg3
	add.64      %r16856 <- %arg1, $32
	scast.64    %r16858 <- (32) %r16854
	muls.64     %r16859 <- %r16858, $16
	add.64      %r16860 <- %r16856, %r16859
	load.64     %r16861 <- 8[%r16860]
	load.64     %r16864 <- 8[%arg1]
	sub.64      %r16866 <- %r16864, %arg2
	setae.32    %r16869 <- %r16866, %r16861
	load.64     %r16876 <- 0[%r16860]
	cast.64     %r16877 <- (64) %r16876
	cast.64     %r16879 <- (64) %arg2
	call.32     %r16881 <- memcmp, %r16877, %r16879, %r16861
	seteq.32    %r16882 <- %r16881, $0
	and-bool.32 %r16883 <- %r16869, %r16882
	br          %r16883, .L3975, .L3976

.L3975:
	add.64      %r16886 <- %arg2, %r16861
	phisrc.64   %phi2744(return) <- %r16886
	br          .L3977

.L3976:
	phisrc.64   %phi2745(return) <- $0
	br          .L3977

.L3977:
	phi.64      %r16887 <- %phi2744(return), %phi2745(return)
	ret.64      %r16887


match:
.L3979:
	<entry-point>
	phisrc.64   %phi2776(s) <- %arg2
	phisrc.64   %phi2781(s) <- %arg2
	phisrc.64   %phi2786(s) <- %arg2
	phisrc.64   %phi2791(s) <- %arg2
	phisrc.64   %phi2815(s) <- %arg2
	phisrc.64   %phi2844(p) <- %arg3
	br          .L3980

.L3980:
	phi.64      %r16888(p) <- %phi2844(p), %phi2845(p), %phi2846(p), %phi2847(p), %phi2848(p), %phi2849(p)
	load.8      %r16889 <- 0[%r16888(p)]
	phi.64      %r16895 <- %phi2815(s), %phi2816(s), %phi2817(s), %phi2818(s)
	switch      %r16889, 0 -> .L3985, 36 -> .L3986, 37 -> .L3984, 40 -> .L3982, 41 -> .L3983, default -> .L4010

.L3982:
	load.8      %r16891 <- 1[%r16888(p)]
	scast.32    %r16892 <- (8) %r16891
	seteq.32    %r16893 <- %r16892, $41
	br          %r16893, .L3988, .L3989

.L3988:
	add.64      %r16897 <- %r16888(p), $2
	call.64     %r16898 <- start_capture, %arg1, %r16895, %r16897, $0xfffffffe
	phisrc.64   %phi2746(return) <- %r16898
	br          .L3990

.L3989:
	add.64      %r16903 <- %r16888(p), $1
	call.64     %r16904 <- start_capture, %arg1, %r16895, %r16903, $0xffffffff
	phisrc.64   %phi2747(return) <- %r16904
	br          .L3990

.L3983:
	add.64      %r16908 <- %r16888(p), $1
	call.64     %r16909 <- end_capture, %arg1, %r16895, %r16908
	phisrc.64   %phi2748(return) <- %r16909
	br          .L3990

.L3984:
	load.8      %r16911 <- 1[%r16888(p)]
	switch      %r16911, 98 -> .L3993, 102 -> .L3994, default -> .L3995

.L3993:
	add.64      %r16915 <- %r16888(p), $2
	call.64     %r16916 <- matchbalance, %arg1, %r16895, %r16915
	phisrc.64   %phi2777(s) <- %r16916
	phisrc.64   %phi2782(s) <- %r16916
	phisrc.64   %phi2787(s) <- %r16916
	phisrc.64   %phi2792(s) <- %r16916
	phisrc.64   %phi2816(s) <- %r16916
	br          %r16916, .L3997, .L3996

.L3996:
	phisrc.64   %phi2749(return) <- $0
	br          .L3990

.L3997:
	cast.64     %r16920 <- (64) %r16888(p)
	add.64      %r16921 <- %r16920, $4
	ptrcast.64  %r16922 <- (64) %r16921
	phisrc.64   %phi2845(p) <- %r16922
	br          .L3980

.L3994:
	cast.64     %r16924 <- (64) %r16888(p)
	add.64      %r16925 <- %r16924, $2
	ptrcast.64  %r16926 <- (64) %r16925
	load.8      %r16928 <- 0[%r16926]
	scast.32    %r16929 <- (8) %r16928
	setne.32    %r16930 <- %r16929, $91
	br          %r16930, .L3998, .L3999

.L3998:
	load.64     %r16932 <- 16[%arg1]
	symaddr.64  %r16933 <- <anon symbol:0x62d0014ca688>
	call.32     %r16934 <- luaL_error, %r16932, %r16933
	br          .L3999

.L3999:
	call.64     %r16937 <- classend, %arg1, %r16926
	load.64     %r16940 <- 0[%arg1]
	seteq.32    %r16941 <- %r16895, %r16940
	br          %r16941, .L4000, .L4001

.L4000:
	phisrc.32   %phi2750 <- $0
	br          .L4002

.L4001:
	load.8      %r16944 <- -1[%r16895]
	scast.32    %r16945 <- (8) %r16944
	phisrc.32   %phi2751 <- %r16945
	br          .L4002

.L4002:
	phi.32      %r16946 <- %phi2750, %phi2751
	scast.8     %r16947 <- (32) %r16946
	cast.32     %r16950 <- (8) %r16947
	add.64      %r16953 <- %r16937, $-1
	call.32     %r16954 <- matchbracketclass, %r16950, %r16926, %r16953
	br          %r16954, .L4003, .L4005

.L4005:
	load.8      %r16956 <- 0[%r16895]
	cast.32     %r16958 <- (8) %r16956
	call.32     %r16962 <- matchbracketclass, %r16958, %r16926, %r16953
	phisrc.64   %phi2778(s) <- %r16895
	phisrc.64   %phi2783(s) <- %r16895
	phisrc.64   %phi2788(s) <- %r16895
	phisrc.64   %phi2793(s) <- %r16895
	br          %r16962, .L4004, .L4003

.L4003:
	phisrc.64   %phi2752(return) <- $0
	br          .L3990

.L4004:
	phisrc.64   %phi2846(p) <- %r16937
	br          .L3980

.L3995:
	call.64     %r16964 <- __ctype_b_loc
	load.64     %r16965 <- 0[%r16964]
	load.8      %r16967 <- 1[%r16888(p)]
	cast.32     %r16969 <- (8) %r16967
	scast.64    %r16970 <- (32) %r16969
	muls.64     %r16971 <- %r16970, $2
	add.64      %r16972 <- %r16965, %r16971
	load.16     %r16973 <- 0[%r16972]
	cast.32     %r16974 <- (16) %r16973
	and.32      %r16975 <- %r16974, $0x800
	br          %r16975, .L4006, .L4010

.L4006:
	phi.64      %r16977 <- %phi2791(s), %phi2792(s), %phi2793(s), %phi2794(s), %phi2795(s)
	cast.32     %r16981 <- (8) %r16967
	call.64     %r16982 <- match_capture, %arg1, %r16977, %r16981
	phisrc.64   %phi2779(s) <- %r16982
	phisrc.64   %phi2784(s) <- %r16982
	phisrc.64   %phi2789(s) <- %r16982
	phisrc.64   %phi2794(s) <- %r16982
	phisrc.64   %phi2817(s) <- %r16982
	br          %r16982, .L4009, .L4008

.L4008:
	phisrc.64   %phi2753(return) <- $0
	br          .L3990

.L4009:
	cast.64     %r16986 <- (64) %r16888(p)
	add.64      %r16987 <- %r16986, $2
	ptrcast.64  %r16988 <- (64) %r16987
	phisrc.64   %phi2847(p) <- %r16988
	br          .L3980

.L3985:
	phi.64      %r16989 <- %phi2786(s), %phi2787(s), %phi2788(s), %phi2789(s), %phi2790(s)
	phisrc.64   %phi2754(return) <- %r16989
	br          .L3990

.L3986:
	load.8      %r16991 <- 1[%r16888(p)]
	br          %r16991, .L4010, .L4011

.L4011:
	phi.64      %r16994 <- %phi2781(s), %phi2782(s), %phi2783(s), %phi2784(s), %phi2785(s)
	load.64     %r16997 <- 8[%arg1]
	seteq.32    %r16998 <- %r16994, %r16997
	select.64   %r16999 <- %r16998, %r16994, $0
	phisrc.64   %phi2755(return) <- %r16999
	br          .L3990

.L4010:
	call.64     %r17002 <- classend, %arg1, %r16888(p)
	phi.64      %r17003(s) <- %phi2776(s), %phi2777(s), %phi2778(s), %phi2779(s), %phi2780(s)
	load.64     %r17005 <- 8[%arg1]
	setb.32     %r17006 <- %r17003(s), %r17005
	br          %r17006, .L4014, .L4015

.L4014:
	load.8      %r17008 <- 0[%r17003(s)]
	cast.32     %r17010 <- (8) %r17008
	call.32     %r17013 <- singlematch, %r17010, %r16888(p), %r17002
	phisrc.32   %phi2756 <- %r17013
	br          .L4016

.L4015:
	phisrc.32   %phi2757 <- $0
	br          .L4016

.L4016:
	phi.32      %r17014 <- %phi2756, %phi2757
	load.8      %r17016 <- 0[%r17002]
	switch      %r17016, 42 -> .L4019, 43 -> .L4020, 45 -> .L4021, 63 -> .L4018, default -> .L4022

.L4018:
	br          %r17014, .L4025, .L4024

.L4025:
	add.64      %r17020 <- %r17003(s), $1
	add.64      %r17022 <- %r17002, $1
	call.64     %r17023 <- match, %arg1, %r17020, %r17022
	br          %r17023, .L4023, .L4024

.L4023:
	phisrc.64   %phi2758(return) <- %r17023
	br          .L3990

.L4024:
	add.64      %r17027 <- %r17002, $1
	phisrc.64   %phi2848(p) <- %r17027
	br          .L3980

.L4019:
	call.64     %r17032 <- max_expand, %arg1, %r17003(s), %r16888(p), %r17002
	phisrc.64   %phi2759(return) <- %r17032
	br          .L3990

.L4020:
	br          %r17014, .L4026, .L4027

.L4026:
	add.64      %r17036 <- %r17003(s), $1
	call.64     %r17039 <- max_expand, %arg1, %r17036, %r16888(p), %r17002
	phisrc.64   %phi2760 <- %r17039
	br          .L4028

.L4027:
	phisrc.64   %phi2761 <- $0
	br          .L4028

.L4028:
	phi.64      %r17040 <- %phi2760, %phi2761
	phisrc.64   %phi2762(return) <- %r17040
	br          .L3990

.L4021:
	call.64     %r17045 <- min_expand, %arg1, %r17003(s), %r16888(p), %r17002
	phisrc.64   %phi2763(return) <- %r17045
	br          .L3990

.L4022:
	br          %r17014, .L4030, .L4029

.L4029:
	phisrc.64   %phi2764(return) <- $0
	br          .L3990

.L4030:
	add.64      %r17048 <- %r17003(s), $1
	phisrc.64   %phi2780(s) <- %r17048
	phisrc.64   %phi2785(s) <- %r17048
	phisrc.64   %phi2790(s) <- %r17048
	phisrc.64   %phi2795(s) <- %r17048
	phisrc.64   %phi2818(s) <- %r17048
	phisrc.64   %phi2849(p) <- %r17002
	br          .L3980

.L3990:
	phi.64      %r16899 <- %phi2746(return), %phi2747(return), %phi2748(return), %phi2749(return), %phi2752(return), %phi2753(return), %phi2754(return), %phi2755(return), %phi2758(return), %phi2759(return), %phi2762(return), %phi2763(return), %phi2764(return)
	ret.64      %r16899


lmemfind:
.L4031:
	<entry-point>
	phisrc.64   %phi2856(s1) <- %arg1
	br          %arg4, .L4033, .L4032

.L4032:
	phisrc.64   %phi2851(return) <- %arg1
	br          .L4034

.L4033:
	seta.32     %r17056 <- %arg4, %arg2
	br          %r17056, .L4036, .L4037

.L4036:
	phisrc.64   %phi2852(return) <- $0
	br          .L4034

.L4037:
	add.64      %r17058 <- %arg4, $-1
	sub.64      %r17061(l1) <- %arg2, %r17058
	phisrc.64   %phi2861(l1) <- %r17061(l1)
	br          .L4042

.L4042:
	phi.64      %r17062(l1) <- %phi2861(l1), %phi2862(l1)
	seta.32     %r17063 <- %r17062(l1), $0
	br          %r17063, .L4043, .L4041

.L4043:
	phi.64      %r17064(s1) <- %phi2856(s1), %phi2857(s1)
	cast.64     %r17065 <- (64) %r17064(s1)
	load.8      %r17067 <- 0[%arg3]
	scast.32    %r17068 <- (8) %r17067
	call.64     %r17070 <- memchr, %r17065, %r17068, %r17062(l1)
	ptrcast.64  %r17071(init) <- (64) %r17070
	br          %r17071(init), .L4039, .L4041

.L4039:
	add.64      %r17074 <- %r17071(init), $1
	cast.64     %r17076 <- (64) %r17074
	add.64      %r17078 <- %arg3, $1
	cast.64     %r17079 <- (64) %r17078
	call.32     %r17081 <- memcmp, %r17076, %r17079, %r17058
	br          %r17081, .L4045, .L4044

.L4044:
	add.64      %r17084 <- %r17074, $-1
	phisrc.64   %phi2853(return) <- %r17084
	br          .L4034

.L4045:
	sub.64      %r17087 <- %r17074, %r17064(s1)
	sub.64      %r17091 <- %r17062(l1), %r17087
	phisrc.64   %phi2857(s1) <- %r17074
	phisrc.64   %phi2862(l1) <- %r17091
	br          .L4042

.L4041:
	phisrc.64   %phi2854(return) <- $0
	br          .L4034

.L4034:
	phi.64      %r17053 <- %phi2851(return), %phi2852(return), %phi2853(return), %phi2854(return)
	ret.64      %r17053


push_onecapture:
.L4047:
	<entry-point>
	load.32     %r17096 <- 24[%arg1]
	setge.32    %r17097 <- %arg2, %r17096
	br          %r17097, .L4048, .L4049

.L4048:
	br          %arg2, .L4051, .L4050

.L4050:
	load.64     %r17101 <- 16[%arg1]
	sub.64      %r17105 <- %arg4, %arg3
	call        lua_pushlstring, %r17101, %arg3, %r17105
	br          .L4053

.L4051:
	load.64     %r17108 <- 16[%arg1]
	symaddr.64  %r17109 <- <anon symbol:0x62d0014cfe70>
	call.32     %r17110 <- luaL_error, %r17108, %r17109
	br          .L4053

.L4049:
	add.64      %r17112 <- %arg1, $32
	scast.64    %r17114 <- (32) %arg2
	muls.64     %r17115 <- %r17114, $16
	add.64      %r17116 <- %r17112, %r17115
	load.64     %r17117 <- 8[%r17116]
	seteq.32    %r17119 <- %r17117, $-1
	br          %r17119, .L4054, .L4055

.L4054:
	load.64     %r17121 <- 16[%arg1]
	symaddr.64  %r17122 <- <anon symbol:0x62d0014dc8a0>
	call.32     %r17123 <- luaL_error, %r17121, %r17122
	br          .L4055

.L4055:
	seteq.32    %r17125 <- %r17117, $-2
	br          %r17125, .L4056, .L4057

.L4056:
	load.64     %r17127 <- 16[%arg1]
	load.64     %r17134 <- 0[%r17116]
	load.64     %r17136 <- 0[%arg1]
	sub.64      %r17137 <- %r17134, %r17136
	add.64      %r17138 <- %r17137, $1
	call        lua_pushinteger, %r17127, %r17138
	br          .L4053

.L4057:
	load.64     %r17140 <- 16[%arg1]
	load.64     %r17147 <- 0[%r17116]
	call        lua_pushlstring, %r17140, %r17147, %r17117
	br          .L4053

.L4053:
	ret


push_captures:
.L4059:
	<entry-point>
	load.32     %r17151 <- 24[%arg1]
	seteq.32    %r17152 <- %r17151, $0
	and-bool.32 %r17154 <- %r17152, %arg2
	select.32   %r17157 <- %r17154, $1, %r17151
	load.64     %r17159 <- 16[%arg1]
	symaddr.64  %r17161 <- <anon symbol:0x62d0014de030>
	call        luaL_checkstack, %r17159, %r17157, %r17161
	phisrc.32   %phi2876(i) <- $0
	br          .L4066

.L4066:
	phi.32      %r17162(i) <- %phi2876(i), %phi2877(i)
	setlt.32    %r17164 <- %r17162(i), %r17157
	br          %r17164, .L4063, .L4067

.L4063:
	call        push_onecapture, %arg1, %r17162(i), %arg2, %arg3
	add.32      %r17170 <- %r17162(i), $1
	phisrc.32   %phi2877(i) <- %r17170
	br          .L4066

.L4067:
	ret.32      %r17157


str_find_aux:
.L4068:
	<entry-point>
	symaddr.64  %r17174 <- l1
	call.64     %r17175 <- luaL_checklstring, %arg1, $1, %r17174
	symaddr.64  %r17177 <- l2
	call.64     %r17178(p) <- luaL_checklstring, %arg1, $2, %r17177
	call.64     %r17180 <- luaL_optinteger, %arg1, $3, $1
	load.64     %r17181 <- 0[l1]
	call.64     %r17182 <- posrelat, %r17180, %r17181
	add.64      %r17183 <- %r17182, $-1
	setlt.32    %r17185 <- %r17183, $0
	br          %r17185, .L4069, .L4070

.L4069:
	phisrc.64   %phi2893(init) <- $0
	phisrc.64   %phi2896(init) <- $0
	br          .L4071

.L4070:
	load.64     %r17188(l1) <- 0[l1]
	seta.32     %r17189 <- %r17183, %r17188(l1)
	phisrc.64   %phi2894(init) <- %r17183
	phisrc.64   %phi2897(init) <- %r17183
	br          %r17189, .L4072, .L4071

.L4072:
	phisrc.64   %phi2895(init) <- %r17188(l1)
	phisrc.64   %phi2898(init) <- %r17188(l1)
	br          .L4071

.L4071:
	br          %arg2, .L4076, .L4075

.L4076:
	call.32     %r17194 <- lua_toboolean, %arg1, $4
	symaddr.64  %r17196 <- <anon symbol:0x62d0014de770>
	call.64     %r17197 <- strpbrk, %r17178(p), %r17196
	seteq.32    %r17198 <- %r17197, $0
	or-bool.32  %r17199 <- %r17194, %r17198
	br          %r17199, .L4074, .L4075

.L4074:
	phi.64      %r17201 <- %phi2896(init), %phi2897(init), %phi2898(init)
	add.64      %r17202 <- %r17175, %r17201
	load.64     %r17203 <- 0[l1]
	sub.64      %r17206 <- %r17203, %r17201
	load.64     %r17208 <- 0[l2]
	call.64     %r17209 <- lmemfind, %r17202, %r17206, %r17178(p), %r17208
	br          %r17209, .L4077, .L4080

.L4077:
	sub.64      %r17214 <- %r17209, %r17175
	add.64      %r17215 <- %r17214, $1
	call        lua_pushinteger, %arg1, %r17215
	load.64     %r17221 <- 0[l2]
	add.64      %r17222 <- %r17214, %r17221
	call        lua_pushinteger, %arg1, %r17222
	phisrc.32   %phi2879(return) <- $2
	br          .L4079

.L4075:
	load.8      %r17226 <- 0[%r17178(p)]
	scast.32    %r17227 <- (8) %r17226
	seteq.32    %r17228 <- %r17227, $94
	phisrc.64   %phi2887(p) <- %r17178(p)
	br          %r17228, .L4081, .L4083

.L4081:
	add.64      %r17230(p) <- %r17178(p), $1
	phisrc.64   %phi2886(p) <- %r17230(p)
	br          .L4083

.L4083:
	phi.64      %r17233 <- %phi2893(init), %phi2894(init), %phi2895(init)
	add.64      %r17234(s1) <- %r17175, %r17233
	store.64    %arg1 -> 16[ms]
	store.64    %r17175 -> 0[ms]
	load.64     %r17238 <- 0[l1]
	add.64      %r17239 <- %r17175, %r17238
	store.64    %r17239 -> 8[ms]
	phisrc.64   %phi2903(s1) <- %r17234(s1)
	br          .L4084

.L4084:
	store.32    $0 -> 24[ms]
	symaddr.64  %r17240 <- ms
	phi.64      %r17241(s1) <- %phi2903(s1), %phi2904(s1)
	phi.64      %r17242 <- %phi2886(p), %phi2887(p)
	call.64     %r17243 <- match, %r17240, %r17241(s1), %r17242
	br          %r17243, .L4087, .L4085

.L4087:
	br          %arg2, .L4089, .L4090

.L4089:
	sub.64      %r17249 <- %r17241(s1), %r17175
	add.64      %r17250 <- %r17249, $1
	call        lua_pushinteger, %arg1, %r17250
	sub.64      %r17254 <- %r17243, %r17175
	call        lua_pushinteger, %arg1, %r17254
	call.32     %r17256 <- push_captures, %r17240, $0, $0
	add.32      %r17257 <- %r17256, $2
	phisrc.32   %phi2882(return) <- %r17257
	br          .L4079

.L4090:
	call.32     %r17261 <- push_captures, %r17240, %r17241(s1), %r17243
	phisrc.32   %phi2883(return) <- %r17261
	br          .L4079

.L4085:
	add.64      %r17263 <- %r17241(s1), $1
	load.64     %r17264 <- 8[ms]
	setb.32     %r17265 <- %r17241(s1), %r17264
	setne.32    %r17267 <- %r17227, $94
	and-bool.32 %r17268 <- %r17265, %r17267
	phisrc.64   %phi2904(s1) <- %r17263
	br          %r17268, .L4084, .L4080

.L4080:
	call        lua_pushnil, %arg1
	phisrc.32   %phi2884(return) <- $1
	br          .L4079

.L4079:
	phi.32      %r17224 <- %phi2879(return), %phi2882(return), %phi2883(return), %phi2884(return)
	ret.32      %r17224


str_find:
.L4092:
	<entry-point>
	call.32     %r17271 <- str_find_aux, %arg1, $1
	ret.32      %r17271


str_match:
.L4094:
	<entry-point>
	call.32     %r17274 <- str_find_aux, %arg1, $0
	ret.32      %r17274


gmatch_aux:
.L4096:
	<entry-point>
	symaddr.64  %r17277 <- ls
	call.64     %r17278 <- lua_tolstring, %arg1, $0xffffd8ed, %r17277
	call.64     %r17280 <- lua_tolstring, %arg1, $0xffffd8ec, $0
	store.64    %arg1 -> 16[ms]
	store.64    %r17278 -> 0[ms]
	load.64     %r17284 <- 0[ls]
	add.64      %r17285 <- %r17278, %r17284
	store.64    %r17285 -> 8[ms]
	call.64     %r17288 <- lua_tointeger, %arg1, $0xffffd8eb
	add.64      %r17290(src) <- %r17278, %r17288
	phisrc.64   %phi2913(src) <- %r17290(src)
	br          .L4100

.L4100:
	phi.64      %r17291(src) <- %phi2913(src), %phi2914(src)
	load.64     %r17292 <- 8[ms]
	setbe.32    %r17293 <- %r17291(src), %r17292
	br          %r17293, .L4097, .L4099

.L4097:
	store.32    $0 -> 24[ms]
	symaddr.64  %r17294 <- ms
	call.64     %r17297 <- match, %r17294, %r17291(src), %r17280
	br          %r17297, .L4101, .L4098

.L4101:
	sub.64      %r17301(newstart) <- %r17297, %r17278
	seteq.32    %r17304 <- %r17297, %r17291(src)
	phisrc.64   %phi2915(newstart) <- %r17301(newstart)
	br          %r17304, .L4103, .L4104

.L4103:
	add.64      %r17306 <- %r17301(newstart), $1
	phisrc.64   %phi2916(newstart) <- %r17306
	br          .L4104

.L4104:
	phi.64      %r17308 <- %phi2915(newstart), %phi2916(newstart)
	call        lua_pushinteger, %arg1, %r17308
	call        lua_replace, %arg1, $0xffffd8eb
	call.32     %r17313 <- push_captures, %r17294, %r17291(src), %r17297
	phisrc.32   %phi2907(return) <- %r17313
	br          .L4105

.L4098:
	add.64      %r17316 <- %r17291(src), $1
	phisrc.64   %phi2914(src) <- %r17316
	br          .L4100

.L4099:
	phisrc.32   %phi2908(return) <- $0
	br          .L4105

.L4105:
	phi.32      %r17314 <- %phi2907(return), %phi2908(return)
	ret.32      %r17314


gmatch:
.L4106:
	<entry-point>
	call.64     %r17318 <- luaL_checklstring, %arg1, $1, $0
	call.64     %r17320 <- luaL_checklstring, %arg1, $2, $0
	call        lua_settop, %arg1, $2
	call        lua_pushinteger, %arg1, $0
	symaddr.64  %r17324 <- gmatch_aux
	call        lua_pushcclosure, %arg1, %r17324, $3
	ret.32      $1


add_s:
.L4108:
	<entry-point>
	load.64     %r17327 <- 16[%arg1]
	symaddr.64  %r17328 <- l
	call.64     %r17329 <- lua_tolstring, %r17327, $3, %r17328
	phisrc.64   %phi2933(i) <- $0
	br          .L4112

.L4112:
	phi.64      %r17330(i) <- %phi2933(i), %phi2934(i)
	load.64     %r17331 <- 0[l]
	setb.32     %r17332 <- %r17330(i), %r17331
	br          %r17332, .L4109, .L4111

.L4109:
	add.64      %r17335 <- %r17329, %r17330(i)
	load.8      %r17336 <- 0[%r17335]
	scast.32    %r17337 <- (8) %r17336
	setne.32    %r17338 <- %r17337, $37
	br          %r17338, .L4113, .L4114

.L4113:
	load.64     %r17340 <- 0[%arg2]
	add.64      %r17343 <- %arg2, $0x2018
	setb.32     %r17344 <- %r17340, %r17343
	phisrc.64   %phi2936 <- %r17340
	br          %r17344, .L4117, .L4116

.L4116:
	call.64     %r17346 <- luaL_prepbuffer, %arg2
	br          .L4117

.L4117:
	load.8      %r17351 <- 0[%r17335]
	load.64     %r17354 <- 0[%arg2]
	add.64      %r17355 <- %r17354, $1
	store.64    %r17355 -> 0[%arg2]
	store.8     %r17351 -> 0[%r17354]
	phisrc.64   %phi2923(i) <- %r17330(i)
	br          .L4110

.L4114:
	add.64      %r17357 <- %r17330(i), $1
	call.64     %r17358 <- __ctype_b_loc
	load.64     %r17359 <- 0[%r17358]
	add.64      %r17362 <- %r17329, %r17357
	load.8      %r17363 <- 0[%r17362]
	cast.32     %r17365 <- (8) %r17363
	scast.64    %r17366 <- (32) %r17365
	muls.64     %r17367 <- %r17366, $2
	add.64      %r17368 <- %r17359, %r17367
	load.16     %r17369 <- 0[%r17368]
	cast.32     %r17370 <- (16) %r17369
	and.32      %r17371 <- %r17370, $0x800
	br          %r17371, .L4120, .L4119

.L4119:
	load.64     %r17373 <- 0[%arg2]
	add.64      %r17376 <- %arg2, $0x2018
	setb.32     %r17377 <- %r17373, %r17376
	phisrc.64   %phi2935 <- %r17373
	br          %r17377, .L4123, .L4122

.L4122:
	call.64     %r17379 <- luaL_prepbuffer, %arg2
	br          .L4123

.L4123:
	load.8      %r17384 <- 0[%r17362]
	load.64     %r17387 <- 0[%arg2]
	add.64      %r17388 <- %r17387, $1
	store.64    %r17388 -> 0[%arg2]
	store.8     %r17384 -> 0[%r17387]
	phisrc.64   %phi2924(i) <- %r17357
	br          .L4110

.L4120:
	scast.32    %r17393 <- (8) %r17363
	seteq.32    %r17394 <- %r17393, $48
	phisrc.64   %phi2925(i) <- %r17357
	br          %r17394, .L4125, .L4126

.L4125:
	sub.64      %r17399 <- %arg4, %arg3
	call        luaL_addlstring, %arg2, %arg3, %r17399
	br          .L4110

.L4126:
	scast.32    %r17406 <- (8) %r17363
	add.32      %r17407 <- %r17406, $-49
	call        push_onecapture, %arg1, %r17407, %arg3, %arg4
	call        luaL_addvalue, %arg2
	phisrc.64   %phi2926(i) <- %r17357
	br          .L4110

.L4110:
	phi.64      %r17411 <- %phi2923(i), %phi2924(i), %phi2925(i), %phi2926(i)
	add.64      %r17412 <- %r17411, $1
	phisrc.64   %phi2934(i) <- %r17412
	br          .L4112

.L4111:
	ret


add_value:
.L4128:
	<entry-point>
	load.64     %r17414 <- 16[%arg1]
	call.32     %r17416 <- lua_type, %r17414, $3
	switch      %r17416, 3 -> .L4131, 4 -> .L4131, 5 -> .L4133, 6 -> .L4132, default -> .L4129

.L4131:
	call        add_s, %arg1, %arg2, %arg3, %arg4
	br          .L4134

.L4132:
	call        lua_pushvalue, %r17414, $3
	call.32     %r17425 <- push_captures, %arg1, %arg3, %arg4
	call        lua_call, %r17414, %r17425, $1
	br          .L4129

.L4133:
	call        push_onecapture, %arg1, $0, %arg3, %arg4
	call        lua_gettable, %r17414, $3
	br          .L4129

.L4129:
	call.32     %r17433 <- lua_toboolean, %r17414, $0xffffffff
	br          %r17433, .L4136, .L4135

.L4135:
	call        lua_settop, %r17414, $0xfffffffe
	sub.64      %r17439 <- %arg4, %arg3
	call        lua_pushlstring, %r17414, %arg3, %r17439
	br          .L4137

.L4136:
	call.32     %r17442 <- lua_isstring, %r17414, $0xffffffff
	br          %r17442, .L4137, .L4138

.L4138:
	symaddr.64  %r17444 <- <anon symbol:0x62d0014e1eb8>
	call.32     %r17447 <- lua_type, %r17414, $0xffffffff
	call.64     %r17448 <- lua_typename, %r17414, %r17447
	call.32     %r17449 <- luaL_error, %r17414, %r17444, %r17448
	br          .L4137

.L4137:
	call        luaL_addvalue, %arg2
	br          .L4134

.L4134:
	ret


str_gsub:
.L4140:
	<entry-point>
	symaddr.64  %r17452 <- srcl
	call.64     %r17453(src) <- luaL_checklstring, %arg1, $1, %r17452
	call.64     %r17455 <- luaL_checklstring, %arg1, $2, $0
	call.32     %r17457 <- lua_type, %arg1, $3
	load.64     %r17459 <- 0[srcl]
	add.64      %r17460 <- %r17459, $1
	call.64     %r17462 <- luaL_optinteger, %arg1, $4, %r17460
	scast.32    %r17463 <- (64) %r17462
	load.8      %r17465 <- 0[%r17455]
	scast.32    %r17466 <- (8) %r17465
	seteq.32    %r17467 <- %r17466, $94
	phisrc.64   %phi2960(p) <- %r17455
	br          %r17467, .L4141, .L4143

.L4141:
	add.64      %r17469(p) <- %r17455, $1
	phisrc.64   %phi2959(p) <- %r17469(p)
	br          .L4143

.L4143:
	seteq.32    %r17472 <- %r17457, $3
	seteq.32    %r17474 <- %r17457, $4
	or-bool.32  %r17475 <- %r17472, %r17474
	seteq.32    %r17477 <- %r17457, $6
	or-bool.32  %r17478 <- %r17475, %r17477
	seteq.32    %r17480 <- %r17457, $5
	or-bool.32  %r17481 <- %r17478, %r17480
	phisrc.32   %phi2965(n) <- $0
	br          %r17481, .L4146, .L4145

.L4145:
	symaddr.64  %r17483 <- <anon symbol:0x62d0014e2510>
	call.32     %r17484 <- luaL_argerror, %arg1, $3, %r17483
	br          .L4146

.L4146:
	symaddr.64  %r17487 <- b
	call        luaL_buffinit, %arg1, %r17487
	store.64    %arg1 -> 16[ms]
	store.64    %r17453(src) -> 0[ms]
	load.64     %r17491 <- 0[srcl]
	add.64      %r17492 <- %r17453(src), %r17491
	store.64    %r17492 -> 8[ms]
	phisrc.64   %phi2946(src) <- %r17453(src)
	phisrc.64   %phi2955(src) <- %r17453(src)
	phisrc.64   %phi2968(ms) <- %r17492
	phisrc.64   %phi2969 <- %r17492
	phisrc.64   %phi2971 <- %r17492
	phisrc.64   %phi2973 <- %r17492
	br          .L4150

.L4150:
	phi.32      %r17493(n) <- %phi2965(n), %phi2966(n)
	setlt.32    %r17495 <- %r17493(n), %r17463
	phisrc.32   %phi2962(n) <- %r17493(n)
	br          %r17495, .L4147, .L4149

.L4147:
	store.32    $0 -> 24[ms]
	symaddr.64  %r17496 <- ms
	phi.64      %r17497(src) <- %phi2955(src), %phi2956(src), %phi2957(src)
	phi.64      %r17498 <- %phi2959(p), %phi2960(p)
	call.64     %r17499 <- match, %r17496, %r17497(src), %r17498
	br          %r17499, .L4151, .L4152

.L4151:
	add.32      %r17502 <- %r17493(n), $1
	call        add_value, %r17496, %r17487, %r17497(src), %r17499
	phisrc.32   %phi2963(n) <- %r17502
	phisrc.32   %phi2966(n) <- %r17502
	br          .L4152

.L4152:
	seta.32     %r17510 <- %r17499, %r17497(src)
	and-bool.32 %r17511 <- %r17499, %r17510
	br          %r17511, .L4153, .L4154

.L4153:
	phisrc.64   %phi2947(src) <- %r17499
	phisrc.64   %phi2956(src) <- %r17499
	br          .L4155

.L4154:
	load.64     %r17514 <- 8[ms]
	setb.32     %r17515 <- %r17497(src), %r17514
	phisrc.64   %phi2949(src) <- %r17497(src)
	br          %r17515, .L4156, .L4149

.L4156:
	load.64     %r17516 <- 0[b]
	add.64      %r17519 <- %r17487, $0x2018
	setb.32     %r17520 <- %r17516, %r17519
	phisrc.64   %phi2967(b) <- %r17516
	phisrc.64   %phi2970 <- %r17516
	phisrc.64   %phi2972 <- %r17516
	br          %r17520, .L4160, .L4159

.L4159:
	call.64     %r17522 <- luaL_prepbuffer, %r17487
	br          .L4160

.L4160:
	add.64      %r17525 <- %r17497(src), $1
	load.8      %r17526 <- 0[%r17497(src)]
	load.64     %r17528 <- 0[b]
	add.64      %r17529 <- %r17528, $1
	store.64    %r17529 -> 0[b]
	store.8     %r17526 -> 0[%r17528]
	phisrc.64   %phi2948(src) <- %r17525
	phisrc.64   %phi2957(src) <- %r17525
	br          .L4155

.L4155:
	br          %r17467, .L4149, .L4150

.L4149:
	phi.64      %r17532 <- %phi2946(src), %phi2947(src), %phi2948(src), %phi2949(src)
	load.64     %r17533 <- 8[ms]
	sub.64      %r17535 <- %r17533, %r17532
	call        luaL_addlstring, %r17487, %r17532, %r17535
	call        luaL_pushresult, %r17487
	phi.32      %r17539 <- %phi2962(n), %phi2963(n)
	scast.64    %r17540 <- (32) %r17539
	call        lua_pushinteger, %arg1, %r17540
	ret.32      $2


addquoted:
.L4165:
	<entry-point>
	symaddr.64  %r17544 <- l
	call.64     %r17545(s) <- luaL_checklstring, %arg1, %arg3, %r17544
	load.64     %r17547 <- 0[%arg2]
	add.64      %r17550 <- %arg2, $0x2018
	setb.32     %r17551 <- %r17547, %r17550
	phisrc.64   %phi2989(s) <- %r17545(s)
	phisrc.64   %phi2996 <- %r17547
	br          %r17551, .L4168, .L4167

.L4167:
	call.64     %r17553 <- luaL_prepbuffer, %arg2
	br          .L4168

.L4168:
	load.64     %r17556 <- 0[%arg2]
	add.64      %r17557 <- %r17556, $1
	store.64    %r17557 -> 0[%arg2]
	store.8     $34 -> 0[%r17556]
	br          .L4172

.L4172:
	load.64     %r17558 <- 0[l]
	add.64      %r17559 <- %r17558, $-1
	store.64    %r17559 -> 0[l]
	br          %r17558, .L4169, .L4171

.L4169:
	phi.64      %r17560(s) <- %phi2989(s), %phi2990(s)
	load.8      %r17561 <- 0[%r17560(s)]
	phisrc.8    %phi2993 <- %r17561
	switch      %r17561, 0 -> .L4178, 10 -> .L4176, 13 -> .L4177, 34 -> .L4176, 92 -> .L4176, default -> .L4179

.L4176:
	load.64     %r17563 <- 0[%arg2]
	setb.32     %r17567 <- %r17563, %r17550
	phisrc.64   %phi2995 <- %r17563
	br          %r17567, .L4182, .L4181

.L4181:
	call.64     %r17569 <- luaL_prepbuffer, %arg2
	br          .L4182

.L4182:
	load.64     %r17572 <- 0[%arg2]
	add.64      %r17573 <- %r17572, $1
	store.64    %r17573 -> 0[%arg2]
	store.8     $92 -> 0[%r17572]
	load.64     %r17575 <- 0[%arg2]
	setb.32     %r17579 <- %r17575, %r17550
	phisrc.64   %phi2994 <- %r17575
	br          %r17579, .L4185, .L4184

.L4184:
	call.64     %r17581 <- luaL_prepbuffer, %arg2
	br          .L4185

.L4185:
	load.8      %r17584 <- 0[%r17560(s)]
	load.64     %r17587 <- 0[%arg2]
	add.64      %r17588 <- %r17587, $1
	store.64    %r17588 -> 0[%arg2]
	store.8     %r17584 -> 0[%r17587]
	br          .L4173

.L4177:
	symaddr.64  %r17590 <- <anon symbol:0x62d0014e82e8>
	call        luaL_addlstring, %arg2, %r17590, $2
	br          .L4173

.L4178:
	symaddr.64  %r17592 <- <anon symbol:0x62d0014e8688>
	call        luaL_addlstring, %arg2, %r17592, $4
	br          .L4173

.L4179:
	load.64     %r17594 <- 0[%arg2]
	setb.32     %r17598 <- %r17594, %r17550
	phisrc.64   %phi2992 <- %r17594
	br          %r17598, .L4188, .L4187

.L4187:
	call.64     %r17600 <- luaL_prepbuffer, %arg2
	br          .L4188

.L4188:
	load.8      %r17603 <- 0[%r17560(s)]
	load.64     %r17606 <- 0[%arg2]
	add.64      %r17607 <- %r17606, $1
	store.64    %r17607 -> 0[%arg2]
	store.8     %r17603 -> 0[%r17606]
	br          .L4173

.L4173:
	add.64      %r17609 <- %r17560(s), $1
	phisrc.64   %phi2990(s) <- %r17609
	br          .L4172

.L4171:
	load.64     %r17611 <- 0[%arg2]
	setb.32     %r17615 <- %r17611, %r17550
	phisrc.64   %phi2991 <- %r17611
	br          %r17615, .L4191, .L4190

.L4190:
	call.64     %r17617 <- luaL_prepbuffer, %arg2
	br          .L4191

.L4191:
	load.64     %r17620 <- 0[%arg2]
	add.64      %r17621 <- %r17620, $1
	store.64    %r17621 -> 0[%arg2]
	store.8     $34 -> 0[%r17620]
	ret


scanformat:
.L4193:
	<entry-point>
	phisrc.64   %phi3017(p) <- %arg2
	br          .L4197

.L4197:
	phi.64      %r17623 <- %phi3017(p), %phi3018(p)
	load.8      %r17624 <- 0[%r17623]
	scast.32    %r17625 <- (8) %r17624
	setne.32    %r17626 <- %r17625, $0
	symaddr.64  %r17627 <- <anon symbol:0x62d0014e9c48>
	scast.32    %r17630 <- (8) %r17624
	call.64     %r17631 <- strchr, %r17627, %r17630
	setne.32    %r17632 <- %r17631, $0
	and-bool.32 %r17633 <- %r17626, %r17632
	br          %r17633, .L4194, .L4196

.L4194:
	add.64      %r17635 <- %r17623, $1
	phisrc.64   %phi3018(p) <- %r17635
	br          .L4197

.L4196:
	sub.64      %r17638 <- %r17623, %arg2
	setae.32    %r17640 <- %r17638, $6
	br          %r17640, .L4198, .L4199

.L4198:
	symaddr.64  %r17642 <- <anon symbol:0x62d0014ea2a0>
	call.32     %r17643 <- luaL_error, %arg1, %r17642
	br          .L4199

.L4199:
	call.64     %r17644 <- __ctype_b_loc
	load.64     %r17645 <- 0[%r17644]
	load.8      %r17647 <- 0[%r17623]
	cast.32     %r17649 <- (8) %r17647
	scast.64    %r17650 <- (32) %r17649
	muls.64     %r17651 <- %r17650, $2
	add.64      %r17652 <- %r17645, %r17651
	load.16     %r17653 <- 0[%r17652]
	cast.32     %r17654 <- (16) %r17653
	and.32      %r17655 <- %r17654, $0x800
	phisrc.64   %phi3011(p) <- %r17623
	br          %r17655, .L4200, .L4201

.L4200:
	add.64      %r17657 <- %r17623, $1
	phisrc.64   %phi3012(p) <- %r17657
	br          .L4201

.L4201:
	call.64     %r17658 <- __ctype_b_loc
	load.64     %r17659 <- 0[%r17658]
	phi.64      %r17660(p) <- %phi3011(p), %phi3012(p)
	load.8      %r17661 <- 0[%r17660(p)]
	cast.32     %r17663 <- (8) %r17661
	scast.64    %r17664 <- (32) %r17663
	muls.64     %r17665 <- %r17664, $2
	add.64      %r17666 <- %r17659, %r17665
	load.16     %r17667 <- 0[%r17666]
	cast.32     %r17668 <- (16) %r17667
	and.32      %r17669 <- %r17668, $0x800
	phisrc.64   %phi3008(p) <- %r17660(p)
	br          %r17669, .L4202, .L4203

.L4202:
	add.64      %r17671 <- %r17660(p), $1
	phisrc.64   %phi3009(p) <- %r17671
	br          .L4203

.L4203:
	phi.64      %r17672(p) <- %phi3008(p), %phi3009(p)
	load.8      %r17673 <- 0[%r17672(p)]
	scast.32    %r17674 <- (8) %r17673
	seteq.32    %r17675 <- %r17674, $46
	phisrc.64   %phi3000(p) <- %r17672(p)
	br          %r17675, .L4204, .L4205

.L4204:
	add.64      %r17677 <- %r17672(p), $1
	call.64     %r17678 <- __ctype_b_loc
	load.64     %r17679 <- 0[%r17678]
	load.8      %r17681 <- 1[%r17672(p)]
	cast.32     %r17683 <- (8) %r17681
	scast.64    %r17684 <- (32) %r17683
	muls.64     %r17685 <- %r17684, $2
	add.64      %r17686 <- %r17679, %r17685
	load.16     %r17687 <- 0[%r17686]
	cast.32     %r17688 <- (16) %r17687
	and.32      %r17689 <- %r17688, $0x800
	phisrc.64   %phi3004(p) <- %r17677
	br          %r17689, .L4206, .L4207

.L4206:
	add.64      %r17691 <- %r17677, $1
	phisrc.64   %phi3005(p) <- %r17691
	br          .L4207

.L4207:
	call.64     %r17692 <- __ctype_b_loc
	load.64     %r17693 <- 0[%r17692]
	phi.64      %r17694(p) <- %phi3004(p), %phi3005(p)
	load.8      %r17695 <- 0[%r17694(p)]
	cast.32     %r17697 <- (8) %r17695
	scast.64    %r17698 <- (32) %r17697
	muls.64     %r17699 <- %r17698, $2
	add.64      %r17700 <- %r17693, %r17699
	load.16     %r17701 <- 0[%r17700]
	cast.32     %r17702 <- (16) %r17701
	and.32      %r17703 <- %r17702, $0x800
	phisrc.64   %phi3001(p) <- %r17694(p)
	br          %r17703, .L4208, .L4205

.L4208:
	add.64      %r17705 <- %r17694(p), $1
	phisrc.64   %phi3002(p) <- %r17705
	br          .L4205

.L4205:
	call.64     %r17706 <- __ctype_b_loc
	load.64     %r17707 <- 0[%r17706]
	phi.64      %r17708(p) <- %phi3000(p), %phi3001(p), %phi3002(p)
	load.8      %r17709 <- 0[%r17708(p)]
	cast.32     %r17711 <- (8) %r17709
	scast.64    %r17712 <- (32) %r17711
	muls.64     %r17713 <- %r17712, $2
	add.64      %r17714 <- %r17707, %r17713
	load.16     %r17715 <- 0[%r17714]
	cast.32     %r17716 <- (16) %r17715
	and.32      %r17717 <- %r17716, $0x800
	br          %r17717, .L4210, .L4211

.L4210:
	symaddr.64  %r17719 <- <anon symbol:0x62d0014eb4c0>
	call.32     %r17720 <- luaL_error, %arg1, %r17719
	br          .L4211

.L4211:
	add.64      %r17722 <- %arg3, $1
	store.8     $37 -> 0[%arg3]
	sub.64      %r17727 <- %r17708(p), %arg2
	add.64      %r17728 <- %r17727, $1
	call.64     %r17730 <- strncpy, %r17722, %arg2, %r17728
	cast.64     %r17736 <- (64) %r17722
	add.64      %r17737 <- %r17736, %r17728
	ptrcast.64  %r17738 <- (64) %r17737
	store.8     $0 -> 0[%r17738]
	ret.64      %r17708(p)


addintlen:
.L4213:
	<entry-point>
	call.64     %r17743 <- strlen, %arg1
	add.64      %r17746 <- %r17743, $-1
	add.64      %r17747 <- %arg1, %r17746
	load.8      %r17748 <- 0[%r17747]
	add.64      %r17751 <- %arg1, %r17743
	add.64      %r17752 <- %r17751, $-1
	symaddr.64  %r17753 <- <anon symbol:0x62d0014ebb18>
	call.64     %r17754 <- strcpy, %r17752, %r17753
	add.64      %r17758 <- %r17743, $2
	add.64      %r17759 <- %r17758, $-2
	add.64      %r17760 <- %arg1, %r17759
	store.8     %r17748 -> 0[%r17760]
	add.64      %r17764 <- %r17758, $-1
	add.64      %r17765 <- %arg1, %r17764
	store.8     $0 -> 0[%r17765]
	ret


str_format:
.L4215:
	<entry-point>
	call.32     %r17767 <- lua_gettop, %arg1
	symaddr.64  %r17770 <- sfl
	call.64     %r17771 <- luaL_checklstring, %arg1, $1, %r17770
	load.64     %r17773 <- 0[sfl]
	add.64      %r17774 <- %r17771, %r17773
	symaddr.64  %r17776 <- b
	call        luaL_buffinit, %arg1, %r17776
	phisrc.32   %phi3039(arg) <- $1
	phisrc.64   %phi3047(strfrmt) <- %r17771
	br          .L4219

.L4219:
	phi.64      %r17777(strfrmt) <- %phi3047(strfrmt), %phi3048(strfrmt), %phi3049(strfrmt), %phi3050(strfrmt)
	setb.32     %r17779 <- %r17777(strfrmt), %r17774
	br          %r17779, .L4216, .L4218

.L4216:
	load.8      %r17781 <- 0[%r17777(strfrmt)]
	scast.32    %r17782 <- (8) %r17781
	setne.32    %r17783 <- %r17782, $37
	phisrc.8    %phi3056 <- %r17781
	phisrc.8    %phi3061 <- %r17781
	br          %r17783, .L4220, .L4221

.L4220:
	load.64     %r17784 <- 0[b]
	add.64      %r17787 <- %r17776, $0x2018
	setb.32     %r17788 <- %r17784, %r17787
	phisrc.64   %phi3052(b) <- %r17784
	phisrc.64   %phi3055 <- %r17784
	phisrc.64   %phi3060 <- %r17784
	br          %r17788, .L4224, .L4223

.L4223:
	call.64     %r17790 <- luaL_prepbuffer, %r17776
	br          .L4224

.L4224:
	add.64      %r17793 <- %r17777(strfrmt), $1
	load.8      %r17794 <- 0[%r17777(strfrmt)]
	load.64     %r17796 <- 0[b]
	add.64      %r17797 <- %r17796, $1
	store.64    %r17797 -> 0[b]
	store.8     %r17794 -> 0[%r17796]
	phisrc.64   %phi3049(strfrmt) <- %r17793
	br          .L4219

.L4221:
	add.64      %r17799(strfrmt) <- %r17777(strfrmt), $1
	load.8      %r17800 <- 1[%r17777(strfrmt)]
	scast.32    %r17801 <- (8) %r17800
	seteq.32    %r17802 <- %r17801, $37
	phisrc.8    %phi3054 <- %r17800
	phisrc.8    %phi3059 <- %r17800
	br          %r17802, .L4226, .L4227

.L4226:
	load.64     %r17803 <- 0[b]
	add.64      %r17806 <- %r17776, $0x2018
	setb.32     %r17807 <- %r17803, %r17806
	phisrc.64   %phi3051(b) <- %r17803
	phisrc.64   %phi3053 <- %r17803
	phisrc.64   %phi3058 <- %r17803
	br          %r17807, .L4230, .L4229

.L4229:
	call.64     %r17809 <- luaL_prepbuffer, %r17776
	br          .L4230

.L4230:
	add.64      %r17812 <- %r17799(strfrmt), $1
	load.8      %r17813 <- 1[%r17777(strfrmt)]
	load.64     %r17815 <- 0[b]
	add.64      %r17816 <- %r17815, $1
	store.64    %r17816 -> 0[b]
	store.8     %r17813 -> 0[%r17815]
	phisrc.64   %phi3050(strfrmt) <- %r17812
	br          .L4219

.L4227:
	phi.32      %r17817 <- %phi3039(arg), %phi3040(arg)
	add.32      %r17818(arg) <- %r17817, $1
	setgt.32    %r17820 <- %r17818(arg), %r17767
	phisrc.32   %phi3040(arg) <- %r17818(arg)
	br          %r17820, .L4232, .L4233

.L4232:
	symaddr.64  %r17823 <- <anon symbol:0x62d0014fa8a0>
	call.32     %r17824 <- luaL_argerror, %arg1, %r17818(arg), %r17823
	br          .L4233

.L4233:
	symaddr.64  %r17827 <- form
	call.64     %r17828 <- scanformat, %arg1, %r17799(strfrmt), %r17827
	add.64      %r17830(strfrmt) <- %r17828, $1
	load.8      %r17831 <- 0[%r17828]
	phisrc.64   %phi3048(strfrmt) <- %r17830(strfrmt)
	switch      %r17831, 69 -> .L4246, 71 -> .L4246, 88 -> .L4241, 99 -> .L4235, 100 -> .L4237, 101 -> .L4246, 102 -> .L4246, 103 -> .L4246, 105 -> .L4237, 111 -> .L4241, 113 -> .L4247, 115 -> .L4248, 117 -> .L4241, 120 -> .L4241, default -> .L4249

.L4235:
	symaddr.64  %r17832 <- buff
	call.64     %r17836 <- luaL_checknumber, %arg1, %r17818(arg)
	cast.32     %r17837 <- (64) %r17836
	call.32     %r17838 <- sprintf, %r17832, %r17827, %r17837
	br          .L4234

.L4237:
	call        addintlen, %r17827
	symaddr.64  %r17840 <- buff
	call.64     %r17844 <- luaL_checknumber, %arg1, %r17818(arg)
	call.32     %r17846 <- sprintf, %r17840, %r17827, %r17844
	br          .L4234

.L4241:
	call        addintlen, %r17827
	symaddr.64  %r17848 <- buff
	call.64     %r17852 <- luaL_checknumber, %arg1, %r17818(arg)
	call.32     %r17854 <- sprintf, %r17848, %r17827, %r17852
	br          .L4234

.L4246:
	symaddr.64  %r17855 <- buff
	call.64     %r17859 <- luaL_checknumber, %arg1, %r17818(arg)
	call.32     %r17861 <- sprintf, %r17855, %r17827, %r17859
	br          .L4234

.L4247:
	call        addquoted, %arg1, %r17776, %r17818(arg)
	br          .L4219

.L4248:
	symaddr.64  %r17867 <- l
	call.64     %r17868 <- luaL_checklstring, %arg1, %r17818(arg), %r17867
	call.64     %r17870 <- strchr, %r17827, $46
	seteq.32    %r17871 <- %r17870, $0
	load.64     %r17872 <- 0[l]
	setae.32    %r17873 <- %r17872, $100
	and-bool.32 %r17874 <- %r17871, %r17873
	br          %r17874, .L4250, .L4251

.L4250:
	call        lua_pushvalue, %arg1, %r17818(arg)
	call        luaL_addvalue, %r17776
	br          .L4219

.L4251:
	symaddr.64  %r17878 <- buff
	call.32     %r17881 <- sprintf, %r17878, %r17827, %r17868
	br          .L4234

.L4249:
	symaddr.64  %r17883 <- <anon symbol:0x62d0014fcbf8>
	scast.32    %r17887 <- (8) %r17831
	call.32     %r17888 <- luaL_error, %arg1, %r17883, %r17887
	phisrc.32   %phi3023(return) <- %r17888
	br          .L4253

.L4234:
	symaddr.64  %r17891 <- buff
	symaddr.64  %r17892 <- buff
	call.64     %r17893 <- strlen, %r17892
	call        luaL_addlstring, %r17776, %r17891, %r17893
	br          .L4219

.L4218:
	call        luaL_pushresult, %r17776
	phisrc.32   %phi3024(return) <- $1
	br          .L4253

.L4253:
	phi.32      %r17889 <- %phi3023(return), %phi3024(return)
	ret.32      %r17889


createmetatable:
.L4254:
	<entry-point>
	call        lua_createtable, %arg1, $0, $1
	symaddr.64  %r17897 <- <anon symbol:0x62d0014fd7c0>
	call        lua_pushlstring, %arg1, %r17897, $0
	call        lua_pushvalue, %arg1, $0xfffffffe
	call.32     %r17900 <- lua_setmetatable, %arg1, $0xfffffffe
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_pushvalue, %arg1, $0xfffffffe
	symaddr.64  %r17904 <- <anon symbol:0x62d0014fdd30>
	call        lua_setfield, %arg1, $0xfffffffe, %r17904
	call        lua_settop, %arg1, $0xfffffffe
	ret


luaopen_string:
.L4256:
	<entry-point>
	symaddr.64  %r17907 <- <anon symbol:0x62d0014fe0d0>
	symaddr.64  %r17908 <- strlib
	call        luaL_register, %arg1, %r17907, %r17908
	call        createmetatable, %arg1
	ret.32      $1


luaL_openlibs:
.L4258:
	<entry-point>
	symaddr.64  %r17911(lib) <- lualibs
	phisrc.64   %phi3065(lib) <- %r17911(lib)
	br          .L4262

.L4262:
	phi.64      %r17912(lib) <- %phi3065(lib), %phi3066(lib)
	load.64     %r17913 <- 8[%r17912(lib)]
	br          %r17913, .L4259, .L4261

.L4259:
	call        lua_pushcclosure, %arg1, %r17913, $0
	load.64     %r17919 <- 0[%r17912(lib)]
	call        lua_pushstring, %arg1, %r17919
	call        lua_call, %arg1, $1, $0
	add.64      %r17922 <- %r17912(lib), $16
	phisrc.64   %phi3066(lib) <- %r17922
	br          .L4262

.L4261:
	ret


barg:
.L4263:
	<entry-point>
	call.64     %r17925 <- lua_tonumber, %arg1, %arg2
	set.64      %r17926 <- 6755399441055744.000000
	add.64      %r17927 <- %r17925, %r17926
	set.64      %r17929 <- 0.000000
	seteq.32    %r17930 <- %r17927, %r17929
	br          %r17930, .L4266, .L4265

.L4266:
	call.32     %r17933 <- lua_isnumber, %arg1, %arg2
	br          %r17933, .L4265, .L4264

.L4264:
	symaddr.64  %r17936 <- <anon symbol:0x62d0014fee68>
	call.32     %r17937 <- luaL_typerror, %arg1, %arg2, %r17936
	br          .L4265

.L4265:
	cast.32     %r17939 <- (64) %r17927
	ret.32      %r17939


tobit:
.L4268:
	<entry-point>
	call.32     %r17943 <- barg, %arg1, $1
	fpcast.64   %r17945 <- (32) %r17943
	call        lua_pushnumber, %arg1, %r17945
	ret.32      $1


bnot:
.L4270:
	<entry-point>
	call.32     %r17949 <- barg, %arg1, $1
	not.32      %r17950 <- %r17949
	fpcast.64   %r17952 <- (32) %r17950
	call        lua_pushnumber, %arg1, %r17952
	ret.32      $1


band:
.L4272:
	<entry-point>
	call.32     %r17955(b) <- barg, %arg1, $1
	call.32     %r17957(i) <- lua_gettop, %arg1
	phisrc.32   %phi3074(b) <- %r17955(b)
	phisrc.32   %phi3078(i) <- %r17957(i)
	br          .L4276

.L4276:
	phi.32      %r17958(i) <- %phi3078(i), %phi3079(i)
	setgt.32    %r17959 <- %r17958(i), $1
	phi.32      %r17963 <- %phi3074(b), %phi3075(b)
	br          %r17959, .L4273, .L4275

.L4273:
	call.32     %r17962 <- barg, %arg1, %r17958(i)
	and.32      %r17965 <- %r17963, %r17962
	phisrc.32   %phi3075(b) <- %r17965
	add.32      %r17968 <- %r17958(i), $-1
	phisrc.32   %phi3079(i) <- %r17968
	br          .L4276

.L4275:
	fpcast.64   %r17972 <- (32) %r17963
	call        lua_pushnumber, %arg1, %r17972
	ret.32      $1


bor:
.L4278:
	<entry-point>
	call.32     %r17975(b) <- barg, %arg1, $1
	call.32     %r17977(i) <- lua_gettop, %arg1
	phisrc.32   %phi3083(b) <- %r17975(b)
	phisrc.32   %phi3087(i) <- %r17977(i)
	br          .L4282

.L4282:
	phi.32      %r17978(i) <- %phi3087(i), %phi3088(i)
	setgt.32    %r17979 <- %r17978(i), $1
	phi.32      %r17983 <- %phi3083(b), %phi3084(b)
	br          %r17979, .L4279, .L4281

.L4279:
	call.32     %r17982 <- barg, %arg1, %r17978(i)
	or.32       %r17985 <- %r17983, %r17982
	phisrc.32   %phi3084(b) <- %r17985
	add.32      %r17988 <- %r17978(i), $-1
	phisrc.32   %phi3088(i) <- %r17988
	br          .L4282

.L4281:
	fpcast.64   %r17992 <- (32) %r17983
	call        lua_pushnumber, %arg1, %r17992
	ret.32      $1


bxor:
.L4284:
	<entry-point>
	call.32     %r17995(b) <- barg, %arg1, $1
	call.32     %r17997(i) <- lua_gettop, %arg1
	phisrc.32   %phi3092(b) <- %r17995(b)
	phisrc.32   %phi3096(i) <- %r17997(i)
	br          .L4288

.L4288:
	phi.32      %r17998(i) <- %phi3096(i), %phi3097(i)
	setgt.32    %r17999 <- %r17998(i), $1
	phi.32      %r18003 <- %phi3092(b), %phi3093(b)
	br          %r17999, .L4285, .L4287

.L4285:
	call.32     %r18002 <- barg, %arg1, %r17998(i)
	xor.32      %r18005 <- %r18003, %r18002
	phisrc.32   %phi3093(b) <- %r18005
	add.32      %r18008 <- %r17998(i), $-1
	phisrc.32   %phi3097(i) <- %r18008
	br          .L4288

.L4287:
	fpcast.64   %r18012 <- (32) %r18003
	call        lua_pushnumber, %arg1, %r18012
	ret.32      $1


lshift:
.L4290:
	<entry-point>
	call.32     %r18015 <- barg, %arg1, $1
	call.32     %r18017 <- barg, %arg1, $2
	and.32      %r18018 <- %r18017, $31
	shl.32      %r18022 <- %r18015, %r18018
	fpcast.64   %r18024 <- (32) %r18022
	call        lua_pushnumber, %arg1, %r18024
	ret.32      $1


rshift:
.L4292:
	<entry-point>
	call.32     %r18027 <- barg, %arg1, $1
	call.32     %r18029 <- barg, %arg1, $2
	and.32      %r18030 <- %r18029, $31
	lsr.32      %r18034 <- %r18027, %r18030
	fpcast.64   %r18036 <- (32) %r18034
	call        lua_pushnumber, %arg1, %r18036
	ret.32      $1


arshift:
.L4294:
	<entry-point>
	call.32     %r18039 <- barg, %arg1, $1
	call.32     %r18041 <- barg, %arg1, $2
	and.32      %r18042 <- %r18041, $31
	asr.32      %r18047 <- %r18039, %r18042
	fpcast.64   %r18049 <- (32) %r18047
	call        lua_pushnumber, %arg1, %r18049
	ret.32      $1


rol:
.L4296:
	<entry-point>
	call.32     %r18052 <- barg, %arg1, $1
	call.32     %r18054 <- barg, %arg1, $2
	and.32      %r18055 <- %r18054, $31
	shl.32      %r18059 <- %r18052, %r18055
	sub.32      %r18062 <- $32, %r18055
	lsr.32      %r18063 <- %r18052, %r18062
	or.32       %r18064 <- %r18059, %r18063
	fpcast.64   %r18066 <- (32) %r18064
	call        lua_pushnumber, %arg1, %r18066
	ret.32      $1


ror:
.L4298:
	<entry-point>
	call.32     %r18069 <- barg, %arg1, $1
	call.32     %r18071 <- barg, %arg1, $2
	and.32      %r18072 <- %r18071, $31
	lsr.32      %r18076 <- %r18069, %r18072
	sub.32      %r18079 <- $32, %r18072
	shl.32      %r18080 <- %r18069, %r18079
	or.32       %r18081 <- %r18076, %r18080
	fpcast.64   %r18083 <- (32) %r18081
	call        lua_pushnumber, %arg1, %r18083
	ret.32      $1


bswap:
.L4300:
	<entry-point>
	call.32     %r18086 <- barg, %arg1, $1
	lsr.32      %r18088 <- %r18086, $24
	lsr.32      %r18090 <- %r18086, $8
	and.32      %r18091 <- %r18090, $0xff00
	or.32       %r18092 <- %r18088, %r18091
	and.32      %r18094 <- %r18086, $0xff00
	shl.32      %r18095 <- %r18094, $8
	or.32       %r18096 <- %r18092, %r18095
	shl.32      %r18098 <- %r18086, $24
	or.32       %r18099 <- %r18096, %r18098
	fpcast.64   %r18103 <- (32) %r18099
	call        lua_pushnumber, %arg1, %r18103
	ret.32      $1


tohex:
.L4302:
	<entry-point>
	call.32     %r18106(b) <- barg, %arg1, $1
	call.32     %r18108 <- lua_type, %arg1, $2
	seteq.32    %r18109 <- %r18108, $0xffffffff
	phisrc.32   %phi3107(b) <- %r18106(b)
	br          %r18109, .L4303, .L4304

.L4303:
	phisrc.32   %phi3104 <- $8
	br          .L4305

.L4304:
	call.32     %r18111 <- barg, %arg1, $2
	phisrc.32   %phi3105 <- %r18111
	br          .L4305

.L4305:
	phi.32      %r18113 <- %phi3104, %phi3105
	symaddr.64  %r18114(hexdigits) <- <anon symbol:0x62d0014ff2f0>
	setlt.32    %r18116 <- %r18113, $0
	phisrc.32   %phi3112(n) <- %r18113
	phisrc.64   %phi3115(hexdigits) <- %r18114(hexdigits)
	br          %r18116, .L4306, .L4307

.L4306:
	neg.32      %r18118 <- %r18113
	symaddr.64  %r18119 <- <anon symbol:0x62d0014ff690>
	phisrc.32   %phi3113(n) <- %r18118
	phisrc.64   %phi3116(hexdigits) <- %r18119
	br          .L4307

.L4307:
	phi.32      %r18120(n) <- %phi3112(n), %phi3113(n)
	setgt.32    %r18121 <- %r18120(n), $8
	select.32   %r18122(n) <- %r18121, $8, %r18120(n)
	phisrc.32   %phi3118(i) <- %r18122(n)
	br          .L4313

.L4313:
	phi.32      %r18124 <- %phi3118(i), %phi3119(i)
	add.32      %r18125(i) <- %r18124, $-1
	setge.32    %r18126 <- %r18125(i), $0
	phisrc.32   %phi3119(i) <- %r18125(i)
	symaddr.64  %r18134 <- buf
	br          %r18126, .L4310, .L4312

.L4310:
	phi.64      %r18127 <- %phi3115(hexdigits), %phi3116(hexdigits)
	phi.32      %r18128 <- %phi3107(b), %phi3108(b)
	and.32      %r18129 <- %r18128, $15
	cast.64     %r18130 <- (32) %r18129
	add.64      %r18131 <- %r18127, %r18130
	load.8      %r18132 <- 0[%r18131]
	scast.64    %r18136 <- (32) %r18125(i)
	add.64      %r18137 <- %r18134, %r18136
	store.8     %r18132 -> 0[%r18137]
	lsr.32      %r18140 <- %r18128, $4
	phisrc.32   %phi3108(b) <- %r18140
	br          .L4313

.L4312:
	scast.64    %r18145 <- (32) %r18122(n)
	call        lua_pushlstring, %arg1, %r18134, %r18145
	ret.32      $1


init_globals:
.L4315:
	<entry-point>
	store.64    $0 -> 0[luaO_nilobject_]
	store.32    $0 -> 8[luaO_nilobject_]
	store.8     $0 -> 0[log_2]
	store.8     $1 -> 1[log_2]
	store.8     $2 -> 2[log_2]
	store.8     $2 -> 3[log_2]
	store.8     $3 -> 4[log_2]
	store.8     $3 -> 5[log_2]
	store.8     $3 -> 6[log_2]
	store.8     $3 -> 7[log_2]
	store.8     $4 -> 8[log_2]
	store.8     $4 -> 9[log_2]
	store.8     $4 -> 10[log_2]
	store.8     $4 -> 11[log_2]
	store.8     $4 -> 12[log_2]
	store.8     $4 -> 13[log_2]
	store.8     $4 -> 14[log_2]
	store.8     $4 -> 15[log_2]
	store.8     $5 -> 16[log_2]
	store.8     $5 -> 17[log_2]
	store.8     $5 -> 18[log_2]
	store.8     $5 -> 19[log_2]
	store.8     $5 -> 20[log_2]
	store.8     $5 -> 21[log_2]
	store.8     $5 -> 22[log_2]
	store.8     $5 -> 23[log_2]
	store.8     $5 -> 24[log_2]
	store.8     $5 -> 25[log_2]
	store.8     $5 -> 26[log_2]
	store.8     $5 -> 27[log_2]
	store.8     $5 -> 28[log_2]
	store.8     $5 -> 29[log_2]
	store.8     $5 -> 30[log_2]
	store.8     $5 -> 31[log_2]
	store.8     $6 -> 32[log_2]
	store.8     $6 -> 33[log_2]
	store.8     $6 -> 34[log_2]
	store.8     $6 -> 35[log_2]
	store.8     $6 -> 36[log_2]
	store.8     $6 -> 37[log_2]
	store.8     $6 -> 38[log_2]
	store.8     $6 -> 39[log_2]
	store.8     $6 -> 40[log_2]
	store.8     $6 -> 41[log_2]
	store.8     $6 -> 42[log_2]
	store.8     $6 -> 43[log_2]
	store.8     $6 -> 44[log_2]
	store.8     $6 -> 45[log_2]
	store.8     $6 -> 46[log_2]
	store.8     $6 -> 47[log_2]
	store.8     $6 -> 48[log_2]
	store.8     $6 -> 49[log_2]
	store.8     $6 -> 50[log_2]
	store.8     $6 -> 51[log_2]
	store.8     $6 -> 52[log_2]
	store.8     $6 -> 53[log_2]
	store.8     $6 -> 54[log_2]
	store.8     $6 -> 55[log_2]
	store.8     $6 -> 56[log_2]
	store.8     $6 -> 57[log_2]
	store.8     $6 -> 58[log_2]
	store.8     $6 -> 59[log_2]
	store.8     $6 -> 60[log_2]
	store.8     $6 -> 61[log_2]
	store.8     $6 -> 62[log_2]
	store.8     $6 -> 63[log_2]
	store.8     $7 -> 64[log_2]
	store.8     $7 -> 65[log_2]
	store.8     $7 -> 66[log_2]
	store.8     $7 -> 67[log_2]
	store.8     $7 -> 68[log_2]
	store.8     $7 -> 69[log_2]
	store.8     $7 -> 70[log_2]
	store.8     $7 -> 71[log_2]
	store.8     $7 -> 72[log_2]
	store.8     $7 -> 73[log_2]
	store.8     $7 -> 74[log_2]
	store.8     $7 -> 75[log_2]
	store.8     $7 -> 76[log_2]
	store.8     $7 -> 77[log_2]
	store.8     $7 -> 78[log_2]
	store.8     $7 -> 79[log_2]
	store.8     $7 -> 80[log_2]
	store.8     $7 -> 81[log_2]
	store.8     $7 -> 82[log_2]
	store.8     $7 -> 83[log_2]
	store.8     $7 -> 84[log_2]
	store.8     $7 -> 85[log_2]
	store.8     $7 -> 86[log_2]
	store.8     $7 -> 87[log_2]
	store.8     $7 -> 88[log_2]
	store.8     $7 -> 89[log_2]
	store.8     $7 -> 90[log_2]
	store.8     $7 -> 91[log_2]
	store.8     $7 -> 92[log_2]
	store.8     $7 -> 93[log_2]
	store.8     $7 -> 94[log_2]
	store.8     $7 -> 95[log_2]
	store.8     $7 -> 96[log_2]
	store.8     $7 -> 97[log_2]
	store.8     $7 -> 98[log_2]
	store.8     $7 -> 99[log_2]
	store.8     $7 -> 100[log_2]
	store.8     $7 -> 101[log_2]
	store.8     $7 -> 102[log_2]
	store.8     $7 -> 103[log_2]
	store.8     $7 -> 104[log_2]
	store.8     $7 -> 105[log_2]
	store.8     $7 -> 106[log_2]
	store.8     $7 -> 107[log_2]
	store.8     $7 -> 108[log_2]
	store.8     $7 -> 109[log_2]
	store.8     $7 -> 110[log_2]
	store.8     $7 -> 111[log_2]
	store.8     $7 -> 112[log_2]
	store.8     $7 -> 113[log_2]
	store.8     $7 -> 114[log_2]
	store.8     $7 -> 115[log_2]
	store.8     $7 -> 116[log_2]
	store.8     $7 -> 117[log_2]
	store.8     $7 -> 118[log_2]
	store.8     $7 -> 119[log_2]
	store.8     $7 -> 120[log_2]
	store.8     $7 -> 121[log_2]
	store.8     $7 -> 122[log_2]
	store.8     $7 -> 123[log_2]
	store.8     $7 -> 124[log_2]
	store.8     $7 -> 125[log_2]
	store.8     $7 -> 126[log_2]
	store.8     $7 -> 127[log_2]
	store.8     $8 -> 128[log_2]
	store.8     $8 -> 129[log_2]
	store.8     $8 -> 130[log_2]
	store.8     $8 -> 131[log_2]
	store.8     $8 -> 132[log_2]
	store.8     $8 -> 133[log_2]
	store.8     $8 -> 134[log_2]
	store.8     $8 -> 135[log_2]
	store.8     $8 -> 136[log_2]
	store.8     $8 -> 137[log_2]
	store.8     $8 -> 138[log_2]
	store.8     $8 -> 139[log_2]
	store.8     $8 -> 140[log_2]
	store.8     $8 -> 141[log_2]
	store.8     $8 -> 142[log_2]
	store.8     $8 -> 143[log_2]
	store.8     $8 -> 144[log_2]
	store.8     $8 -> 145[log_2]
	store.8     $8 -> 146[log_2]
	store.8     $8 -> 147[log_2]
	store.8     $8 -> 148[log_2]
	store.8     $8 -> 149[log_2]
	store.8     $8 -> 150[log_2]
	store.8     $8 -> 151[log_2]
	store.8     $8 -> 152[log_2]
	store.8     $8 -> 153[log_2]
	store.8     $8 -> 154[log_2]
	store.8     $8 -> 155[log_2]
	store.8     $8 -> 156[log_2]
	store.8     $8 -> 157[log_2]
	store.8     $8 -> 158[log_2]
	store.8     $8 -> 159[log_2]
	store.8     $8 -> 160[log_2]
	store.8     $8 -> 161[log_2]
	store.8     $8 -> 162[log_2]
	store.8     $8 -> 163[log_2]
	store.8     $8 -> 164[log_2]
	store.8     $8 -> 165[log_2]
	store.8     $8 -> 166[log_2]
	store.8     $8 -> 167[log_2]
	store.8     $8 -> 168[log_2]
	store.8     $8 -> 169[log_2]
	store.8     $8 -> 170[log_2]
	store.8     $8 -> 171[log_2]
	store.8     $8 -> 172[log_2]
	store.8     $8 -> 173[log_2]
	store.8     $8 -> 174[log_2]
	store.8     $8 -> 175[log_2]
	store.8     $8 -> 176[log_2]
	store.8     $8 -> 177[log_2]
	store.8     $8 -> 178[log_2]
	store.8     $8 -> 179[log_2]
	store.8     $8 -> 180[log_2]
	store.8     $8 -> 181[log_2]
	store.8     $8 -> 182[log_2]
	store.8     $8 -> 183[log_2]
	store.8     $8 -> 184[log_2]
	store.8     $8 -> 185[log_2]
	store.8     $8 -> 186[log_2]
	store.8     $8 -> 187[log_2]
	store.8     $8 -> 188[log_2]
	store.8     $8 -> 189[log_2]
	store.8     $8 -> 190[log_2]
	store.8     $8 -> 191[log_2]
	store.8     $8 -> 192[log_2]
	store.8     $8 -> 193[log_2]
	store.8     $8 -> 194[log_2]
	store.8     $8 -> 195[log_2]
	store.8     $8 -> 196[log_2]
	store.8     $8 -> 197[log_2]
	store.8     $8 -> 198[log_2]
	store.8     $8 -> 199[log_2]
	store.8     $8 -> 200[log_2]
	store.8     $8 -> 201[log_2]
	store.8     $8 -> 202[log_2]
	store.8     $8 -> 203[log_2]
	store.8     $8 -> 204[log_2]
	store.8     $8 -> 205[log_2]
	store.8     $8 -> 206[log_2]
	store.8     $8 -> 207[log_2]
	store.8     $8 -> 208[log_2]
	store.8     $8 -> 209[log_2]
	store.8     $8 -> 210[log_2]
	store.8     $8 -> 211[log_2]
	store.8     $8 -> 212[log_2]
	store.8     $8 -> 213[log_2]
	store.8     $8 -> 214[log_2]
	store.8     $8 -> 215[log_2]
	store.8     $8 -> 216[log_2]
	store.8     $8 -> 217[log_2]
	store.8     $8 -> 218[log_2]
	store.8     $8 -> 219[log_2]
	store.8     $8 -> 220[log_2]
	store.8     $8 -> 221[log_2]
	store.8     $8 -> 222[log_2]
	store.8     $8 -> 223[log_2]
	store.8     $8 -> 224[log_2]
	store.8     $8 -> 225[log_2]
	store.8     $8 -> 226[log_2]
	store.8     $8 -> 227[log_2]
	store.8     $8 -> 228[log_2]
	store.8     $8 -> 229[log_2]
	store.8     $8 -> 230[log_2]
	store.8     $8 -> 231[log_2]
	store.8     $8 -> 232[log_2]
	store.8     $8 -> 233[log_2]
	store.8     $8 -> 234[log_2]
	store.8     $8 -> 235[log_2]
	store.8     $8 -> 236[log_2]
	store.8     $8 -> 237[log_2]
	store.8     $8 -> 238[log_2]
	store.8     $8 -> 239[log_2]
	store.8     $8 -> 240[log_2]
	store.8     $8 -> 241[log_2]
	store.8     $8 -> 242[log_2]
	store.8     $8 -> 243[log_2]
	store.8     $8 -> 244[log_2]
	store.8     $8 -> 245[log_2]
	store.8     $8 -> 246[log_2]
	store.8     $8 -> 247[log_2]
	store.8     $8 -> 248[log_2]
	store.8     $8 -> 249[log_2]
	store.8     $8 -> 250[log_2]
	store.8     $8 -> 251[log_2]
	store.8     $8 -> 252[log_2]
	store.8     $8 -> 253[log_2]
	store.8     $8 -> 254[log_2]
	store.8     $8 -> 255[log_2]
	symaddr.64  %r19427 <- <anon symbol:0x62d001541e60>
	store.64    %r19427 -> 0[luaT_typenames]
	symaddr.64  %r19434 <- <anon symbol:0x62d0015424b8>
	store.64    %r19434 -> 8[luaT_typenames]
	symaddr.64  %r19441 <- <anon symbol:0x62d001542b10>
	store.64    %r19441 -> 16[luaT_typenames]
	symaddr.64  %r19448 <- <anon symbol:0x62d001543168>
	store.64    %r19448 -> 24[luaT_typenames]
	symaddr.64  %r19455 <- <anon symbol:0x62d0015437c0>
	store.64    %r19455 -> 32[luaT_typenames]
	symaddr.64  %r19462 <- <anon symbol:0x62d001543e18>
	store.64    %r19462 -> 40[luaT_typenames]
	symaddr.64  %r19469 <- <anon symbol:0x62d001544470>
	store.64    %r19469 -> 48[luaT_typenames]
	symaddr.64  %r19476 <- <anon symbol:0x62d001544ac8>
	store.64    %r19476 -> 56[luaT_typenames]
	symaddr.64  %r19483 <- <anon symbol:0x62d001545120>
	store.64    %r19483 -> 64[luaT_typenames]
	symaddr.64  %r19490 <- <anon symbol:0x62d001545778>
	store.64    %r19490 -> 72[luaT_typenames]
	symaddr.64  %r19497 <- <anon symbol:0x62d001545dd0>
	store.64    %r19497 -> 80[luaT_typenames]
	symaddr.64  %r19504 <- <anon symbol:0x62d001546428>
	store.64    %r19504 -> 0[luaT_eventname]
	symaddr.64  %r19511 <- <anon symbol:0x62d001546a80>
	store.64    %r19511 -> 8[luaT_eventname]
	symaddr.64  %r19518 <- <anon symbol:0x62d0015470d8>
	store.64    %r19518 -> 16[luaT_eventname]
	symaddr.64  %r19525 <- <anon symbol:0x62d001547730>
	store.64    %r19525 -> 24[luaT_eventname]
	symaddr.64  %r19532 <- <anon symbol:0x62d001547d88>
	store.64    %r19532 -> 32[luaT_eventname]
	symaddr.64  %r19539 <- <anon symbol:0x62d001554418>
	store.64    %r19539 -> 40[luaT_eventname]
	symaddr.64  %r19546 <- <anon symbol:0x62d001554a70>
	store.64    %r19546 -> 48[luaT_eventname]
	symaddr.64  %r19553 <- <anon symbol:0x62d0015550c8>
	store.64    %r19553 -> 56[luaT_eventname]
	symaddr.64  %r19560 <- <anon symbol:0x62d001555720>
	store.64    %r19560 -> 64[luaT_eventname]
	symaddr.64  %r19567 <- <anon symbol:0x62d001555d78>
	store.64    %r19567 -> 72[luaT_eventname]
	symaddr.64  %r19574 <- <anon symbol:0x62d0015563d0>
	store.64    %r19574 -> 80[luaT_eventname]
	symaddr.64  %r19581 <- <anon symbol:0x62d001556a28>
	store.64    %r19581 -> 88[luaT_eventname]
	symaddr.64  %r19588 <- <anon symbol:0x62d001557080>
	store.64    %r19588 -> 96[luaT_eventname]
	symaddr.64  %r19595 <- <anon symbol:0x62d0015576d8>
	store.64    %r19595 -> 104[luaT_eventname]
	symaddr.64  %r19602 <- <anon symbol:0x62d001557d30>
	store.64    %r19602 -> 112[luaT_eventname]
	symaddr.64  %r19609 <- <anon symbol:0x62d001558388>
	store.64    %r19609 -> 120[luaT_eventname]
	symaddr.64  %r19616 <- <anon symbol:0x62d0015589e0>
	store.64    %r19616 -> 128[luaT_eventname]
	store.64    $0 -> 32[dummynode_]
	store.32    $0 -> 24[dummynode_]
	store.64    $0 -> 16[dummynode_]
	store.64    $0 -> 0[dummynode_]
	store.32    $0 -> 8[dummynode_]
	store.8     $96 -> 0[luaP_opmodes]
	store.8     $113 -> 1[luaP_opmodes]
	store.8     $84 -> 2[luaP_opmodes]
	store.8     $96 -> 3[luaP_opmodes]
	store.8     $80 -> 4[luaP_opmodes]
	store.8     $113 -> 5[luaP_opmodes]
	store.8     $108 -> 6[luaP_opmodes]
	store.8     $49 -> 7[luaP_opmodes]
	store.8     $16 -> 8[luaP_opmodes]
	store.8     $60 -> 9[luaP_opmodes]
	store.8     $84 -> 10[luaP_opmodes]
	store.8     $108 -> 11[luaP_opmodes]
	store.8     $124 -> 12[luaP_opmodes]
	store.8     $124 -> 13[luaP_opmodes]
	store.8     $124 -> 14[luaP_opmodes]
	store.8     $124 -> 15[luaP_opmodes]
	store.8     $124 -> 16[luaP_opmodes]
	store.8     $124 -> 17[luaP_opmodes]
	store.8     $96 -> 18[luaP_opmodes]
	store.8     $96 -> 19[luaP_opmodes]
	store.8     $96 -> 20[luaP_opmodes]
	store.8     $104 -> 21[luaP_opmodes]
	store.8     $34 -> 22[luaP_opmodes]
	store.8     $188 -> 23[luaP_opmodes]
	store.8     $188 -> 24[luaP_opmodes]
	store.8     $188 -> 25[luaP_opmodes]
	store.8     $228 -> 26[luaP_opmodes]
	store.8     $228 -> 27[luaP_opmodes]
	store.8     $84 -> 28[luaP_opmodes]
	store.8     $84 -> 29[luaP_opmodes]
	store.8     $16 -> 30[luaP_opmodes]
	store.8     $98 -> 31[luaP_opmodes]
	store.8     $98 -> 32[luaP_opmodes]
	store.8     $132 -> 33[luaP_opmodes]
	store.8     $20 -> 34[luaP_opmodes]
	store.8     $0 -> 35[luaP_opmodes]
	store.8     $81 -> 36[luaP_opmodes]
	store.8     $80 -> 37[luaP_opmodes]
	symaddr.64  %r19813 <- <anon symbol:0x62d001562558>
	store.64    %r19813 -> 0[luaX_tokens]
	symaddr.64  %r19820 <- <anon symbol:0x62d001562bb0>
	store.64    %r19820 -> 8[luaX_tokens]
	symaddr.64  %r19827 <- <anon symbol:0x62d001563208>
	store.64    %r19827 -> 16[luaX_tokens]
	symaddr.64  %r19834 <- <anon symbol:0x62d001563860>
	store.64    %r19834 -> 24[luaX_tokens]
	symaddr.64  %r19841 <- <anon symbol:0x62d001563eb8>
	store.64    %r19841 -> 32[luaX_tokens]
	symaddr.64  %r19848 <- <anon symbol:0x62d001564510>
	store.64    %r19848 -> 40[luaX_tokens]
	symaddr.64  %r19855 <- <anon symbol:0x62d001564b68>
	store.64    %r19855 -> 48[luaX_tokens]
	symaddr.64  %r19862 <- <anon symbol:0x62d0015651c0>
	store.64    %r19862 -> 56[luaX_tokens]
	symaddr.64  %r19869 <- <anon symbol:0x62d001565818>
	store.64    %r19869 -> 64[luaX_tokens]
	symaddr.64  %r19876 <- <anon symbol:0x62d001565e70>
	store.64    %r19876 -> 72[luaX_tokens]
	symaddr.64  %r19883 <- <anon symbol:0x62d00157c500>
	store.64    %r19883 -> 80[luaX_tokens]
	symaddr.64  %r19890 <- <anon symbol:0x62d00157cb58>
	store.64    %r19890 -> 88[luaX_tokens]
	symaddr.64  %r19897 <- <anon symbol:0x62d00157d1b0>
	store.64    %r19897 -> 96[luaX_tokens]
	symaddr.64  %r19904 <- <anon symbol:0x62d00157d808>
	store.64    %r19904 -> 104[luaX_tokens]
	symaddr.64  %r19911 <- <anon symbol:0x62d00157de60>
	store.64    %r19911 -> 112[luaX_tokens]
	symaddr.64  %r19918 <- <anon symbol:0x62d00157e4b8>
	store.64    %r19918 -> 120[luaX_tokens]
	symaddr.64  %r19925 <- <anon symbol:0x62d00157eb10>
	store.64    %r19925 -> 128[luaX_tokens]
	symaddr.64  %r19932 <- <anon symbol:0x62d00157f168>
	store.64    %r19932 -> 136[luaX_tokens]
	symaddr.64  %r19939 <- <anon symbol:0x62d00157f7c0>
	store.64    %r19939 -> 144[luaX_tokens]
	symaddr.64  %r19946 <- <anon symbol:0x62d00157fe18>
	store.64    %r19946 -> 152[luaX_tokens]
	symaddr.64  %r19953 <- <anon symbol:0x62d001580470>
	store.64    %r19953 -> 160[luaX_tokens]
	symaddr.64  %r19960 <- <anon symbol:0x62d001580ac8>
	store.64    %r19960 -> 168[luaX_tokens]
	symaddr.64  %r19967 <- <anon symbol:0x62d001581120>
	store.64    %r19967 -> 176[luaX_tokens]
	symaddr.64  %r19974 <- <anon symbol:0x62d001581778>
	store.64    %r19974 -> 184[luaX_tokens]
	symaddr.64  %r19981 <- <anon symbol:0x62d001581dd0>
	store.64    %r19981 -> 192[luaX_tokens]
	symaddr.64  %r19988 <- <anon symbol:0x62d001582428>
	store.64    %r19988 -> 200[luaX_tokens]
	symaddr.64  %r19995 <- <anon symbol:0x62d001582a80>
	store.64    %r19995 -> 208[luaX_tokens]
	symaddr.64  %r20002 <- <anon symbol:0x62d0015830d8>
	store.64    %r20002 -> 216[luaX_tokens]
	symaddr.64  %r20009 <- <anon symbol:0x62d001583730>
	store.64    %r20009 -> 224[luaX_tokens]
	symaddr.64  %r20016 <- <anon symbol:0x62d001583d88>
	store.64    %r20016 -> 232[luaX_tokens]
	symaddr.64  %r20023 <- <anon symbol:0x62d001572418>
	store.64    %r20023 -> 240[luaX_tokens]
	store.64    $0 -> 248[luaX_tokens]
	store.8     $6 -> 0[priority]
	store.8     $6 -> 1[priority]
	store.8     $6 -> 2[priority]
	store.8     $6 -> 3[priority]
	store.8     $7 -> 4[priority]
	store.8     $7 -> 5[priority]
	store.8     $7 -> 6[priority]
	store.8     $7 -> 7[priority]
	store.8     $7 -> 8[priority]
	store.8     $7 -> 9[priority]
	store.8     $10 -> 10[priority]
	store.8     $9 -> 11[priority]
	store.8     $5 -> 12[priority]
	store.8     $4 -> 13[priority]
	store.8     $3 -> 14[priority]
	store.8     $3 -> 15[priority]
	store.8     $3 -> 16[priority]
	store.8     $3 -> 17[priority]
	store.8     $3 -> 18[priority]
	store.8     $3 -> 19[priority]
	store.8     $3 -> 20[priority]
	store.8     $3 -> 21[priority]
	store.8     $3 -> 22[priority]
	store.8     $3 -> 23[priority]
	store.8     $3 -> 24[priority]
	store.8     $3 -> 25[priority]
	store.8     $2 -> 26[priority]
	store.8     $2 -> 27[priority]
	store.8     $1 -> 28[priority]
	store.8     $1 -> 29[priority]
	symaddr.64  %r20201 <- <anon symbol:0x62d001577eb8>
	store.64    %r20201 -> 0[base_funcs]
	symaddr.64  %r20207 <- luaB_assert
	store.64    %r20207 -> 8[base_funcs]
	symaddr.64  %r20215 <- <anon symbol:0x62d001578998>
	store.64    %r20215 -> 16[base_funcs]
	symaddr.64  %r20221 <- luaB_error
	store.64    %r20221 -> 24[base_funcs]
	symaddr.64  %r20229 <- <anon symbol:0x62d001579478>
	store.64    %r20229 -> 32[base_funcs]
	symaddr.64  %r20235 <- luaB_loadfile
	store.64    %r20235 -> 40[base_funcs]
	symaddr.64  %r20243 <- <anon symbol:0x62d001579f58>
	store.64    %r20243 -> 48[base_funcs]
	symaddr.64  %r20249 <- luaB_loadstring
	store.64    %r20249 -> 56[base_funcs]
	symaddr.64  %r20257 <- <anon symbol:0x62d00159aa70>
	store.64    %r20257 -> 64[base_funcs]
	symaddr.64  %r20263 <- luaB_next
	store.64    %r20263 -> 72[base_funcs]
	symaddr.64  %r20271 <- <anon symbol:0x62d00159b550>
	store.64    %r20271 -> 80[base_funcs]
	symaddr.64  %r20277 <- luaB_pcall
	store.64    %r20277 -> 88[base_funcs]
	symaddr.64  %r20285 <- <anon symbol:0x62d00159c030>
	store.64    %r20285 -> 96[base_funcs]
	symaddr.64  %r20291 <- luaB_rawget
	store.64    %r20291 -> 104[base_funcs]
	symaddr.64  %r20299 <- <anon symbol:0x62d00159cb10>
	store.64    %r20299 -> 112[base_funcs]
	symaddr.64  %r20305 <- luaB_setfenv
	store.64    %r20305 -> 120[base_funcs]
	symaddr.64  %r20313 <- <anon symbol:0x62d00159d5f0>
	store.64    %r20313 -> 128[base_funcs]
	symaddr.64  %r20319 <- luaB_setmetatable
	store.64    %r20319 -> 136[base_funcs]
	symaddr.64  %r20327 <- <anon symbol:0x62d00159e0d0>
	store.64    %r20327 -> 144[base_funcs]
	symaddr.64  %r20333 <- luaB_tonumber
	store.64    %r20333 -> 152[base_funcs]
	symaddr.64  %r20341 <- <anon symbol:0x62d00159ebb0>
	store.64    %r20341 -> 160[base_funcs]
	symaddr.64  %r20347 <- luaB_type
	store.64    %r20347 -> 168[base_funcs]
	symaddr.64  %r20355 <- <anon symbol:0x62d00159f690>
	store.64    %r20355 -> 176[base_funcs]
	symaddr.64  %r20361 <- luaB_unpack
	store.64    %r20361 -> 184[base_funcs]
	store.64    $0 -> 192[base_funcs]
	store.64    $0 -> 200[base_funcs]
	symaddr.64  %r20379 <- <anon symbol:0x62d0015a06e0>
	store.64    %r20379 -> 0[tab_funcs]
	symaddr.64  %r20385 <- tconcat
	store.64    %r20385 -> 8[tab_funcs]
	symaddr.64  %r20393 <- <anon symbol:0x62d0015a11c0>
	store.64    %r20393 -> 16[tab_funcs]
	symaddr.64  %r20399 <- tinsert
	store.64    %r20399 -> 24[tab_funcs]
	symaddr.64  %r20407 <- <anon symbol:0x62d0015a1ca0>
	store.64    %r20407 -> 32[tab_funcs]
	symaddr.64  %r20413 <- tremove
	store.64    %r20413 -> 40[tab_funcs]
	symaddr.64  %r20421 <- <anon symbol:0x62d0015907b8>
	store.64    %r20421 -> 48[tab_funcs]
	symaddr.64  %r20427 <- sort
	store.64    %r20427 -> 56[tab_funcs]
	store.64    $0 -> 64[tab_funcs]
	store.64    $0 -> 72[tab_funcs]
	symaddr.64  %r20445 <- <anon symbol:0x62d001591808>
	store.64    %r20445 -> 0[fnames]
	symaddr.64  %r20446 <- <anon symbol:0x62d001591e60>
	store.64    %r20446 -> 8[fnames]
	symaddr.64  %r20447 <- <anon symbol:0x62d0015924b8>
	store.64    %r20447 -> 0[iolib]
	symaddr.64  %r20453 <- io_close
	store.64    %r20453 -> 8[iolib]
	symaddr.64  %r20461 <- <anon symbol:0x62d001592f98>
	store.64    %r20461 -> 16[iolib]
	symaddr.64  %r20467 <- io_flush
	store.64    %r20467 -> 24[iolib]
	symaddr.64  %r20475 <- <anon symbol:0x62d001593a78>
	store.64    %r20475 -> 32[iolib]
	symaddr.64  %r20481 <- io_input
	store.64    %r20481 -> 40[iolib]
	symaddr.64  %r20489 <- <anon symbol:0x62d001594558>
	store.64    %r20489 -> 48[iolib]
	symaddr.64  %r20495 <- io_lines
	store.64    %r20495 -> 56[iolib]
	symaddr.64  %r20503 <- <anon symbol:0x62d001595038>
	store.64    %r20503 -> 64[iolib]
	symaddr.64  %r20509 <- io_open
	store.64    %r20509 -> 72[iolib]
	symaddr.64  %r20517 <- <anon symbol:0x62d001595b18>
	store.64    %r20517 -> 80[iolib]
	symaddr.64  %r20523 <- io_output
	store.64    %r20523 -> 88[iolib]
	symaddr.64  %r20531 <- <anon symbol:0x62d0015965f8>
	store.64    %r20531 -> 96[iolib]
	symaddr.64  %r20537 <- io_read
	store.64    %r20537 -> 104[iolib]
	symaddr.64  %r20545 <- <anon symbol:0x62d0015970d8>
	store.64    %r20545 -> 112[iolib]
	symaddr.64  %r20551 <- io_type
	store.64    %r20551 -> 120[iolib]
	symaddr.64  %r20559 <- <anon symbol:0x62d001597bb8>
	store.64    %r20559 -> 128[iolib]
	symaddr.64  %r20565 <- io_write
	store.64    %r20565 -> 136[iolib]
	store.64    $0 -> 144[iolib]
	store.64    $0 -> 152[iolib]
	symaddr.64  %r20583 <- <anon symbol:0x62d0015b8c40>
	store.64    %r20583 -> 0[flib]
	store.64    %r20453 -> 8[flib]
	symaddr.64  %r20597 <- <anon symbol:0x62d0015b9720>
	store.64    %r20597 -> 16[flib]
	symaddr.64  %r20603 <- f_flush
	store.64    %r20603 -> 24[flib]
	symaddr.64  %r20611 <- <anon symbol:0x62d0015ba200>
	store.64    %r20611 -> 32[flib]
	symaddr.64  %r20617 <- f_lines
	store.64    %r20617 -> 40[flib]
	symaddr.64  %r20625 <- <anon symbol:0x62d0015bace0>
	store.64    %r20625 -> 48[flib]
	symaddr.64  %r20631 <- f_read
	store.64    %r20631 -> 56[flib]
	symaddr.64  %r20639 <- <anon symbol:0x62d0015bb7c0>
	store.64    %r20639 -> 64[flib]
	symaddr.64  %r20645 <- f_write
	store.64    %r20645 -> 72[flib]
	symaddr.64  %r20653 <- <anon symbol:0x62d0015bc2a0>
	store.64    %r20653 -> 80[flib]
	symaddr.64  %r20659 <- io_gc
	store.64    %r20659 -> 88[flib]
	store.64    $0 -> 96[flib]
	store.64    $0 -> 104[flib]
	symaddr.64  %r20677 <- <anon symbol:0x62d0015bd2f0>
	store.64    %r20677 -> 0[syslib]
	symaddr.64  %r20683 <- os_exit
	store.64    %r20683 -> 8[syslib]
	symaddr.64  %r20691 <- <anon symbol:0x62d0015bddd0>
	store.64    %r20691 -> 16[syslib]
	symaddr.64  %r20697 <- os_remove
	store.64    %r20697 -> 24[syslib]
	store.64    $0 -> 32[syslib]
	store.64    $0 -> 40[syslib]
	symaddr.64  %r20715 <- <anon symbol:0x62d0015bee20>
	store.64    %r20715 -> 0[strlib]
	symaddr.64  %r20721 <- str_byte
	store.64    %r20721 -> 8[strlib]
	symaddr.64  %r20729 <- <anon symbol:0x62d0015bf900>
	store.64    %r20729 -> 16[strlib]
	symaddr.64  %r20735 <- str_char
	store.64    %r20735 -> 24[strlib]
	symaddr.64  %r20743 <- <anon symbol:0x62d0015ae418>
	store.64    %r20743 -> 32[strlib]
	symaddr.64  %r20749 <- str_find
	store.64    %r20749 -> 40[strlib]
	symaddr.64  %r20757 <- <anon symbol:0x62d0015aeef8>
	store.64    %r20757 -> 48[strlib]
	symaddr.64  %r20763 <- str_format
	store.64    %r20763 -> 56[strlib]
	symaddr.64  %r20771 <- <anon symbol:0x62d0015af9d8>
	store.64    %r20771 -> 64[strlib]
	symaddr.64  %r20777 <- gmatch
	store.64    %r20777 -> 72[strlib]
	symaddr.64  %r20785 <- <anon symbol:0x62d0015b04b8>
	store.64    %r20785 -> 80[strlib]
	symaddr.64  %r20791 <- str_gsub
	store.64    %r20791 -> 88[strlib]
	symaddr.64  %r20799 <- <anon symbol:0x62d0015b0f98>
	store.64    %r20799 -> 96[strlib]
	symaddr.64  %r20805 <- str_lower
	store.64    %r20805 -> 104[strlib]
	symaddr.64  %r20813 <- <anon symbol:0x62d0015b1a78>
	store.64    %r20813 -> 112[strlib]
	symaddr.64  %r20819 <- str_match
	store.64    %r20819 -> 120[strlib]
	symaddr.64  %r20827 <- <anon symbol:0x62d0015b2558>
	store.64    %r20827 -> 128[strlib]
	symaddr.64  %r20833 <- str_rep
	store.64    %r20833 -> 136[strlib]
	symaddr.64  %r20841 <- <anon symbol:0x62d0015b3038>
	store.64    %r20841 -> 144[strlib]
	symaddr.64  %r20847 <- str_sub
	store.64    %r20847 -> 152[strlib]
	symaddr.64  %r20855 <- <anon symbol:0x62d0015b3b18>
	store.64    %r20855 -> 160[strlib]
	symaddr.64  %r20861 <- str_upper
	store.64    %r20861 -> 168[strlib]
	store.64    $0 -> 176[strlib]
	store.64    $0 -> 184[strlib]
	symaddr.64  %r20879 <- <anon symbol:0x62d0015b4b68>
	store.64    %r20879 -> 0[lualibs]
	symaddr.64  %r20885 <- luaopen_base
	store.64    %r20885 -> 8[lualibs]
	symaddr.64  %r20893 <- <anon symbol:0x62d0015b5648>
	store.64    %r20893 -> 16[lualibs]
	symaddr.64  %r20899 <- luaopen_table
	store.64    %r20899 -> 24[lualibs]
	symaddr.64  %r20907 <- <anon symbol:0x62d0015b6128>
	store.64    %r20907 -> 32[lualibs]
	symaddr.64  %r20913 <- luaopen_io
	store.64    %r20913 -> 40[lualibs]
	symaddr.64  %r20921 <- <anon symbol:0x62d0015c2c40>
	store.64    %r20921 -> 48[lualibs]
	symaddr.64  %r20927 <- luaopen_os
	store.64    %r20927 -> 56[lualibs]
	symaddr.64  %r20935 <- <anon symbol:0x62d0015c3720>
	store.64    %r20935 -> 64[lualibs]
	symaddr.64  %r20941 <- luaopen_string
	store.64    %r20941 -> 72[lualibs]
	store.64    $0 -> 80[lualibs]
	store.64    $0 -> 88[lualibs]
	symaddr.64  %r20959 <- <anon symbol:0x62d0015c4770>
	store.64    %r20959 -> 0[bitlib]
	symaddr.64  %r20965 <- tobit
	store.64    %r20965 -> 8[bitlib]
	symaddr.64  %r20973 <- <anon symbol:0x62d0015c5250>
	store.64    %r20973 -> 16[bitlib]
	symaddr.64  %r20979 <- bnot
	store.64    %r20979 -> 24[bitlib]
	symaddr.64  %r20987 <- <anon symbol:0x62d0015c5d30>
	store.64    %r20987 -> 32[bitlib]
	symaddr.64  %r20993 <- band
	store.64    %r20993 -> 40[bitlib]
	symaddr.64  %r21001 <- <anon symbol:0x62d0015c6810>
	store.64    %r21001 -> 48[bitlib]
	symaddr.64  %r21007 <- bor
	store.64    %r21007 -> 56[bitlib]
	symaddr.64  %r21015 <- <anon symbol:0x62d0015c72f0>
	store.64    %r21015 -> 64[bitlib]
	symaddr.64  %r21021 <- bxor
	store.64    %r21021 -> 72[bitlib]
	symaddr.64  %r21029 <- <anon symbol:0x62d0015c7dd0>
	store.64    %r21029 -> 80[bitlib]
	symaddr.64  %r21035 <- lshift
	store.64    %r21035 -> 88[bitlib]
	symaddr.64  %r21043 <- <anon symbol:0x62d0015c88b0>
	store.64    %r21043 -> 96[bitlib]
	symaddr.64  %r21049 <- rshift
	store.64    %r21049 -> 104[bitlib]
	symaddr.64  %r21057 <- <anon symbol:0x62d0015c9390>
	store.64    %r21057 -> 112[bitlib]
	symaddr.64  %r21063 <- arshift
	store.64    %r21063 -> 120[bitlib]
	symaddr.64  %r21071 <- <anon symbol:0x62d0015c9e70>
	store.64    %r21071 -> 128[bitlib]
	symaddr.64  %r21077 <- rol
	store.64    %r21077 -> 136[bitlib]
	symaddr.64  %r21085 <- <anon symbol:0x62d0015d6988>
	store.64    %r21085 -> 144[bitlib]
	symaddr.64  %r21091 <- ror
	store.64    %r21091 -> 152[bitlib]
	symaddr.64  %r21099 <- <anon symbol:0x62d0015d7468>
	store.64    %r21099 -> 160[bitlib]
	symaddr.64  %r21105 <- bswap
	store.64    %r21105 -> 168[bitlib]
	symaddr.64  %r21113 <- <anon symbol:0x62d0015d7f48>
	store.64    %r21113 -> 176[bitlib]
	symaddr.64  %r21119 <- tohex
	store.64    %r21119 -> 184[bitlib]
	store.64    $0 -> 192[bitlib]
	store.64    $0 -> 200[bitlib]
	ret


main:
.L4317:
	<entry-point>
	call        init_globals
	call.64     %r21137 <- luaL_newstate
	call        luaL_openlibs, %r21137
	symaddr.64  %r21140 <- <anon symbol:0x62d0015d8ce0>
	symaddr.64  %r21141 <- bitlib
	call        luaL_register, %r21137, %r21140, %r21141
	setlt.32    %r21143 <- %arg1, $2
	br          %r21143, .L4318, .L4319

.L4318:
	phisrc.32   %phi3120(return) <- $8
	br          .L4320

.L4319:
	call        lua_createtable, %r21137, $0, $1
	load.64     %r21148 <- 8[%arg2]
	call        lua_pushstring, %r21137, %r21148
	call        lua_rawseti, %r21137, $0xfffffffe, $0
	symaddr.64  %r21151 <- <anon symbol:0x62d0015d9338>
	call        lua_setfield, %r21137, $0xffffd8ee, %r21151
	load.64     %r21154 <- 8[%arg2]
	call.32     %r21155 <- luaL_loadfile, %r21137, %r21154
	br          %r21155, .L4323, .L4322

.L4322:
	phisrc.32   %phi3125(i) <- $2
	br          .L4327

.L4327:
	phi.32      %r21156(i) <- %phi3125(i), %phi3126(i)
	setlt.32    %r21158 <- %r21156(i), %arg1
	br          %r21158, .L4324, .L4326

.L4324:
	scast.64    %r21162 <- (32) %r21156(i)
	muls.64     %r21163 <- %r21162, $8
	add.64      %r21164 <- %arg2, %r21163
	load.64     %r21165 <- 0[%r21164]
	call        lua_pushstring, %r21137, %r21165
	add.32      %r21167 <- %r21156(i), $1
	phisrc.32   %phi3126(i) <- %r21167
	br          .L4327

.L4326:
	add.32      %r21170 <- %arg1, $-2
	call.32     %r21171 <- lua_pcall, %r21137, %r21170, $0, $0
	br          %r21171, .L4323, .L4329

.L4323:
	load.64     %r21172 <- 0[stderr]
	symaddr.64  %r21173 <- <anon symbol:0x62d0015d98a8>
	call.64     %r21175 <- lua_tolstring, %r21137, $0xffffffff, $0
	call.32     %r21176 <- fprintf, %r21172, %r21173, %r21175
	phisrc.32   %phi3121(return) <- $1
	br          .L4320

.L4329:
	call        lua_close, %r21137
	phisrc.32   %phi3122(return) <- $0
	br          .L4320

.L4320:
	phi.32      %r21144 <- %phi3120(return), %phi3121(return), %phi3122(return)
	ret.32      %r21144


