BadCond:
.L0:
	<entry-point>
	store.32    %arg1 -> 0[K]
	store.64*   %arg2 -> 0[T]
	symaddr.64* %r1 <- ErrCnt
	load.32     %r2 <- 0[K]
	scast.64    %r3 <- (32) %r2
	muls.64     %r4 <- %r3, $4
	add.64*     %r5 <- %r1, %r4
	load.32     %r6 <- 0[%r5]
	add.32      %r7 <- %r6, $1
	symaddr.64* %r8 <- ErrCnt
	load.32     %r9 <- 0[K]
	scast.64    %r10 <- (32) %r9
	muls.64     %r11 <- %r10, $4
	add.64*     %r12 <- %r8, %r11
	store.32    %r7 -> 0[%r12]
	symaddr.64* %r13 <- <anon symbol:00000137D16D7738>
	symaddr.64* %r14 <- msg2
	load.32     %r15 <- 0[K]
	scast.64    %r16 <- (32) %r15
	muls.64     %r17 <- %r16, $8
	add.64*     %r18 <- %r14, %r17
	load.64*    %r19 <- 0[%r18]
	load.64*    %r20 <- 0[T]
	push.64*    %r13
	push.64*    %r19
	push.64*    %r20
	call.32     %r21 <- printf
	br          .L1

.L1:
	ret


TstCond:
.L2:
	<entry-point>
	store.32    %arg1 -> 0[K]
	store.32    %arg2 -> 0[Valid]
	store.64*   %arg3 -> 0[T]
	load.32     %r22 <- 0[Valid]
	br          %r22, .L4, .L3

.L3:
	load.32     %r23 <- 0[K]
	load.64*    %r24 <- 0[T]
	push.32     %r23
	push.64*    %r24
	call        BadCond
	symaddr.64* %r25 <- <anon symbol:00000137D16D7D58>
	push.64*    %r25
	call.32     %r26 <- printf
	br          .L4

.L4:
	ret


main:
.L5:
	<entry-point>
	symaddr.64* %r27 <- <anon symbol:00000137D16D83F8>
	store.64*   %r27 -> 0[msg2]
	symaddr.64* %r28 <- <anon symbol:00000137D16D8A18>
	store.64*   %r28 -> 8[msg2]
	symaddr.64* %r29 <- <anon symbol:00000137D16D9038>
	store.64*   %r29 -> 16[msg2]
	symaddr.64* %r30 <- <anon symbol:00000137D16D9658>
	store.64*   %r30 -> 24[msg2]
	store.f64   $0 -> 0[Zero]
	store.f64   $1 -> 0[One]
	load.f64    %r31 <- 0[One]
	load.f64    %r32 <- 0[One]
	add.f64     %r33 <- %r31, %r32
	store.f64   %r33 -> 0[Two]
	load.f64    %r34 <- 0[Two]
	load.f64    %r35 <- 0[One]
	add.f64     %r36 <- %r34, %r35
	store.f64   %r36 -> 0[Three]
	load.f64    %r37 <- 0[Three]
	load.f64    %r38 <- 0[One]
	add.f64     %r39 <- %r37, %r38
	store.f64   %r39 -> 0[Four]
	load.f64    %r40 <- 0[Four]
	load.f64    %r41 <- 0[One]
	add.f64     %r42 <- %r40, %r41
	store.f64   %r42 -> 0[Five]
	load.f64    %r43 <- 0[Four]
	load.f64    %r44 <- 0[Four]
	add.f64     %r45 <- %r43, %r44
	store.f64   %r45 -> 0[Eight]
	load.f64    %r46 <- 0[Three]
	load.f64    %r47 <- 0[Three]
	mulu.f64    %r48 <- %r46, %r47
	store.f64   %r48 -> 0[Nine]
	load.f64    %r49 <- 0[Nine]
	load.f64    %r50 <- 0[Three]
	mulu.f64    %r51 <- %r49, %r50
	store.f64   %r51 -> 0[TwentySeven]
	load.f64    %r52 <- 0[Four]
	load.f64    %r53 <- 0[Eight]
	mulu.f64    %r54 <- %r52, %r53
	store.f64   %r54 -> 0[ThirtyTwo]
	load.f64    %r55 <- 0[Four]
	load.f64    %r56 <- 0[Five]
	mulu.f64    %r57 <- %r55, %r56
	load.f64    %r58 <- 0[Three]
	mulu.f64    %r59 <- %r57, %r58
	load.f64    %r60 <- 0[Four]
	mulu.f64    %r61 <- %r59, %r60
	store.f64   %r61 -> 0[TwoForty]
	load.f64    %r62 <- 0[One]
	neg.f64     %r63 <- %r62
	store.f64   %r63 -> 0[MinusOne]
	load.f64    %r64 <- 0[One]
	load.f64    %r65 <- 0[Two]
	divu.f64    %r66 <- %r64, %r65
	store.f64   %r66 -> 0[Half]
	load.f64    %r67 <- 0[One]
	load.f64    %r68 <- 0[Half]
	add.f64     %r69 <- %r67, %r68
	store.f64   %r69 -> 0[OneAndHalf]
	load.f64    %r70 <- 0[MinusOne]
	set.f64     %r71 <- 0.000000
	load.f64    %r72 <- 0[One]
	sub.f64     %r73 <- %r71, %r72
	seteq.32    %r74 <- %r70, %r73
	load.f64    %r75 <- 0[MinusOne]
	load.f64    %r76 <- 0[One]
	add.f64     %r77 <- %r75, %r76
	load.f64    %r78 <- 0[Zero]
	seteq.32    %r79 <- %r77, %r78
	and-bool.32 %r80 <- %r74, %r79
	load.f64    %r81 <- 0[One]
	load.f64    %r82 <- 0[MinusOne]
	add.f64     %r83 <- %r81, %r82
	load.f64    %r84 <- 0[Zero]
	seteq.32    %r85 <- %r83, %r84
	and-bool.32 %r86 <- %r80, %r85
	br          %r86, .L9, .L7

.L9:
	load.f64    %r87 <- 0[MinusOne]
	load.f64    %r88 <- 0[One]
	push.f64    %r88
	call.f64    %r89 <- fabs
	add.f64     %r90 <- %r87, %r89
	load.f64    %r91 <- 0[Zero]
	seteq.32    %r92 <- %r90, %r91
	br          %r92, .L6, .L7

.L6:
	load.f64    %r93 <- 0[MinusOne]
	load.f64    %r94 <- 0[MinusOne]
	load.f64    %r95 <- 0[MinusOne]
	mulu.f64    %r96 <- %r94, %r95
	add.f64     %r97 <- %r93, %r96
	load.f64    %r98 <- 0[Zero]
	seteq.32    %r99 <- %r97, %r98
	phisrc.32   %phi1 <- %r99
	br          .L8

.L7:
	phisrc.32   %phi2 <- $0
	br          .L8

.L8:
	phi.32      %r100 <- %phi1, %phi2
	symaddr.64* %r101 <- <anon symbol:00000137D16D99D8>
	push.32     $0
	push.32     %r100
	push.64*    %r101
	call        TstCond
	load.f64    %r102 <- 0[Half]
	load.f64    %r103 <- 0[MinusOne]
	add.f64     %r104 <- %r102, %r103
	load.f64    %r105 <- 0[Half]
	add.f64     %r106 <- %r104, %r105
	load.f64    %r107 <- 0[Zero]
	seteq.32    %r108 <- %r106, %r107
	symaddr.64* %r109 <- <anon symbol:00000137D16D9D58>
	push.32     $0
	push.32     %r108
	push.64*    %r109
	call        TstCond
	phisrc.32   %phi3(return) <- $0
	br          .L10

.L10:
	phi.32      %r110 <- %phi3(return)
	ret.32      $0


