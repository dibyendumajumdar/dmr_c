luaM_growaux_:
.L0:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[block]
	store.64*   %arg3 -> 0[size]
	store.64    %arg4 -> 0[size_elems]
	store.32    %arg5 -> 0[limit]
	store.64*   %arg6 -> 0[errormsg]
	load.64*    %r1 <- 0[size]
	load.32     %r2 <- 0[%r1]
	load.32     %r3 <- 0[limit]
	divs.32     %r4 <- %r3, $2
	setge.32    %r5 <- %r2, %r4
	br          %r5, .L1, .L2

.L1:
	load.64*    %r6 <- 0[size]
	load.32     %r7 <- 0[%r6]
	load.32     %r8 <- 0[limit]
	setge.32    %r9 <- %r7, %r8
	br          %r9, .L3, .L4

.L3:
	load.64*    %r10 <- 0[L]
	load.64*    %r11 <- 0[errormsg]
	push.64*    %r10
	push.64*    %r11
	call        luaG_runerror
	br          .L4

.L4:
	load.32     %r12 <- 0[limit]
	store.32    %r12 -> 0[newsize]
	br          .L5

.L2:
	load.64*    %r13 <- 0[size]
	load.32     %r14 <- 0[%r13]
	muls.32     %r15 <- %r14, $2
	store.32    %r15 -> 0[newsize]
	load.32     %r16 <- 0[newsize]
	setlt.32    %r17 <- %r16, $4
	br          %r17, .L6, .L7

.L6:
	store.32    $4 -> 0[newsize]
	br          .L7

.L7:
	br          .L5

.L5:
	load.32     %r18 <- 0[newsize]
	add.32      %r19 <- %r18, $1
	scast.64    %r20 <- (32) %r19
	load.64     %r21 <- 0[size_elems]
	divu.64     %r22 <- $-3, %r21
	setbe.32    %r23 <- %r20, %r22
	br          %r23, .L8, .L9

.L8:
	load.64*    %r24 <- 0[L]
	load.64*    %r25 <- 0[block]
	load.64*    %r26 <- 0[size]
	load.32     %r27 <- 0[%r26]
	scast.64    %r28 <- (32) %r27
	load.64     %r29 <- 0[size_elems]
	mulu.64     %r30 <- %r28, %r29
	load.32     %r31 <- 0[newsize]
	scast.64    %r32 <- (32) %r31
	load.64     %r33 <- 0[size_elems]
	mulu.64     %r34 <- %r32, %r33
	push.64*    %r24
	push.64*    %r25
	push.64     %r30
	push.64     %r34
	call.64*    %r35 <- luaM_realloc_
	phisrc.64*  %phi1 <- %r35
	br          .L10

.L9:
	load.64*    %r36 <- 0[L]
	push.64*    %r36
	call.64*    %r37 <- luaM_toobig
	cast.64*    %r38 <- (64) %r37
	phisrc.64*  %phi2 <- %r38
	br          .L10

.L10:
	phi.64*     %r39 <- %phi1, %phi2
	store.64*   %r39 -> 0[newblock]
	load.32     %r40 <- 0[newsize]
	load.64*    %r41 <- 0[size]
	store.32    %r40 -> 0[%r41]
	load.64*    %r42 <- 0[newblock]
	phisrc.64*  %phi3(return) <- %r42
	br          .L11

.L11:
	phi.64*     %r43 <- %phi3(return)
	ret.64*     %r42


luaM_toobig:
.L12:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r44 <- 0[L]
	symaddr.64* %r45 <- <anon symbol:0x62d0010e6a80>
	push.64*    %r44
	push.64*    %r45
	call        luaG_runerror
	phisrc.64*  %phi4(return) <- $0
	br          .L13

.L13:
	phi.64*     %r46 <- %phi4(return)
	ret.64*     $0


luaM_realloc_:
.L14:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[block]
	store.64    %arg3 -> 0[osize]
	store.64    %arg4 -> 0[nsize]
	load.64*    %r47 <- 0[L]
	load.64*    %r48 <- 32[%r47]
	store.64*   %r48 -> 0[g]
	load.64*    %r49 <- 0[g]
	load.64*    %r50 <- 24[%r49]
	load.64*    %r51 <- 0[block]
	load.64     %r52 <- 0[osize]
	load.64     %r53 <- 0[nsize]
	push.64*    %r50
	push.64*    %r51
	push.64     %r52
	push.64     %r53
	load.64*    %r54 <- 0[g]
	load.64*    %r55 <- 16[%r54]
	call.64*    %r56 <- %r55
	store.64*   %r56 -> 0[block]
	load.64*    %r57 <- 0[block]
	seteq.32    %r58 <- %r57, $0
	load.64     %r59 <- 0[nsize]
	seta.32     %r60 <- %r59, $0
	and-bool.32 %r61 <- %r58, %r60
	br          %r61, .L15, .L16

.L15:
	load.64*    %r62 <- 0[L]
	push.64*    %r62
	push.32     $4
	call        luaD_throw
	br          .L16

.L16:
	load.64*    %r63 <- 0[g]
	load.64     %r64 <- 120[%r63]
	load.64     %r65 <- 0[osize]
	sub.64      %r66 <- %r64, %r65
	load.64     %r67 <- 0[nsize]
	add.64      %r68 <- %r66, %r67
	load.64*    %r69 <- 0[g]
	store.64    %r68 -> 120[%r69]
	load.64*    %r70 <- 0[block]
	phisrc.64*  %phi5(return) <- %r70
	br          .L17

.L17:
	phi.64*     %r71 <- %phi5(return)
	ret.64*     %r70


luaO_int2fb:
.L18:
	<entry-point>
	store.32    %arg1 -> 0[x]
	store.32    $0 -> 0[e]
	br          .L22

.L22:
	load.32     %r72 <- 0[x]
	setae.32    %r73 <- %r72, $16
	br          %r73, .L19, .L21

.L19:
	load.32     %r74 <- 0[x]
	add.32      %r75 <- %r74, $1
	lsr.32      %r76 <- %r75, $1
	store.32    %r76 -> 0[x]
	load.32     %r77 <- 0[e]
	add.32      %r78 <- %r77, $1
	store.32    %r78 -> 0[e]
	br          .L20

.L20:
	br          .L22

.L21:
	load.32     %r79 <- 0[x]
	setb.32     %r80 <- %r79, $8
	br          %r80, .L23, .L24

.L23:
	load.32     %r81 <- 0[x]
	cast.32     %r82 <- (32) %r81
	phisrc.32   %phi6(return) <- %r82
	br          .L25

.L24:
	load.32     %r84 <- 0[e]
	add.32      %r85 <- %r84, $1
	shl.32      %r86 <- %r85, $3
	load.32     %r87 <- 0[x]
	cast.32     %r88 <- (32) %r87
	sub.32      %r89 <- %r88, $8
	or.32       %r90 <- %r86, %r89
	phisrc.32   %phi7(return) <- %r90
	br          .L25

.L25:
	phi.32      %r83 <- %phi6(return), %phi7(return)
	ret.32      %r83


luaO_fb2int:
.L27:
	<entry-point>
	store.32    %arg1 -> 0[x]
	load.32     %r91 <- 0[x]
	asr.32      %r92 <- %r91, $3
	and.32      %r93 <- %r92, $31
	store.32    %r93 -> 0[e]
	load.32     %r94 <- 0[e]
	seteq.32    %r95 <- %r94, $0
	br          %r95, .L28, .L29

.L28:
	load.32     %r96 <- 0[x]
	phisrc.32   %phi8(return) <- %r96
	br          .L30

.L29:
	load.32     %r98 <- 0[x]
	and.32      %r99 <- %r98, $7
	add.32      %r100 <- %r99, $8
	load.32     %r101 <- 0[e]
	sub.32      %r102 <- %r101, $1
	shl.32      %r103 <- %r100, %r102
	phisrc.32   %phi9(return) <- %r103
	br          .L30

.L30:
	phi.32      %r97 <- %phi8(return), %phi9(return)
	ret.32      %r97


luaO_log2:
.L32:
	<entry-point>
	store.32    %arg1 -> 0[x]
	store.32    $0xffffffff -> 0[l]
	br          .L36

.L36:
	load.32     %r104 <- 0[x]
	setae.32    %r105 <- %r104, $256
	br          %r105, .L33, .L35

.L33:
	load.32     %r106 <- 0[l]
	scast.32    %r107 <- (32) %r106
	add.32      %r108 <- %r107, $8
	scast.32    %r109 <- (32) %r108
	store.32    %r109 -> 0[l]
	load.32     %r110 <- 0[x]
	cast.32     %r111 <- (32) %r110
	lsr.32      %r112 <- %r111, $8
	cast.32     %r113 <- (32) %r112
	store.32    %r113 -> 0[x]
	br          .L34

.L34:
	br          .L36

.L35:
	load.32     %r114 <- 0[l]
	symaddr.64* %r115 <- log_2
	load.32     %r116 <- 0[x]
	cast.64     %r117 <- (32) %r116
	add.64*     %r118 <- %r115, %r117
	load.8      %r119 <- 0[%r118]
	cast.32     %r120 <- (8) %r119
	add.32      %r121 <- %r114, %r120
	phisrc.32   %phi10(return) <- %r121
	br          .L37

.L37:
	phi.32      %r122 <- %phi10(return)
	ret.32      %r121


luaO_rawequalObj:
.L38:
	<entry-point>
	store.64*   %arg1 -> 0[t1]
	store.64*   %arg2 -> 0[t2]
	load.64*    %r123 <- 0[t1]
	load.32     %r124 <- 8[%r123]
	scast.32    %r125 <- (32) %r124
	load.64*    %r126 <- 0[t2]
	load.32     %r127 <- 8[%r126]
	scast.32    %r128 <- (32) %r127
	setne.32    %r129 <- %r125, %r128
	br          %r129, .L39, .L40

.L39:
	phisrc.32   %phi11(return) <- $0
	br          .L41

.L40:
	load.64*    %r131 <- 0[t1]
	load.32     %r132 <- 8[%r131]
	switch.32   %r132, 0 -> .L44, 1 -> .L46, 2 -> .L47, 3 -> .L45, default -> .L48

.L44:
	phisrc.32   %phi12(return) <- $1
	br          .L41

.L45:
	load.64*    %r133 <- 0[t1]
	load.f64    %r134 <- 0[%r133]
	fpcast.f64  %r135 <- (64) %r134
	load.64*    %r136 <- 0[t2]
	load.f64    %r137 <- 0[%r136]
	fpcast.f64  %r138 <- (64) %r137
	seteq.32    %r139 <- %r135, %r138
	phisrc.32   %phi13(return) <- %r139
	br          .L41

.L46:
	load.64*    %r140 <- 0[t1]
	load.32     %r141 <- 0[%r140]
	scast.32    %r142 <- (32) %r141
	load.64*    %r143 <- 0[t2]
	load.32     %r144 <- 0[%r143]
	scast.32    %r145 <- (32) %r144
	seteq.32    %r146 <- %r142, %r145
	phisrc.32   %phi14(return) <- %r146
	br          .L41

.L47:
	load.64*    %r147 <- 0[t1]
	load.64*    %r148 <- 0[%r147]
	load.64*    %r149 <- 0[t2]
	load.64*    %r150 <- 0[%r149]
	seteq.32    %r151 <- %r148, %r150
	phisrc.32   %phi15(return) <- %r151
	br          .L41

.L48:
	load.64*    %r152 <- 0[t1]
	load.64*    %r153 <- 0[%r152]
	load.64*    %r154 <- 0[t2]
	load.64*    %r155 <- 0[%r154]
	seteq.32    %r156 <- %r153, %r155
	phisrc.32   %phi16(return) <- %r156
	br          .L41

.L41:
	phi.32      %r130 <- %phi11(return), %phi12(return), %phi13(return), %phi14(return), %phi15(return), %phi16(return)
	ret.32      %r130


luaO_str2d:
.L49:
	<entry-point>
	store.64*   %arg1 -> 0[s]
	store.64*   %arg2 -> 0[result]
	load.64*    %r157 <- 0[s]
	symaddr.64* %r158 <- endptr
	push.64*    %r157
	push.64*    %r158
	call.f64    %r159 <- strtod
	load.64*    %r160 <- 0[result]
	store.f64   %r159 -> 0[%r160]
	load.64*    %r161 <- 0[endptr]
	load.64*    %r162 <- 0[s]
	seteq.32    %r163 <- %r161, %r162
	br          %r163, .L50, .L51

.L50:
	phisrc.32   %phi17(return) <- $0
	br          .L52

.L51:
	load.64*    %r165 <- 0[endptr]
	load.8      %r166 <- 0[%r165]
	scast.32    %r167 <- (8) %r166
	seteq.32    %r168 <- %r167, $120
	br          %r168, .L53, .L55

.L55:
	load.64*    %r169 <- 0[endptr]
	load.8      %r170 <- 0[%r169]
	scast.32    %r171 <- (8) %r170
	seteq.32    %r172 <- %r171, $88
	br          %r172, .L53, .L54

.L53:
	load.64*    %r173 <- 0[s]
	symaddr.64* %r174 <- endptr
	push.64*    %r173
	push.64*    %r174
	push.32     $16
	call.64     %r175 <- strtoul
	fpcast.f64  %r176 <- (64) %r175
	load.64*    %r177 <- 0[result]
	store.f64   %r176 -> 0[%r177]
	br          .L54

.L54:
	load.64*    %r178 <- 0[endptr]
	load.8      %r179 <- 0[%r178]
	scast.32    %r180 <- (8) %r179
	seteq.32    %r181 <- %r180, $0
	br          %r181, .L56, .L57

.L56:
	phisrc.32   %phi18(return) <- $1
	br          .L52

.L57:
	br          .L61

.L61:
	call.64*    %r182 <- __ctype_b_loc
	load.64*    %r183 <- 0[%r182]
	load.64*    %r184 <- 0[endptr]
	load.8      %r185 <- 0[%r184]
	scast.8     %r186 <- (8) %r185
	cast.32     %r187 <- (8) %r186
	scast.64    %r188 <- (32) %r187
	muls.64     %r189 <- %r188, $2
	add.64*     %r190 <- %r183, %r189
	load.16     %r191 <- 0[%r190]
	cast.32     %r192 <- (16) %r191
	and.32      %r193 <- %r192, $0x2000
	br          %r193, .L58, .L60

.L58:
	load.64*    %r194 <- 0[endptr]
	add.64*     %r195 <- %r194, $1
	store.64*   %r195 -> 0[endptr]
	br          .L59

.L59:
	br          .L61

.L60:
	load.64*    %r196 <- 0[endptr]
	load.8      %r197 <- 0[%r196]
	scast.32    %r198 <- (8) %r197
	setne.32    %r199 <- %r198, $0
	br          %r199, .L62, .L63

.L62:
	phisrc.32   %phi19(return) <- $0
	br          .L52

.L63:
	phisrc.32   %phi20(return) <- $1
	br          .L52

.L52:
	phi.32      %r164 <- %phi17(return), %phi18(return), %phi19(return), %phi20(return)
	ret.32      %r164


pushstr:
.L64:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	load.64*    %r200 <- 0[L]
	load.64*    %r201 <- 16[%r200]
	store.64*   %r201 -> 0[i_o]
	load.64*    %r202 <- 0[L]
	load.64*    %r203 <- 0[str]
	load.64*    %r204 <- 0[str]
	push.64*    %r204
	call.64     %r205 <- strlen
	push.64*    %r202
	push.64*    %r203
	push.64     %r205
	call.64*    %r206 <- luaS_newlstr
	ptrcast.64* %r207 <- (64) %r206
	load.64*    %r208 <- 0[i_o]
	store.64*   %r207 -> 0[%r208]
	load.64*    %r209 <- 0[i_o]
	store.32    $4 -> 8[%r209]
	load.64*    %r210 <- 0[L]
	load.64*    %r211 <- 56[%r210]
	ptrcast.64* %r212 <- (64) %r211
	load.64*    %r213 <- 0[L]
	load.64*    %r214 <- 16[%r213]
	ptrcast.64* %r215 <- (64) %r214
	sub.64      %r216 <- %r212, %r215
	setle.32    %r217 <- %r216, $16
	br          %r217, .L65, .L66

.L65:
	load.64*    %r218 <- 0[L]
	push.64*    %r218
	push.32     $1
	call        luaD_growstack
	br          .L67

.L66:
	br          .L67

.L67:
	load.64*    %r219 <- 0[L]
	load.64*    %r220 <- 16[%r219]
	add.64*     %r221 <- %r220, $16
	store.64*   %r221 -> 16[%r219]
	br          .L68

.L68:
	ret


luaO_pushvfstring:
.L69:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fmt]
	store.64*   %arg3 -> 0[argp]
	store.32    $1 -> 0[n]
	load.64*    %r222 <- 0[L]
	symaddr.64* %r223 <- <anon symbol:0x62d00118a5e8>
	push.64*    %r222
	push.64*    %r223
	call        pushstr
	br          .L73

.L73:
	br          .L70

.L70:
	load.64*    %r224 <- 0[fmt]
	push.64*    %r224
	push.32     $37
	call.64*    %r225 <- strchr
	store.64*   %r225 -> 0[e]
	load.64*    %r226 <- 0[e]
	seteq.32    %r227 <- %r226, $0
	br          %r227, .L74, .L75

.L74:
	br          .L72

.L75:
	load.64*    %r228 <- 0[L]
	load.64*    %r229 <- 16[%r228]
	store.64*   %r229 -> 0[i_o]
	load.64*    %r230 <- 0[L]
	load.64*    %r231 <- 0[fmt]
	load.64*    %r232 <- 0[e]
	load.64*    %r233 <- 0[fmt]
	sub.64      %r234 <- %r232, %r233
	scast.64    %r235 <- (64) %r234
	push.64*    %r230
	push.64*    %r231
	push.64     %r235
	call.64*    %r236 <- luaS_newlstr
	ptrcast.64* %r237 <- (64) %r236
	load.64*    %r238 <- 0[i_o]
	store.64*   %r237 -> 0[%r238]
	load.64*    %r239 <- 0[i_o]
	store.32    $4 -> 8[%r239]
	load.64*    %r240 <- 0[L]
	load.64*    %r241 <- 56[%r240]
	ptrcast.64* %r242 <- (64) %r241
	load.64*    %r243 <- 0[L]
	load.64*    %r244 <- 16[%r243]
	ptrcast.64* %r245 <- (64) %r244
	sub.64      %r246 <- %r242, %r245
	setle.32    %r247 <- %r246, $16
	br          %r247, .L76, .L77

.L76:
	load.64*    %r248 <- 0[L]
	push.64*    %r248
	push.32     $1
	call        luaD_growstack
	br          .L78

.L77:
	br          .L78

.L78:
	load.64*    %r249 <- 0[L]
	load.64*    %r250 <- 16[%r249]
	add.64*     %r251 <- %r250, $16
	store.64*   %r251 -> 16[%r249]
	load.64*    %r252 <- 0[e]
	load.8      %r253 <- 1[%r252]
	switch.8    %r253, 37 -> .L85, 99 -> .L81, 100 -> .L82, 102 -> .L83, 112 -> .L84, 115 -> .L80, default -> .L86

.L80:
	load.64*    %r254 <- 0[argp]
	ptrcast.64* %r255 <- (64) %r254
	load.64*    %r256 <- 0[%r255]
	store.64*   %r256 -> 0[__va_arg_ret]
	load.64*    %r257 <- 0[argp]
	cast.64     %r258 <- (64) %r257
	add.64      %r259 <- %r258, $8
	cast.64*    %r260 <- (64) %r259
	store.64*   %r260 -> 0[argp]
	load.64*    %r261 <- 0[__va_arg_ret]
	store.64*   %r261 -> 0[s]
	load.64*    %r262 <- 0[s]
	seteq.32    %r263 <- %r262, $0
	br          %r263, .L87, .L88

.L87:
	symaddr.64* %r264 <- <anon symbol:0x62d00118b298>
	store.64*   %r264 -> 0[s]
	br          .L88

.L88:
	load.64*    %r265 <- 0[L]
	load.64*    %r266 <- 0[s]
	push.64*    %r265
	push.64*    %r266
	call        pushstr
	br          .L79

.L81:
	load.64*    %r267 <- 0[argp]
	ptrcast.64* %r268 <- (64) %r267
	load.32     %r269 <- 0[%r268]
	store.32    %r269 -> 0[__va_arg_ret]
	load.64*    %r270 <- 0[argp]
	cast.64     %r271 <- (64) %r270
	add.64      %r272 <- %r271, $4
	cast.64*    %r273 <- (64) %r272
	store.64*   %r273 -> 0[argp]
	load.32     %r274 <- 0[__va_arg_ret]
	scast.8     %r275 <- (32) %r274
	store.8     %r275 -> 0[buff]
	store.8     $0 -> 1[buff]
	load.64*    %r276 <- 0[L]
	symaddr.64* %r277 <- buff
	push.64*    %r276
	push.64*    %r277
	call        pushstr
	br          .L79

.L82:
	load.64*    %r278 <- 0[L]
	load.64*    %r279 <- 16[%r278]
	store.64*   %r279 -> 0[i_o]
	load.64*    %r280 <- 0[argp]
	ptrcast.64* %r281 <- (64) %r280
	load.32     %r282 <- 0[%r281]
	store.32    %r282 -> 0[__va_arg_ret]
	load.64*    %r283 <- 0[argp]
	cast.64     %r284 <- (64) %r283
	add.64      %r285 <- %r284, $4
	cast.64*    %r286 <- (64) %r285
	store.64*   %r286 -> 0[argp]
	load.32     %r287 <- 0[__va_arg_ret]
	fpcast.f64  %r288 <- (32) %r287
	load.64*    %r289 <- 0[i_o]
	store.f64   %r288 -> 0[%r289]
	load.64*    %r290 <- 0[i_o]
	store.32    $3 -> 8[%r290]
	load.64*    %r291 <- 0[L]
	load.64*    %r292 <- 56[%r291]
	ptrcast.64* %r293 <- (64) %r292
	load.64*    %r294 <- 0[L]
	load.64*    %r295 <- 16[%r294]
	ptrcast.64* %r296 <- (64) %r295
	sub.64      %r297 <- %r293, %r296
	setle.32    %r298 <- %r297, $16
	br          %r298, .L89, .L90

.L89:
	load.64*    %r299 <- 0[L]
	push.64*    %r299
	push.32     $1
	call        luaD_growstack
	br          .L91

.L90:
	br          .L91

.L91:
	load.64*    %r300 <- 0[L]
	load.64*    %r301 <- 16[%r300]
	add.64*     %r302 <- %r301, $16
	store.64*   %r302 -> 16[%r300]
	br          .L79

.L83:
	load.64*    %r303 <- 0[L]
	load.64*    %r304 <- 16[%r303]
	store.64*   %r304 -> 0[i_o]
	load.64*    %r305 <- 0[argp]
	ptrcast.64* %r306 <- (64) %r305
	load.f64    %r307 <- 0[%r306]
	store.f64   %r307 -> 0[__va_arg_ret]
	load.64*    %r308 <- 0[argp]
	cast.64     %r309 <- (64) %r308
	add.64      %r310 <- %r309, $8
	cast.64*    %r311 <- (64) %r310
	store.64*   %r311 -> 0[argp]
	load.f64    %r312 <- 0[__va_arg_ret]
	fpcast.f64  %r313 <- (64) %r312
	load.64*    %r314 <- 0[i_o]
	store.f64   %r313 -> 0[%r314]
	load.64*    %r315 <- 0[i_o]
	store.32    $3 -> 8[%r315]
	load.64*    %r316 <- 0[L]
	load.64*    %r317 <- 56[%r316]
	ptrcast.64* %r318 <- (64) %r317
	load.64*    %r319 <- 0[L]
	load.64*    %r320 <- 16[%r319]
	ptrcast.64* %r321 <- (64) %r320
	sub.64      %r322 <- %r318, %r321
	setle.32    %r323 <- %r322, $16
	br          %r323, .L92, .L93

.L92:
	load.64*    %r324 <- 0[L]
	push.64*    %r324
	push.32     $1
	call        luaD_growstack
	br          .L94

.L93:
	br          .L94

.L94:
	load.64*    %r325 <- 0[L]
	load.64*    %r326 <- 16[%r325]
	add.64*     %r327 <- %r326, $16
	store.64*   %r327 -> 16[%r325]
	br          .L79

.L84:
	symaddr.64* %r328 <- buff
	symaddr.64* %r329 <- <anon symbol:0x62d00118ceb0>
	load.64*    %r330 <- 0[argp]
	ptrcast.64* %r331 <- (64) %r330
	load.64*    %r332 <- 0[%r331]
	store.64*   %r332 -> 0[__va_arg_ret]
	load.64*    %r333 <- 0[argp]
	cast.64     %r334 <- (64) %r333
	add.64      %r335 <- %r334, $8
	cast.64*    %r336 <- (64) %r335
	store.64*   %r336 -> 0[argp]
	load.64*    %r337 <- 0[__va_arg_ret]
	push.64*    %r328
	push.64*    %r329
	push.64*    %r337
	call.32     %r338 <- sprintf
	load.64*    %r339 <- 0[L]
	symaddr.64* %r340 <- buff
	push.64*    %r339
	push.64*    %r340
	call        pushstr
	br          .L79

.L85:
	load.64*    %r341 <- 0[L]
	symaddr.64* %r342 <- <anon symbol:0x62d00118d508>
	push.64*    %r341
	push.64*    %r342
	call        pushstr
	br          .L79

.L86:
	store.8     $37 -> 0[buff]
	load.64*    %r343 <- 0[e]
	load.8      %r344 <- 1[%r343]
	scast.8     %r345 <- (8) %r344
	store.8     %r345 -> 1[buff]
	store.8     $0 -> 2[buff]
	load.64*    %r346 <- 0[L]
	symaddr.64* %r347 <- buff
	push.64*    %r346
	push.64*    %r347
	call        pushstr
	br          .L79

.L79:
	load.32     %r348 <- 0[n]
	scast.32    %r349 <- (32) %r348
	add.32      %r350 <- %r349, $2
	scast.32    %r351 <- (32) %r350
	store.32    %r351 -> 0[n]
	load.64*    %r352 <- 0[e]
	add.64*     %r353 <- %r352, $2
	store.64*   %r353 -> 0[fmt]
	br          .L71

.L71:
	br          .L73

.L72:
	load.64*    %r354 <- 0[L]
	load.64*    %r355 <- 0[fmt]
	push.64*    %r354
	push.64*    %r355
	call        pushstr
	load.64*    %r356 <- 0[L]
	load.32     %r357 <- 0[n]
	add.32      %r358 <- %r357, $1
	load.64*    %r359 <- 0[L]
	load.64*    %r360 <- 16[%r359]
	load.64*    %r361 <- 0[L]
	load.64*    %r362 <- 24[%r361]
	sub.64      %r363 <- %r360, %r362
	divs.64     %r364 <- %r363, $16
	scast.32    %r365 <- (64) %r364
	sub.32      %r366 <- %r365, $1
	push.64*    %r356
	push.32     %r358
	push.32     %r366
	call        luaV_concat
	load.32     %r367 <- 0[n]
	scast.64    %r368 <- (32) %r367
	muls.64     %r369 <- %r368, $16
	load.64*    %r370 <- 0[L]
	load.64*    %r371 <- 16[%r370]
	cast.64     %r372 <- (64) %r371
	sub.64      %r373 <- %r372, %r369
	ptrcast.64* %r374 <- (64) %r373
	store.64*   %r374 -> 16[%r370]
	load.64*    %r375 <- 0[L]
	load.64*    %r376 <- 16[%r375]
	sub.64*     %r377 <- %r376, $16
	load.64*    %r378 <- 0[%r377]
	add.64*     %r379 <- %r378, $0
	add.64*     %r380 <- %r379, $24
	ptrcast.64* %r381 <- (64) %r380
	phisrc.64*  %phi21(return) <- %r381
	br          .L95

.L95:
	phi.64*     %r382 <- %phi21(return)
	ret.64*     %r381


luaO_pushfstring:
.L96:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fmt]
	symaddr.64* %r383 <- fmt
	cast.64*    %r384 <- (64) %r383
	store.64*   %r384 -> 0[argp]
	load.64*    %r385 <- 0[L]
	load.64*    %r386 <- 0[fmt]
	load.64*    %r387 <- 0[argp]
	push.64*    %r385
	push.64*    %r386
	push.64*    %r387
	call.64*    %r388 <- luaO_pushvfstring
	store.64*   %r388 -> 0[msg]
	load.64*    %r389 <- 0[msg]
	phisrc.64*  %phi22(return) <- %r389
	br          .L97

.L97:
	phi.64*     %r390 <- %phi22(return)
	ret.64*     %r389


luaO_chunkid:
.L98:
	<entry-point>
	store.64*   %arg1 -> 0[out]
	store.64*   %arg2 -> 0[source]
	store.64    %arg3 -> 0[bufflen]
	load.64*    %r391 <- 0[source]
	load.8      %r392 <- 0[%r391]
	scast.32    %r393 <- (8) %r392
	seteq.32    %r394 <- %r393, $61
	br          %r394, .L99, .L100

.L99:
	load.64*    %r395 <- 0[out]
	load.64*    %r396 <- 0[source]
	add.64*     %r397 <- %r396, $1
	load.64     %r398 <- 0[bufflen]
	push.64*    %r395
	push.64*    %r397
	push.64     %r398
	call.64*    %r399 <- strncpy
	load.64*    %r400 <- 0[out]
	load.64     %r401 <- 0[bufflen]
	sub.64      %r402 <- %r401, $1
	add.64*     %r403 <- %r400, %r402
	store.8     $0 -> 0[%r403]
	br          .L101

.L100:
	load.64*    %r404 <- 0[source]
	load.8      %r405 <- 0[%r404]
	scast.32    %r406 <- (8) %r405
	seteq.32    %r407 <- %r406, $64
	br          %r407, .L102, .L103

.L102:
	load.64*    %r408 <- 0[source]
	add.64*     %r409 <- %r408, $1
	store.64*   %r409 -> 0[source]
	load.64     %r410 <- 0[bufflen]
	cast.64     %r411 <- (64) %r410
	sub.64      %r412 <- %r411, $8
	cast.64     %r413 <- (64) %r412
	store.64    %r413 -> 0[bufflen]
	load.64*    %r414 <- 0[source]
	push.64*    %r414
	call.64     %r415 <- strlen
	store.64    %r415 -> 0[l]
	load.64*    %r416 <- 0[out]
	symaddr.64* %r417 <- <anon symbol:0x62d00118f2f0>
	push.64*    %r416
	push.64*    %r417
	call.64*    %r418 <- strcpy
	load.64     %r419 <- 0[l]
	load.64     %r420 <- 0[bufflen]
	seta.32     %r421 <- %r419, %r420
	br          %r421, .L104, .L105

.L104:
	load.64     %r422 <- 0[l]
	load.64     %r423 <- 0[bufflen]
	sub.64      %r424 <- %r422, %r423
	load.64*    %r425 <- 0[source]
	cast.64     %r426 <- (64) %r425
	add.64      %r427 <- %r426, %r424
	ptrcast.64* %r428 <- (64) %r427
	store.64*   %r428 -> 0[source]
	load.64*    %r429 <- 0[out]
	symaddr.64* %r430 <- <anon symbol:0x62d00118f690>
	push.64*    %r429
	push.64*    %r430
	call.64*    %r431 <- strcat
	br          .L105

.L105:
	load.64*    %r432 <- 0[out]
	load.64*    %r433 <- 0[source]
	push.64*    %r432
	push.64*    %r433
	call.64*    %r434 <- strcat
	br          .L106

.L103:
	load.64*    %r435 <- 0[source]
	symaddr.64* %r436 <- <anon symbol:0x62d00118fa30>
	push.64*    %r435
	push.64*    %r436
	call.64     %r437 <- strcspn
	store.64    %r437 -> 0[len]
	load.64     %r438 <- 0[bufflen]
	cast.64     %r439 <- (64) %r438
	sub.64      %r440 <- %r439, $17
	cast.64     %r441 <- (64) %r440
	store.64    %r441 -> 0[bufflen]
	load.64     %r442 <- 0[len]
	load.64     %r443 <- 0[bufflen]
	seta.32     %r444 <- %r442, %r443
	br          %r444, .L107, .L108

.L107:
	load.64     %r445 <- 0[bufflen]
	store.64    %r445 -> 0[len]
	br          .L108

.L108:
	load.64*    %r446 <- 0[out]
	symaddr.64* %r447 <- <anon symbol:0x62d00118ffa0>
	push.64*    %r446
	push.64*    %r447
	call.64*    %r448 <- strcpy
	load.64*    %r449 <- 0[source]
	load.64     %r450 <- 0[len]
	add.64*     %r451 <- %r449, %r450
	load.8      %r452 <- 0[%r451]
	scast.32    %r453 <- (8) %r452
	setne.32    %r454 <- %r453, $0
	br          %r454, .L109, .L110

.L109:
	load.64*    %r455 <- 0[out]
	load.64*    %r456 <- 0[source]
	load.64     %r457 <- 0[len]
	push.64*    %r455
	push.64*    %r456
	push.64     %r457
	call.64*    %r458 <- strncat
	load.64*    %r459 <- 0[out]
	symaddr.64* %r460 <- <anon symbol:0x62d001190428>
	push.64*    %r459
	push.64*    %r460
	call.64*    %r461 <- strcat
	br          .L111

.L110:
	load.64*    %r462 <- 0[out]
	load.64*    %r463 <- 0[source]
	push.64*    %r462
	push.64*    %r463
	call.64*    %r464 <- strcat
	br          .L111

.L111:
	load.64*    %r465 <- 0[out]
	symaddr.64* %r466 <- <anon symbol:0x62d0011907c8>
	push.64*    %r465
	push.64*    %r466
	call.64*    %r467 <- strcat
	br          .L106

.L106:
	br          .L101

.L101:
	ret


luaT_init:
.L112:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    $0 -> 0[i]
	br          .L116

.L116:
	load.32     %r468 <- 0[i]
	setlt.32    %r469 <- %r468, $17
	br          %r469, .L113, .L115

.L113:
	load.64*    %r470 <- 0[L]
	symaddr.64* %r471 <- luaT_eventname
	load.32     %r472 <- 0[i]
	scast.64    %r473 <- (32) %r472
	muls.64     %r474 <- %r473, $8
	add.64*     %r475 <- %r471, %r474
	load.64*    %r476 <- 0[%r475]
	symaddr.64* %r477 <- luaT_eventname
	load.32     %r478 <- 0[i]
	scast.64    %r479 <- (32) %r478
	muls.64     %r480 <- %r479, $8
	add.64*     %r481 <- %r477, %r480
	load.64*    %r482 <- 0[%r481]
	push.64*    %r482
	call.64     %r483 <- strlen
	push.64*    %r470
	push.64*    %r476
	push.64     %r483
	call.64*    %r484 <- luaS_newlstr
	load.64*    %r485 <- 0[L]
	load.64*    %r486 <- 32[%r485]
	add.64*     %r487 <- %r486, $296
	load.32     %r488 <- 0[i]
	scast.64    %r489 <- (32) %r488
	muls.64     %r490 <- %r489, $8
	add.64*     %r491 <- %r487, %r490
	store.64*   %r484 -> 0[%r491]
	load.64*    %r492 <- 0[L]
	load.64*    %r493 <- 32[%r492]
	add.64*     %r494 <- %r493, $296
	load.32     %r495 <- 0[i]
	scast.64    %r496 <- (32) %r495
	muls.64     %r497 <- %r496, $8
	add.64*     %r498 <- %r494, %r497
	load.64*    %r499 <- 0[%r498]
	load.8      %r500 <- 9[%r499]
	cast.32     %r501 <- (8) %r500
	or.32       %r502 <- %r501, $32
	scast.8     %r503 <- (32) %r502
	store.8     %r503 -> 9[%r499]
	br          .L114

.L114:
	load.32     %r504 <- 0[i]
	add.32      %r505 <- %r504, $1
	store.32    %r505 -> 0[i]
	br          .L116

.L115:
	ret


luaT_gettm:
.L117:
	<entry-point>
	store.64*   %arg1 -> 0[events]
	store.32    %arg2 -> 0[event]
	store.64*   %arg3 -> 0[ename]
	load.64*    %r506 <- 0[events]
	load.64*    %r507 <- 0[ename]
	push.64*    %r506
	push.64*    %r507
	call.64*    %r508 <- luaH_getstr
	store.64*   %r508 -> 0[tm]
	load.64*    %r509 <- 0[tm]
	load.32     %r510 <- 8[%r509]
	scast.32    %r511 <- (32) %r510
	seteq.32    %r512 <- %r511, $0
	br          %r512, .L118, .L119

.L118:
	load.32     %r513 <- 0[event]
	scast.32    %r514 <- (32) %r513
	shl.32      %r515 <- $1, %r514
	cast.8      %r516 <- (32) %r515
	cast.32     %r517 <- (8) %r516
	load.64*    %r518 <- 0[events]
	load.8      %r519 <- 10[%r518]
	cast.32     %r520 <- (8) %r519
	or.32       %r521 <- %r520, %r517
	scast.8     %r522 <- (32) %r521
	store.8     %r522 -> 10[%r518]
	phisrc.64*  %phi23(return) <- $0
	br          .L120

.L119:
	load.64*    %r524 <- 0[tm]
	phisrc.64*  %phi24(return) <- %r524
	br          .L120

.L120:
	phi.64*     %r523 <- %phi23(return), %phi24(return)
	ret.64*     %r523


luaT_gettmbyobj:
.L122:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.32    %arg3 -> 0[event]
	load.64*    %r525 <- 0[o]
	load.32     %r526 <- 8[%r525]
	switch.32   %r526, 5 -> .L124, 7 -> .L125, default -> .L126

.L124:
	load.64*    %r527 <- 0[o]
	load.64*    %r528 <- 0[%r527]
	load.64*    %r529 <- 16[%r528]
	store.64*   %r529 -> 0[mt]
	br          .L123

.L125:
	load.64*    %r530 <- 0[o]
	load.64*    %r531 <- 0[%r530]
	load.64*    %r532 <- 16[%r531]
	store.64*   %r532 -> 0[mt]
	br          .L123

.L126:
	load.64*    %r533 <- 0[L]
	load.64*    %r534 <- 32[%r533]
	add.64*     %r535 <- %r534, $224
	load.64*    %r536 <- 0[o]
	load.32     %r537 <- 8[%r536]
	scast.64    %r538 <- (32) %r537
	muls.64     %r539 <- %r538, $8
	add.64*     %r540 <- %r535, %r539
	load.64*    %r541 <- 0[%r540]
	store.64*   %r541 -> 0[mt]
	br          .L123

.L123:
	load.64*    %r542 <- 0[mt]
	br          %r542, .L128, .L129

.L128:
	load.64*    %r543 <- 0[mt]
	load.64*    %r544 <- 0[L]
	load.64*    %r545 <- 32[%r544]
	add.64*     %r546 <- %r545, $296
	load.32     %r547 <- 0[event]
	scast.64    %r548 <- (32) %r547
	muls.64     %r549 <- %r548, $8
	add.64*     %r550 <- %r546, %r549
	load.64*    %r551 <- 0[%r550]
	push.64*    %r543
	push.64*    %r551
	call.64*    %r552 <- luaH_getstr
	phisrc.64*  %phi25 <- %r552
	br          .L130

.L129:
	symaddr.64* %r553 <- luaO_nilobject_
	ptrcast.64* %r554 <- (64) %r553
	phisrc.64*  %phi26 <- %r554
	br          .L130

.L130:
	phi.64*     %r555 <- %phi25, %phi26
	phisrc.64*  %phi27(return) <- %r555
	br          .L127

.L127:
	phi.64*     %r556 <- %phi27(return)
	ret.64*     %r555


luaF_newCclosure:
.L131:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nelems]
	store.64*   %arg3 -> 0[e]
	load.64*    %r557 <- 0[L]
	load.32     %r558 <- 0[nelems]
	sub.32      %r559 <- %r558, $1
	scast.64    %r560 <- (32) %r559
	mulu.64     %r561 <- $16, %r560
	cast.32     %r562 <- (64) %r561
	add.32      %r563 <- $56, %r562
	scast.64    %r564 <- (32) %r563
	push.64*    %r557
	push.64*    $0
	push.64     $0
	push.64     %r564
	call.64*    %r565 <- luaM_realloc_
	ptrcast.64* %r566 <- (64) %r565
	store.64*   %r566 -> 0[c]
	load.64*    %r567 <- 0[L]
	load.64*    %r568 <- 0[c]
	ptrcast.64* %r569 <- (64) %r568
	push.64*    %r567
	push.64*    %r569
	push.8      $6
	call        luaC_link
	load.64*    %r570 <- 0[c]
	store.8     $1 -> 10[%r570]
	load.64*    %r571 <- 0[e]
	load.64*    %r572 <- 0[c]
	store.64*   %r571 -> 24[%r572]
	load.32     %r573 <- 0[nelems]
	scast.8     %r574 <- (32) %r573
	load.64*    %r575 <- 0[c]
	store.8     %r574 -> 11[%r575]
	load.64*    %r576 <- 0[c]
	phisrc.64*  %phi28(return) <- %r576
	br          .L132

.L132:
	phi.64*     %r577 <- %phi28(return)
	ret.64*     %r576


luaF_newLclosure:
.L133:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nelems]
	store.64*   %arg3 -> 0[e]
	load.64*    %r578 <- 0[L]
	load.32     %r579 <- 0[nelems]
	sub.32      %r580 <- %r579, $1
	scast.64    %r581 <- (32) %r580
	mulu.64     %r582 <- $8, %r581
	cast.32     %r583 <- (64) %r582
	add.32      %r584 <- $48, %r583
	scast.64    %r585 <- (32) %r584
	push.64*    %r578
	push.64*    $0
	push.64     $0
	push.64     %r585
	call.64*    %r586 <- luaM_realloc_
	ptrcast.64* %r587 <- (64) %r586
	store.64*   %r587 -> 0[c]
	load.64*    %r588 <- 0[L]
	load.64*    %r589 <- 0[c]
	ptrcast.64* %r590 <- (64) %r589
	push.64*    %r588
	push.64*    %r590
	push.8      $6
	call        luaC_link
	load.64*    %r591 <- 0[c]
	store.8     $0 -> 10[%r591]
	load.64*    %r592 <- 0[e]
	load.64*    %r593 <- 0[c]
	store.64*   %r592 -> 24[%r593]
	load.32     %r594 <- 0[nelems]
	scast.8     %r595 <- (32) %r594
	load.64*    %r596 <- 0[c]
	store.8     %r595 -> 11[%r596]
	br          .L137

.L137:
	load.32     %r597 <- 0[nelems]
	sub.32      %r598 <- %r597, $1
	store.32    %r598 -> 0[nelems]
	br          %r597, .L134, .L136

.L134:
	load.64*    %r599 <- 0[c]
	add.64*     %r600 <- %r599, $0
	add.64*     %r601 <- %r600, $40
	load.32     %r602 <- 0[nelems]
	scast.64    %r603 <- (32) %r602
	muls.64     %r604 <- %r603, $8
	add.64*     %r605 <- %r601, %r604
	store.64*   $0 -> 0[%r605]
	br          .L135

.L135:
	br          .L137

.L136:
	load.64*    %r606 <- 0[c]
	phisrc.64*  %phi29(return) <- %r606
	br          .L138

.L138:
	phi.64*     %r607 <- %phi29(return)
	ret.64*     %r606


luaF_newupval:
.L139:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r608 <- 0[L]
	push.64*    %r608
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r609 <- luaM_realloc_
	ptrcast.64* %r610 <- (64) %r609
	store.64*   %r610 -> 0[uv]
	load.64*    %r611 <- 0[L]
	load.64*    %r612 <- 0[uv]
	ptrcast.64* %r613 <- (64) %r612
	push.64*    %r611
	push.64*    %r613
	push.8      $10
	call        luaC_link
	load.64*    %r614 <- 0[uv]
	add.64*     %r615 <- %r614, $24
	add.64*     %r616 <- %r615, $0
	load.64*    %r617 <- 0[uv]
	store.64*   %r616 -> 16[%r617]
	load.64*    %r618 <- 0[uv]
	load.64*    %r619 <- 16[%r618]
	store.32    $0 -> 8[%r619]
	load.64*    %r620 <- 0[uv]
	phisrc.64*  %phi30(return) <- %r620
	br          .L140

.L140:
	phi.64*     %r621 <- %phi30(return)
	ret.64*     %r620


luaF_findupval:
.L141:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[level]
	load.64*    %r622 <- 0[L]
	load.64*    %r623 <- 32[%r622]
	store.64*   %r623 -> 0[g]
	load.64*    %r624 <- 0[L]
	add.64*     %r625 <- %r624, $152
	store.64*   %r625 -> 0[pp]
	br          .L145

.L145:
	load.64*    %r626 <- 0[pp]
	load.64*    %r627 <- 0[%r626]
	setne.32    %r628 <- %r627, $0
	br          %r628, .L146, .L144

.L146:
	load.64*    %r629 <- 0[pp]
	load.64*    %r630 <- 0[%r629]
	add.64*     %r631 <- %r630, $0
	store.64*   %r631 -> 0[p]
	load.64*    %r632 <- 16[%r631]
	load.64*    %r633 <- 0[level]
	setae.32    %r634 <- %r632, %r633
	br          %r634, .L142, .L144

.L142:
	load.64*    %r635 <- 0[p]
	load.64*    %r636 <- 16[%r635]
	load.64*    %r637 <- 0[level]
	seteq.32    %r638 <- %r636, %r637
	br          %r638, .L147, .L148

.L147:
	load.64*    %r639 <- 0[p]
	ptrcast.64* %r640 <- (64) %r639
	load.8      %r641 <- 9[%r640]
	cast.32     %r642 <- (8) %r641
	load.64*    %r643 <- 0[g]
	load.8      %r644 <- 32[%r643]
	cast.32     %r645 <- (8) %r644
	xor.32      %r646 <- %r645, $3
	and.32      %r647 <- %r642, %r646
	and.32      %r648 <- %r647, $3
	br          %r648, .L149, .L150

.L149:
	load.64*    %r649 <- 0[p]
	ptrcast.64* %r650 <- (64) %r649
	load.8      %r651 <- 9[%r650]
	cast.32     %r652 <- (8) %r651
	xor.32      %r653 <- %r652, $3
	scast.8     %r654 <- (32) %r653
	store.8     %r654 -> 9[%r650]
	br          .L150

.L150:
	load.64*    %r655 <- 0[p]
	phisrc.64*  %phi31(return) <- %r655
	br          .L151

.L148:
	load.64*    %r657 <- 0[p]
	add.64*     %r658 <- %r657, $0
	store.64*   %r658 -> 0[pp]
	br          .L143

.L143:
	br          .L145

.L144:
	load.64*    %r659 <- 0[L]
	push.64*    %r659
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r660 <- luaM_realloc_
	ptrcast.64* %r661 <- (64) %r660
	store.64*   %r661 -> 0[uv]
	load.64*    %r662 <- 0[uv]
	store.8     $10 -> 8[%r662]
	load.64*    %r663 <- 0[g]
	load.8      %r664 <- 32[%r663]
	cast.32     %r665 <- (8) %r664
	and.32      %r666 <- %r665, $3
	scast.8     %r667 <- (32) %r666
	load.64*    %r668 <- 0[uv]
	store.8     %r667 -> 9[%r668]
	load.64*    %r669 <- 0[level]
	load.64*    %r670 <- 0[uv]
	store.64*   %r669 -> 16[%r670]
	load.64*    %r671 <- 0[pp]
	load.64*    %r672 <- 0[%r671]
	load.64*    %r673 <- 0[uv]
	store.64*   %r672 -> 0[%r673]
	load.64*    %r674 <- 0[uv]
	ptrcast.64* %r675 <- (64) %r674
	load.64*    %r676 <- 0[pp]
	store.64*   %r675 -> 0[%r676]
	load.64*    %r677 <- 0[g]
	add.64*     %r678 <- %r677, $184
	load.64*    %r679 <- 0[uv]
	store.64*   %r678 -> 24[%r679]
	load.64*    %r680 <- 0[g]
	load.64*    %r681 <- 216[%r680]
	load.64*    %r682 <- 0[uv]
	store.64*   %r681 -> 32[%r682]
	load.64*    %r683 <- 0[uv]
	load.64*    %r684 <- 0[uv]
	load.64*    %r685 <- 32[%r684]
	store.64*   %r683 -> 24[%r685]
	load.64*    %r686 <- 0[uv]
	load.64*    %r687 <- 0[g]
	store.64*   %r686 -> 216[%r687]
	load.64*    %r688 <- 0[uv]
	phisrc.64*  %phi32(return) <- %r688
	br          .L151

.L151:
	phi.64*     %r656 <- %phi31(return), %phi32(return)
	ret.64*     %r656


unlinkupval:
.L152:
	<entry-point>
	store.64*   %arg1 -> 0[uv]
	load.64*    %r689 <- 0[uv]
	load.64*    %r690 <- 24[%r689]
	load.64*    %r691 <- 0[uv]
	load.64*    %r692 <- 32[%r691]
	store.64*   %r690 -> 24[%r692]
	load.64*    %r693 <- 0[uv]
	load.64*    %r694 <- 32[%r693]
	load.64*    %r695 <- 0[uv]
	load.64*    %r696 <- 24[%r695]
	store.64*   %r694 -> 32[%r696]
	br          .L153

.L153:
	ret


luaF_freeupval:
.L154:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[uv]
	load.64*    %r697 <- 0[uv]
	load.64*    %r698 <- 16[%r697]
	load.64*    %r699 <- 0[uv]
	add.64*     %r700 <- %r699, $24
	add.64*     %r701 <- %r700, $0
	setne.32    %r702 <- %r698, %r701
	br          %r702, .L155, .L156

.L155:
	load.64*    %r703 <- 0[uv]
	push.64*    %r703
	call        unlinkupval
	br          .L156

.L156:
	load.64*    %r704 <- 0[L]
	load.64*    %r705 <- 0[uv]
	cast.64*    %r706 <- (64) %r705
	push.64*    %r704
	push.64*    %r706
	push.64     $40
	push.64     $0
	call.64*    %r707 <- luaM_realloc_
	br          .L157

.L157:
	ret


luaF_close:
.L158:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[level]
	load.64*    %r708 <- 0[L]
	load.64*    %r709 <- 32[%r708]
	store.64*   %r709 -> 0[g]
	br          .L162

.L162:
	load.64*    %r710 <- 0[L]
	load.64*    %r711 <- 152[%r710]
	setne.32    %r712 <- %r711, $0
	br          %r712, .L163, .L161

.L163:
	load.64*    %r713 <- 0[L]
	load.64*    %r714 <- 152[%r713]
	add.64*     %r715 <- %r714, $0
	store.64*   %r715 -> 0[uv]
	load.64*    %r716 <- 16[%r715]
	load.64*    %r717 <- 0[level]
	setae.32    %r718 <- %r716, %r717
	br          %r718, .L159, .L161

.L159:
	load.64*    %r719 <- 0[uv]
	ptrcast.64* %r720 <- (64) %r719
	store.64*   %r720 -> 0[o]
	load.64*    %r721 <- 0[uv]
	load.64*    %r722 <- 0[%r721]
	load.64*    %r723 <- 0[L]
	store.64*   %r722 -> 152[%r723]
	load.64*    %r724 <- 0[o]
	load.8      %r725 <- 9[%r724]
	cast.32     %r726 <- (8) %r725
	load.64*    %r727 <- 0[g]
	load.8      %r728 <- 32[%r727]
	cast.32     %r729 <- (8) %r728
	xor.32      %r730 <- %r729, $3
	and.32      %r731 <- %r726, %r730
	and.32      %r732 <- %r731, $3
	br          %r732, .L164, .L165

.L164:
	load.64*    %r733 <- 0[L]
	load.64*    %r734 <- 0[uv]
	push.64*    %r733
	push.64*    %r734
	call        luaF_freeupval
	br          .L166

.L165:
	load.64*    %r735 <- 0[uv]
	push.64*    %r735
	call        unlinkupval
	load.64*    %r736 <- 0[uv]
	load.64*    %r737 <- 16[%r736]
	store.64*   %r737 -> 0[o2]
	load.64*    %r738 <- 0[uv]
	add.64*     %r739 <- %r738, $24
	add.64*     %r740 <- %r739, $0
	store.64*   %r740 -> 0[o1]
	load.64*    %r741 <- 0[o2]
	load.f64    %r742 <- 0[%r741]
	fpcast.f64  %r743 <- (64) %r742
	load.64*    %r744 <- 0[o1]
	store.f64   %r743 -> 0[%r744]
	load.64*    %r745 <- 0[o2]
	load.32     %r746 <- 8[%r745]
	scast.32    %r747 <- (32) %r746
	load.64*    %r748 <- 0[o1]
	store.32    %r747 -> 8[%r748]
	load.64*    %r749 <- 0[uv]
	add.64*     %r750 <- %r749, $24
	add.64*     %r751 <- %r750, $0
	load.64*    %r752 <- 0[uv]
	store.64*   %r751 -> 16[%r752]
	load.64*    %r753 <- 0[L]
	load.64*    %r754 <- 0[uv]
	push.64*    %r753
	push.64*    %r754
	call        luaC_linkupval
	br          .L166

.L166:
	br          .L160

.L160:
	br          .L162

.L161:
	ret


luaF_newproto:
.L167:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r755 <- 0[L]
	push.64*    %r755
	push.64*    $0
	push.64     $0
	push.64     $120
	call.64*    %r756 <- luaM_realloc_
	ptrcast.64* %r757 <- (64) %r756
	store.64*   %r757 -> 0[f]
	load.64*    %r758 <- 0[L]
	load.64*    %r759 <- 0[f]
	ptrcast.64* %r760 <- (64) %r759
	push.64*    %r758
	push.64*    %r760
	push.8      $9
	call        luaC_link
	load.64*    %r761 <- 0[f]
	store.64*   $0 -> 16[%r761]
	load.64*    %r762 <- 0[f]
	store.32    $0 -> 76[%r762]
	load.64*    %r763 <- 0[f]
	store.64*   $0 -> 32[%r763]
	load.64*    %r764 <- 0[f]
	store.32    $0 -> 88[%r764]
	load.64*    %r765 <- 0[f]
	store.64*   $0 -> 24[%r765]
	load.64*    %r766 <- 0[f]
	store.32    $0 -> 80[%r766]
	load.64*    %r767 <- 0[f]
	store.32    $0 -> 84[%r767]
	load.64*    %r768 <- 0[f]
	store.32    $0 -> 72[%r768]
	load.64*    %r769 <- 0[f]
	store.8     $0 -> 112[%r769]
	load.64*    %r770 <- 0[f]
	store.64*   $0 -> 56[%r770]
	load.64*    %r771 <- 0[f]
	store.8     $0 -> 113[%r771]
	load.64*    %r772 <- 0[f]
	store.8     $0 -> 114[%r772]
	load.64*    %r773 <- 0[f]
	store.8     $0 -> 115[%r773]
	load.64*    %r774 <- 0[f]
	store.64*   $0 -> 40[%r774]
	load.64*    %r775 <- 0[f]
	store.32    $0 -> 92[%r775]
	load.64*    %r776 <- 0[f]
	store.64*   $0 -> 48[%r776]
	load.64*    %r777 <- 0[f]
	store.32    $0 -> 96[%r777]
	load.64*    %r778 <- 0[f]
	store.32    $0 -> 100[%r778]
	load.64*    %r779 <- 0[f]
	store.64*   $0 -> 64[%r779]
	load.64*    %r780 <- 0[f]
	phisrc.64*  %phi33(return) <- %r780
	br          .L168

.L168:
	phi.64*     %r781 <- %phi33(return)
	ret.64*     %r780


luaF_freeproto:
.L169:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r782 <- 0[L]
	load.64*    %r783 <- 0[f]
	load.64*    %r784 <- 24[%r783]
	cast.64*    %r785 <- (64) %r784
	load.64*    %r786 <- 0[f]
	load.32     %r787 <- 80[%r786]
	scast.64    %r788 <- (32) %r787
	mulu.64     %r789 <- %r788, $4
	push.64*    %r782
	push.64*    %r785
	push.64     %r789
	push.64     $0
	call.64*    %r790 <- luaM_realloc_
	load.64*    %r791 <- 0[L]
	load.64*    %r792 <- 0[f]
	load.64*    %r793 <- 32[%r792]
	cast.64*    %r794 <- (64) %r793
	load.64*    %r795 <- 0[f]
	load.32     %r796 <- 88[%r795]
	scast.64    %r797 <- (32) %r796
	mulu.64     %r798 <- %r797, $8
	push.64*    %r791
	push.64*    %r794
	push.64     %r798
	push.64     $0
	call.64*    %r799 <- luaM_realloc_
	load.64*    %r800 <- 0[L]
	load.64*    %r801 <- 0[f]
	load.64*    %r802 <- 16[%r801]
	cast.64*    %r803 <- (64) %r802
	load.64*    %r804 <- 0[f]
	load.32     %r805 <- 76[%r804]
	scast.64    %r806 <- (32) %r805
	mulu.64     %r807 <- %r806, $16
	push.64*    %r800
	push.64*    %r803
	push.64     %r807
	push.64     $0
	call.64*    %r808 <- luaM_realloc_
	load.64*    %r809 <- 0[L]
	load.64*    %r810 <- 0[f]
	load.64*    %r811 <- 40[%r810]
	cast.64*    %r812 <- (64) %r811
	load.64*    %r813 <- 0[f]
	load.32     %r814 <- 84[%r813]
	scast.64    %r815 <- (32) %r814
	mulu.64     %r816 <- %r815, $4
	push.64*    %r809
	push.64*    %r812
	push.64     %r816
	push.64     $0
	call.64*    %r817 <- luaM_realloc_
	load.64*    %r818 <- 0[L]
	load.64*    %r819 <- 0[f]
	load.64*    %r820 <- 48[%r819]
	cast.64*    %r821 <- (64) %r820
	load.64*    %r822 <- 0[f]
	load.32     %r823 <- 92[%r822]
	scast.64    %r824 <- (32) %r823
	mulu.64     %r825 <- %r824, $16
	push.64*    %r818
	push.64*    %r821
	push.64     %r825
	push.64     $0
	call.64*    %r826 <- luaM_realloc_
	load.64*    %r827 <- 0[L]
	load.64*    %r828 <- 0[f]
	load.64*    %r829 <- 56[%r828]
	cast.64*    %r830 <- (64) %r829
	load.64*    %r831 <- 0[f]
	load.32     %r832 <- 72[%r831]
	scast.64    %r833 <- (32) %r832
	mulu.64     %r834 <- %r833, $8
	push.64*    %r827
	push.64*    %r830
	push.64     %r834
	push.64     $0
	call.64*    %r835 <- luaM_realloc_
	load.64*    %r836 <- 0[L]
	load.64*    %r837 <- 0[f]
	cast.64*    %r838 <- (64) %r837
	push.64*    %r836
	push.64*    %r838
	push.64     $120
	push.64     $0
	call.64*    %r839 <- luaM_realloc_
	br          .L170

.L170:
	ret


luaF_freeclosure:
.L171:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[c]
	load.64*    %r840 <- 0[c]
	load.8      %r841 <- 10[%r840]
	br          %r841, .L172, .L173

.L172:
	load.64*    %r842 <- 0[c]
	load.8      %r843 <- 11[%r842]
	cast.32     %r844 <- (8) %r843
	sub.32      %r845 <- %r844, $1
	scast.64    %r846 <- (32) %r845
	mulu.64     %r847 <- $16, %r846
	cast.32     %r848 <- (64) %r847
	add.32      %r849 <- $56, %r848
	phisrc.32   %phi34 <- %r849
	br          .L174

.L173:
	load.64*    %r850 <- 0[c]
	load.8      %r851 <- 11[%r850]
	cast.32     %r852 <- (8) %r851
	sub.32      %r853 <- %r852, $1
	scast.64    %r854 <- (32) %r853
	mulu.64     %r855 <- $8, %r854
	cast.32     %r856 <- (64) %r855
	add.32      %r857 <- $48, %r856
	phisrc.32   %phi35 <- %r857
	br          .L174

.L174:
	phi.32      %r858 <- %phi34, %phi35
	store.32    %r858 -> 0[size]
	load.64*    %r859 <- 0[L]
	load.64*    %r860 <- 0[c]
	cast.64*    %r861 <- (64) %r860
	load.32     %r862 <- 0[size]
	scast.64    %r863 <- (32) %r862
	push.64*    %r859
	push.64*    %r861
	push.64     %r863
	push.64     $0
	call.64*    %r864 <- luaM_realloc_
	br          .L175

.L175:
	ret


luaD_seterrorobj:
.L176:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[errcode]
	store.64*   %arg3 -> 0[oldtop]
	load.32     %r865 <- 0[errcode]
	switch.32   %r865, 2 -> .L181, 3 -> .L180, 4 -> .L178, 5 -> .L179, default -> .L177

.L178:
	load.64*    %r866 <- 0[oldtop]
	store.64*   %r866 -> 0[i_o]
	load.64*    %r867 <- 0[L]
	symaddr.64* %r868 <- <anon symbol:0x62d0011be3d0>
	push.64*    %r867
	push.64*    %r868
	push.64     $17
	call.64*    %r869 <- luaS_newlstr
	ptrcast.64* %r870 <- (64) %r869
	load.64*    %r871 <- 0[i_o]
	store.64*   %r870 -> 0[%r871]
	load.64*    %r872 <- 0[i_o]
	store.32    $4 -> 8[%r872]
	br          .L177

.L179:
	load.64*    %r873 <- 0[oldtop]
	store.64*   %r873 -> 0[i_o]
	load.64*    %r874 <- 0[L]
	symaddr.64* %r875 <- <anon symbol:0x62d0011bece0>
	push.64*    %r874
	push.64*    %r875
	push.64     $23
	call.64*    %r876 <- luaS_newlstr
	ptrcast.64* %r877 <- (64) %r876
	load.64*    %r878 <- 0[i_o]
	store.64*   %r877 -> 0[%r878]
	load.64*    %r879 <- 0[i_o]
	store.32    $4 -> 8[%r879]
	br          .L177

.L180:
	br          .L181

.L181:
	load.64*    %r880 <- 0[L]
	load.64*    %r881 <- 16[%r880]
	sub.64*     %r882 <- %r881, $16
	store.64*   %r882 -> 0[o2]
	load.64*    %r883 <- 0[oldtop]
	store.64*   %r883 -> 0[o1]
	load.64*    %r884 <- 0[o2]
	load.f64    %r885 <- 0[%r884]
	fpcast.f64  %r886 <- (64) %r885
	load.64*    %r887 <- 0[o1]
	store.f64   %r886 -> 0[%r887]
	load.64*    %r888 <- 0[o2]
	load.32     %r889 <- 8[%r888]
	scast.32    %r890 <- (32) %r889
	load.64*    %r891 <- 0[o1]
	store.32    %r890 -> 8[%r891]
	br          .L177

.L177:
	load.64*    %r892 <- 0[oldtop]
	add.64*     %r893 <- %r892, $16
	load.64*    %r894 <- 0[L]
	store.64*   %r893 -> 16[%r894]
	br          .L182

.L182:
	ret


restore_stack_limit:
.L183:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r895 <- 0[L]
	load.32     %r896 <- 92[%r895]
	setgt.32    %r897 <- %r896, $0x4e20
	br          %r897, .L184, .L185

.L184:
	load.64*    %r898 <- 0[L]
	load.64*    %r899 <- 40[%r898]
	load.64*    %r900 <- 0[L]
	load.64*    %r901 <- 80[%r900]
	sub.64      %r902 <- %r899, %r901
	divs.64     %r903 <- %r902, $40
	scast.32    %r904 <- (64) %r903
	store.32    %r904 -> 0[inuse]
	load.32     %r905 <- 0[inuse]
	add.32      %r906 <- %r905, $1
	setlt.32    %r907 <- %r906, $0x4e20
	br          %r907, .L186, .L187

.L186:
	load.64*    %r908 <- 0[L]
	push.64*    %r908
	push.32     $0x4e20
	call        luaD_reallocCI
	br          .L187

.L187:
	br          .L185

.L185:
	ret


resetstack:
.L188:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[status]
	load.64*    %r909 <- 0[L]
	load.64*    %r910 <- 80[%r909]
	load.64*    %r911 <- 0[L]
	store.64*   %r910 -> 40[%r911]
	load.64*    %r912 <- 0[L]
	load.64*    %r913 <- 40[%r912]
	load.64*    %r914 <- 0[%r913]
	load.64*    %r915 <- 0[L]
	store.64*   %r914 -> 24[%r915]
	load.64*    %r916 <- 0[L]
	load.64*    %r917 <- 0[L]
	load.64*    %r918 <- 24[%r917]
	push.64*    %r916
	push.64*    %r918
	call        luaF_close
	load.64*    %r919 <- 0[L]
	load.32     %r920 <- 0[status]
	load.64*    %r921 <- 0[L]
	load.64*    %r922 <- 24[%r921]
	push.64*    %r919
	push.32     %r920
	push.64*    %r922
	call        luaD_seterrorobj
	load.64*    %r923 <- 0[L]
	load.16     %r924 <- 98[%r923]
	load.64*    %r925 <- 0[L]
	store.16    %r924 -> 96[%r925]
	load.64*    %r926 <- 0[L]
	store.8     $1 -> 101[%r926]
	load.64*    %r927 <- 0[L]
	push.64*    %r927
	call        restore_stack_limit
	load.64*    %r928 <- 0[L]
	store.64    $0 -> 176[%r928]
	load.64*    %r929 <- 0[L]
	store.64*   $0 -> 168[%r929]
	br          .L189

.L189:
	ret


luaD_throw:
.L190:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[errcode]
	load.64*    %r930 <- 0[L]
	load.64*    %r931 <- 168[%r930]
	br          %r931, .L191, .L192

.L191:
	load.32     %r932 <- 0[errcode]
	scast.32    %r933 <- (32) %r932
	load.64*    %r934 <- 0[L]
	load.64*    %r935 <- 168[%r934]
	store.32    %r933 -> 208[%r935]
	load.64*    %r936 <- 0[L]
	load.64*    %r937 <- 168[%r936]
	add.64*     %r938 <- %r937, $8
	push.64*    %r938
	push.32     $1
	call        longjmp
	br          .L193

.L192:
	load.32     %r939 <- 0[errcode]
	scast.8     %r940 <- (32) %r939
	load.64*    %r941 <- 0[L]
	store.8     %r940 -> 10[%r941]
	load.64*    %r942 <- 0[L]
	load.64*    %r943 <- 32[%r942]
	load.64*    %r944 <- 152[%r943]
	br          %r944, .L194, .L195

.L194:
	load.64*    %r945 <- 0[L]
	load.32     %r946 <- 0[errcode]
	push.64*    %r945
	push.32     %r946
	call        resetstack
	load.64*    %r947 <- 0[L]
	push.64*    %r947
	load.64*    %r948 <- 0[L]
	load.64*    %r949 <- 32[%r948]
	load.64*    %r950 <- 152[%r949]
	call.32     %r951 <- %r950
	br          .L195

.L195:
	push.32     $1
	call        exit
	br          .L193

.L193:
	ret


luaD_rawrunprotected:
.L196:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64*   %arg3 -> 0[ud]
	store.32    $0 -> 208[lj]
	load.64*    %r952 <- 0[L]
	load.64*    %r953 <- 168[%r952]
	store.64*   %r953 -> 0[lj]
	symaddr.64* %r954 <- lj
	load.64*    %r955 <- 0[L]
	store.64*   %r954 -> 168[%r955]
	symaddr.64* %r956 <- lj
	add.64*     %r957 <- %r956, $8
	push.64*    %r957
	call.32     %r958 <- _setjmp
	seteq.32    %r959 <- %r958, $0
	br          %r959, .L197, .L198

.L197:
	load.64*    %r960 <- 0[L]
	load.64*    %r961 <- 0[ud]
	push.64*    %r960
	push.64*    %r961
	load.64*    %r962 <- 0[f]
	call        %r962
	br          .L198

.L198:
	load.64*    %r963 <- 0[lj]
	load.64*    %r964 <- 0[L]
	store.64*   %r963 -> 168[%r964]
	load.32     %r965 <- 208[lj]
	scast.32    %r966 <- (32) %r965
	phisrc.32   %phi36(return) <- %r966
	br          .L199

.L199:
	phi.32      %r967 <- %phi36(return)
	ret.32      %r966


correctstack:
.L200:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[oldstack]
	load.64*    %r968 <- 0[L]
	load.64*    %r969 <- 64[%r968]
	load.64*    %r970 <- 0[L]
	load.64*    %r971 <- 16[%r970]
	load.64*    %r972 <- 0[oldstack]
	sub.64      %r973 <- %r971, %r972
	divs.64     %r974 <- %r973, $16
	muls.64     %r975 <- %r974, $16
	add.64*     %r976 <- %r969, %r975
	load.64*    %r977 <- 0[L]
	store.64*   %r976 -> 16[%r977]
	load.64*    %r978 <- 0[L]
	load.64*    %r979 <- 152[%r978]
	store.64*   %r979 -> 0[up]
	br          .L204

.L204:
	load.64*    %r980 <- 0[up]
	setne.32    %r981 <- %r980, $0
	br          %r981, .L201, .L203

.L201:
	load.64*    %r982 <- 0[L]
	load.64*    %r983 <- 64[%r982]
	load.64*    %r984 <- 0[up]
	load.64*    %r985 <- 16[%r984]
	load.64*    %r986 <- 0[oldstack]
	sub.64      %r987 <- %r985, %r986
	divs.64     %r988 <- %r987, $16
	muls.64     %r989 <- %r988, $16
	add.64*     %r990 <- %r983, %r989
	load.64*    %r991 <- 0[up]
	store.64*   %r990 -> 16[%r991]
	br          .L202

.L202:
	load.64*    %r992 <- 0[up]
	load.64*    %r993 <- 0[%r992]
	store.64*   %r993 -> 0[up]
	br          .L204

.L203:
	load.64*    %r994 <- 0[L]
	load.64*    %r995 <- 80[%r994]
	store.64*   %r995 -> 0[ci]
	br          .L208

.L208:
	load.64*    %r996 <- 0[ci]
	load.64*    %r997 <- 0[L]
	load.64*    %r998 <- 40[%r997]
	setbe.32    %r999 <- %r996, %r998
	br          %r999, .L205, .L207

.L205:
	load.64*    %r1000 <- 0[L]
	load.64*    %r1001 <- 64[%r1000]
	load.64*    %r1002 <- 0[ci]
	load.64*    %r1003 <- 16[%r1002]
	load.64*    %r1004 <- 0[oldstack]
	sub.64      %r1005 <- %r1003, %r1004
	divs.64     %r1006 <- %r1005, $16
	muls.64     %r1007 <- %r1006, $16
	add.64*     %r1008 <- %r1001, %r1007
	load.64*    %r1009 <- 0[ci]
	store.64*   %r1008 -> 16[%r1009]
	load.64*    %r1010 <- 0[L]
	load.64*    %r1011 <- 64[%r1010]
	load.64*    %r1012 <- 0[ci]
	load.64*    %r1013 <- 0[%r1012]
	load.64*    %r1014 <- 0[oldstack]
	sub.64      %r1015 <- %r1013, %r1014
	divs.64     %r1016 <- %r1015, $16
	muls.64     %r1017 <- %r1016, $16
	add.64*     %r1018 <- %r1011, %r1017
	load.64*    %r1019 <- 0[ci]
	store.64*   %r1018 -> 0[%r1019]
	load.64*    %r1020 <- 0[L]
	load.64*    %r1021 <- 64[%r1020]
	load.64*    %r1022 <- 0[ci]
	load.64*    %r1023 <- 8[%r1022]
	load.64*    %r1024 <- 0[oldstack]
	sub.64      %r1025 <- %r1023, %r1024
	divs.64     %r1026 <- %r1025, $16
	muls.64     %r1027 <- %r1026, $16
	add.64*     %r1028 <- %r1021, %r1027
	load.64*    %r1029 <- 0[ci]
	store.64*   %r1028 -> 8[%r1029]
	br          .L206

.L206:
	load.64*    %r1030 <- 0[ci]
	add.64*     %r1031 <- %r1030, $40
	store.64*   %r1031 -> 0[ci]
	br          .L208

.L207:
	load.64*    %r1032 <- 0[L]
	load.64*    %r1033 <- 64[%r1032]
	load.64*    %r1034 <- 0[L]
	load.64*    %r1035 <- 24[%r1034]
	load.64*    %r1036 <- 0[oldstack]
	sub.64      %r1037 <- %r1035, %r1036
	divs.64     %r1038 <- %r1037, $16
	muls.64     %r1039 <- %r1038, $16
	add.64*     %r1040 <- %r1033, %r1039
	load.64*    %r1041 <- 0[L]
	store.64*   %r1040 -> 24[%r1041]
	br          .L209

.L209:
	ret


luaD_reallocstack:
.L210:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r1042 <- 0[L]
	load.64*    %r1043 <- 64[%r1042]
	store.64*   %r1043 -> 0[oldstack]
	load.32     %r1044 <- 0[newsize]
	add.32      %r1045 <- %r1044, $1
	add.32      %r1046 <- %r1045, $5
	store.32    %r1046 -> 0[realsize]
	load.32     %r1047 <- 0[realsize]
	add.32      %r1048 <- %r1047, $1
	scast.64    %r1049 <- (32) %r1048
	setbe.32    %r1050 <- %r1049, $0xfffffffffffffff
	br          %r1050, .L211, .L212

.L211:
	load.64*    %r1051 <- 0[L]
	load.64*    %r1052 <- 0[L]
	load.64*    %r1053 <- 64[%r1052]
	cast.64*    %r1054 <- (64) %r1053
	load.64*    %r1055 <- 0[L]
	load.32     %r1056 <- 88[%r1055]
	scast.64    %r1057 <- (32) %r1056
	mulu.64     %r1058 <- %r1057, $16
	load.32     %r1059 <- 0[realsize]
	scast.64    %r1060 <- (32) %r1059
	mulu.64     %r1061 <- %r1060, $16
	push.64*    %r1051
	push.64*    %r1054
	push.64     %r1058
	push.64     %r1061
	call.64*    %r1062 <- luaM_realloc_
	phisrc.64*  %phi37 <- %r1062
	br          .L213

.L212:
	load.64*    %r1063 <- 0[L]
	push.64*    %r1063
	call.64*    %r1064 <- luaM_toobig
	cast.64*    %r1065 <- (64) %r1064
	phisrc.64*  %phi38 <- %r1065
	br          .L213

.L213:
	phi.64*     %r1066 <- %phi37, %phi38
	ptrcast.64* %r1067 <- (64) %r1066
	load.64*    %r1068 <- 0[L]
	store.64*   %r1067 -> 64[%r1068]
	load.32     %r1069 <- 0[realsize]
	load.64*    %r1070 <- 0[L]
	store.32    %r1069 -> 88[%r1070]
	load.64*    %r1071 <- 0[L]
	load.64*    %r1072 <- 64[%r1071]
	load.32     %r1073 <- 0[newsize]
	scast.64    %r1074 <- (32) %r1073
	muls.64     %r1075 <- %r1074, $16
	add.64*     %r1076 <- %r1072, %r1075
	load.64*    %r1077 <- 0[L]
	store.64*   %r1076 -> 56[%r1077]
	load.64*    %r1078 <- 0[L]
	load.64*    %r1079 <- 0[oldstack]
	push.64*    %r1078
	push.64*    %r1079
	call        correctstack
	br          .L214

.L214:
	ret


luaD_reallocCI:
.L215:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r1080 <- 0[L]
	load.64*    %r1081 <- 80[%r1080]
	store.64*   %r1081 -> 0[oldci]
	load.32     %r1082 <- 0[newsize]
	add.32      %r1083 <- %r1082, $1
	scast.64    %r1084 <- (32) %r1083
	setbe.32    %r1085 <- %r1084, $0x666666666666666
	br          %r1085, .L216, .L217

.L216:
	load.64*    %r1086 <- 0[L]
	load.64*    %r1087 <- 0[L]
	load.64*    %r1088 <- 80[%r1087]
	cast.64*    %r1089 <- (64) %r1088
	load.64*    %r1090 <- 0[L]
	load.32     %r1091 <- 92[%r1090]
	scast.64    %r1092 <- (32) %r1091
	mulu.64     %r1093 <- %r1092, $40
	load.32     %r1094 <- 0[newsize]
	scast.64    %r1095 <- (32) %r1094
	mulu.64     %r1096 <- %r1095, $40
	push.64*    %r1086
	push.64*    %r1089
	push.64     %r1093
	push.64     %r1096
	call.64*    %r1097 <- luaM_realloc_
	phisrc.64*  %phi39 <- %r1097
	br          .L218

.L217:
	load.64*    %r1098 <- 0[L]
	push.64*    %r1098
	call.64*    %r1099 <- luaM_toobig
	cast.64*    %r1100 <- (64) %r1099
	phisrc.64*  %phi40 <- %r1100
	br          .L218

.L218:
	phi.64*     %r1101 <- %phi39, %phi40
	ptrcast.64* %r1102 <- (64) %r1101
	load.64*    %r1103 <- 0[L]
	store.64*   %r1102 -> 80[%r1103]
	load.32     %r1104 <- 0[newsize]
	load.64*    %r1105 <- 0[L]
	store.32    %r1104 -> 92[%r1105]
	load.64*    %r1106 <- 0[L]
	load.64*    %r1107 <- 80[%r1106]
	load.64*    %r1108 <- 0[L]
	load.64*    %r1109 <- 40[%r1108]
	load.64*    %r1110 <- 0[oldci]
	sub.64      %r1111 <- %r1109, %r1110
	divs.64     %r1112 <- %r1111, $40
	muls.64     %r1113 <- %r1112, $40
	add.64*     %r1114 <- %r1107, %r1113
	load.64*    %r1115 <- 0[L]
	store.64*   %r1114 -> 40[%r1115]
	load.64*    %r1116 <- 0[L]
	load.64*    %r1117 <- 80[%r1116]
	load.64*    %r1118 <- 0[L]
	load.32     %r1119 <- 92[%r1118]
	scast.64    %r1120 <- (32) %r1119
	muls.64     %r1121 <- %r1120, $40
	add.64*     %r1122 <- %r1117, %r1121
	sub.64*     %r1123 <- %r1122, $40
	load.64*    %r1124 <- 0[L]
	store.64*   %r1123 -> 72[%r1124]
	br          .L219

.L219:
	ret


luaD_growstack:
.L220:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[n]
	load.32     %r1125 <- 0[n]
	load.64*    %r1126 <- 0[L]
	load.32     %r1127 <- 88[%r1126]
	setle.32    %r1128 <- %r1125, %r1127
	br          %r1128, .L221, .L222

.L221:
	load.64*    %r1129 <- 0[L]
	load.64*    %r1130 <- 0[L]
	load.32     %r1131 <- 88[%r1130]
	muls.32     %r1132 <- $2, %r1131
	push.64*    %r1129
	push.32     %r1132
	call        luaD_reallocstack
	br          .L223

.L222:
	load.64*    %r1133 <- 0[L]
	load.64*    %r1134 <- 0[L]
	load.32     %r1135 <- 88[%r1134]
	load.32     %r1136 <- 0[n]
	add.32      %r1137 <- %r1135, %r1136
	push.64*    %r1133
	push.32     %r1137
	call        luaD_reallocstack
	br          .L223

.L223:
	ret


growCI:
.L224:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r1138 <- 0[L]
	load.32     %r1139 <- 92[%r1138]
	setgt.32    %r1140 <- %r1139, $0x4e20
	br          %r1140, .L225, .L226

.L225:
	load.64*    %r1141 <- 0[L]
	push.64*    %r1141
	push.32     $5
	call        luaD_throw
	br          .L227

.L226:
	load.64*    %r1142 <- 0[L]
	load.64*    %r1143 <- 0[L]
	load.32     %r1144 <- 92[%r1143]
	muls.32     %r1145 <- $2, %r1144
	push.64*    %r1142
	push.32     %r1145
	call        luaD_reallocCI
	load.64*    %r1146 <- 0[L]
	load.32     %r1147 <- 92[%r1146]
	setgt.32    %r1148 <- %r1147, $0x4e20
	br          %r1148, .L228, .L229

.L228:
	load.64*    %r1149 <- 0[L]
	symaddr.64* %r1150 <- <anon symbol:0x62d0011c66d0>
	push.64*    %r1149
	push.64*    %r1150
	call        luaG_runerror
	br          .L229

.L229:
	br          .L227

.L227:
	load.64*    %r1151 <- 0[L]
	load.64*    %r1152 <- 40[%r1151]
	add.64*     %r1153 <- %r1152, $40
	store.64*   %r1153 -> 40[%r1151]
	phisrc.64*  %phi41(return) <- %r1153
	br          .L230

.L230:
	phi.64*     %r1154 <- %phi41(return)
	ret.64*     %r1153


adjust_varargs:
.L231:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p]
	store.32    %arg3 -> 0[actual]
	load.64*    %r1155 <- 0[p]
	load.8      %r1156 <- 113[%r1155]
	cast.32     %r1157 <- (8) %r1156
	store.32    %r1157 -> 0[nfixargs]
	store.64*   $0 -> 0[htab]
	br          .L235

.L235:
	load.32     %r1158 <- 0[actual]
	load.32     %r1159 <- 0[nfixargs]
	setlt.32    %r1160 <- %r1158, %r1159
	br          %r1160, .L232, .L234

.L232:
	load.64*    %r1161 <- 0[L]
	load.64*    %r1162 <- 16[%r1161]
	add.64*     %r1163 <- %r1162, $16
	store.64*   %r1163 -> 16[%r1161]
	store.32    $0 -> 8[%r1162]
	br          .L233

.L233:
	load.32     %r1164 <- 0[actual]
	add.32      %r1165 <- %r1164, $1
	store.32    %r1165 -> 0[actual]
	br          .L235

.L234:
	load.64*    %r1166 <- 0[L]
	load.64*    %r1167 <- 16[%r1166]
	load.32     %r1168 <- 0[actual]
	scast.64    %r1169 <- (32) %r1168
	muls.64     %r1170 <- %r1169, $16
	sub.64*     %r1171 <- %r1167, %r1170
	store.64*   %r1171 -> 0[fixed]
	load.64*    %r1172 <- 0[L]
	load.64*    %r1173 <- 16[%r1172]
	store.64*   %r1173 -> 0[base]
	store.32    $0 -> 0[i]
	br          .L239

.L239:
	load.32     %r1174 <- 0[i]
	load.32     %r1175 <- 0[nfixargs]
	setlt.32    %r1176 <- %r1174, %r1175
	br          %r1176, .L236, .L238

.L236:
	load.64*    %r1177 <- 0[fixed]
	load.32     %r1178 <- 0[i]
	scast.64    %r1179 <- (32) %r1178
	muls.64     %r1180 <- %r1179, $16
	add.64*     %r1181 <- %r1177, %r1180
	store.64*   %r1181 -> 0[o2]
	load.64*    %r1182 <- 0[L]
	load.64*    %r1183 <- 16[%r1182]
	add.64*     %r1184 <- %r1183, $16
	store.64*   %r1184 -> 16[%r1182]
	store.64*   %r1183 -> 0[o1]
	load.64*    %r1185 <- 0[o2]
	load.f64    %r1186 <- 0[%r1185]
	fpcast.f64  %r1187 <- (64) %r1186
	load.64*    %r1188 <- 0[o1]
	store.f64   %r1187 -> 0[%r1188]
	load.64*    %r1189 <- 0[o2]
	load.32     %r1190 <- 8[%r1189]
	scast.32    %r1191 <- (32) %r1190
	load.64*    %r1192 <- 0[o1]
	store.32    %r1191 -> 8[%r1192]
	load.64*    %r1193 <- 0[fixed]
	load.32     %r1194 <- 0[i]
	scast.64    %r1195 <- (32) %r1194
	muls.64     %r1196 <- %r1195, $16
	add.64*     %r1197 <- %r1193, %r1196
	store.32    $0 -> 8[%r1197]
	br          .L237

.L237:
	load.32     %r1198 <- 0[i]
	add.32      %r1199 <- %r1198, $1
	store.32    %r1199 -> 0[i]
	br          .L239

.L238:
	br          .L241

.L241:
	load.64*    %r1205 <- 0[base]
	phisrc.64*  %phi42(return) <- %r1205
	br          .L242

.L242:
	phi.64*     %r1206 <- %phi42(return)
	ret.64*     %r1205


tryfuncTM:
.L243:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	load.64*    %r1207 <- 0[L]
	load.64*    %r1208 <- 0[func]
	push.64*    %r1207
	push.64*    %r1208
	push.32     $16
	call.64*    %r1209 <- luaT_gettmbyobj
	store.64*   %r1209 -> 0[tm]
	load.64*    %r1210 <- 0[func]
	ptrcast.64* %r1211 <- (64) %r1210
	load.64*    %r1212 <- 0[L]
	load.64*    %r1213 <- 64[%r1212]
	ptrcast.64* %r1214 <- (64) %r1213
	sub.64      %r1215 <- %r1211, %r1214
	store.64    %r1215 -> 0[funcr]
	load.64*    %r1216 <- 0[tm]
	load.32     %r1217 <- 8[%r1216]
	scast.32    %r1218 <- (32) %r1217
	seteq.32    %r1219 <- %r1218, $6
	br          %r1219, .L245, .L244

.L244:
	load.64*    %r1220 <- 0[L]
	load.64*    %r1221 <- 0[func]
	symaddr.64* %r1222 <- <anon symbol:0x62d0011c82e8>
	push.64*    %r1220
	push.64*    %r1221
	push.64*    %r1222
	call        luaG_typeerror
	br          .L245

.L245:
	load.64*    %r1223 <- 0[L]
	load.64*    %r1224 <- 16[%r1223]
	store.64*   %r1224 -> 0[p]
	br          .L249

.L249:
	load.64*    %r1225 <- 0[p]
	load.64*    %r1226 <- 0[func]
	seta.32     %r1227 <- %r1225, %r1226
	br          %r1227, .L246, .L248

.L246:
	load.64*    %r1228 <- 0[p]
	sub.64*     %r1229 <- %r1228, $16
	store.64*   %r1229 -> 0[o2]
	load.64*    %r1230 <- 0[p]
	store.64*   %r1230 -> 0[o1]
	load.64*    %r1231 <- 0[o2]
	load.f64    %r1232 <- 0[%r1231]
	fpcast.f64  %r1233 <- (64) %r1232
	load.64*    %r1234 <- 0[o1]
	store.f64   %r1233 -> 0[%r1234]
	load.64*    %r1235 <- 0[o2]
	load.32     %r1236 <- 8[%r1235]
	scast.32    %r1237 <- (32) %r1236
	load.64*    %r1238 <- 0[o1]
	store.32    %r1237 -> 8[%r1238]
	br          .L247

.L247:
	load.64*    %r1239 <- 0[p]
	sub.64*     %r1240 <- %r1239, $16
	store.64*   %r1240 -> 0[p]
	br          .L249

.L248:
	load.64*    %r1241 <- 0[L]
	load.64*    %r1242 <- 56[%r1241]
	ptrcast.64* %r1243 <- (64) %r1242
	load.64*    %r1244 <- 0[L]
	load.64*    %r1245 <- 16[%r1244]
	ptrcast.64* %r1246 <- (64) %r1245
	sub.64      %r1247 <- %r1243, %r1246
	setle.32    %r1248 <- %r1247, $16
	br          %r1248, .L250, .L251

.L250:
	load.64*    %r1249 <- 0[L]
	push.64*    %r1249
	push.32     $1
	call        luaD_growstack
	br          .L252

.L251:
	br          .L252

.L252:
	load.64*    %r1250 <- 0[L]
	load.64*    %r1251 <- 16[%r1250]
	add.64*     %r1252 <- %r1251, $16
	store.64*   %r1252 -> 16[%r1250]
	load.64*    %r1253 <- 0[L]
	load.64*    %r1254 <- 64[%r1253]
	ptrcast.64* %r1255 <- (64) %r1254
	load.64     %r1256 <- 0[funcr]
	add.64*     %r1257 <- %r1255, %r1256
	ptrcast.64* %r1258 <- (64) %r1257
	store.64*   %r1258 -> 0[func]
	load.64*    %r1259 <- 0[tm]
	store.64*   %r1259 -> 0[o2]
	load.64*    %r1260 <- 0[func]
	store.64*   %r1260 -> 0[o1]
	load.64*    %r1261 <- 0[o2]
	load.f64    %r1262 <- 0[%r1261]
	fpcast.f64  %r1263 <- (64) %r1262
	load.64*    %r1264 <- 0[o1]
	store.f64   %r1263 -> 0[%r1264]
	load.64*    %r1265 <- 0[o2]
	load.32     %r1266 <- 8[%r1265]
	scast.32    %r1267 <- (32) %r1266
	load.64*    %r1268 <- 0[o1]
	store.32    %r1267 -> 8[%r1268]
	load.64*    %r1269 <- 0[func]
	phisrc.64*  %phi43(return) <- %r1269
	br          .L253

.L253:
	phi.64*     %r1270 <- %phi43(return)
	ret.64*     %r1269


luaD_precall:
.L254:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r1271 <- 0[func]
	load.32     %r1272 <- 8[%r1271]
	seteq.32    %r1273 <- %r1272, $6
	br          %r1273, .L256, .L255

.L255:
	load.64*    %r1274 <- 0[L]
	load.64*    %r1275 <- 0[func]
	push.64*    %r1274
	push.64*    %r1275
	call.64*    %r1276 <- tryfuncTM
	store.64*   %r1276 -> 0[func]
	br          .L256

.L256:
	load.64*    %r1277 <- 0[func]
	ptrcast.64* %r1278 <- (64) %r1277
	load.64*    %r1279 <- 0[L]
	load.64*    %r1280 <- 64[%r1279]
	ptrcast.64* %r1281 <- (64) %r1280
	sub.64      %r1282 <- %r1278, %r1281
	store.64    %r1282 -> 0[funcr]
	load.64*    %r1283 <- 0[func]
	load.64*    %r1284 <- 0[%r1283]
	add.64*     %r1285 <- %r1284, $0
	add.64*     %r1286 <- %r1285, $0
	store.64*   %r1286 -> 0[cl]
	load.64*    %r1287 <- 0[L]
	load.64*    %r1288 <- 48[%r1287]
	load.64*    %r1289 <- 0[L]
	load.64*    %r1290 <- 40[%r1289]
	store.64*   %r1288 -> 24[%r1290]
	load.64*    %r1291 <- 0[cl]
	load.8      %r1292 <- 10[%r1291]
	br          %r1292, .L258, .L257

.L257:
	load.64*    %r1293 <- 0[cl]
	load.64*    %r1294 <- 32[%r1293]
	store.64*   %r1294 -> 0[p]
	load.64*    %r1295 <- 0[L]
	load.64*    %r1296 <- 56[%r1295]
	ptrcast.64* %r1297 <- (64) %r1296
	load.64*    %r1298 <- 0[L]
	load.64*    %r1299 <- 16[%r1298]
	ptrcast.64* %r1300 <- (64) %r1299
	sub.64      %r1301 <- %r1297, %r1300
	load.64*    %r1302 <- 0[p]
	load.8      %r1303 <- 115[%r1302]
	cast.32     %r1304 <- (8) %r1303
	muls.32     %r1305 <- %r1304, $16
	scast.64    %r1306 <- (32) %r1305
	setle.32    %r1307 <- %r1301, %r1306
	br          %r1307, .L259, .L260

.L259:
	load.64*    %r1308 <- 0[L]
	load.64*    %r1309 <- 0[p]
	load.8      %r1310 <- 115[%r1309]
	cast.32     %r1311 <- (8) %r1310
	push.64*    %r1308
	push.32     %r1311
	call        luaD_growstack
	br          .L261

.L260:
	br          .L261

.L261:
	load.64*    %r1312 <- 0[L]
	load.64*    %r1313 <- 64[%r1312]
	ptrcast.64* %r1314 <- (64) %r1313
	load.64     %r1315 <- 0[funcr]
	add.64*     %r1316 <- %r1314, %r1315
	ptrcast.64* %r1317 <- (64) %r1316
	store.64*   %r1317 -> 0[func]
	load.64*    %r1318 <- 0[p]
	load.8      %r1319 <- 114[%r1318]
	br          %r1319, .L263, .L262

.L262:
	load.64*    %r1320 <- 0[func]
	add.64*     %r1321 <- %r1320, $16
	store.64*   %r1321 -> 0[base]
	load.64*    %r1322 <- 0[L]
	load.64*    %r1323 <- 16[%r1322]
	load.64*    %r1324 <- 0[base]
	load.64*    %r1325 <- 0[p]
	load.8      %r1326 <- 113[%r1325]
	cast.64     %r1327 <- (8) %r1326
	muls.64     %r1328 <- %r1327, $16
	add.64*     %r1329 <- %r1324, %r1328
	seta.32     %r1330 <- %r1323, %r1329
	br          %r1330, .L264, .L265

.L264:
	load.64*    %r1331 <- 0[base]
	load.64*    %r1332 <- 0[p]
	load.8      %r1333 <- 113[%r1332]
	cast.64     %r1334 <- (8) %r1333
	muls.64     %r1335 <- %r1334, $16
	add.64*     %r1336 <- %r1331, %r1335
	load.64*    %r1337 <- 0[L]
	store.64*   %r1336 -> 16[%r1337]
	br          .L265

.L265:
	br          .L266

.L263:
	load.64*    %r1338 <- 0[L]
	load.64*    %r1339 <- 16[%r1338]
	load.64*    %r1340 <- 0[func]
	sub.64      %r1341 <- %r1339, %r1340
	divs.64     %r1342 <- %r1341, $16
	scast.32    %r1343 <- (64) %r1342
	sub.32      %r1344 <- %r1343, $1
	store.32    %r1344 -> 0[nargs]
	load.64*    %r1345 <- 0[L]
	load.64*    %r1346 <- 0[p]
	load.32     %r1347 <- 0[nargs]
	push.64*    %r1345
	push.64*    %r1346
	push.32     %r1347
	call.64*    %r1348 <- adjust_varargs
	store.64*   %r1348 -> 0[base]
	load.64*    %r1349 <- 0[L]
	load.64*    %r1350 <- 64[%r1349]
	ptrcast.64* %r1351 <- (64) %r1350
	load.64     %r1352 <- 0[funcr]
	add.64*     %r1353 <- %r1351, %r1352
	ptrcast.64* %r1354 <- (64) %r1353
	store.64*   %r1354 -> 0[func]
	br          .L266

.L266:
	load.64*    %r1355 <- 0[L]
	load.64*    %r1356 <- 40[%r1355]
	load.64*    %r1357 <- 0[L]
	load.64*    %r1358 <- 72[%r1357]
	seteq.32    %r1359 <- %r1356, %r1358
	br          %r1359, .L267, .L268

.L267:
	load.64*    %r1360 <- 0[L]
	push.64*    %r1360
	call.64*    %r1361 <- growCI
	phisrc.64*  %phi44 <- %r1361
	br          .L269

.L268:
	load.64*    %r1362 <- 0[L]
	load.64*    %r1363 <- 40[%r1362]
	add.64*     %r1364 <- %r1363, $40
	store.64*   %r1364 -> 40[%r1362]
	ptrcast.64* %r1365 <- (64) %r1364
	phisrc.64*  %phi45 <- %r1365
	br          .L269

.L269:
	phi.64*     %r1366 <- %phi44, %phi45
	store.64*   %r1366 -> 0[ci]
	load.64*    %r1367 <- 0[func]
	load.64*    %r1368 <- 0[ci]
	store.64*   %r1367 -> 8[%r1368]
	load.64*    %r1369 <- 0[base]
	load.64*    %r1370 <- 0[ci]
	store.64*   %r1369 -> 0[%r1370]
	load.64*    %r1371 <- 0[L]
	store.64*   %r1369 -> 24[%r1371]
	load.64*    %r1372 <- 0[L]
	load.64*    %r1373 <- 24[%r1372]
	load.64*    %r1374 <- 0[p]
	load.8      %r1375 <- 115[%r1374]
	cast.64     %r1376 <- (8) %r1375
	muls.64     %r1377 <- %r1376, $16
	add.64*     %r1378 <- %r1373, %r1377
	load.64*    %r1379 <- 0[ci]
	store.64*   %r1378 -> 16[%r1379]
	load.64*    %r1380 <- 0[p]
	load.64*    %r1381 <- 24[%r1380]
	load.64*    %r1382 <- 0[L]
	store.64*   %r1381 -> 48[%r1382]
	load.64*    %r1383 <- 0[ci]
	store.32    $0 -> 36[%r1383]
	load.32     %r1384 <- 0[nresults]
	load.64*    %r1385 <- 0[ci]
	store.32    %r1384 -> 32[%r1385]
	load.64*    %r1386 <- 0[L]
	load.64*    %r1387 <- 16[%r1386]
	store.64*   %r1387 -> 0[st]
	br          .L273

.L273:
	load.64*    %r1388 <- 0[st]
	load.64*    %r1389 <- 0[ci]
	load.64*    %r1390 <- 16[%r1389]
	setb.32     %r1391 <- %r1388, %r1390
	br          %r1391, .L270, .L272

.L270:
	load.64*    %r1392 <- 0[st]
	store.32    $0 -> 8[%r1392]
	br          .L271

.L271:
	load.64*    %r1393 <- 0[st]
	add.64*     %r1394 <- %r1393, $16
	store.64*   %r1394 -> 0[st]
	br          .L273

.L272:
	load.64*    %r1395 <- 0[ci]
	load.64*    %r1396 <- 16[%r1395]
	load.64*    %r1397 <- 0[L]
	store.64*   %r1396 -> 16[%r1397]
	phisrc.32   %phi46(return) <- $0
	br          .L274

.L258:
	load.64*    %r1399 <- 0[L]
	load.64*    %r1400 <- 56[%r1399]
	ptrcast.64* %r1401 <- (64) %r1400
	load.64*    %r1402 <- 0[L]
	load.64*    %r1403 <- 16[%r1402]
	ptrcast.64* %r1404 <- (64) %r1403
	sub.64      %r1405 <- %r1401, %r1404
	setle.32    %r1406 <- %r1405, $320
	br          %r1406, .L276, .L277

.L276:
	load.64*    %r1407 <- 0[L]
	push.64*    %r1407
	push.32     $20
	call        luaD_growstack
	br          .L278

.L277:
	br          .L278

.L278:
	load.64*    %r1408 <- 0[L]
	load.64*    %r1409 <- 40[%r1408]
	load.64*    %r1410 <- 0[L]
	load.64*    %r1411 <- 72[%r1410]
	seteq.32    %r1412 <- %r1409, %r1411
	br          %r1412, .L279, .L280

.L279:
	load.64*    %r1413 <- 0[L]
	push.64*    %r1413
	call.64*    %r1414 <- growCI
	phisrc.64*  %phi47 <- %r1414
	br          .L281

.L280:
	load.64*    %r1415 <- 0[L]
	load.64*    %r1416 <- 40[%r1415]
	add.64*     %r1417 <- %r1416, $40
	store.64*   %r1417 -> 40[%r1415]
	ptrcast.64* %r1418 <- (64) %r1417
	phisrc.64*  %phi48 <- %r1418
	br          .L281

.L281:
	phi.64*     %r1419 <- %phi47, %phi48
	store.64*   %r1419 -> 0[ci]
	load.64*    %r1420 <- 0[L]
	load.64*    %r1421 <- 64[%r1420]
	ptrcast.64* %r1422 <- (64) %r1421
	load.64     %r1423 <- 0[funcr]
	add.64*     %r1424 <- %r1422, %r1423
	ptrcast.64* %r1425 <- (64) %r1424
	load.64*    %r1426 <- 0[ci]
	store.64*   %r1425 -> 8[%r1426]
	load.64*    %r1427 <- 0[ci]
	load.64*    %r1428 <- 8[%r1427]
	add.64*     %r1429 <- %r1428, $16
	load.64*    %r1430 <- 0[ci]
	store.64*   %r1429 -> 0[%r1430]
	load.64*    %r1431 <- 0[L]
	store.64*   %r1429 -> 24[%r1431]
	load.64*    %r1432 <- 0[L]
	load.64*    %r1433 <- 16[%r1432]
	add.64*     %r1434 <- %r1433, $320
	load.64*    %r1435 <- 0[ci]
	store.64*   %r1434 -> 16[%r1435]
	load.32     %r1436 <- 0[nresults]
	load.64*    %r1437 <- 0[ci]
	store.32    %r1436 -> 32[%r1437]
	load.64*    %r1438 <- 0[L]
	push.64*    %r1438
	load.64*    %r1439 <- 0[L]
	load.64*    %r1440 <- 40[%r1439]
	load.64*    %r1441 <- 8[%r1440]
	load.64*    %r1442 <- 0[%r1441]
	load.64*    %r1443 <- 32[%r1442]
	call.32     %r1444 <- %r1443
	store.32    %r1444 -> 0[n]
	load.32     %r1445 <- 0[n]
	setlt.32    %r1446 <- %r1445, $0
	br          %r1446, .L282, .L283

.L282:
	phisrc.32   %phi49(return) <- $2
	br          .L274

.L283:
	load.64*    %r1447 <- 0[L]
	load.64*    %r1448 <- 0[L]
	load.64*    %r1449 <- 16[%r1448]
	load.32     %r1450 <- 0[n]
	scast.64    %r1451 <- (32) %r1450
	muls.64     %r1452 <- %r1451, $16
	sub.64*     %r1453 <- %r1449, %r1452
	push.64*    %r1447
	push.64*    %r1453
	call.32     %r1454 <- luaD_poscall
	phisrc.32   %phi50(return) <- $1
	br          .L274

.L274:
	phi.32      %r1398 <- %phi46(return), %phi49(return), %phi50(return)
	ret.32      %r1398


luaD_poscall:
.L285:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[firstResult]
	load.64*    %r1455 <- 0[L]
	load.64*    %r1456 <- 40[%r1455]
	sub.64*     %r1457 <- %r1456, $40
	store.64*   %r1457 -> 40[%r1455]
	store.64*   %r1456 -> 0[ci]
	load.64*    %r1458 <- 0[ci]
	load.64*    %r1459 <- 8[%r1458]
	store.64*   %r1459 -> 0[res]
	load.64*    %r1460 <- 0[ci]
	load.32     %r1461 <- 32[%r1460]
	store.32    %r1461 -> 0[wanted]
	load.64*    %r1462 <- 0[ci]
	sub.64*     %r1463 <- %r1462, $40
	load.64*    %r1464 <- 0[%r1463]
	load.64*    %r1465 <- 0[L]
	store.64*   %r1464 -> 24[%r1465]
	load.64*    %r1466 <- 0[ci]
	sub.64*     %r1467 <- %r1466, $40
	load.64*    %r1468 <- 24[%r1467]
	load.64*    %r1469 <- 0[L]
	store.64*   %r1468 -> 48[%r1469]
	load.32     %r1470 <- 0[wanted]
	store.32    %r1470 -> 0[i]
	br          .L289

.L289:
	load.32     %r1471 <- 0[i]
	setne.32    %r1472 <- %r1471, $0
	br          %r1472, .L290, .L288

.L290:
	load.64*    %r1473 <- 0[firstResult]
	load.64*    %r1474 <- 0[L]
	load.64*    %r1475 <- 16[%r1474]
	setb.32     %r1476 <- %r1473, %r1475
	br          %r1476, .L286, .L288

.L286:
	load.64*    %r1477 <- 0[firstResult]
	add.64*     %r1478 <- %r1477, $16
	store.64*   %r1478 -> 0[firstResult]
	store.64*   %r1477 -> 0[o2]
	load.64*    %r1479 <- 0[res]
	add.64*     %r1480 <- %r1479, $16
	store.64*   %r1480 -> 0[res]
	store.64*   %r1479 -> 0[o1]
	load.64*    %r1481 <- 0[o2]
	load.f64    %r1482 <- 0[%r1481]
	fpcast.f64  %r1483 <- (64) %r1482
	load.64*    %r1484 <- 0[o1]
	store.f64   %r1483 -> 0[%r1484]
	load.64*    %r1485 <- 0[o2]
	load.32     %r1486 <- 8[%r1485]
	scast.32    %r1487 <- (32) %r1486
	load.64*    %r1488 <- 0[o1]
	store.32    %r1487 -> 8[%r1488]
	br          .L287

.L287:
	load.32     %r1489 <- 0[i]
	sub.32      %r1490 <- %r1489, $1
	store.32    %r1490 -> 0[i]
	br          .L289

.L288:
	br          .L294

.L294:
	load.32     %r1491 <- 0[i]
	sub.32      %r1492 <- %r1491, $1
	store.32    %r1492 -> 0[i]
	setgt.32    %r1493 <- %r1491, $0
	br          %r1493, .L291, .L293

.L291:
	load.64*    %r1494 <- 0[res]
	add.64*     %r1495 <- %r1494, $16
	store.64*   %r1495 -> 0[res]
	store.32    $0 -> 8[%r1494]
	br          .L292

.L292:
	br          .L294

.L293:
	load.64*    %r1496 <- 0[res]
	load.64*    %r1497 <- 0[L]
	store.64*   %r1496 -> 16[%r1497]
	load.32     %r1498 <- 0[wanted]
	sub.32      %r1499 <- %r1498, $0xffffffff
	phisrc.32   %phi51(return) <- %r1499
	br          .L295

.L295:
	phi.32      %r1500 <- %phi51(return)
	ret.32      %r1499


luaD_call:
.L296:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.32    %arg3 -> 0[nResults]
	load.64*    %r1501 <- 0[L]
	load.16     %r1502 <- 96[%r1501]
	add.16      %r1503 <- %r1502, $1
	store.16    %r1503 -> 96[%r1501]
	cast.32     %r1504 <- (16) %r1503
	setge.32    %r1505 <- %r1504, $200
	br          %r1505, .L297, .L298

.L297:
	load.64*    %r1506 <- 0[L]
	load.16     %r1507 <- 96[%r1506]
	cast.32     %r1508 <- (16) %r1507
	seteq.32    %r1509 <- %r1508, $200
	br          %r1509, .L299, .L300

.L299:
	load.64*    %r1510 <- 0[L]
	symaddr.64* %r1511 <- <anon symbol:0x62d0011dac40>
	push.64*    %r1510
	push.64*    %r1511
	call        luaG_runerror
	br          .L301

.L300:
	load.64*    %r1512 <- 0[L]
	load.16     %r1513 <- 96[%r1512]
	cast.32     %r1514 <- (16) %r1513
	setge.32    %r1515 <- %r1514, $225
	br          %r1515, .L302, .L303

.L302:
	load.64*    %r1516 <- 0[L]
	push.64*    %r1516
	push.32     $5
	call        luaD_throw
	br          .L303

.L303:
	br          .L301

.L301:
	br          .L298

.L298:
	load.64*    %r1517 <- 0[L]
	load.64*    %r1518 <- 0[func]
	load.32     %r1519 <- 0[nResults]
	push.64*    %r1517
	push.64*    %r1518
	push.32     %r1519
	call.32     %r1520 <- luaD_precall
	seteq.32    %r1521 <- %r1520, $0
	br          %r1521, .L304, .L305

.L304:
	load.64*    %r1522 <- 0[L]
	push.64*    %r1522
	push.32     $1
	call        luaV_execute
	br          .L305

.L305:
	load.64*    %r1523 <- 0[L]
	load.16     %r1524 <- 96[%r1523]
	sub.16      %r1525 <- %r1524, $1
	store.16    %r1525 -> 96[%r1523]
	load.64*    %r1526 <- 0[L]
	load.64*    %r1527 <- 32[%r1526]
	load.64     %r1528 <- 120[%r1527]
	load.64*    %r1529 <- 0[L]
	load.64*    %r1530 <- 32[%r1529]
	load.64     %r1531 <- 112[%r1530]
	setae.32    %r1532 <- %r1528, %r1531
	br          %r1532, .L306, .L307

.L306:
	load.64*    %r1533 <- 0[L]
	push.64*    %r1533
	call        luaC_step
	br          .L307

.L307:
	ret


luaD_pcall:
.L308:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.64*   %arg3 -> 0[u]
	store.64    %arg4 -> 0[old_top]
	store.64    %arg5 -> 0[ef]
	load.64*    %r1534 <- 0[L]
	load.16     %r1535 <- 96[%r1534]
	store.16    %r1535 -> 0[oldnCcalls]
	load.64*    %r1536 <- 0[L]
	load.64*    %r1537 <- 40[%r1536]
	ptrcast.64* %r1538 <- (64) %r1537
	load.64*    %r1539 <- 0[L]
	load.64*    %r1540 <- 80[%r1539]
	ptrcast.64* %r1541 <- (64) %r1540
	sub.64      %r1542 <- %r1538, %r1541
	store.64    %r1542 -> 0[old_ci]
	load.64*    %r1543 <- 0[L]
	load.8      %r1544 <- 101[%r1543]
	store.8     %r1544 -> 0[old_allowhooks]
	load.64*    %r1545 <- 0[L]
	load.64     %r1546 <- 176[%r1545]
	store.64    %r1546 -> 0[old_errfunc]
	load.64     %r1547 <- 0[ef]
	load.64*    %r1548 <- 0[L]
	store.64    %r1547 -> 176[%r1548]
	load.64*    %r1549 <- 0[L]
	load.64*    %r1550 <- 0[func]
	load.64*    %r1551 <- 0[u]
	push.64*    %r1549
	push.64*    %r1550
	push.64*    %r1551
	call.32     %r1552 <- luaD_rawrunprotected
	store.32    %r1552 -> 0[status]
	load.32     %r1553 <- 0[status]
	setne.32    %r1554 <- %r1553, $0
	br          %r1554, .L309, .L310

.L309:
	load.64*    %r1555 <- 0[L]
	load.64*    %r1556 <- 64[%r1555]
	ptrcast.64* %r1557 <- (64) %r1556
	load.64     %r1558 <- 0[old_top]
	add.64*     %r1559 <- %r1557, %r1558
	ptrcast.64* %r1560 <- (64) %r1559
	store.64*   %r1560 -> 0[oldtop]
	load.64*    %r1561 <- 0[L]
	load.64*    %r1562 <- 0[oldtop]
	push.64*    %r1561
	push.64*    %r1562
	call        luaF_close
	load.64*    %r1563 <- 0[L]
	load.32     %r1564 <- 0[status]
	load.64*    %r1565 <- 0[oldtop]
	push.64*    %r1563
	push.32     %r1564
	push.64*    %r1565
	call        luaD_seterrorobj
	load.16     %r1566 <- 0[oldnCcalls]
	load.64*    %r1567 <- 0[L]
	store.16    %r1566 -> 96[%r1567]
	load.64*    %r1568 <- 0[L]
	load.64*    %r1569 <- 80[%r1568]
	ptrcast.64* %r1570 <- (64) %r1569
	load.64     %r1571 <- 0[old_ci]
	add.64*     %r1572 <- %r1570, %r1571
	ptrcast.64* %r1573 <- (64) %r1572
	load.64*    %r1574 <- 0[L]
	store.64*   %r1573 -> 40[%r1574]
	load.64*    %r1575 <- 0[L]
	load.64*    %r1576 <- 40[%r1575]
	load.64*    %r1577 <- 0[%r1576]
	load.64*    %r1578 <- 0[L]
	store.64*   %r1577 -> 24[%r1578]
	load.64*    %r1579 <- 0[L]
	load.64*    %r1580 <- 40[%r1579]
	load.64*    %r1581 <- 24[%r1580]
	load.64*    %r1582 <- 0[L]
	store.64*   %r1581 -> 48[%r1582]
	load.8      %r1583 <- 0[old_allowhooks]
	load.64*    %r1584 <- 0[L]
	store.8     %r1583 -> 101[%r1584]
	load.64*    %r1585 <- 0[L]
	push.64*    %r1585
	call        restore_stack_limit
	br          .L310

.L310:
	load.64     %r1586 <- 0[old_errfunc]
	load.64*    %r1587 <- 0[L]
	store.64    %r1586 -> 176[%r1587]
	load.32     %r1588 <- 0[status]
	phisrc.32   %phi52(return) <- %r1588
	br          .L311

.L311:
	phi.32      %r1589 <- %phi52(return)
	ret.32      %r1588


f_parser:
.L312:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r1590 <- 0[ud]
	ptrcast.64* %r1591 <- (64) %r1590
	store.64*   %r1591 -> 0[p]
	load.64*    %r1592 <- 0[L]
	load.64*    %r1593 <- 32[%r1592]
	load.64     %r1594 <- 120[%r1593]
	load.64*    %r1595 <- 0[L]
	load.64*    %r1596 <- 32[%r1595]
	load.64     %r1597 <- 112[%r1596]
	setae.32    %r1598 <- %r1594, %r1597
	br          %r1598, .L313, .L314

.L313:
	load.64*    %r1599 <- 0[L]
	push.64*    %r1599
	call        luaC_step
	br          .L314

.L314:
	load.64*    %r1600 <- 0[L]
	load.64*    %r1601 <- 0[p]
	load.64*    %r1602 <- 0[%r1601]
	load.64*    %r1603 <- 0[p]
	add.64*     %r1604 <- %r1603, $8
	load.64*    %r1605 <- 0[p]
	load.64*    %r1606 <- 32[%r1605]
	push.64*    %r1600
	push.64*    %r1602
	push.64*    %r1604
	push.64*    %r1606
	call.64*    %r1607 <- luaY_parser
	store.64*   %r1607 -> 0[tf]
	load.64*    %r1608 <- 0[L]
	load.64*    %r1609 <- 0[tf]
	load.8      %r1610 <- 112[%r1609]
	cast.32     %r1611 <- (8) %r1610
	load.64*    %r1612 <- 0[L]
	load.64*    %r1613 <- 120[%r1612]
	add.64*     %r1614 <- %r1613, $0
	push.64*    %r1608
	push.32     %r1611
	push.64*    %r1614
	call.64*    %r1615 <- luaF_newLclosure
	store.64*   %r1615 -> 0[cl]
	load.64*    %r1616 <- 0[tf]
	load.64*    %r1617 <- 0[cl]
	store.64*   %r1616 -> 32[%r1617]
	store.32    $0 -> 0[i]
	br          .L318

.L318:
	load.32     %r1618 <- 0[i]
	load.64*    %r1619 <- 0[tf]
	load.8      %r1620 <- 112[%r1619]
	cast.32     %r1621 <- (8) %r1620
	setlt.32    %r1622 <- %r1618, %r1621
	br          %r1622, .L315, .L317

.L315:
	load.64*    %r1623 <- 0[L]
	push.64*    %r1623
	call.64*    %r1624 <- luaF_newupval
	load.64*    %r1625 <- 0[cl]
	add.64*     %r1626 <- %r1625, $0
	add.64*     %r1627 <- %r1626, $40
	load.32     %r1628 <- 0[i]
	scast.64    %r1629 <- (32) %r1628
	muls.64     %r1630 <- %r1629, $8
	add.64*     %r1631 <- %r1627, %r1630
	store.64*   %r1624 -> 0[%r1631]
	br          .L316

.L316:
	load.32     %r1632 <- 0[i]
	add.32      %r1633 <- %r1632, $1
	store.32    %r1633 -> 0[i]
	br          .L318

.L317:
	load.64*    %r1634 <- 0[L]
	load.64*    %r1635 <- 16[%r1634]
	store.64*   %r1635 -> 0[i_o]
	load.64*    %r1636 <- 0[cl]
	ptrcast.64* %r1637 <- (64) %r1636
	load.64*    %r1638 <- 0[i_o]
	store.64*   %r1637 -> 0[%r1638]
	load.64*    %r1639 <- 0[i_o]
	store.32    $6 -> 8[%r1639]
	load.64*    %r1640 <- 0[L]
	load.64*    %r1641 <- 56[%r1640]
	ptrcast.64* %r1642 <- (64) %r1641
	load.64*    %r1643 <- 0[L]
	load.64*    %r1644 <- 16[%r1643]
	ptrcast.64* %r1645 <- (64) %r1644
	sub.64      %r1646 <- %r1642, %r1645
	setle.32    %r1647 <- %r1646, $16
	br          %r1647, .L319, .L320

.L319:
	load.64*    %r1648 <- 0[L]
	push.64*    %r1648
	push.32     $1
	call        luaD_growstack
	br          .L321

.L320:
	br          .L321

.L321:
	load.64*    %r1649 <- 0[L]
	load.64*    %r1650 <- 16[%r1649]
	add.64*     %r1651 <- %r1650, $16
	store.64*   %r1651 -> 16[%r1649]
	br          .L322

.L322:
	ret


luaD_protectedparser:
.L323:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[name]
	load.64*    %r1652 <- 0[z]
	store.64*   %r1652 -> 0[p]
	load.64*    %r1653 <- 0[name]
	store.64*   %r1653 -> 32[p]
	store.64*   $0 -> 8[p]
	store.64    $0 -> 24[p]
	load.64*    %r1654 <- 0[L]
	symaddr.64* %r1655 <- f_parser
	symaddr.64* %r1656 <- p
	cast.64*    %r1657 <- (64) %r1656
	load.64*    %r1658 <- 0[L]
	load.64*    %r1659 <- 16[%r1658]
	ptrcast.64* %r1660 <- (64) %r1659
	load.64*    %r1661 <- 0[L]
	load.64*    %r1662 <- 64[%r1661]
	ptrcast.64* %r1663 <- (64) %r1662
	sub.64      %r1664 <- %r1660, %r1663
	load.64*    %r1665 <- 0[L]
	load.64     %r1666 <- 176[%r1665]
	push.64*    %r1654
	push.64*    %r1655
	push.64*    %r1657
	push.64     %r1664
	push.64     %r1666
	call.32     %r1667 <- luaD_pcall
	store.32    %r1667 -> 0[status]
	load.64*    %r1668 <- 0[L]
	load.64*    %r1669 <- 8[p]
	cast.64*    %r1670 <- (64) %r1669
	load.64     %r1671 <- 24[p]
	mulu.64     %r1672 <- %r1671, $1
	push.64*    %r1668
	push.64*    %r1670
	push.64     %r1672
	push.64     $0
	call.64*    %r1673 <- luaM_realloc_
	ptrcast.64* %r1674 <- (64) %r1673
	store.64*   %r1674 -> 8[p]
	store.64    $0 -> 24[p]
	load.32     %r1675 <- 0[status]
	phisrc.32   %phi53(return) <- %r1675
	br          .L324

.L324:
	phi.32      %r1676 <- %phi53(return)
	ret.32      %r1675


luaS_resize:
.L325:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r1677 <- 0[L]
	load.64*    %r1678 <- 32[%r1677]
	load.8      %r1679 <- 33[%r1678]
	cast.32     %r1680 <- (8) %r1679
	seteq.32    %r1681 <- %r1680, $2
	br          %r1681, .L326, .L327

.L326:
	br          .L328

.L327:
	load.32     %r1682 <- 0[newsize]
	add.32      %r1683 <- %r1682, $1
	scast.64    %r1684 <- (32) %r1683
	setbe.32    %r1685 <- %r1684, $0x1fffffffffffffff
	br          %r1685, .L329, .L330

.L329:
	load.64*    %r1686 <- 0[L]
	load.32     %r1687 <- 0[newsize]
	scast.64    %r1688 <- (32) %r1687
	mulu.64     %r1689 <- %r1688, $8
	push.64*    %r1686
	push.64*    $0
	push.64     $0
	push.64     %r1689
	call.64*    %r1690 <- luaM_realloc_
	phisrc.64*  %phi54 <- %r1690
	br          .L331

.L330:
	load.64*    %r1691 <- 0[L]
	push.64*    %r1691
	call.64*    %r1692 <- luaM_toobig
	cast.64*    %r1693 <- (64) %r1692
	phisrc.64*  %phi55 <- %r1693
	br          .L331

.L331:
	phi.64*     %r1694 <- %phi54, %phi55
	ptrcast.64* %r1695 <- (64) %r1694
	store.64*   %r1695 -> 0[newhash]
	load.64*    %r1696 <- 0[L]
	load.64*    %r1697 <- 32[%r1696]
	add.64*     %r1698 <- %r1697, $0
	store.64*   %r1698 -> 0[tb]
	store.32    $0 -> 0[i]
	br          .L335

.L335:
	load.32     %r1699 <- 0[i]
	load.32     %r1700 <- 0[newsize]
	setlt.32    %r1701 <- %r1699, %r1700
	br          %r1701, .L332, .L334

.L332:
	load.64*    %r1702 <- 0[newhash]
	load.32     %r1703 <- 0[i]
	scast.64    %r1704 <- (32) %r1703
	muls.64     %r1705 <- %r1704, $8
	add.64*     %r1706 <- %r1702, %r1705
	store.64*   $0 -> 0[%r1706]
	br          .L333

.L333:
	load.32     %r1707 <- 0[i]
	add.32      %r1708 <- %r1707, $1
	store.32    %r1708 -> 0[i]
	br          .L335

.L334:
	store.32    $0 -> 0[i]
	br          .L339

.L339:
	load.32     %r1709 <- 0[i]
	load.64*    %r1710 <- 0[tb]
	load.32     %r1711 <- 12[%r1710]
	setlt.32    %r1712 <- %r1709, %r1711
	br          %r1712, .L336, .L338

.L336:
	load.64*    %r1713 <- 0[tb]
	load.64*    %r1714 <- 0[%r1713]
	load.32     %r1715 <- 0[i]
	scast.64    %r1716 <- (32) %r1715
	muls.64     %r1717 <- %r1716, $8
	add.64*     %r1718 <- %r1714, %r1717
	load.64*    %r1719 <- 0[%r1718]
	store.64*   %r1719 -> 0[p]
	br          .L343

.L343:
	load.64*    %r1720 <- 0[p]
	br          %r1720, .L340, .L342

.L340:
	load.64*    %r1721 <- 0[p]
	load.64*    %r1722 <- 0[%r1721]
	store.64*   %r1722 -> 0[next]
	load.64*    %r1723 <- 0[p]
	load.32     %r1724 <- 12[%r1723]
	store.32    %r1724 -> 0[h]
	load.32     %r1725 <- 0[h]
	load.32     %r1726 <- 0[newsize]
	sub.32      %r1727 <- %r1726, $1
	scast.32    %r1728 <- (32) %r1727
	and.32      %r1729 <- %r1725, %r1728
	cast.32     %r1730 <- (32) %r1729
	store.32    %r1730 -> 0[h1]
	load.64*    %r1731 <- 0[newhash]
	load.32     %r1732 <- 0[h1]
	scast.64    %r1733 <- (32) %r1732
	muls.64     %r1734 <- %r1733, $8
	add.64*     %r1735 <- %r1731, %r1734
	load.64*    %r1736 <- 0[%r1735]
	load.64*    %r1737 <- 0[p]
	store.64*   %r1736 -> 0[%r1737]
	load.64*    %r1738 <- 0[p]
	load.64*    %r1739 <- 0[newhash]
	load.32     %r1740 <- 0[h1]
	scast.64    %r1741 <- (32) %r1740
	muls.64     %r1742 <- %r1741, $8
	add.64*     %r1743 <- %r1739, %r1742
	store.64*   %r1738 -> 0[%r1743]
	load.64*    %r1744 <- 0[next]
	store.64*   %r1744 -> 0[p]
	br          .L341

.L341:
	br          .L343

.L342:
	br          .L337

.L337:
	load.32     %r1745 <- 0[i]
	add.32      %r1746 <- %r1745, $1
	store.32    %r1746 -> 0[i]
	br          .L339

.L338:
	load.64*    %r1747 <- 0[L]
	load.64*    %r1748 <- 0[tb]
	load.64*    %r1749 <- 0[%r1748]
	cast.64*    %r1750 <- (64) %r1749
	load.64*    %r1751 <- 0[tb]
	load.32     %r1752 <- 12[%r1751]
	scast.64    %r1753 <- (32) %r1752
	mulu.64     %r1754 <- %r1753, $8
	push.64*    %r1747
	push.64*    %r1750
	push.64     %r1754
	push.64     $0
	call.64*    %r1755 <- luaM_realloc_
	load.32     %r1756 <- 0[newsize]
	load.64*    %r1757 <- 0[tb]
	store.32    %r1756 -> 12[%r1757]
	load.64*    %r1758 <- 0[newhash]
	load.64*    %r1759 <- 0[tb]
	store.64*   %r1758 -> 0[%r1759]
	br          .L328

.L328:
	ret


newlstr:
.L344:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	store.32    %arg4 -> 0[h]
	load.64     %r1760 <- 0[l]
	add.64      %r1761 <- %r1760, $1
	seta.32     %r1762 <- %r1761, $-27
	br          %r1762, .L345, .L346

.L345:
	load.64*    %r1763 <- 0[L]
	push.64*    %r1763
	call.64*    %r1764 <- luaM_toobig
	br          .L346

.L346:
	load.64*    %r1765 <- 0[L]
	load.64     %r1766 <- 0[l]
	add.64      %r1767 <- %r1766, $1
	mulu.64     %r1768 <- %r1767, $1
	add.64      %r1769 <- %r1768, $24
	push.64*    %r1765
	push.64*    $0
	push.64     $0
	push.64     %r1769
	call.64*    %r1770 <- luaM_realloc_
	ptrcast.64* %r1771 <- (64) %r1770
	store.64*   %r1771 -> 0[ts]
	load.64     %r1772 <- 0[l]
	load.64*    %r1773 <- 0[ts]
	store.64    %r1772 -> 16[%r1773]
	load.32     %r1774 <- 0[h]
	load.64*    %r1775 <- 0[ts]
	store.32    %r1774 -> 12[%r1775]
	load.64*    %r1776 <- 0[L]
	load.64*    %r1777 <- 32[%r1776]
	load.8      %r1778 <- 32[%r1777]
	cast.32     %r1779 <- (8) %r1778
	and.32      %r1780 <- %r1779, $3
	scast.8     %r1781 <- (32) %r1780
	load.64*    %r1782 <- 0[ts]
	store.8     %r1781 -> 9[%r1782]
	load.64*    %r1783 <- 0[ts]
	store.8     $4 -> 8[%r1783]
	load.64*    %r1784 <- 0[ts]
	store.8     $0 -> 10[%r1784]
	load.64*    %r1785 <- 0[ts]
	add.64*     %r1786 <- %r1785, $24
	cast.64*    %r1787 <- (64) %r1786
	load.64*    %r1788 <- 0[str]
	cast.64*    %r1789 <- (64) %r1788
	load.64     %r1790 <- 0[l]
	mulu.64     %r1791 <- %r1790, $1
	push.64*    %r1787
	push.64*    %r1789
	push.64     %r1791
	call.64*    %r1792 <- memcpy
	load.64*    %r1793 <- 0[ts]
	add.64*     %r1794 <- %r1793, $24
	ptrcast.64* %r1795 <- (64) %r1794
	load.64     %r1796 <- 0[l]
	add.64*     %r1797 <- %r1795, %r1796
	store.8     $0 -> 0[%r1797]
	load.64*    %r1798 <- 0[L]
	load.64*    %r1799 <- 32[%r1798]
	add.64*     %r1800 <- %r1799, $0
	store.64*   %r1800 -> 0[tb]
	load.32     %r1801 <- 0[h]
	load.64*    %r1802 <- 0[tb]
	load.32     %r1803 <- 12[%r1802]
	sub.32      %r1804 <- %r1803, $1
	scast.32    %r1805 <- (32) %r1804
	and.32      %r1806 <- %r1801, %r1805
	cast.32     %r1807 <- (32) %r1806
	scast.32    %r1808 <- (32) %r1807
	store.32    %r1808 -> 0[h]
	load.64*    %r1809 <- 0[tb]
	load.64*    %r1810 <- 0[%r1809]
	load.32     %r1811 <- 0[h]
	cast.64     %r1812 <- (32) %r1811
	muls.64     %r1813 <- %r1812, $8
	add.64*     %r1814 <- %r1810, %r1813
	load.64*    %r1815 <- 0[%r1814]
	load.64*    %r1816 <- 0[ts]
	store.64*   %r1815 -> 0[%r1816]
	load.64*    %r1817 <- 0[ts]
	ptrcast.64* %r1818 <- (64) %r1817
	load.64*    %r1819 <- 0[tb]
	load.64*    %r1820 <- 0[%r1819]
	load.32     %r1821 <- 0[h]
	cast.64     %r1822 <- (32) %r1821
	muls.64     %r1823 <- %r1822, $8
	add.64*     %r1824 <- %r1820, %r1823
	store.64*   %r1818 -> 0[%r1824]
	load.64*    %r1825 <- 0[tb]
	load.32     %r1826 <- 8[%r1825]
	add.32      %r1827 <- %r1826, $1
	store.32    %r1827 -> 8[%r1825]
	load.64*    %r1828 <- 0[tb]
	load.32     %r1829 <- 8[%r1828]
	load.64*    %r1830 <- 0[tb]
	load.32     %r1831 <- 12[%r1830]
	scast.32    %r1832 <- (32) %r1831
	seta.32     %r1833 <- %r1829, %r1832
	br          %r1833, .L349, .L348

.L349:
	load.64*    %r1834 <- 0[tb]
	load.32     %r1835 <- 12[%r1834]
	setle.32    %r1836 <- %r1835, $0x3ffffffe
	br          %r1836, .L347, .L348

.L347:
	load.64*    %r1837 <- 0[L]
	load.64*    %r1838 <- 0[tb]
	load.32     %r1839 <- 12[%r1838]
	muls.32     %r1840 <- %r1839, $2
	push.64*    %r1837
	push.32     %r1840
	call        luaS_resize
	br          .L348

.L348:
	load.64*    %r1841 <- 0[ts]
	phisrc.64*  %phi56(return) <- %r1841
	br          .L350

.L350:
	phi.64*     %r1842 <- %phi56(return)
	ret.64*     %r1841


luaS_newlstr:
.L351:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	load.64     %r1843 <- 0[l]
	cast.32     %r1844 <- (64) %r1843
	store.32    %r1844 -> 0[h]
	load.64     %r1845 <- 0[l]
	lsr.64      %r1846 <- %r1845, $5
	add.64      %r1847 <- %r1846, $1
	store.64    %r1847 -> 0[step]
	load.64     %r1848 <- 0[l]
	store.64    %r1848 -> 0[l1]
	br          .L355

.L355:
	load.64     %r1849 <- 0[l1]
	load.64     %r1850 <- 0[step]
	setae.32    %r1851 <- %r1849, %r1850
	br          %r1851, .L352, .L354

.L352:
	load.32     %r1852 <- 0[h]
	load.32     %r1853 <- 0[h]
	shl.32      %r1854 <- %r1853, $5
	load.32     %r1855 <- 0[h]
	lsr.32      %r1856 <- %r1855, $2
	add.32      %r1857 <- %r1854, %r1856
	load.64*    %r1858 <- 0[str]
	load.64     %r1859 <- 0[l1]
	sub.64      %r1860 <- %r1859, $1
	add.64*     %r1861 <- %r1858, %r1860
	load.8      %r1862 <- 0[%r1861]
	scast.8     %r1863 <- (8) %r1862
	cast.32     %r1864 <- (8) %r1863
	add.32      %r1865 <- %r1857, %r1864
	xor.32      %r1866 <- %r1852, %r1865
	store.32    %r1866 -> 0[h]
	br          .L353

.L353:
	load.64     %r1867 <- 0[step]
	load.64     %r1868 <- 0[l1]
	cast.64     %r1869 <- (64) %r1868
	sub.64      %r1870 <- %r1869, %r1867
	cast.64     %r1871 <- (64) %r1870
	store.64    %r1871 -> 0[l1]
	br          .L355

.L354:
	load.64*    %r1872 <- 0[L]
	load.64*    %r1873 <- 32[%r1872]
	load.64*    %r1874 <- 0[%r1873]
	load.32     %r1875 <- 0[h]
	load.64*    %r1876 <- 0[L]
	load.64*    %r1877 <- 32[%r1876]
	load.32     %r1878 <- 12[%r1877]
	sub.32      %r1879 <- %r1878, $1
	scast.32    %r1880 <- (32) %r1879
	and.32      %r1881 <- %r1875, %r1880
	cast.32     %r1882 <- (32) %r1881
	scast.64    %r1883 <- (32) %r1882
	muls.64     %r1884 <- %r1883, $8
	add.64*     %r1885 <- %r1874, %r1884
	load.64*    %r1886 <- 0[%r1885]
	store.64*   %r1886 -> 0[o]
	br          .L359

.L359:
	load.64*    %r1887 <- 0[o]
	setne.32    %r1888 <- %r1887, $0
	br          %r1888, .L356, .L358

.L356:
	load.64*    %r1889 <- 0[o]
	add.64*     %r1890 <- %r1889, $0
	store.64*   %r1890 -> 0[ts]
	load.64*    %r1891 <- 0[ts]
	load.64     %r1892 <- 16[%r1891]
	load.64     %r1893 <- 0[l]
	seteq.32    %r1894 <- %r1892, %r1893
	load.64*    %r1895 <- 0[str]
	cast.64*    %r1896 <- (64) %r1895
	load.64*    %r1897 <- 0[ts]
	add.64*     %r1898 <- %r1897, $24
	ptrcast.64* %r1899 <- (64) %r1898
	cast.64*    %r1900 <- (64) %r1899
	load.64     %r1901 <- 0[l]
	push.64*    %r1896
	push.64*    %r1900
	push.64     %r1901
	call.32     %r1902 <- memcmp
	seteq.32    %r1903 <- %r1902, $0
	and-bool.32 %r1904 <- %r1894, %r1903
	br          %r1904, .L360, .L361

.L360:
	load.64*    %r1905 <- 0[o]
	load.8      %r1906 <- 9[%r1905]
	cast.32     %r1907 <- (8) %r1906
	load.64*    %r1908 <- 0[L]
	load.64*    %r1909 <- 32[%r1908]
	load.8      %r1910 <- 32[%r1909]
	cast.32     %r1911 <- (8) %r1910
	xor.32      %r1912 <- %r1911, $3
	and.32      %r1913 <- %r1907, %r1912
	and.32      %r1914 <- %r1913, $3
	br          %r1914, .L362, .L363

.L362:
	load.64*    %r1915 <- 0[o]
	load.8      %r1916 <- 9[%r1915]
	cast.32     %r1917 <- (8) %r1916
	xor.32      %r1918 <- %r1917, $3
	scast.8     %r1919 <- (32) %r1918
	store.8     %r1919 -> 9[%r1915]
	br          .L363

.L363:
	load.64*    %r1920 <- 0[ts]
	phisrc.64*  %phi57(return) <- %r1920
	br          .L364

.L361:
	br          .L357

.L357:
	load.64*    %r1922 <- 0[o]
	load.64*    %r1923 <- 0[%r1922]
	store.64*   %r1923 -> 0[o]
	br          .L359

.L358:
	load.64*    %r1924 <- 0[L]
	load.64*    %r1925 <- 0[str]
	load.64     %r1926 <- 0[l]
	load.32     %r1927 <- 0[h]
	push.64*    %r1924
	push.64*    %r1925
	push.64     %r1926
	push.32     %r1927
	call.64*    %r1928 <- newlstr
	phisrc.64*  %phi58(return) <- %r1928
	br          .L364

.L364:
	phi.64*     %r1921 <- %phi57(return), %phi58(return)
	ret.64*     %r1921


luaS_newudata:
.L365:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[s]
	store.64*   %arg3 -> 0[e]
	load.64     %r1929 <- 0[s]
	seta.32     %r1930 <- %r1929, $-43
	br          %r1930, .L366, .L367

.L366:
	load.64*    %r1931 <- 0[L]
	push.64*    %r1931
	call.64*    %r1932 <- luaM_toobig
	br          .L367

.L367:
	load.64*    %r1933 <- 0[L]
	load.64     %r1934 <- 0[s]
	add.64      %r1935 <- %r1934, $40
	push.64*    %r1933
	push.64*    $0
	push.64     $0
	push.64     %r1935
	call.64*    %r1936 <- luaM_realloc_
	ptrcast.64* %r1937 <- (64) %r1936
	store.64*   %r1937 -> 0[u]
	load.64*    %r1938 <- 0[L]
	load.64*    %r1939 <- 32[%r1938]
	load.8      %r1940 <- 32[%r1939]
	cast.32     %r1941 <- (8) %r1940
	and.32      %r1942 <- %r1941, $3
	scast.8     %r1943 <- (32) %r1942
	load.64*    %r1944 <- 0[u]
	store.8     %r1943 -> 9[%r1944]
	load.64*    %r1945 <- 0[u]
	store.8     $7 -> 8[%r1945]
	load.64     %r1946 <- 0[s]
	load.64*    %r1947 <- 0[u]
	store.64    %r1946 -> 32[%r1947]
	load.64*    %r1948 <- 0[u]
	store.64*   $0 -> 16[%r1948]
	load.64*    %r1949 <- 0[e]
	load.64*    %r1950 <- 0[u]
	store.64*   %r1949 -> 24[%r1950]
	load.64*    %r1951 <- 0[L]
	load.64*    %r1952 <- 32[%r1951]
	load.64*    %r1953 <- 176[%r1952]
	load.64*    %r1954 <- 0[%r1953]
	load.64*    %r1955 <- 0[u]
	store.64*   %r1954 -> 0[%r1955]
	load.64*    %r1956 <- 0[u]
	ptrcast.64* %r1957 <- (64) %r1956
	load.64*    %r1958 <- 0[L]
	load.64*    %r1959 <- 32[%r1958]
	load.64*    %r1960 <- 176[%r1959]
	store.64*   %r1957 -> 0[%r1960]
	load.64*    %r1961 <- 0[u]
	phisrc.64*  %phi59(return) <- %r1961
	br          .L368

.L368:
	phi.64*     %r1962 <- %phi59(return)
	ret.64*     %r1961


hashnum:
.L369:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.f64   %arg2 -> 0[n]
	load.f64    %r1963 <- 0[n]
	set.f64     %r1964 <- 0.000000
	seteq.32    %r1965 <- %r1963, %r1964
	br          %r1965, .L370, .L371

.L370:
	load.64*    %r1966 <- 0[t]
	load.64*    %r1967 <- 32[%r1966]
	add.64*     %r1968 <- %r1967, $0
	phisrc.64*  %phi60(return) <- %r1968
	br          .L372

.L371:
	symaddr.64* %r1970 <- a
	cast.64*    %r1971 <- (64) %r1970
	symaddr.64* %r1972 <- n
	cast.64*    %r1973 <- (64) %r1972
	push.64*    %r1971
	push.64*    %r1973
	push.64     $8
	call.64*    %r1974 <- memcpy
	store.32    $1 -> 0[i]
	br          .L376

.L376:
	load.32     %r1975 <- 0[i]
	setlt.32    %r1976 <- %r1975, $2
	br          %r1976, .L373, .L375

.L373:
	symaddr.64* %r1977 <- a
	load.32     %r1978 <- 0[i]
	scast.64    %r1979 <- (32) %r1978
	muls.64     %r1980 <- %r1979, $4
	add.64*     %r1981 <- %r1977, %r1980
	load.32     %r1982 <- 0[%r1981]
	load.32     %r1983 <- 0[a]
	cast.32     %r1984 <- (32) %r1983
	add.32      %r1985 <- %r1984, %r1982
	cast.32     %r1986 <- (32) %r1985
	store.32    %r1986 -> 0[a]
	br          .L374

.L374:
	load.32     %r1987 <- 0[i]
	add.32      %r1988 <- %r1987, $1
	store.32    %r1988 -> 0[i]
	br          .L376

.L375:
	load.64*    %r1989 <- 0[t]
	load.64*    %r1990 <- 32[%r1989]
	load.32     %r1991 <- 0[a]
	cast.64     %r1992 <- (32) %r1991
	load.64*    %r1993 <- 0[t]
	load.8      %r1994 <- 11[%r1993]
	cast.32     %r1995 <- (8) %r1994
	shl.64      %r1996 <- $1, %r1995
	sub.64      %r1997 <- %r1996, $1
	or.64       %r1998 <- %r1997, $1
	modu.64     %r1999 <- %r1992, %r1998
	muls.64     %r2000 <- %r1999, $40
	add.64*     %r2001 <- %r1990, %r2000
	phisrc.64*  %phi61(return) <- %r2001
	br          .L372

.L372:
	phi.64*     %r1969 <- %phi60(return), %phi61(return)
	ret.64*     %r1969


mainposition:
.L377:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r2002 <- 0[key]
	load.32     %r2003 <- 8[%r2002]
	switch.32   %r2003, 1 -> .L381, 2 -> .L382, 3 -> .L379, 4 -> .L380, default -> .L383

.L379:
	load.64*    %r2004 <- 0[t]
	load.64*    %r2005 <- 0[key]
	load.f64    %r2006 <- 0[%r2005]
	fpcast.f64  %r2007 <- (64) %r2006
	push.64*    %r2004
	push.f64    %r2007
	call.64*    %r2008 <- hashnum
	phisrc.64*  %phi62(return) <- %r2008
	br          .L384

.L380:
	load.64*    %r2010 <- 0[t]
	load.64*    %r2011 <- 32[%r2010]
	load.64*    %r2012 <- 0[key]
	load.64*    %r2013 <- 0[%r2012]
	load.32     %r2014 <- 12[%r2013]
	cast.64     %r2015 <- (32) %r2014
	load.64*    %r2016 <- 0[t]
	load.8      %r2017 <- 11[%r2016]
	cast.32     %r2018 <- (8) %r2017
	shl.64      %r2019 <- $1, %r2018
	sub.64      %r2020 <- %r2019, $1
	and.64      %r2021 <- %r2015, %r2020
	cast.32     %r2022 <- (64) %r2021
	scast.64    %r2023 <- (32) %r2022
	muls.64     %r2024 <- %r2023, $40
	add.64*     %r2025 <- %r2011, %r2024
	phisrc.64*  %phi63(return) <- %r2025
	br          .L384

.L381:
	load.64*    %r2026 <- 0[t]
	load.64*    %r2027 <- 32[%r2026]
	load.64*    %r2028 <- 0[key]
	load.32     %r2029 <- 0[%r2028]
	scast.64    %r2030 <- (32) %r2029
	load.64*    %r2031 <- 0[t]
	load.8      %r2032 <- 11[%r2031]
	cast.32     %r2033 <- (8) %r2032
	shl.64      %r2034 <- $1, %r2033
	sub.64      %r2035 <- %r2034, $1
	and.64      %r2036 <- %r2030, %r2035
	cast.32     %r2037 <- (64) %r2036
	scast.64    %r2038 <- (32) %r2037
	muls.64     %r2039 <- %r2038, $40
	add.64*     %r2040 <- %r2027, %r2039
	phisrc.64*  %phi64(return) <- %r2040
	br          .L384

.L382:
	load.64*    %r2041 <- 0[t]
	load.64*    %r2042 <- 32[%r2041]
	load.64*    %r2043 <- 0[key]
	load.64*    %r2044 <- 0[%r2043]
	cast.64     %r2045 <- (64) %r2044
	cast.32     %r2046 <- (64) %r2045
	cast.64     %r2047 <- (32) %r2046
	load.64*    %r2048 <- 0[t]
	load.8      %r2049 <- 11[%r2048]
	cast.32     %r2050 <- (8) %r2049
	shl.64      %r2051 <- $1, %r2050
	sub.64      %r2052 <- %r2051, $1
	or.64       %r2053 <- %r2052, $1
	modu.64     %r2054 <- %r2047, %r2053
	muls.64     %r2055 <- %r2054, $40
	add.64*     %r2056 <- %r2042, %r2055
	phisrc.64*  %phi65(return) <- %r2056
	br          .L384

.L383:
	load.64*    %r2057 <- 0[t]
	load.64*    %r2058 <- 32[%r2057]
	load.64*    %r2059 <- 0[key]
	load.64*    %r2060 <- 0[%r2059]
	cast.64     %r2061 <- (64) %r2060
	cast.32     %r2062 <- (64) %r2061
	cast.64     %r2063 <- (32) %r2062
	load.64*    %r2064 <- 0[t]
	load.8      %r2065 <- 11[%r2064]
	cast.32     %r2066 <- (8) %r2065
	shl.64      %r2067 <- $1, %r2066
	sub.64      %r2068 <- %r2067, $1
	or.64       %r2069 <- %r2068, $1
	modu.64     %r2070 <- %r2063, %r2069
	muls.64     %r2071 <- %r2070, $40
	add.64*     %r2072 <- %r2058, %r2071
	phisrc.64*  %phi66(return) <- %r2072
	br          .L384

.L384:
	phi.64*     %r2009 <- %phi62(return), %phi63(return), %phi64(return), %phi65(return), %phi66(return)
	ret.64*     %r2009


arrayindex:
.L385:
	<entry-point>
	store.64*   %arg1 -> 0[key]
	load.64*    %r2073 <- 0[key]
	load.32     %r2074 <- 8[%r2073]
	scast.32    %r2075 <- (32) %r2074
	seteq.32    %r2076 <- %r2075, $3
	br          %r2076, .L386, .L387

.L386:
	load.64*    %r2077 <- 0[key]
	load.f64    %r2078 <- 0[%r2077]
	fpcast.f64  %r2079 <- (64) %r2078
	store.f64   %r2079 -> 0[n]
	load.f64    %r2080 <- 0[n]
	cast.32     %r2081 <- (64) %r2080
	store.32    %r2081 -> 0[k]
	load.32     %r2082 <- 0[k]
	fpcast.f64  %r2083 <- (32) %r2082
	load.f64    %r2084 <- 0[n]
	seteq.32    %r2085 <- %r2083, %r2084
	br          %r2085, .L388, .L389

.L388:
	load.32     %r2086 <- 0[k]
	phisrc.32   %phi67(return) <- %r2086
	br          .L390

.L389:
	br          .L387

.L387:
	phisrc.32   %phi68(return) <- $0xffffffff
	br          .L390

.L390:
	phi.32      %r2087 <- %phi67(return), %phi68(return)
	ret.32      %r2087


findindex:
.L391:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2088 <- 0[key]
	load.32     %r2089 <- 8[%r2088]
	seteq.32    %r2090 <- %r2089, $0
	br          %r2090, .L392, .L393

.L392:
	phisrc.32   %phi69(return) <- $0xffffffff
	br          .L394

.L393:
	load.64*    %r2092 <- 0[key]
	push.64*    %r2092
	call.32     %r2093 <- arrayindex
	store.32    %r2093 -> 0[i]
	load.32     %r2094 <- 0[i]
	setlt.32    %r2095 <- $0, %r2094
	br          %r2095, .L397, .L396

.L397:
	load.32     %r2096 <- 0[i]
	load.64*    %r2097 <- 0[t]
	load.32     %r2098 <- 56[%r2097]
	setle.32    %r2099 <- %r2096, %r2098
	br          %r2099, .L395, .L396

.L395:
	load.32     %r2100 <- 0[i]
	sub.32      %r2101 <- %r2100, $1
	phisrc.32   %phi70(return) <- %r2101
	br          .L394

.L396:
	load.64*    %r2102 <- 0[t]
	load.64*    %r2103 <- 0[key]
	push.64*    %r2102
	push.64*    %r2103
	call.64*    %r2104 <- mainposition
	store.64*   %r2104 -> 0[n]
	br          .L399

.L399:
	load.64*    %r2105 <- 0[n]
	add.64*     %r2106 <- %r2105, $16
	add.64*     %r2107 <- %r2106, $0
	load.64*    %r2108 <- 0[key]
	push.64*    %r2107
	push.64*    %r2108
	call.32     %r2109 <- luaO_rawequalObj
	br          %r2109, .L402, .L404

.L404:
	load.64*    %r2110 <- 0[n]
	load.32     %r2111 <- 24[%r2110]
	seteq.32    %r2112 <- %r2111, $11
	br          %r2112, .L406, .L403

.L406:
	load.64*    %r2113 <- 0[key]
	load.32     %r2114 <- 8[%r2113]
	setge.32    %r2115 <- %r2114, $4
	br          %r2115, .L405, .L403

.L405:
	load.64*    %r2116 <- 0[n]
	load.64*    %r2117 <- 16[%r2116]
	load.64*    %r2118 <- 0[key]
	load.64*    %r2119 <- 0[%r2118]
	seteq.32    %r2120 <- %r2117, %r2119
	br          %r2120, .L402, .L403

.L402:
	load.64*    %r2121 <- 0[n]
	load.64*    %r2122 <- 0[t]
	load.64*    %r2123 <- 32[%r2122]
	add.64*     %r2124 <- %r2123, $0
	sub.64      %r2125 <- %r2121, %r2124
	divs.64     %r2126 <- %r2125, $40
	scast.32    %r2127 <- (64) %r2126
	store.32    %r2127 -> 0[i]
	load.32     %r2128 <- 0[i]
	load.64*    %r2129 <- 0[t]
	load.32     %r2130 <- 56[%r2129]
	add.32      %r2131 <- %r2128, %r2130
	phisrc.32   %phi71(return) <- %r2131
	br          .L394

.L403:
	load.64*    %r2132 <- 0[n]
	load.64*    %r2133 <- 32[%r2132]
	store.64*   %r2133 -> 0[n]
	br          .L407

.L407:
	br          .L400

.L400:
	load.64*    %r2134 <- 0[n]
	br          %r2134, .L399, .L401

.L401:
	load.64*    %r2135 <- 0[L]
	symaddr.64* %r2136 <- <anon symbol:0x62d0011f0770>
	push.64*    %r2135
	push.64*    %r2136
	call        luaG_runerror
	phisrc.32   %phi72(return) <- $0
	br          .L394

.L394:
	phi.32      %r2091 <- %phi69(return), %phi70(return), %phi71(return), %phi72(return)
	ret.32      %r2091


luaH_next:
.L408:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2137 <- 0[L]
	load.64*    %r2138 <- 0[t]
	load.64*    %r2139 <- 0[key]
	push.64*    %r2137
	push.64*    %r2138
	push.64*    %r2139
	call.32     %r2140 <- findindex
	store.32    %r2140 -> 0[i]
	load.32     %r2141 <- 0[i]
	add.32      %r2142 <- %r2141, $1
	store.32    %r2142 -> 0[i]
	br          .L412

.L412:
	load.32     %r2143 <- 0[i]
	load.64*    %r2144 <- 0[t]
	load.32     %r2145 <- 56[%r2144]
	setlt.32    %r2146 <- %r2143, %r2145
	br          %r2146, .L409, .L411

.L409:
	load.64*    %r2147 <- 0[t]
	load.64*    %r2148 <- 24[%r2147]
	load.32     %r2149 <- 0[i]
	scast.64    %r2150 <- (32) %r2149
	muls.64     %r2151 <- %r2150, $16
	add.64*     %r2152 <- %r2148, %r2151
	load.32     %r2153 <- 8[%r2152]
	seteq.32    %r2154 <- %r2153, $0
	br          %r2154, .L414, .L413

.L413:
	load.64*    %r2155 <- 0[key]
	store.64*   %r2155 -> 0[i_o]
	load.32     %r2156 <- 0[i]
	add.32      %r2157 <- %r2156, $1
	fpcast.f64  %r2158 <- (32) %r2157
	load.64*    %r2159 <- 0[i_o]
	store.f64   %r2158 -> 0[%r2159]
	load.64*    %r2160 <- 0[i_o]
	store.32    $3 -> 8[%r2160]
	load.64*    %r2161 <- 0[t]
	load.64*    %r2162 <- 24[%r2161]
	load.32     %r2163 <- 0[i]
	scast.64    %r2164 <- (32) %r2163
	muls.64     %r2165 <- %r2164, $16
	add.64*     %r2166 <- %r2162, %r2165
	store.64*   %r2166 -> 0[o2]
	load.64*    %r2167 <- 0[key]
	add.64*     %r2168 <- %r2167, $16
	store.64*   %r2168 -> 0[o1]
	load.64*    %r2169 <- 0[o2]
	load.f64    %r2170 <- 0[%r2169]
	fpcast.f64  %r2171 <- (64) %r2170
	load.64*    %r2172 <- 0[o1]
	store.f64   %r2171 -> 0[%r2172]
	load.64*    %r2173 <- 0[o2]
	load.32     %r2174 <- 8[%r2173]
	scast.32    %r2175 <- (32) %r2174
	load.64*    %r2176 <- 0[o1]
	store.32    %r2175 -> 8[%r2176]
	phisrc.32   %phi73(return) <- $1
	br          .L415

.L414:
	br          .L410

.L410:
	load.32     %r2178 <- 0[i]
	add.32      %r2179 <- %r2178, $1
	store.32    %r2179 -> 0[i]
	br          .L412

.L411:
	load.64*    %r2180 <- 0[t]
	load.32     %r2181 <- 56[%r2180]
	load.32     %r2182 <- 0[i]
	scast.32    %r2183 <- (32) %r2182
	sub.32      %r2184 <- %r2183, %r2181
	scast.32    %r2185 <- (32) %r2184
	store.32    %r2185 -> 0[i]
	br          .L419

.L419:
	load.32     %r2186 <- 0[i]
	load.64*    %r2187 <- 0[t]
	load.8      %r2188 <- 11[%r2187]
	cast.32     %r2189 <- (8) %r2188
	shl.64      %r2190 <- $1, %r2189
	cast.32     %r2191 <- (64) %r2190
	setlt.32    %r2192 <- %r2186, %r2191
	br          %r2192, .L416, .L418

.L416:
	load.64*    %r2193 <- 0[t]
	load.64*    %r2194 <- 32[%r2193]
	load.32     %r2195 <- 0[i]
	scast.64    %r2196 <- (32) %r2195
	muls.64     %r2197 <- %r2196, $40
	add.64*     %r2198 <- %r2194, %r2197
	load.32     %r2199 <- 8[%r2198]
	seteq.32    %r2200 <- %r2199, $0
	br          %r2200, .L421, .L420

.L420:
	load.64*    %r2201 <- 0[t]
	load.64*    %r2202 <- 32[%r2201]
	load.32     %r2203 <- 0[i]
	scast.64    %r2204 <- (32) %r2203
	muls.64     %r2205 <- %r2204, $40
	add.64*     %r2206 <- %r2202, %r2205
	add.64*     %r2207 <- %r2206, $16
	add.64*     %r2208 <- %r2207, $0
	store.64*   %r2208 -> 0[o2]
	load.64*    %r2209 <- 0[key]
	store.64*   %r2209 -> 0[o1]
	load.64*    %r2210 <- 0[o2]
	load.f64    %r2211 <- 0[%r2210]
	fpcast.f64  %r2212 <- (64) %r2211
	load.64*    %r2213 <- 0[o1]
	store.f64   %r2212 -> 0[%r2213]
	load.64*    %r2214 <- 0[o2]
	load.32     %r2215 <- 8[%r2214]
	scast.32    %r2216 <- (32) %r2215
	load.64*    %r2217 <- 0[o1]
	store.32    %r2216 -> 8[%r2217]
	load.64*    %r2218 <- 0[t]
	load.64*    %r2219 <- 32[%r2218]
	load.32     %r2220 <- 0[i]
	scast.64    %r2221 <- (32) %r2220
	muls.64     %r2222 <- %r2221, $40
	add.64*     %r2223 <- %r2219, %r2222
	add.64*     %r2224 <- %r2223, $0
	store.64*   %r2224 -> 0[o2]
	load.64*    %r2225 <- 0[key]
	add.64*     %r2226 <- %r2225, $16
	store.64*   %r2226 -> 0[o1]
	load.64*    %r2227 <- 0[o2]
	load.f64    %r2228 <- 0[%r2227]
	fpcast.f64  %r2229 <- (64) %r2228
	load.64*    %r2230 <- 0[o1]
	store.f64   %r2229 -> 0[%r2230]
	load.64*    %r2231 <- 0[o2]
	load.32     %r2232 <- 8[%r2231]
	scast.32    %r2233 <- (32) %r2232
	load.64*    %r2234 <- 0[o1]
	store.32    %r2233 -> 8[%r2234]
	phisrc.32   %phi74(return) <- $1
	br          .L415

.L421:
	br          .L417

.L417:
	load.32     %r2235 <- 0[i]
	add.32      %r2236 <- %r2235, $1
	store.32    %r2236 -> 0[i]
	br          .L419

.L418:
	phisrc.32   %phi75(return) <- $0
	br          .L415

.L415:
	phi.32      %r2177 <- %phi73(return), %phi74(return), %phi75(return)
	ret.32      %r2177


computesizes:
.L422:
	<entry-point>
	store.64*   %arg1 -> 0[nums]
	store.64*   %arg2 -> 0[narray]
	store.32    $0 -> 0[a]
	store.32    $0 -> 0[na]
	store.32    $0 -> 0[n]
	store.32    $0 -> 0[i]
	store.32    $1 -> 0[twotoi]
	br          .L426

.L426:
	load.32     %r2237 <- 0[twotoi]
	divs.32     %r2238 <- %r2237, $2
	load.64*    %r2239 <- 0[narray]
	load.32     %r2240 <- 0[%r2239]
	setlt.32    %r2241 <- %r2238, %r2240
	br          %r2241, .L423, .L425

.L423:
	load.64*    %r2242 <- 0[nums]
	load.32     %r2243 <- 0[i]
	scast.64    %r2244 <- (32) %r2243
	muls.64     %r2245 <- %r2244, $4
	add.64*     %r2246 <- %r2242, %r2245
	load.32     %r2247 <- 0[%r2246]
	setgt.32    %r2248 <- %r2247, $0
	br          %r2248, .L427, .L428

.L427:
	load.64*    %r2249 <- 0[nums]
	load.32     %r2250 <- 0[i]
	scast.64    %r2251 <- (32) %r2250
	muls.64     %r2252 <- %r2251, $4
	add.64*     %r2253 <- %r2249, %r2252
	load.32     %r2254 <- 0[%r2253]
	load.32     %r2255 <- 0[a]
	scast.32    %r2256 <- (32) %r2255
	add.32      %r2257 <- %r2256, %r2254
	scast.32    %r2258 <- (32) %r2257
	store.32    %r2258 -> 0[a]
	load.32     %r2259 <- 0[a]
	load.32     %r2260 <- 0[twotoi]
	divs.32     %r2261 <- %r2260, $2
	setgt.32    %r2262 <- %r2259, %r2261
	br          %r2262, .L429, .L430

.L429:
	load.32     %r2263 <- 0[twotoi]
	store.32    %r2263 -> 0[n]
	load.32     %r2264 <- 0[a]
	store.32    %r2264 -> 0[na]
	br          .L430

.L430:
	br          .L428

.L428:
	load.32     %r2265 <- 0[a]
	load.64*    %r2266 <- 0[narray]
	load.32     %r2267 <- 0[%r2266]
	seteq.32    %r2268 <- %r2265, %r2267
	br          %r2268, .L431, .L432

.L431:
	br          .L425

.L432:
	br          .L424

.L424:
	load.32     %r2269 <- 0[i]
	add.32      %r2270 <- %r2269, $1
	store.32    %r2270 -> 0[i]
	load.32     %r2271 <- 0[twotoi]
	scast.32    %r2272 <- (32) %r2271
	muls.32     %r2273 <- %r2272, $2
	scast.32    %r2274 <- (32) %r2273
	store.32    %r2274 -> 0[twotoi]
	br          .L426

.L425:
	load.32     %r2275 <- 0[n]
	load.64*    %r2276 <- 0[narray]
	store.32    %r2275 -> 0[%r2276]
	load.32     %r2277 <- 0[na]
	phisrc.32   %phi76(return) <- %r2277
	br          .L433

.L433:
	phi.32      %r2278 <- %phi76(return)
	ret.32      %r2277


countint:
.L434:
	<entry-point>
	store.64*   %arg1 -> 0[key]
	store.64*   %arg2 -> 0[nums]
	load.64*    %r2279 <- 0[key]
	push.64*    %r2279
	call.32     %r2280 <- arrayindex
	store.32    %r2280 -> 0[k]
	load.32     %r2281 <- 0[k]
	setlt.32    %r2282 <- $0, %r2281
	load.32     %r2283 <- 0[k]
	setle.32    %r2284 <- %r2283, $0x40000000
	and-bool.32 %r2285 <- %r2282, %r2284
	br          %r2285, .L435, .L436

.L435:
	load.64*    %r2286 <- 0[nums]
	load.32     %r2287 <- 0[k]
	sub.32      %r2288 <- %r2287, $1
	scast.32    %r2289 <- (32) %r2288
	push.32     %r2289
	call.32     %r2290 <- luaO_log2
	add.32      %r2291 <- %r2290, $1
	scast.64    %r2292 <- (32) %r2291
	muls.64     %r2293 <- %r2292, $4
	add.64*     %r2294 <- %r2286, %r2293
	load.32     %r2295 <- 0[%r2294]
	add.32      %r2296 <- %r2295, $1
	store.32    %r2296 -> 0[%r2294]
	phisrc.32   %phi77(return) <- $1
	br          .L437

.L436:
	phisrc.32   %phi78(return) <- $0
	br          .L437

.L437:
	phi.32      %r2297 <- %phi77(return), %phi78(return)
	ret.32      %r2297


numusearray:
.L439:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[nums]
	store.32    $0 -> 0[ause]
	store.32    $1 -> 0[i]
	store.32    $0 -> 0[lg]
	store.32    $1 -> 0[ttlg]
	br          .L443

.L443:
	load.32     %r2298 <- 0[lg]
	setle.32    %r2299 <- %r2298, $30
	br          %r2299, .L440, .L442

.L440:
	store.32    $0 -> 0[lc]
	load.32     %r2300 <- 0[ttlg]
	store.32    %r2300 -> 0[lim]
	load.32     %r2301 <- 0[lim]
	load.64*    %r2302 <- 0[t]
	load.32     %r2303 <- 56[%r2302]
	scast.32    %r2304 <- (32) %r2303
	setgt.32    %r2305 <- %r2301, %r2304
	br          %r2305, .L444, .L445

.L444:
	load.64*    %r2306 <- 0[t]
	load.32     %r2307 <- 56[%r2306]
	scast.32    %r2308 <- (32) %r2307
	store.32    %r2308 -> 0[lim]
	load.32     %r2309 <- 0[i]
	load.32     %r2310 <- 0[lim]
	setgt.32    %r2311 <- %r2309, %r2310
	br          %r2311, .L446, .L447

.L446:
	br          .L442

.L447:
	br          .L445

.L445:
	br          .L451

.L451:
	load.32     %r2312 <- 0[i]
	load.32     %r2313 <- 0[lim]
	setle.32    %r2314 <- %r2312, %r2313
	br          %r2314, .L448, .L450

.L448:
	load.64*    %r2315 <- 0[t]
	load.64*    %r2316 <- 24[%r2315]
	load.32     %r2317 <- 0[i]
	sub.32      %r2318 <- %r2317, $1
	scast.64    %r2319 <- (32) %r2318
	muls.64     %r2320 <- %r2319, $16
	add.64*     %r2321 <- %r2316, %r2320
	load.32     %r2322 <- 8[%r2321]
	seteq.32    %r2323 <- %r2322, $0
	br          %r2323, .L453, .L452

.L452:
	load.32     %r2324 <- 0[lc]
	add.32      %r2325 <- %r2324, $1
	store.32    %r2325 -> 0[lc]
	br          .L453

.L453:
	br          .L449

.L449:
	load.32     %r2326 <- 0[i]
	add.32      %r2327 <- %r2326, $1
	store.32    %r2327 -> 0[i]
	br          .L451

.L450:
	load.32     %r2328 <- 0[lc]
	load.64*    %r2329 <- 0[nums]
	load.32     %r2330 <- 0[lg]
	scast.64    %r2331 <- (32) %r2330
	muls.64     %r2332 <- %r2331, $4
	add.64*     %r2333 <- %r2329, %r2332
	load.32     %r2334 <- 0[%r2333]
	scast.32    %r2335 <- (32) %r2334
	add.32      %r2336 <- %r2335, %r2328
	scast.32    %r2337 <- (32) %r2336
	store.32    %r2337 -> 0[%r2333]
	load.32     %r2338 <- 0[lc]
	load.32     %r2339 <- 0[ause]
	scast.32    %r2340 <- (32) %r2339
	add.32      %r2341 <- %r2340, %r2338
	scast.32    %r2342 <- (32) %r2341
	store.32    %r2342 -> 0[ause]
	br          .L441

.L441:
	load.32     %r2343 <- 0[lg]
	add.32      %r2344 <- %r2343, $1
	store.32    %r2344 -> 0[lg]
	load.32     %r2345 <- 0[ttlg]
	scast.32    %r2346 <- (32) %r2345
	muls.32     %r2347 <- %r2346, $2
	scast.32    %r2348 <- (32) %r2347
	store.32    %r2348 -> 0[ttlg]
	br          .L443

.L442:
	load.32     %r2349 <- 0[ause]
	phisrc.32   %phi79(return) <- %r2349
	br          .L454

.L454:
	phi.32      %r2350 <- %phi79(return)
	ret.32      %r2349


numusehash:
.L455:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[nums]
	store.64*   %arg3 -> 0[pnasize]
	store.32    $0 -> 0[totaluse]
	store.32    $0 -> 0[ause]
	load.64*    %r2351 <- 0[t]
	load.8      %r2352 <- 11[%r2351]
	cast.32     %r2353 <- (8) %r2352
	shl.64      %r2354 <- $1, %r2353
	cast.32     %r2355 <- (64) %r2354
	store.32    %r2355 -> 0[i]
	br          .L459

.L459:
	load.32     %r2356 <- 0[i]
	sub.32      %r2357 <- %r2356, $1
	store.32    %r2357 -> 0[i]
	br          %r2356, .L456, .L458

.L456:
	load.64*    %r2358 <- 0[t]
	load.64*    %r2359 <- 32[%r2358]
	load.32     %r2360 <- 0[i]
	scast.64    %r2361 <- (32) %r2360
	muls.64     %r2362 <- %r2361, $40
	add.64*     %r2363 <- %r2359, %r2362
	store.64*   %r2363 -> 0[n]
	load.64*    %r2364 <- 0[n]
	load.32     %r2365 <- 8[%r2364]
	seteq.32    %r2366 <- %r2365, $0
	br          %r2366, .L461, .L460

.L460:
	load.64*    %r2367 <- 0[n]
	add.64*     %r2368 <- %r2367, $16
	add.64*     %r2369 <- %r2368, $0
	load.64*    %r2370 <- 0[nums]
	push.64*    %r2369
	push.64*    %r2370
	call.32     %r2371 <- countint
	load.32     %r2372 <- 0[ause]
	scast.32    %r2373 <- (32) %r2372
	add.32      %r2374 <- %r2373, %r2371
	scast.32    %r2375 <- (32) %r2374
	store.32    %r2375 -> 0[ause]
	load.32     %r2376 <- 0[totaluse]
	add.32      %r2377 <- %r2376, $1
	store.32    %r2377 -> 0[totaluse]
	br          .L461

.L461:
	br          .L457

.L457:
	br          .L459

.L458:
	load.32     %r2378 <- 0[ause]
	load.64*    %r2379 <- 0[pnasize]
	load.32     %r2380 <- 0[%r2379]
	scast.32    %r2381 <- (32) %r2380
	add.32      %r2382 <- %r2381, %r2378
	scast.32    %r2383 <- (32) %r2382
	store.32    %r2383 -> 0[%r2379]
	load.32     %r2384 <- 0[totaluse]
	phisrc.32   %phi80(return) <- %r2384
	br          .L462

.L462:
	phi.32      %r2385 <- %phi80(return)
	ret.32      %r2384


setarrayvector:
.L463:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[size]
	load.32     %r2386 <- 0[size]
	add.32      %r2387 <- %r2386, $1
	scast.64    %r2388 <- (32) %r2387
	setbe.32    %r2389 <- %r2388, $0xfffffffffffffff
	br          %r2389, .L464, .L465

.L464:
	load.64*    %r2390 <- 0[L]
	load.64*    %r2391 <- 0[t]
	load.64*    %r2392 <- 24[%r2391]
	cast.64*    %r2393 <- (64) %r2392
	load.64*    %r2394 <- 0[t]
	load.32     %r2395 <- 56[%r2394]
	scast.64    %r2396 <- (32) %r2395
	mulu.64     %r2397 <- %r2396, $16
	load.32     %r2398 <- 0[size]
	scast.64    %r2399 <- (32) %r2398
	mulu.64     %r2400 <- %r2399, $16
	push.64*    %r2390
	push.64*    %r2393
	push.64     %r2397
	push.64     %r2400
	call.64*    %r2401 <- luaM_realloc_
	phisrc.64*  %phi81 <- %r2401
	br          .L466

.L465:
	load.64*    %r2402 <- 0[L]
	push.64*    %r2402
	call.64*    %r2403 <- luaM_toobig
	cast.64*    %r2404 <- (64) %r2403
	phisrc.64*  %phi82 <- %r2404
	br          .L466

.L466:
	phi.64*     %r2405 <- %phi81, %phi82
	ptrcast.64* %r2406 <- (64) %r2405
	load.64*    %r2407 <- 0[t]
	store.64*   %r2406 -> 24[%r2407]
	load.64*    %r2408 <- 0[t]
	load.32     %r2409 <- 56[%r2408]
	store.32    %r2409 -> 0[i]
	br          .L470

.L470:
	load.32     %r2410 <- 0[i]
	load.32     %r2411 <- 0[size]
	setlt.32    %r2412 <- %r2410, %r2411
	br          %r2412, .L467, .L469

.L467:
	load.64*    %r2413 <- 0[t]
	load.64*    %r2414 <- 24[%r2413]
	load.32     %r2415 <- 0[i]
	scast.64    %r2416 <- (32) %r2415
	muls.64     %r2417 <- %r2416, $16
	add.64*     %r2418 <- %r2414, %r2417
	store.32    $0 -> 8[%r2418]
	br          .L468

.L468:
	load.32     %r2419 <- 0[i]
	add.32      %r2420 <- %r2419, $1
	store.32    %r2420 -> 0[i]
	br          .L470

.L469:
	load.32     %r2421 <- 0[size]
	load.64*    %r2422 <- 0[t]
	store.32    %r2421 -> 56[%r2422]
	br          .L471

.L471:
	ret


setnodevector:
.L472:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[size]
	load.32     %r2423 <- 0[size]
	seteq.32    %r2424 <- %r2423, $0
	br          %r2424, .L473, .L474

.L473:
	symaddr.64* %r2425 <- dummynode_
	ptrcast.64* %r2426 <- (64) %r2425
	load.64*    %r2427 <- 0[t]
	store.64*   %r2426 -> 32[%r2427]
	store.32    $0 -> 0[lsize]
	br          .L475

.L474:
	load.32     %r2428 <- 0[size]
	sub.32      %r2429 <- %r2428, $1
	scast.32    %r2430 <- (32) %r2429
	push.32     %r2430
	call.32     %r2431 <- luaO_log2
	add.32      %r2432 <- %r2431, $1
	store.32    %r2432 -> 0[lsize]
	load.32     %r2433 <- 0[lsize]
	setgt.32    %r2434 <- %r2433, $30
	br          %r2434, .L476, .L477

.L476:
	load.64*    %r2435 <- 0[L]
	symaddr.64* %r2436 <- <anon symbol:0x62d00120cd28>
	push.64*    %r2435
	push.64*    %r2436
	call        luaG_runerror
	br          .L477

.L477:
	load.32     %r2437 <- 0[lsize]
	shl.64      %r2438 <- $1, %r2437
	cast.32     %r2439 <- (64) %r2438
	store.32    %r2439 -> 0[size]
	load.32     %r2440 <- 0[size]
	add.32      %r2441 <- %r2440, $1
	scast.64    %r2442 <- (32) %r2441
	setbe.32    %r2443 <- %r2442, $0x666666666666666
	br          %r2443, .L478, .L479

.L478:
	load.64*    %r2444 <- 0[L]
	load.32     %r2445 <- 0[size]
	scast.64    %r2446 <- (32) %r2445
	mulu.64     %r2447 <- %r2446, $40
	push.64*    %r2444
	push.64*    $0
	push.64     $0
	push.64     %r2447
	call.64*    %r2448 <- luaM_realloc_
	phisrc.64*  %phi83 <- %r2448
	br          .L480

.L479:
	load.64*    %r2449 <- 0[L]
	push.64*    %r2449
	call.64*    %r2450 <- luaM_toobig
	cast.64*    %r2451 <- (64) %r2450
	phisrc.64*  %phi84 <- %r2451
	br          .L480

.L480:
	phi.64*     %r2452 <- %phi83, %phi84
	ptrcast.64* %r2453 <- (64) %r2452
	load.64*    %r2454 <- 0[t]
	store.64*   %r2453 -> 32[%r2454]
	store.32    $0 -> 0[i]
	br          .L484

.L484:
	load.32     %r2455 <- 0[i]
	load.32     %r2456 <- 0[size]
	setlt.32    %r2457 <- %r2455, %r2456
	br          %r2457, .L481, .L483

.L481:
	load.64*    %r2458 <- 0[t]
	load.64*    %r2459 <- 32[%r2458]
	load.32     %r2460 <- 0[i]
	scast.64    %r2461 <- (32) %r2460
	muls.64     %r2462 <- %r2461, $40
	add.64*     %r2463 <- %r2459, %r2462
	store.64*   %r2463 -> 0[n]
	load.64*    %r2464 <- 0[n]
	store.64*   $0 -> 32[%r2464]
	load.64*    %r2465 <- 0[n]
	store.32    $0 -> 24[%r2465]
	load.64*    %r2466 <- 0[n]
	store.32    $0 -> 8[%r2466]
	br          .L482

.L482:
	load.32     %r2467 <- 0[i]
	add.32      %r2468 <- %r2467, $1
	store.32    %r2468 -> 0[i]
	br          .L484

.L483:
	br          .L475

.L475:
	load.32     %r2469 <- 0[lsize]
	scast.8     %r2470 <- (32) %r2469
	load.64*    %r2471 <- 0[t]
	store.8     %r2470 -> 11[%r2471]
	load.64*    %r2472 <- 0[t]
	load.64*    %r2473 <- 32[%r2472]
	load.32     %r2474 <- 0[size]
	scast.64    %r2475 <- (32) %r2474
	muls.64     %r2476 <- %r2475, $40
	add.64*     %r2477 <- %r2473, %r2476
	load.64*    %r2478 <- 0[t]
	store.64*   %r2477 -> 40[%r2478]
	br          .L485

.L485:
	ret


resize:
.L486:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[nasize]
	store.32    %arg4 -> 0[nhsize]
	load.64*    %r2479 <- 0[t]
	load.32     %r2480 <- 56[%r2479]
	store.32    %r2480 -> 0[oldasize]
	load.64*    %r2481 <- 0[t]
	load.8      %r2482 <- 11[%r2481]
	cast.32     %r2483 <- (8) %r2482
	store.32    %r2483 -> 0[oldhsize]
	load.64*    %r2484 <- 0[t]
	load.64*    %r2485 <- 32[%r2484]
	store.64*   %r2485 -> 0[nold]
	load.32     %r2486 <- 0[nasize]
	load.32     %r2487 <- 0[oldasize]
	setgt.32    %r2488 <- %r2486, %r2487
	br          %r2488, .L487, .L488

.L487:
	load.64*    %r2489 <- 0[L]
	load.64*    %r2490 <- 0[t]
	load.32     %r2491 <- 0[nasize]
	push.64*    %r2489
	push.64*    %r2490
	push.32     %r2491
	call        setarrayvector
	br          .L488

.L488:
	load.64*    %r2492 <- 0[L]
	load.64*    %r2493 <- 0[t]
	load.32     %r2494 <- 0[nhsize]
	push.64*    %r2492
	push.64*    %r2493
	push.32     %r2494
	call        setnodevector
	load.32     %r2495 <- 0[nasize]
	load.32     %r2496 <- 0[oldasize]
	setlt.32    %r2497 <- %r2495, %r2496
	br          %r2497, .L489, .L490

.L489:
	load.32     %r2498 <- 0[nasize]
	load.64*    %r2499 <- 0[t]
	store.32    %r2498 -> 56[%r2499]
	load.32     %r2500 <- 0[nasize]
	store.32    %r2500 -> 0[i]
	br          .L494

.L494:
	load.32     %r2501 <- 0[i]
	load.32     %r2502 <- 0[oldasize]
	setlt.32    %r2503 <- %r2501, %r2502
	br          %r2503, .L491, .L493

.L491:
	load.64*    %r2504 <- 0[t]
	load.64*    %r2505 <- 24[%r2504]
	load.32     %r2506 <- 0[i]
	scast.64    %r2507 <- (32) %r2506
	muls.64     %r2508 <- %r2507, $16
	add.64*     %r2509 <- %r2505, %r2508
	load.32     %r2510 <- 8[%r2509]
	seteq.32    %r2511 <- %r2510, $0
	br          %r2511, .L496, .L495

.L495:
	load.64*    %r2512 <- 0[t]
	load.64*    %r2513 <- 24[%r2512]
	load.32     %r2514 <- 0[i]
	scast.64    %r2515 <- (32) %r2514
	muls.64     %r2516 <- %r2515, $16
	add.64*     %r2517 <- %r2513, %r2516
	store.64*   %r2517 -> 0[o2]
	load.64*    %r2518 <- 0[L]
	load.64*    %r2519 <- 0[t]
	load.32     %r2520 <- 0[i]
	add.32      %r2521 <- %r2520, $1
	push.64*    %r2518
	push.64*    %r2519
	push.32     %r2521
	call.64*    %r2522 <- luaH_setnum
	store.64*   %r2522 -> 0[o1]
	load.64*    %r2523 <- 0[o2]
	load.f64    %r2524 <- 0[%r2523]
	fpcast.f64  %r2525 <- (64) %r2524
	load.64*    %r2526 <- 0[o1]
	store.f64   %r2525 -> 0[%r2526]
	load.64*    %r2527 <- 0[o2]
	load.32     %r2528 <- 8[%r2527]
	scast.32    %r2529 <- (32) %r2528
	load.64*    %r2530 <- 0[o1]
	store.32    %r2529 -> 8[%r2530]
	br          .L496

.L496:
	br          .L492

.L492:
	load.32     %r2531 <- 0[i]
	add.32      %r2532 <- %r2531, $1
	store.32    %r2532 -> 0[i]
	br          .L494

.L493:
	load.32     %r2533 <- 0[nasize]
	add.32      %r2534 <- %r2533, $1
	scast.64    %r2535 <- (32) %r2534
	setbe.32    %r2536 <- %r2535, $0xfffffffffffffff
	br          %r2536, .L497, .L498

.L497:
	load.64*    %r2537 <- 0[L]
	load.64*    %r2538 <- 0[t]
	load.64*    %r2539 <- 24[%r2538]
	cast.64*    %r2540 <- (64) %r2539
	load.32     %r2541 <- 0[oldasize]
	scast.64    %r2542 <- (32) %r2541
	mulu.64     %r2543 <- %r2542, $16
	load.32     %r2544 <- 0[nasize]
	scast.64    %r2545 <- (32) %r2544
	mulu.64     %r2546 <- %r2545, $16
	push.64*    %r2537
	push.64*    %r2540
	push.64     %r2543
	push.64     %r2546
	call.64*    %r2547 <- luaM_realloc_
	phisrc.64*  %phi85 <- %r2547
	br          .L499

.L498:
	load.64*    %r2548 <- 0[L]
	push.64*    %r2548
	call.64*    %r2549 <- luaM_toobig
	cast.64*    %r2550 <- (64) %r2549
	phisrc.64*  %phi86 <- %r2550
	br          .L499

.L499:
	phi.64*     %r2551 <- %phi85, %phi86
	ptrcast.64* %r2552 <- (64) %r2551
	load.64*    %r2553 <- 0[t]
	store.64*   %r2552 -> 24[%r2553]
	br          .L490

.L490:
	load.32     %r2554 <- 0[oldhsize]
	shl.64      %r2555 <- $1, %r2554
	sub.64      %r2556 <- %r2555, $1
	cast.32     %r2557 <- (64) %r2556
	store.32    %r2557 -> 0[i]
	br          .L503

.L503:
	load.32     %r2558 <- 0[i]
	setge.32    %r2559 <- %r2558, $0
	br          %r2559, .L500, .L502

.L500:
	load.64*    %r2560 <- 0[nold]
	load.32     %r2561 <- 0[i]
	scast.64    %r2562 <- (32) %r2561
	muls.64     %r2563 <- %r2562, $40
	add.64*     %r2564 <- %r2560, %r2563
	store.64*   %r2564 -> 0[old]
	load.64*    %r2565 <- 0[old]
	load.32     %r2566 <- 8[%r2565]
	seteq.32    %r2567 <- %r2566, $0
	br          %r2567, .L505, .L504

.L504:
	load.64*    %r2568 <- 0[old]
	add.64*     %r2569 <- %r2568, $0
	store.64*   %r2569 -> 0[o2]
	load.64*    %r2570 <- 0[L]
	load.64*    %r2571 <- 0[t]
	load.64*    %r2572 <- 0[old]
	add.64*     %r2573 <- %r2572, $16
	add.64*     %r2574 <- %r2573, $0
	push.64*    %r2570
	push.64*    %r2571
	push.64*    %r2574
	call.64*    %r2575 <- luaH_set
	store.64*   %r2575 -> 0[o1]
	load.64*    %r2576 <- 0[o2]
	load.f64    %r2577 <- 0[%r2576]
	fpcast.f64  %r2578 <- (64) %r2577
	load.64*    %r2579 <- 0[o1]
	store.f64   %r2578 -> 0[%r2579]
	load.64*    %r2580 <- 0[o2]
	load.32     %r2581 <- 8[%r2580]
	scast.32    %r2582 <- (32) %r2581
	load.64*    %r2583 <- 0[o1]
	store.32    %r2582 -> 8[%r2583]
	br          .L505

.L505:
	br          .L501

.L501:
	load.32     %r2584 <- 0[i]
	sub.32      %r2585 <- %r2584, $1
	store.32    %r2585 -> 0[i]
	br          .L503

.L502:
	load.64*    %r2586 <- 0[nold]
	symaddr.64* %r2587 <- dummynode_
	setne.32    %r2588 <- %r2586, %r2587
	br          %r2588, .L506, .L507

.L506:
	load.64*    %r2589 <- 0[L]
	load.64*    %r2590 <- 0[nold]
	cast.64*    %r2591 <- (64) %r2590
	load.32     %r2592 <- 0[oldhsize]
	shl.64      %r2593 <- $1, %r2592
	mulu.64     %r2594 <- %r2593, $40
	push.64*    %r2589
	push.64*    %r2591
	push.64     %r2594
	push.64     $0
	call.64*    %r2595 <- luaM_realloc_
	br          .L507

.L507:
	ret


luaH_resizearray:
.L508:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[nasize]
	load.64*    %r2596 <- 0[t]
	load.64*    %r2597 <- 32[%r2596]
	symaddr.64* %r2598 <- dummynode_
	seteq.32    %r2599 <- %r2597, %r2598
	br          %r2599, .L509, .L510

.L509:
	phisrc.64   %phi87 <- $0
	br          .L511

.L510:
	load.64*    %r2600 <- 0[t]
	load.8      %r2601 <- 11[%r2600]
	cast.32     %r2602 <- (8) %r2601
	shl.64      %r2603 <- $1, %r2602
	phisrc.64   %phi88 <- %r2603
	br          .L511

.L511:
	phi.64      %r2604 <- %phi87, %phi88
	cast.32     %r2605 <- (64) %r2604
	store.32    %r2605 -> 0[nsize]
	load.64*    %r2606 <- 0[L]
	load.64*    %r2607 <- 0[t]
	load.32     %r2608 <- 0[nasize]
	load.32     %r2609 <- 0[nsize]
	push.64*    %r2606
	push.64*    %r2607
	push.32     %r2608
	push.32     %r2609
	call        resize
	br          .L512

.L512:
	ret


rehash:
.L513:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[ek]
	store.32    $0 -> 0[i]
	br          .L517

.L517:
	load.32     %r2610 <- 0[i]
	setle.32    %r2611 <- %r2610, $30
	br          %r2611, .L514, .L516

.L514:
	symaddr.64* %r2612 <- nums
	load.32     %r2613 <- 0[i]
	scast.64    %r2614 <- (32) %r2613
	muls.64     %r2615 <- %r2614, $4
	add.64*     %r2616 <- %r2612, %r2615
	store.32    $0 -> 0[%r2616]
	br          .L515

.L515:
	load.32     %r2617 <- 0[i]
	add.32      %r2618 <- %r2617, $1
	store.32    %r2618 -> 0[i]
	br          .L517

.L516:
	load.64*    %r2619 <- 0[t]
	symaddr.64* %r2620 <- nums
	push.64*    %r2619
	push.64*    %r2620
	call.32     %r2621 <- numusearray
	store.32    %r2621 -> 0[nasize]
	load.32     %r2622 <- 0[nasize]
	store.32    %r2622 -> 0[totaluse]
	load.64*    %r2623 <- 0[t]
	symaddr.64* %r2624 <- nums
	symaddr.64* %r2625 <- nasize
	push.64*    %r2623
	push.64*    %r2624
	push.64*    %r2625
	call.32     %r2626 <- numusehash
	load.32     %r2627 <- 0[totaluse]
	scast.32    %r2628 <- (32) %r2627
	add.32      %r2629 <- %r2628, %r2626
	scast.32    %r2630 <- (32) %r2629
	store.32    %r2630 -> 0[totaluse]
	load.64*    %r2631 <- 0[ek]
	symaddr.64* %r2632 <- nums
	push.64*    %r2631
	push.64*    %r2632
	call.32     %r2633 <- countint
	load.32     %r2634 <- 0[nasize]
	scast.32    %r2635 <- (32) %r2634
	add.32      %r2636 <- %r2635, %r2633
	scast.32    %r2637 <- (32) %r2636
	store.32    %r2637 -> 0[nasize]
	load.32     %r2638 <- 0[totaluse]
	add.32      %r2639 <- %r2638, $1
	store.32    %r2639 -> 0[totaluse]
	symaddr.64* %r2640 <- nums
	symaddr.64* %r2641 <- nasize
	push.64*    %r2640
	push.64*    %r2641
	call.32     %r2642 <- computesizes
	store.32    %r2642 -> 0[na]
	load.64*    %r2643 <- 0[L]
	load.64*    %r2644 <- 0[t]
	load.32     %r2645 <- 0[nasize]
	load.32     %r2646 <- 0[totaluse]
	load.32     %r2647 <- 0[na]
	sub.32      %r2648 <- %r2646, %r2647
	push.64*    %r2643
	push.64*    %r2644
	push.32     %r2645
	push.32     %r2648
	call        resize
	br          .L518

.L518:
	ret


luaH_new:
.L519:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narray]
	store.32    %arg3 -> 0[nhash]
	load.64*    %r2649 <- 0[L]
	push.64*    %r2649
	push.64*    $0
	push.64     $0
	push.64     $64
	call.64*    %r2650 <- luaM_realloc_
	ptrcast.64* %r2651 <- (64) %r2650
	store.64*   %r2651 -> 0[t]
	load.64*    %r2652 <- 0[L]
	load.64*    %r2653 <- 0[t]
	ptrcast.64* %r2654 <- (64) %r2653
	push.64*    %r2652
	push.64*    %r2654
	push.8      $5
	call        luaC_link
	load.64*    %r2655 <- 0[t]
	store.64*   $0 -> 16[%r2655]
	load.64*    %r2656 <- 0[t]
	store.8     $255 -> 10[%r2656]
	load.64*    %r2657 <- 0[t]
	store.64*   $0 -> 24[%r2657]
	load.64*    %r2658 <- 0[t]
	store.32    $0 -> 56[%r2658]
	load.64*    %r2659 <- 0[t]
	store.8     $0 -> 11[%r2659]
	symaddr.64* %r2660 <- dummynode_
	ptrcast.64* %r2661 <- (64) %r2660
	load.64*    %r2662 <- 0[t]
	store.64*   %r2661 -> 32[%r2662]
	load.64*    %r2663 <- 0[L]
	load.64*    %r2664 <- 0[t]
	load.32     %r2665 <- 0[narray]
	push.64*    %r2663
	push.64*    %r2664
	push.32     %r2665
	call        setarrayvector
	load.64*    %r2666 <- 0[L]
	load.64*    %r2667 <- 0[t]
	load.32     %r2668 <- 0[nhash]
	push.64*    %r2666
	push.64*    %r2667
	push.32     %r2668
	call        setnodevector
	load.64*    %r2669 <- 0[t]
	phisrc.64*  %phi89(return) <- %r2669
	br          .L520

.L520:
	phi.64*     %r2670 <- %phi89(return)
	ret.64*     %r2669


luaH_free:
.L521:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	load.64*    %r2671 <- 0[t]
	load.64*    %r2672 <- 32[%r2671]
	symaddr.64* %r2673 <- dummynode_
	setne.32    %r2674 <- %r2672, %r2673
	br          %r2674, .L522, .L523

.L522:
	load.64*    %r2675 <- 0[L]
	load.64*    %r2676 <- 0[t]
	load.64*    %r2677 <- 32[%r2676]
	cast.64*    %r2678 <- (64) %r2677
	load.64*    %r2679 <- 0[t]
	load.8      %r2680 <- 11[%r2679]
	cast.32     %r2681 <- (8) %r2680
	shl.64      %r2682 <- $1, %r2681
	mulu.64     %r2683 <- %r2682, $40
	push.64*    %r2675
	push.64*    %r2678
	push.64     %r2683
	push.64     $0
	call.64*    %r2684 <- luaM_realloc_
	br          .L523

.L523:
	load.64*    %r2685 <- 0[L]
	load.64*    %r2686 <- 0[t]
	load.64*    %r2687 <- 24[%r2686]
	cast.64*    %r2688 <- (64) %r2687
	load.64*    %r2689 <- 0[t]
	load.32     %r2690 <- 56[%r2689]
	scast.64    %r2691 <- (32) %r2690
	mulu.64     %r2692 <- %r2691, $16
	push.64*    %r2685
	push.64*    %r2688
	push.64     %r2692
	push.64     $0
	call.64*    %r2693 <- luaM_realloc_
	load.64*    %r2694 <- 0[L]
	load.64*    %r2695 <- 0[t]
	cast.64*    %r2696 <- (64) %r2695
	push.64*    %r2694
	push.64*    %r2696
	push.64     $64
	push.64     $0
	call.64*    %r2697 <- luaM_realloc_
	br          .L524

.L524:
	ret


getfreepos:
.L525:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	br          .L529

.L529:
	load.64*    %r2698 <- 0[t]
	load.64*    %r2699 <- 40[%r2698]
	sub.64*     %r2700 <- %r2699, $40
	store.64*   %r2700 -> 40[%r2698]
	load.64*    %r2701 <- 0[t]
	load.64*    %r2702 <- 32[%r2701]
	seta.32     %r2703 <- %r2699, %r2702
	br          %r2703, .L526, .L528

.L526:
	load.64*    %r2704 <- 0[t]
	load.64*    %r2705 <- 40[%r2704]
	load.32     %r2706 <- 24[%r2705]
	seteq.32    %r2707 <- %r2706, $0
	br          %r2707, .L530, .L531

.L530:
	load.64*    %r2708 <- 0[t]
	load.64*    %r2709 <- 40[%r2708]
	phisrc.64*  %phi90(return) <- %r2709
	br          .L532

.L531:
	br          .L527

.L527:
	br          .L529

.L528:
	phisrc.64*  %phi91(return) <- $0
	br          .L532

.L532:
	phi.64*     %r2710 <- %phi90(return), %phi91(return)
	ret.64*     %r2710


newkey:
.L533:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2711 <- 0[t]
	load.64*    %r2712 <- 0[key]
	push.64*    %r2711
	push.64*    %r2712
	call.64*    %r2713 <- mainposition
	store.64*   %r2713 -> 0[mp]
	load.64*    %r2714 <- 0[mp]
	load.32     %r2715 <- 8[%r2714]
	seteq.32    %r2716 <- %r2715, $0
	seteq.32    %r2717 <- %r2716, $0
	load.64*    %r2718 <- 0[mp]
	symaddr.64* %r2719 <- dummynode_
	seteq.32    %r2720 <- %r2718, %r2719
	or-bool.32  %r2721 <- %r2717, %r2720
	br          %r2721, .L534, .L535

.L534:
	load.64*    %r2722 <- 0[t]
	push.64*    %r2722
	call.64*    %r2723 <- getfreepos
	store.64*   %r2723 -> 0[n]
	load.64*    %r2724 <- 0[n]
	seteq.32    %r2725 <- %r2724, $0
	br          %r2725, .L536, .L537

.L536:
	load.64*    %r2726 <- 0[L]
	load.64*    %r2727 <- 0[t]
	load.64*    %r2728 <- 0[key]
	push.64*    %r2726
	push.64*    %r2727
	push.64*    %r2728
	call        rehash
	load.64*    %r2729 <- 0[L]
	load.64*    %r2730 <- 0[t]
	load.64*    %r2731 <- 0[key]
	push.64*    %r2729
	push.64*    %r2730
	push.64*    %r2731
	call.64*    %r2732 <- luaH_set
	phisrc.64*  %phi92(return) <- %r2732
	br          .L538

.L537:
	load.64*    %r2734 <- 0[t]
	load.64*    %r2735 <- 0[mp]
	add.64*     %r2736 <- %r2735, $16
	add.64*     %r2737 <- %r2736, $0
	push.64*    %r2734
	push.64*    %r2737
	call.64*    %r2738 <- mainposition
	store.64*   %r2738 -> 0[othern]
	load.64*    %r2739 <- 0[othern]
	load.64*    %r2740 <- 0[mp]
	setne.32    %r2741 <- %r2739, %r2740
	br          %r2741, .L539, .L540

.L539:
	br          .L544

.L544:
	load.64*    %r2742 <- 0[othern]
	load.64*    %r2743 <- 32[%r2742]
	load.64*    %r2744 <- 0[mp]
	setne.32    %r2745 <- %r2743, %r2744
	br          %r2745, .L541, .L543

.L541:
	load.64*    %r2746 <- 0[othern]
	load.64*    %r2747 <- 32[%r2746]
	store.64*   %r2747 -> 0[othern]
	br          .L542

.L542:
	br          .L544

.L543:
	load.64*    %r2748 <- 0[n]
	load.64*    %r2749 <- 0[othern]
	store.64*   %r2748 -> 32[%r2749]
	load.64*    %r2750 <- 0[n]
	cast.64*    %r2751 <- (64) %r2750
	load.64*    %r2752 <- 0[mp]
	cast.64*    %r2753 <- (64) %r2752
	push.64*    %r2751
	push.64*    %r2753
	push.64     $40
	call.64*    %r2754 <- memcpy
	load.64*    %r2755 <- 0[mp]
	store.64*   $0 -> 32[%r2755]
	load.64*    %r2756 <- 0[mp]
	store.32    $0 -> 8[%r2756]
	br          .L545

.L540:
	load.64*    %r2757 <- 0[mp]
	load.64*    %r2758 <- 32[%r2757]
	load.64*    %r2759 <- 0[n]
	store.64*   %r2758 -> 32[%r2759]
	load.64*    %r2760 <- 0[n]
	load.64*    %r2761 <- 0[mp]
	store.64*   %r2760 -> 32[%r2761]
	load.64*    %r2762 <- 0[n]
	store.64*   %r2762 -> 0[mp]
	br          .L545

.L545:
	br          .L535

.L535:
	load.64*    %r2763 <- 0[key]
	load.f64    %r2764 <- 0[%r2763]
	fpcast.f64  %r2765 <- (64) %r2764
	load.64*    %r2766 <- 0[mp]
	store.f64   %r2765 -> 16[%r2766]
	load.64*    %r2767 <- 0[key]
	load.32     %r2768 <- 8[%r2767]
	scast.32    %r2769 <- (32) %r2768
	load.64*    %r2770 <- 0[mp]
	store.32    %r2769 -> 24[%r2770]
	load.64*    %r2771 <- 0[key]
	load.32     %r2772 <- 8[%r2771]
	scast.32    %r2773 <- (32) %r2772
	setge.32    %r2774 <- %r2773, $4
	br          %r2774, .L549, .L547

.L549:
	load.64*    %r2775 <- 0[key]
	load.64*    %r2776 <- 0[%r2775]
	load.8      %r2777 <- 9[%r2776]
	cast.32     %r2778 <- (8) %r2777
	and.32      %r2779 <- %r2778, $3
	br          %r2779, .L548, .L547

.L548:
	load.64*    %r2780 <- 0[t]
	ptrcast.64* %r2781 <- (64) %r2780
	load.8      %r2782 <- 9[%r2781]
	cast.32     %r2783 <- (8) %r2782
	and.32      %r2784 <- %r2783, $4
	br          %r2784, .L546, .L547

.L546:
	load.64*    %r2785 <- 0[L]
	load.64*    %r2786 <- 0[t]
	push.64*    %r2785
	push.64*    %r2786
	call        luaC_barrierback
	br          .L547

.L547:
	load.64*    %r2787 <- 0[mp]
	add.64*     %r2788 <- %r2787, $0
	phisrc.64*  %phi93(return) <- %r2788
	br          .L538

.L538:
	phi.64*     %r2733 <- %phi92(return), %phi93(return)
	ret.64*     %r2733


luaH_getnum:
.L550:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.32    %arg2 -> 0[key]
	load.32     %r2789 <- 0[key]
	scast.32    %r2790 <- (32) %r2789
	sub.32      %r2791 <- %r2790, $1
	load.64*    %r2792 <- 0[t]
	load.32     %r2793 <- 56[%r2792]
	scast.32    %r2794 <- (32) %r2793
	setb.32     %r2795 <- %r2791, %r2794
	br          %r2795, .L551, .L552

.L551:
	load.64*    %r2796 <- 0[t]
	load.64*    %r2797 <- 24[%r2796]
	load.32     %r2798 <- 0[key]
	sub.32      %r2799 <- %r2798, $1
	scast.64    %r2800 <- (32) %r2799
	muls.64     %r2801 <- %r2800, $16
	add.64*     %r2802 <- %r2797, %r2801
	phisrc.64*  %phi94(return) <- %r2802
	br          .L553

.L552:
	load.32     %r2804 <- 0[key]
	fpcast.f64  %r2805 <- (32) %r2804
	store.f64   %r2805 -> 0[nk]
	load.64*    %r2806 <- 0[t]
	load.f64    %r2807 <- 0[nk]
	push.64*    %r2806
	push.f64    %r2807
	call.64*    %r2808 <- hashnum
	store.64*   %r2808 -> 0[n]
	br          .L555

.L555:
	load.64*    %r2809 <- 0[n]
	load.32     %r2810 <- 24[%r2809]
	seteq.32    %r2811 <- %r2810, $3
	br          %r2811, .L560, .L559

.L560:
	load.64*    %r2812 <- 0[n]
	load.f64    %r2813 <- 16[%r2812]
	load.f64    %r2814 <- 0[nk]
	seteq.32    %r2815 <- %r2813, %r2814
	br          %r2815, .L558, .L559

.L558:
	load.64*    %r2816 <- 0[n]
	add.64*     %r2817 <- %r2816, $0
	phisrc.64*  %phi95(return) <- %r2817
	br          .L553

.L559:
	load.64*    %r2818 <- 0[n]
	load.64*    %r2819 <- 32[%r2818]
	store.64*   %r2819 -> 0[n]
	br          .L561

.L561:
	br          .L556

.L556:
	load.64*    %r2820 <- 0[n]
	br          %r2820, .L555, .L557

.L557:
	symaddr.64* %r2821 <- luaO_nilobject_
	phisrc.64*  %phi96(return) <- %r2821
	br          .L553

.L553:
	phi.64*     %r2803 <- %phi94(return), %phi95(return), %phi96(return)
	ret.64*     %r2803


luaH_getstr:
.L562:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r2822 <- 0[t]
	load.64*    %r2823 <- 32[%r2822]
	load.64*    %r2824 <- 0[key]
	load.32     %r2825 <- 12[%r2824]
	cast.64     %r2826 <- (32) %r2825
	load.64*    %r2827 <- 0[t]
	load.8      %r2828 <- 11[%r2827]
	cast.32     %r2829 <- (8) %r2828
	shl.64      %r2830 <- $1, %r2829
	sub.64      %r2831 <- %r2830, $1
	and.64      %r2832 <- %r2826, %r2831
	cast.32     %r2833 <- (64) %r2832
	scast.64    %r2834 <- (32) %r2833
	muls.64     %r2835 <- %r2834, $40
	add.64*     %r2836 <- %r2823, %r2835
	store.64*   %r2836 -> 0[n]
	br          .L563

.L563:
	load.64*    %r2837 <- 0[n]
	load.32     %r2838 <- 24[%r2837]
	seteq.32    %r2839 <- %r2838, $4
	br          %r2839, .L568, .L567

.L568:
	load.64*    %r2840 <- 0[n]
	load.64*    %r2841 <- 16[%r2840]
	add.64*     %r2842 <- %r2841, $0
	load.64*    %r2843 <- 0[key]
	seteq.32    %r2844 <- %r2842, %r2843
	br          %r2844, .L566, .L567

.L566:
	load.64*    %r2845 <- 0[n]
	add.64*     %r2846 <- %r2845, $0
	phisrc.64*  %phi97(return) <- %r2846
	br          .L569

.L567:
	load.64*    %r2848 <- 0[n]
	load.64*    %r2849 <- 32[%r2848]
	store.64*   %r2849 -> 0[n]
	br          .L570

.L570:
	br          .L564

.L564:
	load.64*    %r2850 <- 0[n]
	br          %r2850, .L563, .L565

.L565:
	symaddr.64* %r2851 <- luaO_nilobject_
	phisrc.64*  %phi98(return) <- %r2851
	br          .L569

.L569:
	phi.64*     %r2847 <- %phi97(return), %phi98(return)
	ret.64*     %r2847


luaH_get:
.L571:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r2852 <- 0[key]
	load.32     %r2853 <- 8[%r2852]
	switch.32   %r2853, 0 -> .L573, 3 -> .L575, 4 -> .L574, default -> .L576

.L573:
	symaddr.64* %r2854 <- luaO_nilobject_
	phisrc.64*  %phi99(return) <- %r2854
	br          .L577

.L574:
	load.64*    %r2856 <- 0[t]
	load.64*    %r2857 <- 0[key]
	load.64*    %r2858 <- 0[%r2857]
	add.64*     %r2859 <- %r2858, $0
	push.64*    %r2856
	push.64*    %r2859
	call.64*    %r2860 <- luaH_getstr
	phisrc.64*  %phi100(return) <- %r2860
	br          .L577

.L575:
	load.64*    %r2861 <- 0[key]
	load.f64    %r2862 <- 0[%r2861]
	fpcast.f64  %r2863 <- (64) %r2862
	store.f64   %r2863 -> 0[n]
	load.f64    %r2864 <- 0[n]
	cast.32     %r2865 <- (64) %r2864
	store.32    %r2865 -> 0[k]
	load.32     %r2866 <- 0[k]
	fpcast.f64  %r2867 <- (32) %r2866
	load.64*    %r2868 <- 0[key]
	load.f64    %r2869 <- 0[%r2868]
	fpcast.f64  %r2870 <- (64) %r2869
	seteq.32    %r2871 <- %r2867, %r2870
	br          %r2871, .L578, .L579

.L578:
	load.64*    %r2872 <- 0[t]
	load.32     %r2873 <- 0[k]
	push.64*    %r2872
	push.32     %r2873
	call.64*    %r2874 <- luaH_getnum
	phisrc.64*  %phi101(return) <- %r2874
	br          .L577

.L579:
	br          .L576

.L576:
	load.64*    %r2875 <- 0[t]
	load.64*    %r2876 <- 0[key]
	push.64*    %r2875
	push.64*    %r2876
	call.64*    %r2877 <- mainposition
	store.64*   %r2877 -> 0[n]
	br          .L580

.L580:
	load.64*    %r2878 <- 0[n]
	add.64*     %r2879 <- %r2878, $16
	add.64*     %r2880 <- %r2879, $0
	load.64*    %r2881 <- 0[key]
	push.64*    %r2880
	push.64*    %r2881
	call.32     %r2882 <- luaO_rawequalObj
	br          %r2882, .L583, .L584

.L583:
	load.64*    %r2883 <- 0[n]
	add.64*     %r2884 <- %r2883, $0
	phisrc.64*  %phi102(return) <- %r2884
	br          .L577

.L584:
	load.64*    %r2885 <- 0[n]
	load.64*    %r2886 <- 32[%r2885]
	store.64*   %r2886 -> 0[n]
	br          .L585

.L585:
	br          .L581

.L581:
	load.64*    %r2887 <- 0[n]
	br          %r2887, .L580, .L582

.L582:
	symaddr.64* %r2888 <- luaO_nilobject_
	phisrc.64*  %phi103(return) <- %r2888
	br          .L577

.L577:
	phi.64*     %r2855 <- %phi99(return), %phi100(return), %phi101(return), %phi102(return), %phi103(return)
	ret.64*     %r2855


luaH_set:
.L586:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2889 <- 0[t]
	load.64*    %r2890 <- 0[key]
	push.64*    %r2889
	push.64*    %r2890
	call.64*    %r2891 <- luaH_get
	store.64*   %r2891 -> 0[p]
	load.64*    %r2892 <- 0[t]
	store.8     $0 -> 10[%r2892]
	load.64*    %r2893 <- 0[p]
	symaddr.64* %r2894 <- luaO_nilobject_
	setne.32    %r2895 <- %r2893, %r2894
	br          %r2895, .L587, .L588

.L587:
	load.64*    %r2896 <- 0[p]
	ptrcast.64* %r2897 <- (64) %r2896
	phisrc.64*  %phi104(return) <- %r2897
	br          .L589

.L588:
	load.64*    %r2899 <- 0[key]
	load.32     %r2900 <- 8[%r2899]
	scast.32    %r2901 <- (32) %r2900
	seteq.32    %r2902 <- %r2901, $0
	br          %r2902, .L591, .L592

.L591:
	load.64*    %r2903 <- 0[L]
	symaddr.64* %r2904 <- <anon symbol:0x62d001195380>
	push.64*    %r2903
	push.64*    %r2904
	call        luaG_runerror
	br          .L593

.L592:
	load.64*    %r2905 <- 0[key]
	load.32     %r2906 <- 8[%r2905]
	scast.32    %r2907 <- (32) %r2906
	seteq.32    %r2908 <- %r2907, $3
	br          %r2908, .L596, .L595

.L596:
	load.64*    %r2909 <- 0[key]
	load.f64    %r2910 <- 0[%r2909]
	fpcast.f64  %r2911 <- (64) %r2910
	load.64*    %r2912 <- 0[key]
	load.f64    %r2913 <- 0[%r2912]
	fpcast.f64  %r2914 <- (64) %r2913
	seteq.32    %r2915 <- %r2911, %r2914
	br          %r2915, .L595, .L594

.L594:
	load.64*    %r2916 <- 0[L]
	symaddr.64* %r2917 <- <anon symbol:0x62d001195e60>
	push.64*    %r2916
	push.64*    %r2917
	call        luaG_runerror
	br          .L595

.L595:
	br          .L593

.L593:
	load.64*    %r2918 <- 0[L]
	load.64*    %r2919 <- 0[t]
	load.64*    %r2920 <- 0[key]
	push.64*    %r2918
	push.64*    %r2919
	push.64*    %r2920
	call.64*    %r2921 <- newkey
	phisrc.64*  %phi105(return) <- %r2921
	br          .L589

.L589:
	phi.64*     %r2898 <- %phi104(return), %phi105(return)
	ret.64*     %r2898


luaH_setnum:
.L597:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[key]
	load.64*    %r2922 <- 0[t]
	load.32     %r2923 <- 0[key]
	push.64*    %r2922
	push.32     %r2923
	call.64*    %r2924 <- luaH_getnum
	store.64*   %r2924 -> 0[p]
	load.64*    %r2925 <- 0[p]
	symaddr.64* %r2926 <- luaO_nilobject_
	setne.32    %r2927 <- %r2925, %r2926
	br          %r2927, .L598, .L599

.L598:
	load.64*    %r2928 <- 0[p]
	ptrcast.64* %r2929 <- (64) %r2928
	phisrc.64*  %phi106(return) <- %r2929
	br          .L600

.L599:
	symaddr.64* %r2931 <- k
	store.64*   %r2931 -> 0[i_o]
	load.32     %r2932 <- 0[key]
	fpcast.f64  %r2933 <- (32) %r2932
	load.64*    %r2934 <- 0[i_o]
	store.f64   %r2933 -> 0[%r2934]
	load.64*    %r2935 <- 0[i_o]
	store.32    $3 -> 8[%r2935]
	load.64*    %r2936 <- 0[L]
	load.64*    %r2937 <- 0[t]
	symaddr.64* %r2938 <- k
	push.64*    %r2936
	push.64*    %r2937
	push.64*    %r2938
	call.64*    %r2939 <- newkey
	phisrc.64*  %phi107(return) <- %r2939
	br          .L600

.L600:
	phi.64*     %r2930 <- %phi106(return), %phi107(return)
	ret.64*     %r2930


luaH_setstr:
.L602:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2940 <- 0[t]
	load.64*    %r2941 <- 0[key]
	push.64*    %r2940
	push.64*    %r2941
	call.64*    %r2942 <- luaH_getstr
	store.64*   %r2942 -> 0[p]
	load.64*    %r2943 <- 0[p]
	symaddr.64* %r2944 <- luaO_nilobject_
	setne.32    %r2945 <- %r2943, %r2944
	br          %r2945, .L603, .L604

.L603:
	load.64*    %r2946 <- 0[p]
	ptrcast.64* %r2947 <- (64) %r2946
	phisrc.64*  %phi108(return) <- %r2947
	br          .L605

.L604:
	symaddr.64* %r2949 <- k
	store.64*   %r2949 -> 0[i_o]
	load.64*    %r2950 <- 0[key]
	ptrcast.64* %r2951 <- (64) %r2950
	load.64*    %r2952 <- 0[i_o]
	store.64*   %r2951 -> 0[%r2952]
	load.64*    %r2953 <- 0[i_o]
	store.32    $4 -> 8[%r2953]
	load.64*    %r2954 <- 0[L]
	load.64*    %r2955 <- 0[t]
	symaddr.64* %r2956 <- k
	push.64*    %r2954
	push.64*    %r2955
	push.64*    %r2956
	call.64*    %r2957 <- newkey
	phisrc.64*  %phi109(return) <- %r2957
	br          .L605

.L605:
	phi.64*     %r2948 <- %phi108(return), %phi109(return)
	ret.64*     %r2948


unbound_search:
.L607:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.32    %arg2 -> 0[j]
	load.32     %r2958 <- 0[j]
	store.32    %r2958 -> 0[i]
	load.32     %r2959 <- 0[j]
	add.32      %r2960 <- %r2959, $1
	store.32    %r2960 -> 0[j]
	br          .L611

.L611:
	load.64*    %r2961 <- 0[t]
	load.32     %r2962 <- 0[j]
	cast.32     %r2963 <- (32) %r2962
	push.64*    %r2961
	push.32     %r2963
	call.64*    %r2964 <- luaH_getnum
	load.32     %r2965 <- 8[%r2964]
	scast.32    %r2966 <- (32) %r2965
	seteq.32    %r2967 <- %r2966, $0
	br          %r2967, .L610, .L608

.L608:
	load.32     %r2968 <- 0[j]
	store.32    %r2968 -> 0[i]
	load.32     %r2969 <- 0[j]
	cast.32     %r2970 <- (32) %r2969
	mulu.32     %r2971 <- %r2970, $2
	cast.32     %r2972 <- (32) %r2971
	store.32    %r2972 -> 0[j]
	load.32     %r2973 <- 0[j]
	seta.32     %r2974 <- %r2973, $0x7ffffffd
	br          %r2974, .L612, .L613

.L612:
	store.32    $1 -> 0[i]
	br          .L617

.L617:
	load.64*    %r2975 <- 0[t]
	load.32     %r2976 <- 0[i]
	cast.32     %r2977 <- (32) %r2976
	push.64*    %r2975
	push.32     %r2977
	call.64*    %r2978 <- luaH_getnum
	load.32     %r2979 <- 8[%r2978]
	scast.32    %r2980 <- (32) %r2979
	seteq.32    %r2981 <- %r2980, $0
	br          %r2981, .L616, .L614

.L614:
	load.32     %r2982 <- 0[i]
	add.32      %r2983 <- %r2982, $1
	store.32    %r2983 -> 0[i]
	br          .L615

.L615:
	br          .L617

.L616:
	load.32     %r2984 <- 0[i]
	sub.32      %r2985 <- %r2984, $1
	cast.32     %r2986 <- (32) %r2985
	phisrc.32   %phi110(return) <- %r2986
	br          .L618

.L613:
	br          .L609

.L609:
	br          .L611

.L610:
	br          .L622

.L622:
	load.32     %r2988 <- 0[j]
	load.32     %r2989 <- 0[i]
	sub.32      %r2990 <- %r2988, %r2989
	seta.32     %r2991 <- %r2990, $1
	br          %r2991, .L619, .L621

.L619:
	load.32     %r2992 <- 0[i]
	load.32     %r2993 <- 0[j]
	add.32      %r2994 <- %r2992, %r2993
	divu.32     %r2995 <- %r2994, $2
	store.32    %r2995 -> 0[m]
	load.64*    %r2996 <- 0[t]
	load.32     %r2997 <- 0[m]
	cast.32     %r2998 <- (32) %r2997
	push.64*    %r2996
	push.32     %r2998
	call.64*    %r2999 <- luaH_getnum
	load.32     %r3000 <- 8[%r2999]
	scast.32    %r3001 <- (32) %r3000
	seteq.32    %r3002 <- %r3001, $0
	br          %r3002, .L623, .L624

.L623:
	load.32     %r3003 <- 0[m]
	store.32    %r3003 -> 0[j]
	br          .L625

.L624:
	load.32     %r3004 <- 0[m]
	store.32    %r3004 -> 0[i]
	br          .L625

.L625:
	br          .L620

.L620:
	br          .L622

.L621:
	load.32     %r3005 <- 0[i]
	cast.32     %r3006 <- (32) %r3005
	phisrc.32   %phi111(return) <- %r3006
	br          .L618

.L618:
	phi.32      %r2987 <- %phi110(return), %phi111(return)
	ret.32      %r2987


luaH_getn:
.L626:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	load.64*    %r3007 <- 0[t]
	load.32     %r3008 <- 56[%r3007]
	scast.32    %r3009 <- (32) %r3008
	store.32    %r3009 -> 0[j]
	load.32     %r3010 <- 0[j]
	seta.32     %r3011 <- %r3010, $0
	br          %r3011, .L629, .L628

.L629:
	load.64*    %r3012 <- 0[t]
	load.64*    %r3013 <- 24[%r3012]
	load.32     %r3014 <- 0[j]
	sub.32      %r3015 <- %r3014, $1
	cast.64     %r3016 <- (32) %r3015
	muls.64     %r3017 <- %r3016, $16
	add.64*     %r3018 <- %r3013, %r3017
	load.32     %r3019 <- 8[%r3018]
	seteq.32    %r3020 <- %r3019, $0
	br          %r3020, .L627, .L628

.L627:
	store.32    $0 -> 0[i]
	br          .L633

.L633:
	load.32     %r3021 <- 0[j]
	load.32     %r3022 <- 0[i]
	sub.32      %r3023 <- %r3021, %r3022
	seta.32     %r3024 <- %r3023, $1
	br          %r3024, .L630, .L632

.L630:
	load.32     %r3025 <- 0[i]
	load.32     %r3026 <- 0[j]
	add.32      %r3027 <- %r3025, %r3026
	divu.32     %r3028 <- %r3027, $2
	store.32    %r3028 -> 0[m]
	load.64*    %r3029 <- 0[t]
	load.64*    %r3030 <- 24[%r3029]
	load.32     %r3031 <- 0[m]
	sub.32      %r3032 <- %r3031, $1
	cast.64     %r3033 <- (32) %r3032
	muls.64     %r3034 <- %r3033, $16
	add.64*     %r3035 <- %r3030, %r3034
	load.32     %r3036 <- 8[%r3035]
	seteq.32    %r3037 <- %r3036, $0
	br          %r3037, .L634, .L635

.L634:
	load.32     %r3038 <- 0[m]
	store.32    %r3038 -> 0[j]
	br          .L636

.L635:
	load.32     %r3039 <- 0[m]
	store.32    %r3039 -> 0[i]
	br          .L636

.L636:
	br          .L631

.L631:
	br          .L633

.L632:
	load.32     %r3040 <- 0[i]
	cast.32     %r3041 <- (32) %r3040
	phisrc.32   %phi112(return) <- %r3041
	br          .L637

.L628:
	load.64*    %r3043 <- 0[t]
	load.64*    %r3044 <- 32[%r3043]
	symaddr.64* %r3045 <- dummynode_
	seteq.32    %r3046 <- %r3044, %r3045
	br          %r3046, .L639, .L640

.L639:
	load.32     %r3047 <- 0[j]
	cast.32     %r3048 <- (32) %r3047
	phisrc.32   %phi113(return) <- %r3048
	br          .L637

.L640:
	load.64*    %r3049 <- 0[t]
	load.32     %r3050 <- 0[j]
	push.64*    %r3049
	push.32     %r3050
	call.32     %r3051 <- unbound_search
	phisrc.32   %phi114(return) <- %r3051
	br          .L637

.L637:
	phi.32      %r3042 <- %phi112(return), %phi113(return), %phi114(return)
	ret.32      %r3042


removeentry:
.L642:
	<entry-point>
	store.64*   %arg1 -> 0[n]
	load.64*    %r3052 <- 0[n]
	load.32     %r3053 <- 24[%r3052]
	setge.32    %r3054 <- %r3053, $4
	br          %r3054, .L643, .L644

.L643:
	load.64*    %r3055 <- 0[n]
	store.32    $11 -> 24[%r3055]
	br          .L644

.L644:
	ret


reallymarkobject:
.L645:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[o]
	load.64*    %r3056 <- 0[o]
	load.8      %r3057 <- 9[%r3056]
	cast.32     %r3058 <- (8) %r3057
	and.32      %r3059 <- %r3058, $252
	scast.8     %r3060 <- (32) %r3059
	store.8     %r3060 -> 9[%r3056]
	load.64*    %r3061 <- 0[o]
	load.8      %r3062 <- 8[%r3061]
	switch.8    %r3062, 4 -> .L647, 5 -> .L651, 6 -> .L650, 7 -> .L648, 8 -> .L652, 9 -> .L653, 10 -> .L649, default -> .L654

.L647:
	br          .L655

.L648:
	load.64*    %r3063 <- 0[o]
	load.64*    %r3064 <- 16[%r3063]
	store.64*   %r3064 -> 0[mt]
	load.64*    %r3065 <- 0[o]
	load.8      %r3066 <- 9[%r3065]
	cast.32     %r3067 <- (8) %r3066
	or.32       %r3068 <- %r3067, $4
	scast.8     %r3069 <- (32) %r3068
	store.8     %r3069 -> 9[%r3065]
	load.64*    %r3070 <- 0[mt]
	br          %r3070, .L656, .L657

.L656:
	load.64*    %r3071 <- 0[mt]
	ptrcast.64* %r3072 <- (64) %r3071
	load.8      %r3073 <- 9[%r3072]
	cast.32     %r3074 <- (8) %r3073
	and.32      %r3075 <- %r3074, $3
	br          %r3075, .L658, .L659

.L658:
	load.64*    %r3076 <- 0[g]
	load.64*    %r3077 <- 0[mt]
	ptrcast.64* %r3078 <- (64) %r3077
	push.64*    %r3076
	push.64*    %r3078
	call        reallymarkobject
	br          .L659

.L659:
	br          .L657

.L657:
	load.64*    %r3079 <- 0[o]
	load.64*    %r3080 <- 24[%r3079]
	ptrcast.64* %r3081 <- (64) %r3080
	load.8      %r3082 <- 9[%r3081]
	cast.32     %r3083 <- (8) %r3082
	and.32      %r3084 <- %r3083, $3
	br          %r3084, .L660, .L661

.L660:
	load.64*    %r3085 <- 0[g]
	load.64*    %r3086 <- 0[o]
	load.64*    %r3087 <- 24[%r3086]
	ptrcast.64* %r3088 <- (64) %r3087
	push.64*    %r3085
	push.64*    %r3088
	call        reallymarkobject
	br          .L661

.L661:
	br          .L655

.L649:
	load.64*    %r3089 <- 0[o]
	add.64*     %r3090 <- %r3089, $0
	store.64*   %r3090 -> 0[uv]
	load.64*    %r3091 <- 0[uv]
	load.64*    %r3092 <- 16[%r3091]
	load.32     %r3093 <- 8[%r3092]
	setge.32    %r3094 <- %r3093, $4
	br          %r3094, .L664, .L663

.L664:
	load.64*    %r3095 <- 0[uv]
	load.64*    %r3096 <- 16[%r3095]
	load.64*    %r3097 <- 0[%r3096]
	load.8      %r3098 <- 9[%r3097]
	cast.32     %r3099 <- (8) %r3098
	and.32      %r3100 <- %r3099, $3
	br          %r3100, .L662, .L663

.L662:
	load.64*    %r3101 <- 0[g]
	load.64*    %r3102 <- 0[uv]
	load.64*    %r3103 <- 16[%r3102]
	load.64*    %r3104 <- 0[%r3103]
	push.64*    %r3101
	push.64*    %r3104
	call        reallymarkobject
	br          .L663

.L663:
	load.64*    %r3105 <- 0[uv]
	load.64*    %r3106 <- 16[%r3105]
	load.64*    %r3107 <- 0[uv]
	add.64*     %r3108 <- %r3107, $24
	add.64*     %r3109 <- %r3108, $0
	seteq.32    %r3110 <- %r3106, %r3109
	br          %r3110, .L665, .L666

.L665:
	load.64*    %r3111 <- 0[o]
	load.8      %r3112 <- 9[%r3111]
	cast.32     %r3113 <- (8) %r3112
	or.32       %r3114 <- %r3113, $4
	scast.8     %r3115 <- (32) %r3114
	store.8     %r3115 -> 9[%r3111]
	br          .L666

.L666:
	br          .L655

.L650:
	load.64*    %r3116 <- 0[g]
	load.64*    %r3117 <- 56[%r3116]
	load.64*    %r3118 <- 0[o]
	store.64*   %r3117 -> 16[%r3118]
	load.64*    %r3119 <- 0[o]
	load.64*    %r3120 <- 0[g]
	store.64*   %r3119 -> 56[%r3120]
	br          .L646

.L651:
	load.64*    %r3121 <- 0[g]
	load.64*    %r3122 <- 56[%r3121]
	load.64*    %r3123 <- 0[o]
	store.64*   %r3122 -> 48[%r3123]
	load.64*    %r3124 <- 0[o]
	load.64*    %r3125 <- 0[g]
	store.64*   %r3124 -> 56[%r3125]
	br          .L646

.L652:
	load.64*    %r3126 <- 0[g]
	load.64*    %r3127 <- 56[%r3126]
	load.64*    %r3128 <- 0[o]
	store.64*   %r3127 -> 160[%r3128]
	load.64*    %r3129 <- 0[o]
	load.64*    %r3130 <- 0[g]
	store.64*   %r3129 -> 56[%r3130]
	br          .L646

.L653:
	load.64*    %r3131 <- 0[g]
	load.64*    %r3132 <- 56[%r3131]
	load.64*    %r3133 <- 0[o]
	store.64*   %r3132 -> 104[%r3133]
	load.64*    %r3134 <- 0[o]
	load.64*    %r3135 <- 0[g]
	store.64*   %r3134 -> 56[%r3135]
	br          .L646

.L654:
	br          .L646

.L646:
	br          .L655

.L655:
	ret


marktmu:
.L667:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r3136 <- 0[g]
	load.64*    %r3137 <- 80[%r3136]
	store.64*   %r3137 -> 0[u]
	load.64*    %r3138 <- 0[u]
	br          %r3138, .L668, .L669

.L668:
	br          .L670

.L670:
	load.64*    %r3139 <- 0[u]
	load.64*    %r3140 <- 0[%r3139]
	store.64*   %r3140 -> 0[u]
	load.64*    %r3141 <- 0[u]
	load.8      %r3142 <- 9[%r3141]
	cast.32     %r3143 <- (8) %r3142
	and.32      %r3144 <- %r3143, $248
	load.64*    %r3145 <- 0[g]
	load.8      %r3146 <- 32[%r3145]
	cast.32     %r3147 <- (8) %r3146
	and.32      %r3148 <- %r3147, $3
	scast.8     %r3149 <- (32) %r3148
	cast.32     %r3150 <- (8) %r3149
	or.32       %r3151 <- %r3144, %r3150
	scast.8     %r3152 <- (32) %r3151
	load.64*    %r3153 <- 0[u]
	store.8     %r3152 -> 9[%r3153]
	load.64*    %r3154 <- 0[g]
	load.64*    %r3155 <- 0[u]
	push.64*    %r3154
	push.64*    %r3155
	call        reallymarkobject
	br          .L671

.L671:
	load.64*    %r3156 <- 0[u]
	load.64*    %r3157 <- 0[g]
	load.64*    %r3158 <- 80[%r3157]
	setne.32    %r3159 <- %r3156, %r3158
	br          %r3159, .L670, .L672

.L672:
	br          .L669

.L669:
	ret


luaC_separateudata:
.L673:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[all]
	load.64*    %r3160 <- 0[L]
	load.64*    %r3161 <- 32[%r3160]
	store.64*   %r3161 -> 0[g]
	store.64    $0 -> 0[deadmem]
	load.64*    %r3162 <- 0[g]
	load.64*    %r3163 <- 176[%r3162]
	add.64*     %r3164 <- %r3163, $0
	store.64*   %r3164 -> 0[p]
	br          .L677

.L677:
	load.64*    %r3165 <- 0[p]
	load.64*    %r3166 <- 0[%r3165]
	store.64*   %r3166 -> 0[curr]
	setne.32    %r3167 <- %r3166, $0
	br          %r3167, .L674, .L676

.L674:
	load.64*    %r3168 <- 0[curr]
	load.8      %r3169 <- 9[%r3168]
	cast.32     %r3170 <- (8) %r3169
	and.32      %r3171 <- %r3170, $3
	load.32     %r3172 <- 0[all]
	or-bool.32  %r3173 <- %r3171, %r3172
	br          %r3173, .L680, .L678

.L680:
	load.64*    %r3174 <- 0[curr]
	load.8      %r3175 <- 9[%r3174]
	cast.32     %r3176 <- (8) %r3175
	and.32      %r3177 <- %r3176, $8
	br          %r3177, .L678, .L679

.L678:
	load.64*    %r3178 <- 0[curr]
	add.64*     %r3179 <- %r3178, $0
	add.64*     %r3180 <- %r3179, $0
	store.64*   %r3180 -> 0[p]
	br          .L681

.L679:
	load.64*    %r3181 <- 0[curr]
	load.64*    %r3182 <- 16[%r3181]
	seteq.32    %r3183 <- %r3182, $0
	br          %r3183, .L684, .L685

.L684:
	phisrc.64*  %phi115 <- $0
	br          .L686

.L685:
	load.64*    %r3184 <- 0[curr]
	load.64*    %r3185 <- 16[%r3184]
	load.8      %r3186 <- 10[%r3185]
	cast.32     %r3187 <- (8) %r3186
	and.32      %r3188 <- %r3187, $4
	br          %r3188, .L687, .L688

.L687:
	phisrc.64*  %phi116 <- $0
	br          .L689

.L688:
	load.64*    %r3189 <- 0[curr]
	load.64*    %r3190 <- 16[%r3189]
	load.64*    %r3191 <- 0[L]
	load.64*    %r3192 <- 32[%r3191]
	load.64*    %r3193 <- 312[%r3192]
	push.64*    %r3190
	push.32     $2
	push.64*    %r3193
	call.64*    %r3194 <- luaT_gettm
	phisrc.64*  %phi117 <- %r3194
	br          .L689

.L689:
	phi.64*     %r3195 <- %phi116, %phi117
	phisrc.64*  %phi118 <- %r3195
	br          .L686

.L686:
	phi.64*     %r3196 <- %phi115, %phi118
	seteq.32    %r3197 <- %r3196, $0
	br          %r3197, .L682, .L683

.L682:
	load.64*    %r3198 <- 0[curr]
	load.8      %r3199 <- 9[%r3198]
	cast.32     %r3200 <- (8) %r3199
	or.32       %r3201 <- %r3200, $8
	scast.8     %r3202 <- (32) %r3201
	store.8     %r3202 -> 9[%r3198]
	load.64*    %r3203 <- 0[curr]
	add.64*     %r3204 <- %r3203, $0
	add.64*     %r3205 <- %r3204, $0
	store.64*   %r3205 -> 0[p]
	br          .L690

.L683:
	load.64*    %r3206 <- 0[curr]
	load.64     %r3207 <- 32[%r3206]
	add.64      %r3208 <- $40, %r3207
	load.64     %r3209 <- 0[deadmem]
	cast.64     %r3210 <- (64) %r3209
	add.64      %r3211 <- %r3210, %r3208
	cast.64     %r3212 <- (64) %r3211
	store.64    %r3212 -> 0[deadmem]
	load.64*    %r3213 <- 0[curr]
	load.8      %r3214 <- 9[%r3213]
	cast.32     %r3215 <- (8) %r3214
	or.32       %r3216 <- %r3215, $8
	scast.8     %r3217 <- (32) %r3216
	store.8     %r3217 -> 9[%r3213]
	load.64*    %r3218 <- 0[curr]
	load.64*    %r3219 <- 0[%r3218]
	load.64*    %r3220 <- 0[p]
	store.64*   %r3219 -> 0[%r3220]
	load.64*    %r3221 <- 0[g]
	load.64*    %r3222 <- 80[%r3221]
	seteq.32    %r3223 <- %r3222, $0
	br          %r3223, .L691, .L692

.L691:
	load.64*    %r3224 <- 0[curr]
	load.64*    %r3225 <- 0[curr]
	store.64*   %r3224 -> 0[%r3225]
	load.64*    %r3226 <- 0[g]
	store.64*   %r3224 -> 80[%r3226]
	br          .L693

.L692:
	load.64*    %r3227 <- 0[g]
	load.64*    %r3228 <- 80[%r3227]
	load.64*    %r3229 <- 0[%r3228]
	load.64*    %r3230 <- 0[curr]
	store.64*   %r3229 -> 0[%r3230]
	load.64*    %r3231 <- 0[curr]
	load.64*    %r3232 <- 0[g]
	load.64*    %r3233 <- 80[%r3232]
	store.64*   %r3231 -> 0[%r3233]
	load.64*    %r3234 <- 0[curr]
	load.64*    %r3235 <- 0[g]
	store.64*   %r3234 -> 80[%r3235]
	br          .L693

.L693:
	br          .L690

.L690:
	br          .L681

.L681:
	br          .L675

.L675:
	br          .L677

.L676:
	load.64     %r3236 <- 0[deadmem]
	phisrc.64   %phi119(return) <- %r3236
	br          .L694

.L694:
	phi.64      %r3237 <- %phi119(return)
	ret.64      %r3236


traversetable:
.L695:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[h]
	store.32    $0 -> 0[weakkey]
	store.32    $0 -> 0[weakvalue]
	load.64*    %r3238 <- 0[h]
	load.64*    %r3239 <- 16[%r3238]
	br          %r3239, .L696, .L697

.L696:
	load.64*    %r3240 <- 0[h]
	load.64*    %r3241 <- 16[%r3240]
	ptrcast.64* %r3242 <- (64) %r3241
	load.8      %r3243 <- 9[%r3242]
	cast.32     %r3244 <- (8) %r3243
	and.32      %r3245 <- %r3244, $3
	br          %r3245, .L698, .L699

.L698:
	load.64*    %r3246 <- 0[g]
	load.64*    %r3247 <- 0[h]
	load.64*    %r3248 <- 16[%r3247]
	ptrcast.64* %r3249 <- (64) %r3248
	push.64*    %r3246
	push.64*    %r3249
	call        reallymarkobject
	br          .L699

.L699:
	br          .L697

.L697:
	load.64*    %r3250 <- 0[h]
	load.64*    %r3251 <- 16[%r3250]
	seteq.32    %r3252 <- %r3251, $0
	br          %r3252, .L700, .L701

.L700:
	phisrc.64*  %phi120 <- $0
	br          .L702

.L701:
	load.64*    %r3253 <- 0[h]
	load.64*    %r3254 <- 16[%r3253]
	load.8      %r3255 <- 10[%r3254]
	cast.32     %r3256 <- (8) %r3255
	and.32      %r3257 <- %r3256, $8
	br          %r3257, .L703, .L704

.L703:
	phisrc.64*  %phi121 <- $0
	br          .L705

.L704:
	load.64*    %r3258 <- 0[h]
	load.64*    %r3259 <- 16[%r3258]
	load.64*    %r3260 <- 0[g]
	load.64*    %r3261 <- 320[%r3260]
	push.64*    %r3259
	push.32     $3
	push.64*    %r3261
	call.64*    %r3262 <- luaT_gettm
	phisrc.64*  %phi122 <- %r3262
	br          .L705

.L705:
	phi.64*     %r3263 <- %phi121, %phi122
	phisrc.64*  %phi123 <- %r3263
	br          .L702

.L702:
	phi.64*     %r3264 <- %phi120, %phi123
	store.64*   %r3264 -> 0[mode]
	load.64*    %r3265 <- 0[mode]
	br          %r3265, .L708, .L707

.L708:
	load.64*    %r3266 <- 0[mode]
	load.32     %r3267 <- 8[%r3266]
	scast.32    %r3268 <- (32) %r3267
	seteq.32    %r3269 <- %r3268, $4
	br          %r3269, .L706, .L707

.L706:
	load.64*    %r3270 <- 0[mode]
	load.64*    %r3271 <- 0[%r3270]
	add.64*     %r3272 <- %r3271, $0
	add.64*     %r3273 <- %r3272, $24
	ptrcast.64* %r3274 <- (64) %r3273
	push.64*    %r3274
	push.32     $107
	call.64*    %r3275 <- strchr
	setne.32    %r3276 <- %r3275, $0
	store.32    %r3276 -> 0[weakkey]
	load.64*    %r3277 <- 0[mode]
	load.64*    %r3278 <- 0[%r3277]
	add.64*     %r3279 <- %r3278, $0
	add.64*     %r3280 <- %r3279, $24
	ptrcast.64* %r3281 <- (64) %r3280
	push.64*    %r3281
	push.32     $118
	call.64*    %r3282 <- strchr
	setne.32    %r3283 <- %r3282, $0
	store.32    %r3283 -> 0[weakvalue]
	load.32     %r3284 <- 0[weakkey]
	load.32     %r3285 <- 0[weakvalue]
	or-bool.32  %r3286 <- %r3284, %r3285
	br          %r3286, .L709, .L710

.L709:
	load.64*    %r3287 <- 0[h]
	load.8      %r3288 <- 9[%r3287]
	cast.32     %r3289 <- (8) %r3288
	and.32      %r3290 <- %r3289, $0xffffffe7
	scast.8     %r3291 <- (32) %r3290
	store.8     %r3291 -> 9[%r3287]
	load.32     %r3292 <- 0[weakkey]
	shl.32      %r3293 <- %r3292, $3
	load.32     %r3294 <- 0[weakvalue]
	shl.32      %r3295 <- %r3294, $4
	or.32       %r3296 <- %r3293, %r3295
	scast.8     %r3297 <- (32) %r3296
	cast.32     %r3298 <- (8) %r3297
	load.64*    %r3299 <- 0[h]
	load.8      %r3300 <- 9[%r3299]
	cast.32     %r3301 <- (8) %r3300
	or.32       %r3302 <- %r3301, %r3298
	scast.8     %r3303 <- (32) %r3302
	store.8     %r3303 -> 9[%r3299]
	load.64*    %r3304 <- 0[g]
	load.64*    %r3305 <- 72[%r3304]
	load.64*    %r3306 <- 0[h]
	store.64*   %r3305 -> 48[%r3306]
	load.64*    %r3307 <- 0[h]
	ptrcast.64* %r3308 <- (64) %r3307
	load.64*    %r3309 <- 0[g]
	store.64*   %r3308 -> 72[%r3309]
	br          .L710

.L710:
	br          .L707

.L707:
	load.32     %r3310 <- 0[weakkey]
	load.32     %r3311 <- 0[weakvalue]
	and-bool.32 %r3312 <- %r3310, %r3311
	br          %r3312, .L711, .L712

.L711:
	phisrc.32   %phi124(return) <- $1
	br          .L713

.L712:
	load.32     %r3314 <- 0[weakvalue]
	br          %r3314, .L715, .L714

.L714:
	load.64*    %r3315 <- 0[h]
	load.32     %r3316 <- 56[%r3315]
	store.32    %r3316 -> 0[i]
	br          .L719

.L719:
	load.32     %r3317 <- 0[i]
	sub.32      %r3318 <- %r3317, $1
	store.32    %r3318 -> 0[i]
	br          %r3317, .L716, .L718

.L716:
	load.64*    %r3319 <- 0[h]
	load.64*    %r3320 <- 24[%r3319]
	load.32     %r3321 <- 0[i]
	scast.64    %r3322 <- (32) %r3321
	muls.64     %r3323 <- %r3322, $16
	add.64*     %r3324 <- %r3320, %r3323
	load.32     %r3325 <- 8[%r3324]
	setge.32    %r3326 <- %r3325, $4
	br          %r3326, .L722, .L721

.L722:
	load.64*    %r3327 <- 0[h]
	load.64*    %r3328 <- 24[%r3327]
	load.32     %r3329 <- 0[i]
	scast.64    %r3330 <- (32) %r3329
	muls.64     %r3331 <- %r3330, $16
	add.64*     %r3332 <- %r3328, %r3331
	load.64*    %r3333 <- 0[%r3332]
	load.8      %r3334 <- 9[%r3333]
	cast.32     %r3335 <- (8) %r3334
	and.32      %r3336 <- %r3335, $3
	br          %r3336, .L720, .L721

.L720:
	load.64*    %r3337 <- 0[g]
	load.64*    %r3338 <- 0[h]
	load.64*    %r3339 <- 24[%r3338]
	load.32     %r3340 <- 0[i]
	scast.64    %r3341 <- (32) %r3340
	muls.64     %r3342 <- %r3341, $16
	add.64*     %r3343 <- %r3339, %r3342
	load.64*    %r3344 <- 0[%r3343]
	push.64*    %r3337
	push.64*    %r3344
	call        reallymarkobject
	br          .L721

.L721:
	br          .L717

.L717:
	br          .L719

.L718:
	br          .L715

.L715:
	load.64*    %r3345 <- 0[h]
	load.8      %r3346 <- 11[%r3345]
	cast.32     %r3347 <- (8) %r3346
	shl.64      %r3348 <- $1, %r3347
	cast.32     %r3349 <- (64) %r3348
	store.32    %r3349 -> 0[i]
	br          .L726

.L726:
	load.32     %r3350 <- 0[i]
	sub.32      %r3351 <- %r3350, $1
	store.32    %r3351 -> 0[i]
	br          %r3350, .L723, .L725

.L723:
	load.64*    %r3352 <- 0[h]
	load.64*    %r3353 <- 32[%r3352]
	load.32     %r3354 <- 0[i]
	scast.64    %r3355 <- (32) %r3354
	muls.64     %r3356 <- %r3355, $40
	add.64*     %r3357 <- %r3353, %r3356
	store.64*   %r3357 -> 0[n]
	load.64*    %r3358 <- 0[n]
	load.32     %r3359 <- 8[%r3358]
	seteq.32    %r3360 <- %r3359, $0
	br          %r3360, .L727, .L728

.L727:
	load.64*    %r3361 <- 0[n]
	push.64*    %r3361
	call        removeentry
	br          .L729

.L728:
	load.32     %r3362 <- 0[weakkey]
	br          %r3362, .L731, .L730

.L730:
	load.64*    %r3363 <- 0[n]
	load.32     %r3364 <- 24[%r3363]
	setge.32    %r3365 <- %r3364, $4
	br          %r3365, .L734, .L733

.L734:
	load.64*    %r3366 <- 0[n]
	load.64*    %r3367 <- 16[%r3366]
	load.8      %r3368 <- 9[%r3367]
	cast.32     %r3369 <- (8) %r3368
	and.32      %r3370 <- %r3369, $3
	br          %r3370, .L732, .L733

.L732:
	load.64*    %r3371 <- 0[g]
	load.64*    %r3372 <- 0[n]
	load.64*    %r3373 <- 16[%r3372]
	push.64*    %r3371
	push.64*    %r3373
	call        reallymarkobject
	br          .L733

.L733:
	br          .L731

.L731:
	load.32     %r3374 <- 0[weakvalue]
	br          %r3374, .L736, .L735

.L735:
	load.64*    %r3375 <- 0[n]
	load.32     %r3376 <- 8[%r3375]
	setge.32    %r3377 <- %r3376, $4
	br          %r3377, .L739, .L738

.L739:
	load.64*    %r3378 <- 0[n]
	load.64*    %r3379 <- 0[%r3378]
	load.8      %r3380 <- 9[%r3379]
	cast.32     %r3381 <- (8) %r3380
	and.32      %r3382 <- %r3381, $3
	br          %r3382, .L737, .L738

.L737:
	load.64*    %r3383 <- 0[g]
	load.64*    %r3384 <- 0[n]
	load.64*    %r3385 <- 0[%r3384]
	push.64*    %r3383
	push.64*    %r3385
	call        reallymarkobject
	br          .L738

.L738:
	br          .L736

.L736:
	br          .L729

.L729:
	br          .L724

.L724:
	br          .L726

.L725:
	load.32     %r3386 <- 0[weakkey]
	load.32     %r3387 <- 0[weakvalue]
	or-bool.32  %r3388 <- %r3386, %r3387
	phisrc.32   %phi125(return) <- %r3388
	br          .L713

.L713:
	phi.32      %r3313 <- %phi124(return), %phi125(return)
	ret.32      %r3313


traverseproto:
.L740:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[f]
	load.64*    %r3389 <- 0[f]
	load.64*    %r3390 <- 64[%r3389]
	br          %r3390, .L741, .L742

.L741:
	load.64*    %r3391 <- 0[f]
	load.64*    %r3392 <- 64[%r3391]
	load.8      %r3393 <- 9[%r3392]
	cast.32     %r3394 <- (8) %r3393
	and.32      %r3395 <- %r3394, $252
	scast.8     %r3396 <- (32) %r3395
	store.8     %r3396 -> 9[%r3392]
	br          .L742

.L742:
	store.32    $0 -> 0[i]
	br          .L746

.L746:
	load.32     %r3397 <- 0[i]
	load.64*    %r3398 <- 0[f]
	load.32     %r3399 <- 76[%r3398]
	setlt.32    %r3400 <- %r3397, %r3399
	br          %r3400, .L743, .L745

.L743:
	load.64*    %r3401 <- 0[f]
	load.64*    %r3402 <- 16[%r3401]
	load.32     %r3403 <- 0[i]
	scast.64    %r3404 <- (32) %r3403
	muls.64     %r3405 <- %r3404, $16
	add.64*     %r3406 <- %r3402, %r3405
	load.32     %r3407 <- 8[%r3406]
	setge.32    %r3408 <- %r3407, $4
	br          %r3408, .L749, .L748

.L749:
	load.64*    %r3409 <- 0[f]
	load.64*    %r3410 <- 16[%r3409]
	load.32     %r3411 <- 0[i]
	scast.64    %r3412 <- (32) %r3411
	muls.64     %r3413 <- %r3412, $16
	add.64*     %r3414 <- %r3410, %r3413
	load.64*    %r3415 <- 0[%r3414]
	load.8      %r3416 <- 9[%r3415]
	cast.32     %r3417 <- (8) %r3416
	and.32      %r3418 <- %r3417, $3
	br          %r3418, .L747, .L748

.L747:
	load.64*    %r3419 <- 0[g]
	load.64*    %r3420 <- 0[f]
	load.64*    %r3421 <- 16[%r3420]
	load.32     %r3422 <- 0[i]
	scast.64    %r3423 <- (32) %r3422
	muls.64     %r3424 <- %r3423, $16
	add.64*     %r3425 <- %r3421, %r3424
	load.64*    %r3426 <- 0[%r3425]
	push.64*    %r3419
	push.64*    %r3426
	call        reallymarkobject
	br          .L748

.L748:
	br          .L744

.L744:
	load.32     %r3427 <- 0[i]
	add.32      %r3428 <- %r3427, $1
	store.32    %r3428 -> 0[i]
	br          .L746

.L745:
	store.32    $0 -> 0[i]
	br          .L753

.L753:
	load.32     %r3429 <- 0[i]
	load.64*    %r3430 <- 0[f]
	load.32     %r3431 <- 72[%r3430]
	setlt.32    %r3432 <- %r3429, %r3431
	br          %r3432, .L750, .L752

.L750:
	load.64*    %r3433 <- 0[f]
	load.64*    %r3434 <- 56[%r3433]
	load.32     %r3435 <- 0[i]
	scast.64    %r3436 <- (32) %r3435
	muls.64     %r3437 <- %r3436, $8
	add.64*     %r3438 <- %r3434, %r3437
	load.64*    %r3439 <- 0[%r3438]
	br          %r3439, .L754, .L755

.L754:
	load.64*    %r3440 <- 0[f]
	load.64*    %r3441 <- 56[%r3440]
	load.32     %r3442 <- 0[i]
	scast.64    %r3443 <- (32) %r3442
	muls.64     %r3444 <- %r3443, $8
	add.64*     %r3445 <- %r3441, %r3444
	load.64*    %r3446 <- 0[%r3445]
	load.8      %r3447 <- 9[%r3446]
	cast.32     %r3448 <- (8) %r3447
	and.32      %r3449 <- %r3448, $252
	scast.8     %r3450 <- (32) %r3449
	store.8     %r3450 -> 9[%r3446]
	br          .L755

.L755:
	br          .L751

.L751:
	load.32     %r3451 <- 0[i]
	add.32      %r3452 <- %r3451, $1
	store.32    %r3452 -> 0[i]
	br          .L753

.L752:
	store.32    $0 -> 0[i]
	br          .L759

.L759:
	load.32     %r3453 <- 0[i]
	load.64*    %r3454 <- 0[f]
	load.32     %r3455 <- 88[%r3454]
	setlt.32    %r3456 <- %r3453, %r3455
	br          %r3456, .L756, .L758

.L756:
	load.64*    %r3457 <- 0[f]
	load.64*    %r3458 <- 32[%r3457]
	load.32     %r3459 <- 0[i]
	scast.64    %r3460 <- (32) %r3459
	muls.64     %r3461 <- %r3460, $8
	add.64*     %r3462 <- %r3458, %r3461
	load.64*    %r3463 <- 0[%r3462]
	br          %r3463, .L760, .L761

.L760:
	load.64*    %r3464 <- 0[f]
	load.64*    %r3465 <- 32[%r3464]
	load.32     %r3466 <- 0[i]
	scast.64    %r3467 <- (32) %r3466
	muls.64     %r3468 <- %r3467, $8
	add.64*     %r3469 <- %r3465, %r3468
	load.64*    %r3470 <- 0[%r3469]
	ptrcast.64* %r3471 <- (64) %r3470
	load.8      %r3472 <- 9[%r3471]
	cast.32     %r3473 <- (8) %r3472
	and.32      %r3474 <- %r3473, $3
	br          %r3474, .L762, .L763

.L762:
	load.64*    %r3475 <- 0[g]
	load.64*    %r3476 <- 0[f]
	load.64*    %r3477 <- 32[%r3476]
	load.32     %r3478 <- 0[i]
	scast.64    %r3479 <- (32) %r3478
	muls.64     %r3480 <- %r3479, $8
	add.64*     %r3481 <- %r3477, %r3480
	load.64*    %r3482 <- 0[%r3481]
	ptrcast.64* %r3483 <- (64) %r3482
	push.64*    %r3475
	push.64*    %r3483
	call        reallymarkobject
	br          .L763

.L763:
	br          .L761

.L761:
	br          .L757

.L757:
	load.32     %r3484 <- 0[i]
	add.32      %r3485 <- %r3484, $1
	store.32    %r3485 -> 0[i]
	br          .L759

.L758:
	store.32    $0 -> 0[i]
	br          .L767

.L767:
	load.32     %r3486 <- 0[i]
	load.64*    %r3487 <- 0[f]
	load.32     %r3488 <- 92[%r3487]
	setlt.32    %r3489 <- %r3486, %r3488
	br          %r3489, .L764, .L766

.L764:
	load.64*    %r3490 <- 0[f]
	load.64*    %r3491 <- 48[%r3490]
	load.32     %r3492 <- 0[i]
	scast.64    %r3493 <- (32) %r3492
	muls.64     %r3494 <- %r3493, $16
	add.64*     %r3495 <- %r3491, %r3494
	load.64*    %r3496 <- 0[%r3495]
	br          %r3496, .L768, .L769

.L768:
	load.64*    %r3497 <- 0[f]
	load.64*    %r3498 <- 48[%r3497]
	load.32     %r3499 <- 0[i]
	scast.64    %r3500 <- (32) %r3499
	muls.64     %r3501 <- %r3500, $16
	add.64*     %r3502 <- %r3498, %r3501
	load.64*    %r3503 <- 0[%r3502]
	load.8      %r3504 <- 9[%r3503]
	cast.32     %r3505 <- (8) %r3504
	and.32      %r3506 <- %r3505, $252
	scast.8     %r3507 <- (32) %r3506
	store.8     %r3507 -> 9[%r3503]
	br          .L769

.L769:
	br          .L765

.L765:
	load.32     %r3508 <- 0[i]
	add.32      %r3509 <- %r3508, $1
	store.32    %r3509 -> 0[i]
	br          .L767

.L766:
	ret


traverseclosure:
.L770:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[cl]
	load.64*    %r3510 <- 0[cl]
	load.64*    %r3511 <- 24[%r3510]
	ptrcast.64* %r3512 <- (64) %r3511
	load.8      %r3513 <- 9[%r3512]
	cast.32     %r3514 <- (8) %r3513
	and.32      %r3515 <- %r3514, $3
	br          %r3515, .L771, .L772

.L771:
	load.64*    %r3516 <- 0[g]
	load.64*    %r3517 <- 0[cl]
	load.64*    %r3518 <- 24[%r3517]
	ptrcast.64* %r3519 <- (64) %r3518
	push.64*    %r3516
	push.64*    %r3519
	call        reallymarkobject
	br          .L772

.L772:
	load.64*    %r3520 <- 0[cl]
	load.8      %r3521 <- 10[%r3520]
	br          %r3521, .L773, .L774

.L773:
	store.32    $0 -> 0[i]
	br          .L778

.L778:
	load.32     %r3522 <- 0[i]
	load.64*    %r3523 <- 0[cl]
	load.8      %r3524 <- 11[%r3523]
	cast.32     %r3525 <- (8) %r3524
	setlt.32    %r3526 <- %r3522, %r3525
	br          %r3526, .L775, .L777

.L775:
	load.64*    %r3527 <- 0[cl]
	add.64*     %r3528 <- %r3527, $0
	add.64*     %r3529 <- %r3528, $40
	load.32     %r3530 <- 0[i]
	scast.64    %r3531 <- (32) %r3530
	muls.64     %r3532 <- %r3531, $16
	add.64*     %r3533 <- %r3529, %r3532
	load.32     %r3534 <- 8[%r3533]
	setge.32    %r3535 <- %r3534, $4
	br          %r3535, .L781, .L780

.L781:
	load.64*    %r3536 <- 0[cl]
	add.64*     %r3537 <- %r3536, $0
	add.64*     %r3538 <- %r3537, $40
	load.32     %r3539 <- 0[i]
	scast.64    %r3540 <- (32) %r3539
	muls.64     %r3541 <- %r3540, $16
	add.64*     %r3542 <- %r3538, %r3541
	load.64*    %r3543 <- 0[%r3542]
	load.8      %r3544 <- 9[%r3543]
	cast.32     %r3545 <- (8) %r3544
	and.32      %r3546 <- %r3545, $3
	br          %r3546, .L779, .L780

.L779:
	load.64*    %r3547 <- 0[g]
	load.64*    %r3548 <- 0[cl]
	add.64*     %r3549 <- %r3548, $0
	add.64*     %r3550 <- %r3549, $40
	load.32     %r3551 <- 0[i]
	scast.64    %r3552 <- (32) %r3551
	muls.64     %r3553 <- %r3552, $16
	add.64*     %r3554 <- %r3550, %r3553
	load.64*    %r3555 <- 0[%r3554]
	push.64*    %r3547
	push.64*    %r3555
	call        reallymarkobject
	br          .L780

.L780:
	br          .L776

.L776:
	load.32     %r3556 <- 0[i]
	add.32      %r3557 <- %r3556, $1
	store.32    %r3557 -> 0[i]
	br          .L778

.L777:
	br          .L782

.L774:
	load.64*    %r3558 <- 0[cl]
	load.64*    %r3559 <- 32[%r3558]
	ptrcast.64* %r3560 <- (64) %r3559
	load.8      %r3561 <- 9[%r3560]
	cast.32     %r3562 <- (8) %r3561
	and.32      %r3563 <- %r3562, $3
	br          %r3563, .L783, .L784

.L783:
	load.64*    %r3564 <- 0[g]
	load.64*    %r3565 <- 0[cl]
	load.64*    %r3566 <- 32[%r3565]
	ptrcast.64* %r3567 <- (64) %r3566
	push.64*    %r3564
	push.64*    %r3567
	call        reallymarkobject
	br          .L784

.L784:
	store.32    $0 -> 0[i]
	br          .L788

.L788:
	load.32     %r3568 <- 0[i]
	load.64*    %r3569 <- 0[cl]
	load.8      %r3570 <- 11[%r3569]
	cast.32     %r3571 <- (8) %r3570
	setlt.32    %r3572 <- %r3568, %r3571
	br          %r3572, .L785, .L787

.L785:
	load.64*    %r3573 <- 0[cl]
	add.64*     %r3574 <- %r3573, $0
	add.64*     %r3575 <- %r3574, $40
	load.32     %r3576 <- 0[i]
	scast.64    %r3577 <- (32) %r3576
	muls.64     %r3578 <- %r3577, $8
	add.64*     %r3579 <- %r3575, %r3578
	load.64*    %r3580 <- 0[%r3579]
	ptrcast.64* %r3581 <- (64) %r3580
	load.8      %r3582 <- 9[%r3581]
	cast.32     %r3583 <- (8) %r3582
	and.32      %r3584 <- %r3583, $3
	br          %r3584, .L789, .L790

.L789:
	load.64*    %r3585 <- 0[g]
	load.64*    %r3586 <- 0[cl]
	add.64*     %r3587 <- %r3586, $0
	add.64*     %r3588 <- %r3587, $40
	load.32     %r3589 <- 0[i]
	scast.64    %r3590 <- (32) %r3589
	muls.64     %r3591 <- %r3590, $8
	add.64*     %r3592 <- %r3588, %r3591
	load.64*    %r3593 <- 0[%r3592]
	ptrcast.64* %r3594 <- (64) %r3593
	push.64*    %r3585
	push.64*    %r3594
	call        reallymarkobject
	br          .L790

.L790:
	br          .L786

.L786:
	load.32     %r3595 <- 0[i]
	add.32      %r3596 <- %r3595, $1
	store.32    %r3596 -> 0[i]
	br          .L788

.L787:
	br          .L782

.L782:
	ret


checkstacksizes:
.L791:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[max]
	load.64*    %r3597 <- 0[L]
	load.64*    %r3598 <- 40[%r3597]
	load.64*    %r3599 <- 0[L]
	load.64*    %r3600 <- 80[%r3599]
	sub.64      %r3601 <- %r3598, %r3600
	divs.64     %r3602 <- %r3601, $40
	scast.32    %r3603 <- (64) %r3602
	store.32    %r3603 -> 0[ci_used]
	load.64*    %r3604 <- 0[max]
	load.64*    %r3605 <- 0[L]
	load.64*    %r3606 <- 64[%r3605]
	sub.64      %r3607 <- %r3604, %r3606
	divs.64     %r3608 <- %r3607, $16
	scast.32    %r3609 <- (64) %r3608
	store.32    %r3609 -> 0[s_used]
	load.64*    %r3610 <- 0[L]
	load.32     %r3611 <- 92[%r3610]
	setgt.32    %r3612 <- %r3611, $0x4e20
	br          %r3612, .L792, .L793

.L792:
	br          .L794

.L793:
	load.32     %r3613 <- 0[ci_used]
	muls.32     %r3614 <- $4, %r3613
	load.64*    %r3615 <- 0[L]
	load.32     %r3616 <- 92[%r3615]
	setlt.32    %r3617 <- %r3614, %r3616
	br          %r3617, .L797, .L796

.L797:
	load.64*    %r3618 <- 0[L]
	load.32     %r3619 <- 92[%r3618]
	setlt.32    %r3620 <- $16, %r3619
	br          %r3620, .L795, .L796

.L795:
	load.64*    %r3621 <- 0[L]
	load.64*    %r3622 <- 0[L]
	load.32     %r3623 <- 92[%r3622]
	divs.32     %r3624 <- %r3623, $2
	push.64*    %r3621
	push.32     %r3624
	call        luaD_reallocCI
	br          .L796

.L796:
	load.32     %r3625 <- 0[s_used]
	muls.32     %r3626 <- $4, %r3625
	load.64*    %r3627 <- 0[L]
	load.32     %r3628 <- 88[%r3627]
	setlt.32    %r3629 <- %r3626, %r3628
	br          %r3629, .L800, .L799

.L800:
	load.64*    %r3630 <- 0[L]
	load.32     %r3631 <- 88[%r3630]
	setlt.32    %r3632 <- $90, %r3631
	br          %r3632, .L798, .L799

.L798:
	load.64*    %r3633 <- 0[L]
	load.64*    %r3634 <- 0[L]
	load.32     %r3635 <- 88[%r3634]
	divs.32     %r3636 <- %r3635, $2
	push.64*    %r3633
	push.32     %r3636
	call        luaD_reallocstack
	br          .L799

.L799:
	br          .L794

.L794:
	ret


traversestack:
.L801:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[l]
	load.64*    %r3637 <- 0[l]
	load.32     %r3638 <- 128[%r3637]
	setge.32    %r3639 <- %r3638, $4
	br          %r3639, .L804, .L803

.L804:
	load.64*    %r3640 <- 0[l]
	load.64*    %r3641 <- 120[%r3640]
	load.8      %r3642 <- 9[%r3641]
	cast.32     %r3643 <- (8) %r3642
	and.32      %r3644 <- %r3643, $3
	br          %r3644, .L802, .L803

.L802:
	load.64*    %r3645 <- 0[g]
	load.64*    %r3646 <- 0[l]
	load.64*    %r3647 <- 120[%r3646]
	push.64*    %r3645
	push.64*    %r3647
	call        reallymarkobject
	br          .L803

.L803:
	load.64*    %r3648 <- 0[l]
	load.64*    %r3649 <- 16[%r3648]
	store.64*   %r3649 -> 0[lim]
	load.64*    %r3650 <- 0[l]
	load.64*    %r3651 <- 80[%r3650]
	store.64*   %r3651 -> 0[ci]
	br          .L808

.L808:
	load.64*    %r3652 <- 0[ci]
	load.64*    %r3653 <- 0[l]
	load.64*    %r3654 <- 40[%r3653]
	setbe.32    %r3655 <- %r3652, %r3654
	br          %r3655, .L805, .L807

.L805:
	load.64*    %r3656 <- 0[lim]
	load.64*    %r3657 <- 0[ci]
	load.64*    %r3658 <- 16[%r3657]
	setb.32     %r3659 <- %r3656, %r3658
	br          %r3659, .L809, .L810

.L809:
	load.64*    %r3660 <- 0[ci]
	load.64*    %r3661 <- 16[%r3660]
	store.64*   %r3661 -> 0[lim]
	br          .L810

.L810:
	br          .L806

.L806:
	load.64*    %r3662 <- 0[ci]
	add.64*     %r3663 <- %r3662, $40
	store.64*   %r3663 -> 0[ci]
	br          .L808

.L807:
	load.64*    %r3664 <- 0[l]
	load.64*    %r3665 <- 64[%r3664]
	store.64*   %r3665 -> 0[o]
	br          .L814

.L814:
	load.64*    %r3666 <- 0[o]
	load.64*    %r3667 <- 0[l]
	load.64*    %r3668 <- 16[%r3667]
	setb.32     %r3669 <- %r3666, %r3668
	br          %r3669, .L811, .L813

.L811:
	load.64*    %r3670 <- 0[o]
	load.32     %r3671 <- 8[%r3670]
	setge.32    %r3672 <- %r3671, $4
	br          %r3672, .L817, .L816

.L817:
	load.64*    %r3673 <- 0[o]
	load.64*    %r3674 <- 0[%r3673]
	load.8      %r3675 <- 9[%r3674]
	cast.32     %r3676 <- (8) %r3675
	and.32      %r3677 <- %r3676, $3
	br          %r3677, .L815, .L816

.L815:
	load.64*    %r3678 <- 0[g]
	load.64*    %r3679 <- 0[o]
	load.64*    %r3680 <- 0[%r3679]
	push.64*    %r3678
	push.64*    %r3680
	call        reallymarkobject
	br          .L816

.L816:
	br          .L812

.L812:
	load.64*    %r3681 <- 0[o]
	add.64*     %r3682 <- %r3681, $16
	store.64*   %r3682 -> 0[o]
	br          .L814

.L813:
	br          .L821

.L821:
	load.64*    %r3683 <- 0[o]
	load.64*    %r3684 <- 0[lim]
	setbe.32    %r3685 <- %r3683, %r3684
	br          %r3685, .L818, .L820

.L818:
	load.64*    %r3686 <- 0[o]
	store.32    $0 -> 8[%r3686]
	br          .L819

.L819:
	load.64*    %r3687 <- 0[o]
	add.64*     %r3688 <- %r3687, $16
	store.64*   %r3688 -> 0[o]
	br          .L821

.L820:
	load.64*    %r3689 <- 0[l]
	load.64*    %r3690 <- 0[lim]
	push.64*    %r3689
	push.64*    %r3690
	call        checkstacksizes
	br          .L822

.L822:
	ret


propagatemark:
.L823:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r3691 <- 0[g]
	load.64*    %r3692 <- 56[%r3691]
	store.64*   %r3692 -> 0[o]
	load.64*    %r3693 <- 0[o]
	load.8      %r3694 <- 9[%r3693]
	cast.32     %r3695 <- (8) %r3694
	or.32       %r3696 <- %r3695, $4
	scast.8     %r3697 <- (32) %r3696
	store.8     %r3697 -> 9[%r3693]
	load.64*    %r3698 <- 0[o]
	load.8      %r3699 <- 8[%r3698]
	switch.8    %r3699, 5 -> .L825, 6 -> .L826, 8 -> .L827, 9 -> .L828, default -> .L829

.L825:
	load.64*    %r3700 <- 0[o]
	add.64*     %r3701 <- %r3700, $0
	store.64*   %r3701 -> 0[h]
	load.64*    %r3702 <- 0[h]
	load.64*    %r3703 <- 48[%r3702]
	load.64*    %r3704 <- 0[g]
	store.64*   %r3703 -> 56[%r3704]
	load.64*    %r3705 <- 0[g]
	load.64*    %r3706 <- 0[h]
	push.64*    %r3705
	push.64*    %r3706
	call.32     %r3707 <- traversetable
	br          %r3707, .L830, .L831

.L830:
	load.64*    %r3708 <- 0[o]
	load.8      %r3709 <- 9[%r3708]
	cast.32     %r3710 <- (8) %r3709
	and.32      %r3711 <- %r3710, $251
	scast.8     %r3712 <- (32) %r3711
	store.8     %r3712 -> 9[%r3708]
	br          .L831

.L831:
	load.64*    %r3713 <- 0[h]
	load.32     %r3714 <- 56[%r3713]
	scast.64    %r3715 <- (32) %r3714
	mulu.64     %r3716 <- $16, %r3715
	add.64      %r3717 <- $64, %r3716
	load.64*    %r3718 <- 0[h]
	load.8      %r3719 <- 11[%r3718]
	cast.32     %r3720 <- (8) %r3719
	shl.64      %r3721 <- $1, %r3720
	mulu.64     %r3722 <- $40, %r3721
	add.64      %r3723 <- %r3717, %r3722
	cast.64     %r3724 <- (64) %r3723
	phisrc.64   %phi126(return) <- %r3724
	br          .L832

.L826:
	load.64*    %r3726 <- 0[o]
	add.64*     %r3727 <- %r3726, $0
	store.64*   %r3727 -> 0[cl]
	load.64*    %r3728 <- 0[cl]
	load.64*    %r3729 <- 16[%r3728]
	load.64*    %r3730 <- 0[g]
	store.64*   %r3729 -> 56[%r3730]
	load.64*    %r3731 <- 0[g]
	load.64*    %r3732 <- 0[cl]
	push.64*    %r3731
	push.64*    %r3732
	call        traverseclosure
	load.64*    %r3733 <- 0[cl]
	load.8      %r3734 <- 10[%r3733]
	br          %r3734, .L833, .L834

.L833:
	load.64*    %r3735 <- 0[cl]
	load.8      %r3736 <- 11[%r3735]
	cast.32     %r3737 <- (8) %r3736
	sub.32      %r3738 <- %r3737, $1
	scast.64    %r3739 <- (32) %r3738
	mulu.64     %r3740 <- $16, %r3739
	cast.32     %r3741 <- (64) %r3740
	add.32      %r3742 <- $56, %r3741
	phisrc.32   %phi127 <- %r3742
	br          .L835

.L834:
	load.64*    %r3743 <- 0[cl]
	load.8      %r3744 <- 11[%r3743]
	cast.32     %r3745 <- (8) %r3744
	sub.32      %r3746 <- %r3745, $1
	scast.64    %r3747 <- (32) %r3746
	mulu.64     %r3748 <- $8, %r3747
	cast.32     %r3749 <- (64) %r3748
	add.32      %r3750 <- $48, %r3749
	phisrc.32   %phi128 <- %r3750
	br          .L835

.L835:
	phi.32      %r3751 <- %phi127, %phi128
	scast.64    %r3752 <- (32) %r3751
	phisrc.64   %phi129(return) <- %r3752
	br          .L832

.L827:
	load.64*    %r3753 <- 0[o]
	add.64*     %r3754 <- %r3753, $0
	store.64*   %r3754 -> 0[th]
	load.64*    %r3755 <- 0[th]
	load.64*    %r3756 <- 160[%r3755]
	load.64*    %r3757 <- 0[g]
	store.64*   %r3756 -> 56[%r3757]
	load.64*    %r3758 <- 0[g]
	load.64*    %r3759 <- 64[%r3758]
	load.64*    %r3760 <- 0[th]
	store.64*   %r3759 -> 160[%r3760]
	load.64*    %r3761 <- 0[o]
	load.64*    %r3762 <- 0[g]
	store.64*   %r3761 -> 64[%r3762]
	load.64*    %r3763 <- 0[o]
	load.8      %r3764 <- 9[%r3763]
	cast.32     %r3765 <- (8) %r3764
	and.32      %r3766 <- %r3765, $251
	scast.8     %r3767 <- (32) %r3766
	store.8     %r3767 -> 9[%r3763]
	load.64*    %r3768 <- 0[g]
	load.64*    %r3769 <- 0[th]
	push.64*    %r3768
	push.64*    %r3769
	call        traversestack
	load.64*    %r3770 <- 0[th]
	load.32     %r3771 <- 88[%r3770]
	scast.64    %r3772 <- (32) %r3771
	mulu.64     %r3773 <- $16, %r3772
	add.64      %r3774 <- $184, %r3773
	load.64*    %r3775 <- 0[th]
	load.32     %r3776 <- 92[%r3775]
	scast.64    %r3777 <- (32) %r3776
	mulu.64     %r3778 <- $40, %r3777
	add.64      %r3779 <- %r3774, %r3778
	cast.64     %r3780 <- (64) %r3779
	phisrc.64   %phi130(return) <- %r3780
	br          .L832

.L828:
	load.64*    %r3781 <- 0[o]
	add.64*     %r3782 <- %r3781, $0
	store.64*   %r3782 -> 0[p]
	load.64*    %r3783 <- 0[p]
	load.64*    %r3784 <- 104[%r3783]
	load.64*    %r3785 <- 0[g]
	store.64*   %r3784 -> 56[%r3785]
	load.64*    %r3786 <- 0[g]
	load.64*    %r3787 <- 0[p]
	push.64*    %r3786
	push.64*    %r3787
	call        traverseproto
	load.64*    %r3788 <- 0[p]
	load.32     %r3789 <- 80[%r3788]
	scast.64    %r3790 <- (32) %r3789
	mulu.64     %r3791 <- $4, %r3790
	add.64      %r3792 <- $120, %r3791
	load.64*    %r3793 <- 0[p]
	load.32     %r3794 <- 88[%r3793]
	scast.64    %r3795 <- (32) %r3794
	mulu.64     %r3796 <- $8, %r3795
	add.64      %r3797 <- %r3792, %r3796
	load.64*    %r3798 <- 0[p]
	load.32     %r3799 <- 76[%r3798]
	scast.64    %r3800 <- (32) %r3799
	mulu.64     %r3801 <- $16, %r3800
	add.64      %r3802 <- %r3797, %r3801
	load.64*    %r3803 <- 0[p]
	load.32     %r3804 <- 84[%r3803]
	scast.64    %r3805 <- (32) %r3804
	mulu.64     %r3806 <- $4, %r3805
	add.64      %r3807 <- %r3802, %r3806
	load.64*    %r3808 <- 0[p]
	load.32     %r3809 <- 92[%r3808]
	scast.64    %r3810 <- (32) %r3809
	mulu.64     %r3811 <- $16, %r3810
	add.64      %r3812 <- %r3807, %r3811
	load.64*    %r3813 <- 0[p]
	load.32     %r3814 <- 72[%r3813]
	scast.64    %r3815 <- (32) %r3814
	mulu.64     %r3816 <- $8, %r3815
	add.64      %r3817 <- %r3812, %r3816
	cast.64     %r3818 <- (64) %r3817
	phisrc.64   %phi131(return) <- %r3818
	br          .L832

.L829:
	phisrc.64   %phi132(return) <- $0
	br          .L832

.L832:
	phi.64      %r3725 <- %phi126(return), %phi129(return), %phi130(return), %phi131(return), %phi132(return)
	ret.64      %r3725


propagateall:
.L836:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64    $0 -> 0[m]
	br          .L840

.L840:
	load.64*    %r3819 <- 0[g]
	load.64*    %r3820 <- 56[%r3819]
	br          %r3820, .L837, .L839

.L837:
	load.64*    %r3821 <- 0[g]
	push.64*    %r3821
	call.64     %r3822 <- propagatemark
	scast.64    %r3823 <- (64) %r3822
	load.64     %r3824 <- 0[m]
	cast.64     %r3825 <- (64) %r3824
	add.64      %r3826 <- %r3825, %r3823
	cast.64     %r3827 <- (64) %r3826
	store.64    %r3827 -> 0[m]
	br          .L838

.L838:
	br          .L840

.L839:
	load.64     %r3828 <- 0[m]
	phisrc.64   %phi133(return) <- %r3828
	br          .L841

.L841:
	phi.64      %r3829 <- %phi133(return)
	ret.64      %r3828


iscleared:
.L842:
	<entry-point>
	store.64*   %arg1 -> 0[o]
	store.32    %arg2 -> 0[iskey]
	load.64*    %r3830 <- 0[o]
	load.32     %r3831 <- 8[%r3830]
	scast.32    %r3832 <- (32) %r3831
	setge.32    %r3833 <- %r3832, $4
	br          %r3833, .L844, .L843

.L843:
	phisrc.32   %phi134(return) <- $0
	br          .L845

.L844:
	load.64*    %r3835 <- 0[o]
	load.32     %r3836 <- 8[%r3835]
	scast.32    %r3837 <- (32) %r3836
	seteq.32    %r3838 <- %r3837, $4
	br          %r3838, .L846, .L847

.L846:
	load.64*    %r3839 <- 0[o]
	load.64*    %r3840 <- 0[%r3839]
	load.8      %r3841 <- 9[%r3840]
	cast.32     %r3842 <- (8) %r3841
	and.32      %r3843 <- %r3842, $252
	scast.8     %r3844 <- (32) %r3843
	store.8     %r3844 -> 9[%r3840]
	phisrc.32   %phi135(return) <- $0
	br          .L845

.L847:
	load.64*    %r3845 <- 0[o]
	load.64*    %r3846 <- 0[%r3845]
	load.8      %r3847 <- 9[%r3846]
	cast.32     %r3848 <- (8) %r3847
	and.32      %r3849 <- %r3848, $3
	br          %r3849, .L848, .L849

.L848:
	phisrc.32   %phi136 <- $1
	br          .L850

.L849:
	load.64*    %r3850 <- 0[o]
	load.32     %r3851 <- 8[%r3850]
	scast.32    %r3852 <- (32) %r3851
	seteq.32    %r3853 <- %r3852, $7
	br          %r3853, .L851, .L852

.L851:
	load.32     %r3854 <- 0[iskey]
	br          %r3854, .L855, .L854

.L854:
	load.64*    %r3855 <- 0[o]
	load.64*    %r3856 <- 0[%r3855]
	load.8      %r3857 <- 9[%r3856]
	cast.32     %r3858 <- (8) %r3857
	and.32      %r3859 <- %r3858, $8
	phisrc.32   %phi137 <- %r3859
	br          .L856

.L855:
	phisrc.32   %phi138 <- $0
	br          .L856

.L856:
	phi.32      %r3860 <- %phi137, %phi138
	phisrc.32   %phi139 <- %r3860
	br          .L853

.L852:
	phisrc.32   %phi140 <- $0
	br          .L853

.L853:
	phi.32      %r3861 <- %phi139, %phi140
	phisrc.32   %phi141 <- %r3861
	br          .L850

.L850:
	phi.32      %r3862 <- %phi136, %phi141
	phisrc.32   %phi142(return) <- %r3862
	br          .L845

.L845:
	phi.32      %r3834 <- %phi134(return), %phi135(return), %phi142(return)
	ret.32      %r3834


cleartable:
.L857:
	<entry-point>
	store.64*   %arg1 -> 0[l]
	br          .L861

.L861:
	load.64*    %r3863 <- 0[l]
	br          %r3863, .L858, .L860

.L858:
	load.64*    %r3864 <- 0[l]
	add.64*     %r3865 <- %r3864, $0
	store.64*   %r3865 -> 0[h]
	load.64*    %r3866 <- 0[h]
	load.32     %r3867 <- 56[%r3866]
	store.32    %r3867 -> 0[i]
	load.64*    %r3868 <- 0[h]
	load.8      %r3869 <- 9[%r3868]
	cast.32     %r3870 <- (8) %r3869
	and.32      %r3871 <- %r3870, $16
	br          %r3871, .L862, .L863

.L862:
	br          .L867

.L867:
	load.32     %r3872 <- 0[i]
	sub.32      %r3873 <- %r3872, $1
	store.32    %r3873 -> 0[i]
	br          %r3872, .L864, .L866

.L864:
	load.64*    %r3874 <- 0[h]
	load.64*    %r3875 <- 24[%r3874]
	load.32     %r3876 <- 0[i]
	scast.64    %r3877 <- (32) %r3876
	muls.64     %r3878 <- %r3877, $16
	add.64*     %r3879 <- %r3875, %r3878
	store.64*   %r3879 -> 0[o]
	load.64*    %r3880 <- 0[o]
	push.64*    %r3880
	push.32     $0
	call.32     %r3881 <- iscleared
	br          %r3881, .L868, .L869

.L868:
	load.64*    %r3882 <- 0[o]
	store.32    $0 -> 8[%r3882]
	br          .L869

.L869:
	br          .L865

.L865:
	br          .L867

.L866:
	br          .L863

.L863:
	load.64*    %r3883 <- 0[h]
	load.8      %r3884 <- 11[%r3883]
	cast.32     %r3885 <- (8) %r3884
	shl.64      %r3886 <- $1, %r3885
	cast.32     %r3887 <- (64) %r3886
	store.32    %r3887 -> 0[i]
	br          .L873

.L873:
	load.32     %r3888 <- 0[i]
	sub.32      %r3889 <- %r3888, $1
	store.32    %r3889 -> 0[i]
	br          %r3888, .L870, .L872

.L870:
	load.64*    %r3890 <- 0[h]
	load.64*    %r3891 <- 32[%r3890]
	load.32     %r3892 <- 0[i]
	scast.64    %r3893 <- (32) %r3892
	muls.64     %r3894 <- %r3893, $40
	add.64*     %r3895 <- %r3891, %r3894
	store.64*   %r3895 -> 0[n]
	load.64*    %r3896 <- 0[n]
	load.32     %r3897 <- 8[%r3896]
	seteq.32    %r3898 <- %r3897, $0
	br          %r3898, .L875, .L876

.L876:
	load.64*    %r3899 <- 0[n]
	add.64*     %r3900 <- %r3899, $16
	add.64*     %r3901 <- %r3900, $0
	push.64*    %r3901
	push.32     $1
	call.32     %r3902 <- iscleared
	br          %r3902, .L874, .L877

.L877:
	load.64*    %r3903 <- 0[n]
	add.64*     %r3904 <- %r3903, $0
	push.64*    %r3904
	push.32     $0
	call.32     %r3905 <- iscleared
	br          %r3905, .L874, .L875

.L874:
	load.64*    %r3906 <- 0[n]
	store.32    $0 -> 8[%r3906]
	load.64*    %r3907 <- 0[n]
	push.64*    %r3907
	call        removeentry
	br          .L875

.L875:
	br          .L871

.L871:
	br          .L873

.L872:
	load.64*    %r3908 <- 0[h]
	load.64*    %r3909 <- 48[%r3908]
	store.64*   %r3909 -> 0[l]
	br          .L859

.L859:
	br          .L861

.L860:
	ret


freeobj:
.L878:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	load.64*    %r3910 <- 0[o]
	load.8      %r3911 <- 8[%r3910]
	switch.8    %r3911, 4 -> .L885, 5 -> .L883, 6 -> .L881, 7 -> .L886, 8 -> .L884, 9 -> .L880, 10 -> .L882, default -> .L887

.L880:
	load.64*    %r3912 <- 0[L]
	load.64*    %r3913 <- 0[o]
	add.64*     %r3914 <- %r3913, $0
	push.64*    %r3912
	push.64*    %r3914
	call        luaF_freeproto
	br          .L879

.L881:
	load.64*    %r3915 <- 0[L]
	load.64*    %r3916 <- 0[o]
	add.64*     %r3917 <- %r3916, $0
	push.64*    %r3915
	push.64*    %r3917
	call        luaF_freeclosure
	br          .L879

.L882:
	load.64*    %r3918 <- 0[L]
	load.64*    %r3919 <- 0[o]
	add.64*     %r3920 <- %r3919, $0
	push.64*    %r3918
	push.64*    %r3920
	call        luaF_freeupval
	br          .L879

.L883:
	load.64*    %r3921 <- 0[L]
	load.64*    %r3922 <- 0[o]
	add.64*     %r3923 <- %r3922, $0
	push.64*    %r3921
	push.64*    %r3923
	call        luaH_free
	br          .L879

.L884:
	load.64*    %r3924 <- 0[L]
	load.64*    %r3925 <- 0[o]
	add.64*     %r3926 <- %r3925, $0
	push.64*    %r3924
	push.64*    %r3926
	call        luaE_freethread
	br          .L879

.L885:
	load.64*    %r3927 <- 0[L]
	load.64*    %r3928 <- 32[%r3927]
	load.32     %r3929 <- 8[%r3928]
	sub.32      %r3930 <- %r3929, $1
	store.32    %r3930 -> 8[%r3928]
	load.64*    %r3931 <- 0[L]
	load.64*    %r3932 <- 0[o]
	cast.64*    %r3933 <- (64) %r3932
	load.64*    %r3934 <- 0[o]
	load.64     %r3935 <- 16[%r3934]
	add.64      %r3936 <- %r3935, $1
	mulu.64     %r3937 <- %r3936, $1
	add.64      %r3938 <- $24, %r3937
	push.64*    %r3931
	push.64*    %r3933
	push.64     %r3938
	push.64     $0
	call.64*    %r3939 <- luaM_realloc_
	br          .L879

.L886:
	load.64*    %r3940 <- 0[L]
	load.64*    %r3941 <- 0[o]
	cast.64*    %r3942 <- (64) %r3941
	load.64*    %r3943 <- 0[o]
	load.64     %r3944 <- 32[%r3943]
	add.64      %r3945 <- $40, %r3944
	push.64*    %r3940
	push.64*    %r3942
	push.64     %r3945
	push.64     $0
	call.64*    %r3946 <- luaM_realloc_
	br          .L879

.L887:
	br          .L879

.L879:
	ret


sweeplist:
.L888:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p]
	store.64    %arg3 -> 0[count]
	load.64*    %r3947 <- 0[L]
	load.64*    %r3948 <- 32[%r3947]
	store.64*   %r3948 -> 0[g]
	load.64*    %r3949 <- 0[g]
	load.8      %r3950 <- 32[%r3949]
	cast.32     %r3951 <- (8) %r3950
	xor.32      %r3952 <- %r3951, $3
	store.32    %r3952 -> 0[deadmask]
	br          .L892

.L892:
	load.64*    %r3953 <- 0[p]
	load.64*    %r3954 <- 0[%r3953]
	store.64*   %r3954 -> 0[curr]
	setne.32    %r3955 <- %r3954, $0
	br          %r3955, .L893, .L891

.L893:
	load.64     %r3956 <- 0[count]
	sub.64      %r3957 <- %r3956, $1
	store.64    %r3957 -> 0[count]
	seta.32     %r3958 <- %r3956, $0
	br          %r3958, .L889, .L891

.L889:
	load.64*    %r3959 <- 0[curr]
	load.8      %r3960 <- 8[%r3959]
	cast.32     %r3961 <- (8) %r3960
	seteq.32    %r3962 <- %r3961, $8
	br          %r3962, .L894, .L895

.L894:
	load.64*    %r3963 <- 0[L]
	load.64*    %r3964 <- 0[curr]
	add.64*     %r3965 <- %r3964, $0
	add.64*     %r3966 <- %r3965, $152
	push.64*    %r3963
	push.64*    %r3966
	push.64     $-3
	call.64*    %r3967 <- sweeplist
	br          .L895

.L895:
	load.64*    %r3968 <- 0[curr]
	load.8      %r3969 <- 9[%r3968]
	cast.32     %r3970 <- (8) %r3969
	xor.32      %r3971 <- %r3970, $3
	load.32     %r3972 <- 0[deadmask]
	and.32      %r3973 <- %r3971, %r3972
	br          %r3973, .L896, .L897

.L896:
	load.64*    %r3974 <- 0[curr]
	load.8      %r3975 <- 9[%r3974]
	cast.32     %r3976 <- (8) %r3975
	and.32      %r3977 <- %r3976, $248
	load.64*    %r3978 <- 0[g]
	load.8      %r3979 <- 32[%r3978]
	cast.32     %r3980 <- (8) %r3979
	and.32      %r3981 <- %r3980, $3
	scast.8     %r3982 <- (32) %r3981
	cast.32     %r3983 <- (8) %r3982
	or.32       %r3984 <- %r3977, %r3983
	scast.8     %r3985 <- (32) %r3984
	load.64*    %r3986 <- 0[curr]
	store.8     %r3985 -> 9[%r3986]
	load.64*    %r3987 <- 0[curr]
	add.64*     %r3988 <- %r3987, $0
	add.64*     %r3989 <- %r3988, $0
	store.64*   %r3989 -> 0[p]
	br          .L898

.L897:
	load.64*    %r3990 <- 0[curr]
	load.64*    %r3991 <- 0[%r3990]
	load.64*    %r3992 <- 0[p]
	store.64*   %r3991 -> 0[%r3992]
	load.64*    %r3993 <- 0[curr]
	load.64*    %r3994 <- 0[g]
	load.64*    %r3995 <- 40[%r3994]
	seteq.32    %r3996 <- %r3993, %r3995
	br          %r3996, .L899, .L900

.L899:
	load.64*    %r3997 <- 0[curr]
	load.64*    %r3998 <- 0[%r3997]
	load.64*    %r3999 <- 0[g]
	store.64*   %r3998 -> 40[%r3999]
	br          .L900

.L900:
	load.64*    %r4000 <- 0[L]
	load.64*    %r4001 <- 0[curr]
	push.64*    %r4000
	push.64*    %r4001
	call        freeobj
	br          .L898

.L898:
	br          .L890

.L890:
	br          .L892

.L891:
	load.64*    %r4002 <- 0[p]
	phisrc.64*  %phi143(return) <- %r4002
	br          .L901

.L901:
	phi.64*     %r4003 <- %phi143(return)
	ret.64*     %r4002


checkSizes:
.L902:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4004 <- 0[L]
	load.64*    %r4005 <- 32[%r4004]
	store.64*   %r4005 -> 0[g]
	load.64*    %r4006 <- 0[g]
	load.32     %r4007 <- 8[%r4006]
	load.64*    %r4008 <- 0[g]
	load.32     %r4009 <- 12[%r4008]
	divs.32     %r4010 <- %r4009, $4
	scast.32    %r4011 <- (32) %r4010
	setb.32     %r4012 <- %r4007, %r4011
	br          %r4012, .L905, .L904

.L905:
	load.64*    %r4013 <- 0[g]
	load.32     %r4014 <- 12[%r4013]
	setgt.32    %r4015 <- %r4014, $64
	br          %r4015, .L903, .L904

.L903:
	load.64*    %r4016 <- 0[L]
	load.64*    %r4017 <- 0[g]
	load.32     %r4018 <- 12[%r4017]
	divs.32     %r4019 <- %r4018, $2
	push.64*    %r4016
	push.32     %r4019
	call        luaS_resize
	br          .L904

.L904:
	load.64*    %r4020 <- 0[g]
	load.64     %r4021 <- 104[%r4020]
	seta.32     %r4022 <- %r4021, $64
	br          %r4022, .L906, .L907

.L906:
	load.64*    %r4023 <- 0[g]
	load.64     %r4024 <- 104[%r4023]
	divu.64     %r4025 <- %r4024, $2
	store.64    %r4025 -> 0[newsize]
	load.64     %r4026 <- 0[newsize]
	add.64      %r4027 <- %r4026, $1
	cast.64     %r4028 <- (64) %r4027
	setbe.32    %r4029 <- %r4028, $-3
	br          %r4029, .L908, .L909

.L908:
	load.64*    %r4030 <- 0[L]
	load.64*    %r4031 <- 0[g]
	load.64*    %r4032 <- 88[%r4031]
	cast.64*    %r4033 <- (64) %r4032
	load.64*    %r4034 <- 0[g]
	load.64     %r4035 <- 104[%r4034]
	mulu.64     %r4036 <- %r4035, $1
	load.64     %r4037 <- 0[newsize]
	mulu.64     %r4038 <- %r4037, $1
	push.64*    %r4030
	push.64*    %r4033
	push.64     %r4036
	push.64     %r4038
	call.64*    %r4039 <- luaM_realloc_
	phisrc.64*  %phi144 <- %r4039
	br          .L910

.L909:
	load.64*    %r4040 <- 0[L]
	push.64*    %r4040
	call.64*    %r4041 <- luaM_toobig
	cast.64*    %r4042 <- (64) %r4041
	phisrc.64*  %phi145 <- %r4042
	br          .L910

.L910:
	phi.64*     %r4043 <- %phi144, %phi145
	ptrcast.64* %r4044 <- (64) %r4043
	load.64*    %r4045 <- 0[g]
	store.64*   %r4044 -> 88[%r4045]
	load.64     %r4046 <- 0[newsize]
	load.64*    %r4047 <- 0[g]
	store.64    %r4046 -> 104[%r4047]
	br          .L907

.L907:
	ret


GCTM:
.L911:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4048 <- 0[L]
	load.64*    %r4049 <- 32[%r4048]
	store.64*   %r4049 -> 0[g]
	load.64*    %r4050 <- 0[g]
	load.64*    %r4051 <- 80[%r4050]
	load.64*    %r4052 <- 0[%r4051]
	store.64*   %r4052 -> 0[o]
	load.64*    %r4053 <- 0[o]
	add.64*     %r4054 <- %r4053, $0
	store.64*   %r4054 -> 0[udata]
	load.64*    %r4055 <- 0[o]
	load.64*    %r4056 <- 0[g]
	load.64*    %r4057 <- 80[%r4056]
	seteq.32    %r4058 <- %r4055, %r4057
	br          %r4058, .L912, .L913

.L912:
	load.64*    %r4059 <- 0[g]
	store.64*   $0 -> 80[%r4059]
	br          .L914

.L913:
	load.64*    %r4060 <- 0[udata]
	load.64*    %r4061 <- 0[%r4060]
	load.64*    %r4062 <- 0[g]
	load.64*    %r4063 <- 80[%r4062]
	store.64*   %r4061 -> 0[%r4063]
	br          .L914

.L914:
	load.64*    %r4064 <- 0[g]
	load.64*    %r4065 <- 176[%r4064]
	load.64*    %r4066 <- 0[%r4065]
	load.64*    %r4067 <- 0[udata]
	store.64*   %r4066 -> 0[%r4067]
	load.64*    %r4068 <- 0[o]
	load.64*    %r4069 <- 0[g]
	load.64*    %r4070 <- 176[%r4069]
	store.64*   %r4068 -> 0[%r4070]
	load.64*    %r4071 <- 0[o]
	load.8      %r4072 <- 9[%r4071]
	cast.32     %r4073 <- (8) %r4072
	and.32      %r4074 <- %r4073, $248
	load.64*    %r4075 <- 0[g]
	load.8      %r4076 <- 32[%r4075]
	cast.32     %r4077 <- (8) %r4076
	and.32      %r4078 <- %r4077, $3
	scast.8     %r4079 <- (32) %r4078
	cast.32     %r4080 <- (8) %r4079
	or.32       %r4081 <- %r4074, %r4080
	scast.8     %r4082 <- (32) %r4081
	load.64*    %r4083 <- 0[o]
	store.8     %r4082 -> 9[%r4083]
	load.64*    %r4084 <- 0[udata]
	load.64*    %r4085 <- 16[%r4084]
	seteq.32    %r4086 <- %r4085, $0
	br          %r4086, .L915, .L916

.L915:
	phisrc.64*  %phi146 <- $0
	br          .L917

.L916:
	load.64*    %r4087 <- 0[udata]
	load.64*    %r4088 <- 16[%r4087]
	load.8      %r4089 <- 10[%r4088]
	cast.32     %r4090 <- (8) %r4089
	and.32      %r4091 <- %r4090, $4
	br          %r4091, .L918, .L919

.L918:
	phisrc.64*  %phi147 <- $0
	br          .L920

.L919:
	load.64*    %r4092 <- 0[udata]
	load.64*    %r4093 <- 16[%r4092]
	load.64*    %r4094 <- 0[L]
	load.64*    %r4095 <- 32[%r4094]
	load.64*    %r4096 <- 312[%r4095]
	push.64*    %r4093
	push.32     $2
	push.64*    %r4096
	call.64*    %r4097 <- luaT_gettm
	phisrc.64*  %phi148 <- %r4097
	br          .L920

.L920:
	phi.64*     %r4098 <- %phi147, %phi148
	phisrc.64*  %phi149 <- %r4098
	br          .L917

.L917:
	phi.64*     %r4099 <- %phi146, %phi149
	store.64*   %r4099 -> 0[tm]
	load.64*    %r4100 <- 0[tm]
	setne.32    %r4101 <- %r4100, $0
	br          %r4101, .L921, .L922

.L921:
	load.64*    %r4102 <- 0[L]
	load.8      %r4103 <- 101[%r4102]
	store.8     %r4103 -> 0[oldah]
	load.64*    %r4104 <- 0[g]
	load.64     %r4105 <- 112[%r4104]
	store.64    %r4105 -> 0[oldt]
	load.64*    %r4106 <- 0[L]
	store.8     $0 -> 101[%r4106]
	load.64*    %r4107 <- 0[g]
	load.64     %r4108 <- 120[%r4107]
	mulu.64     %r4109 <- $2, %r4108
	load.64*    %r4110 <- 0[g]
	store.64    %r4109 -> 112[%r4110]
	load.64*    %r4111 <- 0[tm]
	store.64*   %r4111 -> 0[o2]
	load.64*    %r4112 <- 0[L]
	load.64*    %r4113 <- 16[%r4112]
	store.64*   %r4113 -> 0[o1]
	load.64*    %r4114 <- 0[o2]
	load.f64    %r4115 <- 0[%r4114]
	fpcast.f64  %r4116 <- (64) %r4115
	load.64*    %r4117 <- 0[o1]
	store.f64   %r4116 -> 0[%r4117]
	load.64*    %r4118 <- 0[o2]
	load.32     %r4119 <- 8[%r4118]
	scast.32    %r4120 <- (32) %r4119
	load.64*    %r4121 <- 0[o1]
	store.32    %r4120 -> 8[%r4121]
	load.64*    %r4122 <- 0[L]
	load.64*    %r4123 <- 16[%r4122]
	add.64*     %r4124 <- %r4123, $16
	store.64*   %r4124 -> 0[i_o]
	load.64*    %r4125 <- 0[udata]
	ptrcast.64* %r4126 <- (64) %r4125
	load.64*    %r4127 <- 0[i_o]
	store.64*   %r4126 -> 0[%r4127]
	load.64*    %r4128 <- 0[i_o]
	store.32    $7 -> 8[%r4128]
	load.64*    %r4129 <- 0[L]
	load.64*    %r4130 <- 16[%r4129]
	cast.64     %r4131 <- (64) %r4130
	add.64      %r4132 <- %r4131, $32
	ptrcast.64* %r4133 <- (64) %r4132
	store.64*   %r4133 -> 16[%r4129]
	load.64*    %r4134 <- 0[L]
	load.64*    %r4135 <- 0[L]
	load.64*    %r4136 <- 16[%r4135]
	sub.64*     %r4137 <- %r4136, $32
	push.64*    %r4134
	push.64*    %r4137
	push.32     $0
	call        luaD_call
	load.8      %r4138 <- 0[oldah]
	load.64*    %r4139 <- 0[L]
	store.8     %r4138 -> 101[%r4139]
	load.64     %r4140 <- 0[oldt]
	load.64*    %r4141 <- 0[g]
	store.64    %r4140 -> 112[%r4141]
	br          .L922

.L922:
	ret


luaC_callGCTM:
.L923:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	br          .L927

.L927:
	load.64*    %r4142 <- 0[L]
	load.64*    %r4143 <- 32[%r4142]
	load.64*    %r4144 <- 80[%r4143]
	br          %r4144, .L924, .L926

.L924:
	load.64*    %r4145 <- 0[L]
	push.64*    %r4145
	call        GCTM
	br          .L925

.L925:
	br          .L927

.L926:
	ret


luaC_freeall:
.L928:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4146 <- 0[L]
	load.64*    %r4147 <- 32[%r4146]
	store.64*   %r4147 -> 0[g]
	load.64*    %r4148 <- 0[g]
	store.8     $67 -> 32[%r4148]
	load.64*    %r4149 <- 0[L]
	load.64*    %r4150 <- 0[g]
	add.64*     %r4151 <- %r4150, $40
	push.64*    %r4149
	push.64*    %r4151
	push.64     $-3
	call.64*    %r4152 <- sweeplist
	store.32    $0 -> 0[i]
	br          .L932

.L932:
	load.32     %r4153 <- 0[i]
	load.64*    %r4154 <- 0[g]
	load.32     %r4155 <- 12[%r4154]
	setlt.32    %r4156 <- %r4153, %r4155
	br          %r4156, .L929, .L931

.L929:
	load.64*    %r4157 <- 0[L]
	load.64*    %r4158 <- 0[g]
	load.64*    %r4159 <- 0[%r4158]
	load.32     %r4160 <- 0[i]
	scast.64    %r4161 <- (32) %r4160
	muls.64     %r4162 <- %r4161, $8
	add.64*     %r4163 <- %r4159, %r4162
	push.64*    %r4157
	push.64*    %r4163
	push.64     $-3
	call.64*    %r4164 <- sweeplist
	br          .L930

.L930:
	load.32     %r4165 <- 0[i]
	add.32      %r4166 <- %r4165, $1
	store.32    %r4166 -> 0[i]
	br          .L932

.L931:
	ret


markmt:
.L933:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.32    $0 -> 0[i]
	br          .L937

.L937:
	load.32     %r4167 <- 0[i]
	setlt.32    %r4168 <- %r4167, $9
	br          %r4168, .L934, .L936

.L934:
	load.64*    %r4169 <- 0[g]
	add.64*     %r4170 <- %r4169, $224
	load.32     %r4171 <- 0[i]
	scast.64    %r4172 <- (32) %r4171
	muls.64     %r4173 <- %r4172, $8
	add.64*     %r4174 <- %r4170, %r4173
	load.64*    %r4175 <- 0[%r4174]
	br          %r4175, .L938, .L939

.L938:
	load.64*    %r4176 <- 0[g]
	add.64*     %r4177 <- %r4176, $224
	load.32     %r4178 <- 0[i]
	scast.64    %r4179 <- (32) %r4178
	muls.64     %r4180 <- %r4179, $8
	add.64*     %r4181 <- %r4177, %r4180
	load.64*    %r4182 <- 0[%r4181]
	ptrcast.64* %r4183 <- (64) %r4182
	load.8      %r4184 <- 9[%r4183]
	cast.32     %r4185 <- (8) %r4184
	and.32      %r4186 <- %r4185, $3
	br          %r4186, .L940, .L941

.L940:
	load.64*    %r4187 <- 0[g]
	load.64*    %r4188 <- 0[g]
	add.64*     %r4189 <- %r4188, $224
	load.32     %r4190 <- 0[i]
	scast.64    %r4191 <- (32) %r4190
	muls.64     %r4192 <- %r4191, $8
	add.64*     %r4193 <- %r4189, %r4192
	load.64*    %r4194 <- 0[%r4193]
	ptrcast.64* %r4195 <- (64) %r4194
	push.64*    %r4187
	push.64*    %r4195
	call        reallymarkobject
	br          .L941

.L941:
	br          .L939

.L939:
	br          .L935

.L935:
	load.32     %r4196 <- 0[i]
	add.32      %r4197 <- %r4196, $1
	store.32    %r4197 -> 0[i]
	br          .L937

.L936:
	ret


markroot:
.L942:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4198 <- 0[L]
	load.64*    %r4199 <- 32[%r4198]
	store.64*   %r4199 -> 0[g]
	load.64*    %r4200 <- 0[g]
	store.64*   $0 -> 56[%r4200]
	load.64*    %r4201 <- 0[g]
	store.64*   $0 -> 64[%r4201]
	load.64*    %r4202 <- 0[g]
	store.64*   $0 -> 72[%r4202]
	load.64*    %r4203 <- 0[g]
	load.64*    %r4204 <- 176[%r4203]
	ptrcast.64* %r4205 <- (64) %r4204
	load.8      %r4206 <- 9[%r4205]
	cast.32     %r4207 <- (8) %r4206
	and.32      %r4208 <- %r4207, $3
	br          %r4208, .L943, .L944

.L943:
	load.64*    %r4209 <- 0[g]
	load.64*    %r4210 <- 0[g]
	load.64*    %r4211 <- 176[%r4210]
	ptrcast.64* %r4212 <- (64) %r4211
	push.64*    %r4209
	push.64*    %r4212
	call        reallymarkobject
	br          .L944

.L944:
	load.64*    %r4213 <- 0[g]
	load.64*    %r4214 <- 176[%r4213]
	load.32     %r4215 <- 128[%r4214]
	setge.32    %r4216 <- %r4215, $4
	br          %r4216, .L947, .L946

.L947:
	load.64*    %r4217 <- 0[g]
	load.64*    %r4218 <- 176[%r4217]
	load.64*    %r4219 <- 120[%r4218]
	load.8      %r4220 <- 9[%r4219]
	cast.32     %r4221 <- (8) %r4220
	and.32      %r4222 <- %r4221, $3
	br          %r4222, .L945, .L946

.L945:
	load.64*    %r4223 <- 0[g]
	load.64*    %r4224 <- 0[g]
	load.64*    %r4225 <- 176[%r4224]
	load.64*    %r4226 <- 120[%r4225]
	push.64*    %r4223
	push.64*    %r4226
	call        reallymarkobject
	br          .L946

.L946:
	load.64*    %r4227 <- 0[L]
	load.64*    %r4228 <- 32[%r4227]
	load.32     %r4229 <- 168[%r4228]
	setge.32    %r4230 <- %r4229, $4
	br          %r4230, .L950, .L949

.L950:
	load.64*    %r4231 <- 0[L]
	load.64*    %r4232 <- 32[%r4231]
	load.64*    %r4233 <- 160[%r4232]
	load.8      %r4234 <- 9[%r4233]
	cast.32     %r4235 <- (8) %r4234
	and.32      %r4236 <- %r4235, $3
	br          %r4236, .L948, .L949

.L948:
	load.64*    %r4237 <- 0[g]
	load.64*    %r4238 <- 0[L]
	load.64*    %r4239 <- 32[%r4238]
	load.64*    %r4240 <- 160[%r4239]
	push.64*    %r4237
	push.64*    %r4240
	call        reallymarkobject
	br          .L949

.L949:
	load.64*    %r4241 <- 0[g]
	push.64*    %r4241
	call        markmt
	load.64*    %r4242 <- 0[g]
	store.8     $1 -> 33[%r4242]
	br          .L951

.L951:
	ret


remarkupvals:
.L952:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r4243 <- 0[g]
	load.64*    %r4244 <- 216[%r4243]
	store.64*   %r4244 -> 0[uv]
	br          .L956

.L956:
	load.64*    %r4245 <- 0[uv]
	load.64*    %r4246 <- 0[g]
	add.64*     %r4247 <- %r4246, $184
	setne.32    %r4248 <- %r4245, %r4247
	br          %r4248, .L953, .L955

.L953:
	load.64*    %r4249 <- 0[uv]
	ptrcast.64* %r4250 <- (64) %r4249
	load.8      %r4251 <- 9[%r4250]
	cast.32     %r4252 <- (8) %r4251
	and.32      %r4253 <- %r4252, $4
	br          %r4253, .L958, .L959

.L959:
	load.64*    %r4254 <- 0[uv]
	ptrcast.64* %r4255 <- (64) %r4254
	load.8      %r4256 <- 9[%r4255]
	cast.32     %r4257 <- (8) %r4256
	and.32      %r4258 <- %r4257, $3
	br          %r4258, .L958, .L957

.L957:
	load.64*    %r4259 <- 0[uv]
	load.64*    %r4260 <- 16[%r4259]
	load.32     %r4261 <- 8[%r4260]
	setge.32    %r4262 <- %r4261, $4
	br          %r4262, .L962, .L961

.L962:
	load.64*    %r4263 <- 0[uv]
	load.64*    %r4264 <- 16[%r4263]
	load.64*    %r4265 <- 0[%r4264]
	load.8      %r4266 <- 9[%r4265]
	cast.32     %r4267 <- (8) %r4266
	and.32      %r4268 <- %r4267, $3
	br          %r4268, .L960, .L961

.L960:
	load.64*    %r4269 <- 0[g]
	load.64*    %r4270 <- 0[uv]
	load.64*    %r4271 <- 16[%r4270]
	load.64*    %r4272 <- 0[%r4271]
	push.64*    %r4269
	push.64*    %r4272
	call        reallymarkobject
	br          .L961

.L961:
	br          .L958

.L958:
	br          .L954

.L954:
	load.64*    %r4273 <- 0[uv]
	load.64*    %r4274 <- 32[%r4273]
	store.64*   %r4274 -> 0[uv]
	br          .L956

.L955:
	ret


atomic:
.L963:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4275 <- 0[L]
	load.64*    %r4276 <- 32[%r4275]
	store.64*   %r4276 -> 0[g]
	load.64*    %r4277 <- 0[g]
	push.64*    %r4277
	call        remarkupvals
	load.64*    %r4278 <- 0[g]
	push.64*    %r4278
	call.64     %r4279 <- propagateall
	load.64*    %r4280 <- 0[g]
	load.64*    %r4281 <- 72[%r4280]
	load.64*    %r4282 <- 0[g]
	store.64*   %r4281 -> 56[%r4282]
	load.64*    %r4283 <- 0[g]
	store.64*   $0 -> 72[%r4283]
	load.64*    %r4284 <- 0[L]
	ptrcast.64* %r4285 <- (64) %r4284
	load.8      %r4286 <- 9[%r4285]
	cast.32     %r4287 <- (8) %r4286
	and.32      %r4288 <- %r4287, $3
	br          %r4288, .L964, .L965

.L964:
	load.64*    %r4289 <- 0[g]
	load.64*    %r4290 <- 0[L]
	ptrcast.64* %r4291 <- (64) %r4290
	push.64*    %r4289
	push.64*    %r4291
	call        reallymarkobject
	br          .L965

.L965:
	load.64*    %r4292 <- 0[g]
	push.64*    %r4292
	call        markmt
	load.64*    %r4293 <- 0[g]
	push.64*    %r4293
	call.64     %r4294 <- propagateall
	load.64*    %r4295 <- 0[g]
	load.64*    %r4296 <- 64[%r4295]
	load.64*    %r4297 <- 0[g]
	store.64*   %r4296 -> 56[%r4297]
	load.64*    %r4298 <- 0[g]
	store.64*   $0 -> 64[%r4298]
	load.64*    %r4299 <- 0[g]
	push.64*    %r4299
	call.64     %r4300 <- propagateall
	load.64*    %r4301 <- 0[L]
	push.64*    %r4301
	push.32     $0
	call.64     %r4302 <- luaC_separateudata
	store.64    %r4302 -> 0[udsize]
	load.64*    %r4303 <- 0[g]
	push.64*    %r4303
	call        marktmu
	load.64*    %r4304 <- 0[g]
	push.64*    %r4304
	call.64     %r4305 <- propagateall
	load.64     %r4306 <- 0[udsize]
	cast.64     %r4307 <- (64) %r4306
	add.64      %r4308 <- %r4307, %r4305
	cast.64     %r4309 <- (64) %r4308
	store.64    %r4309 -> 0[udsize]
	load.64*    %r4310 <- 0[g]
	load.64*    %r4311 <- 72[%r4310]
	push.64*    %r4311
	call        cleartable
	load.64*    %r4312 <- 0[g]
	load.8      %r4313 <- 32[%r4312]
	cast.32     %r4314 <- (8) %r4313
	xor.32      %r4315 <- %r4314, $3
	scast.8     %r4316 <- (32) %r4315
	load.64*    %r4317 <- 0[g]
	store.8     %r4316 -> 32[%r4317]
	load.64*    %r4318 <- 0[g]
	store.32    $0 -> 36[%r4318]
	load.64*    %r4319 <- 0[g]
	add.64*     %r4320 <- %r4319, $40
	load.64*    %r4321 <- 0[g]
	store.64*   %r4320 -> 48[%r4321]
	load.64*    %r4322 <- 0[g]
	store.8     $2 -> 33[%r4322]
	load.64*    %r4323 <- 0[g]
	load.64     %r4324 <- 120[%r4323]
	load.64     %r4325 <- 0[udsize]
	sub.64      %r4326 <- %r4324, %r4325
	load.64*    %r4327 <- 0[g]
	store.64    %r4326 -> 128[%r4327]
	br          .L966

.L966:
	ret


singlestep:
.L967:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4328 <- 0[L]
	load.64*    %r4329 <- 32[%r4328]
	store.64*   %r4329 -> 0[g]
	load.64*    %r4330 <- 0[g]
	load.8      %r4331 <- 33[%r4330]
	switch.8    %r4331, 0 -> .L969, 1 -> .L970, 2 -> .L971, 3 -> .L972, 4 -> .L973, default -> .L974

.L969:
	load.64*    %r4332 <- 0[L]
	push.64*    %r4332
	call        markroot
	phisrc.64   %phi150(return) <- $0
	br          .L975

.L970:
	load.64*    %r4334 <- 0[g]
	load.64*    %r4335 <- 56[%r4334]
	br          %r4335, .L976, .L977

.L976:
	load.64*    %r4336 <- 0[g]
	push.64*    %r4336
	call.64     %r4337 <- propagatemark
	phisrc.64   %phi151(return) <- %r4337
	br          .L975

.L977:
	load.64*    %r4338 <- 0[L]
	push.64*    %r4338
	call        atomic
	phisrc.64   %phi152(return) <- $0
	br          .L975

.L971:
	load.64*    %r4339 <- 0[g]
	load.64     %r4340 <- 120[%r4339]
	store.64    %r4340 -> 0[old]
	load.64*    %r4341 <- 0[L]
	load.64*    %r4342 <- 0[g]
	load.64*    %r4343 <- 0[%r4342]
	load.64*    %r4344 <- 0[g]
	load.32     %r4345 <- 36[%r4344]
	add.32      %r4346 <- %r4345, $1
	store.32    %r4346 -> 36[%r4344]
	scast.64    %r4347 <- (32) %r4345
	muls.64     %r4348 <- %r4347, $8
	add.64*     %r4349 <- %r4343, %r4348
	push.64*    %r4341
	push.64*    %r4349
	push.64     $-3
	call.64*    %r4350 <- sweeplist
	load.64*    %r4351 <- 0[g]
	load.32     %r4352 <- 36[%r4351]
	load.64*    %r4353 <- 0[g]
	load.32     %r4354 <- 12[%r4353]
	setge.32    %r4355 <- %r4352, %r4354
	br          %r4355, .L979, .L980

.L979:
	load.64*    %r4356 <- 0[g]
	store.8     $3 -> 33[%r4356]
	br          .L980

.L980:
	load.64     %r4357 <- 0[old]
	load.64*    %r4358 <- 0[g]
	load.64     %r4359 <- 120[%r4358]
	sub.64      %r4360 <- %r4357, %r4359
	load.64*    %r4361 <- 0[g]
	load.64     %r4362 <- 128[%r4361]
	cast.64     %r4363 <- (64) %r4362
	sub.64      %r4364 <- %r4363, %r4360
	cast.64     %r4365 <- (64) %r4364
	store.64    %r4365 -> 128[%r4361]
	phisrc.64   %phi153(return) <- $10
	br          .L975

.L972:
	load.64*    %r4366 <- 0[g]
	load.64     %r4367 <- 120[%r4366]
	store.64    %r4367 -> 0[old]
	load.64*    %r4368 <- 0[L]
	load.64*    %r4369 <- 0[g]
	load.64*    %r4370 <- 48[%r4369]
	push.64*    %r4368
	push.64*    %r4370
	push.64     $40
	call.64*    %r4371 <- sweeplist
	load.64*    %r4372 <- 0[g]
	store.64*   %r4371 -> 48[%r4372]
	load.64*    %r4373 <- 0[g]
	load.64*    %r4374 <- 48[%r4373]
	load.64*    %r4375 <- 0[%r4374]
	seteq.32    %r4376 <- %r4375, $0
	br          %r4376, .L981, .L982

.L981:
	load.64*    %r4377 <- 0[L]
	push.64*    %r4377
	call        checkSizes
	load.64*    %r4378 <- 0[g]
	store.8     $4 -> 33[%r4378]
	br          .L982

.L982:
	load.64     %r4379 <- 0[old]
	load.64*    %r4380 <- 0[g]
	load.64     %r4381 <- 120[%r4380]
	sub.64      %r4382 <- %r4379, %r4381
	load.64*    %r4383 <- 0[g]
	load.64     %r4384 <- 128[%r4383]
	cast.64     %r4385 <- (64) %r4384
	sub.64      %r4386 <- %r4385, %r4382
	cast.64     %r4387 <- (64) %r4386
	store.64    %r4387 -> 128[%r4383]
	phisrc.64   %phi154(return) <- $400
	br          .L975

.L973:
	load.64*    %r4388 <- 0[g]
	load.64*    %r4389 <- 80[%r4388]
	br          %r4389, .L983, .L984

.L983:
	load.64*    %r4390 <- 0[L]
	push.64*    %r4390
	call        GCTM
	load.64*    %r4391 <- 0[g]
	load.64     %r4392 <- 128[%r4391]
	seta.32     %r4393 <- %r4392, $100
	br          %r4393, .L985, .L986

.L985:
	load.64*    %r4394 <- 0[g]
	load.64     %r4395 <- 128[%r4394]
	cast.64     %r4396 <- (64) %r4395
	sub.64      %r4397 <- %r4396, $100
	cast.64     %r4398 <- (64) %r4397
	store.64    %r4398 -> 128[%r4394]
	br          .L986

.L986:
	phisrc.64   %phi155(return) <- $100
	br          .L975

.L984:
	load.64*    %r4399 <- 0[g]
	store.8     $0 -> 33[%r4399]
	load.64*    %r4400 <- 0[g]
	store.64    $0 -> 136[%r4400]
	phisrc.64   %phi156(return) <- $0
	br          .L975

.L974:
	phisrc.64   %phi157(return) <- $0
	br          .L975

.L975:
	phi.64      %r4333 <- %phi150(return), %phi151(return), %phi152(return), %phi153(return), %phi154(return), %phi155(return), %phi156(return), %phi157(return)
	ret.64      %r4333


luaC_step:
.L988:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4401 <- 0[L]
	load.64*    %r4402 <- 32[%r4401]
	store.64*   %r4402 -> 0[g]
	load.64*    %r4403 <- 0[g]
	load.32     %r4404 <- 148[%r4403]
	scast.32    %r4405 <- (32) %r4404
	mulu.32     %r4406 <- $10, %r4405
	cast.64     %r4407 <- (32) %r4406
	store.64    %r4407 -> 0[lim]
	load.64     %r4408 <- 0[lim]
	seteq.32    %r4409 <- %r4408, $0
	br          %r4409, .L989, .L990

.L989:
	store.64    $0x7ffffffffffffffe -> 0[lim]
	br          .L990

.L990:
	load.64*    %r4410 <- 0[g]
	load.64     %r4411 <- 120[%r4410]
	load.64*    %r4412 <- 0[g]
	load.64     %r4413 <- 112[%r4412]
	sub.64      %r4414 <- %r4411, %r4413
	load.64*    %r4415 <- 0[g]
	load.64     %r4416 <- 136[%r4415]
	cast.64     %r4417 <- (64) %r4416
	add.64      %r4418 <- %r4417, %r4414
	cast.64     %r4419 <- (64) %r4418
	store.64    %r4419 -> 136[%r4415]
	br          .L991

.L991:
	load.64*    %r4420 <- 0[L]
	push.64*    %r4420
	call.64     %r4421 <- singlestep
	load.64     %r4422 <- 0[lim]
	scast.64    %r4423 <- (64) %r4422
	sub.64      %r4424 <- %r4423, %r4421
	scast.64    %r4425 <- (64) %r4424
	store.64    %r4425 -> 0[lim]
	load.64*    %r4426 <- 0[g]
	load.8      %r4427 <- 33[%r4426]
	cast.32     %r4428 <- (8) %r4427
	seteq.32    %r4429 <- %r4428, $0
	br          %r4429, .L994, .L995

.L994:
	br          .L993

.L995:
	br          .L992

.L992:
	load.64     %r4430 <- 0[lim]
	setgt.32    %r4431 <- %r4430, $0
	br          %r4431, .L991, .L993

.L993:
	load.64*    %r4432 <- 0[g]
	load.8      %r4433 <- 33[%r4432]
	cast.32     %r4434 <- (8) %r4433
	setne.32    %r4435 <- %r4434, $0
	br          %r4435, .L996, .L997

.L996:
	load.64*    %r4436 <- 0[g]
	load.64     %r4437 <- 136[%r4436]
	setb.32     %r4438 <- %r4437, $0x400
	br          %r4438, .L998, .L999

.L998:
	load.64*    %r4439 <- 0[g]
	load.64     %r4440 <- 120[%r4439]
	add.64      %r4441 <- %r4440, $0x400
	load.64*    %r4442 <- 0[g]
	store.64    %r4441 -> 112[%r4442]
	br          .L1000

.L999:
	load.64*    %r4443 <- 0[g]
	load.64     %r4444 <- 136[%r4443]
	cast.64     %r4445 <- (64) %r4444
	sub.64      %r4446 <- %r4445, $0x400
	cast.64     %r4447 <- (64) %r4446
	store.64    %r4447 -> 136[%r4443]
	load.64*    %r4448 <- 0[g]
	load.64     %r4449 <- 120[%r4448]
	load.64*    %r4450 <- 0[g]
	store.64    %r4449 -> 112[%r4450]
	br          .L1000

.L1000:
	br          .L1001

.L997:
	load.64*    %r4451 <- 0[g]
	load.64     %r4452 <- 128[%r4451]
	divu.64     %r4453 <- %r4452, $100
	load.64*    %r4454 <- 0[g]
	load.32     %r4455 <- 144[%r4454]
	scast.64    %r4456 <- (32) %r4455
	mulu.64     %r4457 <- %r4453, %r4456
	load.64*    %r4458 <- 0[g]
	store.64    %r4457 -> 112[%r4458]
	br          .L1001

.L1001:
	ret


luaC_barrierf:
.L1002:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.64*   %arg3 -> 0[v]
	load.64*    %r4459 <- 0[L]
	load.64*    %r4460 <- 32[%r4459]
	store.64*   %r4460 -> 0[g]
	load.64*    %r4461 <- 0[g]
	load.8      %r4462 <- 33[%r4461]
	cast.32     %r4463 <- (8) %r4462
	seteq.32    %r4464 <- %r4463, $1
	br          %r4464, .L1003, .L1004

.L1003:
	load.64*    %r4465 <- 0[g]
	load.64*    %r4466 <- 0[v]
	push.64*    %r4465
	push.64*    %r4466
	call        reallymarkobject
	br          .L1005

.L1004:
	load.64*    %r4467 <- 0[o]
	load.8      %r4468 <- 9[%r4467]
	cast.32     %r4469 <- (8) %r4468
	and.32      %r4470 <- %r4469, $248
	load.64*    %r4471 <- 0[g]
	load.8      %r4472 <- 32[%r4471]
	cast.32     %r4473 <- (8) %r4472
	and.32      %r4474 <- %r4473, $3
	scast.8     %r4475 <- (32) %r4474
	cast.32     %r4476 <- (8) %r4475
	or.32       %r4477 <- %r4470, %r4476
	scast.8     %r4478 <- (32) %r4477
	load.64*    %r4479 <- 0[o]
	store.8     %r4478 -> 9[%r4479]
	br          .L1005

.L1005:
	ret


luaC_barrierback:
.L1006:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	load.64*    %r4480 <- 0[L]
	load.64*    %r4481 <- 32[%r4480]
	store.64*   %r4481 -> 0[g]
	load.64*    %r4482 <- 0[t]
	ptrcast.64* %r4483 <- (64) %r4482
	store.64*   %r4483 -> 0[o]
	load.64*    %r4484 <- 0[o]
	load.8      %r4485 <- 9[%r4484]
	cast.32     %r4486 <- (8) %r4485
	and.32      %r4487 <- %r4486, $251
	scast.8     %r4488 <- (32) %r4487
	store.8     %r4488 -> 9[%r4484]
	load.64*    %r4489 <- 0[g]
	load.64*    %r4490 <- 64[%r4489]
	load.64*    %r4491 <- 0[t]
	store.64*   %r4490 -> 48[%r4491]
	load.64*    %r4492 <- 0[o]
	load.64*    %r4493 <- 0[g]
	store.64*   %r4492 -> 64[%r4493]
	br          .L1007

.L1007:
	ret


luaC_link:
.L1008:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.8     %arg3 -> 0[tt]
	load.64*    %r4494 <- 0[L]
	load.64*    %r4495 <- 32[%r4494]
	store.64*   %r4495 -> 0[g]
	load.64*    %r4496 <- 0[g]
	load.64*    %r4497 <- 40[%r4496]
	load.64*    %r4498 <- 0[o]
	store.64*   %r4497 -> 0[%r4498]
	load.64*    %r4499 <- 0[o]
	load.64*    %r4500 <- 0[g]
	store.64*   %r4499 -> 40[%r4500]
	load.64*    %r4501 <- 0[g]
	load.8      %r4502 <- 32[%r4501]
	cast.32     %r4503 <- (8) %r4502
	and.32      %r4504 <- %r4503, $3
	scast.8     %r4505 <- (32) %r4504
	load.64*    %r4506 <- 0[o]
	store.8     %r4505 -> 9[%r4506]
	load.8      %r4507 <- 0[tt]
	load.64*    %r4508 <- 0[o]
	store.8     %r4507 -> 8[%r4508]
	br          .L1009

.L1009:
	ret


luaC_linkupval:
.L1010:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[uv]
	load.64*    %r4509 <- 0[L]
	load.64*    %r4510 <- 32[%r4509]
	store.64*   %r4510 -> 0[g]
	load.64*    %r4511 <- 0[uv]
	ptrcast.64* %r4512 <- (64) %r4511
	store.64*   %r4512 -> 0[o]
	load.64*    %r4513 <- 0[g]
	load.64*    %r4514 <- 40[%r4513]
	load.64*    %r4515 <- 0[o]
	store.64*   %r4514 -> 0[%r4515]
	load.64*    %r4516 <- 0[o]
	load.64*    %r4517 <- 0[g]
	store.64*   %r4516 -> 40[%r4517]
	load.64*    %r4518 <- 0[o]
	load.8      %r4519 <- 9[%r4518]
	cast.32     %r4520 <- (8) %r4519
	and.32      %r4521 <- %r4520, $4
	br          %r4521, .L1012, .L1013

.L1013:
	load.64*    %r4522 <- 0[o]
	load.8      %r4523 <- 9[%r4522]
	cast.32     %r4524 <- (8) %r4523
	and.32      %r4525 <- %r4524, $3
	br          %r4525, .L1012, .L1011

.L1011:
	load.64*    %r4526 <- 0[g]
	load.8      %r4527 <- 33[%r4526]
	cast.32     %r4528 <- (8) %r4527
	seteq.32    %r4529 <- %r4528, $1
	br          %r4529, .L1014, .L1015

.L1014:
	load.64*    %r4530 <- 0[o]
	load.8      %r4531 <- 9[%r4530]
	cast.32     %r4532 <- (8) %r4531
	or.32       %r4533 <- %r4532, $4
	scast.8     %r4534 <- (32) %r4533
	store.8     %r4534 -> 9[%r4530]
	load.64*    %r4535 <- 0[uv]
	load.64*    %r4536 <- 16[%r4535]
	load.32     %r4537 <- 8[%r4536]
	setge.32    %r4538 <- %r4537, $4
	br          %r4538, .L1019, .L1017

.L1019:
	load.64*    %r4539 <- 0[uv]
	load.64*    %r4540 <- 16[%r4539]
	load.64*    %r4541 <- 0[%r4540]
	load.8      %r4542 <- 9[%r4541]
	cast.32     %r4543 <- (8) %r4542
	and.32      %r4544 <- %r4543, $3
	br          %r4544, .L1018, .L1017

.L1018:
	load.64*    %r4545 <- 0[uv]
	ptrcast.64* %r4546 <- (64) %r4545
	load.8      %r4547 <- 9[%r4546]
	cast.32     %r4548 <- (8) %r4547
	and.32      %r4549 <- %r4548, $4
	br          %r4549, .L1016, .L1017

.L1016:
	load.64*    %r4550 <- 0[L]
	load.64*    %r4551 <- 0[uv]
	ptrcast.64* %r4552 <- (64) %r4551
	load.64*    %r4553 <- 0[uv]
	load.64*    %r4554 <- 16[%r4553]
	load.64*    %r4555 <- 0[%r4554]
	push.64*    %r4550
	push.64*    %r4552
	push.64*    %r4555
	call        luaC_barrierf
	br          .L1017

.L1017:
	br          .L1020

.L1015:
	load.64*    %r4556 <- 0[o]
	load.8      %r4557 <- 9[%r4556]
	cast.32     %r4558 <- (8) %r4557
	and.32      %r4559 <- %r4558, $248
	load.64*    %r4560 <- 0[g]
	load.8      %r4561 <- 32[%r4560]
	cast.32     %r4562 <- (8) %r4561
	and.32      %r4563 <- %r4562, $3
	scast.8     %r4564 <- (32) %r4563
	cast.32     %r4565 <- (8) %r4564
	or.32       %r4566 <- %r4559, %r4565
	scast.8     %r4567 <- (32) %r4566
	load.64*    %r4568 <- 0[o]
	store.8     %r4567 -> 9[%r4568]
	br          .L1020

.L1020:
	br          .L1012

.L1012:
	ret


stack_init:
.L1021:
	<entry-point>
	store.64*   %arg1 -> 0[L1]
	store.64*   %arg2 -> 0[L]
	load.64*    %r4569 <- 0[L]
	push.64*    %r4569
	push.64*    $0
	push.64     $0
	push.64     $320
	call.64*    %r4570 <- luaM_realloc_
	ptrcast.64* %r4571 <- (64) %r4570
	load.64*    %r4572 <- 0[L1]
	store.64*   %r4571 -> 80[%r4572]
	load.64*    %r4573 <- 0[L1]
	load.64*    %r4574 <- 80[%r4573]
	load.64*    %r4575 <- 0[L1]
	store.64*   %r4574 -> 40[%r4575]
	load.64*    %r4576 <- 0[L1]
	store.32    $8 -> 92[%r4576]
	load.64*    %r4577 <- 0[L1]
	load.64*    %r4578 <- 80[%r4577]
	load.64*    %r4579 <- 0[L1]
	load.32     %r4580 <- 92[%r4579]
	scast.64    %r4581 <- (32) %r4580
	muls.64     %r4582 <- %r4581, $40
	add.64*     %r4583 <- %r4578, %r4582
	sub.64*     %r4584 <- %r4583, $40
	load.64*    %r4585 <- 0[L1]
	store.64*   %r4584 -> 72[%r4585]
	load.64*    %r4586 <- 0[L]
	push.64*    %r4586
	push.64*    $0
	push.64     $0
	push.64     $720
	call.64*    %r4587 <- luaM_realloc_
	ptrcast.64* %r4588 <- (64) %r4587
	load.64*    %r4589 <- 0[L1]
	store.64*   %r4588 -> 64[%r4589]
	load.64*    %r4590 <- 0[L1]
	store.32    $45 -> 88[%r4590]
	load.64*    %r4591 <- 0[L1]
	load.64*    %r4592 <- 64[%r4591]
	load.64*    %r4593 <- 0[L1]
	store.64*   %r4592 -> 16[%r4593]
	load.64*    %r4594 <- 0[L1]
	load.64*    %r4595 <- 64[%r4594]
	load.64*    %r4596 <- 0[L1]
	load.32     %r4597 <- 88[%r4596]
	sub.32      %r4598 <- %r4597, $5
	scast.64    %r4599 <- (32) %r4598
	muls.64     %r4600 <- %r4599, $16
	add.64*     %r4601 <- %r4595, %r4600
	sub.64*     %r4602 <- %r4601, $16
	load.64*    %r4603 <- 0[L1]
	store.64*   %r4602 -> 56[%r4603]
	load.64*    %r4604 <- 0[L1]
	load.64*    %r4605 <- 16[%r4604]
	load.64*    %r4606 <- 0[L1]
	load.64*    %r4607 <- 40[%r4606]
	store.64*   %r4605 -> 8[%r4607]
	load.64*    %r4608 <- 0[L1]
	load.64*    %r4609 <- 16[%r4608]
	add.64*     %r4610 <- %r4609, $16
	store.64*   %r4610 -> 16[%r4608]
	store.32    $0 -> 8[%r4609]
	load.64*    %r4611 <- 0[L1]
	load.64*    %r4612 <- 16[%r4611]
	load.64*    %r4613 <- 0[L1]
	load.64*    %r4614 <- 40[%r4613]
	store.64*   %r4612 -> 0[%r4614]
	load.64*    %r4615 <- 0[L1]
	store.64*   %r4612 -> 24[%r4615]
	load.64*    %r4616 <- 0[L1]
	load.64*    %r4617 <- 16[%r4616]
	add.64*     %r4618 <- %r4617, $320
	load.64*    %r4619 <- 0[L1]
	load.64*    %r4620 <- 40[%r4619]
	store.64*   %r4618 -> 16[%r4620]
	br          .L1022

.L1022:
	ret


freestack:
.L1023:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[L1]
	load.64*    %r4621 <- 0[L]
	load.64*    %r4622 <- 0[L1]
	load.64*    %r4623 <- 80[%r4622]
	cast.64*    %r4624 <- (64) %r4623
	load.64*    %r4625 <- 0[L1]
	load.32     %r4626 <- 92[%r4625]
	scast.64    %r4627 <- (32) %r4626
	mulu.64     %r4628 <- %r4627, $40
	push.64*    %r4621
	push.64*    %r4624
	push.64     %r4628
	push.64     $0
	call.64*    %r4629 <- luaM_realloc_
	load.64*    %r4630 <- 0[L]
	load.64*    %r4631 <- 0[L1]
	load.64*    %r4632 <- 64[%r4631]
	cast.64*    %r4633 <- (64) %r4632
	load.64*    %r4634 <- 0[L1]
	load.32     %r4635 <- 88[%r4634]
	scast.64    %r4636 <- (32) %r4635
	mulu.64     %r4637 <- %r4636, $16
	push.64*    %r4630
	push.64*    %r4633
	push.64     %r4637
	push.64     $0
	call.64*    %r4638 <- luaM_realloc_
	br          .L1024

.L1024:
	ret


f_luaopen:
.L1025:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4639 <- 0[L]
	load.64*    %r4640 <- 32[%r4639]
	store.64*   %r4640 -> 0[g]
	load.64*    %r4641 <- 0[ud]
	load.64*    %r4642 <- 0[L]
	load.64*    %r4643 <- 0[L]
	push.64*    %r4642
	push.64*    %r4643
	call        stack_init
	load.64*    %r4644 <- 0[L]
	add.64*     %r4645 <- %r4644, $120
	store.64*   %r4645 -> 0[i_o]
	load.64*    %r4646 <- 0[L]
	push.64*    %r4646
	push.32     $0
	push.32     $2
	call.64*    %r4647 <- luaH_new
	ptrcast.64* %r4648 <- (64) %r4647
	load.64*    %r4649 <- 0[i_o]
	store.64*   %r4648 -> 0[%r4649]
	load.64*    %r4650 <- 0[i_o]
	store.32    $5 -> 8[%r4650]
	load.64*    %r4651 <- 0[L]
	load.64*    %r4652 <- 32[%r4651]
	add.64*     %r4653 <- %r4652, $160
	store.64*   %r4653 -> 0[i_o]
	load.64*    %r4654 <- 0[L]
	push.64*    %r4654
	push.32     $0
	push.32     $2
	call.64*    %r4655 <- luaH_new
	ptrcast.64* %r4656 <- (64) %r4655
	load.64*    %r4657 <- 0[i_o]
	store.64*   %r4656 -> 0[%r4657]
	load.64*    %r4658 <- 0[i_o]
	store.32    $5 -> 8[%r4658]
	load.64*    %r4659 <- 0[L]
	push.64*    %r4659
	push.32     $32
	call        luaS_resize
	load.64*    %r4660 <- 0[L]
	push.64*    %r4660
	call        luaT_init
	load.64*    %r4661 <- 0[L]
	push.64*    %r4661
	call        luaX_init
	load.64*    %r4662 <- 0[L]
	symaddr.64* %r4663 <- <anon symbol:0x62d001291a78>
	push.64*    %r4662
	push.64*    %r4663
	push.64     $17
	call.64*    %r4664 <- luaS_newlstr
	load.8      %r4665 <- 9[%r4664]
	cast.32     %r4666 <- (8) %r4665
	or.32       %r4667 <- %r4666, $32
	scast.8     %r4668 <- (32) %r4667
	store.8     %r4668 -> 9[%r4664]
	load.64*    %r4669 <- 0[g]
	load.64     %r4670 <- 120[%r4669]
	mulu.64     %r4671 <- $4, %r4670
	load.64*    %r4672 <- 0[g]
	store.64    %r4671 -> 112[%r4672]
	br          .L1026

.L1026:
	ret


preinit_state:
.L1027:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[g]
	load.64*    %r4673 <- 0[g]
	load.64*    %r4674 <- 0[L]
	store.64*   %r4673 -> 32[%r4674]
	load.64*    %r4675 <- 0[L]
	store.64*   $0 -> 64[%r4675]
	load.64*    %r4676 <- 0[L]
	store.32    $0 -> 88[%r4676]
	load.64*    %r4677 <- 0[L]
	store.64*   $0 -> 168[%r4677]
	load.64*    %r4678 <- 0[L]
	store.64*   $0 -> 112[%r4678]
	load.64*    %r4679 <- 0[L]
	store.8     $0 -> 100[%r4679]
	load.64*    %r4680 <- 0[L]
	store.32    $0 -> 104[%r4680]
	load.64*    %r4681 <- 0[L]
	store.8     $1 -> 101[%r4681]
	load.64*    %r4682 <- 0[L]
	load.32     %r4683 <- 104[%r4682]
	load.64*    %r4684 <- 0[L]
	store.32    %r4683 -> 108[%r4684]
	load.64*    %r4685 <- 0[L]
	store.64*   $0 -> 152[%r4685]
	load.64*    %r4686 <- 0[L]
	store.32    $0 -> 92[%r4686]
	load.64*    %r4687 <- 0[L]
	store.16    $0 -> 98[%r4687]
	load.64*    %r4688 <- 0[L]
	store.16    $0 -> 96[%r4688]
	load.64*    %r4689 <- 0[L]
	store.8     $0 -> 10[%r4689]
	load.64*    %r4690 <- 0[L]
	store.64*   $0 -> 40[%r4690]
	load.64*    %r4691 <- 0[L]
	store.64*   $0 -> 80[%r4691]
	load.64*    %r4692 <- 0[L]
	store.64*   $0 -> 48[%r4692]
	load.64*    %r4693 <- 0[L]
	store.64    $0 -> 176[%r4693]
	load.64*    %r4694 <- 0[L]
	store.32    $0 -> 128[%r4694]
	br          .L1028

.L1028:
	ret


close_state:
.L1029:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4695 <- 0[L]
	load.64*    %r4696 <- 32[%r4695]
	store.64*   %r4696 -> 0[g]
	load.64*    %r4697 <- 0[L]
	load.64*    %r4698 <- 0[L]
	load.64*    %r4699 <- 64[%r4698]
	push.64*    %r4697
	push.64*    %r4699
	call        luaF_close
	load.64*    %r4700 <- 0[L]
	push.64*    %r4700
	call        luaC_freeall
	load.64*    %r4701 <- 0[L]
	load.64*    %r4702 <- 0[L]
	load.64*    %r4703 <- 32[%r4702]
	load.64*    %r4704 <- 0[%r4703]
	cast.64*    %r4705 <- (64) %r4704
	load.64*    %r4706 <- 0[L]
	load.64*    %r4707 <- 32[%r4706]
	load.32     %r4708 <- 12[%r4707]
	scast.64    %r4709 <- (32) %r4708
	mulu.64     %r4710 <- %r4709, $8
	push.64*    %r4701
	push.64*    %r4705
	push.64     %r4710
	push.64     $0
	call.64*    %r4711 <- luaM_realloc_
	load.64*    %r4712 <- 0[L]
	load.64*    %r4713 <- 0[g]
	load.64*    %r4714 <- 88[%r4713]
	cast.64*    %r4715 <- (64) %r4714
	load.64*    %r4716 <- 0[g]
	load.64     %r4717 <- 104[%r4716]
	mulu.64     %r4718 <- %r4717, $1
	push.64*    %r4712
	push.64*    %r4715
	push.64     %r4718
	push.64     $0
	call.64*    %r4719 <- luaM_realloc_
	ptrcast.64* %r4720 <- (64) %r4719
	load.64*    %r4721 <- 0[g]
	store.64*   %r4720 -> 88[%r4721]
	load.64*    %r4722 <- 0[g]
	store.64    $0 -> 104[%r4722]
	load.64*    %r4723 <- 0[L]
	load.64*    %r4724 <- 0[L]
	push.64*    %r4723
	push.64*    %r4724
	call        freestack
	load.64*    %r4725 <- 0[g]
	load.64*    %r4726 <- 24[%r4725]
	load.64*    %r4727 <- 0[L]
	ptrcast.64* %r4728 <- (64) %r4727
	sub.64*     %r4729 <- %r4728, $0
	cast.64*    %r4730 <- (64) %r4729
	push.64*    %r4726
	push.64*    %r4730
	push.64     $616
	push.64     $0
	load.64*    %r4731 <- 0[g]
	load.64*    %r4732 <- 16[%r4731]
	call.64*    %r4733 <- %r4732
	br          .L1030

.L1030:
	ret


luaE_freethread:
.L1031:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[L1]
	load.64*    %r4734 <- 0[L1]
	load.64*    %r4735 <- 0[L1]
	load.64*    %r4736 <- 64[%r4735]
	push.64*    %r4734
	push.64*    %r4736
	call        luaF_close
	load.64*    %r4737 <- 0[L]
	load.64*    %r4738 <- 0[L1]
	push.64*    %r4737
	push.64*    %r4738
	call        freestack
	load.64*    %r4739 <- 0[L]
	load.64*    %r4740 <- 0[L1]
	ptrcast.64* %r4741 <- (64) %r4740
	sub.64*     %r4742 <- %r4741, $0
	cast.64*    %r4743 <- (64) %r4742
	push.64*    %r4739
	push.64*    %r4743
	push.64     $184
	push.64     $0
	call.64*    %r4744 <- luaM_realloc_
	br          .L1032

.L1032:
	ret


lua_newstate:
.L1033:
	<entry-point>
	store.64*   %arg1 -> 0[f]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4745 <- 0[ud]
	push.64*    %r4745
	push.64*    $0
	push.64     $0
	push.64     $616
	load.64*    %r4746 <- 0[f]
	call.64*    %r4747 <- %r4746
	store.64*   %r4747 -> 0[l]
	load.64*    %r4748 <- 0[l]
	seteq.32    %r4749 <- %r4748, $0
	br          %r4749, .L1034, .L1035

.L1034:
	phisrc.64*  %phi158(return) <- $0
	br          .L1036

.L1035:
	load.64*    %r4751 <- 0[l]
	ptrcast.64* %r4752 <- (64) %r4751
	add.64*     %r4753 <- %r4752, $0
	ptrcast.64* %r4754 <- (64) %r4753
	store.64*   %r4754 -> 0[L]
	load.64*    %r4755 <- 0[L]
	ptrcast.64* %r4756 <- (64) %r4755
	add.64*     %r4757 <- %r4756, $184
	store.64*   %r4757 -> 0[g]
	load.64*    %r4758 <- 0[L]
	store.64*   $0 -> 0[%r4758]
	load.64*    %r4759 <- 0[L]
	store.8     $8 -> 8[%r4759]
	load.64*    %r4760 <- 0[g]
	store.8     $33 -> 32[%r4760]
	load.64*    %r4761 <- 0[g]
	load.8      %r4762 <- 32[%r4761]
	cast.32     %r4763 <- (8) %r4762
	and.32      %r4764 <- %r4763, $3
	scast.8     %r4765 <- (32) %r4764
	load.64*    %r4766 <- 0[L]
	store.8     %r4765 -> 9[%r4766]
	load.64*    %r4767 <- 0[L]
	load.8      %r4768 <- 9[%r4767]
	cast.32     %r4769 <- (8) %r4768
	or.32       %r4770 <- %r4769, $96
	scast.8     %r4771 <- (32) %r4770
	store.8     %r4771 -> 9[%r4767]
	load.64*    %r4772 <- 0[L]
	load.64*    %r4773 <- 0[g]
	push.64*    %r4772
	push.64*    %r4773
	call        preinit_state
	load.64*    %r4774 <- 0[f]
	load.64*    %r4775 <- 0[g]
	store.64*   %r4774 -> 16[%r4775]
	load.64*    %r4776 <- 0[ud]
	load.64*    %r4777 <- 0[g]
	store.64*   %r4776 -> 24[%r4777]
	load.64*    %r4778 <- 0[L]
	load.64*    %r4779 <- 0[g]
	store.64*   %r4778 -> 176[%r4779]
	load.64*    %r4780 <- 0[g]
	add.64*     %r4781 <- %r4780, $184
	load.64*    %r4782 <- 0[g]
	store.64*   %r4781 -> 208[%r4782]
	load.64*    %r4783 <- 0[g]
	add.64*     %r4784 <- %r4783, $184
	load.64*    %r4785 <- 0[g]
	store.64*   %r4784 -> 216[%r4785]
	load.64*    %r4786 <- 0[g]
	store.64    $0 -> 112[%r4786]
	load.64*    %r4787 <- 0[g]
	store.32    $0 -> 12[%r4787]
	load.64*    %r4788 <- 0[g]
	store.32    $0 -> 8[%r4788]
	load.64*    %r4789 <- 0[g]
	store.64*   $0 -> 0[%r4789]
	load.64*    %r4790 <- 0[L]
	load.64*    %r4791 <- 32[%r4790]
	store.32    $0 -> 168[%r4791]
	load.64*    %r4792 <- 0[g]
	store.64*   $0 -> 88[%r4792]
	load.64*    %r4793 <- 0[g]
	store.64    $0 -> 104[%r4793]
	load.64*    %r4794 <- 0[g]
	store.64*   $0 -> 152[%r4794]
	load.64*    %r4795 <- 0[g]
	store.8     $0 -> 33[%r4795]
	load.64*    %r4796 <- 0[L]
	ptrcast.64* %r4797 <- (64) %r4796
	load.64*    %r4798 <- 0[g]
	store.64*   %r4797 -> 40[%r4798]
	load.64*    %r4799 <- 0[g]
	store.32    $0 -> 36[%r4799]
	load.64*    %r4800 <- 0[g]
	add.64*     %r4801 <- %r4800, $40
	load.64*    %r4802 <- 0[g]
	store.64*   %r4801 -> 48[%r4802]
	load.64*    %r4803 <- 0[g]
	store.64*   $0 -> 56[%r4803]
	load.64*    %r4804 <- 0[g]
	store.64*   $0 -> 64[%r4804]
	load.64*    %r4805 <- 0[g]
	store.64*   $0 -> 72[%r4805]
	load.64*    %r4806 <- 0[g]
	store.64*   $0 -> 80[%r4806]
	load.64*    %r4807 <- 0[g]
	store.64    $616 -> 120[%r4807]
	load.64*    %r4808 <- 0[g]
	store.32    $200 -> 144[%r4808]
	load.64*    %r4809 <- 0[g]
	store.32    $200 -> 148[%r4809]
	load.64*    %r4810 <- 0[g]
	store.64    $0 -> 136[%r4810]
	store.32    $0 -> 0[i]
	br          .L1040

.L1040:
	load.32     %r4811 <- 0[i]
	setlt.32    %r4812 <- %r4811, $9
	br          %r4812, .L1037, .L1039

.L1037:
	load.64*    %r4813 <- 0[g]
	add.64*     %r4814 <- %r4813, $224
	load.32     %r4815 <- 0[i]
	scast.64    %r4816 <- (32) %r4815
	muls.64     %r4817 <- %r4816, $8
	add.64*     %r4818 <- %r4814, %r4817
	store.64*   $0 -> 0[%r4818]
	br          .L1038

.L1038:
	load.32     %r4819 <- 0[i]
	add.32      %r4820 <- %r4819, $1
	store.32    %r4820 -> 0[i]
	br          .L1040

.L1039:
	load.64*    %r4821 <- 0[L]
	symaddr.64* %r4822 <- f_luaopen
	push.64*    %r4821
	push.64*    %r4822
	push.64*    $0
	call.32     %r4823 <- luaD_rawrunprotected
	setne.32    %r4824 <- %r4823, $0
	br          %r4824, .L1041, .L1042

.L1041:
	load.64*    %r4825 <- 0[L]
	push.64*    %r4825
	call        close_state
	store.64*   $0 -> 0[L]
	br          .L1043

.L1042:
	br          .L1043

.L1043:
	load.64*    %r4826 <- 0[L]
	phisrc.64*  %phi159(return) <- %r4826
	br          .L1036

.L1036:
	phi.64*     %r4750 <- %phi158(return), %phi159(return)
	ret.64*     %r4750


callallgcTM:
.L1044:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4827 <- 0[ud]
	load.64*    %r4828 <- 0[L]
	push.64*    %r4828
	call        luaC_callGCTM
	br          .L1045

.L1045:
	ret


lua_close:
.L1046:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4829 <- 0[L]
	load.64*    %r4830 <- 32[%r4829]
	load.64*    %r4831 <- 176[%r4830]
	store.64*   %r4831 -> 0[L]
	load.64*    %r4832 <- 0[L]
	load.64*    %r4833 <- 0[L]
	load.64*    %r4834 <- 64[%r4833]
	push.64*    %r4832
	push.64*    %r4834
	call        luaF_close
	load.64*    %r4835 <- 0[L]
	push.64*    %r4835
	push.32     $1
	call.64     %r4836 <- luaC_separateudata
	load.64*    %r4837 <- 0[L]
	store.64    $0 -> 176[%r4837]
	br          .L1047

.L1047:
	load.64*    %r4838 <- 0[L]
	load.64*    %r4839 <- 80[%r4838]
	load.64*    %r4840 <- 0[L]
	store.64*   %r4839 -> 40[%r4840]
	load.64*    %r4841 <- 0[L]
	load.64*    %r4842 <- 40[%r4841]
	load.64*    %r4843 <- 0[%r4842]
	load.64*    %r4844 <- 0[L]
	store.64*   %r4843 -> 16[%r4844]
	load.64*    %r4845 <- 0[L]
	store.64*   %r4843 -> 24[%r4845]
	load.64*    %r4846 <- 0[L]
	store.16    $0 -> 98[%r4846]
	load.64*    %r4847 <- 0[L]
	store.16    $0 -> 96[%r4847]
	br          .L1048

.L1048:
	load.64*    %r4848 <- 0[L]
	symaddr.64* %r4849 <- callallgcTM
	push.64*    %r4848
	push.64*    %r4849
	push.64*    $0
	call.32     %r4850 <- luaD_rawrunprotected
	setne.32    %r4851 <- %r4850, $0
	br          %r4851, .L1047, .L1049

.L1049:
	load.64*    %r4852 <- 0[L]
	push.64*    %r4852
	call        close_state
	br          .L1050

.L1050:
	ret


currentpc:
.L1051:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ci]
	load.64*    %r4853 <- 0[ci]
	load.64*    %r4854 <- 8[%r4853]
	load.32     %r4855 <- 8[%r4854]
	seteq.32    %r4856 <- %r4855, $6
	br          %r4856, .L1054, .L1052

.L1054:
	load.64*    %r4857 <- 0[ci]
	load.64*    %r4858 <- 8[%r4857]
	load.64*    %r4859 <- 0[%r4858]
	load.8      %r4860 <- 10[%r4859]
	br          %r4860, .L1052, .L1053

.L1052:
	phisrc.32   %phi160(return) <- $0xffffffff
	br          .L1055

.L1053:
	load.64*    %r4862 <- 0[ci]
	load.64*    %r4863 <- 0[L]
	load.64*    %r4864 <- 40[%r4863]
	seteq.32    %r4865 <- %r4862, %r4864
	br          %r4865, .L1056, .L1057

.L1056:
	load.64*    %r4866 <- 0[L]
	load.64*    %r4867 <- 48[%r4866]
	load.64*    %r4868 <- 0[ci]
	store.64*   %r4867 -> 24[%r4868]
	br          .L1057

.L1057:
	load.64*    %r4869 <- 0[ci]
	load.64*    %r4870 <- 24[%r4869]
	load.64*    %r4871 <- 0[ci]
	load.64*    %r4872 <- 8[%r4871]
	load.64*    %r4873 <- 0[%r4872]
	load.64*    %r4874 <- 32[%r4873]
	load.64*    %r4875 <- 24[%r4874]
	sub.64      %r4876 <- %r4870, %r4875
	divs.64     %r4877 <- %r4876, $4
	scast.32    %r4878 <- (64) %r4877
	sub.32      %r4879 <- %r4878, $1
	phisrc.32   %phi161(return) <- %r4879
	br          .L1055

.L1055:
	phi.32      %r4861 <- %phi160(return), %phi161(return)
	ret.32      %r4861


currentline:
.L1058:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ci]
	load.64*    %r4880 <- 0[L]
	load.64*    %r4881 <- 0[ci]
	push.64*    %r4880
	push.64*    %r4881
	call.32     %r4882 <- currentpc
	store.32    %r4882 -> 0[pc]
	load.32     %r4883 <- 0[pc]
	setlt.32    %r4884 <- %r4883, $0
	br          %r4884, .L1059, .L1060

.L1059:
	phisrc.32   %phi162(return) <- $0xffffffff
	br          .L1061

.L1060:
	load.64*    %r4886 <- 0[ci]
	load.64*    %r4887 <- 8[%r4886]
	load.64*    %r4888 <- 0[%r4887]
	load.64*    %r4889 <- 32[%r4888]
	load.64*    %r4890 <- 40[%r4889]
	br          %r4890, .L1063, .L1064

.L1063:
	load.64*    %r4891 <- 0[ci]
	load.64*    %r4892 <- 8[%r4891]
	load.64*    %r4893 <- 0[%r4892]
	load.64*    %r4894 <- 32[%r4893]
	load.64*    %r4895 <- 40[%r4894]
	load.32     %r4896 <- 0[pc]
	scast.64    %r4897 <- (32) %r4896
	muls.64     %r4898 <- %r4897, $4
	add.64*     %r4899 <- %r4895, %r4898
	load.32     %r4900 <- 0[%r4899]
	phisrc.32   %phi163 <- %r4900
	br          .L1065

.L1064:
	phisrc.32   %phi164 <- $0
	br          .L1065

.L1065:
	phi.32      %r4901 <- %phi163, %phi164
	phisrc.32   %phi165(return) <- %r4901
	br          .L1061

.L1061:
	phi.32      %r4885 <- %phi162(return), %phi165(return)
	ret.32      %r4885


lua_getstack:
.L1066:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[level]
	store.64*   %arg3 -> 0[ar]
	load.64*    %r4902 <- 0[L]
	load.64*    %r4903 <- 40[%r4902]
	store.64*   %r4903 -> 0[ci]
	br          .L1070

.L1070:
	load.32     %r4904 <- 0[level]
	setgt.32    %r4905 <- %r4904, $0
	br          %r4905, .L1071, .L1069

.L1071:
	load.64*    %r4906 <- 0[ci]
	load.64*    %r4907 <- 0[L]
	load.64*    %r4908 <- 80[%r4907]
	seta.32     %r4909 <- %r4906, %r4908
	br          %r4909, .L1067, .L1069

.L1067:
	load.32     %r4910 <- 0[level]
	sub.32      %r4911 <- %r4910, $1
	store.32    %r4911 -> 0[level]
	load.64*    %r4912 <- 0[ci]
	load.64*    %r4913 <- 8[%r4912]
	load.64*    %r4914 <- 0[%r4913]
	load.8      %r4915 <- 10[%r4914]
	br          %r4915, .L1073, .L1072

.L1072:
	load.64*    %r4916 <- 0[ci]
	load.32     %r4917 <- 36[%r4916]
	load.32     %r4918 <- 0[level]
	scast.32    %r4919 <- (32) %r4918
	sub.32      %r4920 <- %r4919, %r4917
	scast.32    %r4921 <- (32) %r4920
	store.32    %r4921 -> 0[level]
	br          .L1073

.L1073:
	br          .L1068

.L1068:
	load.64*    %r4922 <- 0[ci]
	sub.64*     %r4923 <- %r4922, $40
	store.64*   %r4923 -> 0[ci]
	br          .L1070

.L1069:
	load.32     %r4924 <- 0[level]
	seteq.32    %r4925 <- %r4924, $0
	br          %r4925, .L1076, .L1075

.L1076:
	load.64*    %r4926 <- 0[ci]
	load.64*    %r4927 <- 0[L]
	load.64*    %r4928 <- 80[%r4927]
	seta.32     %r4929 <- %r4926, %r4928
	br          %r4929, .L1074, .L1075

.L1074:
	store.32    $1 -> 0[status]
	load.64*    %r4930 <- 0[ci]
	load.64*    %r4931 <- 0[L]
	load.64*    %r4932 <- 80[%r4931]
	sub.64      %r4933 <- %r4930, %r4932
	divs.64     %r4934 <- %r4933, $40
	scast.32    %r4935 <- (64) %r4934
	load.64*    %r4936 <- 0[ar]
	store.32    %r4935 -> 116[%r4936]
	br          .L1077

.L1075:
	load.32     %r4937 <- 0[level]
	setlt.32    %r4938 <- %r4937, $0
	br          %r4938, .L1078, .L1079

.L1078:
	store.32    $1 -> 0[status]
	load.64*    %r4939 <- 0[ar]
	store.32    $0 -> 116[%r4939]
	br          .L1080

.L1079:
	store.32    $0 -> 0[status]
	br          .L1080

.L1080:
	br          .L1077

.L1077:
	load.32     %r4940 <- 0[status]
	phisrc.32   %phi166(return) <- %r4940
	br          .L1081

.L1081:
	phi.32      %r4941 <- %phi166(return)
	ret.32      %r4940


getluaproto:
.L1082:
	<entry-point>
	store.64*   %arg1 -> 0[ci]
	load.64*    %r4942 <- 0[ci]
	load.64*    %r4943 <- 8[%r4942]
	load.32     %r4944 <- 8[%r4943]
	seteq.32    %r4945 <- %r4944, $6
	br          %r4945, .L1087, .L1085

.L1087:
	load.64*    %r4946 <- 0[ci]
	load.64*    %r4947 <- 8[%r4946]
	load.64*    %r4948 <- 0[%r4947]
	load.8      %r4949 <- 10[%r4948]
	br          %r4949, .L1085, .L1084

.L1084:
	load.64*    %r4950 <- 0[ci]
	load.64*    %r4951 <- 8[%r4950]
	load.64*    %r4952 <- 0[%r4951]
	load.64*    %r4953 <- 32[%r4952]
	phisrc.64*  %phi167 <- %r4953
	br          .L1086

.L1085:
	phisrc.64*  %phi168 <- $0
	br          .L1086

.L1086:
	phi.64*     %r4954 <- %phi167, %phi168
	phisrc.64*  %phi169(return) <- %r4954
	br          .L1083

.L1083:
	phi.64*     %r4955 <- %phi169(return)
	ret.64*     %r4954


funcinfo:
.L1088:
	<entry-point>
	store.64*   %arg1 -> 0[ar]
	store.64*   %arg2 -> 0[cl]
	load.64*    %r4956 <- 0[cl]
	load.8      %r4957 <- 10[%r4956]
	br          %r4957, .L1089, .L1090

.L1089:
	symaddr.64* %r4958 <- <anon symbol:0x62d0012bd390>
	load.64*    %r4959 <- 0[ar]
	store.64*   %r4958 -> 32[%r4959]
	load.64*    %r4960 <- 0[ar]
	store.32    $0xffffffff -> 48[%r4960]
	load.64*    %r4961 <- 0[ar]
	store.32    $0xffffffff -> 52[%r4961]
	symaddr.64* %r4962 <- <anon symbol:0x62d0012bdca0>
	load.64*    %r4963 <- 0[ar]
	store.64*   %r4962 -> 24[%r4963]
	br          .L1091

.L1090:
	load.64*    %r4964 <- 0[cl]
	load.64*    %r4965 <- 32[%r4964]
	load.64*    %r4966 <- 64[%r4965]
	add.64*     %r4967 <- %r4966, $24
	ptrcast.64* %r4968 <- (64) %r4967
	load.64*    %r4969 <- 0[ar]
	store.64*   %r4968 -> 32[%r4969]
	load.64*    %r4970 <- 0[cl]
	load.64*    %r4971 <- 32[%r4970]
	load.32     %r4972 <- 96[%r4971]
	load.64*    %r4973 <- 0[ar]
	store.32    %r4972 -> 48[%r4973]
	load.64*    %r4974 <- 0[cl]
	load.64*    %r4975 <- 32[%r4974]
	load.32     %r4976 <- 100[%r4975]
	load.64*    %r4977 <- 0[ar]
	store.32    %r4976 -> 52[%r4977]
	symaddr.64* %r4978 <- <anon symbol:0x62d0012c1550>
	symaddr.64* %r4979 <- <anon symbol:0x62d0012c11b0>
	ptrcast.64* %r4980 <- (64) %r4979
	load.64*    %r4981 <- 0[ar]
	load.32     %r4982 <- 48[%r4981]
	seteq.32    %r4983 <- %r4982, $0
	select.64*  %r4984 <- %r4983, %r4978, %r4980
	load.64*    %r4985 <- 0[ar]
	store.64*   %r4984 -> 24[%r4985]
	br          .L1091

.L1091:
	load.64*    %r4986 <- 0[ar]
	add.64*     %r4987 <- %r4986, $56
	load.64*    %r4988 <- 0[ar]
	load.64*    %r4989 <- 32[%r4988]
	push.64*    %r4987
	push.64*    %r4989
	push.64     $60
	call        luaO_chunkid
	br          .L1092

.L1092:
	ret


info_tailcall:
.L1093:
	<entry-point>
	store.64*   %arg1 -> 0[ar]
	symaddr.64* %r4990 <- <anon symbol:0x62d0012c2200>
	load.64*    %r4991 <- 0[ar]
	store.64*   %r4990 -> 16[%r4991]
	load.64*    %r4992 <- 0[ar]
	store.64*   %r4990 -> 8[%r4992]
	symaddr.64* %r4993 <- <anon symbol:0x62d0012c2770>
	load.64*    %r4994 <- 0[ar]
	store.64*   %r4993 -> 24[%r4994]
	load.64*    %r4995 <- 0[ar]
	store.32    $0xffffffff -> 40[%r4995]
	load.64*    %r4996 <- 0[ar]
	store.32    $0xffffffff -> 48[%r4996]
	load.64*    %r4997 <- 0[ar]
	store.32    $0xffffffff -> 52[%r4997]
	symaddr.64* %r4998 <- <anon symbol:0x62d0012c3250>
	load.64*    %r4999 <- 0[ar]
	store.64*   %r4998 -> 32[%r4999]
	load.64*    %r5000 <- 0[ar]
	add.64*     %r5001 <- %r5000, $56
	load.64*    %r5002 <- 0[ar]
	load.64*    %r5003 <- 32[%r5002]
	push.64*    %r5001
	push.64*    %r5003
	push.64     $60
	call        luaO_chunkid
	load.64*    %r5004 <- 0[ar]
	store.32    $0 -> 44[%r5004]
	br          .L1094

.L1094:
	ret


collectvalidlines:
.L1095:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r5005 <- 0[f]
	seteq.32    %r5006 <- %r5005, $0
	br          %r5006, .L1096, .L1098

.L1098:
	load.64*    %r5007 <- 0[f]
	load.8      %r5008 <- 10[%r5007]
	br          %r5008, .L1096, .L1097

.L1096:
	load.64*    %r5009 <- 0[L]
	load.64*    %r5010 <- 16[%r5009]
	store.32    $0 -> 8[%r5010]
	br          .L1099

.L1097:
	load.64*    %r5011 <- 0[L]
	push.64*    %r5011
	push.32     $0
	push.32     $0
	call.64*    %r5012 <- luaH_new
	store.64*   %r5012 -> 0[t]
	load.64*    %r5013 <- 0[f]
	load.64*    %r5014 <- 32[%r5013]
	load.64*    %r5015 <- 40[%r5014]
	store.64*   %r5015 -> 0[lineinfo]
	store.32    $0 -> 0[i]
	br          .L1103

.L1103:
	load.32     %r5016 <- 0[i]
	load.64*    %r5017 <- 0[f]
	load.64*    %r5018 <- 32[%r5017]
	load.32     %r5019 <- 84[%r5018]
	setlt.32    %r5020 <- %r5016, %r5019
	br          %r5020, .L1100, .L1102

.L1100:
	load.64*    %r5021 <- 0[L]
	load.64*    %r5022 <- 0[t]
	load.64*    %r5023 <- 0[lineinfo]
	load.32     %r5024 <- 0[i]
	scast.64    %r5025 <- (32) %r5024
	muls.64     %r5026 <- %r5025, $4
	add.64*     %r5027 <- %r5023, %r5026
	load.32     %r5028 <- 0[%r5027]
	push.64*    %r5021
	push.64*    %r5022
	push.32     %r5028
	call.64*    %r5029 <- luaH_setnum
	store.64*   %r5029 -> 0[i_o]
	load.64*    %r5030 <- 0[i_o]
	store.32    $1 -> 0[%r5030]
	load.64*    %r5031 <- 0[i_o]
	store.32    $1 -> 8[%r5031]
	br          .L1101

.L1101:
	load.32     %r5032 <- 0[i]
	add.32      %r5033 <- %r5032, $1
	store.32    %r5033 -> 0[i]
	br          .L1103

.L1102:
	load.64*    %r5034 <- 0[L]
	load.64*    %r5035 <- 16[%r5034]
	store.64*   %r5035 -> 0[i_o]
	load.64*    %r5036 <- 0[t]
	ptrcast.64* %r5037 <- (64) %r5036
	load.64*    %r5038 <- 0[i_o]
	store.64*   %r5037 -> 0[%r5038]
	load.64*    %r5039 <- 0[i_o]
	store.32    $5 -> 8[%r5039]
	br          .L1099

.L1099:
	load.64*    %r5040 <- 0[L]
	load.64*    %r5041 <- 56[%r5040]
	ptrcast.64* %r5042 <- (64) %r5041
	load.64*    %r5043 <- 0[L]
	load.64*    %r5044 <- 16[%r5043]
	ptrcast.64* %r5045 <- (64) %r5044
	sub.64      %r5046 <- %r5042, %r5045
	setle.32    %r5047 <- %r5046, $16
	br          %r5047, .L1104, .L1105

.L1104:
	load.64*    %r5048 <- 0[L]
	push.64*    %r5048
	push.32     $1
	call        luaD_growstack
	br          .L1106

.L1105:
	br          .L1106

.L1106:
	load.64*    %r5049 <- 0[L]
	load.64*    %r5050 <- 16[%r5049]
	add.64*     %r5051 <- %r5050, $16
	store.64*   %r5051 -> 16[%r5049]
	br          .L1107

.L1107:
	ret


auxgetinfo:
.L1108:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.64*   %arg3 -> 0[ar]
	store.64*   %arg4 -> 0[f]
	store.64*   %arg5 -> 0[ci]
	store.32    $1 -> 0[status]
	load.64*    %r5052 <- 0[f]
	seteq.32    %r5053 <- %r5052, $0
	br          %r5053, .L1109, .L1110

.L1109:
	load.64*    %r5054 <- 0[ar]
	push.64*    %r5054
	call        info_tailcall
	load.32     %r5055 <- 0[status]
	phisrc.32   %phi170(return) <- %r5055
	br          .L1111

.L1110:
	br          .L1115

.L1115:
	load.64*    %r5057 <- 0[what]
	load.8      %r5058 <- 0[%r5057]
	br          %r5058, .L1112, .L1114

.L1112:
	load.64*    %r5059 <- 0[what]
	load.8      %r5060 <- 0[%r5059]
	switch.8    %r5060, 76 -> .L1121, 83 -> .L1117, 102 -> .L1122, 108 -> .L1118, 110 -> .L1120, 117 -> .L1119, default -> .L1123

.L1117:
	load.64*    %r5061 <- 0[ar]
	load.64*    %r5062 <- 0[f]
	push.64*    %r5061
	push.64*    %r5062
	call        funcinfo
	br          .L1116

.L1118:
	load.64*    %r5063 <- 0[ci]
	br          %r5063, .L1124, .L1125

.L1124:
	load.64*    %r5064 <- 0[L]
	load.64*    %r5065 <- 0[ci]
	push.64*    %r5064
	push.64*    %r5065
	call.32     %r5066 <- currentline
	phisrc.32   %phi171 <- %r5066
	br          .L1126

.L1125:
	phisrc.32   %phi172 <- $0xffffffff
	br          .L1126

.L1126:
	phi.32      %r5067 <- %phi171, %phi172
	load.64*    %r5068 <- 0[ar]
	store.32    %r5067 -> 40[%r5068]
	br          .L1116

.L1119:
	load.64*    %r5069 <- 0[f]
	load.8      %r5070 <- 11[%r5069]
	cast.32     %r5071 <- (8) %r5070
	load.64*    %r5072 <- 0[ar]
	store.32    %r5071 -> 44[%r5072]
	br          .L1116

.L1120:
	load.64*    %r5073 <- 0[ci]
	select.64*  %r5074 <- %r5073, $0, $0
	ptrcast.64* %r5075 <- (64) %r5074
	load.64*    %r5076 <- 0[ar]
	store.64*   %r5075 -> 16[%r5076]
	load.64*    %r5077 <- 0[ar]
	load.64*    %r5078 <- 16[%r5077]
	seteq.32    %r5079 <- %r5078, $0
	br          %r5079, .L1127, .L1128

.L1127:
	symaddr.64* %r5080 <- <anon symbol:0x62d0012c5dd0>
	load.64*    %r5081 <- 0[ar]
	store.64*   %r5080 -> 16[%r5081]
	load.64*    %r5082 <- 0[ar]
	store.64*   $0 -> 8[%r5082]
	br          .L1128

.L1128:
	br          .L1116

.L1121:
	br          .L1122

.L1122:
	br          .L1116

.L1123:
	store.32    $0 -> 0[status]
	br          .L1116

.L1116:
	br          .L1113

.L1113:
	load.64*    %r5083 <- 0[what]
	add.64*     %r5084 <- %r5083, $1
	store.64*   %r5084 -> 0[what]
	br          .L1115

.L1114:
	load.32     %r5085 <- 0[status]
	phisrc.32   %phi173(return) <- %r5085
	br          .L1111

.L1111:
	phi.32      %r5056 <- %phi170(return), %phi173(return)
	ret.32      %r5056


lua_getinfo:
.L1129:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.64*   %arg3 -> 0[ar]
	store.64*   $0 -> 0[f]
	store.64*   $0 -> 0[ci]
	load.64*    %r5086 <- 0[what]
	load.8      %r5087 <- 0[%r5086]
	scast.32    %r5088 <- (8) %r5087
	seteq.32    %r5089 <- %r5088, $62
	br          %r5089, .L1130, .L1131

.L1130:
	load.64*    %r5090 <- 0[L]
	load.64*    %r5091 <- 16[%r5090]
	sub.64*     %r5092 <- %r5091, $16
	store.64*   %r5092 -> 0[func]
	load.64*    %r5093 <- 0[L]
	load.64*    %r5094 <- 0[what]
	add.64*     %r5095 <- %r5094, $1
	store.64*   %r5095 -> 0[what]
	load.64*    %r5096 <- 0[func]
	load.64*    %r5097 <- 0[%r5096]
	add.64*     %r5098 <- %r5097, $0
	store.64*   %r5098 -> 0[f]
	load.64*    %r5099 <- 0[L]
	load.64*    %r5100 <- 16[%r5099]
	sub.64*     %r5101 <- %r5100, $16
	store.64*   %r5101 -> 16[%r5099]
	br          .L1132

.L1131:
	load.64*    %r5102 <- 0[ar]
	load.32     %r5103 <- 116[%r5102]
	setne.32    %r5104 <- %r5103, $0
	br          %r5104, .L1133, .L1134

.L1133:
	load.64*    %r5105 <- 0[L]
	load.64*    %r5106 <- 80[%r5105]
	load.64*    %r5107 <- 0[ar]
	load.32     %r5108 <- 116[%r5107]
	scast.64    %r5109 <- (32) %r5108
	muls.64     %r5110 <- %r5109, $40
	add.64*     %r5111 <- %r5106, %r5110
	store.64*   %r5111 -> 0[ci]
	load.64*    %r5112 <- 0[ci]
	load.64*    %r5113 <- 8[%r5112]
	load.64*    %r5114 <- 0[%r5113]
	add.64*     %r5115 <- %r5114, $0
	store.64*   %r5115 -> 0[f]
	br          .L1134

.L1134:
	br          .L1132

.L1132:
	load.64*    %r5116 <- 0[L]
	load.64*    %r5117 <- 0[what]
	load.64*    %r5118 <- 0[ar]
	load.64*    %r5119 <- 0[f]
	load.64*    %r5120 <- 0[ci]
	push.64*    %r5116
	push.64*    %r5117
	push.64*    %r5118
	push.64*    %r5119
	push.64*    %r5120
	call.32     %r5121 <- auxgetinfo
	store.32    %r5121 -> 0[status]
	load.64*    %r5122 <- 0[what]
	push.64*    %r5122
	push.32     $102
	call.64*    %r5123 <- strchr
	br          %r5123, .L1135, .L1136

.L1135:
	load.64*    %r5124 <- 0[f]
	seteq.32    %r5125 <- %r5124, $0
	br          %r5125, .L1137, .L1138

.L1137:
	load.64*    %r5126 <- 0[L]
	load.64*    %r5127 <- 16[%r5126]
	store.32    $0 -> 8[%r5127]
	br          .L1139

.L1138:
	load.64*    %r5128 <- 0[L]
	load.64*    %r5129 <- 16[%r5128]
	store.64*   %r5129 -> 0[i_o]
	load.64*    %r5130 <- 0[f]
	ptrcast.64* %r5131 <- (64) %r5130
	load.64*    %r5132 <- 0[i_o]
	store.64*   %r5131 -> 0[%r5132]
	load.64*    %r5133 <- 0[i_o]
	store.32    $6 -> 8[%r5133]
	br          .L1139

.L1139:
	load.64*    %r5134 <- 0[L]
	load.64*    %r5135 <- 56[%r5134]
	ptrcast.64* %r5136 <- (64) %r5135
	load.64*    %r5137 <- 0[L]
	load.64*    %r5138 <- 16[%r5137]
	ptrcast.64* %r5139 <- (64) %r5138
	sub.64      %r5140 <- %r5136, %r5139
	setle.32    %r5141 <- %r5140, $16
	br          %r5141, .L1140, .L1141

.L1140:
	load.64*    %r5142 <- 0[L]
	push.64*    %r5142
	push.32     $1
	call        luaD_growstack
	br          .L1142

.L1141:
	br          .L1142

.L1142:
	load.64*    %r5143 <- 0[L]
	load.64*    %r5144 <- 16[%r5143]
	add.64*     %r5145 <- %r5144, $16
	store.64*   %r5145 -> 16[%r5143]
	br          .L1136

.L1136:
	load.64*    %r5146 <- 0[what]
	push.64*    %r5146
	push.32     $76
	call.64*    %r5147 <- strchr
	br          %r5147, .L1143, .L1144

.L1143:
	load.64*    %r5148 <- 0[L]
	load.64*    %r5149 <- 0[f]
	push.64*    %r5148
	push.64*    %r5149
	call        collectvalidlines
	br          .L1144

.L1144:
	load.32     %r5150 <- 0[status]
	phisrc.32   %phi174(return) <- %r5150
	br          .L1145

.L1145:
	phi.32      %r5151 <- %phi174(return)
	ret.32      %r5150


isinstack:
.L1146:
	<entry-point>
	store.64*   %arg1 -> 0[ci]
	store.64*   %arg2 -> 0[o]
	load.64*    %r5152 <- 0[ci]
	load.64*    %r5153 <- 0[%r5152]
	store.64*   %r5153 -> 0[p]
	br          .L1150

.L1150:
	load.64*    %r5154 <- 0[p]
	load.64*    %r5155 <- 0[ci]
	load.64*    %r5156 <- 16[%r5155]
	setb.32     %r5157 <- %r5154, %r5156
	br          %r5157, .L1147, .L1149

.L1147:
	load.64*    %r5158 <- 0[o]
	load.64*    %r5159 <- 0[p]
	seteq.32    %r5160 <- %r5158, %r5159
	br          %r5160, .L1151, .L1152

.L1151:
	phisrc.32   %phi175(return) <- $1
	br          .L1153

.L1152:
	br          .L1148

.L1148:
	load.64*    %r5162 <- 0[p]
	add.64*     %r5163 <- %r5162, $16
	store.64*   %r5163 -> 0[p]
	br          .L1150

.L1149:
	phisrc.32   %phi176(return) <- $0
	br          .L1153

.L1153:
	phi.32      %r5161 <- %phi175(return), %phi176(return)
	ret.32      %r5161


luaG_typeerror:
.L1154:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.64*   %arg3 -> 0[op]
	store.64*   $0 -> 0[name]
	symaddr.64* %r5164 <- luaT_typenames
	load.64*    %r5165 <- 0[o]
	load.32     %r5166 <- 8[%r5165]
	scast.64    %r5167 <- (32) %r5166
	muls.64     %r5168 <- %r5167, $8
	add.64*     %r5169 <- %r5164, %r5168
	load.64*    %r5170 <- 0[%r5169]
	store.64*   %r5170 -> 0[t]
	load.64*    %r5171 <- 0[L]
	load.64*    %r5172 <- 40[%r5171]
	load.64*    %r5173 <- 0[o]
	push.64*    %r5172
	push.64*    %r5173
	call.32     %r5174 <- isinstack
	select.64*  %r5175 <- %r5174, $0, $0
	ptrcast.64* %r5176 <- (64) %r5175
	store.64*   %r5176 -> 0[kind]
	load.64*    %r5177 <- 0[kind]
	br          %r5177, .L1155, .L1156

.L1155:
	load.64*    %r5178 <- 0[L]
	symaddr.64* %r5179 <- <anon symbol:0x62d0011085e8>
	load.64*    %r5180 <- 0[op]
	load.64*    %r5181 <- 0[kind]
	load.64*    %r5182 <- 0[t]
	push.64*    %r5178
	push.64*    %r5179
	push.64*    %r5180
	push.64*    %r5181
	push.64*    $0
	push.64*    %r5182
	call        luaG_runerror
	br          .L1157

.L1156:
	load.64*    %r5183 <- 0[L]
	symaddr.64* %r5184 <- <anon symbol:0x62d001108988>
	load.64*    %r5185 <- 0[op]
	load.64*    %r5186 <- 0[t]
	push.64*    %r5183
	push.64*    %r5184
	push.64*    %r5185
	push.64*    %r5186
	call        luaG_runerror
	br          .L1157

.L1157:
	ret


luaG_concaterror:
.L1158:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	load.64*    %r5187 <- 0[p1]
	load.32     %r5188 <- 8[%r5187]
	seteq.32    %r5189 <- %r5188, $4
	br          %r5189, .L1159, .L1161

.L1161:
	load.64*    %r5190 <- 0[p1]
	load.32     %r5191 <- 8[%r5190]
	seteq.32    %r5192 <- %r5191, $3
	br          %r5192, .L1159, .L1160

.L1159:
	load.64*    %r5193 <- 0[p2]
	store.64*   %r5193 -> 0[p1]
	br          .L1160

.L1160:
	load.64*    %r5194 <- 0[L]
	load.64*    %r5195 <- 0[p1]
	symaddr.64* %r5196 <- <anon symbol:0x62d0012d46d0>
	push.64*    %r5194
	push.64*    %r5195
	push.64*    %r5196
	call        luaG_typeerror
	br          .L1162

.L1162:
	ret


luaG_aritherror:
.L1163:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	load.64*    %r5197 <- 0[p1]
	symaddr.64* %r5198 <- temp
	push.64*    %r5197
	push.64*    %r5198
	call.64*    %r5199 <- luaV_tonumber
	seteq.32    %r5200 <- %r5199, $0
	br          %r5200, .L1164, .L1165

.L1164:
	load.64*    %r5201 <- 0[p1]
	store.64*   %r5201 -> 0[p2]
	br          .L1165

.L1165:
	load.64*    %r5202 <- 0[L]
	load.64*    %r5203 <- 0[p2]
	symaddr.64* %r5204 <- <anon symbol:0x62d0012d4c40>
	push.64*    %r5202
	push.64*    %r5203
	push.64*    %r5204
	call        luaG_typeerror
	br          .L1166

.L1166:
	ret


luaG_ordererror:
.L1167:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	symaddr.64* %r5205 <- luaT_typenames
	load.64*    %r5206 <- 0[p1]
	load.32     %r5207 <- 8[%r5206]
	scast.64    %r5208 <- (32) %r5207
	muls.64     %r5209 <- %r5208, $8
	add.64*     %r5210 <- %r5205, %r5209
	load.64*    %r5211 <- 0[%r5210]
	store.64*   %r5211 -> 0[t1]
	symaddr.64* %r5212 <- luaT_typenames
	load.64*    %r5213 <- 0[p2]
	load.32     %r5214 <- 8[%r5213]
	scast.64    %r5215 <- (32) %r5214
	muls.64     %r5216 <- %r5215, $8
	add.64*     %r5217 <- %r5212, %r5216
	load.64*    %r5218 <- 0[%r5217]
	store.64*   %r5218 -> 0[t2]
	load.64*    %r5219 <- 0[t1]
	load.8      %r5220 <- 2[%r5219]
	scast.32    %r5221 <- (8) %r5220
	load.64*    %r5222 <- 0[t2]
	load.8      %r5223 <- 2[%r5222]
	scast.32    %r5224 <- (8) %r5223
	seteq.32    %r5225 <- %r5221, %r5224
	br          %r5225, .L1168, .L1169

.L1168:
	load.64*    %r5226 <- 0[L]
	symaddr.64* %r5227 <- <anon symbol:0x62d0012d5ac0>
	load.64*    %r5228 <- 0[t1]
	push.64*    %r5226
	push.64*    %r5227
	push.64*    %r5228
	call        luaG_runerror
	br          .L1170

.L1169:
	load.64*    %r5229 <- 0[L]
	symaddr.64* %r5230 <- <anon symbol:0x62d0012d5e60>
	load.64*    %r5231 <- 0[t1]
	load.64*    %r5232 <- 0[t2]
	push.64*    %r5229
	push.64*    %r5230
	push.64*    %r5231
	push.64*    %r5232
	call        luaG_runerror
	br          .L1170

.L1170:
	phisrc.32   %phi177(return) <- $0
	br          .L1171

.L1171:
	phi.32      %r5233 <- %phi177(return)
	ret.32      $0


addinfo:
.L1172:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[msg]
	load.64*    %r5234 <- 0[L]
	load.64*    %r5235 <- 40[%r5234]
	store.64*   %r5235 -> 0[ci]
	load.64*    %r5236 <- 0[ci]
	load.64*    %r5237 <- 8[%r5236]
	load.32     %r5238 <- 8[%r5237]
	seteq.32    %r5239 <- %r5238, $6
	br          %r5239, .L1175, .L1174

.L1175:
	load.64*    %r5240 <- 0[ci]
	load.64*    %r5241 <- 8[%r5240]
	load.64*    %r5242 <- 0[%r5241]
	load.8      %r5243 <- 10[%r5242]
	br          %r5243, .L1174, .L1173

.L1173:
	load.64*    %r5244 <- 0[L]
	load.64*    %r5245 <- 0[ci]
	push.64*    %r5244
	push.64*    %r5245
	call.32     %r5246 <- currentline
	store.32    %r5246 -> 0[line]
	symaddr.64* %r5247 <- buff
	load.64*    %r5248 <- 0[ci]
	push.64*    %r5248
	call.64*    %r5249 <- getluaproto
	load.64*    %r5250 <- 64[%r5249]
	add.64*     %r5251 <- %r5250, $24
	ptrcast.64* %r5252 <- (64) %r5251
	push.64*    %r5247
	push.64*    %r5252
	push.64     $60
	call        luaO_chunkid
	load.64*    %r5253 <- 0[L]
	symaddr.64* %r5254 <- <anon symbol:0x62d0012d7168>
	symaddr.64* %r5255 <- buff
	load.32     %r5256 <- 0[line]
	load.64*    %r5257 <- 0[msg]
	push.64*    %r5253
	push.64*    %r5254
	push.64*    %r5255
	push.32     %r5256
	push.64*    %r5257
	call.64*    %r5258 <- luaO_pushfstring
	br          .L1174

.L1174:
	ret


luaG_errormsg:
.L1176:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r5259 <- 0[L]
	load.64     %r5260 <- 176[%r5259]
	setne.32    %r5261 <- %r5260, $0
	br          %r5261, .L1177, .L1178

.L1177:
	load.64*    %r5262 <- 0[L]
	load.64*    %r5263 <- 64[%r5262]
	ptrcast.64* %r5264 <- (64) %r5263
	load.64*    %r5265 <- 0[L]
	load.64     %r5266 <- 176[%r5265]
	add.64*     %r5267 <- %r5264, %r5266
	ptrcast.64* %r5268 <- (64) %r5267
	store.64*   %r5268 -> 0[errfunc]
	load.64*    %r5269 <- 0[errfunc]
	load.32     %r5270 <- 8[%r5269]
	seteq.32    %r5271 <- %r5270, $6
	br          %r5271, .L1180, .L1179

.L1179:
	load.64*    %r5272 <- 0[L]
	push.64*    %r5272
	push.32     $5
	call        luaD_throw
	br          .L1180

.L1180:
	load.64*    %r5273 <- 0[L]
	load.64*    %r5274 <- 16[%r5273]
	sub.64*     %r5275 <- %r5274, $16
	store.64*   %r5275 -> 0[o2]
	load.64*    %r5276 <- 0[L]
	load.64*    %r5277 <- 16[%r5276]
	store.64*   %r5277 -> 0[o1]
	load.64*    %r5278 <- 0[o2]
	load.f64    %r5279 <- 0[%r5278]
	fpcast.f64  %r5280 <- (64) %r5279
	load.64*    %r5281 <- 0[o1]
	store.f64   %r5280 -> 0[%r5281]
	load.64*    %r5282 <- 0[o2]
	load.32     %r5283 <- 8[%r5282]
	scast.32    %r5284 <- (32) %r5283
	load.64*    %r5285 <- 0[o1]
	store.32    %r5284 -> 8[%r5285]
	load.64*    %r5286 <- 0[errfunc]
	store.64*   %r5286 -> 0[o2]
	load.64*    %r5287 <- 0[L]
	load.64*    %r5288 <- 16[%r5287]
	sub.64*     %r5289 <- %r5288, $16
	store.64*   %r5289 -> 0[o1]
	load.64*    %r5290 <- 0[o2]
	load.f64    %r5291 <- 0[%r5290]
	fpcast.f64  %r5292 <- (64) %r5291
	load.64*    %r5293 <- 0[o1]
	store.f64   %r5292 -> 0[%r5293]
	load.64*    %r5294 <- 0[o2]
	load.32     %r5295 <- 8[%r5294]
	scast.32    %r5296 <- (32) %r5295
	load.64*    %r5297 <- 0[o1]
	store.32    %r5296 -> 8[%r5297]
	load.64*    %r5298 <- 0[L]
	load.64*    %r5299 <- 56[%r5298]
	ptrcast.64* %r5300 <- (64) %r5299
	load.64*    %r5301 <- 0[L]
	load.64*    %r5302 <- 16[%r5301]
	ptrcast.64* %r5303 <- (64) %r5302
	sub.64      %r5304 <- %r5300, %r5303
	setle.32    %r5305 <- %r5304, $16
	br          %r5305, .L1181, .L1182

.L1181:
	load.64*    %r5306 <- 0[L]
	push.64*    %r5306
	push.32     $1
	call        luaD_growstack
	br          .L1183

.L1182:
	br          .L1183

.L1183:
	load.64*    %r5307 <- 0[L]
	load.64*    %r5308 <- 16[%r5307]
	add.64*     %r5309 <- %r5308, $16
	store.64*   %r5309 -> 16[%r5307]
	load.64*    %r5310 <- 0[L]
	load.64*    %r5311 <- 0[L]
	load.64*    %r5312 <- 16[%r5311]
	sub.64*     %r5313 <- %r5312, $32
	push.64*    %r5310
	push.64*    %r5313
	push.32     $1
	call        luaD_call
	br          .L1178

.L1178:
	load.64*    %r5314 <- 0[L]
	push.64*    %r5314
	push.32     $2
	call        luaD_throw
	br          .L1184

.L1184:
	ret


luaG_runerror:
.L1185:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fmt]
	symaddr.64* %r5315 <- fmt
	cast.64*    %r5316 <- (64) %r5315
	store.64*   %r5316 -> 0[argp]
	load.64*    %r5317 <- 0[L]
	load.64*    %r5318 <- 0[L]
	load.64*    %r5319 <- 0[fmt]
	load.64*    %r5320 <- 0[argp]
	push.64*    %r5318
	push.64*    %r5319
	push.64*    %r5320
	call.64*    %r5321 <- luaO_pushvfstring
	push.64*    %r5317
	push.64*    %r5321
	call        addinfo
	load.64*    %r5322 <- 0[L]
	push.64*    %r5322
	call        luaG_errormsg
	br          .L1186

.L1186:
	ret


luaZ_fill:
.L1187:
	<entry-point>
	store.64*   %arg1 -> 0[z]
	load.64*    %r5323 <- 0[z]
	load.64*    %r5324 <- 32[%r5323]
	store.64*   %r5324 -> 0[L]
	load.64*    %r5325 <- 0[L]
	load.64*    %r5326 <- 0[z]
	load.64*    %r5327 <- 24[%r5326]
	symaddr.64* %r5328 <- size
	push.64*    %r5325
	push.64*    %r5327
	push.64*    %r5328
	load.64*    %r5329 <- 0[z]
	load.64*    %r5330 <- 16[%r5329]
	call.64*    %r5331 <- %r5330
	store.64*   %r5331 -> 0[buff]
	load.64*    %r5332 <- 0[buff]
	seteq.32    %r5333 <- %r5332, $0
	load.64     %r5334 <- 0[size]
	seteq.32    %r5335 <- %r5334, $0
	or-bool.32  %r5336 <- %r5333, %r5335
	br          %r5336, .L1188, .L1189

.L1188:
	phisrc.32   %phi178(return) <- $0xffffffff
	br          .L1190

.L1189:
	load.64     %r5338 <- 0[size]
	sub.64      %r5339 <- %r5338, $1
	load.64*    %r5340 <- 0[z]
	store.64    %r5339 -> 0[%r5340]
	load.64*    %r5341 <- 0[buff]
	load.64*    %r5342 <- 0[z]
	store.64*   %r5341 -> 8[%r5342]
	load.64*    %r5343 <- 0[z]
	load.64*    %r5344 <- 8[%r5343]
	add.64*     %r5345 <- %r5344, $1
	store.64*   %r5345 -> 8[%r5343]
	load.8      %r5346 <- 0[%r5344]
	scast.8     %r5347 <- (8) %r5346
	cast.32     %r5348 <- (8) %r5347
	phisrc.32   %phi179(return) <- %r5348
	br          .L1190

.L1190:
	phi.32      %r5337 <- %phi178(return), %phi179(return)
	ret.32      %r5337


luaZ_init:
.L1191:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[reader]
	store.64*   %arg4 -> 0[data]
	load.64*    %r5349 <- 0[L]
	load.64*    %r5350 <- 0[z]
	store.64*   %r5349 -> 32[%r5350]
	load.64*    %r5351 <- 0[reader]
	load.64*    %r5352 <- 0[z]
	store.64*   %r5351 -> 16[%r5352]
	load.64*    %r5353 <- 0[data]
	load.64*    %r5354 <- 0[z]
	store.64*   %r5353 -> 24[%r5354]
	load.64*    %r5355 <- 0[z]
	store.64    $0 -> 0[%r5355]
	load.64*    %r5356 <- 0[z]
	store.64*   $0 -> 8[%r5356]
	br          .L1192

.L1192:
	ret


luaZ_openspace:
.L1193:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[buff]
	store.64    %arg3 -> 0[n]
	load.64     %r5357 <- 0[n]
	load.64*    %r5358 <- 0[buff]
	load.64     %r5359 <- 16[%r5358]
	seta.32     %r5360 <- %r5357, %r5359
	br          %r5360, .L1194, .L1195

.L1194:
	load.64     %r5361 <- 0[n]
	setb.32     %r5362 <- %r5361, $32
	br          %r5362, .L1196, .L1197

.L1196:
	store.64    $32 -> 0[n]
	br          .L1197

.L1197:
	load.64     %r5363 <- 0[n]
	add.64      %r5364 <- %r5363, $1
	cast.64     %r5365 <- (64) %r5364
	setbe.32    %r5366 <- %r5365, $-3
	br          %r5366, .L1198, .L1199

.L1198:
	load.64*    %r5367 <- 0[L]
	load.64*    %r5368 <- 0[buff]
	load.64*    %r5369 <- 0[%r5368]
	cast.64*    %r5370 <- (64) %r5369
	load.64*    %r5371 <- 0[buff]
	load.64     %r5372 <- 16[%r5371]
	mulu.64     %r5373 <- %r5372, $1
	load.64     %r5374 <- 0[n]
	mulu.64     %r5375 <- %r5374, $1
	push.64*    %r5367
	push.64*    %r5370
	push.64     %r5373
	push.64     %r5375
	call.64*    %r5376 <- luaM_realloc_
	phisrc.64*  %phi180 <- %r5376
	br          .L1200

.L1199:
	load.64*    %r5377 <- 0[L]
	push.64*    %r5377
	call.64*    %r5378 <- luaM_toobig
	cast.64*    %r5379 <- (64) %r5378
	phisrc.64*  %phi181 <- %r5379
	br          .L1200

.L1200:
	phi.64*     %r5380 <- %phi180, %phi181
	ptrcast.64* %r5381 <- (64) %r5380
	load.64*    %r5382 <- 0[buff]
	store.64*   %r5381 -> 0[%r5382]
	load.64     %r5383 <- 0[n]
	load.64*    %r5384 <- 0[buff]
	store.64    %r5383 -> 16[%r5384]
	br          .L1195

.L1195:
	load.64*    %r5385 <- 0[buff]
	load.64*    %r5386 <- 0[%r5385]
	phisrc.64*  %phi182(return) <- %r5386
	br          .L1201

.L1201:
	phi.64*     %r5387 <- %phi182(return)
	ret.64*     %r5386


save:
.L1202:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r5388 <- 0[ls]
	load.64*    %r5389 <- 72[%r5388]
	store.64*   %r5389 -> 0[b]
	load.64*    %r5390 <- 0[b]
	load.64     %r5391 <- 8[%r5390]
	add.64      %r5392 <- %r5391, $1
	load.64*    %r5393 <- 0[b]
	load.64     %r5394 <- 16[%r5393]
	seta.32     %r5395 <- %r5392, %r5394
	br          %r5395, .L1203, .L1204

.L1203:
	load.64*    %r5396 <- 0[b]
	load.64     %r5397 <- 16[%r5396]
	setae.32    %r5398 <- %r5397, $0x7ffffffffffffffe
	br          %r5398, .L1205, .L1206

.L1205:
	load.64*    %r5399 <- 0[ls]
	symaddr.64* %r5400 <- <anon symbol:0x62d0012da428>
	push.64*    %r5399
	push.64*    %r5400
	push.32     $0
	call        luaX_lexerror
	br          .L1206

.L1206:
	load.64*    %r5401 <- 0[b]
	load.64     %r5402 <- 16[%r5401]
	mulu.64     %r5403 <- %r5402, $2
	store.64    %r5403 -> 0[newsize]
	load.64     %r5404 <- 0[newsize]
	add.64      %r5405 <- %r5404, $1
	cast.64     %r5406 <- (64) %r5405
	setbe.32    %r5407 <- %r5406, $-3
	br          %r5407, .L1207, .L1208

.L1207:
	load.64*    %r5408 <- 0[ls]
	load.64*    %r5409 <- 56[%r5408]
	load.64*    %r5410 <- 0[b]
	load.64*    %r5411 <- 0[%r5410]
	cast.64*    %r5412 <- (64) %r5411
	load.64*    %r5413 <- 0[b]
	load.64     %r5414 <- 16[%r5413]
	mulu.64     %r5415 <- %r5414, $1
	load.64     %r5416 <- 0[newsize]
	mulu.64     %r5417 <- %r5416, $1
	push.64*    %r5409
	push.64*    %r5412
	push.64     %r5415
	push.64     %r5417
	call.64*    %r5418 <- luaM_realloc_
	phisrc.64*  %phi183 <- %r5418
	br          .L1209

.L1208:
	load.64*    %r5419 <- 0[ls]
	load.64*    %r5420 <- 56[%r5419]
	push.64*    %r5420
	call.64*    %r5421 <- luaM_toobig
	cast.64*    %r5422 <- (64) %r5421
	phisrc.64*  %phi184 <- %r5422
	br          .L1209

.L1209:
	phi.64*     %r5423 <- %phi183, %phi184
	ptrcast.64* %r5424 <- (64) %r5423
	load.64*    %r5425 <- 0[b]
	store.64*   %r5424 -> 0[%r5425]
	load.64     %r5426 <- 0[newsize]
	load.64*    %r5427 <- 0[b]
	store.64    %r5426 -> 16[%r5427]
	br          .L1204

.L1204:
	load.32     %r5428 <- 0[c]
	scast.8     %r5429 <- (32) %r5428
	load.64*    %r5430 <- 0[b]
	load.64*    %r5431 <- 0[%r5430]
	load.64*    %r5432 <- 0[b]
	load.64     %r5433 <- 8[%r5432]
	add.64      %r5434 <- %r5433, $1
	store.64    %r5434 -> 8[%r5432]
	add.64*     %r5435 <- %r5431, %r5433
	store.8     %r5429 -> 0[%r5435]
	br          .L1210

.L1210:
	ret


luaX_init:
.L1211:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    $0 -> 0[i]
	br          .L1215

.L1215:
	load.32     %r5436 <- 0[i]
	setlt.32    %r5437 <- %r5436, $21
	br          %r5437, .L1212, .L1214

.L1212:
	load.64*    %r5438 <- 0[L]
	symaddr.64* %r5439 <- luaX_tokens
	load.32     %r5440 <- 0[i]
	scast.64    %r5441 <- (32) %r5440
	muls.64     %r5442 <- %r5441, $8
	add.64*     %r5443 <- %r5439, %r5442
	load.64*    %r5444 <- 0[%r5443]
	symaddr.64* %r5445 <- luaX_tokens
	load.32     %r5446 <- 0[i]
	scast.64    %r5447 <- (32) %r5446
	muls.64     %r5448 <- %r5447, $8
	add.64*     %r5449 <- %r5445, %r5448
	load.64*    %r5450 <- 0[%r5449]
	push.64*    %r5450
	call.64     %r5451 <- strlen
	push.64*    %r5438
	push.64*    %r5444
	push.64     %r5451
	call.64*    %r5452 <- luaS_newlstr
	store.64*   %r5452 -> 0[ts]
	load.64*    %r5453 <- 0[ts]
	load.8      %r5454 <- 9[%r5453]
	cast.32     %r5455 <- (8) %r5454
	or.32       %r5456 <- %r5455, $32
	scast.8     %r5457 <- (32) %r5456
	store.8     %r5457 -> 9[%r5453]
	load.32     %r5458 <- 0[i]
	add.32      %r5459 <- %r5458, $1
	scast.8     %r5460 <- (32) %r5459
	load.64*    %r5461 <- 0[ts]
	store.8     %r5460 -> 10[%r5461]
	br          .L1213

.L1213:
	load.32     %r5462 <- 0[i]
	add.32      %r5463 <- %r5462, $1
	store.32    %r5463 -> 0[i]
	br          .L1215

.L1214:
	ret


luaX_token2str:
.L1216:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.32     %r5464 <- 0[token]
	setlt.32    %r5465 <- %r5464, $257
	br          %r5465, .L1217, .L1218

.L1217:
	call.64*    %r5466 <- __ctype_b_loc
	load.64*    %r5467 <- 0[%r5466]
	load.32     %r5468 <- 0[token]
	scast.32    %r5469 <- (32) %r5468
	scast.64    %r5470 <- (32) %r5469
	muls.64     %r5471 <- %r5470, $2
	add.64*     %r5472 <- %r5467, %r5471
	load.16     %r5473 <- 0[%r5472]
	cast.32     %r5474 <- (16) %r5473
	and.32      %r5475 <- %r5474, $2
	br          %r5475, .L1220, .L1221

.L1220:
	load.64*    %r5476 <- 0[ls]
	load.64*    %r5477 <- 56[%r5476]
	symaddr.64* %r5478 <- <anon symbol:0x62d0012dbe70>
	load.32     %r5479 <- 0[token]
	push.64*    %r5477
	push.64*    %r5478
	push.32     %r5479
	call.64*    %r5480 <- luaO_pushfstring
	phisrc.64*  %phi185 <- %r5480
	br          .L1222

.L1221:
	load.64*    %r5481 <- 0[ls]
	load.64*    %r5482 <- 56[%r5481]
	symaddr.64* %r5483 <- <anon symbol:0x62d0012db900>
	load.32     %r5484 <- 0[token]
	push.64*    %r5482
	push.64*    %r5483
	push.32     %r5484
	call.64*    %r5485 <- luaO_pushfstring
	phisrc.64*  %phi186 <- %r5485
	br          .L1222

.L1222:
	phi.64*     %r5486 <- %phi185, %phi186
	phisrc.64*  %phi187(return) <- %r5486
	br          .L1219

.L1218:
	symaddr.64* %r5488 <- luaX_tokens
	load.32     %r5489 <- 0[token]
	sub.32      %r5490 <- %r5489, $257
	scast.64    %r5491 <- (32) %r5490
	muls.64     %r5492 <- %r5491, $8
	add.64*     %r5493 <- %r5488, %r5492
	load.64*    %r5494 <- 0[%r5493]
	phisrc.64*  %phi188(return) <- %r5494
	br          .L1219

.L1219:
	phi.64*     %r5487 <- %phi187(return), %phi188(return)
	ret.64*     %r5487


txtToken:
.L1224:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.32     %r5495 <- 0[token]
	switch.32   %r5495, 284 -> .L1228, 285 -> .L1226, 286 -> .L1227, default -> .L1229

.L1226:
	br          .L1227

.L1227:
	br          .L1228

.L1228:
	load.64*    %r5496 <- 0[ls]
	push.64*    %r5496
	push.32     $0
	call        save
	load.64*    %r5497 <- 0[ls]
	load.64*    %r5498 <- 72[%r5497]
	load.64*    %r5499 <- 0[%r5498]
	phisrc.64*  %phi189(return) <- %r5499
	br          .L1230

.L1229:
	load.64*    %r5501 <- 0[ls]
	load.32     %r5502 <- 0[token]
	push.64*    %r5501
	push.32     %r5502
	call.64*    %r5503 <- luaX_token2str
	phisrc.64*  %phi190(return) <- %r5503
	br          .L1230

.L1230:
	phi.64*     %r5500 <- %phi189(return), %phi190(return)
	ret.64*     %r5500


luaX_lexerror:
.L1231:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[msg]
	store.32    %arg3 -> 0[token]
	symaddr.64* %r5504 <- buff
	load.64*    %r5505 <- 0[ls]
	load.64*    %r5506 <- 80[%r5505]
	add.64*     %r5507 <- %r5506, $24
	ptrcast.64* %r5508 <- (64) %r5507
	push.64*    %r5504
	push.64*    %r5508
	push.64     $80
	call        luaO_chunkid
	load.64*    %r5509 <- 0[ls]
	load.64*    %r5510 <- 56[%r5509]
	symaddr.64* %r5511 <- <anon symbol:0x62d00128b1c0>
	symaddr.64* %r5512 <- buff
	load.64*    %r5513 <- 0[ls]
	load.32     %r5514 <- 4[%r5513]
	load.64*    %r5515 <- 0[msg]
	push.64*    %r5510
	push.64*    %r5511
	push.64*    %r5512
	push.32     %r5514
	push.64*    %r5515
	call.64*    %r5516 <- luaO_pushfstring
	store.64*   %r5516 -> 0[msg]
	load.32     %r5517 <- 0[token]
	br          %r5517, .L1232, .L1233

.L1232:
	load.64*    %r5518 <- 0[ls]
	load.64*    %r5519 <- 56[%r5518]
	symaddr.64* %r5520 <- <anon symbol:0x62d00128bad0>
	load.64*    %r5521 <- 0[msg]
	load.64*    %r5522 <- 0[ls]
	load.32     %r5523 <- 0[token]
	push.64*    %r5522
	push.32     %r5523
	call.64*    %r5524 <- txtToken
	push.64*    %r5519
	push.64*    %r5520
	push.64*    %r5521
	push.64*    %r5524
	call.64*    %r5525 <- luaO_pushfstring
	br          .L1233

.L1233:
	load.64*    %r5526 <- 0[ls]
	load.64*    %r5527 <- 56[%r5526]
	push.64*    %r5527
	push.32     $3
	call        luaD_throw
	br          .L1234

.L1234:
	ret


luaX_syntaxerror:
.L1235:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[msg]
	load.64*    %r5528 <- 0[ls]
	load.64*    %r5529 <- 0[msg]
	load.64*    %r5530 <- 0[ls]
	load.32     %r5531 <- 16[%r5530]
	push.64*    %r5528
	push.64*    %r5529
	push.32     %r5531
	call        luaX_lexerror
	br          .L1236

.L1236:
	ret


luaX_newstring:
.L1237:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	load.64*    %r5532 <- 0[ls]
	load.64*    %r5533 <- 56[%r5532]
	store.64*   %r5533 -> 0[L]
	load.64*    %r5534 <- 0[L]
	load.64*    %r5535 <- 0[str]
	load.64     %r5536 <- 0[l]
	push.64*    %r5534
	push.64*    %r5535
	push.64     %r5536
	call.64*    %r5537 <- luaS_newlstr
	store.64*   %r5537 -> 0[ts]
	load.64*    %r5538 <- 0[L]
	load.64*    %r5539 <- 0[ls]
	load.64*    %r5540 <- 48[%r5539]
	load.64*    %r5541 <- 8[%r5540]
	load.64*    %r5542 <- 0[ts]
	push.64*    %r5538
	push.64*    %r5541
	push.64*    %r5542
	call.64*    %r5543 <- luaH_setstr
	store.64*   %r5543 -> 0[o]
	load.64*    %r5544 <- 0[o]
	load.32     %r5545 <- 8[%r5544]
	seteq.32    %r5546 <- %r5545, $0
	br          %r5546, .L1238, .L1239

.L1238:
	load.64*    %r5547 <- 0[o]
	store.64*   %r5547 -> 0[i_o]
	load.64*    %r5548 <- 0[i_o]
	store.32    $1 -> 0[%r5548]
	load.64*    %r5549 <- 0[i_o]
	store.32    $1 -> 8[%r5549]
	load.64*    %r5550 <- 0[L]
	load.64*    %r5551 <- 32[%r5550]
	load.64     %r5552 <- 120[%r5551]
	load.64*    %r5553 <- 0[L]
	load.64*    %r5554 <- 32[%r5553]
	load.64     %r5555 <- 112[%r5554]
	setae.32    %r5556 <- %r5552, %r5555
	br          %r5556, .L1240, .L1241

.L1240:
	load.64*    %r5557 <- 0[L]
	push.64*    %r5557
	call        luaC_step
	br          .L1241

.L1241:
	br          .L1239

.L1239:
	load.64*    %r5558 <- 0[ts]
	phisrc.64*  %phi191(return) <- %r5558
	br          .L1242

.L1242:
	phi.64*     %r5559 <- %phi191(return)
	ret.64*     %r5558


inclinenumber:
.L1243:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r5560 <- 0[ls]
	load.32     %r5561 <- 0[%r5560]
	store.32    %r5561 -> 0[old]
	load.64*    %r5562 <- 0[ls]
	load.64*    %r5563 <- 64[%r5562]
	load.64     %r5564 <- 0[%r5563]
	sub.64      %r5565 <- %r5564, $1
	store.64    %r5565 -> 0[%r5563]
	seta.32     %r5566 <- %r5564, $0
	br          %r5566, .L1244, .L1245

.L1244:
	load.64*    %r5567 <- 0[ls]
	load.64*    %r5568 <- 64[%r5567]
	load.64*    %r5569 <- 8[%r5568]
	add.64*     %r5570 <- %r5569, $1
	store.64*   %r5570 -> 8[%r5568]
	load.8      %r5571 <- 0[%r5569]
	scast.8     %r5572 <- (8) %r5571
	cast.32     %r5573 <- (8) %r5572
	phisrc.32   %phi192 <- %r5573
	br          .L1246

.L1245:
	load.64*    %r5574 <- 0[ls]
	load.64*    %r5575 <- 64[%r5574]
	push.64*    %r5575
	call.32     %r5576 <- luaZ_fill
	phisrc.32   %phi193 <- %r5576
	br          .L1246

.L1246:
	phi.32      %r5577 <- %phi192, %phi193
	load.64*    %r5578 <- 0[ls]
	store.32    %r5577 -> 0[%r5578]
	load.64*    %r5579 <- 0[ls]
	load.32     %r5580 <- 0[%r5579]
	seteq.32    %r5581 <- %r5580, $10
	br          %r5581, .L1249, .L1250

.L1250:
	load.64*    %r5582 <- 0[ls]
	load.32     %r5583 <- 0[%r5582]
	seteq.32    %r5584 <- %r5583, $13
	br          %r5584, .L1249, .L1248

.L1249:
	load.64*    %r5585 <- 0[ls]
	load.32     %r5586 <- 0[%r5585]
	load.32     %r5587 <- 0[old]
	setne.32    %r5588 <- %r5586, %r5587
	br          %r5588, .L1247, .L1248

.L1247:
	load.64*    %r5589 <- 0[ls]
	load.64*    %r5590 <- 64[%r5589]
	load.64     %r5591 <- 0[%r5590]
	sub.64      %r5592 <- %r5591, $1
	store.64    %r5592 -> 0[%r5590]
	seta.32     %r5593 <- %r5591, $0
	br          %r5593, .L1251, .L1252

.L1251:
	load.64*    %r5594 <- 0[ls]
	load.64*    %r5595 <- 64[%r5594]
	load.64*    %r5596 <- 8[%r5595]
	add.64*     %r5597 <- %r5596, $1
	store.64*   %r5597 -> 8[%r5595]
	load.8      %r5598 <- 0[%r5596]
	scast.8     %r5599 <- (8) %r5598
	cast.32     %r5600 <- (8) %r5599
	phisrc.32   %phi194 <- %r5600
	br          .L1253

.L1252:
	load.64*    %r5601 <- 0[ls]
	load.64*    %r5602 <- 64[%r5601]
	push.64*    %r5602
	call.32     %r5603 <- luaZ_fill
	phisrc.32   %phi195 <- %r5603
	br          .L1253

.L1253:
	phi.32      %r5604 <- %phi194, %phi195
	load.64*    %r5605 <- 0[ls]
	store.32    %r5604 -> 0[%r5605]
	br          .L1248

.L1248:
	load.64*    %r5606 <- 0[ls]
	load.32     %r5607 <- 4[%r5606]
	add.32      %r5608 <- %r5607, $1
	store.32    %r5608 -> 4[%r5606]
	setge.32    %r5609 <- %r5608, $0x7ffffffd
	br          %r5609, .L1254, .L1255

.L1254:
	load.64*    %r5610 <- 0[ls]
	symaddr.64* %r5611 <- <anon symbol:0x62d0012e18a8>
	push.64*    %r5610
	push.64*    %r5611
	call        luaX_syntaxerror
	br          .L1255

.L1255:
	ret


luaX_setinput:
.L1256:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ls]
	store.64*   %arg3 -> 0[z]
	store.64*   %arg4 -> 0[source]
	load.64*    %r5612 <- 0[ls]
	store.8     $46 -> 88[%r5612]
	load.64*    %r5613 <- 0[L]
	load.64*    %r5614 <- 0[ls]
	store.64*   %r5613 -> 56[%r5614]
	load.64*    %r5615 <- 0[ls]
	store.32    $287 -> 32[%r5615]
	load.64*    %r5616 <- 0[z]
	load.64*    %r5617 <- 0[ls]
	store.64*   %r5616 -> 64[%r5617]
	load.64*    %r5618 <- 0[ls]
	store.64*   $0 -> 48[%r5618]
	load.64*    %r5619 <- 0[ls]
	store.32    $1 -> 4[%r5619]
	load.64*    %r5620 <- 0[ls]
	store.32    $1 -> 8[%r5620]
	load.64*    %r5621 <- 0[source]
	load.64*    %r5622 <- 0[ls]
	store.64*   %r5621 -> 80[%r5622]
	load.64*    %r5623 <- 0[ls]
	load.64*    %r5624 <- 56[%r5623]
	load.64*    %r5625 <- 0[ls]
	load.64*    %r5626 <- 72[%r5625]
	load.64*    %r5627 <- 0[%r5626]
	cast.64*    %r5628 <- (64) %r5627
	load.64*    %r5629 <- 0[ls]
	load.64*    %r5630 <- 72[%r5629]
	load.64     %r5631 <- 16[%r5630]
	mulu.64     %r5632 <- %r5631, $1
	push.64*    %r5624
	push.64*    %r5628
	push.64     %r5632
	push.64     $32
	call.64*    %r5633 <- luaM_realloc_
	ptrcast.64* %r5634 <- (64) %r5633
	load.64*    %r5635 <- 0[ls]
	load.64*    %r5636 <- 72[%r5635]
	store.64*   %r5634 -> 0[%r5636]
	load.64*    %r5637 <- 0[ls]
	load.64*    %r5638 <- 72[%r5637]
	store.64    $32 -> 16[%r5638]
	load.64*    %r5639 <- 0[ls]
	load.64*    %r5640 <- 64[%r5639]
	load.64     %r5641 <- 0[%r5640]
	sub.64      %r5642 <- %r5641, $1
	store.64    %r5642 -> 0[%r5640]
	seta.32     %r5643 <- %r5641, $0
	br          %r5643, .L1257, .L1258

.L1257:
	load.64*    %r5644 <- 0[ls]
	load.64*    %r5645 <- 64[%r5644]
	load.64*    %r5646 <- 8[%r5645]
	add.64*     %r5647 <- %r5646, $1
	store.64*   %r5647 -> 8[%r5645]
	load.8      %r5648 <- 0[%r5646]
	scast.8     %r5649 <- (8) %r5648
	cast.32     %r5650 <- (8) %r5649
	phisrc.32   %phi196 <- %r5650
	br          .L1259

.L1258:
	load.64*    %r5651 <- 0[ls]
	load.64*    %r5652 <- 64[%r5651]
	push.64*    %r5652
	call.32     %r5653 <- luaZ_fill
	phisrc.32   %phi197 <- %r5653
	br          .L1259

.L1259:
	phi.32      %r5654 <- %phi196, %phi197
	load.64*    %r5655 <- 0[ls]
	store.32    %r5654 -> 0[%r5655]
	br          .L1260

.L1260:
	ret


check_next:
.L1261:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[set]
	load.64*    %r5656 <- 0[set]
	load.64*    %r5657 <- 0[ls]
	load.32     %r5658 <- 0[%r5657]
	push.64*    %r5656
	push.32     %r5658
	call.64*    %r5659 <- strchr
	br          %r5659, .L1263, .L1262

.L1262:
	phisrc.32   %phi198(return) <- $0
	br          .L1264

.L1263:
	load.64*    %r5661 <- 0[ls]
	load.64*    %r5662 <- 0[ls]
	load.32     %r5663 <- 0[%r5662]
	push.64*    %r5661
	push.32     %r5663
	call        save
	load.64*    %r5664 <- 0[ls]
	load.64*    %r5665 <- 64[%r5664]
	load.64     %r5666 <- 0[%r5665]
	sub.64      %r5667 <- %r5666, $1
	store.64    %r5667 -> 0[%r5665]
	seta.32     %r5668 <- %r5666, $0
	br          %r5668, .L1265, .L1266

.L1265:
	load.64*    %r5669 <- 0[ls]
	load.64*    %r5670 <- 64[%r5669]
	load.64*    %r5671 <- 8[%r5670]
	add.64*     %r5672 <- %r5671, $1
	store.64*   %r5672 -> 8[%r5670]
	load.8      %r5673 <- 0[%r5671]
	scast.8     %r5674 <- (8) %r5673
	cast.32     %r5675 <- (8) %r5674
	phisrc.32   %phi199 <- %r5675
	br          .L1267

.L1266:
	load.64*    %r5676 <- 0[ls]
	load.64*    %r5677 <- 64[%r5676]
	push.64*    %r5677
	call.32     %r5678 <- luaZ_fill
	phisrc.32   %phi200 <- %r5678
	br          .L1267

.L1267:
	phi.32      %r5679 <- %phi199, %phi200
	load.64*    %r5680 <- 0[ls]
	store.32    %r5679 -> 0[%r5680]
	phisrc.32   %phi201(return) <- $1
	br          .L1264

.L1264:
	phi.32      %r5660 <- %phi198(return), %phi201(return)
	ret.32      %r5660


buffreplace:
.L1268:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.8     %arg2 -> 0[from]
	store.8     %arg3 -> 0[to]
	load.64*    %r5681 <- 0[ls]
	load.64*    %r5682 <- 72[%r5681]
	load.64     %r5683 <- 8[%r5682]
	store.64    %r5683 -> 0[n]
	load.64*    %r5684 <- 0[ls]
	load.64*    %r5685 <- 72[%r5684]
	load.64*    %r5686 <- 0[%r5685]
	store.64*   %r5686 -> 0[p]
	br          .L1272

.L1272:
	load.64     %r5687 <- 0[n]
	sub.64      %r5688 <- %r5687, $1
	store.64    %r5688 -> 0[n]
	br          %r5687, .L1269, .L1271

.L1269:
	load.64*    %r5689 <- 0[p]
	load.64     %r5690 <- 0[n]
	add.64*     %r5691 <- %r5689, %r5690
	load.8      %r5692 <- 0[%r5691]
	scast.32    %r5693 <- (8) %r5692
	load.8      %r5694 <- 0[from]
	scast.32    %r5695 <- (8) %r5694
	seteq.32    %r5696 <- %r5693, %r5695
	br          %r5696, .L1273, .L1274

.L1273:
	load.8      %r5697 <- 0[to]
	load.64*    %r5698 <- 0[p]
	load.64     %r5699 <- 0[n]
	add.64*     %r5700 <- %r5698, %r5699
	store.8     %r5697 -> 0[%r5700]
	br          .L1274

.L1274:
	br          .L1270

.L1270:
	br          .L1272

.L1271:
	ret


read_numeral:
.L1275:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	br          .L1276

.L1276:
	load.64*    %r5701 <- 0[ls]
	load.64*    %r5702 <- 0[ls]
	load.32     %r5703 <- 0[%r5702]
	push.64*    %r5701
	push.32     %r5703
	call        save
	load.64*    %r5704 <- 0[ls]
	load.64*    %r5705 <- 64[%r5704]
	load.64     %r5706 <- 0[%r5705]
	sub.64      %r5707 <- %r5706, $1
	store.64    %r5707 -> 0[%r5705]
	seta.32     %r5708 <- %r5706, $0
	br          %r5708, .L1279, .L1280

.L1279:
	load.64*    %r5709 <- 0[ls]
	load.64*    %r5710 <- 64[%r5709]
	load.64*    %r5711 <- 8[%r5710]
	add.64*     %r5712 <- %r5711, $1
	store.64*   %r5712 -> 8[%r5710]
	load.8      %r5713 <- 0[%r5711]
	scast.8     %r5714 <- (8) %r5713
	cast.32     %r5715 <- (8) %r5714
	phisrc.32   %phi202 <- %r5715
	br          .L1281

.L1280:
	load.64*    %r5716 <- 0[ls]
	load.64*    %r5717 <- 64[%r5716]
	push.64*    %r5717
	call.32     %r5718 <- luaZ_fill
	phisrc.32   %phi203 <- %r5718
	br          .L1281

.L1281:
	phi.32      %r5719 <- %phi202, %phi203
	load.64*    %r5720 <- 0[ls]
	store.32    %r5719 -> 0[%r5720]
	br          .L1277

.L1277:
	call.64*    %r5721 <- __ctype_b_loc
	load.64*    %r5722 <- 0[%r5721]
	load.64*    %r5723 <- 0[ls]
	load.32     %r5724 <- 0[%r5723]
	scast.32    %r5725 <- (32) %r5724
	scast.64    %r5726 <- (32) %r5725
	muls.64     %r5727 <- %r5726, $2
	add.64*     %r5728 <- %r5722, %r5727
	load.16     %r5729 <- 0[%r5728]
	cast.32     %r5730 <- (16) %r5729
	and.32      %r5731 <- %r5730, $0x800
	br          %r5731, .L1276, .L1282

.L1282:
	load.64*    %r5732 <- 0[ls]
	load.32     %r5733 <- 0[%r5732]
	seteq.32    %r5734 <- %r5733, $46
	br          %r5734, .L1276, .L1278

.L1278:
	load.64*    %r5735 <- 0[ls]
	symaddr.64* %r5736 <- <anon symbol:0x62d0012fcef8>
	push.64*    %r5735
	push.64*    %r5736
	call.32     %r5737 <- check_next
	br          %r5737, .L1283, .L1284

.L1283:
	load.64*    %r5738 <- 0[ls]
	symaddr.64* %r5739 <- <anon symbol:0x62d0012fd298>
	push.64*    %r5738
	push.64*    %r5739
	call.32     %r5740 <- check_next
	br          .L1284

.L1284:
	br          .L1288

.L1288:
	call.64*    %r5741 <- __ctype_b_loc
	load.64*    %r5742 <- 0[%r5741]
	load.64*    %r5743 <- 0[ls]
	load.32     %r5744 <- 0[%r5743]
	scast.32    %r5745 <- (32) %r5744
	scast.64    %r5746 <- (32) %r5745
	muls.64     %r5747 <- %r5746, $2
	add.64*     %r5748 <- %r5742, %r5747
	load.16     %r5749 <- 0[%r5748]
	cast.32     %r5750 <- (16) %r5749
	and.32      %r5751 <- %r5750, $8
	br          %r5751, .L1285, .L1289

.L1289:
	load.64*    %r5752 <- 0[ls]
	load.32     %r5753 <- 0[%r5752]
	seteq.32    %r5754 <- %r5753, $95
	br          %r5754, .L1285, .L1287

.L1285:
	load.64*    %r5755 <- 0[ls]
	load.64*    %r5756 <- 0[ls]
	load.32     %r5757 <- 0[%r5756]
	push.64*    %r5755
	push.32     %r5757
	call        save
	load.64*    %r5758 <- 0[ls]
	load.64*    %r5759 <- 64[%r5758]
	load.64     %r5760 <- 0[%r5759]
	sub.64      %r5761 <- %r5760, $1
	store.64    %r5761 -> 0[%r5759]
	seta.32     %r5762 <- %r5760, $0
	br          %r5762, .L1290, .L1291

.L1290:
	load.64*    %r5763 <- 0[ls]
	load.64*    %r5764 <- 64[%r5763]
	load.64*    %r5765 <- 8[%r5764]
	add.64*     %r5766 <- %r5765, $1
	store.64*   %r5766 -> 8[%r5764]
	load.8      %r5767 <- 0[%r5765]
	scast.8     %r5768 <- (8) %r5767
	cast.32     %r5769 <- (8) %r5768
	phisrc.32   %phi204 <- %r5769
	br          .L1292

.L1291:
	load.64*    %r5770 <- 0[ls]
	load.64*    %r5771 <- 64[%r5770]
	push.64*    %r5771
	call.32     %r5772 <- luaZ_fill
	phisrc.32   %phi205 <- %r5772
	br          .L1292

.L1292:
	phi.32      %r5773 <- %phi204, %phi205
	load.64*    %r5774 <- 0[ls]
	store.32    %r5773 -> 0[%r5774]
	br          .L1286

.L1286:
	br          .L1288

.L1287:
	load.64*    %r5775 <- 0[ls]
	push.64*    %r5775
	push.32     $0
	call        save
	load.64*    %r5776 <- 0[ls]
	load.64*    %r5777 <- 0[ls]
	load.8      %r5778 <- 88[%r5777]
	push.64*    %r5776
	push.8      $46
	push.8      %r5778
	call        buffreplace
	load.64*    %r5779 <- 0[ls]
	load.64*    %r5780 <- 72[%r5779]
	load.64*    %r5781 <- 0[%r5780]
	load.64*    %r5782 <- 0[seminfo]
	add.64*     %r5783 <- %r5782, $0
	push.64*    %r5781
	push.64*    %r5783
	call.32     %r5784 <- luaO_str2d
	br          %r5784, .L1294, .L1293

.L1293:
	load.64*    %r5785 <- 0[ls]
	symaddr.64* %r5786 <- <anon symbol:0x62d0012ff080>
	push.64*    %r5785
	push.64*    %r5786
	push.32     $284
	call        luaX_lexerror
	br          .L1294

.L1294:
	ret


skip_sep:
.L1295:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[count]
	load.64*    %r5787 <- 0[ls]
	load.32     %r5788 <- 0[%r5787]
	store.32    %r5788 -> 0[s]
	load.64*    %r5789 <- 0[ls]
	load.64*    %r5790 <- 0[ls]
	load.32     %r5791 <- 0[%r5790]
	push.64*    %r5789
	push.32     %r5791
	call        save
	load.64*    %r5792 <- 0[ls]
	load.64*    %r5793 <- 64[%r5792]
	load.64     %r5794 <- 0[%r5793]
	sub.64      %r5795 <- %r5794, $1
	store.64    %r5795 -> 0[%r5793]
	seta.32     %r5796 <- %r5794, $0
	br          %r5796, .L1296, .L1297

.L1296:
	load.64*    %r5797 <- 0[ls]
	load.64*    %r5798 <- 64[%r5797]
	load.64*    %r5799 <- 8[%r5798]
	add.64*     %r5800 <- %r5799, $1
	store.64*   %r5800 -> 8[%r5798]
	load.8      %r5801 <- 0[%r5799]
	scast.8     %r5802 <- (8) %r5801
	cast.32     %r5803 <- (8) %r5802
	phisrc.32   %phi206 <- %r5803
	br          .L1298

.L1297:
	load.64*    %r5804 <- 0[ls]
	load.64*    %r5805 <- 64[%r5804]
	push.64*    %r5805
	call.32     %r5806 <- luaZ_fill
	phisrc.32   %phi207 <- %r5806
	br          .L1298

.L1298:
	phi.32      %r5807 <- %phi206, %phi207
	load.64*    %r5808 <- 0[ls]
	store.32    %r5807 -> 0[%r5808]
	br          .L1302

.L1302:
	load.64*    %r5809 <- 0[ls]
	load.32     %r5810 <- 0[%r5809]
	seteq.32    %r5811 <- %r5810, $61
	br          %r5811, .L1299, .L1301

.L1299:
	load.64*    %r5812 <- 0[ls]
	load.64*    %r5813 <- 0[ls]
	load.32     %r5814 <- 0[%r5813]
	push.64*    %r5812
	push.32     %r5814
	call        save
	load.64*    %r5815 <- 0[ls]
	load.64*    %r5816 <- 64[%r5815]
	load.64     %r5817 <- 0[%r5816]
	sub.64      %r5818 <- %r5817, $1
	store.64    %r5818 -> 0[%r5816]
	seta.32     %r5819 <- %r5817, $0
	br          %r5819, .L1303, .L1304

.L1303:
	load.64*    %r5820 <- 0[ls]
	load.64*    %r5821 <- 64[%r5820]
	load.64*    %r5822 <- 8[%r5821]
	add.64*     %r5823 <- %r5822, $1
	store.64*   %r5823 -> 8[%r5821]
	load.8      %r5824 <- 0[%r5822]
	scast.8     %r5825 <- (8) %r5824
	cast.32     %r5826 <- (8) %r5825
	phisrc.32   %phi208 <- %r5826
	br          .L1305

.L1304:
	load.64*    %r5827 <- 0[ls]
	load.64*    %r5828 <- 64[%r5827]
	push.64*    %r5828
	call.32     %r5829 <- luaZ_fill
	phisrc.32   %phi209 <- %r5829
	br          .L1305

.L1305:
	phi.32      %r5830 <- %phi208, %phi209
	load.64*    %r5831 <- 0[ls]
	store.32    %r5830 -> 0[%r5831]
	load.32     %r5832 <- 0[count]
	add.32      %r5833 <- %r5832, $1
	store.32    %r5833 -> 0[count]
	br          .L1300

.L1300:
	br          .L1302

.L1301:
	load.32     %r5834 <- 0[count]
	load.32     %r5835 <- 0[count]
	neg.32      %r5836 <- %r5835
	sub.32      %r5837 <- %r5836, $1
	load.64*    %r5838 <- 0[ls]
	load.32     %r5839 <- 0[%r5838]
	load.32     %r5840 <- 0[s]
	seteq.32    %r5841 <- %r5839, %r5840
	select.32   %r5842 <- %r5841, %r5834, %r5837
	phisrc.32   %phi210(return) <- %r5842
	br          .L1306

.L1306:
	phi.32      %r5843 <- %phi210(return)
	ret.32      %r5842


read_long_string:
.L1307:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	store.32    %arg3 -> 0[sep]
	store.32    $0 -> 0[cont]
	load.64*    %r5844 <- 0[ls]
	load.64*    %r5845 <- 0[ls]
	load.32     %r5846 <- 0[%r5845]
	push.64*    %r5844
	push.32     %r5846
	call        save
	load.64*    %r5847 <- 0[ls]
	load.64*    %r5848 <- 64[%r5847]
	load.64     %r5849 <- 0[%r5848]
	sub.64      %r5850 <- %r5849, $1
	store.64    %r5850 -> 0[%r5848]
	seta.32     %r5851 <- %r5849, $0
	br          %r5851, .L1308, .L1309

.L1308:
	load.64*    %r5852 <- 0[ls]
	load.64*    %r5853 <- 64[%r5852]
	load.64*    %r5854 <- 8[%r5853]
	add.64*     %r5855 <- %r5854, $1
	store.64*   %r5855 -> 8[%r5853]
	load.8      %r5856 <- 0[%r5854]
	scast.8     %r5857 <- (8) %r5856
	cast.32     %r5858 <- (8) %r5857
	phisrc.32   %phi211 <- %r5858
	br          .L1310

.L1309:
	load.64*    %r5859 <- 0[ls]
	load.64*    %r5860 <- 64[%r5859]
	push.64*    %r5860
	call.32     %r5861 <- luaZ_fill
	phisrc.32   %phi212 <- %r5861
	br          .L1310

.L1310:
	phi.32      %r5862 <- %phi211, %phi212
	load.64*    %r5863 <- 0[ls]
	store.32    %r5862 -> 0[%r5863]
	load.64*    %r5864 <- 0[ls]
	load.32     %r5865 <- 0[%r5864]
	seteq.32    %r5866 <- %r5865, $10
	br          %r5866, .L1311, .L1313

.L1313:
	load.64*    %r5867 <- 0[ls]
	load.32     %r5868 <- 0[%r5867]
	seteq.32    %r5869 <- %r5868, $13
	br          %r5869, .L1311, .L1312

.L1311:
	load.64*    %r5870 <- 0[ls]
	push.64*    %r5870
	call        inclinenumber
	br          .L1312

.L1312:
	br          .L1317

.L1317:
	br          .L1314

.L1314:
	load.64*    %r5871 <- 0[ls]
	load.32     %r5872 <- 0[%r5871]
	switch.32   %r5872, 10 -> .L1321, 13 -> .L1322, 93 -> .L1320, 4294967295 -> .L1319, default -> .L1323

.L1319:
	load.64*    %r5873 <- 0[ls]
	symaddr.64* %r5874 <- <anon symbol:0x62d0013028b0>
	symaddr.64* %r5875 <- <anon symbol:0x62d001302510>
	ptrcast.64* %r5876 <- (64) %r5875
	load.64*    %r5877 <- 0[seminfo]
	select.64*  %r5878 <- %r5877, %r5874, %r5876
	push.64*    %r5873
	push.64*    %r5878
	push.32     $287
	call        luaX_lexerror
	br          .L1318

.L1320:
	load.64*    %r5879 <- 0[ls]
	push.64*    %r5879
	call.32     %r5880 <- skip_sep
	load.32     %r5881 <- 0[sep]
	seteq.32    %r5882 <- %r5880, %r5881
	br          %r5882, .L1324, .L1325

.L1324:
	load.64*    %r5883 <- 0[ls]
	load.64*    %r5884 <- 0[ls]
	load.32     %r5885 <- 0[%r5884]
	push.64*    %r5883
	push.32     %r5885
	call        save
	load.64*    %r5886 <- 0[ls]
	load.64*    %r5887 <- 64[%r5886]
	load.64     %r5888 <- 0[%r5887]
	sub.64      %r5889 <- %r5888, $1
	store.64    %r5889 -> 0[%r5887]
	seta.32     %r5890 <- %r5888, $0
	br          %r5890, .L1326, .L1327

.L1326:
	load.64*    %r5891 <- 0[ls]
	load.64*    %r5892 <- 64[%r5891]
	load.64*    %r5893 <- 8[%r5892]
	add.64*     %r5894 <- %r5893, $1
	store.64*   %r5894 -> 8[%r5892]
	load.8      %r5895 <- 0[%r5893]
	scast.8     %r5896 <- (8) %r5895
	cast.32     %r5897 <- (8) %r5896
	phisrc.32   %phi213 <- %r5897
	br          .L1328

.L1327:
	load.64*    %r5898 <- 0[ls]
	load.64*    %r5899 <- 64[%r5898]
	push.64*    %r5899
	call.32     %r5900 <- luaZ_fill
	phisrc.32   %phi214 <- %r5900
	br          .L1328

.L1328:
	phi.32      %r5901 <- %phi213, %phi214
	load.64*    %r5902 <- 0[ls]
	store.32    %r5901 -> 0[%r5902]
	br          .L1329

.L1325:
	br          .L1318

.L1321:
	br          .L1322

.L1322:
	load.64*    %r5903 <- 0[ls]
	push.64*    %r5903
	push.32     $10
	call        save
	load.64*    %r5904 <- 0[ls]
	push.64*    %r5904
	call        inclinenumber
	load.64*    %r5905 <- 0[seminfo]
	br          %r5905, .L1331, .L1330

.L1330:
	load.64*    %r5906 <- 0[ls]
	load.64*    %r5907 <- 72[%r5906]
	store.64    $0 -> 8[%r5907]
	br          .L1331

.L1331:
	br          .L1318

.L1323:
	load.64*    %r5908 <- 0[seminfo]
	br          %r5908, .L1332, .L1333

.L1332:
	load.64*    %r5909 <- 0[ls]
	load.64*    %r5910 <- 0[ls]
	load.32     %r5911 <- 0[%r5910]
	push.64*    %r5909
	push.32     %r5911
	call        save
	load.64*    %r5912 <- 0[ls]
	load.64*    %r5913 <- 64[%r5912]
	load.64     %r5914 <- 0[%r5913]
	sub.64      %r5915 <- %r5914, $1
	store.64    %r5915 -> 0[%r5913]
	seta.32     %r5916 <- %r5914, $0
	br          %r5916, .L1334, .L1335

.L1334:
	load.64*    %r5917 <- 0[ls]
	load.64*    %r5918 <- 64[%r5917]
	load.64*    %r5919 <- 8[%r5918]
	add.64*     %r5920 <- %r5919, $1
	store.64*   %r5920 -> 8[%r5918]
	load.8      %r5921 <- 0[%r5919]
	scast.8     %r5922 <- (8) %r5921
	cast.32     %r5923 <- (8) %r5922
	phisrc.32   %phi215 <- %r5923
	br          .L1336

.L1335:
	load.64*    %r5924 <- 0[ls]
	load.64*    %r5925 <- 64[%r5924]
	push.64*    %r5925
	call.32     %r5926 <- luaZ_fill
	phisrc.32   %phi216 <- %r5926
	br          .L1336

.L1336:
	phi.32      %r5927 <- %phi215, %phi216
	load.64*    %r5928 <- 0[ls]
	store.32    %r5927 -> 0[%r5928]
	br          .L1337

.L1333:
	load.64*    %r5929 <- 0[ls]
	load.64*    %r5930 <- 64[%r5929]
	load.64     %r5931 <- 0[%r5930]
	sub.64      %r5932 <- %r5931, $1
	store.64    %r5932 -> 0[%r5930]
	seta.32     %r5933 <- %r5931, $0
	br          %r5933, .L1338, .L1339

.L1338:
	load.64*    %r5934 <- 0[ls]
	load.64*    %r5935 <- 64[%r5934]
	load.64*    %r5936 <- 8[%r5935]
	add.64*     %r5937 <- %r5936, $1
	store.64*   %r5937 -> 8[%r5935]
	load.8      %r5938 <- 0[%r5936]
	scast.8     %r5939 <- (8) %r5938
	cast.32     %r5940 <- (8) %r5939
	phisrc.32   %phi217 <- %r5940
	br          .L1340

.L1339:
	load.64*    %r5941 <- 0[ls]
	load.64*    %r5942 <- 64[%r5941]
	push.64*    %r5942
	call.32     %r5943 <- luaZ_fill
	phisrc.32   %phi218 <- %r5943
	br          .L1340

.L1340:
	phi.32      %r5944 <- %phi217, %phi218
	load.64*    %r5945 <- 0[ls]
	store.32    %r5944 -> 0[%r5945]
	br          .L1337

.L1337:
	br          .L1318

.L1318:
	br          .L1315

.L1315:
	br          .L1317

.L1329:
	load.64*    %r5946 <- 0[seminfo]
	br          %r5946, .L1341, .L1342

.L1341:
	load.64*    %r5947 <- 0[ls]
	load.64*    %r5948 <- 0[ls]
	load.64*    %r5949 <- 72[%r5948]
	load.64*    %r5950 <- 0[%r5949]
	load.32     %r5951 <- 0[sep]
	add.32      %r5952 <- $2, %r5951
	scast.64    %r5953 <- (32) %r5952
	add.64*     %r5954 <- %r5950, %r5953
	load.64*    %r5955 <- 0[ls]
	load.64*    %r5956 <- 72[%r5955]
	load.64     %r5957 <- 8[%r5956]
	load.32     %r5958 <- 0[sep]
	add.32      %r5959 <- $2, %r5958
	muls.32     %r5960 <- $2, %r5959
	scast.64    %r5961 <- (32) %r5960
	sub.64      %r5962 <- %r5957, %r5961
	push.64*    %r5947
	push.64*    %r5954
	push.64     %r5962
	call.64*    %r5963 <- luaX_newstring
	load.64*    %r5964 <- 0[seminfo]
	store.64*   %r5963 -> 0[%r5964]
	br          .L1342

.L1342:
	ret


read_string:
.L1343:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[del]
	store.64*   %arg3 -> 0[seminfo]
	load.64*    %r5965 <- 0[ls]
	load.64*    %r5966 <- 0[ls]
	load.32     %r5967 <- 0[%r5966]
	push.64*    %r5965
	push.32     %r5967
	call        save
	load.64*    %r5968 <- 0[ls]
	load.64*    %r5969 <- 64[%r5968]
	load.64     %r5970 <- 0[%r5969]
	sub.64      %r5971 <- %r5970, $1
	store.64    %r5971 -> 0[%r5969]
	seta.32     %r5972 <- %r5970, $0
	br          %r5972, .L1344, .L1345

.L1344:
	load.64*    %r5973 <- 0[ls]
	load.64*    %r5974 <- 64[%r5973]
	load.64*    %r5975 <- 8[%r5974]
	add.64*     %r5976 <- %r5975, $1
	store.64*   %r5976 -> 8[%r5974]
	load.8      %r5977 <- 0[%r5975]
	scast.8     %r5978 <- (8) %r5977
	cast.32     %r5979 <- (8) %r5978
	phisrc.32   %phi219 <- %r5979
	br          .L1346

.L1345:
	load.64*    %r5980 <- 0[ls]
	load.64*    %r5981 <- 64[%r5980]
	push.64*    %r5981
	call.32     %r5982 <- luaZ_fill
	phisrc.32   %phi220 <- %r5982
	br          .L1346

.L1346:
	phi.32      %r5983 <- %phi219, %phi220
	load.64*    %r5984 <- 0[ls]
	store.32    %r5983 -> 0[%r5984]
	br          .L1350

.L1350:
	load.64*    %r5985 <- 0[ls]
	load.32     %r5986 <- 0[%r5985]
	load.32     %r5987 <- 0[del]
	setne.32    %r5988 <- %r5986, %r5987
	br          %r5988, .L1347, .L1349

.L1347:
	load.64*    %r5989 <- 0[ls]
	load.32     %r5990 <- 0[%r5989]
	switch.32   %r5990, 10 -> .L1353, 13 -> .L1354, 92 -> .L1355, 4294967295 -> .L1352, default -> .L1356

.L1352:
	load.64*    %r5991 <- 0[ls]
	symaddr.64* %r5992 <- <anon symbol:0x62d001308bf8>
	push.64*    %r5991
	push.64*    %r5992
	push.32     $287
	call        luaX_lexerror
	br          .L1348

.L1353:
	br          .L1354

.L1354:
	load.64*    %r5993 <- 0[ls]
	symaddr.64* %r5994 <- <anon symbol:0x62d001308f98>
	push.64*    %r5993
	push.64*    %r5994
	push.32     $286
	call        luaX_lexerror
	br          .L1348

.L1355:
	load.64*    %r5995 <- 0[ls]
	load.64*    %r5996 <- 64[%r5995]
	load.64     %r5997 <- 0[%r5996]
	sub.64      %r5998 <- %r5997, $1
	store.64    %r5998 -> 0[%r5996]
	seta.32     %r5999 <- %r5997, $0
	br          %r5999, .L1357, .L1358

.L1357:
	load.64*    %r6000 <- 0[ls]
	load.64*    %r6001 <- 64[%r6000]
	load.64*    %r6002 <- 8[%r6001]
	add.64*     %r6003 <- %r6002, $1
	store.64*   %r6003 -> 8[%r6001]
	load.8      %r6004 <- 0[%r6002]
	scast.8     %r6005 <- (8) %r6004
	cast.32     %r6006 <- (8) %r6005
	phisrc.32   %phi221 <- %r6006
	br          .L1359

.L1358:
	load.64*    %r6007 <- 0[ls]
	load.64*    %r6008 <- 64[%r6007]
	push.64*    %r6008
	call.32     %r6009 <- luaZ_fill
	phisrc.32   %phi222 <- %r6009
	br          .L1359

.L1359:
	phi.32      %r6010 <- %phi221, %phi222
	load.64*    %r6011 <- 0[ls]
	store.32    %r6010 -> 0[%r6011]
	load.64*    %r6012 <- 0[ls]
	load.32     %r6013 <- 0[%r6012]
	switch.32   %r6013, 10 -> .L1368, 13 -> .L1369, 97 -> .L1361, 98 -> .L1362, 102 -> .L1363, 110 -> .L1364, 114 -> .L1365, 116 -> .L1366, 118 -> .L1367, 4294967295 -> .L1370, default -> .L1371

.L1361:
	store.32    $7 -> 0[c]
	br          .L1360

.L1362:
	store.32    $8 -> 0[c]
	br          .L1360

.L1363:
	store.32    $12 -> 0[c]
	br          .L1360

.L1364:
	store.32    $10 -> 0[c]
	br          .L1360

.L1365:
	store.32    $13 -> 0[c]
	br          .L1360

.L1366:
	store.32    $9 -> 0[c]
	br          .L1360

.L1367:
	store.32    $11 -> 0[c]
	br          .L1360

.L1368:
	br          .L1369

.L1369:
	load.64*    %r6014 <- 0[ls]
	push.64*    %r6014
	push.32     $10
	call        save
	load.64*    %r6015 <- 0[ls]
	push.64*    %r6015
	call        inclinenumber
	br          .L1348

.L1370:
	br          .L1348

.L1371:
	call.64*    %r6016 <- __ctype_b_loc
	load.64*    %r6017 <- 0[%r6016]
	load.64*    %r6018 <- 0[ls]
	load.32     %r6019 <- 0[%r6018]
	scast.32    %r6020 <- (32) %r6019
	scast.64    %r6021 <- (32) %r6020
	muls.64     %r6022 <- %r6021, $2
	add.64*     %r6023 <- %r6017, %r6022
	load.16     %r6024 <- 0[%r6023]
	cast.32     %r6025 <- (16) %r6024
	and.32      %r6026 <- %r6025, $0x800
	br          %r6026, .L1373, .L1372

.L1372:
	load.64*    %r6027 <- 0[ls]
	load.64*    %r6028 <- 0[ls]
	load.32     %r6029 <- 0[%r6028]
	push.64*    %r6027
	push.32     %r6029
	call        save
	load.64*    %r6030 <- 0[ls]
	load.64*    %r6031 <- 64[%r6030]
	load.64     %r6032 <- 0[%r6031]
	sub.64      %r6033 <- %r6032, $1
	store.64    %r6033 -> 0[%r6031]
	seta.32     %r6034 <- %r6032, $0
	br          %r6034, .L1374, .L1375

.L1374:
	load.64*    %r6035 <- 0[ls]
	load.64*    %r6036 <- 64[%r6035]
	load.64*    %r6037 <- 8[%r6036]
	add.64*     %r6038 <- %r6037, $1
	store.64*   %r6038 -> 8[%r6036]
	load.8      %r6039 <- 0[%r6037]
	scast.8     %r6040 <- (8) %r6039
	cast.32     %r6041 <- (8) %r6040
	phisrc.32   %phi223 <- %r6041
	br          .L1376

.L1375:
	load.64*    %r6042 <- 0[ls]
	load.64*    %r6043 <- 64[%r6042]
	push.64*    %r6043
	call.32     %r6044 <- luaZ_fill
	phisrc.32   %phi224 <- %r6044
	br          .L1376

.L1376:
	phi.32      %r6045 <- %phi223, %phi224
	load.64*    %r6046 <- 0[ls]
	store.32    %r6045 -> 0[%r6046]
	br          .L1377

.L1373:
	store.32    $0 -> 0[i]
	store.32    $0 -> 0[c]
	br          .L1378

.L1378:
	load.32     %r6047 <- 0[c]
	muls.32     %r6048 <- $10, %r6047
	load.64*    %r6049 <- 0[ls]
	load.32     %r6050 <- 0[%r6049]
	sub.32      %r6051 <- %r6050, $48
	add.32      %r6052 <- %r6048, %r6051
	store.32    %r6052 -> 0[c]
	load.64*    %r6053 <- 0[ls]
	load.64*    %r6054 <- 64[%r6053]
	load.64     %r6055 <- 0[%r6054]
	sub.64      %r6056 <- %r6055, $1
	store.64    %r6056 -> 0[%r6054]
	seta.32     %r6057 <- %r6055, $0
	br          %r6057, .L1381, .L1382

.L1381:
	load.64*    %r6058 <- 0[ls]
	load.64*    %r6059 <- 64[%r6058]
	load.64*    %r6060 <- 8[%r6059]
	add.64*     %r6061 <- %r6060, $1
	store.64*   %r6061 -> 8[%r6059]
	load.8      %r6062 <- 0[%r6060]
	scast.8     %r6063 <- (8) %r6062
	cast.32     %r6064 <- (8) %r6063
	phisrc.32   %phi225 <- %r6064
	br          .L1383

.L1382:
	load.64*    %r6065 <- 0[ls]
	load.64*    %r6066 <- 64[%r6065]
	push.64*    %r6066
	call.32     %r6067 <- luaZ_fill
	phisrc.32   %phi226 <- %r6067
	br          .L1383

.L1383:
	phi.32      %r6068 <- %phi225, %phi226
	load.64*    %r6069 <- 0[ls]
	store.32    %r6068 -> 0[%r6069]
	br          .L1379

.L1379:
	load.32     %r6070 <- 0[i]
	add.32      %r6071 <- %r6070, $1
	store.32    %r6071 -> 0[i]
	setlt.32    %r6072 <- %r6071, $3
	br          %r6072, .L1384, .L1380

.L1384:
	call.64*    %r6073 <- __ctype_b_loc
	load.64*    %r6074 <- 0[%r6073]
	load.64*    %r6075 <- 0[ls]
	load.32     %r6076 <- 0[%r6075]
	scast.32    %r6077 <- (32) %r6076
	scast.64    %r6078 <- (32) %r6077
	muls.64     %r6079 <- %r6078, $2
	add.64*     %r6080 <- %r6074, %r6079
	load.16     %r6081 <- 0[%r6080]
	cast.32     %r6082 <- (16) %r6081
	and.32      %r6083 <- %r6082, $0x800
	br          %r6083, .L1378, .L1380

.L1380:
	load.32     %r6084 <- 0[c]
	setgt.32    %r6085 <- %r6084, $255
	br          %r6085, .L1385, .L1386

.L1385:
	load.64*    %r6086 <- 0[ls]
	symaddr.64* %r6087 <- <anon symbol:0x62d00130c088>
	push.64*    %r6086
	push.64*    %r6087
	push.32     $286
	call        luaX_lexerror
	br          .L1386

.L1386:
	load.64*    %r6088 <- 0[ls]
	load.32     %r6089 <- 0[c]
	push.64*    %r6088
	push.32     %r6089
	call        save
	br          .L1377

.L1377:
	br          .L1348

.L1360:
	load.64*    %r6090 <- 0[ls]
	load.32     %r6091 <- 0[c]
	push.64*    %r6090
	push.32     %r6091
	call        save
	load.64*    %r6092 <- 0[ls]
	load.64*    %r6093 <- 64[%r6092]
	load.64     %r6094 <- 0[%r6093]
	sub.64      %r6095 <- %r6094, $1
	store.64    %r6095 -> 0[%r6093]
	seta.32     %r6096 <- %r6094, $0
	br          %r6096, .L1387, .L1388

.L1387:
	load.64*    %r6097 <- 0[ls]
	load.64*    %r6098 <- 64[%r6097]
	load.64*    %r6099 <- 8[%r6098]
	add.64*     %r6100 <- %r6099, $1
	store.64*   %r6100 -> 8[%r6098]
	load.8      %r6101 <- 0[%r6099]
	scast.8     %r6102 <- (8) %r6101
	cast.32     %r6103 <- (8) %r6102
	phisrc.32   %phi227 <- %r6103
	br          .L1389

.L1388:
	load.64*    %r6104 <- 0[ls]
	load.64*    %r6105 <- 64[%r6104]
	push.64*    %r6105
	call.32     %r6106 <- luaZ_fill
	phisrc.32   %phi228 <- %r6106
	br          .L1389

.L1389:
	phi.32      %r6107 <- %phi227, %phi228
	load.64*    %r6108 <- 0[ls]
	store.32    %r6107 -> 0[%r6108]
	br          .L1348

.L1356:
	load.64*    %r6109 <- 0[ls]
	load.64*    %r6110 <- 0[ls]
	load.32     %r6111 <- 0[%r6110]
	push.64*    %r6109
	push.32     %r6111
	call        save
	load.64*    %r6112 <- 0[ls]
	load.64*    %r6113 <- 64[%r6112]
	load.64     %r6114 <- 0[%r6113]
	sub.64      %r6115 <- %r6114, $1
	store.64    %r6115 -> 0[%r6113]
	seta.32     %r6116 <- %r6114, $0
	br          %r6116, .L1390, .L1391

.L1390:
	load.64*    %r6117 <- 0[ls]
	load.64*    %r6118 <- 64[%r6117]
	load.64*    %r6119 <- 8[%r6118]
	add.64*     %r6120 <- %r6119, $1
	store.64*   %r6120 -> 8[%r6118]
	load.8      %r6121 <- 0[%r6119]
	scast.8     %r6122 <- (8) %r6121
	cast.32     %r6123 <- (8) %r6122
	phisrc.32   %phi229 <- %r6123
	br          .L1392

.L1391:
	load.64*    %r6124 <- 0[ls]
	load.64*    %r6125 <- 64[%r6124]
	push.64*    %r6125
	call.32     %r6126 <- luaZ_fill
	phisrc.32   %phi230 <- %r6126
	br          .L1392

.L1392:
	phi.32      %r6127 <- %phi229, %phi230
	load.64*    %r6128 <- 0[ls]
	store.32    %r6127 -> 0[%r6128]
	br          .L1351

.L1351:
	br          .L1348

.L1348:
	br          .L1350

.L1349:
	load.64*    %r6129 <- 0[ls]
	load.64*    %r6130 <- 0[ls]
	load.32     %r6131 <- 0[%r6130]
	push.64*    %r6129
	push.32     %r6131
	call        save
	load.64*    %r6132 <- 0[ls]
	load.64*    %r6133 <- 64[%r6132]
	load.64     %r6134 <- 0[%r6133]
	sub.64      %r6135 <- %r6134, $1
	store.64    %r6135 -> 0[%r6133]
	seta.32     %r6136 <- %r6134, $0
	br          %r6136, .L1393, .L1394

.L1393:
	load.64*    %r6137 <- 0[ls]
	load.64*    %r6138 <- 64[%r6137]
	load.64*    %r6139 <- 8[%r6138]
	add.64*     %r6140 <- %r6139, $1
	store.64*   %r6140 -> 8[%r6138]
	load.8      %r6141 <- 0[%r6139]
	scast.8     %r6142 <- (8) %r6141
	cast.32     %r6143 <- (8) %r6142
	phisrc.32   %phi231 <- %r6143
	br          .L1395

.L1394:
	load.64*    %r6144 <- 0[ls]
	load.64*    %r6145 <- 64[%r6144]
	push.64*    %r6145
	call.32     %r6146 <- luaZ_fill
	phisrc.32   %phi232 <- %r6146
	br          .L1395

.L1395:
	phi.32      %r6147 <- %phi231, %phi232
	load.64*    %r6148 <- 0[ls]
	store.32    %r6147 -> 0[%r6148]
	load.64*    %r6149 <- 0[ls]
	load.64*    %r6150 <- 0[ls]
	load.64*    %r6151 <- 72[%r6150]
	load.64*    %r6152 <- 0[%r6151]
	add.64*     %r6153 <- %r6152, $1
	load.64*    %r6154 <- 0[ls]
	load.64*    %r6155 <- 72[%r6154]
	load.64     %r6156 <- 8[%r6155]
	sub.64      %r6157 <- %r6156, $2
	push.64*    %r6149
	push.64*    %r6153
	push.64     %r6157
	call.64*    %r6158 <- luaX_newstring
	load.64*    %r6159 <- 0[seminfo]
	store.64*   %r6158 -> 0[%r6159]
	br          .L1396

.L1396:
	ret


llex:
.L1397:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	load.64*    %r6160 <- 0[ls]
	load.64*    %r6161 <- 72[%r6160]
	store.64    $0 -> 8[%r6161]
	br          .L1401

.L1401:
	br          .L1398

.L1398:
	load.64*    %r6162 <- 0[ls]
	load.32     %r6163 <- 0[%r6162]
	switch.32   %r6163, 10 -> .L1403, 13 -> .L1404, 34 -> .L1411, 39 -> .L1412, 45 -> .L1405, 46 -> .L1413, 60 -> .L1408, 61 -> .L1407, 62 -> .L1409, 91 -> .L1406, 126 -> .L1410, 4294967295 -> .L1414, default -> .L1415

.L1403:
	br          .L1404

.L1404:
	load.64*    %r6164 <- 0[ls]
	push.64*    %r6164
	call        inclinenumber
	br          .L1399

.L1405:
	load.64*    %r6165 <- 0[ls]
	load.64*    %r6166 <- 64[%r6165]
	load.64     %r6167 <- 0[%r6166]
	sub.64      %r6168 <- %r6167, $1
	store.64    %r6168 -> 0[%r6166]
	seta.32     %r6169 <- %r6167, $0
	br          %r6169, .L1416, .L1417

.L1416:
	load.64*    %r6170 <- 0[ls]
	load.64*    %r6171 <- 64[%r6170]
	load.64*    %r6172 <- 8[%r6171]
	add.64*     %r6173 <- %r6172, $1
	store.64*   %r6173 -> 8[%r6171]
	load.8      %r6174 <- 0[%r6172]
	scast.8     %r6175 <- (8) %r6174
	cast.32     %r6176 <- (8) %r6175
	phisrc.32   %phi233 <- %r6176
	br          .L1418

.L1417:
	load.64*    %r6177 <- 0[ls]
	load.64*    %r6178 <- 64[%r6177]
	push.64*    %r6178
	call.32     %r6179 <- luaZ_fill
	phisrc.32   %phi234 <- %r6179
	br          .L1418

.L1418:
	phi.32      %r6180 <- %phi233, %phi234
	load.64*    %r6181 <- 0[ls]
	store.32    %r6180 -> 0[%r6181]
	load.64*    %r6182 <- 0[ls]
	load.32     %r6183 <- 0[%r6182]
	setne.32    %r6184 <- %r6183, $45
	br          %r6184, .L1419, .L1420

.L1419:
	phisrc.32   %phi235(return) <- $45
	br          .L1421

.L1420:
	load.64*    %r6186 <- 0[ls]
	load.64*    %r6187 <- 64[%r6186]
	load.64     %r6188 <- 0[%r6187]
	sub.64      %r6189 <- %r6188, $1
	store.64    %r6189 -> 0[%r6187]
	seta.32     %r6190 <- %r6188, $0
	br          %r6190, .L1422, .L1423

.L1422:
	load.64*    %r6191 <- 0[ls]
	load.64*    %r6192 <- 64[%r6191]
	load.64*    %r6193 <- 8[%r6192]
	add.64*     %r6194 <- %r6193, $1
	store.64*   %r6194 -> 8[%r6192]
	load.8      %r6195 <- 0[%r6193]
	scast.8     %r6196 <- (8) %r6195
	cast.32     %r6197 <- (8) %r6196
	phisrc.32   %phi236 <- %r6197
	br          .L1424

.L1423:
	load.64*    %r6198 <- 0[ls]
	load.64*    %r6199 <- 64[%r6198]
	push.64*    %r6199
	call.32     %r6200 <- luaZ_fill
	phisrc.32   %phi237 <- %r6200
	br          .L1424

.L1424:
	phi.32      %r6201 <- %phi236, %phi237
	load.64*    %r6202 <- 0[ls]
	store.32    %r6201 -> 0[%r6202]
	load.64*    %r6203 <- 0[ls]
	load.32     %r6204 <- 0[%r6203]
	seteq.32    %r6205 <- %r6204, $91
	br          %r6205, .L1425, .L1426

.L1425:
	load.64*    %r6206 <- 0[ls]
	push.64*    %r6206
	call.32     %r6207 <- skip_sep
	store.32    %r6207 -> 0[sep]
	load.64*    %r6208 <- 0[ls]
	load.64*    %r6209 <- 72[%r6208]
	store.64    $0 -> 8[%r6209]
	load.32     %r6210 <- 0[sep]
	setge.32    %r6211 <- %r6210, $0
	br          %r6211, .L1427, .L1428

.L1427:
	load.64*    %r6212 <- 0[ls]
	load.32     %r6213 <- 0[sep]
	push.64*    %r6212
	push.64*    $0
	push.32     %r6213
	call        read_long_string
	load.64*    %r6214 <- 0[ls]
	load.64*    %r6215 <- 72[%r6214]
	store.64    $0 -> 8[%r6215]
	br          .L1399

.L1428:
	br          .L1426

.L1426:
	br          .L1432

.L1432:
	load.64*    %r6216 <- 0[ls]
	load.32     %r6217 <- 0[%r6216]
	seteq.32    %r6218 <- %r6217, $10
	br          %r6218, .L1431, .L1434

.L1434:
	load.64*    %r6219 <- 0[ls]
	load.32     %r6220 <- 0[%r6219]
	seteq.32    %r6221 <- %r6220, $13
	br          %r6221, .L1431, .L1433

.L1433:
	load.64*    %r6222 <- 0[ls]
	load.32     %r6223 <- 0[%r6222]
	setne.32    %r6224 <- %r6223, $0xffffffff
	br          %r6224, .L1429, .L1431

.L1429:
	load.64*    %r6225 <- 0[ls]
	load.64*    %r6226 <- 64[%r6225]
	load.64     %r6227 <- 0[%r6226]
	sub.64      %r6228 <- %r6227, $1
	store.64    %r6228 -> 0[%r6226]
	seta.32     %r6229 <- %r6227, $0
	br          %r6229, .L1435, .L1436

.L1435:
	load.64*    %r6230 <- 0[ls]
	load.64*    %r6231 <- 64[%r6230]
	load.64*    %r6232 <- 8[%r6231]
	add.64*     %r6233 <- %r6232, $1
	store.64*   %r6233 -> 8[%r6231]
	load.8      %r6234 <- 0[%r6232]
	scast.8     %r6235 <- (8) %r6234
	cast.32     %r6236 <- (8) %r6235
	phisrc.32   %phi238 <- %r6236
	br          .L1437

.L1436:
	load.64*    %r6237 <- 0[ls]
	load.64*    %r6238 <- 64[%r6237]
	push.64*    %r6238
	call.32     %r6239 <- luaZ_fill
	phisrc.32   %phi239 <- %r6239
	br          .L1437

.L1437:
	phi.32      %r6240 <- %phi238, %phi239
	load.64*    %r6241 <- 0[ls]
	store.32    %r6240 -> 0[%r6241]
	br          .L1430

.L1430:
	br          .L1432

.L1431:
	br          .L1399

.L1406:
	load.64*    %r6242 <- 0[ls]
	push.64*    %r6242
	call.32     %r6243 <- skip_sep
	store.32    %r6243 -> 0[sep]
	load.32     %r6244 <- 0[sep]
	setge.32    %r6245 <- %r6244, $0
	br          %r6245, .L1438, .L1439

.L1438:
	load.64*    %r6246 <- 0[ls]
	load.64*    %r6247 <- 0[seminfo]
	load.32     %r6248 <- 0[sep]
	push.64*    %r6246
	push.64*    %r6247
	push.32     %r6248
	call        read_long_string
	phisrc.32   %phi240(return) <- $286
	br          .L1421

.L1439:
	load.32     %r6249 <- 0[sep]
	seteq.32    %r6250 <- %r6249, $0xffffffff
	br          %r6250, .L1441, .L1442

.L1441:
	phisrc.32   %phi241(return) <- $91
	br          .L1421

.L1442:
	load.64*    %r6251 <- 0[ls]
	symaddr.64* %r6252 <- <anon symbol:0x62d00131e470>
	push.64*    %r6251
	push.64*    %r6252
	push.32     $286
	call        luaX_lexerror
	br          .L1443

.L1443:
	br          .L1440

.L1440:
	br          .L1407

.L1407:
	load.64*    %r6253 <- 0[ls]
	load.64*    %r6254 <- 64[%r6253]
	load.64     %r6255 <- 0[%r6254]
	sub.64      %r6256 <- %r6255, $1
	store.64    %r6256 -> 0[%r6254]
	seta.32     %r6257 <- %r6255, $0
	br          %r6257, .L1444, .L1445

.L1444:
	load.64*    %r6258 <- 0[ls]
	load.64*    %r6259 <- 64[%r6258]
	load.64*    %r6260 <- 8[%r6259]
	add.64*     %r6261 <- %r6260, $1
	store.64*   %r6261 -> 8[%r6259]
	load.8      %r6262 <- 0[%r6260]
	scast.8     %r6263 <- (8) %r6262
	cast.32     %r6264 <- (8) %r6263
	phisrc.32   %phi242 <- %r6264
	br          .L1446

.L1445:
	load.64*    %r6265 <- 0[ls]
	load.64*    %r6266 <- 64[%r6265]
	push.64*    %r6266
	call.32     %r6267 <- luaZ_fill
	phisrc.32   %phi243 <- %r6267
	br          .L1446

.L1446:
	phi.32      %r6268 <- %phi242, %phi243
	load.64*    %r6269 <- 0[ls]
	store.32    %r6268 -> 0[%r6269]
	load.64*    %r6270 <- 0[ls]
	load.32     %r6271 <- 0[%r6270]
	setne.32    %r6272 <- %r6271, $61
	br          %r6272, .L1447, .L1448

.L1447:
	phisrc.32   %phi244(return) <- $61
	br          .L1421

.L1448:
	load.64*    %r6273 <- 0[ls]
	load.64*    %r6274 <- 64[%r6273]
	load.64     %r6275 <- 0[%r6274]
	sub.64      %r6276 <- %r6275, $1
	store.64    %r6276 -> 0[%r6274]
	seta.32     %r6277 <- %r6275, $0
	br          %r6277, .L1450, .L1451

.L1450:
	load.64*    %r6278 <- 0[ls]
	load.64*    %r6279 <- 64[%r6278]
	load.64*    %r6280 <- 8[%r6279]
	add.64*     %r6281 <- %r6280, $1
	store.64*   %r6281 -> 8[%r6279]
	load.8      %r6282 <- 0[%r6280]
	scast.8     %r6283 <- (8) %r6282
	cast.32     %r6284 <- (8) %r6283
	phisrc.32   %phi245 <- %r6284
	br          .L1452

.L1451:
	load.64*    %r6285 <- 0[ls]
	load.64*    %r6286 <- 64[%r6285]
	push.64*    %r6286
	call.32     %r6287 <- luaZ_fill
	phisrc.32   %phi246 <- %r6287
	br          .L1452

.L1452:
	phi.32      %r6288 <- %phi245, %phi246
	load.64*    %r6289 <- 0[ls]
	store.32    %r6288 -> 0[%r6289]
	phisrc.32   %phi247(return) <- $280
	br          .L1421

.L1408:
	load.64*    %r6290 <- 0[ls]
	load.64*    %r6291 <- 64[%r6290]
	load.64     %r6292 <- 0[%r6291]
	sub.64      %r6293 <- %r6292, $1
	store.64    %r6293 -> 0[%r6291]
	seta.32     %r6294 <- %r6292, $0
	br          %r6294, .L1453, .L1454

.L1453:
	load.64*    %r6295 <- 0[ls]
	load.64*    %r6296 <- 64[%r6295]
	load.64*    %r6297 <- 8[%r6296]
	add.64*     %r6298 <- %r6297, $1
	store.64*   %r6298 -> 8[%r6296]
	load.8      %r6299 <- 0[%r6297]
	scast.8     %r6300 <- (8) %r6299
	cast.32     %r6301 <- (8) %r6300
	phisrc.32   %phi248 <- %r6301
	br          .L1455

.L1454:
	load.64*    %r6302 <- 0[ls]
	load.64*    %r6303 <- 64[%r6302]
	push.64*    %r6303
	call.32     %r6304 <- luaZ_fill
	phisrc.32   %phi249 <- %r6304
	br          .L1455

.L1455:
	phi.32      %r6305 <- %phi248, %phi249
	load.64*    %r6306 <- 0[ls]
	store.32    %r6305 -> 0[%r6306]
	load.64*    %r6307 <- 0[ls]
	load.32     %r6308 <- 0[%r6307]
	setne.32    %r6309 <- %r6308, $61
	br          %r6309, .L1456, .L1457

.L1456:
	phisrc.32   %phi250(return) <- $60
	br          .L1421

.L1457:
	load.64*    %r6310 <- 0[ls]
	load.64*    %r6311 <- 64[%r6310]
	load.64     %r6312 <- 0[%r6311]
	sub.64      %r6313 <- %r6312, $1
	store.64    %r6313 -> 0[%r6311]
	seta.32     %r6314 <- %r6312, $0
	br          %r6314, .L1459, .L1460

.L1459:
	load.64*    %r6315 <- 0[ls]
	load.64*    %r6316 <- 64[%r6315]
	load.64*    %r6317 <- 8[%r6316]
	add.64*     %r6318 <- %r6317, $1
	store.64*   %r6318 -> 8[%r6316]
	load.8      %r6319 <- 0[%r6317]
	scast.8     %r6320 <- (8) %r6319
	cast.32     %r6321 <- (8) %r6320
	phisrc.32   %phi251 <- %r6321
	br          .L1461

.L1460:
	load.64*    %r6322 <- 0[ls]
	load.64*    %r6323 <- 64[%r6322]
	push.64*    %r6323
	call.32     %r6324 <- luaZ_fill
	phisrc.32   %phi252 <- %r6324
	br          .L1461

.L1461:
	phi.32      %r6325 <- %phi251, %phi252
	load.64*    %r6326 <- 0[ls]
	store.32    %r6325 -> 0[%r6326]
	phisrc.32   %phi253(return) <- $282
	br          .L1421

.L1409:
	load.64*    %r6327 <- 0[ls]
	load.64*    %r6328 <- 64[%r6327]
	load.64     %r6329 <- 0[%r6328]
	sub.64      %r6330 <- %r6329, $1
	store.64    %r6330 -> 0[%r6328]
	seta.32     %r6331 <- %r6329, $0
	br          %r6331, .L1462, .L1463

.L1462:
	load.64*    %r6332 <- 0[ls]
	load.64*    %r6333 <- 64[%r6332]
	load.64*    %r6334 <- 8[%r6333]
	add.64*     %r6335 <- %r6334, $1
	store.64*   %r6335 -> 8[%r6333]
	load.8      %r6336 <- 0[%r6334]
	scast.8     %r6337 <- (8) %r6336
	cast.32     %r6338 <- (8) %r6337
	phisrc.32   %phi254 <- %r6338
	br          .L1464

.L1463:
	load.64*    %r6339 <- 0[ls]
	load.64*    %r6340 <- 64[%r6339]
	push.64*    %r6340
	call.32     %r6341 <- luaZ_fill
	phisrc.32   %phi255 <- %r6341
	br          .L1464

.L1464:
	phi.32      %r6342 <- %phi254, %phi255
	load.64*    %r6343 <- 0[ls]
	store.32    %r6342 -> 0[%r6343]
	load.64*    %r6344 <- 0[ls]
	load.32     %r6345 <- 0[%r6344]
	setne.32    %r6346 <- %r6345, $61
	br          %r6346, .L1465, .L1466

.L1465:
	phisrc.32   %phi256(return) <- $62
	br          .L1421

.L1466:
	load.64*    %r6347 <- 0[ls]
	load.64*    %r6348 <- 64[%r6347]
	load.64     %r6349 <- 0[%r6348]
	sub.64      %r6350 <- %r6349, $1
	store.64    %r6350 -> 0[%r6348]
	seta.32     %r6351 <- %r6349, $0
	br          %r6351, .L1468, .L1469

.L1468:
	load.64*    %r6352 <- 0[ls]
	load.64*    %r6353 <- 64[%r6352]
	load.64*    %r6354 <- 8[%r6353]
	add.64*     %r6355 <- %r6354, $1
	store.64*   %r6355 -> 8[%r6353]
	load.8      %r6356 <- 0[%r6354]
	scast.8     %r6357 <- (8) %r6356
	cast.32     %r6358 <- (8) %r6357
	phisrc.32   %phi257 <- %r6358
	br          .L1470

.L1469:
	load.64*    %r6359 <- 0[ls]
	load.64*    %r6360 <- 64[%r6359]
	push.64*    %r6360
	call.32     %r6361 <- luaZ_fill
	phisrc.32   %phi258 <- %r6361
	br          .L1470

.L1470:
	phi.32      %r6362 <- %phi257, %phi258
	load.64*    %r6363 <- 0[ls]
	store.32    %r6362 -> 0[%r6363]
	phisrc.32   %phi259(return) <- $281
	br          .L1421

.L1410:
	load.64*    %r6364 <- 0[ls]
	load.64*    %r6365 <- 64[%r6364]
	load.64     %r6366 <- 0[%r6365]
	sub.64      %r6367 <- %r6366, $1
	store.64    %r6367 -> 0[%r6365]
	seta.32     %r6368 <- %r6366, $0
	br          %r6368, .L1471, .L1472

.L1471:
	load.64*    %r6369 <- 0[ls]
	load.64*    %r6370 <- 64[%r6369]
	load.64*    %r6371 <- 8[%r6370]
	add.64*     %r6372 <- %r6371, $1
	store.64*   %r6372 -> 8[%r6370]
	load.8      %r6373 <- 0[%r6371]
	scast.8     %r6374 <- (8) %r6373
	cast.32     %r6375 <- (8) %r6374
	phisrc.32   %phi260 <- %r6375
	br          .L1473

.L1472:
	load.64*    %r6376 <- 0[ls]
	load.64*    %r6377 <- 64[%r6376]
	push.64*    %r6377
	call.32     %r6378 <- luaZ_fill
	phisrc.32   %phi261 <- %r6378
	br          .L1473

.L1473:
	phi.32      %r6379 <- %phi260, %phi261
	load.64*    %r6380 <- 0[ls]
	store.32    %r6379 -> 0[%r6380]
	load.64*    %r6381 <- 0[ls]
	load.32     %r6382 <- 0[%r6381]
	setne.32    %r6383 <- %r6382, $61
	br          %r6383, .L1474, .L1475

.L1474:
	phisrc.32   %phi262(return) <- $126
	br          .L1421

.L1475:
	load.64*    %r6384 <- 0[ls]
	load.64*    %r6385 <- 64[%r6384]
	load.64     %r6386 <- 0[%r6385]
	sub.64      %r6387 <- %r6386, $1
	store.64    %r6387 -> 0[%r6385]
	seta.32     %r6388 <- %r6386, $0
	br          %r6388, .L1477, .L1478

.L1477:
	load.64*    %r6389 <- 0[ls]
	load.64*    %r6390 <- 64[%r6389]
	load.64*    %r6391 <- 8[%r6390]
	add.64*     %r6392 <- %r6391, $1
	store.64*   %r6392 -> 8[%r6390]
	load.8      %r6393 <- 0[%r6391]
	scast.8     %r6394 <- (8) %r6393
	cast.32     %r6395 <- (8) %r6394
	phisrc.32   %phi263 <- %r6395
	br          .L1479

.L1478:
	load.64*    %r6396 <- 0[ls]
	load.64*    %r6397 <- 64[%r6396]
	push.64*    %r6397
	call.32     %r6398 <- luaZ_fill
	phisrc.32   %phi264 <- %r6398
	br          .L1479

.L1479:
	phi.32      %r6399 <- %phi263, %phi264
	load.64*    %r6400 <- 0[ls]
	store.32    %r6399 -> 0[%r6400]
	phisrc.32   %phi265(return) <- $283
	br          .L1421

.L1411:
	br          .L1412

.L1412:
	load.64*    %r6401 <- 0[ls]
	load.64*    %r6402 <- 0[ls]
	load.32     %r6403 <- 0[%r6402]
	load.64*    %r6404 <- 0[seminfo]
	push.64*    %r6401
	push.32     %r6403
	push.64*    %r6404
	call        read_string
	phisrc.32   %phi266(return) <- $286
	br          .L1421

.L1413:
	load.64*    %r6405 <- 0[ls]
	load.64*    %r6406 <- 0[ls]
	load.32     %r6407 <- 0[%r6406]
	push.64*    %r6405
	push.32     %r6407
	call        save
	load.64*    %r6408 <- 0[ls]
	load.64*    %r6409 <- 64[%r6408]
	load.64     %r6410 <- 0[%r6409]
	sub.64      %r6411 <- %r6410, $1
	store.64    %r6411 -> 0[%r6409]
	seta.32     %r6412 <- %r6410, $0
	br          %r6412, .L1480, .L1481

.L1480:
	load.64*    %r6413 <- 0[ls]
	load.64*    %r6414 <- 64[%r6413]
	load.64*    %r6415 <- 8[%r6414]
	add.64*     %r6416 <- %r6415, $1
	store.64*   %r6416 -> 8[%r6414]
	load.8      %r6417 <- 0[%r6415]
	scast.8     %r6418 <- (8) %r6417
	cast.32     %r6419 <- (8) %r6418
	phisrc.32   %phi267 <- %r6419
	br          .L1482

.L1481:
	load.64*    %r6420 <- 0[ls]
	load.64*    %r6421 <- 64[%r6420]
	push.64*    %r6421
	call.32     %r6422 <- luaZ_fill
	phisrc.32   %phi268 <- %r6422
	br          .L1482

.L1482:
	phi.32      %r6423 <- %phi267, %phi268
	load.64*    %r6424 <- 0[ls]
	store.32    %r6423 -> 0[%r6424]
	load.64*    %r6425 <- 0[ls]
	symaddr.64* %r6426 <- <anon symbol:0x62d001327508>
	push.64*    %r6425
	push.64*    %r6426
	call.32     %r6427 <- check_next
	br          %r6427, .L1483, .L1484

.L1483:
	load.64*    %r6428 <- 0[ls]
	symaddr.64* %r6429 <- <anon symbol:0x62d0013278a8>
	push.64*    %r6428
	push.64*    %r6429
	call.32     %r6430 <- check_next
	br          %r6430, .L1485, .L1486

.L1485:
	phisrc.32   %phi269(return) <- $279
	br          .L1421

.L1486:
	phisrc.32   %phi270(return) <- $278
	br          .L1421

.L1484:
	call.64*    %r6431 <- __ctype_b_loc
	load.64*    %r6432 <- 0[%r6431]
	load.64*    %r6433 <- 0[ls]
	load.32     %r6434 <- 0[%r6433]
	scast.32    %r6435 <- (32) %r6434
	scast.64    %r6436 <- (32) %r6435
	muls.64     %r6437 <- %r6436, $2
	add.64*     %r6438 <- %r6432, %r6437
	load.16     %r6439 <- 0[%r6438]
	cast.32     %r6440 <- (16) %r6439
	and.32      %r6441 <- %r6440, $0x800
	br          %r6441, .L1490, .L1489

.L1489:
	phisrc.32   %phi271(return) <- $46
	br          .L1421

.L1490:
	load.64*    %r6442 <- 0[ls]
	load.64*    %r6443 <- 0[seminfo]
	push.64*    %r6442
	push.64*    %r6443
	call        read_numeral
	phisrc.32   %phi272(return) <- $284
	br          .L1421

.L1414:
	phisrc.32   %phi273(return) <- $287
	br          .L1421

.L1415:
	call.64*    %r6444 <- __ctype_b_loc
	load.64*    %r6445 <- 0[%r6444]
	load.64*    %r6446 <- 0[ls]
	load.32     %r6447 <- 0[%r6446]
	scast.32    %r6448 <- (32) %r6447
	scast.64    %r6449 <- (32) %r6448
	muls.64     %r6450 <- %r6449, $2
	add.64*     %r6451 <- %r6445, %r6450
	load.16     %r6452 <- 0[%r6451]
	cast.32     %r6453 <- (16) %r6452
	and.32      %r6454 <- %r6453, $0x2000
	br          %r6454, .L1492, .L1493

.L1492:
	load.64*    %r6455 <- 0[ls]
	load.64*    %r6456 <- 64[%r6455]
	load.64     %r6457 <- 0[%r6456]
	sub.64      %r6458 <- %r6457, $1
	store.64    %r6458 -> 0[%r6456]
	seta.32     %r6459 <- %r6457, $0
	br          %r6459, .L1494, .L1495

.L1494:
	load.64*    %r6460 <- 0[ls]
	load.64*    %r6461 <- 64[%r6460]
	load.64*    %r6462 <- 8[%r6461]
	add.64*     %r6463 <- %r6462, $1
	store.64*   %r6463 -> 8[%r6461]
	load.8      %r6464 <- 0[%r6462]
	scast.8     %r6465 <- (8) %r6464
	cast.32     %r6466 <- (8) %r6465
	phisrc.32   %phi274 <- %r6466
	br          .L1496

.L1495:
	load.64*    %r6467 <- 0[ls]
	load.64*    %r6468 <- 64[%r6467]
	push.64*    %r6468
	call.32     %r6469 <- luaZ_fill
	phisrc.32   %phi275 <- %r6469
	br          .L1496

.L1496:
	phi.32      %r6470 <- %phi274, %phi275
	load.64*    %r6471 <- 0[ls]
	store.32    %r6470 -> 0[%r6471]
	br          .L1399

.L1493:
	call.64*    %r6472 <- __ctype_b_loc
	load.64*    %r6473 <- 0[%r6472]
	load.64*    %r6474 <- 0[ls]
	load.32     %r6475 <- 0[%r6474]
	scast.32    %r6476 <- (32) %r6475
	scast.64    %r6477 <- (32) %r6476
	muls.64     %r6478 <- %r6477, $2
	add.64*     %r6479 <- %r6473, %r6478
	load.16     %r6480 <- 0[%r6479]
	cast.32     %r6481 <- (16) %r6480
	and.32      %r6482 <- %r6481, $0x800
	br          %r6482, .L1498, .L1499

.L1498:
	load.64*    %r6483 <- 0[ls]
	load.64*    %r6484 <- 0[seminfo]
	push.64*    %r6483
	push.64*    %r6484
	call        read_numeral
	phisrc.32   %phi276(return) <- $284
	br          .L1421

.L1499:
	call.64*    %r6485 <- __ctype_b_loc
	load.64*    %r6486 <- 0[%r6485]
	load.64*    %r6487 <- 0[ls]
	load.32     %r6488 <- 0[%r6487]
	scast.32    %r6489 <- (32) %r6488
	scast.64    %r6490 <- (32) %r6489
	muls.64     %r6491 <- %r6490, $2
	add.64*     %r6492 <- %r6486, %r6491
	load.16     %r6493 <- 0[%r6492]
	cast.32     %r6494 <- (16) %r6493
	and.32      %r6495 <- %r6494, $0x400
	br          %r6495, .L1501, .L1503

.L1503:
	load.64*    %r6496 <- 0[ls]
	load.32     %r6497 <- 0[%r6496]
	seteq.32    %r6498 <- %r6497, $95
	br          %r6498, .L1501, .L1502

.L1501:
	br          .L1504

.L1504:
	load.64*    %r6499 <- 0[ls]
	load.64*    %r6500 <- 0[ls]
	load.32     %r6501 <- 0[%r6500]
	push.64*    %r6499
	push.32     %r6501
	call        save
	load.64*    %r6502 <- 0[ls]
	load.64*    %r6503 <- 64[%r6502]
	load.64     %r6504 <- 0[%r6503]
	sub.64      %r6505 <- %r6504, $1
	store.64    %r6505 -> 0[%r6503]
	seta.32     %r6506 <- %r6504, $0
	br          %r6506, .L1507, .L1508

.L1507:
	load.64*    %r6507 <- 0[ls]
	load.64*    %r6508 <- 64[%r6507]
	load.64*    %r6509 <- 8[%r6508]
	add.64*     %r6510 <- %r6509, $1
	store.64*   %r6510 -> 8[%r6508]
	load.8      %r6511 <- 0[%r6509]
	scast.8     %r6512 <- (8) %r6511
	cast.32     %r6513 <- (8) %r6512
	phisrc.32   %phi277 <- %r6513
	br          .L1509

.L1508:
	load.64*    %r6514 <- 0[ls]
	load.64*    %r6515 <- 64[%r6514]
	push.64*    %r6515
	call.32     %r6516 <- luaZ_fill
	phisrc.32   %phi278 <- %r6516
	br          .L1509

.L1509:
	phi.32      %r6517 <- %phi277, %phi278
	load.64*    %r6518 <- 0[ls]
	store.32    %r6517 -> 0[%r6518]
	br          .L1505

.L1505:
	call.64*    %r6519 <- __ctype_b_loc
	load.64*    %r6520 <- 0[%r6519]
	load.64*    %r6521 <- 0[ls]
	load.32     %r6522 <- 0[%r6521]
	scast.32    %r6523 <- (32) %r6522
	scast.64    %r6524 <- (32) %r6523
	muls.64     %r6525 <- %r6524, $2
	add.64*     %r6526 <- %r6520, %r6525
	load.16     %r6527 <- 0[%r6526]
	cast.32     %r6528 <- (16) %r6527
	and.32      %r6529 <- %r6528, $8
	br          %r6529, .L1504, .L1510

.L1510:
	load.64*    %r6530 <- 0[ls]
	load.32     %r6531 <- 0[%r6530]
	seteq.32    %r6532 <- %r6531, $95
	br          %r6532, .L1504, .L1506

.L1506:
	load.64*    %r6533 <- 0[ls]
	load.64*    %r6534 <- 0[ls]
	load.64*    %r6535 <- 72[%r6534]
	load.64*    %r6536 <- 0[%r6535]
	load.64*    %r6537 <- 0[ls]
	load.64*    %r6538 <- 72[%r6537]
	load.64     %r6539 <- 8[%r6538]
	push.64*    %r6533
	push.64*    %r6536
	push.64     %r6539
	call.64*    %r6540 <- luaX_newstring
	store.64*   %r6540 -> 0[ts]
	load.64*    %r6541 <- 0[ts]
	load.8      %r6542 <- 10[%r6541]
	cast.32     %r6543 <- (8) %r6542
	setgt.32    %r6544 <- %r6543, $0
	br          %r6544, .L1511, .L1512

.L1511:
	load.64*    %r6545 <- 0[ts]
	load.8      %r6546 <- 10[%r6545]
	cast.32     %r6547 <- (8) %r6546
	sub.32      %r6548 <- %r6547, $1
	add.32      %r6549 <- %r6548, $257
	phisrc.32   %phi279(return) <- %r6549
	br          .L1421

.L1512:
	load.64*    %r6550 <- 0[ts]
	load.64*    %r6551 <- 0[seminfo]
	store.64*   %r6550 -> 0[%r6551]
	phisrc.32   %phi280(return) <- $285
	br          .L1421

.L1502:
	load.64*    %r6552 <- 0[ls]
	load.32     %r6553 <- 0[%r6552]
	store.32    %r6553 -> 0[c]
	load.64*    %r6554 <- 0[ls]
	load.64*    %r6555 <- 64[%r6554]
	load.64     %r6556 <- 0[%r6555]
	sub.64      %r6557 <- %r6556, $1
	store.64    %r6557 -> 0[%r6555]
	seta.32     %r6558 <- %r6556, $0
	br          %r6558, .L1515, .L1516

.L1515:
	load.64*    %r6559 <- 0[ls]
	load.64*    %r6560 <- 64[%r6559]
	load.64*    %r6561 <- 8[%r6560]
	add.64*     %r6562 <- %r6561, $1
	store.64*   %r6562 -> 8[%r6560]
	load.8      %r6563 <- 0[%r6561]
	scast.8     %r6564 <- (8) %r6563
	cast.32     %r6565 <- (8) %r6564
	phisrc.32   %phi281 <- %r6565
	br          .L1517

.L1516:
	load.64*    %r6566 <- 0[ls]
	load.64*    %r6567 <- 64[%r6566]
	push.64*    %r6567
	call.32     %r6568 <- luaZ_fill
	phisrc.32   %phi282 <- %r6568
	br          .L1517

.L1517:
	phi.32      %r6569 <- %phi281, %phi282
	load.64*    %r6570 <- 0[ls]
	store.32    %r6569 -> 0[%r6570]
	load.32     %r6571 <- 0[c]
	phisrc.32   %phi283(return) <- %r6571
	br          .L1421

.L1399:
	br          .L1401

.L1421:
	phi.32      %r6185 <- %phi235(return), %phi240(return), %phi241(return), %phi244(return), %phi247(return), %phi250(return), %phi253(return), %phi256(return), %phi259(return), %phi262(return), %phi265(return), %phi266(return), %phi269(return), %phi270(return), %phi271(return), %phi272(return), %phi273(return), %phi276(return), %phi279(return), %phi280(return), %phi283(return)
	ret.32      %r6185


luaX_next:
.L1518:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r6572 <- 0[ls]
	load.32     %r6573 <- 4[%r6572]
	load.64*    %r6574 <- 0[ls]
	store.32    %r6573 -> 8[%r6574]
	load.64*    %r6575 <- 0[ls]
	load.32     %r6576 <- 32[%r6575]
	setne.32    %r6577 <- %r6576, $287
	br          %r6577, .L1519, .L1520

.L1519:
	load.64*    %r6578 <- 0[ls]
	add.64*     %r6579 <- %r6578, $16
	cast.64*    %r6580 <- (64) %r6579
	load.64*    %r6581 <- 0[ls]
	add.64*     %r6582 <- %r6581, $32
	cast.64*    %r6583 <- (64) %r6582
	push.64*    %r6580
	push.64*    %r6583
	push.64     $16
	call.64*    %r6584 <- memcpy
	load.64*    %r6585 <- 0[ls]
	store.32    $287 -> 32[%r6585]
	br          .L1521

.L1520:
	load.64*    %r6586 <- 0[ls]
	load.64*    %r6587 <- 0[ls]
	add.64*     %r6588 <- %r6587, $16
	add.64*     %r6589 <- %r6588, $8
	push.64*    %r6586
	push.64*    %r6589
	call.32     %r6590 <- llex
	load.64*    %r6591 <- 0[ls]
	store.32    %r6590 -> 16[%r6591]
	br          .L1521

.L1521:
	ret


luaX_lookahead:
.L1522:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r6592 <- 0[ls]
	load.64*    %r6593 <- 0[ls]
	add.64*     %r6594 <- %r6593, $32
	add.64*     %r6595 <- %r6594, $8
	push.64*    %r6592
	push.64*    %r6595
	call.32     %r6596 <- llex
	load.64*    %r6597 <- 0[ls]
	store.32    %r6596 -> 32[%r6597]
	br          .L1523

.L1523:
	ret


isnumeral:
.L1524:
	<entry-point>
	store.64*   %arg1 -> 0[e]
	load.64*    %r6598 <- 0[e]
	load.32     %r6599 <- 0[%r6598]
	scast.32    %r6600 <- (32) %r6599
	seteq.32    %r6601 <- %r6600, $5
	br          %r6601, .L1529, .L1527

.L1529:
	load.64*    %r6602 <- 0[e]
	load.32     %r6603 <- 16[%r6602]
	seteq.32    %r6604 <- %r6603, $0xffffffff
	br          %r6604, .L1526, .L1527

.L1526:
	load.64*    %r6605 <- 0[e]
	load.32     %r6606 <- 20[%r6605]
	seteq.32    %r6607 <- %r6606, $0xffffffff
	phisrc.32   %phi284 <- %r6607
	br          .L1528

.L1527:
	phisrc.32   %phi285 <- $0
	br          .L1528

.L1528:
	phi.32      %r6608 <- %phi284, %phi285
	phisrc.32   %phi286(return) <- %r6608
	br          .L1525

.L1525:
	phi.32      %r6609 <- %phi286(return)
	ret.32      %r6608


luaK_nil:
.L1530:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[from]
	store.32    %arg3 -> 0[n]
	load.64*    %r6610 <- 0[fs]
	load.32     %r6611 <- 48[%r6610]
	load.64*    %r6612 <- 0[fs]
	load.32     %r6613 <- 52[%r6612]
	setgt.32    %r6614 <- %r6611, %r6613
	br          %r6614, .L1531, .L1532

.L1531:
	load.64*    %r6615 <- 0[fs]
	load.32     %r6616 <- 48[%r6615]
	seteq.32    %r6617 <- %r6616, $0
	br          %r6617, .L1533, .L1534

.L1533:
	load.32     %r6618 <- 0[from]
	load.64*    %r6619 <- 0[fs]
	load.8      %r6620 <- 74[%r6619]
	cast.32     %r6621 <- (8) %r6620
	setge.32    %r6622 <- %r6618, %r6621
	br          %r6622, .L1535, .L1536

.L1535:
	br          .L1537

.L1536:
	br          .L1538

.L1534:
	load.64*    %r6623 <- 0[fs]
	load.64*    %r6624 <- 0[%r6623]
	load.64*    %r6625 <- 24[%r6624]
	load.64*    %r6626 <- 0[fs]
	load.32     %r6627 <- 48[%r6626]
	sub.32      %r6628 <- %r6627, $1
	scast.64    %r6629 <- (32) %r6628
	muls.64     %r6630 <- %r6629, $4
	add.64*     %r6631 <- %r6625, %r6630
	store.64*   %r6631 -> 0[previous]
	load.64*    %r6632 <- 0[previous]
	load.32     %r6633 <- 0[%r6632]
	lsr.32      %r6634 <- %r6633, $0
	and.32      %r6635 <- %r6634, $63
	cast.32     %r6636 <- (32) %r6635
	scast.32    %r6637 <- (32) %r6636
	seteq.32    %r6638 <- %r6637, $3
	br          %r6638, .L1539, .L1540

.L1539:
	load.64*    %r6639 <- 0[previous]
	load.32     %r6640 <- 0[%r6639]
	lsr.32      %r6641 <- %r6640, $6
	and.32      %r6642 <- %r6641, $255
	cast.32     %r6643 <- (32) %r6642
	store.32    %r6643 -> 0[pfrom]
	load.64*    %r6644 <- 0[previous]
	load.32     %r6645 <- 0[%r6644]
	lsr.32      %r6646 <- %r6645, $23
	and.32      %r6647 <- %r6646, $511
	cast.32     %r6648 <- (32) %r6647
	store.32    %r6648 -> 0[pto]
	load.32     %r6649 <- 0[pfrom]
	load.32     %r6650 <- 0[from]
	setle.32    %r6651 <- %r6649, %r6650
	load.32     %r6652 <- 0[from]
	load.32     %r6653 <- 0[pto]
	add.32      %r6654 <- %r6653, $1
	setle.32    %r6655 <- %r6652, %r6654
	and-bool.32 %r6656 <- %r6651, %r6655
	br          %r6656, .L1541, .L1542

.L1541:
	load.32     %r6657 <- 0[from]
	load.32     %r6658 <- 0[n]
	add.32      %r6659 <- %r6657, %r6658
	sub.32      %r6660 <- %r6659, $1
	load.32     %r6661 <- 0[pto]
	setgt.32    %r6662 <- %r6660, %r6661
	br          %r6662, .L1543, .L1544

.L1543:
	load.64*    %r6663 <- 0[previous]
	load.32     %r6664 <- 0[%r6663]
	and.32      %r6665 <- %r6664, $0x7fffff
	load.32     %r6666 <- 0[from]
	load.32     %r6667 <- 0[n]
	add.32      %r6668 <- %r6666, %r6667
	sub.32      %r6669 <- %r6668, $1
	scast.32    %r6670 <- (32) %r6669
	shl.32      %r6671 <- %r6670, $23
	and.32      %r6672 <- %r6671, $0xff800000
	or.32       %r6673 <- %r6665, %r6672
	load.64*    %r6674 <- 0[previous]
	store.32    %r6673 -> 0[%r6674]
	br          .L1544

.L1544:
	br          .L1537

.L1542:
	br          .L1540

.L1540:
	br          .L1538

.L1538:
	br          .L1532

.L1532:
	load.64*    %r6675 <- 0[fs]
	load.32     %r6676 <- 0[from]
	load.32     %r6677 <- 0[from]
	load.32     %r6678 <- 0[n]
	add.32      %r6679 <- %r6677, %r6678
	sub.32      %r6680 <- %r6679, $1
	push.64*    %r6675
	push.32     $3
	push.32     %r6676
	push.32     %r6680
	push.32     $0
	call.32     %r6681 <- luaK_codeABC
	br          .L1537

.L1537:
	ret


luaK_jump:
.L1545:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6682 <- 0[fs]
	load.32     %r6683 <- 56[%r6682]
	store.32    %r6683 -> 0[jpc]
	load.64*    %r6684 <- 0[fs]
	store.32    $0xffffffff -> 56[%r6684]
	load.64*    %r6685 <- 0[fs]
	push.64*    %r6685
	push.32     $22
	push.32     $0
	push.32     $0x1fffe
	call.32     %r6686 <- luaK_codeABx
	store.32    %r6686 -> 0[j]
	load.64*    %r6687 <- 0[fs]
	symaddr.64* %r6688 <- j
	load.32     %r6689 <- 0[jpc]
	push.64*    %r6687
	push.64*    %r6688
	push.32     %r6689
	call        luaK_concat
	load.32     %r6690 <- 0[j]
	phisrc.32   %phi287(return) <- %r6690
	br          .L1546

.L1546:
	phi.32      %r6691 <- %phi287(return)
	ret.32      %r6690


luaK_ret:
.L1547:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[first]
	store.32    %arg3 -> 0[nret]
	load.64*    %r6692 <- 0[fs]
	load.32     %r6693 <- 0[first]
	load.32     %r6694 <- 0[nret]
	add.32      %r6695 <- %r6694, $1
	push.64*    %r6692
	push.32     $30
	push.32     %r6693
	push.32     %r6695
	push.32     $0
	call.32     %r6696 <- luaK_codeABC
	br          .L1548

.L1548:
	ret


condjump:
.L1549:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.32    %arg3 -> 0[A]
	store.32    %arg4 -> 0[B]
	store.32    %arg5 -> 0[C]
	load.64*    %r6697 <- 0[fs]
	load.32     %r6698 <- 0[op]
	load.32     %r6699 <- 0[A]
	load.32     %r6700 <- 0[B]
	load.32     %r6701 <- 0[C]
	push.64*    %r6697
	push.32     %r6698
	push.32     %r6699
	push.32     %r6700
	push.32     %r6701
	call.32     %r6702 <- luaK_codeABC
	load.64*    %r6703 <- 0[fs]
	push.64*    %r6703
	call.32     %r6704 <- luaK_jump
	phisrc.32   %phi288(return) <- %r6704
	br          .L1550

.L1550:
	phi.32      %r6705 <- %phi288(return)
	ret.32      %r6704


fixjump:
.L1551:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	store.32    %arg3 -> 0[dest]
	load.64*    %r6706 <- 0[fs]
	load.64*    %r6707 <- 0[%r6706]
	load.64*    %r6708 <- 24[%r6707]
	load.32     %r6709 <- 0[pc]
	scast.64    %r6710 <- (32) %r6709
	muls.64     %r6711 <- %r6710, $4
	add.64*     %r6712 <- %r6708, %r6711
	store.64*   %r6712 -> 0[jmp]
	load.32     %r6713 <- 0[dest]
	load.32     %r6714 <- 0[pc]
	add.32      %r6715 <- %r6714, $1
	sub.32      %r6716 <- %r6713, %r6715
	store.32    %r6716 -> 0[offset]
	load.32     %r6717 <- 0[offset]
	push.32     %r6717
	call.32     %r6718 <- abs
	setgt.32    %r6719 <- %r6718, $0x1ffff
	br          %r6719, .L1552, .L1553

.L1552:
	load.64*    %r6720 <- 0[fs]
	load.64*    %r6721 <- 24[%r6720]
	symaddr.64* %r6722 <- <anon symbol:0x62d00133ba78>
	push.64*    %r6721
	push.64*    %r6722
	call        luaX_syntaxerror
	br          .L1553

.L1553:
	load.64*    %r6723 <- 0[jmp]
	load.32     %r6724 <- 0[%r6723]
	and.32      %r6725 <- %r6724, $0x3fff
	load.32     %r6726 <- 0[offset]
	add.32      %r6727 <- %r6726, $0x1ffff
	scast.32    %r6728 <- (32) %r6727
	cast.32     %r6729 <- (32) %r6728
	shl.32      %r6730 <- %r6729, $14
	and.32      %r6731 <- %r6730, $0xffffc000
	or.32       %r6732 <- %r6725, %r6731
	load.64*    %r6733 <- 0[jmp]
	store.32    %r6732 -> 0[%r6733]
	br          .L1554

.L1554:
	ret


luaK_getlabel:
.L1555:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6734 <- 0[fs]
	load.32     %r6735 <- 48[%r6734]
	load.64*    %r6736 <- 0[fs]
	store.32    %r6735 -> 52[%r6736]
	load.64*    %r6737 <- 0[fs]
	load.32     %r6738 <- 48[%r6737]
	phisrc.32   %phi289(return) <- %r6738
	br          .L1556

.L1556:
	phi.32      %r6739 <- %phi289(return)
	ret.32      %r6738


getjump:
.L1557:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	load.64*    %r6740 <- 0[fs]
	load.64*    %r6741 <- 0[%r6740]
	load.64*    %r6742 <- 24[%r6741]
	load.32     %r6743 <- 0[pc]
	scast.64    %r6744 <- (32) %r6743
	muls.64     %r6745 <- %r6744, $4
	add.64*     %r6746 <- %r6742, %r6745
	load.32     %r6747 <- 0[%r6746]
	lsr.32      %r6748 <- %r6747, $14
	and.32      %r6749 <- %r6748, $0x3ffff
	cast.32     %r6750 <- (32) %r6749
	sub.32      %r6751 <- %r6750, $0x1ffff
	store.32    %r6751 -> 0[offset]
	load.32     %r6752 <- 0[offset]
	seteq.32    %r6753 <- %r6752, $0xffffffff
	br          %r6753, .L1558, .L1559

.L1558:
	phisrc.32   %phi290(return) <- $0xffffffff
	br          .L1560

.L1559:
	load.32     %r6755 <- 0[pc]
	add.32      %r6756 <- %r6755, $1
	load.32     %r6757 <- 0[offset]
	add.32      %r6758 <- %r6756, %r6757
	phisrc.32   %phi291(return) <- %r6758
	br          .L1560

.L1560:
	phi.32      %r6754 <- %phi290(return), %phi291(return)
	ret.32      %r6754


getjumpcontrol:
.L1562:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	load.64*    %r6759 <- 0[fs]
	load.64*    %r6760 <- 0[%r6759]
	load.64*    %r6761 <- 24[%r6760]
	load.32     %r6762 <- 0[pc]
	scast.64    %r6763 <- (32) %r6762
	muls.64     %r6764 <- %r6763, $4
	add.64*     %r6765 <- %r6761, %r6764
	store.64*   %r6765 -> 0[pi]
	load.32     %r6766 <- 0[pc]
	setge.32    %r6767 <- %r6766, $1
	br          %r6767, .L1565, .L1564

.L1565:
	symaddr.64* %r6768 <- luaP_opmodes
	load.64*    %r6769 <- 0[pi]
	sub.64*     %r6770 <- %r6769, $4
	load.32     %r6771 <- 0[%r6770]
	lsr.32      %r6772 <- %r6771, $0
	and.32      %r6773 <- %r6772, $63
	cast.32     %r6774 <- (32) %r6773
	scast.64    %r6775 <- (32) %r6774
	add.64*     %r6776 <- %r6768, %r6775
	load.8      %r6777 <- 0[%r6776]
	cast.32     %r6778 <- (8) %r6777
	and.32      %r6779 <- %r6778, $128
	br          %r6779, .L1563, .L1564

.L1563:
	load.64*    %r6780 <- 0[pi]
	sub.64*     %r6781 <- %r6780, $4
	phisrc.64*  %phi292(return) <- %r6781
	br          .L1566

.L1564:
	load.64*    %r6783 <- 0[pi]
	phisrc.64*  %phi293(return) <- %r6783
	br          .L1566

.L1566:
	phi.64*     %r6782 <- %phi292(return), %phi293(return)
	ret.64*     %r6782


need_value:
.L1568:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	br          .L1572

.L1572:
	load.32     %r6784 <- 0[list]
	setne.32    %r6785 <- %r6784, $0xffffffff
	br          %r6785, .L1569, .L1571

.L1569:
	load.64*    %r6786 <- 0[fs]
	load.32     %r6787 <- 0[list]
	push.64*    %r6786
	push.32     %r6787
	call.64*    %r6788 <- getjumpcontrol
	load.32     %r6789 <- 0[%r6788]
	store.32    %r6789 -> 0[i]
	load.32     %r6790 <- 0[i]
	lsr.32      %r6791 <- %r6790, $0
	and.32      %r6792 <- %r6791, $63
	cast.32     %r6793 <- (32) %r6792
	scast.32    %r6794 <- (32) %r6793
	setne.32    %r6795 <- %r6794, $27
	br          %r6795, .L1573, .L1574

.L1573:
	phisrc.32   %phi294(return) <- $1
	br          .L1575

.L1574:
	br          .L1570

.L1570:
	load.64*    %r6797 <- 0[fs]
	load.32     %r6798 <- 0[list]
	push.64*    %r6797
	push.32     %r6798
	call.32     %r6799 <- getjump
	store.32    %r6799 -> 0[list]
	br          .L1572

.L1571:
	phisrc.32   %phi295(return) <- $0
	br          .L1575

.L1575:
	phi.32      %r6796 <- %phi294(return), %phi295(return)
	ret.32      %r6796


patchtestreg:
.L1576:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[node]
	store.32    %arg3 -> 0[reg]
	load.64*    %r6800 <- 0[fs]
	load.32     %r6801 <- 0[node]
	push.64*    %r6800
	push.32     %r6801
	call.64*    %r6802 <- getjumpcontrol
	store.64*   %r6802 -> 0[i]
	load.64*    %r6803 <- 0[i]
	load.32     %r6804 <- 0[%r6803]
	lsr.32      %r6805 <- %r6804, $0
	and.32      %r6806 <- %r6805, $63
	cast.32     %r6807 <- (32) %r6806
	scast.32    %r6808 <- (32) %r6807
	setne.32    %r6809 <- %r6808, $27
	br          %r6809, .L1577, .L1578

.L1577:
	phisrc.32   %phi296(return) <- $0
	br          .L1579

.L1578:
	load.32     %r6811 <- 0[reg]
	setne.32    %r6812 <- %r6811, $255
	br          %r6812, .L1582, .L1581

.L1582:
	load.32     %r6813 <- 0[reg]
	load.64*    %r6814 <- 0[i]
	load.32     %r6815 <- 0[%r6814]
	lsr.32      %r6816 <- %r6815, $23
	and.32      %r6817 <- %r6816, $511
	cast.32     %r6818 <- (32) %r6817
	setne.32    %r6819 <- %r6813, %r6818
	br          %r6819, .L1580, .L1581

.L1580:
	load.64*    %r6820 <- 0[i]
	load.32     %r6821 <- 0[%r6820]
	and.32      %r6822 <- %r6821, $0xffffc03f
	load.32     %r6823 <- 0[reg]
	scast.32    %r6824 <- (32) %r6823
	shl.32      %r6825 <- %r6824, $6
	and.32      %r6826 <- %r6825, $0x3fc0
	or.32       %r6827 <- %r6822, %r6826
	load.64*    %r6828 <- 0[i]
	store.32    %r6827 -> 0[%r6828]
	br          .L1583

.L1581:
	load.64*    %r6829 <- 0[i]
	load.32     %r6830 <- 0[%r6829]
	lsr.32      %r6831 <- %r6830, $23
	and.32      %r6832 <- %r6831, $511
	cast.32     %r6833 <- (32) %r6832
	scast.32    %r6834 <- (32) %r6833
	shl.32      %r6835 <- %r6834, $6
	or.32       %r6836 <- $26, %r6835
	or.32       %r6837 <- %r6836, $0
	load.64*    %r6838 <- 0[i]
	load.32     %r6839 <- 0[%r6838]
	lsr.32      %r6840 <- %r6839, $14
	and.32      %r6841 <- %r6840, $511
	cast.32     %r6842 <- (32) %r6841
	scast.32    %r6843 <- (32) %r6842
	shl.32      %r6844 <- %r6843, $14
	or.32       %r6845 <- %r6837, %r6844
	load.64*    %r6846 <- 0[i]
	store.32    %r6845 -> 0[%r6846]
	br          .L1583

.L1583:
	phisrc.32   %phi297(return) <- $1
	br          .L1579

.L1579:
	phi.32      %r6810 <- %phi296(return), %phi297(return)
	ret.32      %r6810


removevalues:
.L1584:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	br          .L1588

.L1588:
	load.32     %r6847 <- 0[list]
	setne.32    %r6848 <- %r6847, $0xffffffff
	br          %r6848, .L1585, .L1587

.L1585:
	load.64*    %r6849 <- 0[fs]
	load.32     %r6850 <- 0[list]
	push.64*    %r6849
	push.32     %r6850
	push.32     $255
	call.32     %r6851 <- patchtestreg
	br          .L1586

.L1586:
	load.64*    %r6852 <- 0[fs]
	load.32     %r6853 <- 0[list]
	push.64*    %r6852
	push.32     %r6853
	call.32     %r6854 <- getjump
	store.32    %r6854 -> 0[list]
	br          .L1588

.L1587:
	ret


patchlistaux:
.L1589:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	store.32    %arg3 -> 0[vtarget]
	store.32    %arg4 -> 0[reg]
	store.32    %arg5 -> 0[dtarget]
	br          .L1593

.L1593:
	load.32     %r6855 <- 0[list]
	setne.32    %r6856 <- %r6855, $0xffffffff
	br          %r6856, .L1590, .L1592

.L1590:
	load.64*    %r6857 <- 0[fs]
	load.32     %r6858 <- 0[list]
	push.64*    %r6857
	push.32     %r6858
	call.32     %r6859 <- getjump
	store.32    %r6859 -> 0[next]
	load.64*    %r6860 <- 0[fs]
	load.32     %r6861 <- 0[list]
	load.32     %r6862 <- 0[reg]
	push.64*    %r6860
	push.32     %r6861
	push.32     %r6862
	call.32     %r6863 <- patchtestreg
	br          %r6863, .L1594, .L1595

.L1594:
	load.64*    %r6864 <- 0[fs]
	load.32     %r6865 <- 0[list]
	load.32     %r6866 <- 0[vtarget]
	push.64*    %r6864
	push.32     %r6865
	push.32     %r6866
	call        fixjump
	br          .L1596

.L1595:
	load.64*    %r6867 <- 0[fs]
	load.32     %r6868 <- 0[list]
	load.32     %r6869 <- 0[dtarget]
	push.64*    %r6867
	push.32     %r6868
	push.32     %r6869
	call        fixjump
	br          .L1596

.L1596:
	load.32     %r6870 <- 0[next]
	store.32    %r6870 -> 0[list]
	br          .L1591

.L1591:
	br          .L1593

.L1592:
	ret


dischargejpc:
.L1597:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6871 <- 0[fs]
	load.64*    %r6872 <- 0[fs]
	load.32     %r6873 <- 56[%r6872]
	load.64*    %r6874 <- 0[fs]
	load.32     %r6875 <- 48[%r6874]
	load.64*    %r6876 <- 0[fs]
	load.32     %r6877 <- 48[%r6876]
	push.64*    %r6871
	push.32     %r6873
	push.32     %r6875
	push.32     $255
	push.32     %r6877
	call        patchlistaux
	load.64*    %r6878 <- 0[fs]
	store.32    $0xffffffff -> 56[%r6878]
	br          .L1598

.L1598:
	ret


luaK_patchlist:
.L1599:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	store.32    %arg3 -> 0[target]
	load.32     %r6879 <- 0[target]
	load.64*    %r6880 <- 0[fs]
	load.32     %r6881 <- 48[%r6880]
	seteq.32    %r6882 <- %r6879, %r6881
	br          %r6882, .L1600, .L1601

.L1600:
	load.64*    %r6883 <- 0[fs]
	load.32     %r6884 <- 0[list]
	push.64*    %r6883
	push.32     %r6884
	call        luaK_patchtohere
	br          .L1602

.L1601:
	load.64*    %r6885 <- 0[fs]
	load.32     %r6886 <- 0[list]
	load.32     %r6887 <- 0[target]
	load.32     %r6888 <- 0[target]
	push.64*    %r6885
	push.32     %r6886
	push.32     %r6887
	push.32     $255
	push.32     %r6888
	call        patchlistaux
	br          .L1602

.L1602:
	ret


luaK_patchtohere:
.L1603:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	load.64*    %r6889 <- 0[fs]
	push.64*    %r6889
	call.32     %r6890 <- luaK_getlabel
	load.64*    %r6891 <- 0[fs]
	load.64*    %r6892 <- 0[fs]
	add.64*     %r6893 <- %r6892, $56
	load.32     %r6894 <- 0[list]
	push.64*    %r6891
	push.64*    %r6893
	push.32     %r6894
	call        luaK_concat
	br          .L1604

.L1604:
	ret


luaK_concat:
.L1605:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[l1]
	store.32    %arg3 -> 0[l2]
	load.32     %r6895 <- 0[l2]
	seteq.32    %r6896 <- %r6895, $0xffffffff
	br          %r6896, .L1606, .L1607

.L1606:
	br          .L1608

.L1607:
	load.64*    %r6897 <- 0[l1]
	load.32     %r6898 <- 0[%r6897]
	seteq.32    %r6899 <- %r6898, $0xffffffff
	br          %r6899, .L1610, .L1611

.L1610:
	load.32     %r6900 <- 0[l2]
	load.64*    %r6901 <- 0[l1]
	store.32    %r6900 -> 0[%r6901]
	br          .L1612

.L1611:
	load.64*    %r6902 <- 0[l1]
	load.32     %r6903 <- 0[%r6902]
	store.32    %r6903 -> 0[list]
	br          .L1616

.L1616:
	load.64*    %r6904 <- 0[fs]
	load.32     %r6905 <- 0[list]
	push.64*    %r6904
	push.32     %r6905
	call.32     %r6906 <- getjump
	store.32    %r6906 -> 0[next]
	setne.32    %r6907 <- %r6906, $0xffffffff
	br          %r6907, .L1613, .L1615

.L1613:
	load.32     %r6908 <- 0[next]
	store.32    %r6908 -> 0[list]
	br          .L1614

.L1614:
	br          .L1616

.L1615:
	load.64*    %r6909 <- 0[fs]
	load.32     %r6910 <- 0[list]
	load.32     %r6911 <- 0[l2]
	push.64*    %r6909
	push.32     %r6910
	push.32     %r6911
	call        fixjump
	br          .L1612

.L1612:
	br          .L1609

.L1609:
	br          .L1608

.L1608:
	ret


luaK_checkstack:
.L1617:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[n]
	load.64*    %r6912 <- 0[fs]
	load.32     %r6913 <- 60[%r6912]
	load.32     %r6914 <- 0[n]
	add.32      %r6915 <- %r6913, %r6914
	store.32    %r6915 -> 0[newstack]
	load.32     %r6916 <- 0[newstack]
	load.64*    %r6917 <- 0[fs]
	load.64*    %r6918 <- 0[%r6917]
	load.8      %r6919 <- 115[%r6918]
	cast.32     %r6920 <- (8) %r6919
	setgt.32    %r6921 <- %r6916, %r6920
	br          %r6921, .L1618, .L1619

.L1618:
	load.32     %r6922 <- 0[newstack]
	setge.32    %r6923 <- %r6922, $250
	br          %r6923, .L1620, .L1621

.L1620:
	load.64*    %r6924 <- 0[fs]
	load.64*    %r6925 <- 24[%r6924]
	symaddr.64* %r6926 <- <anon symbol:0x62d00133e8b0>
	push.64*    %r6925
	push.64*    %r6926
	call        luaX_syntaxerror
	br          .L1621

.L1621:
	load.32     %r6927 <- 0[newstack]
	scast.8     %r6928 <- (32) %r6927
	load.64*    %r6929 <- 0[fs]
	load.64*    %r6930 <- 0[%r6929]
	store.8     %r6928 -> 115[%r6930]
	br          .L1619

.L1619:
	ret


luaK_reserveregs:
.L1622:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[n]
	load.64*    %r6931 <- 0[fs]
	load.32     %r6932 <- 0[n]
	push.64*    %r6931
	push.32     %r6932
	call        luaK_checkstack
	load.32     %r6933 <- 0[n]
	load.64*    %r6934 <- 0[fs]
	load.32     %r6935 <- 60[%r6934]
	scast.32    %r6936 <- (32) %r6935
	add.32      %r6937 <- %r6936, %r6933
	scast.32    %r6938 <- (32) %r6937
	store.32    %r6938 -> 60[%r6934]
	br          .L1623

.L1623:
	ret


freereg:
.L1624:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[reg]
	load.32     %r6939 <- 0[reg]
	and.32      %r6940 <- %r6939, $256
	br          %r6940, .L1626, .L1627

.L1627:
	load.32     %r6941 <- 0[reg]
	load.64*    %r6942 <- 0[fs]
	load.8      %r6943 <- 74[%r6942]
	cast.32     %r6944 <- (8) %r6943
	setge.32    %r6945 <- %r6941, %r6944
	br          %r6945, .L1625, .L1626

.L1625:
	load.64*    %r6946 <- 0[fs]
	load.32     %r6947 <- 60[%r6946]
	sub.32      %r6948 <- %r6947, $1
	store.32    %r6948 -> 60[%r6946]
	br          .L1626

.L1626:
	ret


freeexp:
.L1628:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r6949 <- 0[e]
	load.32     %r6950 <- 0[%r6949]
	scast.32    %r6951 <- (32) %r6950
	seteq.32    %r6952 <- %r6951, $12
	br          %r6952, .L1629, .L1630

.L1629:
	load.64*    %r6953 <- 0[fs]
	load.64*    %r6954 <- 0[e]
	load.32     %r6955 <- 8[%r6954]
	push.64*    %r6953
	push.32     %r6955
	call        freereg
	br          .L1630

.L1630:
	ret


addk:
.L1631:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[k]
	store.64*   %arg3 -> 0[v]
	load.64*    %r6956 <- 0[fs]
	load.64*    %r6957 <- 32[%r6956]
	store.64*   %r6957 -> 0[L]
	load.64*    %r6958 <- 0[L]
	load.64*    %r6959 <- 0[fs]
	load.64*    %r6960 <- 8[%r6959]
	load.64*    %r6961 <- 0[k]
	push.64*    %r6958
	push.64*    %r6960
	push.64*    %r6961
	call.64*    %r6962 <- luaH_set
	store.64*   %r6962 -> 0[idx]
	load.64*    %r6963 <- 0[fs]
	load.64*    %r6964 <- 0[%r6963]
	store.64*   %r6964 -> 0[f]
	load.64*    %r6965 <- 0[f]
	load.32     %r6966 <- 76[%r6965]
	store.32    %r6966 -> 0[oldsize]
	load.64*    %r6967 <- 0[idx]
	load.32     %r6968 <- 8[%r6967]
	seteq.32    %r6969 <- %r6968, $3
	br          %r6969, .L1632, .L1633

.L1632:
	load.64*    %r6970 <- 0[idx]
	load.f64    %r6971 <- 0[%r6970]
	cast.32     %r6972 <- (64) %r6971
	phisrc.32   %phi298(return) <- %r6972
	br          .L1634

.L1633:
	load.64*    %r6974 <- 0[idx]
	store.64*   %r6974 -> 0[i_o]
	load.64*    %r6975 <- 0[fs]
	load.32     %r6976 <- 64[%r6975]
	fpcast.f64  %r6977 <- (32) %r6976
	load.64*    %r6978 <- 0[i_o]
	store.f64   %r6977 -> 0[%r6978]
	load.64*    %r6979 <- 0[i_o]
	store.32    $3 -> 8[%r6979]
	load.64*    %r6980 <- 0[fs]
	load.32     %r6981 <- 64[%r6980]
	add.32      %r6982 <- %r6981, $1
	load.64*    %r6983 <- 0[f]
	load.32     %r6984 <- 76[%r6983]
	setgt.32    %r6985 <- %r6982, %r6984
	br          %r6985, .L1636, .L1637

.L1636:
	load.64*    %r6986 <- 0[L]
	load.64*    %r6987 <- 0[f]
	load.64*    %r6988 <- 16[%r6987]
	cast.64*    %r6989 <- (64) %r6988
	load.64*    %r6990 <- 0[f]
	add.64*     %r6991 <- %r6990, $76
	symaddr.64* %r6992 <- <anon symbol:0x62d00134d1b0>
	push.64*    %r6986
	push.64*    %r6989
	push.64*    %r6991
	push.64     $16
	push.32     $0x3ffff
	push.64*    %r6992
	call.64*    %r6993 <- luaM_growaux_
	ptrcast.64* %r6994 <- (64) %r6993
	load.64*    %r6995 <- 0[f]
	store.64*   %r6994 -> 16[%r6995]
	br          .L1637

.L1637:
	br          .L1641

.L1641:
	load.32     %r6996 <- 0[oldsize]
	load.64*    %r6997 <- 0[f]
	load.32     %r6998 <- 76[%r6997]
	setlt.32    %r6999 <- %r6996, %r6998
	br          %r6999, .L1638, .L1640

.L1638:
	load.64*    %r7000 <- 0[f]
	load.64*    %r7001 <- 16[%r7000]
	load.32     %r7002 <- 0[oldsize]
	add.32      %r7003 <- %r7002, $1
	store.32    %r7003 -> 0[oldsize]
	scast.64    %r7004 <- (32) %r7002
	muls.64     %r7005 <- %r7004, $16
	add.64*     %r7006 <- %r7001, %r7005
	store.32    $0 -> 8[%r7006]
	br          .L1639

.L1639:
	br          .L1641

.L1640:
	load.64*    %r7007 <- 0[v]
	store.64*   %r7007 -> 0[o2]
	load.64*    %r7008 <- 0[f]
	load.64*    %r7009 <- 16[%r7008]
	load.64*    %r7010 <- 0[fs]
	load.32     %r7011 <- 64[%r7010]
	scast.64    %r7012 <- (32) %r7011
	muls.64     %r7013 <- %r7012, $16
	add.64*     %r7014 <- %r7009, %r7013
	store.64*   %r7014 -> 0[o1]
	load.64*    %r7015 <- 0[o2]
	load.f64    %r7016 <- 0[%r7015]
	fpcast.f64  %r7017 <- (64) %r7016
	load.64*    %r7018 <- 0[o1]
	store.f64   %r7017 -> 0[%r7018]
	load.64*    %r7019 <- 0[o2]
	load.32     %r7020 <- 8[%r7019]
	scast.32    %r7021 <- (32) %r7020
	load.64*    %r7022 <- 0[o1]
	store.32    %r7021 -> 8[%r7022]
	load.64*    %r7023 <- 0[v]
	load.32     %r7024 <- 8[%r7023]
	setge.32    %r7025 <- %r7024, $4
	br          %r7025, .L1645, .L1643

.L1645:
	load.64*    %r7026 <- 0[v]
	load.64*    %r7027 <- 0[%r7026]
	load.8      %r7028 <- 9[%r7027]
	cast.32     %r7029 <- (8) %r7028
	and.32      %r7030 <- %r7029, $3
	br          %r7030, .L1644, .L1643

.L1644:
	load.64*    %r7031 <- 0[f]
	ptrcast.64* %r7032 <- (64) %r7031
	load.8      %r7033 <- 9[%r7032]
	cast.32     %r7034 <- (8) %r7033
	and.32      %r7035 <- %r7034, $4
	br          %r7035, .L1642, .L1643

.L1642:
	load.64*    %r7036 <- 0[L]
	load.64*    %r7037 <- 0[f]
	ptrcast.64* %r7038 <- (64) %r7037
	load.64*    %r7039 <- 0[v]
	load.64*    %r7040 <- 0[%r7039]
	push.64*    %r7036
	push.64*    %r7038
	push.64*    %r7040
	call        luaC_barrierf
	br          .L1643

.L1643:
	load.64*    %r7041 <- 0[fs]
	load.32     %r7042 <- 64[%r7041]
	add.32      %r7043 <- %r7042, $1
	store.32    %r7043 -> 64[%r7041]
	phisrc.32   %phi299(return) <- %r7042
	br          .L1634

.L1634:
	phi.32      %r6973 <- %phi298(return), %phi299(return)
	ret.32      %r6973


luaK_stringK:
.L1646:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[s]
	symaddr.64* %r7044 <- o
	store.64*   %r7044 -> 0[i_o]
	load.64*    %r7045 <- 0[s]
	ptrcast.64* %r7046 <- (64) %r7045
	load.64*    %r7047 <- 0[i_o]
	store.64*   %r7046 -> 0[%r7047]
	load.64*    %r7048 <- 0[i_o]
	store.32    $4 -> 8[%r7048]
	load.64*    %r7049 <- 0[fs]
	symaddr.64* %r7050 <- o
	symaddr.64* %r7051 <- o
	push.64*    %r7049
	push.64*    %r7050
	push.64*    %r7051
	call.32     %r7052 <- addk
	phisrc.32   %phi300(return) <- %r7052
	br          .L1647

.L1647:
	phi.32      %r7053 <- %phi300(return)
	ret.32      %r7052


luaK_numberK:
.L1648:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.f64   %arg2 -> 0[r]
	symaddr.64* %r7054 <- o
	store.64*   %r7054 -> 0[i_o]
	load.f64    %r7055 <- 0[r]
	load.64*    %r7056 <- 0[i_o]
	store.f64   %r7055 -> 0[%r7056]
	load.64*    %r7057 <- 0[i_o]
	store.32    $3 -> 8[%r7057]
	load.64*    %r7058 <- 0[fs]
	symaddr.64* %r7059 <- o
	symaddr.64* %r7060 <- o
	push.64*    %r7058
	push.64*    %r7059
	push.64*    %r7060
	call.32     %r7061 <- addk
	phisrc.32   %phi301(return) <- %r7061
	br          .L1649

.L1649:
	phi.32      %r7062 <- %phi301(return)
	ret.32      %r7061


boolK:
.L1650:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[b]
	symaddr.64* %r7063 <- o
	store.64*   %r7063 -> 0[i_o]
	load.32     %r7064 <- 0[b]
	load.64*    %r7065 <- 0[i_o]
	store.32    %r7064 -> 0[%r7065]
	load.64*    %r7066 <- 0[i_o]
	store.32    $1 -> 8[%r7066]
	load.64*    %r7067 <- 0[fs]
	symaddr.64* %r7068 <- o
	symaddr.64* %r7069 <- o
	push.64*    %r7067
	push.64*    %r7068
	push.64*    %r7069
	call.32     %r7070 <- addk
	phisrc.32   %phi302(return) <- %r7070
	br          .L1651

.L1651:
	phi.32      %r7071 <- %phi302(return)
	ret.32      %r7070


nilK:
.L1652:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    $0 -> 8[v]
	symaddr.64* %r7072 <- k
	store.64*   %r7072 -> 0[i_o]
	load.64*    %r7073 <- 0[fs]
	load.64*    %r7074 <- 8[%r7073]
	ptrcast.64* %r7075 <- (64) %r7074
	load.64*    %r7076 <- 0[i_o]
	store.64*   %r7075 -> 0[%r7076]
	load.64*    %r7077 <- 0[i_o]
	store.32    $5 -> 8[%r7077]
	load.64*    %r7078 <- 0[fs]
	symaddr.64* %r7079 <- k
	symaddr.64* %r7080 <- v
	push.64*    %r7078
	push.64*    %r7079
	push.64*    %r7080
	call.32     %r7081 <- addk
	phisrc.32   %phi303(return) <- %r7081
	br          .L1653

.L1653:
	phi.32      %r7082 <- %phi303(return)
	ret.32      %r7081


luaK_setreturns:
.L1654:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r7083 <- 0[e]
	load.32     %r7084 <- 0[%r7083]
	scast.32    %r7085 <- (32) %r7084
	seteq.32    %r7086 <- %r7085, $13
	br          %r7086, .L1655, .L1656

.L1655:
	load.64*    %r7087 <- 0[fs]
	load.64*    %r7088 <- 0[%r7087]
	load.64*    %r7089 <- 24[%r7088]
	load.64*    %r7090 <- 0[e]
	load.32     %r7091 <- 8[%r7090]
	scast.64    %r7092 <- (32) %r7091
	muls.64     %r7093 <- %r7092, $4
	add.64*     %r7094 <- %r7089, %r7093
	load.32     %r7095 <- 0[%r7094]
	and.32      %r7096 <- %r7095, $0xff803fff
	load.32     %r7097 <- 0[nresults]
	add.32      %r7098 <- %r7097, $1
	scast.32    %r7099 <- (32) %r7098
	shl.32      %r7100 <- %r7099, $14
	and.32      %r7101 <- %r7100, $0x7fc000
	or.32       %r7102 <- %r7096, %r7101
	load.64*    %r7103 <- 0[fs]
	load.64*    %r7104 <- 0[%r7103]
	load.64*    %r7105 <- 24[%r7104]
	load.64*    %r7106 <- 0[e]
	load.32     %r7107 <- 8[%r7106]
	scast.64    %r7108 <- (32) %r7107
	muls.64     %r7109 <- %r7108, $4
	add.64*     %r7110 <- %r7105, %r7109
	store.32    %r7102 -> 0[%r7110]
	br          .L1657

.L1656:
	load.64*    %r7111 <- 0[e]
	load.32     %r7112 <- 0[%r7111]
	scast.32    %r7113 <- (32) %r7112
	seteq.32    %r7114 <- %r7113, $14
	br          %r7114, .L1658, .L1659

.L1658:
	load.64*    %r7115 <- 0[fs]
	load.64*    %r7116 <- 0[%r7115]
	load.64*    %r7117 <- 24[%r7116]
	load.64*    %r7118 <- 0[e]
	load.32     %r7119 <- 8[%r7118]
	scast.64    %r7120 <- (32) %r7119
	muls.64     %r7121 <- %r7120, $4
	add.64*     %r7122 <- %r7117, %r7121
	load.32     %r7123 <- 0[%r7122]
	and.32      %r7124 <- %r7123, $0x7fffff
	load.32     %r7125 <- 0[nresults]
	add.32      %r7126 <- %r7125, $1
	scast.32    %r7127 <- (32) %r7126
	shl.32      %r7128 <- %r7127, $23
	and.32      %r7129 <- %r7128, $0xff800000
	or.32       %r7130 <- %r7124, %r7129
	load.64*    %r7131 <- 0[fs]
	load.64*    %r7132 <- 0[%r7131]
	load.64*    %r7133 <- 24[%r7132]
	load.64*    %r7134 <- 0[e]
	load.32     %r7135 <- 8[%r7134]
	scast.64    %r7136 <- (32) %r7135
	muls.64     %r7137 <- %r7136, $4
	add.64*     %r7138 <- %r7133, %r7137
	store.32    %r7130 -> 0[%r7138]
	load.64*    %r7139 <- 0[fs]
	load.64*    %r7140 <- 0[%r7139]
	load.64*    %r7141 <- 24[%r7140]
	load.64*    %r7142 <- 0[e]
	load.32     %r7143 <- 8[%r7142]
	scast.64    %r7144 <- (32) %r7143
	muls.64     %r7145 <- %r7144, $4
	add.64*     %r7146 <- %r7141, %r7145
	load.32     %r7147 <- 0[%r7146]
	and.32      %r7148 <- %r7147, $0xffffc03f
	load.64*    %r7149 <- 0[fs]
	load.32     %r7150 <- 60[%r7149]
	scast.32    %r7151 <- (32) %r7150
	shl.32      %r7152 <- %r7151, $6
	and.32      %r7153 <- %r7152, $0x3fc0
	or.32       %r7154 <- %r7148, %r7153
	load.64*    %r7155 <- 0[fs]
	load.64*    %r7156 <- 0[%r7155]
	load.64*    %r7157 <- 24[%r7156]
	load.64*    %r7158 <- 0[e]
	load.32     %r7159 <- 8[%r7158]
	scast.64    %r7160 <- (32) %r7159
	muls.64     %r7161 <- %r7160, $4
	add.64*     %r7162 <- %r7157, %r7161
	store.32    %r7154 -> 0[%r7162]
	load.64*    %r7163 <- 0[fs]
	push.64*    %r7163
	push.32     $1
	call        luaK_reserveregs
	br          .L1659

.L1659:
	br          .L1657

.L1657:
	ret


luaK_setoneret:
.L1660:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7164 <- 0[e]
	load.32     %r7165 <- 0[%r7164]
	scast.32    %r7166 <- (32) %r7165
	seteq.32    %r7167 <- %r7166, $13
	br          %r7167, .L1661, .L1662

.L1661:
	load.64*    %r7168 <- 0[e]
	store.32    $12 -> 0[%r7168]
	load.64*    %r7169 <- 0[fs]
	load.64*    %r7170 <- 0[%r7169]
	load.64*    %r7171 <- 24[%r7170]
	load.64*    %r7172 <- 0[e]
	load.32     %r7173 <- 8[%r7172]
	scast.64    %r7174 <- (32) %r7173
	muls.64     %r7175 <- %r7174, $4
	add.64*     %r7176 <- %r7171, %r7175
	load.32     %r7177 <- 0[%r7176]
	lsr.32      %r7178 <- %r7177, $6
	and.32      %r7179 <- %r7178, $255
	cast.32     %r7180 <- (32) %r7179
	load.64*    %r7181 <- 0[e]
	store.32    %r7180 -> 8[%r7181]
	br          .L1663

.L1662:
	load.64*    %r7182 <- 0[e]
	load.32     %r7183 <- 0[%r7182]
	scast.32    %r7184 <- (32) %r7183
	seteq.32    %r7185 <- %r7184, $14
	br          %r7185, .L1664, .L1665

.L1664:
	load.64*    %r7186 <- 0[fs]
	load.64*    %r7187 <- 0[%r7186]
	load.64*    %r7188 <- 24[%r7187]
	load.64*    %r7189 <- 0[e]
	load.32     %r7190 <- 8[%r7189]
	scast.64    %r7191 <- (32) %r7190
	muls.64     %r7192 <- %r7191, $4
	add.64*     %r7193 <- %r7188, %r7192
	load.32     %r7194 <- 0[%r7193]
	and.32      %r7195 <- %r7194, $0x7fffff
	or.32       %r7196 <- %r7195, $0x1000000
	load.64*    %r7197 <- 0[fs]
	load.64*    %r7198 <- 0[%r7197]
	load.64*    %r7199 <- 24[%r7198]
	load.64*    %r7200 <- 0[e]
	load.32     %r7201 <- 8[%r7200]
	scast.64    %r7202 <- (32) %r7201
	muls.64     %r7203 <- %r7202, $4
	add.64*     %r7204 <- %r7199, %r7203
	store.32    %r7196 -> 0[%r7204]
	load.64*    %r7205 <- 0[e]
	store.32    $11 -> 0[%r7205]
	br          .L1665

.L1665:
	br          .L1663

.L1663:
	ret


luaK_dischargevars:
.L1666:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7206 <- 0[e]
	load.32     %r7207 <- 0[%r7206]
	switch.32   %r7207, 6 -> .L1668, 7 -> .L1669, 8 -> .L1670, 9 -> .L1671, 13 -> .L1673, 14 -> .L1672, default -> .L1674

.L1668:
	load.64*    %r7208 <- 0[e]
	store.32    $12 -> 0[%r7208]
	br          .L1667

.L1669:
	load.64*    %r7209 <- 0[fs]
	load.64*    %r7210 <- 0[e]
	load.32     %r7211 <- 8[%r7210]
	push.64*    %r7209
	push.32     $4
	push.32     $0
	push.32     %r7211
	push.32     $0
	call.32     %r7212 <- luaK_codeABC
	load.64*    %r7213 <- 0[e]
	store.32    %r7212 -> 8[%r7213]
	load.64*    %r7214 <- 0[e]
	store.32    $11 -> 0[%r7214]
	br          .L1667

.L1670:
	load.64*    %r7215 <- 0[fs]
	load.64*    %r7216 <- 0[e]
	load.32     %r7217 <- 8[%r7216]
	scast.32    %r7218 <- (32) %r7217
	push.64*    %r7215
	push.32     $5
	push.32     $0
	push.32     %r7218
	call.32     %r7219 <- luaK_codeABx
	load.64*    %r7220 <- 0[e]
	store.32    %r7219 -> 8[%r7220]
	load.64*    %r7221 <- 0[e]
	store.32    $11 -> 0[%r7221]
	br          .L1667

.L1671:
	load.64*    %r7222 <- 0[fs]
	load.64*    %r7223 <- 0[e]
	load.32     %r7224 <- 12[%r7223]
	push.64*    %r7222
	push.32     %r7224
	call        freereg
	load.64*    %r7225 <- 0[fs]
	load.64*    %r7226 <- 0[e]
	load.32     %r7227 <- 8[%r7226]
	push.64*    %r7225
	push.32     %r7227
	call        freereg
	load.64*    %r7228 <- 0[fs]
	load.64*    %r7229 <- 0[e]
	load.32     %r7230 <- 8[%r7229]
	load.64*    %r7231 <- 0[e]
	load.32     %r7232 <- 12[%r7231]
	push.64*    %r7228
	push.32     $6
	push.32     $0
	push.32     %r7230
	push.32     %r7232
	call.32     %r7233 <- luaK_codeABC
	load.64*    %r7234 <- 0[e]
	store.32    %r7233 -> 8[%r7234]
	load.64*    %r7235 <- 0[e]
	store.32    $11 -> 0[%r7235]
	br          .L1667

.L1672:
	br          .L1673

.L1673:
	load.64*    %r7236 <- 0[fs]
	load.64*    %r7237 <- 0[e]
	push.64*    %r7236
	push.64*    %r7237
	call        luaK_setoneret
	br          .L1667

.L1674:
	br          .L1667

.L1667:
	ret


code_label:
.L1675:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[A]
	store.32    %arg3 -> 0[b]
	store.32    %arg4 -> 0[jump]
	load.64*    %r7238 <- 0[fs]
	push.64*    %r7238
	call.32     %r7239 <- luaK_getlabel
	load.64*    %r7240 <- 0[fs]
	load.32     %r7241 <- 0[A]
	load.32     %r7242 <- 0[b]
	load.32     %r7243 <- 0[jump]
	push.64*    %r7240
	push.32     $2
	push.32     %r7241
	push.32     %r7242
	push.32     %r7243
	call.32     %r7244 <- luaK_codeABC
	phisrc.32   %phi304(return) <- %r7244
	br          .L1676

.L1676:
	phi.32      %r7245 <- %phi304(return)
	ret.32      %r7244


discharge2reg:
.L1677:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[reg]
	load.64*    %r7246 <- 0[fs]
	load.64*    %r7247 <- 0[e]
	push.64*    %r7246
	push.64*    %r7247
	call        luaK_dischargevars
	load.64*    %r7248 <- 0[e]
	load.32     %r7249 <- 0[%r7248]
	switch.32   %r7249, 1 -> .L1679, 2 -> .L1681, 3 -> .L1680, 4 -> .L1682, 5 -> .L1683, 11 -> .L1684, 12 -> .L1685, default -> .L1686

.L1679:
	load.64*    %r7250 <- 0[fs]
	load.32     %r7251 <- 0[reg]
	push.64*    %r7250
	push.32     %r7251
	push.32     $1
	call        luaK_nil
	br          .L1678

.L1680:
	br          .L1681

.L1681:
	load.64*    %r7252 <- 0[fs]
	load.32     %r7253 <- 0[reg]
	load.64*    %r7254 <- 0[e]
	load.32     %r7255 <- 0[%r7254]
	scast.32    %r7256 <- (32) %r7255
	seteq.32    %r7257 <- %r7256, $2
	push.64*    %r7252
	push.32     $2
	push.32     %r7253
	push.32     %r7257
	push.32     $0
	call.32     %r7258 <- luaK_codeABC
	br          .L1678

.L1682:
	load.64*    %r7259 <- 0[fs]
	load.32     %r7260 <- 0[reg]
	load.64*    %r7261 <- 0[e]
	load.32     %r7262 <- 8[%r7261]
	scast.32    %r7263 <- (32) %r7262
	push.64*    %r7259
	push.32     $1
	push.32     %r7260
	push.32     %r7263
	call.32     %r7264 <- luaK_codeABx
	br          .L1678

.L1683:
	load.64*    %r7265 <- 0[fs]
	load.32     %r7266 <- 0[reg]
	load.64*    %r7267 <- 0[fs]
	load.64*    %r7268 <- 0[e]
	load.f64    %r7269 <- 8[%r7268]
	push.64*    %r7267
	push.f64    %r7269
	call.32     %r7270 <- luaK_numberK
	scast.32    %r7271 <- (32) %r7270
	push.64*    %r7265
	push.32     $1
	push.32     %r7266
	push.32     %r7271
	call.32     %r7272 <- luaK_codeABx
	br          .L1678

.L1684:
	load.64*    %r7273 <- 0[fs]
	load.64*    %r7274 <- 0[%r7273]
	load.64*    %r7275 <- 24[%r7274]
	load.64*    %r7276 <- 0[e]
	load.32     %r7277 <- 8[%r7276]
	scast.64    %r7278 <- (32) %r7277
	muls.64     %r7279 <- %r7278, $4
	add.64*     %r7280 <- %r7275, %r7279
	store.64*   %r7280 -> 0[pc]
	load.64*    %r7281 <- 0[pc]
	load.32     %r7282 <- 0[%r7281]
	and.32      %r7283 <- %r7282, $0xffffc03f
	load.32     %r7284 <- 0[reg]
	scast.32    %r7285 <- (32) %r7284
	shl.32      %r7286 <- %r7285, $6
	and.32      %r7287 <- %r7286, $0x3fc0
	or.32       %r7288 <- %r7283, %r7287
	load.64*    %r7289 <- 0[pc]
	store.32    %r7288 -> 0[%r7289]
	br          .L1678

.L1685:
	load.32     %r7290 <- 0[reg]
	load.64*    %r7291 <- 0[e]
	load.32     %r7292 <- 8[%r7291]
	setne.32    %r7293 <- %r7290, %r7292
	br          %r7293, .L1687, .L1688

.L1687:
	load.64*    %r7294 <- 0[fs]
	load.32     %r7295 <- 0[reg]
	load.64*    %r7296 <- 0[e]
	load.32     %r7297 <- 8[%r7296]
	push.64*    %r7294
	push.32     $0
	push.32     %r7295
	push.32     %r7297
	push.32     $0
	call.32     %r7298 <- luaK_codeABC
	br          .L1688

.L1688:
	br          .L1678

.L1686:
	br          .L1689

.L1678:
	load.32     %r7299 <- 0[reg]
	load.64*    %r7300 <- 0[e]
	store.32    %r7299 -> 8[%r7300]
	load.64*    %r7301 <- 0[e]
	store.32    $12 -> 0[%r7301]
	br          .L1689

.L1689:
	ret


discharge2anyreg:
.L1690:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7302 <- 0[e]
	load.32     %r7303 <- 0[%r7302]
	scast.32    %r7304 <- (32) %r7303
	setne.32    %r7305 <- %r7304, $12
	br          %r7305, .L1691, .L1692

.L1691:
	load.64*    %r7306 <- 0[fs]
	push.64*    %r7306
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r7307 <- 0[fs]
	load.64*    %r7308 <- 0[e]
	load.64*    %r7309 <- 0[fs]
	load.32     %r7310 <- 60[%r7309]
	sub.32      %r7311 <- %r7310, $1
	push.64*    %r7307
	push.64*    %r7308
	push.32     %r7311
	call        discharge2reg
	br          .L1692

.L1692:
	ret


exp2reg:
.L1693:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[reg]
	load.64*    %r7312 <- 0[fs]
	load.64*    %r7313 <- 0[e]
	load.32     %r7314 <- 0[reg]
	push.64*    %r7312
	push.64*    %r7313
	push.32     %r7314
	call        discharge2reg
	load.64*    %r7315 <- 0[e]
	load.32     %r7316 <- 0[%r7315]
	scast.32    %r7317 <- (32) %r7316
	seteq.32    %r7318 <- %r7317, $10
	br          %r7318, .L1694, .L1695

.L1694:
	load.64*    %r7319 <- 0[fs]
	load.64*    %r7320 <- 0[e]
	add.64*     %r7321 <- %r7320, $16
	load.64*    %r7322 <- 0[e]
	load.32     %r7323 <- 8[%r7322]
	push.64*    %r7319
	push.64*    %r7321
	push.32     %r7323
	call        luaK_concat
	br          .L1695

.L1695:
	load.64*    %r7324 <- 0[e]
	load.32     %r7325 <- 16[%r7324]
	load.64*    %r7326 <- 0[e]
	load.32     %r7327 <- 20[%r7326]
	setne.32    %r7328 <- %r7325, %r7327
	br          %r7328, .L1696, .L1697

.L1696:
	store.32    $0xffffffff -> 0[p_f]
	store.32    $0xffffffff -> 0[p_t]
	load.64*    %r7329 <- 0[fs]
	load.64*    %r7330 <- 0[e]
	load.32     %r7331 <- 16[%r7330]
	push.64*    %r7329
	push.32     %r7331
	call.32     %r7332 <- need_value
	br          %r7332, .L1698, .L1700

.L1700:
	load.64*    %r7333 <- 0[fs]
	load.64*    %r7334 <- 0[e]
	load.32     %r7335 <- 20[%r7334]
	push.64*    %r7333
	push.32     %r7335
	call.32     %r7336 <- need_value
	br          %r7336, .L1698, .L1699

.L1698:
	load.64*    %r7337 <- 0[e]
	load.32     %r7338 <- 0[%r7337]
	scast.32    %r7339 <- (32) %r7338
	seteq.32    %r7340 <- %r7339, $10
	br          %r7340, .L1701, .L1702

.L1701:
	phisrc.32   %phi305 <- $0xffffffff
	br          .L1703

.L1702:
	load.64*    %r7341 <- 0[fs]
	push.64*    %r7341
	call.32     %r7342 <- luaK_jump
	phisrc.32   %phi306 <- %r7342
	br          .L1703

.L1703:
	phi.32      %r7343 <- %phi305, %phi306
	store.32    %r7343 -> 0[fj]
	load.64*    %r7344 <- 0[fs]
	load.32     %r7345 <- 0[reg]
	push.64*    %r7344
	push.32     %r7345
	push.32     $0
	push.32     $1
	call.32     %r7346 <- code_label
	store.32    %r7346 -> 0[p_f]
	load.64*    %r7347 <- 0[fs]
	load.32     %r7348 <- 0[reg]
	push.64*    %r7347
	push.32     %r7348
	push.32     $1
	push.32     $0
	call.32     %r7349 <- code_label
	store.32    %r7349 -> 0[p_t]
	load.64*    %r7350 <- 0[fs]
	load.32     %r7351 <- 0[fj]
	push.64*    %r7350
	push.32     %r7351
	call        luaK_patchtohere
	br          .L1699

.L1699:
	load.64*    %r7352 <- 0[fs]
	push.64*    %r7352
	call.32     %r7353 <- luaK_getlabel
	store.32    %r7353 -> 0[final]
	load.64*    %r7354 <- 0[fs]
	load.64*    %r7355 <- 0[e]
	load.32     %r7356 <- 20[%r7355]
	load.32     %r7357 <- 0[final]
	load.32     %r7358 <- 0[reg]
	load.32     %r7359 <- 0[p_f]
	push.64*    %r7354
	push.32     %r7356
	push.32     %r7357
	push.32     %r7358
	push.32     %r7359
	call        patchlistaux
	load.64*    %r7360 <- 0[fs]
	load.64*    %r7361 <- 0[e]
	load.32     %r7362 <- 16[%r7361]
	load.32     %r7363 <- 0[final]
	load.32     %r7364 <- 0[reg]
	load.32     %r7365 <- 0[p_t]
	push.64*    %r7360
	push.32     %r7362
	push.32     %r7363
	push.32     %r7364
	push.32     %r7365
	call        patchlistaux
	br          .L1697

.L1697:
	load.64*    %r7366 <- 0[e]
	store.32    $0xffffffff -> 16[%r7366]
	load.64*    %r7367 <- 0[e]
	store.32    $0xffffffff -> 20[%r7367]
	load.32     %r7368 <- 0[reg]
	load.64*    %r7369 <- 0[e]
	store.32    %r7368 -> 8[%r7369]
	load.64*    %r7370 <- 0[e]
	store.32    $12 -> 0[%r7370]
	br          .L1704

.L1704:
	ret


luaK_exp2nextreg:
.L1705:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7371 <- 0[fs]
	load.64*    %r7372 <- 0[e]
	push.64*    %r7371
	push.64*    %r7372
	call        luaK_dischargevars
	load.64*    %r7373 <- 0[fs]
	load.64*    %r7374 <- 0[e]
	push.64*    %r7373
	push.64*    %r7374
	call        freeexp
	load.64*    %r7375 <- 0[fs]
	push.64*    %r7375
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r7376 <- 0[fs]
	load.64*    %r7377 <- 0[e]
	load.64*    %r7378 <- 0[fs]
	load.32     %r7379 <- 60[%r7378]
	sub.32      %r7380 <- %r7379, $1
	push.64*    %r7376
	push.64*    %r7377
	push.32     %r7380
	call        exp2reg
	br          .L1706

.L1706:
	ret


luaK_exp2anyreg:
.L1707:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7381 <- 0[fs]
	load.64*    %r7382 <- 0[e]
	push.64*    %r7381
	push.64*    %r7382
	call        luaK_dischargevars
	load.64*    %r7383 <- 0[e]
	load.32     %r7384 <- 0[%r7383]
	scast.32    %r7385 <- (32) %r7384
	seteq.32    %r7386 <- %r7385, $12
	br          %r7386, .L1708, .L1709

.L1708:
	load.64*    %r7387 <- 0[e]
	load.32     %r7388 <- 16[%r7387]
	load.64*    %r7389 <- 0[e]
	load.32     %r7390 <- 20[%r7389]
	setne.32    %r7391 <- %r7388, %r7390
	br          %r7391, .L1711, .L1710

.L1710:
	load.64*    %r7392 <- 0[e]
	load.32     %r7393 <- 8[%r7392]
	phisrc.32   %phi307(return) <- %r7393
	br          .L1712

.L1711:
	load.64*    %r7395 <- 0[e]
	load.32     %r7396 <- 8[%r7395]
	load.64*    %r7397 <- 0[fs]
	load.8      %r7398 <- 74[%r7397]
	cast.32     %r7399 <- (8) %r7398
	setge.32    %r7400 <- %r7396, %r7399
	br          %r7400, .L1713, .L1714

.L1713:
	load.64*    %r7401 <- 0[fs]
	load.64*    %r7402 <- 0[e]
	load.64*    %r7403 <- 0[e]
	load.32     %r7404 <- 8[%r7403]
	push.64*    %r7401
	push.64*    %r7402
	push.32     %r7404
	call        exp2reg
	load.64*    %r7405 <- 0[e]
	load.32     %r7406 <- 8[%r7405]
	phisrc.32   %phi308(return) <- %r7406
	br          .L1712

.L1714:
	br          .L1709

.L1709:
	load.64*    %r7407 <- 0[fs]
	load.64*    %r7408 <- 0[e]
	push.64*    %r7407
	push.64*    %r7408
	call        luaK_exp2nextreg
	load.64*    %r7409 <- 0[e]
	load.32     %r7410 <- 8[%r7409]
	phisrc.32   %phi309(return) <- %r7410
	br          .L1712

.L1712:
	phi.32      %r7394 <- %phi307(return), %phi308(return), %phi309(return)
	ret.32      %r7394


luaK_exp2val:
.L1715:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7411 <- 0[e]
	load.32     %r7412 <- 16[%r7411]
	load.64*    %r7413 <- 0[e]
	load.32     %r7414 <- 20[%r7413]
	setne.32    %r7415 <- %r7412, %r7414
	br          %r7415, .L1716, .L1717

.L1716:
	load.64*    %r7416 <- 0[fs]
	load.64*    %r7417 <- 0[e]
	push.64*    %r7416
	push.64*    %r7417
	call.32     %r7418 <- luaK_exp2anyreg
	br          .L1718

.L1717:
	load.64*    %r7419 <- 0[fs]
	load.64*    %r7420 <- 0[e]
	push.64*    %r7419
	push.64*    %r7420
	call        luaK_dischargevars
	br          .L1718

.L1718:
	ret


luaK_exp2RK:
.L1719:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7421 <- 0[fs]
	load.64*    %r7422 <- 0[e]
	push.64*    %r7421
	push.64*    %r7422
	call        luaK_exp2val
	load.64*    %r7423 <- 0[e]
	load.32     %r7424 <- 0[%r7423]
	switch.32   %r7424, 1 -> .L1724, 2 -> .L1722, 3 -> .L1723, 4 -> .L1725, 5 -> .L1721, default -> .L1726

.L1721:
	br          .L1722

.L1722:
	br          .L1723

.L1723:
	br          .L1724

.L1724:
	load.64*    %r7425 <- 0[fs]
	load.32     %r7426 <- 64[%r7425]
	setle.32    %r7427 <- %r7426, $255
	br          %r7427, .L1727, .L1728

.L1727:
	load.64*    %r7428 <- 0[e]
	load.32     %r7429 <- 0[%r7428]
	scast.32    %r7430 <- (32) %r7429
	seteq.32    %r7431 <- %r7430, $1
	br          %r7431, .L1729, .L1730

.L1729:
	load.64*    %r7432 <- 0[fs]
	push.64*    %r7432
	call.32     %r7433 <- nilK
	phisrc.32   %phi310 <- %r7433
	br          .L1731

.L1730:
	load.64*    %r7434 <- 0[e]
	load.32     %r7435 <- 0[%r7434]
	scast.32    %r7436 <- (32) %r7435
	seteq.32    %r7437 <- %r7436, $5
	br          %r7437, .L1732, .L1733

.L1732:
	load.64*    %r7438 <- 0[fs]
	load.64*    %r7439 <- 0[e]
	load.f64    %r7440 <- 8[%r7439]
	push.64*    %r7438
	push.f64    %r7440
	call.32     %r7441 <- luaK_numberK
	phisrc.32   %phi311 <- %r7441
	br          .L1734

.L1733:
	load.64*    %r7442 <- 0[fs]
	load.64*    %r7443 <- 0[e]
	load.32     %r7444 <- 0[%r7443]
	scast.32    %r7445 <- (32) %r7444
	seteq.32    %r7446 <- %r7445, $2
	push.64*    %r7442
	push.32     %r7446
	call.32     %r7447 <- boolK
	phisrc.32   %phi312 <- %r7447
	br          .L1734

.L1734:
	phi.32      %r7448 <- %phi311, %phi312
	phisrc.32   %phi313 <- %r7448
	br          .L1731

.L1731:
	phi.32      %r7449 <- %phi310, %phi313
	load.64*    %r7450 <- 0[e]
	store.32    %r7449 -> 8[%r7450]
	load.64*    %r7451 <- 0[e]
	store.32    $4 -> 0[%r7451]
	load.64*    %r7452 <- 0[e]
	load.32     %r7453 <- 8[%r7452]
	or.32       %r7454 <- %r7453, $256
	phisrc.32   %phi314(return) <- %r7454
	br          .L1735

.L1728:
	br          .L1720

.L1725:
	load.64*    %r7456 <- 0[e]
	load.32     %r7457 <- 8[%r7456]
	setle.32    %r7458 <- %r7457, $255
	br          %r7458, .L1737, .L1738

.L1737:
	load.64*    %r7459 <- 0[e]
	load.32     %r7460 <- 8[%r7459]
	or.32       %r7461 <- %r7460, $256
	phisrc.32   %phi315(return) <- %r7461
	br          .L1735

.L1738:
	br          .L1720

.L1726:
	br          .L1720

.L1720:
	load.64*    %r7462 <- 0[fs]
	load.64*    %r7463 <- 0[e]
	push.64*    %r7462
	push.64*    %r7463
	call.32     %r7464 <- luaK_exp2anyreg
	phisrc.32   %phi316(return) <- %r7464
	br          .L1735

.L1735:
	phi.32      %r7455 <- %phi314(return), %phi315(return), %phi316(return)
	ret.32      %r7455


luaK_storevar:
.L1740:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[var]
	store.64*   %arg3 -> 0[ex]
	load.64*    %r7465 <- 0[var]
	load.32     %r7466 <- 0[%r7465]
	switch.32   %r7466, 6 -> .L1742, 7 -> .L1743, 8 -> .L1744, 9 -> .L1745, default -> .L1746

.L1742:
	load.64*    %r7467 <- 0[fs]
	load.64*    %r7468 <- 0[ex]
	push.64*    %r7467
	push.64*    %r7468
	call        freeexp
	load.64*    %r7469 <- 0[fs]
	load.64*    %r7470 <- 0[ex]
	load.64*    %r7471 <- 0[var]
	load.32     %r7472 <- 8[%r7471]
	push.64*    %r7469
	push.64*    %r7470
	push.32     %r7472
	call        exp2reg
	br          .L1747

.L1743:
	load.64*    %r7473 <- 0[fs]
	load.64*    %r7474 <- 0[ex]
	push.64*    %r7473
	push.64*    %r7474
	call.32     %r7475 <- luaK_exp2anyreg
	store.32    %r7475 -> 0[e]
	load.64*    %r7476 <- 0[fs]
	load.32     %r7477 <- 0[e]
	load.64*    %r7478 <- 0[var]
	load.32     %r7479 <- 8[%r7478]
	push.64*    %r7476
	push.32     $8
	push.32     %r7477
	push.32     %r7479
	push.32     $0
	call.32     %r7480 <- luaK_codeABC
	br          .L1741

.L1744:
	load.64*    %r7481 <- 0[fs]
	load.64*    %r7482 <- 0[ex]
	push.64*    %r7481
	push.64*    %r7482
	call.32     %r7483 <- luaK_exp2anyreg
	store.32    %r7483 -> 0[e]
	load.64*    %r7484 <- 0[fs]
	load.32     %r7485 <- 0[e]
	load.64*    %r7486 <- 0[var]
	load.32     %r7487 <- 8[%r7486]
	scast.32    %r7488 <- (32) %r7487
	push.64*    %r7484
	push.32     $7
	push.32     %r7485
	push.32     %r7488
	call.32     %r7489 <- luaK_codeABx
	br          .L1741

.L1745:
	load.64*    %r7490 <- 0[fs]
	load.64*    %r7491 <- 0[ex]
	push.64*    %r7490
	push.64*    %r7491
	call.32     %r7492 <- luaK_exp2RK
	store.32    %r7492 -> 0[e]
	load.64*    %r7493 <- 0[fs]
	load.64*    %r7494 <- 0[var]
	load.32     %r7495 <- 8[%r7494]
	load.64*    %r7496 <- 0[var]
	load.32     %r7497 <- 12[%r7496]
	load.32     %r7498 <- 0[e]
	push.64*    %r7493
	push.32     $9
	push.32     %r7495
	push.32     %r7497
	push.32     %r7498
	call.32     %r7499 <- luaK_codeABC
	br          .L1741

.L1746:
	br          .L1741

.L1741:
	load.64*    %r7500 <- 0[fs]
	load.64*    %r7501 <- 0[ex]
	push.64*    %r7500
	push.64*    %r7501
	call        freeexp
	br          .L1747

.L1747:
	ret


luaK_self:
.L1748:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.64*   %arg3 -> 0[key]
	load.64*    %r7502 <- 0[fs]
	load.64*    %r7503 <- 0[e]
	push.64*    %r7502
	push.64*    %r7503
	call.32     %r7504 <- luaK_exp2anyreg
	load.64*    %r7505 <- 0[fs]
	load.64*    %r7506 <- 0[e]
	push.64*    %r7505
	push.64*    %r7506
	call        freeexp
	load.64*    %r7507 <- 0[fs]
	load.32     %r7508 <- 60[%r7507]
	store.32    %r7508 -> 0[func]
	load.64*    %r7509 <- 0[fs]
	push.64*    %r7509
	push.32     $2
	call        luaK_reserveregs
	load.64*    %r7510 <- 0[fs]
	load.32     %r7511 <- 0[func]
	load.64*    %r7512 <- 0[e]
	load.32     %r7513 <- 8[%r7512]
	load.64*    %r7514 <- 0[fs]
	load.64*    %r7515 <- 0[key]
	push.64*    %r7514
	push.64*    %r7515
	call.32     %r7516 <- luaK_exp2RK
	push.64*    %r7510
	push.32     $11
	push.32     %r7511
	push.32     %r7513
	push.32     %r7516
	call.32     %r7517 <- luaK_codeABC
	load.64*    %r7518 <- 0[fs]
	load.64*    %r7519 <- 0[key]
	push.64*    %r7518
	push.64*    %r7519
	call        freeexp
	load.32     %r7520 <- 0[func]
	load.64*    %r7521 <- 0[e]
	store.32    %r7520 -> 8[%r7521]
	load.64*    %r7522 <- 0[e]
	store.32    $12 -> 0[%r7522]
	br          .L1749

.L1749:
	ret


invertjump:
.L1750:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7523 <- 0[fs]
	load.64*    %r7524 <- 0[e]
	load.32     %r7525 <- 8[%r7524]
	push.64*    %r7523
	push.32     %r7525
	call.64*    %r7526 <- getjumpcontrol
	store.64*   %r7526 -> 0[pc]
	load.64*    %r7527 <- 0[pc]
	load.32     %r7528 <- 0[%r7527]
	and.32      %r7529 <- %r7528, $0xffffc03f
	load.64*    %r7530 <- 0[pc]
	load.32     %r7531 <- 0[%r7530]
	lsr.32      %r7532 <- %r7531, $6
	and.32      %r7533 <- %r7532, $255
	cast.32     %r7534 <- (32) %r7533
	seteq.32    %r7535 <- %r7534, $0
	scast.32    %r7536 <- (32) %r7535
	shl.32      %r7537 <- %r7536, $6
	and.32      %r7538 <- %r7537, $0x3fc0
	or.32       %r7539 <- %r7529, %r7538
	load.64*    %r7540 <- 0[pc]
	store.32    %r7539 -> 0[%r7540]
	br          .L1751

.L1751:
	ret


jumponcond:
.L1752:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[cond]
	load.64*    %r7541 <- 0[e]
	load.32     %r7542 <- 0[%r7541]
	scast.32    %r7543 <- (32) %r7542
	seteq.32    %r7544 <- %r7543, $11
	br          %r7544, .L1753, .L1754

.L1753:
	load.64*    %r7545 <- 0[fs]
	load.64*    %r7546 <- 0[%r7545]
	load.64*    %r7547 <- 24[%r7546]
	load.64*    %r7548 <- 0[e]
	load.32     %r7549 <- 8[%r7548]
	scast.64    %r7550 <- (32) %r7549
	muls.64     %r7551 <- %r7550, $4
	add.64*     %r7552 <- %r7547, %r7551
	load.32     %r7553 <- 0[%r7552]
	store.32    %r7553 -> 0[ie]
	load.32     %r7554 <- 0[ie]
	lsr.32      %r7555 <- %r7554, $0
	and.32      %r7556 <- %r7555, $63
	cast.32     %r7557 <- (32) %r7556
	scast.32    %r7558 <- (32) %r7557
	seteq.32    %r7559 <- %r7558, $19
	br          %r7559, .L1755, .L1756

.L1755:
	load.64*    %r7560 <- 0[fs]
	load.32     %r7561 <- 48[%r7560]
	sub.32      %r7562 <- %r7561, $1
	store.32    %r7562 -> 48[%r7560]
	load.64*    %r7563 <- 0[fs]
	load.32     %r7564 <- 0[ie]
	lsr.32      %r7565 <- %r7564, $23
	and.32      %r7566 <- %r7565, $511
	cast.32     %r7567 <- (32) %r7566
	load.32     %r7568 <- 0[cond]
	seteq.32    %r7569 <- %r7568, $0
	push.64*    %r7563
	push.32     $26
	push.32     %r7567
	push.32     $0
	push.32     %r7569
	call.32     %r7570 <- condjump
	phisrc.32   %phi317(return) <- %r7570
	br          .L1757

.L1756:
	br          .L1754

.L1754:
	load.64*    %r7572 <- 0[fs]
	load.64*    %r7573 <- 0[e]
	push.64*    %r7572
	push.64*    %r7573
	call        discharge2anyreg
	load.64*    %r7574 <- 0[fs]
	load.64*    %r7575 <- 0[e]
	push.64*    %r7574
	push.64*    %r7575
	call        freeexp
	load.64*    %r7576 <- 0[fs]
	load.64*    %r7577 <- 0[e]
	load.32     %r7578 <- 8[%r7577]
	load.32     %r7579 <- 0[cond]
	push.64*    %r7576
	push.32     $27
	push.32     $255
	push.32     %r7578
	push.32     %r7579
	call.32     %r7580 <- condjump
	phisrc.32   %phi318(return) <- %r7580
	br          .L1757

.L1757:
	phi.32      %r7571 <- %phi317(return), %phi318(return)
	ret.32      %r7571


luaK_goiftrue:
.L1758:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7581 <- 0[fs]
	load.64*    %r7582 <- 0[e]
	push.64*    %r7581
	push.64*    %r7582
	call        luaK_dischargevars
	load.64*    %r7583 <- 0[e]
	load.32     %r7584 <- 0[%r7583]
	switch.32   %r7584, 2 -> .L1762, 4 -> .L1760, 5 -> .L1761, 10 -> .L1763, default -> .L1764

.L1760:
	br          .L1761

.L1761:
	br          .L1762

.L1762:
	store.32    $0xffffffff -> 0[pc]
	br          .L1759

.L1763:
	load.64*    %r7585 <- 0[fs]
	load.64*    %r7586 <- 0[e]
	push.64*    %r7585
	push.64*    %r7586
	call        invertjump
	load.64*    %r7587 <- 0[e]
	load.32     %r7588 <- 8[%r7587]
	store.32    %r7588 -> 0[pc]
	br          .L1759

.L1764:
	load.64*    %r7589 <- 0[fs]
	load.64*    %r7590 <- 0[e]
	push.64*    %r7589
	push.64*    %r7590
	push.32     $0
	call.32     %r7591 <- jumponcond
	store.32    %r7591 -> 0[pc]
	br          .L1759

.L1759:
	load.64*    %r7592 <- 0[fs]
	load.64*    %r7593 <- 0[e]
	add.64*     %r7594 <- %r7593, $20
	load.32     %r7595 <- 0[pc]
	push.64*    %r7592
	push.64*    %r7594
	push.32     %r7595
	call        luaK_concat
	load.64*    %r7596 <- 0[fs]
	load.64*    %r7597 <- 0[e]
	load.32     %r7598 <- 16[%r7597]
	push.64*    %r7596
	push.32     %r7598
	call        luaK_patchtohere
	load.64*    %r7599 <- 0[e]
	store.32    $0xffffffff -> 16[%r7599]
	br          .L1765

.L1765:
	ret


luaK_goiffalse:
.L1766:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7600 <- 0[fs]
	load.64*    %r7601 <- 0[e]
	push.64*    %r7600
	push.64*    %r7601
	call        luaK_dischargevars
	load.64*    %r7602 <- 0[e]
	load.32     %r7603 <- 0[%r7602]
	switch.32   %r7603, 1 -> .L1768, 3 -> .L1769, 10 -> .L1770, default -> .L1771

.L1768:
	br          .L1769

.L1769:
	store.32    $0xffffffff -> 0[pc]
	br          .L1767

.L1770:
	load.64*    %r7604 <- 0[e]
	load.32     %r7605 <- 8[%r7604]
	store.32    %r7605 -> 0[pc]
	br          .L1767

.L1771:
	load.64*    %r7606 <- 0[fs]
	load.64*    %r7607 <- 0[e]
	push.64*    %r7606
	push.64*    %r7607
	push.32     $1
	call.32     %r7608 <- jumponcond
	store.32    %r7608 -> 0[pc]
	br          .L1767

.L1767:
	load.64*    %r7609 <- 0[fs]
	load.64*    %r7610 <- 0[e]
	add.64*     %r7611 <- %r7610, $16
	load.32     %r7612 <- 0[pc]
	push.64*    %r7609
	push.64*    %r7611
	push.32     %r7612
	call        luaK_concat
	load.64*    %r7613 <- 0[fs]
	load.64*    %r7614 <- 0[e]
	load.32     %r7615 <- 20[%r7614]
	push.64*    %r7613
	push.32     %r7615
	call        luaK_patchtohere
	load.64*    %r7616 <- 0[e]
	store.32    $0xffffffff -> 20[%r7616]
	br          .L1772

.L1772:
	ret


codenot:
.L1773:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7617 <- 0[fs]
	load.64*    %r7618 <- 0[e]
	push.64*    %r7617
	push.64*    %r7618
	call        luaK_dischargevars
	load.64*    %r7619 <- 0[e]
	load.32     %r7620 <- 0[%r7619]
	switch.32   %r7620, 1 -> .L1775, 2 -> .L1779, 3 -> .L1776, 4 -> .L1777, 5 -> .L1778, 10 -> .L1780, 11 -> .L1781, 12 -> .L1782, default -> .L1783

.L1775:
	br          .L1776

.L1776:
	load.64*    %r7621 <- 0[e]
	store.32    $2 -> 0[%r7621]
	br          .L1774

.L1777:
	br          .L1778

.L1778:
	br          .L1779

.L1779:
	load.64*    %r7622 <- 0[e]
	store.32    $3 -> 0[%r7622]
	br          .L1774

.L1780:
	load.64*    %r7623 <- 0[fs]
	load.64*    %r7624 <- 0[e]
	push.64*    %r7623
	push.64*    %r7624
	call        invertjump
	br          .L1774

.L1781:
	br          .L1782

.L1782:
	load.64*    %r7625 <- 0[fs]
	load.64*    %r7626 <- 0[e]
	push.64*    %r7625
	push.64*    %r7626
	call        discharge2anyreg
	load.64*    %r7627 <- 0[fs]
	load.64*    %r7628 <- 0[e]
	push.64*    %r7627
	push.64*    %r7628
	call        freeexp
	load.64*    %r7629 <- 0[fs]
	load.64*    %r7630 <- 0[e]
	load.32     %r7631 <- 8[%r7630]
	push.64*    %r7629
	push.32     $19
	push.32     $0
	push.32     %r7631
	push.32     $0
	call.32     %r7632 <- luaK_codeABC
	load.64*    %r7633 <- 0[e]
	store.32    %r7632 -> 8[%r7633]
	load.64*    %r7634 <- 0[e]
	store.32    $11 -> 0[%r7634]
	br          .L1774

.L1783:
	br          .L1774

.L1774:
	load.64*    %r7635 <- 0[e]
	load.32     %r7636 <- 20[%r7635]
	store.32    %r7636 -> 0[temp]
	load.64*    %r7637 <- 0[e]
	load.32     %r7638 <- 16[%r7637]
	load.64*    %r7639 <- 0[e]
	store.32    %r7638 -> 20[%r7639]
	load.32     %r7640 <- 0[temp]
	load.64*    %r7641 <- 0[e]
	store.32    %r7640 -> 16[%r7641]
	load.64*    %r7642 <- 0[fs]
	load.64*    %r7643 <- 0[e]
	load.32     %r7644 <- 20[%r7643]
	push.64*    %r7642
	push.32     %r7644
	call        removevalues
	load.64*    %r7645 <- 0[fs]
	load.64*    %r7646 <- 0[e]
	load.32     %r7647 <- 16[%r7646]
	push.64*    %r7645
	push.32     %r7647
	call        removevalues
	br          .L1784

.L1784:
	ret


luaK_indexed:
.L1785:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[k]
	load.64*    %r7648 <- 0[fs]
	load.64*    %r7649 <- 0[k]
	push.64*    %r7648
	push.64*    %r7649
	call.32     %r7650 <- luaK_exp2RK
	load.64*    %r7651 <- 0[t]
	store.32    %r7650 -> 12[%r7651]
	load.64*    %r7652 <- 0[t]
	store.32    $9 -> 0[%r7652]
	br          .L1786

.L1786:
	ret


constfolding:
.L1787:
	<entry-point>
	store.32    %arg1 -> 0[op]
	store.64*   %arg2 -> 0[e1]
	store.64*   %arg3 -> 0[e2]
	load.64*    %r7653 <- 0[e1]
	push.64*    %r7653
	call.32     %r7654 <- isnumeral
	br          %r7654, .L1790, .L1788

.L1790:
	load.64*    %r7655 <- 0[e2]
	push.64*    %r7655
	call.32     %r7656 <- isnumeral
	br          %r7656, .L1789, .L1788

.L1788:
	phisrc.32   %phi319(return) <- $0
	br          .L1791

.L1789:
	load.64*    %r7658 <- 0[e1]
	load.f64    %r7659 <- 8[%r7658]
	store.f64   %r7659 -> 0[v1]
	load.64*    %r7660 <- 0[e2]
	load.f64    %r7661 <- 8[%r7660]
	store.f64   %r7661 -> 0[v2]
	load.32     %r7662 <- 0[op]
	switch.32   %r7662, 12 -> .L1793, 13 -> .L1794, 14 -> .L1795, 15 -> .L1796, 16 -> .L1797, 17 -> .L1798, 18 -> .L1799, 20 -> .L1800, default -> .L1801

.L1793:
	load.f64    %r7663 <- 0[v1]
	load.f64    %r7664 <- 0[v2]
	add.f64     %r7665 <- %r7663, %r7664
	store.f64   %r7665 -> 0[r]
	br          .L1792

.L1794:
	load.f64    %r7666 <- 0[v1]
	load.f64    %r7667 <- 0[v2]
	sub.f64     %r7668 <- %r7666, %r7667
	store.f64   %r7668 -> 0[r]
	br          .L1792

.L1795:
	load.f64    %r7669 <- 0[v1]
	load.f64    %r7670 <- 0[v2]
	mulu.f64    %r7671 <- %r7669, %r7670
	store.f64   %r7671 -> 0[r]
	br          .L1792

.L1796:
	load.f64    %r7672 <- 0[v2]
	set.f64     %r7673 <- 0.000000
	seteq.32    %r7674 <- %r7672, %r7673
	br          %r7674, .L1802, .L1803

.L1802:
	phisrc.32   %phi320(return) <- $0
	br          .L1791

.L1803:
	load.f64    %r7675 <- 0[v1]
	load.f64    %r7676 <- 0[v2]
	divu.f64    %r7677 <- %r7675, %r7676
	store.f64   %r7677 -> 0[r]
	br          .L1792

.L1797:
	load.f64    %r7678 <- 0[v2]
	set.f64     %r7679 <- 0.000000
	seteq.32    %r7680 <- %r7678, %r7679
	br          %r7680, .L1804, .L1805

.L1804:
	phisrc.32   %phi321(return) <- $0
	br          .L1791

.L1805:
	load.f64    %r7681 <- 0[v1]
	load.f64    %r7682 <- 0[v1]
	load.f64    %r7683 <- 0[v2]
	divu.f64    %r7684 <- %r7682, %r7683
	push.f64    %r7684
	call.f64    %r7685 <- floor
	load.f64    %r7686 <- 0[v2]
	mulu.f64    %r7687 <- %r7685, %r7686
	sub.f64     %r7688 <- %r7681, %r7687
	store.f64   %r7688 -> 0[r]
	br          .L1792

.L1798:
	load.f64    %r7689 <- 0[v1]
	load.f64    %r7690 <- 0[v2]
	push.f64    %r7689
	push.f64    %r7690
	call.f64    %r7691 <- pow
	store.f64   %r7691 -> 0[r]
	br          .L1792

.L1799:
	load.f64    %r7692 <- 0[v1]
	neg.f64     %r7693 <- %r7692
	store.f64   %r7693 -> 0[r]
	br          .L1792

.L1800:
	phisrc.32   %phi322(return) <- $0
	br          .L1791

.L1801:
	store.f64   $0 -> 0[r]
	br          .L1792

.L1792:
	load.f64    %r7694 <- 0[r]
	load.f64    %r7695 <- 0[r]
	seteq.32    %r7696 <- %r7694, %r7695
	br          %r7696, .L1807, .L1806

.L1806:
	phisrc.32   %phi323(return) <- $0
	br          .L1791

.L1807:
	load.f64    %r7697 <- 0[r]
	load.64*    %r7698 <- 0[e1]
	store.f64   %r7697 -> 8[%r7698]
	phisrc.32   %phi324(return) <- $1
	br          .L1791

.L1791:
	phi.32      %r7657 <- %phi319(return), %phi320(return), %phi321(return), %phi322(return), %phi323(return), %phi324(return)
	ret.32      %r7657


codearith:
.L1808:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e1]
	store.64*   %arg4 -> 0[e2]
	load.32     %r7699 <- 0[op]
	load.64*    %r7700 <- 0[e1]
	load.64*    %r7701 <- 0[e2]
	push.32     %r7699
	push.64*    %r7700
	push.64*    %r7701
	call.32     %r7702 <- constfolding
	br          %r7702, .L1809, .L1810

.L1809:
	br          .L1811

.L1810:
	load.32     %r7703 <- 0[op]
	scast.32    %r7704 <- (32) %r7703
	setne.32    %r7705 <- %r7704, $18
	load.32     %r7706 <- 0[op]
	scast.32    %r7707 <- (32) %r7706
	setne.32    %r7708 <- %r7707, $20
	and-bool.32 %r7709 <- %r7705, %r7708
	br          %r7709, .L1813, .L1814

.L1813:
	load.64*    %r7710 <- 0[fs]
	load.64*    %r7711 <- 0[e2]
	push.64*    %r7710
	push.64*    %r7711
	call.32     %r7712 <- luaK_exp2RK
	phisrc.32   %phi325 <- %r7712
	br          .L1815

.L1814:
	phisrc.32   %phi326 <- $0
	br          .L1815

.L1815:
	phi.32      %r7713 <- %phi325, %phi326
	store.32    %r7713 -> 0[o2]
	load.64*    %r7714 <- 0[fs]
	load.64*    %r7715 <- 0[e1]
	push.64*    %r7714
	push.64*    %r7715
	call.32     %r7716 <- luaK_exp2RK
	store.32    %r7716 -> 0[o1]
	load.32     %r7717 <- 0[o1]
	load.32     %r7718 <- 0[o2]
	setgt.32    %r7719 <- %r7717, %r7718
	br          %r7719, .L1816, .L1817

.L1816:
	load.64*    %r7720 <- 0[fs]
	load.64*    %r7721 <- 0[e1]
	push.64*    %r7720
	push.64*    %r7721
	call        freeexp
	load.64*    %r7722 <- 0[fs]
	load.64*    %r7723 <- 0[e2]
	push.64*    %r7722
	push.64*    %r7723
	call        freeexp
	br          .L1818

.L1817:
	load.64*    %r7724 <- 0[fs]
	load.64*    %r7725 <- 0[e2]
	push.64*    %r7724
	push.64*    %r7725
	call        freeexp
	load.64*    %r7726 <- 0[fs]
	load.64*    %r7727 <- 0[e1]
	push.64*    %r7726
	push.64*    %r7727
	call        freeexp
	br          .L1818

.L1818:
	load.64*    %r7728 <- 0[fs]
	load.32     %r7729 <- 0[op]
	load.32     %r7730 <- 0[o1]
	load.32     %r7731 <- 0[o2]
	push.64*    %r7728
	push.32     %r7729
	push.32     $0
	push.32     %r7730
	push.32     %r7731
	call.32     %r7732 <- luaK_codeABC
	load.64*    %r7733 <- 0[e1]
	store.32    %r7732 -> 8[%r7733]
	load.64*    %r7734 <- 0[e1]
	store.32    $11 -> 0[%r7734]
	br          .L1812

.L1812:
	br          .L1811

.L1811:
	ret


codecomp:
.L1819:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.32    %arg3 -> 0[cond]
	store.64*   %arg4 -> 0[e1]
	store.64*   %arg5 -> 0[e2]
	load.64*    %r7735 <- 0[fs]
	load.64*    %r7736 <- 0[e1]
	push.64*    %r7735
	push.64*    %r7736
	call.32     %r7737 <- luaK_exp2RK
	store.32    %r7737 -> 0[o1]
	load.64*    %r7738 <- 0[fs]
	load.64*    %r7739 <- 0[e2]
	push.64*    %r7738
	push.64*    %r7739
	call.32     %r7740 <- luaK_exp2RK
	store.32    %r7740 -> 0[o2]
	load.64*    %r7741 <- 0[fs]
	load.64*    %r7742 <- 0[e2]
	push.64*    %r7741
	push.64*    %r7742
	call        freeexp
	load.64*    %r7743 <- 0[fs]
	load.64*    %r7744 <- 0[e1]
	push.64*    %r7743
	push.64*    %r7744
	call        freeexp
	load.32     %r7745 <- 0[cond]
	seteq.32    %r7746 <- %r7745, $0
	load.32     %r7747 <- 0[op]
	scast.32    %r7748 <- (32) %r7747
	setne.32    %r7749 <- %r7748, $23
	and-bool.32 %r7750 <- %r7746, %r7749
	br          %r7750, .L1820, .L1821

.L1820:
	load.32     %r7751 <- 0[o1]
	store.32    %r7751 -> 0[temp]
	load.32     %r7752 <- 0[o2]
	store.32    %r7752 -> 0[o1]
	load.32     %r7753 <- 0[temp]
	store.32    %r7753 -> 0[o2]
	store.32    $1 -> 0[cond]
	br          .L1821

.L1821:
	load.64*    %r7754 <- 0[fs]
	load.32     %r7755 <- 0[op]
	load.32     %r7756 <- 0[cond]
	load.32     %r7757 <- 0[o1]
	load.32     %r7758 <- 0[o2]
	push.64*    %r7754
	push.32     %r7755
	push.32     %r7756
	push.32     %r7757
	push.32     %r7758
	call.32     %r7759 <- condjump
	load.64*    %r7760 <- 0[e1]
	store.32    %r7759 -> 8[%r7760]
	load.64*    %r7761 <- 0[e1]
	store.32    $10 -> 0[%r7761]
	br          .L1822

.L1822:
	ret


luaK_prefix:
.L1823:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e]
	store.32    $0xffffffff -> 20[e2]
	store.32    $0xffffffff -> 16[e2]
	store.32    $5 -> 0[e2]
	store.f64   $0 -> 8[e2]
	load.32     %r7762 <- 0[op]
	switch.32   %r7762, 0 -> .L1825, 1 -> .L1826, 2 -> .L1827, default -> .L1828

.L1825:
	load.64*    %r7763 <- 0[e]
	push.64*    %r7763
	call.32     %r7764 <- isnumeral
	br          %r7764, .L1830, .L1829

.L1829:
	load.64*    %r7765 <- 0[fs]
	load.64*    %r7766 <- 0[e]
	push.64*    %r7765
	push.64*    %r7766
	call.32     %r7767 <- luaK_exp2anyreg
	br          .L1830

.L1830:
	load.64*    %r7768 <- 0[fs]
	load.64*    %r7769 <- 0[e]
	symaddr.64* %r7770 <- e2
	push.64*    %r7768
	push.32     $18
	push.64*    %r7769
	push.64*    %r7770
	call        codearith
	br          .L1824

.L1826:
	load.64*    %r7771 <- 0[fs]
	load.64*    %r7772 <- 0[e]
	push.64*    %r7771
	push.64*    %r7772
	call        codenot
	br          .L1824

.L1827:
	load.64*    %r7773 <- 0[fs]
	load.64*    %r7774 <- 0[e]
	push.64*    %r7773
	push.64*    %r7774
	call.32     %r7775 <- luaK_exp2anyreg
	load.64*    %r7776 <- 0[fs]
	load.64*    %r7777 <- 0[e]
	symaddr.64* %r7778 <- e2
	push.64*    %r7776
	push.32     $20
	push.64*    %r7777
	push.64*    %r7778
	call        codearith
	br          .L1824

.L1828:
	br          .L1824

.L1824:
	ret


luaK_infix:
.L1831:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[v]
	load.32     %r7779 <- 0[op]
	switch.32   %r7779, 0 -> .L1836, 1 -> .L1837, 2 -> .L1838, 3 -> .L1839, 4 -> .L1840, 5 -> .L1841, 6 -> .L1835, 13 -> .L1833, 14 -> .L1834, default -> .L1842

.L1833:
	load.64*    %r7780 <- 0[fs]
	load.64*    %r7781 <- 0[v]
	push.64*    %r7780
	push.64*    %r7781
	call        luaK_goiftrue
	br          .L1832

.L1834:
	load.64*    %r7782 <- 0[fs]
	load.64*    %r7783 <- 0[v]
	push.64*    %r7782
	push.64*    %r7783
	call        luaK_goiffalse
	br          .L1832

.L1835:
	load.64*    %r7784 <- 0[fs]
	load.64*    %r7785 <- 0[v]
	push.64*    %r7784
	push.64*    %r7785
	call        luaK_exp2nextreg
	br          .L1832

.L1836:
	br          .L1837

.L1837:
	br          .L1838

.L1838:
	br          .L1839

.L1839:
	br          .L1840

.L1840:
	br          .L1841

.L1841:
	load.64*    %r7786 <- 0[v]
	push.64*    %r7786
	call.32     %r7787 <- isnumeral
	br          %r7787, .L1844, .L1843

.L1843:
	load.64*    %r7788 <- 0[fs]
	load.64*    %r7789 <- 0[v]
	push.64*    %r7788
	push.64*    %r7789
	call.32     %r7790 <- luaK_exp2RK
	br          .L1844

.L1844:
	br          .L1832

.L1842:
	load.64*    %r7791 <- 0[fs]
	load.64*    %r7792 <- 0[v]
	push.64*    %r7791
	push.64*    %r7792
	call.32     %r7793 <- luaK_exp2RK
	br          .L1832

.L1832:
	ret


luaK_posfix:
.L1845:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e1]
	store.64*   %arg4 -> 0[e2]
	load.32     %r7794 <- 0[op]
	switch.32   %r7794, 0 -> .L1850, 1 -> .L1851, 2 -> .L1852, 3 -> .L1853, 4 -> .L1854, 5 -> .L1855, 6 -> .L1849, 7 -> .L1857, 8 -> .L1856, 9 -> .L1858, 10 -> .L1859, 11 -> .L1860, 12 -> .L1861, 13 -> .L1847, 14 -> .L1848, default -> .L1862

.L1847:
	load.64*    %r7795 <- 0[fs]
	load.64*    %r7796 <- 0[e2]
	push.64*    %r7795
	push.64*    %r7796
	call        luaK_dischargevars
	load.64*    %r7797 <- 0[fs]
	load.64*    %r7798 <- 0[e2]
	add.64*     %r7799 <- %r7798, $20
	load.64*    %r7800 <- 0[e1]
	load.32     %r7801 <- 20[%r7800]
	push.64*    %r7797
	push.64*    %r7799
	push.32     %r7801
	call        luaK_concat
	load.64*    %r7802 <- 0[e1]
	cast.64*    %r7803 <- (64) %r7802
	load.64*    %r7804 <- 0[e2]
	cast.64*    %r7805 <- (64) %r7804
	push.64*    %r7803
	push.64*    %r7805
	push.64     $24
	call.64*    %r7806 <- memcpy
	br          .L1846

.L1848:
	load.64*    %r7807 <- 0[fs]
	load.64*    %r7808 <- 0[e2]
	push.64*    %r7807
	push.64*    %r7808
	call        luaK_dischargevars
	load.64*    %r7809 <- 0[fs]
	load.64*    %r7810 <- 0[e2]
	add.64*     %r7811 <- %r7810, $16
	load.64*    %r7812 <- 0[e1]
	load.32     %r7813 <- 16[%r7812]
	push.64*    %r7809
	push.64*    %r7811
	push.32     %r7813
	call        luaK_concat
	load.64*    %r7814 <- 0[e1]
	cast.64*    %r7815 <- (64) %r7814
	load.64*    %r7816 <- 0[e2]
	cast.64*    %r7817 <- (64) %r7816
	push.64*    %r7815
	push.64*    %r7817
	push.64     $24
	call.64*    %r7818 <- memcpy
	br          .L1846

.L1849:
	load.64*    %r7819 <- 0[fs]
	load.64*    %r7820 <- 0[e2]
	push.64*    %r7819
	push.64*    %r7820
	call        luaK_exp2val
	load.64*    %r7821 <- 0[e2]
	load.32     %r7822 <- 0[%r7821]
	scast.32    %r7823 <- (32) %r7822
	seteq.32    %r7824 <- %r7823, $11
	br          %r7824, .L1865, .L1864

.L1865:
	load.64*    %r7825 <- 0[fs]
	load.64*    %r7826 <- 0[%r7825]
	load.64*    %r7827 <- 24[%r7826]
	load.64*    %r7828 <- 0[e2]
	load.32     %r7829 <- 8[%r7828]
	scast.64    %r7830 <- (32) %r7829
	muls.64     %r7831 <- %r7830, $4
	add.64*     %r7832 <- %r7827, %r7831
	load.32     %r7833 <- 0[%r7832]
	lsr.32      %r7834 <- %r7833, $0
	and.32      %r7835 <- %r7834, $63
	cast.32     %r7836 <- (32) %r7835
	scast.32    %r7837 <- (32) %r7836
	seteq.32    %r7838 <- %r7837, $21
	br          %r7838, .L1863, .L1864

.L1863:
	load.64*    %r7839 <- 0[fs]
	load.64*    %r7840 <- 0[e1]
	push.64*    %r7839
	push.64*    %r7840
	call        freeexp
	load.64*    %r7841 <- 0[fs]
	load.64*    %r7842 <- 0[%r7841]
	load.64*    %r7843 <- 24[%r7842]
	load.64*    %r7844 <- 0[e2]
	load.32     %r7845 <- 8[%r7844]
	scast.64    %r7846 <- (32) %r7845
	muls.64     %r7847 <- %r7846, $4
	add.64*     %r7848 <- %r7843, %r7847
	load.32     %r7849 <- 0[%r7848]
	and.32      %r7850 <- %r7849, $0x7fffff
	load.64*    %r7851 <- 0[e1]
	load.32     %r7852 <- 8[%r7851]
	scast.32    %r7853 <- (32) %r7852
	shl.32      %r7854 <- %r7853, $23
	and.32      %r7855 <- %r7854, $0xff800000
	or.32       %r7856 <- %r7850, %r7855
	load.64*    %r7857 <- 0[fs]
	load.64*    %r7858 <- 0[%r7857]
	load.64*    %r7859 <- 24[%r7858]
	load.64*    %r7860 <- 0[e2]
	load.32     %r7861 <- 8[%r7860]
	scast.64    %r7862 <- (32) %r7861
	muls.64     %r7863 <- %r7862, $4
	add.64*     %r7864 <- %r7859, %r7863
	store.32    %r7856 -> 0[%r7864]
	load.64*    %r7865 <- 0[e1]
	store.32    $11 -> 0[%r7865]
	load.64*    %r7866 <- 0[e2]
	load.32     %r7867 <- 8[%r7866]
	load.64*    %r7868 <- 0[e1]
	store.32    %r7867 -> 8[%r7868]
	br          .L1866

.L1864:
	load.64*    %r7869 <- 0[fs]
	load.64*    %r7870 <- 0[e2]
	push.64*    %r7869
	push.64*    %r7870
	call        luaK_exp2nextreg
	load.64*    %r7871 <- 0[fs]
	load.64*    %r7872 <- 0[e1]
	load.64*    %r7873 <- 0[e2]
	push.64*    %r7871
	push.32     $21
	push.64*    %r7872
	push.64*    %r7873
	call        codearith
	br          .L1866

.L1866:
	br          .L1846

.L1850:
	load.64*    %r7874 <- 0[fs]
	load.64*    %r7875 <- 0[e1]
	load.64*    %r7876 <- 0[e2]
	push.64*    %r7874
	push.32     $12
	push.64*    %r7875
	push.64*    %r7876
	call        codearith
	br          .L1846

.L1851:
	load.64*    %r7877 <- 0[fs]
	load.64*    %r7878 <- 0[e1]
	load.64*    %r7879 <- 0[e2]
	push.64*    %r7877
	push.32     $13
	push.64*    %r7878
	push.64*    %r7879
	call        codearith
	br          .L1846

.L1852:
	load.64*    %r7880 <- 0[fs]
	load.64*    %r7881 <- 0[e1]
	load.64*    %r7882 <- 0[e2]
	push.64*    %r7880
	push.32     $14
	push.64*    %r7881
	push.64*    %r7882
	call        codearith
	br          .L1846

.L1853:
	load.64*    %r7883 <- 0[fs]
	load.64*    %r7884 <- 0[e1]
	load.64*    %r7885 <- 0[e2]
	push.64*    %r7883
	push.32     $15
	push.64*    %r7884
	push.64*    %r7885
	call        codearith
	br          .L1846

.L1854:
	load.64*    %r7886 <- 0[fs]
	load.64*    %r7887 <- 0[e1]
	load.64*    %r7888 <- 0[e2]
	push.64*    %r7886
	push.32     $16
	push.64*    %r7887
	push.64*    %r7888
	call        codearith
	br          .L1846

.L1855:
	load.64*    %r7889 <- 0[fs]
	load.64*    %r7890 <- 0[e1]
	load.64*    %r7891 <- 0[e2]
	push.64*    %r7889
	push.32     $17
	push.64*    %r7890
	push.64*    %r7891
	call        codearith
	br          .L1846

.L1856:
	load.64*    %r7892 <- 0[fs]
	load.64*    %r7893 <- 0[e1]
	load.64*    %r7894 <- 0[e2]
	push.64*    %r7892
	push.32     $23
	push.32     $1
	push.64*    %r7893
	push.64*    %r7894
	call        codecomp
	br          .L1846

.L1857:
	load.64*    %r7895 <- 0[fs]
	load.64*    %r7896 <- 0[e1]
	load.64*    %r7897 <- 0[e2]
	push.64*    %r7895
	push.32     $23
	push.32     $0
	push.64*    %r7896
	push.64*    %r7897
	call        codecomp
	br          .L1846

.L1858:
	load.64*    %r7898 <- 0[fs]
	load.64*    %r7899 <- 0[e1]
	load.64*    %r7900 <- 0[e2]
	push.64*    %r7898
	push.32     $24
	push.32     $1
	push.64*    %r7899
	push.64*    %r7900
	call        codecomp
	br          .L1846

.L1859:
	load.64*    %r7901 <- 0[fs]
	load.64*    %r7902 <- 0[e1]
	load.64*    %r7903 <- 0[e2]
	push.64*    %r7901
	push.32     $25
	push.32     $1
	push.64*    %r7902
	push.64*    %r7903
	call        codecomp
	br          .L1846

.L1860:
	load.64*    %r7904 <- 0[fs]
	load.64*    %r7905 <- 0[e1]
	load.64*    %r7906 <- 0[e2]
	push.64*    %r7904
	push.32     $24
	push.32     $0
	push.64*    %r7905
	push.64*    %r7906
	call        codecomp
	br          .L1846

.L1861:
	load.64*    %r7907 <- 0[fs]
	load.64*    %r7908 <- 0[e1]
	load.64*    %r7909 <- 0[e2]
	push.64*    %r7907
	push.32     $25
	push.32     $0
	push.64*    %r7908
	push.64*    %r7909
	call        codecomp
	br          .L1846

.L1862:
	br          .L1846

.L1846:
	ret


luaK_fixline:
.L1867:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[line]
	load.32     %r7910 <- 0[line]
	load.64*    %r7911 <- 0[fs]
	load.64*    %r7912 <- 0[%r7911]
	load.64*    %r7913 <- 40[%r7912]
	load.64*    %r7914 <- 0[fs]
	load.32     %r7915 <- 48[%r7914]
	sub.32      %r7916 <- %r7915, $1
	scast.64    %r7917 <- (32) %r7916
	muls.64     %r7918 <- %r7917, $4
	add.64*     %r7919 <- %r7913, %r7918
	store.32    %r7910 -> 0[%r7919]
	br          .L1868

.L1868:
	ret


luaK_code:
.L1869:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[i]
	store.32    %arg3 -> 0[line]
	load.64*    %r7920 <- 0[fs]
	load.64*    %r7921 <- 0[%r7920]
	store.64*   %r7921 -> 0[f]
	load.64*    %r7922 <- 0[fs]
	push.64*    %r7922
	call        dischargejpc
	load.64*    %r7923 <- 0[fs]
	load.32     %r7924 <- 48[%r7923]
	add.32      %r7925 <- %r7924, $1
	load.64*    %r7926 <- 0[f]
	load.32     %r7927 <- 80[%r7926]
	setgt.32    %r7928 <- %r7925, %r7927
	br          %r7928, .L1870, .L1871

.L1870:
	load.64*    %r7929 <- 0[fs]
	load.64*    %r7930 <- 32[%r7929]
	load.64*    %r7931 <- 0[f]
	load.64*    %r7932 <- 24[%r7931]
	cast.64*    %r7933 <- (64) %r7932
	load.64*    %r7934 <- 0[f]
	add.64*     %r7935 <- %r7934, $80
	symaddr.64* %r7936 <- <anon symbol:0x62d001378e68>
	push.64*    %r7930
	push.64*    %r7933
	push.64*    %r7935
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7936
	call.64*    %r7937 <- luaM_growaux_
	ptrcast.64* %r7938 <- (64) %r7937
	load.64*    %r7939 <- 0[f]
	store.64*   %r7938 -> 24[%r7939]
	br          .L1871

.L1871:
	load.32     %r7940 <- 0[i]
	load.64*    %r7941 <- 0[f]
	load.64*    %r7942 <- 24[%r7941]
	load.64*    %r7943 <- 0[fs]
	load.32     %r7944 <- 48[%r7943]
	scast.64    %r7945 <- (32) %r7944
	muls.64     %r7946 <- %r7945, $4
	add.64*     %r7947 <- %r7942, %r7946
	store.32    %r7940 -> 0[%r7947]
	load.64*    %r7948 <- 0[fs]
	load.32     %r7949 <- 48[%r7948]
	add.32      %r7950 <- %r7949, $1
	load.64*    %r7951 <- 0[f]
	load.32     %r7952 <- 84[%r7951]
	setgt.32    %r7953 <- %r7950, %r7952
	br          %r7953, .L1872, .L1873

.L1872:
	load.64*    %r7954 <- 0[fs]
	load.64*    %r7955 <- 32[%r7954]
	load.64*    %r7956 <- 0[f]
	load.64*    %r7957 <- 40[%r7956]
	cast.64*    %r7958 <- (64) %r7957
	load.64*    %r7959 <- 0[f]
	add.64*     %r7960 <- %r7959, $84
	symaddr.64* %r7961 <- <anon symbol:0x62d00137a340>
	push.64*    %r7955
	push.64*    %r7958
	push.64*    %r7960
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7961
	call.64*    %r7962 <- luaM_growaux_
	ptrcast.64* %r7963 <- (64) %r7962
	load.64*    %r7964 <- 0[f]
	store.64*   %r7963 -> 40[%r7964]
	br          .L1873

.L1873:
	load.32     %r7965 <- 0[line]
	load.64*    %r7966 <- 0[f]
	load.64*    %r7967 <- 40[%r7966]
	load.64*    %r7968 <- 0[fs]
	load.32     %r7969 <- 48[%r7968]
	scast.64    %r7970 <- (32) %r7969
	muls.64     %r7971 <- %r7970, $4
	add.64*     %r7972 <- %r7967, %r7971
	store.32    %r7965 -> 0[%r7972]
	load.64*    %r7973 <- 0[fs]
	load.32     %r7974 <- 48[%r7973]
	add.32      %r7975 <- %r7974, $1
	store.32    %r7975 -> 48[%r7973]
	phisrc.32   %phi327(return) <- %r7974
	br          .L1874

.L1874:
	phi.32      %r7976 <- %phi327(return)
	ret.32      %r7974


luaK_codeABC:
.L1875:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[o]
	store.32    %arg3 -> 0[a]
	store.32    %arg4 -> 0[b]
	store.32    %arg5 -> 0[c]
	load.64*    %r7977 <- 0[fs]
	load.32     %r7978 <- 0[o]
	scast.32    %r7979 <- (32) %r7978
	shl.32      %r7980 <- %r7979, $0
	load.32     %r7981 <- 0[a]
	scast.32    %r7982 <- (32) %r7981
	shl.32      %r7983 <- %r7982, $6
	or.32       %r7984 <- %r7980, %r7983
	load.32     %r7985 <- 0[b]
	scast.32    %r7986 <- (32) %r7985
	shl.32      %r7987 <- %r7986, $23
	or.32       %r7988 <- %r7984, %r7987
	load.32     %r7989 <- 0[c]
	scast.32    %r7990 <- (32) %r7989
	shl.32      %r7991 <- %r7990, $14
	or.32       %r7992 <- %r7988, %r7991
	load.64*    %r7993 <- 0[fs]
	load.64*    %r7994 <- 24[%r7993]
	load.32     %r7995 <- 8[%r7994]
	push.64*    %r7977
	push.32     %r7992
	push.32     %r7995
	call.32     %r7996 <- luaK_code
	phisrc.32   %phi328(return) <- %r7996
	br          .L1876

.L1876:
	phi.32      %r7997 <- %phi328(return)
	ret.32      %r7996


luaK_codeABx:
.L1877:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[o]
	store.32    %arg3 -> 0[a]
	store.32    %arg4 -> 0[bc]
	load.64*    %r7998 <- 0[fs]
	load.32     %r7999 <- 0[o]
	scast.32    %r8000 <- (32) %r7999
	shl.32      %r8001 <- %r8000, $0
	load.32     %r8002 <- 0[a]
	scast.32    %r8003 <- (32) %r8002
	shl.32      %r8004 <- %r8003, $6
	or.32       %r8005 <- %r8001, %r8004
	load.32     %r8006 <- 0[bc]
	cast.32     %r8007 <- (32) %r8006
	shl.32      %r8008 <- %r8007, $14
	or.32       %r8009 <- %r8005, %r8008
	load.64*    %r8010 <- 0[fs]
	load.64*    %r8011 <- 24[%r8010]
	load.32     %r8012 <- 8[%r8011]
	push.64*    %r7998
	push.32     %r8009
	push.32     %r8012
	call.32     %r8013 <- luaK_code
	phisrc.32   %phi329(return) <- %r8013
	br          .L1878

.L1878:
	phi.32      %r8014 <- %phi329(return)
	ret.32      %r8013


luaK_setlist:
.L1879:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[base]
	store.32    %arg3 -> 0[nelems]
	store.32    %arg4 -> 0[tostore]
	load.32     %r8015 <- 0[nelems]
	sub.32      %r8016 <- %r8015, $1
	divs.32     %r8017 <- %r8016, $50
	add.32      %r8018 <- %r8017, $1
	store.32    %r8018 -> 0[c]
	load.32     %r8019 <- 0[tostore]
	load.32     %r8020 <- 0[tostore]
	seteq.32    %r8021 <- %r8020, $0xffffffff
	select.32   %r8022 <- %r8021, $0, %r8019
	store.32    %r8022 -> 0[b]
	load.32     %r8023 <- 0[c]
	setle.32    %r8024 <- %r8023, $511
	br          %r8024, .L1880, .L1881

.L1880:
	load.64*    %r8025 <- 0[fs]
	load.32     %r8026 <- 0[base]
	load.32     %r8027 <- 0[b]
	load.32     %r8028 <- 0[c]
	push.64*    %r8025
	push.32     $34
	push.32     %r8026
	push.32     %r8027
	push.32     %r8028
	call.32     %r8029 <- luaK_codeABC
	br          .L1882

.L1881:
	load.64*    %r8030 <- 0[fs]
	load.32     %r8031 <- 0[base]
	load.32     %r8032 <- 0[b]
	push.64*    %r8030
	push.32     $34
	push.32     %r8031
	push.32     %r8032
	push.32     $0
	call.32     %r8033 <- luaK_codeABC
	load.64*    %r8034 <- 0[fs]
	load.32     %r8035 <- 0[c]
	scast.32    %r8036 <- (32) %r8035
	load.64*    %r8037 <- 0[fs]
	load.64*    %r8038 <- 24[%r8037]
	load.32     %r8039 <- 8[%r8038]
	push.64*    %r8034
	push.32     %r8036
	push.32     %r8039
	call.32     %r8040 <- luaK_code
	br          .L1882

.L1882:
	load.32     %r8041 <- 0[base]
	add.32      %r8042 <- %r8041, $1
	load.64*    %r8043 <- 0[fs]
	store.32    %r8042 -> 60[%r8043]
	br          .L1883

.L1883:
	ret


anchor_token:
.L1884:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8044 <- 0[ls]
	load.32     %r8045 <- 16[%r8044]
	seteq.32    %r8046 <- %r8045, $285
	br          %r8046, .L1885, .L1887

.L1887:
	load.64*    %r8047 <- 0[ls]
	load.32     %r8048 <- 16[%r8047]
	seteq.32    %r8049 <- %r8048, $286
	br          %r8049, .L1885, .L1886

.L1885:
	load.64*    %r8050 <- 0[ls]
	load.64*    %r8051 <- 24[%r8050]
	store.64*   %r8051 -> 0[ts]
	load.64*    %r8052 <- 0[ls]
	load.64*    %r8053 <- 0[ts]
	add.64*     %r8054 <- %r8053, $24
	ptrcast.64* %r8055 <- (64) %r8054
	load.64*    %r8056 <- 0[ts]
	load.64     %r8057 <- 16[%r8056]
	push.64*    %r8052
	push.64*    %r8055
	push.64     %r8057
	call.64*    %r8058 <- luaX_newstring
	br          .L1886

.L1886:
	ret


error_expected:
.L1888:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.64*    %r8059 <- 0[ls]
	load.64*    %r8060 <- 0[ls]
	load.64*    %r8061 <- 56[%r8060]
	symaddr.64* %r8062 <- <anon symbol:0x62d00137e500>
	load.64*    %r8063 <- 0[ls]
	load.32     %r8064 <- 0[token]
	push.64*    %r8063
	push.32     %r8064
	call.64*    %r8065 <- luaX_token2str
	push.64*    %r8061
	push.64*    %r8062
	push.64*    %r8065
	call.64*    %r8066 <- luaO_pushfstring
	push.64*    %r8059
	push.64*    %r8066
	call        luaX_syntaxerror
	br          .L1889

.L1889:
	ret


errorlimit:
.L1890:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[limit]
	store.64*   %arg3 -> 0[what]
	load.64*    %r8067 <- 0[fs]
	load.64*    %r8068 <- 0[%r8067]
	load.32     %r8069 <- 96[%r8068]
	seteq.32    %r8070 <- %r8069, $0
	br          %r8070, .L1891, .L1892

.L1891:
	load.64*    %r8071 <- 0[fs]
	load.64*    %r8072 <- 32[%r8071]
	symaddr.64* %r8073 <- <anon symbol:0x62d00137f720>
	load.32     %r8074 <- 0[limit]
	load.64*    %r8075 <- 0[what]
	push.64*    %r8072
	push.64*    %r8073
	push.32     %r8074
	push.64*    %r8075
	call.64*    %r8076 <- luaO_pushfstring
	phisrc.64*  %phi330 <- %r8076
	br          .L1893

.L1892:
	load.64*    %r8077 <- 0[fs]
	load.64*    %r8078 <- 32[%r8077]
	symaddr.64* %r8079 <- <anon symbol:0x62d00137ee10>
	load.64*    %r8080 <- 0[fs]
	load.64*    %r8081 <- 0[%r8080]
	load.32     %r8082 <- 96[%r8081]
	load.32     %r8083 <- 0[limit]
	load.64*    %r8084 <- 0[what]
	push.64*    %r8078
	push.64*    %r8079
	push.32     %r8082
	push.32     %r8083
	push.64*    %r8084
	call.64*    %r8085 <- luaO_pushfstring
	phisrc.64*  %phi331 <- %r8085
	br          .L1893

.L1893:
	phi.64*     %r8086 <- %phi330, %phi331
	store.64*   %r8086 -> 0[msg]
	load.64*    %r8087 <- 0[fs]
	load.64*    %r8088 <- 24[%r8087]
	load.64*    %r8089 <- 0[msg]
	push.64*    %r8088
	push.64*    %r8089
	push.32     $0
	call        luaX_lexerror
	br          .L1894

.L1894:
	ret


testnext:
.L1895:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r8090 <- 0[ls]
	load.32     %r8091 <- 16[%r8090]
	load.32     %r8092 <- 0[c]
	seteq.32    %r8093 <- %r8091, %r8092
	br          %r8093, .L1896, .L1897

.L1896:
	load.64*    %r8094 <- 0[ls]
	push.64*    %r8094
	call        luaX_next
	phisrc.32   %phi332(return) <- $1
	br          .L1898

.L1897:
	phisrc.32   %phi333(return) <- $0
	br          .L1898

.L1898:
	phi.32      %r8095 <- %phi332(return), %phi333(return)
	ret.32      %r8095


check:
.L1900:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r8096 <- 0[ls]
	load.32     %r8097 <- 16[%r8096]
	load.32     %r8098 <- 0[c]
	setne.32    %r8099 <- %r8097, %r8098
	br          %r8099, .L1901, .L1902

.L1901:
	load.64*    %r8100 <- 0[ls]
	load.32     %r8101 <- 0[c]
	push.64*    %r8100
	push.32     %r8101
	call        error_expected
	br          .L1902

.L1902:
	ret


checknext:
.L1903:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r8102 <- 0[ls]
	load.32     %r8103 <- 0[c]
	push.64*    %r8102
	push.32     %r8103
	call        check
	load.64*    %r8104 <- 0[ls]
	push.64*    %r8104
	call        luaX_next
	br          .L1904

.L1904:
	ret


check_match:
.L1905:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[what]
	store.32    %arg3 -> 0[who]
	store.32    %arg4 -> 0[where]
	load.64*    %r8105 <- 0[ls]
	load.32     %r8106 <- 0[what]
	push.64*    %r8105
	push.32     %r8106
	call.32     %r8107 <- testnext
	br          %r8107, .L1907, .L1906

.L1906:
	load.32     %r8108 <- 0[where]
	load.64*    %r8109 <- 0[ls]
	load.32     %r8110 <- 4[%r8109]
	seteq.32    %r8111 <- %r8108, %r8110
	br          %r8111, .L1908, .L1909

.L1908:
	load.64*    %r8112 <- 0[ls]
	load.32     %r8113 <- 0[what]
	push.64*    %r8112
	push.32     %r8113
	call        error_expected
	br          .L1910

.L1909:
	load.64*    %r8114 <- 0[ls]
	load.64*    %r8115 <- 0[ls]
	load.64*    %r8116 <- 56[%r8115]
	symaddr.64* %r8117 <- <anon symbol:0x62d0013803d0>
	load.64*    %r8118 <- 0[ls]
	load.32     %r8119 <- 0[what]
	push.64*    %r8118
	push.32     %r8119
	call.64*    %r8120 <- luaX_token2str
	load.64*    %r8121 <- 0[ls]
	load.32     %r8122 <- 0[who]
	push.64*    %r8121
	push.32     %r8122
	call.64*    %r8123 <- luaX_token2str
	load.32     %r8124 <- 0[where]
	push.64*    %r8116
	push.64*    %r8117
	push.64*    %r8120
	push.64*    %r8123
	push.32     %r8124
	call.64*    %r8125 <- luaO_pushfstring
	push.64*    %r8114
	push.64*    %r8125
	call        luaX_syntaxerror
	br          .L1910

.L1910:
	br          .L1907

.L1907:
	ret


str_checkname:
.L1911:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8126 <- 0[ls]
	push.64*    %r8126
	push.32     $285
	call        check
	load.64*    %r8127 <- 0[ls]
	load.64*    %r8128 <- 24[%r8127]
	store.64*   %r8128 -> 0[ts]
	load.64*    %r8129 <- 0[ls]
	push.64*    %r8129
	call        luaX_next
	load.64*    %r8130 <- 0[ts]
	phisrc.64*  %phi334(return) <- %r8130
	br          .L1912

.L1912:
	phi.64*     %r8131 <- %phi334(return)
	ret.64*     %r8130


init_exp:
.L1913:
	<entry-point>
	store.64*   %arg1 -> 0[e]
	store.32    %arg2 -> 0[k]
	store.32    %arg3 -> 0[i]
	load.64*    %r8132 <- 0[e]
	store.32    $0xffffffff -> 16[%r8132]
	load.64*    %r8133 <- 0[e]
	store.32    $0xffffffff -> 20[%r8133]
	load.32     %r8134 <- 0[k]
	load.64*    %r8135 <- 0[e]
	store.32    %r8134 -> 0[%r8135]
	load.32     %r8136 <- 0[i]
	load.64*    %r8137 <- 0[e]
	store.32    %r8136 -> 8[%r8137]
	br          .L1914

.L1914:
	ret


codestring:
.L1915:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	store.64*   %arg3 -> 0[s]
	load.64*    %r8138 <- 0[e]
	load.64*    %r8139 <- 0[ls]
	load.64*    %r8140 <- 48[%r8139]
	load.64*    %r8141 <- 0[s]
	push.64*    %r8140
	push.64*    %r8141
	call.32     %r8142 <- luaK_stringK
	push.64*    %r8138
	push.32     $4
	push.32     %r8142
	call        init_exp
	br          .L1916

.L1916:
	ret


checkname:
.L1917:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	load.64*    %r8143 <- 0[ls]
	load.64*    %r8144 <- 0[e]
	load.64*    %r8145 <- 0[ls]
	push.64*    %r8145
	call.64*    %r8146 <- str_checkname
	push.64*    %r8143
	push.64*    %r8144
	push.64*    %r8146
	call        codestring
	br          .L1918

.L1918:
	ret


registerlocalvar:
.L1919:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[varname]
	load.64*    %r8147 <- 0[ls]
	load.64*    %r8148 <- 48[%r8147]
	store.64*   %r8148 -> 0[fs]
	load.64*    %r8149 <- 0[fs]
	load.64*    %r8150 <- 0[%r8149]
	store.64*   %r8150 -> 0[f]
	load.64*    %r8151 <- 0[f]
	load.32     %r8152 <- 92[%r8151]
	store.32    %r8152 -> 0[oldsize]
	load.64*    %r8153 <- 0[fs]
	load.16     %r8154 <- 72[%r8153]
	scast.32    %r8155 <- (16) %r8154
	add.32      %r8156 <- %r8155, $1
	load.64*    %r8157 <- 0[f]
	load.32     %r8158 <- 92[%r8157]
	setgt.32    %r8159 <- %r8156, %r8158
	br          %r8159, .L1920, .L1921

.L1920:
	load.64*    %r8160 <- 0[ls]
	load.64*    %r8161 <- 56[%r8160]
	load.64*    %r8162 <- 0[f]
	load.64*    %r8163 <- 48[%r8162]
	cast.64*    %r8164 <- (64) %r8163
	load.64*    %r8165 <- 0[f]
	add.64*     %r8166 <- %r8165, $92
	symaddr.64* %r8167 <- <anon symbol:0x62d001382558>
	push.64*    %r8161
	push.64*    %r8164
	push.64*    %r8166
	push.64     $16
	push.32     $0x7fff
	push.64*    %r8167
	call.64*    %r8168 <- luaM_growaux_
	ptrcast.64* %r8169 <- (64) %r8168
	load.64*    %r8170 <- 0[f]
	store.64*   %r8169 -> 48[%r8170]
	br          .L1921

.L1921:
	br          .L1925

.L1925:
	load.32     %r8171 <- 0[oldsize]
	load.64*    %r8172 <- 0[f]
	load.32     %r8173 <- 92[%r8172]
	setlt.32    %r8174 <- %r8171, %r8173
	br          %r8174, .L1922, .L1924

.L1922:
	load.64*    %r8175 <- 0[f]
	load.64*    %r8176 <- 48[%r8175]
	load.32     %r8177 <- 0[oldsize]
	add.32      %r8178 <- %r8177, $1
	store.32    %r8178 -> 0[oldsize]
	scast.64    %r8179 <- (32) %r8177
	muls.64     %r8180 <- %r8179, $16
	add.64*     %r8181 <- %r8176, %r8180
	store.64*   $0 -> 0[%r8181]
	br          .L1923

.L1923:
	br          .L1925

.L1924:
	load.64*    %r8182 <- 0[varname]
	load.64*    %r8183 <- 0[f]
	load.64*    %r8184 <- 48[%r8183]
	load.64*    %r8185 <- 0[fs]
	load.16     %r8186 <- 72[%r8185]
	scast.64    %r8187 <- (16) %r8186
	muls.64     %r8188 <- %r8187, $16
	add.64*     %r8189 <- %r8184, %r8188
	store.64*   %r8182 -> 0[%r8189]
	load.64*    %r8190 <- 0[varname]
	ptrcast.64* %r8191 <- (64) %r8190
	load.8      %r8192 <- 9[%r8191]
	cast.32     %r8193 <- (8) %r8192
	and.32      %r8194 <- %r8193, $3
	br          %r8194, .L1928, .L1927

.L1928:
	load.64*    %r8195 <- 0[f]
	ptrcast.64* %r8196 <- (64) %r8195
	load.8      %r8197 <- 9[%r8196]
	cast.32     %r8198 <- (8) %r8197
	and.32      %r8199 <- %r8198, $4
	br          %r8199, .L1926, .L1927

.L1926:
	load.64*    %r8200 <- 0[ls]
	load.64*    %r8201 <- 56[%r8200]
	load.64*    %r8202 <- 0[f]
	ptrcast.64* %r8203 <- (64) %r8202
	load.64*    %r8204 <- 0[varname]
	ptrcast.64* %r8205 <- (64) %r8204
	push.64*    %r8201
	push.64*    %r8203
	push.64*    %r8205
	call        luaC_barrierf
	br          .L1927

.L1927:
	load.64*    %r8206 <- 0[fs]
	load.16     %r8207 <- 72[%r8206]
	add.16      %r8208 <- %r8207, $1
	store.16    %r8208 -> 72[%r8206]
	scast.32    %r8209 <- (16) %r8207
	phisrc.32   %phi335(return) <- %r8209
	br          .L1929

.L1929:
	phi.32      %r8210 <- %phi335(return)
	ret.32      %r8209


new_localvar:
.L1930:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[name]
	store.32    %arg3 -> 0[n]
	load.64*    %r8211 <- 0[ls]
	load.64*    %r8212 <- 48[%r8211]
	store.64*   %r8212 -> 0[fs]
	load.64*    %r8213 <- 0[fs]
	load.8      %r8214 <- 74[%r8213]
	cast.32     %r8215 <- (8) %r8214
	load.32     %r8216 <- 0[n]
	add.32      %r8217 <- %r8215, %r8216
	add.32      %r8218 <- %r8217, $1
	setgt.32    %r8219 <- %r8218, $200
	br          %r8219, .L1931, .L1932

.L1931:
	load.64*    %r8220 <- 0[fs]
	symaddr.64* %r8221 <- <anon symbol:0x62d001383a30>
	push.64*    %r8220
	push.32     $200
	push.64*    %r8221
	call        errorlimit
	br          .L1932

.L1932:
	load.64*    %r8222 <- 0[ls]
	load.64*    %r8223 <- 0[name]
	push.64*    %r8222
	push.64*    %r8223
	call.32     %r8224 <- registerlocalvar
	scast.16    %r8225 <- (32) %r8224
	load.64*    %r8226 <- 0[fs]
	add.64*     %r8227 <- %r8226, $196
	load.64*    %r8228 <- 0[fs]
	load.8      %r8229 <- 74[%r8228]
	cast.32     %r8230 <- (8) %r8229
	load.32     %r8231 <- 0[n]
	add.32      %r8232 <- %r8230, %r8231
	scast.64    %r8233 <- (32) %r8232
	muls.64     %r8234 <- %r8233, $2
	add.64*     %r8235 <- %r8227, %r8234
	store.16    %r8225 -> 0[%r8235]
	br          .L1933

.L1933:
	ret


adjustlocalvars:
.L1934:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[nvars]
	load.64*    %r8236 <- 0[ls]
	load.64*    %r8237 <- 48[%r8236]
	store.64*   %r8237 -> 0[fs]
	load.64*    %r8238 <- 0[fs]
	load.8      %r8239 <- 74[%r8238]
	cast.32     %r8240 <- (8) %r8239
	load.32     %r8241 <- 0[nvars]
	add.32      %r8242 <- %r8240, %r8241
	scast.8     %r8243 <- (32) %r8242
	load.64*    %r8244 <- 0[fs]
	store.8     %r8243 -> 74[%r8244]
	br          .L1938

.L1938:
	load.32     %r8245 <- 0[nvars]
	br          %r8245, .L1935, .L1937

.L1935:
	load.64*    %r8246 <- 0[fs]
	load.32     %r8247 <- 48[%r8246]
	load.64*    %r8248 <- 0[fs]
	load.64*    %r8249 <- 0[%r8248]
	load.64*    %r8250 <- 48[%r8249]
	load.64*    %r8251 <- 0[fs]
	add.64*     %r8252 <- %r8251, $196
	load.64*    %r8253 <- 0[fs]
	load.8      %r8254 <- 74[%r8253]
	cast.32     %r8255 <- (8) %r8254
	load.32     %r8256 <- 0[nvars]
	sub.32      %r8257 <- %r8255, %r8256
	scast.64    %r8258 <- (32) %r8257
	muls.64     %r8259 <- %r8258, $2
	add.64*     %r8260 <- %r8252, %r8259
	load.16     %r8261 <- 0[%r8260]
	cast.64     %r8262 <- (16) %r8261
	muls.64     %r8263 <- %r8262, $16
	add.64*     %r8264 <- %r8250, %r8263
	store.32    %r8247 -> 8[%r8264]
	br          .L1936

.L1936:
	load.32     %r8265 <- 0[nvars]
	sub.32      %r8266 <- %r8265, $1
	store.32    %r8266 -> 0[nvars]
	br          .L1938

.L1937:
	ret


removevars:
.L1939:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[tolevel]
	load.64*    %r8267 <- 0[ls]
	load.64*    %r8268 <- 48[%r8267]
	store.64*   %r8268 -> 0[fs]
	br          .L1943

.L1943:
	load.64*    %r8269 <- 0[fs]
	load.8      %r8270 <- 74[%r8269]
	cast.32     %r8271 <- (8) %r8270
	load.32     %r8272 <- 0[tolevel]
	setgt.32    %r8273 <- %r8271, %r8272
	br          %r8273, .L1940, .L1942

.L1940:
	load.64*    %r8274 <- 0[fs]
	load.32     %r8275 <- 48[%r8274]
	load.64*    %r8276 <- 0[fs]
	load.64*    %r8277 <- 0[%r8276]
	load.64*    %r8278 <- 48[%r8277]
	load.64*    %r8279 <- 0[fs]
	add.64*     %r8280 <- %r8279, $196
	load.64*    %r8281 <- 0[fs]
	load.8      %r8282 <- 74[%r8281]
	sub.8       %r8283 <- %r8282, $1
	store.8     %r8283 -> 74[%r8281]
	cast.64     %r8284 <- (8) %r8283
	muls.64     %r8285 <- %r8284, $2
	add.64*     %r8286 <- %r8280, %r8285
	load.16     %r8287 <- 0[%r8286]
	cast.64     %r8288 <- (16) %r8287
	muls.64     %r8289 <- %r8288, $16
	add.64*     %r8290 <- %r8278, %r8289
	store.32    %r8275 -> 12[%r8290]
	br          .L1941

.L1941:
	br          .L1943

.L1942:
	ret


indexupvalue:
.L1944:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[name]
	store.64*   %arg3 -> 0[v]
	load.64*    %r8291 <- 0[fs]
	load.64*    %r8292 <- 0[%r8291]
	store.64*   %r8292 -> 0[f]
	load.64*    %r8293 <- 0[f]
	load.32     %r8294 <- 72[%r8293]
	store.32    %r8294 -> 0[oldsize]
	store.32    $0 -> 0[i]
	br          .L1948

.L1948:
	load.32     %r8295 <- 0[i]
	load.64*    %r8296 <- 0[f]
	load.8      %r8297 <- 112[%r8296]
	cast.32     %r8298 <- (8) %r8297
	setlt.32    %r8299 <- %r8295, %r8298
	br          %r8299, .L1945, .L1947

.L1945:
	load.64*    %r8300 <- 0[fs]
	add.64*     %r8301 <- %r8300, $75
	load.32     %r8302 <- 0[i]
	scast.64    %r8303 <- (32) %r8302
	muls.64     %r8304 <- %r8303, $2
	add.64*     %r8305 <- %r8301, %r8304
	load.8      %r8306 <- 0[%r8305]
	cast.32     %r8307 <- (8) %r8306
	load.64*    %r8308 <- 0[v]
	load.32     %r8309 <- 0[%r8308]
	scast.32    %r8310 <- (32) %r8309
	seteq.32    %r8311 <- %r8307, %r8310
	br          %r8311, .L1951, .L1950

.L1951:
	load.64*    %r8312 <- 0[fs]
	add.64*     %r8313 <- %r8312, $75
	load.32     %r8314 <- 0[i]
	scast.64    %r8315 <- (32) %r8314
	muls.64     %r8316 <- %r8315, $2
	add.64*     %r8317 <- %r8313, %r8316
	load.8      %r8318 <- 1[%r8317]
	cast.32     %r8319 <- (8) %r8318
	load.64*    %r8320 <- 0[v]
	load.32     %r8321 <- 8[%r8320]
	seteq.32    %r8322 <- %r8319, %r8321
	br          %r8322, .L1949, .L1950

.L1949:
	load.32     %r8323 <- 0[i]
	phisrc.32   %phi336(return) <- %r8323
	br          .L1952

.L1950:
	br          .L1946

.L1946:
	load.32     %r8325 <- 0[i]
	add.32      %r8326 <- %r8325, $1
	store.32    %r8326 -> 0[i]
	br          .L1948

.L1947:
	load.64*    %r8327 <- 0[f]
	load.8      %r8328 <- 112[%r8327]
	cast.32     %r8329 <- (8) %r8328
	add.32      %r8330 <- %r8329, $1
	setgt.32    %r8331 <- %r8330, $60
	br          %r8331, .L1953, .L1954

.L1953:
	load.64*    %r8332 <- 0[fs]
	symaddr.64* %r8333 <- <anon symbol:0x62d001393468>
	push.64*    %r8332
	push.32     $60
	push.64*    %r8333
	call        errorlimit
	br          .L1954

.L1954:
	load.64*    %r8334 <- 0[f]
	load.8      %r8335 <- 112[%r8334]
	cast.32     %r8336 <- (8) %r8335
	add.32      %r8337 <- %r8336, $1
	load.64*    %r8338 <- 0[f]
	load.32     %r8339 <- 72[%r8338]
	setgt.32    %r8340 <- %r8337, %r8339
	br          %r8340, .L1955, .L1956

.L1955:
	load.64*    %r8341 <- 0[fs]
	load.64*    %r8342 <- 32[%r8341]
	load.64*    %r8343 <- 0[f]
	load.64*    %r8344 <- 56[%r8343]
	cast.64*    %r8345 <- (64) %r8344
	load.64*    %r8346 <- 0[f]
	add.64*     %r8347 <- %r8346, $72
	symaddr.64* %r8348 <- <anon symbol:0x62d0013943d0>
	push.64*    %r8342
	push.64*    %r8345
	push.64*    %r8347
	push.64     $8
	push.32     $0x7ffffffd
	push.64*    %r8348
	call.64*    %r8349 <- luaM_growaux_
	ptrcast.64* %r8350 <- (64) %r8349
	load.64*    %r8351 <- 0[f]
	store.64*   %r8350 -> 56[%r8351]
	br          .L1956

.L1956:
	br          .L1960

.L1960:
	load.32     %r8352 <- 0[oldsize]
	load.64*    %r8353 <- 0[f]
	load.32     %r8354 <- 72[%r8353]
	setlt.32    %r8355 <- %r8352, %r8354
	br          %r8355, .L1957, .L1959

.L1957:
	load.64*    %r8356 <- 0[f]
	load.64*    %r8357 <- 56[%r8356]
	load.32     %r8358 <- 0[oldsize]
	add.32      %r8359 <- %r8358, $1
	store.32    %r8359 -> 0[oldsize]
	scast.64    %r8360 <- (32) %r8358
	muls.64     %r8361 <- %r8360, $8
	add.64*     %r8362 <- %r8357, %r8361
	store.64*   $0 -> 0[%r8362]
	br          .L1958

.L1958:
	br          .L1960

.L1959:
	load.64*    %r8363 <- 0[name]
	load.64*    %r8364 <- 0[f]
	load.64*    %r8365 <- 56[%r8364]
	load.64*    %r8366 <- 0[f]
	load.8      %r8367 <- 112[%r8366]
	cast.64     %r8368 <- (8) %r8367
	muls.64     %r8369 <- %r8368, $8
	add.64*     %r8370 <- %r8365, %r8369
	store.64*   %r8363 -> 0[%r8370]
	load.64*    %r8371 <- 0[name]
	ptrcast.64* %r8372 <- (64) %r8371
	load.8      %r8373 <- 9[%r8372]
	cast.32     %r8374 <- (8) %r8373
	and.32      %r8375 <- %r8374, $3
	br          %r8375, .L1963, .L1962

.L1963:
	load.64*    %r8376 <- 0[f]
	ptrcast.64* %r8377 <- (64) %r8376
	load.8      %r8378 <- 9[%r8377]
	cast.32     %r8379 <- (8) %r8378
	and.32      %r8380 <- %r8379, $4
	br          %r8380, .L1961, .L1962

.L1961:
	load.64*    %r8381 <- 0[fs]
	load.64*    %r8382 <- 32[%r8381]
	load.64*    %r8383 <- 0[f]
	ptrcast.64* %r8384 <- (64) %r8383
	load.64*    %r8385 <- 0[name]
	ptrcast.64* %r8386 <- (64) %r8385
	push.64*    %r8382
	push.64*    %r8384
	push.64*    %r8386
	call        luaC_barrierf
	br          .L1962

.L1962:
	load.64*    %r8387 <- 0[v]
	load.32     %r8388 <- 0[%r8387]
	scast.8     %r8389 <- (32) %r8388
	load.64*    %r8390 <- 0[fs]
	add.64*     %r8391 <- %r8390, $75
	load.64*    %r8392 <- 0[f]
	load.8      %r8393 <- 112[%r8392]
	cast.64     %r8394 <- (8) %r8393
	muls.64     %r8395 <- %r8394, $2
	add.64*     %r8396 <- %r8391, %r8395
	store.8     %r8389 -> 0[%r8396]
	load.64*    %r8397 <- 0[v]
	load.32     %r8398 <- 8[%r8397]
	scast.8     %r8399 <- (32) %r8398
	load.64*    %r8400 <- 0[fs]
	add.64*     %r8401 <- %r8400, $75
	load.64*    %r8402 <- 0[f]
	load.8      %r8403 <- 112[%r8402]
	cast.64     %r8404 <- (8) %r8403
	muls.64     %r8405 <- %r8404, $2
	add.64*     %r8406 <- %r8401, %r8405
	store.8     %r8399 -> 1[%r8406]
	load.64*    %r8407 <- 0[f]
	load.8      %r8408 <- 112[%r8407]
	add.8       %r8409 <- %r8408, $1
	store.8     %r8409 -> 112[%r8407]
	cast.32     %r8410 <- (8) %r8408
	phisrc.32   %phi337(return) <- %r8410
	br          .L1952

.L1952:
	phi.32      %r8324 <- %phi336(return), %phi337(return)
	ret.32      %r8324


searchvar:
.L1964:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[n]
	load.64*    %r8411 <- 0[fs]
	load.8      %r8412 <- 74[%r8411]
	cast.32     %r8413 <- (8) %r8412
	sub.32      %r8414 <- %r8413, $1
	store.32    %r8414 -> 0[i]
	br          .L1968

.L1968:
	load.32     %r8415 <- 0[i]
	setge.32    %r8416 <- %r8415, $0
	br          %r8416, .L1965, .L1967

.L1965:
	load.64*    %r8417 <- 0[n]
	load.64*    %r8418 <- 0[fs]
	load.64*    %r8419 <- 0[%r8418]
	load.64*    %r8420 <- 48[%r8419]
	load.64*    %r8421 <- 0[fs]
	add.64*     %r8422 <- %r8421, $196
	load.32     %r8423 <- 0[i]
	scast.64    %r8424 <- (32) %r8423
	muls.64     %r8425 <- %r8424, $2
	add.64*     %r8426 <- %r8422, %r8425
	load.16     %r8427 <- 0[%r8426]
	cast.64     %r8428 <- (16) %r8427
	muls.64     %r8429 <- %r8428, $16
	add.64*     %r8430 <- %r8420, %r8429
	load.64*    %r8431 <- 0[%r8430]
	seteq.32    %r8432 <- %r8417, %r8431
	br          %r8432, .L1969, .L1970

.L1969:
	load.32     %r8433 <- 0[i]
	phisrc.32   %phi338(return) <- %r8433
	br          .L1971

.L1970:
	br          .L1966

.L1966:
	load.32     %r8435 <- 0[i]
	sub.32      %r8436 <- %r8435, $1
	store.32    %r8436 -> 0[i]
	br          .L1968

.L1967:
	phisrc.32   %phi339(return) <- $0xffffffff
	br          .L1971

.L1971:
	phi.32      %r8434 <- %phi338(return), %phi339(return)
	ret.32      %r8434


markupval:
.L1972:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[level]
	load.64*    %r8437 <- 0[fs]
	load.64*    %r8438 <- 40[%r8437]
	store.64*   %r8438 -> 0[bl]
	br          .L1976

.L1976:
	load.64*    %r8439 <- 0[bl]
	br          %r8439, .L1977, .L1975

.L1977:
	load.64*    %r8440 <- 0[bl]
	load.8      %r8441 <- 12[%r8440]
	cast.32     %r8442 <- (8) %r8441
	load.32     %r8443 <- 0[level]
	setgt.32    %r8444 <- %r8442, %r8443
	br          %r8444, .L1973, .L1975

.L1973:
	load.64*    %r8445 <- 0[bl]
	load.64*    %r8446 <- 0[%r8445]
	store.64*   %r8446 -> 0[bl]
	br          .L1974

.L1974:
	br          .L1976

.L1975:
	load.64*    %r8447 <- 0[bl]
	br          %r8447, .L1978, .L1979

.L1978:
	load.64*    %r8448 <- 0[bl]
	store.8     $1 -> 13[%r8448]
	br          .L1979

.L1979:
	ret


singlevaraux:
.L1980:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[n]
	store.64*   %arg3 -> 0[var]
	store.32    %arg4 -> 0[base]
	load.64*    %r8449 <- 0[fs]
	seteq.32    %r8450 <- %r8449, $0
	br          %r8450, .L1981, .L1982

.L1981:
	load.64*    %r8451 <- 0[var]
	push.64*    %r8451
	push.32     $8
	push.32     $255
	call        init_exp
	phisrc.32   %phi340(return) <- $8
	br          .L1983

.L1982:
	load.64*    %r8453 <- 0[fs]
	load.64*    %r8454 <- 0[n]
	push.64*    %r8453
	push.64*    %r8454
	call.32     %r8455 <- searchvar
	store.32    %r8455 -> 0[v]
	load.32     %r8456 <- 0[v]
	setge.32    %r8457 <- %r8456, $0
	br          %r8457, .L1985, .L1986

.L1985:
	load.64*    %r8458 <- 0[var]
	load.32     %r8459 <- 0[v]
	push.64*    %r8458
	push.32     $6
	push.32     %r8459
	call        init_exp
	load.32     %r8460 <- 0[base]
	br          %r8460, .L1988, .L1987

.L1987:
	load.64*    %r8461 <- 0[fs]
	load.32     %r8462 <- 0[v]
	push.64*    %r8461
	push.32     %r8462
	call        markupval
	br          .L1988

.L1988:
	phisrc.32   %phi341(return) <- $6
	br          .L1983

.L1986:
	load.64*    %r8463 <- 0[fs]
	load.64*    %r8464 <- 16[%r8463]
	load.64*    %r8465 <- 0[n]
	load.64*    %r8466 <- 0[var]
	push.64*    %r8464
	push.64*    %r8465
	push.64*    %r8466
	push.32     $0
	call.32     %r8467 <- singlevaraux
	seteq.32    %r8468 <- %r8467, $8
	br          %r8468, .L1990, .L1991

.L1990:
	phisrc.32   %phi342(return) <- $8
	br          .L1983

.L1991:
	load.64*    %r8469 <- 0[fs]
	load.64*    %r8470 <- 0[n]
	load.64*    %r8471 <- 0[var]
	push.64*    %r8469
	push.64*    %r8470
	push.64*    %r8471
	call.32     %r8472 <- indexupvalue
	load.64*    %r8473 <- 0[var]
	store.32    %r8472 -> 8[%r8473]
	load.64*    %r8474 <- 0[var]
	store.32    $7 -> 0[%r8474]
	phisrc.32   %phi343(return) <- $7
	br          .L1983

.L1983:
	phi.32      %r8452 <- %phi340(return), %phi341(return), %phi342(return), %phi343(return)
	ret.32      %r8452


singlevar:
.L1992:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[var]
	load.64*    %r8475 <- 0[ls]
	push.64*    %r8475
	call.64*    %r8476 <- str_checkname
	store.64*   %r8476 -> 0[varname]
	load.64*    %r8477 <- 0[ls]
	load.64*    %r8478 <- 48[%r8477]
	store.64*   %r8478 -> 0[fs]
	load.64*    %r8479 <- 0[fs]
	load.64*    %r8480 <- 0[varname]
	load.64*    %r8481 <- 0[var]
	push.64*    %r8479
	push.64*    %r8480
	push.64*    %r8481
	push.32     $1
	call.32     %r8482 <- singlevaraux
	seteq.32    %r8483 <- %r8482, $8
	br          %r8483, .L1993, .L1994

.L1993:
	load.64*    %r8484 <- 0[fs]
	load.64*    %r8485 <- 0[varname]
	push.64*    %r8484
	push.64*    %r8485
	call.32     %r8486 <- luaK_stringK
	load.64*    %r8487 <- 0[var]
	store.32    %r8486 -> 8[%r8487]
	br          .L1994

.L1994:
	ret


adjust_assign:
.L1995:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[nvars]
	store.32    %arg3 -> 0[nexps]
	store.64*   %arg4 -> 0[e]
	load.64*    %r8488 <- 0[ls]
	load.64*    %r8489 <- 48[%r8488]
	store.64*   %r8489 -> 0[fs]
	load.32     %r8490 <- 0[nvars]
	load.32     %r8491 <- 0[nexps]
	sub.32      %r8492 <- %r8490, %r8491
	store.32    %r8492 -> 0[extra]
	load.64*    %r8493 <- 0[e]
	load.32     %r8494 <- 0[%r8493]
	scast.32    %r8495 <- (32) %r8494
	seteq.32    %r8496 <- %r8495, $13
	br          %r8496, .L1996, .L1998

.L1998:
	load.64*    %r8497 <- 0[e]
	load.32     %r8498 <- 0[%r8497]
	scast.32    %r8499 <- (32) %r8498
	seteq.32    %r8500 <- %r8499, $14
	br          %r8500, .L1996, .L1997

.L1996:
	load.32     %r8501 <- 0[extra]
	add.32      %r8502 <- %r8501, $1
	store.32    %r8502 -> 0[extra]
	load.32     %r8503 <- 0[extra]
	setlt.32    %r8504 <- %r8503, $0
	br          %r8504, .L1999, .L2000

.L1999:
	store.32    $0 -> 0[extra]
	br          .L2000

.L2000:
	load.64*    %r8505 <- 0[fs]
	load.64*    %r8506 <- 0[e]
	load.32     %r8507 <- 0[extra]
	push.64*    %r8505
	push.64*    %r8506
	push.32     %r8507
	call        luaK_setreturns
	load.32     %r8508 <- 0[extra]
	setgt.32    %r8509 <- %r8508, $1
	br          %r8509, .L2001, .L2002

.L2001:
	load.64*    %r8510 <- 0[fs]
	load.32     %r8511 <- 0[extra]
	sub.32      %r8512 <- %r8511, $1
	push.64*    %r8510
	push.32     %r8512
	call        luaK_reserveregs
	br          .L2002

.L2002:
	br          .L2003

.L1997:
	load.64*    %r8513 <- 0[e]
	load.32     %r8514 <- 0[%r8513]
	scast.32    %r8515 <- (32) %r8514
	setne.32    %r8516 <- %r8515, $0
	br          %r8516, .L2004, .L2005

.L2004:
	load.64*    %r8517 <- 0[fs]
	load.64*    %r8518 <- 0[e]
	push.64*    %r8517
	push.64*    %r8518
	call        luaK_exp2nextreg
	br          .L2005

.L2005:
	load.32     %r8519 <- 0[extra]
	setgt.32    %r8520 <- %r8519, $0
	br          %r8520, .L2006, .L2007

.L2006:
	load.64*    %r8521 <- 0[fs]
	load.32     %r8522 <- 60[%r8521]
	store.32    %r8522 -> 0[reg]
	load.64*    %r8523 <- 0[fs]
	load.32     %r8524 <- 0[extra]
	push.64*    %r8523
	push.32     %r8524
	call        luaK_reserveregs
	load.64*    %r8525 <- 0[fs]
	load.32     %r8526 <- 0[reg]
	load.32     %r8527 <- 0[extra]
	push.64*    %r8525
	push.32     %r8526
	push.32     %r8527
	call        luaK_nil
	br          .L2007

.L2007:
	br          .L2003

.L2003:
	ret


enterlevel:
.L2008:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8528 <- 0[ls]
	load.64*    %r8529 <- 56[%r8528]
	load.16     %r8530 <- 96[%r8529]
	add.16      %r8531 <- %r8530, $1
	store.16    %r8531 -> 96[%r8529]
	cast.32     %r8532 <- (16) %r8531
	setgt.32    %r8533 <- %r8532, $200
	br          %r8533, .L2009, .L2010

.L2009:
	load.64*    %r8534 <- 0[ls]
	symaddr.64* %r8535 <- <anon symbol:0x62d0013987c8>
	push.64*    %r8534
	push.64*    %r8535
	push.32     $0
	call        luaX_lexerror
	br          .L2010

.L2010:
	ret


enterblock:
.L2011:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[bl]
	store.8     %arg3 -> 0[isbreakable]
	load.64*    %r8536 <- 0[bl]
	store.32    $0xffffffff -> 8[%r8536]
	load.8      %r8537 <- 0[isbreakable]
	load.64*    %r8538 <- 0[bl]
	store.8     %r8537 -> 14[%r8538]
	load.64*    %r8539 <- 0[fs]
	load.8      %r8540 <- 74[%r8539]
	load.64*    %r8541 <- 0[bl]
	store.8     %r8540 -> 12[%r8541]
	load.64*    %r8542 <- 0[bl]
	store.8     $0 -> 13[%r8542]
	load.64*    %r8543 <- 0[fs]
	load.64*    %r8544 <- 40[%r8543]
	load.64*    %r8545 <- 0[bl]
	store.64*   %r8544 -> 0[%r8545]
	load.64*    %r8546 <- 0[bl]
	load.64*    %r8547 <- 0[fs]
	store.64*   %r8546 -> 40[%r8547]
	br          .L2012

.L2012:
	ret


leaveblock:
.L2013:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r8548 <- 0[fs]
	load.64*    %r8549 <- 40[%r8548]
	store.64*   %r8549 -> 0[bl]
	load.64*    %r8550 <- 0[bl]
	load.64*    %r8551 <- 0[%r8550]
	load.64*    %r8552 <- 0[fs]
	store.64*   %r8551 -> 40[%r8552]
	load.64*    %r8553 <- 0[fs]
	load.64*    %r8554 <- 24[%r8553]
	load.64*    %r8555 <- 0[bl]
	load.8      %r8556 <- 12[%r8555]
	cast.32     %r8557 <- (8) %r8556
	push.64*    %r8554
	push.32     %r8557
	call        removevars
	load.64*    %r8558 <- 0[bl]
	load.8      %r8559 <- 13[%r8558]
	br          %r8559, .L2014, .L2015

.L2014:
	load.64*    %r8560 <- 0[fs]
	load.64*    %r8561 <- 0[bl]
	load.8      %r8562 <- 12[%r8561]
	cast.32     %r8563 <- (8) %r8562
	push.64*    %r8560
	push.32     $35
	push.32     %r8563
	push.32     $0
	push.32     $0
	call.32     %r8564 <- luaK_codeABC
	br          .L2015

.L2015:
	load.64*    %r8565 <- 0[fs]
	load.8      %r8566 <- 74[%r8565]
	cast.32     %r8567 <- (8) %r8566
	load.64*    %r8568 <- 0[fs]
	store.32    %r8567 -> 60[%r8568]
	load.64*    %r8569 <- 0[fs]
	load.64*    %r8570 <- 0[bl]
	load.32     %r8571 <- 8[%r8570]
	push.64*    %r8569
	push.32     %r8571
	call        luaK_patchtohere
	br          .L2016

.L2016:
	ret


pushclosure:
.L2017:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[func]
	store.64*   %arg3 -> 0[v]
	load.64*    %r8572 <- 0[ls]
	load.64*    %r8573 <- 48[%r8572]
	store.64*   %r8573 -> 0[fs]
	load.64*    %r8574 <- 0[fs]
	load.64*    %r8575 <- 0[%r8574]
	store.64*   %r8575 -> 0[f]
	load.64*    %r8576 <- 0[f]
	load.32     %r8577 <- 88[%r8576]
	store.32    %r8577 -> 0[oldsize]
	load.64*    %r8578 <- 0[fs]
	load.32     %r8579 <- 68[%r8578]
	add.32      %r8580 <- %r8579, $1
	load.64*    %r8581 <- 0[f]
	load.32     %r8582 <- 88[%r8581]
	setgt.32    %r8583 <- %r8580, %r8582
	br          %r8583, .L2018, .L2019

.L2018:
	load.64*    %r8584 <- 0[ls]
	load.64*    %r8585 <- 56[%r8584]
	load.64*    %r8586 <- 0[f]
	load.64*    %r8587 <- 32[%r8586]
	cast.64*    %r8588 <- (64) %r8587
	load.64*    %r8589 <- 0[f]
	add.64*     %r8590 <- %r8589, $88
	symaddr.64* %r8591 <- <anon symbol:0x62d0013a7720>
	push.64*    %r8585
	push.64*    %r8588
	push.64*    %r8590
	push.64     $8
	push.32     $0x3ffff
	push.64*    %r8591
	call.64*    %r8592 <- luaM_growaux_
	ptrcast.64* %r8593 <- (64) %r8592
	load.64*    %r8594 <- 0[f]
	store.64*   %r8593 -> 32[%r8594]
	br          .L2019

.L2019:
	br          .L2023

.L2023:
	load.32     %r8595 <- 0[oldsize]
	load.64*    %r8596 <- 0[f]
	load.32     %r8597 <- 88[%r8596]
	setlt.32    %r8598 <- %r8595, %r8597
	br          %r8598, .L2020, .L2022

.L2020:
	load.64*    %r8599 <- 0[f]
	load.64*    %r8600 <- 32[%r8599]
	load.32     %r8601 <- 0[oldsize]
	add.32      %r8602 <- %r8601, $1
	store.32    %r8602 -> 0[oldsize]
	scast.64    %r8603 <- (32) %r8601
	muls.64     %r8604 <- %r8603, $8
	add.64*     %r8605 <- %r8600, %r8604
	store.64*   $0 -> 0[%r8605]
	br          .L2021

.L2021:
	br          .L2023

.L2022:
	load.64*    %r8606 <- 0[func]
	load.64*    %r8607 <- 0[%r8606]
	load.64*    %r8608 <- 0[f]
	load.64*    %r8609 <- 32[%r8608]
	load.64*    %r8610 <- 0[fs]
	load.32     %r8611 <- 68[%r8610]
	add.32      %r8612 <- %r8611, $1
	store.32    %r8612 -> 68[%r8610]
	scast.64    %r8613 <- (32) %r8611
	muls.64     %r8614 <- %r8613, $8
	add.64*     %r8615 <- %r8609, %r8614
	store.64*   %r8607 -> 0[%r8615]
	load.64*    %r8616 <- 0[func]
	load.64*    %r8617 <- 0[%r8616]
	ptrcast.64* %r8618 <- (64) %r8617
	load.8      %r8619 <- 9[%r8618]
	cast.32     %r8620 <- (8) %r8619
	and.32      %r8621 <- %r8620, $3
	br          %r8621, .L2026, .L2025

.L2026:
	load.64*    %r8622 <- 0[f]
	ptrcast.64* %r8623 <- (64) %r8622
	load.8      %r8624 <- 9[%r8623]
	cast.32     %r8625 <- (8) %r8624
	and.32      %r8626 <- %r8625, $4
	br          %r8626, .L2024, .L2025

.L2024:
	load.64*    %r8627 <- 0[ls]
	load.64*    %r8628 <- 56[%r8627]
	load.64*    %r8629 <- 0[f]
	ptrcast.64* %r8630 <- (64) %r8629
	load.64*    %r8631 <- 0[func]
	load.64*    %r8632 <- 0[%r8631]
	ptrcast.64* %r8633 <- (64) %r8632
	push.64*    %r8628
	push.64*    %r8630
	push.64*    %r8633
	call        luaC_barrierf
	br          .L2025

.L2025:
	load.64*    %r8634 <- 0[v]
	load.64*    %r8635 <- 0[fs]
	load.64*    %r8636 <- 0[fs]
	load.32     %r8637 <- 68[%r8636]
	sub.32      %r8638 <- %r8637, $1
	scast.32    %r8639 <- (32) %r8638
	push.64*    %r8635
	push.32     $36
	push.32     $0
	push.32     %r8639
	call.32     %r8640 <- luaK_codeABx
	push.64*    %r8634
	push.32     $11
	push.32     %r8640
	call        init_exp
	store.32    $0 -> 0[i]
	br          .L2030

.L2030:
	load.32     %r8641 <- 0[i]
	load.64*    %r8642 <- 0[func]
	load.64*    %r8643 <- 0[%r8642]
	load.8      %r8644 <- 112[%r8643]
	cast.32     %r8645 <- (8) %r8644
	setlt.32    %r8646 <- %r8641, %r8645
	br          %r8646, .L2027, .L2029

.L2027:
	load.64*    %r8647 <- 0[func]
	add.64*     %r8648 <- %r8647, $75
	load.32     %r8649 <- 0[i]
	scast.64    %r8650 <- (32) %r8649
	muls.64     %r8651 <- %r8650, $2
	add.64*     %r8652 <- %r8648, %r8651
	load.8      %r8653 <- 0[%r8652]
	cast.32     %r8654 <- (8) %r8653
	seteq.32    %r8655 <- %r8654, $6
	select.32   %r8656 <- %r8655, $0, $4
	scast.32    %r8657 <- (32) %r8656
	store.32    %r8657 -> 0[o]
	load.64*    %r8658 <- 0[fs]
	load.32     %r8659 <- 0[o]
	load.64*    %r8660 <- 0[func]
	add.64*     %r8661 <- %r8660, $75
	load.32     %r8662 <- 0[i]
	scast.64    %r8663 <- (32) %r8662
	muls.64     %r8664 <- %r8663, $2
	add.64*     %r8665 <- %r8661, %r8664
	load.8      %r8666 <- 1[%r8665]
	cast.32     %r8667 <- (8) %r8666
	push.64*    %r8658
	push.32     %r8659
	push.32     $0
	push.32     %r8667
	push.32     $0
	call.32     %r8668 <- luaK_codeABC
	br          .L2028

.L2028:
	load.32     %r8669 <- 0[i]
	add.32      %r8670 <- %r8669, $1
	store.32    %r8670 -> 0[i]
	br          .L2030

.L2029:
	ret


open_func:
.L2031:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[fs]
	load.64*    %r8671 <- 0[ls]
	load.64*    %r8672 <- 56[%r8671]
	store.64*   %r8672 -> 0[L]
	load.64*    %r8673 <- 0[L]
	push.64*    %r8673
	call.64*    %r8674 <- luaF_newproto
	store.64*   %r8674 -> 0[f]
	load.64*    %r8675 <- 0[f]
	load.64*    %r8676 <- 0[fs]
	store.64*   %r8675 -> 0[%r8676]
	load.64*    %r8677 <- 0[ls]
	load.64*    %r8678 <- 48[%r8677]
	load.64*    %r8679 <- 0[fs]
	store.64*   %r8678 -> 16[%r8679]
	load.64*    %r8680 <- 0[ls]
	load.64*    %r8681 <- 0[fs]
	store.64*   %r8680 -> 24[%r8681]
	load.64*    %r8682 <- 0[L]
	load.64*    %r8683 <- 0[fs]
	store.64*   %r8682 -> 32[%r8683]
	load.64*    %r8684 <- 0[fs]
	load.64*    %r8685 <- 0[ls]
	store.64*   %r8684 -> 48[%r8685]
	load.64*    %r8686 <- 0[fs]
	store.32    $0 -> 48[%r8686]
	load.64*    %r8687 <- 0[fs]
	store.32    $0xffffffff -> 52[%r8687]
	load.64*    %r8688 <- 0[fs]
	store.32    $0xffffffff -> 56[%r8688]
	load.64*    %r8689 <- 0[fs]
	store.32    $0 -> 60[%r8689]
	load.64*    %r8690 <- 0[fs]
	store.32    $0 -> 64[%r8690]
	load.64*    %r8691 <- 0[fs]
	store.32    $0 -> 68[%r8691]
	load.64*    %r8692 <- 0[fs]
	store.16    $0 -> 72[%r8692]
	load.64*    %r8693 <- 0[fs]
	store.8     $0 -> 74[%r8693]
	load.64*    %r8694 <- 0[fs]
	store.64*   $0 -> 40[%r8694]
	load.64*    %r8695 <- 0[ls]
	load.64*    %r8696 <- 80[%r8695]
	load.64*    %r8697 <- 0[f]
	store.64*   %r8696 -> 64[%r8697]
	load.64*    %r8698 <- 0[f]
	store.8     $2 -> 115[%r8698]
	load.64*    %r8699 <- 0[L]
	push.64*    %r8699
	push.32     $0
	push.32     $0
	call.64*    %r8700 <- luaH_new
	load.64*    %r8701 <- 0[fs]
	store.64*   %r8700 -> 8[%r8701]
	load.64*    %r8702 <- 0[L]
	load.64*    %r8703 <- 16[%r8702]
	store.64*   %r8703 -> 0[i_o]
	load.64*    %r8704 <- 0[fs]
	load.64*    %r8705 <- 8[%r8704]
	ptrcast.64* %r8706 <- (64) %r8705
	load.64*    %r8707 <- 0[i_o]
	store.64*   %r8706 -> 0[%r8707]
	load.64*    %r8708 <- 0[i_o]
	store.32    $5 -> 8[%r8708]
	load.64*    %r8709 <- 0[L]
	load.64*    %r8710 <- 56[%r8709]
	ptrcast.64* %r8711 <- (64) %r8710
	load.64*    %r8712 <- 0[L]
	load.64*    %r8713 <- 16[%r8712]
	ptrcast.64* %r8714 <- (64) %r8713
	sub.64      %r8715 <- %r8711, %r8714
	setle.32    %r8716 <- %r8715, $16
	br          %r8716, .L2032, .L2033

.L2032:
	load.64*    %r8717 <- 0[L]
	push.64*    %r8717
	push.32     $1
	call        luaD_growstack
	br          .L2034

.L2033:
	br          .L2034

.L2034:
	load.64*    %r8718 <- 0[L]
	load.64*    %r8719 <- 16[%r8718]
	add.64*     %r8720 <- %r8719, $16
	store.64*   %r8720 -> 16[%r8718]
	load.64*    %r8721 <- 0[L]
	load.64*    %r8722 <- 16[%r8721]
	store.64*   %r8722 -> 0[i_o]
	load.64*    %r8723 <- 0[f]
	ptrcast.64* %r8724 <- (64) %r8723
	load.64*    %r8725 <- 0[i_o]
	store.64*   %r8724 -> 0[%r8725]
	load.64*    %r8726 <- 0[i_o]
	store.32    $9 -> 8[%r8726]
	load.64*    %r8727 <- 0[L]
	load.64*    %r8728 <- 56[%r8727]
	ptrcast.64* %r8729 <- (64) %r8728
	load.64*    %r8730 <- 0[L]
	load.64*    %r8731 <- 16[%r8730]
	ptrcast.64* %r8732 <- (64) %r8731
	sub.64      %r8733 <- %r8729, %r8732
	setle.32    %r8734 <- %r8733, $16
	br          %r8734, .L2035, .L2036

.L2035:
	load.64*    %r8735 <- 0[L]
	push.64*    %r8735
	push.32     $1
	call        luaD_growstack
	br          .L2037

.L2036:
	br          .L2037

.L2037:
	load.64*    %r8736 <- 0[L]
	load.64*    %r8737 <- 16[%r8736]
	add.64*     %r8738 <- %r8737, $16
	store.64*   %r8738 -> 16[%r8736]
	br          .L2038

.L2038:
	ret


close_func:
.L2039:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8739 <- 0[ls]
	load.64*    %r8740 <- 56[%r8739]
	store.64*   %r8740 -> 0[L]
	load.64*    %r8741 <- 0[ls]
	load.64*    %r8742 <- 48[%r8741]
	store.64*   %r8742 -> 0[fs]
	load.64*    %r8743 <- 0[fs]
	load.64*    %r8744 <- 0[%r8743]
	store.64*   %r8744 -> 0[f]
	load.64*    %r8745 <- 0[ls]
	push.64*    %r8745
	push.32     $0
	call        removevars
	load.64*    %r8746 <- 0[fs]
	push.64*    %r8746
	push.32     $0
	push.32     $0
	call        luaK_ret
	load.64*    %r8747 <- 0[fs]
	load.32     %r8748 <- 48[%r8747]
	add.32      %r8749 <- %r8748, $1
	scast.64    %r8750 <- (32) %r8749
	setbe.32    %r8751 <- %r8750, $0x3fffffffffffffff
	br          %r8751, .L2040, .L2041

.L2040:
	load.64*    %r8752 <- 0[L]
	load.64*    %r8753 <- 0[f]
	load.64*    %r8754 <- 24[%r8753]
	cast.64*    %r8755 <- (64) %r8754
	load.64*    %r8756 <- 0[f]
	load.32     %r8757 <- 80[%r8756]
	scast.64    %r8758 <- (32) %r8757
	mulu.64     %r8759 <- %r8758, $4
	load.64*    %r8760 <- 0[fs]
	load.32     %r8761 <- 48[%r8760]
	scast.64    %r8762 <- (32) %r8761
	mulu.64     %r8763 <- %r8762, $4
	push.64*    %r8752
	push.64*    %r8755
	push.64     %r8759
	push.64     %r8763
	call.64*    %r8764 <- luaM_realloc_
	phisrc.64*  %phi344 <- %r8764
	br          .L2042

.L2041:
	load.64*    %r8765 <- 0[L]
	push.64*    %r8765
	call.64*    %r8766 <- luaM_toobig
	cast.64*    %r8767 <- (64) %r8766
	phisrc.64*  %phi345 <- %r8767
	br          .L2042

.L2042:
	phi.64*     %r8768 <- %phi344, %phi345
	ptrcast.64* %r8769 <- (64) %r8768
	load.64*    %r8770 <- 0[f]
	store.64*   %r8769 -> 24[%r8770]
	load.64*    %r8771 <- 0[fs]
	load.32     %r8772 <- 48[%r8771]
	load.64*    %r8773 <- 0[f]
	store.32    %r8772 -> 80[%r8773]
	load.64*    %r8774 <- 0[fs]
	load.32     %r8775 <- 48[%r8774]
	add.32      %r8776 <- %r8775, $1
	scast.64    %r8777 <- (32) %r8776
	setbe.32    %r8778 <- %r8777, $0x3fffffffffffffff
	br          %r8778, .L2043, .L2044

.L2043:
	load.64*    %r8779 <- 0[L]
	load.64*    %r8780 <- 0[f]
	load.64*    %r8781 <- 40[%r8780]
	cast.64*    %r8782 <- (64) %r8781
	load.64*    %r8783 <- 0[f]
	load.32     %r8784 <- 84[%r8783]
	scast.64    %r8785 <- (32) %r8784
	mulu.64     %r8786 <- %r8785, $4
	load.64*    %r8787 <- 0[fs]
	load.32     %r8788 <- 48[%r8787]
	scast.64    %r8789 <- (32) %r8788
	mulu.64     %r8790 <- %r8789, $4
	push.64*    %r8779
	push.64*    %r8782
	push.64     %r8786
	push.64     %r8790
	call.64*    %r8791 <- luaM_realloc_
	phisrc.64*  %phi346 <- %r8791
	br          .L2045

.L2044:
	load.64*    %r8792 <- 0[L]
	push.64*    %r8792
	call.64*    %r8793 <- luaM_toobig
	cast.64*    %r8794 <- (64) %r8793
	phisrc.64*  %phi347 <- %r8794
	br          .L2045

.L2045:
	phi.64*     %r8795 <- %phi346, %phi347
	ptrcast.64* %r8796 <- (64) %r8795
	load.64*    %r8797 <- 0[f]
	store.64*   %r8796 -> 40[%r8797]
	load.64*    %r8798 <- 0[fs]
	load.32     %r8799 <- 48[%r8798]
	load.64*    %r8800 <- 0[f]
	store.32    %r8799 -> 84[%r8800]
	load.64*    %r8801 <- 0[fs]
	load.32     %r8802 <- 64[%r8801]
	add.32      %r8803 <- %r8802, $1
	scast.64    %r8804 <- (32) %r8803
	setbe.32    %r8805 <- %r8804, $0xfffffffffffffff
	br          %r8805, .L2046, .L2047

.L2046:
	load.64*    %r8806 <- 0[L]
	load.64*    %r8807 <- 0[f]
	load.64*    %r8808 <- 16[%r8807]
	cast.64*    %r8809 <- (64) %r8808
	load.64*    %r8810 <- 0[f]
	load.32     %r8811 <- 76[%r8810]
	scast.64    %r8812 <- (32) %r8811
	mulu.64     %r8813 <- %r8812, $16
	load.64*    %r8814 <- 0[fs]
	load.32     %r8815 <- 64[%r8814]
	scast.64    %r8816 <- (32) %r8815
	mulu.64     %r8817 <- %r8816, $16
	push.64*    %r8806
	push.64*    %r8809
	push.64     %r8813
	push.64     %r8817
	call.64*    %r8818 <- luaM_realloc_
	phisrc.64*  %phi348 <- %r8818
	br          .L2048

.L2047:
	load.64*    %r8819 <- 0[L]
	push.64*    %r8819
	call.64*    %r8820 <- luaM_toobig
	cast.64*    %r8821 <- (64) %r8820
	phisrc.64*  %phi349 <- %r8821
	br          .L2048

.L2048:
	phi.64*     %r8822 <- %phi348, %phi349
	ptrcast.64* %r8823 <- (64) %r8822
	load.64*    %r8824 <- 0[f]
	store.64*   %r8823 -> 16[%r8824]
	load.64*    %r8825 <- 0[fs]
	load.32     %r8826 <- 64[%r8825]
	load.64*    %r8827 <- 0[f]
	store.32    %r8826 -> 76[%r8827]
	load.64*    %r8828 <- 0[fs]
	load.32     %r8829 <- 68[%r8828]
	add.32      %r8830 <- %r8829, $1
	scast.64    %r8831 <- (32) %r8830
	setbe.32    %r8832 <- %r8831, $0x1fffffffffffffff
	br          %r8832, .L2049, .L2050

.L2049:
	load.64*    %r8833 <- 0[L]
	load.64*    %r8834 <- 0[f]
	load.64*    %r8835 <- 32[%r8834]
	cast.64*    %r8836 <- (64) %r8835
	load.64*    %r8837 <- 0[f]
	load.32     %r8838 <- 88[%r8837]
	scast.64    %r8839 <- (32) %r8838
	mulu.64     %r8840 <- %r8839, $8
	load.64*    %r8841 <- 0[fs]
	load.32     %r8842 <- 68[%r8841]
	scast.64    %r8843 <- (32) %r8842
	mulu.64     %r8844 <- %r8843, $8
	push.64*    %r8833
	push.64*    %r8836
	push.64     %r8840
	push.64     %r8844
	call.64*    %r8845 <- luaM_realloc_
	phisrc.64*  %phi350 <- %r8845
	br          .L2051

.L2050:
	load.64*    %r8846 <- 0[L]
	push.64*    %r8846
	call.64*    %r8847 <- luaM_toobig
	cast.64*    %r8848 <- (64) %r8847
	phisrc.64*  %phi351 <- %r8848
	br          .L2051

.L2051:
	phi.64*     %r8849 <- %phi350, %phi351
	ptrcast.64* %r8850 <- (64) %r8849
	load.64*    %r8851 <- 0[f]
	store.64*   %r8850 -> 32[%r8851]
	load.64*    %r8852 <- 0[fs]
	load.32     %r8853 <- 68[%r8852]
	load.64*    %r8854 <- 0[f]
	store.32    %r8853 -> 88[%r8854]
	load.64*    %r8855 <- 0[fs]
	load.16     %r8856 <- 72[%r8855]
	scast.32    %r8857 <- (16) %r8856
	add.32      %r8858 <- %r8857, $1
	scast.64    %r8859 <- (32) %r8858
	setbe.32    %r8860 <- %r8859, $0xfffffffffffffff
	br          %r8860, .L2052, .L2053

.L2052:
	load.64*    %r8861 <- 0[L]
	load.64*    %r8862 <- 0[f]
	load.64*    %r8863 <- 48[%r8862]
	cast.64*    %r8864 <- (64) %r8863
	load.64*    %r8865 <- 0[f]
	load.32     %r8866 <- 92[%r8865]
	scast.64    %r8867 <- (32) %r8866
	mulu.64     %r8868 <- %r8867, $16
	load.64*    %r8869 <- 0[fs]
	load.16     %r8870 <- 72[%r8869]
	scast.64    %r8871 <- (16) %r8870
	mulu.64     %r8872 <- %r8871, $16
	push.64*    %r8861
	push.64*    %r8864
	push.64     %r8868
	push.64     %r8872
	call.64*    %r8873 <- luaM_realloc_
	phisrc.64*  %phi352 <- %r8873
	br          .L2054

.L2053:
	load.64*    %r8874 <- 0[L]
	push.64*    %r8874
	call.64*    %r8875 <- luaM_toobig
	cast.64*    %r8876 <- (64) %r8875
	phisrc.64*  %phi353 <- %r8876
	br          .L2054

.L2054:
	phi.64*     %r8877 <- %phi352, %phi353
	ptrcast.64* %r8878 <- (64) %r8877
	load.64*    %r8879 <- 0[f]
	store.64*   %r8878 -> 48[%r8879]
	load.64*    %r8880 <- 0[fs]
	load.16     %r8881 <- 72[%r8880]
	scast.32    %r8882 <- (16) %r8881
	load.64*    %r8883 <- 0[f]
	store.32    %r8882 -> 92[%r8883]
	load.64*    %r8884 <- 0[f]
	load.8      %r8885 <- 112[%r8884]
	cast.32     %r8886 <- (8) %r8885
	add.32      %r8887 <- %r8886, $1
	scast.64    %r8888 <- (32) %r8887
	setbe.32    %r8889 <- %r8888, $0x1fffffffffffffff
	br          %r8889, .L2055, .L2056

.L2055:
	load.64*    %r8890 <- 0[L]
	load.64*    %r8891 <- 0[f]
	load.64*    %r8892 <- 56[%r8891]
	cast.64*    %r8893 <- (64) %r8892
	load.64*    %r8894 <- 0[f]
	load.32     %r8895 <- 72[%r8894]
	scast.64    %r8896 <- (32) %r8895
	mulu.64     %r8897 <- %r8896, $8
	load.64*    %r8898 <- 0[f]
	load.8      %r8899 <- 112[%r8898]
	cast.64     %r8900 <- (8) %r8899
	mulu.64     %r8901 <- %r8900, $8
	push.64*    %r8890
	push.64*    %r8893
	push.64     %r8897
	push.64     %r8901
	call.64*    %r8902 <- luaM_realloc_
	phisrc.64*  %phi354 <- %r8902
	br          .L2057

.L2056:
	load.64*    %r8903 <- 0[L]
	push.64*    %r8903
	call.64*    %r8904 <- luaM_toobig
	cast.64*    %r8905 <- (64) %r8904
	phisrc.64*  %phi355 <- %r8905
	br          .L2057

.L2057:
	phi.64*     %r8906 <- %phi354, %phi355
	ptrcast.64* %r8907 <- (64) %r8906
	load.64*    %r8908 <- 0[f]
	store.64*   %r8907 -> 56[%r8908]
	load.64*    %r8909 <- 0[f]
	load.8      %r8910 <- 112[%r8909]
	cast.32     %r8911 <- (8) %r8910
	load.64*    %r8912 <- 0[f]
	store.32    %r8911 -> 72[%r8912]
	load.64*    %r8913 <- 0[fs]
	load.64*    %r8914 <- 16[%r8913]
	load.64*    %r8915 <- 0[ls]
	store.64*   %r8914 -> 48[%r8915]
	load.64*    %r8916 <- 0[fs]
	br          %r8916, .L2058, .L2059

.L2058:
	load.64*    %r8917 <- 0[ls]
	push.64*    %r8917
	call        anchor_token
	br          .L2059

.L2059:
	load.64*    %r8918 <- 0[L]
	load.64*    %r8919 <- 16[%r8918]
	cast.64     %r8920 <- (64) %r8919
	sub.64      %r8921 <- %r8920, $32
	ptrcast.64* %r8922 <- (64) %r8921
	store.64*   %r8922 -> 16[%r8918]
	br          .L2060

.L2060:
	ret


luaY_parser:
.L2061:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[buff]
	store.64*   %arg4 -> 0[name]
	load.64*    %r8923 <- 0[buff]
	store.64*   %r8923 -> 72[lexstate]
	load.64*    %r8924 <- 0[L]
	symaddr.64* %r8925 <- lexstate
	load.64*    %r8926 <- 0[z]
	load.64*    %r8927 <- 0[L]
	load.64*    %r8928 <- 0[name]
	load.64*    %r8929 <- 0[name]
	push.64*    %r8929
	call.64     %r8930 <- strlen
	push.64*    %r8927
	push.64*    %r8928
	push.64     %r8930
	call.64*    %r8931 <- luaS_newlstr
	push.64*    %r8924
	push.64*    %r8925
	push.64*    %r8926
	push.64*    %r8931
	call        luaX_setinput
	symaddr.64* %r8932 <- lexstate
	symaddr.64* %r8933 <- funcstate
	push.64*    %r8932
	push.64*    %r8933
	call        open_func
	load.64*    %r8934 <- 0[funcstate]
	store.8     $2 -> 114[%r8934]
	symaddr.64* %r8935 <- lexstate
	push.64*    %r8935
	call        luaX_next
	symaddr.64* %r8936 <- lexstate
	push.64*    %r8936
	call        chunk
	symaddr.64* %r8937 <- lexstate
	push.64*    %r8937
	push.32     $287
	call        check
	symaddr.64* %r8938 <- lexstate
	push.64*    %r8938
	call        close_func
	load.64*    %r8939 <- 0[funcstate]
	phisrc.64*  %phi356(return) <- %r8939
	br          .L2062

.L2062:
	phi.64*     %r8940 <- %phi356(return)
	ret.64*     %r8939


field:
.L2063:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r8941 <- 0[ls]
	load.64*    %r8942 <- 48[%r8941]
	store.64*   %r8942 -> 0[fs]
	load.64*    %r8943 <- 0[fs]
	load.64*    %r8944 <- 0[v]
	push.64*    %r8943
	push.64*    %r8944
	call.32     %r8945 <- luaK_exp2anyreg
	load.64*    %r8946 <- 0[ls]
	push.64*    %r8946
	call        luaX_next
	load.64*    %r8947 <- 0[ls]
	symaddr.64* %r8948 <- key
	push.64*    %r8947
	push.64*    %r8948
	call        checkname
	load.64*    %r8949 <- 0[fs]
	load.64*    %r8950 <- 0[v]
	symaddr.64* %r8951 <- key
	push.64*    %r8949
	push.64*    %r8950
	push.64*    %r8951
	call        luaK_indexed
	br          .L2064

.L2064:
	ret


yindex:
.L2065:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r8952 <- 0[ls]
	push.64*    %r8952
	call        luaX_next
	load.64*    %r8953 <- 0[ls]
	load.64*    %r8954 <- 0[v]
	push.64*    %r8953
	push.64*    %r8954
	call        expr
	load.64*    %r8955 <- 0[ls]
	load.64*    %r8956 <- 48[%r8955]
	load.64*    %r8957 <- 0[v]
	push.64*    %r8956
	push.64*    %r8957
	call        luaK_exp2val
	load.64*    %r8958 <- 0[ls]
	push.64*    %r8958
	push.32     $93
	call        checknext
	br          .L2066

.L2066:
	ret


recfield:
.L2067:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8959 <- 0[ls]
	load.64*    %r8960 <- 48[%r8959]
	store.64*   %r8960 -> 0[fs]
	load.64*    %r8961 <- 0[ls]
	load.64*    %r8962 <- 48[%r8961]
	load.32     %r8963 <- 60[%r8962]
	store.32    %r8963 -> 0[reg]
	load.64*    %r8964 <- 0[ls]
	load.32     %r8965 <- 16[%r8964]
	seteq.32    %r8966 <- %r8965, $285
	br          %r8966, .L2068, .L2069

.L2068:
	load.64*    %r8967 <- 0[cc]
	load.32     %r8968 <- 32[%r8967]
	setgt.32    %r8969 <- %r8968, $0x7ffffffd
	br          %r8969, .L2070, .L2071

.L2070:
	load.64*    %r8970 <- 0[fs]
	symaddr.64* %r8971 <- <anon symbol:0x62d0013b4f50>
	push.64*    %r8970
	push.32     $0x7ffffffd
	push.64*    %r8971
	call        errorlimit
	br          .L2071

.L2071:
	load.64*    %r8972 <- 0[ls]
	symaddr.64* %r8973 <- key
	push.64*    %r8972
	push.64*    %r8973
	call        checkname
	br          .L2072

.L2069:
	load.64*    %r8974 <- 0[ls]
	symaddr.64* %r8975 <- key
	push.64*    %r8974
	push.64*    %r8975
	call        yindex
	br          .L2072

.L2072:
	load.64*    %r8976 <- 0[cc]
	load.32     %r8977 <- 32[%r8976]
	add.32      %r8978 <- %r8977, $1
	store.32    %r8978 -> 32[%r8976]
	load.64*    %r8979 <- 0[ls]
	push.64*    %r8979
	push.32     $61
	call        checknext
	load.64*    %r8980 <- 0[fs]
	symaddr.64* %r8981 <- key
	push.64*    %r8980
	push.64*    %r8981
	call.32     %r8982 <- luaK_exp2RK
	store.32    %r8982 -> 0[rkkey]
	load.64*    %r8983 <- 0[ls]
	symaddr.64* %r8984 <- val
	push.64*    %r8983
	push.64*    %r8984
	call        expr
	load.64*    %r8985 <- 0[fs]
	load.64*    %r8986 <- 0[cc]
	load.64*    %r8987 <- 24[%r8986]
	load.32     %r8988 <- 8[%r8987]
	load.32     %r8989 <- 0[rkkey]
	load.64*    %r8990 <- 0[fs]
	symaddr.64* %r8991 <- val
	push.64*    %r8990
	push.64*    %r8991
	call.32     %r8992 <- luaK_exp2RK
	push.64*    %r8985
	push.32     $9
	push.32     %r8988
	push.32     %r8989
	push.32     %r8992
	call.32     %r8993 <- luaK_codeABC
	load.32     %r8994 <- 0[reg]
	load.64*    %r8995 <- 0[fs]
	store.32    %r8994 -> 60[%r8995]
	br          .L2073

.L2073:
	ret


closelistfield:
.L2074:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8996 <- 0[cc]
	load.32     %r8997 <- 0[%r8996]
	scast.32    %r8998 <- (32) %r8997
	seteq.32    %r8999 <- %r8998, $0
	br          %r8999, .L2075, .L2076

.L2075:
	br          .L2077

.L2076:
	load.64*    %r9000 <- 0[fs]
	load.64*    %r9001 <- 0[cc]
	add.64*     %r9002 <- %r9001, $0
	push.64*    %r9000
	push.64*    %r9002
	call        luaK_exp2nextreg
	load.64*    %r9003 <- 0[cc]
	store.32    $0 -> 0[%r9003]
	load.64*    %r9004 <- 0[cc]
	load.32     %r9005 <- 40[%r9004]
	seteq.32    %r9006 <- %r9005, $50
	br          %r9006, .L2078, .L2079

.L2078:
	load.64*    %r9007 <- 0[fs]
	load.64*    %r9008 <- 0[cc]
	load.64*    %r9009 <- 24[%r9008]
	load.32     %r9010 <- 8[%r9009]
	load.64*    %r9011 <- 0[cc]
	load.32     %r9012 <- 36[%r9011]
	load.64*    %r9013 <- 0[cc]
	load.32     %r9014 <- 40[%r9013]
	push.64*    %r9007
	push.32     %r9010
	push.32     %r9012
	push.32     %r9014
	call        luaK_setlist
	load.64*    %r9015 <- 0[cc]
	store.32    $0 -> 40[%r9015]
	br          .L2079

.L2079:
	br          .L2077

.L2077:
	ret


lastlistfield:
.L2080:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r9016 <- 0[cc]
	load.32     %r9017 <- 40[%r9016]
	seteq.32    %r9018 <- %r9017, $0
	br          %r9018, .L2081, .L2082

.L2081:
	br          .L2083

.L2082:
	load.64*    %r9019 <- 0[cc]
	load.32     %r9020 <- 0[%r9019]
	scast.32    %r9021 <- (32) %r9020
	seteq.32    %r9022 <- %r9021, $13
	br          %r9022, .L2084, .L2086

.L2086:
	load.64*    %r9023 <- 0[cc]
	load.32     %r9024 <- 0[%r9023]
	scast.32    %r9025 <- (32) %r9024
	seteq.32    %r9026 <- %r9025, $14
	br          %r9026, .L2084, .L2085

.L2084:
	load.64*    %r9027 <- 0[fs]
	load.64*    %r9028 <- 0[cc]
	add.64*     %r9029 <- %r9028, $0
	push.64*    %r9027
	push.64*    %r9029
	push.32     $0xffffffff
	call        luaK_setreturns
	load.64*    %r9030 <- 0[fs]
	load.64*    %r9031 <- 0[cc]
	load.64*    %r9032 <- 24[%r9031]
	load.32     %r9033 <- 8[%r9032]
	load.64*    %r9034 <- 0[cc]
	load.32     %r9035 <- 36[%r9034]
	push.64*    %r9030
	push.32     %r9033
	push.32     %r9035
	push.32     $0xffffffff
	call        luaK_setlist
	load.64*    %r9036 <- 0[cc]
	load.32     %r9037 <- 36[%r9036]
	sub.32      %r9038 <- %r9037, $1
	store.32    %r9038 -> 36[%r9036]
	br          .L2087

.L2085:
	load.64*    %r9039 <- 0[cc]
	load.32     %r9040 <- 0[%r9039]
	scast.32    %r9041 <- (32) %r9040
	setne.32    %r9042 <- %r9041, $0
	br          %r9042, .L2088, .L2089

.L2088:
	load.64*    %r9043 <- 0[fs]
	load.64*    %r9044 <- 0[cc]
	add.64*     %r9045 <- %r9044, $0
	push.64*    %r9043
	push.64*    %r9045
	call        luaK_exp2nextreg
	br          .L2089

.L2089:
	load.64*    %r9046 <- 0[fs]
	load.64*    %r9047 <- 0[cc]
	load.64*    %r9048 <- 24[%r9047]
	load.32     %r9049 <- 8[%r9048]
	load.64*    %r9050 <- 0[cc]
	load.32     %r9051 <- 36[%r9050]
	load.64*    %r9052 <- 0[cc]
	load.32     %r9053 <- 40[%r9052]
	push.64*    %r9046
	push.32     %r9049
	push.32     %r9051
	push.32     %r9053
	call        luaK_setlist
	br          .L2087

.L2087:
	br          .L2083

.L2083:
	ret


listfield:
.L2090:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r9054 <- 0[ls]
	load.64*    %r9055 <- 0[cc]
	add.64*     %r9056 <- %r9055, $0
	push.64*    %r9054
	push.64*    %r9056
	call        expr
	load.64*    %r9057 <- 0[cc]
	load.32     %r9058 <- 36[%r9057]
	setgt.32    %r9059 <- %r9058, $0x7ffffffd
	br          %r9059, .L2091, .L2092

.L2091:
	load.64*    %r9060 <- 0[ls]
	load.64*    %r9061 <- 48[%r9060]
	symaddr.64* %r9062 <- <anon symbol:0x62d0013d8b58>
	push.64*    %r9061
	push.32     $0x7ffffffd
	push.64*    %r9062
	call        errorlimit
	br          .L2092

.L2092:
	load.64*    %r9063 <- 0[cc]
	load.32     %r9064 <- 36[%r9063]
	add.32      %r9065 <- %r9064, $1
	store.32    %r9065 -> 36[%r9063]
	load.64*    %r9066 <- 0[cc]
	load.32     %r9067 <- 40[%r9066]
	add.32      %r9068 <- %r9067, $1
	store.32    %r9068 -> 40[%r9066]
	br          .L2093

.L2093:
	ret


constructor:
.L2094:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[t]
	load.64*    %r9069 <- 0[ls]
	load.64*    %r9070 <- 48[%r9069]
	store.64*   %r9070 -> 0[fs]
	load.64*    %r9071 <- 0[ls]
	load.32     %r9072 <- 4[%r9071]
	store.32    %r9072 -> 0[line]
	load.64*    %r9073 <- 0[fs]
	push.64*    %r9073
	push.32     $10
	push.32     $0
	push.32     $0
	push.32     $0
	call.32     %r9074 <- luaK_codeABC
	store.32    %r9074 -> 0[pc]
	store.32    $0 -> 40[cc]
	store.32    $0 -> 32[cc]
	store.32    $0 -> 36[cc]
	load.64*    %r9075 <- 0[t]
	store.64*   %r9075 -> 24[cc]
	load.64*    %r9076 <- 0[t]
	load.32     %r9077 <- 0[pc]
	push.64*    %r9076
	push.32     $11
	push.32     %r9077
	call        init_exp
	symaddr.64* %r9078 <- cc
	add.64*     %r9079 <- %r9078, $0
	push.64*    %r9079
	push.32     $0
	push.32     $0
	call        init_exp
	load.64*    %r9080 <- 0[ls]
	load.64*    %r9081 <- 48[%r9080]
	load.64*    %r9082 <- 0[t]
	push.64*    %r9081
	push.64*    %r9082
	call        luaK_exp2nextreg
	load.64*    %r9083 <- 0[ls]
	push.64*    %r9083
	push.32     $123
	call        checknext
	br          .L2095

.L2095:
	load.64*    %r9084 <- 0[ls]
	load.32     %r9085 <- 16[%r9084]
	seteq.32    %r9086 <- %r9085, $125
	br          %r9086, .L2098, .L2099

.L2098:
	br          .L2097

.L2099:
	load.64*    %r9087 <- 0[fs]
	symaddr.64* %r9088 <- cc
	push.64*    %r9087
	push.64*    %r9088
	call        closelistfield
	load.64*    %r9089 <- 0[ls]
	load.32     %r9090 <- 16[%r9089]
	switch.32   %r9090, 91 -> .L2102, 285 -> .L2101, default -> .L2103

.L2101:
	load.64*    %r9091 <- 0[ls]
	push.64*    %r9091
	call        luaX_lookahead
	load.64*    %r9092 <- 0[ls]
	load.32     %r9093 <- 32[%r9092]
	setne.32    %r9094 <- %r9093, $61
	br          %r9094, .L2104, .L2105

.L2104:
	load.64*    %r9095 <- 0[ls]
	symaddr.64* %r9096 <- cc
	push.64*    %r9095
	push.64*    %r9096
	call        listfield
	br          .L2106

.L2105:
	load.64*    %r9097 <- 0[ls]
	symaddr.64* %r9098 <- cc
	push.64*    %r9097
	push.64*    %r9098
	call        recfield
	br          .L2106

.L2106:
	br          .L2100

.L2102:
	load.64*    %r9099 <- 0[ls]
	symaddr.64* %r9100 <- cc
	push.64*    %r9099
	push.64*    %r9100
	call        recfield
	br          .L2100

.L2103:
	load.64*    %r9101 <- 0[ls]
	symaddr.64* %r9102 <- cc
	push.64*    %r9101
	push.64*    %r9102
	call        listfield
	br          .L2100

.L2100:
	br          .L2096

.L2096:
	load.64*    %r9103 <- 0[ls]
	push.64*    %r9103
	push.32     $44
	call.32     %r9104 <- testnext
	br          %r9104, .L2095, .L2107

.L2107:
	load.64*    %r9105 <- 0[ls]
	push.64*    %r9105
	push.32     $59
	call.32     %r9106 <- testnext
	br          %r9106, .L2095, .L2097

.L2097:
	load.64*    %r9107 <- 0[ls]
	load.32     %r9108 <- 0[line]
	push.64*    %r9107
	push.32     $125
	push.32     $123
	push.32     %r9108
	call        check_match
	load.64*    %r9109 <- 0[fs]
	symaddr.64* %r9110 <- cc
	push.64*    %r9109
	push.64*    %r9110
	call        lastlistfield
	load.64*    %r9111 <- 0[fs]
	load.64*    %r9112 <- 0[%r9111]
	load.64*    %r9113 <- 24[%r9112]
	load.32     %r9114 <- 0[pc]
	scast.64    %r9115 <- (32) %r9114
	muls.64     %r9116 <- %r9115, $4
	add.64*     %r9117 <- %r9113, %r9116
	load.32     %r9118 <- 0[%r9117]
	and.32      %r9119 <- %r9118, $0x7fffff
	load.32     %r9120 <- 36[cc]
	scast.32    %r9121 <- (32) %r9120
	push.32     %r9121
	call.32     %r9122 <- luaO_int2fb
	scast.32    %r9123 <- (32) %r9122
	shl.32      %r9124 <- %r9123, $23
	and.32      %r9125 <- %r9124, $0xff800000
	or.32       %r9126 <- %r9119, %r9125
	load.64*    %r9127 <- 0[fs]
	load.64*    %r9128 <- 0[%r9127]
	load.64*    %r9129 <- 24[%r9128]
	load.32     %r9130 <- 0[pc]
	scast.64    %r9131 <- (32) %r9130
	muls.64     %r9132 <- %r9131, $4
	add.64*     %r9133 <- %r9129, %r9132
	store.32    %r9126 -> 0[%r9133]
	load.64*    %r9134 <- 0[fs]
	load.64*    %r9135 <- 0[%r9134]
	load.64*    %r9136 <- 24[%r9135]
	load.32     %r9137 <- 0[pc]
	scast.64    %r9138 <- (32) %r9137
	muls.64     %r9139 <- %r9138, $4
	add.64*     %r9140 <- %r9136, %r9139
	load.32     %r9141 <- 0[%r9140]
	and.32      %r9142 <- %r9141, $0xff803fff
	load.32     %r9143 <- 32[cc]
	scast.32    %r9144 <- (32) %r9143
	push.32     %r9144
	call.32     %r9145 <- luaO_int2fb
	scast.32    %r9146 <- (32) %r9145
	shl.32      %r9147 <- %r9146, $14
	and.32      %r9148 <- %r9147, $0x7fc000
	or.32       %r9149 <- %r9142, %r9148
	load.64*    %r9150 <- 0[fs]
	load.64*    %r9151 <- 0[%r9150]
	load.64*    %r9152 <- 24[%r9151]
	load.32     %r9153 <- 0[pc]
	scast.64    %r9154 <- (32) %r9153
	muls.64     %r9155 <- %r9154, $4
	add.64*     %r9156 <- %r9152, %r9155
	store.32    %r9149 -> 0[%r9156]
	br          .L2108

.L2108:
	ret


parlist:
.L2109:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9157 <- 0[ls]
	load.64*    %r9158 <- 48[%r9157]
	store.64*   %r9158 -> 0[fs]
	load.64*    %r9159 <- 0[fs]
	load.64*    %r9160 <- 0[%r9159]
	store.64*   %r9160 -> 0[f]
	store.32    $0 -> 0[nparams]
	load.64*    %r9161 <- 0[f]
	store.8     $0 -> 114[%r9161]
	load.64*    %r9162 <- 0[ls]
	load.32     %r9163 <- 16[%r9162]
	setne.32    %r9164 <- %r9163, $41
	br          %r9164, .L2110, .L2111

.L2110:
	br          .L2112

.L2112:
	load.64*    %r9165 <- 0[ls]
	load.32     %r9166 <- 16[%r9165]
	switch.32   %r9166, 279 -> .L2117, 285 -> .L2116, default -> .L2118

.L2116:
	load.64*    %r9167 <- 0[ls]
	load.64*    %r9168 <- 0[ls]
	push.64*    %r9168
	call.64*    %r9169 <- str_checkname
	load.32     %r9170 <- 0[nparams]
	add.32      %r9171 <- %r9170, $1
	store.32    %r9171 -> 0[nparams]
	push.64*    %r9167
	push.64*    %r9169
	push.32     %r9170
	call        new_localvar
	br          .L2115

.L2117:
	load.64*    %r9172 <- 0[ls]
	push.64*    %r9172
	call        luaX_next
	load.64*    %r9173 <- 0[f]
	load.8      %r9174 <- 114[%r9173]
	cast.32     %r9175 <- (8) %r9174
	or.32       %r9176 <- %r9175, $2
	scast.8     %r9177 <- (32) %r9176
	store.8     %r9177 -> 114[%r9173]
	br          .L2115

.L2118:
	load.64*    %r9178 <- 0[ls]
	symaddr.64* %r9179 <- <anon symbol:0x62d0013dc810>
	push.64*    %r9178
	push.64*    %r9179
	call        luaX_syntaxerror
	br          .L2115

.L2115:
	br          .L2113

.L2113:
	load.64*    %r9180 <- 0[f]
	load.8      %r9181 <- 114[%r9180]
	br          %r9181, .L2114, .L2119

.L2119:
	load.64*    %r9182 <- 0[ls]
	push.64*    %r9182
	push.32     $44
	call.32     %r9183 <- testnext
	br          %r9183, .L2112, .L2114

.L2114:
	br          .L2111

.L2111:
	load.64*    %r9184 <- 0[ls]
	load.32     %r9185 <- 0[nparams]
	push.64*    %r9184
	push.32     %r9185
	call        adjustlocalvars
	load.64*    %r9186 <- 0[fs]
	load.8      %r9187 <- 74[%r9186]
	cast.32     %r9188 <- (8) %r9187
	load.64*    %r9189 <- 0[f]
	load.8      %r9190 <- 114[%r9189]
	cast.32     %r9191 <- (8) %r9190
	and.32      %r9192 <- %r9191, $1
	sub.32      %r9193 <- %r9188, %r9192
	scast.8     %r9194 <- (32) %r9193
	load.64*    %r9195 <- 0[f]
	store.8     %r9194 -> 113[%r9195]
	load.64*    %r9196 <- 0[fs]
	load.64*    %r9197 <- 0[fs]
	load.8      %r9198 <- 74[%r9197]
	cast.32     %r9199 <- (8) %r9198
	push.64*    %r9196
	push.32     %r9199
	call        luaK_reserveregs
	br          .L2120

.L2120:
	ret


body:
.L2121:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[needself]
	store.32    %arg4 -> 0[line]
	load.64*    %r9200 <- 0[ls]
	symaddr.64* %r9201 <- new_fs
	push.64*    %r9200
	push.64*    %r9201
	call        open_func
	load.32     %r9202 <- 0[line]
	load.64*    %r9203 <- 0[new_fs]
	store.32    %r9202 -> 96[%r9203]
	load.64*    %r9204 <- 0[ls]
	push.64*    %r9204
	push.32     $40
	call        checknext
	load.32     %r9205 <- 0[needself]
	br          %r9205, .L2122, .L2123

.L2122:
	load.64*    %r9206 <- 0[ls]
	load.64*    %r9207 <- 0[ls]
	symaddr.64* %r9208 <- <anon symbol:0x62d0013dd3d8>
	push.64*    %r9207
	push.64*    %r9208
	push.64     $4
	call.64*    %r9209 <- luaX_newstring
	push.64*    %r9206
	push.64*    %r9209
	push.32     $0
	call        new_localvar
	load.64*    %r9210 <- 0[ls]
	push.64*    %r9210
	push.32     $1
	call        adjustlocalvars
	br          .L2123

.L2123:
	load.64*    %r9211 <- 0[ls]
	push.64*    %r9211
	call        parlist
	load.64*    %r9212 <- 0[ls]
	push.64*    %r9212
	push.32     $41
	call        checknext
	load.64*    %r9213 <- 0[ls]
	push.64*    %r9213
	call        chunk
	load.64*    %r9214 <- 0[ls]
	load.32     %r9215 <- 4[%r9214]
	load.64*    %r9216 <- 0[new_fs]
	store.32    %r9215 -> 100[%r9216]
	load.64*    %r9217 <- 0[ls]
	load.32     %r9218 <- 0[line]
	push.64*    %r9217
	push.32     $262
	push.32     $265
	push.32     %r9218
	call        check_match
	load.64*    %r9219 <- 0[ls]
	push.64*    %r9219
	call        close_func
	load.64*    %r9220 <- 0[ls]
	symaddr.64* %r9221 <- new_fs
	load.64*    %r9222 <- 0[e]
	push.64*    %r9220
	push.64*    %r9221
	push.64*    %r9222
	call        pushclosure
	br          .L2124

.L2124:
	ret


explist1:
.L2125:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    $1 -> 0[n]
	load.64*    %r9223 <- 0[ls]
	load.64*    %r9224 <- 0[v]
	push.64*    %r9223
	push.64*    %r9224
	call        expr
	br          .L2129

.L2129:
	load.64*    %r9225 <- 0[ls]
	push.64*    %r9225
	push.32     $44
	call.32     %r9226 <- testnext
	br          %r9226, .L2126, .L2128

.L2126:
	load.64*    %r9227 <- 0[ls]
	load.64*    %r9228 <- 48[%r9227]
	load.64*    %r9229 <- 0[v]
	push.64*    %r9228
	push.64*    %r9229
	call        luaK_exp2nextreg
	load.64*    %r9230 <- 0[ls]
	load.64*    %r9231 <- 0[v]
	push.64*    %r9230
	push.64*    %r9231
	call        expr
	load.32     %r9232 <- 0[n]
	add.32      %r9233 <- %r9232, $1
	store.32    %r9233 -> 0[n]
	br          .L2127

.L2127:
	br          .L2129

.L2128:
	load.32     %r9234 <- 0[n]
	phisrc.32   %phi357(return) <- %r9234
	br          .L2130

.L2130:
	phi.32      %r9235 <- %phi357(return)
	ret.32      %r9234


funcargs:
.L2131:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[f]
	load.64*    %r9236 <- 0[ls]
	load.64*    %r9237 <- 48[%r9236]
	store.64*   %r9237 -> 0[fs]
	load.64*    %r9238 <- 0[ls]
	load.32     %r9239 <- 4[%r9238]
	store.32    %r9239 -> 0[line]
	load.64*    %r9240 <- 0[ls]
	load.32     %r9241 <- 16[%r9240]
	switch.32   %r9241, 40 -> .L2133, 123 -> .L2134, 286 -> .L2135, default -> .L2136

.L2133:
	load.32     %r9242 <- 0[line]
	load.64*    %r9243 <- 0[ls]
	load.32     %r9244 <- 8[%r9243]
	setne.32    %r9245 <- %r9242, %r9244
	br          %r9245, .L2137, .L2138

.L2137:
	load.64*    %r9246 <- 0[ls]
	symaddr.64* %r9247 <- <anon symbol:0x62d0013de8b0>
	push.64*    %r9246
	push.64*    %r9247
	call        luaX_syntaxerror
	br          .L2138

.L2138:
	load.64*    %r9248 <- 0[ls]
	push.64*    %r9248
	call        luaX_next
	load.64*    %r9249 <- 0[ls]
	load.32     %r9250 <- 16[%r9249]
	seteq.32    %r9251 <- %r9250, $41
	br          %r9251, .L2139, .L2140

.L2139:
	store.32    $0 -> 0[args]
	br          .L2141

.L2140:
	load.64*    %r9252 <- 0[ls]
	symaddr.64* %r9253 <- args
	push.64*    %r9252
	push.64*    %r9253
	call.32     %r9254 <- explist1
	load.64*    %r9255 <- 0[fs]
	symaddr.64* %r9256 <- args
	push.64*    %r9255
	push.64*    %r9256
	push.32     $0xffffffff
	call        luaK_setreturns
	br          .L2141

.L2141:
	load.64*    %r9257 <- 0[ls]
	load.32     %r9258 <- 0[line]
	push.64*    %r9257
	push.32     $41
	push.32     $40
	push.32     %r9258
	call        check_match
	br          .L2132

.L2134:
	load.64*    %r9259 <- 0[ls]
	symaddr.64* %r9260 <- args
	push.64*    %r9259
	push.64*    %r9260
	call        constructor
	br          .L2132

.L2135:
	load.64*    %r9261 <- 0[ls]
	symaddr.64* %r9262 <- args
	load.64*    %r9263 <- 0[ls]
	load.64*    %r9264 <- 24[%r9263]
	push.64*    %r9261
	push.64*    %r9262
	push.64*    %r9264
	call        codestring
	load.64*    %r9265 <- 0[ls]
	push.64*    %r9265
	call        luaX_next
	br          .L2132

.L2136:
	load.64*    %r9266 <- 0[ls]
	symaddr.64* %r9267 <- <anon symbol:0x62d0013df730>
	push.64*    %r9266
	push.64*    %r9267
	call        luaX_syntaxerror
	br          .L2142

.L2132:
	load.64*    %r9268 <- 0[f]
	load.32     %r9269 <- 8[%r9268]
	store.32    %r9269 -> 0[base]
	load.32     %r9270 <- 0[args]
	scast.32    %r9271 <- (32) %r9270
	seteq.32    %r9272 <- %r9271, $13
	load.32     %r9273 <- 0[args]
	scast.32    %r9274 <- (32) %r9273
	seteq.32    %r9275 <- %r9274, $14
	or-bool.32  %r9276 <- %r9272, %r9275
	br          %r9276, .L2143, .L2144

.L2143:
	store.32    $0xffffffff -> 0[nparams]
	br          .L2145

.L2144:
	load.32     %r9277 <- 0[args]
	scast.32    %r9278 <- (32) %r9277
	setne.32    %r9279 <- %r9278, $0
	br          %r9279, .L2146, .L2147

.L2146:
	load.64*    %r9280 <- 0[fs]
	symaddr.64* %r9281 <- args
	push.64*    %r9280
	push.64*    %r9281
	call        luaK_exp2nextreg
	br          .L2147

.L2147:
	load.64*    %r9282 <- 0[fs]
	load.32     %r9283 <- 60[%r9282]
	load.32     %r9284 <- 0[base]
	add.32      %r9285 <- %r9284, $1
	sub.32      %r9286 <- %r9283, %r9285
	store.32    %r9286 -> 0[nparams]
	br          .L2145

.L2145:
	load.64*    %r9287 <- 0[f]
	load.64*    %r9288 <- 0[fs]
	load.32     %r9289 <- 0[base]
	load.32     %r9290 <- 0[nparams]
	add.32      %r9291 <- %r9290, $1
	push.64*    %r9288
	push.32     $28
	push.32     %r9289
	push.32     %r9291
	push.32     $2
	call.32     %r9292 <- luaK_codeABC
	push.64*    %r9287
	push.32     $13
	push.32     %r9292
	call        init_exp
	load.64*    %r9293 <- 0[fs]
	load.32     %r9294 <- 0[line]
	push.64*    %r9293
	push.32     %r9294
	call        luaK_fixline
	load.32     %r9295 <- 0[base]
	add.32      %r9296 <- %r9295, $1
	load.64*    %r9297 <- 0[fs]
	store.32    %r9296 -> 60[%r9297]
	br          .L2142

.L2142:
	ret


prefixexp:
.L2148:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9298 <- 0[ls]
	load.32     %r9299 <- 16[%r9298]
	switch.32   %r9299, 40 -> .L2150, 285 -> .L2151, default -> .L2152

.L2150:
	load.64*    %r9300 <- 0[ls]
	load.32     %r9301 <- 4[%r9300]
	store.32    %r9301 -> 0[line]
	load.64*    %r9302 <- 0[ls]
	push.64*    %r9302
	call        luaX_next
	load.64*    %r9303 <- 0[ls]
	load.64*    %r9304 <- 0[v]
	push.64*    %r9303
	push.64*    %r9304
	call        expr
	load.64*    %r9305 <- 0[ls]
	load.32     %r9306 <- 0[line]
	push.64*    %r9305
	push.32     $41
	push.32     $40
	push.32     %r9306
	call        check_match
	load.64*    %r9307 <- 0[ls]
	load.64*    %r9308 <- 48[%r9307]
	load.64*    %r9309 <- 0[v]
	push.64*    %r9308
	push.64*    %r9309
	call        luaK_dischargevars
	br          .L2153

.L2151:
	load.64*    %r9310 <- 0[ls]
	load.64*    %r9311 <- 0[v]
	push.64*    %r9310
	push.64*    %r9311
	call        singlevar
	br          .L2153

.L2152:
	load.64*    %r9312 <- 0[ls]
	symaddr.64* %r9313 <- <anon symbol:0x62d0013cec40>
	push.64*    %r9312
	push.64*    %r9313
	call        luaX_syntaxerror
	br          .L2153

.L2153:
	ret


primaryexp:
.L2154:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9314 <- 0[ls]
	load.64*    %r9315 <- 48[%r9314]
	store.64*   %r9315 -> 0[fs]
	load.64*    %r9316 <- 0[ls]
	load.64*    %r9317 <- 0[v]
	push.64*    %r9316
	push.64*    %r9317
	call        prefixexp
	br          .L2158

.L2158:
	br          .L2155

.L2155:
	load.64*    %r9318 <- 0[ls]
	load.32     %r9319 <- 16[%r9318]
	switch.32   %r9319, 40 -> .L2163, 46 -> .L2160, 58 -> .L2162, 91 -> .L2161, 123 -> .L2165, 286 -> .L2164, default -> .L2166

.L2160:
	load.64*    %r9320 <- 0[ls]
	load.64*    %r9321 <- 0[v]
	push.64*    %r9320
	push.64*    %r9321
	call        field
	br          .L2159

.L2161:
	load.64*    %r9322 <- 0[fs]
	load.64*    %r9323 <- 0[v]
	push.64*    %r9322
	push.64*    %r9323
	call.32     %r9324 <- luaK_exp2anyreg
	load.64*    %r9325 <- 0[ls]
	symaddr.64* %r9326 <- key
	push.64*    %r9325
	push.64*    %r9326
	call        yindex
	load.64*    %r9327 <- 0[fs]
	load.64*    %r9328 <- 0[v]
	symaddr.64* %r9329 <- key
	push.64*    %r9327
	push.64*    %r9328
	push.64*    %r9329
	call        luaK_indexed
	br          .L2159

.L2162:
	load.64*    %r9330 <- 0[ls]
	push.64*    %r9330
	call        luaX_next
	load.64*    %r9331 <- 0[ls]
	symaddr.64* %r9332 <- key
	push.64*    %r9331
	push.64*    %r9332
	call        checkname
	load.64*    %r9333 <- 0[fs]
	load.64*    %r9334 <- 0[v]
	symaddr.64* %r9335 <- key
	push.64*    %r9333
	push.64*    %r9334
	push.64*    %r9335
	call        luaK_self
	load.64*    %r9336 <- 0[ls]
	load.64*    %r9337 <- 0[v]
	push.64*    %r9336
	push.64*    %r9337
	call        funcargs
	br          .L2159

.L2163:
	br          .L2164

.L2164:
	br          .L2165

.L2165:
	load.64*    %r9338 <- 0[fs]
	load.64*    %r9339 <- 0[v]
	push.64*    %r9338
	push.64*    %r9339
	call        luaK_exp2nextreg
	load.64*    %r9340 <- 0[ls]
	load.64*    %r9341 <- 0[v]
	push.64*    %r9340
	push.64*    %r9341
	call        funcargs
	br          .L2159

.L2166:
	br          .L2167

.L2159:
	br          .L2156

.L2156:
	br          .L2158

.L2167:
	ret


simpleexp:
.L2168:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9342 <- 0[ls]
	load.32     %r9343 <- 16[%r9342]
	switch.32   %r9343, 123 -> .L2176, 263 -> .L2174, 265 -> .L2177, 269 -> .L2172, 275 -> .L2173, 279 -> .L2175, 284 -> .L2170, 286 -> .L2171, default -> .L2178

.L2170:
	load.64*    %r9344 <- 0[v]
	push.64*    %r9344
	push.32     $5
	push.32     $0
	call        init_exp
	load.64*    %r9345 <- 0[ls]
	load.f64    %r9346 <- 24[%r9345]
	load.64*    %r9347 <- 0[v]
	store.f64   %r9346 -> 8[%r9347]
	br          .L2169

.L2171:
	load.64*    %r9348 <- 0[ls]
	load.64*    %r9349 <- 0[v]
	load.64*    %r9350 <- 0[ls]
	load.64*    %r9351 <- 24[%r9350]
	push.64*    %r9348
	push.64*    %r9349
	push.64*    %r9351
	call        codestring
	br          .L2169

.L2172:
	load.64*    %r9352 <- 0[v]
	push.64*    %r9352
	push.32     $1
	push.32     $0
	call        init_exp
	br          .L2169

.L2173:
	load.64*    %r9353 <- 0[v]
	push.64*    %r9353
	push.32     $2
	push.32     $0
	call        init_exp
	br          .L2169

.L2174:
	load.64*    %r9354 <- 0[v]
	push.64*    %r9354
	push.32     $3
	push.32     $0
	call        init_exp
	br          .L2169

.L2175:
	load.64*    %r9355 <- 0[ls]
	load.64*    %r9356 <- 48[%r9355]
	store.64*   %r9356 -> 0[fs]
	load.64*    %r9357 <- 0[fs]
	load.64*    %r9358 <- 0[%r9357]
	load.8      %r9359 <- 114[%r9358]
	br          %r9359, .L2180, .L2179

.L2179:
	load.64*    %r9360 <- 0[ls]
	symaddr.64* %r9361 <- <anon symbol:0x62d0013d05a0>
	push.64*    %r9360
	push.64*    %r9361
	call        luaX_syntaxerror
	br          .L2180

.L2180:
	load.64*    %r9362 <- 0[fs]
	load.64*    %r9363 <- 0[%r9362]
	load.8      %r9364 <- 114[%r9363]
	cast.32     %r9365 <- (8) %r9364
	and.32      %r9366 <- %r9365, $0xfffffffb
	scast.8     %r9367 <- (32) %r9366
	store.8     %r9367 -> 114[%r9363]
	load.64*    %r9368 <- 0[v]
	load.64*    %r9369 <- 0[fs]
	push.64*    %r9369
	push.32     $37
	push.32     $0
	push.32     $1
	push.32     $0
	call.32     %r9370 <- luaK_codeABC
	push.64*    %r9368
	push.32     $14
	push.32     %r9370
	call        init_exp
	br          .L2169

.L2176:
	load.64*    %r9371 <- 0[ls]
	load.64*    %r9372 <- 0[v]
	push.64*    %r9371
	push.64*    %r9372
	call        constructor
	br          .L2181

.L2177:
	load.64*    %r9373 <- 0[ls]
	push.64*    %r9373
	call        luaX_next
	load.64*    %r9374 <- 0[ls]
	load.64*    %r9375 <- 0[v]
	load.64*    %r9376 <- 0[ls]
	load.32     %r9377 <- 4[%r9376]
	push.64*    %r9374
	push.64*    %r9375
	push.32     $0
	push.32     %r9377
	call        body
	br          .L2181

.L2178:
	load.64*    %r9378 <- 0[ls]
	load.64*    %r9379 <- 0[v]
	push.64*    %r9378
	push.64*    %r9379
	call        primaryexp
	br          .L2181

.L2169:
	load.64*    %r9380 <- 0[ls]
	push.64*    %r9380
	call        luaX_next
	br          .L2181

.L2181:
	ret


getunopr:
.L2182:
	<entry-point>
	store.32    %arg1 -> 0[op]
	load.32     %r9381 <- 0[op]
	switch.32   %r9381, 35 -> .L2186, 45 -> .L2185, 270 -> .L2184, default -> .L2187

.L2184:
	phisrc.32   %phi358(return) <- $1
	br          .L2188

.L2185:
	phisrc.32   %phi359(return) <- $0
	br          .L2188

.L2186:
	phisrc.32   %phi360(return) <- $2
	br          .L2188

.L2187:
	phisrc.32   %phi361(return) <- $3
	br          .L2188

.L2188:
	phi.32      %r9382 <- %phi358(return), %phi359(return), %phi360(return), %phi361(return)
	ret.32      %r9382


getbinopr:
.L2189:
	<entry-point>
	store.32    %arg1 -> 0[op]
	load.32     %r9383 <- 0[op]
	switch.32   %r9383, 37 -> .L2195, 42 -> .L2193, 43 -> .L2191, 45 -> .L2192, 47 -> .L2194, 60 -> .L2200, 62 -> .L2202, 94 -> .L2196, 257 -> .L2204, 271 -> .L2205, 278 -> .L2197, 280 -> .L2199, 281 -> .L2203, 282 -> .L2201, 283 -> .L2198, default -> .L2206

.L2191:
	phisrc.32   %phi362(return) <- $0
	br          .L2207

.L2192:
	phisrc.32   %phi363(return) <- $1
	br          .L2207

.L2193:
	phisrc.32   %phi364(return) <- $2
	br          .L2207

.L2194:
	phisrc.32   %phi365(return) <- $3
	br          .L2207

.L2195:
	phisrc.32   %phi366(return) <- $4
	br          .L2207

.L2196:
	phisrc.32   %phi367(return) <- $5
	br          .L2207

.L2197:
	phisrc.32   %phi368(return) <- $6
	br          .L2207

.L2198:
	phisrc.32   %phi369(return) <- $7
	br          .L2207

.L2199:
	phisrc.32   %phi370(return) <- $8
	br          .L2207

.L2200:
	phisrc.32   %phi371(return) <- $9
	br          .L2207

.L2201:
	phisrc.32   %phi372(return) <- $10
	br          .L2207

.L2202:
	phisrc.32   %phi373(return) <- $11
	br          .L2207

.L2203:
	phisrc.32   %phi374(return) <- $12
	br          .L2207

.L2204:
	phisrc.32   %phi375(return) <- $13
	br          .L2207

.L2205:
	phisrc.32   %phi376(return) <- $14
	br          .L2207

.L2206:
	phisrc.32   %phi377(return) <- $15
	br          .L2207

.L2207:
	phi.32      %r9384 <- %phi362(return), %phi363(return), %phi364(return), %phi365(return), %phi366(return), %phi367(return), %phi368(return), %phi369(return), %phi370(return), %phi371(return), %phi372(return), %phi373(return), %phi374(return), %phi375(return), %phi376(return), %phi377(return)
	ret.32      %r9384


subexpr:
.L2208:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    %arg3 -> 0[limit]
	load.64*    %r9385 <- 0[ls]
	push.64*    %r9385
	call        enterlevel
	load.64*    %r9386 <- 0[ls]
	load.32     %r9387 <- 16[%r9386]
	push.32     %r9387
	call.32     %r9388 <- getunopr
	store.32    %r9388 -> 0[uop]
	load.32     %r9389 <- 0[uop]
	scast.32    %r9390 <- (32) %r9389
	setne.32    %r9391 <- %r9390, $3
	br          %r9391, .L2209, .L2210

.L2209:
	load.64*    %r9392 <- 0[ls]
	push.64*    %r9392
	call        luaX_next
	load.64*    %r9393 <- 0[ls]
	load.64*    %r9394 <- 0[v]
	push.64*    %r9393
	push.64*    %r9394
	push.32     $8
	call.32     %r9395 <- subexpr
	load.64*    %r9396 <- 0[ls]
	load.64*    %r9397 <- 48[%r9396]
	load.32     %r9398 <- 0[uop]
	load.64*    %r9399 <- 0[v]
	push.64*    %r9397
	push.32     %r9398
	push.64*    %r9399
	call        luaK_prefix
	br          .L2211

.L2210:
	load.64*    %r9400 <- 0[ls]
	load.64*    %r9401 <- 0[v]
	push.64*    %r9400
	push.64*    %r9401
	call        simpleexp
	br          .L2211

.L2211:
	load.64*    %r9402 <- 0[ls]
	load.32     %r9403 <- 16[%r9402]
	push.32     %r9403
	call.32     %r9404 <- getbinopr
	store.32    %r9404 -> 0[op]
	br          .L2215

.L2215:
	load.32     %r9405 <- 0[op]
	scast.32    %r9406 <- (32) %r9405
	setne.32    %r9407 <- %r9406, $15
	br          %r9407, .L2216, .L2214

.L2216:
	symaddr.64* %r9408 <- priority
	load.32     %r9409 <- 0[op]
	scast.64    %r9410 <- (32) %r9409
	muls.64     %r9411 <- %r9410, $2
	add.64*     %r9412 <- %r9408, %r9411
	load.8      %r9413 <- 0[%r9412]
	cast.32     %r9414 <- (8) %r9413
	load.32     %r9415 <- 0[limit]
	seta.32     %r9416 <- %r9414, %r9415
	br          %r9416, .L2212, .L2214

.L2212:
	load.64*    %r9417 <- 0[ls]
	push.64*    %r9417
	call        luaX_next
	load.64*    %r9418 <- 0[ls]
	load.64*    %r9419 <- 48[%r9418]
	load.32     %r9420 <- 0[op]
	load.64*    %r9421 <- 0[v]
	push.64*    %r9419
	push.32     %r9420
	push.64*    %r9421
	call        luaK_infix
	load.64*    %r9422 <- 0[ls]
	symaddr.64* %r9423 <- v2
	symaddr.64* %r9424 <- priority
	load.32     %r9425 <- 0[op]
	scast.64    %r9426 <- (32) %r9425
	muls.64     %r9427 <- %r9426, $2
	add.64*     %r9428 <- %r9424, %r9427
	load.8      %r9429 <- 1[%r9428]
	cast.32     %r9430 <- (8) %r9429
	push.64*    %r9422
	push.64*    %r9423
	push.32     %r9430
	call.32     %r9431 <- subexpr
	store.32    %r9431 -> 0[nextop]
	load.64*    %r9432 <- 0[ls]
	load.64*    %r9433 <- 48[%r9432]
	load.32     %r9434 <- 0[op]
	load.64*    %r9435 <- 0[v]
	symaddr.64* %r9436 <- v2
	push.64*    %r9433
	push.32     %r9434
	push.64*    %r9435
	push.64*    %r9436
	call        luaK_posfix
	load.32     %r9437 <- 0[nextop]
	store.32    %r9437 -> 0[op]
	br          .L2213

.L2213:
	br          .L2215

.L2214:
	load.64*    %r9438 <- 0[ls]
	load.64*    %r9439 <- 56[%r9438]
	load.16     %r9440 <- 96[%r9439]
	sub.16      %r9441 <- %r9440, $1
	store.16    %r9441 -> 96[%r9439]
	load.32     %r9442 <- 0[op]
	phisrc.32   %phi378(return) <- %r9442
	br          .L2217

.L2217:
	phi.32      %r9443 <- %phi378(return)
	ret.32      %r9442


expr:
.L2218:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9444 <- 0[ls]
	load.64*    %r9445 <- 0[v]
	push.64*    %r9444
	push.64*    %r9445
	push.32     $0
	call.32     %r9446 <- subexpr
	br          .L2219

.L2219:
	ret


block_follow:
.L2220:
	<entry-point>
	store.32    %arg1 -> 0[token]
	load.32     %r9447 <- 0[token]
	switch.32   %r9447, 260 -> .L2222, 261 -> .L2223, 262 -> .L2224, 276 -> .L2225, 287 -> .L2226, default -> .L2227

.L2222:
	br          .L2223

.L2223:
	br          .L2224

.L2224:
	br          .L2225

.L2225:
	br          .L2226

.L2226:
	phisrc.32   %phi379(return) <- $1
	br          .L2228

.L2227:
	phisrc.32   %phi380(return) <- $0
	br          .L2228

.L2228:
	phi.32      %r9448 <- %phi379(return), %phi380(return)
	ret.32      %r9448


block:
.L2229:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9449 <- 0[ls]
	load.64*    %r9450 <- 48[%r9449]
	store.64*   %r9450 -> 0[fs]
	load.64*    %r9451 <- 0[fs]
	symaddr.64* %r9452 <- bl
	push.64*    %r9451
	push.64*    %r9452
	push.8      $0
	call        enterblock
	load.64*    %r9453 <- 0[ls]
	push.64*    %r9453
	call        chunk
	load.64*    %r9454 <- 0[fs]
	push.64*    %r9454
	call        leaveblock
	br          .L2230

.L2230:
	ret


check_conflict:
.L2231:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[lh]
	store.64*   %arg3 -> 0[v]
	load.64*    %r9455 <- 0[ls]
	load.64*    %r9456 <- 48[%r9455]
	store.64*   %r9456 -> 0[fs]
	load.64*    %r9457 <- 0[fs]
	load.32     %r9458 <- 60[%r9457]
	store.32    %r9458 -> 0[extra]
	store.32    $0 -> 0[conflict]
	br          .L2235

.L2235:
	load.64*    %r9459 <- 0[lh]
	br          %r9459, .L2232, .L2234

.L2232:
	load.64*    %r9460 <- 0[lh]
	load.32     %r9461 <- 8[%r9460]
	scast.32    %r9462 <- (32) %r9461
	seteq.32    %r9463 <- %r9462, $9
	br          %r9463, .L2236, .L2237

.L2236:
	load.64*    %r9464 <- 0[lh]
	load.32     %r9465 <- 16[%r9464]
	load.64*    %r9466 <- 0[v]
	load.32     %r9467 <- 8[%r9466]
	seteq.32    %r9468 <- %r9465, %r9467
	br          %r9468, .L2238, .L2239

.L2238:
	store.32    $1 -> 0[conflict]
	load.32     %r9469 <- 0[extra]
	load.64*    %r9470 <- 0[lh]
	store.32    %r9469 -> 16[%r9470]
	br          .L2239

.L2239:
	load.64*    %r9471 <- 0[lh]
	load.32     %r9472 <- 20[%r9471]
	load.64*    %r9473 <- 0[v]
	load.32     %r9474 <- 8[%r9473]
	seteq.32    %r9475 <- %r9472, %r9474
	br          %r9475, .L2240, .L2241

.L2240:
	store.32    $1 -> 0[conflict]
	load.32     %r9476 <- 0[extra]
	load.64*    %r9477 <- 0[lh]
	store.32    %r9476 -> 20[%r9477]
	br          .L2241

.L2241:
	br          .L2237

.L2237:
	br          .L2233

.L2233:
	load.64*    %r9478 <- 0[lh]
	load.64*    %r9479 <- 0[%r9478]
	store.64*   %r9479 -> 0[lh]
	br          .L2235

.L2234:
	load.32     %r9480 <- 0[conflict]
	br          %r9480, .L2242, .L2243

.L2242:
	load.64*    %r9481 <- 0[fs]
	load.64*    %r9482 <- 0[fs]
	load.32     %r9483 <- 60[%r9482]
	load.64*    %r9484 <- 0[v]
	load.32     %r9485 <- 8[%r9484]
	push.64*    %r9481
	push.32     $0
	push.32     %r9483
	push.32     %r9485
	push.32     $0
	call.32     %r9486 <- luaK_codeABC
	load.64*    %r9487 <- 0[fs]
	push.64*    %r9487
	push.32     $1
	call        luaK_reserveregs
	br          .L2243

.L2243:
	ret


assignment:
.L2244:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[lh]
	store.32    %arg3 -> 0[nvars]
	load.64*    %r9488 <- 0[lh]
	load.32     %r9489 <- 8[%r9488]
	scast.32    %r9490 <- (32) %r9489
	setle.32    %r9491 <- $6, %r9490
	br          %r9491, .L2247, .L2245

.L2247:
	load.64*    %r9492 <- 0[lh]
	load.32     %r9493 <- 8[%r9492]
	scast.32    %r9494 <- (32) %r9493
	setle.32    %r9495 <- %r9494, $9
	br          %r9495, .L2246, .L2245

.L2245:
	load.64*    %r9496 <- 0[ls]
	symaddr.64* %r9497 <- <anon symbol:0x62d0013d48b0>
	push.64*    %r9496
	push.64*    %r9497
	call        luaX_syntaxerror
	br          .L2246

.L2246:
	load.64*    %r9498 <- 0[ls]
	push.64*    %r9498
	push.32     $44
	call.32     %r9499 <- testnext
	br          %r9499, .L2248, .L2249

.L2248:
	load.64*    %r9500 <- 0[lh]
	store.64*   %r9500 -> 0[nv]
	load.64*    %r9501 <- 0[ls]
	symaddr.64* %r9502 <- nv
	add.64*     %r9503 <- %r9502, $8
	push.64*    %r9501
	push.64*    %r9503
	call        primaryexp
	load.32     %r9504 <- 8[nv]
	scast.32    %r9505 <- (32) %r9504
	seteq.32    %r9506 <- %r9505, $6
	br          %r9506, .L2250, .L2251

.L2250:
	load.64*    %r9507 <- 0[ls]
	load.64*    %r9508 <- 0[lh]
	symaddr.64* %r9509 <- nv
	add.64*     %r9510 <- %r9509, $8
	push.64*    %r9507
	push.64*    %r9508
	push.64*    %r9510
	call        check_conflict
	br          .L2251

.L2251:
	load.32     %r9511 <- 0[nvars]
	load.64*    %r9512 <- 0[ls]
	load.64*    %r9513 <- 56[%r9512]
	load.16     %r9514 <- 96[%r9513]
	cast.32     %r9515 <- (16) %r9514
	sub.32      %r9516 <- $200, %r9515
	setgt.32    %r9517 <- %r9511, %r9516
	br          %r9517, .L2252, .L2253

.L2252:
	load.64*    %r9518 <- 0[ls]
	load.64*    %r9519 <- 48[%r9518]
	load.64*    %r9520 <- 0[ls]
	load.64*    %r9521 <- 56[%r9520]
	load.16     %r9522 <- 96[%r9521]
	cast.32     %r9523 <- (16) %r9522
	sub.32      %r9524 <- $200, %r9523
	symaddr.64* %r9525 <- <anon symbol:0x62d0013d5ad0>
	push.64*    %r9519
	push.32     %r9524
	push.64*    %r9525
	call        errorlimit
	br          .L2253

.L2253:
	load.64*    %r9526 <- 0[ls]
	symaddr.64* %r9527 <- nv
	load.32     %r9528 <- 0[nvars]
	add.32      %r9529 <- %r9528, $1
	push.64*    %r9526
	push.64*    %r9527
	push.32     %r9529
	call        assignment
	br          .L2254

.L2249:
	load.64*    %r9530 <- 0[ls]
	push.64*    %r9530
	push.32     $61
	call        checknext
	load.64*    %r9531 <- 0[ls]
	symaddr.64* %r9532 <- e
	push.64*    %r9531
	push.64*    %r9532
	call.32     %r9533 <- explist1
	store.32    %r9533 -> 0[nexps]
	load.32     %r9534 <- 0[nexps]
	load.32     %r9535 <- 0[nvars]
	setne.32    %r9536 <- %r9534, %r9535
	br          %r9536, .L2255, .L2256

.L2255:
	load.64*    %r9537 <- 0[ls]
	load.32     %r9538 <- 0[nvars]
	load.32     %r9539 <- 0[nexps]
	symaddr.64* %r9540 <- e
	push.64*    %r9537
	push.32     %r9538
	push.32     %r9539
	push.64*    %r9540
	call        adjust_assign
	load.32     %r9541 <- 0[nexps]
	load.32     %r9542 <- 0[nvars]
	setgt.32    %r9543 <- %r9541, %r9542
	br          %r9543, .L2257, .L2258

.L2257:
	load.32     %r9544 <- 0[nexps]
	load.32     %r9545 <- 0[nvars]
	sub.32      %r9546 <- %r9544, %r9545
	load.64*    %r9547 <- 0[ls]
	load.64*    %r9548 <- 48[%r9547]
	load.32     %r9549 <- 60[%r9548]
	scast.32    %r9550 <- (32) %r9549
	sub.32      %r9551 <- %r9550, %r9546
	scast.32    %r9552 <- (32) %r9551
	store.32    %r9552 -> 60[%r9548]
	br          .L2258

.L2258:
	br          .L2259

.L2256:
	load.64*    %r9553 <- 0[ls]
	load.64*    %r9554 <- 48[%r9553]
	symaddr.64* %r9555 <- e
	push.64*    %r9554
	push.64*    %r9555
	call        luaK_setoneret
	load.64*    %r9556 <- 0[ls]
	load.64*    %r9557 <- 48[%r9556]
	load.64*    %r9558 <- 0[lh]
	add.64*     %r9559 <- %r9558, $8
	symaddr.64* %r9560 <- e
	push.64*    %r9557
	push.64*    %r9559
	push.64*    %r9560
	call        luaK_storevar
	br          .L2260

.L2259:
	br          .L2254

.L2254:
	symaddr.64* %r9561 <- e
	load.64*    %r9562 <- 0[ls]
	load.64*    %r9563 <- 48[%r9562]
	load.32     %r9564 <- 60[%r9563]
	sub.32      %r9565 <- %r9564, $1
	push.64*    %r9561
	push.32     $12
	push.32     %r9565
	call        init_exp
	load.64*    %r9566 <- 0[ls]
	load.64*    %r9567 <- 48[%r9566]
	load.64*    %r9568 <- 0[lh]
	add.64*     %r9569 <- %r9568, $8
	symaddr.64* %r9570 <- e
	push.64*    %r9567
	push.64*    %r9569
	push.64*    %r9570
	call        luaK_storevar
	br          .L2260

.L2260:
	ret


cond:
.L2261:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9571 <- 0[ls]
	symaddr.64* %r9572 <- v
	push.64*    %r9571
	push.64*    %r9572
	call        expr
	load.32     %r9573 <- 0[v]
	scast.32    %r9574 <- (32) %r9573
	seteq.32    %r9575 <- %r9574, $1
	br          %r9575, .L2262, .L2263

.L2262:
	store.32    $3 -> 0[v]
	br          .L2263

.L2263:
	load.64*    %r9576 <- 0[ls]
	load.64*    %r9577 <- 48[%r9576]
	symaddr.64* %r9578 <- v
	push.64*    %r9577
	push.64*    %r9578
	call        luaK_goiftrue
	load.32     %r9579 <- 20[v]
	phisrc.32   %phi381(return) <- %r9579
	br          .L2264

.L2264:
	phi.32      %r9580 <- %phi381(return)
	ret.32      %r9579


breakstat:
.L2265:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9581 <- 0[ls]
	load.64*    %r9582 <- 48[%r9581]
	store.64*   %r9582 -> 0[fs]
	load.64*    %r9583 <- 0[fs]
	load.64*    %r9584 <- 40[%r9583]
	store.64*   %r9584 -> 0[bl]
	store.32    $0 -> 0[upval]
	br          .L2269

.L2269:
	load.64*    %r9585 <- 0[bl]
	br          %r9585, .L2270, .L2268

.L2270:
	load.64*    %r9586 <- 0[bl]
	load.8      %r9587 <- 14[%r9586]
	br          %r9587, .L2268, .L2266

.L2266:
	load.64*    %r9588 <- 0[bl]
	load.8      %r9589 <- 13[%r9588]
	cast.32     %r9590 <- (8) %r9589
	load.32     %r9591 <- 0[upval]
	scast.32    %r9592 <- (32) %r9591
	or.32       %r9593 <- %r9592, %r9590
	scast.32    %r9594 <- (32) %r9593
	store.32    %r9594 -> 0[upval]
	load.64*    %r9595 <- 0[bl]
	load.64*    %r9596 <- 0[%r9595]
	store.64*   %r9596 -> 0[bl]
	br          .L2267

.L2267:
	br          .L2269

.L2268:
	load.64*    %r9597 <- 0[bl]
	br          %r9597, .L2272, .L2271

.L2271:
	load.64*    %r9598 <- 0[ls]
	symaddr.64* %r9599 <- <anon symbol:0x62d0013e4b10>
	push.64*    %r9598
	push.64*    %r9599
	call        luaX_syntaxerror
	br          .L2272

.L2272:
	load.32     %r9600 <- 0[upval]
	br          %r9600, .L2273, .L2274

.L2273:
	load.64*    %r9601 <- 0[fs]
	load.64*    %r9602 <- 0[bl]
	load.8      %r9603 <- 12[%r9602]
	cast.32     %r9604 <- (8) %r9603
	push.64*    %r9601
	push.32     $35
	push.32     %r9604
	push.32     $0
	push.32     $0
	call.32     %r9605 <- luaK_codeABC
	br          .L2274

.L2274:
	load.64*    %r9606 <- 0[fs]
	load.64*    %r9607 <- 0[bl]
	add.64*     %r9608 <- %r9607, $8
	load.64*    %r9609 <- 0[fs]
	push.64*    %r9609
	call.32     %r9610 <- luaK_jump
	push.64*    %r9606
	push.64*    %r9608
	push.32     %r9610
	call        luaK_concat
	br          .L2275

.L2275:
	ret


whilestat:
.L2276:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9611 <- 0[ls]
	load.64*    %r9612 <- 48[%r9611]
	store.64*   %r9612 -> 0[fs]
	load.64*    %r9613 <- 0[ls]
	push.64*    %r9613
	call        luaX_next
	load.64*    %r9614 <- 0[fs]
	push.64*    %r9614
	call.32     %r9615 <- luaK_getlabel
	store.32    %r9615 -> 0[whileinit]
	load.64*    %r9616 <- 0[ls]
	push.64*    %r9616
	call.32     %r9617 <- cond
	store.32    %r9617 -> 0[condexit]
	load.64*    %r9618 <- 0[fs]
	symaddr.64* %r9619 <- bl
	push.64*    %r9618
	push.64*    %r9619
	push.8      $1
	call        enterblock
	load.64*    %r9620 <- 0[ls]
	push.64*    %r9620
	push.32     $259
	call        checknext
	load.64*    %r9621 <- 0[ls]
	push.64*    %r9621
	call        block
	load.64*    %r9622 <- 0[fs]
	load.64*    %r9623 <- 0[fs]
	push.64*    %r9623
	call.32     %r9624 <- luaK_jump
	load.32     %r9625 <- 0[whileinit]
	push.64*    %r9622
	push.32     %r9624
	push.32     %r9625
	call        luaK_patchlist
	load.64*    %r9626 <- 0[ls]
	load.32     %r9627 <- 0[line]
	push.64*    %r9626
	push.32     $262
	push.32     $277
	push.32     %r9627
	call        check_match
	load.64*    %r9628 <- 0[fs]
	push.64*    %r9628
	call        leaveblock
	load.64*    %r9629 <- 0[fs]
	load.32     %r9630 <- 0[condexit]
	push.64*    %r9629
	push.32     %r9630
	call        luaK_patchtohere
	br          .L2277

.L2277:
	ret


repeatstat:
.L2278:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9631 <- 0[ls]
	load.64*    %r9632 <- 48[%r9631]
	store.64*   %r9632 -> 0[fs]
	load.64*    %r9633 <- 0[fs]
	push.64*    %r9633
	call.32     %r9634 <- luaK_getlabel
	store.32    %r9634 -> 0[repeat_init]
	load.64*    %r9635 <- 0[fs]
	symaddr.64* %r9636 <- bl1
	push.64*    %r9635
	push.64*    %r9636
	push.8      $1
	call        enterblock
	load.64*    %r9637 <- 0[fs]
	symaddr.64* %r9638 <- bl2
	push.64*    %r9637
	push.64*    %r9638
	push.8      $0
	call        enterblock
	load.64*    %r9639 <- 0[ls]
	push.64*    %r9639
	call        luaX_next
	load.64*    %r9640 <- 0[ls]
	push.64*    %r9640
	call        chunk
	load.64*    %r9641 <- 0[ls]
	load.32     %r9642 <- 0[line]
	push.64*    %r9641
	push.32     $276
	push.32     $272
	push.32     %r9642
	call        check_match
	load.64*    %r9643 <- 0[ls]
	push.64*    %r9643
	call.32     %r9644 <- cond
	store.32    %r9644 -> 0[condexit]
	load.8      %r9645 <- 13[bl2]
	br          %r9645, .L2280, .L2279

.L2279:
	load.64*    %r9646 <- 0[fs]
	push.64*    %r9646
	call        leaveblock
	load.64*    %r9647 <- 0[ls]
	load.64*    %r9648 <- 48[%r9647]
	load.32     %r9649 <- 0[condexit]
	load.32     %r9650 <- 0[repeat_init]
	push.64*    %r9648
	push.32     %r9649
	push.32     %r9650
	call        luaK_patchlist
	br          .L2281

.L2280:
	load.64*    %r9651 <- 0[ls]
	push.64*    %r9651
	call        breakstat
	load.64*    %r9652 <- 0[ls]
	load.64*    %r9653 <- 48[%r9652]
	load.32     %r9654 <- 0[condexit]
	push.64*    %r9653
	push.32     %r9654
	call        luaK_patchtohere
	load.64*    %r9655 <- 0[fs]
	push.64*    %r9655
	call        leaveblock
	load.64*    %r9656 <- 0[ls]
	load.64*    %r9657 <- 48[%r9656]
	load.64*    %r9658 <- 0[fs]
	push.64*    %r9658
	call.32     %r9659 <- luaK_jump
	load.32     %r9660 <- 0[repeat_init]
	push.64*    %r9657
	push.32     %r9659
	push.32     %r9660
	call        luaK_patchlist
	br          .L2281

.L2281:
	load.64*    %r9661 <- 0[fs]
	push.64*    %r9661
	call        leaveblock
	br          .L2282

.L2282:
	ret


exp1:
.L2283:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9662 <- 0[ls]
	symaddr.64* %r9663 <- e
	push.64*    %r9662
	push.64*    %r9663
	call        expr
	load.32     %r9664 <- 0[e]
	scast.32    %r9665 <- (32) %r9664
	store.32    %r9665 -> 0[k]
	load.64*    %r9666 <- 0[ls]
	load.64*    %r9667 <- 48[%r9666]
	symaddr.64* %r9668 <- e
	push.64*    %r9667
	push.64*    %r9668
	call        luaK_exp2nextreg
	load.32     %r9669 <- 0[k]
	phisrc.32   %phi382(return) <- %r9669
	br          .L2284

.L2284:
	phi.32      %r9670 <- %phi382(return)
	ret.32      %r9669


forbody:
.L2285:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[base]
	store.32    %arg3 -> 0[line]
	store.32    %arg4 -> 0[nvars]
	store.32    %arg5 -> 0[isnum]
	load.64*    %r9671 <- 0[ls]
	load.64*    %r9672 <- 48[%r9671]
	store.64*   %r9672 -> 0[fs]
	load.64*    %r9673 <- 0[ls]
	push.64*    %r9673
	push.32     $3
	call        adjustlocalvars
	load.64*    %r9674 <- 0[ls]
	push.64*    %r9674
	push.32     $259
	call        checknext
	load.32     %r9675 <- 0[isnum]
	br          %r9675, .L2286, .L2287

.L2286:
	load.64*    %r9676 <- 0[fs]
	load.32     %r9677 <- 0[base]
	push.64*    %r9676
	push.32     $32
	push.32     %r9677
	push.32     $0x1fffe
	call.32     %r9678 <- luaK_codeABx
	phisrc.32   %phi383 <- %r9678
	br          .L2288

.L2287:
	load.64*    %r9679 <- 0[fs]
	push.64*    %r9679
	call.32     %r9680 <- luaK_jump
	phisrc.32   %phi384 <- %r9680
	br          .L2288

.L2288:
	phi.32      %r9681 <- %phi383, %phi384
	store.32    %r9681 -> 0[prep]
	load.64*    %r9682 <- 0[fs]
	symaddr.64* %r9683 <- bl
	push.64*    %r9682
	push.64*    %r9683
	push.8      $0
	call        enterblock
	load.64*    %r9684 <- 0[ls]
	load.32     %r9685 <- 0[nvars]
	push.64*    %r9684
	push.32     %r9685
	call        adjustlocalvars
	load.64*    %r9686 <- 0[fs]
	load.32     %r9687 <- 0[nvars]
	push.64*    %r9686
	push.32     %r9687
	call        luaK_reserveregs
	load.64*    %r9688 <- 0[ls]
	push.64*    %r9688
	call        block
	load.64*    %r9689 <- 0[fs]
	push.64*    %r9689
	call        leaveblock
	load.64*    %r9690 <- 0[fs]
	load.32     %r9691 <- 0[prep]
	push.64*    %r9690
	push.32     %r9691
	call        luaK_patchtohere
	load.32     %r9692 <- 0[isnum]
	br          %r9692, .L2289, .L2290

.L2289:
	load.64*    %r9693 <- 0[fs]
	load.32     %r9694 <- 0[base]
	push.64*    %r9693
	push.32     $31
	push.32     %r9694
	push.32     $0x1fffe
	call.32     %r9695 <- luaK_codeABx
	phisrc.32   %phi385 <- %r9695
	br          .L2291

.L2290:
	load.64*    %r9696 <- 0[fs]
	load.32     %r9697 <- 0[base]
	load.32     %r9698 <- 0[nvars]
	push.64*    %r9696
	push.32     $33
	push.32     %r9697
	push.32     $0
	push.32     %r9698
	call.32     %r9699 <- luaK_codeABC
	phisrc.32   %phi386 <- %r9699
	br          .L2291

.L2291:
	phi.32      %r9700 <- %phi385, %phi386
	store.32    %r9700 -> 0[endfor]
	load.64*    %r9701 <- 0[fs]
	load.32     %r9702 <- 0[line]
	push.64*    %r9701
	push.32     %r9702
	call        luaK_fixline
	load.64*    %r9703 <- 0[fs]
	load.32     %r9704 <- 0[isnum]
	br          %r9704, .L2292, .L2293

.L2292:
	load.32     %r9705 <- 0[endfor]
	phisrc.32   %phi387 <- %r9705
	br          .L2294

.L2293:
	load.64*    %r9706 <- 0[fs]
	push.64*    %r9706
	call.32     %r9707 <- luaK_jump
	phisrc.32   %phi388 <- %r9707
	br          .L2294

.L2294:
	phi.32      %r9708 <- %phi387, %phi388
	load.32     %r9709 <- 0[prep]
	add.32      %r9710 <- %r9709, $1
	push.64*    %r9703
	push.32     %r9708
	push.32     %r9710
	call        luaK_patchlist
	br          .L2295

.L2295:
	ret


fornum:
.L2296:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[varname]
	store.32    %arg3 -> 0[line]
	load.64*    %r9711 <- 0[ls]
	load.64*    %r9712 <- 48[%r9711]
	store.64*   %r9712 -> 0[fs]
	load.64*    %r9713 <- 0[fs]
	load.32     %r9714 <- 60[%r9713]
	store.32    %r9714 -> 0[base]
	load.64*    %r9715 <- 0[ls]
	load.64*    %r9716 <- 0[ls]
	symaddr.64* %r9717 <- <anon symbol:0x62d0013e7038>
	push.64*    %r9716
	push.64*    %r9717
	push.64     $11
	call.64*    %r9718 <- luaX_newstring
	push.64*    %r9715
	push.64*    %r9718
	push.32     $0
	call        new_localvar
	load.64*    %r9719 <- 0[ls]
	load.64*    %r9720 <- 0[ls]
	symaddr.64* %r9721 <- <anon symbol:0x62d0013e75a8>
	push.64*    %r9720
	push.64*    %r9721
	push.64     $11
	call.64*    %r9722 <- luaX_newstring
	push.64*    %r9719
	push.64*    %r9722
	push.32     $1
	call        new_localvar
	load.64*    %r9723 <- 0[ls]
	load.64*    %r9724 <- 0[ls]
	symaddr.64* %r9725 <- <anon symbol:0x62d0013e7b18>
	push.64*    %r9724
	push.64*    %r9725
	push.64     $10
	call.64*    %r9726 <- luaX_newstring
	push.64*    %r9723
	push.64*    %r9726
	push.32     $2
	call        new_localvar
	load.64*    %r9727 <- 0[ls]
	load.64*    %r9728 <- 0[varname]
	push.64*    %r9727
	push.64*    %r9728
	push.32     $3
	call        new_localvar
	load.64*    %r9729 <- 0[ls]
	push.64*    %r9729
	push.32     $61
	call        checknext
	load.64*    %r9730 <- 0[ls]
	push.64*    %r9730
	call.32     %r9731 <- exp1
	load.64*    %r9732 <- 0[ls]
	push.64*    %r9732
	push.32     $44
	call        checknext
	load.64*    %r9733 <- 0[ls]
	push.64*    %r9733
	call.32     %r9734 <- exp1
	load.64*    %r9735 <- 0[ls]
	push.64*    %r9735
	push.32     $44
	call.32     %r9736 <- testnext
	br          %r9736, .L2297, .L2298

.L2297:
	load.64*    %r9737 <- 0[ls]
	push.64*    %r9737
	call.32     %r9738 <- exp1
	br          .L2299

.L2298:
	load.64*    %r9739 <- 0[fs]
	load.64*    %r9740 <- 0[fs]
	load.32     %r9741 <- 60[%r9740]
	load.64*    %r9742 <- 0[fs]
	push.64*    %r9742
	push.f64    $1
	call.32     %r9743 <- luaK_numberK
	scast.32    %r9744 <- (32) %r9743
	push.64*    %r9739
	push.32     $1
	push.32     %r9741
	push.32     %r9744
	call.32     %r9745 <- luaK_codeABx
	load.64*    %r9746 <- 0[fs]
	push.64*    %r9746
	push.32     $1
	call        luaK_reserveregs
	br          .L2299

.L2299:
	load.64*    %r9747 <- 0[ls]
	load.32     %r9748 <- 0[base]
	load.32     %r9749 <- 0[line]
	push.64*    %r9747
	push.32     %r9748
	push.32     %r9749
	push.32     $1
	push.32     $1
	call        forbody
	br          .L2300

.L2300:
	ret


forlist:
.L2301:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[indexname]
	load.64*    %r9750 <- 0[ls]
	load.64*    %r9751 <- 48[%r9750]
	store.64*   %r9751 -> 0[fs]
	store.32    $0 -> 0[nvars]
	load.64*    %r9752 <- 0[fs]
	load.32     %r9753 <- 60[%r9752]
	store.32    %r9753 -> 0[base]
	load.64*    %r9754 <- 0[ls]
	load.64*    %r9755 <- 0[ls]
	symaddr.64* %r9756 <- <anon symbol:0x62d0013e85f8>
	push.64*    %r9755
	push.64*    %r9756
	push.64     $15
	call.64*    %r9757 <- luaX_newstring
	load.32     %r9758 <- 0[nvars]
	add.32      %r9759 <- %r9758, $1
	store.32    %r9759 -> 0[nvars]
	push.64*    %r9754
	push.64*    %r9757
	push.32     %r9758
	call        new_localvar
	load.64*    %r9760 <- 0[ls]
	load.64*    %r9761 <- 0[ls]
	symaddr.64* %r9762 <- <anon symbol:0x62d0013e8b68>
	push.64*    %r9761
	push.64*    %r9762
	push.64     $11
	call.64*    %r9763 <- luaX_newstring
	load.32     %r9764 <- 0[nvars]
	add.32      %r9765 <- %r9764, $1
	store.32    %r9765 -> 0[nvars]
	push.64*    %r9760
	push.64*    %r9763
	push.32     %r9764
	call        new_localvar
	load.64*    %r9766 <- 0[ls]
	load.64*    %r9767 <- 0[ls]
	symaddr.64* %r9768 <- <anon symbol:0x62d0013e90d8>
	push.64*    %r9767
	push.64*    %r9768
	push.64     $13
	call.64*    %r9769 <- luaX_newstring
	load.32     %r9770 <- 0[nvars]
	add.32      %r9771 <- %r9770, $1
	store.32    %r9771 -> 0[nvars]
	push.64*    %r9766
	push.64*    %r9769
	push.32     %r9770
	call        new_localvar
	load.64*    %r9772 <- 0[ls]
	load.64*    %r9773 <- 0[indexname]
	load.32     %r9774 <- 0[nvars]
	add.32      %r9775 <- %r9774, $1
	store.32    %r9775 -> 0[nvars]
	push.64*    %r9772
	push.64*    %r9773
	push.32     %r9774
	call        new_localvar
	br          .L2305

.L2305:
	load.64*    %r9776 <- 0[ls]
	push.64*    %r9776
	push.32     $44
	call.32     %r9777 <- testnext
	br          %r9777, .L2302, .L2304

.L2302:
	load.64*    %r9778 <- 0[ls]
	load.64*    %r9779 <- 0[ls]
	push.64*    %r9779
	call.64*    %r9780 <- str_checkname
	load.32     %r9781 <- 0[nvars]
	add.32      %r9782 <- %r9781, $1
	store.32    %r9782 -> 0[nvars]
	push.64*    %r9778
	push.64*    %r9780
	push.32     %r9781
	call        new_localvar
	br          .L2303

.L2303:
	br          .L2305

.L2304:
	load.64*    %r9783 <- 0[ls]
	push.64*    %r9783
	push.32     $267
	call        checknext
	load.64*    %r9784 <- 0[ls]
	load.32     %r9785 <- 4[%r9784]
	store.32    %r9785 -> 0[line]
	load.64*    %r9786 <- 0[ls]
	load.64*    %r9787 <- 0[ls]
	symaddr.64* %r9788 <- e
	push.64*    %r9787
	push.64*    %r9788
	call.32     %r9789 <- explist1
	symaddr.64* %r9790 <- e
	push.64*    %r9786
	push.32     $3
	push.32     %r9789
	push.64*    %r9790
	call        adjust_assign
	load.64*    %r9791 <- 0[fs]
	push.64*    %r9791
	push.32     $3
	call        luaK_checkstack
	load.64*    %r9792 <- 0[ls]
	load.32     %r9793 <- 0[base]
	load.32     %r9794 <- 0[line]
	load.32     %r9795 <- 0[nvars]
	sub.32      %r9796 <- %r9795, $3
	push.64*    %r9792
	push.32     %r9793
	push.32     %r9794
	push.32     %r9796
	push.32     $0
	call        forbody
	br          .L2306

.L2306:
	ret


forstat:
.L2307:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9797 <- 0[ls]
	load.64*    %r9798 <- 48[%r9797]
	store.64*   %r9798 -> 0[fs]
	load.64*    %r9799 <- 0[fs]
	symaddr.64* %r9800 <- bl
	push.64*    %r9799
	push.64*    %r9800
	push.8      $1
	call        enterblock
	load.64*    %r9801 <- 0[ls]
	push.64*    %r9801
	call        luaX_next
	load.64*    %r9802 <- 0[ls]
	push.64*    %r9802
	call.64*    %r9803 <- str_checkname
	store.64*   %r9803 -> 0[varname]
	load.64*    %r9804 <- 0[ls]
	load.32     %r9805 <- 16[%r9804]
	switch.32   %r9805, 44 -> .L2310, 61 -> .L2309, 267 -> .L2311, default -> .L2312

.L2309:
	load.64*    %r9806 <- 0[ls]
	load.64*    %r9807 <- 0[varname]
	load.32     %r9808 <- 0[line]
	push.64*    %r9806
	push.64*    %r9807
	push.32     %r9808
	call        fornum
	br          .L2308

.L2310:
	br          .L2311

.L2311:
	load.64*    %r9809 <- 0[ls]
	load.64*    %r9810 <- 0[varname]
	push.64*    %r9809
	push.64*    %r9810
	call        forlist
	br          .L2308

.L2312:
	load.64*    %r9811 <- 0[ls]
	symaddr.64* %r9812 <- <anon symbol:0x62d0013ea128>
	push.64*    %r9811
	push.64*    %r9812
	call        luaX_syntaxerror
	br          .L2308

.L2308:
	load.64*    %r9813 <- 0[ls]
	load.32     %r9814 <- 0[line]
	push.64*    %r9813
	push.32     $262
	push.32     $264
	push.32     %r9814
	call        check_match
	load.64*    %r9815 <- 0[fs]
	push.64*    %r9815
	call        leaveblock
	br          .L2313

.L2313:
	ret


test_then_block:
.L2314:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9816 <- 0[ls]
	push.64*    %r9816
	call        luaX_next
	load.64*    %r9817 <- 0[ls]
	push.64*    %r9817
	call.32     %r9818 <- cond
	store.32    %r9818 -> 0[condexit]
	load.64*    %r9819 <- 0[ls]
	push.64*    %r9819
	push.32     $274
	call        checknext
	load.64*    %r9820 <- 0[ls]
	push.64*    %r9820
	call        block
	load.32     %r9821 <- 0[condexit]
	phisrc.32   %phi389(return) <- %r9821
	br          .L2315

.L2315:
	phi.32      %r9822 <- %phi389(return)
	ret.32      %r9821


ifstat:
.L2316:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9823 <- 0[ls]
	load.64*    %r9824 <- 48[%r9823]
	store.64*   %r9824 -> 0[fs]
	store.32    $0xffffffff -> 0[escapelist]
	load.64*    %r9825 <- 0[ls]
	push.64*    %r9825
	call.32     %r9826 <- test_then_block
	store.32    %r9826 -> 0[flist]
	br          .L2320

.L2320:
	load.64*    %r9827 <- 0[ls]
	load.32     %r9828 <- 16[%r9827]
	seteq.32    %r9829 <- %r9828, $261
	br          %r9829, .L2317, .L2319

.L2317:
	load.64*    %r9830 <- 0[fs]
	symaddr.64* %r9831 <- escapelist
	load.64*    %r9832 <- 0[fs]
	push.64*    %r9832
	call.32     %r9833 <- luaK_jump
	push.64*    %r9830
	push.64*    %r9831
	push.32     %r9833
	call        luaK_concat
	load.64*    %r9834 <- 0[fs]
	load.32     %r9835 <- 0[flist]
	push.64*    %r9834
	push.32     %r9835
	call        luaK_patchtohere
	load.64*    %r9836 <- 0[ls]
	push.64*    %r9836
	call.32     %r9837 <- test_then_block
	store.32    %r9837 -> 0[flist]
	br          .L2318

.L2318:
	br          .L2320

.L2319:
	load.64*    %r9838 <- 0[ls]
	load.32     %r9839 <- 16[%r9838]
	seteq.32    %r9840 <- %r9839, $260
	br          %r9840, .L2321, .L2322

.L2321:
	load.64*    %r9841 <- 0[fs]
	symaddr.64* %r9842 <- escapelist
	load.64*    %r9843 <- 0[fs]
	push.64*    %r9843
	call.32     %r9844 <- luaK_jump
	push.64*    %r9841
	push.64*    %r9842
	push.32     %r9844
	call        luaK_concat
	load.64*    %r9845 <- 0[fs]
	load.32     %r9846 <- 0[flist]
	push.64*    %r9845
	push.32     %r9846
	call        luaK_patchtohere
	load.64*    %r9847 <- 0[ls]
	push.64*    %r9847
	call        luaX_next
	load.64*    %r9848 <- 0[ls]
	push.64*    %r9848
	call        block
	br          .L2323

.L2322:
	load.64*    %r9849 <- 0[fs]
	symaddr.64* %r9850 <- escapelist
	load.32     %r9851 <- 0[flist]
	push.64*    %r9849
	push.64*    %r9850
	push.32     %r9851
	call        luaK_concat
	br          .L2323

.L2323:
	load.64*    %r9852 <- 0[fs]
	load.32     %r9853 <- 0[escapelist]
	push.64*    %r9852
	push.32     %r9853
	call        luaK_patchtohere
	load.64*    %r9854 <- 0[ls]
	load.32     %r9855 <- 0[line]
	push.64*    %r9854
	push.32     $262
	push.32     $266
	push.32     %r9855
	call        check_match
	br          .L2324

.L2324:
	ret


localfunc:
.L2325:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9856 <- 0[ls]
	load.64*    %r9857 <- 48[%r9856]
	store.64*   %r9857 -> 0[fs]
	load.64*    %r9858 <- 0[ls]
	load.64*    %r9859 <- 0[ls]
	push.64*    %r9859
	call.64*    %r9860 <- str_checkname
	push.64*    %r9858
	push.64*    %r9860
	push.32     $0
	call        new_localvar
	symaddr.64* %r9861 <- v
	load.64*    %r9862 <- 0[fs]
	load.32     %r9863 <- 60[%r9862]
	push.64*    %r9861
	push.32     $6
	push.32     %r9863
	call        init_exp
	load.64*    %r9864 <- 0[fs]
	push.64*    %r9864
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r9865 <- 0[ls]
	push.64*    %r9865
	push.32     $1
	call        adjustlocalvars
	load.64*    %r9866 <- 0[ls]
	symaddr.64* %r9867 <- b
	load.64*    %r9868 <- 0[ls]
	load.32     %r9869 <- 4[%r9868]
	push.64*    %r9866
	push.64*    %r9867
	push.32     $0
	push.32     %r9869
	call        body
	load.64*    %r9870 <- 0[fs]
	symaddr.64* %r9871 <- v
	symaddr.64* %r9872 <- b
	push.64*    %r9870
	push.64*    %r9871
	push.64*    %r9872
	call        luaK_storevar
	load.64*    %r9873 <- 0[fs]
	load.32     %r9874 <- 48[%r9873]
	load.64*    %r9875 <- 0[fs]
	load.64*    %r9876 <- 0[%r9875]
	load.64*    %r9877 <- 48[%r9876]
	load.64*    %r9878 <- 0[fs]
	add.64*     %r9879 <- %r9878, $196
	load.64*    %r9880 <- 0[fs]
	load.8      %r9881 <- 74[%r9880]
	cast.32     %r9882 <- (8) %r9881
	sub.32      %r9883 <- %r9882, $1
	scast.64    %r9884 <- (32) %r9883
	muls.64     %r9885 <- %r9884, $2
	add.64*     %r9886 <- %r9879, %r9885
	load.16     %r9887 <- 0[%r9886]
	cast.64     %r9888 <- (16) %r9887
	muls.64     %r9889 <- %r9888, $16
	add.64*     %r9890 <- %r9877, %r9889
	store.32    %r9874 -> 8[%r9890]
	br          .L2326

.L2326:
	ret


localstat:
.L2327:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[nvars]
	br          .L2328

.L2328:
	load.64*    %r9891 <- 0[ls]
	load.64*    %r9892 <- 0[ls]
	push.64*    %r9892
	call.64*    %r9893 <- str_checkname
	load.32     %r9894 <- 0[nvars]
	add.32      %r9895 <- %r9894, $1
	store.32    %r9895 -> 0[nvars]
	push.64*    %r9891
	push.64*    %r9893
	push.32     %r9894
	call        new_localvar
	br          .L2329

.L2329:
	load.64*    %r9896 <- 0[ls]
	push.64*    %r9896
	push.32     $44
	call.32     %r9897 <- testnext
	br          %r9897, .L2328, .L2330

.L2330:
	load.64*    %r9898 <- 0[ls]
	push.64*    %r9898
	push.32     $61
	call.32     %r9899 <- testnext
	br          %r9899, .L2331, .L2332

.L2331:
	load.64*    %r9900 <- 0[ls]
	symaddr.64* %r9901 <- e
	push.64*    %r9900
	push.64*    %r9901
	call.32     %r9902 <- explist1
	store.32    %r9902 -> 0[nexps]
	br          .L2333

.L2332:
	store.32    $0 -> 0[e]
	store.32    $0 -> 0[nexps]
	br          .L2333

.L2333:
	load.64*    %r9903 <- 0[ls]
	load.32     %r9904 <- 0[nvars]
	load.32     %r9905 <- 0[nexps]
	symaddr.64* %r9906 <- e
	push.64*    %r9903
	push.32     %r9904
	push.32     %r9905
	push.64*    %r9906
	call        adjust_assign
	load.64*    %r9907 <- 0[ls]
	load.32     %r9908 <- 0[nvars]
	push.64*    %r9907
	push.32     %r9908
	call        adjustlocalvars
	br          .L2334

.L2334:
	ret


funcname:
.L2335:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    $0 -> 0[needself]
	load.64*    %r9909 <- 0[ls]
	load.64*    %r9910 <- 0[v]
	push.64*    %r9909
	push.64*    %r9910
	call        singlevar
	br          .L2339

.L2339:
	load.64*    %r9911 <- 0[ls]
	load.32     %r9912 <- 16[%r9911]
	seteq.32    %r9913 <- %r9912, $46
	br          %r9913, .L2336, .L2338

.L2336:
	load.64*    %r9914 <- 0[ls]
	load.64*    %r9915 <- 0[v]
	push.64*    %r9914
	push.64*    %r9915
	call        field
	br          .L2337

.L2337:
	br          .L2339

.L2338:
	load.64*    %r9916 <- 0[ls]
	load.32     %r9917 <- 16[%r9916]
	seteq.32    %r9918 <- %r9917, $58
	br          %r9918, .L2340, .L2341

.L2340:
	store.32    $1 -> 0[needself]
	load.64*    %r9919 <- 0[ls]
	load.64*    %r9920 <- 0[v]
	push.64*    %r9919
	push.64*    %r9920
	call        field
	br          .L2341

.L2341:
	load.32     %r9921 <- 0[needself]
	phisrc.32   %phi390(return) <- %r9921
	br          .L2342

.L2342:
	phi.32      %r9922 <- %phi390(return)
	ret.32      %r9921


funcstat:
.L2343:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9923 <- 0[ls]
	push.64*    %r9923
	call        luaX_next
	load.64*    %r9924 <- 0[ls]
	symaddr.64* %r9925 <- v
	push.64*    %r9924
	push.64*    %r9925
	call.32     %r9926 <- funcname
	store.32    %r9926 -> 0[needself]
	load.64*    %r9927 <- 0[ls]
	symaddr.64* %r9928 <- b
	load.32     %r9929 <- 0[needself]
	load.32     %r9930 <- 0[line]
	push.64*    %r9927
	push.64*    %r9928
	push.32     %r9929
	push.32     %r9930
	call        body
	load.64*    %r9931 <- 0[ls]
	load.64*    %r9932 <- 48[%r9931]
	symaddr.64* %r9933 <- v
	symaddr.64* %r9934 <- b
	push.64*    %r9932
	push.64*    %r9933
	push.64*    %r9934
	call        luaK_storevar
	load.64*    %r9935 <- 0[ls]
	load.64*    %r9936 <- 48[%r9935]
	load.32     %r9937 <- 0[line]
	push.64*    %r9936
	push.32     %r9937
	call        luaK_fixline
	br          .L2344

.L2344:
	ret


exprstat:
.L2345:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9938 <- 0[ls]
	load.64*    %r9939 <- 48[%r9938]
	store.64*   %r9939 -> 0[fs]
	load.64*    %r9940 <- 0[ls]
	symaddr.64* %r9941 <- v
	add.64*     %r9942 <- %r9941, $8
	push.64*    %r9940
	push.64*    %r9942
	call        primaryexp
	load.32     %r9943 <- 8[v]
	scast.32    %r9944 <- (32) %r9943
	seteq.32    %r9945 <- %r9944, $13
	br          %r9945, .L2346, .L2347

.L2346:
	load.64*    %r9946 <- 0[fs]
	load.64*    %r9947 <- 0[%r9946]
	load.64*    %r9948 <- 24[%r9947]
	load.32     %r9949 <- 16[v]
	scast.64    %r9950 <- (32) %r9949
	muls.64     %r9951 <- %r9950, $4
	add.64*     %r9952 <- %r9948, %r9951
	load.32     %r9953 <- 0[%r9952]
	and.32      %r9954 <- %r9953, $0xff803fff
	or.32       %r9955 <- %r9954, $0x4000
	load.64*    %r9956 <- 0[fs]
	load.64*    %r9957 <- 0[%r9956]
	load.64*    %r9958 <- 24[%r9957]
	load.32     %r9959 <- 16[v]
	scast.64    %r9960 <- (32) %r9959
	muls.64     %r9961 <- %r9960, $4
	add.64*     %r9962 <- %r9958, %r9961
	store.32    %r9955 -> 0[%r9962]
	br          .L2348

.L2347:
	store.64*   $0 -> 0[v]
	load.64*    %r9963 <- 0[ls]
	symaddr.64* %r9964 <- v
	push.64*    %r9963
	push.64*    %r9964
	push.32     $1
	call        assignment
	br          .L2348

.L2348:
	ret


retstat:
.L2349:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9965 <- 0[ls]
	load.64*    %r9966 <- 48[%r9965]
	store.64*   %r9966 -> 0[fs]
	load.64*    %r9967 <- 0[ls]
	push.64*    %r9967
	call        luaX_next
	load.64*    %r9968 <- 0[ls]
	load.32     %r9969 <- 16[%r9968]
	push.32     %r9969
	call.32     %r9970 <- block_follow
	br          %r9970, .L2350, .L2352

.L2352:
	load.64*    %r9971 <- 0[ls]
	load.32     %r9972 <- 16[%r9971]
	seteq.32    %r9973 <- %r9972, $59
	br          %r9973, .L2350, .L2351

.L2350:
	store.32    $0 -> 0[nret]
	store.32    $0 -> 0[first]
	br          .L2353

.L2351:
	load.64*    %r9974 <- 0[ls]
	symaddr.64* %r9975 <- e
	push.64*    %r9974
	push.64*    %r9975
	call.32     %r9976 <- explist1
	store.32    %r9976 -> 0[nret]
	load.32     %r9977 <- 0[e]
	scast.32    %r9978 <- (32) %r9977
	seteq.32    %r9979 <- %r9978, $13
	load.32     %r9980 <- 0[e]
	scast.32    %r9981 <- (32) %r9980
	seteq.32    %r9982 <- %r9981, $14
	or-bool.32  %r9983 <- %r9979, %r9982
	br          %r9983, .L2354, .L2355

.L2354:
	load.64*    %r9984 <- 0[fs]
	symaddr.64* %r9985 <- e
	push.64*    %r9984
	push.64*    %r9985
	push.32     $0xffffffff
	call        luaK_setreturns
	load.32     %r9986 <- 0[e]
	scast.32    %r9987 <- (32) %r9986
	seteq.32    %r9988 <- %r9987, $13
	load.32     %r9989 <- 0[nret]
	seteq.32    %r9990 <- %r9989, $1
	and-bool.32 %r9991 <- %r9988, %r9990
	br          %r9991, .L2356, .L2357

.L2356:
	load.64*    %r9992 <- 0[fs]
	load.64*    %r9993 <- 0[%r9992]
	load.64*    %r9994 <- 24[%r9993]
	load.32     %r9995 <- 8[e]
	scast.64    %r9996 <- (32) %r9995
	muls.64     %r9997 <- %r9996, $4
	add.64*     %r9998 <- %r9994, %r9997
	load.32     %r9999 <- 0[%r9998]
	and.32      %r10000 <- %r9999, $0xffffffc0
	or.32       %r10001 <- %r10000, $29
	load.64*    %r10002 <- 0[fs]
	load.64*    %r10003 <- 0[%r10002]
	load.64*    %r10004 <- 24[%r10003]
	load.32     %r10005 <- 8[e]
	scast.64    %r10006 <- (32) %r10005
	muls.64     %r10007 <- %r10006, $4
	add.64*     %r10008 <- %r10004, %r10007
	store.32    %r10001 -> 0[%r10008]
	br          .L2357

.L2357:
	load.64*    %r10009 <- 0[fs]
	load.8      %r10010 <- 74[%r10009]
	cast.32     %r10011 <- (8) %r10010
	store.32    %r10011 -> 0[first]
	store.32    $0xffffffff -> 0[nret]
	br          .L2358

.L2355:
	load.32     %r10012 <- 0[nret]
	seteq.32    %r10013 <- %r10012, $1
	br          %r10013, .L2359, .L2360

.L2359:
	load.64*    %r10014 <- 0[fs]
	symaddr.64* %r10015 <- e
	push.64*    %r10014
	push.64*    %r10015
	call.32     %r10016 <- luaK_exp2anyreg
	store.32    %r10016 -> 0[first]
	br          .L2361

.L2360:
	load.64*    %r10017 <- 0[fs]
	symaddr.64* %r10018 <- e
	push.64*    %r10017
	push.64*    %r10018
	call        luaK_exp2nextreg
	load.64*    %r10019 <- 0[fs]
	load.8      %r10020 <- 74[%r10019]
	cast.32     %r10021 <- (8) %r10020
	store.32    %r10021 -> 0[first]
	br          .L2361

.L2361:
	br          .L2358

.L2358:
	br          .L2353

.L2353:
	load.64*    %r10022 <- 0[fs]
	load.32     %r10023 <- 0[first]
	load.32     %r10024 <- 0[nret]
	push.64*    %r10022
	push.32     %r10023
	push.32     %r10024
	call        luaK_ret
	br          .L2362

.L2362:
	ret


statement:
.L2363:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r10025 <- 0[ls]
	load.32     %r10026 <- 4[%r10025]
	store.32    %r10026 -> 0[line]
	load.64*    %r10027 <- 0[ls]
	load.32     %r10028 <- 16[%r10027]
	switch.32   %r10028, 258 -> .L2373, 259 -> .L2367, 264 -> .L2368, 265 -> .L2370, 266 -> .L2365, 268 -> .L2371, 272 -> .L2369, 273 -> .L2372, 277 -> .L2366, default -> .L2374

.L2365:
	load.64*    %r10029 <- 0[ls]
	load.32     %r10030 <- 0[line]
	push.64*    %r10029
	push.32     %r10030
	call        ifstat
	phisrc.32   %phi391(return) <- $0
	br          .L2375

.L2366:
	load.64*    %r10032 <- 0[ls]
	load.32     %r10033 <- 0[line]
	push.64*    %r10032
	push.32     %r10033
	call        whilestat
	phisrc.32   %phi392(return) <- $0
	br          .L2375

.L2367:
	load.64*    %r10034 <- 0[ls]
	push.64*    %r10034
	call        luaX_next
	load.64*    %r10035 <- 0[ls]
	push.64*    %r10035
	call        block
	load.64*    %r10036 <- 0[ls]
	load.32     %r10037 <- 0[line]
	push.64*    %r10036
	push.32     $262
	push.32     $259
	push.32     %r10037
	call        check_match
	phisrc.32   %phi393(return) <- $0
	br          .L2375

.L2368:
	load.64*    %r10038 <- 0[ls]
	load.32     %r10039 <- 0[line]
	push.64*    %r10038
	push.32     %r10039
	call        forstat
	phisrc.32   %phi394(return) <- $0
	br          .L2375

.L2369:
	load.64*    %r10040 <- 0[ls]
	load.32     %r10041 <- 0[line]
	push.64*    %r10040
	push.32     %r10041
	call        repeatstat
	phisrc.32   %phi395(return) <- $0
	br          .L2375

.L2370:
	load.64*    %r10042 <- 0[ls]
	load.32     %r10043 <- 0[line]
	push.64*    %r10042
	push.32     %r10043
	call        funcstat
	phisrc.32   %phi396(return) <- $0
	br          .L2375

.L2371:
	load.64*    %r10044 <- 0[ls]
	push.64*    %r10044
	call        luaX_next
	load.64*    %r10045 <- 0[ls]
	push.64*    %r10045
	push.32     $265
	call.32     %r10046 <- testnext
	br          %r10046, .L2376, .L2377

.L2376:
	load.64*    %r10047 <- 0[ls]
	push.64*    %r10047
	call        localfunc
	br          .L2378

.L2377:
	load.64*    %r10048 <- 0[ls]
	push.64*    %r10048
	call        localstat
	br          .L2378

.L2378:
	phisrc.32   %phi397(return) <- $0
	br          .L2375

.L2372:
	load.64*    %r10049 <- 0[ls]
	push.64*    %r10049
	call        retstat
	phisrc.32   %phi398(return) <- $1
	br          .L2375

.L2373:
	load.64*    %r10050 <- 0[ls]
	push.64*    %r10050
	call        luaX_next
	load.64*    %r10051 <- 0[ls]
	push.64*    %r10051
	call        breakstat
	phisrc.32   %phi399(return) <- $1
	br          .L2375

.L2374:
	load.64*    %r10052 <- 0[ls]
	push.64*    %r10052
	call        exprstat
	phisrc.32   %phi400(return) <- $0
	br          .L2375

.L2375:
	phi.32      %r10031 <- %phi391(return), %phi392(return), %phi393(return), %phi394(return), %phi395(return), %phi396(return), %phi397(return), %phi398(return), %phi399(return), %phi400(return)
	ret.32      %r10031


chunk:
.L2379:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[islast]
	load.64*    %r10053 <- 0[ls]
	push.64*    %r10053
	call        enterlevel
	br          .L2383

.L2383:
	load.32     %r10054 <- 0[islast]
	br          %r10054, .L2382, .L2384

.L2384:
	load.64*    %r10055 <- 0[ls]
	load.32     %r10056 <- 16[%r10055]
	push.32     %r10056
	call.32     %r10057 <- block_follow
	br          %r10057, .L2382, .L2380

.L2380:
	load.64*    %r10058 <- 0[ls]
	push.64*    %r10058
	call.32     %r10059 <- statement
	store.32    %r10059 -> 0[islast]
	load.64*    %r10060 <- 0[ls]
	push.64*    %r10060
	push.32     $59
	call.32     %r10061 <- testnext
	load.64*    %r10062 <- 0[ls]
	load.64*    %r10063 <- 48[%r10062]
	load.8      %r10064 <- 74[%r10063]
	cast.32     %r10065 <- (8) %r10064
	load.64*    %r10066 <- 0[ls]
	load.64*    %r10067 <- 48[%r10066]
	store.32    %r10065 -> 60[%r10067]
	br          .L2381

.L2381:
	br          .L2383

.L2382:
	load.64*    %r10068 <- 0[ls]
	load.64*    %r10069 <- 56[%r10068]
	load.16     %r10070 <- 96[%r10069]
	sub.16      %r10071 <- %r10070, $1
	store.16    %r10071 -> 96[%r10069]
	br          .L2385

.L2385:
	ret


luaV_tonumber:
.L2386:
	<entry-point>
	store.64*   %arg1 -> 0[obj]
	store.64*   %arg2 -> 0[n]
	load.64*    %r10072 <- 0[obj]
	load.32     %r10073 <- 8[%r10072]
	scast.32    %r10074 <- (32) %r10073
	seteq.32    %r10075 <- %r10074, $3
	br          %r10075, .L2387, .L2388

.L2387:
	load.64*    %r10076 <- 0[obj]
	phisrc.64*  %phi401(return) <- %r10076
	br          .L2389

.L2388:
	load.64*    %r10078 <- 0[obj]
	load.32     %r10079 <- 8[%r10078]
	scast.32    %r10080 <- (32) %r10079
	seteq.32    %r10081 <- %r10080, $4
	br          %r10081, .L2392, .L2391

.L2392:
	load.64*    %r10082 <- 0[obj]
	load.64*    %r10083 <- 0[%r10082]
	add.64*     %r10084 <- %r10083, $0
	add.64*     %r10085 <- %r10084, $24
	ptrcast.64* %r10086 <- (64) %r10085
	symaddr.64* %r10087 <- num
	push.64*    %r10086
	push.64*    %r10087
	call.32     %r10088 <- luaO_str2d
	br          %r10088, .L2390, .L2391

.L2390:
	load.64*    %r10089 <- 0[n]
	store.64*   %r10089 -> 0[i_o]
	load.f64    %r10090 <- 0[num]
	load.64*    %r10091 <- 0[i_o]
	store.f64   %r10090 -> 0[%r10091]
	load.64*    %r10092 <- 0[i_o]
	store.32    $3 -> 8[%r10092]
	load.64*    %r10093 <- 0[n]
	phisrc.64*  %phi402(return) <- %r10093
	br          .L2389

.L2391:
	phisrc.64*  %phi403(return) <- $0
	br          .L2389

.L2389:
	phi.64*     %r10077 <- %phi401(return), %phi402(return), %phi403(return)
	ret.64*     %r10077


luaV_tostring:
.L2394:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[obj]
	load.64*    %r10094 <- 0[obj]
	load.32     %r10095 <- 8[%r10094]
	seteq.32    %r10096 <- %r10095, $3
	br          %r10096, .L2396, .L2395

.L2395:
	phisrc.32   %phi404(return) <- $0
	br          .L2397

.L2396:
	load.64*    %r10098 <- 0[obj]
	load.f64    %r10099 <- 0[%r10098]
	store.f64   %r10099 -> 0[n]
	symaddr.64* %r10100 <- s
	symaddr.64* %r10101 <- <anon symbol:0x62d0011142e8>
	load.f64    %r10102 <- 0[n]
	push.64*    %r10100
	push.64*    %r10101
	push.f64    %r10102
	call.32     %r10103 <- sprintf
	load.64*    %r10104 <- 0[obj]
	store.64*   %r10104 -> 0[i_o]
	load.64*    %r10105 <- 0[L]
	symaddr.64* %r10106 <- s
	symaddr.64* %r10107 <- s
	push.64*    %r10107
	call.64     %r10108 <- strlen
	push.64*    %r10105
	push.64*    %r10106
	push.64     %r10108
	call.64*    %r10109 <- luaS_newlstr
	ptrcast.64* %r10110 <- (64) %r10109
	load.64*    %r10111 <- 0[i_o]
	store.64*   %r10110 -> 0[%r10111]
	load.64*    %r10112 <- 0[i_o]
	store.32    $4 -> 8[%r10112]
	phisrc.32   %phi405(return) <- $1
	br          .L2397

.L2397:
	phi.32      %r10097 <- %phi404(return), %phi405(return)
	ret.32      %r10097


callTMres:
.L2399:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[res]
	store.64*   %arg3 -> 0[f]
	store.64*   %arg4 -> 0[p1]
	store.64*   %arg5 -> 0[p2]
	load.64*    %r10113 <- 0[res]
	ptrcast.64* %r10114 <- (64) %r10113
	load.64*    %r10115 <- 0[L]
	load.64*    %r10116 <- 64[%r10115]
	ptrcast.64* %r10117 <- (64) %r10116
	sub.64      %r10118 <- %r10114, %r10117
	store.64    %r10118 -> 0[result]
	load.64*    %r10119 <- 0[f]
	store.64*   %r10119 -> 0[o2]
	load.64*    %r10120 <- 0[L]
	load.64*    %r10121 <- 16[%r10120]
	store.64*   %r10121 -> 0[o1]
	load.64*    %r10122 <- 0[o2]
	load.f64    %r10123 <- 0[%r10122]
	fpcast.f64  %r10124 <- (64) %r10123
	load.64*    %r10125 <- 0[o1]
	store.f64   %r10124 -> 0[%r10125]
	load.64*    %r10126 <- 0[o2]
	load.32     %r10127 <- 8[%r10126]
	scast.32    %r10128 <- (32) %r10127
	load.64*    %r10129 <- 0[o1]
	store.32    %r10128 -> 8[%r10129]
	load.64*    %r10130 <- 0[p1]
	store.64*   %r10130 -> 0[o2]
	load.64*    %r10131 <- 0[L]
	load.64*    %r10132 <- 16[%r10131]
	add.64*     %r10133 <- %r10132, $16
	store.64*   %r10133 -> 0[o1]
	load.64*    %r10134 <- 0[o2]
	load.f64    %r10135 <- 0[%r10134]
	fpcast.f64  %r10136 <- (64) %r10135
	load.64*    %r10137 <- 0[o1]
	store.f64   %r10136 -> 0[%r10137]
	load.64*    %r10138 <- 0[o2]
	load.32     %r10139 <- 8[%r10138]
	scast.32    %r10140 <- (32) %r10139
	load.64*    %r10141 <- 0[o1]
	store.32    %r10140 -> 8[%r10141]
	load.64*    %r10142 <- 0[p2]
	store.64*   %r10142 -> 0[o2]
	load.64*    %r10143 <- 0[L]
	load.64*    %r10144 <- 16[%r10143]
	add.64*     %r10145 <- %r10144, $32
	store.64*   %r10145 -> 0[o1]
	load.64*    %r10146 <- 0[o2]
	load.f64    %r10147 <- 0[%r10146]
	fpcast.f64  %r10148 <- (64) %r10147
	load.64*    %r10149 <- 0[o1]
	store.f64   %r10148 -> 0[%r10149]
	load.64*    %r10150 <- 0[o2]
	load.32     %r10151 <- 8[%r10150]
	scast.32    %r10152 <- (32) %r10151
	load.64*    %r10153 <- 0[o1]
	store.32    %r10152 -> 8[%r10153]
	load.64*    %r10154 <- 0[L]
	load.64*    %r10155 <- 56[%r10154]
	ptrcast.64* %r10156 <- (64) %r10155
	load.64*    %r10157 <- 0[L]
	load.64*    %r10158 <- 16[%r10157]
	ptrcast.64* %r10159 <- (64) %r10158
	sub.64      %r10160 <- %r10156, %r10159
	setle.32    %r10161 <- %r10160, $48
	br          %r10161, .L2400, .L2401

.L2400:
	load.64*    %r10162 <- 0[L]
	push.64*    %r10162
	push.32     $3
	call        luaD_growstack
	br          .L2402

.L2401:
	br          .L2402

.L2402:
	load.64*    %r10163 <- 0[L]
	load.64*    %r10164 <- 16[%r10163]
	cast.64     %r10165 <- (64) %r10164
	add.64      %r10166 <- %r10165, $48
	ptrcast.64* %r10167 <- (64) %r10166
	store.64*   %r10167 -> 16[%r10163]
	load.64*    %r10168 <- 0[L]
	load.64*    %r10169 <- 0[L]
	load.64*    %r10170 <- 16[%r10169]
	sub.64*     %r10171 <- %r10170, $48
	push.64*    %r10168
	push.64*    %r10171
	push.32     $1
	call        luaD_call
	load.64*    %r10172 <- 0[L]
	load.64*    %r10173 <- 64[%r10172]
	ptrcast.64* %r10174 <- (64) %r10173
	load.64     %r10175 <- 0[result]
	add.64*     %r10176 <- %r10174, %r10175
	ptrcast.64* %r10177 <- (64) %r10176
	store.64*   %r10177 -> 0[res]
	load.64*    %r10178 <- 0[L]
	load.64*    %r10179 <- 16[%r10178]
	sub.64*     %r10180 <- %r10179, $16
	store.64*   %r10180 -> 16[%r10178]
	load.64*    %r10181 <- 0[L]
	load.64*    %r10182 <- 16[%r10181]
	store.64*   %r10182 -> 0[o2]
	load.64*    %r10183 <- 0[res]
	store.64*   %r10183 -> 0[o1]
	load.64*    %r10184 <- 0[o2]
	load.f64    %r10185 <- 0[%r10184]
	fpcast.f64  %r10186 <- (64) %r10185
	load.64*    %r10187 <- 0[o1]
	store.f64   %r10186 -> 0[%r10187]
	load.64*    %r10188 <- 0[o2]
	load.32     %r10189 <- 8[%r10188]
	scast.32    %r10190 <- (32) %r10189
	load.64*    %r10191 <- 0[o1]
	store.32    %r10190 -> 8[%r10191]
	br          .L2403

.L2403:
	ret


callTM:
.L2404:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64*   %arg3 -> 0[p1]
	store.64*   %arg4 -> 0[p2]
	store.64*   %arg5 -> 0[p3]
	load.64*    %r10192 <- 0[f]
	store.64*   %r10192 -> 0[o2]
	load.64*    %r10193 <- 0[L]
	load.64*    %r10194 <- 16[%r10193]
	store.64*   %r10194 -> 0[o1]
	load.64*    %r10195 <- 0[o2]
	load.f64    %r10196 <- 0[%r10195]
	fpcast.f64  %r10197 <- (64) %r10196
	load.64*    %r10198 <- 0[o1]
	store.f64   %r10197 -> 0[%r10198]
	load.64*    %r10199 <- 0[o2]
	load.32     %r10200 <- 8[%r10199]
	scast.32    %r10201 <- (32) %r10200
	load.64*    %r10202 <- 0[o1]
	store.32    %r10201 -> 8[%r10202]
	load.64*    %r10203 <- 0[p1]
	store.64*   %r10203 -> 0[o2]
	load.64*    %r10204 <- 0[L]
	load.64*    %r10205 <- 16[%r10204]
	add.64*     %r10206 <- %r10205, $16
	store.64*   %r10206 -> 0[o1]
	load.64*    %r10207 <- 0[o2]
	load.f64    %r10208 <- 0[%r10207]
	fpcast.f64  %r10209 <- (64) %r10208
	load.64*    %r10210 <- 0[o1]
	store.f64   %r10209 -> 0[%r10210]
	load.64*    %r10211 <- 0[o2]
	load.32     %r10212 <- 8[%r10211]
	scast.32    %r10213 <- (32) %r10212
	load.64*    %r10214 <- 0[o1]
	store.32    %r10213 -> 8[%r10214]
	load.64*    %r10215 <- 0[p2]
	store.64*   %r10215 -> 0[o2]
	load.64*    %r10216 <- 0[L]
	load.64*    %r10217 <- 16[%r10216]
	add.64*     %r10218 <- %r10217, $32
	store.64*   %r10218 -> 0[o1]
	load.64*    %r10219 <- 0[o2]
	load.f64    %r10220 <- 0[%r10219]
	fpcast.f64  %r10221 <- (64) %r10220
	load.64*    %r10222 <- 0[o1]
	store.f64   %r10221 -> 0[%r10222]
	load.64*    %r10223 <- 0[o2]
	load.32     %r10224 <- 8[%r10223]
	scast.32    %r10225 <- (32) %r10224
	load.64*    %r10226 <- 0[o1]
	store.32    %r10225 -> 8[%r10226]
	load.64*    %r10227 <- 0[p3]
	store.64*   %r10227 -> 0[o2]
	load.64*    %r10228 <- 0[L]
	load.64*    %r10229 <- 16[%r10228]
	add.64*     %r10230 <- %r10229, $48
	store.64*   %r10230 -> 0[o1]
	load.64*    %r10231 <- 0[o2]
	load.f64    %r10232 <- 0[%r10231]
	fpcast.f64  %r10233 <- (64) %r10232
	load.64*    %r10234 <- 0[o1]
	store.f64   %r10233 -> 0[%r10234]
	load.64*    %r10235 <- 0[o2]
	load.32     %r10236 <- 8[%r10235]
	scast.32    %r10237 <- (32) %r10236
	load.64*    %r10238 <- 0[o1]
	store.32    %r10237 -> 8[%r10238]
	load.64*    %r10239 <- 0[L]
	load.64*    %r10240 <- 56[%r10239]
	ptrcast.64* %r10241 <- (64) %r10240
	load.64*    %r10242 <- 0[L]
	load.64*    %r10243 <- 16[%r10242]
	ptrcast.64* %r10244 <- (64) %r10243
	sub.64      %r10245 <- %r10241, %r10244
	setle.32    %r10246 <- %r10245, $64
	br          %r10246, .L2405, .L2406

.L2405:
	load.64*    %r10247 <- 0[L]
	push.64*    %r10247
	push.32     $4
	call        luaD_growstack
	br          .L2407

.L2406:
	br          .L2407

.L2407:
	load.64*    %r10248 <- 0[L]
	load.64*    %r10249 <- 16[%r10248]
	cast.64     %r10250 <- (64) %r10249
	add.64      %r10251 <- %r10250, $64
	ptrcast.64* %r10252 <- (64) %r10251
	store.64*   %r10252 -> 16[%r10248]
	load.64*    %r10253 <- 0[L]
	load.64*    %r10254 <- 0[L]
	load.64*    %r10255 <- 16[%r10254]
	sub.64*     %r10256 <- %r10255, $64
	push.64*    %r10253
	push.64*    %r10256
	push.32     $0
	call        luaD_call
	br          .L2408

.L2408:
	ret


luaV_gettable:
.L2409:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	store.64*   %arg4 -> 0[val]
	store.32    $0 -> 0[loop]
	br          .L2413

.L2413:
	load.32     %r10257 <- 0[loop]
	setlt.32    %r10258 <- %r10257, $100
	br          %r10258, .L2410, .L2412

.L2410:
	load.64*    %r10259 <- 0[t]
	load.32     %r10260 <- 8[%r10259]
	scast.32    %r10261 <- (32) %r10260
	seteq.32    %r10262 <- %r10261, $5
	br          %r10262, .L2414, .L2415

.L2414:
	load.64*    %r10263 <- 0[t]
	load.64*    %r10264 <- 0[%r10263]
	add.64*     %r10265 <- %r10264, $0
	store.64*   %r10265 -> 0[h]
	load.64*    %r10266 <- 0[h]
	load.64*    %r10267 <- 0[key]
	push.64*    %r10266
	push.64*    %r10267
	call.64*    %r10268 <- luaH_get
	store.64*   %r10268 -> 0[res]
	load.64*    %r10269 <- 0[res]
	load.32     %r10270 <- 8[%r10269]
	scast.32    %r10271 <- (32) %r10270
	seteq.32    %r10272 <- %r10271, $0
	br          %r10272, .L2418, .L2416

.L2418:
	load.64*    %r10273 <- 0[h]
	load.64*    %r10274 <- 16[%r10273]
	seteq.32    %r10275 <- %r10274, $0
	br          %r10275, .L2419, .L2420

.L2419:
	phisrc.64*  %phi406 <- $0
	br          .L2421

.L2420:
	load.64*    %r10276 <- 0[h]
	load.64*    %r10277 <- 16[%r10276]
	load.8      %r10278 <- 10[%r10277]
	cast.32     %r10279 <- (8) %r10278
	and.32      %r10280 <- %r10279, $1
	br          %r10280, .L2422, .L2423

.L2422:
	phisrc.64*  %phi407 <- $0
	br          .L2424

.L2423:
	load.64*    %r10281 <- 0[h]
	load.64*    %r10282 <- 16[%r10281]
	load.64*    %r10283 <- 0[L]
	load.64*    %r10284 <- 32[%r10283]
	load.64*    %r10285 <- 296[%r10284]
	push.64*    %r10282
	push.32     $0
	push.64*    %r10285
	call.64*    %r10286 <- luaT_gettm
	phisrc.64*  %phi408 <- %r10286
	br          .L2424

.L2424:
	phi.64*     %r10287 <- %phi407, %phi408
	phisrc.64*  %phi409 <- %r10287
	br          .L2421

.L2421:
	phi.64*     %r10288 <- %phi406, %phi409
	store.64*   %r10288 -> 0[tm]
	seteq.32    %r10289 <- %r10288, $0
	br          %r10289, .L2416, .L2417

.L2416:
	load.64*    %r10290 <- 0[res]
	store.64*   %r10290 -> 0[o2]
	load.64*    %r10291 <- 0[val]
	store.64*   %r10291 -> 0[o1]
	load.64*    %r10292 <- 0[o2]
	load.f64    %r10293 <- 0[%r10292]
	fpcast.f64  %r10294 <- (64) %r10293
	load.64*    %r10295 <- 0[o1]
	store.f64   %r10294 -> 0[%r10295]
	load.64*    %r10296 <- 0[o2]
	load.32     %r10297 <- 8[%r10296]
	scast.32    %r10298 <- (32) %r10297
	load.64*    %r10299 <- 0[o1]
	store.32    %r10298 -> 8[%r10299]
	br          .L2425

.L2417:
	br          .L2426

.L2415:
	load.64*    %r10300 <- 0[L]
	load.64*    %r10301 <- 0[t]
	push.64*    %r10300
	push.64*    %r10301
	push.32     $0
	call.64*    %r10302 <- luaT_gettmbyobj
	store.64*   %r10302 -> 0[tm]
	load.32     %r10303 <- 8[%r10302]
	scast.32    %r10304 <- (32) %r10303
	seteq.32    %r10305 <- %r10304, $0
	br          %r10305, .L2427, .L2428

.L2427:
	load.64*    %r10306 <- 0[L]
	load.64*    %r10307 <- 0[t]
	symaddr.64* %r10308 <- <anon symbol:0x62d001419dd0>
	push.64*    %r10306
	push.64*    %r10307
	push.64*    %r10308
	call        luaG_typeerror
	br          .L2428

.L2428:
	br          .L2426

.L2426:
	load.64*    %r10309 <- 0[tm]
	load.32     %r10310 <- 8[%r10309]
	scast.32    %r10311 <- (32) %r10310
	seteq.32    %r10312 <- %r10311, $6
	br          %r10312, .L2429, .L2430

.L2429:
	load.64*    %r10313 <- 0[L]
	load.64*    %r10314 <- 0[val]
	load.64*    %r10315 <- 0[tm]
	load.64*    %r10316 <- 0[t]
	load.64*    %r10317 <- 0[key]
	push.64*    %r10313
	push.64*    %r10314
	push.64*    %r10315
	push.64*    %r10316
	push.64*    %r10317
	call        callTMres
	br          .L2425

.L2430:
	load.64*    %r10318 <- 0[tm]
	store.64*   %r10318 -> 0[t]
	br          .L2411

.L2411:
	load.32     %r10319 <- 0[loop]
	add.32      %r10320 <- %r10319, $1
	store.32    %r10320 -> 0[loop]
	br          .L2413

.L2412:
	load.64*    %r10321 <- 0[L]
	symaddr.64* %r10322 <- <anon symbol:0x62d00141a340>
	push.64*    %r10321
	push.64*    %r10322
	call        luaG_runerror
	br          .L2425

.L2425:
	ret


luaV_settable:
.L2431:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	store.64*   %arg4 -> 0[val]
	store.32    $0 -> 0[loop]
	br          .L2435

.L2435:
	load.32     %r10323 <- 0[loop]
	setlt.32    %r10324 <- %r10323, $100
	br          %r10324, .L2432, .L2434

.L2432:
	load.64*    %r10325 <- 0[t]
	load.32     %r10326 <- 8[%r10325]
	scast.32    %r10327 <- (32) %r10326
	seteq.32    %r10328 <- %r10327, $5
	br          %r10328, .L2436, .L2437

.L2436:
	load.64*    %r10329 <- 0[t]
	load.64*    %r10330 <- 0[%r10329]
	add.64*     %r10331 <- %r10330, $0
	store.64*   %r10331 -> 0[h]
	load.64*    %r10332 <- 0[L]
	load.64*    %r10333 <- 0[h]
	load.64*    %r10334 <- 0[key]
	push.64*    %r10332
	push.64*    %r10333
	push.64*    %r10334
	call.64*    %r10335 <- luaH_set
	store.64*   %r10335 -> 0[oldval]
	load.64*    %r10336 <- 0[oldval]
	load.32     %r10337 <- 8[%r10336]
	seteq.32    %r10338 <- %r10337, $0
	br          %r10338, .L2440, .L2438

.L2440:
	load.64*    %r10339 <- 0[h]
	load.64*    %r10340 <- 16[%r10339]
	seteq.32    %r10341 <- %r10340, $0
	br          %r10341, .L2441, .L2442

.L2441:
	phisrc.64*  %phi410 <- $0
	br          .L2443

.L2442:
	load.64*    %r10342 <- 0[h]
	load.64*    %r10343 <- 16[%r10342]
	load.8      %r10344 <- 10[%r10343]
	cast.32     %r10345 <- (8) %r10344
	and.32      %r10346 <- %r10345, $2
	br          %r10346, .L2444, .L2445

.L2444:
	phisrc.64*  %phi411 <- $0
	br          .L2446

.L2445:
	load.64*    %r10347 <- 0[h]
	load.64*    %r10348 <- 16[%r10347]
	load.64*    %r10349 <- 0[L]
	load.64*    %r10350 <- 32[%r10349]
	load.64*    %r10351 <- 304[%r10350]
	push.64*    %r10348
	push.32     $1
	push.64*    %r10351
	call.64*    %r10352 <- luaT_gettm
	phisrc.64*  %phi412 <- %r10352
	br          .L2446

.L2446:
	phi.64*     %r10353 <- %phi411, %phi412
	phisrc.64*  %phi413 <- %r10353
	br          .L2443

.L2443:
	phi.64*     %r10354 <- %phi410, %phi413
	store.64*   %r10354 -> 0[tm]
	seteq.32    %r10355 <- %r10354, $0
	br          %r10355, .L2438, .L2439

.L2438:
	load.64*    %r10356 <- 0[val]
	store.64*   %r10356 -> 0[o2]
	load.64*    %r10357 <- 0[oldval]
	store.64*   %r10357 -> 0[o1]
	load.64*    %r10358 <- 0[o2]
	load.f64    %r10359 <- 0[%r10358]
	fpcast.f64  %r10360 <- (64) %r10359
	load.64*    %r10361 <- 0[o1]
	store.f64   %r10360 -> 0[%r10361]
	load.64*    %r10362 <- 0[o2]
	load.32     %r10363 <- 8[%r10362]
	scast.32    %r10364 <- (32) %r10363
	load.64*    %r10365 <- 0[o1]
	store.32    %r10364 -> 8[%r10365]
	load.64*    %r10366 <- 0[h]
	store.8     $0 -> 10[%r10366]
	load.64*    %r10367 <- 0[val]
	load.32     %r10368 <- 8[%r10367]
	setge.32    %r10369 <- %r10368, $4
	br          %r10369, .L2450, .L2448

.L2450:
	load.64*    %r10370 <- 0[val]
	load.64*    %r10371 <- 0[%r10370]
	load.8      %r10372 <- 9[%r10371]
	cast.32     %r10373 <- (8) %r10372
	and.32      %r10374 <- %r10373, $3
	br          %r10374, .L2449, .L2448

.L2449:
	load.64*    %r10375 <- 0[h]
	ptrcast.64* %r10376 <- (64) %r10375
	load.8      %r10377 <- 9[%r10376]
	cast.32     %r10378 <- (8) %r10377
	and.32      %r10379 <- %r10378, $4
	br          %r10379, .L2447, .L2448

.L2447:
	load.64*    %r10380 <- 0[L]
	load.64*    %r10381 <- 0[h]
	push.64*    %r10380
	push.64*    %r10381
	call        luaC_barrierback
	br          .L2448

.L2448:
	br          .L2451

.L2439:
	br          .L2452

.L2437:
	load.64*    %r10382 <- 0[L]
	load.64*    %r10383 <- 0[t]
	push.64*    %r10382
	push.64*    %r10383
	push.32     $1
	call.64*    %r10384 <- luaT_gettmbyobj
	store.64*   %r10384 -> 0[tm]
	load.32     %r10385 <- 8[%r10384]
	scast.32    %r10386 <- (32) %r10385
	seteq.32    %r10387 <- %r10386, $0
	br          %r10387, .L2453, .L2454

.L2453:
	load.64*    %r10388 <- 0[L]
	load.64*    %r10389 <- 0[t]
	symaddr.64* %r10390 <- <anon symbol:0x62d00141ed28>
	push.64*    %r10388
	push.64*    %r10389
	push.64*    %r10390
	call        luaG_typeerror
	br          .L2454

.L2454:
	br          .L2452

.L2452:
	load.64*    %r10391 <- 0[tm]
	load.32     %r10392 <- 8[%r10391]
	scast.32    %r10393 <- (32) %r10392
	seteq.32    %r10394 <- %r10393, $6
	br          %r10394, .L2455, .L2456

.L2455:
	load.64*    %r10395 <- 0[L]
	load.64*    %r10396 <- 0[tm]
	load.64*    %r10397 <- 0[t]
	load.64*    %r10398 <- 0[key]
	load.64*    %r10399 <- 0[val]
	push.64*    %r10395
	push.64*    %r10396
	push.64*    %r10397
	push.64*    %r10398
	push.64*    %r10399
	call        callTM
	br          .L2451

.L2456:
	load.64*    %r10400 <- 0[tm]
	store.64*   %r10400 -> 0[o2]
	symaddr.64* %r10401 <- temp
	store.64*   %r10401 -> 0[o1]
	load.64*    %r10402 <- 0[o2]
	load.f64    %r10403 <- 0[%r10402]
	fpcast.f64  %r10404 <- (64) %r10403
	load.64*    %r10405 <- 0[o1]
	store.f64   %r10404 -> 0[%r10405]
	load.64*    %r10406 <- 0[o2]
	load.32     %r10407 <- 8[%r10406]
	scast.32    %r10408 <- (32) %r10407
	load.64*    %r10409 <- 0[o1]
	store.32    %r10408 -> 8[%r10409]
	symaddr.64* %r10410 <- temp
	store.64*   %r10410 -> 0[t]
	br          .L2433

.L2433:
	load.32     %r10411 <- 0[loop]
	add.32      %r10412 <- %r10411, $1
	store.32    %r10412 -> 0[loop]
	br          .L2435

.L2434:
	load.64*    %r10413 <- 0[L]
	symaddr.64* %r10414 <- <anon symbol:0x62d00141fd78>
	push.64*    %r10413
	push.64*    %r10414
	call        luaG_runerror
	br          .L2451

.L2451:
	ret


call_binTM:
.L2457:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	store.64*   %arg4 -> 0[res]
	store.32    %arg5 -> 0[event]
	load.64*    %r10415 <- 0[L]
	load.64*    %r10416 <- 0[p1]
	load.32     %r10417 <- 0[event]
	push.64*    %r10415
	push.64*    %r10416
	push.32     %r10417
	call.64*    %r10418 <- luaT_gettmbyobj
	store.64*   %r10418 -> 0[tm]
	load.64*    %r10419 <- 0[tm]
	load.32     %r10420 <- 8[%r10419]
	scast.32    %r10421 <- (32) %r10420
	seteq.32    %r10422 <- %r10421, $0
	br          %r10422, .L2458, .L2459

.L2458:
	load.64*    %r10423 <- 0[L]
	load.64*    %r10424 <- 0[p2]
	load.32     %r10425 <- 0[event]
	push.64*    %r10423
	push.64*    %r10424
	push.32     %r10425
	call.64*    %r10426 <- luaT_gettmbyobj
	store.64*   %r10426 -> 0[tm]
	br          .L2459

.L2459:
	load.64*    %r10427 <- 0[tm]
	load.32     %r10428 <- 8[%r10427]
	scast.32    %r10429 <- (32) %r10428
	seteq.32    %r10430 <- %r10429, $0
	br          %r10430, .L2460, .L2461

.L2460:
	phisrc.32   %phi414(return) <- $0
	br          .L2462

.L2461:
	load.64*    %r10432 <- 0[L]
	load.64*    %r10433 <- 0[res]
	load.64*    %r10434 <- 0[tm]
	load.64*    %r10435 <- 0[p1]
	load.64*    %r10436 <- 0[p2]
	push.64*    %r10432
	push.64*    %r10433
	push.64*    %r10434
	push.64*    %r10435
	push.64*    %r10436
	call        callTMres
	phisrc.32   %phi415(return) <- $1
	br          .L2462

.L2462:
	phi.32      %r10431 <- %phi414(return), %phi415(return)
	ret.32      %r10431


get_compTM:
.L2463:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[mt1]
	store.64*   %arg3 -> 0[mt2]
	store.32    %arg4 -> 0[event]
	load.64*    %r10437 <- 0[mt1]
	seteq.32    %r10438 <- %r10437, $0
	br          %r10438, .L2464, .L2465

.L2464:
	phisrc.64*  %phi416 <- $0
	br          .L2466

.L2465:
	load.64*    %r10439 <- 0[mt1]
	load.8      %r10440 <- 10[%r10439]
	cast.32     %r10441 <- (8) %r10440
	load.32     %r10442 <- 0[event]
	scast.32    %r10443 <- (32) %r10442
	shl.32      %r10444 <- $1, %r10443
	and.32      %r10445 <- %r10441, %r10444
	br          %r10445, .L2467, .L2468

.L2467:
	phisrc.64*  %phi417 <- $0
	br          .L2469

.L2468:
	load.64*    %r10446 <- 0[mt1]
	load.32     %r10447 <- 0[event]
	load.64*    %r10448 <- 0[L]
	load.64*    %r10449 <- 32[%r10448]
	add.64*     %r10450 <- %r10449, $296
	load.32     %r10451 <- 0[event]
	scast.64    %r10452 <- (32) %r10451
	muls.64     %r10453 <- %r10452, $8
	add.64*     %r10454 <- %r10450, %r10453
	load.64*    %r10455 <- 0[%r10454]
	push.64*    %r10446
	push.32     %r10447
	push.64*    %r10455
	call.64*    %r10456 <- luaT_gettm
	phisrc.64*  %phi418 <- %r10456
	br          .L2469

.L2469:
	phi.64*     %r10457 <- %phi417, %phi418
	phisrc.64*  %phi419 <- %r10457
	br          .L2466

.L2466:
	phi.64*     %r10458 <- %phi416, %phi419
	store.64*   %r10458 -> 0[tm1]
	load.64*    %r10459 <- 0[tm1]
	seteq.32    %r10460 <- %r10459, $0
	br          %r10460, .L2470, .L2471

.L2470:
	phisrc.64*  %phi420(return) <- $0
	br          .L2472

.L2471:
	load.64*    %r10462 <- 0[mt1]
	load.64*    %r10463 <- 0[mt2]
	seteq.32    %r10464 <- %r10462, %r10463
	br          %r10464, .L2473, .L2474

.L2473:
	load.64*    %r10465 <- 0[tm1]
	phisrc.64*  %phi421(return) <- %r10465
	br          .L2472

.L2474:
	load.64*    %r10466 <- 0[mt2]
	seteq.32    %r10467 <- %r10466, $0
	br          %r10467, .L2475, .L2476

.L2475:
	phisrc.64*  %phi422 <- $0
	br          .L2477

.L2476:
	load.64*    %r10468 <- 0[mt2]
	load.8      %r10469 <- 10[%r10468]
	cast.32     %r10470 <- (8) %r10469
	load.32     %r10471 <- 0[event]
	scast.32    %r10472 <- (32) %r10471
	shl.32      %r10473 <- $1, %r10472
	and.32      %r10474 <- %r10470, %r10473
	br          %r10474, .L2478, .L2479

.L2478:
	phisrc.64*  %phi423 <- $0
	br          .L2480

.L2479:
	load.64*    %r10475 <- 0[mt2]
	load.32     %r10476 <- 0[event]
	load.64*    %r10477 <- 0[L]
	load.64*    %r10478 <- 32[%r10477]
	add.64*     %r10479 <- %r10478, $296
	load.32     %r10480 <- 0[event]
	scast.64    %r10481 <- (32) %r10480
	muls.64     %r10482 <- %r10481, $8
	add.64*     %r10483 <- %r10479, %r10482
	load.64*    %r10484 <- 0[%r10483]
	push.64*    %r10475
	push.32     %r10476
	push.64*    %r10484
	call.64*    %r10485 <- luaT_gettm
	phisrc.64*  %phi424 <- %r10485
	br          .L2480

.L2480:
	phi.64*     %r10486 <- %phi423, %phi424
	phisrc.64*  %phi425 <- %r10486
	br          .L2477

.L2477:
	phi.64*     %r10487 <- %phi422, %phi425
	store.64*   %r10487 -> 0[tm2]
	load.64*    %r10488 <- 0[tm2]
	seteq.32    %r10489 <- %r10488, $0
	br          %r10489, .L2481, .L2482

.L2481:
	phisrc.64*  %phi426(return) <- $0
	br          .L2472

.L2482:
	load.64*    %r10490 <- 0[tm1]
	load.64*    %r10491 <- 0[tm2]
	push.64*    %r10490
	push.64*    %r10491
	call.32     %r10492 <- luaO_rawequalObj
	br          %r10492, .L2483, .L2484

.L2483:
	load.64*    %r10493 <- 0[tm1]
	phisrc.64*  %phi427(return) <- %r10493
	br          .L2472

.L2484:
	phisrc.64*  %phi428(return) <- $0
	br          .L2472

.L2472:
	phi.64*     %r10461 <- %phi420(return), %phi421(return), %phi426(return), %phi427(return), %phi428(return)
	ret.64*     %r10461


call_orderTM:
.L2485:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	store.32    %arg4 -> 0[event]
	load.64*    %r10494 <- 0[L]
	load.64*    %r10495 <- 0[p1]
	load.32     %r10496 <- 0[event]
	push.64*    %r10494
	push.64*    %r10495
	push.32     %r10496
	call.64*    %r10497 <- luaT_gettmbyobj
	store.64*   %r10497 -> 0[tm1]
	load.64*    %r10498 <- 0[tm1]
	load.32     %r10499 <- 8[%r10498]
	scast.32    %r10500 <- (32) %r10499
	seteq.32    %r10501 <- %r10500, $0
	br          %r10501, .L2486, .L2487

.L2486:
	phisrc.32   %phi429(return) <- $0xffffffff
	br          .L2488

.L2487:
	load.64*    %r10503 <- 0[L]
	load.64*    %r10504 <- 0[p2]
	load.32     %r10505 <- 0[event]
	push.64*    %r10503
	push.64*    %r10504
	push.32     %r10505
	call.64*    %r10506 <- luaT_gettmbyobj
	store.64*   %r10506 -> 0[tm2]
	load.64*    %r10507 <- 0[tm1]
	load.64*    %r10508 <- 0[tm2]
	push.64*    %r10507
	push.64*    %r10508
	call.32     %r10509 <- luaO_rawequalObj
	br          %r10509, .L2490, .L2489

.L2489:
	phisrc.32   %phi430(return) <- $0xffffffff
	br          .L2488

.L2490:
	load.64*    %r10510 <- 0[L]
	load.64*    %r10511 <- 0[L]
	load.64*    %r10512 <- 16[%r10511]
	load.64*    %r10513 <- 0[tm1]
	load.64*    %r10514 <- 0[p1]
	load.64*    %r10515 <- 0[p2]
	push.64*    %r10510
	push.64*    %r10512
	push.64*    %r10513
	push.64*    %r10514
	push.64*    %r10515
	call        callTMres
	load.64*    %r10516 <- 0[L]
	load.64*    %r10517 <- 16[%r10516]
	load.32     %r10518 <- 8[%r10517]
	seteq.32    %r10519 <- %r10518, $0
	br          %r10519, .L2491, .L2492

.L2491:
	phisrc.32   %phi431 <- $1
	br          .L2493

.L2492:
	load.64*    %r10520 <- 0[L]
	load.64*    %r10521 <- 16[%r10520]
	load.32     %r10522 <- 8[%r10521]
	seteq.32    %r10523 <- %r10522, $1
	br          %r10523, .L2494, .L2495

.L2494:
	load.64*    %r10524 <- 0[L]
	load.64*    %r10525 <- 16[%r10524]
	load.32     %r10526 <- 0[%r10525]
	seteq.32    %r10527 <- %r10526, $0
	phisrc.32   %phi432 <- %r10527
	br          .L2496

.L2495:
	phisrc.32   %phi433 <- $0
	br          .L2496

.L2496:
	phi.32      %r10528 <- %phi432, %phi433
	phisrc.32   %phi434 <- %r10528
	br          .L2493

.L2493:
	phi.32      %r10529 <- %phi431, %phi434
	seteq.32    %r10530 <- %r10529, $0
	phisrc.32   %phi435(return) <- %r10530
	br          .L2488

.L2488:
	phi.32      %r10502 <- %phi429(return), %phi430(return), %phi435(return)
	ret.32      %r10502


l_strcmp:
.L2497:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[rs]
	load.64*    %r10531 <- 0[ls]
	add.64*     %r10532 <- %r10531, $24
	ptrcast.64* %r10533 <- (64) %r10532
	store.64*   %r10533 -> 0[l]
	load.64*    %r10534 <- 0[ls]
	load.64     %r10535 <- 16[%r10534]
	cast.64     %r10536 <- (64) %r10535
	store.64    %r10536 -> 0[ll]
	load.64*    %r10537 <- 0[rs]
	add.64*     %r10538 <- %r10537, $24
	ptrcast.64* %r10539 <- (64) %r10538
	store.64*   %r10539 -> 0[r]
	load.64*    %r10540 <- 0[rs]
	load.64     %r10541 <- 16[%r10540]
	cast.64     %r10542 <- (64) %r10541
	store.64    %r10542 -> 0[lr]
	br          .L2501

.L2501:
	br          .L2498

.L2498:
	load.64*    %r10543 <- 0[l]
	load.64*    %r10544 <- 0[r]
	push.64*    %r10543
	push.64*    %r10544
	call.32     %r10545 <- strcoll
	store.32    %r10545 -> 0[temp]
	load.32     %r10546 <- 0[temp]
	setne.32    %r10547 <- %r10546, $0
	br          %r10547, .L2502, .L2503

.L2502:
	load.32     %r10548 <- 0[temp]
	phisrc.32   %phi436(return) <- %r10548
	br          .L2504

.L2503:
	load.64*    %r10550 <- 0[l]
	push.64*    %r10550
	call.64     %r10551 <- strlen
	store.64    %r10551 -> 0[len]
	load.64     %r10552 <- 0[len]
	load.64     %r10553 <- 0[lr]
	seteq.32    %r10554 <- %r10552, %r10553
	br          %r10554, .L2506, .L2507

.L2506:
	load.64     %r10555 <- 0[len]
	load.64     %r10556 <- 0[ll]
	seteq.32    %r10557 <- %r10555, %r10556
	select.32   %r10558 <- %r10557, $0, $1
	phisrc.32   %phi437(return) <- %r10558
	br          .L2504

.L2507:
	load.64     %r10559 <- 0[len]
	load.64     %r10560 <- 0[ll]
	seteq.32    %r10561 <- %r10559, %r10560
	br          %r10561, .L2509, .L2510

.L2509:
	phisrc.32   %phi438(return) <- $0xffffffff
	br          .L2504

.L2510:
	br          .L2508

.L2508:
	load.64     %r10562 <- 0[len]
	add.64      %r10563 <- %r10562, $1
	store.64    %r10563 -> 0[len]
	load.64     %r10564 <- 0[len]
	load.64*    %r10565 <- 0[l]
	cast.64     %r10566 <- (64) %r10565
	add.64      %r10567 <- %r10566, %r10564
	ptrcast.64* %r10568 <- (64) %r10567
	store.64*   %r10568 -> 0[l]
	load.64     %r10569 <- 0[len]
	load.64     %r10570 <- 0[ll]
	cast.64     %r10571 <- (64) %r10570
	sub.64      %r10572 <- %r10571, %r10569
	cast.64     %r10573 <- (64) %r10572
	store.64    %r10573 -> 0[ll]
	load.64     %r10574 <- 0[len]
	load.64*    %r10575 <- 0[r]
	cast.64     %r10576 <- (64) %r10575
	add.64      %r10577 <- %r10576, %r10574
	ptrcast.64* %r10578 <- (64) %r10577
	store.64*   %r10578 -> 0[r]
	load.64     %r10579 <- 0[len]
	load.64     %r10580 <- 0[lr]
	cast.64     %r10581 <- (64) %r10580
	sub.64      %r10582 <- %r10581, %r10579
	cast.64     %r10583 <- (64) %r10582
	store.64    %r10583 -> 0[lr]
	br          .L2505

.L2505:
	br          .L2499

.L2499:
	br          .L2501

.L2504:
	phi.32      %r10549 <- %phi436(return), %phi437(return), %phi438(return)
	ret.32      %r10549


luaV_lessthan:
.L2511:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[l]
	store.64*   %arg3 -> 0[r]
	load.64*    %r10584 <- 0[l]
	load.32     %r10585 <- 8[%r10584]
	scast.32    %r10586 <- (32) %r10585
	load.64*    %r10587 <- 0[r]
	load.32     %r10588 <- 8[%r10587]
	scast.32    %r10589 <- (32) %r10588
	setne.32    %r10590 <- %r10586, %r10589
	br          %r10590, .L2512, .L2513

.L2512:
	load.64*    %r10591 <- 0[L]
	load.64*    %r10592 <- 0[l]
	load.64*    %r10593 <- 0[r]
	push.64*    %r10591
	push.64*    %r10592
	push.64*    %r10593
	call.32     %r10594 <- luaG_ordererror
	phisrc.32   %phi439(return) <- %r10594
	br          .L2514

.L2513:
	load.64*    %r10596 <- 0[l]
	load.32     %r10597 <- 8[%r10596]
	scast.32    %r10598 <- (32) %r10597
	seteq.32    %r10599 <- %r10598, $3
	br          %r10599, .L2516, .L2517

.L2516:
	load.64*    %r10600 <- 0[l]
	load.f64    %r10601 <- 0[%r10600]
	fpcast.f64  %r10602 <- (64) %r10601
	load.64*    %r10603 <- 0[r]
	load.f64    %r10604 <- 0[%r10603]
	fpcast.f64  %r10605 <- (64) %r10604
	setlt.32    %r10606 <- %r10602, %r10605
	phisrc.32   %phi440(return) <- %r10606
	br          .L2514

.L2517:
	load.64*    %r10607 <- 0[l]
	load.32     %r10608 <- 8[%r10607]
	scast.32    %r10609 <- (32) %r10608
	seteq.32    %r10610 <- %r10609, $4
	br          %r10610, .L2519, .L2520

.L2519:
	load.64*    %r10611 <- 0[l]
	load.64*    %r10612 <- 0[%r10611]
	add.64*     %r10613 <- %r10612, $0
	load.64*    %r10614 <- 0[r]
	load.64*    %r10615 <- 0[%r10614]
	add.64*     %r10616 <- %r10615, $0
	push.64*    %r10613
	push.64*    %r10616
	call.32     %r10617 <- l_strcmp
	setlt.32    %r10618 <- %r10617, $0
	phisrc.32   %phi441(return) <- %r10618
	br          .L2514

.L2520:
	load.64*    %r10619 <- 0[L]
	load.64*    %r10620 <- 0[l]
	load.64*    %r10621 <- 0[r]
	push.64*    %r10619
	push.64*    %r10620
	push.64*    %r10621
	push.32     $13
	call.32     %r10622 <- call_orderTM
	store.32    %r10622 -> 0[res]
	setne.32    %r10623 <- %r10622, $0xffffffff
	br          %r10623, .L2522, .L2523

.L2522:
	load.32     %r10624 <- 0[res]
	phisrc.32   %phi442(return) <- %r10624
	br          .L2514

.L2523:
	br          .L2521

.L2521:
	br          .L2518

.L2518:
	br          .L2515

.L2515:
	load.64*    %r10625 <- 0[L]
	load.64*    %r10626 <- 0[l]
	load.64*    %r10627 <- 0[r]
	push.64*    %r10625
	push.64*    %r10626
	push.64*    %r10627
	call.32     %r10628 <- luaG_ordererror
	phisrc.32   %phi443(return) <- %r10628
	br          .L2514

.L2514:
	phi.32      %r10595 <- %phi439(return), %phi440(return), %phi441(return), %phi442(return), %phi443(return)
	ret.32      %r10595


lessequal:
.L2524:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[l]
	store.64*   %arg3 -> 0[r]
	load.64*    %r10629 <- 0[l]
	load.32     %r10630 <- 8[%r10629]
	scast.32    %r10631 <- (32) %r10630
	load.64*    %r10632 <- 0[r]
	load.32     %r10633 <- 8[%r10632]
	scast.32    %r10634 <- (32) %r10633
	setne.32    %r10635 <- %r10631, %r10634
	br          %r10635, .L2525, .L2526

.L2525:
	load.64*    %r10636 <- 0[L]
	load.64*    %r10637 <- 0[l]
	load.64*    %r10638 <- 0[r]
	push.64*    %r10636
	push.64*    %r10637
	push.64*    %r10638
	call.32     %r10639 <- luaG_ordererror
	phisrc.32   %phi444(return) <- %r10639
	br          .L2527

.L2526:
	load.64*    %r10641 <- 0[l]
	load.32     %r10642 <- 8[%r10641]
	scast.32    %r10643 <- (32) %r10642
	seteq.32    %r10644 <- %r10643, $3
	br          %r10644, .L2529, .L2530

.L2529:
	load.64*    %r10645 <- 0[l]
	load.f64    %r10646 <- 0[%r10645]
	fpcast.f64  %r10647 <- (64) %r10646
	load.64*    %r10648 <- 0[r]
	load.f64    %r10649 <- 0[%r10648]
	fpcast.f64  %r10650 <- (64) %r10649
	setle.32    %r10651 <- %r10647, %r10650
	phisrc.32   %phi445(return) <- %r10651
	br          .L2527

.L2530:
	load.64*    %r10652 <- 0[l]
	load.32     %r10653 <- 8[%r10652]
	scast.32    %r10654 <- (32) %r10653
	seteq.32    %r10655 <- %r10654, $4
	br          %r10655, .L2532, .L2533

.L2532:
	load.64*    %r10656 <- 0[l]
	load.64*    %r10657 <- 0[%r10656]
	add.64*     %r10658 <- %r10657, $0
	load.64*    %r10659 <- 0[r]
	load.64*    %r10660 <- 0[%r10659]
	add.64*     %r10661 <- %r10660, $0
	push.64*    %r10658
	push.64*    %r10661
	call.32     %r10662 <- l_strcmp
	setle.32    %r10663 <- %r10662, $0
	phisrc.32   %phi446(return) <- %r10663
	br          .L2527

.L2533:
	load.64*    %r10664 <- 0[L]
	load.64*    %r10665 <- 0[l]
	load.64*    %r10666 <- 0[r]
	push.64*    %r10664
	push.64*    %r10665
	push.64*    %r10666
	push.32     $14
	call.32     %r10667 <- call_orderTM
	store.32    %r10667 -> 0[res]
	setne.32    %r10668 <- %r10667, $0xffffffff
	br          %r10668, .L2535, .L2536

.L2535:
	load.32     %r10669 <- 0[res]
	phisrc.32   %phi447(return) <- %r10669
	br          .L2527

.L2536:
	load.64*    %r10670 <- 0[L]
	load.64*    %r10671 <- 0[r]
	load.64*    %r10672 <- 0[l]
	push.64*    %r10670
	push.64*    %r10671
	push.64*    %r10672
	push.32     $13
	call.32     %r10673 <- call_orderTM
	store.32    %r10673 -> 0[res]
	setne.32    %r10674 <- %r10673, $0xffffffff
	br          %r10674, .L2538, .L2539

.L2538:
	load.32     %r10675 <- 0[res]
	seteq.32    %r10676 <- %r10675, $0
	phisrc.32   %phi448(return) <- %r10676
	br          .L2527

.L2539:
	br          .L2537

.L2537:
	br          .L2534

.L2534:
	br          .L2531

.L2531:
	br          .L2528

.L2528:
	load.64*    %r10677 <- 0[L]
	load.64*    %r10678 <- 0[l]
	load.64*    %r10679 <- 0[r]
	push.64*    %r10677
	push.64*    %r10678
	push.64*    %r10679
	call.32     %r10680 <- luaG_ordererror
	phisrc.32   %phi449(return) <- %r10680
	br          .L2527

.L2527:
	phi.32      %r10640 <- %phi444(return), %phi445(return), %phi446(return), %phi447(return), %phi448(return), %phi449(return)
	ret.32      %r10640


luaV_equalval:
.L2540:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t1]
	store.64*   %arg3 -> 0[t2]
	load.64*    %r10681 <- 0[t1]
	load.32     %r10682 <- 8[%r10681]
	switch.32   %r10682, 0 -> .L2542, 1 -> .L2544, 2 -> .L2545, 3 -> .L2543, 5 -> .L2547, 7 -> .L2546, default -> .L2548

.L2542:
	phisrc.32   %phi450(return) <- $1
	br          .L2549

.L2543:
	load.64*    %r10684 <- 0[t1]
	load.f64    %r10685 <- 0[%r10684]
	fpcast.f64  %r10686 <- (64) %r10685
	load.64*    %r10687 <- 0[t2]
	load.f64    %r10688 <- 0[%r10687]
	fpcast.f64  %r10689 <- (64) %r10688
	seteq.32    %r10690 <- %r10686, %r10689
	phisrc.32   %phi451(return) <- %r10690
	br          .L2549

.L2544:
	load.64*    %r10691 <- 0[t1]
	load.32     %r10692 <- 0[%r10691]
	scast.32    %r10693 <- (32) %r10692
	load.64*    %r10694 <- 0[t2]
	load.32     %r10695 <- 0[%r10694]
	scast.32    %r10696 <- (32) %r10695
	seteq.32    %r10697 <- %r10693, %r10696
	phisrc.32   %phi452(return) <- %r10697
	br          .L2549

.L2545:
	load.64*    %r10698 <- 0[t1]
	load.64*    %r10699 <- 0[%r10698]
	load.64*    %r10700 <- 0[t2]
	load.64*    %r10701 <- 0[%r10700]
	seteq.32    %r10702 <- %r10699, %r10701
	phisrc.32   %phi453(return) <- %r10702
	br          .L2549

.L2546:
	load.64*    %r10703 <- 0[t1]
	load.64*    %r10704 <- 0[%r10703]
	add.64*     %r10705 <- %r10704, $0
	add.64*     %r10706 <- %r10705, $0
	load.64*    %r10707 <- 0[t2]
	load.64*    %r10708 <- 0[%r10707]
	add.64*     %r10709 <- %r10708, $0
	add.64*     %r10710 <- %r10709, $0
	seteq.32    %r10711 <- %r10706, %r10710
	br          %r10711, .L2550, .L2551

.L2550:
	phisrc.32   %phi454(return) <- $1
	br          .L2549

.L2551:
	load.64*    %r10712 <- 0[L]
	load.64*    %r10713 <- 0[t1]
	load.64*    %r10714 <- 0[%r10713]
	load.64*    %r10715 <- 16[%r10714]
	load.64*    %r10716 <- 0[t2]
	load.64*    %r10717 <- 0[%r10716]
	load.64*    %r10718 <- 16[%r10717]
	push.64*    %r10712
	push.64*    %r10715
	push.64*    %r10718
	push.32     $4
	call.64*    %r10719 <- get_compTM
	store.64*   %r10719 -> 0[tm]
	br          .L2541

.L2547:
	load.64*    %r10720 <- 0[t1]
	load.64*    %r10721 <- 0[%r10720]
	add.64*     %r10722 <- %r10721, $0
	load.64*    %r10723 <- 0[t2]
	load.64*    %r10724 <- 0[%r10723]
	add.64*     %r10725 <- %r10724, $0
	seteq.32    %r10726 <- %r10722, %r10725
	br          %r10726, .L2552, .L2553

.L2552:
	phisrc.32   %phi455(return) <- $1
	br          .L2549

.L2553:
	load.64*    %r10727 <- 0[L]
	load.64*    %r10728 <- 0[t1]
	load.64*    %r10729 <- 0[%r10728]
	load.64*    %r10730 <- 16[%r10729]
	load.64*    %r10731 <- 0[t2]
	load.64*    %r10732 <- 0[%r10731]
	load.64*    %r10733 <- 16[%r10732]
	push.64*    %r10727
	push.64*    %r10730
	push.64*    %r10733
	push.32     $4
	call.64*    %r10734 <- get_compTM
	store.64*   %r10734 -> 0[tm]
	br          .L2541

.L2548:
	load.64*    %r10735 <- 0[t1]
	load.64*    %r10736 <- 0[%r10735]
	load.64*    %r10737 <- 0[t2]
	load.64*    %r10738 <- 0[%r10737]
	seteq.32    %r10739 <- %r10736, %r10738
	phisrc.32   %phi456(return) <- %r10739
	br          .L2549

.L2541:
	load.64*    %r10740 <- 0[tm]
	seteq.32    %r10741 <- %r10740, $0
	br          %r10741, .L2554, .L2555

.L2554:
	phisrc.32   %phi457(return) <- $0
	br          .L2549

.L2555:
	load.64*    %r10742 <- 0[L]
	load.64*    %r10743 <- 0[L]
	load.64*    %r10744 <- 16[%r10743]
	load.64*    %r10745 <- 0[tm]
	load.64*    %r10746 <- 0[t1]
	load.64*    %r10747 <- 0[t2]
	push.64*    %r10742
	push.64*    %r10744
	push.64*    %r10745
	push.64*    %r10746
	push.64*    %r10747
	call        callTMres
	load.64*    %r10748 <- 0[L]
	load.64*    %r10749 <- 16[%r10748]
	load.32     %r10750 <- 8[%r10749]
	seteq.32    %r10751 <- %r10750, $0
	br          %r10751, .L2556, .L2557

.L2556:
	phisrc.32   %phi458 <- $1
	br          .L2558

.L2557:
	load.64*    %r10752 <- 0[L]
	load.64*    %r10753 <- 16[%r10752]
	load.32     %r10754 <- 8[%r10753]
	seteq.32    %r10755 <- %r10754, $1
	br          %r10755, .L2559, .L2560

.L2559:
	load.64*    %r10756 <- 0[L]
	load.64*    %r10757 <- 16[%r10756]
	load.32     %r10758 <- 0[%r10757]
	seteq.32    %r10759 <- %r10758, $0
	phisrc.32   %phi459 <- %r10759
	br          .L2561

.L2560:
	phisrc.32   %phi460 <- $0
	br          .L2561

.L2561:
	phi.32      %r10760 <- %phi459, %phi460
	phisrc.32   %phi461 <- %r10760
	br          .L2558

.L2558:
	phi.32      %r10761 <- %phi458, %phi461
	seteq.32    %r10762 <- %r10761, $0
	phisrc.32   %phi462(return) <- %r10762
	br          .L2549

.L2549:
	phi.32      %r10683 <- %phi450(return), %phi451(return), %phi452(return), %phi453(return), %phi454(return), %phi455(return), %phi456(return), %phi457(return), %phi462(return)
	ret.32      %r10683


luaV_concat:
.L2562:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[total]
	store.32    %arg3 -> 0[last]
	br          .L2563

.L2563:
	load.64*    %r10763 <- 0[L]
	load.64*    %r10764 <- 24[%r10763]
	load.32     %r10765 <- 0[last]
	scast.64    %r10766 <- (32) %r10765
	muls.64     %r10767 <- %r10766, $16
	add.64*     %r10768 <- %r10764, %r10767
	add.64*     %r10769 <- %r10768, $16
	store.64*   %r10769 -> 0[top]
	store.32    $2 -> 0[n]
	load.64*    %r10770 <- 0[top]
	sub.64*     %r10771 <- %r10770, $32
	load.32     %r10772 <- 8[%r10771]
	seteq.32    %r10773 <- %r10772, $4
	br          %r10773, .L2568, .L2569

.L2569:
	load.64*    %r10774 <- 0[top]
	sub.64*     %r10775 <- %r10774, $32
	load.32     %r10776 <- 8[%r10775]
	seteq.32    %r10777 <- %r10776, $3
	br          %r10777, .L2568, .L2566

.L2568:
	load.64*    %r10778 <- 0[top]
	sub.64*     %r10779 <- %r10778, $16
	load.32     %r10780 <- 8[%r10779]
	seteq.32    %r10781 <- %r10780, $4
	br          %r10781, .L2567, .L2570

.L2570:
	load.64*    %r10782 <- 0[L]
	load.64*    %r10783 <- 0[top]
	sub.64*     %r10784 <- %r10783, $16
	push.64*    %r10782
	push.64*    %r10784
	call.32     %r10785 <- luaV_tostring
	br          %r10785, .L2567, .L2566

.L2566:
	load.64*    %r10786 <- 0[L]
	load.64*    %r10787 <- 0[top]
	sub.64*     %r10788 <- %r10787, $32
	load.64*    %r10789 <- 0[top]
	sub.64*     %r10790 <- %r10789, $16
	load.64*    %r10791 <- 0[top]
	sub.64*     %r10792 <- %r10791, $32
	push.64*    %r10786
	push.64*    %r10788
	push.64*    %r10790
	push.64*    %r10792
	push.32     $15
	call.32     %r10793 <- call_binTM
	br          %r10793, .L2572, .L2571

.L2571:
	load.64*    %r10794 <- 0[L]
	load.64*    %r10795 <- 0[top]
	sub.64*     %r10796 <- %r10795, $32
	load.64*    %r10797 <- 0[top]
	sub.64*     %r10798 <- %r10797, $16
	push.64*    %r10794
	push.64*    %r10796
	push.64*    %r10798
	call        luaG_concaterror
	br          .L2572

.L2572:
	br          .L2573

.L2567:
	load.64*    %r10799 <- 0[top]
	sub.64*     %r10800 <- %r10799, $16
	load.64*    %r10801 <- 0[%r10800]
	load.64     %r10802 <- 16[%r10801]
	seteq.32    %r10803 <- %r10802, $0
	br          %r10803, .L2574, .L2575

.L2574:
	load.64*    %r10804 <- 0[top]
	sub.64*     %r10805 <- %r10804, $32
	load.32     %r10806 <- 8[%r10805]
	seteq.32    %r10807 <- %r10806, $4
	br          %r10807, .L2576, .L2577

.L2576:
	phisrc.32   %phi463 <- $1
	br          .L2578

.L2577:
	load.64*    %r10808 <- 0[L]
	load.64*    %r10809 <- 0[top]
	sub.64*     %r10810 <- %r10809, $32
	push.64*    %r10808
	push.64*    %r10810
	call.32     %r10811 <- luaV_tostring
	phisrc.32   %phi464 <- %r10811
	br          .L2578

.L2578:
	phi.32      %r10812 <- %phi463, %phi464
	br          .L2579

.L2575:
	load.64*    %r10813 <- 0[top]
	sub.64*     %r10814 <- %r10813, $16
	load.64*    %r10815 <- 0[%r10814]
	load.64     %r10816 <- 16[%r10815]
	store.64    %r10816 -> 0[tl]
	store.32    $1 -> 0[n]
	br          .L2583

.L2583:
	load.32     %r10817 <- 0[n]
	load.32     %r10818 <- 0[total]
	setlt.32    %r10819 <- %r10817, %r10818
	br          %r10819, .L2584, .L2582

.L2584:
	load.64*    %r10820 <- 0[top]
	load.32     %r10821 <- 0[n]
	scast.64    %r10822 <- (32) %r10821
	muls.64     %r10823 <- %r10822, $16
	sub.64*     %r10824 <- %r10820, %r10823
	sub.64*     %r10825 <- %r10824, $16
	load.32     %r10826 <- 8[%r10825]
	seteq.32    %r10827 <- %r10826, $4
	br          %r10827, .L2580, .L2585

.L2585:
	load.64*    %r10828 <- 0[L]
	load.64*    %r10829 <- 0[top]
	load.32     %r10830 <- 0[n]
	scast.64    %r10831 <- (32) %r10830
	muls.64     %r10832 <- %r10831, $16
	sub.64*     %r10833 <- %r10829, %r10832
	sub.64*     %r10834 <- %r10833, $16
	push.64*    %r10828
	push.64*    %r10834
	call.32     %r10835 <- luaV_tostring
	br          %r10835, .L2580, .L2582

.L2580:
	load.64*    %r10836 <- 0[top]
	load.32     %r10837 <- 0[n]
	scast.64    %r10838 <- (32) %r10837
	muls.64     %r10839 <- %r10838, $16
	sub.64*     %r10840 <- %r10836, %r10839
	sub.64*     %r10841 <- %r10840, $16
	load.64*    %r10842 <- 0[%r10841]
	load.64     %r10843 <- 16[%r10842]
	store.64    %r10843 -> 0[l]
	load.64     %r10844 <- 0[l]
	load.64     %r10845 <- 0[tl]
	sub.64      %r10846 <- $-3, %r10845
	setae.32    %r10847 <- %r10844, %r10846
	br          %r10847, .L2586, .L2587

.L2586:
	load.64*    %r10848 <- 0[L]
	symaddr.64* %r10849 <- <anon symbol:0x62d001165d30>
	push.64*    %r10848
	push.64*    %r10849
	call        luaG_runerror
	br          .L2587

.L2587:
	load.64     %r10850 <- 0[l]
	load.64     %r10851 <- 0[tl]
	cast.64     %r10852 <- (64) %r10851
	add.64      %r10853 <- %r10852, %r10850
	cast.64     %r10854 <- (64) %r10853
	store.64    %r10854 -> 0[tl]
	br          .L2581

.L2581:
	load.32     %r10855 <- 0[n]
	add.32      %r10856 <- %r10855, $1
	store.32    %r10856 -> 0[n]
	br          .L2583

.L2582:
	load.64*    %r10857 <- 0[L]
	load.64*    %r10858 <- 0[L]
	load.64*    %r10859 <- 32[%r10858]
	add.64*     %r10860 <- %r10859, $88
	load.64     %r10861 <- 0[tl]
	push.64*    %r10857
	push.64*    %r10860
	push.64     %r10861
	call.64*    %r10862 <- luaZ_openspace
	store.64*   %r10862 -> 0[buffer]
	store.64    $0 -> 0[tl]
	load.32     %r10863 <- 0[n]
	store.32    %r10863 -> 0[i]
	br          .L2591

.L2591:
	load.32     %r10864 <- 0[i]
	setgt.32    %r10865 <- %r10864, $0
	br          %r10865, .L2588, .L2590

.L2588:
	load.64*    %r10866 <- 0[top]
	load.32     %r10867 <- 0[i]
	scast.64    %r10868 <- (32) %r10867
	muls.64     %r10869 <- %r10868, $16
	sub.64*     %r10870 <- %r10866, %r10869
	load.64*    %r10871 <- 0[%r10870]
	load.64     %r10872 <- 16[%r10871]
	store.64    %r10872 -> 0[l]
	load.64*    %r10873 <- 0[buffer]
	load.64     %r10874 <- 0[tl]
	add.64*     %r10875 <- %r10873, %r10874
	cast.64*    %r10876 <- (64) %r10875
	load.64*    %r10877 <- 0[top]
	load.32     %r10878 <- 0[i]
	scast.64    %r10879 <- (32) %r10878
	muls.64     %r10880 <- %r10879, $16
	sub.64*     %r10881 <- %r10877, %r10880
	load.64*    %r10882 <- 0[%r10881]
	add.64*     %r10883 <- %r10882, $0
	add.64*     %r10884 <- %r10883, $24
	ptrcast.64* %r10885 <- (64) %r10884
	cast.64*    %r10886 <- (64) %r10885
	load.64     %r10887 <- 0[l]
	push.64*    %r10876
	push.64*    %r10886
	push.64     %r10887
	call.64*    %r10888 <- memcpy
	load.64     %r10889 <- 0[l]
	load.64     %r10890 <- 0[tl]
	cast.64     %r10891 <- (64) %r10890
	add.64      %r10892 <- %r10891, %r10889
	cast.64     %r10893 <- (64) %r10892
	store.64    %r10893 -> 0[tl]
	br          .L2589

.L2589:
	load.32     %r10894 <- 0[i]
	sub.32      %r10895 <- %r10894, $1
	store.32    %r10895 -> 0[i]
	br          .L2591

.L2590:
	load.64*    %r10896 <- 0[top]
	load.32     %r10897 <- 0[n]
	scast.64    %r10898 <- (32) %r10897
	muls.64     %r10899 <- %r10898, $16
	sub.64*     %r10900 <- %r10896, %r10899
	store.64*   %r10900 -> 0[i_o]
	load.64*    %r10901 <- 0[L]
	load.64*    %r10902 <- 0[buffer]
	load.64     %r10903 <- 0[tl]
	push.64*    %r10901
	push.64*    %r10902
	push.64     %r10903
	call.64*    %r10904 <- luaS_newlstr
	ptrcast.64* %r10905 <- (64) %r10904
	load.64*    %r10906 <- 0[i_o]
	store.64*   %r10905 -> 0[%r10906]
	load.64*    %r10907 <- 0[i_o]
	store.32    $4 -> 8[%r10907]
	br          .L2579

.L2579:
	br          .L2573

.L2573:
	load.32     %r10908 <- 0[n]
	sub.32      %r10909 <- %r10908, $1
	load.32     %r10910 <- 0[total]
	scast.32    %r10911 <- (32) %r10910
	sub.32      %r10912 <- %r10911, %r10909
	scast.32    %r10913 <- (32) %r10912
	store.32    %r10913 -> 0[total]
	load.32     %r10914 <- 0[n]
	sub.32      %r10915 <- %r10914, $1
	load.32     %r10916 <- 0[last]
	scast.32    %r10917 <- (32) %r10916
	sub.32      %r10918 <- %r10917, %r10915
	scast.32    %r10919 <- (32) %r10918
	store.32    %r10919 -> 0[last]
	br          .L2564

.L2564:
	load.32     %r10920 <- 0[total]
	setgt.32    %r10921 <- %r10920, $1
	br          %r10921, .L2563, .L2565

.L2565:
	ret


Arith:
.L2592:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ra]
	store.64*   %arg3 -> 0[rb]
	store.64*   %arg4 -> 0[rc]
	store.32    %arg5 -> 0[op]
	load.64*    %r10922 <- 0[rb]
	symaddr.64* %r10923 <- tempb
	push.64*    %r10922
	push.64*    %r10923
	call.64*    %r10924 <- luaV_tonumber
	store.64*   %r10924 -> 0[b]
	setne.32    %r10925 <- %r10924, $0
	br          %r10925, .L2595, .L2594

.L2595:
	load.64*    %r10926 <- 0[rc]
	symaddr.64* %r10927 <- tempc
	push.64*    %r10926
	push.64*    %r10927
	call.64*    %r10928 <- luaV_tonumber
	store.64*   %r10928 -> 0[c]
	setne.32    %r10929 <- %r10928, $0
	br          %r10929, .L2593, .L2594

.L2593:
	load.64*    %r10930 <- 0[b]
	load.f64    %r10931 <- 0[%r10930]
	fpcast.f64  %r10932 <- (64) %r10931
	store.f64   %r10932 -> 0[nb]
	load.64*    %r10933 <- 0[c]
	load.f64    %r10934 <- 0[%r10933]
	fpcast.f64  %r10935 <- (64) %r10934
	store.f64   %r10935 -> 0[nc]
	load.32     %r10936 <- 0[op]
	switch.32   %r10936, 5 -> .L2597, 6 -> .L2598, 7 -> .L2599, 8 -> .L2600, 9 -> .L2601, 10 -> .L2602, 11 -> .L2603, default -> .L2604

.L2597:
	load.64*    %r10937 <- 0[ra]
	store.64*   %r10937 -> 0[i_o]
	load.f64    %r10938 <- 0[nb]
	load.f64    %r10939 <- 0[nc]
	add.f64     %r10940 <- %r10938, %r10939
	load.64*    %r10941 <- 0[i_o]
	store.f64   %r10940 -> 0[%r10941]
	load.64*    %r10942 <- 0[i_o]
	store.32    $3 -> 8[%r10942]
	br          .L2596

.L2598:
	load.64*    %r10943 <- 0[ra]
	store.64*   %r10943 -> 0[i_o]
	load.f64    %r10944 <- 0[nb]
	load.f64    %r10945 <- 0[nc]
	sub.f64     %r10946 <- %r10944, %r10945
	load.64*    %r10947 <- 0[i_o]
	store.f64   %r10946 -> 0[%r10947]
	load.64*    %r10948 <- 0[i_o]
	store.32    $3 -> 8[%r10948]
	br          .L2596

.L2599:
	load.64*    %r10949 <- 0[ra]
	store.64*   %r10949 -> 0[i_o]
	load.f64    %r10950 <- 0[nb]
	load.f64    %r10951 <- 0[nc]
	mulu.f64    %r10952 <- %r10950, %r10951
	load.64*    %r10953 <- 0[i_o]
	store.f64   %r10952 -> 0[%r10953]
	load.64*    %r10954 <- 0[i_o]
	store.32    $3 -> 8[%r10954]
	br          .L2596

.L2600:
	load.64*    %r10955 <- 0[ra]
	store.64*   %r10955 -> 0[i_o]
	load.f64    %r10956 <- 0[nb]
	load.f64    %r10957 <- 0[nc]
	divu.f64    %r10958 <- %r10956, %r10957
	load.64*    %r10959 <- 0[i_o]
	store.f64   %r10958 -> 0[%r10959]
	load.64*    %r10960 <- 0[i_o]
	store.32    $3 -> 8[%r10960]
	br          .L2596

.L2601:
	load.64*    %r10961 <- 0[ra]
	store.64*   %r10961 -> 0[i_o]
	load.f64    %r10962 <- 0[nb]
	load.f64    %r10963 <- 0[nb]
	load.f64    %r10964 <- 0[nc]
	divu.f64    %r10965 <- %r10963, %r10964
	push.f64    %r10965
	call.f64    %r10966 <- floor
	load.f64    %r10967 <- 0[nc]
	mulu.f64    %r10968 <- %r10966, %r10967
	sub.f64     %r10969 <- %r10962, %r10968
	load.64*    %r10970 <- 0[i_o]
	store.f64   %r10969 -> 0[%r10970]
	load.64*    %r10971 <- 0[i_o]
	store.32    $3 -> 8[%r10971]
	br          .L2596

.L2602:
	load.64*    %r10972 <- 0[ra]
	store.64*   %r10972 -> 0[i_o]
	load.f64    %r10973 <- 0[nb]
	load.f64    %r10974 <- 0[nc]
	push.f64    %r10973
	push.f64    %r10974
	call.f64    %r10975 <- pow
	load.64*    %r10976 <- 0[i_o]
	store.f64   %r10975 -> 0[%r10976]
	load.64*    %r10977 <- 0[i_o]
	store.32    $3 -> 8[%r10977]
	br          .L2596

.L2603:
	load.64*    %r10978 <- 0[ra]
	store.64*   %r10978 -> 0[i_o]
	load.f64    %r10979 <- 0[nb]
	neg.f64     %r10980 <- %r10979
	load.64*    %r10981 <- 0[i_o]
	store.f64   %r10980 -> 0[%r10981]
	load.64*    %r10982 <- 0[i_o]
	store.32    $3 -> 8[%r10982]
	br          .L2596

.L2604:
	br          .L2596

.L2596:
	br          .L2605

.L2594:
	load.64*    %r10983 <- 0[L]
	load.64*    %r10984 <- 0[rb]
	load.64*    %r10985 <- 0[rc]
	load.64*    %r10986 <- 0[ra]
	load.32     %r10987 <- 0[op]
	push.64*    %r10983
	push.64*    %r10984
	push.64*    %r10985
	push.64*    %r10986
	push.32     %r10987
	call.32     %r10988 <- call_binTM
	br          %r10988, .L2607, .L2606

.L2606:
	load.64*    %r10989 <- 0[L]
	load.64*    %r10990 <- 0[rb]
	load.64*    %r10991 <- 0[rc]
	push.64*    %r10989
	push.64*    %r10990
	push.64*    %r10991
	call        luaG_aritherror
	br          .L2607

.L2607:
	br          .L2605

.L2605:
	ret


luaV_execute:
.L2608:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nexeccalls]
	br          .L2609

.L2609:
	load.64*    %r10992 <- 0[L]
	load.64*    %r10993 <- 48[%r10992]
	store.64*   %r10993 -> 0[pc]
	load.64*    %r10994 <- 0[L]
	load.64*    %r10995 <- 40[%r10994]
	load.64*    %r10996 <- 8[%r10995]
	load.64*    %r10997 <- 0[%r10996]
	add.64*     %r10998 <- %r10997, $0
	add.64*     %r10999 <- %r10998, $0
	store.64*   %r10999 -> 0[cl]
	load.64*    %r11000 <- 0[L]
	load.64*    %r11001 <- 24[%r11000]
	store.64*   %r11001 -> 0[base]
	load.64*    %r11002 <- 0[cl]
	load.64*    %r11003 <- 32[%r11002]
	load.64*    %r11004 <- 16[%r11003]
	store.64*   %r11004 -> 0[k]
	br          .L2613

.L2613:
	br          .L2610

.L2610:
	load.64*    %r11005 <- 0[pc]
	add.64*     %r11006 <- %r11005, $4
	store.64*   %r11006 -> 0[pc]
	load.32     %r11007 <- 0[%r11005]
	store.32    %r11007 -> 0[i]
	load.64*    %r11008 <- 0[base]
	load.32     %r11009 <- 0[i]
	cast.32     %r11010 <- (32) %r11009
	lsr.32      %r11011 <- %r11010, $6
	and.32      %r11012 <- %r11011, $255
	cast.32     %r11013 <- (32) %r11012
	scast.64    %r11014 <- (32) %r11013
	muls.64     %r11015 <- %r11014, $16
	add.64*     %r11016 <- %r11008, %r11015
	store.64*   %r11016 -> 0[ra]
	load.32     %r11017 <- 0[i]
	cast.32     %r11018 <- (32) %r11017
	lsr.32      %r11019 <- %r11018, $0
	and.32      %r11020 <- %r11019, $63
	cast.32     %r11021 <- (32) %r11020
	switch.32   %r11021, 0 -> .L2615, 1 -> .L2616, 2 -> .L2617, 3 -> .L2618, 4 -> .L2619, 5 -> .L2620, 6 -> .L2621, 7 -> .L2622, 8 -> .L2623, 9 -> .L2624, 10 -> .L2625, 11 -> .L2626, 12 -> .L2627, 13 -> .L2628, 14 -> .L2629, 15 -> .L2630, 16 -> .L2631, 17 -> .L2632, 18 -> .L2633, 19 -> .L2634, 20 -> .L2635, 21 -> .L2636, 22 -> .L2637, 23 -> .L2638, 24 -> .L2639, 25 -> .L2640, 26 -> .L2641, 27 -> .L2642, 28 -> .L2643, 29 -> .L2644, 30 -> .L2645, 31 -> .L2646, 32 -> .L2647, 33 -> .L2648, 34 -> .L2649, 35 -> .L2650, 36 -> .L2651, 37 -> .L2652, default -> .L2614

.L2615:
	load.64*    %r11022 <- 0[base]
	load.32     %r11023 <- 0[i]
	cast.32     %r11024 <- (32) %r11023
	lsr.32      %r11025 <- %r11024, $23
	and.32      %r11026 <- %r11025, $511
	cast.32     %r11027 <- (32) %r11026
	scast.64    %r11028 <- (32) %r11027
	muls.64     %r11029 <- %r11028, $16
	add.64*     %r11030 <- %r11022, %r11029
	store.64*   %r11030 -> 0[o2]
	load.64*    %r11031 <- 0[ra]
	store.64*   %r11031 -> 0[o1]
	load.64*    %r11032 <- 0[o2]
	load.f64    %r11033 <- 0[%r11032]
	fpcast.f64  %r11034 <- (64) %r11033
	load.64*    %r11035 <- 0[o1]
	store.f64   %r11034 -> 0[%r11035]
	load.64*    %r11036 <- 0[o2]
	load.32     %r11037 <- 8[%r11036]
	scast.32    %r11038 <- (32) %r11037
	load.64*    %r11039 <- 0[o1]
	store.32    %r11038 -> 8[%r11039]
	br          .L2611

.L2616:
	load.64*    %r11040 <- 0[k]
	load.32     %r11041 <- 0[i]
	cast.32     %r11042 <- (32) %r11041
	lsr.32      %r11043 <- %r11042, $14
	and.32      %r11044 <- %r11043, $0x3ffff
	cast.32     %r11045 <- (32) %r11044
	scast.64    %r11046 <- (32) %r11045
	muls.64     %r11047 <- %r11046, $16
	add.64*     %r11048 <- %r11040, %r11047
	store.64*   %r11048 -> 0[o2]
	load.64*    %r11049 <- 0[ra]
	store.64*   %r11049 -> 0[o1]
	load.64*    %r11050 <- 0[o2]
	load.f64    %r11051 <- 0[%r11050]
	fpcast.f64  %r11052 <- (64) %r11051
	load.64*    %r11053 <- 0[o1]
	store.f64   %r11052 -> 0[%r11053]
	load.64*    %r11054 <- 0[o2]
	load.32     %r11055 <- 8[%r11054]
	scast.32    %r11056 <- (32) %r11055
	load.64*    %r11057 <- 0[o1]
	store.32    %r11056 -> 8[%r11057]
	br          .L2611

.L2617:
	load.64*    %r11058 <- 0[ra]
	store.64*   %r11058 -> 0[i_o]
	load.32     %r11059 <- 0[i]
	cast.32     %r11060 <- (32) %r11059
	lsr.32      %r11061 <- %r11060, $23
	and.32      %r11062 <- %r11061, $511
	cast.32     %r11063 <- (32) %r11062
	load.64*    %r11064 <- 0[i_o]
	store.32    %r11063 -> 0[%r11064]
	load.64*    %r11065 <- 0[i_o]
	store.32    $1 -> 8[%r11065]
	load.32     %r11066 <- 0[i]
	cast.32     %r11067 <- (32) %r11066
	lsr.32      %r11068 <- %r11067, $14
	and.32      %r11069 <- %r11068, $511
	cast.32     %r11070 <- (32) %r11069
	br          %r11070, .L2653, .L2654

.L2653:
	load.64*    %r11071 <- 0[pc]
	add.64*     %r11072 <- %r11071, $4
	store.64*   %r11072 -> 0[pc]
	br          .L2654

.L2654:
	br          .L2611

.L2618:
	load.64*    %r11073 <- 0[base]
	load.32     %r11074 <- 0[i]
	cast.32     %r11075 <- (32) %r11074
	lsr.32      %r11076 <- %r11075, $23
	and.32      %r11077 <- %r11076, $511
	cast.32     %r11078 <- (32) %r11077
	scast.64    %r11079 <- (32) %r11078
	muls.64     %r11080 <- %r11079, $16
	add.64*     %r11081 <- %r11073, %r11080
	store.64*   %r11081 -> 0[rb]
	br          .L2655

.L2655:
	load.64*    %r11082 <- 0[rb]
	sub.64*     %r11083 <- %r11082, $16
	store.64*   %r11083 -> 0[rb]
	store.32    $0 -> 8[%r11082]
	br          .L2656

.L2656:
	load.64*    %r11084 <- 0[rb]
	load.64*    %r11085 <- 0[ra]
	setae.32    %r11086 <- %r11084, %r11085
	br          %r11086, .L2655, .L2657

.L2657:
	br          .L2611

.L2619:
	load.32     %r11087 <- 0[i]
	cast.32     %r11088 <- (32) %r11087
	lsr.32      %r11089 <- %r11088, $23
	and.32      %r11090 <- %r11089, $511
	cast.32     %r11091 <- (32) %r11090
	store.32    %r11091 -> 0[b]
	load.64*    %r11092 <- 0[cl]
	add.64*     %r11093 <- %r11092, $40
	load.32     %r11094 <- 0[b]
	scast.64    %r11095 <- (32) %r11094
	muls.64     %r11096 <- %r11095, $8
	add.64*     %r11097 <- %r11093, %r11096
	load.64*    %r11098 <- 0[%r11097]
	load.64*    %r11099 <- 16[%r11098]
	store.64*   %r11099 -> 0[o2]
	load.64*    %r11100 <- 0[ra]
	store.64*   %r11100 -> 0[o1]
	load.64*    %r11101 <- 0[o2]
	load.f64    %r11102 <- 0[%r11101]
	fpcast.f64  %r11103 <- (64) %r11102
	load.64*    %r11104 <- 0[o1]
	store.f64   %r11103 -> 0[%r11104]
	load.64*    %r11105 <- 0[o2]
	load.32     %r11106 <- 8[%r11105]
	scast.32    %r11107 <- (32) %r11106
	load.64*    %r11108 <- 0[o1]
	store.32    %r11107 -> 8[%r11108]
	br          .L2611

.L2620:
	load.64*    %r11109 <- 0[k]
	load.32     %r11110 <- 0[i]
	cast.32     %r11111 <- (32) %r11110
	lsr.32      %r11112 <- %r11111, $14
	and.32      %r11113 <- %r11112, $0x3ffff
	cast.32     %r11114 <- (32) %r11113
	scast.64    %r11115 <- (32) %r11114
	muls.64     %r11116 <- %r11115, $16
	add.64*     %r11117 <- %r11109, %r11116
	store.64*   %r11117 -> 0[rb]
	symaddr.64* %r11118 <- g
	store.64*   %r11118 -> 0[i_o]
	load.64*    %r11119 <- 0[cl]
	load.64*    %r11120 <- 24[%r11119]
	ptrcast.64* %r11121 <- (64) %r11120
	load.64*    %r11122 <- 0[i_o]
	store.64*   %r11121 -> 0[%r11122]
	load.64*    %r11123 <- 0[i_o]
	store.32    $5 -> 8[%r11123]
	load.64*    %r11124 <- 0[pc]
	load.64*    %r11125 <- 0[L]
	store.64*   %r11124 -> 48[%r11125]
	load.64*    %r11126 <- 0[L]
	symaddr.64* %r11127 <- g
	load.64*    %r11128 <- 0[rb]
	load.64*    %r11129 <- 0[ra]
	push.64*    %r11126
	push.64*    %r11127
	push.64*    %r11128
	push.64*    %r11129
	call        luaV_gettable
	load.64*    %r11130 <- 0[L]
	load.64*    %r11131 <- 24[%r11130]
	store.64*   %r11131 -> 0[base]
	br          .L2611

.L2621:
	load.64*    %r11132 <- 0[pc]
	load.64*    %r11133 <- 0[L]
	store.64*   %r11132 -> 48[%r11133]
	load.64*    %r11134 <- 0[L]
	load.64*    %r11135 <- 0[base]
	load.32     %r11136 <- 0[i]
	cast.32     %r11137 <- (32) %r11136
	lsr.32      %r11138 <- %r11137, $23
	and.32      %r11139 <- %r11138, $511
	cast.32     %r11140 <- (32) %r11139
	scast.64    %r11141 <- (32) %r11140
	muls.64     %r11142 <- %r11141, $16
	add.64*     %r11143 <- %r11135, %r11142
	load.32     %r11144 <- 0[i]
	cast.32     %r11145 <- (32) %r11144
	lsr.32      %r11146 <- %r11145, $14
	and.32      %r11147 <- %r11146, $511
	cast.32     %r11148 <- (32) %r11147
	and.32      %r11149 <- %r11148, $256
	br          %r11149, .L2658, .L2659

.L2658:
	load.64*    %r11150 <- 0[k]
	load.32     %r11151 <- 0[i]
	cast.32     %r11152 <- (32) %r11151
	lsr.32      %r11153 <- %r11152, $14
	and.32      %r11154 <- %r11153, $511
	cast.32     %r11155 <- (32) %r11154
	scast.32    %r11156 <- (32) %r11155
	and.32      %r11157 <- %r11156, $0xfffffeff
	scast.64    %r11158 <- (32) %r11157
	muls.64     %r11159 <- %r11158, $16
	add.64*     %r11160 <- %r11150, %r11159
	phisrc.64*  %phi465 <- %r11160
	br          .L2660

.L2659:
	load.64*    %r11161 <- 0[base]
	load.32     %r11162 <- 0[i]
	cast.32     %r11163 <- (32) %r11162
	lsr.32      %r11164 <- %r11163, $14
	and.32      %r11165 <- %r11164, $511
	cast.32     %r11166 <- (32) %r11165
	scast.64    %r11167 <- (32) %r11166
	muls.64     %r11168 <- %r11167, $16
	add.64*     %r11169 <- %r11161, %r11168
	ptrcast.64* %r11170 <- (64) %r11169
	phisrc.64*  %phi466 <- %r11170
	br          .L2660

.L2660:
	phi.64*     %r11171 <- %phi465, %phi466
	load.64*    %r11172 <- 0[ra]
	push.64*    %r11134
	push.64*    %r11143
	push.64*    %r11171
	push.64*    %r11172
	call        luaV_gettable
	load.64*    %r11173 <- 0[L]
	load.64*    %r11174 <- 24[%r11173]
	store.64*   %r11174 -> 0[base]
	br          .L2611

.L2622:
	symaddr.64* %r11175 <- g
	store.64*   %r11175 -> 0[i_o]
	load.64*    %r11176 <- 0[cl]
	load.64*    %r11177 <- 24[%r11176]
	ptrcast.64* %r11178 <- (64) %r11177
	load.64*    %r11179 <- 0[i_o]
	store.64*   %r11178 -> 0[%r11179]
	load.64*    %r11180 <- 0[i_o]
	store.32    $5 -> 8[%r11180]
	load.64*    %r11181 <- 0[pc]
	load.64*    %r11182 <- 0[L]
	store.64*   %r11181 -> 48[%r11182]
	load.64*    %r11183 <- 0[L]
	symaddr.64* %r11184 <- g
	load.64*    %r11185 <- 0[k]
	load.32     %r11186 <- 0[i]
	cast.32     %r11187 <- (32) %r11186
	lsr.32      %r11188 <- %r11187, $14
	and.32      %r11189 <- %r11188, $0x3ffff
	cast.32     %r11190 <- (32) %r11189
	scast.64    %r11191 <- (32) %r11190
	muls.64     %r11192 <- %r11191, $16
	add.64*     %r11193 <- %r11185, %r11192
	load.64*    %r11194 <- 0[ra]
	push.64*    %r11183
	push.64*    %r11184
	push.64*    %r11193
	push.64*    %r11194
	call        luaV_settable
	load.64*    %r11195 <- 0[L]
	load.64*    %r11196 <- 24[%r11195]
	store.64*   %r11196 -> 0[base]
	br          .L2611

.L2623:
	load.64*    %r11197 <- 0[cl]
	add.64*     %r11198 <- %r11197, $40
	load.32     %r11199 <- 0[i]
	cast.32     %r11200 <- (32) %r11199
	lsr.32      %r11201 <- %r11200, $23
	and.32      %r11202 <- %r11201, $511
	cast.32     %r11203 <- (32) %r11202
	scast.64    %r11204 <- (32) %r11203
	muls.64     %r11205 <- %r11204, $8
	add.64*     %r11206 <- %r11198, %r11205
	load.64*    %r11207 <- 0[%r11206]
	store.64*   %r11207 -> 0[uv]
	load.64*    %r11208 <- 0[ra]
	store.64*   %r11208 -> 0[o2]
	load.64*    %r11209 <- 0[uv]
	load.64*    %r11210 <- 16[%r11209]
	store.64*   %r11210 -> 0[o1]
	load.64*    %r11211 <- 0[o2]
	load.f64    %r11212 <- 0[%r11211]
	fpcast.f64  %r11213 <- (64) %r11212
	load.64*    %r11214 <- 0[o1]
	store.f64   %r11213 -> 0[%r11214]
	load.64*    %r11215 <- 0[o2]
	load.32     %r11216 <- 8[%r11215]
	scast.32    %r11217 <- (32) %r11216
	load.64*    %r11218 <- 0[o1]
	store.32    %r11217 -> 8[%r11218]
	load.64*    %r11219 <- 0[ra]
	load.32     %r11220 <- 8[%r11219]
	setge.32    %r11221 <- %r11220, $4
	br          %r11221, .L2664, .L2662

.L2664:
	load.64*    %r11222 <- 0[ra]
	load.64*    %r11223 <- 0[%r11222]
	load.8      %r11224 <- 9[%r11223]
	cast.32     %r11225 <- (8) %r11224
	and.32      %r11226 <- %r11225, $3
	br          %r11226, .L2663, .L2662

.L2663:
	load.64*    %r11227 <- 0[uv]
	ptrcast.64* %r11228 <- (64) %r11227
	load.8      %r11229 <- 9[%r11228]
	cast.32     %r11230 <- (8) %r11229
	and.32      %r11231 <- %r11230, $4
	br          %r11231, .L2661, .L2662

.L2661:
	load.64*    %r11232 <- 0[L]
	load.64*    %r11233 <- 0[uv]
	ptrcast.64* %r11234 <- (64) %r11233
	load.64*    %r11235 <- 0[ra]
	load.64*    %r11236 <- 0[%r11235]
	push.64*    %r11232
	push.64*    %r11234
	push.64*    %r11236
	call        luaC_barrierf
	br          .L2662

.L2662:
	br          .L2611

.L2624:
	load.64*    %r11237 <- 0[pc]
	load.64*    %r11238 <- 0[L]
	store.64*   %r11237 -> 48[%r11238]
	load.64*    %r11239 <- 0[L]
	load.64*    %r11240 <- 0[ra]
	load.32     %r11241 <- 0[i]
	cast.32     %r11242 <- (32) %r11241
	lsr.32      %r11243 <- %r11242, $23
	and.32      %r11244 <- %r11243, $511
	cast.32     %r11245 <- (32) %r11244
	and.32      %r11246 <- %r11245, $256
	br          %r11246, .L2665, .L2666

.L2665:
	load.64*    %r11247 <- 0[k]
	load.32     %r11248 <- 0[i]
	cast.32     %r11249 <- (32) %r11248
	lsr.32      %r11250 <- %r11249, $23
	and.32      %r11251 <- %r11250, $511
	cast.32     %r11252 <- (32) %r11251
	scast.32    %r11253 <- (32) %r11252
	and.32      %r11254 <- %r11253, $0xfffffeff
	scast.64    %r11255 <- (32) %r11254
	muls.64     %r11256 <- %r11255, $16
	add.64*     %r11257 <- %r11247, %r11256
	phisrc.64*  %phi467 <- %r11257
	br          .L2667

.L2666:
	load.64*    %r11258 <- 0[base]
	load.32     %r11259 <- 0[i]
	cast.32     %r11260 <- (32) %r11259
	lsr.32      %r11261 <- %r11260, $23
	and.32      %r11262 <- %r11261, $511
	cast.32     %r11263 <- (32) %r11262
	scast.64    %r11264 <- (32) %r11263
	muls.64     %r11265 <- %r11264, $16
	add.64*     %r11266 <- %r11258, %r11265
	ptrcast.64* %r11267 <- (64) %r11266
	phisrc.64*  %phi468 <- %r11267
	br          .L2667

.L2667:
	phi.64*     %r11268 <- %phi467, %phi468
	load.32     %r11269 <- 0[i]
	cast.32     %r11270 <- (32) %r11269
	lsr.32      %r11271 <- %r11270, $14
	and.32      %r11272 <- %r11271, $511
	cast.32     %r11273 <- (32) %r11272
	and.32      %r11274 <- %r11273, $256
	br          %r11274, .L2668, .L2669

.L2668:
	load.64*    %r11275 <- 0[k]
	load.32     %r11276 <- 0[i]
	cast.32     %r11277 <- (32) %r11276
	lsr.32      %r11278 <- %r11277, $14
	and.32      %r11279 <- %r11278, $511
	cast.32     %r11280 <- (32) %r11279
	scast.32    %r11281 <- (32) %r11280
	and.32      %r11282 <- %r11281, $0xfffffeff
	scast.64    %r11283 <- (32) %r11282
	muls.64     %r11284 <- %r11283, $16
	add.64*     %r11285 <- %r11275, %r11284
	phisrc.64*  %phi469 <- %r11285
	br          .L2670

.L2669:
	load.64*    %r11286 <- 0[base]
	load.32     %r11287 <- 0[i]
	cast.32     %r11288 <- (32) %r11287
	lsr.32      %r11289 <- %r11288, $14
	and.32      %r11290 <- %r11289, $511
	cast.32     %r11291 <- (32) %r11290
	scast.64    %r11292 <- (32) %r11291
	muls.64     %r11293 <- %r11292, $16
	add.64*     %r11294 <- %r11286, %r11293
	ptrcast.64* %r11295 <- (64) %r11294
	phisrc.64*  %phi470 <- %r11295
	br          .L2670

.L2670:
	phi.64*     %r11296 <- %phi469, %phi470
	push.64*    %r11239
	push.64*    %r11240
	push.64*    %r11268
	push.64*    %r11296
	call        luaV_settable
	load.64*    %r11297 <- 0[L]
	load.64*    %r11298 <- 24[%r11297]
	store.64*   %r11298 -> 0[base]
	br          .L2611

.L2625:
	load.32     %r11299 <- 0[i]
	cast.32     %r11300 <- (32) %r11299
	lsr.32      %r11301 <- %r11300, $23
	and.32      %r11302 <- %r11301, $511
	cast.32     %r11303 <- (32) %r11302
	store.32    %r11303 -> 0[b]
	load.32     %r11304 <- 0[i]
	cast.32     %r11305 <- (32) %r11304
	lsr.32      %r11306 <- %r11305, $14
	and.32      %r11307 <- %r11306, $511
	cast.32     %r11308 <- (32) %r11307
	store.32    %r11308 -> 0[c]
	load.64*    %r11309 <- 0[ra]
	store.64*   %r11309 -> 0[i_o]
	load.64*    %r11310 <- 0[L]
	load.32     %r11311 <- 0[b]
	push.32     %r11311
	call.32     %r11312 <- luaO_fb2int
	load.32     %r11313 <- 0[c]
	push.32     %r11313
	call.32     %r11314 <- luaO_fb2int
	push.64*    %r11310
	push.32     %r11312
	push.32     %r11314
	call.64*    %r11315 <- luaH_new
	ptrcast.64* %r11316 <- (64) %r11315
	load.64*    %r11317 <- 0[i_o]
	store.64*   %r11316 -> 0[%r11317]
	load.64*    %r11318 <- 0[i_o]
	store.32    $5 -> 8[%r11318]
	load.64*    %r11319 <- 0[pc]
	load.64*    %r11320 <- 0[L]
	store.64*   %r11319 -> 48[%r11320]
	load.64*    %r11321 <- 0[L]
	load.64*    %r11322 <- 32[%r11321]
	load.64     %r11323 <- 120[%r11322]
	load.64*    %r11324 <- 0[L]
	load.64*    %r11325 <- 32[%r11324]
	load.64     %r11326 <- 112[%r11325]
	setae.32    %r11327 <- %r11323, %r11326
	br          %r11327, .L2671, .L2672

.L2671:
	load.64*    %r11328 <- 0[L]
	push.64*    %r11328
	call        luaC_step
	br          .L2672

.L2672:
	load.64*    %r11329 <- 0[L]
	load.64*    %r11330 <- 24[%r11329]
	store.64*   %r11330 -> 0[base]
	br          .L2611

.L2626:
	load.64*    %r11331 <- 0[base]
	load.32     %r11332 <- 0[i]
	cast.32     %r11333 <- (32) %r11332
	lsr.32      %r11334 <- %r11333, $23
	and.32      %r11335 <- %r11334, $511
	cast.32     %r11336 <- (32) %r11335
	scast.64    %r11337 <- (32) %r11336
	muls.64     %r11338 <- %r11337, $16
	add.64*     %r11339 <- %r11331, %r11338
	store.64*   %r11339 -> 0[rb]
	load.64*    %r11340 <- 0[rb]
	store.64*   %r11340 -> 0[o2]
	load.64*    %r11341 <- 0[ra]
	add.64*     %r11342 <- %r11341, $16
	store.64*   %r11342 -> 0[o1]
	load.64*    %r11343 <- 0[o2]
	load.f64    %r11344 <- 0[%r11343]
	fpcast.f64  %r11345 <- (64) %r11344
	load.64*    %r11346 <- 0[o1]
	store.f64   %r11345 -> 0[%r11346]
	load.64*    %r11347 <- 0[o2]
	load.32     %r11348 <- 8[%r11347]
	scast.32    %r11349 <- (32) %r11348
	load.64*    %r11350 <- 0[o1]
	store.32    %r11349 -> 8[%r11350]
	load.64*    %r11351 <- 0[pc]
	load.64*    %r11352 <- 0[L]
	store.64*   %r11351 -> 48[%r11352]
	load.64*    %r11353 <- 0[L]
	load.64*    %r11354 <- 0[rb]
	load.32     %r11355 <- 0[i]
	cast.32     %r11356 <- (32) %r11355
	lsr.32      %r11357 <- %r11356, $14
	and.32      %r11358 <- %r11357, $511
	cast.32     %r11359 <- (32) %r11358
	and.32      %r11360 <- %r11359, $256
	br          %r11360, .L2673, .L2674

.L2673:
	load.64*    %r11361 <- 0[k]
	load.32     %r11362 <- 0[i]
	cast.32     %r11363 <- (32) %r11362
	lsr.32      %r11364 <- %r11363, $14
	and.32      %r11365 <- %r11364, $511
	cast.32     %r11366 <- (32) %r11365
	scast.32    %r11367 <- (32) %r11366
	and.32      %r11368 <- %r11367, $0xfffffeff
	scast.64    %r11369 <- (32) %r11368
	muls.64     %r11370 <- %r11369, $16
	add.64*     %r11371 <- %r11361, %r11370
	phisrc.64*  %phi471 <- %r11371
	br          .L2675

.L2674:
	load.64*    %r11372 <- 0[base]
	load.32     %r11373 <- 0[i]
	cast.32     %r11374 <- (32) %r11373
	lsr.32      %r11375 <- %r11374, $14
	and.32      %r11376 <- %r11375, $511
	cast.32     %r11377 <- (32) %r11376
	scast.64    %r11378 <- (32) %r11377
	muls.64     %r11379 <- %r11378, $16
	add.64*     %r11380 <- %r11372, %r11379
	ptrcast.64* %r11381 <- (64) %r11380
	phisrc.64*  %phi472 <- %r11381
	br          .L2675

.L2675:
	phi.64*     %r11382 <- %phi471, %phi472
	load.64*    %r11383 <- 0[ra]
	push.64*    %r11353
	push.64*    %r11354
	push.64*    %r11382
	push.64*    %r11383
	call        luaV_gettable
	load.64*    %r11384 <- 0[L]
	load.64*    %r11385 <- 24[%r11384]
	store.64*   %r11385 -> 0[base]
	br          .L2611

.L2627:
	load.32     %r11386 <- 0[i]
	cast.32     %r11387 <- (32) %r11386
	lsr.32      %r11388 <- %r11387, $23
	and.32      %r11389 <- %r11388, $511
	cast.32     %r11390 <- (32) %r11389
	and.32      %r11391 <- %r11390, $256
	br          %r11391, .L2676, .L2677

.L2676:
	load.64*    %r11392 <- 0[k]
	load.32     %r11393 <- 0[i]
	cast.32     %r11394 <- (32) %r11393
	lsr.32      %r11395 <- %r11394, $23
	and.32      %r11396 <- %r11395, $511
	cast.32     %r11397 <- (32) %r11396
	scast.32    %r11398 <- (32) %r11397
	and.32      %r11399 <- %r11398, $0xfffffeff
	scast.64    %r11400 <- (32) %r11399
	muls.64     %r11401 <- %r11400, $16
	add.64*     %r11402 <- %r11392, %r11401
	phisrc.64*  %phi473 <- %r11402
	br          .L2678

.L2677:
	load.64*    %r11403 <- 0[base]
	load.32     %r11404 <- 0[i]
	cast.32     %r11405 <- (32) %r11404
	lsr.32      %r11406 <- %r11405, $23
	and.32      %r11407 <- %r11406, $511
	cast.32     %r11408 <- (32) %r11407
	scast.64    %r11409 <- (32) %r11408
	muls.64     %r11410 <- %r11409, $16
	add.64*     %r11411 <- %r11403, %r11410
	ptrcast.64* %r11412 <- (64) %r11411
	phisrc.64*  %phi474 <- %r11412
	br          .L2678

.L2678:
	phi.64*     %r11413 <- %phi473, %phi474
	store.64*   %r11413 -> 0[rb]
	load.32     %r11414 <- 0[i]
	cast.32     %r11415 <- (32) %r11414
	lsr.32      %r11416 <- %r11415, $14
	and.32      %r11417 <- %r11416, $511
	cast.32     %r11418 <- (32) %r11417
	and.32      %r11419 <- %r11418, $256
	br          %r11419, .L2679, .L2680

.L2679:
	load.64*    %r11420 <- 0[k]
	load.32     %r11421 <- 0[i]
	cast.32     %r11422 <- (32) %r11421
	lsr.32      %r11423 <- %r11422, $14
	and.32      %r11424 <- %r11423, $511
	cast.32     %r11425 <- (32) %r11424
	scast.32    %r11426 <- (32) %r11425
	and.32      %r11427 <- %r11426, $0xfffffeff
	scast.64    %r11428 <- (32) %r11427
	muls.64     %r11429 <- %r11428, $16
	add.64*     %r11430 <- %r11420, %r11429
	phisrc.64*  %phi475 <- %r11430
	br          .L2681

.L2680:
	load.64*    %r11431 <- 0[base]
	load.32     %r11432 <- 0[i]
	cast.32     %r11433 <- (32) %r11432
	lsr.32      %r11434 <- %r11433, $14
	and.32      %r11435 <- %r11434, $511
	cast.32     %r11436 <- (32) %r11435
	scast.64    %r11437 <- (32) %r11436
	muls.64     %r11438 <- %r11437, $16
	add.64*     %r11439 <- %r11431, %r11438
	ptrcast.64* %r11440 <- (64) %r11439
	phisrc.64*  %phi476 <- %r11440
	br          .L2681

.L2681:
	phi.64*     %r11441 <- %phi475, %phi476
	store.64*   %r11441 -> 0[rc]
	load.64*    %r11442 <- 0[rb]
	load.32     %r11443 <- 8[%r11442]
	seteq.32    %r11444 <- %r11443, $3
	br          %r11444, .L2684, .L2683

.L2684:
	load.64*    %r11445 <- 0[rc]
	load.32     %r11446 <- 8[%r11445]
	seteq.32    %r11447 <- %r11446, $3
	br          %r11447, .L2682, .L2683

.L2682:
	load.64*    %r11448 <- 0[rb]
	load.f64    %r11449 <- 0[%r11448]
	store.f64   %r11449 -> 0[nb]
	load.64*    %r11450 <- 0[rc]
	load.f64    %r11451 <- 0[%r11450]
	store.f64   %r11451 -> 0[nc]
	load.64*    %r11452 <- 0[ra]
	store.64*   %r11452 -> 0[i_o]
	load.f64    %r11453 <- 0[nb]
	load.f64    %r11454 <- 0[nc]
	add.f64     %r11455 <- %r11453, %r11454
	load.64*    %r11456 <- 0[i_o]
	store.f64   %r11455 -> 0[%r11456]
	load.64*    %r11457 <- 0[i_o]
	store.32    $3 -> 8[%r11457]
	br          .L2685

.L2683:
	load.64*    %r11458 <- 0[pc]
	load.64*    %r11459 <- 0[L]
	store.64*   %r11458 -> 48[%r11459]
	load.64*    %r11460 <- 0[L]
	load.64*    %r11461 <- 0[ra]
	load.64*    %r11462 <- 0[rb]
	load.64*    %r11463 <- 0[rc]
	push.64*    %r11460
	push.64*    %r11461
	push.64*    %r11462
	push.64*    %r11463
	push.32     $5
	call        Arith
	load.64*    %r11464 <- 0[L]
	load.64*    %r11465 <- 24[%r11464]
	store.64*   %r11465 -> 0[base]
	br          .L2685

.L2685:
	br          .L2611

.L2628:
	load.32     %r11466 <- 0[i]
	cast.32     %r11467 <- (32) %r11466
	lsr.32      %r11468 <- %r11467, $23
	and.32      %r11469 <- %r11468, $511
	cast.32     %r11470 <- (32) %r11469
	and.32      %r11471 <- %r11470, $256
	br          %r11471, .L2686, .L2687

.L2686:
	load.64*    %r11472 <- 0[k]
	load.32     %r11473 <- 0[i]
	cast.32     %r11474 <- (32) %r11473
	lsr.32      %r11475 <- %r11474, $23
	and.32      %r11476 <- %r11475, $511
	cast.32     %r11477 <- (32) %r11476
	scast.32    %r11478 <- (32) %r11477
	and.32      %r11479 <- %r11478, $0xfffffeff
	scast.64    %r11480 <- (32) %r11479
	muls.64     %r11481 <- %r11480, $16
	add.64*     %r11482 <- %r11472, %r11481
	phisrc.64*  %phi477 <- %r11482
	br          .L2688

.L2687:
	load.64*    %r11483 <- 0[base]
	load.32     %r11484 <- 0[i]
	cast.32     %r11485 <- (32) %r11484
	lsr.32      %r11486 <- %r11485, $23
	and.32      %r11487 <- %r11486, $511
	cast.32     %r11488 <- (32) %r11487
	scast.64    %r11489 <- (32) %r11488
	muls.64     %r11490 <- %r11489, $16
	add.64*     %r11491 <- %r11483, %r11490
	ptrcast.64* %r11492 <- (64) %r11491
	phisrc.64*  %phi478 <- %r11492
	br          .L2688

.L2688:
	phi.64*     %r11493 <- %phi477, %phi478
	store.64*   %r11493 -> 0[rb]
	load.32     %r11494 <- 0[i]
	cast.32     %r11495 <- (32) %r11494
	lsr.32      %r11496 <- %r11495, $14
	and.32      %r11497 <- %r11496, $511
	cast.32     %r11498 <- (32) %r11497
	and.32      %r11499 <- %r11498, $256
	br          %r11499, .L2689, .L2690

.L2689:
	load.64*    %r11500 <- 0[k]
	load.32     %r11501 <- 0[i]
	cast.32     %r11502 <- (32) %r11501
	lsr.32      %r11503 <- %r11502, $14
	and.32      %r11504 <- %r11503, $511
	cast.32     %r11505 <- (32) %r11504
	scast.32    %r11506 <- (32) %r11505
	and.32      %r11507 <- %r11506, $0xfffffeff
	scast.64    %r11508 <- (32) %r11507
	muls.64     %r11509 <- %r11508, $16
	add.64*     %r11510 <- %r11500, %r11509
	phisrc.64*  %phi479 <- %r11510
	br          .L2691

.L2690:
	load.64*    %r11511 <- 0[base]
	load.32     %r11512 <- 0[i]
	cast.32     %r11513 <- (32) %r11512
	lsr.32      %r11514 <- %r11513, $14
	and.32      %r11515 <- %r11514, $511
	cast.32     %r11516 <- (32) %r11515
	scast.64    %r11517 <- (32) %r11516
	muls.64     %r11518 <- %r11517, $16
	add.64*     %r11519 <- %r11511, %r11518
	ptrcast.64* %r11520 <- (64) %r11519
	phisrc.64*  %phi480 <- %r11520
	br          .L2691

.L2691:
	phi.64*     %r11521 <- %phi479, %phi480
	store.64*   %r11521 -> 0[rc]
	load.64*    %r11522 <- 0[rb]
	load.32     %r11523 <- 8[%r11522]
	seteq.32    %r11524 <- %r11523, $3
	br          %r11524, .L2694, .L2693

.L2694:
	load.64*    %r11525 <- 0[rc]
	load.32     %r11526 <- 8[%r11525]
	seteq.32    %r11527 <- %r11526, $3
	br          %r11527, .L2692, .L2693

.L2692:
	load.64*    %r11528 <- 0[rb]
	load.f64    %r11529 <- 0[%r11528]
	store.f64   %r11529 -> 0[nb]
	load.64*    %r11530 <- 0[rc]
	load.f64    %r11531 <- 0[%r11530]
	store.f64   %r11531 -> 0[nc]
	load.64*    %r11532 <- 0[ra]
	store.64*   %r11532 -> 0[i_o]
	load.f64    %r11533 <- 0[nb]
	load.f64    %r11534 <- 0[nc]
	sub.f64     %r11535 <- %r11533, %r11534
	load.64*    %r11536 <- 0[i_o]
	store.f64   %r11535 -> 0[%r11536]
	load.64*    %r11537 <- 0[i_o]
	store.32    $3 -> 8[%r11537]
	br          .L2695

.L2693:
	load.64*    %r11538 <- 0[pc]
	load.64*    %r11539 <- 0[L]
	store.64*   %r11538 -> 48[%r11539]
	load.64*    %r11540 <- 0[L]
	load.64*    %r11541 <- 0[ra]
	load.64*    %r11542 <- 0[rb]
	load.64*    %r11543 <- 0[rc]
	push.64*    %r11540
	push.64*    %r11541
	push.64*    %r11542
	push.64*    %r11543
	push.32     $6
	call        Arith
	load.64*    %r11544 <- 0[L]
	load.64*    %r11545 <- 24[%r11544]
	store.64*   %r11545 -> 0[base]
	br          .L2695

.L2695:
	br          .L2611

.L2629:
	load.32     %r11546 <- 0[i]
	cast.32     %r11547 <- (32) %r11546
	lsr.32      %r11548 <- %r11547, $23
	and.32      %r11549 <- %r11548, $511
	cast.32     %r11550 <- (32) %r11549
	and.32      %r11551 <- %r11550, $256
	br          %r11551, .L2696, .L2697

.L2696:
	load.64*    %r11552 <- 0[k]
	load.32     %r11553 <- 0[i]
	cast.32     %r11554 <- (32) %r11553
	lsr.32      %r11555 <- %r11554, $23
	and.32      %r11556 <- %r11555, $511
	cast.32     %r11557 <- (32) %r11556
	scast.32    %r11558 <- (32) %r11557
	and.32      %r11559 <- %r11558, $0xfffffeff
	scast.64    %r11560 <- (32) %r11559
	muls.64     %r11561 <- %r11560, $16
	add.64*     %r11562 <- %r11552, %r11561
	phisrc.64*  %phi481 <- %r11562
	br          .L2698

.L2697:
	load.64*    %r11563 <- 0[base]
	load.32     %r11564 <- 0[i]
	cast.32     %r11565 <- (32) %r11564
	lsr.32      %r11566 <- %r11565, $23
	and.32      %r11567 <- %r11566, $511
	cast.32     %r11568 <- (32) %r11567
	scast.64    %r11569 <- (32) %r11568
	muls.64     %r11570 <- %r11569, $16
	add.64*     %r11571 <- %r11563, %r11570
	ptrcast.64* %r11572 <- (64) %r11571
	phisrc.64*  %phi482 <- %r11572
	br          .L2698

.L2698:
	phi.64*     %r11573 <- %phi481, %phi482
	store.64*   %r11573 -> 0[rb]
	load.32     %r11574 <- 0[i]
	cast.32     %r11575 <- (32) %r11574
	lsr.32      %r11576 <- %r11575, $14
	and.32      %r11577 <- %r11576, $511
	cast.32     %r11578 <- (32) %r11577
	and.32      %r11579 <- %r11578, $256
	br          %r11579, .L2699, .L2700

.L2699:
	load.64*    %r11580 <- 0[k]
	load.32     %r11581 <- 0[i]
	cast.32     %r11582 <- (32) %r11581
	lsr.32      %r11583 <- %r11582, $14
	and.32      %r11584 <- %r11583, $511
	cast.32     %r11585 <- (32) %r11584
	scast.32    %r11586 <- (32) %r11585
	and.32      %r11587 <- %r11586, $0xfffffeff
	scast.64    %r11588 <- (32) %r11587
	muls.64     %r11589 <- %r11588, $16
	add.64*     %r11590 <- %r11580, %r11589
	phisrc.64*  %phi483 <- %r11590
	br          .L2701

.L2700:
	load.64*    %r11591 <- 0[base]
	load.32     %r11592 <- 0[i]
	cast.32     %r11593 <- (32) %r11592
	lsr.32      %r11594 <- %r11593, $14
	and.32      %r11595 <- %r11594, $511
	cast.32     %r11596 <- (32) %r11595
	scast.64    %r11597 <- (32) %r11596
	muls.64     %r11598 <- %r11597, $16
	add.64*     %r11599 <- %r11591, %r11598
	ptrcast.64* %r11600 <- (64) %r11599
	phisrc.64*  %phi484 <- %r11600
	br          .L2701

.L2701:
	phi.64*     %r11601 <- %phi483, %phi484
	store.64*   %r11601 -> 0[rc]
	load.64*    %r11602 <- 0[rb]
	load.32     %r11603 <- 8[%r11602]
	seteq.32    %r11604 <- %r11603, $3
	br          %r11604, .L2704, .L2703

.L2704:
	load.64*    %r11605 <- 0[rc]
	load.32     %r11606 <- 8[%r11605]
	seteq.32    %r11607 <- %r11606, $3
	br          %r11607, .L2702, .L2703

.L2702:
	load.64*    %r11608 <- 0[rb]
	load.f64    %r11609 <- 0[%r11608]
	store.f64   %r11609 -> 0[nb]
	load.64*    %r11610 <- 0[rc]
	load.f64    %r11611 <- 0[%r11610]
	store.f64   %r11611 -> 0[nc]
	load.64*    %r11612 <- 0[ra]
	store.64*   %r11612 -> 0[i_o]
	load.f64    %r11613 <- 0[nb]
	load.f64    %r11614 <- 0[nc]
	mulu.f64    %r11615 <- %r11613, %r11614
	load.64*    %r11616 <- 0[i_o]
	store.f64   %r11615 -> 0[%r11616]
	load.64*    %r11617 <- 0[i_o]
	store.32    $3 -> 8[%r11617]
	br          .L2705

.L2703:
	load.64*    %r11618 <- 0[pc]
	load.64*    %r11619 <- 0[L]
	store.64*   %r11618 -> 48[%r11619]
	load.64*    %r11620 <- 0[L]
	load.64*    %r11621 <- 0[ra]
	load.64*    %r11622 <- 0[rb]
	load.64*    %r11623 <- 0[rc]
	push.64*    %r11620
	push.64*    %r11621
	push.64*    %r11622
	push.64*    %r11623
	push.32     $7
	call        Arith
	load.64*    %r11624 <- 0[L]
	load.64*    %r11625 <- 24[%r11624]
	store.64*   %r11625 -> 0[base]
	br          .L2705

.L2705:
	br          .L2611

.L2630:
	load.32     %r11626 <- 0[i]
	cast.32     %r11627 <- (32) %r11626
	lsr.32      %r11628 <- %r11627, $23
	and.32      %r11629 <- %r11628, $511
	cast.32     %r11630 <- (32) %r11629
	and.32      %r11631 <- %r11630, $256
	br          %r11631, .L2706, .L2707

.L2706:
	load.64*    %r11632 <- 0[k]
	load.32     %r11633 <- 0[i]
	cast.32     %r11634 <- (32) %r11633
	lsr.32      %r11635 <- %r11634, $23
	and.32      %r11636 <- %r11635, $511
	cast.32     %r11637 <- (32) %r11636
	scast.32    %r11638 <- (32) %r11637
	and.32      %r11639 <- %r11638, $0xfffffeff
	scast.64    %r11640 <- (32) %r11639
	muls.64     %r11641 <- %r11640, $16
	add.64*     %r11642 <- %r11632, %r11641
	phisrc.64*  %phi485 <- %r11642
	br          .L2708

.L2707:
	load.64*    %r11643 <- 0[base]
	load.32     %r11644 <- 0[i]
	cast.32     %r11645 <- (32) %r11644
	lsr.32      %r11646 <- %r11645, $23
	and.32      %r11647 <- %r11646, $511
	cast.32     %r11648 <- (32) %r11647
	scast.64    %r11649 <- (32) %r11648
	muls.64     %r11650 <- %r11649, $16
	add.64*     %r11651 <- %r11643, %r11650
	ptrcast.64* %r11652 <- (64) %r11651
	phisrc.64*  %phi486 <- %r11652
	br          .L2708

.L2708:
	phi.64*     %r11653 <- %phi485, %phi486
	store.64*   %r11653 -> 0[rb]
	load.32     %r11654 <- 0[i]
	cast.32     %r11655 <- (32) %r11654
	lsr.32      %r11656 <- %r11655, $14
	and.32      %r11657 <- %r11656, $511
	cast.32     %r11658 <- (32) %r11657
	and.32      %r11659 <- %r11658, $256
	br          %r11659, .L2709, .L2710

.L2709:
	load.64*    %r11660 <- 0[k]
	load.32     %r11661 <- 0[i]
	cast.32     %r11662 <- (32) %r11661
	lsr.32      %r11663 <- %r11662, $14
	and.32      %r11664 <- %r11663, $511
	cast.32     %r11665 <- (32) %r11664
	scast.32    %r11666 <- (32) %r11665
	and.32      %r11667 <- %r11666, $0xfffffeff
	scast.64    %r11668 <- (32) %r11667
	muls.64     %r11669 <- %r11668, $16
	add.64*     %r11670 <- %r11660, %r11669
	phisrc.64*  %phi487 <- %r11670
	br          .L2711

.L2710:
	load.64*    %r11671 <- 0[base]
	load.32     %r11672 <- 0[i]
	cast.32     %r11673 <- (32) %r11672
	lsr.32      %r11674 <- %r11673, $14
	and.32      %r11675 <- %r11674, $511
	cast.32     %r11676 <- (32) %r11675
	scast.64    %r11677 <- (32) %r11676
	muls.64     %r11678 <- %r11677, $16
	add.64*     %r11679 <- %r11671, %r11678
	ptrcast.64* %r11680 <- (64) %r11679
	phisrc.64*  %phi488 <- %r11680
	br          .L2711

.L2711:
	phi.64*     %r11681 <- %phi487, %phi488
	store.64*   %r11681 -> 0[rc]
	load.64*    %r11682 <- 0[rb]
	load.32     %r11683 <- 8[%r11682]
	seteq.32    %r11684 <- %r11683, $3
	br          %r11684, .L2714, .L2713

.L2714:
	load.64*    %r11685 <- 0[rc]
	load.32     %r11686 <- 8[%r11685]
	seteq.32    %r11687 <- %r11686, $3
	br          %r11687, .L2712, .L2713

.L2712:
	load.64*    %r11688 <- 0[rb]
	load.f64    %r11689 <- 0[%r11688]
	store.f64   %r11689 -> 0[nb]
	load.64*    %r11690 <- 0[rc]
	load.f64    %r11691 <- 0[%r11690]
	store.f64   %r11691 -> 0[nc]
	load.64*    %r11692 <- 0[ra]
	store.64*   %r11692 -> 0[i_o]
	load.f64    %r11693 <- 0[nb]
	load.f64    %r11694 <- 0[nc]
	divu.f64    %r11695 <- %r11693, %r11694
	load.64*    %r11696 <- 0[i_o]
	store.f64   %r11695 -> 0[%r11696]
	load.64*    %r11697 <- 0[i_o]
	store.32    $3 -> 8[%r11697]
	br          .L2715

.L2713:
	load.64*    %r11698 <- 0[pc]
	load.64*    %r11699 <- 0[L]
	store.64*   %r11698 -> 48[%r11699]
	load.64*    %r11700 <- 0[L]
	load.64*    %r11701 <- 0[ra]
	load.64*    %r11702 <- 0[rb]
	load.64*    %r11703 <- 0[rc]
	push.64*    %r11700
	push.64*    %r11701
	push.64*    %r11702
	push.64*    %r11703
	push.32     $8
	call        Arith
	load.64*    %r11704 <- 0[L]
	load.64*    %r11705 <- 24[%r11704]
	store.64*   %r11705 -> 0[base]
	br          .L2715

.L2715:
	br          .L2611

.L2631:
	load.32     %r11706 <- 0[i]
	cast.32     %r11707 <- (32) %r11706
	lsr.32      %r11708 <- %r11707, $23
	and.32      %r11709 <- %r11708, $511
	cast.32     %r11710 <- (32) %r11709
	and.32      %r11711 <- %r11710, $256
	br          %r11711, .L2716, .L2717

.L2716:
	load.64*    %r11712 <- 0[k]
	load.32     %r11713 <- 0[i]
	cast.32     %r11714 <- (32) %r11713
	lsr.32      %r11715 <- %r11714, $23
	and.32      %r11716 <- %r11715, $511
	cast.32     %r11717 <- (32) %r11716
	scast.32    %r11718 <- (32) %r11717
	and.32      %r11719 <- %r11718, $0xfffffeff
	scast.64    %r11720 <- (32) %r11719
	muls.64     %r11721 <- %r11720, $16
	add.64*     %r11722 <- %r11712, %r11721
	phisrc.64*  %phi489 <- %r11722
	br          .L2718

.L2717:
	load.64*    %r11723 <- 0[base]
	load.32     %r11724 <- 0[i]
	cast.32     %r11725 <- (32) %r11724
	lsr.32      %r11726 <- %r11725, $23
	and.32      %r11727 <- %r11726, $511
	cast.32     %r11728 <- (32) %r11727
	scast.64    %r11729 <- (32) %r11728
	muls.64     %r11730 <- %r11729, $16
	add.64*     %r11731 <- %r11723, %r11730
	ptrcast.64* %r11732 <- (64) %r11731
	phisrc.64*  %phi490 <- %r11732
	br          .L2718

.L2718:
	phi.64*     %r11733 <- %phi489, %phi490
	store.64*   %r11733 -> 0[rb]
	load.32     %r11734 <- 0[i]
	cast.32     %r11735 <- (32) %r11734
	lsr.32      %r11736 <- %r11735, $14
	and.32      %r11737 <- %r11736, $511
	cast.32     %r11738 <- (32) %r11737
	and.32      %r11739 <- %r11738, $256
	br          %r11739, .L2719, .L2720

.L2719:
	load.64*    %r11740 <- 0[k]
	load.32     %r11741 <- 0[i]
	cast.32     %r11742 <- (32) %r11741
	lsr.32      %r11743 <- %r11742, $14
	and.32      %r11744 <- %r11743, $511
	cast.32     %r11745 <- (32) %r11744
	scast.32    %r11746 <- (32) %r11745
	and.32      %r11747 <- %r11746, $0xfffffeff
	scast.64    %r11748 <- (32) %r11747
	muls.64     %r11749 <- %r11748, $16
	add.64*     %r11750 <- %r11740, %r11749
	phisrc.64*  %phi491 <- %r11750
	br          .L2721

.L2720:
	load.64*    %r11751 <- 0[base]
	load.32     %r11752 <- 0[i]
	cast.32     %r11753 <- (32) %r11752
	lsr.32      %r11754 <- %r11753, $14
	and.32      %r11755 <- %r11754, $511
	cast.32     %r11756 <- (32) %r11755
	scast.64    %r11757 <- (32) %r11756
	muls.64     %r11758 <- %r11757, $16
	add.64*     %r11759 <- %r11751, %r11758
	ptrcast.64* %r11760 <- (64) %r11759
	phisrc.64*  %phi492 <- %r11760
	br          .L2721

.L2721:
	phi.64*     %r11761 <- %phi491, %phi492
	store.64*   %r11761 -> 0[rc]
	load.64*    %r11762 <- 0[rb]
	load.32     %r11763 <- 8[%r11762]
	seteq.32    %r11764 <- %r11763, $3
	br          %r11764, .L2724, .L2723

.L2724:
	load.64*    %r11765 <- 0[rc]
	load.32     %r11766 <- 8[%r11765]
	seteq.32    %r11767 <- %r11766, $3
	br          %r11767, .L2722, .L2723

.L2722:
	load.64*    %r11768 <- 0[rb]
	load.f64    %r11769 <- 0[%r11768]
	store.f64   %r11769 -> 0[nb]
	load.64*    %r11770 <- 0[rc]
	load.f64    %r11771 <- 0[%r11770]
	store.f64   %r11771 -> 0[nc]
	load.64*    %r11772 <- 0[ra]
	store.64*   %r11772 -> 0[i_o]
	load.f64    %r11773 <- 0[nb]
	load.f64    %r11774 <- 0[nb]
	load.f64    %r11775 <- 0[nc]
	divu.f64    %r11776 <- %r11774, %r11775
	push.f64    %r11776
	call.f64    %r11777 <- floor
	load.f64    %r11778 <- 0[nc]
	mulu.f64    %r11779 <- %r11777, %r11778
	sub.f64     %r11780 <- %r11773, %r11779
	load.64*    %r11781 <- 0[i_o]
	store.f64   %r11780 -> 0[%r11781]
	load.64*    %r11782 <- 0[i_o]
	store.32    $3 -> 8[%r11782]
	br          .L2725

.L2723:
	load.64*    %r11783 <- 0[pc]
	load.64*    %r11784 <- 0[L]
	store.64*   %r11783 -> 48[%r11784]
	load.64*    %r11785 <- 0[L]
	load.64*    %r11786 <- 0[ra]
	load.64*    %r11787 <- 0[rb]
	load.64*    %r11788 <- 0[rc]
	push.64*    %r11785
	push.64*    %r11786
	push.64*    %r11787
	push.64*    %r11788
	push.32     $9
	call        Arith
	load.64*    %r11789 <- 0[L]
	load.64*    %r11790 <- 24[%r11789]
	store.64*   %r11790 -> 0[base]
	br          .L2725

.L2725:
	br          .L2611

.L2632:
	load.32     %r11791 <- 0[i]
	cast.32     %r11792 <- (32) %r11791
	lsr.32      %r11793 <- %r11792, $23
	and.32      %r11794 <- %r11793, $511
	cast.32     %r11795 <- (32) %r11794
	and.32      %r11796 <- %r11795, $256
	br          %r11796, .L2726, .L2727

.L2726:
	load.64*    %r11797 <- 0[k]
	load.32     %r11798 <- 0[i]
	cast.32     %r11799 <- (32) %r11798
	lsr.32      %r11800 <- %r11799, $23
	and.32      %r11801 <- %r11800, $511
	cast.32     %r11802 <- (32) %r11801
	scast.32    %r11803 <- (32) %r11802
	and.32      %r11804 <- %r11803, $0xfffffeff
	scast.64    %r11805 <- (32) %r11804
	muls.64     %r11806 <- %r11805, $16
	add.64*     %r11807 <- %r11797, %r11806
	phisrc.64*  %phi493 <- %r11807
	br          .L2728

.L2727:
	load.64*    %r11808 <- 0[base]
	load.32     %r11809 <- 0[i]
	cast.32     %r11810 <- (32) %r11809
	lsr.32      %r11811 <- %r11810, $23
	and.32      %r11812 <- %r11811, $511
	cast.32     %r11813 <- (32) %r11812
	scast.64    %r11814 <- (32) %r11813
	muls.64     %r11815 <- %r11814, $16
	add.64*     %r11816 <- %r11808, %r11815
	ptrcast.64* %r11817 <- (64) %r11816
	phisrc.64*  %phi494 <- %r11817
	br          .L2728

.L2728:
	phi.64*     %r11818 <- %phi493, %phi494
	store.64*   %r11818 -> 0[rb]
	load.32     %r11819 <- 0[i]
	cast.32     %r11820 <- (32) %r11819
	lsr.32      %r11821 <- %r11820, $14
	and.32      %r11822 <- %r11821, $511
	cast.32     %r11823 <- (32) %r11822
	and.32      %r11824 <- %r11823, $256
	br          %r11824, .L2729, .L2730

.L2729:
	load.64*    %r11825 <- 0[k]
	load.32     %r11826 <- 0[i]
	cast.32     %r11827 <- (32) %r11826
	lsr.32      %r11828 <- %r11827, $14
	and.32      %r11829 <- %r11828, $511
	cast.32     %r11830 <- (32) %r11829
	scast.32    %r11831 <- (32) %r11830
	and.32      %r11832 <- %r11831, $0xfffffeff
	scast.64    %r11833 <- (32) %r11832
	muls.64     %r11834 <- %r11833, $16
	add.64*     %r11835 <- %r11825, %r11834
	phisrc.64*  %phi495 <- %r11835
	br          .L2731

.L2730:
	load.64*    %r11836 <- 0[base]
	load.32     %r11837 <- 0[i]
	cast.32     %r11838 <- (32) %r11837
	lsr.32      %r11839 <- %r11838, $14
	and.32      %r11840 <- %r11839, $511
	cast.32     %r11841 <- (32) %r11840
	scast.64    %r11842 <- (32) %r11841
	muls.64     %r11843 <- %r11842, $16
	add.64*     %r11844 <- %r11836, %r11843
	ptrcast.64* %r11845 <- (64) %r11844
	phisrc.64*  %phi496 <- %r11845
	br          .L2731

.L2731:
	phi.64*     %r11846 <- %phi495, %phi496
	store.64*   %r11846 -> 0[rc]
	load.64*    %r11847 <- 0[rb]
	load.32     %r11848 <- 8[%r11847]
	seteq.32    %r11849 <- %r11848, $3
	br          %r11849, .L2734, .L2733

.L2734:
	load.64*    %r11850 <- 0[rc]
	load.32     %r11851 <- 8[%r11850]
	seteq.32    %r11852 <- %r11851, $3
	br          %r11852, .L2732, .L2733

.L2732:
	load.64*    %r11853 <- 0[rb]
	load.f64    %r11854 <- 0[%r11853]
	store.f64   %r11854 -> 0[nb]
	load.64*    %r11855 <- 0[rc]
	load.f64    %r11856 <- 0[%r11855]
	store.f64   %r11856 -> 0[nc]
	load.64*    %r11857 <- 0[ra]
	store.64*   %r11857 -> 0[i_o]
	load.f64    %r11858 <- 0[nb]
	load.f64    %r11859 <- 0[nc]
	push.f64    %r11858
	push.f64    %r11859
	call.f64    %r11860 <- pow
	load.64*    %r11861 <- 0[i_o]
	store.f64   %r11860 -> 0[%r11861]
	load.64*    %r11862 <- 0[i_o]
	store.32    $3 -> 8[%r11862]
	br          .L2735

.L2733:
	load.64*    %r11863 <- 0[pc]
	load.64*    %r11864 <- 0[L]
	store.64*   %r11863 -> 48[%r11864]
	load.64*    %r11865 <- 0[L]
	load.64*    %r11866 <- 0[ra]
	load.64*    %r11867 <- 0[rb]
	load.64*    %r11868 <- 0[rc]
	push.64*    %r11865
	push.64*    %r11866
	push.64*    %r11867
	push.64*    %r11868
	push.32     $10
	call        Arith
	load.64*    %r11869 <- 0[L]
	load.64*    %r11870 <- 24[%r11869]
	store.64*   %r11870 -> 0[base]
	br          .L2735

.L2735:
	br          .L2611

.L2633:
	load.64*    %r11871 <- 0[base]
	load.32     %r11872 <- 0[i]
	cast.32     %r11873 <- (32) %r11872
	lsr.32      %r11874 <- %r11873, $23
	and.32      %r11875 <- %r11874, $511
	cast.32     %r11876 <- (32) %r11875
	scast.64    %r11877 <- (32) %r11876
	muls.64     %r11878 <- %r11877, $16
	add.64*     %r11879 <- %r11871, %r11878
	store.64*   %r11879 -> 0[rb]
	load.64*    %r11880 <- 0[rb]
	load.32     %r11881 <- 8[%r11880]
	seteq.32    %r11882 <- %r11881, $3
	br          %r11882, .L2736, .L2737

.L2736:
	load.64*    %r11883 <- 0[rb]
	load.f64    %r11884 <- 0[%r11883]
	store.f64   %r11884 -> 0[nb]
	load.64*    %r11885 <- 0[ra]
	store.64*   %r11885 -> 0[i_o]
	load.f64    %r11886 <- 0[nb]
	neg.f64     %r11887 <- %r11886
	load.64*    %r11888 <- 0[i_o]
	store.f64   %r11887 -> 0[%r11888]
	load.64*    %r11889 <- 0[i_o]
	store.32    $3 -> 8[%r11889]
	br          .L2738

.L2737:
	load.64*    %r11890 <- 0[pc]
	load.64*    %r11891 <- 0[L]
	store.64*   %r11890 -> 48[%r11891]
	load.64*    %r11892 <- 0[L]
	load.64*    %r11893 <- 0[ra]
	load.64*    %r11894 <- 0[rb]
	load.64*    %r11895 <- 0[rb]
	push.64*    %r11892
	push.64*    %r11893
	push.64*    %r11894
	push.64*    %r11895
	push.32     $11
	call        Arith
	load.64*    %r11896 <- 0[L]
	load.64*    %r11897 <- 24[%r11896]
	store.64*   %r11897 -> 0[base]
	br          .L2738

.L2738:
	br          .L2611

.L2634:
	load.64*    %r11898 <- 0[base]
	load.32     %r11899 <- 0[i]
	cast.32     %r11900 <- (32) %r11899
	lsr.32      %r11901 <- %r11900, $23
	and.32      %r11902 <- %r11901, $511
	cast.32     %r11903 <- (32) %r11902
	scast.64    %r11904 <- (32) %r11903
	muls.64     %r11905 <- %r11904, $16
	add.64*     %r11906 <- %r11898, %r11905
	load.32     %r11907 <- 8[%r11906]
	seteq.32    %r11908 <- %r11907, $0
	br          %r11908, .L2739, .L2740

.L2739:
	phisrc.32   %phi497 <- $1
	br          .L2741

.L2740:
	load.64*    %r11909 <- 0[base]
	load.32     %r11910 <- 0[i]
	cast.32     %r11911 <- (32) %r11910
	lsr.32      %r11912 <- %r11911, $23
	and.32      %r11913 <- %r11912, $511
	cast.32     %r11914 <- (32) %r11913
	scast.64    %r11915 <- (32) %r11914
	muls.64     %r11916 <- %r11915, $16
	add.64*     %r11917 <- %r11909, %r11916
	load.32     %r11918 <- 8[%r11917]
	seteq.32    %r11919 <- %r11918, $1
	br          %r11919, .L2742, .L2743

.L2742:
	load.64*    %r11920 <- 0[base]
	load.32     %r11921 <- 0[i]
	cast.32     %r11922 <- (32) %r11921
	lsr.32      %r11923 <- %r11922, $23
	and.32      %r11924 <- %r11923, $511
	cast.32     %r11925 <- (32) %r11924
	scast.64    %r11926 <- (32) %r11925
	muls.64     %r11927 <- %r11926, $16
	add.64*     %r11928 <- %r11920, %r11927
	load.32     %r11929 <- 0[%r11928]
	seteq.32    %r11930 <- %r11929, $0
	phisrc.32   %phi498 <- %r11930
	br          .L2744

.L2743:
	phisrc.32   %phi499 <- $0
	br          .L2744

.L2744:
	phi.32      %r11931 <- %phi498, %phi499
	phisrc.32   %phi500 <- %r11931
	br          .L2741

.L2741:
	phi.32      %r11932 <- %phi497, %phi500
	store.32    %r11932 -> 0[res]
	load.64*    %r11933 <- 0[ra]
	store.64*   %r11933 -> 0[i_o]
	load.32     %r11934 <- 0[res]
	load.64*    %r11935 <- 0[i_o]
	store.32    %r11934 -> 0[%r11935]
	load.64*    %r11936 <- 0[i_o]
	store.32    $1 -> 8[%r11936]
	br          .L2611

.L2635:
	load.64*    %r11937 <- 0[base]
	load.32     %r11938 <- 0[i]
	cast.32     %r11939 <- (32) %r11938
	lsr.32      %r11940 <- %r11939, $23
	and.32      %r11941 <- %r11940, $511
	cast.32     %r11942 <- (32) %r11941
	scast.64    %r11943 <- (32) %r11942
	muls.64     %r11944 <- %r11943, $16
	add.64*     %r11945 <- %r11937, %r11944
	store.64*   %r11945 -> 0[rb]
	load.64*    %r11946 <- 0[rb]
	load.32     %r11947 <- 8[%r11946]
	switch.32   %r11947, 4 -> .L2747, 5 -> .L2746, default -> .L2748

.L2746:
	load.64*    %r11948 <- 0[ra]
	store.64*   %r11948 -> 0[i_o]
	load.64*    %r11949 <- 0[rb]
	load.64*    %r11950 <- 0[%r11949]
	add.64*     %r11951 <- %r11950, $0
	push.64*    %r11951
	call.32     %r11952 <- luaH_getn
	fpcast.f64  %r11953 <- (32) %r11952
	load.64*    %r11954 <- 0[i_o]
	store.f64   %r11953 -> 0[%r11954]
	load.64*    %r11955 <- 0[i_o]
	store.32    $3 -> 8[%r11955]
	br          .L2745

.L2747:
	load.64*    %r11956 <- 0[ra]
	store.64*   %r11956 -> 0[i_o]
	load.64*    %r11957 <- 0[rb]
	load.64*    %r11958 <- 0[%r11957]
	load.64     %r11959 <- 16[%r11958]
	fpcast.f64  %r11960 <- (64) %r11959
	load.64*    %r11961 <- 0[i_o]
	store.f64   %r11960 -> 0[%r11961]
	load.64*    %r11962 <- 0[i_o]
	store.32    $3 -> 8[%r11962]
	br          .L2745

.L2748:
	load.64*    %r11963 <- 0[pc]
	load.64*    %r11964 <- 0[L]
	store.64*   %r11963 -> 48[%r11964]
	load.64*    %r11965 <- 0[L]
	load.64*    %r11966 <- 0[rb]
	symaddr.64* %r11967 <- luaO_nilobject_
	load.64*    %r11968 <- 0[ra]
	push.64*    %r11965
	push.64*    %r11966
	push.64*    %r11967
	push.64*    %r11968
	push.32     $12
	call.32     %r11969 <- call_binTM
	br          %r11969, .L2750, .L2749

.L2749:
	load.64*    %r11970 <- 0[L]
	load.64*    %r11971 <- 0[rb]
	symaddr.64* %r11972 <- <anon symbol:0x62d001145638>
	push.64*    %r11970
	push.64*    %r11971
	push.64*    %r11972
	call        luaG_typeerror
	br          .L2750

.L2750:
	load.64*    %r11973 <- 0[L]
	load.64*    %r11974 <- 24[%r11973]
	store.64*   %r11974 -> 0[base]
	br          .L2745

.L2745:
	br          .L2611

.L2636:
	load.32     %r11975 <- 0[i]
	cast.32     %r11976 <- (32) %r11975
	lsr.32      %r11977 <- %r11976, $23
	and.32      %r11978 <- %r11977, $511
	cast.32     %r11979 <- (32) %r11978
	store.32    %r11979 -> 0[b]
	load.32     %r11980 <- 0[i]
	cast.32     %r11981 <- (32) %r11980
	lsr.32      %r11982 <- %r11981, $14
	and.32      %r11983 <- %r11982, $511
	cast.32     %r11984 <- (32) %r11983
	store.32    %r11984 -> 0[c]
	load.64*    %r11985 <- 0[pc]
	load.64*    %r11986 <- 0[L]
	store.64*   %r11985 -> 48[%r11986]
	load.64*    %r11987 <- 0[L]
	load.32     %r11988 <- 0[c]
	load.32     %r11989 <- 0[b]
	sub.32      %r11990 <- %r11988, %r11989
	add.32      %r11991 <- %r11990, $1
	load.32     %r11992 <- 0[c]
	push.64*    %r11987
	push.32     %r11991
	push.32     %r11992
	call        luaV_concat
	load.64*    %r11993 <- 0[L]
	load.64*    %r11994 <- 32[%r11993]
	load.64     %r11995 <- 120[%r11994]
	load.64*    %r11996 <- 0[L]
	load.64*    %r11997 <- 32[%r11996]
	load.64     %r11998 <- 112[%r11997]
	setae.32    %r11999 <- %r11995, %r11998
	br          %r11999, .L2751, .L2752

.L2751:
	load.64*    %r12000 <- 0[L]
	push.64*    %r12000
	call        luaC_step
	br          .L2752

.L2752:
	load.64*    %r12001 <- 0[L]
	load.64*    %r12002 <- 24[%r12001]
	store.64*   %r12002 -> 0[base]
	load.64*    %r12003 <- 0[base]
	load.32     %r12004 <- 0[b]
	scast.64    %r12005 <- (32) %r12004
	muls.64     %r12006 <- %r12005, $16
	add.64*     %r12007 <- %r12003, %r12006
	store.64*   %r12007 -> 0[o2]
	load.64*    %r12008 <- 0[base]
	load.32     %r12009 <- 0[i]
	cast.32     %r12010 <- (32) %r12009
	lsr.32      %r12011 <- %r12010, $6
	and.32      %r12012 <- %r12011, $255
	cast.32     %r12013 <- (32) %r12012
	scast.64    %r12014 <- (32) %r12013
	muls.64     %r12015 <- %r12014, $16
	add.64*     %r12016 <- %r12008, %r12015
	store.64*   %r12016 -> 0[o1]
	load.64*    %r12017 <- 0[o2]
	load.f64    %r12018 <- 0[%r12017]
	fpcast.f64  %r12019 <- (64) %r12018
	load.64*    %r12020 <- 0[o1]
	store.f64   %r12019 -> 0[%r12020]
	load.64*    %r12021 <- 0[o2]
	load.32     %r12022 <- 8[%r12021]
	scast.32    %r12023 <- (32) %r12022
	load.64*    %r12024 <- 0[o1]
	store.32    %r12023 -> 8[%r12024]
	br          .L2611

.L2637:
	load.32     %r12025 <- 0[i]
	cast.32     %r12026 <- (32) %r12025
	lsr.32      %r12027 <- %r12026, $14
	and.32      %r12028 <- %r12027, $0x3ffff
	cast.32     %r12029 <- (32) %r12028
	sub.32      %r12030 <- %r12029, $0x1ffff
	scast.64    %r12031 <- (32) %r12030
	muls.64     %r12032 <- %r12031, $4
	load.64*    %r12033 <- 0[pc]
	cast.64     %r12034 <- (64) %r12033
	add.64      %r12035 <- %r12034, %r12032
	ptrcast.64* %r12036 <- (64) %r12035
	store.64*   %r12036 -> 0[pc]
	br          .L2611

.L2638:
	load.32     %r12037 <- 0[i]
	cast.32     %r12038 <- (32) %r12037
	lsr.32      %r12039 <- %r12038, $23
	and.32      %r12040 <- %r12039, $511
	cast.32     %r12041 <- (32) %r12040
	and.32      %r12042 <- %r12041, $256
	br          %r12042, .L2753, .L2754

.L2753:
	load.64*    %r12043 <- 0[k]
	load.32     %r12044 <- 0[i]
	cast.32     %r12045 <- (32) %r12044
	lsr.32      %r12046 <- %r12045, $23
	and.32      %r12047 <- %r12046, $511
	cast.32     %r12048 <- (32) %r12047
	scast.32    %r12049 <- (32) %r12048
	and.32      %r12050 <- %r12049, $0xfffffeff
	scast.64    %r12051 <- (32) %r12050
	muls.64     %r12052 <- %r12051, $16
	add.64*     %r12053 <- %r12043, %r12052
	phisrc.64*  %phi501 <- %r12053
	br          .L2755

.L2754:
	load.64*    %r12054 <- 0[base]
	load.32     %r12055 <- 0[i]
	cast.32     %r12056 <- (32) %r12055
	lsr.32      %r12057 <- %r12056, $23
	and.32      %r12058 <- %r12057, $511
	cast.32     %r12059 <- (32) %r12058
	scast.64    %r12060 <- (32) %r12059
	muls.64     %r12061 <- %r12060, $16
	add.64*     %r12062 <- %r12054, %r12061
	ptrcast.64* %r12063 <- (64) %r12062
	phisrc.64*  %phi502 <- %r12063
	br          .L2755

.L2755:
	phi.64*     %r12064 <- %phi501, %phi502
	store.64*   %r12064 -> 0[rb]
	load.32     %r12065 <- 0[i]
	cast.32     %r12066 <- (32) %r12065
	lsr.32      %r12067 <- %r12066, $14
	and.32      %r12068 <- %r12067, $511
	cast.32     %r12069 <- (32) %r12068
	and.32      %r12070 <- %r12069, $256
	br          %r12070, .L2756, .L2757

.L2756:
	load.64*    %r12071 <- 0[k]
	load.32     %r12072 <- 0[i]
	cast.32     %r12073 <- (32) %r12072
	lsr.32      %r12074 <- %r12073, $14
	and.32      %r12075 <- %r12074, $511
	cast.32     %r12076 <- (32) %r12075
	scast.32    %r12077 <- (32) %r12076
	and.32      %r12078 <- %r12077, $0xfffffeff
	scast.64    %r12079 <- (32) %r12078
	muls.64     %r12080 <- %r12079, $16
	add.64*     %r12081 <- %r12071, %r12080
	phisrc.64*  %phi503 <- %r12081
	br          .L2758

.L2757:
	load.64*    %r12082 <- 0[base]
	load.32     %r12083 <- 0[i]
	cast.32     %r12084 <- (32) %r12083
	lsr.32      %r12085 <- %r12084, $14
	and.32      %r12086 <- %r12085, $511
	cast.32     %r12087 <- (32) %r12086
	scast.64    %r12088 <- (32) %r12087
	muls.64     %r12089 <- %r12088, $16
	add.64*     %r12090 <- %r12082, %r12089
	ptrcast.64* %r12091 <- (64) %r12090
	phisrc.64*  %phi504 <- %r12091
	br          .L2758

.L2758:
	phi.64*     %r12092 <- %phi503, %phi504
	store.64*   %r12092 -> 0[rc]
	load.64*    %r12093 <- 0[pc]
	load.64*    %r12094 <- 0[L]
	store.64*   %r12093 -> 48[%r12094]
	load.64*    %r12095 <- 0[rb]
	load.32     %r12096 <- 8[%r12095]
	load.64*    %r12097 <- 0[rc]
	load.32     %r12098 <- 8[%r12097]
	seteq.32    %r12099 <- %r12096, %r12098
	br          %r12099, .L2761, .L2762

.L2761:
	load.64*    %r12100 <- 0[L]
	load.64*    %r12101 <- 0[rb]
	load.64*    %r12102 <- 0[rc]
	push.64*    %r12100
	push.64*    %r12101
	push.64*    %r12102
	call.32     %r12103 <- luaV_equalval
	phisrc.32   %phi505 <- %r12103
	br          .L2763

.L2762:
	phisrc.32   %phi506 <- $0
	br          .L2763

.L2763:
	phi.32      %r12104 <- %phi505, %phi506
	load.32     %r12105 <- 0[i]
	cast.32     %r12106 <- (32) %r12105
	lsr.32      %r12107 <- %r12106, $6
	and.32      %r12108 <- %r12107, $255
	cast.32     %r12109 <- (32) %r12108
	seteq.32    %r12110 <- %r12104, %r12109
	br          %r12110, .L2759, .L2760

.L2759:
	load.64*    %r12111 <- 0[pc]
	load.32     %r12112 <- 0[%r12111]
	cast.32     %r12113 <- (32) %r12112
	lsr.32      %r12114 <- %r12113, $14
	and.32      %r12115 <- %r12114, $0x3ffff
	cast.32     %r12116 <- (32) %r12115
	sub.32      %r12117 <- %r12116, $0x1ffff
	scast.64    %r12118 <- (32) %r12117
	muls.64     %r12119 <- %r12118, $4
	load.64*    %r12120 <- 0[pc]
	cast.64     %r12121 <- (64) %r12120
	add.64      %r12122 <- %r12121, %r12119
	ptrcast.64* %r12123 <- (64) %r12122
	store.64*   %r12123 -> 0[pc]
	br          .L2760

.L2760:
	load.64*    %r12124 <- 0[L]
	load.64*    %r12125 <- 24[%r12124]
	store.64*   %r12125 -> 0[base]
	load.64*    %r12126 <- 0[pc]
	add.64*     %r12127 <- %r12126, $4
	store.64*   %r12127 -> 0[pc]
	br          .L2611

.L2639:
	load.64*    %r12128 <- 0[pc]
	load.64*    %r12129 <- 0[L]
	store.64*   %r12128 -> 48[%r12129]
	load.64*    %r12130 <- 0[L]
	load.32     %r12131 <- 0[i]
	cast.32     %r12132 <- (32) %r12131
	lsr.32      %r12133 <- %r12132, $23
	and.32      %r12134 <- %r12133, $511
	cast.32     %r12135 <- (32) %r12134
	and.32      %r12136 <- %r12135, $256
	br          %r12136, .L2766, .L2767

.L2766:
	load.64*    %r12137 <- 0[k]
	load.32     %r12138 <- 0[i]
	cast.32     %r12139 <- (32) %r12138
	lsr.32      %r12140 <- %r12139, $23
	and.32      %r12141 <- %r12140, $511
	cast.32     %r12142 <- (32) %r12141
	scast.32    %r12143 <- (32) %r12142
	and.32      %r12144 <- %r12143, $0xfffffeff
	scast.64    %r12145 <- (32) %r12144
	muls.64     %r12146 <- %r12145, $16
	add.64*     %r12147 <- %r12137, %r12146
	phisrc.64*  %phi507 <- %r12147
	br          .L2768

.L2767:
	load.64*    %r12148 <- 0[base]
	load.32     %r12149 <- 0[i]
	cast.32     %r12150 <- (32) %r12149
	lsr.32      %r12151 <- %r12150, $23
	and.32      %r12152 <- %r12151, $511
	cast.32     %r12153 <- (32) %r12152
	scast.64    %r12154 <- (32) %r12153
	muls.64     %r12155 <- %r12154, $16
	add.64*     %r12156 <- %r12148, %r12155
	ptrcast.64* %r12157 <- (64) %r12156
	phisrc.64*  %phi508 <- %r12157
	br          .L2768

.L2768:
	phi.64*     %r12158 <- %phi507, %phi508
	load.32     %r12159 <- 0[i]
	cast.32     %r12160 <- (32) %r12159
	lsr.32      %r12161 <- %r12160, $14
	and.32      %r12162 <- %r12161, $511
	cast.32     %r12163 <- (32) %r12162
	and.32      %r12164 <- %r12163, $256
	br          %r12164, .L2769, .L2770

.L2769:
	load.64*    %r12165 <- 0[k]
	load.32     %r12166 <- 0[i]
	cast.32     %r12167 <- (32) %r12166
	lsr.32      %r12168 <- %r12167, $14
	and.32      %r12169 <- %r12168, $511
	cast.32     %r12170 <- (32) %r12169
	scast.32    %r12171 <- (32) %r12170
	and.32      %r12172 <- %r12171, $0xfffffeff
	scast.64    %r12173 <- (32) %r12172
	muls.64     %r12174 <- %r12173, $16
	add.64*     %r12175 <- %r12165, %r12174
	phisrc.64*  %phi509 <- %r12175
	br          .L2771

.L2770:
	load.64*    %r12176 <- 0[base]
	load.32     %r12177 <- 0[i]
	cast.32     %r12178 <- (32) %r12177
	lsr.32      %r12179 <- %r12178, $14
	and.32      %r12180 <- %r12179, $511
	cast.32     %r12181 <- (32) %r12180
	scast.64    %r12182 <- (32) %r12181
	muls.64     %r12183 <- %r12182, $16
	add.64*     %r12184 <- %r12176, %r12183
	ptrcast.64* %r12185 <- (64) %r12184
	phisrc.64*  %phi510 <- %r12185
	br          .L2771

.L2771:
	phi.64*     %r12186 <- %phi509, %phi510
	push.64*    %r12130
	push.64*    %r12158
	push.64*    %r12186
	call.32     %r12187 <- luaV_lessthan
	load.32     %r12188 <- 0[i]
	cast.32     %r12189 <- (32) %r12188
	lsr.32      %r12190 <- %r12189, $6
	and.32      %r12191 <- %r12190, $255
	cast.32     %r12192 <- (32) %r12191
	seteq.32    %r12193 <- %r12187, %r12192
	br          %r12193, .L2764, .L2765

.L2764:
	load.64*    %r12194 <- 0[pc]
	load.32     %r12195 <- 0[%r12194]
	cast.32     %r12196 <- (32) %r12195
	lsr.32      %r12197 <- %r12196, $14
	and.32      %r12198 <- %r12197, $0x3ffff
	cast.32     %r12199 <- (32) %r12198
	sub.32      %r12200 <- %r12199, $0x1ffff
	scast.64    %r12201 <- (32) %r12200
	muls.64     %r12202 <- %r12201, $4
	load.64*    %r12203 <- 0[pc]
	cast.64     %r12204 <- (64) %r12203
	add.64      %r12205 <- %r12204, %r12202
	ptrcast.64* %r12206 <- (64) %r12205
	store.64*   %r12206 -> 0[pc]
	br          .L2765

.L2765:
	load.64*    %r12207 <- 0[L]
	load.64*    %r12208 <- 24[%r12207]
	store.64*   %r12208 -> 0[base]
	load.64*    %r12209 <- 0[pc]
	add.64*     %r12210 <- %r12209, $4
	store.64*   %r12210 -> 0[pc]
	br          .L2611

.L2640:
	load.64*    %r12211 <- 0[pc]
	load.64*    %r12212 <- 0[L]
	store.64*   %r12211 -> 48[%r12212]
	load.64*    %r12213 <- 0[L]
	load.32     %r12214 <- 0[i]
	cast.32     %r12215 <- (32) %r12214
	lsr.32      %r12216 <- %r12215, $23
	and.32      %r12217 <- %r12216, $511
	cast.32     %r12218 <- (32) %r12217
	and.32      %r12219 <- %r12218, $256
	br          %r12219, .L2774, .L2775

.L2774:
	load.64*    %r12220 <- 0[k]
	load.32     %r12221 <- 0[i]
	cast.32     %r12222 <- (32) %r12221
	lsr.32      %r12223 <- %r12222, $23
	and.32      %r12224 <- %r12223, $511
	cast.32     %r12225 <- (32) %r12224
	scast.32    %r12226 <- (32) %r12225
	and.32      %r12227 <- %r12226, $0xfffffeff
	scast.64    %r12228 <- (32) %r12227
	muls.64     %r12229 <- %r12228, $16
	add.64*     %r12230 <- %r12220, %r12229
	phisrc.64*  %phi511 <- %r12230
	br          .L2776

.L2775:
	load.64*    %r12231 <- 0[base]
	load.32     %r12232 <- 0[i]
	cast.32     %r12233 <- (32) %r12232
	lsr.32      %r12234 <- %r12233, $23
	and.32      %r12235 <- %r12234, $511
	cast.32     %r12236 <- (32) %r12235
	scast.64    %r12237 <- (32) %r12236
	muls.64     %r12238 <- %r12237, $16
	add.64*     %r12239 <- %r12231, %r12238
	ptrcast.64* %r12240 <- (64) %r12239
	phisrc.64*  %phi512 <- %r12240
	br          .L2776

.L2776:
	phi.64*     %r12241 <- %phi511, %phi512
	load.32     %r12242 <- 0[i]
	cast.32     %r12243 <- (32) %r12242
	lsr.32      %r12244 <- %r12243, $14
	and.32      %r12245 <- %r12244, $511
	cast.32     %r12246 <- (32) %r12245
	and.32      %r12247 <- %r12246, $256
	br          %r12247, .L2777, .L2778

.L2777:
	load.64*    %r12248 <- 0[k]
	load.32     %r12249 <- 0[i]
	cast.32     %r12250 <- (32) %r12249
	lsr.32      %r12251 <- %r12250, $14
	and.32      %r12252 <- %r12251, $511
	cast.32     %r12253 <- (32) %r12252
	scast.32    %r12254 <- (32) %r12253
	and.32      %r12255 <- %r12254, $0xfffffeff
	scast.64    %r12256 <- (32) %r12255
	muls.64     %r12257 <- %r12256, $16
	add.64*     %r12258 <- %r12248, %r12257
	phisrc.64*  %phi513 <- %r12258
	br          .L2779

.L2778:
	load.64*    %r12259 <- 0[base]
	load.32     %r12260 <- 0[i]
	cast.32     %r12261 <- (32) %r12260
	lsr.32      %r12262 <- %r12261, $14
	and.32      %r12263 <- %r12262, $511
	cast.32     %r12264 <- (32) %r12263
	scast.64    %r12265 <- (32) %r12264
	muls.64     %r12266 <- %r12265, $16
	add.64*     %r12267 <- %r12259, %r12266
	ptrcast.64* %r12268 <- (64) %r12267
	phisrc.64*  %phi514 <- %r12268
	br          .L2779

.L2779:
	phi.64*     %r12269 <- %phi513, %phi514
	push.64*    %r12213
	push.64*    %r12241
	push.64*    %r12269
	call.32     %r12270 <- lessequal
	load.32     %r12271 <- 0[i]
	cast.32     %r12272 <- (32) %r12271
	lsr.32      %r12273 <- %r12272, $6
	and.32      %r12274 <- %r12273, $255
	cast.32     %r12275 <- (32) %r12274
	seteq.32    %r12276 <- %r12270, %r12275
	br          %r12276, .L2772, .L2773

.L2772:
	load.64*    %r12277 <- 0[pc]
	load.32     %r12278 <- 0[%r12277]
	cast.32     %r12279 <- (32) %r12278
	lsr.32      %r12280 <- %r12279, $14
	and.32      %r12281 <- %r12280, $0x3ffff
	cast.32     %r12282 <- (32) %r12281
	sub.32      %r12283 <- %r12282, $0x1ffff
	scast.64    %r12284 <- (32) %r12283
	muls.64     %r12285 <- %r12284, $4
	load.64*    %r12286 <- 0[pc]
	cast.64     %r12287 <- (64) %r12286
	add.64      %r12288 <- %r12287, %r12285
	ptrcast.64* %r12289 <- (64) %r12288
	store.64*   %r12289 -> 0[pc]
	br          .L2773

.L2773:
	load.64*    %r12290 <- 0[L]
	load.64*    %r12291 <- 24[%r12290]
	store.64*   %r12291 -> 0[base]
	load.64*    %r12292 <- 0[pc]
	add.64*     %r12293 <- %r12292, $4
	store.64*   %r12293 -> 0[pc]
	br          .L2611

.L2641:
	load.64*    %r12294 <- 0[ra]
	load.32     %r12295 <- 8[%r12294]
	seteq.32    %r12296 <- %r12295, $0
	br          %r12296, .L2782, .L2783

.L2782:
	phisrc.32   %phi515 <- $1
	br          .L2784

.L2783:
	load.64*    %r12297 <- 0[ra]
	load.32     %r12298 <- 8[%r12297]
	seteq.32    %r12299 <- %r12298, $1
	br          %r12299, .L2785, .L2786

.L2785:
	load.64*    %r12300 <- 0[ra]
	load.32     %r12301 <- 0[%r12300]
	seteq.32    %r12302 <- %r12301, $0
	phisrc.32   %phi516 <- %r12302
	br          .L2787

.L2786:
	phisrc.32   %phi517 <- $0
	br          .L2787

.L2787:
	phi.32      %r12303 <- %phi516, %phi517
	phisrc.32   %phi518 <- %r12303
	br          .L2784

.L2784:
	phi.32      %r12304 <- %phi515, %phi518
	load.32     %r12305 <- 0[i]
	cast.32     %r12306 <- (32) %r12305
	lsr.32      %r12307 <- %r12306, $14
	and.32      %r12308 <- %r12307, $511
	cast.32     %r12309 <- (32) %r12308
	setne.32    %r12310 <- %r12304, %r12309
	br          %r12310, .L2780, .L2781

.L2780:
	load.64*    %r12311 <- 0[pc]
	load.32     %r12312 <- 0[%r12311]
	cast.32     %r12313 <- (32) %r12312
	lsr.32      %r12314 <- %r12313, $14
	and.32      %r12315 <- %r12314, $0x3ffff
	cast.32     %r12316 <- (32) %r12315
	sub.32      %r12317 <- %r12316, $0x1ffff
	scast.64    %r12318 <- (32) %r12317
	muls.64     %r12319 <- %r12318, $4
	load.64*    %r12320 <- 0[pc]
	cast.64     %r12321 <- (64) %r12320
	add.64      %r12322 <- %r12321, %r12319
	ptrcast.64* %r12323 <- (64) %r12322
	store.64*   %r12323 -> 0[pc]
	br          .L2781

.L2781:
	load.64*    %r12324 <- 0[pc]
	add.64*     %r12325 <- %r12324, $4
	store.64*   %r12325 -> 0[pc]
	br          .L2611

.L2642:
	load.64*    %r12326 <- 0[base]
	load.32     %r12327 <- 0[i]
	cast.32     %r12328 <- (32) %r12327
	lsr.32      %r12329 <- %r12328, $23
	and.32      %r12330 <- %r12329, $511
	cast.32     %r12331 <- (32) %r12330
	scast.64    %r12332 <- (32) %r12331
	muls.64     %r12333 <- %r12332, $16
	add.64*     %r12334 <- %r12326, %r12333
	store.64*   %r12334 -> 0[rb]
	load.64*    %r12335 <- 0[rb]
	load.32     %r12336 <- 8[%r12335]
	seteq.32    %r12337 <- %r12336, $0
	br          %r12337, .L2790, .L2791

.L2790:
	phisrc.32   %phi519 <- $1
	br          .L2792

.L2791:
	load.64*    %r12338 <- 0[rb]
	load.32     %r12339 <- 8[%r12338]
	seteq.32    %r12340 <- %r12339, $1
	br          %r12340, .L2793, .L2794

.L2793:
	load.64*    %r12341 <- 0[rb]
	load.32     %r12342 <- 0[%r12341]
	seteq.32    %r12343 <- %r12342, $0
	phisrc.32   %phi520 <- %r12343
	br          .L2795

.L2794:
	phisrc.32   %phi521 <- $0
	br          .L2795

.L2795:
	phi.32      %r12344 <- %phi520, %phi521
	phisrc.32   %phi522 <- %r12344
	br          .L2792

.L2792:
	phi.32      %r12345 <- %phi519, %phi522
	load.32     %r12346 <- 0[i]
	cast.32     %r12347 <- (32) %r12346
	lsr.32      %r12348 <- %r12347, $14
	and.32      %r12349 <- %r12348, $511
	cast.32     %r12350 <- (32) %r12349
	setne.32    %r12351 <- %r12345, %r12350
	br          %r12351, .L2788, .L2789

.L2788:
	load.64*    %r12352 <- 0[rb]
	store.64*   %r12352 -> 0[o2]
	load.64*    %r12353 <- 0[ra]
	store.64*   %r12353 -> 0[o1]
	load.64*    %r12354 <- 0[o2]
	load.f64    %r12355 <- 0[%r12354]
	fpcast.f64  %r12356 <- (64) %r12355
	load.64*    %r12357 <- 0[o1]
	store.f64   %r12356 -> 0[%r12357]
	load.64*    %r12358 <- 0[o2]
	load.32     %r12359 <- 8[%r12358]
	scast.32    %r12360 <- (32) %r12359
	load.64*    %r12361 <- 0[o1]
	store.32    %r12360 -> 8[%r12361]
	load.64*    %r12362 <- 0[pc]
	load.32     %r12363 <- 0[%r12362]
	cast.32     %r12364 <- (32) %r12363
	lsr.32      %r12365 <- %r12364, $14
	and.32      %r12366 <- %r12365, $0x3ffff
	cast.32     %r12367 <- (32) %r12366
	sub.32      %r12368 <- %r12367, $0x1ffff
	scast.64    %r12369 <- (32) %r12368
	muls.64     %r12370 <- %r12369, $4
	load.64*    %r12371 <- 0[pc]
	cast.64     %r12372 <- (64) %r12371
	add.64      %r12373 <- %r12372, %r12370
	ptrcast.64* %r12374 <- (64) %r12373
	store.64*   %r12374 -> 0[pc]
	br          .L2789

.L2789:
	load.64*    %r12375 <- 0[pc]
	add.64*     %r12376 <- %r12375, $4
	store.64*   %r12376 -> 0[pc]
	br          .L2611

.L2643:
	load.32     %r12377 <- 0[i]
	cast.32     %r12378 <- (32) %r12377
	lsr.32      %r12379 <- %r12378, $23
	and.32      %r12380 <- %r12379, $511
	cast.32     %r12381 <- (32) %r12380
	store.32    %r12381 -> 0[b]
	load.32     %r12382 <- 0[i]
	cast.32     %r12383 <- (32) %r12382
	lsr.32      %r12384 <- %r12383, $14
	and.32      %r12385 <- %r12384, $511
	cast.32     %r12386 <- (32) %r12385
	sub.32      %r12387 <- %r12386, $1
	store.32    %r12387 -> 0[nresults]
	load.32     %r12388 <- 0[b]
	setne.32    %r12389 <- %r12388, $0
	br          %r12389, .L2796, .L2797

.L2796:
	load.64*    %r12390 <- 0[ra]
	load.32     %r12391 <- 0[b]
	scast.64    %r12392 <- (32) %r12391
	muls.64     %r12393 <- %r12392, $16
	add.64*     %r12394 <- %r12390, %r12393
	load.64*    %r12395 <- 0[L]
	store.64*   %r12394 -> 16[%r12395]
	br          .L2797

.L2797:
	load.64*    %r12396 <- 0[pc]
	load.64*    %r12397 <- 0[L]
	store.64*   %r12396 -> 48[%r12397]
	load.64*    %r12398 <- 0[L]
	load.64*    %r12399 <- 0[ra]
	load.32     %r12400 <- 0[nresults]
	push.64*    %r12398
	push.64*    %r12399
	push.32     %r12400
	call.32     %r12401 <- luaD_precall
	switch.32   %r12401, 0 -> .L2799, 1 -> .L2800, default -> .L2801

.L2799:
	load.32     %r12402 <- 0[nexeccalls]
	add.32      %r12403 <- %r12402, $1
	store.32    %r12403 -> 0[nexeccalls]
	br          .L2609

.L2800:
	load.32     %r12404 <- 0[nresults]
	setge.32    %r12405 <- %r12404, $0
	br          %r12405, .L2802, .L2803

.L2802:
	load.64*    %r12406 <- 0[L]
	load.64*    %r12407 <- 40[%r12406]
	load.64*    %r12408 <- 16[%r12407]
	load.64*    %r12409 <- 0[L]
	store.64*   %r12408 -> 16[%r12409]
	br          .L2803

.L2803:
	load.64*    %r12410 <- 0[L]
	load.64*    %r12411 <- 24[%r12410]
	store.64*   %r12411 -> 0[base]
	br          .L2611

.L2801:
	br          .L2804

.L2644:
	load.32     %r12412 <- 0[i]
	cast.32     %r12413 <- (32) %r12412
	lsr.32      %r12414 <- %r12413, $23
	and.32      %r12415 <- %r12414, $511
	cast.32     %r12416 <- (32) %r12415
	store.32    %r12416 -> 0[b]
	load.32     %r12417 <- 0[b]
	setne.32    %r12418 <- %r12417, $0
	br          %r12418, .L2805, .L2806

.L2805:
	load.64*    %r12419 <- 0[ra]
	load.32     %r12420 <- 0[b]
	scast.64    %r12421 <- (32) %r12420
	muls.64     %r12422 <- %r12421, $16
	add.64*     %r12423 <- %r12419, %r12422
	load.64*    %r12424 <- 0[L]
	store.64*   %r12423 -> 16[%r12424]
	br          .L2806

.L2806:
	load.64*    %r12425 <- 0[pc]
	load.64*    %r12426 <- 0[L]
	store.64*   %r12425 -> 48[%r12426]
	load.64*    %r12427 <- 0[L]
	load.64*    %r12428 <- 0[ra]
	push.64*    %r12427
	push.64*    %r12428
	push.32     $0xffffffff
	call.32     %r12429 <- luaD_precall
	switch.32   %r12429, 0 -> .L2808, 1 -> .L2809, default -> .L2810

.L2808:
	load.64*    %r12430 <- 0[L]
	load.64*    %r12431 <- 40[%r12430]
	sub.64*     %r12432 <- %r12431, $40
	store.64*   %r12432 -> 0[ci]
	load.64*    %r12433 <- 0[ci]
	load.64*    %r12434 <- 8[%r12433]
	store.64*   %r12434 -> 0[func]
	load.64*    %r12435 <- 0[ci]
	load.64*    %r12436 <- 48[%r12435]
	store.64*   %r12436 -> 0[pfunc]
	load.64*    %r12437 <- 0[L]
	load.64*    %r12438 <- 152[%r12437]
	br          %r12438, .L2811, .L2812

.L2811:
	load.64*    %r12439 <- 0[L]
	load.64*    %r12440 <- 0[ci]
	load.64*    %r12441 <- 0[%r12440]
	push.64*    %r12439
	push.64*    %r12441
	call        luaF_close
	br          .L2812

.L2812:
	load.64*    %r12442 <- 0[ci]
	load.64*    %r12443 <- 8[%r12442]
	load.64*    %r12444 <- 0[ci]
	load.64*    %r12445 <- 40[%r12444]
	load.64*    %r12446 <- 0[pfunc]
	sub.64      %r12447 <- %r12445, %r12446
	divs.64     %r12448 <- %r12447, $16
	muls.64     %r12449 <- %r12448, $16
	add.64*     %r12450 <- %r12443, %r12449
	load.64*    %r12451 <- 0[ci]
	store.64*   %r12450 -> 0[%r12451]
	load.64*    %r12452 <- 0[L]
	store.64*   %r12450 -> 24[%r12452]
	store.32    $0 -> 0[aux]
	br          .L2816

.L2816:
	load.64*    %r12453 <- 0[pfunc]
	load.32     %r12454 <- 0[aux]
	scast.64    %r12455 <- (32) %r12454
	muls.64     %r12456 <- %r12455, $16
	add.64*     %r12457 <- %r12453, %r12456
	load.64*    %r12458 <- 0[L]
	load.64*    %r12459 <- 16[%r12458]
	setb.32     %r12460 <- %r12457, %r12459
	br          %r12460, .L2813, .L2815

.L2813:
	load.64*    %r12461 <- 0[pfunc]
	load.32     %r12462 <- 0[aux]
	scast.64    %r12463 <- (32) %r12462
	muls.64     %r12464 <- %r12463, $16
	add.64*     %r12465 <- %r12461, %r12464
	store.64*   %r12465 -> 0[o2]
	load.64*    %r12466 <- 0[func]
	load.32     %r12467 <- 0[aux]
	scast.64    %r12468 <- (32) %r12467
	muls.64     %r12469 <- %r12468, $16
	add.64*     %r12470 <- %r12466, %r12469
	store.64*   %r12470 -> 0[o1]
	load.64*    %r12471 <- 0[o2]
	load.f64    %r12472 <- 0[%r12471]
	fpcast.f64  %r12473 <- (64) %r12472
	load.64*    %r12474 <- 0[o1]
	store.f64   %r12473 -> 0[%r12474]
	load.64*    %r12475 <- 0[o2]
	load.32     %r12476 <- 8[%r12475]
	scast.32    %r12477 <- (32) %r12476
	load.64*    %r12478 <- 0[o1]
	store.32    %r12477 -> 8[%r12478]
	br          .L2814

.L2814:
	load.32     %r12479 <- 0[aux]
	add.32      %r12480 <- %r12479, $1
	store.32    %r12480 -> 0[aux]
	br          .L2816

.L2815:
	load.64*    %r12481 <- 0[func]
	load.32     %r12482 <- 0[aux]
	scast.64    %r12483 <- (32) %r12482
	muls.64     %r12484 <- %r12483, $16
	add.64*     %r12485 <- %r12481, %r12484
	load.64*    %r12486 <- 0[L]
	store.64*   %r12485 -> 16[%r12486]
	load.64*    %r12487 <- 0[ci]
	store.64*   %r12485 -> 16[%r12487]
	load.64*    %r12488 <- 0[L]
	load.64*    %r12489 <- 48[%r12488]
	load.64*    %r12490 <- 0[ci]
	store.64*   %r12489 -> 24[%r12490]
	load.64*    %r12491 <- 0[ci]
	load.32     %r12492 <- 36[%r12491]
	add.32      %r12493 <- %r12492, $1
	store.32    %r12493 -> 36[%r12491]
	load.64*    %r12494 <- 0[L]
	load.64*    %r12495 <- 40[%r12494]
	sub.64*     %r12496 <- %r12495, $40
	store.64*   %r12496 -> 40[%r12494]
	br          .L2609

.L2809:
	load.64*    %r12497 <- 0[L]
	load.64*    %r12498 <- 24[%r12497]
	store.64*   %r12498 -> 0[base]
	br          .L2611

.L2810:
	br          .L2804

.L2645:
	load.32     %r12499 <- 0[i]
	cast.32     %r12500 <- (32) %r12499
	lsr.32      %r12501 <- %r12500, $23
	and.32      %r12502 <- %r12501, $511
	cast.32     %r12503 <- (32) %r12502
	store.32    %r12503 -> 0[b]
	load.32     %r12504 <- 0[b]
	setne.32    %r12505 <- %r12504, $0
	br          %r12505, .L2817, .L2818

.L2817:
	load.64*    %r12506 <- 0[ra]
	load.32     %r12507 <- 0[b]
	scast.64    %r12508 <- (32) %r12507
	muls.64     %r12509 <- %r12508, $16
	add.64*     %r12510 <- %r12506, %r12509
	sub.64*     %r12511 <- %r12510, $16
	load.64*    %r12512 <- 0[L]
	store.64*   %r12511 -> 16[%r12512]
	br          .L2818

.L2818:
	load.64*    %r12513 <- 0[L]
	load.64*    %r12514 <- 152[%r12513]
	br          %r12514, .L2819, .L2820

.L2819:
	load.64*    %r12515 <- 0[L]
	load.64*    %r12516 <- 0[base]
	push.64*    %r12515
	push.64*    %r12516
	call        luaF_close
	br          .L2820

.L2820:
	load.64*    %r12517 <- 0[pc]
	load.64*    %r12518 <- 0[L]
	store.64*   %r12517 -> 48[%r12518]
	load.64*    %r12519 <- 0[L]
	load.64*    %r12520 <- 0[ra]
	push.64*    %r12519
	push.64*    %r12520
	call.32     %r12521 <- luaD_poscall
	store.32    %r12521 -> 0[b]
	load.32     %r12522 <- 0[nexeccalls]
	sub.32      %r12523 <- %r12522, $1
	store.32    %r12523 -> 0[nexeccalls]
	seteq.32    %r12524 <- %r12523, $0
	br          %r12524, .L2821, .L2822

.L2821:
	br          .L2804

.L2822:
	load.32     %r12525 <- 0[b]
	br          %r12525, .L2824, .L2825

.L2824:
	load.64*    %r12526 <- 0[L]
	load.64*    %r12527 <- 40[%r12526]
	load.64*    %r12528 <- 16[%r12527]
	load.64*    %r12529 <- 0[L]
	store.64*   %r12528 -> 16[%r12529]
	br          .L2825

.L2825:
	br          .L2609

.L2646:
	load.64*    %r12530 <- 0[ra]
	load.f64    %r12531 <- 32[%r12530]
	store.f64   %r12531 -> 0[step]
	load.64*    %r12532 <- 0[ra]
	load.f64    %r12533 <- 0[%r12532]
	load.f64    %r12534 <- 0[step]
	add.f64     %r12535 <- %r12533, %r12534
	store.f64   %r12535 -> 0[idx]
	load.64*    %r12536 <- 0[ra]
	load.f64    %r12537 <- 16[%r12536]
	store.f64   %r12537 -> 0[limit]
	load.f64    %r12538 <- 0[idx]
	load.f64    %r12539 <- 0[limit]
	setle.32    %r12540 <- %r12538, %r12539
	load.f64    %r12541 <- 0[limit]
	load.f64    %r12542 <- 0[idx]
	setle.32    %r12543 <- %r12541, %r12542
	set.f64     %r12544 <- 0.000000
	load.f64    %r12545 <- 0[step]
	setlt.32    %r12546 <- %r12544, %r12545
	select.32   %r12547 <- %r12546, %r12540, %r12543
	br          %r12547, .L2826, .L2827

.L2826:
	load.32     %r12548 <- 0[i]
	cast.32     %r12549 <- (32) %r12548
	lsr.32      %r12550 <- %r12549, $14
	and.32      %r12551 <- %r12550, $0x3ffff
	cast.32     %r12552 <- (32) %r12551
	sub.32      %r12553 <- %r12552, $0x1ffff
	scast.64    %r12554 <- (32) %r12553
	muls.64     %r12555 <- %r12554, $4
	load.64*    %r12556 <- 0[pc]
	cast.64     %r12557 <- (64) %r12556
	add.64      %r12558 <- %r12557, %r12555
	ptrcast.64* %r12559 <- (64) %r12558
	store.64*   %r12559 -> 0[pc]
	load.64*    %r12560 <- 0[ra]
	store.64*   %r12560 -> 0[i_o]
	load.f64    %r12561 <- 0[idx]
	load.64*    %r12562 <- 0[i_o]
	store.f64   %r12561 -> 0[%r12562]
	load.64*    %r12563 <- 0[i_o]
	store.32    $3 -> 8[%r12563]
	load.64*    %r12564 <- 0[ra]
	add.64*     %r12565 <- %r12564, $48
	store.64*   %r12565 -> 0[i_o]
	load.f64    %r12566 <- 0[idx]
	load.64*    %r12567 <- 0[i_o]
	store.f64   %r12566 -> 0[%r12567]
	load.64*    %r12568 <- 0[i_o]
	store.32    $3 -> 8[%r12568]
	br          .L2827

.L2827:
	br          .L2611

.L2647:
	load.64*    %r12569 <- 0[ra]
	store.64*   %r12569 -> 0[init]
	load.64*    %r12570 <- 0[ra]
	add.64*     %r12571 <- %r12570, $16
	store.64*   %r12571 -> 0[plimit]
	load.64*    %r12572 <- 0[ra]
	add.64*     %r12573 <- %r12572, $32
	store.64*   %r12573 -> 0[pstep]
	load.64*    %r12574 <- 0[pc]
	load.64*    %r12575 <- 0[L]
	store.64*   %r12574 -> 48[%r12575]
	load.64*    %r12576 <- 0[init]
	load.32     %r12577 <- 8[%r12576]
	scast.32    %r12578 <- (32) %r12577
	seteq.32    %r12579 <- %r12578, $3
	br          %r12579, .L2829, .L2830

.L2830:
	load.64*    %r12580 <- 0[init]
	load.64*    %r12581 <- 0[ra]
	push.64*    %r12580
	push.64*    %r12581
	call.64*    %r12582 <- luaV_tonumber
	store.64*   %r12582 -> 0[init]
	setne.32    %r12583 <- %r12582, $0
	br          %r12583, .L2829, .L2828

.L2828:
	load.64*    %r12584 <- 0[L]
	symaddr.64* %r12585 <- <anon symbol:0x62d00114e6d0>
	push.64*    %r12584
	push.64*    %r12585
	call        luaG_runerror
	br          .L2831

.L2829:
	load.64*    %r12586 <- 0[plimit]
	load.32     %r12587 <- 8[%r12586]
	scast.32    %r12588 <- (32) %r12587
	seteq.32    %r12589 <- %r12588, $3
	br          %r12589, .L2833, .L2834

.L2834:
	load.64*    %r12590 <- 0[plimit]
	load.64*    %r12591 <- 0[ra]
	add.64*     %r12592 <- %r12591, $16
	push.64*    %r12590
	push.64*    %r12592
	call.64*    %r12593 <- luaV_tonumber
	store.64*   %r12593 -> 0[plimit]
	setne.32    %r12594 <- %r12593, $0
	br          %r12594, .L2833, .L2832

.L2832:
	load.64*    %r12595 <- 0[L]
	symaddr.64* %r12596 <- <anon symbol:0x62d00114ec40>
	push.64*    %r12595
	push.64*    %r12596
	call        luaG_runerror
	br          .L2835

.L2833:
	load.64*    %r12597 <- 0[pstep]
	load.32     %r12598 <- 8[%r12597]
	scast.32    %r12599 <- (32) %r12598
	seteq.32    %r12600 <- %r12599, $3
	br          %r12600, .L2837, .L2838

.L2838:
	load.64*    %r12601 <- 0[pstep]
	load.64*    %r12602 <- 0[ra]
	add.64*     %r12603 <- %r12602, $32
	push.64*    %r12601
	push.64*    %r12603
	call.64*    %r12604 <- luaV_tonumber
	store.64*   %r12604 -> 0[pstep]
	setne.32    %r12605 <- %r12604, $0
	br          %r12605, .L2837, .L2836

.L2836:
	load.64*    %r12606 <- 0[L]
	symaddr.64* %r12607 <- <anon symbol:0x62d00114f1b0>
	push.64*    %r12606
	push.64*    %r12607
	call        luaG_runerror
	br          .L2837

.L2837:
	br          .L2835

.L2835:
	br          .L2831

.L2831:
	load.64*    %r12608 <- 0[ra]
	store.64*   %r12608 -> 0[i_o]
	load.64*    %r12609 <- 0[ra]
	load.f64    %r12610 <- 0[%r12609]
	load.64*    %r12611 <- 0[pstep]
	load.f64    %r12612 <- 0[%r12611]
	fpcast.f64  %r12613 <- (64) %r12612
	sub.f64     %r12614 <- %r12610, %r12613
	load.64*    %r12615 <- 0[i_o]
	store.f64   %r12614 -> 0[%r12615]
	load.64*    %r12616 <- 0[i_o]
	store.32    $3 -> 8[%r12616]
	load.32     %r12617 <- 0[i]
	cast.32     %r12618 <- (32) %r12617
	lsr.32      %r12619 <- %r12618, $14
	and.32      %r12620 <- %r12619, $0x3ffff
	cast.32     %r12621 <- (32) %r12620
	sub.32      %r12622 <- %r12621, $0x1ffff
	scast.64    %r12623 <- (32) %r12622
	muls.64     %r12624 <- %r12623, $4
	load.64*    %r12625 <- 0[pc]
	cast.64     %r12626 <- (64) %r12625
	add.64      %r12627 <- %r12626, %r12624
	ptrcast.64* %r12628 <- (64) %r12627
	store.64*   %r12628 -> 0[pc]
	br          .L2611

.L2648:
	load.64*    %r12629 <- 0[ra]
	add.64*     %r12630 <- %r12629, $48
	store.64*   %r12630 -> 0[cb]
	load.64*    %r12631 <- 0[ra]
	add.64*     %r12632 <- %r12631, $32
	store.64*   %r12632 -> 0[o2]
	load.64*    %r12633 <- 0[cb]
	add.64*     %r12634 <- %r12633, $32
	store.64*   %r12634 -> 0[o1]
	load.64*    %r12635 <- 0[o2]
	load.f64    %r12636 <- 0[%r12635]
	fpcast.f64  %r12637 <- (64) %r12636
	load.64*    %r12638 <- 0[o1]
	store.f64   %r12637 -> 0[%r12638]
	load.64*    %r12639 <- 0[o2]
	load.32     %r12640 <- 8[%r12639]
	scast.32    %r12641 <- (32) %r12640
	load.64*    %r12642 <- 0[o1]
	store.32    %r12641 -> 8[%r12642]
	load.64*    %r12643 <- 0[ra]
	add.64*     %r12644 <- %r12643, $16
	store.64*   %r12644 -> 0[o2]
	load.64*    %r12645 <- 0[cb]
	add.64*     %r12646 <- %r12645, $16
	store.64*   %r12646 -> 0[o1]
	load.64*    %r12647 <- 0[o2]
	load.f64    %r12648 <- 0[%r12647]
	fpcast.f64  %r12649 <- (64) %r12648
	load.64*    %r12650 <- 0[o1]
	store.f64   %r12649 -> 0[%r12650]
	load.64*    %r12651 <- 0[o2]
	load.32     %r12652 <- 8[%r12651]
	scast.32    %r12653 <- (32) %r12652
	load.64*    %r12654 <- 0[o1]
	store.32    %r12653 -> 8[%r12654]
	load.64*    %r12655 <- 0[ra]
	store.64*   %r12655 -> 0[o2]
	load.64*    %r12656 <- 0[cb]
	store.64*   %r12656 -> 0[o1]
	load.64*    %r12657 <- 0[o2]
	load.f64    %r12658 <- 0[%r12657]
	fpcast.f64  %r12659 <- (64) %r12658
	load.64*    %r12660 <- 0[o1]
	store.f64   %r12659 -> 0[%r12660]
	load.64*    %r12661 <- 0[o2]
	load.32     %r12662 <- 8[%r12661]
	scast.32    %r12663 <- (32) %r12662
	load.64*    %r12664 <- 0[o1]
	store.32    %r12663 -> 8[%r12664]
	load.64*    %r12665 <- 0[cb]
	add.64*     %r12666 <- %r12665, $48
	load.64*    %r12667 <- 0[L]
	store.64*   %r12666 -> 16[%r12667]
	load.64*    %r12668 <- 0[pc]
	load.64*    %r12669 <- 0[L]
	store.64*   %r12668 -> 48[%r12669]
	load.64*    %r12670 <- 0[L]
	load.64*    %r12671 <- 0[cb]
	load.32     %r12672 <- 0[i]
	cast.32     %r12673 <- (32) %r12672
	lsr.32      %r12674 <- %r12673, $14
	and.32      %r12675 <- %r12674, $511
	cast.32     %r12676 <- (32) %r12675
	push.64*    %r12670
	push.64*    %r12671
	push.32     %r12676
	call        luaD_call
	load.64*    %r12677 <- 0[L]
	load.64*    %r12678 <- 24[%r12677]
	store.64*   %r12678 -> 0[base]
	load.64*    %r12679 <- 0[L]
	load.64*    %r12680 <- 40[%r12679]
	load.64*    %r12681 <- 16[%r12680]
	load.64*    %r12682 <- 0[L]
	store.64*   %r12681 -> 16[%r12682]
	load.64*    %r12683 <- 0[base]
	load.32     %r12684 <- 0[i]
	cast.32     %r12685 <- (32) %r12684
	lsr.32      %r12686 <- %r12685, $6
	and.32      %r12687 <- %r12686, $255
	cast.32     %r12688 <- (32) %r12687
	scast.64    %r12689 <- (32) %r12688
	muls.64     %r12690 <- %r12689, $16
	add.64*     %r12691 <- %r12683, %r12690
	add.64*     %r12692 <- %r12691, $48
	store.64*   %r12692 -> 0[cb]
	load.64*    %r12693 <- 0[cb]
	load.32     %r12694 <- 8[%r12693]
	seteq.32    %r12695 <- %r12694, $0
	br          %r12695, .L2840, .L2839

.L2839:
	load.64*    %r12696 <- 0[cb]
	store.64*   %r12696 -> 0[o2]
	load.64*    %r12697 <- 0[cb]
	sub.64*     %r12698 <- %r12697, $16
	store.64*   %r12698 -> 0[o1]
	load.64*    %r12699 <- 0[o2]
	load.f64    %r12700 <- 0[%r12699]
	fpcast.f64  %r12701 <- (64) %r12700
	load.64*    %r12702 <- 0[o1]
	store.f64   %r12701 -> 0[%r12702]
	load.64*    %r12703 <- 0[o2]
	load.32     %r12704 <- 8[%r12703]
	scast.32    %r12705 <- (32) %r12704
	load.64*    %r12706 <- 0[o1]
	store.32    %r12705 -> 8[%r12706]
	load.64*    %r12707 <- 0[pc]
	load.32     %r12708 <- 0[%r12707]
	cast.32     %r12709 <- (32) %r12708
	lsr.32      %r12710 <- %r12709, $14
	and.32      %r12711 <- %r12710, $0x3ffff
	cast.32     %r12712 <- (32) %r12711
	sub.32      %r12713 <- %r12712, $0x1ffff
	scast.64    %r12714 <- (32) %r12713
	muls.64     %r12715 <- %r12714, $4
	load.64*    %r12716 <- 0[pc]
	cast.64     %r12717 <- (64) %r12716
	add.64      %r12718 <- %r12717, %r12715
	ptrcast.64* %r12719 <- (64) %r12718
	store.64*   %r12719 -> 0[pc]
	br          .L2840

.L2840:
	load.64*    %r12720 <- 0[pc]
	add.64*     %r12721 <- %r12720, $4
	store.64*   %r12721 -> 0[pc]
	br          .L2611

.L2649:
	load.32     %r12722 <- 0[i]
	cast.32     %r12723 <- (32) %r12722
	lsr.32      %r12724 <- %r12723, $23
	and.32      %r12725 <- %r12724, $511
	cast.32     %r12726 <- (32) %r12725
	store.32    %r12726 -> 0[n]
	load.32     %r12727 <- 0[i]
	cast.32     %r12728 <- (32) %r12727
	lsr.32      %r12729 <- %r12728, $14
	and.32      %r12730 <- %r12729, $511
	cast.32     %r12731 <- (32) %r12730
	store.32    %r12731 -> 0[c]
	load.32     %r12732 <- 0[n]
	seteq.32    %r12733 <- %r12732, $0
	br          %r12733, .L2841, .L2842

.L2841:
	load.64*    %r12734 <- 0[L]
	load.64*    %r12735 <- 16[%r12734]
	load.64*    %r12736 <- 0[ra]
	sub.64      %r12737 <- %r12735, %r12736
	divs.64     %r12738 <- %r12737, $16
	scast.32    %r12739 <- (64) %r12738
	sub.32      %r12740 <- %r12739, $1
	store.32    %r12740 -> 0[n]
	load.64*    %r12741 <- 0[L]
	load.64*    %r12742 <- 40[%r12741]
	load.64*    %r12743 <- 16[%r12742]
	load.64*    %r12744 <- 0[L]
	store.64*   %r12743 -> 16[%r12744]
	br          .L2842

.L2842:
	load.32     %r12745 <- 0[c]
	seteq.32    %r12746 <- %r12745, $0
	br          %r12746, .L2843, .L2844

.L2843:
	load.64*    %r12747 <- 0[pc]
	add.64*     %r12748 <- %r12747, $4
	store.64*   %r12748 -> 0[pc]
	load.32     %r12749 <- 0[%r12747]
	cast.32     %r12750 <- (32) %r12749
	store.32    %r12750 -> 0[c]
	br          .L2844

.L2844:
	load.64*    %r12751 <- 0[ra]
	load.32     %r12752 <- 8[%r12751]
	seteq.32    %r12753 <- %r12752, $5
	br          %r12753, .L2846, .L2845

.L2845:
	br          .L2614

.L2846:
	load.64*    %r12754 <- 0[ra]
	load.64*    %r12755 <- 0[%r12754]
	add.64*     %r12756 <- %r12755, $0
	store.64*   %r12756 -> 0[h]
	load.32     %r12757 <- 0[c]
	sub.32      %r12758 <- %r12757, $1
	muls.32     %r12759 <- %r12758, $50
	load.32     %r12760 <- 0[n]
	add.32      %r12761 <- %r12759, %r12760
	store.32    %r12761 -> 0[last]
	load.32     %r12762 <- 0[last]
	load.64*    %r12763 <- 0[h]
	load.32     %r12764 <- 56[%r12763]
	setgt.32    %r12765 <- %r12762, %r12764
	br          %r12765, .L2847, .L2848

.L2847:
	load.64*    %r12766 <- 0[L]
	load.64*    %r12767 <- 0[h]
	load.32     %r12768 <- 0[last]
	push.64*    %r12766
	push.64*    %r12767
	push.32     %r12768
	call        luaH_resizearray
	br          .L2848

.L2848:
	br          .L2852

.L2852:
	load.32     %r12769 <- 0[n]
	setgt.32    %r12770 <- %r12769, $0
	br          %r12770, .L2849, .L2851

.L2849:
	load.64*    %r12771 <- 0[ra]
	load.32     %r12772 <- 0[n]
	scast.64    %r12773 <- (32) %r12772
	muls.64     %r12774 <- %r12773, $16
	add.64*     %r12775 <- %r12771, %r12774
	store.64*   %r12775 -> 0[val]
	load.64*    %r12776 <- 0[val]
	store.64*   %r12776 -> 0[o2]
	load.64*    %r12777 <- 0[L]
	load.64*    %r12778 <- 0[h]
	load.32     %r12779 <- 0[last]
	sub.32      %r12780 <- %r12779, $1
	store.32    %r12780 -> 0[last]
	push.64*    %r12777
	push.64*    %r12778
	push.32     %r12779
	call.64*    %r12781 <- luaH_setnum
	store.64*   %r12781 -> 0[o1]
	load.64*    %r12782 <- 0[o2]
	load.f64    %r12783 <- 0[%r12782]
	fpcast.f64  %r12784 <- (64) %r12783
	load.64*    %r12785 <- 0[o1]
	store.f64   %r12784 -> 0[%r12785]
	load.64*    %r12786 <- 0[o2]
	load.32     %r12787 <- 8[%r12786]
	scast.32    %r12788 <- (32) %r12787
	load.64*    %r12789 <- 0[o1]
	store.32    %r12788 -> 8[%r12789]
	load.64*    %r12790 <- 0[val]
	load.32     %r12791 <- 8[%r12790]
	setge.32    %r12792 <- %r12791, $4
	br          %r12792, .L2856, .L2854

.L2856:
	load.64*    %r12793 <- 0[val]
	load.64*    %r12794 <- 0[%r12793]
	load.8      %r12795 <- 9[%r12794]
	cast.32     %r12796 <- (8) %r12795
	and.32      %r12797 <- %r12796, $3
	br          %r12797, .L2855, .L2854

.L2855:
	load.64*    %r12798 <- 0[h]
	ptrcast.64* %r12799 <- (64) %r12798
	load.8      %r12800 <- 9[%r12799]
	cast.32     %r12801 <- (8) %r12800
	and.32      %r12802 <- %r12801, $4
	br          %r12802, .L2853, .L2854

.L2853:
	load.64*    %r12803 <- 0[L]
	load.64*    %r12804 <- 0[h]
	push.64*    %r12803
	push.64*    %r12804
	call        luaC_barrierback
	br          .L2854

.L2854:
	br          .L2850

.L2850:
	load.32     %r12805 <- 0[n]
	sub.32      %r12806 <- %r12805, $1
	store.32    %r12806 -> 0[n]
	br          .L2852

.L2851:
	br          .L2611

.L2650:
	load.64*    %r12807 <- 0[L]
	load.64*    %r12808 <- 0[ra]
	push.64*    %r12807
	push.64*    %r12808
	call        luaF_close
	br          .L2611

.L2651:
	load.64*    %r12809 <- 0[cl]
	load.64*    %r12810 <- 32[%r12809]
	load.64*    %r12811 <- 32[%r12810]
	load.32     %r12812 <- 0[i]
	cast.32     %r12813 <- (32) %r12812
	lsr.32      %r12814 <- %r12813, $14
	and.32      %r12815 <- %r12814, $0x3ffff
	cast.32     %r12816 <- (32) %r12815
	scast.64    %r12817 <- (32) %r12816
	muls.64     %r12818 <- %r12817, $8
	add.64*     %r12819 <- %r12811, %r12818
	load.64*    %r12820 <- 0[%r12819]
	store.64*   %r12820 -> 0[p]
	load.64*    %r12821 <- 0[p]
	load.8      %r12822 <- 112[%r12821]
	cast.32     %r12823 <- (8) %r12822
	store.32    %r12823 -> 0[nup]
	load.64*    %r12824 <- 0[L]
	load.32     %r12825 <- 0[nup]
	load.64*    %r12826 <- 0[cl]
	load.64*    %r12827 <- 24[%r12826]
	push.64*    %r12824
	push.32     %r12825
	push.64*    %r12827
	call.64*    %r12828 <- luaF_newLclosure
	store.64*   %r12828 -> 0[ncl]
	load.64*    %r12829 <- 0[p]
	load.64*    %r12830 <- 0[ncl]
	store.64*   %r12829 -> 32[%r12830]
	store.32    $0 -> 0[j]
	br          .L2860

.L2860:
	load.32     %r12831 <- 0[j]
	load.32     %r12832 <- 0[nup]
	setlt.32    %r12833 <- %r12831, %r12832
	br          %r12833, .L2857, .L2859

.L2857:
	load.64*    %r12834 <- 0[pc]
	load.32     %r12835 <- 0[%r12834]
	cast.32     %r12836 <- (32) %r12835
	lsr.32      %r12837 <- %r12836, $0
	and.32      %r12838 <- %r12837, $63
	cast.32     %r12839 <- (32) %r12838
	scast.32    %r12840 <- (32) %r12839
	seteq.32    %r12841 <- %r12840, $4
	br          %r12841, .L2861, .L2862

.L2861:
	load.64*    %r12842 <- 0[cl]
	add.64*     %r12843 <- %r12842, $40
	load.64*    %r12844 <- 0[pc]
	load.32     %r12845 <- 0[%r12844]
	cast.32     %r12846 <- (32) %r12845
	lsr.32      %r12847 <- %r12846, $23
	and.32      %r12848 <- %r12847, $511
	cast.32     %r12849 <- (32) %r12848
	scast.64    %r12850 <- (32) %r12849
	muls.64     %r12851 <- %r12850, $8
	add.64*     %r12852 <- %r12843, %r12851
	load.64*    %r12853 <- 0[%r12852]
	load.64*    %r12854 <- 0[ncl]
	add.64*     %r12855 <- %r12854, $0
	add.64*     %r12856 <- %r12855, $40
	load.32     %r12857 <- 0[j]
	scast.64    %r12858 <- (32) %r12857
	muls.64     %r12859 <- %r12858, $8
	add.64*     %r12860 <- %r12856, %r12859
	store.64*   %r12853 -> 0[%r12860]
	br          .L2863

.L2862:
	load.64*    %r12861 <- 0[L]
	load.64*    %r12862 <- 0[base]
	load.64*    %r12863 <- 0[pc]
	load.32     %r12864 <- 0[%r12863]
	cast.32     %r12865 <- (32) %r12864
	lsr.32      %r12866 <- %r12865, $23
	and.32      %r12867 <- %r12866, $511
	cast.32     %r12868 <- (32) %r12867
	scast.64    %r12869 <- (32) %r12868
	muls.64     %r12870 <- %r12869, $16
	add.64*     %r12871 <- %r12862, %r12870
	push.64*    %r12861
	push.64*    %r12871
	call.64*    %r12872 <- luaF_findupval
	load.64*    %r12873 <- 0[ncl]
	add.64*     %r12874 <- %r12873, $0
	add.64*     %r12875 <- %r12874, $40
	load.32     %r12876 <- 0[j]
	scast.64    %r12877 <- (32) %r12876
	muls.64     %r12878 <- %r12877, $8
	add.64*     %r12879 <- %r12875, %r12878
	store.64*   %r12872 -> 0[%r12879]
	br          .L2863

.L2863:
	br          .L2858

.L2858:
	load.32     %r12880 <- 0[j]
	add.32      %r12881 <- %r12880, $1
	store.32    %r12881 -> 0[j]
	load.64*    %r12882 <- 0[pc]
	add.64*     %r12883 <- %r12882, $4
	store.64*   %r12883 -> 0[pc]
	br          .L2860

.L2859:
	load.64*    %r12884 <- 0[ra]
	store.64*   %r12884 -> 0[i_o]
	load.64*    %r12885 <- 0[ncl]
	ptrcast.64* %r12886 <- (64) %r12885
	load.64*    %r12887 <- 0[i_o]
	store.64*   %r12886 -> 0[%r12887]
	load.64*    %r12888 <- 0[i_o]
	store.32    $6 -> 8[%r12888]
	load.64*    %r12889 <- 0[pc]
	load.64*    %r12890 <- 0[L]
	store.64*   %r12889 -> 48[%r12890]
	load.64*    %r12891 <- 0[L]
	load.64*    %r12892 <- 32[%r12891]
	load.64     %r12893 <- 120[%r12892]
	load.64*    %r12894 <- 0[L]
	load.64*    %r12895 <- 32[%r12894]
	load.64     %r12896 <- 112[%r12895]
	setae.32    %r12897 <- %r12893, %r12896
	br          %r12897, .L2864, .L2865

.L2864:
	load.64*    %r12898 <- 0[L]
	push.64*    %r12898
	call        luaC_step
	br          .L2865

.L2865:
	load.64*    %r12899 <- 0[L]
	load.64*    %r12900 <- 24[%r12899]
	store.64*   %r12900 -> 0[base]
	br          .L2611

.L2652:
	load.32     %r12901 <- 0[i]
	cast.32     %r12902 <- (32) %r12901
	lsr.32      %r12903 <- %r12902, $23
	and.32      %r12904 <- %r12903, $511
	cast.32     %r12905 <- (32) %r12904
	sub.32      %r12906 <- %r12905, $1
	store.32    %r12906 -> 0[b]
	load.64*    %r12907 <- 0[L]
	load.64*    %r12908 <- 40[%r12907]
	store.64*   %r12908 -> 0[ci]
	load.64*    %r12909 <- 0[ci]
	load.64*    %r12910 <- 0[%r12909]
	load.64*    %r12911 <- 0[ci]
	load.64*    %r12912 <- 8[%r12911]
	sub.64      %r12913 <- %r12910, %r12912
	divs.64     %r12914 <- %r12913, $16
	scast.32    %r12915 <- (64) %r12914
	load.64*    %r12916 <- 0[cl]
	load.64*    %r12917 <- 32[%r12916]
	load.8      %r12918 <- 113[%r12917]
	cast.32     %r12919 <- (8) %r12918
	sub.32      %r12920 <- %r12915, %r12919
	sub.32      %r12921 <- %r12920, $1
	store.32    %r12921 -> 0[n]
	load.32     %r12922 <- 0[b]
	seteq.32    %r12923 <- %r12922, $0xffffffff
	br          %r12923, .L2866, .L2867

.L2866:
	load.64*    %r12924 <- 0[pc]
	load.64*    %r12925 <- 0[L]
	store.64*   %r12924 -> 48[%r12925]
	load.64*    %r12926 <- 0[L]
	load.64*    %r12927 <- 56[%r12926]
	ptrcast.64* %r12928 <- (64) %r12927
	load.64*    %r12929 <- 0[L]
	load.64*    %r12930 <- 16[%r12929]
	ptrcast.64* %r12931 <- (64) %r12930
	sub.64      %r12932 <- %r12928, %r12931
	load.32     %r12933 <- 0[n]
	muls.32     %r12934 <- %r12933, $16
	scast.64    %r12935 <- (32) %r12934
	setle.32    %r12936 <- %r12932, %r12935
	br          %r12936, .L2868, .L2869

.L2868:
	load.64*    %r12937 <- 0[L]
	load.32     %r12938 <- 0[n]
	push.64*    %r12937
	push.32     %r12938
	call        luaD_growstack
	br          .L2870

.L2869:
	br          .L2870

.L2870:
	load.64*    %r12939 <- 0[L]
	load.64*    %r12940 <- 24[%r12939]
	store.64*   %r12940 -> 0[base]
	load.64*    %r12941 <- 0[base]
	load.32     %r12942 <- 0[i]
	cast.32     %r12943 <- (32) %r12942
	lsr.32      %r12944 <- %r12943, $6
	and.32      %r12945 <- %r12944, $255
	cast.32     %r12946 <- (32) %r12945
	scast.64    %r12947 <- (32) %r12946
	muls.64     %r12948 <- %r12947, $16
	add.64*     %r12949 <- %r12941, %r12948
	store.64*   %r12949 -> 0[ra]
	load.32     %r12950 <- 0[n]
	store.32    %r12950 -> 0[b]
	load.64*    %r12951 <- 0[ra]
	load.32     %r12952 <- 0[n]
	scast.64    %r12953 <- (32) %r12952
	muls.64     %r12954 <- %r12953, $16
	add.64*     %r12955 <- %r12951, %r12954
	load.64*    %r12956 <- 0[L]
	store.64*   %r12955 -> 16[%r12956]
	br          .L2867

.L2867:
	store.32    $0 -> 0[j]
	br          .L2874

.L2874:
	load.32     %r12957 <- 0[j]
	load.32     %r12958 <- 0[b]
	setlt.32    %r12959 <- %r12957, %r12958
	br          %r12959, .L2871, .L2873

.L2871:
	load.32     %r12960 <- 0[j]
	load.32     %r12961 <- 0[n]
	setlt.32    %r12962 <- %r12960, %r12961
	br          %r12962, .L2875, .L2876

.L2875:
	load.64*    %r12963 <- 0[ci]
	load.64*    %r12964 <- 0[%r12963]
	load.32     %r12965 <- 0[n]
	scast.64    %r12966 <- (32) %r12965
	muls.64     %r12967 <- %r12966, $16
	sub.64*     %r12968 <- %r12964, %r12967
	load.32     %r12969 <- 0[j]
	scast.64    %r12970 <- (32) %r12969
	muls.64     %r12971 <- %r12970, $16
	add.64*     %r12972 <- %r12968, %r12971
	store.64*   %r12972 -> 0[o2]
	load.64*    %r12973 <- 0[ra]
	load.32     %r12974 <- 0[j]
	scast.64    %r12975 <- (32) %r12974
	muls.64     %r12976 <- %r12975, $16
	add.64*     %r12977 <- %r12973, %r12976
	store.64*   %r12977 -> 0[o1]
	load.64*    %r12978 <- 0[o2]
	load.f64    %r12979 <- 0[%r12978]
	fpcast.f64  %r12980 <- (64) %r12979
	load.64*    %r12981 <- 0[o1]
	store.f64   %r12980 -> 0[%r12981]
	load.64*    %r12982 <- 0[o2]
	load.32     %r12983 <- 8[%r12982]
	scast.32    %r12984 <- (32) %r12983
	load.64*    %r12985 <- 0[o1]
	store.32    %r12984 -> 8[%r12985]
	br          .L2877

.L2876:
	load.64*    %r12986 <- 0[ra]
	load.32     %r12987 <- 0[j]
	scast.64    %r12988 <- (32) %r12987
	muls.64     %r12989 <- %r12988, $16
	add.64*     %r12990 <- %r12986, %r12989
	store.32    $0 -> 8[%r12990]
	br          .L2877

.L2877:
	br          .L2872

.L2872:
	load.32     %r12991 <- 0[j]
	add.32      %r12992 <- %r12991, $1
	store.32    %r12992 -> 0[j]
	br          .L2874

.L2873:
	br          .L2611

.L2614:
	br          .L2611

.L2611:
	br          .L2613

.L2804:
	ret


index2adr:
.L2878:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r12993 <- 0[idx]
	setgt.32    %r12994 <- %r12993, $0
	br          %r12994, .L2879, .L2880

.L2879:
	load.64*    %r12995 <- 0[L]
	load.64*    %r12996 <- 24[%r12995]
	load.32     %r12997 <- 0[idx]
	sub.32      %r12998 <- %r12997, $1
	scast.64    %r12999 <- (32) %r12998
	muls.64     %r13000 <- %r12999, $16
	add.64*     %r13001 <- %r12996, %r13000
	store.64*   %r13001 -> 0[o]
	load.64*    %r13002 <- 0[L]
	load.64*    %r13003 <- 0[o]
	load.64*    %r13004 <- 0[L]
	load.64*    %r13005 <- 16[%r13004]
	setae.32    %r13006 <- %r13003, %r13005
	br          %r13006, .L2881, .L2882

.L2881:
	symaddr.64* %r13007 <- luaO_nilobject_
	ptrcast.64* %r13008 <- (64) %r13007
	phisrc.64*  %phi523(return) <- %r13008
	br          .L2883

.L2882:
	load.64*    %r13010 <- 0[o]
	phisrc.64*  %phi524(return) <- %r13010
	br          .L2883

.L2880:
	load.32     %r13011 <- 0[idx]
	setgt.32    %r13012 <- %r13011, $0xffffd8f0
	br          %r13012, .L2886, .L2887

.L2886:
	load.64*    %r13013 <- 0[L]
	load.64*    %r13014 <- 0[L]
	load.64*    %r13015 <- 16[%r13014]
	load.32     %r13016 <- 0[idx]
	scast.64    %r13017 <- (32) %r13016
	muls.64     %r13018 <- %r13017, $16
	add.64*     %r13019 <- %r13015, %r13018
	phisrc.64*  %phi525(return) <- %r13019
	br          .L2883

.L2887:
	load.32     %r13020 <- 0[idx]
	switch.32   %r13020, 4294957294 -> .L2892, 4294957295 -> .L2891, 4294957296 -> .L2890, default -> .L2893

.L2890:
	load.64*    %r13021 <- 0[L]
	load.64*    %r13022 <- 32[%r13021]
	add.64*     %r13023 <- %r13022, $160
	phisrc.64*  %phi526(return) <- %r13023
	br          .L2883

.L2891:
	load.64*    %r13024 <- 0[L]
	load.64*    %r13025 <- 40[%r13024]
	load.64*    %r13026 <- 8[%r13025]
	load.64*    %r13027 <- 0[%r13026]
	add.64*     %r13028 <- %r13027, $0
	store.64*   %r13028 -> 0[func]
	load.64*    %r13029 <- 0[L]
	add.64*     %r13030 <- %r13029, $136
	store.64*   %r13030 -> 0[i_o]
	load.64*    %r13031 <- 0[func]
	load.64*    %r13032 <- 24[%r13031]
	ptrcast.64* %r13033 <- (64) %r13032
	load.64*    %r13034 <- 0[i_o]
	store.64*   %r13033 -> 0[%r13034]
	load.64*    %r13035 <- 0[i_o]
	store.32    $5 -> 8[%r13035]
	load.64*    %r13036 <- 0[L]
	add.64*     %r13037 <- %r13036, $136
	phisrc.64*  %phi527(return) <- %r13037
	br          .L2883

.L2892:
	load.64*    %r13038 <- 0[L]
	add.64*     %r13039 <- %r13038, $120
	phisrc.64*  %phi528(return) <- %r13039
	br          .L2883

.L2893:
	load.64*    %r13040 <- 0[L]
	load.64*    %r13041 <- 40[%r13040]
	load.64*    %r13042 <- 8[%r13041]
	load.64*    %r13043 <- 0[%r13042]
	add.64*     %r13044 <- %r13043, $0
	store.64*   %r13044 -> 0[func]
	load.32     %r13045 <- 0[idx]
	sub.32      %r13046 <- $0xffffd8ee, %r13045
	store.32    %r13046 -> 0[idx]
	load.64*    %r13047 <- 0[func]
	add.64*     %r13048 <- %r13047, $0
	add.64*     %r13049 <- %r13048, $40
	load.32     %r13050 <- 0[idx]
	sub.32      %r13051 <- %r13050, $1
	scast.64    %r13052 <- (32) %r13051
	muls.64     %r13053 <- %r13052, $16
	add.64*     %r13054 <- %r13049, %r13053
	symaddr.64* %r13055 <- luaO_nilobject_
	ptrcast.64* %r13056 <- (64) %r13055
	ptrcast.64* %r13057 <- (64) %r13056
	load.32     %r13058 <- 0[idx]
	load.64*    %r13059 <- 0[func]
	load.8      %r13060 <- 11[%r13059]
	cast.32     %r13061 <- (8) %r13060
	setle.32    %r13062 <- %r13058, %r13061
	select.64*  %r13063 <- %r13062, %r13054, %r13057
	phisrc.64*  %phi529(return) <- %r13063
	br          .L2883

.L2883:
	phi.64*     %r13009 <- %phi523(return), %phi524(return), %phi525(return), %phi526(return), %phi527(return), %phi528(return), %phi529(return)
	ret.64*     %r13009


getcurrenv:
.L2894:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13064 <- 0[L]
	load.64*    %r13065 <- 40[%r13064]
	load.64*    %r13066 <- 0[L]
	load.64*    %r13067 <- 80[%r13066]
	seteq.32    %r13068 <- %r13065, %r13067
	br          %r13068, .L2895, .L2896

.L2895:
	load.64*    %r13069 <- 0[L]
	load.64*    %r13070 <- 120[%r13069]
	add.64*     %r13071 <- %r13070, $0
	phisrc.64*  %phi530(return) <- %r13071
	br          .L2897

.L2896:
	load.64*    %r13073 <- 0[L]
	load.64*    %r13074 <- 40[%r13073]
	load.64*    %r13075 <- 8[%r13074]
	load.64*    %r13076 <- 0[%r13075]
	add.64*     %r13077 <- %r13076, $0
	store.64*   %r13077 -> 0[func]
	load.64*    %r13078 <- 0[func]
	load.64*    %r13079 <- 24[%r13078]
	phisrc.64*  %phi531(return) <- %r13079
	br          .L2897

.L2897:
	phi.64*     %r13072 <- %phi530(return), %phi531(return)
	ret.64*     %r13072


lua_checkstack:
.L2899:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[size]
	store.32    $1 -> 0[res]
	load.32     %r13080 <- 0[size]
	setgt.32    %r13081 <- %r13080, $0x1f40
	br          %r13081, .L2900, .L2902

.L2902:
	load.64*    %r13082 <- 0[L]
	load.64*    %r13083 <- 16[%r13082]
	load.64*    %r13084 <- 0[L]
	load.64*    %r13085 <- 24[%r13084]
	sub.64      %r13086 <- %r13083, %r13085
	divs.64     %r13087 <- %r13086, $16
	load.32     %r13088 <- 0[size]
	scast.64    %r13089 <- (32) %r13088
	add.64      %r13090 <- %r13087, %r13089
	setgt.32    %r13091 <- %r13090, $0x1f40
	br          %r13091, .L2900, .L2901

.L2900:
	store.32    $0 -> 0[res]
	br          .L2903

.L2901:
	load.32     %r13092 <- 0[size]
	setgt.32    %r13093 <- %r13092, $0
	br          %r13093, .L2904, .L2905

.L2904:
	load.64*    %r13094 <- 0[L]
	load.64*    %r13095 <- 56[%r13094]
	ptrcast.64* %r13096 <- (64) %r13095
	load.64*    %r13097 <- 0[L]
	load.64*    %r13098 <- 16[%r13097]
	ptrcast.64* %r13099 <- (64) %r13098
	sub.64      %r13100 <- %r13096, %r13099
	load.32     %r13101 <- 0[size]
	muls.32     %r13102 <- %r13101, $16
	scast.64    %r13103 <- (32) %r13102
	setle.32    %r13104 <- %r13100, %r13103
	br          %r13104, .L2906, .L2907

.L2906:
	load.64*    %r13105 <- 0[L]
	load.32     %r13106 <- 0[size]
	push.64*    %r13105
	push.32     %r13106
	call        luaD_growstack
	br          .L2908

.L2907:
	br          .L2908

.L2908:
	load.64*    %r13107 <- 0[L]
	load.64*    %r13108 <- 40[%r13107]
	load.64*    %r13109 <- 16[%r13108]
	load.64*    %r13110 <- 0[L]
	load.64*    %r13111 <- 16[%r13110]
	load.32     %r13112 <- 0[size]
	scast.64    %r13113 <- (32) %r13112
	muls.64     %r13114 <- %r13113, $16
	add.64*     %r13115 <- %r13111, %r13114
	setb.32     %r13116 <- %r13109, %r13115
	br          %r13116, .L2909, .L2910

.L2909:
	load.64*    %r13117 <- 0[L]
	load.64*    %r13118 <- 16[%r13117]
	load.32     %r13119 <- 0[size]
	scast.64    %r13120 <- (32) %r13119
	muls.64     %r13121 <- %r13120, $16
	add.64*     %r13122 <- %r13118, %r13121
	load.64*    %r13123 <- 0[L]
	load.64*    %r13124 <- 40[%r13123]
	store.64*   %r13122 -> 16[%r13124]
	br          .L2910

.L2910:
	br          .L2905

.L2905:
	br          .L2903

.L2903:
	load.32     %r13125 <- 0[res]
	phisrc.32   %phi532(return) <- %r13125
	br          .L2911

.L2911:
	phi.32      %r13126 <- %phi532(return)
	ret.32      %r13125


lua_atpanic:
.L2912:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[panicf]
	load.64*    %r13127 <- 0[L]
	load.64*    %r13128 <- 32[%r13127]
	load.64*    %r13129 <- 152[%r13128]
	store.64*   %r13129 -> 0[old]
	load.64*    %r13130 <- 0[panicf]
	load.64*    %r13131 <- 0[L]
	load.64*    %r13132 <- 32[%r13131]
	store.64*   %r13130 -> 152[%r13132]
	load.64*    %r13133 <- 0[old]
	phisrc.64*  %phi533(return) <- %r13133
	br          .L2913

.L2913:
	phi.64*     %r13134 <- %phi533(return)
	ret.64*     %r13133


lua_gettop:
.L2914:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13135 <- 0[L]
	load.64*    %r13136 <- 16[%r13135]
	load.64*    %r13137 <- 0[L]
	load.64*    %r13138 <- 24[%r13137]
	sub.64      %r13139 <- %r13136, %r13138
	divs.64     %r13140 <- %r13139, $16
	scast.32    %r13141 <- (64) %r13140
	phisrc.32   %phi534(return) <- %r13141
	br          .L2915

.L2915:
	phi.32      %r13142 <- %phi534(return)
	ret.32      %r13141


lua_settop:
.L2916:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r13143 <- 0[idx]
	setge.32    %r13144 <- %r13143, $0
	br          %r13144, .L2917, .L2918

.L2917:
	load.64*    %r13145 <- 0[L]
	br          .L2922

.L2922:
	load.64*    %r13146 <- 0[L]
	load.64*    %r13147 <- 16[%r13146]
	load.64*    %r13148 <- 0[L]
	load.64*    %r13149 <- 24[%r13148]
	load.32     %r13150 <- 0[idx]
	scast.64    %r13151 <- (32) %r13150
	muls.64     %r13152 <- %r13151, $16
	add.64*     %r13153 <- %r13149, %r13152
	setb.32     %r13154 <- %r13147, %r13153
	br          %r13154, .L2919, .L2921

.L2919:
	load.64*    %r13155 <- 0[L]
	load.64*    %r13156 <- 16[%r13155]
	add.64*     %r13157 <- %r13156, $16
	store.64*   %r13157 -> 16[%r13155]
	store.32    $0 -> 8[%r13156]
	br          .L2920

.L2920:
	br          .L2922

.L2921:
	load.64*    %r13158 <- 0[L]
	load.64*    %r13159 <- 24[%r13158]
	load.32     %r13160 <- 0[idx]
	scast.64    %r13161 <- (32) %r13160
	muls.64     %r13162 <- %r13161, $16
	add.64*     %r13163 <- %r13159, %r13162
	load.64*    %r13164 <- 0[L]
	store.64*   %r13163 -> 16[%r13164]
	br          .L2923

.L2918:
	load.64*    %r13165 <- 0[L]
	load.32     %r13166 <- 0[idx]
	add.32      %r13167 <- %r13166, $1
	scast.64    %r13168 <- (32) %r13167
	muls.64     %r13169 <- %r13168, $16
	load.64*    %r13170 <- 0[L]
	load.64*    %r13171 <- 16[%r13170]
	cast.64     %r13172 <- (64) %r13171
	add.64      %r13173 <- %r13172, %r13169
	ptrcast.64* %r13174 <- (64) %r13173
	store.64*   %r13174 -> 16[%r13170]
	br          .L2923

.L2923:
	ret


lua_remove:
.L2924:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13175 <- 0[L]
	load.32     %r13176 <- 0[idx]
	push.64*    %r13175
	push.32     %r13176
	call.64*    %r13177 <- index2adr
	store.64*   %r13177 -> 0[p]
	load.64*    %r13178 <- 0[L]
	br          .L2928

.L2928:
	load.64*    %r13179 <- 0[p]
	add.64*     %r13180 <- %r13179, $16
	store.64*   %r13180 -> 0[p]
	load.64*    %r13181 <- 0[L]
	load.64*    %r13182 <- 16[%r13181]
	setb.32     %r13183 <- %r13180, %r13182
	br          %r13183, .L2925, .L2927

.L2925:
	load.64*    %r13184 <- 0[p]
	store.64*   %r13184 -> 0[o2]
	load.64*    %r13185 <- 0[p]
	sub.64*     %r13186 <- %r13185, $16
	store.64*   %r13186 -> 0[o1]
	load.64*    %r13187 <- 0[o2]
	load.f64    %r13188 <- 0[%r13187]
	fpcast.f64  %r13189 <- (64) %r13188
	load.64*    %r13190 <- 0[o1]
	store.f64   %r13189 -> 0[%r13190]
	load.64*    %r13191 <- 0[o2]
	load.32     %r13192 <- 8[%r13191]
	scast.32    %r13193 <- (32) %r13192
	load.64*    %r13194 <- 0[o1]
	store.32    %r13193 -> 8[%r13194]
	br          .L2926

.L2926:
	br          .L2928

.L2927:
	load.64*    %r13195 <- 0[L]
	load.64*    %r13196 <- 16[%r13195]
	sub.64*     %r13197 <- %r13196, $16
	store.64*   %r13197 -> 16[%r13195]
	br          .L2929

.L2929:
	ret


lua_insert:
.L2930:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13198 <- 0[L]
	load.32     %r13199 <- 0[idx]
	push.64*    %r13198
	push.32     %r13199
	call.64*    %r13200 <- index2adr
	store.64*   %r13200 -> 0[p]
	load.64*    %r13201 <- 0[L]
	load.64*    %r13202 <- 0[L]
	load.64*    %r13203 <- 16[%r13202]
	store.64*   %r13203 -> 0[q]
	br          .L2934

.L2934:
	load.64*    %r13204 <- 0[q]
	load.64*    %r13205 <- 0[p]
	seta.32     %r13206 <- %r13204, %r13205
	br          %r13206, .L2931, .L2933

.L2931:
	load.64*    %r13207 <- 0[q]
	sub.64*     %r13208 <- %r13207, $16
	store.64*   %r13208 -> 0[o2]
	load.64*    %r13209 <- 0[q]
	store.64*   %r13209 -> 0[o1]
	load.64*    %r13210 <- 0[o2]
	load.f64    %r13211 <- 0[%r13210]
	fpcast.f64  %r13212 <- (64) %r13211
	load.64*    %r13213 <- 0[o1]
	store.f64   %r13212 -> 0[%r13213]
	load.64*    %r13214 <- 0[o2]
	load.32     %r13215 <- 8[%r13214]
	scast.32    %r13216 <- (32) %r13215
	load.64*    %r13217 <- 0[o1]
	store.32    %r13216 -> 8[%r13217]
	br          .L2932

.L2932:
	load.64*    %r13218 <- 0[q]
	sub.64*     %r13219 <- %r13218, $16
	store.64*   %r13219 -> 0[q]
	br          .L2934

.L2933:
	load.64*    %r13220 <- 0[L]
	load.64*    %r13221 <- 16[%r13220]
	store.64*   %r13221 -> 0[o2]
	load.64*    %r13222 <- 0[p]
	store.64*   %r13222 -> 0[o1]
	load.64*    %r13223 <- 0[o2]
	load.f64    %r13224 <- 0[%r13223]
	fpcast.f64  %r13225 <- (64) %r13224
	load.64*    %r13226 <- 0[o1]
	store.f64   %r13225 -> 0[%r13226]
	load.64*    %r13227 <- 0[o2]
	load.32     %r13228 <- 8[%r13227]
	scast.32    %r13229 <- (32) %r13228
	load.64*    %r13230 <- 0[o1]
	store.32    %r13229 -> 8[%r13230]
	br          .L2935

.L2935:
	ret


lua_replace:
.L2936:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r13231 <- 0[idx]
	seteq.32    %r13232 <- %r13231, $0xffffd8ef
	br          %r13232, .L2939, .L2938

.L2939:
	load.64*    %r13233 <- 0[L]
	load.64*    %r13234 <- 40[%r13233]
	load.64*    %r13235 <- 0[L]
	load.64*    %r13236 <- 80[%r13235]
	seteq.32    %r13237 <- %r13234, %r13236
	br          %r13237, .L2937, .L2938

.L2937:
	load.64*    %r13238 <- 0[L]
	symaddr.64* %r13239 <- <anon symbol:0x62d0014465e8>
	push.64*    %r13238
	push.64*    %r13239
	call        luaG_runerror
	br          .L2938

.L2938:
	load.64*    %r13240 <- 0[L]
	load.64*    %r13241 <- 0[L]
	load.32     %r13242 <- 0[idx]
	push.64*    %r13241
	push.32     %r13242
	call.64*    %r13243 <- index2adr
	store.64*   %r13243 -> 0[o]
	load.64*    %r13244 <- 0[L]
	load.32     %r13245 <- 0[idx]
	seteq.32    %r13246 <- %r13245, $0xffffd8ef
	br          %r13246, .L2940, .L2941

.L2940:
	load.64*    %r13247 <- 0[L]
	load.64*    %r13248 <- 40[%r13247]
	load.64*    %r13249 <- 8[%r13248]
	load.64*    %r13250 <- 0[%r13249]
	add.64*     %r13251 <- %r13250, $0
	store.64*   %r13251 -> 0[func]
	load.64*    %r13252 <- 0[L]
	load.64*    %r13253 <- 0[L]
	load.64*    %r13254 <- 16[%r13253]
	sub.64*     %r13255 <- %r13254, $16
	load.64*    %r13256 <- 0[%r13255]
	add.64*     %r13257 <- %r13256, $0
	load.64*    %r13258 <- 0[func]
	store.64*   %r13257 -> 24[%r13258]
	load.64*    %r13259 <- 0[L]
	load.64*    %r13260 <- 16[%r13259]
	sub.64*     %r13261 <- %r13260, $16
	load.32     %r13262 <- 8[%r13261]
	setge.32    %r13263 <- %r13262, $4
	br          %r13263, .L2945, .L2943

.L2945:
	load.64*    %r13264 <- 0[L]
	load.64*    %r13265 <- 16[%r13264]
	sub.64*     %r13266 <- %r13265, $16
	load.64*    %r13267 <- 0[%r13266]
	load.8      %r13268 <- 9[%r13267]
	cast.32     %r13269 <- (8) %r13268
	and.32      %r13270 <- %r13269, $3
	br          %r13270, .L2944, .L2943

.L2944:
	load.64*    %r13271 <- 0[func]
	ptrcast.64* %r13272 <- (64) %r13271
	load.8      %r13273 <- 9[%r13272]
	cast.32     %r13274 <- (8) %r13273
	and.32      %r13275 <- %r13274, $4
	br          %r13275, .L2942, .L2943

.L2942:
	load.64*    %r13276 <- 0[L]
	load.64*    %r13277 <- 0[func]
	ptrcast.64* %r13278 <- (64) %r13277
	load.64*    %r13279 <- 0[L]
	load.64*    %r13280 <- 16[%r13279]
	sub.64*     %r13281 <- %r13280, $16
	load.64*    %r13282 <- 0[%r13281]
	push.64*    %r13276
	push.64*    %r13278
	push.64*    %r13282
	call        luaC_barrierf
	br          .L2943

.L2943:
	br          .L2946

.L2941:
	load.64*    %r13283 <- 0[L]
	load.64*    %r13284 <- 16[%r13283]
	sub.64*     %r13285 <- %r13284, $16
	store.64*   %r13285 -> 0[o2]
	load.64*    %r13286 <- 0[o]
	store.64*   %r13286 -> 0[o1]
	load.64*    %r13287 <- 0[o2]
	load.f64    %r13288 <- 0[%r13287]
	fpcast.f64  %r13289 <- (64) %r13288
	load.64*    %r13290 <- 0[o1]
	store.f64   %r13289 -> 0[%r13290]
	load.64*    %r13291 <- 0[o2]
	load.32     %r13292 <- 8[%r13291]
	scast.32    %r13293 <- (32) %r13292
	load.64*    %r13294 <- 0[o1]
	store.32    %r13293 -> 8[%r13294]
	load.32     %r13295 <- 0[idx]
	setlt.32    %r13296 <- %r13295, $0xffffd8ee
	br          %r13296, .L2947, .L2948

.L2947:
	load.64*    %r13297 <- 0[L]
	load.64*    %r13298 <- 16[%r13297]
	sub.64*     %r13299 <- %r13298, $16
	load.32     %r13300 <- 8[%r13299]
	setge.32    %r13301 <- %r13300, $4
	br          %r13301, .L2952, .L2950

.L2952:
	load.64*    %r13302 <- 0[L]
	load.64*    %r13303 <- 16[%r13302]
	sub.64*     %r13304 <- %r13303, $16
	load.64*    %r13305 <- 0[%r13304]
	load.8      %r13306 <- 9[%r13305]
	cast.32     %r13307 <- (8) %r13306
	and.32      %r13308 <- %r13307, $3
	br          %r13308, .L2951, .L2950

.L2951:
	load.64*    %r13309 <- 0[L]
	load.64*    %r13310 <- 40[%r13309]
	load.64*    %r13311 <- 8[%r13310]
	load.64*    %r13312 <- 0[%r13311]
	add.64*     %r13313 <- %r13312, $0
	ptrcast.64* %r13314 <- (64) %r13313
	load.8      %r13315 <- 9[%r13314]
	cast.32     %r13316 <- (8) %r13315
	and.32      %r13317 <- %r13316, $4
	br          %r13317, .L2949, .L2950

.L2949:
	load.64*    %r13318 <- 0[L]
	load.64*    %r13319 <- 0[L]
	load.64*    %r13320 <- 40[%r13319]
	load.64*    %r13321 <- 8[%r13320]
	load.64*    %r13322 <- 0[%r13321]
	add.64*     %r13323 <- %r13322, $0
	ptrcast.64* %r13324 <- (64) %r13323
	load.64*    %r13325 <- 0[L]
	load.64*    %r13326 <- 16[%r13325]
	sub.64*     %r13327 <- %r13326, $16
	load.64*    %r13328 <- 0[%r13327]
	push.64*    %r13318
	push.64*    %r13324
	push.64*    %r13328
	call        luaC_barrierf
	br          .L2950

.L2950:
	br          .L2948

.L2948:
	br          .L2946

.L2946:
	load.64*    %r13329 <- 0[L]
	load.64*    %r13330 <- 16[%r13329]
	sub.64*     %r13331 <- %r13330, $16
	store.64*   %r13331 -> 16[%r13329]
	br          .L2953

.L2953:
	ret


lua_pushvalue:
.L2954:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13332 <- 0[L]
	load.32     %r13333 <- 0[idx]
	push.64*    %r13332
	push.32     %r13333
	call.64*    %r13334 <- index2adr
	store.64*   %r13334 -> 0[o2]
	load.64*    %r13335 <- 0[L]
	load.64*    %r13336 <- 16[%r13335]
	store.64*   %r13336 -> 0[o1]
	load.64*    %r13337 <- 0[o2]
	load.f64    %r13338 <- 0[%r13337]
	fpcast.f64  %r13339 <- (64) %r13338
	load.64*    %r13340 <- 0[o1]
	store.f64   %r13339 -> 0[%r13340]
	load.64*    %r13341 <- 0[o2]
	load.32     %r13342 <- 8[%r13341]
	scast.32    %r13343 <- (32) %r13342
	load.64*    %r13344 <- 0[o1]
	store.32    %r13343 -> 8[%r13344]
	load.64*    %r13345 <- 0[L]
	load.64*    %r13346 <- 0[L]
	load.64*    %r13347 <- 16[%r13346]
	add.64*     %r13348 <- %r13347, $16
	store.64*   %r13348 -> 16[%r13346]
	br          .L2955

.L2955:
	ret


lua_type:
.L2956:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13349 <- 0[L]
	load.32     %r13350 <- 0[idx]
	push.64*    %r13349
	push.32     %r13350
	call.64*    %r13351 <- index2adr
	store.64*   %r13351 -> 0[o]
	load.64*    %r13352 <- 0[o]
	symaddr.64* %r13353 <- luaO_nilobject_
	seteq.32    %r13354 <- %r13352, %r13353
	br          %r13354, .L2958, .L2959

.L2958:
	phisrc.32   %phi535 <- $0xffffffff
	br          .L2960

.L2959:
	load.64*    %r13355 <- 0[o]
	load.32     %r13356 <- 8[%r13355]
	phisrc.32   %phi536 <- %r13356
	br          .L2960

.L2960:
	phi.32      %r13357 <- %phi535, %phi536
	phisrc.32   %phi537(return) <- %r13357
	br          .L2957

.L2957:
	phi.32      %r13358 <- %phi537(return)
	ret.32      %r13357


lua_typename:
.L2961:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[t]
	load.64*    %r13359 <- 0[L]
	load.32     %r13360 <- 0[t]
	seteq.32    %r13361 <- %r13360, $0xffffffff
	br          %r13361, .L2963, .L2964

.L2963:
	symaddr.64* %r13362 <- <anon symbol:0x62d00144b2f0>
	ptrcast.64* %r13363 <- (64) %r13362
	phisrc.64*  %phi538 <- %r13363
	br          .L2965

.L2964:
	symaddr.64* %r13364 <- luaT_typenames
	load.32     %r13365 <- 0[t]
	scast.64    %r13366 <- (32) %r13365
	muls.64     %r13367 <- %r13366, $8
	add.64*     %r13368 <- %r13364, %r13367
	load.64*    %r13369 <- 0[%r13368]
	ptrcast.64* %r13370 <- (64) %r13369
	phisrc.64*  %phi539 <- %r13370
	br          .L2965

.L2965:
	phi.64*     %r13371 <- %phi538, %phi539
	phisrc.64*  %phi540(return) <- %r13371
	br          .L2962

.L2962:
	phi.64*     %r13372 <- %phi540(return)
	ret.64*     %r13371


lua_iscfunction:
.L2966:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13373 <- 0[L]
	load.32     %r13374 <- 0[idx]
	push.64*    %r13373
	push.32     %r13374
	call.64*    %r13375 <- index2adr
	store.64*   %r13375 -> 0[o]
	load.64*    %r13376 <- 0[o]
	load.32     %r13377 <- 8[%r13376]
	seteq.32    %r13378 <- %r13377, $6
	br          %r13378, .L2968, .L2969

.L2968:
	load.64*    %r13379 <- 0[o]
	load.64*    %r13380 <- 0[%r13379]
	load.8      %r13381 <- 10[%r13380]
	phisrc.32   %phi541 <- %r13381
	br          .L2970

.L2969:
	phisrc.32   %phi542 <- $0
	br          .L2970

.L2970:
	phi.32      %r13382 <- %phi541, %phi542
	phisrc.32   %phi543(return) <- %r13382
	br          .L2967

.L2967:
	phi.32      %r13383 <- %phi543(return)
	ret.32      %r13382


lua_isnumber:
.L2971:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13384 <- 0[L]
	load.32     %r13385 <- 0[idx]
	push.64*    %r13384
	push.32     %r13385
	call.64*    %r13386 <- index2adr
	store.64*   %r13386 -> 0[o]
	load.64*    %r13387 <- 0[o]
	load.32     %r13388 <- 8[%r13387]
	scast.32    %r13389 <- (32) %r13388
	seteq.32    %r13390 <- %r13389, $3
	br          %r13390, .L2973, .L2974

.L2973:
	phisrc.32   %phi544 <- $1
	br          .L2975

.L2974:
	load.64*    %r13391 <- 0[o]
	symaddr.64* %r13392 <- n
	push.64*    %r13391
	push.64*    %r13392
	call.64*    %r13393 <- luaV_tonumber
	store.64*   %r13393 -> 0[o]
	setne.32    %r13394 <- %r13393, $0
	phisrc.32   %phi545 <- %r13394
	br          .L2975

.L2975:
	phi.32      %r13395 <- %phi544, %phi545
	phisrc.32   %phi546(return) <- %r13395
	br          .L2972

.L2972:
	phi.32      %r13396 <- %phi546(return)
	ret.32      %r13395


lua_isstring:
.L2976:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13397 <- 0[L]
	load.32     %r13398 <- 0[idx]
	push.64*    %r13397
	push.32     %r13398
	call.32     %r13399 <- lua_type
	store.32    %r13399 -> 0[t]
	load.32     %r13400 <- 0[t]
	seteq.32    %r13401 <- %r13400, $4
	load.32     %r13402 <- 0[t]
	seteq.32    %r13403 <- %r13402, $3
	or-bool.32  %r13404 <- %r13401, %r13403
	phisrc.32   %phi547(return) <- %r13404
	br          .L2977

.L2977:
	phi.32      %r13405 <- %phi547(return)
	ret.32      %r13404


lua_rawequal:
.L2978:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[index1]
	store.32    %arg3 -> 0[index2]
	load.64*    %r13406 <- 0[L]
	load.32     %r13407 <- 0[index1]
	push.64*    %r13406
	push.32     %r13407
	call.64*    %r13408 <- index2adr
	store.64*   %r13408 -> 0[o1]
	load.64*    %r13409 <- 0[L]
	load.32     %r13410 <- 0[index2]
	push.64*    %r13409
	push.32     %r13410
	call.64*    %r13411 <- index2adr
	store.64*   %r13411 -> 0[o2]
	load.64*    %r13412 <- 0[o1]
	symaddr.64* %r13413 <- luaO_nilobject_
	seteq.32    %r13414 <- %r13412, %r13413
	load.64*    %r13415 <- 0[o2]
	symaddr.64* %r13416 <- luaO_nilobject_
	seteq.32    %r13417 <- %r13415, %r13416
	or-bool.32  %r13418 <- %r13414, %r13417
	br          %r13418, .L2980, .L2981

.L2980:
	phisrc.32   %phi548 <- $0
	br          .L2982

.L2981:
	load.64*    %r13419 <- 0[o1]
	load.64*    %r13420 <- 0[o2]
	push.64*    %r13419
	push.64*    %r13420
	call.32     %r13421 <- luaO_rawequalObj
	phisrc.32   %phi549 <- %r13421
	br          .L2982

.L2982:
	phi.32      %r13422 <- %phi548, %phi549
	phisrc.32   %phi550(return) <- %r13422
	br          .L2979

.L2979:
	phi.32      %r13423 <- %phi550(return)
	ret.32      %r13422


lua_lessthan:
.L2983:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[index1]
	store.32    %arg3 -> 0[index2]
	load.64*    %r13424 <- 0[L]
	load.32     %r13425 <- 0[index1]
	push.64*    %r13424
	push.32     %r13425
	call.64*    %r13426 <- index2adr
	store.64*   %r13426 -> 0[o1]
	load.64*    %r13427 <- 0[L]
	load.32     %r13428 <- 0[index2]
	push.64*    %r13427
	push.32     %r13428
	call.64*    %r13429 <- index2adr
	store.64*   %r13429 -> 0[o2]
	load.64*    %r13430 <- 0[o1]
	symaddr.64* %r13431 <- luaO_nilobject_
	seteq.32    %r13432 <- %r13430, %r13431
	load.64*    %r13433 <- 0[o2]
	symaddr.64* %r13434 <- luaO_nilobject_
	seteq.32    %r13435 <- %r13433, %r13434
	or-bool.32  %r13436 <- %r13432, %r13435
	br          %r13436, .L2984, .L2985

.L2984:
	phisrc.32   %phi551 <- $0
	br          .L2986

.L2985:
	load.64*    %r13437 <- 0[L]
	load.64*    %r13438 <- 0[o1]
	load.64*    %r13439 <- 0[o2]
	push.64*    %r13437
	push.64*    %r13438
	push.64*    %r13439
	call.32     %r13440 <- luaV_lessthan
	phisrc.32   %phi552 <- %r13440
	br          .L2986

.L2986:
	phi.32      %r13441 <- %phi551, %phi552
	store.32    %r13441 -> 0[i]
	load.32     %r13442 <- 0[i]
	phisrc.32   %phi553(return) <- %r13442
	br          .L2987

.L2987:
	phi.32      %r13443 <- %phi553(return)
	ret.32      %r13442


lua_tonumber:
.L2988:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13444 <- 0[L]
	load.32     %r13445 <- 0[idx]
	push.64*    %r13444
	push.32     %r13445
	call.64*    %r13446 <- index2adr
	store.64*   %r13446 -> 0[o]
	load.64*    %r13447 <- 0[o]
	load.32     %r13448 <- 8[%r13447]
	scast.32    %r13449 <- (32) %r13448
	seteq.32    %r13450 <- %r13449, $3
	br          %r13450, .L2989, .L2991

.L2991:
	load.64*    %r13451 <- 0[o]
	symaddr.64* %r13452 <- n
	push.64*    %r13451
	push.64*    %r13452
	call.64*    %r13453 <- luaV_tonumber
	store.64*   %r13453 -> 0[o]
	setne.32    %r13454 <- %r13453, $0
	br          %r13454, .L2989, .L2990

.L2989:
	load.64*    %r13455 <- 0[o]
	load.f64    %r13456 <- 0[%r13455]
	fpcast.f64  %r13457 <- (64) %r13456
	phisrc.f64  %phi554(return) <- %r13457
	br          .L2992

.L2990:
	set.f64     %r13459 <- 0.000000
	phisrc.f64  %phi555(return) <- %r13459
	br          .L2992

.L2992:
	phi.f64     %r13458 <- %phi554(return), %phi555(return)
	ret.f64     %r13458


lua_tointeger:
.L2994:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13460 <- 0[L]
	load.32     %r13461 <- 0[idx]
	push.64*    %r13460
	push.32     %r13461
	call.64*    %r13462 <- index2adr
	store.64*   %r13462 -> 0[o]
	load.64*    %r13463 <- 0[o]
	load.32     %r13464 <- 8[%r13463]
	scast.32    %r13465 <- (32) %r13464
	seteq.32    %r13466 <- %r13465, $3
	br          %r13466, .L2995, .L2997

.L2997:
	load.64*    %r13467 <- 0[o]
	symaddr.64* %r13468 <- n
	push.64*    %r13467
	push.64*    %r13468
	call.64*    %r13469 <- luaV_tonumber
	store.64*   %r13469 -> 0[o]
	setne.32    %r13470 <- %r13469, $0
	br          %r13470, .L2995, .L2996

.L2995:
	load.64*    %r13471 <- 0[o]
	load.f64    %r13472 <- 0[%r13471]
	fpcast.f64  %r13473 <- (64) %r13472
	store.f64   %r13473 -> 0[num]
	load.f64    %r13474 <- 0[num]
	cast.64     %r13475 <- (64) %r13474
	store.64    %r13475 -> 0[res]
	load.64     %r13476 <- 0[res]
	phisrc.64   %phi556(return) <- %r13476
	br          .L2998

.L2996:
	phisrc.64   %phi557(return) <- $0
	br          .L2998

.L2998:
	phi.64      %r13477 <- %phi556(return), %phi557(return)
	ret.64      %r13477


lua_toboolean:
.L3000:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13478 <- 0[L]
	load.32     %r13479 <- 0[idx]
	push.64*    %r13478
	push.32     %r13479
	call.64*    %r13480 <- index2adr
	store.64*   %r13480 -> 0[o]
	load.64*    %r13481 <- 0[o]
	load.32     %r13482 <- 8[%r13481]
	scast.32    %r13483 <- (32) %r13482
	seteq.32    %r13484 <- %r13483, $0
	br          %r13484, .L3002, .L3003

.L3002:
	phisrc.32   %phi558 <- $1
	br          .L3004

.L3003:
	load.64*    %r13485 <- 0[o]
	load.32     %r13486 <- 8[%r13485]
	scast.32    %r13487 <- (32) %r13486
	seteq.32    %r13488 <- %r13487, $1
	br          %r13488, .L3005, .L3006

.L3005:
	load.64*    %r13489 <- 0[o]
	load.32     %r13490 <- 0[%r13489]
	scast.32    %r13491 <- (32) %r13490
	seteq.32    %r13492 <- %r13491, $0
	phisrc.32   %phi559 <- %r13492
	br          .L3007

.L3006:
	phisrc.32   %phi560 <- $0
	br          .L3007

.L3007:
	phi.32      %r13493 <- %phi559, %phi560
	phisrc.32   %phi561 <- %r13493
	br          .L3004

.L3004:
	phi.32      %r13494 <- %phi558, %phi561
	seteq.32    %r13495 <- %r13494, $0
	phisrc.32   %phi562(return) <- %r13495
	br          .L3001

.L3001:
	phi.32      %r13496 <- %phi562(return)
	ret.32      %r13495


lua_tolstring:
.L3008:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[len]
	load.64*    %r13497 <- 0[L]
	load.32     %r13498 <- 0[idx]
	push.64*    %r13497
	push.32     %r13498
	call.64*    %r13499 <- index2adr
	store.64*   %r13499 -> 0[o]
	load.64*    %r13500 <- 0[o]
	load.32     %r13501 <- 8[%r13500]
	seteq.32    %r13502 <- %r13501, $4
	br          %r13502, .L3010, .L3009

.L3009:
	load.64*    %r13503 <- 0[L]
	load.64*    %r13504 <- 0[o]
	push.64*    %r13503
	push.64*    %r13504
	call.32     %r13505 <- luaV_tostring
	br          %r13505, .L3012, .L3011

.L3011:
	load.64*    %r13506 <- 0[len]
	setne.32    %r13507 <- %r13506, $0
	br          %r13507, .L3013, .L3014

.L3013:
	load.64*    %r13508 <- 0[len]
	store.64    $0 -> 0[%r13508]
	br          .L3014

.L3014:
	phisrc.64*  %phi563(return) <- $0
	br          .L3015

.L3012:
	load.64*    %r13510 <- 0[L]
	load.64*    %r13511 <- 32[%r13510]
	load.64     %r13512 <- 120[%r13511]
	load.64*    %r13513 <- 0[L]
	load.64*    %r13514 <- 32[%r13513]
	load.64     %r13515 <- 112[%r13514]
	setae.32    %r13516 <- %r13512, %r13515
	br          %r13516, .L3016, .L3017

.L3016:
	load.64*    %r13517 <- 0[L]
	push.64*    %r13517
	call        luaC_step
	br          .L3017

.L3017:
	load.64*    %r13518 <- 0[L]
	load.32     %r13519 <- 0[idx]
	push.64*    %r13518
	push.32     %r13519
	call.64*    %r13520 <- index2adr
	store.64*   %r13520 -> 0[o]
	br          .L3010

.L3010:
	load.64*    %r13521 <- 0[len]
	setne.32    %r13522 <- %r13521, $0
	br          %r13522, .L3018, .L3019

.L3018:
	load.64*    %r13523 <- 0[o]
	load.64*    %r13524 <- 0[%r13523]
	load.64     %r13525 <- 16[%r13524]
	load.64*    %r13526 <- 0[len]
	store.64    %r13525 -> 0[%r13526]
	br          .L3019

.L3019:
	load.64*    %r13527 <- 0[o]
	load.64*    %r13528 <- 0[%r13527]
	add.64*     %r13529 <- %r13528, $0
	add.64*     %r13530 <- %r13529, $24
	ptrcast.64* %r13531 <- (64) %r13530
	phisrc.64*  %phi564(return) <- %r13531
	br          .L3015

.L3015:
	phi.64*     %r13509 <- %phi563(return), %phi564(return)
	ret.64*     %r13509


lua_objlen:
.L3020:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13532 <- 0[L]
	load.32     %r13533 <- 0[idx]
	push.64*    %r13532
	push.32     %r13533
	call.64*    %r13534 <- index2adr
	store.64*   %r13534 -> 0[o]
	load.64*    %r13535 <- 0[o]
	load.32     %r13536 <- 8[%r13535]
	switch.32   %r13536, 3 -> .L3025, 4 -> .L3022, 5 -> .L3024, 7 -> .L3023, default -> .L3026

.L3022:
	load.64*    %r13537 <- 0[o]
	load.64*    %r13538 <- 0[%r13537]
	load.64     %r13539 <- 16[%r13538]
	phisrc.64   %phi565(return) <- %r13539
	br          .L3027

.L3023:
	load.64*    %r13541 <- 0[o]
	load.64*    %r13542 <- 0[%r13541]
	load.64     %r13543 <- 32[%r13542]
	phisrc.64   %phi566(return) <- %r13543
	br          .L3027

.L3024:
	load.64*    %r13544 <- 0[o]
	load.64*    %r13545 <- 0[%r13544]
	add.64*     %r13546 <- %r13545, $0
	push.64*    %r13546
	call.32     %r13547 <- luaH_getn
	scast.64    %r13548 <- (32) %r13547
	phisrc.64   %phi567(return) <- %r13548
	br          .L3027

.L3025:
	load.64*    %r13549 <- 0[L]
	load.64*    %r13550 <- 0[o]
	push.64*    %r13549
	push.64*    %r13550
	call.32     %r13551 <- luaV_tostring
	br          %r13551, .L3028, .L3029

.L3028:
	load.64*    %r13552 <- 0[o]
	load.64*    %r13553 <- 0[%r13552]
	load.64     %r13554 <- 16[%r13553]
	phisrc.64   %phi568 <- %r13554
	br          .L3030

.L3029:
	phisrc.64   %phi569 <- $0
	br          .L3030

.L3030:
	phi.64      %r13555 <- %phi568, %phi569
	store.64    %r13555 -> 0[l]
	load.64     %r13556 <- 0[l]
	phisrc.64   %phi570(return) <- %r13556
	br          .L3027

.L3026:
	phisrc.64   %phi571(return) <- $0
	br          .L3027

.L3027:
	phi.64      %r13540 <- %phi565(return), %phi566(return), %phi567(return), %phi570(return), %phi571(return)
	ret.64      %r13540


lua_tocfunction:
.L3031:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13557 <- 0[L]
	load.32     %r13558 <- 0[idx]
	push.64*    %r13557
	push.32     %r13558
	call.64*    %r13559 <- index2adr
	store.64*   %r13559 -> 0[o]
	load.64*    %r13560 <- 0[o]
	load.32     %r13561 <- 8[%r13560]
	seteq.32    %r13562 <- %r13561, $6
	br          %r13562, .L3036, .L3033

.L3036:
	load.64*    %r13563 <- 0[o]
	load.64*    %r13564 <- 0[%r13563]
	load.8      %r13565 <- 10[%r13564]
	br          %r13565, .L3034, .L3033

.L3033:
	phisrc.64*  %phi572 <- $0
	br          .L3035

.L3034:
	load.64*    %r13566 <- 0[o]
	load.64*    %r13567 <- 0[%r13566]
	load.64*    %r13568 <- 32[%r13567]
	phisrc.64*  %phi573 <- %r13568
	br          .L3035

.L3035:
	phi.64*     %r13569 <- %phi572, %phi573
	phisrc.64*  %phi574(return) <- %r13569
	br          .L3032

.L3032:
	phi.64*     %r13570 <- %phi574(return)
	ret.64*     %r13569


lua_touserdata:
.L3037:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13571 <- 0[L]
	load.32     %r13572 <- 0[idx]
	push.64*    %r13571
	push.32     %r13572
	call.64*    %r13573 <- index2adr
	store.64*   %r13573 -> 0[o]
	load.64*    %r13574 <- 0[o]
	load.32     %r13575 <- 8[%r13574]
	switch.32   %r13575, 2 -> .L3040, 7 -> .L3039, default -> .L3041

.L3039:
	load.64*    %r13576 <- 0[o]
	load.64*    %r13577 <- 0[%r13576]
	add.64*     %r13578 <- %r13577, $0
	add.64*     %r13579 <- %r13578, $40
	cast.64*    %r13580 <- (64) %r13579
	phisrc.64*  %phi575(return) <- %r13580
	br          .L3042

.L3040:
	load.64*    %r13582 <- 0[o]
	load.64*    %r13583 <- 0[%r13582]
	phisrc.64*  %phi576(return) <- %r13583
	br          .L3042

.L3041:
	phisrc.64*  %phi577(return) <- $0
	br          .L3042

.L3042:
	phi.64*     %r13581 <- %phi575(return), %phi576(return), %phi577(return)
	ret.64*     %r13581


lua_pushnil:
.L3043:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13584 <- 0[L]
	load.64*    %r13585 <- 16[%r13584]
	store.32    $0 -> 8[%r13585]
	load.64*    %r13586 <- 0[L]
	load.64*    %r13587 <- 0[L]
	load.64*    %r13588 <- 16[%r13587]
	add.64*     %r13589 <- %r13588, $16
	store.64*   %r13589 -> 16[%r13587]
	br          .L3044

.L3044:
	ret


lua_pushnumber:
.L3045:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.f64   %arg2 -> 0[n]
	load.64*    %r13590 <- 0[L]
	load.64*    %r13591 <- 16[%r13590]
	store.64*   %r13591 -> 0[i_o]
	load.f64    %r13592 <- 0[n]
	load.64*    %r13593 <- 0[i_o]
	store.f64   %r13592 -> 0[%r13593]
	load.64*    %r13594 <- 0[i_o]
	store.32    $3 -> 8[%r13594]
	load.64*    %r13595 <- 0[L]
	load.64*    %r13596 <- 0[L]
	load.64*    %r13597 <- 16[%r13596]
	add.64*     %r13598 <- %r13597, $16
	store.64*   %r13598 -> 16[%r13596]
	br          .L3046

.L3046:
	ret


lua_pushinteger:
.L3047:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[n]
	load.64*    %r13599 <- 0[L]
	load.64*    %r13600 <- 16[%r13599]
	store.64*   %r13600 -> 0[i_o]
	load.64     %r13601 <- 0[n]
	fpcast.f64  %r13602 <- (64) %r13601
	load.64*    %r13603 <- 0[i_o]
	store.f64   %r13602 -> 0[%r13603]
	load.64*    %r13604 <- 0[i_o]
	store.32    $3 -> 8[%r13604]
	load.64*    %r13605 <- 0[L]
	load.64*    %r13606 <- 0[L]
	load.64*    %r13607 <- 16[%r13606]
	add.64*     %r13608 <- %r13607, $16
	store.64*   %r13608 -> 16[%r13606]
	br          .L3048

.L3048:
	ret


lua_pushlstring:
.L3049:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[s]
	store.64    %arg3 -> 0[len]
	load.64*    %r13609 <- 0[L]
	load.64*    %r13610 <- 32[%r13609]
	load.64     %r13611 <- 120[%r13610]
	load.64*    %r13612 <- 0[L]
	load.64*    %r13613 <- 32[%r13612]
	load.64     %r13614 <- 112[%r13613]
	setae.32    %r13615 <- %r13611, %r13614
	br          %r13615, .L3050, .L3051

.L3050:
	load.64*    %r13616 <- 0[L]
	push.64*    %r13616
	call        luaC_step
	br          .L3051

.L3051:
	load.64*    %r13617 <- 0[L]
	load.64*    %r13618 <- 16[%r13617]
	store.64*   %r13618 -> 0[i_o]
	load.64*    %r13619 <- 0[L]
	load.64*    %r13620 <- 0[s]
	load.64     %r13621 <- 0[len]
	push.64*    %r13619
	push.64*    %r13620
	push.64     %r13621
	call.64*    %r13622 <- luaS_newlstr
	ptrcast.64* %r13623 <- (64) %r13622
	load.64*    %r13624 <- 0[i_o]
	store.64*   %r13623 -> 0[%r13624]
	load.64*    %r13625 <- 0[i_o]
	store.32    $4 -> 8[%r13625]
	load.64*    %r13626 <- 0[L]
	load.64*    %r13627 <- 0[L]
	load.64*    %r13628 <- 16[%r13627]
	add.64*     %r13629 <- %r13628, $16
	store.64*   %r13629 -> 16[%r13627]
	br          .L3052

.L3052:
	ret


lua_pushstring:
.L3053:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[s]
	load.64*    %r13630 <- 0[s]
	seteq.32    %r13631 <- %r13630, $0
	br          %r13631, .L3054, .L3055

.L3054:
	load.64*    %r13632 <- 0[L]
	push.64*    %r13632
	call        lua_pushnil
	br          .L3056

.L3055:
	load.64*    %r13633 <- 0[L]
	load.64*    %r13634 <- 0[s]
	load.64*    %r13635 <- 0[s]
	push.64*    %r13635
	call.64     %r13636 <- strlen
	push.64*    %r13633
	push.64*    %r13634
	push.64     %r13636
	call        lua_pushlstring
	br          .L3056

.L3056:
	ret


lua_pushvfstring:
.L3057:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fmt]
	store.64*   %arg3 -> 0[argp]
	load.64*    %r13637 <- 0[L]
	load.64*    %r13638 <- 32[%r13637]
	load.64     %r13639 <- 120[%r13638]
	load.64*    %r13640 <- 0[L]
	load.64*    %r13641 <- 32[%r13640]
	load.64     %r13642 <- 112[%r13641]
	setae.32    %r13643 <- %r13639, %r13642
	br          %r13643, .L3058, .L3059

.L3058:
	load.64*    %r13644 <- 0[L]
	push.64*    %r13644
	call        luaC_step
	br          .L3059

.L3059:
	load.64*    %r13645 <- 0[L]
	load.64*    %r13646 <- 0[fmt]
	load.64*    %r13647 <- 0[argp]
	push.64*    %r13645
	push.64*    %r13646
	push.64*    %r13647
	call.64*    %r13648 <- luaO_pushvfstring
	store.64*   %r13648 -> 0[ret]
	load.64*    %r13649 <- 0[ret]
	phisrc.64*  %phi578(return) <- %r13649
	br          .L3060

.L3060:
	phi.64*     %r13650 <- %phi578(return)
	ret.64*     %r13649


lua_pushfstring:
.L3061:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fmt]
	load.64*    %r13651 <- 0[L]
	load.64*    %r13652 <- 32[%r13651]
	load.64     %r13653 <- 120[%r13652]
	load.64*    %r13654 <- 0[L]
	load.64*    %r13655 <- 32[%r13654]
	load.64     %r13656 <- 112[%r13655]
	setae.32    %r13657 <- %r13653, %r13656
	br          %r13657, .L3062, .L3063

.L3062:
	load.64*    %r13658 <- 0[L]
	push.64*    %r13658
	call        luaC_step
	br          .L3063

.L3063:
	symaddr.64* %r13659 <- fmt
	cast.64*    %r13660 <- (64) %r13659
	store.64*   %r13660 -> 0[argp]
	load.64*    %r13661 <- 0[L]
	load.64*    %r13662 <- 0[fmt]
	load.64*    %r13663 <- 0[argp]
	push.64*    %r13661
	push.64*    %r13662
	push.64*    %r13663
	call.64*    %r13664 <- luaO_pushvfstring
	store.64*   %r13664 -> 0[ret]
	load.64*    %r13665 <- 0[ret]
	phisrc.64*  %phi579(return) <- %r13665
	br          .L3064

.L3064:
	phi.64*     %r13666 <- %phi579(return)
	ret.64*     %r13665


lua_pushcclosure:
.L3065:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fn]
	store.32    %arg3 -> 0[n]
	load.64*    %r13667 <- 0[L]
	load.64*    %r13668 <- 32[%r13667]
	load.64     %r13669 <- 120[%r13668]
	load.64*    %r13670 <- 0[L]
	load.64*    %r13671 <- 32[%r13670]
	load.64     %r13672 <- 112[%r13671]
	setae.32    %r13673 <- %r13669, %r13672
	br          %r13673, .L3066, .L3067

.L3066:
	load.64*    %r13674 <- 0[L]
	push.64*    %r13674
	call        luaC_step
	br          .L3067

.L3067:
	load.64*    %r13675 <- 0[L]
	load.64*    %r13676 <- 0[L]
	load.32     %r13677 <- 0[n]
	load.64*    %r13678 <- 0[L]
	push.64*    %r13678
	call.64*    %r13679 <- getcurrenv
	push.64*    %r13676
	push.32     %r13677
	push.64*    %r13679
	call.64*    %r13680 <- luaF_newCclosure
	store.64*   %r13680 -> 0[cl]
	load.64*    %r13681 <- 0[fn]
	load.64*    %r13682 <- 0[cl]
	store.64*   %r13681 -> 32[%r13682]
	load.32     %r13683 <- 0[n]
	scast.64    %r13684 <- (32) %r13683
	muls.64     %r13685 <- %r13684, $16
	load.64*    %r13686 <- 0[L]
	load.64*    %r13687 <- 16[%r13686]
	cast.64     %r13688 <- (64) %r13687
	sub.64      %r13689 <- %r13688, %r13685
	ptrcast.64* %r13690 <- (64) %r13689
	store.64*   %r13690 -> 16[%r13686]
	br          .L3071

.L3071:
	load.32     %r13691 <- 0[n]
	sub.32      %r13692 <- %r13691, $1
	store.32    %r13692 -> 0[n]
	br          %r13691, .L3068, .L3070

.L3068:
	load.64*    %r13693 <- 0[L]
	load.64*    %r13694 <- 16[%r13693]
	load.32     %r13695 <- 0[n]
	scast.64    %r13696 <- (32) %r13695
	muls.64     %r13697 <- %r13696, $16
	add.64*     %r13698 <- %r13694, %r13697
	store.64*   %r13698 -> 0[o2]
	load.64*    %r13699 <- 0[cl]
	add.64*     %r13700 <- %r13699, $0
	add.64*     %r13701 <- %r13700, $40
	load.32     %r13702 <- 0[n]
	scast.64    %r13703 <- (32) %r13702
	muls.64     %r13704 <- %r13703, $16
	add.64*     %r13705 <- %r13701, %r13704
	store.64*   %r13705 -> 0[o1]
	load.64*    %r13706 <- 0[o2]
	load.f64    %r13707 <- 0[%r13706]
	fpcast.f64  %r13708 <- (64) %r13707
	load.64*    %r13709 <- 0[o1]
	store.f64   %r13708 -> 0[%r13709]
	load.64*    %r13710 <- 0[o2]
	load.32     %r13711 <- 8[%r13710]
	scast.32    %r13712 <- (32) %r13711
	load.64*    %r13713 <- 0[o1]
	store.32    %r13712 -> 8[%r13713]
	br          .L3069

.L3069:
	br          .L3071

.L3070:
	load.64*    %r13714 <- 0[L]
	load.64*    %r13715 <- 16[%r13714]
	store.64*   %r13715 -> 0[i_o]
	load.64*    %r13716 <- 0[cl]
	ptrcast.64* %r13717 <- (64) %r13716
	load.64*    %r13718 <- 0[i_o]
	store.64*   %r13717 -> 0[%r13718]
	load.64*    %r13719 <- 0[i_o]
	store.32    $6 -> 8[%r13719]
	load.64*    %r13720 <- 0[L]
	load.64*    %r13721 <- 0[L]
	load.64*    %r13722 <- 16[%r13721]
	add.64*     %r13723 <- %r13722, $16
	store.64*   %r13723 -> 16[%r13721]
	br          .L3072

.L3072:
	ret


lua_pushboolean:
.L3073:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[b]
	load.64*    %r13724 <- 0[L]
	load.64*    %r13725 <- 16[%r13724]
	store.64*   %r13725 -> 0[i_o]
	load.32     %r13726 <- 0[b]
	setne.32    %r13727 <- %r13726, $0
	load.64*    %r13728 <- 0[i_o]
	store.32    %r13727 -> 0[%r13728]
	load.64*    %r13729 <- 0[i_o]
	store.32    $1 -> 8[%r13729]
	load.64*    %r13730 <- 0[L]
	load.64*    %r13731 <- 0[L]
	load.64*    %r13732 <- 16[%r13731]
	add.64*     %r13733 <- %r13732, $16
	store.64*   %r13733 -> 16[%r13731]
	br          .L3074

.L3074:
	ret


lua_pushthread:
.L3075:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13734 <- 0[L]
	load.64*    %r13735 <- 16[%r13734]
	store.64*   %r13735 -> 0[i_o]
	load.64*    %r13736 <- 0[L]
	ptrcast.64* %r13737 <- (64) %r13736
	load.64*    %r13738 <- 0[i_o]
	store.64*   %r13737 -> 0[%r13738]
	load.64*    %r13739 <- 0[i_o]
	store.32    $8 -> 8[%r13739]
	load.64*    %r13740 <- 0[L]
	load.64*    %r13741 <- 0[L]
	load.64*    %r13742 <- 16[%r13741]
	add.64*     %r13743 <- %r13742, $16
	store.64*   %r13743 -> 16[%r13741]
	load.64*    %r13744 <- 0[L]
	load.64*    %r13745 <- 32[%r13744]
	load.64*    %r13746 <- 176[%r13745]
	load.64*    %r13747 <- 0[L]
	seteq.32    %r13748 <- %r13746, %r13747
	phisrc.32   %phi580(return) <- %r13748
	br          .L3076

.L3076:
	phi.32      %r13749 <- %phi580(return)
	ret.32      %r13748


lua_gettable:
.L3077:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13750 <- 0[L]
	load.32     %r13751 <- 0[idx]
	push.64*    %r13750
	push.32     %r13751
	call.64*    %r13752 <- index2adr
	store.64*   %r13752 -> 0[t]
	load.64*    %r13753 <- 0[L]
	load.64*    %r13754 <- 0[L]
	load.64*    %r13755 <- 0[t]
	load.64*    %r13756 <- 0[L]
	load.64*    %r13757 <- 16[%r13756]
	sub.64*     %r13758 <- %r13757, $16
	load.64*    %r13759 <- 0[L]
	load.64*    %r13760 <- 16[%r13759]
	sub.64*     %r13761 <- %r13760, $16
	push.64*    %r13754
	push.64*    %r13755
	push.64*    %r13758
	push.64*    %r13761
	call        luaV_gettable
	br          .L3078

.L3078:
	ret


lua_getfield:
.L3079:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[k]
	load.64*    %r13762 <- 0[L]
	load.32     %r13763 <- 0[idx]
	push.64*    %r13762
	push.32     %r13763
	call.64*    %r13764 <- index2adr
	store.64*   %r13764 -> 0[t]
	load.64*    %r13765 <- 0[L]
	symaddr.64* %r13766 <- key
	store.64*   %r13766 -> 0[i_o]
	load.64*    %r13767 <- 0[L]
	load.64*    %r13768 <- 0[k]
	load.64*    %r13769 <- 0[k]
	push.64*    %r13769
	call.64     %r13770 <- strlen
	push.64*    %r13767
	push.64*    %r13768
	push.64     %r13770
	call.64*    %r13771 <- luaS_newlstr
	ptrcast.64* %r13772 <- (64) %r13771
	load.64*    %r13773 <- 0[i_o]
	store.64*   %r13772 -> 0[%r13773]
	load.64*    %r13774 <- 0[i_o]
	store.32    $4 -> 8[%r13774]
	load.64*    %r13775 <- 0[L]
	load.64*    %r13776 <- 0[t]
	symaddr.64* %r13777 <- key
	load.64*    %r13778 <- 0[L]
	load.64*    %r13779 <- 16[%r13778]
	push.64*    %r13775
	push.64*    %r13776
	push.64*    %r13777
	push.64*    %r13779
	call        luaV_gettable
	load.64*    %r13780 <- 0[L]
	load.64*    %r13781 <- 0[L]
	load.64*    %r13782 <- 16[%r13781]
	add.64*     %r13783 <- %r13782, $16
	store.64*   %r13783 -> 16[%r13781]
	br          .L3080

.L3080:
	ret


lua_rawget:
.L3081:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13784 <- 0[L]
	load.32     %r13785 <- 0[idx]
	push.64*    %r13784
	push.32     %r13785
	call.64*    %r13786 <- index2adr
	store.64*   %r13786 -> 0[t]
	load.64*    %r13787 <- 0[L]
	load.64*    %r13788 <- 0[t]
	load.64*    %r13789 <- 0[%r13788]
	add.64*     %r13790 <- %r13789, $0
	load.64*    %r13791 <- 0[L]
	load.64*    %r13792 <- 16[%r13791]
	sub.64*     %r13793 <- %r13792, $16
	push.64*    %r13790
	push.64*    %r13793
	call.64*    %r13794 <- luaH_get
	store.64*   %r13794 -> 0[o2]
	load.64*    %r13795 <- 0[L]
	load.64*    %r13796 <- 16[%r13795]
	sub.64*     %r13797 <- %r13796, $16
	store.64*   %r13797 -> 0[o1]
	load.64*    %r13798 <- 0[o2]
	load.f64    %r13799 <- 0[%r13798]
	fpcast.f64  %r13800 <- (64) %r13799
	load.64*    %r13801 <- 0[o1]
	store.f64   %r13800 -> 0[%r13801]
	load.64*    %r13802 <- 0[o2]
	load.32     %r13803 <- 8[%r13802]
	scast.32    %r13804 <- (32) %r13803
	load.64*    %r13805 <- 0[o1]
	store.32    %r13804 -> 8[%r13805]
	br          .L3082

.L3082:
	ret


lua_rawgeti:
.L3083:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[n]
	load.64*    %r13806 <- 0[L]
	load.32     %r13807 <- 0[idx]
	push.64*    %r13806
	push.32     %r13807
	call.64*    %r13808 <- index2adr
	store.64*   %r13808 -> 0[o]
	load.64*    %r13809 <- 0[L]
	load.64*    %r13810 <- 0[o]
	load.64*    %r13811 <- 0[%r13810]
	add.64*     %r13812 <- %r13811, $0
	load.32     %r13813 <- 0[n]
	push.64*    %r13812
	push.32     %r13813
	call.64*    %r13814 <- luaH_getnum
	store.64*   %r13814 -> 0[o2]
	load.64*    %r13815 <- 0[L]
	load.64*    %r13816 <- 16[%r13815]
	store.64*   %r13816 -> 0[o1]
	load.64*    %r13817 <- 0[o2]
	load.f64    %r13818 <- 0[%r13817]
	fpcast.f64  %r13819 <- (64) %r13818
	load.64*    %r13820 <- 0[o1]
	store.f64   %r13819 -> 0[%r13820]
	load.64*    %r13821 <- 0[o2]
	load.32     %r13822 <- 8[%r13821]
	scast.32    %r13823 <- (32) %r13822
	load.64*    %r13824 <- 0[o1]
	store.32    %r13823 -> 8[%r13824]
	load.64*    %r13825 <- 0[L]
	load.64*    %r13826 <- 0[L]
	load.64*    %r13827 <- 16[%r13826]
	add.64*     %r13828 <- %r13827, $16
	store.64*   %r13828 -> 16[%r13826]
	br          .L3084

.L3084:
	ret


lua_createtable:
.L3085:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narray]
	store.32    %arg3 -> 0[nrec]
	load.64*    %r13829 <- 0[L]
	load.64*    %r13830 <- 32[%r13829]
	load.64     %r13831 <- 120[%r13830]
	load.64*    %r13832 <- 0[L]
	load.64*    %r13833 <- 32[%r13832]
	load.64     %r13834 <- 112[%r13833]
	setae.32    %r13835 <- %r13831, %r13834
	br          %r13835, .L3086, .L3087

.L3086:
	load.64*    %r13836 <- 0[L]
	push.64*    %r13836
	call        luaC_step
	br          .L3087

.L3087:
	load.64*    %r13837 <- 0[L]
	load.64*    %r13838 <- 16[%r13837]
	store.64*   %r13838 -> 0[i_o]
	load.64*    %r13839 <- 0[L]
	load.32     %r13840 <- 0[narray]
	load.32     %r13841 <- 0[nrec]
	push.64*    %r13839
	push.32     %r13840
	push.32     %r13841
	call.64*    %r13842 <- luaH_new
	ptrcast.64* %r13843 <- (64) %r13842
	load.64*    %r13844 <- 0[i_o]
	store.64*   %r13843 -> 0[%r13844]
	load.64*    %r13845 <- 0[i_o]
	store.32    $5 -> 8[%r13845]
	load.64*    %r13846 <- 0[L]
	load.64*    %r13847 <- 0[L]
	load.64*    %r13848 <- 16[%r13847]
	add.64*     %r13849 <- %r13848, $16
	store.64*   %r13849 -> 16[%r13847]
	br          .L3088

.L3088:
	ret


lua_getmetatable:
.L3089:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[objindex]
	store.64*   $0 -> 0[mt]
	load.64*    %r13850 <- 0[L]
	load.32     %r13851 <- 0[objindex]
	push.64*    %r13850
	push.32     %r13851
	call.64*    %r13852 <- index2adr
	store.64*   %r13852 -> 0[obj]
	load.64*    %r13853 <- 0[obj]
	load.32     %r13854 <- 8[%r13853]
	switch.32   %r13854, 5 -> .L3091, 7 -> .L3092, default -> .L3093

.L3091:
	load.64*    %r13855 <- 0[obj]
	load.64*    %r13856 <- 0[%r13855]
	load.64*    %r13857 <- 16[%r13856]
	store.64*   %r13857 -> 0[mt]
	br          .L3090

.L3092:
	load.64*    %r13858 <- 0[obj]
	load.64*    %r13859 <- 0[%r13858]
	load.64*    %r13860 <- 16[%r13859]
	store.64*   %r13860 -> 0[mt]
	br          .L3090

.L3093:
	load.64*    %r13861 <- 0[L]
	load.64*    %r13862 <- 32[%r13861]
	add.64*     %r13863 <- %r13862, $224
	load.64*    %r13864 <- 0[obj]
	load.32     %r13865 <- 8[%r13864]
	scast.64    %r13866 <- (32) %r13865
	muls.64     %r13867 <- %r13866, $8
	add.64*     %r13868 <- %r13863, %r13867
	load.64*    %r13869 <- 0[%r13868]
	store.64*   %r13869 -> 0[mt]
	br          .L3090

.L3090:
	load.64*    %r13870 <- 0[mt]
	seteq.32    %r13871 <- %r13870, $0
	br          %r13871, .L3094, .L3095

.L3094:
	store.32    $0 -> 0[res]
	br          .L3096

.L3095:
	load.64*    %r13872 <- 0[L]
	load.64*    %r13873 <- 16[%r13872]
	store.64*   %r13873 -> 0[i_o]
	load.64*    %r13874 <- 0[mt]
	ptrcast.64* %r13875 <- (64) %r13874
	load.64*    %r13876 <- 0[i_o]
	store.64*   %r13875 -> 0[%r13876]
	load.64*    %r13877 <- 0[i_o]
	store.32    $5 -> 8[%r13877]
	load.64*    %r13878 <- 0[L]
	load.64*    %r13879 <- 0[L]
	load.64*    %r13880 <- 16[%r13879]
	add.64*     %r13881 <- %r13880, $16
	store.64*   %r13881 -> 16[%r13879]
	store.32    $1 -> 0[res]
	br          .L3096

.L3096:
	load.32     %r13882 <- 0[res]
	phisrc.32   %phi581(return) <- %r13882
	br          .L3097

.L3097:
	phi.32      %r13883 <- %phi581(return)
	ret.32      %r13882


lua_getfenv:
.L3098:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13884 <- 0[L]
	load.32     %r13885 <- 0[idx]
	push.64*    %r13884
	push.32     %r13885
	call.64*    %r13886 <- index2adr
	store.64*   %r13886 -> 0[o]
	load.64*    %r13887 <- 0[L]
	load.64*    %r13888 <- 0[o]
	load.32     %r13889 <- 8[%r13888]
	switch.32   %r13889, 6 -> .L3100, 7 -> .L3101, 8 -> .L3102, default -> .L3103

.L3100:
	load.64*    %r13890 <- 0[L]
	load.64*    %r13891 <- 16[%r13890]
	store.64*   %r13891 -> 0[i_o]
	load.64*    %r13892 <- 0[o]
	load.64*    %r13893 <- 0[%r13892]
	load.64*    %r13894 <- 24[%r13893]
	ptrcast.64* %r13895 <- (64) %r13894
	load.64*    %r13896 <- 0[i_o]
	store.64*   %r13895 -> 0[%r13896]
	load.64*    %r13897 <- 0[i_o]
	store.32    $5 -> 8[%r13897]
	br          .L3099

.L3101:
	load.64*    %r13898 <- 0[L]
	load.64*    %r13899 <- 16[%r13898]
	store.64*   %r13899 -> 0[i_o]
	load.64*    %r13900 <- 0[o]
	load.64*    %r13901 <- 0[%r13900]
	load.64*    %r13902 <- 24[%r13901]
	ptrcast.64* %r13903 <- (64) %r13902
	load.64*    %r13904 <- 0[i_o]
	store.64*   %r13903 -> 0[%r13904]
	load.64*    %r13905 <- 0[i_o]
	store.32    $5 -> 8[%r13905]
	br          .L3099

.L3102:
	load.64*    %r13906 <- 0[o]
	load.64*    %r13907 <- 0[%r13906]
	add.64*     %r13908 <- %r13907, $0
	add.64*     %r13909 <- %r13908, $120
	store.64*   %r13909 -> 0[o2]
	load.64*    %r13910 <- 0[L]
	load.64*    %r13911 <- 16[%r13910]
	store.64*   %r13911 -> 0[o1]
	load.64*    %r13912 <- 0[o2]
	load.f64    %r13913 <- 0[%r13912]
	fpcast.f64  %r13914 <- (64) %r13913
	load.64*    %r13915 <- 0[o1]
	store.f64   %r13914 -> 0[%r13915]
	load.64*    %r13916 <- 0[o2]
	load.32     %r13917 <- 8[%r13916]
	scast.32    %r13918 <- (32) %r13917
	load.64*    %r13919 <- 0[o1]
	store.32    %r13918 -> 8[%r13919]
	br          .L3099

.L3103:
	load.64*    %r13920 <- 0[L]
	load.64*    %r13921 <- 16[%r13920]
	store.32    $0 -> 8[%r13921]
	br          .L3099

.L3099:
	load.64*    %r13922 <- 0[L]
	load.64*    %r13923 <- 0[L]
	load.64*    %r13924 <- 16[%r13923]
	add.64*     %r13925 <- %r13924, $16
	store.64*   %r13925 -> 16[%r13923]
	br          .L3104

.L3104:
	ret


lua_settable:
.L3105:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13926 <- 0[L]
	load.64*    %r13927 <- 0[L]
	load.32     %r13928 <- 0[idx]
	push.64*    %r13927
	push.32     %r13928
	call.64*    %r13929 <- index2adr
	store.64*   %r13929 -> 0[t]
	load.64*    %r13930 <- 0[L]
	load.64*    %r13931 <- 0[L]
	load.64*    %r13932 <- 0[t]
	load.64*    %r13933 <- 0[L]
	load.64*    %r13934 <- 16[%r13933]
	sub.64*     %r13935 <- %r13934, $32
	load.64*    %r13936 <- 0[L]
	load.64*    %r13937 <- 16[%r13936]
	sub.64*     %r13938 <- %r13937, $16
	push.64*    %r13931
	push.64*    %r13932
	push.64*    %r13935
	push.64*    %r13938
	call        luaV_settable
	load.64*    %r13939 <- 0[L]
	load.64*    %r13940 <- 16[%r13939]
	cast.64     %r13941 <- (64) %r13940
	sub.64      %r13942 <- %r13941, $32
	ptrcast.64* %r13943 <- (64) %r13942
	store.64*   %r13943 -> 16[%r13939]
	br          .L3106

.L3106:
	ret


lua_setfield:
.L3107:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[k]
	load.64*    %r13944 <- 0[L]
	load.64*    %r13945 <- 0[L]
	load.32     %r13946 <- 0[idx]
	push.64*    %r13945
	push.32     %r13946
	call.64*    %r13947 <- index2adr
	store.64*   %r13947 -> 0[t]
	load.64*    %r13948 <- 0[L]
	symaddr.64* %r13949 <- key
	store.64*   %r13949 -> 0[i_o]
	load.64*    %r13950 <- 0[L]
	load.64*    %r13951 <- 0[k]
	load.64*    %r13952 <- 0[k]
	push.64*    %r13952
	call.64     %r13953 <- strlen
	push.64*    %r13950
	push.64*    %r13951
	push.64     %r13953
	call.64*    %r13954 <- luaS_newlstr
	ptrcast.64* %r13955 <- (64) %r13954
	load.64*    %r13956 <- 0[i_o]
	store.64*   %r13955 -> 0[%r13956]
	load.64*    %r13957 <- 0[i_o]
	store.32    $4 -> 8[%r13957]
	load.64*    %r13958 <- 0[L]
	load.64*    %r13959 <- 0[t]
	symaddr.64* %r13960 <- key
	load.64*    %r13961 <- 0[L]
	load.64*    %r13962 <- 16[%r13961]
	sub.64*     %r13963 <- %r13962, $16
	push.64*    %r13958
	push.64*    %r13959
	push.64*    %r13960
	push.64*    %r13963
	call        luaV_settable
	load.64*    %r13964 <- 0[L]
	load.64*    %r13965 <- 16[%r13964]
	sub.64*     %r13966 <- %r13965, $16
	store.64*   %r13966 -> 16[%r13964]
	br          .L3108

.L3108:
	ret


lua_rawset:
.L3109:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13967 <- 0[L]
	load.64*    %r13968 <- 0[L]
	load.32     %r13969 <- 0[idx]
	push.64*    %r13968
	push.32     %r13969
	call.64*    %r13970 <- index2adr
	store.64*   %r13970 -> 0[t]
	load.64*    %r13971 <- 0[L]
	load.64*    %r13972 <- 0[L]
	load.64*    %r13973 <- 16[%r13972]
	sub.64*     %r13974 <- %r13973, $16
	store.64*   %r13974 -> 0[o2]
	load.64*    %r13975 <- 0[L]
	load.64*    %r13976 <- 0[t]
	load.64*    %r13977 <- 0[%r13976]
	add.64*     %r13978 <- %r13977, $0
	load.64*    %r13979 <- 0[L]
	load.64*    %r13980 <- 16[%r13979]
	sub.64*     %r13981 <- %r13980, $32
	push.64*    %r13975
	push.64*    %r13978
	push.64*    %r13981
	call.64*    %r13982 <- luaH_set
	store.64*   %r13982 -> 0[o1]
	load.64*    %r13983 <- 0[o2]
	load.f64    %r13984 <- 0[%r13983]
	fpcast.f64  %r13985 <- (64) %r13984
	load.64*    %r13986 <- 0[o1]
	store.f64   %r13985 -> 0[%r13986]
	load.64*    %r13987 <- 0[o2]
	load.32     %r13988 <- 8[%r13987]
	scast.32    %r13989 <- (32) %r13988
	load.64*    %r13990 <- 0[o1]
	store.32    %r13989 -> 8[%r13990]
	load.64*    %r13991 <- 0[L]
	load.64*    %r13992 <- 16[%r13991]
	sub.64*     %r13993 <- %r13992, $16
	load.32     %r13994 <- 8[%r13993]
	setge.32    %r13995 <- %r13994, $4
	br          %r13995, .L3113, .L3111

.L3113:
	load.64*    %r13996 <- 0[L]
	load.64*    %r13997 <- 16[%r13996]
	sub.64*     %r13998 <- %r13997, $16
	load.64*    %r13999 <- 0[%r13998]
	load.8      %r14000 <- 9[%r13999]
	cast.32     %r14001 <- (8) %r14000
	and.32      %r14002 <- %r14001, $3
	br          %r14002, .L3112, .L3111

.L3112:
	load.64*    %r14003 <- 0[t]
	load.64*    %r14004 <- 0[%r14003]
	add.64*     %r14005 <- %r14004, $0
	ptrcast.64* %r14006 <- (64) %r14005
	load.8      %r14007 <- 9[%r14006]
	cast.32     %r14008 <- (8) %r14007
	and.32      %r14009 <- %r14008, $4
	br          %r14009, .L3110, .L3111

.L3110:
	load.64*    %r14010 <- 0[L]
	load.64*    %r14011 <- 0[t]
	load.64*    %r14012 <- 0[%r14011]
	add.64*     %r14013 <- %r14012, $0
	push.64*    %r14010
	push.64*    %r14013
	call        luaC_barrierback
	br          .L3111

.L3111:
	load.64*    %r14014 <- 0[L]
	load.64*    %r14015 <- 16[%r14014]
	cast.64     %r14016 <- (64) %r14015
	sub.64      %r14017 <- %r14016, $32
	ptrcast.64* %r14018 <- (64) %r14017
	store.64*   %r14018 -> 16[%r14014]
	br          .L3114

.L3114:
	ret


lua_rawseti:
.L3115:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[n]
	load.64*    %r14019 <- 0[L]
	load.64*    %r14020 <- 0[L]
	load.32     %r14021 <- 0[idx]
	push.64*    %r14020
	push.32     %r14021
	call.64*    %r14022 <- index2adr
	store.64*   %r14022 -> 0[o]
	load.64*    %r14023 <- 0[L]
	load.64*    %r14024 <- 0[L]
	load.64*    %r14025 <- 16[%r14024]
	sub.64*     %r14026 <- %r14025, $16
	store.64*   %r14026 -> 0[o2]
	load.64*    %r14027 <- 0[L]
	load.64*    %r14028 <- 0[o]
	load.64*    %r14029 <- 0[%r14028]
	add.64*     %r14030 <- %r14029, $0
	load.32     %r14031 <- 0[n]
	push.64*    %r14027
	push.64*    %r14030
	push.32     %r14031
	call.64*    %r14032 <- luaH_setnum
	store.64*   %r14032 -> 0[o1]
	load.64*    %r14033 <- 0[o2]
	load.f64    %r14034 <- 0[%r14033]
	fpcast.f64  %r14035 <- (64) %r14034
	load.64*    %r14036 <- 0[o1]
	store.f64   %r14035 -> 0[%r14036]
	load.64*    %r14037 <- 0[o2]
	load.32     %r14038 <- 8[%r14037]
	scast.32    %r14039 <- (32) %r14038
	load.64*    %r14040 <- 0[o1]
	store.32    %r14039 -> 8[%r14040]
	load.64*    %r14041 <- 0[L]
	load.64*    %r14042 <- 16[%r14041]
	sub.64*     %r14043 <- %r14042, $16
	load.32     %r14044 <- 8[%r14043]
	setge.32    %r14045 <- %r14044, $4
	br          %r14045, .L3119, .L3117

.L3119:
	load.64*    %r14046 <- 0[L]
	load.64*    %r14047 <- 16[%r14046]
	sub.64*     %r14048 <- %r14047, $16
	load.64*    %r14049 <- 0[%r14048]
	load.8      %r14050 <- 9[%r14049]
	cast.32     %r14051 <- (8) %r14050
	and.32      %r14052 <- %r14051, $3
	br          %r14052, .L3118, .L3117

.L3118:
	load.64*    %r14053 <- 0[o]
	load.64*    %r14054 <- 0[%r14053]
	add.64*     %r14055 <- %r14054, $0
	ptrcast.64* %r14056 <- (64) %r14055
	load.8      %r14057 <- 9[%r14056]
	cast.32     %r14058 <- (8) %r14057
	and.32      %r14059 <- %r14058, $4
	br          %r14059, .L3116, .L3117

.L3116:
	load.64*    %r14060 <- 0[L]
	load.64*    %r14061 <- 0[o]
	load.64*    %r14062 <- 0[%r14061]
	add.64*     %r14063 <- %r14062, $0
	push.64*    %r14060
	push.64*    %r14063
	call        luaC_barrierback
	br          .L3117

.L3117:
	load.64*    %r14064 <- 0[L]
	load.64*    %r14065 <- 16[%r14064]
	sub.64*     %r14066 <- %r14065, $16
	store.64*   %r14066 -> 16[%r14064]
	br          .L3120

.L3120:
	ret


lua_setmetatable:
.L3121:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[objindex]
	load.64*    %r14067 <- 0[L]
	load.64*    %r14068 <- 0[L]
	load.32     %r14069 <- 0[objindex]
	push.64*    %r14068
	push.32     %r14069
	call.64*    %r14070 <- index2adr
	store.64*   %r14070 -> 0[obj]
	load.64*    %r14071 <- 0[L]
	load.64*    %r14072 <- 0[L]
	load.64*    %r14073 <- 16[%r14072]
	sub.64*     %r14074 <- %r14073, $16
	load.32     %r14075 <- 8[%r14074]
	seteq.32    %r14076 <- %r14075, $0
	br          %r14076, .L3122, .L3123

.L3122:
	store.64*   $0 -> 0[mt]
	br          .L3124

.L3123:
	load.64*    %r14077 <- 0[L]
	load.64*    %r14078 <- 0[L]
	load.64*    %r14079 <- 16[%r14078]
	sub.64*     %r14080 <- %r14079, $16
	load.64*    %r14081 <- 0[%r14080]
	add.64*     %r14082 <- %r14081, $0
	store.64*   %r14082 -> 0[mt]
	br          .L3124

.L3124:
	load.64*    %r14083 <- 0[obj]
	load.32     %r14084 <- 8[%r14083]
	switch.32   %r14084, 5 -> .L3126, 7 -> .L3127, default -> .L3128

.L3126:
	load.64*    %r14085 <- 0[mt]
	load.64*    %r14086 <- 0[obj]
	load.64*    %r14087 <- 0[%r14086]
	store.64*   %r14085 -> 16[%r14087]
	load.64*    %r14088 <- 0[mt]
	br          %r14088, .L3129, .L3130

.L3129:
	load.64*    %r14089 <- 0[mt]
	ptrcast.64* %r14090 <- (64) %r14089
	load.8      %r14091 <- 9[%r14090]
	cast.32     %r14092 <- (8) %r14091
	and.32      %r14093 <- %r14092, $3
	br          %r14093, .L3133, .L3132

.L3133:
	load.64*    %r14094 <- 0[obj]
	load.64*    %r14095 <- 0[%r14094]
	add.64*     %r14096 <- %r14095, $0
	ptrcast.64* %r14097 <- (64) %r14096
	load.8      %r14098 <- 9[%r14097]
	cast.32     %r14099 <- (8) %r14098
	and.32      %r14100 <- %r14099, $4
	br          %r14100, .L3131, .L3132

.L3131:
	load.64*    %r14101 <- 0[L]
	load.64*    %r14102 <- 0[obj]
	load.64*    %r14103 <- 0[%r14102]
	add.64*     %r14104 <- %r14103, $0
	push.64*    %r14101
	push.64*    %r14104
	call        luaC_barrierback
	br          .L3132

.L3132:
	br          .L3130

.L3130:
	br          .L3125

.L3127:
	load.64*    %r14105 <- 0[mt]
	load.64*    %r14106 <- 0[obj]
	load.64*    %r14107 <- 0[%r14106]
	store.64*   %r14105 -> 16[%r14107]
	load.64*    %r14108 <- 0[mt]
	br          %r14108, .L3134, .L3135

.L3134:
	load.64*    %r14109 <- 0[mt]
	ptrcast.64* %r14110 <- (64) %r14109
	load.8      %r14111 <- 9[%r14110]
	cast.32     %r14112 <- (8) %r14111
	and.32      %r14113 <- %r14112, $3
	br          %r14113, .L3138, .L3137

.L3138:
	load.64*    %r14114 <- 0[obj]
	load.64*    %r14115 <- 0[%r14114]
	add.64*     %r14116 <- %r14115, $0
	ptrcast.64* %r14117 <- (64) %r14116
	load.8      %r14118 <- 9[%r14117]
	cast.32     %r14119 <- (8) %r14118
	and.32      %r14120 <- %r14119, $4
	br          %r14120, .L3136, .L3137

.L3136:
	load.64*    %r14121 <- 0[L]
	load.64*    %r14122 <- 0[obj]
	load.64*    %r14123 <- 0[%r14122]
	add.64*     %r14124 <- %r14123, $0
	ptrcast.64* %r14125 <- (64) %r14124
	load.64*    %r14126 <- 0[mt]
	ptrcast.64* %r14127 <- (64) %r14126
	push.64*    %r14121
	push.64*    %r14125
	push.64*    %r14127
	call        luaC_barrierf
	br          .L3137

.L3137:
	br          .L3135

.L3135:
	br          .L3125

.L3128:
	load.64*    %r14128 <- 0[mt]
	load.64*    %r14129 <- 0[L]
	load.64*    %r14130 <- 32[%r14129]
	add.64*     %r14131 <- %r14130, $224
	load.64*    %r14132 <- 0[obj]
	load.32     %r14133 <- 8[%r14132]
	scast.64    %r14134 <- (32) %r14133
	muls.64     %r14135 <- %r14134, $8
	add.64*     %r14136 <- %r14131, %r14135
	store.64*   %r14128 -> 0[%r14136]
	br          .L3125

.L3125:
	load.64*    %r14137 <- 0[L]
	load.64*    %r14138 <- 16[%r14137]
	sub.64*     %r14139 <- %r14138, $16
	store.64*   %r14139 -> 16[%r14137]
	phisrc.32   %phi582(return) <- $1
	br          .L3139

.L3139:
	phi.32      %r14140 <- %phi582(return)
	ret.32      $1


lua_setfenv:
.L3140:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    $1 -> 0[res]
	load.64*    %r14141 <- 0[L]
	load.64*    %r14142 <- 0[L]
	load.32     %r14143 <- 0[idx]
	push.64*    %r14142
	push.32     %r14143
	call.64*    %r14144 <- index2adr
	store.64*   %r14144 -> 0[o]
	load.64*    %r14145 <- 0[L]
	load.64*    %r14146 <- 0[L]
	load.64*    %r14147 <- 0[o]
	load.32     %r14148 <- 8[%r14147]
	switch.32   %r14148, 6 -> .L3142, 7 -> .L3143, 8 -> .L3144, default -> .L3145

.L3142:
	load.64*    %r14149 <- 0[L]
	load.64*    %r14150 <- 16[%r14149]
	sub.64*     %r14151 <- %r14150, $16
	load.64*    %r14152 <- 0[%r14151]
	add.64*     %r14153 <- %r14152, $0
	load.64*    %r14154 <- 0[o]
	load.64*    %r14155 <- 0[%r14154]
	store.64*   %r14153 -> 24[%r14155]
	br          .L3141

.L3143:
	load.64*    %r14156 <- 0[L]
	load.64*    %r14157 <- 16[%r14156]
	sub.64*     %r14158 <- %r14157, $16
	load.64*    %r14159 <- 0[%r14158]
	add.64*     %r14160 <- %r14159, $0
	load.64*    %r14161 <- 0[o]
	load.64*    %r14162 <- 0[%r14161]
	store.64*   %r14160 -> 24[%r14162]
	br          .L3141

.L3144:
	load.64*    %r14163 <- 0[o]
	load.64*    %r14164 <- 0[%r14163]
	add.64*     %r14165 <- %r14164, $0
	add.64*     %r14166 <- %r14165, $120
	store.64*   %r14166 -> 0[i_o]
	load.64*    %r14167 <- 0[L]
	load.64*    %r14168 <- 16[%r14167]
	sub.64*     %r14169 <- %r14168, $16
	load.64*    %r14170 <- 0[%r14169]
	add.64*     %r14171 <- %r14170, $0
	ptrcast.64* %r14172 <- (64) %r14171
	load.64*    %r14173 <- 0[i_o]
	store.64*   %r14172 -> 0[%r14173]
	load.64*    %r14174 <- 0[i_o]
	store.32    $5 -> 8[%r14174]
	br          .L3141

.L3145:
	store.32    $0 -> 0[res]
	br          .L3141

.L3141:
	load.32     %r14175 <- 0[res]
	br          %r14175, .L3146, .L3147

.L3146:
	load.64*    %r14176 <- 0[L]
	load.64*    %r14177 <- 16[%r14176]
	sub.64*     %r14178 <- %r14177, $16
	load.64*    %r14179 <- 0[%r14178]
	add.64*     %r14180 <- %r14179, $0
	ptrcast.64* %r14181 <- (64) %r14180
	load.8      %r14182 <- 9[%r14181]
	cast.32     %r14183 <- (8) %r14182
	and.32      %r14184 <- %r14183, $3
	br          %r14184, .L3150, .L3149

.L3150:
	load.64*    %r14185 <- 0[o]
	load.64*    %r14186 <- 0[%r14185]
	ptrcast.64* %r14187 <- (64) %r14186
	load.8      %r14188 <- 9[%r14187]
	cast.32     %r14189 <- (8) %r14188
	and.32      %r14190 <- %r14189, $4
	br          %r14190, .L3148, .L3149

.L3148:
	load.64*    %r14191 <- 0[L]
	load.64*    %r14192 <- 0[o]
	load.64*    %r14193 <- 0[%r14192]
	ptrcast.64* %r14194 <- (64) %r14193
	load.64*    %r14195 <- 0[L]
	load.64*    %r14196 <- 16[%r14195]
	sub.64*     %r14197 <- %r14196, $16
	load.64*    %r14198 <- 0[%r14197]
	add.64*     %r14199 <- %r14198, $0
	ptrcast.64* %r14200 <- (64) %r14199
	push.64*    %r14191
	push.64*    %r14194
	push.64*    %r14200
	call        luaC_barrierf
	br          .L3149

.L3149:
	br          .L3147

.L3147:
	load.64*    %r14201 <- 0[L]
	load.64*    %r14202 <- 16[%r14201]
	sub.64*     %r14203 <- %r14202, $16
	store.64*   %r14203 -> 16[%r14201]
	load.32     %r14204 <- 0[res]
	phisrc.32   %phi583(return) <- %r14204
	br          .L3151

.L3151:
	phi.32      %r14205 <- %phi583(return)
	ret.32      %r14204


lua_call:
.L3152:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nargs]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r14206 <- 0[L]
	load.64*    %r14207 <- 0[L]
	load.64*    %r14208 <- 0[L]
	load.64*    %r14209 <- 16[%r14208]
	load.32     %r14210 <- 0[nargs]
	add.32      %r14211 <- %r14210, $1
	scast.64    %r14212 <- (32) %r14211
	muls.64     %r14213 <- %r14212, $16
	sub.64*     %r14214 <- %r14209, %r14213
	store.64*   %r14214 -> 0[func]
	load.64*    %r14215 <- 0[L]
	load.64*    %r14216 <- 0[func]
	load.32     %r14217 <- 0[nresults]
	push.64*    %r14215
	push.64*    %r14216
	push.32     %r14217
	call        luaD_call
	load.32     %r14218 <- 0[nresults]
	seteq.32    %r14219 <- %r14218, $0xffffffff
	br          %r14219, .L3155, .L3154

.L3155:
	load.64*    %r14220 <- 0[L]
	load.64*    %r14221 <- 16[%r14220]
	load.64*    %r14222 <- 0[L]
	load.64*    %r14223 <- 40[%r14222]
	load.64*    %r14224 <- 16[%r14223]
	setae.32    %r14225 <- %r14221, %r14224
	br          %r14225, .L3153, .L3154

.L3153:
	load.64*    %r14226 <- 0[L]
	load.64*    %r14227 <- 16[%r14226]
	load.64*    %r14228 <- 0[L]
	load.64*    %r14229 <- 40[%r14228]
	store.64*   %r14227 -> 16[%r14229]
	br          .L3154

.L3154:
	ret


f_call:
.L3156:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r14230 <- 0[ud]
	ptrcast.64* %r14231 <- (64) %r14230
	store.64*   %r14231 -> 0[c]
	load.64*    %r14232 <- 0[L]
	load.64*    %r14233 <- 0[c]
	load.64*    %r14234 <- 0[%r14233]
	load.64*    %r14235 <- 0[c]
	load.32     %r14236 <- 8[%r14235]
	push.64*    %r14232
	push.64*    %r14234
	push.32     %r14236
	call        luaD_call
	br          .L3157

.L3157:
	ret


lua_pcall:
.L3158:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nargs]
	store.32    %arg3 -> 0[nresults]
	store.32    %arg4 -> 0[errfunc]
	load.64*    %r14237 <- 0[L]
	load.64*    %r14238 <- 0[L]
	load.32     %r14239 <- 0[errfunc]
	seteq.32    %r14240 <- %r14239, $0
	br          %r14240, .L3159, .L3160

.L3159:
	store.64    $0 -> 0[func]
	br          .L3161

.L3160:
	load.64*    %r14241 <- 0[L]
	load.32     %r14242 <- 0[errfunc]
	push.64*    %r14241
	push.32     %r14242
	call.64*    %r14243 <- index2adr
	store.64*   %r14243 -> 0[o]
	load.64*    %r14244 <- 0[L]
	load.64*    %r14245 <- 0[o]
	ptrcast.64* %r14246 <- (64) %r14245
	load.64*    %r14247 <- 0[L]
	load.64*    %r14248 <- 64[%r14247]
	ptrcast.64* %r14249 <- (64) %r14248
	sub.64      %r14250 <- %r14246, %r14249
	store.64    %r14250 -> 0[func]
	br          .L3161

.L3161:
	load.64*    %r14251 <- 0[L]
	load.64*    %r14252 <- 16[%r14251]
	load.32     %r14253 <- 0[nargs]
	add.32      %r14254 <- %r14253, $1
	scast.64    %r14255 <- (32) %r14254
	muls.64     %r14256 <- %r14255, $16
	sub.64*     %r14257 <- %r14252, %r14256
	store.64*   %r14257 -> 0[c]
	load.32     %r14258 <- 0[nresults]
	store.32    %r14258 -> 8[c]
	load.64*    %r14259 <- 0[L]
	symaddr.64* %r14260 <- f_call
	symaddr.64* %r14261 <- c
	cast.64*    %r14262 <- (64) %r14261
	load.64*    %r14263 <- 0[c]
	ptrcast.64* %r14264 <- (64) %r14263
	load.64*    %r14265 <- 0[L]
	load.64*    %r14266 <- 64[%r14265]
	ptrcast.64* %r14267 <- (64) %r14266
	sub.64      %r14268 <- %r14264, %r14267
	load.64     %r14269 <- 0[func]
	push.64*    %r14259
	push.64*    %r14260
	push.64*    %r14262
	push.64     %r14268
	push.64     %r14269
	call.32     %r14270 <- luaD_pcall
	store.32    %r14270 -> 0[status]
	load.32     %r14271 <- 0[nresults]
	seteq.32    %r14272 <- %r14271, $0xffffffff
	br          %r14272, .L3164, .L3163

.L3164:
	load.64*    %r14273 <- 0[L]
	load.64*    %r14274 <- 16[%r14273]
	load.64*    %r14275 <- 0[L]
	load.64*    %r14276 <- 40[%r14275]
	load.64*    %r14277 <- 16[%r14276]
	setae.32    %r14278 <- %r14274, %r14277
	br          %r14278, .L3162, .L3163

.L3162:
	load.64*    %r14279 <- 0[L]
	load.64*    %r14280 <- 16[%r14279]
	load.64*    %r14281 <- 0[L]
	load.64*    %r14282 <- 40[%r14281]
	store.64*   %r14280 -> 16[%r14282]
	br          .L3163

.L3163:
	load.32     %r14283 <- 0[status]
	phisrc.32   %phi584(return) <- %r14283
	br          .L3165

.L3165:
	phi.32      %r14284 <- %phi584(return)
	ret.32      %r14283


lua_load:
.L3166:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[reader]
	store.64*   %arg3 -> 0[data]
	store.64*   %arg4 -> 0[chunkname]
	load.64*    %r14285 <- 0[chunkname]
	br          %r14285, .L3168, .L3167

.L3167:
	symaddr.64* %r14286 <- <anon symbol:0x62d001483468>
	store.64*   %r14286 -> 0[chunkname]
	br          .L3168

.L3168:
	load.64*    %r14287 <- 0[L]
	symaddr.64* %r14288 <- z
	load.64*    %r14289 <- 0[reader]
	load.64*    %r14290 <- 0[data]
	push.64*    %r14287
	push.64*    %r14288
	push.64*    %r14289
	push.64*    %r14290
	call        luaZ_init
	load.64*    %r14291 <- 0[L]
	symaddr.64* %r14292 <- z
	load.64*    %r14293 <- 0[chunkname]
	push.64*    %r14291
	push.64*    %r14292
	push.64*    %r14293
	call.32     %r14294 <- luaD_protectedparser
	store.32    %r14294 -> 0[status]
	load.32     %r14295 <- 0[status]
	phisrc.32   %phi585(return) <- %r14295
	br          .L3169

.L3169:
	phi.32      %r14296 <- %phi585(return)
	ret.32      %r14295


lua_error:
.L3170:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14297 <- 0[L]
	load.64*    %r14298 <- 0[L]
	push.64*    %r14298
	call        luaG_errormsg
	phisrc.32   %phi586(return) <- $0
	br          .L3171

.L3171:
	phi.32      %r14299 <- %phi586(return)
	ret.32      $0


lua_next:
.L3172:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r14300 <- 0[L]
	load.32     %r14301 <- 0[idx]
	push.64*    %r14300
	push.32     %r14301
	call.64*    %r14302 <- index2adr
	store.64*   %r14302 -> 0[t]
	load.64*    %r14303 <- 0[L]
	load.64*    %r14304 <- 0[L]
	load.64*    %r14305 <- 0[t]
	load.64*    %r14306 <- 0[%r14305]
	add.64*     %r14307 <- %r14306, $0
	load.64*    %r14308 <- 0[L]
	load.64*    %r14309 <- 16[%r14308]
	sub.64*     %r14310 <- %r14309, $16
	push.64*    %r14304
	push.64*    %r14307
	push.64*    %r14310
	call.32     %r14311 <- luaH_next
	store.32    %r14311 -> 0[more]
	load.32     %r14312 <- 0[more]
	br          %r14312, .L3173, .L3174

.L3173:
	load.64*    %r14313 <- 0[L]
	load.64*    %r14314 <- 0[L]
	load.64*    %r14315 <- 16[%r14314]
	add.64*     %r14316 <- %r14315, $16
	store.64*   %r14316 -> 16[%r14314]
	br          .L3175

.L3174:
	load.64*    %r14317 <- 0[L]
	load.64*    %r14318 <- 16[%r14317]
	cast.64     %r14319 <- (64) %r14318
	sub.64      %r14320 <- %r14319, $16
	ptrcast.64* %r14321 <- (64) %r14320
	store.64*   %r14321 -> 16[%r14317]
	br          .L3175

.L3175:
	load.32     %r14322 <- 0[more]
	phisrc.32   %phi587(return) <- %r14322
	br          .L3176

.L3176:
	phi.32      %r14323 <- %phi587(return)
	ret.32      %r14322


lua_concat:
.L3177:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[n]
	load.64*    %r14324 <- 0[L]
	load.32     %r14325 <- 0[n]
	setge.32    %r14326 <- %r14325, $2
	br          %r14326, .L3178, .L3179

.L3178:
	load.64*    %r14327 <- 0[L]
	load.64*    %r14328 <- 32[%r14327]
	load.64     %r14329 <- 120[%r14328]
	load.64*    %r14330 <- 0[L]
	load.64*    %r14331 <- 32[%r14330]
	load.64     %r14332 <- 112[%r14331]
	setae.32    %r14333 <- %r14329, %r14332
	br          %r14333, .L3180, .L3181

.L3180:
	load.64*    %r14334 <- 0[L]
	push.64*    %r14334
	call        luaC_step
	br          .L3181

.L3181:
	load.64*    %r14335 <- 0[L]
	load.32     %r14336 <- 0[n]
	load.64*    %r14337 <- 0[L]
	load.64*    %r14338 <- 16[%r14337]
	load.64*    %r14339 <- 0[L]
	load.64*    %r14340 <- 24[%r14339]
	sub.64      %r14341 <- %r14338, %r14340
	divs.64     %r14342 <- %r14341, $16
	scast.32    %r14343 <- (64) %r14342
	sub.32      %r14344 <- %r14343, $1
	push.64*    %r14335
	push.32     %r14336
	push.32     %r14344
	call        luaV_concat
	load.32     %r14345 <- 0[n]
	sub.32      %r14346 <- %r14345, $1
	scast.64    %r14347 <- (32) %r14346
	muls.64     %r14348 <- %r14347, $16
	load.64*    %r14349 <- 0[L]
	load.64*    %r14350 <- 16[%r14349]
	cast.64     %r14351 <- (64) %r14350
	sub.64      %r14352 <- %r14351, %r14348
	ptrcast.64* %r14353 <- (64) %r14352
	store.64*   %r14353 -> 16[%r14349]
	br          .L3182

.L3179:
	load.32     %r14354 <- 0[n]
	seteq.32    %r14355 <- %r14354, $0
	br          %r14355, .L3183, .L3184

.L3183:
	load.64*    %r14356 <- 0[L]
	load.64*    %r14357 <- 16[%r14356]
	store.64*   %r14357 -> 0[i_o]
	load.64*    %r14358 <- 0[L]
	symaddr.64* %r14359 <- <anon symbol:0x62d001484eb0>
	push.64*    %r14358
	push.64*    %r14359
	push.64     $0
	call.64*    %r14360 <- luaS_newlstr
	ptrcast.64* %r14361 <- (64) %r14360
	load.64*    %r14362 <- 0[i_o]
	store.64*   %r14361 -> 0[%r14362]
	load.64*    %r14363 <- 0[i_o]
	store.32    $4 -> 8[%r14363]
	load.64*    %r14364 <- 0[L]
	load.64*    %r14365 <- 0[L]
	load.64*    %r14366 <- 16[%r14365]
	add.64*     %r14367 <- %r14366, $16
	store.64*   %r14367 -> 16[%r14365]
	br          .L3184

.L3184:
	br          .L3182

.L3182:
	ret


lua_newuserdata:
.L3185:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[size]
	load.64*    %r14368 <- 0[L]
	load.64*    %r14369 <- 32[%r14368]
	load.64     %r14370 <- 120[%r14369]
	load.64*    %r14371 <- 0[L]
	load.64*    %r14372 <- 32[%r14371]
	load.64     %r14373 <- 112[%r14372]
	setae.32    %r14374 <- %r14370, %r14373
	br          %r14374, .L3186, .L3187

.L3186:
	load.64*    %r14375 <- 0[L]
	push.64*    %r14375
	call        luaC_step
	br          .L3187

.L3187:
	load.64*    %r14376 <- 0[L]
	load.64     %r14377 <- 0[size]
	load.64*    %r14378 <- 0[L]
	push.64*    %r14378
	call.64*    %r14379 <- getcurrenv
	push.64*    %r14376
	push.64     %r14377
	push.64*    %r14379
	call.64*    %r14380 <- luaS_newudata
	store.64*   %r14380 -> 0[u]
	load.64*    %r14381 <- 0[L]
	load.64*    %r14382 <- 16[%r14381]
	store.64*   %r14382 -> 0[i_o]
	load.64*    %r14383 <- 0[u]
	ptrcast.64* %r14384 <- (64) %r14383
	load.64*    %r14385 <- 0[i_o]
	store.64*   %r14384 -> 0[%r14385]
	load.64*    %r14386 <- 0[i_o]
	store.32    $7 -> 8[%r14386]
	load.64*    %r14387 <- 0[L]
	load.64*    %r14388 <- 0[L]
	load.64*    %r14389 <- 16[%r14388]
	add.64*     %r14390 <- %r14389, $16
	store.64*   %r14390 -> 16[%r14388]
	load.64*    %r14391 <- 0[u]
	add.64*     %r14392 <- %r14391, $40
	cast.64*    %r14393 <- (64) %r14392
	phisrc.64*  %phi588(return) <- %r14393
	br          .L3188

.L3188:
	phi.64*     %r14394 <- %phi588(return)
	ret.64*     %r14393


luaL_argerror:
.L3189:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[extramsg]
	load.64*    %r14395 <- 0[L]
	symaddr.64* %r14396 <- ar
	push.64*    %r14395
	push.32     $0
	push.64*    %r14396
	call.32     %r14397 <- lua_getstack
	br          %r14397, .L3191, .L3190

.L3190:
	load.64*    %r14398 <- 0[L]
	symaddr.64* %r14399 <- <anon symbol:0x62d001486e68>
	load.32     %r14400 <- 0[narg]
	load.64*    %r14401 <- 0[extramsg]
	push.64*    %r14398
	push.64*    %r14399
	push.32     %r14400
	push.64*    %r14401
	call.32     %r14402 <- luaL_error
	phisrc.32   %phi589(return) <- %r14402
	br          .L3192

.L3191:
	load.64*    %r14404 <- 0[L]
	symaddr.64* %r14405 <- <anon symbol:0x62d001487208>
	symaddr.64* %r14406 <- ar
	push.64*    %r14404
	push.64*    %r14405
	push.64*    %r14406
	call.32     %r14407 <- lua_getinfo
	load.64*    %r14408 <- 16[ar]
	symaddr.64* %r14409 <- <anon symbol:0x62d001487860>
	push.64*    %r14408
	push.64*    %r14409
	call.32     %r14410 <- strcmp
	seteq.32    %r14411 <- %r14410, $0
	br          %r14411, .L3193, .L3194

.L3193:
	load.32     %r14412 <- 0[narg]
	sub.32      %r14413 <- %r14412, $1
	store.32    %r14413 -> 0[narg]
	load.32     %r14414 <- 0[narg]
	seteq.32    %r14415 <- %r14414, $0
	br          %r14415, .L3195, .L3196

.L3195:
	load.64*    %r14416 <- 0[L]
	symaddr.64* %r14417 <- <anon symbol:0x62d001487c00>
	load.64*    %r14418 <- 8[ar]
	load.64*    %r14419 <- 0[extramsg]
	push.64*    %r14416
	push.64*    %r14417
	push.64*    %r14418
	push.64*    %r14419
	call.32     %r14420 <- luaL_error
	phisrc.32   %phi590(return) <- %r14420
	br          .L3192

.L3196:
	br          .L3194

.L3194:
	load.64*    %r14421 <- 8[ar]
	seteq.32    %r14422 <- %r14421, $0
	br          %r14422, .L3197, .L3198

.L3197:
	symaddr.64* %r14423 <- <anon symbol:0x62d001488258>
	store.64*   %r14423 -> 8[ar]
	br          .L3198

.L3198:
	load.64*    %r14424 <- 0[L]
	symaddr.64* %r14425 <- <anon symbol:0x62d0014885f8>
	load.32     %r14426 <- 0[narg]
	load.64*    %r14427 <- 8[ar]
	load.64*    %r14428 <- 0[extramsg]
	push.64*    %r14424
	push.64*    %r14425
	push.32     %r14426
	push.64*    %r14427
	push.64*    %r14428
	call.32     %r14429 <- luaL_error
	phisrc.32   %phi591(return) <- %r14429
	br          .L3192

.L3192:
	phi.32      %r14403 <- %phi589(return), %phi590(return), %phi591(return)
	ret.32      %r14403


luaL_typerror:
.L3199:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[tname]
	load.64*    %r14430 <- 0[L]
	symaddr.64* %r14431 <- <anon symbol:0x62d0014892a8>
	load.64*    %r14432 <- 0[tname]
	load.64*    %r14433 <- 0[L]
	load.64*    %r14434 <- 0[L]
	load.32     %r14435 <- 0[narg]
	push.64*    %r14434
	push.32     %r14435
	call.32     %r14436 <- lua_type
	push.64*    %r14433
	push.32     %r14436
	call.64*    %r14437 <- lua_typename
	push.64*    %r14430
	push.64*    %r14431
	push.64*    %r14432
	push.64*    %r14437
	call.64*    %r14438 <- lua_pushfstring
	store.64*   %r14438 -> 0[msg]
	load.64*    %r14439 <- 0[L]
	load.32     %r14440 <- 0[narg]
	load.64*    %r14441 <- 0[msg]
	push.64*    %r14439
	push.32     %r14440
	push.64*    %r14441
	call.32     %r14442 <- luaL_argerror
	phisrc.32   %phi592(return) <- %r14442
	br          .L3200

.L3200:
	phi.32      %r14443 <- %phi592(return)
	ret.32      %r14442


tag_error:
.L3201:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.32    %arg3 -> 0[tag]
	load.64*    %r14444 <- 0[L]
	load.32     %r14445 <- 0[narg]
	load.64*    %r14446 <- 0[L]
	load.32     %r14447 <- 0[tag]
	push.64*    %r14446
	push.32     %r14447
	call.64*    %r14448 <- lua_typename
	push.64*    %r14444
	push.32     %r14445
	push.64*    %r14448
	call.32     %r14449 <- luaL_typerror
	br          .L3202

.L3202:
	ret


luaL_where:
.L3203:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[level]
	load.64*    %r14450 <- 0[L]
	load.32     %r14451 <- 0[level]
	symaddr.64* %r14452 <- ar
	push.64*    %r14450
	push.32     %r14451
	push.64*    %r14452
	call.32     %r14453 <- lua_getstack
	br          %r14453, .L3204, .L3205

.L3204:
	load.64*    %r14454 <- 0[L]
	symaddr.64* %r14455 <- <anon symbol:0x62d001489818>
	symaddr.64* %r14456 <- ar
	push.64*    %r14454
	push.64*    %r14455
	push.64*    %r14456
	call.32     %r14457 <- lua_getinfo
	load.32     %r14458 <- 40[ar]
	setgt.32    %r14459 <- %r14458, $0
	br          %r14459, .L3206, .L3207

.L3206:
	load.64*    %r14460 <- 0[L]
	symaddr.64* %r14461 <- <anon symbol:0x62d001489e70>
	symaddr.64* %r14462 <- ar
	add.64*     %r14463 <- %r14462, $56
	load.32     %r14464 <- 40[ar]
	push.64*    %r14460
	push.64*    %r14461
	push.64*    %r14463
	push.32     %r14464
	call.64*    %r14465 <- lua_pushfstring
	br          .L3208

.L3207:
	br          .L3205

.L3205:
	load.64*    %r14466 <- 0[L]
	symaddr.64* %r14467 <- <anon symbol:0x62d0014965e8>
	push.64*    %r14466
	push.64*    %r14467
	push.64     $0
	call        lua_pushlstring
	br          .L3208

.L3208:
	ret


luaL_error:
.L3209:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fmt]
	symaddr.64* %r14468 <- fmt
	cast.64*    %r14469 <- (64) %r14468
	store.64*   %r14469 -> 0[argp]
	load.64*    %r14470 <- 0[L]
	push.64*    %r14470
	push.32     $1
	call        luaL_where
	load.64*    %r14471 <- 0[L]
	load.64*    %r14472 <- 0[fmt]
	load.64*    %r14473 <- 0[argp]
	push.64*    %r14471
	push.64*    %r14472
	push.64*    %r14473
	call.64*    %r14474 <- lua_pushvfstring
	load.64*    %r14475 <- 0[L]
	push.64*    %r14475
	push.32     $2
	call        lua_concat
	load.64*    %r14476 <- 0[L]
	push.64*    %r14476
	call.32     %r14477 <- lua_error
	phisrc.32   %phi593(return) <- %r14477
	br          .L3210

.L3210:
	phi.32      %r14478 <- %phi593(return)
	ret.32      %r14477


luaL_newmetatable:
.L3211:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[tname]
	load.64*    %r14479 <- 0[L]
	load.64*    %r14480 <- 0[tname]
	push.64*    %r14479
	push.32     $0xffffd8f0
	push.64*    %r14480
	call        lua_getfield
	load.64*    %r14481 <- 0[L]
	push.64*    %r14481
	push.32     $0xffffffff
	call.32     %r14482 <- lua_type
	seteq.32    %r14483 <- %r14482, $0
	br          %r14483, .L3213, .L3212

.L3212:
	phisrc.32   %phi594(return) <- $0
	br          .L3214

.L3213:
	load.64*    %r14485 <- 0[L]
	push.64*    %r14485
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14486 <- 0[L]
	push.64*    %r14486
	push.32     $0
	push.32     $0
	call        lua_createtable
	load.64*    %r14487 <- 0[L]
	push.64*    %r14487
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r14488 <- 0[L]
	load.64*    %r14489 <- 0[tname]
	push.64*    %r14488
	push.32     $0xffffd8f0
	push.64*    %r14489
	call        lua_setfield
	phisrc.32   %phi595(return) <- $1
	br          .L3214

.L3214:
	phi.32      %r14484 <- %phi594(return), %phi595(return)
	ret.32      %r14484


luaL_checkudata:
.L3215:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[tname]
	load.64*    %r14490 <- 0[L]
	load.32     %r14491 <- 0[ud]
	push.64*    %r14490
	push.32     %r14491
	call.64*    %r14492 <- lua_touserdata
	store.64*   %r14492 -> 0[p]
	load.64*    %r14493 <- 0[p]
	setne.32    %r14494 <- %r14493, $0
	br          %r14494, .L3216, .L3217

.L3216:
	load.64*    %r14495 <- 0[L]
	load.32     %r14496 <- 0[ud]
	push.64*    %r14495
	push.32     %r14496
	call.32     %r14497 <- lua_getmetatable
	br          %r14497, .L3218, .L3219

.L3218:
	load.64*    %r14498 <- 0[L]
	load.64*    %r14499 <- 0[tname]
	push.64*    %r14498
	push.32     $0xffffd8f0
	push.64*    %r14499
	call        lua_getfield
	load.64*    %r14500 <- 0[L]
	push.64*    %r14500
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r14501 <- lua_rawequal
	br          %r14501, .L3220, .L3221

.L3220:
	load.64*    %r14502 <- 0[L]
	push.64*    %r14502
	push.32     $0xfffffffd
	call        lua_settop
	load.64*    %r14503 <- 0[p]
	phisrc.64*  %phi596(return) <- %r14503
	br          .L3222

.L3221:
	br          .L3219

.L3219:
	br          .L3217

.L3217:
	load.64*    %r14505 <- 0[L]
	load.32     %r14506 <- 0[ud]
	load.64*    %r14507 <- 0[tname]
	push.64*    %r14505
	push.32     %r14506
	push.64*    %r14507
	call.32     %r14508 <- luaL_typerror
	phisrc.64*  %phi597(return) <- $0
	br          .L3222

.L3222:
	phi.64*     %r14504 <- %phi596(return), %phi597(return)
	ret.64*     %r14504


luaL_checkstack:
.L3223:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[space]
	store.64*   %arg3 -> 0[mes]
	load.64*    %r14509 <- 0[L]
	load.32     %r14510 <- 0[space]
	push.64*    %r14509
	push.32     %r14510
	call.32     %r14511 <- lua_checkstack
	br          %r14511, .L3225, .L3224

.L3224:
	load.64*    %r14512 <- 0[L]
	symaddr.64* %r14513 <- <anon symbol:0x62d001496b58>
	load.64*    %r14514 <- 0[mes]
	push.64*    %r14512
	push.64*    %r14513
	push.64*    %r14514
	call.32     %r14515 <- luaL_error
	br          .L3225

.L3225:
	ret


luaL_checktype:
.L3226:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.32    %arg3 -> 0[t]
	load.64*    %r14516 <- 0[L]
	load.32     %r14517 <- 0[narg]
	push.64*    %r14516
	push.32     %r14517
	call.32     %r14518 <- lua_type
	load.32     %r14519 <- 0[t]
	setne.32    %r14520 <- %r14518, %r14519
	br          %r14520, .L3227, .L3228

.L3227:
	load.64*    %r14521 <- 0[L]
	load.32     %r14522 <- 0[narg]
	load.32     %r14523 <- 0[t]
	push.64*    %r14521
	push.32     %r14522
	push.32     %r14523
	call        tag_error
	br          .L3228

.L3228:
	ret


luaL_checkany:
.L3229:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14524 <- 0[L]
	load.32     %r14525 <- 0[narg]
	push.64*    %r14524
	push.32     %r14525
	call.32     %r14526 <- lua_type
	seteq.32    %r14527 <- %r14526, $0xffffffff
	br          %r14527, .L3230, .L3231

.L3230:
	load.64*    %r14528 <- 0[L]
	load.32     %r14529 <- 0[narg]
	symaddr.64* %r14530 <- <anon symbol:0x62d001496ef8>
	push.64*    %r14528
	push.32     %r14529
	push.64*    %r14530
	call.32     %r14531 <- luaL_argerror
	br          .L3231

.L3231:
	ret


luaL_checklstring:
.L3232:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[len]
	load.64*    %r14532 <- 0[L]
	load.32     %r14533 <- 0[narg]
	load.64*    %r14534 <- 0[len]
	push.64*    %r14532
	push.32     %r14533
	push.64*    %r14534
	call.64*    %r14535 <- lua_tolstring
	store.64*   %r14535 -> 0[s]
	load.64*    %r14536 <- 0[s]
	br          %r14536, .L3234, .L3233

.L3233:
	load.64*    %r14537 <- 0[L]
	load.32     %r14538 <- 0[narg]
	push.64*    %r14537
	push.32     %r14538
	push.32     $4
	call        tag_error
	br          .L3234

.L3234:
	load.64*    %r14539 <- 0[s]
	phisrc.64*  %phi598(return) <- %r14539
	br          .L3235

.L3235:
	phi.64*     %r14540 <- %phi598(return)
	ret.64*     %r14539


luaL_optlstring:
.L3236:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[def]
	store.64*   %arg4 -> 0[len]
	load.64*    %r14541 <- 0[L]
	load.32     %r14542 <- 0[narg]
	push.64*    %r14541
	push.32     %r14542
	call.32     %r14543 <- lua_type
	setle.32    %r14544 <- %r14543, $0
	br          %r14544, .L3237, .L3238

.L3237:
	load.64*    %r14545 <- 0[len]
	br          %r14545, .L3239, .L3240

.L3239:
	load.64*    %r14546 <- 0[def]
	push.64*    %r14546
	call.64     %r14547 <- strlen
	load.64*    %r14548 <- 0[def]
	select.64   %r14549 <- %r14548, %r14547, $0
	load.64*    %r14550 <- 0[len]
	store.64    %r14549 -> 0[%r14550]
	br          .L3240

.L3240:
	load.64*    %r14551 <- 0[def]
	phisrc.64*  %phi599(return) <- %r14551
	br          .L3241

.L3238:
	load.64*    %r14553 <- 0[L]
	load.32     %r14554 <- 0[narg]
	load.64*    %r14555 <- 0[len]
	push.64*    %r14553
	push.32     %r14554
	push.64*    %r14555
	call.64*    %r14556 <- luaL_checklstring
	phisrc.64*  %phi600(return) <- %r14556
	br          .L3241

.L3241:
	phi.64*     %r14552 <- %phi599(return), %phi600(return)
	ret.64*     %r14552


luaL_checknumber:
.L3243:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14557 <- 0[L]
	load.32     %r14558 <- 0[narg]
	push.64*    %r14557
	push.32     %r14558
	call.f64    %r14559 <- lua_tonumber
	store.f64   %r14559 -> 0[d]
	load.f64    %r14560 <- 0[d]
	set.f64     %r14561 <- 0.000000
	seteq.32    %r14562 <- %r14560, %r14561
	br          %r14562, .L3246, .L3245

.L3246:
	load.64*    %r14563 <- 0[L]
	load.32     %r14564 <- 0[narg]
	push.64*    %r14563
	push.32     %r14564
	call.32     %r14565 <- lua_isnumber
	br          %r14565, .L3245, .L3244

.L3244:
	load.64*    %r14566 <- 0[L]
	load.32     %r14567 <- 0[narg]
	push.64*    %r14566
	push.32     %r14567
	push.32     $3
	call        tag_error
	br          .L3245

.L3245:
	load.f64    %r14568 <- 0[d]
	phisrc.f64  %phi601(return) <- %r14568
	br          .L3247

.L3247:
	phi.f64     %r14569 <- %phi601(return)
	ret.f64     %r14568


luaL_checkinteger:
.L3248:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14570 <- 0[L]
	load.32     %r14571 <- 0[narg]
	push.64*    %r14570
	push.32     %r14571
	call.64     %r14572 <- lua_tointeger
	store.64    %r14572 -> 0[d]
	load.64     %r14573 <- 0[d]
	seteq.32    %r14574 <- %r14573, $0
	br          %r14574, .L3251, .L3250

.L3251:
	load.64*    %r14575 <- 0[L]
	load.32     %r14576 <- 0[narg]
	push.64*    %r14575
	push.32     %r14576
	call.32     %r14577 <- lua_isnumber
	br          %r14577, .L3250, .L3249

.L3249:
	load.64*    %r14578 <- 0[L]
	load.32     %r14579 <- 0[narg]
	push.64*    %r14578
	push.32     %r14579
	push.32     $3
	call        tag_error
	br          .L3250

.L3250:
	load.64     %r14580 <- 0[d]
	phisrc.64   %phi602(return) <- %r14580
	br          .L3252

.L3252:
	phi.64      %r14581 <- %phi602(return)
	ret.64      %r14580


luaL_optinteger:
.L3253:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64    %arg3 -> 0[def]
	load.64*    %r14582 <- 0[L]
	load.32     %r14583 <- 0[narg]
	push.64*    %r14582
	push.32     %r14583
	call.32     %r14584 <- lua_type
	setle.32    %r14585 <- %r14584, $0
	br          %r14585, .L3255, .L3256

.L3255:
	load.64     %r14586 <- 0[def]
	phisrc.64   %phi603 <- %r14586
	br          .L3257

.L3256:
	load.64*    %r14587 <- 0[L]
	load.32     %r14588 <- 0[narg]
	push.64*    %r14587
	push.32     %r14588
	call.64     %r14589 <- luaL_checkinteger
	phisrc.64   %phi604 <- %r14589
	br          .L3257

.L3257:
	phi.64      %r14590 <- %phi603, %phi604
	phisrc.64   %phi605(return) <- %r14590
	br          .L3254

.L3254:
	phi.64      %r14591 <- %phi605(return)
	ret.64      %r14590


luaL_getmetafield:
.L3258:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[obj]
	store.64*   %arg3 -> 0[event]
	load.64*    %r14592 <- 0[L]
	load.32     %r14593 <- 0[obj]
	push.64*    %r14592
	push.32     %r14593
	call.32     %r14594 <- lua_getmetatable
	br          %r14594, .L3260, .L3259

.L3259:
	phisrc.32   %phi606(return) <- $0
	br          .L3261

.L3260:
	load.64*    %r14596 <- 0[L]
	load.64*    %r14597 <- 0[event]
	push.64*    %r14596
	push.64*    %r14597
	call        lua_pushstring
	load.64*    %r14598 <- 0[L]
	push.64*    %r14598
	push.32     $0xfffffffe
	call        lua_rawget
	load.64*    %r14599 <- 0[L]
	push.64*    %r14599
	push.32     $0xffffffff
	call.32     %r14600 <- lua_type
	seteq.32    %r14601 <- %r14600, $0
	br          %r14601, .L3262, .L3263

.L3262:
	load.64*    %r14602 <- 0[L]
	push.64*    %r14602
	push.32     $0xfffffffd
	call        lua_settop
	phisrc.32   %phi607(return) <- $0
	br          .L3261

.L3263:
	load.64*    %r14603 <- 0[L]
	push.64*    %r14603
	push.32     $0xfffffffe
	call        lua_remove
	phisrc.32   %phi608(return) <- $1
	br          .L3261

.L3261:
	phi.32      %r14595 <- %phi606(return), %phi607(return), %phi608(return)
	ret.32      %r14595


luaL_register:
.L3265:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[libname]
	store.64*   %arg3 -> 0[l]
	load.64*    %r14604 <- 0[L]
	load.64*    %r14605 <- 0[libname]
	load.64*    %r14606 <- 0[l]
	push.64*    %r14604
	push.64*    %r14605
	push.64*    %r14606
	push.32     $0
	call        luaI_openlib
	br          .L3266

.L3266:
	ret


libsize:
.L3267:
	<entry-point>
	store.64*   %arg1 -> 0[l]
	store.32    $0 -> 0[size]
	br          .L3271

.L3271:
	load.64*    %r14607 <- 0[l]
	load.64*    %r14608 <- 0[%r14607]
	br          %r14608, .L3268, .L3270

.L3268:
	load.32     %r14609 <- 0[size]
	add.32      %r14610 <- %r14609, $1
	store.32    %r14610 -> 0[size]
	br          .L3269

.L3269:
	load.64*    %r14611 <- 0[l]
	add.64*     %r14612 <- %r14611, $16
	store.64*   %r14612 -> 0[l]
	br          .L3271

.L3270:
	load.32     %r14613 <- 0[size]
	phisrc.32   %phi609(return) <- %r14613
	br          .L3272

.L3272:
	phi.32      %r14614 <- %phi609(return)
	ret.32      %r14613


luaI_openlib:
.L3273:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[libname]
	store.64*   %arg3 -> 0[l]
	store.32    %arg4 -> 0[nup]
	load.64*    %r14615 <- 0[libname]
	br          %r14615, .L3274, .L3275

.L3274:
	load.64*    %r14616 <- 0[l]
	push.64*    %r14616
	call.32     %r14617 <- libsize
	store.32    %r14617 -> 0[size]
	load.64*    %r14618 <- 0[L]
	symaddr.64* %r14619 <- <anon symbol:0x62d001485fe8>
	push.64*    %r14618
	push.32     $0xffffd8f0
	push.64*    %r14619
	push.32     $1
	call.64*    %r14620 <- luaL_findtable
	load.64*    %r14621 <- 0[L]
	load.64*    %r14622 <- 0[libname]
	push.64*    %r14621
	push.32     $0xffffffff
	push.64*    %r14622
	call        lua_getfield
	load.64*    %r14623 <- 0[L]
	push.64*    %r14623
	push.32     $0xffffffff
	call.32     %r14624 <- lua_type
	seteq.32    %r14625 <- %r14624, $5
	br          %r14625, .L3277, .L3276

.L3276:
	load.64*    %r14626 <- 0[L]
	push.64*    %r14626
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14627 <- 0[L]
	load.64*    %r14628 <- 0[libname]
	load.32     %r14629 <- 0[size]
	push.64*    %r14627
	push.32     $0xffffd8ee
	push.64*    %r14628
	push.32     %r14629
	call.64*    %r14630 <- luaL_findtable
	setne.32    %r14631 <- %r14630, $0
	br          %r14631, .L3278, .L3279

.L3278:
	load.64*    %r14632 <- 0[L]
	symaddr.64* %r14633 <- <anon symbol:0x62d001486388>
	load.64*    %r14634 <- 0[libname]
	push.64*    %r14632
	push.64*    %r14633
	push.64*    %r14634
	call.32     %r14635 <- luaL_error
	br          .L3279

.L3279:
	load.64*    %r14636 <- 0[L]
	push.64*    %r14636
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r14637 <- 0[L]
	load.64*    %r14638 <- 0[libname]
	push.64*    %r14637
	push.32     $0xfffffffd
	push.64*    %r14638
	call        lua_setfield
	br          .L3277

.L3277:
	load.64*    %r14639 <- 0[L]
	push.64*    %r14639
	push.32     $0xfffffffe
	call        lua_remove
	load.64*    %r14640 <- 0[L]
	load.32     %r14641 <- 0[nup]
	add.32      %r14642 <- %r14641, $1
	neg.32      %r14643 <- %r14642
	push.64*    %r14640
	push.32     %r14643
	call        lua_insert
	br          .L3275

.L3275:
	br          .L3283

.L3283:
	load.64*    %r14644 <- 0[l]
	load.64*    %r14645 <- 0[%r14644]
	br          %r14645, .L3280, .L3282

.L3280:
	store.32    $0 -> 0[i]
	br          .L3287

.L3287:
	load.32     %r14646 <- 0[i]
	load.32     %r14647 <- 0[nup]
	setlt.32    %r14648 <- %r14646, %r14647
	br          %r14648, .L3284, .L3286

.L3284:
	load.64*    %r14649 <- 0[L]
	load.32     %r14650 <- 0[nup]
	neg.32      %r14651 <- %r14650
	push.64*    %r14649
	push.32     %r14651
	call        lua_pushvalue
	br          .L3285

.L3285:
	load.32     %r14652 <- 0[i]
	add.32      %r14653 <- %r14652, $1
	store.32    %r14653 -> 0[i]
	br          .L3287

.L3286:
	load.64*    %r14654 <- 0[L]
	load.64*    %r14655 <- 0[l]
	load.64*    %r14656 <- 8[%r14655]
	load.32     %r14657 <- 0[nup]
	push.64*    %r14654
	push.64*    %r14656
	push.32     %r14657
	call        lua_pushcclosure
	load.64*    %r14658 <- 0[L]
	load.32     %r14659 <- 0[nup]
	add.32      %r14660 <- %r14659, $2
	neg.32      %r14661 <- %r14660
	load.64*    %r14662 <- 0[l]
	load.64*    %r14663 <- 0[%r14662]
	push.64*    %r14658
	push.32     %r14661
	push.64*    %r14663
	call        lua_setfield
	br          .L3281

.L3281:
	load.64*    %r14664 <- 0[l]
	add.64*     %r14665 <- %r14664, $16
	store.64*   %r14665 -> 0[l]
	br          .L3283

.L3282:
	load.64*    %r14666 <- 0[L]
	load.32     %r14667 <- 0[nup]
	neg.32      %r14668 <- %r14667
	sub.32      %r14669 <- %r14668, $1
	push.64*    %r14666
	push.32     %r14669
	call        lua_settop
	br          .L3288

.L3288:
	ret


luaL_findtable:
.L3289:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[fname]
	store.32    %arg4 -> 0[szhint]
	load.64*    %r14670 <- 0[L]
	load.32     %r14671 <- 0[idx]
	push.64*    %r14670
	push.32     %r14671
	call        lua_pushvalue
	br          .L3290

.L3290:
	load.64*    %r14672 <- 0[fname]
	push.64*    %r14672
	push.32     $46
	call.64*    %r14673 <- strchr
	store.64*   %r14673 -> 0[e]
	load.64*    %r14674 <- 0[e]
	seteq.32    %r14675 <- %r14674, $0
	br          %r14675, .L3293, .L3294

.L3293:
	load.64*    %r14676 <- 0[fname]
	load.64*    %r14677 <- 0[fname]
	push.64*    %r14677
	call.64     %r14678 <- strlen
	add.64*     %r14679 <- %r14676, %r14678
	store.64*   %r14679 -> 0[e]
	br          .L3294

.L3294:
	load.64*    %r14680 <- 0[L]
	load.64*    %r14681 <- 0[fname]
	load.64*    %r14682 <- 0[e]
	load.64*    %r14683 <- 0[fname]
	sub.64      %r14684 <- %r14682, %r14683
	scast.64    %r14685 <- (64) %r14684
	push.64*    %r14680
	push.64*    %r14681
	push.64     %r14685
	call        lua_pushlstring
	load.64*    %r14686 <- 0[L]
	push.64*    %r14686
	push.32     $0xfffffffe
	call        lua_rawget
	load.64*    %r14687 <- 0[L]
	push.64*    %r14687
	push.32     $0xffffffff
	call.32     %r14688 <- lua_type
	seteq.32    %r14689 <- %r14688, $0
	br          %r14689, .L3295, .L3296

.L3295:
	load.64*    %r14690 <- 0[L]
	push.64*    %r14690
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14691 <- 0[L]
	load.32     %r14692 <- 0[szhint]
	load.64*    %r14693 <- 0[e]
	load.8      %r14694 <- 0[%r14693]
	scast.32    %r14695 <- (8) %r14694
	seteq.32    %r14696 <- %r14695, $46
	select.32   %r14697 <- %r14696, $1, %r14692
	push.64*    %r14691
	push.32     $0
	push.32     %r14697
	call        lua_createtable
	load.64*    %r14698 <- 0[L]
	load.64*    %r14699 <- 0[fname]
	load.64*    %r14700 <- 0[e]
	load.64*    %r14701 <- 0[fname]
	sub.64      %r14702 <- %r14700, %r14701
	scast.64    %r14703 <- (64) %r14702
	push.64*    %r14698
	push.64*    %r14699
	push.64     %r14703
	call        lua_pushlstring
	load.64*    %r14704 <- 0[L]
	push.64*    %r14704
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r14705 <- 0[L]
	push.64*    %r14705
	push.32     $0xfffffffc
	call        lua_settable
	br          .L3297

.L3296:
	load.64*    %r14706 <- 0[L]
	push.64*    %r14706
	push.32     $0xffffffff
	call.32     %r14707 <- lua_type
	seteq.32    %r14708 <- %r14707, $5
	br          %r14708, .L3299, .L3298

.L3298:
	load.64*    %r14709 <- 0[L]
	push.64*    %r14709
	push.32     $0xfffffffd
	call        lua_settop
	load.64*    %r14710 <- 0[fname]
	phisrc.64*  %phi610(return) <- %r14710
	br          .L3300

.L3299:
	br          .L3297

.L3297:
	load.64*    %r14712 <- 0[L]
	push.64*    %r14712
	push.32     $0xfffffffe
	call        lua_remove
	load.64*    %r14713 <- 0[e]
	add.64*     %r14714 <- %r14713, $1
	store.64*   %r14714 -> 0[fname]
	br          .L3291

.L3291:
	load.64*    %r14715 <- 0[e]
	load.8      %r14716 <- 0[%r14715]
	scast.32    %r14717 <- (8) %r14716
	seteq.32    %r14718 <- %r14717, $46
	br          %r14718, .L3290, .L3292

.L3292:
	phisrc.64*  %phi611(return) <- $0
	br          .L3300

.L3300:
	phi.64*     %r14711 <- %phi610(return), %phi611(return)
	ret.64*     %r14711


emptybuffer:
.L3301:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14719 <- 0[B]
	load.64*    %r14720 <- 0[%r14719]
	load.64*    %r14721 <- 0[B]
	add.64*     %r14722 <- %r14721, $24
	sub.64      %r14723 <- %r14720, %r14722
	scast.64    %r14724 <- (64) %r14723
	store.64    %r14724 -> 0[l]
	load.64     %r14725 <- 0[l]
	seteq.32    %r14726 <- %r14725, $0
	br          %r14726, .L3302, .L3303

.L3302:
	phisrc.32   %phi612(return) <- $0
	br          .L3304

.L3303:
	load.64*    %r14728 <- 0[B]
	load.64*    %r14729 <- 16[%r14728]
	load.64*    %r14730 <- 0[B]
	add.64*     %r14731 <- %r14730, $24
	load.64     %r14732 <- 0[l]
	push.64*    %r14729
	push.64*    %r14731
	push.64     %r14732
	call        lua_pushlstring
	load.64*    %r14733 <- 0[B]
	add.64*     %r14734 <- %r14733, $24
	load.64*    %r14735 <- 0[B]
	store.64*   %r14734 -> 0[%r14735]
	load.64*    %r14736 <- 0[B]
	load.32     %r14737 <- 8[%r14736]
	add.32      %r14738 <- %r14737, $1
	store.32    %r14738 -> 8[%r14736]
	phisrc.32   %phi613(return) <- $1
	br          .L3304

.L3304:
	phi.32      %r14727 <- %phi612(return), %phi613(return)
	ret.32      %r14727


adjuststack:
.L3306:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14739 <- 0[B]
	load.32     %r14740 <- 8[%r14739]
	setgt.32    %r14741 <- %r14740, $1
	br          %r14741, .L3307, .L3308

.L3307:
	load.64*    %r14742 <- 0[B]
	load.64*    %r14743 <- 16[%r14742]
	store.64*   %r14743 -> 0[L]
	store.32    $1 -> 0[toget]
	load.64*    %r14744 <- 0[L]
	push.64*    %r14744
	push.32     $0xffffffff
	call.64     %r14745 <- lua_objlen
	store.64    %r14745 -> 0[toplen]
	br          .L3309

.L3309:
	load.64*    %r14746 <- 0[L]
	load.32     %r14747 <- 0[toget]
	add.32      %r14748 <- %r14747, $1
	neg.32      %r14749 <- %r14748
	push.64*    %r14746
	push.32     %r14749
	call.64     %r14750 <- lua_objlen
	store.64    %r14750 -> 0[l]
	load.64*    %r14751 <- 0[B]
	load.32     %r14752 <- 8[%r14751]
	load.32     %r14753 <- 0[toget]
	sub.32      %r14754 <- %r14752, %r14753
	add.32      %r14755 <- %r14754, $1
	setge.32    %r14756 <- %r14755, $10
	load.64     %r14757 <- 0[toplen]
	load.64     %r14758 <- 0[l]
	seta.32     %r14759 <- %r14757, %r14758
	or-bool.32  %r14760 <- %r14756, %r14759
	br          %r14760, .L3312, .L3313

.L3312:
	load.64     %r14761 <- 0[l]
	load.64     %r14762 <- 0[toplen]
	cast.64     %r14763 <- (64) %r14762
	add.64      %r14764 <- %r14763, %r14761
	cast.64     %r14765 <- (64) %r14764
	store.64    %r14765 -> 0[toplen]
	load.32     %r14766 <- 0[toget]
	add.32      %r14767 <- %r14766, $1
	store.32    %r14767 -> 0[toget]
	br          .L3314

.L3313:
	br          .L3311

.L3314:
	br          .L3310

.L3310:
	load.32     %r14768 <- 0[toget]
	load.64*    %r14769 <- 0[B]
	load.32     %r14770 <- 8[%r14769]
	setlt.32    %r14771 <- %r14768, %r14770
	br          %r14771, .L3309, .L3311

.L3311:
	load.64*    %r14772 <- 0[L]
	load.32     %r14773 <- 0[toget]
	push.64*    %r14772
	push.32     %r14773
	call        lua_concat
	load.64*    %r14774 <- 0[B]
	load.32     %r14775 <- 8[%r14774]
	load.32     %r14776 <- 0[toget]
	sub.32      %r14777 <- %r14775, %r14776
	add.32      %r14778 <- %r14777, $1
	load.64*    %r14779 <- 0[B]
	store.32    %r14778 -> 8[%r14779]
	br          .L3308

.L3308:
	ret


luaL_prepbuffer:
.L3315:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14780 <- 0[B]
	push.64*    %r14780
	call.32     %r14781 <- emptybuffer
	br          %r14781, .L3316, .L3317

.L3316:
	load.64*    %r14782 <- 0[B]
	push.64*    %r14782
	call        adjuststack
	br          .L3317

.L3317:
	load.64*    %r14783 <- 0[B]
	add.64*     %r14784 <- %r14783, $24
	phisrc.64*  %phi614(return) <- %r14784
	br          .L3318

.L3318:
	phi.64*     %r14785 <- %phi614(return)
	ret.64*     %r14784


luaL_addlstring:
.L3319:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	store.64*   %arg2 -> 0[s]
	store.64    %arg3 -> 0[l]
	br          .L3323

.L3323:
	load.64     %r14786 <- 0[l]
	sub.64      %r14787 <- %r14786, $1
	store.64    %r14787 -> 0[l]
	br          %r14786, .L3320, .L3322

.L3320:
	load.64*    %r14788 <- 0[B]
	load.64*    %r14789 <- 0[%r14788]
	load.64*    %r14790 <- 0[B]
	add.64*     %r14791 <- %r14790, $24
	add.64*     %r14792 <- %r14791, $0x2000
	setb.32     %r14793 <- %r14789, %r14792
	br          %r14793, .L3324, .L3325

.L3324:
	phisrc.32   %phi615 <- $1
	br          .L3326

.L3325:
	load.64*    %r14794 <- 0[B]
	push.64*    %r14794
	call.64*    %r14795 <- luaL_prepbuffer
	phisrc.32   %phi616 <- %r14795
	br          .L3326

.L3326:
	phi.32      %r14796 <- %phi615, %phi616
	load.64*    %r14797 <- 0[s]
	add.64*     %r14798 <- %r14797, $1
	store.64*   %r14798 -> 0[s]
	load.8      %r14799 <- 0[%r14797]
	scast.8     %r14800 <- (8) %r14799
	load.64*    %r14801 <- 0[B]
	load.64*    %r14802 <- 0[%r14801]
	add.64*     %r14803 <- %r14802, $1
	store.64*   %r14803 -> 0[%r14801]
	store.8     %r14800 -> 0[%r14802]
	br          .L3321

.L3321:
	br          .L3323

.L3322:
	ret


luaL_pushresult:
.L3327:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14804 <- 0[B]
	push.64*    %r14804
	call.32     %r14805 <- emptybuffer
	load.64*    %r14806 <- 0[B]
	load.64*    %r14807 <- 16[%r14806]
	load.64*    %r14808 <- 0[B]
	load.32     %r14809 <- 8[%r14808]
	push.64*    %r14807
	push.32     %r14809
	call        lua_concat
	load.64*    %r14810 <- 0[B]
	store.32    $1 -> 8[%r14810]
	br          .L3328

.L3328:
	ret


luaL_addvalue:
.L3329:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14811 <- 0[B]
	load.64*    %r14812 <- 16[%r14811]
	store.64*   %r14812 -> 0[L]
	load.64*    %r14813 <- 0[L]
	symaddr.64* %r14814 <- vl
	push.64*    %r14813
	push.32     $0xffffffff
	push.64*    %r14814
	call.64*    %r14815 <- lua_tolstring
	store.64*   %r14815 -> 0[s]
	load.64     %r14816 <- 0[vl]
	load.64*    %r14817 <- 0[B]
	load.64*    %r14818 <- 0[%r14817]
	load.64*    %r14819 <- 0[B]
	add.64*     %r14820 <- %r14819, $24
	sub.64      %r14821 <- %r14818, %r14820
	sub.64      %r14822 <- $0x2000, %r14821
	scast.64    %r14823 <- (64) %r14822
	setbe.32    %r14824 <- %r14816, %r14823
	br          %r14824, .L3330, .L3331

.L3330:
	load.64*    %r14825 <- 0[B]
	load.64*    %r14826 <- 0[%r14825]
	cast.64*    %r14827 <- (64) %r14826
	load.64*    %r14828 <- 0[s]
	cast.64*    %r14829 <- (64) %r14828
	load.64     %r14830 <- 0[vl]
	push.64*    %r14827
	push.64*    %r14829
	push.64     %r14830
	call.64*    %r14831 <- memcpy
	load.64     %r14832 <- 0[vl]
	load.64*    %r14833 <- 0[B]
	load.64*    %r14834 <- 0[%r14833]
	cast.64     %r14835 <- (64) %r14834
	add.64      %r14836 <- %r14835, %r14832
	ptrcast.64* %r14837 <- (64) %r14836
	store.64*   %r14837 -> 0[%r14833]
	load.64*    %r14838 <- 0[L]
	push.64*    %r14838
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3332

.L3331:
	load.64*    %r14839 <- 0[B]
	push.64*    %r14839
	call.32     %r14840 <- emptybuffer
	br          %r14840, .L3333, .L3334

.L3333:
	load.64*    %r14841 <- 0[L]
	push.64*    %r14841
	push.32     $0xfffffffe
	call        lua_insert
	br          .L3334

.L3334:
	load.64*    %r14842 <- 0[B]
	load.32     %r14843 <- 8[%r14842]
	add.32      %r14844 <- %r14843, $1
	store.32    %r14844 -> 8[%r14842]
	load.64*    %r14845 <- 0[B]
	push.64*    %r14845
	call        adjuststack
	br          .L3332

.L3332:
	ret


luaL_buffinit:
.L3335:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[B]
	load.64*    %r14846 <- 0[L]
	load.64*    %r14847 <- 0[B]
	store.64*   %r14846 -> 16[%r14847]
	load.64*    %r14848 <- 0[B]
	add.64*     %r14849 <- %r14848, $24
	load.64*    %r14850 <- 0[B]
	store.64*   %r14849 -> 0[%r14850]
	load.64*    %r14851 <- 0[B]
	store.32    $0 -> 8[%r14851]
	br          .L3336

.L3336:
	ret


getF:
.L3337:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[size]
	load.64*    %r14852 <- 0[ud]
	ptrcast.64* %r14853 <- (64) %r14852
	store.64*   %r14853 -> 0[lf]
	load.64*    %r14854 <- 0[L]
	load.64*    %r14855 <- 0[lf]
	load.32     %r14856 <- 0[%r14855]
	br          %r14856, .L3338, .L3339

.L3338:
	load.64*    %r14857 <- 0[lf]
	store.32    $0 -> 0[%r14857]
	load.64*    %r14858 <- 0[size]
	store.64    $1 -> 0[%r14858]
	symaddr.64* %r14859 <- <anon symbol:0x62d00149bc00>
	phisrc.64*  %phi617(return) <- %r14859
	br          .L3340

.L3339:
	load.64*    %r14861 <- 0[lf]
	load.64*    %r14862 <- 8[%r14861]
	push.64*    %r14862
	call.32     %r14863 <- feof
	br          %r14863, .L3341, .L3342

.L3341:
	phisrc.64*  %phi618(return) <- $0
	br          .L3340

.L3342:
	load.64*    %r14864 <- 0[lf]
	add.64*     %r14865 <- %r14864, $16
	cast.64*    %r14866 <- (64) %r14865
	load.64*    %r14867 <- 0[lf]
	load.64*    %r14868 <- 8[%r14867]
	push.64*    %r14866
	push.64     $1
	push.64     $0x2000
	push.64*    %r14868
	call.64     %r14869 <- fread
	load.64*    %r14870 <- 0[size]
	store.64    %r14869 -> 0[%r14870]
	load.64*    %r14871 <- 0[lf]
	add.64*     %r14872 <- %r14871, $16
	load.64*    %r14873 <- 0[size]
	load.64     %r14874 <- 0[%r14873]
	seta.32     %r14875 <- %r14874, $0
	select.64*  %r14876 <- %r14875, %r14872, $0
	phisrc.64*  %phi619(return) <- %r14876
	br          .L3340

.L3340:
	phi.64*     %r14860 <- %phi617(return), %phi618(return), %phi619(return)
	ret.64*     %r14860


errfile:
.L3343:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.32    %arg3 -> 0[fnameindex]
	call.64*    %r14877 <- __errno_location
	load.32     %r14878 <- 0[%r14877]
	push.32     %r14878
	call.64*    %r14879 <- strerror
	store.64*   %r14879 -> 0[serr]
	load.64*    %r14880 <- 0[L]
	load.32     %r14881 <- 0[fnameindex]
	push.64*    %r14880
	push.32     %r14881
	push.64*    $0
	call.64*    %r14882 <- lua_tolstring
	add.64*     %r14883 <- %r14882, $1
	store.64*   %r14883 -> 0[filename]
	load.64*    %r14884 <- 0[L]
	symaddr.64* %r14885 <- <anon symbol:0x62d00149cf08>
	load.64*    %r14886 <- 0[what]
	load.64*    %r14887 <- 0[filename]
	load.64*    %r14888 <- 0[serr]
	push.64*    %r14884
	push.64*    %r14885
	push.64*    %r14886
	push.64*    %r14887
	push.64*    %r14888
	call.64*    %r14889 <- lua_pushfstring
	load.64*    %r14890 <- 0[L]
	load.32     %r14891 <- 0[fnameindex]
	push.64*    %r14890
	push.32     %r14891
	call        lua_remove
	phisrc.32   %phi620(return) <- $6
	br          .L3344

.L3344:
	phi.32      %r14892 <- %phi620(return)
	ret.32      $6


luaL_loadfile:
.L3345:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[filename]
	load.64*    %r14893 <- 0[L]
	push.64*    %r14893
	call.32     %r14894 <- lua_gettop
	add.32      %r14895 <- %r14894, $1
	store.32    %r14895 -> 0[fnameindex]
	store.32    $0 -> 0[lf]
	load.64*    %r14896 <- 0[filename]
	seteq.32    %r14897 <- %r14896, $0
	br          %r14897, .L3346, .L3347

.L3346:
	load.64*    %r14898 <- 0[L]
	symaddr.64* %r14899 <- <anon symbol:0x62d00149d390>
	push.64*    %r14898
	push.64*    %r14899
	push.64     $6
	call        lua_pushlstring
	load.64*    %r14900 <- 0[stdin]
	store.64*   %r14900 -> 8[lf]
	br          .L3348

.L3347:
	load.64*    %r14901 <- 0[L]
	symaddr.64* %r14902 <- <anon symbol:0x62d00149d9e8>
	load.64*    %r14903 <- 0[filename]
	push.64*    %r14901
	push.64*    %r14902
	push.64*    %r14903
	call.64*    %r14904 <- lua_pushfstring
	load.64*    %r14905 <- 0[filename]
	symaddr.64* %r14906 <- <anon symbol:0x62d00149de70>
	push.64*    %r14905
	push.64*    %r14906
	call.64*    %r14907 <- fopen
	store.64*   %r14907 -> 8[lf]
	load.64*    %r14908 <- 8[lf]
	seteq.32    %r14909 <- %r14908, $0
	br          %r14909, .L3349, .L3350

.L3349:
	load.64*    %r14910 <- 0[L]
	symaddr.64* %r14911 <- <anon symbol:0x62d00149e2f8>
	load.32     %r14912 <- 0[fnameindex]
	push.64*    %r14910
	push.64*    %r14911
	push.32     %r14912
	call.32     %r14913 <- errfile
	phisrc.32   %phi621(return) <- %r14913
	br          .L3351

.L3350:
	br          .L3348

.L3348:
	load.64*    %r14915 <- 8[lf]
	push.64*    %r14915
	call.32     %r14916 <- _IO_getc
	store.32    %r14916 -> 0[c]
	load.32     %r14917 <- 0[c]
	seteq.32    %r14918 <- %r14917, $35
	br          %r14918, .L3352, .L3353

.L3352:
	store.32    $1 -> 0[lf]
	br          .L3357

.L3357:
	load.64*    %r14919 <- 8[lf]
	push.64*    %r14919
	call.32     %r14920 <- _IO_getc
	store.32    %r14920 -> 0[c]
	setne.32    %r14921 <- %r14920, $0xffffffff
	load.32     %r14922 <- 0[c]
	setne.32    %r14923 <- %r14922, $10
	and-bool.32 %r14924 <- %r14921, %r14923
	br          %r14924, .L3354, .L3356

.L3354:
	br          .L3355

.L3355:
	br          .L3357

.L3356:
	load.32     %r14925 <- 0[c]
	seteq.32    %r14926 <- %r14925, $10
	br          %r14926, .L3358, .L3359

.L3358:
	load.64*    %r14927 <- 8[lf]
	push.64*    %r14927
	call.32     %r14928 <- _IO_getc
	store.32    %r14928 -> 0[c]
	br          .L3359

.L3359:
	br          .L3353

.L3353:
	load.32     %r14929 <- 0[c]
	load.8      %r14930 <- 0["\33Lua"]
	scast.32    %r14931 <- (8) %r14930
	seteq.32    %r14932 <- %r14929, %r14931
	load.64*    %r14933 <- 0[filename]
	and-bool.32 %r14934 <- %r14932, %r14933
	br          %r14934, .L3360, .L3361

.L3360:
	load.64*    %r14935 <- 0[filename]
	symaddr.64* %r14936 <- <anon symbol:0x62d0014a0fe0>
	load.64*    %r14937 <- 8[lf]
	push.64*    %r14935
	push.64*    %r14936
	push.64*    %r14937
	call.64*    %r14938 <- freopen
	store.64*   %r14938 -> 8[lf]
	load.64*    %r14939 <- 8[lf]
	seteq.32    %r14940 <- %r14939, $0
	br          %r14940, .L3362, .L3363

.L3362:
	load.64*    %r14941 <- 0[L]
	symaddr.64* %r14942 <- <anon symbol:0x62d0014a1550>
	load.32     %r14943 <- 0[fnameindex]
	push.64*    %r14941
	push.64*    %r14942
	push.32     %r14943
	call.32     %r14944 <- errfile
	phisrc.32   %phi622(return) <- %r14944
	br          .L3351

.L3363:
	br          .L3367

.L3367:
	load.64*    %r14945 <- 8[lf]
	push.64*    %r14945
	call.32     %r14946 <- _IO_getc
	store.32    %r14946 -> 0[c]
	setne.32    %r14947 <- %r14946, $0xffffffff
	load.32     %r14948 <- 0[c]
	load.8      %r14949 <- 0["\33Lua"]
	scast.32    %r14950 <- (8) %r14949
	setne.32    %r14951 <- %r14948, %r14950
	and-bool.32 %r14952 <- %r14947, %r14951
	br          %r14952, .L3364, .L3366

.L3364:
	br          .L3365

.L3365:
	br          .L3367

.L3366:
	store.32    $0 -> 0[lf]
	br          .L3361

.L3361:
	load.32     %r14953 <- 0[c]
	load.64*    %r14954 <- 8[lf]
	push.32     %r14953
	push.64*    %r14954
	call.32     %r14955 <- ungetc
	load.64*    %r14956 <- 0[L]
	symaddr.64* %r14957 <- getF
	symaddr.64* %r14958 <- lf
	cast.64*    %r14959 <- (64) %r14958
	load.64*    %r14960 <- 0[L]
	push.64*    %r14960
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r14961 <- lua_tolstring
	push.64*    %r14956
	push.64*    %r14957
	push.64*    %r14959
	push.64*    %r14961
	call.32     %r14962 <- lua_load
	store.32    %r14962 -> 0[status]
	load.64*    %r14963 <- 8[lf]
	push.64*    %r14963
	call.32     %r14964 <- ferror
	store.32    %r14964 -> 0[readstatus]
	load.64*    %r14965 <- 0[filename]
	br          %r14965, .L3368, .L3369

.L3368:
	load.64*    %r14966 <- 8[lf]
	push.64*    %r14966
	call.32     %r14967 <- fclose
	br          .L3369

.L3369:
	load.32     %r14968 <- 0[readstatus]
	br          %r14968, .L3370, .L3371

.L3370:
	load.64*    %r14969 <- 0[L]
	load.32     %r14970 <- 0[fnameindex]
	push.64*    %r14969
	push.32     %r14970
	call        lua_settop
	load.64*    %r14971 <- 0[L]
	symaddr.64* %r14972 <- <anon symbol:0x62d0014a25a0>
	load.32     %r14973 <- 0[fnameindex]
	push.64*    %r14971
	push.64*    %r14972
	push.32     %r14973
	call.32     %r14974 <- errfile
	phisrc.32   %phi623(return) <- %r14974
	br          .L3351

.L3371:
	load.64*    %r14975 <- 0[L]
	load.32     %r14976 <- 0[fnameindex]
	push.64*    %r14975
	push.32     %r14976
	call        lua_remove
	load.32     %r14977 <- 0[status]
	phisrc.32   %phi624(return) <- %r14977
	br          .L3351

.L3351:
	phi.32      %r14914 <- %phi621(return), %phi622(return), %phi623(return), %phi624(return)
	ret.32      %r14914


getS:
.L3372:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[size]
	load.64*    %r14978 <- 0[ud]
	ptrcast.64* %r14979 <- (64) %r14978
	store.64*   %r14979 -> 0[ls]
	load.64*    %r14980 <- 0[L]
	load.64*    %r14981 <- 0[ls]
	load.64     %r14982 <- 8[%r14981]
	seteq.32    %r14983 <- %r14982, $0
	br          %r14983, .L3373, .L3374

.L3373:
	phisrc.64*  %phi625(return) <- $0
	br          .L3375

.L3374:
	load.64*    %r14985 <- 0[ls]
	load.64     %r14986 <- 8[%r14985]
	load.64*    %r14987 <- 0[size]
	store.64    %r14986 -> 0[%r14987]
	load.64*    %r14988 <- 0[ls]
	store.64    $0 -> 8[%r14988]
	load.64*    %r14989 <- 0[ls]
	load.64*    %r14990 <- 0[%r14989]
	phisrc.64*  %phi626(return) <- %r14990
	br          .L3375

.L3375:
	phi.64*     %r14984 <- %phi625(return), %phi626(return)
	ret.64*     %r14984


luaL_loadbuffer:
.L3376:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[buff]
	store.64    %arg3 -> 0[size]
	store.64*   %arg4 -> 0[name]
	load.64*    %r14991 <- 0[buff]
	store.64*   %r14991 -> 0[ls]
	load.64     %r14992 <- 0[size]
	store.64    %r14992 -> 8[ls]
	load.64*    %r14993 <- 0[L]
	symaddr.64* %r14994 <- getS
	symaddr.64* %r14995 <- ls
	cast.64*    %r14996 <- (64) %r14995
	load.64*    %r14997 <- 0[name]
	push.64*    %r14993
	push.64*    %r14994
	push.64*    %r14996
	push.64*    %r14997
	call.32     %r14998 <- lua_load
	phisrc.32   %phi627(return) <- %r14998
	br          .L3377

.L3377:
	phi.32      %r14999 <- %phi627(return)
	ret.32      %r14998


l_alloc:
.L3378:
	<entry-point>
	store.64*   %arg1 -> 0[ud]
	store.64*   %arg2 -> 0[ptr]
	store.64    %arg3 -> 0[osize]
	store.64    %arg4 -> 0[nsize]
	load.64*    %r15000 <- 0[ud]
	load.64     %r15001 <- 0[osize]
	load.64     %r15002 <- 0[nsize]
	seteq.32    %r15003 <- %r15002, $0
	br          %r15003, .L3379, .L3380

.L3379:
	load.64*    %r15004 <- 0[ptr]
	push.64*    %r15004
	call        free
	phisrc.64*  %phi628(return) <- $0
	br          .L3381

.L3380:
	load.64*    %r15006 <- 0[ptr]
	load.64     %r15007 <- 0[nsize]
	push.64*    %r15006
	push.64     %r15007
	call.64*    %r15008 <- realloc
	phisrc.64*  %phi629(return) <- %r15008
	br          .L3381

.L3381:
	phi.64*     %r15005 <- %phi628(return), %phi629(return)
	ret.64*     %r15005


panic:
.L3383:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15009 <- 0[L]
	load.64*    %r15010 <- 0[stderr]
	symaddr.64* %r15011 <- <anon symbol:0x62d0014a3420>
	load.64*    %r15012 <- 0[L]
	push.64*    %r15012
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r15013 <- lua_tolstring
	push.64*    %r15010
	push.64*    %r15011
	push.64*    %r15013
	call.32     %r15014 <- fprintf
	phisrc.32   %phi630(return) <- $0
	br          .L3384

.L3384:
	phi.32      %r15015 <- %phi630(return)
	ret.32      $0


luaL_newstate:
.L3385:
	<entry-point>
	symaddr.64* %r15016 <- l_alloc
	push.64*    %r15016
	push.64*    $0
	call.64*    %r15017 <- lua_newstate
	store.64*   %r15017 -> 0[L]
	load.64*    %r15018 <- 0[L]
	br          %r15018, .L3386, .L3387

.L3386:
	load.64*    %r15019 <- 0[L]
	symaddr.64* %r15020 <- panic
	push.64*    %r15019
	push.64*    %r15020
	call.64*    %r15021 <- lua_atpanic
	br          .L3387

.L3387:
	load.64*    %r15022 <- 0[L]
	phisrc.64*  %phi631(return) <- %r15022
	br          .L3388

.L3388:
	phi.64*     %r15023 <- %phi631(return)
	ret.64*     %r15022


luaB_tonumber:
.L3389:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15024 <- 0[L]
	push.64*    %r15024
	push.32     $2
	push.64     $10
	call.64     %r15025 <- luaL_optinteger
	scast.32    %r15026 <- (64) %r15025
	store.32    %r15026 -> 0[base]
	load.32     %r15027 <- 0[base]
	seteq.32    %r15028 <- %r15027, $10
	br          %r15028, .L3390, .L3391

.L3390:
	load.64*    %r15029 <- 0[L]
	push.64*    %r15029
	push.32     $1
	call        luaL_checkany
	load.64*    %r15030 <- 0[L]
	push.64*    %r15030
	push.32     $1
	call.32     %r15031 <- lua_isnumber
	br          %r15031, .L3392, .L3393

.L3392:
	load.64*    %r15032 <- 0[L]
	load.64*    %r15033 <- 0[L]
	push.64*    %r15033
	push.32     $1
	call.f64    %r15034 <- lua_tonumber
	push.64*    %r15032
	push.f64    %r15034
	call        lua_pushnumber
	phisrc.32   %phi632(return) <- $1
	br          .L3394

.L3393:
	br          .L3395

.L3391:
	load.64*    %r15036 <- 0[L]
	push.64*    %r15036
	push.32     $1
	push.64*    $0
	call.64*    %r15037 <- luaL_checklstring
	store.64*   %r15037 -> 0[s1]
	load.32     %r15038 <- 0[base]
	setle.32    %r15039 <- $2, %r15038
	load.32     %r15040 <- 0[base]
	setle.32    %r15041 <- %r15040, $36
	and-bool.32 %r15042 <- %r15039, %r15041
	br          %r15042, .L3396, .L3397

.L3396:
	phisrc.32   %phi633 <- $1
	br          .L3398

.L3397:
	load.64*    %r15043 <- 0[L]
	symaddr.64* %r15044 <- <anon symbol:0x62d0014a3b60>
	push.64*    %r15043
	push.32     $2
	push.64*    %r15044
	call.32     %r15045 <- luaL_argerror
	phisrc.32   %phi634 <- %r15045
	br          .L3398

.L3398:
	phi.32      %r15046 <- %phi633, %phi634
	load.64*    %r15047 <- 0[s1]
	symaddr.64* %r15048 <- s2
	load.32     %r15049 <- 0[base]
	push.64*    %r15047
	push.64*    %r15048
	push.32     %r15049
	call.64     %r15050 <- strtoul
	store.64    %r15050 -> 0[n]
	load.64*    %r15051 <- 0[s1]
	load.64*    %r15052 <- 0[s2]
	setne.32    %r15053 <- %r15051, %r15052
	br          %r15053, .L3399, .L3400

.L3399:
	br          .L3404

.L3404:
	call.64*    %r15054 <- __ctype_b_loc
	load.64*    %r15055 <- 0[%r15054]
	load.64*    %r15056 <- 0[s2]
	load.8      %r15057 <- 0[%r15056]
	scast.8     %r15058 <- (8) %r15057
	cast.32     %r15059 <- (8) %r15058
	scast.64    %r15060 <- (32) %r15059
	muls.64     %r15061 <- %r15060, $2
	add.64*     %r15062 <- %r15055, %r15061
	load.16     %r15063 <- 0[%r15062]
	cast.32     %r15064 <- (16) %r15063
	and.32      %r15065 <- %r15064, $0x2000
	br          %r15065, .L3401, .L3403

.L3401:
	load.64*    %r15066 <- 0[s2]
	add.64*     %r15067 <- %r15066, $1
	store.64*   %r15067 -> 0[s2]
	br          .L3402

.L3402:
	br          .L3404

.L3403:
	load.64*    %r15068 <- 0[s2]
	load.8      %r15069 <- 0[%r15068]
	scast.32    %r15070 <- (8) %r15069
	seteq.32    %r15071 <- %r15070, $0
	br          %r15071, .L3405, .L3406

.L3405:
	load.64*    %r15072 <- 0[L]
	load.64     %r15073 <- 0[n]
	fpcast.f64  %r15074 <- (64) %r15073
	push.64*    %r15072
	push.f64    %r15074
	call        lua_pushnumber
	phisrc.32   %phi635(return) <- $1
	br          .L3394

.L3406:
	br          .L3400

.L3400:
	br          .L3395

.L3395:
	load.64*    %r15075 <- 0[L]
	push.64*    %r15075
	call        lua_pushnil
	phisrc.32   %phi636(return) <- $1
	br          .L3394

.L3394:
	phi.32      %r15035 <- %phi632(return), %phi635(return), %phi636(return)
	ret.32      %r15035


luaB_error:
.L3407:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15076 <- 0[L]
	push.64*    %r15076
	push.32     $2
	push.64     $1
	call.64     %r15077 <- luaL_optinteger
	scast.32    %r15078 <- (64) %r15077
	store.32    %r15078 -> 0[level]
	load.64*    %r15079 <- 0[L]
	push.64*    %r15079
	push.32     $1
	call        lua_settop
	load.64*    %r15080 <- 0[L]
	push.64*    %r15080
	push.32     $1
	call.32     %r15081 <- lua_isstring
	load.32     %r15082 <- 0[level]
	setgt.32    %r15083 <- %r15082, $0
	and-bool.32 %r15084 <- %r15081, %r15083
	br          %r15084, .L3408, .L3409

.L3408:
	load.64*    %r15085 <- 0[L]
	load.32     %r15086 <- 0[level]
	push.64*    %r15085
	push.32     %r15086
	call        luaL_where
	load.64*    %r15087 <- 0[L]
	push.64*    %r15087
	push.32     $1
	call        lua_pushvalue
	load.64*    %r15088 <- 0[L]
	push.64*    %r15088
	push.32     $2
	call        lua_concat
	br          .L3409

.L3409:
	load.64*    %r15089 <- 0[L]
	push.64*    %r15089
	call.32     %r15090 <- lua_error
	phisrc.32   %phi637(return) <- %r15090
	br          .L3410

.L3410:
	phi.32      %r15091 <- %phi637(return)
	ret.32      %r15090


luaB_setmetatable:
.L3411:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15092 <- 0[L]
	push.64*    %r15092
	push.32     $2
	call.32     %r15093 <- lua_type
	store.32    %r15093 -> 0[t]
	load.64*    %r15094 <- 0[L]
	push.64*    %r15094
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.32     %r15095 <- 0[t]
	seteq.32    %r15096 <- %r15095, $0
	load.32     %r15097 <- 0[t]
	seteq.32    %r15098 <- %r15097, $5
	or-bool.32  %r15099 <- %r15096, %r15098
	br          %r15099, .L3412, .L3413

.L3412:
	phisrc.32   %phi638 <- $1
	br          .L3414

.L3413:
	load.64*    %r15100 <- 0[L]
	symaddr.64* %r15101 <- <anon symbol:0x62d0014a4470>
	push.64*    %r15100
	push.32     $2
	push.64*    %r15101
	call.32     %r15102 <- luaL_argerror
	phisrc.32   %phi639 <- %r15102
	br          .L3414

.L3414:
	phi.32      %r15103 <- %phi638, %phi639
	load.64*    %r15104 <- 0[L]
	symaddr.64* %r15105 <- <anon symbol:0x62d0014a4810>
	push.64*    %r15104
	push.32     $1
	push.64*    %r15105
	call.32     %r15106 <- luaL_getmetafield
	br          %r15106, .L3415, .L3416

.L3415:
	load.64*    %r15107 <- 0[L]
	symaddr.64* %r15108 <- <anon symbol:0x62d0014a4bb0>
	push.64*    %r15107
	push.64*    %r15108
	call.32     %r15109 <- luaL_error
	br          .L3416

.L3416:
	load.64*    %r15110 <- 0[L]
	push.64*    %r15110
	push.32     $2
	call        lua_settop
	load.64*    %r15111 <- 0[L]
	push.64*    %r15111
	push.32     $1
	call.32     %r15112 <- lua_setmetatable
	phisrc.32   %phi640(return) <- $1
	br          .L3417

.L3417:
	phi.32      %r15113 <- %phi640(return)
	ret.32      $1


getfunc:
.L3418:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[opt]
	load.64*    %r15114 <- 0[L]
	push.64*    %r15114
	push.32     $1
	call.32     %r15115 <- lua_type
	seteq.32    %r15116 <- %r15115, $6
	br          %r15116, .L3419, .L3420

.L3419:
	load.64*    %r15117 <- 0[L]
	push.64*    %r15117
	push.32     $1
	call        lua_pushvalue
	br          .L3421

.L3420:
	load.32     %r15118 <- 0[opt]
	br          %r15118, .L3422, .L3423

.L3422:
	load.64*    %r15119 <- 0[L]
	push.64*    %r15119
	push.32     $1
	push.64     $1
	call.64     %r15120 <- luaL_optinteger
	scast.32    %r15121 <- (64) %r15120
	phisrc.32   %phi641 <- %r15121
	br          .L3424

.L3423:
	load.64*    %r15122 <- 0[L]
	push.64*    %r15122
	push.32     $1
	call.64     %r15123 <- luaL_checkinteger
	scast.32    %r15124 <- (64) %r15123
	phisrc.32   %phi642 <- %r15124
	br          .L3424

.L3424:
	phi.32      %r15125 <- %phi641, %phi642
	store.32    %r15125 -> 0[level]
	load.32     %r15126 <- 0[level]
	setge.32    %r15127 <- %r15126, $0
	br          %r15127, .L3425, .L3426

.L3425:
	phisrc.32   %phi643 <- $1
	br          .L3427

.L3426:
	load.64*    %r15128 <- 0[L]
	symaddr.64* %r15129 <- <anon symbol:0x62d0014a4f50>
	push.64*    %r15128
	push.32     $1
	push.64*    %r15129
	call.32     %r15130 <- luaL_argerror
	phisrc.32   %phi644 <- %r15130
	br          .L3427

.L3427:
	phi.32      %r15131 <- %phi643, %phi644
	load.64*    %r15132 <- 0[L]
	load.32     %r15133 <- 0[level]
	symaddr.64* %r15134 <- ar
	push.64*    %r15132
	push.32     %r15133
	push.64*    %r15134
	call.32     %r15135 <- lua_getstack
	seteq.32    %r15136 <- %r15135, $0
	br          %r15136, .L3428, .L3429

.L3428:
	load.64*    %r15137 <- 0[L]
	symaddr.64* %r15138 <- <anon symbol:0x62d0014a54c0>
	push.64*    %r15137
	push.32     $1
	push.64*    %r15138
	call.32     %r15139 <- luaL_argerror
	br          .L3429

.L3429:
	load.64*    %r15140 <- 0[L]
	symaddr.64* %r15141 <- <anon symbol:0x62d0014a5860>
	symaddr.64* %r15142 <- ar
	push.64*    %r15140
	push.64*    %r15141
	push.64*    %r15142
	call.32     %r15143 <- lua_getinfo
	load.64*    %r15144 <- 0[L]
	push.64*    %r15144
	push.32     $0xffffffff
	call.32     %r15145 <- lua_type
	seteq.32    %r15146 <- %r15145, $0
	br          %r15146, .L3430, .L3431

.L3430:
	load.64*    %r15147 <- 0[L]
	symaddr.64* %r15148 <- <anon symbol:0x62d0014a5dd0>
	load.32     %r15149 <- 0[level]
	push.64*    %r15147
	push.64*    %r15148
	push.32     %r15149
	call.32     %r15150 <- luaL_error
	br          .L3431

.L3431:
	br          .L3421

.L3421:
	ret


luaB_setfenv:
.L3432:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15151 <- 0[L]
	push.64*    %r15151
	push.32     $2
	push.32     $5
	call        luaL_checktype
	load.64*    %r15152 <- 0[L]
	push.64*    %r15152
	push.32     $0
	call        getfunc
	load.64*    %r15153 <- 0[L]
	push.64*    %r15153
	push.32     $2
	call        lua_pushvalue
	load.64*    %r15154 <- 0[L]
	push.64*    %r15154
	push.32     $1
	call.32     %r15155 <- lua_isnumber
	br          %r15155, .L3435, .L3434

.L3435:
	load.64*    %r15156 <- 0[L]
	push.64*    %r15156
	push.32     $1
	call.f64    %r15157 <- lua_tonumber
	set.f64     %r15158 <- 0.000000
	seteq.32    %r15159 <- %r15157, %r15158
	br          %r15159, .L3433, .L3434

.L3433:
	load.64*    %r15160 <- 0[L]
	push.64*    %r15160
	call.32     %r15161 <- lua_pushthread
	load.64*    %r15162 <- 0[L]
	push.64*    %r15162
	push.32     $0xfffffffe
	call        lua_insert
	load.64*    %r15163 <- 0[L]
	push.64*    %r15163
	push.32     $0xfffffffe
	call.32     %r15164 <- lua_setfenv
	phisrc.32   %phi645(return) <- $0
	br          .L3436

.L3434:
	load.64*    %r15166 <- 0[L]
	push.64*    %r15166
	push.32     $0xfffffffe
	call.32     %r15167 <- lua_iscfunction
	br          %r15167, .L3438, .L3440

.L3440:
	load.64*    %r15168 <- 0[L]
	push.64*    %r15168
	push.32     $0xfffffffe
	call.32     %r15169 <- lua_setfenv
	seteq.32    %r15170 <- %r15169, $0
	br          %r15170, .L3438, .L3439

.L3438:
	load.64*    %r15171 <- 0[L]
	symaddr.64* %r15172 <- <anon symbol:0x62d0014a6170>
	push.64*    %r15171
	push.64*    %r15172
	call.32     %r15173 <- luaL_error
	br          .L3439

.L3439:
	br          .L3437

.L3437:
	phisrc.32   %phi646(return) <- $1
	br          .L3436

.L3436:
	phi.32      %r15165 <- %phi645(return), %phi646(return)
	ret.32      %r15165


luaB_rawget:
.L3441:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15174 <- 0[L]
	push.64*    %r15174
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15175 <- 0[L]
	push.64*    %r15175
	push.32     $2
	call        luaL_checkany
	load.64*    %r15176 <- 0[L]
	push.64*    %r15176
	push.32     $2
	call        lua_settop
	load.64*    %r15177 <- 0[L]
	push.64*    %r15177
	push.32     $1
	call        lua_rawget
	phisrc.32   %phi647(return) <- $1
	br          .L3442

.L3442:
	phi.32      %r15178 <- %phi647(return)
	ret.32      $1


luaB_type:
.L3443:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15179 <- 0[L]
	push.64*    %r15179
	push.32     $1
	call        luaL_checkany
	load.64*    %r15180 <- 0[L]
	load.64*    %r15181 <- 0[L]
	load.64*    %r15182 <- 0[L]
	push.64*    %r15182
	push.32     $1
	call.32     %r15183 <- lua_type
	push.64*    %r15181
	push.32     %r15183
	call.64*    %r15184 <- lua_typename
	push.64*    %r15180
	push.64*    %r15184
	call        lua_pushstring
	phisrc.32   %phi648(return) <- $1
	br          .L3444

.L3444:
	phi.32      %r15185 <- %phi648(return)
	ret.32      $1


luaB_next:
.L3445:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15186 <- 0[L]
	push.64*    %r15186
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15187 <- 0[L]
	push.64*    %r15187
	push.32     $2
	call        lua_settop
	load.64*    %r15188 <- 0[L]
	push.64*    %r15188
	push.32     $1
	call.32     %r15189 <- lua_next
	br          %r15189, .L3446, .L3447

.L3446:
	phisrc.32   %phi649(return) <- $2
	br          .L3448

.L3447:
	load.64*    %r15191 <- 0[L]
	push.64*    %r15191
	call        lua_pushnil
	phisrc.32   %phi650(return) <- $1
	br          .L3448

.L3448:
	phi.32      %r15190 <- %phi649(return), %phi650(return)
	ret.32      %r15190


luaB_pairs:
.L3450:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15192 <- 0[L]
	push.64*    %r15192
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15193 <- 0[L]
	push.64*    %r15193
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r15194 <- 0[L]
	push.64*    %r15194
	push.32     $1
	call        lua_pushvalue
	load.64*    %r15195 <- 0[L]
	push.64*    %r15195
	call        lua_pushnil
	phisrc.32   %phi651(return) <- $3
	br          .L3451

.L3451:
	phi.32      %r15196 <- %phi651(return)
	ret.32      $3


ipairsaux:
.L3452:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15197 <- 0[L]
	push.64*    %r15197
	push.32     $2
	call.64     %r15198 <- luaL_checkinteger
	scast.32    %r15199 <- (64) %r15198
	store.32    %r15199 -> 0[i]
	load.64*    %r15200 <- 0[L]
	push.64*    %r15200
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.32     %r15201 <- 0[i]
	add.32      %r15202 <- %r15201, $1
	store.32    %r15202 -> 0[i]
	load.64*    %r15203 <- 0[L]
	load.32     %r15204 <- 0[i]
	scast.64    %r15205 <- (32) %r15204
	push.64*    %r15203
	push.64     %r15205
	call        lua_pushinteger
	load.64*    %r15206 <- 0[L]
	load.32     %r15207 <- 0[i]
	push.64*    %r15206
	push.32     $1
	push.32     %r15207
	call        lua_rawgeti
	load.64*    %r15208 <- 0[L]
	push.64*    %r15208
	push.32     $0xffffffff
	call.32     %r15209 <- lua_type
	seteq.32    %r15210 <- %r15209, $0
	select.32   %r15211 <- %r15210, $0, $2
	phisrc.32   %phi652(return) <- %r15211
	br          .L3453

.L3453:
	phi.32      %r15212 <- %phi652(return)
	ret.32      %r15211


luaB_ipairs:
.L3454:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15213 <- 0[L]
	push.64*    %r15213
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15214 <- 0[L]
	push.64*    %r15214
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r15215 <- 0[L]
	push.64*    %r15215
	push.32     $1
	call        lua_pushvalue
	load.64*    %r15216 <- 0[L]
	push.64*    %r15216
	push.64     $0
	call        lua_pushinteger
	phisrc.32   %phi653(return) <- $3
	br          .L3455

.L3455:
	phi.32      %r15217 <- %phi653(return)
	ret.32      $3


load_aux:
.L3456:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[status]
	load.32     %r15218 <- 0[status]
	seteq.32    %r15219 <- %r15218, $0
	br          %r15219, .L3457, .L3458

.L3457:
	phisrc.32   %phi654(return) <- $1
	br          .L3459

.L3458:
	load.64*    %r15221 <- 0[L]
	push.64*    %r15221
	call        lua_pushnil
	load.64*    %r15222 <- 0[L]
	push.64*    %r15222
	push.32     $0xfffffffe
	call        lua_insert
	phisrc.32   %phi655(return) <- $2
	br          .L3459

.L3459:
	phi.32      %r15220 <- %phi654(return), %phi655(return)
	ret.32      %r15220


luaB_loadstring:
.L3461:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15223 <- 0[L]
	symaddr.64* %r15224 <- l
	push.64*    %r15223
	push.32     $1
	push.64*    %r15224
	call.64*    %r15225 <- luaL_checklstring
	store.64*   %r15225 -> 0[s]
	load.64*    %r15226 <- 0[L]
	load.64*    %r15227 <- 0[s]
	push.64*    %r15226
	push.32     $2
	push.64*    %r15227
	push.64*    $0
	call.64*    %r15228 <- luaL_optlstring
	store.64*   %r15228 -> 0[chunkname]
	load.64*    %r15229 <- 0[L]
	load.64*    %r15230 <- 0[L]
	load.64*    %r15231 <- 0[s]
	load.64     %r15232 <- 0[l]
	load.64*    %r15233 <- 0[chunkname]
	push.64*    %r15230
	push.64*    %r15231
	push.64     %r15232
	push.64*    %r15233
	call.32     %r15234 <- luaL_loadbuffer
	push.64*    %r15229
	push.32     %r15234
	call.32     %r15235 <- load_aux
	phisrc.32   %phi656(return) <- %r15235
	br          .L3462

.L3462:
	phi.32      %r15236 <- %phi656(return)
	ret.32      %r15235


luaB_loadfile:
.L3463:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15237 <- 0[L]
	push.64*    %r15237
	push.32     $1
	push.64*    $0
	push.64*    $0
	call.64*    %r15238 <- luaL_optlstring
	store.64*   %r15238 -> 0[fname]
	load.64*    %r15239 <- 0[L]
	load.64*    %r15240 <- 0[L]
	load.64*    %r15241 <- 0[fname]
	push.64*    %r15240
	push.64*    %r15241
	call.32     %r15242 <- luaL_loadfile
	push.64*    %r15239
	push.32     %r15242
	call.32     %r15243 <- load_aux
	phisrc.32   %phi657(return) <- %r15243
	br          .L3464

.L3464:
	phi.32      %r15244 <- %phi657(return)
	ret.32      %r15243


luaB_assert:
.L3465:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15245 <- 0[L]
	push.64*    %r15245
	push.32     $1
	call        luaL_checkany
	load.64*    %r15246 <- 0[L]
	push.64*    %r15246
	push.32     $1
	call.32     %r15247 <- lua_toboolean
	br          %r15247, .L3467, .L3466

.L3466:
	load.64*    %r15248 <- 0[L]
	symaddr.64* %r15249 <- <anon symbol:0x62d0014a66e0>
	load.64*    %r15250 <- 0[L]
	symaddr.64* %r15251 <- <anon symbol:0x62d0014a6a80>
	push.64*    %r15250
	push.32     $2
	push.64*    %r15251
	push.64*    $0
	call.64*    %r15252 <- luaL_optlstring
	push.64*    %r15248
	push.64*    %r15249
	push.64*    %r15252
	call.32     %r15253 <- luaL_error
	phisrc.32   %phi658(return) <- %r15253
	br          .L3468

.L3467:
	load.64*    %r15255 <- 0[L]
	push.64*    %r15255
	call.32     %r15256 <- lua_gettop
	phisrc.32   %phi659(return) <- %r15256
	br          .L3468

.L3468:
	phi.32      %r15254 <- %phi658(return), %phi659(return)
	ret.32      %r15254


luaB_unpack:
.L3469:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15257 <- 0[L]
	push.64*    %r15257
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15258 <- 0[L]
	push.64*    %r15258
	push.32     $2
	push.64     $1
	call.64     %r15259 <- luaL_optinteger
	scast.32    %r15260 <- (64) %r15259
	store.32    %r15260 -> 0[i]
	load.64*    %r15261 <- 0[L]
	push.64*    %r15261
	push.32     $3
	call.32     %r15262 <- lua_type
	setle.32    %r15263 <- %r15262, $0
	br          %r15263, .L3470, .L3471

.L3470:
	load.64*    %r15264 <- 0[L]
	push.64*    %r15264
	push.32     $1
	call.64     %r15265 <- lua_objlen
	cast.32     %r15266 <- (64) %r15265
	phisrc.32   %phi660 <- %r15266
	br          .L3472

.L3471:
	load.64*    %r15267 <- 0[L]
	push.64*    %r15267
	push.32     $3
	call.64     %r15268 <- luaL_checkinteger
	scast.32    %r15269 <- (64) %r15268
	phisrc.32   %phi661 <- %r15269
	br          .L3472

.L3472:
	phi.32      %r15270 <- %phi660, %phi661
	store.32    %r15270 -> 0[e]
	load.32     %r15271 <- 0[i]
	load.32     %r15272 <- 0[e]
	setgt.32    %r15273 <- %r15271, %r15272
	br          %r15273, .L3473, .L3474

.L3473:
	phisrc.32   %phi662(return) <- $0
	br          .L3475

.L3474:
	load.32     %r15275 <- 0[e]
	load.32     %r15276 <- 0[i]
	sub.32      %r15277 <- %r15275, %r15276
	add.32      %r15278 <- %r15277, $1
	store.32    %r15278 -> 0[n]
	load.32     %r15279 <- 0[n]
	setle.32    %r15280 <- %r15279, $0
	br          %r15280, .L3476, .L3478

.L3478:
	load.64*    %r15281 <- 0[L]
	load.32     %r15282 <- 0[n]
	push.64*    %r15281
	push.32     %r15282
	call.32     %r15283 <- lua_checkstack
	br          %r15283, .L3477, .L3476

.L3476:
	load.64*    %r15284 <- 0[L]
	symaddr.64* %r15285 <- <anon symbol:0x62d0014a6e20>
	push.64*    %r15284
	push.64*    %r15285
	call.32     %r15286 <- luaL_error
	phisrc.32   %phi663(return) <- %r15286
	br          .L3475

.L3477:
	load.64*    %r15287 <- 0[L]
	load.32     %r15288 <- 0[i]
	push.64*    %r15287
	push.32     $1
	push.32     %r15288
	call        lua_rawgeti
	br          .L3482

.L3482:
	load.32     %r15289 <- 0[i]
	add.32      %r15290 <- %r15289, $1
	store.32    %r15290 -> 0[i]
	load.32     %r15291 <- 0[e]
	setlt.32    %r15292 <- %r15289, %r15291
	br          %r15292, .L3479, .L3481

.L3479:
	load.64*    %r15293 <- 0[L]
	load.32     %r15294 <- 0[i]
	push.64*    %r15293
	push.32     $1
	push.32     %r15294
	call        lua_rawgeti
	br          .L3480

.L3480:
	br          .L3482

.L3481:
	load.32     %r15295 <- 0[n]
	phisrc.32   %phi664(return) <- %r15295
	br          .L3475

.L3475:
	phi.32      %r15274 <- %phi662(return), %phi663(return), %phi664(return)
	ret.32      %r15274


luaB_pcall:
.L3483:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15296 <- 0[L]
	push.64*    %r15296
	push.32     $1
	call        luaL_checkany
	load.64*    %r15297 <- 0[L]
	load.64*    %r15298 <- 0[L]
	push.64*    %r15298
	call.32     %r15299 <- lua_gettop
	sub.32      %r15300 <- %r15299, $1
	push.64*    %r15297
	push.32     %r15300
	push.32     $0xffffffff
	push.32     $0
	call.32     %r15301 <- lua_pcall
	store.32    %r15301 -> 0[status]
	load.64*    %r15302 <- 0[L]
	load.32     %r15303 <- 0[status]
	seteq.32    %r15304 <- %r15303, $0
	push.64*    %r15302
	push.32     %r15304
	call        lua_pushboolean
	load.64*    %r15305 <- 0[L]
	push.64*    %r15305
	push.32     $1
	call        lua_insert
	load.64*    %r15306 <- 0[L]
	push.64*    %r15306
	call.32     %r15307 <- lua_gettop
	phisrc.32   %phi665(return) <- %r15307
	br          .L3484

.L3484:
	phi.32      %r15308 <- %phi665(return)
	ret.32      %r15307


luaB_newproxy:
.L3485:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15309 <- 0[L]
	push.64*    %r15309
	push.32     $1
	call        lua_settop
	load.64*    %r15310 <- 0[L]
	push.64*    %r15310
	push.64     $0
	call.64*    %r15311 <- lua_newuserdata
	load.64*    %r15312 <- 0[L]
	push.64*    %r15312
	push.32     $1
	call.32     %r15313 <- lua_toboolean
	seteq.32    %r15314 <- %r15313, $0
	br          %r15314, .L3486, .L3487

.L3486:
	phisrc.32   %phi666(return) <- $1
	br          .L3488

.L3487:
	load.64*    %r15316 <- 0[L]
	push.64*    %r15316
	push.32     $1
	call.32     %r15317 <- lua_type
	seteq.32    %r15318 <- %r15317, $1
	br          %r15318, .L3490, .L3491

.L3490:
	load.64*    %r15319 <- 0[L]
	push.64*    %r15319
	push.32     $0
	push.32     $0
	call        lua_createtable
	load.64*    %r15320 <- 0[L]
	push.64*    %r15320
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15321 <- 0[L]
	push.64*    %r15321
	push.32     $1
	call        lua_pushboolean
	load.64*    %r15322 <- 0[L]
	push.64*    %r15322
	push.32     $0xffffd8ed
	call        lua_rawset
	br          .L3492

.L3491:
	store.32    $0 -> 0[validproxy]
	load.64*    %r15323 <- 0[L]
	push.64*    %r15323
	push.32     $1
	call.32     %r15324 <- lua_getmetatable
	br          %r15324, .L3493, .L3494

.L3493:
	load.64*    %r15325 <- 0[L]
	push.64*    %r15325
	push.32     $0xffffd8ed
	call        lua_rawget
	load.64*    %r15326 <- 0[L]
	push.64*    %r15326
	push.32     $0xffffffff
	call.32     %r15327 <- lua_toboolean
	store.32    %r15327 -> 0[validproxy]
	load.64*    %r15328 <- 0[L]
	push.64*    %r15328
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3494

.L3494:
	load.32     %r15329 <- 0[validproxy]
	br          %r15329, .L3495, .L3496

.L3495:
	phisrc.32   %phi667 <- $1
	br          .L3497

.L3496:
	load.64*    %r15330 <- 0[L]
	symaddr.64* %r15331 <- <anon symbol:0x62d0014a71c0>
	push.64*    %r15330
	push.32     $1
	push.64*    %r15331
	call.32     %r15332 <- luaL_argerror
	phisrc.32   %phi668 <- %r15332
	br          .L3497

.L3497:
	phi.32      %r15333 <- %phi667, %phi668
	load.64*    %r15334 <- 0[L]
	push.64*    %r15334
	push.32     $1
	call.32     %r15335 <- lua_getmetatable
	br          .L3492

.L3492:
	br          .L3489

.L3489:
	load.64*    %r15336 <- 0[L]
	push.64*    %r15336
	push.32     $2
	call.32     %r15337 <- lua_setmetatable
	phisrc.32   %phi669(return) <- $1
	br          .L3488

.L3488:
	phi.32      %r15315 <- %phi666(return), %phi669(return)
	ret.32      %r15315


auxopen:
.L3498:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[name]
	store.64*   %arg3 -> 0[f]
	store.64*   %arg4 -> 0[u]
	load.64*    %r15338 <- 0[L]
	load.64*    %r15339 <- 0[u]
	push.64*    %r15338
	push.64*    %r15339
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r15340 <- 0[L]
	load.64*    %r15341 <- 0[f]
	push.64*    %r15340
	push.64*    %r15341
	push.32     $1
	call        lua_pushcclosure
	load.64*    %r15342 <- 0[L]
	load.64*    %r15343 <- 0[name]
	push.64*    %r15342
	push.32     $0xfffffffe
	push.64*    %r15343
	call        lua_setfield
	br          .L3499

.L3499:
	ret


base_open:
.L3500:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15344 <- 0[L]
	push.64*    %r15344
	push.32     $0xffffd8ee
	call        lua_pushvalue
	load.64*    %r15345 <- 0[L]
	symaddr.64* %r15346 <- <anon symbol:0x62d0014a7560>
	push.64*    %r15345
	push.32     $0xffffd8ee
	push.64*    %r15346
	call        lua_setfield
	load.64*    %r15347 <- 0[L]
	symaddr.64* %r15348 <- <anon symbol:0x62d0014a7900>
	symaddr.64* %r15349 <- base_funcs
	push.64*    %r15347
	push.64*    %r15348
	push.64*    %r15349
	call        luaL_register
	load.64*    %r15350 <- 0[L]
	symaddr.64* %r15351 <- <anon symbol:0x62d0014a7e70>
	push.64*    %r15350
	push.64*    %r15351
	push.64     $7
	call        lua_pushlstring
	load.64*    %r15352 <- 0[L]
	symaddr.64* %r15353 <- <anon symbol:0x62d0014c8418>
	push.64*    %r15352
	push.32     $0xffffd8ee
	push.64*    %r15353
	call        lua_setfield
	load.64*    %r15354 <- 0[L]
	symaddr.64* %r15355 <- <anon symbol:0x62d0014c87b8>
	symaddr.64* %r15356 <- luaB_ipairs
	symaddr.64* %r15357 <- ipairsaux
	push.64*    %r15354
	push.64*    %r15355
	push.64*    %r15356
	push.64*    %r15357
	call        auxopen
	load.64*    %r15358 <- 0[L]
	symaddr.64* %r15359 <- <anon symbol:0x62d0014c8ef8>
	symaddr.64* %r15360 <- luaB_pairs
	symaddr.64* %r15361 <- luaB_next
	push.64*    %r15358
	push.64*    %r15359
	push.64*    %r15360
	push.64*    %r15361
	call        auxopen
	load.64*    %r15362 <- 0[L]
	push.64*    %r15362
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r15363 <- 0[L]
	push.64*    %r15363
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15364 <- 0[L]
	push.64*    %r15364
	push.32     $0xfffffffe
	call.32     %r15365 <- lua_setmetatable
	load.64*    %r15366 <- 0[L]
	symaddr.64* %r15367 <- <anon symbol:0x62d0014c9638>
	push.64*    %r15366
	push.64*    %r15367
	push.64     $2
	call        lua_pushlstring
	load.64*    %r15368 <- 0[L]
	symaddr.64* %r15369 <- <anon symbol:0x62d0014c9ba8>
	push.64*    %r15368
	push.32     $0xfffffffe
	push.64*    %r15369
	call        lua_setfield
	load.64*    %r15370 <- 0[L]
	symaddr.64* %r15371 <- luaB_newproxy
	push.64*    %r15370
	push.64*    %r15371
	push.32     $1
	call        lua_pushcclosure
	load.64*    %r15372 <- 0[L]
	symaddr.64* %r15373 <- <anon symbol:0x62d0014ca118>
	push.64*    %r15372
	push.32     $0xffffd8ee
	push.64*    %r15373
	call        lua_setfield
	br          .L3501

.L3501:
	ret


luaopen_base:
.L3502:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15374 <- 0[L]
	push.64*    %r15374
	call        base_open
	phisrc.32   %phi670(return) <- $1
	br          .L3503

.L3503:
	phi.32      %r15375 <- %phi670(return)
	ret.32      $1


tinsert:
.L3504:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15376 <- 0[L]
	push.64*    %r15376
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15377 <- 0[L]
	push.64*    %r15377
	push.32     $1
	call.64     %r15378 <- lua_objlen
	cast.32     %r15379 <- (64) %r15378
	add.32      %r15380 <- %r15379, $1
	store.32    %r15380 -> 0[e]
	load.64*    %r15381 <- 0[L]
	push.64*    %r15381
	call.32     %r15382 <- lua_gettop
	switch.32   %r15382, 2 -> .L3506, 3 -> .L3507, default -> .L3508

.L3506:
	load.32     %r15383 <- 0[e]
	store.32    %r15383 -> 0[pos]
	br          .L3505

.L3507:
	load.64*    %r15384 <- 0[L]
	push.64*    %r15384
	push.32     $2
	call.64     %r15385 <- luaL_checkinteger
	scast.32    %r15386 <- (64) %r15385
	store.32    %r15386 -> 0[pos]
	load.32     %r15387 <- 0[pos]
	load.32     %r15388 <- 0[e]
	setgt.32    %r15389 <- %r15387, %r15388
	br          %r15389, .L3509, .L3510

.L3509:
	load.32     %r15390 <- 0[pos]
	store.32    %r15390 -> 0[e]
	br          .L3510

.L3510:
	load.32     %r15391 <- 0[e]
	store.32    %r15391 -> 0[i]
	br          .L3514

.L3514:
	load.32     %r15392 <- 0[i]
	load.32     %r15393 <- 0[pos]
	setgt.32    %r15394 <- %r15392, %r15393
	br          %r15394, .L3511, .L3513

.L3511:
	load.64*    %r15395 <- 0[L]
	load.32     %r15396 <- 0[i]
	sub.32      %r15397 <- %r15396, $1
	push.64*    %r15395
	push.32     $1
	push.32     %r15397
	call        lua_rawgeti
	load.64*    %r15398 <- 0[L]
	load.32     %r15399 <- 0[i]
	push.64*    %r15398
	push.32     $1
	push.32     %r15399
	call        lua_rawseti
	br          .L3512

.L3512:
	load.32     %r15400 <- 0[i]
	sub.32      %r15401 <- %r15400, $1
	store.32    %r15401 -> 0[i]
	br          .L3514

.L3513:
	br          .L3505

.L3508:
	load.64*    %r15402 <- 0[L]
	symaddr.64* %r15403 <- <anon symbol:0x62d0014ca4b8>
	push.64*    %r15402
	push.64*    %r15403
	call.32     %r15404 <- luaL_error
	phisrc.32   %phi671(return) <- %r15404
	br          .L3515

.L3505:
	load.64*    %r15406 <- 0[L]
	load.32     %r15407 <- 0[pos]
	push.64*    %r15406
	push.32     $1
	push.32     %r15407
	call        lua_rawseti
	phisrc.32   %phi672(return) <- $0
	br          .L3515

.L3515:
	phi.32      %r15405 <- %phi671(return), %phi672(return)
	ret.32      %r15405


tremove:
.L3516:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15408 <- 0[L]
	push.64*    %r15408
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15409 <- 0[L]
	push.64*    %r15409
	push.32     $1
	call.64     %r15410 <- lua_objlen
	cast.32     %r15411 <- (64) %r15410
	store.32    %r15411 -> 0[e]
	load.64*    %r15412 <- 0[L]
	load.32     %r15413 <- 0[e]
	scast.64    %r15414 <- (32) %r15413
	push.64*    %r15412
	push.32     $2
	push.64     %r15414
	call.64     %r15415 <- luaL_optinteger
	scast.32    %r15416 <- (64) %r15415
	store.32    %r15416 -> 0[pos]
	load.32     %r15417 <- 0[pos]
	setle.32    %r15418 <- $1, %r15417
	load.32     %r15419 <- 0[pos]
	load.32     %r15420 <- 0[e]
	setle.32    %r15421 <- %r15419, %r15420
	and-bool.32 %r15422 <- %r15418, %r15421
	br          %r15422, .L3518, .L3517

.L3517:
	phisrc.32   %phi673(return) <- $0
	br          .L3519

.L3518:
	load.64*    %r15424 <- 0[L]
	load.32     %r15425 <- 0[pos]
	push.64*    %r15424
	push.32     $1
	push.32     %r15425
	call        lua_rawgeti
	br          .L3523

.L3523:
	load.32     %r15426 <- 0[pos]
	load.32     %r15427 <- 0[e]
	setlt.32    %r15428 <- %r15426, %r15427
	br          %r15428, .L3520, .L3522

.L3520:
	load.64*    %r15429 <- 0[L]
	load.32     %r15430 <- 0[pos]
	add.32      %r15431 <- %r15430, $1
	push.64*    %r15429
	push.32     $1
	push.32     %r15431
	call        lua_rawgeti
	load.64*    %r15432 <- 0[L]
	load.32     %r15433 <- 0[pos]
	push.64*    %r15432
	push.32     $1
	push.32     %r15433
	call        lua_rawseti
	br          .L3521

.L3521:
	load.32     %r15434 <- 0[pos]
	add.32      %r15435 <- %r15434, $1
	store.32    %r15435 -> 0[pos]
	br          .L3523

.L3522:
	load.64*    %r15436 <- 0[L]
	push.64*    %r15436
	call        lua_pushnil
	load.64*    %r15437 <- 0[L]
	load.32     %r15438 <- 0[e]
	push.64*    %r15437
	push.32     $1
	push.32     %r15438
	call        lua_rawseti
	phisrc.32   %phi674(return) <- $1
	br          .L3519

.L3519:
	phi.32      %r15423 <- %phi673(return), %phi674(return)
	ret.32      %r15423


addfield:
.L3524:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[b]
	store.32    %arg3 -> 0[i]
	load.64*    %r15439 <- 0[L]
	load.32     %r15440 <- 0[i]
	push.64*    %r15439
	push.32     $1
	push.32     %r15440
	call        lua_rawgeti
	load.64*    %r15441 <- 0[L]
	push.64*    %r15441
	push.32     $0xffffffff
	call.32     %r15442 <- lua_isstring
	br          %r15442, .L3526, .L3525

.L3525:
	load.64*    %r15443 <- 0[L]
	symaddr.64* %r15444 <- <anon symbol:0x62d0014ca858>
	load.64*    %r15445 <- 0[L]
	load.64*    %r15446 <- 0[L]
	push.64*    %r15446
	push.32     $0xffffffff
	call.32     %r15447 <- lua_type
	push.64*    %r15445
	push.32     %r15447
	call.64*    %r15448 <- lua_typename
	load.32     %r15449 <- 0[i]
	push.64*    %r15443
	push.64*    %r15444
	push.64*    %r15448
	push.32     %r15449
	call.32     %r15450 <- luaL_error
	br          .L3526

.L3526:
	load.64*    %r15451 <- 0[b]
	push.64*    %r15451
	call        luaL_addvalue
	br          .L3527

.L3527:
	ret


tconcat:
.L3528:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15452 <- 0[L]
	symaddr.64* %r15453 <- <anon symbol:0x62d0014cabf8>
	symaddr.64* %r15454 <- lsep
	push.64*    %r15452
	push.32     $2
	push.64*    %r15453
	push.64*    %r15454
	call.64*    %r15455 <- luaL_optlstring
	store.64*   %r15455 -> 0[sep]
	load.64*    %r15456 <- 0[L]
	push.64*    %r15456
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15457 <- 0[L]
	push.64*    %r15457
	push.32     $3
	push.64     $1
	call.64     %r15458 <- luaL_optinteger
	scast.32    %r15459 <- (64) %r15458
	store.32    %r15459 -> 0[i]
	load.64*    %r15460 <- 0[L]
	push.64*    %r15460
	push.32     $4
	call.32     %r15461 <- lua_type
	setle.32    %r15462 <- %r15461, $0
	br          %r15462, .L3529, .L3530

.L3529:
	load.64*    %r15463 <- 0[L]
	push.64*    %r15463
	push.32     $1
	call.64     %r15464 <- lua_objlen
	cast.32     %r15465 <- (64) %r15464
	phisrc.32   %phi675 <- %r15465
	br          .L3531

.L3530:
	load.64*    %r15466 <- 0[L]
	push.64*    %r15466
	push.32     $4
	call.64     %r15467 <- luaL_checkinteger
	scast.32    %r15468 <- (64) %r15467
	phisrc.32   %phi676 <- %r15468
	br          .L3531

.L3531:
	phi.32      %r15469 <- %phi675, %phi676
	store.32    %r15469 -> 0[last]
	load.64*    %r15470 <- 0[L]
	symaddr.64* %r15471 <- b
	push.64*    %r15470
	push.64*    %r15471
	call        luaL_buffinit
	br          .L3535

.L3535:
	load.32     %r15472 <- 0[i]
	load.32     %r15473 <- 0[last]
	setlt.32    %r15474 <- %r15472, %r15473
	br          %r15474, .L3532, .L3534

.L3532:
	load.64*    %r15475 <- 0[L]
	symaddr.64* %r15476 <- b
	load.32     %r15477 <- 0[i]
	push.64*    %r15475
	push.64*    %r15476
	push.32     %r15477
	call        addfield
	symaddr.64* %r15478 <- b
	load.64*    %r15479 <- 0[sep]
	load.64     %r15480 <- 0[lsep]
	push.64*    %r15478
	push.64*    %r15479
	push.64     %r15480
	call        luaL_addlstring
	br          .L3533

.L3533:
	load.32     %r15481 <- 0[i]
	add.32      %r15482 <- %r15481, $1
	store.32    %r15482 -> 0[i]
	br          .L3535

.L3534:
	load.32     %r15483 <- 0[i]
	load.32     %r15484 <- 0[last]
	seteq.32    %r15485 <- %r15483, %r15484
	br          %r15485, .L3536, .L3537

.L3536:
	load.64*    %r15486 <- 0[L]
	symaddr.64* %r15487 <- b
	load.32     %r15488 <- 0[i]
	push.64*    %r15486
	push.64*    %r15487
	push.32     %r15488
	call        addfield
	br          .L3537

.L3537:
	symaddr.64* %r15489 <- b
	push.64*    %r15489
	call        luaL_pushresult
	phisrc.32   %phi677(return) <- $1
	br          .L3538

.L3538:
	phi.32      %r15490 <- %phi677(return)
	ret.32      $1


set2:
.L3539:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.32    %arg3 -> 0[j]
	load.64*    %r15491 <- 0[L]
	load.32     %r15492 <- 0[i]
	push.64*    %r15491
	push.32     $1
	push.32     %r15492
	call        lua_rawseti
	load.64*    %r15493 <- 0[L]
	load.32     %r15494 <- 0[j]
	push.64*    %r15493
	push.32     $1
	push.32     %r15494
	call        lua_rawseti
	br          .L3540

.L3540:
	ret


sort_comp:
.L3541:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[a]
	store.32    %arg3 -> 0[b]
	load.64*    %r15495 <- 0[L]
	push.64*    %r15495
	push.32     $2
	call.32     %r15496 <- lua_type
	seteq.32    %r15497 <- %r15496, $0
	br          %r15497, .L3543, .L3542

.L3542:
	load.64*    %r15498 <- 0[L]
	push.64*    %r15498
	push.32     $2
	call        lua_pushvalue
	load.64*    %r15499 <- 0[L]
	load.32     %r15500 <- 0[a]
	sub.32      %r15501 <- %r15500, $1
	push.64*    %r15499
	push.32     %r15501
	call        lua_pushvalue
	load.64*    %r15502 <- 0[L]
	load.32     %r15503 <- 0[b]
	sub.32      %r15504 <- %r15503, $2
	push.64*    %r15502
	push.32     %r15504
	call        lua_pushvalue
	load.64*    %r15505 <- 0[L]
	push.64*    %r15505
	push.32     $2
	push.32     $1
	call        lua_call
	load.64*    %r15506 <- 0[L]
	push.64*    %r15506
	push.32     $0xffffffff
	call.32     %r15507 <- lua_toboolean
	store.32    %r15507 -> 0[res]
	load.64*    %r15508 <- 0[L]
	push.64*    %r15508
	push.32     $0xfffffffe
	call        lua_settop
	load.32     %r15509 <- 0[res]
	phisrc.32   %phi678(return) <- %r15509
	br          .L3544

.L3543:
	load.64*    %r15511 <- 0[L]
	load.32     %r15512 <- 0[a]
	load.32     %r15513 <- 0[b]
	push.64*    %r15511
	push.32     %r15512
	push.32     %r15513
	call.32     %r15514 <- lua_lessthan
	phisrc.32   %phi679(return) <- %r15514
	br          .L3544

.L3544:
	phi.32      %r15510 <- %phi678(return), %phi679(return)
	ret.32      %r15510


auxsort:
.L3546:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[l]
	store.32    %arg3 -> 0[u]
	br          .L3550

.L3550:
	load.32     %r15515 <- 0[l]
	load.32     %r15516 <- 0[u]
	setlt.32    %r15517 <- %r15515, %r15516
	br          %r15517, .L3547, .L3549

.L3547:
	load.64*    %r15518 <- 0[L]
	load.32     %r15519 <- 0[l]
	push.64*    %r15518
	push.32     $1
	push.32     %r15519
	call        lua_rawgeti
	load.64*    %r15520 <- 0[L]
	load.32     %r15521 <- 0[u]
	push.64*    %r15520
	push.32     $1
	push.32     %r15521
	call        lua_rawgeti
	load.64*    %r15522 <- 0[L]
	push.64*    %r15522
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15523 <- sort_comp
	br          %r15523, .L3551, .L3552

.L3551:
	load.64*    %r15524 <- 0[L]
	load.32     %r15525 <- 0[l]
	load.32     %r15526 <- 0[u]
	push.64*    %r15524
	push.32     %r15525
	push.32     %r15526
	call        set2
	br          .L3553

.L3552:
	load.64*    %r15527 <- 0[L]
	push.64*    %r15527
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3553

.L3553:
	load.32     %r15528 <- 0[u]
	load.32     %r15529 <- 0[l]
	sub.32      %r15530 <- %r15528, %r15529
	seteq.32    %r15531 <- %r15530, $1
	br          %r15531, .L3554, .L3555

.L3554:
	br          .L3549

.L3555:
	load.32     %r15532 <- 0[l]
	load.32     %r15533 <- 0[u]
	add.32      %r15534 <- %r15532, %r15533
	divs.32     %r15535 <- %r15534, $2
	store.32    %r15535 -> 0[i]
	load.64*    %r15536 <- 0[L]
	load.32     %r15537 <- 0[i]
	push.64*    %r15536
	push.32     $1
	push.32     %r15537
	call        lua_rawgeti
	load.64*    %r15538 <- 0[L]
	load.32     %r15539 <- 0[l]
	push.64*    %r15538
	push.32     $1
	push.32     %r15539
	call        lua_rawgeti
	load.64*    %r15540 <- 0[L]
	push.64*    %r15540
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15541 <- sort_comp
	br          %r15541, .L3556, .L3557

.L3556:
	load.64*    %r15542 <- 0[L]
	load.32     %r15543 <- 0[i]
	load.32     %r15544 <- 0[l]
	push.64*    %r15542
	push.32     %r15543
	push.32     %r15544
	call        set2
	br          .L3558

.L3557:
	load.64*    %r15545 <- 0[L]
	push.64*    %r15545
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r15546 <- 0[L]
	load.32     %r15547 <- 0[u]
	push.64*    %r15546
	push.32     $1
	push.32     %r15547
	call        lua_rawgeti
	load.64*    %r15548 <- 0[L]
	push.64*    %r15548
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15549 <- sort_comp
	br          %r15549, .L3559, .L3560

.L3559:
	load.64*    %r15550 <- 0[L]
	load.32     %r15551 <- 0[i]
	load.32     %r15552 <- 0[u]
	push.64*    %r15550
	push.32     %r15551
	push.32     %r15552
	call        set2
	br          .L3561

.L3560:
	load.64*    %r15553 <- 0[L]
	push.64*    %r15553
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3561

.L3561:
	br          .L3558

.L3558:
	load.32     %r15554 <- 0[u]
	load.32     %r15555 <- 0[l]
	sub.32      %r15556 <- %r15554, %r15555
	seteq.32    %r15557 <- %r15556, $2
	br          %r15557, .L3562, .L3563

.L3562:
	br          .L3549

.L3563:
	load.64*    %r15558 <- 0[L]
	load.32     %r15559 <- 0[i]
	push.64*    %r15558
	push.32     $1
	push.32     %r15559
	call        lua_rawgeti
	load.64*    %r15560 <- 0[L]
	push.64*    %r15560
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15561 <- 0[L]
	load.32     %r15562 <- 0[u]
	sub.32      %r15563 <- %r15562, $1
	push.64*    %r15561
	push.32     $1
	push.32     %r15563
	call        lua_rawgeti
	load.64*    %r15564 <- 0[L]
	load.32     %r15565 <- 0[i]
	load.32     %r15566 <- 0[u]
	sub.32      %r15567 <- %r15566, $1
	push.64*    %r15564
	push.32     %r15565
	push.32     %r15567
	call        set2
	load.32     %r15568 <- 0[l]
	store.32    %r15568 -> 0[i]
	load.32     %r15569 <- 0[u]
	sub.32      %r15570 <- %r15569, $1
	store.32    %r15570 -> 0[j]
	br          .L3567

.L3567:
	br          .L3564

.L3564:
	br          .L3571

.L3571:
	load.64*    %r15571 <- 0[L]
	load.32     %r15572 <- 0[i]
	add.32      %r15573 <- %r15572, $1
	store.32    %r15573 -> 0[i]
	push.64*    %r15571
	push.32     $1
	push.32     %r15573
	call        lua_rawgeti
	load.64*    %r15574 <- 0[L]
	push.64*    %r15574
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15575 <- sort_comp
	br          %r15575, .L3568, .L3570

.L3568:
	load.32     %r15576 <- 0[i]
	load.32     %r15577 <- 0[u]
	setgt.32    %r15578 <- %r15576, %r15577
	br          %r15578, .L3572, .L3573

.L3572:
	load.64*    %r15579 <- 0[L]
	symaddr.64* %r15580 <- <anon symbol:0x62d0014cba78>
	push.64*    %r15579
	push.64*    %r15580
	call.32     %r15581 <- luaL_error
	br          .L3573

.L3573:
	load.64*    %r15582 <- 0[L]
	push.64*    %r15582
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3569

.L3569:
	br          .L3571

.L3570:
	br          .L3577

.L3577:
	load.64*    %r15583 <- 0[L]
	load.32     %r15584 <- 0[j]
	sub.32      %r15585 <- %r15584, $1
	store.32    %r15585 -> 0[j]
	push.64*    %r15583
	push.32     $1
	push.32     %r15585
	call        lua_rawgeti
	load.64*    %r15586 <- 0[L]
	push.64*    %r15586
	push.32     $0xfffffffd
	push.32     $0xffffffff
	call.32     %r15587 <- sort_comp
	br          %r15587, .L3574, .L3576

.L3574:
	load.32     %r15588 <- 0[j]
	load.32     %r15589 <- 0[l]
	setlt.32    %r15590 <- %r15588, %r15589
	br          %r15590, .L3578, .L3579

.L3578:
	load.64*    %r15591 <- 0[L]
	symaddr.64* %r15592 <- <anon symbol:0x62d0014cbe18>
	push.64*    %r15591
	push.64*    %r15592
	call.32     %r15593 <- luaL_error
	br          .L3579

.L3579:
	load.64*    %r15594 <- 0[L]
	push.64*    %r15594
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3575

.L3575:
	br          .L3577

.L3576:
	load.32     %r15595 <- 0[j]
	load.32     %r15596 <- 0[i]
	setlt.32    %r15597 <- %r15595, %r15596
	br          %r15597, .L3580, .L3581

.L3580:
	load.64*    %r15598 <- 0[L]
	push.64*    %r15598
	push.32     $0xfffffffc
	call        lua_settop
	br          .L3566

.L3581:
	load.64*    %r15599 <- 0[L]
	load.32     %r15600 <- 0[i]
	load.32     %r15601 <- 0[j]
	push.64*    %r15599
	push.32     %r15600
	push.32     %r15601
	call        set2
	br          .L3565

.L3565:
	br          .L3567

.L3566:
	load.64*    %r15602 <- 0[L]
	load.32     %r15603 <- 0[u]
	sub.32      %r15604 <- %r15603, $1
	push.64*    %r15602
	push.32     $1
	push.32     %r15604
	call        lua_rawgeti
	load.64*    %r15605 <- 0[L]
	load.32     %r15606 <- 0[i]
	push.64*    %r15605
	push.32     $1
	push.32     %r15606
	call        lua_rawgeti
	load.64*    %r15607 <- 0[L]
	load.32     %r15608 <- 0[u]
	sub.32      %r15609 <- %r15608, $1
	load.32     %r15610 <- 0[i]
	push.64*    %r15607
	push.32     %r15609
	push.32     %r15610
	call        set2
	load.32     %r15611 <- 0[i]
	load.32     %r15612 <- 0[l]
	sub.32      %r15613 <- %r15611, %r15612
	load.32     %r15614 <- 0[u]
	load.32     %r15615 <- 0[i]
	sub.32      %r15616 <- %r15614, %r15615
	setlt.32    %r15617 <- %r15613, %r15616
	br          %r15617, .L3582, .L3583

.L3582:
	load.32     %r15618 <- 0[l]
	store.32    %r15618 -> 0[j]
	load.32     %r15619 <- 0[i]
	sub.32      %r15620 <- %r15619, $1
	store.32    %r15620 -> 0[i]
	load.32     %r15621 <- 0[i]
	add.32      %r15622 <- %r15621, $2
	store.32    %r15622 -> 0[l]
	br          .L3584

.L3583:
	load.32     %r15623 <- 0[i]
	add.32      %r15624 <- %r15623, $1
	store.32    %r15624 -> 0[j]
	load.32     %r15625 <- 0[u]
	store.32    %r15625 -> 0[i]
	load.32     %r15626 <- 0[j]
	sub.32      %r15627 <- %r15626, $2
	store.32    %r15627 -> 0[u]
	br          .L3584

.L3584:
	load.64*    %r15628 <- 0[L]
	load.32     %r15629 <- 0[j]
	load.32     %r15630 <- 0[i]
	push.64*    %r15628
	push.32     %r15629
	push.32     %r15630
	call        auxsort
	br          .L3548

.L3548:
	br          .L3550

.L3549:
	ret


sort:
.L3585:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15631 <- 0[L]
	push.64*    %r15631
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15632 <- 0[L]
	push.64*    %r15632
	push.32     $1
	call.64     %r15633 <- lua_objlen
	cast.32     %r15634 <- (64) %r15633
	store.32    %r15634 -> 0[n]
	load.64*    %r15635 <- 0[L]
	symaddr.64* %r15636 <- <anon symbol:0x62d0014cc1b8>
	push.64*    %r15635
	push.32     $40
	push.64*    %r15636
	call        luaL_checkstack
	load.64*    %r15637 <- 0[L]
	push.64*    %r15637
	push.32     $2
	call.32     %r15638 <- lua_type
	setle.32    %r15639 <- %r15638, $0
	br          %r15639, .L3587, .L3586

.L3586:
	load.64*    %r15640 <- 0[L]
	push.64*    %r15640
	push.32     $2
	push.32     $6
	call        luaL_checktype
	br          .L3587

.L3587:
	load.64*    %r15641 <- 0[L]
	push.64*    %r15641
	push.32     $2
	call        lua_settop
	load.64*    %r15642 <- 0[L]
	load.32     %r15643 <- 0[n]
	push.64*    %r15642
	push.32     $1
	push.32     %r15643
	call        auxsort
	phisrc.32   %phi680(return) <- $0
	br          .L3588

.L3588:
	phi.32      %r15644 <- %phi680(return)
	ret.32      $0


luaopen_table:
.L3589:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15645 <- 0[L]
	symaddr.64* %r15646 <- <anon symbol:0x62d0014cc558>
	symaddr.64* %r15647 <- tab_funcs
	push.64*    %r15645
	push.64*    %r15646
	push.64*    %r15647
	call        luaL_register
	phisrc.32   %phi681(return) <- $1
	br          .L3590

.L3590:
	phi.32      %r15648 <- %phi681(return)
	ret.32      $1


pushresult:
.L3591:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[filename]
	call.64*    %r15649 <- __errno_location
	load.32     %r15650 <- 0[%r15649]
	store.32    %r15650 -> 0[en]
	load.32     %r15651 <- 0[i]
	br          %r15651, .L3592, .L3593

.L3592:
	load.64*    %r15652 <- 0[L]
	push.64*    %r15652
	push.32     $1
	call        lua_pushboolean
	phisrc.32   %phi682(return) <- $1
	br          .L3594

.L3593:
	load.64*    %r15654 <- 0[L]
	push.64*    %r15654
	call        lua_pushnil
	load.64*    %r15655 <- 0[filename]
	br          %r15655, .L3596, .L3597

.L3596:
	load.64*    %r15656 <- 0[L]
	symaddr.64* %r15657 <- <anon symbol:0x62d0014ccbb0>
	load.64*    %r15658 <- 0[filename]
	load.32     %r15659 <- 0[en]
	push.32     %r15659
	call.64*    %r15660 <- strerror
	push.64*    %r15656
	push.64*    %r15657
	push.64*    %r15658
	push.64*    %r15660
	call.64*    %r15661 <- lua_pushfstring
	br          .L3598

.L3597:
	load.64*    %r15662 <- 0[L]
	symaddr.64* %r15663 <- <anon symbol:0x62d0014ccf50>
	load.32     %r15664 <- 0[en]
	push.32     %r15664
	call.64*    %r15665 <- strerror
	push.64*    %r15662
	push.64*    %r15663
	push.64*    %r15665
	call.64*    %r15666 <- lua_pushfstring
	br          .L3598

.L3598:
	load.64*    %r15667 <- 0[L]
	load.32     %r15668 <- 0[en]
	scast.64    %r15669 <- (32) %r15668
	push.64*    %r15667
	push.64     %r15669
	call        lua_pushinteger
	phisrc.32   %phi683(return) <- $3
	br          .L3594

.L3594:
	phi.32      %r15653 <- %phi682(return), %phi683(return)
	ret.32      %r15653


fileerror:
.L3599:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[arg]
	store.64*   %arg3 -> 0[filename]
	load.64*    %r15670 <- 0[L]
	symaddr.64* %r15671 <- <anon symbol:0x62d0014cd2f0>
	load.64*    %r15672 <- 0[filename]
	call.64*    %r15673 <- __errno_location
	load.32     %r15674 <- 0[%r15673]
	push.32     %r15674
	call.64*    %r15675 <- strerror
	push.64*    %r15670
	push.64*    %r15671
	push.64*    %r15672
	push.64*    %r15675
	call.64*    %r15676 <- lua_pushfstring
	load.64*    %r15677 <- 0[L]
	load.32     %r15678 <- 0[arg]
	load.64*    %r15679 <- 0[L]
	push.64*    %r15679
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r15680 <- lua_tolstring
	push.64*    %r15677
	push.32     %r15678
	push.64*    %r15680
	call.32     %r15681 <- luaL_argerror
	br          .L3600

.L3600:
	ret


io_type:
.L3601:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15682 <- 0[L]
	push.64*    %r15682
	push.32     $1
	call        luaL_checkany
	load.64*    %r15683 <- 0[L]
	push.64*    %r15683
	push.32     $1
	call.64*    %r15684 <- lua_touserdata
	store.64*   %r15684 -> 0[ud]
	load.64*    %r15685 <- 0[L]
	symaddr.64* %r15686 <- <anon symbol:0x62d0014cd778>
	push.64*    %r15685
	push.32     $0xffffd8f0
	push.64*    %r15686
	call        lua_getfield
	load.64*    %r15687 <- 0[ud]
	seteq.32    %r15688 <- %r15687, $0
	br          %r15688, .L3602, .L3605

.L3605:
	load.64*    %r15689 <- 0[L]
	push.64*    %r15689
	push.32     $1
	call.32     %r15690 <- lua_getmetatable
	br          %r15690, .L3604, .L3602

.L3604:
	load.64*    %r15691 <- 0[L]
	push.64*    %r15691
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15692 <- lua_rawequal
	br          %r15692, .L3603, .L3602

.L3602:
	load.64*    %r15693 <- 0[L]
	push.64*    %r15693
	call        lua_pushnil
	br          .L3606

.L3603:
	load.64*    %r15694 <- 0[ud]
	ptrcast.64* %r15695 <- (64) %r15694
	load.64*    %r15696 <- 0[%r15695]
	seteq.32    %r15697 <- %r15696, $0
	br          %r15697, .L3607, .L3608

.L3607:
	load.64*    %r15698 <- 0[L]
	symaddr.64* %r15699 <- <anon symbol:0x62d0014cdc00>
	push.64*    %r15698
	push.64*    %r15699
	push.64     $11
	call        lua_pushlstring
	br          .L3609

.L3608:
	load.64*    %r15700 <- 0[L]
	symaddr.64* %r15701 <- <anon symbol:0x62d0014ce170>
	push.64*    %r15700
	push.64*    %r15701
	push.64     $4
	call        lua_pushlstring
	br          .L3609

.L3609:
	br          .L3606

.L3606:
	phisrc.32   %phi684(return) <- $1
	br          .L3610

.L3610:
	phi.32      %r15702 <- %phi684(return)
	ret.32      $1


tofile:
.L3611:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15703 <- 0[L]
	symaddr.64* %r15704 <- <anon symbol:0x62d0014ce6e0>
	push.64*    %r15703
	push.32     $1
	push.64*    %r15704
	call.64*    %r15705 <- luaL_checkudata
	ptrcast.64* %r15706 <- (64) %r15705
	store.64*   %r15706 -> 0[f]
	load.64*    %r15707 <- 0[f]
	load.64*    %r15708 <- 0[%r15707]
	seteq.32    %r15709 <- %r15708, $0
	br          %r15709, .L3612, .L3613

.L3612:
	load.64*    %r15710 <- 0[L]
	symaddr.64* %r15711 <- <anon symbol:0x62d0014ceb68>
	push.64*    %r15710
	push.64*    %r15711
	call.32     %r15712 <- luaL_error
	br          .L3613

.L3613:
	load.64*    %r15713 <- 0[f]
	load.64*    %r15714 <- 0[%r15713]
	phisrc.64*  %phi685(return) <- %r15714
	br          .L3614

.L3614:
	phi.64*     %r15715 <- %phi685(return)
	ret.64*     %r15714


newfile:
.L3615:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15716 <- 0[L]
	push.64*    %r15716
	push.64     $8
	call.64*    %r15717 <- lua_newuserdata
	ptrcast.64* %r15718 <- (64) %r15717
	store.64*   %r15718 -> 0[pf]
	load.64*    %r15719 <- 0[pf]
	store.64*   $0 -> 0[%r15719]
	load.64*    %r15720 <- 0[L]
	symaddr.64* %r15721 <- <anon symbol:0x62d0014cf0d8>
	push.64*    %r15720
	push.32     $0xffffd8f0
	push.64*    %r15721
	call        lua_getfield
	load.64*    %r15722 <- 0[L]
	push.64*    %r15722
	push.32     $0xfffffffe
	call.32     %r15723 <- lua_setmetatable
	load.64*    %r15724 <- 0[pf]
	phisrc.64*  %phi686(return) <- %r15724
	br          .L3616

.L3616:
	phi.64*     %r15725 <- %phi686(return)
	ret.64*     %r15724


io_noclose:
.L3617:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15726 <- 0[L]
	push.64*    %r15726
	call        lua_pushnil
	load.64*    %r15727 <- 0[L]
	symaddr.64* %r15728 <- <anon symbol:0x62d0014cf478>
	push.64*    %r15727
	push.64*    %r15728
	push.64     $26
	call        lua_pushlstring
	phisrc.32   %phi687(return) <- $2
	br          .L3618

.L3618:
	phi.32      %r15729 <- %phi687(return)
	ret.32      $2


io_pclose:
.L3619:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15730 <- 0[L]
	symaddr.64* %r15731 <- <anon symbol:0x62d0014cf9e8>
	push.64*    %r15730
	push.32     $1
	push.64*    %r15731
	call.64*    %r15732 <- luaL_checkudata
	ptrcast.64* %r15733 <- (64) %r15732
	store.64*   %r15733 -> 0[p]
	load.64*    %r15734 <- 0[L]
	load.64*    %r15735 <- 0[p]
	load.64*    %r15736 <- 0[%r15735]
	store.32    $0 -> 0[ok]
	load.64*    %r15737 <- 0[p]
	store.64*   $0 -> 0[%r15737]
	load.64*    %r15738 <- 0[L]
	load.32     %r15739 <- 0[ok]
	push.64*    %r15738
	push.32     %r15739
	push.64*    $0
	call.32     %r15740 <- pushresult
	phisrc.32   %phi688(return) <- %r15740
	br          .L3620

.L3620:
	phi.32      %r15741 <- %phi688(return)
	ret.32      %r15740


io_fclose:
.L3621:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15742 <- 0[L]
	symaddr.64* %r15743 <- <anon symbol:0x62d0014cff58>
	push.64*    %r15742
	push.32     $1
	push.64*    %r15743
	call.64*    %r15744 <- luaL_checkudata
	ptrcast.64* %r15745 <- (64) %r15744
	store.64*   %r15745 -> 0[p]
	load.64*    %r15746 <- 0[p]
	load.64*    %r15747 <- 0[%r15746]
	push.64*    %r15747
	call.32     %r15748 <- fclose
	seteq.32    %r15749 <- %r15748, $0
	store.32    %r15749 -> 0[ok]
	load.64*    %r15750 <- 0[p]
	store.64*   $0 -> 0[%r15750]
	load.64*    %r15751 <- 0[L]
	load.32     %r15752 <- 0[ok]
	push.64*    %r15751
	push.32     %r15752
	push.64*    $0
	call.32     %r15753 <- pushresult
	phisrc.32   %phi689(return) <- %r15753
	br          .L3622

.L3622:
	phi.32      %r15754 <- %phi689(return)
	ret.32      %r15753


aux_close:
.L3623:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15755 <- 0[L]
	push.64*    %r15755
	push.32     $1
	call        lua_getfenv
	load.64*    %r15756 <- 0[L]
	symaddr.64* %r15757 <- <anon symbol:0x62d0014dc500>
	push.64*    %r15756
	push.32     $0xffffffff
	push.64*    %r15757
	call        lua_getfield
	load.64*    %r15758 <- 0[L]
	push.64*    %r15758
	load.64*    %r15759 <- 0[L]
	neg.32      %r15760 <- $1
	push.64*    %r15759
	push.32     %r15760
	call.64*    %r15761 <- lua_tocfunction
	call.32     %r15762 <- %r15761
	phisrc.32   %phi690(return) <- %r15762
	br          .L3624

.L3624:
	phi.32      %r15763 <- %phi690(return)
	ret.32      %r15762


io_close:
.L3625:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15764 <- 0[L]
	push.64*    %r15764
	push.32     $1
	call.32     %r15765 <- lua_type
	seteq.32    %r15766 <- %r15765, $0xffffffff
	br          %r15766, .L3626, .L3627

.L3626:
	load.64*    %r15767 <- 0[L]
	push.64*    %r15767
	push.32     $0xffffd8ef
	push.32     $2
	call        lua_rawgeti
	br          .L3627

.L3627:
	load.64*    %r15768 <- 0[L]
	push.64*    %r15768
	call.64*    %r15769 <- tofile
	load.64*    %r15770 <- 0[L]
	push.64*    %r15770
	call.32     %r15771 <- aux_close
	phisrc.32   %phi691(return) <- %r15771
	br          .L3628

.L3628:
	phi.32      %r15772 <- %phi691(return)
	ret.32      %r15771


io_gc:
.L3629:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15773 <- 0[L]
	symaddr.64* %r15774 <- <anon symbol:0x62d0014dc8a0>
	push.64*    %r15773
	push.32     $1
	push.64*    %r15774
	call.64*    %r15775 <- luaL_checkudata
	ptrcast.64* %r15776 <- (64) %r15775
	load.64*    %r15777 <- 0[%r15776]
	store.64*   %r15777 -> 0[f]
	load.64*    %r15778 <- 0[f]
	setne.32    %r15779 <- %r15778, $0
	br          %r15779, .L3630, .L3631

.L3630:
	load.64*    %r15780 <- 0[L]
	push.64*    %r15780
	call.32     %r15781 <- aux_close
	br          .L3631

.L3631:
	phisrc.32   %phi692(return) <- $0
	br          .L3632

.L3632:
	phi.32      %r15782 <- %phi692(return)
	ret.32      $0


io_open:
.L3633:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15783 <- 0[L]
	push.64*    %r15783
	push.32     $1
	push.64*    $0
	call.64*    %r15784 <- luaL_checklstring
	store.64*   %r15784 -> 0[filename]
	load.64*    %r15785 <- 0[L]
	symaddr.64* %r15786 <- <anon symbol:0x62d0014dcd28>
	push.64*    %r15785
	push.32     $2
	push.64*    %r15786
	push.64*    $0
	call.64*    %r15787 <- luaL_optlstring
	store.64*   %r15787 -> 0[mode]
	load.64*    %r15788 <- 0[L]
	push.64*    %r15788
	call.64*    %r15789 <- newfile
	store.64*   %r15789 -> 0[pf]
	load.64*    %r15790 <- 0[filename]
	load.64*    %r15791 <- 0[mode]
	push.64*    %r15790
	push.64*    %r15791
	call.64*    %r15792 <- fopen
	load.64*    %r15793 <- 0[pf]
	store.64*   %r15792 -> 0[%r15793]
	load.64*    %r15794 <- 0[pf]
	load.64*    %r15795 <- 0[%r15794]
	seteq.32    %r15796 <- %r15795, $0
	br          %r15796, .L3635, .L3636

.L3635:
	load.64*    %r15797 <- 0[L]
	load.64*    %r15798 <- 0[filename]
	push.64*    %r15797
	push.32     $0
	push.64*    %r15798
	call.32     %r15799 <- pushresult
	phisrc.32   %phi693 <- %r15799
	br          .L3637

.L3636:
	phisrc.32   %phi694 <- $1
	br          .L3637

.L3637:
	phi.32      %r15800 <- %phi693, %phi694
	phisrc.32   %phi695(return) <- %r15800
	br          .L3634

.L3634:
	phi.32      %r15801 <- %phi695(return)
	ret.32      %r15800


getiofile:
.L3638:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[findex]
	load.64*    %r15802 <- 0[L]
	load.32     %r15803 <- 0[findex]
	push.64*    %r15802
	push.32     $0xffffd8ef
	push.32     %r15803
	call        lua_rawgeti
	load.64*    %r15804 <- 0[L]
	push.64*    %r15804
	push.32     $0xffffffff
	call.64*    %r15805 <- lua_touserdata
	ptrcast.64* %r15806 <- (64) %r15805
	load.64*    %r15807 <- 0[%r15806]
	store.64*   %r15807 -> 0[f]
	load.64*    %r15808 <- 0[f]
	seteq.32    %r15809 <- %r15808, $0
	br          %r15809, .L3639, .L3640

.L3639:
	load.64*    %r15810 <- 0[L]
	symaddr.64* %r15811 <- <anon symbol:0x62d0014dd380>
	symaddr.64* %r15812 <- fnames
	load.32     %r15813 <- 0[findex]
	sub.32      %r15814 <- %r15813, $1
	scast.64    %r15815 <- (32) %r15814
	muls.64     %r15816 <- %r15815, $8
	add.64*     %r15817 <- %r15812, %r15816
	load.64*    %r15818 <- 0[%r15817]
	push.64*    %r15810
	push.64*    %r15811
	push.64*    %r15818
	call.32     %r15819 <- luaL_error
	br          .L3640

.L3640:
	load.64*    %r15820 <- 0[f]
	phisrc.64*  %phi696(return) <- %r15820
	br          .L3641

.L3641:
	phi.64*     %r15821 <- %phi696(return)
	ret.64*     %r15820


g_iofile:
.L3642:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[f]
	store.64*   %arg3 -> 0[mode]
	load.64*    %r15822 <- 0[L]
	push.64*    %r15822
	push.32     $1
	call.32     %r15823 <- lua_type
	setle.32    %r15824 <- %r15823, $0
	br          %r15824, .L3644, .L3643

.L3643:
	load.64*    %r15825 <- 0[L]
	push.64*    %r15825
	push.32     $1
	push.64*    $0
	call.64*    %r15826 <- lua_tolstring
	store.64*   %r15826 -> 0[filename]
	load.64*    %r15827 <- 0[filename]
	br          %r15827, .L3645, .L3646

.L3645:
	load.64*    %r15828 <- 0[L]
	push.64*    %r15828
	call.64*    %r15829 <- newfile
	store.64*   %r15829 -> 0[pf]
	load.64*    %r15830 <- 0[filename]
	load.64*    %r15831 <- 0[mode]
	push.64*    %r15830
	push.64*    %r15831
	call.64*    %r15832 <- fopen
	load.64*    %r15833 <- 0[pf]
	store.64*   %r15832 -> 0[%r15833]
	load.64*    %r15834 <- 0[pf]
	load.64*    %r15835 <- 0[%r15834]
	seteq.32    %r15836 <- %r15835, $0
	br          %r15836, .L3647, .L3648

.L3647:
	load.64*    %r15837 <- 0[L]
	load.64*    %r15838 <- 0[filename]
	push.64*    %r15837
	push.32     $1
	push.64*    %r15838
	call        fileerror
	br          .L3648

.L3648:
	br          .L3649

.L3646:
	load.64*    %r15839 <- 0[L]
	push.64*    %r15839
	call.64*    %r15840 <- tofile
	load.64*    %r15841 <- 0[L]
	push.64*    %r15841
	push.32     $1
	call        lua_pushvalue
	br          .L3649

.L3649:
	load.64*    %r15842 <- 0[L]
	load.32     %r15843 <- 0[f]
	push.64*    %r15842
	push.32     $0xffffd8ef
	push.32     %r15843
	call        lua_rawseti
	br          .L3644

.L3644:
	load.64*    %r15844 <- 0[L]
	load.32     %r15845 <- 0[f]
	push.64*    %r15844
	push.32     $0xffffd8ef
	push.32     %r15845
	call        lua_rawgeti
	phisrc.32   %phi697(return) <- $1
	br          .L3650

.L3650:
	phi.32      %r15846 <- %phi697(return)
	ret.32      $1


io_input:
.L3651:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15847 <- 0[L]
	symaddr.64* %r15848 <- <anon symbol:0x62d0014ddba8>
	push.64*    %r15847
	push.32     $1
	push.64*    %r15848
	call.32     %r15849 <- g_iofile
	phisrc.32   %phi698(return) <- %r15849
	br          .L3652

.L3652:
	phi.32      %r15850 <- %phi698(return)
	ret.32      %r15849


io_output:
.L3653:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15851 <- 0[L]
	symaddr.64* %r15852 <- <anon symbol:0x62d0014ddf48>
	push.64*    %r15851
	push.32     $2
	push.64*    %r15852
	call.32     %r15853 <- g_iofile
	phisrc.32   %phi699(return) <- %r15853
	br          .L3654

.L3654:
	phi.32      %r15854 <- %phi699(return)
	ret.32      %r15853


aux_lines:
.L3655:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[toclose]
	load.64*    %r15855 <- 0[L]
	load.32     %r15856 <- 0[idx]
	push.64*    %r15855
	push.32     %r15856
	call        lua_pushvalue
	load.64*    %r15857 <- 0[L]
	load.32     %r15858 <- 0[toclose]
	push.64*    %r15857
	push.32     %r15858
	call        lua_pushboolean
	load.64*    %r15859 <- 0[L]
	symaddr.64* %r15860 <- io_readline
	push.64*    %r15859
	push.64*    %r15860
	push.32     $2
	call        lua_pushcclosure
	br          .L3656

.L3656:
	ret


f_lines:
.L3657:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15861 <- 0[L]
	push.64*    %r15861
	call.64*    %r15862 <- tofile
	load.64*    %r15863 <- 0[L]
	push.64*    %r15863
	push.32     $1
	push.32     $0
	call        aux_lines
	phisrc.32   %phi700(return) <- $1
	br          .L3658

.L3658:
	phi.32      %r15864 <- %phi700(return)
	ret.32      $1


io_lines:
.L3659:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15865 <- 0[L]
	push.64*    %r15865
	push.32     $1
	call.32     %r15866 <- lua_type
	setle.32    %r15867 <- %r15866, $0
	br          %r15867, .L3660, .L3661

.L3660:
	load.64*    %r15868 <- 0[L]
	push.64*    %r15868
	push.32     $0xffffd8ef
	push.32     $1
	call        lua_rawgeti
	load.64*    %r15869 <- 0[L]
	push.64*    %r15869
	call.32     %r15870 <- f_lines
	phisrc.32   %phi701(return) <- %r15870
	br          .L3662

.L3661:
	load.64*    %r15872 <- 0[L]
	push.64*    %r15872
	push.32     $1
	push.64*    $0
	call.64*    %r15873 <- luaL_checklstring
	store.64*   %r15873 -> 0[filename]
	load.64*    %r15874 <- 0[L]
	push.64*    %r15874
	call.64*    %r15875 <- newfile
	store.64*   %r15875 -> 0[pf]
	load.64*    %r15876 <- 0[filename]
	symaddr.64* %r15877 <- <anon symbol:0x62d0014deeb0>
	push.64*    %r15876
	push.64*    %r15877
	call.64*    %r15878 <- fopen
	load.64*    %r15879 <- 0[pf]
	store.64*   %r15878 -> 0[%r15879]
	load.64*    %r15880 <- 0[pf]
	load.64*    %r15881 <- 0[%r15880]
	seteq.32    %r15882 <- %r15881, $0
	br          %r15882, .L3664, .L3665

.L3664:
	load.64*    %r15883 <- 0[L]
	load.64*    %r15884 <- 0[filename]
	push.64*    %r15883
	push.32     $1
	push.64*    %r15884
	call        fileerror
	br          .L3665

.L3665:
	load.64*    %r15885 <- 0[L]
	load.64*    %r15886 <- 0[L]
	push.64*    %r15886
	call.32     %r15887 <- lua_gettop
	push.64*    %r15885
	push.32     %r15887
	push.32     $1
	call        aux_lines
	phisrc.32   %phi702(return) <- $1
	br          .L3662

.L3662:
	phi.32      %r15871 <- %phi701(return), %phi702(return)
	ret.32      %r15871


read_number:
.L3666:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15888 <- 0[f]
	symaddr.64* %r15889 <- <anon symbol:0x62d0014df338>
	symaddr.64* %r15890 <- d
	push.64*    %r15888
	push.64*    %r15889
	push.64*    %r15890
	call.32     %r15891 <- fscanf
	seteq.32    %r15892 <- %r15891, $1
	br          %r15892, .L3667, .L3668

.L3667:
	load.64*    %r15893 <- 0[L]
	load.f64    %r15894 <- 0[d]
	push.64*    %r15893
	push.f64    %r15894
	call        lua_pushnumber
	phisrc.32   %phi703(return) <- $1
	br          .L3669

.L3668:
	load.64*    %r15896 <- 0[L]
	push.64*    %r15896
	call        lua_pushnil
	phisrc.32   %phi704(return) <- $0
	br          .L3669

.L3669:
	phi.32      %r15895 <- %phi703(return), %phi704(return)
	ret.32      %r15895


test_eof:
.L3671:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15897 <- 0[f]
	push.64*    %r15897
	call.32     %r15898 <- _IO_getc
	store.32    %r15898 -> 0[c]
	load.32     %r15899 <- 0[c]
	load.64*    %r15900 <- 0[f]
	push.32     %r15899
	push.64*    %r15900
	call.32     %r15901 <- ungetc
	load.64*    %r15902 <- 0[L]
	push.64*    %r15902
	push.64*    $0
	push.64     $0
	call        lua_pushlstring
	load.32     %r15903 <- 0[c]
	setne.32    %r15904 <- %r15903, $0xffffffff
	phisrc.32   %phi705(return) <- %r15904
	br          .L3672

.L3672:
	phi.32      %r15905 <- %phi705(return)
	ret.32      %r15904


read_line:
.L3673:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15906 <- 0[L]
	symaddr.64* %r15907 <- b
	push.64*    %r15906
	push.64*    %r15907
	call        luaL_buffinit
	br          .L3677

.L3677:
	br          .L3674

.L3674:
	symaddr.64* %r15908 <- b
	push.64*    %r15908
	call.64*    %r15909 <- luaL_prepbuffer
	store.64*   %r15909 -> 0[p]
	load.64*    %r15910 <- 0[p]
	load.64*    %r15911 <- 0[f]
	push.64*    %r15910
	push.32     $0x2000
	push.64*    %r15911
	call.64*    %r15912 <- fgets
	seteq.32    %r15913 <- %r15912, $0
	br          %r15913, .L3678, .L3679

.L3678:
	symaddr.64* %r15914 <- b
	push.64*    %r15914
	call        luaL_pushresult
	load.64*    %r15915 <- 0[L]
	push.64*    %r15915
	push.32     $0xffffffff
	call.64     %r15916 <- lua_objlen
	seta.32     %r15917 <- %r15916, $0
	phisrc.32   %phi706(return) <- %r15917
	br          .L3680

.L3679:
	load.64*    %r15919 <- 0[p]
	push.64*    %r15919
	call.64     %r15920 <- strlen
	store.64    %r15920 -> 0[l]
	load.64     %r15921 <- 0[l]
	seteq.32    %r15922 <- %r15921, $0
	br          %r15922, .L3681, .L3683

.L3683:
	load.64*    %r15923 <- 0[p]
	load.64     %r15924 <- 0[l]
	sub.64      %r15925 <- %r15924, $1
	add.64*     %r15926 <- %r15923, %r15925
	load.8      %r15927 <- 0[%r15926]
	scast.32    %r15928 <- (8) %r15927
	setne.32    %r15929 <- %r15928, $10
	br          %r15929, .L3681, .L3682

.L3681:
	load.64     %r15930 <- 0[l]
	load.64*    %r15931 <- 0[b]
	cast.64     %r15932 <- (64) %r15931
	add.64      %r15933 <- %r15932, %r15930
	ptrcast.64* %r15934 <- (64) %r15933
	store.64*   %r15934 -> 0[b]
	br          .L3684

.L3682:
	load.64     %r15935 <- 0[l]
	sub.64      %r15936 <- %r15935, $1
	load.64*    %r15937 <- 0[b]
	cast.64     %r15938 <- (64) %r15937
	add.64      %r15939 <- %r15938, %r15936
	ptrcast.64* %r15940 <- (64) %r15939
	store.64*   %r15940 -> 0[b]
	symaddr.64* %r15941 <- b
	push.64*    %r15941
	call        luaL_pushresult
	phisrc.32   %phi707(return) <- $1
	br          .L3680

.L3684:
	br          .L3675

.L3675:
	br          .L3677

.L3680:
	phi.32      %r15918 <- %phi706(return), %phi707(return)
	ret.32      %r15918


read_chars:
.L3685:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64    %arg3 -> 0[n]
	load.64*    %r15942 <- 0[L]
	symaddr.64* %r15943 <- b
	push.64*    %r15942
	push.64*    %r15943
	call        luaL_buffinit
	store.64    $0x2000 -> 0[rlen]
	br          .L3686

.L3686:
	symaddr.64* %r15944 <- b
	push.64*    %r15944
	call.64*    %r15945 <- luaL_prepbuffer
	store.64*   %r15945 -> 0[p]
	load.64     %r15946 <- 0[rlen]
	load.64     %r15947 <- 0[n]
	seta.32     %r15948 <- %r15946, %r15947
	br          %r15948, .L3689, .L3690

.L3689:
	load.64     %r15949 <- 0[n]
	store.64    %r15949 -> 0[rlen]
	br          .L3690

.L3690:
	load.64*    %r15950 <- 0[p]
	cast.64*    %r15951 <- (64) %r15950
	load.64     %r15952 <- 0[rlen]
	load.64*    %r15953 <- 0[f]
	push.64*    %r15951
	push.64     $1
	push.64     %r15952
	push.64*    %r15953
	call.64     %r15954 <- fread
	store.64    %r15954 -> 0[nr]
	load.64     %r15955 <- 0[nr]
	load.64*    %r15956 <- 0[b]
	cast.64     %r15957 <- (64) %r15956
	add.64      %r15958 <- %r15957, %r15955
	ptrcast.64* %r15959 <- (64) %r15958
	store.64*   %r15959 -> 0[b]
	load.64     %r15960 <- 0[nr]
	load.64     %r15961 <- 0[n]
	cast.64     %r15962 <- (64) %r15961
	sub.64      %r15963 <- %r15962, %r15960
	cast.64     %r15964 <- (64) %r15963
	store.64    %r15964 -> 0[n]
	br          .L3687

.L3687:
	load.64     %r15965 <- 0[n]
	seta.32     %r15966 <- %r15965, $0
	load.64     %r15967 <- 0[nr]
	load.64     %r15968 <- 0[rlen]
	seteq.32    %r15969 <- %r15967, %r15968
	and-bool.32 %r15970 <- %r15966, %r15969
	br          %r15970, .L3686, .L3688

.L3688:
	symaddr.64* %r15971 <- b
	push.64*    %r15971
	call        luaL_pushresult
	load.64     %r15972 <- 0[n]
	seteq.32    %r15973 <- %r15972, $0
	br          %r15973, .L3692, .L3693

.L3692:
	phisrc.32   %phi708 <- $1
	br          .L3694

.L3693:
	load.64*    %r15974 <- 0[L]
	push.64*    %r15974
	push.32     $0xffffffff
	call.64     %r15975 <- lua_objlen
	seta.32     %r15976 <- %r15975, $0
	phisrc.32   %phi709 <- %r15976
	br          .L3694

.L3694:
	phi.32      %r15977 <- %phi708, %phi709
	phisrc.32   %phi710(return) <- %r15977
	br          .L3691

.L3691:
	phi.32      %r15978 <- %phi710(return)
	ret.32      %r15977


g_read:
.L3695:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[first]
	load.64*    %r15979 <- 0[L]
	push.64*    %r15979
	call.32     %r15980 <- lua_gettop
	sub.32      %r15981 <- %r15980, $1
	store.32    %r15981 -> 0[nargs]
	load.64*    %r15982 <- 0[f]
	push.64*    %r15982
	call        clearerr
	load.32     %r15983 <- 0[nargs]
	seteq.32    %r15984 <- %r15983, $0
	br          %r15984, .L3696, .L3697

.L3696:
	load.64*    %r15985 <- 0[L]
	load.64*    %r15986 <- 0[f]
	push.64*    %r15985
	push.64*    %r15986
	call.32     %r15987 <- read_line
	store.32    %r15987 -> 0[success]
	load.32     %r15988 <- 0[first]
	add.32      %r15989 <- %r15988, $1
	store.32    %r15989 -> 0[n]
	br          .L3698

.L3697:
	load.64*    %r15990 <- 0[L]
	load.32     %r15991 <- 0[nargs]
	add.32      %r15992 <- %r15991, $20
	symaddr.64* %r15993 <- <anon symbol:0x62d0014e0e68>
	push.64*    %r15990
	push.32     %r15992
	push.64*    %r15993
	call        luaL_checkstack
	store.32    $1 -> 0[success]
	load.32     %r15994 <- 0[first]
	store.32    %r15994 -> 0[n]
	br          .L3702

.L3702:
	load.32     %r15995 <- 0[nargs]
	sub.32      %r15996 <- %r15995, $1
	store.32    %r15996 -> 0[nargs]
	load.32     %r15997 <- 0[success]
	and-bool.32 %r15998 <- %r15995, %r15997
	br          %r15998, .L3699, .L3701

.L3699:
	load.64*    %r15999 <- 0[L]
	load.32     %r16000 <- 0[n]
	push.64*    %r15999
	push.32     %r16000
	call.32     %r16001 <- lua_type
	seteq.32    %r16002 <- %r16001, $3
	br          %r16002, .L3703, .L3704

.L3703:
	load.64*    %r16003 <- 0[L]
	load.32     %r16004 <- 0[n]
	push.64*    %r16003
	push.32     %r16004
	call.64     %r16005 <- lua_tointeger
	scast.64    %r16006 <- (64) %r16005
	store.64    %r16006 -> 0[l]
	load.64     %r16007 <- 0[l]
	seteq.32    %r16008 <- %r16007, $0
	br          %r16008, .L3705, .L3706

.L3705:
	load.64*    %r16009 <- 0[L]
	load.64*    %r16010 <- 0[f]
	push.64*    %r16009
	push.64*    %r16010
	call.32     %r16011 <- test_eof
	phisrc.32   %phi711 <- %r16011
	br          .L3707

.L3706:
	load.64*    %r16012 <- 0[L]
	load.64*    %r16013 <- 0[f]
	load.64     %r16014 <- 0[l]
	push.64*    %r16012
	push.64*    %r16013
	push.64     %r16014
	call.32     %r16015 <- read_chars
	phisrc.32   %phi712 <- %r16015
	br          .L3707

.L3707:
	phi.32      %r16016 <- %phi711, %phi712
	store.32    %r16016 -> 0[success]
	br          .L3708

.L3704:
	load.64*    %r16017 <- 0[L]
	load.32     %r16018 <- 0[n]
	push.64*    %r16017
	push.32     %r16018
	push.64*    $0
	call.64*    %r16019 <- lua_tolstring
	store.64*   %r16019 -> 0[p]
	load.64*    %r16020 <- 0[p]
	br          %r16020, .L3712, .L3710

.L3712:
	load.64*    %r16021 <- 0[p]
	load.8      %r16022 <- 0[%r16021]
	scast.32    %r16023 <- (8) %r16022
	seteq.32    %r16024 <- %r16023, $42
	br          %r16024, .L3709, .L3710

.L3709:
	phisrc.32   %phi713 <- $1
	br          .L3711

.L3710:
	load.64*    %r16025 <- 0[L]
	load.32     %r16026 <- 0[n]
	symaddr.64* %r16027 <- <anon symbol:0x62d0014e12f0>
	push.64*    %r16025
	push.32     %r16026
	push.64*    %r16027
	call.32     %r16028 <- luaL_argerror
	phisrc.32   %phi714 <- %r16028
	br          .L3711

.L3711:
	phi.32      %r16029 <- %phi713, %phi714
	load.64*    %r16030 <- 0[p]
	load.8      %r16031 <- 1[%r16030]
	switch.8    %r16031, 97 -> .L3716, 108 -> .L3715, 110 -> .L3714, default -> .L3717

.L3714:
	load.64*    %r16032 <- 0[L]
	load.64*    %r16033 <- 0[f]
	push.64*    %r16032
	push.64*    %r16033
	call.32     %r16034 <- read_number
	store.32    %r16034 -> 0[success]
	br          .L3713

.L3715:
	load.64*    %r16035 <- 0[L]
	load.64*    %r16036 <- 0[f]
	push.64*    %r16035
	push.64*    %r16036
	call.32     %r16037 <- read_line
	store.32    %r16037 -> 0[success]
	br          .L3713

.L3716:
	load.64*    %r16038 <- 0[L]
	load.64*    %r16039 <- 0[f]
	push.64*    %r16038
	push.64*    %r16039
	push.64     $-1
	call.32     %r16040 <- read_chars
	store.32    $1 -> 0[success]
	br          .L3713

.L3717:
	load.64*    %r16041 <- 0[L]
	load.32     %r16042 <- 0[n]
	symaddr.64* %r16043 <- <anon symbol:0x62d0014e1778>
	push.64*    %r16041
	push.32     %r16042
	push.64*    %r16043
	call.32     %r16044 <- luaL_argerror
	phisrc.32   %phi715(return) <- %r16044
	br          .L3718

.L3713:
	br          .L3708

.L3708:
	br          .L3700

.L3700:
	load.32     %r16046 <- 0[n]
	add.32      %r16047 <- %r16046, $1
	store.32    %r16047 -> 0[n]
	br          .L3702

.L3701:
	br          .L3698

.L3698:
	load.64*    %r16048 <- 0[f]
	push.64*    %r16048
	call.32     %r16049 <- ferror
	br          %r16049, .L3719, .L3720

.L3719:
	load.64*    %r16050 <- 0[L]
	push.64*    %r16050
	push.32     $0
	push.64*    $0
	call.32     %r16051 <- pushresult
	phisrc.32   %phi716(return) <- %r16051
	br          .L3718

.L3720:
	load.32     %r16052 <- 0[success]
	br          %r16052, .L3722, .L3721

.L3721:
	load.64*    %r16053 <- 0[L]
	push.64*    %r16053
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r16054 <- 0[L]
	push.64*    %r16054
	call        lua_pushnil
	br          .L3722

.L3722:
	load.32     %r16055 <- 0[n]
	load.32     %r16056 <- 0[first]
	sub.32      %r16057 <- %r16055, %r16056
	phisrc.32   %phi717(return) <- %r16057
	br          .L3718

.L3718:
	phi.32      %r16045 <- %phi715(return), %phi716(return), %phi717(return)
	ret.32      %r16045


io_read:
.L3723:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16058 <- 0[L]
	load.64*    %r16059 <- 0[L]
	push.64*    %r16059
	push.32     $1
	call.64*    %r16060 <- getiofile
	push.64*    %r16058
	push.64*    %r16060
	push.32     $1
	call.32     %r16061 <- g_read
	phisrc.32   %phi718(return) <- %r16061
	br          .L3724

.L3724:
	phi.32      %r16062 <- %phi718(return)
	ret.32      %r16061


f_read:
.L3725:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16063 <- 0[L]
	load.64*    %r16064 <- 0[L]
	push.64*    %r16064
	call.64*    %r16065 <- tofile
	push.64*    %r16063
	push.64*    %r16065
	push.32     $2
	call.32     %r16066 <- g_read
	phisrc.32   %phi719(return) <- %r16066
	br          .L3726

.L3726:
	phi.32      %r16067 <- %phi719(return)
	ret.32      %r16066


io_readline:
.L3727:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16068 <- 0[L]
	push.64*    %r16068
	push.32     $0xffffd8ed
	call.64*    %r16069 <- lua_touserdata
	ptrcast.64* %r16070 <- (64) %r16069
	load.64*    %r16071 <- 0[%r16070]
	store.64*   %r16071 -> 0[f]
	load.64*    %r16072 <- 0[f]
	seteq.32    %r16073 <- %r16072, $0
	br          %r16073, .L3728, .L3729

.L3728:
	load.64*    %r16074 <- 0[L]
	symaddr.64* %r16075 <- <anon symbol:0x62d0014de3d0>
	push.64*    %r16074
	push.64*    %r16075
	call.32     %r16076 <- luaL_error
	br          .L3729

.L3729:
	load.64*    %r16077 <- 0[L]
	load.64*    %r16078 <- 0[f]
	push.64*    %r16077
	push.64*    %r16078
	call.32     %r16079 <- read_line
	store.32    %r16079 -> 0[sucess]
	load.64*    %r16080 <- 0[f]
	push.64*    %r16080
	call.32     %r16081 <- ferror
	br          %r16081, .L3730, .L3731

.L3730:
	load.64*    %r16082 <- 0[L]
	symaddr.64* %r16083 <- <anon symbol:0x62d0014de770>
	call.64*    %r16084 <- __errno_location
	load.32     %r16085 <- 0[%r16084]
	push.32     %r16085
	call.64*    %r16086 <- strerror
	push.64*    %r16082
	push.64*    %r16083
	push.64*    %r16086
	call.32     %r16087 <- luaL_error
	phisrc.32   %phi720(return) <- %r16087
	br          .L3732

.L3731:
	load.32     %r16089 <- 0[sucess]
	br          %r16089, .L3733, .L3734

.L3733:
	phisrc.32   %phi721(return) <- $1
	br          .L3732

.L3734:
	load.64*    %r16090 <- 0[L]
	push.64*    %r16090
	push.32     $0xffffd8ec
	call.32     %r16091 <- lua_toboolean
	br          %r16091, .L3736, .L3737

.L3736:
	load.64*    %r16092 <- 0[L]
	push.64*    %r16092
	push.32     $0
	call        lua_settop
	load.64*    %r16093 <- 0[L]
	push.64*    %r16093
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r16094 <- 0[L]
	push.64*    %r16094
	call.32     %r16095 <- aux_close
	br          .L3737

.L3737:
	phisrc.32   %phi722(return) <- $0
	br          .L3732

.L3732:
	phi.32      %r16088 <- %phi720(return), %phi721(return), %phi722(return)
	ret.32      %r16088


g_write:
.L3738:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[arg]
	load.64*    %r16096 <- 0[L]
	push.64*    %r16096
	call.32     %r16097 <- lua_gettop
	sub.32      %r16098 <- %r16097, $1
	store.32    %r16098 -> 0[nargs]
	store.32    $1 -> 0[status]
	br          .L3742

.L3742:
	load.32     %r16099 <- 0[nargs]
	sub.32      %r16100 <- %r16099, $1
	store.32    %r16100 -> 0[nargs]
	br          %r16099, .L3739, .L3741

.L3739:
	load.64*    %r16101 <- 0[L]
	load.32     %r16102 <- 0[arg]
	push.64*    %r16101
	push.32     %r16102
	call.32     %r16103 <- lua_type
	seteq.32    %r16104 <- %r16103, $3
	br          %r16104, .L3743, .L3744

.L3743:
	load.32     %r16105 <- 0[status]
	br          %r16105, .L3745, .L3746

.L3745:
	load.64*    %r16106 <- 0[f]
	symaddr.64* %r16107 <- <anon symbol:0x62d0014e1b18>
	load.64*    %r16108 <- 0[L]
	load.32     %r16109 <- 0[arg]
	push.64*    %r16108
	push.32     %r16109
	call.f64    %r16110 <- lua_tonumber
	push.64*    %r16106
	push.64*    %r16107
	push.f64    %r16110
	call.32     %r16111 <- fprintf
	setgt.32    %r16112 <- %r16111, $0
	phisrc.32   %phi723 <- %r16112
	br          .L3747

.L3746:
	phisrc.32   %phi724 <- $0
	br          .L3747

.L3747:
	phi.32      %r16113 <- %phi723, %phi724
	store.32    %r16113 -> 0[status]
	br          .L3748

.L3744:
	load.64*    %r16114 <- 0[L]
	load.32     %r16115 <- 0[arg]
	symaddr.64* %r16116 <- l
	push.64*    %r16114
	push.32     %r16115
	push.64*    %r16116
	call.64*    %r16117 <- luaL_checklstring
	store.64*   %r16117 -> 0[s]
	load.32     %r16118 <- 0[status]
	br          %r16118, .L3749, .L3750

.L3749:
	load.64*    %r16119 <- 0[s]
	cast.64*    %r16120 <- (64) %r16119
	load.64     %r16121 <- 0[l]
	load.64*    %r16122 <- 0[f]
	push.64*    %r16120
	push.64     $1
	push.64     %r16121
	push.64*    %r16122
	call.64     %r16123 <- fwrite
	load.64     %r16124 <- 0[l]
	seteq.32    %r16125 <- %r16123, %r16124
	phisrc.32   %phi725 <- %r16125
	br          .L3751

.L3750:
	phisrc.32   %phi726 <- $0
	br          .L3751

.L3751:
	phi.32      %r16126 <- %phi725, %phi726
	store.32    %r16126 -> 0[status]
	br          .L3748

.L3748:
	br          .L3740

.L3740:
	load.32     %r16127 <- 0[arg]
	add.32      %r16128 <- %r16127, $1
	store.32    %r16128 -> 0[arg]
	br          .L3742

.L3741:
	load.64*    %r16129 <- 0[L]
	load.32     %r16130 <- 0[status]
	push.64*    %r16129
	push.32     %r16130
	push.64*    $0
	call.32     %r16131 <- pushresult
	phisrc.32   %phi727(return) <- %r16131
	br          .L3752

.L3752:
	phi.32      %r16132 <- %phi727(return)
	ret.32      %r16131


io_write:
.L3753:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16133 <- 0[L]
	load.64*    %r16134 <- 0[L]
	push.64*    %r16134
	push.32     $2
	call.64*    %r16135 <- getiofile
	push.64*    %r16133
	push.64*    %r16135
	push.32     $1
	call.32     %r16136 <- g_write
	phisrc.32   %phi728(return) <- %r16136
	br          .L3754

.L3754:
	phi.32      %r16137 <- %phi728(return)
	ret.32      %r16136


f_write:
.L3755:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16138 <- 0[L]
	load.64*    %r16139 <- 0[L]
	push.64*    %r16139
	call.64*    %r16140 <- tofile
	push.64*    %r16138
	push.64*    %r16140
	push.32     $2
	call.32     %r16141 <- g_write
	phisrc.32   %phi729(return) <- %r16141
	br          .L3756

.L3756:
	phi.32      %r16142 <- %phi729(return)
	ret.32      %r16141


io_flush:
.L3757:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16143 <- 0[L]
	load.64*    %r16144 <- 0[L]
	push.64*    %r16144
	push.32     $2
	call.64*    %r16145 <- getiofile
	push.64*    %r16145
	call.32     %r16146 <- fflush
	seteq.32    %r16147 <- %r16146, $0
	push.64*    %r16143
	push.32     %r16147
	push.64*    $0
	call.32     %r16148 <- pushresult
	phisrc.32   %phi730(return) <- %r16148
	br          .L3758

.L3758:
	phi.32      %r16149 <- %phi730(return)
	ret.32      %r16148


f_flush:
.L3759:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16150 <- 0[L]
	load.64*    %r16151 <- 0[L]
	push.64*    %r16151
	call.64*    %r16152 <- tofile
	push.64*    %r16152
	call.32     %r16153 <- fflush
	seteq.32    %r16154 <- %r16153, $0
	push.64*    %r16150
	push.32     %r16154
	push.64*    $0
	call.32     %r16155 <- pushresult
	phisrc.32   %phi731(return) <- %r16155
	br          .L3760

.L3760:
	phi.32      %r16156 <- %phi731(return)
	ret.32      %r16155


createmeta:
.L3761:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16157 <- 0[L]
	symaddr.64* %r16158 <- <anon symbol:0x62d0014e2088>
	push.64*    %r16157
	push.64*    %r16158
	call.32     %r16159 <- luaL_newmetatable
	load.64*    %r16160 <- 0[L]
	push.64*    %r16160
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r16161 <- 0[L]
	symaddr.64* %r16162 <- <anon symbol:0x62d0014e2428>
	push.64*    %r16161
	push.32     $0xfffffffe
	push.64*    %r16162
	call        lua_setfield
	load.64*    %r16163 <- 0[L]
	symaddr.64* %r16164 <- flib
	push.64*    %r16163
	push.64*    $0
	push.64*    %r16164
	call        luaL_register
	br          .L3762

.L3762:
	ret


createstdfile:
.L3763:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[k]
	store.64*   %arg4 -> 0[fname]
	load.64*    %r16165 <- 0[f]
	load.64*    %r16166 <- 0[L]
	push.64*    %r16166
	call.64*    %r16167 <- newfile
	store.64*   %r16165 -> 0[%r16167]
	load.32     %r16168 <- 0[k]
	setgt.32    %r16169 <- %r16168, $0
	br          %r16169, .L3764, .L3765

.L3764:
	load.64*    %r16170 <- 0[L]
	push.64*    %r16170
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r16171 <- 0[L]
	load.32     %r16172 <- 0[k]
	push.64*    %r16171
	push.32     $0xffffd8ef
	push.32     %r16172
	call        lua_rawseti
	br          .L3765

.L3765:
	load.64*    %r16173 <- 0[L]
	push.64*    %r16173
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r16174 <- 0[L]
	push.64*    %r16174
	push.32     $0xfffffffe
	call.32     %r16175 <- lua_setfenv
	load.64*    %r16176 <- 0[L]
	load.64*    %r16177 <- 0[fname]
	push.64*    %r16176
	push.32     $0xfffffffd
	push.64*    %r16177
	call        lua_setfield
	br          .L3766

.L3766:
	ret


newfenv:
.L3767:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[cls]
	load.64*    %r16178 <- 0[L]
	push.64*    %r16178
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r16179 <- 0[L]
	load.64*    %r16180 <- 0[cls]
	push.64*    %r16179
	push.64*    %r16180
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r16181 <- 0[L]
	symaddr.64* %r16182 <- <anon symbol:0x62d0014e2a80>
	push.64*    %r16181
	push.32     $0xfffffffe
	push.64*    %r16182
	call        lua_setfield
	br          .L3768

.L3768:
	ret


luaopen_io:
.L3769:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16183 <- 0[L]
	push.64*    %r16183
	call        createmeta
	load.64*    %r16184 <- 0[L]
	symaddr.64* %r16185 <- io_fclose
	push.64*    %r16184
	push.64*    %r16185
	call        newfenv
	load.64*    %r16186 <- 0[L]
	push.64*    %r16186
	push.32     $0xffffd8ef
	call        lua_replace
	load.64*    %r16187 <- 0[L]
	symaddr.64* %r16188 <- <anon symbol:0x62d0014e2ff0>
	symaddr.64* %r16189 <- iolib
	push.64*    %r16187
	push.64*    %r16188
	push.64*    %r16189
	call        luaL_register
	load.64*    %r16190 <- 0[L]
	symaddr.64* %r16191 <- io_noclose
	push.64*    %r16190
	push.64*    %r16191
	call        newfenv
	load.64*    %r16192 <- 0[L]
	load.64*    %r16193 <- 0[stdin]
	symaddr.64* %r16194 <- <anon symbol:0x62d0014e3730>
	push.64*    %r16192
	push.64*    %r16193
	push.32     $1
	push.64*    %r16194
	call        createstdfile
	load.64*    %r16195 <- 0[L]
	load.64*    %r16196 <- 0[stdout]
	symaddr.64* %r16197 <- <anon symbol:0x62d0014e3ad0>
	push.64*    %r16195
	push.64*    %r16196
	push.32     $2
	push.64*    %r16197
	call        createstdfile
	load.64*    %r16198 <- 0[L]
	load.64*    %r16199 <- 0[stderr]
	symaddr.64* %r16200 <- <anon symbol:0x62d0014e3e70>
	push.64*    %r16198
	push.64*    %r16199
	push.32     $0
	push.64*    %r16200
	call        createstdfile
	load.64*    %r16201 <- 0[L]
	push.64*    %r16201
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r16202 <- 0[L]
	symaddr.64* %r16203 <- <anon symbol:0x62d0014e4210>
	push.64*    %r16202
	push.32     $0xffffffff
	push.64*    %r16203
	call        lua_getfield
	load.64*    %r16204 <- 0[L]
	symaddr.64* %r16205 <- io_pclose
	push.64*    %r16204
	push.64*    %r16205
	call        newfenv
	load.64*    %r16206 <- 0[L]
	push.64*    %r16206
	push.32     $0xfffffffe
	call.32     %r16207 <- lua_setfenv
	load.64*    %r16208 <- 0[L]
	push.64*    %r16208
	push.32     $0xfffffffe
	call        lua_settop
	phisrc.32   %phi732(return) <- $1
	br          .L3770

.L3770:
	phi.32      %r16209 <- %phi732(return)
	ret.32      $1


os_pushresult:
.L3771:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[filename]
	call.64*    %r16210 <- __errno_location
	load.32     %r16211 <- 0[%r16210]
	store.32    %r16211 -> 0[en]
	load.32     %r16212 <- 0[i]
	br          %r16212, .L3772, .L3773

.L3772:
	load.64*    %r16213 <- 0[L]
	push.64*    %r16213
	push.32     $1
	call        lua_pushboolean
	phisrc.32   %phi733(return) <- $1
	br          .L3774

.L3773:
	load.64*    %r16215 <- 0[L]
	push.64*    %r16215
	call        lua_pushnil
	load.64*    %r16216 <- 0[L]
	symaddr.64* %r16217 <- <anon symbol:0x62d0014e68a0>
	load.64*    %r16218 <- 0[filename]
	load.32     %r16219 <- 0[en]
	push.32     %r16219
	call.64*    %r16220 <- strerror
	push.64*    %r16216
	push.64*    %r16217
	push.64*    %r16218
	push.64*    %r16220
	call.64*    %r16221 <- lua_pushfstring
	load.64*    %r16222 <- 0[L]
	load.32     %r16223 <- 0[en]
	scast.64    %r16224 <- (32) %r16223
	push.64*    %r16222
	push.64     %r16224
	call        lua_pushinteger
	phisrc.32   %phi734(return) <- $3
	br          .L3774

.L3774:
	phi.32      %r16214 <- %phi733(return), %phi734(return)
	ret.32      %r16214


os_remove:
.L3776:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16225 <- 0[L]
	push.64*    %r16225
	push.32     $1
	push.64*    $0
	call.64*    %r16226 <- luaL_checklstring
	store.64*   %r16226 -> 0[filename]
	load.64*    %r16227 <- 0[L]
	load.64*    %r16228 <- 0[filename]
	push.64*    %r16228
	call.32     %r16229 <- remove
	seteq.32    %r16230 <- %r16229, $0
	load.64*    %r16231 <- 0[filename]
	push.64*    %r16227
	push.32     %r16230
	push.64*    %r16231
	call.32     %r16232 <- os_pushresult
	phisrc.32   %phi735(return) <- %r16232
	br          .L3777

.L3777:
	phi.32      %r16233 <- %phi735(return)
	ret.32      %r16232


os_exit:
.L3778:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16234 <- 0[L]
	push.64*    %r16234
	push.32     $1
	push.64     $0
	call.64     %r16235 <- luaL_optinteger
	scast.32    %r16236 <- (64) %r16235
	push.32     %r16236
	call        exit
	phisrc.32   %phi736(return) <- $0
	br          .L3779

.L3779:
	phi.32      %r16237 <- %phi736(return)
	ret.32      $0


luaopen_os:
.L3780:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16238 <- 0[L]
	symaddr.64* %r16239 <- <anon symbol:0x62d0014e6c40>
	symaddr.64* %r16240 <- syslib
	push.64*    %r16238
	push.64*    %r16239
	push.64*    %r16240
	call        luaL_register
	phisrc.32   %phi737(return) <- $1
	br          .L3781

.L3781:
	phi.32      %r16241 <- %phi737(return)
	ret.32      $1


posrelat:
.L3782:
	<entry-point>
	store.64    %arg1 -> 0[pos]
	store.64    %arg2 -> 0[len]
	load.64     %r16242 <- 0[pos]
	setlt.32    %r16243 <- %r16242, $0
	br          %r16243, .L3783, .L3784

.L3783:
	load.64     %r16244 <- 0[len]
	cast.64     %r16245 <- (64) %r16244
	add.64      %r16246 <- %r16245, $1
	load.64     %r16247 <- 0[pos]
	scast.64    %r16248 <- (64) %r16247
	add.64      %r16249 <- %r16248, %r16246
	scast.64    %r16250 <- (64) %r16249
	store.64    %r16250 -> 0[pos]
	br          .L3784

.L3784:
	load.64     %r16251 <- 0[pos]
	load.64     %r16252 <- 0[pos]
	setge.32    %r16253 <- %r16252, $0
	select.64   %r16254 <- %r16253, %r16251, $0
	phisrc.64   %phi738(return) <- %r16254
	br          .L3785

.L3785:
	phi.64      %r16255 <- %phi738(return)
	ret.64      %r16254


str_sub:
.L3786:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16256 <- 0[L]
	symaddr.64* %r16257 <- l
	push.64*    %r16256
	push.32     $1
	push.64*    %r16257
	call.64*    %r16258 <- luaL_checklstring
	store.64*   %r16258 -> 0[s]
	load.64*    %r16259 <- 0[L]
	push.64*    %r16259
	push.32     $2
	call.64     %r16260 <- luaL_checkinteger
	load.64     %r16261 <- 0[l]
	push.64     %r16260
	push.64     %r16261
	call.64     %r16262 <- posrelat
	store.64    %r16262 -> 0[start]
	load.64*    %r16263 <- 0[L]
	push.64*    %r16263
	push.32     $3
	push.64     $-1
	call.64     %r16264 <- luaL_optinteger
	load.64     %r16265 <- 0[l]
	push.64     %r16264
	push.64     %r16265
	call.64     %r16266 <- posrelat
	store.64    %r16266 -> 0[end]
	load.64     %r16267 <- 0[start]
	setlt.32    %r16268 <- %r16267, $1
	br          %r16268, .L3787, .L3788

.L3787:
	store.64    $1 -> 0[start]
	br          .L3788

.L3788:
	load.64     %r16269 <- 0[end]
	load.64     %r16270 <- 0[l]
	cast.64     %r16271 <- (64) %r16270
	setgt.32    %r16272 <- %r16269, %r16271
	br          %r16272, .L3789, .L3790

.L3789:
	load.64     %r16273 <- 0[l]
	cast.64     %r16274 <- (64) %r16273
	store.64    %r16274 -> 0[end]
	br          .L3790

.L3790:
	load.64     %r16275 <- 0[start]
	load.64     %r16276 <- 0[end]
	setle.32    %r16277 <- %r16275, %r16276
	br          %r16277, .L3791, .L3792

.L3791:
	load.64*    %r16278 <- 0[L]
	load.64*    %r16279 <- 0[s]
	load.64     %r16280 <- 0[start]
	add.64*     %r16281 <- %r16279, %r16280
	sub.64*     %r16282 <- %r16281, $1
	load.64     %r16283 <- 0[end]
	load.64     %r16284 <- 0[start]
	sub.64      %r16285 <- %r16283, %r16284
	add.64      %r16286 <- %r16285, $1
	scast.64    %r16287 <- (64) %r16286
	push.64*    %r16278
	push.64*    %r16282
	push.64     %r16287
	call        lua_pushlstring
	br          .L3793

.L3792:
	load.64*    %r16288 <- 0[L]
	symaddr.64* %r16289 <- <anon symbol:0x62d0014e7380>
	push.64*    %r16288
	push.64*    %r16289
	push.64     $0
	call        lua_pushlstring
	br          .L3793

.L3793:
	phisrc.32   %phi739(return) <- $1
	br          .L3794

.L3794:
	phi.32      %r16290 <- %phi739(return)
	ret.32      $1


str_lower:
.L3795:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16291 <- 0[L]
	symaddr.64* %r16292 <- l
	push.64*    %r16291
	push.32     $1
	push.64*    %r16292
	call.64*    %r16293 <- luaL_checklstring
	store.64*   %r16293 -> 0[s]
	load.64*    %r16294 <- 0[L]
	symaddr.64* %r16295 <- b
	push.64*    %r16294
	push.64*    %r16295
	call        luaL_buffinit
	store.64    $0 -> 0[i]
	br          .L3799

.L3799:
	load.64     %r16296 <- 0[i]
	load.64     %r16297 <- 0[l]
	setb.32     %r16298 <- %r16296, %r16297
	br          %r16298, .L3796, .L3798

.L3796:
	load.64*    %r16299 <- 0[b]
	symaddr.64* %r16300 <- b
	add.64*     %r16301 <- %r16300, $24
	add.64*     %r16302 <- %r16301, $0x2000
	setb.32     %r16303 <- %r16299, %r16302
	br          %r16303, .L3800, .L3801

.L3800:
	phisrc.32   %phi740 <- $1
	br          .L3802

.L3801:
	symaddr.64* %r16304 <- b
	push.64*    %r16304
	call.64*    %r16305 <- luaL_prepbuffer
	phisrc.32   %phi741 <- %r16305
	br          .L3802

.L3802:
	phi.32      %r16306 <- %phi740, %phi741
	load.64*    %r16307 <- 0[s]
	load.64     %r16308 <- 0[i]
	add.64*     %r16309 <- %r16307, %r16308
	load.8      %r16310 <- 0[%r16309]
	scast.8     %r16311 <- (8) %r16310
	cast.32     %r16312 <- (8) %r16311
	push.32     %r16312
	call.32     %r16313 <- tolower
	scast.8     %r16314 <- (32) %r16313
	load.64*    %r16315 <- 0[b]
	add.64*     %r16316 <- %r16315, $1
	store.64*   %r16316 -> 0[b]
	store.8     %r16314 -> 0[%r16315]
	br          .L3797

.L3797:
	load.64     %r16317 <- 0[i]
	add.64      %r16318 <- %r16317, $1
	store.64    %r16318 -> 0[i]
	br          .L3799

.L3798:
	symaddr.64* %r16319 <- b
	push.64*    %r16319
	call        luaL_pushresult
	phisrc.32   %phi742(return) <- $1
	br          .L3803

.L3803:
	phi.32      %r16320 <- %phi742(return)
	ret.32      $1


str_upper:
.L3804:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16321 <- 0[L]
	symaddr.64* %r16322 <- l
	push.64*    %r16321
	push.32     $1
	push.64*    %r16322
	call.64*    %r16323 <- luaL_checklstring
	store.64*   %r16323 -> 0[s]
	load.64*    %r16324 <- 0[L]
	symaddr.64* %r16325 <- b
	push.64*    %r16324
	push.64*    %r16325
	call        luaL_buffinit
	store.64    $0 -> 0[i]
	br          .L3808

.L3808:
	load.64     %r16326 <- 0[i]
	load.64     %r16327 <- 0[l]
	setb.32     %r16328 <- %r16326, %r16327
	br          %r16328, .L3805, .L3807

.L3805:
	load.64*    %r16329 <- 0[b]
	symaddr.64* %r16330 <- b
	add.64*     %r16331 <- %r16330, $24
	add.64*     %r16332 <- %r16331, $0x2000
	setb.32     %r16333 <- %r16329, %r16332
	br          %r16333, .L3809, .L3810

.L3809:
	phisrc.32   %phi743 <- $1
	br          .L3811

.L3810:
	symaddr.64* %r16334 <- b
	push.64*    %r16334
	call.64*    %r16335 <- luaL_prepbuffer
	phisrc.32   %phi744 <- %r16335
	br          .L3811

.L3811:
	phi.32      %r16336 <- %phi743, %phi744
	load.64*    %r16337 <- 0[s]
	load.64     %r16338 <- 0[i]
	add.64*     %r16339 <- %r16337, %r16338
	load.8      %r16340 <- 0[%r16339]
	scast.8     %r16341 <- (8) %r16340
	cast.32     %r16342 <- (8) %r16341
	push.32     %r16342
	call.32     %r16343 <- toupper
	scast.8     %r16344 <- (32) %r16343
	load.64*    %r16345 <- 0[b]
	add.64*     %r16346 <- %r16345, $1
	store.64*   %r16346 -> 0[b]
	store.8     %r16344 -> 0[%r16345]
	br          .L3806

.L3806:
	load.64     %r16347 <- 0[i]
	add.64      %r16348 <- %r16347, $1
	store.64    %r16348 -> 0[i]
	br          .L3808

.L3807:
	symaddr.64* %r16349 <- b
	push.64*    %r16349
	call        luaL_pushresult
	phisrc.32   %phi745(return) <- $1
	br          .L3812

.L3812:
	phi.32      %r16350 <- %phi745(return)
	ret.32      $1


str_rep:
.L3813:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16351 <- 0[L]
	symaddr.64* %r16352 <- l
	push.64*    %r16351
	push.32     $1
	push.64*    %r16352
	call.64*    %r16353 <- luaL_checklstring
	store.64*   %r16353 -> 0[s]
	load.64*    %r16354 <- 0[L]
	push.64*    %r16354
	push.32     $2
	call.64     %r16355 <- luaL_checkinteger
	scast.32    %r16356 <- (64) %r16355
	store.32    %r16356 -> 0[n]
	load.64*    %r16357 <- 0[L]
	symaddr.64* %r16358 <- b
	push.64*    %r16357
	push.64*    %r16358
	call        luaL_buffinit
	br          .L3817

.L3817:
	load.32     %r16359 <- 0[n]
	sub.32      %r16360 <- %r16359, $1
	store.32    %r16360 -> 0[n]
	setgt.32    %r16361 <- %r16359, $0
	br          %r16361, .L3814, .L3816

.L3814:
	symaddr.64* %r16362 <- b
	load.64*    %r16363 <- 0[s]
	load.64     %r16364 <- 0[l]
	push.64*    %r16362
	push.64*    %r16363
	push.64     %r16364
	call        luaL_addlstring
	br          .L3815

.L3815:
	br          .L3817

.L3816:
	symaddr.64* %r16365 <- b
	push.64*    %r16365
	call        luaL_pushresult
	phisrc.32   %phi746(return) <- $1
	br          .L3818

.L3818:
	phi.32      %r16366 <- %phi746(return)
	ret.32      $1


str_byte:
.L3819:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16367 <- 0[L]
	symaddr.64* %r16368 <- l
	push.64*    %r16367
	push.32     $1
	push.64*    %r16368
	call.64*    %r16369 <- luaL_checklstring
	store.64*   %r16369 -> 0[s]
	load.64*    %r16370 <- 0[L]
	push.64*    %r16370
	push.32     $2
	push.64     $1
	call.64     %r16371 <- luaL_optinteger
	load.64     %r16372 <- 0[l]
	push.64     %r16371
	push.64     %r16372
	call.64     %r16373 <- posrelat
	store.64    %r16373 -> 0[posi]
	load.64*    %r16374 <- 0[L]
	load.64     %r16375 <- 0[posi]
	push.64*    %r16374
	push.32     $3
	push.64     %r16375
	call.64     %r16376 <- luaL_optinteger
	load.64     %r16377 <- 0[l]
	push.64     %r16376
	push.64     %r16377
	call.64     %r16378 <- posrelat
	store.64    %r16378 -> 0[pose]
	load.64     %r16379 <- 0[posi]
	setle.32    %r16380 <- %r16379, $0
	br          %r16380, .L3820, .L3821

.L3820:
	store.64    $1 -> 0[posi]
	br          .L3821

.L3821:
	load.64     %r16381 <- 0[pose]
	scast.64    %r16382 <- (64) %r16381
	load.64     %r16383 <- 0[l]
	seta.32     %r16384 <- %r16382, %r16383
	br          %r16384, .L3822, .L3823

.L3822:
	load.64     %r16385 <- 0[l]
	cast.64     %r16386 <- (64) %r16385
	store.64    %r16386 -> 0[pose]
	br          .L3823

.L3823:
	load.64     %r16387 <- 0[posi]
	load.64     %r16388 <- 0[pose]
	setgt.32    %r16389 <- %r16387, %r16388
	br          %r16389, .L3824, .L3825

.L3824:
	phisrc.32   %phi747(return) <- $0
	br          .L3826

.L3825:
	load.64     %r16391 <- 0[pose]
	load.64     %r16392 <- 0[posi]
	sub.64      %r16393 <- %r16391, %r16392
	add.64      %r16394 <- %r16393, $1
	scast.32    %r16395 <- (64) %r16394
	store.32    %r16395 -> 0[n]
	load.64     %r16396 <- 0[posi]
	load.32     %r16397 <- 0[n]
	scast.64    %r16398 <- (32) %r16397
	add.64      %r16399 <- %r16396, %r16398
	load.64     %r16400 <- 0[pose]
	setle.32    %r16401 <- %r16399, %r16400
	br          %r16401, .L3827, .L3828

.L3827:
	load.64*    %r16402 <- 0[L]
	symaddr.64* %r16403 <- <anon symbol:0x62d0014ea810>
	push.64*    %r16402
	push.64*    %r16403
	call.32     %r16404 <- luaL_error
	br          .L3828

.L3828:
	load.64*    %r16405 <- 0[L]
	load.32     %r16406 <- 0[n]
	symaddr.64* %r16407 <- <anon symbol:0x62d0014eabb0>
	push.64*    %r16405
	push.32     %r16406
	push.64*    %r16407
	call        luaL_checkstack
	store.32    $0 -> 0[i]
	br          .L3832

.L3832:
	load.32     %r16408 <- 0[i]
	load.32     %r16409 <- 0[n]
	setlt.32    %r16410 <- %r16408, %r16409
	br          %r16410, .L3829, .L3831

.L3829:
	load.64*    %r16411 <- 0[L]
	load.64*    %r16412 <- 0[s]
	load.64     %r16413 <- 0[posi]
	load.32     %r16414 <- 0[i]
	scast.64    %r16415 <- (32) %r16414
	add.64      %r16416 <- %r16413, %r16415
	sub.64      %r16417 <- %r16416, $1
	add.64*     %r16418 <- %r16412, %r16417
	load.8      %r16419 <- 0[%r16418]
	scast.8     %r16420 <- (8) %r16419
	cast.64     %r16421 <- (8) %r16420
	push.64*    %r16411
	push.64     %r16421
	call        lua_pushinteger
	br          .L3830

.L3830:
	load.32     %r16422 <- 0[i]
	add.32      %r16423 <- %r16422, $1
	store.32    %r16423 -> 0[i]
	br          .L3832

.L3831:
	load.32     %r16424 <- 0[n]
	phisrc.32   %phi748(return) <- %r16424
	br          .L3826

.L3826:
	phi.32      %r16390 <- %phi747(return), %phi748(return)
	ret.32      %r16390


str_char:
.L3833:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16425 <- 0[L]
	push.64*    %r16425
	call.32     %r16426 <- lua_gettop
	store.32    %r16426 -> 0[n]
	load.64*    %r16427 <- 0[L]
	symaddr.64* %r16428 <- b
	push.64*    %r16427
	push.64*    %r16428
	call        luaL_buffinit
	store.32    $1 -> 0[i]
	br          .L3837

.L3837:
	load.32     %r16429 <- 0[i]
	load.32     %r16430 <- 0[n]
	setle.32    %r16431 <- %r16429, %r16430
	br          %r16431, .L3834, .L3836

.L3834:
	load.64*    %r16432 <- 0[L]
	load.32     %r16433 <- 0[i]
	push.64*    %r16432
	push.32     %r16433
	call.64     %r16434 <- luaL_checkinteger
	scast.32    %r16435 <- (64) %r16434
	store.32    %r16435 -> 0[c]
	load.32     %r16436 <- 0[c]
	scast.8     %r16437 <- (32) %r16436
	cast.32     %r16438 <- (8) %r16437
	load.32     %r16439 <- 0[c]
	seteq.32    %r16440 <- %r16438, %r16439
	br          %r16440, .L3838, .L3839

.L3838:
	phisrc.32   %phi749 <- $1
	br          .L3840

.L3839:
	load.64*    %r16441 <- 0[L]
	load.32     %r16442 <- 0[i]
	symaddr.64* %r16443 <- <anon symbol:0x62d0014eb208>
	push.64*    %r16441
	push.32     %r16442
	push.64*    %r16443
	call.32     %r16444 <- luaL_argerror
	phisrc.32   %phi750 <- %r16444
	br          .L3840

.L3840:
	phi.32      %r16445 <- %phi749, %phi750
	load.64*    %r16446 <- 0[b]
	symaddr.64* %r16447 <- b
	add.64*     %r16448 <- %r16447, $24
	add.64*     %r16449 <- %r16448, $0x2000
	setb.32     %r16450 <- %r16446, %r16449
	br          %r16450, .L3841, .L3842

.L3841:
	phisrc.32   %phi751 <- $1
	br          .L3843

.L3842:
	symaddr.64* %r16451 <- b
	push.64*    %r16451
	call.64*    %r16452 <- luaL_prepbuffer
	phisrc.32   %phi752 <- %r16452
	br          .L3843

.L3843:
	phi.32      %r16453 <- %phi751, %phi752
	load.32     %r16454 <- 0[c]
	scast.8     %r16455 <- (32) %r16454
	cast.8      %r16456 <- (8) %r16455
	load.64*    %r16457 <- 0[b]
	add.64*     %r16458 <- %r16457, $1
	store.64*   %r16458 -> 0[b]
	store.8     %r16456 -> 0[%r16457]
	br          .L3835

.L3835:
	load.32     %r16459 <- 0[i]
	add.32      %r16460 <- %r16459, $1
	store.32    %r16460 -> 0[i]
	br          .L3837

.L3836:
	symaddr.64* %r16461 <- b
	push.64*    %r16461
	call        luaL_pushresult
	phisrc.32   %phi753(return) <- $1
	br          .L3844

.L3844:
	phi.32      %r16462 <- %phi753(return)
	ret.32      $1


check_capture:
.L3845:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.32    %arg2 -> 0[l]
	load.32     %r16463 <- 0[l]
	scast.32    %r16464 <- (32) %r16463
	sub.32      %r16465 <- %r16464, $49
	scast.32    %r16466 <- (32) %r16465
	store.32    %r16466 -> 0[l]
	load.32     %r16467 <- 0[l]
	setlt.32    %r16468 <- %r16467, $0
	br          %r16468, .L3846, .L3849

.L3849:
	load.32     %r16469 <- 0[l]
	load.64*    %r16470 <- 0[ms]
	load.32     %r16471 <- 24[%r16470]
	setge.32    %r16472 <- %r16469, %r16471
	br          %r16472, .L3846, .L3848

.L3848:
	load.64*    %r16473 <- 0[ms]
	add.64*     %r16474 <- %r16473, $32
	load.32     %r16475 <- 0[l]
	scast.64    %r16476 <- (32) %r16475
	muls.64     %r16477 <- %r16476, $16
	add.64*     %r16478 <- %r16474, %r16477
	load.64     %r16479 <- 8[%r16478]
	seteq.32    %r16480 <- %r16479, $-1
	br          %r16480, .L3846, .L3847

.L3846:
	load.64*    %r16481 <- 0[ms]
	load.64*    %r16482 <- 16[%r16481]
	symaddr.64* %r16483 <- <anon symbol:0x62d0014ecc50>
	push.64*    %r16482
	push.64*    %r16483
	call.32     %r16484 <- luaL_error
	phisrc.32   %phi754(return) <- %r16484
	br          .L3850

.L3847:
	load.32     %r16486 <- 0[l]
	phisrc.32   %phi755(return) <- %r16486
	br          .L3850

.L3850:
	phi.32      %r16485 <- %phi754(return), %phi755(return)
	ret.32      %r16485


capture_to_close:
.L3851:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	load.64*    %r16487 <- 0[ms]
	load.32     %r16488 <- 24[%r16487]
	store.32    %r16488 -> 0[level]
	load.32     %r16489 <- 0[level]
	sub.32      %r16490 <- %r16489, $1
	store.32    %r16490 -> 0[level]
	br          .L3855

.L3855:
	load.32     %r16491 <- 0[level]
	setge.32    %r16492 <- %r16491, $0
	br          %r16492, .L3852, .L3854

.L3852:
	load.64*    %r16493 <- 0[ms]
	add.64*     %r16494 <- %r16493, $32
	load.32     %r16495 <- 0[level]
	scast.64    %r16496 <- (32) %r16495
	muls.64     %r16497 <- %r16496, $16
	add.64*     %r16498 <- %r16494, %r16497
	load.64     %r16499 <- 8[%r16498]
	seteq.32    %r16500 <- %r16499, $-1
	br          %r16500, .L3856, .L3857

.L3856:
	load.32     %r16501 <- 0[level]
	phisrc.32   %phi756(return) <- %r16501
	br          .L3858

.L3857:
	br          .L3853

.L3853:
	load.32     %r16503 <- 0[level]
	sub.32      %r16504 <- %r16503, $1
	store.32    %r16504 -> 0[level]
	br          .L3855

.L3854:
	load.64*    %r16505 <- 0[ms]
	load.64*    %r16506 <- 16[%r16505]
	symaddr.64* %r16507 <- <anon symbol:0x62d0014ed818>
	push.64*    %r16506
	push.64*    %r16507
	call.32     %r16508 <- luaL_error
	phisrc.32   %phi757(return) <- %r16508
	br          .L3858

.L3858:
	phi.32      %r16502 <- %phi756(return), %phi757(return)
	ret.32      %r16502


classend:
.L3859:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[p]
	load.64*    %r16509 <- 0[p]
	add.64*     %r16510 <- %r16509, $1
	store.64*   %r16510 -> 0[p]
	load.8      %r16511 <- 0[%r16509]
	switch.8    %r16511, 37 -> .L3861, 91 -> .L3862, default -> .L3863

.L3861:
	load.64*    %r16512 <- 0[p]
	load.8      %r16513 <- 0[%r16512]
	scast.32    %r16514 <- (8) %r16513
	seteq.32    %r16515 <- %r16514, $0
	br          %r16515, .L3864, .L3865

.L3864:
	load.64*    %r16516 <- 0[ms]
	load.64*    %r16517 <- 16[%r16516]
	symaddr.64* %r16518 <- <anon symbol:0x62d0014edf58>
	push.64*    %r16517
	push.64*    %r16518
	call.32     %r16519 <- luaL_error
	br          .L3865

.L3865:
	load.64*    %r16520 <- 0[p]
	add.64*     %r16521 <- %r16520, $1
	phisrc.64*  %phi758(return) <- %r16521
	br          .L3866

.L3862:
	load.64*    %r16523 <- 0[p]
	load.8      %r16524 <- 0[%r16523]
	scast.32    %r16525 <- (8) %r16524
	seteq.32    %r16526 <- %r16525, $94
	br          %r16526, .L3867, .L3868

.L3867:
	load.64*    %r16527 <- 0[p]
	add.64*     %r16528 <- %r16527, $1
	store.64*   %r16528 -> 0[p]
	br          .L3868

.L3868:
	br          .L3869

.L3869:
	load.64*    %r16529 <- 0[p]
	load.8      %r16530 <- 0[%r16529]
	scast.32    %r16531 <- (8) %r16530
	seteq.32    %r16532 <- %r16531, $0
	br          %r16532, .L3872, .L3873

.L3872:
	load.64*    %r16533 <- 0[ms]
	load.64*    %r16534 <- 16[%r16533]
	symaddr.64* %r16535 <- <anon symbol:0x62d0014f07b8>
	push.64*    %r16534
	push.64*    %r16535
	call.32     %r16536 <- luaL_error
	br          .L3873

.L3873:
	load.64*    %r16537 <- 0[p]
	add.64*     %r16538 <- %r16537, $1
	store.64*   %r16538 -> 0[p]
	load.8      %r16539 <- 0[%r16537]
	scast.32    %r16540 <- (8) %r16539
	seteq.32    %r16541 <- %r16540, $37
	br          %r16541, .L3876, .L3875

.L3876:
	load.64*    %r16542 <- 0[p]
	load.8      %r16543 <- 0[%r16542]
	scast.32    %r16544 <- (8) %r16543
	setne.32    %r16545 <- %r16544, $0
	br          %r16545, .L3874, .L3875

.L3874:
	load.64*    %r16546 <- 0[p]
	add.64*     %r16547 <- %r16546, $1
	store.64*   %r16547 -> 0[p]
	br          .L3875

.L3875:
	br          .L3870

.L3870:
	load.64*    %r16548 <- 0[p]
	load.8      %r16549 <- 0[%r16548]
	scast.32    %r16550 <- (8) %r16549
	setne.32    %r16551 <- %r16550, $93
	br          %r16551, .L3869, .L3871

.L3871:
	load.64*    %r16552 <- 0[p]
	add.64*     %r16553 <- %r16552, $1
	phisrc.64*  %phi759(return) <- %r16553
	br          .L3866

.L3863:
	load.64*    %r16554 <- 0[p]
	phisrc.64*  %phi760(return) <- %r16554
	br          .L3866

.L3866:
	phi.64*     %r16522 <- %phi758(return), %phi759(return), %phi760(return)
	ret.64*     %r16522


match_class:
.L3877:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.32    %arg2 -> 0[cl]
	load.32     %r16555 <- 0[cl]
	push.32     %r16555
	call.32     %r16556 <- tolower
	switch.32   %r16556, 97 -> .L3879, 99 -> .L3880, 100 -> .L3881, 108 -> .L3882, 112 -> .L3883, 115 -> .L3884, 117 -> .L3885, 119 -> .L3886, 120 -> .L3887, 122 -> .L3888, default -> .L3889

.L3879:
	call.64*    %r16557 <- __ctype_b_loc
	load.64*    %r16558 <- 0[%r16557]
	load.32     %r16559 <- 0[c]
	scast.32    %r16560 <- (32) %r16559
	scast.64    %r16561 <- (32) %r16560
	muls.64     %r16562 <- %r16561, $2
	add.64*     %r16563 <- %r16558, %r16562
	load.16     %r16564 <- 0[%r16563]
	cast.32     %r16565 <- (16) %r16564
	and.32      %r16566 <- %r16565, $0x400
	store.32    %r16566 -> 0[res]
	br          .L3878

.L3880:
	call.64*    %r16567 <- __ctype_b_loc
	load.64*    %r16568 <- 0[%r16567]
	load.32     %r16569 <- 0[c]
	scast.32    %r16570 <- (32) %r16569
	scast.64    %r16571 <- (32) %r16570
	muls.64     %r16572 <- %r16571, $2
	add.64*     %r16573 <- %r16568, %r16572
	load.16     %r16574 <- 0[%r16573]
	cast.32     %r16575 <- (16) %r16574
	and.32      %r16576 <- %r16575, $2
	store.32    %r16576 -> 0[res]
	br          .L3878

.L3881:
	call.64*    %r16577 <- __ctype_b_loc
	load.64*    %r16578 <- 0[%r16577]
	load.32     %r16579 <- 0[c]
	scast.32    %r16580 <- (32) %r16579
	scast.64    %r16581 <- (32) %r16580
	muls.64     %r16582 <- %r16581, $2
	add.64*     %r16583 <- %r16578, %r16582
	load.16     %r16584 <- 0[%r16583]
	cast.32     %r16585 <- (16) %r16584
	and.32      %r16586 <- %r16585, $0x800
	store.32    %r16586 -> 0[res]
	br          .L3878

.L3882:
	call.64*    %r16587 <- __ctype_b_loc
	load.64*    %r16588 <- 0[%r16587]
	load.32     %r16589 <- 0[c]
	scast.32    %r16590 <- (32) %r16589
	scast.64    %r16591 <- (32) %r16590
	muls.64     %r16592 <- %r16591, $2
	add.64*     %r16593 <- %r16588, %r16592
	load.16     %r16594 <- 0[%r16593]
	cast.32     %r16595 <- (16) %r16594
	and.32      %r16596 <- %r16595, $512
	store.32    %r16596 -> 0[res]
	br          .L3878

.L3883:
	call.64*    %r16597 <- __ctype_b_loc
	load.64*    %r16598 <- 0[%r16597]
	load.32     %r16599 <- 0[c]
	scast.32    %r16600 <- (32) %r16599
	scast.64    %r16601 <- (32) %r16600
	muls.64     %r16602 <- %r16601, $2
	add.64*     %r16603 <- %r16598, %r16602
	load.16     %r16604 <- 0[%r16603]
	cast.32     %r16605 <- (16) %r16604
	and.32      %r16606 <- %r16605, $4
	store.32    %r16606 -> 0[res]
	br          .L3878

.L3884:
	call.64*    %r16607 <- __ctype_b_loc
	load.64*    %r16608 <- 0[%r16607]
	load.32     %r16609 <- 0[c]
	scast.32    %r16610 <- (32) %r16609
	scast.64    %r16611 <- (32) %r16610
	muls.64     %r16612 <- %r16611, $2
	add.64*     %r16613 <- %r16608, %r16612
	load.16     %r16614 <- 0[%r16613]
	cast.32     %r16615 <- (16) %r16614
	and.32      %r16616 <- %r16615, $0x2000
	store.32    %r16616 -> 0[res]
	br          .L3878

.L3885:
	call.64*    %r16617 <- __ctype_b_loc
	load.64*    %r16618 <- 0[%r16617]
	load.32     %r16619 <- 0[c]
	scast.32    %r16620 <- (32) %r16619
	scast.64    %r16621 <- (32) %r16620
	muls.64     %r16622 <- %r16621, $2
	add.64*     %r16623 <- %r16618, %r16622
	load.16     %r16624 <- 0[%r16623]
	cast.32     %r16625 <- (16) %r16624
	and.32      %r16626 <- %r16625, $256
	store.32    %r16626 -> 0[res]
	br          .L3878

.L3886:
	call.64*    %r16627 <- __ctype_b_loc
	load.64*    %r16628 <- 0[%r16627]
	load.32     %r16629 <- 0[c]
	scast.32    %r16630 <- (32) %r16629
	scast.64    %r16631 <- (32) %r16630
	muls.64     %r16632 <- %r16631, $2
	add.64*     %r16633 <- %r16628, %r16632
	load.16     %r16634 <- 0[%r16633]
	cast.32     %r16635 <- (16) %r16634
	and.32      %r16636 <- %r16635, $8
	store.32    %r16636 -> 0[res]
	br          .L3878

.L3887:
	call.64*    %r16637 <- __ctype_b_loc
	load.64*    %r16638 <- 0[%r16637]
	load.32     %r16639 <- 0[c]
	scast.32    %r16640 <- (32) %r16639
	scast.64    %r16641 <- (32) %r16640
	muls.64     %r16642 <- %r16641, $2
	add.64*     %r16643 <- %r16638, %r16642
	load.16     %r16644 <- 0[%r16643]
	cast.32     %r16645 <- (16) %r16644
	and.32      %r16646 <- %r16645, $0x1000
	store.32    %r16646 -> 0[res]
	br          .L3878

.L3888:
	load.32     %r16647 <- 0[c]
	seteq.32    %r16648 <- %r16647, $0
	store.32    %r16648 -> 0[res]
	br          .L3878

.L3889:
	load.32     %r16649 <- 0[cl]
	load.32     %r16650 <- 0[c]
	seteq.32    %r16651 <- %r16649, %r16650
	phisrc.32   %phi761(return) <- %r16651
	br          .L3890

.L3878:
	load.32     %r16653 <- 0[res]
	load.32     %r16654 <- 0[res]
	seteq.32    %r16655 <- %r16654, $0
	call.64*    %r16656 <- __ctype_b_loc
	load.64*    %r16657 <- 0[%r16656]
	load.32     %r16658 <- 0[cl]
	scast.32    %r16659 <- (32) %r16658
	scast.64    %r16660 <- (32) %r16659
	muls.64     %r16661 <- %r16660, $2
	add.64*     %r16662 <- %r16657, %r16661
	load.16     %r16663 <- 0[%r16662]
	cast.32     %r16664 <- (16) %r16663
	and.32      %r16665 <- %r16664, $512
	select.32   %r16666 <- %r16665, %r16653, %r16655
	phisrc.32   %phi762(return) <- %r16666
	br          .L3890

.L3890:
	phi.32      %r16652 <- %phi761(return), %phi762(return)
	ret.32      %r16652


matchbracketclass:
.L3891:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.64*   %arg2 -> 0[p]
	store.64*   %arg3 -> 0[ec]
	store.32    $1 -> 0[sig]
	load.64*    %r16667 <- 0[p]
	load.8      %r16668 <- 1[%r16667]
	scast.32    %r16669 <- (8) %r16668
	seteq.32    %r16670 <- %r16669, $94
	br          %r16670, .L3892, .L3893

.L3892:
	store.32    $0 -> 0[sig]
	load.64*    %r16671 <- 0[p]
	add.64*     %r16672 <- %r16671, $1
	store.64*   %r16672 -> 0[p]
	br          .L3893

.L3893:
	br          .L3897

.L3897:
	load.64*    %r16673 <- 0[p]
	add.64*     %r16674 <- %r16673, $1
	store.64*   %r16674 -> 0[p]
	load.64*    %r16675 <- 0[ec]
	setb.32     %r16676 <- %r16674, %r16675
	br          %r16676, .L3894, .L3896

.L3894:
	load.64*    %r16677 <- 0[p]
	load.8      %r16678 <- 0[%r16677]
	scast.32    %r16679 <- (8) %r16678
	seteq.32    %r16680 <- %r16679, $37
	br          %r16680, .L3898, .L3899

.L3898:
	load.64*    %r16681 <- 0[p]
	add.64*     %r16682 <- %r16681, $1
	store.64*   %r16682 -> 0[p]
	load.32     %r16683 <- 0[c]
	load.64*    %r16684 <- 0[p]
	load.8      %r16685 <- 0[%r16684]
	scast.8     %r16686 <- (8) %r16685
	cast.32     %r16687 <- (8) %r16686
	push.32     %r16683
	push.32     %r16687
	call.32     %r16688 <- match_class
	br          %r16688, .L3900, .L3901

.L3900:
	load.32     %r16689 <- 0[sig]
	phisrc.32   %phi763(return) <- %r16689
	br          .L3902

.L3901:
	br          .L3903

.L3899:
	load.64*    %r16691 <- 0[p]
	load.8      %r16692 <- 1[%r16691]
	scast.32    %r16693 <- (8) %r16692
	seteq.32    %r16694 <- %r16693, $45
	load.64*    %r16695 <- 0[p]
	add.64*     %r16696 <- %r16695, $2
	load.64*    %r16697 <- 0[ec]
	setb.32     %r16698 <- %r16696, %r16697
	and-bool.32 %r16699 <- %r16694, %r16698
	br          %r16699, .L3904, .L3905

.L3904:
	load.64*    %r16700 <- 0[p]
	cast.64     %r16701 <- (64) %r16700
	add.64      %r16702 <- %r16701, $2
	ptrcast.64* %r16703 <- (64) %r16702
	store.64*   %r16703 -> 0[p]
	load.64*    %r16704 <- 0[p]
	sub.64*     %r16705 <- %r16704, $2
	load.8      %r16706 <- 0[%r16705]
	scast.8     %r16707 <- (8) %r16706
	cast.32     %r16708 <- (8) %r16707
	load.32     %r16709 <- 0[c]
	setle.32    %r16710 <- %r16708, %r16709
	br          %r16710, .L3908, .L3907

.L3908:
	load.32     %r16711 <- 0[c]
	load.64*    %r16712 <- 0[p]
	load.8      %r16713 <- 0[%r16712]
	scast.8     %r16714 <- (8) %r16713
	cast.32     %r16715 <- (8) %r16714
	setle.32    %r16716 <- %r16711, %r16715
	br          %r16716, .L3906, .L3907

.L3906:
	load.32     %r16717 <- 0[sig]
	phisrc.32   %phi764(return) <- %r16717
	br          .L3902

.L3907:
	br          .L3909

.L3905:
	load.64*    %r16718 <- 0[p]
	load.8      %r16719 <- 0[%r16718]
	scast.8     %r16720 <- (8) %r16719
	cast.32     %r16721 <- (8) %r16720
	load.32     %r16722 <- 0[c]
	seteq.32    %r16723 <- %r16721, %r16722
	br          %r16723, .L3910, .L3911

.L3910:
	load.32     %r16724 <- 0[sig]
	phisrc.32   %phi765(return) <- %r16724
	br          .L3902

.L3911:
	br          .L3909

.L3909:
	br          .L3903

.L3903:
	br          .L3895

.L3895:
	br          .L3897

.L3896:
	load.32     %r16725 <- 0[sig]
	seteq.32    %r16726 <- %r16725, $0
	phisrc.32   %phi766(return) <- %r16726
	br          .L3902

.L3902:
	phi.32      %r16690 <- %phi763(return), %phi764(return), %phi765(return), %phi766(return)
	ret.32      %r16690


singlematch:
.L3912:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.64*   %arg2 -> 0[p]
	store.64*   %arg3 -> 0[ep]
	load.64*    %r16727 <- 0[p]
	load.8      %r16728 <- 0[%r16727]
	switch.8    %r16728, 37 -> .L3915, 46 -> .L3914, 91 -> .L3916, default -> .L3917

.L3914:
	phisrc.32   %phi767(return) <- $1
	br          .L3918

.L3915:
	load.32     %r16730 <- 0[c]
	load.64*    %r16731 <- 0[p]
	load.8      %r16732 <- 1[%r16731]
	scast.8     %r16733 <- (8) %r16732
	cast.32     %r16734 <- (8) %r16733
	push.32     %r16730
	push.32     %r16734
	call.32     %r16735 <- match_class
	phisrc.32   %phi768(return) <- %r16735
	br          .L3918

.L3916:
	load.32     %r16736 <- 0[c]
	load.64*    %r16737 <- 0[p]
	load.64*    %r16738 <- 0[ep]
	sub.64*     %r16739 <- %r16738, $1
	push.32     %r16736
	push.64*    %r16737
	push.64*    %r16739
	call.32     %r16740 <- matchbracketclass
	phisrc.32   %phi769(return) <- %r16740
	br          .L3918

.L3917:
	load.64*    %r16741 <- 0[p]
	load.8      %r16742 <- 0[%r16741]
	scast.8     %r16743 <- (8) %r16742
	cast.32     %r16744 <- (8) %r16743
	load.32     %r16745 <- 0[c]
	seteq.32    %r16746 <- %r16744, %r16745
	phisrc.32   %phi770(return) <- %r16746
	br          .L3918

.L3918:
	phi.32      %r16729 <- %phi767(return), %phi768(return), %phi769(return), %phi770(return)
	ret.32      %r16729


matchbalance:
.L3919:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	load.64*    %r16747 <- 0[p]
	load.8      %r16748 <- 0[%r16747]
	scast.32    %r16749 <- (8) %r16748
	seteq.32    %r16750 <- %r16749, $0
	br          %r16750, .L3920, .L3922

.L3922:
	load.64*    %r16751 <- 0[p]
	load.8      %r16752 <- 1[%r16751]
	scast.32    %r16753 <- (8) %r16752
	seteq.32    %r16754 <- %r16753, $0
	br          %r16754, .L3920, .L3921

.L3920:
	load.64*    %r16755 <- 0[ms]
	load.64*    %r16756 <- 16[%r16755]
	symaddr.64* %r16757 <- <anon symbol:0x62d0014f42a0>
	push.64*    %r16756
	push.64*    %r16757
	call.32     %r16758 <- luaL_error
	br          .L3921

.L3921:
	load.64*    %r16759 <- 0[s]
	load.8      %r16760 <- 0[%r16759]
	scast.32    %r16761 <- (8) %r16760
	load.64*    %r16762 <- 0[p]
	load.8      %r16763 <- 0[%r16762]
	scast.32    %r16764 <- (8) %r16763
	setne.32    %r16765 <- %r16761, %r16764
	br          %r16765, .L3923, .L3924

.L3923:
	phisrc.64*  %phi771(return) <- $0
	br          .L3925

.L3924:
	load.64*    %r16767 <- 0[p]
	load.8      %r16768 <- 0[%r16767]
	scast.32    %r16769 <- (8) %r16768
	store.32    %r16769 -> 0[b]
	load.64*    %r16770 <- 0[p]
	load.8      %r16771 <- 1[%r16770]
	scast.32    %r16772 <- (8) %r16771
	store.32    %r16772 -> 0[e]
	store.32    $1 -> 0[cont]
	br          .L3930

.L3930:
	load.64*    %r16773 <- 0[s]
	add.64*     %r16774 <- %r16773, $1
	store.64*   %r16774 -> 0[s]
	load.64*    %r16775 <- 0[ms]
	load.64*    %r16776 <- 8[%r16775]
	setb.32     %r16777 <- %r16774, %r16776
	br          %r16777, .L3927, .L3929

.L3927:
	load.64*    %r16778 <- 0[s]
	load.8      %r16779 <- 0[%r16778]
	scast.32    %r16780 <- (8) %r16779
	load.32     %r16781 <- 0[e]
	seteq.32    %r16782 <- %r16780, %r16781
	br          %r16782, .L3931, .L3932

.L3931:
	load.32     %r16783 <- 0[cont]
	sub.32      %r16784 <- %r16783, $1
	store.32    %r16784 -> 0[cont]
	seteq.32    %r16785 <- %r16784, $0
	br          %r16785, .L3933, .L3934

.L3933:
	load.64*    %r16786 <- 0[s]
	add.64*     %r16787 <- %r16786, $1
	phisrc.64*  %phi772(return) <- %r16787
	br          .L3925

.L3934:
	br          .L3935

.L3932:
	load.64*    %r16788 <- 0[s]
	load.8      %r16789 <- 0[%r16788]
	scast.32    %r16790 <- (8) %r16789
	load.32     %r16791 <- 0[b]
	seteq.32    %r16792 <- %r16790, %r16791
	br          %r16792, .L3936, .L3937

.L3936:
	load.32     %r16793 <- 0[cont]
	add.32      %r16794 <- %r16793, $1
	store.32    %r16794 -> 0[cont]
	br          .L3937

.L3937:
	br          .L3935

.L3935:
	br          .L3928

.L3928:
	br          .L3930

.L3929:
	br          .L3926

.L3926:
	phisrc.64*  %phi773(return) <- $0
	br          .L3925

.L3925:
	phi.64*     %r16766 <- %phi771(return), %phi772(return), %phi773(return)
	ret.64*     %r16766


max_expand:
.L3938:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.64*   %arg4 -> 0[ep]
	store.64    $0 -> 0[i]
	br          .L3942

.L3942:
	load.64*    %r16795 <- 0[s]
	load.64     %r16796 <- 0[i]
	add.64*     %r16797 <- %r16795, %r16796
	load.64*    %r16798 <- 0[ms]
	load.64*    %r16799 <- 8[%r16798]
	setb.32     %r16800 <- %r16797, %r16799
	br          %r16800, .L3943, .L3941

.L3943:
	load.64*    %r16801 <- 0[s]
	load.64     %r16802 <- 0[i]
	add.64*     %r16803 <- %r16801, %r16802
	load.8      %r16804 <- 0[%r16803]
	scast.8     %r16805 <- (8) %r16804
	cast.32     %r16806 <- (8) %r16805
	load.64*    %r16807 <- 0[p]
	load.64*    %r16808 <- 0[ep]
	push.32     %r16806
	push.64*    %r16807
	push.64*    %r16808
	call.32     %r16809 <- singlematch
	br          %r16809, .L3939, .L3941

.L3939:
	load.64     %r16810 <- 0[i]
	add.64      %r16811 <- %r16810, $1
	store.64    %r16811 -> 0[i]
	br          .L3940

.L3940:
	br          .L3942

.L3941:
	br          .L3947

.L3947:
	load.64     %r16812 <- 0[i]
	setge.32    %r16813 <- %r16812, $0
	br          %r16813, .L3944, .L3946

.L3944:
	load.64*    %r16814 <- 0[ms]
	load.64*    %r16815 <- 0[s]
	load.64     %r16816 <- 0[i]
	add.64*     %r16817 <- %r16815, %r16816
	load.64*    %r16818 <- 0[ep]
	add.64*     %r16819 <- %r16818, $1
	push.64*    %r16814
	push.64*    %r16817
	push.64*    %r16819
	call.64*    %r16820 <- match
	store.64*   %r16820 -> 0[res]
	load.64*    %r16821 <- 0[res]
	br          %r16821, .L3948, .L3949

.L3948:
	load.64*    %r16822 <- 0[res]
	phisrc.64*  %phi774(return) <- %r16822
	br          .L3950

.L3949:
	load.64     %r16824 <- 0[i]
	sub.64      %r16825 <- %r16824, $1
	store.64    %r16825 -> 0[i]
	br          .L3945

.L3945:
	br          .L3947

.L3946:
	phisrc.64*  %phi775(return) <- $0
	br          .L3950

.L3950:
	phi.64*     %r16823 <- %phi774(return), %phi775(return)
	ret.64*     %r16823


min_expand:
.L3951:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.64*   %arg4 -> 0[ep]
	br          .L3955

.L3955:
	br          .L3952

.L3952:
	load.64*    %r16826 <- 0[ms]
	load.64*    %r16827 <- 0[s]
	load.64*    %r16828 <- 0[ep]
	add.64*     %r16829 <- %r16828, $1
	push.64*    %r16826
	push.64*    %r16827
	push.64*    %r16829
	call.64*    %r16830 <- match
	store.64*   %r16830 -> 0[res]
	load.64*    %r16831 <- 0[res]
	setne.32    %r16832 <- %r16831, $0
	br          %r16832, .L3956, .L3957

.L3956:
	load.64*    %r16833 <- 0[res]
	phisrc.64*  %phi776(return) <- %r16833
	br          .L3958

.L3957:
	load.64*    %r16835 <- 0[s]
	load.64*    %r16836 <- 0[ms]
	load.64*    %r16837 <- 8[%r16836]
	setb.32     %r16838 <- %r16835, %r16837
	br          %r16838, .L3962, .L3961

.L3962:
	load.64*    %r16839 <- 0[s]
	load.8      %r16840 <- 0[%r16839]
	scast.8     %r16841 <- (8) %r16840
	cast.32     %r16842 <- (8) %r16841
	load.64*    %r16843 <- 0[p]
	load.64*    %r16844 <- 0[ep]
	push.32     %r16842
	push.64*    %r16843
	push.64*    %r16844
	call.32     %r16845 <- singlematch
	br          %r16845, .L3960, .L3961

.L3960:
	load.64*    %r16846 <- 0[s]
	add.64*     %r16847 <- %r16846, $1
	store.64*   %r16847 -> 0[s]
	br          .L3963

.L3961:
	phisrc.64*  %phi777(return) <- $0
	br          .L3958

.L3963:
	br          .L3959

.L3959:
	br          .L3953

.L3953:
	br          .L3955

.L3958:
	phi.64*     %r16834 <- %phi776(return), %phi777(return)
	ret.64*     %r16834


start_capture:
.L3964:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.32    %arg4 -> 0[what]
	load.64*    %r16848 <- 0[ms]
	load.32     %r16849 <- 24[%r16848]
	store.32    %r16849 -> 0[level]
	load.32     %r16850 <- 0[level]
	setge.32    %r16851 <- %r16850, $32
	br          %r16851, .L3965, .L3966

.L3965:
	load.64*    %r16852 <- 0[ms]
	load.64*    %r16853 <- 16[%r16852]
	symaddr.64* %r16854 <- <anon symbol:0x62d0014f5690>
	push.64*    %r16853
	push.64*    %r16854
	call.32     %r16855 <- luaL_error
	br          .L3966

.L3966:
	load.64*    %r16856 <- 0[s]
	load.64*    %r16857 <- 0[ms]
	add.64*     %r16858 <- %r16857, $32
	load.32     %r16859 <- 0[level]
	scast.64    %r16860 <- (32) %r16859
	muls.64     %r16861 <- %r16860, $16
	add.64*     %r16862 <- %r16858, %r16861
	store.64*   %r16856 -> 0[%r16862]
	load.32     %r16863 <- 0[what]
	scast.64    %r16864 <- (32) %r16863
	load.64*    %r16865 <- 0[ms]
	add.64*     %r16866 <- %r16865, $32
	load.32     %r16867 <- 0[level]
	scast.64    %r16868 <- (32) %r16867
	muls.64     %r16869 <- %r16868, $16
	add.64*     %r16870 <- %r16866, %r16869
	store.64    %r16864 -> 8[%r16870]
	load.32     %r16871 <- 0[level]
	add.32      %r16872 <- %r16871, $1
	load.64*    %r16873 <- 0[ms]
	store.32    %r16872 -> 24[%r16873]
	load.64*    %r16874 <- 0[ms]
	load.64*    %r16875 <- 0[s]
	load.64*    %r16876 <- 0[p]
	push.64*    %r16874
	push.64*    %r16875
	push.64*    %r16876
	call.64*    %r16877 <- match
	store.64*   %r16877 -> 0[res]
	seteq.32    %r16878 <- %r16877, $0
	br          %r16878, .L3967, .L3968

.L3967:
	load.64*    %r16879 <- 0[ms]
	load.32     %r16880 <- 24[%r16879]
	sub.32      %r16881 <- %r16880, $1
	store.32    %r16881 -> 24[%r16879]
	br          .L3968

.L3968:
	load.64*    %r16882 <- 0[res]
	phisrc.64*  %phi778(return) <- %r16882
	br          .L3969

.L3969:
	phi.64*     %r16883 <- %phi778(return)
	ret.64*     %r16882


end_capture:
.L3970:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	load.64*    %r16884 <- 0[ms]
	push.64*    %r16884
	call.32     %r16885 <- capture_to_close
	store.32    %r16885 -> 0[l]
	load.64*    %r16886 <- 0[s]
	load.64*    %r16887 <- 0[ms]
	add.64*     %r16888 <- %r16887, $32
	load.32     %r16889 <- 0[l]
	scast.64    %r16890 <- (32) %r16889
	muls.64     %r16891 <- %r16890, $16
	add.64*     %r16892 <- %r16888, %r16891
	load.64*    %r16893 <- 0[%r16892]
	sub.64      %r16894 <- %r16886, %r16893
	load.64*    %r16895 <- 0[ms]
	add.64*     %r16896 <- %r16895, $32
	load.32     %r16897 <- 0[l]
	scast.64    %r16898 <- (32) %r16897
	muls.64     %r16899 <- %r16898, $16
	add.64*     %r16900 <- %r16896, %r16899
	store.64    %r16894 -> 8[%r16900]
	load.64*    %r16901 <- 0[ms]
	load.64*    %r16902 <- 0[s]
	load.64*    %r16903 <- 0[p]
	push.64*    %r16901
	push.64*    %r16902
	push.64*    %r16903
	call.64*    %r16904 <- match
	store.64*   %r16904 -> 0[res]
	seteq.32    %r16905 <- %r16904, $0
	br          %r16905, .L3971, .L3972

.L3971:
	load.64*    %r16906 <- 0[ms]
	add.64*     %r16907 <- %r16906, $32
	load.32     %r16908 <- 0[l]
	scast.64    %r16909 <- (32) %r16908
	muls.64     %r16910 <- %r16909, $16
	add.64*     %r16911 <- %r16907, %r16910
	store.64    $-1 -> 8[%r16911]
	br          .L3972

.L3972:
	load.64*    %r16912 <- 0[res]
	phisrc.64*  %phi779(return) <- %r16912
	br          .L3973

.L3973:
	phi.64*     %r16913 <- %phi779(return)
	ret.64*     %r16912


match_capture:
.L3974:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.32    %arg3 -> 0[l]
	load.64*    %r16914 <- 0[ms]
	load.32     %r16915 <- 0[l]
	push.64*    %r16914
	push.32     %r16915
	call.32     %r16916 <- check_capture
	store.32    %r16916 -> 0[l]
	load.64*    %r16917 <- 0[ms]
	add.64*     %r16918 <- %r16917, $32
	load.32     %r16919 <- 0[l]
	scast.64    %r16920 <- (32) %r16919
	muls.64     %r16921 <- %r16920, $16
	add.64*     %r16922 <- %r16918, %r16921
	load.64     %r16923 <- 8[%r16922]
	scast.64    %r16924 <- (64) %r16923
	store.64    %r16924 -> 0[len]
	load.64*    %r16925 <- 0[ms]
	load.64*    %r16926 <- 8[%r16925]
	load.64*    %r16927 <- 0[s]
	sub.64      %r16928 <- %r16926, %r16927
	scast.64    %r16929 <- (64) %r16928
	load.64     %r16930 <- 0[len]
	setae.32    %r16931 <- %r16929, %r16930
	load.64*    %r16932 <- 0[ms]
	add.64*     %r16933 <- %r16932, $32
	load.32     %r16934 <- 0[l]
	scast.64    %r16935 <- (32) %r16934
	muls.64     %r16936 <- %r16935, $16
	add.64*     %r16937 <- %r16933, %r16936
	load.64*    %r16938 <- 0[%r16937]
	cast.64*    %r16939 <- (64) %r16938
	load.64*    %r16940 <- 0[s]
	cast.64*    %r16941 <- (64) %r16940
	load.64     %r16942 <- 0[len]
	push.64*    %r16939
	push.64*    %r16941
	push.64     %r16942
	call.32     %r16943 <- memcmp
	seteq.32    %r16944 <- %r16943, $0
	and-bool.32 %r16945 <- %r16931, %r16944
	br          %r16945, .L3975, .L3976

.L3975:
	load.64*    %r16946 <- 0[s]
	load.64     %r16947 <- 0[len]
	add.64*     %r16948 <- %r16946, %r16947
	phisrc.64*  %phi780(return) <- %r16948
	br          .L3977

.L3976:
	phisrc.64*  %phi781(return) <- $0
	br          .L3977

.L3977:
	phi.64*     %r16949 <- %phi780(return), %phi781(return)
	ret.64*     %r16949


match:
.L3979:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	br          .L3980

.L3980:
	load.64*    %r16950 <- 0[p]
	load.8      %r16951 <- 0[%r16950]
	switch.8    %r16951, 0 -> .L3985, 36 -> .L3986, 37 -> .L3984, 40 -> .L3982, 41 -> .L3983, default -> .L3987

.L3982:
	load.64*    %r16952 <- 0[p]
	load.8      %r16953 <- 1[%r16952]
	scast.32    %r16954 <- (8) %r16953
	seteq.32    %r16955 <- %r16954, $41
	br          %r16955, .L3988, .L3989

.L3988:
	load.64*    %r16956 <- 0[ms]
	load.64*    %r16957 <- 0[s]
	load.64*    %r16958 <- 0[p]
	add.64*     %r16959 <- %r16958, $2
	push.64*    %r16956
	push.64*    %r16957
	push.64*    %r16959
	push.32     $0xfffffffe
	call.64*    %r16960 <- start_capture
	phisrc.64*  %phi782(return) <- %r16960
	br          .L3990

.L3989:
	load.64*    %r16962 <- 0[ms]
	load.64*    %r16963 <- 0[s]
	load.64*    %r16964 <- 0[p]
	add.64*     %r16965 <- %r16964, $1
	push.64*    %r16962
	push.64*    %r16963
	push.64*    %r16965
	push.32     $0xffffffff
	call.64*    %r16966 <- start_capture
	phisrc.64*  %phi783(return) <- %r16966
	br          .L3990

.L3983:
	load.64*    %r16967 <- 0[ms]
	load.64*    %r16968 <- 0[s]
	load.64*    %r16969 <- 0[p]
	add.64*     %r16970 <- %r16969, $1
	push.64*    %r16967
	push.64*    %r16968
	push.64*    %r16970
	call.64*    %r16971 <- end_capture
	phisrc.64*  %phi784(return) <- %r16971
	br          .L3990

.L3984:
	load.64*    %r16972 <- 0[p]
	load.8      %r16973 <- 1[%r16972]
	switch.8    %r16973, 98 -> .L3993, 102 -> .L3994, default -> .L3995

.L3993:
	load.64*    %r16974 <- 0[ms]
	load.64*    %r16975 <- 0[s]
	load.64*    %r16976 <- 0[p]
	add.64*     %r16977 <- %r16976, $2
	push.64*    %r16974
	push.64*    %r16975
	push.64*    %r16977
	call.64*    %r16978 <- matchbalance
	store.64*   %r16978 -> 0[s]
	load.64*    %r16979 <- 0[s]
	seteq.32    %r16980 <- %r16979, $0
	br          %r16980, .L3996, .L3997

.L3996:
	phisrc.64*  %phi785(return) <- $0
	br          .L3990

.L3997:
	load.64*    %r16981 <- 0[p]
	cast.64     %r16982 <- (64) %r16981
	add.64      %r16983 <- %r16982, $4
	ptrcast.64* %r16984 <- (64) %r16983
	store.64*   %r16984 -> 0[p]
	br          .L3980

.L3994:
	load.64*    %r16985 <- 0[p]
	cast.64     %r16986 <- (64) %r16985
	add.64      %r16987 <- %r16986, $2
	ptrcast.64* %r16988 <- (64) %r16987
	store.64*   %r16988 -> 0[p]
	load.64*    %r16989 <- 0[p]
	load.8      %r16990 <- 0[%r16989]
	scast.32    %r16991 <- (8) %r16990
	setne.32    %r16992 <- %r16991, $91
	br          %r16992, .L3998, .L3999

.L3998:
	load.64*    %r16993 <- 0[ms]
	load.64*    %r16994 <- 16[%r16993]
	symaddr.64* %r16995 <- <anon symbol:0x62d0014f2dc8>
	push.64*    %r16994
	push.64*    %r16995
	call.32     %r16996 <- luaL_error
	br          .L3999

.L3999:
	load.64*    %r16997 <- 0[ms]
	load.64*    %r16998 <- 0[p]
	push.64*    %r16997
	push.64*    %r16998
	call.64*    %r16999 <- classend
	store.64*   %r16999 -> 0[ep]
	load.64*    %r17000 <- 0[s]
	load.64*    %r17001 <- 0[ms]
	load.64*    %r17002 <- 0[%r17001]
	seteq.32    %r17003 <- %r17000, %r17002
	br          %r17003, .L4000, .L4001

.L4000:
	phisrc.32   %phi786 <- $0
	br          .L4002

.L4001:
	load.64*    %r17004 <- 0[s]
	sub.64*     %r17005 <- %r17004, $1
	load.8      %r17006 <- 0[%r17005]
	scast.32    %r17007 <- (8) %r17006
	phisrc.32   %phi787 <- %r17007
	br          .L4002

.L4002:
	phi.32      %r17008 <- %phi786, %phi787
	scast.8     %r17009 <- (32) %r17008
	store.8     %r17009 -> 0[previous]
	load.8      %r17010 <- 0[previous]
	scast.8     %r17011 <- (8) %r17010
	cast.32     %r17012 <- (8) %r17011
	load.64*    %r17013 <- 0[p]
	load.64*    %r17014 <- 0[ep]
	sub.64*     %r17015 <- %r17014, $1
	push.32     %r17012
	push.64*    %r17013
	push.64*    %r17015
	call.32     %r17016 <- matchbracketclass
	br          %r17016, .L4003, .L4005

.L4005:
	load.64*    %r17017 <- 0[s]
	load.8      %r17018 <- 0[%r17017]
	scast.8     %r17019 <- (8) %r17018
	cast.32     %r17020 <- (8) %r17019
	load.64*    %r17021 <- 0[p]
	load.64*    %r17022 <- 0[ep]
	sub.64*     %r17023 <- %r17022, $1
	push.32     %r17020
	push.64*    %r17021
	push.64*    %r17023
	call.32     %r17024 <- matchbracketclass
	br          %r17024, .L4004, .L4003

.L4003:
	phisrc.64*  %phi788(return) <- $0
	br          .L3990

.L4004:
	load.64*    %r17025 <- 0[ep]
	store.64*   %r17025 -> 0[p]
	br          .L3980

.L3995:
	call.64*    %r17026 <- __ctype_b_loc
	load.64*    %r17027 <- 0[%r17026]
	load.64*    %r17028 <- 0[p]
	load.8      %r17029 <- 1[%r17028]
	scast.8     %r17030 <- (8) %r17029
	cast.32     %r17031 <- (8) %r17030
	scast.64    %r17032 <- (32) %r17031
	muls.64     %r17033 <- %r17032, $2
	add.64*     %r17034 <- %r17027, %r17033
	load.16     %r17035 <- 0[%r17034]
	cast.32     %r17036 <- (16) %r17035
	and.32      %r17037 <- %r17036, $0x800
	br          %r17037, .L4006, .L4007

.L4006:
	load.64*    %r17038 <- 0[ms]
	load.64*    %r17039 <- 0[s]
	load.64*    %r17040 <- 0[p]
	load.8      %r17041 <- 1[%r17040]
	scast.8     %r17042 <- (8) %r17041
	cast.32     %r17043 <- (8) %r17042
	push.64*    %r17038
	push.64*    %r17039
	push.32     %r17043
	call.64*    %r17044 <- match_capture
	store.64*   %r17044 -> 0[s]
	load.64*    %r17045 <- 0[s]
	seteq.32    %r17046 <- %r17045, $0
	br          %r17046, .L4008, .L4009

.L4008:
	phisrc.64*  %phi789(return) <- $0
	br          .L3990

.L4009:
	load.64*    %r17047 <- 0[p]
	cast.64     %r17048 <- (64) %r17047
	add.64      %r17049 <- %r17048, $2
	ptrcast.64* %r17050 <- (64) %r17049
	store.64*   %r17050 -> 0[p]
	br          .L3980

.L4007:
	br          .L4010

.L3985:
	load.64*    %r17051 <- 0[s]
	phisrc.64*  %phi790(return) <- %r17051
	br          .L3990

.L3986:
	load.64*    %r17052 <- 0[p]
	load.8      %r17053 <- 1[%r17052]
	scast.32    %r17054 <- (8) %r17053
	seteq.32    %r17055 <- %r17054, $0
	br          %r17055, .L4011, .L4012

.L4011:
	load.64*    %r17056 <- 0[s]
	load.64*    %r17057 <- 0[s]
	load.64*    %r17058 <- 0[ms]
	load.64*    %r17059 <- 8[%r17058]
	seteq.32    %r17060 <- %r17057, %r17059
	select.64*  %r17061 <- %r17060, %r17056, $0
	phisrc.64*  %phi791(return) <- %r17061
	br          .L3990

.L4012:
	br          .L4010

.L3987:
	br          .L4010

.L4010:
	load.64*    %r17062 <- 0[ms]
	load.64*    %r17063 <- 0[p]
	push.64*    %r17062
	push.64*    %r17063
	call.64*    %r17064 <- classend
	store.64*   %r17064 -> 0[ep]
	load.64*    %r17065 <- 0[s]
	load.64*    %r17066 <- 0[ms]
	load.64*    %r17067 <- 8[%r17066]
	setb.32     %r17068 <- %r17065, %r17067
	br          %r17068, .L4014, .L4015

.L4014:
	load.64*    %r17069 <- 0[s]
	load.8      %r17070 <- 0[%r17069]
	scast.8     %r17071 <- (8) %r17070
	cast.32     %r17072 <- (8) %r17071
	load.64*    %r17073 <- 0[p]
	load.64*    %r17074 <- 0[ep]
	push.32     %r17072
	push.64*    %r17073
	push.64*    %r17074
	call.32     %r17075 <- singlematch
	phisrc.32   %phi792 <- %r17075
	br          .L4016

.L4015:
	phisrc.32   %phi793 <- $0
	br          .L4016

.L4016:
	phi.32      %r17076 <- %phi792, %phi793
	store.32    %r17076 -> 0[m]
	load.64*    %r17077 <- 0[ep]
	load.8      %r17078 <- 0[%r17077]
	switch.8    %r17078, 42 -> .L4019, 43 -> .L4020, 45 -> .L4021, 63 -> .L4018, default -> .L4022

.L4018:
	load.32     %r17079 <- 0[m]
	br          %r17079, .L4025, .L4024

.L4025:
	load.64*    %r17080 <- 0[ms]
	load.64*    %r17081 <- 0[s]
	add.64*     %r17082 <- %r17081, $1
	load.64*    %r17083 <- 0[ep]
	add.64*     %r17084 <- %r17083, $1
	push.64*    %r17080
	push.64*    %r17082
	push.64*    %r17084
	call.64*    %r17085 <- match
	store.64*   %r17085 -> 0[res]
	setne.32    %r17086 <- %r17085, $0
	br          %r17086, .L4023, .L4024

.L4023:
	load.64*    %r17087 <- 0[res]
	phisrc.64*  %phi794(return) <- %r17087
	br          .L3990

.L4024:
	load.64*    %r17088 <- 0[ep]
	add.64*     %r17089 <- %r17088, $1
	store.64*   %r17089 -> 0[p]
	br          .L3980

.L4019:
	load.64*    %r17090 <- 0[ms]
	load.64*    %r17091 <- 0[s]
	load.64*    %r17092 <- 0[p]
	load.64*    %r17093 <- 0[ep]
	push.64*    %r17090
	push.64*    %r17091
	push.64*    %r17092
	push.64*    %r17093
	call.64*    %r17094 <- max_expand
	phisrc.64*  %phi795(return) <- %r17094
	br          .L3990

.L4020:
	load.32     %r17095 <- 0[m]
	br          %r17095, .L4026, .L4027

.L4026:
	load.64*    %r17096 <- 0[ms]
	load.64*    %r17097 <- 0[s]
	add.64*     %r17098 <- %r17097, $1
	load.64*    %r17099 <- 0[p]
	load.64*    %r17100 <- 0[ep]
	push.64*    %r17096
	push.64*    %r17098
	push.64*    %r17099
	push.64*    %r17100
	call.64*    %r17101 <- max_expand
	phisrc.64*  %phi796 <- %r17101
	br          .L4028

.L4027:
	phisrc.64*  %phi797 <- $0
	br          .L4028

.L4028:
	phi.64*     %r17102 <- %phi796, %phi797
	phisrc.64*  %phi798(return) <- %r17102
	br          .L3990

.L4021:
	load.64*    %r17103 <- 0[ms]
	load.64*    %r17104 <- 0[s]
	load.64*    %r17105 <- 0[p]
	load.64*    %r17106 <- 0[ep]
	push.64*    %r17103
	push.64*    %r17104
	push.64*    %r17105
	push.64*    %r17106
	call.64*    %r17107 <- min_expand
	phisrc.64*  %phi799(return) <- %r17107
	br          .L3990

.L4022:
	load.32     %r17108 <- 0[m]
	br          %r17108, .L4030, .L4029

.L4029:
	phisrc.64*  %phi800(return) <- $0
	br          .L3990

.L4030:
	load.64*    %r17109 <- 0[s]
	add.64*     %r17110 <- %r17109, $1
	store.64*   %r17110 -> 0[s]
	load.64*    %r17111 <- 0[ep]
	store.64*   %r17111 -> 0[p]
	br          .L3980

.L3990:
	phi.64*     %r16961 <- %phi782(return), %phi783(return), %phi784(return), %phi785(return), %phi788(return), %phi789(return), %phi790(return), %phi791(return), %phi794(return), %phi795(return), %phi798(return), %phi799(return), %phi800(return)
	ret.64*     %r16961


lmemfind:
.L4031:
	<entry-point>
	store.64*   %arg1 -> 0[s1]
	store.64    %arg2 -> 0[l1]
	store.64*   %arg3 -> 0[s2]
	store.64    %arg4 -> 0[l2]
	load.64     %r17112 <- 0[l2]
	seteq.32    %r17113 <- %r17112, $0
	br          %r17113, .L4032, .L4033

.L4032:
	load.64*    %r17114 <- 0[s1]
	phisrc.64*  %phi801(return) <- %r17114
	br          .L4034

.L4033:
	load.64     %r17116 <- 0[l2]
	load.64     %r17117 <- 0[l1]
	seta.32     %r17118 <- %r17116, %r17117
	br          %r17118, .L4036, .L4037

.L4036:
	phisrc.64*  %phi802(return) <- $0
	br          .L4034

.L4037:
	load.64     %r17119 <- 0[l2]
	sub.64      %r17120 <- %r17119, $1
	store.64    %r17120 -> 0[l2]
	load.64     %r17121 <- 0[l1]
	load.64     %r17122 <- 0[l2]
	sub.64      %r17123 <- %r17121, %r17122
	store.64    %r17123 -> 0[l1]
	br          .L4042

.L4042:
	load.64     %r17124 <- 0[l1]
	seta.32     %r17125 <- %r17124, $0
	br          %r17125, .L4043, .L4041

.L4043:
	load.64*    %r17126 <- 0[s1]
	cast.64*    %r17127 <- (64) %r17126
	load.64*    %r17128 <- 0[s2]
	load.8      %r17129 <- 0[%r17128]
	scast.32    %r17130 <- (8) %r17129
	load.64     %r17131 <- 0[l1]
	push.64*    %r17127
	push.32     %r17130
	push.64     %r17131
	call.64*    %r17132 <- memchr
	ptrcast.64* %r17133 <- (64) %r17132
	store.64*   %r17133 -> 0[init]
	setne.32    %r17134 <- %r17133, $0
	br          %r17134, .L4039, .L4041

.L4039:
	load.64*    %r17135 <- 0[init]
	add.64*     %r17136 <- %r17135, $1
	store.64*   %r17136 -> 0[init]
	load.64*    %r17137 <- 0[init]
	cast.64*    %r17138 <- (64) %r17137
	load.64*    %r17139 <- 0[s2]
	add.64*     %r17140 <- %r17139, $1
	cast.64*    %r17141 <- (64) %r17140
	load.64     %r17142 <- 0[l2]
	push.64*    %r17138
	push.64*    %r17141
	push.64     %r17142
	call.32     %r17143 <- memcmp
	seteq.32    %r17144 <- %r17143, $0
	br          %r17144, .L4044, .L4045

.L4044:
	load.64*    %r17145 <- 0[init]
	sub.64*     %r17146 <- %r17145, $1
	phisrc.64*  %phi803(return) <- %r17146
	br          .L4034

.L4045:
	load.64*    %r17147 <- 0[init]
	load.64*    %r17148 <- 0[s1]
	sub.64      %r17149 <- %r17147, %r17148
	scast.64    %r17150 <- (64) %r17149
	load.64     %r17151 <- 0[l1]
	cast.64     %r17152 <- (64) %r17151
	sub.64      %r17153 <- %r17152, %r17150
	cast.64     %r17154 <- (64) %r17153
	store.64    %r17154 -> 0[l1]
	load.64*    %r17155 <- 0[init]
	store.64*   %r17155 -> 0[s1]
	br          .L4046

.L4046:
	br          .L4040

.L4040:
	br          .L4042

.L4041:
	phisrc.64*  %phi804(return) <- $0
	br          .L4034

.L4034:
	phi.64*     %r17115 <- %phi801(return), %phi802(return), %phi803(return), %phi804(return)
	ret.64*     %r17115


push_onecapture:
.L4047:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.32     %r17156 <- 0[i]
	load.64*    %r17157 <- 0[ms]
	load.32     %r17158 <- 24[%r17157]
	setge.32    %r17159 <- %r17156, %r17158
	br          %r17159, .L4048, .L4049

.L4048:
	load.32     %r17160 <- 0[i]
	seteq.32    %r17161 <- %r17160, $0
	br          %r17161, .L4050, .L4051

.L4050:
	load.64*    %r17162 <- 0[ms]
	load.64*    %r17163 <- 16[%r17162]
	load.64*    %r17164 <- 0[s]
	load.64*    %r17165 <- 0[e]
	load.64*    %r17166 <- 0[s]
	sub.64      %r17167 <- %r17165, %r17166
	scast.64    %r17168 <- (64) %r17167
	push.64*    %r17163
	push.64*    %r17164
	push.64     %r17168
	call        lua_pushlstring
	br          .L4052

.L4051:
	load.64*    %r17169 <- 0[ms]
	load.64*    %r17170 <- 16[%r17169]
	symaddr.64* %r17171 <- <anon symbol:0x62d0015185e8>
	push.64*    %r17170
	push.64*    %r17171
	call.32     %r17172 <- luaL_error
	br          .L4052

.L4052:
	br          .L4053

.L4049:
	load.64*    %r17173 <- 0[ms]
	add.64*     %r17174 <- %r17173, $32
	load.32     %r17175 <- 0[i]
	scast.64    %r17176 <- (32) %r17175
	muls.64     %r17177 <- %r17176, $16
	add.64*     %r17178 <- %r17174, %r17177
	load.64     %r17179 <- 8[%r17178]
	store.64    %r17179 -> 0[l]
	load.64     %r17180 <- 0[l]
	seteq.32    %r17181 <- %r17180, $-1
	br          %r17181, .L4054, .L4055

.L4054:
	load.64*    %r17182 <- 0[ms]
	load.64*    %r17183 <- 16[%r17182]
	symaddr.64* %r17184 <- <anon symbol:0x62d001518fe0>
	push.64*    %r17183
	push.64*    %r17184
	call.32     %r17185 <- luaL_error
	br          .L4055

.L4055:
	load.64     %r17186 <- 0[l]
	seteq.32    %r17187 <- %r17186, $-2
	br          %r17187, .L4056, .L4057

.L4056:
	load.64*    %r17188 <- 0[ms]
	load.64*    %r17189 <- 16[%r17188]
	load.64*    %r17190 <- 0[ms]
	add.64*     %r17191 <- %r17190, $32
	load.32     %r17192 <- 0[i]
	scast.64    %r17193 <- (32) %r17192
	muls.64     %r17194 <- %r17193, $16
	add.64*     %r17195 <- %r17191, %r17194
	load.64*    %r17196 <- 0[%r17195]
	load.64*    %r17197 <- 0[ms]
	load.64*    %r17198 <- 0[%r17197]
	sub.64      %r17199 <- %r17196, %r17198
	add.64      %r17200 <- %r17199, $1
	push.64*    %r17189
	push.64     %r17200
	call        lua_pushinteger
	br          .L4058

.L4057:
	load.64*    %r17201 <- 0[ms]
	load.64*    %r17202 <- 16[%r17201]
	load.64*    %r17203 <- 0[ms]
	add.64*     %r17204 <- %r17203, $32
	load.32     %r17205 <- 0[i]
	scast.64    %r17206 <- (32) %r17205
	muls.64     %r17207 <- %r17206, $16
	add.64*     %r17208 <- %r17204, %r17207
	load.64*    %r17209 <- 0[%r17208]
	load.64     %r17210 <- 0[l]
	scast.64    %r17211 <- (64) %r17210
	push.64*    %r17202
	push.64*    %r17209
	push.64     %r17211
	call        lua_pushlstring
	br          .L4058

.L4058:
	br          .L4053

.L4053:
	ret


push_captures:
.L4059:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[e]
	load.64*    %r17212 <- 0[ms]
	load.32     %r17213 <- 24[%r17212]
	seteq.32    %r17214 <- %r17213, $0
	load.64*    %r17215 <- 0[s]
	and-bool.32 %r17216 <- %r17214, %r17215
	br          %r17216, .L4060, .L4061

.L4060:
	phisrc.32   %phi805 <- $1
	br          .L4062

.L4061:
	load.64*    %r17217 <- 0[ms]
	load.32     %r17218 <- 24[%r17217]
	phisrc.32   %phi806 <- %r17218
	br          .L4062

.L4062:
	phi.32      %r17219 <- %phi805, %phi806
	store.32    %r17219 -> 0[nlevels]
	load.64*    %r17220 <- 0[ms]
	load.64*    %r17221 <- 16[%r17220]
	load.32     %r17222 <- 0[nlevels]
	symaddr.64* %r17223 <- <anon symbol:0x62d00151a770>
	push.64*    %r17221
	push.32     %r17222
	push.64*    %r17223
	call        luaL_checkstack
	store.32    $0 -> 0[i]
	br          .L4066

.L4066:
	load.32     %r17224 <- 0[i]
	load.32     %r17225 <- 0[nlevels]
	setlt.32    %r17226 <- %r17224, %r17225
	br          %r17226, .L4063, .L4065

.L4063:
	load.64*    %r17227 <- 0[ms]
	load.32     %r17228 <- 0[i]
	load.64*    %r17229 <- 0[s]
	load.64*    %r17230 <- 0[e]
	push.64*    %r17227
	push.32     %r17228
	push.64*    %r17229
	push.64*    %r17230
	call        push_onecapture
	br          .L4064

.L4064:
	load.32     %r17231 <- 0[i]
	add.32      %r17232 <- %r17231, $1
	store.32    %r17232 -> 0[i]
	br          .L4066

.L4065:
	load.32     %r17233 <- 0[nlevels]
	phisrc.32   %phi807(return) <- %r17233
	br          .L4067

.L4067:
	phi.32      %r17234 <- %phi807(return)
	ret.32      %r17233


str_find_aux:
.L4068:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[find]
	load.64*    %r17235 <- 0[L]
	symaddr.64* %r17236 <- l1
	push.64*    %r17235
	push.32     $1
	push.64*    %r17236
	call.64*    %r17237 <- luaL_checklstring
	store.64*   %r17237 -> 0[s]
	load.64*    %r17238 <- 0[L]
	symaddr.64* %r17239 <- l2
	push.64*    %r17238
	push.32     $2
	push.64*    %r17239
	call.64*    %r17240 <- luaL_checklstring
	store.64*   %r17240 -> 0[p]
	load.64*    %r17241 <- 0[L]
	push.64*    %r17241
	push.32     $3
	push.64     $1
	call.64     %r17242 <- luaL_optinteger
	load.64     %r17243 <- 0[l1]
	push.64     %r17242
	push.64     %r17243
	call.64     %r17244 <- posrelat
	sub.64      %r17245 <- %r17244, $1
	store.64    %r17245 -> 0[init]
	load.64     %r17246 <- 0[init]
	setlt.32    %r17247 <- %r17246, $0
	br          %r17247, .L4069, .L4070

.L4069:
	store.64    $0 -> 0[init]
	br          .L4071

.L4070:
	load.64     %r17248 <- 0[init]
	scast.64    %r17249 <- (64) %r17248
	load.64     %r17250 <- 0[l1]
	seta.32     %r17251 <- %r17249, %r17250
	br          %r17251, .L4072, .L4073

.L4072:
	load.64     %r17252 <- 0[l1]
	cast.64     %r17253 <- (64) %r17252
	store.64    %r17253 -> 0[init]
	br          .L4073

.L4073:
	br          .L4071

.L4071:
	load.32     %r17254 <- 0[find]
	br          %r17254, .L4076, .L4075

.L4076:
	load.64*    %r17255 <- 0[L]
	push.64*    %r17255
	push.32     $4
	call.32     %r17256 <- lua_toboolean
	load.64*    %r17257 <- 0[p]
	symaddr.64* %r17258 <- <anon symbol:0x62d00151aeb0>
	push.64*    %r17257
	push.64*    %r17258
	call.64*    %r17259 <- strpbrk
	seteq.32    %r17260 <- %r17259, $0
	or-bool.32  %r17261 <- %r17256, %r17260
	br          %r17261, .L4074, .L4075

.L4074:
	load.64*    %r17262 <- 0[s]
	load.64     %r17263 <- 0[init]
	add.64*     %r17264 <- %r17262, %r17263
	load.64     %r17265 <- 0[l1]
	load.64     %r17266 <- 0[init]
	scast.64    %r17267 <- (64) %r17266
	sub.64      %r17268 <- %r17265, %r17267
	load.64*    %r17269 <- 0[p]
	load.64     %r17270 <- 0[l2]
	push.64*    %r17264
	push.64     %r17268
	push.64*    %r17269
	push.64     %r17270
	call.64*    %r17271 <- lmemfind
	store.64*   %r17271 -> 0[s2]
	load.64*    %r17272 <- 0[s2]
	br          %r17272, .L4077, .L4078

.L4077:
	load.64*    %r17273 <- 0[L]
	load.64*    %r17274 <- 0[s2]
	load.64*    %r17275 <- 0[s]
	sub.64      %r17276 <- %r17274, %r17275
	add.64      %r17277 <- %r17276, $1
	push.64*    %r17273
	push.64     %r17277
	call        lua_pushinteger
	load.64*    %r17278 <- 0[L]
	load.64*    %r17279 <- 0[s2]
	load.64*    %r17280 <- 0[s]
	sub.64      %r17281 <- %r17279, %r17280
	scast.64    %r17282 <- (64) %r17281
	load.64     %r17283 <- 0[l2]
	add.64      %r17284 <- %r17282, %r17283
	cast.64     %r17285 <- (64) %r17284
	push.64*    %r17278
	push.64     %r17285
	call        lua_pushinteger
	phisrc.32   %phi808(return) <- $2
	br          .L4079

.L4078:
	br          .L4080

.L4075:
	load.64*    %r17287 <- 0[p]
	load.8      %r17288 <- 0[%r17287]
	scast.32    %r17289 <- (8) %r17288
	seteq.32    %r17290 <- %r17289, $94
	br          %r17290, .L4081, .L4082

.L4081:
	load.64*    %r17291 <- 0[p]
	add.64*     %r17292 <- %r17291, $1
	store.64*   %r17292 -> 0[p]
	phisrc.32   %phi809 <- $1
	br          .L4083

.L4082:
	phisrc.32   %phi810 <- $0
	br          .L4083

.L4083:
	phi.32      %r17293 <- %phi809, %phi810
	store.32    %r17293 -> 0[anchor]
	load.64*    %r17294 <- 0[s]
	load.64     %r17295 <- 0[init]
	add.64*     %r17296 <- %r17294, %r17295
	store.64*   %r17296 -> 0[s1]
	load.64*    %r17297 <- 0[L]
	store.64*   %r17297 -> 16[ms]
	load.64*    %r17298 <- 0[s]
	store.64*   %r17298 -> 0[ms]
	load.64*    %r17299 <- 0[s]
	load.64     %r17300 <- 0[l1]
	add.64*     %r17301 <- %r17299, %r17300
	store.64*   %r17301 -> 8[ms]
	br          .L4084

.L4084:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17302 <- ms
	load.64*    %r17303 <- 0[s1]
	load.64*    %r17304 <- 0[p]
	push.64*    %r17302
	push.64*    %r17303
	push.64*    %r17304
	call.64*    %r17305 <- match
	store.64*   %r17305 -> 0[res]
	setne.32    %r17306 <- %r17305, $0
	br          %r17306, .L4087, .L4088

.L4087:
	load.32     %r17307 <- 0[find]
	br          %r17307, .L4089, .L4090

.L4089:
	load.64*    %r17308 <- 0[L]
	load.64*    %r17309 <- 0[s1]
	load.64*    %r17310 <- 0[s]
	sub.64      %r17311 <- %r17309, %r17310
	add.64      %r17312 <- %r17311, $1
	push.64*    %r17308
	push.64     %r17312
	call        lua_pushinteger
	load.64*    %r17313 <- 0[L]
	load.64*    %r17314 <- 0[res]
	load.64*    %r17315 <- 0[s]
	sub.64      %r17316 <- %r17314, %r17315
	push.64*    %r17313
	push.64     %r17316
	call        lua_pushinteger
	symaddr.64* %r17317 <- ms
	push.64*    %r17317
	push.64*    $0
	push.64*    $0
	call.32     %r17318 <- push_captures
	add.32      %r17319 <- %r17318, $2
	phisrc.32   %phi811(return) <- %r17319
	br          .L4079

.L4090:
	symaddr.64* %r17320 <- ms
	load.64*    %r17321 <- 0[s1]
	load.64*    %r17322 <- 0[res]
	push.64*    %r17320
	push.64*    %r17321
	push.64*    %r17322
	call.32     %r17323 <- push_captures
	phisrc.32   %phi812(return) <- %r17323
	br          .L4079

.L4088:
	br          .L4085

.L4085:
	load.64*    %r17324 <- 0[s1]
	add.64*     %r17325 <- %r17324, $1
	store.64*   %r17325 -> 0[s1]
	load.64*    %r17326 <- 8[ms]
	setb.32     %r17327 <- %r17324, %r17326
	load.32     %r17328 <- 0[anchor]
	seteq.32    %r17329 <- %r17328, $0
	and-bool.32 %r17330 <- %r17327, %r17329
	br          %r17330, .L4084, .L4086

.L4086:
	br          .L4080

.L4080:
	load.64*    %r17331 <- 0[L]
	push.64*    %r17331
	call        lua_pushnil
	phisrc.32   %phi813(return) <- $1
	br          .L4079

.L4079:
	phi.32      %r17286 <- %phi808(return), %phi811(return), %phi812(return), %phi813(return)
	ret.32      %r17286


str_find:
.L4092:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17332 <- 0[L]
	push.64*    %r17332
	push.32     $1
	call.32     %r17333 <- str_find_aux
	phisrc.32   %phi814(return) <- %r17333
	br          .L4093

.L4093:
	phi.32      %r17334 <- %phi814(return)
	ret.32      %r17333


str_match:
.L4094:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17335 <- 0[L]
	push.64*    %r17335
	push.32     $0
	call.32     %r17336 <- str_find_aux
	phisrc.32   %phi815(return) <- %r17336
	br          .L4095

.L4095:
	phi.32      %r17337 <- %phi815(return)
	ret.32      %r17336


gmatch_aux:
.L4096:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17338 <- 0[L]
	symaddr.64* %r17339 <- ls
	push.64*    %r17338
	push.32     $0xffffd8ed
	push.64*    %r17339
	call.64*    %r17340 <- lua_tolstring
	store.64*   %r17340 -> 0[s]
	load.64*    %r17341 <- 0[L]
	push.64*    %r17341
	push.32     $0xffffd8ec
	push.64*    $0
	call.64*    %r17342 <- lua_tolstring
	store.64*   %r17342 -> 0[p]
	load.64*    %r17343 <- 0[L]
	store.64*   %r17343 -> 16[ms]
	load.64*    %r17344 <- 0[s]
	store.64*   %r17344 -> 0[ms]
	load.64*    %r17345 <- 0[s]
	load.64     %r17346 <- 0[ls]
	add.64*     %r17347 <- %r17345, %r17346
	store.64*   %r17347 -> 8[ms]
	load.64*    %r17348 <- 0[s]
	load.64*    %r17349 <- 0[L]
	push.64*    %r17349
	push.32     $0xffffd8eb
	call.64     %r17350 <- lua_tointeger
	scast.64    %r17351 <- (64) %r17350
	add.64*     %r17352 <- %r17348, %r17351
	store.64*   %r17352 -> 0[src]
	br          .L4100

.L4100:
	load.64*    %r17353 <- 0[src]
	load.64*    %r17354 <- 8[ms]
	setbe.32    %r17355 <- %r17353, %r17354
	br          %r17355, .L4097, .L4099

.L4097:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17356 <- ms
	load.64*    %r17357 <- 0[src]
	load.64*    %r17358 <- 0[p]
	push.64*    %r17356
	push.64*    %r17357
	push.64*    %r17358
	call.64*    %r17359 <- match
	store.64*   %r17359 -> 0[e]
	setne.32    %r17360 <- %r17359, $0
	br          %r17360, .L4101, .L4102

.L4101:
	load.64*    %r17361 <- 0[e]
	load.64*    %r17362 <- 0[s]
	sub.64      %r17363 <- %r17361, %r17362
	store.64    %r17363 -> 0[newstart]
	load.64*    %r17364 <- 0[e]
	load.64*    %r17365 <- 0[src]
	seteq.32    %r17366 <- %r17364, %r17365
	br          %r17366, .L4103, .L4104

.L4103:
	load.64     %r17367 <- 0[newstart]
	add.64      %r17368 <- %r17367, $1
	store.64    %r17368 -> 0[newstart]
	br          .L4104

.L4104:
	load.64*    %r17369 <- 0[L]
	load.64     %r17370 <- 0[newstart]
	push.64*    %r17369
	push.64     %r17370
	call        lua_pushinteger
	load.64*    %r17371 <- 0[L]
	push.64*    %r17371
	push.32     $0xffffd8eb
	call        lua_replace
	symaddr.64* %r17372 <- ms
	load.64*    %r17373 <- 0[src]
	load.64*    %r17374 <- 0[e]
	push.64*    %r17372
	push.64*    %r17373
	push.64*    %r17374
	call.32     %r17375 <- push_captures
	phisrc.32   %phi816(return) <- %r17375
	br          .L4105

.L4102:
	br          .L4098

.L4098:
	load.64*    %r17377 <- 0[src]
	add.64*     %r17378 <- %r17377, $1
	store.64*   %r17378 -> 0[src]
	br          .L4100

.L4099:
	phisrc.32   %phi817(return) <- $0
	br          .L4105

.L4105:
	phi.32      %r17376 <- %phi816(return), %phi817(return)
	ret.32      %r17376


gmatch:
.L4106:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17379 <- 0[L]
	push.64*    %r17379
	push.32     $1
	push.64*    $0
	call.64*    %r17380 <- luaL_checklstring
	load.64*    %r17381 <- 0[L]
	push.64*    %r17381
	push.32     $2
	push.64*    $0
	call.64*    %r17382 <- luaL_checklstring
	load.64*    %r17383 <- 0[L]
	push.64*    %r17383
	push.32     $2
	call        lua_settop
	load.64*    %r17384 <- 0[L]
	push.64*    %r17384
	push.64     $0
	call        lua_pushinteger
	load.64*    %r17385 <- 0[L]
	symaddr.64* %r17386 <- gmatch_aux
	push.64*    %r17385
	push.64*    %r17386
	push.32     $3
	call        lua_pushcclosure
	phisrc.32   %phi818(return) <- $1
	br          .L4107

.L4107:
	phi.32      %r17387 <- %phi818(return)
	ret.32      $1


add_s:
.L4108:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[b]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.64*    %r17388 <- 0[ms]
	load.64*    %r17389 <- 16[%r17388]
	symaddr.64* %r17390 <- l
	push.64*    %r17389
	push.32     $3
	push.64*    %r17390
	call.64*    %r17391 <- lua_tolstring
	store.64*   %r17391 -> 0[news]
	store.64    $0 -> 0[i]
	br          .L4112

.L4112:
	load.64     %r17392 <- 0[i]
	load.64     %r17393 <- 0[l]
	setb.32     %r17394 <- %r17392, %r17393
	br          %r17394, .L4109, .L4111

.L4109:
	load.64*    %r17395 <- 0[news]
	load.64     %r17396 <- 0[i]
	add.64*     %r17397 <- %r17395, %r17396
	load.8      %r17398 <- 0[%r17397]
	scast.32    %r17399 <- (8) %r17398
	setne.32    %r17400 <- %r17399, $37
	br          %r17400, .L4113, .L4114

.L4113:
	load.64*    %r17401 <- 0[b]
	load.64*    %r17402 <- 0[%r17401]
	load.64*    %r17403 <- 0[b]
	add.64*     %r17404 <- %r17403, $24
	add.64*     %r17405 <- %r17404, $0x2000
	setb.32     %r17406 <- %r17402, %r17405
	br          %r17406, .L4115, .L4116

.L4115:
	phisrc.32   %phi819 <- $1
	br          .L4117

.L4116:
	load.64*    %r17407 <- 0[b]
	push.64*    %r17407
	call.64*    %r17408 <- luaL_prepbuffer
	phisrc.32   %phi820 <- %r17408
	br          .L4117

.L4117:
	phi.32      %r17409 <- %phi819, %phi820
	load.64*    %r17410 <- 0[news]
	load.64     %r17411 <- 0[i]
	add.64*     %r17412 <- %r17410, %r17411
	load.8      %r17413 <- 0[%r17412]
	scast.8     %r17414 <- (8) %r17413
	load.64*    %r17415 <- 0[b]
	load.64*    %r17416 <- 0[%r17415]
	add.64*     %r17417 <- %r17416, $1
	store.64*   %r17417 -> 0[%r17415]
	store.8     %r17414 -> 0[%r17416]
	br          .L4118

.L4114:
	load.64     %r17418 <- 0[i]
	add.64      %r17419 <- %r17418, $1
	store.64    %r17419 -> 0[i]
	call.64*    %r17420 <- __ctype_b_loc
	load.64*    %r17421 <- 0[%r17420]
	load.64*    %r17422 <- 0[news]
	load.64     %r17423 <- 0[i]
	add.64*     %r17424 <- %r17422, %r17423
	load.8      %r17425 <- 0[%r17424]
	scast.8     %r17426 <- (8) %r17425
	cast.32     %r17427 <- (8) %r17426
	scast.64    %r17428 <- (32) %r17427
	muls.64     %r17429 <- %r17428, $2
	add.64*     %r17430 <- %r17421, %r17429
	load.16     %r17431 <- 0[%r17430]
	cast.32     %r17432 <- (16) %r17431
	and.32      %r17433 <- %r17432, $0x800
	br          %r17433, .L4120, .L4119

.L4119:
	load.64*    %r17434 <- 0[b]
	load.64*    %r17435 <- 0[%r17434]
	load.64*    %r17436 <- 0[b]
	add.64*     %r17437 <- %r17436, $24
	add.64*     %r17438 <- %r17437, $0x2000
	setb.32     %r17439 <- %r17435, %r17438
	br          %r17439, .L4121, .L4122

.L4121:
	phisrc.32   %phi821 <- $1
	br          .L4123

.L4122:
	load.64*    %r17440 <- 0[b]
	push.64*    %r17440
	call.64*    %r17441 <- luaL_prepbuffer
	phisrc.32   %phi822 <- %r17441
	br          .L4123

.L4123:
	phi.32      %r17442 <- %phi821, %phi822
	load.64*    %r17443 <- 0[news]
	load.64     %r17444 <- 0[i]
	add.64*     %r17445 <- %r17443, %r17444
	load.8      %r17446 <- 0[%r17445]
	scast.8     %r17447 <- (8) %r17446
	load.64*    %r17448 <- 0[b]
	load.64*    %r17449 <- 0[%r17448]
	add.64*     %r17450 <- %r17449, $1
	store.64*   %r17450 -> 0[%r17448]
	store.8     %r17447 -> 0[%r17449]
	br          .L4124

.L4120:
	load.64*    %r17451 <- 0[news]
	load.64     %r17452 <- 0[i]
	add.64*     %r17453 <- %r17451, %r17452
	load.8      %r17454 <- 0[%r17453]
	scast.32    %r17455 <- (8) %r17454
	seteq.32    %r17456 <- %r17455, $48
	br          %r17456, .L4125, .L4126

.L4125:
	load.64*    %r17457 <- 0[b]
	load.64*    %r17458 <- 0[s]
	load.64*    %r17459 <- 0[e]
	load.64*    %r17460 <- 0[s]
	sub.64      %r17461 <- %r17459, %r17460
	scast.64    %r17462 <- (64) %r17461
	push.64*    %r17457
	push.64*    %r17458
	push.64     %r17462
	call        luaL_addlstring
	br          .L4127

.L4126:
	load.64*    %r17463 <- 0[ms]
	load.64*    %r17464 <- 0[news]
	load.64     %r17465 <- 0[i]
	add.64*     %r17466 <- %r17464, %r17465
	load.8      %r17467 <- 0[%r17466]
	scast.32    %r17468 <- (8) %r17467
	sub.32      %r17469 <- %r17468, $49
	load.64*    %r17470 <- 0[s]
	load.64*    %r17471 <- 0[e]
	push.64*    %r17463
	push.32     %r17469
	push.64*    %r17470
	push.64*    %r17471
	call        push_onecapture
	load.64*    %r17472 <- 0[b]
	push.64*    %r17472
	call        luaL_addvalue
	br          .L4127

.L4127:
	br          .L4124

.L4124:
	br          .L4118

.L4118:
	br          .L4110

.L4110:
	load.64     %r17473 <- 0[i]
	add.64      %r17474 <- %r17473, $1
	store.64    %r17474 -> 0[i]
	br          .L4112

.L4111:
	ret


add_value:
.L4128:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[b]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.64*    %r17475 <- 0[ms]
	load.64*    %r17476 <- 16[%r17475]
	store.64*   %r17476 -> 0[L]
	load.64*    %r17477 <- 0[L]
	push.64*    %r17477
	push.32     $3
	call.32     %r17478 <- lua_type
	switch.32   %r17478, 3 -> .L4130, 4 -> .L4131, 5 -> .L4133, 6 -> .L4132, default -> .L4129

.L4130:
	br          .L4131

.L4131:
	load.64*    %r17479 <- 0[ms]
	load.64*    %r17480 <- 0[b]
	load.64*    %r17481 <- 0[s]
	load.64*    %r17482 <- 0[e]
	push.64*    %r17479
	push.64*    %r17480
	push.64*    %r17481
	push.64*    %r17482
	call        add_s
	br          .L4134

.L4132:
	load.64*    %r17483 <- 0[L]
	push.64*    %r17483
	push.32     $3
	call        lua_pushvalue
	load.64*    %r17484 <- 0[ms]
	load.64*    %r17485 <- 0[s]
	load.64*    %r17486 <- 0[e]
	push.64*    %r17484
	push.64*    %r17485
	push.64*    %r17486
	call.32     %r17487 <- push_captures
	store.32    %r17487 -> 0[n]
	load.64*    %r17488 <- 0[L]
	load.32     %r17489 <- 0[n]
	push.64*    %r17488
	push.32     %r17489
	push.32     $1
	call        lua_call
	br          .L4129

.L4133:
	load.64*    %r17490 <- 0[ms]
	load.64*    %r17491 <- 0[s]
	load.64*    %r17492 <- 0[e]
	push.64*    %r17490
	push.32     $0
	push.64*    %r17491
	push.64*    %r17492
	call        push_onecapture
	load.64*    %r17493 <- 0[L]
	push.64*    %r17493
	push.32     $3
	call        lua_gettable
	br          .L4129

.L4129:
	load.64*    %r17494 <- 0[L]
	push.64*    %r17494
	push.32     $0xffffffff
	call.32     %r17495 <- lua_toboolean
	br          %r17495, .L4136, .L4135

.L4135:
	load.64*    %r17496 <- 0[L]
	push.64*    %r17496
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r17497 <- 0[L]
	load.64*    %r17498 <- 0[s]
	load.64*    %r17499 <- 0[e]
	load.64*    %r17500 <- 0[s]
	sub.64      %r17501 <- %r17499, %r17500
	scast.64    %r17502 <- (64) %r17501
	push.64*    %r17497
	push.64*    %r17498
	push.64     %r17502
	call        lua_pushlstring
	br          .L4137

.L4136:
	load.64*    %r17503 <- 0[L]
	push.64*    %r17503
	push.32     $0xffffffff
	call.32     %r17504 <- lua_isstring
	br          %r17504, .L4139, .L4138

.L4138:
	load.64*    %r17505 <- 0[L]
	symaddr.64* %r17506 <- <anon symbol:0x62d00151e5f8>
	load.64*    %r17507 <- 0[L]
	load.64*    %r17508 <- 0[L]
	push.64*    %r17508
	push.32     $0xffffffff
	call.32     %r17509 <- lua_type
	push.64*    %r17507
	push.32     %r17509
	call.64*    %r17510 <- lua_typename
	push.64*    %r17505
	push.64*    %r17506
	push.64*    %r17510
	call.32     %r17511 <- luaL_error
	br          .L4139

.L4139:
	br          .L4137

.L4137:
	load.64*    %r17512 <- 0[b]
	push.64*    %r17512
	call        luaL_addvalue
	br          .L4134

.L4134:
	ret


str_gsub:
.L4140:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17513 <- 0[L]
	symaddr.64* %r17514 <- srcl
	push.64*    %r17513
	push.32     $1
	push.64*    %r17514
	call.64*    %r17515 <- luaL_checklstring
	store.64*   %r17515 -> 0[src]
	load.64*    %r17516 <- 0[L]
	push.64*    %r17516
	push.32     $2
	push.64*    $0
	call.64*    %r17517 <- luaL_checklstring
	store.64*   %r17517 -> 0[p]
	load.64*    %r17518 <- 0[L]
	push.64*    %r17518
	push.32     $3
	call.32     %r17519 <- lua_type
	store.32    %r17519 -> 0[tr]
	load.64*    %r17520 <- 0[L]
	load.64     %r17521 <- 0[srcl]
	add.64      %r17522 <- %r17521, $1
	cast.64     %r17523 <- (64) %r17522
	push.64*    %r17520
	push.32     $4
	push.64     %r17523
	call.64     %r17524 <- luaL_optinteger
	scast.32    %r17525 <- (64) %r17524
	store.32    %r17525 -> 0[max_s]
	load.64*    %r17526 <- 0[p]
	load.8      %r17527 <- 0[%r17526]
	scast.32    %r17528 <- (8) %r17527
	seteq.32    %r17529 <- %r17528, $94
	br          %r17529, .L4141, .L4142

.L4141:
	load.64*    %r17530 <- 0[p]
	add.64*     %r17531 <- %r17530, $1
	store.64*   %r17531 -> 0[p]
	phisrc.32   %phi823 <- $1
	br          .L4143

.L4142:
	phisrc.32   %phi824 <- $0
	br          .L4143

.L4143:
	phi.32      %r17532 <- %phi823, %phi824
	store.32    %r17532 -> 0[anchor]
	store.32    $0 -> 0[n]
	load.32     %r17533 <- 0[tr]
	seteq.32    %r17534 <- %r17533, $3
	load.32     %r17535 <- 0[tr]
	seteq.32    %r17536 <- %r17535, $4
	or-bool.32  %r17537 <- %r17534, %r17536
	load.32     %r17538 <- 0[tr]
	seteq.32    %r17539 <- %r17538, $6
	or-bool.32  %r17540 <- %r17537, %r17539
	load.32     %r17541 <- 0[tr]
	seteq.32    %r17542 <- %r17541, $5
	or-bool.32  %r17543 <- %r17540, %r17542
	br          %r17543, .L4144, .L4145

.L4144:
	phisrc.32   %phi825 <- $1
	br          .L4146

.L4145:
	load.64*    %r17544 <- 0[L]
	symaddr.64* %r17545 <- <anon symbol:0x62d00151ec50>
	push.64*    %r17544
	push.32     $3
	push.64*    %r17545
	call.32     %r17546 <- luaL_argerror
	phisrc.32   %phi826 <- %r17546
	br          .L4146

.L4146:
	phi.32      %r17547 <- %phi825, %phi826
	load.64*    %r17548 <- 0[L]
	symaddr.64* %r17549 <- b
	push.64*    %r17548
	push.64*    %r17549
	call        luaL_buffinit
	load.64*    %r17550 <- 0[L]
	store.64*   %r17550 -> 16[ms]
	load.64*    %r17551 <- 0[src]
	store.64*   %r17551 -> 0[ms]
	load.64*    %r17552 <- 0[src]
	load.64     %r17553 <- 0[srcl]
	add.64*     %r17554 <- %r17552, %r17553
	store.64*   %r17554 -> 8[ms]
	br          .L4150

.L4150:
	load.32     %r17555 <- 0[n]
	load.32     %r17556 <- 0[max_s]
	setlt.32    %r17557 <- %r17555, %r17556
	br          %r17557, .L4147, .L4149

.L4147:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17558 <- ms
	load.64*    %r17559 <- 0[src]
	load.64*    %r17560 <- 0[p]
	push.64*    %r17558
	push.64*    %r17559
	push.64*    %r17560
	call.64*    %r17561 <- match
	store.64*   %r17561 -> 0[e]
	load.64*    %r17562 <- 0[e]
	br          %r17562, .L4151, .L4152

.L4151:
	load.32     %r17563 <- 0[n]
	add.32      %r17564 <- %r17563, $1
	store.32    %r17564 -> 0[n]
	symaddr.64* %r17565 <- ms
	symaddr.64* %r17566 <- b
	load.64*    %r17567 <- 0[src]
	load.64*    %r17568 <- 0[e]
	push.64*    %r17565
	push.64*    %r17566
	push.64*    %r17567
	push.64*    %r17568
	call        add_value
	br          .L4152

.L4152:
	load.64*    %r17569 <- 0[e]
	load.64*    %r17570 <- 0[e]
	load.64*    %r17571 <- 0[src]
	seta.32     %r17572 <- %r17570, %r17571
	and-bool.32 %r17573 <- %r17569, %r17572
	br          %r17573, .L4153, .L4154

.L4153:
	load.64*    %r17574 <- 0[e]
	store.64*   %r17574 -> 0[src]
	br          .L4155

.L4154:
	load.64*    %r17575 <- 0[src]
	load.64*    %r17576 <- 8[ms]
	setb.32     %r17577 <- %r17575, %r17576
	br          %r17577, .L4156, .L4157

.L4156:
	load.64*    %r17578 <- 0[b]
	symaddr.64* %r17579 <- b
	add.64*     %r17580 <- %r17579, $24
	add.64*     %r17581 <- %r17580, $0x2000
	setb.32     %r17582 <- %r17578, %r17581
	br          %r17582, .L4158, .L4159

.L4158:
	phisrc.32   %phi827 <- $1
	br          .L4160

.L4159:
	symaddr.64* %r17583 <- b
	push.64*    %r17583
	call.64*    %r17584 <- luaL_prepbuffer
	phisrc.32   %phi828 <- %r17584
	br          .L4160

.L4160:
	phi.32      %r17585 <- %phi827, %phi828
	load.64*    %r17586 <- 0[src]
	add.64*     %r17587 <- %r17586, $1
	store.64*   %r17587 -> 0[src]
	load.8      %r17588 <- 0[%r17586]
	scast.8     %r17589 <- (8) %r17588
	load.64*    %r17590 <- 0[b]
	add.64*     %r17591 <- %r17590, $1
	store.64*   %r17591 -> 0[b]
	store.8     %r17589 -> 0[%r17590]
	br          .L4161

.L4157:
	br          .L4149

.L4161:
	br          .L4155

.L4155:
	load.32     %r17592 <- 0[anchor]
	br          %r17592, .L4162, .L4163

.L4162:
	br          .L4149

.L4163:
	br          .L4148

.L4148:
	br          .L4150

.L4149:
	symaddr.64* %r17593 <- b
	load.64*    %r17594 <- 0[src]
	load.64*    %r17595 <- 8[ms]
	load.64*    %r17596 <- 0[src]
	sub.64      %r17597 <- %r17595, %r17596
	scast.64    %r17598 <- (64) %r17597
	push.64*    %r17593
	push.64*    %r17594
	push.64     %r17598
	call        luaL_addlstring
	symaddr.64* %r17599 <- b
	push.64*    %r17599
	call        luaL_pushresult
	load.64*    %r17600 <- 0[L]
	load.32     %r17601 <- 0[n]
	scast.64    %r17602 <- (32) %r17601
	push.64*    %r17600
	push.64     %r17602
	call        lua_pushinteger
	phisrc.32   %phi829(return) <- $2
	br          .L4164

.L4164:
	phi.32      %r17603 <- %phi829(return)
	ret.32      $2


addquoted:
.L4165:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[b]
	store.32    %arg3 -> 0[arg]
	load.64*    %r17604 <- 0[L]
	load.32     %r17605 <- 0[arg]
	symaddr.64* %r17606 <- l
	push.64*    %r17604
	push.32     %r17605
	push.64*    %r17606
	call.64*    %r17607 <- luaL_checklstring
	store.64*   %r17607 -> 0[s]
	load.64*    %r17608 <- 0[b]
	load.64*    %r17609 <- 0[%r17608]
	load.64*    %r17610 <- 0[b]
	add.64*     %r17611 <- %r17610, $24
	add.64*     %r17612 <- %r17611, $0x2000
	setb.32     %r17613 <- %r17609, %r17612
	br          %r17613, .L4166, .L4167

.L4166:
	phisrc.32   %phi830 <- $1
	br          .L4168

.L4167:
	load.64*    %r17614 <- 0[b]
	push.64*    %r17614
	call.64*    %r17615 <- luaL_prepbuffer
	phisrc.32   %phi831 <- %r17615
	br          .L4168

.L4168:
	phi.32      %r17616 <- %phi830, %phi831
	load.64*    %r17617 <- 0[b]
	load.64*    %r17618 <- 0[%r17617]
	add.64*     %r17619 <- %r17618, $1
	store.64*   %r17619 -> 0[%r17617]
	store.8     $34 -> 0[%r17618]
	br          .L4172

.L4172:
	load.64     %r17620 <- 0[l]
	sub.64      %r17621 <- %r17620, $1
	store.64    %r17621 -> 0[l]
	br          %r17620, .L4169, .L4171

.L4169:
	load.64*    %r17622 <- 0[s]
	load.8      %r17623 <- 0[%r17622]
	switch.8    %r17623, 0 -> .L4178, 10 -> .L4176, 13 -> .L4177, 34 -> .L4174, 92 -> .L4175, default -> .L4179

.L4174:
	br          .L4175

.L4175:
	br          .L4176

.L4176:
	load.64*    %r17624 <- 0[b]
	load.64*    %r17625 <- 0[%r17624]
	load.64*    %r17626 <- 0[b]
	add.64*     %r17627 <- %r17626, $24
	add.64*     %r17628 <- %r17627, $0x2000
	setb.32     %r17629 <- %r17625, %r17628
	br          %r17629, .L4180, .L4181

.L4180:
	phisrc.32   %phi832 <- $1
	br          .L4182

.L4181:
	load.64*    %r17630 <- 0[b]
	push.64*    %r17630
	call.64*    %r17631 <- luaL_prepbuffer
	phisrc.32   %phi833 <- %r17631
	br          .L4182

.L4182:
	phi.32      %r17632 <- %phi832, %phi833
	load.64*    %r17633 <- 0[b]
	load.64*    %r17634 <- 0[%r17633]
	add.64*     %r17635 <- %r17634, $1
	store.64*   %r17635 -> 0[%r17633]
	store.8     $92 -> 0[%r17634]
	load.64*    %r17636 <- 0[b]
	load.64*    %r17637 <- 0[%r17636]
	load.64*    %r17638 <- 0[b]
	add.64*     %r17639 <- %r17638, $24
	add.64*     %r17640 <- %r17639, $0x2000
	setb.32     %r17641 <- %r17637, %r17640
	br          %r17641, .L4183, .L4184

.L4183:
	phisrc.32   %phi834 <- $1
	br          .L4185

.L4184:
	load.64*    %r17642 <- 0[b]
	push.64*    %r17642
	call.64*    %r17643 <- luaL_prepbuffer
	phisrc.32   %phi835 <- %r17643
	br          .L4185

.L4185:
	phi.32      %r17644 <- %phi834, %phi835
	load.64*    %r17645 <- 0[s]
	load.8      %r17646 <- 0[%r17645]
	scast.8     %r17647 <- (8) %r17646
	load.64*    %r17648 <- 0[b]
	load.64*    %r17649 <- 0[%r17648]
	add.64*     %r17650 <- %r17649, $1
	store.64*   %r17650 -> 0[%r17648]
	store.8     %r17647 -> 0[%r17649]
	br          .L4173

.L4177:
	load.64*    %r17651 <- 0[b]
	symaddr.64* %r17652 <- <anon symbol:0x62d00152ea28>
	push.64*    %r17651
	push.64*    %r17652
	push.64     $2
	call        luaL_addlstring
	br          .L4173

.L4178:
	load.64*    %r17653 <- 0[b]
	symaddr.64* %r17654 <- <anon symbol:0x62d00152edc8>
	push.64*    %r17653
	push.64*    %r17654
	push.64     $4
	call        luaL_addlstring
	br          .L4173

.L4179:
	load.64*    %r17655 <- 0[b]
	load.64*    %r17656 <- 0[%r17655]
	load.64*    %r17657 <- 0[b]
	add.64*     %r17658 <- %r17657, $24
	add.64*     %r17659 <- %r17658, $0x2000
	setb.32     %r17660 <- %r17656, %r17659
	br          %r17660, .L4186, .L4187

.L4186:
	phisrc.32   %phi836 <- $1
	br          .L4188

.L4187:
	load.64*    %r17661 <- 0[b]
	push.64*    %r17661
	call.64*    %r17662 <- luaL_prepbuffer
	phisrc.32   %phi837 <- %r17662
	br          .L4188

.L4188:
	phi.32      %r17663 <- %phi836, %phi837
	load.64*    %r17664 <- 0[s]
	load.8      %r17665 <- 0[%r17664]
	scast.8     %r17666 <- (8) %r17665
	load.64*    %r17667 <- 0[b]
	load.64*    %r17668 <- 0[%r17667]
	add.64*     %r17669 <- %r17668, $1
	store.64*   %r17669 -> 0[%r17667]
	store.8     %r17666 -> 0[%r17668]
	br          .L4173

.L4173:
	load.64*    %r17670 <- 0[s]
	add.64*     %r17671 <- %r17670, $1
	store.64*   %r17671 -> 0[s]
	br          .L4170

.L4170:
	br          .L4172

.L4171:
	load.64*    %r17672 <- 0[b]
	load.64*    %r17673 <- 0[%r17672]
	load.64*    %r17674 <- 0[b]
	add.64*     %r17675 <- %r17674, $24
	add.64*     %r17676 <- %r17675, $0x2000
	setb.32     %r17677 <- %r17673, %r17676
	br          %r17677, .L4189, .L4190

.L4189:
	phisrc.32   %phi838 <- $1
	br          .L4191

.L4190:
	load.64*    %r17678 <- 0[b]
	push.64*    %r17678
	call.64*    %r17679 <- luaL_prepbuffer
	phisrc.32   %phi839 <- %r17679
	br          .L4191

.L4191:
	phi.32      %r17680 <- %phi838, %phi839
	load.64*    %r17681 <- 0[b]
	load.64*    %r17682 <- 0[%r17681]
	add.64*     %r17683 <- %r17682, $1
	store.64*   %r17683 -> 0[%r17681]
	store.8     $34 -> 0[%r17682]
	br          .L4192

.L4192:
	ret


scanformat:
.L4193:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[strfrmt]
	store.64*   %arg3 -> 0[form]
	load.64*    %r17684 <- 0[strfrmt]
	store.64*   %r17684 -> 0[p]
	br          .L4197

.L4197:
	load.64*    %r17685 <- 0[p]
	load.8      %r17686 <- 0[%r17685]
	scast.32    %r17687 <- (8) %r17686
	setne.32    %r17688 <- %r17687, $0
	symaddr.64* %r17689 <- <anon symbol:0x62d001530388>
	load.64*    %r17690 <- 0[p]
	load.8      %r17691 <- 0[%r17690]
	scast.32    %r17692 <- (8) %r17691
	push.64*    %r17689
	push.32     %r17692
	call.64*    %r17693 <- strchr
	setne.32    %r17694 <- %r17693, $0
	and-bool.32 %r17695 <- %r17688, %r17694
	br          %r17695, .L4194, .L4196

.L4194:
	load.64*    %r17696 <- 0[p]
	add.64*     %r17697 <- %r17696, $1
	store.64*   %r17697 -> 0[p]
	br          .L4195

.L4195:
	br          .L4197

.L4196:
	load.64*    %r17698 <- 0[p]
	load.64*    %r17699 <- 0[strfrmt]
	sub.64      %r17700 <- %r17698, %r17699
	scast.64    %r17701 <- (64) %r17700
	setae.32    %r17702 <- %r17701, $6
	br          %r17702, .L4198, .L4199

.L4198:
	load.64*    %r17703 <- 0[L]
	symaddr.64* %r17704 <- <anon symbol:0x62d0015309e0>
	push.64*    %r17703
	push.64*    %r17704
	call.32     %r17705 <- luaL_error
	br          .L4199

.L4199:
	call.64*    %r17706 <- __ctype_b_loc
	load.64*    %r17707 <- 0[%r17706]
	load.64*    %r17708 <- 0[p]
	load.8      %r17709 <- 0[%r17708]
	scast.8     %r17710 <- (8) %r17709
	cast.32     %r17711 <- (8) %r17710
	scast.64    %r17712 <- (32) %r17711
	muls.64     %r17713 <- %r17712, $2
	add.64*     %r17714 <- %r17707, %r17713
	load.16     %r17715 <- 0[%r17714]
	cast.32     %r17716 <- (16) %r17715
	and.32      %r17717 <- %r17716, $0x800
	br          %r17717, .L4200, .L4201

.L4200:
	load.64*    %r17718 <- 0[p]
	add.64*     %r17719 <- %r17718, $1
	store.64*   %r17719 -> 0[p]
	br          .L4201

.L4201:
	call.64*    %r17720 <- __ctype_b_loc
	load.64*    %r17721 <- 0[%r17720]
	load.64*    %r17722 <- 0[p]
	load.8      %r17723 <- 0[%r17722]
	scast.8     %r17724 <- (8) %r17723
	cast.32     %r17725 <- (8) %r17724
	scast.64    %r17726 <- (32) %r17725
	muls.64     %r17727 <- %r17726, $2
	add.64*     %r17728 <- %r17721, %r17727
	load.16     %r17729 <- 0[%r17728]
	cast.32     %r17730 <- (16) %r17729
	and.32      %r17731 <- %r17730, $0x800
	br          %r17731, .L4202, .L4203

.L4202:
	load.64*    %r17732 <- 0[p]
	add.64*     %r17733 <- %r17732, $1
	store.64*   %r17733 -> 0[p]
	br          .L4203

.L4203:
	load.64*    %r17734 <- 0[p]
	load.8      %r17735 <- 0[%r17734]
	scast.32    %r17736 <- (8) %r17735
	seteq.32    %r17737 <- %r17736, $46
	br          %r17737, .L4204, .L4205

.L4204:
	load.64*    %r17738 <- 0[p]
	add.64*     %r17739 <- %r17738, $1
	store.64*   %r17739 -> 0[p]
	call.64*    %r17740 <- __ctype_b_loc
	load.64*    %r17741 <- 0[%r17740]
	load.64*    %r17742 <- 0[p]
	load.8      %r17743 <- 0[%r17742]
	scast.8     %r17744 <- (8) %r17743
	cast.32     %r17745 <- (8) %r17744
	scast.64    %r17746 <- (32) %r17745
	muls.64     %r17747 <- %r17746, $2
	add.64*     %r17748 <- %r17741, %r17747
	load.16     %r17749 <- 0[%r17748]
	cast.32     %r17750 <- (16) %r17749
	and.32      %r17751 <- %r17750, $0x800
	br          %r17751, .L4206, .L4207

.L4206:
	load.64*    %r17752 <- 0[p]
	add.64*     %r17753 <- %r17752, $1
	store.64*   %r17753 -> 0[p]
	br          .L4207

.L4207:
	call.64*    %r17754 <- __ctype_b_loc
	load.64*    %r17755 <- 0[%r17754]
	load.64*    %r17756 <- 0[p]
	load.8      %r17757 <- 0[%r17756]
	scast.8     %r17758 <- (8) %r17757
	cast.32     %r17759 <- (8) %r17758
	scast.64    %r17760 <- (32) %r17759
	muls.64     %r17761 <- %r17760, $2
	add.64*     %r17762 <- %r17755, %r17761
	load.16     %r17763 <- 0[%r17762]
	cast.32     %r17764 <- (16) %r17763
	and.32      %r17765 <- %r17764, $0x800
	br          %r17765, .L4208, .L4209

.L4208:
	load.64*    %r17766 <- 0[p]
	add.64*     %r17767 <- %r17766, $1
	store.64*   %r17767 -> 0[p]
	br          .L4209

.L4209:
	br          .L4205

.L4205:
	call.64*    %r17768 <- __ctype_b_loc
	load.64*    %r17769 <- 0[%r17768]
	load.64*    %r17770 <- 0[p]
	load.8      %r17771 <- 0[%r17770]
	scast.8     %r17772 <- (8) %r17771
	cast.32     %r17773 <- (8) %r17772
	scast.64    %r17774 <- (32) %r17773
	muls.64     %r17775 <- %r17774, $2
	add.64*     %r17776 <- %r17769, %r17775
	load.16     %r17777 <- 0[%r17776]
	cast.32     %r17778 <- (16) %r17777
	and.32      %r17779 <- %r17778, $0x800
	br          %r17779, .L4210, .L4211

.L4210:
	load.64*    %r17780 <- 0[L]
	symaddr.64* %r17781 <- <anon symbol:0x62d001531c00>
	push.64*    %r17780
	push.64*    %r17781
	call.32     %r17782 <- luaL_error
	br          .L4211

.L4211:
	load.64*    %r17783 <- 0[form]
	add.64*     %r17784 <- %r17783, $1
	store.64*   %r17784 -> 0[form]
	store.8     $37 -> 0[%r17783]
	load.64*    %r17785 <- 0[form]
	load.64*    %r17786 <- 0[strfrmt]
	load.64*    %r17787 <- 0[p]
	load.64*    %r17788 <- 0[strfrmt]
	sub.64      %r17789 <- %r17787, %r17788
	add.64      %r17790 <- %r17789, $1
	scast.64    %r17791 <- (64) %r17790
	push.64*    %r17785
	push.64*    %r17786
	push.64     %r17791
	call.64*    %r17792 <- strncpy
	load.64*    %r17793 <- 0[p]
	load.64*    %r17794 <- 0[strfrmt]
	sub.64      %r17795 <- %r17793, %r17794
	add.64      %r17796 <- %r17795, $1
	load.64*    %r17797 <- 0[form]
	cast.64     %r17798 <- (64) %r17797
	add.64      %r17799 <- %r17798, %r17796
	ptrcast.64* %r17800 <- (64) %r17799
	store.64*   %r17800 -> 0[form]
	load.64*    %r17801 <- 0[form]
	store.8     $0 -> 0[%r17801]
	load.64*    %r17802 <- 0[p]
	phisrc.64*  %phi840(return) <- %r17802
	br          .L4212

.L4212:
	phi.64*     %r17803 <- %phi840(return)
	ret.64*     %r17802


addintlen:
.L4213:
	<entry-point>
	store.64*   %arg1 -> 0[form]
	load.64*    %r17804 <- 0[form]
	push.64*    %r17804
	call.64     %r17805 <- strlen
	store.64    %r17805 -> 0[l]
	load.64*    %r17806 <- 0[form]
	load.64     %r17807 <- 0[l]
	sub.64      %r17808 <- %r17807, $1
	add.64*     %r17809 <- %r17806, %r17808
	load.8      %r17810 <- 0[%r17809]
	store.8     %r17810 -> 0[spec]
	load.64*    %r17811 <- 0[form]
	load.64     %r17812 <- 0[l]
	add.64*     %r17813 <- %r17811, %r17812
	sub.64*     %r17814 <- %r17813, $1
	symaddr.64* %r17815 <- <anon symbol:0x62d001532258>
	push.64*    %r17814
	push.64*    %r17815
	call.64*    %r17816 <- strcpy
	load.8      %r17817 <- 0[spec]
	load.64*    %r17818 <- 0[form]
	load.64     %r17819 <- 0[l]
	add.64      %r17820 <- %r17819, $2
	sub.64      %r17821 <- %r17820, $2
	add.64*     %r17822 <- %r17818, %r17821
	store.8     %r17817 -> 0[%r17822]
	load.64*    %r17823 <- 0[form]
	load.64     %r17824 <- 0[l]
	add.64      %r17825 <- %r17824, $2
	sub.64      %r17826 <- %r17825, $1
	add.64*     %r17827 <- %r17823, %r17826
	store.8     $0 -> 0[%r17827]
	br          .L4214

.L4214:
	ret


str_format:
.L4215:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17828 <- 0[L]
	push.64*    %r17828
	call.32     %r17829 <- lua_gettop
	store.32    %r17829 -> 0[top]
	store.32    $1 -> 0[arg]
	load.64*    %r17830 <- 0[L]
	load.32     %r17831 <- 0[arg]
	symaddr.64* %r17832 <- sfl
	push.64*    %r17830
	push.32     %r17831
	push.64*    %r17832
	call.64*    %r17833 <- luaL_checklstring
	store.64*   %r17833 -> 0[strfrmt]
	load.64*    %r17834 <- 0[strfrmt]
	load.64     %r17835 <- 0[sfl]
	add.64*     %r17836 <- %r17834, %r17835
	store.64*   %r17836 -> 0[strfrmt_end]
	load.64*    %r17837 <- 0[L]
	symaddr.64* %r17838 <- b
	push.64*    %r17837
	push.64*    %r17838
	call        luaL_buffinit
	br          .L4219

.L4219:
	load.64*    %r17839 <- 0[strfrmt]
	load.64*    %r17840 <- 0[strfrmt_end]
	setb.32     %r17841 <- %r17839, %r17840
	br          %r17841, .L4216, .L4218

.L4216:
	load.64*    %r17842 <- 0[strfrmt]
	load.8      %r17843 <- 0[%r17842]
	scast.32    %r17844 <- (8) %r17843
	setne.32    %r17845 <- %r17844, $37
	br          %r17845, .L4220, .L4221

.L4220:
	load.64*    %r17846 <- 0[b]
	symaddr.64* %r17847 <- b
	add.64*     %r17848 <- %r17847, $24
	add.64*     %r17849 <- %r17848, $0x2000
	setb.32     %r17850 <- %r17846, %r17849
	br          %r17850, .L4222, .L4223

.L4222:
	phisrc.32   %phi841 <- $1
	br          .L4224

.L4223:
	symaddr.64* %r17851 <- b
	push.64*    %r17851
	call.64*    %r17852 <- luaL_prepbuffer
	phisrc.32   %phi842 <- %r17852
	br          .L4224

.L4224:
	phi.32      %r17853 <- %phi841, %phi842
	load.64*    %r17854 <- 0[strfrmt]
	add.64*     %r17855 <- %r17854, $1
	store.64*   %r17855 -> 0[strfrmt]
	load.8      %r17856 <- 0[%r17854]
	scast.8     %r17857 <- (8) %r17856
	load.64*    %r17858 <- 0[b]
	add.64*     %r17859 <- %r17858, $1
	store.64*   %r17859 -> 0[b]
	store.8     %r17857 -> 0[%r17858]
	br          .L4225

.L4221:
	load.64*    %r17860 <- 0[strfrmt]
	add.64*     %r17861 <- %r17860, $1
	store.64*   %r17861 -> 0[strfrmt]
	load.8      %r17862 <- 0[%r17861]
	scast.32    %r17863 <- (8) %r17862
	seteq.32    %r17864 <- %r17863, $37
	br          %r17864, .L4226, .L4227

.L4226:
	load.64*    %r17865 <- 0[b]
	symaddr.64* %r17866 <- b
	add.64*     %r17867 <- %r17866, $24
	add.64*     %r17868 <- %r17867, $0x2000
	setb.32     %r17869 <- %r17865, %r17868
	br          %r17869, .L4228, .L4229

.L4228:
	phisrc.32   %phi843 <- $1
	br          .L4230

.L4229:
	symaddr.64* %r17870 <- b
	push.64*    %r17870
	call.64*    %r17871 <- luaL_prepbuffer
	phisrc.32   %phi844 <- %r17871
	br          .L4230

.L4230:
	phi.32      %r17872 <- %phi843, %phi844
	load.64*    %r17873 <- 0[strfrmt]
	add.64*     %r17874 <- %r17873, $1
	store.64*   %r17874 -> 0[strfrmt]
	load.8      %r17875 <- 0[%r17873]
	scast.8     %r17876 <- (8) %r17875
	load.64*    %r17877 <- 0[b]
	add.64*     %r17878 <- %r17877, $1
	store.64*   %r17878 -> 0[b]
	store.8     %r17876 -> 0[%r17877]
	br          .L4231

.L4227:
	load.32     %r17879 <- 0[arg]
	add.32      %r17880 <- %r17879, $1
	store.32    %r17880 -> 0[arg]
	load.32     %r17881 <- 0[top]
	setgt.32    %r17882 <- %r17880, %r17881
	br          %r17882, .L4232, .L4233

.L4232:
	load.64*    %r17883 <- 0[L]
	load.32     %r17884 <- 0[arg]
	symaddr.64* %r17885 <- <anon symbol:0x62d001522fe0>
	push.64*    %r17883
	push.32     %r17884
	push.64*    %r17885
	call.32     %r17886 <- luaL_argerror
	br          .L4233

.L4233:
	load.64*    %r17887 <- 0[L]
	load.64*    %r17888 <- 0[strfrmt]
	symaddr.64* %r17889 <- form
	push.64*    %r17887
	push.64*    %r17888
	push.64*    %r17889
	call.64*    %r17890 <- scanformat
	store.64*   %r17890 -> 0[strfrmt]
	load.64*    %r17891 <- 0[strfrmt]
	add.64*     %r17892 <- %r17891, $1
	store.64*   %r17892 -> 0[strfrmt]
	load.8      %r17893 <- 0[%r17891]
	switch.8    %r17893, 69 -> .L4243, 71 -> .L4246, 88 -> .L4241, 99 -> .L4235, 100 -> .L4236, 101 -> .L4242, 102 -> .L4244, 103 -> .L4245, 105 -> .L4237, 111 -> .L4238, 113 -> .L4247, 115 -> .L4248, 117 -> .L4239, 120 -> .L4240, default -> .L4249

.L4235:
	symaddr.64* %r17894 <- buff
	symaddr.64* %r17895 <- form
	load.64*    %r17896 <- 0[L]
	load.32     %r17897 <- 0[arg]
	push.64*    %r17896
	push.32     %r17897
	call.f64    %r17898 <- luaL_checknumber
	cast.32     %r17899 <- (64) %r17898
	push.64*    %r17894
	push.64*    %r17895
	push.32     %r17899
	call.32     %r17900 <- sprintf
	br          .L4234

.L4236:
	br          .L4237

.L4237:
	symaddr.64* %r17901 <- form
	push.64*    %r17901
	call        addintlen
	symaddr.64* %r17902 <- buff
	symaddr.64* %r17903 <- form
	load.64*    %r17904 <- 0[L]
	load.32     %r17905 <- 0[arg]
	push.64*    %r17904
	push.32     %r17905
	call.f64    %r17906 <- luaL_checknumber
	cast.64     %r17907 <- (64) %r17906
	push.64*    %r17902
	push.64*    %r17903
	push.64     %r17907
	call.32     %r17908 <- sprintf
	br          .L4234

.L4238:
	br          .L4239

.L4239:
	br          .L4240

.L4240:
	br          .L4241

.L4241:
	symaddr.64* %r17909 <- form
	push.64*    %r17909
	call        addintlen
	symaddr.64* %r17910 <- buff
	symaddr.64* %r17911 <- form
	load.64*    %r17912 <- 0[L]
	load.32     %r17913 <- 0[arg]
	push.64*    %r17912
	push.32     %r17913
	call.f64    %r17914 <- luaL_checknumber
	cast.64     %r17915 <- (64) %r17914
	push.64*    %r17910
	push.64*    %r17911
	push.64     %r17915
	call.32     %r17916 <- sprintf
	br          .L4234

.L4242:
	br          .L4243

.L4243:
	br          .L4244

.L4244:
	br          .L4245

.L4245:
	br          .L4246

.L4246:
	symaddr.64* %r17917 <- buff
	symaddr.64* %r17918 <- form
	load.64*    %r17919 <- 0[L]
	load.32     %r17920 <- 0[arg]
	push.64*    %r17919
	push.32     %r17920
	call.f64    %r17921 <- luaL_checknumber
	fpcast.f64  %r17922 <- (64) %r17921
	push.64*    %r17917
	push.64*    %r17918
	push.f64    %r17922
	call.32     %r17923 <- sprintf
	br          .L4234

.L4247:
	load.64*    %r17924 <- 0[L]
	symaddr.64* %r17925 <- b
	load.32     %r17926 <- 0[arg]
	push.64*    %r17924
	push.64*    %r17925
	push.32     %r17926
	call        addquoted
	br          .L4217

.L4248:
	load.64*    %r17927 <- 0[L]
	load.32     %r17928 <- 0[arg]
	symaddr.64* %r17929 <- l
	push.64*    %r17927
	push.32     %r17928
	push.64*    %r17929
	call.64*    %r17930 <- luaL_checklstring
	store.64*   %r17930 -> 0[s]
	symaddr.64* %r17931 <- form
	push.64*    %r17931
	push.32     $46
	call.64*    %r17932 <- strchr
	seteq.32    %r17933 <- %r17932, $0
	load.64     %r17934 <- 0[l]
	setae.32    %r17935 <- %r17934, $100
	and-bool.32 %r17936 <- %r17933, %r17935
	br          %r17936, .L4250, .L4251

.L4250:
	load.64*    %r17937 <- 0[L]
	load.32     %r17938 <- 0[arg]
	push.64*    %r17937
	push.32     %r17938
	call        lua_pushvalue
	symaddr.64* %r17939 <- b
	push.64*    %r17939
	call        luaL_addvalue
	br          .L4217

.L4251:
	symaddr.64* %r17940 <- buff
	symaddr.64* %r17941 <- form
	load.64*    %r17942 <- 0[s]
	push.64*    %r17940
	push.64*    %r17941
	push.64*    %r17942
	call.32     %r17943 <- sprintf
	br          .L4234

.L4249:
	load.64*    %r17944 <- 0[L]
	symaddr.64* %r17945 <- <anon symbol:0x62d001525338>
	load.64*    %r17946 <- 0[strfrmt]
	sub.64*     %r17947 <- %r17946, $1
	load.8      %r17948 <- 0[%r17947]
	scast.32    %r17949 <- (8) %r17948
	push.64*    %r17944
	push.64*    %r17945
	push.32     %r17949
	call.32     %r17950 <- luaL_error
	phisrc.32   %phi845(return) <- %r17950
	br          .L4253

.L4234:
	symaddr.64* %r17952 <- b
	symaddr.64* %r17953 <- buff
	symaddr.64* %r17954 <- buff
	push.64*    %r17954
	call.64     %r17955 <- strlen
	push.64*    %r17952
	push.64*    %r17953
	push.64     %r17955
	call        luaL_addlstring
	br          .L4231

.L4231:
	br          .L4225

.L4225:
	br          .L4217

.L4217:
	br          .L4219

.L4218:
	symaddr.64* %r17956 <- b
	push.64*    %r17956
	call        luaL_pushresult
	phisrc.32   %phi846(return) <- $1
	br          .L4253

.L4253:
	phi.32      %r17951 <- %phi845(return), %phi846(return)
	ret.32      %r17951


createmetatable:
.L4254:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17957 <- 0[L]
	push.64*    %r17957
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r17958 <- 0[L]
	symaddr.64* %r17959 <- <anon symbol:0x62d001525f00>
	push.64*    %r17958
	push.64*    %r17959
	push.64     $0
	call        lua_pushlstring
	load.64*    %r17960 <- 0[L]
	push.64*    %r17960
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r17961 <- 0[L]
	push.64*    %r17961
	push.32     $0xfffffffe
	call.32     %r17962 <- lua_setmetatable
	load.64*    %r17963 <- 0[L]
	push.64*    %r17963
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r17964 <- 0[L]
	push.64*    %r17964
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r17965 <- 0[L]
	symaddr.64* %r17966 <- <anon symbol:0x62d001526470>
	push.64*    %r17965
	push.32     $0xfffffffe
	push.64*    %r17966
	call        lua_setfield
	load.64*    %r17967 <- 0[L]
	push.64*    %r17967
	push.32     $0xfffffffe
	call        lua_settop
	br          .L4255

.L4255:
	ret


luaopen_string:
.L4256:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17968 <- 0[L]
	symaddr.64* %r17969 <- <anon symbol:0x62d001526810>
	symaddr.64* %r17970 <- strlib
	push.64*    %r17968
	push.64*    %r17969
	push.64*    %r17970
	call        luaL_register
	load.64*    %r17971 <- 0[L]
	push.64*    %r17971
	call        createmetatable
	phisrc.32   %phi847(return) <- $1
	br          .L4257

.L4257:
	phi.32      %r17972 <- %phi847(return)
	ret.32      $1


luaL_openlibs:
.L4258:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	symaddr.64* %r17973 <- lualibs
	store.64*   %r17973 -> 0[lib]
	br          .L4262

.L4262:
	load.64*    %r17974 <- 0[lib]
	load.64*    %r17975 <- 8[%r17974]
	br          %r17975, .L4259, .L4261

.L4259:
	load.64*    %r17976 <- 0[L]
	load.64*    %r17977 <- 0[lib]
	load.64*    %r17978 <- 8[%r17977]
	push.64*    %r17976
	push.64*    %r17978
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r17979 <- 0[L]
	load.64*    %r17980 <- 0[lib]
	load.64*    %r17981 <- 0[%r17980]
	push.64*    %r17979
	push.64*    %r17981
	call        lua_pushstring
	load.64*    %r17982 <- 0[L]
	push.64*    %r17982
	push.32     $1
	push.32     $0
	call        lua_call
	br          .L4260

.L4260:
	load.64*    %r17983 <- 0[lib]
	add.64*     %r17984 <- %r17983, $16
	store.64*   %r17984 -> 0[lib]
	br          .L4262

.L4261:
	ret


barg:
.L4263:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r17985 <- 0[L]
	load.32     %r17986 <- 0[idx]
	push.64*    %r17985
	push.32     %r17986
	call.f64    %r17987 <- lua_tonumber
	set.f64     %r17988 <- 6755399441055744.000000
	add.f64     %r17989 <- %r17987, %r17988
	store.f64   %r17989 -> 0[bn]
	load.f64    %r17990 <- 0[bn]
	set.f64     %r17991 <- 0.000000
	seteq.32    %r17992 <- %r17990, %r17991
	br          %r17992, .L4266, .L4265

.L4266:
	load.64*    %r17993 <- 0[L]
	load.32     %r17994 <- 0[idx]
	push.64*    %r17993
	push.32     %r17994
	call.32     %r17995 <- lua_isnumber
	br          %r17995, .L4265, .L4264

.L4264:
	load.64*    %r17996 <- 0[L]
	load.32     %r17997 <- 0[idx]
	symaddr.64* %r17998 <- <anon symbol:0x62d0015275a8>
	push.64*    %r17996
	push.32     %r17997
	push.64*    %r17998
	call.32     %r17999 <- luaL_typerror
	br          .L4265

.L4265:
	load.64     %r18000 <- 0[bn]
	cast.32     %r18001 <- (64) %r18000
	phisrc.32   %phi848(return) <- %r18001
	br          .L4267

.L4267:
	phi.32      %r18002 <- %phi848(return)
	ret.32      %r18001


tobit:
.L4268:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18003 <- 0[L]
	load.64*    %r18004 <- 0[L]
	push.64*    %r18004
	push.32     $1
	call.32     %r18005 <- barg
	cast.32     %r18006 <- (32) %r18005
	fpcast.f64  %r18007 <- (32) %r18006
	push.64*    %r18003
	push.f64    %r18007
	call        lua_pushnumber
	phisrc.32   %phi849(return) <- $1
	br          .L4269

.L4269:
	phi.32      %r18008 <- %phi849(return)
	ret.32      $1


bnot:
.L4270:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18009 <- 0[L]
	load.64*    %r18010 <- 0[L]
	push.64*    %r18010
	push.32     $1
	call.32     %r18011 <- barg
	not.32      %r18012 <- %r18011
	cast.32     %r18013 <- (32) %r18012
	fpcast.f64  %r18014 <- (32) %r18013
	push.64*    %r18009
	push.f64    %r18014
	call        lua_pushnumber
	phisrc.32   %phi850(return) <- $1
	br          .L4271

.L4271:
	phi.32      %r18015 <- %phi850(return)
	ret.32      $1


band:
.L4272:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18016 <- 0[L]
	push.64*    %r18016
	push.32     $1
	call.32     %r18017 <- barg
	store.32    %r18017 -> 0[b]
	load.64*    %r18018 <- 0[L]
	push.64*    %r18018
	call.32     %r18019 <- lua_gettop
	store.32    %r18019 -> 0[i]
	br          .L4276

.L4276:
	load.32     %r18020 <- 0[i]
	setgt.32    %r18021 <- %r18020, $1
	br          %r18021, .L4273, .L4275

.L4273:
	load.64*    %r18022 <- 0[L]
	load.32     %r18023 <- 0[i]
	push.64*    %r18022
	push.32     %r18023
	call.32     %r18024 <- barg
	load.32     %r18025 <- 0[b]
	cast.32     %r18026 <- (32) %r18025
	and.32      %r18027 <- %r18026, %r18024
	cast.32     %r18028 <- (32) %r18027
	store.32    %r18028 -> 0[b]
	br          .L4274

.L4274:
	load.32     %r18029 <- 0[i]
	sub.32      %r18030 <- %r18029, $1
	store.32    %r18030 -> 0[i]
	br          .L4276

.L4275:
	load.64*    %r18031 <- 0[L]
	load.32     %r18032 <- 0[b]
	cast.32     %r18033 <- (32) %r18032
	fpcast.f64  %r18034 <- (32) %r18033
	push.64*    %r18031
	push.f64    %r18034
	call        lua_pushnumber
	phisrc.32   %phi851(return) <- $1
	br          .L4277

.L4277:
	phi.32      %r18035 <- %phi851(return)
	ret.32      $1


bor:
.L4278:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18036 <- 0[L]
	push.64*    %r18036
	push.32     $1
	call.32     %r18037 <- barg
	store.32    %r18037 -> 0[b]
	load.64*    %r18038 <- 0[L]
	push.64*    %r18038
	call.32     %r18039 <- lua_gettop
	store.32    %r18039 -> 0[i]
	br          .L4282

.L4282:
	load.32     %r18040 <- 0[i]
	setgt.32    %r18041 <- %r18040, $1
	br          %r18041, .L4279, .L4281

.L4279:
	load.64*    %r18042 <- 0[L]
	load.32     %r18043 <- 0[i]
	push.64*    %r18042
	push.32     %r18043
	call.32     %r18044 <- barg
	load.32     %r18045 <- 0[b]
	cast.32     %r18046 <- (32) %r18045
	or.32       %r18047 <- %r18046, %r18044
	cast.32     %r18048 <- (32) %r18047
	store.32    %r18048 -> 0[b]
	br          .L4280

.L4280:
	load.32     %r18049 <- 0[i]
	sub.32      %r18050 <- %r18049, $1
	store.32    %r18050 -> 0[i]
	br          .L4282

.L4281:
	load.64*    %r18051 <- 0[L]
	load.32     %r18052 <- 0[b]
	cast.32     %r18053 <- (32) %r18052
	fpcast.f64  %r18054 <- (32) %r18053
	push.64*    %r18051
	push.f64    %r18054
	call        lua_pushnumber
	phisrc.32   %phi852(return) <- $1
	br          .L4283

.L4283:
	phi.32      %r18055 <- %phi852(return)
	ret.32      $1


bxor:
.L4284:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18056 <- 0[L]
	push.64*    %r18056
	push.32     $1
	call.32     %r18057 <- barg
	store.32    %r18057 -> 0[b]
	load.64*    %r18058 <- 0[L]
	push.64*    %r18058
	call.32     %r18059 <- lua_gettop
	store.32    %r18059 -> 0[i]
	br          .L4288

.L4288:
	load.32     %r18060 <- 0[i]
	setgt.32    %r18061 <- %r18060, $1
	br          %r18061, .L4285, .L4287

.L4285:
	load.64*    %r18062 <- 0[L]
	load.32     %r18063 <- 0[i]
	push.64*    %r18062
	push.32     %r18063
	call.32     %r18064 <- barg
	load.32     %r18065 <- 0[b]
	cast.32     %r18066 <- (32) %r18065
	xor.32      %r18067 <- %r18066, %r18064
	cast.32     %r18068 <- (32) %r18067
	store.32    %r18068 -> 0[b]
	br          .L4286

.L4286:
	load.32     %r18069 <- 0[i]
	sub.32      %r18070 <- %r18069, $1
	store.32    %r18070 -> 0[i]
	br          .L4288

.L4287:
	load.64*    %r18071 <- 0[L]
	load.32     %r18072 <- 0[b]
	cast.32     %r18073 <- (32) %r18072
	fpcast.f64  %r18074 <- (32) %r18073
	push.64*    %r18071
	push.f64    %r18074
	call        lua_pushnumber
	phisrc.32   %phi853(return) <- $1
	br          .L4289

.L4289:
	phi.32      %r18075 <- %phi853(return)
	ret.32      $1


lshift:
.L4290:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18076 <- 0[L]
	push.64*    %r18076
	push.32     $1
	call.32     %r18077 <- barg
	store.32    %r18077 -> 0[b]
	load.64*    %r18078 <- 0[L]
	push.64*    %r18078
	push.32     $2
	call.32     %r18079 <- barg
	and.32      %r18080 <- %r18079, $31
	store.32    %r18080 -> 0[n]
	load.64*    %r18081 <- 0[L]
	load.32     %r18082 <- 0[b]
	load.32     %r18083 <- 0[n]
	shl.32      %r18084 <- %r18082, %r18083
	cast.32     %r18085 <- (32) %r18084
	fpcast.f64  %r18086 <- (32) %r18085
	push.64*    %r18081
	push.f64    %r18086
	call        lua_pushnumber
	phisrc.32   %phi854(return) <- $1
	br          .L4291

.L4291:
	phi.32      %r18087 <- %phi854(return)
	ret.32      $1


rshift:
.L4292:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18088 <- 0[L]
	push.64*    %r18088
	push.32     $1
	call.32     %r18089 <- barg
	store.32    %r18089 -> 0[b]
	load.64*    %r18090 <- 0[L]
	push.64*    %r18090
	push.32     $2
	call.32     %r18091 <- barg
	and.32      %r18092 <- %r18091, $31
	store.32    %r18092 -> 0[n]
	load.64*    %r18093 <- 0[L]
	load.32     %r18094 <- 0[b]
	load.32     %r18095 <- 0[n]
	lsr.32      %r18096 <- %r18094, %r18095
	cast.32     %r18097 <- (32) %r18096
	fpcast.f64  %r18098 <- (32) %r18097
	push.64*    %r18093
	push.f64    %r18098
	call        lua_pushnumber
	phisrc.32   %phi855(return) <- $1
	br          .L4293

.L4293:
	phi.32      %r18099 <- %phi855(return)
	ret.32      $1


arshift:
.L4294:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18100 <- 0[L]
	push.64*    %r18100
	push.32     $1
	call.32     %r18101 <- barg
	store.32    %r18101 -> 0[b]
	load.64*    %r18102 <- 0[L]
	push.64*    %r18102
	push.32     $2
	call.32     %r18103 <- barg
	and.32      %r18104 <- %r18103, $31
	store.32    %r18104 -> 0[n]
	load.64*    %r18105 <- 0[L]
	load.32     %r18106 <- 0[b]
	cast.32     %r18107 <- (32) %r18106
	load.32     %r18108 <- 0[n]
	asr.32      %r18109 <- %r18107, %r18108
	scast.32    %r18110 <- (32) %r18109
	fpcast.f64  %r18111 <- (32) %r18110
	push.64*    %r18105
	push.f64    %r18111
	call        lua_pushnumber
	phisrc.32   %phi856(return) <- $1
	br          .L4295

.L4295:
	phi.32      %r18112 <- %phi856(return)
	ret.32      $1


rol:
.L4296:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18113 <- 0[L]
	push.64*    %r18113
	push.32     $1
	call.32     %r18114 <- barg
	store.32    %r18114 -> 0[b]
	load.64*    %r18115 <- 0[L]
	push.64*    %r18115
	push.32     $2
	call.32     %r18116 <- barg
	and.32      %r18117 <- %r18116, $31
	store.32    %r18117 -> 0[n]
	load.64*    %r18118 <- 0[L]
	load.32     %r18119 <- 0[b]
	load.32     %r18120 <- 0[n]
	shl.32      %r18121 <- %r18119, %r18120
	load.32     %r18122 <- 0[b]
	load.32     %r18123 <- 0[n]
	sub.32      %r18124 <- $32, %r18123
	lsr.32      %r18125 <- %r18122, %r18124
	or.32       %r18126 <- %r18121, %r18125
	cast.32     %r18127 <- (32) %r18126
	fpcast.f64  %r18128 <- (32) %r18127
	push.64*    %r18118
	push.f64    %r18128
	call        lua_pushnumber
	phisrc.32   %phi857(return) <- $1
	br          .L4297

.L4297:
	phi.32      %r18129 <- %phi857(return)
	ret.32      $1


ror:
.L4298:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18130 <- 0[L]
	push.64*    %r18130
	push.32     $1
	call.32     %r18131 <- barg
	store.32    %r18131 -> 0[b]
	load.64*    %r18132 <- 0[L]
	push.64*    %r18132
	push.32     $2
	call.32     %r18133 <- barg
	and.32      %r18134 <- %r18133, $31
	store.32    %r18134 -> 0[n]
	load.64*    %r18135 <- 0[L]
	load.32     %r18136 <- 0[b]
	load.32     %r18137 <- 0[n]
	lsr.32      %r18138 <- %r18136, %r18137
	load.32     %r18139 <- 0[b]
	load.32     %r18140 <- 0[n]
	sub.32      %r18141 <- $32, %r18140
	shl.32      %r18142 <- %r18139, %r18141
	or.32       %r18143 <- %r18138, %r18142
	cast.32     %r18144 <- (32) %r18143
	fpcast.f64  %r18145 <- (32) %r18144
	push.64*    %r18135
	push.f64    %r18145
	call        lua_pushnumber
	phisrc.32   %phi858(return) <- $1
	br          .L4299

.L4299:
	phi.32      %r18146 <- %phi858(return)
	ret.32      $1


bswap:
.L4300:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18147 <- 0[L]
	push.64*    %r18147
	push.32     $1
	call.32     %r18148 <- barg
	store.32    %r18148 -> 0[b]
	load.32     %r18149 <- 0[b]
	lsr.32      %r18150 <- %r18149, $24
	load.32     %r18151 <- 0[b]
	lsr.32      %r18152 <- %r18151, $8
	and.32      %r18153 <- %r18152, $0xff00
	or.32       %r18154 <- %r18150, %r18153
	load.32     %r18155 <- 0[b]
	and.32      %r18156 <- %r18155, $0xff00
	shl.32      %r18157 <- %r18156, $8
	or.32       %r18158 <- %r18154, %r18157
	load.32     %r18159 <- 0[b]
	shl.32      %r18160 <- %r18159, $24
	or.32       %r18161 <- %r18158, %r18160
	store.32    %r18161 -> 0[b]
	load.64*    %r18162 <- 0[L]
	load.32     %r18163 <- 0[b]
	cast.32     %r18164 <- (32) %r18163
	fpcast.f64  %r18165 <- (32) %r18164
	push.64*    %r18162
	push.f64    %r18165
	call        lua_pushnumber
	phisrc.32   %phi859(return) <- $1
	br          .L4301

.L4301:
	phi.32      %r18166 <- %phi859(return)
	ret.32      $1


tohex:
.L4302:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r18167 <- 0[L]
	push.64*    %r18167
	push.32     $1
	call.32     %r18168 <- barg
	store.32    %r18168 -> 0[b]
	load.64*    %r18169 <- 0[L]
	push.64*    %r18169
	push.32     $2
	call.32     %r18170 <- lua_type
	seteq.32    %r18171 <- %r18170, $0xffffffff
	br          %r18171, .L4303, .L4304

.L4303:
	phisrc.32   %phi860 <- $8
	br          .L4305

.L4304:
	load.64*    %r18172 <- 0[L]
	push.64*    %r18172
	push.32     $2
	call.32     %r18173 <- barg
	cast.32     %r18174 <- (32) %r18173
	phisrc.32   %phi861 <- %r18174
	br          .L4305

.L4305:
	phi.32      %r18175 <- %phi860, %phi861
	store.32    %r18175 -> 0[n]
	symaddr.64* %r18176 <- <anon symbol:0x62d001527a30>
	store.64*   %r18176 -> 0[hexdigits]
	load.32     %r18177 <- 0[n]
	setlt.32    %r18178 <- %r18177, $0
	br          %r18178, .L4306, .L4307

.L4306:
	load.32     %r18179 <- 0[n]
	neg.32      %r18180 <- %r18179
	store.32    %r18180 -> 0[n]
	symaddr.64* %r18181 <- <anon symbol:0x62d001527dd0>
	store.64*   %r18181 -> 0[hexdigits]
	br          .L4307

.L4307:
	load.32     %r18182 <- 0[n]
	setgt.32    %r18183 <- %r18182, $8
	br          %r18183, .L4308, .L4309

.L4308:
	store.32    $8 -> 0[n]
	br          .L4309

.L4309:
	load.32     %r18184 <- 0[n]
	scast.32    %r18185 <- (32) %r18184
	store.32    %r18185 -> 0[i]
	br          .L4313

.L4313:
	load.32     %r18186 <- 0[i]
	sub.32      %r18187 <- %r18186, $1
	store.32    %r18187 -> 0[i]
	setge.32    %r18188 <- %r18187, $0
	br          %r18188, .L4310, .L4312

.L4310:
	load.64*    %r18189 <- 0[hexdigits]
	load.32     %r18190 <- 0[b]
	and.32      %r18191 <- %r18190, $15
	cast.64     %r18192 <- (32) %r18191
	add.64*     %r18193 <- %r18189, %r18192
	load.8      %r18194 <- 0[%r18193]
	scast.8     %r18195 <- (8) %r18194
	symaddr.64* %r18196 <- buf
	load.32     %r18197 <- 0[i]
	scast.64    %r18198 <- (32) %r18197
	add.64*     %r18199 <- %r18196, %r18198
	store.8     %r18195 -> 0[%r18199]
	load.32     %r18200 <- 0[b]
	cast.32     %r18201 <- (32) %r18200
	lsr.32      %r18202 <- %r18201, $4
	cast.32     %r18203 <- (32) %r18202
	store.32    %r18203 -> 0[b]
	br          .L4311

.L4311:
	br          .L4313

.L4312:
	load.64*    %r18204 <- 0[L]
	symaddr.64* %r18205 <- buf
	load.32     %r18206 <- 0[n]
	scast.64    %r18207 <- (32) %r18206
	push.64*    %r18204
	push.64*    %r18205
	push.64     %r18207
	call        lua_pushlstring
	phisrc.32   %phi862(return) <- $1
	br          .L4314

.L4314:
	phi.32      %r18208 <- %phi862(return)
	ret.32      $1


init_globals:
.L4315:
	<entry-point>
	store.64*   $0 -> 0[luaO_nilobject_]
	store.32    $0 -> 8[luaO_nilobject_]
	store.32    $0 -> 0[i]
	symaddr.64* %r18209 <- log_2
	load.32     %r18210 <- 0[i]
	add.32      %r18211 <- %r18210, $1
	store.32    %r18211 -> 0[i]
	scast.64    %r18212 <- (32) %r18210
	add.64*     %r18213 <- %r18209, %r18212
	store.8     $0 -> 0[%r18213]
	symaddr.64* %r18214 <- log_2
	load.32     %r18215 <- 0[i]
	add.32      %r18216 <- %r18215, $1
	store.32    %r18216 -> 0[i]
	scast.64    %r18217 <- (32) %r18215
	add.64*     %r18218 <- %r18214, %r18217
	store.8     $1 -> 0[%r18218]
	symaddr.64* %r18219 <- log_2
	load.32     %r18220 <- 0[i]
	add.32      %r18221 <- %r18220, $1
	store.32    %r18221 -> 0[i]
	scast.64    %r18222 <- (32) %r18220
	add.64*     %r18223 <- %r18219, %r18222
	store.8     $2 -> 0[%r18223]
	symaddr.64* %r18224 <- log_2
	load.32     %r18225 <- 0[i]
	add.32      %r18226 <- %r18225, $1
	store.32    %r18226 -> 0[i]
	scast.64    %r18227 <- (32) %r18225
	add.64*     %r18228 <- %r18224, %r18227
	store.8     $2 -> 0[%r18228]
	symaddr.64* %r18229 <- log_2
	load.32     %r18230 <- 0[i]
	add.32      %r18231 <- %r18230, $1
	store.32    %r18231 -> 0[i]
	scast.64    %r18232 <- (32) %r18230
	add.64*     %r18233 <- %r18229, %r18232
	store.8     $3 -> 0[%r18233]
	symaddr.64* %r18234 <- log_2
	load.32     %r18235 <- 0[i]
	add.32      %r18236 <- %r18235, $1
	store.32    %r18236 -> 0[i]
	scast.64    %r18237 <- (32) %r18235
	add.64*     %r18238 <- %r18234, %r18237
	store.8     $3 -> 0[%r18238]
	symaddr.64* %r18239 <- log_2
	load.32     %r18240 <- 0[i]
	add.32      %r18241 <- %r18240, $1
	store.32    %r18241 -> 0[i]
	scast.64    %r18242 <- (32) %r18240
	add.64*     %r18243 <- %r18239, %r18242
	store.8     $3 -> 0[%r18243]
	symaddr.64* %r18244 <- log_2
	load.32     %r18245 <- 0[i]
	add.32      %r18246 <- %r18245, $1
	store.32    %r18246 -> 0[i]
	scast.64    %r18247 <- (32) %r18245
	add.64*     %r18248 <- %r18244, %r18247
	store.8     $3 -> 0[%r18248]
	symaddr.64* %r18249 <- log_2
	load.32     %r18250 <- 0[i]
	add.32      %r18251 <- %r18250, $1
	store.32    %r18251 -> 0[i]
	scast.64    %r18252 <- (32) %r18250
	add.64*     %r18253 <- %r18249, %r18252
	store.8     $4 -> 0[%r18253]
	symaddr.64* %r18254 <- log_2
	load.32     %r18255 <- 0[i]
	add.32      %r18256 <- %r18255, $1
	store.32    %r18256 -> 0[i]
	scast.64    %r18257 <- (32) %r18255
	add.64*     %r18258 <- %r18254, %r18257
	store.8     $4 -> 0[%r18258]
	symaddr.64* %r18259 <- log_2
	load.32     %r18260 <- 0[i]
	add.32      %r18261 <- %r18260, $1
	store.32    %r18261 -> 0[i]
	scast.64    %r18262 <- (32) %r18260
	add.64*     %r18263 <- %r18259, %r18262
	store.8     $4 -> 0[%r18263]
	symaddr.64* %r18264 <- log_2
	load.32     %r18265 <- 0[i]
	add.32      %r18266 <- %r18265, $1
	store.32    %r18266 -> 0[i]
	scast.64    %r18267 <- (32) %r18265
	add.64*     %r18268 <- %r18264, %r18267
	store.8     $4 -> 0[%r18268]
	symaddr.64* %r18269 <- log_2
	load.32     %r18270 <- 0[i]
	add.32      %r18271 <- %r18270, $1
	store.32    %r18271 -> 0[i]
	scast.64    %r18272 <- (32) %r18270
	add.64*     %r18273 <- %r18269, %r18272
	store.8     $4 -> 0[%r18273]
	symaddr.64* %r18274 <- log_2
	load.32     %r18275 <- 0[i]
	add.32      %r18276 <- %r18275, $1
	store.32    %r18276 -> 0[i]
	scast.64    %r18277 <- (32) %r18275
	add.64*     %r18278 <- %r18274, %r18277
	store.8     $4 -> 0[%r18278]
	symaddr.64* %r18279 <- log_2
	load.32     %r18280 <- 0[i]
	add.32      %r18281 <- %r18280, $1
	store.32    %r18281 -> 0[i]
	scast.64    %r18282 <- (32) %r18280
	add.64*     %r18283 <- %r18279, %r18282
	store.8     $4 -> 0[%r18283]
	symaddr.64* %r18284 <- log_2
	load.32     %r18285 <- 0[i]
	add.32      %r18286 <- %r18285, $1
	store.32    %r18286 -> 0[i]
	scast.64    %r18287 <- (32) %r18285
	add.64*     %r18288 <- %r18284, %r18287
	store.8     $4 -> 0[%r18288]
	symaddr.64* %r18289 <- log_2
	load.32     %r18290 <- 0[i]
	add.32      %r18291 <- %r18290, $1
	store.32    %r18291 -> 0[i]
	scast.64    %r18292 <- (32) %r18290
	add.64*     %r18293 <- %r18289, %r18292
	store.8     $5 -> 0[%r18293]
	symaddr.64* %r18294 <- log_2
	load.32     %r18295 <- 0[i]
	add.32      %r18296 <- %r18295, $1
	store.32    %r18296 -> 0[i]
	scast.64    %r18297 <- (32) %r18295
	add.64*     %r18298 <- %r18294, %r18297
	store.8     $5 -> 0[%r18298]
	symaddr.64* %r18299 <- log_2
	load.32     %r18300 <- 0[i]
	add.32      %r18301 <- %r18300, $1
	store.32    %r18301 -> 0[i]
	scast.64    %r18302 <- (32) %r18300
	add.64*     %r18303 <- %r18299, %r18302
	store.8     $5 -> 0[%r18303]
	symaddr.64* %r18304 <- log_2
	load.32     %r18305 <- 0[i]
	add.32      %r18306 <- %r18305, $1
	store.32    %r18306 -> 0[i]
	scast.64    %r18307 <- (32) %r18305
	add.64*     %r18308 <- %r18304, %r18307
	store.8     $5 -> 0[%r18308]
	symaddr.64* %r18309 <- log_2
	load.32     %r18310 <- 0[i]
	add.32      %r18311 <- %r18310, $1
	store.32    %r18311 -> 0[i]
	scast.64    %r18312 <- (32) %r18310
	add.64*     %r18313 <- %r18309, %r18312
	store.8     $5 -> 0[%r18313]
	symaddr.64* %r18314 <- log_2
	load.32     %r18315 <- 0[i]
	add.32      %r18316 <- %r18315, $1
	store.32    %r18316 -> 0[i]
	scast.64    %r18317 <- (32) %r18315
	add.64*     %r18318 <- %r18314, %r18317
	store.8     $5 -> 0[%r18318]
	symaddr.64* %r18319 <- log_2
	load.32     %r18320 <- 0[i]
	add.32      %r18321 <- %r18320, $1
	store.32    %r18321 -> 0[i]
	scast.64    %r18322 <- (32) %r18320
	add.64*     %r18323 <- %r18319, %r18322
	store.8     $5 -> 0[%r18323]
	symaddr.64* %r18324 <- log_2
	load.32     %r18325 <- 0[i]
	add.32      %r18326 <- %r18325, $1
	store.32    %r18326 -> 0[i]
	scast.64    %r18327 <- (32) %r18325
	add.64*     %r18328 <- %r18324, %r18327
	store.8     $5 -> 0[%r18328]
	symaddr.64* %r18329 <- log_2
	load.32     %r18330 <- 0[i]
	add.32      %r18331 <- %r18330, $1
	store.32    %r18331 -> 0[i]
	scast.64    %r18332 <- (32) %r18330
	add.64*     %r18333 <- %r18329, %r18332
	store.8     $5 -> 0[%r18333]
	symaddr.64* %r18334 <- log_2
	load.32     %r18335 <- 0[i]
	add.32      %r18336 <- %r18335, $1
	store.32    %r18336 -> 0[i]
	scast.64    %r18337 <- (32) %r18335
	add.64*     %r18338 <- %r18334, %r18337
	store.8     $5 -> 0[%r18338]
	symaddr.64* %r18339 <- log_2
	load.32     %r18340 <- 0[i]
	add.32      %r18341 <- %r18340, $1
	store.32    %r18341 -> 0[i]
	scast.64    %r18342 <- (32) %r18340
	add.64*     %r18343 <- %r18339, %r18342
	store.8     $5 -> 0[%r18343]
	symaddr.64* %r18344 <- log_2
	load.32     %r18345 <- 0[i]
	add.32      %r18346 <- %r18345, $1
	store.32    %r18346 -> 0[i]
	scast.64    %r18347 <- (32) %r18345
	add.64*     %r18348 <- %r18344, %r18347
	store.8     $5 -> 0[%r18348]
	symaddr.64* %r18349 <- log_2
	load.32     %r18350 <- 0[i]
	add.32      %r18351 <- %r18350, $1
	store.32    %r18351 -> 0[i]
	scast.64    %r18352 <- (32) %r18350
	add.64*     %r18353 <- %r18349, %r18352
	store.8     $5 -> 0[%r18353]
	symaddr.64* %r18354 <- log_2
	load.32     %r18355 <- 0[i]
	add.32      %r18356 <- %r18355, $1
	store.32    %r18356 -> 0[i]
	scast.64    %r18357 <- (32) %r18355
	add.64*     %r18358 <- %r18354, %r18357
	store.8     $5 -> 0[%r18358]
	symaddr.64* %r18359 <- log_2
	load.32     %r18360 <- 0[i]
	add.32      %r18361 <- %r18360, $1
	store.32    %r18361 -> 0[i]
	scast.64    %r18362 <- (32) %r18360
	add.64*     %r18363 <- %r18359, %r18362
	store.8     $5 -> 0[%r18363]
	symaddr.64* %r18364 <- log_2
	load.32     %r18365 <- 0[i]
	add.32      %r18366 <- %r18365, $1
	store.32    %r18366 -> 0[i]
	scast.64    %r18367 <- (32) %r18365
	add.64*     %r18368 <- %r18364, %r18367
	store.8     $5 -> 0[%r18368]
	symaddr.64* %r18369 <- log_2
	load.32     %r18370 <- 0[i]
	add.32      %r18371 <- %r18370, $1
	store.32    %r18371 -> 0[i]
	scast.64    %r18372 <- (32) %r18370
	add.64*     %r18373 <- %r18369, %r18372
	store.8     $6 -> 0[%r18373]
	symaddr.64* %r18374 <- log_2
	load.32     %r18375 <- 0[i]
	add.32      %r18376 <- %r18375, $1
	store.32    %r18376 -> 0[i]
	scast.64    %r18377 <- (32) %r18375
	add.64*     %r18378 <- %r18374, %r18377
	store.8     $6 -> 0[%r18378]
	symaddr.64* %r18379 <- log_2
	load.32     %r18380 <- 0[i]
	add.32      %r18381 <- %r18380, $1
	store.32    %r18381 -> 0[i]
	scast.64    %r18382 <- (32) %r18380
	add.64*     %r18383 <- %r18379, %r18382
	store.8     $6 -> 0[%r18383]
	symaddr.64* %r18384 <- log_2
	load.32     %r18385 <- 0[i]
	add.32      %r18386 <- %r18385, $1
	store.32    %r18386 -> 0[i]
	scast.64    %r18387 <- (32) %r18385
	add.64*     %r18388 <- %r18384, %r18387
	store.8     $6 -> 0[%r18388]
	symaddr.64* %r18389 <- log_2
	load.32     %r18390 <- 0[i]
	add.32      %r18391 <- %r18390, $1
	store.32    %r18391 -> 0[i]
	scast.64    %r18392 <- (32) %r18390
	add.64*     %r18393 <- %r18389, %r18392
	store.8     $6 -> 0[%r18393]
	symaddr.64* %r18394 <- log_2
	load.32     %r18395 <- 0[i]
	add.32      %r18396 <- %r18395, $1
	store.32    %r18396 -> 0[i]
	scast.64    %r18397 <- (32) %r18395
	add.64*     %r18398 <- %r18394, %r18397
	store.8     $6 -> 0[%r18398]
	symaddr.64* %r18399 <- log_2
	load.32     %r18400 <- 0[i]
	add.32      %r18401 <- %r18400, $1
	store.32    %r18401 -> 0[i]
	scast.64    %r18402 <- (32) %r18400
	add.64*     %r18403 <- %r18399, %r18402
	store.8     $6 -> 0[%r18403]
	symaddr.64* %r18404 <- log_2
	load.32     %r18405 <- 0[i]
	add.32      %r18406 <- %r18405, $1
	store.32    %r18406 -> 0[i]
	scast.64    %r18407 <- (32) %r18405
	add.64*     %r18408 <- %r18404, %r18407
	store.8     $6 -> 0[%r18408]
	symaddr.64* %r18409 <- log_2
	load.32     %r18410 <- 0[i]
	add.32      %r18411 <- %r18410, $1
	store.32    %r18411 -> 0[i]
	scast.64    %r18412 <- (32) %r18410
	add.64*     %r18413 <- %r18409, %r18412
	store.8     $6 -> 0[%r18413]
	symaddr.64* %r18414 <- log_2
	load.32     %r18415 <- 0[i]
	add.32      %r18416 <- %r18415, $1
	store.32    %r18416 -> 0[i]
	scast.64    %r18417 <- (32) %r18415
	add.64*     %r18418 <- %r18414, %r18417
	store.8     $6 -> 0[%r18418]
	symaddr.64* %r18419 <- log_2
	load.32     %r18420 <- 0[i]
	add.32      %r18421 <- %r18420, $1
	store.32    %r18421 -> 0[i]
	scast.64    %r18422 <- (32) %r18420
	add.64*     %r18423 <- %r18419, %r18422
	store.8     $6 -> 0[%r18423]
	symaddr.64* %r18424 <- log_2
	load.32     %r18425 <- 0[i]
	add.32      %r18426 <- %r18425, $1
	store.32    %r18426 -> 0[i]
	scast.64    %r18427 <- (32) %r18425
	add.64*     %r18428 <- %r18424, %r18427
	store.8     $6 -> 0[%r18428]
	symaddr.64* %r18429 <- log_2
	load.32     %r18430 <- 0[i]
	add.32      %r18431 <- %r18430, $1
	store.32    %r18431 -> 0[i]
	scast.64    %r18432 <- (32) %r18430
	add.64*     %r18433 <- %r18429, %r18432
	store.8     $6 -> 0[%r18433]
	symaddr.64* %r18434 <- log_2
	load.32     %r18435 <- 0[i]
	add.32      %r18436 <- %r18435, $1
	store.32    %r18436 -> 0[i]
	scast.64    %r18437 <- (32) %r18435
	add.64*     %r18438 <- %r18434, %r18437
	store.8     $6 -> 0[%r18438]
	symaddr.64* %r18439 <- log_2
	load.32     %r18440 <- 0[i]
	add.32      %r18441 <- %r18440, $1
	store.32    %r18441 -> 0[i]
	scast.64    %r18442 <- (32) %r18440
	add.64*     %r18443 <- %r18439, %r18442
	store.8     $6 -> 0[%r18443]
	symaddr.64* %r18444 <- log_2
	load.32     %r18445 <- 0[i]
	add.32      %r18446 <- %r18445, $1
	store.32    %r18446 -> 0[i]
	scast.64    %r18447 <- (32) %r18445
	add.64*     %r18448 <- %r18444, %r18447
	store.8     $6 -> 0[%r18448]
	symaddr.64* %r18449 <- log_2
	load.32     %r18450 <- 0[i]
	add.32      %r18451 <- %r18450, $1
	store.32    %r18451 -> 0[i]
	scast.64    %r18452 <- (32) %r18450
	add.64*     %r18453 <- %r18449, %r18452
	store.8     $6 -> 0[%r18453]
	symaddr.64* %r18454 <- log_2
	load.32     %r18455 <- 0[i]
	add.32      %r18456 <- %r18455, $1
	store.32    %r18456 -> 0[i]
	scast.64    %r18457 <- (32) %r18455
	add.64*     %r18458 <- %r18454, %r18457
	store.8     $6 -> 0[%r18458]
	symaddr.64* %r18459 <- log_2
	load.32     %r18460 <- 0[i]
	add.32      %r18461 <- %r18460, $1
	store.32    %r18461 -> 0[i]
	scast.64    %r18462 <- (32) %r18460
	add.64*     %r18463 <- %r18459, %r18462
	store.8     $6 -> 0[%r18463]
	symaddr.64* %r18464 <- log_2
	load.32     %r18465 <- 0[i]
	add.32      %r18466 <- %r18465, $1
	store.32    %r18466 -> 0[i]
	scast.64    %r18467 <- (32) %r18465
	add.64*     %r18468 <- %r18464, %r18467
	store.8     $6 -> 0[%r18468]
	symaddr.64* %r18469 <- log_2
	load.32     %r18470 <- 0[i]
	add.32      %r18471 <- %r18470, $1
	store.32    %r18471 -> 0[i]
	scast.64    %r18472 <- (32) %r18470
	add.64*     %r18473 <- %r18469, %r18472
	store.8     $6 -> 0[%r18473]
	symaddr.64* %r18474 <- log_2
	load.32     %r18475 <- 0[i]
	add.32      %r18476 <- %r18475, $1
	store.32    %r18476 -> 0[i]
	scast.64    %r18477 <- (32) %r18475
	add.64*     %r18478 <- %r18474, %r18477
	store.8     $6 -> 0[%r18478]
	symaddr.64* %r18479 <- log_2
	load.32     %r18480 <- 0[i]
	add.32      %r18481 <- %r18480, $1
	store.32    %r18481 -> 0[i]
	scast.64    %r18482 <- (32) %r18480
	add.64*     %r18483 <- %r18479, %r18482
	store.8     $6 -> 0[%r18483]
	symaddr.64* %r18484 <- log_2
	load.32     %r18485 <- 0[i]
	add.32      %r18486 <- %r18485, $1
	store.32    %r18486 -> 0[i]
	scast.64    %r18487 <- (32) %r18485
	add.64*     %r18488 <- %r18484, %r18487
	store.8     $6 -> 0[%r18488]
	symaddr.64* %r18489 <- log_2
	load.32     %r18490 <- 0[i]
	add.32      %r18491 <- %r18490, $1
	store.32    %r18491 -> 0[i]
	scast.64    %r18492 <- (32) %r18490
	add.64*     %r18493 <- %r18489, %r18492
	store.8     $6 -> 0[%r18493]
	symaddr.64* %r18494 <- log_2
	load.32     %r18495 <- 0[i]
	add.32      %r18496 <- %r18495, $1
	store.32    %r18496 -> 0[i]
	scast.64    %r18497 <- (32) %r18495
	add.64*     %r18498 <- %r18494, %r18497
	store.8     $6 -> 0[%r18498]
	symaddr.64* %r18499 <- log_2
	load.32     %r18500 <- 0[i]
	add.32      %r18501 <- %r18500, $1
	store.32    %r18501 -> 0[i]
	scast.64    %r18502 <- (32) %r18500
	add.64*     %r18503 <- %r18499, %r18502
	store.8     $6 -> 0[%r18503]
	symaddr.64* %r18504 <- log_2
	load.32     %r18505 <- 0[i]
	add.32      %r18506 <- %r18505, $1
	store.32    %r18506 -> 0[i]
	scast.64    %r18507 <- (32) %r18505
	add.64*     %r18508 <- %r18504, %r18507
	store.8     $6 -> 0[%r18508]
	symaddr.64* %r18509 <- log_2
	load.32     %r18510 <- 0[i]
	add.32      %r18511 <- %r18510, $1
	store.32    %r18511 -> 0[i]
	scast.64    %r18512 <- (32) %r18510
	add.64*     %r18513 <- %r18509, %r18512
	store.8     $6 -> 0[%r18513]
	symaddr.64* %r18514 <- log_2
	load.32     %r18515 <- 0[i]
	add.32      %r18516 <- %r18515, $1
	store.32    %r18516 -> 0[i]
	scast.64    %r18517 <- (32) %r18515
	add.64*     %r18518 <- %r18514, %r18517
	store.8     $6 -> 0[%r18518]
	symaddr.64* %r18519 <- log_2
	load.32     %r18520 <- 0[i]
	add.32      %r18521 <- %r18520, $1
	store.32    %r18521 -> 0[i]
	scast.64    %r18522 <- (32) %r18520
	add.64*     %r18523 <- %r18519, %r18522
	store.8     $6 -> 0[%r18523]
	symaddr.64* %r18524 <- log_2
	load.32     %r18525 <- 0[i]
	add.32      %r18526 <- %r18525, $1
	store.32    %r18526 -> 0[i]
	scast.64    %r18527 <- (32) %r18525
	add.64*     %r18528 <- %r18524, %r18527
	store.8     $6 -> 0[%r18528]
	symaddr.64* %r18529 <- log_2
	load.32     %r18530 <- 0[i]
	add.32      %r18531 <- %r18530, $1
	store.32    %r18531 -> 0[i]
	scast.64    %r18532 <- (32) %r18530
	add.64*     %r18533 <- %r18529, %r18532
	store.8     $7 -> 0[%r18533]
	symaddr.64* %r18534 <- log_2
	load.32     %r18535 <- 0[i]
	add.32      %r18536 <- %r18535, $1
	store.32    %r18536 -> 0[i]
	scast.64    %r18537 <- (32) %r18535
	add.64*     %r18538 <- %r18534, %r18537
	store.8     $7 -> 0[%r18538]
	symaddr.64* %r18539 <- log_2
	load.32     %r18540 <- 0[i]
	add.32      %r18541 <- %r18540, $1
	store.32    %r18541 -> 0[i]
	scast.64    %r18542 <- (32) %r18540
	add.64*     %r18543 <- %r18539, %r18542
	store.8     $7 -> 0[%r18543]
	symaddr.64* %r18544 <- log_2
	load.32     %r18545 <- 0[i]
	add.32      %r18546 <- %r18545, $1
	store.32    %r18546 -> 0[i]
	scast.64    %r18547 <- (32) %r18545
	add.64*     %r18548 <- %r18544, %r18547
	store.8     $7 -> 0[%r18548]
	symaddr.64* %r18549 <- log_2
	load.32     %r18550 <- 0[i]
	add.32      %r18551 <- %r18550, $1
	store.32    %r18551 -> 0[i]
	scast.64    %r18552 <- (32) %r18550
	add.64*     %r18553 <- %r18549, %r18552
	store.8     $7 -> 0[%r18553]
	symaddr.64* %r18554 <- log_2
	load.32     %r18555 <- 0[i]
	add.32      %r18556 <- %r18555, $1
	store.32    %r18556 -> 0[i]
	scast.64    %r18557 <- (32) %r18555
	add.64*     %r18558 <- %r18554, %r18557
	store.8     $7 -> 0[%r18558]
	symaddr.64* %r18559 <- log_2
	load.32     %r18560 <- 0[i]
	add.32      %r18561 <- %r18560, $1
	store.32    %r18561 -> 0[i]
	scast.64    %r18562 <- (32) %r18560
	add.64*     %r18563 <- %r18559, %r18562
	store.8     $7 -> 0[%r18563]
	symaddr.64* %r18564 <- log_2
	load.32     %r18565 <- 0[i]
	add.32      %r18566 <- %r18565, $1
	store.32    %r18566 -> 0[i]
	scast.64    %r18567 <- (32) %r18565
	add.64*     %r18568 <- %r18564, %r18567
	store.8     $7 -> 0[%r18568]
	symaddr.64* %r18569 <- log_2
	load.32     %r18570 <- 0[i]
	add.32      %r18571 <- %r18570, $1
	store.32    %r18571 -> 0[i]
	scast.64    %r18572 <- (32) %r18570
	add.64*     %r18573 <- %r18569, %r18572
	store.8     $7 -> 0[%r18573]
	symaddr.64* %r18574 <- log_2
	load.32     %r18575 <- 0[i]
	add.32      %r18576 <- %r18575, $1
	store.32    %r18576 -> 0[i]
	scast.64    %r18577 <- (32) %r18575
	add.64*     %r18578 <- %r18574, %r18577
	store.8     $7 -> 0[%r18578]
	symaddr.64* %r18579 <- log_2
	load.32     %r18580 <- 0[i]
	add.32      %r18581 <- %r18580, $1
	store.32    %r18581 -> 0[i]
	scast.64    %r18582 <- (32) %r18580
	add.64*     %r18583 <- %r18579, %r18582
	store.8     $7 -> 0[%r18583]
	symaddr.64* %r18584 <- log_2
	load.32     %r18585 <- 0[i]
	add.32      %r18586 <- %r18585, $1
	store.32    %r18586 -> 0[i]
	scast.64    %r18587 <- (32) %r18585
	add.64*     %r18588 <- %r18584, %r18587
	store.8     $7 -> 0[%r18588]
	symaddr.64* %r18589 <- log_2
	load.32     %r18590 <- 0[i]
	add.32      %r18591 <- %r18590, $1
	store.32    %r18591 -> 0[i]
	scast.64    %r18592 <- (32) %r18590
	add.64*     %r18593 <- %r18589, %r18592
	store.8     $7 -> 0[%r18593]
	symaddr.64* %r18594 <- log_2
	load.32     %r18595 <- 0[i]
	add.32      %r18596 <- %r18595, $1
	store.32    %r18596 -> 0[i]
	scast.64    %r18597 <- (32) %r18595
	add.64*     %r18598 <- %r18594, %r18597
	store.8     $7 -> 0[%r18598]
	symaddr.64* %r18599 <- log_2
	load.32     %r18600 <- 0[i]
	add.32      %r18601 <- %r18600, $1
	store.32    %r18601 -> 0[i]
	scast.64    %r18602 <- (32) %r18600
	add.64*     %r18603 <- %r18599, %r18602
	store.8     $7 -> 0[%r18603]
	symaddr.64* %r18604 <- log_2
	load.32     %r18605 <- 0[i]
	add.32      %r18606 <- %r18605, $1
	store.32    %r18606 -> 0[i]
	scast.64    %r18607 <- (32) %r18605
	add.64*     %r18608 <- %r18604, %r18607
	store.8     $7 -> 0[%r18608]
	symaddr.64* %r18609 <- log_2
	load.32     %r18610 <- 0[i]
	add.32      %r18611 <- %r18610, $1
	store.32    %r18611 -> 0[i]
	scast.64    %r18612 <- (32) %r18610
	add.64*     %r18613 <- %r18609, %r18612
	store.8     $7 -> 0[%r18613]
	symaddr.64* %r18614 <- log_2
	load.32     %r18615 <- 0[i]
	add.32      %r18616 <- %r18615, $1
	store.32    %r18616 -> 0[i]
	scast.64    %r18617 <- (32) %r18615
	add.64*     %r18618 <- %r18614, %r18617
	store.8     $7 -> 0[%r18618]
	symaddr.64* %r18619 <- log_2
	load.32     %r18620 <- 0[i]
	add.32      %r18621 <- %r18620, $1
	store.32    %r18621 -> 0[i]
	scast.64    %r18622 <- (32) %r18620
	add.64*     %r18623 <- %r18619, %r18622
	store.8     $7 -> 0[%r18623]
	symaddr.64* %r18624 <- log_2
	load.32     %r18625 <- 0[i]
	add.32      %r18626 <- %r18625, $1
	store.32    %r18626 -> 0[i]
	scast.64    %r18627 <- (32) %r18625
	add.64*     %r18628 <- %r18624, %r18627
	store.8     $7 -> 0[%r18628]
	symaddr.64* %r18629 <- log_2
	load.32     %r18630 <- 0[i]
	add.32      %r18631 <- %r18630, $1
	store.32    %r18631 -> 0[i]
	scast.64    %r18632 <- (32) %r18630
	add.64*     %r18633 <- %r18629, %r18632
	store.8     $7 -> 0[%r18633]
	symaddr.64* %r18634 <- log_2
	load.32     %r18635 <- 0[i]
	add.32      %r18636 <- %r18635, $1
	store.32    %r18636 -> 0[i]
	scast.64    %r18637 <- (32) %r18635
	add.64*     %r18638 <- %r18634, %r18637
	store.8     $7 -> 0[%r18638]
	symaddr.64* %r18639 <- log_2
	load.32     %r18640 <- 0[i]
	add.32      %r18641 <- %r18640, $1
	store.32    %r18641 -> 0[i]
	scast.64    %r18642 <- (32) %r18640
	add.64*     %r18643 <- %r18639, %r18642
	store.8     $7 -> 0[%r18643]
	symaddr.64* %r18644 <- log_2
	load.32     %r18645 <- 0[i]
	add.32      %r18646 <- %r18645, $1
	store.32    %r18646 -> 0[i]
	scast.64    %r18647 <- (32) %r18645
	add.64*     %r18648 <- %r18644, %r18647
	store.8     $7 -> 0[%r18648]
	symaddr.64* %r18649 <- log_2
	load.32     %r18650 <- 0[i]
	add.32      %r18651 <- %r18650, $1
	store.32    %r18651 -> 0[i]
	scast.64    %r18652 <- (32) %r18650
	add.64*     %r18653 <- %r18649, %r18652
	store.8     $7 -> 0[%r18653]
	symaddr.64* %r18654 <- log_2
	load.32     %r18655 <- 0[i]
	add.32      %r18656 <- %r18655, $1
	store.32    %r18656 -> 0[i]
	scast.64    %r18657 <- (32) %r18655
	add.64*     %r18658 <- %r18654, %r18657
	store.8     $7 -> 0[%r18658]
	symaddr.64* %r18659 <- log_2
	load.32     %r18660 <- 0[i]
	add.32      %r18661 <- %r18660, $1
	store.32    %r18661 -> 0[i]
	scast.64    %r18662 <- (32) %r18660
	add.64*     %r18663 <- %r18659, %r18662
	store.8     $7 -> 0[%r18663]
	symaddr.64* %r18664 <- log_2
	load.32     %r18665 <- 0[i]
	add.32      %r18666 <- %r18665, $1
	store.32    %r18666 -> 0[i]
	scast.64    %r18667 <- (32) %r18665
	add.64*     %r18668 <- %r18664, %r18667
	store.8     $7 -> 0[%r18668]
	symaddr.64* %r18669 <- log_2
	load.32     %r18670 <- 0[i]
	add.32      %r18671 <- %r18670, $1
	store.32    %r18671 -> 0[i]
	scast.64    %r18672 <- (32) %r18670
	add.64*     %r18673 <- %r18669, %r18672
	store.8     $7 -> 0[%r18673]
	symaddr.64* %r18674 <- log_2
	load.32     %r18675 <- 0[i]
	add.32      %r18676 <- %r18675, $1
	store.32    %r18676 -> 0[i]
	scast.64    %r18677 <- (32) %r18675
	add.64*     %r18678 <- %r18674, %r18677
	store.8     $7 -> 0[%r18678]
	symaddr.64* %r18679 <- log_2
	load.32     %r18680 <- 0[i]
	add.32      %r18681 <- %r18680, $1
	store.32    %r18681 -> 0[i]
	scast.64    %r18682 <- (32) %r18680
	add.64*     %r18683 <- %r18679, %r18682
	store.8     $7 -> 0[%r18683]
	symaddr.64* %r18684 <- log_2
	load.32     %r18685 <- 0[i]
	add.32      %r18686 <- %r18685, $1
	store.32    %r18686 -> 0[i]
	scast.64    %r18687 <- (32) %r18685
	add.64*     %r18688 <- %r18684, %r18687
	store.8     $7 -> 0[%r18688]
	symaddr.64* %r18689 <- log_2
	load.32     %r18690 <- 0[i]
	add.32      %r18691 <- %r18690, $1
	store.32    %r18691 -> 0[i]
	scast.64    %r18692 <- (32) %r18690
	add.64*     %r18693 <- %r18689, %r18692
	store.8     $7 -> 0[%r18693]
	symaddr.64* %r18694 <- log_2
	load.32     %r18695 <- 0[i]
	add.32      %r18696 <- %r18695, $1
	store.32    %r18696 -> 0[i]
	scast.64    %r18697 <- (32) %r18695
	add.64*     %r18698 <- %r18694, %r18697
	store.8     $7 -> 0[%r18698]
	symaddr.64* %r18699 <- log_2
	load.32     %r18700 <- 0[i]
	add.32      %r18701 <- %r18700, $1
	store.32    %r18701 -> 0[i]
	scast.64    %r18702 <- (32) %r18700
	add.64*     %r18703 <- %r18699, %r18702
	store.8     $7 -> 0[%r18703]
	symaddr.64* %r18704 <- log_2
	load.32     %r18705 <- 0[i]
	add.32      %r18706 <- %r18705, $1
	store.32    %r18706 -> 0[i]
	scast.64    %r18707 <- (32) %r18705
	add.64*     %r18708 <- %r18704, %r18707
	store.8     $7 -> 0[%r18708]
	symaddr.64* %r18709 <- log_2
	load.32     %r18710 <- 0[i]
	add.32      %r18711 <- %r18710, $1
	store.32    %r18711 -> 0[i]
	scast.64    %r18712 <- (32) %r18710
	add.64*     %r18713 <- %r18709, %r18712
	store.8     $7 -> 0[%r18713]
	symaddr.64* %r18714 <- log_2
	load.32     %r18715 <- 0[i]
	add.32      %r18716 <- %r18715, $1
	store.32    %r18716 -> 0[i]
	scast.64    %r18717 <- (32) %r18715
	add.64*     %r18718 <- %r18714, %r18717
	store.8     $7 -> 0[%r18718]
	symaddr.64* %r18719 <- log_2
	load.32     %r18720 <- 0[i]
	add.32      %r18721 <- %r18720, $1
	store.32    %r18721 -> 0[i]
	scast.64    %r18722 <- (32) %r18720
	add.64*     %r18723 <- %r18719, %r18722
	store.8     $7 -> 0[%r18723]
	symaddr.64* %r18724 <- log_2
	load.32     %r18725 <- 0[i]
	add.32      %r18726 <- %r18725, $1
	store.32    %r18726 -> 0[i]
	scast.64    %r18727 <- (32) %r18725
	add.64*     %r18728 <- %r18724, %r18727
	store.8     $7 -> 0[%r18728]
	symaddr.64* %r18729 <- log_2
	load.32     %r18730 <- 0[i]
	add.32      %r18731 <- %r18730, $1
	store.32    %r18731 -> 0[i]
	scast.64    %r18732 <- (32) %r18730
	add.64*     %r18733 <- %r18729, %r18732
	store.8     $7 -> 0[%r18733]
	symaddr.64* %r18734 <- log_2
	load.32     %r18735 <- 0[i]
	add.32      %r18736 <- %r18735, $1
	store.32    %r18736 -> 0[i]
	scast.64    %r18737 <- (32) %r18735
	add.64*     %r18738 <- %r18734, %r18737
	store.8     $7 -> 0[%r18738]
	symaddr.64* %r18739 <- log_2
	load.32     %r18740 <- 0[i]
	add.32      %r18741 <- %r18740, $1
	store.32    %r18741 -> 0[i]
	scast.64    %r18742 <- (32) %r18740
	add.64*     %r18743 <- %r18739, %r18742
	store.8     $7 -> 0[%r18743]
	symaddr.64* %r18744 <- log_2
	load.32     %r18745 <- 0[i]
	add.32      %r18746 <- %r18745, $1
	store.32    %r18746 -> 0[i]
	scast.64    %r18747 <- (32) %r18745
	add.64*     %r18748 <- %r18744, %r18747
	store.8     $7 -> 0[%r18748]
	symaddr.64* %r18749 <- log_2
	load.32     %r18750 <- 0[i]
	add.32      %r18751 <- %r18750, $1
	store.32    %r18751 -> 0[i]
	scast.64    %r18752 <- (32) %r18750
	add.64*     %r18753 <- %r18749, %r18752
	store.8     $7 -> 0[%r18753]
	symaddr.64* %r18754 <- log_2
	load.32     %r18755 <- 0[i]
	add.32      %r18756 <- %r18755, $1
	store.32    %r18756 -> 0[i]
	scast.64    %r18757 <- (32) %r18755
	add.64*     %r18758 <- %r18754, %r18757
	store.8     $7 -> 0[%r18758]
	symaddr.64* %r18759 <- log_2
	load.32     %r18760 <- 0[i]
	add.32      %r18761 <- %r18760, $1
	store.32    %r18761 -> 0[i]
	scast.64    %r18762 <- (32) %r18760
	add.64*     %r18763 <- %r18759, %r18762
	store.8     $7 -> 0[%r18763]
	symaddr.64* %r18764 <- log_2
	load.32     %r18765 <- 0[i]
	add.32      %r18766 <- %r18765, $1
	store.32    %r18766 -> 0[i]
	scast.64    %r18767 <- (32) %r18765
	add.64*     %r18768 <- %r18764, %r18767
	store.8     $7 -> 0[%r18768]
	symaddr.64* %r18769 <- log_2
	load.32     %r18770 <- 0[i]
	add.32      %r18771 <- %r18770, $1
	store.32    %r18771 -> 0[i]
	scast.64    %r18772 <- (32) %r18770
	add.64*     %r18773 <- %r18769, %r18772
	store.8     $7 -> 0[%r18773]
	symaddr.64* %r18774 <- log_2
	load.32     %r18775 <- 0[i]
	add.32      %r18776 <- %r18775, $1
	store.32    %r18776 -> 0[i]
	scast.64    %r18777 <- (32) %r18775
	add.64*     %r18778 <- %r18774, %r18777
	store.8     $7 -> 0[%r18778]
	symaddr.64* %r18779 <- log_2
	load.32     %r18780 <- 0[i]
	add.32      %r18781 <- %r18780, $1
	store.32    %r18781 -> 0[i]
	scast.64    %r18782 <- (32) %r18780
	add.64*     %r18783 <- %r18779, %r18782
	store.8     $7 -> 0[%r18783]
	symaddr.64* %r18784 <- log_2
	load.32     %r18785 <- 0[i]
	add.32      %r18786 <- %r18785, $1
	store.32    %r18786 -> 0[i]
	scast.64    %r18787 <- (32) %r18785
	add.64*     %r18788 <- %r18784, %r18787
	store.8     $7 -> 0[%r18788]
	symaddr.64* %r18789 <- log_2
	load.32     %r18790 <- 0[i]
	add.32      %r18791 <- %r18790, $1
	store.32    %r18791 -> 0[i]
	scast.64    %r18792 <- (32) %r18790
	add.64*     %r18793 <- %r18789, %r18792
	store.8     $7 -> 0[%r18793]
	symaddr.64* %r18794 <- log_2
	load.32     %r18795 <- 0[i]
	add.32      %r18796 <- %r18795, $1
	store.32    %r18796 -> 0[i]
	scast.64    %r18797 <- (32) %r18795
	add.64*     %r18798 <- %r18794, %r18797
	store.8     $7 -> 0[%r18798]
	symaddr.64* %r18799 <- log_2
	load.32     %r18800 <- 0[i]
	add.32      %r18801 <- %r18800, $1
	store.32    %r18801 -> 0[i]
	scast.64    %r18802 <- (32) %r18800
	add.64*     %r18803 <- %r18799, %r18802
	store.8     $7 -> 0[%r18803]
	symaddr.64* %r18804 <- log_2
	load.32     %r18805 <- 0[i]
	add.32      %r18806 <- %r18805, $1
	store.32    %r18806 -> 0[i]
	scast.64    %r18807 <- (32) %r18805
	add.64*     %r18808 <- %r18804, %r18807
	store.8     $7 -> 0[%r18808]
	symaddr.64* %r18809 <- log_2
	load.32     %r18810 <- 0[i]
	add.32      %r18811 <- %r18810, $1
	store.32    %r18811 -> 0[i]
	scast.64    %r18812 <- (32) %r18810
	add.64*     %r18813 <- %r18809, %r18812
	store.8     $7 -> 0[%r18813]
	symaddr.64* %r18814 <- log_2
	load.32     %r18815 <- 0[i]
	add.32      %r18816 <- %r18815, $1
	store.32    %r18816 -> 0[i]
	scast.64    %r18817 <- (32) %r18815
	add.64*     %r18818 <- %r18814, %r18817
	store.8     $7 -> 0[%r18818]
	symaddr.64* %r18819 <- log_2
	load.32     %r18820 <- 0[i]
	add.32      %r18821 <- %r18820, $1
	store.32    %r18821 -> 0[i]
	scast.64    %r18822 <- (32) %r18820
	add.64*     %r18823 <- %r18819, %r18822
	store.8     $7 -> 0[%r18823]
	symaddr.64* %r18824 <- log_2
	load.32     %r18825 <- 0[i]
	add.32      %r18826 <- %r18825, $1
	store.32    %r18826 -> 0[i]
	scast.64    %r18827 <- (32) %r18825
	add.64*     %r18828 <- %r18824, %r18827
	store.8     $7 -> 0[%r18828]
	symaddr.64* %r18829 <- log_2
	load.32     %r18830 <- 0[i]
	add.32      %r18831 <- %r18830, $1
	store.32    %r18831 -> 0[i]
	scast.64    %r18832 <- (32) %r18830
	add.64*     %r18833 <- %r18829, %r18832
	store.8     $7 -> 0[%r18833]
	symaddr.64* %r18834 <- log_2
	load.32     %r18835 <- 0[i]
	add.32      %r18836 <- %r18835, $1
	store.32    %r18836 -> 0[i]
	scast.64    %r18837 <- (32) %r18835
	add.64*     %r18838 <- %r18834, %r18837
	store.8     $7 -> 0[%r18838]
	symaddr.64* %r18839 <- log_2
	load.32     %r18840 <- 0[i]
	add.32      %r18841 <- %r18840, $1
	store.32    %r18841 -> 0[i]
	scast.64    %r18842 <- (32) %r18840
	add.64*     %r18843 <- %r18839, %r18842
	store.8     $7 -> 0[%r18843]
	symaddr.64* %r18844 <- log_2
	load.32     %r18845 <- 0[i]
	add.32      %r18846 <- %r18845, $1
	store.32    %r18846 -> 0[i]
	scast.64    %r18847 <- (32) %r18845
	add.64*     %r18848 <- %r18844, %r18847
	store.8     $7 -> 0[%r18848]
	symaddr.64* %r18849 <- log_2
	load.32     %r18850 <- 0[i]
	add.32      %r18851 <- %r18850, $1
	store.32    %r18851 -> 0[i]
	scast.64    %r18852 <- (32) %r18850
	add.64*     %r18853 <- %r18849, %r18852
	store.8     $8 -> 0[%r18853]
	symaddr.64* %r18854 <- log_2
	load.32     %r18855 <- 0[i]
	add.32      %r18856 <- %r18855, $1
	store.32    %r18856 -> 0[i]
	scast.64    %r18857 <- (32) %r18855
	add.64*     %r18858 <- %r18854, %r18857
	store.8     $8 -> 0[%r18858]
	symaddr.64* %r18859 <- log_2
	load.32     %r18860 <- 0[i]
	add.32      %r18861 <- %r18860, $1
	store.32    %r18861 -> 0[i]
	scast.64    %r18862 <- (32) %r18860
	add.64*     %r18863 <- %r18859, %r18862
	store.8     $8 -> 0[%r18863]
	symaddr.64* %r18864 <- log_2
	load.32     %r18865 <- 0[i]
	add.32      %r18866 <- %r18865, $1
	store.32    %r18866 -> 0[i]
	scast.64    %r18867 <- (32) %r18865
	add.64*     %r18868 <- %r18864, %r18867
	store.8     $8 -> 0[%r18868]
	symaddr.64* %r18869 <- log_2
	load.32     %r18870 <- 0[i]
	add.32      %r18871 <- %r18870, $1
	store.32    %r18871 -> 0[i]
	scast.64    %r18872 <- (32) %r18870
	add.64*     %r18873 <- %r18869, %r18872
	store.8     $8 -> 0[%r18873]
	symaddr.64* %r18874 <- log_2
	load.32     %r18875 <- 0[i]
	add.32      %r18876 <- %r18875, $1
	store.32    %r18876 -> 0[i]
	scast.64    %r18877 <- (32) %r18875
	add.64*     %r18878 <- %r18874, %r18877
	store.8     $8 -> 0[%r18878]
	symaddr.64* %r18879 <- log_2
	load.32     %r18880 <- 0[i]
	add.32      %r18881 <- %r18880, $1
	store.32    %r18881 -> 0[i]
	scast.64    %r18882 <- (32) %r18880
	add.64*     %r18883 <- %r18879, %r18882
	store.8     $8 -> 0[%r18883]
	symaddr.64* %r18884 <- log_2
	load.32     %r18885 <- 0[i]
	add.32      %r18886 <- %r18885, $1
	store.32    %r18886 -> 0[i]
	scast.64    %r18887 <- (32) %r18885
	add.64*     %r18888 <- %r18884, %r18887
	store.8     $8 -> 0[%r18888]
	symaddr.64* %r18889 <- log_2
	load.32     %r18890 <- 0[i]
	add.32      %r18891 <- %r18890, $1
	store.32    %r18891 -> 0[i]
	scast.64    %r18892 <- (32) %r18890
	add.64*     %r18893 <- %r18889, %r18892
	store.8     $8 -> 0[%r18893]
	symaddr.64* %r18894 <- log_2
	load.32     %r18895 <- 0[i]
	add.32      %r18896 <- %r18895, $1
	store.32    %r18896 -> 0[i]
	scast.64    %r18897 <- (32) %r18895
	add.64*     %r18898 <- %r18894, %r18897
	store.8     $8 -> 0[%r18898]
	symaddr.64* %r18899 <- log_2
	load.32     %r18900 <- 0[i]
	add.32      %r18901 <- %r18900, $1
	store.32    %r18901 -> 0[i]
	scast.64    %r18902 <- (32) %r18900
	add.64*     %r18903 <- %r18899, %r18902
	store.8     $8 -> 0[%r18903]
	symaddr.64* %r18904 <- log_2
	load.32     %r18905 <- 0[i]
	add.32      %r18906 <- %r18905, $1
	store.32    %r18906 -> 0[i]
	scast.64    %r18907 <- (32) %r18905
	add.64*     %r18908 <- %r18904, %r18907
	store.8     $8 -> 0[%r18908]
	symaddr.64* %r18909 <- log_2
	load.32     %r18910 <- 0[i]
	add.32      %r18911 <- %r18910, $1
	store.32    %r18911 -> 0[i]
	scast.64    %r18912 <- (32) %r18910
	add.64*     %r18913 <- %r18909, %r18912
	store.8     $8 -> 0[%r18913]
	symaddr.64* %r18914 <- log_2
	load.32     %r18915 <- 0[i]
	add.32      %r18916 <- %r18915, $1
	store.32    %r18916 -> 0[i]
	scast.64    %r18917 <- (32) %r18915
	add.64*     %r18918 <- %r18914, %r18917
	store.8     $8 -> 0[%r18918]
	symaddr.64* %r18919 <- log_2
	load.32     %r18920 <- 0[i]
	add.32      %r18921 <- %r18920, $1
	store.32    %r18921 -> 0[i]
	scast.64    %r18922 <- (32) %r18920
	add.64*     %r18923 <- %r18919, %r18922
	store.8     $8 -> 0[%r18923]
	symaddr.64* %r18924 <- log_2
	load.32     %r18925 <- 0[i]
	add.32      %r18926 <- %r18925, $1
	store.32    %r18926 -> 0[i]
	scast.64    %r18927 <- (32) %r18925
	add.64*     %r18928 <- %r18924, %r18927
	store.8     $8 -> 0[%r18928]
	symaddr.64* %r18929 <- log_2
	load.32     %r18930 <- 0[i]
	add.32      %r18931 <- %r18930, $1
	store.32    %r18931 -> 0[i]
	scast.64    %r18932 <- (32) %r18930
	add.64*     %r18933 <- %r18929, %r18932
	store.8     $8 -> 0[%r18933]
	symaddr.64* %r18934 <- log_2
	load.32     %r18935 <- 0[i]
	add.32      %r18936 <- %r18935, $1
	store.32    %r18936 -> 0[i]
	scast.64    %r18937 <- (32) %r18935
	add.64*     %r18938 <- %r18934, %r18937
	store.8     $8 -> 0[%r18938]
	symaddr.64* %r18939 <- log_2
	load.32     %r18940 <- 0[i]
	add.32      %r18941 <- %r18940, $1
	store.32    %r18941 -> 0[i]
	scast.64    %r18942 <- (32) %r18940
	add.64*     %r18943 <- %r18939, %r18942
	store.8     $8 -> 0[%r18943]
	symaddr.64* %r18944 <- log_2
	load.32     %r18945 <- 0[i]
	add.32      %r18946 <- %r18945, $1
	store.32    %r18946 -> 0[i]
	scast.64    %r18947 <- (32) %r18945
	add.64*     %r18948 <- %r18944, %r18947
	store.8     $8 -> 0[%r18948]
	symaddr.64* %r18949 <- log_2
	load.32     %r18950 <- 0[i]
	add.32      %r18951 <- %r18950, $1
	store.32    %r18951 -> 0[i]
	scast.64    %r18952 <- (32) %r18950
	add.64*     %r18953 <- %r18949, %r18952
	store.8     $8 -> 0[%r18953]
	symaddr.64* %r18954 <- log_2
	load.32     %r18955 <- 0[i]
	add.32      %r18956 <- %r18955, $1
	store.32    %r18956 -> 0[i]
	scast.64    %r18957 <- (32) %r18955
	add.64*     %r18958 <- %r18954, %r18957
	store.8     $8 -> 0[%r18958]
	symaddr.64* %r18959 <- log_2
	load.32     %r18960 <- 0[i]
	add.32      %r18961 <- %r18960, $1
	store.32    %r18961 -> 0[i]
	scast.64    %r18962 <- (32) %r18960
	add.64*     %r18963 <- %r18959, %r18962
	store.8     $8 -> 0[%r18963]
	symaddr.64* %r18964 <- log_2
	load.32     %r18965 <- 0[i]
	add.32      %r18966 <- %r18965, $1
	store.32    %r18966 -> 0[i]
	scast.64    %r18967 <- (32) %r18965
	add.64*     %r18968 <- %r18964, %r18967
	store.8     $8 -> 0[%r18968]
	symaddr.64* %r18969 <- log_2
	load.32     %r18970 <- 0[i]
	add.32      %r18971 <- %r18970, $1
	store.32    %r18971 -> 0[i]
	scast.64    %r18972 <- (32) %r18970
	add.64*     %r18973 <- %r18969, %r18972
	store.8     $8 -> 0[%r18973]
	symaddr.64* %r18974 <- log_2
	load.32     %r18975 <- 0[i]
	add.32      %r18976 <- %r18975, $1
	store.32    %r18976 -> 0[i]
	scast.64    %r18977 <- (32) %r18975
	add.64*     %r18978 <- %r18974, %r18977
	store.8     $8 -> 0[%r18978]
	symaddr.64* %r18979 <- log_2
	load.32     %r18980 <- 0[i]
	add.32      %r18981 <- %r18980, $1
	store.32    %r18981 -> 0[i]
	scast.64    %r18982 <- (32) %r18980
	add.64*     %r18983 <- %r18979, %r18982
	store.8     $8 -> 0[%r18983]
	symaddr.64* %r18984 <- log_2
	load.32     %r18985 <- 0[i]
	add.32      %r18986 <- %r18985, $1
	store.32    %r18986 -> 0[i]
	scast.64    %r18987 <- (32) %r18985
	add.64*     %r18988 <- %r18984, %r18987
	store.8     $8 -> 0[%r18988]
	symaddr.64* %r18989 <- log_2
	load.32     %r18990 <- 0[i]
	add.32      %r18991 <- %r18990, $1
	store.32    %r18991 -> 0[i]
	scast.64    %r18992 <- (32) %r18990
	add.64*     %r18993 <- %r18989, %r18992
	store.8     $8 -> 0[%r18993]
	symaddr.64* %r18994 <- log_2
	load.32     %r18995 <- 0[i]
	add.32      %r18996 <- %r18995, $1
	store.32    %r18996 -> 0[i]
	scast.64    %r18997 <- (32) %r18995
	add.64*     %r18998 <- %r18994, %r18997
	store.8     $8 -> 0[%r18998]
	symaddr.64* %r18999 <- log_2
	load.32     %r19000 <- 0[i]
	add.32      %r19001 <- %r19000, $1
	store.32    %r19001 -> 0[i]
	scast.64    %r19002 <- (32) %r19000
	add.64*     %r19003 <- %r18999, %r19002
	store.8     $8 -> 0[%r19003]
	symaddr.64* %r19004 <- log_2
	load.32     %r19005 <- 0[i]
	add.32      %r19006 <- %r19005, $1
	store.32    %r19006 -> 0[i]
	scast.64    %r19007 <- (32) %r19005
	add.64*     %r19008 <- %r19004, %r19007
	store.8     $8 -> 0[%r19008]
	symaddr.64* %r19009 <- log_2
	load.32     %r19010 <- 0[i]
	add.32      %r19011 <- %r19010, $1
	store.32    %r19011 -> 0[i]
	scast.64    %r19012 <- (32) %r19010
	add.64*     %r19013 <- %r19009, %r19012
	store.8     $8 -> 0[%r19013]
	symaddr.64* %r19014 <- log_2
	load.32     %r19015 <- 0[i]
	add.32      %r19016 <- %r19015, $1
	store.32    %r19016 -> 0[i]
	scast.64    %r19017 <- (32) %r19015
	add.64*     %r19018 <- %r19014, %r19017
	store.8     $8 -> 0[%r19018]
	symaddr.64* %r19019 <- log_2
	load.32     %r19020 <- 0[i]
	add.32      %r19021 <- %r19020, $1
	store.32    %r19021 -> 0[i]
	scast.64    %r19022 <- (32) %r19020
	add.64*     %r19023 <- %r19019, %r19022
	store.8     $8 -> 0[%r19023]
	symaddr.64* %r19024 <- log_2
	load.32     %r19025 <- 0[i]
	add.32      %r19026 <- %r19025, $1
	store.32    %r19026 -> 0[i]
	scast.64    %r19027 <- (32) %r19025
	add.64*     %r19028 <- %r19024, %r19027
	store.8     $8 -> 0[%r19028]
	symaddr.64* %r19029 <- log_2
	load.32     %r19030 <- 0[i]
	add.32      %r19031 <- %r19030, $1
	store.32    %r19031 -> 0[i]
	scast.64    %r19032 <- (32) %r19030
	add.64*     %r19033 <- %r19029, %r19032
	store.8     $8 -> 0[%r19033]
	symaddr.64* %r19034 <- log_2
	load.32     %r19035 <- 0[i]
	add.32      %r19036 <- %r19035, $1
	store.32    %r19036 -> 0[i]
	scast.64    %r19037 <- (32) %r19035
	add.64*     %r19038 <- %r19034, %r19037
	store.8     $8 -> 0[%r19038]
	symaddr.64* %r19039 <- log_2
	load.32     %r19040 <- 0[i]
	add.32      %r19041 <- %r19040, $1
	store.32    %r19041 -> 0[i]
	scast.64    %r19042 <- (32) %r19040
	add.64*     %r19043 <- %r19039, %r19042
	store.8     $8 -> 0[%r19043]
	symaddr.64* %r19044 <- log_2
	load.32     %r19045 <- 0[i]
	add.32      %r19046 <- %r19045, $1
	store.32    %r19046 -> 0[i]
	scast.64    %r19047 <- (32) %r19045
	add.64*     %r19048 <- %r19044, %r19047
	store.8     $8 -> 0[%r19048]
	symaddr.64* %r19049 <- log_2
	load.32     %r19050 <- 0[i]
	add.32      %r19051 <- %r19050, $1
	store.32    %r19051 -> 0[i]
	scast.64    %r19052 <- (32) %r19050
	add.64*     %r19053 <- %r19049, %r19052
	store.8     $8 -> 0[%r19053]
	symaddr.64* %r19054 <- log_2
	load.32     %r19055 <- 0[i]
	add.32      %r19056 <- %r19055, $1
	store.32    %r19056 -> 0[i]
	scast.64    %r19057 <- (32) %r19055
	add.64*     %r19058 <- %r19054, %r19057
	store.8     $8 -> 0[%r19058]
	symaddr.64* %r19059 <- log_2
	load.32     %r19060 <- 0[i]
	add.32      %r19061 <- %r19060, $1
	store.32    %r19061 -> 0[i]
	scast.64    %r19062 <- (32) %r19060
	add.64*     %r19063 <- %r19059, %r19062
	store.8     $8 -> 0[%r19063]
	symaddr.64* %r19064 <- log_2
	load.32     %r19065 <- 0[i]
	add.32      %r19066 <- %r19065, $1
	store.32    %r19066 -> 0[i]
	scast.64    %r19067 <- (32) %r19065
	add.64*     %r19068 <- %r19064, %r19067
	store.8     $8 -> 0[%r19068]
	symaddr.64* %r19069 <- log_2
	load.32     %r19070 <- 0[i]
	add.32      %r19071 <- %r19070, $1
	store.32    %r19071 -> 0[i]
	scast.64    %r19072 <- (32) %r19070
	add.64*     %r19073 <- %r19069, %r19072
	store.8     $8 -> 0[%r19073]
	symaddr.64* %r19074 <- log_2
	load.32     %r19075 <- 0[i]
	add.32      %r19076 <- %r19075, $1
	store.32    %r19076 -> 0[i]
	scast.64    %r19077 <- (32) %r19075
	add.64*     %r19078 <- %r19074, %r19077
	store.8     $8 -> 0[%r19078]
	symaddr.64* %r19079 <- log_2
	load.32     %r19080 <- 0[i]
	add.32      %r19081 <- %r19080, $1
	store.32    %r19081 -> 0[i]
	scast.64    %r19082 <- (32) %r19080
	add.64*     %r19083 <- %r19079, %r19082
	store.8     $8 -> 0[%r19083]
	symaddr.64* %r19084 <- log_2
	load.32     %r19085 <- 0[i]
	add.32      %r19086 <- %r19085, $1
	store.32    %r19086 -> 0[i]
	scast.64    %r19087 <- (32) %r19085
	add.64*     %r19088 <- %r19084, %r19087
	store.8     $8 -> 0[%r19088]
	symaddr.64* %r19089 <- log_2
	load.32     %r19090 <- 0[i]
	add.32      %r19091 <- %r19090, $1
	store.32    %r19091 -> 0[i]
	scast.64    %r19092 <- (32) %r19090
	add.64*     %r19093 <- %r19089, %r19092
	store.8     $8 -> 0[%r19093]
	symaddr.64* %r19094 <- log_2
	load.32     %r19095 <- 0[i]
	add.32      %r19096 <- %r19095, $1
	store.32    %r19096 -> 0[i]
	scast.64    %r19097 <- (32) %r19095
	add.64*     %r19098 <- %r19094, %r19097
	store.8     $8 -> 0[%r19098]
	symaddr.64* %r19099 <- log_2
	load.32     %r19100 <- 0[i]
	add.32      %r19101 <- %r19100, $1
	store.32    %r19101 -> 0[i]
	scast.64    %r19102 <- (32) %r19100
	add.64*     %r19103 <- %r19099, %r19102
	store.8     $8 -> 0[%r19103]
	symaddr.64* %r19104 <- log_2
	load.32     %r19105 <- 0[i]
	add.32      %r19106 <- %r19105, $1
	store.32    %r19106 -> 0[i]
	scast.64    %r19107 <- (32) %r19105
	add.64*     %r19108 <- %r19104, %r19107
	store.8     $8 -> 0[%r19108]
	symaddr.64* %r19109 <- log_2
	load.32     %r19110 <- 0[i]
	add.32      %r19111 <- %r19110, $1
	store.32    %r19111 -> 0[i]
	scast.64    %r19112 <- (32) %r19110
	add.64*     %r19113 <- %r19109, %r19112
	store.8     $8 -> 0[%r19113]
	symaddr.64* %r19114 <- log_2
	load.32     %r19115 <- 0[i]
	add.32      %r19116 <- %r19115, $1
	store.32    %r19116 -> 0[i]
	scast.64    %r19117 <- (32) %r19115
	add.64*     %r19118 <- %r19114, %r19117
	store.8     $8 -> 0[%r19118]
	symaddr.64* %r19119 <- log_2
	load.32     %r19120 <- 0[i]
	add.32      %r19121 <- %r19120, $1
	store.32    %r19121 -> 0[i]
	scast.64    %r19122 <- (32) %r19120
	add.64*     %r19123 <- %r19119, %r19122
	store.8     $8 -> 0[%r19123]
	symaddr.64* %r19124 <- log_2
	load.32     %r19125 <- 0[i]
	add.32      %r19126 <- %r19125, $1
	store.32    %r19126 -> 0[i]
	scast.64    %r19127 <- (32) %r19125
	add.64*     %r19128 <- %r19124, %r19127
	store.8     $8 -> 0[%r19128]
	symaddr.64* %r19129 <- log_2
	load.32     %r19130 <- 0[i]
	add.32      %r19131 <- %r19130, $1
	store.32    %r19131 -> 0[i]
	scast.64    %r19132 <- (32) %r19130
	add.64*     %r19133 <- %r19129, %r19132
	store.8     $8 -> 0[%r19133]
	symaddr.64* %r19134 <- log_2
	load.32     %r19135 <- 0[i]
	add.32      %r19136 <- %r19135, $1
	store.32    %r19136 -> 0[i]
	scast.64    %r19137 <- (32) %r19135
	add.64*     %r19138 <- %r19134, %r19137
	store.8     $8 -> 0[%r19138]
	symaddr.64* %r19139 <- log_2
	load.32     %r19140 <- 0[i]
	add.32      %r19141 <- %r19140, $1
	store.32    %r19141 -> 0[i]
	scast.64    %r19142 <- (32) %r19140
	add.64*     %r19143 <- %r19139, %r19142
	store.8     $8 -> 0[%r19143]
	symaddr.64* %r19144 <- log_2
	load.32     %r19145 <- 0[i]
	add.32      %r19146 <- %r19145, $1
	store.32    %r19146 -> 0[i]
	scast.64    %r19147 <- (32) %r19145
	add.64*     %r19148 <- %r19144, %r19147
	store.8     $8 -> 0[%r19148]
	symaddr.64* %r19149 <- log_2
	load.32     %r19150 <- 0[i]
	add.32      %r19151 <- %r19150, $1
	store.32    %r19151 -> 0[i]
	scast.64    %r19152 <- (32) %r19150
	add.64*     %r19153 <- %r19149, %r19152
	store.8     $8 -> 0[%r19153]
	symaddr.64* %r19154 <- log_2
	load.32     %r19155 <- 0[i]
	add.32      %r19156 <- %r19155, $1
	store.32    %r19156 -> 0[i]
	scast.64    %r19157 <- (32) %r19155
	add.64*     %r19158 <- %r19154, %r19157
	store.8     $8 -> 0[%r19158]
	symaddr.64* %r19159 <- log_2
	load.32     %r19160 <- 0[i]
	add.32      %r19161 <- %r19160, $1
	store.32    %r19161 -> 0[i]
	scast.64    %r19162 <- (32) %r19160
	add.64*     %r19163 <- %r19159, %r19162
	store.8     $8 -> 0[%r19163]
	symaddr.64* %r19164 <- log_2
	load.32     %r19165 <- 0[i]
	add.32      %r19166 <- %r19165, $1
	store.32    %r19166 -> 0[i]
	scast.64    %r19167 <- (32) %r19165
	add.64*     %r19168 <- %r19164, %r19167
	store.8     $8 -> 0[%r19168]
	symaddr.64* %r19169 <- log_2
	load.32     %r19170 <- 0[i]
	add.32      %r19171 <- %r19170, $1
	store.32    %r19171 -> 0[i]
	scast.64    %r19172 <- (32) %r19170
	add.64*     %r19173 <- %r19169, %r19172
	store.8     $8 -> 0[%r19173]
	symaddr.64* %r19174 <- log_2
	load.32     %r19175 <- 0[i]
	add.32      %r19176 <- %r19175, $1
	store.32    %r19176 -> 0[i]
	scast.64    %r19177 <- (32) %r19175
	add.64*     %r19178 <- %r19174, %r19177
	store.8     $8 -> 0[%r19178]
	symaddr.64* %r19179 <- log_2
	load.32     %r19180 <- 0[i]
	add.32      %r19181 <- %r19180, $1
	store.32    %r19181 -> 0[i]
	scast.64    %r19182 <- (32) %r19180
	add.64*     %r19183 <- %r19179, %r19182
	store.8     $8 -> 0[%r19183]
	symaddr.64* %r19184 <- log_2
	load.32     %r19185 <- 0[i]
	add.32      %r19186 <- %r19185, $1
	store.32    %r19186 -> 0[i]
	scast.64    %r19187 <- (32) %r19185
	add.64*     %r19188 <- %r19184, %r19187
	store.8     $8 -> 0[%r19188]
	symaddr.64* %r19189 <- log_2
	load.32     %r19190 <- 0[i]
	add.32      %r19191 <- %r19190, $1
	store.32    %r19191 -> 0[i]
	scast.64    %r19192 <- (32) %r19190
	add.64*     %r19193 <- %r19189, %r19192
	store.8     $8 -> 0[%r19193]
	symaddr.64* %r19194 <- log_2
	load.32     %r19195 <- 0[i]
	add.32      %r19196 <- %r19195, $1
	store.32    %r19196 -> 0[i]
	scast.64    %r19197 <- (32) %r19195
	add.64*     %r19198 <- %r19194, %r19197
	store.8     $8 -> 0[%r19198]
	symaddr.64* %r19199 <- log_2
	load.32     %r19200 <- 0[i]
	add.32      %r19201 <- %r19200, $1
	store.32    %r19201 -> 0[i]
	scast.64    %r19202 <- (32) %r19200
	add.64*     %r19203 <- %r19199, %r19202
	store.8     $8 -> 0[%r19203]
	symaddr.64* %r19204 <- log_2
	load.32     %r19205 <- 0[i]
	add.32      %r19206 <- %r19205, $1
	store.32    %r19206 -> 0[i]
	scast.64    %r19207 <- (32) %r19205
	add.64*     %r19208 <- %r19204, %r19207
	store.8     $8 -> 0[%r19208]
	symaddr.64* %r19209 <- log_2
	load.32     %r19210 <- 0[i]
	add.32      %r19211 <- %r19210, $1
	store.32    %r19211 -> 0[i]
	scast.64    %r19212 <- (32) %r19210
	add.64*     %r19213 <- %r19209, %r19212
	store.8     $8 -> 0[%r19213]
	symaddr.64* %r19214 <- log_2
	load.32     %r19215 <- 0[i]
	add.32      %r19216 <- %r19215, $1
	store.32    %r19216 -> 0[i]
	scast.64    %r19217 <- (32) %r19215
	add.64*     %r19218 <- %r19214, %r19217
	store.8     $8 -> 0[%r19218]
	symaddr.64* %r19219 <- log_2
	load.32     %r19220 <- 0[i]
	add.32      %r19221 <- %r19220, $1
	store.32    %r19221 -> 0[i]
	scast.64    %r19222 <- (32) %r19220
	add.64*     %r19223 <- %r19219, %r19222
	store.8     $8 -> 0[%r19223]
	symaddr.64* %r19224 <- log_2
	load.32     %r19225 <- 0[i]
	add.32      %r19226 <- %r19225, $1
	store.32    %r19226 -> 0[i]
	scast.64    %r19227 <- (32) %r19225
	add.64*     %r19228 <- %r19224, %r19227
	store.8     $8 -> 0[%r19228]
	symaddr.64* %r19229 <- log_2
	load.32     %r19230 <- 0[i]
	add.32      %r19231 <- %r19230, $1
	store.32    %r19231 -> 0[i]
	scast.64    %r19232 <- (32) %r19230
	add.64*     %r19233 <- %r19229, %r19232
	store.8     $8 -> 0[%r19233]
	symaddr.64* %r19234 <- log_2
	load.32     %r19235 <- 0[i]
	add.32      %r19236 <- %r19235, $1
	store.32    %r19236 -> 0[i]
	scast.64    %r19237 <- (32) %r19235
	add.64*     %r19238 <- %r19234, %r19237
	store.8     $8 -> 0[%r19238]
	symaddr.64* %r19239 <- log_2
	load.32     %r19240 <- 0[i]
	add.32      %r19241 <- %r19240, $1
	store.32    %r19241 -> 0[i]
	scast.64    %r19242 <- (32) %r19240
	add.64*     %r19243 <- %r19239, %r19242
	store.8     $8 -> 0[%r19243]
	symaddr.64* %r19244 <- log_2
	load.32     %r19245 <- 0[i]
	add.32      %r19246 <- %r19245, $1
	store.32    %r19246 -> 0[i]
	scast.64    %r19247 <- (32) %r19245
	add.64*     %r19248 <- %r19244, %r19247
	store.8     $8 -> 0[%r19248]
	symaddr.64* %r19249 <- log_2
	load.32     %r19250 <- 0[i]
	add.32      %r19251 <- %r19250, $1
	store.32    %r19251 -> 0[i]
	scast.64    %r19252 <- (32) %r19250
	add.64*     %r19253 <- %r19249, %r19252
	store.8     $8 -> 0[%r19253]
	symaddr.64* %r19254 <- log_2
	load.32     %r19255 <- 0[i]
	add.32      %r19256 <- %r19255, $1
	store.32    %r19256 -> 0[i]
	scast.64    %r19257 <- (32) %r19255
	add.64*     %r19258 <- %r19254, %r19257
	store.8     $8 -> 0[%r19258]
	symaddr.64* %r19259 <- log_2
	load.32     %r19260 <- 0[i]
	add.32      %r19261 <- %r19260, $1
	store.32    %r19261 -> 0[i]
	scast.64    %r19262 <- (32) %r19260
	add.64*     %r19263 <- %r19259, %r19262
	store.8     $8 -> 0[%r19263]
	symaddr.64* %r19264 <- log_2
	load.32     %r19265 <- 0[i]
	add.32      %r19266 <- %r19265, $1
	store.32    %r19266 -> 0[i]
	scast.64    %r19267 <- (32) %r19265
	add.64*     %r19268 <- %r19264, %r19267
	store.8     $8 -> 0[%r19268]
	symaddr.64* %r19269 <- log_2
	load.32     %r19270 <- 0[i]
	add.32      %r19271 <- %r19270, $1
	store.32    %r19271 -> 0[i]
	scast.64    %r19272 <- (32) %r19270
	add.64*     %r19273 <- %r19269, %r19272
	store.8     $8 -> 0[%r19273]
	symaddr.64* %r19274 <- log_2
	load.32     %r19275 <- 0[i]
	add.32      %r19276 <- %r19275, $1
	store.32    %r19276 -> 0[i]
	scast.64    %r19277 <- (32) %r19275
	add.64*     %r19278 <- %r19274, %r19277
	store.8     $8 -> 0[%r19278]
	symaddr.64* %r19279 <- log_2
	load.32     %r19280 <- 0[i]
	add.32      %r19281 <- %r19280, $1
	store.32    %r19281 -> 0[i]
	scast.64    %r19282 <- (32) %r19280
	add.64*     %r19283 <- %r19279, %r19282
	store.8     $8 -> 0[%r19283]
	symaddr.64* %r19284 <- log_2
	load.32     %r19285 <- 0[i]
	add.32      %r19286 <- %r19285, $1
	store.32    %r19286 -> 0[i]
	scast.64    %r19287 <- (32) %r19285
	add.64*     %r19288 <- %r19284, %r19287
	store.8     $8 -> 0[%r19288]
	symaddr.64* %r19289 <- log_2
	load.32     %r19290 <- 0[i]
	add.32      %r19291 <- %r19290, $1
	store.32    %r19291 -> 0[i]
	scast.64    %r19292 <- (32) %r19290
	add.64*     %r19293 <- %r19289, %r19292
	store.8     $8 -> 0[%r19293]
	symaddr.64* %r19294 <- log_2
	load.32     %r19295 <- 0[i]
	add.32      %r19296 <- %r19295, $1
	store.32    %r19296 -> 0[i]
	scast.64    %r19297 <- (32) %r19295
	add.64*     %r19298 <- %r19294, %r19297
	store.8     $8 -> 0[%r19298]
	symaddr.64* %r19299 <- log_2
	load.32     %r19300 <- 0[i]
	add.32      %r19301 <- %r19300, $1
	store.32    %r19301 -> 0[i]
	scast.64    %r19302 <- (32) %r19300
	add.64*     %r19303 <- %r19299, %r19302
	store.8     $8 -> 0[%r19303]
	symaddr.64* %r19304 <- log_2
	load.32     %r19305 <- 0[i]
	add.32      %r19306 <- %r19305, $1
	store.32    %r19306 -> 0[i]
	scast.64    %r19307 <- (32) %r19305
	add.64*     %r19308 <- %r19304, %r19307
	store.8     $8 -> 0[%r19308]
	symaddr.64* %r19309 <- log_2
	load.32     %r19310 <- 0[i]
	add.32      %r19311 <- %r19310, $1
	store.32    %r19311 -> 0[i]
	scast.64    %r19312 <- (32) %r19310
	add.64*     %r19313 <- %r19309, %r19312
	store.8     $8 -> 0[%r19313]
	symaddr.64* %r19314 <- log_2
	load.32     %r19315 <- 0[i]
	add.32      %r19316 <- %r19315, $1
	store.32    %r19316 -> 0[i]
	scast.64    %r19317 <- (32) %r19315
	add.64*     %r19318 <- %r19314, %r19317
	store.8     $8 -> 0[%r19318]
	symaddr.64* %r19319 <- log_2
	load.32     %r19320 <- 0[i]
	add.32      %r19321 <- %r19320, $1
	store.32    %r19321 -> 0[i]
	scast.64    %r19322 <- (32) %r19320
	add.64*     %r19323 <- %r19319, %r19322
	store.8     $8 -> 0[%r19323]
	symaddr.64* %r19324 <- log_2
	load.32     %r19325 <- 0[i]
	add.32      %r19326 <- %r19325, $1
	store.32    %r19326 -> 0[i]
	scast.64    %r19327 <- (32) %r19325
	add.64*     %r19328 <- %r19324, %r19327
	store.8     $8 -> 0[%r19328]
	symaddr.64* %r19329 <- log_2
	load.32     %r19330 <- 0[i]
	add.32      %r19331 <- %r19330, $1
	store.32    %r19331 -> 0[i]
	scast.64    %r19332 <- (32) %r19330
	add.64*     %r19333 <- %r19329, %r19332
	store.8     $8 -> 0[%r19333]
	symaddr.64* %r19334 <- log_2
	load.32     %r19335 <- 0[i]
	add.32      %r19336 <- %r19335, $1
	store.32    %r19336 -> 0[i]
	scast.64    %r19337 <- (32) %r19335
	add.64*     %r19338 <- %r19334, %r19337
	store.8     $8 -> 0[%r19338]
	symaddr.64* %r19339 <- log_2
	load.32     %r19340 <- 0[i]
	add.32      %r19341 <- %r19340, $1
	store.32    %r19341 -> 0[i]
	scast.64    %r19342 <- (32) %r19340
	add.64*     %r19343 <- %r19339, %r19342
	store.8     $8 -> 0[%r19343]
	symaddr.64* %r19344 <- log_2
	load.32     %r19345 <- 0[i]
	add.32      %r19346 <- %r19345, $1
	store.32    %r19346 -> 0[i]
	scast.64    %r19347 <- (32) %r19345
	add.64*     %r19348 <- %r19344, %r19347
	store.8     $8 -> 0[%r19348]
	symaddr.64* %r19349 <- log_2
	load.32     %r19350 <- 0[i]
	add.32      %r19351 <- %r19350, $1
	store.32    %r19351 -> 0[i]
	scast.64    %r19352 <- (32) %r19350
	add.64*     %r19353 <- %r19349, %r19352
	store.8     $8 -> 0[%r19353]
	symaddr.64* %r19354 <- log_2
	load.32     %r19355 <- 0[i]
	add.32      %r19356 <- %r19355, $1
	store.32    %r19356 -> 0[i]
	scast.64    %r19357 <- (32) %r19355
	add.64*     %r19358 <- %r19354, %r19357
	store.8     $8 -> 0[%r19358]
	symaddr.64* %r19359 <- log_2
	load.32     %r19360 <- 0[i]
	add.32      %r19361 <- %r19360, $1
	store.32    %r19361 -> 0[i]
	scast.64    %r19362 <- (32) %r19360
	add.64*     %r19363 <- %r19359, %r19362
	store.8     $8 -> 0[%r19363]
	symaddr.64* %r19364 <- log_2
	load.32     %r19365 <- 0[i]
	add.32      %r19366 <- %r19365, $1
	store.32    %r19366 -> 0[i]
	scast.64    %r19367 <- (32) %r19365
	add.64*     %r19368 <- %r19364, %r19367
	store.8     $8 -> 0[%r19368]
	symaddr.64* %r19369 <- log_2
	load.32     %r19370 <- 0[i]
	add.32      %r19371 <- %r19370, $1
	store.32    %r19371 -> 0[i]
	scast.64    %r19372 <- (32) %r19370
	add.64*     %r19373 <- %r19369, %r19372
	store.8     $8 -> 0[%r19373]
	symaddr.64* %r19374 <- log_2
	load.32     %r19375 <- 0[i]
	add.32      %r19376 <- %r19375, $1
	store.32    %r19376 -> 0[i]
	scast.64    %r19377 <- (32) %r19375
	add.64*     %r19378 <- %r19374, %r19377
	store.8     $8 -> 0[%r19378]
	symaddr.64* %r19379 <- log_2
	load.32     %r19380 <- 0[i]
	add.32      %r19381 <- %r19380, $1
	store.32    %r19381 -> 0[i]
	scast.64    %r19382 <- (32) %r19380
	add.64*     %r19383 <- %r19379, %r19382
	store.8     $8 -> 0[%r19383]
	symaddr.64* %r19384 <- log_2
	load.32     %r19385 <- 0[i]
	add.32      %r19386 <- %r19385, $1
	store.32    %r19386 -> 0[i]
	scast.64    %r19387 <- (32) %r19385
	add.64*     %r19388 <- %r19384, %r19387
	store.8     $8 -> 0[%r19388]
	symaddr.64* %r19389 <- log_2
	load.32     %r19390 <- 0[i]
	add.32      %r19391 <- %r19390, $1
	store.32    %r19391 -> 0[i]
	scast.64    %r19392 <- (32) %r19390
	add.64*     %r19393 <- %r19389, %r19392
	store.8     $8 -> 0[%r19393]
	symaddr.64* %r19394 <- log_2
	load.32     %r19395 <- 0[i]
	add.32      %r19396 <- %r19395, $1
	store.32    %r19396 -> 0[i]
	scast.64    %r19397 <- (32) %r19395
	add.64*     %r19398 <- %r19394, %r19397
	store.8     $8 -> 0[%r19398]
	symaddr.64* %r19399 <- log_2
	load.32     %r19400 <- 0[i]
	add.32      %r19401 <- %r19400, $1
	store.32    %r19401 -> 0[i]
	scast.64    %r19402 <- (32) %r19400
	add.64*     %r19403 <- %r19399, %r19402
	store.8     $8 -> 0[%r19403]
	symaddr.64* %r19404 <- log_2
	load.32     %r19405 <- 0[i]
	add.32      %r19406 <- %r19405, $1
	store.32    %r19406 -> 0[i]
	scast.64    %r19407 <- (32) %r19405
	add.64*     %r19408 <- %r19404, %r19407
	store.8     $8 -> 0[%r19408]
	symaddr.64* %r19409 <- log_2
	load.32     %r19410 <- 0[i]
	add.32      %r19411 <- %r19410, $1
	store.32    %r19411 -> 0[i]
	scast.64    %r19412 <- (32) %r19410
	add.64*     %r19413 <- %r19409, %r19412
	store.8     $8 -> 0[%r19413]
	symaddr.64* %r19414 <- log_2
	load.32     %r19415 <- 0[i]
	add.32      %r19416 <- %r19415, $1
	store.32    %r19416 -> 0[i]
	scast.64    %r19417 <- (32) %r19415
	add.64*     %r19418 <- %r19414, %r19417
	store.8     $8 -> 0[%r19418]
	symaddr.64* %r19419 <- log_2
	load.32     %r19420 <- 0[i]
	add.32      %r19421 <- %r19420, $1
	store.32    %r19421 -> 0[i]
	scast.64    %r19422 <- (32) %r19420
	add.64*     %r19423 <- %r19419, %r19422
	store.8     $8 -> 0[%r19423]
	symaddr.64* %r19424 <- log_2
	load.32     %r19425 <- 0[i]
	add.32      %r19426 <- %r19425, $1
	store.32    %r19426 -> 0[i]
	scast.64    %r19427 <- (32) %r19425
	add.64*     %r19428 <- %r19424, %r19427
	store.8     $8 -> 0[%r19428]
	symaddr.64* %r19429 <- log_2
	load.32     %r19430 <- 0[i]
	add.32      %r19431 <- %r19430, $1
	store.32    %r19431 -> 0[i]
	scast.64    %r19432 <- (32) %r19430
	add.64*     %r19433 <- %r19429, %r19432
	store.8     $8 -> 0[%r19433]
	symaddr.64* %r19434 <- log_2
	load.32     %r19435 <- 0[i]
	add.32      %r19436 <- %r19435, $1
	store.32    %r19436 -> 0[i]
	scast.64    %r19437 <- (32) %r19435
	add.64*     %r19438 <- %r19434, %r19437
	store.8     $8 -> 0[%r19438]
	symaddr.64* %r19439 <- log_2
	load.32     %r19440 <- 0[i]
	add.32      %r19441 <- %r19440, $1
	store.32    %r19441 -> 0[i]
	scast.64    %r19442 <- (32) %r19440
	add.64*     %r19443 <- %r19439, %r19442
	store.8     $8 -> 0[%r19443]
	symaddr.64* %r19444 <- log_2
	load.32     %r19445 <- 0[i]
	add.32      %r19446 <- %r19445, $1
	store.32    %r19446 -> 0[i]
	scast.64    %r19447 <- (32) %r19445
	add.64*     %r19448 <- %r19444, %r19447
	store.8     $8 -> 0[%r19448]
	symaddr.64* %r19449 <- log_2
	load.32     %r19450 <- 0[i]
	add.32      %r19451 <- %r19450, $1
	store.32    %r19451 -> 0[i]
	scast.64    %r19452 <- (32) %r19450
	add.64*     %r19453 <- %r19449, %r19452
	store.8     $8 -> 0[%r19453]
	symaddr.64* %r19454 <- log_2
	load.32     %r19455 <- 0[i]
	add.32      %r19456 <- %r19455, $1
	store.32    %r19456 -> 0[i]
	scast.64    %r19457 <- (32) %r19455
	add.64*     %r19458 <- %r19454, %r19457
	store.8     $8 -> 0[%r19458]
	symaddr.64* %r19459 <- log_2
	load.32     %r19460 <- 0[i]
	add.32      %r19461 <- %r19460, $1
	store.32    %r19461 -> 0[i]
	scast.64    %r19462 <- (32) %r19460
	add.64*     %r19463 <- %r19459, %r19462
	store.8     $8 -> 0[%r19463]
	symaddr.64* %r19464 <- log_2
	load.32     %r19465 <- 0[i]
	add.32      %r19466 <- %r19465, $1
	store.32    %r19466 -> 0[i]
	scast.64    %r19467 <- (32) %r19465
	add.64*     %r19468 <- %r19464, %r19467
	store.8     $8 -> 0[%r19468]
	symaddr.64* %r19469 <- log_2
	load.32     %r19470 <- 0[i]
	add.32      %r19471 <- %r19470, $1
	store.32    %r19471 -> 0[i]
	scast.64    %r19472 <- (32) %r19470
	add.64*     %r19473 <- %r19469, %r19472
	store.8     $8 -> 0[%r19473]
	symaddr.64* %r19474 <- log_2
	load.32     %r19475 <- 0[i]
	add.32      %r19476 <- %r19475, $1
	store.32    %r19476 -> 0[i]
	scast.64    %r19477 <- (32) %r19475
	add.64*     %r19478 <- %r19474, %r19477
	store.8     $8 -> 0[%r19478]
	symaddr.64* %r19479 <- log_2
	load.32     %r19480 <- 0[i]
	add.32      %r19481 <- %r19480, $1
	store.32    %r19481 -> 0[i]
	scast.64    %r19482 <- (32) %r19480
	add.64*     %r19483 <- %r19479, %r19482
	store.8     $8 -> 0[%r19483]
	symaddr.64* %r19484 <- log_2
	load.32     %r19485 <- 0[i]
	add.32      %r19486 <- %r19485, $1
	store.32    %r19486 -> 0[i]
	scast.64    %r19487 <- (32) %r19485
	add.64*     %r19488 <- %r19484, %r19487
	store.8     $8 -> 0[%r19488]
	store.32    $0 -> 0[i]
	symaddr.64* %r19489 <- <anon symbol:0x62d0015885a0>
	symaddr.64* %r19490 <- luaT_typenames
	load.32     %r19491 <- 0[i]
	add.32      %r19492 <- %r19491, $1
	store.32    %r19492 -> 0[i]
	scast.64    %r19493 <- (32) %r19491
	muls.64     %r19494 <- %r19493, $8
	add.64*     %r19495 <- %r19490, %r19494
	store.64*   %r19489 -> 0[%r19495]
	symaddr.64* %r19496 <- <anon symbol:0x62d001588bf8>
	symaddr.64* %r19497 <- luaT_typenames
	load.32     %r19498 <- 0[i]
	add.32      %r19499 <- %r19498, $1
	store.32    %r19499 -> 0[i]
	scast.64    %r19500 <- (32) %r19498
	muls.64     %r19501 <- %r19500, $8
	add.64*     %r19502 <- %r19497, %r19501
	store.64*   %r19496 -> 0[%r19502]
	symaddr.64* %r19503 <- <anon symbol:0x62d001589250>
	symaddr.64* %r19504 <- luaT_typenames
	load.32     %r19505 <- 0[i]
	add.32      %r19506 <- %r19505, $1
	store.32    %r19506 -> 0[i]
	scast.64    %r19507 <- (32) %r19505
	muls.64     %r19508 <- %r19507, $8
	add.64*     %r19509 <- %r19504, %r19508
	store.64*   %r19503 -> 0[%r19509]
	symaddr.64* %r19510 <- <anon symbol:0x62d0015898a8>
	symaddr.64* %r19511 <- luaT_typenames
	load.32     %r19512 <- 0[i]
	add.32      %r19513 <- %r19512, $1
	store.32    %r19513 -> 0[i]
	scast.64    %r19514 <- (32) %r19512
	muls.64     %r19515 <- %r19514, $8
	add.64*     %r19516 <- %r19511, %r19515
	store.64*   %r19510 -> 0[%r19516]
	symaddr.64* %r19517 <- <anon symbol:0x62d001589f00>
	symaddr.64* %r19518 <- luaT_typenames
	load.32     %r19519 <- 0[i]
	add.32      %r19520 <- %r19519, $1
	store.32    %r19520 -> 0[i]
	scast.64    %r19521 <- (32) %r19519
	muls.64     %r19522 <- %r19521, $8
	add.64*     %r19523 <- %r19518, %r19522
	store.64*   %r19517 -> 0[%r19523]
	symaddr.64* %r19524 <- <anon symbol:0x62d00158a558>
	symaddr.64* %r19525 <- luaT_typenames
	load.32     %r19526 <- 0[i]
	add.32      %r19527 <- %r19526, $1
	store.32    %r19527 -> 0[i]
	scast.64    %r19528 <- (32) %r19526
	muls.64     %r19529 <- %r19528, $8
	add.64*     %r19530 <- %r19525, %r19529
	store.64*   %r19524 -> 0[%r19530]
	symaddr.64* %r19531 <- <anon symbol:0x62d00158abb0>
	symaddr.64* %r19532 <- luaT_typenames
	load.32     %r19533 <- 0[i]
	add.32      %r19534 <- %r19533, $1
	store.32    %r19534 -> 0[i]
	scast.64    %r19535 <- (32) %r19533
	muls.64     %r19536 <- %r19535, $8
	add.64*     %r19537 <- %r19532, %r19536
	store.64*   %r19531 -> 0[%r19537]
	symaddr.64* %r19538 <- <anon symbol:0x62d00158b208>
	symaddr.64* %r19539 <- luaT_typenames
	load.32     %r19540 <- 0[i]
	add.32      %r19541 <- %r19540, $1
	store.32    %r19541 -> 0[i]
	scast.64    %r19542 <- (32) %r19540
	muls.64     %r19543 <- %r19542, $8
	add.64*     %r19544 <- %r19539, %r19543
	store.64*   %r19538 -> 0[%r19544]
	symaddr.64* %r19545 <- <anon symbol:0x62d00158b860>
	symaddr.64* %r19546 <- luaT_typenames
	load.32     %r19547 <- 0[i]
	add.32      %r19548 <- %r19547, $1
	store.32    %r19548 -> 0[i]
	scast.64    %r19549 <- (32) %r19547
	muls.64     %r19550 <- %r19549, $8
	add.64*     %r19551 <- %r19546, %r19550
	store.64*   %r19545 -> 0[%r19551]
	symaddr.64* %r19552 <- <anon symbol:0x62d00158beb8>
	symaddr.64* %r19553 <- luaT_typenames
	load.32     %r19554 <- 0[i]
	add.32      %r19555 <- %r19554, $1
	store.32    %r19555 -> 0[i]
	scast.64    %r19556 <- (32) %r19554
	muls.64     %r19557 <- %r19556, $8
	add.64*     %r19558 <- %r19553, %r19557
	store.64*   %r19552 -> 0[%r19558]
	symaddr.64* %r19559 <- <anon symbol:0x62d00158c510>
	symaddr.64* %r19560 <- luaT_typenames
	load.32     %r19561 <- 0[i]
	add.32      %r19562 <- %r19561, $1
	store.32    %r19562 -> 0[i]
	scast.64    %r19563 <- (32) %r19561
	muls.64     %r19564 <- %r19563, $8
	add.64*     %r19565 <- %r19560, %r19564
	store.64*   %r19559 -> 0[%r19565]
	store.32    $0 -> 0[i]
	symaddr.64* %r19566 <- <anon symbol:0x62d00158cb68>
	symaddr.64* %r19567 <- luaT_eventname
	load.32     %r19568 <- 0[i]
	add.32      %r19569 <- %r19568, $1
	store.32    %r19569 -> 0[i]
	scast.64    %r19570 <- (32) %r19568
	muls.64     %r19571 <- %r19570, $8
	add.64*     %r19572 <- %r19567, %r19571
	store.64*   %r19566 -> 0[%r19572]
	symaddr.64* %r19573 <- <anon symbol:0x62d00158d1c0>
	symaddr.64* %r19574 <- luaT_eventname
	load.32     %r19575 <- 0[i]
	add.32      %r19576 <- %r19575, $1
	store.32    %r19576 -> 0[i]
	scast.64    %r19577 <- (32) %r19575
	muls.64     %r19578 <- %r19577, $8
	add.64*     %r19579 <- %r19574, %r19578
	store.64*   %r19573 -> 0[%r19579]
	symaddr.64* %r19580 <- <anon symbol:0x62d00158d818>
	symaddr.64* %r19581 <- luaT_eventname
	load.32     %r19582 <- 0[i]
	add.32      %r19583 <- %r19582, $1
	store.32    %r19583 -> 0[i]
	scast.64    %r19584 <- (32) %r19582
	muls.64     %r19585 <- %r19584, $8
	add.64*     %r19586 <- %r19581, %r19585
	store.64*   %r19580 -> 0[%r19586]
	symaddr.64* %r19587 <- <anon symbol:0x62d00158de70>
	symaddr.64* %r19588 <- luaT_eventname
	load.32     %r19589 <- 0[i]
	add.32      %r19590 <- %r19589, $1
	store.32    %r19590 -> 0[i]
	scast.64    %r19591 <- (32) %r19589
	muls.64     %r19592 <- %r19591, $8
	add.64*     %r19593 <- %r19588, %r19592
	store.64*   %r19587 -> 0[%r19593]
	symaddr.64* %r19594 <- <anon symbol:0x62d00159a500>
	symaddr.64* %r19595 <- luaT_eventname
	load.32     %r19596 <- 0[i]
	add.32      %r19597 <- %r19596, $1
	store.32    %r19597 -> 0[i]
	scast.64    %r19598 <- (32) %r19596
	muls.64     %r19599 <- %r19598, $8
	add.64*     %r19600 <- %r19595, %r19599
	store.64*   %r19594 -> 0[%r19600]
	symaddr.64* %r19601 <- <anon symbol:0x62d00159ab58>
	symaddr.64* %r19602 <- luaT_eventname
	load.32     %r19603 <- 0[i]
	add.32      %r19604 <- %r19603, $1
	store.32    %r19604 -> 0[i]
	scast.64    %r19605 <- (32) %r19603
	muls.64     %r19606 <- %r19605, $8
	add.64*     %r19607 <- %r19602, %r19606
	store.64*   %r19601 -> 0[%r19607]
	symaddr.64* %r19608 <- <anon symbol:0x62d00159b1b0>
	symaddr.64* %r19609 <- luaT_eventname
	load.32     %r19610 <- 0[i]
	add.32      %r19611 <- %r19610, $1
	store.32    %r19611 -> 0[i]
	scast.64    %r19612 <- (32) %r19610
	muls.64     %r19613 <- %r19612, $8
	add.64*     %r19614 <- %r19609, %r19613
	store.64*   %r19608 -> 0[%r19614]
	symaddr.64* %r19615 <- <anon symbol:0x62d00159b808>
	symaddr.64* %r19616 <- luaT_eventname
	load.32     %r19617 <- 0[i]
	add.32      %r19618 <- %r19617, $1
	store.32    %r19618 -> 0[i]
	scast.64    %r19619 <- (32) %r19617
	muls.64     %r19620 <- %r19619, $8
	add.64*     %r19621 <- %r19616, %r19620
	store.64*   %r19615 -> 0[%r19621]
	symaddr.64* %r19622 <- <anon symbol:0x62d00159be60>
	symaddr.64* %r19623 <- luaT_eventname
	load.32     %r19624 <- 0[i]
	add.32      %r19625 <- %r19624, $1
	store.32    %r19625 -> 0[i]
	scast.64    %r19626 <- (32) %r19624
	muls.64     %r19627 <- %r19626, $8
	add.64*     %r19628 <- %r19623, %r19627
	store.64*   %r19622 -> 0[%r19628]
	symaddr.64* %r19629 <- <anon symbol:0x62d00159c4b8>
	symaddr.64* %r19630 <- luaT_eventname
	load.32     %r19631 <- 0[i]
	add.32      %r19632 <- %r19631, $1
	store.32    %r19632 -> 0[i]
	scast.64    %r19633 <- (32) %r19631
	muls.64     %r19634 <- %r19633, $8
	add.64*     %r19635 <- %r19630, %r19634
	store.64*   %r19629 -> 0[%r19635]
	symaddr.64* %r19636 <- <anon symbol:0x62d00159cb10>
	symaddr.64* %r19637 <- luaT_eventname
	load.32     %r19638 <- 0[i]
	add.32      %r19639 <- %r19638, $1
	store.32    %r19639 -> 0[i]
	scast.64    %r19640 <- (32) %r19638
	muls.64     %r19641 <- %r19640, $8
	add.64*     %r19642 <- %r19637, %r19641
	store.64*   %r19636 -> 0[%r19642]
	symaddr.64* %r19643 <- <anon symbol:0x62d00159d168>
	symaddr.64* %r19644 <- luaT_eventname
	load.32     %r19645 <- 0[i]
	add.32      %r19646 <- %r19645, $1
	store.32    %r19646 -> 0[i]
	scast.64    %r19647 <- (32) %r19645
	muls.64     %r19648 <- %r19647, $8
	add.64*     %r19649 <- %r19644, %r19648
	store.64*   %r19643 -> 0[%r19649]
	symaddr.64* %r19650 <- <anon symbol:0x62d00159d7c0>
	symaddr.64* %r19651 <- luaT_eventname
	load.32     %r19652 <- 0[i]
	add.32      %r19653 <- %r19652, $1
	store.32    %r19653 -> 0[i]
	scast.64    %r19654 <- (32) %r19652
	muls.64     %r19655 <- %r19654, $8
	add.64*     %r19656 <- %r19651, %r19655
	store.64*   %r19650 -> 0[%r19656]
	symaddr.64* %r19657 <- <anon symbol:0x62d00159de18>
	symaddr.64* %r19658 <- luaT_eventname
	load.32     %r19659 <- 0[i]
	add.32      %r19660 <- %r19659, $1
	store.32    %r19660 -> 0[i]
	scast.64    %r19661 <- (32) %r19659
	muls.64     %r19662 <- %r19661, $8
	add.64*     %r19663 <- %r19658, %r19662
	store.64*   %r19657 -> 0[%r19663]
	symaddr.64* %r19664 <- <anon symbol:0x62d00159e470>
	symaddr.64* %r19665 <- luaT_eventname
	load.32     %r19666 <- 0[i]
	add.32      %r19667 <- %r19666, $1
	store.32    %r19667 -> 0[i]
	scast.64    %r19668 <- (32) %r19666
	muls.64     %r19669 <- %r19668, $8
	add.64*     %r19670 <- %r19665, %r19669
	store.64*   %r19664 -> 0[%r19670]
	symaddr.64* %r19671 <- <anon symbol:0x62d00159eac8>
	symaddr.64* %r19672 <- luaT_eventname
	load.32     %r19673 <- 0[i]
	add.32      %r19674 <- %r19673, $1
	store.32    %r19674 -> 0[i]
	scast.64    %r19675 <- (32) %r19673
	muls.64     %r19676 <- %r19675, $8
	add.64*     %r19677 <- %r19672, %r19676
	store.64*   %r19671 -> 0[%r19677]
	symaddr.64* %r19678 <- <anon symbol:0x62d00159f120>
	symaddr.64* %r19679 <- luaT_eventname
	load.32     %r19680 <- 0[i]
	add.32      %r19681 <- %r19680, $1
	store.32    %r19681 -> 0[i]
	scast.64    %r19682 <- (32) %r19680
	muls.64     %r19683 <- %r19682, $8
	add.64*     %r19684 <- %r19679, %r19683
	store.64*   %r19678 -> 0[%r19684]
	store.64*   $0 -> 32[dummynode_]
	store.32    $0 -> 24[dummynode_]
	store.64*   $0 -> 16[dummynode_]
	store.64*   $0 -> 0[dummynode_]
	store.32    $0 -> 8[dummynode_]
	store.32    $0 -> 0[i]
	symaddr.64* %r19685 <- luaP_opmodes
	load.32     %r19686 <- 0[i]
	add.32      %r19687 <- %r19686, $1
	store.32    %r19687 -> 0[i]
	scast.64    %r19688 <- (32) %r19686
	add.64*     %r19689 <- %r19685, %r19688
	store.8     $96 -> 0[%r19689]
	symaddr.64* %r19690 <- luaP_opmodes
	load.32     %r19691 <- 0[i]
	add.32      %r19692 <- %r19691, $1
	store.32    %r19692 -> 0[i]
	scast.64    %r19693 <- (32) %r19691
	add.64*     %r19694 <- %r19690, %r19693
	store.8     $113 -> 0[%r19694]
	symaddr.64* %r19695 <- luaP_opmodes
	load.32     %r19696 <- 0[i]
	add.32      %r19697 <- %r19696, $1
	store.32    %r19697 -> 0[i]
	scast.64    %r19698 <- (32) %r19696
	add.64*     %r19699 <- %r19695, %r19698
	store.8     $84 -> 0[%r19699]
	symaddr.64* %r19700 <- luaP_opmodes
	load.32     %r19701 <- 0[i]
	add.32      %r19702 <- %r19701, $1
	store.32    %r19702 -> 0[i]
	scast.64    %r19703 <- (32) %r19701
	add.64*     %r19704 <- %r19700, %r19703
	store.8     $96 -> 0[%r19704]
	symaddr.64* %r19705 <- luaP_opmodes
	load.32     %r19706 <- 0[i]
	add.32      %r19707 <- %r19706, $1
	store.32    %r19707 -> 0[i]
	scast.64    %r19708 <- (32) %r19706
	add.64*     %r19709 <- %r19705, %r19708
	store.8     $80 -> 0[%r19709]
	symaddr.64* %r19710 <- luaP_opmodes
	load.32     %r19711 <- 0[i]
	add.32      %r19712 <- %r19711, $1
	store.32    %r19712 -> 0[i]
	scast.64    %r19713 <- (32) %r19711
	add.64*     %r19714 <- %r19710, %r19713
	store.8     $113 -> 0[%r19714]
	symaddr.64* %r19715 <- luaP_opmodes
	load.32     %r19716 <- 0[i]
	add.32      %r19717 <- %r19716, $1
	store.32    %r19717 -> 0[i]
	scast.64    %r19718 <- (32) %r19716
	add.64*     %r19719 <- %r19715, %r19718
	store.8     $108 -> 0[%r19719]
	symaddr.64* %r19720 <- luaP_opmodes
	load.32     %r19721 <- 0[i]
	add.32      %r19722 <- %r19721, $1
	store.32    %r19722 -> 0[i]
	scast.64    %r19723 <- (32) %r19721
	add.64*     %r19724 <- %r19720, %r19723
	store.8     $49 -> 0[%r19724]
	symaddr.64* %r19725 <- luaP_opmodes
	load.32     %r19726 <- 0[i]
	add.32      %r19727 <- %r19726, $1
	store.32    %r19727 -> 0[i]
	scast.64    %r19728 <- (32) %r19726
	add.64*     %r19729 <- %r19725, %r19728
	store.8     $16 -> 0[%r19729]
	symaddr.64* %r19730 <- luaP_opmodes
	load.32     %r19731 <- 0[i]
	add.32      %r19732 <- %r19731, $1
	store.32    %r19732 -> 0[i]
	scast.64    %r19733 <- (32) %r19731
	add.64*     %r19734 <- %r19730, %r19733
	store.8     $60 -> 0[%r19734]
	symaddr.64* %r19735 <- luaP_opmodes
	load.32     %r19736 <- 0[i]
	add.32      %r19737 <- %r19736, $1
	store.32    %r19737 -> 0[i]
	scast.64    %r19738 <- (32) %r19736
	add.64*     %r19739 <- %r19735, %r19738
	store.8     $84 -> 0[%r19739]
	symaddr.64* %r19740 <- luaP_opmodes
	load.32     %r19741 <- 0[i]
	add.32      %r19742 <- %r19741, $1
	store.32    %r19742 -> 0[i]
	scast.64    %r19743 <- (32) %r19741
	add.64*     %r19744 <- %r19740, %r19743
	store.8     $108 -> 0[%r19744]
	symaddr.64* %r19745 <- luaP_opmodes
	load.32     %r19746 <- 0[i]
	add.32      %r19747 <- %r19746, $1
	store.32    %r19747 -> 0[i]
	scast.64    %r19748 <- (32) %r19746
	add.64*     %r19749 <- %r19745, %r19748
	store.8     $124 -> 0[%r19749]
	symaddr.64* %r19750 <- luaP_opmodes
	load.32     %r19751 <- 0[i]
	add.32      %r19752 <- %r19751, $1
	store.32    %r19752 -> 0[i]
	scast.64    %r19753 <- (32) %r19751
	add.64*     %r19754 <- %r19750, %r19753
	store.8     $124 -> 0[%r19754]
	symaddr.64* %r19755 <- luaP_opmodes
	load.32     %r19756 <- 0[i]
	add.32      %r19757 <- %r19756, $1
	store.32    %r19757 -> 0[i]
	scast.64    %r19758 <- (32) %r19756
	add.64*     %r19759 <- %r19755, %r19758
	store.8     $124 -> 0[%r19759]
	symaddr.64* %r19760 <- luaP_opmodes
	load.32     %r19761 <- 0[i]
	add.32      %r19762 <- %r19761, $1
	store.32    %r19762 -> 0[i]
	scast.64    %r19763 <- (32) %r19761
	add.64*     %r19764 <- %r19760, %r19763
	store.8     $124 -> 0[%r19764]
	symaddr.64* %r19765 <- luaP_opmodes
	load.32     %r19766 <- 0[i]
	add.32      %r19767 <- %r19766, $1
	store.32    %r19767 -> 0[i]
	scast.64    %r19768 <- (32) %r19766
	add.64*     %r19769 <- %r19765, %r19768
	store.8     $124 -> 0[%r19769]
	symaddr.64* %r19770 <- luaP_opmodes
	load.32     %r19771 <- 0[i]
	add.32      %r19772 <- %r19771, $1
	store.32    %r19772 -> 0[i]
	scast.64    %r19773 <- (32) %r19771
	add.64*     %r19774 <- %r19770, %r19773
	store.8     $124 -> 0[%r19774]
	symaddr.64* %r19775 <- luaP_opmodes
	load.32     %r19776 <- 0[i]
	add.32      %r19777 <- %r19776, $1
	store.32    %r19777 -> 0[i]
	scast.64    %r19778 <- (32) %r19776
	add.64*     %r19779 <- %r19775, %r19778
	store.8     $96 -> 0[%r19779]
	symaddr.64* %r19780 <- luaP_opmodes
	load.32     %r19781 <- 0[i]
	add.32      %r19782 <- %r19781, $1
	store.32    %r19782 -> 0[i]
	scast.64    %r19783 <- (32) %r19781
	add.64*     %r19784 <- %r19780, %r19783
	store.8     $96 -> 0[%r19784]
	symaddr.64* %r19785 <- luaP_opmodes
	load.32     %r19786 <- 0[i]
	add.32      %r19787 <- %r19786, $1
	store.32    %r19787 -> 0[i]
	scast.64    %r19788 <- (32) %r19786
	add.64*     %r19789 <- %r19785, %r19788
	store.8     $96 -> 0[%r19789]
	symaddr.64* %r19790 <- luaP_opmodes
	load.32     %r19791 <- 0[i]
	add.32      %r19792 <- %r19791, $1
	store.32    %r19792 -> 0[i]
	scast.64    %r19793 <- (32) %r19791
	add.64*     %r19794 <- %r19790, %r19793
	store.8     $104 -> 0[%r19794]
	symaddr.64* %r19795 <- luaP_opmodes
	load.32     %r19796 <- 0[i]
	add.32      %r19797 <- %r19796, $1
	store.32    %r19797 -> 0[i]
	scast.64    %r19798 <- (32) %r19796
	add.64*     %r19799 <- %r19795, %r19798
	store.8     $34 -> 0[%r19799]
	symaddr.64* %r19800 <- luaP_opmodes
	load.32     %r19801 <- 0[i]
	add.32      %r19802 <- %r19801, $1
	store.32    %r19802 -> 0[i]
	scast.64    %r19803 <- (32) %r19801
	add.64*     %r19804 <- %r19800, %r19803
	store.8     $188 -> 0[%r19804]
	symaddr.64* %r19805 <- luaP_opmodes
	load.32     %r19806 <- 0[i]
	add.32      %r19807 <- %r19806, $1
	store.32    %r19807 -> 0[i]
	scast.64    %r19808 <- (32) %r19806
	add.64*     %r19809 <- %r19805, %r19808
	store.8     $188 -> 0[%r19809]
	symaddr.64* %r19810 <- luaP_opmodes
	load.32     %r19811 <- 0[i]
	add.32      %r19812 <- %r19811, $1
	store.32    %r19812 -> 0[i]
	scast.64    %r19813 <- (32) %r19811
	add.64*     %r19814 <- %r19810, %r19813
	store.8     $188 -> 0[%r19814]
	symaddr.64* %r19815 <- luaP_opmodes
	load.32     %r19816 <- 0[i]
	add.32      %r19817 <- %r19816, $1
	store.32    %r19817 -> 0[i]
	scast.64    %r19818 <- (32) %r19816
	add.64*     %r19819 <- %r19815, %r19818
	store.8     $228 -> 0[%r19819]
	symaddr.64* %r19820 <- luaP_opmodes
	load.32     %r19821 <- 0[i]
	add.32      %r19822 <- %r19821, $1
	store.32    %r19822 -> 0[i]
	scast.64    %r19823 <- (32) %r19821
	add.64*     %r19824 <- %r19820, %r19823
	store.8     $228 -> 0[%r19824]
	symaddr.64* %r19825 <- luaP_opmodes
	load.32     %r19826 <- 0[i]
	add.32      %r19827 <- %r19826, $1
	store.32    %r19827 -> 0[i]
	scast.64    %r19828 <- (32) %r19826
	add.64*     %r19829 <- %r19825, %r19828
	store.8     $84 -> 0[%r19829]
	symaddr.64* %r19830 <- luaP_opmodes
	load.32     %r19831 <- 0[i]
	add.32      %r19832 <- %r19831, $1
	store.32    %r19832 -> 0[i]
	scast.64    %r19833 <- (32) %r19831
	add.64*     %r19834 <- %r19830, %r19833
	store.8     $84 -> 0[%r19834]
	symaddr.64* %r19835 <- luaP_opmodes
	load.32     %r19836 <- 0[i]
	add.32      %r19837 <- %r19836, $1
	store.32    %r19837 -> 0[i]
	scast.64    %r19838 <- (32) %r19836
	add.64*     %r19839 <- %r19835, %r19838
	store.8     $16 -> 0[%r19839]
	symaddr.64* %r19840 <- luaP_opmodes
	load.32     %r19841 <- 0[i]
	add.32      %r19842 <- %r19841, $1
	store.32    %r19842 -> 0[i]
	scast.64    %r19843 <- (32) %r19841
	add.64*     %r19844 <- %r19840, %r19843
	store.8     $98 -> 0[%r19844]
	symaddr.64* %r19845 <- luaP_opmodes
	load.32     %r19846 <- 0[i]
	add.32      %r19847 <- %r19846, $1
	store.32    %r19847 -> 0[i]
	scast.64    %r19848 <- (32) %r19846
	add.64*     %r19849 <- %r19845, %r19848
	store.8     $98 -> 0[%r19849]
	symaddr.64* %r19850 <- luaP_opmodes
	load.32     %r19851 <- 0[i]
	add.32      %r19852 <- %r19851, $1
	store.32    %r19852 -> 0[i]
	scast.64    %r19853 <- (32) %r19851
	add.64*     %r19854 <- %r19850, %r19853
	store.8     $132 -> 0[%r19854]
	symaddr.64* %r19855 <- luaP_opmodes
	load.32     %r19856 <- 0[i]
	add.32      %r19857 <- %r19856, $1
	store.32    %r19857 -> 0[i]
	scast.64    %r19858 <- (32) %r19856
	add.64*     %r19859 <- %r19855, %r19858
	store.8     $20 -> 0[%r19859]
	symaddr.64* %r19860 <- luaP_opmodes
	load.32     %r19861 <- 0[i]
	add.32      %r19862 <- %r19861, $1
	store.32    %r19862 -> 0[i]
	scast.64    %r19863 <- (32) %r19861
	add.64*     %r19864 <- %r19860, %r19863
	store.8     $0 -> 0[%r19864]
	symaddr.64* %r19865 <- luaP_opmodes
	load.32     %r19866 <- 0[i]
	add.32      %r19867 <- %r19866, $1
	store.32    %r19867 -> 0[i]
	scast.64    %r19868 <- (32) %r19866
	add.64*     %r19869 <- %r19865, %r19868
	store.8     $81 -> 0[%r19869]
	symaddr.64* %r19870 <- luaP_opmodes
	load.32     %r19871 <- 0[i]
	add.32      %r19872 <- %r19871, $1
	store.32    %r19872 -> 0[i]
	scast.64    %r19873 <- (32) %r19871
	add.64*     %r19874 <- %r19870, %r19873
	store.8     $80 -> 0[%r19874]
	store.32    $0 -> 0[i]
	symaddr.64* %r19875 <- <anon symbol:0x62d001594c98>
	symaddr.64* %r19876 <- luaX_tokens
	load.32     %r19877 <- 0[i]
	add.32      %r19878 <- %r19877, $1
	store.32    %r19878 -> 0[i]
	scast.64    %r19879 <- (32) %r19877
	muls.64     %r19880 <- %r19879, $8
	add.64*     %r19881 <- %r19876, %r19880
	store.64*   %r19875 -> 0[%r19881]
	symaddr.64* %r19882 <- <anon symbol:0x62d0015952f0>
	symaddr.64* %r19883 <- luaX_tokens
	load.32     %r19884 <- 0[i]
	add.32      %r19885 <- %r19884, $1
	store.32    %r19885 -> 0[i]
	scast.64    %r19886 <- (32) %r19884
	muls.64     %r19887 <- %r19886, $8
	add.64*     %r19888 <- %r19883, %r19887
	store.64*   %r19882 -> 0[%r19888]
	symaddr.64* %r19889 <- <anon symbol:0x62d001595948>
	symaddr.64* %r19890 <- luaX_tokens
	load.32     %r19891 <- 0[i]
	add.32      %r19892 <- %r19891, $1
	store.32    %r19892 -> 0[i]
	scast.64    %r19893 <- (32) %r19891
	muls.64     %r19894 <- %r19893, $8
	add.64*     %r19895 <- %r19890, %r19894
	store.64*   %r19889 -> 0[%r19895]
	symaddr.64* %r19896 <- <anon symbol:0x62d001595fa0>
	symaddr.64* %r19897 <- luaX_tokens
	load.32     %r19898 <- 0[i]
	add.32      %r19899 <- %r19898, $1
	store.32    %r19899 -> 0[i]
	scast.64    %r19900 <- (32) %r19898
	muls.64     %r19901 <- %r19900, $8
	add.64*     %r19902 <- %r19897, %r19901
	store.64*   %r19896 -> 0[%r19902]
	symaddr.64* %r19903 <- <anon symbol:0x62d0015965f8>
	symaddr.64* %r19904 <- luaX_tokens
	load.32     %r19905 <- 0[i]
	add.32      %r19906 <- %r19905, $1
	store.32    %r19906 -> 0[i]
	scast.64    %r19907 <- (32) %r19905
	muls.64     %r19908 <- %r19907, $8
	add.64*     %r19909 <- %r19904, %r19908
	store.64*   %r19903 -> 0[%r19909]
	symaddr.64* %r19910 <- <anon symbol:0x62d001596c50>
	symaddr.64* %r19911 <- luaX_tokens
	load.32     %r19912 <- 0[i]
	add.32      %r19913 <- %r19912, $1
	store.32    %r19913 -> 0[i]
	scast.64    %r19914 <- (32) %r19912
	muls.64     %r19915 <- %r19914, $8
	add.64*     %r19916 <- %r19911, %r19915
	store.64*   %r19910 -> 0[%r19916]
	symaddr.64* %r19917 <- <anon symbol:0x62d0015972a8>
	symaddr.64* %r19918 <- luaX_tokens
	load.32     %r19919 <- 0[i]
	add.32      %r19920 <- %r19919, $1
	store.32    %r19920 -> 0[i]
	scast.64    %r19921 <- (32) %r19919
	muls.64     %r19922 <- %r19921, $8
	add.64*     %r19923 <- %r19918, %r19922
	store.64*   %r19917 -> 0[%r19923]
	symaddr.64* %r19924 <- <anon symbol:0x62d001597900>
	symaddr.64* %r19925 <- luaX_tokens
	load.32     %r19926 <- 0[i]
	add.32      %r19927 <- %r19926, $1
	store.32    %r19927 -> 0[i]
	scast.64    %r19928 <- (32) %r19926
	muls.64     %r19929 <- %r19928, $8
	add.64*     %r19930 <- %r19925, %r19929
	store.64*   %r19924 -> 0[%r19930]
	symaddr.64* %r19931 <- <anon symbol:0x62d001597f58>
	symaddr.64* %r19932 <- luaX_tokens
	load.32     %r19933 <- 0[i]
	add.32      %r19934 <- %r19933, $1
	store.32    %r19934 -> 0[i]
	scast.64    %r19935 <- (32) %r19933
	muls.64     %r19936 <- %r19935, $8
	add.64*     %r19937 <- %r19932, %r19936
	store.64*   %r19931 -> 0[%r19937]
	symaddr.64* %r19938 <- <anon symbol:0x62d0015b85e8>
	symaddr.64* %r19939 <- luaX_tokens
	load.32     %r19940 <- 0[i]
	add.32      %r19941 <- %r19940, $1
	store.32    %r19941 -> 0[i]
	scast.64    %r19942 <- (32) %r19940
	muls.64     %r19943 <- %r19942, $8
	add.64*     %r19944 <- %r19939, %r19943
	store.64*   %r19938 -> 0[%r19944]
	symaddr.64* %r19945 <- <anon symbol:0x62d0015b8c40>
	symaddr.64* %r19946 <- luaX_tokens
	load.32     %r19947 <- 0[i]
	add.32      %r19948 <- %r19947, $1
	store.32    %r19948 -> 0[i]
	scast.64    %r19949 <- (32) %r19947
	muls.64     %r19950 <- %r19949, $8
	add.64*     %r19951 <- %r19946, %r19950
	store.64*   %r19945 -> 0[%r19951]
	symaddr.64* %r19952 <- <anon symbol:0x62d0015b9298>
	symaddr.64* %r19953 <- luaX_tokens
	load.32     %r19954 <- 0[i]
	add.32      %r19955 <- %r19954, $1
	store.32    %r19955 -> 0[i]
	scast.64    %r19956 <- (32) %r19954
	muls.64     %r19957 <- %r19956, $8
	add.64*     %r19958 <- %r19953, %r19957
	store.64*   %r19952 -> 0[%r19958]
	symaddr.64* %r19959 <- <anon symbol:0x62d0015b98f0>
	symaddr.64* %r19960 <- luaX_tokens
	load.32     %r19961 <- 0[i]
	add.32      %r19962 <- %r19961, $1
	store.32    %r19962 -> 0[i]
	scast.64    %r19963 <- (32) %r19961
	muls.64     %r19964 <- %r19963, $8
	add.64*     %r19965 <- %r19960, %r19964
	store.64*   %r19959 -> 0[%r19965]
	symaddr.64* %r19966 <- <anon symbol:0x62d0015b9f48>
	symaddr.64* %r19967 <- luaX_tokens
	load.32     %r19968 <- 0[i]
	add.32      %r19969 <- %r19968, $1
	store.32    %r19969 -> 0[i]
	scast.64    %r19970 <- (32) %r19968
	muls.64     %r19971 <- %r19970, $8
	add.64*     %r19972 <- %r19967, %r19971
	store.64*   %r19966 -> 0[%r19972]
	symaddr.64* %r19973 <- <anon symbol:0x62d0015ba5a0>
	symaddr.64* %r19974 <- luaX_tokens
	load.32     %r19975 <- 0[i]
	add.32      %r19976 <- %r19975, $1
	store.32    %r19976 -> 0[i]
	scast.64    %r19977 <- (32) %r19975
	muls.64     %r19978 <- %r19977, $8
	add.64*     %r19979 <- %r19974, %r19978
	store.64*   %r19973 -> 0[%r19979]
	symaddr.64* %r19980 <- <anon symbol:0x62d0015babf8>
	symaddr.64* %r19981 <- luaX_tokens
	load.32     %r19982 <- 0[i]
	add.32      %r19983 <- %r19982, $1
	store.32    %r19983 -> 0[i]
	scast.64    %r19984 <- (32) %r19982
	muls.64     %r19985 <- %r19984, $8
	add.64*     %r19986 <- %r19981, %r19985
	store.64*   %r19980 -> 0[%r19986]
	symaddr.64* %r19987 <- <anon symbol:0x62d0015bb250>
	symaddr.64* %r19988 <- luaX_tokens
	load.32     %r19989 <- 0[i]
	add.32      %r19990 <- %r19989, $1
	store.32    %r19990 -> 0[i]
	scast.64    %r19991 <- (32) %r19989
	muls.64     %r19992 <- %r19991, $8
	add.64*     %r19993 <- %r19988, %r19992
	store.64*   %r19987 -> 0[%r19993]
	symaddr.64* %r19994 <- <anon symbol:0x62d0015bb8a8>
	symaddr.64* %r19995 <- luaX_tokens
	load.32     %r19996 <- 0[i]
	add.32      %r19997 <- %r19996, $1
	store.32    %r19997 -> 0[i]
	scast.64    %r19998 <- (32) %r19996
	muls.64     %r19999 <- %r19998, $8
	add.64*     %r20000 <- %r19995, %r19999
	store.64*   %r19994 -> 0[%r20000]
	symaddr.64* %r20001 <- <anon symbol:0x62d0015bbf00>
	symaddr.64* %r20002 <- luaX_tokens
	load.32     %r20003 <- 0[i]
	add.32      %r20004 <- %r20003, $1
	store.32    %r20004 -> 0[i]
	scast.64    %r20005 <- (32) %r20003
	muls.64     %r20006 <- %r20005, $8
	add.64*     %r20007 <- %r20002, %r20006
	store.64*   %r20001 -> 0[%r20007]
	symaddr.64* %r20008 <- <anon symbol:0x62d0015bc558>
	symaddr.64* %r20009 <- luaX_tokens
	load.32     %r20010 <- 0[i]
	add.32      %r20011 <- %r20010, $1
	store.32    %r20011 -> 0[i]
	scast.64    %r20012 <- (32) %r20010
	muls.64     %r20013 <- %r20012, $8
	add.64*     %r20014 <- %r20009, %r20013
	store.64*   %r20008 -> 0[%r20014]
	symaddr.64* %r20015 <- <anon symbol:0x62d0015bcbb0>
	symaddr.64* %r20016 <- luaX_tokens
	load.32     %r20017 <- 0[i]
	add.32      %r20018 <- %r20017, $1
	store.32    %r20018 -> 0[i]
	scast.64    %r20019 <- (32) %r20017
	muls.64     %r20020 <- %r20019, $8
	add.64*     %r20021 <- %r20016, %r20020
	store.64*   %r20015 -> 0[%r20021]
	symaddr.64* %r20022 <- <anon symbol:0x62d0015bd208>
	symaddr.64* %r20023 <- luaX_tokens
	load.32     %r20024 <- 0[i]
	add.32      %r20025 <- %r20024, $1
	store.32    %r20025 -> 0[i]
	scast.64    %r20026 <- (32) %r20024
	muls.64     %r20027 <- %r20026, $8
	add.64*     %r20028 <- %r20023, %r20027
	store.64*   %r20022 -> 0[%r20028]
	symaddr.64* %r20029 <- <anon symbol:0x62d0015bd860>
	symaddr.64* %r20030 <- luaX_tokens
	load.32     %r20031 <- 0[i]
	add.32      %r20032 <- %r20031, $1
	store.32    %r20032 -> 0[i]
	scast.64    %r20033 <- (32) %r20031
	muls.64     %r20034 <- %r20033, $8
	add.64*     %r20035 <- %r20030, %r20034
	store.64*   %r20029 -> 0[%r20035]
	symaddr.64* %r20036 <- <anon symbol:0x62d0015bdeb8>
	symaddr.64* %r20037 <- luaX_tokens
	load.32     %r20038 <- 0[i]
	add.32      %r20039 <- %r20038, $1
	store.32    %r20039 -> 0[i]
	scast.64    %r20040 <- (32) %r20038
	muls.64     %r20041 <- %r20040, $8
	add.64*     %r20042 <- %r20037, %r20041
	store.64*   %r20036 -> 0[%r20042]
	symaddr.64* %r20043 <- <anon symbol:0x62d0015be510>
	symaddr.64* %r20044 <- luaX_tokens
	load.32     %r20045 <- 0[i]
	add.32      %r20046 <- %r20045, $1
	store.32    %r20046 -> 0[i]
	scast.64    %r20047 <- (32) %r20045
	muls.64     %r20048 <- %r20047, $8
	add.64*     %r20049 <- %r20044, %r20048
	store.64*   %r20043 -> 0[%r20049]
	symaddr.64* %r20050 <- <anon symbol:0x62d0015beb68>
	symaddr.64* %r20051 <- luaX_tokens
	load.32     %r20052 <- 0[i]
	add.32      %r20053 <- %r20052, $1
	store.32    %r20053 -> 0[i]
	scast.64    %r20054 <- (32) %r20052
	muls.64     %r20055 <- %r20054, $8
	add.64*     %r20056 <- %r20051, %r20055
	store.64*   %r20050 -> 0[%r20056]
	symaddr.64* %r20057 <- <anon symbol:0x62d0015bf1c0>
	symaddr.64* %r20058 <- luaX_tokens
	load.32     %r20059 <- 0[i]
	add.32      %r20060 <- %r20059, $1
	store.32    %r20060 -> 0[i]
	scast.64    %r20061 <- (32) %r20059
	muls.64     %r20062 <- %r20061, $8
	add.64*     %r20063 <- %r20058, %r20062
	store.64*   %r20057 -> 0[%r20063]
	symaddr.64* %r20064 <- <anon symbol:0x62d0015bf818>
	symaddr.64* %r20065 <- luaX_tokens
	load.32     %r20066 <- 0[i]
	add.32      %r20067 <- %r20066, $1
	store.32    %r20067 -> 0[i]
	scast.64    %r20068 <- (32) %r20066
	muls.64     %r20069 <- %r20068, $8
	add.64*     %r20070 <- %r20065, %r20069
	store.64*   %r20064 -> 0[%r20070]
	symaddr.64* %r20071 <- <anon symbol:0x62d0015bfe70>
	symaddr.64* %r20072 <- luaX_tokens
	load.32     %r20073 <- 0[i]
	add.32      %r20074 <- %r20073, $1
	store.32    %r20074 -> 0[i]
	scast.64    %r20075 <- (32) %r20073
	muls.64     %r20076 <- %r20075, $8
	add.64*     %r20077 <- %r20072, %r20076
	store.64*   %r20071 -> 0[%r20077]
	symaddr.64* %r20078 <- <anon symbol:0x62d0015ae500>
	symaddr.64* %r20079 <- luaX_tokens
	load.32     %r20080 <- 0[i]
	add.32      %r20081 <- %r20080, $1
	store.32    %r20081 -> 0[i]
	scast.64    %r20082 <- (32) %r20080
	muls.64     %r20083 <- %r20082, $8
	add.64*     %r20084 <- %r20079, %r20083
	store.64*   %r20078 -> 0[%r20084]
	symaddr.64* %r20085 <- <anon symbol:0x62d0015aeb58>
	symaddr.64* %r20086 <- luaX_tokens
	load.32     %r20087 <- 0[i]
	add.32      %r20088 <- %r20087, $1
	store.32    %r20088 -> 0[i]
	scast.64    %r20089 <- (32) %r20087
	muls.64     %r20090 <- %r20089, $8
	add.64*     %r20091 <- %r20086, %r20090
	store.64*   %r20085 -> 0[%r20091]
	symaddr.64* %r20092 <- luaX_tokens
	load.32     %r20093 <- 0[i]
	add.32      %r20094 <- %r20093, $1
	store.32    %r20094 -> 0[i]
	scast.64    %r20095 <- (32) %r20093
	muls.64     %r20096 <- %r20095, $8
	add.64*     %r20097 <- %r20092, %r20096
	store.64*   $0 -> 0[%r20097]
	store.32    $0 -> 0[i]
	symaddr.64* %r20098 <- priority
	load.32     %r20099 <- 0[i]
	scast.64    %r20100 <- (32) %r20099
	muls.64     %r20101 <- %r20100, $2
	add.64*     %r20102 <- %r20098, %r20101
	store.8     $6 -> 0[%r20102]
	symaddr.64* %r20103 <- priority
	load.32     %r20104 <- 0[i]
	add.32      %r20105 <- %r20104, $1
	store.32    %r20105 -> 0[i]
	scast.64    %r20106 <- (32) %r20104
	muls.64     %r20107 <- %r20106, $2
	add.64*     %r20108 <- %r20103, %r20107
	store.8     $6 -> 1[%r20108]
	symaddr.64* %r20109 <- priority
	load.32     %r20110 <- 0[i]
	scast.64    %r20111 <- (32) %r20110
	muls.64     %r20112 <- %r20111, $2
	add.64*     %r20113 <- %r20109, %r20112
	store.8     $6 -> 0[%r20113]
	symaddr.64* %r20114 <- priority
	load.32     %r20115 <- 0[i]
	add.32      %r20116 <- %r20115, $1
	store.32    %r20116 -> 0[i]
	scast.64    %r20117 <- (32) %r20115
	muls.64     %r20118 <- %r20117, $2
	add.64*     %r20119 <- %r20114, %r20118
	store.8     $6 -> 1[%r20119]
	symaddr.64* %r20120 <- priority
	load.32     %r20121 <- 0[i]
	scast.64    %r20122 <- (32) %r20121
	muls.64     %r20123 <- %r20122, $2
	add.64*     %r20124 <- %r20120, %r20123
	store.8     $7 -> 0[%r20124]
	symaddr.64* %r20125 <- priority
	load.32     %r20126 <- 0[i]
	add.32      %r20127 <- %r20126, $1
	store.32    %r20127 -> 0[i]
	scast.64    %r20128 <- (32) %r20126
	muls.64     %r20129 <- %r20128, $2
	add.64*     %r20130 <- %r20125, %r20129
	store.8     $7 -> 1[%r20130]
	symaddr.64* %r20131 <- priority
	load.32     %r20132 <- 0[i]
	scast.64    %r20133 <- (32) %r20132
	muls.64     %r20134 <- %r20133, $2
	add.64*     %r20135 <- %r20131, %r20134
	store.8     $7 -> 0[%r20135]
	symaddr.64* %r20136 <- priority
	load.32     %r20137 <- 0[i]
	add.32      %r20138 <- %r20137, $1
	store.32    %r20138 -> 0[i]
	scast.64    %r20139 <- (32) %r20137
	muls.64     %r20140 <- %r20139, $2
	add.64*     %r20141 <- %r20136, %r20140
	store.8     $7 -> 1[%r20141]
	symaddr.64* %r20142 <- priority
	load.32     %r20143 <- 0[i]
	scast.64    %r20144 <- (32) %r20143
	muls.64     %r20145 <- %r20144, $2
	add.64*     %r20146 <- %r20142, %r20145
	store.8     $7 -> 0[%r20146]
	symaddr.64* %r20147 <- priority
	load.32     %r20148 <- 0[i]
	add.32      %r20149 <- %r20148, $1
	store.32    %r20149 -> 0[i]
	scast.64    %r20150 <- (32) %r20148
	muls.64     %r20151 <- %r20150, $2
	add.64*     %r20152 <- %r20147, %r20151
	store.8     $7 -> 1[%r20152]
	symaddr.64* %r20153 <- priority
	load.32     %r20154 <- 0[i]
	scast.64    %r20155 <- (32) %r20154
	muls.64     %r20156 <- %r20155, $2
	add.64*     %r20157 <- %r20153, %r20156
	store.8     $10 -> 0[%r20157]
	symaddr.64* %r20158 <- priority
	load.32     %r20159 <- 0[i]
	add.32      %r20160 <- %r20159, $1
	store.32    %r20160 -> 0[i]
	scast.64    %r20161 <- (32) %r20159
	muls.64     %r20162 <- %r20161, $2
	add.64*     %r20163 <- %r20158, %r20162
	store.8     $9 -> 1[%r20163]
	symaddr.64* %r20164 <- priority
	load.32     %r20165 <- 0[i]
	scast.64    %r20166 <- (32) %r20165
	muls.64     %r20167 <- %r20166, $2
	add.64*     %r20168 <- %r20164, %r20167
	store.8     $5 -> 0[%r20168]
	symaddr.64* %r20169 <- priority
	load.32     %r20170 <- 0[i]
	add.32      %r20171 <- %r20170, $1
	store.32    %r20171 -> 0[i]
	scast.64    %r20172 <- (32) %r20170
	muls.64     %r20173 <- %r20172, $2
	add.64*     %r20174 <- %r20169, %r20173
	store.8     $4 -> 1[%r20174]
	symaddr.64* %r20175 <- priority
	load.32     %r20176 <- 0[i]
	scast.64    %r20177 <- (32) %r20176
	muls.64     %r20178 <- %r20177, $2
	add.64*     %r20179 <- %r20175, %r20178
	store.8     $3 -> 0[%r20179]
	symaddr.64* %r20180 <- priority
	load.32     %r20181 <- 0[i]
	add.32      %r20182 <- %r20181, $1
	store.32    %r20182 -> 0[i]
	scast.64    %r20183 <- (32) %r20181
	muls.64     %r20184 <- %r20183, $2
	add.64*     %r20185 <- %r20180, %r20184
	store.8     $3 -> 1[%r20185]
	symaddr.64* %r20186 <- priority
	load.32     %r20187 <- 0[i]
	scast.64    %r20188 <- (32) %r20187
	muls.64     %r20189 <- %r20188, $2
	add.64*     %r20190 <- %r20186, %r20189
	store.8     $3 -> 0[%r20190]
	symaddr.64* %r20191 <- priority
	load.32     %r20192 <- 0[i]
	add.32      %r20193 <- %r20192, $1
	store.32    %r20193 -> 0[i]
	scast.64    %r20194 <- (32) %r20192
	muls.64     %r20195 <- %r20194, $2
	add.64*     %r20196 <- %r20191, %r20195
	store.8     $3 -> 1[%r20196]
	symaddr.64* %r20197 <- priority
	load.32     %r20198 <- 0[i]
	scast.64    %r20199 <- (32) %r20198
	muls.64     %r20200 <- %r20199, $2
	add.64*     %r20201 <- %r20197, %r20200
	store.8     $3 -> 0[%r20201]
	symaddr.64* %r20202 <- priority
	load.32     %r20203 <- 0[i]
	add.32      %r20204 <- %r20203, $1
	store.32    %r20204 -> 0[i]
	scast.64    %r20205 <- (32) %r20203
	muls.64     %r20206 <- %r20205, $2
	add.64*     %r20207 <- %r20202, %r20206
	store.8     $3 -> 1[%r20207]
	symaddr.64* %r20208 <- priority
	load.32     %r20209 <- 0[i]
	scast.64    %r20210 <- (32) %r20209
	muls.64     %r20211 <- %r20210, $2
	add.64*     %r20212 <- %r20208, %r20211
	store.8     $3 -> 0[%r20212]
	symaddr.64* %r20213 <- priority
	load.32     %r20214 <- 0[i]
	add.32      %r20215 <- %r20214, $1
	store.32    %r20215 -> 0[i]
	scast.64    %r20216 <- (32) %r20214
	muls.64     %r20217 <- %r20216, $2
	add.64*     %r20218 <- %r20213, %r20217
	store.8     $3 -> 1[%r20218]
	symaddr.64* %r20219 <- priority
	load.32     %r20220 <- 0[i]
	scast.64    %r20221 <- (32) %r20220
	muls.64     %r20222 <- %r20221, $2
	add.64*     %r20223 <- %r20219, %r20222
	store.8     $3 -> 0[%r20223]
	symaddr.64* %r20224 <- priority
	load.32     %r20225 <- 0[i]
	add.32      %r20226 <- %r20225, $1
	store.32    %r20226 -> 0[i]
	scast.64    %r20227 <- (32) %r20225
	muls.64     %r20228 <- %r20227, $2
	add.64*     %r20229 <- %r20224, %r20228
	store.8     $3 -> 1[%r20229]
	symaddr.64* %r20230 <- priority
	load.32     %r20231 <- 0[i]
	scast.64    %r20232 <- (32) %r20231
	muls.64     %r20233 <- %r20232, $2
	add.64*     %r20234 <- %r20230, %r20233
	store.8     $3 -> 0[%r20234]
	symaddr.64* %r20235 <- priority
	load.32     %r20236 <- 0[i]
	add.32      %r20237 <- %r20236, $1
	store.32    %r20237 -> 0[i]
	scast.64    %r20238 <- (32) %r20236
	muls.64     %r20239 <- %r20238, $2
	add.64*     %r20240 <- %r20235, %r20239
	store.8     $3 -> 1[%r20240]
	symaddr.64* %r20241 <- priority
	load.32     %r20242 <- 0[i]
	scast.64    %r20243 <- (32) %r20242
	muls.64     %r20244 <- %r20243, $2
	add.64*     %r20245 <- %r20241, %r20244
	store.8     $2 -> 0[%r20245]
	symaddr.64* %r20246 <- priority
	load.32     %r20247 <- 0[i]
	add.32      %r20248 <- %r20247, $1
	store.32    %r20248 -> 0[i]
	scast.64    %r20249 <- (32) %r20247
	muls.64     %r20250 <- %r20249, $2
	add.64*     %r20251 <- %r20246, %r20250
	store.8     $2 -> 1[%r20251]
	symaddr.64* %r20252 <- priority
	load.32     %r20253 <- 0[i]
	scast.64    %r20254 <- (32) %r20253
	muls.64     %r20255 <- %r20254, $2
	add.64*     %r20256 <- %r20252, %r20255
	store.8     $1 -> 0[%r20256]
	symaddr.64* %r20257 <- priority
	load.32     %r20258 <- 0[i]
	add.32      %r20259 <- %r20258, $1
	store.32    %r20259 -> 0[i]
	scast.64    %r20260 <- (32) %r20258
	muls.64     %r20261 <- %r20260, $2
	add.64*     %r20262 <- %r20257, %r20261
	store.8     $1 -> 1[%r20262]
	store.32    $0 -> 0[i]
	symaddr.64* %r20263 <- <anon symbol:0x62d0015b45f8>
	symaddr.64* %r20264 <- base_funcs
	load.32     %r20265 <- 0[i]
	scast.64    %r20266 <- (32) %r20265
	muls.64     %r20267 <- %r20266, $16
	add.64*     %r20268 <- %r20264, %r20267
	store.64*   %r20263 -> 0[%r20268]
	symaddr.64* %r20269 <- luaB_assert
	symaddr.64* %r20270 <- base_funcs
	load.32     %r20271 <- 0[i]
	scast.64    %r20272 <- (32) %r20271
	muls.64     %r20273 <- %r20272, $16
	add.64*     %r20274 <- %r20270, %r20273
	store.64*   %r20269 -> 8[%r20274]
	load.32     %r20275 <- 0[i]
	add.32      %r20276 <- %r20275, $1
	store.32    %r20276 -> 0[i]
	symaddr.64* %r20277 <- <anon symbol:0x62d0015b50d8>
	symaddr.64* %r20278 <- base_funcs
	load.32     %r20279 <- 0[i]
	scast.64    %r20280 <- (32) %r20279
	muls.64     %r20281 <- %r20280, $16
	add.64*     %r20282 <- %r20278, %r20281
	store.64*   %r20277 -> 0[%r20282]
	symaddr.64* %r20283 <- luaB_error
	symaddr.64* %r20284 <- base_funcs
	load.32     %r20285 <- 0[i]
	scast.64    %r20286 <- (32) %r20285
	muls.64     %r20287 <- %r20286, $16
	add.64*     %r20288 <- %r20284, %r20287
	store.64*   %r20283 -> 8[%r20288]
	load.32     %r20289 <- 0[i]
	add.32      %r20290 <- %r20289, $1
	store.32    %r20290 -> 0[i]
	symaddr.64* %r20291 <- <anon symbol:0x62d0015b5bb8>
	symaddr.64* %r20292 <- base_funcs
	load.32     %r20293 <- 0[i]
	scast.64    %r20294 <- (32) %r20293
	muls.64     %r20295 <- %r20294, $16
	add.64*     %r20296 <- %r20292, %r20295
	store.64*   %r20291 -> 0[%r20296]
	symaddr.64* %r20297 <- luaB_loadfile
	symaddr.64* %r20298 <- base_funcs
	load.32     %r20299 <- 0[i]
	scast.64    %r20300 <- (32) %r20299
	muls.64     %r20301 <- %r20300, $16
	add.64*     %r20302 <- %r20298, %r20301
	store.64*   %r20297 -> 8[%r20302]
	load.32     %r20303 <- 0[i]
	add.32      %r20304 <- %r20303, $1
	store.32    %r20304 -> 0[i]
	symaddr.64* %r20305 <- <anon symbol:0x62d0015c26d0>
	symaddr.64* %r20306 <- base_funcs
	load.32     %r20307 <- 0[i]
	scast.64    %r20308 <- (32) %r20307
	muls.64     %r20309 <- %r20308, $16
	add.64*     %r20310 <- %r20306, %r20309
	store.64*   %r20305 -> 0[%r20310]
	symaddr.64* %r20311 <- luaB_loadstring
	symaddr.64* %r20312 <- base_funcs
	load.32     %r20313 <- 0[i]
	scast.64    %r20314 <- (32) %r20313
	muls.64     %r20315 <- %r20314, $16
	add.64*     %r20316 <- %r20312, %r20315
	store.64*   %r20311 -> 8[%r20316]
	load.32     %r20317 <- 0[i]
	add.32      %r20318 <- %r20317, $1
	store.32    %r20318 -> 0[i]
	symaddr.64* %r20319 <- <anon symbol:0x62d0015c31b0>
	symaddr.64* %r20320 <- base_funcs
	load.32     %r20321 <- 0[i]
	scast.64    %r20322 <- (32) %r20321
	muls.64     %r20323 <- %r20322, $16
	add.64*     %r20324 <- %r20320, %r20323
	store.64*   %r20319 -> 0[%r20324]
	symaddr.64* %r20325 <- luaB_next
	symaddr.64* %r20326 <- base_funcs
	load.32     %r20327 <- 0[i]
	scast.64    %r20328 <- (32) %r20327
	muls.64     %r20329 <- %r20328, $16
	add.64*     %r20330 <- %r20326, %r20329
	store.64*   %r20325 -> 8[%r20330]
	load.32     %r20331 <- 0[i]
	add.32      %r20332 <- %r20331, $1
	store.32    %r20332 -> 0[i]
	symaddr.64* %r20333 <- <anon symbol:0x62d0015c3c90>
	symaddr.64* %r20334 <- base_funcs
	load.32     %r20335 <- 0[i]
	scast.64    %r20336 <- (32) %r20335
	muls.64     %r20337 <- %r20336, $16
	add.64*     %r20338 <- %r20334, %r20337
	store.64*   %r20333 -> 0[%r20338]
	symaddr.64* %r20339 <- luaB_pcall
	symaddr.64* %r20340 <- base_funcs
	load.32     %r20341 <- 0[i]
	scast.64    %r20342 <- (32) %r20341
	muls.64     %r20343 <- %r20342, $16
	add.64*     %r20344 <- %r20340, %r20343
	store.64*   %r20339 -> 8[%r20344]
	load.32     %r20345 <- 0[i]
	add.32      %r20346 <- %r20345, $1
	store.32    %r20346 -> 0[i]
	symaddr.64* %r20347 <- <anon symbol:0x62d0015c4770>
	symaddr.64* %r20348 <- base_funcs
	load.32     %r20349 <- 0[i]
	scast.64    %r20350 <- (32) %r20349
	muls.64     %r20351 <- %r20350, $16
	add.64*     %r20352 <- %r20348, %r20351
	store.64*   %r20347 -> 0[%r20352]
	symaddr.64* %r20353 <- luaB_rawget
	symaddr.64* %r20354 <- base_funcs
	load.32     %r20355 <- 0[i]
	scast.64    %r20356 <- (32) %r20355
	muls.64     %r20357 <- %r20356, $16
	add.64*     %r20358 <- %r20354, %r20357
	store.64*   %r20353 -> 8[%r20358]
	load.32     %r20359 <- 0[i]
	add.32      %r20360 <- %r20359, $1
	store.32    %r20360 -> 0[i]
	symaddr.64* %r20361 <- <anon symbol:0x62d0015c5250>
	symaddr.64* %r20362 <- base_funcs
	load.32     %r20363 <- 0[i]
	scast.64    %r20364 <- (32) %r20363
	muls.64     %r20365 <- %r20364, $16
	add.64*     %r20366 <- %r20362, %r20365
	store.64*   %r20361 -> 0[%r20366]
	symaddr.64* %r20367 <- luaB_setfenv
	symaddr.64* %r20368 <- base_funcs
	load.32     %r20369 <- 0[i]
	scast.64    %r20370 <- (32) %r20369
	muls.64     %r20371 <- %r20370, $16
	add.64*     %r20372 <- %r20368, %r20371
	store.64*   %r20367 -> 8[%r20372]
	load.32     %r20373 <- 0[i]
	add.32      %r20374 <- %r20373, $1
	store.32    %r20374 -> 0[i]
	symaddr.64* %r20375 <- <anon symbol:0x62d0015c5d30>
	symaddr.64* %r20376 <- base_funcs
	load.32     %r20377 <- 0[i]
	scast.64    %r20378 <- (32) %r20377
	muls.64     %r20379 <- %r20378, $16
	add.64*     %r20380 <- %r20376, %r20379
	store.64*   %r20375 -> 0[%r20380]
	symaddr.64* %r20381 <- luaB_setmetatable
	symaddr.64* %r20382 <- base_funcs
	load.32     %r20383 <- 0[i]
	scast.64    %r20384 <- (32) %r20383
	muls.64     %r20385 <- %r20384, $16
	add.64*     %r20386 <- %r20382, %r20385
	store.64*   %r20381 -> 8[%r20386]
	load.32     %r20387 <- 0[i]
	add.32      %r20388 <- %r20387, $1
	store.32    %r20388 -> 0[i]
	symaddr.64* %r20389 <- <anon symbol:0x62d0015c6810>
	symaddr.64* %r20390 <- base_funcs
	load.32     %r20391 <- 0[i]
	scast.64    %r20392 <- (32) %r20391
	muls.64     %r20393 <- %r20392, $16
	add.64*     %r20394 <- %r20390, %r20393
	store.64*   %r20389 -> 0[%r20394]
	symaddr.64* %r20395 <- luaB_tonumber
	symaddr.64* %r20396 <- base_funcs
	load.32     %r20397 <- 0[i]
	scast.64    %r20398 <- (32) %r20397
	muls.64     %r20399 <- %r20398, $16
	add.64*     %r20400 <- %r20396, %r20399
	store.64*   %r20395 -> 8[%r20400]
	load.32     %r20401 <- 0[i]
	add.32      %r20402 <- %r20401, $1
	store.32    %r20402 -> 0[i]
	symaddr.64* %r20403 <- <anon symbol:0x62d0015c72f0>
	symaddr.64* %r20404 <- base_funcs
	load.32     %r20405 <- 0[i]
	scast.64    %r20406 <- (32) %r20405
	muls.64     %r20407 <- %r20406, $16
	add.64*     %r20408 <- %r20404, %r20407
	store.64*   %r20403 -> 0[%r20408]
	symaddr.64* %r20409 <- luaB_type
	symaddr.64* %r20410 <- base_funcs
	load.32     %r20411 <- 0[i]
	scast.64    %r20412 <- (32) %r20411
	muls.64     %r20413 <- %r20412, $16
	add.64*     %r20414 <- %r20410, %r20413
	store.64*   %r20409 -> 8[%r20414]
	load.32     %r20415 <- 0[i]
	add.32      %r20416 <- %r20415, $1
	store.32    %r20416 -> 0[i]
	symaddr.64* %r20417 <- <anon symbol:0x62d0015c7dd0>
	symaddr.64* %r20418 <- base_funcs
	load.32     %r20419 <- 0[i]
	scast.64    %r20420 <- (32) %r20419
	muls.64     %r20421 <- %r20420, $16
	add.64*     %r20422 <- %r20418, %r20421
	store.64*   %r20417 -> 0[%r20422]
	symaddr.64* %r20423 <- luaB_unpack
	symaddr.64* %r20424 <- base_funcs
	load.32     %r20425 <- 0[i]
	scast.64    %r20426 <- (32) %r20425
	muls.64     %r20427 <- %r20426, $16
	add.64*     %r20428 <- %r20424, %r20427
	store.64*   %r20423 -> 8[%r20428]
	load.32     %r20429 <- 0[i]
	add.32      %r20430 <- %r20429, $1
	store.32    %r20430 -> 0[i]
	symaddr.64* %r20431 <- base_funcs
	load.32     %r20432 <- 0[i]
	scast.64    %r20433 <- (32) %r20432
	muls.64     %r20434 <- %r20433, $16
	add.64*     %r20435 <- %r20431, %r20434
	store.64*   $0 -> 0[%r20435]
	symaddr.64* %r20436 <- base_funcs
	load.32     %r20437 <- 0[i]
	scast.64    %r20438 <- (32) %r20437
	muls.64     %r20439 <- %r20438, $16
	add.64*     %r20440 <- %r20436, %r20439
	store.64*   $0 -> 8[%r20440]
	store.32    $0 -> 0[i]
	symaddr.64* %r20441 <- <anon symbol:0x62d0015c8e20>
	symaddr.64* %r20442 <- tab_funcs
	load.32     %r20443 <- 0[i]
	scast.64    %r20444 <- (32) %r20443
	muls.64     %r20445 <- %r20444, $16
	add.64*     %r20446 <- %r20442, %r20445
	store.64*   %r20441 -> 0[%r20446]
	symaddr.64* %r20447 <- tconcat
	symaddr.64* %r20448 <- tab_funcs
	load.32     %r20449 <- 0[i]
	scast.64    %r20450 <- (32) %r20449
	muls.64     %r20451 <- %r20450, $16
	add.64*     %r20452 <- %r20448, %r20451
	store.64*   %r20447 -> 8[%r20452]
	load.32     %r20453 <- 0[i]
	add.32      %r20454 <- %r20453, $1
	store.32    %r20454 -> 0[i]
	symaddr.64* %r20455 <- <anon symbol:0x62d0015c9900>
	symaddr.64* %r20456 <- tab_funcs
	load.32     %r20457 <- 0[i]
	scast.64    %r20458 <- (32) %r20457
	muls.64     %r20459 <- %r20458, $16
	add.64*     %r20460 <- %r20456, %r20459
	store.64*   %r20455 -> 0[%r20460]
	symaddr.64* %r20461 <- tinsert
	symaddr.64* %r20462 <- tab_funcs
	load.32     %r20463 <- 0[i]
	scast.64    %r20464 <- (32) %r20463
	muls.64     %r20465 <- %r20464, $16
	add.64*     %r20466 <- %r20462, %r20465
	store.64*   %r20461 -> 8[%r20466]
	load.32     %r20467 <- 0[i]
	add.32      %r20468 <- %r20467, $1
	store.32    %r20468 -> 0[i]
	symaddr.64* %r20469 <- <anon symbol:0x62d0015d6418>
	symaddr.64* %r20470 <- tab_funcs
	load.32     %r20471 <- 0[i]
	scast.64    %r20472 <- (32) %r20471
	muls.64     %r20473 <- %r20472, $16
	add.64*     %r20474 <- %r20470, %r20473
	store.64*   %r20469 -> 0[%r20474]
	symaddr.64* %r20475 <- tremove
	symaddr.64* %r20476 <- tab_funcs
	load.32     %r20477 <- 0[i]
	scast.64    %r20478 <- (32) %r20477
	muls.64     %r20479 <- %r20478, $16
	add.64*     %r20480 <- %r20476, %r20479
	store.64*   %r20475 -> 8[%r20480]
	load.32     %r20481 <- 0[i]
	add.32      %r20482 <- %r20481, $1
	store.32    %r20482 -> 0[i]
	symaddr.64* %r20483 <- <anon symbol:0x62d0015d6ef8>
	symaddr.64* %r20484 <- tab_funcs
	load.32     %r20485 <- 0[i]
	scast.64    %r20486 <- (32) %r20485
	muls.64     %r20487 <- %r20486, $16
	add.64*     %r20488 <- %r20484, %r20487
	store.64*   %r20483 -> 0[%r20488]
	symaddr.64* %r20489 <- sort
	symaddr.64* %r20490 <- tab_funcs
	load.32     %r20491 <- 0[i]
	scast.64    %r20492 <- (32) %r20491
	muls.64     %r20493 <- %r20492, $16
	add.64*     %r20494 <- %r20490, %r20493
	store.64*   %r20489 -> 8[%r20494]
	load.32     %r20495 <- 0[i]
	add.32      %r20496 <- %r20495, $1
	store.32    %r20496 -> 0[i]
	symaddr.64* %r20497 <- tab_funcs
	load.32     %r20498 <- 0[i]
	scast.64    %r20499 <- (32) %r20498
	muls.64     %r20500 <- %r20499, $16
	add.64*     %r20501 <- %r20497, %r20500
	store.64*   $0 -> 0[%r20501]
	symaddr.64* %r20502 <- tab_funcs
	load.32     %r20503 <- 0[i]
	scast.64    %r20504 <- (32) %r20503
	muls.64     %r20505 <- %r20504, $16
	add.64*     %r20506 <- %r20502, %r20505
	store.64*   $0 -> 8[%r20506]
	symaddr.64* %r20507 <- <anon symbol:0x62d0015d7f48>
	store.64*   %r20507 -> 0[fnames]
	symaddr.64* %r20508 <- <anon symbol:0x62d0015d85a0>
	store.64*   %r20508 -> 8[fnames]
	store.32    $0 -> 0[i]
	symaddr.64* %r20509 <- <anon symbol:0x62d0015d8bf8>
	symaddr.64* %r20510 <- iolib
	load.32     %r20511 <- 0[i]
	scast.64    %r20512 <- (32) %r20511
	muls.64     %r20513 <- %r20512, $16
	add.64*     %r20514 <- %r20510, %r20513
	store.64*   %r20509 -> 0[%r20514]
	symaddr.64* %r20515 <- io_close
	symaddr.64* %r20516 <- iolib
	load.32     %r20517 <- 0[i]
	scast.64    %r20518 <- (32) %r20517
	muls.64     %r20519 <- %r20518, $16
	add.64*     %r20520 <- %r20516, %r20519
	store.64*   %r20515 -> 8[%r20520]
	load.32     %r20521 <- 0[i]
	add.32      %r20522 <- %r20521, $1
	store.32    %r20522 -> 0[i]
	symaddr.64* %r20523 <- <anon symbol:0x62d0015d96d8>
	symaddr.64* %r20524 <- iolib
	load.32     %r20525 <- 0[i]
	scast.64    %r20526 <- (32) %r20525
	muls.64     %r20527 <- %r20526, $16
	add.64*     %r20528 <- %r20524, %r20527
	store.64*   %r20523 -> 0[%r20528]
	symaddr.64* %r20529 <- io_flush
	symaddr.64* %r20530 <- iolib
	load.32     %r20531 <- 0[i]
	scast.64    %r20532 <- (32) %r20531
	muls.64     %r20533 <- %r20532, $16
	add.64*     %r20534 <- %r20530, %r20533
	store.64*   %r20529 -> 8[%r20534]
	load.32     %r20535 <- 0[i]
	add.32      %r20536 <- %r20535, $1
	store.32    %r20536 -> 0[i]
	symaddr.64* %r20537 <- <anon symbol:0x62d0015da1b8>
	symaddr.64* %r20538 <- iolib
	load.32     %r20539 <- 0[i]
	scast.64    %r20540 <- (32) %r20539
	muls.64     %r20541 <- %r20540, $16
	add.64*     %r20542 <- %r20538, %r20541
	store.64*   %r20537 -> 0[%r20542]
	symaddr.64* %r20543 <- io_input
	symaddr.64* %r20544 <- iolib
	load.32     %r20545 <- 0[i]
	scast.64    %r20546 <- (32) %r20545
	muls.64     %r20547 <- %r20546, $16
	add.64*     %r20548 <- %r20544, %r20547
	store.64*   %r20543 -> 8[%r20548]
	load.32     %r20549 <- 0[i]
	add.32      %r20550 <- %r20549, $1
	store.32    %r20550 -> 0[i]
	symaddr.64* %r20551 <- <anon symbol:0x62d0015dac98>
	symaddr.64* %r20552 <- iolib
	load.32     %r20553 <- 0[i]
	scast.64    %r20554 <- (32) %r20553
	muls.64     %r20555 <- %r20554, $16
	add.64*     %r20556 <- %r20552, %r20555
	store.64*   %r20551 -> 0[%r20556]
	symaddr.64* %r20557 <- io_lines
	symaddr.64* %r20558 <- iolib
	load.32     %r20559 <- 0[i]
	scast.64    %r20560 <- (32) %r20559
	muls.64     %r20561 <- %r20560, $16
	add.64*     %r20562 <- %r20558, %r20561
	store.64*   %r20557 -> 8[%r20562]
	load.32     %r20563 <- 0[i]
	add.32      %r20564 <- %r20563, $1
	store.32    %r20564 -> 0[i]
	symaddr.64* %r20565 <- <anon symbol:0x62d0015db778>
	symaddr.64* %r20566 <- iolib
	load.32     %r20567 <- 0[i]
	scast.64    %r20568 <- (32) %r20567
	muls.64     %r20569 <- %r20568, $16
	add.64*     %r20570 <- %r20566, %r20569
	store.64*   %r20565 -> 0[%r20570]
	symaddr.64* %r20571 <- io_open
	symaddr.64* %r20572 <- iolib
	load.32     %r20573 <- 0[i]
	scast.64    %r20574 <- (32) %r20573
	muls.64     %r20575 <- %r20574, $16
	add.64*     %r20576 <- %r20572, %r20575
	store.64*   %r20571 -> 8[%r20576]
	load.32     %r20577 <- 0[i]
	add.32      %r20578 <- %r20577, $1
	store.32    %r20578 -> 0[i]
	symaddr.64* %r20579 <- <anon symbol:0x62d0015dc258>
	symaddr.64* %r20580 <- iolib
	load.32     %r20581 <- 0[i]
	scast.64    %r20582 <- (32) %r20581
	muls.64     %r20583 <- %r20582, $16
	add.64*     %r20584 <- %r20580, %r20583
	store.64*   %r20579 -> 0[%r20584]
	symaddr.64* %r20585 <- io_output
	symaddr.64* %r20586 <- iolib
	load.32     %r20587 <- 0[i]
	scast.64    %r20588 <- (32) %r20587
	muls.64     %r20589 <- %r20588, $16
	add.64*     %r20590 <- %r20586, %r20589
	store.64*   %r20585 -> 8[%r20590]
	load.32     %r20591 <- 0[i]
	add.32      %r20592 <- %r20591, $1
	store.32    %r20592 -> 0[i]
	symaddr.64* %r20593 <- <anon symbol:0x62d0015dcd38>
	symaddr.64* %r20594 <- iolib
	load.32     %r20595 <- 0[i]
	scast.64    %r20596 <- (32) %r20595
	muls.64     %r20597 <- %r20596, $16
	add.64*     %r20598 <- %r20594, %r20597
	store.64*   %r20593 -> 0[%r20598]
	symaddr.64* %r20599 <- io_read
	symaddr.64* %r20600 <- iolib
	load.32     %r20601 <- 0[i]
	scast.64    %r20602 <- (32) %r20601
	muls.64     %r20603 <- %r20602, $16
	add.64*     %r20604 <- %r20600, %r20603
	store.64*   %r20599 -> 8[%r20604]
	load.32     %r20605 <- 0[i]
	add.32      %r20606 <- %r20605, $1
	store.32    %r20606 -> 0[i]
	symaddr.64* %r20607 <- <anon symbol:0x62d0015dd818>
	symaddr.64* %r20608 <- iolib
	load.32     %r20609 <- 0[i]
	scast.64    %r20610 <- (32) %r20609
	muls.64     %r20611 <- %r20610, $16
	add.64*     %r20612 <- %r20608, %r20611
	store.64*   %r20607 -> 0[%r20612]
	symaddr.64* %r20613 <- io_type
	symaddr.64* %r20614 <- iolib
	load.32     %r20615 <- 0[i]
	scast.64    %r20616 <- (32) %r20615
	muls.64     %r20617 <- %r20616, $16
	add.64*     %r20618 <- %r20614, %r20617
	store.64*   %r20613 -> 8[%r20618]
	load.32     %r20619 <- 0[i]
	add.32      %r20620 <- %r20619, $1
	store.32    %r20620 -> 0[i]
	symaddr.64* %r20621 <- <anon symbol:0x62d0015de2f8>
	symaddr.64* %r20622 <- iolib
	load.32     %r20623 <- 0[i]
	scast.64    %r20624 <- (32) %r20623
	muls.64     %r20625 <- %r20624, $16
	add.64*     %r20626 <- %r20622, %r20625
	store.64*   %r20621 -> 0[%r20626]
	symaddr.64* %r20627 <- io_write
	symaddr.64* %r20628 <- iolib
	load.32     %r20629 <- 0[i]
	scast.64    %r20630 <- (32) %r20629
	muls.64     %r20631 <- %r20630, $16
	add.64*     %r20632 <- %r20628, %r20631
	store.64*   %r20627 -> 8[%r20632]
	load.32     %r20633 <- 0[i]
	add.32      %r20634 <- %r20633, $1
	store.32    %r20634 -> 0[i]
	symaddr.64* %r20635 <- iolib
	load.32     %r20636 <- 0[i]
	scast.64    %r20637 <- (32) %r20636
	muls.64     %r20638 <- %r20637, $16
	add.64*     %r20639 <- %r20635, %r20638
	store.64*   $0 -> 0[%r20639]
	symaddr.64* %r20640 <- iolib
	load.32     %r20641 <- 0[i]
	scast.64    %r20642 <- (32) %r20641
	muls.64     %r20643 <- %r20642, $16
	add.64*     %r20644 <- %r20640, %r20643
	store.64*   $0 -> 8[%r20644]
	store.32    $0 -> 0[i]
	symaddr.64* %r20645 <- <anon symbol:0x62d0015e1380>
	symaddr.64* %r20646 <- flib
	load.32     %r20647 <- 0[i]
	scast.64    %r20648 <- (32) %r20647
	muls.64     %r20649 <- %r20648, $16
	add.64*     %r20650 <- %r20646, %r20649
	store.64*   %r20645 -> 0[%r20650]
	symaddr.64* %r20651 <- io_close
	symaddr.64* %r20652 <- flib
	load.32     %r20653 <- 0[i]
	scast.64    %r20654 <- (32) %r20653
	muls.64     %r20655 <- %r20654, $16
	add.64*     %r20656 <- %r20652, %r20655
	store.64*   %r20651 -> 8[%r20656]
	load.32     %r20657 <- 0[i]
	add.32      %r20658 <- %r20657, $1
	store.32    %r20658 -> 0[i]
	symaddr.64* %r20659 <- <anon symbol:0x62d0015e1e60>
	symaddr.64* %r20660 <- flib
	load.32     %r20661 <- 0[i]
	scast.64    %r20662 <- (32) %r20661
	muls.64     %r20663 <- %r20662, $16
	add.64*     %r20664 <- %r20660, %r20663
	store.64*   %r20659 -> 0[%r20664]
	symaddr.64* %r20665 <- f_flush
	symaddr.64* %r20666 <- flib
	load.32     %r20667 <- 0[i]
	scast.64    %r20668 <- (32) %r20667
	muls.64     %r20669 <- %r20668, $16
	add.64*     %r20670 <- %r20666, %r20669
	store.64*   %r20665 -> 8[%r20670]
	load.32     %r20671 <- 0[i]
	add.32      %r20672 <- %r20671, $1
	store.32    %r20672 -> 0[i]
	symaddr.64* %r20673 <- <anon symbol:0x62d0015e2940>
	symaddr.64* %r20674 <- flib
	load.32     %r20675 <- 0[i]
	scast.64    %r20676 <- (32) %r20675
	muls.64     %r20677 <- %r20676, $16
	add.64*     %r20678 <- %r20674, %r20677
	store.64*   %r20673 -> 0[%r20678]
	symaddr.64* %r20679 <- f_lines
	symaddr.64* %r20680 <- flib
	load.32     %r20681 <- 0[i]
	scast.64    %r20682 <- (32) %r20681
	muls.64     %r20683 <- %r20682, $16
	add.64*     %r20684 <- %r20680, %r20683
	store.64*   %r20679 -> 8[%r20684]
	load.32     %r20685 <- 0[i]
	add.32      %r20686 <- %r20685, $1
	store.32    %r20686 -> 0[i]
	symaddr.64* %r20687 <- <anon symbol:0x62d0015e3420>
	symaddr.64* %r20688 <- flib
	load.32     %r20689 <- 0[i]
	scast.64    %r20690 <- (32) %r20689
	muls.64     %r20691 <- %r20690, $16
	add.64*     %r20692 <- %r20688, %r20691
	store.64*   %r20687 -> 0[%r20692]
	symaddr.64* %r20693 <- f_read
	symaddr.64* %r20694 <- flib
	load.32     %r20695 <- 0[i]
	scast.64    %r20696 <- (32) %r20695
	muls.64     %r20697 <- %r20696, $16
	add.64*     %r20698 <- %r20694, %r20697
	store.64*   %r20693 -> 8[%r20698]
	load.32     %r20699 <- 0[i]
	add.32      %r20700 <- %r20699, $1
	store.32    %r20700 -> 0[i]
	symaddr.64* %r20701 <- <anon symbol:0x62d0015e3f00>
	symaddr.64* %r20702 <- flib
	load.32     %r20703 <- 0[i]
	scast.64    %r20704 <- (32) %r20703
	muls.64     %r20705 <- %r20704, $16
	add.64*     %r20706 <- %r20702, %r20705
	store.64*   %r20701 -> 0[%r20706]
	symaddr.64* %r20707 <- f_write
	symaddr.64* %r20708 <- flib
	load.32     %r20709 <- 0[i]
	scast.64    %r20710 <- (32) %r20709
	muls.64     %r20711 <- %r20710, $16
	add.64*     %r20712 <- %r20708, %r20711
	store.64*   %r20707 -> 8[%r20712]
	load.32     %r20713 <- 0[i]
	add.32      %r20714 <- %r20713, $1
	store.32    %r20714 -> 0[i]
	symaddr.64* %r20715 <- <anon symbol:0x62d0015e49e0>
	symaddr.64* %r20716 <- flib
	load.32     %r20717 <- 0[i]
	scast.64    %r20718 <- (32) %r20717
	muls.64     %r20719 <- %r20718, $16
	add.64*     %r20720 <- %r20716, %r20719
	store.64*   %r20715 -> 0[%r20720]
	symaddr.64* %r20721 <- io_gc
	symaddr.64* %r20722 <- flib
	load.32     %r20723 <- 0[i]
	scast.64    %r20724 <- (32) %r20723
	muls.64     %r20725 <- %r20724, $16
	add.64*     %r20726 <- %r20722, %r20725
	store.64*   %r20721 -> 8[%r20726]
	load.32     %r20727 <- 0[i]
	add.32      %r20728 <- %r20727, $1
	store.32    %r20728 -> 0[i]
	symaddr.64* %r20729 <- flib
	load.32     %r20730 <- 0[i]
	scast.64    %r20731 <- (32) %r20730
	muls.64     %r20732 <- %r20731, $16
	add.64*     %r20733 <- %r20729, %r20732
	store.64*   $0 -> 0[%r20733]
	symaddr.64* %r20734 <- flib
	load.32     %r20735 <- 0[i]
	scast.64    %r20736 <- (32) %r20735
	muls.64     %r20737 <- %r20736, $16
	add.64*     %r20738 <- %r20734, %r20737
	store.64*   $0 -> 8[%r20738]
	store.32    $0 -> 0[i]
	symaddr.64* %r20739 <- <anon symbol:0x62d0015e5a30>
	symaddr.64* %r20740 <- syslib
	load.32     %r20741 <- 0[i]
	scast.64    %r20742 <- (32) %r20741
	muls.64     %r20743 <- %r20742, $16
	add.64*     %r20744 <- %r20740, %r20743
	store.64*   %r20739 -> 0[%r20744]
	symaddr.64* %r20745 <- os_exit
	symaddr.64* %r20746 <- syslib
	load.32     %r20747 <- 0[i]
	scast.64    %r20748 <- (32) %r20747
	muls.64     %r20749 <- %r20748, $16
	add.64*     %r20750 <- %r20746, %r20749
	store.64*   %r20745 -> 8[%r20750]
	load.32     %r20751 <- 0[i]
	add.32      %r20752 <- %r20751, $1
	store.32    %r20752 -> 0[i]
	symaddr.64* %r20753 <- <anon symbol:0x62d0015e6510>
	symaddr.64* %r20754 <- syslib
	load.32     %r20755 <- 0[i]
	scast.64    %r20756 <- (32) %r20755
	muls.64     %r20757 <- %r20756, $16
	add.64*     %r20758 <- %r20754, %r20757
	store.64*   %r20753 -> 0[%r20758]
	symaddr.64* %r20759 <- os_remove
	symaddr.64* %r20760 <- syslib
	load.32     %r20761 <- 0[i]
	scast.64    %r20762 <- (32) %r20761
	muls.64     %r20763 <- %r20762, $16
	add.64*     %r20764 <- %r20760, %r20763
	store.64*   %r20759 -> 8[%r20764]
	load.32     %r20765 <- 0[i]
	add.32      %r20766 <- %r20765, $1
	store.32    %r20766 -> 0[i]
	symaddr.64* %r20767 <- syslib
	load.32     %r20768 <- 0[i]
	scast.64    %r20769 <- (32) %r20768
	muls.64     %r20770 <- %r20769, $16
	add.64*     %r20771 <- %r20767, %r20770
	store.64*   $0 -> 0[%r20771]
	symaddr.64* %r20772 <- syslib
	load.32     %r20773 <- 0[i]
	scast.64    %r20774 <- (32) %r20773
	muls.64     %r20775 <- %r20774, $16
	add.64*     %r20776 <- %r20772, %r20775
	store.64*   $0 -> 8[%r20776]
	store.32    $0 -> 0[i]
	symaddr.64* %r20777 <- <anon symbol:0x62d0015e7560>
	symaddr.64* %r20778 <- strlib
	load.32     %r20779 <- 0[i]
	scast.64    %r20780 <- (32) %r20779
	muls.64     %r20781 <- %r20780, $16
	add.64*     %r20782 <- %r20778, %r20781
	store.64*   %r20777 -> 0[%r20782]
	symaddr.64* %r20783 <- str_byte
	symaddr.64* %r20784 <- strlib
	load.32     %r20785 <- 0[i]
	scast.64    %r20786 <- (32) %r20785
	muls.64     %r20787 <- %r20786, $16
	add.64*     %r20788 <- %r20784, %r20787
	store.64*   %r20783 -> 8[%r20788]
	load.32     %r20789 <- 0[i]
	add.32      %r20790 <- %r20789, $1
	store.32    %r20790 -> 0[i]
	symaddr.64* %r20791 <- <anon symbol:0x62d0015e8040>
	symaddr.64* %r20792 <- strlib
	load.32     %r20793 <- 0[i]
	scast.64    %r20794 <- (32) %r20793
	muls.64     %r20795 <- %r20794, $16
	add.64*     %r20796 <- %r20792, %r20795
	store.64*   %r20791 -> 0[%r20796]
	symaddr.64* %r20797 <- str_char
	symaddr.64* %r20798 <- strlib
	load.32     %r20799 <- 0[i]
	scast.64    %r20800 <- (32) %r20799
	muls.64     %r20801 <- %r20800, $16
	add.64*     %r20802 <- %r20798, %r20801
	store.64*   %r20797 -> 8[%r20802]
	load.32     %r20803 <- 0[i]
	add.32      %r20804 <- %r20803, $1
	store.32    %r20804 -> 0[i]
	symaddr.64* %r20805 <- <anon symbol:0x62d0015f4b58>
	symaddr.64* %r20806 <- strlib
	load.32     %r20807 <- 0[i]
	scast.64    %r20808 <- (32) %r20807
	muls.64     %r20809 <- %r20808, $16
	add.64*     %r20810 <- %r20806, %r20809
	store.64*   %r20805 -> 0[%r20810]
	symaddr.64* %r20811 <- str_find
	symaddr.64* %r20812 <- strlib
	load.32     %r20813 <- 0[i]
	scast.64    %r20814 <- (32) %r20813
	muls.64     %r20815 <- %r20814, $16
	add.64*     %r20816 <- %r20812, %r20815
	store.64*   %r20811 -> 8[%r20816]
	load.32     %r20817 <- 0[i]
	add.32      %r20818 <- %r20817, $1
	store.32    %r20818 -> 0[i]
	symaddr.64* %r20819 <- <anon symbol:0x62d0015f5638>
	symaddr.64* %r20820 <- strlib
	load.32     %r20821 <- 0[i]
	scast.64    %r20822 <- (32) %r20821
	muls.64     %r20823 <- %r20822, $16
	add.64*     %r20824 <- %r20820, %r20823
	store.64*   %r20819 -> 0[%r20824]
	symaddr.64* %r20825 <- str_format
	symaddr.64* %r20826 <- strlib
	load.32     %r20827 <- 0[i]
	scast.64    %r20828 <- (32) %r20827
	muls.64     %r20829 <- %r20828, $16
	add.64*     %r20830 <- %r20826, %r20829
	store.64*   %r20825 -> 8[%r20830]
	load.32     %r20831 <- 0[i]
	add.32      %r20832 <- %r20831, $1
	store.32    %r20832 -> 0[i]
	symaddr.64* %r20833 <- <anon symbol:0x62d0015f6118>
	symaddr.64* %r20834 <- strlib
	load.32     %r20835 <- 0[i]
	scast.64    %r20836 <- (32) %r20835
	muls.64     %r20837 <- %r20836, $16
	add.64*     %r20838 <- %r20834, %r20837
	store.64*   %r20833 -> 0[%r20838]
	symaddr.64* %r20839 <- gmatch
	symaddr.64* %r20840 <- strlib
	load.32     %r20841 <- 0[i]
	scast.64    %r20842 <- (32) %r20841
	muls.64     %r20843 <- %r20842, $16
	add.64*     %r20844 <- %r20840, %r20843
	store.64*   %r20839 -> 8[%r20844]
	load.32     %r20845 <- 0[i]
	add.32      %r20846 <- %r20845, $1
	store.32    %r20846 -> 0[i]
	symaddr.64* %r20847 <- <anon symbol:0x62d0015f6bf8>
	symaddr.64* %r20848 <- strlib
	load.32     %r20849 <- 0[i]
	scast.64    %r20850 <- (32) %r20849
	muls.64     %r20851 <- %r20850, $16
	add.64*     %r20852 <- %r20848, %r20851
	store.64*   %r20847 -> 0[%r20852]
	symaddr.64* %r20853 <- str_gsub
	symaddr.64* %r20854 <- strlib
	load.32     %r20855 <- 0[i]
	scast.64    %r20856 <- (32) %r20855
	muls.64     %r20857 <- %r20856, $16
	add.64*     %r20858 <- %r20854, %r20857
	store.64*   %r20853 -> 8[%r20858]
	load.32     %r20859 <- 0[i]
	add.32      %r20860 <- %r20859, $1
	store.32    %r20860 -> 0[i]
	symaddr.64* %r20861 <- <anon symbol:0x62d0015f76d8>
	symaddr.64* %r20862 <- strlib
	load.32     %r20863 <- 0[i]
	scast.64    %r20864 <- (32) %r20863
	muls.64     %r20865 <- %r20864, $16
	add.64*     %r20866 <- %r20862, %r20865
	store.64*   %r20861 -> 0[%r20866]
	symaddr.64* %r20867 <- str_lower
	symaddr.64* %r20868 <- strlib
	load.32     %r20869 <- 0[i]
	scast.64    %r20870 <- (32) %r20869
	muls.64     %r20871 <- %r20870, $16
	add.64*     %r20872 <- %r20868, %r20871
	store.64*   %r20867 -> 8[%r20872]
	load.32     %r20873 <- 0[i]
	add.32      %r20874 <- %r20873, $1
	store.32    %r20874 -> 0[i]
	symaddr.64* %r20875 <- <anon symbol:0x62d0015f81b8>
	symaddr.64* %r20876 <- strlib
	load.32     %r20877 <- 0[i]
	scast.64    %r20878 <- (32) %r20877
	muls.64     %r20879 <- %r20878, $16
	add.64*     %r20880 <- %r20876, %r20879
	store.64*   %r20875 -> 0[%r20880]
	symaddr.64* %r20881 <- str_match
	symaddr.64* %r20882 <- strlib
	load.32     %r20883 <- 0[i]
	scast.64    %r20884 <- (32) %r20883
	muls.64     %r20885 <- %r20884, $16
	add.64*     %r20886 <- %r20882, %r20885
	store.64*   %r20881 -> 8[%r20886]
	load.32     %r20887 <- 0[i]
	add.32      %r20888 <- %r20887, $1
	store.32    %r20888 -> 0[i]
	symaddr.64* %r20889 <- <anon symbol:0x62d0015f8c98>
	symaddr.64* %r20890 <- strlib
	load.32     %r20891 <- 0[i]
	scast.64    %r20892 <- (32) %r20891
	muls.64     %r20893 <- %r20892, $16
	add.64*     %r20894 <- %r20890, %r20893
	store.64*   %r20889 -> 0[%r20894]
	symaddr.64* %r20895 <- str_rep
	symaddr.64* %r20896 <- strlib
	load.32     %r20897 <- 0[i]
	scast.64    %r20898 <- (32) %r20897
	muls.64     %r20899 <- %r20898, $16
	add.64*     %r20900 <- %r20896, %r20899
	store.64*   %r20895 -> 8[%r20900]
	load.32     %r20901 <- 0[i]
	add.32      %r20902 <- %r20901, $1
	store.32    %r20902 -> 0[i]
	symaddr.64* %r20903 <- <anon symbol:0x62d0015f9778>
	symaddr.64* %r20904 <- strlib
	load.32     %r20905 <- 0[i]
	scast.64    %r20906 <- (32) %r20905
	muls.64     %r20907 <- %r20906, $16
	add.64*     %r20908 <- %r20904, %r20907
	store.64*   %r20903 -> 0[%r20908]
	symaddr.64* %r20909 <- str_sub
	symaddr.64* %r20910 <- strlib
	load.32     %r20911 <- 0[i]
	scast.64    %r20912 <- (32) %r20911
	muls.64     %r20913 <- %r20912, $16
	add.64*     %r20914 <- %r20910, %r20913
	store.64*   %r20909 -> 8[%r20914]
	load.32     %r20915 <- 0[i]
	add.32      %r20916 <- %r20915, $1
	store.32    %r20916 -> 0[i]
	symaddr.64* %r20917 <- <anon symbol:0x62d0015fa258>
	symaddr.64* %r20918 <- strlib
	load.32     %r20919 <- 0[i]
	scast.64    %r20920 <- (32) %r20919
	muls.64     %r20921 <- %r20920, $16
	add.64*     %r20922 <- %r20918, %r20921
	store.64*   %r20917 -> 0[%r20922]
	symaddr.64* %r20923 <- str_upper
	symaddr.64* %r20924 <- strlib
	load.32     %r20925 <- 0[i]
	scast.64    %r20926 <- (32) %r20925
	muls.64     %r20927 <- %r20926, $16
	add.64*     %r20928 <- %r20924, %r20927
	store.64*   %r20923 -> 8[%r20928]
	load.32     %r20929 <- 0[i]
	add.32      %r20930 <- %r20929, $1
	store.32    %r20930 -> 0[i]
	symaddr.64* %r20931 <- strlib
	load.32     %r20932 <- 0[i]
	scast.64    %r20933 <- (32) %r20932
	muls.64     %r20934 <- %r20933, $16
	add.64*     %r20935 <- %r20931, %r20934
	store.64*   $0 -> 0[%r20935]
	symaddr.64* %r20936 <- strlib
	load.32     %r20937 <- 0[i]
	scast.64    %r20938 <- (32) %r20937
	muls.64     %r20939 <- %r20938, $16
	add.64*     %r20940 <- %r20936, %r20939
	store.64*   $0 -> 8[%r20940]
	store.32    $0 -> 0[i]
	symaddr.64* %r20941 <- <anon symbol:0x62d0015fb2a8>
	symaddr.64* %r20942 <- lualibs
	load.32     %r20943 <- 0[i]
	scast.64    %r20944 <- (32) %r20943
	muls.64     %r20945 <- %r20944, $16
	add.64*     %r20946 <- %r20942, %r20945
	store.64*   %r20941 -> 0[%r20946]
	symaddr.64* %r20947 <- luaopen_base
	symaddr.64* %r20948 <- lualibs
	load.32     %r20949 <- 0[i]
	scast.64    %r20950 <- (32) %r20949
	muls.64     %r20951 <- %r20950, $16
	add.64*     %r20952 <- %r20948, %r20951
	store.64*   %r20947 -> 8[%r20952]
	load.32     %r20953 <- 0[i]
	add.32      %r20954 <- %r20953, $1
	store.32    %r20954 -> 0[i]
	symaddr.64* %r20955 <- <anon symbol:0x62d0015fbd88>
	symaddr.64* %r20956 <- lualibs
	load.32     %r20957 <- 0[i]
	scast.64    %r20958 <- (32) %r20957
	muls.64     %r20959 <- %r20958, $16
	add.64*     %r20960 <- %r20956, %r20959
	store.64*   %r20955 -> 0[%r20960]
	symaddr.64* %r20961 <- luaopen_table
	symaddr.64* %r20962 <- lualibs
	load.32     %r20963 <- 0[i]
	scast.64    %r20964 <- (32) %r20963
	muls.64     %r20965 <- %r20964, $16
	add.64*     %r20966 <- %r20962, %r20965
	store.64*   %r20961 -> 8[%r20966]
	load.32     %r20967 <- 0[i]
	add.32      %r20968 <- %r20967, $1
	store.32    %r20968 -> 0[i]
	symaddr.64* %r20969 <- <anon symbol:0x62d0015fe8a0>
	symaddr.64* %r20970 <- lualibs
	load.32     %r20971 <- 0[i]
	scast.64    %r20972 <- (32) %r20971
	muls.64     %r20973 <- %r20972, $16
	add.64*     %r20974 <- %r20970, %r20973
	store.64*   %r20969 -> 0[%r20974]
	symaddr.64* %r20975 <- luaopen_io
	symaddr.64* %r20976 <- lualibs
	load.32     %r20977 <- 0[i]
	scast.64    %r20978 <- (32) %r20977
	muls.64     %r20979 <- %r20978, $16
	add.64*     %r20980 <- %r20976, %r20979
	store.64*   %r20975 -> 8[%r20980]
	load.32     %r20981 <- 0[i]
	add.32      %r20982 <- %r20981, $1
	store.32    %r20982 -> 0[i]
	symaddr.64* %r20983 <- <anon symbol:0x62d0015ff380>
	symaddr.64* %r20984 <- lualibs
	load.32     %r20985 <- 0[i]
	scast.64    %r20986 <- (32) %r20985
	muls.64     %r20987 <- %r20986, $16
	add.64*     %r20988 <- %r20984, %r20987
	store.64*   %r20983 -> 0[%r20988]
	symaddr.64* %r20989 <- luaopen_os
	symaddr.64* %r20990 <- lualibs
	load.32     %r20991 <- 0[i]
	scast.64    %r20992 <- (32) %r20991
	muls.64     %r20993 <- %r20992, $16
	add.64*     %r20994 <- %r20990, %r20993
	store.64*   %r20989 -> 8[%r20994]
	load.32     %r20995 <- 0[i]
	add.32      %r20996 <- %r20995, $1
	store.32    %r20996 -> 0[i]
	symaddr.64* %r20997 <- <anon symbol:0x62d0015ffe60>
	symaddr.64* %r20998 <- lualibs
	load.32     %r20999 <- 0[i]
	scast.64    %r21000 <- (32) %r20999
	muls.64     %r21001 <- %r21000, $16
	add.64*     %r21002 <- %r20998, %r21001
	store.64*   %r20997 -> 0[%r21002]
	symaddr.64* %r21003 <- luaopen_string
	symaddr.64* %r21004 <- lualibs
	load.32     %r21005 <- 0[i]
	scast.64    %r21006 <- (32) %r21005
	muls.64     %r21007 <- %r21006, $16
	add.64*     %r21008 <- %r21004, %r21007
	store.64*   %r21003 -> 8[%r21008]
	load.32     %r21009 <- 0[i]
	add.32      %r21010 <- %r21009, $1
	store.32    %r21010 -> 0[i]
	symaddr.64* %r21011 <- lualibs
	load.32     %r21012 <- 0[i]
	scast.64    %r21013 <- (32) %r21012
	muls.64     %r21014 <- %r21013, $16
	add.64*     %r21015 <- %r21011, %r21014
	store.64*   $0 -> 0[%r21015]
	symaddr.64* %r21016 <- lualibs
	load.32     %r21017 <- 0[i]
	scast.64    %r21018 <- (32) %r21017
	muls.64     %r21019 <- %r21018, $16
	add.64*     %r21020 <- %r21016, %r21019
	store.64*   $0 -> 8[%r21020]
	store.32    $0 -> 0[i]
	symaddr.64* %r21021 <- <anon symbol:0x62d001600eb0>
	symaddr.64* %r21022 <- bitlib
	load.32     %r21023 <- 0[i]
	scast.64    %r21024 <- (32) %r21023
	muls.64     %r21025 <- %r21024, $16
	add.64*     %r21026 <- %r21022, %r21025
	store.64*   %r21021 -> 0[%r21026]
	symaddr.64* %r21027 <- tobit
	symaddr.64* %r21028 <- bitlib
	load.32     %r21029 <- 0[i]
	scast.64    %r21030 <- (32) %r21029
	muls.64     %r21031 <- %r21030, $16
	add.64*     %r21032 <- %r21028, %r21031
	store.64*   %r21027 -> 8[%r21032]
	load.32     %r21033 <- 0[i]
	add.32      %r21034 <- %r21033, $1
	store.32    %r21034 -> 0[i]
	symaddr.64* %r21035 <- <anon symbol:0x62d001601990>
	symaddr.64* %r21036 <- bitlib
	load.32     %r21037 <- 0[i]
	scast.64    %r21038 <- (32) %r21037
	muls.64     %r21039 <- %r21038, $16
	add.64*     %r21040 <- %r21036, %r21039
	store.64*   %r21035 -> 0[%r21040]
	symaddr.64* %r21041 <- bnot
	symaddr.64* %r21042 <- bitlib
	load.32     %r21043 <- 0[i]
	scast.64    %r21044 <- (32) %r21043
	muls.64     %r21045 <- %r21044, $16
	add.64*     %r21046 <- %r21042, %r21045
	store.64*   %r21041 -> 8[%r21046]
	load.32     %r21047 <- 0[i]
	add.32      %r21048 <- %r21047, $1
	store.32    %r21048 -> 0[i]
	symaddr.64* %r21049 <- <anon symbol:0x62d001602470>
	symaddr.64* %r21050 <- bitlib
	load.32     %r21051 <- 0[i]
	scast.64    %r21052 <- (32) %r21051
	muls.64     %r21053 <- %r21052, $16
	add.64*     %r21054 <- %r21050, %r21053
	store.64*   %r21049 -> 0[%r21054]
	symaddr.64* %r21055 <- band
	symaddr.64* %r21056 <- bitlib
	load.32     %r21057 <- 0[i]
	scast.64    %r21058 <- (32) %r21057
	muls.64     %r21059 <- %r21058, $16
	add.64*     %r21060 <- %r21056, %r21059
	store.64*   %r21055 -> 8[%r21060]
	load.32     %r21061 <- 0[i]
	add.32      %r21062 <- %r21061, $1
	store.32    %r21062 -> 0[i]
	symaddr.64* %r21063 <- <anon symbol:0x62d001602f50>
	symaddr.64* %r21064 <- bitlib
	load.32     %r21065 <- 0[i]
	scast.64    %r21066 <- (32) %r21065
	muls.64     %r21067 <- %r21066, $16
	add.64*     %r21068 <- %r21064, %r21067
	store.64*   %r21063 -> 0[%r21068]
	symaddr.64* %r21069 <- bor
	symaddr.64* %r21070 <- bitlib
	load.32     %r21071 <- 0[i]
	scast.64    %r21072 <- (32) %r21071
	muls.64     %r21073 <- %r21072, $16
	add.64*     %r21074 <- %r21070, %r21073
	store.64*   %r21069 -> 8[%r21074]
	load.32     %r21075 <- 0[i]
	add.32      %r21076 <- %r21075, $1
	store.32    %r21076 -> 0[i]
	symaddr.64* %r21077 <- <anon symbol:0x62d001603a30>
	symaddr.64* %r21078 <- bitlib
	load.32     %r21079 <- 0[i]
	scast.64    %r21080 <- (32) %r21079
	muls.64     %r21081 <- %r21080, $16
	add.64*     %r21082 <- %r21078, %r21081
	store.64*   %r21077 -> 0[%r21082]
	symaddr.64* %r21083 <- bxor
	symaddr.64* %r21084 <- bitlib
	load.32     %r21085 <- 0[i]
	scast.64    %r21086 <- (32) %r21085
	muls.64     %r21087 <- %r21086, $16
	add.64*     %r21088 <- %r21084, %r21087
	store.64*   %r21083 -> 8[%r21088]
	load.32     %r21089 <- 0[i]
	add.32      %r21090 <- %r21089, $1
	store.32    %r21090 -> 0[i]
	symaddr.64* %r21091 <- <anon symbol:0x62d001604510>
	symaddr.64* %r21092 <- bitlib
	load.32     %r21093 <- 0[i]
	scast.64    %r21094 <- (32) %r21093
	muls.64     %r21095 <- %r21094, $16
	add.64*     %r21096 <- %r21092, %r21095
	store.64*   %r21091 -> 0[%r21096]
	symaddr.64* %r21097 <- lshift
	symaddr.64* %r21098 <- bitlib
	load.32     %r21099 <- 0[i]
	scast.64    %r21100 <- (32) %r21099
	muls.64     %r21101 <- %r21100, $16
	add.64*     %r21102 <- %r21098, %r21101
	store.64*   %r21097 -> 8[%r21102]
	load.32     %r21103 <- 0[i]
	add.32      %r21104 <- %r21103, $1
	store.32    %r21104 -> 0[i]
	symaddr.64* %r21105 <- <anon symbol:0x62d001604ff0>
	symaddr.64* %r21106 <- bitlib
	load.32     %r21107 <- 0[i]
	scast.64    %r21108 <- (32) %r21107
	muls.64     %r21109 <- %r21108, $16
	add.64*     %r21110 <- %r21106, %r21109
	store.64*   %r21105 -> 0[%r21110]
	symaddr.64* %r21111 <- rshift
	symaddr.64* %r21112 <- bitlib
	load.32     %r21113 <- 0[i]
	scast.64    %r21114 <- (32) %r21113
	muls.64     %r21115 <- %r21114, $16
	add.64*     %r21116 <- %r21112, %r21115
	store.64*   %r21111 -> 8[%r21116]
	load.32     %r21117 <- 0[i]
	add.32      %r21118 <- %r21117, $1
	store.32    %r21118 -> 0[i]
	symaddr.64* %r21119 <- <anon symbol:0x62d001605ad0>
	symaddr.64* %r21120 <- bitlib
	load.32     %r21121 <- 0[i]
	scast.64    %r21122 <- (32) %r21121
	muls.64     %r21123 <- %r21122, $16
	add.64*     %r21124 <- %r21120, %r21123
	store.64*   %r21119 -> 0[%r21124]
	symaddr.64* %r21125 <- arshift
	symaddr.64* %r21126 <- bitlib
	load.32     %r21127 <- 0[i]
	scast.64    %r21128 <- (32) %r21127
	muls.64     %r21129 <- %r21128, $16
	add.64*     %r21130 <- %r21126, %r21129
	store.64*   %r21125 -> 8[%r21130]
	load.32     %r21131 <- 0[i]
	add.32      %r21132 <- %r21131, $1
	store.32    %r21132 -> 0[i]
	symaddr.64* %r21133 <- <anon symbol:0x62d00161c5e8>
	symaddr.64* %r21134 <- bitlib
	load.32     %r21135 <- 0[i]
	scast.64    %r21136 <- (32) %r21135
	muls.64     %r21137 <- %r21136, $16
	add.64*     %r21138 <- %r21134, %r21137
	store.64*   %r21133 -> 0[%r21138]
	symaddr.64* %r21139 <- rol
	symaddr.64* %r21140 <- bitlib
	load.32     %r21141 <- 0[i]
	scast.64    %r21142 <- (32) %r21141
	muls.64     %r21143 <- %r21142, $16
	add.64*     %r21144 <- %r21140, %r21143
	store.64*   %r21139 -> 8[%r21144]
	load.32     %r21145 <- 0[i]
	add.32      %r21146 <- %r21145, $1
	store.32    %r21146 -> 0[i]
	symaddr.64* %r21147 <- <anon symbol:0x62d00161d0c8>
	symaddr.64* %r21148 <- bitlib
	load.32     %r21149 <- 0[i]
	scast.64    %r21150 <- (32) %r21149
	muls.64     %r21151 <- %r21150, $16
	add.64*     %r21152 <- %r21148, %r21151
	store.64*   %r21147 -> 0[%r21152]
	symaddr.64* %r21153 <- ror
	symaddr.64* %r21154 <- bitlib
	load.32     %r21155 <- 0[i]
	scast.64    %r21156 <- (32) %r21155
	muls.64     %r21157 <- %r21156, $16
	add.64*     %r21158 <- %r21154, %r21157
	store.64*   %r21153 -> 8[%r21158]
	load.32     %r21159 <- 0[i]
	add.32      %r21160 <- %r21159, $1
	store.32    %r21160 -> 0[i]
	symaddr.64* %r21161 <- <anon symbol:0x62d00161dba8>
	symaddr.64* %r21162 <- bitlib
	load.32     %r21163 <- 0[i]
	scast.64    %r21164 <- (32) %r21163
	muls.64     %r21165 <- %r21164, $16
	add.64*     %r21166 <- %r21162, %r21165
	store.64*   %r21161 -> 0[%r21166]
	symaddr.64* %r21167 <- bswap
	symaddr.64* %r21168 <- bitlib
	load.32     %r21169 <- 0[i]
	scast.64    %r21170 <- (32) %r21169
	muls.64     %r21171 <- %r21170, $16
	add.64*     %r21172 <- %r21168, %r21171
	store.64*   %r21167 -> 8[%r21172]
	load.32     %r21173 <- 0[i]
	add.32      %r21174 <- %r21173, $1
	store.32    %r21174 -> 0[i]
	symaddr.64* %r21175 <- <anon symbol:0x62d00161e688>
	symaddr.64* %r21176 <- bitlib
	load.32     %r21177 <- 0[i]
	scast.64    %r21178 <- (32) %r21177
	muls.64     %r21179 <- %r21178, $16
	add.64*     %r21180 <- %r21176, %r21179
	store.64*   %r21175 -> 0[%r21180]
	symaddr.64* %r21181 <- tohex
	symaddr.64* %r21182 <- bitlib
	load.32     %r21183 <- 0[i]
	scast.64    %r21184 <- (32) %r21183
	muls.64     %r21185 <- %r21184, $16
	add.64*     %r21186 <- %r21182, %r21185
	store.64*   %r21181 -> 8[%r21186]
	load.32     %r21187 <- 0[i]
	add.32      %r21188 <- %r21187, $1
	store.32    %r21188 -> 0[i]
	symaddr.64* %r21189 <- bitlib
	load.32     %r21190 <- 0[i]
	scast.64    %r21191 <- (32) %r21190
	muls.64     %r21192 <- %r21191, $16
	add.64*     %r21193 <- %r21189, %r21192
	store.64*   $0 -> 0[%r21193]
	symaddr.64* %r21194 <- bitlib
	load.32     %r21195 <- 0[i]
	scast.64    %r21196 <- (32) %r21195
	muls.64     %r21197 <- %r21196, $16
	add.64*     %r21198 <- %r21194, %r21197
	store.64*   $0 -> 8[%r21198]
	br          .L4316

.L4316:
	ret


main:
.L4317:
	<entry-point>
	store.32    %arg1 -> 0[argc]
	store.64*   %arg2 -> 0[argv]
	call        init_globals
	call.64*    %r21199 <- luaL_newstate
	store.64*   %r21199 -> 0[L]
	load.64*    %r21200 <- 0[L]
	push.64*    %r21200
	call        luaL_openlibs
	load.64*    %r21201 <- 0[L]
	symaddr.64* %r21202 <- <anon symbol:0x62d00161f420>
	symaddr.64* %r21203 <- bitlib
	push.64*    %r21201
	push.64*    %r21202
	push.64*    %r21203
	call        luaL_register
	load.32     %r21204 <- 0[argc]
	setlt.32    %r21205 <- %r21204, $2
	br          %r21205, .L4318, .L4319

.L4318:
	phisrc.32   %phi863(return) <- $8
	br          .L4320

.L4319:
	load.64*    %r21207 <- 0[L]
	push.64*    %r21207
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r21208 <- 0[L]
	load.64*    %r21209 <- 0[argv]
	load.64*    %r21210 <- 8[%r21209]
	push.64*    %r21208
	push.64*    %r21210
	call        lua_pushstring
	load.64*    %r21211 <- 0[L]
	push.64*    %r21211
	push.32     $0xfffffffe
	push.32     $0
	call        lua_rawseti
	load.64*    %r21212 <- 0[L]
	symaddr.64* %r21213 <- <anon symbol:0x62d00161fa78>
	push.64*    %r21212
	push.32     $0xffffd8ee
	push.64*    %r21213
	call        lua_setfield
	load.64*    %r21214 <- 0[L]
	load.64*    %r21215 <- 0[argv]
	load.64*    %r21216 <- 8[%r21215]
	push.64*    %r21214
	push.64*    %r21216
	call.32     %r21217 <- luaL_loadfile
	br          %r21217, .L4321, .L4322

.L4321:
	br          .L4323

.L4322:
	store.32    $2 -> 0[i]
	br          .L4327

.L4327:
	load.32     %r21218 <- 0[i]
	load.32     %r21219 <- 0[argc]
	setlt.32    %r21220 <- %r21218, %r21219
	br          %r21220, .L4324, .L4326

.L4324:
	load.64*    %r21221 <- 0[L]
	load.64*    %r21222 <- 0[argv]
	load.32     %r21223 <- 0[i]
	scast.64    %r21224 <- (32) %r21223
	muls.64     %r21225 <- %r21224, $8
	add.64*     %r21226 <- %r21222, %r21225
	load.64*    %r21227 <- 0[%r21226]
	push.64*    %r21221
	push.64*    %r21227
	call        lua_pushstring
	br          .L4325

.L4325:
	load.32     %r21228 <- 0[i]
	add.32      %r21229 <- %r21228, $1
	store.32    %r21229 -> 0[i]
	br          .L4327

.L4326:
	load.64*    %r21230 <- 0[L]
	load.32     %r21231 <- 0[argc]
	sub.32      %r21232 <- %r21231, $2
	push.64*    %r21230
	push.32     %r21232
	push.32     $0
	push.32     $0
	call.32     %r21233 <- lua_pcall
	br          %r21233, .L4328, .L4329

.L4328:
	br          .L4323

.L4323:
	load.64*    %r21234 <- 0[stderr]
	symaddr.64* %r21235 <- <anon symbol:0x62d00161ffe8>
	load.64*    %r21236 <- 0[L]
	push.64*    %r21236
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r21237 <- lua_tolstring
	push.64*    %r21234
	push.64*    %r21235
	push.64*    %r21237
	call.32     %r21238 <- fprintf
	phisrc.32   %phi864(return) <- $1
	br          .L4320

.L4329:
	load.64*    %r21239 <- 0[L]
	push.64*    %r21239
	call        lua_close
	phisrc.32   %phi865(return) <- $0
	br          .L4320

.L4320:
	phi.32      %r21206 <- %phi863(return), %phi864(return), %phi865(return)
	ret.32      %r21206


