luaM_growaux_:
.L0:
	<entry-point>
	load.32     %r2 <- 0[%arg3]
	divs.32     %r4 <- %arg5, $2
	setge.32    %r5 <- %r2, %r4
	phisrc.32   %phi30 <- %r2
	cbr         %r5, .L1, .L2

.L1:
	setge.32    %r9 <- %r2, %arg5
	cbr         %r9, .L3, .L4

.L3:
	push.64*    %arg1
	push.64*    %arg6
	call        luaG_runerror
	br          .L4

.L4:
	phisrc.32   %phi25(newsize) <- %arg5
	br          .L5

.L2:
	muls.32     %r15 <- %r2, $2
	setlt.32    %r17 <- %r15, $4
	phisrc.32   %phi26(newsize) <- %r15
	cbr         %r17, .L6, .L5

.L6:
	phisrc.32   %phi27(newsize) <- $4
	br          .L5

.L5:
	phi.32      %r18(newsize) <- %phi25(newsize), %phi26(newsize), %phi27(newsize)
	add.32      %r19 <- %r18(newsize), $1
	scast.64    %r20 <- (32) %r19
	divu.64     %r22 <- $-3, %arg4
	setbe.32    %r23 <- %r20, %r22
	cbr         %r23, .L8, .L9

.L8:
	load.32     %r27 <- 0[%arg3]
	scast.64    %r28 <- (32) %r27
	mulu.64     %r30 <- %r28, %arg4
	scast.64    %r32 <- (32) %r18(newsize)
	mulu.64     %r34 <- %r32, %arg4
	push.64*    %arg1
	push.64*    %arg2
	push.64     %r30
	push.64     %r34
	call.64*    %r35 <- luaM_realloc_
	phisrc.64*  %phi1 <- %r35
	br          .L10

.L9:
	push.64*    %arg1
	call.64*    %r37 <- luaM_toobig
	cast.64*    %r38 <- (64) %r37
	phisrc.64*  %phi2 <- %r38
	br          .L10

.L10:
	phi.64*     %r39 <- %phi1, %phi2
	store.32    %r18(newsize) -> 0[%arg3]
	ret.64*     %r39


luaM_toobig:
.L12:
	<entry-point>
	symaddr.64* %r45 <- <anon symbol:0x19a9008>
	push.64*    %arg1
	push.64*    %r45
	call        luaG_runerror
	ret.64*     $0


luaM_realloc_:
.L14:
	<entry-point>
	load.64*    %r48 <- 32[%arg1]
	load.64*    %r50 <- 24[%r48]
	push.64*    %r50
	push.64*    %arg2
	push.64     %arg3
	push.64     %arg4
	load.64*    %r55 <- 16[%r48]
	call.64*    %r56 <- %r55
	seteq.1     %r59 <- %r56, $0
	seta.1      %r62 <- %arg4, $0
	and-bool.1  %r63 <- %r59, %r62
	cbr         %r63, .L15, .L16

.L15:
	push.64*    %arg1
	push.32     $4
	call        luaD_throw
	br          .L16

.L16:
	load.64     %r67 <- 120[%r48]
	sub.64      %r69 <- %r67, %arg3
	add.64      %r71 <- %r69, %arg4
	store.64    %r71 -> 120[%r48]
	ret.64*     %r56


luaO_int2fb:
.L18:
	<entry-point>
	phisrc.32   %phi44(x) <- %arg1
	phisrc.32   %phi46(e) <- $0
	phisrc.32   %phi48(e) <- $0
	br          .L22

.L22:
	phi.32      %r75(x) <- %phi44(x), %phi45(x)
	setae.32    %r76 <- %r75(x), $16
	cbr         %r76, .L19, .L21

.L19:
	add.32      %r78 <- %r75(x), $1
	lsr.32      %r79 <- %r78, $1
	phi.32      %r80 <- %phi48(e), %phi49(e)
	add.32      %r81 <- %r80, $1
	phisrc.32   %phi45(x) <- %r79
	phisrc.32   %phi47(e) <- %r81
	phisrc.32   %phi49(e) <- %r81
	br          .L22

.L21:
	setb.32     %r83 <- %r75(x), $8
	cbr         %r83, .L23, .L24

.L23:
	phisrc.32   %phi38(return) <- %r75(x)
	br          .L25

.L24:
	phi.32      %r87 <- %phi46(e), %phi47(e)
	add.32      %r88 <- %r87, $1
	shl.32      %r89 <- %r88, $3
	add.32      %r92 <- %r75(x), $-8
	or.32       %r93 <- %r89, %r92
	phisrc.32   %phi39(return) <- %r93
	br          .L25

.L25:
	phi.32      %r86 <- %phi38(return), %phi39(return)
	ret.32      %r86


luaO_fb2int:
.L27:
	<entry-point>
	asr.32      %r95 <- %arg1, $3
	and.32      %r96 <- %r95, $31
	cbr         %r96, .L29, .L28

.L28:
	phisrc.32   %phi50(return) <- %arg1
	br          .L30

.L29:
	and.32      %r102 <- %arg1, $7
	add.32      %r103 <- %r102, $8
	add.32      %r105 <- %r96, $-1
	shl.32      %r106 <- %r103, %r105
	phisrc.32   %phi51(return) <- %r106
	br          .L30

.L30:
	phi.32      %r100 <- %phi50(return), %phi51(return)
	ret.32      %r100


luaO_log2:
.L32:
	<entry-point>
	phisrc.32   %phi58(x) <- %arg1
	phisrc.32   %phi62(l) <- $0xffffffff
	br          .L36

.L36:
	phi.32      %r107(x) <- %phi58(x), %phi59(x)
	setae.32    %r108 <- %r107(x), $256
	phi.32      %r109 <- %phi62(l), %phi63(l)
	cbr         %r108, .L33, .L35

.L33:
	add.32      %r111 <- %r109, $8
	lsr.32      %r115 <- %r107(x), $8
	phisrc.32   %phi59(x) <- %r115
	phisrc.32   %phi63(l) <- %r111
	br          .L36

.L35:
	symaddr.64* %r118 <- log_2
	cast.64     %r120 <- (32) %r107(x)
	add.64*     %r121 <- %r118, %r120
	load.8      %r122 <- 0[%r121]
	cast.32     %r123 <- (8) %r122
	add.32      %r124 <- %r109, %r123
	ret.32      %r124


luaO_rawequalObj:
.L38:
	<entry-point>
	load.32     %r127 <- 8[%arg1]
	load.32     %r130 <- 8[%arg2]
	setne.32    %r132 <- %r127, %r130
	cbr         %r132, .L39, .L40

.L39:
	phisrc.32   %phi64(return) <- $0
	br          .L41

.L40:
	switch.32   %r127, 0 -> .L44, 1 -> .L46, 2 -> .L47, 3 -> .L45, default -> .L48

.L44:
	phisrc.32   %phi65(return) <- $1
	br          .L41

.L45:
	load.f64    %r137 <- 0[%arg1]
	fpcast.f64  %r138 <- (64) %r137
	load.f64    %r140 <- 0[%arg2]
	fpcast.f64  %r141 <- (64) %r140
	seteq.32    %r142 <- %r138, %r141
	phisrc.32   %phi66(return) <- %r142
	br          .L41

.L46:
	load.32     %r144 <- 0[%arg1]
	load.32     %r147 <- 0[%arg2]
	seteq.32    %r149 <- %r144, %r147
	phisrc.32   %phi67(return) <- %r149
	br          .L41

.L47:
	load.64*    %r151 <- 0[%arg1]
	load.64*    %r153 <- 0[%arg2]
	seteq.32    %r154 <- %r151, %r153
	phisrc.32   %phi68(return) <- %r154
	br          .L41

.L48:
	load.64*    %r156 <- 0[%arg1]
	load.64*    %r158 <- 0[%arg2]
	seteq.32    %r159 <- %r156, %r158
	phisrc.32   %phi69(return) <- %r159
	br          .L41

.L41:
	phi.32      %r133 <- %phi64(return), %phi65(return), %phi66(return), %phi67(return), %phi68(return), %phi69(return)
	ret.32      %r133


luaO_str2d:
.L49:
	<entry-point>
	symaddr.64* %r161 <- endptr
	push.64*    %arg1
	push.64*    %r161
	call.f64    %r162 <- strtod
	store.f64   %r162 -> 0[%arg2]
	load.64*    %r164(endptr) <- 0[endptr]
	seteq.32    %r166 <- %r164(endptr), %arg1
	phisrc.64*  %phi92(endptr) <- %r164(endptr)
	phisrc.64*  %phi94(endptr) <- %r164(endptr)
	phisrc.64*  %phi95(endptr) <- %r164(endptr)
	cbr         %r166, .L50, .L51

.L50:
	phisrc.32   %phi80(return) <- $0
	br          .L52

.L51:
	load.8      %r169 <- 0[%r164(endptr)]
	scast.32    %r170 <- (8) %r169
	seteq.32    %r171 <- %r170, $120
	cbr         %r171, .L53, .L55

.L55:
	scast.32    %r174 <- (8) %r169
	seteq.32    %r175 <- %r174, $88
	phisrc.64*  %phi88(endptr) <- %r164(endptr)
	cbr         %r175, .L53, .L54

.L53:
	push.64*    %arg1
	push.64*    %r161
	push.32     $16
	call.64     %r178 <- strtoul
	fpcast.f64  %r179 <- (64) %r178
	store.f64   %r179 -> 0[%arg2]
	br          .L54

.L54:
	load.64*    %r181 <- 0[endptr]
	load.8      %r182 <- 0[%r181]
	cbr         %r182, .L61, .L56

.L56:
	phisrc.32   %phi81(return) <- $1
	br          .L52

.L61:
	call.64*    %r185 <- __ctype_b_loc
	load.64*    %r186 <- 0[%r185]
	load.64*    %r187(endptr) <- 0[endptr]
	load.8      %r188 <- 0[%r187(endptr)]
	cast.32     %r190 <- (8) %r188
	scast.64    %r191 <- (32) %r190
	muls.64     %r192 <- %r191, $2
	add.64*     %r193 <- %r186, %r192
	load.16     %r194 <- 0[%r193]
	cast.32     %r195 <- (16) %r194
	and.32      %r196 <- %r195, $0x2000
	cbr         %r196, .L58, .L60

.L58:
	add.64*     %r198 <- %r187(endptr), $1
	store.64*   %r198 -> 0[endptr]
	br          .L61

.L60:
	cbr         %r188, .L62, .L63

.L62:
	phisrc.32   %phi82(return) <- $0
	br          .L52

.L63:
	phisrc.32   %phi83(return) <- $1
	br          .L52

.L52:
	phi.32      %r167 <- %phi80(return), %phi81(return), %phi82(return), %phi83(return)
	ret.32      %r167


pushstr:
.L64:
	<entry-point>
	load.64*    %r204 <- 16[%arg1]
	push.64*    %arg2
	call.64     %r208 <- strlen
	push.64*    %arg1
	push.64*    %arg2
	push.64     %r208
	call.64*    %r209 <- luaS_newlstr
	ptrcast.64* %r210 <- (64) %r209
	store.64*   %r210 -> 0[%r204]
	store.32    $4 -> 8[%r204]
	load.64*    %r214 <- 56[%arg1]
	ptrcast.64* %r215 <- (64) %r214
	load.64*    %r217 <- 16[%arg1]
	ptrcast.64* %r218 <- (64) %r217
	sub.64      %r219 <- %r215, %r218
	setle.32    %r220 <- %r219, $16
	cbr         %r220, .L65, .L67

.L65:
	push.64*    %arg1
	push.32     $1
	call        luaD_growstack
	br          .L67

.L67:
	load.64*    %r223 <- 16[%arg1]
	add.64*     %r224 <- %r223, $16
	store.64*   %r224 -> 16[%arg1]
	ret


luaO_chunkid:
.L69:
	<entry-point>
	load.8      %r226 <- 0[%arg2]
	scast.32    %r227 <- (8) %r226
	seteq.32    %r228 <- %r227, $61
	cbr         %r228, .L70, .L71

.L70:
	add.64*     %r231 <- %arg2, $1
	push.64*    %arg1
	push.64*    %r231
	push.64     %arg3
	call.64*    %r233 <- strncpy
	add.64      %r236 <- %arg3, $-1
	add.64*     %r237 <- %arg1, %r236
	store.8     $0 -> 0[%r237]
	br          .L72

.L71:
	scast.32    %r240 <- (8) %r226
	seteq.32    %r241 <- %r240, $64
	cbr         %r241, .L73, .L74

.L73:
	add.64*     %r243 <- %arg2, $1
	add.64      %r246 <- %arg3, $-8
	push.64*    %r243
	call.64     %r249 <- strlen
	symaddr.64* %r251 <- <anon symbol:0x1a04d20>
	push.64*    %arg1
	push.64*    %r251
	call.64*    %r252 <- strcpy
	seta.32     %r255 <- %r249, %r246
	phisrc.64*  %phi113(source) <- %r243
	cbr         %r255, .L75, .L76

.L75:
	sub.64      %r258 <- %r249, %r246
	cast.64     %r260 <- (64) %r243
	add.64      %r261 <- %r260, %r258
	ptrcast.64* %r262 <- (64) %r261
	symaddr.64* %r264 <- <anon symbol:0x1a050c0>
	push.64*    %arg1
	push.64*    %r264
	call.64*    %r265 <- strcat
	phisrc.64*  %phi114(source) <- %r262
	br          .L76

.L76:
	phi.64*     %r267 <- %phi113(source), %phi114(source)
	push.64*    %arg1
	push.64*    %r267
	call.64*    %r268 <- strcat
	br          .L72

.L74:
	symaddr.64* %r270 <- <anon symbol:0x1a05460>
	push.64*    %arg2
	push.64*    %r270
	call.64     %r271 <- strcspn
	add.64      %r274 <- %arg3, $-17
	seta.32     %r278 <- %r271, %r274
	select.64   %r284(len) <- %r278, %r274, %r271
	symaddr.64* %r281 <- <anon symbol:0x1a059d0>
	push.64*    %arg1
	push.64*    %r281
	call.64*    %r282 <- strcpy
	add.64*     %r285 <- %arg2, %r284(len)
	load.8      %r286 <- 0[%r285]
	cbr         %r286, .L80, .L81

.L80:
	push.64*    %arg1
	push.64*    %arg2
	push.64     %r284(len)
	call.64*    %r292 <- strncat
	symaddr.64* %r294 <- <anon symbol:0x1a05e58>
	push.64*    %arg1
	push.64*    %r294
	call.64*    %r295 <- strcat
	br          .L82

.L81:
	push.64*    %arg1
	push.64*    %arg2
	call.64*    %r298 <- strcat
	br          .L82

.L82:
	symaddr.64* %r300 <- <anon symbol:0x1a061f8>
	push.64*    %arg1
	push.64*    %r300
	call.64*    %r301 <- strcat
	br          .L72

.L72:
	ret


luaT_init:
.L83:
	<entry-point>
	phisrc.32   %phi132(i) <- $0
	br          .L87

.L87:
	phi.32      %r302(i) <- %phi132(i), %phi133(i)
	setlt.32    %r303 <- %r302(i), $17
	cbr         %r303, .L84, .L86

.L84:
	symaddr.64* %r305 <- luaT_eventname
	scast.64    %r307 <- (32) %r302(i)
	muls.64     %r308 <- %r307, $8
	add.64*     %r309 <- %r305, %r308
	load.64*    %r310 <- 0[%r309]
	push.64*    %r310
	call.64     %r317 <- strlen
	push.64*    %arg1
	push.64*    %r310
	push.64     %r317
	call.64*    %r318 <- luaS_newlstr
	load.64*    %r320 <- 32[%arg1]
	add.64*     %r321 <- %r320, $296
	add.64*     %r325 <- %r321, %r308
	store.64*   %r318 -> 0[%r325]
	load.64*    %r327 <- 32[%arg1]
	add.64*     %r328 <- %r327, $296
	add.64*     %r332 <- %r328, %r308
	load.64*    %r333 <- 0[%r332]
	load.8      %r334 <- 9[%r333]
	cast.32     %r335 <- (8) %r334
	or.32       %r336 <- %r335, $32
	scast.8     %r337 <- (32) %r336
	store.8     %r337 -> 9[%r333]
	add.32      %r339 <- %r302(i), $1
	phisrc.32   %phi133(i) <- %r339
	br          .L87

.L86:
	ret


luaT_gettm:
.L88:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg3
	call.64*    %r342 <- luaH_getstr
	load.32     %r344 <- 8[%r342]
	select.64*  %r357 <- %r344, %r342, $0
	cbr         %r344, .L91, .L89

.L89:
	shl.32      %r349 <- $1, %arg2
	cast.8      %r350 <- (32) %r349
	cast.32     %r351 <- (8) %r350
	load.8      %r353 <- 10[%arg1]
	cast.32     %r354 <- (8) %r353
	or.32       %r355 <- %r354, %r351
	scast.8     %r356 <- (32) %r355
	store.8     %r356 -> 10[%arg1]
	br          .L91

.L91:
	ret.64*     %r357


luaT_gettmbyobj:
.L93:
	<entry-point>
	load.32     %r360 <- 8[%arg2]
	switch.32   %r360, 5 -> .L95, 7 -> .L96, default -> .L97

.L95:
	load.64*    %r362 <- 0[%arg2]
	load.64*    %r363(mt) <- 16[%r362]
	phisrc.64*  %phi150(mt) <- %r363(mt)
	br          .L94

.L96:
	load.64*    %r365 <- 0[%arg2]
	load.64*    %r366 <- 16[%r365]
	phisrc.64*  %phi151(mt) <- %r366
	br          .L94

.L97:
	load.64*    %r368 <- 32[%arg1]
	add.64*     %r369 <- %r368, $224
	scast.64    %r372 <- (32) %r360
	muls.64     %r373 <- %r372, $8
	add.64*     %r374 <- %r369, %r373
	load.64*    %r375 <- 0[%r374]
	phisrc.64*  %phi152(mt) <- %r375
	br          .L94

.L94:
	phi.64*     %r376(mt) <- %phi150(mt), %phi151(mt), %phi152(mt)
	cbr         %r376(mt), .L99, .L100

.L99:
	load.64*    %r379 <- 32[%arg1]
	add.64*     %r380 <- %r379, $296
	scast.64    %r382 <- (32) %arg3
	muls.64     %r383 <- %r382, $8
	add.64*     %r384 <- %r380, %r383
	load.64*    %r385 <- 0[%r384]
	push.64*    %r376(mt)
	push.64*    %r385
	call.64*    %r386 <- luaH_getstr
	phisrc.64*  %phi139 <- %r386
	br          .L101

.L100:
	symaddr.64* %r387 <- luaO_nilobject_
	ptrcast.64* %r388 <- (64) %r387
	phisrc.64*  %phi140 <- %r388
	br          .L101

.L101:
	phi.64*     %r389 <- %phi139, %phi140
	ret.64*     %r389


luaF_newCclosure:
.L102:
	<entry-point>
	add.32      %r393 <- %arg2, $-1
	scast.64    %r394 <- (32) %r393
	mulu.64     %r395 <- %r394, $16
	cast.32     %r396 <- (64) %r395
	add.32      %r397 <- %r396, $56
	scast.64    %r398 <- (32) %r397
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     %r398
	call.64*    %r399 <- luaM_realloc_
	ptrcast.64* %r400 <- (64) %r399
	ptrcast.64* %r403 <- (64) %r400
	push.64*    %arg1
	push.64*    %r403
	push.8      $6
	call        luaC_link
	store.8     $1 -> 10[%r400]
	store.64*   %arg3 -> 24[%r400]
	scast.8     %r408 <- (32) %arg2
	store.8     %r408 -> 11[%r400]
	ret.64*     %r400


luaF_newLclosure:
.L104:
	<entry-point>
	add.32      %r414 <- %arg2, $-1
	scast.64    %r415 <- (32) %r414
	mulu.64     %r416 <- %r415, $8
	cast.32     %r417 <- (64) %r416
	add.32      %r418 <- %r417, $48
	scast.64    %r419 <- (32) %r418
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     %r419
	call.64*    %r420 <- luaM_realloc_
	ptrcast.64* %r421 <- (64) %r420
	ptrcast.64* %r424 <- (64) %r421
	push.64*    %arg1
	push.64*    %r424
	push.8      $6
	call        luaC_link
	store.8     $0 -> 10[%r421]
	store.64*   %arg3 -> 24[%r421]
	scast.8     %r429 <- (32) %arg2
	store.8     %r429 -> 11[%r421]
	phisrc.32   %phi157(nelems) <- %arg2
	br          .L108

.L108:
	phi.32      %r431 <- %phi157(nelems), %phi158(nelems)
	add.32      %r432(nelems) <- %r431, $-1
	phisrc.32   %phi158(nelems) <- %r432(nelems)
	cbr         %r431, .L105, .L109

.L105:
	add.64*     %r435 <- %r421, $40
	scast.64    %r437 <- (32) %r432(nelems)
	muls.64     %r438 <- %r437, $8
	add.64*     %r439 <- %r435, %r438
	store.64*   $0 -> 0[%r439]
	br          .L108

.L109:
	ret.64*     %r421


luaF_newupval:
.L110:
	<entry-point>
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r443 <- luaM_realloc_
	ptrcast.64* %r444 <- (64) %r443
	ptrcast.64* %r447 <- (64) %r444
	push.64*    %arg1
	push.64*    %r447
	push.8      $10
	call        luaC_link
	add.64*     %r449 <- %r444, $24
	store.64*   %r449 -> 16[%r444]
	store.32    $0 -> 32[%r444]
	ret.64*     %r444


luaF_findupval:
.L112:
	<entry-point>
	load.64*    %r457(g) <- 32[%arg1]
	add.64*     %r459(pp) <- %arg1, $152
	phisrc.64*  %phi176(pp) <- %r459(pp)
	br          .L116

.L116:
	phi.64*     %r460(pp) <- %phi176(pp), %phi177(pp)
	load.64*    %r461 <- 0[%r460(pp)]
	cbr         %r461, .L117, .L115

.L117:
	load.64*    %r466 <- 16[%r461]
	setae.32    %r468 <- %r466, %arg2
	cbr         %r468, .L113, .L115

.L113:
	seteq.32    %r472 <- %r466, %arg2
	cbr         %r472, .L118, .L119

.L118:
	ptrcast.64* %r474 <- (64) %r461
	load.8      %r475 <- 9[%r474]
	cast.32     %r476 <- (8) %r475
	load.8      %r478 <- 32[%r457(g)]
	cast.32     %r479 <- (8) %r478
	xor.32      %r480 <- %r479, $3
	and.32      %r481 <- %r476, %r480
	and.32      %r482 <- %r481, $3
	cbr         %r482, .L120, .L121

.L120:
	xor.32      %r487 <- %r476, $3
	scast.8     %r488 <- (32) %r487
	store.8     %r488 -> 9[%r474]
	br          .L121

.L121:
	phisrc.64*  %phi163(return) <- %r461
	br          .L122

.L119:
	phisrc.64*  %phi177(pp) <- %r461
	br          .L116

.L115:
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r494 <- luaM_realloc_
	ptrcast.64* %r495 <- (64) %r494
	store.8     $10 -> 8[%r495]
	load.8      %r498 <- 32[%r457(g)]
	cast.32     %r499 <- (8) %r498
	and.32      %r500 <- %r499, $3
	store.8     %r500 -> 9[%r495]
	store.64*   %arg2 -> 16[%r495]
	load.64*    %r506 <- 0[%r460(pp)]
	store.64*   %r506 -> 0[%r495]
	ptrcast.64* %r509 <- (64) %r495
	store.64*   %r509 -> 0[%r460(pp)]
	add.64*     %r512 <- %r457(g), $184
	store.64*   %r512 -> 24[%r495]
	load.64*    %r515 <- 216[%r457(g)]
	store.64*   %r515 -> 32[%r495]
	store.64*   %r495 -> 24[%r515]
	store.64*   %r495 -> 216[%r457(g)]
	phisrc.64*  %phi164(return) <- %r495
	br          .L122

.L122:
	phi.64*     %r490 <- %phi163(return), %phi164(return)
	ret.64*     %r490


unlinkupval:
.L123:
	<entry-point>
	load.64*    %r524 <- 24[%arg1]
	load.64*    %r526 <- 32[%arg1]
	store.64*   %r524 -> 24[%r526]
	load.64*    %r528 <- 32[%arg1]
	load.64*    %r530 <- 24[%arg1]
	store.64*   %r528 -> 32[%r530]
	ret


luaF_freeupval:
.L125:
	<entry-point>
	load.64*    %r532 <- 16[%arg2]
	add.64*     %r534 <- %arg2, $24
	setne.32    %r536 <- %r532, %r534
	cbr         %r536, .L126, .L127

.L126:
	push.64*    %arg2
	call        unlinkupval
	br          .L127

.L127:
	cast.64*    %r540 <- (64) %arg2
	push.64*    %arg1
	push.64*    %r540
	push.64     $40
	push.64     $0
	call.64*    %r541 <- luaM_realloc_
	ret


luaF_close:
.L129:
	<entry-point>
	load.64*    %r543(g) <- 32[%arg1]
	br          .L133

.L133:
	load.64*    %r545 <- 152[%arg1]
	cbr         %r545, .L134, .L132

.L134:
	load.64*    %r550 <- 16[%r545]
	setae.32    %r552 <- %r550, %arg2
	cbr         %r552, .L130, .L132

.L130:
	ptrcast.64* %r554 <- (64) %r545
	load.64*    %r556 <- 0[%r545]
	store.64*   %r556 -> 152[%arg1]
	load.8      %r559 <- 9[%r554]
	cast.32     %r560 <- (8) %r559
	load.8      %r562 <- 32[%r543(g)]
	cast.32     %r563 <- (8) %r562
	xor.32      %r564 <- %r563, $3
	and.32      %r565 <- %r560, %r564
	and.32      %r566 <- %r565, $3
	cbr         %r566, .L135, .L136

.L135:
	push.64*    %arg1
	push.64*    %r545
	call        luaF_freeupval
	br          .L133

.L136:
	push.64*    %r545
	call        unlinkupval
	load.64*    %r571 <- 16[%r545]
	add.64*     %r573 <- %r545, $24
	load.f64    %r576 <- 0[%r571]
	fpcast.f64  %r577 <- (64) %r576
	store.f64   %r577 -> 0[%r573]
	load.32     %r580 <- 8[%r571]
	store.32    %r580 -> 32[%r545]
	store.64*   %r573 -> 16[%r545]
	push.64*    %arg1
	push.64*    %r545
	call        luaC_linkupval
	br          .L133

.L132:
	ret


luaF_newproto:
.L138:
	<entry-point>
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     $120
	call.64*    %r590 <- luaM_realloc_
	ptrcast.64* %r591 <- (64) %r590
	ptrcast.64* %r594 <- (64) %r591
	push.64*    %arg1
	push.64*    %r594
	push.8      $9
	call        luaC_link
	store.64*   $0 -> 16[%r591]
	store.32    $0 -> 76[%r591]
	store.64*   $0 -> 32[%r591]
	store.32    $0 -> 88[%r591]
	store.64*   $0 -> 24[%r591]
	store.32    $0 -> 80[%r591]
	store.32    $0 -> 84[%r591]
	store.32    $0 -> 72[%r591]
	store.8     $0 -> 112[%r591]
	store.64*   $0 -> 56[%r591]
	store.8     $0 -> 113[%r591]
	store.8     $0 -> 114[%r591]
	store.8     $0 -> 115[%r591]
	store.64*   $0 -> 40[%r591]
	store.32    $0 -> 92[%r591]
	store.64*   $0 -> 48[%r591]
	store.32    $0 -> 96[%r591]
	store.32    $0 -> 100[%r591]
	store.64*   $0 -> 64[%r591]
	ret.64*     %r591


luaF_freeproto:
.L140:
	<entry-point>
	load.64*    %r618 <- 24[%arg2]
	cast.64*    %r619 <- (64) %r618
	load.32     %r621 <- 80[%arg2]
	scast.64    %r622 <- (32) %r621
	mulu.64     %r623 <- %r622, $4
	push.64*    %arg1
	push.64*    %r619
	push.64     %r623
	push.64     $0
	call.64*    %r624 <- luaM_realloc_
	load.64*    %r627 <- 32[%arg2]
	cast.64*    %r628 <- (64) %r627
	load.32     %r630 <- 88[%arg2]
	scast.64    %r631 <- (32) %r630
	mulu.64     %r632 <- %r631, $8
	push.64*    %arg1
	push.64*    %r628
	push.64     %r632
	push.64     $0
	call.64*    %r633 <- luaM_realloc_
	load.64*    %r636 <- 16[%arg2]
	cast.64*    %r637 <- (64) %r636
	load.32     %r639 <- 76[%arg2]
	scast.64    %r640 <- (32) %r639
	mulu.64     %r641 <- %r640, $16
	push.64*    %arg1
	push.64*    %r637
	push.64     %r641
	push.64     $0
	call.64*    %r642 <- luaM_realloc_
	load.64*    %r645 <- 40[%arg2]
	cast.64*    %r646 <- (64) %r645
	load.32     %r648 <- 84[%arg2]
	scast.64    %r649 <- (32) %r648
	mulu.64     %r650 <- %r649, $4
	push.64*    %arg1
	push.64*    %r646
	push.64     %r650
	push.64     $0
	call.64*    %r651 <- luaM_realloc_
	load.64*    %r654 <- 48[%arg2]
	cast.64*    %r655 <- (64) %r654
	load.32     %r657 <- 92[%arg2]
	scast.64    %r658 <- (32) %r657
	mulu.64     %r659 <- %r658, $16
	push.64*    %arg1
	push.64*    %r655
	push.64     %r659
	push.64     $0
	call.64*    %r660 <- luaM_realloc_
	load.64*    %r663 <- 56[%arg2]
	cast.64*    %r664 <- (64) %r663
	load.32     %r666 <- 72[%arg2]
	scast.64    %r667 <- (32) %r666
	mulu.64     %r668 <- %r667, $8
	push.64*    %arg1
	push.64*    %r664
	push.64     %r668
	push.64     $0
	call.64*    %r669 <- luaM_realloc_
	cast.64*    %r672 <- (64) %arg2
	push.64*    %arg1
	push.64*    %r672
	push.64     $120
	push.64     $0
	call.64*    %r673 <- luaM_realloc_
	ret


luaF_freeclosure:
.L142:
	<entry-point>
	load.8      %r675 <- 10[%arg2]
	cbr         %r675, .L143, .L144

.L143:
	load.8      %r677 <- 11[%arg2]
	cast.32     %r678 <- (8) %r677
	add.32      %r679 <- %r678, $-1
	scast.64    %r680 <- (32) %r679
	mulu.64     %r681 <- %r680, $16
	cast.32     %r682 <- (64) %r681
	add.32      %r683 <- %r682, $56
	phisrc.32   %phi203 <- %r683
	br          .L145

.L144:
	load.8      %r685 <- 11[%arg2]
	cast.32     %r686 <- (8) %r685
	add.32      %r687 <- %r686, $-1
	scast.64    %r688 <- (32) %r687
	mulu.64     %r689 <- %r688, $8
	cast.32     %r690 <- (64) %r689
	add.32      %r691 <- %r690, $48
	phisrc.32   %phi204 <- %r691
	br          .L145

.L145:
	phi.32      %r692 <- %phi203, %phi204
	cast.64*    %r695 <- (64) %arg2
	scast.64    %r697 <- (32) %r692
	push.64*    %arg1
	push.64*    %r695
	push.64     %r697
	push.64     $0
	call.64*    %r698 <- luaM_realloc_
	ret


luaD_seterrorobj:
.L147:
	<entry-point>
	switch.32   %arg2, 2 -> .L152, 3 -> .L152, 4 -> .L149, 5 -> .L150, default -> .L148

.L149:
	symaddr.64* %r702 <- <anon symbol:0x1aab110>
	push.64*    %arg1
	push.64*    %r702
	push.64     $17
	call.64*    %r703 <- luaS_newlstr
	ptrcast.64* %r704 <- (64) %r703
	store.64*   %r704 -> 0[%arg3]
	store.32    $4 -> 8[%arg3]
	br          .L148

.L150:
	symaddr.64* %r709 <- <anon symbol:0x1aaba20>
	push.64*    %arg1
	push.64*    %r709
	push.64     $23
	call.64*    %r710 <- luaS_newlstr
	ptrcast.64* %r711 <- (64) %r710
	store.64*   %r711 -> 0[%arg3]
	store.32    $4 -> 8[%arg3]
	br          .L148

.L152:
	load.64*    %r715 <- 16[%arg1]
	add.64*     %r716 <- %r715, $-16
	load.f64    %r719 <- 0[%r716]
	fpcast.f64  %r720 <- (64) %r719
	store.f64   %r720 -> 0[%arg3]
	load.32     %r723 <- -8[%r715]
	store.32    %r723 -> 8[%arg3]
	br          .L148

.L148:
	add.64*     %r727 <- %arg3, $16
	store.64*   %r727 -> 16[%arg1]
	ret


restore_stack_limit:
.L154:
	<entry-point>
	load.32     %r730 <- 92[%arg1]
	setgt.32    %r731 <- %r730, $0x4e20
	cbr         %r731, .L155, .L156

.L155:
	load.64*    %r733 <- 40[%arg1]
	load.64*    %r735 <- 80[%arg1]
	sub.64      %r736 <- %r733, %r735
	divs.64     %r737 <- %r736, $40
	scast.32    %r738 <- (64) %r737
	add.32      %r740 <- %r738, $1
	setlt.32    %r741 <- %r740, $0x4e20
	cbr         %r741, .L157, .L156

.L157:
	push.64*    %arg1
	push.32     $0x4e20
	call        luaD_reallocCI
	br          .L156

.L156:
	ret


resetstack:
.L159:
	<entry-point>
	load.64*    %r744 <- 80[%arg1]
	store.64*   %r744 -> 40[%arg1]
	load.64*    %r748 <- 0[%r744]
	store.64*   %r748 -> 24[%arg1]
	push.64*    %arg1
	push.64*    %r748
	call        luaF_close
	load.64*    %r756 <- 24[%arg1]
	push.64*    %arg1
	push.32     %arg2
	push.64*    %r756
	call        luaD_seterrorobj
	load.16     %r758 <- 98[%arg1]
	store.16    %r758 -> 96[%arg1]
	store.8     $1 -> 101[%arg1]
	push.64*    %arg1
	call        restore_stack_limit
	store.64    $0 -> 176[%arg1]
	store.64*   $0 -> 168[%arg1]
	ret


luaD_throw:
.L161:
	<entry-point>
	load.64*    %r765 <- 168[%arg1]
	cbr         %r765, .L162, .L163

.L162:
	store.32    %arg2 -> 208[%r765]
	load.64*    %r771 <- 168[%arg1]
	add.64*     %r772 <- %r771, $8
	push.64*    %r772
	push.32     $1
	call        longjmp
	br          .L164

.L163:
	scast.8     %r774 <- (32) %arg2
	store.8     %r774 -> 10[%arg1]
	load.64*    %r777 <- 32[%arg1]
	load.64*    %r778 <- 152[%r777]
	cbr         %r778, .L165, .L166

.L165:
	push.64*    %arg1
	push.32     %arg2
	call        resetstack
	push.64*    %arg1
	load.64*    %r783 <- 32[%arg1]
	load.64*    %r784 <- 152[%r783]
	call.32     %r785 <- %r784
	br          .L166

.L166:
	push.32     $1
	call        exit
	br          .L164

.L164:
	ret


luaD_rawrunprotected:
.L167:
	<entry-point>
	store.32    $0 -> 208[lj]
	load.64*    %r787 <- 168[%arg1]
	store.64*   %r787 -> 0[lj]
	symaddr.64* %r788 <- lj
	store.64*   %r788 -> 168[%arg1]
	add.64*     %r791 <- %r788, $8
	push.64*    %r791
	call.32     %r792 <- _setjmp
	cbr         %r792, .L169, .L168

.L168:
	push.64*    %arg1
	push.64*    %arg3
	call        %arg2
	br          .L169

.L169:
	load.64*    %r797 <- 0[lj]
	store.64*   %r797 -> 168[%arg1]
	load.32     %r799 <- 208[lj]
	ret.32      %r799


correctstack:
.L171:
	<entry-point>
	load.64*    %r803 <- 64[%arg1]
	load.64*    %r805 <- 16[%arg1]
	sub.64      %r807 <- %r805, %arg2
	divs.64     %r808 <- %r807, $16
	muls.64     %r809 <- %r808, $16
	add.64*     %r810 <- %r803, %r809
	store.64*   %r810 -> 16[%arg1]
	load.64*    %r813(up) <- 152[%arg1]
	phisrc.64*  %phi253(up) <- %r813(up)
	phisrc.64*  %phi259 <- %r803
	phisrc.64*  %phi260 <- %r803
	phisrc.64*  %phi261 <- %r803
	phisrc.64*  %phi262 <- %r803
	br          .L175

.L175:
	phi.64*     %r814(up) <- %phi253(up), %phi254(up)
	cbr         %r814(up), .L172, .L174

.L172:
	load.64*    %r817 <- 64[%arg1]
	load.64*    %r819 <- 16[%r814(up)]
	sub.64      %r821 <- %r819, %arg2
	divs.64     %r822 <- %r821, $16
	muls.64     %r823 <- %r822, $16
	add.64*     %r824 <- %r817, %r823
	store.64*   %r824 -> 16[%r814(up)]
	load.64*    %r827 <- 0[%r814(up)]
	phisrc.64*  %phi254(up) <- %r827
	br          .L175

.L174:
	load.64*    %r829(ci) <- 80[%arg1]
	phisrc.64*  %phi257(ci) <- %r829(ci)
	br          .L179

.L179:
	phi.64*     %r830(ci) <- %phi257(ci), %phi258(ci)
	load.64*    %r832 <- 40[%arg1]
	setbe.32    %r833 <- %r830(ci), %r832
	cbr         %r833, .L176, .L178

.L176:
	load.64*    %r835 <- 64[%arg1]
	load.64*    %r837 <- 16[%r830(ci)]
	sub.64      %r839 <- %r837, %arg2
	divs.64     %r840 <- %r839, $16
	muls.64     %r841 <- %r840, $16
	add.64*     %r842 <- %r835, %r841
	store.64*   %r842 -> 16[%r830(ci)]
	load.64*    %r845 <- 64[%arg1]
	load.64*    %r847 <- 0[%r830(ci)]
	sub.64      %r849 <- %r847, %arg2
	divs.64     %r850 <- %r849, $16
	muls.64     %r851 <- %r850, $16
	add.64*     %r852 <- %r845, %r851
	store.64*   %r852 -> 0[%r830(ci)]
	load.64*    %r855 <- 64[%arg1]
	load.64*    %r857 <- 8[%r830(ci)]
	sub.64      %r859 <- %r857, %arg2
	divs.64     %r860 <- %r859, $16
	muls.64     %r861 <- %r860, $16
	add.64*     %r862 <- %r855, %r861
	store.64*   %r862 -> 8[%r830(ci)]
	add.64*     %r865 <- %r830(ci), $40
	phisrc.64*  %phi258(ci) <- %r865
	br          .L179

.L178:
	load.64*    %r867 <- 64[%arg1]
	load.64*    %r869 <- 24[%arg1]
	sub.64      %r871 <- %r869, %arg2
	divs.64     %r872 <- %r871, $16
	muls.64     %r873 <- %r872, $16
	add.64*     %r874 <- %r867, %r873
	store.64*   %r874 -> 24[%arg1]
	ret


luaD_reallocstack:
.L181:
	<entry-point>
	load.64*    %r877(oldstack) <- 64[%arg1]
	add.32      %r880 <- %arg2, $6
	add.32      %r882 <- %r880, $1
	scast.64    %r883 <- (32) %r882
	setbe.32    %r884 <- %r883, $0xfffffffffffffff
	cbr         %r884, .L182, .L183

.L182:
	cast.64*    %r888 <- (64) %r877(oldstack)
	load.32     %r890 <- 88[%arg1]
	scast.64    %r891 <- (32) %r890
	mulu.64     %r892 <- %r891, $16
	scast.64    %r894 <- (32) %r880
	mulu.64     %r895 <- %r894, $16
	push.64*    %arg1
	push.64*    %r888
	push.64     %r892
	push.64     %r895
	call.64*    %r896 <- luaM_realloc_
	phisrc.64*  %phi263 <- %r896
	br          .L184

.L183:
	push.64*    %arg1
	call.64*    %r898 <- luaM_toobig
	cast.64*    %r899 <- (64) %r898
	phisrc.64*  %phi264 <- %r899
	br          .L184

.L184:
	phi.64*     %r900 <- %phi263, %phi264
	ptrcast.64* %r901 <- (64) %r900
	store.64*   %r901 -> 64[%arg1]
	store.32    %r880 -> 88[%arg1]
	scast.64    %r908 <- (32) %arg2
	muls.64     %r909 <- %r908, $16
	add.64*     %r910 <- %r901, %r909
	store.64*   %r910 -> 56[%arg1]
	push.64*    %arg1
	push.64*    %r877(oldstack)
	call        correctstack
	ret


luaD_reallocCI:
.L186:
	<entry-point>
	load.64*    %r915(oldci) <- 80[%arg1]
	add.32      %r917 <- %arg2, $1
	scast.64    %r918 <- (32) %r917
	setbe.32    %r919 <- %r918, $0x666666666666666
	cbr         %r919, .L187, .L188

.L187:
	cast.64*    %r923 <- (64) %r915(oldci)
	load.32     %r925 <- 92[%arg1]
	scast.64    %r926 <- (32) %r925
	mulu.64     %r927 <- %r926, $40
	scast.64    %r929 <- (32) %arg2
	mulu.64     %r930 <- %r929, $40
	push.64*    %arg1
	push.64*    %r923
	push.64     %r927
	push.64     %r930
	call.64*    %r931 <- luaM_realloc_
	phisrc.64*  %phi275 <- %r931
	br          .L189

.L188:
	push.64*    %arg1
	call.64*    %r933 <- luaM_toobig
	cast.64*    %r934 <- (64) %r933
	phisrc.64*  %phi276 <- %r934
	br          .L189

.L189:
	phi.64*     %r935 <- %phi275, %phi276
	ptrcast.64* %r936 <- (64) %r935
	store.64*   %r936 -> 80[%arg1]
	store.32    %arg2 -> 92[%arg1]
	load.64*    %r943 <- 40[%arg1]
	sub.64      %r945 <- %r943, %r915(oldci)
	divs.64     %r946 <- %r945, $40
	muls.64     %r947 <- %r946, $40
	add.64*     %r948 <- %r936, %r947
	store.64*   %r948 -> 40[%arg1]
	scast.64    %r954 <- (32) %arg2
	muls.64     %r955 <- %r954, $40
	add.64*     %r956 <- %r936, %r955
	add.64*     %r957 <- %r956, $-40
	store.64*   %r957 -> 72[%arg1]
	ret


luaD_growstack:
.L191:
	<entry-point>
	load.32     %r961 <- 88[%arg1]
	setle.32    %r962 <- %arg2, %r961
	cbr         %r962, .L192, .L193

.L192:
	muls.32     %r966 <- %r961, $2
	push.64*    %arg1
	push.32     %r966
	call        luaD_reallocstack
	br          .L194

.L193:
	add.32      %r971 <- %r961, %arg2
	push.64*    %arg1
	push.32     %r971
	call        luaD_reallocstack
	br          .L194

.L194:
	ret


growCI:
.L195:
	<entry-point>
	load.32     %r973 <- 92[%arg1]
	setgt.32    %r974 <- %r973, $0x4e20
	cbr         %r974, .L196, .L197

.L196:
	push.64*    %arg1
	push.32     $5
	call        luaD_throw
	br          .L198

.L197:
	muls.32     %r979 <- %r973, $2
	push.64*    %arg1
	push.32     %r979
	call        luaD_reallocCI
	load.32     %r981 <- 92[%arg1]
	setgt.32    %r982 <- %r981, $0x4e20
	cbr         %r982, .L199, .L198

.L199:
	symaddr.64* %r984 <- <anon symbol:0x1ab2170>
	push.64*    %arg1
	push.64*    %r984
	call        luaG_runerror
	br          .L198

.L198:
	load.64*    %r986 <- 40[%arg1]
	add.64*     %r987 <- %r986, $40
	store.64*   %r987 -> 40[%arg1]
	ret.64*     %r987


adjust_varargs:
.L202:
	<entry-point>
	load.8      %r990 <- 113[%arg2]
	cast.32     %r991(nfixargs) <- (8) %r990
	phisrc.32   %phi306(actual) <- %arg3
	br          .L206

.L206:
	phi.32      %r992(actual) <- %phi306(actual), %phi307(actual)
	setlt.32    %r994 <- %r992(actual), %r991(nfixargs)
	cbr         %r994, .L203, .L205

.L203:
	load.64*    %r996 <- 16[%arg1]
	add.64*     %r997 <- %r996, $16
	store.64*   %r997 -> 16[%arg1]
	store.32    $0 -> 8[%r996]
	add.32      %r999 <- %r992(actual), $1
	phisrc.32   %phi307(actual) <- %r999
	br          .L206

.L205:
	load.64*    %r1001 <- 16[%arg1]
	scast.64    %r1003 <- (32) %r992(actual)
	muls.64     %r1004 <- %r1003, $16
	sub.64*     %r1005(fixed) <- %r1001, %r1004
	phisrc.32   %phi314(i) <- $0
	phisrc.64*  %phi316(base) <- %r1001
	phisrc.64*  %phi317 <- %r1001
	br          .L210

.L210:
	phi.32      %r1008(i) <- %phi314(i), %phi315(i)
	setlt.32    %r1010 <- %r1008(i), %r991(nfixargs)
	cbr         %r1010, .L207, .L213

.L207:
	scast.64    %r1013 <- (32) %r1008(i)
	muls.64     %r1014 <- %r1013, $16
	add.64*     %r1015 <- %r1005(fixed), %r1014
	load.64*    %r1017 <- 16[%arg1]
	add.64*     %r1018 <- %r1017, $16
	store.64*   %r1018 -> 16[%arg1]
	load.f64    %r1020 <- 0[%r1015]
	fpcast.f64  %r1021 <- (64) %r1020
	store.f64   %r1021 -> 0[%r1017]
	load.32     %r1024 <- 8[%r1015]
	store.32    %r1024 -> 8[%r1017]
	store.32    $0 -> 8[%r1015]
	add.32      %r1033 <- %r1008(i), $1
	phisrc.32   %phi315(i) <- %r1033
	br          .L210

.L213:
	ret.64*     %r1001


tryfuncTM:
.L214:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	push.32     $16
	call.64*    %r1043 <- luaT_gettmbyobj
	ptrcast.64* %r1045 <- (64) %arg2
	load.64*    %r1047 <- 64[%arg1]
	ptrcast.64* %r1048 <- (64) %r1047
	sub.64      %r1049(funcr) <- %r1045, %r1048
	load.32     %r1051 <- 8[%r1043]
	seteq.32    %r1053 <- %r1051, $6
	cbr         %r1053, .L216, .L215

.L215:
	symaddr.64* %r1056 <- <anon symbol:0x1abbde0>
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %r1056
	call        luaG_typeerror
	br          .L216

.L216:
	load.64*    %r1058(p) <- 16[%arg1]
	phisrc.64*  %phi333(p) <- %r1058(p)
	phisrc.64*  %phi335(p) <- %r1058(p)
	phisrc.64*  %phi336(p) <- %r1058(p)
	phisrc.64*  %phi337(p) <- %r1058(p)
	br          .L220

.L220:
	phi.64*     %r1059(p) <- %phi333(p), %phi334(p)
	seta.32     %r1061 <- %r1059(p), %arg2
	cbr         %r1061, .L217, .L219

.L217:
	add.64*     %r1063 <- %r1059(p), $-16
	load.f64    %r1066 <- 0[%r1063]
	fpcast.f64  %r1067 <- (64) %r1066
	store.f64   %r1067 -> 0[%r1059(p)]
	load.32     %r1070 <- -8[%r1059(p)]
	store.32    %r1070 -> 8[%r1059(p)]
	phisrc.64*  %phi334(p) <- %r1063
	br          .L220

.L219:
	load.64*    %r1076 <- 56[%arg1]
	ptrcast.64* %r1077 <- (64) %r1076
	load.64*    %r1079 <- 16[%arg1]
	ptrcast.64* %r1080 <- (64) %r1079
	sub.64      %r1081 <- %r1077, %r1080
	setle.32    %r1082 <- %r1081, $16
	cbr         %r1082, .L221, .L223

.L221:
	push.64*    %arg1
	push.32     $1
	call        luaD_growstack
	br          .L223

.L223:
	load.64*    %r1085 <- 16[%arg1]
	add.64*     %r1086 <- %r1085, $16
	store.64*   %r1086 -> 16[%arg1]
	load.64*    %r1088 <- 64[%arg1]
	ptrcast.64* %r1089 <- (64) %r1088
	add.64*     %r1091 <- %r1089, %r1049(funcr)
	ptrcast.64* %r1092 <- (64) %r1091
	load.f64    %r1096 <- 0[%r1043]
	fpcast.f64  %r1097 <- (64) %r1096
	store.f64   %r1097 -> 0[%r1092]
	load.32     %r1100 <- 8[%r1043]
	store.32    %r1100 -> 8[%r1092]
	ret.64*     %r1092


luaD_precall:
.L225:
	<entry-point>
	load.32     %r1106 <- 8[%arg2]
	seteq.32    %r1107 <- %r1106, $6
	phisrc.64*  %phi376(func) <- %arg2
	cbr         %r1107, .L227, .L226

.L226:
	push.64*    %arg1
	push.64*    %arg2
	call.64*    %r1110 <- tryfuncTM
	phisrc.64*  %phi377(func) <- %r1110
	br          .L227

.L227:
	phi.64*     %r1111 <- %phi376(func), %phi377(func)
	ptrcast.64* %r1112 <- (64) %r1111
	load.64*    %r1114 <- 64[%arg1]
	ptrcast.64* %r1115 <- (64) %r1114
	sub.64      %r1116(funcr) <- %r1112, %r1115
	load.64*    %r1118 <- 0[%r1111]
	load.64*    %r1122 <- 48[%arg1]
	load.64*    %r1124 <- 40[%arg1]
	store.64*   %r1122 -> 24[%r1124]
	load.8      %r1126 <- 10[%r1118]
	cbr         %r1126, .L229, .L228

.L228:
	load.64*    %r1128 <- 32[%r1118]
	load.64*    %r1130 <- 56[%arg1]
	ptrcast.64* %r1131 <- (64) %r1130
	load.64*    %r1133 <- 16[%arg1]
	ptrcast.64* %r1134 <- (64) %r1133
	sub.64      %r1135 <- %r1131, %r1134
	load.8      %r1137 <- 115[%r1128]
	cast.32     %r1138 <- (8) %r1137
	muls.32     %r1139 <- %r1138, $16
	scast.64    %r1140 <- (32) %r1139
	setle.32    %r1141 <- %r1135, %r1140
	cbr         %r1141, .L230, .L232

.L230:
	push.64*    %arg1
	push.32     %r1138
	call        luaD_growstack
	br          .L232

.L232:
	load.64*    %r1147 <- 64[%arg1]
	ptrcast.64* %r1148 <- (64) %r1147
	add.64*     %r1150 <- %r1148, %r1116(funcr)
	ptrcast.64* %r1151(func) <- (64) %r1150
	load.8      %r1153 <- 114[%r1128]
	cbr         %r1153, .L234, .L233

.L233:
	add.64*     %r1155 <- %r1151(func), $16
	load.64*    %r1157 <- 16[%arg1]
	load.8      %r1160 <- 113[%r1128]
	cast.64     %r1161 <- (8) %r1160
	muls.64     %r1162 <- %r1161, $16
	add.64*     %r1163 <- %r1155, %r1162
	seta.32     %r1164 <- %r1157, %r1163
	phisrc.64*  %phi372(func) <- %r1151(func)
	phisrc.64*  %phi394(base) <- %r1155
	cbr         %r1164, .L235, .L237

.L235:
	store.64*   %r1163 -> 16[%arg1]
	phisrc.64*  %phi395(base) <- %r1155
	br          .L237

.L234:
	load.64*    %r1173 <- 16[%arg1]
	sub.64      %r1175 <- %r1173, %r1151(func)
	divs.64     %r1176 <- %r1175, $16
	scast.32    %r1177 <- (64) %r1176
	add.32      %r1178 <- %r1177, $-1
	push.64*    %arg1
	push.64*    %r1128
	push.32     %r1178
	call.64*    %r1182 <- adjust_varargs
	load.64*    %r1184 <- 64[%arg1]
	ptrcast.64* %r1185 <- (64) %r1184
	add.64*     %r1187 <- %r1185, %r1116(funcr)
	ptrcast.64* %r1188 <- (64) %r1187
	phisrc.64*  %phi373(func) <- %r1188
	phisrc.64*  %phi396(base) <- %r1182
	br          .L237

.L237:
	load.64*    %r1190 <- 40[%arg1]
	load.64*    %r1192 <- 72[%arg1]
	seteq.32    %r1193 <- %r1190, %r1192
	cbr         %r1193, .L238, .L239

.L238:
	push.64*    %arg1
	call.64*    %r1195 <- growCI
	phisrc.64*  %phi338 <- %r1195
	br          .L240

.L239:
	add.64*     %r1198 <- %r1190, $40
	store.64*   %r1198 -> 40[%arg1]
	ptrcast.64* %r1199 <- (64) %r1198
	phisrc.64*  %phi339 <- %r1199
	br          .L240

.L240:
	phi.64*     %r1200 <- %phi338, %phi339
	phi.64*     %r1201 <- %phi372(func), %phi373(func)
	store.64*   %r1201 -> 8[%r1200]
	phi.64*     %r1203 <- %phi394(base), %phi395(base), %phi396(base)
	store.64*   %r1203 -> 0[%r1200]
	store.64*   %r1203 -> 24[%arg1]
	load.8      %r1209 <- 115[%r1128]
	cast.64     %r1210 <- (8) %r1209
	muls.64     %r1211 <- %r1210, $16
	add.64*     %r1212 <- %r1203, %r1211
	store.64*   %r1212 -> 16[%r1200]
	load.64*    %r1215 <- 24[%r1128]
	store.64*   %r1215 -> 48[%arg1]
	store.32    $0 -> 36[%r1200]
	store.32    %arg3 -> 32[%r1200]
	load.64*    %r1221(st) <- 16[%arg1]
	phisrc.64*  %phi402(st) <- %r1221(st)
	br          .L244

.L244:
	phi.64*     %r1222(st) <- %phi402(st), %phi403(st)
	load.64*    %r1224 <- 16[%r1200]
	setb.32     %r1225 <- %r1222(st), %r1224
	cbr         %r1225, .L241, .L243

.L241:
	store.32    $0 -> 8[%r1222(st)]
	add.64*     %r1228 <- %r1222(st), $16
	phisrc.64*  %phi403(st) <- %r1228
	br          .L244

.L243:
	store.64*   %r1224 -> 16[%arg1]
	phisrc.32   %phi340(return) <- $0
	br          .L245

.L229:
	load.64*    %r1234 <- 56[%arg1]
	ptrcast.64* %r1235 <- (64) %r1234
	load.64*    %r1237 <- 16[%arg1]
	ptrcast.64* %r1238 <- (64) %r1237
	sub.64      %r1239 <- %r1235, %r1238
	setle.32    %r1240 <- %r1239, $320
	cbr         %r1240, .L247, .L249

.L247:
	push.64*    %arg1
	push.32     $20
	call        luaD_growstack
	br          .L249

.L249:
	load.64*    %r1243 <- 40[%arg1]
	load.64*    %r1245 <- 72[%arg1]
	seteq.32    %r1246 <- %r1243, %r1245
	cbr         %r1246, .L250, .L251

.L250:
	push.64*    %arg1
	call.64*    %r1248 <- growCI
	phisrc.64*  %phi341 <- %r1248
	br          .L252

.L251:
	add.64*     %r1251 <- %r1243, $40
	store.64*   %r1251 -> 40[%arg1]
	ptrcast.64* %r1252 <- (64) %r1251
	phisrc.64*  %phi342 <- %r1252
	br          .L252

.L252:
	phi.64*     %r1253 <- %phi341, %phi342
	load.64*    %r1255 <- 64[%arg1]
	ptrcast.64* %r1256 <- (64) %r1255
	add.64*     %r1258 <- %r1256, %r1116(funcr)
	ptrcast.64* %r1259 <- (64) %r1258
	store.64*   %r1259 -> 8[%r1253]
	add.64*     %r1263 <- %r1259, $16
	store.64*   %r1263 -> 0[%r1253]
	store.64*   %r1263 -> 24[%arg1]
	load.64*    %r1267 <- 16[%arg1]
	add.64*     %r1268 <- %r1267, $320
	store.64*   %r1268 -> 16[%r1253]
	store.32    %arg3 -> 32[%r1253]
	push.64*    %arg1
	load.64*    %r1274 <- 40[%arg1]
	load.64*    %r1275 <- 8[%r1274]
	load.64*    %r1276 <- 0[%r1275]
	load.64*    %r1277 <- 32[%r1276]
	call.32     %r1278 <- %r1277
	setlt.32    %r1280 <- %r1278, $0
	cbr         %r1280, .L253, .L254

.L253:
	phisrc.32   %phi343(return) <- $2
	br          .L245

.L254:
	load.64*    %r1283 <- 16[%arg1]
	scast.64    %r1285 <- (32) %r1278
	muls.64     %r1286 <- %r1285, $16
	sub.64*     %r1287 <- %r1283, %r1286
	push.64*    %arg1
	push.64*    %r1287
	call.32     %r1288 <- luaD_poscall
	phisrc.32   %phi344(return) <- $1
	br          .L245

.L245:
	phi.32      %r1232 <- %phi340(return), %phi343(return), %phi344(return)
	ret.32      %r1232


luaD_poscall:
.L256:
	<entry-point>
	load.64*    %r1290 <- 40[%arg1]
	add.64*     %r1291 <- %r1290, $-40
	store.64*   %r1291 -> 40[%arg1]
	load.64*    %r1293(res) <- 8[%r1290]
	load.32     %r1295(i) <- 32[%r1290]
	load.64*    %r1298 <- -40[%r1290]
	store.64*   %r1298 -> 24[%arg1]
	load.64*    %r1302 <- -16[%r1290]
	store.64*   %r1302 -> 48[%arg1]
	phisrc.64*  %phi415(firstResult) <- %arg2
	phisrc.64*  %phi420(res) <- %r1293(res)
	phisrc.64*  %phi423(res) <- %r1293(res)
	phisrc.32   %phi429(i) <- %r1295(i)
	br          .L260

.L260:
	phi.32      %r1305(i) <- %phi429(i), %phi430(i)
	phisrc.32   %phi426(i) <- %r1305(i)
	cbr         %r1305(i), .L261, .L265

.L261:
	phi.64*     %r1307(firstResult) <- %phi415(firstResult), %phi416(firstResult)
	load.64*    %r1309 <- 16[%arg1]
	setb.32     %r1310 <- %r1307(firstResult), %r1309
	cbr         %r1310, .L257, .L265

.L257:
	add.64*     %r1312 <- %r1307(firstResult), $16
	phi.64*     %r1313 <- %phi423(res), %phi424(res)
	add.64*     %r1314 <- %r1313, $16
	load.f64    %r1316 <- 0[%r1307(firstResult)]
	fpcast.f64  %r1317 <- (64) %r1316
	store.f64   %r1317 -> 0[%r1313]
	load.32     %r1320 <- 8[%r1307(firstResult)]
	store.32    %r1320 -> 8[%r1313]
	phisrc.64*  %phi416(firstResult) <- %r1312
	phisrc.64*  %phi421(res) <- %r1314
	phisrc.64*  %phi424(res) <- %r1314
	add.32      %r1324 <- %r1305(i), $-1
	phisrc.32   %phi430(i) <- %r1324
	br          .L260

.L265:
	phi.32      %r1325 <- %phi426(i), %phi427(i)
	add.32      %r1326 <- %r1325, $-1
	setgt.32    %r1327 <- %r1325, $0
	phisrc.32   %phi427(i) <- %r1326
	phi.64*     %r1328 <- %phi420(res), %phi421(res), %phi422(res)
	cbr         %r1327, .L262, .L264

.L262:
	add.64*     %r1329 <- %r1328, $16
	store.32    $0 -> 8[%r1328]
	phisrc.64*  %phi422(res) <- %r1329
	br          .L265

.L264:
	store.64*   %r1328 -> 16[%arg1]
	add.32      %r1333 <- %r1295(i), $0xffffffff00000001
	ret.32      %r1333


luaD_call:
.L267:
	<entry-point>
	load.16     %r1336 <- 96[%arg1]
	add.16      %r1337 <- %r1336, $1
	store.16    %r1337 -> 96[%arg1]
	cast.32     %r1338 <- (16) %r1337
	setge.32    %r1339 <- %r1338, $200
	cbr         %r1339, .L268, .L269

.L268:
	cast.32     %r1342 <- (16) %r1337
	seteq.32    %r1343 <- %r1342, $200
	cbr         %r1343, .L270, .L271

.L270:
	symaddr.64* %r1345 <- <anon symbol:0x1ac2700>
	push.64*    %arg1
	push.64*    %r1345
	call        luaG_runerror
	br          .L269

.L271:
	cast.32     %r1348 <- (16) %r1337
	setge.32    %r1349 <- %r1348, $225
	cbr         %r1349, .L273, .L269

.L273:
	push.64*    %arg1
	push.32     $5
	call        luaD_throw
	br          .L269

.L269:
	push.64*    %arg1
	push.64*    %arg2
	push.32     %arg3
	call.32     %r1354 <- luaD_precall
	cbr         %r1354, .L276, .L275

.L275:
	push.64*    %arg1
	push.32     $1
	call        luaV_execute
	br          .L276

.L276:
	load.16     %r1358 <- 96[%arg1]
	add.16      %r1359 <- %r1358, $-1
	store.16    %r1359 -> 96[%arg1]
	load.64*    %r1361 <- 32[%arg1]
	load.64     %r1362 <- 120[%r1361]
	load.64     %r1365 <- 112[%r1361]
	setae.32    %r1366 <- %r1362, %r1365
	cbr         %r1366, .L277, .L278

.L277:
	push.64*    %arg1
	call        luaC_step
	br          .L278

.L278:
	ret


luaD_pcall:
.L279:
	<entry-point>
	load.16     %r1369(oldnCcalls) <- 96[%arg1]
	load.64*    %r1371 <- 40[%arg1]
	ptrcast.64* %r1372 <- (64) %r1371
	load.64*    %r1374 <- 80[%arg1]
	ptrcast.64* %r1375 <- (64) %r1374
	sub.64      %r1376(old_ci) <- %r1372, %r1375
	load.8      %r1378(old_allowhooks) <- 101[%arg1]
	load.64     %r1380(old_errfunc) <- 176[%arg1]
	store.64    %arg5 -> 176[%arg1]
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.32     %r1386 <- luaD_rawrunprotected
	cbr         %r1386, .L280, .L281

.L280:
	load.64*    %r1390 <- 64[%arg1]
	ptrcast.64* %r1391 <- (64) %r1390
	add.64*     %r1393 <- %r1391, %arg4
	ptrcast.64* %r1394 <- (64) %r1393
	push.64*    %arg1
	push.64*    %r1394
	call        luaF_close
	push.64*    %arg1
	push.32     %r1386
	push.64*    %r1394
	call        luaD_seterrorobj
	store.16    %r1369(oldnCcalls) -> 96[%arg1]
	load.64*    %r1403 <- 80[%arg1]
	ptrcast.64* %r1404 <- (64) %r1403
	add.64*     %r1406 <- %r1404, %r1376(old_ci)
	ptrcast.64* %r1407 <- (64) %r1406
	store.64*   %r1407 -> 40[%arg1]
	load.64*    %r1411 <- 0[%r1407]
	store.64*   %r1411 -> 24[%arg1]
	load.64*    %r1415 <- 24[%r1407]
	store.64*   %r1415 -> 48[%arg1]
	store.8     %r1378(old_allowhooks) -> 101[%arg1]
	push.64*    %arg1
	call        restore_stack_limit
	br          .L281

.L281:
	store.64    %r1380(old_errfunc) -> 176[%arg1]
	ret.32      %r1386


f_parser:
.L283:
	<entry-point>
	ptrcast.64* %r1425(p) <- (64) %arg2
	load.64*    %r1427 <- 32[%arg1]
	load.64     %r1428 <- 120[%r1427]
	load.64     %r1431 <- 112[%r1427]
	setae.32    %r1432 <- %r1428, %r1431
	cbr         %r1432, .L284, .L285

.L284:
	push.64*    %arg1
	call        luaC_step
	br          .L285

.L285:
	load.64*    %r1436 <- 0[%r1425(p)]
	add.64*     %r1438 <- %r1425(p), $8
	load.64*    %r1440 <- 32[%r1425(p)]
	push.64*    %arg1
	push.64*    %r1436
	push.64*    %r1438
	push.64*    %r1440
	call.64*    %r1441 <- luaY_parser
	load.8      %r1444 <- 112[%r1441]
	cast.32     %r1445 <- (8) %r1444
	load.64*    %r1447 <- 120[%arg1]
	push.64*    %arg1
	push.32     %r1445
	push.64*    %r1447
	call.64*    %r1449 <- luaF_newLclosure
	store.64*   %r1441 -> 32[%r1449]
	phisrc.32   %phi475(i) <- $0
	br          .L289

.L289:
	phi.32      %r1452(i) <- %phi475(i), %phi476(i)
	load.8      %r1454 <- 112[%r1441]
	cast.32     %r1455 <- (8) %r1454
	setlt.32    %r1456 <- %r1452(i), %r1455
	cbr         %r1456, .L286, .L288

.L286:
	push.64*    %arg1
	call.64*    %r1458 <- luaF_newupval
	add.64*     %r1461 <- %r1449, $40
	scast.64    %r1463 <- (32) %r1452(i)
	muls.64     %r1464 <- %r1463, $8
	add.64*     %r1465 <- %r1461, %r1464
	store.64*   %r1458 -> 0[%r1465]
	add.32      %r1467 <- %r1452(i), $1
	phisrc.32   %phi476(i) <- %r1467
	br          .L289

.L288:
	load.64*    %r1469 <- 16[%arg1]
	ptrcast.64* %r1471 <- (64) %r1449
	store.64*   %r1471 -> 0[%r1469]
	store.32    $6 -> 8[%r1469]
	load.64*    %r1475 <- 56[%arg1]
	ptrcast.64* %r1476 <- (64) %r1475
	load.64*    %r1478 <- 16[%arg1]
	ptrcast.64* %r1479 <- (64) %r1478
	sub.64      %r1480 <- %r1476, %r1479
	setle.32    %r1481 <- %r1480, $16
	cbr         %r1481, .L290, .L292

.L290:
	push.64*    %arg1
	push.32     $1
	call        luaD_growstack
	br          .L292

.L292:
	load.64*    %r1484 <- 16[%arg1]
	add.64*     %r1485 <- %r1484, $16
	store.64*   %r1485 -> 16[%arg1]
	ret


luaD_protectedparser:
.L294:
	<entry-point>
	store.64*   %arg2 -> 0[p]
	store.64*   %arg3 -> 32[p]
	store.64*   $0 -> 8[p]
	store.64    $0 -> 24[p]
	symaddr.64* %r1489 <- f_parser
	symaddr.64* %r1490 <- p
	cast.64*    %r1491 <- (64) %r1490
	load.64*    %r1493 <- 16[%arg1]
	ptrcast.64* %r1494 <- (64) %r1493
	load.64*    %r1496 <- 64[%arg1]
	ptrcast.64* %r1497 <- (64) %r1496
	sub.64      %r1498 <- %r1494, %r1497
	load.64     %r1500 <- 176[%arg1]
	push.64*    %arg1
	push.64*    %r1489
	push.64*    %r1491
	push.64     %r1498
	push.64     %r1500
	call.32     %r1501 <- luaD_pcall
	load.64*    %r1503 <- 8[p]
	cast.64*    %r1504 <- (64) %r1503
	load.64     %r1505 <- 24[p]
	push.64*    %arg1
	push.64*    %r1504
	push.64     %r1505
	push.64     $0
	call.64*    %r1507 <- luaM_realloc_
	ret.32      %r1501


luaS_resize:
.L296:
	<entry-point>
	load.64*    %r1512 <- 32[%arg1]
	load.8      %r1513 <- 33[%r1512]
	cast.32     %r1514 <- (8) %r1513
	seteq.32    %r1515 <- %r1514, $2
	cbr         %r1515, .L299, .L298

.L298:
	add.32      %r1517 <- %arg2, $1
	scast.64    %r1518 <- (32) %r1517
	setbe.32    %r1519 <- %r1518, $0x1fffffffffffffff
	cbr         %r1519, .L300, .L301

.L300:
	scast.64    %r1522 <- (32) %arg2
	mulu.64     %r1523 <- %r1522, $8
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     %r1523
	call.64*    %r1524 <- luaM_realloc_
	phisrc.64*  %phi478 <- %r1524
	br          .L302

.L301:
	push.64*    %arg1
	call.64*    %r1526 <- luaM_toobig
	cast.64*    %r1527 <- (64) %r1526
	phisrc.64*  %phi479 <- %r1527
	br          .L302

.L302:
	phi.64*     %r1528 <- %phi478, %phi479
	ptrcast.64* %r1529(newhash) <- (64) %r1528
	load.64*    %r1531 <- 32[%arg1]
	phisrc.32   %phi507(i) <- $0
	br          .L306

.L306:
	phi.32      %r1533(i) <- %phi507(i), %phi508(i)
	setlt.32    %r1535 <- %r1533(i), %arg2
	cbr         %r1535, .L303, .L305

.L303:
	scast.64    %r1538 <- (32) %r1533(i)
	muls.64     %r1539 <- %r1538, $8
	add.64*     %r1540 <- %r1529(newhash), %r1539
	store.64*   $0 -> 0[%r1540]
	add.32      %r1542 <- %r1533(i), $1
	phisrc.32   %phi508(i) <- %r1542
	br          .L306

.L305:
	phisrc.32   %phi503(i) <- $0
	br          .L310

.L310:
	phi.32      %r1543(i) <- %phi503(i), %phi504(i)
	load.32     %r1545 <- 12[%r1531]
	setlt.32    %r1546 <- %r1543(i), %r1545
	cbr         %r1546, .L307, .L309

.L307:
	load.64*    %r1548 <- 0[%r1531]
	scast.64    %r1550 <- (32) %r1543(i)
	muls.64     %r1551 <- %r1550, $8
	add.64*     %r1552 <- %r1548, %r1551
	load.64*    %r1553(p) <- 0[%r1552]
	phisrc.64*  %phi510(p) <- %r1553(p)
	br          .L314

.L314:
	phi.64*     %r1554(p) <- %phi510(p), %phi511(p)
	cbr         %r1554(p), .L311, .L308

.L311:
	load.64*    %r1556 <- 0[%r1554(p)]
	load.32     %r1558 <- 12[%r1554(p)]
	add.32      %r1561 <- %arg2, $-1
	and.32      %r1563 <- %r1558, %r1561
	scast.64    %r1567 <- (32) %r1563
	muls.64     %r1568 <- %r1567, $8
	add.64*     %r1569 <- %r1529(newhash), %r1568
	load.64*    %r1570 <- 0[%r1569]
	store.64*   %r1570 -> 0[%r1554(p)]
	store.64*   %r1554(p) -> 0[%r1569]
	phisrc.64*  %phi511(p) <- %r1556
	br          .L314

.L308:
	add.32      %r1580 <- %r1543(i), $1
	phisrc.32   %phi504(i) <- %r1580
	br          .L310

.L309:
	load.64*    %r1583 <- 0[%r1531]
	cast.64*    %r1584 <- (64) %r1583
	scast.64    %r1587 <- (32) %r1545
	mulu.64     %r1588 <- %r1587, $8
	push.64*    %arg1
	push.64*    %r1584
	push.64     %r1588
	push.64     $0
	call.64*    %r1589 <- luaM_realloc_
	store.32    %arg2 -> 12[%r1531]
	store.64*   %r1529(newhash) -> 0[%r1531]
	br          .L299

.L299:
	ret


newlstr:
.L315:
	<entry-point>
	add.64      %r1595 <- %arg3, $1
	seta.32     %r1596 <- %r1595, $-27
	cbr         %r1596, .L316, .L317

.L316:
	push.64*    %arg1
	call.64*    %r1598 <- luaM_toobig
	br          .L317

.L317:
	add.64      %r1603 <- %arg3, $25
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     %r1603
	call.64*    %r1604 <- luaM_realloc_
	ptrcast.64* %r1605 <- (64) %r1604
	store.64    %arg3 -> 16[%r1605]
	store.32    %arg4 -> 12[%r1605]
	load.64*    %r1611 <- 32[%arg1]
	load.8      %r1612 <- 32[%r1611]
	cast.32     %r1613 <- (8) %r1612
	and.32      %r1614 <- %r1613, $3
	store.8     %r1614 -> 9[%r1605]
	store.8     $4 -> 8[%r1605]
	store.8     $0 -> 10[%r1605]
	add.64*     %r1620 <- %r1605, $24
	cast.64*    %r1621 <- (64) %r1620
	cast.64*    %r1623 <- (64) %arg2
	push.64*    %r1621
	push.64*    %r1623
	push.64     %arg3
	call.64*    %r1626 <- memcpy
	ptrcast.64* %r1629 <- (64) %r1620
	add.64*     %r1631 <- %r1629, %arg3
	store.8     $0 -> 0[%r1631]
	load.64*    %r1633 <- 32[%arg1]
	load.32     %r1637 <- 12[%r1633]
	add.32      %r1638 <- %r1637, $-1
	and.32      %r1640 <- %arg4, %r1638
	load.64*    %r1644 <- 0[%r1633]
	cast.64     %r1646 <- (32) %r1640
	muls.64     %r1647 <- %r1646, $8
	add.64*     %r1648 <- %r1644, %r1647
	load.64*    %r1649 <- 0[%r1648]
	store.64*   %r1649 -> 0[%r1605]
	ptrcast.64* %r1652 <- (64) %r1605
	load.64*    %r1654 <- 0[%r1633]
	add.64*     %r1658 <- %r1654, %r1647
	store.64*   %r1652 -> 0[%r1658]
	load.32     %r1660 <- 8[%r1633]
	add.32      %r1661 <- %r1660, $1
	store.32    %r1661 -> 8[%r1633]
	load.32     %r1665 <- 12[%r1633]
	seta.32     %r1667 <- %r1661, %r1665
	cbr         %r1667, .L320, .L321

.L320:
	setle.32    %r1670 <- %r1665, $0x3ffffffe
	cbr         %r1670, .L318, .L321

.L318:
	muls.32     %r1674 <- %r1665, $2
	push.64*    %arg1
	push.32     %r1674
	call        luaS_resize
	br          .L321

.L321:
	ret.64*     %r1605


luaS_newlstr:
.L322:
	<entry-point>
	cast.32     %r1678(h) <- (64) %arg3
	lsr.64      %r1680 <- %arg3, $5
	add.64      %r1681(step) <- %r1680, $1
	phisrc.32   %phi543(h) <- %r1678(h)
	phisrc.64   %phi549(l1) <- %arg3
	br          .L326

.L326:
	phi.64      %r1683(l1) <- %phi549(l1), %phi550(l1)
	setae.32    %r1685 <- %r1683(l1), %r1681(step)
	phi.32      %r1686 <- %phi543(h), %phi544(h)
	cbr         %r1685, .L323, .L325

.L323:
	shl.32      %r1688 <- %r1686, $5
	lsr.32      %r1690 <- %r1686, $2
	add.32      %r1691 <- %r1688, %r1690
	add.64      %r1694 <- %r1683(l1), $-1
	add.64*     %r1695 <- %arg2, %r1694
	load.8      %r1696 <- 0[%r1695]
	cast.32     %r1698 <- (8) %r1696
	add.32      %r1699 <- %r1691, %r1698
	xor.32      %r1700 <- %r1686, %r1699
	phisrc.32   %phi544(h) <- %r1700
	sub.64      %r1704 <- %r1683(l1), %r1681(step)
	phisrc.64   %phi550(l1) <- %r1704
	br          .L326

.L325:
	load.64*    %r1707 <- 32[%arg1]
	load.64*    %r1708 <- 0[%r1707]
	load.32     %r1712 <- 12[%r1707]
	add.32      %r1713 <- %r1712, $-1
	and.32      %r1715 <- %r1686, %r1713
	scast.64    %r1717 <- (32) %r1715
	muls.64     %r1718 <- %r1717, $8
	add.64*     %r1719 <- %r1708, %r1718
	load.64*    %r1720(o) <- 0[%r1719]
	phisrc.64*  %phi555(o) <- %r1720(o)
	br          .L330

.L330:
	phi.64*     %r1721(o) <- %phi555(o), %phi556(o)
	cbr         %r1721(o), .L327, .L329

.L327:
	load.64     %r1726 <- 16[%r1721(o)]
	seteq.1     %r1729 <- %r1726, %arg3
	cast.64*    %r1731 <- (64) %arg2
	add.64*     %r1733 <- %r1721(o), $24
	ptrcast.64* %r1734 <- (64) %r1733
	cast.64*    %r1735 <- (64) %r1734
	push.64*    %r1731
	push.64*    %r1735
	push.64     %arg3
	call.32     %r1737 <- memcmp
	seteq.1     %r1739 <- %r1737, $0
	and-bool.1  %r1740 <- %r1729, %r1739
	cbr         %r1740, .L331, .L328

.L331:
	load.8      %r1743 <- 9[%r1721(o)]
	cast.32     %r1744 <- (8) %r1743
	load.64*    %r1746 <- 32[%arg1]
	load.8      %r1747 <- 32[%r1746]
	cast.32     %r1748 <- (8) %r1747
	xor.32      %r1749 <- %r1748, $3
	and.32      %r1750 <- %r1744, %r1749
	and.32      %r1751 <- %r1750, $3
	cbr         %r1751, .L333, .L334

.L333:
	xor.32      %r1755 <- %r1744, $3
	scast.8     %r1756 <- (32) %r1755
	store.8     %r1756 -> 9[%r1721(o)]
	br          .L334

.L334:
	phisrc.64*  %phi526(return) <- %r1721(o)
	br          .L335

.L328:
	load.64*    %r1760 <- 0[%r1721(o)]
	phisrc.64*  %phi556(o) <- %r1760
	br          .L330

.L329:
	push.64*    %arg1
	push.64*    %arg2
	push.64     %arg3
	push.32     %r1686
	call.64*    %r1765 <- newlstr
	phisrc.64*  %phi527(return) <- %r1765
	br          .L335

.L335:
	phi.64*     %r1758 <- %phi526(return), %phi527(return)
	ret.64*     %r1758


luaS_newudata:
.L336:
	<entry-point>
	seta.32     %r1767 <- %arg2, $-43
	cbr         %r1767, .L337, .L338

.L337:
	push.64*    %arg1
	call.64*    %r1769 <- luaM_toobig
	br          .L338

.L338:
	add.64      %r1772 <- %arg2, $40
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     %r1772
	call.64*    %r1773 <- luaM_realloc_
	ptrcast.64* %r1774 <- (64) %r1773
	load.64*    %r1776 <- 32[%arg1]
	load.8      %r1777 <- 32[%r1776]
	cast.32     %r1778 <- (8) %r1777
	and.32      %r1779 <- %r1778, $3
	store.8     %r1779 -> 9[%r1774]
	store.8     $7 -> 8[%r1774]
	store.64    %arg2 -> 32[%r1774]
	store.64*   $0 -> 16[%r1774]
	store.64*   %arg3 -> 24[%r1774]
	load.64*    %r1789 <- 32[%arg1]
	load.64*    %r1790 <- 176[%r1789]
	load.64*    %r1791 <- 0[%r1790]
	store.64*   %r1791 -> 0[%r1774]
	ptrcast.64* %r1794 <- (64) %r1774
	load.64*    %r1796 <- 32[%arg1]
	load.64*    %r1797 <- 176[%r1796]
	store.64*   %r1794 -> 0[%r1797]
	ret.64*     %r1774


hashnum:
.L340:
	<entry-point>
	store.f64   %arg2 -> 0[n]
	set.f64     %r1801 <- 0.000000
	seteq.32    %r1802 <- %arg2, %r1801
	cbr         %r1802, .L341, .L342

.L341:
	load.64*    %r1804 <- 32[%arg1]
	phisrc.64*  %phi565(return) <- %r1804
	br          .L343

.L342:
	symaddr.64* %r1807 <- a
	cast.64*    %r1808 <- (64) %r1807
	symaddr.64* %r1809 <- n
	cast.64*    %r1810 <- (64) %r1809
	push.64*    %r1808
	push.64*    %r1810
	push.64     $8
	call.64*    %r1811 <- memcpy
	phisrc.32   %phi571(i) <- $1
	br          .L347

.L347:
	phi.32      %r1812(i) <- %phi571(i), %phi572(i)
	setlt.32    %r1813 <- %r1812(i), $2
	cbr         %r1813, .L344, .L346

.L344:
	scast.64    %r1816 <- (32) %r1812(i)
	muls.64     %r1817 <- %r1816, $4
	add.64*     %r1818 <- %r1807, %r1817
	load.32     %r1819 <- 0[%r1818]
	load.32     %r1820 <- 0[a]
	add.32      %r1822 <- %r1820, %r1819
	store.32    %r1822 -> 0[a]
	add.32      %r1825 <- %r1812(i), $1
	phisrc.32   %phi572(i) <- %r1825
	br          .L347

.L346:
	load.64*    %r1827 <- 32[%arg1]
	load.32     %r1828 <- 0[a]
	cast.64     %r1829 <- (32) %r1828
	load.8      %r1831 <- 11[%arg1]
	cast.32     %r1832 <- (8) %r1831
	shl.64      %r1833 <- $1, %r1832
	add.64      %r1834 <- %r1833, $-1
	or.64       %r1835 <- %r1834, $1
	modu.64     %r1836 <- %r1829, %r1835
	muls.64     %r1837 <- %r1836, $40
	add.64*     %r1838 <- %r1827, %r1837
	phisrc.64*  %phi566(return) <- %r1838
	br          .L343

.L343:
	phi.64*     %r1806 <- %phi565(return), %phi566(return)
	ret.64*     %r1806


mainposition:
.L348:
	<entry-point>
	load.32     %r1840 <- 8[%arg2]
	switch.32   %r1840, 1 -> .L352, 2 -> .L353, 3 -> .L350, 4 -> .L351, default -> .L354

.L350:
	load.f64    %r1843 <- 0[%arg2]
	fpcast.f64  %r1844 <- (64) %r1843
	push.64*    %arg1
	push.f64    %r1844
	call.64*    %r1845 <- hashnum
	phisrc.64*  %phi573(return) <- %r1845
	br          .L355

.L351:
	load.64*    %r1848 <- 32[%arg1]
	load.64*    %r1850 <- 0[%arg2]
	load.32     %r1851 <- 12[%r1850]
	cast.64     %r1852 <- (32) %r1851
	load.8      %r1854 <- 11[%arg1]
	cast.32     %r1855 <- (8) %r1854
	shl.64      %r1856 <- $1, %r1855
	add.64      %r1857 <- %r1856, $-1
	and.64      %r1858 <- %r1852, %r1857
	cast.32     %r1859 <- (64) %r1858
	scast.64    %r1860 <- (32) %r1859
	muls.64     %r1861 <- %r1860, $40
	add.64*     %r1862 <- %r1848, %r1861
	phisrc.64*  %phi574(return) <- %r1862
	br          .L355

.L352:
	load.64*    %r1864 <- 32[%arg1]
	load.32     %r1866 <- 0[%arg2]
	scast.64    %r1867 <- (32) %r1866
	load.8      %r1869 <- 11[%arg1]
	cast.32     %r1870 <- (8) %r1869
	shl.64      %r1871 <- $1, %r1870
	add.64      %r1872 <- %r1871, $-1
	and.64      %r1873 <- %r1867, %r1872
	cast.32     %r1874 <- (64) %r1873
	scast.64    %r1875 <- (32) %r1874
	muls.64     %r1876 <- %r1875, $40
	add.64*     %r1877 <- %r1864, %r1876
	phisrc.64*  %phi575(return) <- %r1877
	br          .L355

.L353:
	load.64*    %r1879 <- 32[%arg1]
	load.64*    %r1881 <- 0[%arg2]
	cast.64     %r1882 <- (64) %r1881
	cast.32     %r1883 <- (64) %r1882
	cast.64     %r1884 <- (32) %r1883
	load.8      %r1886 <- 11[%arg1]
	cast.32     %r1887 <- (8) %r1886
	shl.64      %r1888 <- $1, %r1887
	add.64      %r1889 <- %r1888, $-1
	or.64       %r1890 <- %r1889, $1
	modu.64     %r1891 <- %r1884, %r1890
	muls.64     %r1892 <- %r1891, $40
	add.64*     %r1893 <- %r1879, %r1892
	phisrc.64*  %phi576(return) <- %r1893
	br          .L355

.L354:
	load.64*    %r1895 <- 32[%arg1]
	load.64*    %r1897 <- 0[%arg2]
	cast.64     %r1898 <- (64) %r1897
	cast.32     %r1899 <- (64) %r1898
	cast.64     %r1900 <- (32) %r1899
	load.8      %r1902 <- 11[%arg1]
	cast.32     %r1903 <- (8) %r1902
	shl.64      %r1904 <- $1, %r1903
	add.64      %r1905 <- %r1904, $-1
	or.64       %r1906 <- %r1905, $1
	modu.64     %r1907 <- %r1900, %r1906
	muls.64     %r1908 <- %r1907, $40
	add.64*     %r1909 <- %r1895, %r1908
	phisrc.64*  %phi577(return) <- %r1909
	br          .L355

.L355:
	phi.64*     %r1846 <- %phi573(return), %phi574(return), %phi575(return), %phi576(return), %phi577(return)
	ret.64*     %r1846


arrayindex:
.L356:
	<entry-point>
	load.32     %r1911 <- 8[%arg1]
	seteq.32    %r1913 <- %r1911, $3
	cbr         %r1913, .L357, .L358

.L357:
	load.f64    %r1915 <- 0[%arg1]
	fpcast.f64  %r1916 <- (64) %r1915
	cast.32     %r1918 <- (64) %r1916
	fpcast.f64  %r1920 <- (32) %r1918
	seteq.32    %r1922 <- %r1920, %r1916
	cbr         %r1922, .L359, .L358

.L359:
	phisrc.32   %phi588(return) <- %r1918
	br          .L361

.L358:
	phisrc.32   %phi589(return) <- $0xffffffff
	br          .L361

.L361:
	phi.32      %r1924 <- %phi588(return), %phi589(return)
	ret.32      %r1924


findindex:
.L362:
	<entry-point>
	load.32     %r1926 <- 8[%arg3]
	cbr         %r1926, .L364, .L363

.L363:
	phisrc.32   %phi592(return) <- $0xffffffff
	br          .L365

.L364:
	push.64*    %arg3
	call.32     %r1930 <- arrayindex
	setlt.32    %r1932 <- $0, %r1930
	cbr         %r1932, .L368, .L367

.L368:
	load.32     %r1935 <- 56[%arg2]
	setle.32    %r1936 <- %r1930, %r1935
	cbr         %r1936, .L366, .L367

.L366:
	add.32      %r1938 <- %r1930, $-1
	phisrc.32   %phi593(return) <- %r1938
	br          .L365

.L367:
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r1941(n) <- mainposition
	phisrc.64*  %phi615(n) <- %r1941(n)
	br          .L370

.L370:
	phi.64*     %r1942(n) <- %phi615(n), %phi616(n)
	add.64*     %r1943 <- %r1942(n), $16
	push.64*    %r1943
	push.64*    %arg3
	call.32     %r1946 <- luaO_rawequalObj
	cbr         %r1946, .L373, .L375

.L375:
	load.32     %r1948 <- 24[%r1942(n)]
	seteq.32    %r1949 <- %r1948, $11
	cbr         %r1949, .L377, .L374

.L377:
	load.32     %r1951 <- 8[%arg3]
	setge.32    %r1952 <- %r1951, $4
	cbr         %r1952, .L376, .L374

.L376:
	load.64*    %r1954 <- 16[%r1942(n)]
	load.64*    %r1956 <- 0[%arg3]
	seteq.32    %r1957 <- %r1954, %r1956
	cbr         %r1957, .L373, .L374

.L373:
	load.64*    %r1960 <- 32[%arg2]
	sub.64      %r1962 <- %r1942(n), %r1960
	divs.64     %r1963 <- %r1962, $40
	scast.32    %r1964 <- (64) %r1963
	load.32     %r1967 <- 56[%arg2]
	add.32      %r1968 <- %r1964, %r1967
	phisrc.32   %phi594(return) <- %r1968
	br          .L365

.L374:
	load.64*    %r1970(n) <- 32[%r1942(n)]
	phisrc.64*  %phi616(n) <- %r1970(n)
	cbr         %r1970(n), .L370, .L372

.L372:
	symaddr.64* %r1973 <- <anon symbol:0x1a35630>
	push.64*    %arg1
	push.64*    %r1973
	call        luaG_runerror
	phisrc.32   %phi595(return) <- $0
	br          .L365

.L365:
	phi.32      %r1928 <- %phi592(return), %phi593(return), %phi594(return), %phi595(return)
	ret.32      %r1928


luaH_next:
.L379:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.32     %r1977 <- findindex
	add.32      %r1979(i) <- %r1977, $1
	phisrc.32   %phi638(i) <- %r1979(i)
	br          .L383

.L383:
	phi.32      %r1980(i) <- %phi638(i), %phi639(i)
	load.32     %r1982 <- 56[%arg2]
	setlt.32    %r1983 <- %r1980(i), %r1982
	cbr         %r1983, .L380, .L382

.L380:
	load.64*    %r1985 <- 24[%arg2]
	scast.64    %r1987 <- (32) %r1980(i)
	muls.64     %r1988 <- %r1987, $16
	add.64*     %r1989 <- %r1985, %r1988
	load.32     %r1990 <- 8[%r1989]
	add.32      %r1994 <- %r1980(i), $1
	cbr         %r1990, .L384, .L381

.L384:
	fpcast.f64  %r1995 <- (32) %r1994
	store.f64   %r1995 -> 0[%arg3]
	store.32    $3 -> 8[%arg3]
	load.64*    %r1999 <- 24[%arg2]
	add.64*     %r2003 <- %r1999, %r1988
	add.64*     %r2005 <- %arg3, $16
	load.f64    %r2007 <- 0[%r2003]
	fpcast.f64  %r2008 <- (64) %r2007
	store.f64   %r2008 -> 0[%r2005]
	load.32     %r2011 <- 8[%r2003]
	store.32    %r2011 -> 24[%arg3]
	phisrc.32   %phi617(return) <- $1
	br          .L386

.L381:
	phisrc.32   %phi639(i) <- %r1994
	br          .L383

.L382:
	sub.32      %r2021 <- %r1980(i), %r1982
	phisrc.32   %phi632(i) <- %r2021
	br          .L390

.L390:
	phi.32      %r2023(i) <- %phi632(i), %phi633(i)
	load.8      %r2025 <- 11[%arg2]
	cast.32     %r2026 <- (8) %r2025
	shl.64      %r2027 <- $1, %r2026
	cast.32     %r2028 <- (64) %r2027
	setlt.32    %r2029 <- %r2023(i), %r2028
	cbr         %r2029, .L387, .L389

.L387:
	load.64*    %r2031 <- 32[%arg2]
	scast.64    %r2033 <- (32) %r2023(i)
	muls.64     %r2034 <- %r2033, $40
	add.64*     %r2035 <- %r2031, %r2034
	load.32     %r2036 <- 8[%r2035]
	cbr         %r2036, .L391, .L388

.L391:
	add.64*     %r2044 <- %r2035, $16
	load.f64    %r2048 <- 0[%r2044]
	fpcast.f64  %r2049 <- (64) %r2048
	store.f64   %r2049 -> 0[%arg3]
	load.32     %r2052 <- 24[%r2035]
	store.32    %r2052 -> 8[%arg3]
	load.64*    %r2056 <- 32[%arg2]
	add.64*     %r2060 <- %r2056, %r2034
	add.64*     %r2063 <- %arg3, $16
	load.f64    %r2065 <- 0[%r2060]
	fpcast.f64  %r2066 <- (64) %r2065
	store.f64   %r2066 -> 0[%r2063]
	load.32     %r2069 <- 8[%r2060]
	store.32    %r2069 -> 24[%arg3]
	phisrc.32   %phi618(return) <- $1
	br          .L386

.L388:
	add.32      %r2073 <- %r2023(i), $1
	phisrc.32   %phi633(i) <- %r2073
	br          .L390

.L389:
	phisrc.32   %phi619(return) <- $0
	br          .L386

.L386:
	phi.32      %r2014 <- %phi617(return), %phi618(return), %phi619(return)
	ret.32      %r2014


computesizes:
.L393:
	<entry-point>
	phisrc.32   %phi649(a) <- $0
	phisrc.32   %phi653(a) <- $0
	phisrc.32   %phi655(na) <- $0
	phisrc.32   %phi657(n) <- $0
	phisrc.32   %phi662(i) <- $0
	phisrc.32   %phi669(twotoi) <- $1
	br          .L397

.L397:
	phi.32      %r2074(twotoi) <- %phi669(twotoi), %phi670(twotoi)
	divs.32     %r2075 <- %r2074(twotoi), $2
	load.32     %r2077 <- 0[%arg2]
	setlt.32    %r2078 <- %r2075, %r2077
	cbr         %r2078, .L394, .L396

.L394:
	phi.32      %r2080(i) <- %phi662(i), %phi663(i)
	scast.64    %r2081 <- (32) %r2080(i)
	muls.64     %r2082 <- %r2081, $4
	add.64*     %r2083 <- %arg1, %r2082
	load.32     %r2084 <- 0[%r2083]
	setgt.32    %r2085 <- %r2084, $0
	cbr         %r2085, .L398, .L399

.L398:
	phi.32      %r2092 <- %phi653(a), %phi654(a)
	add.32      %r2094 <- %r2092, %r2084
	setgt.32    %r2099 <- %r2094, %r2075
	phisrc.32   %phi650(a) <- %r2094
	phisrc.32   %phi654(a) <- %r2094
	cbr         %r2099, .L400, .L399

.L400:
	phisrc.32   %phi651(a) <- %r2094
	phisrc.32   %phi656(na) <- %r2094
	phisrc.32   %phi658(n) <- %r2074(twotoi)
	br          .L399

.L399:
	phi.32      %r2102 <- %phi649(a), %phi650(a), %phi651(a)
	seteq.32    %r2105 <- %r2102, %r2077
	cbr         %r2105, .L396, .L395

.L395:
	add.32      %r2107 <- %r2080(i), $1
	muls.32     %r2110 <- %r2074(twotoi), $2
	phisrc.32   %phi663(i) <- %r2107
	phisrc.32   %phi670(twotoi) <- %r2110
	br          .L397

.L396:
	phi.32      %r2112 <- %phi657(n), %phi658(n)
	store.32    %r2112 -> 0[%arg2]
	phi.32      %r2114 <- %phi655(na), %phi656(na)
	ret.32      %r2114


countint:
.L405:
	<entry-point>
	push.64*    %arg1
	call.32     %r2117 <- arrayindex
	setlt.1     %r2120 <- $0, %r2117
	setle.1     %r2123 <- %r2117, $0x40000000
	and-bool.1  %r2124 <- %r2120, %r2123
	setne.32    %r2137 <- %r2124, $0
	cbr         %r2124, .L406, .L408

.L406:
	add.32      %r2128 <- %r2117, $-1
	push.32     %r2128
	call.32     %r2130 <- luaO_log2
	add.32      %r2131 <- %r2130, $1
	scast.64    %r2132 <- (32) %r2131
	muls.64     %r2133 <- %r2132, $4
	add.64*     %r2134 <- %arg2, %r2133
	load.32     %r2135 <- 0[%r2134]
	add.32      %r2136 <- %r2135, $1
	store.32    %r2136 -> 0[%r2134]
	br          .L408

.L408:
	ret.32      %r2137


numusearray:
.L410:
	<entry-point>
	phisrc.32   %phi683(ause) <- $0
	phisrc.32   %phi685(ause) <- $0
	phisrc.32   %phi689(i) <- $1
	phisrc.32   %phi692(i) <- $1
	phisrc.32   %phi696(lg) <- $0
	phisrc.32   %phi699(ttlg) <- $1
	br          .L414

.L414:
	phi.32      %r2138(lg) <- %phi696(lg), %phi697(lg)
	setle.32    %r2139 <- %r2138(lg), $30
	cbr         %r2139, .L411, .L413

.L411:
	phi.32      %r2140(ttlg) <- %phi699(ttlg), %phi700(ttlg)
	load.32     %r2143 <- 56[%arg1]
	setgt.32    %r2145 <- %r2140(ttlg), %r2143
	phisrc.32   %phi701(lc) <- $0
	phisrc.32   %phi703(lc) <- $0
	phisrc.32   %phi705(lim) <- %r2140(ttlg)
	cbr         %r2145, .L415, .L422

.L415:
	phi.32      %r2149 <- %phi692(i), %phi693(i)
	setgt.32    %r2151 <- %r2149, %r2143
	phisrc.32   %phi690(i) <- %r2149
	phisrc.32   %phi706(lim) <- %r2143
	cbr         %r2151, .L413, .L422

.L422:
	phi.32      %r2152(i) <- %phi689(i), %phi690(i), %phi691(i)
	phi.32      %r2153 <- %phi705(lim), %phi706(lim)
	setle.32    %r2154 <- %r2152(i), %r2153
	cbr         %r2154, .L419, .L421

.L419:
	load.64*    %r2156 <- 24[%arg1]
	add.32      %r2158 <- %r2152(i), $-1
	scast.64    %r2159 <- (32) %r2158
	muls.64     %r2160 <- %r2159, $16
	add.64*     %r2161 <- %r2156, %r2160
	load.32     %r2162 <- 8[%r2161]
	cbr         %r2162, .L423, .L420

.L423:
	phi.32      %r2164 <- %phi703(lc), %phi704(lc)
	add.32      %r2165 <- %r2164, $1
	phisrc.32   %phi702(lc) <- %r2165
	phisrc.32   %phi704(lc) <- %r2165
	br          .L420

.L420:
	add.32      %r2167 <- %r2152(i), $1
	phisrc.32   %phi691(i) <- %r2167
	phisrc.32   %phi693(i) <- %r2167
	br          .L422

.L421:
	phi.32      %r2168 <- %phi701(lc), %phi702(lc)
	scast.64    %r2171 <- (32) %r2138(lg)
	muls.64     %r2172 <- %r2171, $4
	add.64*     %r2173 <- %arg2, %r2172
	load.32     %r2174 <- 0[%r2173]
	add.32      %r2176 <- %r2174, %r2168
	store.32    %r2176 -> 0[%r2173]
	phi.32      %r2179 <- %phi685(ause), %phi686(ause)
	add.32      %r2181 <- %r2179, %r2168
	phisrc.32   %phi684(ause) <- %r2181
	phisrc.32   %phi686(ause) <- %r2181
	add.32      %r2184 <- %r2138(lg), $1
	muls.32     %r2187 <- %r2140(ttlg), $2
	phisrc.32   %phi697(lg) <- %r2184
	phisrc.32   %phi700(ttlg) <- %r2187
	br          .L414

.L413:
	phi.32      %r2189 <- %phi683(ause), %phi684(ause)
	ret.32      %r2189


numusehash:
.L426:
	<entry-point>
	load.8      %r2192 <- 11[%arg1]
	cast.32     %r2193 <- (8) %r2192
	shl.64      %r2194 <- $1, %r2193
	cast.32     %r2195(i) <- (64) %r2194
	phisrc.32   %phi712(totaluse) <- $0
	phisrc.32   %phi714(totaluse) <- $0
	phisrc.32   %phi716(ause) <- $0
	phisrc.32   %phi718(ause) <- $0
	phisrc.32   %phi721(i) <- %r2195(i)
	br          .L430

.L430:
	phi.32      %r2196 <- %phi721(i), %phi722(i)
	add.32      %r2197(i) <- %r2196, $-1
	phisrc.32   %phi722(i) <- %r2197(i)
	cbr         %r2196, .L427, .L429

.L427:
	load.64*    %r2199 <- 32[%arg1]
	scast.64    %r2201 <- (32) %r2197(i)
	muls.64     %r2202 <- %r2201, $40
	add.64*     %r2203 <- %r2199, %r2202
	load.32     %r2205 <- 8[%r2203]
	cbr         %r2205, .L431, .L430

.L431:
	add.64*     %r2208 <- %r2203, $16
	push.64*    %r2208
	push.64*    %arg2
	call.32     %r2211 <- countint
	phi.32      %r2212 <- %phi718(ause), %phi719(ause)
	add.32      %r2214 <- %r2212, %r2211
	phi.32      %r2216 <- %phi714(totaluse), %phi715(totaluse)
	add.32      %r2217 <- %r2216, $1
	phisrc.32   %phi713(totaluse) <- %r2217
	phisrc.32   %phi715(totaluse) <- %r2217
	phisrc.32   %phi717(ause) <- %r2214
	phisrc.32   %phi719(ause) <- %r2214
	br          .L430

.L429:
	phi.32      %r2218 <- %phi716(ause), %phi717(ause)
	load.32     %r2220 <- 0[%arg3]
	add.32      %r2222 <- %r2220, %r2218
	store.32    %r2222 -> 0[%arg3]
	phi.32      %r2224 <- %phi712(totaluse), %phi713(totaluse)
	ret.32      %r2224


setarrayvector:
.L434:
	<entry-point>
	add.32      %r2227 <- %arg3, $1
	scast.64    %r2228 <- (32) %r2227
	setbe.32    %r2229 <- %r2228, $0xfffffffffffffff
	cbr         %r2229, .L435, .L436

.L435:
	load.64*    %r2232 <- 24[%arg2]
	cast.64*    %r2233 <- (64) %r2232
	load.32     %r2235 <- 56[%arg2]
	scast.64    %r2236 <- (32) %r2235
	mulu.64     %r2237 <- %r2236, $16
	scast.64    %r2239 <- (32) %arg3
	mulu.64     %r2240 <- %r2239, $16
	push.64*    %arg1
	push.64*    %r2233
	push.64     %r2237
	push.64     %r2240
	call.64*    %r2241 <- luaM_realloc_
	phisrc.64*  %phi724 <- %r2241
	br          .L437

.L436:
	push.64*    %arg1
	call.64*    %r2243 <- luaM_toobig
	cast.64*    %r2244 <- (64) %r2243
	phisrc.64*  %phi725 <- %r2244
	br          .L437

.L437:
	phi.64*     %r2245 <- %phi724, %phi725
	ptrcast.64* %r2246 <- (64) %r2245
	store.64*   %r2246 -> 24[%arg2]
	load.32     %r2249(i) <- 56[%arg2]
	phisrc.32   %phi740(i) <- %r2249(i)
	phisrc.64*  %phi742 <- %r2246
	phisrc.64*  %phi743 <- %r2246
	br          .L441

.L441:
	phi.32      %r2250(i) <- %phi740(i), %phi741(i)
	setlt.32    %r2252 <- %r2250(i), %arg3
	cbr         %r2252, .L438, .L440

.L438:
	load.64*    %r2254 <- 24[%arg2]
	scast.64    %r2256 <- (32) %r2250(i)
	muls.64     %r2257 <- %r2256, $16
	add.64*     %r2258 <- %r2254, %r2257
	store.32    $0 -> 8[%r2258]
	add.32      %r2260 <- %r2250(i), $1
	phisrc.32   %phi741(i) <- %r2260
	br          .L441

.L440:
	store.32    %arg3 -> 56[%arg2]
	ret


setnodevector:
.L443:
	<entry-point>
	phisrc.32   %phi757(size) <- %arg3
	cbr         %arg3, .L445, .L444

.L444:
	symaddr.64* %r2265 <- dummynode_
	ptrcast.64* %r2266 <- (64) %r2265
	store.64*   %r2266 -> 32[%arg2]
	phisrc.32   %phi763(lsize) <- $0
	phisrc.64*  %phi771 <- %r2266
	br          .L446

.L445:
	add.32      %r2269 <- %arg3, $-1
	push.32     %r2269
	call.32     %r2271 <- luaO_log2
	add.32      %r2272 <- %r2271, $1
	setgt.32    %r2274 <- %r2272, $30
	cbr         %r2274, .L447, .L448

.L447:
	symaddr.64* %r2276 <- <anon symbol:0x1a43c08>
	push.64*    %arg1
	push.64*    %r2276
	call        luaG_runerror
	br          .L448

.L448:
	shl.64      %r2278 <- $1, %r2272
	cast.32     %r2279 <- (64) %r2278
	add.32      %r2281 <- %r2279, $1
	scast.64    %r2282 <- (32) %r2281
	setbe.32    %r2283 <- %r2282, $0x666666666666666
	phisrc.32   %phi764(lsize) <- %r2272
	cbr         %r2283, .L449, .L450

.L449:
	scast.64    %r2286 <- (32) %r2279
	mulu.64     %r2287 <- %r2286, $40
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     %r2287
	call.64*    %r2288 <- luaM_realloc_
	phisrc.64*  %phi744 <- %r2288
	br          .L451

.L450:
	push.64*    %arg1
	call.64*    %r2290 <- luaM_toobig
	cast.64*    %r2291 <- (64) %r2290
	phisrc.64*  %phi745 <- %r2291
	br          .L451

.L451:
	phi.64*     %r2292 <- %phi744, %phi745
	ptrcast.64* %r2293 <- (64) %r2292
	store.64*   %r2293 -> 32[%arg2]
	phisrc.32   %phi768(i) <- $0
	phisrc.64*  %phi770 <- %r2293
	phisrc.64*  %phi772 <- %r2293
	phisrc.64*  %phi773 <- %r2293
	br          .L455

.L455:
	phi.32      %r2295(i) <- %phi768(i), %phi769(i)
	setlt.32    %r2297 <- %r2295(i), %r2279
	phisrc.32   %phi758(size) <- %r2279
	cbr         %r2297, .L452, .L446

.L452:
	load.64*    %r2299 <- 32[%arg2]
	scast.64    %r2301 <- (32) %r2295(i)
	muls.64     %r2302 <- %r2301, $40
	add.64*     %r2303 <- %r2299, %r2302
	store.64*   $0 -> 32[%r2303]
	store.32    $0 -> 24[%r2303]
	store.32    $0 -> 8[%r2303]
	add.32      %r2308 <- %r2295(i), $1
	phisrc.32   %phi769(i) <- %r2308
	br          .L455

.L446:
	phi.32      %r2309 <- %phi763(lsize), %phi764(lsize)
	scast.8     %r2310 <- (32) %r2309
	store.8     %r2310 -> 11[%arg2]
	load.64*    %r2313 <- 32[%arg2]
	phi.32      %r2314 <- %phi757(size), %phi758(size)
	scast.64    %r2315 <- (32) %r2314
	muls.64     %r2316 <- %r2315, $40
	add.64*     %r2317 <- %r2313, %r2316
	store.64*   %r2317 -> 40[%arg2]
	ret


resize:
.L457:
	<entry-point>
	load.32     %r2320 <- 56[%arg2]
	load.8      %r2322 <- 11[%arg2]
	cast.32     %r2323(oldhsize) <- (8) %r2322
	load.64*    %r2325(nold) <- 32[%arg2]
	setgt.32    %r2328 <- %arg3, %r2320
	cbr         %r2328, .L458, .L459

.L458:
	push.64*    %arg1
	push.64*    %arg2
	push.32     %arg3
	call        setarrayvector
	br          .L459

.L459:
	push.64*    %arg1
	push.64*    %arg2
	push.32     %arg4
	call        setnodevector
	setlt.32    %r2337 <- %arg3, %r2320
	cbr         %r2337, .L460, .L461

.L460:
	store.32    %arg3 -> 56[%arg2]
	phisrc.32   %phi830(i) <- %arg3
	br          .L465

.L465:
	phi.32      %r2341(i) <- %phi830(i), %phi831(i)
	setlt.32    %r2343 <- %r2341(i), %r2320
	cbr         %r2343, .L462, .L464

.L462:
	load.64*    %r2345 <- 24[%arg2]
	scast.64    %r2347 <- (32) %r2341(i)
	muls.64     %r2348 <- %r2347, $16
	add.64*     %r2349 <- %r2345, %r2348
	load.32     %r2350 <- 8[%r2349]
	cbr         %r2350, .L466, .L463

.L466:
	add.32      %r2361 <- %r2341(i), $1
	push.64*    %arg1
	push.64*    %arg2
	push.32     %r2361
	call.64*    %r2362 <- luaH_setnum
	load.f64    %r2364 <- 0[%r2349]
	fpcast.f64  %r2365 <- (64) %r2364
	store.f64   %r2365 -> 0[%r2362]
	load.32     %r2368 <- 8[%r2349]
	store.32    %r2368 -> 8[%r2362]
	br          .L463

.L463:
	add.32      %r2372 <- %r2341(i), $1
	phisrc.32   %phi831(i) <- %r2372
	br          .L465

.L464:
	add.32      %r2374 <- %arg3, $1
	scast.64    %r2375 <- (32) %r2374
	setbe.32    %r2376 <- %r2375, $0xfffffffffffffff
	cbr         %r2376, .L468, .L469

.L468:
	load.64*    %r2379 <- 24[%arg2]
	cast.64*    %r2380 <- (64) %r2379
	scast.64    %r2382 <- (32) %r2320
	mulu.64     %r2383 <- %r2382, $16
	scast.64    %r2385 <- (32) %arg3
	mulu.64     %r2386 <- %r2385, $16
	push.64*    %arg1
	push.64*    %r2380
	push.64     %r2383
	push.64     %r2386
	call.64*    %r2387 <- luaM_realloc_
	phisrc.64*  %phi774 <- %r2387
	br          .L470

.L469:
	push.64*    %arg1
	call.64*    %r2389 <- luaM_toobig
	cast.64*    %r2390 <- (64) %r2389
	phisrc.64*  %phi775 <- %r2390
	br          .L470

.L470:
	phi.64*     %r2391 <- %phi774, %phi775
	ptrcast.64* %r2392 <- (64) %r2391
	store.64*   %r2392 -> 24[%arg2]
	br          .L461

.L461:
	shl.64      %r2395 <- $1, %r2323(oldhsize)
	add.64      %r2396 <- %r2395, $-1
	cast.32     %r2397(i) <- (64) %r2396
	phisrc.32   %phi824(i) <- %r2397(i)
	br          .L474

.L474:
	phi.32      %r2398(i) <- %phi824(i), %phi825(i)
	setge.32    %r2399 <- %r2398(i), $0
	cbr         %r2399, .L471, .L473

.L471:
	scast.64    %r2402 <- (32) %r2398(i)
	muls.64     %r2403 <- %r2402, $40
	add.64*     %r2404 <- %r2325(nold), %r2403
	load.32     %r2406 <- 8[%r2404]
	cbr         %r2406, .L475, .L472

.L475:
	add.64*     %r2413 <- %r2404, $16
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %r2413
	call.64*    %r2415 <- luaH_set
	load.f64    %r2417 <- 0[%r2404]
	fpcast.f64  %r2418 <- (64) %r2417
	store.f64   %r2418 -> 0[%r2415]
	load.32     %r2421 <- 8[%r2404]
	store.32    %r2421 -> 8[%r2415]
	br          .L472

.L472:
	add.32      %r2425 <- %r2398(i), $-1
	phisrc.32   %phi825(i) <- %r2425
	br          .L474

.L473:
	symaddr.64* %r2427 <- dummynode_
	setne.32    %r2428 <- %r2325(nold), %r2427
	cbr         %r2428, .L477, .L478

.L477:
	cast.64*    %r2431 <- (64) %r2325(nold)
	mulu.64     %r2434 <- %r2395, $40
	push.64*    %arg1
	push.64*    %r2431
	push.64     %r2434
	push.64     $0
	call.64*    %r2435 <- luaM_realloc_
	br          .L478

.L478:
	ret


luaH_resizearray:
.L479:
	<entry-point>
	load.64*    %r2437 <- 32[%arg2]
	symaddr.64* %r2438 <- dummynode_
	seteq.32    %r2439 <- %r2437, %r2438
	cbr         %r2439, .L480, .L481

.L480:
	phisrc.64   %phi834 <- $0
	br          .L482

.L481:
	load.8      %r2441 <- 11[%arg2]
	cast.32     %r2442 <- (8) %r2441
	shl.64      %r2443 <- $1, %r2442
	phisrc.64   %phi835 <- %r2443
	br          .L482

.L482:
	phi.64      %r2444 <- %phi834, %phi835
	cast.32     %r2445 <- (64) %r2444
	push.64*    %arg1
	push.64*    %arg2
	push.32     %arg3
	push.32     %r2445
	call        resize
	ret


rehash:
.L484:
	<entry-point>
	phisrc.32   %phi846(i) <- $0
	br          .L488

.L488:
	phi.32      %r2450(i) <- %phi846(i), %phi847(i)
	setle.32    %r2451 <- %r2450(i), $30
	symaddr.64* %r2452 <- nums
	cbr         %r2451, .L485, .L487

.L485:
	scast.64    %r2454 <- (32) %r2450(i)
	muls.64     %r2455 <- %r2454, $4
	add.64*     %r2456 <- %r2452, %r2455
	store.32    $0 -> 0[%r2456]
	add.32      %r2458 <- %r2450(i), $1
	phisrc.32   %phi847(i) <- %r2458
	br          .L488

.L487:
	push.64*    %arg2
	push.64*    %r2452
	call.32     %r2461 <- numusearray
	store.32    %r2461 -> 0[nasize]
	symaddr.64* %r2465 <- nasize
	push.64*    %arg2
	push.64*    %r2452
	push.64*    %r2465
	call.32     %r2466 <- numusehash
	add.32      %r2469 <- %r2461, %r2466
	push.64*    %arg3
	push.64*    %r2452
	call.32     %r2473 <- countint
	load.32     %r2474 <- 0[nasize]
	add.32      %r2476 <- %r2474, %r2473
	store.32    %r2476 -> 0[nasize]
	add.32      %r2479 <- %r2469, $1
	push.64*    %r2452
	push.64*    %r2465
	call.32     %r2482 <- computesizes
	load.32     %r2485 <- 0[nasize]
	sub.32      %r2488 <- %r2479, %r2482
	push.64*    %arg1
	push.64*    %arg2
	push.32     %r2485
	push.32     %r2488
	call        resize
	ret


luaH_new:
.L490:
	<entry-point>
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	push.64     $64
	call.64*    %r2490 <- luaM_realloc_
	ptrcast.64* %r2491 <- (64) %r2490
	ptrcast.64* %r2494 <- (64) %r2491
	push.64*    %arg1
	push.64*    %r2494
	push.8      $5
	call        luaC_link
	store.64*   $0 -> 16[%r2491]
	store.8     $255 -> 10[%r2491]
	store.64*   $0 -> 24[%r2491]
	store.32    $0 -> 56[%r2491]
	store.8     $0 -> 11[%r2491]
	symaddr.64* %r2500 <- dummynode_
	ptrcast.64* %r2501 <- (64) %r2500
	store.64*   %r2501 -> 32[%r2491]
	push.64*    %arg1
	push.64*    %r2491
	push.32     %arg2
	call        setarrayvector
	push.64*    %arg1
	push.64*    %r2491
	push.32     %arg3
	call        setnodevector
	ret.64*     %r2491


luaH_free:
.L492:
	<entry-point>
	load.64*    %r2512 <- 32[%arg2]
	symaddr.64* %r2513 <- dummynode_
	setne.32    %r2514 <- %r2512, %r2513
	cbr         %r2514, .L493, .L494

.L493:
	cast.64*    %r2518 <- (64) %r2512
	load.8      %r2520 <- 11[%arg2]
	cast.32     %r2521 <- (8) %r2520
	shl.64      %r2522 <- $1, %r2521
	mulu.64     %r2523 <- %r2522, $40
	push.64*    %arg1
	push.64*    %r2518
	push.64     %r2523
	push.64     $0
	call.64*    %r2524 <- luaM_realloc_
	br          .L494

.L494:
	load.64*    %r2527 <- 24[%arg2]
	cast.64*    %r2528 <- (64) %r2527
	load.32     %r2530 <- 56[%arg2]
	scast.64    %r2531 <- (32) %r2530
	mulu.64     %r2532 <- %r2531, $16
	push.64*    %arg1
	push.64*    %r2528
	push.64     %r2532
	push.64     $0
	call.64*    %r2533 <- luaM_realloc_
	cast.64*    %r2536 <- (64) %arg2
	push.64*    %arg1
	push.64*    %r2536
	push.64     $64
	push.64     $0
	call.64*    %r2537 <- luaM_realloc_
	ret


getfreepos:
.L496:
	<entry-point>
	br          .L500

.L500:
	load.64*    %r2539 <- 40[%arg1]
	add.64*     %r2540 <- %r2539, $-40
	store.64*   %r2540 -> 40[%arg1]
	load.64*    %r2542 <- 32[%arg1]
	seta.32     %r2543 <- %r2539, %r2542
	cbr         %r2543, .L497, .L499

.L497:
	load.32     %r2546 <- -16[%r2539]
	cbr         %r2546, .L500, .L501

.L501:
	phisrc.64*  %phi856(return) <- %r2540
	br          .L503

.L499:
	phisrc.64*  %phi857(return) <- $0
	br          .L503

.L503:
	phi.64*     %r2550 <- %phi856(return), %phi857(return)
	ret.64*     %r2550


newkey:
.L504:
	<entry-point>
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r2553 <- mainposition
	load.32     %r2555 <- 8[%r2553]
	setne.1     %r2558 <- %r2555, $0
	symaddr.64* %r2560 <- dummynode_
	seteq.1     %r2562 <- %r2553, %r2560
	or-bool.1   %r2563 <- %r2558, %r2562
	phisrc.64*  %phi877(mp) <- %r2553
	cbr         %r2563, .L505, .L506

.L505:
	push.64*    %arg2
	call.64*    %r2566 <- getfreepos
	cbr         %r2566, .L508, .L507

.L507:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call        rehash
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r2575 <- luaH_set
	phisrc.64*  %phi863(return) <- %r2575
	br          .L509

.L508:
	add.64*     %r2579 <- %r2553, $16
	push.64*    %arg2
	push.64*    %r2579
	call.64*    %r2581 <- mainposition
	setne.32    %r2584 <- %r2581, %r2553
	phisrc.64*  %phi888(othern) <- %r2581
	cbr         %r2584, .L515, .L511

.L515:
	phi.64*     %r2585(othern) <- %phi888(othern), %phi889(othern)
	load.64*    %r2586 <- 32[%r2585(othern)]
	setne.32    %r2588 <- %r2586, %r2553
	cbr         %r2588, .L512, .L514

.L512:
	phisrc.64*  %phi889(othern) <- %r2586
	br          .L515

.L514:
	store.64*   %r2566 -> 32[%r2585(othern)]
	cast.64*    %r2594 <- (64) %r2566
	cast.64*    %r2596 <- (64) %r2553
	push.64*    %r2594
	push.64*    %r2596
	push.64     $40
	call.64*    %r2597 <- memcpy
	store.64*   $0 -> 32[%r2553]
	store.32    $0 -> 8[%r2553]
	phisrc.64*  %phi878(mp) <- %r2553
	br          .L506

.L511:
	load.64*    %r2601 <- 32[%r2553]
	store.64*   %r2601 -> 32[%r2566]
	store.64*   %r2566 -> 32[%r2553]
	phisrc.64*  %phi879(mp) <- %r2566
	br          .L506

.L506:
	load.f64    %r2607 <- 0[%arg3]
	fpcast.f64  %r2608 <- (64) %r2607
	phi.64*     %r2609 <- %phi877(mp), %phi878(mp), %phi879(mp)
	store.f64   %r2608 -> 16[%r2609]
	load.32     %r2611 <- 8[%arg3]
	store.32    %r2611 -> 24[%r2609]
	load.32     %r2615 <- 8[%arg3]
	setge.32    %r2617 <- %r2615, $4
	cbr         %r2617, .L520, .L518

.L520:
	load.64*    %r2619 <- 0[%arg3]
	load.8      %r2620 <- 9[%r2619]
	cast.32     %r2621 <- (8) %r2620
	and.32      %r2622 <- %r2621, $3
	cbr         %r2622, .L519, .L518

.L519:
	ptrcast.64* %r2624 <- (64) %arg2
	load.8      %r2625 <- 9[%r2624]
	cast.32     %r2626 <- (8) %r2625
	and.32      %r2627 <- %r2626, $4
	cbr         %r2627, .L517, .L518

.L517:
	push.64*    %arg1
	push.64*    %arg2
	call        luaC_barrierback
	br          .L518

.L518:
	phisrc.64*  %phi864(return) <- %r2609
	br          .L509

.L509:
	phi.64*     %r2576 <- %phi863(return), %phi864(return)
	ret.64*     %r2576


luaH_getnum:
.L521:
	<entry-point>
	add.32      %r2634 <- %arg2, $-1
	load.32     %r2636 <- 56[%arg1]
	setb.32     %r2638 <- %r2634, %r2636
	cbr         %r2638, .L522, .L523

.L522:
	load.64*    %r2640 <- 24[%arg1]
	scast.64    %r2643 <- (32) %r2634
	muls.64     %r2644 <- %r2643, $16
	add.64*     %r2645 <- %r2640, %r2644
	phisrc.64*  %phi891(return) <- %r2645
	br          .L524

.L523:
	fpcast.f64  %r2648 <- (32) %arg2
	push.64*    %arg1
	push.f64    %r2648
	call.64*    %r2651(n) <- hashnum
	phisrc.64*  %phi904(n) <- %r2651(n)
	br          .L526

.L526:
	phi.64*     %r2652(n) <- %phi904(n), %phi905(n)
	load.32     %r2653 <- 24[%r2652(n)]
	seteq.32    %r2654 <- %r2653, $3
	cbr         %r2654, .L531, .L530

.L531:
	load.f64    %r2656 <- 16[%r2652(n)]
	seteq.32    %r2658 <- %r2656, %r2648
	cbr         %r2658, .L529, .L530

.L529:
	phisrc.64*  %phi892(return) <- %r2652(n)
	br          .L524

.L530:
	load.64*    %r2662(n) <- 32[%r2652(n)]
	phisrc.64*  %phi905(n) <- %r2662(n)
	cbr         %r2662(n), .L526, .L528

.L528:
	symaddr.64* %r2664 <- luaO_nilobject_
	phisrc.64*  %phi893(return) <- %r2664
	br          .L524

.L524:
	phi.64*     %r2646 <- %phi891(return), %phi892(return), %phi893(return)
	ret.64*     %r2646


luaH_getstr:
.L533:
	<entry-point>
	load.64*    %r2666 <- 32[%arg1]
	load.32     %r2668 <- 12[%arg2]
	cast.64     %r2669 <- (32) %r2668
	load.8      %r2671 <- 11[%arg1]
	cast.32     %r2672 <- (8) %r2671
	shl.64      %r2673 <- $1, %r2672
	add.64      %r2674 <- %r2673, $-1
	and.64      %r2675 <- %r2669, %r2674
	cast.32     %r2676 <- (64) %r2675
	scast.64    %r2677 <- (32) %r2676
	muls.64     %r2678 <- %r2677, $40
	add.64*     %r2679(n) <- %r2666, %r2678
	phisrc.64*  %phi914(n) <- %r2679(n)
	br          .L534

.L534:
	phi.64*     %r2680(n) <- %phi914(n), %phi915(n)
	load.32     %r2681 <- 24[%r2680(n)]
	seteq.32    %r2682 <- %r2681, $4
	cbr         %r2682, .L539, .L538

.L539:
	load.64*    %r2684 <- 16[%r2680(n)]
	seteq.32    %r2687 <- %r2684, %arg2
	cbr         %r2687, .L537, .L538

.L537:
	phisrc.64*  %phi906(return) <- %r2680(n)
	br          .L540

.L538:
	load.64*    %r2692(n) <- 32[%r2680(n)]
	phisrc.64*  %phi915(n) <- %r2692(n)
	cbr         %r2692(n), .L534, .L536

.L536:
	symaddr.64* %r2694 <- luaO_nilobject_
	phisrc.64*  %phi907(return) <- %r2694
	br          .L540

.L540:
	phi.64*     %r2690 <- %phi906(return), %phi907(return)
	ret.64*     %r2690


luaH_get:
.L542:
	<entry-point>
	load.32     %r2696 <- 8[%arg2]
	switch.32   %r2696, 0 -> .L544, 3 -> .L546, 4 -> .L545, default -> .L547

.L544:
	symaddr.64* %r2697 <- luaO_nilobject_
	phisrc.64*  %phi916(return) <- %r2697
	br          .L548

.L545:
	load.64*    %r2701 <- 0[%arg2]
	push.64*    %arg1
	push.64*    %r2701
	call.64*    %r2703 <- luaH_getstr
	phisrc.64*  %phi917(return) <- %r2703
	br          .L548

.L546:
	load.f64    %r2705 <- 0[%arg2]
	fpcast.f64  %r2706 <- (64) %r2705
	cast.32     %r2708 <- (64) %r2706
	fpcast.f64  %r2710 <- (32) %r2708
	fpcast.f64  %r2713 <- (64) %r2705
	seteq.32    %r2714 <- %r2710, %r2713
	cbr         %r2714, .L549, .L547

.L549:
	push.64*    %arg1
	push.32     %r2708
	call.64*    %r2717 <- luaH_getnum
	phisrc.64*  %phi918(return) <- %r2717
	br          .L548

.L547:
	push.64*    %arg1
	push.64*    %arg2
	call.64*    %r2720(n) <- mainposition
	phisrc.64*  %phi933(n) <- %r2720(n)
	br          .L551

.L551:
	phi.64*     %r2721(n) <- %phi933(n), %phi934(n)
	add.64*     %r2722 <- %r2721(n), $16
	push.64*    %r2722
	push.64*    %arg2
	call.32     %r2725 <- luaO_rawequalObj
	cbr         %r2725, .L554, .L555

.L554:
	phisrc.64*  %phi919(return) <- %r2721(n)
	br          .L548

.L555:
	load.64*    %r2729(n) <- 32[%r2721(n)]
	phisrc.64*  %phi934(n) <- %r2729(n)
	cbr         %r2729(n), .L551, .L553

.L553:
	symaddr.64* %r2731 <- luaO_nilobject_
	phisrc.64*  %phi920(return) <- %r2731
	br          .L548

.L548:
	phi.64*     %r2698 <- %phi916(return), %phi917(return), %phi918(return), %phi919(return), %phi920(return)
	ret.64*     %r2698


luaH_set:
.L557:
	<entry-point>
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r2734 <- luaH_get
	store.8     $0 -> 10[%arg2]
	symaddr.64* %r2737 <- luaO_nilobject_
	setne.32    %r2738 <- %r2734, %r2737
	cbr         %r2738, .L558, .L559

.L558:
	ptrcast.64* %r2740 <- (64) %r2734
	phisrc.64*  %phi935(return) <- %r2740
	br          .L560

.L559:
	load.32     %r2743 <- 8[%arg3]
	cbr         %r2743, .L563, .L562

.L562:
	symaddr.64* %r2747 <- <anon symbol:0x1a08d78>
	push.64*    %arg1
	push.64*    %r2747
	call        luaG_runerror
	br          .L564

.L563:
	seteq.32    %r2751 <- %r2743, $3
	cbr         %r2751, .L567, .L564

.L567:
	load.f64    %r2753 <- 0[%arg3]
	fpcast.f64  %r2754 <- (64) %r2753
	fpcast.f64  %r2757 <- (64) %r2753
	seteq.32    %r2758 <- %r2754, %r2757
	cbr         %r2758, .L564, .L565

.L565:
	symaddr.64* %r2760 <- <anon symbol:0x1a09858>
	push.64*    %arg1
	push.64*    %r2760
	call        luaG_runerror
	br          .L564

.L564:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r2764 <- newkey
	phisrc.64*  %phi936(return) <- %r2764
	br          .L560

.L560:
	phi.64*     %r2741 <- %phi935(return), %phi936(return)
	ret.64*     %r2741


luaH_setnum:
.L568:
	<entry-point>
	push.64*    %arg2
	push.32     %arg3
	call.64*    %r2767 <- luaH_getnum
	symaddr.64* %r2769 <- luaO_nilobject_
	setne.32    %r2770 <- %r2767, %r2769
	cbr         %r2770, .L569, .L570

.L569:
	ptrcast.64* %r2772 <- (64) %r2767
	phisrc.64*  %phi951(return) <- %r2772
	br          .L571

.L570:
	symaddr.64* %r2774 <- k
	fpcast.f64  %r2776 <- (32) %arg3
	store.f64   %r2776 -> 0[%r2774]
	store.32    $3 -> 8[k]
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %r2774
	call.64*    %r2782 <- newkey
	phisrc.64*  %phi952(return) <- %r2782
	br          .L571

.L571:
	phi.64*     %r2773 <- %phi951(return), %phi952(return)
	ret.64*     %r2773


luaH_setstr:
.L573:
	<entry-point>
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r2785 <- luaH_getstr
	symaddr.64* %r2787 <- luaO_nilobject_
	setne.32    %r2788 <- %r2785, %r2787
	cbr         %r2788, .L574, .L575

.L574:
	ptrcast.64* %r2790 <- (64) %r2785
	phisrc.64*  %phi957(return) <- %r2790
	br          .L576

.L575:
	ptrcast.64* %r2794 <- (64) %arg3
	store.64*   %r2794 -> 0[k]
	store.32    $4 -> 8[k]
	symaddr.64* %r2799 <- k
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %r2799
	call.64*    %r2800 <- newkey
	phisrc.64*  %phi958(return) <- %r2800
	br          .L576

.L576:
	phi.64*     %r2791 <- %phi957(return), %phi958(return)
	ret.64*     %r2791


unbound_search:
.L578:
	<entry-point>
	add.32      %r2803(j) <- %arg2, $1
	phisrc.32   %phi972(j) <- %r2803(j)
	phisrc.32   %phi976(i) <- %arg2
	br          .L582

.L582:
	phi.32      %r2805(j) <- %phi972(j), %phi973(j)
	push.64*    %arg1
	push.32     %r2805(j)
	call.64*    %r2807 <- luaH_getnum
	load.32     %r2808 <- 8[%r2807]
	phisrc.32   %phi969(j) <- %r2805(j)
	cbr         %r2808, .L579, .L593

.L579:
	mulu.32     %r2814 <- %r2805(j), $2
	seta.32     %r2817 <- %r2814, $0x7ffffffd
	phisrc.32   %phi973(j) <- %r2814
	phisrc.32   %phi977(i) <- %r2805(j)
	cbr         %r2817, .L583, .L582

.L583:
	phisrc.32   %phi981(i) <- $1
	br          .L588

.L588:
	phi.32      %r2819(i) <- %phi981(i), %phi982(i)
	push.64*    %arg1
	push.32     %r2819(i)
	call.64*    %r2821 <- luaH_getnum
	load.32     %r2822 <- 8[%r2821]
	cbr         %r2822, .L585, .L587

.L585:
	add.32      %r2826 <- %r2819(i), $1
	phisrc.32   %phi982(i) <- %r2826
	br          .L588

.L587:
	add.32      %r2828 <- %r2819(i), $-1
	phisrc.32   %phi963(return) <- %r2828
	br          .L589

.L593:
	phi.32      %r2831(j) <- %phi969(j), %phi970(j)
	phi.32      %r2832(i) <- %phi976(i), %phi977(i), %phi978(i)
	sub.32      %r2833 <- %r2831(j), %r2832(i)
	seta.32     %r2834 <- %r2833, $1
	cbr         %r2834, .L590, .L592

.L590:
	add.32      %r2837 <- %r2832(i), %r2831(j)
	divu.32     %r2838 <- %r2837, $2
	push.64*    %arg1
	push.32     %r2838
	call.64*    %r2842 <- luaH_getnum
	load.32     %r2843 <- 8[%r2842]
	cbr         %r2843, .L595, .L594

.L594:
	phisrc.32   %phi970(j) <- %r2838
	br          .L593

.L595:
	phisrc.32   %phi978(i) <- %r2838
	br          .L593

.L592:
	phisrc.32   %phi964(return) <- %r2832(i)
	br          .L589

.L589:
	phi.32      %r2830 <- %phi963(return), %phi964(return)
	ret.32      %r2830


luaH_getn:
.L597:
	<entry-point>
	load.32     %r2851 <- 56[%arg1]
	seta.32     %r2854 <- %r2851, $0
	cbr         %r2854, .L600, .L599

.L600:
	load.64*    %r2856 <- 24[%arg1]
	add.32      %r2858 <- %r2851, $-1
	cast.64     %r2859 <- (32) %r2858
	muls.64     %r2860 <- %r2859, $16
	add.64*     %r2861 <- %r2856, %r2860
	load.32     %r2862 <- 8[%r2861]
	phisrc.32   %phi998(j) <- %r2851
	cbr         %r2862, .L599, .L598

.L598:
	phisrc.32   %phi1003(i) <- $0
	br          .L604

.L604:
	phi.32      %r2864(j) <- %phi998(j), %phi999(j)
	phi.32      %r2865(i) <- %phi1003(i), %phi1004(i)
	sub.32      %r2866 <- %r2864(j), %r2865(i)
	seta.32     %r2867 <- %r2866, $1
	cbr         %r2867, .L601, .L603

.L601:
	add.32      %r2870 <- %r2865(i), %r2864(j)
	divu.32     %r2871 <- %r2870, $2
	add.32      %r2875 <- %r2871, $-1
	cast.64     %r2876 <- (32) %r2875
	muls.64     %r2877 <- %r2876, $16
	add.64*     %r2878 <- %r2856, %r2877
	load.32     %r2879 <- 8[%r2878]
	cbr         %r2879, .L606, .L605

.L605:
	phisrc.32   %phi999(j) <- %r2871
	br          .L604

.L606:
	phisrc.32   %phi1004(i) <- %r2871
	br          .L604

.L603:
	phisrc.32   %phi985(return) <- %r2865(i)
	br          .L608

.L599:
	load.64*    %r2887 <- 32[%arg1]
	symaddr.64* %r2888 <- dummynode_
	seteq.32    %r2889 <- %r2887, %r2888
	cbr         %r2889, .L610, .L611

.L610:
	phisrc.32   %phi986(return) <- %r2851
	br          .L608

.L611:
	push.64*    %arg1
	push.32     %r2851
	call.32     %r2894 <- unbound_search
	phisrc.32   %phi987(return) <- %r2894
	br          .L608

.L608:
	phi.32      %r2885 <- %phi985(return), %phi986(return), %phi987(return)
	ret.32      %r2885


removeentry:
.L613:
	<entry-point>
	load.32     %r2896 <- 24[%arg1]
	setge.32    %r2897 <- %r2896, $4
	cbr         %r2897, .L614, .L615

.L614:
	store.32    $11 -> 24[%arg1]
	br          .L615

.L615:
	ret


reallymarkobject:
.L616:
	<entry-point>
	load.8      %r2900 <- 9[%arg2]
	cast.32     %r2901 <- (8) %r2900
	and.32      %r2902 <- %r2901, $252
	scast.8     %r2903 <- (32) %r2902
	store.8     %r2903 -> 9[%arg2]
	load.8      %r2905 <- 8[%arg2]
	phisrc.8    %phi1033 <- %r2903
	phisrc.8    %phi1038 <- %r2903
	switch.8    %r2905, 4 -> .L626, 5 -> .L622, 6 -> .L621, 7 -> .L619, 8 -> .L623, 9 -> .L624, 10 -> .L620, default -> .L626

.L619:
	load.64*    %r2907 <- 16[%arg2]
	cast.32     %r2910 <- (8) %r2903
	or.32       %r2911 <- %r2910, $4
	scast.8     %r2912 <- (32) %r2911
	store.8     %r2912 -> 9[%arg2]
	cbr         %r2907, .L627, .L628

.L627:
	ptrcast.64* %r2915 <- (64) %r2907
	load.8      %r2916 <- 9[%r2915]
	cast.32     %r2917 <- (8) %r2916
	and.32      %r2918 <- %r2917, $3
	cbr         %r2918, .L629, .L628

.L629:
	push.64*    %arg1
	push.64*    %r2915
	call        reallymarkobject
	br          .L628

.L628:
	load.64*    %r2923 <- 24[%arg2]
	ptrcast.64* %r2924 <- (64) %r2923
	load.8      %r2925 <- 9[%r2924]
	cast.32     %r2926 <- (8) %r2925
	and.32      %r2927 <- %r2926, $3
	cbr         %r2927, .L631, .L626

.L631:
	push.64*    %arg1
	push.64*    %r2924
	call        reallymarkobject
	br          .L626

.L620:
	load.64*    %r2935 <- 16[%arg2]
	load.32     %r2936 <- 8[%r2935]
	setge.32    %r2937 <- %r2936, $4
	phisrc.64*  %phi1039 <- %r2935
	phisrc.64*  %phi1040 <- %r2935
	cbr         %r2937, .L635, .L634

.L635:
	load.64*    %r2940 <- 0[%r2935]
	load.8      %r2941 <- 9[%r2940]
	cast.32     %r2942 <- (8) %r2941
	and.32      %r2943 <- %r2942, $3
	cbr         %r2943, .L633, .L634

.L633:
	push.64*    %arg1
	push.64*    %r2940
	call        reallymarkobject
	br          .L634

.L634:
	load.64*    %r2949 <- 16[%arg2]
	add.64*     %r2951 <- %arg2, $24
	seteq.32    %r2953 <- %r2949, %r2951
	cbr         %r2953, .L636, .L626

.L636:
	load.8      %r2955 <- 9[%arg2]
	cast.32     %r2956 <- (8) %r2955
	or.32       %r2957 <- %r2956, $4
	scast.8     %r2958 <- (32) %r2957
	store.8     %r2958 -> 9[%arg2]
	br          .L626

.L621:
	load.64*    %r2960 <- 56[%arg1]
	store.64*   %r2960 -> 16[%arg2]
	store.64*   %arg2 -> 56[%arg1]
	br          .L626

.L622:
	load.64*    %r2965 <- 56[%arg1]
	store.64*   %r2965 -> 48[%arg2]
	store.64*   %arg2 -> 56[%arg1]
	br          .L626

.L623:
	load.64*    %r2970 <- 56[%arg1]
	store.64*   %r2970 -> 160[%arg2]
	store.64*   %arg2 -> 56[%arg1]
	br          .L626

.L624:
	load.64*    %r2975 <- 56[%arg1]
	store.64*   %r2975 -> 104[%arg2]
	store.64*   %arg2 -> 56[%arg1]
	br          .L626

.L626:
	ret


marktmu:
.L638:
	<entry-point>
	load.64*    %r2980 <- 80[%arg1]
	phisrc.64*  %phi1045(u) <- %r2980
	cbr         %r2980, .L641, .L640

.L641:
	phi.64*     %r2982 <- %phi1045(u), %phi1046(u)
	load.64*    %r2983 <- 0[%r2982]
	load.8      %r2985 <- 9[%r2983]
	cast.32     %r2986 <- (8) %r2985
	and.32      %r2987 <- %r2986, $248
	load.8      %r2989 <- 32[%arg1]
	cast.32     %r2990 <- (8) %r2989
	and.32      %r2991 <- %r2990, $3
	or.32       %r2994 <- %r2987, %r2991
	scast.8     %r2995 <- (32) %r2994
	store.8     %r2995 -> 9[%r2983]
	push.64*    %arg1
	push.64*    %r2983
	call        reallymarkobject
	phisrc.64*  %phi1046(u) <- %r2983
	load.64*    %r3001 <- 80[%arg1]
	setne.32    %r3002 <- %r2983, %r3001
	cbr         %r3002, .L641, .L640

.L640:
	ret


luaC_separateudata:
.L644:
	<entry-point>
	load.64*    %r3004 <- 32[%arg1]
	load.64*    %r3006 <- 176[%r3004]
	phisrc.64   %phi1057(deadmem) <- $0
	phisrc.64   %phi1059(deadmem) <- $0
	phisrc.64*  %phi1062(p) <- %r3006
	phisrc.64*  %phi1081 <- %r3004
	phisrc.64*  %phi1087 <- %r3004
	phisrc.64*  %phi1090 <- %r3004
	phisrc.64*  %phi1093 <- %r3004
	phisrc.64*  %phi1094 <- %r3004
	phisrc.64*  %phi1095 <- %r3004
	br          .L648

.L648:
	phi.64*     %r3008(p) <- %phi1062(p), %phi1063(p), %phi1064(p)
	load.64*    %r3009(curr) <- 0[%r3008(p)]
	cbr         %r3009(curr), .L645, .L647

.L645:
	load.8      %r3012 <- 9[%r3009(curr)]
	cast.32     %r3013 <- (8) %r3012
	and.32      %r3014 <- %r3013, $3
	setne.1     %r3015 <- %r3014, $0
	setne.1     %r3017 <- %arg2, $0
	or-bool.1   %r3018 <- %r3015, %r3017
	phisrc.8    %phi1085 <- %r3012
	phisrc.8    %phi1086 <- %r3012
	phisrc.8    %phi1088 <- %r3012
	phisrc.8    %phi1089 <- %r3012
	phisrc.8    %phi1091 <- %r3012
	phisrc.8    %phi1092 <- %r3012
	cbr         %r3018, .L651, .L649

.L651:
	cast.32     %r3022 <- (8) %r3012
	and.32      %r3023 <- %r3022, $8
	cbr         %r3023, .L649, .L650

.L649:
	phisrc.64*  %phi1063(p) <- %r3009(curr)
	br          .L648

.L650:
	load.64*    %r3028 <- 16[%r3009(curr)]
	cbr         %r3028, .L656, .L653

.L656:
	load.8      %r3032 <- 10[%r3028]
	cast.32     %r3033 <- (8) %r3032
	and.32      %r3034 <- %r3033, $4
	cbr         %r3034, .L653, .L659

.L659:
	load.64*    %r3038 <- 32[%arg1]
	load.64*    %r3039 <- 312[%r3038]
	push.64*    %r3028
	push.32     $2
	push.64*    %r3039
	call.64*    %r3040 <- luaT_gettm
	cbr         %r3040, .L654, .L653

.L653:
	load.8      %r3045 <- 9[%r3009(curr)]
	cast.32     %r3046 <- (8) %r3045
	or.32       %r3047 <- %r3046, $8
	scast.8     %r3048 <- (32) %r3047
	store.8     %r3048 -> 9[%r3009(curr)]
	phisrc.64*  %phi1064(p) <- %r3009(curr)
	br          .L648

.L654:
	load.64     %r3053 <- 32[%r3009(curr)]
	add.64      %r3054 <- %r3053, $40
	phi.64      %r3055 <- %phi1059(deadmem), %phi1060(deadmem)
	add.64      %r3057 <- %r3055, %r3054
	load.8      %r3060 <- 9[%r3009(curr)]
	cast.32     %r3061 <- (8) %r3060
	or.32       %r3062 <- %r3061, $8
	scast.8     %r3063 <- (32) %r3062
	store.8     %r3063 -> 9[%r3009(curr)]
	load.64*    %r3065 <- 0[%r3009(curr)]
	store.64*   %r3065 -> 0[%r3008(p)]
	load.64*    %r3068 <- 80[%r3004]
	phisrc.64   %phi1058(deadmem) <- %r3057
	phisrc.64   %phi1060(deadmem) <- %r3057
	cbr         %r3068, .L663, .L662

.L662:
	store.64*   %r3009(curr) -> 0[%r3009(curr)]
	store.64*   %r3009(curr) -> 80[%r3004]
	br          .L648

.L663:
	load.64*    %r3075 <- 0[%r3068]
	store.64*   %r3075 -> 0[%r3009(curr)]
	load.64*    %r3079 <- 80[%r3004]
	store.64*   %r3009(curr) -> 0[%r3079]
	store.64*   %r3009(curr) -> 80[%r3004]
	br          .L648

.L647:
	phi.64      %r3082 <- %phi1057(deadmem), %phi1058(deadmem)
	ret.64      %r3082


traversetable:
.L666:
	<entry-point>
	load.64*    %r3085 <- 16[%arg2]
	phisrc.32   %phi1152(weakkey) <- $0
	phisrc.32   %phi1160(weakvalue) <- $0
	phisrc.64*  %phi1194 <- %r3085
	phisrc.64*  %phi1195 <- %r3085
	phisrc.64*  %phi1197 <- %r3085
	phisrc.64*  %phi1198 <- %r3085
	phisrc.64*  %phi1200 <- %r3085
	phisrc.64*  %phi1201 <- %r3085
	phisrc.64*  %phi1203 <- %r3085
	phisrc.64*  %phi1204 <- %r3085
	phisrc.64*  %phi1206 <- %r3085
	phisrc.64*  %phi1207 <- %r3085
	cbr         %r3085, .L667, .L668

.L667:
	ptrcast.64* %r3088 <- (64) %r3085
	load.8      %r3089 <- 9[%r3088]
	cast.32     %r3090 <- (8) %r3089
	and.32      %r3091 <- %r3090, $3
	cbr         %r3091, .L669, .L668

.L669:
	ptrcast.64* %r3095 <- (64) %r3085
	push.64*    %arg1
	push.64*    %r3095
	call        reallymarkobject
	br          .L668

.L668:
	load.64*    %r3097 <- 16[%arg2]
	cbr         %r3097, .L672, .L678

.L672:
	load.8      %r3101 <- 10[%r3097]
	cast.32     %r3102 <- (8) %r3101
	and.32      %r3103 <- %r3102, $8
	cbr         %r3103, .L678, .L675

.L675:
	load.64*    %r3107 <- 320[%arg1]
	push.64*    %r3097
	push.32     $3
	push.64*    %r3107
	call.64*    %r3108 <- luaT_gettm
	cbr         %r3108, .L679, .L678

.L679:
	load.32     %r3113 <- 8[%r3108]
	seteq.32    %r3115 <- %r3113, $4
	cbr         %r3115, .L677, .L678

.L677:
	load.64*    %r3117 <- 0[%r3108]
	add.64*     %r3119 <- %r3117, $24
	ptrcast.64* %r3120 <- (64) %r3119
	push.64*    %r3120
	push.32     $107
	call.64*    %r3121 <- strchr
	setne.32    %r3122 <- %r3121, $0
	load.64*    %r3124 <- 0[%r3108]
	add.64*     %r3126 <- %r3124, $24
	ptrcast.64* %r3127 <- (64) %r3126
	push.64*    %r3127
	push.32     $118
	call.64*    %r3128 <- strchr
	setne.32    %r3129 <- %r3128, $0
	setne.1     %r3131 <- %r3121, $0
	setne.1     %r3133 <- %r3128, $0
	or-bool.1   %r3134 <- %r3131, %r3133
	phisrc.32   %phi1153(weakkey) <- %r3122
	phisrc.32   %phi1161(weakvalue) <- %r3129
	cbr         %r3134, .L680, .L678

.L680:
	load.8      %r3137 <- 9[%arg2]
	cast.32     %r3138 <- (8) %r3137
	and.32      %r3139 <- %r3138, $0xffffffe7
	scast.8     %r3140 <- (32) %r3139
	shl.32      %r3142 <- %r3122, $3
	shl.32      %r3144 <- %r3129, $4
	or.32       %r3145 <- %r3142, %r3144
	scast.8     %r3146 <- (32) %r3145
	cast.32     %r3147 <- (8) %r3146
	cast.32     %r3150 <- (8) %r3140
	or.32       %r3151 <- %r3150, %r3147
	scast.8     %r3152 <- (32) %r3151
	store.8     %r3152 -> 9[%arg2]
	load.64*    %r3154 <- 72[%arg1]
	store.64*   %r3154 -> 48[%arg2]
	ptrcast.64* %r3157 <- (64) %arg2
	store.64*   %r3157 -> 72[%arg1]
	phisrc.32   %phi1154(weakkey) <- %r3122
	phisrc.32   %phi1162(weakvalue) <- %r3129
	br          .L678

.L678:
	phi.32      %r3159(weakkey) <- %phi1152(weakkey), %phi1153(weakkey), %phi1154(weakkey)
	setne.1     %r3160 <- %r3159(weakkey), $0
	phi.32      %r3161(weakvalue) <- %phi1160(weakvalue), %phi1161(weakvalue), %phi1162(weakvalue)
	setne.1     %r3162 <- %r3161(weakvalue), $0
	and-bool.1  %r3163 <- %r3160, %r3162
	cbr         %r3163, .L682, .L683

.L682:
	phisrc.32   %phi1100(return) <- $1
	br          .L684

.L683:
	cbr         %r3161(weakvalue), .L686, .L685

.L685:
	load.32     %r3168(i) <- 56[%arg2]
	phisrc.32   %phi1172(i) <- %r3168(i)
	br          .L690

.L690:
	phi.32      %r3169 <- %phi1172(i), %phi1173(i)
	add.32      %r3170(i) <- %r3169, $-1
	phisrc.32   %phi1173(i) <- %r3170(i)
	cbr         %r3169, .L687, .L686

.L687:
	load.64*    %r3172 <- 24[%arg2]
	scast.64    %r3174 <- (32) %r3170(i)
	muls.64     %r3175 <- %r3174, $16
	add.64*     %r3176 <- %r3172, %r3175
	load.32     %r3177 <- 8[%r3176]
	setge.32    %r3178 <- %r3177, $4
	cbr         %r3178, .L693, .L690

.L693:
	load.64*    %r3185 <- 0[%r3176]
	load.8      %r3186 <- 9[%r3185]
	cast.32     %r3187 <- (8) %r3186
	and.32      %r3188 <- %r3187, $3
	cbr         %r3188, .L691, .L690

.L691:
	push.64*    %arg1
	push.64*    %r3185
	call        reallymarkobject
	br          .L690

.L686:
	load.8      %r3198 <- 11[%arg2]
	cast.32     %r3199 <- (8) %r3198
	shl.64      %r3200 <- $1, %r3199
	cast.32     %r3201(i) <- (64) %r3200
	phisrc.32   %phi1167(i) <- %r3201(i)
	br          .L697

.L697:
	phi.32      %r3202 <- %phi1167(i), %phi1168(i)
	add.32      %r3203(i) <- %r3202, $-1
	phisrc.32   %phi1168(i) <- %r3203(i)
	cbr         %r3202, .L694, .L696

.L694:
	load.64*    %r3205 <- 32[%arg2]
	scast.64    %r3207 <- (32) %r3203(i)
	muls.64     %r3208 <- %r3207, $40
	add.64*     %r3209 <- %r3205, %r3208
	load.32     %r3211 <- 8[%r3209]
	phisrc.32   %phi1192 <- %r3211
	phisrc.32   %phi1196 <- %r3211
	phisrc.32   %phi1199 <- %r3211
	phisrc.32   %phi1202 <- %r3211
	phisrc.32   %phi1205 <- %r3211
	cbr         %r3211, .L699, .L698

.L698:
	push.64*    %r3209
	call        removeentry
	br          .L697

.L699:
	cbr         %r3159(weakkey), .L702, .L701

.L701:
	load.32     %r3216 <- 24[%r3209]
	setge.32    %r3217 <- %r3216, $4
	cbr         %r3217, .L705, .L702

.L705:
	load.64*    %r3219 <- 16[%r3209]
	load.8      %r3220 <- 9[%r3219]
	cast.32     %r3221 <- (8) %r3220
	and.32      %r3222 <- %r3221, $3
	cbr         %r3222, .L703, .L702

.L703:
	push.64*    %arg1
	push.64*    %r3219
	call        reallymarkobject
	br          .L702

.L702:
	cbr         %r3161(weakvalue), .L697, .L706

.L706:
	load.32     %r3228 <- 8[%r3209]
	setge.32    %r3229 <- %r3228, $4
	cbr         %r3229, .L710, .L697

.L710:
	load.64*    %r3231 <- 0[%r3209]
	load.8      %r3232 <- 9[%r3231]
	cast.32     %r3233 <- (8) %r3232
	and.32      %r3234 <- %r3233, $3
	cbr         %r3234, .L708, .L697

.L708:
	push.64*    %arg1
	push.64*    %r3231
	call        reallymarkobject
	br          .L697

.L696:
	or-bool.1   %r3242 <- %r3160, %r3162
	cast.32     %r3243 <- (1) %r3242
	phisrc.32   %phi1101(return) <- %r3243
	br          .L684

.L684:
	phi.32      %r3165 <- %phi1100(return), %phi1101(return)
	ret.32      %r3165


traverseproto:
.L711:
	<entry-point>
	load.64*    %r3245 <- 64[%arg2]
	cbr         %r3245, .L712, .L713

.L712:
	load.8      %r3248 <- 9[%r3245]
	cast.32     %r3249 <- (8) %r3248
	and.32      %r3250 <- %r3249, $252
	scast.8     %r3251 <- (32) %r3250
	store.8     %r3251 -> 9[%r3245]
	br          .L713

.L713:
	phisrc.32   %phi1253(i) <- $0
	br          .L717

.L717:
	phi.32      %r3252(i) <- %phi1253(i), %phi1254(i)
	load.32     %r3254 <- 76[%arg2]
	setlt.32    %r3255 <- %r3252(i), %r3254
	cbr         %r3255, .L714, .L716

.L714:
	load.64*    %r3257 <- 16[%arg2]
	scast.64    %r3259 <- (32) %r3252(i)
	muls.64     %r3260 <- %r3259, $16
	add.64*     %r3261 <- %r3257, %r3260
	load.32     %r3262 <- 8[%r3261]
	setge.32    %r3263 <- %r3262, $4
	cbr         %r3263, .L720, .L715

.L720:
	load.64*    %r3270 <- 0[%r3261]
	load.8      %r3271 <- 9[%r3270]
	cast.32     %r3272 <- (8) %r3271
	and.32      %r3273 <- %r3272, $3
	cbr         %r3273, .L718, .L715

.L718:
	push.64*    %arg1
	push.64*    %r3270
	call        reallymarkobject
	br          .L715

.L715:
	add.32      %r3283 <- %r3252(i), $1
	phisrc.32   %phi1254(i) <- %r3283
	br          .L717

.L716:
	phisrc.32   %phi1245(i) <- $0
	br          .L724

.L724:
	phi.32      %r3284(i) <- %phi1245(i), %phi1246(i)
	load.32     %r3286 <- 72[%arg2]
	setlt.32    %r3287 <- %r3284(i), %r3286
	cbr         %r3287, .L721, .L723

.L721:
	load.64*    %r3289 <- 56[%arg2]
	scast.64    %r3291 <- (32) %r3284(i)
	muls.64     %r3292 <- %r3291, $8
	add.64*     %r3293 <- %r3289, %r3292
	load.64*    %r3294 <- 0[%r3293]
	cbr         %r3294, .L725, .L722

.L725:
	load.8      %r3302 <- 9[%r3294]
	cast.32     %r3303 <- (8) %r3302
	and.32      %r3304 <- %r3303, $252
	scast.8     %r3305 <- (32) %r3304
	store.8     %r3305 -> 9[%r3294]
	br          .L722

.L722:
	add.32      %r3307 <- %r3284(i), $1
	phisrc.32   %phi1246(i) <- %r3307
	br          .L724

.L723:
	phisrc.32   %phi1239(i) <- $0
	br          .L730

.L730:
	phi.32      %r3308(i) <- %phi1239(i), %phi1240(i)
	load.32     %r3310 <- 88[%arg2]
	setlt.32    %r3311 <- %r3308(i), %r3310
	cbr         %r3311, .L727, .L729

.L727:
	load.64*    %r3313 <- 32[%arg2]
	scast.64    %r3315 <- (32) %r3308(i)
	muls.64     %r3316 <- %r3315, $8
	add.64*     %r3317 <- %r3313, %r3316
	load.64*    %r3318 <- 0[%r3317]
	cbr         %r3318, .L731, .L728

.L731:
	ptrcast.64* %r3326 <- (64) %r3318
	load.8      %r3327 <- 9[%r3326]
	cast.32     %r3328 <- (8) %r3327
	and.32      %r3329 <- %r3328, $3
	cbr         %r3329, .L733, .L728

.L733:
	ptrcast.64* %r3338 <- (64) %r3318
	push.64*    %arg1
	push.64*    %r3338
	call        reallymarkobject
	br          .L728

.L728:
	add.32      %r3340 <- %r3308(i), $1
	phisrc.32   %phi1240(i) <- %r3340
	br          .L730

.L729:
	phisrc.32   %phi1231(i) <- $0
	br          .L738

.L738:
	phi.32      %r3341(i) <- %phi1231(i), %phi1232(i)
	load.32     %r3343 <- 92[%arg2]
	setlt.32    %r3344 <- %r3341(i), %r3343
	cbr         %r3344, .L735, .L737

.L735:
	load.64*    %r3346 <- 48[%arg2]
	scast.64    %r3348 <- (32) %r3341(i)
	muls.64     %r3349 <- %r3348, $16
	add.64*     %r3350 <- %r3346, %r3349
	load.64*    %r3351 <- 0[%r3350]
	cbr         %r3351, .L739, .L736

.L739:
	load.8      %r3359 <- 9[%r3351]
	cast.32     %r3360 <- (8) %r3359
	and.32      %r3361 <- %r3360, $252
	scast.8     %r3362 <- (32) %r3361
	store.8     %r3362 -> 9[%r3351]
	br          .L736

.L736:
	add.32      %r3364 <- %r3341(i), $1
	phisrc.32   %phi1232(i) <- %r3364
	br          .L738

.L737:
	ret


traverseclosure:
.L741:
	<entry-point>
	load.64*    %r3366 <- 24[%arg2]
	ptrcast.64* %r3367 <- (64) %r3366
	load.8      %r3368 <- 9[%r3367]
	cast.32     %r3369 <- (8) %r3368
	and.32      %r3370 <- %r3369, $3
	cbr         %r3370, .L742, .L743

.L742:
	ptrcast.64* %r3374 <- (64) %r3366
	push.64*    %arg1
	push.64*    %r3374
	call        reallymarkobject
	br          .L743

.L743:
	load.8      %r3376 <- 10[%arg2]
	cbr         %r3376, .L744, .L745

.L744:
	phisrc.32   %phi1294(i) <- $0
	br          .L749

.L749:
	phi.32      %r3377(i) <- %phi1294(i), %phi1295(i)
	load.8      %r3379 <- 11[%arg2]
	cast.32     %r3380 <- (8) %r3379
	setlt.32    %r3381 <- %r3377(i), %r3380
	cbr         %r3381, .L746, .L753

.L746:
	add.64*     %r3384 <- %arg2, $40
	scast.64    %r3386 <- (32) %r3377(i)
	muls.64     %r3387 <- %r3386, $16
	add.64*     %r3388 <- %r3384, %r3387
	load.32     %r3389 <- 8[%r3388]
	setge.32    %r3390 <- %r3389, $4
	cbr         %r3390, .L752, .L747

.L752:
	load.64*    %r3398 <- 0[%r3388]
	load.8      %r3399 <- 9[%r3398]
	cast.32     %r3400 <- (8) %r3399
	and.32      %r3401 <- %r3400, $3
	cbr         %r3401, .L750, .L747

.L750:
	push.64*    %arg1
	push.64*    %r3398
	call        reallymarkobject
	br          .L747

.L747:
	add.32      %r3412 <- %r3377(i), $1
	phisrc.32   %phi1295(i) <- %r3412
	br          .L749

.L745:
	load.64*    %r3414 <- 32[%arg2]
	ptrcast.64* %r3415 <- (64) %r3414
	load.8      %r3416 <- 9[%r3415]
	cast.32     %r3417 <- (8) %r3416
	and.32      %r3418 <- %r3417, $3
	cbr         %r3418, .L754, .L755

.L754:
	ptrcast.64* %r3422 <- (64) %r3414
	push.64*    %arg1
	push.64*    %r3422
	call        reallymarkobject
	br          .L755

.L755:
	phisrc.32   %phi1300(i) <- $0
	br          .L759

.L759:
	phi.32      %r3423(i) <- %phi1300(i), %phi1301(i)
	load.8      %r3425 <- 11[%arg2]
	cast.32     %r3426 <- (8) %r3425
	setlt.32    %r3427 <- %r3423(i), %r3426
	cbr         %r3427, .L756, .L753

.L756:
	add.64*     %r3430 <- %arg2, $40
	scast.64    %r3432 <- (32) %r3423(i)
	muls.64     %r3433 <- %r3432, $8
	add.64*     %r3434 <- %r3430, %r3433
	load.64*    %r3435 <- 0[%r3434]
	ptrcast.64* %r3436 <- (64) %r3435
	load.8      %r3437 <- 9[%r3436]
	cast.32     %r3438 <- (8) %r3437
	and.32      %r3439 <- %r3438, $3
	cbr         %r3439, .L760, .L757

.L760:
	add.64*     %r3443 <- %arg2, $40
	add.64*     %r3447 <- %r3443, %r3433
	load.64*    %r3448 <- 0[%r3447]
	ptrcast.64* %r3449 <- (64) %r3448
	push.64*    %arg1
	push.64*    %r3449
	call        reallymarkobject
	br          .L757

.L757:
	add.32      %r3451 <- %r3423(i), $1
	phisrc.32   %phi1301(i) <- %r3451
	br          .L759

.L753:
	ret


checkstacksizes:
.L762:
	<entry-point>
	load.64*    %r3453 <- 40[%arg1]
	load.64*    %r3455 <- 80[%arg1]
	sub.64      %r3456 <- %r3453, %r3455
	divs.64     %r3457 <- %r3456, $40
	scast.32    %r3458(ci_used) <- (64) %r3457
	load.64*    %r3461 <- 64[%arg1]
	sub.64      %r3462 <- %arg2, %r3461
	divs.64     %r3463 <- %r3462, $16
	scast.32    %r3464(s_used) <- (64) %r3463
	load.32     %r3466 <- 92[%arg1]
	setgt.32    %r3467 <- %r3466, $0x4e20
	cbr         %r3467, .L765, .L764

.L764:
	muls.32     %r3469 <- %r3458(ci_used), $4
	setlt.32    %r3472 <- %r3469, %r3466
	cbr         %r3472, .L768, .L767

.L768:
	setlt.32    %r3475 <- $16, %r3466
	cbr         %r3475, .L766, .L767

.L766:
	divs.32     %r3479 <- %r3466, $2
	push.64*    %arg1
	push.32     %r3479
	call        luaD_reallocCI
	br          .L767

.L767:
	muls.32     %r3481 <- %r3464(s_used), $4
	load.32     %r3483 <- 88[%arg1]
	setlt.32    %r3484 <- %r3481, %r3483
	cbr         %r3484, .L771, .L765

.L771:
	setlt.32    %r3487 <- $90, %r3483
	cbr         %r3487, .L769, .L765

.L769:
	divs.32     %r3491 <- %r3483, $2
	push.64*    %arg1
	push.32     %r3491
	call        luaD_reallocstack
	br          .L765

.L765:
	ret


traversestack:
.L772:
	<entry-point>
	load.32     %r3493 <- 128[%arg2]
	setge.32    %r3494 <- %r3493, $4
	cbr         %r3494, .L775, .L774

.L775:
	load.64*    %r3496 <- 120[%arg2]
	load.8      %r3497 <- 9[%r3496]
	cast.32     %r3498 <- (8) %r3497
	and.32      %r3499 <- %r3498, $3
	cbr         %r3499, .L773, .L774

.L773:
	push.64*    %arg1
	push.64*    %r3496
	call        reallymarkobject
	br          .L774

.L774:
	load.64*    %r3504(lim) <- 16[%arg2]
	load.64*    %r3506(ci) <- 80[%arg2]
	phisrc.64*  %phi1333(lim) <- %r3504(lim)
	phisrc.64*  %phi1336(lim) <- %r3504(lim)
	phisrc.64*  %phi1342(ci) <- %r3506(ci)
	phisrc.64*  %phi1357(lim) <- %r3504(lim)
	phisrc.64*  %phi1360(lim) <- %r3504(lim)
	br          .L779

.L779:
	phi.64*     %r3507(ci) <- %phi1342(ci), %phi1343(ci)
	load.64*    %r3509 <- 40[%arg2]
	setbe.32    %r3510 <- %r3507(ci), %r3509
	cbr         %r3510, .L776, .L778

.L776:
	phi.64*     %r3511 <- %phi1336(lim), %phi1337(lim)
	load.64*    %r3513 <- 16[%r3507(ci)]
	setb.32     %r3514 <- %r3511, %r3513
	phisrc.64*  %phi1334(lim) <- %r3511
	cbr         %r3514, .L780, .L777

.L780:
	phisrc.64*  %phi1335(lim) <- %r3513
	phisrc.64*  %phi1337(lim) <- %r3513
	br          .L777

.L777:
	add.64*     %r3518 <- %r3507(ci), $40
	phisrc.64*  %phi1343(ci) <- %r3518
	br          .L779

.L778:
	load.64*    %r3520(o) <- 64[%arg2]
	phisrc.64*  %phi1354(o) <- %r3520(o)
	br          .L785

.L785:
	phi.64*     %r3521(o) <- %phi1354(o), %phi1355(o)
	load.64*    %r3523 <- 16[%arg2]
	setb.32     %r3524 <- %r3521(o), %r3523
	phisrc.64*  %phi1346(o) <- %r3521(o)
	cbr         %r3524, .L782, .L792

.L782:
	load.32     %r3526 <- 8[%r3521(o)]
	setge.32    %r3527 <- %r3526, $4
	cbr         %r3527, .L788, .L783

.L788:
	load.64*    %r3529 <- 0[%r3521(o)]
	load.8      %r3530 <- 9[%r3529]
	cast.32     %r3531 <- (8) %r3530
	and.32      %r3532 <- %r3531, $3
	cbr         %r3532, .L786, .L783

.L786:
	push.64*    %arg1
	push.64*    %r3529
	call        reallymarkobject
	br          .L783

.L783:
	add.64*     %r3537 <- %r3521(o), $16
	phisrc.64*  %phi1355(o) <- %r3537
	br          .L785

.L792:
	phi.64*     %r3538(o) <- %phi1346(o), %phi1347(o)
	phi.64*     %r3539(lim) <- %phi1333(lim), %phi1334(lim), %phi1335(lim)
	setbe.32    %r3540 <- %r3538(o), %r3539(lim)
	cbr         %r3540, .L789, .L791

.L789:
	store.32    $0 -> 8[%r3538(o)]
	add.64*     %r3543 <- %r3538(o), $16
	phisrc.64*  %phi1347(o) <- %r3543
	br          .L792

.L791:
	push.64*    %arg2
	push.64*    %r3539(lim)
	call        checkstacksizes
	ret


propagatemark:
.L794:
	<entry-point>
	load.64*    %r3547 <- 56[%arg1]
	load.8      %r3549 <- 9[%r3547]
	cast.32     %r3550 <- (8) %r3549
	or.32       %r3551 <- %r3550, $4
	scast.8     %r3552 <- (32) %r3551
	store.8     %r3552 -> 9[%r3547]
	load.8      %r3554 <- 8[%r3547]
	switch.8    %r3554, 5 -> .L796, 6 -> .L797, 8 -> .L798, 9 -> .L799, default -> .L800

.L796:
	load.64*    %r3558 <- 48[%r3547]
	store.64*   %r3558 -> 56[%arg1]
	push.64*    %arg1
	push.64*    %r3547
	call.32     %r3562 <- traversetable
	cbr         %r3562, .L801, .L802

.L801:
	load.8      %r3564 <- 9[%r3547]
	cast.32     %r3565 <- (8) %r3564
	and.32      %r3566 <- %r3565, $251
	scast.8     %r3567 <- (32) %r3566
	store.8     %r3567 -> 9[%r3547]
	br          .L802

.L802:
	load.32     %r3569 <- 56[%r3547]
	scast.64    %r3570 <- (32) %r3569
	mulu.64     %r3571 <- %r3570, $16
	add.64      %r3572 <- %r3571, $64
	load.8      %r3574 <- 11[%r3547]
	cast.32     %r3575 <- (8) %r3574
	shl.64      %r3576 <- $1, %r3575
	mulu.64     %r3577 <- %r3576, $40
	add.64      %r3578 <- %r3572, %r3577
	phisrc.64   %phi1361(return) <- %r3578
	br          .L803

.L797:
	load.64*    %r3584 <- 16[%r3547]
	store.64*   %r3584 -> 56[%arg1]
	push.64*    %arg1
	push.64*    %r3547
	call        traverseclosure
	load.8      %r3589 <- 10[%r3547]
	cbr         %r3589, .L804, .L805

.L804:
	load.8      %r3591 <- 11[%r3547]
	cast.32     %r3592 <- (8) %r3591
	add.32      %r3593 <- %r3592, $-1
	scast.64    %r3594 <- (32) %r3593
	mulu.64     %r3595 <- %r3594, $16
	cast.32     %r3596 <- (64) %r3595
	add.32      %r3597 <- %r3596, $56
	phisrc.32   %phi1362 <- %r3597
	br          .L806

.L805:
	load.8      %r3599 <- 11[%r3547]
	cast.32     %r3600 <- (8) %r3599
	add.32      %r3601 <- %r3600, $-1
	scast.64    %r3602 <- (32) %r3601
	mulu.64     %r3603 <- %r3602, $8
	cast.32     %r3604 <- (64) %r3603
	add.32      %r3605 <- %r3604, $48
	phisrc.32   %phi1363 <- %r3605
	br          .L806

.L806:
	phi.32      %r3606 <- %phi1362, %phi1363
	scast.64    %r3607 <- (32) %r3606
	phisrc.64   %phi1364(return) <- %r3607
	br          .L803

.L798:
	load.64*    %r3611 <- 160[%r3547]
	store.64*   %r3611 -> 56[%arg1]
	load.64*    %r3614 <- 64[%arg1]
	store.64*   %r3614 -> 160[%r3547]
	store.64*   %r3547 -> 64[%arg1]
	load.8      %r3619 <- 9[%r3547]
	cast.32     %r3620 <- (8) %r3619
	and.32      %r3621 <- %r3620, $251
	scast.8     %r3622 <- (32) %r3621
	store.8     %r3622 -> 9[%r3547]
	push.64*    %arg1
	push.64*    %r3547
	call        traversestack
	load.32     %r3626 <- 88[%r3547]
	scast.64    %r3627 <- (32) %r3626
	mulu.64     %r3628 <- %r3627, $16
	add.64      %r3629 <- %r3628, $184
	load.32     %r3631 <- 92[%r3547]
	scast.64    %r3632 <- (32) %r3631
	mulu.64     %r3633 <- %r3632, $40
	add.64      %r3634 <- %r3629, %r3633
	phisrc.64   %phi1365(return) <- %r3634
	br          .L803

.L799:
	load.64*    %r3639 <- 104[%r3547]
	store.64*   %r3639 -> 56[%arg1]
	push.64*    %arg1
	push.64*    %r3547
	call        traverseproto
	load.32     %r3644 <- 80[%r3547]
	scast.64    %r3645 <- (32) %r3644
	mulu.64     %r3646 <- %r3645, $4
	add.64      %r3647 <- %r3646, $120
	load.32     %r3649 <- 88[%r3547]
	scast.64    %r3650 <- (32) %r3649
	mulu.64     %r3651 <- %r3650, $8
	add.64      %r3652 <- %r3647, %r3651
	load.32     %r3654 <- 76[%r3547]
	scast.64    %r3655 <- (32) %r3654
	mulu.64     %r3656 <- %r3655, $16
	add.64      %r3657 <- %r3652, %r3656
	load.32     %r3659 <- 84[%r3547]
	scast.64    %r3660 <- (32) %r3659
	mulu.64     %r3661 <- %r3660, $4
	add.64      %r3662 <- %r3657, %r3661
	load.32     %r3664 <- 92[%r3547]
	scast.64    %r3665 <- (32) %r3664
	mulu.64     %r3666 <- %r3665, $16
	add.64      %r3667 <- %r3662, %r3666
	load.32     %r3669 <- 72[%r3547]
	scast.64    %r3670 <- (32) %r3669
	mulu.64     %r3671 <- %r3670, $8
	add.64      %r3672 <- %r3667, %r3671
	phisrc.64   %phi1366(return) <- %r3672
	br          .L803

.L800:
	phisrc.64   %phi1367(return) <- $0
	br          .L803

.L803:
	phi.64      %r3580 <- %phi1361(return), %phi1364(return), %phi1365(return), %phi1366(return), %phi1367(return)
	ret.64      %r3580


propagateall:
.L807:
	<entry-point>
	phisrc.64   %phi1385(m) <- $0
	br          .L811

.L811:
	load.64*    %r3675 <- 56[%arg1]
	phi.64      %r3679 <- %phi1385(m), %phi1386(m)
	cbr         %r3675, .L808, .L812

.L808:
	push.64*    %arg1
	call.64     %r3677 <- propagatemark
	add.64      %r3681 <- %r3679, %r3677
	phisrc.64   %phi1386(m) <- %r3681
	br          .L811

.L812:
	ret.64      %r3679


iscleared:
.L813:
	<entry-point>
	load.32     %r3686 <- 8[%arg1]
	setge.32    %r3688 <- %r3686, $4
	cbr         %r3688, .L815, .L814

.L814:
	phisrc.32   %phi1387(return) <- $0
	br          .L816

.L815:
	seteq.32    %r3693 <- %r3686, $4
	cbr         %r3693, .L817, .L818

.L817:
	load.64*    %r3695 <- 0[%arg1]
	load.8      %r3696 <- 9[%r3695]
	cast.32     %r3697 <- (8) %r3696
	and.32      %r3698 <- %r3697, $252
	scast.8     %r3699 <- (32) %r3698
	store.8     %r3699 -> 9[%r3695]
	phisrc.32   %phi1388(return) <- $0
	br          .L816

.L818:
	load.64*    %r3701 <- 0[%arg1]
	load.8      %r3702 <- 9[%r3701]
	cast.32     %r3703 <- (8) %r3702
	and.32      %r3704 <- %r3703, $3
	cbr         %r3704, .L819, .L820

.L819:
	phisrc.32   %phi1389 <- $1
	br          .L821

.L820:
	seteq.32    %r3708 <- %r3686, $7
	cbr         %r3708, .L822, .L823

.L822:
	cbr         %arg2, .L826, .L825

.L825:
	load.8      %r3712 <- 9[%r3701]
	cast.32     %r3713 <- (8) %r3712
	and.32      %r3714 <- %r3713, $8
	phisrc.32   %phi1390 <- %r3714
	br          .L827

.L826:
	phisrc.32   %phi1391 <- $0
	br          .L827

.L827:
	phi.32      %r3715 <- %phi1390, %phi1391
	phisrc.32   %phi1392 <- %r3715
	br          .L824

.L823:
	phisrc.32   %phi1393 <- $0
	br          .L824

.L824:
	phi.32      %r3716 <- %phi1392, %phi1393
	phisrc.32   %phi1394 <- %r3716
	br          .L821

.L821:
	phi.32      %r3717 <- %phi1389, %phi1394
	phisrc.32   %phi1395(return) <- %r3717
	br          .L816

.L816:
	phi.32      %r3689 <- %phi1387(return), %phi1388(return), %phi1395(return)
	ret.32      %r3689


cleartable:
.L828:
	<entry-point>
	phisrc.64*  %phi1406(l) <- %arg1
	br          .L832

.L832:
	phi.64*     %r3718(l) <- %phi1406(l), %phi1407(l)
	cbr         %r3718(l), .L829, .L831

.L829:
	load.32     %r3722(i) <- 56[%r3718(l)]
	load.8      %r3724 <- 9[%r3718(l)]
	cast.32     %r3725 <- (8) %r3724
	and.32      %r3726 <- %r3725, $16
	phisrc.32   %phi1418(i) <- %r3722(i)
	cbr         %r3726, .L838, .L834

.L838:
	phi.32      %r3727 <- %phi1418(i), %phi1419(i)
	add.32      %r3728(i) <- %r3727, $-1
	phisrc.32   %phi1419(i) <- %r3728(i)
	cbr         %r3727, .L835, .L834

.L835:
	load.64*    %r3730 <- 24[%r3718(l)]
	scast.64    %r3732 <- (32) %r3728(i)
	muls.64     %r3733 <- %r3732, $16
	add.64*     %r3734 <- %r3730, %r3733
	push.64*    %r3734
	push.32     $0
	call.32     %r3736 <- iscleared
	cbr         %r3736, .L839, .L838

.L839:
	store.32    $0 -> 8[%r3734]
	br          .L838

.L834:
	load.8      %r3739 <- 11[%r3718(l)]
	cast.32     %r3740 <- (8) %r3739
	shl.64      %r3741 <- $1, %r3740
	cast.32     %r3742(i) <- (64) %r3741
	phisrc.32   %phi1415(i) <- %r3742(i)
	br          .L844

.L844:
	phi.32      %r3743 <- %phi1415(i), %phi1416(i)
	add.32      %r3744(i) <- %r3743, $-1
	phisrc.32   %phi1416(i) <- %r3744(i)
	cbr         %r3743, .L841, .L843

.L841:
	load.64*    %r3746 <- 32[%r3718(l)]
	scast.64    %r3748 <- (32) %r3744(i)
	muls.64     %r3749 <- %r3748, $40
	add.64*     %r3750 <- %r3746, %r3749
	load.32     %r3752 <- 8[%r3750]
	cbr         %r3752, .L847, .L844

.L847:
	add.64*     %r3755 <- %r3750, $16
	push.64*    %r3755
	push.32     $1
	call.32     %r3757 <- iscleared
	cbr         %r3757, .L845, .L848

.L848:
	push.64*    %r3750
	push.32     $0
	call.32     %r3760 <- iscleared
	cbr         %r3760, .L845, .L844

.L845:
	store.32    $0 -> 8[%r3750]
	push.64*    %r3750
	call        removeentry
	br          .L844

.L843:
	load.64*    %r3764 <- 48[%r3718(l)]
	phisrc.64*  %phi1407(l) <- %r3764
	br          .L832

.L831:
	ret


freeobj:
.L849:
	<entry-point>
	load.8      %r3766 <- 8[%arg2]
	cast.64*    %r3788 <- (64) %arg2
	switch.8    %r3766, 4 -> .L856, 5 -> .L854, 6 -> .L852, 7 -> .L857, 8 -> .L855, 9 -> .L851, 10 -> .L853, default -> .L850

.L851:
	push.64*    %arg1
	push.64*    %arg2
	call        luaF_freeproto
	br          .L850

.L852:
	push.64*    %arg1
	push.64*    %arg2
	call        luaF_freeclosure
	br          .L850

.L853:
	push.64*    %arg1
	push.64*    %arg2
	call        luaF_freeupval
	br          .L850

.L854:
	push.64*    %arg1
	push.64*    %arg2
	call        luaH_free
	br          .L850

.L855:
	push.64*    %arg1
	push.64*    %arg2
	call        luaE_freethread
	br          .L850

.L856:
	load.64*    %r3783 <- 32[%arg1]
	load.32     %r3784 <- 8[%r3783]
	add.32      %r3785 <- %r3784, $-1
	store.32    %r3785 -> 8[%r3783]
	load.64     %r3790 <- 16[%arg2]
	add.64      %r3793 <- %r3790, $25
	push.64*    %arg1
	push.64*    %r3788
	push.64     %r3793
	push.64     $0
	call.64*    %r3794 <- luaM_realloc_
	br          .L850

.L857:
	load.64     %r3799 <- 32[%arg2]
	add.64      %r3800 <- %r3799, $40
	push.64*    %arg1
	push.64*    %r3788
	push.64     %r3800
	push.64     $0
	call.64*    %r3801 <- luaM_realloc_
	br          .L850

.L850:
	ret


sweeplist:
.L859:
	<entry-point>
	load.64*    %r3803 <- 32[%arg1]
	load.8      %r3805 <- 32[%r3803]
	cast.32     %r3806 <- (8) %r3805
	xor.32      %r3807(deadmask) <- %r3806, $3
	phisrc.64*  %phi1445(p) <- %arg2
	phisrc.64   %phi1447(count) <- %arg3
	phisrc.8    %phi1463 <- %r3805
	phisrc.8    %phi1465 <- %r3805
	br          .L863

.L863:
	phi.64*     %r3808(p) <- %phi1445(p), %phi1446(p)
	load.64*    %r3809(curr) <- 0[%r3808(p)]
	cbr         %r3809(curr), .L864, .L872

.L864:
	phi.64      %r3811 <- %phi1447(count), %phi1448(count)
	add.64      %r3812 <- %r3811, $-1
	seta.32     %r3813 <- %r3811, $0
	phisrc.64   %phi1448(count) <- %r3812
	cbr         %r3813, .L860, .L872

.L860:
	load.8      %r3815 <- 8[%r3809(curr)]
	cast.32     %r3816 <- (8) %r3815
	seteq.32    %r3817 <- %r3816, $8
	cbr         %r3817, .L865, .L866

.L865:
	add.64*     %r3821 <- %r3809(curr), $152
	push.64*    %arg1
	push.64*    %r3821
	push.64     $-3
	call.64*    %r3822 <- sweeplist
	br          .L866

.L866:
	load.8      %r3824 <- 9[%r3809(curr)]
	cast.32     %r3825 <- (8) %r3824
	xor.32      %r3826 <- %r3825, $3
	and.32      %r3828 <- %r3826, %r3807(deadmask)
	cbr         %r3828, .L867, .L868

.L867:
	and.32      %r3832 <- %r3825, $248
	load.8      %r3834 <- 32[%r3803]
	cast.32     %r3835 <- (8) %r3834
	and.32      %r3836 <- %r3835, $3
	or.32       %r3839 <- %r3832, %r3836
	scast.8     %r3840 <- (32) %r3839
	store.8     %r3840 -> 9[%r3809(curr)]
	phisrc.64*  %phi1446(p) <- %r3809(curr)
	br          .L863

.L868:
	load.64*    %r3846 <- 0[%r3809(curr)]
	store.64*   %r3846 -> 0[%r3808(p)]
	load.64*    %r3850 <- 40[%r3803]
	seteq.32    %r3851 <- %r3809(curr), %r3850
	cbr         %r3851, .L870, .L871

.L870:
	load.64*    %r3853 <- 0[%r3809(curr)]
	store.64*   %r3853 -> 40[%r3803]
	br          .L871

.L871:
	push.64*    %arg1
	push.64*    %r3809(curr)
	call        freeobj
	br          .L863

.L872:
	ret.64*     %r3808(p)


checkSizes:
.L873:
	<entry-point>
	load.64*    %r3860 <- 32[%arg1]
	load.32     %r3862 <- 8[%r3860]
	load.32     %r3864 <- 12[%r3860]
	divs.32     %r3865 <- %r3864, $4
	setb.32     %r3867 <- %r3862, %r3865
	cbr         %r3867, .L876, .L875

.L876:
	setgt.32    %r3870 <- %r3864, $64
	cbr         %r3870, .L874, .L875

.L874:
	divs.32     %r3874 <- %r3864, $2
	push.64*    %arg1
	push.32     %r3874
	call        luaS_resize
	br          .L875

.L875:
	load.64     %r3876 <- 104[%r3860]
	seta.32     %r3877 <- %r3876, $64
	cbr         %r3877, .L877, .L878

.L877:
	divu.64     %r3880 <- %r3876, $2
	add.64      %r3882 <- %r3880, $1
	setbe.32    %r3884 <- %r3882, $-3
	cbr         %r3884, .L879, .L880

.L879:
	load.64*    %r3887 <- 88[%r3860]
	cast.64*    %r3888 <- (64) %r3887
	push.64*    %arg1
	push.64*    %r3888
	push.64     %r3876
	push.64     %r3880
	call.64*    %r3894 <- luaM_realloc_
	phisrc.64*  %phi1466 <- %r3894
	br          .L881

.L880:
	push.64*    %arg1
	call.64*    %r3896 <- luaM_toobig
	cast.64*    %r3897 <- (64) %r3896
	phisrc.64*  %phi1467 <- %r3897
	br          .L881

.L881:
	phi.64*     %r3898 <- %phi1466, %phi1467
	ptrcast.64* %r3899 <- (64) %r3898
	store.64*   %r3899 -> 88[%r3860]
	store.64    %r3880 -> 104[%r3860]
	br          .L878

.L878:
	ret


GCTM:
.L882:
	<entry-point>
	load.64*    %r3904 <- 32[%arg1]
	load.64*    %r3906 <- 80[%r3904]
	load.64*    %r3907 <- 0[%r3906]
	seteq.32    %r3913 <- %r3907, %r3906
	cbr         %r3913, .L883, .L884

.L883:
	store.64*   $0 -> 80[%r3904]
	br          .L885

.L884:
	load.64*    %r3916 <- 0[%r3907]
	store.64*   %r3916 -> 0[%r3906]
	br          .L885

.L885:
	load.64*    %r3920 <- 176[%r3904]
	load.64*    %r3921 <- 0[%r3920]
	store.64*   %r3921 -> 0[%r3907]
	load.64*    %r3925 <- 176[%r3904]
	store.64*   %r3907 -> 0[%r3925]
	load.8      %r3927 <- 9[%r3907]
	cast.32     %r3928 <- (8) %r3927
	and.32      %r3929 <- %r3928, $248
	load.8      %r3931 <- 32[%r3904]
	cast.32     %r3932 <- (8) %r3931
	and.32      %r3933 <- %r3932, $3
	or.32       %r3936 <- %r3929, %r3933
	scast.8     %r3937 <- (32) %r3936
	store.8     %r3937 -> 9[%r3907]
	load.64*    %r3940 <- 16[%r3907]
	cbr         %r3940, .L887, .L893

.L887:
	load.8      %r3944 <- 10[%r3940]
	cast.32     %r3945 <- (8) %r3944
	and.32      %r3946 <- %r3945, $4
	cbr         %r3946, .L893, .L890

.L890:
	load.64*    %r3950 <- 32[%arg1]
	load.64*    %r3951 <- 312[%r3950]
	push.64*    %r3940
	push.32     $2
	push.64*    %r3951
	call.64*    %r3952 <- luaT_gettm
	cbr         %r3952, .L892, .L893

.L892:
	load.8      %r3958 <- 101[%arg1]
	load.64     %r3960 <- 112[%r3904]
	store.8     $0 -> 101[%arg1]
	load.64     %r3963 <- 120[%r3904]
	mulu.64     %r3964 <- %r3963, $2
	store.64    %r3964 -> 112[%r3904]
	load.64*    %r3968 <- 16[%arg1]
	load.f64    %r3970 <- 0[%r3952]
	fpcast.f64  %r3971 <- (64) %r3970
	store.f64   %r3971 -> 0[%r3968]
	load.32     %r3974 <- 8[%r3952]
	store.32    %r3974 -> 8[%r3968]
	load.64*    %r3978 <- 16[%arg1]
	ptrcast.64* %r3981 <- (64) %r3907
	store.64*   %r3981 -> 16[%r3978]
	store.32    $7 -> 24[%r3978]
	load.64*    %r3985 <- 16[%arg1]
	cast.64     %r3986 <- (64) %r3985
	add.64      %r3987 <- %r3986, $32
	ptrcast.64* %r3988 <- (64) %r3987
	store.64*   %r3988 -> 16[%arg1]
	add.64*     %r3992 <- %r3988, $-32
	push.64*    %arg1
	push.64*    %r3992
	push.32     $0
	call        luaD_call
	store.8     %r3958 -> 101[%arg1]
	store.64    %r3960 -> 112[%r3904]
	br          .L893

.L893:
	ret


luaC_callGCTM:
.L894:
	<entry-point>
	br          .L898

.L898:
	load.64*    %r3998 <- 32[%arg1]
	load.64*    %r3999 <- 80[%r3998]
	cbr         %r3999, .L895, .L897

.L895:
	push.64*    %arg1
	call        GCTM
	br          .L898

.L897:
	ret


luaC_freeall:
.L899:
	<entry-point>
	load.64*    %r4002 <- 32[%arg1]
	store.8     $67 -> 32[%r4002]
	add.64*     %r4006 <- %r4002, $40
	push.64*    %arg1
	push.64*    %r4006
	push.64     $-3
	call.64*    %r4007 <- sweeplist
	phisrc.32   %phi1521(i) <- $0
	br          .L903

.L903:
	phi.32      %r4008(i) <- %phi1521(i), %phi1522(i)
	load.32     %r4010 <- 12[%r4002]
	setlt.32    %r4011 <- %r4008(i), %r4010
	cbr         %r4011, .L900, .L902

.L900:
	load.64*    %r4014 <- 0[%r4002]
	scast.64    %r4016 <- (32) %r4008(i)
	muls.64     %r4017 <- %r4016, $8
	add.64*     %r4018 <- %r4014, %r4017
	push.64*    %arg1
	push.64*    %r4018
	push.64     $-3
	call.64*    %r4019 <- sweeplist
	add.32      %r4021 <- %r4008(i), $1
	phisrc.32   %phi1522(i) <- %r4021
	br          .L903

.L902:
	ret


markmt:
.L904:
	<entry-point>
	phisrc.32   %phi1532(i) <- $0
	br          .L908

.L908:
	phi.32      %r4022(i) <- %phi1532(i), %phi1533(i)
	setlt.32    %r4023 <- %r4022(i), $9
	cbr         %r4023, .L905, .L907

.L905:
	add.64*     %r4025 <- %arg1, $224
	scast.64    %r4027 <- (32) %r4022(i)
	muls.64     %r4028 <- %r4027, $8
	add.64*     %r4029 <- %r4025, %r4028
	load.64*    %r4030 <- 0[%r4029]
	cbr         %r4030, .L909, .L906

.L909:
	ptrcast.64* %r4038 <- (64) %r4030
	load.8      %r4039 <- 9[%r4038]
	cast.32     %r4040 <- (8) %r4039
	and.32      %r4041 <- %r4040, $3
	cbr         %r4041, .L911, .L906

.L911:
	ptrcast.64* %r4050 <- (64) %r4030
	push.64*    %arg1
	push.64*    %r4050
	call        reallymarkobject
	br          .L906

.L906:
	add.32      %r4052 <- %r4022(i), $1
	phisrc.32   %phi1533(i) <- %r4052
	br          .L908

.L907:
	ret


markroot:
.L913:
	<entry-point>
	load.64*    %r4054 <- 32[%arg1]
	store.64*   $0 -> 56[%r4054]
	store.64*   $0 -> 64[%r4054]
	store.64*   $0 -> 72[%r4054]
	load.64*    %r4059 <- 176[%r4054]
	ptrcast.64* %r4060 <- (64) %r4059
	load.8      %r4061 <- 9[%r4060]
	cast.32     %r4062 <- (8) %r4061
	and.32      %r4063 <- %r4062, $3
	phisrc.64*  %phi1558 <- %r4059
	cbr         %r4063, .L914, .L915

.L914:
	ptrcast.64* %r4067 <- (64) %r4059
	push.64*    %r4054
	push.64*    %r4067
	call        reallymarkobject
	br          .L915

.L915:
	load.64*    %r4069 <- 176[%r4054]
	load.32     %r4070 <- 128[%r4069]
	setge.32    %r4071 <- %r4070, $4
	cbr         %r4071, .L918, .L917

.L918:
	load.64*    %r4074 <- 120[%r4069]
	load.8      %r4075 <- 9[%r4074]
	cast.32     %r4076 <- (8) %r4075
	and.32      %r4077 <- %r4076, $3
	cbr         %r4077, .L916, .L917

.L916:
	push.64*    %r4054
	push.64*    %r4074
	call        reallymarkobject
	br          .L917

.L917:
	load.64*    %r4083 <- 32[%arg1]
	load.32     %r4084 <- 168[%r4083]
	setge.32    %r4085 <- %r4084, $4
	cbr         %r4085, .L921, .L920

.L921:
	load.64*    %r4088 <- 160[%r4083]
	load.8      %r4089 <- 9[%r4088]
	cast.32     %r4090 <- (8) %r4089
	and.32      %r4091 <- %r4090, $3
	cbr         %r4091, .L919, .L920

.L919:
	push.64*    %r4054
	push.64*    %r4088
	call        reallymarkobject
	br          .L920

.L920:
	push.64*    %r4054
	call        markmt
	store.8     $1 -> 33[%r4054]
	ret


remarkupvals:
.L923:
	<entry-point>
	load.64*    %r4099(uv) <- 216[%arg1]
	phisrc.64*  %phi1571(uv) <- %r4099(uv)
	br          .L927

.L927:
	phi.64*     %r4100(uv) <- %phi1571(uv), %phi1572(uv)
	add.64*     %r4102 <- %arg1, $184
	setne.32    %r4103 <- %r4100(uv), %r4102
	cbr         %r4103, .L924, .L926

.L924:
	ptrcast.64* %r4105 <- (64) %r4100(uv)
	load.8      %r4106 <- 9[%r4105]
	cast.32     %r4107 <- (8) %r4106
	and.32      %r4108 <- %r4107, $4
	cbr         %r4108, .L925, .L930

.L930:
	and.32      %r4113 <- %r4107, $3
	cbr         %r4113, .L925, .L928

.L928:
	load.64*    %r4115 <- 16[%r4100(uv)]
	load.32     %r4116 <- 8[%r4115]
	setge.32    %r4117 <- %r4116, $4
	cbr         %r4117, .L933, .L925

.L933:
	load.64*    %r4120 <- 0[%r4115]
	load.8      %r4121 <- 9[%r4120]
	cast.32     %r4122 <- (8) %r4121
	and.32      %r4123 <- %r4122, $3
	cbr         %r4123, .L931, .L925

.L931:
	push.64*    %arg1
	push.64*    %r4120
	call        reallymarkobject
	br          .L925

.L925:
	load.64*    %r4129 <- 32[%r4100(uv)]
	phisrc.64*  %phi1572(uv) <- %r4129
	br          .L927

.L926:
	ret


atomic:
.L934:
	<entry-point>
	load.64*    %r4131 <- 32[%arg1]
	push.64*    %r4131
	call        remarkupvals
	push.64*    %r4131
	call.64     %r4134 <- propagateall
	load.64*    %r4136 <- 72[%r4131]
	store.64*   %r4136 -> 56[%r4131]
	store.64*   $0 -> 72[%r4131]
	ptrcast.64* %r4140 <- (64) %arg1
	load.8      %r4141 <- 9[%r4140]
	cast.32     %r4142 <- (8) %r4141
	and.32      %r4143 <- %r4142, $3
	cbr         %r4143, .L935, .L936

.L935:
	push.64*    %r4131
	push.64*    %r4140
	call        reallymarkobject
	br          .L936

.L936:
	push.64*    %r4131
	call        markmt
	push.64*    %r4131
	call.64     %r4149 <- propagateall
	load.64*    %r4151 <- 64[%r4131]
	store.64*   %r4151 -> 56[%r4131]
	store.64*   $0 -> 64[%r4131]
	push.64*    %r4131
	call.64     %r4155 <- propagateall
	push.64*    %arg1
	push.32     $0
	call.64     %r4157 <- luaC_separateudata
	push.64*    %r4131
	call        marktmu
	push.64*    %r4131
	call.64     %r4160 <- propagateall
	add.64      %r4163 <- %r4157, %r4160
	load.64*    %r4166 <- 72[%r4131]
	push.64*    %r4166
	call        cleartable
	load.8      %r4168 <- 32[%r4131]
	cast.32     %r4169 <- (8) %r4168
	xor.32      %r4170 <- %r4169, $3
	scast.8     %r4171 <- (32) %r4170
	store.8     %r4171 -> 32[%r4131]
	store.32    $0 -> 36[%r4131]
	add.64*     %r4175 <- %r4131, $40
	store.64*   %r4175 -> 48[%r4131]
	store.8     $2 -> 33[%r4131]
	load.64     %r4179 <- 120[%r4131]
	sub.64      %r4181 <- %r4179, %r4163
	store.64    %r4181 -> 128[%r4131]
	ret


singlestep:
.L938:
	<entry-point>
	load.64*    %r4184 <- 32[%arg1]
	load.8      %r4186 <- 33[%r4184]
	switch.8    %r4186, 0 -> .L940, 1 -> .L941, 2 -> .L942, 3 -> .L943, 4 -> .L944, default -> .L945

.L940:
	push.64*    %arg1
	call        markroot
	phisrc.64   %phi1583(return) <- $0
	br          .L946

.L941:
	load.64*    %r4190 <- 56[%r4184]
	cbr         %r4190, .L947, .L948

.L947:
	push.64*    %r4184
	call.64     %r4192 <- propagatemark
	phisrc.64   %phi1584(return) <- %r4192
	br          .L946

.L948:
	push.64*    %arg1
	call        atomic
	phisrc.64   %phi1585(return) <- $0
	br          .L946

.L942:
	load.64     %r4195(old) <- 120[%r4184]
	load.64*    %r4198 <- 0[%r4184]
	load.32     %r4200 <- 36[%r4184]
	add.32      %r4201 <- %r4200, $1
	store.32    %r4201 -> 36[%r4184]
	scast.64    %r4202 <- (32) %r4200
	muls.64     %r4203 <- %r4202, $8
	add.64*     %r4204 <- %r4198, %r4203
	push.64*    %arg1
	push.64*    %r4204
	push.64     $-3
	call.64*    %r4205 <- sweeplist
	load.32     %r4207 <- 36[%r4184]
	load.32     %r4209 <- 12[%r4184]
	setge.32    %r4210 <- %r4207, %r4209
	cbr         %r4210, .L950, .L951

.L950:
	store.8     $3 -> 33[%r4184]
	br          .L951

.L951:
	load.64     %r4214 <- 120[%r4184]
	sub.64      %r4215 <- %r4195(old), %r4214
	load.64     %r4217 <- 128[%r4184]
	sub.64      %r4219 <- %r4217, %r4215
	store.64    %r4219 -> 128[%r4184]
	phisrc.64   %phi1586(return) <- $10
	br          .L946

.L943:
	load.64     %r4222(old) <- 120[%r4184]
	load.64*    %r4225 <- 48[%r4184]
	push.64*    %arg1
	push.64*    %r4225
	push.64     $40
	call.64*    %r4226 <- sweeplist
	store.64*   %r4226 -> 48[%r4184]
	load.64*    %r4230 <- 0[%r4226]
	cbr         %r4230, .L953, .L952

.L952:
	push.64*    %arg1
	call        checkSizes
	store.8     $4 -> 33[%r4184]
	br          .L953

.L953:
	load.64     %r4236 <- 120[%r4184]
	sub.64      %r4237 <- %r4222(old), %r4236
	load.64     %r4239 <- 128[%r4184]
	sub.64      %r4241 <- %r4239, %r4237
	store.64    %r4241 -> 128[%r4184]
	phisrc.64   %phi1587(return) <- $400
	br          .L946

.L944:
	load.64*    %r4244 <- 80[%r4184]
	cbr         %r4244, .L954, .L955

.L954:
	push.64*    %arg1
	call        GCTM
	load.64     %r4247 <- 128[%r4184]
	seta.32     %r4248 <- %r4247, $100
	cbr         %r4248, .L956, .L957

.L956:
	add.64      %r4252 <- %r4247, $-100
	store.64    %r4252 -> 128[%r4184]
	br          .L957

.L957:
	phisrc.64   %phi1588(return) <- $100
	br          .L946

.L955:
	store.8     $0 -> 33[%r4184]
	store.64    $0 -> 136[%r4184]
	phisrc.64   %phi1589(return) <- $0
	br          .L946

.L945:
	phisrc.64   %phi1590(return) <- $0
	br          .L946

.L946:
	phi.64      %r4188 <- %phi1583(return), %phi1584(return), %phi1585(return), %phi1586(return), %phi1587(return), %phi1588(return), %phi1589(return), %phi1590(return)
	ret.64      %r4188


luaC_step:
.L959:
	<entry-point>
	load.64*    %r4257 <- 32[%arg1]
	load.32     %r4259 <- 148[%r4257]
	mulu.32     %r4261 <- %r4259, $10
	cast.64     %r4262 <- (32) %r4261
	phisrc.64   %phi1623(lim) <- %r4262
	cbr         %r4261, .L961, .L960

.L960:
	phisrc.64   %phi1624(lim) <- $0x7ffffffffffffffe
	br          .L961

.L961:
	load.64     %r4266 <- 120[%r4257]
	load.64     %r4268 <- 112[%r4257]
	sub.64      %r4269 <- %r4266, %r4268
	load.64     %r4271 <- 136[%r4257]
	add.64      %r4273 <- %r4271, %r4269
	store.64    %r4273 -> 136[%r4257]
	br          .L962

.L962:
	push.64*    %arg1
	call.64     %r4276 <- singlestep
	phi.64      %r4277 <- %phi1623(lim), %phi1624(lim), %phi1625(lim)
	sub.64      %r4279 <- %r4277, %r4276
	load.8      %r4282 <- 33[%r4257]
	phisrc.64   %phi1625(lim) <- %r4279
	cbr         %r4282, .L963, .L968

.L963:
	setgt.32    %r4286 <- %r4279, $0
	cbr         %r4286, .L962, .L964

.L964:
	cbr         %r4282, .L967, .L968

.L967:
	load.64     %r4292 <- 136[%r4257]
	setb.32     %r4293 <- %r4292, $0x400
	cbr         %r4293, .L969, .L970

.L969:
	load.64     %r4295 <- 120[%r4257]
	add.64      %r4296 <- %r4295, $0x400
	store.64    %r4296 -> 112[%r4257]
	br          .L972

.L970:
	add.64      %r4301 <- %r4292, $0xfffffffffffffc00
	store.64    %r4301 -> 136[%r4257]
	load.64     %r4304 <- 120[%r4257]
	store.64    %r4304 -> 112[%r4257]
	br          .L972

.L968:
	load.64     %r4307 <- 128[%r4257]
	divu.64     %r4308 <- %r4307, $100
	load.32     %r4310 <- 144[%r4257]
	scast.64    %r4311 <- (32) %r4310
	mulu.64     %r4312 <- %r4308, %r4311
	store.64    %r4312 -> 112[%r4257]
	br          .L972

.L972:
	ret


luaC_barrierf:
.L973:
	<entry-point>
	load.64*    %r4315 <- 32[%arg1]
	load.8      %r4317 <- 33[%r4315]
	cast.32     %r4318 <- (8) %r4317
	seteq.32    %r4319 <- %r4318, $1
	cbr         %r4319, .L974, .L975

.L974:
	push.64*    %r4315
	push.64*    %arg3
	call        reallymarkobject
	br          .L976

.L975:
	load.8      %r4323 <- 9[%arg2]
	cast.32     %r4324 <- (8) %r4323
	and.32      %r4325 <- %r4324, $248
	load.8      %r4327 <- 32[%r4315]
	cast.32     %r4328 <- (8) %r4327
	and.32      %r4329 <- %r4328, $3
	or.32       %r4332 <- %r4325, %r4329
	scast.8     %r4333 <- (32) %r4332
	store.8     %r4333 -> 9[%arg2]
	br          .L976

.L976:
	ret


luaC_barrierback:
.L977:
	<entry-point>
	load.64*    %r4336 <- 32[%arg1]
	ptrcast.64* %r4338 <- (64) %arg2
	load.8      %r4340 <- 9[%r4338]
	cast.32     %r4341 <- (8) %r4340
	and.32      %r4342 <- %r4341, $251
	scast.8     %r4343 <- (32) %r4342
	store.8     %r4343 -> 9[%r4338]
	load.64*    %r4345 <- 64[%r4336]
	store.64*   %r4345 -> 48[%arg2]
	store.64*   %r4338 -> 64[%r4336]
	ret


luaC_link:
.L979:
	<entry-point>
	load.64*    %r4350 <- 32[%arg1]
	load.64*    %r4352 <- 40[%r4350]
	store.64*   %r4352 -> 0[%arg2]
	store.64*   %arg2 -> 40[%r4350]
	load.8      %r4357 <- 32[%r4350]
	cast.32     %r4358 <- (8) %r4357
	and.32      %r4359 <- %r4358, $3
	store.8     %r4359 -> 9[%arg2]
	store.8     %arg3 -> 8[%arg2]
	ret


luaC_linkupval:
.L981:
	<entry-point>
	load.64*    %r4365 <- 32[%arg1]
	ptrcast.64* %r4367 <- (64) %arg2
	load.64*    %r4369 <- 40[%r4365]
	store.64*   %r4369 -> 0[%r4367]
	store.64*   %r4367 -> 40[%r4365]
	load.8      %r4374 <- 9[%r4367]
	cast.32     %r4375 <- (8) %r4374
	and.32      %r4376 <- %r4375, $4
	cbr         %r4376, .L983, .L984

.L984:
	and.32      %r4380 <- %r4375, $3
	cbr         %r4380, .L983, .L982

.L982:
	load.8      %r4382 <- 33[%r4365]
	cast.32     %r4383 <- (8) %r4382
	seteq.32    %r4384 <- %r4383, $1
	cbr         %r4384, .L985, .L986

.L985:
	or.32       %r4388 <- %r4375, $4
	scast.8     %r4389 <- (32) %r4388
	store.8     %r4389 -> 9[%r4367]
	load.64*    %r4391 <- 16[%arg2]
	load.32     %r4392 <- 8[%r4391]
	setge.32    %r4393 <- %r4392, $4
	cbr         %r4393, .L990, .L983

.L990:
	load.64*    %r4396 <- 0[%r4391]
	load.8      %r4397 <- 9[%r4396]
	cast.32     %r4398 <- (8) %r4397
	and.32      %r4399 <- %r4398, $3
	cbr         %r4399, .L989, .L983

.L989:
	cast.32     %r4403 <- (8) %r4389
	and.32      %r4404 <- %r4403, $4
	cbr         %r4404, .L987, .L983

.L987:
	push.64*    %arg1
	push.64*    %r4367
	push.64*    %r4396
	call        luaC_barrierf
	br          .L983

.L986:
	and.32      %r4414 <- %r4375, $248
	load.8      %r4416 <- 32[%r4365]
	cast.32     %r4417 <- (8) %r4416
	and.32      %r4418 <- %r4417, $3
	or.32       %r4421 <- %r4414, %r4418
	scast.8     %r4422 <- (32) %r4421
	store.8     %r4422 -> 9[%r4367]
	br          .L983

.L983:
	ret


stack_init:
.L992:
	<entry-point>
	push.64*    %arg2
	push.64*    $0
	push.64     $0
	push.64     $320
	call.64*    %r4425 <- luaM_realloc_
	ptrcast.64* %r4426 <- (64) %r4425
	store.64*   %r4426 -> 80[%arg1]
	store.64*   %r4426 -> 40[%arg1]
	store.32    $8 -> 92[%arg1]
	add.64*     %r4439 <- %r4426, $280
	store.64*   %r4439 -> 72[%arg1]
	push.64*    %arg2
	push.64*    $0
	push.64     $0
	push.64     $720
	call.64*    %r4442 <- luaM_realloc_
	ptrcast.64* %r4443 <- (64) %r4442
	store.64*   %r4443 -> 64[%arg1]
	store.32    $45 -> 88[%arg1]
	store.64*   %r4443 -> 16[%arg1]
	add.64*     %r4457 <- %r4443, $624
	store.64*   %r4457 -> 56[%arg1]
	load.64*    %r4462 <- 40[%arg1]
	store.64*   %r4443 -> 8[%r4462]
	load.64*    %r4464 <- 16[%arg1]
	add.64*     %r4465 <- %r4464, $16
	store.64*   %r4465 -> 16[%arg1]
	store.32    $0 -> 8[%r4464]
	load.64*    %r4467 <- 16[%arg1]
	load.64*    %r4469 <- 40[%arg1]
	store.64*   %r4467 -> 0[%r4469]
	store.64*   %r4467 -> 24[%arg1]
	load.64*    %r4472 <- 16[%arg1]
	add.64*     %r4473 <- %r4472, $320
	load.64*    %r4475 <- 40[%arg1]
	store.64*   %r4473 -> 16[%r4475]
	ret


freestack:
.L994:
	<entry-point>
	load.64*    %r4478 <- 80[%arg2]
	cast.64*    %r4479 <- (64) %r4478
	load.32     %r4481 <- 92[%arg2]
	scast.64    %r4482 <- (32) %r4481
	mulu.64     %r4483 <- %r4482, $40
	push.64*    %arg1
	push.64*    %r4479
	push.64     %r4483
	push.64     $0
	call.64*    %r4484 <- luaM_realloc_
	load.64*    %r4487 <- 64[%arg2]
	cast.64*    %r4488 <- (64) %r4487
	load.32     %r4490 <- 88[%arg2]
	scast.64    %r4491 <- (32) %r4490
	mulu.64     %r4492 <- %r4491, $16
	push.64*    %arg1
	push.64*    %r4488
	push.64     %r4492
	push.64     $0
	call.64*    %r4493 <- luaM_realloc_
	ret


f_luaopen:
.L996:
	<entry-point>
	load.64*    %r4495 <- 32[%arg1]
	push.64*    %arg1
	push.64*    %arg1
	call        stack_init
	push.64*    %arg1
	push.32     $0
	push.32     $2
	call.64*    %r4502 <- luaH_new
	ptrcast.64* %r4503 <- (64) %r4502
	store.64*   %r4503 -> 120[%arg1]
	store.32    $5 -> 128[%arg1]
	load.64*    %r4507 <- 32[%arg1]
	push.64*    %arg1
	push.32     $0
	push.32     $2
	call.64*    %r4510 <- luaH_new
	ptrcast.64* %r4511 <- (64) %r4510
	store.64*   %r4511 -> 160[%r4507]
	store.32    $5 -> 168[%r4507]
	push.64*    %arg1
	push.32     $32
	call        luaS_resize
	push.64*    %arg1
	call        luaT_init
	push.64*    %arg1
	call        luaX_init
	symaddr.64* %r4518 <- <anon symbol:0x19354e0>
	push.64*    %arg1
	push.64*    %r4518
	push.64     $17
	call.64*    %r4519 <- luaS_newlstr
	load.8      %r4520 <- 9[%r4519]
	cast.32     %r4521 <- (8) %r4520
	or.32       %r4522 <- %r4521, $32
	scast.8     %r4523 <- (32) %r4522
	store.8     %r4523 -> 9[%r4519]
	load.64     %r4525 <- 120[%r4495]
	mulu.64     %r4526 <- %r4525, $4
	store.64    %r4526 -> 112[%r4495]
	ret


preinit_state:
.L998:
	<entry-point>
	store.64*   %arg2 -> 32[%arg1]
	store.64*   $0 -> 64[%arg1]
	store.32    $0 -> 88[%arg1]
	store.64*   $0 -> 168[%arg1]
	store.64*   $0 -> 112[%arg1]
	store.8     $0 -> 100[%arg1]
	store.32    $0 -> 104[%arg1]
	store.8     $1 -> 101[%arg1]
	store.32    $0 -> 108[%arg1]
	store.64*   $0 -> 152[%arg1]
	store.32    $0 -> 92[%arg1]
	store.16    $0 -> 98[%arg1]
	store.16    $0 -> 96[%arg1]
	store.8     $0 -> 10[%arg1]
	store.64*   $0 -> 40[%arg1]
	store.64*   $0 -> 80[%arg1]
	store.64*   $0 -> 48[%arg1]
	store.64    $0 -> 176[%arg1]
	store.32    $0 -> 128[%arg1]
	ret


close_state:
.L1000:
	<entry-point>
	load.64*    %r4551 <- 32[%arg1]
	load.64*    %r4554 <- 64[%arg1]
	push.64*    %arg1
	push.64*    %r4554
	call        luaF_close
	push.64*    %arg1
	call        luaC_freeall
	load.64*    %r4558 <- 32[%arg1]
	load.64*    %r4559 <- 0[%r4558]
	cast.64*    %r4560 <- (64) %r4559
	load.32     %r4563 <- 12[%r4558]
	scast.64    %r4564 <- (32) %r4563
	mulu.64     %r4565 <- %r4564, $8
	push.64*    %arg1
	push.64*    %r4560
	push.64     %r4565
	push.64     $0
	call.64*    %r4566 <- luaM_realloc_
	load.64*    %r4569 <- 88[%r4551]
	cast.64*    %r4570 <- (64) %r4569
	load.64     %r4572 <- 104[%r4551]
	push.64*    %arg1
	push.64*    %r4570
	push.64     %r4572
	push.64     $0
	call.64*    %r4574 <- luaM_realloc_
	ptrcast.64* %r4575 <- (64) %r4574
	store.64*   %r4575 -> 88[%r4551]
	store.64    $0 -> 104[%r4551]
	push.64*    %arg1
	push.64*    %arg1
	call        freestack
	load.64*    %r4581 <- 24[%r4551]
	ptrcast.64* %r4583 <- (64) %arg1
	cast.64*    %r4585 <- (64) %r4583
	push.64*    %r4581
	push.64*    %r4585
	push.64     $616
	push.64     $0
	load.64*    %r4587 <- 16[%r4551]
	call.64*    %r4588 <- %r4587
	ret


luaE_freethread:
.L1002:
	<entry-point>
	load.64*    %r4591 <- 64[%arg2]
	push.64*    %arg2
	push.64*    %r4591
	call        luaF_close
	push.64*    %arg1
	push.64*    %arg2
	call        freestack
	ptrcast.64* %r4596 <- (64) %arg2
	cast.64*    %r4598 <- (64) %r4596
	push.64*    %arg1
	push.64*    %r4598
	push.64     $184
	push.64     $0
	call.64*    %r4599 <- luaM_realloc_
	ret


lua_newstate:
.L1004:
	<entry-point>
	push.64*    %arg2
	push.64*    $0
	push.64     $0
	push.64     $616
	call.64*    %r4602 <- %arg1
	cbr         %r4602, .L1006, .L1005

.L1005:
	phisrc.64*  %phi1650(return) <- $0
	br          .L1007

.L1006:
	ptrcast.64* %r4607 <- (64) %r4602
	ptrcast.64* %r4609 <- (64) %r4607
	ptrcast.64* %r4611 <- (64) %r4609
	add.64*     %r4612 <- %r4611, $184
	store.64*   $0 -> 0[%r4609]
	store.8     $8 -> 8[%r4609]
	store.8     $33 -> 216[%r4611]
	store.8     $97 -> 9[%r4609]
	push.64*    %r4609
	push.64*    %r4612
	call        preinit_state
	store.64*   %arg1 -> 200[%r4611]
	store.64*   %arg2 -> 208[%r4611]
	store.64*   %r4609 -> 360[%r4611]
	add.64*     %r4636 <- %r4612, $184
	store.64*   %r4636 -> 392[%r4611]
	store.64*   %r4636 -> 400[%r4611]
	store.64    $0 -> 296[%r4611]
	store.32    $0 -> 196[%r4611]
	store.32    $0 -> 192[%r4611]
	store.64*   $0 -> 184[%r4611]
	load.64*    %r4646 <- 32[%r4609]
	store.32    $0 -> 168[%r4646]
	store.64*   $0 -> 272[%r4611]
	store.64    $0 -> 288[%r4611]
	store.64*   $0 -> 336[%r4611]
	store.8     $0 -> 217[%r4611]
	store.64*   %r4611 -> 224[%r4611]
	store.32    $0 -> 220[%r4611]
	add.64*     %r4656 <- %r4612, $40
	store.64*   %r4656 -> 232[%r4611]
	store.64*   $0 -> 240[%r4611]
	store.64*   $0 -> 248[%r4611]
	store.64*   $0 -> 256[%r4611]
	store.64*   $0 -> 264[%r4611]
	store.64    $616 -> 304[%r4611]
	store.32    $200 -> 328[%r4611]
	store.32    $200 -> 332[%r4611]
	store.64    $0 -> 320[%r4611]
	phisrc.32   %phi1662(i) <- $0
	br          .L1011

.L1011:
	phi.32      %r4666(i) <- %phi1662(i), %phi1663(i)
	setlt.32    %r4667 <- %r4666(i), $9
	cbr         %r4667, .L1008, .L1010

.L1008:
	add.64*     %r4669 <- %r4612, $224
	scast.64    %r4671 <- (32) %r4666(i)
	muls.64     %r4672 <- %r4671, $8
	add.64*     %r4673 <- %r4669, %r4672
	store.64*   $0 -> 0[%r4673]
	add.32      %r4675 <- %r4666(i), $1
	phisrc.32   %phi1663(i) <- %r4675
	br          .L1011

.L1010:
	symaddr.64* %r4677 <- f_luaopen
	push.64*    %r4609
	push.64*    %r4677
	push.64*    $0
	call.32     %r4678 <- luaD_rawrunprotected
	select.64*  %r4681 <- %r4678, $0, %r4609
	cbr         %r4678, .L1012, .L1014

.L1012:
	push.64*    %r4609
	call        close_state
	br          .L1014

.L1014:
	phisrc.64*  %phi1651(return) <- %r4681
	br          .L1007

.L1007:
	phi.64*     %r4605 <- %phi1650(return), %phi1651(return)
	ret.64*     %r4605


callallgcTM:
.L1015:
	<entry-point>
	push.64*    %arg1
	call        luaC_callGCTM
	ret


lua_close:
.L1017:
	<entry-point>
	load.64*    %r4685 <- 32[%arg1]
	load.64*    %r4686 <- 176[%r4685]
	load.64*    %r4689 <- 64[%r4686]
	push.64*    %r4686
	push.64*    %r4689
	call        luaF_close
	push.64*    %r4686
	push.32     $1
	call.64     %r4691 <- luaC_separateudata
	store.64    $0 -> 176[%r4686]
	br          .L1018

.L1018:
	load.64*    %r4694 <- 80[%r4686]
	store.64*   %r4694 -> 40[%r4686]
	load.64*    %r4698 <- 0[%r4694]
	store.64*   %r4698 -> 16[%r4686]
	store.64*   %r4698 -> 24[%r4686]
	store.16    $0 -> 98[%r4686]
	store.16    $0 -> 96[%r4686]
	symaddr.64* %r4704 <- callallgcTM
	push.64*    %r4686
	push.64*    %r4704
	push.64*    $0
	call.32     %r4705 <- luaD_rawrunprotected
	cbr         %r4705, .L1018, .L1020

.L1020:
	push.64*    %r4686
	call        close_state
	ret


currentpc:
.L1022:
	<entry-point>
	load.64*    %r4709 <- 8[%arg2]
	load.32     %r4710 <- 8[%r4709]
	seteq.32    %r4711 <- %r4710, $6
	cbr         %r4711, .L1025, .L1023

.L1025:
	load.64*    %r4714 <- 0[%r4709]
	load.8      %r4715 <- 10[%r4714]
	cbr         %r4715, .L1023, .L1024

.L1023:
	phisrc.32   %phi1667(return) <- $0xffffffff
	br          .L1026

.L1024:
	load.64*    %r4719 <- 40[%arg1]
	seteq.32    %r4720 <- %arg2, %r4719
	cbr         %r4720, .L1027, .L1028

.L1027:
	load.64*    %r4722 <- 48[%arg1]
	store.64*   %r4722 -> 24[%arg2]
	br          .L1028

.L1028:
	load.64*    %r4725 <- 24[%arg2]
	load.64*    %r4727 <- 8[%arg2]
	load.64*    %r4728 <- 0[%r4727]
	load.64*    %r4729 <- 32[%r4728]
	load.64*    %r4730 <- 24[%r4729]
	sub.64      %r4731 <- %r4725, %r4730
	divs.64     %r4732 <- %r4731, $4
	scast.32    %r4733 <- (64) %r4732
	add.32      %r4734 <- %r4733, $-1
	phisrc.32   %phi1668(return) <- %r4734
	br          .L1026

.L1026:
	phi.32      %r4716 <- %phi1667(return), %phi1668(return)
	ret.32      %r4716


currentline:
.L1029:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r4737 <- currentpc
	setlt.32    %r4739 <- %r4737, $0
	cbr         %r4739, .L1030, .L1031

.L1030:
	phisrc.32   %phi1677(return) <- $0xffffffff
	br          .L1032

.L1031:
	load.64*    %r4742 <- 8[%arg2]
	load.64*    %r4743 <- 0[%r4742]
	load.64*    %r4744 <- 32[%r4743]
	load.64*    %r4745 <- 40[%r4744]
	cbr         %r4745, .L1034, .L1035

.L1034:
	load.64*    %r4748 <- 0[%r4742]
	load.64*    %r4749 <- 32[%r4748]
	load.64*    %r4750 <- 40[%r4749]
	scast.64    %r4752 <- (32) %r4737
	muls.64     %r4753 <- %r4752, $4
	add.64*     %r4754 <- %r4750, %r4753
	load.32     %r4755 <- 0[%r4754]
	phisrc.32   %phi1678 <- %r4755
	br          .L1036

.L1035:
	phisrc.32   %phi1679 <- $0
	br          .L1036

.L1036:
	phi.32      %r4756 <- %phi1678, %phi1679
	phisrc.32   %phi1680(return) <- %r4756
	br          .L1032

.L1032:
	phi.32      %r4740 <- %phi1677(return), %phi1680(return)
	ret.32      %r4740


lua_getstack:
.L1037:
	<entry-point>
	load.64*    %r4758(ci) <- 40[%arg1]
	phisrc.32   %phi1694(level) <- %arg2
	phisrc.64*  %phi1700(ci) <- %r4758(ci)
	phisrc.64*  %phi1707(ci) <- %r4758(ci)
	br          .L1041

.L1041:
	phi.32      %r4759(level) <- %phi1694(level), %phi1695(level), %phi1696(level)
	setgt.32    %r4760 <- %r4759(level), $0
	cbr         %r4760, .L1042, .L1040

.L1042:
	phi.64*     %r4761(ci) <- %phi1707(ci), %phi1708(ci)
	load.64*    %r4763 <- 80[%arg1]
	seta.32     %r4764 <- %r4761(ci), %r4763
	phisrc.64*  %phi1702(ci) <- %r4761(ci)
	cbr         %r4764, .L1038, .L1040

.L1038:
	add.32      %r4766(level) <- %r4759(level), $-1
	load.64*    %r4768 <- 8[%r4761(ci)]
	load.64*    %r4769 <- 0[%r4768]
	load.8      %r4770 <- 10[%r4769]
	phisrc.32   %phi1695(level) <- %r4766(level)
	cbr         %r4770, .L1039, .L1043

.L1043:
	load.32     %r4772 <- 36[%r4761(ci)]
	sub.32      %r4775 <- %r4766(level), %r4772
	phisrc.32   %phi1696(level) <- %r4775
	br          .L1039

.L1039:
	add.64*     %r4778 <- %r4761(ci), $-40
	phisrc.64*  %phi1701(ci) <- %r4778
	phisrc.64*  %phi1708(ci) <- %r4778
	br          .L1041

.L1040:
	cbr         %r4759(level), .L1046, .L1047

.L1047:
	phi.64*     %r4781(ci) <- %phi1700(ci), %phi1701(ci), %phi1702(ci)
	load.64*    %r4783 <- 80[%arg1]
	seta.32     %r4784 <- %r4781(ci), %r4783
	cbr         %r4784, .L1045, .L1046

.L1045:
	sub.64      %r4788 <- %r4781(ci), %r4783
	divs.64     %r4789 <- %r4788, $40
	scast.32    %r4790 <- (64) %r4789
	store.32    %r4790 -> 116[%arg3]
	phisrc.32   %phi1709(status) <- $1
	br          .L1048

.L1046:
	setlt.32    %r4793 <- %r4759(level), $0
	cbr         %r4793, .L1049, .L1050

.L1049:
	store.32    $0 -> 116[%arg3]
	phisrc.32   %phi1710(status) <- $1
	br          .L1048

.L1050:
	phisrc.32   %phi1711(status) <- $0
	br          .L1048

.L1048:
	phi.32      %r4795 <- %phi1709(status), %phi1710(status), %phi1711(status)
	ret.32      %r4795


getluaproto:
.L1053:
	<entry-point>
	load.64*    %r4798 <- 8[%arg1]
	load.32     %r4799 <- 8[%r4798]
	seteq.32    %r4800 <- %r4799, $6
	cbr         %r4800, .L1058, .L1056

.L1058:
	load.64*    %r4803 <- 0[%r4798]
	load.8      %r4804 <- 10[%r4803]
	cbr         %r4804, .L1056, .L1055

.L1055:
	load.64*    %r4808 <- 32[%r4803]
	phisrc.64*  %phi1713 <- %r4808
	br          .L1057

.L1056:
	phisrc.64*  %phi1714 <- $0
	br          .L1057

.L1057:
	phi.64*     %r4809 <- %phi1713, %phi1714
	ret.64*     %r4809


funcinfo:
.L1059:
	<entry-point>
	load.8      %r4812 <- 10[%arg2]
	cbr         %r4812, .L1060, .L1061

.L1060:
	symaddr.64* %r4813 <- <anon symbol:0x1958e80>
	store.64*   %r4813 -> 32[%arg1]
	store.32    $0xffffffff -> 48[%arg1]
	store.32    $0xffffffff -> 52[%arg1]
	symaddr.64* %r4817 <- <anon symbol:0x1959790>
	store.64*   %r4817 -> 24[%arg1]
	phisrc.64*  %phi1726 <- %r4813
	br          .L1062

.L1061:
	load.64*    %r4820 <- 32[%arg2]
	load.64*    %r4821 <- 64[%r4820]
	add.64*     %r4822 <- %r4821, $24
	ptrcast.64* %r4823 <- (64) %r4822
	store.64*   %r4823 -> 32[%arg1]
	load.64*    %r4826 <- 32[%arg2]
	load.32     %r4827 <- 96[%r4826]
	store.32    %r4827 -> 48[%arg1]
	load.64*    %r4830 <- 32[%arg2]
	load.32     %r4831 <- 100[%r4830]
	store.32    %r4831 -> 52[%arg1]
	symaddr.64* %r4833 <- <anon symbol:0x195b008>
	symaddr.64* %r4834 <- <anon symbol:0x195ac68>
	ptrcast.64* %r4835 <- (64) %r4834
	seteq.32    %r4838 <- %r4827, $0
	select.64*  %r4839 <- %r4838, %r4833, %r4835
	store.64*   %r4839 -> 24[%arg1]
	phisrc.64*  %phi1727 <- %r4823
	br          .L1062

.L1062:
	add.64*     %r4842 <- %arg1, $56
	phi.64*     %r4844 <- %phi1726, %phi1727
	push.64*    %r4842
	push.64*    %r4844
	push.64     $60
	call        luaO_chunkid
	ret


info_tailcall:
.L1064:
	<entry-point>
	symaddr.64* %r4845 <- <anon symbol:0x195bcb8>
	store.64*   %r4845 -> 16[%arg1]
	store.64*   %r4845 -> 8[%arg1]
	symaddr.64* %r4848 <- <anon symbol:0x195c228>
	store.64*   %r4848 -> 24[%arg1]
	store.32    $0xffffffff -> 40[%arg1]
	store.32    $0xffffffff -> 48[%arg1]
	store.32    $0xffffffff -> 52[%arg1]
	symaddr.64* %r4853 <- <anon symbol:0x195cd08>
	store.64*   %r4853 -> 32[%arg1]
	add.64*     %r4856 <- %arg1, $56
	push.64*    %r4856
	push.64*    %r4853
	push.64     $60
	call        luaO_chunkid
	store.32    $0 -> 44[%arg1]
	ret


collectvalidlines:
.L1066:
	<entry-point>
	cbr         %arg2, .L1069, .L1067

.L1069:
	load.8      %r4863 <- 10[%arg2]
	cbr         %r4863, .L1067, .L1068

.L1067:
	load.64*    %r4865 <- 16[%arg1]
	store.32    $0 -> 8[%r4865]
	br          .L1070

.L1068:
	push.64*    %arg1
	push.32     $0
	push.32     $0
	call.64*    %r4867(t) <- luaH_new
	load.64*    %r4869 <- 32[%arg2]
	load.64*    %r4870(lineinfo) <- 40[%r4869]
	phisrc.32   %phi1747(i) <- $0
	phisrc.64*  %phi1749 <- %r4869
	phisrc.64*  %phi1750 <- %r4869
	br          .L1074

.L1074:
	phi.32      %r4871(i) <- %phi1747(i), %phi1748(i)
	load.64*    %r4873 <- 32[%arg2]
	load.32     %r4874 <- 84[%r4873]
	setlt.32    %r4875 <- %r4871(i), %r4874
	cbr         %r4875, .L1071, .L1073

.L1071:
	scast.64    %r4880 <- (32) %r4871(i)
	muls.64     %r4881 <- %r4880, $4
	add.64*     %r4882 <- %r4870(lineinfo), %r4881
	load.32     %r4883 <- 0[%r4882]
	push.64*    %arg1
	push.64*    %r4867(t)
	push.32     %r4883
	call.64*    %r4884 <- luaH_setnum
	store.32    $1 -> 0[%r4884]
	store.32    $1 -> 8[%r4884]
	add.32      %r4888 <- %r4871(i), $1
	phisrc.32   %phi1748(i) <- %r4888
	br          .L1074

.L1073:
	load.64*    %r4890 <- 16[%arg1]
	ptrcast.64* %r4892 <- (64) %r4867(t)
	store.64*   %r4892 -> 0[%r4890]
	store.32    $5 -> 8[%r4890]
	br          .L1070

.L1070:
	load.64*    %r4896 <- 56[%arg1]
	ptrcast.64* %r4897 <- (64) %r4896
	load.64*    %r4899 <- 16[%arg1]
	ptrcast.64* %r4900 <- (64) %r4899
	sub.64      %r4901 <- %r4897, %r4900
	setle.32    %r4902 <- %r4901, $16
	cbr         %r4902, .L1075, .L1077

.L1075:
	push.64*    %arg1
	push.32     $1
	call        luaD_growstack
	br          .L1077

.L1077:
	load.64*    %r4905 <- 16[%arg1]
	add.64*     %r4906 <- %r4905, $16
	store.64*   %r4906 -> 16[%arg1]
	ret


auxgetinfo:
.L1079:
	<entry-point>
	phisrc.64*  %phi1758(what) <- %arg2
	phisrc.32   %phi1780(status) <- $1
	cbr         %arg4, .L1086, .L1080

.L1080:
	push.64*    %arg3
	call        info_tailcall
	phisrc.32   %phi1751(return) <- $1
	br          .L1082

.L1086:
	phi.64*     %r4912(what) <- %phi1758(what), %phi1759(what)
	load.8      %r4913 <- 0[%r4912(what)]
	cbr         %r4913, .L1083, .L1085

.L1083:
	switch.8    %r4913, 76 -> .L1084, 83 -> .L1088, 102 -> .L1084, 108 -> .L1089, 110 -> .L1091, 117 -> .L1090, default -> .L1094

.L1088:
	push.64*    %arg3
	push.64*    %arg4
	call        funcinfo
	br          .L1084

.L1089:
	cbr         %arg5, .L1095, .L1096

.L1095:
	push.64*    %arg1
	push.64*    %arg5
	call.32     %r4921 <- currentline
	phisrc.32   %phi1752 <- %r4921
	br          .L1097

.L1096:
	phisrc.32   %phi1753 <- $0xffffffff
	br          .L1097

.L1097:
	phi.32      %r4922 <- %phi1752, %phi1753
	store.32    %r4922 -> 40[%arg3]
	br          .L1084

.L1090:
	load.8      %r4925 <- 11[%arg4]
	cast.32     %r4926 <- (8) %r4925
	store.32    %r4926 -> 44[%arg3]
	br          .L1084

.L1091:
	ptrcast.64* %r4930 <- (64) $0
	store.64*   %r4930 -> 16[%arg3]
	cbr         %r4930, .L1084, .L1098

.L1098:
	symaddr.64* %r4935 <- <anon symbol:0x195f888>
	store.64*   %r4935 -> 16[%arg3]
	store.64*   $0 -> 8[%arg3]
	br          .L1084

.L1094:
	phisrc.32   %phi1781(status) <- $0
	br          .L1084

.L1084:
	add.64*     %r4939 <- %r4912(what), $1
	phisrc.64*  %phi1759(what) <- %r4939
	br          .L1086

.L1085:
	phi.32      %r4940 <- %phi1780(status), %phi1781(status)
	phisrc.32   %phi1754(return) <- %r4940
	br          .L1082

.L1082:
	phi.32      %r4911 <- %phi1751(return), %phi1754(return)
	ret.32      %r4911


lua_getinfo:
.L1100:
	<entry-point>
	load.8      %r4942 <- 0[%arg2]
	scast.32    %r4943 <- (8) %r4942
	seteq.32    %r4944 <- %r4943, $62
	phisrc.64*  %phi1801(what) <- %arg2
	phisrc.64*  %phi1814(f) <- $0
	phisrc.64*  %phi1816(ci) <- $0
	cbr         %r4944, .L1101, .L1102

.L1101:
	load.64*    %r4946 <- 16[%arg1]
	add.64*     %r4950(what) <- %arg2, $1
	load.64*    %r4952 <- -16[%r4946]
	add.64*     %r4956 <- %r4946, $-16
	store.64*   %r4956 -> 16[%arg1]
	phisrc.64*  %phi1800(what) <- %r4950(what)
	phisrc.64*  %phi1813(f) <- %r4952
	br          .L1103

.L1102:
	load.32     %r4958 <- 116[%arg3]
	cbr         %r4958, .L1104, .L1103

.L1104:
	load.64*    %r4961 <- 80[%arg1]
	scast.64    %r4964 <- (32) %r4958
	muls.64     %r4965 <- %r4964, $40
	add.64*     %r4966 <- %r4961, %r4965
	load.64*    %r4968 <- 8[%r4966]
	load.64*    %r4969 <- 0[%r4968]
	phisrc.64*  %phi1815(f) <- %r4969
	phisrc.64*  %phi1817(ci) <- %r4966
	br          .L1103

.L1103:
	phi.64*     %r4972 <- %phi1800(what), %phi1801(what)
	phi.64*     %r4974(f) <- %phi1813(f), %phi1814(f), %phi1815(f)
	phi.64*     %r4975 <- %phi1816(ci), %phi1817(ci)
	push.64*    %arg1
	push.64*    %r4972
	push.64*    %arg3
	push.64*    %r4974(f)
	push.64*    %r4975
	call.32     %r4976(status) <- auxgetinfo
	push.64*    %r4972
	push.32     $102
	call.64*    %r4978 <- strchr
	cbr         %r4978, .L1106, .L1107

.L1106:
	cbr         %r4974(f), .L1109, .L1108

.L1108:
	load.64*    %r4982 <- 16[%arg1]
	store.32    $0 -> 8[%r4982]
	br          .L1110

.L1109:
	load.64*    %r4984 <- 16[%arg1]
	ptrcast.64* %r4986 <- (64) %r4974(f)
	store.64*   %r4986 -> 0[%r4984]
	store.32    $6 -> 8[%r4984]
	br          .L1110

.L1110:
	load.64*    %r4990 <- 56[%arg1]
	ptrcast.64* %r4991 <- (64) %r4990
	load.64*    %r4993 <- 16[%arg1]
	ptrcast.64* %r4994 <- (64) %r4993
	sub.64      %r4995 <- %r4991, %r4994
	setle.32    %r4996 <- %r4995, $16
	cbr         %r4996, .L1111, .L1113

.L1111:
	push.64*    %arg1
	push.32     $1
	call        luaD_growstack
	br          .L1113

.L1113:
	load.64*    %r4999 <- 16[%arg1]
	add.64*     %r5000 <- %r4999, $16
	store.64*   %r5000 -> 16[%arg1]
	br          .L1107

.L1107:
	push.64*    %r4972
	push.32     $76
	call.64*    %r5002 <- strchr
	cbr         %r5002, .L1114, .L1116

.L1114:
	push.64*    %arg1
	push.64*    %r4974(f)
	call        collectvalidlines
	br          .L1116

.L1116:
	ret.32      %r4976(status)


isinstack:
.L1117:
	<entry-point>
	load.64*    %r5008(p) <- 0[%arg1]
	phisrc.64*  %phi1826(p) <- %r5008(p)
	br          .L1121

.L1121:
	phi.64*     %r5009(p) <- %phi1826(p), %phi1827(p)
	load.64*    %r5011 <- 16[%arg1]
	setb.32     %r5012 <- %r5009(p), %r5011
	cbr         %r5012, .L1118, .L1120

.L1118:
	seteq.32    %r5015 <- %arg2, %r5009(p)
	cbr         %r5015, .L1122, .L1119

.L1122:
	phisrc.32   %phi1820(return) <- $1
	br          .L1124

.L1119:
	add.64*     %r5018 <- %r5009(p), $16
	phisrc.64*  %phi1827(p) <- %r5018
	br          .L1121

.L1120:
	phisrc.32   %phi1821(return) <- $0
	br          .L1124

.L1124:
	phi.32      %r5016 <- %phi1820(return), %phi1821(return)
	ret.32      %r5016


luaG_typeerror:
.L1125:
	<entry-point>
	symaddr.64* %r5019 <- luaT_typenames
	load.32     %r5021 <- 8[%arg2]
	scast.64    %r5022 <- (32) %r5021
	muls.64     %r5023 <- %r5022, $8
	add.64*     %r5024 <- %r5019, %r5023
	load.64*    %r5025(t) <- 0[%r5024]
	load.64*    %r5027 <- 40[%arg1]
	push.64*    %r5027
	push.64*    %arg2
	call.32     %r5029 <- isinstack
	ptrcast.64* %r5031 <- (64) $0
	cbr         %r5031, .L1126, .L1127

.L1126:
	symaddr.64* %r5034 <- <anon symbol:0x19aab38>
	push.64*    %arg1
	push.64*    %r5034
	push.64*    %arg3
	push.64*    %r5031
	push.64*    $0
	push.64*    %r5025(t)
	call        luaG_runerror
	br          .L1128

.L1127:
	symaddr.64* %r5039 <- <anon symbol:0x19aaed8>
	push.64*    %arg1
	push.64*    %r5039
	push.64*    %arg3
	push.64*    %r5025(t)
	call        luaG_runerror
	br          .L1128

.L1128:
	ret


luaG_concaterror:
.L1129:
	<entry-point>
	load.32     %r5043 <- 8[%arg2]
	seteq.32    %r5044 <- %r5043, $4
	cbr         %r5044, .L1130, .L1132

.L1132:
	seteq.32    %r5047 <- %r5043, $3
	phisrc.64*  %phi1836(p1) <- %arg2
	cbr         %r5047, .L1130, .L1131

.L1130:
	phisrc.64*  %phi1837(p1) <- %arg3
	br          .L1131

.L1131:
	phi.64*     %r5050 <- %phi1836(p1), %phi1837(p1)
	symaddr.64* %r5051 <- <anon symbol:0x1962198>
	push.64*    %arg1
	push.64*    %r5050
	push.64*    %r5051
	call        luaG_typeerror
	ret


luaG_aritherror:
.L1134:
	<entry-point>
	symaddr.64* %r5053 <- temp
	push.64*    %arg2
	push.64*    %r5053
	call.64*    %r5054 <- luaV_tonumber
	select.64*  %r5058 <- %r5054, %arg3, %arg2
	symaddr.64* %r5059 <- <anon symbol:0x1962708>
	push.64*    %arg1
	push.64*    %r5058
	push.64*    %r5059
	call        luaG_typeerror
	ret


luaG_ordererror:
.L1138:
	<entry-point>
	symaddr.64* %r5060 <- luaT_typenames
	load.32     %r5062 <- 8[%arg2]
	scast.64    %r5063 <- (32) %r5062
	muls.64     %r5064 <- %r5063, $8
	add.64*     %r5065 <- %r5060, %r5064
	load.64*    %r5066 <- 0[%r5065]
	load.32     %r5069 <- 8[%arg3]
	scast.64    %r5070 <- (32) %r5069
	muls.64     %r5071 <- %r5070, $8
	add.64*     %r5072 <- %r5060, %r5071
	load.64*    %r5073 <- 0[%r5072]
	load.8      %r5075 <- 2[%r5066]
	scast.32    %r5076 <- (8) %r5075
	load.8      %r5078 <- 2[%r5073]
	scast.32    %r5079 <- (8) %r5078
	seteq.32    %r5080 <- %r5076, %r5079
	cbr         %r5080, .L1139, .L1140

.L1139:
	symaddr.64* %r5082 <- <anon symbol:0x1963588>
	push.64*    %arg1
	push.64*    %r5082
	push.64*    %r5066
	call        luaG_runerror
	br          .L1142

.L1140:
	symaddr.64* %r5085 <- <anon symbol:0x1963928>
	push.64*    %arg1
	push.64*    %r5085
	push.64*    %r5066
	push.64*    %r5073
	call        luaG_runerror
	br          .L1142

.L1142:
	ret.32      $0


addinfo:
.L1143:
	<entry-point>
	load.64*    %r5090 <- 40[%arg1]
	load.64*    %r5092 <- 8[%r5090]
	load.32     %r5093 <- 8[%r5092]
	seteq.32    %r5094 <- %r5093, $6
	cbr         %r5094, .L1146, .L1145

.L1146:
	load.64*    %r5097 <- 0[%r5092]
	load.8      %r5098 <- 10[%r5097]
	cbr         %r5098, .L1145, .L1144

.L1144:
	push.64*    %arg1
	push.64*    %r5090
	call.32     %r5101 <- currentline
	symaddr.64* %r5102 <- buff
	push.64*    %r5090
	call.64*    %r5104 <- getluaproto
	load.64*    %r5105 <- 64[%r5104]
	add.64*     %r5106 <- %r5105, $24
	ptrcast.64* %r5107 <- (64) %r5106
	push.64*    %r5102
	push.64*    %r5107
	push.64     $60
	call        luaO_chunkid
	symaddr.64* %r5109 <- <anon symbol:0x1964c30>
	push.64*    %arg1
	push.64*    %r5109
	push.64*    %r5102
	push.32     %r5101
	push.64*    %arg2
	call.64*    %r5113 <- luaO_pushfstring
	br          .L1145

.L1145:
	ret


luaG_errormsg:
.L1147:
	<entry-point>
	load.64     %r5115 <- 176[%arg1]
	cbr         %r5115, .L1148, .L1149

.L1148:
	load.64*    %r5118 <- 64[%arg1]
	ptrcast.64* %r5119 <- (64) %r5118
	add.64*     %r5122 <- %r5119, %r5115
	ptrcast.64* %r5123 <- (64) %r5122
	load.32     %r5125 <- 8[%r5123]
	seteq.32    %r5126 <- %r5125, $6
	cbr         %r5126, .L1151, .L1150

.L1150:
	push.64*    %arg1
	push.32     $5
	call        luaD_throw
	br          .L1151

.L1151:
	load.64*    %r5129 <- 16[%arg1]
	add.64*     %r5130 <- %r5129, $-16
	load.f64    %r5134 <- 0[%r5130]
	fpcast.f64  %r5135 <- (64) %r5134
	store.f64   %r5135 -> 0[%r5129]
	load.32     %r5138 <- -8[%r5129]
	store.32    %r5138 -> 8[%r5129]
	load.64*    %r5143 <- 16[%arg1]
	add.64*     %r5144 <- %r5143, $-16
	load.f64    %r5146 <- 0[%r5123]
	fpcast.f64  %r5147 <- (64) %r5146
	store.f64   %r5147 -> 0[%r5144]
	load.32     %r5150 <- 8[%r5123]
	store.32    %r5150 -> -8[%r5143]
	load.64*    %r5154 <- 56[%arg1]
	ptrcast.64* %r5155 <- (64) %r5154
	load.64*    %r5157 <- 16[%arg1]
	ptrcast.64* %r5158 <- (64) %r5157
	sub.64      %r5159 <- %r5155, %r5158
	setle.32    %r5160 <- %r5159, $16
	cbr         %r5160, .L1152, .L1154

.L1152:
	push.64*    %arg1
	push.32     $1
	call        luaD_growstack
	br          .L1154

.L1154:
	load.64*    %r5163 <- 16[%arg1]
	add.64*     %r5164 <- %r5163, $16
	store.64*   %r5164 -> 16[%arg1]
	add.64*     %r5168 <- %r5164, $-32
	push.64*    %arg1
	push.64*    %r5168
	push.32     $1
	call        luaD_call
	br          .L1149

.L1149:
	push.64*    %arg1
	push.32     $2
	call        luaD_throw
	ret


luaZ_fill:
.L1156:
	<entry-point>
	load.64*    %r5171 <- 32[%arg1]
	load.64*    %r5174 <- 24[%arg1]
	symaddr.64* %r5175 <- size
	push.64*    %r5171
	push.64*    %r5174
	push.64*    %r5175
	load.64*    %r5177 <- 16[%arg1]
	call.64*    %r5178 <- %r5177
	seteq.1     %r5181 <- %r5178, $0
	load.64     %r5182(size) <- 0[size]
	seteq.1     %r5184 <- %r5182(size), $0
	or-bool.1   %r5185 <- %r5181, %r5184
	cbr         %r5185, .L1157, .L1158

.L1157:
	phisrc.32   %phi1867(return) <- $0xffffffff
	br          .L1159

.L1158:
	add.64      %r5189 <- %r5182(size), $-1
	store.64    %r5189 -> 0[%arg1]
	add.64*     %r5195 <- %r5178, $1
	store.64*   %r5195 -> 8[%arg1]
	load.8      %r5196 <- 0[%r5178]
	cast.32     %r5198 <- (8) %r5196
	phisrc.32   %phi1868(return) <- %r5198
	br          .L1159

.L1159:
	phi.32      %r5187 <- %phi1867(return), %phi1868(return)
	ret.32      %r5187


luaZ_init:
.L1160:
	<entry-point>
	store.64*   %arg1 -> 32[%arg2]
	store.64*   %arg3 -> 16[%arg2]
	store.64*   %arg4 -> 24[%arg2]
	store.64    $0 -> 0[%arg2]
	store.64*   $0 -> 8[%arg2]
	ret


luaZ_openspace:
.L1162:
	<entry-point>
	load.64     %r5209 <- 16[%arg2]
	seta.32     %r5210 <- %arg3, %r5209
	cbr         %r5210, .L1163, .L1164

.L1163:
	setb.32     %r5212 <- %arg3, $32
	select.64   %r5213(n) <- %r5212, $32, %arg3
	add.64      %r5214 <- %r5213(n), $1
	setbe.32    %r5216 <- %r5214, $-3
	cbr         %r5216, .L1167, .L1168

.L1167:
	load.64*    %r5219 <- 0[%arg2]
	cast.64*    %r5220 <- (64) %r5219
	push.64*    %arg1
	push.64*    %r5220
	push.64     %r5209
	push.64     %r5213(n)
	call.64*    %r5226 <- luaM_realloc_
	phisrc.64*  %phi1872 <- %r5226
	br          .L1169

.L1168:
	push.64*    %arg1
	call.64*    %r5228 <- luaM_toobig
	cast.64*    %r5229 <- (64) %r5228
	phisrc.64*  %phi1873 <- %r5229
	br          .L1169

.L1169:
	phi.64*     %r5230 <- %phi1872, %phi1873
	ptrcast.64* %r5231 <- (64) %r5230
	store.64*   %r5231 -> 0[%arg2]
	store.64    %r5213(n) -> 16[%arg2]
	br          .L1164

.L1164:
	load.64*    %r5236 <- 0[%arg2]
	ret.64*     %r5236


save:
.L1171:
	<entry-point>
	load.64*    %r5239 <- 72[%arg1]
	load.64     %r5241 <- 8[%r5239]
	add.64      %r5242 <- %r5241, $1
	load.64     %r5244 <- 16[%r5239]
	seta.32     %r5245 <- %r5242, %r5244
	phisrc.64   %phi1910 <- %r5241
	phisrc.64   %phi1911 <- %r5244
	cbr         %r5245, .L1172, .L1173

.L1172:
	setae.32    %r5248 <- %r5244, $0x7ffffffffffffffe
	phisrc.64   %phi1908 <- %r5244
	cbr         %r5248, .L1174, .L1175

.L1174:
	symaddr.64* %r5250 <- <anon symbol:0x1967ef0>
	push.64*    %arg1
	push.64*    %r5250
	push.32     $0
	call        luaX_lexerror
	br          .L1175

.L1175:
	load.64     %r5252 <- 16[%r5239]
	mulu.64     %r5253 <- %r5252, $2
	add.64      %r5255 <- %r5253, $1
	setbe.32    %r5257 <- %r5255, $-3
	cbr         %r5257, .L1176, .L1177

.L1176:
	load.64*    %r5259 <- 56[%arg1]
	load.64*    %r5261 <- 0[%r5239]
	cast.64*    %r5262 <- (64) %r5261
	push.64*    %r5259
	push.64*    %r5262
	push.64     %r5252
	push.64     %r5253
	call.64*    %r5268 <- luaM_realloc_
	phisrc.64*  %phi1889 <- %r5268
	br          .L1178

.L1177:
	load.64*    %r5270 <- 56[%arg1]
	push.64*    %r5270
	call.64*    %r5271 <- luaM_toobig
	cast.64*    %r5272 <- (64) %r5271
	phisrc.64*  %phi1890 <- %r5272
	br          .L1178

.L1178:
	phi.64*     %r5273 <- %phi1889, %phi1890
	ptrcast.64* %r5274 <- (64) %r5273
	store.64*   %r5274 -> 0[%r5239]
	store.64    %r5253 -> 16[%r5239]
	br          .L1173

.L1173:
	scast.8     %r5279 <- (32) %arg2
	load.64*    %r5281 <- 0[%r5239]
	load.64     %r5283 <- 8[%r5239]
	add.64      %r5284 <- %r5283, $1
	store.64    %r5284 -> 8[%r5239]
	add.64*     %r5285 <- %r5281, %r5283
	store.8     %r5279 -> 0[%r5285]
	ret


luaX_init:
.L1180:
	<entry-point>
	phisrc.32   %phi1915(i) <- $0
	br          .L1184

.L1184:
	phi.32      %r5286(i) <- %phi1915(i), %phi1916(i)
	setlt.32    %r5287 <- %r5286(i), $21
	cbr         %r5287, .L1181, .L1183

.L1181:
	symaddr.64* %r5289 <- luaX_tokens
	scast.64    %r5291 <- (32) %r5286(i)
	muls.64     %r5292 <- %r5291, $8
	add.64*     %r5293 <- %r5289, %r5292
	load.64*    %r5294 <- 0[%r5293]
	push.64*    %r5294
	call.64     %r5301 <- strlen
	push.64*    %arg1
	push.64*    %r5294
	push.64     %r5301
	call.64*    %r5302 <- luaS_newlstr
	load.8      %r5304 <- 9[%r5302]
	cast.32     %r5305 <- (8) %r5304
	or.32       %r5306 <- %r5305, $32
	scast.8     %r5307 <- (32) %r5306
	store.8     %r5307 -> 9[%r5302]
	add.32      %r5309 <- %r5286(i), $1
	scast.8     %r5310 <- (32) %r5309
	store.8     %r5310 -> 10[%r5302]
	phisrc.32   %phi1916(i) <- %r5309
	br          .L1184

.L1183:
	ret


luaX_token2str:
.L1185:
	<entry-point>
	setlt.32    %r5315 <- %arg2, $257
	cbr         %r5315, .L1186, .L1187

.L1186:
	call.64*    %r5316 <- __ctype_b_loc
	load.64*    %r5317 <- 0[%r5316]
	scast.64    %r5320 <- (32) %arg2
	muls.64     %r5321 <- %r5320, $2
	add.64*     %r5322 <- %r5317, %r5321
	load.16     %r5323 <- 0[%r5322]
	cast.32     %r5324 <- (16) %r5323
	and.32      %r5325 <- %r5324, $2
	cbr         %r5325, .L1189, .L1190

.L1189:
	load.64*    %r5327 <- 56[%arg1]
	symaddr.64* %r5328 <- <anon symbol:0x1971990>
	push.64*    %r5327
	push.64*    %r5328
	push.32     %arg2
	call.64*    %r5330 <- luaO_pushfstring
	phisrc.64*  %phi1917 <- %r5330
	br          .L1191

.L1190:
	load.64*    %r5332 <- 56[%arg1]
	symaddr.64* %r5333 <- <anon symbol:0x1971420>
	push.64*    %r5332
	push.64*    %r5333
	push.32     %arg2
	call.64*    %r5335 <- luaO_pushfstring
	phisrc.64*  %phi1918 <- %r5335
	br          .L1191

.L1191:
	phi.64*     %r5336 <- %phi1917, %phi1918
	phisrc.64*  %phi1919(return) <- %r5336
	br          .L1188

.L1187:
	symaddr.64* %r5338 <- luaX_tokens
	add.32      %r5340 <- %arg2, $-257
	scast.64    %r5341 <- (32) %r5340
	muls.64     %r5342 <- %r5341, $8
	add.64*     %r5343 <- %r5338, %r5342
	load.64*    %r5344 <- 0[%r5343]
	phisrc.64*  %phi1920(return) <- %r5344
	br          .L1188

.L1188:
	phi.64*     %r5337 <- %phi1919(return), %phi1920(return)
	ret.64*     %r5337


txtToken:
.L1193:
	<entry-point>
	switch.32   %arg2, 284 -> .L1197, 285 -> .L1197, 286 -> .L1197, default -> .L1198

.L1197:
	push.64*    %arg1
	push.32     $0
	call        save
	load.64*    %r5348 <- 72[%arg1]
	load.64*    %r5349 <- 0[%r5348]
	phisrc.64*  %phi1927(return) <- %r5349
	br          .L1199

.L1198:
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r5353 <- luaX_token2str
	phisrc.64*  %phi1928(return) <- %r5353
	br          .L1199

.L1199:
	phi.64*     %r5350 <- %phi1927(return), %phi1928(return)
	ret.64*     %r5350


luaX_lexerror:
.L1200:
	<entry-point>
	symaddr.64* %r5354 <- buff
	load.64*    %r5356 <- 80[%arg1]
	add.64*     %r5357 <- %r5356, $24
	ptrcast.64* %r5358 <- (64) %r5357
	push.64*    %r5354
	push.64*    %r5358
	push.64     $80
	call        luaO_chunkid
	load.64*    %r5360 <- 56[%arg1]
	symaddr.64* %r5361 <- <anon symbol:0x1930c60>
	load.32     %r5364 <- 4[%arg1]
	push.64*    %r5360
	push.64*    %r5361
	push.64*    %r5354
	push.32     %r5364
	push.64*    %arg2
	call.64*    %r5366(msg) <- luaO_pushfstring
	cbr         %arg3, .L1201, .L1202

.L1201:
	load.64*    %r5369 <- 56[%arg1]
	symaddr.64* %r5370 <- <anon symbol:0x1931570>
	push.64*    %arg1
	push.32     %arg3
	call.64*    %r5374 <- txtToken
	push.64*    %r5369
	push.64*    %r5370
	push.64*    %r5366(msg)
	push.64*    %r5374
	call.64*    %r5375 <- luaO_pushfstring
	br          .L1202

.L1202:
	load.64*    %r5377 <- 56[%arg1]
	push.64*    %r5377
	push.32     $3
	call        luaD_throw
	ret


luaX_syntaxerror:
.L1204:
	<entry-point>
	load.32     %r5381 <- 16[%arg1]
	push.64*    %arg1
	push.64*    %arg2
	push.32     %r5381
	call        luaX_lexerror
	ret


luaX_newstring:
.L1206:
	<entry-point>
	load.64*    %r5383 <- 56[%arg1]
	push.64*    %r5383
	push.64*    %arg2
	push.64     %arg3
	call.64*    %r5387 <- luaS_newlstr
	load.64*    %r5390 <- 48[%arg1]
	load.64*    %r5391 <- 8[%r5390]
	push.64*    %r5383
	push.64*    %r5391
	push.64*    %r5387
	call.64*    %r5393 <- luaH_setstr
	load.32     %r5395 <- 8[%r5393]
	cbr         %r5395, .L1211, .L1207

.L1207:
	store.32    $1 -> 0[%r5393]
	store.32    $1 -> 8[%r5393]
	load.64*    %r5401 <- 32[%r5383]
	load.64     %r5402 <- 120[%r5401]
	load.64     %r5405 <- 112[%r5401]
	setae.32    %r5406 <- %r5402, %r5405
	cbr         %r5406, .L1209, .L1211

.L1209:
	push.64*    %r5383
	call        luaC_step
	br          .L1211

.L1211:
	ret.64*     %r5387


inclinenumber:
.L1212:
	<entry-point>
	load.32     %r5411(old) <- 0[%arg1]
	load.64*    %r5413 <- 64[%arg1]
	load.64     %r5414 <- 0[%r5413]
	add.64      %r5415 <- %r5414, $-1
	store.64    %r5415 -> 0[%r5413]
	seta.32     %r5416 <- %r5414, $0
	cbr         %r5416, .L1213, .L1214

.L1213:
	load.64*    %r5418 <- 64[%arg1]
	load.64*    %r5419 <- 8[%r5418]
	add.64*     %r5420 <- %r5419, $1
	store.64*   %r5420 -> 8[%r5418]
	load.8      %r5421 <- 0[%r5419]
	cast.32     %r5423 <- (8) %r5421
	phisrc.32   %phi1942 <- %r5423
	br          .L1215

.L1214:
	load.64*    %r5425 <- 64[%arg1]
	push.64*    %r5425
	call.32     %r5426 <- luaZ_fill
	phisrc.32   %phi1943 <- %r5426
	br          .L1215

.L1215:
	phi.32      %r5427 <- %phi1942, %phi1943
	store.32    %r5427 -> 0[%arg1]
	seteq.32    %r5431 <- %r5427, $10
	cbr         %r5431, .L1218, .L1219

.L1219:
	seteq.32    %r5434 <- %r5427, $13
	cbr         %r5434, .L1218, .L1217

.L1218:
	load.32     %r5436 <- 0[%arg1]
	setne.32    %r5438 <- %r5436, %r5411(old)
	cbr         %r5438, .L1216, .L1217

.L1216:
	load.64*    %r5440 <- 64[%arg1]
	load.64     %r5441 <- 0[%r5440]
	add.64      %r5442 <- %r5441, $-1
	store.64    %r5442 -> 0[%r5440]
	seta.32     %r5443 <- %r5441, $0
	cbr         %r5443, .L1220, .L1221

.L1220:
	load.64*    %r5445 <- 64[%arg1]
	load.64*    %r5446 <- 8[%r5445]
	add.64*     %r5447 <- %r5446, $1
	store.64*   %r5447 -> 8[%r5445]
	load.8      %r5448 <- 0[%r5446]
	cast.32     %r5450 <- (8) %r5448
	phisrc.32   %phi1944 <- %r5450
	br          .L1222

.L1221:
	load.64*    %r5452 <- 64[%arg1]
	push.64*    %r5452
	call.32     %r5453 <- luaZ_fill
	phisrc.32   %phi1945 <- %r5453
	br          .L1222

.L1222:
	phi.32      %r5454 <- %phi1944, %phi1945
	store.32    %r5454 -> 0[%arg1]
	br          .L1217

.L1217:
	load.32     %r5457 <- 4[%arg1]
	add.32      %r5458 <- %r5457, $1
	store.32    %r5458 -> 4[%arg1]
	setge.32    %r5459 <- %r5458, $0x7ffffffd
	cbr         %r5459, .L1223, .L1224

.L1223:
	symaddr.64* %r5461 <- <anon symbol:0x1975390>
	push.64*    %arg1
	push.64*    %r5461
	call        luaX_syntaxerror
	br          .L1224

.L1224:
	ret


luaX_setinput:
.L1225:
	<entry-point>
	store.8     $46 -> 88[%arg2]
	store.64*   %arg1 -> 56[%arg2]
	store.32    $287 -> 32[%arg2]
	store.64*   %arg3 -> 64[%arg2]
	store.64*   $0 -> 48[%arg2]
	store.32    $1 -> 4[%arg2]
	store.32    $1 -> 8[%arg2]
	store.64*   %arg4 -> 80[%arg2]
	load.64*    %r5476 <- 72[%arg2]
	load.64*    %r5477 <- 0[%r5476]
	cast.64*    %r5478 <- (64) %r5477
	load.64     %r5481 <- 16[%r5476]
	push.64*    %arg1
	push.64*    %r5478
	push.64     %r5481
	push.64     $32
	call.64*    %r5483 <- luaM_realloc_
	ptrcast.64* %r5484 <- (64) %r5483
	load.64*    %r5486 <- 72[%arg2]
	store.64*   %r5484 -> 0[%r5486]
	load.64*    %r5488 <- 72[%arg2]
	store.64    $32 -> 16[%r5488]
	load.64*    %r5490 <- 64[%arg2]
	load.64     %r5491 <- 0[%r5490]
	add.64      %r5492 <- %r5491, $-1
	store.64    %r5492 -> 0[%r5490]
	seta.32     %r5493 <- %r5491, $0
	cbr         %r5493, .L1226, .L1227

.L1226:
	load.64*    %r5495 <- 64[%arg2]
	load.64*    %r5496 <- 8[%r5495]
	add.64*     %r5497 <- %r5496, $1
	store.64*   %r5497 -> 8[%r5495]
	load.8      %r5498 <- 0[%r5496]
	cast.32     %r5500 <- (8) %r5498
	phisrc.32   %phi1964 <- %r5500
	br          .L1228

.L1227:
	load.64*    %r5502 <- 64[%arg2]
	push.64*    %r5502
	call.32     %r5503 <- luaZ_fill
	phisrc.32   %phi1965 <- %r5503
	br          .L1228

.L1228:
	phi.32      %r5504 <- %phi1964, %phi1965
	store.32    %r5504 -> 0[%arg2]
	ret


check_next:
.L1230:
	<entry-point>
	load.32     %r5508 <- 0[%arg1]
	push.64*    %arg2
	push.32     %r5508
	call.64*    %r5509 <- strchr
	cbr         %r5509, .L1232, .L1231

.L1231:
	phisrc.32   %phi1970(return) <- $0
	br          .L1233

.L1232:
	load.32     %r5513 <- 0[%arg1]
	push.64*    %arg1
	push.32     %r5513
	call        save
	load.64*    %r5515 <- 64[%arg1]
	load.64     %r5516 <- 0[%r5515]
	add.64      %r5517 <- %r5516, $-1
	store.64    %r5517 -> 0[%r5515]
	seta.32     %r5518 <- %r5516, $0
	cbr         %r5518, .L1234, .L1235

.L1234:
	load.64*    %r5520 <- 64[%arg1]
	load.64*    %r5521 <- 8[%r5520]
	add.64*     %r5522 <- %r5521, $1
	store.64*   %r5522 -> 8[%r5520]
	load.8      %r5523 <- 0[%r5521]
	cast.32     %r5525 <- (8) %r5523
	phisrc.32   %phi1971 <- %r5525
	br          .L1236

.L1235:
	load.64*    %r5527 <- 64[%arg1]
	push.64*    %r5527
	call.32     %r5528 <- luaZ_fill
	phisrc.32   %phi1972 <- %r5528
	br          .L1236

.L1236:
	phi.32      %r5529 <- %phi1971, %phi1972
	store.32    %r5529 -> 0[%arg1]
	phisrc.32   %phi1973(return) <- $1
	br          .L1233

.L1233:
	phi.32      %r5510 <- %phi1970(return), %phi1973(return)
	ret.32      %r5510


buffreplace:
.L1237:
	<entry-point>
	load.64*    %r5532 <- 72[%arg1]
	load.64     %r5533(n) <- 8[%r5532]
	load.64*    %r5536(p) <- 0[%r5532]
	phisrc.64   %phi1983(n) <- %r5533(n)
	br          .L1241

.L1241:
	phi.64      %r5537 <- %phi1983(n), %phi1984(n)
	add.64      %r5538(n) <- %r5537, $-1
	phisrc.64   %phi1984(n) <- %r5538(n)
	cbr         %r5537, .L1238, .L1240

.L1238:
	add.64*     %r5541 <- %r5536(p), %r5538(n)
	load.8      %r5542 <- 0[%r5541]
	scast.32    %r5543 <- (8) %r5542
	scast.32    %r5545 <- (8) %arg2
	seteq.32    %r5546 <- %r5543, %r5545
	cbr         %r5546, .L1242, .L1241

.L1242:
	store.8     %arg3 -> 0[%r5541]
	br          .L1241

.L1240:
	ret


read_numeral:
.L1244:
	<entry-point>
	br          .L1245

.L1245:
	load.32     %r5553 <- 0[%arg1]
	push.64*    %arg1
	push.32     %r5553
	call        save
	load.64*    %r5555 <- 64[%arg1]
	load.64     %r5556 <- 0[%r5555]
	add.64      %r5557 <- %r5556, $-1
	store.64    %r5557 -> 0[%r5555]
	seta.32     %r5558 <- %r5556, $0
	cbr         %r5558, .L1248, .L1249

.L1248:
	load.64*    %r5560 <- 64[%arg1]
	load.64*    %r5561 <- 8[%r5560]
	add.64*     %r5562 <- %r5561, $1
	store.64*   %r5562 -> 8[%r5560]
	load.8      %r5563 <- 0[%r5561]
	cast.32     %r5565 <- (8) %r5563
	phisrc.32   %phi1987 <- %r5565
	br          .L1250

.L1249:
	load.64*    %r5567 <- 64[%arg1]
	push.64*    %r5567
	call.32     %r5568 <- luaZ_fill
	phisrc.32   %phi1988 <- %r5568
	br          .L1250

.L1250:
	phi.32      %r5569 <- %phi1987, %phi1988
	store.32    %r5569 -> 0[%arg1]
	call.64*    %r5571 <- __ctype_b_loc
	load.64*    %r5572 <- 0[%r5571]
	load.32     %r5574 <- 0[%arg1]
	scast.64    %r5576 <- (32) %r5574
	muls.64     %r5577 <- %r5576, $2
	add.64*     %r5578 <- %r5572, %r5577
	load.16     %r5579 <- 0[%r5578]
	cast.32     %r5580 <- (16) %r5579
	and.32      %r5581 <- %r5580, $0x800
	cbr         %r5581, .L1245, .L1251

.L1251:
	seteq.32    %r5584 <- %r5574, $46
	cbr         %r5584, .L1245, .L1247

.L1247:
	symaddr.64* %r5586 <- <anon symbol:0x1982a00>
	push.64*    %arg1
	push.64*    %r5586
	call.32     %r5587 <- check_next
	cbr         %r5587, .L1252, .L1257

.L1252:
	symaddr.64* %r5589 <- <anon symbol:0x1982da0>
	push.64*    %arg1
	push.64*    %r5589
	call.32     %r5590 <- check_next
	br          .L1257

.L1257:
	call.64*    %r5591 <- __ctype_b_loc
	load.64*    %r5592 <- 0[%r5591]
	load.32     %r5594 <- 0[%arg1]
	scast.64    %r5596 <- (32) %r5594
	muls.64     %r5597 <- %r5596, $2
	add.64*     %r5598 <- %r5592, %r5597
	load.16     %r5599 <- 0[%r5598]
	cast.32     %r5600 <- (16) %r5599
	and.32      %r5601 <- %r5600, $8
	cbr         %r5601, .L1254, .L1258

.L1258:
	seteq.32    %r5604 <- %r5594, $95
	cbr         %r5604, .L1254, .L1256

.L1254:
	push.64*    %arg1
	push.32     %r5594
	call        save
	load.64*    %r5609 <- 64[%arg1]
	load.64     %r5610 <- 0[%r5609]
	add.64      %r5611 <- %r5610, $-1
	store.64    %r5611 -> 0[%r5609]
	seta.32     %r5612 <- %r5610, $0
	cbr         %r5612, .L1259, .L1260

.L1259:
	load.64*    %r5614 <- 64[%arg1]
	load.64*    %r5615 <- 8[%r5614]
	add.64*     %r5616 <- %r5615, $1
	store.64*   %r5616 -> 8[%r5614]
	load.8      %r5617 <- 0[%r5615]
	cast.32     %r5619 <- (8) %r5617
	phisrc.32   %phi1989 <- %r5619
	br          .L1261

.L1260:
	load.64*    %r5621 <- 64[%arg1]
	push.64*    %r5621
	call.32     %r5622 <- luaZ_fill
	phisrc.32   %phi1990 <- %r5622
	br          .L1261

.L1261:
	phi.32      %r5623 <- %phi1989, %phi1990
	store.32    %r5623 -> 0[%arg1]
	br          .L1257

.L1256:
	push.64*    %arg1
	push.32     $0
	call        save
	load.8      %r5628 <- 88[%arg1]
	push.64*    %arg1
	push.8      $46
	push.8      %r5628
	call        buffreplace
	load.64*    %r5630 <- 72[%arg1]
	load.64*    %r5631 <- 0[%r5630]
	push.64*    %r5631
	push.64*    %arg2
	call.32     %r5634 <- luaO_str2d
	cbr         %r5634, .L1263, .L1262

.L1262:
	symaddr.64* %r5636 <- <anon symbol:0x1984b88>
	push.64*    %arg1
	push.64*    %r5636
	push.32     $284
	call        luaX_lexerror
	br          .L1263

.L1263:
	ret


skip_sep:
.L1264:
	<entry-point>
	load.32     %r5638(s) <- 0[%arg1]
	push.64*    %arg1
	push.32     %r5638(s)
	call        save
	load.64*    %r5643 <- 64[%arg1]
	load.64     %r5644 <- 0[%r5643]
	add.64      %r5645 <- %r5644, $-1
	store.64    %r5645 -> 0[%r5643]
	seta.32     %r5646 <- %r5644, $0
	phisrc.32   %phi2032(count) <- $0
	phisrc.32   %phi2034(count) <- $0
	cbr         %r5646, .L1265, .L1266

.L1265:
	load.64*    %r5648 <- 64[%arg1]
	load.64*    %r5649 <- 8[%r5648]
	add.64*     %r5650 <- %r5649, $1
	store.64*   %r5650 -> 8[%r5648]
	load.8      %r5651 <- 0[%r5649]
	cast.32     %r5653 <- (8) %r5651
	phisrc.32   %phi2016 <- %r5653
	br          .L1267

.L1266:
	load.64*    %r5655 <- 64[%arg1]
	push.64*    %r5655
	call.32     %r5656 <- luaZ_fill
	phisrc.32   %phi2017 <- %r5656
	br          .L1267

.L1267:
	phi.32      %r5657 <- %phi2016, %phi2017
	store.32    %r5657 -> 0[%arg1]
	phisrc.32   %phi2039 <- %r5657
	phisrc.32   %phi2040 <- %r5657
	br          .L1271

.L1271:
	phi.32      %r5660 <- %phi2040, %phi2041
	seteq.32    %r5661 <- %r5660, $61
	cbr         %r5661, .L1268, .L1270

.L1268:
	push.64*    %arg1
	push.32     %r5660
	call        save
	load.64*    %r5666 <- 64[%arg1]
	load.64     %r5667 <- 0[%r5666]
	add.64      %r5668 <- %r5667, $-1
	store.64    %r5668 -> 0[%r5666]
	seta.32     %r5669 <- %r5667, $0
	cbr         %r5669, .L1272, .L1273

.L1272:
	load.64*    %r5671 <- 64[%arg1]
	load.64*    %r5672 <- 8[%r5671]
	add.64*     %r5673 <- %r5672, $1
	store.64*   %r5673 -> 8[%r5671]
	load.8      %r5674 <- 0[%r5672]
	cast.32     %r5676 <- (8) %r5674
	phisrc.32   %phi2018 <- %r5676
	br          .L1274

.L1273:
	load.64*    %r5678 <- 64[%arg1]
	push.64*    %r5678
	call.32     %r5679 <- luaZ_fill
	phisrc.32   %phi2019 <- %r5679
	br          .L1274

.L1274:
	phi.32      %r5680 <- %phi2018, %phi2019
	store.32    %r5680 -> 0[%arg1]
	phi.32      %r5682 <- %phi2034(count), %phi2035(count)
	add.32      %r5683 <- %r5682, $1
	phisrc.32   %phi2033(count) <- %r5683
	phisrc.32   %phi2035(count) <- %r5683
	phisrc.32   %phi2041 <- %r5680
	br          .L1271

.L1270:
	phi.32      %r5684 <- %phi2032(count), %phi2033(count)
	neg.32      %r5686 <- %r5684
	add.32      %r5687 <- %r5686, $-1
	seteq.32    %r5691 <- %r5660, %r5638(s)
	select.32   %r5692 <- %r5691, %r5684, %r5687
	ret.32      %r5692


read_long_string:
.L1276:
	<entry-point>
	load.32     %r5696 <- 0[%arg1]
	push.64*    %arg1
	push.32     %r5696
	call        save
	load.64*    %r5698 <- 64[%arg1]
	load.64     %r5699 <- 0[%r5698]
	add.64      %r5700 <- %r5699, $-1
	store.64    %r5700 -> 0[%r5698]
	seta.32     %r5701 <- %r5699, $0
	cbr         %r5701, .L1277, .L1278

.L1277:
	load.64*    %r5703 <- 64[%arg1]
	load.64*    %r5704 <- 8[%r5703]
	add.64*     %r5705 <- %r5704, $1
	store.64*   %r5705 -> 8[%r5703]
	load.8      %r5706 <- 0[%r5704]
	cast.32     %r5708 <- (8) %r5706
	phisrc.32   %phi2042 <- %r5708
	br          .L1279

.L1278:
	load.64*    %r5710 <- 64[%arg1]
	push.64*    %r5710
	call.32     %r5711 <- luaZ_fill
	phisrc.32   %phi2043 <- %r5711
	br          .L1279

.L1279:
	phi.32      %r5712 <- %phi2042, %phi2043
	store.32    %r5712 -> 0[%arg1]
	seteq.32    %r5716 <- %r5712, $10
	phisrc.32   %phi2094 <- %r5712
	cbr         %r5716, .L1280, .L1282

.L1282:
	seteq.32    %r5719 <- %r5712, $13
	cbr         %r5719, .L1280, .L1283

.L1280:
	push.64*    %arg1
	call        inclinenumber
	br          .L1283

.L1283:
	load.32     %r5722 <- 0[%arg1]
	switch.32   %r5722, 10 -> .L1291, 13 -> .L1291, 93 -> .L1289, 4294967295 -> .L1288, default -> .L1292

.L1288:
	symaddr.64* %r5724 <- <anon symbol:0x19883b8>
	symaddr.64* %r5725 <- <anon symbol:0x1988018>
	ptrcast.64* %r5726 <- (64) %r5725
	select.64*  %r5728 <- %arg2, %r5724, %r5726
	push.64*    %arg1
	push.64*    %r5728
	push.32     $287
	call        luaX_lexerror
	br          .L1283

.L1289:
	push.64*    %arg1
	call.32     %r5730 <- skip_sep
	seteq.32    %r5732 <- %r5730, %arg3
	cbr         %r5732, .L1293, .L1283

.L1293:
	load.32     %r5735 <- 0[%arg1]
	push.64*    %arg1
	push.32     %r5735
	call        save
	load.64*    %r5737 <- 64[%arg1]
	load.64     %r5738 <- 0[%r5737]
	add.64      %r5739 <- %r5738, $-1
	store.64    %r5739 -> 0[%r5737]
	seta.32     %r5740 <- %r5738, $0
	cbr         %r5740, .L1295, .L1296

.L1295:
	load.64*    %r5742 <- 64[%arg1]
	load.64*    %r5743 <- 8[%r5742]
	add.64*     %r5744 <- %r5743, $1
	store.64*   %r5744 -> 8[%r5742]
	load.8      %r5745 <- 0[%r5743]
	cast.32     %r5747 <- (8) %r5745
	phisrc.32   %phi2044 <- %r5747
	br          .L1297

.L1296:
	load.64*    %r5749 <- 64[%arg1]
	push.64*    %r5749
	call.32     %r5750 <- luaZ_fill
	phisrc.32   %phi2045 <- %r5750
	br          .L1297

.L1297:
	phi.32      %r5751 <- %phi2044, %phi2045
	store.32    %r5751 -> 0[%arg1]
	cbr         %arg2, .L1310, .L1311

.L1291:
	push.64*    %arg1
	push.32     $10
	call        save
	push.64*    %arg1
	call        inclinenumber
	cbr         %arg2, .L1283, .L1299

.L1299:
	load.64*    %r5757 <- 72[%arg1]
	store.64    $0 -> 8[%r5757]
	br          .L1283

.L1292:
	cbr         %arg2, .L1301, .L1302

.L1301:
	push.64*    %arg1
	push.32     %r5722
	call        save
	load.64*    %r5763 <- 64[%arg1]
	load.64     %r5764 <- 0[%r5763]
	add.64      %r5765 <- %r5764, $-1
	store.64    %r5765 -> 0[%r5763]
	seta.32     %r5766 <- %r5764, $0
	cbr         %r5766, .L1303, .L1304

.L1303:
	load.64*    %r5768 <- 64[%arg1]
	load.64*    %r5769 <- 8[%r5768]
	add.64*     %r5770 <- %r5769, $1
	store.64*   %r5770 -> 8[%r5768]
	load.8      %r5771 <- 0[%r5769]
	cast.32     %r5773 <- (8) %r5771
	phisrc.32   %phi2046 <- %r5773
	br          .L1305

.L1304:
	load.64*    %r5775 <- 64[%arg1]
	push.64*    %r5775
	call.32     %r5776 <- luaZ_fill
	phisrc.32   %phi2047 <- %r5776
	br          .L1305

.L1305:
	phi.32      %r5777 <- %phi2046, %phi2047
	store.32    %r5777 -> 0[%arg1]
	br          .L1283

.L1302:
	load.64*    %r5780 <- 64[%arg1]
	load.64     %r5781 <- 0[%r5780]
	add.64      %r5782 <- %r5781, $-1
	store.64    %r5782 -> 0[%r5780]
	seta.32     %r5783 <- %r5781, $0
	cbr         %r5783, .L1307, .L1308

.L1307:
	load.64*    %r5785 <- 64[%arg1]
	load.64*    %r5786 <- 8[%r5785]
	add.64*     %r5787 <- %r5786, $1
	store.64*   %r5787 -> 8[%r5785]
	load.8      %r5788 <- 0[%r5786]
	cast.32     %r5790 <- (8) %r5788
	phisrc.32   %phi2048 <- %r5790
	br          .L1309

.L1308:
	load.64*    %r5792 <- 64[%arg1]
	push.64*    %r5792
	call.32     %r5793 <- luaZ_fill
	phisrc.32   %phi2049 <- %r5793
	br          .L1309

.L1309:
	phi.32      %r5794 <- %phi2048, %phi2049
	store.32    %r5794 -> 0[%arg1]
	br          .L1283

.L1310:
	load.64*    %r5799 <- 72[%arg1]
	load.64*    %r5800 <- 0[%r5799]
	add.32      %r5802 <- %arg3, $2
	scast.64    %r5803 <- (32) %r5802
	add.64*     %r5804 <- %r5800, %r5803
	load.64     %r5807 <- 8[%r5799]
	muls.32     %r5810 <- %r5802, $2
	scast.64    %r5811 <- (32) %r5810
	sub.64      %r5812 <- %r5807, %r5811
	push.64*    %arg1
	push.64*    %r5804
	push.64     %r5812
	call.64*    %r5813 <- luaX_newstring
	store.64*   %r5813 -> 0[%arg2]
	br          .L1311

.L1311:
	ret


read_string:
.L1312:
	<entry-point>
	load.32     %r5817 <- 0[%arg1]
	push.64*    %arg1
	push.32     %r5817
	call        save
	load.64*    %r5819 <- 64[%arg1]
	load.64     %r5820 <- 0[%r5819]
	add.64      %r5821 <- %r5820, $-1
	store.64    %r5821 -> 0[%r5819]
	seta.32     %r5822 <- %r5820, $0
	cbr         %r5822, .L1313, .L1314

.L1313:
	load.64*    %r5824 <- 64[%arg1]
	load.64*    %r5825 <- 8[%r5824]
	add.64*     %r5826 <- %r5825, $1
	store.64*   %r5826 -> 8[%r5824]
	load.8      %r5827 <- 0[%r5825]
	cast.32     %r5829 <- (8) %r5827
	phisrc.32   %phi2095 <- %r5829
	br          .L1315

.L1314:
	load.64*    %r5831 <- 64[%arg1]
	push.64*    %r5831
	call.32     %r5832 <- luaZ_fill
	phisrc.32   %phi2096 <- %r5832
	br          .L1315

.L1315:
	phi.32      %r5833 <- %phi2095, %phi2096
	store.32    %r5833 -> 0[%arg1]
	phisrc.32   %phi2175 <- %r5833
	phisrc.32   %phi2178 <- %r5833
	br          .L1319

.L1319:
	load.32     %r5836 <- 0[%arg1]
	setne.32    %r5838 <- %r5836, %arg2
	cbr         %r5838, .L1316, .L1318

.L1316:
	switch.32   %r5836, 10 -> .L1323, 13 -> .L1323, 92 -> .L1324, 4294967295 -> .L1321, default -> .L1325

.L1321:
	symaddr.64* %r5842 <- <anon symbol:0x198c710>
	push.64*    %arg1
	push.64*    %r5842
	push.32     $287
	call        luaX_lexerror
	br          .L1319

.L1323:
	symaddr.64* %r5844 <- <anon symbol:0x198cab0>
	push.64*    %arg1
	push.64*    %r5844
	push.32     $286
	call        luaX_lexerror
	br          .L1319

.L1324:
	load.64*    %r5846 <- 64[%arg1]
	load.64     %r5847 <- 0[%r5846]
	add.64      %r5848 <- %r5847, $-1
	store.64    %r5848 -> 0[%r5846]
	seta.32     %r5849 <- %r5847, $0
	cbr         %r5849, .L1326, .L1327

.L1326:
	load.64*    %r5851 <- 64[%arg1]
	load.64*    %r5852 <- 8[%r5851]
	add.64*     %r5853 <- %r5852, $1
	store.64*   %r5853 -> 8[%r5851]
	load.8      %r5854 <- 0[%r5852]
	cast.32     %r5856 <- (8) %r5854
	phisrc.32   %phi2097 <- %r5856
	br          .L1328

.L1327:
	load.64*    %r5858 <- 64[%arg1]
	push.64*    %r5858
	call.32     %r5859 <- luaZ_fill
	phisrc.32   %phi2098 <- %r5859
	br          .L1328

.L1328:
	phi.32      %r5860 <- %phi2097, %phi2098
	store.32    %r5860 -> 0[%arg1]
	switch.32   %r5860, 10 -> .L1338, 13 -> .L1338, 97 -> .L1330, 98 -> .L1331, 102 -> .L1332, 110 -> .L1333, 114 -> .L1334, 116 -> .L1335, 118 -> .L1336, 4294967295 -> .L1319, default -> .L1340

.L1330:
	phisrc.32   %phi2157(c) <- $7
	br          .L1329

.L1331:
	phisrc.32   %phi2158(c) <- $8
	br          .L1329

.L1332:
	phisrc.32   %phi2159(c) <- $12
	br          .L1329

.L1333:
	phisrc.32   %phi2160(c) <- $10
	br          .L1329

.L1334:
	phisrc.32   %phi2161(c) <- $13
	br          .L1329

.L1335:
	phisrc.32   %phi2162(c) <- $9
	br          .L1329

.L1336:
	phisrc.32   %phi2163(c) <- $11
	br          .L1329

.L1338:
	push.64*    %arg1
	push.32     $10
	call        save
	push.64*    %arg1
	call        inclinenumber
	br          .L1319

.L1340:
	call.64*    %r5866 <- __ctype_b_loc
	load.64*    %r5867 <- 0[%r5866]
	load.32     %r5869 <- 0[%arg1]
	scast.64    %r5871 <- (32) %r5869
	muls.64     %r5872 <- %r5871, $2
	add.64*     %r5873 <- %r5867, %r5872
	load.16     %r5874 <- 0[%r5873]
	cast.32     %r5875 <- (16) %r5874
	and.32      %r5876 <- %r5875, $0x800
	phisrc.32   %phi2172 <- %r5869
	phisrc.32   %phi2176 <- %r5869
	cbr         %r5876, .L1342, .L1341

.L1341:
	push.64*    %arg1
	push.32     %r5869
	call        save
	load.64*    %r5881 <- 64[%arg1]
	load.64     %r5882 <- 0[%r5881]
	add.64      %r5883 <- %r5882, $-1
	store.64    %r5883 -> 0[%r5881]
	seta.32     %r5884 <- %r5882, $0
	cbr         %r5884, .L1343, .L1344

.L1343:
	load.64*    %r5886 <- 64[%arg1]
	load.64*    %r5887 <- 8[%r5886]
	add.64*     %r5888 <- %r5887, $1
	store.64*   %r5888 -> 8[%r5886]
	load.8      %r5889 <- 0[%r5887]
	cast.32     %r5891 <- (8) %r5889
	phisrc.32   %phi2099 <- %r5891
	br          .L1345

.L1344:
	load.64*    %r5893 <- 64[%arg1]
	push.64*    %r5893
	call.32     %r5894 <- luaZ_fill
	phisrc.32   %phi2100 <- %r5894
	br          .L1345

.L1345:
	phi.32      %r5895 <- %phi2099, %phi2100
	store.32    %r5895 -> 0[%arg1]
	br          .L1319

.L1342:
	phisrc.32   %phi2166(c) <- $0
	phisrc.32   %phi2168(i) <- $0
	br          .L1347

.L1347:
	phi.32      %r5897 <- %phi2166(c), %phi2167(c)
	muls.32     %r5898 <- %r5897, $10
	phi.32      %r5900 <- %phi2176, %phi2177
	add.32      %r5901 <- %r5900, $-48
	add.32      %r5902(c) <- %r5898, %r5901
	load.64*    %r5904 <- 64[%arg1]
	load.64     %r5905 <- 0[%r5904]
	add.64      %r5906 <- %r5905, $-1
	store.64    %r5906 -> 0[%r5904]
	seta.32     %r5907 <- %r5905, $0
	phisrc.32   %phi2167(c) <- %r5902(c)
	cbr         %r5907, .L1350, .L1351

.L1350:
	load.64*    %r5909 <- 64[%arg1]
	load.64*    %r5910 <- 8[%r5909]
	add.64*     %r5911 <- %r5910, $1
	store.64*   %r5911 -> 8[%r5909]
	load.8      %r5912 <- 0[%r5910]
	cast.32     %r5914 <- (8) %r5912
	phisrc.32   %phi2101 <- %r5914
	br          .L1352

.L1351:
	load.64*    %r5916 <- 64[%arg1]
	push.64*    %r5916
	call.32     %r5917 <- luaZ_fill
	phisrc.32   %phi2102 <- %r5917
	br          .L1352

.L1352:
	phi.32      %r5918 <- %phi2101, %phi2102
	store.32    %r5918 -> 0[%arg1]
	phi.32      %r5920 <- %phi2168(i), %phi2169(i)
	add.32      %r5921 <- %r5920, $1
	setlt.32    %r5922 <- %r5921, $3
	phisrc.32   %phi2169(i) <- %r5921
	cbr         %r5922, .L1353, .L1349

.L1353:
	call.64*    %r5923 <- __ctype_b_loc
	load.64*    %r5924 <- 0[%r5923]
	load.32     %r5926 <- 0[%arg1]
	scast.64    %r5928 <- (32) %r5926
	muls.64     %r5929 <- %r5928, $2
	add.64*     %r5930 <- %r5924, %r5929
	load.16     %r5931 <- 0[%r5930]
	cast.32     %r5932 <- (16) %r5931
	and.32      %r5933 <- %r5932, $0x800
	phisrc.32   %phi2177 <- %r5926
	cbr         %r5933, .L1347, .L1349

.L1349:
	setgt.32    %r5935 <- %r5902(c), $255
	cbr         %r5935, .L1354, .L1355

.L1354:
	symaddr.64* %r5937 <- <anon symbol:0x198fba0>
	push.64*    %arg1
	push.64*    %r5937
	push.32     $286
	call        luaX_lexerror
	br          .L1355

.L1355:
	push.64*    %arg1
	push.32     %r5902(c)
	call        save
	br          .L1319

.L1329:
	phi.32      %r5941 <- %phi2157(c), %phi2158(c), %phi2159(c), %phi2160(c), %phi2161(c), %phi2162(c), %phi2163(c)
	push.64*    %arg1
	push.32     %r5941
	call        save
	load.64*    %r5943 <- 64[%arg1]
	load.64     %r5944 <- 0[%r5943]
	add.64      %r5945 <- %r5944, $-1
	store.64    %r5945 -> 0[%r5943]
	seta.32     %r5946 <- %r5944, $0
	cbr         %r5946, .L1356, .L1357

.L1356:
	load.64*    %r5948 <- 64[%arg1]
	load.64*    %r5949 <- 8[%r5948]
	add.64*     %r5950 <- %r5949, $1
	store.64*   %r5950 -> 8[%r5948]
	load.8      %r5951 <- 0[%r5949]
	cast.32     %r5953 <- (8) %r5951
	phisrc.32   %phi2103 <- %r5953
	br          .L1358

.L1357:
	load.64*    %r5955 <- 64[%arg1]
	push.64*    %r5955
	call.32     %r5956 <- luaZ_fill
	phisrc.32   %phi2104 <- %r5956
	br          .L1358

.L1358:
	phi.32      %r5957 <- %phi2103, %phi2104
	store.32    %r5957 -> 0[%arg1]
	br          .L1319

.L1325:
	push.64*    %arg1
	push.32     %r5836
	call        save
	load.64*    %r5963 <- 64[%arg1]
	load.64     %r5964 <- 0[%r5963]
	add.64      %r5965 <- %r5964, $-1
	store.64    %r5965 -> 0[%r5963]
	seta.32     %r5966 <- %r5964, $0
	cbr         %r5966, .L1359, .L1360

.L1359:
	load.64*    %r5968 <- 64[%arg1]
	load.64*    %r5969 <- 8[%r5968]
	add.64*     %r5970 <- %r5969, $1
	store.64*   %r5970 -> 8[%r5968]
	load.8      %r5971 <- 0[%r5969]
	cast.32     %r5973 <- (8) %r5971
	phisrc.32   %phi2105 <- %r5973
	br          .L1361

.L1360:
	load.64*    %r5975 <- 64[%arg1]
	push.64*    %r5975
	call.32     %r5976 <- luaZ_fill
	phisrc.32   %phi2106 <- %r5976
	br          .L1361

.L1361:
	phi.32      %r5977 <- %phi2105, %phi2106
	store.32    %r5977 -> 0[%arg1]
	br          .L1319

.L1318:
	push.64*    %arg1
	push.32     %r5836
	call        save
	load.64*    %r5983 <- 64[%arg1]
	load.64     %r5984 <- 0[%r5983]
	add.64      %r5985 <- %r5984, $-1
	store.64    %r5985 -> 0[%r5983]
	seta.32     %r5986 <- %r5984, $0
	cbr         %r5986, .L1362, .L1363

.L1362:
	load.64*    %r5988 <- 64[%arg1]
	load.64*    %r5989 <- 8[%r5988]
	add.64*     %r5990 <- %r5989, $1
	store.64*   %r5990 -> 8[%r5988]
	load.8      %r5991 <- 0[%r5989]
	cast.32     %r5993 <- (8) %r5991
	phisrc.32   %phi2107 <- %r5993
	br          .L1364

.L1363:
	load.64*    %r5995 <- 64[%arg1]
	push.64*    %r5995
	call.32     %r5996 <- luaZ_fill
	phisrc.32   %phi2108 <- %r5996
	br          .L1364

.L1364:
	phi.32      %r5997 <- %phi2107, %phi2108
	store.32    %r5997 -> 0[%arg1]
	load.64*    %r6001 <- 72[%arg1]
	load.64*    %r6002 <- 0[%r6001]
	add.64*     %r6003 <- %r6002, $1
	load.64     %r6006 <- 8[%r6001]
	add.64      %r6007 <- %r6006, $-2
	push.64*    %arg1
	push.64*    %r6003
	push.64     %r6007
	call.64*    %r6008 <- luaX_newstring
	store.64*   %r6008 -> 0[%arg3]
	ret


llex:
.L1366:
	<entry-point>
	load.64*    %r6011 <- 72[%arg1]
	store.64    $0 -> 8[%r6011]
	br          .L1367

.L1367:
	load.32     %r6013 <- 0[%arg1]
	switch.32   %r6013, 10 -> .L1373, 13 -> .L1373, 34 -> .L1381, 39 -> .L1381, 45 -> .L1374, 46 -> .L1382, 60 -> .L1377, 61 -> .L1376, 62 -> .L1378, 91 -> .L1375, 126 -> .L1379, 4294967295 -> .L1383, default -> .L1384

.L1373:
	push.64*    %arg1
	call        inclinenumber
	br          .L1367

.L1374:
	load.64*    %r6016 <- 64[%arg1]
	load.64     %r6017 <- 0[%r6016]
	add.64      %r6018 <- %r6017, $-1
	store.64    %r6018 -> 0[%r6016]
	seta.32     %r6019 <- %r6017, $0
	cbr         %r6019, .L1385, .L1386

.L1385:
	load.64*    %r6021 <- 64[%arg1]
	load.64*    %r6022 <- 8[%r6021]
	add.64*     %r6023 <- %r6022, $1
	store.64*   %r6023 -> 8[%r6021]
	load.8      %r6024 <- 0[%r6022]
	cast.32     %r6026 <- (8) %r6024
	phisrc.32   %phi2179 <- %r6026
	br          .L1387

.L1386:
	load.64*    %r6028 <- 64[%arg1]
	push.64*    %r6028
	call.32     %r6029 <- luaZ_fill
	phisrc.32   %phi2180 <- %r6029
	br          .L1387

.L1387:
	phi.32      %r6030 <- %phi2179, %phi2180
	store.32    %r6030 -> 0[%arg1]
	setne.32    %r6034 <- %r6030, $45
	cbr         %r6034, .L1388, .L1389

.L1388:
	phisrc.32   %phi2181(return) <- $45
	br          .L1390

.L1389:
	load.64*    %r6037 <- 64[%arg1]
	load.64     %r6038 <- 0[%r6037]
	add.64      %r6039 <- %r6038, $-1
	store.64    %r6039 -> 0[%r6037]
	seta.32     %r6040 <- %r6038, $0
	cbr         %r6040, .L1391, .L1392

.L1391:
	load.64*    %r6042 <- 64[%arg1]
	load.64*    %r6043 <- 8[%r6042]
	add.64*     %r6044 <- %r6043, $1
	store.64*   %r6044 -> 8[%r6042]
	load.8      %r6045 <- 0[%r6043]
	cast.32     %r6047 <- (8) %r6045
	phisrc.32   %phi2182 <- %r6047
	br          .L1393

.L1392:
	load.64*    %r6049 <- 64[%arg1]
	push.64*    %r6049
	call.32     %r6050 <- luaZ_fill
	phisrc.32   %phi2183 <- %r6050
	br          .L1393

.L1393:
	phi.32      %r6051 <- %phi2182, %phi2183
	store.32    %r6051 -> 0[%arg1]
	seteq.32    %r6055 <- %r6051, $91
	phisrc.32   %phi2354 <- %r6051
	cbr         %r6055, .L1394, .L1401

.L1394:
	push.64*    %arg1
	call.32     %r6057 <- skip_sep
	load.64*    %r6059 <- 72[%arg1]
	store.64    $0 -> 8[%r6059]
	setge.32    %r6061 <- %r6057, $0
	cbr         %r6061, .L1396, .L1401

.L1396:
	push.64*    %arg1
	push.64*    $0
	push.32     %r6057
	call        read_long_string
	load.64*    %r6065 <- 72[%arg1]
	store.64    $0 -> 8[%r6065]
	br          .L1367

.L1401:
	load.32     %r6067 <- 0[%arg1]
	seteq.32    %r6068 <- %r6067, $10
	cbr         %r6068, .L1367, .L1403

.L1403:
	seteq.32    %r6071 <- %r6067, $13
	cbr         %r6071, .L1367, .L1402

.L1402:
	setne.32    %r6074 <- %r6067, $0xffffffff
	cbr         %r6074, .L1398, .L1367

.L1398:
	load.64*    %r6076 <- 64[%arg1]
	load.64     %r6077 <- 0[%r6076]
	add.64      %r6078 <- %r6077, $-1
	store.64    %r6078 -> 0[%r6076]
	seta.32     %r6079 <- %r6077, $0
	cbr         %r6079, .L1404, .L1405

.L1404:
	load.64*    %r6081 <- 64[%arg1]
	load.64*    %r6082 <- 8[%r6081]
	add.64*     %r6083 <- %r6082, $1
	store.64*   %r6083 -> 8[%r6081]
	load.8      %r6084 <- 0[%r6082]
	cast.32     %r6086 <- (8) %r6084
	phisrc.32   %phi2184 <- %r6086
	br          .L1406

.L1405:
	load.64*    %r6088 <- 64[%arg1]
	push.64*    %r6088
	call.32     %r6089 <- luaZ_fill
	phisrc.32   %phi2185 <- %r6089
	br          .L1406

.L1406:
	phi.32      %r6090 <- %phi2184, %phi2185
	store.32    %r6090 -> 0[%arg1]
	br          .L1401

.L1375:
	push.64*    %arg1
	call.32     %r6093 <- skip_sep
	setge.32    %r6095 <- %r6093, $0
	cbr         %r6095, .L1407, .L1408

.L1407:
	push.64*    %arg1
	push.64*    %arg2
	push.32     %r6093
	call        read_long_string
	phisrc.32   %phi2186(return) <- $286
	br          .L1390

.L1408:
	seteq.32    %r6100 <- %r6093, $0xffffffff
	cbr         %r6100, .L1410, .L1411

.L1410:
	phisrc.32   %phi2187(return) <- $91
	br          .L1390

.L1411:
	symaddr.64* %r6102 <- <anon symbol:0x199dfa8>
	push.64*    %arg1
	push.64*    %r6102
	push.32     $286
	call        luaX_lexerror
	br          .L1376

.L1376:
	load.64*    %r6104 <- 64[%arg1]
	load.64     %r6105 <- 0[%r6104]
	add.64      %r6106 <- %r6105, $-1
	store.64    %r6106 -> 0[%r6104]
	seta.32     %r6107 <- %r6105, $0
	cbr         %r6107, .L1413, .L1414

.L1413:
	load.64*    %r6109 <- 64[%arg1]
	load.64*    %r6110 <- 8[%r6109]
	add.64*     %r6111 <- %r6110, $1
	store.64*   %r6111 -> 8[%r6109]
	load.8      %r6112 <- 0[%r6110]
	cast.32     %r6114 <- (8) %r6112
	phisrc.32   %phi2188 <- %r6114
	br          .L1415

.L1414:
	load.64*    %r6116 <- 64[%arg1]
	push.64*    %r6116
	call.32     %r6117 <- luaZ_fill
	phisrc.32   %phi2189 <- %r6117
	br          .L1415

.L1415:
	phi.32      %r6118 <- %phi2188, %phi2189
	store.32    %r6118 -> 0[%arg1]
	setne.32    %r6122 <- %r6118, $61
	cbr         %r6122, .L1416, .L1417

.L1416:
	phisrc.32   %phi2190(return) <- $61
	br          .L1390

.L1417:
	load.64*    %r6124 <- 64[%arg1]
	load.64     %r6125 <- 0[%r6124]
	add.64      %r6126 <- %r6125, $-1
	store.64    %r6126 -> 0[%r6124]
	seta.32     %r6127 <- %r6125, $0
	cbr         %r6127, .L1419, .L1420

.L1419:
	load.64*    %r6129 <- 64[%arg1]
	load.64*    %r6130 <- 8[%r6129]
	add.64*     %r6131 <- %r6130, $1
	store.64*   %r6131 -> 8[%r6129]
	load.8      %r6132 <- 0[%r6130]
	cast.32     %r6134 <- (8) %r6132
	phisrc.32   %phi2191 <- %r6134
	br          .L1421

.L1420:
	load.64*    %r6136 <- 64[%arg1]
	push.64*    %r6136
	call.32     %r6137 <- luaZ_fill
	phisrc.32   %phi2192 <- %r6137
	br          .L1421

.L1421:
	phi.32      %r6138 <- %phi2191, %phi2192
	store.32    %r6138 -> 0[%arg1]
	phisrc.32   %phi2193(return) <- $280
	br          .L1390

.L1377:
	load.64*    %r6141 <- 64[%arg1]
	load.64     %r6142 <- 0[%r6141]
	add.64      %r6143 <- %r6142, $-1
	store.64    %r6143 -> 0[%r6141]
	seta.32     %r6144 <- %r6142, $0
	cbr         %r6144, .L1422, .L1423

.L1422:
	load.64*    %r6146 <- 64[%arg1]
	load.64*    %r6147 <- 8[%r6146]
	add.64*     %r6148 <- %r6147, $1
	store.64*   %r6148 -> 8[%r6146]
	load.8      %r6149 <- 0[%r6147]
	cast.32     %r6151 <- (8) %r6149
	phisrc.32   %phi2194 <- %r6151
	br          .L1424

.L1423:
	load.64*    %r6153 <- 64[%arg1]
	push.64*    %r6153
	call.32     %r6154 <- luaZ_fill
	phisrc.32   %phi2195 <- %r6154
	br          .L1424

.L1424:
	phi.32      %r6155 <- %phi2194, %phi2195
	store.32    %r6155 -> 0[%arg1]
	setne.32    %r6159 <- %r6155, $61
	cbr         %r6159, .L1425, .L1426

.L1425:
	phisrc.32   %phi2196(return) <- $60
	br          .L1390

.L1426:
	load.64*    %r6161 <- 64[%arg1]
	load.64     %r6162 <- 0[%r6161]
	add.64      %r6163 <- %r6162, $-1
	store.64    %r6163 -> 0[%r6161]
	seta.32     %r6164 <- %r6162, $0
	cbr         %r6164, .L1428, .L1429

.L1428:
	load.64*    %r6166 <- 64[%arg1]
	load.64*    %r6167 <- 8[%r6166]
	add.64*     %r6168 <- %r6167, $1
	store.64*   %r6168 -> 8[%r6166]
	load.8      %r6169 <- 0[%r6167]
	cast.32     %r6171 <- (8) %r6169
	phisrc.32   %phi2197 <- %r6171
	br          .L1430

.L1429:
	load.64*    %r6173 <- 64[%arg1]
	push.64*    %r6173
	call.32     %r6174 <- luaZ_fill
	phisrc.32   %phi2198 <- %r6174
	br          .L1430

.L1430:
	phi.32      %r6175 <- %phi2197, %phi2198
	store.32    %r6175 -> 0[%arg1]
	phisrc.32   %phi2199(return) <- $282
	br          .L1390

.L1378:
	load.64*    %r6178 <- 64[%arg1]
	load.64     %r6179 <- 0[%r6178]
	add.64      %r6180 <- %r6179, $-1
	store.64    %r6180 -> 0[%r6178]
	seta.32     %r6181 <- %r6179, $0
	cbr         %r6181, .L1431, .L1432

.L1431:
	load.64*    %r6183 <- 64[%arg1]
	load.64*    %r6184 <- 8[%r6183]
	add.64*     %r6185 <- %r6184, $1
	store.64*   %r6185 -> 8[%r6183]
	load.8      %r6186 <- 0[%r6184]
	cast.32     %r6188 <- (8) %r6186
	phisrc.32   %phi2200 <- %r6188
	br          .L1433

.L1432:
	load.64*    %r6190 <- 64[%arg1]
	push.64*    %r6190
	call.32     %r6191 <- luaZ_fill
	phisrc.32   %phi2201 <- %r6191
	br          .L1433

.L1433:
	phi.32      %r6192 <- %phi2200, %phi2201
	store.32    %r6192 -> 0[%arg1]
	setne.32    %r6196 <- %r6192, $61
	cbr         %r6196, .L1434, .L1435

.L1434:
	phisrc.32   %phi2202(return) <- $62
	br          .L1390

.L1435:
	load.64*    %r6198 <- 64[%arg1]
	load.64     %r6199 <- 0[%r6198]
	add.64      %r6200 <- %r6199, $-1
	store.64    %r6200 -> 0[%r6198]
	seta.32     %r6201 <- %r6199, $0
	cbr         %r6201, .L1437, .L1438

.L1437:
	load.64*    %r6203 <- 64[%arg1]
	load.64*    %r6204 <- 8[%r6203]
	add.64*     %r6205 <- %r6204, $1
	store.64*   %r6205 -> 8[%r6203]
	load.8      %r6206 <- 0[%r6204]
	cast.32     %r6208 <- (8) %r6206
	phisrc.32   %phi2203 <- %r6208
	br          .L1439

.L1438:
	load.64*    %r6210 <- 64[%arg1]
	push.64*    %r6210
	call.32     %r6211 <- luaZ_fill
	phisrc.32   %phi2204 <- %r6211
	br          .L1439

.L1439:
	phi.32      %r6212 <- %phi2203, %phi2204
	store.32    %r6212 -> 0[%arg1]
	phisrc.32   %phi2205(return) <- $281
	br          .L1390

.L1379:
	load.64*    %r6215 <- 64[%arg1]
	load.64     %r6216 <- 0[%r6215]
	add.64      %r6217 <- %r6216, $-1
	store.64    %r6217 -> 0[%r6215]
	seta.32     %r6218 <- %r6216, $0
	cbr         %r6218, .L1440, .L1441

.L1440:
	load.64*    %r6220 <- 64[%arg1]
	load.64*    %r6221 <- 8[%r6220]
	add.64*     %r6222 <- %r6221, $1
	store.64*   %r6222 -> 8[%r6220]
	load.8      %r6223 <- 0[%r6221]
	cast.32     %r6225 <- (8) %r6223
	phisrc.32   %phi2206 <- %r6225
	br          .L1442

.L1441:
	load.64*    %r6227 <- 64[%arg1]
	push.64*    %r6227
	call.32     %r6228 <- luaZ_fill
	phisrc.32   %phi2207 <- %r6228
	br          .L1442

.L1442:
	phi.32      %r6229 <- %phi2206, %phi2207
	store.32    %r6229 -> 0[%arg1]
	setne.32    %r6233 <- %r6229, $61
	cbr         %r6233, .L1443, .L1444

.L1443:
	phisrc.32   %phi2208(return) <- $126
	br          .L1390

.L1444:
	load.64*    %r6235 <- 64[%arg1]
	load.64     %r6236 <- 0[%r6235]
	add.64      %r6237 <- %r6236, $-1
	store.64    %r6237 -> 0[%r6235]
	seta.32     %r6238 <- %r6236, $0
	cbr         %r6238, .L1446, .L1447

.L1446:
	load.64*    %r6240 <- 64[%arg1]
	load.64*    %r6241 <- 8[%r6240]
	add.64*     %r6242 <- %r6241, $1
	store.64*   %r6242 -> 8[%r6240]
	load.8      %r6243 <- 0[%r6241]
	cast.32     %r6245 <- (8) %r6243
	phisrc.32   %phi2209 <- %r6245
	br          .L1448

.L1447:
	load.64*    %r6247 <- 64[%arg1]
	push.64*    %r6247
	call.32     %r6248 <- luaZ_fill
	phisrc.32   %phi2210 <- %r6248
	br          .L1448

.L1448:
	phi.32      %r6249 <- %phi2209, %phi2210
	store.32    %r6249 -> 0[%arg1]
	phisrc.32   %phi2211(return) <- $283
	br          .L1390

.L1381:
	push.64*    %arg1
	push.32     %r6013
	push.64*    %arg2
	call        read_string
	phisrc.32   %phi2212(return) <- $286
	br          .L1390

.L1382:
	push.64*    %arg1
	push.32     %r6013
	call        save
	load.64*    %r6259 <- 64[%arg1]
	load.64     %r6260 <- 0[%r6259]
	add.64      %r6261 <- %r6260, $-1
	store.64    %r6261 -> 0[%r6259]
	seta.32     %r6262 <- %r6260, $0
	cbr         %r6262, .L1449, .L1450

.L1449:
	load.64*    %r6264 <- 64[%arg1]
	load.64*    %r6265 <- 8[%r6264]
	add.64*     %r6266 <- %r6265, $1
	store.64*   %r6266 -> 8[%r6264]
	load.8      %r6267 <- 0[%r6265]
	cast.32     %r6269 <- (8) %r6267
	phisrc.32   %phi2213 <- %r6269
	br          .L1451

.L1450:
	load.64*    %r6271 <- 64[%arg1]
	push.64*    %r6271
	call.32     %r6272 <- luaZ_fill
	phisrc.32   %phi2214 <- %r6272
	br          .L1451

.L1451:
	phi.32      %r6273 <- %phi2213, %phi2214
	store.32    %r6273 -> 0[%arg1]
	symaddr.64* %r6276 <- <anon symbol:0x1814d30>
	push.64*    %arg1
	push.64*    %r6276
	call.32     %r6277 <- check_next
	cbr         %r6277, .L1452, .L1453

.L1452:
	symaddr.64* %r6279 <- <anon symbol:0x18150d0>
	push.64*    %arg1
	push.64*    %r6279
	call.32     %r6280 <- check_next
	cbr         %r6280, .L1454, .L1455

.L1454:
	phisrc.32   %phi2215(return) <- $279
	br          .L1390

.L1455:
	phisrc.32   %phi2216(return) <- $278
	br          .L1390

.L1453:
	call.64*    %r6281 <- __ctype_b_loc
	load.64*    %r6282 <- 0[%r6281]
	load.32     %r6284 <- 0[%arg1]
	scast.64    %r6286 <- (32) %r6284
	muls.64     %r6287 <- %r6286, $2
	add.64*     %r6288 <- %r6282, %r6287
	load.16     %r6289 <- 0[%r6288]
	cast.32     %r6290 <- (16) %r6289
	and.32      %r6291 <- %r6290, $0x800
	cbr         %r6291, .L1459, .L1458

.L1458:
	phisrc.32   %phi2217(return) <- $46
	br          .L1390

.L1459:
	push.64*    %arg1
	push.64*    %arg2
	call        read_numeral
	phisrc.32   %phi2218(return) <- $284
	br          .L1390

.L1383:
	phisrc.32   %phi2219(return) <- $287
	br          .L1390

.L1384:
	call.64*    %r6294 <- __ctype_b_loc
	load.64*    %r6295 <- 0[%r6294]
	load.32     %r6297 <- 0[%arg1]
	scast.64    %r6299 <- (32) %r6297
	muls.64     %r6300 <- %r6299, $2
	add.64*     %r6301 <- %r6295, %r6300
	load.16     %r6302 <- 0[%r6301]
	cast.32     %r6303 <- (16) %r6302
	and.32      %r6304 <- %r6303, $0x2000
	cbr         %r6304, .L1461, .L1462

.L1461:
	load.64*    %r6306 <- 64[%arg1]
	load.64     %r6307 <- 0[%r6306]
	add.64      %r6308 <- %r6307, $-1
	store.64    %r6308 -> 0[%r6306]
	seta.32     %r6309 <- %r6307, $0
	cbr         %r6309, .L1463, .L1464

.L1463:
	load.64*    %r6311 <- 64[%arg1]
	load.64*    %r6312 <- 8[%r6311]
	add.64*     %r6313 <- %r6312, $1
	store.64*   %r6313 -> 8[%r6311]
	load.8      %r6314 <- 0[%r6312]
	cast.32     %r6316 <- (8) %r6314
	phisrc.32   %phi2220 <- %r6316
	br          .L1465

.L1464:
	load.64*    %r6318 <- 64[%arg1]
	push.64*    %r6318
	call.32     %r6319 <- luaZ_fill
	phisrc.32   %phi2221 <- %r6319
	br          .L1465

.L1465:
	phi.32      %r6320 <- %phi2220, %phi2221
	store.32    %r6320 -> 0[%arg1]
	br          .L1367

.L1462:
	call.64*    %r6322 <- __ctype_b_loc
	load.64*    %r6323 <- 0[%r6322]
	load.32     %r6325 <- 0[%arg1]
	scast.64    %r6327 <- (32) %r6325
	muls.64     %r6328 <- %r6327, $2
	add.64*     %r6329 <- %r6323, %r6328
	load.16     %r6330 <- 0[%r6329]
	cast.32     %r6331 <- (16) %r6330
	and.32      %r6332 <- %r6331, $0x800
	cbr         %r6332, .L1467, .L1468

.L1467:
	push.64*    %arg1
	push.64*    %arg2
	call        read_numeral
	phisrc.32   %phi2222(return) <- $284
	br          .L1390

.L1468:
	call.64*    %r6335 <- __ctype_b_loc
	load.64*    %r6336 <- 0[%r6335]
	load.32     %r6338 <- 0[%arg1]
	scast.64    %r6340 <- (32) %r6338
	muls.64     %r6341 <- %r6340, $2
	add.64*     %r6342 <- %r6336, %r6341
	load.16     %r6343 <- 0[%r6342]
	cast.32     %r6344 <- (16) %r6343
	and.32      %r6345 <- %r6344, $0x400
	phisrc.32   %phi2352 <- %r6338
	phisrc.32   %phi2353 <- %r6338
	cbr         %r6345, .L1473, .L1472

.L1472:
	seteq.32    %r6348 <- %r6338, $95
	cbr         %r6348, .L1473, .L1471

.L1473:
	phi.32      %r6351 <- %phi2350, %phi2351, %phi2352, %phi2353
	push.64*    %arg1
	push.32     %r6351
	call        save
	load.64*    %r6353 <- 64[%arg1]
	load.64     %r6354 <- 0[%r6353]
	add.64      %r6355 <- %r6354, $-1
	store.64    %r6355 -> 0[%r6353]
	seta.32     %r6356 <- %r6354, $0
	cbr         %r6356, .L1476, .L1477

.L1476:
	load.64*    %r6358 <- 64[%arg1]
	load.64*    %r6359 <- 8[%r6358]
	add.64*     %r6360 <- %r6359, $1
	store.64*   %r6360 -> 8[%r6358]
	load.8      %r6361 <- 0[%r6359]
	cast.32     %r6363 <- (8) %r6361
	phisrc.32   %phi2223 <- %r6363
	br          .L1478

.L1477:
	load.64*    %r6365 <- 64[%arg1]
	push.64*    %r6365
	call.32     %r6366 <- luaZ_fill
	phisrc.32   %phi2224 <- %r6366
	br          .L1478

.L1478:
	phi.32      %r6367 <- %phi2223, %phi2224
	store.32    %r6367 -> 0[%arg1]
	call.64*    %r6369 <- __ctype_b_loc
	load.64*    %r6370 <- 0[%r6369]
	load.32     %r6372 <- 0[%arg1]
	scast.64    %r6374 <- (32) %r6372
	muls.64     %r6375 <- %r6374, $2
	add.64*     %r6376 <- %r6370, %r6375
	load.16     %r6377 <- 0[%r6376]
	cast.32     %r6378 <- (16) %r6377
	and.32      %r6379 <- %r6378, $8
	phisrc.32   %phi2350 <- %r6372
	phisrc.32   %phi2351 <- %r6372
	cbr         %r6379, .L1473, .L1479

.L1479:
	seteq.32    %r6382 <- %r6372, $95
	cbr         %r6382, .L1473, .L1475

.L1475:
	load.64*    %r6385 <- 72[%arg1]
	load.64*    %r6386 <- 0[%r6385]
	load.64     %r6389 <- 8[%r6385]
	push.64*    %arg1
	push.64*    %r6386
	push.64     %r6389
	call.64*    %r6390 <- luaX_newstring
	load.8      %r6392 <- 10[%r6390]
	cast.32     %r6393 <- (8) %r6392
	setgt.32    %r6394 <- %r6393, $0
	cbr         %r6394, .L1480, .L1481

.L1480:
	add.32      %r6399 <- %r6393, $256
	phisrc.32   %phi2225(return) <- %r6399
	br          .L1390

.L1481:
	store.64*   %r6390 -> 0[%arg2]
	phisrc.32   %phi2226(return) <- $285
	br          .L1390

.L1471:
	load.64*    %r6405 <- 64[%arg1]
	load.64     %r6406 <- 0[%r6405]
	add.64      %r6407 <- %r6406, $-1
	store.64    %r6407 -> 0[%r6405]
	seta.32     %r6408 <- %r6406, $0
	cbr         %r6408, .L1484, .L1485

.L1484:
	load.64*    %r6410 <- 64[%arg1]
	load.64*    %r6411 <- 8[%r6410]
	add.64*     %r6412 <- %r6411, $1
	store.64*   %r6412 -> 8[%r6410]
	load.8      %r6413 <- 0[%r6411]
	cast.32     %r6415 <- (8) %r6413
	phisrc.32   %phi2227 <- %r6415
	br          .L1486

.L1485:
	load.64*    %r6417 <- 64[%arg1]
	push.64*    %r6417
	call.32     %r6418 <- luaZ_fill
	phisrc.32   %phi2228 <- %r6418
	br          .L1486

.L1486:
	phi.32      %r6419 <- %phi2227, %phi2228
	store.32    %r6419 -> 0[%arg1]
	phisrc.32   %phi2229(return) <- %r6338
	br          .L1390

.L1390:
	phi.32      %r6035 <- %phi2181(return), %phi2186(return), %phi2187(return), %phi2190(return), %phi2193(return), %phi2196(return), %phi2199(return), %phi2202(return), %phi2205(return), %phi2208(return), %phi2211(return), %phi2212(return), %phi2215(return), %phi2216(return), %phi2217(return), %phi2218(return), %phi2219(return), %phi2222(return), %phi2225(return), %phi2226(return), %phi2229(return)
	ret.32      %r6035


luaX_next:
.L1487:
	<entry-point>
	load.32     %r6423 <- 4[%arg1]
	store.32    %r6423 -> 8[%arg1]
	load.32     %r6426 <- 32[%arg1]
	setne.32    %r6427 <- %r6426, $287
	cbr         %r6427, .L1488, .L1489

.L1488:
	add.64*     %r6429 <- %arg1, $16
	cast.64*    %r6430 <- (64) %r6429
	add.64*     %r6432 <- %arg1, $32
	cast.64*    %r6433 <- (64) %r6432
	push.64*    %r6430
	push.64*    %r6433
	push.64     $16
	call.64*    %r6434 <- memcpy
	store.32    $287 -> 32[%arg1]
	br          .L1490

.L1489:
	add.64*     %r6439 <- %arg1, $24
	push.64*    %arg1
	push.64*    %r6439
	call.32     %r6440 <- llex
	store.32    %r6440 -> 16[%arg1]
	br          .L1490

.L1490:
	ret


luaX_lookahead:
.L1491:
	<entry-point>
	add.64*     %r6445 <- %arg1, $40
	push.64*    %arg1
	push.64*    %r6445
	call.32     %r6446 <- llex
	store.32    %r6446 -> 32[%arg1]
	ret


isnumeral:
.L1493:
	<entry-point>
	load.32     %r6449 <- 0[%arg1]
	seteq.32    %r6451 <- %r6449, $5
	cbr         %r6451, .L1498, .L1496

.L1498:
	load.32     %r6453 <- 16[%arg1]
	seteq.32    %r6454 <- %r6453, $0xffffffff
	cbr         %r6454, .L1495, .L1496

.L1495:
	load.32     %r6456 <- 20[%arg1]
	seteq.32    %r6457 <- %r6456, $0xffffffff
	phisrc.32   %phi2357 <- %r6457
	br          .L1497

.L1496:
	phisrc.32   %phi2358 <- $0
	br          .L1497

.L1497:
	phi.32      %r6458 <- %phi2357, %phi2358
	ret.32      %r6458


luaK_nil:
.L1499:
	<entry-point>
	load.32     %r6461 <- 48[%arg1]
	load.32     %r6463 <- 52[%arg1]
	setgt.32    %r6464 <- %r6461, %r6463
	cbr         %r6464, .L1500, .L1501

.L1500:
	cbr         %r6461, .L1503, .L1502

.L1502:
	load.8      %r6470 <- 74[%arg1]
	cast.32     %r6471 <- (8) %r6470
	setge.32    %r6472 <- %arg2, %r6471
	cbr         %r6472, .L1506, .L1501

.L1503:
	load.64*    %r6474 <- 0[%arg1]
	load.64*    %r6475 <- 24[%r6474]
	add.32      %r6478 <- %r6461, $-1
	scast.64    %r6479 <- (32) %r6478
	muls.64     %r6480 <- %r6479, $4
	add.64*     %r6481 <- %r6475, %r6480
	load.32     %r6483 <- 0[%r6481]
	and.32      %r6485 <- %r6483, $63
	seteq.32    %r6488 <- %r6485, $3
	cbr         %r6488, .L1508, .L1501

.L1508:
	lsr.32      %r6491 <- %r6483, $6
	and.32      %r6492 <- %r6491, $255
	lsr.32      %r6496 <- %r6483, $23
	and.32      %r6497 <- %r6496, $511
	setle.1     %r6502 <- %r6492, %arg2
	add.32      %r6505 <- %r6497, $1
	setle.1     %r6507 <- %arg2, %r6505
	and-bool.1  %r6508 <- %r6502, %r6507
	cbr         %r6508, .L1510, .L1501

.L1510:
	add.32      %r6512 <- %arg2, %arg3
	add.32      %r6513 <- %r6512, $-1
	setgt.32    %r6515 <- %r6513, %r6497
	cbr         %r6515, .L1512, .L1506

.L1512:
	and.32      %r6518 <- %r6483, $0x7fffff
	shl.32      %r6524 <- %r6513, $23
	and.32      %r6525 <- %r6524, $0xff800000
	or.32       %r6526 <- %r6518, %r6525
	store.32    %r6526 -> 0[%r6481]
	br          .L1506

.L1501:
	add.32      %r6532 <- %arg2, %arg3
	add.32      %r6533 <- %r6532, $-1
	push.64*    %arg1
	push.32     $3
	push.32     %arg2
	push.32     %r6533
	push.32     $0
	call.32     %r6534 <- luaK_codeABC
	br          .L1506

.L1506:
	ret


luaK_jump:
.L1514:
	<entry-point>
	load.32     %r6536 <- 56[%arg1]
	store.32    $0xffffffff -> 56[%arg1]
	push.64*    %arg1
	push.32     $22
	push.32     $0
	push.32     $0x1fffe
	call.32     %r6539 <- luaK_codeABx
	store.32    %r6539 -> 0[j]
	symaddr.64* %r6541 <- j
	push.64*    %arg1
	push.64*    %r6541
	push.32     %r6536
	call        luaK_concat
	load.32     %r6543 <- 0[j]
	ret.32      %r6543


luaK_ret:
.L1516:
	<entry-point>
	add.32      %r6548 <- %arg3, $1
	push.64*    %arg1
	push.32     $30
	push.32     %arg2
	push.32     %r6548
	push.32     $0
	call.32     %r6549 <- luaK_codeABC
	ret


condjump:
.L1518:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	push.32     %arg3
	push.32     %arg4
	push.32     %arg5
	call.32     %r6555 <- luaK_codeABC
	push.64*    %arg1
	call.32     %r6557 <- luaK_jump
	ret.32      %r6557


fixjump:
.L1520:
	<entry-point>
	load.64*    %r6560 <- 0[%arg1]
	load.64*    %r6561 <- 24[%r6560]
	scast.64    %r6563 <- (32) %arg2
	muls.64     %r6564 <- %r6563, $4
	add.64*     %r6565(jmp) <- %r6561, %r6564
	add.32      %r6568 <- %arg2, $1
	sub.32      %r6569 <- %arg3, %r6568
	push.32     %r6569
	call.32     %r6571 <- abs
	setgt.32    %r6572 <- %r6571, $0x1ffff
	cbr         %r6572, .L1521, .L1522

.L1521:
	load.64*    %r6574 <- 24[%arg1]
	symaddr.64* %r6575 <- <anon symbol:0x18252c0>
	push.64*    %r6574
	push.64*    %r6575
	call        luaX_syntaxerror
	br          .L1522

.L1522:
	load.32     %r6577 <- 0[%r6565(jmp)]
	and.32      %r6578 <- %r6577, $0x3fff
	add.32      %r6580 <- %r6569, $0x1ffff
	shl.32      %r6583 <- %r6580, $14
	and.32      %r6584 <- %r6583, $0xffffc000
	or.32       %r6585 <- %r6578, %r6584
	store.32    %r6585 -> 0[%r6565(jmp)]
	ret


luaK_getlabel:
.L1524:
	<entry-point>
	load.32     %r6588 <- 48[%arg1]
	store.32    %r6588 -> 52[%arg1]
	ret.32      %r6588


getjump:
.L1526:
	<entry-point>
	load.64*    %r6594 <- 0[%arg1]
	load.64*    %r6595 <- 24[%r6594]
	scast.64    %r6597 <- (32) %arg2
	muls.64     %r6598 <- %r6597, $4
	add.64*     %r6599 <- %r6595, %r6598
	load.32     %r6600 <- 0[%r6599]
	lsr.32      %r6601 <- %r6600, $14
	and.32      %r6602 <- %r6601, $0x3ffff
	add.32      %r6604 <- %r6602, $0xfffffffffffe0001
	seteq.32    %r6606 <- %r6604, $0xffffffff
	cbr         %r6606, .L1527, .L1528

.L1527:
	phisrc.32   %phi2391(return) <- $0xffffffff
	br          .L1529

.L1528:
	add.32      %r6609 <- %arg2, $1
	add.32      %r6611 <- %r6609, %r6604
	phisrc.32   %phi2392(return) <- %r6611
	br          .L1529

.L1529:
	phi.32      %r6607 <- %phi2391(return), %phi2392(return)
	ret.32      %r6607


getjumpcontrol:
.L1531:
	<entry-point>
	load.64*    %r6613 <- 0[%arg1]
	load.64*    %r6614 <- 24[%r6613]
	scast.64    %r6616 <- (32) %arg2
	muls.64     %r6617 <- %r6616, $4
	add.64*     %r6618(pi) <- %r6614, %r6617
	setge.32    %r6620 <- %arg2, $1
	cbr         %r6620, .L1534, .L1533

.L1534:
	symaddr.64* %r6621 <- luaP_opmodes
	load.32     %r6624 <- -4[%r6618(pi)]
	and.32      %r6626 <- %r6624, $63
	scast.64    %r6628 <- (32) %r6626
	add.64*     %r6629 <- %r6621, %r6628
	load.8      %r6630 <- 0[%r6629]
	cast.32     %r6631 <- (8) %r6630
	and.32      %r6632 <- %r6631, $128
	cbr         %r6632, .L1532, .L1533

.L1532:
	add.64*     %r6634 <- %r6618(pi), $-4
	phisrc.64*  %phi2395(return) <- %r6634
	br          .L1535

.L1533:
	phisrc.64*  %phi2396(return) <- %r6618(pi)
	br          .L1535

.L1535:
	phi.64*     %r6635 <- %phi2395(return), %phi2396(return)
	ret.64*     %r6635


need_value:
.L1537:
	<entry-point>
	phisrc.32   %phi2407(list) <- %arg2
	br          .L1541

.L1541:
	phi.32      %r6637(list) <- %phi2407(list), %phi2408(list)
	setne.32    %r6638 <- %r6637(list), $0xffffffff
	cbr         %r6638, .L1538, .L1540

.L1538:
	push.64*    %arg1
	push.32     %r6637(list)
	call.64*    %r6641 <- getjumpcontrol
	load.32     %r6642 <- 0[%r6641]
	and.32      %r6645 <- %r6642, $63
	setne.32    %r6648 <- %r6645, $27
	cbr         %r6648, .L1542, .L1539

.L1542:
	phisrc.32   %phi2401(return) <- $1
	br          .L1544

.L1539:
	push.64*    %arg1
	push.32     %r6637(list)
	call.32     %r6652 <- getjump
	phisrc.32   %phi2408(list) <- %r6652
	br          .L1541

.L1540:
	phisrc.32   %phi2402(return) <- $0
	br          .L1544

.L1544:
	phi.32      %r6649 <- %phi2401(return), %phi2402(return)
	ret.32      %r6649


patchtestreg:
.L1545:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r6655 <- getjumpcontrol
	load.32     %r6657 <- 0[%r6655]
	and.32      %r6659 <- %r6657, $63
	setne.32    %r6662 <- %r6659, $27
	cbr         %r6662, .L1546, .L1547

.L1546:
	phisrc.32   %phi2409(return) <- $0
	br          .L1548

.L1547:
	setne.32    %r6665 <- %arg3, $255
	cbr         %r6665, .L1551, .L1550

.L1551:
	lsr.32      %r6669 <- %r6657, $23
	and.32      %r6670 <- %r6669, $511
	setne.32    %r6672 <- %arg3, %r6670
	cbr         %r6672, .L1549, .L1550

.L1549:
	and.32      %r6675 <- %r6657, $0xffffc03f
	shl.32      %r6678 <- %arg3, $6
	and.32      %r6679 <- %r6678, $0x3fc0
	or.32       %r6680 <- %r6675, %r6679
	store.32    %r6680 -> 0[%r6655]
	br          .L1552

.L1550:
	load.32     %r6683 <- 0[%r6655]
	lsr.32      %r6684 <- %r6683, $23
	and.32      %r6685 <- %r6684, $511
	shl.32      %r6688 <- %r6685, $6
	or.32       %r6689 <- %r6688, $26
	lsr.32      %r6693 <- %r6683, $14
	and.32      %r6694 <- %r6693, $511
	shl.32      %r6697 <- %r6694, $14
	or.32       %r6698 <- %r6689, %r6697
	store.32    %r6698 -> 0[%r6655]
	br          .L1552

.L1552:
	phisrc.32   %phi2410(return) <- $1
	br          .L1548

.L1548:
	phi.32      %r6663 <- %phi2409(return), %phi2410(return)
	ret.32      %r6663


removevalues:
.L1553:
	<entry-point>
	phisrc.32   %phi2424(list) <- %arg2
	br          .L1557

.L1557:
	phi.32      %r6700(list) <- %phi2424(list), %phi2425(list)
	setne.32    %r6701 <- %r6700(list), $0xffffffff
	cbr         %r6701, .L1554, .L1556

.L1554:
	push.64*    %arg1
	push.32     %r6700(list)
	push.32     $255
	call.32     %r6704 <- patchtestreg
	push.64*    %arg1
	push.32     %r6700(list)
	call.32     %r6707 <- getjump
	phisrc.32   %phi2425(list) <- %r6707
	br          .L1557

.L1556:
	ret


patchlistaux:
.L1558:
	<entry-point>
	phisrc.32   %phi2432(list) <- %arg2
	br          .L1562

.L1562:
	phi.32      %r6708(list) <- %phi2432(list), %phi2433(list)
	setne.32    %r6709 <- %r6708(list), $0xffffffff
	cbr         %r6709, .L1559, .L1561

.L1559:
	push.64*    %arg1
	push.32     %r6708(list)
	call.32     %r6712(next) <- getjump
	push.64*    %arg1
	push.32     %r6708(list)
	push.32     %arg4
	call.32     %r6716 <- patchtestreg
	cbr         %r6716, .L1563, .L1564

.L1563:
	push.64*    %arg1
	push.32     %r6708(list)
	push.32     %arg3
	call        fixjump
	br          .L1565

.L1564:
	push.64*    %arg1
	push.32     %r6708(list)
	push.32     %arg5
	call        fixjump
	br          .L1565

.L1565:
	phisrc.32   %phi2433(list) <- %r6712(next)
	br          .L1562

.L1561:
	ret


dischargejpc:
.L1566:
	<entry-point>
	load.32     %r6726 <- 56[%arg1]
	load.32     %r6728 <- 48[%arg1]
	push.64*    %arg1
	push.32     %r6726
	push.32     %r6728
	push.32     $255
	push.32     %r6728
	call        patchlistaux
	store.32    $0xffffffff -> 56[%arg1]
	ret


luaK_patchlist:
.L1568:
	<entry-point>
	load.32     %r6734 <- 48[%arg1]
	seteq.32    %r6735 <- %arg3, %r6734
	cbr         %r6735, .L1569, .L1570

.L1569:
	push.64*    %arg1
	push.32     %arg2
	call        luaK_patchtohere
	br          .L1571

.L1570:
	push.64*    %arg1
	push.32     %arg2
	push.32     %arg3
	push.32     $255
	push.32     %arg3
	call        patchlistaux
	br          .L1571

.L1571:
	ret


luaK_patchtohere:
.L1572:
	<entry-point>
	push.64*    %arg1
	call.32     %r6743 <- luaK_getlabel
	add.64*     %r6746 <- %arg1, $56
	push.64*    %arg1
	push.64*    %r6746
	push.32     %arg2
	call        luaK_concat
	ret


luaK_concat:
.L1574:
	<entry-point>
	seteq.32    %r6749 <- %arg3, $0xffffffff
	cbr         %r6749, .L1577, .L1576

.L1576:
	load.32     %r6751 <- 0[%arg2]
	seteq.32    %r6752 <- %r6751, $0xffffffff
	cbr         %r6752, .L1579, .L1580

.L1579:
	store.32    %arg3 -> 0[%arg2]
	br          .L1577

.L1580:
	phisrc.32   %phi2451(list) <- %r6751
	br          .L1585

.L1585:
	phi.32      %r6758(list) <- %phi2451(list), %phi2452(list)
	push.64*    %arg1
	push.32     %r6758(list)
	call.32     %r6759(next) <- getjump
	setne.32    %r6760 <- %r6759(next), $0xffffffff
	cbr         %r6760, .L1582, .L1584

.L1582:
	phisrc.32   %phi2452(list) <- %r6759(next)
	br          .L1585

.L1584:
	push.64*    %arg1
	push.32     %r6758(list)
	push.32     %arg3
	call        fixjump
	br          .L1577

.L1577:
	ret


luaK_checkstack:
.L1586:
	<entry-point>
	load.32     %r6766 <- 60[%arg1]
	add.32      %r6768 <- %r6766, %arg2
	load.64*    %r6771 <- 0[%arg1]
	load.8      %r6772 <- 115[%r6771]
	cast.32     %r6773 <- (8) %r6772
	setgt.32    %r6774 <- %r6768, %r6773
	cbr         %r6774, .L1587, .L1588

.L1587:
	setge.32    %r6776 <- %r6768, $250
	cbr         %r6776, .L1589, .L1590

.L1589:
	load.64*    %r6778 <- 24[%arg1]
	symaddr.64* %r6779 <- <anon symbol:0x18280f8>
	push.64*    %r6778
	push.64*    %r6779
	call        luaX_syntaxerror
	br          .L1590

.L1590:
	scast.8     %r6781 <- (32) %r6768
	load.64*    %r6783 <- 0[%arg1]
	store.8     %r6781 -> 115[%r6783]
	br          .L1588

.L1588:
	ret


luaK_reserveregs:
.L1591:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call        luaK_checkstack
	load.32     %r6788 <- 60[%arg1]
	add.32      %r6790 <- %r6788, %arg2
	store.32    %r6790 -> 60[%arg1]
	ret


freereg:
.L1593:
	<entry-point>
	and.32      %r6793 <- %arg2, $256
	cbr         %r6793, .L1595, .L1596

.L1596:
	load.8      %r6796 <- 74[%arg1]
	cast.32     %r6797 <- (8) %r6796
	setge.32    %r6798 <- %arg2, %r6797
	cbr         %r6798, .L1594, .L1595

.L1594:
	load.32     %r6800 <- 60[%arg1]
	add.32      %r6801 <- %r6800, $-1
	store.32    %r6801 -> 60[%arg1]
	br          .L1595

.L1595:
	ret


freeexp:
.L1597:
	<entry-point>
	load.32     %r6803 <- 0[%arg2]
	seteq.32    %r6805 <- %r6803, $12
	cbr         %r6805, .L1598, .L1599

.L1598:
	load.32     %r6808 <- 8[%arg2]
	push.64*    %arg1
	push.32     %r6808
	call        freereg
	br          .L1599

.L1599:
	ret


addk:
.L1600:
	<entry-point>
	load.64*    %r6810 <- 32[%arg1]
	load.64*    %r6813 <- 8[%arg1]
	push.64*    %r6810
	push.64*    %r6813
	push.64*    %arg2
	call.64*    %r6815 <- luaH_set
	load.64*    %r6817 <- 0[%arg1]
	load.32     %r6819(oldsize) <- 76[%r6817]
	load.32     %r6821 <- 8[%r6815]
	seteq.32    %r6822 <- %r6821, $3
	phisrc.32   %phi2487(oldsize) <- %r6819(oldsize)
	cbr         %r6822, .L1601, .L1602

.L1601:
	load.f64    %r6824 <- 0[%r6815]
	cast.32     %r6825 <- (64) %r6824
	phisrc.32   %phi2465(return) <- %r6825
	br          .L1603

.L1602:
	load.32     %r6829 <- 64[%arg1]
	fpcast.f64  %r6830 <- (32) %r6829
	store.f64   %r6830 -> 0[%r6815]
	store.32    $3 -> 8[%r6815]
	load.32     %r6834 <- 64[%arg1]
	add.32      %r6835 <- %r6834, $1
	load.32     %r6837 <- 76[%r6817]
	setgt.32    %r6838 <- %r6835, %r6837
	phisrc.32   %phi2490 <- %r6834
	phisrc.32   %phi2491 <- %r6834
	phisrc.32   %phi2492 <- %r6837
	cbr         %r6838, .L1605, .L1610

.L1605:
	load.64*    %r6841 <- 16[%r6817]
	cast.64*    %r6842 <- (64) %r6841
	add.64*     %r6844 <- %r6817, $76
	symaddr.64* %r6845 <- <anon symbol:0x182aa08>
	push.64*    %r6810
	push.64*    %r6842
	push.64*    %r6844
	push.64     $16
	push.32     $0x3ffff
	push.64*    %r6845
	call.64*    %r6846 <- luaM_growaux_
	ptrcast.64* %r6847 <- (64) %r6846
	store.64*   %r6847 -> 16[%r6817]
	br          .L1610

.L1610:
	phi.32      %r6849(oldsize) <- %phi2487(oldsize), %phi2488(oldsize)
	load.32     %r6851 <- 76[%r6817]
	setlt.32    %r6852 <- %r6849(oldsize), %r6851
	cbr         %r6852, .L1607, .L1609

.L1607:
	load.64*    %r6854 <- 16[%r6817]
	add.32      %r6856 <- %r6849(oldsize), $1
	scast.64    %r6857 <- (32) %r6849(oldsize)
	muls.64     %r6858 <- %r6857, $16
	add.64*     %r6859 <- %r6854, %r6858
	store.32    $0 -> 8[%r6859]
	phisrc.32   %phi2488(oldsize) <- %r6856
	br          .L1610

.L1609:
	load.64*    %r6862 <- 16[%r6817]
	load.32     %r6864 <- 64[%arg1]
	scast.64    %r6865 <- (32) %r6864
	muls.64     %r6866 <- %r6865, $16
	add.64*     %r6867 <- %r6862, %r6866
	load.f64    %r6869 <- 0[%arg3]
	fpcast.f64  %r6870 <- (64) %r6869
	store.f64   %r6870 -> 0[%r6867]
	load.32     %r6873 <- 8[%arg3]
	store.32    %r6873 -> 8[%r6867]
	load.32     %r6877 <- 8[%arg3]
	setge.32    %r6878 <- %r6877, $4
	cbr         %r6878, .L1614, .L1612

.L1614:
	load.64*    %r6880 <- 0[%arg3]
	load.8      %r6881 <- 9[%r6880]
	cast.32     %r6882 <- (8) %r6881
	and.32      %r6883 <- %r6882, $3
	cbr         %r6883, .L1613, .L1612

.L1613:
	ptrcast.64* %r6885 <- (64) %r6817
	load.8      %r6886 <- 9[%r6885]
	cast.32     %r6887 <- (8) %r6886
	and.32      %r6888 <- %r6887, $4
	cbr         %r6888, .L1611, .L1612

.L1611:
	push.64*    %r6810
	push.64*    %r6885
	push.64*    %r6880
	call        luaC_barrierf
	br          .L1612

.L1612:
	load.32     %r6895 <- 64[%arg1]
	add.32      %r6896 <- %r6895, $1
	store.32    %r6896 -> 64[%arg1]
	phisrc.32   %phi2466(return) <- %r6895
	br          .L1603

.L1603:
	phi.32      %r6826 <- %phi2465(return), %phi2466(return)
	ret.32      %r6826


luaK_stringK:
.L1615:
	<entry-point>
	ptrcast.64* %r6899 <- (64) %arg2
	store.64*   %r6899 -> 0[o]
	store.32    $4 -> 8[o]
	symaddr.64* %r6903 <- o
	push.64*    %arg1
	push.64*    %r6903
	push.64*    %r6903
	call.32     %r6905 <- addk
	ret.32      %r6905


luaK_numberK:
.L1617:
	<entry-point>
	symaddr.64* %r6907 <- o
	store.f64   %arg2 -> 0[%r6907]
	store.32    $3 -> 8[o]
	push.64*    %arg1
	push.64*    %r6907
	push.64*    %r6907
	call.32     %r6914 <- addk
	ret.32      %r6914


boolK:
.L1619:
	<entry-point>
	store.32    %arg2 -> 0[o]
	store.32    $1 -> 8[o]
	symaddr.64* %r6921 <- o
	push.64*    %arg1
	push.64*    %r6921
	push.64*    %r6921
	call.32     %r6923 <- addk
	ret.32      %r6923


nilK:
.L1621:
	<entry-point>
	store.32    $0 -> 8[v]
	load.64*    %r6927 <- 8[%arg1]
	ptrcast.64* %r6928 <- (64) %r6927
	store.64*   %r6928 -> 0[k]
	store.32    $5 -> 8[k]
	symaddr.64* %r6932 <- k
	symaddr.64* %r6933 <- v
	push.64*    %arg1
	push.64*    %r6932
	push.64*    %r6933
	call.32     %r6934 <- addk
	ret.32      %r6934


luaK_setreturns:
.L1623:
	<entry-point>
	load.32     %r6937 <- 0[%arg2]
	seteq.32    %r6939 <- %r6937, $13
	cbr         %r6939, .L1624, .L1625

.L1624:
	load.64*    %r6941 <- 0[%arg1]
	load.64*    %r6942 <- 24[%r6941]
	load.32     %r6944 <- 8[%arg2]
	scast.64    %r6945 <- (32) %r6944
	muls.64     %r6946 <- %r6945, $4
	add.64*     %r6947 <- %r6942, %r6946
	load.32     %r6948 <- 0[%r6947]
	and.32      %r6949 <- %r6948, $0xff803fff
	add.32      %r6951 <- %arg3, $1
	shl.32      %r6953 <- %r6951, $14
	and.32      %r6954 <- %r6953, $0x7fc000
	or.32       %r6955 <- %r6949, %r6954
	scast.64    %r6961 <- (32) %r6944
	muls.64     %r6962 <- %r6961, $4
	add.64*     %r6963 <- %r6942, %r6962
	store.32    %r6955 -> 0[%r6963]
	br          .L1626

.L1625:
	seteq.32    %r6967 <- %r6937, $14
	cbr         %r6967, .L1627, .L1626

.L1627:
	load.64*    %r6969 <- 0[%arg1]
	load.64*    %r6970 <- 24[%r6969]
	load.32     %r6972 <- 8[%arg2]
	scast.64    %r6973 <- (32) %r6972
	muls.64     %r6974 <- %r6973, $4
	add.64*     %r6975 <- %r6970, %r6974
	load.32     %r6976 <- 0[%r6975]
	and.32      %r6977 <- %r6976, $0x7fffff
	add.32      %r6979 <- %arg3, $1
	shl.32      %r6981 <- %r6979, $23
	and.32      %r6982 <- %r6981, $0xff800000
	or.32       %r6983 <- %r6977, %r6982
	scast.64    %r6989 <- (32) %r6972
	muls.64     %r6990 <- %r6989, $4
	add.64*     %r6991 <- %r6970, %r6990
	store.32    %r6983 -> 0[%r6991]
	load.64*    %r6993 <- 0[%arg1]
	load.64*    %r6994 <- 24[%r6993]
	load.32     %r6996 <- 8[%arg2]
	scast.64    %r6997 <- (32) %r6996
	muls.64     %r6998 <- %r6997, $4
	add.64*     %r6999 <- %r6994, %r6998
	load.32     %r7000 <- 0[%r6999]
	and.32      %r7001 <- %r7000, $0xffffc03f
	load.32     %r7003 <- 60[%arg1]
	shl.32      %r7005 <- %r7003, $6
	and.32      %r7006 <- %r7005, $0x3fc0
	or.32       %r7007 <- %r7001, %r7006
	scast.64    %r7013 <- (32) %r6996
	muls.64     %r7014 <- %r7013, $4
	add.64*     %r7015 <- %r6994, %r7014
	store.32    %r7007 -> 0[%r7015]
	push.64*    %arg1
	push.32     $1
	call        luaK_reserveregs
	br          .L1626

.L1626:
	ret


luaK_setoneret:
.L1629:
	<entry-point>
	load.32     %r7018 <- 0[%arg2]
	seteq.32    %r7020 <- %r7018, $13
	cbr         %r7020, .L1630, .L1631

.L1630:
	store.32    $12 -> 0[%arg2]
	load.64*    %r7023 <- 0[%arg1]
	load.64*    %r7024 <- 24[%r7023]
	load.32     %r7026 <- 8[%arg2]
	scast.64    %r7027 <- (32) %r7026
	muls.64     %r7028 <- %r7027, $4
	add.64*     %r7029 <- %r7024, %r7028
	load.32     %r7030 <- 0[%r7029]
	lsr.32      %r7031 <- %r7030, $6
	and.32      %r7032 <- %r7031, $255
	store.32    %r7032 -> 8[%arg2]
	br          .L1632

.L1631:
	seteq.32    %r7038 <- %r7018, $14
	cbr         %r7038, .L1633, .L1632

.L1633:
	load.64*    %r7040 <- 0[%arg1]
	load.64*    %r7041 <- 24[%r7040]
	load.32     %r7043 <- 8[%arg2]
	scast.64    %r7044 <- (32) %r7043
	muls.64     %r7045 <- %r7044, $4
	add.64*     %r7046 <- %r7041, %r7045
	load.32     %r7047 <- 0[%r7046]
	and.32      %r7048 <- %r7047, $0x7fffff
	or.32       %r7049 <- %r7048, $0x1000000
	scast.64    %r7055 <- (32) %r7043
	muls.64     %r7056 <- %r7055, $4
	add.64*     %r7057 <- %r7041, %r7056
	store.32    %r7049 -> 0[%r7057]
	store.32    $11 -> 0[%arg2]
	br          .L1632

.L1632:
	ret


luaK_dischargevars:
.L1635:
	<entry-point>
	load.32     %r7060 <- 0[%arg2]
	switch.32   %r7060, 6 -> .L1637, 7 -> .L1638, 8 -> .L1639, 9 -> .L1640, 13 -> .L1642, 14 -> .L1642, default -> .L1636

.L1637:
	store.32    $12 -> 0[%arg2]
	br          .L1636

.L1638:
	load.32     %r7064 <- 8[%arg2]
	push.64*    %arg1
	push.32     $4
	push.32     $0
	push.32     %r7064
	push.32     $0
	call.32     %r7065 <- luaK_codeABC
	store.32    %r7065 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1636

.L1639:
	load.32     %r7070 <- 8[%arg2]
	push.64*    %arg1
	push.32     $5
	push.32     $0
	push.32     %r7070
	call.32     %r7072 <- luaK_codeABx
	store.32    %r7072 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1636

.L1640:
	load.32     %r7077 <- 12[%arg2]
	push.64*    %arg1
	push.32     %r7077
	call        freereg
	load.32     %r7080 <- 8[%arg2]
	push.64*    %arg1
	push.32     %r7080
	call        freereg
	load.32     %r7083 <- 8[%arg2]
	load.32     %r7085 <- 12[%arg2]
	push.64*    %arg1
	push.32     $6
	push.32     $0
	push.32     %r7083
	push.32     %r7085
	call.32     %r7086 <- luaK_codeABC
	store.32    %r7086 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1636

.L1642:
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_setoneret
	br          .L1636

.L1636:
	ret


code_label:
.L1644:
	<entry-point>
	push.64*    %arg1
	call.32     %r7092 <- luaK_getlabel
	push.64*    %arg1
	push.32     $2
	push.32     %arg2
	push.32     %arg3
	push.32     %arg4
	call.32     %r7097 <- luaK_codeABC
	ret.32      %r7097


discharge2reg:
.L1646:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_dischargevars
	load.32     %r7102 <- 0[%arg2]
	switch.32   %r7102, 1 -> .L1648, 2 -> .L1650, 3 -> .L1650, 4 -> .L1651, 5 -> .L1652, 11 -> .L1653, 12 -> .L1654, default -> .L1658

.L1648:
	push.64*    %arg1
	push.32     %arg3
	push.32     $1
	call        luaK_nil
	br          .L1647

.L1650:
	seteq.32    %r7110 <- %r7102, $2
	push.64*    %arg1
	push.32     $2
	push.32     %arg3
	push.32     %r7110
	push.32     $0
	call.32     %r7111 <- luaK_codeABC
	br          .L1647

.L1651:
	load.32     %r7115 <- 8[%arg2]
	push.64*    %arg1
	push.32     $1
	push.32     %arg3
	push.32     %r7115
	call.32     %r7117 <- luaK_codeABx
	br          .L1647

.L1652:
	load.f64    %r7122 <- 8[%arg2]
	push.64*    %arg1
	push.f64    %r7122
	call.32     %r7123 <- luaK_numberK
	push.64*    %arg1
	push.32     $1
	push.32     %arg3
	push.32     %r7123
	call.32     %r7125 <- luaK_codeABx
	br          .L1647

.L1653:
	load.64*    %r7127 <- 0[%arg1]
	load.64*    %r7128 <- 24[%r7127]
	load.32     %r7130 <- 8[%arg2]
	scast.64    %r7131 <- (32) %r7130
	muls.64     %r7132 <- %r7131, $4
	add.64*     %r7133 <- %r7128, %r7132
	load.32     %r7135 <- 0[%r7133]
	and.32      %r7136 <- %r7135, $0xffffc03f
	shl.32      %r7139 <- %arg3, $6
	and.32      %r7140 <- %r7139, $0x3fc0
	or.32       %r7141 <- %r7136, %r7140
	store.32    %r7141 -> 0[%r7133]
	br          .L1647

.L1654:
	load.32     %r7145 <- 8[%arg2]
	setne.32    %r7146 <- %arg3, %r7145
	cbr         %r7146, .L1656, .L1647

.L1656:
	push.64*    %arg1
	push.32     $0
	push.32     %arg3
	push.32     %r7145
	push.32     $0
	call.32     %r7151 <- luaK_codeABC
	br          .L1647

.L1647:
	store.32    %arg3 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	br          .L1658

.L1658:
	ret


discharge2anyreg:
.L1659:
	<entry-point>
	load.32     %r7156 <- 0[%arg2]
	setne.32    %r7158 <- %r7156, $12
	cbr         %r7158, .L1660, .L1661

.L1660:
	push.64*    %arg1
	push.32     $1
	call        luaK_reserveregs
	load.32     %r7163 <- 60[%arg1]
	add.32      %r7164 <- %r7163, $-1
	push.64*    %arg1
	push.64*    %arg2
	push.32     %r7164
	call        discharge2reg
	br          .L1661

.L1661:
	ret


exp2reg:
.L1662:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	push.32     %arg3
	call        discharge2reg
	load.32     %r7169 <- 0[%arg2]
	seteq.32    %r7171 <- %r7169, $10
	cbr         %r7171, .L1663, .L1664

.L1663:
	add.64*     %r7174 <- %arg2, $16
	load.32     %r7176 <- 8[%arg2]
	push.64*    %arg1
	push.64*    %r7174
	push.32     %r7176
	call        luaK_concat
	br          .L1664

.L1664:
	load.32     %r7178 <- 16[%arg2]
	load.32     %r7180 <- 20[%arg2]
	setne.32    %r7181 <- %r7178, %r7180
	cbr         %r7181, .L1665, .L1666

.L1665:
	push.64*    %arg1
	push.32     %r7178
	call.32     %r7185 <- need_value
	phisrc.32   %phi2588(p_f) <- $0xffffffff
	phisrc.32   %phi2590(p_t) <- $0xffffffff
	cbr         %r7185, .L1667, .L1669

.L1669:
	load.32     %r7188 <- 20[%arg2]
	push.64*    %arg1
	push.32     %r7188
	call.32     %r7189 <- need_value
	cbr         %r7189, .L1667, .L1668

.L1667:
	load.32     %r7191 <- 0[%arg2]
	seteq.32    %r7193 <- %r7191, $10
	cbr         %r7193, .L1670, .L1671

.L1670:
	phisrc.32   %phi2559 <- $0xffffffff
	br          .L1672

.L1671:
	push.64*    %arg1
	call.32     %r7195 <- luaK_jump
	phisrc.32   %phi2560 <- %r7195
	br          .L1672

.L1672:
	phi.32      %r7196 <- %phi2559, %phi2560
	push.64*    %arg1
	push.32     %arg3
	push.32     $0
	push.32     $1
	call.32     %r7199 <- code_label
	push.64*    %arg1
	push.32     %arg3
	push.32     $1
	push.32     $0
	call.32     %r7202 <- code_label
	push.64*    %arg1
	push.32     %r7196
	call        luaK_patchtohere
	phisrc.32   %phi2589(p_f) <- %r7199
	phisrc.32   %phi2591(p_t) <- %r7202
	br          .L1668

.L1668:
	push.64*    %arg1
	call.32     %r7206 <- luaK_getlabel
	load.32     %r7209 <- 20[%arg2]
	phi.32      %r7212 <- %phi2588(p_f), %phi2589(p_f)
	push.64*    %arg1
	push.32     %r7209
	push.32     %r7206
	push.32     %arg3
	push.32     %r7212
	call        patchlistaux
	load.32     %r7215 <- 16[%arg2]
	phi.32      %r7218 <- %phi2590(p_t), %phi2591(p_t)
	push.64*    %arg1
	push.32     %r7215
	push.32     %r7206
	push.32     %arg3
	push.32     %r7218
	call        patchlistaux
	br          .L1666

.L1666:
	store.32    $0xffffffff -> 16[%arg2]
	store.32    $0xffffffff -> 20[%arg2]
	store.32    %arg3 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	ret


luaK_exp2nextreg:
.L1674:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_dischargevars
	push.64*    %arg1
	push.64*    %arg2
	call        freeexp
	push.64*    %arg1
	push.32     $1
	call        luaK_reserveregs
	load.32     %r7232 <- 60[%arg1]
	add.32      %r7233 <- %r7232, $-1
	push.64*    %arg1
	push.64*    %arg2
	push.32     %r7233
	call        exp2reg
	ret


luaK_exp2anyreg:
.L1676:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_dischargevars
	load.32     %r7237 <- 0[%arg2]
	seteq.32    %r7239 <- %r7237, $12
	cbr         %r7239, .L1677, .L1678

.L1677:
	load.32     %r7241 <- 16[%arg2]
	load.32     %r7243 <- 20[%arg2]
	setne.32    %r7244 <- %r7241, %r7243
	cbr         %r7244, .L1680, .L1679

.L1679:
	load.32     %r7246 <- 8[%arg2]
	phisrc.32   %phi2593(return) <- %r7246
	br          .L1681

.L1680:
	load.32     %r7249 <- 8[%arg2]
	load.8      %r7251 <- 74[%arg1]
	cast.32     %r7252 <- (8) %r7251
	setge.32    %r7253 <- %r7249, %r7252
	cbr         %r7253, .L1682, .L1678

.L1682:
	push.64*    %arg1
	push.64*    %arg2
	push.32     %r7249
	call        exp2reg
	load.32     %r7259 <- 8[%arg2]
	phisrc.32   %phi2594(return) <- %r7259
	br          .L1681

.L1678:
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_exp2nextreg
	load.32     %r7263 <- 8[%arg2]
	phisrc.32   %phi2595(return) <- %r7263
	br          .L1681

.L1681:
	phi.32      %r7247 <- %phi2593(return), %phi2594(return), %phi2595(return)
	ret.32      %r7247


luaK_exp2val:
.L1684:
	<entry-point>
	load.32     %r7265 <- 16[%arg2]
	load.32     %r7267 <- 20[%arg2]
	setne.32    %r7268 <- %r7265, %r7267
	cbr         %r7268, .L1685, .L1686

.L1685:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r7271 <- luaK_exp2anyreg
	br          .L1687

.L1686:
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_dischargevars
	br          .L1687

.L1687:
	ret


luaK_exp2RK:
.L1688:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_exp2val
	load.32     %r7277 <- 0[%arg2]
	switch.32   %r7277, 1 -> .L1693, 2 -> .L1693, 3 -> .L1693, 4 -> .L1694, 5 -> .L1693, default -> .L1689

.L1693:
	load.32     %r7279 <- 64[%arg1]
	setle.32    %r7280 <- %r7279, $255
	cbr         %r7280, .L1696, .L1689

.L1696:
	seteq.32    %r7284 <- %r7277, $1
	cbr         %r7284, .L1698, .L1699

.L1698:
	push.64*    %arg1
	call.32     %r7286 <- nilK
	phisrc.32   %phi2611 <- %r7286
	br          .L1700

.L1699:
	seteq.32    %r7290 <- %r7277, $5
	cbr         %r7290, .L1701, .L1702

.L1701:
	load.f64    %r7293 <- 8[%arg2]
	push.64*    %arg1
	push.f64    %r7293
	call.32     %r7294 <- luaK_numberK
	phisrc.32   %phi2612 <- %r7294
	br          .L1703

.L1702:
	seteq.32    %r7299 <- %r7277, $2
	push.64*    %arg1
	push.32     %r7299
	call.32     %r7300 <- boolK
	phisrc.32   %phi2613 <- %r7300
	br          .L1703

.L1703:
	phi.32      %r7301 <- %phi2612, %phi2613
	phisrc.32   %phi2614 <- %r7301
	br          .L1700

.L1700:
	phi.32      %r7302 <- %phi2611, %phi2614
	store.32    %r7302 -> 8[%arg2]
	store.32    $4 -> 0[%arg2]
	or.32       %r7307 <- %r7302, $256
	phisrc.32   %phi2615(return) <- %r7307
	br          .L1704

.L1694:
	load.32     %r7310 <- 8[%arg2]
	setle.32    %r7311 <- %r7310, $255
	cbr         %r7311, .L1706, .L1689

.L1706:
	or.32       %r7314 <- %r7310, $256
	phisrc.32   %phi2616(return) <- %r7314
	br          .L1704

.L1689:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r7317 <- luaK_exp2anyreg
	phisrc.32   %phi2617(return) <- %r7317
	br          .L1704

.L1704:
	phi.32      %r7308 <- %phi2615(return), %phi2616(return), %phi2617(return)
	ret.32      %r7308


luaK_storevar:
.L1709:
	<entry-point>
	load.32     %r7319 <- 0[%arg2]
	switch.32   %r7319, 6 -> .L1711, 7 -> .L1712, 8 -> .L1713, 9 -> .L1714, default -> .L1710

.L1711:
	push.64*    %arg1
	push.64*    %arg3
	call        freeexp
	load.32     %r7325 <- 8[%arg2]
	push.64*    %arg1
	push.64*    %arg3
	push.32     %r7325
	call        exp2reg
	br          .L1716

.L1712:
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7328 <- luaK_exp2anyreg
	load.32     %r7332 <- 8[%arg2]
	push.64*    %arg1
	push.32     $8
	push.32     %r7328
	push.32     %r7332
	push.32     $0
	call.32     %r7333 <- luaK_codeABC
	br          .L1710

.L1713:
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7336 <- luaK_exp2anyreg
	load.32     %r7340 <- 8[%arg2]
	push.64*    %arg1
	push.32     $7
	push.32     %r7336
	push.32     %r7340
	call.32     %r7342 <- luaK_codeABx
	br          .L1710

.L1714:
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7345 <- luaK_exp2RK
	load.32     %r7348 <- 8[%arg2]
	load.32     %r7350 <- 12[%arg2]
	push.64*    %arg1
	push.32     $9
	push.32     %r7348
	push.32     %r7350
	push.32     %r7345
	call.32     %r7352 <- luaK_codeABC
	br          .L1710

.L1710:
	push.64*    %arg1
	push.64*    %arg3
	call        freeexp
	br          .L1716

.L1716:
	ret


luaK_self:
.L1717:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r7357 <- luaK_exp2anyreg
	push.64*    %arg1
	push.64*    %arg2
	call        freeexp
	load.32     %r7361 <- 60[%arg1]
	push.64*    %arg1
	push.32     $2
	call        luaK_reserveregs
	load.32     %r7366 <- 8[%arg2]
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7369 <- luaK_exp2RK
	push.64*    %arg1
	push.32     $11
	push.32     %r7361
	push.32     %r7366
	push.32     %r7369
	call.32     %r7370 <- luaK_codeABC
	push.64*    %arg1
	push.64*    %arg3
	call        freeexp
	store.32    %r7361 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	ret


invertjump:
.L1719:
	<entry-point>
	load.32     %r7378 <- 8[%arg2]
	push.64*    %arg1
	push.32     %r7378
	call.64*    %r7379 <- getjumpcontrol
	load.32     %r7381 <- 0[%r7379]
	and.32      %r7382 <- %r7381, $0xffffc03f
	lsr.32      %r7385 <- %r7381, $6
	and.32      %r7386 <- %r7385, $255
	seteq.32    %r7388 <- %r7386, $0
	shl.32      %r7390 <- %r7388, $6
	and.32      %r7391 <- %r7390, $0x3fc0
	or.32       %r7392 <- %r7382, %r7391
	store.32    %r7392 -> 0[%r7379]
	ret


jumponcond:
.L1721:
	<entry-point>
	load.32     %r7395 <- 0[%arg2]
	seteq.32    %r7397 <- %r7395, $11
	cbr         %r7397, .L1722, .L1723

.L1722:
	load.64*    %r7399 <- 0[%arg1]
	load.64*    %r7400 <- 24[%r7399]
	load.32     %r7402 <- 8[%arg2]
	scast.64    %r7403 <- (32) %r7402
	muls.64     %r7404 <- %r7403, $4
	add.64*     %r7405 <- %r7400, %r7404
	load.32     %r7406 <- 0[%r7405]
	and.32      %r7409 <- %r7406, $63
	seteq.32    %r7412 <- %r7409, $19
	cbr         %r7412, .L1724, .L1723

.L1724:
	load.32     %r7414 <- 48[%arg1]
	add.32      %r7415 <- %r7414, $-1
	store.32    %r7415 -> 48[%arg1]
	lsr.32      %r7418 <- %r7406, $23
	and.32      %r7419 <- %r7418, $511
	seteq.32    %r7422 <- %arg3, $0
	push.64*    %arg1
	push.32     $26
	push.32     %r7419
	push.32     $0
	push.32     %r7422
	call.32     %r7423 <- condjump
	phisrc.32   %phi2662(return) <- %r7423
	br          .L1726

.L1723:
	push.64*    %arg1
	push.64*    %arg2
	call        discharge2anyreg
	push.64*    %arg1
	push.64*    %arg2
	call        freeexp
	load.32     %r7431 <- 8[%arg2]
	push.64*    %arg1
	push.32     $27
	push.32     $255
	push.32     %r7431
	push.32     %arg3
	call.32     %r7433 <- condjump
	phisrc.32   %phi2663(return) <- %r7433
	br          .L1726

.L1726:
	phi.32      %r7424 <- %phi2662(return), %phi2663(return)
	ret.32      %r7424


luaK_goiftrue:
.L1727:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_dischargevars
	load.32     %r7437 <- 0[%arg2]
	switch.32   %r7437, 2 -> .L1731, 4 -> .L1731, 5 -> .L1731, 10 -> .L1732, default -> .L1733

.L1731:
	phisrc.32   %phi2684(pc) <- $0xffffffff
	br          .L1728

.L1732:
	push.64*    %arg1
	push.64*    %arg2
	call        invertjump
	load.32     %r7441 <- 8[%arg2]
	phisrc.32   %phi2685(pc) <- %r7441
	br          .L1728

.L1733:
	push.64*    %arg1
	push.64*    %arg2
	push.32     $0
	call.32     %r7444 <- jumponcond
	phisrc.32   %phi2686(pc) <- %r7444
	br          .L1728

.L1728:
	add.64*     %r7447 <- %arg2, $20
	phi.32      %r7448 <- %phi2684(pc), %phi2685(pc), %phi2686(pc)
	push.64*    %arg1
	push.64*    %r7447
	push.32     %r7448
	call        luaK_concat
	load.32     %r7451 <- 16[%arg2]
	push.64*    %arg1
	push.32     %r7451
	call        luaK_patchtohere
	store.32    $0xffffffff -> 16[%arg2]
	ret


luaK_goiffalse:
.L1735:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_dischargevars
	load.32     %r7456 <- 0[%arg2]
	switch.32   %r7456, 1 -> .L1738, 3 -> .L1738, 10 -> .L1739, default -> .L1740

.L1738:
	phisrc.32   %phi2695(pc) <- $0xffffffff
	br          .L1736

.L1739:
	load.32     %r7458 <- 8[%arg2]
	phisrc.32   %phi2696(pc) <- %r7458
	br          .L1736

.L1740:
	push.64*    %arg1
	push.64*    %arg2
	push.32     $1
	call.32     %r7461 <- jumponcond
	phisrc.32   %phi2697(pc) <- %r7461
	br          .L1736

.L1736:
	add.64*     %r7464 <- %arg2, $16
	phi.32      %r7465 <- %phi2695(pc), %phi2696(pc), %phi2697(pc)
	push.64*    %arg1
	push.64*    %r7464
	push.32     %r7465
	call        luaK_concat
	load.32     %r7468 <- 20[%arg2]
	push.64*    %arg1
	push.32     %r7468
	call        luaK_patchtohere
	store.32    $0xffffffff -> 20[%arg2]
	ret


codenot:
.L1742:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_dischargevars
	load.32     %r7473 <- 0[%arg2]
	switch.32   %r7473, 1 -> .L1745, 2 -> .L1748, 3 -> .L1745, 4 -> .L1748, 5 -> .L1748, 10 -> .L1749, 11 -> .L1751, 12 -> .L1751, default -> .L1743

.L1745:
	store.32    $2 -> 0[%arg2]
	br          .L1743

.L1748:
	store.32    $3 -> 0[%arg2]
	br          .L1743

.L1749:
	push.64*    %arg1
	push.64*    %arg2
	call        invertjump
	br          .L1743

.L1751:
	push.64*    %arg1
	push.64*    %arg2
	call        discharge2anyreg
	push.64*    %arg1
	push.64*    %arg2
	call        freeexp
	load.32     %r7484 <- 8[%arg2]
	push.64*    %arg1
	push.32     $19
	push.32     $0
	push.32     %r7484
	push.32     $0
	call.32     %r7485 <- luaK_codeABC
	store.32    %r7485 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1743

.L1743:
	load.32     %r7489 <- 20[%arg2]
	load.32     %r7491 <- 16[%arg2]
	store.32    %r7491 -> 20[%arg2]
	store.32    %r7489 -> 16[%arg2]
	push.64*    %arg1
	push.32     %r7491
	call        removevalues
	load.32     %r7500 <- 16[%arg2]
	push.64*    %arg1
	push.32     %r7500
	call        removevalues
	ret


luaK_indexed:
.L1754:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7503 <- luaK_exp2RK
	store.32    %r7503 -> 12[%arg2]
	store.32    $9 -> 0[%arg2]
	ret


constfolding:
.L1756:
	<entry-point>
	push.64*    %arg2
	call.32     %r7507 <- isnumeral
	cbr         %r7507, .L1759, .L1757

.L1759:
	push.64*    %arg3
	call.32     %r7509 <- isnumeral
	cbr         %r7509, .L1758, .L1757

.L1757:
	phisrc.32   %phi2712(return) <- $0
	br          .L1760

.L1758:
	load.f64    %r7512(v1) <- 8[%arg2]
	load.f64    %r7514(v2) <- 8[%arg3]
	switch.32   %arg1, 12 -> .L1762, 13 -> .L1763, 14 -> .L1764, 15 -> .L1765, 16 -> .L1766, 17 -> .L1767, 18 -> .L1768, 20 -> .L1769, default -> .L1770

.L1762:
	add.f64     %r7518(r) <- %r7512(v1), %r7514(v2)
	phisrc.f64  %phi2739(r) <- %r7518(r)
	br          .L1761

.L1763:
	sub.f64     %r7521 <- %r7512(v1), %r7514(v2)
	phisrc.f64  %phi2740(r) <- %r7521
	br          .L1761

.L1764:
	mulu.f64    %r7524 <- %r7512(v1), %r7514(v2)
	phisrc.f64  %phi2741(r) <- %r7524
	br          .L1761

.L1765:
	set.f64     %r7526 <- 0.000000
	seteq.32    %r7527 <- %r7514(v2), %r7526
	cbr         %r7527, .L1771, .L1772

.L1771:
	phisrc.32   %phi2713(return) <- $0
	br          .L1760

.L1772:
	divu.f64    %r7530 <- %r7512(v1), %r7514(v2)
	phisrc.f64  %phi2742(r) <- %r7530
	br          .L1761

.L1766:
	set.f64     %r7532 <- 0.000000
	seteq.32    %r7533 <- %r7514(v2), %r7532
	cbr         %r7533, .L1773, .L1774

.L1773:
	phisrc.32   %phi2714(return) <- $0
	br          .L1760

.L1774:
	divu.f64    %r7537 <- %r7512(v1), %r7514(v2)
	push.f64    %r7537
	call.f64    %r7538 <- floor
	mulu.f64    %r7540 <- %r7538, %r7514(v2)
	sub.f64     %r7541 <- %r7512(v1), %r7540
	phisrc.f64  %phi2743(r) <- %r7541
	br          .L1761

.L1767:
	push.f64    %r7512(v1)
	push.f64    %r7514(v2)
	call.f64    %r7544 <- pow
	phisrc.f64  %phi2744(r) <- %r7544
	br          .L1761

.L1768:
	neg.f64     %r7546 <- %r7512(v1)
	phisrc.f64  %phi2745(r) <- %r7546
	br          .L1761

.L1769:
	phisrc.32   %phi2715(return) <- $0
	br          .L1760

.L1770:
	set.f64     %r7547 <- 0.000000
	phisrc.f64  %phi2746(r) <- %r7547
	br          .L1761

.L1761:
	phi.f64     %r7548 <- %phi2739(r), %phi2740(r), %phi2741(r), %phi2742(r), %phi2743(r), %phi2744(r), %phi2745(r), %phi2746(r)
	store.f64   %r7548 -> 8[%arg2]
	phisrc.32   %phi2717(return) <- $1
	br          .L1760

.L1760:
	phi.32      %r7510 <- %phi2712(return), %phi2713(return), %phi2714(return), %phi2715(return), VOID, %phi2717(return)
	ret.32      %r7510


codearith:
.L1777:
	<entry-point>
	push.32     %arg2
	push.64*    %arg3
	push.64*    %arg4
	call.32     %r7556 <- constfolding
	cbr         %r7556, .L1780, .L1779

.L1779:
	setne.1     %r7560 <- %arg2, $18
	setne.1     %r7564 <- %arg2, $20
	and-bool.1  %r7565 <- %r7560, %r7564
	cbr         %r7565, .L1782, .L1783

.L1782:
	push.64*    %arg1
	push.64*    %arg4
	call.32     %r7569 <- luaK_exp2RK
	phisrc.32   %phi2747 <- %r7569
	br          .L1784

.L1783:
	phisrc.32   %phi2748 <- $0
	br          .L1784

.L1784:
	phi.32      %r7570 <- %phi2747, %phi2748
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7573 <- luaK_exp2RK
	setgt.32    %r7576 <- %r7573, %r7570
	cbr         %r7576, .L1785, .L1786

.L1785:
	push.64*    %arg1
	push.64*    %arg3
	call        freeexp
	push.64*    %arg1
	push.64*    %arg4
	call        freeexp
	br          .L1787

.L1786:
	push.64*    %arg1
	push.64*    %arg4
	call        freeexp
	push.64*    %arg1
	push.64*    %arg3
	call        freeexp
	br          .L1787

.L1787:
	push.64*    %arg1
	push.32     %arg2
	push.32     $0
	push.32     %r7573
	push.32     %r7570
	call.32     %r7589 <- luaK_codeABC
	store.32    %r7589 -> 8[%arg3]
	store.32    $11 -> 0[%arg3]
	br          .L1780

.L1780:
	ret


codecomp:
.L1788:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg4
	call.32     %r7594(o1) <- luaK_exp2RK
	push.64*    %arg1
	push.64*    %arg5
	call.32     %r7597(o2) <- luaK_exp2RK
	push.64*    %arg1
	push.64*    %arg5
	call        freeexp
	push.64*    %arg1
	push.64*    %arg4
	call        freeexp
	seteq.1     %r7604 <- %arg3, $0
	setne.1     %r7608 <- %arg2, $23
	and-bool.1  %r7609 <- %r7604, %r7608
	select.32   %r7616 <- %r7609, $1, %arg3
	select.32   %r7617 <- %r7609, %r7597(o2), %r7594(o1)
	select.32   %r7618 <- %r7609, %r7594(o1), %r7597(o2)
	push.64*    %arg1
	push.32     %arg2
	push.32     %r7616
	push.32     %r7617
	push.32     %r7618
	call.32     %r7619 <- condjump
	store.32    %r7619 -> 8[%arg4]
	store.32    $10 -> 0[%arg4]
	ret


luaK_prefix:
.L1792:
	<entry-point>
	store.32    $0xffffffff -> 20[e2]
	store.32    $0xffffffff -> 16[e2]
	store.32    $5 -> 0[e2]
	set.f64     %r7622 <- 0.000000
	store.f64   %r7622 -> 8[e2]
	switch.32   %arg2, 0 -> .L1794, 1 -> .L1795, 2 -> .L1796, default -> .L1793

.L1794:
	push.64*    %arg3
	call.32     %r7625 <- isnumeral
	cbr         %r7625, .L1799, .L1798

.L1798:
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7628 <- luaK_exp2anyreg
	br          .L1799

.L1799:
	symaddr.64* %r7631 <- e2
	push.64*    %arg1
	push.32     $18
	push.64*    %arg3
	push.64*    %r7631
	call        codearith
	br          .L1793

.L1795:
	push.64*    %arg1
	push.64*    %arg3
	call        codenot
	br          .L1793

.L1796:
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7636 <- luaK_exp2anyreg
	symaddr.64* %r7639 <- e2
	push.64*    %arg1
	push.32     $20
	push.64*    %arg3
	push.64*    %r7639
	call        codearith
	br          .L1793

.L1793:
	ret


luaK_infix:
.L1800:
	<entry-point>
	switch.32   %arg2, 0 -> .L1810, 1 -> .L1810, 2 -> .L1810, 3 -> .L1810, 4 -> .L1810, 5 -> .L1810, 6 -> .L1804, 13 -> .L1802, 14 -> .L1803, default -> .L1811

.L1802:
	push.64*    %arg1
	push.64*    %arg3
	call        luaK_goiftrue
	br          .L1801

.L1803:
	push.64*    %arg1
	push.64*    %arg3
	call        luaK_goiffalse
	br          .L1801

.L1804:
	push.64*    %arg1
	push.64*    %arg3
	call        luaK_exp2nextreg
	br          .L1801

.L1810:
	push.64*    %arg3
	call.32     %r7648 <- isnumeral
	cbr         %r7648, .L1801, .L1812

.L1812:
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7651 <- luaK_exp2RK
	br          .L1801

.L1811:
	push.64*    %arg1
	push.64*    %arg3
	call.32     %r7654 <- luaK_exp2RK
	br          .L1801

.L1801:
	ret


luaK_posfix:
.L1814:
	<entry-point>
	cast.64*    %r7664 <- (64) %arg3
	cast.64*    %r7666 <- (64) %arg4
	switch.32   %arg2, 0 -> .L1819, 1 -> .L1820, 2 -> .L1821, 3 -> .L1822, 4 -> .L1823, 5 -> .L1824, 6 -> .L1818, 7 -> .L1826, 8 -> .L1825, 9 -> .L1827, 10 -> .L1828, 11 -> .L1829, 12 -> .L1830, 13 -> .L1816, 14 -> .L1817, default -> .L1815

.L1816:
	push.64*    %arg1
	push.64*    %arg4
	call        luaK_dischargevars
	add.64*     %r7660 <- %arg4, $20
	load.32     %r7662 <- 20[%arg3]
	push.64*    %arg1
	push.64*    %r7660
	push.32     %r7662
	call        luaK_concat
	push.64*    %r7664
	push.64*    %r7666
	push.64     $24
	call.64*    %r7667 <- memcpy
	br          .L1815

.L1817:
	push.64*    %arg1
	push.64*    %arg4
	call        luaK_dischargevars
	add.64*     %r7672 <- %arg4, $16
	load.32     %r7674 <- 16[%arg3]
	push.64*    %arg1
	push.64*    %r7672
	push.32     %r7674
	call        luaK_concat
	push.64*    %r7664
	push.64*    %r7666
	push.64     $24
	call.64*    %r7679 <- memcpy
	br          .L1815

.L1818:
	push.64*    %arg1
	push.64*    %arg4
	call        luaK_exp2val
	load.32     %r7683 <- 0[%arg4]
	seteq.32    %r7685 <- %r7683, $11
	cbr         %r7685, .L1834, .L1833

.L1834:
	load.64*    %r7687 <- 0[%arg1]
	load.64*    %r7688 <- 24[%r7687]
	load.32     %r7690 <- 8[%arg4]
	scast.64    %r7691 <- (32) %r7690
	muls.64     %r7692 <- %r7691, $4
	add.64*     %r7693 <- %r7688, %r7692
	load.32     %r7694 <- 0[%r7693]
	and.32      %r7696 <- %r7694, $63
	seteq.32    %r7699 <- %r7696, $21
	cbr         %r7699, .L1832, .L1833

.L1832:
	push.64*    %arg1
	push.64*    %arg3
	call        freeexp
	load.64*    %r7703 <- 0[%arg1]
	load.64*    %r7704 <- 24[%r7703]
	load.32     %r7706 <- 8[%arg4]
	scast.64    %r7707 <- (32) %r7706
	muls.64     %r7708 <- %r7707, $4
	add.64*     %r7709 <- %r7704, %r7708
	load.32     %r7710 <- 0[%r7709]
	and.32      %r7711 <- %r7710, $0x7fffff
	load.32     %r7713 <- 8[%arg3]
	shl.32      %r7715 <- %r7713, $23
	and.32      %r7716 <- %r7715, $0xff800000
	or.32       %r7717 <- %r7711, %r7716
	scast.64    %r7723 <- (32) %r7706
	muls.64     %r7724 <- %r7723, $4
	add.64*     %r7725 <- %r7704, %r7724
	store.32    %r7717 -> 0[%r7725]
	store.32    $11 -> 0[%arg3]
	load.32     %r7728 <- 8[%arg4]
	store.32    %r7728 -> 8[%arg3]
	br          .L1815

.L1833:
	push.64*    %arg1
	push.64*    %arg4
	call        luaK_exp2nextreg
	push.64*    %arg1
	push.32     $21
	push.64*    %arg3
	push.64*    %arg4
	call        codearith
	br          .L1815

.L1819:
	push.64*    %arg1
	push.32     $12
	push.64*    %arg3
	push.64*    %arg4
	call        codearith
	br          .L1815

.L1820:
	push.64*    %arg1
	push.32     $13
	push.64*    %arg3
	push.64*    %arg4
	call        codearith
	br          .L1815

.L1821:
	push.64*    %arg1
	push.32     $14
	push.64*    %arg3
	push.64*    %arg4
	call        codearith
	br          .L1815

.L1822:
	push.64*    %arg1
	push.32     $15
	push.64*    %arg3
	push.64*    %arg4
	call        codearith
	br          .L1815

.L1823:
	push.64*    %arg1
	push.32     $16
	push.64*    %arg3
	push.64*    %arg4
	call        codearith
	br          .L1815

.L1824:
	push.64*    %arg1
	push.32     $17
	push.64*    %arg3
	push.64*    %arg4
	call        codearith
	br          .L1815

.L1825:
	push.64*    %arg1
	push.32     $23
	push.32     $1
	push.64*    %arg3
	push.64*    %arg4
	call        codecomp
	br          .L1815

.L1826:
	push.64*    %arg1
	push.32     $23
	push.32     $0
	push.64*    %arg3
	push.64*    %arg4
	call        codecomp
	br          .L1815

.L1827:
	push.64*    %arg1
	push.32     $24
	push.32     $1
	push.64*    %arg3
	push.64*    %arg4
	call        codecomp
	br          .L1815

.L1828:
	push.64*    %arg1
	push.32     $25
	push.32     $1
	push.64*    %arg3
	push.64*    %arg4
	call        codecomp
	br          .L1815

.L1829:
	push.64*    %arg1
	push.32     $24
	push.32     $0
	push.64*    %arg3
	push.64*    %arg4
	call        codecomp
	br          .L1815

.L1830:
	push.64*    %arg1
	push.32     $25
	push.32     $0
	push.64*    %arg3
	push.64*    %arg4
	call        codecomp
	br          .L1815

.L1815:
	ret


luaK_fixline:
.L1836:
	<entry-point>
	load.64*    %r7773 <- 0[%arg1]
	load.64*    %r7774 <- 40[%r7773]
	load.32     %r7776 <- 48[%arg1]
	add.32      %r7777 <- %r7776, $-1
	scast.64    %r7778 <- (32) %r7777
	muls.64     %r7779 <- %r7778, $4
	add.64*     %r7780 <- %r7774, %r7779
	store.32    %arg2 -> 0[%r7780]
	ret


luaK_code:
.L1838:
	<entry-point>
	load.64*    %r7782 <- 0[%arg1]
	push.64*    %arg1
	call        dischargejpc
	load.32     %r7785 <- 48[%arg1]
	add.32      %r7786 <- %r7785, $1
	load.32     %r7788 <- 80[%r7782]
	setgt.32    %r7789 <- %r7786, %r7788
	phisrc.32   %phi2873 <- %r7785
	cbr         %r7789, .L1839, .L1840

.L1839:
	load.64*    %r7791 <- 32[%arg1]
	load.64*    %r7793 <- 24[%r7782]
	cast.64*    %r7794 <- (64) %r7793
	add.64*     %r7796 <- %r7782, $80
	symaddr.64* %r7797 <- <anon symbol:0x1856710>
	push.64*    %r7791
	push.64*    %r7794
	push.64*    %r7796
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7797
	call.64*    %r7798 <- luaM_growaux_
	ptrcast.64* %r7799 <- (64) %r7798
	store.64*   %r7799 -> 24[%r7782]
	br          .L1840

.L1840:
	load.64*    %r7803 <- 24[%r7782]
	load.32     %r7805 <- 48[%arg1]
	scast.64    %r7806 <- (32) %r7805
	muls.64     %r7807 <- %r7806, $4
	add.64*     %r7808 <- %r7803, %r7807
	store.32    %arg2 -> 0[%r7808]
	load.32     %r7810 <- 48[%arg1]
	add.32      %r7811 <- %r7810, $1
	load.32     %r7813 <- 84[%r7782]
	setgt.32    %r7814 <- %r7811, %r7813
	phisrc.32   %phi2872 <- %r7810
	cbr         %r7814, .L1841, .L1842

.L1841:
	load.64*    %r7816 <- 32[%arg1]
	load.64*    %r7818 <- 40[%r7782]
	cast.64*    %r7819 <- (64) %r7818
	add.64*     %r7821 <- %r7782, $84
	symaddr.64* %r7822 <- <anon symbol:0x1857be8>
	push.64*    %r7816
	push.64*    %r7819
	push.64*    %r7821
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7822
	call.64*    %r7823 <- luaM_growaux_
	ptrcast.64* %r7824 <- (64) %r7823
	store.64*   %r7824 -> 40[%r7782]
	br          .L1842

.L1842:
	load.64*    %r7828 <- 40[%r7782]
	load.32     %r7830 <- 48[%arg1]
	scast.64    %r7831 <- (32) %r7830
	muls.64     %r7832 <- %r7831, $4
	add.64*     %r7833 <- %r7828, %r7832
	store.32    %arg3 -> 0[%r7833]
	load.32     %r7835 <- 48[%arg1]
	add.32      %r7836 <- %r7835, $1
	store.32    %r7836 -> 48[%arg1]
	ret.32      %r7835


luaK_codeABC:
.L1844:
	<entry-point>
	shl.32      %r7844 <- %arg3, $6
	or.32       %r7845 <- %arg2, %r7844
	shl.32      %r7848 <- %arg4, $23
	or.32       %r7849 <- %r7845, %r7848
	shl.32      %r7852 <- %arg5, $14
	or.32       %r7853 <- %r7849, %r7852
	load.64*    %r7855 <- 24[%arg1]
	load.32     %r7856 <- 8[%r7855]
	push.64*    %arg1
	push.32     %r7853
	push.32     %r7856
	call.32     %r7857 <- luaK_code
	ret.32      %r7857


luaK_codeABx:
.L1846:
	<entry-point>
	shl.32      %r7865 <- %arg3, $6
	or.32       %r7866 <- %arg2, %r7865
	shl.32      %r7869 <- %arg4, $14
	or.32       %r7870 <- %r7866, %r7869
	load.64*    %r7872 <- 24[%arg1]
	load.32     %r7873 <- 8[%r7872]
	push.64*    %arg1
	push.32     %r7870
	push.32     %r7873
	call.32     %r7874 <- luaK_code
	ret.32      %r7874


luaK_setlist:
.L1848:
	<entry-point>
	add.32      %r7877 <- %arg3, $-1
	divs.32     %r7878 <- %r7877, $50
	add.32      %r7879 <- %r7878, $1
	seteq.32    %r7882 <- %arg4, $0xffffffff
	select.32   %r7883(b) <- %r7882, $0, %arg4
	setle.32    %r7885 <- %r7879, $511
	cbr         %r7885, .L1849, .L1850

.L1849:
	push.64*    %arg1
	push.32     $34
	push.32     %arg2
	push.32     %r7883(b)
	push.32     %r7879
	call.32     %r7890 <- luaK_codeABC
	br          .L1851

.L1850:
	push.64*    %arg1
	push.32     $34
	push.32     %arg2
	push.32     %r7883(b)
	push.32     $0
	call.32     %r7894 <- luaK_codeABC
	load.64*    %r7899 <- 24[%arg1]
	load.32     %r7900 <- 8[%r7899]
	push.64*    %arg1
	push.32     %r7879
	push.32     %r7900
	call.32     %r7901 <- luaK_code
	br          .L1851

.L1851:
	add.32      %r7903 <- %arg2, $1
	store.32    %r7903 -> 60[%arg1]
	ret


anchor_token:
.L1853:
	<entry-point>
	load.32     %r7906 <- 16[%arg1]
	seteq.32    %r7907 <- %r7906, $285
	cbr         %r7907, .L1854, .L1856

.L1856:
	seteq.32    %r7910 <- %r7906, $286
	cbr         %r7910, .L1854, .L1855

.L1854:
	load.64*    %r7912 <- 24[%arg1]
	add.64*     %r7915 <- %r7912, $24
	ptrcast.64* %r7916 <- (64) %r7915
	load.64     %r7918 <- 16[%r7912]
	push.64*    %arg1
	push.64*    %r7916
	push.64     %r7918
	call.64*    %r7919 <- luaX_newstring
	br          .L1855

.L1855:
	ret


error_expected:
.L1857:
	<entry-point>
	load.64*    %r7922 <- 56[%arg1]
	symaddr.64* %r7923 <- <anon symbol:0x1861dc8>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r7926 <- luaX_token2str
	push.64*    %r7922
	push.64*    %r7923
	push.64*    %r7926
	call.64*    %r7927 <- luaO_pushfstring
	push.64*    %arg1
	push.64*    %r7927
	call        luaX_syntaxerror
	ret


errorlimit:
.L1859:
	<entry-point>
	load.64*    %r7929 <- 0[%arg1]
	load.32     %r7930 <- 96[%r7929]
	cbr         %r7930, .L1861, .L1860

.L1860:
	load.64*    %r7933 <- 32[%arg1]
	symaddr.64* %r7934 <- <anon symbol:0x1862fe8>
	push.64*    %r7933
	push.64*    %r7934
	push.32     %arg2
	push.64*    %arg3
	call.64*    %r7937 <- luaO_pushfstring
	phisrc.64*  %phi2892 <- %r7937
	br          .L1862

.L1861:
	load.64*    %r7939 <- 32[%arg1]
	symaddr.64* %r7940 <- <anon symbol:0x18626d8>
	push.64*    %r7939
	push.64*    %r7940
	push.32     %r7930
	push.32     %arg2
	push.64*    %arg3
	call.64*    %r7946 <- luaO_pushfstring
	phisrc.64*  %phi2893 <- %r7946
	br          .L1862

.L1862:
	phi.64*     %r7947 <- %phi2892, %phi2893
	load.64*    %r7949 <- 24[%arg1]
	push.64*    %r7949
	push.64*    %r7947
	push.32     $0
	call        luaX_lexerror
	ret


testnext:
.L1864:
	<entry-point>
	load.32     %r7952 <- 16[%arg1]
	seteq.32    %r7954 <- %r7952, %arg2
	cbr         %r7954, .L1865, .L1867

.L1865:
	push.64*    %arg1
	call        luaX_next
	br          .L1867

.L1867:
	ret.32      %r7954


check:
.L1869:
	<entry-point>
	load.32     %r7958 <- 16[%arg1]
	setne.32    %r7960 <- %r7958, %arg2
	cbr         %r7960, .L1870, .L1871

.L1870:
	push.64*    %arg1
	push.32     %arg2
	call        error_expected
	br          .L1871

.L1871:
	ret


checknext:
.L1872:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call        check
	push.64*    %arg1
	call        luaX_next
	ret


check_match:
.L1874:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r7968 <- testnext
	cbr         %r7968, .L1876, .L1875

.L1875:
	load.32     %r7971 <- 4[%arg1]
	seteq.32    %r7972 <- %arg4, %r7971
	cbr         %r7972, .L1877, .L1878

.L1877:
	push.64*    %arg1
	push.32     %arg2
	call        error_expected
	br          .L1876

.L1878:
	load.64*    %r7977 <- 56[%arg1]
	symaddr.64* %r7978 <- <anon symbol:0x1863c98>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r7981 <- luaX_token2str
	push.64*    %arg1
	push.32     %arg3
	call.64*    %r7984 <- luaX_token2str
	push.64*    %r7977
	push.64*    %r7978
	push.64*    %r7981
	push.64*    %r7984
	push.32     %arg4
	call.64*    %r7986 <- luaO_pushfstring
	push.64*    %arg1
	push.64*    %r7986
	call        luaX_syntaxerror
	br          .L1876

.L1876:
	ret


str_checkname:
.L1880:
	<entry-point>
	push.64*    %arg1
	push.32     $285
	call        check
	load.64*    %r7989 <- 24[%arg1]
	push.64*    %arg1
	call        luaX_next
	ret.64*     %r7989


init_exp:
.L1882:
	<entry-point>
	store.32    $0xffffffff -> 16[%arg1]
	store.32    $0xffffffff -> 20[%arg1]
	store.32    %arg2 -> 0[%arg1]
	store.32    %arg3 -> 8[%arg1]
	ret


codestring:
.L1884:
	<entry-point>
	load.64*    %r8001 <- 48[%arg1]
	push.64*    %r8001
	push.64*    %arg3
	call.32     %r8003 <- luaK_stringK
	push.64*    %arg2
	push.32     $4
	push.32     %r8003
	call        init_exp
	ret


checkname:
.L1886:
	<entry-point>
	push.64*    %arg1
	call.64*    %r8007 <- str_checkname
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %r8007
	call        codestring
	ret


registerlocalvar:
.L1888:
	<entry-point>
	load.64*    %r8009 <- 48[%arg1]
	load.64*    %r8011 <- 0[%r8009]
	load.32     %r8013(oldsize) <- 92[%r8011]
	load.16     %r8015 <- 72[%r8009]
	scast.32    %r8016 <- (16) %r8015
	add.32      %r8017 <- %r8016, $1
	setgt.32    %r8020 <- %r8017, %r8013(oldsize)
	phisrc.32   %phi2934(oldsize) <- %r8013(oldsize)
	phisrc.16   %phi2936 <- %r8015
	phisrc.16   %phi2937 <- %r8015
	phisrc.32   %phi2938(oldsize) <- %r8013(oldsize)
	cbr         %r8020, .L1889, .L1894

.L1889:
	load.64*    %r8022 <- 56[%arg1]
	load.64*    %r8024 <- 48[%r8011]
	cast.64*    %r8025 <- (64) %r8024
	add.64*     %r8027 <- %r8011, $92
	symaddr.64* %r8028 <- <anon symbol:0x1865e20>
	push.64*    %r8022
	push.64*    %r8025
	push.64*    %r8027
	push.64     $16
	push.32     $0x7fff
	push.64*    %r8028
	call.64*    %r8029 <- luaM_growaux_
	ptrcast.64* %r8030 <- (64) %r8029
	store.64*   %r8030 -> 48[%r8011]
	br          .L1894

.L1894:
	phi.32      %r8032(oldsize) <- %phi2934(oldsize), %phi2935(oldsize)
	load.32     %r8034 <- 92[%r8011]
	setlt.32    %r8035 <- %r8032(oldsize), %r8034
	cbr         %r8035, .L1891, .L1893

.L1891:
	load.64*    %r8037 <- 48[%r8011]
	add.32      %r8039 <- %r8032(oldsize), $1
	scast.64    %r8040 <- (32) %r8032(oldsize)
	muls.64     %r8041 <- %r8040, $16
	add.64*     %r8042 <- %r8037, %r8041
	store.64*   $0 -> 0[%r8042]
	phisrc.32   %phi2935(oldsize) <- %r8039
	br          .L1894

.L1893:
	load.64*    %r8045 <- 48[%r8011]
	load.16     %r8047 <- 72[%r8009]
	scast.64    %r8048 <- (16) %r8047
	muls.64     %r8049 <- %r8048, $16
	add.64*     %r8050 <- %r8045, %r8049
	store.64*   %arg2 -> 0[%r8050]
	ptrcast.64* %r8052 <- (64) %arg2
	load.8      %r8053 <- 9[%r8052]
	cast.32     %r8054 <- (8) %r8053
	and.32      %r8055 <- %r8054, $3
	cbr         %r8055, .L1897, .L1896

.L1897:
	ptrcast.64* %r8057 <- (64) %r8011
	load.8      %r8058 <- 9[%r8057]
	cast.32     %r8059 <- (8) %r8058
	and.32      %r8060 <- %r8059, $4
	cbr         %r8060, .L1895, .L1896

.L1895:
	load.64*    %r8062 <- 56[%arg1]
	push.64*    %r8062
	push.64*    %r8057
	push.64*    %r8052
	call        luaC_barrierf
	br          .L1896

.L1896:
	load.16     %r8068 <- 72[%r8009]
	add.16      %r8069 <- %r8068, $1
	store.16    %r8069 -> 72[%r8009]
	scast.32    %r8070 <- (16) %r8068
	ret.32      %r8070


new_localvar:
.L1899:
	<entry-point>
	load.64*    %r8073 <- 48[%arg1]
	load.8      %r8075 <- 74[%r8073]
	cast.32     %r8076 <- (8) %r8075
	add.32      %r8078 <- %r8076, %arg3
	add.32      %r8079 <- %r8078, $1
	setgt.32    %r8080 <- %r8079, $200
	cbr         %r8080, .L1900, .L1901

.L1900:
	symaddr.64* %r8082 <- <anon symbol:0x18672f8>
	push.64*    %r8073
	push.32     $200
	push.64*    %r8082
	call        errorlimit
	br          .L1901

.L1901:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r8085 <- registerlocalvar
	scast.16    %r8086 <- (32) %r8085
	add.64*     %r8088 <- %r8073, $196
	load.8      %r8090 <- 74[%r8073]
	cast.32     %r8091 <- (8) %r8090
	add.32      %r8093 <- %r8091, %arg3
	scast.64    %r8094 <- (32) %r8093
	muls.64     %r8095 <- %r8094, $2
	add.64*     %r8096 <- %r8088, %r8095
	store.16    %r8086 -> 0[%r8096]
	ret


adjustlocalvars:
.L1903:
	<entry-point>
	load.64*    %r8098 <- 48[%arg1]
	load.8      %r8100 <- 74[%r8098]
	cast.32     %r8101 <- (8) %r8100
	add.32      %r8103 <- %r8101, %arg2
	scast.8     %r8104 <- (32) %r8103
	store.8     %r8104 -> 74[%r8098]
	phisrc.32   %phi2947(nvars) <- %arg2
	phisrc.8    %phi2950 <- %r8104
	phisrc.8    %phi2951 <- %r8104
	br          .L1907

.L1907:
	phi.32      %r8106(nvars) <- %phi2947(nvars), %phi2948(nvars)
	cbr         %r8106(nvars), .L1904, .L1906

.L1904:
	load.32     %r8108 <- 48[%r8098]
	load.64*    %r8110 <- 0[%r8098]
	load.64*    %r8111 <- 48[%r8110]
	add.64*     %r8113 <- %r8098, $196
	load.8      %r8115 <- 74[%r8098]
	cast.32     %r8116 <- (8) %r8115
	sub.32      %r8118 <- %r8116, %r8106(nvars)
	scast.64    %r8119 <- (32) %r8118
	muls.64     %r8120 <- %r8119, $2
	add.64*     %r8121 <- %r8113, %r8120
	load.16     %r8122 <- 0[%r8121]
	cast.64     %r8123 <- (16) %r8122
	muls.64     %r8124 <- %r8123, $16
	add.64*     %r8125 <- %r8111, %r8124
	store.32    %r8108 -> 8[%r8125]
	add.32      %r8127 <- %r8106(nvars), $-1
	phisrc.32   %phi2948(nvars) <- %r8127
	br          .L1907

.L1906:
	ret


removevars:
.L1908:
	<entry-point>
	load.64*    %r8129(fs) <- 48[%arg1]
	br          .L1912

.L1912:
	load.8      %r8131 <- 74[%r8129(fs)]
	cast.32     %r8132 <- (8) %r8131
	setgt.32    %r8134 <- %r8132, %arg2
	cbr         %r8134, .L1909, .L1911

.L1909:
	load.32     %r8136 <- 48[%r8129(fs)]
	load.64*    %r8138 <- 0[%r8129(fs)]
	load.64*    %r8139 <- 48[%r8138]
	add.64*     %r8141 <- %r8129(fs), $196
	add.8       %r8144 <- %r8131, $-1
	store.8     %r8144 -> 74[%r8129(fs)]
	cast.64     %r8145 <- (8) %r8144
	muls.64     %r8146 <- %r8145, $2
	add.64*     %r8147 <- %r8141, %r8146
	load.16     %r8148 <- 0[%r8147]
	cast.64     %r8149 <- (16) %r8148
	muls.64     %r8150 <- %r8149, $16
	add.64*     %r8151 <- %r8139, %r8150
	store.32    %r8136 -> 12[%r8151]
	br          .L1912

.L1911:
	ret


indexupvalue:
.L1913:
	<entry-point>
	load.64*    %r8153 <- 0[%arg1]
	load.32     %r8155(oldsize) <- 72[%r8153]
	phisrc.32   %phi2999(oldsize) <- %r8155(oldsize)
	phisrc.32   %phi3006(i) <- $0
	phisrc.32   %phi3008(oldsize) <- %r8155(oldsize)
	phisrc.32   %phi3013(oldsize) <- %r8155(oldsize)
	br          .L1917

.L1917:
	phi.32      %r8156(i) <- %phi3006(i), %phi3007(i)
	load.8      %r8158 <- 112[%r8153]
	cast.32     %r8159 <- (8) %r8158
	setlt.32    %r8160 <- %r8156(i), %r8159
	phisrc.8    %phi3014 <- %r8158
	cbr         %r8160, .L1914, .L1916

.L1914:
	add.64*     %r8162 <- %arg1, $75
	scast.64    %r8164 <- (32) %r8156(i)
	muls.64     %r8165 <- %r8164, $2
	add.64*     %r8166 <- %r8162, %r8165
	load.8      %r8167 <- 0[%r8166]
	cast.32     %r8168 <- (8) %r8167
	load.32     %r8170 <- 0[%arg3]
	seteq.32    %r8172 <- %r8168, %r8170
	cbr         %r8172, .L1920, .L1915

.L1920:
	load.8      %r8179 <- 1[%r8166]
	cast.32     %r8180 <- (8) %r8179
	load.32     %r8182 <- 8[%arg3]
	seteq.32    %r8183 <- %r8180, %r8182
	cbr         %r8183, .L1918, .L1915

.L1918:
	phisrc.32   %phi2956(return) <- %r8156(i)
	br          .L1921

.L1915:
	add.32      %r8187 <- %r8156(i), $1
	phisrc.32   %phi3007(i) <- %r8187
	br          .L1917

.L1916:
	add.32      %r8191 <- %r8159, $1
	setgt.32    %r8192 <- %r8191, $60
	phisrc.8    %phi3009 <- %r8158
	cbr         %r8192, .L1922, .L1923

.L1922:
	symaddr.64* %r8194 <- <anon symbol:0x1872d50>
	push.64*    %arg1
	push.32     $60
	push.64*    %r8194
	call        errorlimit
	br          .L1923

.L1923:
	load.8      %r8196 <- 112[%r8153]
	cast.32     %r8197 <- (8) %r8196
	add.32      %r8198 <- %r8197, $1
	load.32     %r8200 <- 72[%r8153]
	setgt.32    %r8201 <- %r8198, %r8200
	phisrc.8    %phi3011 <- %r8196
	phisrc.32   %phi3012 <- %r8200
	cbr         %r8201, .L1924, .L1929

.L1924:
	load.64*    %r8203 <- 32[%arg1]
	load.64*    %r8205 <- 56[%r8153]
	cast.64*    %r8206 <- (64) %r8205
	add.64*     %r8208 <- %r8153, $72
	symaddr.64* %r8209 <- <anon symbol:0x1873cb8>
	push.64*    %r8203
	push.64*    %r8206
	push.64*    %r8208
	push.64     $8
	push.32     $0x7ffffffd
	push.64*    %r8209
	call.64*    %r8210 <- luaM_growaux_
	ptrcast.64* %r8211 <- (64) %r8210
	store.64*   %r8211 -> 56[%r8153]
	br          .L1929

.L1929:
	phi.32      %r8213(oldsize) <- %phi2999(oldsize), %phi3000(oldsize)
	load.32     %r8215 <- 72[%r8153]
	setlt.32    %r8216 <- %r8213(oldsize), %r8215
	cbr         %r8216, .L1926, .L1928

.L1926:
	load.64*    %r8218 <- 56[%r8153]
	add.32      %r8220 <- %r8213(oldsize), $1
	scast.64    %r8221 <- (32) %r8213(oldsize)
	muls.64     %r8222 <- %r8221, $8
	add.64*     %r8223 <- %r8218, %r8222
	store.64*   $0 -> 0[%r8223]
	phisrc.32   %phi3000(oldsize) <- %r8220
	br          .L1929

.L1928:
	load.64*    %r8226 <- 56[%r8153]
	load.8      %r8228 <- 112[%r8153]
	cast.64     %r8229 <- (8) %r8228
	muls.64     %r8230 <- %r8229, $8
	add.64*     %r8231 <- %r8226, %r8230
	store.64*   %arg2 -> 0[%r8231]
	ptrcast.64* %r8233 <- (64) %arg2
	load.8      %r8234 <- 9[%r8233]
	cast.32     %r8235 <- (8) %r8234
	and.32      %r8236 <- %r8235, $3
	cbr         %r8236, .L1932, .L1931

.L1932:
	ptrcast.64* %r8238 <- (64) %r8153
	load.8      %r8239 <- 9[%r8238]
	cast.32     %r8240 <- (8) %r8239
	and.32      %r8241 <- %r8240, $4
	cbr         %r8241, .L1930, .L1931

.L1930:
	load.64*    %r8243 <- 32[%arg1]
	push.64*    %r8243
	push.64*    %r8238
	push.64*    %r8233
	call        luaC_barrierf
	br          .L1931

.L1931:
	load.32     %r8249 <- 0[%arg3]
	scast.8     %r8250 <- (32) %r8249
	add.64*     %r8252 <- %arg1, $75
	load.8      %r8254 <- 112[%r8153]
	cast.64     %r8255 <- (8) %r8254
	muls.64     %r8256 <- %r8255, $2
	add.64*     %r8257 <- %r8252, %r8256
	store.8     %r8250 -> 0[%r8257]
	load.32     %r8259 <- 8[%arg3]
	scast.8     %r8260 <- (32) %r8259
	add.64*     %r8262 <- %arg1, $75
	load.8      %r8264 <- 112[%r8153]
	cast.64     %r8265 <- (8) %r8264
	muls.64     %r8266 <- %r8265, $2
	add.64*     %r8267 <- %r8262, %r8266
	store.8     %r8260 -> 1[%r8267]
	load.8      %r8269 <- 112[%r8153]
	add.8       %r8270 <- %r8269, $1
	store.8     %r8270 -> 112[%r8153]
	cast.32     %r8271 <- (8) %r8269
	phisrc.32   %phi2957(return) <- %r8271
	br          .L1921

.L1921:
	phi.32      %r8185 <- %phi2956(return), %phi2957(return)
	ret.32      %r8185


searchvar:
.L1933:
	<entry-point>
	load.8      %r8273 <- 74[%arg1]
	cast.32     %r8274 <- (8) %r8273
	add.32      %r8275(i) <- %r8274, $-1
	phisrc.32   %phi3022(i) <- %r8275(i)
	br          .L1937

.L1937:
	phi.32      %r8276(i) <- %phi3022(i), %phi3023(i)
	setge.32    %r8277 <- %r8276(i), $0
	cbr         %r8277, .L1934, .L1936

.L1934:
	load.64*    %r8280 <- 0[%arg1]
	load.64*    %r8281 <- 48[%r8280]
	add.64*     %r8283 <- %arg1, $196
	scast.64    %r8285 <- (32) %r8276(i)
	muls.64     %r8286 <- %r8285, $2
	add.64*     %r8287 <- %r8283, %r8286
	load.16     %r8288 <- 0[%r8287]
	cast.64     %r8289 <- (16) %r8288
	muls.64     %r8290 <- %r8289, $16
	add.64*     %r8291 <- %r8281, %r8290
	load.64*    %r8292 <- 0[%r8291]
	seteq.32    %r8293 <- %arg2, %r8292
	cbr         %r8293, .L1938, .L1935

.L1938:
	phisrc.32   %phi3015(return) <- %r8276(i)
	br          .L1940

.L1935:
	add.32      %r8297 <- %r8276(i), $-1
	phisrc.32   %phi3023(i) <- %r8297
	br          .L1937

.L1936:
	phisrc.32   %phi3016(return) <- $0xffffffff
	br          .L1940

.L1940:
	phi.32      %r8295 <- %phi3015(return), %phi3016(return)
	ret.32      %r8295


markupval:
.L1941:
	<entry-point>
	load.64*    %r8299(bl) <- 40[%arg1]
	phisrc.64*  %phi3030(bl) <- %r8299(bl)
	br          .L1945

.L1945:
	phi.64*     %r8300(bl) <- %phi3030(bl), %phi3031(bl)
	cbr         %r8300(bl), .L1946, .L1948

.L1946:
	load.8      %r8302 <- 12[%r8300(bl)]
	cast.32     %r8303 <- (8) %r8302
	setgt.32    %r8305 <- %r8303, %arg2
	cbr         %r8305, .L1942, .L1944

.L1942:
	load.64*    %r8307 <- 0[%r8300(bl)]
	phisrc.64*  %phi3031(bl) <- %r8307
	br          .L1945

.L1944:
	cbr         %r8300(bl), .L1947, .L1948

.L1947:
	store.8     $1 -> 13[%r8300(bl)]
	br          .L1948

.L1948:
	ret


singlevaraux:
.L1949:
	<entry-point>
	cbr         %arg1, .L1951, .L1950

.L1950:
	push.64*    %arg3
	push.32     $8
	push.32     $255
	call        init_exp
	phisrc.32   %phi3032(return) <- $8
	br          .L1952

.L1951:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r8316 <- searchvar
	setge.32    %r8318 <- %r8316, $0
	cbr         %r8318, .L1954, .L1955

.L1954:
	push.64*    %arg3
	push.32     $6
	push.32     %r8316
	call        init_exp
	cbr         %arg4, .L1957, .L1956

.L1956:
	push.64*    %arg1
	push.32     %r8316
	call        markupval
	br          .L1957

.L1957:
	phisrc.32   %phi3033(return) <- $6
	br          .L1952

.L1955:
	load.64*    %r8325 <- 16[%arg1]
	push.64*    %r8325
	push.64*    %arg2
	push.64*    %arg3
	push.32     $0
	call.32     %r8328 <- singlevaraux
	seteq.32    %r8329 <- %r8328, $8
	cbr         %r8329, .L1959, .L1960

.L1959:
	phisrc.32   %phi3034(return) <- $8
	br          .L1952

.L1960:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.32     %r8333 <- indexupvalue
	store.32    %r8333 -> 8[%arg3]
	store.32    $7 -> 0[%arg3]
	phisrc.32   %phi3035(return) <- $7
	br          .L1952

.L1952:
	phi.32      %r8313 <- %phi3032(return), %phi3033(return), %phi3034(return), %phi3035(return)
	ret.32      %r8313


singlevar:
.L1961:
	<entry-point>
	push.64*    %arg1
	call.64*    %r8337 <- str_checkname
	load.64*    %r8339 <- 48[%arg1]
	push.64*    %r8339
	push.64*    %r8337
	push.64*    %arg2
	push.32     $1
	call.32     %r8343 <- singlevaraux
	seteq.32    %r8344 <- %r8343, $8
	cbr         %r8344, .L1962, .L1963

.L1962:
	push.64*    %r8339
	push.64*    %r8337
	call.32     %r8347 <- luaK_stringK
	store.32    %r8347 -> 8[%arg2]
	br          .L1963

.L1963:
	ret


adjust_assign:
.L1964:
	<entry-point>
	load.64*    %r8350(fs) <- 48[%arg1]
	sub.32      %r8353(extra) <- %arg2, %arg3
	load.32     %r8355 <- 0[%arg4]
	seteq.32    %r8357 <- %r8355, $13
	cbr         %r8357, .L1965, .L1967

.L1967:
	seteq.32    %r8361 <- %r8355, $14
	cbr         %r8361, .L1965, .L1966

.L1965:
	add.32      %r8363 <- %r8353(extra), $1
	setlt.32    %r8365 <- %r8363, $0
	select.32   %r8368 <- %r8365, $0, %r8363
	push.64*    %r8350(fs)
	push.64*    %arg4
	push.32     %r8368
	call        luaK_setreturns
	setgt.32    %r8370 <- %r8368, $1
	cbr         %r8370, .L1970, .L1972

.L1970:
	add.32      %r8373 <- %r8368, $-1
	push.64*    %r8350(fs)
	push.32     %r8373
	call        luaK_reserveregs
	br          .L1972

.L1966:
	cbr         %r8355, .L1973, .L1974

.L1973:
	push.64*    %r8350(fs)
	push.64*    %arg4
	call        luaK_exp2nextreg
	br          .L1974

.L1974:
	setgt.32    %r8381 <- %r8353(extra), $0
	cbr         %r8381, .L1975, .L1972

.L1975:
	load.32     %r8383 <- 60[%r8350(fs)]
	push.64*    %r8350(fs)
	push.32     %r8353(extra)
	call        luaK_reserveregs
	push.64*    %r8350(fs)
	push.32     %r8383
	push.32     %r8353(extra)
	call        luaK_nil
	br          .L1972

.L1972:
	ret


enterlevel:
.L1977:
	<entry-point>
	load.64*    %r8390 <- 56[%arg1]
	load.16     %r8391 <- 96[%r8390]
	add.16      %r8392 <- %r8391, $1
	store.16    %r8392 -> 96[%r8390]
	cast.32     %r8393 <- (16) %r8392
	setgt.32    %r8394 <- %r8393, $200
	cbr         %r8394, .L1978, .L1979

.L1978:
	symaddr.64* %r8396 <- <anon symbol:0x18780b0>
	push.64*    %arg1
	push.64*    %r8396
	push.32     $0
	call        luaX_lexerror
	br          .L1979

.L1979:
	ret


enterblock:
.L1980:
	<entry-point>
	store.32    $0xffffffff -> 8[%arg2]
	store.8     %arg3 -> 14[%arg2]
	load.8      %r8401 <- 74[%arg1]
	store.8     %r8401 -> 12[%arg2]
	store.8     $0 -> 13[%arg2]
	load.64*    %r8405 <- 40[%arg1]
	store.64*   %r8405 -> 0[%arg2]
	store.64*   %arg2 -> 40[%arg1]
	ret


leaveblock:
.L1982:
	<entry-point>
	load.64*    %r8410 <- 40[%arg1]
	load.64*    %r8412 <- 0[%r8410]
	store.64*   %r8412 -> 40[%arg1]
	load.64*    %r8415 <- 24[%arg1]
	load.8      %r8417 <- 12[%r8410]
	cast.32     %r8418 <- (8) %r8417
	push.64*    %r8415
	push.32     %r8418
	call        removevars
	load.8      %r8420 <- 13[%r8410]
	cbr         %r8420, .L1983, .L1984

.L1983:
	load.8      %r8423 <- 12[%r8410]
	cast.32     %r8424 <- (8) %r8423
	push.64*    %arg1
	push.32     $35
	push.32     %r8424
	push.32     $0
	push.32     $0
	call.32     %r8425 <- luaK_codeABC
	br          .L1984

.L1984:
	load.8      %r8427 <- 74[%arg1]
	cast.32     %r8428 <- (8) %r8427
	store.32    %r8428 -> 60[%arg1]
	load.32     %r8432 <- 8[%r8410]
	push.64*    %arg1
	push.32     %r8432
	call        luaK_patchtohere
	ret


pushclosure:
.L1986:
	<entry-point>
	load.64*    %r8434 <- 48[%arg1]
	load.64*    %r8436 <- 0[%r8434]
	load.32     %r8438(oldsize) <- 88[%r8436]
	load.32     %r8440 <- 68[%r8434]
	add.32      %r8441 <- %r8440, $1
	setgt.32    %r8444 <- %r8441, %r8438(oldsize)
	phisrc.32   %phi3098(oldsize) <- %r8438(oldsize)
	phisrc.32   %phi3105 <- %r8440
	phisrc.32   %phi3106 <- %r8440
	phisrc.32   %phi3107(oldsize) <- %r8438(oldsize)
	cbr         %r8444, .L1987, .L1992

.L1987:
	load.64*    %r8446 <- 56[%arg1]
	load.64*    %r8448 <- 32[%r8436]
	cast.64*    %r8449 <- (64) %r8448
	add.64*     %r8451 <- %r8436, $88
	symaddr.64* %r8452 <- <anon symbol:0x1883028>
	push.64*    %r8446
	push.64*    %r8449
	push.64*    %r8451
	push.64     $8
	push.32     $0x3ffff
	push.64*    %r8452
	call.64*    %r8453 <- luaM_growaux_
	ptrcast.64* %r8454 <- (64) %r8453
	store.64*   %r8454 -> 32[%r8436]
	br          .L1992

.L1992:
	phi.32      %r8456(oldsize) <- %phi3098(oldsize), %phi3099(oldsize)
	load.32     %r8458 <- 88[%r8436]
	setlt.32    %r8459 <- %r8456(oldsize), %r8458
	cbr         %r8459, .L1989, .L1991

.L1989:
	load.64*    %r8461 <- 32[%r8436]
	add.32      %r8463 <- %r8456(oldsize), $1
	scast.64    %r8464 <- (32) %r8456(oldsize)
	muls.64     %r8465 <- %r8464, $8
	add.64*     %r8466 <- %r8461, %r8465
	store.64*   $0 -> 0[%r8466]
	phisrc.32   %phi3099(oldsize) <- %r8463
	br          .L1992

.L1991:
	load.64*    %r8468 <- 0[%arg2]
	load.64*    %r8470 <- 32[%r8436]
	load.32     %r8472 <- 68[%r8434]
	add.32      %r8473 <- %r8472, $1
	store.32    %r8473 -> 68[%r8434]
	scast.64    %r8474 <- (32) %r8472
	muls.64     %r8475 <- %r8474, $8
	add.64*     %r8476 <- %r8470, %r8475
	store.64*   %r8468 -> 0[%r8476]
	load.64*    %r8478 <- 0[%arg2]
	ptrcast.64* %r8479 <- (64) %r8478
	load.8      %r8480 <- 9[%r8479]
	cast.32     %r8481 <- (8) %r8480
	and.32      %r8482 <- %r8481, $3
	cbr         %r8482, .L1995, .L1994

.L1995:
	ptrcast.64* %r8484 <- (64) %r8436
	load.8      %r8485 <- 9[%r8484]
	cast.32     %r8486 <- (8) %r8485
	and.32      %r8487 <- %r8486, $4
	cbr         %r8487, .L1993, .L1994

.L1993:
	load.64*    %r8489 <- 56[%arg1]
	ptrcast.64* %r8494 <- (64) %r8478
	push.64*    %r8489
	push.64*    %r8484
	push.64*    %r8494
	call        luaC_barrierf
	br          .L1994

.L1994:
	load.32     %r8498 <- 68[%r8434]
	add.32      %r8499 <- %r8498, $-1
	push.64*    %r8434
	push.32     $36
	push.32     $0
	push.32     %r8499
	call.32     %r8501 <- luaK_codeABx
	push.64*    %arg3
	push.32     $11
	push.32     %r8501
	call        init_exp
	phisrc.32   %phi3102(i) <- $0
	br          .L1999

.L1999:
	phi.32      %r8502(i) <- %phi3102(i), %phi3103(i)
	load.64*    %r8504 <- 0[%arg2]
	load.8      %r8505 <- 112[%r8504]
	cast.32     %r8506 <- (8) %r8505
	setlt.32    %r8507 <- %r8502(i), %r8506
	cbr         %r8507, .L1996, .L1998

.L1996:
	add.64*     %r8509 <- %arg2, $75
	scast.64    %r8511 <- (32) %r8502(i)
	muls.64     %r8512 <- %r8511, $2
	add.64*     %r8513 <- %r8509, %r8512
	load.8      %r8514 <- 0[%r8513]
	cast.32     %r8515 <- (8) %r8514
	seteq.32    %r8516 <- %r8515, $6
	select.32   %r8517 <- %r8516, $0, $4
	load.8      %r8527 <- 1[%r8513]
	cast.32     %r8528 <- (8) %r8527
	push.64*    %r8434
	push.32     %r8517
	push.32     $0
	push.32     %r8528
	push.32     $0
	call.32     %r8529 <- luaK_codeABC
	add.32      %r8531 <- %r8502(i), $1
	phisrc.32   %phi3103(i) <- %r8531
	br          .L1999

.L1998:
	ret


open_func:
.L2000:
	<entry-point>
	load.64*    %r8533 <- 56[%arg1]
	push.64*    %r8533
	call.64*    %r8535 <- luaF_newproto
	store.64*   %r8535 -> 0[%arg2]
	load.64*    %r8539 <- 48[%arg1]
	store.64*   %r8539 -> 16[%arg2]
	store.64*   %arg1 -> 24[%arg2]
	store.64*   %r8533 -> 32[%arg2]
	store.64*   %arg2 -> 48[%arg1]
	store.32    $0 -> 48[%arg2]
	store.32    $0xffffffff -> 52[%arg2]
	store.32    $0xffffffff -> 56[%arg2]
	store.32    $0 -> 60[%arg2]
	store.32    $0 -> 64[%arg2]
	store.32    $0 -> 68[%arg2]
	store.16    $0 -> 72[%arg2]
	store.8     $0 -> 74[%arg2]
	store.64*   $0 -> 40[%arg2]
	load.64*    %r8557 <- 80[%arg1]
	store.64*   %r8557 -> 64[%r8535]
	store.8     $2 -> 115[%r8535]
	push.64*    %r8533
	push.32     $0
	push.32     $0
	call.64*    %r8561 <- luaH_new
	store.64*   %r8561 -> 8[%arg2]
	load.64*    %r8564 <- 16[%r8533]
	ptrcast.64* %r8567 <- (64) %r8561
	store.64*   %r8567 -> 0[%r8564]
	store.32    $5 -> 8[%r8564]
	load.64*    %r8571 <- 56[%r8533]
	ptrcast.64* %r8572 <- (64) %r8571
	load.64*    %r8574 <- 16[%r8533]
	ptrcast.64* %r8575 <- (64) %r8574
	sub.64      %r8576 <- %r8572, %r8575
	setle.32    %r8577 <- %r8576, $16
	cbr         %r8577, .L2001, .L2003

.L2001:
	push.64*    %r8533
	push.32     $1
	call        luaD_growstack
	br          .L2003

.L2003:
	load.64*    %r8580 <- 16[%r8533]
	add.64*     %r8581 <- %r8580, $16
	store.64*   %r8581 -> 16[%r8533]
	ptrcast.64* %r8585 <- (64) %r8535
	store.64*   %r8585 -> 16[%r8580]
	store.32    $9 -> 24[%r8580]
	load.64*    %r8589 <- 56[%r8533]
	ptrcast.64* %r8590 <- (64) %r8589
	load.64*    %r8592 <- 16[%r8533]
	ptrcast.64* %r8593 <- (64) %r8592
	sub.64      %r8594 <- %r8590, %r8593
	setle.32    %r8595 <- %r8594, $16
	cbr         %r8595, .L2004, .L2006

.L2004:
	push.64*    %r8533
	push.32     $1
	call        luaD_growstack
	br          .L2006

.L2006:
	load.64*    %r8598 <- 16[%r8533]
	add.64*     %r8599 <- %r8598, $16
	store.64*   %r8599 -> 16[%r8533]
	ret


close_func:
.L2008:
	<entry-point>
	load.64*    %r8601(L) <- 56[%arg1]
	load.64*    %r8603 <- 48[%arg1]
	load.64*    %r8605(f) <- 0[%r8603]
	push.64*    %arg1
	push.32     $0
	call        removevars
	push.64*    %r8603
	push.32     $0
	push.32     $0
	call        luaK_ret
	load.32     %r8609 <- 48[%r8603]
	add.32      %r8610 <- %r8609, $1
	scast.64    %r8611 <- (32) %r8610
	setbe.32    %r8612 <- %r8611, $0x3fffffffffffffff
	cbr         %r8612, .L2009, .L2010

.L2009:
	load.64*    %r8615 <- 24[%r8605(f)]
	cast.64*    %r8616 <- (64) %r8615
	load.32     %r8618 <- 80[%r8605(f)]
	scast.64    %r8619 <- (32) %r8618
	mulu.64     %r8620 <- %r8619, $4
	scast.64    %r8623 <- (32) %r8609
	mulu.64     %r8624 <- %r8623, $4
	push.64*    %r8601(L)
	push.64*    %r8616
	push.64     %r8620
	push.64     %r8624
	call.64*    %r8625 <- luaM_realloc_
	phisrc.64*  %phi3115 <- %r8625
	br          .L2011

.L2010:
	push.64*    %r8601(L)
	call.64*    %r8627 <- luaM_toobig
	cast.64*    %r8628 <- (64) %r8627
	phisrc.64*  %phi3116 <- %r8628
	br          .L2011

.L2011:
	phi.64*     %r8629 <- %phi3115, %phi3116
	ptrcast.64* %r8630 <- (64) %r8629
	store.64*   %r8630 -> 24[%r8605(f)]
	load.32     %r8633 <- 48[%r8603]
	store.32    %r8633 -> 80[%r8605(f)]
	load.32     %r8636 <- 48[%r8603]
	add.32      %r8637 <- %r8636, $1
	scast.64    %r8638 <- (32) %r8637
	setbe.32    %r8639 <- %r8638, $0x3fffffffffffffff
	cbr         %r8639, .L2012, .L2013

.L2012:
	load.64*    %r8642 <- 40[%r8605(f)]
	cast.64*    %r8643 <- (64) %r8642
	load.32     %r8645 <- 84[%r8605(f)]
	scast.64    %r8646 <- (32) %r8645
	mulu.64     %r8647 <- %r8646, $4
	scast.64    %r8650 <- (32) %r8636
	mulu.64     %r8651 <- %r8650, $4
	push.64*    %r8601(L)
	push.64*    %r8643
	push.64     %r8647
	push.64     %r8651
	call.64*    %r8652 <- luaM_realloc_
	phisrc.64*  %phi3117 <- %r8652
	br          .L2014

.L2013:
	push.64*    %r8601(L)
	call.64*    %r8654 <- luaM_toobig
	cast.64*    %r8655 <- (64) %r8654
	phisrc.64*  %phi3118 <- %r8655
	br          .L2014

.L2014:
	phi.64*     %r8656 <- %phi3117, %phi3118
	ptrcast.64* %r8657 <- (64) %r8656
	store.64*   %r8657 -> 40[%r8605(f)]
	load.32     %r8660 <- 48[%r8603]
	store.32    %r8660 -> 84[%r8605(f)]
	load.32     %r8663 <- 64[%r8603]
	add.32      %r8664 <- %r8663, $1
	scast.64    %r8665 <- (32) %r8664
	setbe.32    %r8666 <- %r8665, $0xfffffffffffffff
	cbr         %r8666, .L2015, .L2016

.L2015:
	load.64*    %r8669 <- 16[%r8605(f)]
	cast.64*    %r8670 <- (64) %r8669
	load.32     %r8672 <- 76[%r8605(f)]
	scast.64    %r8673 <- (32) %r8672
	mulu.64     %r8674 <- %r8673, $16
	scast.64    %r8677 <- (32) %r8663
	mulu.64     %r8678 <- %r8677, $16
	push.64*    %r8601(L)
	push.64*    %r8670
	push.64     %r8674
	push.64     %r8678
	call.64*    %r8679 <- luaM_realloc_
	phisrc.64*  %phi3119 <- %r8679
	br          .L2017

.L2016:
	push.64*    %r8601(L)
	call.64*    %r8681 <- luaM_toobig
	cast.64*    %r8682 <- (64) %r8681
	phisrc.64*  %phi3120 <- %r8682
	br          .L2017

.L2017:
	phi.64*     %r8683 <- %phi3119, %phi3120
	ptrcast.64* %r8684 <- (64) %r8683
	store.64*   %r8684 -> 16[%r8605(f)]
	load.32     %r8687 <- 64[%r8603]
	store.32    %r8687 -> 76[%r8605(f)]
	load.32     %r8690 <- 68[%r8603]
	add.32      %r8691 <- %r8690, $1
	scast.64    %r8692 <- (32) %r8691
	setbe.32    %r8693 <- %r8692, $0x1fffffffffffffff
	cbr         %r8693, .L2018, .L2019

.L2018:
	load.64*    %r8696 <- 32[%r8605(f)]
	cast.64*    %r8697 <- (64) %r8696
	load.32     %r8699 <- 88[%r8605(f)]
	scast.64    %r8700 <- (32) %r8699
	mulu.64     %r8701 <- %r8700, $8
	scast.64    %r8704 <- (32) %r8690
	mulu.64     %r8705 <- %r8704, $8
	push.64*    %r8601(L)
	push.64*    %r8697
	push.64     %r8701
	push.64     %r8705
	call.64*    %r8706 <- luaM_realloc_
	phisrc.64*  %phi3121 <- %r8706
	br          .L2020

.L2019:
	push.64*    %r8601(L)
	call.64*    %r8708 <- luaM_toobig
	cast.64*    %r8709 <- (64) %r8708
	phisrc.64*  %phi3122 <- %r8709
	br          .L2020

.L2020:
	phi.64*     %r8710 <- %phi3121, %phi3122
	ptrcast.64* %r8711 <- (64) %r8710
	store.64*   %r8711 -> 32[%r8605(f)]
	load.32     %r8714 <- 68[%r8603]
	store.32    %r8714 -> 88[%r8605(f)]
	load.16     %r8717 <- 72[%r8603]
	scast.32    %r8718 <- (16) %r8717
	add.32      %r8719 <- %r8718, $1
	scast.64    %r8720 <- (32) %r8719
	setbe.32    %r8721 <- %r8720, $0xfffffffffffffff
	cbr         %r8721, .L2021, .L2022

.L2021:
	load.64*    %r8724 <- 48[%r8605(f)]
	cast.64*    %r8725 <- (64) %r8724
	load.32     %r8727 <- 92[%r8605(f)]
	scast.64    %r8728 <- (32) %r8727
	mulu.64     %r8729 <- %r8728, $16
	scast.64    %r8732 <- (16) %r8717
	mulu.64     %r8733 <- %r8732, $16
	push.64*    %r8601(L)
	push.64*    %r8725
	push.64     %r8729
	push.64     %r8733
	call.64*    %r8734 <- luaM_realloc_
	phisrc.64*  %phi3123 <- %r8734
	br          .L2023

.L2022:
	push.64*    %r8601(L)
	call.64*    %r8736 <- luaM_toobig
	cast.64*    %r8737 <- (64) %r8736
	phisrc.64*  %phi3124 <- %r8737
	br          .L2023

.L2023:
	phi.64*     %r8738 <- %phi3123, %phi3124
	ptrcast.64* %r8739 <- (64) %r8738
	store.64*   %r8739 -> 48[%r8605(f)]
	load.16     %r8742 <- 72[%r8603]
	scast.32    %r8743 <- (16) %r8742
	store.32    %r8743 -> 92[%r8605(f)]
	load.8      %r8746 <- 112[%r8605(f)]
	cast.32     %r8747 <- (8) %r8746
	add.32      %r8748 <- %r8747, $1
	scast.64    %r8749 <- (32) %r8748
	setbe.32    %r8750 <- %r8749, $0x1fffffffffffffff
	cbr         %r8750, .L2024, .L2025

.L2024:
	load.64*    %r8753 <- 56[%r8605(f)]
	cast.64*    %r8754 <- (64) %r8753
	load.32     %r8756 <- 72[%r8605(f)]
	scast.64    %r8757 <- (32) %r8756
	mulu.64     %r8758 <- %r8757, $8
	cast.64     %r8761 <- (8) %r8746
	mulu.64     %r8762 <- %r8761, $8
	push.64*    %r8601(L)
	push.64*    %r8754
	push.64     %r8758
	push.64     %r8762
	call.64*    %r8763 <- luaM_realloc_
	phisrc.64*  %phi3125 <- %r8763
	br          .L2026

.L2025:
	push.64*    %r8601(L)
	call.64*    %r8765 <- luaM_toobig
	cast.64*    %r8766 <- (64) %r8765
	phisrc.64*  %phi3126 <- %r8766
	br          .L2026

.L2026:
	phi.64*     %r8767 <- %phi3125, %phi3126
	ptrcast.64* %r8768 <- (64) %r8767
	store.64*   %r8768 -> 56[%r8605(f)]
	load.8      %r8771 <- 112[%r8605(f)]
	cast.32     %r8772 <- (8) %r8771
	store.32    %r8772 -> 72[%r8605(f)]
	load.64*    %r8775 <- 16[%r8603]
	store.64*   %r8775 -> 48[%arg1]
	cbr         %r8603, .L2027, .L2028

.L2027:
	push.64*    %arg1
	call        anchor_token
	br          .L2028

.L2028:
	load.64*    %r8780 <- 16[%r8601(L)]
	cast.64     %r8781 <- (64) %r8780
	add.64      %r8782 <- %r8781, $-32
	ptrcast.64* %r8783 <- (64) %r8782
	store.64*   %r8783 -> 16[%r8601(L)]
	ret


luaY_parser:
.L2030:
	<entry-point>
	store.64*   %arg3 -> 72[lexstate]
	symaddr.64* %r8786 <- lexstate
	push.64*    %arg4
	call.64     %r8791 <- strlen
	push.64*    %arg1
	push.64*    %arg4
	push.64     %r8791
	call.64*    %r8792 <- luaS_newlstr
	push.64*    %arg1
	push.64*    %r8786
	push.64*    %arg2
	push.64*    %r8792
	call        luaX_setinput
	symaddr.64* %r8794 <- funcstate
	push.64*    %r8786
	push.64*    %r8794
	call        open_func
	load.64*    %r8795 <- 0[funcstate]
	store.8     $2 -> 114[%r8795]
	push.64*    %r8786
	call        luaX_next
	push.64*    %r8786
	call        chunk
	push.64*    %r8786
	push.32     $287
	call        check
	push.64*    %r8786
	call        close_func
	load.64*    %r8800 <- 0[funcstate]
	ret.64*     %r8800


field:
.L2032:
	<entry-point>
	load.64*    %r8803 <- 48[%arg1]
	push.64*    %r8803
	push.64*    %arg2
	call.32     %r8806 <- luaK_exp2anyreg
	push.64*    %arg1
	call        luaX_next
	symaddr.64* %r8809 <- key
	push.64*    %arg1
	push.64*    %r8809
	call        checkname
	push.64*    %r8803
	push.64*    %arg2
	push.64*    %r8809
	call        luaK_indexed
	ret


yindex:
.L2034:
	<entry-point>
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	push.64*    %arg2
	call        expr
	load.64*    %r8817 <- 48[%arg1]
	push.64*    %r8817
	push.64*    %arg2
	call        luaK_exp2val
	push.64*    %arg1
	push.32     $93
	call        checknext
	ret


recfield:
.L2036:
	<entry-point>
	load.64*    %r8821(fs) <- 48[%arg1]
	load.32     %r8824(reg) <- 60[%r8821(fs)]
	load.32     %r8826 <- 16[%arg1]
	seteq.32    %r8827 <- %r8826, $285
	cbr         %r8827, .L2037, .L2038

.L2037:
	load.32     %r8829 <- 32[%arg2]
	setgt.32    %r8830 <- %r8829, $0x7ffffffd
	cbr         %r8830, .L2039, .L2040

.L2039:
	symaddr.64* %r8832 <- <anon symbol:0x188e868>
	push.64*    %r8821(fs)
	push.32     $0x7ffffffd
	push.64*    %r8832
	call        errorlimit
	br          .L2040

.L2040:
	symaddr.64* %r8834 <- key
	push.64*    %arg1
	push.64*    %r8834
	call        checkname
	br          .L2041

.L2038:
	symaddr.64* %r8836 <- key
	push.64*    %arg1
	push.64*    %r8836
	call        yindex
	br          .L2041

.L2041:
	load.32     %r8838 <- 32[%arg2]
	add.32      %r8839 <- %r8838, $1
	store.32    %r8839 -> 32[%arg2]
	push.64*    %arg1
	push.32     $61
	call        checknext
	symaddr.64* %r8842 <- key
	push.64*    %r8821(fs)
	push.64*    %r8842
	call.32     %r8843 <- luaK_exp2RK
	symaddr.64* %r8845 <- val
	push.64*    %arg1
	push.64*    %r8845
	call        expr
	load.64*    %r8848 <- 24[%arg2]
	load.32     %r8849 <- 8[%r8848]
	push.64*    %r8821(fs)
	push.64*    %r8845
	call.32     %r8853 <- luaK_exp2RK
	push.64*    %r8821(fs)
	push.32     $9
	push.32     %r8849
	push.32     %r8843
	push.32     %r8853
	call.32     %r8854 <- luaK_codeABC
	store.32    %r8824(reg) -> 60[%r8821(fs)]
	ret


closelistfield:
.L2043:
	<entry-point>
	load.32     %r8858 <- 0[%arg2]
	cbr         %r8858, .L2045, .L2046

.L2045:
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_exp2nextreg
	store.32    $0 -> 0[%arg2]
	load.32     %r8866 <- 40[%arg2]
	seteq.32    %r8867 <- %r8866, $50
	cbr         %r8867, .L2047, .L2046

.L2047:
	load.64*    %r8870 <- 24[%arg2]
	load.32     %r8871 <- 8[%r8870]
	load.32     %r8873 <- 36[%arg2]
	push.64*    %arg1
	push.32     %r8871
	push.32     %r8873
	push.32     %r8866
	call        luaK_setlist
	store.32    $0 -> 40[%arg2]
	br          .L2046

.L2046:
	ret


lastlistfield:
.L2049:
	<entry-point>
	load.32     %r8878 <- 40[%arg2]
	phisrc.32   %phi3224 <- %r8878
	cbr         %r8878, .L2051, .L2052

.L2051:
	load.32     %r8881 <- 0[%arg2]
	seteq.32    %r8883 <- %r8881, $13
	cbr         %r8883, .L2053, .L2055

.L2055:
	seteq.32    %r8887 <- %r8881, $14
	cbr         %r8887, .L2053, .L2054

.L2053:
	push.64*    %arg1
	push.64*    %arg2
	push.32     $0xffffffff
	call        luaK_setreturns
	load.64*    %r8893 <- 24[%arg2]
	load.32     %r8894 <- 8[%r8893]
	load.32     %r8896 <- 36[%arg2]
	push.64*    %arg1
	push.32     %r8894
	push.32     %r8896
	push.32     $0xffffffff
	call        luaK_setlist
	load.32     %r8898 <- 36[%arg2]
	add.32      %r8899 <- %r8898, $-1
	store.32    %r8899 -> 36[%arg2]
	br          .L2052

.L2054:
	cbr         %r8881, .L2057, .L2058

.L2057:
	push.64*    %arg1
	push.64*    %arg2
	call        luaK_exp2nextreg
	br          .L2058

.L2058:
	load.64*    %r8909 <- 24[%arg2]
	load.32     %r8910 <- 8[%r8909]
	load.32     %r8912 <- 36[%arg2]
	load.32     %r8914 <- 40[%arg2]
	push.64*    %arg1
	push.32     %r8910
	push.32     %r8912
	push.32     %r8914
	call        luaK_setlist
	br          .L2052

.L2052:
	ret


listfield:
.L2059:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        expr
	load.32     %r8919 <- 36[%arg2]
	setgt.32    %r8920 <- %r8919, $0x7ffffffd
	phisrc.32   %phi3227 <- %r8919
	phisrc.32   %phi3228 <- %r8919
	cbr         %r8920, .L2060, .L2061

.L2060:
	load.64*    %r8922 <- 48[%arg1]
	symaddr.64* %r8923 <- <anon symbol:0x189a490>
	push.64*    %r8922
	push.32     $0x7ffffffd
	push.64*    %r8923
	call        errorlimit
	br          .L2061

.L2061:
	load.32     %r8925 <- 36[%arg2]
	add.32      %r8926 <- %r8925, $1
	store.32    %r8926 -> 36[%arg2]
	load.32     %r8928 <- 40[%arg2]
	add.32      %r8929 <- %r8928, $1
	store.32    %r8929 -> 40[%arg2]
	ret


constructor:
.L2063:
	<entry-point>
	load.64*    %r8931 <- 48[%arg1]
	load.32     %r8933(line) <- 4[%arg1]
	push.64*    %r8931
	push.32     $10
	push.32     $0
	push.32     $0
	push.32     $0
	call.32     %r8935 <- luaK_codeABC
	store.32    $0 -> 40[cc]
	store.32    $0 -> 32[cc]
	store.32    $0 -> 36[cc]
	store.64*   %arg2 -> 24[cc]
	push.64*    %arg2
	push.32     $11
	push.32     %r8935
	call        init_exp
	symaddr.64* %r8939 <- cc
	push.64*    %r8939
	push.32     $0
	push.32     $0
	call        init_exp
	load.64*    %r8942 <- 48[%arg1]
	push.64*    %r8942
	push.64*    %arg2
	call        luaK_exp2nextreg
	push.64*    %arg1
	push.32     $123
	call        checknext
	br          .L2064

.L2064:
	load.32     %r8946 <- 16[%arg1]
	seteq.32    %r8947 <- %r8946, $125
	cbr         %r8947, .L2066, .L2068

.L2068:
	push.64*    %r8931
	push.64*    %r8939
	call        closelistfield
	load.32     %r8951 <- 16[%arg1]
	switch.32   %r8951, 91 -> .L2071, 285 -> .L2070, default -> .L2072

.L2070:
	push.64*    %arg1
	call        luaX_lookahead
	load.32     %r8954 <- 32[%arg1]
	setne.32    %r8955 <- %r8954, $61
	cbr         %r8955, .L2073, .L2074

.L2073:
	push.64*    %arg1
	push.64*    %r8939
	call        listfield
	br          .L2065

.L2074:
	push.64*    %arg1
	push.64*    %r8939
	call        recfield
	br          .L2065

.L2071:
	push.64*    %arg1
	push.64*    %r8939
	call        recfield
	br          .L2065

.L2072:
	push.64*    %arg1
	push.64*    %r8939
	call        listfield
	br          .L2065

.L2065:
	push.64*    %arg1
	push.32     $44
	call.32     %r8965 <- testnext
	cbr         %r8965, .L2064, .L2076

.L2076:
	push.64*    %arg1
	push.32     $59
	call.32     %r8967 <- testnext
	cbr         %r8967, .L2064, .L2066

.L2066:
	push.64*    %arg1
	push.32     $125
	push.32     $123
	push.32     %r8933(line)
	call        check_match
	push.64*    %r8931
	push.64*    %r8939
	call        lastlistfield
	load.64*    %r8973 <- 0[%r8931]
	load.64*    %r8974 <- 24[%r8973]
	scast.64    %r8976 <- (32) %r8935
	muls.64     %r8977 <- %r8976, $4
	add.64*     %r8978 <- %r8974, %r8977
	load.32     %r8979 <- 0[%r8978]
	and.32      %r8980 <- %r8979, $0x7fffff
	load.32     %r8981 <- 36[cc]
	push.32     %r8981
	call.32     %r8983 <- luaO_int2fb
	shl.32      %r8985 <- %r8983, $23
	and.32      %r8986 <- %r8985, $0xff800000
	or.32       %r8987 <- %r8980, %r8986
	load.64*    %r8989 <- 0[%r8931]
	load.64*    %r8990 <- 24[%r8989]
	add.64*     %r8994 <- %r8990, %r8977
	store.32    %r8987 -> 0[%r8994]
	load.64*    %r8996 <- 0[%r8931]
	load.64*    %r8997 <- 24[%r8996]
	add.64*     %r9001 <- %r8997, %r8977
	load.32     %r9002 <- 0[%r9001]
	and.32      %r9003 <- %r9002, $0xff803fff
	load.32     %r9004 <- 32[cc]
	push.32     %r9004
	call.32     %r9006 <- luaO_int2fb
	shl.32      %r9008 <- %r9006, $14
	and.32      %r9009 <- %r9008, $0x7fc000
	or.32       %r9010 <- %r9003, %r9009
	load.64*    %r9012 <- 0[%r8931]
	load.64*    %r9013 <- 24[%r9012]
	add.64*     %r9017 <- %r9013, %r8977
	store.32    %r9010 -> 0[%r9017]
	ret


parlist:
.L2078:
	<entry-point>
	load.64*    %r9019 <- 48[%arg1]
	load.64*    %r9021 <- 0[%r9019]
	store.8     $0 -> 114[%r9021]
	load.32     %r9024 <- 16[%arg1]
	setne.32    %r9025 <- %r9024, $41
	phisrc.32   %phi3266(nparams) <- $0
	phisrc.32   %phi3268(nparams) <- $0
	phisrc.32   %phi3270 <- %r9024
	cbr         %r9025, .L2081, .L2080

.L2081:
	load.32     %r9027 <- 16[%arg1]
	switch.32   %r9027, 279 -> .L2086, 285 -> .L2085, default -> .L2087

.L2085:
	push.64*    %arg1
	call.64*    %r9030 <- str_checkname
	phi.32      %r9031 <- %phi3268(nparams), %phi3269(nparams)
	add.32      %r9032 <- %r9031, $1
	push.64*    %arg1
	push.64*    %r9030
	push.32     %r9031
	call        new_localvar
	phisrc.32   %phi3267(nparams) <- %r9032
	phisrc.32   %phi3269(nparams) <- %r9032
	br          .L2082

.L2086:
	push.64*    %arg1
	call        luaX_next
	load.8      %r9035 <- 114[%r9021]
	cast.32     %r9036 <- (8) %r9035
	or.32       %r9037 <- %r9036, $2
	scast.8     %r9038 <- (32) %r9037
	store.8     %r9038 -> 114[%r9021]
	br          .L2082

.L2087:
	symaddr.64* %r9040 <- <anon symbol:0x189e148>
	push.64*    %arg1
	push.64*    %r9040
	call        luaX_syntaxerror
	br          .L2082

.L2082:
	load.8      %r9042 <- 114[%r9021]
	cbr         %r9042, .L2080, .L2088

.L2088:
	push.64*    %arg1
	push.32     $44
	call.32     %r9044 <- testnext
	cbr         %r9044, .L2081, .L2080

.L2080:
	phi.32      %r9046 <- %phi3266(nparams), %phi3267(nparams)
	push.64*    %arg1
	push.32     %r9046
	call        adjustlocalvars
	load.8      %r9048 <- 74[%r9019]
	cast.32     %r9049 <- (8) %r9048
	load.8      %r9051 <- 114[%r9021]
	cast.32     %r9052 <- (8) %r9051
	and.32      %r9053 <- %r9052, $1
	sub.32      %r9054 <- %r9049, %r9053
	scast.8     %r9055 <- (32) %r9054
	store.8     %r9055 -> 113[%r9021]
	load.8      %r9059 <- 74[%r9019]
	cast.32     %r9060 <- (8) %r9059
	push.64*    %r9019
	push.32     %r9060
	call        luaK_reserveregs
	ret


body:
.L2090:
	<entry-point>
	symaddr.64* %r9062 <- new_fs
	push.64*    %arg1
	push.64*    %r9062
	call        open_func
	load.64*    %r9064 <- 0[new_fs]
	store.32    %arg4 -> 96[%r9064]
	push.64*    %arg1
	push.32     $40
	call        checknext
	cbr         %arg3, .L2091, .L2092

.L2091:
	symaddr.64* %r9069 <- <anon symbol:0x189ed10>
	push.64*    %arg1
	push.64*    %r9069
	push.64     $4
	call.64*    %r9070 <- luaX_newstring
	push.64*    %arg1
	push.64*    %r9070
	push.32     $0
	call        new_localvar
	push.64*    %arg1
	push.32     $1
	call        adjustlocalvars
	br          .L2092

.L2092:
	push.64*    %arg1
	call        parlist
	push.64*    %arg1
	push.32     $41
	call        checknext
	push.64*    %arg1
	call        chunk
	load.32     %r9076 <- 4[%arg1]
	load.64*    %r9077 <- 0[new_fs]
	store.32    %r9076 -> 100[%r9077]
	push.64*    %arg1
	push.32     $262
	push.32     $265
	push.32     %arg4
	call        check_match
	push.64*    %arg1
	call        close_func
	push.64*    %arg1
	push.64*    %r9062
	push.64*    %arg2
	call        pushclosure
	ret


explist1:
.L2094:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        expr
	phisrc.32   %phi3282(n) <- $1
	br          .L2098

.L2098:
	push.64*    %arg1
	push.32     $44
	call.32     %r9087 <- testnext
	phi.32      %r9093 <- %phi3282(n), %phi3283(n)
	cbr         %r9087, .L2095, .L2099

.L2095:
	load.64*    %r9089 <- 48[%arg1]
	push.64*    %r9089
	push.64*    %arg2
	call        luaK_exp2nextreg
	push.64*    %arg1
	push.64*    %arg2
	call        expr
	add.32      %r9094 <- %r9093, $1
	phisrc.32   %phi3283(n) <- %r9094
	br          .L2098

.L2099:
	ret.32      %r9093


funcargs:
.L2100:
	<entry-point>
	load.64*    %r9098(fs) <- 48[%arg1]
	load.32     %r9100(line) <- 4[%arg1]
	load.32     %r9102 <- 16[%arg1]
	switch.32   %r9102, 40 -> .L2102, 123 -> .L2103, 286 -> .L2104, default -> .L2105

.L2102:
	load.32     %r9105 <- 8[%arg1]
	setne.32    %r9106 <- %r9100(line), %r9105
	cbr         %r9106, .L2106, .L2107

.L2106:
	symaddr.64* %r9108 <- <anon symbol:0x18a01e8>
	push.64*    %arg1
	push.64*    %r9108
	call        luaX_syntaxerror
	br          .L2107

.L2107:
	push.64*    %arg1
	call        luaX_next
	load.32     %r9111 <- 16[%arg1]
	seteq.32    %r9112 <- %r9111, $41
	cbr         %r9112, .L2108, .L2109

.L2108:
	store.32    $0 -> 0[args]
	br          .L2110

.L2109:
	symaddr.64* %r9114 <- args
	push.64*    %arg1
	push.64*    %r9114
	call.32     %r9115 <- explist1
	push.64*    %r9098(fs)
	push.64*    %r9114
	push.32     $0xffffffff
	call        luaK_setreturns
	br          .L2110

.L2110:
	push.64*    %arg1
	push.32     $41
	push.32     $40
	push.32     %r9100(line)
	call        check_match
	br          .L2101

.L2103:
	symaddr.64* %r9121 <- args
	push.64*    %arg1
	push.64*    %r9121
	call        constructor
	br          .L2101

.L2104:
	symaddr.64* %r9123 <- args
	load.64*    %r9125 <- 24[%arg1]
	push.64*    %arg1
	push.64*    %r9123
	push.64*    %r9125
	call        codestring
	push.64*    %arg1
	call        luaX_next
	br          .L2101

.L2105:
	symaddr.64* %r9128 <- <anon symbol:0x18a90c0>
	push.64*    %arg1
	push.64*    %r9128
	call        luaX_syntaxerror
	br          .L2111

.L2101:
	load.32     %r9130(base) <- 8[%arg2]
	load.32     %r9131 <- 0[args]
	seteq.1     %r9134 <- %r9131, $13
	seteq.1     %r9138 <- %r9131, $14
	or-bool.1   %r9139 <- %r9134, %r9138
	cbr         %r9139, .L2112, .L2113

.L2112:
	phisrc.32   %phi3313(nparams) <- $0xffffffff
	br          .L2114

.L2113:
	cbr         %r9131, .L2115, .L2116

.L2115:
	symaddr.64* %r9145 <- args
	push.64*    %r9098(fs)
	push.64*    %r9145
	call        luaK_exp2nextreg
	br          .L2116

.L2116:
	load.32     %r9147 <- 60[%r9098(fs)]
	add.32      %r9149 <- %r9130(base), $1
	sub.32      %r9150 <- %r9147, %r9149
	phisrc.32   %phi3314(nparams) <- %r9150
	br          .L2114

.L2114:
	phi.32      %r9154 <- %phi3313(nparams), %phi3314(nparams)
	add.32      %r9155 <- %r9154, $1
	push.64*    %r9098(fs)
	push.32     $28
	push.32     %r9130(base)
	push.32     %r9155
	push.32     $2
	call.32     %r9156 <- luaK_codeABC
	push.64*    %arg2
	push.32     $13
	push.32     %r9156
	call        init_exp
	push.64*    %r9098(fs)
	push.32     %r9100(line)
	call        luaK_fixline
	add.32      %r9160 <- %r9130(base), $1
	store.32    %r9160 -> 60[%r9098(fs)]
	br          .L2111

.L2111:
	ret


prefixexp:
.L2117:
	<entry-point>
	load.32     %r9163 <- 16[%arg1]
	switch.32   %r9163, 40 -> .L2119, 285 -> .L2120, default -> .L2121

.L2119:
	load.32     %r9165 <- 4[%arg1]
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	push.64*    %arg2
	call        expr
	push.64*    %arg1
	push.32     $41
	push.32     $40
	push.32     %r9165
	call        check_match
	load.64*    %r9172 <- 48[%arg1]
	push.64*    %r9172
	push.64*    %arg2
	call        luaK_dischargevars
	br          .L2122

.L2120:
	push.64*    %arg1
	push.64*    %arg2
	call        singlevar
	br          .L2122

.L2121:
	symaddr.64* %r9177 <- <anon symbol:0x18aa598>
	push.64*    %arg1
	push.64*    %r9177
	call        luaX_syntaxerror
	br          .L2122

.L2122:
	ret


primaryexp:
.L2123:
	<entry-point>
	load.64*    %r9179(fs) <- 48[%arg1]
	push.64*    %arg1
	push.64*    %arg2
	call        prefixexp
	br          .L2124

.L2124:
	load.32     %r9183 <- 16[%arg1]
	switch.32   %r9183, 40 -> .L2134, 46 -> .L2129, 58 -> .L2131, 91 -> .L2130, 123 -> .L2134, 286 -> .L2134, default -> .L2136

.L2129:
	push.64*    %arg1
	push.64*    %arg2
	call        field
	br          .L2124

.L2130:
	push.64*    %r9179(fs)
	push.64*    %arg2
	call.32     %r9188 <- luaK_exp2anyreg
	symaddr.64* %r9190 <- key
	push.64*    %arg1
	push.64*    %r9190
	call        yindex
	push.64*    %r9179(fs)
	push.64*    %arg2
	push.64*    %r9190
	call        luaK_indexed
	br          .L2124

.L2131:
	push.64*    %arg1
	call        luaX_next
	symaddr.64* %r9196 <- key
	push.64*    %arg1
	push.64*    %r9196
	call        checkname
	push.64*    %r9179(fs)
	push.64*    %arg2
	push.64*    %r9196
	call        luaK_self
	push.64*    %arg1
	push.64*    %arg2
	call        funcargs
	br          .L2124

.L2134:
	push.64*    %r9179(fs)
	push.64*    %arg2
	call        luaK_exp2nextreg
	push.64*    %arg1
	push.64*    %arg2
	call        funcargs
	br          .L2124

.L2136:
	ret


simpleexp:
.L2137:
	<entry-point>
	load.32     %r9207 <- 16[%arg1]
	switch.32   %r9207, 123 -> .L2145, 263 -> .L2143, 265 -> .L2146, 269 -> .L2141, 275 -> .L2142, 279 -> .L2144, 284 -> .L2139, 286 -> .L2140, default -> .L2147

.L2139:
	push.64*    %arg2
	push.32     $5
	push.32     $0
	call        init_exp
	load.f64    %r9210 <- 24[%arg1]
	store.f64   %r9210 -> 8[%arg2]
	br          .L2138

.L2140:
	load.64*    %r9215 <- 24[%arg1]
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %r9215
	call        codestring
	br          .L2138

.L2141:
	push.64*    %arg2
	push.32     $1
	push.32     $0
	call        init_exp
	br          .L2138

.L2142:
	push.64*    %arg2
	push.32     $2
	push.32     $0
	call        init_exp
	br          .L2138

.L2143:
	push.64*    %arg2
	push.32     $3
	push.32     $0
	call        init_exp
	br          .L2138

.L2144:
	load.64*    %r9220 <- 48[%arg1]
	load.64*    %r9222 <- 0[%r9220]
	load.8      %r9223 <- 114[%r9222]
	phisrc.64*  %phi3363 <- %r9222
	cbr         %r9223, .L2149, .L2148

.L2148:
	symaddr.64* %r9225 <- <anon symbol:0x18abef8>
	push.64*    %arg1
	push.64*    %r9225
	call        luaX_syntaxerror
	br          .L2149

.L2149:
	load.64*    %r9227 <- 0[%r9220]
	load.8      %r9228 <- 114[%r9227]
	cast.32     %r9229 <- (8) %r9228
	and.32      %r9230 <- %r9229, $0xfffffffb
	scast.8     %r9231 <- (32) %r9230
	store.8     %r9231 -> 114[%r9227]
	push.64*    %r9220
	push.32     $37
	push.32     $0
	push.32     $1
	push.32     $0
	call.32     %r9234 <- luaK_codeABC
	push.64*    %arg2
	push.32     $14
	push.32     %r9234
	call        init_exp
	br          .L2138

.L2145:
	push.64*    %arg1
	push.64*    %arg2
	call        constructor
	br          .L2150

.L2146:
	push.64*    %arg1
	call        luaX_next
	load.32     %r9241 <- 4[%arg1]
	push.64*    %arg1
	push.64*    %arg2
	push.32     $0
	push.32     %r9241
	call        body
	br          .L2150

.L2147:
	push.64*    %arg1
	push.64*    %arg2
	call        primaryexp
	br          .L2150

.L2138:
	push.64*    %arg1
	call        luaX_next
	br          .L2150

.L2150:
	ret


getunopr:
.L2151:
	<entry-point>
	switch.32   %arg1, 35 -> .L2155, 45 -> .L2154, 270 -> .L2153, default -> .L2156

.L2153:
	phisrc.32   %phi3364(return) <- $1
	br          .L2157

.L2154:
	phisrc.32   %phi3365(return) <- $0
	br          .L2157

.L2155:
	phisrc.32   %phi3366(return) <- $2
	br          .L2157

.L2156:
	phisrc.32   %phi3367(return) <- $3
	br          .L2157

.L2157:
	phi.32      %r9246 <- %phi3364(return), %phi3365(return), %phi3366(return), %phi3367(return)
	ret.32      %r9246


getbinopr:
.L2158:
	<entry-point>
	switch.32   %arg1, 37 -> .L2164, 42 -> .L2162, 43 -> .L2160, 45 -> .L2161, 47 -> .L2163, 60 -> .L2169, 62 -> .L2171, 94 -> .L2165, 257 -> .L2173, 271 -> .L2174, 278 -> .L2166, 280 -> .L2168, 281 -> .L2172, 282 -> .L2170, 283 -> .L2167, default -> .L2175

.L2160:
	phisrc.32   %phi3368(return) <- $0
	br          .L2176

.L2161:
	phisrc.32   %phi3369(return) <- $1
	br          .L2176

.L2162:
	phisrc.32   %phi3370(return) <- $2
	br          .L2176

.L2163:
	phisrc.32   %phi3371(return) <- $3
	br          .L2176

.L2164:
	phisrc.32   %phi3372(return) <- $4
	br          .L2176

.L2165:
	phisrc.32   %phi3373(return) <- $5
	br          .L2176

.L2166:
	phisrc.32   %phi3374(return) <- $6
	br          .L2176

.L2167:
	phisrc.32   %phi3375(return) <- $7
	br          .L2176

.L2168:
	phisrc.32   %phi3376(return) <- $8
	br          .L2176

.L2169:
	phisrc.32   %phi3377(return) <- $9
	br          .L2176

.L2170:
	phisrc.32   %phi3378(return) <- $10
	br          .L2176

.L2171:
	phisrc.32   %phi3379(return) <- $11
	br          .L2176

.L2172:
	phisrc.32   %phi3380(return) <- $12
	br          .L2176

.L2173:
	phisrc.32   %phi3381(return) <- $13
	br          .L2176

.L2174:
	phisrc.32   %phi3382(return) <- $14
	br          .L2176

.L2175:
	phisrc.32   %phi3383(return) <- $15
	br          .L2176

.L2176:
	phi.32      %r9248 <- %phi3368(return), %phi3369(return), %phi3370(return), %phi3371(return), %phi3372(return), %phi3373(return), %phi3374(return), %phi3375(return), %phi3376(return), %phi3377(return), %phi3378(return), %phi3379(return), %phi3380(return), %phi3381(return), %phi3382(return), %phi3383(return)
	ret.32      %r9248


subexpr:
.L2177:
	<entry-point>
	push.64*    %arg1
	call        enterlevel
	load.32     %r9251 <- 16[%arg1]
	push.32     %r9251
	call.32     %r9252 <- getunopr
	setne.32    %r9255 <- %r9252, $3
	cbr         %r9255, .L2178, .L2179

.L2178:
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	push.64*    %arg2
	push.32     $8
	call.32     %r9259 <- subexpr
	load.64*    %r9261 <- 48[%arg1]
	push.64*    %r9261
	push.32     %r9252
	push.64*    %arg2
	call        luaK_prefix
	br          .L2180

.L2179:
	push.64*    %arg1
	push.64*    %arg2
	call        simpleexp
	br          .L2180

.L2180:
	load.32     %r9267 <- 16[%arg1]
	push.32     %r9267
	call.32     %r9268(op) <- getbinopr
	phisrc.32   %phi3402(op) <- %r9268(op)
	br          .L2184

.L2184:
	phi.32      %r9269(op) <- %phi3402(op), %phi3403(op)
	setne.32    %r9271 <- %r9269(op), $15
	cbr         %r9271, .L2185, .L2183

.L2185:
	symaddr.64* %r9272 <- priority
	scast.64    %r9274 <- (32) %r9269(op)
	muls.64     %r9275 <- %r9274, $2
	add.64*     %r9276 <- %r9272, %r9275
	load.8      %r9277 <- 0[%r9276]
	cast.32     %r9278 <- (8) %r9277
	seta.32     %r9280 <- %r9278, %arg3
	cbr         %r9280, .L2181, .L2183

.L2181:
	push.64*    %arg1
	call        luaX_next
	load.64*    %r9283 <- 48[%arg1]
	push.64*    %r9283
	push.32     %r9269(op)
	push.64*    %arg2
	call        luaK_infix
	symaddr.64* %r9287 <- v2
	load.8      %r9293 <- 1[%r9276]
	cast.32     %r9294 <- (8) %r9293
	push.64*    %arg1
	push.64*    %r9287
	push.32     %r9294
	call.32     %r9295 <- subexpr
	load.64*    %r9297 <- 48[%arg1]
	push.64*    %r9297
	push.32     %r9269(op)
	push.64*    %arg2
	push.64*    %r9287
	call        luaK_posfix
	phisrc.32   %phi3403(op) <- %r9295
	br          .L2184

.L2183:
	load.64*    %r9303 <- 56[%arg1]
	load.16     %r9304 <- 96[%r9303]
	add.16      %r9305 <- %r9304, $-1
	store.16    %r9305 -> 96[%r9303]
	ret.32      %r9269(op)


expr:
.L2187:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	push.32     $0
	call.32     %r9310 <- subexpr
	ret


block_follow:
.L2189:
	<entry-point>
	switch.32   %arg1, 260 -> .L2195, 261 -> .L2195, 262 -> .L2195, 276 -> .L2195, 287 -> .L2195, default -> .L2196

.L2195:
	phisrc.32   %phi3404(return) <- $1
	br          .L2197

.L2196:
	phisrc.32   %phi3405(return) <- $0
	br          .L2197

.L2197:
	phi.32      %r9312 <- %phi3404(return), %phi3405(return)
	ret.32      %r9312


block:
.L2198:
	<entry-point>
	load.64*    %r9314 <- 48[%arg1]
	symaddr.64* %r9316 <- bl
	push.64*    %r9314
	push.64*    %r9316
	push.8      $0
	call        enterblock
	push.64*    %arg1
	call        chunk
	push.64*    %r9314
	call        leaveblock
	ret


check_conflict:
.L2200:
	<entry-point>
	load.64*    %r9320 <- 48[%arg1]
	load.32     %r9322(extra) <- 60[%r9320]
	phisrc.64*  %phi3415(lh) <- %arg2
	phisrc.32   %phi3425(conflict) <- $0
	phisrc.32   %phi3428(extra) <- %r9322(extra)
	phisrc.32   %phi3430(extra) <- %r9322(extra)
	br          .L2204

.L2204:
	phi.64*     %r9323(lh) <- %phi3415(lh), %phi3416(lh)
	cbr         %r9323(lh), .L2201, .L2203

.L2201:
	load.32     %r9325 <- 8[%r9323(lh)]
	seteq.32    %r9327 <- %r9325, $9
	cbr         %r9327, .L2205, .L2202

.L2205:
	load.32     %r9329 <- 16[%r9323(lh)]
	load.32     %r9331 <- 8[%arg3]
	seteq.32    %r9332 <- %r9329, %r9331
	phisrc.32   %phi3429 <- %r9331
	phisrc.32   %phi3431 <- %r9331
	cbr         %r9332, .L2207, .L2208

.L2207:
	store.32    %r9322(extra) -> 16[%r9323(lh)]
	phisrc.32   %phi3426(conflict) <- $1
	br          .L2208

.L2208:
	load.32     %r9336 <- 20[%r9323(lh)]
	load.32     %r9338 <- 8[%arg3]
	seteq.32    %r9339 <- %r9336, %r9338
	cbr         %r9339, .L2209, .L2202

.L2209:
	store.32    %r9322(extra) -> 20[%r9323(lh)]
	phisrc.32   %phi3427(conflict) <- $1
	br          .L2202

.L2202:
	load.64*    %r9343 <- 0[%r9323(lh)]
	phisrc.64*  %phi3416(lh) <- %r9343
	br          .L2204

.L2203:
	phi.32      %r9344 <- %phi3425(conflict), %phi3426(conflict), %phi3427(conflict)
	cbr         %r9344, .L2211, .L2212

.L2211:
	load.32     %r9347 <- 60[%r9320]
	load.32     %r9349 <- 8[%arg3]
	push.64*    %r9320
	push.32     $0
	push.32     %r9347
	push.32     %r9349
	push.32     $0
	call.32     %r9350 <- luaK_codeABC
	push.64*    %r9320
	push.32     $1
	call        luaK_reserveregs
	br          .L2212

.L2212:
	ret


assignment:
.L2213:
	<entry-point>
	load.32     %r9353 <- 8[%arg2]
	setle.32    %r9355 <- $6, %r9353
	cbr         %r9355, .L2216, .L2214

.L2216:
	setle.32    %r9359 <- %r9353, $9
	cbr         %r9359, .L2215, .L2214

.L2214:
	symaddr.64* %r9361 <- <anon symbol:0x18b0208>
	push.64*    %arg1
	push.64*    %r9361
	call        luaX_syntaxerror
	br          .L2215

.L2215:
	push.64*    %arg1
	push.32     $44
	call.32     %r9363 <- testnext
	cbr         %r9363, .L2217, .L2218

.L2217:
	store.64*   %arg2 -> 0[nv]
	symaddr.64* %r9366 <- nv
	add.64*     %r9367 <- %r9366, $8
	push.64*    %arg1
	push.64*    %r9367
	call        primaryexp
	load.32     %r9368 <- 8[nv]
	seteq.32    %r9370 <- %r9368, $6
	cbr         %r9370, .L2219, .L2220

.L2219:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %r9367
	call        check_conflict
	br          .L2220

.L2220:
	load.64*    %r9377 <- 56[%arg1]
	load.16     %r9378 <- 96[%r9377]
	cast.32     %r9379 <- (16) %r9378
	sub.32      %r9380 <- $200, %r9379
	setgt.32    %r9381 <- %arg3, %r9380
	cbr         %r9381, .L2221, .L2222

.L2221:
	load.64*    %r9383 <- 48[%arg1]
	symaddr.64* %r9389 <- <anon symbol:0x18b1470>
	push.64*    %r9383
	push.32     %r9380
	push.64*    %r9389
	call        errorlimit
	br          .L2222

.L2222:
	add.32      %r9393 <- %arg3, $1
	push.64*    %arg1
	push.64*    %r9366
	push.32     %r9393
	call        assignment
	br          .L2223

.L2218:
	push.64*    %arg1
	push.32     $61
	call        checknext
	symaddr.64* %r9396 <- e
	push.64*    %arg1
	push.64*    %r9396
	call.32     %r9397 <- explist1
	setne.32    %r9400 <- %r9397, %arg3
	cbr         %r9400, .L2224, .L2225

.L2224:
	push.64*    %arg1
	push.32     %arg3
	push.32     %r9397
	push.64*    %r9396
	call        adjust_assign
	setgt.32    %r9407 <- %r9397, %arg3
	cbr         %r9407, .L2226, .L2223

.L2226:
	sub.32      %r9410 <- %r9397, %arg3
	load.64*    %r9412 <- 48[%arg1]
	load.32     %r9413 <- 60[%r9412]
	sub.32      %r9415 <- %r9413, %r9410
	store.32    %r9415 -> 60[%r9412]
	br          .L2223

.L2225:
	load.64*    %r9418 <- 48[%arg1]
	push.64*    %r9418
	push.64*    %r9396
	call        luaK_setoneret
	load.64*    %r9421 <- 48[%arg1]
	add.64*     %r9423 <- %arg2, $8
	push.64*    %r9421
	push.64*    %r9423
	push.64*    %r9396
	call        luaK_storevar
	br          .L2229

.L2223:
	symaddr.64* %r9425 <- e
	load.64*    %r9427 <- 48[%arg1]
	load.32     %r9428 <- 60[%r9427]
	add.32      %r9429 <- %r9428, $-1
	push.64*    %r9425
	push.32     $12
	push.32     %r9429
	call        init_exp
	load.64*    %r9431 <- 48[%arg1]
	add.64*     %r9433 <- %arg2, $8
	symaddr.64* %r9434 <- e
	push.64*    %r9431
	push.64*    %r9433
	push.64*    %r9434
	call        luaK_storevar
	br          .L2229

.L2229:
	ret


cond:
.L2230:
	<entry-point>
	symaddr.64* %r9436 <- v
	push.64*    %arg1
	push.64*    %r9436
	call        expr
	load.32     %r9437 <- 0[v]
	seteq.32    %r9439 <- %r9437, $1
	cbr         %r9439, .L2231, .L2232

.L2231:
	store.32    $3 -> 0[v]
	br          .L2232

.L2232:
	load.64*    %r9441 <- 48[%arg1]
	push.64*    %r9441
	push.64*    %r9436
	call        luaK_goiftrue
	load.32     %r9443 <- 20[v]
	ret.32      %r9443


breakstat:
.L2234:
	<entry-point>
	load.64*    %r9446 <- 48[%arg1]
	load.64*    %r9448(bl) <- 40[%r9446]
	phisrc.64*  %phi3482(bl) <- %r9448(bl)
	phisrc.32   %phi3484(upval) <- $0
	phisrc.32   %phi3486(upval) <- $0
	br          .L2238

.L2238:
	phi.64*     %r9449(bl) <- %phi3482(bl), %phi3483(bl)
	cbr         %r9449(bl), .L2239, .L2240

.L2239:
	load.8      %r9451 <- 14[%r9449(bl)]
	cbr         %r9451, .L2237, .L2235

.L2235:
	load.8      %r9453 <- 13[%r9449(bl)]
	cast.32     %r9454 <- (8) %r9453
	phi.32      %r9455 <- %phi3486(upval), %phi3487(upval)
	or.32       %r9457 <- %r9455, %r9454
	load.64*    %r9460 <- 0[%r9449(bl)]
	phisrc.64*  %phi3483(bl) <- %r9460
	phisrc.32   %phi3485(upval) <- %r9457
	phisrc.32   %phi3487(upval) <- %r9457
	br          .L2238

.L2237:
	cbr         %r9449(bl), .L2241, .L2240

.L2240:
	symaddr.64* %r9463 <- <anon symbol:0x18b4478>
	push.64*    %arg1
	push.64*    %r9463
	call        luaX_syntaxerror
	br          .L2241

.L2241:
	phi.32      %r9464 <- %phi3484(upval), %phi3485(upval)
	cbr         %r9464, .L2242, .L2243

.L2242:
	load.8      %r9467 <- 12[%r9449(bl)]
	cast.32     %r9468 <- (8) %r9467
	push.64*    %r9446
	push.32     $35
	push.32     %r9468
	push.32     $0
	push.32     $0
	call.32     %r9469 <- luaK_codeABC
	br          .L2243

.L2243:
	add.64*     %r9472 <- %r9449(bl), $8
	push.64*    %r9446
	call.32     %r9474 <- luaK_jump
	push.64*    %r9446
	push.64*    %r9472
	push.32     %r9474
	call        luaK_concat
	ret


whilestat:
.L2245:
	<entry-point>
	load.64*    %r9476 <- 48[%arg1]
	push.64*    %arg1
	call        luaX_next
	push.64*    %r9476
	call.32     %r9479 <- luaK_getlabel
	push.64*    %arg1
	call.32     %r9481 <- cond
	symaddr.64* %r9483 <- bl
	push.64*    %r9476
	push.64*    %r9483
	push.8      $1
	call        enterblock
	push.64*    %arg1
	push.32     $259
	call        checknext
	push.64*    %arg1
	call        block
	push.64*    %r9476
	call.32     %r9488 <- luaK_jump
	push.64*    %r9476
	push.32     %r9488
	push.32     %r9479
	call        luaK_patchlist
	push.64*    %arg1
	push.32     $262
	push.32     $277
	push.32     %arg2
	call        check_match
	push.64*    %r9476
	call        leaveblock
	push.64*    %r9476
	push.32     %r9481
	call        luaK_patchtohere
	ret


repeatstat:
.L2247:
	<entry-point>
	load.64*    %r9496 <- 48[%arg1]
	push.64*    %r9496
	call.32     %r9498(repeat_init) <- luaK_getlabel
	symaddr.64* %r9500 <- bl1
	push.64*    %r9496
	push.64*    %r9500
	push.8      $1
	call        enterblock
	symaddr.64* %r9502 <- bl2
	push.64*    %r9496
	push.64*    %r9502
	push.8      $0
	call        enterblock
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	call        chunk
	push.64*    %arg1
	push.32     $276
	push.32     $272
	push.32     %arg2
	call        check_match
	push.64*    %arg1
	call.32     %r9508(condexit) <- cond
	load.8      %r9509 <- 13[bl2]
	cbr         %r9509, .L2249, .L2248

.L2248:
	push.64*    %r9496
	call        leaveblock
	load.64*    %r9512 <- 48[%arg1]
	push.64*    %r9512
	push.32     %r9508(condexit)
	push.32     %r9498(repeat_init)
	call        luaK_patchlist
	br          .L2250

.L2249:
	push.64*    %arg1
	call        breakstat
	load.64*    %r9517 <- 48[%arg1]
	push.64*    %r9517
	push.32     %r9508(condexit)
	call        luaK_patchtohere
	push.64*    %r9496
	call        leaveblock
	load.64*    %r9521 <- 48[%arg1]
	push.64*    %r9496
	call.32     %r9523 <- luaK_jump
	push.64*    %r9521
	push.32     %r9523
	push.32     %r9498(repeat_init)
	call        luaK_patchlist
	br          .L2250

.L2250:
	push.64*    %r9496
	call        leaveblock
	ret


exp1:
.L2252:
	<entry-point>
	symaddr.64* %r9527 <- e
	push.64*    %arg1
	push.64*    %r9527
	call        expr
	load.32     %r9528 <- 0[e]
	load.64*    %r9531 <- 48[%arg1]
	push.64*    %r9531
	push.64*    %r9527
	call        luaK_exp2nextreg
	ret.32      %r9528


forbody:
.L2254:
	<entry-point>
	load.64*    %r9536(fs) <- 48[%arg1]
	push.64*    %arg1
	push.32     $3
	call        adjustlocalvars
	push.64*    %arg1
	push.32     $259
	call        checknext
	cbr         %arg5, .L2255, .L2256

.L2255:
	push.64*    %r9536(fs)
	push.32     $32
	push.32     %arg2
	push.32     $0x1fffe
	call.32     %r9542 <- luaK_codeABx
	phisrc.32   %phi3499 <- %r9542
	br          .L2257

.L2256:
	push.64*    %r9536(fs)
	call.32     %r9544 <- luaK_jump
	phisrc.32   %phi3500 <- %r9544
	br          .L2257

.L2257:
	phi.32      %r9545 <- %phi3499, %phi3500
	symaddr.64* %r9547 <- bl
	push.64*    %r9536(fs)
	push.64*    %r9547
	push.8      $0
	call        enterblock
	push.64*    %arg1
	push.32     %arg4
	call        adjustlocalvars
	push.64*    %r9536(fs)
	push.32     %arg4
	call        luaK_reserveregs
	push.64*    %arg1
	call        block
	push.64*    %r9536(fs)
	call        leaveblock
	push.64*    %r9536(fs)
	push.32     %r9545
	call        luaK_patchtohere
	cbr         %arg5, .L2258, .L2259

.L2258:
	push.64*    %r9536(fs)
	push.32     $31
	push.32     %arg2
	push.32     $0x1fffe
	call.32     %r9559 <- luaK_codeABx
	phisrc.32   %phi3501 <- %r9559
	br          .L2260

.L2259:
	push.64*    %r9536(fs)
	push.32     $33
	push.32     %arg2
	push.32     $0
	push.32     %arg4
	call.32     %r9563 <- luaK_codeABC
	phisrc.32   %phi3502 <- %r9563
	br          .L2260

.L2260:
	phi.32      %r9564(endfor) <- %phi3501, %phi3502
	push.64*    %r9536(fs)
	push.32     %arg3
	call        luaK_fixline
	cbr         %arg5, .L2261, .L2262

.L2261:
	phisrc.32   %phi3503 <- %r9564(endfor)
	br          .L2263

.L2262:
	push.64*    %r9536(fs)
	call.32     %r9571 <- luaK_jump
	phisrc.32   %phi3504 <- %r9571
	br          .L2263

.L2263:
	phi.32      %r9572 <- %phi3503, %phi3504
	add.32      %r9574 <- %r9545, $1
	push.64*    %r9536(fs)
	push.32     %r9572
	push.32     %r9574
	call        luaK_patchlist
	ret


fornum:
.L2265:
	<entry-point>
	load.64*    %r9576 <- 48[%arg1]
	load.32     %r9578(base) <- 60[%r9576]
	symaddr.64* %r9581 <- <anon symbol:0x18b69a0>
	push.64*    %arg1
	push.64*    %r9581
	push.64     $11
	call.64*    %r9582 <- luaX_newstring
	push.64*    %arg1
	push.64*    %r9582
	push.32     $0
	call        new_localvar
	symaddr.64* %r9585 <- <anon symbol:0x18b6f10>
	push.64*    %arg1
	push.64*    %r9585
	push.64     $11
	call.64*    %r9586 <- luaX_newstring
	push.64*    %arg1
	push.64*    %r9586
	push.32     $1
	call        new_localvar
	symaddr.64* %r9589 <- <anon symbol:0x18b7480>
	push.64*    %arg1
	push.64*    %r9589
	push.64     $10
	call.64*    %r9590 <- luaX_newstring
	push.64*    %arg1
	push.64*    %r9590
	push.32     $2
	call        new_localvar
	push.64*    %arg1
	push.64*    %arg2
	push.32     $3
	call        new_localvar
	push.64*    %arg1
	push.32     $61
	call        checknext
	push.64*    %arg1
	call.32     %r9595 <- exp1
	push.64*    %arg1
	push.32     $44
	call        checknext
	push.64*    %arg1
	call.32     %r9598 <- exp1
	push.64*    %arg1
	push.32     $44
	call.32     %r9600 <- testnext
	cbr         %r9600, .L2266, .L2267

.L2266:
	push.64*    %arg1
	call.32     %r9602 <- exp1
	br          .L2268

.L2267:
	load.32     %r9605 <- 60[%r9576]
	set.f64     %r9607 <- 1.000000
	push.64*    %r9576
	push.f64    %r9607
	call.32     %r9608 <- luaK_numberK
	push.64*    %r9576
	push.32     $1
	push.32     %r9605
	push.32     %r9608
	call.32     %r9610 <- luaK_codeABx
	push.64*    %r9576
	push.32     $1
	call        luaK_reserveregs
	br          .L2268

.L2268:
	push.64*    %arg1
	push.32     %r9578(base)
	push.32     %arg3
	push.32     $1
	push.32     $1
	call        forbody
	ret


forlist:
.L2270:
	<entry-point>
	load.64*    %r9616 <- 48[%arg1]
	load.32     %r9618(base) <- 60[%r9616]
	symaddr.64* %r9621 <- <anon symbol:0x18b7f60>
	push.64*    %arg1
	push.64*    %r9621
	push.64     $15
	call.64*    %r9622 <- luaX_newstring
	push.64*    %arg1
	push.64*    %r9622
	push.32     $0
	call        new_localvar
	symaddr.64* %r9627 <- <anon symbol:0x18c0528>
	push.64*    %arg1
	push.64*    %r9627
	push.64     $11
	call.64*    %r9628 <- luaX_newstring
	push.64*    %arg1
	push.64*    %r9628
	push.32     $1
	call        new_localvar
	symaddr.64* %r9633 <- <anon symbol:0x18c0a98>
	push.64*    %arg1
	push.64*    %r9633
	push.64     $13
	call.64*    %r9634 <- luaX_newstring
	push.64*    %arg1
	push.64*    %r9634
	push.32     $2
	call        new_localvar
	push.64*    %arg1
	push.64*    %arg2
	push.32     $3
	call        new_localvar
	phisrc.32   %phi3539(nvars) <- $4
	br          .L2274

.L2274:
	push.64*    %arg1
	push.32     $44
	call.32     %r9642 <- testnext
	phi.32      %r9646 <- %phi3539(nvars), %phi3540(nvars)
	cbr         %r9642, .L2271, .L2273

.L2271:
	push.64*    %arg1
	call.64*    %r9645 <- str_checkname
	add.32      %r9647 <- %r9646, $1
	push.64*    %arg1
	push.64*    %r9645
	push.32     %r9646
	call        new_localvar
	phisrc.32   %phi3540(nvars) <- %r9647
	br          .L2274

.L2273:
	push.64*    %arg1
	push.32     $267
	call        checknext
	load.32     %r9650 <- 4[%arg1]
	symaddr.64* %r9653 <- e
	push.64*    %arg1
	push.64*    %r9653
	call.32     %r9654 <- explist1
	push.64*    %arg1
	push.32     $3
	push.32     %r9654
	push.64*    %r9653
	call        adjust_assign
	push.64*    %r9616
	push.32     $3
	call        luaK_checkstack
	add.32      %r9661 <- %r9646, $-3
	push.64*    %arg1
	push.32     %r9618(base)
	push.32     %r9650
	push.32     %r9661
	push.32     $0
	call        forbody
	ret


forstat:
.L2276:
	<entry-point>
	load.64*    %r9663 <- 48[%arg1]
	symaddr.64* %r9665 <- bl
	push.64*    %r9663
	push.64*    %r9665
	push.8      $1
	call        enterblock
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	call.64*    %r9668(varname) <- str_checkname
	load.32     %r9670 <- 16[%arg1]
	switch.32   %r9670, 44 -> .L2280, 61 -> .L2278, 267 -> .L2280, default -> .L2281

.L2278:
	push.64*    %arg1
	push.64*    %r9668(varname)
	push.32     %arg2
	call        fornum
	br          .L2277

.L2280:
	push.64*    %arg1
	push.64*    %r9668(varname)
	call        forlist
	br          .L2277

.L2281:
	symaddr.64* %r9677 <- <anon symbol:0x18c1ae8>
	push.64*    %arg1
	push.64*    %r9677
	call        luaX_syntaxerror
	br          .L2277

.L2277:
	push.64*    %arg1
	push.32     $262
	push.32     $264
	push.32     %arg2
	call        check_match
	push.64*    %r9663
	call        leaveblock
	ret


test_then_block:
.L2283:
	<entry-point>
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	call.32     %r9683 <- cond
	push.64*    %arg1
	push.32     $274
	call        checknext
	push.64*    %arg1
	call        block
	ret.32      %r9683


ifstat:
.L2285:
	<entry-point>
	load.64*    %r9689(fs) <- 48[%arg1]
	store.32    $0xffffffff -> 0[escapelist]
	push.64*    %arg1
	call.32     %r9691(flist) <- test_then_block
	phisrc.32   %phi3569(flist) <- %r9691(flist)
	phisrc.32   %phi3571(flist) <- %r9691(flist)
	phisrc.32   %phi3573(flist) <- %r9691(flist)
	br          .L2289

.L2289:
	load.32     %r9693 <- 16[%arg1]
	seteq.32    %r9694 <- %r9693, $261
	cbr         %r9694, .L2286, .L2288

.L2286:
	symaddr.64* %r9696 <- escapelist
	push.64*    %r9689(fs)
	call.32     %r9698 <- luaK_jump
	push.64*    %r9689(fs)
	push.64*    %r9696
	push.32     %r9698
	call        luaK_concat
	phi.32      %r9700 <- %phi3573(flist), %phi3574(flist)
	push.64*    %r9689(fs)
	push.32     %r9700
	call        luaK_patchtohere
	push.64*    %arg1
	call.32     %r9702 <- test_then_block
	phisrc.32   %phi3570(flist) <- %r9702
	phisrc.32   %phi3572(flist) <- %r9702
	phisrc.32   %phi3574(flist) <- %r9702
	br          .L2289

.L2288:
	seteq.32    %r9705 <- %r9693, $260
	cbr         %r9705, .L2290, .L2291

.L2290:
	symaddr.64* %r9707 <- escapelist
	push.64*    %r9689(fs)
	call.32     %r9709 <- luaK_jump
	push.64*    %r9689(fs)
	push.64*    %r9707
	push.32     %r9709
	call        luaK_concat
	phi.32      %r9711 <- %phi3571(flist), %phi3572(flist)
	push.64*    %r9689(fs)
	push.32     %r9711
	call        luaK_patchtohere
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	call        block
	br          .L2292

.L2291:
	symaddr.64* %r9715 <- escapelist
	phi.32      %r9716 <- %phi3569(flist), %phi3570(flist)
	push.64*    %r9689(fs)
	push.64*    %r9715
	push.32     %r9716
	call        luaK_concat
	br          .L2292

.L2292:
	load.32     %r9718 <- 0[escapelist]
	push.64*    %r9689(fs)
	push.32     %r9718
	call        luaK_patchtohere
	push.64*    %arg1
	push.32     $262
	push.32     $266
	push.32     %arg2
	call        check_match
	ret


localfunc:
.L2294:
	<entry-point>
	load.64*    %r9722 <- 48[%arg1]
	push.64*    %arg1
	call.64*    %r9725 <- str_checkname
	push.64*    %arg1
	push.64*    %r9725
	push.32     $0
	call        new_localvar
	symaddr.64* %r9726 <- v
	load.32     %r9728 <- 60[%r9722]
	push.64*    %r9726
	push.32     $6
	push.32     %r9728
	call        init_exp
	push.64*    %r9722
	push.32     $1
	call        luaK_reserveregs
	push.64*    %arg1
	push.32     $1
	call        adjustlocalvars
	symaddr.64* %r9732 <- b
	load.32     %r9734 <- 4[%arg1]
	push.64*    %arg1
	push.64*    %r9732
	push.32     $0
	push.32     %r9734
	call        body
	push.64*    %r9722
	push.64*    %r9726
	push.64*    %r9732
	call        luaK_storevar
	load.32     %r9739 <- 48[%r9722]
	load.64*    %r9741 <- 0[%r9722]
	load.64*    %r9742 <- 48[%r9741]
	add.64*     %r9744 <- %r9722, $196
	load.8      %r9746 <- 74[%r9722]
	cast.32     %r9747 <- (8) %r9746
	add.32      %r9748 <- %r9747, $-1
	scast.64    %r9749 <- (32) %r9748
	muls.64     %r9750 <- %r9749, $2
	add.64*     %r9751 <- %r9744, %r9750
	load.16     %r9752 <- 0[%r9751]
	cast.64     %r9753 <- (16) %r9752
	muls.64     %r9754 <- %r9753, $16
	add.64*     %r9755 <- %r9742, %r9754
	store.32    %r9739 -> 8[%r9755]
	ret


localstat:
.L2296:
	<entry-point>
	phisrc.32   %phi3583(nvars) <- $0
	br          .L2297

.L2297:
	push.64*    %arg1
	call.64*    %r9758 <- str_checkname
	phi.32      %r9759 <- %phi3583(nvars), %phi3584(nvars)
	add.32      %r9760(nvars) <- %r9759, $1
	push.64*    %arg1
	push.64*    %r9758
	push.32     %r9759
	call        new_localvar
	phisrc.32   %phi3584(nvars) <- %r9760(nvars)
	push.64*    %arg1
	push.32     $44
	call.32     %r9762 <- testnext
	cbr         %r9762, .L2297, .L2299

.L2299:
	push.64*    %arg1
	push.32     $61
	call.32     %r9764 <- testnext
	cbr         %r9764, .L2300, .L2301

.L2300:
	symaddr.64* %r9766 <- e
	push.64*    %arg1
	push.64*    %r9766
	call.32     %r9767(nexps) <- explist1
	phisrc.32   %phi3585(nexps) <- %r9767(nexps)
	br          .L2302

.L2301:
	store.32    $0 -> 0[e]
	phisrc.32   %phi3586(nexps) <- $0
	br          .L2302

.L2302:
	phi.32      %r9770 <- %phi3585(nexps), %phi3586(nexps)
	symaddr.64* %r9771 <- e
	push.64*    %arg1
	push.32     %r9760(nvars)
	push.32     %r9770
	push.64*    %r9771
	call        adjust_assign
	push.64*    %arg1
	push.32     %r9760(nvars)
	call        adjustlocalvars
	ret


funcname:
.L2304:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	call        singlevar
	phisrc.32   %phi3595(needself) <- $0
	br          .L2308

.L2308:
	load.32     %r9777 <- 16[%arg1]
	seteq.32    %r9778 <- %r9777, $46
	cbr         %r9778, .L2305, .L2307

.L2305:
	push.64*    %arg1
	push.64*    %arg2
	call        field
	br          .L2308

.L2307:
	seteq.32    %r9783 <- %r9777, $58
	cbr         %r9783, .L2309, .L2310

.L2309:
	push.64*    %arg1
	push.64*    %arg2
	call        field
	phisrc.32   %phi3596(needself) <- $1
	br          .L2310

.L2310:
	phi.32      %r9786 <- %phi3595(needself), %phi3596(needself)
	ret.32      %r9786


funcstat:
.L2312:
	<entry-point>
	push.64*    %arg1
	call        luaX_next
	symaddr.64* %r9790 <- v
	push.64*    %arg1
	push.64*    %r9790
	call.32     %r9791 <- funcname
	symaddr.64* %r9793 <- b
	push.64*    %arg1
	push.64*    %r9793
	push.32     %r9791
	push.32     %arg2
	call        body
	load.64*    %r9797 <- 48[%arg1]
	push.64*    %r9797
	push.64*    %r9790
	push.64*    %r9793
	call        luaK_storevar
	load.64*    %r9801 <- 48[%arg1]
	push.64*    %r9801
	push.32     %arg2
	call        luaK_fixline
	ret


exprstat:
.L2314:
	<entry-point>
	load.64*    %r9804(fs) <- 48[%arg1]
	symaddr.64* %r9806 <- v
	add.64*     %r9807 <- %r9806, $8
	push.64*    %arg1
	push.64*    %r9807
	call        primaryexp
	load.32     %r9808 <- 8[v]
	seteq.32    %r9810 <- %r9808, $13
	cbr         %r9810, .L2315, .L2316

.L2315:
	load.64*    %r9812 <- 0[%r9804(fs)]
	load.64*    %r9813 <- 24[%r9812]
	load.32     %r9814 <- 16[v]
	scast.64    %r9815 <- (32) %r9814
	muls.64     %r9816 <- %r9815, $4
	add.64*     %r9817 <- %r9813, %r9816
	load.32     %r9818 <- 0[%r9817]
	and.32      %r9819 <- %r9818, $0xff803fff
	or.32       %r9820 <- %r9819, $0x4000
	store.32    %r9820 -> 0[%r9817]
	br          .L2317

.L2316:
	store.64*   $0 -> 0[v]
	push.64*    %arg1
	push.64*    %r9806
	push.32     $1
	call        assignment
	br          .L2317

.L2317:
	ret


retstat:
.L2318:
	<entry-point>
	load.64*    %r9831(fs) <- 48[%arg1]
	push.64*    %arg1
	call        luaX_next
	load.32     %r9834 <- 16[%arg1]
	push.32     %r9834
	call.32     %r9835 <- block_follow
	cbr         %r9835, .L2319, .L2321

.L2321:
	load.32     %r9837 <- 16[%arg1]
	seteq.32    %r9838 <- %r9837, $59
	cbr         %r9838, .L2319, .L2320

.L2319:
	phisrc.32   %phi3612(nret) <- $0
	phisrc.32   %phi3617(first) <- $0
	br          .L2322

.L2320:
	symaddr.64* %r9840 <- e
	push.64*    %arg1
	push.64*    %r9840
	call.32     %r9841(nret) <- explist1
	load.32     %r9842 <- 0[e]
	seteq.1     %r9845 <- %r9842, $13
	seteq.1     %r9849 <- %r9842, $14
	or-bool.1   %r9850 <- %r9845, %r9849
	cbr         %r9850, .L2323, .L2324

.L2323:
	push.64*    %r9831(fs)
	push.64*    %r9840
	push.32     $0xffffffff
	call        luaK_setreturns
	load.32     %r9854 <- 0[e]
	seteq.1     %r9857 <- %r9854, $13
	seteq.1     %r9860 <- %r9841(nret), $1
	and-bool.1  %r9861 <- %r9857, %r9860
	cbr         %r9861, .L2325, .L2326

.L2325:
	load.64*    %r9864 <- 0[%r9831(fs)]
	load.64*    %r9865 <- 24[%r9864]
	load.32     %r9866 <- 8[e]
	scast.64    %r9867 <- (32) %r9866
	muls.64     %r9868 <- %r9867, $4
	add.64*     %r9869 <- %r9865, %r9868
	load.32     %r9870 <- 0[%r9869]
	and.32      %r9871 <- %r9870, $0xffffffc0
	or.32       %r9872 <- %r9871, $29
	store.32    %r9872 -> 0[%r9869]
	br          .L2326

.L2326:
	load.8      %r9881 <- 74[%r9831(fs)]
	cast.32     %r9882 <- (8) %r9881
	phisrc.32   %phi3613(nret) <- $0xffffffff
	phisrc.32   %phi3618(first) <- %r9882
	br          .L2322

.L2324:
	seteq.32    %r9884 <- %r9841(nret), $1
	phisrc.32   %phi3614(nret) <- %r9841(nret)
	cbr         %r9884, .L2328, .L2329

.L2328:
	push.64*    %r9831(fs)
	push.64*    %r9840
	call.32     %r9887 <- luaK_exp2anyreg
	phisrc.32   %phi3619(first) <- %r9887
	br          .L2322

.L2329:
	push.64*    %r9831(fs)
	push.64*    %r9840
	call        luaK_exp2nextreg
	load.8      %r9891 <- 74[%r9831(fs)]
	cast.32     %r9892 <- (8) %r9891
	phisrc.32   %phi3620(first) <- %r9892
	br          .L2322

.L2322:
	phi.32      %r9894 <- %phi3617(first), %phi3618(first), %phi3619(first), %phi3620(first)
	phi.32      %r9895 <- %phi3612(nret), %phi3613(nret), %phi3614(nret)
	push.64*    %r9831(fs)
	push.32     %r9894
	push.32     %r9895
	call        luaK_ret
	ret


statement:
.L2332:
	<entry-point>
	load.32     %r9897(line) <- 4[%arg1]
	load.32     %r9899 <- 16[%arg1]
	switch.32   %r9899, 258 -> .L2342, 259 -> .L2336, 264 -> .L2337, 265 -> .L2339, 266 -> .L2334, 268 -> .L2340, 272 -> .L2338, 273 -> .L2341, 277 -> .L2335, default -> .L2343

.L2334:
	push.64*    %arg1
	push.32     %r9897(line)
	call        ifstat
	phisrc.32   %phi3621(return) <- $0
	br          .L2344

.L2335:
	push.64*    %arg1
	push.32     %r9897(line)
	call        whilestat
	phisrc.32   %phi3622(return) <- $0
	br          .L2344

.L2336:
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	call        block
	push.64*    %arg1
	push.32     $262
	push.32     $259
	push.32     %r9897(line)
	call        check_match
	phisrc.32   %phi3623(return) <- $0
	br          .L2344

.L2337:
	push.64*    %arg1
	push.32     %r9897(line)
	call        forstat
	phisrc.32   %phi3624(return) <- $0
	br          .L2344

.L2338:
	push.64*    %arg1
	push.32     %r9897(line)
	call        repeatstat
	phisrc.32   %phi3625(return) <- $0
	br          .L2344

.L2339:
	push.64*    %arg1
	push.32     %r9897(line)
	call        funcstat
	phisrc.32   %phi3626(return) <- $0
	br          .L2344

.L2340:
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	push.32     $265
	call.32     %r9917 <- testnext
	cbr         %r9917, .L2345, .L2346

.L2345:
	push.64*    %arg1
	call        localfunc
	br          .L2347

.L2346:
	push.64*    %arg1
	call        localstat
	br          .L2347

.L2347:
	phisrc.32   %phi3627(return) <- $0
	br          .L2344

.L2341:
	push.64*    %arg1
	call        retstat
	phisrc.32   %phi3628(return) <- $1
	br          .L2344

.L2342:
	push.64*    %arg1
	call        luaX_next
	push.64*    %arg1
	call        breakstat
	phisrc.32   %phi3629(return) <- $1
	br          .L2344

.L2343:
	push.64*    %arg1
	call        exprstat
	phisrc.32   %phi3630(return) <- $0
	br          .L2344

.L2344:
	phi.32      %r9902 <- %phi3621(return), %phi3622(return), %phi3623(return), %phi3624(return), %phi3625(return), %phi3626(return), %phi3627(return), %phi3628(return), %phi3629(return), %phi3630(return)
	ret.32      %r9902


chunk:
.L2348:
	<entry-point>
	push.64*    %arg1
	call        enterlevel
	br          .L2353

.L2353:
	load.32     %r9927 <- 16[%arg1]
	push.32     %r9927
	call.32     %r9928 <- block_follow
	cbr         %r9928, .L2351, .L2349

.L2349:
	push.64*    %arg1
	call.32     %r9930 <- statement
	push.64*    %arg1
	push.32     $59
	call.32     %r9932 <- testnext
	load.64*    %r9934 <- 48[%arg1]
	load.8      %r9935 <- 74[%r9934]
	cast.32     %r9936 <- (8) %r9935
	store.32    %r9936 -> 60[%r9934]
	cbr         %r9930, .L2351, .L2353

.L2351:
	load.64*    %r9940 <- 56[%arg1]
	load.16     %r9941 <- 96[%r9940]
	add.16      %r9942 <- %r9941, $-1
	store.16    %r9942 -> 96[%r9940]
	ret


luaV_tonumber:
.L2355:
	<entry-point>
	load.32     %r9944 <- 8[%arg1]
	seteq.32    %r9946 <- %r9944, $3
	cbr         %r9946, .L2356, .L2357

.L2356:
	phisrc.64*  %phi3656(return) <- %arg1
	br          .L2358

.L2357:
	seteq.32    %r9952 <- %r9944, $4
	cbr         %r9952, .L2361, .L2360

.L2361:
	load.64*    %r9954 <- 0[%arg1]
	add.64*     %r9956 <- %r9954, $24
	ptrcast.64* %r9957 <- (64) %r9956
	symaddr.64* %r9958 <- num
	push.64*    %r9957
	push.64*    %r9958
	call.32     %r9959 <- luaO_str2d
	cbr         %r9959, .L2359, .L2360

.L2359:
	load.f64    %r9961 <- 0[num]
	store.f64   %r9961 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	phisrc.64*  %phi3657(return) <- %arg2
	br          .L2358

.L2360:
	phisrc.64*  %phi3658(return) <- $0
	br          .L2358

.L2358:
	phi.64*     %r9948 <- %phi3656(return), %phi3657(return), %phi3658(return)
	ret.64*     %r9948


luaV_tostring:
.L2363:
	<entry-point>
	load.32     %r9966 <- 8[%arg2]
	seteq.32    %r9967 <- %r9966, $3
	cbr         %r9967, .L2365, .L2366

.L2365:
	load.f64    %r9970 <- 0[%arg2]
	symaddr.64* %r9971 <- s
	symaddr.64* %r9972 <- <anon symbol:0x17f8f60>
	push.64*    %r9971
	push.64*    %r9972
	push.f64    %r9970
	call.32     %r9974 <- sprintf
	push.64*    %r9971
	call.64     %r9979 <- strlen
	push.64*    %arg1
	push.64*    %r9971
	push.64     %r9979
	call.64*    %r9980 <- luaS_newlstr
	ptrcast.64* %r9981 <- (64) %r9980
	store.64*   %r9981 -> 0[%arg2]
	store.32    $4 -> 8[%arg2]
	br          .L2366

.L2366:
	ret.32      %r9967


callTMres:
.L2368:
	<entry-point>
	ptrcast.64* %r9985 <- (64) %arg2
	load.64*    %r9987 <- 64[%arg1]
	ptrcast.64* %r9988 <- (64) %r9987
	sub.64      %r9989(result) <- %r9985, %r9988
	load.64*    %r9992 <- 16[%arg1]
	load.f64    %r9994 <- 0[%arg3]
	fpcast.f64  %r9995 <- (64) %r9994
	store.f64   %r9995 -> 0[%r9992]
	load.32     %r9998 <- 8[%arg3]
	store.32    %r9998 -> 8[%r9992]
	load.64*    %r10003 <- 16[%arg1]
	add.64*     %r10004 <- %r10003, $16
	load.f64    %r10006 <- 0[%arg4]
	fpcast.f64  %r10007 <- (64) %r10006
	store.f64   %r10007 -> 0[%r10004]
	load.32     %r10010 <- 8[%arg4]
	store.32    %r10010 -> 24[%r10003]
	load.64*    %r10015 <- 16[%arg1]
	add.64*     %r10016 <- %r10015, $32
	load.f64    %r10018 <- 0[%arg5]
	fpcast.f64  %r10019 <- (64) %r10018
	store.f64   %r10019 -> 0[%r10016]
	load.32     %r10022 <- 8[%arg5]
	store.32    %r10022 -> 40[%r10015]
	load.64*    %r10026 <- 56[%arg1]
	ptrcast.64* %r10027 <- (64) %r10026
	load.64*    %r10029 <- 16[%arg1]
	ptrcast.64* %r10030 <- (64) %r10029
	sub.64      %r10031 <- %r10027, %r10030
	setle.32    %r10032 <- %r10031, $48
	cbr         %r10032, .L2369, .L2371

.L2369:
	push.64*    %arg1
	push.32     $3
	call        luaD_growstack
	br          .L2371

.L2371:
	load.64*    %r10035 <- 16[%arg1]
	cast.64     %r10036 <- (64) %r10035
	add.64      %r10037 <- %r10036, $48
	ptrcast.64* %r10038 <- (64) %r10037
	store.64*   %r10038 -> 16[%arg1]
	add.64*     %r10042 <- %r10038, $-48
	push.64*    %arg1
	push.64*    %r10042
	push.32     $1
	call        luaD_call
	load.64*    %r10044 <- 64[%arg1]
	ptrcast.64* %r10045 <- (64) %r10044
	add.64*     %r10047 <- %r10045, %r9989(result)
	ptrcast.64* %r10048 <- (64) %r10047
	load.64*    %r10050 <- 16[%arg1]
	add.64*     %r10051 <- %r10050, $-16
	store.64*   %r10051 -> 16[%arg1]
	load.f64    %r10056 <- 0[%r10051]
	fpcast.f64  %r10057 <- (64) %r10056
	store.f64   %r10057 -> 0[%r10048]
	load.32     %r10060 <- -8[%r10050]
	store.32    %r10060 -> 8[%r10048]
	ret


callTM:
.L2373:
	<entry-point>
	load.64*    %r10065 <- 16[%arg1]
	load.f64    %r10067 <- 0[%arg2]
	fpcast.f64  %r10068 <- (64) %r10067
	store.f64   %r10068 -> 0[%r10065]
	load.32     %r10071 <- 8[%arg2]
	store.32    %r10071 -> 8[%r10065]
	load.64*    %r10076 <- 16[%arg1]
	add.64*     %r10077 <- %r10076, $16
	load.f64    %r10079 <- 0[%arg3]
	fpcast.f64  %r10080 <- (64) %r10079
	store.f64   %r10080 -> 0[%r10077]
	load.32     %r10083 <- 8[%arg3]
	store.32    %r10083 -> 24[%r10076]
	load.64*    %r10088 <- 16[%arg1]
	add.64*     %r10089 <- %r10088, $32
	load.f64    %r10091 <- 0[%arg4]
	fpcast.f64  %r10092 <- (64) %r10091
	store.f64   %r10092 -> 0[%r10089]
	load.32     %r10095 <- 8[%arg4]
	store.32    %r10095 -> 40[%r10088]
	load.64*    %r10100 <- 16[%arg1]
	add.64*     %r10101 <- %r10100, $48
	load.f64    %r10103 <- 0[%arg5]
	fpcast.f64  %r10104 <- (64) %r10103
	store.f64   %r10104 -> 0[%r10101]
	load.32     %r10107 <- 8[%arg5]
	store.32    %r10107 -> 56[%r10100]
	load.64*    %r10111 <- 56[%arg1]
	ptrcast.64* %r10112 <- (64) %r10111
	load.64*    %r10114 <- 16[%arg1]
	ptrcast.64* %r10115 <- (64) %r10114
	sub.64      %r10116 <- %r10112, %r10115
	setle.32    %r10117 <- %r10116, $64
	cbr         %r10117, .L2374, .L2376

.L2374:
	push.64*    %arg1
	push.32     $4
	call        luaD_growstack
	br          .L2376

.L2376:
	load.64*    %r10120 <- 16[%arg1]
	cast.64     %r10121 <- (64) %r10120
	add.64      %r10122 <- %r10121, $64
	ptrcast.64* %r10123 <- (64) %r10122
	store.64*   %r10123 -> 16[%arg1]
	add.64*     %r10127 <- %r10123, $-64
	push.64*    %arg1
	push.64*    %r10127
	push.32     $0
	call        luaD_call
	ret


luaV_gettable:
.L2378:
	<entry-point>
	phisrc.64*  %phi3697(t) <- %arg2
	phisrc.32   %phi3705(loop) <- $0
	br          .L2382

.L2382:
	phi.32      %r10128(loop) <- %phi3705(loop), %phi3706(loop)
	setlt.32    %r10129 <- %r10128(loop), $100
	cbr         %r10129, .L2379, .L2381

.L2379:
	phi.64*     %r10130(t) <- %phi3697(t), %phi3698(t)
	load.32     %r10131 <- 8[%r10130(t)]
	seteq.32    %r10133 <- %r10131, $5
	cbr         %r10133, .L2383, .L2384

.L2383:
	load.64*    %r10135 <- 0[%r10130(t)]
	push.64*    %r10135
	push.64*    %arg3
	call.64*    %r10139 <- luaH_get
	load.32     %r10141 <- 8[%r10139]
	cbr         %r10141, .L2385, .L2387

.L2387:
	load.64*    %r10145 <- 16[%r10135]
	cbr         %r10145, .L2389, .L2385

.L2389:
	load.8      %r10149 <- 10[%r10145]
	cast.32     %r10150 <- (8) %r10149
	and.32      %r10151 <- %r10150, $1
	cbr         %r10151, .L2385, .L2392

.L2392:
	load.64*    %r10155 <- 32[%arg1]
	load.64*    %r10156 <- 296[%r10155]
	push.64*    %r10145
	push.32     $0
	push.64*    %r10156
	call.64*    %r10157 <- luaT_gettm
	phisrc.64*  %phi3713(tm) <- %r10157
	cbr         %r10157, .L2395, .L2385

.L2385:
	load.f64    %r10164 <- 0[%r10139]
	fpcast.f64  %r10165 <- (64) %r10164
	store.f64   %r10165 -> 0[%arg4]
	load.32     %r10168 <- 8[%r10139]
	store.32    %r10168 -> 8[%arg4]
	br          .L2394

.L2384:
	push.64*    %arg1
	push.64*    %r10130(t)
	push.32     $0
	call.64*    %r10173 <- luaT_gettmbyobj
	load.32     %r10174 <- 8[%r10173]
	phisrc.64*  %phi3714(tm) <- %r10173
	cbr         %r10174, .L2395, .L2396

.L2396:
	symaddr.64* %r10179 <- <anon symbol:0x18d7778>
	push.64*    %arg1
	push.64*    %r10130(t)
	push.64*    %r10179
	call        luaG_typeerror
	br          .L2395

.L2395:
	phi.64*     %r10180(tm) <- %phi3713(tm), %phi3714(tm)
	load.32     %r10181 <- 8[%r10180(tm)]
	seteq.32    %r10183 <- %r10181, $6
	cbr         %r10183, .L2398, .L2399

.L2398:
	push.64*    %arg1
	push.64*    %arg4
	push.64*    %r10180(tm)
	push.64*    %r10130(t)
	push.64*    %arg3
	call        callTMres
	br          .L2394

.L2399:
	phisrc.64*  %phi3698(t) <- %r10180(tm)
	add.32      %r10191 <- %r10128(loop), $1
	phisrc.32   %phi3706(loop) <- %r10191
	br          .L2382

.L2381:
	symaddr.64* %r10193 <- <anon symbol:0x18d7ce8>
	push.64*    %arg1
	push.64*    %r10193
	call        luaG_runerror
	br          .L2394

.L2394:
	ret


luaV_settable:
.L2400:
	<entry-point>
	phisrc.64*  %phi3744(t) <- %arg2
	phisrc.32   %phi3753(loop) <- $0
	br          .L2404

.L2404:
	phi.32      %r10194(loop) <- %phi3753(loop), %phi3754(loop)
	setlt.32    %r10195 <- %r10194(loop), $100
	cbr         %r10195, .L2401, .L2403

.L2401:
	phi.64*     %r10196(t) <- %phi3744(t), %phi3745(t)
	load.32     %r10197 <- 8[%r10196(t)]
	seteq.32    %r10199 <- %r10197, $5
	cbr         %r10199, .L2405, .L2406

.L2405:
	load.64*    %r10201 <- 0[%r10196(t)]
	push.64*    %arg1
	push.64*    %r10201
	push.64*    %arg3
	call.64*    %r10206 <- luaH_set
	load.32     %r10208 <- 8[%r10206]
	cbr         %r10208, .L2407, .L2409

.L2409:
	load.64*    %r10211 <- 16[%r10201]
	cbr         %r10211, .L2411, .L2407

.L2411:
	load.8      %r10215 <- 10[%r10211]
	cast.32     %r10216 <- (8) %r10215
	and.32      %r10217 <- %r10216, $2
	cbr         %r10217, .L2407, .L2414

.L2414:
	load.64*    %r10221 <- 32[%arg1]
	load.64*    %r10222 <- 304[%r10221]
	push.64*    %r10211
	push.32     $1
	push.64*    %r10222
	call.64*    %r10223 <- luaT_gettm
	phisrc.64*  %phi3767(tm) <- %r10223
	cbr         %r10223, .L2421, .L2407

.L2407:
	load.f64    %r10230 <- 0[%arg4]
	fpcast.f64  %r10231 <- (64) %r10230
	store.f64   %r10231 -> 0[%r10206]
	load.32     %r10234 <- 8[%arg4]
	store.32    %r10234 -> 8[%r10206]
	store.8     $0 -> 10[%r10201]
	load.32     %r10239 <- 8[%arg4]
	setge.32    %r10240 <- %r10239, $4
	cbr         %r10240, .L2419, .L2420

.L2419:
	load.64*    %r10242 <- 0[%arg4]
	load.8      %r10243 <- 9[%r10242]
	cast.32     %r10244 <- (8) %r10243
	and.32      %r10245 <- %r10244, $3
	cbr         %r10245, .L2418, .L2420

.L2418:
	ptrcast.64* %r10247 <- (64) %r10201
	load.8      %r10248 <- 9[%r10247]
	cast.32     %r10249 <- (8) %r10248
	and.32      %r10250 <- %r10249, $4
	cbr         %r10250, .L2416, .L2420

.L2416:
	push.64*    %arg1
	push.64*    %r10201
	call        luaC_barrierback
	br          .L2420

.L2406:
	push.64*    %arg1
	push.64*    %r10196(t)
	push.32     $1
	call.64*    %r10255 <- luaT_gettmbyobj
	load.32     %r10256 <- 8[%r10255]
	phisrc.64*  %phi3768(tm) <- %r10255
	cbr         %r10256, .L2421, .L2422

.L2422:
	symaddr.64* %r10261 <- <anon symbol:0x18e26f0>
	push.64*    %arg1
	push.64*    %r10196(t)
	push.64*    %r10261
	call        luaG_typeerror
	br          .L2421

.L2421:
	phi.64*     %r10262(tm) <- %phi3767(tm), %phi3768(tm)
	load.32     %r10263 <- 8[%r10262(tm)]
	seteq.32    %r10265 <- %r10263, $6
	cbr         %r10265, .L2424, .L2425

.L2424:
	push.64*    %arg1
	push.64*    %r10262(tm)
	push.64*    %r10196(t)
	push.64*    %arg3
	push.64*    %arg4
	call        callTM
	br          .L2420

.L2425:
	symaddr.64* %r10272 <- temp
	load.f64    %r10274 <- 0[%r10262(tm)]
	fpcast.f64  %r10275 <- (64) %r10274
	store.f64   %r10275 -> 0[%r10272]
	load.32     %r10278 <- 8[%r10262(tm)]
	store.32    %r10278 -> 8[temp]
	phisrc.64*  %phi3745(t) <- %r10272
	add.32      %r10283 <- %r10194(loop), $1
	phisrc.32   %phi3754(loop) <- %r10283
	br          .L2404

.L2403:
	symaddr.64* %r10285 <- <anon symbol:0x18e3740>
	push.64*    %arg1
	push.64*    %r10285
	call        luaG_runerror
	br          .L2420

.L2420:
	ret


call_binTM:
.L2426:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	push.32     %arg5
	call.64*    %r10289 <- luaT_gettmbyobj
	load.32     %r10291 <- 8[%r10289]
	phisrc.64*  %phi3783(tm) <- %r10289
	cbr         %r10291, .L2428, .L2427

.L2427:
	push.64*    %arg1
	push.64*    %arg3
	push.32     %arg5
	call.64*    %r10297 <- luaT_gettmbyobj
	phisrc.64*  %phi3784(tm) <- %r10297
	br          .L2428

.L2428:
	phi.64*     %r10298(tm) <- %phi3783(tm), %phi3784(tm)
	load.32     %r10299 <- 8[%r10298(tm)]
	setne.32    %r10302 <- %r10299, $0
	cbr         %r10299, .L2430, .L2431

.L2430:
	push.64*    %arg1
	push.64*    %arg4
	push.64*    %r10298(tm)
	push.64*    %arg2
	push.64*    %arg3
	call        callTMres
	br          .L2431

.L2431:
	ret.32      %r10302


get_compTM:
.L2432:
	<entry-point>
	cbr         %arg2, .L2434, .L2439

.L2434:
	load.8      %r10311 <- 10[%arg2]
	cast.32     %r10312 <- (8) %r10311
	shl.32      %r10315 <- $1, %arg4
	and.32      %r10316 <- %r10312, %r10315
	cbr         %r10316, .L2439, .L2437

.L2437:
	load.64*    %r10320 <- 32[%arg1]
	add.64*     %r10321 <- %r10320, $296
	scast.64    %r10323 <- (32) %arg4
	muls.64     %r10324 <- %r10323, $8
	add.64*     %r10325 <- %r10321, %r10324
	load.64*    %r10326 <- 0[%r10325]
	push.64*    %arg2
	push.32     %arg4
	push.64*    %r10326
	call.64*    %r10327 <- luaT_gettm
	cbr         %r10327, .L2440, .L2439

.L2439:
	phisrc.64*  %phi3789(return) <- $0
	br          .L2441

.L2440:
	seteq.32    %r10335 <- %arg2, %arg3
	cbr         %r10335, .L2442, .L2443

.L2442:
	phisrc.64*  %phi3790(return) <- %r10327
	br          .L2441

.L2443:
	cbr         %arg3, .L2445, .L2450

.L2445:
	load.8      %r10340 <- 10[%arg3]
	cast.32     %r10341 <- (8) %r10340
	and.32      %r10345 <- %r10341, %r10315
	cbr         %r10345, .L2450, .L2448

.L2448:
	load.64*    %r10349 <- 32[%arg1]
	add.64*     %r10350 <- %r10349, $296
	add.64*     %r10354 <- %r10350, %r10324
	load.64*    %r10355 <- 0[%r10354]
	push.64*    %arg3
	push.32     %arg4
	push.64*    %r10355
	call.64*    %r10356 <- luaT_gettm
	cbr         %r10356, .L2451, .L2450

.L2450:
	phisrc.64*  %phi3795(return) <- $0
	br          .L2441

.L2451:
	push.64*    %r10327
	push.64*    %r10356
	call.32     %r10363 <- luaO_rawequalObj
	cbr         %r10363, .L2452, .L2453

.L2452:
	phisrc.64*  %phi3796(return) <- %r10327
	br          .L2441

.L2453:
	phisrc.64*  %phi3797(return) <- $0
	br          .L2441

.L2441:
	phi.64*     %r10332 <- %phi3789(return), %phi3790(return), %phi3795(return), %phi3796(return), %phi3797(return)
	ret.64*     %r10332


call_orderTM:
.L2454:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	push.32     %arg4
	call.64*    %r10368 <- luaT_gettmbyobj
	load.32     %r10370 <- 8[%r10368]
	cbr         %r10370, .L2456, .L2455

.L2455:
	phisrc.32   %phi3820(return) <- $0xffffffff
	br          .L2457

.L2456:
	push.64*    %arg1
	push.64*    %arg3
	push.32     %arg4
	call.64*    %r10377 <- luaT_gettmbyobj
	push.64*    %r10368
	push.64*    %r10377
	call.32     %r10380 <- luaO_rawequalObj
	cbr         %r10380, .L2459, .L2458

.L2458:
	phisrc.32   %phi3821(return) <- $0xffffffff
	br          .L2457

.L2459:
	load.64*    %r10383 <- 16[%arg1]
	push.64*    %arg1
	push.64*    %r10383
	push.64*    %r10368
	push.64*    %arg2
	push.64*    %arg3
	call        callTMres
	load.64*    %r10388 <- 16[%arg1]
	load.32     %r10389 <- 8[%r10388]
	cbr         %r10389, .L2461, .L2460

.L2460:
	phisrc.32   %phi3822 <- $1
	br          .L2462

.L2461:
	load.32     %r10393 <- 8[%r10388]
	seteq.32    %r10394 <- %r10393, $1
	cbr         %r10394, .L2463, .L2464

.L2463:
	load.32     %r10397 <- 0[%r10388]
	seteq.32    %r10398 <- %r10397, $0
	phisrc.32   %phi3823 <- %r10398
	br          .L2465

.L2464:
	phisrc.32   %phi3824 <- $0
	br          .L2465

.L2465:
	phi.32      %r10399 <- %phi3823, %phi3824
	phisrc.32   %phi3825 <- %r10399
	br          .L2462

.L2462:
	phi.32      %r10400 <- %phi3822, %phi3825
	seteq.32    %r10401 <- %r10400, $0
	phisrc.32   %phi3826(return) <- %r10401
	br          .L2457

.L2457:
	phi.32      %r10373 <- %phi3820(return), %phi3821(return), %phi3826(return)
	ret.32      %r10373


l_strcmp:
.L2466:
	<entry-point>
	add.64*     %r10403 <- %arg1, $24
	ptrcast.64* %r10404(l) <- (64) %r10403
	load.64     %r10406 <- 16[%arg1]
	add.64*     %r10409 <- %arg2, $24
	ptrcast.64* %r10410(r) <- (64) %r10409
	load.64     %r10412 <- 16[%arg2]
	phisrc.64*  %phi3844(l) <- %r10404(l)
	phisrc.64   %phi3849(ll) <- %r10406
	phisrc.64*  %phi3852(r) <- %r10410(r)
	phisrc.64   %phi3855(lr) <- %r10412
	br          .L2467

.L2467:
	phi.64*     %r10414(l) <- %phi3844(l), %phi3845(l)
	phi.64*     %r10415(r) <- %phi3852(r), %phi3853(r)
	push.64*    %r10414(l)
	push.64*    %r10415(r)
	call.32     %r10416 <- strcoll
	cbr         %r10416, .L2471, .L2472

.L2471:
	phisrc.32   %phi3839(return) <- %r10416
	br          .L2473

.L2472:
	push.64*    %r10414(l)
	call.64     %r10422 <- strlen
	phi.64      %r10424(lr) <- %phi3855(lr), %phi3856(lr)
	seteq.32    %r10425 <- %r10422, %r10424(lr)
	phi.64      %r10427 <- %phi3849(ll), %phi3850(ll)
	cbr         %r10425, .L2475, .L2476

.L2475:
	setne.32    %r10429 <- %r10422, %r10427
	phisrc.32   %phi3840(return) <- %r10429
	br          .L2473

.L2476:
	seteq.32    %r10432 <- %r10422, %r10427
	cbr         %r10432, .L2478, .L2477

.L2478:
	phisrc.32   %phi3841(return) <- $0xffffffff
	br          .L2473

.L2477:
	add.64      %r10434 <- %r10422, $1
	cast.64     %r10437 <- (64) %r10414(l)
	add.64      %r10438 <- %r10437, %r10434
	ptrcast.64* %r10439 <- (64) %r10438
	sub.64      %r10443 <- %r10427, %r10434
	cast.64     %r10447 <- (64) %r10415(r)
	add.64      %r10448 <- %r10447, %r10434
	ptrcast.64* %r10449 <- (64) %r10448
	sub.64      %r10453 <- %r10424(lr), %r10434
	phisrc.64*  %phi3845(l) <- %r10439
	phisrc.64   %phi3850(ll) <- %r10443
	phisrc.64*  %phi3853(r) <- %r10449
	phisrc.64   %phi3856(lr) <- %r10453
	br          .L2467

.L2473:
	phi.32      %r10420 <- %phi3839(return), %phi3840(return), %phi3841(return)
	ret.32      %r10420


luaV_lessthan:
.L2480:
	<entry-point>
	load.32     %r10456 <- 8[%arg2]
	load.32     %r10459 <- 8[%arg3]
	setne.32    %r10461 <- %r10456, %r10459
	cbr         %r10461, .L2481, .L2482

.L2481:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.32     %r10465 <- luaG_ordererror
	phisrc.32   %phi3861(return) <- %r10465
	br          .L2483

.L2482:
	seteq.32    %r10470 <- %r10456, $3
	cbr         %r10470, .L2485, .L2486

.L2485:
	load.f64    %r10472 <- 0[%arg2]
	fpcast.f64  %r10473 <- (64) %r10472
	load.f64    %r10475 <- 0[%arg3]
	fpcast.f64  %r10476 <- (64) %r10475
	setlt.32    %r10477 <- %r10473, %r10476
	phisrc.32   %phi3862(return) <- %r10477
	br          .L2483

.L2486:
	seteq.32    %r10481 <- %r10456, $4
	cbr         %r10481, .L2488, .L2489

.L2488:
	load.64*    %r10483 <- 0[%arg2]
	load.64*    %r10486 <- 0[%arg3]
	push.64*    %r10483
	push.64*    %r10486
	call.32     %r10488 <- l_strcmp
	setlt.32    %r10489 <- %r10488, $0
	phisrc.32   %phi3863(return) <- %r10489
	br          .L2483

.L2489:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	push.32     $13
	call.32     %r10493(res) <- call_orderTM
	setne.32    %r10494 <- %r10493(res), $0xffffffff
	cbr         %r10494, .L2491, .L2484

.L2491:
	phisrc.32   %phi3864(return) <- %r10493(res)
	br          .L2483

.L2484:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.32     %r10499 <- luaG_ordererror
	phisrc.32   %phi3865(return) <- %r10499
	br          .L2483

.L2483:
	phi.32      %r10466 <- %phi3861(return), %phi3862(return), %phi3863(return), %phi3864(return), %phi3865(return)
	ret.32      %r10466


lessequal:
.L2493:
	<entry-point>
	load.32     %r10501 <- 8[%arg2]
	load.32     %r10504 <- 8[%arg3]
	setne.32    %r10506 <- %r10501, %r10504
	cbr         %r10506, .L2494, .L2495

.L2494:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.32     %r10510 <- luaG_ordererror
	phisrc.32   %phi3884(return) <- %r10510
	br          .L2496

.L2495:
	seteq.32    %r10515 <- %r10501, $3
	cbr         %r10515, .L2498, .L2499

.L2498:
	load.f64    %r10517 <- 0[%arg2]
	fpcast.f64  %r10518 <- (64) %r10517
	load.f64    %r10520 <- 0[%arg3]
	fpcast.f64  %r10521 <- (64) %r10520
	setle.32    %r10522 <- %r10518, %r10521
	phisrc.32   %phi3885(return) <- %r10522
	br          .L2496

.L2499:
	seteq.32    %r10526 <- %r10501, $4
	cbr         %r10526, .L2501, .L2502

.L2501:
	load.64*    %r10528 <- 0[%arg2]
	load.64*    %r10531 <- 0[%arg3]
	push.64*    %r10528
	push.64*    %r10531
	call.32     %r10533 <- l_strcmp
	setle.32    %r10534 <- %r10533, $0
	phisrc.32   %phi3886(return) <- %r10534
	br          .L2496

.L2502:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	push.32     $14
	call.32     %r10538(res) <- call_orderTM
	setne.32    %r10539 <- %r10538(res), $0xffffffff
	cbr         %r10539, .L2504, .L2505

.L2504:
	phisrc.32   %phi3887(return) <- %r10538(res)
	br          .L2496

.L2505:
	push.64*    %arg1
	push.64*    %arg3
	push.64*    %arg2
	push.32     $13
	call.32     %r10544(res) <- call_orderTM
	setne.32    %r10545 <- %r10544(res), $0xffffffff
	cbr         %r10545, .L2507, .L2497

.L2507:
	seteq.32    %r10547 <- %r10544(res), $0
	phisrc.32   %phi3888(return) <- %r10547
	br          .L2496

.L2497:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.32     %r10551 <- luaG_ordererror
	phisrc.32   %phi3889(return) <- %r10551
	br          .L2496

.L2496:
	phi.32      %r10511 <- %phi3884(return), %phi3885(return), %phi3886(return), %phi3887(return), %phi3888(return), %phi3889(return)
	ret.32      %r10511


luaV_equalval:
.L2509:
	<entry-point>
	load.32     %r10553 <- 8[%arg2]
	switch.32   %r10553, 0 -> .L2511, 1 -> .L2513, 2 -> .L2514, 3 -> .L2512, 5 -> .L2516, 7 -> .L2515, default -> .L2517

.L2511:
	phisrc.32   %phi3912(return) <- $1
	br          .L2518

.L2512:
	load.f64    %r10556 <- 0[%arg2]
	fpcast.f64  %r10557 <- (64) %r10556
	load.f64    %r10559 <- 0[%arg3]
	fpcast.f64  %r10560 <- (64) %r10559
	seteq.32    %r10561 <- %r10557, %r10560
	phisrc.32   %phi3913(return) <- %r10561
	br          .L2518

.L2513:
	load.32     %r10563 <- 0[%arg2]
	load.32     %r10566 <- 0[%arg3]
	seteq.32    %r10568 <- %r10563, %r10566
	phisrc.32   %phi3914(return) <- %r10568
	br          .L2518

.L2514:
	load.64*    %r10570 <- 0[%arg2]
	load.64*    %r10572 <- 0[%arg3]
	seteq.32    %r10573 <- %r10570, %r10572
	phisrc.32   %phi3915(return) <- %r10573
	br          .L2518

.L2515:
	load.64*    %r10575 <- 0[%arg2]
	load.64*    %r10579 <- 0[%arg3]
	seteq.32    %r10582 <- %r10575, %r10579
	cbr         %r10582, .L2519, .L2520

.L2519:
	phisrc.32   %phi3916(return) <- $1
	br          .L2518

.L2520:
	load.64*    %r10586 <- 16[%r10575]
	load.64*    %r10589 <- 16[%r10579]
	push.64*    %arg1
	push.64*    %r10586
	push.64*    %r10589
	push.32     $4
	call.64*    %r10590(tm) <- get_compTM
	phisrc.64*  %phi3952(tm) <- %r10590(tm)
	br          .L2510

.L2516:
	load.64*    %r10592 <- 0[%arg2]
	load.64*    %r10595 <- 0[%arg3]
	seteq.32    %r10597 <- %r10592, %r10595
	cbr         %r10597, .L2521, .L2522

.L2521:
	phisrc.32   %phi3917(return) <- $1
	br          .L2518

.L2522:
	load.64*    %r10601 <- 16[%r10592]
	load.64*    %r10604 <- 16[%r10595]
	push.64*    %arg1
	push.64*    %r10601
	push.64*    %r10604
	push.32     $4
	call.64*    %r10605 <- get_compTM
	phisrc.64*  %phi3953(tm) <- %r10605
	br          .L2510

.L2517:
	load.64*    %r10607 <- 0[%arg2]
	load.64*    %r10609 <- 0[%arg3]
	seteq.32    %r10610 <- %r10607, %r10609
	phisrc.32   %phi3918(return) <- %r10610
	br          .L2518

.L2510:
	phi.64*     %r10611(tm) <- %phi3952(tm), %phi3953(tm)
	cbr         %r10611(tm), .L2524, .L2523

.L2523:
	phisrc.32   %phi3919(return) <- $0
	br          .L2518

.L2524:
	load.64*    %r10615 <- 16[%arg1]
	push.64*    %arg1
	push.64*    %r10615
	push.64*    %r10611(tm)
	push.64*    %arg2
	push.64*    %arg3
	call        callTMres
	load.64*    %r10620 <- 16[%arg1]
	load.32     %r10621 <- 8[%r10620]
	cbr         %r10621, .L2526, .L2525

.L2525:
	phisrc.32   %phi3920 <- $1
	br          .L2527

.L2526:
	load.32     %r10625 <- 8[%r10620]
	seteq.32    %r10626 <- %r10625, $1
	cbr         %r10626, .L2528, .L2529

.L2528:
	load.32     %r10629 <- 0[%r10620]
	seteq.32    %r10630 <- %r10629, $0
	phisrc.32   %phi3921 <- %r10630
	br          .L2530

.L2529:
	phisrc.32   %phi3922 <- $0
	br          .L2530

.L2530:
	phi.32      %r10631 <- %phi3921, %phi3922
	phisrc.32   %phi3923 <- %r10631
	br          .L2527

.L2527:
	phi.32      %r10632 <- %phi3920, %phi3923
	seteq.32    %r10633 <- %r10632, $0
	phisrc.32   %phi3924(return) <- %r10633
	br          .L2518

.L2518:
	phi.32      %r10554 <- %phi3912(return), %phi3913(return), %phi3914(return), %phi3915(return), %phi3916(return), %phi3917(return), %phi3918(return), %phi3919(return), %phi3924(return)
	ret.32      %r10554


luaV_concat:
.L2531:
	<entry-point>
	phisrc.32   %phi3980(total) <- %arg2
	phisrc.32   %phi3983(total) <- %arg2
	phisrc.32   %phi3986(last) <- %arg3
	br          .L2532

.L2532:
	load.64*    %r10635 <- 24[%arg1]
	phi.32      %r10636(last) <- %phi3986(last), %phi3987(last)
	scast.64    %r10637 <- (32) %r10636(last)
	muls.64     %r10638 <- %r10637, $16
	add.64*     %r10639 <- %r10635, %r10638
	add.64*     %r10640 <- %r10639, $16
	load.32     %r10643 <- -8[%r10639]
	seteq.32    %r10644 <- %r10643, $4
	phisrc.32   %phi4011(n) <- $2
	phisrc.32   %phi4041 <- %r10643
	phisrc.32   %phi4045 <- %r10643
	phisrc.32   %phi4046 <- %r10643
	cbr         %r10644, .L2537, .L2538

.L2538:
	seteq.32    %r10648 <- %r10643, $3
	phisrc.32   %phi4042 <- %r10643
	cbr         %r10648, .L2537, .L2535

.L2537:
	load.32     %r10651 <- 8[%r10639]
	seteq.32    %r10652 <- %r10651, $4
	cbr         %r10652, .L2536, .L2539

.L2539:
	add.64*     %r10655 <- %r10640, $-16
	push.64*    %arg1
	push.64*    %r10655
	call.32     %r10656 <- luaV_tostring
	cbr         %r10656, .L2536, .L2535

.L2535:
	add.64*     %r10659 <- %r10640, $-32
	add.64*     %r10661 <- %r10640, $-16
	push.64*    %arg1
	push.64*    %r10659
	push.64*    %r10661
	push.64*    %r10659
	push.32     $15
	call.32     %r10664 <- call_binTM
	cbr         %r10664, .L2542, .L2540

.L2540:
	add.64*     %r10669 <- %r10640, $-16
	push.64*    %arg1
	push.64*    %r10659
	push.64*    %r10669
	call        luaG_concaterror
	br          .L2542

.L2536:
	load.64*    %r10672 <- 0[%r10639]
	load.64     %r10673 <- 16[%r10672]
	cbr         %r10673, .L2544, .L2543

.L2543:
	load.32     %r10677 <- -8[%r10639]
	seteq.32    %r10678 <- %r10677, $4
	cbr         %r10678, .L2542, .L2546

.L2546:
	add.64*     %r10681 <- %r10640, $-32
	push.64*    %arg1
	push.64*    %r10681
	call.32     %r10682 <- luaV_tostring
	br          .L2542

.L2544:
	phisrc.32   %phi4021(n) <- $1
	phisrc.64   %phi4027(tl) <- %r10673
	phisrc.64   %phi4030(tl) <- %r10673
	br          .L2552

.L2552:
	phi.32      %r10688(n) <- %phi4021(n), %phi4022(n)
	phi.32      %r10689 <- %phi3983(total), %phi3984(total)
	setlt.32    %r10690 <- %r10688(n), %r10689
	phisrc.32   %phi3982(total) <- %r10689
	cbr         %r10690, .L2553, .L2551

.L2553:
	scast.64    %r10693 <- (32) %r10688(n)
	muls.64     %r10694 <- %r10693, $16
	sub.64*     %r10695 <- %r10640, %r10694
	load.32     %r10697 <- -8[%r10695]
	seteq.32    %r10698 <- %r10697, $4
	cbr         %r10698, .L2549, .L2554

.L2554:
	add.64*     %r10705 <- %r10695, $-16
	push.64*    %arg1
	push.64*    %r10705
	call.32     %r10706 <- luaV_tostring
	cbr         %r10706, .L2549, .L2551

.L2549:
	load.64*    %r10713 <- -16[%r10695]
	load.64     %r10714 <- 16[%r10713]
	phi.64      %r10716(tl) <- %phi4030(tl), %phi4031(tl)
	sub.64      %r10717 <- $-3, %r10716(tl)
	setae.32    %r10718 <- %r10714, %r10717
	cbr         %r10718, .L2555, .L2556

.L2555:
	symaddr.64* %r10720 <- <anon symbol:0x18f3590>
	push.64*    %arg1
	push.64*    %r10720
	call        luaG_runerror
	br          .L2556

.L2556:
	add.64      %r10724 <- %r10716(tl), %r10714
	phisrc.64   %phi4028(tl) <- %r10724
	phisrc.64   %phi4031(tl) <- %r10724
	add.32      %r10727 <- %r10688(n), $1
	phisrc.32   %phi4022(n) <- %r10727
	br          .L2552

.L2551:
	load.64*    %r10730 <- 32[%arg1]
	add.64*     %r10731 <- %r10730, $88
	phi.64      %r10732 <- %phi4027(tl), %phi4028(tl)
	push.64*    %arg1
	push.64*    %r10731
	push.64     %r10732
	call.64*    %r10733(buffer) <- luaZ_openspace
	phisrc.64   %phi4025(tl) <- $0
	phisrc.32   %phi4038(i) <- %r10688(n)
	br          .L2560

.L2560:
	phi.32      %r10735(i) <- %phi4038(i), %phi4039(i)
	setgt.32    %r10736 <- %r10735(i), $0
	phi.64      %r10745 <- %phi4025(tl), %phi4026(tl)
	cbr         %r10736, .L2557, .L2559

.L2557:
	scast.64    %r10739 <- (32) %r10735(i)
	muls.64     %r10740 <- %r10739, $16
	sub.64*     %r10741 <- %r10640, %r10740
	load.64*    %r10742 <- 0[%r10741]
	load.64     %r10743 <- 16[%r10742]
	add.64*     %r10746 <- %r10733(buffer), %r10745
	cast.64*    %r10747 <- (64) %r10746
	add.64*     %r10755 <- %r10742, $24
	ptrcast.64* %r10756 <- (64) %r10755
	cast.64*    %r10757 <- (64) %r10756
	push.64*    %r10747
	push.64*    %r10757
	push.64     %r10743
	call.64*    %r10759 <- memcpy
	add.64      %r10763 <- %r10745, %r10743
	phisrc.64   %phi4026(tl) <- %r10763
	add.32      %r10766 <- %r10735(i), $-1
	phisrc.32   %phi4039(i) <- %r10766
	br          .L2560

.L2559:
	scast.64    %r10769 <- (32) %r10688(n)
	muls.64     %r10770 <- %r10769, $16
	sub.64*     %r10771 <- %r10640, %r10770
	push.64*    %arg1
	push.64*    %r10733(buffer)
	push.64     %r10745
	call.64*    %r10775 <- luaS_newlstr
	ptrcast.64* %r10776 <- (64) %r10775
	store.64*   %r10776 -> 0[%r10771]
	store.32    $4 -> 8[%r10771]
	phisrc.32   %phi4012(n) <- %r10688(n)
	br          .L2542

.L2542:
	phi.32      %r10779 <- %phi4011(n), %phi4012(n)
	add.32      %r10780 <- %r10779, $-1
	phi.32      %r10781 <- %phi3980(total), %phi3981(total), %phi3982(total)
	sub.32      %r10783 <- %r10781, %r10780
	sub.32      %r10789 <- %r10636(last), %r10780
	phisrc.32   %phi3981(total) <- %r10783
	phisrc.32   %phi3984(total) <- %r10783
	phisrc.32   %phi3987(last) <- %r10789
	setgt.32    %r10792 <- %r10783, $1
	cbr         %r10792, .L2532, .L2534

.L2534:
	ret


Arith:
.L2561:
	<entry-point>
	symaddr.64* %r10794 <- tempb
	push.64*    %arg3
	push.64*    %r10794
	call.64*    %r10795(b) <- luaV_tonumber
	cbr         %r10795(b), .L2564, .L2563

.L2564:
	symaddr.64* %r10798 <- tempc
	push.64*    %arg4
	push.64*    %r10798
	call.64*    %r10799(c) <- luaV_tonumber
	cbr         %r10799(c), .L2562, .L2563

.L2562:
	load.f64    %r10802 <- 0[%r10795(b)]
	fpcast.f64  %r10803(nb) <- (64) %r10802
	load.f64    %r10805 <- 0[%r10799(c)]
	fpcast.f64  %r10806(nc) <- (64) %r10805
	divu.f64    %r10829 <- %r10803(nb), %r10806(nc)
	switch.32   %arg5, 5 -> .L2566, 6 -> .L2567, 7 -> .L2568, 8 -> .L2569, 9 -> .L2570, 10 -> .L2571, 11 -> .L2572, default -> .L2574

.L2566:
	add.f64     %r10811 <- %r10803(nb), %r10806(nc)
	store.f64   %r10811 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2574

.L2567:
	sub.f64     %r10817 <- %r10803(nb), %r10806(nc)
	store.f64   %r10817 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2574

.L2568:
	mulu.f64    %r10823 <- %r10803(nb), %r10806(nc)
	store.f64   %r10823 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2574

.L2569:
	store.f64   %r10829 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2574

.L2570:
	push.f64    %r10829
	call.f64    %r10837 <- floor
	mulu.f64    %r10839 <- %r10837, %r10806(nc)
	sub.f64     %r10840 <- %r10803(nb), %r10839
	store.f64   %r10840 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2574

.L2571:
	push.f64    %r10803(nb)
	push.f64    %r10806(nc)
	call.f64    %r10846 <- pow
	store.f64   %r10846 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2574

.L2572:
	neg.f64     %r10851 <- %r10803(nb)
	store.f64   %r10851 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2574

.L2563:
	push.64*    %arg1
	push.64*    %arg3
	push.64*    %arg4
	push.64*    %arg2
	push.32     %arg5
	call.32     %r10859 <- call_binTM
	cbr         %r10859, .L2574, .L2575

.L2575:
	push.64*    %arg1
	push.64*    %arg3
	push.64*    %arg4
	call        luaG_aritherror
	br          .L2574

.L2574:
	ret


luaV_execute:
.L2577:
	<entry-point>
	phisrc.32   %phi4731(nexeccalls) <- %arg2
	phisrc.32   %phi4734(nexeccalls) <- %arg2
	br          .L2578

.L2578:
	load.64*    %r10864(pc) <- 48[%arg1]
	load.64*    %r10866 <- 40[%arg1]
	load.64*    %r10867 <- 8[%r10866]
	load.64*    %r10868 <- 0[%r10867]
	load.64*    %r10872(base) <- 24[%arg1]
	load.64*    %r10874 <- 32[%r10868]
	load.64*    %r10875(k) <- 16[%r10874]
	phisrc.64*  %phi4792(pc) <- %r10864(pc)
	phisrc.64*  %phi4873(base) <- %r10872(base)
	phisrc.64*  %phi5555 <- %r10874
	phisrc.64*  %phi5556 <- %r10866
	phisrc.64*  %phi5557 <- %r10874
	phisrc.64*  %phi5558 <- %r10866
	phisrc.64*  %phi5561 <- %r10874
	phisrc.64*  %phi5562 <- %r10866
	phisrc.64*  %phi5563 <- %r10874
	phisrc.64*  %phi5564 <- %r10866
	br          .L2579

.L2579:
	phi.64*     %r10876 <- %phi4792(pc), %phi4793(pc), %phi4794(pc), %phi4795(pc), %phi4796(pc), %phi4797(pc), %phi4798(pc), %phi4799(pc), %phi4800(pc), %phi4801(pc), %phi4802(pc), %phi4803(pc), %phi4804(pc), %phi4805(pc)
	add.64*     %r10877(pc) <- %r10876, $4
	load.32     %r10878 <- 0[%r10876]
	phi.64*     %r10879(base) <- %phi4873(base), %phi4874(base), %phi4875(base), %phi4876(base), %phi4877(base), %phi4878(base), %phi4879(base), %phi4880(base), %phi4881(base), %phi4882(base), %phi4883(base), %phi4884(base), %phi4885(base), %phi4886(base), %phi4887(base), %phi4888(base), %phi4889(base), %phi4890(base), %phi4891(base), %phi4892(base), %phi4893(base), %phi4894(base), %phi4895(base), %phi4896(base)
	lsr.32      %r10882 <- %r10878, $6
	and.32      %r10883 <- %r10882, $255
	scast.64    %r10885 <- (32) %r10883
	muls.64     %r10886 <- %r10885, $16
	add.64*     %r10887(ra) <- %r10879(base), %r10886
	and.32      %r10891 <- %r10878, $63
	phisrc.64*  %phi4744(pc) <- %r10877(pc)
	phisrc.64*  %phi4757(pc) <- %r10877(pc)
	phisrc.64*  %phi4760(pc) <- %r10877(pc)
	phisrc.64*  %phi4793(pc) <- %r10877(pc)
	phisrc.64*  %phi5334(ra) <- %r10887(ra)
	phisrc.64*  %phi5337(ra) <- %r10887(ra)
	lsr.32      %r10914 <- %r10878, $14
	lsr.32      %r10896 <- %r10878, $23
	add.64*     %r11213 <- %r10887(ra), $16
	add.64*     %r12444(pstep) <- %r10887(ra), $32
	and.32      %r10933 <- %r10896, $511
	and.32      %r10915 <- %r10914, $0x3ffff
	add.64*     %r10964 <- %r10868, $40
	and.32      %r11020 <- %r10914, $256
	and.32      %r11117 <- %r10896, $256
	and.32      %r10940 <- %r10914, $511
	switch.32   %r10891, 0 -> .L2584, 1 -> .L2585, 2 -> .L2586, 3 -> .L2587, 4 -> .L2588, 5 -> .L2589, 6 -> .L2590, 7 -> .L2591, 8 -> .L2592, 9 -> .L2593, 10 -> .L2594, 11 -> .L2595, 12 -> .L2596, 13 -> .L2597, 14 -> .L2598, 15 -> .L2599, 16 -> .L2600, 17 -> .L2601, 18 -> .L2602, 19 -> .L2603, 20 -> .L2604, 21 -> .L2605, 22 -> .L2606, 23 -> .L2607, 24 -> .L2608, 25 -> .L2609, 26 -> .L2610, 27 -> .L2611, 28 -> .L2612, 29 -> .L2613, 30 -> .L2614, 31 -> .L2615, 32 -> .L2616, 33 -> .L2617, 34 -> .L2618, 35 -> .L2619, 36 -> .L2620, 37 -> .L2621, default -> .L2579

.L2584:
	scast.64    %r10899 <- (32) %r10933
	muls.64     %r10900 <- %r10899, $16
	add.64*     %r10901 <- %r10879(base), %r10900
	load.f64    %r10904 <- 0[%r10901]
	fpcast.f64  %r10905 <- (64) %r10904
	store.f64   %r10905 -> 0[%r10887(ra)]
	load.32     %r10908 <- 8[%r10901]
	store.32    %r10908 -> 8[%r10887(ra)]
	br          .L2579

.L2585:
	scast.64    %r10917 <- (32) %r10915
	muls.64     %r10918 <- %r10917, $16
	add.64*     %r10919 <- %r10875(k), %r10918
	load.f64    %r10922 <- 0[%r10919]
	fpcast.f64  %r10923 <- (64) %r10922
	store.f64   %r10923 -> 0[%r10887(ra)]
	load.32     %r10926 <- 8[%r10919]
	store.32    %r10926 -> 8[%r10887(ra)]
	br          .L2579

.L2586:
	store.32    %r10933 -> 0[%r10887(ra)]
	store.32    $1 -> 8[%r10887(ra)]
	cbr         %r10940, .L2622, .L2579

.L2622:
	add.64*     %r10943 <- %r10877(pc), $4
	phisrc.64*  %phi4794(pc) <- %r10943
	br          .L2579

.L2587:
	scast.64    %r10950 <- (32) %r10933
	muls.64     %r10951 <- %r10950, $16
	add.64*     %r10952(rb) <- %r10879(base), %r10951
	phisrc.64*  %phi5407(rb) <- %r10952(rb)
	br          .L2624

.L2624:
	phi.64*     %r10953 <- %phi5407(rb), %phi5408(rb)
	add.64*     %r10954(rb) <- %r10953, $-16
	store.32    $0 -> 8[%r10953]
	phisrc.64*  %phi5408(rb) <- %r10954(rb)
	setae.32    %r10957 <- %r10954(rb), %r10887(ra)
	cbr         %r10957, .L2624, .L2579

.L2588:
	scast.64    %r10966 <- (32) %r10933
	muls.64     %r10967 <- %r10966, $8
	add.64*     %r10968 <- %r10964, %r10967
	load.64*    %r10969 <- 0[%r10968]
	load.64*    %r10970 <- 16[%r10969]
	load.f64    %r10973 <- 0[%r10970]
	fpcast.f64  %r10974 <- (64) %r10973
	store.f64   %r10974 -> 0[%r10887(ra)]
	load.32     %r10977 <- 8[%r10970]
	store.32    %r10977 -> 8[%r10887(ra)]
	br          .L2579

.L2589:
	scast.64    %r10986 <- (32) %r10915
	muls.64     %r10987 <- %r10986, $16
	add.64*     %r10988 <- %r10875(k), %r10987
	load.64*    %r10991 <- 24[%r10868]
	ptrcast.64* %r10992 <- (64) %r10991
	store.64*   %r10992 -> 0[g]
	store.32    $5 -> 8[g]
	store.64*   %r10877(pc) -> 48[%arg1]
	symaddr.64* %r10998 <- g
	push.64*    %arg1
	push.64*    %r10998
	push.64*    %r10988
	push.64*    %r10887(ra)
	call        luaV_gettable
	load.64*    %r11002 <- 24[%arg1]
	phisrc.64*  %phi4874(base) <- %r11002
	br          .L2579

.L2590:
	store.64*   %r10877(pc) -> 48[%arg1]
	scast.64    %r11012 <- (32) %r10933
	muls.64     %r11013 <- %r11012, $16
	add.64*     %r11014 <- %r10879(base), %r11013
	cbr         %r11020, .L2627, .L2628

.L2627:
	and.32      %r11028 <- %r10914, $255
	scast.64    %r11029 <- (32) %r11028
	muls.64     %r11030 <- %r11029, $16
	add.64*     %r11031 <- %r10875(k), %r11030
	phisrc.64*  %phi4080 <- %r11031
	br          .L2629

.L2628:
	scast.64    %r11038 <- (32) %r10940
	muls.64     %r11039 <- %r11038, $16
	add.64*     %r11040 <- %r10879(base), %r11039
	ptrcast.64* %r11041 <- (64) %r11040
	phisrc.64*  %phi4081 <- %r11041
	br          .L2629

.L2629:
	phi.64*     %r11042 <- %phi4080, %phi4081
	push.64*    %arg1
	push.64*    %r11014
	push.64*    %r11042
	push.64*    %r10887(ra)
	call        luaV_gettable
	load.64*    %r11045 <- 24[%arg1]
	phisrc.64*  %phi4875(base) <- %r11045
	br          .L2579

.L2591:
	load.64*    %r11048 <- 24[%r10868]
	ptrcast.64* %r11049 <- (64) %r11048
	store.64*   %r11049 -> 0[g]
	store.32    $5 -> 8[g]
	store.64*   %r10877(pc) -> 48[%arg1]
	symaddr.64* %r11055 <- g
	scast.64    %r11062 <- (32) %r10915
	muls.64     %r11063 <- %r11062, $16
	add.64*     %r11064 <- %r10875(k), %r11063
	push.64*    %arg1
	push.64*    %r11055
	push.64*    %r11064
	push.64*    %r10887(ra)
	call        luaV_settable
	load.64*    %r11067 <- 24[%arg1]
	phisrc.64*  %phi4876(base) <- %r11067
	br          .L2579

.L2592:
	scast.64    %r11075 <- (32) %r10933
	muls.64     %r11076 <- %r11075, $8
	add.64*     %r11077 <- %r10964, %r11076
	load.64*    %r11078 <- 0[%r11077]
	load.64*    %r11081 <- 16[%r11078]
	load.f64    %r11083 <- 0[%r10887(ra)]
	fpcast.f64  %r11084 <- (64) %r11083
	store.f64   %r11084 -> 0[%r11081]
	load.32     %r11087 <- 8[%r10887(ra)]
	store.32    %r11087 -> 8[%r11081]
	load.32     %r11091 <- 8[%r10887(ra)]
	setge.32    %r11092 <- %r11091, $4
	cbr         %r11092, .L2633, .L2579

.L2633:
	load.64*    %r11094 <- 0[%r10887(ra)]
	load.8      %r11095 <- 9[%r11094]
	cast.32     %r11096 <- (8) %r11095
	and.32      %r11097 <- %r11096, $3
	cbr         %r11097, .L2632, .L2579

.L2632:
	ptrcast.64* %r11099 <- (64) %r11078
	load.8      %r11100 <- 9[%r11099]
	cast.32     %r11101 <- (8) %r11100
	and.32      %r11102 <- %r11101, $4
	cbr         %r11102, .L2630, .L2579

.L2630:
	push.64*    %arg1
	push.64*    %r11099
	push.64*    %r11094
	call        luaC_barrierf
	br          .L2579

.L2593:
	store.64*   %r10877(pc) -> 48[%arg1]
	cbr         %r11117, .L2634, .L2635

.L2634:
	and.32      %r11125 <- %r10896, $255
	scast.64    %r11126 <- (32) %r11125
	muls.64     %r11127 <- %r11126, $16
	add.64*     %r11128 <- %r10875(k), %r11127
	phisrc.64*  %phi4082 <- %r11128
	br          .L2636

.L2635:
	scast.64    %r11135 <- (32) %r10933
	muls.64     %r11136 <- %r11135, $16
	add.64*     %r11137 <- %r10879(base), %r11136
	ptrcast.64* %r11138 <- (64) %r11137
	phisrc.64*  %phi4083 <- %r11138
	br          .L2636

.L2636:
	phi.64*     %r11139 <- %phi4082, %phi4083
	cbr         %r11020, .L2637, .L2638

.L2637:
	and.32      %r11153 <- %r10914, $255
	scast.64    %r11154 <- (32) %r11153
	muls.64     %r11155 <- %r11154, $16
	add.64*     %r11156 <- %r10875(k), %r11155
	phisrc.64*  %phi4084 <- %r11156
	br          .L2639

.L2638:
	scast.64    %r11163 <- (32) %r10940
	muls.64     %r11164 <- %r11163, $16
	add.64*     %r11165 <- %r10879(base), %r11164
	ptrcast.64* %r11166 <- (64) %r11165
	phisrc.64*  %phi4085 <- %r11166
	br          .L2639

.L2639:
	phi.64*     %r11167 <- %phi4084, %phi4085
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11139
	push.64*    %r11167
	call        luaV_settable
	load.64*    %r11169 <- 24[%arg1]
	phisrc.64*  %phi4877(base) <- %r11169
	br          .L2579

.L2594:
	push.32     %r10933
	call.32     %r11183 <- luaO_fb2int
	push.32     %r10940
	call.32     %r11185 <- luaO_fb2int
	push.64*    %arg1
	push.32     %r11183
	push.32     %r11185
	call.64*    %r11186 <- luaH_new
	ptrcast.64* %r11187 <- (64) %r11186
	store.64*   %r11187 -> 0[%r10887(ra)]
	store.32    $5 -> 8[%r10887(ra)]
	store.64*   %r10877(pc) -> 48[%arg1]
	load.64*    %r11193 <- 32[%arg1]
	load.64     %r11194 <- 120[%r11193]
	load.64     %r11197 <- 112[%r11193]
	setae.32    %r11198 <- %r11194, %r11197
	cbr         %r11198, .L2640, .L2641

.L2640:
	push.64*    %arg1
	call        luaC_step
	br          .L2641

.L2641:
	load.64*    %r11201 <- 24[%arg1]
	phisrc.64*  %phi4878(base) <- %r11201
	br          .L2579

.L2595:
	scast.64    %r11208 <- (32) %r10933
	muls.64     %r11209 <- %r11208, $16
	add.64*     %r11210 <- %r10879(base), %r11209
	load.f64    %r11215 <- 0[%r11210]
	fpcast.f64  %r11216 <- (64) %r11215
	store.f64   %r11216 -> 0[%r11213]
	load.32     %r11219 <- 8[%r11210]
	store.32    %r11219 -> 24[%r10887(ra)]
	store.64*   %r10877(pc) -> 48[%arg1]
	cbr         %r11020, .L2642, .L2643

.L2642:
	and.32      %r11239 <- %r10914, $255
	scast.64    %r11240 <- (32) %r11239
	muls.64     %r11241 <- %r11240, $16
	add.64*     %r11242 <- %r10875(k), %r11241
	phisrc.64*  %phi4086 <- %r11242
	br          .L2644

.L2643:
	scast.64    %r11249 <- (32) %r10940
	muls.64     %r11250 <- %r11249, $16
	add.64*     %r11251 <- %r10879(base), %r11250
	ptrcast.64* %r11252 <- (64) %r11251
	phisrc.64*  %phi4087 <- %r11252
	br          .L2644

.L2644:
	phi.64*     %r11253 <- %phi4086, %phi4087
	push.64*    %arg1
	push.64*    %r11210
	push.64*    %r11253
	push.64*    %r10887(ra)
	call        luaV_gettable
	load.64*    %r11256 <- 24[%arg1]
	phisrc.64*  %phi4879(base) <- %r11256
	br          .L2579

.L2596:
	cbr         %r11117, .L2645, .L2646

.L2645:
	and.32      %r11270 <- %r10896, $255
	scast.64    %r11271 <- (32) %r11270
	muls.64     %r11272 <- %r11271, $16
	add.64*     %r11273 <- %r10875(k), %r11272
	phisrc.64*  %phi4088 <- %r11273
	br          .L2647

.L2646:
	scast.64    %r11280 <- (32) %r10933
	muls.64     %r11281 <- %r11280, $16
	add.64*     %r11282 <- %r10879(base), %r11281
	ptrcast.64* %r11283 <- (64) %r11282
	phisrc.64*  %phi4089 <- %r11283
	br          .L2647

.L2647:
	phi.64*     %r11284(rb) <- %phi4088, %phi4089
	cbr         %r11020, .L2648, .L2649

.L2648:
	and.32      %r11298 <- %r10914, $255
	scast.64    %r11299 <- (32) %r11298
	muls.64     %r11300 <- %r11299, $16
	add.64*     %r11301 <- %r10875(k), %r11300
	phisrc.64*  %phi4090 <- %r11301
	br          .L2650

.L2649:
	scast.64    %r11308 <- (32) %r10940
	muls.64     %r11309 <- %r11308, $16
	add.64*     %r11310 <- %r10879(base), %r11309
	ptrcast.64* %r11311 <- (64) %r11310
	phisrc.64*  %phi4091 <- %r11311
	br          .L2650

.L2650:
	phi.64*     %r11312(rc) <- %phi4090, %phi4091
	load.32     %r11314 <- 8[%r11284(rb)]
	seteq.32    %r11315 <- %r11314, $3
	cbr         %r11315, .L2653, .L2652

.L2653:
	load.32     %r11317 <- 8[%r11312(rc)]
	seteq.32    %r11318 <- %r11317, $3
	cbr         %r11318, .L2651, .L2652

.L2651:
	load.f64    %r11320 <- 0[%r11284(rb)]
	load.f64    %r11322 <- 0[%r11312(rc)]
	add.f64     %r11326 <- %r11320, %r11322
	store.f64   %r11326 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2652:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11284(rb)
	push.64*    %r11312(rc)
	push.32     $5
	call        Arith
	load.64*    %r11336 <- 24[%arg1]
	phisrc.64*  %phi4880(base) <- %r11336
	br          .L2579

.L2597:
	cbr         %r11117, .L2655, .L2656

.L2655:
	and.32      %r11350 <- %r10896, $255
	scast.64    %r11351 <- (32) %r11350
	muls.64     %r11352 <- %r11351, $16
	add.64*     %r11353 <- %r10875(k), %r11352
	phisrc.64*  %phi4092 <- %r11353
	br          .L2657

.L2656:
	scast.64    %r11360 <- (32) %r10933
	muls.64     %r11361 <- %r11360, $16
	add.64*     %r11362 <- %r10879(base), %r11361
	ptrcast.64* %r11363 <- (64) %r11362
	phisrc.64*  %phi4093 <- %r11363
	br          .L2657

.L2657:
	phi.64*     %r11364(rb) <- %phi4092, %phi4093
	cbr         %r11020, .L2658, .L2659

.L2658:
	and.32      %r11378 <- %r10914, $255
	scast.64    %r11379 <- (32) %r11378
	muls.64     %r11380 <- %r11379, $16
	add.64*     %r11381 <- %r10875(k), %r11380
	phisrc.64*  %phi4094 <- %r11381
	br          .L2660

.L2659:
	scast.64    %r11388 <- (32) %r10940
	muls.64     %r11389 <- %r11388, $16
	add.64*     %r11390 <- %r10879(base), %r11389
	ptrcast.64* %r11391 <- (64) %r11390
	phisrc.64*  %phi4095 <- %r11391
	br          .L2660

.L2660:
	phi.64*     %r11392(rc) <- %phi4094, %phi4095
	load.32     %r11394 <- 8[%r11364(rb)]
	seteq.32    %r11395 <- %r11394, $3
	cbr         %r11395, .L2663, .L2662

.L2663:
	load.32     %r11397 <- 8[%r11392(rc)]
	seteq.32    %r11398 <- %r11397, $3
	cbr         %r11398, .L2661, .L2662

.L2661:
	load.f64    %r11400 <- 0[%r11364(rb)]
	load.f64    %r11402 <- 0[%r11392(rc)]
	sub.f64     %r11406 <- %r11400, %r11402
	store.f64   %r11406 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2662:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11364(rb)
	push.64*    %r11392(rc)
	push.32     $6
	call        Arith
	load.64*    %r11416 <- 24[%arg1]
	phisrc.64*  %phi4881(base) <- %r11416
	br          .L2579

.L2598:
	cbr         %r11117, .L2665, .L2666

.L2665:
	and.32      %r11430 <- %r10896, $255
	scast.64    %r11431 <- (32) %r11430
	muls.64     %r11432 <- %r11431, $16
	add.64*     %r11433 <- %r10875(k), %r11432
	phisrc.64*  %phi4096 <- %r11433
	br          .L2667

.L2666:
	scast.64    %r11440 <- (32) %r10933
	muls.64     %r11441 <- %r11440, $16
	add.64*     %r11442 <- %r10879(base), %r11441
	ptrcast.64* %r11443 <- (64) %r11442
	phisrc.64*  %phi4097 <- %r11443
	br          .L2667

.L2667:
	phi.64*     %r11444(rb) <- %phi4096, %phi4097
	cbr         %r11020, .L2668, .L2669

.L2668:
	and.32      %r11458 <- %r10914, $255
	scast.64    %r11459 <- (32) %r11458
	muls.64     %r11460 <- %r11459, $16
	add.64*     %r11461 <- %r10875(k), %r11460
	phisrc.64*  %phi4098 <- %r11461
	br          .L2670

.L2669:
	scast.64    %r11468 <- (32) %r10940
	muls.64     %r11469 <- %r11468, $16
	add.64*     %r11470 <- %r10879(base), %r11469
	ptrcast.64* %r11471 <- (64) %r11470
	phisrc.64*  %phi4099 <- %r11471
	br          .L2670

.L2670:
	phi.64*     %r11472(rc) <- %phi4098, %phi4099
	load.32     %r11474 <- 8[%r11444(rb)]
	seteq.32    %r11475 <- %r11474, $3
	cbr         %r11475, .L2673, .L2672

.L2673:
	load.32     %r11477 <- 8[%r11472(rc)]
	seteq.32    %r11478 <- %r11477, $3
	cbr         %r11478, .L2671, .L2672

.L2671:
	load.f64    %r11480 <- 0[%r11444(rb)]
	load.f64    %r11482 <- 0[%r11472(rc)]
	mulu.f64    %r11486 <- %r11480, %r11482
	store.f64   %r11486 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2672:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11444(rb)
	push.64*    %r11472(rc)
	push.32     $7
	call        Arith
	load.64*    %r11496 <- 24[%arg1]
	phisrc.64*  %phi4882(base) <- %r11496
	br          .L2579

.L2599:
	cbr         %r11117, .L2675, .L2676

.L2675:
	and.32      %r11510 <- %r10896, $255
	scast.64    %r11511 <- (32) %r11510
	muls.64     %r11512 <- %r11511, $16
	add.64*     %r11513 <- %r10875(k), %r11512
	phisrc.64*  %phi4100 <- %r11513
	br          .L2677

.L2676:
	scast.64    %r11520 <- (32) %r10933
	muls.64     %r11521 <- %r11520, $16
	add.64*     %r11522 <- %r10879(base), %r11521
	ptrcast.64* %r11523 <- (64) %r11522
	phisrc.64*  %phi4101 <- %r11523
	br          .L2677

.L2677:
	phi.64*     %r11524(rb) <- %phi4100, %phi4101
	cbr         %r11020, .L2678, .L2679

.L2678:
	and.32      %r11538 <- %r10914, $255
	scast.64    %r11539 <- (32) %r11538
	muls.64     %r11540 <- %r11539, $16
	add.64*     %r11541 <- %r10875(k), %r11540
	phisrc.64*  %phi4102 <- %r11541
	br          .L2680

.L2679:
	scast.64    %r11548 <- (32) %r10940
	muls.64     %r11549 <- %r11548, $16
	add.64*     %r11550 <- %r10879(base), %r11549
	ptrcast.64* %r11551 <- (64) %r11550
	phisrc.64*  %phi4103 <- %r11551
	br          .L2680

.L2680:
	phi.64*     %r11552(rc) <- %phi4102, %phi4103
	load.32     %r11554 <- 8[%r11524(rb)]
	seteq.32    %r11555 <- %r11554, $3
	cbr         %r11555, .L2683, .L2682

.L2683:
	load.32     %r11557 <- 8[%r11552(rc)]
	seteq.32    %r11558 <- %r11557, $3
	cbr         %r11558, .L2681, .L2682

.L2681:
	load.f64    %r11560 <- 0[%r11524(rb)]
	load.f64    %r11562 <- 0[%r11552(rc)]
	divu.f64    %r11566 <- %r11560, %r11562
	store.f64   %r11566 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2682:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11524(rb)
	push.64*    %r11552(rc)
	push.32     $8
	call        Arith
	load.64*    %r11576 <- 24[%arg1]
	phisrc.64*  %phi4883(base) <- %r11576
	br          .L2579

.L2600:
	cbr         %r11117, .L2685, .L2686

.L2685:
	and.32      %r11590 <- %r10896, $255
	scast.64    %r11591 <- (32) %r11590
	muls.64     %r11592 <- %r11591, $16
	add.64*     %r11593 <- %r10875(k), %r11592
	phisrc.64*  %phi4104 <- %r11593
	br          .L2687

.L2686:
	scast.64    %r11600 <- (32) %r10933
	muls.64     %r11601 <- %r11600, $16
	add.64*     %r11602 <- %r10879(base), %r11601
	ptrcast.64* %r11603 <- (64) %r11602
	phisrc.64*  %phi4105 <- %r11603
	br          .L2687

.L2687:
	phi.64*     %r11604(rb) <- %phi4104, %phi4105
	cbr         %r11020, .L2688, .L2689

.L2688:
	and.32      %r11618 <- %r10914, $255
	scast.64    %r11619 <- (32) %r11618
	muls.64     %r11620 <- %r11619, $16
	add.64*     %r11621 <- %r10875(k), %r11620
	phisrc.64*  %phi4106 <- %r11621
	br          .L2690

.L2689:
	scast.64    %r11628 <- (32) %r10940
	muls.64     %r11629 <- %r11628, $16
	add.64*     %r11630 <- %r10879(base), %r11629
	ptrcast.64* %r11631 <- (64) %r11630
	phisrc.64*  %phi4107 <- %r11631
	br          .L2690

.L2690:
	phi.64*     %r11632(rc) <- %phi4106, %phi4107
	load.32     %r11634 <- 8[%r11604(rb)]
	seteq.32    %r11635 <- %r11634, $3
	cbr         %r11635, .L2693, .L2692

.L2693:
	load.32     %r11637 <- 8[%r11632(rc)]
	seteq.32    %r11638 <- %r11637, $3
	cbr         %r11638, .L2691, .L2692

.L2691:
	load.f64    %r11640 <- 0[%r11604(rb)]
	load.f64    %r11642 <- 0[%r11632(rc)]
	divu.f64    %r11647 <- %r11640, %r11642
	push.f64    %r11647
	call.f64    %r11648 <- floor
	mulu.f64    %r11650 <- %r11648, %r11642
	sub.f64     %r11651 <- %r11640, %r11650
	store.f64   %r11651 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2692:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11604(rb)
	push.64*    %r11632(rc)
	push.32     $9
	call        Arith
	load.64*    %r11661 <- 24[%arg1]
	phisrc.64*  %phi4884(base) <- %r11661
	br          .L2579

.L2601:
	cbr         %r11117, .L2695, .L2696

.L2695:
	and.32      %r11675 <- %r10896, $255
	scast.64    %r11676 <- (32) %r11675
	muls.64     %r11677 <- %r11676, $16
	add.64*     %r11678 <- %r10875(k), %r11677
	phisrc.64*  %phi4108 <- %r11678
	br          .L2697

.L2696:
	scast.64    %r11685 <- (32) %r10933
	muls.64     %r11686 <- %r11685, $16
	add.64*     %r11687 <- %r10879(base), %r11686
	ptrcast.64* %r11688 <- (64) %r11687
	phisrc.64*  %phi4109 <- %r11688
	br          .L2697

.L2697:
	phi.64*     %r11689(rb) <- %phi4108, %phi4109
	cbr         %r11020, .L2698, .L2699

.L2698:
	and.32      %r11703 <- %r10914, $255
	scast.64    %r11704 <- (32) %r11703
	muls.64     %r11705 <- %r11704, $16
	add.64*     %r11706 <- %r10875(k), %r11705
	phisrc.64*  %phi4110 <- %r11706
	br          .L2700

.L2699:
	scast.64    %r11713 <- (32) %r10940
	muls.64     %r11714 <- %r11713, $16
	add.64*     %r11715 <- %r10879(base), %r11714
	ptrcast.64* %r11716 <- (64) %r11715
	phisrc.64*  %phi4111 <- %r11716
	br          .L2700

.L2700:
	phi.64*     %r11717(rc) <- %phi4110, %phi4111
	load.32     %r11719 <- 8[%r11689(rb)]
	seteq.32    %r11720 <- %r11719, $3
	cbr         %r11720, .L2703, .L2702

.L2703:
	load.32     %r11722 <- 8[%r11717(rc)]
	seteq.32    %r11723 <- %r11722, $3
	cbr         %r11723, .L2701, .L2702

.L2701:
	load.f64    %r11725 <- 0[%r11689(rb)]
	load.f64    %r11727 <- 0[%r11717(rc)]
	push.f64    %r11725
	push.f64    %r11727
	call.f64    %r11731 <- pow
	store.f64   %r11731 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2702:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11689(rb)
	push.64*    %r11717(rc)
	push.32     $10
	call        Arith
	load.64*    %r11741 <- 24[%arg1]
	phisrc.64*  %phi4885(base) <- %r11741
	br          .L2579

.L2602:
	scast.64    %r11748 <- (32) %r10933
	muls.64     %r11749 <- %r11748, $16
	add.64*     %r11750 <- %r10879(base), %r11749
	load.32     %r11752 <- 8[%r11750]
	seteq.32    %r11753 <- %r11752, $3
	cbr         %r11753, .L2705, .L2706

.L2705:
	load.f64    %r11755 <- 0[%r11750]
	neg.f64     %r11758 <- %r11755
	store.f64   %r11758 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2706:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.64*    %r11750
	push.64*    %r11750
	push.32     $11
	call        Arith
	load.64*    %r11768 <- 24[%arg1]
	phisrc.64*  %phi4886(base) <- %r11768
	br          .L2579

.L2603:
	scast.64    %r11775 <- (32) %r10933
	muls.64     %r11776 <- %r11775, $16
	add.64*     %r11777 <- %r10879(base), %r11776
	load.32     %r11778 <- 8[%r11777]
	cbr         %r11778, .L2709, .L2708

.L2708:
	phisrc.32   %phi4112 <- $1
	br          .L2710

.L2709:
	scast.64    %r11786 <- (32) %r10933
	muls.64     %r11787 <- %r11786, $16
	add.64*     %r11788 <- %r10879(base), %r11787
	load.32     %r11789 <- 8[%r11788]
	seteq.32    %r11790 <- %r11789, $1
	cbr         %r11790, .L2711, .L2712

.L2711:
	scast.64    %r11797 <- (32) %r10933
	muls.64     %r11798 <- %r11797, $16
	add.64*     %r11799 <- %r10879(base), %r11798
	load.32     %r11800 <- 0[%r11799]
	seteq.32    %r11801 <- %r11800, $0
	phisrc.32   %phi4113 <- %r11801
	br          .L2713

.L2712:
	phisrc.32   %phi4114 <- $0
	br          .L2713

.L2713:
	phi.32      %r11802 <- %phi4113, %phi4114
	phisrc.32   %phi4115 <- %r11802
	br          .L2710

.L2710:
	phi.32      %r11803 <- %phi4112, %phi4115
	store.32    %r11803 -> 0[%r10887(ra)]
	store.32    $1 -> 8[%r10887(ra)]
	br          .L2579

.L2604:
	scast.64    %r11814 <- (32) %r10933
	muls.64     %r11815 <- %r11814, $16
	add.64*     %r11816 <- %r10879(base), %r11815
	load.32     %r11818 <- 8[%r11816]
	switch.32   %r11818, 4 -> .L2716, 5 -> .L2715, default -> .L2717

.L2715:
	load.64*    %r11821 <- 0[%r11816]
	push.64*    %r11821
	call.32     %r11823 <- luaH_getn
	fpcast.f64  %r11824 <- (32) %r11823
	store.f64   %r11824 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2716:
	load.64*    %r11829 <- 0[%r11816]
	load.64     %r11830 <- 16[%r11829]
	fpcast.f64  %r11831 <- (64) %r11830
	store.f64   %r11831 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	br          .L2579

.L2717:
	store.64*   %r10877(pc) -> 48[%arg1]
	symaddr.64* %r11838 <- luaO_nilobject_
	push.64*    %arg1
	push.64*    %r11816
	push.64*    %r11838
	push.64*    %r10887(ra)
	push.32     $12
	call.32     %r11840 <- call_binTM
	cbr         %r11840, .L2719, .L2718

.L2718:
	symaddr.64* %r11843 <- <anon symbol:0x1b0c698>
	push.64*    %arg1
	push.64*    %r11816
	push.64*    %r11843
	call        luaG_typeerror
	br          .L2719

.L2719:
	load.64*    %r11845 <- 24[%arg1]
	phisrc.64*  %phi4887(base) <- %r11845
	br          .L2579

.L2605:
	store.64*   %r10877(pc) -> 48[%arg1]
	sub.32      %r11861 <- %r10940, %r10933
	add.32      %r11862 <- %r11861, $1
	push.64*    %arg1
	push.32     %r11862
	push.32     %r10940
	call        luaV_concat
	load.64*    %r11865 <- 32[%arg1]
	load.64     %r11866 <- 120[%r11865]
	load.64     %r11869 <- 112[%r11865]
	setae.32    %r11870 <- %r11866, %r11869
	cbr         %r11870, .L2720, .L2721

.L2720:
	push.64*    %arg1
	call        luaC_step
	br          .L2721

.L2721:
	load.64*    %r11873 <- 24[%arg1]
	scast.64    %r11876 <- (32) %r10933
	muls.64     %r11877 <- %r11876, $16
	add.64*     %r11878 <- %r11873, %r11877
	scast.64    %r11885 <- (32) %r10883
	muls.64     %r11886 <- %r11885, $16
	add.64*     %r11887 <- %r11873, %r11886
	load.f64    %r11889 <- 0[%r11878]
	fpcast.f64  %r11890 <- (64) %r11889
	store.f64   %r11890 -> 0[%r11887]
	load.32     %r11893 <- 8[%r11878]
	store.32    %r11893 -> 8[%r11887]
	phisrc.64*  %phi4888(base) <- %r11873
	br          .L2579

.L2606:
	add.32      %r11901 <- %r10915, $0xfffffffffffe0001
	scast.64    %r11902 <- (32) %r11901
	muls.64     %r11903 <- %r11902, $4
	cast.64     %r11905 <- (64) %r10877(pc)
	add.64      %r11906 <- %r11905, %r11903
	ptrcast.64* %r11907 <- (64) %r11906
	phisrc.64*  %phi4795(pc) <- %r11907
	br          .L2579

.L2607:
	cbr         %r11117, .L2722, .L2723

.L2722:
	and.32      %r11921 <- %r10896, $255
	scast.64    %r11922 <- (32) %r11921
	muls.64     %r11923 <- %r11922, $16
	add.64*     %r11924 <- %r10875(k), %r11923
	phisrc.64*  %phi4116 <- %r11924
	br          .L2724

.L2723:
	scast.64    %r11931 <- (32) %r10933
	muls.64     %r11932 <- %r11931, $16
	add.64*     %r11933 <- %r10879(base), %r11932
	ptrcast.64* %r11934 <- (64) %r11933
	phisrc.64*  %phi4117 <- %r11934
	br          .L2724

.L2724:
	phi.64*     %r11935(rb) <- %phi4116, %phi4117
	cbr         %r11020, .L2725, .L2726

.L2725:
	and.32      %r11949 <- %r10914, $255
	scast.64    %r11950 <- (32) %r11949
	muls.64     %r11951 <- %r11950, $16
	add.64*     %r11952 <- %r10875(k), %r11951
	phisrc.64*  %phi4118 <- %r11952
	br          .L2727

.L2726:
	scast.64    %r11959 <- (32) %r10940
	muls.64     %r11960 <- %r11959, $16
	add.64*     %r11961 <- %r10879(base), %r11960
	ptrcast.64* %r11962 <- (64) %r11961
	phisrc.64*  %phi4119 <- %r11962
	br          .L2727

.L2727:
	phi.64*     %r11963 <- %phi4118, %phi4119
	store.64*   %r10877(pc) -> 48[%arg1]
	load.32     %r11967 <- 8[%r11935(rb)]
	load.32     %r11969 <- 8[%r11963]
	seteq.32    %r11970 <- %r11967, %r11969
	phisrc.64*  %phi4771(pc) <- %r10877(pc)
	cbr         %r11970, .L2730, .L2731

.L2730:
	push.64*    %arg1
	push.64*    %r11935(rb)
	push.64*    %r11963
	call.32     %r11974 <- luaV_equalval
	phisrc.32   %phi4120 <- %r11974
	br          .L2732

.L2731:
	phisrc.32   %phi4121 <- $0
	br          .L2732

.L2732:
	phi.32      %r11975 <- %phi4120, %phi4121
	seteq.32    %r11981 <- %r11975, %r10883
	cbr         %r11981, .L2728, .L2729

.L2728:
	load.32     %r11983 <- 4[%r10876]
	lsr.32      %r11985 <- %r11983, $14
	and.32      %r11986 <- %r11985, $0x3ffff
	add.32      %r11988 <- %r11986, $0xfffffffffffe0001
	scast.64    %r11989 <- (32) %r11988
	muls.64     %r11990 <- %r11989, $4
	cast.64     %r11992 <- (64) %r10877(pc)
	add.64      %r11993 <- %r11992, %r11990
	ptrcast.64* %r11994 <- (64) %r11993
	phisrc.64*  %phi4772(pc) <- %r11994
	br          .L2729

.L2729:
	load.64*    %r11996 <- 24[%arg1]
	phi.64*     %r11997 <- %phi4771(pc), %phi4772(pc)
	add.64*     %r11998 <- %r11997, $4
	phisrc.64*  %phi4796(pc) <- %r11998
	phisrc.64*  %phi4889(base) <- %r11996
	br          .L2579

.L2608:
	store.64*   %r10877(pc) -> 48[%arg1]
	phisrc.64*  %phi4767(pc) <- %r10877(pc)
	cbr         %r11117, .L2735, .L2736

.L2735:
	and.32      %r12015 <- %r10896, $255
	scast.64    %r12016 <- (32) %r12015
	muls.64     %r12017 <- %r12016, $16
	add.64*     %r12018 <- %r10875(k), %r12017
	phisrc.64*  %phi4122 <- %r12018
	br          .L2737

.L2736:
	scast.64    %r12025 <- (32) %r10933
	muls.64     %r12026 <- %r12025, $16
	add.64*     %r12027 <- %r10879(base), %r12026
	ptrcast.64* %r12028 <- (64) %r12027
	phisrc.64*  %phi4123 <- %r12028
	br          .L2737

.L2737:
	phi.64*     %r12029 <- %phi4122, %phi4123
	cbr         %r11020, .L2738, .L2739

.L2738:
	and.32      %r12043 <- %r10914, $255
	scast.64    %r12044 <- (32) %r12043
	muls.64     %r12045 <- %r12044, $16
	add.64*     %r12046 <- %r10875(k), %r12045
	phisrc.64*  %phi4124 <- %r12046
	br          .L2740

.L2739:
	scast.64    %r12053 <- (32) %r10940
	muls.64     %r12054 <- %r12053, $16
	add.64*     %r12055 <- %r10879(base), %r12054
	ptrcast.64* %r12056 <- (64) %r12055
	phisrc.64*  %phi4125 <- %r12056
	br          .L2740

.L2740:
	phi.64*     %r12057 <- %phi4124, %phi4125
	push.64*    %arg1
	push.64*    %r12029
	push.64*    %r12057
	call.32     %r12058 <- luaV_lessthan
	seteq.32    %r12064 <- %r12058, %r10883
	cbr         %r12064, .L2733, .L2734

.L2733:
	load.32     %r12066 <- 4[%r10876]
	lsr.32      %r12068 <- %r12066, $14
	and.32      %r12069 <- %r12068, $0x3ffff
	add.32      %r12071 <- %r12069, $0xfffffffffffe0001
	scast.64    %r12072 <- (32) %r12071
	muls.64     %r12073 <- %r12072, $4
	cast.64     %r12075 <- (64) %r10877(pc)
	add.64      %r12076 <- %r12075, %r12073
	ptrcast.64* %r12077 <- (64) %r12076
	phisrc.64*  %phi4768(pc) <- %r12077
	br          .L2734

.L2734:
	load.64*    %r12079 <- 24[%arg1]
	phi.64*     %r12080 <- %phi4767(pc), %phi4768(pc)
	add.64*     %r12081 <- %r12080, $4
	phisrc.64*  %phi4797(pc) <- %r12081
	phisrc.64*  %phi4890(base) <- %r12079
	br          .L2579

.L2609:
	store.64*   %r10877(pc) -> 48[%arg1]
	phisrc.64*  %phi4763(pc) <- %r10877(pc)
	cbr         %r11117, .L2743, .L2744

.L2743:
	and.32      %r12098 <- %r10896, $255
	scast.64    %r12099 <- (32) %r12098
	muls.64     %r12100 <- %r12099, $16
	add.64*     %r12101 <- %r10875(k), %r12100
	phisrc.64*  %phi4126 <- %r12101
	br          .L2745

.L2744:
	scast.64    %r12108 <- (32) %r10933
	muls.64     %r12109 <- %r12108, $16
	add.64*     %r12110 <- %r10879(base), %r12109
	ptrcast.64* %r12111 <- (64) %r12110
	phisrc.64*  %phi4127 <- %r12111
	br          .L2745

.L2745:
	phi.64*     %r12112 <- %phi4126, %phi4127
	cbr         %r11020, .L2746, .L2747

.L2746:
	and.32      %r12126 <- %r10914, $255
	scast.64    %r12127 <- (32) %r12126
	muls.64     %r12128 <- %r12127, $16
	add.64*     %r12129 <- %r10875(k), %r12128
	phisrc.64*  %phi4128 <- %r12129
	br          .L2748

.L2747:
	scast.64    %r12136 <- (32) %r10940
	muls.64     %r12137 <- %r12136, $16
	add.64*     %r12138 <- %r10879(base), %r12137
	ptrcast.64* %r12139 <- (64) %r12138
	phisrc.64*  %phi4129 <- %r12139
	br          .L2748

.L2748:
	phi.64*     %r12140 <- %phi4128, %phi4129
	push.64*    %arg1
	push.64*    %r12112
	push.64*    %r12140
	call.32     %r12141 <- lessequal
	seteq.32    %r12147 <- %r12141, %r10883
	cbr         %r12147, .L2741, .L2742

.L2741:
	load.32     %r12149 <- 4[%r10876]
	lsr.32      %r12151 <- %r12149, $14
	and.32      %r12152 <- %r12151, $0x3ffff
	add.32      %r12154 <- %r12152, $0xfffffffffffe0001
	scast.64    %r12155 <- (32) %r12154
	muls.64     %r12156 <- %r12155, $4
	cast.64     %r12158 <- (64) %r10877(pc)
	add.64      %r12159 <- %r12158, %r12156
	ptrcast.64* %r12160 <- (64) %r12159
	phisrc.64*  %phi4764(pc) <- %r12160
	br          .L2742

.L2742:
	load.64*    %r12162 <- 24[%arg1]
	phi.64*     %r12163 <- %phi4763(pc), %phi4764(pc)
	add.64*     %r12164 <- %r12163, $4
	phisrc.64*  %phi4798(pc) <- %r12164
	phisrc.64*  %phi4891(base) <- %r12162
	br          .L2579

.L2610:
	load.32     %r12166 <- 8[%r10887(ra)]
	cbr         %r12166, .L2752, .L2751

.L2751:
	phisrc.32   %phi4130 <- $1
	br          .L2753

.L2752:
	seteq.32    %r12170 <- %r12166, $1
	cbr         %r12170, .L2754, .L2755

.L2754:
	load.32     %r12172 <- 0[%r10887(ra)]
	seteq.32    %r12173 <- %r12172, $0
	phisrc.32   %phi4131 <- %r12173
	br          .L2756

.L2755:
	phisrc.32   %phi4132 <- $0
	br          .L2756

.L2756:
	phi.32      %r12174 <- %phi4131, %phi4132
	phisrc.32   %phi4133 <- %r12174
	br          .L2753

.L2753:
	phi.32      %r12175 <- %phi4130, %phi4133
	setne.32    %r12181 <- %r12175, %r10940
	cbr         %r12181, .L2749, .L2750

.L2749:
	load.32     %r12183 <- 4[%r10876]
	lsr.32      %r12185 <- %r12183, $14
	and.32      %r12186 <- %r12185, $0x3ffff
	add.32      %r12188 <- %r12186, $0xfffffffffffe0001
	scast.64    %r12189 <- (32) %r12188
	muls.64     %r12190 <- %r12189, $4
	cast.64     %r12192 <- (64) %r10877(pc)
	add.64      %r12193 <- %r12192, %r12190
	ptrcast.64* %r12194 <- (64) %r12193
	phisrc.64*  %phi4761(pc) <- %r12194
	br          .L2750

.L2750:
	phi.64*     %r12195 <- %phi4760(pc), %phi4761(pc)
	add.64*     %r12196 <- %r12195, $4
	phisrc.64*  %phi4799(pc) <- %r12196
	br          .L2579

.L2611:
	scast.64    %r12203 <- (32) %r10933
	muls.64     %r12204 <- %r12203, $16
	add.64*     %r12205 <- %r10879(base), %r12204
	load.32     %r12207 <- 8[%r12205]
	cbr         %r12207, .L2760, .L2759

.L2759:
	phisrc.32   %phi4134 <- $1
	br          .L2761

.L2760:
	seteq.32    %r12211 <- %r12207, $1
	cbr         %r12211, .L2762, .L2763

.L2762:
	load.32     %r12213 <- 0[%r12205]
	seteq.32    %r12214 <- %r12213, $0
	phisrc.32   %phi4135 <- %r12214
	br          .L2764

.L2763:
	phisrc.32   %phi4136 <- $0
	br          .L2764

.L2764:
	phi.32      %r12215 <- %phi4135, %phi4136
	phisrc.32   %phi4137 <- %r12215
	br          .L2761

.L2761:
	phi.32      %r12216 <- %phi4134, %phi4137
	setne.32    %r12222 <- %r12216, %r10940
	cbr         %r12222, .L2757, .L2758

.L2757:
	load.f64    %r12226 <- 0[%r12205]
	fpcast.f64  %r12227 <- (64) %r12226
	store.f64   %r12227 -> 0[%r10887(ra)]
	load.32     %r12230 <- 8[%r12205]
	store.32    %r12230 -> 8[%r10887(ra)]
	load.32     %r12234 <- 4[%r10876]
	lsr.32      %r12236 <- %r12234, $14
	and.32      %r12237 <- %r12236, $0x3ffff
	add.32      %r12239 <- %r12237, $0xfffffffffffe0001
	scast.64    %r12240 <- (32) %r12239
	muls.64     %r12241 <- %r12240, $4
	cast.64     %r12243 <- (64) %r10877(pc)
	add.64      %r12244 <- %r12243, %r12241
	ptrcast.64* %r12245 <- (64) %r12244
	phisrc.64*  %phi4758(pc) <- %r12245
	br          .L2758

.L2758:
	phi.64*     %r12246 <- %phi4757(pc), %phi4758(pc)
	add.64*     %r12247 <- %r12246, $4
	phisrc.64*  %phi4800(pc) <- %r12247
	br          .L2579

.L2612:
	add.32      %r12258(nresults) <- %r10940, $-1
	cbr         %r10933, .L2765, .L2766

.L2765:
	scast.64    %r12263 <- (32) %r10933
	muls.64     %r12264 <- %r12263, $16
	add.64*     %r12265 <- %r10887(ra), %r12264
	store.64*   %r12265 -> 16[%arg1]
	br          .L2766

.L2766:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.32     %r12258(nresults)
	call.32     %r12272 <- luaD_precall
	switch.32   %r12272, 0 -> .L2768, 1 -> .L2769, default -> .L2773

.L2768:
	phi.32      %r12273 <- %phi4734(nexeccalls), %phi4735(nexeccalls), %phi4736(nexeccalls)
	add.32      %r12274 <- %r12273, $1
	phisrc.32   %phi4732(nexeccalls) <- %r12274
	phisrc.32   %phi4735(nexeccalls) <- %r12274
	br          .L2578

.L2769:
	setge.32    %r12276 <- %r12258(nresults), $0
	cbr         %r12276, .L2771, .L2772

.L2771:
	load.64*    %r12278 <- 40[%arg1]
	load.64*    %r12279 <- 16[%r12278]
	store.64*   %r12279 -> 16[%arg1]
	br          .L2772

.L2772:
	load.64*    %r12282 <- 24[%arg1]
	phisrc.64*  %phi4892(base) <- %r12282
	br          .L2579

.L2613:
	cbr         %r10933, .L2774, .L2775

.L2774:
	scast.64    %r12292 <- (32) %r10933
	muls.64     %r12293 <- %r12292, $16
	add.64*     %r12294 <- %r10887(ra), %r12293
	store.64*   %r12294 -> 16[%arg1]
	br          .L2775

.L2775:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	push.32     $0xffffffff
	call.32     %r12300 <- luaD_precall
	switch.32   %r12300, 0 -> .L2777, 1 -> .L2778, default -> .L2773

.L2777:
	load.64*    %r12302 <- 40[%arg1]
	load.64*    %r12305(func) <- -32[%r12302]
	load.64*    %r12307(pfunc) <- 8[%r12302]
	load.64*    %r12309 <- 152[%arg1]
	phisrc.64*  %phi5559(func) <- %r12305(func)
	phisrc.64*  %phi5565(func) <- %r12305(func)
	cbr         %r12309, .L2780, .L2781

.L2780:
	load.64*    %r12312 <- -40[%r12302]
	push.64*    %arg1
	push.64*    %r12312
	call        luaF_close
	br          .L2781

.L2781:
	load.64*    %r12314 <- -32[%r12302]
	load.64*    %r12316 <- 0[%r12302]
	sub.64      %r12318 <- %r12316, %r12307(pfunc)
	divs.64     %r12319 <- %r12318, $16
	muls.64     %r12320 <- %r12319, $16
	add.64*     %r12321 <- %r12314, %r12320
	store.64*   %r12321 -> -40[%r12302]
	store.64*   %r12321 -> 24[%arg1]
	phisrc.32   %phi5485(aux) <- $0
	br          .L2785

.L2785:
	phi.32      %r12325(aux) <- %phi5485(aux), %phi5486(aux)
	scast.64    %r12326 <- (32) %r12325(aux)
	muls.64     %r12327 <- %r12326, $16
	add.64*     %r12328 <- %r12307(pfunc), %r12327
	load.64*    %r12330 <- 16[%arg1]
	setb.32     %r12331 <- %r12328, %r12330
	add.64*     %r12341 <- %r12305(func), %r12327
	cbr         %r12331, .L2782, .L2784

.L2782:
	load.f64    %r12343 <- 0[%r12328]
	fpcast.f64  %r12344 <- (64) %r12343
	store.f64   %r12344 -> 0[%r12341]
	load.32     %r12347 <- 8[%r12328]
	store.32    %r12347 -> 8[%r12341]
	add.32      %r12351 <- %r12325(aux), $1
	phisrc.32   %phi5486(aux) <- %r12351
	br          .L2785

.L2784:
	store.64*   %r12341 -> 16[%arg1]
	store.64*   %r12341 -> -24[%r12302]
	load.64*    %r12360 <- 48[%arg1]
	store.64*   %r12360 -> -16[%r12302]
	load.32     %r12363 <- -4[%r12302]
	add.32      %r12364 <- %r12363, $1
	store.32    %r12364 -> -4[%r12302]
	load.64*    %r12366 <- 40[%arg1]
	add.64*     %r12367 <- %r12366, $-40
	store.64*   %r12367 -> 40[%arg1]
	br          .L2578

.L2778:
	load.64*    %r12369 <- 24[%arg1]
	phisrc.64*  %phi4893(base) <- %r12369
	br          .L2579

.L2614:
	cbr         %r10933, .L2786, .L2787

.L2786:
	scast.64    %r12379 <- (32) %r10933
	muls.64     %r12380 <- %r12379, $16
	add.64*     %r12381 <- %r10887(ra), %r12380
	add.64*     %r12382 <- %r12381, $-16
	store.64*   %r12382 -> 16[%arg1]
	br          .L2787

.L2787:
	load.64*    %r12385 <- 152[%arg1]
	cbr         %r12385, .L2788, .L2789

.L2788:
	push.64*    %arg1
	push.64*    %r10879(base)
	call        luaF_close
	br          .L2789

.L2789:
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r10887(ra)
	call.32     %r12392(b) <- luaD_poscall
	phi.32      %r12393 <- %phi4731(nexeccalls), %phi4732(nexeccalls), %phi4733(nexeccalls)
	add.32      %r12394 <- %r12393, $-1
	phisrc.32   %phi4733(nexeccalls) <- %r12394
	phisrc.32   %phi4736(nexeccalls) <- %r12394
	cbr         %r12394, .L2791, .L2773

.L2791:
	cbr         %r12392(b), .L2793, .L2578

.L2793:
	load.64*    %r12398 <- 40[%arg1]
	load.64*    %r12399 <- 16[%r12398]
	store.64*   %r12399 -> 16[%arg1]
	br          .L2578

.L2615:
	load.f64    %r12402 <- 32[%r10887(ra)]
	load.f64    %r12404 <- 0[%r10887(ra)]
	add.f64     %r12406 <- %r12404, %r12402
	load.f64    %r12408 <- 16[%r10887(ra)]
	setle.32    %r12411 <- %r12406, %r12408
	setle.32    %r12414 <- %r12408, %r12406
	set.f64     %r12415 <- 0.000000
	setlt.32    %r12417 <- %r12415, %r12402
	select.32   %r12418 <- %r12417, %r12411, %r12414
	cbr         %r12418, .L2795, .L2579

.L2795:
	add.32      %r12424 <- %r10915, $0xfffffffffffe0001
	scast.64    %r12425 <- (32) %r12424
	muls.64     %r12426 <- %r12425, $4
	cast.64     %r12428 <- (64) %r10877(pc)
	add.64      %r12429 <- %r12428, %r12426
	ptrcast.64* %r12430 <- (64) %r12429
	store.f64   %r12406 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	add.64*     %r12436 <- %r10887(ra), $48
	store.f64   %r12406 -> 0[%r12436]
	store.32    $3 -> 56[%r10887(ra)]
	phisrc.64*  %phi4801(pc) <- %r12430
	br          .L2579

.L2616:
	store.64*   %r10877(pc) -> 48[%arg1]
	load.32     %r12448 <- 8[%r10887(ra)]
	seteq.32    %r12450 <- %r12448, $3
	phisrc.64*  %phi5493(pstep) <- %r12444(pstep)
	cbr         %r12450, .L2798, .L2799

.L2799:
	push.64*    %r10887(ra)
	push.64*    %r10887(ra)
	call.64*    %r12453 <- luaV_tonumber
	cbr         %r12453, .L2798, .L2797

.L2797:
	symaddr.64* %r12456 <- <anon symbol:0x1b1b750>
	push.64*    %arg1
	push.64*    %r12456
	call        luaG_runerror
	br          .L2800

.L2798:
	load.32     %r12458 <- 24[%r10887(ra)]
	seteq.32    %r12460 <- %r12458, $3
	cbr         %r12460, .L2802, .L2803

.L2803:
	push.64*    %r11213
	push.64*    %r11213
	call.64*    %r12464 <- luaV_tonumber
	cbr         %r12464, .L2802, .L2801

.L2801:
	symaddr.64* %r12467 <- <anon symbol:0x1b1bcc0>
	push.64*    %arg1
	push.64*    %r12467
	call        luaG_runerror
	br          .L2800

.L2802:
	load.32     %r12469 <- 40[%r10887(ra)]
	seteq.32    %r12471 <- %r12469, $3
	phisrc.64*  %phi5494(pstep) <- %r12444(pstep)
	cbr         %r12471, .L2800, .L2807

.L2807:
	push.64*    %r12444(pstep)
	push.64*    %r12444(pstep)
	call.64*    %r12475 <- luaV_tonumber
	phisrc.64*  %phi5495(pstep) <- %r12475
	cbr         %r12475, .L2800, .L2805

.L2805:
	symaddr.64* %r12478 <- <anon symbol:0x1b1c230>
	push.64*    %arg1
	push.64*    %r12478
	call        luaG_runerror
	br          .L2800

.L2800:
	load.f64    %r12481 <- 0[%r10887(ra)]
	phi.64*     %r12482 <- %phi5493(pstep), %phi5494(pstep), %phi5495(pstep)
	load.f64    %r12483 <- 0[%r12482]
	fpcast.f64  %r12484 <- (64) %r12483
	sub.f64     %r12485 <- %r12481, %r12484
	store.f64   %r12485 -> 0[%r10887(ra)]
	store.32    $3 -> 8[%r10887(ra)]
	add.32      %r12493 <- %r10915, $0xfffffffffffe0001
	scast.64    %r12494 <- (32) %r12493
	muls.64     %r12495 <- %r12494, $4
	cast.64     %r12497 <- (64) %r10877(pc)
	add.64      %r12498 <- %r12497, %r12495
	ptrcast.64* %r12499 <- (64) %r12498
	phisrc.64*  %phi4802(pc) <- %r12499
	br          .L2579

.L2617:
	add.64*     %r12501 <- %r10887(ra), $48
	add.64*     %r12505 <- %r12501, $32
	load.f64    %r12507 <- 0[%r12444(pstep)]
	fpcast.f64  %r12508 <- (64) %r12507
	store.f64   %r12508 -> 0[%r12505]
	load.32     %r12511 <- 40[%r10887(ra)]
	store.32    %r12511 -> 88[%r10887(ra)]
	add.64*     %r12517 <- %r12501, $16
	load.f64    %r12519 <- 0[%r11213]
	fpcast.f64  %r12520 <- (64) %r12519
	store.f64   %r12520 -> 0[%r12517]
	load.32     %r12523 <- 24[%r10887(ra)]
	store.32    %r12523 -> 72[%r10887(ra)]
	load.f64    %r12529 <- 0[%r10887(ra)]
	fpcast.f64  %r12530 <- (64) %r12529
	store.f64   %r12530 -> 0[%r12501]
	load.32     %r12533 <- 8[%r10887(ra)]
	store.32    %r12533 -> 56[%r10887(ra)]
	add.64*     %r12537 <- %r12501, $48
	store.64*   %r12537 -> 16[%arg1]
	store.64*   %r10877(pc) -> 48[%arg1]
	push.64*    %arg1
	push.64*    %r12501
	push.32     %r10940
	call        luaD_call
	load.64*    %r12549 <- 24[%arg1]
	load.64*    %r12551 <- 40[%arg1]
	load.64*    %r12552 <- 16[%r12551]
	store.64*   %r12552 -> 16[%arg1]
	scast.64    %r12560 <- (32) %r10883
	muls.64     %r12561 <- %r12560, $16
	add.64*     %r12562 <- %r12549, %r12561
	add.64*     %r12563 <- %r12562, $48
	load.32     %r12565 <- 56[%r12562]
	phisrc.64*  %phi4747(pc) <- %r10877(pc)
	phisrc.64*  %phi4894(base) <- %r12549
	cbr         %r12565, .L2808, .L2809

.L2808:
	add.64*     %r12569 <- %r12563, $-16
	load.f64    %r12571 <- 0[%r12563]
	fpcast.f64  %r12572 <- (64) %r12571
	store.f64   %r12572 -> 0[%r12569]
	load.32     %r12575 <- 56[%r12562]
	store.32    %r12575 -> 40[%r12562]
	load.32     %r12579 <- 4[%r10876]
	lsr.32      %r12581 <- %r12579, $14
	and.32      %r12582 <- %r12581, $0x3ffff
	add.32      %r12584 <- %r12582, $0xfffffffffffe0001
	scast.64    %r12585 <- (32) %r12584
	muls.64     %r12586 <- %r12585, $4
	cast.64     %r12588 <- (64) %r10877(pc)
	add.64      %r12589 <- %r12588, %r12586
	ptrcast.64* %r12590 <- (64) %r12589
	phisrc.64*  %phi4748(pc) <- %r12590
	br          .L2809

.L2809:
	phi.64*     %r12591 <- %phi4747(pc), %phi4748(pc)
	add.64*     %r12592 <- %r12591, $4
	phisrc.64*  %phi4803(pc) <- %r12592
	br          .L2579

.L2618:
	phisrc.32   %phi5503(n) <- %r10933
	cbr         %r10933, .L2811, .L2810

.L2810:
	load.64*    %r12606 <- 16[%arg1]
	sub.64      %r12608 <- %r12606, %r10887(ra)
	divs.64     %r12609 <- %r12608, $16
	scast.32    %r12610 <- (64) %r12609
	add.32      %r12611 <- %r12610, $-1
	load.64*    %r12613 <- 40[%arg1]
	load.64*    %r12614 <- 16[%r12613]
	store.64*   %r12614 -> 16[%arg1]
	phisrc.32   %phi5504(n) <- %r12611
	br          .L2811

.L2811:
	phisrc.32   %phi5505(c) <- %r10940
	cbr         %r10940, .L2813, .L2812

.L2812:
	add.64*     %r12619 <- %r10877(pc), $4
	load.32     %r12620 <- 4[%r10876]
	phisrc.64*  %phi4804(pc) <- %r12619
	phisrc.32   %phi5506(c) <- %r12620
	br          .L2813

.L2813:
	load.32     %r12623 <- 8[%r10887(ra)]
	seteq.32    %r12624 <- %r12623, $5
	cbr         %r12624, .L2815, .L2579

.L2815:
	load.64*    %r12626 <- 0[%r10887(ra)]
	phi.32      %r12628 <- %phi5505(c), %phi5506(c)
	add.32      %r12629 <- %r12628, $-1
	muls.32     %r12630 <- %r12629, $50
	phi.32      %r12631(n) <- %phi5503(n), %phi5504(n)
	add.32      %r12632 <- %r12630, %r12631(n)
	load.32     %r12635 <- 56[%r12626]
	setgt.32    %r12636 <- %r12632, %r12635
	phisrc.32   %phi5501(n) <- %r12631(n)
	phisrc.32   %phi5513(last) <- %r12632
	cbr         %r12636, .L2816, .L2821

.L2816:
	push.64*    %arg1
	push.64*    %r12626
	push.32     %r12632
	call        luaH_resizearray
	phisrc.32   %phi5514(last) <- %r12632
	br          .L2821

.L2821:
	phi.32      %r12640(n) <- %phi5501(n), %phi5502(n)
	setgt.32    %r12641 <- %r12640(n), $0
	cbr         %r12641, .L2818, .L2579

.L2818:
	scast.64    %r12644 <- (32) %r12640(n)
	muls.64     %r12645 <- %r12644, $16
	add.64*     %r12646 <- %r10887(ra), %r12645
	phi.32      %r12650 <- %phi5513(last), %phi5514(last), %phi5515(last)
	add.32      %r12651 <- %r12650, $-1
	push.64*    %arg1
	push.64*    %r12626
	push.32     %r12650
	call.64*    %r12652 <- luaH_setnum
	load.f64    %r12654 <- 0[%r12646]
	fpcast.f64  %r12655 <- (64) %r12654
	store.f64   %r12655 -> 0[%r12652]
	load.32     %r12658 <- 8[%r12646]
	store.32    %r12658 -> 8[%r12652]
	load.32     %r12662 <- 8[%r12646]
	setge.32    %r12663 <- %r12662, $4
	phisrc.32   %phi5515(last) <- %r12651
	cbr         %r12663, .L2825, .L2819

.L2825:
	load.64*    %r12665 <- 0[%r12646]
	load.8      %r12666 <- 9[%r12665]
	cast.32     %r12667 <- (8) %r12666
	and.32      %r12668 <- %r12667, $3
	cbr         %r12668, .L2824, .L2819

.L2824:
	ptrcast.64* %r12670 <- (64) %r12626
	load.8      %r12671 <- 9[%r12670]
	cast.32     %r12672 <- (8) %r12671
	and.32      %r12673 <- %r12672, $4
	cbr         %r12673, .L2822, .L2819

.L2822:
	push.64*    %arg1
	push.64*    %r12626
	call        luaC_barrierback
	br          .L2819

.L2819:
	add.32      %r12677 <- %r12640(n), $-1
	phisrc.32   %phi5502(n) <- %r12677
	br          .L2821

.L2619:
	push.64*    %arg1
	push.64*    %r10887(ra)
	call        luaF_close
	br          .L2579

.L2620:
	load.64*    %r12681 <- 32[%r10868]
	load.64*    %r12682 <- 32[%r12681]
	scast.64    %r12688 <- (32) %r10915
	muls.64     %r12689 <- %r12688, $8
	add.64*     %r12690 <- %r12682, %r12689
	load.64*    %r12691 <- 0[%r12690]
	load.8      %r12693 <- 112[%r12691]
	cast.32     %r12694 <- (8) %r12693
	load.64*    %r12698 <- 24[%r10868]
	push.64*    %arg1
	push.32     %r12694
	push.64*    %r12698
	call.64*    %r12699 <- luaF_newLclosure
	store.64*   %r12691 -> 32[%r12699]
	phisrc.32   %phi5529(j) <- $0
	br          .L2829

.L2829:
	phi.32      %r12702(j) <- %phi5529(j), %phi5530(j)
	setlt.32    %r12704 <- %r12702(j), %r12694
	phi.64*     %r12705(pc) <- %phi4744(pc), %phi4745(pc)
	cbr         %r12704, .L2826, .L2828

.L2826:
	load.32     %r12706 <- 0[%r12705(pc)]
	and.32      %r12709 <- %r12706, $63
	seteq.32    %r12712 <- %r12709, $4
	add.64*     %r12727 <- %r12699, $40
	lsr.32      %r12718 <- %r12706, $23
	scast.64    %r12729 <- (32) %r12702(j)
	and.32      %r12719 <- %r12718, $511
	muls.64     %r12730 <- %r12729, $8
	add.64*     %r12731 <- %r12727, %r12730
	cbr         %r12712, .L2830, .L2831

.L2830:
	scast.64    %r12721 <- (32) %r12719
	muls.64     %r12722 <- %r12721, $8
	add.64*     %r12723 <- %r10964, %r12722
	load.64*    %r12724 <- 0[%r12723]
	store.64*   %r12724 -> 0[%r12731]
	br          .L2827

.L2831:
	scast.64    %r12740 <- (32) %r12719
	muls.64     %r12741 <- %r12740, $16
	add.64*     %r12742 <- %r10879(base), %r12741
	push.64*    %arg1
	push.64*    %r12742
	call.64*    %r12743 <- luaF_findupval
	store.64*   %r12743 -> 0[%r12731]
	br          .L2827

.L2827:
	add.32      %r12752 <- %r12702(j), $1
	add.64*     %r12754 <- %r12705(pc), $4
	phisrc.64*  %phi4745(pc) <- %r12754
	phisrc.64*  %phi4805(pc) <- %r12754
	phisrc.32   %phi5530(j) <- %r12752
	br          .L2829

.L2828:
	ptrcast.64* %r12757 <- (64) %r12699
	store.64*   %r12757 -> 0[%r10887(ra)]
	store.32    $6 -> 8[%r10887(ra)]
	store.64*   %r12705(pc) -> 48[%arg1]
	load.64*    %r12763 <- 32[%arg1]
	load.64     %r12764 <- 120[%r12763]
	load.64     %r12767 <- 112[%r12763]
	setae.32    %r12768 <- %r12764, %r12767
	cbr         %r12768, .L2833, .L2834

.L2833:
	push.64*    %arg1
	call        luaC_step
	br          .L2834

.L2834:
	load.64*    %r12771 <- 24[%arg1]
	phisrc.64*  %phi4895(base) <- %r12771
	br          .L2579

.L2621:
	add.32      %r12777 <- %r10933, $-1
	load.64*    %r12779 <- 40[%arg1]
	load.64*    %r12781 <- 0[%r12779]
	load.64*    %r12783 <- 8[%r12779]
	sub.64      %r12784 <- %r12781, %r12783
	divs.64     %r12785 <- %r12784, $16
	scast.32    %r12786 <- (64) %r12785
	load.64*    %r12788 <- 32[%r10868]
	load.8      %r12789 <- 113[%r12788]
	cast.32     %r12790 <- (8) %r12789
	sub.32      %r12791 <- %r12786, %r12790
	add.32      %r12792(n) <- %r12791, $-1
	seteq.32    %r12794 <- %r12777, $0xffffffff
	phisrc.32   %phi5531(b) <- %r12777
	phisrc.64*  %phi5548 <- %r12781
	phisrc.64*  %phi5554 <- %r12781
	phisrc.64*  %phi5560 <- %r12781
	cbr         %r12794, .L2835, .L2836

.L2835:
	store.64*   %r10877(pc) -> 48[%arg1]
	load.64*    %r12798 <- 56[%arg1]
	ptrcast.64* %r12799 <- (64) %r12798
	load.64*    %r12801 <- 16[%arg1]
	ptrcast.64* %r12802 <- (64) %r12801
	sub.64      %r12803 <- %r12799, %r12802
	muls.32     %r12805 <- %r12792(n), $16
	scast.64    %r12806 <- (32) %r12805
	setle.32    %r12807 <- %r12803, %r12806
	cbr         %r12807, .L2837, .L2839

.L2837:
	push.64*    %arg1
	push.32     %r12792(n)
	call        luaD_growstack
	br          .L2839

.L2839:
	load.64*    %r12811 <- 24[%arg1]
	scast.64    %r12818 <- (32) %r10883
	muls.64     %r12819 <- %r12818, $16
	add.64*     %r12820 <- %r12811, %r12819
	scast.64    %r12824 <- (32) %r12792(n)
	muls.64     %r12825 <- %r12824, $16
	add.64*     %r12826 <- %r12820, %r12825
	store.64*   %r12826 -> 16[%arg1]
	phisrc.64*  %phi4896(base) <- %r12811
	phisrc.64*  %phi5335(ra) <- %r12820
	phisrc.64*  %phi5338(ra) <- %r12820
	phisrc.32   %phi5532(b) <- %r12792(n)
	br          .L2836

.L2836:
	phisrc.32   %phi5546(j) <- $0
	br          .L2843

.L2843:
	phi.32      %r12828(j) <- %phi5546(j), %phi5547(j)
	phi.32      %r12829 <- %phi5531(b), %phi5532(b)
	setlt.32    %r12830 <- %r12828(j), %r12829
	cbr         %r12830, .L2840, .L2579

.L2840:
	setlt.32    %r12833 <- %r12828(j), %r12792(n)
	scast.64    %r12841 <- (32) %r12828(j)
	muls.64     %r12842 <- %r12841, $16
	cbr         %r12833, .L2844, .L2845

.L2844:
	load.64*    %r12835 <- 0[%r12779]
	scast.64    %r12837 <- (32) %r12792(n)
	muls.64     %r12838 <- %r12837, $16
	sub.64*     %r12839 <- %r12835, %r12838
	add.64*     %r12843 <- %r12839, %r12842
	phi.64*     %r12844 <- %phi5337(ra), %phi5338(ra)
	add.64*     %r12848 <- %r12844, %r12842
	load.f64    %r12850 <- 0[%r12843]
	fpcast.f64  %r12851 <- (64) %r12850
	store.f64   %r12851 -> 0[%r12848]
	load.32     %r12854 <- 8[%r12843]
	store.32    %r12854 -> 8[%r12848]
	phisrc.64*  %phi5336(ra) <- %r12844
	br          .L2841

.L2845:
	phi.64*     %r12857 <- %phi5334(ra), %phi5335(ra), %phi5336(ra)
	add.64*     %r12861 <- %r12857, %r12842
	store.32    $0 -> 8[%r12861]
	br          .L2841

.L2841:
	add.32      %r12863 <- %r12828(j), $1
	phisrc.32   %phi5547(j) <- %r12863
	br          .L2843

.L2773:
	ret


index2adr:
.L2847:
	<entry-point>
	setgt.32    %r12865 <- %arg2, $0
	cbr         %r12865, .L2848, .L2849

.L2848:
	load.64*    %r12867 <- 24[%arg1]
	add.32      %r12869 <- %arg2, $-1
	scast.64    %r12870 <- (32) %r12869
	muls.64     %r12871 <- %r12870, $16
	add.64*     %r12872 <- %r12867, %r12871
	load.64*    %r12876 <- 16[%arg1]
	setae.32    %r12877 <- %r12872, %r12876
	cbr         %r12877, .L2850, .L2851

.L2850:
	symaddr.64* %r12878 <- luaO_nilobject_
	ptrcast.64* %r12879 <- (64) %r12878
	phisrc.64*  %phi5566(return) <- %r12879
	br          .L2852

.L2851:
	phisrc.64*  %phi5567(return) <- %r12872
	br          .L2852

.L2849:
	setgt.32    %r12883 <- %arg2, $0xffffd8f0
	cbr         %r12883, .L2855, .L2856

.L2855:
	load.64*    %r12886 <- 16[%arg1]
	scast.64    %r12888 <- (32) %arg2
	muls.64     %r12889 <- %r12888, $16
	add.64*     %r12890 <- %r12886, %r12889
	phisrc.64*  %phi5568(return) <- %r12890
	br          .L2852

.L2856:
	switch.32   %arg2, 4294957294 -> .L2861, 4294957295 -> .L2860, 4294957296 -> .L2859, default -> .L2862

.L2859:
	load.64*    %r12893 <- 32[%arg1]
	add.64*     %r12894 <- %r12893, $160
	phisrc.64*  %phi5569(return) <- %r12894
	br          .L2852

.L2860:
	load.64*    %r12896 <- 40[%arg1]
	load.64*    %r12897 <- 8[%r12896]
	load.64*    %r12898 <- 0[%r12897]
	load.64*    %r12903 <- 24[%r12898]
	ptrcast.64* %r12904 <- (64) %r12903
	store.64*   %r12904 -> 136[%arg1]
	store.32    $5 -> 144[%arg1]
	add.64*     %r12908 <- %arg1, $136
	phisrc.64*  %phi5570(return) <- %r12908
	br          .L2852

.L2861:
	add.64*     %r12910 <- %arg1, $120
	phisrc.64*  %phi5571(return) <- %r12910
	br          .L2852

.L2862:
	load.64*    %r12912 <- 40[%arg1]
	load.64*    %r12913 <- 8[%r12912]
	load.64*    %r12914 <- 0[%r12913]
	sub.32      %r12917 <- $0xffffd8ee, %arg2
	add.64*     %r12920 <- %r12914, $40
	add.32      %r12922 <- %r12917, $-1
	scast.64    %r12923 <- (32) %r12922
	muls.64     %r12924 <- %r12923, $16
	add.64*     %r12925 <- %r12920, %r12924
	symaddr.64* %r12926 <- luaO_nilobject_
	ptrcast.64* %r12927 <- (64) %r12926
	ptrcast.64* %r12928 <- (64) %r12927
	load.8      %r12931 <- 11[%r12914]
	cast.32     %r12932 <- (8) %r12931
	setle.32    %r12933 <- %r12917, %r12932
	select.64*  %r12934 <- %r12933, %r12925, %r12928
	phisrc.64*  %phi5572(return) <- %r12934
	br          .L2852

.L2852:
	phi.64*     %r12880 <- %phi5566(return), %phi5567(return), %phi5568(return), %phi5569(return), %phi5570(return), %phi5571(return), %phi5572(return)
	ret.64*     %r12880


getcurrenv:
.L2863:
	<entry-point>
	load.64*    %r12936 <- 40[%arg1]
	load.64*    %r12938 <- 80[%arg1]
	seteq.32    %r12939 <- %r12936, %r12938
	cbr         %r12939, .L2864, .L2865

.L2864:
	load.64*    %r12941 <- 120[%arg1]
	phisrc.64*  %phi5585(return) <- %r12941
	br          .L2866

.L2865:
	load.64*    %r12946 <- 8[%r12936]
	load.64*    %r12947 <- 0[%r12946]
	load.64*    %r12950 <- 24[%r12947]
	phisrc.64*  %phi5586(return) <- %r12950
	br          .L2866

.L2866:
	phi.64*     %r12943 <- %phi5585(return), %phi5586(return)
	ret.64*     %r12943


lua_checkstack:
.L2868:
	<entry-point>
	setgt.32    %r12952 <- %arg2, $0x1f40
	phisrc.32   %phi5605(res) <- $1
	cbr         %r12952, .L2869, .L2871

.L2871:
	load.64*    %r12954 <- 16[%arg1]
	load.64*    %r12956 <- 24[%arg1]
	sub.64      %r12957 <- %r12954, %r12956
	divs.64     %r12958 <- %r12957, $16
	scast.64    %r12960 <- (32) %arg2
	add.64      %r12961 <- %r12958, %r12960
	setgt.32    %r12962 <- %r12961, $0x1f40
	cbr         %r12962, .L2869, .L2870

.L2869:
	phisrc.32   %phi5604(res) <- $0
	br          .L2872

.L2870:
	setgt.32    %r12964 <- %arg2, $0
	cbr         %r12964, .L2873, .L2872

.L2873:
	load.64*    %r12966 <- 56[%arg1]
	ptrcast.64* %r12967 <- (64) %r12966
	ptrcast.64* %r12970 <- (64) %r12954
	sub.64      %r12971 <- %r12967, %r12970
	muls.32     %r12973 <- %arg2, $16
	scast.64    %r12974 <- (32) %r12973
	setle.32    %r12975 <- %r12971, %r12974
	cbr         %r12975, .L2875, .L2877

.L2875:
	push.64*    %arg1
	push.32     %arg2
	call        luaD_growstack
	br          .L2877

.L2877:
	load.64*    %r12979 <- 40[%arg1]
	load.64*    %r12980 <- 16[%r12979]
	load.64*    %r12982 <- 16[%arg1]
	muls.64     %r12985 <- %r12960, $16
	add.64*     %r12986 <- %r12982, %r12985
	setb.32     %r12987 <- %r12980, %r12986
	cbr         %r12987, .L2878, .L2872

.L2878:
	store.64*   %r12986 -> 16[%r12979]
	br          .L2872

.L2872:
	phi.32      %r12996 <- %phi5604(res), %phi5605(res)
	ret.32      %r12996


lua_atpanic:
.L2881:
	<entry-point>
	load.64*    %r12999 <- 32[%arg1]
	load.64*    %r13000 <- 152[%r12999]
	store.64*   %arg2 -> 152[%r12999]
	ret.64*     %r13000


lua_gettop:
.L2883:
	<entry-point>
	load.64*    %r13007 <- 16[%arg1]
	load.64*    %r13009 <- 24[%arg1]
	sub.64      %r13010 <- %r13007, %r13009
	divs.64     %r13011 <- %r13010, $16
	scast.32    %r13012 <- (64) %r13011
	ret.32      %r13012


lua_settop:
.L2885:
	<entry-point>
	setge.32    %r13015 <- %arg2, $0
	cbr         %r13015, .L2891, .L2887

.L2891:
	load.64*    %r13018 <- 16[VOID]
	load.64*    %r13020 <- 24[VOID]
	scast.64    %r13022 <- (32) %arg2
	muls.64     %r13023 <- %r13022, $16
	add.64*     %r13024 <- %r13020, %r13023
	setb.32     %r13025 <- %r13018, %r13024
	cbr         %r13025, .L2888, .L2890

.L2888:
	add.64*     %r13028 <- %r13018, $16
	store.64*   %r13028 -> 16[VOID]
	store.32    $0 -> 8[%r13018]
	br          .L2891

.L2890:
	store.64*   %r13024 -> 16[VOID]
	br          .L2892

.L2887:
	add.32      %r13038 <- %arg2, $1
	scast.64    %r13039 <- (32) %r13038
	muls.64     %r13040 <- %r13039, $16
	load.64*    %r13042 <- 16[%arg1]
	cast.64     %r13043 <- (64) %r13042
	add.64      %r13044 <- %r13043, %r13040
	ptrcast.64* %r13045 <- (64) %r13044
	store.64*   %r13045 -> 16[%arg1]
	br          .L2892

.L2892:
	ret


lua_remove:
.L2893:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13048(p) <- index2adr
	phisrc.64*  %phi5623(p) <- %r13048(p)
	br          .L2897

.L2897:
	phi.64*     %r13050 <- %phi5623(p), %phi5624(p)
	add.64*     %r13051(p) <- %r13050, $16
	load.64*    %r13053 <- 16[%r13049(L)]
	setb.32     %r13054 <- %r13051(p), %r13053
	phisrc.64*  %phi5624(p) <- %r13051(p)
	cbr         %r13054, .L2894, .L2896

.L2894:
	add.64*     %r13057 <- %r13051(p), $-16
	load.f64    %r13059 <- 0[%r13051(p)]
	fpcast.f64  %r13060 <- (64) %r13059
	store.f64   %r13060 -> 0[%r13057]
	load.32     %r13063 <- 24[%r13050]
	store.32    %r13063 -> 8[%r13050]
	br          .L2897

.L2896:
	add.64*     %r13068 <- %r13053, $-16
	store.64*   %r13068 -> 16[%r13049(L)]
	ret


lua_insert:
.L2899:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13071(p) <- index2adr
	load.64*    %r13074(q) <- 16[%arg1]
	phisrc.64*  %phi5631(q) <- %r13074(q)
	phisrc.64*  %phi5633(q) <- %r13074(q)
	phisrc.64*  %phi5634(q) <- %r13074(q)
	phisrc.64*  %phi5635(q) <- %r13074(q)
	br          .L2903

.L2903:
	phi.64*     %r13075(q) <- %phi5631(q), %phi5632(q)
	seta.32     %r13077 <- %r13075(q), %r13071(p)
	cbr         %r13077, .L2900, .L2902

.L2900:
	add.64*     %r13079 <- %r13075(q), $-16
	load.f64    %r13082 <- 0[%r13079]
	fpcast.f64  %r13083 <- (64) %r13082
	store.f64   %r13083 -> 0[%r13075(q)]
	load.32     %r13086 <- -8[%r13075(q)]
	store.32    %r13086 -> 8[%r13075(q)]
	phisrc.64*  %phi5632(q) <- %r13079
	br          .L2903

.L2902:
	load.64*    %r13092 <- 16[%arg1]
	load.f64    %r13095 <- 0[%r13092]
	fpcast.f64  %r13096 <- (64) %r13095
	store.f64   %r13096 -> 0[%r13071(p)]
	load.32     %r13099 <- 8[%r13092]
	store.32    %r13099 -> 8[%r13071(p)]
	ret


lua_replace:
.L2905:
	<entry-point>
	seteq.32    %r13103 <- %arg2, $0xffffd8ef
	cbr         %r13103, .L2908, .L2907

.L2908:
	load.64*    %r13105 <- 40[%arg1]
	load.64*    %r13107 <- 80[%arg1]
	seteq.32    %r13108 <- %r13105, %r13107
	cbr         %r13108, .L2906, .L2907

.L2906:
	symaddr.64* %r13110 <- <anon symbol:0x18fdf50>
	push.64*    %arg1
	push.64*    %r13110
	call        luaG_runerror
	br          .L2907

.L2907:
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13114(o) <- index2adr
	cbr         %r13103, .L2909, .L2910

.L2909:
	load.64*    %r13119 <- 40[%arg1]
	load.64*    %r13120 <- 8[%r13119]
	load.64*    %r13121 <- 0[%r13120]
	load.64*    %r13125 <- 16[%arg1]
	load.64*    %r13127 <- -16[%r13125]
	store.64*   %r13127 -> 24[%r13121]
	load.64*    %r13131 <- 16[%arg1]
	load.32     %r13133 <- -8[%r13131]
	setge.32    %r13134 <- %r13133, $4
	phisrc.64*  %phi5636(L) <- %arg1
	cbr         %r13134, .L2914, .L2915

.L2914:
	load.64*    %r13138 <- -16[%r13131]
	load.8      %r13139 <- 9[%r13138]
	cast.32     %r13140 <- (8) %r13139
	and.32      %r13141 <- %r13140, $3
	phisrc.64*  %phi5637(L) <- %arg1
	cbr         %r13141, .L2913, .L2915

.L2913:
	ptrcast.64* %r13143 <- (64) %r13121
	load.8      %r13144 <- 9[%r13143]
	cast.32     %r13145 <- (8) %r13144
	and.32      %r13146 <- %r13145, $4
	cbr         %r13146, .L2911, .L2915

.L2911:
	push.64*    %arg1
	push.64*    %r13143
	push.64*    %r13138
	call        luaC_barrierf
	phisrc.64*  %phi5638(L) <- %arg1
	br          .L2915

.L2910:
	load.64*    %r13155 <- 16[%r13115(L)]
	add.64*     %r13156 <- %r13155, $-16
	load.f64    %r13159 <- 0[%r13156]
	fpcast.f64  %r13160 <- (64) %r13159
	store.f64   %r13160 -> 0[%r13114(o)]
	load.32     %r13163 <- -8[%r13155]
	store.32    %r13163 -> 8[%r13114(o)]
	setlt.32    %r13167 <- %arg2, $0xffffd8ee
	phisrc.64*  %phi5639(L) <- %r13115(L)
	cbr         %r13167, .L2916, .L2915

.L2916:
	load.64*    %r13169 <- 16[%r13115(L)]
	load.32     %r13171 <- -8[%r13169]
	setge.32    %r13172 <- %r13171, $4
	phisrc.64*  %phi5640(L) <- %r13115(L)
	cbr         %r13172, .L2921, .L2915

.L2921:
	load.64*    %r13176 <- -16[%r13169]
	load.8      %r13177 <- 9[%r13176]
	cast.32     %r13178 <- (8) %r13177
	and.32      %r13179 <- %r13178, $3
	phisrc.64*  %phi5641(L) <- %r13115(L)
	cbr         %r13179, .L2920, .L2915

.L2920:
	load.64*    %r13181 <- 40[%r13115(L)]
	load.64*    %r13182 <- 8[%r13181]
	load.64*    %r13183 <- 0[%r13182]
	ptrcast.64* %r13185 <- (64) %r13183
	load.8      %r13186 <- 9[%r13185]
	cast.32     %r13187 <- (8) %r13186
	and.32      %r13188 <- %r13187, $4
	phisrc.64*  %phi5642(L) <- %r13115(L)
	cbr         %r13188, .L2918, .L2915

.L2918:
	ptrcast.64* %r13195 <- (64) %r13183
	push.64*    %r13115(L)
	push.64*    %r13195
	push.64*    %r13176
	call        luaC_barrierf
	phisrc.64*  %phi5643(L) <- %r13115(L)
	br          .L2915

.L2915:
	phi.64*     %r13200 <- %phi5636(L), %phi5637(L), %phi5638(L), %phi5639(L), %phi5640(L), %phi5641(L), %phi5642(L), %phi5643(L)
	load.64*    %r13201 <- 16[%r13200]
	add.64*     %r13202 <- %r13201, $-16
	store.64*   %r13202 -> 16[%r13200]
	ret


lua_pushvalue:
.L2923:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13205 <- index2adr
	load.64*    %r13207 <- 16[%arg1]
	load.f64    %r13209 <- 0[%r13205]
	fpcast.f64  %r13210 <- (64) %r13209
	store.f64   %r13210 -> 0[%r13207]
	load.32     %r13213 <- 8[%r13205]
	store.32    %r13213 -> 8[%r13207]
	load.64*    %r13218 <- 16[%arg1]
	add.64*     %r13219 <- %r13218, $16
	store.64*   %r13219 -> 16[%arg1]
	ret


lua_type:
.L2925:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13222 <- index2adr
	symaddr.64* %r13224 <- luaO_nilobject_
	seteq.32    %r13225 <- %r13222, %r13224
	cbr         %r13225, .L2927, .L2928

.L2927:
	phisrc.32   %phi5671 <- $0xffffffff
	br          .L2929

.L2928:
	load.32     %r13227 <- 8[%r13222]
	phisrc.32   %phi5672 <- %r13227
	br          .L2929

.L2929:
	phi.32      %r13228 <- %phi5671, %phi5672
	ret.32      %r13228


lua_typename:
.L2930:
	<entry-point>
	seteq.32    %r13232 <- %arg2, $0xffffffff
	cbr         %r13232, .L2932, .L2933

.L2932:
	symaddr.64* %r13233 <- <anon symbol:0x1b46f30>
	ptrcast.64* %r13234 <- (64) %r13233
	phisrc.64*  %phi5675 <- %r13234
	br          .L2934

.L2933:
	symaddr.64* %r13235 <- luaT_typenames
	scast.64    %r13237 <- (32) %arg2
	muls.64     %r13238 <- %r13237, $8
	add.64*     %r13239 <- %r13235, %r13238
	load.64*    %r13240 <- 0[%r13239]
	ptrcast.64* %r13241 <- (64) %r13240
	phisrc.64*  %phi5676 <- %r13241
	br          .L2934

.L2934:
	phi.64*     %r13242 <- %phi5675, %phi5676
	ret.64*     %r13242


lua_iscfunction:
.L2935:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13246 <- index2adr
	load.32     %r13248 <- 8[%r13246]
	seteq.32    %r13249 <- %r13248, $6
	cbr         %r13249, .L2937, .L2938

.L2937:
	load.64*    %r13251 <- 0[%r13246]
	load.8      %r13252 <- 10[%r13251]
	phisrc.32   %phi5679 <- %r13252
	br          .L2939

.L2938:
	phisrc.32   %phi5680 <- $0
	br          .L2939

.L2939:
	phi.32      %r13253 <- %phi5679, %phi5680
	ret.32      %r13253


lua_isnumber:
.L2940:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13257 <- index2adr
	load.32     %r13259 <- 8[%r13257]
	seteq.32    %r13261 <- %r13259, $3
	cbr         %r13261, .L2942, .L2943

.L2942:
	phisrc.32   %phi5683 <- $1
	br          .L2944

.L2943:
	symaddr.64* %r13263 <- n
	push.64*    %r13257
	push.64*    %r13263
	call.64*    %r13264 <- luaV_tonumber
	setne.32    %r13265 <- %r13264, $0
	phisrc.32   %phi5684 <- %r13265
	br          .L2944

.L2944:
	phi.32      %r13266 <- %phi5683, %phi5684
	ret.32      %r13266


lua_isstring:
.L2945:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r13270 <- lua_type
	seteq.1     %r13273 <- %r13270, $4
	seteq.1     %r13276 <- %r13270, $3
	or-bool.1   %r13277 <- %r13273, %r13276
	cast.32     %r13278 <- (1) %r13277
	ret.32      %r13278


lua_rawequal:
.L2947:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13282 <- index2adr
	push.64*    %arg1
	push.32     %arg3
	call.64*    %r13285 <- index2adr
	symaddr.64* %r13287 <- luaO_nilobject_
	seteq.1     %r13289 <- %r13282, %r13287
	seteq.1     %r13293 <- %r13285, %r13287
	or-bool.1   %r13294 <- %r13289, %r13293
	cbr         %r13294, .L2949, .L2950

.L2949:
	phisrc.32   %phi5688 <- $0
	br          .L2951

.L2950:
	push.64*    %r13282
	push.64*    %r13285
	call.32     %r13298 <- luaO_rawequalObj
	phisrc.32   %phi5689 <- %r13298
	br          .L2951

.L2951:
	phi.32      %r13299 <- %phi5688, %phi5689
	ret.32      %r13299


lua_lessthan:
.L2952:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13303 <- index2adr
	push.64*    %arg1
	push.32     %arg3
	call.64*    %r13306 <- index2adr
	symaddr.64* %r13308 <- luaO_nilobject_
	seteq.1     %r13310 <- %r13303, %r13308
	seteq.1     %r13314 <- %r13306, %r13308
	or-bool.1   %r13315 <- %r13310, %r13314
	cbr         %r13315, .L2953, .L2954

.L2953:
	phisrc.32   %phi5693 <- $0
	br          .L2955

.L2954:
	push.64*    %arg1
	push.64*    %r13303
	push.64*    %r13306
	call.32     %r13320 <- luaV_lessthan
	phisrc.32   %phi5694 <- %r13320
	br          .L2955

.L2955:
	phi.32      %r13321 <- %phi5693, %phi5694
	ret.32      %r13321


lua_tonumber:
.L2957:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13326 <- index2adr
	load.32     %r13328 <- 8[%r13326]
	seteq.32    %r13330 <- %r13328, $3
	phisrc.64*  %phi5701(o) <- %r13326
	cbr         %r13330, .L2958, .L2960

.L2960:
	symaddr.64* %r13332 <- n
	push.64*    %r13326
	push.64*    %r13332
	call.64*    %r13333 <- luaV_tonumber
	phisrc.64*  %phi5702(o) <- %r13333
	cbr         %r13333, .L2958, .L2959

.L2958:
	phi.64*     %r13335 <- %phi5701(o), %phi5702(o)
	load.f64    %r13336 <- 0[%r13335]
	fpcast.f64  %r13337 <- (64) %r13336
	phisrc.f64  %phi5699(return) <- %r13337
	br          .L2961

.L2959:
	set.f64     %r13339 <- 0.000000
	phisrc.f64  %phi5700(return) <- %r13339
	br          .L2961

.L2961:
	phi.f64     %r13338 <- %phi5699(return), %phi5700(return)
	ret.f64     %r13338


lua_tointeger:
.L2963:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13342 <- index2adr
	load.32     %r13344 <- 8[%r13342]
	seteq.32    %r13346 <- %r13344, $3
	phisrc.64*  %phi5706(o) <- %r13342
	cbr         %r13346, .L2964, .L2966

.L2966:
	symaddr.64* %r13348 <- n
	push.64*    %r13342
	push.64*    %r13348
	call.64*    %r13349 <- luaV_tonumber
	phisrc.64*  %phi5707(o) <- %r13349
	cbr         %r13349, .L2964, .L2965

.L2964:
	phi.64*     %r13351 <- %phi5706(o), %phi5707(o)
	load.f64    %r13352 <- 0[%r13351]
	fpcast.f64  %r13353 <- (64) %r13352
	phisrc.64   %phi5704(return) <- %r13353
	br          .L2967

.L2965:
	phisrc.64   %phi5705(return) <- $0
	br          .L2967

.L2967:
	phi.64      %r13357 <- %phi5704(return), %phi5705(return)
	ret.64      %r13357


lua_toboolean:
.L2969:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13360 <- index2adr
	load.32     %r13362 <- 8[%r13360]
	cbr         %r13362, .L2972, .L2971

.L2971:
	phisrc.32   %phi5709 <- $1
	br          .L2973

.L2972:
	seteq.32    %r13368 <- %r13362, $1
	cbr         %r13368, .L2974, .L2975

.L2974:
	load.32     %r13370 <- 0[%r13360]
	seteq.32    %r13372 <- %r13370, $0
	phisrc.32   %phi5710 <- %r13372
	br          .L2976

.L2975:
	phisrc.32   %phi5711 <- $0
	br          .L2976

.L2976:
	phi.32      %r13373 <- %phi5710, %phi5711
	phisrc.32   %phi5712 <- %r13373
	br          .L2973

.L2973:
	phi.32      %r13374 <- %phi5709, %phi5712
	seteq.32    %r13375 <- %r13374, $0
	ret.32      %r13375


lua_tolstring:
.L2977:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13379 <- index2adr
	load.32     %r13381 <- 8[%r13379]
	seteq.32    %r13382 <- %r13381, $4
	phisrc.64*  %phi5729(o) <- %r13379
	phisrc.64*  %phi5732(o) <- %r13379
	cbr         %r13382, .L2979, .L2978

.L2978:
	push.64*    %arg1
	push.64*    %r13379
	call.32     %r13385 <- luaV_tostring
	cbr         %r13385, .L2981, .L2980

.L2980:
	cbr         %arg3, .L2982, .L2983

.L2982:
	store.64    $0 -> 0[%arg3]
	br          .L2983

.L2983:
	phisrc.64*  %phi5717(return) <- $0
	br          .L2984

.L2981:
	load.64*    %r13391 <- 32[%arg1]
	load.64     %r13392 <- 120[%r13391]
	load.64     %r13395 <- 112[%r13391]
	setae.32    %r13396 <- %r13392, %r13395
	cbr         %r13396, .L2985, .L2986

.L2985:
	push.64*    %arg1
	call        luaC_step
	br          .L2986

.L2986:
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13400 <- index2adr
	phisrc.64*  %phi5730(o) <- %r13400
	phisrc.64*  %phi5733(o) <- %r13400
	br          .L2979

.L2979:
	cbr         %arg3, .L2987, .L2988

.L2987:
	phi.64*     %r13403 <- %phi5732(o), %phi5733(o)
	load.64*    %r13404 <- 0[%r13403]
	load.64     %r13405 <- 16[%r13404]
	store.64    %r13405 -> 0[%arg3]
	phisrc.64*  %phi5731(o) <- %r13403
	br          .L2988

.L2988:
	phi.64*     %r13407 <- %phi5729(o), %phi5730(o), %phi5731(o)
	load.64*    %r13408 <- 0[%r13407]
	add.64*     %r13410 <- %r13408, $24
	ptrcast.64* %r13411 <- (64) %r13410
	phisrc.64*  %phi5718(return) <- %r13411
	br          .L2984

.L2984:
	phi.64*     %r13389 <- %phi5717(return), %phi5718(return)
	ret.64*     %r13389


lua_objlen:
.L2989:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13414 <- index2adr
	load.32     %r13416 <- 8[%r13414]
	switch.32   %r13416, 3 -> .L2994, 4 -> .L2991, 5 -> .L2993, 7 -> .L2992, default -> .L2995

.L2991:
	load.64*    %r13418 <- 0[%r13414]
	load.64     %r13419 <- 16[%r13418]
	phisrc.64   %phi5735(return) <- %r13419
	br          .L2996

.L2992:
	load.64*    %r13422 <- 0[%r13414]
	load.64     %r13423 <- 32[%r13422]
	phisrc.64   %phi5736(return) <- %r13423
	br          .L2996

.L2993:
	load.64*    %r13425 <- 0[%r13414]
	push.64*    %r13425
	call.32     %r13427 <- luaH_getn
	scast.64    %r13428 <- (32) %r13427
	phisrc.64   %phi5737(return) <- %r13428
	br          .L2996

.L2994:
	push.64*    %arg1
	push.64*    %r13414
	call.32     %r13431 <- luaV_tostring
	cbr         %r13431, .L2997, .L2998

.L2997:
	load.64*    %r13433 <- 0[%r13414]
	load.64     %r13434 <- 16[%r13433]
	phisrc.64   %phi5738 <- %r13434
	br          .L2999

.L2998:
	phisrc.64   %phi5739 <- $0
	br          .L2999

.L2999:
	phi.64      %r13435 <- %phi5738, %phi5739
	phisrc.64   %phi5740(return) <- %r13435
	br          .L2996

.L2995:
	phisrc.64   %phi5741(return) <- $0
	br          .L2996

.L2996:
	phi.64      %r13420 <- %phi5735(return), %phi5736(return), %phi5737(return), %phi5740(return), %phi5741(return)
	ret.64      %r13420


lua_tocfunction:
.L3000:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13439 <- index2adr
	load.32     %r13441 <- 8[%r13439]
	seteq.32    %r13442 <- %r13441, $6
	cbr         %r13442, .L3005, .L3002

.L3005:
	load.64*    %r13444 <- 0[%r13439]
	load.8      %r13445 <- 10[%r13444]
	cbr         %r13445, .L3003, .L3002

.L3002:
	phisrc.64*  %phi5748 <- $0
	br          .L3004

.L3003:
	load.64*    %r13448 <- 32[%r13444]
	phisrc.64*  %phi5749 <- %r13448
	br          .L3004

.L3004:
	phi.64*     %r13449 <- %phi5748, %phi5749
	ret.64*     %r13449


lua_touserdata:
.L3006:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13453 <- index2adr
	load.32     %r13455 <- 8[%r13453]
	switch.32   %r13455, 2 -> .L3009, 7 -> .L3008, default -> .L3010

.L3008:
	load.64*    %r13457 <- 0[%r13453]
	add.64*     %r13459 <- %r13457, $40
	cast.64*    %r13460 <- (64) %r13459
	phisrc.64*  %phi5754(return) <- %r13460
	br          .L3011

.L3009:
	load.64*    %r13463 <- 0[%r13453]
	phisrc.64*  %phi5755(return) <- %r13463
	br          .L3011

.L3010:
	phisrc.64*  %phi5756(return) <- $0
	br          .L3011

.L3011:
	phi.64*     %r13461 <- %phi5754(return), %phi5755(return), %phi5756(return)
	ret.64*     %r13461


lua_pushnil:
.L3012:
	<entry-point>
	load.64*    %r13465 <- 16[%arg1]
	store.32    $0 -> 8[%r13465]
	load.64*    %r13468 <- 16[%arg1]
	add.64*     %r13469 <- %r13468, $16
	store.64*   %r13469 -> 16[%arg1]
	ret


lua_pushnumber:
.L3014:
	<entry-point>
	load.64*    %r13471 <- 16[%arg1]
	store.f64   %arg2 -> 0[%r13471]
	store.32    $3 -> 8[%r13471]
	load.64*    %r13477 <- 16[%arg1]
	add.64*     %r13478 <- %r13477, $16
	store.64*   %r13478 -> 16[%arg1]
	ret


lua_pushinteger:
.L3016:
	<entry-point>
	load.64*    %r13480 <- 16[%arg1]
	fpcast.f64  %r13482 <- (64) %arg2
	store.f64   %r13482 -> 0[%r13480]
	store.32    $3 -> 8[%r13480]
	load.64*    %r13487 <- 16[%arg1]
	add.64*     %r13488 <- %r13487, $16
	store.64*   %r13488 -> 16[%arg1]
	ret


lua_pushlstring:
.L3018:
	<entry-point>
	load.64*    %r13490 <- 32[%arg1]
	load.64     %r13491 <- 120[%r13490]
	load.64     %r13494 <- 112[%r13490]
	setae.32    %r13495 <- %r13491, %r13494
	cbr         %r13495, .L3019, .L3020

.L3019:
	push.64*    %arg1
	call        luaC_step
	br          .L3020

.L3020:
	load.64*    %r13498 <- 16[%arg1]
	push.64*    %arg1
	push.64*    %arg2
	push.64     %arg3
	call.64*    %r13502 <- luaS_newlstr
	ptrcast.64* %r13503 <- (64) %r13502
	store.64*   %r13503 -> 0[%r13498]
	store.32    $4 -> 8[%r13498]
	load.64*    %r13508 <- 16[%arg1]
	add.64*     %r13509 <- %r13508, $16
	store.64*   %r13509 -> 16[%arg1]
	ret


lua_pushstring:
.L3022:
	<entry-point>
	cbr         %arg2, .L3024, .L3023

.L3023:
	push.64*    %arg1
	call        lua_pushnil
	br          .L3025

.L3024:
	push.64*    %arg2
	call.64     %r13516 <- strlen
	push.64*    %arg1
	push.64*    %arg2
	push.64     %r13516
	call        lua_pushlstring
	br          .L3025

.L3025:
	ret


lua_pushcclosure:
.L3026:
	<entry-point>
	load.64*    %r13518 <- 32[%arg1]
	load.64     %r13519 <- 120[%r13518]
	load.64     %r13522 <- 112[%r13518]
	setae.32    %r13523 <- %r13519, %r13522
	cbr         %r13523, .L3027, .L3028

.L3027:
	push.64*    %arg1
	call        luaC_step
	br          .L3028

.L3028:
	push.64*    %arg1
	call.64*    %r13529 <- getcurrenv
	push.64*    %arg1
	push.32     %arg3
	push.64*    %r13529
	call.64*    %r13530 <- luaF_newCclosure
	store.64*   %arg2 -> 32[%r13530]
	scast.64    %r13534 <- (32) %arg3
	muls.64     %r13535 <- %r13534, $16
	load.64*    %r13537 <- 16[%arg1]
	cast.64     %r13538 <- (64) %r13537
	sub.64      %r13539 <- %r13538, %r13535
	ptrcast.64* %r13540 <- (64) %r13539
	store.64*   %r13540 -> 16[%arg1]
	phisrc.32   %phi5775(n) <- %arg3
	phisrc.64*  %phi5781 <- %r13540
	phisrc.64*  %phi5782 <- %r13540
	phisrc.64*  %phi5783 <- %r13540
	br          .L3032

.L3032:
	phi.32      %r13541 <- %phi5775(n), %phi5776(n)
	add.32      %r13542(n) <- %r13541, $-1
	phisrc.32   %phi5776(n) <- %r13542(n)
	cbr         %r13541, .L3029, .L3031

.L3029:
	load.64*    %r13544 <- 16[%arg1]
	scast.64    %r13546 <- (32) %r13542(n)
	muls.64     %r13547 <- %r13546, $16
	add.64*     %r13548 <- %r13544, %r13547
	add.64*     %r13551 <- %r13530, $40
	add.64*     %r13555 <- %r13551, %r13547
	load.f64    %r13557 <- 0[%r13548]
	fpcast.f64  %r13558 <- (64) %r13557
	store.f64   %r13558 -> 0[%r13555]
	load.32     %r13561 <- 8[%r13548]
	store.32    %r13561 -> 8[%r13555]
	br          .L3032

.L3031:
	load.64*    %r13565 <- 16[%arg1]
	ptrcast.64* %r13567 <- (64) %r13530
	store.64*   %r13567 -> 0[%r13565]
	store.32    $6 -> 8[%r13565]
	load.64*    %r13572 <- 16[%arg1]
	add.64*     %r13573 <- %r13572, $16
	store.64*   %r13573 -> 16[%arg1]
	ret


lua_pushboolean:
.L3034:
	<entry-point>
	load.64*    %r13575 <- 16[%arg1]
	setne.32    %r13577 <- %arg2, $0
	store.32    %r13577 -> 0[%r13575]
	store.32    $1 -> 8[%r13575]
	load.64*    %r13582 <- 16[%arg1]
	add.64*     %r13583 <- %r13582, $16
	store.64*   %r13583 -> 16[%arg1]
	ret


lua_pushthread:
.L3036:
	<entry-point>
	load.64*    %r13585 <- 16[%arg1]
	ptrcast.64* %r13587 <- (64) %arg1
	store.64*   %r13587 -> 0[%r13585]
	store.32    $8 -> 8[%r13585]
	load.64*    %r13592 <- 16[%arg1]
	add.64*     %r13593 <- %r13592, $16
	store.64*   %r13593 -> 16[%arg1]
	load.64*    %r13595 <- 32[%arg1]
	load.64*    %r13596 <- 176[%r13595]
	seteq.32    %r13598 <- %r13596, %arg1
	ret.32      %r13598


lua_gettable:
.L3038:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13602 <- index2adr
	load.64*    %r13607 <- 16[%arg1]
	add.64*     %r13608 <- %r13607, $-16
	push.64*    %arg1
	push.64*    %r13602
	push.64*    %r13608
	push.64*    %r13608
	call        luaV_gettable
	ret


lua_getfield:
.L3040:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13614 <- index2adr
	push.64*    %arg3
	call.64     %r13620 <- strlen
	push.64*    %arg1
	push.64*    %arg3
	push.64     %r13620
	call.64*    %r13621 <- luaS_newlstr
	ptrcast.64* %r13622 <- (64) %r13621
	store.64*   %r13622 -> 0[key]
	store.32    $4 -> 8[key]
	symaddr.64* %r13627 <- key
	load.64*    %r13629 <- 16[%arg1]
	push.64*    %arg1
	push.64*    %r13614
	push.64*    %r13627
	push.64*    %r13629
	call        luaV_gettable
	load.64*    %r13632 <- 16[%arg1]
	add.64*     %r13633 <- %r13632, $16
	store.64*   %r13633 -> 16[%arg1]
	ret


lua_rawget:
.L3042:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13636 <- index2adr
	load.64*    %r13639 <- 0[%r13636]
	load.64*    %r13642 <- 16[%arg1]
	add.64*     %r13643 <- %r13642, $-16
	push.64*    %r13639
	push.64*    %r13643
	call.64*    %r13644 <- luaH_get
	load.64*    %r13646 <- 16[%arg1]
	add.64*     %r13647 <- %r13646, $-16
	load.f64    %r13649 <- 0[%r13644]
	fpcast.f64  %r13650 <- (64) %r13649
	store.f64   %r13650 -> 0[%r13647]
	load.32     %r13653 <- 8[%r13644]
	store.32    %r13653 -> -8[%r13646]
	ret


lua_rawgeti:
.L3044:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13658 <- index2adr
	load.64*    %r13661 <- 0[%r13658]
	push.64*    %r13661
	push.32     %arg3
	call.64*    %r13664 <- luaH_getnum
	load.64*    %r13666 <- 16[%arg1]
	load.f64    %r13668 <- 0[%r13664]
	fpcast.f64  %r13669 <- (64) %r13668
	store.f64   %r13669 -> 0[%r13666]
	load.32     %r13672 <- 8[%r13664]
	store.32    %r13672 -> 8[%r13666]
	load.64*    %r13677 <- 16[%arg1]
	add.64*     %r13678 <- %r13677, $16
	store.64*   %r13678 -> 16[%arg1]
	ret


lua_createtable:
.L3046:
	<entry-point>
	load.64*    %r13680 <- 32[%arg1]
	load.64     %r13681 <- 120[%r13680]
	load.64     %r13684 <- 112[%r13680]
	setae.32    %r13685 <- %r13681, %r13684
	cbr         %r13685, .L3047, .L3048

.L3047:
	push.64*    %arg1
	call        luaC_step
	br          .L3048

.L3048:
	load.64*    %r13688 <- 16[%arg1]
	push.64*    %arg1
	push.32     %arg2
	push.32     %arg3
	call.64*    %r13692 <- luaH_new
	ptrcast.64* %r13693 <- (64) %r13692
	store.64*   %r13693 -> 0[%r13688]
	store.32    $5 -> 8[%r13688]
	load.64*    %r13698 <- 16[%arg1]
	add.64*     %r13699 <- %r13698, $16
	store.64*   %r13699 -> 16[%arg1]
	ret


lua_getmetatable:
.L3050:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13702 <- index2adr
	load.32     %r13704 <- 8[%r13702]
	switch.32   %r13704, 5 -> .L3052, 7 -> .L3053, default -> .L3054

.L3052:
	load.64*    %r13706 <- 0[%r13702]
	load.64*    %r13707(mt) <- 16[%r13706]
	phisrc.64*  %phi5795(mt) <- %r13707(mt)
	br          .L3051

.L3053:
	load.64*    %r13709 <- 0[%r13702]
	load.64*    %r13710 <- 16[%r13709]
	phisrc.64*  %phi5796(mt) <- %r13710
	br          .L3051

.L3054:
	load.64*    %r13712 <- 32[%arg1]
	add.64*     %r13713 <- %r13712, $224
	scast.64    %r13716 <- (32) %r13704
	muls.64     %r13717 <- %r13716, $8
	add.64*     %r13718 <- %r13713, %r13717
	load.64*    %r13719 <- 0[%r13718]
	phisrc.64*  %phi5797(mt) <- %r13719
	br          .L3051

.L3051:
	phi.64*     %r13720(mt) <- %phi5795(mt), %phi5796(mt), %phi5797(mt)
	setne.32    %r13732 <- %r13720(mt), $0
	cbr         %r13720(mt), .L3056, .L3058

.L3056:
	load.64*    %r13723 <- 16[%arg1]
	ptrcast.64* %r13725 <- (64) %r13720(mt)
	store.64*   %r13725 -> 0[%r13723]
	store.32    $5 -> 8[%r13723]
	load.64*    %r13730 <- 16[%arg1]
	add.64*     %r13731 <- %r13730, $16
	store.64*   %r13731 -> 16[%arg1]
	br          .L3058

.L3058:
	ret.32      %r13732


lua_getfenv:
.L3059:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13736 <- index2adr
	load.32     %r13739 <- 8[%r13736]
	switch.32   %r13739, 6 -> .L3061, 7 -> .L3062, 8 -> .L3063, default -> .L3064

.L3061:
	load.64*    %r13741 <- 16[%arg1]
	load.64*    %r13743 <- 0[%r13736]
	load.64*    %r13744 <- 24[%r13743]
	ptrcast.64* %r13745 <- (64) %r13744
	store.64*   %r13745 -> 0[%r13741]
	store.32    $5 -> 8[%r13741]
	phisrc.64*  %phi5804(L) <- %arg1
	br          .L3060

.L3062:
	load.64*    %r13749 <- 16[%arg1]
	load.64*    %r13751 <- 0[%r13736]
	load.64*    %r13752 <- 24[%r13751]
	ptrcast.64* %r13753 <- (64) %r13752
	store.64*   %r13753 -> 0[%r13749]
	store.32    $5 -> 8[%r13749]
	phisrc.64*  %phi5805(L) <- %arg1
	br          .L3060

.L3063:
	load.64*    %r13757 <- 0[%r13736]
	add.64*     %r13759 <- %r13757, $120
	load.64*    %r13761 <- 16[%arg1]
	load.f64    %r13763 <- 0[%r13759]
	fpcast.f64  %r13764 <- (64) %r13763
	store.f64   %r13764 -> 0[%r13761]
	load.32     %r13767 <- 128[%r13757]
	store.32    %r13767 -> 8[%r13761]
	phisrc.64*  %phi5806(L) <- %arg1
	br          .L3060

.L3064:
	load.64*    %r13771 <- 16[%r13737(L)]
	store.32    $0 -> 8[%r13771]
	phisrc.64*  %phi5807(L) <- %r13737(L)
	br          .L3060

.L3060:
	phi.64*     %r13772 <- %phi5804(L), %phi5805(L), %phi5806(L), %phi5807(L)
	load.64*    %r13774 <- 16[%r13772]
	add.64*     %r13775 <- %r13774, $16
	store.64*   %r13775 -> 16[%r13772]
	ret


lua_settable:
.L3066:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13779 <- index2adr
	load.64*    %r13784 <- 16[%arg1]
	add.64*     %r13785 <- %r13784, $-32
	add.64*     %r13788 <- %r13784, $-16
	push.64*    %arg1
	push.64*    %r13779
	push.64*    %r13785
	push.64*    %r13788
	call        luaV_settable
	load.64*    %r13790 <- 16[%arg1]
	cast.64     %r13791 <- (64) %r13790
	add.64      %r13792 <- %r13791, $-32
	ptrcast.64* %r13793 <- (64) %r13792
	store.64*   %r13793 -> 16[%arg1]
	ret


lua_setfield:
.L3068:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13797 <- index2adr
	push.64*    %arg3
	call.64     %r13803 <- strlen
	push.64*    %arg1
	push.64*    %arg3
	push.64     %r13803
	call.64*    %r13804 <- luaS_newlstr
	ptrcast.64* %r13805 <- (64) %r13804
	store.64*   %r13805 -> 0[key]
	store.32    $4 -> 8[key]
	symaddr.64* %r13810 <- key
	load.64*    %r13812 <- 16[%arg1]
	add.64*     %r13813 <- %r13812, $-16
	push.64*    %arg1
	push.64*    %r13797
	push.64*    %r13810
	push.64*    %r13813
	call        luaV_settable
	load.64*    %r13815 <- 16[%arg1]
	add.64*     %r13816 <- %r13815, $-16
	store.64*   %r13816 -> 16[%arg1]
	ret


lua_rawset:
.L3070:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13820 <- index2adr
	load.64*    %r13823 <- 16[%arg1]
	add.64*     %r13824 <- %r13823, $-16
	load.64*    %r13827 <- 0[%r13820]
	add.64*     %r13831 <- %r13823, $-32
	push.64*    %arg1
	push.64*    %r13827
	push.64*    %r13831
	call.64*    %r13832 <- luaH_set
	load.f64    %r13834 <- 0[%r13824]
	fpcast.f64  %r13835 <- (64) %r13834
	store.f64   %r13835 -> 0[%r13832]
	load.32     %r13838 <- -8[%r13823]
	store.32    %r13838 -> 8[%r13832]
	load.64*    %r13842 <- 16[%arg1]
	load.32     %r13844 <- -8[%r13842]
	setge.32    %r13845 <- %r13844, $4
	phisrc.64*  %phi5824 <- %r13842
	phisrc.64*  %phi5825 <- %r13842
	phisrc.64*  %phi5826 <- %r13842
	phisrc.64*  %phi5827 <- %r13842
	cbr         %r13845, .L3074, .L3072

.L3074:
	load.64*    %r13849 <- -16[%r13842]
	load.8      %r13850 <- 9[%r13849]
	cast.32     %r13851 <- (8) %r13850
	and.32      %r13852 <- %r13851, $3
	cbr         %r13852, .L3073, .L3072

.L3073:
	load.64*    %r13854 <- 0[%r13820]
	ptrcast.64* %r13856 <- (64) %r13854
	load.8      %r13857 <- 9[%r13856]
	cast.32     %r13858 <- (8) %r13857
	and.32      %r13859 <- %r13858, $4
	cbr         %r13859, .L3071, .L3072

.L3071:
	push.64*    %arg1
	push.64*    %r13854
	call        luaC_barrierback
	br          .L3072

.L3072:
	load.64*    %r13865 <- 16[%arg1]
	cast.64     %r13866 <- (64) %r13865
	add.64      %r13867 <- %r13866, $-32
	ptrcast.64* %r13868 <- (64) %r13867
	store.64*   %r13868 -> 16[%arg1]
	ret


lua_rawseti:
.L3076:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13872 <- index2adr
	load.64*    %r13875 <- 16[%arg1]
	add.64*     %r13876 <- %r13875, $-16
	load.64*    %r13879 <- 0[%r13872]
	push.64*    %arg1
	push.64*    %r13879
	push.32     %arg3
	call.64*    %r13882 <- luaH_setnum
	load.f64    %r13884 <- 0[%r13876]
	fpcast.f64  %r13885 <- (64) %r13884
	store.f64   %r13885 -> 0[%r13882]
	load.32     %r13888 <- -8[%r13875]
	store.32    %r13888 -> 8[%r13882]
	load.64*    %r13892 <- 16[%arg1]
	load.32     %r13894 <- -8[%r13892]
	setge.32    %r13895 <- %r13894, $4
	phisrc.64*  %phi5837 <- %r13892
	phisrc.64*  %phi5838 <- %r13892
	phisrc.64*  %phi5839 <- %r13892
	phisrc.64*  %phi5840 <- %r13892
	cbr         %r13895, .L3080, .L3078

.L3080:
	load.64*    %r13899 <- -16[%r13892]
	load.8      %r13900 <- 9[%r13899]
	cast.32     %r13901 <- (8) %r13900
	and.32      %r13902 <- %r13901, $3
	cbr         %r13902, .L3079, .L3078

.L3079:
	load.64*    %r13904 <- 0[%r13872]
	ptrcast.64* %r13906 <- (64) %r13904
	load.8      %r13907 <- 9[%r13906]
	cast.32     %r13908 <- (8) %r13907
	and.32      %r13909 <- %r13908, $4
	cbr         %r13909, .L3077, .L3078

.L3077:
	push.64*    %arg1
	push.64*    %r13904
	call        luaC_barrierback
	br          .L3078

.L3078:
	load.64*    %r13915 <- 16[%arg1]
	add.64*     %r13916 <- %r13915, $-16
	store.64*   %r13916 -> 16[%arg1]
	ret


lua_setmetatable:
.L3082:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13920(obj) <- index2adr
	load.64*    %r13923 <- 16[%arg1]
	load.32     %r13925 <- -8[%r13923]
	cbr         %r13925, .L3084, .L3083

.L3083:
	phisrc.64*  %phi5869(mt) <- $0
	br          .L3085

.L3084:
	load.64*    %r13931 <- -16[%r13923]
	phisrc.64*  %phi5870(mt) <- %r13931
	br          .L3085

.L3085:
	load.32     %r13934 <- 8[%r13920(obj)]
	phi.64*     %r13935 <- %phi5869(mt), %phi5870(mt)
	switch.32   %r13934, 5 -> .L3087, 7 -> .L3088, default -> .L3089

.L3087:
	load.64*    %r13937 <- 0[%r13920(obj)]
	store.64*   %r13935 -> 16[%r13937]
	cbr         %r13935, .L3090, .L3086

.L3090:
	ptrcast.64* %r13940 <- (64) %r13935
	load.8      %r13941 <- 9[%r13940]
	cast.32     %r13942 <- (8) %r13941
	and.32      %r13943 <- %r13942, $3
	cbr         %r13943, .L3094, .L3086

.L3094:
	load.64*    %r13945 <- 0[%r13920(obj)]
	ptrcast.64* %r13947 <- (64) %r13945
	load.8      %r13948 <- 9[%r13947]
	cast.32     %r13949 <- (8) %r13948
	and.32      %r13950 <- %r13949, $4
	cbr         %r13950, .L3092, .L3086

.L3092:
	push.64*    %arg1
	push.64*    %r13945
	call        luaC_barrierback
	br          .L3086

.L3088:
	load.64*    %r13957 <- 0[%r13920(obj)]
	store.64*   %r13935 -> 16[%r13957]
	cbr         %r13935, .L3095, .L3086

.L3095:
	ptrcast.64* %r13960 <- (64) %r13935
	load.8      %r13961 <- 9[%r13960]
	cast.32     %r13962 <- (8) %r13961
	and.32      %r13963 <- %r13962, $3
	cbr         %r13963, .L3099, .L3086

.L3099:
	load.64*    %r13965 <- 0[%r13920(obj)]
	ptrcast.64* %r13967 <- (64) %r13965
	load.8      %r13968 <- 9[%r13967]
	cast.32     %r13969 <- (8) %r13968
	and.32      %r13970 <- %r13969, $4
	cbr         %r13970, .L3097, .L3086

.L3097:
	ptrcast.64* %r13975 <- (64) %r13965
	push.64*    %arg1
	push.64*    %r13975
	push.64*    %r13960
	call        luaC_barrierf
	br          .L3086

.L3089:
	load.64*    %r13980 <- 32[%arg1]
	add.64*     %r13981 <- %r13980, $224
	scast.64    %r13984 <- (32) %r13934
	muls.64     %r13985 <- %r13984, $8
	add.64*     %r13986 <- %r13981, %r13985
	store.64*   %r13935 -> 0[%r13986]
	br          .L3086

.L3086:
	load.64*    %r13988 <- 16[%arg1]
	add.64*     %r13989 <- %r13988, $-16
	store.64*   %r13989 -> 16[%arg1]
	ret.32      $1


lua_setfenv:
.L3101:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r13994 <- index2adr
	load.32     %r13998 <- 8[%r13994]
	phisrc.32   %phi5891(res) <- $1
	switch.32   %r13998, 6 -> .L3103, 7 -> .L3104, 8 -> .L3105, default -> .L3106

.L3103:
	load.64*    %r14000 <- 16[%arg1]
	load.64*    %r14002 <- -16[%r14000]
	load.64*    %r14005 <- 0[%r13994]
	store.64*   %r14002 -> 24[%r14005]
	br          .L3102

.L3104:
	load.64*    %r14007 <- 16[%arg1]
	load.64*    %r14009 <- -16[%r14007]
	load.64*    %r14012 <- 0[%r13994]
	store.64*   %r14009 -> 24[%r14012]
	br          .L3102

.L3105:
	load.64*    %r14014 <- 0[%r13994]
	load.64*    %r14018 <- 16[%arg1]
	load.64*    %r14020 <- -16[%r14018]
	ptrcast.64* %r14022 <- (64) %r14020
	store.64*   %r14022 -> 120[%r14014]
	store.32    $5 -> 128[%r14014]
	br          .L3102

.L3106:
	phisrc.32   %phi5892(res) <- $0
	br          .L3102

.L3102:
	phi.32      %r14025(res) <- %phi5891(res), %phi5892(res)
	cbr         %r14025(res), .L3107, .L3108

.L3107:
	load.64*    %r14027 <- 16[%arg1]
	load.64*    %r14029 <- -16[%r14027]
	ptrcast.64* %r14031 <- (64) %r14029
	load.8      %r14032 <- 9[%r14031]
	cast.32     %r14033 <- (8) %r14032
	and.32      %r14034 <- %r14033, $3
	cbr         %r14034, .L3111, .L3108

.L3111:
	load.64*    %r14036 <- 0[%r13994]
	ptrcast.64* %r14037 <- (64) %r14036
	load.8      %r14038 <- 9[%r14037]
	cast.32     %r14039 <- (8) %r14038
	and.32      %r14040 <- %r14039, $4
	cbr         %r14040, .L3109, .L3108

.L3109:
	ptrcast.64* %r14044 <- (64) %r14036
	ptrcast.64* %r14050 <- (64) %r14029
	push.64*    %arg1
	push.64*    %r14044
	push.64*    %r14050
	call        luaC_barrierf
	br          .L3108

.L3108:
	load.64*    %r14052 <- 16[%arg1]
	add.64*     %r14053 <- %r14052, $-16
	store.64*   %r14053 -> 16[%arg1]
	ret.32      %r14025(res)


lua_call:
.L3113:
	<entry-point>
	load.64*    %r14059 <- 16[%arg1]
	add.32      %r14061 <- %arg2, $1
	scast.64    %r14062 <- (32) %r14061
	muls.64     %r14063 <- %r14062, $16
	sub.64*     %r14064 <- %r14059, %r14063
	push.64*    %arg1
	push.64*    %r14064
	push.32     %arg3
	call        luaD_call
	seteq.32    %r14069 <- %arg3, $0xffffffff
	cbr         %r14069, .L3116, .L3115

.L3116:
	load.64*    %r14071 <- 16[%arg1]
	load.64*    %r14073 <- 40[%arg1]
	load.64*    %r14074 <- 16[%r14073]
	setae.32    %r14075 <- %r14071, %r14074
	cbr         %r14075, .L3114, .L3115

.L3114:
	store.64*   %r14071 -> 16[%r14073]
	br          .L3115

.L3115:
	ret


f_call:
.L3117:
	<entry-point>
	ptrcast.64* %r14081 <- (64) %arg2
	load.64*    %r14084 <- 0[%r14081]
	load.32     %r14086 <- 8[%r14081]
	push.64*    %arg1
	push.64*    %r14084
	push.32     %r14086
	call        luaD_call
	ret


lua_pcall:
.L3119:
	<entry-point>
	cbr         %arg4, .L3121, .L3120

.L3120:
	phisrc.64   %phi5917(func) <- $0
	br          .L3122

.L3121:
	push.64*    %arg1
	push.32     %arg4
	call.64*    %r14093 <- index2adr
	ptrcast.64* %r14096 <- (64) %r14093
	load.64*    %r14098 <- 64[%arg1]
	ptrcast.64* %r14099 <- (64) %r14098
	sub.64      %r14100 <- %r14096, %r14099
	phisrc.64   %phi5918(func) <- %r14100
	br          .L3122

.L3122:
	load.64*    %r14102 <- 16[%arg1]
	add.32      %r14104 <- %arg2, $1
	scast.64    %r14105 <- (32) %r14104
	muls.64     %r14106 <- %r14105, $16
	sub.64*     %r14107 <- %r14102, %r14106
	store.64*   %r14107 -> 0[c]
	store.32    %arg3 -> 8[c]
	symaddr.64* %r14110 <- f_call
	symaddr.64* %r14111 <- c
	cast.64*    %r14112 <- (64) %r14111
	ptrcast.64* %r14114 <- (64) %r14107
	load.64*    %r14116 <- 64[%arg1]
	ptrcast.64* %r14117 <- (64) %r14116
	sub.64      %r14118 <- %r14114, %r14117
	phi.64      %r14119 <- %phi5917(func), %phi5918(func)
	push.64*    %arg1
	push.64*    %r14110
	push.64*    %r14112
	push.64     %r14118
	push.64     %r14119
	call.32     %r14120(status) <- luaD_pcall
	seteq.32    %r14122 <- %arg3, $0xffffffff
	cbr         %r14122, .L3125, .L3126

.L3125:
	load.64*    %r14124 <- 16[%arg1]
	load.64*    %r14126 <- 40[%arg1]
	load.64*    %r14127 <- 16[%r14126]
	setae.32    %r14128 <- %r14124, %r14127
	cbr         %r14128, .L3123, .L3126

.L3123:
	store.64*   %r14124 -> 16[%r14126]
	br          .L3126

.L3126:
	ret.32      %r14120(status)


lua_load:
.L3127:
	<entry-point>
	phisrc.64*  %phi5926(chunkname) <- %arg4
	cbr         %arg4, .L3129, .L3128

.L3128:
	symaddr.64* %r14136 <- <anon symbol:0x1b72410>
	phisrc.64*  %phi5927(chunkname) <- %r14136
	br          .L3129

.L3129:
	symaddr.64* %r14138 <- z
	push.64*    %arg1
	push.64*    %r14138
	push.64*    %arg2
	push.64*    %arg3
	call        luaZ_init
	phi.64*     %r14143 <- %phi5926(chunkname), %phi5927(chunkname)
	push.64*    %arg1
	push.64*    %r14138
	push.64*    %r14143
	call.32     %r14144 <- luaD_protectedparser
	ret.32      %r14144


lua_error:
.L3131:
	<entry-point>
	push.64*    %arg1
	call        luaG_errormsg
	ret.32      $0


lua_next:
.L3133:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r14152 <- index2adr
	load.64*    %r14156 <- 0[%r14152]
	load.64*    %r14159 <- 16[%arg1]
	add.64*     %r14160 <- %r14159, $-16
	push.64*    %arg1
	push.64*    %r14156
	push.64*    %r14160
	call.32     %r14161 <- luaH_next
	cbr         %r14161, .L3134, .L3135

.L3134:
	load.64*    %r14165 <- 16[%arg1]
	add.64*     %r14166 <- %r14165, $16
	store.64*   %r14166 -> 16[%arg1]
	br          .L3137

.L3135:
	load.64*    %r14168 <- 16[%arg1]
	cast.64     %r14169 <- (64) %r14168
	add.64      %r14170 <- %r14169, $-16
	ptrcast.64* %r14171 <- (64) %r14170
	store.64*   %r14171 -> 16[%arg1]
	br          .L3137

.L3137:
	ret.32      %r14161


lua_concat:
.L3138:
	<entry-point>
	setge.32    %r14176 <- %arg2, $2
	cbr         %r14176, .L3139, .L3140

.L3139:
	load.64*    %r14178 <- 32[%arg1]
	load.64     %r14179 <- 120[%r14178]
	load.64     %r14182 <- 112[%r14178]
	setae.32    %r14183 <- %r14179, %r14182
	cbr         %r14183, .L3141, .L3142

.L3141:
	push.64*    %arg1
	call        luaC_step
	br          .L3142

.L3142:
	load.64*    %r14188 <- 16[%arg1]
	load.64*    %r14190 <- 24[%arg1]
	sub.64      %r14191 <- %r14188, %r14190
	divs.64     %r14192 <- %r14191, $16
	scast.32    %r14193 <- (64) %r14192
	add.32      %r14194 <- %r14193, $-1
	push.64*    %arg1
	push.32     %arg2
	push.32     %r14194
	call        luaV_concat
	add.32      %r14196 <- %arg2, $-1
	scast.64    %r14197 <- (32) %r14196
	muls.64     %r14198 <- %r14197, $16
	load.64*    %r14200 <- 16[%arg1]
	cast.64     %r14201 <- (64) %r14200
	sub.64      %r14202 <- %r14201, %r14198
	ptrcast.64* %r14203 <- (64) %r14202
	store.64*   %r14203 -> 16[%arg1]
	br          .L3143

.L3140:
	cbr         %arg2, .L3143, .L3144

.L3144:
	load.64*    %r14207 <- 16[%r14174(L)]
	symaddr.64* %r14209 <- <anon symbol:0x1b73e58>
	push.64*    %r14174(L)
	push.64*    %r14209
	push.64     $0
	call.64*    %r14210 <- luaS_newlstr
	ptrcast.64* %r14211 <- (64) %r14210
	store.64*   %r14211 -> 0[%r14207]
	store.32    $4 -> 8[%r14207]
	load.64*    %r14216 <- 16[%r14174(L)]
	add.64*     %r14217 <- %r14216, $16
	store.64*   %r14217 -> 16[%r14174(L)]
	br          .L3143

.L3143:
	ret


lua_newuserdata:
.L3146:
	<entry-point>
	load.64*    %r14219 <- 32[%arg1]
	load.64     %r14220 <- 120[%r14219]
	load.64     %r14223 <- 112[%r14219]
	setae.32    %r14224 <- %r14220, %r14223
	cbr         %r14224, .L3147, .L3148

.L3147:
	push.64*    %arg1
	call        luaC_step
	br          .L3148

.L3148:
	push.64*    %arg1
	call.64*    %r14229 <- getcurrenv
	push.64*    %arg1
	push.64     %arg2
	push.64*    %r14229
	call.64*    %r14230 <- luaS_newudata
	load.64*    %r14232 <- 16[%arg1]
	ptrcast.64* %r14234 <- (64) %r14230
	store.64*   %r14234 -> 0[%r14232]
	store.32    $7 -> 8[%r14232]
	load.64*    %r14239 <- 16[%arg1]
	add.64*     %r14240 <- %r14239, $16
	store.64*   %r14240 -> 16[%arg1]
	add.64*     %r14242 <- %r14230, $40
	cast.64*    %r14243 <- (64) %r14242
	ret.64*     %r14243


luaL_argerror:
.L3150:
	<entry-point>
	symaddr.64* %r14246 <- ar
	push.64*    %arg1
	push.32     $0
	push.64*    %r14246
	call.32     %r14247 <- lua_getstack
	phisrc.32   %phi5952(narg) <- %arg2
	cbr         %r14247, .L3152, .L3151

.L3151:
	symaddr.64* %r14249 <- <anon symbol:0x1b75e58>
	push.64*    %arg1
	push.64*    %r14249
	push.32     %arg2
	push.64*    %arg3
	call.32     %r14252 <- luaL_error
	phisrc.32   %phi5945(return) <- %r14252
	br          .L3153

.L3152:
	symaddr.64* %r14255 <- <anon symbol:0x1b761f8>
	push.64*    %arg1
	push.64*    %r14255
	push.64*    %r14246
	call.32     %r14257 <- lua_getinfo
	load.64*    %r14258 <- 16[ar]
	symaddr.64* %r14259 <- <anon symbol:0x1b76850>
	push.64*    %r14258
	push.64*    %r14259
	call.32     %r14260 <- strcmp
	cbr         %r14260, .L3155, .L3154

.L3154:
	add.32      %r14263 <- %arg2, $-1
	phisrc.32   %phi5953(narg) <- %r14263
	cbr         %r14263, .L3155, .L3156

.L3156:
	symaddr.64* %r14267 <- <anon symbol:0x1b76bf0>
	load.64*    %r14268 <- 8[ar]
	push.64*    %arg1
	push.64*    %r14267
	push.64*    %r14268
	push.64*    %arg3
	call.32     %r14270 <- luaL_error
	phisrc.32   %phi5946(return) <- %r14270
	br          .L3153

.L3155:
	load.64*    %r14271(ar) <- 8[ar]
	phisrc.64*  %phi5959(ar) <- %r14271(ar)
	cbr         %r14271(ar), .L3159, .L3158

.L3158:
	symaddr.64* %r14273 <- <anon symbol:0x1b77248>
	store.64*   %r14273 -> 8[ar]
	phisrc.64*  %phi5960(ar) <- %r14273
	br          .L3159

.L3159:
	symaddr.64* %r14275 <- <anon symbol:0x1b775e8>
	phi.32      %r14276 <- %phi5952(narg), %phi5953(narg)
	phi.64*     %r14277 <- %phi5959(ar), %phi5960(ar)
	push.64*    %arg1
	push.64*    %r14275
	push.32     %r14276
	push.64*    %r14277
	push.64*    %arg3
	call.32     %r14279 <- luaL_error
	phisrc.32   %phi5947(return) <- %r14279
	br          .L3153

.L3153:
	phi.32      %r14253 <- %phi5945(return), %phi5946(return), %phi5947(return)
	ret.32      %r14253


luaL_typerror:
.L3160:
	<entry-point>
	symaddr.64* %r14281 <- <anon symbol:0x1b780c8>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14286 <- lua_type
	push.64*    %arg1
	push.32     %r14286
	call.64*    %r14287 <- lua_typename
	push.64*    %arg1
	push.64*    %r14281
	push.64*    %arg3
	push.64*    %r14287
	call.64*    %r14288 <- lua_pushfstring
	push.64*    %arg1
	push.32     %arg2
	push.64*    %r14288
	call.32     %r14292 <- luaL_argerror
	ret.32      %r14292


tag_error:
.L3162:
	<entry-point>
	push.64*    %arg1
	push.32     %arg3
	call.64*    %r14298 <- lua_typename
	push.64*    %arg1
	push.32     %arg2
	push.64*    %r14298
	call.32     %r14299 <- luaL_typerror
	ret


luaL_where:
.L3164:
	<entry-point>
	symaddr.64* %r14302 <- ar
	push.64*    %arg1
	push.32     %arg2
	push.64*    %r14302
	call.32     %r14303 <- lua_getstack
	cbr         %r14303, .L3165, .L3166

.L3165:
	symaddr.64* %r14305 <- <anon symbol:0x1b78638>
	push.64*    %arg1
	push.64*    %r14305
	push.64*    %r14302
	call.32     %r14307 <- lua_getinfo
	load.32     %r14308(ar) <- 40[ar]
	setgt.32    %r14309 <- %r14308(ar), $0
	cbr         %r14309, .L3167, .L3166

.L3167:
	symaddr.64* %r14311 <- <anon symbol:0x1b78c90>
	add.64*     %r14313 <- %r14302, $56
	push.64*    %arg1
	push.64*    %r14311
	push.64*    %r14313
	push.32     %r14308(ar)
	call.64*    %r14315 <- lua_pushfstring
	br          .L3169

.L3166:
	symaddr.64* %r14317 <- <anon symbol:0x1b793d0>
	push.64*    %arg1
	push.64*    %r14317
	push.64     $0
	call        lua_pushlstring
	br          .L3169

.L3169:
	ret


luaL_newmetatable:
.L3170:
	<entry-point>
	push.64*    %arg1
	push.32     $0xffffd8f0
	push.64*    %arg2
	call        lua_getfield
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r14321 <- lua_type
	seteq.32    %r14323 <- %r14321, $0
	cbr         %r14321, .L3173, .L3172

.L3172:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	push.64*    %arg1
	push.32     $0
	push.32     $0
	call        lua_createtable
	push.64*    %arg1
	push.32     $0xffffffff
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $0xffffd8f0
	push.64*    %arg2
	call        lua_setfield
	br          .L3173

.L3173:
	ret.32      %r14323


luaL_checkudata:
.L3174:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64*    %r14331 <- lua_touserdata
	cbr         %r14331, .L3175, .L3176

.L3175:
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14336 <- lua_getmetatable
	cbr         %r14336, .L3177, .L3176

.L3177:
	push.64*    %arg1
	push.32     $0xffffd8f0
	push.64*    %arg3
	call        lua_getfield
	push.64*    %arg1
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r14340 <- lua_rawequal
	cbr         %r14340, .L3179, .L3176

.L3179:
	push.64*    %arg1
	push.32     $0xfffffffd
	call        lua_settop
	phisrc.64*  %phi5971(return) <- %r14331
	br          .L3181

.L3176:
	push.64*    %arg1
	push.32     %arg2
	push.64*    %arg3
	call.32     %r14347 <- luaL_typerror
	phisrc.64*  %phi5972(return) <- $0
	br          .L3181

.L3181:
	phi.64*     %r14343 <- %phi5971(return), %phi5972(return)
	ret.64*     %r14343


luaL_checkstack:
.L3182:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14350 <- lua_checkstack
	cbr         %r14350, .L3184, .L3183

.L3183:
	symaddr.64* %r14352 <- <anon symbol:0x1b79940>
	push.64*    %arg1
	push.64*    %r14352
	push.64*    %arg3
	call.32     %r14354 <- luaL_error
	br          .L3184

.L3184:
	ret


luaL_checktype:
.L3185:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14357 <- lua_type
	setne.32    %r14359 <- %r14357, %arg3
	cbr         %r14359, .L3186, .L3187

.L3186:
	push.64*    %arg1
	push.32     %arg2
	push.32     %arg3
	call        tag_error
	br          .L3187

.L3187:
	ret


luaL_checkany:
.L3188:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14365 <- lua_type
	seteq.32    %r14366 <- %r14365, $0xffffffff
	cbr         %r14366, .L3189, .L3190

.L3189:
	symaddr.64* %r14369 <- <anon symbol:0x1b79ce0>
	push.64*    %arg1
	push.32     %arg2
	push.64*    %r14369
	call.32     %r14370 <- luaL_argerror
	br          .L3190

.L3190:
	ret


luaL_checklstring:
.L3191:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	push.64*    %arg3
	call.64*    %r14374 <- lua_tolstring
	cbr         %r14374, .L3194, .L3192

.L3192:
	push.64*    %arg1
	push.32     %arg2
	push.32     $4
	call        tag_error
	br          .L3194

.L3194:
	ret.64*     %r14374


luaL_optlstring:
.L3195:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14382 <- lua_type
	setle.32    %r14383 <- %r14382, $0
	cbr         %r14383, .L3196, .L3197

.L3196:
	cbr         %arg4, .L3198, .L3199

.L3198:
	push.64*    %arg3
	call.64     %r14386 <- strlen
	select.64   %r14388 <- %arg3, %r14386, $0
	store.64    %r14388 -> 0[%arg4]
	br          .L3199

.L3199:
	phisrc.64*  %phi5997(return) <- %arg3
	br          .L3200

.L3197:
	push.64*    %arg1
	push.32     %arg2
	push.64*    %arg4
	call.64*    %r14395 <- luaL_checklstring
	phisrc.64*  %phi5998(return) <- %r14395
	br          .L3200

.L3200:
	phi.64*     %r14391 <- %phi5997(return), %phi5998(return)
	ret.64*     %r14391


luaL_checknumber:
.L3202:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.f64    %r14398 <- lua_tonumber
	set.f64     %r14400 <- 0.000000
	seteq.32    %r14401 <- %r14398, %r14400
	cbr         %r14401, .L3205, .L3204

.L3205:
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14404 <- lua_isnumber
	cbr         %r14404, .L3204, .L3203

.L3203:
	push.64*    %arg1
	push.32     %arg2
	push.32     $3
	call        tag_error
	br          .L3204

.L3204:
	phisrc.f64  %phi6007(return) <- %r14398
	phi.f64     %r14408 <- %phi6007(return)
	ret.f64     %r14398


luaL_checkinteger:
.L3207:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.64     %r14411 <- lua_tointeger
	cbr         %r14411, .L3211, .L3210

.L3210:
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14416 <- lua_isnumber
	cbr         %r14416, .L3211, .L3208

.L3208:
	push.64*    %arg1
	push.32     %arg2
	push.32     $3
	call        tag_error
	br          .L3211

.L3211:
	ret.64      %r14411


luaL_optinteger:
.L3212:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14423 <- lua_type
	setle.32    %r14424 <- %r14423, $0
	cbr         %r14424, .L3214, .L3215

.L3214:
	phisrc.64   %phi6019 <- %arg3
	br          .L3216

.L3215:
	push.64*    %arg1
	push.32     %arg2
	call.64     %r14428 <- luaL_checkinteger
	phisrc.64   %phi6020 <- %r14428
	br          .L3216

.L3216:
	phi.64      %r14429 <- %phi6019, %phi6020
	ret.64      %r14429


luaL_getmetafield:
.L3217:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.32     %r14433 <- lua_getmetatable
	cbr         %r14433, .L3219, .L3218

.L3218:
	phisrc.32   %phi6025(return) <- $0
	br          .L3220

.L3219:
	push.64*    %arg1
	push.64*    %arg3
	call        lua_pushstring
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_rawget
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r14439 <- lua_type
	cbr         %r14439, .L3222, .L3221

.L3221:
	push.64*    %arg1
	push.32     $0xfffffffd
	call        lua_settop
	phisrc.32   %phi6026(return) <- $0
	br          .L3220

.L3222:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_remove
	phisrc.32   %phi6027(return) <- $1
	br          .L3220

.L3220:
	phi.32      %r14434 <- %phi6025(return), %phi6026(return), %phi6027(return)
	ret.32      %r14434


luaL_register:
.L3224:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	push.32     $0
	call        luaI_openlib
	ret


libsize:
.L3226:
	<entry-point>
	phisrc.64*  %phi6034(l) <- %arg1
	phisrc.32   %phi6038(size) <- $0
	br          .L3230

.L3230:
	phi.64*     %r14446(l) <- %phi6034(l), %phi6035(l)
	load.64*    %r14447 <- 0[%r14446(l)]
	phi.32      %r14448 <- %phi6038(size), %phi6039(size)
	cbr         %r14447, .L3227, .L3231

.L3227:
	add.32      %r14449 <- %r14448, $1
	phisrc.32   %phi6039(size) <- %r14449
	add.64*     %r14451 <- %r14446(l), $16
	phisrc.64*  %phi6035(l) <- %r14451
	br          .L3230

.L3231:
	ret.32      %r14448


luaI_openlib:
.L3232:
	<entry-point>
	phisrc.64*  %phi6062(l) <- %arg3
	cbr         %arg2, .L3233, .L3242

.L3233:
	push.64*    %arg3
	call.32     %r14456(size) <- libsize
	symaddr.64* %r14458 <- <anon symbol:0x1b74fd8>
	push.64*    %arg1
	push.32     $0xffffd8f0
	push.64*    %r14458
	push.32     $1
	call.64*    %r14459 <- luaL_findtable
	push.64*    %arg1
	push.32     $0xffffffff
	push.64*    %arg2
	call        lua_getfield
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r14463 <- lua_type
	seteq.32    %r14464 <- %r14463, $5
	phisrc.64*  %phi6063(l) <- %arg3
	cbr         %r14464, .L3236, .L3235

.L3235:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	push.64*    %arg1
	push.32     $0xffffd8ee
	push.64*    %arg2
	push.32     %r14456(size)
	call.64*    %r14469 <- luaL_findtable
	cbr         %r14469, .L3237, .L3238

.L3237:
	symaddr.64* %r14472 <- <anon symbol:0x1b75378>
	push.64*    %arg1
	push.64*    %r14472
	push.64*    %arg2
	call.32     %r14474 <- luaL_error
	br          .L3238

.L3238:
	push.64*    %arg1
	push.32     $0xffffffff
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $0xfffffffd
	push.64*    %arg2
	call        lua_setfield
	br          .L3236

.L3236:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_remove
	add.32      %r14481 <- %arg4, $1
	neg.32      %r14482 <- %r14481
	push.64*    %arg1
	push.32     %r14482
	call        lua_insert
	br          .L3242

.L3242:
	phi.64*     %r14483(l) <- %phi6062(l), %phi6063(l), %phi6064(l)
	load.64*    %r14484 <- 0[%r14483(l)]
	cbr         %r14484, .L3239, .L3241

.L3239:
	phisrc.32   %phi6076(i) <- $0
	br          .L3246

.L3246:
	phi.32      %r14485(i) <- %phi6076(i), %phi6077(i)
	setlt.32    %r14487 <- %r14485(i), %arg4
	cbr         %r14487, .L3243, .L3245

.L3243:
	neg.32      %r14490 <- %arg4
	push.64*    %arg1
	push.32     %r14490
	call        lua_pushvalue
	add.32      %r14492 <- %r14485(i), $1
	phisrc.32   %phi6077(i) <- %r14492
	br          .L3246

.L3245:
	load.64*    %r14495 <- 8[%r14483(l)]
	push.64*    %arg1
	push.64*    %r14495
	push.32     %arg4
	call        lua_pushcclosure
	add.32      %r14499 <- %arg4, $2
	neg.32      %r14500 <- %r14499
	load.64*    %r14502 <- 0[%r14483(l)]
	push.64*    %arg1
	push.32     %r14500
	push.64*    %r14502
	call        lua_setfield
	add.64*     %r14504 <- %r14483(l), $16
	phisrc.64*  %phi6064(l) <- %r14504
	br          .L3242

.L3241:
	neg.32      %r14507 <- %arg4
	add.32      %r14508 <- %r14507, $-1
	push.64*    %arg1
	push.32     %r14508
	call        lua_settop
	ret


luaL_findtable:
.L3248:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call        lua_pushvalue
	phisrc.64*  %phi6091(fname) <- %arg3
	br          .L3249

.L3249:
	phi.64*     %r14511(fname) <- %phi6091(fname), %phi6092(fname)
	push.64*    %r14511(fname)
	push.32     $46
	call.64*    %r14512 <- strchr
	phisrc.64*  %phi6098(e) <- %r14512
	cbr         %r14512, .L3253, .L3252

.L3252:
	push.64*    %r14511(fname)
	call.64     %r14517 <- strlen
	add.64*     %r14518 <- %r14511(fname), %r14517
	phisrc.64*  %phi6099(e) <- %r14518
	br          .L3253

.L3253:
	phi.64*     %r14521(e) <- %phi6098(e), %phi6099(e)
	sub.64      %r14523 <- %r14521(e), %r14511(fname)
	push.64*    %arg1
	push.64*    %r14511(fname)
	push.64     %r14523
	call        lua_pushlstring
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_rawget
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r14527 <- lua_type
	cbr         %r14527, .L3255, .L3254

.L3254:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	load.8      %r14533 <- 0[%r14521(e)]
	scast.32    %r14534 <- (8) %r14533
	seteq.32    %r14535 <- %r14534, $46
	select.32   %r14536 <- %r14535, $1, %arg4
	push.64*    %arg1
	push.32     $0
	push.32     %r14536
	call        lua_createtable
	push.64*    %arg1
	push.64*    %r14511(fname)
	push.64     %r14523
	call        lua_pushlstring
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $0xfffffffc
	call        lua_settable
	br          .L3256

.L3255:
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r14546 <- lua_type
	seteq.32    %r14547 <- %r14546, $5
	cbr         %r14547, .L3256, .L3257

.L3257:
	push.64*    %arg1
	push.32     $0xfffffffd
	call        lua_settop
	phisrc.64*  %phi6078(return) <- %r14511(fname)
	br          .L3259

.L3256:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_remove
	add.64*     %r14553 <- %r14521(e), $1
	phisrc.64*  %phi6092(fname) <- %r14553
	load.8      %r14555 <- 0[%r14521(e)]
	scast.32    %r14556 <- (8) %r14555
	seteq.32    %r14557 <- %r14556, $46
	cbr         %r14557, .L3249, .L3251

.L3251:
	phisrc.64*  %phi6079(return) <- $0
	br          .L3259

.L3259:
	phi.64*     %r14550 <- %phi6078(return), %phi6079(return)
	ret.64*     %r14550


emptybuffer:
.L3260:
	<entry-point>
	load.64*    %r14559 <- 0[%arg1]
	add.64*     %r14561 <- %arg1, $24
	sub.64      %r14562 <- %r14559, %r14561
	setne.32    %r14566 <- %r14562, $0
	cbr         %r14562, .L3262, .L3263

.L3262:
	load.64*    %r14568 <- 16[%arg1]
	push.64*    %r14568
	push.64*    %r14561
	push.64     %r14562
	call        lua_pushlstring
	store.64*   %r14561 -> 0[%arg1]
	load.32     %r14576 <- 8[%arg1]
	add.32      %r14577 <- %r14576, $1
	store.32    %r14577 -> 8[%arg1]
	br          .L3263

.L3263:
	ret.32      %r14566


adjuststack:
.L3265:
	<entry-point>
	load.32     %r14579 <- 8[%arg1]
	setgt.32    %r14580 <- %r14579, $1
	cbr         %r14580, .L3266, .L3267

.L3266:
	load.64*    %r14582 <- 16[%arg1]
	push.64*    %r14582
	push.32     $0xffffffff
	call.64     %r14584(toplen) <- lua_objlen
	phisrc.32   %phi6115(toget) <- $1
	phisrc.64   %phi6118(toplen) <- %r14584(toplen)
	br          .L3268

.L3268:
	phi.32      %r14586 <- %phi6115(toget), %phi6116(toget)
	add.32      %r14587 <- %r14586, $1
	neg.32      %r14588 <- %r14587
	push.64*    %r14582
	push.32     %r14588
	call.64     %r14589 <- lua_objlen
	load.32     %r14591 <- 8[%arg1]
	sub.32      %r14593 <- %r14591, %r14586
	add.32      %r14594 <- %r14593, $1
	setge.1     %r14596 <- %r14594, $10
	phi.64      %r14597(toplen) <- %phi6118(toplen), %phi6119(toplen)
	seta.1      %r14600 <- %r14597(toplen), %r14589
	or-bool.1   %r14601 <- %r14596, %r14600
	phisrc.32   %phi6111(toget) <- %r14586
	cbr         %r14601, .L3271, .L3270

.L3271:
	add.64      %r14606 <- %r14597(toplen), %r14589
	phisrc.32   %phi6116(toget) <- %r14587
	phisrc.64   %phi6119(toplen) <- %r14606
	setlt.32    %r14613 <- %r14587, %r14591
	phisrc.32   %phi6112(toget) <- %r14587
	cbr         %r14613, .L3268, .L3270

.L3270:
	phi.32      %r14615 <- %phi6111(toget), %phi6112(toget)
	push.64*    %r14582
	push.32     %r14615
	call        lua_concat
	load.32     %r14617 <- 8[%arg1]
	sub.32      %r14619 <- %r14617, %r14615
	add.32      %r14620 <- %r14619, $1
	store.32    %r14620 -> 8[%arg1]
	br          .L3267

.L3267:
	ret


luaL_prepbuffer:
.L3274:
	<entry-point>
	push.64*    %arg1
	call.32     %r14623 <- emptybuffer
	cbr         %r14623, .L3275, .L3276

.L3275:
	push.64*    %arg1
	call        adjuststack
	br          .L3276

.L3276:
	add.64*     %r14626 <- %arg1, $24
	ret.64*     %r14626


luaL_addlstring:
.L3278:
	<entry-point>
	phisrc.64*  %phi6132(s) <- %arg2
	phisrc.64   %phi6134(l) <- %arg3
	br          .L3282

.L3282:
	phi.64      %r14628 <- %phi6134(l), %phi6135(l)
	add.64      %r14629 <- %r14628, $-1
	phisrc.64   %phi6135(l) <- %r14629
	cbr         %r14628, .L3279, .L3281

.L3279:
	load.64*    %r14631 <- 0[%arg1]
	add.64*     %r14634 <- %arg1, $0x2018
	setb.32     %r14635 <- %r14631, %r14634
	cbr         %r14635, .L3285, .L3284

.L3284:
	push.64*    %arg1
	call.64*    %r14637 <- luaL_prepbuffer
	br          .L3285

.L3285:
	phi.64*     %r14639 <- %phi6132(s), %phi6133(s)
	add.64*     %r14640 <- %r14639, $1
	load.8      %r14641 <- 0[%r14639]
	load.64*    %r14644 <- 0[%arg1]
	add.64*     %r14645 <- %r14644, $1
	store.64*   %r14645 -> 0[%arg1]
	store.8     %r14641 -> 0[%r14644]
	phisrc.64*  %phi6133(s) <- %r14640
	br          .L3282

.L3281:
	ret


luaL_pushresult:
.L3286:
	<entry-point>
	push.64*    %arg1
	call.32     %r14647 <- emptybuffer
	load.64*    %r14649 <- 16[%arg1]
	load.32     %r14651 <- 8[%arg1]
	push.64*    %r14649
	push.32     %r14651
	call        lua_concat
	store.32    $1 -> 8[%arg1]
	ret


luaL_addvalue:
.L3288:
	<entry-point>
	load.64*    %r14654 <- 16[%arg1]
	symaddr.64* %r14656 <- vl
	push.64*    %r14654
	push.32     $0xffffffff
	push.64*    %r14656
	call.64*    %r14657(s) <- lua_tolstring
	load.64     %r14658(vl) <- 0[vl]
	load.64*    %r14660 <- 0[%arg1]
	add.64*     %r14662 <- %arg1, $24
	sub.64      %r14663 <- %r14660, %r14662
	sub.64      %r14664 <- $0x2000, %r14663
	setbe.32    %r14666 <- %r14658(vl), %r14664
	cbr         %r14666, .L3289, .L3290

.L3289:
	cast.64*    %r14669 <- (64) %r14660
	cast.64*    %r14671 <- (64) %r14657(s)
	push.64*    %r14669
	push.64*    %r14671
	push.64     %r14658(vl)
	call.64*    %r14673 <- memcpy
	load.64     %r14674 <- 0[vl]
	load.64*    %r14676 <- 0[%arg1]
	cast.64     %r14677 <- (64) %r14676
	add.64      %r14678 <- %r14677, %r14674
	ptrcast.64* %r14679 <- (64) %r14678
	store.64*   %r14679 -> 0[%arg1]
	push.64*    %r14654
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3291

.L3290:
	push.64*    %arg1
	call.32     %r14682 <- emptybuffer
	cbr         %r14682, .L3292, .L3293

.L3292:
	push.64*    %r14654
	push.32     $0xfffffffe
	call        lua_insert
	br          .L3293

.L3293:
	load.32     %r14685 <- 8[%arg1]
	add.32      %r14686 <- %r14685, $1
	store.32    %r14686 -> 8[%arg1]
	push.64*    %arg1
	call        adjuststack
	br          .L3291

.L3291:
	ret


luaL_buffinit:
.L3294:
	<entry-point>
	store.64*   %arg1 -> 16[%arg2]
	add.64*     %r14691 <- %arg2, $24
	store.64*   %r14691 -> 0[%arg2]
	store.32    $0 -> 8[%arg2]
	ret


getF:
.L3296:
	<entry-point>
	ptrcast.64* %r14695 <- (64) %arg2
	load.32     %r14698 <- 0[%r14695]
	cbr         %r14698, .L3297, .L3298

.L3297:
	store.32    $0 -> 0[%r14695]
	store.64    $1 -> 0[%arg3]
	symaddr.64* %r14701 <- <anon symbol:0x1b86a40>
	phisrc.64*  %phi6144(return) <- %r14701
	br          .L3299

.L3298:
	load.64*    %r14704 <- 8[%r14695]
	push.64*    %r14704
	call.32     %r14705 <- feof
	cbr         %r14705, .L3300, .L3301

.L3300:
	phisrc.64*  %phi6145(return) <- $0
	br          .L3299

.L3301:
	add.64*     %r14707 <- %r14695, $16
	cast.64*    %r14708 <- (64) %r14707
	load.64*    %r14710 <- 8[%r14695]
	push.64*    %r14708
	push.64     $1
	push.64     $0x2000
	push.64*    %r14710
	call.64     %r14711 <- fread
	store.64    %r14711 -> 0[%arg3]
	seta.32     %r14717 <- %r14711, $0
	select.64*  %r14718 <- %r14717, %r14707, $0
	phisrc.64*  %phi6146(return) <- %r14718
	br          .L3299

.L3299:
	phi.64*     %r14702 <- %phi6144(return), %phi6145(return), %phi6146(return)
	ret.64*     %r14702


errfile:
.L3302:
	<entry-point>
	call.64*    %r14719 <- __errno_location
	load.32     %r14720 <- 0[%r14719]
	push.32     %r14720
	call.64*    %r14721 <- strerror
	push.64*    %arg1
	push.32     %arg3
	push.64*    $0
	call.64*    %r14724 <- lua_tolstring
	add.64*     %r14725 <- %r14724, $1
	symaddr.64* %r14727 <- <anon symbol:0x1b87d48>
	push.64*    %arg1
	push.64*    %r14727
	push.64*    %arg2
	push.64*    %r14725
	push.64*    %r14721
	call.64*    %r14731 <- lua_pushfstring
	push.64*    %arg1
	push.32     %arg3
	call        lua_remove
	ret.32      $6


luaL_loadfile:
.L3304:
	<entry-point>
	push.64*    %arg1
	call.32     %r14736 <- lua_gettop
	add.32      %r14737(fnameindex) <- %r14736, $1
	store.32    $0 -> 0[lf]
	cbr         %arg2, .L3306, .L3305

.L3305:
	symaddr.64* %r14741 <- <anon symbol:0x1b881d0>
	push.64*    %arg1
	push.64*    %r14741
	push.64     $6
	call        lua_pushlstring
	load.64*    %r14742(lf) <- 0[stdin]
	store.64*   %r14742(lf) -> 8[lf]
	phisrc.64*  %phi6177(lf) <- %r14742(lf)
	br          .L3307

.L3306:
	symaddr.64* %r14744 <- <anon symbol:0x1b88828>
	push.64*    %arg1
	push.64*    %r14744
	push.64*    %arg2
	call.64*    %r14746 <- lua_pushfstring
	symaddr.64* %r14748 <- <anon symbol:0x1b88cb0>
	push.64*    %arg2
	push.64*    %r14748
	call.64*    %r14749 <- fopen
	store.64*   %r14749 -> 8[lf]
	phisrc.64*  %phi6178(lf) <- %r14749
	cbr         %r14749, .L3307, .L3308

.L3308:
	symaddr.64* %r14753 <- <anon symbol:0x1b89138>
	push.64*    %arg1
	push.64*    %r14753
	push.32     %r14737(fnameindex)
	call.32     %r14755 <- errfile
	phisrc.32   %phi6153(return) <- %r14755
	br          .L3310

.L3307:
	phi.64*     %r14757 <- %phi6177(lf), %phi6178(lf)
	push.64*    %r14757
	call.32     %r14758 <- _IO_getc
	seteq.32    %r14760 <- %r14758, $35
	phisrc.32   %phi6181(c) <- %r14758
	cbr         %r14760, .L3311, .L3312

.L3311:
	store.32    $1 -> 0[lf]
	br          .L3316

.L3316:
	load.64*    %r14761 <- 8[lf]
	push.64*    %r14761
	call.32     %r14762 <- _IO_getc
	setne.1     %r14764 <- %r14762, $0xffffffff
	setne.1     %r14767 <- %r14762, $10
	and-bool.1  %r14768 <- %r14764, %r14767
	cbr         %r14768, .L3316, .L3315

.L3315:
	seteq.32    %r14771 <- %r14762, $10
	phisrc.32   %phi6182(c) <- %r14762
	cbr         %r14771, .L3317, .L3312

.L3317:
	load.64*    %r14772 <- 8[lf]
	push.64*    %r14772
	call.32     %r14773 <- _IO_getc
	phisrc.32   %phi6183(c) <- %r14773
	br          .L3312

.L3312:
	phi.32      %r14774(c) <- %phi6181(c), %phi6182(c), %phi6183(c)
	load.8      %r14775 <- 0["\33Lua"]
	scast.32    %r14776 <- (8) %r14775
	seteq.1     %r14778 <- %r14774(c), %r14776
	setne.1     %r14780 <- %arg2, $0
	and-bool.1  %r14781 <- %r14778, %r14780
	phisrc.32   %phi6179(c) <- %r14774(c)
	cbr         %r14781, .L3319, .L3320

.L3319:
	symaddr.64* %r14784 <- <anon symbol:0x1b89de8>
	load.64*    %r14785 <- 8[lf]
	push.64*    %arg2
	push.64*    %r14784
	push.64*    %r14785
	call.64*    %r14786 <- freopen
	store.64*   %r14786 -> 8[lf]
	phisrc.64*  %phi6176(lf) <- %r14786
	phisrc.64*  %phi6187 <- %r14786
	phisrc.64*  %phi6188 <- %r14786
	cbr         %r14786, .L3326, .L3321

.L3321:
	symaddr.64* %r14790 <- <anon symbol:0x1b8a358>
	push.64*    %arg1
	push.64*    %r14790
	push.32     %r14737(fnameindex)
	call.32     %r14792 <- errfile
	phisrc.32   %phi6154(return) <- %r14792
	br          .L3310

.L3326:
	load.64*    %r14793 <- 8[lf]
	push.64*    %r14793
	call.32     %r14794 <- _IO_getc
	setne.1     %r14796 <- %r14794, $0xffffffff
	load.8      %r14798 <- 0["\33Lua"]
	scast.32    %r14799 <- (8) %r14798
	setne.1     %r14801 <- %r14794, %r14799
	and-bool.1  %r14802 <- %r14796, %r14801
	phisrc.32   %phi6180(c) <- %r14794
	cbr         %r14802, .L3326, .L3325

.L3325:
	store.32    $0 -> 0[lf]
	br          .L3320

.L3320:
	phi.32      %r14804 <- %phi6179(c), %phi6180(c)
	load.64*    %r14805 <- 8[lf]
	push.32     %r14804
	push.64*    %r14805
	call.32     %r14806 <- ungetc
	symaddr.64* %r14808 <- getF
	symaddr.64* %r14809 <- lf
	cast.64*    %r14810 <- (64) %r14809
	push.64*    %arg1
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r14812 <- lua_tolstring
	push.64*    %arg1
	push.64*    %r14808
	push.64*    %r14810
	push.64*    %r14812
	call.32     %r14813(status) <- lua_load
	load.64*    %r14814 <- 8[lf]
	push.64*    %r14814
	call.32     %r14815(readstatus) <- ferror
	cbr         %arg2, .L3327, .L3328

.L3327:
	load.64*    %r14817 <- 8[lf]
	push.64*    %r14817
	call.32     %r14818 <- fclose
	br          .L3328

.L3328:
	cbr         %r14815(readstatus), .L3329, .L3330

.L3329:
	push.64*    %arg1
	push.32     %r14737(fnameindex)
	call        lua_settop
	symaddr.64* %r14823 <- <anon symbol:0x1b8b3a8>
	push.64*    %arg1
	push.64*    %r14823
	push.32     %r14737(fnameindex)
	call.32     %r14825 <- errfile
	phisrc.32   %phi6155(return) <- %r14825
	br          .L3310

.L3330:
	push.64*    %arg1
	push.32     %r14737(fnameindex)
	call        lua_remove
	phisrc.32   %phi6156(return) <- %r14813(status)
	br          .L3310

.L3310:
	phi.32      %r14756 <- %phi6153(return), %phi6154(return), %phi6155(return), %phi6156(return)
	ret.32      %r14756


getS:
.L3331:
	<entry-point>
	ptrcast.64* %r14830 <- (64) %arg2
	load.64     %r14833 <- 8[%r14830]
	cbr         %r14833, .L3333, .L3332

.L3332:
	phisrc.64*  %phi6189(return) <- $0
	br          .L3334

.L3333:
	store.64    %r14833 -> 0[%arg3]
	store.64    $0 -> 8[%r14830]
	load.64*    %r14841 <- 0[%r14830]
	phisrc.64*  %phi6190(return) <- %r14841
	br          .L3334

.L3334:
	phi.64*     %r14835 <- %phi6189(return), %phi6190(return)
	ret.64*     %r14835


luaL_loadbuffer:
.L3335:
	<entry-point>
	store.64*   %arg2 -> 0[ls]
	store.64    %arg3 -> 8[ls]
	symaddr.64* %r14845 <- getS
	symaddr.64* %r14846 <- ls
	cast.64*    %r14847 <- (64) %r14846
	push.64*    %arg1
	push.64*    %r14845
	push.64*    %r14847
	push.64*    %arg4
	call.32     %r14849 <- lua_load
	ret.32      %r14849


l_alloc:
.L3337:
	<entry-point>
	cbr         %arg4, .L3339, .L3338

.L3338:
	push.64*    %arg2
	call        free
	phisrc.64*  %phi6195(return) <- $0
	br          .L3340

.L3339:
	push.64*    %arg2
	push.64     %arg4
	call.64*    %r14859 <- realloc
	phisrc.64*  %phi6196(return) <- %r14859
	br          .L3340

.L3340:
	phi.64*     %r14856 <- %phi6195(return), %phi6196(return)
	ret.64*     %r14856


panic:
.L3342:
	<entry-point>
	load.64*    %r14861 <- 0[stderr]
	symaddr.64* %r14862 <- <anon symbol:0x1b8c228>
	push.64*    %arg1
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r14864 <- lua_tolstring
	push.64*    %r14861
	push.64*    %r14862
	push.64*    %r14864
	call.32     %r14865 <- fprintf
	ret.32      $0


luaL_newstate:
.L3344:
	<entry-point>
	symaddr.64* %r14867 <- l_alloc
	push.64*    %r14867
	push.64*    $0
	call.64*    %r14868 <- lua_newstate
	cbr         %r14868, .L3345, .L3347

.L3345:
	symaddr.64* %r14871 <- panic
	push.64*    %r14868
	push.64*    %r14871
	call.64*    %r14872 <- lua_atpanic
	br          .L3347

.L3347:
	ret.64*     %r14868


luaB_tonumber:
.L3348:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	push.64     $10
	call.64     %r14876 <- luaL_optinteger
	scast.32    %r14877 <- (64) %r14876
	seteq.32    %r14879 <- %r14877, $10
	cbr         %r14879, .L3349, .L3350

.L3349:
	push.64*    %arg1
	push.32     $1
	call        luaL_checkany
	push.64*    %arg1
	push.32     $1
	call.32     %r14882 <- lua_isnumber
	cbr         %r14882, .L3351, .L3354

.L3351:
	push.64*    %arg1
	push.32     $1
	call.f64    %r14885 <- lua_tonumber
	push.64*    %arg1
	push.f64    %r14885
	call        lua_pushnumber
	br          .L3353

.L3350:
	push.64*    %arg1
	push.32     $1
	push.64*    $0
	call.64*    %r14888(s1) <- luaL_checklstring
	setle.1     %r14891 <- $2, %r14877
	setle.1     %r14894 <- %r14877, $36
	and-bool.1  %r14895 <- %r14891, %r14894
	cbr         %r14895, .L3357, .L3356

.L3356:
	symaddr.64* %r14898 <- <anon symbol:0x1b949c0>
	push.64*    %arg1
	push.32     $2
	push.64*    %r14898
	call.32     %r14899 <- luaL_argerror
	br          .L3357

.L3357:
	symaddr.64* %r14902 <- s2
	push.64*    %r14888(s1)
	push.64*    %r14902
	push.32     %r14877
	call.64     %r14904(n) <- strtoul
	load.64*    %r14906 <- 0[s2]
	setne.32    %r14907 <- %r14888(s1), %r14906
	cbr         %r14907, .L3363, .L3354

.L3363:
	call.64*    %r14908 <- __ctype_b_loc
	load.64*    %r14909 <- 0[%r14908]
	load.64*    %r14910(s2) <- 0[s2]
	load.8      %r14911 <- 0[%r14910(s2)]
	cast.32     %r14913 <- (8) %r14911
	scast.64    %r14914 <- (32) %r14913
	muls.64     %r14915 <- %r14914, $2
	add.64*     %r14916 <- %r14909, %r14915
	load.16     %r14917 <- 0[%r14916]
	cast.32     %r14918 <- (16) %r14917
	and.32      %r14919 <- %r14918, $0x2000
	cbr         %r14919, .L3360, .L3362

.L3360:
	add.64*     %r14921 <- %r14910(s2), $1
	store.64*   %r14921 -> 0[s2]
	br          .L3363

.L3362:
	cbr         %r14911, .L3354, .L3364

.L3364:
	fpcast.f64  %r14928 <- (64) %r14904(n)
	push.64*    %arg1
	push.f64    %r14928
	call        lua_pushnumber
	br          .L3353

.L3354:
	push.64*    %arg1
	call        lua_pushnil
	br          .L3353

.L3353:
	ret.32      $1


luaB_error:
.L3366:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	push.64     $1
	call.64     %r14931 <- luaL_optinteger
	scast.32    %r14932 <- (64) %r14931
	push.64*    %arg1
	push.32     $1
	call        lua_settop
	push.64*    %arg1
	push.32     $1
	call.32     %r14935 <- lua_isstring
	setne.1     %r14936 <- %r14935, $0
	setgt.1     %r14939 <- %r14932, $0
	and-bool.1  %r14940 <- %r14936, %r14939
	cbr         %r14940, .L3367, .L3368

.L3367:
	push.64*    %arg1
	push.32     %r14932
	call        luaL_where
	push.64*    %arg1
	push.32     $1
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $2
	call        lua_concat
	br          .L3368

.L3368:
	push.64*    %arg1
	call.32     %r14947 <- lua_error
	ret.32      %r14947


luaB_setmetatable:
.L3370:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	call.32     %r14950 <- lua_type
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	seteq.1     %r14954 <- %r14950, $0
	seteq.1     %r14957 <- %r14950, $5
	or-bool.1   %r14958 <- %r14954, %r14957
	cbr         %r14958, .L3373, .L3372

.L3372:
	symaddr.64* %r14961 <- <anon symbol:0x1b952d0>
	push.64*    %arg1
	push.32     $2
	push.64*    %r14961
	call.32     %r14962 <- luaL_argerror
	br          .L3373

.L3373:
	symaddr.64* %r14965 <- <anon symbol:0x1b95670>
	push.64*    %arg1
	push.32     $1
	push.64*    %r14965
	call.32     %r14966 <- luaL_getmetafield
	cbr         %r14966, .L3374, .L3375

.L3374:
	symaddr.64* %r14968 <- <anon symbol:0x1b95a10>
	push.64*    %arg1
	push.64*    %r14968
	call.32     %r14969 <- luaL_error
	br          .L3375

.L3375:
	push.64*    %arg1
	push.32     $2
	call        lua_settop
	push.64*    %arg1
	push.32     $1
	call.32     %r14972 <- lua_setmetatable
	ret.32      $1


getfunc:
.L3377:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r14975 <- lua_type
	seteq.32    %r14976 <- %r14975, $6
	cbr         %r14976, .L3378, .L3379

.L3378:
	push.64*    %arg1
	push.32     $1
	call        lua_pushvalue
	br          .L3380

.L3379:
	cbr         %arg2, .L3381, .L3382

.L3381:
	push.64*    %arg1
	push.32     $1
	push.64     $1
	call.64     %r14980 <- luaL_optinteger
	scast.32    %r14981 <- (64) %r14980
	phisrc.32   %phi6240 <- %r14981
	br          .L3383

.L3382:
	push.64*    %arg1
	push.32     $1
	call.64     %r14983 <- luaL_checkinteger
	scast.32    %r14984 <- (64) %r14983
	phisrc.32   %phi6241 <- %r14984
	br          .L3383

.L3383:
	phi.32      %r14985 <- %phi6240, %phi6241
	setge.32    %r14987 <- %r14985, $0
	cbr         %r14987, .L3386, .L3385

.L3385:
	symaddr.64* %r14989 <- <anon symbol:0x1b95db0>
	push.64*    %arg1
	push.32     $1
	push.64*    %r14989
	call.32     %r14990 <- luaL_argerror
	br          .L3386

.L3386:
	symaddr.64* %r14994 <- ar
	push.64*    %arg1
	push.32     %r14985
	push.64*    %r14994
	call.32     %r14995 <- lua_getstack
	cbr         %r14995, .L3388, .L3387

.L3387:
	symaddr.64* %r14998 <- <anon symbol:0x1b96320>
	push.64*    %arg1
	push.32     $1
	push.64*    %r14998
	call.32     %r14999 <- luaL_argerror
	br          .L3388

.L3388:
	symaddr.64* %r15001 <- <anon symbol:0x1b966c0>
	push.64*    %arg1
	push.64*    %r15001
	push.64*    %r14994
	call.32     %r15003 <- lua_getinfo
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r15005 <- lua_type
	cbr         %r15005, .L3380, .L3389

.L3389:
	symaddr.64* %r15008 <- <anon symbol:0x1b96c30>
	push.64*    %arg1
	push.64*    %r15008
	push.32     %r14985
	call.32     %r15010 <- luaL_error
	br          .L3380

.L3380:
	ret


luaB_setfenv:
.L3391:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $0
	call        getfunc
	push.64*    %arg1
	push.32     $2
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $1
	call.32     %r15015 <- lua_isnumber
	cbr         %r15015, .L3394, .L3393

.L3394:
	push.64*    %arg1
	push.32     $1
	call.f64    %r15017 <- lua_tonumber
	set.f64     %r15018 <- 0.000000
	seteq.32    %r15019 <- %r15017, %r15018
	cbr         %r15019, .L3392, .L3393

.L3392:
	push.64*    %arg1
	call.32     %r15021 <- lua_pushthread
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_insert
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r15024 <- lua_setfenv
	phisrc.32   %phi6259(return) <- $0
	br          .L3395

.L3393:
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r15027 <- lua_iscfunction
	cbr         %r15027, .L3397, .L3399

.L3399:
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r15029 <- lua_setfenv
	cbr         %r15029, .L3396, .L3397

.L3397:
	symaddr.64* %r15032 <- <anon symbol:0x1b96fd0>
	push.64*    %arg1
	push.64*    %r15032
	call.32     %r15033 <- luaL_error
	br          .L3396

.L3396:
	phisrc.32   %phi6260(return) <- $1
	br          .L3395

.L3395:
	phi.32      %r15025 <- %phi6259(return), %phi6260(return)
	ret.32      %r15025


luaB_rawget:
.L3400:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $2
	call        luaL_checkany
	push.64*    %arg1
	push.32     $2
	call        lua_settop
	push.64*    %arg1
	push.32     $1
	call        lua_rawget
	ret.32      $1


luaB_type:
.L3402:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call        luaL_checkany
	push.64*    %arg1
	push.32     $1
	call.32     %r15043 <- lua_type
	push.64*    %arg1
	push.32     %r15043
	call.64*    %r15044 <- lua_typename
	push.64*    %arg1
	push.64*    %r15044
	call        lua_pushstring
	ret.32      $1


luaB_next:
.L3404:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $2
	call        lua_settop
	push.64*    %arg1
	push.32     $1
	call.32     %r15049 <- lua_next
	select.32   %r15050 <- %r15049, $2, $1
	cbr         %r15049, .L3407, .L3406

.L3406:
	push.64*    %arg1
	call        lua_pushnil
	br          .L3407

.L3407:
	ret.32      %r15050


luaB_pairs:
.L3409:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $0xffffd8ed
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $1
	call        lua_pushvalue
	push.64*    %arg1
	call        lua_pushnil
	ret.32      $3


ipairsaux:
.L3411:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	call.64     %r15058 <- luaL_checkinteger
	scast.32    %r15059 <- (64) %r15058
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	add.32      %r15062 <- %r15059, $1
	scast.64    %r15065 <- (32) %r15062
	push.64*    %arg1
	push.64     %r15065
	call        lua_pushinteger
	push.64*    %arg1
	push.32     $1
	push.32     %r15062
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r15069 <- lua_type
	seteq.32    %r15070 <- %r15069, $0
	select.32   %r15071 <- %r15070, $0, $2
	ret.32      %r15071


luaB_ipairs:
.L3413:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $0xffffd8ed
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $1
	call        lua_pushvalue
	push.64*    %arg1
	push.64     $0
	call        lua_pushinteger
	ret.32      $3


load_aux:
.L3415:
	<entry-point>
	select.32   %r15080 <- %arg2, $2, $1
	cbr         %arg2, .L3417, .L3418

.L3417:
	push.64*    %arg1
	call        lua_pushnil
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_insert
	br          .L3418

.L3418:
	ret.32      %r15080


luaB_loadstring:
.L3420:
	<entry-point>
	symaddr.64* %r15084 <- l
	push.64*    %arg1
	push.32     $1
	push.64*    %r15084
	call.64*    %r15085 <- luaL_checklstring
	push.64*    %arg1
	push.32     $2
	push.64*    %r15085
	push.64*    $0
	call.64*    %r15088 <- luaL_optlstring
	load.64     %r15092 <- 0[l]
	push.64*    %arg1
	push.64*    %r15085
	push.64     %r15092
	push.64*    %r15088
	call.32     %r15094 <- luaL_loadbuffer
	push.64*    %arg1
	push.32     %r15094
	call.32     %r15095 <- load_aux
	ret.32      %r15095


luaB_loadfile:
.L3422:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.64*    $0
	push.64*    $0
	call.64*    %r15098 <- luaL_optlstring
	push.64*    %arg1
	push.64*    %r15098
	call.32     %r15102 <- luaL_loadfile
	push.64*    %arg1
	push.32     %r15102
	call.32     %r15103 <- load_aux
	ret.32      %r15103


luaB_assert:
.L3424:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call        luaL_checkany
	push.64*    %arg1
	push.32     $1
	call.32     %r15107 <- lua_toboolean
	cbr         %r15107, .L3426, .L3425

.L3425:
	symaddr.64* %r15109 <- <anon symbol:0x1b97540>
	symaddr.64* %r15111 <- <anon symbol:0x1b978e0>
	push.64*    %arg1
	push.32     $2
	push.64*    %r15111
	push.64*    $0
	call.64*    %r15112 <- luaL_optlstring
	push.64*    %arg1
	push.64*    %r15109
	push.64*    %r15112
	call.32     %r15113 <- luaL_error
	phisrc.32   %phi6281(return) <- %r15113
	br          .L3427

.L3426:
	push.64*    %arg1
	call.32     %r15116 <- lua_gettop
	phisrc.32   %phi6282(return) <- %r15116
	br          .L3427

.L3427:
	phi.32      %r15114 <- %phi6281(return), %phi6282(return)
	ret.32      %r15114


luaB_unpack:
.L3428:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $2
	push.64     $1
	call.64     %r15119 <- luaL_optinteger
	scast.32    %r15120(i) <- (64) %r15119
	push.64*    %arg1
	push.32     $3
	call.32     %r15122 <- lua_type
	setle.32    %r15123 <- %r15122, $0
	cbr         %r15123, .L3429, .L3430

.L3429:
	push.64*    %arg1
	push.32     $1
	call.64     %r15125 <- lua_objlen
	cast.32     %r15126 <- (64) %r15125
	phisrc.32   %phi6285 <- %r15126
	br          .L3431

.L3430:
	push.64*    %arg1
	push.32     $3
	call.64     %r15128 <- luaL_checkinteger
	scast.32    %r15129 <- (64) %r15128
	phisrc.32   %phi6286 <- %r15129
	br          .L3431

.L3431:
	phi.32      %r15130 <- %phi6285, %phi6286
	setgt.32    %r15133 <- %r15120(i), %r15130
	cbr         %r15133, .L3432, .L3433

.L3432:
	phisrc.32   %phi6287(return) <- $0
	br          .L3434

.L3433:
	sub.32      %r15137 <- %r15130, %r15120(i)
	add.32      %r15138 <- %r15137, $1
	setle.32    %r15140 <- %r15138, $0
	cbr         %r15140, .L3435, .L3437

.L3437:
	push.64*    %arg1
	push.32     %r15138
	call.32     %r15143 <- lua_checkstack
	cbr         %r15143, .L3436, .L3435

.L3435:
	symaddr.64* %r15145 <- <anon symbol:0x1b97c80>
	push.64*    %arg1
	push.64*    %r15145
	call.32     %r15146 <- luaL_error
	phisrc.32   %phi6288(return) <- %r15146
	br          .L3434

.L3436:
	push.64*    %arg1
	push.32     $1
	push.32     %r15120(i)
	call        lua_rawgeti
	phisrc.32   %phi6300(i) <- %r15120(i)
	br          .L3441

.L3441:
	phi.32      %r15149 <- %phi6300(i), %phi6301(i)
	add.32      %r15150(i) <- %r15149, $1
	setlt.32    %r15152 <- %r15149, %r15130
	phisrc.32   %phi6301(i) <- %r15150(i)
	cbr         %r15152, .L3438, .L3440

.L3438:
	push.64*    %arg1
	push.32     $1
	push.32     %r15150(i)
	call        lua_rawgeti
	br          .L3441

.L3440:
	phisrc.32   %phi6289(return) <- %r15138
	br          .L3434

.L3434:
	phi.32      %r15134 <- %phi6287(return), %phi6288(return), %phi6289(return)
	ret.32      %r15134


luaB_pcall:
.L3442:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call        luaL_checkany
	push.64*    %arg1
	call.32     %r15159 <- lua_gettop
	add.32      %r15160 <- %r15159, $-1
	push.64*    %arg1
	push.32     %r15160
	push.32     $0xffffffff
	push.32     $0
	call.32     %r15161 <- lua_pcall
	seteq.32    %r15164 <- %r15161, $0
	push.64*    %arg1
	push.32     %r15164
	call        lua_pushboolean
	push.64*    %arg1
	push.32     $1
	call        lua_insert
	push.64*    %arg1
	call.32     %r15167 <- lua_gettop
	ret.32      %r15167


luaB_newproxy:
.L3444:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call        lua_settop
	push.64*    %arg1
	push.64     $0
	call.64*    %r15171 <- lua_newuserdata
	push.64*    %arg1
	push.32     $1
	call.32     %r15173 <- lua_toboolean
	cbr         %r15173, .L3446, .L3447

.L3446:
	push.64*    %arg1
	push.32     $1
	call.32     %r15177 <- lua_type
	seteq.32    %r15178 <- %r15177, $1
	cbr         %r15178, .L3449, .L3450

.L3449:
	push.64*    %arg1
	push.32     $0
	push.32     $0
	call        lua_createtable
	push.64*    %arg1
	push.32     $0xffffffff
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $1
	call        lua_pushboolean
	push.64*    %arg1
	push.32     $0xffffd8ed
	call        lua_rawset
	br          .L3448

.L3450:
	push.64*    %arg1
	push.32     $1
	call.32     %r15184 <- lua_getmetatable
	cbr         %r15184, .L3452, .L3455

.L3452:
	push.64*    %arg1
	push.32     $0xffffd8ed
	call        lua_rawget
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r15187 <- lua_toboolean
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	cbr         %r15187, .L3456, .L3455

.L3455:
	symaddr.64* %r15191 <- <anon symbol:0x1b98020>
	push.64*    %arg1
	push.32     $1
	push.64*    %r15191
	call.32     %r15192 <- luaL_argerror
	br          .L3456

.L3456:
	push.64*    %arg1
	push.32     $1
	call.32     %r15195 <- lua_getmetatable
	br          .L3448

.L3448:
	push.64*    %arg1
	push.32     $2
	call.32     %r15197 <- lua_setmetatable
	br          .L3447

.L3447:
	ret.32      $1


auxopen:
.L3457:
	<entry-point>
	push.64*    %arg1
	push.64*    %arg4
	push.32     $0
	call        lua_pushcclosure
	push.64*    %arg1
	push.64*    %arg3
	push.32     $1
	call        lua_pushcclosure
	push.64*    %arg1
	push.32     $0xfffffffe
	push.64*    %arg2
	call        lua_setfield
	ret


base_open:
.L3459:
	<entry-point>
	push.64*    %arg1
	push.32     $0xffffd8ee
	call        lua_pushvalue
	symaddr.64* %r15206 <- <anon symbol:0x1b983c0>
	push.64*    %arg1
	push.32     $0xffffd8ee
	push.64*    %r15206
	call        lua_setfield
	symaddr.64* %r15208 <- <anon symbol:0x1b98760>
	symaddr.64* %r15209 <- base_funcs
	push.64*    %arg1
	push.64*    %r15208
	push.64*    %r15209
	call        luaL_register
	symaddr.64* %r15211 <- <anon symbol:0x1b98cd0>
	push.64*    %arg1
	push.64*    %r15211
	push.64     $7
	call        lua_pushlstring
	symaddr.64* %r15213 <- <anon symbol:0x1b99240>
	push.64*    %arg1
	push.32     $0xffffd8ee
	push.64*    %r15213
	call        lua_setfield
	symaddr.64* %r15215 <- <anon symbol:0x1b995e0>
	symaddr.64* %r15216 <- luaB_ipairs
	symaddr.64* %r15217 <- ipairsaux
	push.64*    %arg1
	push.64*    %r15215
	push.64*    %r15216
	push.64*    %r15217
	call        auxopen
	symaddr.64* %r15219 <- <anon symbol:0x1b99d20>
	symaddr.64* %r15220 <- luaB_pairs
	symaddr.64* %r15221 <- luaB_next
	push.64*    %arg1
	push.64*    %r15219
	push.64*    %r15220
	push.64*    %r15221
	call        auxopen
	push.64*    %arg1
	push.32     $0
	push.32     $1
	call        lua_createtable
	push.64*    %arg1
	push.32     $0xffffffff
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r15225 <- lua_setmetatable
	symaddr.64* %r15227 <- <anon symbol:0x1b9a460>
	push.64*    %arg1
	push.64*    %r15227
	push.64     $2
	call        lua_pushlstring
	symaddr.64* %r15229 <- <anon symbol:0x1b9a9d0>
	push.64*    %arg1
	push.32     $0xfffffffe
	push.64*    %r15229
	call        lua_setfield
	symaddr.64* %r15231 <- luaB_newproxy
	push.64*    %arg1
	push.64*    %r15231
	push.32     $1
	call        lua_pushcclosure
	symaddr.64* %r15233 <- <anon symbol:0x1b9af40>
	push.64*    %arg1
	push.32     $0xffffd8ee
	push.64*    %r15233
	call        lua_setfield
	ret


luaopen_base:
.L3461:
	<entry-point>
	push.64*    %arg1
	call        base_open
	ret.32      $1


tinsert:
.L3463:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $1
	call.64     %r15238 <- lua_objlen
	cast.32     %r15239 <- (64) %r15238
	add.32      %r15240(e) <- %r15239, $1
	push.64*    %arg1
	call.32     %r15242 <- lua_gettop
	switch.32   %r15242, 2 -> .L3465, 3 -> .L3466, default -> .L3467

.L3465:
	phisrc.32   %phi6340(pos) <- %r15240(e)
	br          .L3464

.L3466:
	push.64*    %arg1
	push.32     $2
	call.64     %r15245 <- luaL_checkinteger
	scast.32    %r15246 <- (64) %r15245
	setgt.32    %r15249 <- %r15246, %r15240(e)
	select.32   %r15251(i) <- %r15249, %r15246, %r15240(e)
	phisrc.32   %phi6347(i) <- %r15251(i)
	br          .L3473

.L3473:
	phi.32      %r15252(i) <- %phi6347(i), %phi6348(i)
	setgt.32    %r15254 <- %r15252(i), %r15246
	phisrc.32   %phi6341(pos) <- %r15246
	cbr         %r15254, .L3470, .L3464

.L3470:
	add.32      %r15257 <- %r15252(i), $-1
	push.64*    %arg1
	push.32     $1
	push.32     %r15257
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $1
	push.32     %r15252(i)
	call        lua_rawseti
	phisrc.32   %phi6348(i) <- %r15257
	br          .L3473

.L3467:
	symaddr.64* %r15263 <- <anon symbol:0x1b9b2e0>
	push.64*    %arg1
	push.64*    %r15263
	call.32     %r15264 <- luaL_error
	phisrc.32   %phi6328(return) <- %r15264
	br          .L3474

.L3464:
	phi.32      %r15267 <- %phi6340(pos), %phi6341(pos)
	push.64*    %arg1
	push.32     $1
	push.32     %r15267
	call        lua_rawseti
	phisrc.32   %phi6329(return) <- $0
	br          .L3474

.L3474:
	phi.32      %r15265 <- %phi6328(return), %phi6329(return)
	ret.32      %r15265


tremove:
.L3475:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $1
	call.64     %r15270 <- lua_objlen
	cast.32     %r15271 <- (64) %r15270
	scast.64    %r15274 <- (32) %r15271
	push.64*    %arg1
	push.32     $2
	push.64     %r15274
	call.64     %r15275 <- luaL_optinteger
	scast.32    %r15276 <- (64) %r15275
	setle.1     %r15279 <- $1, %r15276
	setle.1     %r15283 <- %r15276, %r15271
	and-bool.1  %r15284 <- %r15279, %r15283
	cbr         %r15284, .L3477, .L3476

.L3476:
	phisrc.32   %phi6349(return) <- $0
	br          .L3478

.L3477:
	push.64*    %arg1
	push.32     $1
	push.32     %r15276
	call        lua_rawgeti
	phisrc.32   %phi6359(pos) <- %r15276
	br          .L3482

.L3482:
	phi.32      %r15289(pos) <- %phi6359(pos), %phi6360(pos)
	setlt.32    %r15291 <- %r15289(pos), %r15271
	cbr         %r15291, .L3479, .L3481

.L3479:
	add.32      %r15294 <- %r15289(pos), $1
	push.64*    %arg1
	push.32     $1
	push.32     %r15294
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $1
	push.32     %r15289(pos)
	call        lua_rawseti
	phisrc.32   %phi6360(pos) <- %r15294
	br          .L3482

.L3481:
	push.64*    %arg1
	call        lua_pushnil
	push.64*    %arg1
	push.32     $1
	push.32     %r15271
	call        lua_rawseti
	phisrc.32   %phi6350(return) <- $1
	br          .L3478

.L3478:
	phi.32      %r15286 <- %phi6349(return), %phi6350(return)
	ret.32      %r15286


addfield:
.L3483:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     %arg3
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r15305 <- lua_isstring
	cbr         %r15305, .L3485, .L3484

.L3484:
	symaddr.64* %r15307 <- <anon symbol:0x1b9b680>
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r15310 <- lua_type
	push.64*    %arg1
	push.32     %r15310
	call.64*    %r15311 <- lua_typename
	push.64*    %arg1
	push.64*    %r15307
	push.64*    %r15311
	push.32     %arg3
	call.32     %r15313 <- luaL_error
	br          .L3485

.L3485:
	push.64*    %arg2
	call        luaL_addvalue
	ret


tconcat:
.L3487:
	<entry-point>
	symaddr.64* %r15316 <- <anon symbol:0x1b9ba20>
	symaddr.64* %r15317 <- lsep
	push.64*    %arg1
	push.32     $2
	push.64*    %r15316
	push.64*    %r15317
	call.64*    %r15318(sep) <- luaL_optlstring
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $3
	push.64     $1
	call.64     %r15321 <- luaL_optinteger
	scast.32    %r15322(i) <- (64) %r15321
	push.64*    %arg1
	push.32     $4
	call.32     %r15324 <- lua_type
	setle.32    %r15325 <- %r15324, $0
	phisrc.32   %phi6380(i) <- %r15322(i)
	cbr         %r15325, .L3488, .L3489

.L3488:
	push.64*    %arg1
	push.32     $1
	call.64     %r15327 <- lua_objlen
	cast.32     %r15328 <- (64) %r15327
	phisrc.32   %phi6365 <- %r15328
	br          .L3490

.L3489:
	push.64*    %arg1
	push.32     $4
	call.64     %r15330 <- luaL_checkinteger
	scast.32    %r15331 <- (64) %r15330
	phisrc.32   %phi6366 <- %r15331
	br          .L3490

.L3490:
	phi.32      %r15332(last) <- %phi6365, %phi6366
	symaddr.64* %r15334 <- b
	push.64*    %arg1
	push.64*    %r15334
	call        luaL_buffinit
	br          .L3494

.L3494:
	phi.32      %r15335(i) <- %phi6380(i), %phi6381(i)
	setlt.32    %r15337 <- %r15335(i), %r15332(last)
	cbr         %r15337, .L3491, .L3493

.L3491:
	push.64*    %arg1
	push.64*    %r15334
	push.32     %r15335(i)
	call        addfield
	load.64     %r15343 <- 0[lsep]
	push.64*    %r15334
	push.64*    %r15318(sep)
	push.64     %r15343
	call        luaL_addlstring
	add.32      %r15345 <- %r15335(i), $1
	phisrc.32   %phi6381(i) <- %r15345
	br          .L3494

.L3493:
	seteq.32    %r15348 <- %r15335(i), %r15332(last)
	cbr         %r15348, .L3495, .L3496

.L3495:
	push.64*    %arg1
	push.64*    %r15334
	push.32     %r15335(i)
	call        addfield
	br          .L3496

.L3496:
	push.64*    %r15334
	call        luaL_pushresult
	ret.32      $1


set2:
.L3498:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     %arg2
	call        lua_rawseti
	push.64*    %arg1
	push.32     $1
	push.32     %arg3
	call        lua_rawseti
	ret


sort_comp:
.L3500:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	call.32     %r15359 <- lua_type
	cbr         %r15359, .L3501, .L3502

.L3501:
	push.64*    %arg1
	push.32     $2
	call        lua_pushvalue
	add.32      %r15364 <- %arg2, $-1
	push.64*    %arg1
	push.32     %r15364
	call        lua_pushvalue
	add.32      %r15367 <- %arg3, $-2
	push.64*    %arg1
	push.32     %r15367
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $2
	push.32     $1
	call        lua_call
	push.64*    %arg1
	push.32     $0xffffffff
	call.32     %r15370 <- lua_toboolean
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	phisrc.32   %phi6384(return) <- %r15370
	br          .L3503

.L3502:
	push.64*    %arg1
	push.32     %arg2
	push.32     %arg3
	call.32     %r15377 <- lua_lessthan
	phisrc.32   %phi6385(return) <- %r15377
	br          .L3503

.L3503:
	phi.32      %r15373 <- %phi6384(return), %phi6385(return)
	ret.32      %r15373


auxsort:
.L3505:
	<entry-point>
	phisrc.32   %phi6429(l) <- %arg2
	phisrc.32   %phi6446(u) <- %arg3
	br          .L3509

.L3509:
	phi.32      %r15378(l) <- %phi6429(l), %phi6430(l)
	phi.32      %r15379(u) <- %phi6446(u), %phi6447(u)
	setlt.32    %r15380 <- %r15378(l), %r15379(u)
	cbr         %r15380, .L3506, .L3508

.L3506:
	push.64*    %arg1
	push.32     $1
	push.32     %r15378(l)
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $1
	push.32     %r15379(u)
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15386 <- sort_comp
	cbr         %r15386, .L3510, .L3511

.L3510:
	push.64*    %arg1
	push.32     %r15378(l)
	push.32     %r15379(u)
	call        set2
	br          .L3512

.L3511:
	push.64*    %arg1
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3512

.L3512:
	sub.32      %r15393 <- %r15379(u), %r15378(l)
	seteq.32    %r15394 <- %r15393, $1
	cbr         %r15394, .L3508, .L3514

.L3514:
	add.32      %r15397 <- %r15378(l), %r15379(u)
	divs.32     %r15398 <- %r15397, $2
	push.64*    %arg1
	push.32     $1
	push.32     %r15398
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $1
	push.32     %r15378(l)
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15404 <- sort_comp
	cbr         %r15404, .L3515, .L3516

.L3515:
	push.64*    %arg1
	push.32     %r15398
	push.32     %r15378(l)
	call        set2
	br          .L3517

.L3516:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	push.64*    %arg1
	push.32     $1
	push.32     %r15379(u)
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15412 <- sort_comp
	cbr         %r15412, .L3518, .L3519

.L3518:
	push.64*    %arg1
	push.32     %r15398
	push.32     %r15379(u)
	call        set2
	br          .L3517

.L3519:
	push.64*    %arg1
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3517

.L3517:
	seteq.32    %r15420 <- %r15393, $2
	cbr         %r15420, .L3508, .L3522

.L3522:
	push.64*    %arg1
	push.32     $1
	push.32     %r15398
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xffffffff
	call        lua_pushvalue
	add.32      %r15426 <- %r15379(u), $-1
	push.64*    %arg1
	push.32     $1
	push.32     %r15426
	call        lua_rawgeti
	push.64*    %arg1
	push.32     %r15398
	push.32     %r15426
	call        set2
	phisrc.32   %phi6456(i) <- %r15378(l)
	phisrc.32   %phi6468(j) <- %r15426
	br          .L3530

.L3530:
	phi.32      %r15435 <- %phi6456(i), %phi6457(i)
	add.32      %r15436(i) <- %r15435, $1
	push.64*    %arg1
	push.32     $1
	push.32     %r15436(i)
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15438 <- sort_comp
	phisrc.32   %phi6457(i) <- %r15436(i)
	cbr         %r15438, .L3527, .L3536

.L3527:
	setgt.32    %r15441 <- %r15436(i), %r15379(u)
	cbr         %r15441, .L3531, .L3532

.L3531:
	symaddr.64* %r15443 <- <anon symbol:0x1ba48f8>
	push.64*    %arg1
	push.64*    %r15443
	call.32     %r15444 <- luaL_error
	br          .L3532

.L3532:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3530

.L3536:
	phi.32      %r15447 <- %phi6468(j), %phi6469(j)
	add.32      %r15448(j) <- %r15447, $-1
	push.64*    %arg1
	push.32     $1
	push.32     %r15448(j)
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xfffffffd
	push.32     $0xffffffff
	call.32     %r15450 <- sort_comp
	phisrc.32   %phi6469(j) <- %r15448(j)
	cbr         %r15450, .L3533, .L3535

.L3533:
	setlt.32    %r15453 <- %r15448(j), %r15378(l)
	cbr         %r15453, .L3537, .L3538

.L3537:
	symaddr.64* %r15455 <- <anon symbol:0x1ba4c98>
	push.64*    %arg1
	push.64*    %r15455
	call.32     %r15456 <- luaL_error
	br          .L3538

.L3538:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3536

.L3535:
	setlt.32    %r15460 <- %r15448(j), %r15436(i)
	cbr         %r15460, .L3539, .L3540

.L3539:
	push.64*    %arg1
	push.32     $0xfffffffc
	call        lua_settop
	push.64*    %arg1
	push.32     $1
	push.32     %r15426
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $1
	push.32     %r15436(i)
	call        lua_rawgeti
	push.64*    %arg1
	push.32     %r15426
	push.32     %r15436(i)
	call        set2
	sub.32      %r15476 <- %r15436(i), %r15378(l)
	sub.32      %r15479 <- %r15379(u), %r15436(i)
	setlt.32    %r15480 <- %r15476, %r15479
	cbr         %r15480, .L3541, .L3542

.L3540:
	push.64*    %arg1
	push.32     %r15436(i)
	push.32     %r15448(j)
	call        set2
	br          .L3530

.L3541:
	add.32      %r15483 <- %r15436(i), $-1
	add.32      %r15485 <- %r15483, $2
	phisrc.32   %phi6430(l) <- %r15485
	phisrc.32   %phi6448(i) <- %r15483
	phisrc.32   %phi6463(j) <- %r15378(l)
	br          .L3543

.L3542:
	add.32      %r15487 <- %r15436(i), $1
	add.32      %r15490 <- %r15487, $-2
	phisrc.32   %phi6447(u) <- %r15490
	phisrc.32   %phi6449(i) <- %r15379(u)
	phisrc.32   %phi6464(j) <- %r15487
	br          .L3543

.L3543:
	phi.32      %r15492 <- %phi6463(j), %phi6464(j)
	phi.32      %r15493 <- %phi6448(i), %phi6449(i)
	push.64*    %arg1
	push.32     %r15492
	push.32     %r15493
	call        auxsort
	br          .L3509

.L3508:
	ret


sort:
.L3544:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.32     $5
	call        luaL_checktype
	push.64*    %arg1
	push.32     $1
	call.64     %r15496 <- lua_objlen
	cast.32     %r15497(n) <- (64) %r15496
	symaddr.64* %r15499 <- <anon symbol:0x1ba5038>
	push.64*    %arg1
	push.32     $40
	push.64*    %r15499
	call        luaL_checkstack
	push.64*    %arg1
	push.32     $2
	call.32     %r15501 <- lua_type
	setle.32    %r15502 <- %r15501, $0
	cbr         %r15502, .L3546, .L3545

.L3545:
	push.64*    %arg1
	push.32     $2
	push.32     $6
	call        luaL_checktype
	br          .L3546

.L3546:
	push.64*    %arg1
	push.32     $2
	call        lua_settop
	push.64*    %arg1
	push.32     $1
	push.32     %r15497(n)
	call        auxsort
	ret.32      $0


luaopen_table:
.L3548:
	<entry-point>
	symaddr.64* %r15509 <- <anon symbol:0x1ba53d8>
	symaddr.64* %r15510 <- tab_funcs
	push.64*    %arg1
	push.64*    %r15509
	push.64*    %r15510
	call        luaL_register
	ret.32      $1


pushresult:
.L3550:
	<entry-point>
	call.64*    %r15512 <- __errno_location
	load.32     %r15513(en) <- 0[%r15512]
	cbr         %arg2, .L3551, .L3552

.L3551:
	push.64*    %arg1
	push.32     $1
	call        lua_pushboolean
	phisrc.32   %phi6476(return) <- $1
	br          .L3553

.L3552:
	push.64*    %arg1
	call        lua_pushnil
	cbr         %arg3, .L3555, .L3556

.L3555:
	symaddr.64* %r15520 <- <anon symbol:0x1ba5a30>
	push.32     %r15513(en)
	call.64*    %r15523 <- strerror
	push.64*    %arg1
	push.64*    %r15520
	push.64*    %arg3
	push.64*    %r15523
	call.64*    %r15524 <- lua_pushfstring
	br          .L3557

.L3556:
	symaddr.64* %r15526 <- <anon symbol:0x1ba5dd0>
	push.32     %r15513(en)
	call.64*    %r15528 <- strerror
	push.64*    %arg1
	push.64*    %r15526
	push.64*    %r15528
	call.64*    %r15529 <- lua_pushfstring
	br          .L3557

.L3557:
	scast.64    %r15532 <- (32) %r15513(en)
	push.64*    %arg1
	push.64     %r15532
	call        lua_pushinteger
	phisrc.32   %phi6477(return) <- $3
	br          .L3553

.L3553:
	phi.32      %r15516 <- %phi6476(return), %phi6477(return)
	ret.32      %r15516


fileerror:
.L3558:
	<entry-point>
	symaddr.64* %r15534 <- <anon symbol:0x1ba6170>
	call.64*    %r15536 <- __errno_location
	load.32     %r15537 <- 0[%r15536]
	push.32     %r15537
	call.64*    %r15538 <- strerror
	push.64*    %arg1
	push.64*    %r15534
	push.64*    %arg3
	push.64*    %r15538
	call.64*    %r15539 <- lua_pushfstring
	push.64*    %arg1
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r15543 <- lua_tolstring
	push.64*    %arg1
	push.32     %arg2
	push.64*    %r15543
	call.32     %r15544 <- luaL_argerror
	ret


io_type:
.L3560:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call        luaL_checkany
	push.64*    %arg1
	push.32     $1
	call.64*    %r15547 <- lua_touserdata
	symaddr.64* %r15549 <- <anon symbol:0x1ba65f8>
	push.64*    %arg1
	push.32     $0xffffd8f0
	push.64*    %r15549
	call        lua_getfield
	cbr         %r15547, .L3564, .L3561

.L3564:
	push.64*    %arg1
	push.32     $1
	call.32     %r15553 <- lua_getmetatable
	cbr         %r15553, .L3563, .L3561

.L3563:
	push.64*    %arg1
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15555 <- lua_rawequal
	cbr         %r15555, .L3562, .L3561

.L3561:
	push.64*    %arg1
	call        lua_pushnil
	br          .L3569

.L3562:
	ptrcast.64* %r15558 <- (64) %r15547
	load.64*    %r15559 <- 0[%r15558]
	cbr         %r15559, .L3567, .L3566

.L3566:
	symaddr.64* %r15562 <- <anon symbol:0x1ba6a80>
	push.64*    %arg1
	push.64*    %r15562
	push.64     $11
	call        lua_pushlstring
	br          .L3569

.L3567:
	symaddr.64* %r15564 <- <anon symbol:0x1ba6ff0>
	push.64*    %arg1
	push.64*    %r15564
	push.64     $4
	call        lua_pushlstring
	br          .L3569

.L3569:
	ret.32      $1


tofile:
.L3570:
	<entry-point>
	symaddr.64* %r15567 <- <anon symbol:0x1ba7560>
	push.64*    %arg1
	push.32     $1
	push.64*    %r15567
	call.64*    %r15568 <- luaL_checkudata
	ptrcast.64* %r15569 <- (64) %r15568
	load.64*    %r15571 <- 0[%r15569]
	phisrc.64*  %phi6502 <- %r15571
	phisrc.64*  %phi6503 <- %r15571
	cbr         %r15571, .L3572, .L3571

.L3571:
	symaddr.64* %r15574 <- <anon symbol:0x1ba79e8>
	push.64*    %arg1
	push.64*    %r15574
	call.32     %r15575 <- luaL_error
	br          .L3572

.L3572:
	load.64*    %r15577 <- 0[%r15569]
	ret.64*     %r15577


newfile:
.L3574:
	<entry-point>
	push.64*    %arg1
	push.64     $8
	call.64*    %r15580 <- lua_newuserdata
	ptrcast.64* %r15581 <- (64) %r15580
	store.64*   $0 -> 0[%r15581]
	symaddr.64* %r15584 <- <anon symbol:0x1ba7f58>
	push.64*    %arg1
	push.32     $0xffffd8f0
	push.64*    %r15584
	call        lua_getfield
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r15586 <- lua_setmetatable
	ret.64*     %r15581


io_noclose:
.L3576:
	<entry-point>
	push.64*    %arg1
	call        lua_pushnil
	symaddr.64* %r15591 <- <anon symbol:0x1ba82f8>
	push.64*    %arg1
	push.64*    %r15591
	push.64     $26
	call        lua_pushlstring
	ret.32      $2


io_pclose:
.L3578:
	<entry-point>
	symaddr.64* %r15594 <- <anon symbol:0x1ba8868>
	push.64*    %arg1
	push.32     $1
	push.64*    %r15594
	call.64*    %r15595 <- luaL_checkudata
	ptrcast.64* %r15596 <- (64) %r15595
	load.64*    %r15599 <- 0[%r15596]
	store.64*   $0 -> 0[%r15596]
	push.64*    %arg1
	push.32     $0
	push.64*    $0
	call.32     %r15603 <- pushresult
	ret.32      %r15603


io_fclose:
.L3580:
	<entry-point>
	symaddr.64* %r15606 <- <anon symbol:0x1ba8dd8>
	push.64*    %arg1
	push.32     $1
	push.64*    %r15606
	call.64*    %r15607 <- luaL_checkudata
	ptrcast.64* %r15608 <- (64) %r15607
	load.64*    %r15610 <- 0[%r15608]
	push.64*    %r15610
	call.32     %r15611 <- fclose
	seteq.32    %r15612 <- %r15611, $0
	store.64*   $0 -> 0[%r15608]
	push.64*    %arg1
	push.32     %r15612
	push.64*    $0
	call.32     %r15616 <- pushresult
	ret.32      %r15616


aux_close:
.L3582:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call        lua_getfenv
	symaddr.64* %r15620 <- <anon symbol:0x1ba9348>
	push.64*    %arg1
	push.32     $0xffffffff
	push.64*    %r15620
	call        lua_getfield
	push.64*    %arg1
	push.64*    %arg1
	push.32     $0xffffffff
	call.64*    %r15624 <- lua_tocfunction
	call.32     %r15625 <- %r15624
	ret.32      %r15625


io_close:
.L3584:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r15628 <- lua_type
	seteq.32    %r15629 <- %r15628, $0xffffffff
	cbr         %r15629, .L3585, .L3586

.L3585:
	push.64*    %arg1
	push.32     $0xffffd8ef
	push.32     $2
	call        lua_rawgeti
	br          .L3586

.L3586:
	push.64*    %arg1
	call.64*    %r15632 <- tofile
	push.64*    %arg1
	call.32     %r15634 <- aux_close
	ret.32      %r15634


io_gc:
.L3588:
	<entry-point>
	symaddr.64* %r15637 <- <anon symbol:0x1ba96e8>
	push.64*    %arg1
	push.32     $1
	push.64*    %r15637
	call.64*    %r15638 <- luaL_checkudata
	ptrcast.64* %r15639 <- (64) %r15638
	load.64*    %r15640 <- 0[%r15639]
	cbr         %r15640, .L3589, .L3591

.L3589:
	push.64*    %arg1
	call.32     %r15644 <- aux_close
	br          .L3591

.L3591:
	ret.32      $0


io_open:
.L3592:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.64*    $0
	call.64*    %r15647 <- luaL_checklstring
	symaddr.64* %r15649 <- <anon symbol:0x1ba9b70>
	push.64*    %arg1
	push.32     $2
	push.64*    %r15649
	push.64*    $0
	call.64*    %r15650 <- luaL_optlstring
	push.64*    %arg1
	call.64*    %r15652 <- newfile
	push.64*    %r15647
	push.64*    %r15650
	call.64*    %r15655 <- fopen
	store.64*   %r15655 -> 0[%r15652]
	cbr         %r15655, .L3595, .L3594

.L3594:
	push.64*    %arg1
	push.32     $0
	push.64*    %r15647
	call.32     %r15662 <- pushresult
	phisrc.32   %phi6515 <- %r15662
	br          .L3596

.L3595:
	phisrc.32   %phi6516 <- $1
	br          .L3596

.L3596:
	phi.32      %r15663 <- %phi6515, %phi6516
	ret.32      %r15663


getiofile:
.L3597:
	<entry-point>
	push.64*    %arg1
	push.32     $0xffffd8ef
	push.32     %arg2
	call        lua_rawgeti
	push.64*    %arg1
	push.32     $0xffffffff
	call.64*    %r15668 <- lua_touserdata
	ptrcast.64* %r15669 <- (64) %r15668
	load.64*    %r15670 <- 0[%r15669]
	cbr         %r15670, .L3600, .L3598

.L3598:
	symaddr.64* %r15674 <- <anon symbol:0x1baa1c8>
	symaddr.64* %r15675 <- fnames
	add.32      %r15677 <- %arg2, $-1
	scast.64    %r15678 <- (32) %r15677
	muls.64     %r15679 <- %r15678, $8
	add.64*     %r15680 <- %r15675, %r15679
	load.64*    %r15681 <- 0[%r15680]
	push.64*    %arg1
	push.64*    %r15674
	push.64*    %r15681
	call.32     %r15682 <- luaL_error
	br          .L3600

.L3600:
	ret.64*     %r15670


g_iofile:
.L3601:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r15686 <- lua_type
	setle.32    %r15687 <- %r15686, $0
	cbr         %r15687, .L3603, .L3602

.L3602:
	push.64*    %arg1
	push.32     $1
	push.64*    $0
	call.64*    %r15689 <- lua_tolstring
	cbr         %r15689, .L3604, .L3605

.L3604:
	push.64*    %arg1
	call.64*    %r15692 <- newfile
	push.64*    %r15689
	push.64*    %arg3
	call.64*    %r15695 <- fopen
	store.64*   %r15695 -> 0[%r15692]
	cbr         %r15695, .L3608, .L3606

.L3606:
	push.64*    %arg1
	push.32     $1
	push.64*    %r15689
	call        fileerror
	br          .L3608

.L3605:
	push.64*    %arg1
	call.64*    %r15703 <- tofile
	push.64*    %arg1
	push.32     $1
	call        lua_pushvalue
	br          .L3608

.L3608:
	push.64*    %arg1
	push.32     $0xffffd8ef
	push.32     %arg2
	call        lua_rawseti
	br          .L3603

.L3603:
	push.64*    %arg1
	push.32     $0xffffd8ef
	push.32     %arg2
	call        lua_rawgeti
	ret.32      $1


io_input:
.L3610:
	<entry-point>
	symaddr.64* %r15711 <- <anon symbol:0x1baa9f0>
	push.64*    %arg1
	push.32     $1
	push.64*    %r15711
	call.32     %r15712 <- g_iofile
	ret.32      %r15712


io_output:
.L3612:
	<entry-point>
	symaddr.64* %r15715 <- <anon symbol:0x1baad90>
	push.64*    %arg1
	push.32     $2
	push.64*    %r15715
	call.32     %r15716 <- g_iofile
	ret.32      %r15716


aux_lines:
.L3614:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call        lua_pushvalue
	push.64*    %arg1
	push.32     %arg3
	call        lua_pushboolean
	symaddr.64* %r15723 <- io_readline
	push.64*    %arg1
	push.64*    %r15723
	push.32     $2
	call        lua_pushcclosure
	ret


f_lines:
.L3616:
	<entry-point>
	push.64*    %arg1
	call.64*    %r15725 <- tofile
	push.64*    %arg1
	push.32     $1
	push.32     $0
	call        aux_lines
	ret.32      $1


io_lines:
.L3618:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r15729 <- lua_type
	setle.32    %r15730 <- %r15729, $0
	cbr         %r15730, .L3619, .L3620

.L3619:
	push.64*    %arg1
	push.32     $0xffffd8ef
	push.32     $1
	call        lua_rawgeti
	push.64*    %arg1
	call.32     %r15733 <- f_lines
	phisrc.32   %phi6543(return) <- %r15733
	br          .L3621

.L3620:
	push.64*    %arg1
	push.32     $1
	push.64*    $0
	call.64*    %r15736 <- luaL_checklstring
	push.64*    %arg1
	call.64*    %r15738 <- newfile
	symaddr.64* %r15740 <- <anon symbol:0x1babcf8>
	push.64*    %r15736
	push.64*    %r15740
	call.64*    %r15741 <- fopen
	store.64*   %r15741 -> 0[%r15738]
	cbr         %r15741, .L3624, .L3623

.L3623:
	push.64*    %arg1
	push.32     $1
	push.64*    %r15736
	call        fileerror
	br          .L3624

.L3624:
	push.64*    %arg1
	call.32     %r15750 <- lua_gettop
	push.64*    %arg1
	push.32     %r15750
	push.32     $1
	call        aux_lines
	phisrc.32   %phi6544(return) <- $1
	br          .L3621

.L3621:
	phi.32      %r15734 <- %phi6543(return), %phi6544(return)
	ret.32      %r15734


read_number:
.L3625:
	<entry-point>
	symaddr.64* %r15752 <- <anon symbol:0x1bac180>
	symaddr.64* %r15753 <- d
	push.64*    %arg2
	push.64*    %r15752
	push.64*    %r15753
	call.32     %r15754 <- fscanf
	seteq.32    %r15755 <- %r15754, $1
	cbr         %r15755, .L3626, .L3627

.L3626:
	load.f64    %r15757 <- 0[d]
	push.64*    %arg1
	push.f64    %r15757
	call        lua_pushnumber
	br          .L3628

.L3627:
	push.64*    %arg1
	call        lua_pushnil
	br          .L3628

.L3628:
	ret.32      %r15755


test_eof:
.L3630:
	<entry-point>
	push.64*    %arg2
	call.32     %r15761 <- _IO_getc
	push.32     %r15761
	push.64*    %arg2
	call.32     %r15764 <- ungetc
	push.64*    %arg1
	push.64*    $0
	push.64     $0
	call        lua_pushlstring
	setne.32    %r15767 <- %r15761, $0xffffffff
	ret.32      %r15767


read_line:
.L3632:
	<entry-point>
	symaddr.64* %r15770 <- b
	push.64*    %arg1
	push.64*    %r15770
	call        luaL_buffinit
	br          .L3633

.L3633:
	push.64*    %r15770
	call.64*    %r15772 <- luaL_prepbuffer
	push.64*    %r15772
	push.32     $0x2000
	push.64*    %arg2
	call.64*    %r15775 <- fgets
	cbr         %r15775, .L3638, .L3637

.L3637:
	push.64*    %r15770
	call        luaL_pushresult
	push.64*    %arg1
	push.32     $0xffffffff
	call.64     %r15779 <- lua_objlen
	seta.32     %r15780 <- %r15779, $0
	phisrc.32   %phi6556(return) <- %r15780
	br          .L3639

.L3638:
	push.64*    %r15772
	call.64     %r15783 <- strlen
	cbr         %r15783, .L3642, .L3640

.L3642:
	add.64      %r15788 <- %r15783, $-1
	add.64*     %r15789 <- %r15772, %r15788
	load.8      %r15790 <- 0[%r15789]
	scast.32    %r15791 <- (8) %r15790
	setne.32    %r15792 <- %r15791, $10
	cbr         %r15792, .L3640, .L3641

.L3640:
	load.64*    %r15794 <- 0[b]
	cast.64     %r15795 <- (64) %r15794
	add.64      %r15796 <- %r15795, %r15783
	ptrcast.64* %r15797 <- (64) %r15796
	store.64*   %r15797 -> 0[b]
	br          .L3633

.L3641:
	load.64*    %r15800 <- 0[b]
	cast.64     %r15801 <- (64) %r15800
	add.64      %r15802 <- %r15801, %r15788
	ptrcast.64* %r15803 <- (64) %r15802
	store.64*   %r15803 -> 0[b]
	push.64*    %r15770
	call        luaL_pushresult
	phisrc.32   %phi6557(return) <- $1
	br          .L3639

.L3639:
	phi.32      %r15781 <- %phi6556(return), %phi6557(return)
	ret.32      %r15781


read_chars:
.L3644:
	<entry-point>
	symaddr.64* %r15806 <- b
	push.64*    %arg1
	push.64*    %r15806
	call        luaL_buffinit
	phisrc.64   %phi6576(n) <- %arg3
	phisrc.64   %phi6581(rlen) <- $0x2000
	br          .L3645

.L3645:
	push.64*    %r15806
	call.64*    %r15808(p) <- luaL_prepbuffer
	phi.64      %r15809(rlen) <- %phi6581(rlen), %phi6582(rlen)
	phi.64      %r15810(n) <- %phi6576(n), %phi6577(n)
	seta.32     %r15811 <- %r15809(rlen), %r15810(n)
	select.64   %r15815(rlen) <- %r15811, %r15810(n), %r15809(rlen)
	cbr         %r15811, .L3648, .L3649

.L3648:
	phisrc.64   %phi6582(rlen) <- %r15810(n)
	br          .L3649

.L3649:
	cast.64*    %r15814 <- (64) %r15808(p)
	push.64*    %r15814
	push.64     $1
	push.64     %r15815(rlen)
	push.64*    %arg2
	call.64     %r15817 <- fread
	load.64*    %r15819 <- 0[b]
	cast.64     %r15820 <- (64) %r15819
	add.64      %r15821 <- %r15820, %r15817
	ptrcast.64* %r15822 <- (64) %r15821
	store.64*   %r15822 -> 0[b]
	sub.64      %r15826 <- %r15810(n), %r15817
	phisrc.64   %phi6577(n) <- %r15826
	seta.1      %r15830 <- %r15826, $0
	seteq.1     %r15834 <- %r15817, %r15815(rlen)
	and-bool.1  %r15835 <- %r15830, %r15834
	cbr         %r15835, .L3645, .L3647

.L3647:
	push.64*    %r15806
	call        luaL_pushresult
	cbr         %r15826, .L3652, .L3651

.L3651:
	phisrc.32   %phi6566 <- $1
	br          .L3653

.L3652:
	push.64*    %arg1
	push.32     $0xffffffff
	call.64     %r15841 <- lua_objlen
	seta.32     %r15842 <- %r15841, $0
	phisrc.32   %phi6567 <- %r15842
	br          .L3653

.L3653:
	phi.32      %r15843 <- %phi6566, %phi6567
	ret.32      %r15843


g_read:
.L3654:
	<entry-point>
	push.64*    %arg1
	call.32     %r15846 <- lua_gettop
	add.32      %r15847 <- %r15846, $-1
	push.64*    %arg2
	call        clearerr
	cbr         %r15847, .L3656, .L3655

.L3655:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r15853(success) <- read_line
	add.32      %r15855(n) <- %arg3, $1
	phisrc.32   %phi6652(success) <- %r15853(success)
	phisrc.32   %phi6659(n) <- %r15855(n)
	br          .L3657

.L3656:
	add.32      %r15858 <- %r15847, $20
	symaddr.64* %r15859 <- <anon symbol:0x1bb5d08>
	push.64*    %arg1
	push.32     %r15858
	push.64*    %r15859
	call        luaL_checkstack
	phisrc.32   %phi6649(nargs) <- %r15847
	phisrc.32   %phi6654(success) <- $1
	phisrc.32   %phi6660(n) <- %arg3
	phisrc.32   %phi6670(n) <- %arg3
	br          .L3661

.L3661:
	phi.32      %r15861 <- %phi6649(nargs), %phi6650(nargs)
	add.32      %r15862 <- %r15861, $-1
	setne.1     %r15863 <- %r15861, $0
	phi.32      %r15864 <- %phi6654(success), %phi6655(success), %phi6656(success), %phi6657(success), %phi6658(success)
	setne.1     %r15865 <- %r15864, $0
	and-bool.1  %r15866 <- %r15863, %r15865
	phisrc.32   %phi6650(nargs) <- %r15862
	phisrc.32   %phi6653(success) <- %r15864
	cbr         %r15866, .L3658, .L3657

.L3658:
	phi.32      %r15869(n) <- %phi6670(n), %phi6671(n)
	push.64*    %arg1
	push.32     %r15869(n)
	call.32     %r15870 <- lua_type
	seteq.32    %r15871 <- %r15870, $3
	cbr         %r15871, .L3662, .L3663

.L3662:
	push.64*    %arg1
	push.32     %r15869(n)
	call.64     %r15874 <- lua_tointeger
	cbr         %r15874, .L3665, .L3664

.L3664:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r15880 <- test_eof
	phisrc.32   %phi6585 <- %r15880
	br          .L3666

.L3665:
	push.64*    %arg1
	push.64*    %arg2
	push.64     %r15874
	call.32     %r15884 <- read_chars
	phisrc.32   %phi6586 <- %r15884
	br          .L3666

.L3666:
	phi.32      %r15885 <- %phi6585, %phi6586
	phisrc.32   %phi6655(success) <- %r15885
	br          .L3659

.L3663:
	push.64*    %arg1
	push.32     %r15869(n)
	push.64*    $0
	call.64*    %r15888 <- lua_tolstring
	cbr         %r15888, .L3671, .L3669

.L3671:
	load.8      %r15891 <- 0[%r15888]
	scast.32    %r15892 <- (8) %r15891
	seteq.32    %r15893 <- %r15892, $42
	cbr         %r15893, .L3670, .L3669

.L3669:
	symaddr.64* %r15896 <- <anon symbol:0x1bb6190>
	push.64*    %arg1
	push.32     %r15869(n)
	push.64*    %r15896
	call.32     %r15897 <- luaL_argerror
	br          .L3670

.L3670:
	load.8      %r15900 <- 1[%r15888]
	switch.8    %r15900, 97 -> .L3675, 108 -> .L3674, 110 -> .L3673, default -> .L3676

.L3673:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r15903 <- read_number
	phisrc.32   %phi6656(success) <- %r15903
	br          .L3659

.L3674:
	push.64*    %arg1
	push.64*    %arg2
	call.32     %r15906 <- read_line
	phisrc.32   %phi6657(success) <- %r15906
	br          .L3659

.L3675:
	push.64*    %arg1
	push.64*    %arg2
	push.64     $-1
	call.32     %r15909 <- read_chars
	phisrc.32   %phi6658(success) <- $1
	br          .L3659

.L3676:
	symaddr.64* %r15912 <- <anon symbol:0x1bb6618>
	push.64*    %arg1
	push.32     %r15869(n)
	push.64*    %r15912
	call.32     %r15913 <- luaL_argerror
	phisrc.32   %phi6589(return) <- %r15913
	br          .L3677

.L3659:
	add.32      %r15916 <- %r15869(n), $1
	phisrc.32   %phi6661(n) <- %r15916
	phisrc.32   %phi6671(n) <- %r15916
	br          .L3661

.L3657:
	push.64*    %arg2
	call.32     %r15918 <- ferror
	cbr         %r15918, .L3678, .L3679

.L3678:
	push.64*    %arg1
	push.32     $0
	push.64*    $0
	call.32     %r15920 <- pushresult
	phisrc.32   %phi6590(return) <- %r15920
	br          .L3677

.L3679:
	phi.32      %r15921 <- %phi6652(success), %phi6653(success)
	cbr         %r15921, .L3681, .L3680

.L3680:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	push.64*    %arg1
	call        lua_pushnil
	br          .L3681

.L3681:
	phi.32      %r15924 <- %phi6659(n), %phi6660(n), %phi6661(n)
	sub.32      %r15926 <- %r15924, %arg3
	phisrc.32   %phi6591(return) <- %r15926
	br          .L3677

.L3677:
	phi.32      %r15914 <- %phi6589(return), %phi6590(return), %phi6591(return)
	ret.32      %r15914


io_read:
.L3682:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.64*    %r15929 <- getiofile
	push.64*    %arg1
	push.64*    %r15929
	push.32     $1
	call.32     %r15930 <- g_read
	ret.32      %r15930


f_read:
.L3684:
	<entry-point>
	push.64*    %arg1
	call.64*    %r15934 <- tofile
	push.64*    %arg1
	push.64*    %r15934
	push.32     $2
	call.32     %r15935 <- g_read
	ret.32      %r15935


io_readline:
.L3686:
	<entry-point>
	push.64*    %arg1
	push.32     $0xffffd8ed
	call.64*    %r15938 <- lua_touserdata
	ptrcast.64* %r15939 <- (64) %r15938
	load.64*    %r15940 <- 0[%r15939]
	cbr         %r15940, .L3688, .L3687

.L3687:
	symaddr.64* %r15944 <- <anon symbol:0x1bab218>
	push.64*    %arg1
	push.64*    %r15944
	call.32     %r15945 <- luaL_error
	br          .L3688

.L3688:
	push.64*    %arg1
	push.64*    %r15940
	call.32     %r15948(sucess) <- read_line
	push.64*    %r15940
	call.32     %r15950 <- ferror
	cbr         %r15950, .L3689, .L3690

.L3689:
	symaddr.64* %r15952 <- <anon symbol:0x1bab5b8>
	call.64*    %r15953 <- __errno_location
	load.32     %r15954 <- 0[%r15953]
	push.32     %r15954
	call.64*    %r15955 <- strerror
	push.64*    %arg1
	push.64*    %r15952
	push.64*    %r15955
	call.32     %r15956 <- luaL_error
	phisrc.32   %phi6678(return) <- %r15956
	br          .L3691

.L3690:
	cbr         %r15948(sucess), .L3692, .L3693

.L3692:
	phisrc.32   %phi6679(return) <- $1
	br          .L3691

.L3693:
	push.64*    %arg1
	push.32     $0xffffd8ec
	call.32     %r15960 <- lua_toboolean
	cbr         %r15960, .L3695, .L3696

.L3695:
	push.64*    %arg1
	push.32     $0
	call        lua_settop
	push.64*    %arg1
	push.32     $0xffffd8ed
	call        lua_pushvalue
	push.64*    %arg1
	call.32     %r15964 <- aux_close
	br          .L3696

.L3696:
	phisrc.32   %phi6680(return) <- $0
	br          .L3691

.L3691:
	phi.32      %r15957 <- %phi6678(return), %phi6679(return), %phi6680(return)
	ret.32      %r15957


g_write:
.L3697:
	<entry-point>
	push.64*    %arg1
	call.32     %r15966 <- lua_gettop
	add.32      %r15967(nargs) <- %r15966, $-1
	phisrc.32   %phi6709(arg) <- %arg3
	phisrc.32   %phi6711(nargs) <- %r15967(nargs)
	phisrc.32   %phi6719(status) <- $1
	br          .L3701

.L3701:
	phi.32      %r15968 <- %phi6711(nargs), %phi6712(nargs)
	add.32      %r15969 <- %r15968, $-1
	phisrc.32   %phi6712(nargs) <- %r15969
	phi.32      %r15974 <- %phi6719(status), %phi6720(status), %phi6721(status)
	cbr         %r15968, .L3698, .L3700

.L3698:
	phi.32      %r15971(arg) <- %phi6709(arg), %phi6710(arg)
	push.64*    %arg1
	push.32     %r15971(arg)
	call.32     %r15972 <- lua_type
	seteq.32    %r15973 <- %r15972, $3
	cbr         %r15973, .L3702, .L3703

.L3702:
	cbr         %r15974, .L3704, .L3705

.L3704:
	symaddr.64* %r15976 <- <anon symbol:0x1bb69b8>
	push.64*    %arg1
	push.32     %r15971(arg)
	call.f64    %r15979 <- lua_tonumber
	push.64*    %arg2
	push.64*    %r15976
	push.f64    %r15979
	call.32     %r15980 <- fprintf
	setgt.32    %r15981 <- %r15980, $0
	phisrc.32   %phi6689 <- %r15981
	br          .L3706

.L3705:
	phisrc.32   %phi6690 <- $0
	br          .L3706

.L3706:
	phi.32      %r15982 <- %phi6689, %phi6690
	phisrc.32   %phi6720(status) <- %r15982
	br          .L3699

.L3703:
	symaddr.64* %r15985 <- l
	push.64*    %arg1
	push.32     %r15971(arg)
	push.64*    %r15985
	call.64*    %r15986(s) <- luaL_checklstring
	cbr         %r15974, .L3708, .L3709

.L3708:
	cast.64*    %r15989 <- (64) %r15986(s)
	load.64     %r15990 <- 0[l]
	push.64*    %r15989
	push.64     $1
	push.64     %r15990
	push.64*    %arg2
	call.64     %r15992 <- fwrite
	load.64     %r15993 <- 0[l]
	seteq.32    %r15994 <- %r15992, %r15993
	phisrc.32   %phi6691 <- %r15994
	br          .L3710

.L3709:
	phisrc.32   %phi6692 <- $0
	br          .L3710

.L3710:
	phi.32      %r15995 <- %phi6691, %phi6692
	phisrc.32   %phi6721(status) <- %r15995
	br          .L3699

.L3699:
	add.32      %r15997 <- %r15971(arg), $1
	phisrc.32   %phi6710(arg) <- %r15997
	br          .L3701

.L3700:
	push.64*    %arg1
	push.32     %r15974
	push.64*    $0
	call.32     %r16000 <- pushresult
	ret.32      %r16000


io_write:
.L3712:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	call.64*    %r16004 <- getiofile
	push.64*    %arg1
	push.64*    %r16004
	push.32     $1
	call.32     %r16005 <- g_write
	ret.32      %r16005


f_write:
.L3714:
	<entry-point>
	push.64*    %arg1
	call.64*    %r16009 <- tofile
	push.64*    %arg1
	push.64*    %r16009
	push.32     $2
	call.32     %r16010 <- g_write
	ret.32      %r16010


io_flush:
.L3716:
	<entry-point>
	push.64*    %arg1
	push.32     $2
	call.64*    %r16014 <- getiofile
	push.64*    %r16014
	call.32     %r16015 <- fflush
	seteq.32    %r16016 <- %r16015, $0
	push.64*    %arg1
	push.32     %r16016
	push.64*    $0
	call.32     %r16017 <- pushresult
	ret.32      %r16017


f_flush:
.L3718:
	<entry-point>
	push.64*    %arg1
	call.64*    %r16021 <- tofile
	push.64*    %r16021
	call.32     %r16022 <- fflush
	seteq.32    %r16023 <- %r16022, $0
	push.64*    %arg1
	push.32     %r16023
	push.64*    $0
	call.32     %r16024 <- pushresult
	ret.32      %r16024


createmeta:
.L3720:
	<entry-point>
	symaddr.64* %r16027 <- <anon symbol:0x1bb6f28>
	push.64*    %arg1
	push.64*    %r16027
	call.32     %r16028 <- luaL_newmetatable
	push.64*    %arg1
	push.32     $0xffffffff
	call        lua_pushvalue
	symaddr.64* %r16031 <- <anon symbol:0x1bb72c8>
	push.64*    %arg1
	push.32     $0xfffffffe
	push.64*    %r16031
	call        lua_setfield
	symaddr.64* %r16033 <- flib
	push.64*    %arg1
	push.64*    $0
	push.64*    %r16033
	call        luaL_register
	ret


createstdfile:
.L3722:
	<entry-point>
	push.64*    %arg1
	call.64*    %r16036 <- newfile
	store.64*   %arg2 -> 0[%r16036]
	setgt.32    %r16038 <- %arg3, $0
	cbr         %r16038, .L3723, .L3724

.L3723:
	push.64*    %arg1
	push.32     $0xffffffff
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $0xffffd8ef
	push.32     %arg3
	call        lua_rawseti
	br          .L3724

.L3724:
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r16044 <- lua_setfenv
	push.64*    %arg1
	push.32     $0xfffffffd
	push.64*    %arg4
	call        lua_setfield
	ret


newfenv:
.L3726:
	<entry-point>
	push.64*    %arg1
	push.32     $0
	push.32     $1
	call        lua_createtable
	push.64*    %arg1
	push.64*    %arg2
	push.32     $0
	call        lua_pushcclosure
	symaddr.64* %r16051 <- <anon symbol:0x1bb7920>
	push.64*    %arg1
	push.32     $0xfffffffe
	push.64*    %r16051
	call        lua_setfield
	ret


luaopen_io:
.L3728:
	<entry-point>
	push.64*    %arg1
	call        createmeta
	symaddr.64* %r16054 <- io_fclose
	push.64*    %arg1
	push.64*    %r16054
	call        newfenv
	push.64*    %arg1
	push.32     $0xffffd8ef
	call        lua_replace
	symaddr.64* %r16057 <- <anon symbol:0x1bb7e90>
	symaddr.64* %r16058 <- iolib
	push.64*    %arg1
	push.64*    %r16057
	push.64*    %r16058
	call        luaL_register
	symaddr.64* %r16060 <- io_noclose
	push.64*    %arg1
	push.64*    %r16060
	call        newfenv
	load.64*    %r16062 <- 0[stdin]
	symaddr.64* %r16063 <- <anon symbol:0x1bb85d0>
	push.64*    %arg1
	push.64*    %r16062
	push.32     $1
	push.64*    %r16063
	call        createstdfile
	load.64*    %r16065 <- 0[stdout]
	symaddr.64* %r16066 <- <anon symbol:0x1bb8970>
	push.64*    %arg1
	push.64*    %r16065
	push.32     $2
	push.64*    %r16066
	call        createstdfile
	load.64*    %r16068 <- 0[stderr]
	symaddr.64* %r16069 <- <anon symbol:0x1bb8d10>
	push.64*    %arg1
	push.64*    %r16068
	push.32     $0
	push.64*    %r16069
	call        createstdfile
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	symaddr.64* %r16072 <- <anon symbol:0x1bb90b0>
	push.64*    %arg1
	push.32     $0xffffffff
	push.64*    %r16072
	call        lua_getfield
	symaddr.64* %r16074 <- io_pclose
	push.64*    %arg1
	push.64*    %r16074
	call        newfenv
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r16076 <- lua_setfenv
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	ret.32      $1


os_pushresult:
.L3730:
	<entry-point>
	call.64*    %r16079 <- __errno_location
	load.32     %r16080(en) <- 0[%r16079]
	select.32   %r16083 <- %arg2, $1, $3
	cbr         %arg2, .L3731, .L3732

.L3731:
	push.64*    %arg1
	push.32     $1
	call        lua_pushboolean
	br          .L3733

.L3732:
	push.64*    %arg1
	call        lua_pushnil
	symaddr.64* %r16086 <- <anon symbol:0x1bb9708>
	push.32     %r16080(en)
	call.64*    %r16089 <- strerror
	push.64*    %arg1
	push.64*    %r16086
	push.64*    %arg3
	push.64*    %r16089
	call.64*    %r16090 <- lua_pushfstring
	scast.64    %r16093 <- (32) %r16080(en)
	push.64*    %arg1
	push.64     %r16093
	call        lua_pushinteger
	br          .L3733

.L3733:
	ret.32      %r16083


os_remove:
.L3735:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.64*    $0
	call.64*    %r16095 <- luaL_checklstring
	push.64*    %r16095
	call.32     %r16098 <- remove
	seteq.32    %r16099 <- %r16098, $0
	push.64*    %arg1
	push.32     %r16099
	push.64*    %r16095
	call.32     %r16101 <- os_pushresult
	ret.32      %r16101


os_exit:
.L3737:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.64     $0
	call.64     %r16104 <- luaL_optinteger
	scast.32    %r16105 <- (64) %r16104
	push.32     %r16105
	call        exit
	ret.32      $0


luaopen_os:
.L3739:
	<entry-point>
	symaddr.64* %r16108 <- <anon symbol:0x1bb9aa8>
	symaddr.64* %r16109 <- syslib
	push.64*    %arg1
	push.64*    %r16108
	push.64*    %r16109
	call        luaL_register
	ret.32      $1


posrelat:
.L3741:
	<entry-point>
	setlt.32    %r16112 <- %arg1, $0
	phisrc.64   %phi6743(pos) <- %arg1
	cbr         %r16112, .L3742, .L3743

.L3742:
	add.64      %r16115 <- %arg2, $1
	add.64      %r16118 <- %arg1, %r16115
	phisrc.64   %phi6744(pos) <- %r16118
	br          .L3743

.L3743:
	phi.64      %r16120 <- %phi6743(pos), %phi6744(pos)
	setge.32    %r16122 <- %r16120, $0
	select.64   %r16123 <- %r16122, %r16120, $0
	ret.64      %r16123


str_sub:
.L3745:
	<entry-point>
	symaddr.64* %r16126 <- l
	push.64*    %arg1
	push.32     $1
	push.64*    %r16126
	call.64*    %r16127(s) <- luaL_checklstring
	push.64*    %arg1
	push.32     $2
	call.64     %r16129 <- luaL_checkinteger
	load.64     %r16130 <- 0[l]
	push.64     %r16129
	push.64     %r16130
	call.64     %r16131 <- posrelat
	push.64*    %arg1
	push.32     $3
	push.64     $-1
	call.64     %r16133 <- luaL_optinteger
	load.64     %r16134 <- 0[l]
	push.64     %r16133
	push.64     %r16134
	call.64     %r16135(end) <- posrelat
	setlt.32    %r16137 <- %r16131, $1
	select.64   %r16144(start) <- %r16137, $1, %r16131
	load.64     %r16139(l) <- 0[l]
	setgt.32    %r16141 <- %r16135(end), %r16139(l)
	select.64   %r16145(end) <- %r16141, %r16139(l), %r16135(end)
	setle.32    %r16146 <- %r16144(start), %r16145(end)
	cbr         %r16146, .L3750, .L3751

.L3750:
	add.64*     %r16150 <- %r16127(s), %r16144(start)
	add.64*     %r16151 <- %r16150, $-1
	sub.64      %r16154 <- %r16145(end), %r16144(start)
	add.64      %r16155 <- %r16154, $1
	push.64*    %arg1
	push.64*    %r16151
	push.64     %r16155
	call        lua_pushlstring
	br          .L3753

.L3751:
	symaddr.64* %r16158 <- <anon symbol:0x1bba1e8>
	push.64*    %arg1
	push.64*    %r16158
	push.64     $0
	call        lua_pushlstring
	br          .L3753

.L3753:
	ret.32      $1


str_lower:
.L3754:
	<entry-point>
	symaddr.64* %r16161 <- l
	push.64*    %arg1
	push.32     $1
	push.64*    %r16161
	call.64*    %r16162(s) <- luaL_checklstring
	symaddr.64* %r16164 <- b
	push.64*    %arg1
	push.64*    %r16164
	call        luaL_buffinit
	phisrc.64   %phi6765(i) <- $0
	br          .L3758

.L3758:
	phi.64      %r16165(i) <- %phi6765(i), %phi6766(i)
	load.64     %r16166 <- 0[l]
	setb.32     %r16167 <- %r16165(i), %r16166
	cbr         %r16167, .L3755, .L3757

.L3755:
	load.64*    %r16168 <- 0[b]
	add.64*     %r16171 <- %r16164, $0x2018
	setb.32     %r16172 <- %r16168, %r16171
	cbr         %r16172, .L3761, .L3760

.L3760:
	push.64*    %r16164
	call.64*    %r16174 <- luaL_prepbuffer
	br          .L3761

.L3761:
	add.64*     %r16178 <- %r16162(s), %r16165(i)
	load.8      %r16179 <- 0[%r16178]
	cast.32     %r16181 <- (8) %r16179
	push.32     %r16181
	call.32     %r16182 <- tolower
	scast.8     %r16183 <- (32) %r16182
	load.64*    %r16184 <- 0[b]
	add.64*     %r16185 <- %r16184, $1
	store.64*   %r16185 -> 0[b]
	store.8     %r16183 -> 0[%r16184]
	add.64      %r16187 <- %r16165(i), $1
	phisrc.64   %phi6766(i) <- %r16187
	br          .L3758

.L3757:
	push.64*    %r16164
	call        luaL_pushresult
	ret.32      $1


str_upper:
.L3763:
	<entry-point>
	symaddr.64* %r16191 <- l
	push.64*    %arg1
	push.32     $1
	push.64*    %r16191
	call.64*    %r16192(s) <- luaL_checklstring
	symaddr.64* %r16194 <- b
	push.64*    %arg1
	push.64*    %r16194
	call        luaL_buffinit
	phisrc.64   %phi6773(i) <- $0
	br          .L3767

.L3767:
	phi.64      %r16195(i) <- %phi6773(i), %phi6774(i)
	load.64     %r16196 <- 0[l]
	setb.32     %r16197 <- %r16195(i), %r16196
	cbr         %r16197, .L3764, .L3766

.L3764:
	load.64*    %r16198 <- 0[b]
	add.64*     %r16201 <- %r16194, $0x2018
	setb.32     %r16202 <- %r16198, %r16201
	cbr         %r16202, .L3770, .L3769

.L3769:
	push.64*    %r16194
	call.64*    %r16204 <- luaL_prepbuffer
	br          .L3770

.L3770:
	add.64*     %r16208 <- %r16192(s), %r16195(i)
	load.8      %r16209 <- 0[%r16208]
	cast.32     %r16211 <- (8) %r16209
	push.32     %r16211
	call.32     %r16212 <- toupper
	scast.8     %r16213 <- (32) %r16212
	load.64*    %r16214 <- 0[b]
	add.64*     %r16215 <- %r16214, $1
	store.64*   %r16215 -> 0[b]
	store.8     %r16213 -> 0[%r16214]
	add.64      %r16217 <- %r16195(i), $1
	phisrc.64   %phi6774(i) <- %r16217
	br          .L3767

.L3766:
	push.64*    %r16194
	call        luaL_pushresult
	ret.32      $1


str_rep:
.L3772:
	<entry-point>
	symaddr.64* %r16221 <- l
	push.64*    %arg1
	push.32     $1
	push.64*    %r16221
	call.64*    %r16222(s) <- luaL_checklstring
	push.64*    %arg1
	push.32     $2
	call.64     %r16224 <- luaL_checkinteger
	scast.32    %r16225(n) <- (64) %r16224
	symaddr.64* %r16227 <- b
	push.64*    %arg1
	push.64*    %r16227
	call        luaL_buffinit
	phisrc.32   %phi6777(n) <- %r16225(n)
	br          .L3776

.L3776:
	phi.32      %r16228 <- %phi6777(n), %phi6778(n)
	add.32      %r16229 <- %r16228, $-1
	setgt.32    %r16230 <- %r16228, $0
	phisrc.32   %phi6778(n) <- %r16229
	cbr         %r16230, .L3773, .L3775

.L3773:
	load.64     %r16233 <- 0[l]
	push.64*    %r16227
	push.64*    %r16222(s)
	push.64     %r16233
	call        luaL_addlstring
	br          .L3776

.L3775:
	push.64*    %r16227
	call        luaL_pushresult
	ret.32      $1


str_byte:
.L3778:
	<entry-point>
	symaddr.64* %r16237 <- l
	push.64*    %arg1
	push.32     $1
	push.64*    %r16237
	call.64*    %r16238(s) <- luaL_checklstring
	push.64*    %arg1
	push.32     $2
	push.64     $1
	call.64     %r16240 <- luaL_optinteger
	load.64     %r16241 <- 0[l]
	push.64     %r16240
	push.64     %r16241
	call.64     %r16242 <- posrelat
	push.64*    %arg1
	push.32     $3
	push.64     %r16242
	call.64     %r16245 <- luaL_optinteger
	load.64     %r16246 <- 0[l]
	push.64     %r16245
	push.64     %r16246
	call.64     %r16247(pose) <- posrelat
	setle.32    %r16249 <- %r16242, $0
	select.64   %r16256(posi) <- %r16249, $1, %r16242
	load.64     %r16252(l) <- 0[l]
	seta.32     %r16253 <- %r16247(pose), %r16252(l)
	select.64   %r16257(pose) <- %r16253, %r16252(l), %r16247(pose)
	setgt.32    %r16258 <- %r16256(posi), %r16257(pose)
	cbr         %r16258, .L3783, .L3784

.L3783:
	phisrc.32   %phi6779(return) <- $0
	br          .L3785

.L3784:
	sub.64      %r16262 <- %r16257(pose), %r16256(posi)
	add.64      %r16263 <- %r16262, $1
	scast.32    %r16264 <- (64) %r16263
	scast.64    %r16267 <- (32) %r16264
	add.64      %r16268 <- %r16256(posi), %r16267
	setle.32    %r16270 <- %r16268, %r16257(pose)
	cbr         %r16270, .L3786, .L3787

.L3786:
	symaddr.64* %r16272 <- <anon symbol:0x1bc56d0>
	push.64*    %arg1
	push.64*    %r16272
	call.32     %r16273 <- luaL_error
	br          .L3787

.L3787:
	symaddr.64* %r16276 <- <anon symbol:0x1bc5a70>
	push.64*    %arg1
	push.32     %r16264
	push.64*    %r16276
	call        luaL_checkstack
	phisrc.32   %phi6800(i) <- $0
	br          .L3791

.L3791:
	phi.32      %r16277(i) <- %phi6800(i), %phi6801(i)
	setlt.32    %r16279 <- %r16277(i), %r16264
	cbr         %r16279, .L3788, .L3790

.L3788:
	scast.64    %r16284 <- (32) %r16277(i)
	add.64      %r16285 <- %r16256(posi), %r16284
	add.64      %r16286 <- %r16285, $-1
	add.64*     %r16287 <- %r16238(s), %r16286
	load.8      %r16288 <- 0[%r16287]
	cast.64     %r16290 <- (8) %r16288
	push.64*    %arg1
	push.64     %r16290
	call        lua_pushinteger
	add.32      %r16292 <- %r16277(i), $1
	phisrc.32   %phi6801(i) <- %r16292
	br          .L3791

.L3790:
	phisrc.32   %phi6780(return) <- %r16264
	br          .L3785

.L3785:
	phi.32      %r16259 <- %phi6779(return), %phi6780(return)
	ret.32      %r16259


str_char:
.L3792:
	<entry-point>
	push.64*    %arg1
	call.32     %r16295(n) <- lua_gettop
	symaddr.64* %r16297 <- b
	push.64*    %arg1
	push.64*    %r16297
	call        luaL_buffinit
	phisrc.32   %phi6815(i) <- $1
	br          .L3796

.L3796:
	phi.32      %r16298(i) <- %phi6815(i), %phi6816(i)
	setle.32    %r16300 <- %r16298(i), %r16295(n)
	cbr         %r16300, .L3793, .L3795

.L3793:
	push.64*    %arg1
	push.32     %r16298(i)
	call.64     %r16303 <- luaL_checkinteger
	scast.32    %r16304 <- (64) %r16303
	scast.8     %r16306 <- (32) %r16304
	cast.32     %r16307 <- (8) %r16306
	seteq.32    %r16309 <- %r16307, %r16304
	cbr         %r16309, .L3799, .L3798

.L3798:
	symaddr.64* %r16312 <- <anon symbol:0x1bc60c8>
	push.64*    %arg1
	push.32     %r16298(i)
	push.64*    %r16312
	call.32     %r16313 <- luaL_argerror
	br          .L3799

.L3799:
	load.64*    %r16315 <- 0[b]
	add.64*     %r16318 <- %r16297, $0x2018
	setb.32     %r16319 <- %r16315, %r16318
	phisrc.64*  %phi6810(b) <- %r16315
	phisrc.64*  %phi6818 <- %r16315
	phisrc.64*  %phi6819 <- %r16315
	cbr         %r16319, .L3802, .L3801

.L3801:
	push.64*    %r16297
	call.64*    %r16321 <- luaL_prepbuffer
	br          .L3802

.L3802:
	load.64*    %r16326 <- 0[b]
	add.64*     %r16327 <- %r16326, $1
	store.64*   %r16327 -> 0[b]
	store.8     %r16306 -> 0[%r16326]
	add.32      %r16329 <- %r16298(i), $1
	phisrc.32   %phi6816(i) <- %r16329
	br          .L3796

.L3795:
	push.64*    %r16297
	call        luaL_pushresult
	ret.32      $1


check_capture:
.L3804:
	<entry-point>
	add.32      %r16334 <- %arg2, $-49
	setlt.32    %r16337 <- %r16334, $0
	cbr         %r16337, .L3805, .L3808

.L3808:
	load.32     %r16340 <- 24[%arg1]
	setge.32    %r16341 <- %r16334, %r16340
	cbr         %r16341, .L3805, .L3807

.L3807:
	add.64*     %r16343 <- %arg1, $32
	scast.64    %r16345 <- (32) %r16334
	muls.64     %r16346 <- %r16345, $16
	add.64*     %r16347 <- %r16343, %r16346
	load.64     %r16348 <- 8[%r16347]
	seteq.32    %r16349 <- %r16348, $-1
	cbr         %r16349, .L3805, .L3806

.L3805:
	load.64*    %r16351 <- 16[%arg1]
	symaddr.64* %r16352 <- <anon symbol:0x1bc7b10>
	push.64*    %r16351
	push.64*    %r16352
	call.32     %r16353 <- luaL_error
	phisrc.32   %phi6820(return) <- %r16353
	br          .L3809

.L3806:
	phisrc.32   %phi6821(return) <- %r16334
	br          .L3809

.L3809:
	phi.32      %r16354 <- %phi6820(return), %phi6821(return)
	ret.32      %r16354


capture_to_close:
.L3810:
	<entry-point>
	load.32     %r16357 <- 24[%arg1]
	add.32      %r16359(level) <- %r16357, $-1
	phisrc.32   %phi6838(level) <- %r16359(level)
	br          .L3814

.L3814:
	phi.32      %r16360(level) <- %phi6838(level), %phi6839(level)
	setge.32    %r16361 <- %r16360(level), $0
	cbr         %r16361, .L3811, .L3813

.L3811:
	add.64*     %r16363 <- %arg1, $32
	scast.64    %r16365 <- (32) %r16360(level)
	muls.64     %r16366 <- %r16365, $16
	add.64*     %r16367 <- %r16363, %r16366
	load.64     %r16368 <- 8[%r16367]
	seteq.32    %r16369 <- %r16368, $-1
	cbr         %r16369, .L3815, .L3812

.L3815:
	phisrc.32   %phi6830(return) <- %r16360(level)
	br          .L3817

.L3812:
	add.32      %r16373 <- %r16360(level), $-1
	phisrc.32   %phi6839(level) <- %r16373
	br          .L3814

.L3813:
	load.64*    %r16375 <- 16[%arg1]
	symaddr.64* %r16376 <- <anon symbol:0x1bc86d8>
	push.64*    %r16375
	push.64*    %r16376
	call.32     %r16377 <- luaL_error
	phisrc.32   %phi6831(return) <- %r16377
	br          .L3817

.L3817:
	phi.32      %r16371 <- %phi6830(return), %phi6831(return)
	ret.32      %r16371


classend:
.L3818:
	<entry-point>
	add.64*     %r16379(p) <- %arg2, $1
	load.8      %r16380 <- 0[%arg2]
	switch.8    %r16380, 37 -> .L3820, 91 -> .L3821, default -> .L3822

.L3820:
	load.8      %r16382 <- 1[%arg2]
	cbr         %r16382, .L3824, .L3823

.L3823:
	load.64*    %r16386 <- 16[%arg1]
	symaddr.64* %r16387 <- <anon symbol:0x1bc8e18>
	push.64*    %r16386
	push.64*    %r16387
	call.32     %r16388 <- luaL_error
	br          .L3824

.L3824:
	add.64*     %r16390 <- %r16379(p), $1
	phisrc.64*  %phi6840(return) <- %r16390
	br          .L3825

.L3821:
	load.8      %r16393 <- 1[%arg2]
	scast.32    %r16394 <- (8) %r16393
	seteq.32    %r16395 <- %r16394, $94
	phisrc.64*  %phi6853(p) <- %r16379(p)
	cbr         %r16395, .L3826, .L3828

.L3826:
	add.64*     %r16397 <- %r16379(p), $1
	phisrc.64*  %phi6854(p) <- %r16397
	br          .L3828

.L3828:
	phi.64*     %r16398(p) <- %phi6853(p), %phi6854(p), %phi6855(p), %phi6856(p)
	load.8      %r16399 <- 0[%r16398(p)]
	phisrc.8    %phi6861 <- %r16399
	phisrc.8    %phi6862 <- %r16399
	phisrc.8    %phi6863 <- %r16399
	cbr         %r16399, .L3832, .L3831

.L3831:
	load.64*    %r16403 <- 16[%arg1]
	symaddr.64* %r16404 <- <anon symbol:0x1bc9640>
	push.64*    %r16403
	push.64*    %r16404
	call.32     %r16405 <- luaL_error
	br          .L3832

.L3832:
	add.64*     %r16407(p) <- %r16398(p), $1
	load.8      %r16408 <- 0[%r16398(p)]
	scast.32    %r16409 <- (8) %r16408
	seteq.32    %r16410 <- %r16409, $37
	phisrc.64*  %phi6847(p) <- %r16407(p)
	phisrc.64*  %phi6855(p) <- %r16407(p)
	phisrc.8    %phi6864 <- %r16408
	phisrc.8    %phi6865 <- %r16408
	cbr         %r16410, .L3835, .L3829

.L3835:
	load.8      %r16412 <- 1[%r16398(p)]
	phisrc.64*  %phi6848(p) <- %r16407(p)
	cbr         %r16412, .L3833, .L3829

.L3833:
	add.64*     %r16416 <- %r16407(p), $1
	phisrc.64*  %phi6849(p) <- %r16416
	phisrc.64*  %phi6856(p) <- %r16416
	br          .L3829

.L3829:
	phi.64*     %r16417(p) <- %phi6847(p), %phi6848(p), %phi6849(p)
	load.8      %r16418 <- 0[%r16417(p)]
	scast.32    %r16419 <- (8) %r16418
	setne.32    %r16420 <- %r16419, $93
	cbr         %r16420, .L3828, .L3830

.L3830:
	add.64*     %r16422 <- %r16417(p), $1
	phisrc.64*  %phi6841(return) <- %r16422
	br          .L3825

.L3822:
	phisrc.64*  %phi6842(return) <- %r16379(p)
	br          .L3825

.L3825:
	phi.64*     %r16391 <- %phi6840(return), %phi6841(return), %phi6842(return)
	ret.64*     %r16391


match_class:
.L3836:
	<entry-point>
	push.32     %arg2
	call.32     %r16425 <- tolower
	switch.32   %r16425, 97 -> .L3838, 99 -> .L3839, 100 -> .L3840, 108 -> .L3841, 112 -> .L3842, 115 -> .L3843, 117 -> .L3844, 119 -> .L3845, 120 -> .L3846, 122 -> .L3847, default -> .L3848

.L3838:
	call.64*    %r16426 <- __ctype_b_loc
	load.64*    %r16427 <- 0[%r16426]
	scast.64    %r16430 <- (32) %arg1
	muls.64     %r16431 <- %r16430, $2
	add.64*     %r16432 <- %r16427, %r16431
	load.16     %r16433 <- 0[%r16432]
	cast.32     %r16434 <- (16) %r16433
	and.32      %r16435(res) <- %r16434, $0x400
	phisrc.32   %phi6881(res) <- %r16435(res)
	br          .L3837

.L3839:
	call.64*    %r16436 <- __ctype_b_loc
	load.64*    %r16437 <- 0[%r16436]
	scast.64    %r16440 <- (32) %arg1
	muls.64     %r16441 <- %r16440, $2
	add.64*     %r16442 <- %r16437, %r16441
	load.16     %r16443 <- 0[%r16442]
	cast.32     %r16444 <- (16) %r16443
	and.32      %r16445 <- %r16444, $2
	phisrc.32   %phi6882(res) <- %r16445
	br          .L3837

.L3840:
	call.64*    %r16446 <- __ctype_b_loc
	load.64*    %r16447 <- 0[%r16446]
	scast.64    %r16450 <- (32) %arg1
	muls.64     %r16451 <- %r16450, $2
	add.64*     %r16452 <- %r16447, %r16451
	load.16     %r16453 <- 0[%r16452]
	cast.32     %r16454 <- (16) %r16453
	and.32      %r16455 <- %r16454, $0x800
	phisrc.32   %phi6883(res) <- %r16455
	br          .L3837

.L3841:
	call.64*    %r16456 <- __ctype_b_loc
	load.64*    %r16457 <- 0[%r16456]
	scast.64    %r16460 <- (32) %arg1
	muls.64     %r16461 <- %r16460, $2
	add.64*     %r16462 <- %r16457, %r16461
	load.16     %r16463 <- 0[%r16462]
	cast.32     %r16464 <- (16) %r16463
	and.32      %r16465 <- %r16464, $512
	phisrc.32   %phi6884(res) <- %r16465
	br          .L3837

.L3842:
	call.64*    %r16466 <- __ctype_b_loc
	load.64*    %r16467 <- 0[%r16466]
	scast.64    %r16470 <- (32) %arg1
	muls.64     %r16471 <- %r16470, $2
	add.64*     %r16472 <- %r16467, %r16471
	load.16     %r16473 <- 0[%r16472]
	cast.32     %r16474 <- (16) %r16473
	and.32      %r16475 <- %r16474, $4
	phisrc.32   %phi6885(res) <- %r16475
	br          .L3837

.L3843:
	call.64*    %r16476 <- __ctype_b_loc
	load.64*    %r16477 <- 0[%r16476]
	scast.64    %r16480 <- (32) %arg1
	muls.64     %r16481 <- %r16480, $2
	add.64*     %r16482 <- %r16477, %r16481
	load.16     %r16483 <- 0[%r16482]
	cast.32     %r16484 <- (16) %r16483
	and.32      %r16485 <- %r16484, $0x2000
	phisrc.32   %phi6886(res) <- %r16485
	br          .L3837

.L3844:
	call.64*    %r16486 <- __ctype_b_loc
	load.64*    %r16487 <- 0[%r16486]
	scast.64    %r16490 <- (32) %arg1
	muls.64     %r16491 <- %r16490, $2
	add.64*     %r16492 <- %r16487, %r16491
	load.16     %r16493 <- 0[%r16492]
	cast.32     %r16494 <- (16) %r16493
	and.32      %r16495 <- %r16494, $256
	phisrc.32   %phi6887(res) <- %r16495
	br          .L3837

.L3845:
	call.64*    %r16496 <- __ctype_b_loc
	load.64*    %r16497 <- 0[%r16496]
	scast.64    %r16500 <- (32) %arg1
	muls.64     %r16501 <- %r16500, $2
	add.64*     %r16502 <- %r16497, %r16501
	load.16     %r16503 <- 0[%r16502]
	cast.32     %r16504 <- (16) %r16503
	and.32      %r16505 <- %r16504, $8
	phisrc.32   %phi6888(res) <- %r16505
	br          .L3837

.L3846:
	call.64*    %r16506 <- __ctype_b_loc
	load.64*    %r16507 <- 0[%r16506]
	scast.64    %r16510 <- (32) %arg1
	muls.64     %r16511 <- %r16510, $2
	add.64*     %r16512 <- %r16507, %r16511
	load.16     %r16513 <- 0[%r16512]
	cast.32     %r16514 <- (16) %r16513
	and.32      %r16515 <- %r16514, $0x1000
	phisrc.32   %phi6889(res) <- %r16515
	br          .L3837

.L3847:
	seteq.32    %r16517 <- %arg1, $0
	phisrc.32   %phi6890(res) <- %r16517
	br          .L3837

.L3848:
	seteq.32    %r16520 <- %arg2, %arg1
	phisrc.32   %phi6866(return) <- %r16520
	br          .L3849

.L3837:
	phi.32      %r16522 <- %phi6881(res), %phi6882(res), %phi6883(res), %phi6884(res), %phi6885(res), %phi6886(res), %phi6887(res), %phi6888(res), %phi6889(res), %phi6890(res)
	seteq.32    %r16524 <- %r16522, $0
	call.64*    %r16525 <- __ctype_b_loc
	load.64*    %r16526 <- 0[%r16525]
	scast.64    %r16529 <- (32) %arg2
	muls.64     %r16530 <- %r16529, $2
	add.64*     %r16531 <- %r16526, %r16530
	load.16     %r16532 <- 0[%r16531]
	cast.32     %r16533 <- (16) %r16532
	and.32      %r16534 <- %r16533, $512
	select.32   %r16535 <- %r16534, %r16522, %r16524
	phisrc.32   %phi6867(return) <- %r16535
	br          .L3849

.L3849:
	phi.32      %r16521 <- %phi6866(return), %phi6867(return)
	ret.32      %r16521


matchbracketclass:
.L3850:
	<entry-point>
	load.8      %r16537 <- 1[%arg2]
	scast.32    %r16538 <- (8) %r16537
	seteq.32    %r16539 <- %r16538, $94
	phisrc.64*  %phi6909(p) <- %arg2
	phisrc.32   %phi6917(sig) <- $1
	phisrc.32   %phi6919(sig) <- $1
	phisrc.32   %phi6921(sig) <- $1
	phisrc.32   %phi6923(sig) <- $1
	cbr         %r16539, .L3851, .L3856

.L3851:
	add.64*     %r16541 <- %arg2, $1
	phisrc.64*  %phi6910(p) <- %r16541
	phisrc.32   %phi6918(sig) <- $0
	phisrc.32   %phi6920(sig) <- $0
	phisrc.32   %phi6922(sig) <- $0
	phisrc.32   %phi6924(sig) <- $0
	br          .L3856

.L3856:
	phi.64*     %r16542 <- %phi6909(p), %phi6910(p), %phi6911(p), %phi6912(p), %phi6913(p)
	add.64*     %r16543(p) <- %r16542, $1
	setb.32     %r16545 <- %r16543(p), %arg3
	phisrc.64*  %phi6913(p) <- %r16543(p)
	cbr         %r16545, .L3853, .L3855

.L3853:
	load.8      %r16547 <- 1[%r16542]
	scast.32    %r16548 <- (8) %r16547
	seteq.32    %r16549 <- %r16548, $37
	cbr         %r16549, .L3857, .L3858

.L3857:
	add.64*     %r16551 <- %r16543(p), $1
	load.8      %r16554 <- 2[%r16542]
	cast.32     %r16556 <- (8) %r16554
	push.32     %arg1
	push.32     %r16556
	call.32     %r16557 <- match_class
	phisrc.64*  %phi6911(p) <- %r16551
	cbr         %r16557, .L3859, .L3856

.L3859:
	phi.32      %r16558 <- %phi6923(sig), %phi6924(sig)
	phisrc.32   %phi6891(return) <- %r16558
	br          .L3861

.L3858:
	load.8      %r16561 <- 2[%r16542]
	scast.32    %r16562 <- (8) %r16561
	seteq.1     %r16564 <- %r16562, $45
	add.64*     %r16566 <- %r16543(p), $2
	setb.1      %r16569 <- %r16566, %arg3
	and-bool.1  %r16570 <- %r16564, %r16569
	cbr         %r16570, .L3863, .L3864

.L3863:
	cast.64     %r16573 <- (64) %r16543(p)
	add.64      %r16574 <- %r16573, $2
	ptrcast.64* %r16575 <- (64) %r16574
	load.8      %r16578 <- -2[%r16575]
	cast.32     %r16580 <- (8) %r16578
	setle.32    %r16582 <- %r16580, %arg1
	phisrc.64*  %phi6912(p) <- %r16575
	cbr         %r16582, .L3867, .L3856

.L3867:
	load.8      %r16585 <- 0[%r16575]
	cast.32     %r16587 <- (8) %r16585
	setle.32    %r16588 <- %arg1, %r16587
	cbr         %r16588, .L3865, .L3856

.L3865:
	phi.32      %r16589 <- %phi6921(sig), %phi6922(sig)
	phisrc.32   %phi6892(return) <- %r16589
	br          .L3861

.L3864:
	cast.32     %r16593 <- (8) %r16547
	seteq.32    %r16595 <- %r16593, %arg1
	cbr         %r16595, .L3869, .L3856

.L3869:
	phi.32      %r16596 <- %phi6919(sig), %phi6920(sig)
	phisrc.32   %phi6893(return) <- %r16596
	br          .L3861

.L3855:
	phi.32      %r16597 <- %phi6917(sig), %phi6918(sig)
	seteq.32    %r16598 <- %r16597, $0
	phisrc.32   %phi6894(return) <- %r16598
	br          .L3861

.L3861:
	phi.32      %r16559 <- %phi6891(return), %phi6892(return), %phi6893(return), %phi6894(return)
	ret.32      %r16559


singlematch:
.L3871:
	<entry-point>
	load.8      %r16600 <- 0[%arg2]
	switch.8    %r16600, 37 -> .L3874, 46 -> .L3873, 91 -> .L3875, default -> .L3876

.L3873:
	phisrc.32   %phi6926(return) <- $1
	br          .L3877

.L3874:
	load.8      %r16604 <- 1[%arg2]
	cast.32     %r16606 <- (8) %r16604
	push.32     %arg1
	push.32     %r16606
	call.32     %r16607 <- match_class
	phisrc.32   %phi6927(return) <- %r16607
	br          .L3877

.L3875:
	add.64*     %r16611 <- %arg3, $-1
	push.32     %arg1
	push.64*    %arg2
	push.64*    %r16611
	call.32     %r16612 <- matchbracketclass
	phisrc.32   %phi6928(return) <- %r16612
	br          .L3877

.L3876:
	cast.32     %r16616 <- (8) %r16600
	seteq.32    %r16618 <- %r16616, %arg1
	phisrc.32   %phi6929(return) <- %r16618
	br          .L3877

.L3877:
	phi.32      %r16601 <- %phi6926(return), %phi6927(return), %phi6928(return), %phi6929(return)
	ret.32      %r16601


matchbalance:
.L3878:
	<entry-point>
	load.8      %r16620 <- 0[%arg3]
	phisrc.8    %phi6965 <- %r16620
	phisrc.8    %phi6967 <- %r16620
	cbr         %r16620, .L3881, .L3879

.L3881:
	load.8      %r16624 <- 1[%arg3]
	phisrc.8    %phi6964 <- %r16624
	phisrc.8    %phi6966 <- %r16624
	cbr         %r16624, .L3880, .L3879

.L3879:
	load.64*    %r16628 <- 16[%arg1]
	symaddr.64* %r16629 <- <anon symbol:0x1bd5180>
	push.64*    %r16628
	push.64*    %r16629
	call.32     %r16630 <- luaL_error
	br          .L3880

.L3880:
	load.8      %r16632 <- 0[%arg2]
	scast.32    %r16633 <- (8) %r16632
	load.8      %r16635 <- 0[%arg3]
	scast.32    %r16636 <- (8) %r16635
	setne.32    %r16637 <- %r16633, %r16636
	phisrc.64*  %phi6947(s) <- %arg2
	cbr         %r16637, .L3882, .L3883

.L3882:
	phisrc.64*  %phi6938(return) <- $0
	br          .L3884

.L3883:
	scast.32    %r16641(b) <- (8) %r16635
	load.8      %r16643 <- 1[%arg3]
	scast.32    %r16644(e) <- (8) %r16643
	phisrc.32   %phi6956(cont) <- $1
	phisrc.32   %phi6959(cont) <- $1
	br          .L3889

.L3889:
	phi.64*     %r16645 <- %phi6947(s), %phi6948(s)
	add.64*     %r16646(s) <- %r16645, $1
	load.64*    %r16648 <- 8[%arg1]
	setb.32     %r16649 <- %r16646(s), %r16648
	phisrc.64*  %phi6948(s) <- %r16646(s)
	cbr         %r16649, .L3886, .L3885

.L3886:
	load.8      %r16651 <- 1[%r16645]
	scast.32    %r16652 <- (8) %r16651
	seteq.32    %r16654 <- %r16652, %r16644(e)
	cbr         %r16654, .L3890, .L3891

.L3890:
	phi.32      %r16655 <- %phi6959(cont), %phi6960(cont), %phi6961(cont)
	add.32      %r16656 <- %r16655, $-1
	phisrc.32   %phi6957(cont) <- %r16656
	phisrc.32   %phi6960(cont) <- %r16656
	cbr         %r16656, .L3889, .L3892

.L3892:
	add.64*     %r16659 <- %r16646(s), $1
	phisrc.64*  %phi6939(return) <- %r16659
	br          .L3884

.L3891:
	scast.32    %r16662 <- (8) %r16651
	seteq.32    %r16664 <- %r16662, %r16641(b)
	cbr         %r16664, .L3895, .L3889

.L3895:
	phi.32      %r16665 <- %phi6956(cont), %phi6957(cont), %phi6958(cont)
	add.32      %r16666 <- %r16665, $1
	phisrc.32   %phi6958(cont) <- %r16666
	phisrc.32   %phi6961(cont) <- %r16666
	br          .L3889

.L3885:
	phisrc.64*  %phi6940(return) <- $0
	br          .L3884

.L3884:
	phi.64*     %r16638 <- %phi6938(return), %phi6939(return), %phi6940(return)
	ret.64*     %r16638


max_expand:
.L3897:
	<entry-point>
	phisrc.64   %phi6987(i) <- $0
	br          .L3901

.L3901:
	phi.64      %r16668(i) <- %phi6987(i), %phi6988(i)
	add.64*     %r16669 <- %arg2, %r16668(i)
	load.64*    %r16671 <- 8[%arg1]
	setb.32     %r16672 <- %r16669, %r16671
	phisrc.64   %phi6982(i) <- %r16668(i)
	cbr         %r16672, .L3902, .L3906

.L3902:
	load.8      %r16676 <- 0[%r16669]
	cast.32     %r16678 <- (8) %r16676
	push.32     %r16678
	push.64*    %arg3
	push.64*    %arg4
	call.32     %r16681 <- singlematch
	phisrc.64   %phi6983(i) <- %r16668(i)
	cbr         %r16681, .L3898, .L3906

.L3898:
	add.64      %r16683 <- %r16668(i), $1
	phisrc.64   %phi6988(i) <- %r16683
	br          .L3901

.L3906:
	phi.64      %r16684(i) <- %phi6982(i), %phi6983(i), %phi6984(i)
	setge.32    %r16685 <- %r16684(i), $0
	cbr         %r16685, .L3903, .L3905

.L3903:
	add.64*     %r16689 <- %arg2, %r16684(i)
	add.64*     %r16691 <- %arg4, $1
	push.64*    %arg1
	push.64*    %r16689
	push.64*    %r16691
	call.64*    %r16692 <- match
	cbr         %r16692, .L3907, .L3908

.L3907:
	phisrc.64*  %phi6968(return) <- %r16692
	br          .L3909

.L3908:
	add.64      %r16697 <- %r16684(i), $-1
	phisrc.64   %phi6984(i) <- %r16697
	br          .L3906

.L3905:
	phisrc.64*  %phi6969(return) <- $0
	br          .L3909

.L3909:
	phi.64*     %r16695 <- %phi6968(return), %phi6969(return)
	ret.64*     %r16695


min_expand:
.L3910:
	<entry-point>
	phisrc.64*  %phi6997(s) <- %arg2
	br          .L3911

.L3911:
	phi.64*     %r16699(s) <- %phi6997(s), %phi6998(s)
	add.64*     %r16701 <- %arg4, $1
	push.64*    %arg1
	push.64*    %r16699(s)
	push.64*    %r16701
	call.64*    %r16702 <- match
	cbr         %r16702, .L3915, .L3916

.L3915:
	phisrc.64*  %phi6990(return) <- %r16702
	br          .L3917

.L3916:
	load.64*    %r16709 <- 8[%arg1]
	setb.32     %r16710 <- %r16699(s), %r16709
	cbr         %r16710, .L3921, .L3920

.L3921:
	load.8      %r16712 <- 0[%r16699(s)]
	cast.32     %r16714 <- (8) %r16712
	push.32     %r16714
	push.64*    %arg3
	push.64*    %arg4
	call.32     %r16717 <- singlematch
	cbr         %r16717, .L3919, .L3920

.L3919:
	add.64*     %r16719 <- %r16699(s), $1
	phisrc.64*  %phi6998(s) <- %r16719
	br          .L3911

.L3920:
	phisrc.64*  %phi6991(return) <- $0
	br          .L3917

.L3917:
	phi.64*     %r16706 <- %phi6990(return), %phi6991(return)
	ret.64*     %r16706


start_capture:
.L3923:
	<entry-point>
	load.32     %r16721 <- 24[%arg1]
	setge.32    %r16723 <- %r16721, $32
	cbr         %r16723, .L3924, .L3925

.L3924:
	load.64*    %r16725 <- 16[%arg1]
	symaddr.64* %r16726 <- <anon symbol:0x1bd6570>
	push.64*    %r16725
	push.64*    %r16726
	call.32     %r16727 <- luaL_error
	br          .L3925

.L3925:
	add.64*     %r16730 <- %arg1, $32
	scast.64    %r16732 <- (32) %r16721
	muls.64     %r16733 <- %r16732, $16
	add.64*     %r16734 <- %r16730, %r16733
	store.64*   %arg2 -> 0[%r16734]
	scast.64    %r16736 <- (32) %arg4
	store.64    %r16736 -> 8[%r16734]
	add.32      %r16744 <- %r16721, $1
	store.32    %r16744 -> 24[%arg1]
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r16749(res) <- match
	cbr         %r16749(res), .L3928, .L3926

.L3926:
	load.32     %r16752 <- 24[%arg1]
	add.32      %r16753 <- %r16752, $-1
	store.32    %r16753 -> 24[%arg1]
	br          .L3928

.L3928:
	ret.64*     %r16749(res)


end_capture:
.L3929:
	<entry-point>
	push.64*    %arg1
	call.32     %r16757 <- capture_to_close
	add.64*     %r16760 <- %arg1, $32
	scast.64    %r16762 <- (32) %r16757
	muls.64     %r16763 <- %r16762, $16
	add.64*     %r16764 <- %r16760, %r16763
	load.64*    %r16765 <- 0[%r16764]
	sub.64      %r16766 <- %arg2, %r16765
	store.64    %r16766 -> 8[%r16764]
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	call.64*    %r16776(res) <- match
	cbr         %r16776(res), .L3932, .L3930

.L3930:
	store.64    $-1 -> 8[%r16764]
	br          .L3932

.L3932:
	ret.64*     %r16776(res)


match_capture:
.L3933:
	<entry-point>
	push.64*    %arg1
	push.32     %arg3
	call.32     %r16788 <- check_capture
	add.64*     %r16790 <- %arg1, $32
	scast.64    %r16792 <- (32) %r16788
	muls.64     %r16793 <- %r16792, $16
	add.64*     %r16794 <- %r16790, %r16793
	load.64     %r16795 <- 8[%r16794]
	load.64*    %r16798 <- 8[%arg1]
	sub.64      %r16800 <- %r16798, %arg2
	setae.32    %r16803 <- %r16800, %r16795
	cbr         %r16803, .L3936, .L3935

.L3936:
	load.64*    %r16810 <- 0[%r16794]
	cast.64*    %r16811 <- (64) %r16810
	cast.64*    %r16813 <- (64) %arg2
	push.64*    %r16811
	push.64*    %r16813
	push.64     %r16795
	call.32     %r16815 <- memcmp
	cbr         %r16815, .L3935, .L3934

.L3934:
	add.64*     %r16819 <- %arg2, %r16795
	phisrc.64*  %phi7017(return) <- %r16819
	br          .L3937

.L3935:
	phisrc.64*  %phi7018(return) <- $0
	br          .L3937

.L3937:
	phi.64*     %r16820 <- %phi7017(return), %phi7018(return)
	ret.64*     %r16820


match:
.L3939:
	<entry-point>
	phisrc.64*  %phi7079(s) <- %arg2
	phisrc.64*  %phi7084(s) <- %arg2
	phisrc.64*  %phi7089(s) <- %arg2
	phisrc.64*  %phi7094(s) <- %arg2
	phisrc.64*  %phi7118(s) <- %arg2
	phisrc.64*  %phi7147(p) <- %arg3
	br          .L3940

.L3940:
	phi.64*     %r16821(p) <- %phi7147(p), %phi7148(p), %phi7149(p), %phi7150(p), %phi7151(p), %phi7152(p)
	load.8      %r16822 <- 0[%r16821(p)]
	phi.64*     %r16828 <- %phi7118(s), %phi7119(s), %phi7120(s), %phi7121(s)
	switch.8    %r16822, 0 -> .L3945, 36 -> .L3946, 37 -> .L3944, 40 -> .L3942, 41 -> .L3943, default -> .L3970

.L3942:
	load.8      %r16824 <- 1[%r16821(p)]
	scast.32    %r16825 <- (8) %r16824
	seteq.32    %r16826 <- %r16825, $41
	cbr         %r16826, .L3948, .L3949

.L3948:
	add.64*     %r16830 <- %r16821(p), $2
	push.64*    %arg1
	push.64*    %r16828
	push.64*    %r16830
	push.32     $0xfffffffe
	call.64*    %r16831 <- start_capture
	phisrc.64*  %phi7025(return) <- %r16831
	br          .L3950

.L3949:
	add.64*     %r16836 <- %r16821(p), $1
	push.64*    %arg1
	push.64*    %r16828
	push.64*    %r16836
	push.32     $0xffffffff
	call.64*    %r16837 <- start_capture
	phisrc.64*  %phi7026(return) <- %r16837
	br          .L3950

.L3943:
	add.64*     %r16841 <- %r16821(p), $1
	push.64*    %arg1
	push.64*    %r16828
	push.64*    %r16841
	call.64*    %r16842 <- end_capture
	phisrc.64*  %phi7027(return) <- %r16842
	br          .L3950

.L3944:
	load.8      %r16844 <- 1[%r16821(p)]
	switch.8    %r16844, 98 -> .L3953, 102 -> .L3954, default -> .L3955

.L3953:
	add.64*     %r16848 <- %r16821(p), $2
	push.64*    %arg1
	push.64*    %r16828
	push.64*    %r16848
	call.64*    %r16849 <- matchbalance
	phisrc.64*  %phi7080(s) <- %r16849
	phisrc.64*  %phi7085(s) <- %r16849
	phisrc.64*  %phi7090(s) <- %r16849
	phisrc.64*  %phi7095(s) <- %r16849
	phisrc.64*  %phi7119(s) <- %r16849
	cbr         %r16849, .L3957, .L3956

.L3956:
	phisrc.64*  %phi7028(return) <- $0
	br          .L3950

.L3957:
	cast.64     %r16853 <- (64) %r16821(p)
	add.64      %r16854 <- %r16853, $4
	ptrcast.64* %r16855 <- (64) %r16854
	phisrc.64*  %phi7148(p) <- %r16855
	br          .L3940

.L3954:
	cast.64     %r16857 <- (64) %r16821(p)
	add.64      %r16858 <- %r16857, $2
	ptrcast.64* %r16859 <- (64) %r16858
	load.8      %r16861 <- 0[%r16859]
	scast.32    %r16862 <- (8) %r16861
	setne.32    %r16863 <- %r16862, $91
	cbr         %r16863, .L3958, .L3959

.L3958:
	load.64*    %r16865 <- 16[%arg1]
	symaddr.64* %r16866 <- <anon symbol:0x1bcbc50>
	push.64*    %r16865
	push.64*    %r16866
	call.32     %r16867 <- luaL_error
	br          .L3959

.L3959:
	push.64*    %arg1
	push.64*    %r16859
	call.64*    %r16870(ep) <- classend
	load.64*    %r16873 <- 0[%arg1]
	seteq.32    %r16874 <- %r16828, %r16873
	cbr         %r16874, .L3960, .L3961

.L3960:
	phisrc.32   %phi7029 <- $0
	br          .L3962

.L3961:
	load.8      %r16877 <- -1[%r16828]
	scast.32    %r16878 <- (8) %r16877
	phisrc.32   %phi7030 <- %r16878
	br          .L3962

.L3962:
	phi.32      %r16879 <- %phi7029, %phi7030
	scast.8     %r16880 <- (32) %r16879
	cast.32     %r16883 <- (8) %r16880
	add.64*     %r16886 <- %r16870(ep), $-1
	push.32     %r16883
	push.64*    %r16859
	push.64*    %r16886
	call.32     %r16887 <- matchbracketclass
	cbr         %r16887, .L3963, .L3965

.L3965:
	load.8      %r16889 <- 0[%r16828]
	cast.32     %r16891 <- (8) %r16889
	push.32     %r16891
	push.64*    %r16859
	push.64*    %r16886
	call.32     %r16895 <- matchbracketclass
	phisrc.64*  %phi7081(s) <- %r16828
	phisrc.64*  %phi7086(s) <- %r16828
	phisrc.64*  %phi7091(s) <- %r16828
	phisrc.64*  %phi7096(s) <- %r16828
	cbr         %r16895, .L3964, .L3963

.L3963:
	phisrc.64*  %phi7031(return) <- $0
	br          .L3950

.L3964:
	phisrc.64*  %phi7149(p) <- %r16870(ep)
	br          .L3940

.L3955:
	call.64*    %r16897 <- __ctype_b_loc
	load.64*    %r16898 <- 0[%r16897]
	load.8      %r16900 <- 1[%r16821(p)]
	cast.32     %r16902 <- (8) %r16900
	scast.64    %r16903 <- (32) %r16902
	muls.64     %r16904 <- %r16903, $2
	add.64*     %r16905 <- %r16898, %r16904
	load.16     %r16906 <- 0[%r16905]
	cast.32     %r16907 <- (16) %r16906
	and.32      %r16908 <- %r16907, $0x800
	cbr         %r16908, .L3966, .L3970

.L3966:
	phi.64*     %r16910 <- %phi7094(s), %phi7095(s), %phi7096(s), %phi7097(s), %phi7098(s)
	cast.32     %r16914 <- (8) %r16900
	push.64*    %arg1
	push.64*    %r16910
	push.32     %r16914
	call.64*    %r16915 <- match_capture
	phisrc.64*  %phi7082(s) <- %r16915
	phisrc.64*  %phi7087(s) <- %r16915
	phisrc.64*  %phi7092(s) <- %r16915
	phisrc.64*  %phi7097(s) <- %r16915
	phisrc.64*  %phi7120(s) <- %r16915
	cbr         %r16915, .L3969, .L3968

.L3968:
	phisrc.64*  %phi7032(return) <- $0
	br          .L3950

.L3969:
	cast.64     %r16919 <- (64) %r16821(p)
	add.64      %r16920 <- %r16919, $2
	ptrcast.64* %r16921 <- (64) %r16920
	phisrc.64*  %phi7150(p) <- %r16921
	br          .L3940

.L3945:
	phi.64*     %r16922 <- %phi7089(s), %phi7090(s), %phi7091(s), %phi7092(s), %phi7093(s)
	phisrc.64*  %phi7033(return) <- %r16922
	br          .L3950

.L3946:
	load.8      %r16924 <- 1[%r16821(p)]
	cbr         %r16924, .L3970, .L3971

.L3971:
	phi.64*     %r16927 <- %phi7084(s), %phi7085(s), %phi7086(s), %phi7087(s), %phi7088(s)
	load.64*    %r16930 <- 8[%arg1]
	seteq.32    %r16931 <- %r16927, %r16930
	select.64*  %r16932 <- %r16931, %r16927, $0
	phisrc.64*  %phi7034(return) <- %r16932
	br          .L3950

.L3970:
	push.64*    %arg1
	push.64*    %r16821(p)
	call.64*    %r16935(ep) <- classend
	phi.64*     %r16936(s) <- %phi7079(s), %phi7080(s), %phi7081(s), %phi7082(s), %phi7083(s)
	load.64*    %r16938 <- 8[%arg1]
	setb.32     %r16939 <- %r16936(s), %r16938
	cbr         %r16939, .L3974, .L3975

.L3974:
	load.8      %r16941 <- 0[%r16936(s)]
	cast.32     %r16943 <- (8) %r16941
	push.32     %r16943
	push.64*    %r16821(p)
	push.64*    %r16935(ep)
	call.32     %r16946 <- singlematch
	phisrc.32   %phi7035 <- %r16946
	br          .L3976

.L3975:
	phisrc.32   %phi7036 <- $0
	br          .L3976

.L3976:
	phi.32      %r16947(m) <- %phi7035, %phi7036
	load.8      %r16949 <- 0[%r16935(ep)]
	switch.8    %r16949, 42 -> .L3979, 43 -> .L3980, 45 -> .L3981, 63 -> .L3978, default -> .L3982

.L3978:
	cbr         %r16947(m), .L3985, .L3984

.L3985:
	add.64*     %r16953 <- %r16936(s), $1
	add.64*     %r16955 <- %r16935(ep), $1
	push.64*    %arg1
	push.64*    %r16953
	push.64*    %r16955
	call.64*    %r16956(res) <- match
	cbr         %r16956(res), .L3983, .L3984

.L3983:
	phisrc.64*  %phi7037(return) <- %r16956(res)
	br          .L3950

.L3984:
	add.64*     %r16960 <- %r16935(ep), $1
	phisrc.64*  %phi7151(p) <- %r16960
	br          .L3940

.L3979:
	push.64*    %arg1
	push.64*    %r16936(s)
	push.64*    %r16821(p)
	push.64*    %r16935(ep)
	call.64*    %r16965 <- max_expand
	phisrc.64*  %phi7038(return) <- %r16965
	br          .L3950

.L3980:
	cbr         %r16947(m), .L3986, .L3987

.L3986:
	add.64*     %r16969 <- %r16936(s), $1
	push.64*    %arg1
	push.64*    %r16969
	push.64*    %r16821(p)
	push.64*    %r16935(ep)
	call.64*    %r16972 <- max_expand
	phisrc.64*  %phi7039 <- %r16972
	br          .L3988

.L3987:
	phisrc.64*  %phi7040 <- $0
	br          .L3988

.L3988:
	phi.64*     %r16973 <- %phi7039, %phi7040
	phisrc.64*  %phi7041(return) <- %r16973
	br          .L3950

.L3981:
	push.64*    %arg1
	push.64*    %r16936(s)
	push.64*    %r16821(p)
	push.64*    %r16935(ep)
	call.64*    %r16978 <- min_expand
	phisrc.64*  %phi7042(return) <- %r16978
	br          .L3950

.L3982:
	cbr         %r16947(m), .L3990, .L3989

.L3989:
	phisrc.64*  %phi7043(return) <- $0
	br          .L3950

.L3990:
	add.64*     %r16981 <- %r16936(s), $1
	phisrc.64*  %phi7083(s) <- %r16981
	phisrc.64*  %phi7088(s) <- %r16981
	phisrc.64*  %phi7093(s) <- %r16981
	phisrc.64*  %phi7098(s) <- %r16981
	phisrc.64*  %phi7121(s) <- %r16981
	phisrc.64*  %phi7152(p) <- %r16935(ep)
	br          .L3940

.L3950:
	phi.64*     %r16832 <- %phi7025(return), %phi7026(return), %phi7027(return), %phi7028(return), %phi7031(return), %phi7032(return), %phi7033(return), %phi7034(return), %phi7037(return), %phi7038(return), %phi7041(return), %phi7042(return), %phi7043(return)
	ret.64*     %r16832


lmemfind:
.L3991:
	<entry-point>
	phisrc.64*  %phi7176(s1) <- %arg1
	cbr         %arg4, .L3993, .L3992

.L3992:
	phisrc.64*  %phi7171(return) <- %arg1
	br          .L3994

.L3993:
	seta.32     %r16989 <- %arg4, %arg2
	cbr         %r16989, .L3996, .L3997

.L3996:
	phisrc.64*  %phi7172(return) <- $0
	br          .L3994

.L3997:
	add.64      %r16991 <- %arg4, $-1
	sub.64      %r16994(l1) <- %arg2, %r16991
	phisrc.64   %phi7181(l1) <- %r16994(l1)
	br          .L4002

.L4002:
	phi.64      %r16995(l1) <- %phi7181(l1), %phi7182(l1)
	seta.32     %r16996 <- %r16995(l1), $0
	cbr         %r16996, .L4003, .L4001

.L4003:
	phi.64*     %r16997(s1) <- %phi7176(s1), %phi7177(s1)
	cast.64*    %r16998 <- (64) %r16997(s1)
	load.8      %r17000 <- 0[%arg3]
	scast.32    %r17001 <- (8) %r17000
	push.64*    %r16998
	push.32     %r17001
	push.64     %r16995(l1)
	call.64*    %r17003 <- memchr
	ptrcast.64* %r17004(init) <- (64) %r17003
	cbr         %r17004(init), .L3999, .L4001

.L3999:
	add.64*     %r17007 <- %r17004(init), $1
	cast.64*    %r17009 <- (64) %r17007
	add.64*     %r17011 <- %arg3, $1
	cast.64*    %r17012 <- (64) %r17011
	push.64*    %r17009
	push.64*    %r17012
	push.64     %r16991
	call.32     %r17014 <- memcmp
	cbr         %r17014, .L4005, .L4004

.L4004:
	add.64*     %r17017 <- %r17007, $-1
	phisrc.64*  %phi7173(return) <- %r17017
	br          .L3994

.L4005:
	sub.64      %r17020 <- %r17007, %r16997(s1)
	sub.64      %r17024 <- %r16995(l1), %r17020
	phisrc.64*  %phi7177(s1) <- %r17007
	phisrc.64   %phi7182(l1) <- %r17024
	br          .L4002

.L4001:
	phisrc.64*  %phi7174(return) <- $0
	br          .L3994

.L3994:
	phi.64*     %r16986 <- %phi7171(return), %phi7172(return), %phi7173(return), %phi7174(return)
	ret.64*     %r16986


push_onecapture:
.L4007:
	<entry-point>
	load.32     %r17029 <- 24[%arg1]
	setge.32    %r17030 <- %arg2, %r17029
	cbr         %r17030, .L4008, .L4009

.L4008:
	cbr         %arg2, .L4011, .L4010

.L4010:
	load.64*    %r17034 <- 16[%arg1]
	sub.64      %r17038 <- %arg4, %arg3
	push.64*    %r17034
	push.64*    %arg3
	push.64     %r17038
	call        lua_pushlstring
	br          .L4013

.L4011:
	load.64*    %r17041 <- 16[%arg1]
	symaddr.64* %r17042 <- <anon symbol:0x1bd9490>
	push.64*    %r17041
	push.64*    %r17042
	call.32     %r17043 <- luaL_error
	br          .L4013

.L4009:
	add.64*     %r17045 <- %arg1, $32
	scast.64    %r17047 <- (32) %arg2
	muls.64     %r17048 <- %r17047, $16
	add.64*     %r17049 <- %r17045, %r17048
	load.64     %r17050 <- 8[%r17049]
	seteq.32    %r17052 <- %r17050, $-1
	cbr         %r17052, .L4014, .L4015

.L4014:
	load.64*    %r17054 <- 16[%arg1]
	symaddr.64* %r17055 <- <anon symbol:0x1bd9e88>
	push.64*    %r17054
	push.64*    %r17055
	call.32     %r17056 <- luaL_error
	br          .L4015

.L4015:
	seteq.32    %r17058 <- %r17050, $-2
	cbr         %r17058, .L4016, .L4017

.L4016:
	load.64*    %r17060 <- 16[%arg1]
	load.64*    %r17067 <- 0[%r17049]
	load.64*    %r17069 <- 0[%arg1]
	sub.64      %r17070 <- %r17067, %r17069
	add.64      %r17071 <- %r17070, $1
	push.64*    %r17060
	push.64     %r17071
	call        lua_pushinteger
	br          .L4013

.L4017:
	load.64*    %r17073 <- 16[%arg1]
	load.64*    %r17080 <- 0[%r17049]
	push.64*    %r17073
	push.64*    %r17080
	push.64     %r17050
	call        lua_pushlstring
	br          .L4013

.L4013:
	ret


push_captures:
.L4019:
	<entry-point>
	load.32     %r17084 <- 24[%arg1]
	seteq.1     %r17086 <- %r17084, $0
	setne.1     %r17088 <- %arg2, $0
	and-bool.1  %r17089 <- %r17086, %r17088
	select.32   %r17093 <- %r17089, $1, %r17084
	load.64*    %r17095 <- 16[%arg1]
	symaddr.64* %r17097 <- <anon symbol:0x1bdb618>
	push.64*    %r17095
	push.32     %r17093
	push.64*    %r17097
	call        luaL_checkstack
	phisrc.32   %phi7222(i) <- $0
	br          .L4026

.L4026:
	phi.32      %r17098(i) <- %phi7222(i), %phi7223(i)
	setlt.32    %r17100 <- %r17098(i), %r17093
	cbr         %r17100, .L4023, .L4027

.L4023:
	push.64*    %arg1
	push.32     %r17098(i)
	push.64*    %arg2
	push.64*    %arg3
	call        push_onecapture
	add.32      %r17106 <- %r17098(i), $1
	phisrc.32   %phi7223(i) <- %r17106
	br          .L4026

.L4027:
	ret.32      %r17093


str_find_aux:
.L4028:
	<entry-point>
	symaddr.64* %r17110 <- l1
	push.64*    %arg1
	push.32     $1
	push.64*    %r17110
	call.64*    %r17111(s) <- luaL_checklstring
	symaddr.64* %r17113 <- l2
	push.64*    %arg1
	push.32     $2
	push.64*    %r17113
	call.64*    %r17114(p) <- luaL_checklstring
	push.64*    %arg1
	push.32     $3
	push.64     $1
	call.64     %r17116 <- luaL_optinteger
	load.64     %r17117 <- 0[l1]
	push.64     %r17116
	push.64     %r17117
	call.64     %r17118 <- posrelat
	add.64      %r17119 <- %r17118, $-1
	setlt.32    %r17121 <- %r17119, $0
	cbr         %r17121, .L4029, .L4030

.L4029:
	phisrc.64   %phi7252(init) <- $0
	phisrc.64   %phi7255(init) <- $0
	br          .L4031

.L4030:
	load.64     %r17124(l1) <- 0[l1]
	seta.32     %r17125 <- %r17119, %r17124(l1)
	phisrc.64   %phi7253(init) <- %r17119
	phisrc.64   %phi7256(init) <- %r17119
	cbr         %r17125, .L4032, .L4031

.L4032:
	phisrc.64   %phi7254(init) <- %r17124(l1)
	phisrc.64   %phi7257(init) <- %r17124(l1)
	br          .L4031

.L4031:
	cbr         %arg2, .L4036, .L4035

.L4036:
	push.64*    %arg1
	push.32     $4
	call.32     %r17130 <- lua_toboolean
	setne.1     %r17131 <- %r17130, $0
	symaddr.64* %r17133 <- <anon symbol:0x1bdbd58>
	push.64*    %r17114(p)
	push.64*    %r17133
	call.64*    %r17134 <- strpbrk
	seteq.1     %r17136 <- %r17134, $0
	or-bool.1   %r17137 <- %r17131, %r17136
	cbr         %r17137, .L4034, .L4035

.L4034:
	phi.64      %r17140 <- %phi7255(init), %phi7256(init), %phi7257(init)
	add.64*     %r17141 <- %r17111(s), %r17140
	load.64     %r17142 <- 0[l1]
	sub.64      %r17145 <- %r17142, %r17140
	load.64     %r17147 <- 0[l2]
	push.64*    %r17141
	push.64     %r17145
	push.64*    %r17114(p)
	push.64     %r17147
	call.64*    %r17148 <- lmemfind
	cbr         %r17148, .L4037, .L4040

.L4037:
	sub.64      %r17153 <- %r17148, %r17111(s)
	add.64      %r17154 <- %r17153, $1
	push.64*    %arg1
	push.64     %r17154
	call        lua_pushinteger
	load.64     %r17160 <- 0[l2]
	add.64      %r17161 <- %r17153, %r17160
	push.64*    %arg1
	push.64     %r17161
	call        lua_pushinteger
	phisrc.32   %phi7225(return) <- $2
	br          .L4039

.L4035:
	load.8      %r17165 <- 0[%r17114(p)]
	scast.32    %r17166 <- (8) %r17165
	seteq.32    %r17167 <- %r17166, $94
	phisrc.64*  %phi7246(p) <- %r17114(p)
	cbr         %r17167, .L4041, .L4043

.L4041:
	add.64*     %r17169(p) <- %r17114(p), $1
	phisrc.64*  %phi7245(p) <- %r17169(p)
	br          .L4043

.L4043:
	phi.64      %r17172 <- %phi7252(init), %phi7253(init), %phi7254(init)
	add.64*     %r17173(s1) <- %r17111(s), %r17172
	store.64*   %arg1 -> 16[ms]
	store.64*   %r17111(s) -> 0[ms]
	load.64     %r17177 <- 0[l1]
	add.64*     %r17178 <- %r17111(s), %r17177
	store.64*   %r17178 -> 8[ms]
	phisrc.64*  %phi7264(s1) <- %r17173(s1)
	br          .L4044

.L4044:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17179 <- ms
	phi.64*     %r17180(s1) <- %phi7264(s1), %phi7265(s1)
	phi.64*     %r17181 <- %phi7245(p), %phi7246(p)
	push.64*    %r17179
	push.64*    %r17180(s1)
	push.64*    %r17181
	call.64*    %r17182(res) <- match
	cbr         %r17182(res), .L4047, .L4045

.L4047:
	cbr         %arg2, .L4049, .L4050

.L4049:
	sub.64      %r17188 <- %r17180(s1), %r17111(s)
	add.64      %r17189 <- %r17188, $1
	push.64*    %arg1
	push.64     %r17189
	call        lua_pushinteger
	sub.64      %r17193 <- %r17182(res), %r17111(s)
	push.64*    %arg1
	push.64     %r17193
	call        lua_pushinteger
	push.64*    %r17179
	push.64*    $0
	push.64*    $0
	call.32     %r17195 <- push_captures
	add.32      %r17196 <- %r17195, $2
	phisrc.32   %phi7228(return) <- %r17196
	br          .L4039

.L4050:
	push.64*    %r17179
	push.64*    %r17180(s1)
	push.64*    %r17182(res)
	call.32     %r17200 <- push_captures
	phisrc.32   %phi7229(return) <- %r17200
	br          .L4039

.L4045:
	add.64*     %r17202 <- %r17180(s1), $1
	load.64*    %r17203 <- 8[ms]
	setb.1      %r17205 <- %r17180(s1), %r17203
	setne.1     %r17208 <- %r17166, $94
	and-bool.1  %r17209 <- %r17205, %r17208
	phisrc.64*  %phi7265(s1) <- %r17202
	cbr         %r17209, .L4044, .L4040

.L4040:
	push.64*    %arg1
	call        lua_pushnil
	phisrc.32   %phi7230(return) <- $1
	br          .L4039

.L4039:
	phi.32      %r17163 <- %phi7225(return), %phi7228(return), %phi7229(return), %phi7230(return)
	ret.32      %r17163


str_find:
.L4052:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17213 <- str_find_aux
	ret.32      %r17213


str_match:
.L4054:
	<entry-point>
	push.64*    %arg1
	push.32     $0
	call.32     %r17216 <- str_find_aux
	ret.32      %r17216


gmatch_aux:
.L4056:
	<entry-point>
	symaddr.64* %r17219 <- ls
	push.64*    %arg1
	push.32     $0xffffd8ed
	push.64*    %r17219
	call.64*    %r17220 <- lua_tolstring
	push.64*    %arg1
	push.32     $0xffffd8ec
	push.64*    $0
	call.64*    %r17222(p) <- lua_tolstring
	store.64*   %arg1 -> 16[ms]
	store.64*   %r17220 -> 0[ms]
	load.64     %r17226 <- 0[ls]
	add.64*     %r17227 <- %r17220, %r17226
	store.64*   %r17227 -> 8[ms]
	push.64*    %arg1
	push.32     $0xffffd8eb
	call.64     %r17230 <- lua_tointeger
	add.64*     %r17232(src) <- %r17220, %r17230
	phisrc.64*  %phi7279(src) <- %r17232(src)
	br          .L4060

.L4060:
	phi.64*     %r17233(src) <- %phi7279(src), %phi7280(src)
	load.64*    %r17234 <- 8[ms]
	setbe.32    %r17235 <- %r17233(src), %r17234
	cbr         %r17235, .L4057, .L4059

.L4057:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17236 <- ms
	push.64*    %r17236
	push.64*    %r17233(src)
	push.64*    %r17222(p)
	call.64*    %r17239(e) <- match
	cbr         %r17239(e), .L4061, .L4058

.L4061:
	sub.64      %r17243(newstart) <- %r17239(e), %r17220
	seteq.32    %r17246 <- %r17239(e), %r17233(src)
	phisrc.64   %phi7283(newstart) <- %r17243(newstart)
	cbr         %r17246, .L4063, .L4064

.L4063:
	add.64      %r17248 <- %r17243(newstart), $1
	phisrc.64   %phi7284(newstart) <- %r17248
	br          .L4064

.L4064:
	phi.64      %r17250 <- %phi7283(newstart), %phi7284(newstart)
	push.64*    %arg1
	push.64     %r17250
	call        lua_pushinteger
	push.64*    %arg1
	push.32     $0xffffd8eb
	call        lua_replace
	push.64*    %r17236
	push.64*    %r17233(src)
	push.64*    %r17239(e)
	call.32     %r17255 <- push_captures
	phisrc.32   %phi7270(return) <- %r17255
	br          .L4065

.L4058:
	add.64*     %r17258 <- %r17233(src), $1
	phisrc.64*  %phi7280(src) <- %r17258
	br          .L4060

.L4059:
	phisrc.32   %phi7271(return) <- $0
	br          .L4065

.L4065:
	phi.32      %r17256 <- %phi7270(return), %phi7271(return)
	ret.32      %r17256


gmatch:
.L4066:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	push.64*    $0
	call.64*    %r17260 <- luaL_checklstring
	push.64*    %arg1
	push.32     $2
	push.64*    $0
	call.64*    %r17262 <- luaL_checklstring
	push.64*    %arg1
	push.32     $2
	call        lua_settop
	push.64*    %arg1
	push.64     $0
	call        lua_pushinteger
	symaddr.64* %r17266 <- gmatch_aux
	push.64*    %arg1
	push.64*    %r17266
	push.32     $3
	call        lua_pushcclosure
	ret.32      $1


add_s:
.L4068:
	<entry-point>
	load.64*    %r17269 <- 16[%arg1]
	symaddr.64* %r17270 <- l
	push.64*    %r17269
	push.32     $3
	push.64*    %r17270
	call.64*    %r17271(news) <- lua_tolstring
	phisrc.64   %phi7330(i) <- $0
	br          .L4072

.L4072:
	phi.64      %r17272(i) <- %phi7330(i), %phi7331(i)
	load.64     %r17273 <- 0[l]
	setb.32     %r17274 <- %r17272(i), %r17273
	cbr         %r17274, .L4069, .L4071

.L4069:
	add.64*     %r17277 <- %r17271(news), %r17272(i)
	load.8      %r17278 <- 0[%r17277]
	scast.32    %r17279 <- (8) %r17278
	setne.32    %r17280 <- %r17279, $37
	cbr         %r17280, .L4073, .L4074

.L4073:
	load.64*    %r17282 <- 0[%arg2]
	add.64*     %r17285 <- %arg2, $0x2018
	setb.32     %r17286 <- %r17282, %r17285
	cbr         %r17286, .L4077, .L4076

.L4076:
	push.64*    %arg2
	call.64*    %r17288 <- luaL_prepbuffer
	br          .L4077

.L4077:
	load.8      %r17293 <- 0[%r17277]
	load.64*    %r17296 <- 0[%arg2]
	add.64*     %r17297 <- %r17296, $1
	store.64*   %r17297 -> 0[%arg2]
	store.8     %r17293 -> 0[%r17296]
	phisrc.64   %phi7320(i) <- %r17272(i)
	br          .L4070

.L4074:
	add.64      %r17299 <- %r17272(i), $1
	call.64*    %r17300 <- __ctype_b_loc
	load.64*    %r17301 <- 0[%r17300]
	add.64*     %r17304 <- %r17271(news), %r17299
	load.8      %r17305 <- 0[%r17304]
	cast.32     %r17307 <- (8) %r17305
	scast.64    %r17308 <- (32) %r17307
	muls.64     %r17309 <- %r17308, $2
	add.64*     %r17310 <- %r17301, %r17309
	load.16     %r17311 <- 0[%r17310]
	cast.32     %r17312 <- (16) %r17311
	and.32      %r17313 <- %r17312, $0x800
	cbr         %r17313, .L4080, .L4079

.L4079:
	load.64*    %r17315 <- 0[%arg2]
	add.64*     %r17318 <- %arg2, $0x2018
	setb.32     %r17319 <- %r17315, %r17318
	cbr         %r17319, .L4083, .L4082

.L4082:
	push.64*    %arg2
	call.64*    %r17321 <- luaL_prepbuffer
	br          .L4083

.L4083:
	load.8      %r17326 <- 0[%r17304]
	load.64*    %r17329 <- 0[%arg2]
	add.64*     %r17330 <- %r17329, $1
	store.64*   %r17330 -> 0[%arg2]
	store.8     %r17326 -> 0[%r17329]
	phisrc.64   %phi7321(i) <- %r17299
	br          .L4070

.L4080:
	scast.32    %r17335 <- (8) %r17305
	seteq.32    %r17336 <- %r17335, $48
	phisrc.64   %phi7322(i) <- %r17299
	cbr         %r17336, .L4085, .L4086

.L4085:
	sub.64      %r17341 <- %arg4, %arg3
	push.64*    %arg2
	push.64*    %arg3
	push.64     %r17341
	call        luaL_addlstring
	br          .L4070

.L4086:
	scast.32    %r17348 <- (8) %r17305
	add.32      %r17349 <- %r17348, $-49
	push.64*    %arg1
	push.32     %r17349
	push.64*    %arg3
	push.64*    %arg4
	call        push_onecapture
	push.64*    %arg2
	call        luaL_addvalue
	phisrc.64   %phi7323(i) <- %r17299
	br          .L4070

.L4070:
	phi.64      %r17353 <- %phi7320(i), %phi7321(i), %phi7322(i), %phi7323(i)
	add.64      %r17354 <- %r17353, $1
	phisrc.64   %phi7331(i) <- %r17354
	br          .L4072

.L4071:
	ret


add_value:
.L4088:
	<entry-point>
	load.64*    %r17356 <- 16[%arg1]
	push.64*    %r17356
	push.32     $3
	call.32     %r17358 <- lua_type
	switch.32   %r17358, 3 -> .L4091, 4 -> .L4091, 5 -> .L4093, 6 -> .L4092, default -> .L4089

.L4091:
	push.64*    %arg1
	push.64*    %arg2
	push.64*    %arg3
	push.64*    %arg4
	call        add_s
	br          .L4094

.L4092:
	push.64*    %r17356
	push.32     $3
	call        lua_pushvalue
	push.64*    %arg1
	push.64*    %arg3
	push.64*    %arg4
	call.32     %r17367 <- push_captures
	push.64*    %r17356
	push.32     %r17367
	push.32     $1
	call        lua_call
	br          .L4089

.L4093:
	push.64*    %arg1
	push.32     $0
	push.64*    %arg3
	push.64*    %arg4
	call        push_onecapture
	push.64*    %r17356
	push.32     $3
	call        lua_gettable
	br          .L4089

.L4089:
	push.64*    %r17356
	push.32     $0xffffffff
	call.32     %r17375 <- lua_toboolean
	cbr         %r17375, .L4096, .L4095

.L4095:
	push.64*    %r17356
	push.32     $0xfffffffe
	call        lua_settop
	sub.64      %r17381 <- %arg4, %arg3
	push.64*    %r17356
	push.64*    %arg3
	push.64     %r17381
	call        lua_pushlstring
	br          .L4097

.L4096:
	push.64*    %r17356
	push.32     $0xffffffff
	call.32     %r17384 <- lua_isstring
	cbr         %r17384, .L4097, .L4098

.L4098:
	symaddr.64* %r17386 <- <anon symbol:0x1be74f8>
	push.64*    %r17356
	push.32     $0xffffffff
	call.32     %r17389 <- lua_type
	push.64*    %r17356
	push.32     %r17389
	call.64*    %r17390 <- lua_typename
	push.64*    %r17356
	push.64*    %r17386
	push.64*    %r17390
	call.32     %r17391 <- luaL_error
	br          .L4097

.L4097:
	push.64*    %arg2
	call        luaL_addvalue
	br          .L4094

.L4094:
	ret


str_gsub:
.L4100:
	<entry-point>
	symaddr.64* %r17394 <- srcl
	push.64*    %arg1
	push.32     $1
	push.64*    %r17394
	call.64*    %r17395(src) <- luaL_checklstring
	push.64*    %arg1
	push.32     $2
	push.64*    $0
	call.64*    %r17397 <- luaL_checklstring
	push.64*    %arg1
	push.32     $3
	call.32     %r17399(tr) <- lua_type
	load.64     %r17401 <- 0[srcl]
	add.64      %r17402 <- %r17401, $1
	push.64*    %arg1
	push.32     $4
	push.64     %r17402
	call.64     %r17404 <- luaL_optinteger
	scast.32    %r17405(max_s) <- (64) %r17404
	load.8      %r17407 <- 0[%r17397]
	scast.32    %r17408 <- (8) %r17407
	seteq.32    %r17409 <- %r17408, $94
	phisrc.64*  %phi7384(p) <- %r17397
	cbr         %r17409, .L4101, .L4103

.L4101:
	add.64*     %r17411(p) <- %r17397, $1
	phisrc.64*  %phi7383(p) <- %r17411(p)
	br          .L4103

.L4103:
	seteq.1     %r17415 <- %r17399(tr), $3
	seteq.1     %r17418 <- %r17399(tr), $4
	or-bool.1   %r17419 <- %r17415, %r17418
	cast.32     %r17420 <- (1) %r17419
	setne.1     %r17421 <- %r17420, $0
	seteq.1     %r17424 <- %r17399(tr), $6
	or-bool.1   %r17425 <- %r17421, %r17424
	cast.32     %r17426 <- (1) %r17425
	setne.1     %r17427 <- %r17426, $0
	seteq.1     %r17430 <- %r17399(tr), $5
	or-bool.1   %r17431 <- %r17427, %r17430
	phisrc.32   %phi7392(n) <- $0
	cbr         %r17431, .L4106, .L4105

.L4105:
	symaddr.64* %r17434 <- <anon symbol:0x1be7b50>
	push.64*    %arg1
	push.32     $3
	push.64*    %r17434
	call.32     %r17435 <- luaL_argerror
	br          .L4106

.L4106:
	symaddr.64* %r17438 <- b
	push.64*    %arg1
	push.64*    %r17438
	call        luaL_buffinit
	store.64*   %arg1 -> 16[ms]
	store.64*   %r17395(src) -> 0[ms]
	load.64     %r17442 <- 0[srcl]
	add.64*     %r17443 <- %r17395(src), %r17442
	store.64*   %r17443 -> 8[ms]
	phisrc.64*  %phi7370(src) <- %r17395(src)
	phisrc.64*  %phi7379(src) <- %r17395(src)
	phisrc.64*  %phi7395(ms) <- %r17443
	phisrc.64*  %phi7400 <- %r17443
	phisrc.64*  %phi7402 <- %r17443
	phisrc.64*  %phi7404 <- %r17443
	br          .L4110

.L4110:
	phi.32      %r17444(n) <- %phi7392(n), %phi7393(n)
	setlt.32    %r17446 <- %r17444(n), %r17405(max_s)
	phisrc.32   %phi7389(n) <- %r17444(n)
	cbr         %r17446, .L4107, .L4109

.L4107:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17447 <- ms
	phi.64*     %r17448(src) <- %phi7379(src), %phi7380(src), %phi7381(src)
	phi.64*     %r17449 <- %phi7383(p), %phi7384(p)
	push.64*    %r17447
	push.64*    %r17448(src)
	push.64*    %r17449
	call.64*    %r17450 <- match
	cbr         %r17450, .L4111, .L4112

.L4111:
	add.32      %r17453 <- %r17444(n), $1
	push.64*    %r17447
	push.64*    %r17438
	push.64*    %r17448(src)
	push.64*    %r17450
	call        add_value
	phisrc.32   %phi7390(n) <- %r17453
	phisrc.32   %phi7393(n) <- %r17453
	br          .L4112

.L4112:
	setne.1     %r17459 <- %r17450, $0
	seta.1      %r17463 <- %r17450, %r17448(src)
	and-bool.1  %r17464 <- %r17459, %r17463
	cbr         %r17464, .L4113, .L4114

.L4113:
	phisrc.64*  %phi7371(src) <- %r17450
	phisrc.64*  %phi7380(src) <- %r17450
	br          .L4115

.L4114:
	load.64*    %r17468 <- 8[ms]
	setb.32     %r17469 <- %r17448(src), %r17468
	phisrc.64*  %phi7373(src) <- %r17448(src)
	cbr         %r17469, .L4116, .L4109

.L4116:
	load.64*    %r17470 <- 0[b]
	add.64*     %r17473 <- %r17438, $0x2018
	setb.32     %r17474 <- %r17470, %r17473
	phisrc.64*  %phi7394(b) <- %r17470
	phisrc.64*  %phi7401 <- %r17470
	phisrc.64*  %phi7403 <- %r17470
	cbr         %r17474, .L4120, .L4119

.L4119:
	push.64*    %r17438
	call.64*    %r17476 <- luaL_prepbuffer
	br          .L4120

.L4120:
	add.64*     %r17479 <- %r17448(src), $1
	load.8      %r17480 <- 0[%r17448(src)]
	load.64*    %r17482 <- 0[b]
	add.64*     %r17483 <- %r17482, $1
	store.64*   %r17483 -> 0[b]
	store.8     %r17480 -> 0[%r17482]
	phisrc.64*  %phi7372(src) <- %r17479
	phisrc.64*  %phi7381(src) <- %r17479
	br          .L4115

.L4115:
	cbr         %r17409, .L4109, .L4110

.L4109:
	phi.64*     %r17486 <- %phi7370(src), %phi7371(src), %phi7372(src), %phi7373(src)
	load.64*    %r17487 <- 8[ms]
	sub.64      %r17489 <- %r17487, %r17486
	push.64*    %r17438
	push.64*    %r17486
	push.64     %r17489
	call        luaL_addlstring
	push.64*    %r17438
	call        luaL_pushresult
	phi.32      %r17493 <- %phi7389(n), %phi7390(n)
	scast.64    %r17494 <- (32) %r17493
	push.64*    %arg1
	push.64     %r17494
	call        lua_pushinteger
	ret.32      $2


addquoted:
.L4125:
	<entry-point>
	symaddr.64* %r17498 <- l
	push.64*    %arg1
	push.32     %arg3
	push.64*    %r17498
	call.64*    %r17499(s) <- luaL_checklstring
	load.64*    %r17501 <- 0[%arg2]
	add.64*     %r17504 <- %arg2, $0x2018
	setb.32     %r17505 <- %r17501, %r17504
	phisrc.64*  %phi7450(s) <- %r17499(s)
	cbr         %r17505, .L4128, .L4127

.L4127:
	push.64*    %arg2
	call.64*    %r17507 <- luaL_prepbuffer
	br          .L4128

.L4128:
	load.64*    %r17510 <- 0[%arg2]
	add.64*     %r17511 <- %r17510, $1
	store.64*   %r17511 -> 0[%arg2]
	store.8     $34 -> 0[%r17510]
	br          .L4132

.L4132:
	load.64     %r17512 <- 0[l]
	add.64      %r17513 <- %r17512, $-1
	store.64    %r17513 -> 0[l]
	cbr         %r17512, .L4129, .L4131

.L4129:
	phi.64*     %r17514(s) <- %phi7450(s), %phi7451(s)
	load.8      %r17515 <- 0[%r17514(s)]
	phisrc.8    %phi7452 <- %r17515
	switch.8    %r17515, 0 -> .L4138, 10 -> .L4136, 13 -> .L4137, 34 -> .L4136, 92 -> .L4136, default -> .L4139

.L4136:
	load.64*    %r17517 <- 0[%arg2]
	setb.32     %r17521 <- %r17517, %r17504
	cbr         %r17521, .L4142, .L4141

.L4141:
	push.64*    %arg2
	call.64*    %r17523 <- luaL_prepbuffer
	br          .L4142

.L4142:
	load.64*    %r17526 <- 0[%arg2]
	add.64*     %r17527 <- %r17526, $1
	store.64*   %r17527 -> 0[%arg2]
	store.8     $92 -> 0[%r17526]
	load.64*    %r17529 <- 0[%arg2]
	setb.32     %r17533 <- %r17529, %r17504
	cbr         %r17533, .L4145, .L4144

.L4144:
	push.64*    %arg2
	call.64*    %r17535 <- luaL_prepbuffer
	br          .L4145

.L4145:
	load.8      %r17538 <- 0[%r17514(s)]
	load.64*    %r17541 <- 0[%arg2]
	add.64*     %r17542 <- %r17541, $1
	store.64*   %r17542 -> 0[%arg2]
	store.8     %r17538 -> 0[%r17541]
	br          .L4133

.L4137:
	symaddr.64* %r17544 <- <anon symbol:0x1beb8f0>
	push.64*    %arg2
	push.64*    %r17544
	push.64     $2
	call        luaL_addlstring
	br          .L4133

.L4138:
	symaddr.64* %r17546 <- <anon symbol:0x1bebc90>
	push.64*    %arg2
	push.64*    %r17546
	push.64     $4
	call        luaL_addlstring
	br          .L4133

.L4139:
	load.64*    %r17548 <- 0[%arg2]
	setb.32     %r17552 <- %r17548, %r17504
	cbr         %r17552, .L4148, .L4147

.L4147:
	push.64*    %arg2
	call.64*    %r17554 <- luaL_prepbuffer
	br          .L4148

.L4148:
	load.8      %r17557 <- 0[%r17514(s)]
	load.64*    %r17560 <- 0[%arg2]
	add.64*     %r17561 <- %r17560, $1
	store.64*   %r17561 -> 0[%arg2]
	store.8     %r17557 -> 0[%r17560]
	br          .L4133

.L4133:
	add.64*     %r17563 <- %r17514(s), $1
	phisrc.64*  %phi7451(s) <- %r17563
	br          .L4132

.L4131:
	load.64*    %r17565 <- 0[%arg2]
	setb.32     %r17569 <- %r17565, %r17504
	cbr         %r17569, .L4151, .L4150

.L4150:
	push.64*    %arg2
	call.64*    %r17571 <- luaL_prepbuffer
	br          .L4151

.L4151:
	load.64*    %r17574 <- 0[%arg2]
	add.64*     %r17575 <- %r17574, $1
	store.64*   %r17575 -> 0[%arg2]
	store.8     $34 -> 0[%r17574]
	ret


scanformat:
.L4153:
	<entry-point>
	phisrc.64*  %phi7480(p) <- %arg2
	br          .L4157

.L4157:
	phi.64*     %r17577(p) <- %phi7480(p), %phi7481(p)
	load.8      %r17578 <- 0[%r17577(p)]
	cbr         %r17578, .L4158, .L4156

.L4158:
	symaddr.64* %r17581 <- <anon symbol:0x1bed298>
	scast.32    %r17584 <- (8) %r17578
	push.64*    %r17581
	push.32     %r17584
	call.64*    %r17585 <- strchr
	cbr         %r17585, .L4154, .L4156

.L4154:
	add.64*     %r17588 <- %r17577(p), $1
	phisrc.64*  %phi7481(p) <- %r17588
	br          .L4157

.L4156:
	sub.64      %r17591 <- %r17577(p), %arg2
	setae.32    %r17593 <- %r17591, $6
	cbr         %r17593, .L4159, .L4160

.L4159:
	symaddr.64* %r17595 <- <anon symbol:0x1bed8f0>
	push.64*    %arg1
	push.64*    %r17595
	call.32     %r17596 <- luaL_error
	br          .L4160

.L4160:
	call.64*    %r17597 <- __ctype_b_loc
	load.64*    %r17598 <- 0[%r17597]
	load.8      %r17600 <- 0[%r17577(p)]
	cast.32     %r17602 <- (8) %r17600
	scast.64    %r17603 <- (32) %r17602
	muls.64     %r17604 <- %r17603, $2
	add.64*     %r17605 <- %r17598, %r17604
	load.16     %r17606 <- 0[%r17605]
	cast.32     %r17607 <- (16) %r17606
	and.32      %r17608 <- %r17607, $0x800
	phisrc.64*  %phi7472(p) <- %r17577(p)
	cbr         %r17608, .L4161, .L4162

.L4161:
	add.64*     %r17610 <- %r17577(p), $1
	phisrc.64*  %phi7473(p) <- %r17610
	br          .L4162

.L4162:
	call.64*    %r17611 <- __ctype_b_loc
	load.64*    %r17612 <- 0[%r17611]
	phi.64*     %r17613(p) <- %phi7472(p), %phi7473(p)
	load.8      %r17614 <- 0[%r17613(p)]
	cast.32     %r17616 <- (8) %r17614
	scast.64    %r17617 <- (32) %r17616
	muls.64     %r17618 <- %r17617, $2
	add.64*     %r17619 <- %r17612, %r17618
	load.16     %r17620 <- 0[%r17619]
	cast.32     %r17621 <- (16) %r17620
	and.32      %r17622 <- %r17621, $0x800
	phisrc.64*  %phi7469(p) <- %r17613(p)
	cbr         %r17622, .L4163, .L4164

.L4163:
	add.64*     %r17624 <- %r17613(p), $1
	phisrc.64*  %phi7470(p) <- %r17624
	br          .L4164

.L4164:
	phi.64*     %r17625(p) <- %phi7469(p), %phi7470(p)
	load.8      %r17626 <- 0[%r17625(p)]
	scast.32    %r17627 <- (8) %r17626
	seteq.32    %r17628 <- %r17627, $46
	phisrc.64*  %phi7461(p) <- %r17625(p)
	cbr         %r17628, .L4165, .L4166

.L4165:
	add.64*     %r17630 <- %r17625(p), $1
	call.64*    %r17631 <- __ctype_b_loc
	load.64*    %r17632 <- 0[%r17631]
	load.8      %r17634 <- 1[%r17625(p)]
	cast.32     %r17636 <- (8) %r17634
	scast.64    %r17637 <- (32) %r17636
	muls.64     %r17638 <- %r17637, $2
	add.64*     %r17639 <- %r17632, %r17638
	load.16     %r17640 <- 0[%r17639]
	cast.32     %r17641 <- (16) %r17640
	and.32      %r17642 <- %r17641, $0x800
	phisrc.64*  %phi7465(p) <- %r17630
	cbr         %r17642, .L4167, .L4168

.L4167:
	add.64*     %r17644 <- %r17630, $1
	phisrc.64*  %phi7466(p) <- %r17644
	br          .L4168

.L4168:
	call.64*    %r17645 <- __ctype_b_loc
	load.64*    %r17646 <- 0[%r17645]
	phi.64*     %r17647(p) <- %phi7465(p), %phi7466(p)
	load.8      %r17648 <- 0[%r17647(p)]
	cast.32     %r17650 <- (8) %r17648
	scast.64    %r17651 <- (32) %r17650
	muls.64     %r17652 <- %r17651, $2
	add.64*     %r17653 <- %r17646, %r17652
	load.16     %r17654 <- 0[%r17653]
	cast.32     %r17655 <- (16) %r17654
	and.32      %r17656 <- %r17655, $0x800
	phisrc.64*  %phi7462(p) <- %r17647(p)
	cbr         %r17656, .L4169, .L4166

.L4169:
	add.64*     %r17658 <- %r17647(p), $1
	phisrc.64*  %phi7463(p) <- %r17658
	br          .L4166

.L4166:
	call.64*    %r17659 <- __ctype_b_loc
	load.64*    %r17660 <- 0[%r17659]
	phi.64*     %r17661(p) <- %phi7461(p), %phi7462(p), %phi7463(p)
	load.8      %r17662 <- 0[%r17661(p)]
	cast.32     %r17664 <- (8) %r17662
	scast.64    %r17665 <- (32) %r17664
	muls.64     %r17666 <- %r17665, $2
	add.64*     %r17667 <- %r17660, %r17666
	load.16     %r17668 <- 0[%r17667]
	cast.32     %r17669 <- (16) %r17668
	and.32      %r17670 <- %r17669, $0x800
	cbr         %r17670, .L4171, .L4172

.L4171:
	symaddr.64* %r17672 <- <anon symbol:0x1beeb10>
	push.64*    %arg1
	push.64*    %r17672
	call.32     %r17673 <- luaL_error
	br          .L4172

.L4172:
	add.64*     %r17675 <- %arg3, $1
	store.8     $37 -> 0[%arg3]
	sub.64      %r17680 <- %r17661(p), %arg2
	add.64      %r17681 <- %r17680, $1
	push.64*    %r17675
	push.64*    %arg2
	push.64     %r17681
	call.64*    %r17683 <- strncpy
	cast.64     %r17689 <- (64) %r17675
	add.64      %r17690 <- %r17689, %r17681
	ptrcast.64* %r17691 <- (64) %r17690
	store.8     $0 -> 0[%r17691]
	ret.64*     %r17661(p)


addintlen:
.L4174:
	<entry-point>
	push.64*    %arg1
	call.64     %r17696 <- strlen
	add.64      %r17699 <- %r17696, $-1
	add.64*     %r17700 <- %arg1, %r17699
	load.8      %r17701 <- 0[%r17700]
	add.64*     %r17704 <- %arg1, %r17696
	add.64*     %r17705 <- %r17704, $-1
	symaddr.64* %r17706 <- <anon symbol:0x1bef168>
	push.64*    %r17705
	push.64*    %r17706
	call.64*    %r17707 <- strcpy
	add.64      %r17711 <- %r17696, $2
	add.64      %r17712 <- %r17711, $-2
	add.64*     %r17713 <- %arg1, %r17712
	store.8     %r17701 -> 0[%r17713]
	add.64      %r17717 <- %r17711, $-1
	add.64*     %r17718 <- %arg1, %r17717
	store.8     $0 -> 0[%r17718]
	ret


str_format:
.L4176:
	<entry-point>
	push.64*    %arg1
	call.32     %r17720(top) <- lua_gettop
	symaddr.64* %r17723 <- sfl
	push.64*    %arg1
	push.32     $1
	push.64*    %r17723
	call.64*    %r17724 <- luaL_checklstring
	load.64     %r17726 <- 0[sfl]
	add.64*     %r17727(strfrmt_end) <- %r17724, %r17726
	symaddr.64* %r17729 <- b
	push.64*    %arg1
	push.64*    %r17729
	call        luaL_buffinit
	phisrc.32   %phi7515(arg) <- $1
	phisrc.64*  %phi7523(strfrmt) <- %r17724
	br          .L4180

.L4180:
	phi.64*     %r17730(strfrmt) <- %phi7523(strfrmt), %phi7524(strfrmt), %phi7525(strfrmt), %phi7526(strfrmt)
	setb.32     %r17732 <- %r17730(strfrmt), %r17727(strfrmt_end)
	cbr         %r17732, .L4177, .L4179

.L4177:
	load.8      %r17734 <- 0[%r17730(strfrmt)]
	scast.32    %r17735 <- (8) %r17734
	setne.32    %r17736 <- %r17735, $37
	phisrc.8    %phi7534 <- %r17734
	phisrc.8    %phi7539 <- %r17734
	cbr         %r17736, .L4181, .L4182

.L4181:
	load.64*    %r17737 <- 0[b]
	add.64*     %r17740 <- %r17729, $0x2018
	setb.32     %r17741 <- %r17737, %r17740
	phisrc.64*  %phi7529(b) <- %r17737
	phisrc.64*  %phi7533 <- %r17737
	phisrc.64*  %phi7538 <- %r17737
	cbr         %r17741, .L4185, .L4184

.L4184:
	push.64*    %r17729
	call.64*    %r17743 <- luaL_prepbuffer
	br          .L4185

.L4185:
	add.64*     %r17746 <- %r17730(strfrmt), $1
	load.8      %r17747 <- 0[%r17730(strfrmt)]
	load.64*    %r17749 <- 0[b]
	add.64*     %r17750 <- %r17749, $1
	store.64*   %r17750 -> 0[b]
	store.8     %r17747 -> 0[%r17749]
	phisrc.64*  %phi7525(strfrmt) <- %r17746
	br          .L4180

.L4182:
	add.64*     %r17752(strfrmt) <- %r17730(strfrmt), $1
	load.8      %r17753 <- 1[%r17730(strfrmt)]
	scast.32    %r17754 <- (8) %r17753
	seteq.32    %r17755 <- %r17754, $37
	phisrc.8    %phi7532 <- %r17753
	phisrc.8    %phi7537 <- %r17753
	cbr         %r17755, .L4187, .L4188

.L4187:
	load.64*    %r17756 <- 0[b]
	add.64*     %r17759 <- %r17729, $0x2018
	setb.32     %r17760 <- %r17756, %r17759
	phisrc.64*  %phi7528(b) <- %r17756
	phisrc.64*  %phi7531 <- %r17756
	phisrc.64*  %phi7536 <- %r17756
	cbr         %r17760, .L4191, .L4190

.L4190:
	push.64*    %r17729
	call.64*    %r17762 <- luaL_prepbuffer
	br          .L4191

.L4191:
	add.64*     %r17765 <- %r17752(strfrmt), $1
	load.8      %r17766 <- 1[%r17730(strfrmt)]
	load.64*    %r17768 <- 0[b]
	add.64*     %r17769 <- %r17768, $1
	store.64*   %r17769 -> 0[b]
	store.8     %r17766 -> 0[%r17768]
	phisrc.64*  %phi7526(strfrmt) <- %r17765
	br          .L4180

.L4188:
	phi.32      %r17770 <- %phi7515(arg), %phi7516(arg)
	add.32      %r17771(arg) <- %r17770, $1
	setgt.32    %r17773 <- %r17771(arg), %r17720(top)
	phisrc.32   %phi7516(arg) <- %r17771(arg)
	cbr         %r17773, .L4193, .L4194

.L4193:
	symaddr.64* %r17776 <- <anon symbol:0x1bf1eb8>
	push.64*    %arg1
	push.32     %r17771(arg)
	push.64*    %r17776
	call.32     %r17777 <- luaL_argerror
	br          .L4194

.L4194:
	symaddr.64* %r17780 <- form
	push.64*    %arg1
	push.64*    %r17752(strfrmt)
	push.64*    %r17780
	call.64*    %r17781 <- scanformat
	add.64*     %r17783(strfrmt) <- %r17781, $1
	load.8      %r17784 <- 0[%r17781]
	phisrc.64*  %phi7524(strfrmt) <- %r17783(strfrmt)
	switch.8    %r17784, 69 -> .L4207, 71 -> .L4207, 88 -> .L4202, 99 -> .L4196, 100 -> .L4198, 101 -> .L4207, 102 -> .L4207, 103 -> .L4207, 105 -> .L4198, 111 -> .L4202, 113 -> .L4208, 115 -> .L4209, 117 -> .L4202, 120 -> .L4202, default -> .L4210

.L4196:
	symaddr.64* %r17785 <- buff
	push.64*    %arg1
	push.32     %r17771(arg)
	call.f64    %r17789 <- luaL_checknumber
	cast.32     %r17790 <- (64) %r17789
	push.64*    %r17785
	push.64*    %r17780
	push.32     %r17790
	call.32     %r17791 <- sprintf
	br          .L4195

.L4198:
	push.64*    %r17780
	call        addintlen
	symaddr.64* %r17793 <- buff
	push.64*    %arg1
	push.32     %r17771(arg)
	call.f64    %r17797 <- luaL_checknumber
	push.64*    %r17793
	push.64*    %r17780
	push.64     %r17797
	call.32     %r17799 <- sprintf
	br          .L4195

.L4202:
	push.64*    %r17780
	call        addintlen
	symaddr.64* %r17801 <- buff
	push.64*    %arg1
	push.32     %r17771(arg)
	call.f64    %r17805 <- luaL_checknumber
	push.64*    %r17801
	push.64*    %r17780
	push.64     %r17805
	call.32     %r17807 <- sprintf
	br          .L4195

.L4207:
	symaddr.64* %r17808 <- buff
	push.64*    %arg1
	push.32     %r17771(arg)
	call.f64    %r17812 <- luaL_checknumber
	fpcast.f64  %r17813 <- (64) %r17812
	push.64*    %r17808
	push.64*    %r17780
	push.f64    %r17813
	call.32     %r17814 <- sprintf
	br          .L4195

.L4208:
	push.64*    %arg1
	push.64*    %r17729
	push.32     %r17771(arg)
	call        addquoted
	br          .L4180

.L4209:
	symaddr.64* %r17820 <- l
	push.64*    %arg1
	push.32     %r17771(arg)
	push.64*    %r17820
	call.64*    %r17821(s) <- luaL_checklstring
	push.64*    %r17780
	push.32     $46
	call.64*    %r17823 <- strchr
	seteq.1     %r17825 <- %r17823, $0
	load.64     %r17826 <- 0[l]
	setae.1     %r17828 <- %r17826, $100
	and-bool.1  %r17829 <- %r17825, %r17828
	cbr         %r17829, .L4211, .L4212

.L4211:
	push.64*    %arg1
	push.32     %r17771(arg)
	call        lua_pushvalue
	push.64*    %r17729
	call        luaL_addvalue
	br          .L4180

.L4212:
	symaddr.64* %r17834 <- buff
	push.64*    %r17834
	push.64*    %r17780
	push.64*    %r17821(s)
	call.32     %r17837 <- sprintf
	br          .L4195

.L4210:
	symaddr.64* %r17839 <- <anon symbol:0x1bf4210>
	scast.32    %r17843 <- (8) %r17784
	push.64*    %arg1
	push.64*    %r17839
	push.32     %r17843
	call.32     %r17844 <- luaL_error
	phisrc.32   %phi7487(return) <- %r17844
	br          .L4214

.L4195:
	symaddr.64* %r17847 <- buff
	symaddr.64* %r17848 <- buff
	push.64*    %r17848
	call.64     %r17849 <- strlen
	push.64*    %r17729
	push.64*    %r17847
	push.64     %r17849
	call        luaL_addlstring
	br          .L4180

.L4179:
	push.64*    %r17729
	call        luaL_pushresult
	phisrc.32   %phi7488(return) <- $1
	br          .L4214

.L4214:
	phi.32      %r17845 <- %phi7487(return), %phi7488(return)
	ret.32      %r17845


createmetatable:
.L4215:
	<entry-point>
	push.64*    %arg1
	push.32     $0
	push.32     $1
	call        lua_createtable
	symaddr.64* %r17853 <- <anon symbol:0x1bfce30>
	push.64*    %arg1
	push.64*    %r17853
	push.64     $0
	call        lua_pushlstring
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_pushvalue
	push.64*    %arg1
	push.32     $0xfffffffe
	call.32     %r17856 <- lua_setmetatable
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_pushvalue
	symaddr.64* %r17860 <- <anon symbol:0x1bfd3a0>
	push.64*    %arg1
	push.32     $0xfffffffe
	push.64*    %r17860
	call        lua_setfield
	push.64*    %arg1
	push.32     $0xfffffffe
	call        lua_settop
	ret


luaopen_string:
.L4217:
	<entry-point>
	symaddr.64* %r17863 <- <anon symbol:0x1bfd740>
	symaddr.64* %r17864 <- strlib
	push.64*    %arg1
	push.64*    %r17863
	push.64*    %r17864
	call        luaL_register
	push.64*    %arg1
	call        createmetatable
	ret.32      $1


luaL_openlibs:
.L4219:
	<entry-point>
	symaddr.64* %r17867(lib) <- lualibs
	phisrc.64*  %phi7544(lib) <- %r17867(lib)
	br          .L4223

.L4223:
	phi.64*     %r17868(lib) <- %phi7544(lib), %phi7545(lib)
	load.64*    %r17869 <- 8[%r17868(lib)]
	cbr         %r17869, .L4220, .L4222

.L4220:
	push.64*    %arg1
	push.64*    %r17869
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r17875 <- 0[%r17868(lib)]
	push.64*    %arg1
	push.64*    %r17875
	call        lua_pushstring
	push.64*    %arg1
	push.32     $1
	push.32     $0
	call        lua_call
	add.64*     %r17878 <- %r17868(lib), $16
	phisrc.64*  %phi7545(lib) <- %r17878
	br          .L4223

.L4222:
	ret


barg:
.L4224:
	<entry-point>
	push.64*    %arg1
	push.32     %arg2
	call.f64    %r17881 <- lua_tonumber
	set.f64     %r17882 <- 6755399441055744.000000
	add.f64     %r17883 <- %r17881, %r17882
	set.f64     %r17885 <- 0.000000
	seteq.32    %r17886 <- %r17883, %r17885
	cbr         %r17886, .L4227, .L4226

.L4227:
	push.64*    %arg1
	push.32     %arg2
	call.32     %r17889 <- lua_isnumber
	cbr         %r17889, .L4226, .L4225

.L4225:
	symaddr.64* %r17892 <- <anon symbol:0x1bfe4d8>
	push.64*    %arg1
	push.32     %arg2
	push.64*    %r17892
	call.32     %r17893 <- luaL_typerror
	br          .L4226

.L4226:
	cast.32     %r17895 <- (64) %r17883
	ret.32      %r17895


tobit:
.L4229:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17899 <- barg
	fpcast.f64  %r17901 <- (32) %r17899
	push.64*    %arg1
	push.f64    %r17901
	call        lua_pushnumber
	ret.32      $1


bnot:
.L4231:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17905 <- barg
	not.32      %r17906 <- %r17905
	fpcast.f64  %r17908 <- (32) %r17906
	push.64*    %arg1
	push.f64    %r17908
	call        lua_pushnumber
	ret.32      $1


band:
.L4233:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17911(b) <- barg
	push.64*    %arg1
	call.32     %r17913(i) <- lua_gettop
	phisrc.32   %phi7561(b) <- %r17911(b)
	phisrc.32   %phi7565(i) <- %r17913(i)
	br          .L4237

.L4237:
	phi.32      %r17914(i) <- %phi7565(i), %phi7566(i)
	setgt.32    %r17915 <- %r17914(i), $1
	phi.32      %r17919 <- %phi7561(b), %phi7562(b)
	cbr         %r17915, .L4234, .L4236

.L4234:
	push.64*    %arg1
	push.32     %r17914(i)
	call.32     %r17918 <- barg
	and.32      %r17921 <- %r17919, %r17918
	phisrc.32   %phi7562(b) <- %r17921
	add.32      %r17924 <- %r17914(i), $-1
	phisrc.32   %phi7566(i) <- %r17924
	br          .L4237

.L4236:
	fpcast.f64  %r17928 <- (32) %r17919
	push.64*    %arg1
	push.f64    %r17928
	call        lua_pushnumber
	ret.32      $1


bor:
.L4239:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17931(b) <- barg
	push.64*    %arg1
	call.32     %r17933(i) <- lua_gettop
	phisrc.32   %phi7573(b) <- %r17931(b)
	phisrc.32   %phi7577(i) <- %r17933(i)
	br          .L4243

.L4243:
	phi.32      %r17934(i) <- %phi7577(i), %phi7578(i)
	setgt.32    %r17935 <- %r17934(i), $1
	phi.32      %r17939 <- %phi7573(b), %phi7574(b)
	cbr         %r17935, .L4240, .L4242

.L4240:
	push.64*    %arg1
	push.32     %r17934(i)
	call.32     %r17938 <- barg
	or.32       %r17941 <- %r17939, %r17938
	phisrc.32   %phi7574(b) <- %r17941
	add.32      %r17944 <- %r17934(i), $-1
	phisrc.32   %phi7578(i) <- %r17944
	br          .L4243

.L4242:
	fpcast.f64  %r17948 <- (32) %r17939
	push.64*    %arg1
	push.f64    %r17948
	call        lua_pushnumber
	ret.32      $1


bxor:
.L4245:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17951(b) <- barg
	push.64*    %arg1
	call.32     %r17953(i) <- lua_gettop
	phisrc.32   %phi7585(b) <- %r17951(b)
	phisrc.32   %phi7589(i) <- %r17953(i)
	br          .L4249

.L4249:
	phi.32      %r17954(i) <- %phi7589(i), %phi7590(i)
	setgt.32    %r17955 <- %r17954(i), $1
	phi.32      %r17959 <- %phi7585(b), %phi7586(b)
	cbr         %r17955, .L4246, .L4248

.L4246:
	push.64*    %arg1
	push.32     %r17954(i)
	call.32     %r17958 <- barg
	xor.32      %r17961 <- %r17959, %r17958
	phisrc.32   %phi7586(b) <- %r17961
	add.32      %r17964 <- %r17954(i), $-1
	phisrc.32   %phi7590(i) <- %r17964
	br          .L4249

.L4248:
	fpcast.f64  %r17968 <- (32) %r17959
	push.64*    %arg1
	push.f64    %r17968
	call        lua_pushnumber
	ret.32      $1


lshift:
.L4251:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17971 <- barg
	push.64*    %arg1
	push.32     $2
	call.32     %r17973 <- barg
	and.32      %r17974 <- %r17973, $31
	shl.32      %r17978 <- %r17971, %r17974
	fpcast.f64  %r17980 <- (32) %r17978
	push.64*    %arg1
	push.f64    %r17980
	call        lua_pushnumber
	ret.32      $1


rshift:
.L4253:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17983 <- barg
	push.64*    %arg1
	push.32     $2
	call.32     %r17985 <- barg
	and.32      %r17986 <- %r17985, $31
	lsr.32      %r17990 <- %r17983, %r17986
	fpcast.f64  %r17992 <- (32) %r17990
	push.64*    %arg1
	push.f64    %r17992
	call        lua_pushnumber
	ret.32      $1


arshift:
.L4255:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r17995 <- barg
	push.64*    %arg1
	push.32     $2
	call.32     %r17997 <- barg
	and.32      %r17998 <- %r17997, $31
	asr.32      %r18003 <- %r17995, %r17998
	fpcast.f64  %r18005 <- (32) %r18003
	push.64*    %arg1
	push.f64    %r18005
	call        lua_pushnumber
	ret.32      $1


rol:
.L4257:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r18008 <- barg
	push.64*    %arg1
	push.32     $2
	call.32     %r18010 <- barg
	and.32      %r18011 <- %r18010, $31
	shl.32      %r18015 <- %r18008, %r18011
	sub.32      %r18018 <- $32, %r18011
	lsr.32      %r18019 <- %r18008, %r18018
	or.32       %r18020 <- %r18015, %r18019
	fpcast.f64  %r18022 <- (32) %r18020
	push.64*    %arg1
	push.f64    %r18022
	call        lua_pushnumber
	ret.32      $1


ror:
.L4259:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r18025 <- barg
	push.64*    %arg1
	push.32     $2
	call.32     %r18027 <- barg
	and.32      %r18028 <- %r18027, $31
	lsr.32      %r18032 <- %r18025, %r18028
	sub.32      %r18035 <- $32, %r18028
	shl.32      %r18036 <- %r18025, %r18035
	or.32       %r18037 <- %r18032, %r18036
	fpcast.f64  %r18039 <- (32) %r18037
	push.64*    %arg1
	push.f64    %r18039
	call        lua_pushnumber
	ret.32      $1


bswap:
.L4261:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r18042 <- barg
	lsr.32      %r18044 <- %r18042, $24
	lsr.32      %r18046 <- %r18042, $8
	and.32      %r18047 <- %r18046, $0xff00
	or.32       %r18048 <- %r18044, %r18047
	and.32      %r18050 <- %r18042, $0xff00
	shl.32      %r18051 <- %r18050, $8
	or.32       %r18052 <- %r18048, %r18051
	shl.32      %r18054 <- %r18042, $24
	or.32       %r18055 <- %r18052, %r18054
	fpcast.f64  %r18059 <- (32) %r18055
	push.64*    %arg1
	push.f64    %r18059
	call        lua_pushnumber
	ret.32      $1


tohex:
.L4263:
	<entry-point>
	push.64*    %arg1
	push.32     $1
	call.32     %r18062(b) <- barg
	push.64*    %arg1
	push.32     $2
	call.32     %r18064 <- lua_type
	seteq.32    %r18065 <- %r18064, $0xffffffff
	phisrc.32   %phi7603(b) <- %r18062(b)
	cbr         %r18065, .L4264, .L4265

.L4264:
	phisrc.32   %phi7597 <- $8
	br          .L4266

.L4265:
	push.64*    %arg1
	push.32     $2
	call.32     %r18067 <- barg
	phisrc.32   %phi7598 <- %r18067
	br          .L4266

.L4266:
	phi.32      %r18069 <- %phi7597, %phi7598
	symaddr.64* %r18070(hexdigits) <- <anon symbol:0x1bfe960>
	setlt.32    %r18072 <- %r18069, $0
	phisrc.32   %phi7608(n) <- %r18069
	phisrc.64*  %phi7611(hexdigits) <- %r18070(hexdigits)
	cbr         %r18072, .L4267, .L4268

.L4267:
	neg.32      %r18074 <- %r18069
	symaddr.64* %r18075 <- <anon symbol:0x1bfed00>
	phisrc.32   %phi7609(n) <- %r18074
	phisrc.64*  %phi7612(hexdigits) <- %r18075
	br          .L4268

.L4268:
	phi.32      %r18076(n) <- %phi7608(n), %phi7609(n)
	setgt.32    %r18077 <- %r18076(n), $8
	select.32   %r18078(n) <- %r18077, $8, %r18076(n)
	phisrc.32   %phi7614(i) <- %r18078(n)
	br          .L4274

.L4274:
	phi.32      %r18080 <- %phi7614(i), %phi7615(i)
	add.32      %r18081(i) <- %r18080, $-1
	setge.32    %r18082 <- %r18081(i), $0
	phisrc.32   %phi7615(i) <- %r18081(i)
	symaddr.64* %r18090 <- buf
	cbr         %r18082, .L4271, .L4273

.L4271:
	phi.64*     %r18083 <- %phi7611(hexdigits), %phi7612(hexdigits)
	phi.32      %r18084 <- %phi7603(b), %phi7604(b)
	and.32      %r18085 <- %r18084, $15
	cast.64     %r18086 <- (32) %r18085
	add.64*     %r18087 <- %r18083, %r18086
	load.8      %r18088 <- 0[%r18087]
	scast.64    %r18092 <- (32) %r18081(i)
	add.64*     %r18093 <- %r18090, %r18092
	store.8     %r18088 -> 0[%r18093]
	lsr.32      %r18096 <- %r18084, $4
	phisrc.32   %phi7604(b) <- %r18096
	br          .L4274

.L4273:
	scast.64    %r18101 <- (32) %r18078(n)
	push.64*    %arg1
	push.64*    %r18090
	push.64     %r18101
	call        lua_pushlstring
	ret.32      $1


init_globals:
.L4276:
	<entry-point>
	store.64*   $0 -> 0[luaO_nilobject_]
	store.32    $0 -> 8[luaO_nilobject_]
	store.8     $0 -> 0[log_2]
	store.8     $1 -> 1[log_2]
	store.8     $2 -> 2[log_2]
	store.8     $2 -> 3[log_2]
	store.8     $3 -> 4[log_2]
	store.8     $3 -> 5[log_2]
	store.8     $3 -> 6[log_2]
	store.8     $3 -> 7[log_2]
	store.8     $4 -> 8[log_2]
	store.8     $4 -> 9[log_2]
	store.8     $4 -> 10[log_2]
	store.8     $4 -> 11[log_2]
	store.8     $4 -> 12[log_2]
	store.8     $4 -> 13[log_2]
	store.8     $4 -> 14[log_2]
	store.8     $4 -> 15[log_2]
	store.8     $5 -> 16[log_2]
	store.8     $5 -> 17[log_2]
	store.8     $5 -> 18[log_2]
	store.8     $5 -> 19[log_2]
	store.8     $5 -> 20[log_2]
	store.8     $5 -> 21[log_2]
	store.8     $5 -> 22[log_2]
	store.8     $5 -> 23[log_2]
	store.8     $5 -> 24[log_2]
	store.8     $5 -> 25[log_2]
	store.8     $5 -> 26[log_2]
	store.8     $5 -> 27[log_2]
	store.8     $5 -> 28[log_2]
	store.8     $5 -> 29[log_2]
	store.8     $5 -> 30[log_2]
	store.8     $5 -> 31[log_2]
	store.8     $6 -> 32[log_2]
	store.8     $6 -> 33[log_2]
	store.8     $6 -> 34[log_2]
	store.8     $6 -> 35[log_2]
	store.8     $6 -> 36[log_2]
	store.8     $6 -> 37[log_2]
	store.8     $6 -> 38[log_2]
	store.8     $6 -> 39[log_2]
	store.8     $6 -> 40[log_2]
	store.8     $6 -> 41[log_2]
	store.8     $6 -> 42[log_2]
	store.8     $6 -> 43[log_2]
	store.8     $6 -> 44[log_2]
	store.8     $6 -> 45[log_2]
	store.8     $6 -> 46[log_2]
	store.8     $6 -> 47[log_2]
	store.8     $6 -> 48[log_2]
	store.8     $6 -> 49[log_2]
	store.8     $6 -> 50[log_2]
	store.8     $6 -> 51[log_2]
	store.8     $6 -> 52[log_2]
	store.8     $6 -> 53[log_2]
	store.8     $6 -> 54[log_2]
	store.8     $6 -> 55[log_2]
	store.8     $6 -> 56[log_2]
	store.8     $6 -> 57[log_2]
	store.8     $6 -> 58[log_2]
	store.8     $6 -> 59[log_2]
	store.8     $6 -> 60[log_2]
	store.8     $6 -> 61[log_2]
	store.8     $6 -> 62[log_2]
	store.8     $6 -> 63[log_2]
	store.8     $7 -> 64[log_2]
	store.8     $7 -> 65[log_2]
	store.8     $7 -> 66[log_2]
	store.8     $7 -> 67[log_2]
	store.8     $7 -> 68[log_2]
	store.8     $7 -> 69[log_2]
	store.8     $7 -> 70[log_2]
	store.8     $7 -> 71[log_2]
	store.8     $7 -> 72[log_2]
	store.8     $7 -> 73[log_2]
	store.8     $7 -> 74[log_2]
	store.8     $7 -> 75[log_2]
	store.8     $7 -> 76[log_2]
	store.8     $7 -> 77[log_2]
	store.8     $7 -> 78[log_2]
	store.8     $7 -> 79[log_2]
	store.8     $7 -> 80[log_2]
	store.8     $7 -> 81[log_2]
	store.8     $7 -> 82[log_2]
	store.8     $7 -> 83[log_2]
	store.8     $7 -> 84[log_2]
	store.8     $7 -> 85[log_2]
	store.8     $7 -> 86[log_2]
	store.8     $7 -> 87[log_2]
	store.8     $7 -> 88[log_2]
	store.8     $7 -> 89[log_2]
	store.8     $7 -> 90[log_2]
	store.8     $7 -> 91[log_2]
	store.8     $7 -> 92[log_2]
	store.8     $7 -> 93[log_2]
	store.8     $7 -> 94[log_2]
	store.8     $7 -> 95[log_2]
	store.8     $7 -> 96[log_2]
	store.8     $7 -> 97[log_2]
	store.8     $7 -> 98[log_2]
	store.8     $7 -> 99[log_2]
	store.8     $7 -> 100[log_2]
	store.8     $7 -> 101[log_2]
	store.8     $7 -> 102[log_2]
	store.8     $7 -> 103[log_2]
	store.8     $7 -> 104[log_2]
	store.8     $7 -> 105[log_2]
	store.8     $7 -> 106[log_2]
	store.8     $7 -> 107[log_2]
	store.8     $7 -> 108[log_2]
	store.8     $7 -> 109[log_2]
	store.8     $7 -> 110[log_2]
	store.8     $7 -> 111[log_2]
	store.8     $7 -> 112[log_2]
	store.8     $7 -> 113[log_2]
	store.8     $7 -> 114[log_2]
	store.8     $7 -> 115[log_2]
	store.8     $7 -> 116[log_2]
	store.8     $7 -> 117[log_2]
	store.8     $7 -> 118[log_2]
	store.8     $7 -> 119[log_2]
	store.8     $7 -> 120[log_2]
	store.8     $7 -> 121[log_2]
	store.8     $7 -> 122[log_2]
	store.8     $7 -> 123[log_2]
	store.8     $7 -> 124[log_2]
	store.8     $7 -> 125[log_2]
	store.8     $7 -> 126[log_2]
	store.8     $7 -> 127[log_2]
	store.8     $8 -> 128[log_2]
	store.8     $8 -> 129[log_2]
	store.8     $8 -> 130[log_2]
	store.8     $8 -> 131[log_2]
	store.8     $8 -> 132[log_2]
	store.8     $8 -> 133[log_2]
	store.8     $8 -> 134[log_2]
	store.8     $8 -> 135[log_2]
	store.8     $8 -> 136[log_2]
	store.8     $8 -> 137[log_2]
	store.8     $8 -> 138[log_2]
	store.8     $8 -> 139[log_2]
	store.8     $8 -> 140[log_2]
	store.8     $8 -> 141[log_2]
	store.8     $8 -> 142[log_2]
	store.8     $8 -> 143[log_2]
	store.8     $8 -> 144[log_2]
	store.8     $8 -> 145[log_2]
	store.8     $8 -> 146[log_2]
	store.8     $8 -> 147[log_2]
	store.8     $8 -> 148[log_2]
	store.8     $8 -> 149[log_2]
	store.8     $8 -> 150[log_2]
	store.8     $8 -> 151[log_2]
	store.8     $8 -> 152[log_2]
	store.8     $8 -> 153[log_2]
	store.8     $8 -> 154[log_2]
	store.8     $8 -> 155[log_2]
	store.8     $8 -> 156[log_2]
	store.8     $8 -> 157[log_2]
	store.8     $8 -> 158[log_2]
	store.8     $8 -> 159[log_2]
	store.8     $8 -> 160[log_2]
	store.8     $8 -> 161[log_2]
	store.8     $8 -> 162[log_2]
	store.8     $8 -> 163[log_2]
	store.8     $8 -> 164[log_2]
	store.8     $8 -> 165[log_2]
	store.8     $8 -> 166[log_2]
	store.8     $8 -> 167[log_2]
	store.8     $8 -> 168[log_2]
	store.8     $8 -> 169[log_2]
	store.8     $8 -> 170[log_2]
	store.8     $8 -> 171[log_2]
	store.8     $8 -> 172[log_2]
	store.8     $8 -> 173[log_2]
	store.8     $8 -> 174[log_2]
	store.8     $8 -> 175[log_2]
	store.8     $8 -> 176[log_2]
	store.8     $8 -> 177[log_2]
	store.8     $8 -> 178[log_2]
	store.8     $8 -> 179[log_2]
	store.8     $8 -> 180[log_2]
	store.8     $8 -> 181[log_2]
	store.8     $8 -> 182[log_2]
	store.8     $8 -> 183[log_2]
	store.8     $8 -> 184[log_2]
	store.8     $8 -> 185[log_2]
	store.8     $8 -> 186[log_2]
	store.8     $8 -> 187[log_2]
	store.8     $8 -> 188[log_2]
	store.8     $8 -> 189[log_2]
	store.8     $8 -> 190[log_2]
	store.8     $8 -> 191[log_2]
	store.8     $8 -> 192[log_2]
	store.8     $8 -> 193[log_2]
	store.8     $8 -> 194[log_2]
	store.8     $8 -> 195[log_2]
	store.8     $8 -> 196[log_2]
	store.8     $8 -> 197[log_2]
	store.8     $8 -> 198[log_2]
	store.8     $8 -> 199[log_2]
	store.8     $8 -> 200[log_2]
	store.8     $8 -> 201[log_2]
	store.8     $8 -> 202[log_2]
	store.8     $8 -> 203[log_2]
	store.8     $8 -> 204[log_2]
	store.8     $8 -> 205[log_2]
	store.8     $8 -> 206[log_2]
	store.8     $8 -> 207[log_2]
	store.8     $8 -> 208[log_2]
	store.8     $8 -> 209[log_2]
	store.8     $8 -> 210[log_2]
	store.8     $8 -> 211[log_2]
	store.8     $8 -> 212[log_2]
	store.8     $8 -> 213[log_2]
	store.8     $8 -> 214[log_2]
	store.8     $8 -> 215[log_2]
	store.8     $8 -> 216[log_2]
	store.8     $8 -> 217[log_2]
	store.8     $8 -> 218[log_2]
	store.8     $8 -> 219[log_2]
	store.8     $8 -> 220[log_2]
	store.8     $8 -> 221[log_2]
	store.8     $8 -> 222[log_2]
	store.8     $8 -> 223[log_2]
	store.8     $8 -> 224[log_2]
	store.8     $8 -> 225[log_2]
	store.8     $8 -> 226[log_2]
	store.8     $8 -> 227[log_2]
	store.8     $8 -> 228[log_2]
	store.8     $8 -> 229[log_2]
	store.8     $8 -> 230[log_2]
	store.8     $8 -> 231[log_2]
	store.8     $8 -> 232[log_2]
	store.8     $8 -> 233[log_2]
	store.8     $8 -> 234[log_2]
	store.8     $8 -> 235[log_2]
	store.8     $8 -> 236[log_2]
	store.8     $8 -> 237[log_2]
	store.8     $8 -> 238[log_2]
	store.8     $8 -> 239[log_2]
	store.8     $8 -> 240[log_2]
	store.8     $8 -> 241[log_2]
	store.8     $8 -> 242[log_2]
	store.8     $8 -> 243[log_2]
	store.8     $8 -> 244[log_2]
	store.8     $8 -> 245[log_2]
	store.8     $8 -> 246[log_2]
	store.8     $8 -> 247[log_2]
	store.8     $8 -> 248[log_2]
	store.8     $8 -> 249[log_2]
	store.8     $8 -> 250[log_2]
	store.8     $8 -> 251[log_2]
	store.8     $8 -> 252[log_2]
	store.8     $8 -> 253[log_2]
	store.8     $8 -> 254[log_2]
	store.8     $8 -> 255[log_2]
	symaddr.64* %r19383 <- <anon symbol:0x1c3b508>
	store.64*   %r19383 -> 0[luaT_typenames]
	symaddr.64* %r19390 <- <anon symbol:0x1c3bb60>
	store.64*   %r19390 -> 8[luaT_typenames]
	symaddr.64* %r19397 <- <anon symbol:0x1c3c1b8>
	store.64*   %r19397 -> 16[luaT_typenames]
	symaddr.64* %r19404 <- <anon symbol:0x1c3c810>
	store.64*   %r19404 -> 24[luaT_typenames]
	symaddr.64* %r19411 <- <anon symbol:0x1c3ceb0>
	store.64*   %r19411 -> 32[luaT_typenames]
	symaddr.64* %r19418 <- <anon symbol:0x1c3d508>
	store.64*   %r19418 -> 40[luaT_typenames]
	symaddr.64* %r19425 <- <anon symbol:0x1c3db60>
	store.64*   %r19425 -> 48[luaT_typenames]
	symaddr.64* %r19432 <- <anon symbol:0x1c3e1b8>
	store.64*   %r19432 -> 56[luaT_typenames]
	symaddr.64* %r19439 <- <anon symbol:0x1c3e810>
	store.64*   %r19439 -> 64[luaT_typenames]
	symaddr.64* %r19446 <- <anon symbol:0x1c3ee68>
	store.64*   %r19446 -> 72[luaT_typenames]
	symaddr.64* %r19453 <- <anon symbol:0x1c3f4c0>
	store.64*   %r19453 -> 80[luaT_typenames]
	symaddr.64* %r19460 <- <anon symbol:0x1c3fb18>
	store.64*   %r19460 -> 0[luaT_eventname]
	symaddr.64* %r19467 <- <anon symbol:0x1c40170>
	store.64*   %r19467 -> 8[luaT_eventname]
	symaddr.64* %r19474 <- <anon symbol:0x1c407c8>
	store.64*   %r19474 -> 16[luaT_eventname]
	symaddr.64* %r19481 <- <anon symbol:0x1c40e20>
	store.64*   %r19481 -> 24[luaT_eventname]
	symaddr.64* %r19488 <- <anon symbol:0x1c41478>
	store.64*   %r19488 -> 32[luaT_eventname]
	symaddr.64* %r19495 <- <anon symbol:0x1c41ad0>
	store.64*   %r19495 -> 40[luaT_eventname]
	symaddr.64* %r19502 <- <anon symbol:0x1c42128>
	store.64*   %r19502 -> 48[luaT_eventname]
	symaddr.64* %r19509 <- <anon symbol:0x1c42780>
	store.64*   %r19509 -> 56[luaT_eventname]
	symaddr.64* %r19516 <- <anon symbol:0x1c42dd8>
	store.64*   %r19516 -> 64[luaT_eventname]
	symaddr.64* %r19523 <- <anon symbol:0x1c43430>
	store.64*   %r19523 -> 72[luaT_eventname]
	symaddr.64* %r19530 <- <anon symbol:0x1c43a88>
	store.64*   %r19530 -> 80[luaT_eventname]
	symaddr.64* %r19537 <- <anon symbol:0x1c440e0>
	store.64*   %r19537 -> 88[luaT_eventname]
	symaddr.64* %r19544 <- <anon symbol:0x1c44738>
	store.64*   %r19544 -> 96[luaT_eventname]
	symaddr.64* %r19551 <- <anon symbol:0x1c4cde8>
	store.64*   %r19551 -> 104[luaT_eventname]
	symaddr.64* %r19558 <- <anon symbol:0x1c4d440>
	store.64*   %r19558 -> 112[luaT_eventname]
	symaddr.64* %r19565 <- <anon symbol:0x1c4da98>
	store.64*   %r19565 -> 120[luaT_eventname]
	symaddr.64* %r19572 <- <anon symbol:0x1c4e0f0>
	store.64*   %r19572 -> 128[luaT_eventname]
	store.64*   $0 -> 32[dummynode_]
	store.32    $0 -> 24[dummynode_]
	store.64*   $0 -> 16[dummynode_]
	store.64*   $0 -> 0[dummynode_]
	store.32    $0 -> 8[dummynode_]
	store.8     $96 -> 0[luaP_opmodes]
	store.8     $113 -> 1[luaP_opmodes]
	store.8     $84 -> 2[luaP_opmodes]
	store.8     $96 -> 3[luaP_opmodes]
	store.8     $80 -> 4[luaP_opmodes]
	store.8     $113 -> 5[luaP_opmodes]
	store.8     $108 -> 6[luaP_opmodes]
	store.8     $49 -> 7[luaP_opmodes]
	store.8     $16 -> 8[luaP_opmodes]
	store.8     $60 -> 9[luaP_opmodes]
	store.8     $84 -> 10[luaP_opmodes]
	store.8     $108 -> 11[luaP_opmodes]
	store.8     $124 -> 12[luaP_opmodes]
	store.8     $124 -> 13[luaP_opmodes]
	store.8     $124 -> 14[luaP_opmodes]
	store.8     $124 -> 15[luaP_opmodes]
	store.8     $124 -> 16[luaP_opmodes]
	store.8     $124 -> 17[luaP_opmodes]
	store.8     $96 -> 18[luaP_opmodes]
	store.8     $96 -> 19[luaP_opmodes]
	store.8     $96 -> 20[luaP_opmodes]
	store.8     $104 -> 21[luaP_opmodes]
	store.8     $34 -> 22[luaP_opmodes]
	store.8     $188 -> 23[luaP_opmodes]
	store.8     $188 -> 24[luaP_opmodes]
	store.8     $188 -> 25[luaP_opmodes]
	store.8     $228 -> 26[luaP_opmodes]
	store.8     $228 -> 27[luaP_opmodes]
	store.8     $84 -> 28[luaP_opmodes]
	store.8     $84 -> 29[luaP_opmodes]
	store.8     $16 -> 30[luaP_opmodes]
	store.8     $98 -> 31[luaP_opmodes]
	store.8     $98 -> 32[luaP_opmodes]
	store.8     $132 -> 33[luaP_opmodes]
	store.8     $20 -> 34[luaP_opmodes]
	store.8     $0 -> 35[luaP_opmodes]
	store.8     $81 -> 36[luaP_opmodes]
	store.8     $80 -> 37[luaP_opmodes]
	symaddr.64* %r19769 <- <anon symbol:0x1c55c78>
	store.64*   %r19769 -> 0[luaX_tokens]
	symaddr.64* %r19776 <- <anon symbol:0x1c562d0>
	store.64*   %r19776 -> 8[luaX_tokens]
	symaddr.64* %r19783 <- <anon symbol:0x1c56928>
	store.64*   %r19783 -> 16[luaX_tokens]
	symaddr.64* %r19790 <- <anon symbol:0x1c56f80>
	store.64*   %r19790 -> 24[luaX_tokens]
	symaddr.64* %r19797 <- <anon symbol:0x1c575d8>
	store.64*   %r19797 -> 32[luaX_tokens]
	symaddr.64* %r19804 <- <anon symbol:0x1c57c30>
	store.64*   %r19804 -> 40[luaX_tokens]
	symaddr.64* %r19811 <- <anon symbol:0x1c58288>
	store.64*   %r19811 -> 48[luaX_tokens]
	symaddr.64* %r19818 <- <anon symbol:0x1c588e0>
	store.64*   %r19818 -> 56[luaX_tokens]
	symaddr.64* %r19825 <- <anon symbol:0x1c58f38>
	store.64*   %r19825 -> 64[luaX_tokens]
	symaddr.64* %r19832 <- <anon symbol:0x1c59590>
	store.64*   %r19832 -> 72[luaX_tokens]
	symaddr.64* %r19839 <- <anon symbol:0x1c59be8>
	store.64*   %r19839 -> 80[luaX_tokens]
	symaddr.64* %r19846 <- <anon symbol:0x1c5a240>
	store.64*   %r19846 -> 88[luaX_tokens]
	symaddr.64* %r19853 <- <anon symbol:0x1c5a898>
	store.64*   %r19853 -> 96[luaX_tokens]
	symaddr.64* %r19860 <- <anon symbol:0x1c5aef0>
	store.64*   %r19860 -> 104[luaX_tokens]
	symaddr.64* %r19867 <- <anon symbol:0x1c5b548>
	store.64*   %r19867 -> 112[luaX_tokens]
	symaddr.64* %r19874 <- <anon symbol:0x1c5bba0>
	store.64*   %r19874 -> 120[luaX_tokens]
	symaddr.64* %r19881 <- <anon symbol:0x1c5c1f8>
	store.64*   %r19881 -> 128[luaX_tokens]
	symaddr.64* %r19888 <- <anon symbol:0x1c5c850>
	store.64*   %r19888 -> 136[luaX_tokens]
	symaddr.64* %r19895 <- <anon symbol:0x1c5cef0>
	store.64*   %r19895 -> 144[luaX_tokens]
	symaddr.64* %r19902 <- <anon symbol:0x1c5d548>
	store.64*   %r19902 -> 152[luaX_tokens]
	symaddr.64* %r19909 <- <anon symbol:0x1c5dba0>
	store.64*   %r19909 -> 160[luaX_tokens]
	symaddr.64* %r19916 <- <anon symbol:0x1c5e1f8>
	store.64*   %r19916 -> 168[luaX_tokens]
	symaddr.64* %r19923 <- <anon symbol:0x1c5e850>
	store.64*   %r19923 -> 176[luaX_tokens]
	symaddr.64* %r19930 <- <anon symbol:0x1c5eea8>
	store.64*   %r19930 -> 184[luaX_tokens]
	symaddr.64* %r19937 <- <anon symbol:0x1c5f500>
	store.64*   %r19937 -> 192[luaX_tokens]
	symaddr.64* %r19944 <- <anon symbol:0x1c5fb58>
	store.64*   %r19944 -> 200[luaX_tokens]
	symaddr.64* %r19951 <- <anon symbol:0x1c601b0>
	store.64*   %r19951 -> 208[luaX_tokens]
	symaddr.64* %r19958 <- <anon symbol:0x1c60808>
	store.64*   %r19958 -> 216[luaX_tokens]
	symaddr.64* %r19965 <- <anon symbol:0x1c60e60>
	store.64*   %r19965 -> 224[luaX_tokens]
	symaddr.64* %r19972 <- <anon symbol:0x1c614b8>
	store.64*   %r19972 -> 232[luaX_tokens]
	symaddr.64* %r19979 <- <anon symbol:0x1c61b10>
	store.64*   %r19979 -> 240[luaX_tokens]
	store.64*   $0 -> 248[luaX_tokens]
	store.8     $6 -> 0[priority]
	store.8     $6 -> 1[priority]
	store.8     $6 -> 2[priority]
	store.8     $6 -> 3[priority]
	store.8     $7 -> 4[priority]
	store.8     $7 -> 5[priority]
	store.8     $7 -> 6[priority]
	store.8     $7 -> 7[priority]
	store.8     $7 -> 8[priority]
	store.8     $7 -> 9[priority]
	store.8     $10 -> 10[priority]
	store.8     $9 -> 11[priority]
	store.8     $5 -> 12[priority]
	store.8     $4 -> 13[priority]
	store.8     $3 -> 14[priority]
	store.8     $3 -> 15[priority]
	store.8     $3 -> 16[priority]
	store.8     $3 -> 17[priority]
	store.8     $3 -> 18[priority]
	store.8     $3 -> 19[priority]
	store.8     $3 -> 20[priority]
	store.8     $3 -> 21[priority]
	store.8     $3 -> 22[priority]
	store.8     $3 -> 23[priority]
	store.8     $3 -> 24[priority]
	store.8     $3 -> 25[priority]
	store.8     $2 -> 26[priority]
	store.8     $2 -> 27[priority]
	store.8     $1 -> 28[priority]
	store.8     $1 -> 29[priority]
	symaddr.64* %r20157 <- <anon symbol:0x1c6f608>
	store.64*   %r20157 -> 0[base_funcs]
	symaddr.64* %r20163 <- luaB_assert
	store.64*   %r20163 -> 8[base_funcs]
	symaddr.64* %r20171 <- <anon symbol:0x1c700e8>
	store.64*   %r20171 -> 16[base_funcs]
	symaddr.64* %r20177 <- luaB_error
	store.64*   %r20177 -> 24[base_funcs]
	symaddr.64* %r20185 <- <anon symbol:0x1c70bc8>
	store.64*   %r20185 -> 32[base_funcs]
	symaddr.64* %r20191 <- luaB_loadfile
	store.64*   %r20191 -> 40[base_funcs]
	symaddr.64* %r20199 <- <anon symbol:0x1c716a8>
	store.64*   %r20199 -> 48[base_funcs]
	symaddr.64* %r20205 <- luaB_loadstring
	store.64*   %r20205 -> 56[base_funcs]
	symaddr.64* %r20213 <- <anon symbol:0x1c72188>
	store.64*   %r20213 -> 64[base_funcs]
	symaddr.64* %r20219 <- luaB_next
	store.64*   %r20219 -> 72[base_funcs]
	symaddr.64* %r20227 <- <anon symbol:0x1c72c68>
	store.64*   %r20227 -> 80[base_funcs]
	symaddr.64* %r20233 <- luaB_pcall
	store.64*   %r20233 -> 88[base_funcs]
	symaddr.64* %r20241 <- <anon symbol:0x1c73748>
	store.64*   %r20241 -> 96[base_funcs]
	symaddr.64* %r20247 <- luaB_rawget
	store.64*   %r20247 -> 104[base_funcs]
	symaddr.64* %r20255 <- <anon symbol:0x1c74228>
	store.64*   %r20255 -> 112[base_funcs]
	symaddr.64* %r20261 <- luaB_setfenv
	store.64*   %r20261 -> 120[base_funcs]
	symaddr.64* %r20269 <- <anon symbol:0x24e5e30>
	store.64*   %r20269 -> 128[base_funcs]
	symaddr.64* %r20275 <- luaB_setmetatable
	store.64*   %r20275 -> 136[base_funcs]
	symaddr.64* %r20283 <- <anon symbol:0x24e6910>
	store.64*   %r20283 -> 144[base_funcs]
	symaddr.64* %r20289 <- luaB_tonumber
	store.64*   %r20289 -> 152[base_funcs]
	symaddr.64* %r20297 <- <anon symbol:0x24e73f0>
	store.64*   %r20297 -> 160[base_funcs]
	symaddr.64* %r20303 <- luaB_type
	store.64*   %r20303 -> 168[base_funcs]
	symaddr.64* %r20311 <- <anon symbol:0x24e7ed0>
	store.64*   %r20311 -> 176[base_funcs]
	symaddr.64* %r20317 <- luaB_unpack
	store.64*   %r20317 -> 184[base_funcs]
	store.64*   $0 -> 192[base_funcs]
	store.64*   $0 -> 200[base_funcs]
	symaddr.64* %r20335 <- <anon symbol:0x24e8f20>
	store.64*   %r20335 -> 0[tab_funcs]
	symaddr.64* %r20341 <- tconcat
	store.64*   %r20341 -> 8[tab_funcs]
	symaddr.64* %r20349 <- <anon symbol:0x24e9a00>
	store.64*   %r20349 -> 16[tab_funcs]
	symaddr.64* %r20355 <- tinsert
	store.64*   %r20355 -> 24[tab_funcs]
	symaddr.64* %r20363 <- <anon symbol:0x24ea4e0>
	store.64*   %r20363 -> 32[tab_funcs]
	symaddr.64* %r20369 <- tremove
	store.64*   %r20369 -> 40[tab_funcs]
	symaddr.64* %r20377 <- <anon symbol:0x24eafc0>
	store.64*   %r20377 -> 48[tab_funcs]
	symaddr.64* %r20383 <- sort
	store.64*   %r20383 -> 56[tab_funcs]
	store.64*   $0 -> 64[tab_funcs]
	store.64*   $0 -> 72[tab_funcs]
	symaddr.64* %r20401 <- <anon symbol:0x24ec010>
	store.64*   %r20401 -> 0[fnames]
	symaddr.64* %r20402 <- <anon symbol:0x24ec668>
	store.64*   %r20402 -> 8[fnames]
	symaddr.64* %r20403 <- <anon symbol:0x24eccc0>
	store.64*   %r20403 -> 0[iolib]
	symaddr.64* %r20409 <- io_close
	store.64*   %r20409 -> 8[iolib]
	symaddr.64* %r20417 <- <anon symbol:0x24ed7a0>
	store.64*   %r20417 -> 16[iolib]
	symaddr.64* %r20423 <- io_flush
	store.64*   %r20423 -> 24[iolib]
	symaddr.64* %r20431 <- <anon symbol:0x24f62d8>
	store.64*   %r20431 -> 32[iolib]
	symaddr.64* %r20437 <- io_input
	store.64*   %r20437 -> 40[iolib]
	symaddr.64* %r20445 <- <anon symbol:0x24f6db8>
	store.64*   %r20445 -> 48[iolib]
	symaddr.64* %r20451 <- io_lines
	store.64*   %r20451 -> 56[iolib]
	symaddr.64* %r20459 <- <anon symbol:0x24f7898>
	store.64*   %r20459 -> 64[iolib]
	symaddr.64* %r20465 <- io_open
	store.64*   %r20465 -> 72[iolib]
	symaddr.64* %r20473 <- <anon symbol:0x24f8378>
	store.64*   %r20473 -> 80[iolib]
	symaddr.64* %r20479 <- io_output
	store.64*   %r20479 -> 88[iolib]
	symaddr.64* %r20487 <- <anon symbol:0x24f8e58>
	store.64*   %r20487 -> 96[iolib]
	symaddr.64* %r20493 <- io_read
	store.64*   %r20493 -> 104[iolib]
	symaddr.64* %r20501 <- <anon symbol:0x24f9938>
	store.64*   %r20501 -> 112[iolib]
	symaddr.64* %r20507 <- io_type
	store.64*   %r20507 -> 120[iolib]
	symaddr.64* %r20515 <- <anon symbol:0x24fa418>
	store.64*   %r20515 -> 128[iolib]
	symaddr.64* %r20521 <- io_write
	store.64*   %r20521 -> 136[iolib]
	store.64*   $0 -> 144[iolib]
	store.64*   $0 -> 152[iolib]
	symaddr.64* %r20539 <- <anon symbol:0x24fb468>
	store.64*   %r20539 -> 0[flib]
	store.64*   %r20409 -> 8[flib]
	symaddr.64* %r20553 <- <anon symbol:0x24fbf48>
	store.64*   %r20553 -> 16[flib]
	symaddr.64* %r20559 <- f_flush
	store.64*   %r20559 -> 24[flib]
	symaddr.64* %r20567 <- <anon symbol:0x24fca28>
	store.64*   %r20567 -> 32[flib]
	symaddr.64* %r20573 <- f_lines
	store.64*   %r20573 -> 40[flib]
	symaddr.64* %r20581 <- <anon symbol:0x24fd508>
	store.64*   %r20581 -> 48[flib]
	symaddr.64* %r20587 <- f_read
	store.64*   %r20587 -> 56[flib]
	symaddr.64* %r20595 <- <anon symbol:0x24fe030>
	store.64*   %r20595 -> 64[flib]
	symaddr.64* %r20601 <- f_write
	store.64*   %r20601 -> 72[flib]
	symaddr.64* %r20609 <- <anon symbol:0x24feb10>
	store.64*   %r20609 -> 80[flib]
	symaddr.64* %r20615 <- io_gc
	store.64*   %r20615 -> 88[flib]
	store.64*   $0 -> 96[flib]
	store.64*   $0 -> 104[flib]
	symaddr.64* %r20633 <- <anon symbol:0x24ffb60>
	store.64*   %r20633 -> 0[syslib]
	symaddr.64* %r20639 <- os_exit
	store.64*   %r20639 -> 8[syslib]
	symaddr.64* %r20647 <- <anon symbol:0x2500640>
	store.64*   %r20647 -> 16[syslib]
	symaddr.64* %r20653 <- os_remove
	store.64*   %r20653 -> 24[syslib]
	store.64*   $0 -> 32[syslib]
	store.64*   $0 -> 40[syslib]
	symaddr.64* %r20671 <- <anon symbol:0x2501690>
	store.64*   %r20671 -> 0[strlib]
	symaddr.64* %r20677 <- str_byte
	store.64*   %r20677 -> 8[strlib]
	symaddr.64* %r20685 <- <anon symbol:0x2502170>
	store.64*   %r20685 -> 16[strlib]
	symaddr.64* %r20691 <- str_char
	store.64*   %r20691 -> 24[strlib]
	symaddr.64* %r20699 <- <anon symbol:0x2502c50>
	store.64*   %r20699 -> 32[strlib]
	symaddr.64* %r20705 <- str_find
	store.64*   %r20705 -> 40[strlib]
	symaddr.64* %r20713 <- <anon symbol:0x2503730>
	store.64*   %r20713 -> 48[strlib]
	symaddr.64* %r20719 <- str_format
	store.64*   %r20719 -> 56[strlib]
	symaddr.64* %r20727 <- <anon symbol:0x2504210>
	store.64*   %r20727 -> 64[strlib]
	symaddr.64* %r20733 <- gmatch
	store.64*   %r20733 -> 72[strlib]
	symaddr.64* %r20741 <- <anon symbol:0x2504cf0>
	store.64*   %r20741 -> 80[strlib]
	symaddr.64* %r20747 <- str_gsub
	store.64*   %r20747 -> 88[strlib]
	symaddr.64* %r20755 <- <anon symbol:0x25057d0>
	store.64*   %r20755 -> 96[strlib]
	symaddr.64* %r20761 <- str_lower
	store.64*   %r20761 -> 104[strlib]
	symaddr.64* %r20769 <- <anon symbol:0x250e308>
	store.64*   %r20769 -> 112[strlib]
	symaddr.64* %r20775 <- str_match
	store.64*   %r20775 -> 120[strlib]
	symaddr.64* %r20783 <- <anon symbol:0x250ede8>
	store.64*   %r20783 -> 128[strlib]
	symaddr.64* %r20789 <- str_rep
	store.64*   %r20789 -> 136[strlib]
	symaddr.64* %r20797 <- <anon symbol:0x250f8c8>
	store.64*   %r20797 -> 144[strlib]
	symaddr.64* %r20803 <- str_sub
	store.64*   %r20803 -> 152[strlib]
	symaddr.64* %r20811 <- <anon symbol:0x25103a8>
	store.64*   %r20811 -> 160[strlib]
	symaddr.64* %r20817 <- str_upper
	store.64*   %r20817 -> 168[strlib]
	store.64*   $0 -> 176[strlib]
	store.64*   $0 -> 184[strlib]
	symaddr.64* %r20835 <- <anon symbol:0x25113f8>
	store.64*   %r20835 -> 0[lualibs]
	symaddr.64* %r20841 <- luaopen_base
	store.64*   %r20841 -> 8[lualibs]
	symaddr.64* %r20849 <- <anon symbol:0x2511ed8>
	store.64*   %r20849 -> 16[lualibs]
	symaddr.64* %r20855 <- luaopen_table
	store.64*   %r20855 -> 24[lualibs]
	symaddr.64* %r20863 <- <anon symbol:0x25129b8>
	store.64*   %r20863 -> 32[lualibs]
	symaddr.64* %r20869 <- luaopen_io
	store.64*   %r20869 -> 40[lualibs]
	symaddr.64* %r20877 <- <anon symbol:0x2513498>
	store.64*   %r20877 -> 48[lualibs]
	symaddr.64* %r20883 <- luaopen_os
	store.64*   %r20883 -> 56[lualibs]
	symaddr.64* %r20891 <- <anon symbol:0x2513f78>
	store.64*   %r20891 -> 64[lualibs]
	symaddr.64* %r20897 <- luaopen_string
	store.64*   %r20897 -> 72[lualibs]
	store.64*   $0 -> 80[lualibs]
	store.64*   $0 -> 88[lualibs]
	symaddr.64* %r20915 <- <anon symbol:0x2514fc8>
	store.64*   %r20915 -> 0[bitlib]
	symaddr.64* %r20921 <- tobit
	store.64*   %r20921 -> 8[bitlib]
	symaddr.64* %r20929 <- <anon symbol:0x2515aa8>
	store.64*   %r20929 -> 16[bitlib]
	symaddr.64* %r20935 <- bnot
	store.64*   %r20935 -> 24[bitlib]
	symaddr.64* %r20943 <- <anon symbol:0x25165d0>
	store.64*   %r20943 -> 32[bitlib]
	symaddr.64* %r20949 <- band
	store.64*   %r20949 -> 40[bitlib]
	symaddr.64* %r20957 <- <anon symbol:0x25170b0>
	store.64*   %r20957 -> 48[bitlib]
	symaddr.64* %r20963 <- bor
	store.64*   %r20963 -> 56[bitlib]
	symaddr.64* %r20971 <- <anon symbol:0x2517b90>
	store.64*   %r20971 -> 64[bitlib]
	symaddr.64* %r20977 <- bxor
	store.64*   %r20977 -> 72[bitlib]
	symaddr.64* %r20985 <- <anon symbol:0x2518670>
	store.64*   %r20985 -> 80[bitlib]
	symaddr.64* %r20991 <- lshift
	store.64*   %r20991 -> 88[bitlib]
	symaddr.64* %r20999 <- <anon symbol:0x2519150>
	store.64*   %r20999 -> 96[bitlib]
	symaddr.64* %r21005 <- rshift
	store.64*   %r21005 -> 104[bitlib]
	symaddr.64* %r21013 <- <anon symbol:0x2519c30>
	store.64*   %r21013 -> 112[bitlib]
	symaddr.64* %r21019 <- arshift
	store.64*   %r21019 -> 120[bitlib]
	symaddr.64* %r21027 <- <anon symbol:0x251a710>
	store.64*   %r21027 -> 128[bitlib]
	symaddr.64* %r21033 <- rol
	store.64*   %r21033 -> 136[bitlib]
	symaddr.64* %r21041 <- <anon symbol:0x251b1f0>
	store.64*   %r21041 -> 144[bitlib]
	symaddr.64* %r21047 <- ror
	store.64*   %r21047 -> 152[bitlib]
	symaddr.64* %r21055 <- <anon symbol:0x251bcd0>
	store.64*   %r21055 -> 160[bitlib]
	symaddr.64* %r21061 <- bswap
	store.64*   %r21061 -> 168[bitlib]
	symaddr.64* %r21069 <- <anon symbol:0x251c7b0>
	store.64*   %r21069 -> 176[bitlib]
	symaddr.64* %r21075 <- tohex
	store.64*   %r21075 -> 184[bitlib]
	store.64*   $0 -> 192[bitlib]
	store.64*   $0 -> 200[bitlib]
	ret


main:
.L4278:
	<entry-point>
	call        init_globals
	call.64*    %r21093 <- luaL_newstate
	push.64*    %r21093
	call        luaL_openlibs
	symaddr.64* %r21096 <- <anon symbol:0x251d548>
	symaddr.64* %r21097 <- bitlib
	push.64*    %r21093
	push.64*    %r21096
	push.64*    %r21097
	call        luaL_register
	setlt.32    %r21099 <- %arg1, $2
	cbr         %r21099, .L4279, .L4280

.L4279:
	phisrc.32   %phi7616(return) <- $8
	br          .L4281

.L4280:
	push.64*    %r21093
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r21104 <- 8[%arg2]
	push.64*    %r21093
	push.64*    %r21104
	call        lua_pushstring
	push.64*    %r21093
	push.32     $0xfffffffe
	push.32     $0
	call        lua_rawseti
	symaddr.64* %r21107 <- <anon symbol:0x2525bf8>
	push.64*    %r21093
	push.32     $0xffffd8ee
	push.64*    %r21107
	call        lua_setfield
	load.64*    %r21110 <- 8[%arg2]
	push.64*    %r21093
	push.64*    %r21110
	call.32     %r21111 <- luaL_loadfile
	cbr         %r21111, .L4284, .L4283

.L4283:
	phisrc.32   %phi7632(i) <- $2
	br          .L4288

.L4288:
	phi.32      %r21112(i) <- %phi7632(i), %phi7633(i)
	setlt.32    %r21114 <- %r21112(i), %arg1
	cbr         %r21114, .L4285, .L4287

.L4285:
	scast.64    %r21118 <- (32) %r21112(i)
	muls.64     %r21119 <- %r21118, $8
	add.64*     %r21120 <- %arg2, %r21119
	load.64*    %r21121 <- 0[%r21120]
	push.64*    %r21093
	push.64*    %r21121
	call        lua_pushstring
	add.32      %r21123 <- %r21112(i), $1
	phisrc.32   %phi7633(i) <- %r21123
	br          .L4288

.L4287:
	add.32      %r21126 <- %arg1, $-2
	push.64*    %r21093
	push.32     %r21126
	push.32     $0
	push.32     $0
	call.32     %r21127 <- lua_pcall
	cbr         %r21127, .L4284, .L4290

.L4284:
	load.64*    %r21128 <- 0[stderr]
	symaddr.64* %r21129 <- <anon symbol:0x2526168>
	push.64*    %r21093
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r21131 <- lua_tolstring
	push.64*    %r21128
	push.64*    %r21129
	push.64*    %r21131
	call.32     %r21132 <- fprintf
	phisrc.32   %phi7617(return) <- $1
	br          .L4281

.L4290:
	push.64*    %r21093
	call        lua_close
	phisrc.32   %phi7618(return) <- $0
	br          .L4281

.L4281:
	phi.32      %r21100 <- %phi7616(return), %phi7617(return), %phi7618(return)
	ret.32      %r21100


