luaM_growaux_:
.L0:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[block]
	store.64*   %arg3 -> 0[size]
	store.64    %arg4 -> 0[size_elems]
	store.32    %arg5 -> 0[limit]
	store.64*   %arg6 -> 0[errormsg]
	load.64*    %r1 <- 0[size]
	load.32     %r2 <- 0[%r1]
	load.32     %r3 <- 0[limit]
	divs.32     %r4 <- %r3, $2
	setge.32    %r5 <- %r2, %r4
	br          %r5, .L1, .L2

.L1:
	load.64*    %r6 <- 0[size]
	load.32     %r7 <- 0[%r6]
	load.32     %r8 <- 0[limit]
	setge.32    %r9 <- %r7, %r8
	br          %r9, .L3, .L4

.L3:
	load.64*    %r10 <- 0[L]
	load.64*    %r11 <- 0[errormsg]
	push.64*    %r10
	push.64*    %r11
	call        luaG_runerror
	br          .L4

.L4:
	load.32     %r12 <- 0[limit]
	store.32    %r12 -> 0[newsize]
	br          .L5

.L2:
	load.64*    %r13 <- 0[size]
	load.32     %r14 <- 0[%r13]
	muls.32     %r15 <- %r14, $2
	store.32    %r15 -> 0[newsize]
	load.32     %r16 <- 0[newsize]
	setlt.32    %r17 <- %r16, $4
	br          %r17, .L6, .L7

.L6:
	store.32    $4 -> 0[newsize]
	br          .L7

.L7:
	br          .L5

.L5:
	load.32     %r18 <- 0[newsize]
	add.32      %r19 <- %r18, $1
	scast.64    %r20 <- (32) %r19
	load.64     %r21 <- 0[size_elems]
	divu.64     %r22 <- $-3, %r21
	setbe.32    %r23 <- %r20, %r22
	br          %r23, .L8, .L9

.L8:
	load.64*    %r24 <- 0[L]
	load.64*    %r25 <- 0[block]
	load.64*    %r26 <- 0[size]
	load.32     %r27 <- 0[%r26]
	scast.64    %r28 <- (32) %r27
	load.64     %r29 <- 0[size_elems]
	mulu.64     %r30 <- %r28, %r29
	load.32     %r31 <- 0[newsize]
	scast.64    %r32 <- (32) %r31
	load.64     %r33 <- 0[size_elems]
	mulu.64     %r34 <- %r32, %r33
	push.64*    %r24
	push.64*    %r25
	push.64     %r30
	push.64     %r34
	call.64*    %r35 <- luaM_realloc_
	phisrc.64*  %phi1 <- %r35
	br          .L10

.L9:
	load.64*    %r36 <- 0[L]
	push.64*    %r36
	call.64*    %r37 <- luaM_toobig
	cast.64*    %r38 <- (64) %r37
	phisrc.64*  %phi2 <- %r38
	br          .L10

.L10:
	phi.64*     %r39 <- %phi1, %phi2
	store.64*   %r39 -> 0[newblock]
	load.32     %r40 <- 0[newsize]
	load.64*    %r41 <- 0[size]
	store.32    %r40 -> 0[%r41]
	load.64*    %r42 <- 0[newblock]
	phisrc.64*  %phi3(return) <- %r42
	br          .L11

.L11:
	phi.64*     %r43 <- %phi3(return)
	ret.64*     %r42


luaM_toobig:
.L12:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r44 <- 0[L]
	symaddr.64* %r45 <- <anon symbol:0x62d0010eaef8>
	push.64*    %r44
	push.64*    %r45
	call        luaG_runerror
	phisrc.64*  %phi4(return) <- $0
	br          .L13

.L13:
	phi.64*     %r46 <- %phi4(return)
	ret.64*     $0


luaM_realloc_:
.L14:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[block]
	store.64    %arg3 -> 0[osize]
	store.64    %arg4 -> 0[nsize]
	load.64*    %r47 <- 0[L]
	load.64*    %r48 <- 32[%r47]
	store.64*   %r48 -> 0[g]
	load.64*    %r49 <- 0[g]
	load.64*    %r50 <- 24[%r49]
	load.64*    %r51 <- 0[block]
	load.64     %r52 <- 0[osize]
	load.64     %r53 <- 0[nsize]
	push.64*    %r50
	push.64*    %r51
	push.64     %r52
	push.64     %r53
	load.64*    %r54 <- 0[g]
	load.64*    %r55 <- 16[%r54]
	call.64*    %r56 <- %r55
	store.64*   %r56 -> 0[block]
	load.64*    %r57 <- 0[block]
	seteq.32    %r58 <- %r57, $0
	load.64     %r59 <- 0[nsize]
	seta.32     %r60 <- %r59, $0
	and-bool.32 %r61 <- %r58, %r60
	br          %r61, .L15, .L16

.L15:
	load.64*    %r62 <- 0[L]
	push.64*    %r62
	push.32     $4
	call        luaD_throw
	br          .L16

.L16:
	load.64*    %r63 <- 0[g]
	load.64     %r64 <- 120[%r63]
	load.64     %r65 <- 0[osize]
	sub.64      %r66 <- %r64, %r65
	load.64     %r67 <- 0[nsize]
	add.64      %r68 <- %r66, %r67
	load.64*    %r69 <- 0[g]
	store.64    %r68 -> 120[%r69]
	load.64*    %r70 <- 0[block]
	phisrc.64*  %phi5(return) <- %r70
	br          .L17

.L17:
	phi.64*     %r71 <- %phi5(return)
	ret.64*     %r70


luaO_int2fb:
.L18:
	<entry-point>
	store.32    %arg1 -> 0[x]
	store.32    $0 -> 0[e]
	br          .L22

.L22:
	load.32     %r72 <- 0[x]
	setae.32    %r73 <- %r72, $16
	br          %r73, .L19, .L21

.L19:
	load.32     %r74 <- 0[x]
	add.32      %r75 <- %r74, $1
	lsr.32      %r76 <- %r75, $1
	store.32    %r76 -> 0[x]
	load.32     %r77 <- 0[e]
	add.32      %r78 <- %r77, $1
	store.32    %r78 -> 0[e]
	br          .L20

.L20:
	br          .L22

.L21:
	load.32     %r79 <- 0[x]
	setb.32     %r80 <- %r79, $8
	br          %r80, .L23, .L24

.L23:
	load.32     %r81 <- 0[x]
	cast.32     %r82 <- (32) %r81
	phisrc.32   %phi6(return) <- %r82
	br          .L25

.L24:
	load.32     %r84 <- 0[e]
	add.32      %r85 <- %r84, $1
	shl.32      %r86 <- %r85, $3
	load.32     %r87 <- 0[x]
	cast.32     %r88 <- (32) %r87
	sub.32      %r89 <- %r88, $8
	or.32       %r90 <- %r86, %r89
	phisrc.32   %phi7(return) <- %r90
	br          .L25

.L25:
	phi.32      %r83 <- %phi6(return), %phi7(return)
	ret.32      %r83


luaO_fb2int:
.L27:
	<entry-point>
	store.32    %arg1 -> 0[x]
	load.32     %r91 <- 0[x]
	asr.32      %r92 <- %r91, $3
	and.32      %r93 <- %r92, $31
	store.32    %r93 -> 0[e]
	load.32     %r94 <- 0[e]
	seteq.32    %r95 <- %r94, $0
	br          %r95, .L28, .L29

.L28:
	load.32     %r96 <- 0[x]
	phisrc.32   %phi8(return) <- %r96
	br          .L30

.L29:
	load.32     %r98 <- 0[x]
	and.32      %r99 <- %r98, $7
	add.32      %r100 <- %r99, $8
	load.32     %r101 <- 0[e]
	sub.32      %r102 <- %r101, $1
	shl.32      %r103 <- %r100, %r102
	phisrc.32   %phi9(return) <- %r103
	br          .L30

.L30:
	phi.32      %r97 <- %phi8(return), %phi9(return)
	ret.32      %r97


luaO_log2:
.L32:
	<entry-point>
	store.32    %arg1 -> 0[x]
	store.32    $0xffffffff -> 0[l]
	br          .L36

.L36:
	load.32     %r104 <- 0[x]
	setae.32    %r105 <- %r104, $256
	br          %r105, .L33, .L35

.L33:
	load.32     %r106 <- 0[l]
	scast.32    %r107 <- (32) %r106
	add.32      %r108 <- %r107, $8
	scast.32    %r109 <- (32) %r108
	store.32    %r109 -> 0[l]
	load.32     %r110 <- 0[x]
	cast.32     %r111 <- (32) %r110
	lsr.32      %r112 <- %r111, $8
	cast.32     %r113 <- (32) %r112
	store.32    %r113 -> 0[x]
	br          .L34

.L34:
	br          .L36

.L35:
	load.32     %r114 <- 0[l]
	symaddr.64* %r115 <- log_2
	load.32     %r116 <- 0[x]
	cast.64     %r117 <- (32) %r116
	add.64*     %r118 <- %r115, %r117
	load.8      %r119 <- 0[%r118]
	cast.32     %r120 <- (8) %r119
	add.32      %r121 <- %r114, %r120
	phisrc.32   %phi10(return) <- %r121
	br          .L37

.L37:
	phi.32      %r122 <- %phi10(return)
	ret.32      %r121


luaO_rawequalObj:
.L38:
	<entry-point>
	store.64*   %arg1 -> 0[t1]
	store.64*   %arg2 -> 0[t2]
	load.64*    %r123 <- 0[t1]
	load.32     %r124 <- 8[%r123]
	scast.32    %r125 <- (32) %r124
	load.64*    %r126 <- 0[t2]
	load.32     %r127 <- 8[%r126]
	scast.32    %r128 <- (32) %r127
	setne.32    %r129 <- %r125, %r128
	br          %r129, .L39, .L40

.L39:
	phisrc.32   %phi11(return) <- $0
	br          .L41

.L40:
	load.64*    %r131 <- 0[t1]
	load.32     %r132 <- 8[%r131]
	switch.32   %r132, 0 -> .L44, 1 -> .L46, 2 -> .L47, 3 -> .L45, default -> .L48

.L44:
	phisrc.32   %phi12(return) <- $1
	br          .L41

.L45:
	load.64*    %r133 <- 0[t1]
	load.f64    %r134 <- 0[%r133]
	fpcast.f64  %r135 <- (64) %r134
	load.64*    %r136 <- 0[t2]
	load.f64    %r137 <- 0[%r136]
	fpcast.f64  %r138 <- (64) %r137
	seteq.32    %r139 <- %r135, %r138
	phisrc.32   %phi13(return) <- %r139
	br          .L41

.L46:
	load.64*    %r140 <- 0[t1]
	load.32     %r141 <- 0[%r140]
	scast.32    %r142 <- (32) %r141
	load.64*    %r143 <- 0[t2]
	load.32     %r144 <- 0[%r143]
	scast.32    %r145 <- (32) %r144
	seteq.32    %r146 <- %r142, %r145
	phisrc.32   %phi14(return) <- %r146
	br          .L41

.L47:
	load.64*    %r147 <- 0[t1]
	load.64*    %r148 <- 0[%r147]
	load.64*    %r149 <- 0[t2]
	load.64*    %r150 <- 0[%r149]
	seteq.32    %r151 <- %r148, %r150
	phisrc.32   %phi15(return) <- %r151
	br          .L41

.L48:
	load.64*    %r152 <- 0[t1]
	load.64*    %r153 <- 0[%r152]
	load.64*    %r154 <- 0[t2]
	load.64*    %r155 <- 0[%r154]
	seteq.32    %r156 <- %r153, %r155
	phisrc.32   %phi16(return) <- %r156
	br          .L41

.L41:
	phi.32      %r130 <- %phi11(return), %phi12(return), %phi13(return), %phi14(return), %phi15(return), %phi16(return)
	ret.32      %r130


luaO_str2d:
.L49:
	<entry-point>
	store.64*   %arg1 -> 0[s]
	store.64*   %arg2 -> 0[result]
	load.64*    %r157 <- 0[s]
	symaddr.64* %r158 <- endptr
	push.64*    %r157
	push.64*    %r158
	call.f64    %r159 <- strtod
	load.64*    %r160 <- 0[result]
	store.f64   %r159 -> 0[%r160]
	load.64*    %r161 <- 0[endptr]
	load.64*    %r162 <- 0[s]
	seteq.32    %r163 <- %r161, %r162
	br          %r163, .L50, .L51

.L50:
	phisrc.32   %phi17(return) <- $0
	br          .L52

.L51:
	load.64*    %r165 <- 0[endptr]
	load.8      %r166 <- 0[%r165]
	scast.32    %r167 <- (8) %r166
	seteq.32    %r168 <- %r167, $120
	br          %r168, .L53, .L55

.L55:
	load.64*    %r169 <- 0[endptr]
	load.8      %r170 <- 0[%r169]
	scast.32    %r171 <- (8) %r170
	seteq.32    %r172 <- %r171, $88
	br          %r172, .L53, .L54

.L53:
	load.64*    %r173 <- 0[s]
	symaddr.64* %r174 <- endptr
	push.64*    %r173
	push.64*    %r174
	push.32     $16
	call.64     %r175 <- strtoul
	fpcast.f64  %r176 <- (64) %r175
	load.64*    %r177 <- 0[result]
	store.f64   %r176 -> 0[%r177]
	br          .L54

.L54:
	load.64*    %r178 <- 0[endptr]
	load.8      %r179 <- 0[%r178]
	scast.32    %r180 <- (8) %r179
	seteq.32    %r181 <- %r180, $0
	br          %r181, .L56, .L57

.L56:
	phisrc.32   %phi18(return) <- $1
	br          .L52

.L57:
	br          .L61

.L61:
	call.64*    %r182 <- __ctype_b_loc
	load.64*    %r183 <- 0[%r182]
	load.64*    %r184 <- 0[endptr]
	load.8      %r185 <- 0[%r184]
	scast.8     %r186 <- (8) %r185
	cast.32     %r187 <- (8) %r186
	scast.64    %r188 <- (32) %r187
	muls.64     %r189 <- %r188, $2
	add.64*     %r190 <- %r183, %r189
	load.16     %r191 <- 0[%r190]
	cast.32     %r192 <- (16) %r191
	and.32      %r193 <- %r192, $0x2000
	br          %r193, .L58, .L60

.L58:
	load.64*    %r194 <- 0[endptr]
	add.64*     %r195 <- %r194, $1
	store.64*   %r195 -> 0[endptr]
	br          .L59

.L59:
	br          .L61

.L60:
	load.64*    %r196 <- 0[endptr]
	load.8      %r197 <- 0[%r196]
	scast.32    %r198 <- (8) %r197
	setne.32    %r199 <- %r198, $0
	br          %r199, .L62, .L63

.L62:
	phisrc.32   %phi19(return) <- $0
	br          .L52

.L63:
	phisrc.32   %phi20(return) <- $1
	br          .L52

.L52:
	phi.32      %r164 <- %phi17(return), %phi18(return), %phi19(return), %phi20(return)
	ret.32      %r164


pushstr:
.L64:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	load.64*    %r200 <- 0[L]
	load.64*    %r201 <- 16[%r200]
	store.64*   %r201 -> 0[i_o]
	load.64*    %r202 <- 0[L]
	load.64*    %r203 <- 0[str]
	load.64*    %r204 <- 0[str]
	push.64*    %r204
	call.64     %r205 <- strlen
	push.64*    %r202
	push.64*    %r203
	push.64     %r205
	call.64*    %r206 <- luaS_newlstr
	ptrcast.64* %r207 <- (64) %r206
	load.64*    %r208 <- 0[i_o]
	store.64*   %r207 -> 0[%r208]
	load.64*    %r209 <- 0[i_o]
	store.32    $4 -> 8[%r209]
	load.64*    %r210 <- 0[L]
	load.64*    %r211 <- 56[%r210]
	ptrcast.64* %r212 <- (64) %r211
	load.64*    %r213 <- 0[L]
	load.64*    %r214 <- 16[%r213]
	ptrcast.64* %r215 <- (64) %r214
	sub.64      %r216 <- %r212, %r215
	setle.32    %r217 <- %r216, $16
	br          %r217, .L65, .L66

.L65:
	load.64*    %r218 <- 0[L]
	push.64*    %r218
	push.32     $1
	call        luaD_growstack
	br          .L67

.L66:
	br          .L67

.L67:
	load.64*    %r219 <- 0[L]
	load.64*    %r220 <- 16[%r219]
	add.64*     %r221 <- %r220, $16
	store.64*   %r221 -> 16[%r219]
	br          .L68

.L68:
	ret


luaO_chunkid:
.L69:
	<entry-point>
	store.64*   %arg1 -> 0[out]
	store.64*   %arg2 -> 0[source]
	store.64    %arg3 -> 0[bufflen]
	load.64*    %r222 <- 0[source]
	load.8      %r223 <- 0[%r222]
	scast.32    %r224 <- (8) %r223
	seteq.32    %r225 <- %r224, $61
	br          %r225, .L70, .L71

.L70:
	load.64*    %r226 <- 0[out]
	load.64*    %r227 <- 0[source]
	add.64*     %r228 <- %r227, $1
	load.64     %r229 <- 0[bufflen]
	push.64*    %r226
	push.64*    %r228
	push.64     %r229
	call.64*    %r230 <- strncpy
	load.64*    %r231 <- 0[out]
	load.64     %r232 <- 0[bufflen]
	sub.64      %r233 <- %r232, $1
	add.64*     %r234 <- %r231, %r233
	store.8     $0 -> 0[%r234]
	br          .L72

.L71:
	load.64*    %r235 <- 0[source]
	load.8      %r236 <- 0[%r235]
	scast.32    %r237 <- (8) %r236
	seteq.32    %r238 <- %r237, $64
	br          %r238, .L73, .L74

.L73:
	load.64*    %r239 <- 0[source]
	add.64*     %r240 <- %r239, $1
	store.64*   %r240 -> 0[source]
	load.64     %r241 <- 0[bufflen]
	cast.64     %r242 <- (64) %r241
	sub.64      %r243 <- %r242, $8
	cast.64     %r244 <- (64) %r243
	store.64    %r244 -> 0[bufflen]
	load.64*    %r245 <- 0[source]
	push.64*    %r245
	call.64     %r246 <- strlen
	store.64    %r246 -> 0[l]
	load.64*    %r247 <- 0[out]
	symaddr.64* %r248 <- <anon symbol:0x62d00115b990>
	push.64*    %r247
	push.64*    %r248
	call.64*    %r249 <- strcpy
	load.64     %r250 <- 0[l]
	load.64     %r251 <- 0[bufflen]
	seta.32     %r252 <- %r250, %r251
	br          %r252, .L75, .L76

.L75:
	load.64     %r253 <- 0[l]
	load.64     %r254 <- 0[bufflen]
	sub.64      %r255 <- %r253, %r254
	load.64*    %r256 <- 0[source]
	cast.64     %r257 <- (64) %r256
	add.64      %r258 <- %r257, %r255
	ptrcast.64* %r259 <- (64) %r258
	store.64*   %r259 -> 0[source]
	load.64*    %r260 <- 0[out]
	symaddr.64* %r261 <- <anon symbol:0x62d00115bd30>
	push.64*    %r260
	push.64*    %r261
	call.64*    %r262 <- strcat
	br          .L76

.L76:
	load.64*    %r263 <- 0[out]
	load.64*    %r264 <- 0[source]
	push.64*    %r263
	push.64*    %r264
	call.64*    %r265 <- strcat
	br          .L77

.L74:
	load.64*    %r266 <- 0[source]
	symaddr.64* %r267 <- <anon symbol:0x62d00115c0d0>
	push.64*    %r266
	push.64*    %r267
	call.64     %r268 <- strcspn
	store.64    %r268 -> 0[len]
	load.64     %r269 <- 0[bufflen]
	cast.64     %r270 <- (64) %r269
	sub.64      %r271 <- %r270, $17
	cast.64     %r272 <- (64) %r271
	store.64    %r272 -> 0[bufflen]
	load.64     %r273 <- 0[len]
	load.64     %r274 <- 0[bufflen]
	seta.32     %r275 <- %r273, %r274
	br          %r275, .L78, .L79

.L78:
	load.64     %r276 <- 0[bufflen]
	store.64    %r276 -> 0[len]
	br          .L79

.L79:
	load.64*    %r277 <- 0[out]
	symaddr.64* %r278 <- <anon symbol:0x62d00115c640>
	push.64*    %r277
	push.64*    %r278
	call.64*    %r279 <- strcpy
	load.64*    %r280 <- 0[source]
	load.64     %r281 <- 0[len]
	add.64*     %r282 <- %r280, %r281
	load.8      %r283 <- 0[%r282]
	scast.32    %r284 <- (8) %r283
	setne.32    %r285 <- %r284, $0
	br          %r285, .L80, .L81

.L80:
	load.64*    %r286 <- 0[out]
	load.64*    %r287 <- 0[source]
	load.64     %r288 <- 0[len]
	push.64*    %r286
	push.64*    %r287
	push.64     %r288
	call.64*    %r289 <- strncat
	load.64*    %r290 <- 0[out]
	symaddr.64* %r291 <- <anon symbol:0x62d00115cac8>
	push.64*    %r290
	push.64*    %r291
	call.64*    %r292 <- strcat
	br          .L82

.L81:
	load.64*    %r293 <- 0[out]
	load.64*    %r294 <- 0[source]
	push.64*    %r293
	push.64*    %r294
	call.64*    %r295 <- strcat
	br          .L82

.L82:
	load.64*    %r296 <- 0[out]
	symaddr.64* %r297 <- <anon symbol:0x62d00115ce68>
	push.64*    %r296
	push.64*    %r297
	call.64*    %r298 <- strcat
	br          .L77

.L77:
	br          .L72

.L72:
	ret


luaT_init:
.L83:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    $0 -> 0[i]
	br          .L87

.L87:
	load.32     %r299 <- 0[i]
	setlt.32    %r300 <- %r299, $17
	br          %r300, .L84, .L86

.L84:
	load.64*    %r301 <- 0[L]
	symaddr.64* %r302 <- luaT_eventname
	load.32     %r303 <- 0[i]
	scast.64    %r304 <- (32) %r303
	muls.64     %r305 <- %r304, $8
	add.64*     %r306 <- %r302, %r305
	load.64*    %r307 <- 0[%r306]
	symaddr.64* %r308 <- luaT_eventname
	load.32     %r309 <- 0[i]
	scast.64    %r310 <- (32) %r309
	muls.64     %r311 <- %r310, $8
	add.64*     %r312 <- %r308, %r311
	load.64*    %r313 <- 0[%r312]
	push.64*    %r313
	call.64     %r314 <- strlen
	push.64*    %r301
	push.64*    %r307
	push.64     %r314
	call.64*    %r315 <- luaS_newlstr
	load.64*    %r316 <- 0[L]
	load.64*    %r317 <- 32[%r316]
	add.64*     %r318 <- %r317, $296
	load.32     %r319 <- 0[i]
	scast.64    %r320 <- (32) %r319
	muls.64     %r321 <- %r320, $8
	add.64*     %r322 <- %r318, %r321
	store.64*   %r315 -> 0[%r322]
	load.64*    %r323 <- 0[L]
	load.64*    %r324 <- 32[%r323]
	add.64*     %r325 <- %r324, $296
	load.32     %r326 <- 0[i]
	scast.64    %r327 <- (32) %r326
	muls.64     %r328 <- %r327, $8
	add.64*     %r329 <- %r325, %r328
	load.64*    %r330 <- 0[%r329]
	load.8      %r331 <- 9[%r330]
	cast.32     %r332 <- (8) %r331
	or.32       %r333 <- %r332, $32
	scast.8     %r334 <- (32) %r333
	store.8     %r334 -> 9[%r330]
	br          .L85

.L85:
	load.32     %r335 <- 0[i]
	add.32      %r336 <- %r335, $1
	store.32    %r336 -> 0[i]
	br          .L87

.L86:
	ret


luaT_gettm:
.L88:
	<entry-point>
	store.64*   %arg1 -> 0[events]
	store.32    %arg2 -> 0[event]
	store.64*   %arg3 -> 0[ename]
	load.64*    %r337 <- 0[events]
	load.64*    %r338 <- 0[ename]
	push.64*    %r337
	push.64*    %r338
	call.64*    %r339 <- luaH_getstr
	store.64*   %r339 -> 0[tm]
	load.64*    %r340 <- 0[tm]
	load.32     %r341 <- 8[%r340]
	scast.32    %r342 <- (32) %r341
	seteq.32    %r343 <- %r342, $0
	br          %r343, .L89, .L90

.L89:
	load.32     %r344 <- 0[event]
	scast.32    %r345 <- (32) %r344
	shl.32      %r346 <- $1, %r345
	cast.8      %r347 <- (32) %r346
	cast.32     %r348 <- (8) %r347
	load.64*    %r349 <- 0[events]
	load.8      %r350 <- 10[%r349]
	cast.32     %r351 <- (8) %r350
	or.32       %r352 <- %r351, %r348
	scast.8     %r353 <- (32) %r352
	store.8     %r353 -> 10[%r349]
	phisrc.64*  %phi21(return) <- $0
	br          .L91

.L90:
	load.64*    %r355 <- 0[tm]
	phisrc.64*  %phi22(return) <- %r355
	br          .L91

.L91:
	phi.64*     %r354 <- %phi21(return), %phi22(return)
	ret.64*     %r354


luaT_gettmbyobj:
.L93:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.32    %arg3 -> 0[event]
	load.64*    %r356 <- 0[o]
	load.32     %r357 <- 8[%r356]
	switch.32   %r357, 5 -> .L95, 7 -> .L96, default -> .L97

.L95:
	load.64*    %r358 <- 0[o]
	load.64*    %r359 <- 0[%r358]
	load.64*    %r360 <- 16[%r359]
	store.64*   %r360 -> 0[mt]
	br          .L94

.L96:
	load.64*    %r361 <- 0[o]
	load.64*    %r362 <- 0[%r361]
	load.64*    %r363 <- 16[%r362]
	store.64*   %r363 -> 0[mt]
	br          .L94

.L97:
	load.64*    %r364 <- 0[L]
	load.64*    %r365 <- 32[%r364]
	add.64*     %r366 <- %r365, $224
	load.64*    %r367 <- 0[o]
	load.32     %r368 <- 8[%r367]
	scast.64    %r369 <- (32) %r368
	muls.64     %r370 <- %r369, $8
	add.64*     %r371 <- %r366, %r370
	load.64*    %r372 <- 0[%r371]
	store.64*   %r372 -> 0[mt]
	br          .L94

.L94:
	load.64*    %r373 <- 0[mt]
	br          %r373, .L99, .L100

.L99:
	load.64*    %r374 <- 0[mt]
	load.64*    %r375 <- 0[L]
	load.64*    %r376 <- 32[%r375]
	add.64*     %r377 <- %r376, $296
	load.32     %r378 <- 0[event]
	scast.64    %r379 <- (32) %r378
	muls.64     %r380 <- %r379, $8
	add.64*     %r381 <- %r377, %r380
	load.64*    %r382 <- 0[%r381]
	push.64*    %r374
	push.64*    %r382
	call.64*    %r383 <- luaH_getstr
	phisrc.64*  %phi23 <- %r383
	br          .L101

.L100:
	symaddr.64* %r384 <- luaO_nilobject_
	ptrcast.64* %r385 <- (64) %r384
	phisrc.64*  %phi24 <- %r385
	br          .L101

.L101:
	phi.64*     %r386 <- %phi23, %phi24
	phisrc.64*  %phi25(return) <- %r386
	br          .L98

.L98:
	phi.64*     %r387 <- %phi25(return)
	ret.64*     %r386


luaF_newCclosure:
.L102:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nelems]
	store.64*   %arg3 -> 0[e]
	load.64*    %r388 <- 0[L]
	load.32     %r389 <- 0[nelems]
	sub.32      %r390 <- %r389, $1
	scast.64    %r391 <- (32) %r390
	mulu.64     %r392 <- $16, %r391
	cast.32     %r393 <- (64) %r392
	add.32      %r394 <- $56, %r393
	scast.64    %r395 <- (32) %r394
	push.64*    %r388
	push.64*    $0
	push.64     $0
	push.64     %r395
	call.64*    %r396 <- luaM_realloc_
	ptrcast.64* %r397 <- (64) %r396
	store.64*   %r397 -> 0[c]
	load.64*    %r398 <- 0[L]
	load.64*    %r399 <- 0[c]
	ptrcast.64* %r400 <- (64) %r399
	push.64*    %r398
	push.64*    %r400
	push.8      $6
	call        luaC_link
	load.64*    %r401 <- 0[c]
	store.8     $1 -> 10[%r401]
	load.64*    %r402 <- 0[e]
	load.64*    %r403 <- 0[c]
	store.64*   %r402 -> 24[%r403]
	load.32     %r404 <- 0[nelems]
	scast.8     %r405 <- (32) %r404
	load.64*    %r406 <- 0[c]
	store.8     %r405 -> 11[%r406]
	load.64*    %r407 <- 0[c]
	phisrc.64*  %phi26(return) <- %r407
	br          .L103

.L103:
	phi.64*     %r408 <- %phi26(return)
	ret.64*     %r407


luaF_newLclosure:
.L104:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nelems]
	store.64*   %arg3 -> 0[e]
	load.64*    %r409 <- 0[L]
	load.32     %r410 <- 0[nelems]
	sub.32      %r411 <- %r410, $1
	scast.64    %r412 <- (32) %r411
	mulu.64     %r413 <- $8, %r412
	cast.32     %r414 <- (64) %r413
	add.32      %r415 <- $48, %r414
	scast.64    %r416 <- (32) %r415
	push.64*    %r409
	push.64*    $0
	push.64     $0
	push.64     %r416
	call.64*    %r417 <- luaM_realloc_
	ptrcast.64* %r418 <- (64) %r417
	store.64*   %r418 -> 0[c]
	load.64*    %r419 <- 0[L]
	load.64*    %r420 <- 0[c]
	ptrcast.64* %r421 <- (64) %r420
	push.64*    %r419
	push.64*    %r421
	push.8      $6
	call        luaC_link
	load.64*    %r422 <- 0[c]
	store.8     $0 -> 10[%r422]
	load.64*    %r423 <- 0[e]
	load.64*    %r424 <- 0[c]
	store.64*   %r423 -> 24[%r424]
	load.32     %r425 <- 0[nelems]
	scast.8     %r426 <- (32) %r425
	load.64*    %r427 <- 0[c]
	store.8     %r426 -> 11[%r427]
	br          .L108

.L108:
	load.32     %r428 <- 0[nelems]
	sub.32      %r429 <- %r428, $1
	store.32    %r429 -> 0[nelems]
	br          %r428, .L105, .L107

.L105:
	load.64*    %r430 <- 0[c]
	add.64*     %r431 <- %r430, $0
	add.64*     %r432 <- %r431, $40
	load.32     %r433 <- 0[nelems]
	scast.64    %r434 <- (32) %r433
	muls.64     %r435 <- %r434, $8
	add.64*     %r436 <- %r432, %r435
	store.64*   $0 -> 0[%r436]
	br          .L106

.L106:
	br          .L108

.L107:
	load.64*    %r437 <- 0[c]
	phisrc.64*  %phi27(return) <- %r437
	br          .L109

.L109:
	phi.64*     %r438 <- %phi27(return)
	ret.64*     %r437


luaF_newupval:
.L110:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r439 <- 0[L]
	push.64*    %r439
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r440 <- luaM_realloc_
	ptrcast.64* %r441 <- (64) %r440
	store.64*   %r441 -> 0[uv]
	load.64*    %r442 <- 0[L]
	load.64*    %r443 <- 0[uv]
	ptrcast.64* %r444 <- (64) %r443
	push.64*    %r442
	push.64*    %r444
	push.8      $10
	call        luaC_link
	load.64*    %r445 <- 0[uv]
	add.64*     %r446 <- %r445, $24
	add.64*     %r447 <- %r446, $0
	load.64*    %r448 <- 0[uv]
	store.64*   %r447 -> 16[%r448]
	load.64*    %r449 <- 0[uv]
	load.64*    %r450 <- 16[%r449]
	store.32    $0 -> 8[%r450]
	load.64*    %r451 <- 0[uv]
	phisrc.64*  %phi28(return) <- %r451
	br          .L111

.L111:
	phi.64*     %r452 <- %phi28(return)
	ret.64*     %r451


luaF_findupval:
.L112:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[level]
	load.64*    %r453 <- 0[L]
	load.64*    %r454 <- 32[%r453]
	store.64*   %r454 -> 0[g]
	load.64*    %r455 <- 0[L]
	add.64*     %r456 <- %r455, $152
	store.64*   %r456 -> 0[pp]
	br          .L116

.L116:
	load.64*    %r457 <- 0[pp]
	load.64*    %r458 <- 0[%r457]
	setne.32    %r459 <- %r458, $0
	br          %r459, .L117, .L115

.L117:
	load.64*    %r460 <- 0[pp]
	load.64*    %r461 <- 0[%r460]
	add.64*     %r462 <- %r461, $0
	store.64*   %r462 -> 0[p]
	load.64*    %r463 <- 16[%r462]
	load.64*    %r464 <- 0[level]
	setae.32    %r465 <- %r463, %r464
	br          %r465, .L113, .L115

.L113:
	load.64*    %r466 <- 0[p]
	load.64*    %r467 <- 16[%r466]
	load.64*    %r468 <- 0[level]
	seteq.32    %r469 <- %r467, %r468
	br          %r469, .L118, .L119

.L118:
	load.64*    %r470 <- 0[p]
	ptrcast.64* %r471 <- (64) %r470
	load.8      %r472 <- 9[%r471]
	cast.32     %r473 <- (8) %r472
	load.64*    %r474 <- 0[g]
	load.8      %r475 <- 32[%r474]
	cast.32     %r476 <- (8) %r475
	xor.32      %r477 <- %r476, $3
	and.32      %r478 <- %r473, %r477
	and.32      %r479 <- %r478, $3
	br          %r479, .L120, .L121

.L120:
	load.64*    %r480 <- 0[p]
	ptrcast.64* %r481 <- (64) %r480
	load.8      %r482 <- 9[%r481]
	cast.32     %r483 <- (8) %r482
	xor.32      %r484 <- %r483, $3
	scast.8     %r485 <- (32) %r484
	store.8     %r485 -> 9[%r481]
	br          .L121

.L121:
	load.64*    %r486 <- 0[p]
	phisrc.64*  %phi29(return) <- %r486
	br          .L122

.L119:
	load.64*    %r488 <- 0[p]
	add.64*     %r489 <- %r488, $0
	store.64*   %r489 -> 0[pp]
	br          .L114

.L114:
	br          .L116

.L115:
	load.64*    %r490 <- 0[L]
	push.64*    %r490
	push.64*    $0
	push.64     $0
	push.64     $40
	call.64*    %r491 <- luaM_realloc_
	ptrcast.64* %r492 <- (64) %r491
	store.64*   %r492 -> 0[uv]
	load.64*    %r493 <- 0[uv]
	store.8     $10 -> 8[%r493]
	load.64*    %r494 <- 0[g]
	load.8      %r495 <- 32[%r494]
	cast.32     %r496 <- (8) %r495
	and.32      %r497 <- %r496, $3
	scast.8     %r498 <- (32) %r497
	load.64*    %r499 <- 0[uv]
	store.8     %r498 -> 9[%r499]
	load.64*    %r500 <- 0[level]
	load.64*    %r501 <- 0[uv]
	store.64*   %r500 -> 16[%r501]
	load.64*    %r502 <- 0[pp]
	load.64*    %r503 <- 0[%r502]
	load.64*    %r504 <- 0[uv]
	store.64*   %r503 -> 0[%r504]
	load.64*    %r505 <- 0[uv]
	ptrcast.64* %r506 <- (64) %r505
	load.64*    %r507 <- 0[pp]
	store.64*   %r506 -> 0[%r507]
	load.64*    %r508 <- 0[g]
	add.64*     %r509 <- %r508, $184
	load.64*    %r510 <- 0[uv]
	store.64*   %r509 -> 24[%r510]
	load.64*    %r511 <- 0[g]
	load.64*    %r512 <- 216[%r511]
	load.64*    %r513 <- 0[uv]
	store.64*   %r512 -> 32[%r513]
	load.64*    %r514 <- 0[uv]
	load.64*    %r515 <- 0[uv]
	load.64*    %r516 <- 32[%r515]
	store.64*   %r514 -> 24[%r516]
	load.64*    %r517 <- 0[uv]
	load.64*    %r518 <- 0[g]
	store.64*   %r517 -> 216[%r518]
	load.64*    %r519 <- 0[uv]
	phisrc.64*  %phi30(return) <- %r519
	br          .L122

.L122:
	phi.64*     %r487 <- %phi29(return), %phi30(return)
	ret.64*     %r487


unlinkupval:
.L123:
	<entry-point>
	store.64*   %arg1 -> 0[uv]
	load.64*    %r520 <- 0[uv]
	load.64*    %r521 <- 24[%r520]
	load.64*    %r522 <- 0[uv]
	load.64*    %r523 <- 32[%r522]
	store.64*   %r521 -> 24[%r523]
	load.64*    %r524 <- 0[uv]
	load.64*    %r525 <- 32[%r524]
	load.64*    %r526 <- 0[uv]
	load.64*    %r527 <- 24[%r526]
	store.64*   %r525 -> 32[%r527]
	br          .L124

.L124:
	ret


luaF_freeupval:
.L125:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[uv]
	load.64*    %r528 <- 0[uv]
	load.64*    %r529 <- 16[%r528]
	load.64*    %r530 <- 0[uv]
	add.64*     %r531 <- %r530, $24
	add.64*     %r532 <- %r531, $0
	setne.32    %r533 <- %r529, %r532
	br          %r533, .L126, .L127

.L126:
	load.64*    %r534 <- 0[uv]
	push.64*    %r534
	call        unlinkupval
	br          .L127

.L127:
	load.64*    %r535 <- 0[L]
	load.64*    %r536 <- 0[uv]
	cast.64*    %r537 <- (64) %r536
	push.64*    %r535
	push.64*    %r537
	push.64     $40
	push.64     $0
	call.64*    %r538 <- luaM_realloc_
	br          .L128

.L128:
	ret


luaF_close:
.L129:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[level]
	load.64*    %r539 <- 0[L]
	load.64*    %r540 <- 32[%r539]
	store.64*   %r540 -> 0[g]
	br          .L133

.L133:
	load.64*    %r541 <- 0[L]
	load.64*    %r542 <- 152[%r541]
	setne.32    %r543 <- %r542, $0
	br          %r543, .L134, .L132

.L134:
	load.64*    %r544 <- 0[L]
	load.64*    %r545 <- 152[%r544]
	add.64*     %r546 <- %r545, $0
	store.64*   %r546 -> 0[uv]
	load.64*    %r547 <- 16[%r546]
	load.64*    %r548 <- 0[level]
	setae.32    %r549 <- %r547, %r548
	br          %r549, .L130, .L132

.L130:
	load.64*    %r550 <- 0[uv]
	ptrcast.64* %r551 <- (64) %r550
	store.64*   %r551 -> 0[o]
	load.64*    %r552 <- 0[uv]
	load.64*    %r553 <- 0[%r552]
	load.64*    %r554 <- 0[L]
	store.64*   %r553 -> 152[%r554]
	load.64*    %r555 <- 0[o]
	load.8      %r556 <- 9[%r555]
	cast.32     %r557 <- (8) %r556
	load.64*    %r558 <- 0[g]
	load.8      %r559 <- 32[%r558]
	cast.32     %r560 <- (8) %r559
	xor.32      %r561 <- %r560, $3
	and.32      %r562 <- %r557, %r561
	and.32      %r563 <- %r562, $3
	br          %r563, .L135, .L136

.L135:
	load.64*    %r564 <- 0[L]
	load.64*    %r565 <- 0[uv]
	push.64*    %r564
	push.64*    %r565
	call        luaF_freeupval
	br          .L137

.L136:
	load.64*    %r566 <- 0[uv]
	push.64*    %r566
	call        unlinkupval
	load.64*    %r567 <- 0[uv]
	load.64*    %r568 <- 16[%r567]
	store.64*   %r568 -> 0[o2]
	load.64*    %r569 <- 0[uv]
	add.64*     %r570 <- %r569, $24
	add.64*     %r571 <- %r570, $0
	store.64*   %r571 -> 0[o1]
	load.64*    %r572 <- 0[o2]
	load.f64    %r573 <- 0[%r572]
	fpcast.f64  %r574 <- (64) %r573
	load.64*    %r575 <- 0[o1]
	store.f64   %r574 -> 0[%r575]
	load.64*    %r576 <- 0[o2]
	load.32     %r577 <- 8[%r576]
	scast.32    %r578 <- (32) %r577
	load.64*    %r579 <- 0[o1]
	store.32    %r578 -> 8[%r579]
	load.64*    %r580 <- 0[uv]
	add.64*     %r581 <- %r580, $24
	add.64*     %r582 <- %r581, $0
	load.64*    %r583 <- 0[uv]
	store.64*   %r582 -> 16[%r583]
	load.64*    %r584 <- 0[L]
	load.64*    %r585 <- 0[uv]
	push.64*    %r584
	push.64*    %r585
	call        luaC_linkupval
	br          .L137

.L137:
	br          .L131

.L131:
	br          .L133

.L132:
	ret


luaF_newproto:
.L138:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r586 <- 0[L]
	push.64*    %r586
	push.64*    $0
	push.64     $0
	push.64     $120
	call.64*    %r587 <- luaM_realloc_
	ptrcast.64* %r588 <- (64) %r587
	store.64*   %r588 -> 0[f]
	load.64*    %r589 <- 0[L]
	load.64*    %r590 <- 0[f]
	ptrcast.64* %r591 <- (64) %r590
	push.64*    %r589
	push.64*    %r591
	push.8      $9
	call        luaC_link
	load.64*    %r592 <- 0[f]
	store.64*   $0 -> 16[%r592]
	load.64*    %r593 <- 0[f]
	store.32    $0 -> 76[%r593]
	load.64*    %r594 <- 0[f]
	store.64*   $0 -> 32[%r594]
	load.64*    %r595 <- 0[f]
	store.32    $0 -> 88[%r595]
	load.64*    %r596 <- 0[f]
	store.64*   $0 -> 24[%r596]
	load.64*    %r597 <- 0[f]
	store.32    $0 -> 80[%r597]
	load.64*    %r598 <- 0[f]
	store.32    $0 -> 84[%r598]
	load.64*    %r599 <- 0[f]
	store.32    $0 -> 72[%r599]
	load.64*    %r600 <- 0[f]
	store.8     $0 -> 112[%r600]
	load.64*    %r601 <- 0[f]
	store.64*   $0 -> 56[%r601]
	load.64*    %r602 <- 0[f]
	store.8     $0 -> 113[%r602]
	load.64*    %r603 <- 0[f]
	store.8     $0 -> 114[%r603]
	load.64*    %r604 <- 0[f]
	store.8     $0 -> 115[%r604]
	load.64*    %r605 <- 0[f]
	store.64*   $0 -> 40[%r605]
	load.64*    %r606 <- 0[f]
	store.32    $0 -> 92[%r606]
	load.64*    %r607 <- 0[f]
	store.64*   $0 -> 48[%r607]
	load.64*    %r608 <- 0[f]
	store.32    $0 -> 96[%r608]
	load.64*    %r609 <- 0[f]
	store.32    $0 -> 100[%r609]
	load.64*    %r610 <- 0[f]
	store.64*   $0 -> 64[%r610]
	load.64*    %r611 <- 0[f]
	phisrc.64*  %phi31(return) <- %r611
	br          .L139

.L139:
	phi.64*     %r612 <- %phi31(return)
	ret.64*     %r611


luaF_freeproto:
.L140:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r613 <- 0[L]
	load.64*    %r614 <- 0[f]
	load.64*    %r615 <- 24[%r614]
	cast.64*    %r616 <- (64) %r615
	load.64*    %r617 <- 0[f]
	load.32     %r618 <- 80[%r617]
	scast.64    %r619 <- (32) %r618
	mulu.64     %r620 <- %r619, $4
	push.64*    %r613
	push.64*    %r616
	push.64     %r620
	push.64     $0
	call.64*    %r621 <- luaM_realloc_
	load.64*    %r622 <- 0[L]
	load.64*    %r623 <- 0[f]
	load.64*    %r624 <- 32[%r623]
	cast.64*    %r625 <- (64) %r624
	load.64*    %r626 <- 0[f]
	load.32     %r627 <- 88[%r626]
	scast.64    %r628 <- (32) %r627
	mulu.64     %r629 <- %r628, $8
	push.64*    %r622
	push.64*    %r625
	push.64     %r629
	push.64     $0
	call.64*    %r630 <- luaM_realloc_
	load.64*    %r631 <- 0[L]
	load.64*    %r632 <- 0[f]
	load.64*    %r633 <- 16[%r632]
	cast.64*    %r634 <- (64) %r633
	load.64*    %r635 <- 0[f]
	load.32     %r636 <- 76[%r635]
	scast.64    %r637 <- (32) %r636
	mulu.64     %r638 <- %r637, $16
	push.64*    %r631
	push.64*    %r634
	push.64     %r638
	push.64     $0
	call.64*    %r639 <- luaM_realloc_
	load.64*    %r640 <- 0[L]
	load.64*    %r641 <- 0[f]
	load.64*    %r642 <- 40[%r641]
	cast.64*    %r643 <- (64) %r642
	load.64*    %r644 <- 0[f]
	load.32     %r645 <- 84[%r644]
	scast.64    %r646 <- (32) %r645
	mulu.64     %r647 <- %r646, $4
	push.64*    %r640
	push.64*    %r643
	push.64     %r647
	push.64     $0
	call.64*    %r648 <- luaM_realloc_
	load.64*    %r649 <- 0[L]
	load.64*    %r650 <- 0[f]
	load.64*    %r651 <- 48[%r650]
	cast.64*    %r652 <- (64) %r651
	load.64*    %r653 <- 0[f]
	load.32     %r654 <- 92[%r653]
	scast.64    %r655 <- (32) %r654
	mulu.64     %r656 <- %r655, $16
	push.64*    %r649
	push.64*    %r652
	push.64     %r656
	push.64     $0
	call.64*    %r657 <- luaM_realloc_
	load.64*    %r658 <- 0[L]
	load.64*    %r659 <- 0[f]
	load.64*    %r660 <- 56[%r659]
	cast.64*    %r661 <- (64) %r660
	load.64*    %r662 <- 0[f]
	load.32     %r663 <- 72[%r662]
	scast.64    %r664 <- (32) %r663
	mulu.64     %r665 <- %r664, $8
	push.64*    %r658
	push.64*    %r661
	push.64     %r665
	push.64     $0
	call.64*    %r666 <- luaM_realloc_
	load.64*    %r667 <- 0[L]
	load.64*    %r668 <- 0[f]
	cast.64*    %r669 <- (64) %r668
	push.64*    %r667
	push.64*    %r669
	push.64     $120
	push.64     $0
	call.64*    %r670 <- luaM_realloc_
	br          .L141

.L141:
	ret


luaF_freeclosure:
.L142:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[c]
	load.64*    %r671 <- 0[c]
	load.8      %r672 <- 10[%r671]
	br          %r672, .L143, .L144

.L143:
	load.64*    %r673 <- 0[c]
	load.8      %r674 <- 11[%r673]
	cast.32     %r675 <- (8) %r674
	sub.32      %r676 <- %r675, $1
	scast.64    %r677 <- (32) %r676
	mulu.64     %r678 <- $16, %r677
	cast.32     %r679 <- (64) %r678
	add.32      %r680 <- $56, %r679
	phisrc.32   %phi32 <- %r680
	br          .L145

.L144:
	load.64*    %r681 <- 0[c]
	load.8      %r682 <- 11[%r681]
	cast.32     %r683 <- (8) %r682
	sub.32      %r684 <- %r683, $1
	scast.64    %r685 <- (32) %r684
	mulu.64     %r686 <- $8, %r685
	cast.32     %r687 <- (64) %r686
	add.32      %r688 <- $48, %r687
	phisrc.32   %phi33 <- %r688
	br          .L145

.L145:
	phi.32      %r689 <- %phi32, %phi33
	store.32    %r689 -> 0[size]
	load.64*    %r690 <- 0[L]
	load.64*    %r691 <- 0[c]
	cast.64*    %r692 <- (64) %r691
	load.32     %r693 <- 0[size]
	scast.64    %r694 <- (32) %r693
	push.64*    %r690
	push.64*    %r692
	push.64     %r694
	push.64     $0
	call.64*    %r695 <- luaM_realloc_
	br          .L146

.L146:
	ret


luaD_seterrorobj:
.L147:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[errcode]
	store.64*   %arg3 -> 0[oldtop]
	load.32     %r696 <- 0[errcode]
	switch.32   %r696, 2 -> .L152, 3 -> .L151, 4 -> .L149, 5 -> .L150, default -> .L148

.L149:
	load.64*    %r697 <- 0[oldtop]
	store.64*   %r697 -> 0[i_o]
	load.64*    %r698 <- 0[L]
	symaddr.64* %r699 <- <anon symbol:0x62d00118aa70>
	push.64*    %r698
	push.64*    %r699
	push.64     $17
	call.64*    %r700 <- luaS_newlstr
	ptrcast.64* %r701 <- (64) %r700
	load.64*    %r702 <- 0[i_o]
	store.64*   %r701 -> 0[%r702]
	load.64*    %r703 <- 0[i_o]
	store.32    $4 -> 8[%r703]
	br          .L148

.L150:
	load.64*    %r704 <- 0[oldtop]
	store.64*   %r704 -> 0[i_o]
	load.64*    %r705 <- 0[L]
	symaddr.64* %r706 <- <anon symbol:0x62d00118b380>
	push.64*    %r705
	push.64*    %r706
	push.64     $23
	call.64*    %r707 <- luaS_newlstr
	ptrcast.64* %r708 <- (64) %r707
	load.64*    %r709 <- 0[i_o]
	store.64*   %r708 -> 0[%r709]
	load.64*    %r710 <- 0[i_o]
	store.32    $4 -> 8[%r710]
	br          .L148

.L151:
	br          .L152

.L152:
	load.64*    %r711 <- 0[L]
	load.64*    %r712 <- 16[%r711]
	sub.64*     %r713 <- %r712, $16
	store.64*   %r713 -> 0[o2]
	load.64*    %r714 <- 0[oldtop]
	store.64*   %r714 -> 0[o1]
	load.64*    %r715 <- 0[o2]
	load.f64    %r716 <- 0[%r715]
	fpcast.f64  %r717 <- (64) %r716
	load.64*    %r718 <- 0[o1]
	store.f64   %r717 -> 0[%r718]
	load.64*    %r719 <- 0[o2]
	load.32     %r720 <- 8[%r719]
	scast.32    %r721 <- (32) %r720
	load.64*    %r722 <- 0[o1]
	store.32    %r721 -> 8[%r722]
	br          .L148

.L148:
	load.64*    %r723 <- 0[oldtop]
	add.64*     %r724 <- %r723, $16
	load.64*    %r725 <- 0[L]
	store.64*   %r724 -> 16[%r725]
	br          .L153

.L153:
	ret


restore_stack_limit:
.L154:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r726 <- 0[L]
	load.32     %r727 <- 92[%r726]
	setgt.32    %r728 <- %r727, $0x4e20
	br          %r728, .L155, .L156

.L155:
	load.64*    %r729 <- 0[L]
	load.64*    %r730 <- 40[%r729]
	load.64*    %r731 <- 0[L]
	load.64*    %r732 <- 80[%r731]
	sub.64      %r733 <- %r730, %r732
	divs.64     %r734 <- %r733, $40
	scast.32    %r735 <- (64) %r734
	store.32    %r735 -> 0[inuse]
	load.32     %r736 <- 0[inuse]
	add.32      %r737 <- %r736, $1
	setlt.32    %r738 <- %r737, $0x4e20
	br          %r738, .L157, .L158

.L157:
	load.64*    %r739 <- 0[L]
	push.64*    %r739
	push.32     $0x4e20
	call        luaD_reallocCI
	br          .L158

.L158:
	br          .L156

.L156:
	ret


resetstack:
.L159:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[status]
	load.64*    %r740 <- 0[L]
	load.64*    %r741 <- 80[%r740]
	load.64*    %r742 <- 0[L]
	store.64*   %r741 -> 40[%r742]
	load.64*    %r743 <- 0[L]
	load.64*    %r744 <- 40[%r743]
	load.64*    %r745 <- 0[%r744]
	load.64*    %r746 <- 0[L]
	store.64*   %r745 -> 24[%r746]
	load.64*    %r747 <- 0[L]
	load.64*    %r748 <- 0[L]
	load.64*    %r749 <- 24[%r748]
	push.64*    %r747
	push.64*    %r749
	call        luaF_close
	load.64*    %r750 <- 0[L]
	load.32     %r751 <- 0[status]
	load.64*    %r752 <- 0[L]
	load.64*    %r753 <- 24[%r752]
	push.64*    %r750
	push.32     %r751
	push.64*    %r753
	call        luaD_seterrorobj
	load.64*    %r754 <- 0[L]
	load.16     %r755 <- 98[%r754]
	load.64*    %r756 <- 0[L]
	store.16    %r755 -> 96[%r756]
	load.64*    %r757 <- 0[L]
	store.8     $1 -> 101[%r757]
	load.64*    %r758 <- 0[L]
	push.64*    %r758
	call        restore_stack_limit
	load.64*    %r759 <- 0[L]
	store.64    $0 -> 176[%r759]
	load.64*    %r760 <- 0[L]
	store.64*   $0 -> 168[%r760]
	br          .L160

.L160:
	ret


luaD_throw:
.L161:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[errcode]
	load.64*    %r761 <- 0[L]
	load.64*    %r762 <- 168[%r761]
	br          %r762, .L162, .L163

.L162:
	load.32     %r763 <- 0[errcode]
	scast.32    %r764 <- (32) %r763
	load.64*    %r765 <- 0[L]
	load.64*    %r766 <- 168[%r765]
	store.32    %r764 -> 208[%r766]
	load.64*    %r767 <- 0[L]
	load.64*    %r768 <- 168[%r767]
	add.64*     %r769 <- %r768, $8
	push.64*    %r769
	push.32     $1
	call        longjmp
	br          .L164

.L163:
	load.32     %r770 <- 0[errcode]
	scast.8     %r771 <- (32) %r770
	load.64*    %r772 <- 0[L]
	store.8     %r771 -> 10[%r772]
	load.64*    %r773 <- 0[L]
	load.64*    %r774 <- 32[%r773]
	load.64*    %r775 <- 152[%r774]
	br          %r775, .L165, .L166

.L165:
	load.64*    %r776 <- 0[L]
	load.32     %r777 <- 0[errcode]
	push.64*    %r776
	push.32     %r777
	call        resetstack
	load.64*    %r778 <- 0[L]
	push.64*    %r778
	load.64*    %r779 <- 0[L]
	load.64*    %r780 <- 32[%r779]
	load.64*    %r781 <- 152[%r780]
	call.32     %r782 <- %r781
	br          .L166

.L166:
	push.32     $1
	call        exit
	br          .L164

.L164:
	ret


luaD_rawrunprotected:
.L167:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64*   %arg3 -> 0[ud]
	store.32    $0 -> 208[lj]
	load.64*    %r783 <- 0[L]
	load.64*    %r784 <- 168[%r783]
	store.64*   %r784 -> 0[lj]
	symaddr.64* %r785 <- lj
	load.64*    %r786 <- 0[L]
	store.64*   %r785 -> 168[%r786]
	symaddr.64* %r787 <- lj
	add.64*     %r788 <- %r787, $8
	push.64*    %r788
	call.32     %r789 <- _setjmp
	seteq.32    %r790 <- %r789, $0
	br          %r790, .L168, .L169

.L168:
	load.64*    %r791 <- 0[L]
	load.64*    %r792 <- 0[ud]
	push.64*    %r791
	push.64*    %r792
	load.64*    %r793 <- 0[f]
	call        %r793
	br          .L169

.L169:
	load.64*    %r794 <- 0[lj]
	load.64*    %r795 <- 0[L]
	store.64*   %r794 -> 168[%r795]
	load.32     %r796 <- 208[lj]
	scast.32    %r797 <- (32) %r796
	phisrc.32   %phi34(return) <- %r797
	br          .L170

.L170:
	phi.32      %r798 <- %phi34(return)
	ret.32      %r797


correctstack:
.L171:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[oldstack]
	load.64*    %r799 <- 0[L]
	load.64*    %r800 <- 64[%r799]
	load.64*    %r801 <- 0[L]
	load.64*    %r802 <- 16[%r801]
	load.64*    %r803 <- 0[oldstack]
	sub.64      %r804 <- %r802, %r803
	divs.64     %r805 <- %r804, $16
	muls.64     %r806 <- %r805, $16
	add.64*     %r807 <- %r800, %r806
	load.64*    %r808 <- 0[L]
	store.64*   %r807 -> 16[%r808]
	load.64*    %r809 <- 0[L]
	load.64*    %r810 <- 152[%r809]
	store.64*   %r810 -> 0[up]
	br          .L175

.L175:
	load.64*    %r811 <- 0[up]
	setne.32    %r812 <- %r811, $0
	br          %r812, .L172, .L174

.L172:
	load.64*    %r813 <- 0[L]
	load.64*    %r814 <- 64[%r813]
	load.64*    %r815 <- 0[up]
	load.64*    %r816 <- 16[%r815]
	load.64*    %r817 <- 0[oldstack]
	sub.64      %r818 <- %r816, %r817
	divs.64     %r819 <- %r818, $16
	muls.64     %r820 <- %r819, $16
	add.64*     %r821 <- %r814, %r820
	load.64*    %r822 <- 0[up]
	store.64*   %r821 -> 16[%r822]
	br          .L173

.L173:
	load.64*    %r823 <- 0[up]
	load.64*    %r824 <- 0[%r823]
	store.64*   %r824 -> 0[up]
	br          .L175

.L174:
	load.64*    %r825 <- 0[L]
	load.64*    %r826 <- 80[%r825]
	store.64*   %r826 -> 0[ci]
	br          .L179

.L179:
	load.64*    %r827 <- 0[ci]
	load.64*    %r828 <- 0[L]
	load.64*    %r829 <- 40[%r828]
	setbe.32    %r830 <- %r827, %r829
	br          %r830, .L176, .L178

.L176:
	load.64*    %r831 <- 0[L]
	load.64*    %r832 <- 64[%r831]
	load.64*    %r833 <- 0[ci]
	load.64*    %r834 <- 16[%r833]
	load.64*    %r835 <- 0[oldstack]
	sub.64      %r836 <- %r834, %r835
	divs.64     %r837 <- %r836, $16
	muls.64     %r838 <- %r837, $16
	add.64*     %r839 <- %r832, %r838
	load.64*    %r840 <- 0[ci]
	store.64*   %r839 -> 16[%r840]
	load.64*    %r841 <- 0[L]
	load.64*    %r842 <- 64[%r841]
	load.64*    %r843 <- 0[ci]
	load.64*    %r844 <- 0[%r843]
	load.64*    %r845 <- 0[oldstack]
	sub.64      %r846 <- %r844, %r845
	divs.64     %r847 <- %r846, $16
	muls.64     %r848 <- %r847, $16
	add.64*     %r849 <- %r842, %r848
	load.64*    %r850 <- 0[ci]
	store.64*   %r849 -> 0[%r850]
	load.64*    %r851 <- 0[L]
	load.64*    %r852 <- 64[%r851]
	load.64*    %r853 <- 0[ci]
	load.64*    %r854 <- 8[%r853]
	load.64*    %r855 <- 0[oldstack]
	sub.64      %r856 <- %r854, %r855
	divs.64     %r857 <- %r856, $16
	muls.64     %r858 <- %r857, $16
	add.64*     %r859 <- %r852, %r858
	load.64*    %r860 <- 0[ci]
	store.64*   %r859 -> 8[%r860]
	br          .L177

.L177:
	load.64*    %r861 <- 0[ci]
	add.64*     %r862 <- %r861, $40
	store.64*   %r862 -> 0[ci]
	br          .L179

.L178:
	load.64*    %r863 <- 0[L]
	load.64*    %r864 <- 64[%r863]
	load.64*    %r865 <- 0[L]
	load.64*    %r866 <- 24[%r865]
	load.64*    %r867 <- 0[oldstack]
	sub.64      %r868 <- %r866, %r867
	divs.64     %r869 <- %r868, $16
	muls.64     %r870 <- %r869, $16
	add.64*     %r871 <- %r864, %r870
	load.64*    %r872 <- 0[L]
	store.64*   %r871 -> 24[%r872]
	br          .L180

.L180:
	ret


luaD_reallocstack:
.L181:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r873 <- 0[L]
	load.64*    %r874 <- 64[%r873]
	store.64*   %r874 -> 0[oldstack]
	load.32     %r875 <- 0[newsize]
	add.32      %r876 <- %r875, $1
	add.32      %r877 <- %r876, $5
	store.32    %r877 -> 0[realsize]
	load.32     %r878 <- 0[realsize]
	add.32      %r879 <- %r878, $1
	scast.64    %r880 <- (32) %r879
	setbe.32    %r881 <- %r880, $0xfffffffffffffff
	br          %r881, .L182, .L183

.L182:
	load.64*    %r882 <- 0[L]
	load.64*    %r883 <- 0[L]
	load.64*    %r884 <- 64[%r883]
	cast.64*    %r885 <- (64) %r884
	load.64*    %r886 <- 0[L]
	load.32     %r887 <- 88[%r886]
	scast.64    %r888 <- (32) %r887
	mulu.64     %r889 <- %r888, $16
	load.32     %r890 <- 0[realsize]
	scast.64    %r891 <- (32) %r890
	mulu.64     %r892 <- %r891, $16
	push.64*    %r882
	push.64*    %r885
	push.64     %r889
	push.64     %r892
	call.64*    %r893 <- luaM_realloc_
	phisrc.64*  %phi35 <- %r893
	br          .L184

.L183:
	load.64*    %r894 <- 0[L]
	push.64*    %r894
	call.64*    %r895 <- luaM_toobig
	cast.64*    %r896 <- (64) %r895
	phisrc.64*  %phi36 <- %r896
	br          .L184

.L184:
	phi.64*     %r897 <- %phi35, %phi36
	ptrcast.64* %r898 <- (64) %r897
	load.64*    %r899 <- 0[L]
	store.64*   %r898 -> 64[%r899]
	load.32     %r900 <- 0[realsize]
	load.64*    %r901 <- 0[L]
	store.32    %r900 -> 88[%r901]
	load.64*    %r902 <- 0[L]
	load.64*    %r903 <- 64[%r902]
	load.32     %r904 <- 0[newsize]
	scast.64    %r905 <- (32) %r904
	muls.64     %r906 <- %r905, $16
	add.64*     %r907 <- %r903, %r906
	load.64*    %r908 <- 0[L]
	store.64*   %r907 -> 56[%r908]
	load.64*    %r909 <- 0[L]
	load.64*    %r910 <- 0[oldstack]
	push.64*    %r909
	push.64*    %r910
	call        correctstack
	br          .L185

.L185:
	ret


luaD_reallocCI:
.L186:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r911 <- 0[L]
	load.64*    %r912 <- 80[%r911]
	store.64*   %r912 -> 0[oldci]
	load.32     %r913 <- 0[newsize]
	add.32      %r914 <- %r913, $1
	scast.64    %r915 <- (32) %r914
	setbe.32    %r916 <- %r915, $0x666666666666666
	br          %r916, .L187, .L188

.L187:
	load.64*    %r917 <- 0[L]
	load.64*    %r918 <- 0[L]
	load.64*    %r919 <- 80[%r918]
	cast.64*    %r920 <- (64) %r919
	load.64*    %r921 <- 0[L]
	load.32     %r922 <- 92[%r921]
	scast.64    %r923 <- (32) %r922
	mulu.64     %r924 <- %r923, $40
	load.32     %r925 <- 0[newsize]
	scast.64    %r926 <- (32) %r925
	mulu.64     %r927 <- %r926, $40
	push.64*    %r917
	push.64*    %r920
	push.64     %r924
	push.64     %r927
	call.64*    %r928 <- luaM_realloc_
	phisrc.64*  %phi37 <- %r928
	br          .L189

.L188:
	load.64*    %r929 <- 0[L]
	push.64*    %r929
	call.64*    %r930 <- luaM_toobig
	cast.64*    %r931 <- (64) %r930
	phisrc.64*  %phi38 <- %r931
	br          .L189

.L189:
	phi.64*     %r932 <- %phi37, %phi38
	ptrcast.64* %r933 <- (64) %r932
	load.64*    %r934 <- 0[L]
	store.64*   %r933 -> 80[%r934]
	load.32     %r935 <- 0[newsize]
	load.64*    %r936 <- 0[L]
	store.32    %r935 -> 92[%r936]
	load.64*    %r937 <- 0[L]
	load.64*    %r938 <- 80[%r937]
	load.64*    %r939 <- 0[L]
	load.64*    %r940 <- 40[%r939]
	load.64*    %r941 <- 0[oldci]
	sub.64      %r942 <- %r940, %r941
	divs.64     %r943 <- %r942, $40
	muls.64     %r944 <- %r943, $40
	add.64*     %r945 <- %r938, %r944
	load.64*    %r946 <- 0[L]
	store.64*   %r945 -> 40[%r946]
	load.64*    %r947 <- 0[L]
	load.64*    %r948 <- 80[%r947]
	load.64*    %r949 <- 0[L]
	load.32     %r950 <- 92[%r949]
	scast.64    %r951 <- (32) %r950
	muls.64     %r952 <- %r951, $40
	add.64*     %r953 <- %r948, %r952
	sub.64*     %r954 <- %r953, $40
	load.64*    %r955 <- 0[L]
	store.64*   %r954 -> 72[%r955]
	br          .L190

.L190:
	ret


luaD_growstack:
.L191:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[n]
	load.32     %r956 <- 0[n]
	load.64*    %r957 <- 0[L]
	load.32     %r958 <- 88[%r957]
	setle.32    %r959 <- %r956, %r958
	br          %r959, .L192, .L193

.L192:
	load.64*    %r960 <- 0[L]
	load.64*    %r961 <- 0[L]
	load.32     %r962 <- 88[%r961]
	muls.32     %r963 <- $2, %r962
	push.64*    %r960
	push.32     %r963
	call        luaD_reallocstack
	br          .L194

.L193:
	load.64*    %r964 <- 0[L]
	load.64*    %r965 <- 0[L]
	load.32     %r966 <- 88[%r965]
	load.32     %r967 <- 0[n]
	add.32      %r968 <- %r966, %r967
	push.64*    %r964
	push.32     %r968
	call        luaD_reallocstack
	br          .L194

.L194:
	ret


growCI:
.L195:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r969 <- 0[L]
	load.32     %r970 <- 92[%r969]
	setgt.32    %r971 <- %r970, $0x4e20
	br          %r971, .L196, .L197

.L196:
	load.64*    %r972 <- 0[L]
	push.64*    %r972
	push.32     $5
	call        luaD_throw
	br          .L198

.L197:
	load.64*    %r973 <- 0[L]
	load.64*    %r974 <- 0[L]
	load.32     %r975 <- 92[%r974]
	muls.32     %r976 <- $2, %r975
	push.64*    %r973
	push.32     %r976
	call        luaD_reallocCI
	load.64*    %r977 <- 0[L]
	load.32     %r978 <- 92[%r977]
	setgt.32    %r979 <- %r978, $0x4e20
	br          %r979, .L199, .L200

.L199:
	load.64*    %r980 <- 0[L]
	symaddr.64* %r981 <- <anon symbol:0x62d001191ad0>
	push.64*    %r980
	push.64*    %r981
	call        luaG_runerror
	br          .L200

.L200:
	br          .L198

.L198:
	load.64*    %r982 <- 0[L]
	load.64*    %r983 <- 40[%r982]
	add.64*     %r984 <- %r983, $40
	store.64*   %r984 -> 40[%r982]
	phisrc.64*  %phi39(return) <- %r984
	br          .L201

.L201:
	phi.64*     %r985 <- %phi39(return)
	ret.64*     %r984


adjust_varargs:
.L202:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p]
	store.32    %arg3 -> 0[actual]
	load.64*    %r986 <- 0[p]
	load.8      %r987 <- 113[%r986]
	cast.32     %r988 <- (8) %r987
	store.32    %r988 -> 0[nfixargs]
	store.64*   $0 -> 0[htab]
	br          .L206

.L206:
	load.32     %r989 <- 0[actual]
	load.32     %r990 <- 0[nfixargs]
	setlt.32    %r991 <- %r989, %r990
	br          %r991, .L203, .L205

.L203:
	load.64*    %r992 <- 0[L]
	load.64*    %r993 <- 16[%r992]
	add.64*     %r994 <- %r993, $16
	store.64*   %r994 -> 16[%r992]
	store.32    $0 -> 8[%r993]
	br          .L204

.L204:
	load.32     %r995 <- 0[actual]
	add.32      %r996 <- %r995, $1
	store.32    %r996 -> 0[actual]
	br          .L206

.L205:
	load.64*    %r997 <- 0[L]
	load.64*    %r998 <- 16[%r997]
	load.32     %r999 <- 0[actual]
	scast.64    %r1000 <- (32) %r999
	muls.64     %r1001 <- %r1000, $16
	sub.64*     %r1002 <- %r998, %r1001
	store.64*   %r1002 -> 0[fixed]
	load.64*    %r1003 <- 0[L]
	load.64*    %r1004 <- 16[%r1003]
	store.64*   %r1004 -> 0[base]
	store.32    $0 -> 0[i]
	br          .L210

.L210:
	load.32     %r1005 <- 0[i]
	load.32     %r1006 <- 0[nfixargs]
	setlt.32    %r1007 <- %r1005, %r1006
	br          %r1007, .L207, .L209

.L207:
	load.64*    %r1008 <- 0[fixed]
	load.32     %r1009 <- 0[i]
	scast.64    %r1010 <- (32) %r1009
	muls.64     %r1011 <- %r1010, $16
	add.64*     %r1012 <- %r1008, %r1011
	store.64*   %r1012 -> 0[o2]
	load.64*    %r1013 <- 0[L]
	load.64*    %r1014 <- 16[%r1013]
	add.64*     %r1015 <- %r1014, $16
	store.64*   %r1015 -> 16[%r1013]
	store.64*   %r1014 -> 0[o1]
	load.64*    %r1016 <- 0[o2]
	load.f64    %r1017 <- 0[%r1016]
	fpcast.f64  %r1018 <- (64) %r1017
	load.64*    %r1019 <- 0[o1]
	store.f64   %r1018 -> 0[%r1019]
	load.64*    %r1020 <- 0[o2]
	load.32     %r1021 <- 8[%r1020]
	scast.32    %r1022 <- (32) %r1021
	load.64*    %r1023 <- 0[o1]
	store.32    %r1022 -> 8[%r1023]
	load.64*    %r1024 <- 0[fixed]
	load.32     %r1025 <- 0[i]
	scast.64    %r1026 <- (32) %r1025
	muls.64     %r1027 <- %r1026, $16
	add.64*     %r1028 <- %r1024, %r1027
	store.32    $0 -> 8[%r1028]
	br          .L208

.L208:
	load.32     %r1029 <- 0[i]
	add.32      %r1030 <- %r1029, $1
	store.32    %r1030 -> 0[i]
	br          .L210

.L209:
	br          .L212

.L212:
	load.64*    %r1036 <- 0[base]
	phisrc.64*  %phi40(return) <- %r1036
	br          .L213

.L213:
	phi.64*     %r1037 <- %phi40(return)
	ret.64*     %r1036


tryfuncTM:
.L214:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	load.64*    %r1038 <- 0[L]
	load.64*    %r1039 <- 0[func]
	push.64*    %r1038
	push.64*    %r1039
	push.32     $16
	call.64*    %r1040 <- luaT_gettmbyobj
	store.64*   %r1040 -> 0[tm]
	load.64*    %r1041 <- 0[func]
	ptrcast.64* %r1042 <- (64) %r1041
	load.64*    %r1043 <- 0[L]
	load.64*    %r1044 <- 64[%r1043]
	ptrcast.64* %r1045 <- (64) %r1044
	sub.64      %r1046 <- %r1042, %r1045
	store.64    %r1046 -> 0[funcr]
	load.64*    %r1047 <- 0[tm]
	load.32     %r1048 <- 8[%r1047]
	scast.32    %r1049 <- (32) %r1048
	seteq.32    %r1050 <- %r1049, $6
	br          %r1050, .L216, .L215

.L215:
	load.64*    %r1051 <- 0[L]
	load.64*    %r1052 <- 0[func]
	symaddr.64* %r1053 <- <anon symbol:0x62d001195720>
	push.64*    %r1051
	push.64*    %r1052
	push.64*    %r1053
	call        luaG_typeerror
	br          .L216

.L216:
	load.64*    %r1054 <- 0[L]
	load.64*    %r1055 <- 16[%r1054]
	store.64*   %r1055 -> 0[p]
	br          .L220

.L220:
	load.64*    %r1056 <- 0[p]
	load.64*    %r1057 <- 0[func]
	seta.32     %r1058 <- %r1056, %r1057
	br          %r1058, .L217, .L219

.L217:
	load.64*    %r1059 <- 0[p]
	sub.64*     %r1060 <- %r1059, $16
	store.64*   %r1060 -> 0[o2]
	load.64*    %r1061 <- 0[p]
	store.64*   %r1061 -> 0[o1]
	load.64*    %r1062 <- 0[o2]
	load.f64    %r1063 <- 0[%r1062]
	fpcast.f64  %r1064 <- (64) %r1063
	load.64*    %r1065 <- 0[o1]
	store.f64   %r1064 -> 0[%r1065]
	load.64*    %r1066 <- 0[o2]
	load.32     %r1067 <- 8[%r1066]
	scast.32    %r1068 <- (32) %r1067
	load.64*    %r1069 <- 0[o1]
	store.32    %r1068 -> 8[%r1069]
	br          .L218

.L218:
	load.64*    %r1070 <- 0[p]
	sub.64*     %r1071 <- %r1070, $16
	store.64*   %r1071 -> 0[p]
	br          .L220

.L219:
	load.64*    %r1072 <- 0[L]
	load.64*    %r1073 <- 56[%r1072]
	ptrcast.64* %r1074 <- (64) %r1073
	load.64*    %r1075 <- 0[L]
	load.64*    %r1076 <- 16[%r1075]
	ptrcast.64* %r1077 <- (64) %r1076
	sub.64      %r1078 <- %r1074, %r1077
	setle.32    %r1079 <- %r1078, $16
	br          %r1079, .L221, .L222

.L221:
	load.64*    %r1080 <- 0[L]
	push.64*    %r1080
	push.32     $1
	call        luaD_growstack
	br          .L223

.L222:
	br          .L223

.L223:
	load.64*    %r1081 <- 0[L]
	load.64*    %r1082 <- 16[%r1081]
	add.64*     %r1083 <- %r1082, $16
	store.64*   %r1083 -> 16[%r1081]
	load.64*    %r1084 <- 0[L]
	load.64*    %r1085 <- 64[%r1084]
	ptrcast.64* %r1086 <- (64) %r1085
	load.64     %r1087 <- 0[funcr]
	add.64*     %r1088 <- %r1086, %r1087
	ptrcast.64* %r1089 <- (64) %r1088
	store.64*   %r1089 -> 0[func]
	load.64*    %r1090 <- 0[tm]
	store.64*   %r1090 -> 0[o2]
	load.64*    %r1091 <- 0[func]
	store.64*   %r1091 -> 0[o1]
	load.64*    %r1092 <- 0[o2]
	load.f64    %r1093 <- 0[%r1092]
	fpcast.f64  %r1094 <- (64) %r1093
	load.64*    %r1095 <- 0[o1]
	store.f64   %r1094 -> 0[%r1095]
	load.64*    %r1096 <- 0[o2]
	load.32     %r1097 <- 8[%r1096]
	scast.32    %r1098 <- (32) %r1097
	load.64*    %r1099 <- 0[o1]
	store.32    %r1098 -> 8[%r1099]
	load.64*    %r1100 <- 0[func]
	phisrc.64*  %phi41(return) <- %r1100
	br          .L224

.L224:
	phi.64*     %r1101 <- %phi41(return)
	ret.64*     %r1100


luaD_precall:
.L225:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r1102 <- 0[func]
	load.32     %r1103 <- 8[%r1102]
	seteq.32    %r1104 <- %r1103, $6
	br          %r1104, .L227, .L226

.L226:
	load.64*    %r1105 <- 0[L]
	load.64*    %r1106 <- 0[func]
	push.64*    %r1105
	push.64*    %r1106
	call.64*    %r1107 <- tryfuncTM
	store.64*   %r1107 -> 0[func]
	br          .L227

.L227:
	load.64*    %r1108 <- 0[func]
	ptrcast.64* %r1109 <- (64) %r1108
	load.64*    %r1110 <- 0[L]
	load.64*    %r1111 <- 64[%r1110]
	ptrcast.64* %r1112 <- (64) %r1111
	sub.64      %r1113 <- %r1109, %r1112
	store.64    %r1113 -> 0[funcr]
	load.64*    %r1114 <- 0[func]
	load.64*    %r1115 <- 0[%r1114]
	add.64*     %r1116 <- %r1115, $0
	add.64*     %r1117 <- %r1116, $0
	store.64*   %r1117 -> 0[cl]
	load.64*    %r1118 <- 0[L]
	load.64*    %r1119 <- 48[%r1118]
	load.64*    %r1120 <- 0[L]
	load.64*    %r1121 <- 40[%r1120]
	store.64*   %r1119 -> 24[%r1121]
	load.64*    %r1122 <- 0[cl]
	load.8      %r1123 <- 10[%r1122]
	br          %r1123, .L229, .L228

.L228:
	load.64*    %r1124 <- 0[cl]
	load.64*    %r1125 <- 32[%r1124]
	store.64*   %r1125 -> 0[p]
	load.64*    %r1126 <- 0[L]
	load.64*    %r1127 <- 56[%r1126]
	ptrcast.64* %r1128 <- (64) %r1127
	load.64*    %r1129 <- 0[L]
	load.64*    %r1130 <- 16[%r1129]
	ptrcast.64* %r1131 <- (64) %r1130
	sub.64      %r1132 <- %r1128, %r1131
	load.64*    %r1133 <- 0[p]
	load.8      %r1134 <- 115[%r1133]
	cast.32     %r1135 <- (8) %r1134
	muls.32     %r1136 <- %r1135, $16
	scast.64    %r1137 <- (32) %r1136
	setle.32    %r1138 <- %r1132, %r1137
	br          %r1138, .L230, .L231

.L230:
	load.64*    %r1139 <- 0[L]
	load.64*    %r1140 <- 0[p]
	load.8      %r1141 <- 115[%r1140]
	cast.32     %r1142 <- (8) %r1141
	push.64*    %r1139
	push.32     %r1142
	call        luaD_growstack
	br          .L232

.L231:
	br          .L232

.L232:
	load.64*    %r1143 <- 0[L]
	load.64*    %r1144 <- 64[%r1143]
	ptrcast.64* %r1145 <- (64) %r1144
	load.64     %r1146 <- 0[funcr]
	add.64*     %r1147 <- %r1145, %r1146
	ptrcast.64* %r1148 <- (64) %r1147
	store.64*   %r1148 -> 0[func]
	load.64*    %r1149 <- 0[p]
	load.8      %r1150 <- 114[%r1149]
	br          %r1150, .L234, .L233

.L233:
	load.64*    %r1151 <- 0[func]
	add.64*     %r1152 <- %r1151, $16
	store.64*   %r1152 -> 0[base]
	load.64*    %r1153 <- 0[L]
	load.64*    %r1154 <- 16[%r1153]
	load.64*    %r1155 <- 0[base]
	load.64*    %r1156 <- 0[p]
	load.8      %r1157 <- 113[%r1156]
	cast.64     %r1158 <- (8) %r1157
	muls.64     %r1159 <- %r1158, $16
	add.64*     %r1160 <- %r1155, %r1159
	seta.32     %r1161 <- %r1154, %r1160
	br          %r1161, .L235, .L236

.L235:
	load.64*    %r1162 <- 0[base]
	load.64*    %r1163 <- 0[p]
	load.8      %r1164 <- 113[%r1163]
	cast.64     %r1165 <- (8) %r1164
	muls.64     %r1166 <- %r1165, $16
	add.64*     %r1167 <- %r1162, %r1166
	load.64*    %r1168 <- 0[L]
	store.64*   %r1167 -> 16[%r1168]
	br          .L236

.L236:
	br          .L237

.L234:
	load.64*    %r1169 <- 0[L]
	load.64*    %r1170 <- 16[%r1169]
	load.64*    %r1171 <- 0[func]
	sub.64      %r1172 <- %r1170, %r1171
	divs.64     %r1173 <- %r1172, $16
	scast.32    %r1174 <- (64) %r1173
	sub.32      %r1175 <- %r1174, $1
	store.32    %r1175 -> 0[nargs]
	load.64*    %r1176 <- 0[L]
	load.64*    %r1177 <- 0[p]
	load.32     %r1178 <- 0[nargs]
	push.64*    %r1176
	push.64*    %r1177
	push.32     %r1178
	call.64*    %r1179 <- adjust_varargs
	store.64*   %r1179 -> 0[base]
	load.64*    %r1180 <- 0[L]
	load.64*    %r1181 <- 64[%r1180]
	ptrcast.64* %r1182 <- (64) %r1181
	load.64     %r1183 <- 0[funcr]
	add.64*     %r1184 <- %r1182, %r1183
	ptrcast.64* %r1185 <- (64) %r1184
	store.64*   %r1185 -> 0[func]
	br          .L237

.L237:
	load.64*    %r1186 <- 0[L]
	load.64*    %r1187 <- 40[%r1186]
	load.64*    %r1188 <- 0[L]
	load.64*    %r1189 <- 72[%r1188]
	seteq.32    %r1190 <- %r1187, %r1189
	br          %r1190, .L238, .L239

.L238:
	load.64*    %r1191 <- 0[L]
	push.64*    %r1191
	call.64*    %r1192 <- growCI
	phisrc.64*  %phi42 <- %r1192
	br          .L240

.L239:
	load.64*    %r1193 <- 0[L]
	load.64*    %r1194 <- 40[%r1193]
	add.64*     %r1195 <- %r1194, $40
	store.64*   %r1195 -> 40[%r1193]
	ptrcast.64* %r1196 <- (64) %r1195
	phisrc.64*  %phi43 <- %r1196
	br          .L240

.L240:
	phi.64*     %r1197 <- %phi42, %phi43
	store.64*   %r1197 -> 0[ci]
	load.64*    %r1198 <- 0[func]
	load.64*    %r1199 <- 0[ci]
	store.64*   %r1198 -> 8[%r1199]
	load.64*    %r1200 <- 0[base]
	load.64*    %r1201 <- 0[ci]
	store.64*   %r1200 -> 0[%r1201]
	load.64*    %r1202 <- 0[L]
	store.64*   %r1200 -> 24[%r1202]
	load.64*    %r1203 <- 0[L]
	load.64*    %r1204 <- 24[%r1203]
	load.64*    %r1205 <- 0[p]
	load.8      %r1206 <- 115[%r1205]
	cast.64     %r1207 <- (8) %r1206
	muls.64     %r1208 <- %r1207, $16
	add.64*     %r1209 <- %r1204, %r1208
	load.64*    %r1210 <- 0[ci]
	store.64*   %r1209 -> 16[%r1210]
	load.64*    %r1211 <- 0[p]
	load.64*    %r1212 <- 24[%r1211]
	load.64*    %r1213 <- 0[L]
	store.64*   %r1212 -> 48[%r1213]
	load.64*    %r1214 <- 0[ci]
	store.32    $0 -> 36[%r1214]
	load.32     %r1215 <- 0[nresults]
	load.64*    %r1216 <- 0[ci]
	store.32    %r1215 -> 32[%r1216]
	load.64*    %r1217 <- 0[L]
	load.64*    %r1218 <- 16[%r1217]
	store.64*   %r1218 -> 0[st]
	br          .L244

.L244:
	load.64*    %r1219 <- 0[st]
	load.64*    %r1220 <- 0[ci]
	load.64*    %r1221 <- 16[%r1220]
	setb.32     %r1222 <- %r1219, %r1221
	br          %r1222, .L241, .L243

.L241:
	load.64*    %r1223 <- 0[st]
	store.32    $0 -> 8[%r1223]
	br          .L242

.L242:
	load.64*    %r1224 <- 0[st]
	add.64*     %r1225 <- %r1224, $16
	store.64*   %r1225 -> 0[st]
	br          .L244

.L243:
	load.64*    %r1226 <- 0[ci]
	load.64*    %r1227 <- 16[%r1226]
	load.64*    %r1228 <- 0[L]
	store.64*   %r1227 -> 16[%r1228]
	phisrc.32   %phi44(return) <- $0
	br          .L245

.L229:
	load.64*    %r1230 <- 0[L]
	load.64*    %r1231 <- 56[%r1230]
	ptrcast.64* %r1232 <- (64) %r1231
	load.64*    %r1233 <- 0[L]
	load.64*    %r1234 <- 16[%r1233]
	ptrcast.64* %r1235 <- (64) %r1234
	sub.64      %r1236 <- %r1232, %r1235
	setle.32    %r1237 <- %r1236, $320
	br          %r1237, .L247, .L248

.L247:
	load.64*    %r1238 <- 0[L]
	push.64*    %r1238
	push.32     $20
	call        luaD_growstack
	br          .L249

.L248:
	br          .L249

.L249:
	load.64*    %r1239 <- 0[L]
	load.64*    %r1240 <- 40[%r1239]
	load.64*    %r1241 <- 0[L]
	load.64*    %r1242 <- 72[%r1241]
	seteq.32    %r1243 <- %r1240, %r1242
	br          %r1243, .L250, .L251

.L250:
	load.64*    %r1244 <- 0[L]
	push.64*    %r1244
	call.64*    %r1245 <- growCI
	phisrc.64*  %phi45 <- %r1245
	br          .L252

.L251:
	load.64*    %r1246 <- 0[L]
	load.64*    %r1247 <- 40[%r1246]
	add.64*     %r1248 <- %r1247, $40
	store.64*   %r1248 -> 40[%r1246]
	ptrcast.64* %r1249 <- (64) %r1248
	phisrc.64*  %phi46 <- %r1249
	br          .L252

.L252:
	phi.64*     %r1250 <- %phi45, %phi46
	store.64*   %r1250 -> 0[ci]
	load.64*    %r1251 <- 0[L]
	load.64*    %r1252 <- 64[%r1251]
	ptrcast.64* %r1253 <- (64) %r1252
	load.64     %r1254 <- 0[funcr]
	add.64*     %r1255 <- %r1253, %r1254
	ptrcast.64* %r1256 <- (64) %r1255
	load.64*    %r1257 <- 0[ci]
	store.64*   %r1256 -> 8[%r1257]
	load.64*    %r1258 <- 0[ci]
	load.64*    %r1259 <- 8[%r1258]
	add.64*     %r1260 <- %r1259, $16
	load.64*    %r1261 <- 0[ci]
	store.64*   %r1260 -> 0[%r1261]
	load.64*    %r1262 <- 0[L]
	store.64*   %r1260 -> 24[%r1262]
	load.64*    %r1263 <- 0[L]
	load.64*    %r1264 <- 16[%r1263]
	add.64*     %r1265 <- %r1264, $320
	load.64*    %r1266 <- 0[ci]
	store.64*   %r1265 -> 16[%r1266]
	load.32     %r1267 <- 0[nresults]
	load.64*    %r1268 <- 0[ci]
	store.32    %r1267 -> 32[%r1268]
	load.64*    %r1269 <- 0[L]
	push.64*    %r1269
	load.64*    %r1270 <- 0[L]
	load.64*    %r1271 <- 40[%r1270]
	load.64*    %r1272 <- 8[%r1271]
	load.64*    %r1273 <- 0[%r1272]
	load.64*    %r1274 <- 32[%r1273]
	call.32     %r1275 <- %r1274
	store.32    %r1275 -> 0[n]
	load.32     %r1276 <- 0[n]
	setlt.32    %r1277 <- %r1276, $0
	br          %r1277, .L253, .L254

.L253:
	phisrc.32   %phi47(return) <- $2
	br          .L245

.L254:
	load.64*    %r1278 <- 0[L]
	load.64*    %r1279 <- 0[L]
	load.64*    %r1280 <- 16[%r1279]
	load.32     %r1281 <- 0[n]
	scast.64    %r1282 <- (32) %r1281
	muls.64     %r1283 <- %r1282, $16
	sub.64*     %r1284 <- %r1280, %r1283
	push.64*    %r1278
	push.64*    %r1284
	call.32     %r1285 <- luaD_poscall
	phisrc.32   %phi48(return) <- $1
	br          .L245

.L245:
	phi.32      %r1229 <- %phi44(return), %phi47(return), %phi48(return)
	ret.32      %r1229


luaD_poscall:
.L256:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[firstResult]
	load.64*    %r1286 <- 0[L]
	load.64*    %r1287 <- 40[%r1286]
	sub.64*     %r1288 <- %r1287, $40
	store.64*   %r1288 -> 40[%r1286]
	store.64*   %r1287 -> 0[ci]
	load.64*    %r1289 <- 0[ci]
	load.64*    %r1290 <- 8[%r1289]
	store.64*   %r1290 -> 0[res]
	load.64*    %r1291 <- 0[ci]
	load.32     %r1292 <- 32[%r1291]
	store.32    %r1292 -> 0[wanted]
	load.64*    %r1293 <- 0[ci]
	sub.64*     %r1294 <- %r1293, $40
	load.64*    %r1295 <- 0[%r1294]
	load.64*    %r1296 <- 0[L]
	store.64*   %r1295 -> 24[%r1296]
	load.64*    %r1297 <- 0[ci]
	sub.64*     %r1298 <- %r1297, $40
	load.64*    %r1299 <- 24[%r1298]
	load.64*    %r1300 <- 0[L]
	store.64*   %r1299 -> 48[%r1300]
	load.32     %r1301 <- 0[wanted]
	store.32    %r1301 -> 0[i]
	br          .L260

.L260:
	load.32     %r1302 <- 0[i]
	setne.32    %r1303 <- %r1302, $0
	br          %r1303, .L261, .L259

.L261:
	load.64*    %r1304 <- 0[firstResult]
	load.64*    %r1305 <- 0[L]
	load.64*    %r1306 <- 16[%r1305]
	setb.32     %r1307 <- %r1304, %r1306
	br          %r1307, .L257, .L259

.L257:
	load.64*    %r1308 <- 0[firstResult]
	add.64*     %r1309 <- %r1308, $16
	store.64*   %r1309 -> 0[firstResult]
	store.64*   %r1308 -> 0[o2]
	load.64*    %r1310 <- 0[res]
	add.64*     %r1311 <- %r1310, $16
	store.64*   %r1311 -> 0[res]
	store.64*   %r1310 -> 0[o1]
	load.64*    %r1312 <- 0[o2]
	load.f64    %r1313 <- 0[%r1312]
	fpcast.f64  %r1314 <- (64) %r1313
	load.64*    %r1315 <- 0[o1]
	store.f64   %r1314 -> 0[%r1315]
	load.64*    %r1316 <- 0[o2]
	load.32     %r1317 <- 8[%r1316]
	scast.32    %r1318 <- (32) %r1317
	load.64*    %r1319 <- 0[o1]
	store.32    %r1318 -> 8[%r1319]
	br          .L258

.L258:
	load.32     %r1320 <- 0[i]
	sub.32      %r1321 <- %r1320, $1
	store.32    %r1321 -> 0[i]
	br          .L260

.L259:
	br          .L265

.L265:
	load.32     %r1322 <- 0[i]
	sub.32      %r1323 <- %r1322, $1
	store.32    %r1323 -> 0[i]
	setgt.32    %r1324 <- %r1322, $0
	br          %r1324, .L262, .L264

.L262:
	load.64*    %r1325 <- 0[res]
	add.64*     %r1326 <- %r1325, $16
	store.64*   %r1326 -> 0[res]
	store.32    $0 -> 8[%r1325]
	br          .L263

.L263:
	br          .L265

.L264:
	load.64*    %r1327 <- 0[res]
	load.64*    %r1328 <- 0[L]
	store.64*   %r1327 -> 16[%r1328]
	load.32     %r1329 <- 0[wanted]
	sub.32      %r1330 <- %r1329, $0xffffffff
	phisrc.32   %phi49(return) <- %r1330
	br          .L266

.L266:
	phi.32      %r1331 <- %phi49(return)
	ret.32      %r1330


luaD_call:
.L267:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.32    %arg3 -> 0[nResults]
	load.64*    %r1332 <- 0[L]
	load.16     %r1333 <- 96[%r1332]
	add.16      %r1334 <- %r1333, $1
	store.16    %r1334 -> 96[%r1332]
	cast.32     %r1335 <- (16) %r1334
	setge.32    %r1336 <- %r1335, $200
	br          %r1336, .L268, .L269

.L268:
	load.64*    %r1337 <- 0[L]
	load.16     %r1338 <- 96[%r1337]
	cast.32     %r1339 <- (16) %r1338
	seteq.32    %r1340 <- %r1339, $200
	br          %r1340, .L270, .L271

.L270:
	load.64*    %r1341 <- 0[L]
	symaddr.64* %r1342 <- <anon symbol:0x62d00119c040>
	push.64*    %r1341
	push.64*    %r1342
	call        luaG_runerror
	br          .L272

.L271:
	load.64*    %r1343 <- 0[L]
	load.16     %r1344 <- 96[%r1343]
	cast.32     %r1345 <- (16) %r1344
	setge.32    %r1346 <- %r1345, $225
	br          %r1346, .L273, .L274

.L273:
	load.64*    %r1347 <- 0[L]
	push.64*    %r1347
	push.32     $5
	call        luaD_throw
	br          .L274

.L274:
	br          .L272

.L272:
	br          .L269

.L269:
	load.64*    %r1348 <- 0[L]
	load.64*    %r1349 <- 0[func]
	load.32     %r1350 <- 0[nResults]
	push.64*    %r1348
	push.64*    %r1349
	push.32     %r1350
	call.32     %r1351 <- luaD_precall
	seteq.32    %r1352 <- %r1351, $0
	br          %r1352, .L275, .L276

.L275:
	load.64*    %r1353 <- 0[L]
	push.64*    %r1353
	push.32     $1
	call        luaV_execute
	br          .L276

.L276:
	load.64*    %r1354 <- 0[L]
	load.16     %r1355 <- 96[%r1354]
	sub.16      %r1356 <- %r1355, $1
	store.16    %r1356 -> 96[%r1354]
	load.64*    %r1357 <- 0[L]
	load.64*    %r1358 <- 32[%r1357]
	load.64     %r1359 <- 120[%r1358]
	load.64*    %r1360 <- 0[L]
	load.64*    %r1361 <- 32[%r1360]
	load.64     %r1362 <- 112[%r1361]
	setae.32    %r1363 <- %r1359, %r1362
	br          %r1363, .L277, .L278

.L277:
	load.64*    %r1364 <- 0[L]
	push.64*    %r1364
	call        luaC_step
	br          .L278

.L278:
	ret


luaD_pcall:
.L279:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[func]
	store.64*   %arg3 -> 0[u]
	store.64    %arg4 -> 0[old_top]
	store.64    %arg5 -> 0[ef]
	load.64*    %r1365 <- 0[L]
	load.16     %r1366 <- 96[%r1365]
	store.16    %r1366 -> 0[oldnCcalls]
	load.64*    %r1367 <- 0[L]
	load.64*    %r1368 <- 40[%r1367]
	ptrcast.64* %r1369 <- (64) %r1368
	load.64*    %r1370 <- 0[L]
	load.64*    %r1371 <- 80[%r1370]
	ptrcast.64* %r1372 <- (64) %r1371
	sub.64      %r1373 <- %r1369, %r1372
	store.64    %r1373 -> 0[old_ci]
	load.64*    %r1374 <- 0[L]
	load.8      %r1375 <- 101[%r1374]
	store.8     %r1375 -> 0[old_allowhooks]
	load.64*    %r1376 <- 0[L]
	load.64     %r1377 <- 176[%r1376]
	store.64    %r1377 -> 0[old_errfunc]
	load.64     %r1378 <- 0[ef]
	load.64*    %r1379 <- 0[L]
	store.64    %r1378 -> 176[%r1379]
	load.64*    %r1380 <- 0[L]
	load.64*    %r1381 <- 0[func]
	load.64*    %r1382 <- 0[u]
	push.64*    %r1380
	push.64*    %r1381
	push.64*    %r1382
	call.32     %r1383 <- luaD_rawrunprotected
	store.32    %r1383 -> 0[status]
	load.32     %r1384 <- 0[status]
	setne.32    %r1385 <- %r1384, $0
	br          %r1385, .L280, .L281

.L280:
	load.64*    %r1386 <- 0[L]
	load.64*    %r1387 <- 64[%r1386]
	ptrcast.64* %r1388 <- (64) %r1387
	load.64     %r1389 <- 0[old_top]
	add.64*     %r1390 <- %r1388, %r1389
	ptrcast.64* %r1391 <- (64) %r1390
	store.64*   %r1391 -> 0[oldtop]
	load.64*    %r1392 <- 0[L]
	load.64*    %r1393 <- 0[oldtop]
	push.64*    %r1392
	push.64*    %r1393
	call        luaF_close
	load.64*    %r1394 <- 0[L]
	load.32     %r1395 <- 0[status]
	load.64*    %r1396 <- 0[oldtop]
	push.64*    %r1394
	push.32     %r1395
	push.64*    %r1396
	call        luaD_seterrorobj
	load.16     %r1397 <- 0[oldnCcalls]
	load.64*    %r1398 <- 0[L]
	store.16    %r1397 -> 96[%r1398]
	load.64*    %r1399 <- 0[L]
	load.64*    %r1400 <- 80[%r1399]
	ptrcast.64* %r1401 <- (64) %r1400
	load.64     %r1402 <- 0[old_ci]
	add.64*     %r1403 <- %r1401, %r1402
	ptrcast.64* %r1404 <- (64) %r1403
	load.64*    %r1405 <- 0[L]
	store.64*   %r1404 -> 40[%r1405]
	load.64*    %r1406 <- 0[L]
	load.64*    %r1407 <- 40[%r1406]
	load.64*    %r1408 <- 0[%r1407]
	load.64*    %r1409 <- 0[L]
	store.64*   %r1408 -> 24[%r1409]
	load.64*    %r1410 <- 0[L]
	load.64*    %r1411 <- 40[%r1410]
	load.64*    %r1412 <- 24[%r1411]
	load.64*    %r1413 <- 0[L]
	store.64*   %r1412 -> 48[%r1413]
	load.8      %r1414 <- 0[old_allowhooks]
	load.64*    %r1415 <- 0[L]
	store.8     %r1414 -> 101[%r1415]
	load.64*    %r1416 <- 0[L]
	push.64*    %r1416
	call        restore_stack_limit
	br          .L281

.L281:
	load.64     %r1417 <- 0[old_errfunc]
	load.64*    %r1418 <- 0[L]
	store.64    %r1417 -> 176[%r1418]
	load.32     %r1419 <- 0[status]
	phisrc.32   %phi50(return) <- %r1419
	br          .L282

.L282:
	phi.32      %r1420 <- %phi50(return)
	ret.32      %r1419


f_parser:
.L283:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r1421 <- 0[ud]
	ptrcast.64* %r1422 <- (64) %r1421
	store.64*   %r1422 -> 0[p]
	load.64*    %r1423 <- 0[L]
	load.64*    %r1424 <- 32[%r1423]
	load.64     %r1425 <- 120[%r1424]
	load.64*    %r1426 <- 0[L]
	load.64*    %r1427 <- 32[%r1426]
	load.64     %r1428 <- 112[%r1427]
	setae.32    %r1429 <- %r1425, %r1428
	br          %r1429, .L284, .L285

.L284:
	load.64*    %r1430 <- 0[L]
	push.64*    %r1430
	call        luaC_step
	br          .L285

.L285:
	load.64*    %r1431 <- 0[L]
	load.64*    %r1432 <- 0[p]
	load.64*    %r1433 <- 0[%r1432]
	load.64*    %r1434 <- 0[p]
	add.64*     %r1435 <- %r1434, $8
	load.64*    %r1436 <- 0[p]
	load.64*    %r1437 <- 32[%r1436]
	push.64*    %r1431
	push.64*    %r1433
	push.64*    %r1435
	push.64*    %r1437
	call.64*    %r1438 <- luaY_parser
	store.64*   %r1438 -> 0[tf]
	load.64*    %r1439 <- 0[L]
	load.64*    %r1440 <- 0[tf]
	load.8      %r1441 <- 112[%r1440]
	cast.32     %r1442 <- (8) %r1441
	load.64*    %r1443 <- 0[L]
	load.64*    %r1444 <- 120[%r1443]
	add.64*     %r1445 <- %r1444, $0
	push.64*    %r1439
	push.32     %r1442
	push.64*    %r1445
	call.64*    %r1446 <- luaF_newLclosure
	store.64*   %r1446 -> 0[cl]
	load.64*    %r1447 <- 0[tf]
	load.64*    %r1448 <- 0[cl]
	store.64*   %r1447 -> 32[%r1448]
	store.32    $0 -> 0[i]
	br          .L289

.L289:
	load.32     %r1449 <- 0[i]
	load.64*    %r1450 <- 0[tf]
	load.8      %r1451 <- 112[%r1450]
	cast.32     %r1452 <- (8) %r1451
	setlt.32    %r1453 <- %r1449, %r1452
	br          %r1453, .L286, .L288

.L286:
	load.64*    %r1454 <- 0[L]
	push.64*    %r1454
	call.64*    %r1455 <- luaF_newupval
	load.64*    %r1456 <- 0[cl]
	add.64*     %r1457 <- %r1456, $0
	add.64*     %r1458 <- %r1457, $40
	load.32     %r1459 <- 0[i]
	scast.64    %r1460 <- (32) %r1459
	muls.64     %r1461 <- %r1460, $8
	add.64*     %r1462 <- %r1458, %r1461
	store.64*   %r1455 -> 0[%r1462]
	br          .L287

.L287:
	load.32     %r1463 <- 0[i]
	add.32      %r1464 <- %r1463, $1
	store.32    %r1464 -> 0[i]
	br          .L289

.L288:
	load.64*    %r1465 <- 0[L]
	load.64*    %r1466 <- 16[%r1465]
	store.64*   %r1466 -> 0[i_o]
	load.64*    %r1467 <- 0[cl]
	ptrcast.64* %r1468 <- (64) %r1467
	load.64*    %r1469 <- 0[i_o]
	store.64*   %r1468 -> 0[%r1469]
	load.64*    %r1470 <- 0[i_o]
	store.32    $6 -> 8[%r1470]
	load.64*    %r1471 <- 0[L]
	load.64*    %r1472 <- 56[%r1471]
	ptrcast.64* %r1473 <- (64) %r1472
	load.64*    %r1474 <- 0[L]
	load.64*    %r1475 <- 16[%r1474]
	ptrcast.64* %r1476 <- (64) %r1475
	sub.64      %r1477 <- %r1473, %r1476
	setle.32    %r1478 <- %r1477, $16
	br          %r1478, .L290, .L291

.L290:
	load.64*    %r1479 <- 0[L]
	push.64*    %r1479
	push.32     $1
	call        luaD_growstack
	br          .L292

.L291:
	br          .L292

.L292:
	load.64*    %r1480 <- 0[L]
	load.64*    %r1481 <- 16[%r1480]
	add.64*     %r1482 <- %r1481, $16
	store.64*   %r1482 -> 16[%r1480]
	br          .L293

.L293:
	ret


luaD_protectedparser:
.L294:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[name]
	load.64*    %r1483 <- 0[z]
	store.64*   %r1483 -> 0[p]
	load.64*    %r1484 <- 0[name]
	store.64*   %r1484 -> 32[p]
	store.64*   $0 -> 8[p]
	store.64    $0 -> 24[p]
	load.64*    %r1485 <- 0[L]
	symaddr.64* %r1486 <- f_parser
	symaddr.64* %r1487 <- p
	cast.64*    %r1488 <- (64) %r1487
	load.64*    %r1489 <- 0[L]
	load.64*    %r1490 <- 16[%r1489]
	ptrcast.64* %r1491 <- (64) %r1490
	load.64*    %r1492 <- 0[L]
	load.64*    %r1493 <- 64[%r1492]
	ptrcast.64* %r1494 <- (64) %r1493
	sub.64      %r1495 <- %r1491, %r1494
	load.64*    %r1496 <- 0[L]
	load.64     %r1497 <- 176[%r1496]
	push.64*    %r1485
	push.64*    %r1486
	push.64*    %r1488
	push.64     %r1495
	push.64     %r1497
	call.32     %r1498 <- luaD_pcall
	store.32    %r1498 -> 0[status]
	load.64*    %r1499 <- 0[L]
	load.64*    %r1500 <- 8[p]
	cast.64*    %r1501 <- (64) %r1500
	load.64     %r1502 <- 24[p]
	mulu.64     %r1503 <- %r1502, $1
	push.64*    %r1499
	push.64*    %r1501
	push.64     %r1503
	push.64     $0
	call.64*    %r1504 <- luaM_realloc_
	ptrcast.64* %r1505 <- (64) %r1504
	store.64*   %r1505 -> 8[p]
	store.64    $0 -> 24[p]
	load.32     %r1506 <- 0[status]
	phisrc.32   %phi51(return) <- %r1506
	br          .L295

.L295:
	phi.32      %r1507 <- %phi51(return)
	ret.32      %r1506


luaS_resize:
.L296:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[newsize]
	load.64*    %r1508 <- 0[L]
	load.64*    %r1509 <- 32[%r1508]
	load.8      %r1510 <- 33[%r1509]
	cast.32     %r1511 <- (8) %r1510
	seteq.32    %r1512 <- %r1511, $2
	br          %r1512, .L297, .L298

.L297:
	br          .L299

.L298:
	load.32     %r1513 <- 0[newsize]
	add.32      %r1514 <- %r1513, $1
	scast.64    %r1515 <- (32) %r1514
	setbe.32    %r1516 <- %r1515, $0x1fffffffffffffff
	br          %r1516, .L300, .L301

.L300:
	load.64*    %r1517 <- 0[L]
	load.32     %r1518 <- 0[newsize]
	scast.64    %r1519 <- (32) %r1518
	mulu.64     %r1520 <- %r1519, $8
	push.64*    %r1517
	push.64*    $0
	push.64     $0
	push.64     %r1520
	call.64*    %r1521 <- luaM_realloc_
	phisrc.64*  %phi52 <- %r1521
	br          .L302

.L301:
	load.64*    %r1522 <- 0[L]
	push.64*    %r1522
	call.64*    %r1523 <- luaM_toobig
	cast.64*    %r1524 <- (64) %r1523
	phisrc.64*  %phi53 <- %r1524
	br          .L302

.L302:
	phi.64*     %r1525 <- %phi52, %phi53
	ptrcast.64* %r1526 <- (64) %r1525
	store.64*   %r1526 -> 0[newhash]
	load.64*    %r1527 <- 0[L]
	load.64*    %r1528 <- 32[%r1527]
	add.64*     %r1529 <- %r1528, $0
	store.64*   %r1529 -> 0[tb]
	store.32    $0 -> 0[i]
	br          .L306

.L306:
	load.32     %r1530 <- 0[i]
	load.32     %r1531 <- 0[newsize]
	setlt.32    %r1532 <- %r1530, %r1531
	br          %r1532, .L303, .L305

.L303:
	load.64*    %r1533 <- 0[newhash]
	load.32     %r1534 <- 0[i]
	scast.64    %r1535 <- (32) %r1534
	muls.64     %r1536 <- %r1535, $8
	add.64*     %r1537 <- %r1533, %r1536
	store.64*   $0 -> 0[%r1537]
	br          .L304

.L304:
	load.32     %r1538 <- 0[i]
	add.32      %r1539 <- %r1538, $1
	store.32    %r1539 -> 0[i]
	br          .L306

.L305:
	store.32    $0 -> 0[i]
	br          .L310

.L310:
	load.32     %r1540 <- 0[i]
	load.64*    %r1541 <- 0[tb]
	load.32     %r1542 <- 12[%r1541]
	setlt.32    %r1543 <- %r1540, %r1542
	br          %r1543, .L307, .L309

.L307:
	load.64*    %r1544 <- 0[tb]
	load.64*    %r1545 <- 0[%r1544]
	load.32     %r1546 <- 0[i]
	scast.64    %r1547 <- (32) %r1546
	muls.64     %r1548 <- %r1547, $8
	add.64*     %r1549 <- %r1545, %r1548
	load.64*    %r1550 <- 0[%r1549]
	store.64*   %r1550 -> 0[p]
	br          .L314

.L314:
	load.64*    %r1551 <- 0[p]
	br          %r1551, .L311, .L313

.L311:
	load.64*    %r1552 <- 0[p]
	load.64*    %r1553 <- 0[%r1552]
	store.64*   %r1553 -> 0[next]
	load.64*    %r1554 <- 0[p]
	load.32     %r1555 <- 12[%r1554]
	store.32    %r1555 -> 0[h]
	load.32     %r1556 <- 0[h]
	load.32     %r1557 <- 0[newsize]
	sub.32      %r1558 <- %r1557, $1
	scast.32    %r1559 <- (32) %r1558
	and.32      %r1560 <- %r1556, %r1559
	cast.32     %r1561 <- (32) %r1560
	store.32    %r1561 -> 0[h1]
	load.64*    %r1562 <- 0[newhash]
	load.32     %r1563 <- 0[h1]
	scast.64    %r1564 <- (32) %r1563
	muls.64     %r1565 <- %r1564, $8
	add.64*     %r1566 <- %r1562, %r1565
	load.64*    %r1567 <- 0[%r1566]
	load.64*    %r1568 <- 0[p]
	store.64*   %r1567 -> 0[%r1568]
	load.64*    %r1569 <- 0[p]
	load.64*    %r1570 <- 0[newhash]
	load.32     %r1571 <- 0[h1]
	scast.64    %r1572 <- (32) %r1571
	muls.64     %r1573 <- %r1572, $8
	add.64*     %r1574 <- %r1570, %r1573
	store.64*   %r1569 -> 0[%r1574]
	load.64*    %r1575 <- 0[next]
	store.64*   %r1575 -> 0[p]
	br          .L312

.L312:
	br          .L314

.L313:
	br          .L308

.L308:
	load.32     %r1576 <- 0[i]
	add.32      %r1577 <- %r1576, $1
	store.32    %r1577 -> 0[i]
	br          .L310

.L309:
	load.64*    %r1578 <- 0[L]
	load.64*    %r1579 <- 0[tb]
	load.64*    %r1580 <- 0[%r1579]
	cast.64*    %r1581 <- (64) %r1580
	load.64*    %r1582 <- 0[tb]
	load.32     %r1583 <- 12[%r1582]
	scast.64    %r1584 <- (32) %r1583
	mulu.64     %r1585 <- %r1584, $8
	push.64*    %r1578
	push.64*    %r1581
	push.64     %r1585
	push.64     $0
	call.64*    %r1586 <- luaM_realloc_
	load.32     %r1587 <- 0[newsize]
	load.64*    %r1588 <- 0[tb]
	store.32    %r1587 -> 12[%r1588]
	load.64*    %r1589 <- 0[newhash]
	load.64*    %r1590 <- 0[tb]
	store.64*   %r1589 -> 0[%r1590]
	br          .L299

.L299:
	ret


newlstr:
.L315:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	store.32    %arg4 -> 0[h]
	load.64     %r1591 <- 0[l]
	add.64      %r1592 <- %r1591, $1
	seta.32     %r1593 <- %r1592, $-27
	br          %r1593, .L316, .L317

.L316:
	load.64*    %r1594 <- 0[L]
	push.64*    %r1594
	call.64*    %r1595 <- luaM_toobig
	br          .L317

.L317:
	load.64*    %r1596 <- 0[L]
	load.64     %r1597 <- 0[l]
	add.64      %r1598 <- %r1597, $1
	mulu.64     %r1599 <- %r1598, $1
	add.64      %r1600 <- %r1599, $24
	push.64*    %r1596
	push.64*    $0
	push.64     $0
	push.64     %r1600
	call.64*    %r1601 <- luaM_realloc_
	ptrcast.64* %r1602 <- (64) %r1601
	store.64*   %r1602 -> 0[ts]
	load.64     %r1603 <- 0[l]
	load.64*    %r1604 <- 0[ts]
	store.64    %r1603 -> 16[%r1604]
	load.32     %r1605 <- 0[h]
	load.64*    %r1606 <- 0[ts]
	store.32    %r1605 -> 12[%r1606]
	load.64*    %r1607 <- 0[L]
	load.64*    %r1608 <- 32[%r1607]
	load.8      %r1609 <- 32[%r1608]
	cast.32     %r1610 <- (8) %r1609
	and.32      %r1611 <- %r1610, $3
	scast.8     %r1612 <- (32) %r1611
	load.64*    %r1613 <- 0[ts]
	store.8     %r1612 -> 9[%r1613]
	load.64*    %r1614 <- 0[ts]
	store.8     $4 -> 8[%r1614]
	load.64*    %r1615 <- 0[ts]
	store.8     $0 -> 10[%r1615]
	load.64*    %r1616 <- 0[ts]
	add.64*     %r1617 <- %r1616, $24
	cast.64*    %r1618 <- (64) %r1617
	load.64*    %r1619 <- 0[str]
	cast.64*    %r1620 <- (64) %r1619
	load.64     %r1621 <- 0[l]
	mulu.64     %r1622 <- %r1621, $1
	push.64*    %r1618
	push.64*    %r1620
	push.64     %r1622
	call.64*    %r1623 <- memcpy
	load.64*    %r1624 <- 0[ts]
	add.64*     %r1625 <- %r1624, $24
	ptrcast.64* %r1626 <- (64) %r1625
	load.64     %r1627 <- 0[l]
	add.64*     %r1628 <- %r1626, %r1627
	store.8     $0 -> 0[%r1628]
	load.64*    %r1629 <- 0[L]
	load.64*    %r1630 <- 32[%r1629]
	add.64*     %r1631 <- %r1630, $0
	store.64*   %r1631 -> 0[tb]
	load.32     %r1632 <- 0[h]
	load.64*    %r1633 <- 0[tb]
	load.32     %r1634 <- 12[%r1633]
	sub.32      %r1635 <- %r1634, $1
	scast.32    %r1636 <- (32) %r1635
	and.32      %r1637 <- %r1632, %r1636
	cast.32     %r1638 <- (32) %r1637
	scast.32    %r1639 <- (32) %r1638
	store.32    %r1639 -> 0[h]
	load.64*    %r1640 <- 0[tb]
	load.64*    %r1641 <- 0[%r1640]
	load.32     %r1642 <- 0[h]
	cast.64     %r1643 <- (32) %r1642
	muls.64     %r1644 <- %r1643, $8
	add.64*     %r1645 <- %r1641, %r1644
	load.64*    %r1646 <- 0[%r1645]
	load.64*    %r1647 <- 0[ts]
	store.64*   %r1646 -> 0[%r1647]
	load.64*    %r1648 <- 0[ts]
	ptrcast.64* %r1649 <- (64) %r1648
	load.64*    %r1650 <- 0[tb]
	load.64*    %r1651 <- 0[%r1650]
	load.32     %r1652 <- 0[h]
	cast.64     %r1653 <- (32) %r1652
	muls.64     %r1654 <- %r1653, $8
	add.64*     %r1655 <- %r1651, %r1654
	store.64*   %r1649 -> 0[%r1655]
	load.64*    %r1656 <- 0[tb]
	load.32     %r1657 <- 8[%r1656]
	add.32      %r1658 <- %r1657, $1
	store.32    %r1658 -> 8[%r1656]
	load.64*    %r1659 <- 0[tb]
	load.32     %r1660 <- 8[%r1659]
	load.64*    %r1661 <- 0[tb]
	load.32     %r1662 <- 12[%r1661]
	scast.32    %r1663 <- (32) %r1662
	seta.32     %r1664 <- %r1660, %r1663
	br          %r1664, .L320, .L319

.L320:
	load.64*    %r1665 <- 0[tb]
	load.32     %r1666 <- 12[%r1665]
	setle.32    %r1667 <- %r1666, $0x3ffffffe
	br          %r1667, .L318, .L319

.L318:
	load.64*    %r1668 <- 0[L]
	load.64*    %r1669 <- 0[tb]
	load.32     %r1670 <- 12[%r1669]
	muls.32     %r1671 <- %r1670, $2
	push.64*    %r1668
	push.32     %r1671
	call        luaS_resize
	br          .L319

.L319:
	load.64*    %r1672 <- 0[ts]
	phisrc.64*  %phi54(return) <- %r1672
	br          .L321

.L321:
	phi.64*     %r1673 <- %phi54(return)
	ret.64*     %r1672


luaS_newlstr:
.L322:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	load.64     %r1674 <- 0[l]
	cast.32     %r1675 <- (64) %r1674
	store.32    %r1675 -> 0[h]
	load.64     %r1676 <- 0[l]
	lsr.64      %r1677 <- %r1676, $5
	add.64      %r1678 <- %r1677, $1
	store.64    %r1678 -> 0[step]
	load.64     %r1679 <- 0[l]
	store.64    %r1679 -> 0[l1]
	br          .L326

.L326:
	load.64     %r1680 <- 0[l1]
	load.64     %r1681 <- 0[step]
	setae.32    %r1682 <- %r1680, %r1681
	br          %r1682, .L323, .L325

.L323:
	load.32     %r1683 <- 0[h]
	load.32     %r1684 <- 0[h]
	shl.32      %r1685 <- %r1684, $5
	load.32     %r1686 <- 0[h]
	lsr.32      %r1687 <- %r1686, $2
	add.32      %r1688 <- %r1685, %r1687
	load.64*    %r1689 <- 0[str]
	load.64     %r1690 <- 0[l1]
	sub.64      %r1691 <- %r1690, $1
	add.64*     %r1692 <- %r1689, %r1691
	load.8      %r1693 <- 0[%r1692]
	scast.8     %r1694 <- (8) %r1693
	cast.32     %r1695 <- (8) %r1694
	add.32      %r1696 <- %r1688, %r1695
	xor.32      %r1697 <- %r1683, %r1696
	store.32    %r1697 -> 0[h]
	br          .L324

.L324:
	load.64     %r1698 <- 0[step]
	load.64     %r1699 <- 0[l1]
	cast.64     %r1700 <- (64) %r1699
	sub.64      %r1701 <- %r1700, %r1698
	cast.64     %r1702 <- (64) %r1701
	store.64    %r1702 -> 0[l1]
	br          .L326

.L325:
	load.64*    %r1703 <- 0[L]
	load.64*    %r1704 <- 32[%r1703]
	load.64*    %r1705 <- 0[%r1704]
	load.32     %r1706 <- 0[h]
	load.64*    %r1707 <- 0[L]
	load.64*    %r1708 <- 32[%r1707]
	load.32     %r1709 <- 12[%r1708]
	sub.32      %r1710 <- %r1709, $1
	scast.32    %r1711 <- (32) %r1710
	and.32      %r1712 <- %r1706, %r1711
	cast.32     %r1713 <- (32) %r1712
	scast.64    %r1714 <- (32) %r1713
	muls.64     %r1715 <- %r1714, $8
	add.64*     %r1716 <- %r1705, %r1715
	load.64*    %r1717 <- 0[%r1716]
	store.64*   %r1717 -> 0[o]
	br          .L330

.L330:
	load.64*    %r1718 <- 0[o]
	setne.32    %r1719 <- %r1718, $0
	br          %r1719, .L327, .L329

.L327:
	load.64*    %r1720 <- 0[o]
	add.64*     %r1721 <- %r1720, $0
	store.64*   %r1721 -> 0[ts]
	load.64*    %r1722 <- 0[ts]
	load.64     %r1723 <- 16[%r1722]
	load.64     %r1724 <- 0[l]
	seteq.32    %r1725 <- %r1723, %r1724
	load.64*    %r1726 <- 0[str]
	cast.64*    %r1727 <- (64) %r1726
	load.64*    %r1728 <- 0[ts]
	add.64*     %r1729 <- %r1728, $24
	ptrcast.64* %r1730 <- (64) %r1729
	cast.64*    %r1731 <- (64) %r1730
	load.64     %r1732 <- 0[l]
	push.64*    %r1727
	push.64*    %r1731
	push.64     %r1732
	call.32     %r1733 <- memcmp
	seteq.32    %r1734 <- %r1733, $0
	and-bool.32 %r1735 <- %r1725, %r1734
	br          %r1735, .L331, .L332

.L331:
	load.64*    %r1736 <- 0[o]
	load.8      %r1737 <- 9[%r1736]
	cast.32     %r1738 <- (8) %r1737
	load.64*    %r1739 <- 0[L]
	load.64*    %r1740 <- 32[%r1739]
	load.8      %r1741 <- 32[%r1740]
	cast.32     %r1742 <- (8) %r1741
	xor.32      %r1743 <- %r1742, $3
	and.32      %r1744 <- %r1738, %r1743
	and.32      %r1745 <- %r1744, $3
	br          %r1745, .L333, .L334

.L333:
	load.64*    %r1746 <- 0[o]
	load.8      %r1747 <- 9[%r1746]
	cast.32     %r1748 <- (8) %r1747
	xor.32      %r1749 <- %r1748, $3
	scast.8     %r1750 <- (32) %r1749
	store.8     %r1750 -> 9[%r1746]
	br          .L334

.L334:
	load.64*    %r1751 <- 0[ts]
	phisrc.64*  %phi55(return) <- %r1751
	br          .L335

.L332:
	br          .L328

.L328:
	load.64*    %r1753 <- 0[o]
	load.64*    %r1754 <- 0[%r1753]
	store.64*   %r1754 -> 0[o]
	br          .L330

.L329:
	load.64*    %r1755 <- 0[L]
	load.64*    %r1756 <- 0[str]
	load.64     %r1757 <- 0[l]
	load.32     %r1758 <- 0[h]
	push.64*    %r1755
	push.64*    %r1756
	push.64     %r1757
	push.32     %r1758
	call.64*    %r1759 <- newlstr
	phisrc.64*  %phi56(return) <- %r1759
	br          .L335

.L335:
	phi.64*     %r1752 <- %phi55(return), %phi56(return)
	ret.64*     %r1752


luaS_newudata:
.L336:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[s]
	store.64*   %arg3 -> 0[e]
	load.64     %r1760 <- 0[s]
	seta.32     %r1761 <- %r1760, $-43
	br          %r1761, .L337, .L338

.L337:
	load.64*    %r1762 <- 0[L]
	push.64*    %r1762
	call.64*    %r1763 <- luaM_toobig
	br          .L338

.L338:
	load.64*    %r1764 <- 0[L]
	load.64     %r1765 <- 0[s]
	add.64      %r1766 <- %r1765, $40
	push.64*    %r1764
	push.64*    $0
	push.64     $0
	push.64     %r1766
	call.64*    %r1767 <- luaM_realloc_
	ptrcast.64* %r1768 <- (64) %r1767
	store.64*   %r1768 -> 0[u]
	load.64*    %r1769 <- 0[L]
	load.64*    %r1770 <- 32[%r1769]
	load.8      %r1771 <- 32[%r1770]
	cast.32     %r1772 <- (8) %r1771
	and.32      %r1773 <- %r1772, $3
	scast.8     %r1774 <- (32) %r1773
	load.64*    %r1775 <- 0[u]
	store.8     %r1774 -> 9[%r1775]
	load.64*    %r1776 <- 0[u]
	store.8     $7 -> 8[%r1776]
	load.64     %r1777 <- 0[s]
	load.64*    %r1778 <- 0[u]
	store.64    %r1777 -> 32[%r1778]
	load.64*    %r1779 <- 0[u]
	store.64*   $0 -> 16[%r1779]
	load.64*    %r1780 <- 0[e]
	load.64*    %r1781 <- 0[u]
	store.64*   %r1780 -> 24[%r1781]
	load.64*    %r1782 <- 0[L]
	load.64*    %r1783 <- 32[%r1782]
	load.64*    %r1784 <- 176[%r1783]
	load.64*    %r1785 <- 0[%r1784]
	load.64*    %r1786 <- 0[u]
	store.64*   %r1785 -> 0[%r1786]
	load.64*    %r1787 <- 0[u]
	ptrcast.64* %r1788 <- (64) %r1787
	load.64*    %r1789 <- 0[L]
	load.64*    %r1790 <- 32[%r1789]
	load.64*    %r1791 <- 176[%r1790]
	store.64*   %r1788 -> 0[%r1791]
	load.64*    %r1792 <- 0[u]
	phisrc.64*  %phi57(return) <- %r1792
	br          .L339

.L339:
	phi.64*     %r1793 <- %phi57(return)
	ret.64*     %r1792


hashnum:
.L340:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.f64   %arg2 -> 0[n]
	load.f64    %r1794 <- 0[n]
	set.f64     %r1795 <- 0.000000
	seteq.32    %r1796 <- %r1794, %r1795
	br          %r1796, .L341, .L342

.L341:
	load.64*    %r1797 <- 0[t]
	load.64*    %r1798 <- 32[%r1797]
	add.64*     %r1799 <- %r1798, $0
	phisrc.64*  %phi58(return) <- %r1799
	br          .L343

.L342:
	symaddr.64* %r1801 <- a
	cast.64*    %r1802 <- (64) %r1801
	symaddr.64* %r1803 <- n
	cast.64*    %r1804 <- (64) %r1803
	push.64*    %r1802
	push.64*    %r1804
	push.64     $8
	call.64*    %r1805 <- memcpy
	store.32    $1 -> 0[i]
	br          .L347

.L347:
	load.32     %r1806 <- 0[i]
	setlt.32    %r1807 <- %r1806, $2
	br          %r1807, .L344, .L346

.L344:
	symaddr.64* %r1808 <- a
	load.32     %r1809 <- 0[i]
	scast.64    %r1810 <- (32) %r1809
	muls.64     %r1811 <- %r1810, $4
	add.64*     %r1812 <- %r1808, %r1811
	load.32     %r1813 <- 0[%r1812]
	load.32     %r1814 <- 0[a]
	cast.32     %r1815 <- (32) %r1814
	add.32      %r1816 <- %r1815, %r1813
	cast.32     %r1817 <- (32) %r1816
	store.32    %r1817 -> 0[a]
	br          .L345

.L345:
	load.32     %r1818 <- 0[i]
	add.32      %r1819 <- %r1818, $1
	store.32    %r1819 -> 0[i]
	br          .L347

.L346:
	load.64*    %r1820 <- 0[t]
	load.64*    %r1821 <- 32[%r1820]
	load.32     %r1822 <- 0[a]
	cast.64     %r1823 <- (32) %r1822
	load.64*    %r1824 <- 0[t]
	load.8      %r1825 <- 11[%r1824]
	cast.32     %r1826 <- (8) %r1825
	shl.64      %r1827 <- $1, %r1826
	sub.64      %r1828 <- %r1827, $1
	or.64       %r1829 <- %r1828, $1
	modu.64     %r1830 <- %r1823, %r1829
	muls.64     %r1831 <- %r1830, $40
	add.64*     %r1832 <- %r1821, %r1831
	phisrc.64*  %phi59(return) <- %r1832
	br          .L343

.L343:
	phi.64*     %r1800 <- %phi58(return), %phi59(return)
	ret.64*     %r1800


mainposition:
.L348:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r1833 <- 0[key]
	load.32     %r1834 <- 8[%r1833]
	switch.32   %r1834, 1 -> .L352, 2 -> .L353, 3 -> .L350, 4 -> .L351, default -> .L354

.L350:
	load.64*    %r1835 <- 0[t]
	load.64*    %r1836 <- 0[key]
	load.f64    %r1837 <- 0[%r1836]
	fpcast.f64  %r1838 <- (64) %r1837
	push.64*    %r1835
	push.f64    %r1838
	call.64*    %r1839 <- hashnum
	phisrc.64*  %phi60(return) <- %r1839
	br          .L355

.L351:
	load.64*    %r1841 <- 0[t]
	load.64*    %r1842 <- 32[%r1841]
	load.64*    %r1843 <- 0[key]
	load.64*    %r1844 <- 0[%r1843]
	load.32     %r1845 <- 12[%r1844]
	cast.64     %r1846 <- (32) %r1845
	load.64*    %r1847 <- 0[t]
	load.8      %r1848 <- 11[%r1847]
	cast.32     %r1849 <- (8) %r1848
	shl.64      %r1850 <- $1, %r1849
	sub.64      %r1851 <- %r1850, $1
	and.64      %r1852 <- %r1846, %r1851
	cast.32     %r1853 <- (64) %r1852
	scast.64    %r1854 <- (32) %r1853
	muls.64     %r1855 <- %r1854, $40
	add.64*     %r1856 <- %r1842, %r1855
	phisrc.64*  %phi61(return) <- %r1856
	br          .L355

.L352:
	load.64*    %r1857 <- 0[t]
	load.64*    %r1858 <- 32[%r1857]
	load.64*    %r1859 <- 0[key]
	load.32     %r1860 <- 0[%r1859]
	scast.64    %r1861 <- (32) %r1860
	load.64*    %r1862 <- 0[t]
	load.8      %r1863 <- 11[%r1862]
	cast.32     %r1864 <- (8) %r1863
	shl.64      %r1865 <- $1, %r1864
	sub.64      %r1866 <- %r1865, $1
	and.64      %r1867 <- %r1861, %r1866
	cast.32     %r1868 <- (64) %r1867
	scast.64    %r1869 <- (32) %r1868
	muls.64     %r1870 <- %r1869, $40
	add.64*     %r1871 <- %r1858, %r1870
	phisrc.64*  %phi62(return) <- %r1871
	br          .L355

.L353:
	load.64*    %r1872 <- 0[t]
	load.64*    %r1873 <- 32[%r1872]
	load.64*    %r1874 <- 0[key]
	load.64*    %r1875 <- 0[%r1874]
	cast.64     %r1876 <- (64) %r1875
	cast.32     %r1877 <- (64) %r1876
	cast.64     %r1878 <- (32) %r1877
	load.64*    %r1879 <- 0[t]
	load.8      %r1880 <- 11[%r1879]
	cast.32     %r1881 <- (8) %r1880
	shl.64      %r1882 <- $1, %r1881
	sub.64      %r1883 <- %r1882, $1
	or.64       %r1884 <- %r1883, $1
	modu.64     %r1885 <- %r1878, %r1884
	muls.64     %r1886 <- %r1885, $40
	add.64*     %r1887 <- %r1873, %r1886
	phisrc.64*  %phi63(return) <- %r1887
	br          .L355

.L354:
	load.64*    %r1888 <- 0[t]
	load.64*    %r1889 <- 32[%r1888]
	load.64*    %r1890 <- 0[key]
	load.64*    %r1891 <- 0[%r1890]
	cast.64     %r1892 <- (64) %r1891
	cast.32     %r1893 <- (64) %r1892
	cast.64     %r1894 <- (32) %r1893
	load.64*    %r1895 <- 0[t]
	load.8      %r1896 <- 11[%r1895]
	cast.32     %r1897 <- (8) %r1896
	shl.64      %r1898 <- $1, %r1897
	sub.64      %r1899 <- %r1898, $1
	or.64       %r1900 <- %r1899, $1
	modu.64     %r1901 <- %r1894, %r1900
	muls.64     %r1902 <- %r1901, $40
	add.64*     %r1903 <- %r1889, %r1902
	phisrc.64*  %phi64(return) <- %r1903
	br          .L355

.L355:
	phi.64*     %r1840 <- %phi60(return), %phi61(return), %phi62(return), %phi63(return), %phi64(return)
	ret.64*     %r1840


arrayindex:
.L356:
	<entry-point>
	store.64*   %arg1 -> 0[key]
	load.64*    %r1904 <- 0[key]
	load.32     %r1905 <- 8[%r1904]
	scast.32    %r1906 <- (32) %r1905
	seteq.32    %r1907 <- %r1906, $3
	br          %r1907, .L357, .L358

.L357:
	load.64*    %r1908 <- 0[key]
	load.f64    %r1909 <- 0[%r1908]
	fpcast.f64  %r1910 <- (64) %r1909
	store.f64   %r1910 -> 0[n]
	load.f64    %r1911 <- 0[n]
	cast.32     %r1912 <- (64) %r1911
	store.32    %r1912 -> 0[k]
	load.32     %r1913 <- 0[k]
	fpcast.f64  %r1914 <- (32) %r1913
	load.f64    %r1915 <- 0[n]
	seteq.32    %r1916 <- %r1914, %r1915
	br          %r1916, .L359, .L360

.L359:
	load.32     %r1917 <- 0[k]
	phisrc.32   %phi65(return) <- %r1917
	br          .L361

.L360:
	br          .L358

.L358:
	phisrc.32   %phi66(return) <- $0xffffffff
	br          .L361

.L361:
	phi.32      %r1918 <- %phi65(return), %phi66(return)
	ret.32      %r1918


findindex:
.L362:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r1919 <- 0[key]
	load.32     %r1920 <- 8[%r1919]
	seteq.32    %r1921 <- %r1920, $0
	br          %r1921, .L363, .L364

.L363:
	phisrc.32   %phi67(return) <- $0xffffffff
	br          .L365

.L364:
	load.64*    %r1923 <- 0[key]
	push.64*    %r1923
	call.32     %r1924 <- arrayindex
	store.32    %r1924 -> 0[i]
	load.32     %r1925 <- 0[i]
	setlt.32    %r1926 <- $0, %r1925
	br          %r1926, .L368, .L367

.L368:
	load.32     %r1927 <- 0[i]
	load.64*    %r1928 <- 0[t]
	load.32     %r1929 <- 56[%r1928]
	setle.32    %r1930 <- %r1927, %r1929
	br          %r1930, .L366, .L367

.L366:
	load.32     %r1931 <- 0[i]
	sub.32      %r1932 <- %r1931, $1
	phisrc.32   %phi68(return) <- %r1932
	br          .L365

.L367:
	load.64*    %r1933 <- 0[t]
	load.64*    %r1934 <- 0[key]
	push.64*    %r1933
	push.64*    %r1934
	call.64*    %r1935 <- mainposition
	store.64*   %r1935 -> 0[n]
	br          .L370

.L370:
	load.64*    %r1936 <- 0[n]
	add.64*     %r1937 <- %r1936, $16
	add.64*     %r1938 <- %r1937, $0
	load.64*    %r1939 <- 0[key]
	push.64*    %r1938
	push.64*    %r1939
	call.32     %r1940 <- luaO_rawequalObj
	br          %r1940, .L373, .L375

.L375:
	load.64*    %r1941 <- 0[n]
	load.32     %r1942 <- 24[%r1941]
	seteq.32    %r1943 <- %r1942, $11
	br          %r1943, .L377, .L374

.L377:
	load.64*    %r1944 <- 0[key]
	load.32     %r1945 <- 8[%r1944]
	setge.32    %r1946 <- %r1945, $4
	br          %r1946, .L376, .L374

.L376:
	load.64*    %r1947 <- 0[n]
	load.64*    %r1948 <- 16[%r1947]
	load.64*    %r1949 <- 0[key]
	load.64*    %r1950 <- 0[%r1949]
	seteq.32    %r1951 <- %r1948, %r1950
	br          %r1951, .L373, .L374

.L373:
	load.64*    %r1952 <- 0[n]
	load.64*    %r1953 <- 0[t]
	load.64*    %r1954 <- 32[%r1953]
	add.64*     %r1955 <- %r1954, $0
	sub.64      %r1956 <- %r1952, %r1955
	divs.64     %r1957 <- %r1956, $40
	scast.32    %r1958 <- (64) %r1957
	store.32    %r1958 -> 0[i]
	load.32     %r1959 <- 0[i]
	load.64*    %r1960 <- 0[t]
	load.32     %r1961 <- 56[%r1960]
	add.32      %r1962 <- %r1959, %r1961
	phisrc.32   %phi69(return) <- %r1962
	br          .L365

.L374:
	load.64*    %r1963 <- 0[n]
	load.64*    %r1964 <- 32[%r1963]
	store.64*   %r1964 -> 0[n]
	br          .L378

.L378:
	br          .L371

.L371:
	load.64*    %r1965 <- 0[n]
	br          %r1965, .L370, .L372

.L372:
	load.64*    %r1966 <- 0[L]
	symaddr.64* %r1967 <- <anon symbol:0x62d0011c9080>
	push.64*    %r1966
	push.64*    %r1967
	call        luaG_runerror
	phisrc.32   %phi70(return) <- $0
	br          .L365

.L365:
	phi.32      %r1922 <- %phi67(return), %phi68(return), %phi69(return), %phi70(return)
	ret.32      %r1922


luaH_next:
.L379:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r1968 <- 0[L]
	load.64*    %r1969 <- 0[t]
	load.64*    %r1970 <- 0[key]
	push.64*    %r1968
	push.64*    %r1969
	push.64*    %r1970
	call.32     %r1971 <- findindex
	store.32    %r1971 -> 0[i]
	load.32     %r1972 <- 0[i]
	add.32      %r1973 <- %r1972, $1
	store.32    %r1973 -> 0[i]
	br          .L383

.L383:
	load.32     %r1974 <- 0[i]
	load.64*    %r1975 <- 0[t]
	load.32     %r1976 <- 56[%r1975]
	setlt.32    %r1977 <- %r1974, %r1976
	br          %r1977, .L380, .L382

.L380:
	load.64*    %r1978 <- 0[t]
	load.64*    %r1979 <- 24[%r1978]
	load.32     %r1980 <- 0[i]
	scast.64    %r1981 <- (32) %r1980
	muls.64     %r1982 <- %r1981, $16
	add.64*     %r1983 <- %r1979, %r1982
	load.32     %r1984 <- 8[%r1983]
	seteq.32    %r1985 <- %r1984, $0
	br          %r1985, .L385, .L384

.L384:
	load.64*    %r1986 <- 0[key]
	store.64*   %r1986 -> 0[i_o]
	load.32     %r1987 <- 0[i]
	add.32      %r1988 <- %r1987, $1
	fpcast.f64  %r1989 <- (32) %r1988
	load.64*    %r1990 <- 0[i_o]
	store.f64   %r1989 -> 0[%r1990]
	load.64*    %r1991 <- 0[i_o]
	store.32    $3 -> 8[%r1991]
	load.64*    %r1992 <- 0[t]
	load.64*    %r1993 <- 24[%r1992]
	load.32     %r1994 <- 0[i]
	scast.64    %r1995 <- (32) %r1994
	muls.64     %r1996 <- %r1995, $16
	add.64*     %r1997 <- %r1993, %r1996
	store.64*   %r1997 -> 0[o2]
	load.64*    %r1998 <- 0[key]
	add.64*     %r1999 <- %r1998, $16
	store.64*   %r1999 -> 0[o1]
	load.64*    %r2000 <- 0[o2]
	load.f64    %r2001 <- 0[%r2000]
	fpcast.f64  %r2002 <- (64) %r2001
	load.64*    %r2003 <- 0[o1]
	store.f64   %r2002 -> 0[%r2003]
	load.64*    %r2004 <- 0[o2]
	load.32     %r2005 <- 8[%r2004]
	scast.32    %r2006 <- (32) %r2005
	load.64*    %r2007 <- 0[o1]
	store.32    %r2006 -> 8[%r2007]
	phisrc.32   %phi71(return) <- $1
	br          .L386

.L385:
	br          .L381

.L381:
	load.32     %r2009 <- 0[i]
	add.32      %r2010 <- %r2009, $1
	store.32    %r2010 -> 0[i]
	br          .L383

.L382:
	load.64*    %r2011 <- 0[t]
	load.32     %r2012 <- 56[%r2011]
	load.32     %r2013 <- 0[i]
	scast.32    %r2014 <- (32) %r2013
	sub.32      %r2015 <- %r2014, %r2012
	scast.32    %r2016 <- (32) %r2015
	store.32    %r2016 -> 0[i]
	br          .L390

.L390:
	load.32     %r2017 <- 0[i]
	load.64*    %r2018 <- 0[t]
	load.8      %r2019 <- 11[%r2018]
	cast.32     %r2020 <- (8) %r2019
	shl.64      %r2021 <- $1, %r2020
	cast.32     %r2022 <- (64) %r2021
	setlt.32    %r2023 <- %r2017, %r2022
	br          %r2023, .L387, .L389

.L387:
	load.64*    %r2024 <- 0[t]
	load.64*    %r2025 <- 32[%r2024]
	load.32     %r2026 <- 0[i]
	scast.64    %r2027 <- (32) %r2026
	muls.64     %r2028 <- %r2027, $40
	add.64*     %r2029 <- %r2025, %r2028
	load.32     %r2030 <- 8[%r2029]
	seteq.32    %r2031 <- %r2030, $0
	br          %r2031, .L392, .L391

.L391:
	load.64*    %r2032 <- 0[t]
	load.64*    %r2033 <- 32[%r2032]
	load.32     %r2034 <- 0[i]
	scast.64    %r2035 <- (32) %r2034
	muls.64     %r2036 <- %r2035, $40
	add.64*     %r2037 <- %r2033, %r2036
	add.64*     %r2038 <- %r2037, $16
	add.64*     %r2039 <- %r2038, $0
	store.64*   %r2039 -> 0[o2]
	load.64*    %r2040 <- 0[key]
	store.64*   %r2040 -> 0[o1]
	load.64*    %r2041 <- 0[o2]
	load.f64    %r2042 <- 0[%r2041]
	fpcast.f64  %r2043 <- (64) %r2042
	load.64*    %r2044 <- 0[o1]
	store.f64   %r2043 -> 0[%r2044]
	load.64*    %r2045 <- 0[o2]
	load.32     %r2046 <- 8[%r2045]
	scast.32    %r2047 <- (32) %r2046
	load.64*    %r2048 <- 0[o1]
	store.32    %r2047 -> 8[%r2048]
	load.64*    %r2049 <- 0[t]
	load.64*    %r2050 <- 32[%r2049]
	load.32     %r2051 <- 0[i]
	scast.64    %r2052 <- (32) %r2051
	muls.64     %r2053 <- %r2052, $40
	add.64*     %r2054 <- %r2050, %r2053
	add.64*     %r2055 <- %r2054, $0
	store.64*   %r2055 -> 0[o2]
	load.64*    %r2056 <- 0[key]
	add.64*     %r2057 <- %r2056, $16
	store.64*   %r2057 -> 0[o1]
	load.64*    %r2058 <- 0[o2]
	load.f64    %r2059 <- 0[%r2058]
	fpcast.f64  %r2060 <- (64) %r2059
	load.64*    %r2061 <- 0[o1]
	store.f64   %r2060 -> 0[%r2061]
	load.64*    %r2062 <- 0[o2]
	load.32     %r2063 <- 8[%r2062]
	scast.32    %r2064 <- (32) %r2063
	load.64*    %r2065 <- 0[o1]
	store.32    %r2064 -> 8[%r2065]
	phisrc.32   %phi72(return) <- $1
	br          .L386

.L392:
	br          .L388

.L388:
	load.32     %r2066 <- 0[i]
	add.32      %r2067 <- %r2066, $1
	store.32    %r2067 -> 0[i]
	br          .L390

.L389:
	phisrc.32   %phi73(return) <- $0
	br          .L386

.L386:
	phi.32      %r2008 <- %phi71(return), %phi72(return), %phi73(return)
	ret.32      %r2008


computesizes:
.L393:
	<entry-point>
	store.64*   %arg1 -> 0[nums]
	store.64*   %arg2 -> 0[narray]
	store.32    $0 -> 0[a]
	store.32    $0 -> 0[na]
	store.32    $0 -> 0[n]
	store.32    $0 -> 0[i]
	store.32    $1 -> 0[twotoi]
	br          .L397

.L397:
	load.32     %r2068 <- 0[twotoi]
	divs.32     %r2069 <- %r2068, $2
	load.64*    %r2070 <- 0[narray]
	load.32     %r2071 <- 0[%r2070]
	setlt.32    %r2072 <- %r2069, %r2071
	br          %r2072, .L394, .L396

.L394:
	load.64*    %r2073 <- 0[nums]
	load.32     %r2074 <- 0[i]
	scast.64    %r2075 <- (32) %r2074
	muls.64     %r2076 <- %r2075, $4
	add.64*     %r2077 <- %r2073, %r2076
	load.32     %r2078 <- 0[%r2077]
	setgt.32    %r2079 <- %r2078, $0
	br          %r2079, .L398, .L399

.L398:
	load.64*    %r2080 <- 0[nums]
	load.32     %r2081 <- 0[i]
	scast.64    %r2082 <- (32) %r2081
	muls.64     %r2083 <- %r2082, $4
	add.64*     %r2084 <- %r2080, %r2083
	load.32     %r2085 <- 0[%r2084]
	load.32     %r2086 <- 0[a]
	scast.32    %r2087 <- (32) %r2086
	add.32      %r2088 <- %r2087, %r2085
	scast.32    %r2089 <- (32) %r2088
	store.32    %r2089 -> 0[a]
	load.32     %r2090 <- 0[a]
	load.32     %r2091 <- 0[twotoi]
	divs.32     %r2092 <- %r2091, $2
	setgt.32    %r2093 <- %r2090, %r2092
	br          %r2093, .L400, .L401

.L400:
	load.32     %r2094 <- 0[twotoi]
	store.32    %r2094 -> 0[n]
	load.32     %r2095 <- 0[a]
	store.32    %r2095 -> 0[na]
	br          .L401

.L401:
	br          .L399

.L399:
	load.32     %r2096 <- 0[a]
	load.64*    %r2097 <- 0[narray]
	load.32     %r2098 <- 0[%r2097]
	seteq.32    %r2099 <- %r2096, %r2098
	br          %r2099, .L402, .L403

.L402:
	br          .L396

.L403:
	br          .L395

.L395:
	load.32     %r2100 <- 0[i]
	add.32      %r2101 <- %r2100, $1
	store.32    %r2101 -> 0[i]
	load.32     %r2102 <- 0[twotoi]
	scast.32    %r2103 <- (32) %r2102
	muls.32     %r2104 <- %r2103, $2
	scast.32    %r2105 <- (32) %r2104
	store.32    %r2105 -> 0[twotoi]
	br          .L397

.L396:
	load.32     %r2106 <- 0[n]
	load.64*    %r2107 <- 0[narray]
	store.32    %r2106 -> 0[%r2107]
	load.32     %r2108 <- 0[na]
	phisrc.32   %phi74(return) <- %r2108
	br          .L404

.L404:
	phi.32      %r2109 <- %phi74(return)
	ret.32      %r2108


countint:
.L405:
	<entry-point>
	store.64*   %arg1 -> 0[key]
	store.64*   %arg2 -> 0[nums]
	load.64*    %r2110 <- 0[key]
	push.64*    %r2110
	call.32     %r2111 <- arrayindex
	store.32    %r2111 -> 0[k]
	load.32     %r2112 <- 0[k]
	setlt.32    %r2113 <- $0, %r2112
	load.32     %r2114 <- 0[k]
	setle.32    %r2115 <- %r2114, $0x40000000
	and-bool.32 %r2116 <- %r2113, %r2115
	br          %r2116, .L406, .L407

.L406:
	load.64*    %r2117 <- 0[nums]
	load.32     %r2118 <- 0[k]
	sub.32      %r2119 <- %r2118, $1
	scast.32    %r2120 <- (32) %r2119
	push.32     %r2120
	call.32     %r2121 <- luaO_log2
	add.32      %r2122 <- %r2121, $1
	scast.64    %r2123 <- (32) %r2122
	muls.64     %r2124 <- %r2123, $4
	add.64*     %r2125 <- %r2117, %r2124
	load.32     %r2126 <- 0[%r2125]
	add.32      %r2127 <- %r2126, $1
	store.32    %r2127 -> 0[%r2125]
	phisrc.32   %phi75(return) <- $1
	br          .L408

.L407:
	phisrc.32   %phi76(return) <- $0
	br          .L408

.L408:
	phi.32      %r2128 <- %phi75(return), %phi76(return)
	ret.32      %r2128


numusearray:
.L410:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[nums]
	store.32    $0 -> 0[ause]
	store.32    $1 -> 0[i]
	store.32    $0 -> 0[lg]
	store.32    $1 -> 0[ttlg]
	br          .L414

.L414:
	load.32     %r2129 <- 0[lg]
	setle.32    %r2130 <- %r2129, $30
	br          %r2130, .L411, .L413

.L411:
	store.32    $0 -> 0[lc]
	load.32     %r2131 <- 0[ttlg]
	store.32    %r2131 -> 0[lim]
	load.32     %r2132 <- 0[lim]
	load.64*    %r2133 <- 0[t]
	load.32     %r2134 <- 56[%r2133]
	scast.32    %r2135 <- (32) %r2134
	setgt.32    %r2136 <- %r2132, %r2135
	br          %r2136, .L415, .L416

.L415:
	load.64*    %r2137 <- 0[t]
	load.32     %r2138 <- 56[%r2137]
	scast.32    %r2139 <- (32) %r2138
	store.32    %r2139 -> 0[lim]
	load.32     %r2140 <- 0[i]
	load.32     %r2141 <- 0[lim]
	setgt.32    %r2142 <- %r2140, %r2141
	br          %r2142, .L417, .L418

.L417:
	br          .L413

.L418:
	br          .L416

.L416:
	br          .L422

.L422:
	load.32     %r2143 <- 0[i]
	load.32     %r2144 <- 0[lim]
	setle.32    %r2145 <- %r2143, %r2144
	br          %r2145, .L419, .L421

.L419:
	load.64*    %r2146 <- 0[t]
	load.64*    %r2147 <- 24[%r2146]
	load.32     %r2148 <- 0[i]
	sub.32      %r2149 <- %r2148, $1
	scast.64    %r2150 <- (32) %r2149
	muls.64     %r2151 <- %r2150, $16
	add.64*     %r2152 <- %r2147, %r2151
	load.32     %r2153 <- 8[%r2152]
	seteq.32    %r2154 <- %r2153, $0
	br          %r2154, .L424, .L423

.L423:
	load.32     %r2155 <- 0[lc]
	add.32      %r2156 <- %r2155, $1
	store.32    %r2156 -> 0[lc]
	br          .L424

.L424:
	br          .L420

.L420:
	load.32     %r2157 <- 0[i]
	add.32      %r2158 <- %r2157, $1
	store.32    %r2158 -> 0[i]
	br          .L422

.L421:
	load.32     %r2159 <- 0[lc]
	load.64*    %r2160 <- 0[nums]
	load.32     %r2161 <- 0[lg]
	scast.64    %r2162 <- (32) %r2161
	muls.64     %r2163 <- %r2162, $4
	add.64*     %r2164 <- %r2160, %r2163
	load.32     %r2165 <- 0[%r2164]
	scast.32    %r2166 <- (32) %r2165
	add.32      %r2167 <- %r2166, %r2159
	scast.32    %r2168 <- (32) %r2167
	store.32    %r2168 -> 0[%r2164]
	load.32     %r2169 <- 0[lc]
	load.32     %r2170 <- 0[ause]
	scast.32    %r2171 <- (32) %r2170
	add.32      %r2172 <- %r2171, %r2169
	scast.32    %r2173 <- (32) %r2172
	store.32    %r2173 -> 0[ause]
	br          .L412

.L412:
	load.32     %r2174 <- 0[lg]
	add.32      %r2175 <- %r2174, $1
	store.32    %r2175 -> 0[lg]
	load.32     %r2176 <- 0[ttlg]
	scast.32    %r2177 <- (32) %r2176
	muls.32     %r2178 <- %r2177, $2
	scast.32    %r2179 <- (32) %r2178
	store.32    %r2179 -> 0[ttlg]
	br          .L414

.L413:
	load.32     %r2180 <- 0[ause]
	phisrc.32   %phi77(return) <- %r2180
	br          .L425

.L425:
	phi.32      %r2181 <- %phi77(return)
	ret.32      %r2180


numusehash:
.L426:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[nums]
	store.64*   %arg3 -> 0[pnasize]
	store.32    $0 -> 0[totaluse]
	store.32    $0 -> 0[ause]
	load.64*    %r2182 <- 0[t]
	load.8      %r2183 <- 11[%r2182]
	cast.32     %r2184 <- (8) %r2183
	shl.64      %r2185 <- $1, %r2184
	cast.32     %r2186 <- (64) %r2185
	store.32    %r2186 -> 0[i]
	br          .L430

.L430:
	load.32     %r2187 <- 0[i]
	sub.32      %r2188 <- %r2187, $1
	store.32    %r2188 -> 0[i]
	br          %r2187, .L427, .L429

.L427:
	load.64*    %r2189 <- 0[t]
	load.64*    %r2190 <- 32[%r2189]
	load.32     %r2191 <- 0[i]
	scast.64    %r2192 <- (32) %r2191
	muls.64     %r2193 <- %r2192, $40
	add.64*     %r2194 <- %r2190, %r2193
	store.64*   %r2194 -> 0[n]
	load.64*    %r2195 <- 0[n]
	load.32     %r2196 <- 8[%r2195]
	seteq.32    %r2197 <- %r2196, $0
	br          %r2197, .L432, .L431

.L431:
	load.64*    %r2198 <- 0[n]
	add.64*     %r2199 <- %r2198, $16
	add.64*     %r2200 <- %r2199, $0
	load.64*    %r2201 <- 0[nums]
	push.64*    %r2200
	push.64*    %r2201
	call.32     %r2202 <- countint
	load.32     %r2203 <- 0[ause]
	scast.32    %r2204 <- (32) %r2203
	add.32      %r2205 <- %r2204, %r2202
	scast.32    %r2206 <- (32) %r2205
	store.32    %r2206 -> 0[ause]
	load.32     %r2207 <- 0[totaluse]
	add.32      %r2208 <- %r2207, $1
	store.32    %r2208 -> 0[totaluse]
	br          .L432

.L432:
	br          .L428

.L428:
	br          .L430

.L429:
	load.32     %r2209 <- 0[ause]
	load.64*    %r2210 <- 0[pnasize]
	load.32     %r2211 <- 0[%r2210]
	scast.32    %r2212 <- (32) %r2211
	add.32      %r2213 <- %r2212, %r2209
	scast.32    %r2214 <- (32) %r2213
	store.32    %r2214 -> 0[%r2210]
	load.32     %r2215 <- 0[totaluse]
	phisrc.32   %phi78(return) <- %r2215
	br          .L433

.L433:
	phi.32      %r2216 <- %phi78(return)
	ret.32      %r2215


setarrayvector:
.L434:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[size]
	load.32     %r2217 <- 0[size]
	add.32      %r2218 <- %r2217, $1
	scast.64    %r2219 <- (32) %r2218
	setbe.32    %r2220 <- %r2219, $0xfffffffffffffff
	br          %r2220, .L435, .L436

.L435:
	load.64*    %r2221 <- 0[L]
	load.64*    %r2222 <- 0[t]
	load.64*    %r2223 <- 24[%r2222]
	cast.64*    %r2224 <- (64) %r2223
	load.64*    %r2225 <- 0[t]
	load.32     %r2226 <- 56[%r2225]
	scast.64    %r2227 <- (32) %r2226
	mulu.64     %r2228 <- %r2227, $16
	load.32     %r2229 <- 0[size]
	scast.64    %r2230 <- (32) %r2229
	mulu.64     %r2231 <- %r2230, $16
	push.64*    %r2221
	push.64*    %r2224
	push.64     %r2228
	push.64     %r2231
	call.64*    %r2232 <- luaM_realloc_
	phisrc.64*  %phi79 <- %r2232
	br          .L437

.L436:
	load.64*    %r2233 <- 0[L]
	push.64*    %r2233
	call.64*    %r2234 <- luaM_toobig
	cast.64*    %r2235 <- (64) %r2234
	phisrc.64*  %phi80 <- %r2235
	br          .L437

.L437:
	phi.64*     %r2236 <- %phi79, %phi80
	ptrcast.64* %r2237 <- (64) %r2236
	load.64*    %r2238 <- 0[t]
	store.64*   %r2237 -> 24[%r2238]
	load.64*    %r2239 <- 0[t]
	load.32     %r2240 <- 56[%r2239]
	store.32    %r2240 -> 0[i]
	br          .L441

.L441:
	load.32     %r2241 <- 0[i]
	load.32     %r2242 <- 0[size]
	setlt.32    %r2243 <- %r2241, %r2242
	br          %r2243, .L438, .L440

.L438:
	load.64*    %r2244 <- 0[t]
	load.64*    %r2245 <- 24[%r2244]
	load.32     %r2246 <- 0[i]
	scast.64    %r2247 <- (32) %r2246
	muls.64     %r2248 <- %r2247, $16
	add.64*     %r2249 <- %r2245, %r2248
	store.32    $0 -> 8[%r2249]
	br          .L439

.L439:
	load.32     %r2250 <- 0[i]
	add.32      %r2251 <- %r2250, $1
	store.32    %r2251 -> 0[i]
	br          .L441

.L440:
	load.32     %r2252 <- 0[size]
	load.64*    %r2253 <- 0[t]
	store.32    %r2252 -> 56[%r2253]
	br          .L442

.L442:
	ret


setnodevector:
.L443:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[size]
	load.32     %r2254 <- 0[size]
	seteq.32    %r2255 <- %r2254, $0
	br          %r2255, .L444, .L445

.L444:
	symaddr.64* %r2256 <- dummynode_
	ptrcast.64* %r2257 <- (64) %r2256
	load.64*    %r2258 <- 0[t]
	store.64*   %r2257 -> 32[%r2258]
	store.32    $0 -> 0[lsize]
	br          .L446

.L445:
	load.32     %r2259 <- 0[size]
	sub.32      %r2260 <- %r2259, $1
	scast.32    %r2261 <- (32) %r2260
	push.32     %r2261
	call.32     %r2262 <- luaO_log2
	add.32      %r2263 <- %r2262, $1
	store.32    %r2263 -> 0[lsize]
	load.32     %r2264 <- 0[lsize]
	setgt.32    %r2265 <- %r2264, $30
	br          %r2265, .L447, .L448

.L447:
	load.64*    %r2266 <- 0[L]
	symaddr.64* %r2267 <- <anon symbol:0x62d0011d1638>
	push.64*    %r2266
	push.64*    %r2267
	call        luaG_runerror
	br          .L448

.L448:
	load.32     %r2268 <- 0[lsize]
	shl.64      %r2269 <- $1, %r2268
	cast.32     %r2270 <- (64) %r2269
	store.32    %r2270 -> 0[size]
	load.32     %r2271 <- 0[size]
	add.32      %r2272 <- %r2271, $1
	scast.64    %r2273 <- (32) %r2272
	setbe.32    %r2274 <- %r2273, $0x666666666666666
	br          %r2274, .L449, .L450

.L449:
	load.64*    %r2275 <- 0[L]
	load.32     %r2276 <- 0[size]
	scast.64    %r2277 <- (32) %r2276
	mulu.64     %r2278 <- %r2277, $40
	push.64*    %r2275
	push.64*    $0
	push.64     $0
	push.64     %r2278
	call.64*    %r2279 <- luaM_realloc_
	phisrc.64*  %phi81 <- %r2279
	br          .L451

.L450:
	load.64*    %r2280 <- 0[L]
	push.64*    %r2280
	call.64*    %r2281 <- luaM_toobig
	cast.64*    %r2282 <- (64) %r2281
	phisrc.64*  %phi82 <- %r2282
	br          .L451

.L451:
	phi.64*     %r2283 <- %phi81, %phi82
	ptrcast.64* %r2284 <- (64) %r2283
	load.64*    %r2285 <- 0[t]
	store.64*   %r2284 -> 32[%r2285]
	store.32    $0 -> 0[i]
	br          .L455

.L455:
	load.32     %r2286 <- 0[i]
	load.32     %r2287 <- 0[size]
	setlt.32    %r2288 <- %r2286, %r2287
	br          %r2288, .L452, .L454

.L452:
	load.64*    %r2289 <- 0[t]
	load.64*    %r2290 <- 32[%r2289]
	load.32     %r2291 <- 0[i]
	scast.64    %r2292 <- (32) %r2291
	muls.64     %r2293 <- %r2292, $40
	add.64*     %r2294 <- %r2290, %r2293
	store.64*   %r2294 -> 0[n]
	load.64*    %r2295 <- 0[n]
	store.64*   $0 -> 32[%r2295]
	load.64*    %r2296 <- 0[n]
	store.32    $0 -> 24[%r2296]
	load.64*    %r2297 <- 0[n]
	store.32    $0 -> 8[%r2297]
	br          .L453

.L453:
	load.32     %r2298 <- 0[i]
	add.32      %r2299 <- %r2298, $1
	store.32    %r2299 -> 0[i]
	br          .L455

.L454:
	br          .L446

.L446:
	load.32     %r2300 <- 0[lsize]
	scast.8     %r2301 <- (32) %r2300
	load.64*    %r2302 <- 0[t]
	store.8     %r2301 -> 11[%r2302]
	load.64*    %r2303 <- 0[t]
	load.64*    %r2304 <- 32[%r2303]
	load.32     %r2305 <- 0[size]
	scast.64    %r2306 <- (32) %r2305
	muls.64     %r2307 <- %r2306, $40
	add.64*     %r2308 <- %r2304, %r2307
	load.64*    %r2309 <- 0[t]
	store.64*   %r2308 -> 40[%r2309]
	br          .L456

.L456:
	ret


resize:
.L457:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[nasize]
	store.32    %arg4 -> 0[nhsize]
	load.64*    %r2310 <- 0[t]
	load.32     %r2311 <- 56[%r2310]
	store.32    %r2311 -> 0[oldasize]
	load.64*    %r2312 <- 0[t]
	load.8      %r2313 <- 11[%r2312]
	cast.32     %r2314 <- (8) %r2313
	store.32    %r2314 -> 0[oldhsize]
	load.64*    %r2315 <- 0[t]
	load.64*    %r2316 <- 32[%r2315]
	store.64*   %r2316 -> 0[nold]
	load.32     %r2317 <- 0[nasize]
	load.32     %r2318 <- 0[oldasize]
	setgt.32    %r2319 <- %r2317, %r2318
	br          %r2319, .L458, .L459

.L458:
	load.64*    %r2320 <- 0[L]
	load.64*    %r2321 <- 0[t]
	load.32     %r2322 <- 0[nasize]
	push.64*    %r2320
	push.64*    %r2321
	push.32     %r2322
	call        setarrayvector
	br          .L459

.L459:
	load.64*    %r2323 <- 0[L]
	load.64*    %r2324 <- 0[t]
	load.32     %r2325 <- 0[nhsize]
	push.64*    %r2323
	push.64*    %r2324
	push.32     %r2325
	call        setnodevector
	load.32     %r2326 <- 0[nasize]
	load.32     %r2327 <- 0[oldasize]
	setlt.32    %r2328 <- %r2326, %r2327
	br          %r2328, .L460, .L461

.L460:
	load.32     %r2329 <- 0[nasize]
	load.64*    %r2330 <- 0[t]
	store.32    %r2329 -> 56[%r2330]
	load.32     %r2331 <- 0[nasize]
	store.32    %r2331 -> 0[i]
	br          .L465

.L465:
	load.32     %r2332 <- 0[i]
	load.32     %r2333 <- 0[oldasize]
	setlt.32    %r2334 <- %r2332, %r2333
	br          %r2334, .L462, .L464

.L462:
	load.64*    %r2335 <- 0[t]
	load.64*    %r2336 <- 24[%r2335]
	load.32     %r2337 <- 0[i]
	scast.64    %r2338 <- (32) %r2337
	muls.64     %r2339 <- %r2338, $16
	add.64*     %r2340 <- %r2336, %r2339
	load.32     %r2341 <- 8[%r2340]
	seteq.32    %r2342 <- %r2341, $0
	br          %r2342, .L467, .L466

.L466:
	load.64*    %r2343 <- 0[t]
	load.64*    %r2344 <- 24[%r2343]
	load.32     %r2345 <- 0[i]
	scast.64    %r2346 <- (32) %r2345
	muls.64     %r2347 <- %r2346, $16
	add.64*     %r2348 <- %r2344, %r2347
	store.64*   %r2348 -> 0[o2]
	load.64*    %r2349 <- 0[L]
	load.64*    %r2350 <- 0[t]
	load.32     %r2351 <- 0[i]
	add.32      %r2352 <- %r2351, $1
	push.64*    %r2349
	push.64*    %r2350
	push.32     %r2352
	call.64*    %r2353 <- luaH_setnum
	store.64*   %r2353 -> 0[o1]
	load.64*    %r2354 <- 0[o2]
	load.f64    %r2355 <- 0[%r2354]
	fpcast.f64  %r2356 <- (64) %r2355
	load.64*    %r2357 <- 0[o1]
	store.f64   %r2356 -> 0[%r2357]
	load.64*    %r2358 <- 0[o2]
	load.32     %r2359 <- 8[%r2358]
	scast.32    %r2360 <- (32) %r2359
	load.64*    %r2361 <- 0[o1]
	store.32    %r2360 -> 8[%r2361]
	br          .L467

.L467:
	br          .L463

.L463:
	load.32     %r2362 <- 0[i]
	add.32      %r2363 <- %r2362, $1
	store.32    %r2363 -> 0[i]
	br          .L465

.L464:
	load.32     %r2364 <- 0[nasize]
	add.32      %r2365 <- %r2364, $1
	scast.64    %r2366 <- (32) %r2365
	setbe.32    %r2367 <- %r2366, $0xfffffffffffffff
	br          %r2367, .L468, .L469

.L468:
	load.64*    %r2368 <- 0[L]
	load.64*    %r2369 <- 0[t]
	load.64*    %r2370 <- 24[%r2369]
	cast.64*    %r2371 <- (64) %r2370
	load.32     %r2372 <- 0[oldasize]
	scast.64    %r2373 <- (32) %r2372
	mulu.64     %r2374 <- %r2373, $16
	load.32     %r2375 <- 0[nasize]
	scast.64    %r2376 <- (32) %r2375
	mulu.64     %r2377 <- %r2376, $16
	push.64*    %r2368
	push.64*    %r2371
	push.64     %r2374
	push.64     %r2377
	call.64*    %r2378 <- luaM_realloc_
	phisrc.64*  %phi83 <- %r2378
	br          .L470

.L469:
	load.64*    %r2379 <- 0[L]
	push.64*    %r2379
	call.64*    %r2380 <- luaM_toobig
	cast.64*    %r2381 <- (64) %r2380
	phisrc.64*  %phi84 <- %r2381
	br          .L470

.L470:
	phi.64*     %r2382 <- %phi83, %phi84
	ptrcast.64* %r2383 <- (64) %r2382
	load.64*    %r2384 <- 0[t]
	store.64*   %r2383 -> 24[%r2384]
	br          .L461

.L461:
	load.32     %r2385 <- 0[oldhsize]
	shl.64      %r2386 <- $1, %r2385
	sub.64      %r2387 <- %r2386, $1
	cast.32     %r2388 <- (64) %r2387
	store.32    %r2388 -> 0[i]
	br          .L474

.L474:
	load.32     %r2389 <- 0[i]
	setge.32    %r2390 <- %r2389, $0
	br          %r2390, .L471, .L473

.L471:
	load.64*    %r2391 <- 0[nold]
	load.32     %r2392 <- 0[i]
	scast.64    %r2393 <- (32) %r2392
	muls.64     %r2394 <- %r2393, $40
	add.64*     %r2395 <- %r2391, %r2394
	store.64*   %r2395 -> 0[old]
	load.64*    %r2396 <- 0[old]
	load.32     %r2397 <- 8[%r2396]
	seteq.32    %r2398 <- %r2397, $0
	br          %r2398, .L476, .L475

.L475:
	load.64*    %r2399 <- 0[old]
	add.64*     %r2400 <- %r2399, $0
	store.64*   %r2400 -> 0[o2]
	load.64*    %r2401 <- 0[L]
	load.64*    %r2402 <- 0[t]
	load.64*    %r2403 <- 0[old]
	add.64*     %r2404 <- %r2403, $16
	add.64*     %r2405 <- %r2404, $0
	push.64*    %r2401
	push.64*    %r2402
	push.64*    %r2405
	call.64*    %r2406 <- luaH_set
	store.64*   %r2406 -> 0[o1]
	load.64*    %r2407 <- 0[o2]
	load.f64    %r2408 <- 0[%r2407]
	fpcast.f64  %r2409 <- (64) %r2408
	load.64*    %r2410 <- 0[o1]
	store.f64   %r2409 -> 0[%r2410]
	load.64*    %r2411 <- 0[o2]
	load.32     %r2412 <- 8[%r2411]
	scast.32    %r2413 <- (32) %r2412
	load.64*    %r2414 <- 0[o1]
	store.32    %r2413 -> 8[%r2414]
	br          .L476

.L476:
	br          .L472

.L472:
	load.32     %r2415 <- 0[i]
	sub.32      %r2416 <- %r2415, $1
	store.32    %r2416 -> 0[i]
	br          .L474

.L473:
	load.64*    %r2417 <- 0[nold]
	symaddr.64* %r2418 <- dummynode_
	setne.32    %r2419 <- %r2417, %r2418
	br          %r2419, .L477, .L478

.L477:
	load.64*    %r2420 <- 0[L]
	load.64*    %r2421 <- 0[nold]
	cast.64*    %r2422 <- (64) %r2421
	load.32     %r2423 <- 0[oldhsize]
	shl.64      %r2424 <- $1, %r2423
	mulu.64     %r2425 <- %r2424, $40
	push.64*    %r2420
	push.64*    %r2422
	push.64     %r2425
	push.64     $0
	call.64*    %r2426 <- luaM_realloc_
	br          .L478

.L478:
	ret


luaH_resizearray:
.L479:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[nasize]
	load.64*    %r2427 <- 0[t]
	load.64*    %r2428 <- 32[%r2427]
	symaddr.64* %r2429 <- dummynode_
	seteq.32    %r2430 <- %r2428, %r2429
	br          %r2430, .L480, .L481

.L480:
	phisrc.64   %phi85 <- $0
	br          .L482

.L481:
	load.64*    %r2431 <- 0[t]
	load.8      %r2432 <- 11[%r2431]
	cast.32     %r2433 <- (8) %r2432
	shl.64      %r2434 <- $1, %r2433
	phisrc.64   %phi86 <- %r2434
	br          .L482

.L482:
	phi.64      %r2435 <- %phi85, %phi86
	cast.32     %r2436 <- (64) %r2435
	store.32    %r2436 -> 0[nsize]
	load.64*    %r2437 <- 0[L]
	load.64*    %r2438 <- 0[t]
	load.32     %r2439 <- 0[nasize]
	load.32     %r2440 <- 0[nsize]
	push.64*    %r2437
	push.64*    %r2438
	push.32     %r2439
	push.32     %r2440
	call        resize
	br          .L483

.L483:
	ret


rehash:
.L484:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[ek]
	store.32    $0 -> 0[i]
	br          .L488

.L488:
	load.32     %r2441 <- 0[i]
	setle.32    %r2442 <- %r2441, $30
	br          %r2442, .L485, .L487

.L485:
	symaddr.64* %r2443 <- nums
	load.32     %r2444 <- 0[i]
	scast.64    %r2445 <- (32) %r2444
	muls.64     %r2446 <- %r2445, $4
	add.64*     %r2447 <- %r2443, %r2446
	store.32    $0 -> 0[%r2447]
	br          .L486

.L486:
	load.32     %r2448 <- 0[i]
	add.32      %r2449 <- %r2448, $1
	store.32    %r2449 -> 0[i]
	br          .L488

.L487:
	load.64*    %r2450 <- 0[t]
	symaddr.64* %r2451 <- nums
	push.64*    %r2450
	push.64*    %r2451
	call.32     %r2452 <- numusearray
	store.32    %r2452 -> 0[nasize]
	load.32     %r2453 <- 0[nasize]
	store.32    %r2453 -> 0[totaluse]
	load.64*    %r2454 <- 0[t]
	symaddr.64* %r2455 <- nums
	symaddr.64* %r2456 <- nasize
	push.64*    %r2454
	push.64*    %r2455
	push.64*    %r2456
	call.32     %r2457 <- numusehash
	load.32     %r2458 <- 0[totaluse]
	scast.32    %r2459 <- (32) %r2458
	add.32      %r2460 <- %r2459, %r2457
	scast.32    %r2461 <- (32) %r2460
	store.32    %r2461 -> 0[totaluse]
	load.64*    %r2462 <- 0[ek]
	symaddr.64* %r2463 <- nums
	push.64*    %r2462
	push.64*    %r2463
	call.32     %r2464 <- countint
	load.32     %r2465 <- 0[nasize]
	scast.32    %r2466 <- (32) %r2465
	add.32      %r2467 <- %r2466, %r2464
	scast.32    %r2468 <- (32) %r2467
	store.32    %r2468 -> 0[nasize]
	load.32     %r2469 <- 0[totaluse]
	add.32      %r2470 <- %r2469, $1
	store.32    %r2470 -> 0[totaluse]
	symaddr.64* %r2471 <- nums
	symaddr.64* %r2472 <- nasize
	push.64*    %r2471
	push.64*    %r2472
	call.32     %r2473 <- computesizes
	store.32    %r2473 -> 0[na]
	load.64*    %r2474 <- 0[L]
	load.64*    %r2475 <- 0[t]
	load.32     %r2476 <- 0[nasize]
	load.32     %r2477 <- 0[totaluse]
	load.32     %r2478 <- 0[na]
	sub.32      %r2479 <- %r2477, %r2478
	push.64*    %r2474
	push.64*    %r2475
	push.32     %r2476
	push.32     %r2479
	call        resize
	br          .L489

.L489:
	ret


luaH_new:
.L490:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narray]
	store.32    %arg3 -> 0[nhash]
	load.64*    %r2480 <- 0[L]
	push.64*    %r2480
	push.64*    $0
	push.64     $0
	push.64     $64
	call.64*    %r2481 <- luaM_realloc_
	ptrcast.64* %r2482 <- (64) %r2481
	store.64*   %r2482 -> 0[t]
	load.64*    %r2483 <- 0[L]
	load.64*    %r2484 <- 0[t]
	ptrcast.64* %r2485 <- (64) %r2484
	push.64*    %r2483
	push.64*    %r2485
	push.8      $5
	call        luaC_link
	load.64*    %r2486 <- 0[t]
	store.64*   $0 -> 16[%r2486]
	load.64*    %r2487 <- 0[t]
	store.8     $255 -> 10[%r2487]
	load.64*    %r2488 <- 0[t]
	store.64*   $0 -> 24[%r2488]
	load.64*    %r2489 <- 0[t]
	store.32    $0 -> 56[%r2489]
	load.64*    %r2490 <- 0[t]
	store.8     $0 -> 11[%r2490]
	symaddr.64* %r2491 <- dummynode_
	ptrcast.64* %r2492 <- (64) %r2491
	load.64*    %r2493 <- 0[t]
	store.64*   %r2492 -> 32[%r2493]
	load.64*    %r2494 <- 0[L]
	load.64*    %r2495 <- 0[t]
	load.32     %r2496 <- 0[narray]
	push.64*    %r2494
	push.64*    %r2495
	push.32     %r2496
	call        setarrayvector
	load.64*    %r2497 <- 0[L]
	load.64*    %r2498 <- 0[t]
	load.32     %r2499 <- 0[nhash]
	push.64*    %r2497
	push.64*    %r2498
	push.32     %r2499
	call        setnodevector
	load.64*    %r2500 <- 0[t]
	phisrc.64*  %phi87(return) <- %r2500
	br          .L491

.L491:
	phi.64*     %r2501 <- %phi87(return)
	ret.64*     %r2500


luaH_free:
.L492:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	load.64*    %r2502 <- 0[t]
	load.64*    %r2503 <- 32[%r2502]
	symaddr.64* %r2504 <- dummynode_
	setne.32    %r2505 <- %r2503, %r2504
	br          %r2505, .L493, .L494

.L493:
	load.64*    %r2506 <- 0[L]
	load.64*    %r2507 <- 0[t]
	load.64*    %r2508 <- 32[%r2507]
	cast.64*    %r2509 <- (64) %r2508
	load.64*    %r2510 <- 0[t]
	load.8      %r2511 <- 11[%r2510]
	cast.32     %r2512 <- (8) %r2511
	shl.64      %r2513 <- $1, %r2512
	mulu.64     %r2514 <- %r2513, $40
	push.64*    %r2506
	push.64*    %r2509
	push.64     %r2514
	push.64     $0
	call.64*    %r2515 <- luaM_realloc_
	br          .L494

.L494:
	load.64*    %r2516 <- 0[L]
	load.64*    %r2517 <- 0[t]
	load.64*    %r2518 <- 24[%r2517]
	cast.64*    %r2519 <- (64) %r2518
	load.64*    %r2520 <- 0[t]
	load.32     %r2521 <- 56[%r2520]
	scast.64    %r2522 <- (32) %r2521
	mulu.64     %r2523 <- %r2522, $16
	push.64*    %r2516
	push.64*    %r2519
	push.64     %r2523
	push.64     $0
	call.64*    %r2524 <- luaM_realloc_
	load.64*    %r2525 <- 0[L]
	load.64*    %r2526 <- 0[t]
	cast.64*    %r2527 <- (64) %r2526
	push.64*    %r2525
	push.64*    %r2527
	push.64     $64
	push.64     $0
	call.64*    %r2528 <- luaM_realloc_
	br          .L495

.L495:
	ret


getfreepos:
.L496:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	br          .L500

.L500:
	load.64*    %r2529 <- 0[t]
	load.64*    %r2530 <- 40[%r2529]
	sub.64*     %r2531 <- %r2530, $40
	store.64*   %r2531 -> 40[%r2529]
	load.64*    %r2532 <- 0[t]
	load.64*    %r2533 <- 32[%r2532]
	seta.32     %r2534 <- %r2530, %r2533
	br          %r2534, .L497, .L499

.L497:
	load.64*    %r2535 <- 0[t]
	load.64*    %r2536 <- 40[%r2535]
	load.32     %r2537 <- 24[%r2536]
	seteq.32    %r2538 <- %r2537, $0
	br          %r2538, .L501, .L502

.L501:
	load.64*    %r2539 <- 0[t]
	load.64*    %r2540 <- 40[%r2539]
	phisrc.64*  %phi88(return) <- %r2540
	br          .L503

.L502:
	br          .L498

.L498:
	br          .L500

.L499:
	phisrc.64*  %phi89(return) <- $0
	br          .L503

.L503:
	phi.64*     %r2541 <- %phi88(return), %phi89(return)
	ret.64*     %r2541


newkey:
.L504:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2542 <- 0[t]
	load.64*    %r2543 <- 0[key]
	push.64*    %r2542
	push.64*    %r2543
	call.64*    %r2544 <- mainposition
	store.64*   %r2544 -> 0[mp]
	load.64*    %r2545 <- 0[mp]
	load.32     %r2546 <- 8[%r2545]
	seteq.32    %r2547 <- %r2546, $0
	seteq.32    %r2548 <- %r2547, $0
	load.64*    %r2549 <- 0[mp]
	symaddr.64* %r2550 <- dummynode_
	seteq.32    %r2551 <- %r2549, %r2550
	or-bool.32  %r2552 <- %r2548, %r2551
	br          %r2552, .L505, .L506

.L505:
	load.64*    %r2553 <- 0[t]
	push.64*    %r2553
	call.64*    %r2554 <- getfreepos
	store.64*   %r2554 -> 0[n]
	load.64*    %r2555 <- 0[n]
	seteq.32    %r2556 <- %r2555, $0
	br          %r2556, .L507, .L508

.L507:
	load.64*    %r2557 <- 0[L]
	load.64*    %r2558 <- 0[t]
	load.64*    %r2559 <- 0[key]
	push.64*    %r2557
	push.64*    %r2558
	push.64*    %r2559
	call        rehash
	load.64*    %r2560 <- 0[L]
	load.64*    %r2561 <- 0[t]
	load.64*    %r2562 <- 0[key]
	push.64*    %r2560
	push.64*    %r2561
	push.64*    %r2562
	call.64*    %r2563 <- luaH_set
	phisrc.64*  %phi90(return) <- %r2563
	br          .L509

.L508:
	load.64*    %r2565 <- 0[t]
	load.64*    %r2566 <- 0[mp]
	add.64*     %r2567 <- %r2566, $16
	add.64*     %r2568 <- %r2567, $0
	push.64*    %r2565
	push.64*    %r2568
	call.64*    %r2569 <- mainposition
	store.64*   %r2569 -> 0[othern]
	load.64*    %r2570 <- 0[othern]
	load.64*    %r2571 <- 0[mp]
	setne.32    %r2572 <- %r2570, %r2571
	br          %r2572, .L510, .L511

.L510:
	br          .L515

.L515:
	load.64*    %r2573 <- 0[othern]
	load.64*    %r2574 <- 32[%r2573]
	load.64*    %r2575 <- 0[mp]
	setne.32    %r2576 <- %r2574, %r2575
	br          %r2576, .L512, .L514

.L512:
	load.64*    %r2577 <- 0[othern]
	load.64*    %r2578 <- 32[%r2577]
	store.64*   %r2578 -> 0[othern]
	br          .L513

.L513:
	br          .L515

.L514:
	load.64*    %r2579 <- 0[n]
	load.64*    %r2580 <- 0[othern]
	store.64*   %r2579 -> 32[%r2580]
	load.64*    %r2581 <- 0[n]
	cast.64*    %r2582 <- (64) %r2581
	load.64*    %r2583 <- 0[mp]
	cast.64*    %r2584 <- (64) %r2583
	push.64*    %r2582
	push.64*    %r2584
	push.64     $40
	call.64*    %r2585 <- memcpy
	load.64*    %r2586 <- 0[mp]
	store.64*   $0 -> 32[%r2586]
	load.64*    %r2587 <- 0[mp]
	store.32    $0 -> 8[%r2587]
	br          .L516

.L511:
	load.64*    %r2588 <- 0[mp]
	load.64*    %r2589 <- 32[%r2588]
	load.64*    %r2590 <- 0[n]
	store.64*   %r2589 -> 32[%r2590]
	load.64*    %r2591 <- 0[n]
	load.64*    %r2592 <- 0[mp]
	store.64*   %r2591 -> 32[%r2592]
	load.64*    %r2593 <- 0[n]
	store.64*   %r2593 -> 0[mp]
	br          .L516

.L516:
	br          .L506

.L506:
	load.64*    %r2594 <- 0[key]
	load.f64    %r2595 <- 0[%r2594]
	fpcast.f64  %r2596 <- (64) %r2595
	load.64*    %r2597 <- 0[mp]
	store.f64   %r2596 -> 16[%r2597]
	load.64*    %r2598 <- 0[key]
	load.32     %r2599 <- 8[%r2598]
	scast.32    %r2600 <- (32) %r2599
	load.64*    %r2601 <- 0[mp]
	store.32    %r2600 -> 24[%r2601]
	load.64*    %r2602 <- 0[key]
	load.32     %r2603 <- 8[%r2602]
	scast.32    %r2604 <- (32) %r2603
	setge.32    %r2605 <- %r2604, $4
	br          %r2605, .L520, .L518

.L520:
	load.64*    %r2606 <- 0[key]
	load.64*    %r2607 <- 0[%r2606]
	load.8      %r2608 <- 9[%r2607]
	cast.32     %r2609 <- (8) %r2608
	and.32      %r2610 <- %r2609, $3
	br          %r2610, .L519, .L518

.L519:
	load.64*    %r2611 <- 0[t]
	ptrcast.64* %r2612 <- (64) %r2611
	load.8      %r2613 <- 9[%r2612]
	cast.32     %r2614 <- (8) %r2613
	and.32      %r2615 <- %r2614, $4
	br          %r2615, .L517, .L518

.L517:
	load.64*    %r2616 <- 0[L]
	load.64*    %r2617 <- 0[t]
	push.64*    %r2616
	push.64*    %r2617
	call        luaC_barrierback
	br          .L518

.L518:
	load.64*    %r2618 <- 0[mp]
	add.64*     %r2619 <- %r2618, $0
	phisrc.64*  %phi91(return) <- %r2619
	br          .L509

.L509:
	phi.64*     %r2564 <- %phi90(return), %phi91(return)
	ret.64*     %r2564


luaH_getnum:
.L521:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.32    %arg2 -> 0[key]
	load.32     %r2620 <- 0[key]
	scast.32    %r2621 <- (32) %r2620
	sub.32      %r2622 <- %r2621, $1
	load.64*    %r2623 <- 0[t]
	load.32     %r2624 <- 56[%r2623]
	scast.32    %r2625 <- (32) %r2624
	setb.32     %r2626 <- %r2622, %r2625
	br          %r2626, .L522, .L523

.L522:
	load.64*    %r2627 <- 0[t]
	load.64*    %r2628 <- 24[%r2627]
	load.32     %r2629 <- 0[key]
	sub.32      %r2630 <- %r2629, $1
	scast.64    %r2631 <- (32) %r2630
	muls.64     %r2632 <- %r2631, $16
	add.64*     %r2633 <- %r2628, %r2632
	phisrc.64*  %phi92(return) <- %r2633
	br          .L524

.L523:
	load.32     %r2635 <- 0[key]
	fpcast.f64  %r2636 <- (32) %r2635
	store.f64   %r2636 -> 0[nk]
	load.64*    %r2637 <- 0[t]
	load.f64    %r2638 <- 0[nk]
	push.64*    %r2637
	push.f64    %r2638
	call.64*    %r2639 <- hashnum
	store.64*   %r2639 -> 0[n]
	br          .L526

.L526:
	load.64*    %r2640 <- 0[n]
	load.32     %r2641 <- 24[%r2640]
	seteq.32    %r2642 <- %r2641, $3
	br          %r2642, .L531, .L530

.L531:
	load.64*    %r2643 <- 0[n]
	load.f64    %r2644 <- 16[%r2643]
	load.f64    %r2645 <- 0[nk]
	seteq.32    %r2646 <- %r2644, %r2645
	br          %r2646, .L529, .L530

.L529:
	load.64*    %r2647 <- 0[n]
	add.64*     %r2648 <- %r2647, $0
	phisrc.64*  %phi93(return) <- %r2648
	br          .L524

.L530:
	load.64*    %r2649 <- 0[n]
	load.64*    %r2650 <- 32[%r2649]
	store.64*   %r2650 -> 0[n]
	br          .L532

.L532:
	br          .L527

.L527:
	load.64*    %r2651 <- 0[n]
	br          %r2651, .L526, .L528

.L528:
	symaddr.64* %r2652 <- luaO_nilobject_
	phisrc.64*  %phi94(return) <- %r2652
	br          .L524

.L524:
	phi.64*     %r2634 <- %phi92(return), %phi93(return), %phi94(return)
	ret.64*     %r2634


luaH_getstr:
.L533:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r2653 <- 0[t]
	load.64*    %r2654 <- 32[%r2653]
	load.64*    %r2655 <- 0[key]
	load.32     %r2656 <- 12[%r2655]
	cast.64     %r2657 <- (32) %r2656
	load.64*    %r2658 <- 0[t]
	load.8      %r2659 <- 11[%r2658]
	cast.32     %r2660 <- (8) %r2659
	shl.64      %r2661 <- $1, %r2660
	sub.64      %r2662 <- %r2661, $1
	and.64      %r2663 <- %r2657, %r2662
	cast.32     %r2664 <- (64) %r2663
	scast.64    %r2665 <- (32) %r2664
	muls.64     %r2666 <- %r2665, $40
	add.64*     %r2667 <- %r2654, %r2666
	store.64*   %r2667 -> 0[n]
	br          .L534

.L534:
	load.64*    %r2668 <- 0[n]
	load.32     %r2669 <- 24[%r2668]
	seteq.32    %r2670 <- %r2669, $4
	br          %r2670, .L539, .L538

.L539:
	load.64*    %r2671 <- 0[n]
	load.64*    %r2672 <- 16[%r2671]
	add.64*     %r2673 <- %r2672, $0
	load.64*    %r2674 <- 0[key]
	seteq.32    %r2675 <- %r2673, %r2674
	br          %r2675, .L537, .L538

.L537:
	load.64*    %r2676 <- 0[n]
	add.64*     %r2677 <- %r2676, $0
	phisrc.64*  %phi95(return) <- %r2677
	br          .L540

.L538:
	load.64*    %r2679 <- 0[n]
	load.64*    %r2680 <- 32[%r2679]
	store.64*   %r2680 -> 0[n]
	br          .L541

.L541:
	br          .L535

.L535:
	load.64*    %r2681 <- 0[n]
	br          %r2681, .L534, .L536

.L536:
	symaddr.64* %r2682 <- luaO_nilobject_
	phisrc.64*  %phi96(return) <- %r2682
	br          .L540

.L540:
	phi.64*     %r2678 <- %phi95(return), %phi96(return)
	ret.64*     %r2678


luaH_get:
.L542:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.64*   %arg2 -> 0[key]
	load.64*    %r2683 <- 0[key]
	load.32     %r2684 <- 8[%r2683]
	switch.32   %r2684, 0 -> .L544, 3 -> .L546, 4 -> .L545, default -> .L547

.L544:
	symaddr.64* %r2685 <- luaO_nilobject_
	phisrc.64*  %phi97(return) <- %r2685
	br          .L548

.L545:
	load.64*    %r2687 <- 0[t]
	load.64*    %r2688 <- 0[key]
	load.64*    %r2689 <- 0[%r2688]
	add.64*     %r2690 <- %r2689, $0
	push.64*    %r2687
	push.64*    %r2690
	call.64*    %r2691 <- luaH_getstr
	phisrc.64*  %phi98(return) <- %r2691
	br          .L548

.L546:
	load.64*    %r2692 <- 0[key]
	load.f64    %r2693 <- 0[%r2692]
	fpcast.f64  %r2694 <- (64) %r2693
	store.f64   %r2694 -> 0[n]
	load.f64    %r2695 <- 0[n]
	cast.32     %r2696 <- (64) %r2695
	store.32    %r2696 -> 0[k]
	load.32     %r2697 <- 0[k]
	fpcast.f64  %r2698 <- (32) %r2697
	load.64*    %r2699 <- 0[key]
	load.f64    %r2700 <- 0[%r2699]
	fpcast.f64  %r2701 <- (64) %r2700
	seteq.32    %r2702 <- %r2698, %r2701
	br          %r2702, .L549, .L550

.L549:
	load.64*    %r2703 <- 0[t]
	load.32     %r2704 <- 0[k]
	push.64*    %r2703
	push.32     %r2704
	call.64*    %r2705 <- luaH_getnum
	phisrc.64*  %phi99(return) <- %r2705
	br          .L548

.L550:
	br          .L547

.L547:
	load.64*    %r2706 <- 0[t]
	load.64*    %r2707 <- 0[key]
	push.64*    %r2706
	push.64*    %r2707
	call.64*    %r2708 <- mainposition
	store.64*   %r2708 -> 0[n]
	br          .L551

.L551:
	load.64*    %r2709 <- 0[n]
	add.64*     %r2710 <- %r2709, $16
	add.64*     %r2711 <- %r2710, $0
	load.64*    %r2712 <- 0[key]
	push.64*    %r2711
	push.64*    %r2712
	call.32     %r2713 <- luaO_rawequalObj
	br          %r2713, .L554, .L555

.L554:
	load.64*    %r2714 <- 0[n]
	add.64*     %r2715 <- %r2714, $0
	phisrc.64*  %phi100(return) <- %r2715
	br          .L548

.L555:
	load.64*    %r2716 <- 0[n]
	load.64*    %r2717 <- 32[%r2716]
	store.64*   %r2717 -> 0[n]
	br          .L556

.L556:
	br          .L552

.L552:
	load.64*    %r2718 <- 0[n]
	br          %r2718, .L551, .L553

.L553:
	symaddr.64* %r2719 <- luaO_nilobject_
	phisrc.64*  %phi101(return) <- %r2719
	br          .L548

.L548:
	phi.64*     %r2686 <- %phi97(return), %phi98(return), %phi99(return), %phi100(return), %phi101(return)
	ret.64*     %r2686


luaH_set:
.L557:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2720 <- 0[t]
	load.64*    %r2721 <- 0[key]
	push.64*    %r2720
	push.64*    %r2721
	call.64*    %r2722 <- luaH_get
	store.64*   %r2722 -> 0[p]
	load.64*    %r2723 <- 0[t]
	store.8     $0 -> 10[%r2723]
	load.64*    %r2724 <- 0[p]
	symaddr.64* %r2725 <- luaO_nilobject_
	setne.32    %r2726 <- %r2724, %r2725
	br          %r2726, .L558, .L559

.L558:
	load.64*    %r2727 <- 0[p]
	ptrcast.64* %r2728 <- (64) %r2727
	phisrc.64*  %phi102(return) <- %r2728
	br          .L560

.L559:
	load.64*    %r2730 <- 0[key]
	load.32     %r2731 <- 8[%r2730]
	scast.32    %r2732 <- (32) %r2731
	seteq.32    %r2733 <- %r2732, $0
	br          %r2733, .L562, .L563

.L562:
	load.64*    %r2734 <- 0[L]
	symaddr.64* %r2735 <- <anon symbol:0x62d00115f9e8>
	push.64*    %r2734
	push.64*    %r2735
	call        luaG_runerror
	br          .L564

.L563:
	load.64*    %r2736 <- 0[key]
	load.32     %r2737 <- 8[%r2736]
	scast.32    %r2738 <- (32) %r2737
	seteq.32    %r2739 <- %r2738, $3
	br          %r2739, .L567, .L566

.L567:
	load.64*    %r2740 <- 0[key]
	load.f64    %r2741 <- 0[%r2740]
	fpcast.f64  %r2742 <- (64) %r2741
	load.64*    %r2743 <- 0[key]
	load.f64    %r2744 <- 0[%r2743]
	fpcast.f64  %r2745 <- (64) %r2744
	seteq.32    %r2746 <- %r2742, %r2745
	br          %r2746, .L566, .L565

.L565:
	load.64*    %r2747 <- 0[L]
	symaddr.64* %r2748 <- <anon symbol:0x62d00116c500>
	push.64*    %r2747
	push.64*    %r2748
	call        luaG_runerror
	br          .L566

.L566:
	br          .L564

.L564:
	load.64*    %r2749 <- 0[L]
	load.64*    %r2750 <- 0[t]
	load.64*    %r2751 <- 0[key]
	push.64*    %r2749
	push.64*    %r2750
	push.64*    %r2751
	call.64*    %r2752 <- newkey
	phisrc.64*  %phi103(return) <- %r2752
	br          .L560

.L560:
	phi.64*     %r2729 <- %phi102(return), %phi103(return)
	ret.64*     %r2729


luaH_setnum:
.L568:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.32    %arg3 -> 0[key]
	load.64*    %r2753 <- 0[t]
	load.32     %r2754 <- 0[key]
	push.64*    %r2753
	push.32     %r2754
	call.64*    %r2755 <- luaH_getnum
	store.64*   %r2755 -> 0[p]
	load.64*    %r2756 <- 0[p]
	symaddr.64* %r2757 <- luaO_nilobject_
	setne.32    %r2758 <- %r2756, %r2757
	br          %r2758, .L569, .L570

.L569:
	load.64*    %r2759 <- 0[p]
	ptrcast.64* %r2760 <- (64) %r2759
	phisrc.64*  %phi104(return) <- %r2760
	br          .L571

.L570:
	symaddr.64* %r2762 <- k
	store.64*   %r2762 -> 0[i_o]
	load.32     %r2763 <- 0[key]
	fpcast.f64  %r2764 <- (32) %r2763
	load.64*    %r2765 <- 0[i_o]
	store.f64   %r2764 -> 0[%r2765]
	load.64*    %r2766 <- 0[i_o]
	store.32    $3 -> 8[%r2766]
	load.64*    %r2767 <- 0[L]
	load.64*    %r2768 <- 0[t]
	symaddr.64* %r2769 <- k
	push.64*    %r2767
	push.64*    %r2768
	push.64*    %r2769
	call.64*    %r2770 <- newkey
	phisrc.64*  %phi105(return) <- %r2770
	br          .L571

.L571:
	phi.64*     %r2761 <- %phi104(return), %phi105(return)
	ret.64*     %r2761


luaH_setstr:
.L573:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	load.64*    %r2771 <- 0[t]
	load.64*    %r2772 <- 0[key]
	push.64*    %r2771
	push.64*    %r2772
	call.64*    %r2773 <- luaH_getstr
	store.64*   %r2773 -> 0[p]
	load.64*    %r2774 <- 0[p]
	symaddr.64* %r2775 <- luaO_nilobject_
	setne.32    %r2776 <- %r2774, %r2775
	br          %r2776, .L574, .L575

.L574:
	load.64*    %r2777 <- 0[p]
	ptrcast.64* %r2778 <- (64) %r2777
	phisrc.64*  %phi106(return) <- %r2778
	br          .L576

.L575:
	symaddr.64* %r2780 <- k
	store.64*   %r2780 -> 0[i_o]
	load.64*    %r2781 <- 0[key]
	ptrcast.64* %r2782 <- (64) %r2781
	load.64*    %r2783 <- 0[i_o]
	store.64*   %r2782 -> 0[%r2783]
	load.64*    %r2784 <- 0[i_o]
	store.32    $4 -> 8[%r2784]
	load.64*    %r2785 <- 0[L]
	load.64*    %r2786 <- 0[t]
	symaddr.64* %r2787 <- k
	push.64*    %r2785
	push.64*    %r2786
	push.64*    %r2787
	call.64*    %r2788 <- newkey
	phisrc.64*  %phi107(return) <- %r2788
	br          .L576

.L576:
	phi.64*     %r2779 <- %phi106(return), %phi107(return)
	ret.64*     %r2779


unbound_search:
.L578:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	store.32    %arg2 -> 0[j]
	load.32     %r2789 <- 0[j]
	store.32    %r2789 -> 0[i]
	load.32     %r2790 <- 0[j]
	add.32      %r2791 <- %r2790, $1
	store.32    %r2791 -> 0[j]
	br          .L582

.L582:
	load.64*    %r2792 <- 0[t]
	load.32     %r2793 <- 0[j]
	cast.32     %r2794 <- (32) %r2793
	push.64*    %r2792
	push.32     %r2794
	call.64*    %r2795 <- luaH_getnum
	load.32     %r2796 <- 8[%r2795]
	scast.32    %r2797 <- (32) %r2796
	seteq.32    %r2798 <- %r2797, $0
	br          %r2798, .L581, .L579

.L579:
	load.32     %r2799 <- 0[j]
	store.32    %r2799 -> 0[i]
	load.32     %r2800 <- 0[j]
	cast.32     %r2801 <- (32) %r2800
	mulu.32     %r2802 <- %r2801, $2
	cast.32     %r2803 <- (32) %r2802
	store.32    %r2803 -> 0[j]
	load.32     %r2804 <- 0[j]
	seta.32     %r2805 <- %r2804, $0x7ffffffd
	br          %r2805, .L583, .L584

.L583:
	store.32    $1 -> 0[i]
	br          .L588

.L588:
	load.64*    %r2806 <- 0[t]
	load.32     %r2807 <- 0[i]
	cast.32     %r2808 <- (32) %r2807
	push.64*    %r2806
	push.32     %r2808
	call.64*    %r2809 <- luaH_getnum
	load.32     %r2810 <- 8[%r2809]
	scast.32    %r2811 <- (32) %r2810
	seteq.32    %r2812 <- %r2811, $0
	br          %r2812, .L587, .L585

.L585:
	load.32     %r2813 <- 0[i]
	add.32      %r2814 <- %r2813, $1
	store.32    %r2814 -> 0[i]
	br          .L586

.L586:
	br          .L588

.L587:
	load.32     %r2815 <- 0[i]
	sub.32      %r2816 <- %r2815, $1
	cast.32     %r2817 <- (32) %r2816
	phisrc.32   %phi108(return) <- %r2817
	br          .L589

.L584:
	br          .L580

.L580:
	br          .L582

.L581:
	br          .L593

.L593:
	load.32     %r2819 <- 0[j]
	load.32     %r2820 <- 0[i]
	sub.32      %r2821 <- %r2819, %r2820
	seta.32     %r2822 <- %r2821, $1
	br          %r2822, .L590, .L592

.L590:
	load.32     %r2823 <- 0[i]
	load.32     %r2824 <- 0[j]
	add.32      %r2825 <- %r2823, %r2824
	divu.32     %r2826 <- %r2825, $2
	store.32    %r2826 -> 0[m]
	load.64*    %r2827 <- 0[t]
	load.32     %r2828 <- 0[m]
	cast.32     %r2829 <- (32) %r2828
	push.64*    %r2827
	push.32     %r2829
	call.64*    %r2830 <- luaH_getnum
	load.32     %r2831 <- 8[%r2830]
	scast.32    %r2832 <- (32) %r2831
	seteq.32    %r2833 <- %r2832, $0
	br          %r2833, .L594, .L595

.L594:
	load.32     %r2834 <- 0[m]
	store.32    %r2834 -> 0[j]
	br          .L596

.L595:
	load.32     %r2835 <- 0[m]
	store.32    %r2835 -> 0[i]
	br          .L596

.L596:
	br          .L591

.L591:
	br          .L593

.L592:
	load.32     %r2836 <- 0[i]
	cast.32     %r2837 <- (32) %r2836
	phisrc.32   %phi109(return) <- %r2837
	br          .L589

.L589:
	phi.32      %r2818 <- %phi108(return), %phi109(return)
	ret.32      %r2818


luaH_getn:
.L597:
	<entry-point>
	store.64*   %arg1 -> 0[t]
	load.64*    %r2838 <- 0[t]
	load.32     %r2839 <- 56[%r2838]
	scast.32    %r2840 <- (32) %r2839
	store.32    %r2840 -> 0[j]
	load.32     %r2841 <- 0[j]
	seta.32     %r2842 <- %r2841, $0
	br          %r2842, .L600, .L599

.L600:
	load.64*    %r2843 <- 0[t]
	load.64*    %r2844 <- 24[%r2843]
	load.32     %r2845 <- 0[j]
	sub.32      %r2846 <- %r2845, $1
	cast.64     %r2847 <- (32) %r2846
	muls.64     %r2848 <- %r2847, $16
	add.64*     %r2849 <- %r2844, %r2848
	load.32     %r2850 <- 8[%r2849]
	seteq.32    %r2851 <- %r2850, $0
	br          %r2851, .L598, .L599

.L598:
	store.32    $0 -> 0[i]
	br          .L604

.L604:
	load.32     %r2852 <- 0[j]
	load.32     %r2853 <- 0[i]
	sub.32      %r2854 <- %r2852, %r2853
	seta.32     %r2855 <- %r2854, $1
	br          %r2855, .L601, .L603

.L601:
	load.32     %r2856 <- 0[i]
	load.32     %r2857 <- 0[j]
	add.32      %r2858 <- %r2856, %r2857
	divu.32     %r2859 <- %r2858, $2
	store.32    %r2859 -> 0[m]
	load.64*    %r2860 <- 0[t]
	load.64*    %r2861 <- 24[%r2860]
	load.32     %r2862 <- 0[m]
	sub.32      %r2863 <- %r2862, $1
	cast.64     %r2864 <- (32) %r2863
	muls.64     %r2865 <- %r2864, $16
	add.64*     %r2866 <- %r2861, %r2865
	load.32     %r2867 <- 8[%r2866]
	seteq.32    %r2868 <- %r2867, $0
	br          %r2868, .L605, .L606

.L605:
	load.32     %r2869 <- 0[m]
	store.32    %r2869 -> 0[j]
	br          .L607

.L606:
	load.32     %r2870 <- 0[m]
	store.32    %r2870 -> 0[i]
	br          .L607

.L607:
	br          .L602

.L602:
	br          .L604

.L603:
	load.32     %r2871 <- 0[i]
	cast.32     %r2872 <- (32) %r2871
	phisrc.32   %phi110(return) <- %r2872
	br          .L608

.L599:
	load.64*    %r2874 <- 0[t]
	load.64*    %r2875 <- 32[%r2874]
	symaddr.64* %r2876 <- dummynode_
	seteq.32    %r2877 <- %r2875, %r2876
	br          %r2877, .L610, .L611

.L610:
	load.32     %r2878 <- 0[j]
	cast.32     %r2879 <- (32) %r2878
	phisrc.32   %phi111(return) <- %r2879
	br          .L608

.L611:
	load.64*    %r2880 <- 0[t]
	load.32     %r2881 <- 0[j]
	push.64*    %r2880
	push.32     %r2881
	call.32     %r2882 <- unbound_search
	phisrc.32   %phi112(return) <- %r2882
	br          .L608

.L608:
	phi.32      %r2873 <- %phi110(return), %phi111(return), %phi112(return)
	ret.32      %r2873


removeentry:
.L613:
	<entry-point>
	store.64*   %arg1 -> 0[n]
	load.64*    %r2883 <- 0[n]
	load.32     %r2884 <- 24[%r2883]
	setge.32    %r2885 <- %r2884, $4
	br          %r2885, .L614, .L615

.L614:
	load.64*    %r2886 <- 0[n]
	store.32    $11 -> 24[%r2886]
	br          .L615

.L615:
	ret


reallymarkobject:
.L616:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[o]
	load.64*    %r2887 <- 0[o]
	load.8      %r2888 <- 9[%r2887]
	cast.32     %r2889 <- (8) %r2888
	and.32      %r2890 <- %r2889, $252
	scast.8     %r2891 <- (32) %r2890
	store.8     %r2891 -> 9[%r2887]
	load.64*    %r2892 <- 0[o]
	load.8      %r2893 <- 8[%r2892]
	switch.8    %r2893, 4 -> .L618, 5 -> .L622, 6 -> .L621, 7 -> .L619, 8 -> .L623, 9 -> .L624, 10 -> .L620, default -> .L625

.L618:
	br          .L626

.L619:
	load.64*    %r2894 <- 0[o]
	load.64*    %r2895 <- 16[%r2894]
	store.64*   %r2895 -> 0[mt]
	load.64*    %r2896 <- 0[o]
	load.8      %r2897 <- 9[%r2896]
	cast.32     %r2898 <- (8) %r2897
	or.32       %r2899 <- %r2898, $4
	scast.8     %r2900 <- (32) %r2899
	store.8     %r2900 -> 9[%r2896]
	load.64*    %r2901 <- 0[mt]
	br          %r2901, .L627, .L628

.L627:
	load.64*    %r2902 <- 0[mt]
	ptrcast.64* %r2903 <- (64) %r2902
	load.8      %r2904 <- 9[%r2903]
	cast.32     %r2905 <- (8) %r2904
	and.32      %r2906 <- %r2905, $3
	br          %r2906, .L629, .L630

.L629:
	load.64*    %r2907 <- 0[g]
	load.64*    %r2908 <- 0[mt]
	ptrcast.64* %r2909 <- (64) %r2908
	push.64*    %r2907
	push.64*    %r2909
	call        reallymarkobject
	br          .L630

.L630:
	br          .L628

.L628:
	load.64*    %r2910 <- 0[o]
	load.64*    %r2911 <- 24[%r2910]
	ptrcast.64* %r2912 <- (64) %r2911
	load.8      %r2913 <- 9[%r2912]
	cast.32     %r2914 <- (8) %r2913
	and.32      %r2915 <- %r2914, $3
	br          %r2915, .L631, .L632

.L631:
	load.64*    %r2916 <- 0[g]
	load.64*    %r2917 <- 0[o]
	load.64*    %r2918 <- 24[%r2917]
	ptrcast.64* %r2919 <- (64) %r2918
	push.64*    %r2916
	push.64*    %r2919
	call        reallymarkobject
	br          .L632

.L632:
	br          .L626

.L620:
	load.64*    %r2920 <- 0[o]
	add.64*     %r2921 <- %r2920, $0
	store.64*   %r2921 -> 0[uv]
	load.64*    %r2922 <- 0[uv]
	load.64*    %r2923 <- 16[%r2922]
	load.32     %r2924 <- 8[%r2923]
	setge.32    %r2925 <- %r2924, $4
	br          %r2925, .L635, .L634

.L635:
	load.64*    %r2926 <- 0[uv]
	load.64*    %r2927 <- 16[%r2926]
	load.64*    %r2928 <- 0[%r2927]
	load.8      %r2929 <- 9[%r2928]
	cast.32     %r2930 <- (8) %r2929
	and.32      %r2931 <- %r2930, $3
	br          %r2931, .L633, .L634

.L633:
	load.64*    %r2932 <- 0[g]
	load.64*    %r2933 <- 0[uv]
	load.64*    %r2934 <- 16[%r2933]
	load.64*    %r2935 <- 0[%r2934]
	push.64*    %r2932
	push.64*    %r2935
	call        reallymarkobject
	br          .L634

.L634:
	load.64*    %r2936 <- 0[uv]
	load.64*    %r2937 <- 16[%r2936]
	load.64*    %r2938 <- 0[uv]
	add.64*     %r2939 <- %r2938, $24
	add.64*     %r2940 <- %r2939, $0
	seteq.32    %r2941 <- %r2937, %r2940
	br          %r2941, .L636, .L637

.L636:
	load.64*    %r2942 <- 0[o]
	load.8      %r2943 <- 9[%r2942]
	cast.32     %r2944 <- (8) %r2943
	or.32       %r2945 <- %r2944, $4
	scast.8     %r2946 <- (32) %r2945
	store.8     %r2946 -> 9[%r2942]
	br          .L637

.L637:
	br          .L626

.L621:
	load.64*    %r2947 <- 0[g]
	load.64*    %r2948 <- 56[%r2947]
	load.64*    %r2949 <- 0[o]
	store.64*   %r2948 -> 16[%r2949]
	load.64*    %r2950 <- 0[o]
	load.64*    %r2951 <- 0[g]
	store.64*   %r2950 -> 56[%r2951]
	br          .L617

.L622:
	load.64*    %r2952 <- 0[g]
	load.64*    %r2953 <- 56[%r2952]
	load.64*    %r2954 <- 0[o]
	store.64*   %r2953 -> 48[%r2954]
	load.64*    %r2955 <- 0[o]
	load.64*    %r2956 <- 0[g]
	store.64*   %r2955 -> 56[%r2956]
	br          .L617

.L623:
	load.64*    %r2957 <- 0[g]
	load.64*    %r2958 <- 56[%r2957]
	load.64*    %r2959 <- 0[o]
	store.64*   %r2958 -> 160[%r2959]
	load.64*    %r2960 <- 0[o]
	load.64*    %r2961 <- 0[g]
	store.64*   %r2960 -> 56[%r2961]
	br          .L617

.L624:
	load.64*    %r2962 <- 0[g]
	load.64*    %r2963 <- 56[%r2962]
	load.64*    %r2964 <- 0[o]
	store.64*   %r2963 -> 104[%r2964]
	load.64*    %r2965 <- 0[o]
	load.64*    %r2966 <- 0[g]
	store.64*   %r2965 -> 56[%r2966]
	br          .L617

.L625:
	br          .L617

.L617:
	br          .L626

.L626:
	ret


marktmu:
.L638:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r2967 <- 0[g]
	load.64*    %r2968 <- 80[%r2967]
	store.64*   %r2968 -> 0[u]
	load.64*    %r2969 <- 0[u]
	br          %r2969, .L639, .L640

.L639:
	br          .L641

.L641:
	load.64*    %r2970 <- 0[u]
	load.64*    %r2971 <- 0[%r2970]
	store.64*   %r2971 -> 0[u]
	load.64*    %r2972 <- 0[u]
	load.8      %r2973 <- 9[%r2972]
	cast.32     %r2974 <- (8) %r2973
	and.32      %r2975 <- %r2974, $248
	load.64*    %r2976 <- 0[g]
	load.8      %r2977 <- 32[%r2976]
	cast.32     %r2978 <- (8) %r2977
	and.32      %r2979 <- %r2978, $3
	scast.8     %r2980 <- (32) %r2979
	cast.32     %r2981 <- (8) %r2980
	or.32       %r2982 <- %r2975, %r2981
	scast.8     %r2983 <- (32) %r2982
	load.64*    %r2984 <- 0[u]
	store.8     %r2983 -> 9[%r2984]
	load.64*    %r2985 <- 0[g]
	load.64*    %r2986 <- 0[u]
	push.64*    %r2985
	push.64*    %r2986
	call        reallymarkobject
	br          .L642

.L642:
	load.64*    %r2987 <- 0[u]
	load.64*    %r2988 <- 0[g]
	load.64*    %r2989 <- 80[%r2988]
	setne.32    %r2990 <- %r2987, %r2989
	br          %r2990, .L641, .L643

.L643:
	br          .L640

.L640:
	ret


luaC_separateudata:
.L644:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[all]
	load.64*    %r2991 <- 0[L]
	load.64*    %r2992 <- 32[%r2991]
	store.64*   %r2992 -> 0[g]
	store.64    $0 -> 0[deadmem]
	load.64*    %r2993 <- 0[g]
	load.64*    %r2994 <- 176[%r2993]
	add.64*     %r2995 <- %r2994, $0
	store.64*   %r2995 -> 0[p]
	br          .L648

.L648:
	load.64*    %r2996 <- 0[p]
	load.64*    %r2997 <- 0[%r2996]
	store.64*   %r2997 -> 0[curr]
	setne.32    %r2998 <- %r2997, $0
	br          %r2998, .L645, .L647

.L645:
	load.64*    %r2999 <- 0[curr]
	load.8      %r3000 <- 9[%r2999]
	cast.32     %r3001 <- (8) %r3000
	and.32      %r3002 <- %r3001, $3
	load.32     %r3003 <- 0[all]
	or-bool.32  %r3004 <- %r3002, %r3003
	br          %r3004, .L651, .L649

.L651:
	load.64*    %r3005 <- 0[curr]
	load.8      %r3006 <- 9[%r3005]
	cast.32     %r3007 <- (8) %r3006
	and.32      %r3008 <- %r3007, $8
	br          %r3008, .L649, .L650

.L649:
	load.64*    %r3009 <- 0[curr]
	add.64*     %r3010 <- %r3009, $0
	add.64*     %r3011 <- %r3010, $0
	store.64*   %r3011 -> 0[p]
	br          .L652

.L650:
	load.64*    %r3012 <- 0[curr]
	load.64*    %r3013 <- 16[%r3012]
	seteq.32    %r3014 <- %r3013, $0
	br          %r3014, .L655, .L656

.L655:
	phisrc.64*  %phi113 <- $0
	br          .L657

.L656:
	load.64*    %r3015 <- 0[curr]
	load.64*    %r3016 <- 16[%r3015]
	load.8      %r3017 <- 10[%r3016]
	cast.32     %r3018 <- (8) %r3017
	and.32      %r3019 <- %r3018, $4
	br          %r3019, .L658, .L659

.L658:
	phisrc.64*  %phi114 <- $0
	br          .L660

.L659:
	load.64*    %r3020 <- 0[curr]
	load.64*    %r3021 <- 16[%r3020]
	load.64*    %r3022 <- 0[L]
	load.64*    %r3023 <- 32[%r3022]
	load.64*    %r3024 <- 312[%r3023]
	push.64*    %r3021
	push.32     $2
	push.64*    %r3024
	call.64*    %r3025 <- luaT_gettm
	phisrc.64*  %phi115 <- %r3025
	br          .L660

.L660:
	phi.64*     %r3026 <- %phi114, %phi115
	phisrc.64*  %phi116 <- %r3026
	br          .L657

.L657:
	phi.64*     %r3027 <- %phi113, %phi116
	seteq.32    %r3028 <- %r3027, $0
	br          %r3028, .L653, .L654

.L653:
	load.64*    %r3029 <- 0[curr]
	load.8      %r3030 <- 9[%r3029]
	cast.32     %r3031 <- (8) %r3030
	or.32       %r3032 <- %r3031, $8
	scast.8     %r3033 <- (32) %r3032
	store.8     %r3033 -> 9[%r3029]
	load.64*    %r3034 <- 0[curr]
	add.64*     %r3035 <- %r3034, $0
	add.64*     %r3036 <- %r3035, $0
	store.64*   %r3036 -> 0[p]
	br          .L661

.L654:
	load.64*    %r3037 <- 0[curr]
	load.64     %r3038 <- 32[%r3037]
	add.64      %r3039 <- $40, %r3038
	load.64     %r3040 <- 0[deadmem]
	cast.64     %r3041 <- (64) %r3040
	add.64      %r3042 <- %r3041, %r3039
	cast.64     %r3043 <- (64) %r3042
	store.64    %r3043 -> 0[deadmem]
	load.64*    %r3044 <- 0[curr]
	load.8      %r3045 <- 9[%r3044]
	cast.32     %r3046 <- (8) %r3045
	or.32       %r3047 <- %r3046, $8
	scast.8     %r3048 <- (32) %r3047
	store.8     %r3048 -> 9[%r3044]
	load.64*    %r3049 <- 0[curr]
	load.64*    %r3050 <- 0[%r3049]
	load.64*    %r3051 <- 0[p]
	store.64*   %r3050 -> 0[%r3051]
	load.64*    %r3052 <- 0[g]
	load.64*    %r3053 <- 80[%r3052]
	seteq.32    %r3054 <- %r3053, $0
	br          %r3054, .L662, .L663

.L662:
	load.64*    %r3055 <- 0[curr]
	load.64*    %r3056 <- 0[curr]
	store.64*   %r3055 -> 0[%r3056]
	load.64*    %r3057 <- 0[g]
	store.64*   %r3055 -> 80[%r3057]
	br          .L664

.L663:
	load.64*    %r3058 <- 0[g]
	load.64*    %r3059 <- 80[%r3058]
	load.64*    %r3060 <- 0[%r3059]
	load.64*    %r3061 <- 0[curr]
	store.64*   %r3060 -> 0[%r3061]
	load.64*    %r3062 <- 0[curr]
	load.64*    %r3063 <- 0[g]
	load.64*    %r3064 <- 80[%r3063]
	store.64*   %r3062 -> 0[%r3064]
	load.64*    %r3065 <- 0[curr]
	load.64*    %r3066 <- 0[g]
	store.64*   %r3065 -> 80[%r3066]
	br          .L664

.L664:
	br          .L661

.L661:
	br          .L652

.L652:
	br          .L646

.L646:
	br          .L648

.L647:
	load.64     %r3067 <- 0[deadmem]
	phisrc.64   %phi117(return) <- %r3067
	br          .L665

.L665:
	phi.64      %r3068 <- %phi117(return)
	ret.64      %r3067


traversetable:
.L666:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[h]
	store.32    $0 -> 0[weakkey]
	store.32    $0 -> 0[weakvalue]
	load.64*    %r3069 <- 0[h]
	load.64*    %r3070 <- 16[%r3069]
	br          %r3070, .L667, .L668

.L667:
	load.64*    %r3071 <- 0[h]
	load.64*    %r3072 <- 16[%r3071]
	ptrcast.64* %r3073 <- (64) %r3072
	load.8      %r3074 <- 9[%r3073]
	cast.32     %r3075 <- (8) %r3074
	and.32      %r3076 <- %r3075, $3
	br          %r3076, .L669, .L670

.L669:
	load.64*    %r3077 <- 0[g]
	load.64*    %r3078 <- 0[h]
	load.64*    %r3079 <- 16[%r3078]
	ptrcast.64* %r3080 <- (64) %r3079
	push.64*    %r3077
	push.64*    %r3080
	call        reallymarkobject
	br          .L670

.L670:
	br          .L668

.L668:
	load.64*    %r3081 <- 0[h]
	load.64*    %r3082 <- 16[%r3081]
	seteq.32    %r3083 <- %r3082, $0
	br          %r3083, .L671, .L672

.L671:
	phisrc.64*  %phi118 <- $0
	br          .L673

.L672:
	load.64*    %r3084 <- 0[h]
	load.64*    %r3085 <- 16[%r3084]
	load.8      %r3086 <- 10[%r3085]
	cast.32     %r3087 <- (8) %r3086
	and.32      %r3088 <- %r3087, $8
	br          %r3088, .L674, .L675

.L674:
	phisrc.64*  %phi119 <- $0
	br          .L676

.L675:
	load.64*    %r3089 <- 0[h]
	load.64*    %r3090 <- 16[%r3089]
	load.64*    %r3091 <- 0[g]
	load.64*    %r3092 <- 320[%r3091]
	push.64*    %r3090
	push.32     $3
	push.64*    %r3092
	call.64*    %r3093 <- luaT_gettm
	phisrc.64*  %phi120 <- %r3093
	br          .L676

.L676:
	phi.64*     %r3094 <- %phi119, %phi120
	phisrc.64*  %phi121 <- %r3094
	br          .L673

.L673:
	phi.64*     %r3095 <- %phi118, %phi121
	store.64*   %r3095 -> 0[mode]
	load.64*    %r3096 <- 0[mode]
	br          %r3096, .L679, .L678

.L679:
	load.64*    %r3097 <- 0[mode]
	load.32     %r3098 <- 8[%r3097]
	scast.32    %r3099 <- (32) %r3098
	seteq.32    %r3100 <- %r3099, $4
	br          %r3100, .L677, .L678

.L677:
	load.64*    %r3101 <- 0[mode]
	load.64*    %r3102 <- 0[%r3101]
	add.64*     %r3103 <- %r3102, $0
	add.64*     %r3104 <- %r3103, $24
	ptrcast.64* %r3105 <- (64) %r3104
	push.64*    %r3105
	push.32     $107
	call.64*    %r3106 <- strchr
	setne.32    %r3107 <- %r3106, $0
	store.32    %r3107 -> 0[weakkey]
	load.64*    %r3108 <- 0[mode]
	load.64*    %r3109 <- 0[%r3108]
	add.64*     %r3110 <- %r3109, $0
	add.64*     %r3111 <- %r3110, $24
	ptrcast.64* %r3112 <- (64) %r3111
	push.64*    %r3112
	push.32     $118
	call.64*    %r3113 <- strchr
	setne.32    %r3114 <- %r3113, $0
	store.32    %r3114 -> 0[weakvalue]
	load.32     %r3115 <- 0[weakkey]
	load.32     %r3116 <- 0[weakvalue]
	or-bool.32  %r3117 <- %r3115, %r3116
	br          %r3117, .L680, .L681

.L680:
	load.64*    %r3118 <- 0[h]
	load.8      %r3119 <- 9[%r3118]
	cast.32     %r3120 <- (8) %r3119
	and.32      %r3121 <- %r3120, $0xffffffe7
	scast.8     %r3122 <- (32) %r3121
	store.8     %r3122 -> 9[%r3118]
	load.32     %r3123 <- 0[weakkey]
	shl.32      %r3124 <- %r3123, $3
	load.32     %r3125 <- 0[weakvalue]
	shl.32      %r3126 <- %r3125, $4
	or.32       %r3127 <- %r3124, %r3126
	scast.8     %r3128 <- (32) %r3127
	cast.32     %r3129 <- (8) %r3128
	load.64*    %r3130 <- 0[h]
	load.8      %r3131 <- 9[%r3130]
	cast.32     %r3132 <- (8) %r3131
	or.32       %r3133 <- %r3132, %r3129
	scast.8     %r3134 <- (32) %r3133
	store.8     %r3134 -> 9[%r3130]
	load.64*    %r3135 <- 0[g]
	load.64*    %r3136 <- 72[%r3135]
	load.64*    %r3137 <- 0[h]
	store.64*   %r3136 -> 48[%r3137]
	load.64*    %r3138 <- 0[h]
	ptrcast.64* %r3139 <- (64) %r3138
	load.64*    %r3140 <- 0[g]
	store.64*   %r3139 -> 72[%r3140]
	br          .L681

.L681:
	br          .L678

.L678:
	load.32     %r3141 <- 0[weakkey]
	load.32     %r3142 <- 0[weakvalue]
	and-bool.32 %r3143 <- %r3141, %r3142
	br          %r3143, .L682, .L683

.L682:
	phisrc.32   %phi122(return) <- $1
	br          .L684

.L683:
	load.32     %r3145 <- 0[weakvalue]
	br          %r3145, .L686, .L685

.L685:
	load.64*    %r3146 <- 0[h]
	load.32     %r3147 <- 56[%r3146]
	store.32    %r3147 -> 0[i]
	br          .L690

.L690:
	load.32     %r3148 <- 0[i]
	sub.32      %r3149 <- %r3148, $1
	store.32    %r3149 -> 0[i]
	br          %r3148, .L687, .L689

.L687:
	load.64*    %r3150 <- 0[h]
	load.64*    %r3151 <- 24[%r3150]
	load.32     %r3152 <- 0[i]
	scast.64    %r3153 <- (32) %r3152
	muls.64     %r3154 <- %r3153, $16
	add.64*     %r3155 <- %r3151, %r3154
	load.32     %r3156 <- 8[%r3155]
	setge.32    %r3157 <- %r3156, $4
	br          %r3157, .L693, .L692

.L693:
	load.64*    %r3158 <- 0[h]
	load.64*    %r3159 <- 24[%r3158]
	load.32     %r3160 <- 0[i]
	scast.64    %r3161 <- (32) %r3160
	muls.64     %r3162 <- %r3161, $16
	add.64*     %r3163 <- %r3159, %r3162
	load.64*    %r3164 <- 0[%r3163]
	load.8      %r3165 <- 9[%r3164]
	cast.32     %r3166 <- (8) %r3165
	and.32      %r3167 <- %r3166, $3
	br          %r3167, .L691, .L692

.L691:
	load.64*    %r3168 <- 0[g]
	load.64*    %r3169 <- 0[h]
	load.64*    %r3170 <- 24[%r3169]
	load.32     %r3171 <- 0[i]
	scast.64    %r3172 <- (32) %r3171
	muls.64     %r3173 <- %r3172, $16
	add.64*     %r3174 <- %r3170, %r3173
	load.64*    %r3175 <- 0[%r3174]
	push.64*    %r3168
	push.64*    %r3175
	call        reallymarkobject
	br          .L692

.L692:
	br          .L688

.L688:
	br          .L690

.L689:
	br          .L686

.L686:
	load.64*    %r3176 <- 0[h]
	load.8      %r3177 <- 11[%r3176]
	cast.32     %r3178 <- (8) %r3177
	shl.64      %r3179 <- $1, %r3178
	cast.32     %r3180 <- (64) %r3179
	store.32    %r3180 -> 0[i]
	br          .L697

.L697:
	load.32     %r3181 <- 0[i]
	sub.32      %r3182 <- %r3181, $1
	store.32    %r3182 -> 0[i]
	br          %r3181, .L694, .L696

.L694:
	load.64*    %r3183 <- 0[h]
	load.64*    %r3184 <- 32[%r3183]
	load.32     %r3185 <- 0[i]
	scast.64    %r3186 <- (32) %r3185
	muls.64     %r3187 <- %r3186, $40
	add.64*     %r3188 <- %r3184, %r3187
	store.64*   %r3188 -> 0[n]
	load.64*    %r3189 <- 0[n]
	load.32     %r3190 <- 8[%r3189]
	seteq.32    %r3191 <- %r3190, $0
	br          %r3191, .L698, .L699

.L698:
	load.64*    %r3192 <- 0[n]
	push.64*    %r3192
	call        removeentry
	br          .L700

.L699:
	load.32     %r3193 <- 0[weakkey]
	br          %r3193, .L702, .L701

.L701:
	load.64*    %r3194 <- 0[n]
	load.32     %r3195 <- 24[%r3194]
	setge.32    %r3196 <- %r3195, $4
	br          %r3196, .L705, .L704

.L705:
	load.64*    %r3197 <- 0[n]
	load.64*    %r3198 <- 16[%r3197]
	load.8      %r3199 <- 9[%r3198]
	cast.32     %r3200 <- (8) %r3199
	and.32      %r3201 <- %r3200, $3
	br          %r3201, .L703, .L704

.L703:
	load.64*    %r3202 <- 0[g]
	load.64*    %r3203 <- 0[n]
	load.64*    %r3204 <- 16[%r3203]
	push.64*    %r3202
	push.64*    %r3204
	call        reallymarkobject
	br          .L704

.L704:
	br          .L702

.L702:
	load.32     %r3205 <- 0[weakvalue]
	br          %r3205, .L707, .L706

.L706:
	load.64*    %r3206 <- 0[n]
	load.32     %r3207 <- 8[%r3206]
	setge.32    %r3208 <- %r3207, $4
	br          %r3208, .L710, .L709

.L710:
	load.64*    %r3209 <- 0[n]
	load.64*    %r3210 <- 0[%r3209]
	load.8      %r3211 <- 9[%r3210]
	cast.32     %r3212 <- (8) %r3211
	and.32      %r3213 <- %r3212, $3
	br          %r3213, .L708, .L709

.L708:
	load.64*    %r3214 <- 0[g]
	load.64*    %r3215 <- 0[n]
	load.64*    %r3216 <- 0[%r3215]
	push.64*    %r3214
	push.64*    %r3216
	call        reallymarkobject
	br          .L709

.L709:
	br          .L707

.L707:
	br          .L700

.L700:
	br          .L695

.L695:
	br          .L697

.L696:
	load.32     %r3217 <- 0[weakkey]
	load.32     %r3218 <- 0[weakvalue]
	or-bool.32  %r3219 <- %r3217, %r3218
	phisrc.32   %phi123(return) <- %r3219
	br          .L684

.L684:
	phi.32      %r3144 <- %phi122(return), %phi123(return)
	ret.32      %r3144


traverseproto:
.L711:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[f]
	load.64*    %r3220 <- 0[f]
	load.64*    %r3221 <- 64[%r3220]
	br          %r3221, .L712, .L713

.L712:
	load.64*    %r3222 <- 0[f]
	load.64*    %r3223 <- 64[%r3222]
	load.8      %r3224 <- 9[%r3223]
	cast.32     %r3225 <- (8) %r3224
	and.32      %r3226 <- %r3225, $252
	scast.8     %r3227 <- (32) %r3226
	store.8     %r3227 -> 9[%r3223]
	br          .L713

.L713:
	store.32    $0 -> 0[i]
	br          .L717

.L717:
	load.32     %r3228 <- 0[i]
	load.64*    %r3229 <- 0[f]
	load.32     %r3230 <- 76[%r3229]
	setlt.32    %r3231 <- %r3228, %r3230
	br          %r3231, .L714, .L716

.L714:
	load.64*    %r3232 <- 0[f]
	load.64*    %r3233 <- 16[%r3232]
	load.32     %r3234 <- 0[i]
	scast.64    %r3235 <- (32) %r3234
	muls.64     %r3236 <- %r3235, $16
	add.64*     %r3237 <- %r3233, %r3236
	load.32     %r3238 <- 8[%r3237]
	setge.32    %r3239 <- %r3238, $4
	br          %r3239, .L720, .L719

.L720:
	load.64*    %r3240 <- 0[f]
	load.64*    %r3241 <- 16[%r3240]
	load.32     %r3242 <- 0[i]
	scast.64    %r3243 <- (32) %r3242
	muls.64     %r3244 <- %r3243, $16
	add.64*     %r3245 <- %r3241, %r3244
	load.64*    %r3246 <- 0[%r3245]
	load.8      %r3247 <- 9[%r3246]
	cast.32     %r3248 <- (8) %r3247
	and.32      %r3249 <- %r3248, $3
	br          %r3249, .L718, .L719

.L718:
	load.64*    %r3250 <- 0[g]
	load.64*    %r3251 <- 0[f]
	load.64*    %r3252 <- 16[%r3251]
	load.32     %r3253 <- 0[i]
	scast.64    %r3254 <- (32) %r3253
	muls.64     %r3255 <- %r3254, $16
	add.64*     %r3256 <- %r3252, %r3255
	load.64*    %r3257 <- 0[%r3256]
	push.64*    %r3250
	push.64*    %r3257
	call        reallymarkobject
	br          .L719

.L719:
	br          .L715

.L715:
	load.32     %r3258 <- 0[i]
	add.32      %r3259 <- %r3258, $1
	store.32    %r3259 -> 0[i]
	br          .L717

.L716:
	store.32    $0 -> 0[i]
	br          .L724

.L724:
	load.32     %r3260 <- 0[i]
	load.64*    %r3261 <- 0[f]
	load.32     %r3262 <- 72[%r3261]
	setlt.32    %r3263 <- %r3260, %r3262
	br          %r3263, .L721, .L723

.L721:
	load.64*    %r3264 <- 0[f]
	load.64*    %r3265 <- 56[%r3264]
	load.32     %r3266 <- 0[i]
	scast.64    %r3267 <- (32) %r3266
	muls.64     %r3268 <- %r3267, $8
	add.64*     %r3269 <- %r3265, %r3268
	load.64*    %r3270 <- 0[%r3269]
	br          %r3270, .L725, .L726

.L725:
	load.64*    %r3271 <- 0[f]
	load.64*    %r3272 <- 56[%r3271]
	load.32     %r3273 <- 0[i]
	scast.64    %r3274 <- (32) %r3273
	muls.64     %r3275 <- %r3274, $8
	add.64*     %r3276 <- %r3272, %r3275
	load.64*    %r3277 <- 0[%r3276]
	load.8      %r3278 <- 9[%r3277]
	cast.32     %r3279 <- (8) %r3278
	and.32      %r3280 <- %r3279, $252
	scast.8     %r3281 <- (32) %r3280
	store.8     %r3281 -> 9[%r3277]
	br          .L726

.L726:
	br          .L722

.L722:
	load.32     %r3282 <- 0[i]
	add.32      %r3283 <- %r3282, $1
	store.32    %r3283 -> 0[i]
	br          .L724

.L723:
	store.32    $0 -> 0[i]
	br          .L730

.L730:
	load.32     %r3284 <- 0[i]
	load.64*    %r3285 <- 0[f]
	load.32     %r3286 <- 88[%r3285]
	setlt.32    %r3287 <- %r3284, %r3286
	br          %r3287, .L727, .L729

.L727:
	load.64*    %r3288 <- 0[f]
	load.64*    %r3289 <- 32[%r3288]
	load.32     %r3290 <- 0[i]
	scast.64    %r3291 <- (32) %r3290
	muls.64     %r3292 <- %r3291, $8
	add.64*     %r3293 <- %r3289, %r3292
	load.64*    %r3294 <- 0[%r3293]
	br          %r3294, .L731, .L732

.L731:
	load.64*    %r3295 <- 0[f]
	load.64*    %r3296 <- 32[%r3295]
	load.32     %r3297 <- 0[i]
	scast.64    %r3298 <- (32) %r3297
	muls.64     %r3299 <- %r3298, $8
	add.64*     %r3300 <- %r3296, %r3299
	load.64*    %r3301 <- 0[%r3300]
	ptrcast.64* %r3302 <- (64) %r3301
	load.8      %r3303 <- 9[%r3302]
	cast.32     %r3304 <- (8) %r3303
	and.32      %r3305 <- %r3304, $3
	br          %r3305, .L733, .L734

.L733:
	load.64*    %r3306 <- 0[g]
	load.64*    %r3307 <- 0[f]
	load.64*    %r3308 <- 32[%r3307]
	load.32     %r3309 <- 0[i]
	scast.64    %r3310 <- (32) %r3309
	muls.64     %r3311 <- %r3310, $8
	add.64*     %r3312 <- %r3308, %r3311
	load.64*    %r3313 <- 0[%r3312]
	ptrcast.64* %r3314 <- (64) %r3313
	push.64*    %r3306
	push.64*    %r3314
	call        reallymarkobject
	br          .L734

.L734:
	br          .L732

.L732:
	br          .L728

.L728:
	load.32     %r3315 <- 0[i]
	add.32      %r3316 <- %r3315, $1
	store.32    %r3316 -> 0[i]
	br          .L730

.L729:
	store.32    $0 -> 0[i]
	br          .L738

.L738:
	load.32     %r3317 <- 0[i]
	load.64*    %r3318 <- 0[f]
	load.32     %r3319 <- 92[%r3318]
	setlt.32    %r3320 <- %r3317, %r3319
	br          %r3320, .L735, .L737

.L735:
	load.64*    %r3321 <- 0[f]
	load.64*    %r3322 <- 48[%r3321]
	load.32     %r3323 <- 0[i]
	scast.64    %r3324 <- (32) %r3323
	muls.64     %r3325 <- %r3324, $16
	add.64*     %r3326 <- %r3322, %r3325
	load.64*    %r3327 <- 0[%r3326]
	br          %r3327, .L739, .L740

.L739:
	load.64*    %r3328 <- 0[f]
	load.64*    %r3329 <- 48[%r3328]
	load.32     %r3330 <- 0[i]
	scast.64    %r3331 <- (32) %r3330
	muls.64     %r3332 <- %r3331, $16
	add.64*     %r3333 <- %r3329, %r3332
	load.64*    %r3334 <- 0[%r3333]
	load.8      %r3335 <- 9[%r3334]
	cast.32     %r3336 <- (8) %r3335
	and.32      %r3337 <- %r3336, $252
	scast.8     %r3338 <- (32) %r3337
	store.8     %r3338 -> 9[%r3334]
	br          .L740

.L740:
	br          .L736

.L736:
	load.32     %r3339 <- 0[i]
	add.32      %r3340 <- %r3339, $1
	store.32    %r3340 -> 0[i]
	br          .L738

.L737:
	ret


traverseclosure:
.L741:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[cl]
	load.64*    %r3341 <- 0[cl]
	load.64*    %r3342 <- 24[%r3341]
	ptrcast.64* %r3343 <- (64) %r3342
	load.8      %r3344 <- 9[%r3343]
	cast.32     %r3345 <- (8) %r3344
	and.32      %r3346 <- %r3345, $3
	br          %r3346, .L742, .L743

.L742:
	load.64*    %r3347 <- 0[g]
	load.64*    %r3348 <- 0[cl]
	load.64*    %r3349 <- 24[%r3348]
	ptrcast.64* %r3350 <- (64) %r3349
	push.64*    %r3347
	push.64*    %r3350
	call        reallymarkobject
	br          .L743

.L743:
	load.64*    %r3351 <- 0[cl]
	load.8      %r3352 <- 10[%r3351]
	br          %r3352, .L744, .L745

.L744:
	store.32    $0 -> 0[i]
	br          .L749

.L749:
	load.32     %r3353 <- 0[i]
	load.64*    %r3354 <- 0[cl]
	load.8      %r3355 <- 11[%r3354]
	cast.32     %r3356 <- (8) %r3355
	setlt.32    %r3357 <- %r3353, %r3356
	br          %r3357, .L746, .L748

.L746:
	load.64*    %r3358 <- 0[cl]
	add.64*     %r3359 <- %r3358, $0
	add.64*     %r3360 <- %r3359, $40
	load.32     %r3361 <- 0[i]
	scast.64    %r3362 <- (32) %r3361
	muls.64     %r3363 <- %r3362, $16
	add.64*     %r3364 <- %r3360, %r3363
	load.32     %r3365 <- 8[%r3364]
	setge.32    %r3366 <- %r3365, $4
	br          %r3366, .L752, .L751

.L752:
	load.64*    %r3367 <- 0[cl]
	add.64*     %r3368 <- %r3367, $0
	add.64*     %r3369 <- %r3368, $40
	load.32     %r3370 <- 0[i]
	scast.64    %r3371 <- (32) %r3370
	muls.64     %r3372 <- %r3371, $16
	add.64*     %r3373 <- %r3369, %r3372
	load.64*    %r3374 <- 0[%r3373]
	load.8      %r3375 <- 9[%r3374]
	cast.32     %r3376 <- (8) %r3375
	and.32      %r3377 <- %r3376, $3
	br          %r3377, .L750, .L751

.L750:
	load.64*    %r3378 <- 0[g]
	load.64*    %r3379 <- 0[cl]
	add.64*     %r3380 <- %r3379, $0
	add.64*     %r3381 <- %r3380, $40
	load.32     %r3382 <- 0[i]
	scast.64    %r3383 <- (32) %r3382
	muls.64     %r3384 <- %r3383, $16
	add.64*     %r3385 <- %r3381, %r3384
	load.64*    %r3386 <- 0[%r3385]
	push.64*    %r3378
	push.64*    %r3386
	call        reallymarkobject
	br          .L751

.L751:
	br          .L747

.L747:
	load.32     %r3387 <- 0[i]
	add.32      %r3388 <- %r3387, $1
	store.32    %r3388 -> 0[i]
	br          .L749

.L748:
	br          .L753

.L745:
	load.64*    %r3389 <- 0[cl]
	load.64*    %r3390 <- 32[%r3389]
	ptrcast.64* %r3391 <- (64) %r3390
	load.8      %r3392 <- 9[%r3391]
	cast.32     %r3393 <- (8) %r3392
	and.32      %r3394 <- %r3393, $3
	br          %r3394, .L754, .L755

.L754:
	load.64*    %r3395 <- 0[g]
	load.64*    %r3396 <- 0[cl]
	load.64*    %r3397 <- 32[%r3396]
	ptrcast.64* %r3398 <- (64) %r3397
	push.64*    %r3395
	push.64*    %r3398
	call        reallymarkobject
	br          .L755

.L755:
	store.32    $0 -> 0[i]
	br          .L759

.L759:
	load.32     %r3399 <- 0[i]
	load.64*    %r3400 <- 0[cl]
	load.8      %r3401 <- 11[%r3400]
	cast.32     %r3402 <- (8) %r3401
	setlt.32    %r3403 <- %r3399, %r3402
	br          %r3403, .L756, .L758

.L756:
	load.64*    %r3404 <- 0[cl]
	add.64*     %r3405 <- %r3404, $0
	add.64*     %r3406 <- %r3405, $40
	load.32     %r3407 <- 0[i]
	scast.64    %r3408 <- (32) %r3407
	muls.64     %r3409 <- %r3408, $8
	add.64*     %r3410 <- %r3406, %r3409
	load.64*    %r3411 <- 0[%r3410]
	ptrcast.64* %r3412 <- (64) %r3411
	load.8      %r3413 <- 9[%r3412]
	cast.32     %r3414 <- (8) %r3413
	and.32      %r3415 <- %r3414, $3
	br          %r3415, .L760, .L761

.L760:
	load.64*    %r3416 <- 0[g]
	load.64*    %r3417 <- 0[cl]
	add.64*     %r3418 <- %r3417, $0
	add.64*     %r3419 <- %r3418, $40
	load.32     %r3420 <- 0[i]
	scast.64    %r3421 <- (32) %r3420
	muls.64     %r3422 <- %r3421, $8
	add.64*     %r3423 <- %r3419, %r3422
	load.64*    %r3424 <- 0[%r3423]
	ptrcast.64* %r3425 <- (64) %r3424
	push.64*    %r3416
	push.64*    %r3425
	call        reallymarkobject
	br          .L761

.L761:
	br          .L757

.L757:
	load.32     %r3426 <- 0[i]
	add.32      %r3427 <- %r3426, $1
	store.32    %r3427 -> 0[i]
	br          .L759

.L758:
	br          .L753

.L753:
	ret


checkstacksizes:
.L762:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[max]
	load.64*    %r3428 <- 0[L]
	load.64*    %r3429 <- 40[%r3428]
	load.64*    %r3430 <- 0[L]
	load.64*    %r3431 <- 80[%r3430]
	sub.64      %r3432 <- %r3429, %r3431
	divs.64     %r3433 <- %r3432, $40
	scast.32    %r3434 <- (64) %r3433
	store.32    %r3434 -> 0[ci_used]
	load.64*    %r3435 <- 0[max]
	load.64*    %r3436 <- 0[L]
	load.64*    %r3437 <- 64[%r3436]
	sub.64      %r3438 <- %r3435, %r3437
	divs.64     %r3439 <- %r3438, $16
	scast.32    %r3440 <- (64) %r3439
	store.32    %r3440 -> 0[s_used]
	load.64*    %r3441 <- 0[L]
	load.32     %r3442 <- 92[%r3441]
	setgt.32    %r3443 <- %r3442, $0x4e20
	br          %r3443, .L763, .L764

.L763:
	br          .L765

.L764:
	load.32     %r3444 <- 0[ci_used]
	muls.32     %r3445 <- $4, %r3444
	load.64*    %r3446 <- 0[L]
	load.32     %r3447 <- 92[%r3446]
	setlt.32    %r3448 <- %r3445, %r3447
	br          %r3448, .L768, .L767

.L768:
	load.64*    %r3449 <- 0[L]
	load.32     %r3450 <- 92[%r3449]
	setlt.32    %r3451 <- $16, %r3450
	br          %r3451, .L766, .L767

.L766:
	load.64*    %r3452 <- 0[L]
	load.64*    %r3453 <- 0[L]
	load.32     %r3454 <- 92[%r3453]
	divs.32     %r3455 <- %r3454, $2
	push.64*    %r3452
	push.32     %r3455
	call        luaD_reallocCI
	br          .L767

.L767:
	load.32     %r3456 <- 0[s_used]
	muls.32     %r3457 <- $4, %r3456
	load.64*    %r3458 <- 0[L]
	load.32     %r3459 <- 88[%r3458]
	setlt.32    %r3460 <- %r3457, %r3459
	br          %r3460, .L771, .L770

.L771:
	load.64*    %r3461 <- 0[L]
	load.32     %r3462 <- 88[%r3461]
	setlt.32    %r3463 <- $90, %r3462
	br          %r3463, .L769, .L770

.L769:
	load.64*    %r3464 <- 0[L]
	load.64*    %r3465 <- 0[L]
	load.32     %r3466 <- 88[%r3465]
	divs.32     %r3467 <- %r3466, $2
	push.64*    %r3464
	push.32     %r3467
	call        luaD_reallocstack
	br          .L770

.L770:
	br          .L765

.L765:
	ret


traversestack:
.L772:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64*   %arg2 -> 0[l]
	load.64*    %r3468 <- 0[l]
	load.32     %r3469 <- 128[%r3468]
	setge.32    %r3470 <- %r3469, $4
	br          %r3470, .L775, .L774

.L775:
	load.64*    %r3471 <- 0[l]
	load.64*    %r3472 <- 120[%r3471]
	load.8      %r3473 <- 9[%r3472]
	cast.32     %r3474 <- (8) %r3473
	and.32      %r3475 <- %r3474, $3
	br          %r3475, .L773, .L774

.L773:
	load.64*    %r3476 <- 0[g]
	load.64*    %r3477 <- 0[l]
	load.64*    %r3478 <- 120[%r3477]
	push.64*    %r3476
	push.64*    %r3478
	call        reallymarkobject
	br          .L774

.L774:
	load.64*    %r3479 <- 0[l]
	load.64*    %r3480 <- 16[%r3479]
	store.64*   %r3480 -> 0[lim]
	load.64*    %r3481 <- 0[l]
	load.64*    %r3482 <- 80[%r3481]
	store.64*   %r3482 -> 0[ci]
	br          .L779

.L779:
	load.64*    %r3483 <- 0[ci]
	load.64*    %r3484 <- 0[l]
	load.64*    %r3485 <- 40[%r3484]
	setbe.32    %r3486 <- %r3483, %r3485
	br          %r3486, .L776, .L778

.L776:
	load.64*    %r3487 <- 0[lim]
	load.64*    %r3488 <- 0[ci]
	load.64*    %r3489 <- 16[%r3488]
	setb.32     %r3490 <- %r3487, %r3489
	br          %r3490, .L780, .L781

.L780:
	load.64*    %r3491 <- 0[ci]
	load.64*    %r3492 <- 16[%r3491]
	store.64*   %r3492 -> 0[lim]
	br          .L781

.L781:
	br          .L777

.L777:
	load.64*    %r3493 <- 0[ci]
	add.64*     %r3494 <- %r3493, $40
	store.64*   %r3494 -> 0[ci]
	br          .L779

.L778:
	load.64*    %r3495 <- 0[l]
	load.64*    %r3496 <- 64[%r3495]
	store.64*   %r3496 -> 0[o]
	br          .L785

.L785:
	load.64*    %r3497 <- 0[o]
	load.64*    %r3498 <- 0[l]
	load.64*    %r3499 <- 16[%r3498]
	setb.32     %r3500 <- %r3497, %r3499
	br          %r3500, .L782, .L784

.L782:
	load.64*    %r3501 <- 0[o]
	load.32     %r3502 <- 8[%r3501]
	setge.32    %r3503 <- %r3502, $4
	br          %r3503, .L788, .L787

.L788:
	load.64*    %r3504 <- 0[o]
	load.64*    %r3505 <- 0[%r3504]
	load.8      %r3506 <- 9[%r3505]
	cast.32     %r3507 <- (8) %r3506
	and.32      %r3508 <- %r3507, $3
	br          %r3508, .L786, .L787

.L786:
	load.64*    %r3509 <- 0[g]
	load.64*    %r3510 <- 0[o]
	load.64*    %r3511 <- 0[%r3510]
	push.64*    %r3509
	push.64*    %r3511
	call        reallymarkobject
	br          .L787

.L787:
	br          .L783

.L783:
	load.64*    %r3512 <- 0[o]
	add.64*     %r3513 <- %r3512, $16
	store.64*   %r3513 -> 0[o]
	br          .L785

.L784:
	br          .L792

.L792:
	load.64*    %r3514 <- 0[o]
	load.64*    %r3515 <- 0[lim]
	setbe.32    %r3516 <- %r3514, %r3515
	br          %r3516, .L789, .L791

.L789:
	load.64*    %r3517 <- 0[o]
	store.32    $0 -> 8[%r3517]
	br          .L790

.L790:
	load.64*    %r3518 <- 0[o]
	add.64*     %r3519 <- %r3518, $16
	store.64*   %r3519 -> 0[o]
	br          .L792

.L791:
	load.64*    %r3520 <- 0[l]
	load.64*    %r3521 <- 0[lim]
	push.64*    %r3520
	push.64*    %r3521
	call        checkstacksizes
	br          .L793

.L793:
	ret


propagatemark:
.L794:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r3522 <- 0[g]
	load.64*    %r3523 <- 56[%r3522]
	store.64*   %r3523 -> 0[o]
	load.64*    %r3524 <- 0[o]
	load.8      %r3525 <- 9[%r3524]
	cast.32     %r3526 <- (8) %r3525
	or.32       %r3527 <- %r3526, $4
	scast.8     %r3528 <- (32) %r3527
	store.8     %r3528 -> 9[%r3524]
	load.64*    %r3529 <- 0[o]
	load.8      %r3530 <- 8[%r3529]
	switch.8    %r3530, 5 -> .L796, 6 -> .L797, 8 -> .L798, 9 -> .L799, default -> .L800

.L796:
	load.64*    %r3531 <- 0[o]
	add.64*     %r3532 <- %r3531, $0
	store.64*   %r3532 -> 0[h]
	load.64*    %r3533 <- 0[h]
	load.64*    %r3534 <- 48[%r3533]
	load.64*    %r3535 <- 0[g]
	store.64*   %r3534 -> 56[%r3535]
	load.64*    %r3536 <- 0[g]
	load.64*    %r3537 <- 0[h]
	push.64*    %r3536
	push.64*    %r3537
	call.32     %r3538 <- traversetable
	br          %r3538, .L801, .L802

.L801:
	load.64*    %r3539 <- 0[o]
	load.8      %r3540 <- 9[%r3539]
	cast.32     %r3541 <- (8) %r3540
	and.32      %r3542 <- %r3541, $251
	scast.8     %r3543 <- (32) %r3542
	store.8     %r3543 -> 9[%r3539]
	br          .L802

.L802:
	load.64*    %r3544 <- 0[h]
	load.32     %r3545 <- 56[%r3544]
	scast.64    %r3546 <- (32) %r3545
	mulu.64     %r3547 <- $16, %r3546
	add.64      %r3548 <- $64, %r3547
	load.64*    %r3549 <- 0[h]
	load.8      %r3550 <- 11[%r3549]
	cast.32     %r3551 <- (8) %r3550
	shl.64      %r3552 <- $1, %r3551
	mulu.64     %r3553 <- $40, %r3552
	add.64      %r3554 <- %r3548, %r3553
	cast.64     %r3555 <- (64) %r3554
	phisrc.64   %phi124(return) <- %r3555
	br          .L803

.L797:
	load.64*    %r3557 <- 0[o]
	add.64*     %r3558 <- %r3557, $0
	store.64*   %r3558 -> 0[cl]
	load.64*    %r3559 <- 0[cl]
	load.64*    %r3560 <- 16[%r3559]
	load.64*    %r3561 <- 0[g]
	store.64*   %r3560 -> 56[%r3561]
	load.64*    %r3562 <- 0[g]
	load.64*    %r3563 <- 0[cl]
	push.64*    %r3562
	push.64*    %r3563
	call        traverseclosure
	load.64*    %r3564 <- 0[cl]
	load.8      %r3565 <- 10[%r3564]
	br          %r3565, .L804, .L805

.L804:
	load.64*    %r3566 <- 0[cl]
	load.8      %r3567 <- 11[%r3566]
	cast.32     %r3568 <- (8) %r3567
	sub.32      %r3569 <- %r3568, $1
	scast.64    %r3570 <- (32) %r3569
	mulu.64     %r3571 <- $16, %r3570
	cast.32     %r3572 <- (64) %r3571
	add.32      %r3573 <- $56, %r3572
	phisrc.32   %phi125 <- %r3573
	br          .L806

.L805:
	load.64*    %r3574 <- 0[cl]
	load.8      %r3575 <- 11[%r3574]
	cast.32     %r3576 <- (8) %r3575
	sub.32      %r3577 <- %r3576, $1
	scast.64    %r3578 <- (32) %r3577
	mulu.64     %r3579 <- $8, %r3578
	cast.32     %r3580 <- (64) %r3579
	add.32      %r3581 <- $48, %r3580
	phisrc.32   %phi126 <- %r3581
	br          .L806

.L806:
	phi.32      %r3582 <- %phi125, %phi126
	scast.64    %r3583 <- (32) %r3582
	phisrc.64   %phi127(return) <- %r3583
	br          .L803

.L798:
	load.64*    %r3584 <- 0[o]
	add.64*     %r3585 <- %r3584, $0
	store.64*   %r3585 -> 0[th]
	load.64*    %r3586 <- 0[th]
	load.64*    %r3587 <- 160[%r3586]
	load.64*    %r3588 <- 0[g]
	store.64*   %r3587 -> 56[%r3588]
	load.64*    %r3589 <- 0[g]
	load.64*    %r3590 <- 64[%r3589]
	load.64*    %r3591 <- 0[th]
	store.64*   %r3590 -> 160[%r3591]
	load.64*    %r3592 <- 0[o]
	load.64*    %r3593 <- 0[g]
	store.64*   %r3592 -> 64[%r3593]
	load.64*    %r3594 <- 0[o]
	load.8      %r3595 <- 9[%r3594]
	cast.32     %r3596 <- (8) %r3595
	and.32      %r3597 <- %r3596, $251
	scast.8     %r3598 <- (32) %r3597
	store.8     %r3598 -> 9[%r3594]
	load.64*    %r3599 <- 0[g]
	load.64*    %r3600 <- 0[th]
	push.64*    %r3599
	push.64*    %r3600
	call        traversestack
	load.64*    %r3601 <- 0[th]
	load.32     %r3602 <- 88[%r3601]
	scast.64    %r3603 <- (32) %r3602
	mulu.64     %r3604 <- $16, %r3603
	add.64      %r3605 <- $184, %r3604
	load.64*    %r3606 <- 0[th]
	load.32     %r3607 <- 92[%r3606]
	scast.64    %r3608 <- (32) %r3607
	mulu.64     %r3609 <- $40, %r3608
	add.64      %r3610 <- %r3605, %r3609
	cast.64     %r3611 <- (64) %r3610
	phisrc.64   %phi128(return) <- %r3611
	br          .L803

.L799:
	load.64*    %r3612 <- 0[o]
	add.64*     %r3613 <- %r3612, $0
	store.64*   %r3613 -> 0[p]
	load.64*    %r3614 <- 0[p]
	load.64*    %r3615 <- 104[%r3614]
	load.64*    %r3616 <- 0[g]
	store.64*   %r3615 -> 56[%r3616]
	load.64*    %r3617 <- 0[g]
	load.64*    %r3618 <- 0[p]
	push.64*    %r3617
	push.64*    %r3618
	call        traverseproto
	load.64*    %r3619 <- 0[p]
	load.32     %r3620 <- 80[%r3619]
	scast.64    %r3621 <- (32) %r3620
	mulu.64     %r3622 <- $4, %r3621
	add.64      %r3623 <- $120, %r3622
	load.64*    %r3624 <- 0[p]
	load.32     %r3625 <- 88[%r3624]
	scast.64    %r3626 <- (32) %r3625
	mulu.64     %r3627 <- $8, %r3626
	add.64      %r3628 <- %r3623, %r3627
	load.64*    %r3629 <- 0[p]
	load.32     %r3630 <- 76[%r3629]
	scast.64    %r3631 <- (32) %r3630
	mulu.64     %r3632 <- $16, %r3631
	add.64      %r3633 <- %r3628, %r3632
	load.64*    %r3634 <- 0[p]
	load.32     %r3635 <- 84[%r3634]
	scast.64    %r3636 <- (32) %r3635
	mulu.64     %r3637 <- $4, %r3636
	add.64      %r3638 <- %r3633, %r3637
	load.64*    %r3639 <- 0[p]
	load.32     %r3640 <- 92[%r3639]
	scast.64    %r3641 <- (32) %r3640
	mulu.64     %r3642 <- $16, %r3641
	add.64      %r3643 <- %r3638, %r3642
	load.64*    %r3644 <- 0[p]
	load.32     %r3645 <- 72[%r3644]
	scast.64    %r3646 <- (32) %r3645
	mulu.64     %r3647 <- $8, %r3646
	add.64      %r3648 <- %r3643, %r3647
	cast.64     %r3649 <- (64) %r3648
	phisrc.64   %phi129(return) <- %r3649
	br          .L803

.L800:
	phisrc.64   %phi130(return) <- $0
	br          .L803

.L803:
	phi.64      %r3556 <- %phi124(return), %phi127(return), %phi128(return), %phi129(return), %phi130(return)
	ret.64      %r3556


propagateall:
.L807:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.64    $0 -> 0[m]
	br          .L811

.L811:
	load.64*    %r3650 <- 0[g]
	load.64*    %r3651 <- 56[%r3650]
	br          %r3651, .L808, .L810

.L808:
	load.64*    %r3652 <- 0[g]
	push.64*    %r3652
	call.64     %r3653 <- propagatemark
	scast.64    %r3654 <- (64) %r3653
	load.64     %r3655 <- 0[m]
	cast.64     %r3656 <- (64) %r3655
	add.64      %r3657 <- %r3656, %r3654
	cast.64     %r3658 <- (64) %r3657
	store.64    %r3658 -> 0[m]
	br          .L809

.L809:
	br          .L811

.L810:
	load.64     %r3659 <- 0[m]
	phisrc.64   %phi131(return) <- %r3659
	br          .L812

.L812:
	phi.64      %r3660 <- %phi131(return)
	ret.64      %r3659


iscleared:
.L813:
	<entry-point>
	store.64*   %arg1 -> 0[o]
	store.32    %arg2 -> 0[iskey]
	load.64*    %r3661 <- 0[o]
	load.32     %r3662 <- 8[%r3661]
	scast.32    %r3663 <- (32) %r3662
	setge.32    %r3664 <- %r3663, $4
	br          %r3664, .L815, .L814

.L814:
	phisrc.32   %phi132(return) <- $0
	br          .L816

.L815:
	load.64*    %r3666 <- 0[o]
	load.32     %r3667 <- 8[%r3666]
	scast.32    %r3668 <- (32) %r3667
	seteq.32    %r3669 <- %r3668, $4
	br          %r3669, .L817, .L818

.L817:
	load.64*    %r3670 <- 0[o]
	load.64*    %r3671 <- 0[%r3670]
	load.8      %r3672 <- 9[%r3671]
	cast.32     %r3673 <- (8) %r3672
	and.32      %r3674 <- %r3673, $252
	scast.8     %r3675 <- (32) %r3674
	store.8     %r3675 -> 9[%r3671]
	phisrc.32   %phi133(return) <- $0
	br          .L816

.L818:
	load.64*    %r3676 <- 0[o]
	load.64*    %r3677 <- 0[%r3676]
	load.8      %r3678 <- 9[%r3677]
	cast.32     %r3679 <- (8) %r3678
	and.32      %r3680 <- %r3679, $3
	br          %r3680, .L819, .L820

.L819:
	phisrc.32   %phi134 <- $1
	br          .L821

.L820:
	load.64*    %r3681 <- 0[o]
	load.32     %r3682 <- 8[%r3681]
	scast.32    %r3683 <- (32) %r3682
	seteq.32    %r3684 <- %r3683, $7
	br          %r3684, .L822, .L823

.L822:
	load.32     %r3685 <- 0[iskey]
	br          %r3685, .L826, .L825

.L825:
	load.64*    %r3686 <- 0[o]
	load.64*    %r3687 <- 0[%r3686]
	load.8      %r3688 <- 9[%r3687]
	cast.32     %r3689 <- (8) %r3688
	and.32      %r3690 <- %r3689, $8
	phisrc.32   %phi135 <- %r3690
	br          .L827

.L826:
	phisrc.32   %phi136 <- $0
	br          .L827

.L827:
	phi.32      %r3691 <- %phi135, %phi136
	phisrc.32   %phi137 <- %r3691
	br          .L824

.L823:
	phisrc.32   %phi138 <- $0
	br          .L824

.L824:
	phi.32      %r3692 <- %phi137, %phi138
	phisrc.32   %phi139 <- %r3692
	br          .L821

.L821:
	phi.32      %r3693 <- %phi134, %phi139
	phisrc.32   %phi140(return) <- %r3693
	br          .L816

.L816:
	phi.32      %r3665 <- %phi132(return), %phi133(return), %phi140(return)
	ret.32      %r3665


cleartable:
.L828:
	<entry-point>
	store.64*   %arg1 -> 0[l]
	br          .L832

.L832:
	load.64*    %r3694 <- 0[l]
	br          %r3694, .L829, .L831

.L829:
	load.64*    %r3695 <- 0[l]
	add.64*     %r3696 <- %r3695, $0
	store.64*   %r3696 -> 0[h]
	load.64*    %r3697 <- 0[h]
	load.32     %r3698 <- 56[%r3697]
	store.32    %r3698 -> 0[i]
	load.64*    %r3699 <- 0[h]
	load.8      %r3700 <- 9[%r3699]
	cast.32     %r3701 <- (8) %r3700
	and.32      %r3702 <- %r3701, $16
	br          %r3702, .L833, .L834

.L833:
	br          .L838

.L838:
	load.32     %r3703 <- 0[i]
	sub.32      %r3704 <- %r3703, $1
	store.32    %r3704 -> 0[i]
	br          %r3703, .L835, .L837

.L835:
	load.64*    %r3705 <- 0[h]
	load.64*    %r3706 <- 24[%r3705]
	load.32     %r3707 <- 0[i]
	scast.64    %r3708 <- (32) %r3707
	muls.64     %r3709 <- %r3708, $16
	add.64*     %r3710 <- %r3706, %r3709
	store.64*   %r3710 -> 0[o]
	load.64*    %r3711 <- 0[o]
	push.64*    %r3711
	push.32     $0
	call.32     %r3712 <- iscleared
	br          %r3712, .L839, .L840

.L839:
	load.64*    %r3713 <- 0[o]
	store.32    $0 -> 8[%r3713]
	br          .L840

.L840:
	br          .L836

.L836:
	br          .L838

.L837:
	br          .L834

.L834:
	load.64*    %r3714 <- 0[h]
	load.8      %r3715 <- 11[%r3714]
	cast.32     %r3716 <- (8) %r3715
	shl.64      %r3717 <- $1, %r3716
	cast.32     %r3718 <- (64) %r3717
	store.32    %r3718 -> 0[i]
	br          .L844

.L844:
	load.32     %r3719 <- 0[i]
	sub.32      %r3720 <- %r3719, $1
	store.32    %r3720 -> 0[i]
	br          %r3719, .L841, .L843

.L841:
	load.64*    %r3721 <- 0[h]
	load.64*    %r3722 <- 32[%r3721]
	load.32     %r3723 <- 0[i]
	scast.64    %r3724 <- (32) %r3723
	muls.64     %r3725 <- %r3724, $40
	add.64*     %r3726 <- %r3722, %r3725
	store.64*   %r3726 -> 0[n]
	load.64*    %r3727 <- 0[n]
	load.32     %r3728 <- 8[%r3727]
	seteq.32    %r3729 <- %r3728, $0
	br          %r3729, .L846, .L847

.L847:
	load.64*    %r3730 <- 0[n]
	add.64*     %r3731 <- %r3730, $16
	add.64*     %r3732 <- %r3731, $0
	push.64*    %r3732
	push.32     $1
	call.32     %r3733 <- iscleared
	br          %r3733, .L845, .L848

.L848:
	load.64*    %r3734 <- 0[n]
	add.64*     %r3735 <- %r3734, $0
	push.64*    %r3735
	push.32     $0
	call.32     %r3736 <- iscleared
	br          %r3736, .L845, .L846

.L845:
	load.64*    %r3737 <- 0[n]
	store.32    $0 -> 8[%r3737]
	load.64*    %r3738 <- 0[n]
	push.64*    %r3738
	call        removeentry
	br          .L846

.L846:
	br          .L842

.L842:
	br          .L844

.L843:
	load.64*    %r3739 <- 0[h]
	load.64*    %r3740 <- 48[%r3739]
	store.64*   %r3740 -> 0[l]
	br          .L830

.L830:
	br          .L832

.L831:
	ret


freeobj:
.L849:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	load.64*    %r3741 <- 0[o]
	load.8      %r3742 <- 8[%r3741]
	switch.8    %r3742, 4 -> .L856, 5 -> .L854, 6 -> .L852, 7 -> .L857, 8 -> .L855, 9 -> .L851, 10 -> .L853, default -> .L858

.L851:
	load.64*    %r3743 <- 0[L]
	load.64*    %r3744 <- 0[o]
	add.64*     %r3745 <- %r3744, $0
	push.64*    %r3743
	push.64*    %r3745
	call        luaF_freeproto
	br          .L850

.L852:
	load.64*    %r3746 <- 0[L]
	load.64*    %r3747 <- 0[o]
	add.64*     %r3748 <- %r3747, $0
	push.64*    %r3746
	push.64*    %r3748
	call        luaF_freeclosure
	br          .L850

.L853:
	load.64*    %r3749 <- 0[L]
	load.64*    %r3750 <- 0[o]
	add.64*     %r3751 <- %r3750, $0
	push.64*    %r3749
	push.64*    %r3751
	call        luaF_freeupval
	br          .L850

.L854:
	load.64*    %r3752 <- 0[L]
	load.64*    %r3753 <- 0[o]
	add.64*     %r3754 <- %r3753, $0
	push.64*    %r3752
	push.64*    %r3754
	call        luaH_free
	br          .L850

.L855:
	load.64*    %r3755 <- 0[L]
	load.64*    %r3756 <- 0[o]
	add.64*     %r3757 <- %r3756, $0
	push.64*    %r3755
	push.64*    %r3757
	call        luaE_freethread
	br          .L850

.L856:
	load.64*    %r3758 <- 0[L]
	load.64*    %r3759 <- 32[%r3758]
	load.32     %r3760 <- 8[%r3759]
	sub.32      %r3761 <- %r3760, $1
	store.32    %r3761 -> 8[%r3759]
	load.64*    %r3762 <- 0[L]
	load.64*    %r3763 <- 0[o]
	cast.64*    %r3764 <- (64) %r3763
	load.64*    %r3765 <- 0[o]
	load.64     %r3766 <- 16[%r3765]
	add.64      %r3767 <- %r3766, $1
	mulu.64     %r3768 <- %r3767, $1
	add.64      %r3769 <- $24, %r3768
	push.64*    %r3762
	push.64*    %r3764
	push.64     %r3769
	push.64     $0
	call.64*    %r3770 <- luaM_realloc_
	br          .L850

.L857:
	load.64*    %r3771 <- 0[L]
	load.64*    %r3772 <- 0[o]
	cast.64*    %r3773 <- (64) %r3772
	load.64*    %r3774 <- 0[o]
	load.64     %r3775 <- 32[%r3774]
	add.64      %r3776 <- $40, %r3775
	push.64*    %r3771
	push.64*    %r3773
	push.64     %r3776
	push.64     $0
	call.64*    %r3777 <- luaM_realloc_
	br          .L850

.L858:
	br          .L850

.L850:
	ret


sweeplist:
.L859:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p]
	store.64    %arg3 -> 0[count]
	load.64*    %r3778 <- 0[L]
	load.64*    %r3779 <- 32[%r3778]
	store.64*   %r3779 -> 0[g]
	load.64*    %r3780 <- 0[g]
	load.8      %r3781 <- 32[%r3780]
	cast.32     %r3782 <- (8) %r3781
	xor.32      %r3783 <- %r3782, $3
	store.32    %r3783 -> 0[deadmask]
	br          .L863

.L863:
	load.64*    %r3784 <- 0[p]
	load.64*    %r3785 <- 0[%r3784]
	store.64*   %r3785 -> 0[curr]
	setne.32    %r3786 <- %r3785, $0
	br          %r3786, .L864, .L862

.L864:
	load.64     %r3787 <- 0[count]
	sub.64      %r3788 <- %r3787, $1
	store.64    %r3788 -> 0[count]
	seta.32     %r3789 <- %r3787, $0
	br          %r3789, .L860, .L862

.L860:
	load.64*    %r3790 <- 0[curr]
	load.8      %r3791 <- 8[%r3790]
	cast.32     %r3792 <- (8) %r3791
	seteq.32    %r3793 <- %r3792, $8
	br          %r3793, .L865, .L866

.L865:
	load.64*    %r3794 <- 0[L]
	load.64*    %r3795 <- 0[curr]
	add.64*     %r3796 <- %r3795, $0
	add.64*     %r3797 <- %r3796, $152
	push.64*    %r3794
	push.64*    %r3797
	push.64     $-3
	call.64*    %r3798 <- sweeplist
	br          .L866

.L866:
	load.64*    %r3799 <- 0[curr]
	load.8      %r3800 <- 9[%r3799]
	cast.32     %r3801 <- (8) %r3800
	xor.32      %r3802 <- %r3801, $3
	load.32     %r3803 <- 0[deadmask]
	and.32      %r3804 <- %r3802, %r3803
	br          %r3804, .L867, .L868

.L867:
	load.64*    %r3805 <- 0[curr]
	load.8      %r3806 <- 9[%r3805]
	cast.32     %r3807 <- (8) %r3806
	and.32      %r3808 <- %r3807, $248
	load.64*    %r3809 <- 0[g]
	load.8      %r3810 <- 32[%r3809]
	cast.32     %r3811 <- (8) %r3810
	and.32      %r3812 <- %r3811, $3
	scast.8     %r3813 <- (32) %r3812
	cast.32     %r3814 <- (8) %r3813
	or.32       %r3815 <- %r3808, %r3814
	scast.8     %r3816 <- (32) %r3815
	load.64*    %r3817 <- 0[curr]
	store.8     %r3816 -> 9[%r3817]
	load.64*    %r3818 <- 0[curr]
	add.64*     %r3819 <- %r3818, $0
	add.64*     %r3820 <- %r3819, $0
	store.64*   %r3820 -> 0[p]
	br          .L869

.L868:
	load.64*    %r3821 <- 0[curr]
	load.64*    %r3822 <- 0[%r3821]
	load.64*    %r3823 <- 0[p]
	store.64*   %r3822 -> 0[%r3823]
	load.64*    %r3824 <- 0[curr]
	load.64*    %r3825 <- 0[g]
	load.64*    %r3826 <- 40[%r3825]
	seteq.32    %r3827 <- %r3824, %r3826
	br          %r3827, .L870, .L871

.L870:
	load.64*    %r3828 <- 0[curr]
	load.64*    %r3829 <- 0[%r3828]
	load.64*    %r3830 <- 0[g]
	store.64*   %r3829 -> 40[%r3830]
	br          .L871

.L871:
	load.64*    %r3831 <- 0[L]
	load.64*    %r3832 <- 0[curr]
	push.64*    %r3831
	push.64*    %r3832
	call        freeobj
	br          .L869

.L869:
	br          .L861

.L861:
	br          .L863

.L862:
	load.64*    %r3833 <- 0[p]
	phisrc.64*  %phi141(return) <- %r3833
	br          .L872

.L872:
	phi.64*     %r3834 <- %phi141(return)
	ret.64*     %r3833


checkSizes:
.L873:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r3835 <- 0[L]
	load.64*    %r3836 <- 32[%r3835]
	store.64*   %r3836 -> 0[g]
	load.64*    %r3837 <- 0[g]
	load.32     %r3838 <- 8[%r3837]
	load.64*    %r3839 <- 0[g]
	load.32     %r3840 <- 12[%r3839]
	divs.32     %r3841 <- %r3840, $4
	scast.32    %r3842 <- (32) %r3841
	setb.32     %r3843 <- %r3838, %r3842
	br          %r3843, .L876, .L875

.L876:
	load.64*    %r3844 <- 0[g]
	load.32     %r3845 <- 12[%r3844]
	setgt.32    %r3846 <- %r3845, $64
	br          %r3846, .L874, .L875

.L874:
	load.64*    %r3847 <- 0[L]
	load.64*    %r3848 <- 0[g]
	load.32     %r3849 <- 12[%r3848]
	divs.32     %r3850 <- %r3849, $2
	push.64*    %r3847
	push.32     %r3850
	call        luaS_resize
	br          .L875

.L875:
	load.64*    %r3851 <- 0[g]
	load.64     %r3852 <- 104[%r3851]
	seta.32     %r3853 <- %r3852, $64
	br          %r3853, .L877, .L878

.L877:
	load.64*    %r3854 <- 0[g]
	load.64     %r3855 <- 104[%r3854]
	divu.64     %r3856 <- %r3855, $2
	store.64    %r3856 -> 0[newsize]
	load.64     %r3857 <- 0[newsize]
	add.64      %r3858 <- %r3857, $1
	cast.64     %r3859 <- (64) %r3858
	setbe.32    %r3860 <- %r3859, $-3
	br          %r3860, .L879, .L880

.L879:
	load.64*    %r3861 <- 0[L]
	load.64*    %r3862 <- 0[g]
	load.64*    %r3863 <- 88[%r3862]
	cast.64*    %r3864 <- (64) %r3863
	load.64*    %r3865 <- 0[g]
	load.64     %r3866 <- 104[%r3865]
	mulu.64     %r3867 <- %r3866, $1
	load.64     %r3868 <- 0[newsize]
	mulu.64     %r3869 <- %r3868, $1
	push.64*    %r3861
	push.64*    %r3864
	push.64     %r3867
	push.64     %r3869
	call.64*    %r3870 <- luaM_realloc_
	phisrc.64*  %phi142 <- %r3870
	br          .L881

.L880:
	load.64*    %r3871 <- 0[L]
	push.64*    %r3871
	call.64*    %r3872 <- luaM_toobig
	cast.64*    %r3873 <- (64) %r3872
	phisrc.64*  %phi143 <- %r3873
	br          .L881

.L881:
	phi.64*     %r3874 <- %phi142, %phi143
	ptrcast.64* %r3875 <- (64) %r3874
	load.64*    %r3876 <- 0[g]
	store.64*   %r3875 -> 88[%r3876]
	load.64     %r3877 <- 0[newsize]
	load.64*    %r3878 <- 0[g]
	store.64    %r3877 -> 104[%r3878]
	br          .L878

.L878:
	ret


GCTM:
.L882:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r3879 <- 0[L]
	load.64*    %r3880 <- 32[%r3879]
	store.64*   %r3880 -> 0[g]
	load.64*    %r3881 <- 0[g]
	load.64*    %r3882 <- 80[%r3881]
	load.64*    %r3883 <- 0[%r3882]
	store.64*   %r3883 -> 0[o]
	load.64*    %r3884 <- 0[o]
	add.64*     %r3885 <- %r3884, $0
	store.64*   %r3885 -> 0[udata]
	load.64*    %r3886 <- 0[o]
	load.64*    %r3887 <- 0[g]
	load.64*    %r3888 <- 80[%r3887]
	seteq.32    %r3889 <- %r3886, %r3888
	br          %r3889, .L883, .L884

.L883:
	load.64*    %r3890 <- 0[g]
	store.64*   $0 -> 80[%r3890]
	br          .L885

.L884:
	load.64*    %r3891 <- 0[udata]
	load.64*    %r3892 <- 0[%r3891]
	load.64*    %r3893 <- 0[g]
	load.64*    %r3894 <- 80[%r3893]
	store.64*   %r3892 -> 0[%r3894]
	br          .L885

.L885:
	load.64*    %r3895 <- 0[g]
	load.64*    %r3896 <- 176[%r3895]
	load.64*    %r3897 <- 0[%r3896]
	load.64*    %r3898 <- 0[udata]
	store.64*   %r3897 -> 0[%r3898]
	load.64*    %r3899 <- 0[o]
	load.64*    %r3900 <- 0[g]
	load.64*    %r3901 <- 176[%r3900]
	store.64*   %r3899 -> 0[%r3901]
	load.64*    %r3902 <- 0[o]
	load.8      %r3903 <- 9[%r3902]
	cast.32     %r3904 <- (8) %r3903
	and.32      %r3905 <- %r3904, $248
	load.64*    %r3906 <- 0[g]
	load.8      %r3907 <- 32[%r3906]
	cast.32     %r3908 <- (8) %r3907
	and.32      %r3909 <- %r3908, $3
	scast.8     %r3910 <- (32) %r3909
	cast.32     %r3911 <- (8) %r3910
	or.32       %r3912 <- %r3905, %r3911
	scast.8     %r3913 <- (32) %r3912
	load.64*    %r3914 <- 0[o]
	store.8     %r3913 -> 9[%r3914]
	load.64*    %r3915 <- 0[udata]
	load.64*    %r3916 <- 16[%r3915]
	seteq.32    %r3917 <- %r3916, $0
	br          %r3917, .L886, .L887

.L886:
	phisrc.64*  %phi144 <- $0
	br          .L888

.L887:
	load.64*    %r3918 <- 0[udata]
	load.64*    %r3919 <- 16[%r3918]
	load.8      %r3920 <- 10[%r3919]
	cast.32     %r3921 <- (8) %r3920
	and.32      %r3922 <- %r3921, $4
	br          %r3922, .L889, .L890

.L889:
	phisrc.64*  %phi145 <- $0
	br          .L891

.L890:
	load.64*    %r3923 <- 0[udata]
	load.64*    %r3924 <- 16[%r3923]
	load.64*    %r3925 <- 0[L]
	load.64*    %r3926 <- 32[%r3925]
	load.64*    %r3927 <- 312[%r3926]
	push.64*    %r3924
	push.32     $2
	push.64*    %r3927
	call.64*    %r3928 <- luaT_gettm
	phisrc.64*  %phi146 <- %r3928
	br          .L891

.L891:
	phi.64*     %r3929 <- %phi145, %phi146
	phisrc.64*  %phi147 <- %r3929
	br          .L888

.L888:
	phi.64*     %r3930 <- %phi144, %phi147
	store.64*   %r3930 -> 0[tm]
	load.64*    %r3931 <- 0[tm]
	setne.32    %r3932 <- %r3931, $0
	br          %r3932, .L892, .L893

.L892:
	load.64*    %r3933 <- 0[L]
	load.8      %r3934 <- 101[%r3933]
	store.8     %r3934 -> 0[oldah]
	load.64*    %r3935 <- 0[g]
	load.64     %r3936 <- 112[%r3935]
	store.64    %r3936 -> 0[oldt]
	load.64*    %r3937 <- 0[L]
	store.8     $0 -> 101[%r3937]
	load.64*    %r3938 <- 0[g]
	load.64     %r3939 <- 120[%r3938]
	mulu.64     %r3940 <- $2, %r3939
	load.64*    %r3941 <- 0[g]
	store.64    %r3940 -> 112[%r3941]
	load.64*    %r3942 <- 0[tm]
	store.64*   %r3942 -> 0[o2]
	load.64*    %r3943 <- 0[L]
	load.64*    %r3944 <- 16[%r3943]
	store.64*   %r3944 -> 0[o1]
	load.64*    %r3945 <- 0[o2]
	load.f64    %r3946 <- 0[%r3945]
	fpcast.f64  %r3947 <- (64) %r3946
	load.64*    %r3948 <- 0[o1]
	store.f64   %r3947 -> 0[%r3948]
	load.64*    %r3949 <- 0[o2]
	load.32     %r3950 <- 8[%r3949]
	scast.32    %r3951 <- (32) %r3950
	load.64*    %r3952 <- 0[o1]
	store.32    %r3951 -> 8[%r3952]
	load.64*    %r3953 <- 0[L]
	load.64*    %r3954 <- 16[%r3953]
	add.64*     %r3955 <- %r3954, $16
	store.64*   %r3955 -> 0[i_o]
	load.64*    %r3956 <- 0[udata]
	ptrcast.64* %r3957 <- (64) %r3956
	load.64*    %r3958 <- 0[i_o]
	store.64*   %r3957 -> 0[%r3958]
	load.64*    %r3959 <- 0[i_o]
	store.32    $7 -> 8[%r3959]
	load.64*    %r3960 <- 0[L]
	load.64*    %r3961 <- 16[%r3960]
	cast.64     %r3962 <- (64) %r3961
	add.64      %r3963 <- %r3962, $32
	ptrcast.64* %r3964 <- (64) %r3963
	store.64*   %r3964 -> 16[%r3960]
	load.64*    %r3965 <- 0[L]
	load.64*    %r3966 <- 0[L]
	load.64*    %r3967 <- 16[%r3966]
	sub.64*     %r3968 <- %r3967, $32
	push.64*    %r3965
	push.64*    %r3968
	push.32     $0
	call        luaD_call
	load.8      %r3969 <- 0[oldah]
	load.64*    %r3970 <- 0[L]
	store.8     %r3969 -> 101[%r3970]
	load.64     %r3971 <- 0[oldt]
	load.64*    %r3972 <- 0[g]
	store.64    %r3971 -> 112[%r3972]
	br          .L893

.L893:
	ret


luaC_callGCTM:
.L894:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	br          .L898

.L898:
	load.64*    %r3973 <- 0[L]
	load.64*    %r3974 <- 32[%r3973]
	load.64*    %r3975 <- 80[%r3974]
	br          %r3975, .L895, .L897

.L895:
	load.64*    %r3976 <- 0[L]
	push.64*    %r3976
	call        GCTM
	br          .L896

.L896:
	br          .L898

.L897:
	ret


luaC_freeall:
.L899:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r3977 <- 0[L]
	load.64*    %r3978 <- 32[%r3977]
	store.64*   %r3978 -> 0[g]
	load.64*    %r3979 <- 0[g]
	store.8     $67 -> 32[%r3979]
	load.64*    %r3980 <- 0[L]
	load.64*    %r3981 <- 0[g]
	add.64*     %r3982 <- %r3981, $40
	push.64*    %r3980
	push.64*    %r3982
	push.64     $-3
	call.64*    %r3983 <- sweeplist
	store.32    $0 -> 0[i]
	br          .L903

.L903:
	load.32     %r3984 <- 0[i]
	load.64*    %r3985 <- 0[g]
	load.32     %r3986 <- 12[%r3985]
	setlt.32    %r3987 <- %r3984, %r3986
	br          %r3987, .L900, .L902

.L900:
	load.64*    %r3988 <- 0[L]
	load.64*    %r3989 <- 0[g]
	load.64*    %r3990 <- 0[%r3989]
	load.32     %r3991 <- 0[i]
	scast.64    %r3992 <- (32) %r3991
	muls.64     %r3993 <- %r3992, $8
	add.64*     %r3994 <- %r3990, %r3993
	push.64*    %r3988
	push.64*    %r3994
	push.64     $-3
	call.64*    %r3995 <- sweeplist
	br          .L901

.L901:
	load.32     %r3996 <- 0[i]
	add.32      %r3997 <- %r3996, $1
	store.32    %r3997 -> 0[i]
	br          .L903

.L902:
	ret


markmt:
.L904:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	store.32    $0 -> 0[i]
	br          .L908

.L908:
	load.32     %r3998 <- 0[i]
	setlt.32    %r3999 <- %r3998, $9
	br          %r3999, .L905, .L907

.L905:
	load.64*    %r4000 <- 0[g]
	add.64*     %r4001 <- %r4000, $224
	load.32     %r4002 <- 0[i]
	scast.64    %r4003 <- (32) %r4002
	muls.64     %r4004 <- %r4003, $8
	add.64*     %r4005 <- %r4001, %r4004
	load.64*    %r4006 <- 0[%r4005]
	br          %r4006, .L909, .L910

.L909:
	load.64*    %r4007 <- 0[g]
	add.64*     %r4008 <- %r4007, $224
	load.32     %r4009 <- 0[i]
	scast.64    %r4010 <- (32) %r4009
	muls.64     %r4011 <- %r4010, $8
	add.64*     %r4012 <- %r4008, %r4011
	load.64*    %r4013 <- 0[%r4012]
	ptrcast.64* %r4014 <- (64) %r4013
	load.8      %r4015 <- 9[%r4014]
	cast.32     %r4016 <- (8) %r4015
	and.32      %r4017 <- %r4016, $3
	br          %r4017, .L911, .L912

.L911:
	load.64*    %r4018 <- 0[g]
	load.64*    %r4019 <- 0[g]
	add.64*     %r4020 <- %r4019, $224
	load.32     %r4021 <- 0[i]
	scast.64    %r4022 <- (32) %r4021
	muls.64     %r4023 <- %r4022, $8
	add.64*     %r4024 <- %r4020, %r4023
	load.64*    %r4025 <- 0[%r4024]
	ptrcast.64* %r4026 <- (64) %r4025
	push.64*    %r4018
	push.64*    %r4026
	call        reallymarkobject
	br          .L912

.L912:
	br          .L910

.L910:
	br          .L906

.L906:
	load.32     %r4027 <- 0[i]
	add.32      %r4028 <- %r4027, $1
	store.32    %r4028 -> 0[i]
	br          .L908

.L907:
	ret


markroot:
.L913:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4029 <- 0[L]
	load.64*    %r4030 <- 32[%r4029]
	store.64*   %r4030 -> 0[g]
	load.64*    %r4031 <- 0[g]
	store.64*   $0 -> 56[%r4031]
	load.64*    %r4032 <- 0[g]
	store.64*   $0 -> 64[%r4032]
	load.64*    %r4033 <- 0[g]
	store.64*   $0 -> 72[%r4033]
	load.64*    %r4034 <- 0[g]
	load.64*    %r4035 <- 176[%r4034]
	ptrcast.64* %r4036 <- (64) %r4035
	load.8      %r4037 <- 9[%r4036]
	cast.32     %r4038 <- (8) %r4037
	and.32      %r4039 <- %r4038, $3
	br          %r4039, .L914, .L915

.L914:
	load.64*    %r4040 <- 0[g]
	load.64*    %r4041 <- 0[g]
	load.64*    %r4042 <- 176[%r4041]
	ptrcast.64* %r4043 <- (64) %r4042
	push.64*    %r4040
	push.64*    %r4043
	call        reallymarkobject
	br          .L915

.L915:
	load.64*    %r4044 <- 0[g]
	load.64*    %r4045 <- 176[%r4044]
	load.32     %r4046 <- 128[%r4045]
	setge.32    %r4047 <- %r4046, $4
	br          %r4047, .L918, .L917

.L918:
	load.64*    %r4048 <- 0[g]
	load.64*    %r4049 <- 176[%r4048]
	load.64*    %r4050 <- 120[%r4049]
	load.8      %r4051 <- 9[%r4050]
	cast.32     %r4052 <- (8) %r4051
	and.32      %r4053 <- %r4052, $3
	br          %r4053, .L916, .L917

.L916:
	load.64*    %r4054 <- 0[g]
	load.64*    %r4055 <- 0[g]
	load.64*    %r4056 <- 176[%r4055]
	load.64*    %r4057 <- 120[%r4056]
	push.64*    %r4054
	push.64*    %r4057
	call        reallymarkobject
	br          .L917

.L917:
	load.64*    %r4058 <- 0[L]
	load.64*    %r4059 <- 32[%r4058]
	load.32     %r4060 <- 168[%r4059]
	setge.32    %r4061 <- %r4060, $4
	br          %r4061, .L921, .L920

.L921:
	load.64*    %r4062 <- 0[L]
	load.64*    %r4063 <- 32[%r4062]
	load.64*    %r4064 <- 160[%r4063]
	load.8      %r4065 <- 9[%r4064]
	cast.32     %r4066 <- (8) %r4065
	and.32      %r4067 <- %r4066, $3
	br          %r4067, .L919, .L920

.L919:
	load.64*    %r4068 <- 0[g]
	load.64*    %r4069 <- 0[L]
	load.64*    %r4070 <- 32[%r4069]
	load.64*    %r4071 <- 160[%r4070]
	push.64*    %r4068
	push.64*    %r4071
	call        reallymarkobject
	br          .L920

.L920:
	load.64*    %r4072 <- 0[g]
	push.64*    %r4072
	call        markmt
	load.64*    %r4073 <- 0[g]
	store.8     $1 -> 33[%r4073]
	br          .L922

.L922:
	ret


remarkupvals:
.L923:
	<entry-point>
	store.64*   %arg1 -> 0[g]
	load.64*    %r4074 <- 0[g]
	load.64*    %r4075 <- 216[%r4074]
	store.64*   %r4075 -> 0[uv]
	br          .L927

.L927:
	load.64*    %r4076 <- 0[uv]
	load.64*    %r4077 <- 0[g]
	add.64*     %r4078 <- %r4077, $184
	setne.32    %r4079 <- %r4076, %r4078
	br          %r4079, .L924, .L926

.L924:
	load.64*    %r4080 <- 0[uv]
	ptrcast.64* %r4081 <- (64) %r4080
	load.8      %r4082 <- 9[%r4081]
	cast.32     %r4083 <- (8) %r4082
	and.32      %r4084 <- %r4083, $4
	br          %r4084, .L929, .L930

.L930:
	load.64*    %r4085 <- 0[uv]
	ptrcast.64* %r4086 <- (64) %r4085
	load.8      %r4087 <- 9[%r4086]
	cast.32     %r4088 <- (8) %r4087
	and.32      %r4089 <- %r4088, $3
	br          %r4089, .L929, .L928

.L928:
	load.64*    %r4090 <- 0[uv]
	load.64*    %r4091 <- 16[%r4090]
	load.32     %r4092 <- 8[%r4091]
	setge.32    %r4093 <- %r4092, $4
	br          %r4093, .L933, .L932

.L933:
	load.64*    %r4094 <- 0[uv]
	load.64*    %r4095 <- 16[%r4094]
	load.64*    %r4096 <- 0[%r4095]
	load.8      %r4097 <- 9[%r4096]
	cast.32     %r4098 <- (8) %r4097
	and.32      %r4099 <- %r4098, $3
	br          %r4099, .L931, .L932

.L931:
	load.64*    %r4100 <- 0[g]
	load.64*    %r4101 <- 0[uv]
	load.64*    %r4102 <- 16[%r4101]
	load.64*    %r4103 <- 0[%r4102]
	push.64*    %r4100
	push.64*    %r4103
	call        reallymarkobject
	br          .L932

.L932:
	br          .L929

.L929:
	br          .L925

.L925:
	load.64*    %r4104 <- 0[uv]
	load.64*    %r4105 <- 32[%r4104]
	store.64*   %r4105 -> 0[uv]
	br          .L927

.L926:
	ret


atomic:
.L934:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4106 <- 0[L]
	load.64*    %r4107 <- 32[%r4106]
	store.64*   %r4107 -> 0[g]
	load.64*    %r4108 <- 0[g]
	push.64*    %r4108
	call        remarkupvals
	load.64*    %r4109 <- 0[g]
	push.64*    %r4109
	call.64     %r4110 <- propagateall
	load.64*    %r4111 <- 0[g]
	load.64*    %r4112 <- 72[%r4111]
	load.64*    %r4113 <- 0[g]
	store.64*   %r4112 -> 56[%r4113]
	load.64*    %r4114 <- 0[g]
	store.64*   $0 -> 72[%r4114]
	load.64*    %r4115 <- 0[L]
	ptrcast.64* %r4116 <- (64) %r4115
	load.8      %r4117 <- 9[%r4116]
	cast.32     %r4118 <- (8) %r4117
	and.32      %r4119 <- %r4118, $3
	br          %r4119, .L935, .L936

.L935:
	load.64*    %r4120 <- 0[g]
	load.64*    %r4121 <- 0[L]
	ptrcast.64* %r4122 <- (64) %r4121
	push.64*    %r4120
	push.64*    %r4122
	call        reallymarkobject
	br          .L936

.L936:
	load.64*    %r4123 <- 0[g]
	push.64*    %r4123
	call        markmt
	load.64*    %r4124 <- 0[g]
	push.64*    %r4124
	call.64     %r4125 <- propagateall
	load.64*    %r4126 <- 0[g]
	load.64*    %r4127 <- 64[%r4126]
	load.64*    %r4128 <- 0[g]
	store.64*   %r4127 -> 56[%r4128]
	load.64*    %r4129 <- 0[g]
	store.64*   $0 -> 64[%r4129]
	load.64*    %r4130 <- 0[g]
	push.64*    %r4130
	call.64     %r4131 <- propagateall
	load.64*    %r4132 <- 0[L]
	push.64*    %r4132
	push.32     $0
	call.64     %r4133 <- luaC_separateudata
	store.64    %r4133 -> 0[udsize]
	load.64*    %r4134 <- 0[g]
	push.64*    %r4134
	call        marktmu
	load.64*    %r4135 <- 0[g]
	push.64*    %r4135
	call.64     %r4136 <- propagateall
	load.64     %r4137 <- 0[udsize]
	cast.64     %r4138 <- (64) %r4137
	add.64      %r4139 <- %r4138, %r4136
	cast.64     %r4140 <- (64) %r4139
	store.64    %r4140 -> 0[udsize]
	load.64*    %r4141 <- 0[g]
	load.64*    %r4142 <- 72[%r4141]
	push.64*    %r4142
	call        cleartable
	load.64*    %r4143 <- 0[g]
	load.8      %r4144 <- 32[%r4143]
	cast.32     %r4145 <- (8) %r4144
	xor.32      %r4146 <- %r4145, $3
	scast.8     %r4147 <- (32) %r4146
	load.64*    %r4148 <- 0[g]
	store.8     %r4147 -> 32[%r4148]
	load.64*    %r4149 <- 0[g]
	store.32    $0 -> 36[%r4149]
	load.64*    %r4150 <- 0[g]
	add.64*     %r4151 <- %r4150, $40
	load.64*    %r4152 <- 0[g]
	store.64*   %r4151 -> 48[%r4152]
	load.64*    %r4153 <- 0[g]
	store.8     $2 -> 33[%r4153]
	load.64*    %r4154 <- 0[g]
	load.64     %r4155 <- 120[%r4154]
	load.64     %r4156 <- 0[udsize]
	sub.64      %r4157 <- %r4155, %r4156
	load.64*    %r4158 <- 0[g]
	store.64    %r4157 -> 128[%r4158]
	br          .L937

.L937:
	ret


singlestep:
.L938:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4159 <- 0[L]
	load.64*    %r4160 <- 32[%r4159]
	store.64*   %r4160 -> 0[g]
	load.64*    %r4161 <- 0[g]
	load.8      %r4162 <- 33[%r4161]
	switch.8    %r4162, 0 -> .L940, 1 -> .L941, 2 -> .L942, 3 -> .L943, 4 -> .L944, default -> .L945

.L940:
	load.64*    %r4163 <- 0[L]
	push.64*    %r4163
	call        markroot
	phisrc.64   %phi148(return) <- $0
	br          .L946

.L941:
	load.64*    %r4165 <- 0[g]
	load.64*    %r4166 <- 56[%r4165]
	br          %r4166, .L947, .L948

.L947:
	load.64*    %r4167 <- 0[g]
	push.64*    %r4167
	call.64     %r4168 <- propagatemark
	phisrc.64   %phi149(return) <- %r4168
	br          .L946

.L948:
	load.64*    %r4169 <- 0[L]
	push.64*    %r4169
	call        atomic
	phisrc.64   %phi150(return) <- $0
	br          .L946

.L942:
	load.64*    %r4170 <- 0[g]
	load.64     %r4171 <- 120[%r4170]
	store.64    %r4171 -> 0[old]
	load.64*    %r4172 <- 0[L]
	load.64*    %r4173 <- 0[g]
	load.64*    %r4174 <- 0[%r4173]
	load.64*    %r4175 <- 0[g]
	load.32     %r4176 <- 36[%r4175]
	add.32      %r4177 <- %r4176, $1
	store.32    %r4177 -> 36[%r4175]
	scast.64    %r4178 <- (32) %r4176
	muls.64     %r4179 <- %r4178, $8
	add.64*     %r4180 <- %r4174, %r4179
	push.64*    %r4172
	push.64*    %r4180
	push.64     $-3
	call.64*    %r4181 <- sweeplist
	load.64*    %r4182 <- 0[g]
	load.32     %r4183 <- 36[%r4182]
	load.64*    %r4184 <- 0[g]
	load.32     %r4185 <- 12[%r4184]
	setge.32    %r4186 <- %r4183, %r4185
	br          %r4186, .L950, .L951

.L950:
	load.64*    %r4187 <- 0[g]
	store.8     $3 -> 33[%r4187]
	br          .L951

.L951:
	load.64     %r4188 <- 0[old]
	load.64*    %r4189 <- 0[g]
	load.64     %r4190 <- 120[%r4189]
	sub.64      %r4191 <- %r4188, %r4190
	load.64*    %r4192 <- 0[g]
	load.64     %r4193 <- 128[%r4192]
	cast.64     %r4194 <- (64) %r4193
	sub.64      %r4195 <- %r4194, %r4191
	cast.64     %r4196 <- (64) %r4195
	store.64    %r4196 -> 128[%r4192]
	phisrc.64   %phi151(return) <- $10
	br          .L946

.L943:
	load.64*    %r4197 <- 0[g]
	load.64     %r4198 <- 120[%r4197]
	store.64    %r4198 -> 0[old]
	load.64*    %r4199 <- 0[L]
	load.64*    %r4200 <- 0[g]
	load.64*    %r4201 <- 48[%r4200]
	push.64*    %r4199
	push.64*    %r4201
	push.64     $40
	call.64*    %r4202 <- sweeplist
	load.64*    %r4203 <- 0[g]
	store.64*   %r4202 -> 48[%r4203]
	load.64*    %r4204 <- 0[g]
	load.64*    %r4205 <- 48[%r4204]
	load.64*    %r4206 <- 0[%r4205]
	seteq.32    %r4207 <- %r4206, $0
	br          %r4207, .L952, .L953

.L952:
	load.64*    %r4208 <- 0[L]
	push.64*    %r4208
	call        checkSizes
	load.64*    %r4209 <- 0[g]
	store.8     $4 -> 33[%r4209]
	br          .L953

.L953:
	load.64     %r4210 <- 0[old]
	load.64*    %r4211 <- 0[g]
	load.64     %r4212 <- 120[%r4211]
	sub.64      %r4213 <- %r4210, %r4212
	load.64*    %r4214 <- 0[g]
	load.64     %r4215 <- 128[%r4214]
	cast.64     %r4216 <- (64) %r4215
	sub.64      %r4217 <- %r4216, %r4213
	cast.64     %r4218 <- (64) %r4217
	store.64    %r4218 -> 128[%r4214]
	phisrc.64   %phi152(return) <- $400
	br          .L946

.L944:
	load.64*    %r4219 <- 0[g]
	load.64*    %r4220 <- 80[%r4219]
	br          %r4220, .L954, .L955

.L954:
	load.64*    %r4221 <- 0[L]
	push.64*    %r4221
	call        GCTM
	load.64*    %r4222 <- 0[g]
	load.64     %r4223 <- 128[%r4222]
	seta.32     %r4224 <- %r4223, $100
	br          %r4224, .L956, .L957

.L956:
	load.64*    %r4225 <- 0[g]
	load.64     %r4226 <- 128[%r4225]
	cast.64     %r4227 <- (64) %r4226
	sub.64      %r4228 <- %r4227, $100
	cast.64     %r4229 <- (64) %r4228
	store.64    %r4229 -> 128[%r4225]
	br          .L957

.L957:
	phisrc.64   %phi153(return) <- $100
	br          .L946

.L955:
	load.64*    %r4230 <- 0[g]
	store.8     $0 -> 33[%r4230]
	load.64*    %r4231 <- 0[g]
	store.64    $0 -> 136[%r4231]
	phisrc.64   %phi154(return) <- $0
	br          .L946

.L945:
	phisrc.64   %phi155(return) <- $0
	br          .L946

.L946:
	phi.64      %r4164 <- %phi148(return), %phi149(return), %phi150(return), %phi151(return), %phi152(return), %phi153(return), %phi154(return), %phi155(return)
	ret.64      %r4164


luaC_step:
.L959:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4232 <- 0[L]
	load.64*    %r4233 <- 32[%r4232]
	store.64*   %r4233 -> 0[g]
	load.64*    %r4234 <- 0[g]
	load.32     %r4235 <- 148[%r4234]
	scast.32    %r4236 <- (32) %r4235
	mulu.32     %r4237 <- $10, %r4236
	cast.64     %r4238 <- (32) %r4237
	store.64    %r4238 -> 0[lim]
	load.64     %r4239 <- 0[lim]
	seteq.32    %r4240 <- %r4239, $0
	br          %r4240, .L960, .L961

.L960:
	store.64    $0x7ffffffffffffffe -> 0[lim]
	br          .L961

.L961:
	load.64*    %r4241 <- 0[g]
	load.64     %r4242 <- 120[%r4241]
	load.64*    %r4243 <- 0[g]
	load.64     %r4244 <- 112[%r4243]
	sub.64      %r4245 <- %r4242, %r4244
	load.64*    %r4246 <- 0[g]
	load.64     %r4247 <- 136[%r4246]
	cast.64     %r4248 <- (64) %r4247
	add.64      %r4249 <- %r4248, %r4245
	cast.64     %r4250 <- (64) %r4249
	store.64    %r4250 -> 136[%r4246]
	br          .L962

.L962:
	load.64*    %r4251 <- 0[L]
	push.64*    %r4251
	call.64     %r4252 <- singlestep
	load.64     %r4253 <- 0[lim]
	scast.64    %r4254 <- (64) %r4253
	sub.64      %r4255 <- %r4254, %r4252
	scast.64    %r4256 <- (64) %r4255
	store.64    %r4256 -> 0[lim]
	load.64*    %r4257 <- 0[g]
	load.8      %r4258 <- 33[%r4257]
	cast.32     %r4259 <- (8) %r4258
	seteq.32    %r4260 <- %r4259, $0
	br          %r4260, .L965, .L966

.L965:
	br          .L964

.L966:
	br          .L963

.L963:
	load.64     %r4261 <- 0[lim]
	setgt.32    %r4262 <- %r4261, $0
	br          %r4262, .L962, .L964

.L964:
	load.64*    %r4263 <- 0[g]
	load.8      %r4264 <- 33[%r4263]
	cast.32     %r4265 <- (8) %r4264
	setne.32    %r4266 <- %r4265, $0
	br          %r4266, .L967, .L968

.L967:
	load.64*    %r4267 <- 0[g]
	load.64     %r4268 <- 136[%r4267]
	setb.32     %r4269 <- %r4268, $0x400
	br          %r4269, .L969, .L970

.L969:
	load.64*    %r4270 <- 0[g]
	load.64     %r4271 <- 120[%r4270]
	add.64      %r4272 <- %r4271, $0x400
	load.64*    %r4273 <- 0[g]
	store.64    %r4272 -> 112[%r4273]
	br          .L971

.L970:
	load.64*    %r4274 <- 0[g]
	load.64     %r4275 <- 136[%r4274]
	cast.64     %r4276 <- (64) %r4275
	sub.64      %r4277 <- %r4276, $0x400
	cast.64     %r4278 <- (64) %r4277
	store.64    %r4278 -> 136[%r4274]
	load.64*    %r4279 <- 0[g]
	load.64     %r4280 <- 120[%r4279]
	load.64*    %r4281 <- 0[g]
	store.64    %r4280 -> 112[%r4281]
	br          .L971

.L971:
	br          .L972

.L968:
	load.64*    %r4282 <- 0[g]
	load.64     %r4283 <- 128[%r4282]
	divu.64     %r4284 <- %r4283, $100
	load.64*    %r4285 <- 0[g]
	load.32     %r4286 <- 144[%r4285]
	scast.64    %r4287 <- (32) %r4286
	mulu.64     %r4288 <- %r4284, %r4287
	load.64*    %r4289 <- 0[g]
	store.64    %r4288 -> 112[%r4289]
	br          .L972

.L972:
	ret


luaC_barrierf:
.L973:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.64*   %arg3 -> 0[v]
	load.64*    %r4290 <- 0[L]
	load.64*    %r4291 <- 32[%r4290]
	store.64*   %r4291 -> 0[g]
	load.64*    %r4292 <- 0[g]
	load.8      %r4293 <- 33[%r4292]
	cast.32     %r4294 <- (8) %r4293
	seteq.32    %r4295 <- %r4294, $1
	br          %r4295, .L974, .L975

.L974:
	load.64*    %r4296 <- 0[g]
	load.64*    %r4297 <- 0[v]
	push.64*    %r4296
	push.64*    %r4297
	call        reallymarkobject
	br          .L976

.L975:
	load.64*    %r4298 <- 0[o]
	load.8      %r4299 <- 9[%r4298]
	cast.32     %r4300 <- (8) %r4299
	and.32      %r4301 <- %r4300, $248
	load.64*    %r4302 <- 0[g]
	load.8      %r4303 <- 32[%r4302]
	cast.32     %r4304 <- (8) %r4303
	and.32      %r4305 <- %r4304, $3
	scast.8     %r4306 <- (32) %r4305
	cast.32     %r4307 <- (8) %r4306
	or.32       %r4308 <- %r4301, %r4307
	scast.8     %r4309 <- (32) %r4308
	load.64*    %r4310 <- 0[o]
	store.8     %r4309 -> 9[%r4310]
	br          .L976

.L976:
	ret


luaC_barrierback:
.L977:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	load.64*    %r4311 <- 0[L]
	load.64*    %r4312 <- 32[%r4311]
	store.64*   %r4312 -> 0[g]
	load.64*    %r4313 <- 0[t]
	ptrcast.64* %r4314 <- (64) %r4313
	store.64*   %r4314 -> 0[o]
	load.64*    %r4315 <- 0[o]
	load.8      %r4316 <- 9[%r4315]
	cast.32     %r4317 <- (8) %r4316
	and.32      %r4318 <- %r4317, $251
	scast.8     %r4319 <- (32) %r4318
	store.8     %r4319 -> 9[%r4315]
	load.64*    %r4320 <- 0[g]
	load.64*    %r4321 <- 64[%r4320]
	load.64*    %r4322 <- 0[t]
	store.64*   %r4321 -> 48[%r4322]
	load.64*    %r4323 <- 0[o]
	load.64*    %r4324 <- 0[g]
	store.64*   %r4323 -> 64[%r4324]
	br          .L978

.L978:
	ret


luaC_link:
.L979:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.8     %arg3 -> 0[tt]
	load.64*    %r4325 <- 0[L]
	load.64*    %r4326 <- 32[%r4325]
	store.64*   %r4326 -> 0[g]
	load.64*    %r4327 <- 0[g]
	load.64*    %r4328 <- 40[%r4327]
	load.64*    %r4329 <- 0[o]
	store.64*   %r4328 -> 0[%r4329]
	load.64*    %r4330 <- 0[o]
	load.64*    %r4331 <- 0[g]
	store.64*   %r4330 -> 40[%r4331]
	load.64*    %r4332 <- 0[g]
	load.8      %r4333 <- 32[%r4332]
	cast.32     %r4334 <- (8) %r4333
	and.32      %r4335 <- %r4334, $3
	scast.8     %r4336 <- (32) %r4335
	load.64*    %r4337 <- 0[o]
	store.8     %r4336 -> 9[%r4337]
	load.8      %r4338 <- 0[tt]
	load.64*    %r4339 <- 0[o]
	store.8     %r4338 -> 8[%r4339]
	br          .L980

.L980:
	ret


luaC_linkupval:
.L981:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[uv]
	load.64*    %r4340 <- 0[L]
	load.64*    %r4341 <- 32[%r4340]
	store.64*   %r4341 -> 0[g]
	load.64*    %r4342 <- 0[uv]
	ptrcast.64* %r4343 <- (64) %r4342
	store.64*   %r4343 -> 0[o]
	load.64*    %r4344 <- 0[g]
	load.64*    %r4345 <- 40[%r4344]
	load.64*    %r4346 <- 0[o]
	store.64*   %r4345 -> 0[%r4346]
	load.64*    %r4347 <- 0[o]
	load.64*    %r4348 <- 0[g]
	store.64*   %r4347 -> 40[%r4348]
	load.64*    %r4349 <- 0[o]
	load.8      %r4350 <- 9[%r4349]
	cast.32     %r4351 <- (8) %r4350
	and.32      %r4352 <- %r4351, $4
	br          %r4352, .L983, .L984

.L984:
	load.64*    %r4353 <- 0[o]
	load.8      %r4354 <- 9[%r4353]
	cast.32     %r4355 <- (8) %r4354
	and.32      %r4356 <- %r4355, $3
	br          %r4356, .L983, .L982

.L982:
	load.64*    %r4357 <- 0[g]
	load.8      %r4358 <- 33[%r4357]
	cast.32     %r4359 <- (8) %r4358
	seteq.32    %r4360 <- %r4359, $1
	br          %r4360, .L985, .L986

.L985:
	load.64*    %r4361 <- 0[o]
	load.8      %r4362 <- 9[%r4361]
	cast.32     %r4363 <- (8) %r4362
	or.32       %r4364 <- %r4363, $4
	scast.8     %r4365 <- (32) %r4364
	store.8     %r4365 -> 9[%r4361]
	load.64*    %r4366 <- 0[uv]
	load.64*    %r4367 <- 16[%r4366]
	load.32     %r4368 <- 8[%r4367]
	setge.32    %r4369 <- %r4368, $4
	br          %r4369, .L990, .L988

.L990:
	load.64*    %r4370 <- 0[uv]
	load.64*    %r4371 <- 16[%r4370]
	load.64*    %r4372 <- 0[%r4371]
	load.8      %r4373 <- 9[%r4372]
	cast.32     %r4374 <- (8) %r4373
	and.32      %r4375 <- %r4374, $3
	br          %r4375, .L989, .L988

.L989:
	load.64*    %r4376 <- 0[uv]
	ptrcast.64* %r4377 <- (64) %r4376
	load.8      %r4378 <- 9[%r4377]
	cast.32     %r4379 <- (8) %r4378
	and.32      %r4380 <- %r4379, $4
	br          %r4380, .L987, .L988

.L987:
	load.64*    %r4381 <- 0[L]
	load.64*    %r4382 <- 0[uv]
	ptrcast.64* %r4383 <- (64) %r4382
	load.64*    %r4384 <- 0[uv]
	load.64*    %r4385 <- 16[%r4384]
	load.64*    %r4386 <- 0[%r4385]
	push.64*    %r4381
	push.64*    %r4383
	push.64*    %r4386
	call        luaC_barrierf
	br          .L988

.L988:
	br          .L991

.L986:
	load.64*    %r4387 <- 0[o]
	load.8      %r4388 <- 9[%r4387]
	cast.32     %r4389 <- (8) %r4388
	and.32      %r4390 <- %r4389, $248
	load.64*    %r4391 <- 0[g]
	load.8      %r4392 <- 32[%r4391]
	cast.32     %r4393 <- (8) %r4392
	and.32      %r4394 <- %r4393, $3
	scast.8     %r4395 <- (32) %r4394
	cast.32     %r4396 <- (8) %r4395
	or.32       %r4397 <- %r4390, %r4396
	scast.8     %r4398 <- (32) %r4397
	load.64*    %r4399 <- 0[o]
	store.8     %r4398 -> 9[%r4399]
	br          .L991

.L991:
	br          .L983

.L983:
	ret


stack_init:
.L992:
	<entry-point>
	store.64*   %arg1 -> 0[L1]
	store.64*   %arg2 -> 0[L]
	load.64*    %r4400 <- 0[L]
	push.64*    %r4400
	push.64*    $0
	push.64     $0
	push.64     $320
	call.64*    %r4401 <- luaM_realloc_
	ptrcast.64* %r4402 <- (64) %r4401
	load.64*    %r4403 <- 0[L1]
	store.64*   %r4402 -> 80[%r4403]
	load.64*    %r4404 <- 0[L1]
	load.64*    %r4405 <- 80[%r4404]
	load.64*    %r4406 <- 0[L1]
	store.64*   %r4405 -> 40[%r4406]
	load.64*    %r4407 <- 0[L1]
	store.32    $8 -> 92[%r4407]
	load.64*    %r4408 <- 0[L1]
	load.64*    %r4409 <- 80[%r4408]
	load.64*    %r4410 <- 0[L1]
	load.32     %r4411 <- 92[%r4410]
	scast.64    %r4412 <- (32) %r4411
	muls.64     %r4413 <- %r4412, $40
	add.64*     %r4414 <- %r4409, %r4413
	sub.64*     %r4415 <- %r4414, $40
	load.64*    %r4416 <- 0[L1]
	store.64*   %r4415 -> 72[%r4416]
	load.64*    %r4417 <- 0[L]
	push.64*    %r4417
	push.64*    $0
	push.64     $0
	push.64     $720
	call.64*    %r4418 <- luaM_realloc_
	ptrcast.64* %r4419 <- (64) %r4418
	load.64*    %r4420 <- 0[L1]
	store.64*   %r4419 -> 64[%r4420]
	load.64*    %r4421 <- 0[L1]
	store.32    $45 -> 88[%r4421]
	load.64*    %r4422 <- 0[L1]
	load.64*    %r4423 <- 64[%r4422]
	load.64*    %r4424 <- 0[L1]
	store.64*   %r4423 -> 16[%r4424]
	load.64*    %r4425 <- 0[L1]
	load.64*    %r4426 <- 64[%r4425]
	load.64*    %r4427 <- 0[L1]
	load.32     %r4428 <- 88[%r4427]
	sub.32      %r4429 <- %r4428, $5
	scast.64    %r4430 <- (32) %r4429
	muls.64     %r4431 <- %r4430, $16
	add.64*     %r4432 <- %r4426, %r4431
	sub.64*     %r4433 <- %r4432, $16
	load.64*    %r4434 <- 0[L1]
	store.64*   %r4433 -> 56[%r4434]
	load.64*    %r4435 <- 0[L1]
	load.64*    %r4436 <- 16[%r4435]
	load.64*    %r4437 <- 0[L1]
	load.64*    %r4438 <- 40[%r4437]
	store.64*   %r4436 -> 8[%r4438]
	load.64*    %r4439 <- 0[L1]
	load.64*    %r4440 <- 16[%r4439]
	add.64*     %r4441 <- %r4440, $16
	store.64*   %r4441 -> 16[%r4439]
	store.32    $0 -> 8[%r4440]
	load.64*    %r4442 <- 0[L1]
	load.64*    %r4443 <- 16[%r4442]
	load.64*    %r4444 <- 0[L1]
	load.64*    %r4445 <- 40[%r4444]
	store.64*   %r4443 -> 0[%r4445]
	load.64*    %r4446 <- 0[L1]
	store.64*   %r4443 -> 24[%r4446]
	load.64*    %r4447 <- 0[L1]
	load.64*    %r4448 <- 16[%r4447]
	add.64*     %r4449 <- %r4448, $320
	load.64*    %r4450 <- 0[L1]
	load.64*    %r4451 <- 40[%r4450]
	store.64*   %r4449 -> 16[%r4451]
	br          .L993

.L993:
	ret


freestack:
.L994:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[L1]
	load.64*    %r4452 <- 0[L]
	load.64*    %r4453 <- 0[L1]
	load.64*    %r4454 <- 80[%r4453]
	cast.64*    %r4455 <- (64) %r4454
	load.64*    %r4456 <- 0[L1]
	load.32     %r4457 <- 92[%r4456]
	scast.64    %r4458 <- (32) %r4457
	mulu.64     %r4459 <- %r4458, $40
	push.64*    %r4452
	push.64*    %r4455
	push.64     %r4459
	push.64     $0
	call.64*    %r4460 <- luaM_realloc_
	load.64*    %r4461 <- 0[L]
	load.64*    %r4462 <- 0[L1]
	load.64*    %r4463 <- 64[%r4462]
	cast.64*    %r4464 <- (64) %r4463
	load.64*    %r4465 <- 0[L1]
	load.32     %r4466 <- 88[%r4465]
	scast.64    %r4467 <- (32) %r4466
	mulu.64     %r4468 <- %r4467, $16
	push.64*    %r4461
	push.64*    %r4464
	push.64     %r4468
	push.64     $0
	call.64*    %r4469 <- luaM_realloc_
	br          .L995

.L995:
	ret


f_luaopen:
.L996:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4470 <- 0[L]
	load.64*    %r4471 <- 32[%r4470]
	store.64*   %r4471 -> 0[g]
	load.64*    %r4472 <- 0[ud]
	load.64*    %r4473 <- 0[L]
	load.64*    %r4474 <- 0[L]
	push.64*    %r4473
	push.64*    %r4474
	call        stack_init
	load.64*    %r4475 <- 0[L]
	add.64*     %r4476 <- %r4475, $120
	store.64*   %r4476 -> 0[i_o]
	load.64*    %r4477 <- 0[L]
	push.64*    %r4477
	push.32     $0
	push.32     $2
	call.64*    %r4478 <- luaH_new
	ptrcast.64* %r4479 <- (64) %r4478
	load.64*    %r4480 <- 0[i_o]
	store.64*   %r4479 -> 0[%r4480]
	load.64*    %r4481 <- 0[i_o]
	store.32    $5 -> 8[%r4481]
	load.64*    %r4482 <- 0[L]
	load.64*    %r4483 <- 32[%r4482]
	add.64*     %r4484 <- %r4483, $160
	store.64*   %r4484 -> 0[i_o]
	load.64*    %r4485 <- 0[L]
	push.64*    %r4485
	push.32     $0
	push.32     $2
	call.64*    %r4486 <- luaH_new
	ptrcast.64* %r4487 <- (64) %r4486
	load.64*    %r4488 <- 0[i_o]
	store.64*   %r4487 -> 0[%r4488]
	load.64*    %r4489 <- 0[i_o]
	store.32    $5 -> 8[%r4489]
	load.64*    %r4490 <- 0[L]
	push.64*    %r4490
	push.32     $32
	call        luaS_resize
	load.64*    %r4491 <- 0[L]
	push.64*    %r4491
	call        luaT_init
	load.64*    %r4492 <- 0[L]
	push.64*    %r4492
	call        luaX_init
	load.64*    %r4493 <- 0[L]
	symaddr.64* %r4494 <- <anon symbol:0x62d00126b4c0>
	push.64*    %r4493
	push.64*    %r4494
	push.64     $17
	call.64*    %r4495 <- luaS_newlstr
	load.8      %r4496 <- 9[%r4495]
	cast.32     %r4497 <- (8) %r4496
	or.32       %r4498 <- %r4497, $32
	scast.8     %r4499 <- (32) %r4498
	store.8     %r4499 -> 9[%r4495]
	load.64*    %r4500 <- 0[g]
	load.64     %r4501 <- 120[%r4500]
	mulu.64     %r4502 <- $4, %r4501
	load.64*    %r4503 <- 0[g]
	store.64    %r4502 -> 112[%r4503]
	br          .L997

.L997:
	ret


preinit_state:
.L998:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[g]
	load.64*    %r4504 <- 0[g]
	load.64*    %r4505 <- 0[L]
	store.64*   %r4504 -> 32[%r4505]
	load.64*    %r4506 <- 0[L]
	store.64*   $0 -> 64[%r4506]
	load.64*    %r4507 <- 0[L]
	store.32    $0 -> 88[%r4507]
	load.64*    %r4508 <- 0[L]
	store.64*   $0 -> 168[%r4508]
	load.64*    %r4509 <- 0[L]
	store.64*   $0 -> 112[%r4509]
	load.64*    %r4510 <- 0[L]
	store.8     $0 -> 100[%r4510]
	load.64*    %r4511 <- 0[L]
	store.32    $0 -> 104[%r4511]
	load.64*    %r4512 <- 0[L]
	store.8     $1 -> 101[%r4512]
	load.64*    %r4513 <- 0[L]
	load.32     %r4514 <- 104[%r4513]
	load.64*    %r4515 <- 0[L]
	store.32    %r4514 -> 108[%r4515]
	load.64*    %r4516 <- 0[L]
	store.64*   $0 -> 152[%r4516]
	load.64*    %r4517 <- 0[L]
	store.32    $0 -> 92[%r4517]
	load.64*    %r4518 <- 0[L]
	store.16    $0 -> 98[%r4518]
	load.64*    %r4519 <- 0[L]
	store.16    $0 -> 96[%r4519]
	load.64*    %r4520 <- 0[L]
	store.8     $0 -> 10[%r4520]
	load.64*    %r4521 <- 0[L]
	store.64*   $0 -> 40[%r4521]
	load.64*    %r4522 <- 0[L]
	store.64*   $0 -> 80[%r4522]
	load.64*    %r4523 <- 0[L]
	store.64*   $0 -> 48[%r4523]
	load.64*    %r4524 <- 0[L]
	store.64    $0 -> 176[%r4524]
	load.64*    %r4525 <- 0[L]
	store.32    $0 -> 128[%r4525]
	br          .L999

.L999:
	ret


close_state:
.L1000:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4526 <- 0[L]
	load.64*    %r4527 <- 32[%r4526]
	store.64*   %r4527 -> 0[g]
	load.64*    %r4528 <- 0[L]
	load.64*    %r4529 <- 0[L]
	load.64*    %r4530 <- 64[%r4529]
	push.64*    %r4528
	push.64*    %r4530
	call        luaF_close
	load.64*    %r4531 <- 0[L]
	push.64*    %r4531
	call        luaC_freeall
	load.64*    %r4532 <- 0[L]
	load.64*    %r4533 <- 0[L]
	load.64*    %r4534 <- 32[%r4533]
	load.64*    %r4535 <- 0[%r4534]
	cast.64*    %r4536 <- (64) %r4535
	load.64*    %r4537 <- 0[L]
	load.64*    %r4538 <- 32[%r4537]
	load.32     %r4539 <- 12[%r4538]
	scast.64    %r4540 <- (32) %r4539
	mulu.64     %r4541 <- %r4540, $8
	push.64*    %r4532
	push.64*    %r4536
	push.64     %r4541
	push.64     $0
	call.64*    %r4542 <- luaM_realloc_
	load.64*    %r4543 <- 0[L]
	load.64*    %r4544 <- 0[g]
	load.64*    %r4545 <- 88[%r4544]
	cast.64*    %r4546 <- (64) %r4545
	load.64*    %r4547 <- 0[g]
	load.64     %r4548 <- 104[%r4547]
	mulu.64     %r4549 <- %r4548, $1
	push.64*    %r4543
	push.64*    %r4546
	push.64     %r4549
	push.64     $0
	call.64*    %r4550 <- luaM_realloc_
	ptrcast.64* %r4551 <- (64) %r4550
	load.64*    %r4552 <- 0[g]
	store.64*   %r4551 -> 88[%r4552]
	load.64*    %r4553 <- 0[g]
	store.64    $0 -> 104[%r4553]
	load.64*    %r4554 <- 0[L]
	load.64*    %r4555 <- 0[L]
	push.64*    %r4554
	push.64*    %r4555
	call        freestack
	load.64*    %r4556 <- 0[g]
	load.64*    %r4557 <- 24[%r4556]
	load.64*    %r4558 <- 0[L]
	ptrcast.64* %r4559 <- (64) %r4558
	sub.64*     %r4560 <- %r4559, $0
	cast.64*    %r4561 <- (64) %r4560
	push.64*    %r4557
	push.64*    %r4561
	push.64     $616
	push.64     $0
	load.64*    %r4562 <- 0[g]
	load.64*    %r4563 <- 16[%r4562]
	call.64*    %r4564 <- %r4563
	br          .L1001

.L1001:
	ret


luaE_freethread:
.L1002:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[L1]
	load.64*    %r4565 <- 0[L1]
	load.64*    %r4566 <- 0[L1]
	load.64*    %r4567 <- 64[%r4566]
	push.64*    %r4565
	push.64*    %r4567
	call        luaF_close
	load.64*    %r4568 <- 0[L]
	load.64*    %r4569 <- 0[L1]
	push.64*    %r4568
	push.64*    %r4569
	call        freestack
	load.64*    %r4570 <- 0[L]
	load.64*    %r4571 <- 0[L1]
	ptrcast.64* %r4572 <- (64) %r4571
	sub.64*     %r4573 <- %r4572, $0
	cast.64*    %r4574 <- (64) %r4573
	push.64*    %r4570
	push.64*    %r4574
	push.64     $184
	push.64     $0
	call.64*    %r4575 <- luaM_realloc_
	br          .L1003

.L1003:
	ret


lua_newstate:
.L1004:
	<entry-point>
	store.64*   %arg1 -> 0[f]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4576 <- 0[ud]
	push.64*    %r4576
	push.64*    $0
	push.64     $0
	push.64     $616
	load.64*    %r4577 <- 0[f]
	call.64*    %r4578 <- %r4577
	store.64*   %r4578 -> 0[l]
	load.64*    %r4579 <- 0[l]
	seteq.32    %r4580 <- %r4579, $0
	br          %r4580, .L1005, .L1006

.L1005:
	phisrc.64*  %phi156(return) <- $0
	br          .L1007

.L1006:
	load.64*    %r4582 <- 0[l]
	ptrcast.64* %r4583 <- (64) %r4582
	add.64*     %r4584 <- %r4583, $0
	ptrcast.64* %r4585 <- (64) %r4584
	store.64*   %r4585 -> 0[L]
	load.64*    %r4586 <- 0[L]
	ptrcast.64* %r4587 <- (64) %r4586
	add.64*     %r4588 <- %r4587, $184
	store.64*   %r4588 -> 0[g]
	load.64*    %r4589 <- 0[L]
	store.64*   $0 -> 0[%r4589]
	load.64*    %r4590 <- 0[L]
	store.8     $8 -> 8[%r4590]
	load.64*    %r4591 <- 0[g]
	store.8     $33 -> 32[%r4591]
	load.64*    %r4592 <- 0[g]
	load.8      %r4593 <- 32[%r4592]
	cast.32     %r4594 <- (8) %r4593
	and.32      %r4595 <- %r4594, $3
	scast.8     %r4596 <- (32) %r4595
	load.64*    %r4597 <- 0[L]
	store.8     %r4596 -> 9[%r4597]
	load.64*    %r4598 <- 0[L]
	load.8      %r4599 <- 9[%r4598]
	cast.32     %r4600 <- (8) %r4599
	or.32       %r4601 <- %r4600, $96
	scast.8     %r4602 <- (32) %r4601
	store.8     %r4602 -> 9[%r4598]
	load.64*    %r4603 <- 0[L]
	load.64*    %r4604 <- 0[g]
	push.64*    %r4603
	push.64*    %r4604
	call        preinit_state
	load.64*    %r4605 <- 0[f]
	load.64*    %r4606 <- 0[g]
	store.64*   %r4605 -> 16[%r4606]
	load.64*    %r4607 <- 0[ud]
	load.64*    %r4608 <- 0[g]
	store.64*   %r4607 -> 24[%r4608]
	load.64*    %r4609 <- 0[L]
	load.64*    %r4610 <- 0[g]
	store.64*   %r4609 -> 176[%r4610]
	load.64*    %r4611 <- 0[g]
	add.64*     %r4612 <- %r4611, $184
	load.64*    %r4613 <- 0[g]
	store.64*   %r4612 -> 208[%r4613]
	load.64*    %r4614 <- 0[g]
	add.64*     %r4615 <- %r4614, $184
	load.64*    %r4616 <- 0[g]
	store.64*   %r4615 -> 216[%r4616]
	load.64*    %r4617 <- 0[g]
	store.64    $0 -> 112[%r4617]
	load.64*    %r4618 <- 0[g]
	store.32    $0 -> 12[%r4618]
	load.64*    %r4619 <- 0[g]
	store.32    $0 -> 8[%r4619]
	load.64*    %r4620 <- 0[g]
	store.64*   $0 -> 0[%r4620]
	load.64*    %r4621 <- 0[L]
	load.64*    %r4622 <- 32[%r4621]
	store.32    $0 -> 168[%r4622]
	load.64*    %r4623 <- 0[g]
	store.64*   $0 -> 88[%r4623]
	load.64*    %r4624 <- 0[g]
	store.64    $0 -> 104[%r4624]
	load.64*    %r4625 <- 0[g]
	store.64*   $0 -> 152[%r4625]
	load.64*    %r4626 <- 0[g]
	store.8     $0 -> 33[%r4626]
	load.64*    %r4627 <- 0[L]
	ptrcast.64* %r4628 <- (64) %r4627
	load.64*    %r4629 <- 0[g]
	store.64*   %r4628 -> 40[%r4629]
	load.64*    %r4630 <- 0[g]
	store.32    $0 -> 36[%r4630]
	load.64*    %r4631 <- 0[g]
	add.64*     %r4632 <- %r4631, $40
	load.64*    %r4633 <- 0[g]
	store.64*   %r4632 -> 48[%r4633]
	load.64*    %r4634 <- 0[g]
	store.64*   $0 -> 56[%r4634]
	load.64*    %r4635 <- 0[g]
	store.64*   $0 -> 64[%r4635]
	load.64*    %r4636 <- 0[g]
	store.64*   $0 -> 72[%r4636]
	load.64*    %r4637 <- 0[g]
	store.64*   $0 -> 80[%r4637]
	load.64*    %r4638 <- 0[g]
	store.64    $616 -> 120[%r4638]
	load.64*    %r4639 <- 0[g]
	store.32    $200 -> 144[%r4639]
	load.64*    %r4640 <- 0[g]
	store.32    $200 -> 148[%r4640]
	load.64*    %r4641 <- 0[g]
	store.64    $0 -> 136[%r4641]
	store.32    $0 -> 0[i]
	br          .L1011

.L1011:
	load.32     %r4642 <- 0[i]
	setlt.32    %r4643 <- %r4642, $9
	br          %r4643, .L1008, .L1010

.L1008:
	load.64*    %r4644 <- 0[g]
	add.64*     %r4645 <- %r4644, $224
	load.32     %r4646 <- 0[i]
	scast.64    %r4647 <- (32) %r4646
	muls.64     %r4648 <- %r4647, $8
	add.64*     %r4649 <- %r4645, %r4648
	store.64*   $0 -> 0[%r4649]
	br          .L1009

.L1009:
	load.32     %r4650 <- 0[i]
	add.32      %r4651 <- %r4650, $1
	store.32    %r4651 -> 0[i]
	br          .L1011

.L1010:
	load.64*    %r4652 <- 0[L]
	symaddr.64* %r4653 <- f_luaopen
	push.64*    %r4652
	push.64*    %r4653
	push.64*    $0
	call.32     %r4654 <- luaD_rawrunprotected
	setne.32    %r4655 <- %r4654, $0
	br          %r4655, .L1012, .L1013

.L1012:
	load.64*    %r4656 <- 0[L]
	push.64*    %r4656
	call        close_state
	store.64*   $0 -> 0[L]
	br          .L1014

.L1013:
	br          .L1014

.L1014:
	load.64*    %r4657 <- 0[L]
	phisrc.64*  %phi157(return) <- %r4657
	br          .L1007

.L1007:
	phi.64*     %r4581 <- %phi156(return), %phi157(return)
	ret.64*     %r4581


callallgcTM:
.L1015:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r4658 <- 0[ud]
	load.64*    %r4659 <- 0[L]
	push.64*    %r4659
	call        luaC_callGCTM
	br          .L1016

.L1016:
	ret


lua_close:
.L1017:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r4660 <- 0[L]
	load.64*    %r4661 <- 32[%r4660]
	load.64*    %r4662 <- 176[%r4661]
	store.64*   %r4662 -> 0[L]
	load.64*    %r4663 <- 0[L]
	load.64*    %r4664 <- 0[L]
	load.64*    %r4665 <- 64[%r4664]
	push.64*    %r4663
	push.64*    %r4665
	call        luaF_close
	load.64*    %r4666 <- 0[L]
	push.64*    %r4666
	push.32     $1
	call.64     %r4667 <- luaC_separateudata
	load.64*    %r4668 <- 0[L]
	store.64    $0 -> 176[%r4668]
	br          .L1018

.L1018:
	load.64*    %r4669 <- 0[L]
	load.64*    %r4670 <- 80[%r4669]
	load.64*    %r4671 <- 0[L]
	store.64*   %r4670 -> 40[%r4671]
	load.64*    %r4672 <- 0[L]
	load.64*    %r4673 <- 40[%r4672]
	load.64*    %r4674 <- 0[%r4673]
	load.64*    %r4675 <- 0[L]
	store.64*   %r4674 -> 16[%r4675]
	load.64*    %r4676 <- 0[L]
	store.64*   %r4674 -> 24[%r4676]
	load.64*    %r4677 <- 0[L]
	store.16    $0 -> 98[%r4677]
	load.64*    %r4678 <- 0[L]
	store.16    $0 -> 96[%r4678]
	br          .L1019

.L1019:
	load.64*    %r4679 <- 0[L]
	symaddr.64* %r4680 <- callallgcTM
	push.64*    %r4679
	push.64*    %r4680
	push.64*    $0
	call.32     %r4681 <- luaD_rawrunprotected
	setne.32    %r4682 <- %r4681, $0
	br          %r4682, .L1018, .L1020

.L1020:
	load.64*    %r4683 <- 0[L]
	push.64*    %r4683
	call        close_state
	br          .L1021

.L1021:
	ret


currentpc:
.L1022:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ci]
	load.64*    %r4684 <- 0[ci]
	load.64*    %r4685 <- 8[%r4684]
	load.32     %r4686 <- 8[%r4685]
	seteq.32    %r4687 <- %r4686, $6
	br          %r4687, .L1025, .L1023

.L1025:
	load.64*    %r4688 <- 0[ci]
	load.64*    %r4689 <- 8[%r4688]
	load.64*    %r4690 <- 0[%r4689]
	load.8      %r4691 <- 10[%r4690]
	br          %r4691, .L1023, .L1024

.L1023:
	phisrc.32   %phi158(return) <- $0xffffffff
	br          .L1026

.L1024:
	load.64*    %r4693 <- 0[ci]
	load.64*    %r4694 <- 0[L]
	load.64*    %r4695 <- 40[%r4694]
	seteq.32    %r4696 <- %r4693, %r4695
	br          %r4696, .L1027, .L1028

.L1027:
	load.64*    %r4697 <- 0[L]
	load.64*    %r4698 <- 48[%r4697]
	load.64*    %r4699 <- 0[ci]
	store.64*   %r4698 -> 24[%r4699]
	br          .L1028

.L1028:
	load.64*    %r4700 <- 0[ci]
	load.64*    %r4701 <- 24[%r4700]
	load.64*    %r4702 <- 0[ci]
	load.64*    %r4703 <- 8[%r4702]
	load.64*    %r4704 <- 0[%r4703]
	load.64*    %r4705 <- 32[%r4704]
	load.64*    %r4706 <- 24[%r4705]
	sub.64      %r4707 <- %r4701, %r4706
	divs.64     %r4708 <- %r4707, $4
	scast.32    %r4709 <- (64) %r4708
	sub.32      %r4710 <- %r4709, $1
	phisrc.32   %phi159(return) <- %r4710
	br          .L1026

.L1026:
	phi.32      %r4692 <- %phi158(return), %phi159(return)
	ret.32      %r4692


currentline:
.L1029:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ci]
	load.64*    %r4711 <- 0[L]
	load.64*    %r4712 <- 0[ci]
	push.64*    %r4711
	push.64*    %r4712
	call.32     %r4713 <- currentpc
	store.32    %r4713 -> 0[pc]
	load.32     %r4714 <- 0[pc]
	setlt.32    %r4715 <- %r4714, $0
	br          %r4715, .L1030, .L1031

.L1030:
	phisrc.32   %phi160(return) <- $0xffffffff
	br          .L1032

.L1031:
	load.64*    %r4717 <- 0[ci]
	load.64*    %r4718 <- 8[%r4717]
	load.64*    %r4719 <- 0[%r4718]
	load.64*    %r4720 <- 32[%r4719]
	load.64*    %r4721 <- 40[%r4720]
	br          %r4721, .L1034, .L1035

.L1034:
	load.64*    %r4722 <- 0[ci]
	load.64*    %r4723 <- 8[%r4722]
	load.64*    %r4724 <- 0[%r4723]
	load.64*    %r4725 <- 32[%r4724]
	load.64*    %r4726 <- 40[%r4725]
	load.32     %r4727 <- 0[pc]
	scast.64    %r4728 <- (32) %r4727
	muls.64     %r4729 <- %r4728, $4
	add.64*     %r4730 <- %r4726, %r4729
	load.32     %r4731 <- 0[%r4730]
	phisrc.32   %phi161 <- %r4731
	br          .L1036

.L1035:
	phisrc.32   %phi162 <- $0
	br          .L1036

.L1036:
	phi.32      %r4732 <- %phi161, %phi162
	phisrc.32   %phi163(return) <- %r4732
	br          .L1032

.L1032:
	phi.32      %r4716 <- %phi160(return), %phi163(return)
	ret.32      %r4716


lua_getstack:
.L1037:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[level]
	store.64*   %arg3 -> 0[ar]
	load.64*    %r4733 <- 0[L]
	load.64*    %r4734 <- 40[%r4733]
	store.64*   %r4734 -> 0[ci]
	br          .L1041

.L1041:
	load.32     %r4735 <- 0[level]
	setgt.32    %r4736 <- %r4735, $0
	br          %r4736, .L1042, .L1040

.L1042:
	load.64*    %r4737 <- 0[ci]
	load.64*    %r4738 <- 0[L]
	load.64*    %r4739 <- 80[%r4738]
	seta.32     %r4740 <- %r4737, %r4739
	br          %r4740, .L1038, .L1040

.L1038:
	load.32     %r4741 <- 0[level]
	sub.32      %r4742 <- %r4741, $1
	store.32    %r4742 -> 0[level]
	load.64*    %r4743 <- 0[ci]
	load.64*    %r4744 <- 8[%r4743]
	load.64*    %r4745 <- 0[%r4744]
	load.8      %r4746 <- 10[%r4745]
	br          %r4746, .L1044, .L1043

.L1043:
	load.64*    %r4747 <- 0[ci]
	load.32     %r4748 <- 36[%r4747]
	load.32     %r4749 <- 0[level]
	scast.32    %r4750 <- (32) %r4749
	sub.32      %r4751 <- %r4750, %r4748
	scast.32    %r4752 <- (32) %r4751
	store.32    %r4752 -> 0[level]
	br          .L1044

.L1044:
	br          .L1039

.L1039:
	load.64*    %r4753 <- 0[ci]
	sub.64*     %r4754 <- %r4753, $40
	store.64*   %r4754 -> 0[ci]
	br          .L1041

.L1040:
	load.32     %r4755 <- 0[level]
	seteq.32    %r4756 <- %r4755, $0
	br          %r4756, .L1047, .L1046

.L1047:
	load.64*    %r4757 <- 0[ci]
	load.64*    %r4758 <- 0[L]
	load.64*    %r4759 <- 80[%r4758]
	seta.32     %r4760 <- %r4757, %r4759
	br          %r4760, .L1045, .L1046

.L1045:
	store.32    $1 -> 0[status]
	load.64*    %r4761 <- 0[ci]
	load.64*    %r4762 <- 0[L]
	load.64*    %r4763 <- 80[%r4762]
	sub.64      %r4764 <- %r4761, %r4763
	divs.64     %r4765 <- %r4764, $40
	scast.32    %r4766 <- (64) %r4765
	load.64*    %r4767 <- 0[ar]
	store.32    %r4766 -> 116[%r4767]
	br          .L1048

.L1046:
	load.32     %r4768 <- 0[level]
	setlt.32    %r4769 <- %r4768, $0
	br          %r4769, .L1049, .L1050

.L1049:
	store.32    $1 -> 0[status]
	load.64*    %r4770 <- 0[ar]
	store.32    $0 -> 116[%r4770]
	br          .L1051

.L1050:
	store.32    $0 -> 0[status]
	br          .L1051

.L1051:
	br          .L1048

.L1048:
	load.32     %r4771 <- 0[status]
	phisrc.32   %phi164(return) <- %r4771
	br          .L1052

.L1052:
	phi.32      %r4772 <- %phi164(return)
	ret.32      %r4771


getluaproto:
.L1053:
	<entry-point>
	store.64*   %arg1 -> 0[ci]
	load.64*    %r4773 <- 0[ci]
	load.64*    %r4774 <- 8[%r4773]
	load.32     %r4775 <- 8[%r4774]
	seteq.32    %r4776 <- %r4775, $6
	br          %r4776, .L1058, .L1056

.L1058:
	load.64*    %r4777 <- 0[ci]
	load.64*    %r4778 <- 8[%r4777]
	load.64*    %r4779 <- 0[%r4778]
	load.8      %r4780 <- 10[%r4779]
	br          %r4780, .L1056, .L1055

.L1055:
	load.64*    %r4781 <- 0[ci]
	load.64*    %r4782 <- 8[%r4781]
	load.64*    %r4783 <- 0[%r4782]
	load.64*    %r4784 <- 32[%r4783]
	phisrc.64*  %phi165 <- %r4784
	br          .L1057

.L1056:
	phisrc.64*  %phi166 <- $0
	br          .L1057

.L1057:
	phi.64*     %r4785 <- %phi165, %phi166
	phisrc.64*  %phi167(return) <- %r4785
	br          .L1054

.L1054:
	phi.64*     %r4786 <- %phi167(return)
	ret.64*     %r4785


funcinfo:
.L1059:
	<entry-point>
	store.64*   %arg1 -> 0[ar]
	store.64*   %arg2 -> 0[cl]
	load.64*    %r4787 <- 0[cl]
	load.8      %r4788 <- 10[%r4787]
	br          %r4788, .L1060, .L1061

.L1060:
	symaddr.64* %r4789 <- <anon symbol:0x62d00128ee10>
	load.64*    %r4790 <- 0[ar]
	store.64*   %r4789 -> 32[%r4790]
	load.64*    %r4791 <- 0[ar]
	store.32    $0xffffffff -> 48[%r4791]
	load.64*    %r4792 <- 0[ar]
	store.32    $0xffffffff -> 52[%r4792]
	symaddr.64* %r4793 <- <anon symbol:0x62d00128f720>
	load.64*    %r4794 <- 0[ar]
	store.64*   %r4793 -> 24[%r4794]
	br          .L1062

.L1061:
	load.64*    %r4795 <- 0[cl]
	load.64*    %r4796 <- 32[%r4795]
	load.64*    %r4797 <- 64[%r4796]
	add.64*     %r4798 <- %r4797, $24
	ptrcast.64* %r4799 <- (64) %r4798
	load.64*    %r4800 <- 0[ar]
	store.64*   %r4799 -> 32[%r4800]
	load.64*    %r4801 <- 0[cl]
	load.64*    %r4802 <- 32[%r4801]
	load.32     %r4803 <- 96[%r4802]
	load.64*    %r4804 <- 0[ar]
	store.32    %r4803 -> 48[%r4804]
	load.64*    %r4805 <- 0[cl]
	load.64*    %r4806 <- 32[%r4805]
	load.32     %r4807 <- 100[%r4806]
	load.64*    %r4808 <- 0[ar]
	store.32    %r4807 -> 52[%r4808]
	symaddr.64* %r4809 <- <anon symbol:0x62d001290f98>
	symaddr.64* %r4810 <- <anon symbol:0x62d001290bf8>
	ptrcast.64* %r4811 <- (64) %r4810
	load.64*    %r4812 <- 0[ar]
	load.32     %r4813 <- 48[%r4812]
	seteq.32    %r4814 <- %r4813, $0
	select.64*  %r4815 <- %r4814, %r4809, %r4811
	load.64*    %r4816 <- 0[ar]
	store.64*   %r4815 -> 24[%r4816]
	br          .L1062

.L1062:
	load.64*    %r4817 <- 0[ar]
	add.64*     %r4818 <- %r4817, $56
	load.64*    %r4819 <- 0[ar]
	load.64*    %r4820 <- 32[%r4819]
	push.64*    %r4818
	push.64*    %r4820
	push.64     $60
	call        luaO_chunkid
	br          .L1063

.L1063:
	ret


info_tailcall:
.L1064:
	<entry-point>
	store.64*   %arg1 -> 0[ar]
	symaddr.64* %r4821 <- <anon symbol:0x62d001291c48>
	load.64*    %r4822 <- 0[ar]
	store.64*   %r4821 -> 16[%r4822]
	load.64*    %r4823 <- 0[ar]
	store.64*   %r4821 -> 8[%r4823]
	symaddr.64* %r4824 <- <anon symbol:0x62d0012921b8>
	load.64*    %r4825 <- 0[ar]
	store.64*   %r4824 -> 24[%r4825]
	load.64*    %r4826 <- 0[ar]
	store.32    $0xffffffff -> 40[%r4826]
	load.64*    %r4827 <- 0[ar]
	store.32    $0xffffffff -> 48[%r4827]
	load.64*    %r4828 <- 0[ar]
	store.32    $0xffffffff -> 52[%r4828]
	symaddr.64* %r4829 <- <anon symbol:0x62d001292c98>
	load.64*    %r4830 <- 0[ar]
	store.64*   %r4829 -> 32[%r4830]
	load.64*    %r4831 <- 0[ar]
	add.64*     %r4832 <- %r4831, $56
	load.64*    %r4833 <- 0[ar]
	load.64*    %r4834 <- 32[%r4833]
	push.64*    %r4832
	push.64*    %r4834
	push.64     $60
	call        luaO_chunkid
	load.64*    %r4835 <- 0[ar]
	store.32    $0 -> 44[%r4835]
	br          .L1065

.L1065:
	ret


collectvalidlines:
.L1066:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r4836 <- 0[f]
	seteq.32    %r4837 <- %r4836, $0
	br          %r4837, .L1067, .L1069

.L1069:
	load.64*    %r4838 <- 0[f]
	load.8      %r4839 <- 10[%r4838]
	br          %r4839, .L1067, .L1068

.L1067:
	load.64*    %r4840 <- 0[L]
	load.64*    %r4841 <- 16[%r4840]
	store.32    $0 -> 8[%r4841]
	br          .L1070

.L1068:
	load.64*    %r4842 <- 0[L]
	push.64*    %r4842
	push.32     $0
	push.32     $0
	call.64*    %r4843 <- luaH_new
	store.64*   %r4843 -> 0[t]
	load.64*    %r4844 <- 0[f]
	load.64*    %r4845 <- 32[%r4844]
	load.64*    %r4846 <- 40[%r4845]
	store.64*   %r4846 -> 0[lineinfo]
	store.32    $0 -> 0[i]
	br          .L1074

.L1074:
	load.32     %r4847 <- 0[i]
	load.64*    %r4848 <- 0[f]
	load.64*    %r4849 <- 32[%r4848]
	load.32     %r4850 <- 84[%r4849]
	setlt.32    %r4851 <- %r4847, %r4850
	br          %r4851, .L1071, .L1073

.L1071:
	load.64*    %r4852 <- 0[L]
	load.64*    %r4853 <- 0[t]
	load.64*    %r4854 <- 0[lineinfo]
	load.32     %r4855 <- 0[i]
	scast.64    %r4856 <- (32) %r4855
	muls.64     %r4857 <- %r4856, $4
	add.64*     %r4858 <- %r4854, %r4857
	load.32     %r4859 <- 0[%r4858]
	push.64*    %r4852
	push.64*    %r4853
	push.32     %r4859
	call.64*    %r4860 <- luaH_setnum
	store.64*   %r4860 -> 0[i_o]
	load.64*    %r4861 <- 0[i_o]
	store.32    $1 -> 0[%r4861]
	load.64*    %r4862 <- 0[i_o]
	store.32    $1 -> 8[%r4862]
	br          .L1072

.L1072:
	load.32     %r4863 <- 0[i]
	add.32      %r4864 <- %r4863, $1
	store.32    %r4864 -> 0[i]
	br          .L1074

.L1073:
	load.64*    %r4865 <- 0[L]
	load.64*    %r4866 <- 16[%r4865]
	store.64*   %r4866 -> 0[i_o]
	load.64*    %r4867 <- 0[t]
	ptrcast.64* %r4868 <- (64) %r4867
	load.64*    %r4869 <- 0[i_o]
	store.64*   %r4868 -> 0[%r4869]
	load.64*    %r4870 <- 0[i_o]
	store.32    $5 -> 8[%r4870]
	br          .L1070

.L1070:
	load.64*    %r4871 <- 0[L]
	load.64*    %r4872 <- 56[%r4871]
	ptrcast.64* %r4873 <- (64) %r4872
	load.64*    %r4874 <- 0[L]
	load.64*    %r4875 <- 16[%r4874]
	ptrcast.64* %r4876 <- (64) %r4875
	sub.64      %r4877 <- %r4873, %r4876
	setle.32    %r4878 <- %r4877, $16
	br          %r4878, .L1075, .L1076

.L1075:
	load.64*    %r4879 <- 0[L]
	push.64*    %r4879
	push.32     $1
	call        luaD_growstack
	br          .L1077

.L1076:
	br          .L1077

.L1077:
	load.64*    %r4880 <- 0[L]
	load.64*    %r4881 <- 16[%r4880]
	add.64*     %r4882 <- %r4881, $16
	store.64*   %r4882 -> 16[%r4880]
	br          .L1078

.L1078:
	ret


auxgetinfo:
.L1079:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.64*   %arg3 -> 0[ar]
	store.64*   %arg4 -> 0[f]
	store.64*   %arg5 -> 0[ci]
	store.32    $1 -> 0[status]
	load.64*    %r4883 <- 0[f]
	seteq.32    %r4884 <- %r4883, $0
	br          %r4884, .L1080, .L1081

.L1080:
	load.64*    %r4885 <- 0[ar]
	push.64*    %r4885
	call        info_tailcall
	load.32     %r4886 <- 0[status]
	phisrc.32   %phi168(return) <- %r4886
	br          .L1082

.L1081:
	br          .L1086

.L1086:
	load.64*    %r4888 <- 0[what]
	load.8      %r4889 <- 0[%r4888]
	br          %r4889, .L1083, .L1085

.L1083:
	load.64*    %r4890 <- 0[what]
	load.8      %r4891 <- 0[%r4890]
	switch.8    %r4891, 76 -> .L1092, 83 -> .L1088, 102 -> .L1093, 108 -> .L1089, 110 -> .L1091, 117 -> .L1090, default -> .L1094

.L1088:
	load.64*    %r4892 <- 0[ar]
	load.64*    %r4893 <- 0[f]
	push.64*    %r4892
	push.64*    %r4893
	call        funcinfo
	br          .L1087

.L1089:
	load.64*    %r4894 <- 0[ci]
	br          %r4894, .L1095, .L1096

.L1095:
	load.64*    %r4895 <- 0[L]
	load.64*    %r4896 <- 0[ci]
	push.64*    %r4895
	push.64*    %r4896
	call.32     %r4897 <- currentline
	phisrc.32   %phi169 <- %r4897
	br          .L1097

.L1096:
	phisrc.32   %phi170 <- $0xffffffff
	br          .L1097

.L1097:
	phi.32      %r4898 <- %phi169, %phi170
	load.64*    %r4899 <- 0[ar]
	store.32    %r4898 -> 40[%r4899]
	br          .L1087

.L1090:
	load.64*    %r4900 <- 0[f]
	load.8      %r4901 <- 11[%r4900]
	cast.32     %r4902 <- (8) %r4901
	load.64*    %r4903 <- 0[ar]
	store.32    %r4902 -> 44[%r4903]
	br          .L1087

.L1091:
	load.64*    %r4904 <- 0[ci]
	select.64*  %r4905 <- %r4904, $0, $0
	ptrcast.64* %r4906 <- (64) %r4905
	load.64*    %r4907 <- 0[ar]
	store.64*   %r4906 -> 16[%r4907]
	load.64*    %r4908 <- 0[ar]
	load.64*    %r4909 <- 16[%r4908]
	seteq.32    %r4910 <- %r4909, $0
	br          %r4910, .L1098, .L1099

.L1098:
	symaddr.64* %r4911 <- <anon symbol:0x62d001295818>
	load.64*    %r4912 <- 0[ar]
	store.64*   %r4911 -> 16[%r4912]
	load.64*    %r4913 <- 0[ar]
	store.64*   $0 -> 8[%r4913]
	br          .L1099

.L1099:
	br          .L1087

.L1092:
	br          .L1093

.L1093:
	br          .L1087

.L1094:
	store.32    $0 -> 0[status]
	br          .L1087

.L1087:
	br          .L1084

.L1084:
	load.64*    %r4914 <- 0[what]
	add.64*     %r4915 <- %r4914, $1
	store.64*   %r4915 -> 0[what]
	br          .L1086

.L1085:
	load.32     %r4916 <- 0[status]
	phisrc.32   %phi171(return) <- %r4916
	br          .L1082

.L1082:
	phi.32      %r4887 <- %phi168(return), %phi171(return)
	ret.32      %r4887


lua_getinfo:
.L1100:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.64*   %arg3 -> 0[ar]
	store.64*   $0 -> 0[f]
	store.64*   $0 -> 0[ci]
	load.64*    %r4917 <- 0[what]
	load.8      %r4918 <- 0[%r4917]
	scast.32    %r4919 <- (8) %r4918
	seteq.32    %r4920 <- %r4919, $62
	br          %r4920, .L1101, .L1102

.L1101:
	load.64*    %r4921 <- 0[L]
	load.64*    %r4922 <- 16[%r4921]
	sub.64*     %r4923 <- %r4922, $16
	store.64*   %r4923 -> 0[func]
	load.64*    %r4924 <- 0[L]
	load.64*    %r4925 <- 0[what]
	add.64*     %r4926 <- %r4925, $1
	store.64*   %r4926 -> 0[what]
	load.64*    %r4927 <- 0[func]
	load.64*    %r4928 <- 0[%r4927]
	add.64*     %r4929 <- %r4928, $0
	store.64*   %r4929 -> 0[f]
	load.64*    %r4930 <- 0[L]
	load.64*    %r4931 <- 16[%r4930]
	sub.64*     %r4932 <- %r4931, $16
	store.64*   %r4932 -> 16[%r4930]
	br          .L1103

.L1102:
	load.64*    %r4933 <- 0[ar]
	load.32     %r4934 <- 116[%r4933]
	setne.32    %r4935 <- %r4934, $0
	br          %r4935, .L1104, .L1105

.L1104:
	load.64*    %r4936 <- 0[L]
	load.64*    %r4937 <- 80[%r4936]
	load.64*    %r4938 <- 0[ar]
	load.32     %r4939 <- 116[%r4938]
	scast.64    %r4940 <- (32) %r4939
	muls.64     %r4941 <- %r4940, $40
	add.64*     %r4942 <- %r4937, %r4941
	store.64*   %r4942 -> 0[ci]
	load.64*    %r4943 <- 0[ci]
	load.64*    %r4944 <- 8[%r4943]
	load.64*    %r4945 <- 0[%r4944]
	add.64*     %r4946 <- %r4945, $0
	store.64*   %r4946 -> 0[f]
	br          .L1105

.L1105:
	br          .L1103

.L1103:
	load.64*    %r4947 <- 0[L]
	load.64*    %r4948 <- 0[what]
	load.64*    %r4949 <- 0[ar]
	load.64*    %r4950 <- 0[f]
	load.64*    %r4951 <- 0[ci]
	push.64*    %r4947
	push.64*    %r4948
	push.64*    %r4949
	push.64*    %r4950
	push.64*    %r4951
	call.32     %r4952 <- auxgetinfo
	store.32    %r4952 -> 0[status]
	load.64*    %r4953 <- 0[what]
	push.64*    %r4953
	push.32     $102
	call.64*    %r4954 <- strchr
	br          %r4954, .L1106, .L1107

.L1106:
	load.64*    %r4955 <- 0[f]
	seteq.32    %r4956 <- %r4955, $0
	br          %r4956, .L1108, .L1109

.L1108:
	load.64*    %r4957 <- 0[L]
	load.64*    %r4958 <- 16[%r4957]
	store.32    $0 -> 8[%r4958]
	br          .L1110

.L1109:
	load.64*    %r4959 <- 0[L]
	load.64*    %r4960 <- 16[%r4959]
	store.64*   %r4960 -> 0[i_o]
	load.64*    %r4961 <- 0[f]
	ptrcast.64* %r4962 <- (64) %r4961
	load.64*    %r4963 <- 0[i_o]
	store.64*   %r4962 -> 0[%r4963]
	load.64*    %r4964 <- 0[i_o]
	store.32    $6 -> 8[%r4964]
	br          .L1110

.L1110:
	load.64*    %r4965 <- 0[L]
	load.64*    %r4966 <- 56[%r4965]
	ptrcast.64* %r4967 <- (64) %r4966
	load.64*    %r4968 <- 0[L]
	load.64*    %r4969 <- 16[%r4968]
	ptrcast.64* %r4970 <- (64) %r4969
	sub.64      %r4971 <- %r4967, %r4970
	setle.32    %r4972 <- %r4971, $16
	br          %r4972, .L1111, .L1112

.L1111:
	load.64*    %r4973 <- 0[L]
	push.64*    %r4973
	push.32     $1
	call        luaD_growstack
	br          .L1113

.L1112:
	br          .L1113

.L1113:
	load.64*    %r4974 <- 0[L]
	load.64*    %r4975 <- 16[%r4974]
	add.64*     %r4976 <- %r4975, $16
	store.64*   %r4976 -> 16[%r4974]
	br          .L1107

.L1107:
	load.64*    %r4977 <- 0[what]
	push.64*    %r4977
	push.32     $76
	call.64*    %r4978 <- strchr
	br          %r4978, .L1114, .L1115

.L1114:
	load.64*    %r4979 <- 0[L]
	load.64*    %r4980 <- 0[f]
	push.64*    %r4979
	push.64*    %r4980
	call        collectvalidlines
	br          .L1115

.L1115:
	load.32     %r4981 <- 0[status]
	phisrc.32   %phi172(return) <- %r4981
	br          .L1116

.L1116:
	phi.32      %r4982 <- %phi172(return)
	ret.32      %r4981


isinstack:
.L1117:
	<entry-point>
	store.64*   %arg1 -> 0[ci]
	store.64*   %arg2 -> 0[o]
	load.64*    %r4983 <- 0[ci]
	load.64*    %r4984 <- 0[%r4983]
	store.64*   %r4984 -> 0[p]
	br          .L1121

.L1121:
	load.64*    %r4985 <- 0[p]
	load.64*    %r4986 <- 0[ci]
	load.64*    %r4987 <- 16[%r4986]
	setb.32     %r4988 <- %r4985, %r4987
	br          %r4988, .L1118, .L1120

.L1118:
	load.64*    %r4989 <- 0[o]
	load.64*    %r4990 <- 0[p]
	seteq.32    %r4991 <- %r4989, %r4990
	br          %r4991, .L1122, .L1123

.L1122:
	phisrc.32   %phi173(return) <- $1
	br          .L1124

.L1123:
	br          .L1119

.L1119:
	load.64*    %r4993 <- 0[p]
	add.64*     %r4994 <- %r4993, $16
	store.64*   %r4994 -> 0[p]
	br          .L1121

.L1120:
	phisrc.32   %phi174(return) <- $0
	br          .L1124

.L1124:
	phi.32      %r4992 <- %phi173(return), %phi174(return)
	ret.32      %r4992


luaG_typeerror:
.L1125:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[o]
	store.64*   %arg3 -> 0[op]
	store.64*   $0 -> 0[name]
	symaddr.64* %r4995 <- luaT_typenames
	load.64*    %r4996 <- 0[o]
	load.32     %r4997 <- 8[%r4996]
	scast.64    %r4998 <- (32) %r4997
	muls.64     %r4999 <- %r4998, $8
	add.64*     %r5000 <- %r4995, %r4999
	load.64*    %r5001 <- 0[%r5000]
	store.64*   %r5001 -> 0[t]
	load.64*    %r5002 <- 0[L]
	load.64*    %r5003 <- 40[%r5002]
	load.64*    %r5004 <- 0[o]
	push.64*    %r5003
	push.64*    %r5004
	call.32     %r5005 <- isinstack
	select.64*  %r5006 <- %r5005, $0, $0
	ptrcast.64* %r5007 <- (64) %r5006
	store.64*   %r5007 -> 0[kind]
	load.64*    %r5008 <- 0[kind]
	br          %r5008, .L1126, .L1127

.L1126:
	load.64*    %r5009 <- 0[L]
	symaddr.64* %r5010 <- <anon symbol:0x62d0010eca28>
	load.64*    %r5011 <- 0[op]
	load.64*    %r5012 <- 0[kind]
	load.64*    %r5013 <- 0[t]
	push.64*    %r5009
	push.64*    %r5010
	push.64*    %r5011
	push.64*    %r5012
	push.64*    $0
	push.64*    %r5013
	call        luaG_runerror
	br          .L1128

.L1127:
	load.64*    %r5014 <- 0[L]
	symaddr.64* %r5015 <- <anon symbol:0x62d0010ecdc8>
	load.64*    %r5016 <- 0[op]
	load.64*    %r5017 <- 0[t]
	push.64*    %r5014
	push.64*    %r5015
	push.64*    %r5016
	push.64*    %r5017
	call        luaG_runerror
	br          .L1128

.L1128:
	ret


luaG_concaterror:
.L1129:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	load.64*    %r5018 <- 0[p1]
	load.32     %r5019 <- 8[%r5018]
	seteq.32    %r5020 <- %r5019, $4
	br          %r5020, .L1130, .L1132

.L1132:
	load.64*    %r5021 <- 0[p1]
	load.32     %r5022 <- 8[%r5021]
	seteq.32    %r5023 <- %r5022, $3
	br          %r5023, .L1130, .L1131

.L1130:
	load.64*    %r5024 <- 0[p2]
	store.64*   %r5024 -> 0[p1]
	br          .L1131

.L1131:
	load.64*    %r5025 <- 0[L]
	load.64*    %r5026 <- 0[p1]
	symaddr.64* %r5027 <- <anon symbol:0x62d0012ae118>
	push.64*    %r5025
	push.64*    %r5026
	push.64*    %r5027
	call        luaG_typeerror
	br          .L1133

.L1133:
	ret


luaG_aritherror:
.L1134:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	load.64*    %r5028 <- 0[p1]
	symaddr.64* %r5029 <- temp
	push.64*    %r5028
	push.64*    %r5029
	call.64*    %r5030 <- luaV_tonumber
	seteq.32    %r5031 <- %r5030, $0
	br          %r5031, .L1135, .L1136

.L1135:
	load.64*    %r5032 <- 0[p1]
	store.64*   %r5032 -> 0[p2]
	br          .L1136

.L1136:
	load.64*    %r5033 <- 0[L]
	load.64*    %r5034 <- 0[p2]
	symaddr.64* %r5035 <- <anon symbol:0x62d0012ae688>
	push.64*    %r5033
	push.64*    %r5034
	push.64*    %r5035
	call        luaG_typeerror
	br          .L1137

.L1137:
	ret


luaG_ordererror:
.L1138:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	symaddr.64* %r5036 <- luaT_typenames
	load.64*    %r5037 <- 0[p1]
	load.32     %r5038 <- 8[%r5037]
	scast.64    %r5039 <- (32) %r5038
	muls.64     %r5040 <- %r5039, $8
	add.64*     %r5041 <- %r5036, %r5040
	load.64*    %r5042 <- 0[%r5041]
	store.64*   %r5042 -> 0[t1]
	symaddr.64* %r5043 <- luaT_typenames
	load.64*    %r5044 <- 0[p2]
	load.32     %r5045 <- 8[%r5044]
	scast.64    %r5046 <- (32) %r5045
	muls.64     %r5047 <- %r5046, $8
	add.64*     %r5048 <- %r5043, %r5047
	load.64*    %r5049 <- 0[%r5048]
	store.64*   %r5049 -> 0[t2]
	load.64*    %r5050 <- 0[t1]
	load.8      %r5051 <- 2[%r5050]
	scast.32    %r5052 <- (8) %r5051
	load.64*    %r5053 <- 0[t2]
	load.8      %r5054 <- 2[%r5053]
	scast.32    %r5055 <- (8) %r5054
	seteq.32    %r5056 <- %r5052, %r5055
	br          %r5056, .L1139, .L1140

.L1139:
	load.64*    %r5057 <- 0[L]
	symaddr.64* %r5058 <- <anon symbol:0x62d0012af508>
	load.64*    %r5059 <- 0[t1]
	push.64*    %r5057
	push.64*    %r5058
	push.64*    %r5059
	call        luaG_runerror
	br          .L1141

.L1140:
	load.64*    %r5060 <- 0[L]
	symaddr.64* %r5061 <- <anon symbol:0x62d0012af8a8>
	load.64*    %r5062 <- 0[t1]
	load.64*    %r5063 <- 0[t2]
	push.64*    %r5060
	push.64*    %r5061
	push.64*    %r5062
	push.64*    %r5063
	call        luaG_runerror
	br          .L1141

.L1141:
	phisrc.32   %phi175(return) <- $0
	br          .L1142

.L1142:
	phi.32      %r5064 <- %phi175(return)
	ret.32      $0


addinfo:
.L1143:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[msg]
	load.64*    %r5065 <- 0[L]
	load.64*    %r5066 <- 40[%r5065]
	store.64*   %r5066 -> 0[ci]
	load.64*    %r5067 <- 0[ci]
	load.64*    %r5068 <- 8[%r5067]
	load.32     %r5069 <- 8[%r5068]
	seteq.32    %r5070 <- %r5069, $6
	br          %r5070, .L1146, .L1145

.L1146:
	load.64*    %r5071 <- 0[ci]
	load.64*    %r5072 <- 8[%r5071]
	load.64*    %r5073 <- 0[%r5072]
	load.8      %r5074 <- 10[%r5073]
	br          %r5074, .L1145, .L1144

.L1144:
	load.64*    %r5075 <- 0[L]
	load.64*    %r5076 <- 0[ci]
	push.64*    %r5075
	push.64*    %r5076
	call.32     %r5077 <- currentline
	store.32    %r5077 -> 0[line]
	symaddr.64* %r5078 <- buff
	load.64*    %r5079 <- 0[ci]
	push.64*    %r5079
	call.64*    %r5080 <- getluaproto
	load.64*    %r5081 <- 64[%r5080]
	add.64*     %r5082 <- %r5081, $24
	ptrcast.64* %r5083 <- (64) %r5082
	push.64*    %r5078
	push.64*    %r5083
	push.64     $60
	call        luaO_chunkid
	load.64*    %r5084 <- 0[L]
	symaddr.64* %r5085 <- <anon symbol:0x62d0012b0bb0>
	symaddr.64* %r5086 <- buff
	load.32     %r5087 <- 0[line]
	load.64*    %r5088 <- 0[msg]
	push.64*    %r5084
	push.64*    %r5085
	push.64*    %r5086
	push.32     %r5087
	push.64*    %r5088
	call.64*    %r5089 <- luaO_pushfstring
	br          .L1145

.L1145:
	ret


luaG_errormsg:
.L1147:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r5090 <- 0[L]
	load.64     %r5091 <- 176[%r5090]
	setne.32    %r5092 <- %r5091, $0
	br          %r5092, .L1148, .L1149

.L1148:
	load.64*    %r5093 <- 0[L]
	load.64*    %r5094 <- 64[%r5093]
	ptrcast.64* %r5095 <- (64) %r5094
	load.64*    %r5096 <- 0[L]
	load.64     %r5097 <- 176[%r5096]
	add.64*     %r5098 <- %r5095, %r5097
	ptrcast.64* %r5099 <- (64) %r5098
	store.64*   %r5099 -> 0[errfunc]
	load.64*    %r5100 <- 0[errfunc]
	load.32     %r5101 <- 8[%r5100]
	seteq.32    %r5102 <- %r5101, $6
	br          %r5102, .L1151, .L1150

.L1150:
	load.64*    %r5103 <- 0[L]
	push.64*    %r5103
	push.32     $5
	call        luaD_throw
	br          .L1151

.L1151:
	load.64*    %r5104 <- 0[L]
	load.64*    %r5105 <- 16[%r5104]
	sub.64*     %r5106 <- %r5105, $16
	store.64*   %r5106 -> 0[o2]
	load.64*    %r5107 <- 0[L]
	load.64*    %r5108 <- 16[%r5107]
	store.64*   %r5108 -> 0[o1]
	load.64*    %r5109 <- 0[o2]
	load.f64    %r5110 <- 0[%r5109]
	fpcast.f64  %r5111 <- (64) %r5110
	load.64*    %r5112 <- 0[o1]
	store.f64   %r5111 -> 0[%r5112]
	load.64*    %r5113 <- 0[o2]
	load.32     %r5114 <- 8[%r5113]
	scast.32    %r5115 <- (32) %r5114
	load.64*    %r5116 <- 0[o1]
	store.32    %r5115 -> 8[%r5116]
	load.64*    %r5117 <- 0[errfunc]
	store.64*   %r5117 -> 0[o2]
	load.64*    %r5118 <- 0[L]
	load.64*    %r5119 <- 16[%r5118]
	sub.64*     %r5120 <- %r5119, $16
	store.64*   %r5120 -> 0[o1]
	load.64*    %r5121 <- 0[o2]
	load.f64    %r5122 <- 0[%r5121]
	fpcast.f64  %r5123 <- (64) %r5122
	load.64*    %r5124 <- 0[o1]
	store.f64   %r5123 -> 0[%r5124]
	load.64*    %r5125 <- 0[o2]
	load.32     %r5126 <- 8[%r5125]
	scast.32    %r5127 <- (32) %r5126
	load.64*    %r5128 <- 0[o1]
	store.32    %r5127 -> 8[%r5128]
	load.64*    %r5129 <- 0[L]
	load.64*    %r5130 <- 56[%r5129]
	ptrcast.64* %r5131 <- (64) %r5130
	load.64*    %r5132 <- 0[L]
	load.64*    %r5133 <- 16[%r5132]
	ptrcast.64* %r5134 <- (64) %r5133
	sub.64      %r5135 <- %r5131, %r5134
	setle.32    %r5136 <- %r5135, $16
	br          %r5136, .L1152, .L1153

.L1152:
	load.64*    %r5137 <- 0[L]
	push.64*    %r5137
	push.32     $1
	call        luaD_growstack
	br          .L1154

.L1153:
	br          .L1154

.L1154:
	load.64*    %r5138 <- 0[L]
	load.64*    %r5139 <- 16[%r5138]
	add.64*     %r5140 <- %r5139, $16
	store.64*   %r5140 -> 16[%r5138]
	load.64*    %r5141 <- 0[L]
	load.64*    %r5142 <- 0[L]
	load.64*    %r5143 <- 16[%r5142]
	sub.64*     %r5144 <- %r5143, $32
	push.64*    %r5141
	push.64*    %r5144
	push.32     $1
	call        luaD_call
	br          .L1149

.L1149:
	load.64*    %r5145 <- 0[L]
	push.64*    %r5145
	push.32     $2
	call        luaD_throw
	br          .L1155

.L1155:
	ret


luaZ_fill:
.L1156:
	<entry-point>
	store.64*   %arg1 -> 0[z]
	load.64*    %r5146 <- 0[z]
	load.64*    %r5147 <- 32[%r5146]
	store.64*   %r5147 -> 0[L]
	load.64*    %r5148 <- 0[L]
	load.64*    %r5149 <- 0[z]
	load.64*    %r5150 <- 24[%r5149]
	symaddr.64* %r5151 <- size
	push.64*    %r5148
	push.64*    %r5150
	push.64*    %r5151
	load.64*    %r5152 <- 0[z]
	load.64*    %r5153 <- 16[%r5152]
	call.64*    %r5154 <- %r5153
	store.64*   %r5154 -> 0[buff]
	load.64*    %r5155 <- 0[buff]
	seteq.32    %r5156 <- %r5155, $0
	load.64     %r5157 <- 0[size]
	seteq.32    %r5158 <- %r5157, $0
	or-bool.32  %r5159 <- %r5156, %r5158
	br          %r5159, .L1157, .L1158

.L1157:
	phisrc.32   %phi176(return) <- $0xffffffff
	br          .L1159

.L1158:
	load.64     %r5161 <- 0[size]
	sub.64      %r5162 <- %r5161, $1
	load.64*    %r5163 <- 0[z]
	store.64    %r5162 -> 0[%r5163]
	load.64*    %r5164 <- 0[buff]
	load.64*    %r5165 <- 0[z]
	store.64*   %r5164 -> 8[%r5165]
	load.64*    %r5166 <- 0[z]
	load.64*    %r5167 <- 8[%r5166]
	add.64*     %r5168 <- %r5167, $1
	store.64*   %r5168 -> 8[%r5166]
	load.8      %r5169 <- 0[%r5167]
	scast.8     %r5170 <- (8) %r5169
	cast.32     %r5171 <- (8) %r5170
	phisrc.32   %phi177(return) <- %r5171
	br          .L1159

.L1159:
	phi.32      %r5160 <- %phi176(return), %phi177(return)
	ret.32      %r5160


luaZ_init:
.L1160:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[reader]
	store.64*   %arg4 -> 0[data]
	load.64*    %r5172 <- 0[L]
	load.64*    %r5173 <- 0[z]
	store.64*   %r5172 -> 32[%r5173]
	load.64*    %r5174 <- 0[reader]
	load.64*    %r5175 <- 0[z]
	store.64*   %r5174 -> 16[%r5175]
	load.64*    %r5176 <- 0[data]
	load.64*    %r5177 <- 0[z]
	store.64*   %r5176 -> 24[%r5177]
	load.64*    %r5178 <- 0[z]
	store.64    $0 -> 0[%r5178]
	load.64*    %r5179 <- 0[z]
	store.64*   $0 -> 8[%r5179]
	br          .L1161

.L1161:
	ret


luaZ_openspace:
.L1162:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[buff]
	store.64    %arg3 -> 0[n]
	load.64     %r5180 <- 0[n]
	load.64*    %r5181 <- 0[buff]
	load.64     %r5182 <- 16[%r5181]
	seta.32     %r5183 <- %r5180, %r5182
	br          %r5183, .L1163, .L1164

.L1163:
	load.64     %r5184 <- 0[n]
	setb.32     %r5185 <- %r5184, $32
	br          %r5185, .L1165, .L1166

.L1165:
	store.64    $32 -> 0[n]
	br          .L1166

.L1166:
	load.64     %r5186 <- 0[n]
	add.64      %r5187 <- %r5186, $1
	cast.64     %r5188 <- (64) %r5187
	setbe.32    %r5189 <- %r5188, $-3
	br          %r5189, .L1167, .L1168

.L1167:
	load.64*    %r5190 <- 0[L]
	load.64*    %r5191 <- 0[buff]
	load.64*    %r5192 <- 0[%r5191]
	cast.64*    %r5193 <- (64) %r5192
	load.64*    %r5194 <- 0[buff]
	load.64     %r5195 <- 16[%r5194]
	mulu.64     %r5196 <- %r5195, $1
	load.64     %r5197 <- 0[n]
	mulu.64     %r5198 <- %r5197, $1
	push.64*    %r5190
	push.64*    %r5193
	push.64     %r5196
	push.64     %r5198
	call.64*    %r5199 <- luaM_realloc_
	phisrc.64*  %phi178 <- %r5199
	br          .L1169

.L1168:
	load.64*    %r5200 <- 0[L]
	push.64*    %r5200
	call.64*    %r5201 <- luaM_toobig
	cast.64*    %r5202 <- (64) %r5201
	phisrc.64*  %phi179 <- %r5202
	br          .L1169

.L1169:
	phi.64*     %r5203 <- %phi178, %phi179
	ptrcast.64* %r5204 <- (64) %r5203
	load.64*    %r5205 <- 0[buff]
	store.64*   %r5204 -> 0[%r5205]
	load.64     %r5206 <- 0[n]
	load.64*    %r5207 <- 0[buff]
	store.64    %r5206 -> 16[%r5207]
	br          .L1164

.L1164:
	load.64*    %r5208 <- 0[buff]
	load.64*    %r5209 <- 0[%r5208]
	phisrc.64*  %phi180(return) <- %r5209
	br          .L1170

.L1170:
	phi.64*     %r5210 <- %phi180(return)
	ret.64*     %r5209


save:
.L1171:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r5211 <- 0[ls]
	load.64*    %r5212 <- 72[%r5211]
	store.64*   %r5212 -> 0[b]
	load.64*    %r5213 <- 0[b]
	load.64     %r5214 <- 8[%r5213]
	add.64      %r5215 <- %r5214, $1
	load.64*    %r5216 <- 0[b]
	load.64     %r5217 <- 16[%r5216]
	seta.32     %r5218 <- %r5215, %r5217
	br          %r5218, .L1172, .L1173

.L1172:
	load.64*    %r5219 <- 0[b]
	load.64     %r5220 <- 16[%r5219]
	setae.32    %r5221 <- %r5220, $0x7ffffffffffffffe
	br          %r5221, .L1174, .L1175

.L1174:
	load.64*    %r5222 <- 0[ls]
	symaddr.64* %r5223 <- <anon symbol:0x62d0012b3e70>
	push.64*    %r5222
	push.64*    %r5223
	push.32     $0
	call        luaX_lexerror
	br          .L1175

.L1175:
	load.64*    %r5224 <- 0[b]
	load.64     %r5225 <- 16[%r5224]
	mulu.64     %r5226 <- %r5225, $2
	store.64    %r5226 -> 0[newsize]
	load.64     %r5227 <- 0[newsize]
	add.64      %r5228 <- %r5227, $1
	cast.64     %r5229 <- (64) %r5228
	setbe.32    %r5230 <- %r5229, $-3
	br          %r5230, .L1176, .L1177

.L1176:
	load.64*    %r5231 <- 0[ls]
	load.64*    %r5232 <- 56[%r5231]
	load.64*    %r5233 <- 0[b]
	load.64*    %r5234 <- 0[%r5233]
	cast.64*    %r5235 <- (64) %r5234
	load.64*    %r5236 <- 0[b]
	load.64     %r5237 <- 16[%r5236]
	mulu.64     %r5238 <- %r5237, $1
	load.64     %r5239 <- 0[newsize]
	mulu.64     %r5240 <- %r5239, $1
	push.64*    %r5232
	push.64*    %r5235
	push.64     %r5238
	push.64     %r5240
	call.64*    %r5241 <- luaM_realloc_
	phisrc.64*  %phi181 <- %r5241
	br          .L1178

.L1177:
	load.64*    %r5242 <- 0[ls]
	load.64*    %r5243 <- 56[%r5242]
	push.64*    %r5243
	call.64*    %r5244 <- luaM_toobig
	cast.64*    %r5245 <- (64) %r5244
	phisrc.64*  %phi182 <- %r5245
	br          .L1178

.L1178:
	phi.64*     %r5246 <- %phi181, %phi182
	ptrcast.64* %r5247 <- (64) %r5246
	load.64*    %r5248 <- 0[b]
	store.64*   %r5247 -> 0[%r5248]
	load.64     %r5249 <- 0[newsize]
	load.64*    %r5250 <- 0[b]
	store.64    %r5249 -> 16[%r5250]
	br          .L1173

.L1173:
	load.32     %r5251 <- 0[c]
	scast.8     %r5252 <- (32) %r5251
	load.64*    %r5253 <- 0[b]
	load.64*    %r5254 <- 0[%r5253]
	load.64*    %r5255 <- 0[b]
	load.64     %r5256 <- 8[%r5255]
	add.64      %r5257 <- %r5256, $1
	store.64    %r5257 -> 8[%r5255]
	add.64*     %r5258 <- %r5254, %r5256
	store.8     %r5252 -> 0[%r5258]
	br          .L1179

.L1179:
	ret


luaX_init:
.L1180:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    $0 -> 0[i]
	br          .L1184

.L1184:
	load.32     %r5259 <- 0[i]
	setlt.32    %r5260 <- %r5259, $21
	br          %r5260, .L1181, .L1183

.L1181:
	load.64*    %r5261 <- 0[L]
	symaddr.64* %r5262 <- luaX_tokens
	load.32     %r5263 <- 0[i]
	scast.64    %r5264 <- (32) %r5263
	muls.64     %r5265 <- %r5264, $8
	add.64*     %r5266 <- %r5262, %r5265
	load.64*    %r5267 <- 0[%r5266]
	symaddr.64* %r5268 <- luaX_tokens
	load.32     %r5269 <- 0[i]
	scast.64    %r5270 <- (32) %r5269
	muls.64     %r5271 <- %r5270, $8
	add.64*     %r5272 <- %r5268, %r5271
	load.64*    %r5273 <- 0[%r5272]
	push.64*    %r5273
	call.64     %r5274 <- strlen
	push.64*    %r5261
	push.64*    %r5267
	push.64     %r5274
	call.64*    %r5275 <- luaS_newlstr
	store.64*   %r5275 -> 0[ts]
	load.64*    %r5276 <- 0[ts]
	load.8      %r5277 <- 9[%r5276]
	cast.32     %r5278 <- (8) %r5277
	or.32       %r5279 <- %r5278, $32
	scast.8     %r5280 <- (32) %r5279
	store.8     %r5280 -> 9[%r5276]
	load.32     %r5281 <- 0[i]
	add.32      %r5282 <- %r5281, $1
	scast.8     %r5283 <- (32) %r5282
	load.64*    %r5284 <- 0[ts]
	store.8     %r5283 -> 10[%r5284]
	br          .L1182

.L1182:
	load.32     %r5285 <- 0[i]
	add.32      %r5286 <- %r5285, $1
	store.32    %r5286 -> 0[i]
	br          .L1184

.L1183:
	ret


luaX_token2str:
.L1185:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.32     %r5287 <- 0[token]
	setlt.32    %r5288 <- %r5287, $257
	br          %r5288, .L1186, .L1187

.L1186:
	call.64*    %r5289 <- __ctype_b_loc
	load.64*    %r5290 <- 0[%r5289]
	load.32     %r5291 <- 0[token]
	scast.32    %r5292 <- (32) %r5291
	scast.64    %r5293 <- (32) %r5292
	muls.64     %r5294 <- %r5293, $2
	add.64*     %r5295 <- %r5290, %r5294
	load.16     %r5296 <- 0[%r5295]
	cast.32     %r5297 <- (16) %r5296
	and.32      %r5298 <- %r5297, $2
	br          %r5298, .L1189, .L1190

.L1189:
	load.64*    %r5299 <- 0[ls]
	load.64*    %r5300 <- 56[%r5299]
	symaddr.64* %r5301 <- <anon symbol:0x62d0012b78f0>
	load.32     %r5302 <- 0[token]
	push.64*    %r5300
	push.64*    %r5301
	push.32     %r5302
	call.64*    %r5303 <- luaO_pushfstring
	phisrc.64*  %phi183 <- %r5303
	br          .L1191

.L1190:
	load.64*    %r5304 <- 0[ls]
	load.64*    %r5305 <- 56[%r5304]
	symaddr.64* %r5306 <- <anon symbol:0x62d0012b7380>
	load.32     %r5307 <- 0[token]
	push.64*    %r5305
	push.64*    %r5306
	push.32     %r5307
	call.64*    %r5308 <- luaO_pushfstring
	phisrc.64*  %phi184 <- %r5308
	br          .L1191

.L1191:
	phi.64*     %r5309 <- %phi183, %phi184
	phisrc.64*  %phi185(return) <- %r5309
	br          .L1188

.L1187:
	symaddr.64* %r5311 <- luaX_tokens
	load.32     %r5312 <- 0[token]
	sub.32      %r5313 <- %r5312, $257
	scast.64    %r5314 <- (32) %r5313
	muls.64     %r5315 <- %r5314, $8
	add.64*     %r5316 <- %r5311, %r5315
	load.64*    %r5317 <- 0[%r5316]
	phisrc.64*  %phi186(return) <- %r5317
	br          .L1188

.L1188:
	phi.64*     %r5310 <- %phi185(return), %phi186(return)
	ret.64*     %r5310


txtToken:
.L1193:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.32     %r5318 <- 0[token]
	switch.32   %r5318, 284 -> .L1197, 285 -> .L1195, 286 -> .L1196, default -> .L1198

.L1195:
	br          .L1196

.L1196:
	br          .L1197

.L1197:
	load.64*    %r5319 <- 0[ls]
	push.64*    %r5319
	push.32     $0
	call        save
	load.64*    %r5320 <- 0[ls]
	load.64*    %r5321 <- 72[%r5320]
	load.64*    %r5322 <- 0[%r5321]
	phisrc.64*  %phi187(return) <- %r5322
	br          .L1199

.L1198:
	load.64*    %r5324 <- 0[ls]
	load.32     %r5325 <- 0[token]
	push.64*    %r5324
	push.32     %r5325
	call.64*    %r5326 <- luaX_token2str
	phisrc.64*  %phi188(return) <- %r5326
	br          .L1199

.L1199:
	phi.64*     %r5323 <- %phi187(return), %phi188(return)
	ret.64*     %r5323


luaX_lexerror:
.L1200:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[msg]
	store.32    %arg3 -> 0[token]
	symaddr.64* %r5327 <- buff
	load.64*    %r5328 <- 0[ls]
	load.64*    %r5329 <- 80[%r5328]
	add.64*     %r5330 <- %r5329, $24
	ptrcast.64* %r5331 <- (64) %r5330
	push.64*    %r5327
	push.64*    %r5331
	push.64     $80
	call        luaO_chunkid
	load.64*    %r5332 <- 0[ls]
	load.64*    %r5333 <- 56[%r5332]
	symaddr.64* %r5334 <- <anon symbol:0x62d001266c40>
	symaddr.64* %r5335 <- buff
	load.64*    %r5336 <- 0[ls]
	load.32     %r5337 <- 4[%r5336]
	load.64*    %r5338 <- 0[msg]
	push.64*    %r5333
	push.64*    %r5334
	push.64*    %r5335
	push.32     %r5337
	push.64*    %r5338
	call.64*    %r5339 <- luaO_pushfstring
	store.64*   %r5339 -> 0[msg]
	load.32     %r5340 <- 0[token]
	br          %r5340, .L1201, .L1202

.L1201:
	load.64*    %r5341 <- 0[ls]
	load.64*    %r5342 <- 56[%r5341]
	symaddr.64* %r5343 <- <anon symbol:0x62d001267550>
	load.64*    %r5344 <- 0[msg]
	load.64*    %r5345 <- 0[ls]
	load.32     %r5346 <- 0[token]
	push.64*    %r5345
	push.32     %r5346
	call.64*    %r5347 <- txtToken
	push.64*    %r5342
	push.64*    %r5343
	push.64*    %r5344
	push.64*    %r5347
	call.64*    %r5348 <- luaO_pushfstring
	br          .L1202

.L1202:
	load.64*    %r5349 <- 0[ls]
	load.64*    %r5350 <- 56[%r5349]
	push.64*    %r5350
	push.32     $3
	call        luaD_throw
	br          .L1203

.L1203:
	ret


luaX_syntaxerror:
.L1204:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[msg]
	load.64*    %r5351 <- 0[ls]
	load.64*    %r5352 <- 0[msg]
	load.64*    %r5353 <- 0[ls]
	load.32     %r5354 <- 16[%r5353]
	push.64*    %r5351
	push.64*    %r5352
	push.32     %r5354
	call        luaX_lexerror
	br          .L1205

.L1205:
	ret


luaX_newstring:
.L1206:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[str]
	store.64    %arg3 -> 0[l]
	load.64*    %r5355 <- 0[ls]
	load.64*    %r5356 <- 56[%r5355]
	store.64*   %r5356 -> 0[L]
	load.64*    %r5357 <- 0[L]
	load.64*    %r5358 <- 0[str]
	load.64     %r5359 <- 0[l]
	push.64*    %r5357
	push.64*    %r5358
	push.64     %r5359
	call.64*    %r5360 <- luaS_newlstr
	store.64*   %r5360 -> 0[ts]
	load.64*    %r5361 <- 0[L]
	load.64*    %r5362 <- 0[ls]
	load.64*    %r5363 <- 48[%r5362]
	load.64*    %r5364 <- 8[%r5363]
	load.64*    %r5365 <- 0[ts]
	push.64*    %r5361
	push.64*    %r5364
	push.64*    %r5365
	call.64*    %r5366 <- luaH_setstr
	store.64*   %r5366 -> 0[o]
	load.64*    %r5367 <- 0[o]
	load.32     %r5368 <- 8[%r5367]
	seteq.32    %r5369 <- %r5368, $0
	br          %r5369, .L1207, .L1208

.L1207:
	load.64*    %r5370 <- 0[o]
	store.64*   %r5370 -> 0[i_o]
	load.64*    %r5371 <- 0[i_o]
	store.32    $1 -> 0[%r5371]
	load.64*    %r5372 <- 0[i_o]
	store.32    $1 -> 8[%r5372]
	load.64*    %r5373 <- 0[L]
	load.64*    %r5374 <- 32[%r5373]
	load.64     %r5375 <- 120[%r5374]
	load.64*    %r5376 <- 0[L]
	load.64*    %r5377 <- 32[%r5376]
	load.64     %r5378 <- 112[%r5377]
	setae.32    %r5379 <- %r5375, %r5378
	br          %r5379, .L1209, .L1210

.L1209:
	load.64*    %r5380 <- 0[L]
	push.64*    %r5380
	call        luaC_step
	br          .L1210

.L1210:
	br          .L1208

.L1208:
	load.64*    %r5381 <- 0[ts]
	phisrc.64*  %phi189(return) <- %r5381
	br          .L1211

.L1211:
	phi.64*     %r5382 <- %phi189(return)
	ret.64*     %r5381


inclinenumber:
.L1212:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r5383 <- 0[ls]
	load.32     %r5384 <- 0[%r5383]
	store.32    %r5384 -> 0[old]
	load.64*    %r5385 <- 0[ls]
	load.64*    %r5386 <- 64[%r5385]
	load.64     %r5387 <- 0[%r5386]
	sub.64      %r5388 <- %r5387, $1
	store.64    %r5388 -> 0[%r5386]
	seta.32     %r5389 <- %r5387, $0
	br          %r5389, .L1213, .L1214

.L1213:
	load.64*    %r5390 <- 0[ls]
	load.64*    %r5391 <- 64[%r5390]
	load.64*    %r5392 <- 8[%r5391]
	add.64*     %r5393 <- %r5392, $1
	store.64*   %r5393 -> 8[%r5391]
	load.8      %r5394 <- 0[%r5392]
	scast.8     %r5395 <- (8) %r5394
	cast.32     %r5396 <- (8) %r5395
	phisrc.32   %phi190 <- %r5396
	br          .L1215

.L1214:
	load.64*    %r5397 <- 0[ls]
	load.64*    %r5398 <- 64[%r5397]
	push.64*    %r5398
	call.32     %r5399 <- luaZ_fill
	phisrc.32   %phi191 <- %r5399
	br          .L1215

.L1215:
	phi.32      %r5400 <- %phi190, %phi191
	load.64*    %r5401 <- 0[ls]
	store.32    %r5400 -> 0[%r5401]
	load.64*    %r5402 <- 0[ls]
	load.32     %r5403 <- 0[%r5402]
	seteq.32    %r5404 <- %r5403, $10
	br          %r5404, .L1218, .L1219

.L1219:
	load.64*    %r5405 <- 0[ls]
	load.32     %r5406 <- 0[%r5405]
	seteq.32    %r5407 <- %r5406, $13
	br          %r5407, .L1218, .L1217

.L1218:
	load.64*    %r5408 <- 0[ls]
	load.32     %r5409 <- 0[%r5408]
	load.32     %r5410 <- 0[old]
	setne.32    %r5411 <- %r5409, %r5410
	br          %r5411, .L1216, .L1217

.L1216:
	load.64*    %r5412 <- 0[ls]
	load.64*    %r5413 <- 64[%r5412]
	load.64     %r5414 <- 0[%r5413]
	sub.64      %r5415 <- %r5414, $1
	store.64    %r5415 -> 0[%r5413]
	seta.32     %r5416 <- %r5414, $0
	br          %r5416, .L1220, .L1221

.L1220:
	load.64*    %r5417 <- 0[ls]
	load.64*    %r5418 <- 64[%r5417]
	load.64*    %r5419 <- 8[%r5418]
	add.64*     %r5420 <- %r5419, $1
	store.64*   %r5420 -> 8[%r5418]
	load.8      %r5421 <- 0[%r5419]
	scast.8     %r5422 <- (8) %r5421
	cast.32     %r5423 <- (8) %r5422
	phisrc.32   %phi192 <- %r5423
	br          .L1222

.L1221:
	load.64*    %r5424 <- 0[ls]
	load.64*    %r5425 <- 64[%r5424]
	push.64*    %r5425
	call.32     %r5426 <- luaZ_fill
	phisrc.32   %phi193 <- %r5426
	br          .L1222

.L1222:
	phi.32      %r5427 <- %phi192, %phi193
	load.64*    %r5428 <- 0[ls]
	store.32    %r5427 -> 0[%r5428]
	br          .L1217

.L1217:
	load.64*    %r5429 <- 0[ls]
	load.32     %r5430 <- 4[%r5429]
	add.32      %r5431 <- %r5430, $1
	store.32    %r5431 -> 4[%r5429]
	setge.32    %r5432 <- %r5431, $0x7ffffffd
	br          %r5432, .L1223, .L1224

.L1223:
	load.64*    %r5433 <- 0[ls]
	symaddr.64* %r5434 <- <anon symbol:0x62d0012bb2f0>
	push.64*    %r5433
	push.64*    %r5434
	call        luaX_syntaxerror
	br          .L1224

.L1224:
	ret


luaX_setinput:
.L1225:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ls]
	store.64*   %arg3 -> 0[z]
	store.64*   %arg4 -> 0[source]
	load.64*    %r5435 <- 0[ls]
	store.8     $46 -> 88[%r5435]
	load.64*    %r5436 <- 0[L]
	load.64*    %r5437 <- 0[ls]
	store.64*   %r5436 -> 56[%r5437]
	load.64*    %r5438 <- 0[ls]
	store.32    $287 -> 32[%r5438]
	load.64*    %r5439 <- 0[z]
	load.64*    %r5440 <- 0[ls]
	store.64*   %r5439 -> 64[%r5440]
	load.64*    %r5441 <- 0[ls]
	store.64*   $0 -> 48[%r5441]
	load.64*    %r5442 <- 0[ls]
	store.32    $1 -> 4[%r5442]
	load.64*    %r5443 <- 0[ls]
	store.32    $1 -> 8[%r5443]
	load.64*    %r5444 <- 0[source]
	load.64*    %r5445 <- 0[ls]
	store.64*   %r5444 -> 80[%r5445]
	load.64*    %r5446 <- 0[ls]
	load.64*    %r5447 <- 56[%r5446]
	load.64*    %r5448 <- 0[ls]
	load.64*    %r5449 <- 72[%r5448]
	load.64*    %r5450 <- 0[%r5449]
	cast.64*    %r5451 <- (64) %r5450
	load.64*    %r5452 <- 0[ls]
	load.64*    %r5453 <- 72[%r5452]
	load.64     %r5454 <- 16[%r5453]
	mulu.64     %r5455 <- %r5454, $1
	push.64*    %r5447
	push.64*    %r5451
	push.64     %r5455
	push.64     $32
	call.64*    %r5456 <- luaM_realloc_
	ptrcast.64* %r5457 <- (64) %r5456
	load.64*    %r5458 <- 0[ls]
	load.64*    %r5459 <- 72[%r5458]
	store.64*   %r5457 -> 0[%r5459]
	load.64*    %r5460 <- 0[ls]
	load.64*    %r5461 <- 72[%r5460]
	store.64    $32 -> 16[%r5461]
	load.64*    %r5462 <- 0[ls]
	load.64*    %r5463 <- 64[%r5462]
	load.64     %r5464 <- 0[%r5463]
	sub.64      %r5465 <- %r5464, $1
	store.64    %r5465 -> 0[%r5463]
	seta.32     %r5466 <- %r5464, $0
	br          %r5466, .L1226, .L1227

.L1226:
	load.64*    %r5467 <- 0[ls]
	load.64*    %r5468 <- 64[%r5467]
	load.64*    %r5469 <- 8[%r5468]
	add.64*     %r5470 <- %r5469, $1
	store.64*   %r5470 -> 8[%r5468]
	load.8      %r5471 <- 0[%r5469]
	scast.8     %r5472 <- (8) %r5471
	cast.32     %r5473 <- (8) %r5472
	phisrc.32   %phi194 <- %r5473
	br          .L1228

.L1227:
	load.64*    %r5474 <- 0[ls]
	load.64*    %r5475 <- 64[%r5474]
	push.64*    %r5475
	call.32     %r5476 <- luaZ_fill
	phisrc.32   %phi195 <- %r5476
	br          .L1228

.L1228:
	phi.32      %r5477 <- %phi194, %phi195
	load.64*    %r5478 <- 0[ls]
	store.32    %r5477 -> 0[%r5478]
	br          .L1229

.L1229:
	ret


check_next:
.L1230:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[set]
	load.64*    %r5479 <- 0[set]
	load.64*    %r5480 <- 0[ls]
	load.32     %r5481 <- 0[%r5480]
	push.64*    %r5479
	push.32     %r5481
	call.64*    %r5482 <- strchr
	br          %r5482, .L1232, .L1231

.L1231:
	phisrc.32   %phi196(return) <- $0
	br          .L1233

.L1232:
	load.64*    %r5484 <- 0[ls]
	load.64*    %r5485 <- 0[ls]
	load.32     %r5486 <- 0[%r5485]
	push.64*    %r5484
	push.32     %r5486
	call        save
	load.64*    %r5487 <- 0[ls]
	load.64*    %r5488 <- 64[%r5487]
	load.64     %r5489 <- 0[%r5488]
	sub.64      %r5490 <- %r5489, $1
	store.64    %r5490 -> 0[%r5488]
	seta.32     %r5491 <- %r5489, $0
	br          %r5491, .L1234, .L1235

.L1234:
	load.64*    %r5492 <- 0[ls]
	load.64*    %r5493 <- 64[%r5492]
	load.64*    %r5494 <- 8[%r5493]
	add.64*     %r5495 <- %r5494, $1
	store.64*   %r5495 -> 8[%r5493]
	load.8      %r5496 <- 0[%r5494]
	scast.8     %r5497 <- (8) %r5496
	cast.32     %r5498 <- (8) %r5497
	phisrc.32   %phi197 <- %r5498
	br          .L1236

.L1235:
	load.64*    %r5499 <- 0[ls]
	load.64*    %r5500 <- 64[%r5499]
	push.64*    %r5500
	call.32     %r5501 <- luaZ_fill
	phisrc.32   %phi198 <- %r5501
	br          .L1236

.L1236:
	phi.32      %r5502 <- %phi197, %phi198
	load.64*    %r5503 <- 0[ls]
	store.32    %r5502 -> 0[%r5503]
	phisrc.32   %phi199(return) <- $1
	br          .L1233

.L1233:
	phi.32      %r5483 <- %phi196(return), %phi199(return)
	ret.32      %r5483


buffreplace:
.L1237:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.8     %arg2 -> 0[from]
	store.8     %arg3 -> 0[to]
	load.64*    %r5504 <- 0[ls]
	load.64*    %r5505 <- 72[%r5504]
	load.64     %r5506 <- 8[%r5505]
	store.64    %r5506 -> 0[n]
	load.64*    %r5507 <- 0[ls]
	load.64*    %r5508 <- 72[%r5507]
	load.64*    %r5509 <- 0[%r5508]
	store.64*   %r5509 -> 0[p]
	br          .L1241

.L1241:
	load.64     %r5510 <- 0[n]
	sub.64      %r5511 <- %r5510, $1
	store.64    %r5511 -> 0[n]
	br          %r5510, .L1238, .L1240

.L1238:
	load.64*    %r5512 <- 0[p]
	load.64     %r5513 <- 0[n]
	add.64*     %r5514 <- %r5512, %r5513
	load.8      %r5515 <- 0[%r5514]
	scast.32    %r5516 <- (8) %r5515
	load.8      %r5517 <- 0[from]
	scast.32    %r5518 <- (8) %r5517
	seteq.32    %r5519 <- %r5516, %r5518
	br          %r5519, .L1242, .L1243

.L1242:
	load.8      %r5520 <- 0[to]
	load.64*    %r5521 <- 0[p]
	load.64     %r5522 <- 0[n]
	add.64*     %r5523 <- %r5521, %r5522
	store.8     %r5520 -> 0[%r5523]
	br          .L1243

.L1243:
	br          .L1239

.L1239:
	br          .L1241

.L1240:
	ret


read_numeral:
.L1244:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	br          .L1245

.L1245:
	load.64*    %r5524 <- 0[ls]
	load.64*    %r5525 <- 0[ls]
	load.32     %r5526 <- 0[%r5525]
	push.64*    %r5524
	push.32     %r5526
	call        save
	load.64*    %r5527 <- 0[ls]
	load.64*    %r5528 <- 64[%r5527]
	load.64     %r5529 <- 0[%r5528]
	sub.64      %r5530 <- %r5529, $1
	store.64    %r5530 -> 0[%r5528]
	seta.32     %r5531 <- %r5529, $0
	br          %r5531, .L1248, .L1249

.L1248:
	load.64*    %r5532 <- 0[ls]
	load.64*    %r5533 <- 64[%r5532]
	load.64*    %r5534 <- 8[%r5533]
	add.64*     %r5535 <- %r5534, $1
	store.64*   %r5535 -> 8[%r5533]
	load.8      %r5536 <- 0[%r5534]
	scast.8     %r5537 <- (8) %r5536
	cast.32     %r5538 <- (8) %r5537
	phisrc.32   %phi200 <- %r5538
	br          .L1250

.L1249:
	load.64*    %r5539 <- 0[ls]
	load.64*    %r5540 <- 64[%r5539]
	push.64*    %r5540
	call.32     %r5541 <- luaZ_fill
	phisrc.32   %phi201 <- %r5541
	br          .L1250

.L1250:
	phi.32      %r5542 <- %phi200, %phi201
	load.64*    %r5543 <- 0[ls]
	store.32    %r5542 -> 0[%r5543]
	br          .L1246

.L1246:
	call.64*    %r5544 <- __ctype_b_loc
	load.64*    %r5545 <- 0[%r5544]
	load.64*    %r5546 <- 0[ls]
	load.32     %r5547 <- 0[%r5546]
	scast.32    %r5548 <- (32) %r5547
	scast.64    %r5549 <- (32) %r5548
	muls.64     %r5550 <- %r5549, $2
	add.64*     %r5551 <- %r5545, %r5550
	load.16     %r5552 <- 0[%r5551]
	cast.32     %r5553 <- (16) %r5552
	and.32      %r5554 <- %r5553, $0x800
	br          %r5554, .L1245, .L1251

.L1251:
	load.64*    %r5555 <- 0[ls]
	load.32     %r5556 <- 0[%r5555]
	seteq.32    %r5557 <- %r5556, $46
	br          %r5557, .L1245, .L1247

.L1247:
	load.64*    %r5558 <- 0[ls]
	symaddr.64* %r5559 <- <anon symbol:0x62d0012c2940>
	push.64*    %r5558
	push.64*    %r5559
	call.32     %r5560 <- check_next
	br          %r5560, .L1252, .L1253

.L1252:
	load.64*    %r5561 <- 0[ls]
	symaddr.64* %r5562 <- <anon symbol:0x62d0012c2ce0>
	push.64*    %r5561
	push.64*    %r5562
	call.32     %r5563 <- check_next
	br          .L1253

.L1253:
	br          .L1257

.L1257:
	call.64*    %r5564 <- __ctype_b_loc
	load.64*    %r5565 <- 0[%r5564]
	load.64*    %r5566 <- 0[ls]
	load.32     %r5567 <- 0[%r5566]
	scast.32    %r5568 <- (32) %r5567
	scast.64    %r5569 <- (32) %r5568
	muls.64     %r5570 <- %r5569, $2
	add.64*     %r5571 <- %r5565, %r5570
	load.16     %r5572 <- 0[%r5571]
	cast.32     %r5573 <- (16) %r5572
	and.32      %r5574 <- %r5573, $8
	br          %r5574, .L1254, .L1258

.L1258:
	load.64*    %r5575 <- 0[ls]
	load.32     %r5576 <- 0[%r5575]
	seteq.32    %r5577 <- %r5576, $95
	br          %r5577, .L1254, .L1256

.L1254:
	load.64*    %r5578 <- 0[ls]
	load.64*    %r5579 <- 0[ls]
	load.32     %r5580 <- 0[%r5579]
	push.64*    %r5578
	push.32     %r5580
	call        save
	load.64*    %r5581 <- 0[ls]
	load.64*    %r5582 <- 64[%r5581]
	load.64     %r5583 <- 0[%r5582]
	sub.64      %r5584 <- %r5583, $1
	store.64    %r5584 -> 0[%r5582]
	seta.32     %r5585 <- %r5583, $0
	br          %r5585, .L1259, .L1260

.L1259:
	load.64*    %r5586 <- 0[ls]
	load.64*    %r5587 <- 64[%r5586]
	load.64*    %r5588 <- 8[%r5587]
	add.64*     %r5589 <- %r5588, $1
	store.64*   %r5589 -> 8[%r5587]
	load.8      %r5590 <- 0[%r5588]
	scast.8     %r5591 <- (8) %r5590
	cast.32     %r5592 <- (8) %r5591
	phisrc.32   %phi202 <- %r5592
	br          .L1261

.L1260:
	load.64*    %r5593 <- 0[ls]
	load.64*    %r5594 <- 64[%r5593]
	push.64*    %r5594
	call.32     %r5595 <- luaZ_fill
	phisrc.32   %phi203 <- %r5595
	br          .L1261

.L1261:
	phi.32      %r5596 <- %phi202, %phi203
	load.64*    %r5597 <- 0[ls]
	store.32    %r5596 -> 0[%r5597]
	br          .L1255

.L1255:
	br          .L1257

.L1256:
	load.64*    %r5598 <- 0[ls]
	push.64*    %r5598
	push.32     $0
	call        save
	load.64*    %r5599 <- 0[ls]
	load.64*    %r5600 <- 0[ls]
	load.8      %r5601 <- 88[%r5600]
	push.64*    %r5599
	push.8      $46
	push.8      %r5601
	call        buffreplace
	load.64*    %r5602 <- 0[ls]
	load.64*    %r5603 <- 72[%r5602]
	load.64*    %r5604 <- 0[%r5603]
	load.64*    %r5605 <- 0[seminfo]
	add.64*     %r5606 <- %r5605, $0
	push.64*    %r5604
	push.64*    %r5606
	call.32     %r5607 <- luaO_str2d
	br          %r5607, .L1263, .L1262

.L1262:
	load.64*    %r5608 <- 0[ls]
	symaddr.64* %r5609 <- <anon symbol:0x62d0012c4ac8>
	push.64*    %r5608
	push.64*    %r5609
	push.32     $284
	call        luaX_lexerror
	br          .L1263

.L1263:
	ret


skip_sep:
.L1264:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[count]
	load.64*    %r5610 <- 0[ls]
	load.32     %r5611 <- 0[%r5610]
	store.32    %r5611 -> 0[s]
	load.64*    %r5612 <- 0[ls]
	load.64*    %r5613 <- 0[ls]
	load.32     %r5614 <- 0[%r5613]
	push.64*    %r5612
	push.32     %r5614
	call        save
	load.64*    %r5615 <- 0[ls]
	load.64*    %r5616 <- 64[%r5615]
	load.64     %r5617 <- 0[%r5616]
	sub.64      %r5618 <- %r5617, $1
	store.64    %r5618 -> 0[%r5616]
	seta.32     %r5619 <- %r5617, $0
	br          %r5619, .L1265, .L1266

.L1265:
	load.64*    %r5620 <- 0[ls]
	load.64*    %r5621 <- 64[%r5620]
	load.64*    %r5622 <- 8[%r5621]
	add.64*     %r5623 <- %r5622, $1
	store.64*   %r5623 -> 8[%r5621]
	load.8      %r5624 <- 0[%r5622]
	scast.8     %r5625 <- (8) %r5624
	cast.32     %r5626 <- (8) %r5625
	phisrc.32   %phi204 <- %r5626
	br          .L1267

.L1266:
	load.64*    %r5627 <- 0[ls]
	load.64*    %r5628 <- 64[%r5627]
	push.64*    %r5628
	call.32     %r5629 <- luaZ_fill
	phisrc.32   %phi205 <- %r5629
	br          .L1267

.L1267:
	phi.32      %r5630 <- %phi204, %phi205
	load.64*    %r5631 <- 0[ls]
	store.32    %r5630 -> 0[%r5631]
	br          .L1271

.L1271:
	load.64*    %r5632 <- 0[ls]
	load.32     %r5633 <- 0[%r5632]
	seteq.32    %r5634 <- %r5633, $61
	br          %r5634, .L1268, .L1270

.L1268:
	load.64*    %r5635 <- 0[ls]
	load.64*    %r5636 <- 0[ls]
	load.32     %r5637 <- 0[%r5636]
	push.64*    %r5635
	push.32     %r5637
	call        save
	load.64*    %r5638 <- 0[ls]
	load.64*    %r5639 <- 64[%r5638]
	load.64     %r5640 <- 0[%r5639]
	sub.64      %r5641 <- %r5640, $1
	store.64    %r5641 -> 0[%r5639]
	seta.32     %r5642 <- %r5640, $0
	br          %r5642, .L1272, .L1273

.L1272:
	load.64*    %r5643 <- 0[ls]
	load.64*    %r5644 <- 64[%r5643]
	load.64*    %r5645 <- 8[%r5644]
	add.64*     %r5646 <- %r5645, $1
	store.64*   %r5646 -> 8[%r5644]
	load.8      %r5647 <- 0[%r5645]
	scast.8     %r5648 <- (8) %r5647
	cast.32     %r5649 <- (8) %r5648
	phisrc.32   %phi206 <- %r5649
	br          .L1274

.L1273:
	load.64*    %r5650 <- 0[ls]
	load.64*    %r5651 <- 64[%r5650]
	push.64*    %r5651
	call.32     %r5652 <- luaZ_fill
	phisrc.32   %phi207 <- %r5652
	br          .L1274

.L1274:
	phi.32      %r5653 <- %phi206, %phi207
	load.64*    %r5654 <- 0[ls]
	store.32    %r5653 -> 0[%r5654]
	load.32     %r5655 <- 0[count]
	add.32      %r5656 <- %r5655, $1
	store.32    %r5656 -> 0[count]
	br          .L1269

.L1269:
	br          .L1271

.L1270:
	load.32     %r5657 <- 0[count]
	load.32     %r5658 <- 0[count]
	neg.32      %r5659 <- %r5658
	sub.32      %r5660 <- %r5659, $1
	load.64*    %r5661 <- 0[ls]
	load.32     %r5662 <- 0[%r5661]
	load.32     %r5663 <- 0[s]
	seteq.32    %r5664 <- %r5662, %r5663
	select.32   %r5665 <- %r5664, %r5657, %r5660
	phisrc.32   %phi208(return) <- %r5665
	br          .L1275

.L1275:
	phi.32      %r5666 <- %phi208(return)
	ret.32      %r5665


read_long_string:
.L1276:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	store.32    %arg3 -> 0[sep]
	store.32    $0 -> 0[cont]
	load.64*    %r5667 <- 0[ls]
	load.64*    %r5668 <- 0[ls]
	load.32     %r5669 <- 0[%r5668]
	push.64*    %r5667
	push.32     %r5669
	call        save
	load.64*    %r5670 <- 0[ls]
	load.64*    %r5671 <- 64[%r5670]
	load.64     %r5672 <- 0[%r5671]
	sub.64      %r5673 <- %r5672, $1
	store.64    %r5673 -> 0[%r5671]
	seta.32     %r5674 <- %r5672, $0
	br          %r5674, .L1277, .L1278

.L1277:
	load.64*    %r5675 <- 0[ls]
	load.64*    %r5676 <- 64[%r5675]
	load.64*    %r5677 <- 8[%r5676]
	add.64*     %r5678 <- %r5677, $1
	store.64*   %r5678 -> 8[%r5676]
	load.8      %r5679 <- 0[%r5677]
	scast.8     %r5680 <- (8) %r5679
	cast.32     %r5681 <- (8) %r5680
	phisrc.32   %phi209 <- %r5681
	br          .L1279

.L1278:
	load.64*    %r5682 <- 0[ls]
	load.64*    %r5683 <- 64[%r5682]
	push.64*    %r5683
	call.32     %r5684 <- luaZ_fill
	phisrc.32   %phi210 <- %r5684
	br          .L1279

.L1279:
	phi.32      %r5685 <- %phi209, %phi210
	load.64*    %r5686 <- 0[ls]
	store.32    %r5685 -> 0[%r5686]
	load.64*    %r5687 <- 0[ls]
	load.32     %r5688 <- 0[%r5687]
	seteq.32    %r5689 <- %r5688, $10
	br          %r5689, .L1280, .L1282

.L1282:
	load.64*    %r5690 <- 0[ls]
	load.32     %r5691 <- 0[%r5690]
	seteq.32    %r5692 <- %r5691, $13
	br          %r5692, .L1280, .L1281

.L1280:
	load.64*    %r5693 <- 0[ls]
	push.64*    %r5693
	call        inclinenumber
	br          .L1281

.L1281:
	br          .L1286

.L1286:
	br          .L1283

.L1283:
	load.64*    %r5694 <- 0[ls]
	load.32     %r5695 <- 0[%r5694]
	switch.32   %r5695, 10 -> .L1290, 13 -> .L1291, 93 -> .L1289, 4294967295 -> .L1288, default -> .L1292

.L1288:
	load.64*    %r5696 <- 0[ls]
	symaddr.64* %r5697 <- <anon symbol:0x62d0012c82f8>
	symaddr.64* %r5698 <- <anon symbol:0x62d0012c7f58>
	ptrcast.64* %r5699 <- (64) %r5698
	load.64*    %r5700 <- 0[seminfo]
	select.64*  %r5701 <- %r5700, %r5697, %r5699
	push.64*    %r5696
	push.64*    %r5701
	push.32     $287
	call        luaX_lexerror
	br          .L1287

.L1289:
	load.64*    %r5702 <- 0[ls]
	push.64*    %r5702
	call.32     %r5703 <- skip_sep
	load.32     %r5704 <- 0[sep]
	seteq.32    %r5705 <- %r5703, %r5704
	br          %r5705, .L1293, .L1294

.L1293:
	load.64*    %r5706 <- 0[ls]
	load.64*    %r5707 <- 0[ls]
	load.32     %r5708 <- 0[%r5707]
	push.64*    %r5706
	push.32     %r5708
	call        save
	load.64*    %r5709 <- 0[ls]
	load.64*    %r5710 <- 64[%r5709]
	load.64     %r5711 <- 0[%r5710]
	sub.64      %r5712 <- %r5711, $1
	store.64    %r5712 -> 0[%r5710]
	seta.32     %r5713 <- %r5711, $0
	br          %r5713, .L1295, .L1296

.L1295:
	load.64*    %r5714 <- 0[ls]
	load.64*    %r5715 <- 64[%r5714]
	load.64*    %r5716 <- 8[%r5715]
	add.64*     %r5717 <- %r5716, $1
	store.64*   %r5717 -> 8[%r5715]
	load.8      %r5718 <- 0[%r5716]
	scast.8     %r5719 <- (8) %r5718
	cast.32     %r5720 <- (8) %r5719
	phisrc.32   %phi211 <- %r5720
	br          .L1297

.L1296:
	load.64*    %r5721 <- 0[ls]
	load.64*    %r5722 <- 64[%r5721]
	push.64*    %r5722
	call.32     %r5723 <- luaZ_fill
	phisrc.32   %phi212 <- %r5723
	br          .L1297

.L1297:
	phi.32      %r5724 <- %phi211, %phi212
	load.64*    %r5725 <- 0[ls]
	store.32    %r5724 -> 0[%r5725]
	br          .L1298

.L1294:
	br          .L1287

.L1290:
	br          .L1291

.L1291:
	load.64*    %r5726 <- 0[ls]
	push.64*    %r5726
	push.32     $10
	call        save
	load.64*    %r5727 <- 0[ls]
	push.64*    %r5727
	call        inclinenumber
	load.64*    %r5728 <- 0[seminfo]
	br          %r5728, .L1300, .L1299

.L1299:
	load.64*    %r5729 <- 0[ls]
	load.64*    %r5730 <- 72[%r5729]
	store.64    $0 -> 8[%r5730]
	br          .L1300

.L1300:
	br          .L1287

.L1292:
	load.64*    %r5731 <- 0[seminfo]
	br          %r5731, .L1301, .L1302

.L1301:
	load.64*    %r5732 <- 0[ls]
	load.64*    %r5733 <- 0[ls]
	load.32     %r5734 <- 0[%r5733]
	push.64*    %r5732
	push.32     %r5734
	call        save
	load.64*    %r5735 <- 0[ls]
	load.64*    %r5736 <- 64[%r5735]
	load.64     %r5737 <- 0[%r5736]
	sub.64      %r5738 <- %r5737, $1
	store.64    %r5738 -> 0[%r5736]
	seta.32     %r5739 <- %r5737, $0
	br          %r5739, .L1303, .L1304

.L1303:
	load.64*    %r5740 <- 0[ls]
	load.64*    %r5741 <- 64[%r5740]
	load.64*    %r5742 <- 8[%r5741]
	add.64*     %r5743 <- %r5742, $1
	store.64*   %r5743 -> 8[%r5741]
	load.8      %r5744 <- 0[%r5742]
	scast.8     %r5745 <- (8) %r5744
	cast.32     %r5746 <- (8) %r5745
	phisrc.32   %phi213 <- %r5746
	br          .L1305

.L1304:
	load.64*    %r5747 <- 0[ls]
	load.64*    %r5748 <- 64[%r5747]
	push.64*    %r5748
	call.32     %r5749 <- luaZ_fill
	phisrc.32   %phi214 <- %r5749
	br          .L1305

.L1305:
	phi.32      %r5750 <- %phi213, %phi214
	load.64*    %r5751 <- 0[ls]
	store.32    %r5750 -> 0[%r5751]
	br          .L1306

.L1302:
	load.64*    %r5752 <- 0[ls]
	load.64*    %r5753 <- 64[%r5752]
	load.64     %r5754 <- 0[%r5753]
	sub.64      %r5755 <- %r5754, $1
	store.64    %r5755 -> 0[%r5753]
	seta.32     %r5756 <- %r5754, $0
	br          %r5756, .L1307, .L1308

.L1307:
	load.64*    %r5757 <- 0[ls]
	load.64*    %r5758 <- 64[%r5757]
	load.64*    %r5759 <- 8[%r5758]
	add.64*     %r5760 <- %r5759, $1
	store.64*   %r5760 -> 8[%r5758]
	load.8      %r5761 <- 0[%r5759]
	scast.8     %r5762 <- (8) %r5761
	cast.32     %r5763 <- (8) %r5762
	phisrc.32   %phi215 <- %r5763
	br          .L1309

.L1308:
	load.64*    %r5764 <- 0[ls]
	load.64*    %r5765 <- 64[%r5764]
	push.64*    %r5765
	call.32     %r5766 <- luaZ_fill
	phisrc.32   %phi216 <- %r5766
	br          .L1309

.L1309:
	phi.32      %r5767 <- %phi215, %phi216
	load.64*    %r5768 <- 0[ls]
	store.32    %r5767 -> 0[%r5768]
	br          .L1306

.L1306:
	br          .L1287

.L1287:
	br          .L1284

.L1284:
	br          .L1286

.L1298:
	load.64*    %r5769 <- 0[seminfo]
	br          %r5769, .L1310, .L1311

.L1310:
	load.64*    %r5770 <- 0[ls]
	load.64*    %r5771 <- 0[ls]
	load.64*    %r5772 <- 72[%r5771]
	load.64*    %r5773 <- 0[%r5772]
	load.32     %r5774 <- 0[sep]
	add.32      %r5775 <- $2, %r5774
	scast.64    %r5776 <- (32) %r5775
	add.64*     %r5777 <- %r5773, %r5776
	load.64*    %r5778 <- 0[ls]
	load.64*    %r5779 <- 72[%r5778]
	load.64     %r5780 <- 8[%r5779]
	load.32     %r5781 <- 0[sep]
	add.32      %r5782 <- $2, %r5781
	muls.32     %r5783 <- $2, %r5782
	scast.64    %r5784 <- (32) %r5783
	sub.64      %r5785 <- %r5780, %r5784
	push.64*    %r5770
	push.64*    %r5777
	push.64     %r5785
	call.64*    %r5786 <- luaX_newstring
	load.64*    %r5787 <- 0[seminfo]
	store.64*   %r5786 -> 0[%r5787]
	br          .L1311

.L1311:
	ret


read_string:
.L1312:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[del]
	store.64*   %arg3 -> 0[seminfo]
	load.64*    %r5788 <- 0[ls]
	load.64*    %r5789 <- 0[ls]
	load.32     %r5790 <- 0[%r5789]
	push.64*    %r5788
	push.32     %r5790
	call        save
	load.64*    %r5791 <- 0[ls]
	load.64*    %r5792 <- 64[%r5791]
	load.64     %r5793 <- 0[%r5792]
	sub.64      %r5794 <- %r5793, $1
	store.64    %r5794 -> 0[%r5792]
	seta.32     %r5795 <- %r5793, $0
	br          %r5795, .L1313, .L1314

.L1313:
	load.64*    %r5796 <- 0[ls]
	load.64*    %r5797 <- 64[%r5796]
	load.64*    %r5798 <- 8[%r5797]
	add.64*     %r5799 <- %r5798, $1
	store.64*   %r5799 -> 8[%r5797]
	load.8      %r5800 <- 0[%r5798]
	scast.8     %r5801 <- (8) %r5800
	cast.32     %r5802 <- (8) %r5801
	phisrc.32   %phi217 <- %r5802
	br          .L1315

.L1314:
	load.64*    %r5803 <- 0[ls]
	load.64*    %r5804 <- 64[%r5803]
	push.64*    %r5804
	call.32     %r5805 <- luaZ_fill
	phisrc.32   %phi218 <- %r5805
	br          .L1315

.L1315:
	phi.32      %r5806 <- %phi217, %phi218
	load.64*    %r5807 <- 0[ls]
	store.32    %r5806 -> 0[%r5807]
	br          .L1319

.L1319:
	load.64*    %r5808 <- 0[ls]
	load.32     %r5809 <- 0[%r5808]
	load.32     %r5810 <- 0[del]
	setne.32    %r5811 <- %r5809, %r5810
	br          %r5811, .L1316, .L1318

.L1316:
	load.64*    %r5812 <- 0[ls]
	load.32     %r5813 <- 0[%r5812]
	switch.32   %r5813, 10 -> .L1322, 13 -> .L1323, 92 -> .L1324, 4294967295 -> .L1321, default -> .L1325

.L1321:
	load.64*    %r5814 <- 0[ls]
	symaddr.64* %r5815 <- <anon symbol:0x62d0012d8640>
	push.64*    %r5814
	push.64*    %r5815
	push.32     $287
	call        luaX_lexerror
	br          .L1317

.L1322:
	br          .L1323

.L1323:
	load.64*    %r5816 <- 0[ls]
	symaddr.64* %r5817 <- <anon symbol:0x62d0012d89e0>
	push.64*    %r5816
	push.64*    %r5817
	push.32     $286
	call        luaX_lexerror
	br          .L1317

.L1324:
	load.64*    %r5818 <- 0[ls]
	load.64*    %r5819 <- 64[%r5818]
	load.64     %r5820 <- 0[%r5819]
	sub.64      %r5821 <- %r5820, $1
	store.64    %r5821 -> 0[%r5819]
	seta.32     %r5822 <- %r5820, $0
	br          %r5822, .L1326, .L1327

.L1326:
	load.64*    %r5823 <- 0[ls]
	load.64*    %r5824 <- 64[%r5823]
	load.64*    %r5825 <- 8[%r5824]
	add.64*     %r5826 <- %r5825, $1
	store.64*   %r5826 -> 8[%r5824]
	load.8      %r5827 <- 0[%r5825]
	scast.8     %r5828 <- (8) %r5827
	cast.32     %r5829 <- (8) %r5828
	phisrc.32   %phi219 <- %r5829
	br          .L1328

.L1327:
	load.64*    %r5830 <- 0[ls]
	load.64*    %r5831 <- 64[%r5830]
	push.64*    %r5831
	call.32     %r5832 <- luaZ_fill
	phisrc.32   %phi220 <- %r5832
	br          .L1328

.L1328:
	phi.32      %r5833 <- %phi219, %phi220
	load.64*    %r5834 <- 0[ls]
	store.32    %r5833 -> 0[%r5834]
	load.64*    %r5835 <- 0[ls]
	load.32     %r5836 <- 0[%r5835]
	switch.32   %r5836, 10 -> .L1337, 13 -> .L1338, 97 -> .L1330, 98 -> .L1331, 102 -> .L1332, 110 -> .L1333, 114 -> .L1334, 116 -> .L1335, 118 -> .L1336, 4294967295 -> .L1339, default -> .L1340

.L1330:
	store.32    $7 -> 0[c]
	br          .L1329

.L1331:
	store.32    $8 -> 0[c]
	br          .L1329

.L1332:
	store.32    $12 -> 0[c]
	br          .L1329

.L1333:
	store.32    $10 -> 0[c]
	br          .L1329

.L1334:
	store.32    $13 -> 0[c]
	br          .L1329

.L1335:
	store.32    $9 -> 0[c]
	br          .L1329

.L1336:
	store.32    $11 -> 0[c]
	br          .L1329

.L1337:
	br          .L1338

.L1338:
	load.64*    %r5837 <- 0[ls]
	push.64*    %r5837
	push.32     $10
	call        save
	load.64*    %r5838 <- 0[ls]
	push.64*    %r5838
	call        inclinenumber
	br          .L1317

.L1339:
	br          .L1317

.L1340:
	call.64*    %r5839 <- __ctype_b_loc
	load.64*    %r5840 <- 0[%r5839]
	load.64*    %r5841 <- 0[ls]
	load.32     %r5842 <- 0[%r5841]
	scast.32    %r5843 <- (32) %r5842
	scast.64    %r5844 <- (32) %r5843
	muls.64     %r5845 <- %r5844, $2
	add.64*     %r5846 <- %r5840, %r5845
	load.16     %r5847 <- 0[%r5846]
	cast.32     %r5848 <- (16) %r5847
	and.32      %r5849 <- %r5848, $0x800
	br          %r5849, .L1342, .L1341

.L1341:
	load.64*    %r5850 <- 0[ls]
	load.64*    %r5851 <- 0[ls]
	load.32     %r5852 <- 0[%r5851]
	push.64*    %r5850
	push.32     %r5852
	call        save
	load.64*    %r5853 <- 0[ls]
	load.64*    %r5854 <- 64[%r5853]
	load.64     %r5855 <- 0[%r5854]
	sub.64      %r5856 <- %r5855, $1
	store.64    %r5856 -> 0[%r5854]
	seta.32     %r5857 <- %r5855, $0
	br          %r5857, .L1343, .L1344

.L1343:
	load.64*    %r5858 <- 0[ls]
	load.64*    %r5859 <- 64[%r5858]
	load.64*    %r5860 <- 8[%r5859]
	add.64*     %r5861 <- %r5860, $1
	store.64*   %r5861 -> 8[%r5859]
	load.8      %r5862 <- 0[%r5860]
	scast.8     %r5863 <- (8) %r5862
	cast.32     %r5864 <- (8) %r5863
	phisrc.32   %phi221 <- %r5864
	br          .L1345

.L1344:
	load.64*    %r5865 <- 0[ls]
	load.64*    %r5866 <- 64[%r5865]
	push.64*    %r5866
	call.32     %r5867 <- luaZ_fill
	phisrc.32   %phi222 <- %r5867
	br          .L1345

.L1345:
	phi.32      %r5868 <- %phi221, %phi222
	load.64*    %r5869 <- 0[ls]
	store.32    %r5868 -> 0[%r5869]
	br          .L1346

.L1342:
	store.32    $0 -> 0[i]
	store.32    $0 -> 0[c]
	br          .L1347

.L1347:
	load.32     %r5870 <- 0[c]
	muls.32     %r5871 <- $10, %r5870
	load.64*    %r5872 <- 0[ls]
	load.32     %r5873 <- 0[%r5872]
	sub.32      %r5874 <- %r5873, $48
	add.32      %r5875 <- %r5871, %r5874
	store.32    %r5875 -> 0[c]
	load.64*    %r5876 <- 0[ls]
	load.64*    %r5877 <- 64[%r5876]
	load.64     %r5878 <- 0[%r5877]
	sub.64      %r5879 <- %r5878, $1
	store.64    %r5879 -> 0[%r5877]
	seta.32     %r5880 <- %r5878, $0
	br          %r5880, .L1350, .L1351

.L1350:
	load.64*    %r5881 <- 0[ls]
	load.64*    %r5882 <- 64[%r5881]
	load.64*    %r5883 <- 8[%r5882]
	add.64*     %r5884 <- %r5883, $1
	store.64*   %r5884 -> 8[%r5882]
	load.8      %r5885 <- 0[%r5883]
	scast.8     %r5886 <- (8) %r5885
	cast.32     %r5887 <- (8) %r5886
	phisrc.32   %phi223 <- %r5887
	br          .L1352

.L1351:
	load.64*    %r5888 <- 0[ls]
	load.64*    %r5889 <- 64[%r5888]
	push.64*    %r5889
	call.32     %r5890 <- luaZ_fill
	phisrc.32   %phi224 <- %r5890
	br          .L1352

.L1352:
	phi.32      %r5891 <- %phi223, %phi224
	load.64*    %r5892 <- 0[ls]
	store.32    %r5891 -> 0[%r5892]
	br          .L1348

.L1348:
	load.32     %r5893 <- 0[i]
	add.32      %r5894 <- %r5893, $1
	store.32    %r5894 -> 0[i]
	setlt.32    %r5895 <- %r5894, $3
	br          %r5895, .L1353, .L1349

.L1353:
	call.64*    %r5896 <- __ctype_b_loc
	load.64*    %r5897 <- 0[%r5896]
	load.64*    %r5898 <- 0[ls]
	load.32     %r5899 <- 0[%r5898]
	scast.32    %r5900 <- (32) %r5899
	scast.64    %r5901 <- (32) %r5900
	muls.64     %r5902 <- %r5901, $2
	add.64*     %r5903 <- %r5897, %r5902
	load.16     %r5904 <- 0[%r5903]
	cast.32     %r5905 <- (16) %r5904
	and.32      %r5906 <- %r5905, $0x800
	br          %r5906, .L1347, .L1349

.L1349:
	load.32     %r5907 <- 0[c]
	setgt.32    %r5908 <- %r5907, $255
	br          %r5908, .L1354, .L1355

.L1354:
	load.64*    %r5909 <- 0[ls]
	symaddr.64* %r5910 <- <anon symbol:0x62d0012dbad0>
	push.64*    %r5909
	push.64*    %r5910
	push.32     $286
	call        luaX_lexerror
	br          .L1355

.L1355:
	load.64*    %r5911 <- 0[ls]
	load.32     %r5912 <- 0[c]
	push.64*    %r5911
	push.32     %r5912
	call        save
	br          .L1346

.L1346:
	br          .L1317

.L1329:
	load.64*    %r5913 <- 0[ls]
	load.32     %r5914 <- 0[c]
	push.64*    %r5913
	push.32     %r5914
	call        save
	load.64*    %r5915 <- 0[ls]
	load.64*    %r5916 <- 64[%r5915]
	load.64     %r5917 <- 0[%r5916]
	sub.64      %r5918 <- %r5917, $1
	store.64    %r5918 -> 0[%r5916]
	seta.32     %r5919 <- %r5917, $0
	br          %r5919, .L1356, .L1357

.L1356:
	load.64*    %r5920 <- 0[ls]
	load.64*    %r5921 <- 64[%r5920]
	load.64*    %r5922 <- 8[%r5921]
	add.64*     %r5923 <- %r5922, $1
	store.64*   %r5923 -> 8[%r5921]
	load.8      %r5924 <- 0[%r5922]
	scast.8     %r5925 <- (8) %r5924
	cast.32     %r5926 <- (8) %r5925
	phisrc.32   %phi225 <- %r5926
	br          .L1358

.L1357:
	load.64*    %r5927 <- 0[ls]
	load.64*    %r5928 <- 64[%r5927]
	push.64*    %r5928
	call.32     %r5929 <- luaZ_fill
	phisrc.32   %phi226 <- %r5929
	br          .L1358

.L1358:
	phi.32      %r5930 <- %phi225, %phi226
	load.64*    %r5931 <- 0[ls]
	store.32    %r5930 -> 0[%r5931]
	br          .L1317

.L1325:
	load.64*    %r5932 <- 0[ls]
	load.64*    %r5933 <- 0[ls]
	load.32     %r5934 <- 0[%r5933]
	push.64*    %r5932
	push.32     %r5934
	call        save
	load.64*    %r5935 <- 0[ls]
	load.64*    %r5936 <- 64[%r5935]
	load.64     %r5937 <- 0[%r5936]
	sub.64      %r5938 <- %r5937, $1
	store.64    %r5938 -> 0[%r5936]
	seta.32     %r5939 <- %r5937, $0
	br          %r5939, .L1359, .L1360

.L1359:
	load.64*    %r5940 <- 0[ls]
	load.64*    %r5941 <- 64[%r5940]
	load.64*    %r5942 <- 8[%r5941]
	add.64*     %r5943 <- %r5942, $1
	store.64*   %r5943 -> 8[%r5941]
	load.8      %r5944 <- 0[%r5942]
	scast.8     %r5945 <- (8) %r5944
	cast.32     %r5946 <- (8) %r5945
	phisrc.32   %phi227 <- %r5946
	br          .L1361

.L1360:
	load.64*    %r5947 <- 0[ls]
	load.64*    %r5948 <- 64[%r5947]
	push.64*    %r5948
	call.32     %r5949 <- luaZ_fill
	phisrc.32   %phi228 <- %r5949
	br          .L1361

.L1361:
	phi.32      %r5950 <- %phi227, %phi228
	load.64*    %r5951 <- 0[ls]
	store.32    %r5950 -> 0[%r5951]
	br          .L1320

.L1320:
	br          .L1317

.L1317:
	br          .L1319

.L1318:
	load.64*    %r5952 <- 0[ls]
	load.64*    %r5953 <- 0[ls]
	load.32     %r5954 <- 0[%r5953]
	push.64*    %r5952
	push.32     %r5954
	call        save
	load.64*    %r5955 <- 0[ls]
	load.64*    %r5956 <- 64[%r5955]
	load.64     %r5957 <- 0[%r5956]
	sub.64      %r5958 <- %r5957, $1
	store.64    %r5958 -> 0[%r5956]
	seta.32     %r5959 <- %r5957, $0
	br          %r5959, .L1362, .L1363

.L1362:
	load.64*    %r5960 <- 0[ls]
	load.64*    %r5961 <- 64[%r5960]
	load.64*    %r5962 <- 8[%r5961]
	add.64*     %r5963 <- %r5962, $1
	store.64*   %r5963 -> 8[%r5961]
	load.8      %r5964 <- 0[%r5962]
	scast.8     %r5965 <- (8) %r5964
	cast.32     %r5966 <- (8) %r5965
	phisrc.32   %phi229 <- %r5966
	br          .L1364

.L1363:
	load.64*    %r5967 <- 0[ls]
	load.64*    %r5968 <- 64[%r5967]
	push.64*    %r5968
	call.32     %r5969 <- luaZ_fill
	phisrc.32   %phi230 <- %r5969
	br          .L1364

.L1364:
	phi.32      %r5970 <- %phi229, %phi230
	load.64*    %r5971 <- 0[ls]
	store.32    %r5970 -> 0[%r5971]
	load.64*    %r5972 <- 0[ls]
	load.64*    %r5973 <- 0[ls]
	load.64*    %r5974 <- 72[%r5973]
	load.64*    %r5975 <- 0[%r5974]
	add.64*     %r5976 <- %r5975, $1
	load.64*    %r5977 <- 0[ls]
	load.64*    %r5978 <- 72[%r5977]
	load.64     %r5979 <- 8[%r5978]
	sub.64      %r5980 <- %r5979, $2
	push.64*    %r5972
	push.64*    %r5976
	push.64     %r5980
	call.64*    %r5981 <- luaX_newstring
	load.64*    %r5982 <- 0[seminfo]
	store.64*   %r5981 -> 0[%r5982]
	br          .L1365

.L1365:
	ret


llex:
.L1366:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[seminfo]
	load.64*    %r5983 <- 0[ls]
	load.64*    %r5984 <- 72[%r5983]
	store.64    $0 -> 8[%r5984]
	br          .L1370

.L1370:
	br          .L1367

.L1367:
	load.64*    %r5985 <- 0[ls]
	load.32     %r5986 <- 0[%r5985]
	switch.32   %r5986, 10 -> .L1372, 13 -> .L1373, 34 -> .L1380, 39 -> .L1381, 45 -> .L1374, 46 -> .L1382, 60 -> .L1377, 61 -> .L1376, 62 -> .L1378, 91 -> .L1375, 126 -> .L1379, 4294967295 -> .L1383, default -> .L1384

.L1372:
	br          .L1373

.L1373:
	load.64*    %r5987 <- 0[ls]
	push.64*    %r5987
	call        inclinenumber
	br          .L1368

.L1374:
	load.64*    %r5988 <- 0[ls]
	load.64*    %r5989 <- 64[%r5988]
	load.64     %r5990 <- 0[%r5989]
	sub.64      %r5991 <- %r5990, $1
	store.64    %r5991 -> 0[%r5989]
	seta.32     %r5992 <- %r5990, $0
	br          %r5992, .L1385, .L1386

.L1385:
	load.64*    %r5993 <- 0[ls]
	load.64*    %r5994 <- 64[%r5993]
	load.64*    %r5995 <- 8[%r5994]
	add.64*     %r5996 <- %r5995, $1
	store.64*   %r5996 -> 8[%r5994]
	load.8      %r5997 <- 0[%r5995]
	scast.8     %r5998 <- (8) %r5997
	cast.32     %r5999 <- (8) %r5998
	phisrc.32   %phi231 <- %r5999
	br          .L1387

.L1386:
	load.64*    %r6000 <- 0[ls]
	load.64*    %r6001 <- 64[%r6000]
	push.64*    %r6001
	call.32     %r6002 <- luaZ_fill
	phisrc.32   %phi232 <- %r6002
	br          .L1387

.L1387:
	phi.32      %r6003 <- %phi231, %phi232
	load.64*    %r6004 <- 0[ls]
	store.32    %r6003 -> 0[%r6004]
	load.64*    %r6005 <- 0[ls]
	load.32     %r6006 <- 0[%r6005]
	setne.32    %r6007 <- %r6006, $45
	br          %r6007, .L1388, .L1389

.L1388:
	phisrc.32   %phi233(return) <- $45
	br          .L1390

.L1389:
	load.64*    %r6009 <- 0[ls]
	load.64*    %r6010 <- 64[%r6009]
	load.64     %r6011 <- 0[%r6010]
	sub.64      %r6012 <- %r6011, $1
	store.64    %r6012 -> 0[%r6010]
	seta.32     %r6013 <- %r6011, $0
	br          %r6013, .L1391, .L1392

.L1391:
	load.64*    %r6014 <- 0[ls]
	load.64*    %r6015 <- 64[%r6014]
	load.64*    %r6016 <- 8[%r6015]
	add.64*     %r6017 <- %r6016, $1
	store.64*   %r6017 -> 8[%r6015]
	load.8      %r6018 <- 0[%r6016]
	scast.8     %r6019 <- (8) %r6018
	cast.32     %r6020 <- (8) %r6019
	phisrc.32   %phi234 <- %r6020
	br          .L1393

.L1392:
	load.64*    %r6021 <- 0[ls]
	load.64*    %r6022 <- 64[%r6021]
	push.64*    %r6022
	call.32     %r6023 <- luaZ_fill
	phisrc.32   %phi235 <- %r6023
	br          .L1393

.L1393:
	phi.32      %r6024 <- %phi234, %phi235
	load.64*    %r6025 <- 0[ls]
	store.32    %r6024 -> 0[%r6025]
	load.64*    %r6026 <- 0[ls]
	load.32     %r6027 <- 0[%r6026]
	seteq.32    %r6028 <- %r6027, $91
	br          %r6028, .L1394, .L1395

.L1394:
	load.64*    %r6029 <- 0[ls]
	push.64*    %r6029
	call.32     %r6030 <- skip_sep
	store.32    %r6030 -> 0[sep]
	load.64*    %r6031 <- 0[ls]
	load.64*    %r6032 <- 72[%r6031]
	store.64    $0 -> 8[%r6032]
	load.32     %r6033 <- 0[sep]
	setge.32    %r6034 <- %r6033, $0
	br          %r6034, .L1396, .L1397

.L1396:
	load.64*    %r6035 <- 0[ls]
	load.32     %r6036 <- 0[sep]
	push.64*    %r6035
	push.64*    $0
	push.32     %r6036
	call        read_long_string
	load.64*    %r6037 <- 0[ls]
	load.64*    %r6038 <- 72[%r6037]
	store.64    $0 -> 8[%r6038]
	br          .L1368

.L1397:
	br          .L1395

.L1395:
	br          .L1401

.L1401:
	load.64*    %r6039 <- 0[ls]
	load.32     %r6040 <- 0[%r6039]
	seteq.32    %r6041 <- %r6040, $10
	br          %r6041, .L1400, .L1403

.L1403:
	load.64*    %r6042 <- 0[ls]
	load.32     %r6043 <- 0[%r6042]
	seteq.32    %r6044 <- %r6043, $13
	br          %r6044, .L1400, .L1402

.L1402:
	load.64*    %r6045 <- 0[ls]
	load.32     %r6046 <- 0[%r6045]
	setne.32    %r6047 <- %r6046, $0xffffffff
	br          %r6047, .L1398, .L1400

.L1398:
	load.64*    %r6048 <- 0[ls]
	load.64*    %r6049 <- 64[%r6048]
	load.64     %r6050 <- 0[%r6049]
	sub.64      %r6051 <- %r6050, $1
	store.64    %r6051 -> 0[%r6049]
	seta.32     %r6052 <- %r6050, $0
	br          %r6052, .L1404, .L1405

.L1404:
	load.64*    %r6053 <- 0[ls]
	load.64*    %r6054 <- 64[%r6053]
	load.64*    %r6055 <- 8[%r6054]
	add.64*     %r6056 <- %r6055, $1
	store.64*   %r6056 -> 8[%r6054]
	load.8      %r6057 <- 0[%r6055]
	scast.8     %r6058 <- (8) %r6057
	cast.32     %r6059 <- (8) %r6058
	phisrc.32   %phi236 <- %r6059
	br          .L1406

.L1405:
	load.64*    %r6060 <- 0[ls]
	load.64*    %r6061 <- 64[%r6060]
	push.64*    %r6061
	call.32     %r6062 <- luaZ_fill
	phisrc.32   %phi237 <- %r6062
	br          .L1406

.L1406:
	phi.32      %r6063 <- %phi236, %phi237
	load.64*    %r6064 <- 0[ls]
	store.32    %r6063 -> 0[%r6064]
	br          .L1399

.L1399:
	br          .L1401

.L1400:
	br          .L1368

.L1375:
	load.64*    %r6065 <- 0[ls]
	push.64*    %r6065
	call.32     %r6066 <- skip_sep
	store.32    %r6066 -> 0[sep]
	load.32     %r6067 <- 0[sep]
	setge.32    %r6068 <- %r6067, $0
	br          %r6068, .L1407, .L1408

.L1407:
	load.64*    %r6069 <- 0[ls]
	load.64*    %r6070 <- 0[seminfo]
	load.32     %r6071 <- 0[sep]
	push.64*    %r6069
	push.64*    %r6070
	push.32     %r6071
	call        read_long_string
	phisrc.32   %phi238(return) <- $286
	br          .L1390

.L1408:
	load.32     %r6072 <- 0[sep]
	seteq.32    %r6073 <- %r6072, $0xffffffff
	br          %r6073, .L1410, .L1411

.L1410:
	phisrc.32   %phi239(return) <- $91
	br          .L1390

.L1411:
	load.64*    %r6074 <- 0[ls]
	symaddr.64* %r6075 <- <anon symbol:0x62d0012e3eb8>
	push.64*    %r6074
	push.64*    %r6075
	push.32     $286
	call        luaX_lexerror
	br          .L1412

.L1412:
	br          .L1409

.L1409:
	br          .L1376

.L1376:
	load.64*    %r6076 <- 0[ls]
	load.64*    %r6077 <- 64[%r6076]
	load.64     %r6078 <- 0[%r6077]
	sub.64      %r6079 <- %r6078, $1
	store.64    %r6079 -> 0[%r6077]
	seta.32     %r6080 <- %r6078, $0
	br          %r6080, .L1413, .L1414

.L1413:
	load.64*    %r6081 <- 0[ls]
	load.64*    %r6082 <- 64[%r6081]
	load.64*    %r6083 <- 8[%r6082]
	add.64*     %r6084 <- %r6083, $1
	store.64*   %r6084 -> 8[%r6082]
	load.8      %r6085 <- 0[%r6083]
	scast.8     %r6086 <- (8) %r6085
	cast.32     %r6087 <- (8) %r6086
	phisrc.32   %phi240 <- %r6087
	br          .L1415

.L1414:
	load.64*    %r6088 <- 0[ls]
	load.64*    %r6089 <- 64[%r6088]
	push.64*    %r6089
	call.32     %r6090 <- luaZ_fill
	phisrc.32   %phi241 <- %r6090
	br          .L1415

.L1415:
	phi.32      %r6091 <- %phi240, %phi241
	load.64*    %r6092 <- 0[ls]
	store.32    %r6091 -> 0[%r6092]
	load.64*    %r6093 <- 0[ls]
	load.32     %r6094 <- 0[%r6093]
	setne.32    %r6095 <- %r6094, $61
	br          %r6095, .L1416, .L1417

.L1416:
	phisrc.32   %phi242(return) <- $61
	br          .L1390

.L1417:
	load.64*    %r6096 <- 0[ls]
	load.64*    %r6097 <- 64[%r6096]
	load.64     %r6098 <- 0[%r6097]
	sub.64      %r6099 <- %r6098, $1
	store.64    %r6099 -> 0[%r6097]
	seta.32     %r6100 <- %r6098, $0
	br          %r6100, .L1419, .L1420

.L1419:
	load.64*    %r6101 <- 0[ls]
	load.64*    %r6102 <- 64[%r6101]
	load.64*    %r6103 <- 8[%r6102]
	add.64*     %r6104 <- %r6103, $1
	store.64*   %r6104 -> 8[%r6102]
	load.8      %r6105 <- 0[%r6103]
	scast.8     %r6106 <- (8) %r6105
	cast.32     %r6107 <- (8) %r6106
	phisrc.32   %phi243 <- %r6107
	br          .L1421

.L1420:
	load.64*    %r6108 <- 0[ls]
	load.64*    %r6109 <- 64[%r6108]
	push.64*    %r6109
	call.32     %r6110 <- luaZ_fill
	phisrc.32   %phi244 <- %r6110
	br          .L1421

.L1421:
	phi.32      %r6111 <- %phi243, %phi244
	load.64*    %r6112 <- 0[ls]
	store.32    %r6111 -> 0[%r6112]
	phisrc.32   %phi245(return) <- $280
	br          .L1390

.L1377:
	load.64*    %r6113 <- 0[ls]
	load.64*    %r6114 <- 64[%r6113]
	load.64     %r6115 <- 0[%r6114]
	sub.64      %r6116 <- %r6115, $1
	store.64    %r6116 -> 0[%r6114]
	seta.32     %r6117 <- %r6115, $0
	br          %r6117, .L1422, .L1423

.L1422:
	load.64*    %r6118 <- 0[ls]
	load.64*    %r6119 <- 64[%r6118]
	load.64*    %r6120 <- 8[%r6119]
	add.64*     %r6121 <- %r6120, $1
	store.64*   %r6121 -> 8[%r6119]
	load.8      %r6122 <- 0[%r6120]
	scast.8     %r6123 <- (8) %r6122
	cast.32     %r6124 <- (8) %r6123
	phisrc.32   %phi246 <- %r6124
	br          .L1424

.L1423:
	load.64*    %r6125 <- 0[ls]
	load.64*    %r6126 <- 64[%r6125]
	push.64*    %r6126
	call.32     %r6127 <- luaZ_fill
	phisrc.32   %phi247 <- %r6127
	br          .L1424

.L1424:
	phi.32      %r6128 <- %phi246, %phi247
	load.64*    %r6129 <- 0[ls]
	store.32    %r6128 -> 0[%r6129]
	load.64*    %r6130 <- 0[ls]
	load.32     %r6131 <- 0[%r6130]
	setne.32    %r6132 <- %r6131, $61
	br          %r6132, .L1425, .L1426

.L1425:
	phisrc.32   %phi248(return) <- $60
	br          .L1390

.L1426:
	load.64*    %r6133 <- 0[ls]
	load.64*    %r6134 <- 64[%r6133]
	load.64     %r6135 <- 0[%r6134]
	sub.64      %r6136 <- %r6135, $1
	store.64    %r6136 -> 0[%r6134]
	seta.32     %r6137 <- %r6135, $0
	br          %r6137, .L1428, .L1429

.L1428:
	load.64*    %r6138 <- 0[ls]
	load.64*    %r6139 <- 64[%r6138]
	load.64*    %r6140 <- 8[%r6139]
	add.64*     %r6141 <- %r6140, $1
	store.64*   %r6141 -> 8[%r6139]
	load.8      %r6142 <- 0[%r6140]
	scast.8     %r6143 <- (8) %r6142
	cast.32     %r6144 <- (8) %r6143
	phisrc.32   %phi249 <- %r6144
	br          .L1430

.L1429:
	load.64*    %r6145 <- 0[ls]
	load.64*    %r6146 <- 64[%r6145]
	push.64*    %r6146
	call.32     %r6147 <- luaZ_fill
	phisrc.32   %phi250 <- %r6147
	br          .L1430

.L1430:
	phi.32      %r6148 <- %phi249, %phi250
	load.64*    %r6149 <- 0[ls]
	store.32    %r6148 -> 0[%r6149]
	phisrc.32   %phi251(return) <- $282
	br          .L1390

.L1378:
	load.64*    %r6150 <- 0[ls]
	load.64*    %r6151 <- 64[%r6150]
	load.64     %r6152 <- 0[%r6151]
	sub.64      %r6153 <- %r6152, $1
	store.64    %r6153 -> 0[%r6151]
	seta.32     %r6154 <- %r6152, $0
	br          %r6154, .L1431, .L1432

.L1431:
	load.64*    %r6155 <- 0[ls]
	load.64*    %r6156 <- 64[%r6155]
	load.64*    %r6157 <- 8[%r6156]
	add.64*     %r6158 <- %r6157, $1
	store.64*   %r6158 -> 8[%r6156]
	load.8      %r6159 <- 0[%r6157]
	scast.8     %r6160 <- (8) %r6159
	cast.32     %r6161 <- (8) %r6160
	phisrc.32   %phi252 <- %r6161
	br          .L1433

.L1432:
	load.64*    %r6162 <- 0[ls]
	load.64*    %r6163 <- 64[%r6162]
	push.64*    %r6163
	call.32     %r6164 <- luaZ_fill
	phisrc.32   %phi253 <- %r6164
	br          .L1433

.L1433:
	phi.32      %r6165 <- %phi252, %phi253
	load.64*    %r6166 <- 0[ls]
	store.32    %r6165 -> 0[%r6166]
	load.64*    %r6167 <- 0[ls]
	load.32     %r6168 <- 0[%r6167]
	setne.32    %r6169 <- %r6168, $61
	br          %r6169, .L1434, .L1435

.L1434:
	phisrc.32   %phi254(return) <- $62
	br          .L1390

.L1435:
	load.64*    %r6170 <- 0[ls]
	load.64*    %r6171 <- 64[%r6170]
	load.64     %r6172 <- 0[%r6171]
	sub.64      %r6173 <- %r6172, $1
	store.64    %r6173 -> 0[%r6171]
	seta.32     %r6174 <- %r6172, $0
	br          %r6174, .L1437, .L1438

.L1437:
	load.64*    %r6175 <- 0[ls]
	load.64*    %r6176 <- 64[%r6175]
	load.64*    %r6177 <- 8[%r6176]
	add.64*     %r6178 <- %r6177, $1
	store.64*   %r6178 -> 8[%r6176]
	load.8      %r6179 <- 0[%r6177]
	scast.8     %r6180 <- (8) %r6179
	cast.32     %r6181 <- (8) %r6180
	phisrc.32   %phi255 <- %r6181
	br          .L1439

.L1438:
	load.64*    %r6182 <- 0[ls]
	load.64*    %r6183 <- 64[%r6182]
	push.64*    %r6183
	call.32     %r6184 <- luaZ_fill
	phisrc.32   %phi256 <- %r6184
	br          .L1439

.L1439:
	phi.32      %r6185 <- %phi255, %phi256
	load.64*    %r6186 <- 0[ls]
	store.32    %r6185 -> 0[%r6186]
	phisrc.32   %phi257(return) <- $281
	br          .L1390

.L1379:
	load.64*    %r6187 <- 0[ls]
	load.64*    %r6188 <- 64[%r6187]
	load.64     %r6189 <- 0[%r6188]
	sub.64      %r6190 <- %r6189, $1
	store.64    %r6190 -> 0[%r6188]
	seta.32     %r6191 <- %r6189, $0
	br          %r6191, .L1440, .L1441

.L1440:
	load.64*    %r6192 <- 0[ls]
	load.64*    %r6193 <- 64[%r6192]
	load.64*    %r6194 <- 8[%r6193]
	add.64*     %r6195 <- %r6194, $1
	store.64*   %r6195 -> 8[%r6193]
	load.8      %r6196 <- 0[%r6194]
	scast.8     %r6197 <- (8) %r6196
	cast.32     %r6198 <- (8) %r6197
	phisrc.32   %phi258 <- %r6198
	br          .L1442

.L1441:
	load.64*    %r6199 <- 0[ls]
	load.64*    %r6200 <- 64[%r6199]
	push.64*    %r6200
	call.32     %r6201 <- luaZ_fill
	phisrc.32   %phi259 <- %r6201
	br          .L1442

.L1442:
	phi.32      %r6202 <- %phi258, %phi259
	load.64*    %r6203 <- 0[ls]
	store.32    %r6202 -> 0[%r6203]
	load.64*    %r6204 <- 0[ls]
	load.32     %r6205 <- 0[%r6204]
	setne.32    %r6206 <- %r6205, $61
	br          %r6206, .L1443, .L1444

.L1443:
	phisrc.32   %phi260(return) <- $126
	br          .L1390

.L1444:
	load.64*    %r6207 <- 0[ls]
	load.64*    %r6208 <- 64[%r6207]
	load.64     %r6209 <- 0[%r6208]
	sub.64      %r6210 <- %r6209, $1
	store.64    %r6210 -> 0[%r6208]
	seta.32     %r6211 <- %r6209, $0
	br          %r6211, .L1446, .L1447

.L1446:
	load.64*    %r6212 <- 0[ls]
	load.64*    %r6213 <- 64[%r6212]
	load.64*    %r6214 <- 8[%r6213]
	add.64*     %r6215 <- %r6214, $1
	store.64*   %r6215 -> 8[%r6213]
	load.8      %r6216 <- 0[%r6214]
	scast.8     %r6217 <- (8) %r6216
	cast.32     %r6218 <- (8) %r6217
	phisrc.32   %phi261 <- %r6218
	br          .L1448

.L1447:
	load.64*    %r6219 <- 0[ls]
	load.64*    %r6220 <- 64[%r6219]
	push.64*    %r6220
	call.32     %r6221 <- luaZ_fill
	phisrc.32   %phi262 <- %r6221
	br          .L1448

.L1448:
	phi.32      %r6222 <- %phi261, %phi262
	load.64*    %r6223 <- 0[ls]
	store.32    %r6222 -> 0[%r6223]
	phisrc.32   %phi263(return) <- $283
	br          .L1390

.L1380:
	br          .L1381

.L1381:
	load.64*    %r6224 <- 0[ls]
	load.64*    %r6225 <- 0[ls]
	load.32     %r6226 <- 0[%r6225]
	load.64*    %r6227 <- 0[seminfo]
	push.64*    %r6224
	push.32     %r6226
	push.64*    %r6227
	call        read_string
	phisrc.32   %phi264(return) <- $286
	br          .L1390

.L1382:
	load.64*    %r6228 <- 0[ls]
	load.64*    %r6229 <- 0[ls]
	load.32     %r6230 <- 0[%r6229]
	push.64*    %r6228
	push.32     %r6230
	call        save
	load.64*    %r6231 <- 0[ls]
	load.64*    %r6232 <- 64[%r6231]
	load.64     %r6233 <- 0[%r6232]
	sub.64      %r6234 <- %r6233, $1
	store.64    %r6234 -> 0[%r6232]
	seta.32     %r6235 <- %r6233, $0
	br          %r6235, .L1449, .L1450

.L1449:
	load.64*    %r6236 <- 0[ls]
	load.64*    %r6237 <- 64[%r6236]
	load.64*    %r6238 <- 8[%r6237]
	add.64*     %r6239 <- %r6238, $1
	store.64*   %r6239 -> 8[%r6237]
	load.8      %r6240 <- 0[%r6238]
	scast.8     %r6241 <- (8) %r6240
	cast.32     %r6242 <- (8) %r6241
	phisrc.32   %phi265 <- %r6242
	br          .L1451

.L1450:
	load.64*    %r6243 <- 0[ls]
	load.64*    %r6244 <- 64[%r6243]
	push.64*    %r6244
	call.32     %r6245 <- luaZ_fill
	phisrc.32   %phi266 <- %r6245
	br          .L1451

.L1451:
	phi.32      %r6246 <- %phi265, %phi266
	load.64*    %r6247 <- 0[ls]
	store.32    %r6246 -> 0[%r6247]
	load.64*    %r6248 <- 0[ls]
	symaddr.64* %r6249 <- <anon symbol:0x62d001300f50>
	push.64*    %r6248
	push.64*    %r6249
	call.32     %r6250 <- check_next
	br          %r6250, .L1452, .L1453

.L1452:
	load.64*    %r6251 <- 0[ls]
	symaddr.64* %r6252 <- <anon symbol:0x62d0013012f0>
	push.64*    %r6251
	push.64*    %r6252
	call.32     %r6253 <- check_next
	br          %r6253, .L1454, .L1455

.L1454:
	phisrc.32   %phi267(return) <- $279
	br          .L1390

.L1455:
	phisrc.32   %phi268(return) <- $278
	br          .L1390

.L1453:
	call.64*    %r6254 <- __ctype_b_loc
	load.64*    %r6255 <- 0[%r6254]
	load.64*    %r6256 <- 0[ls]
	load.32     %r6257 <- 0[%r6256]
	scast.32    %r6258 <- (32) %r6257
	scast.64    %r6259 <- (32) %r6258
	muls.64     %r6260 <- %r6259, $2
	add.64*     %r6261 <- %r6255, %r6260
	load.16     %r6262 <- 0[%r6261]
	cast.32     %r6263 <- (16) %r6262
	and.32      %r6264 <- %r6263, $0x800
	br          %r6264, .L1459, .L1458

.L1458:
	phisrc.32   %phi269(return) <- $46
	br          .L1390

.L1459:
	load.64*    %r6265 <- 0[ls]
	load.64*    %r6266 <- 0[seminfo]
	push.64*    %r6265
	push.64*    %r6266
	call        read_numeral
	phisrc.32   %phi270(return) <- $284
	br          .L1390

.L1383:
	phisrc.32   %phi271(return) <- $287
	br          .L1390

.L1384:
	call.64*    %r6267 <- __ctype_b_loc
	load.64*    %r6268 <- 0[%r6267]
	load.64*    %r6269 <- 0[ls]
	load.32     %r6270 <- 0[%r6269]
	scast.32    %r6271 <- (32) %r6270
	scast.64    %r6272 <- (32) %r6271
	muls.64     %r6273 <- %r6272, $2
	add.64*     %r6274 <- %r6268, %r6273
	load.16     %r6275 <- 0[%r6274]
	cast.32     %r6276 <- (16) %r6275
	and.32      %r6277 <- %r6276, $0x2000
	br          %r6277, .L1461, .L1462

.L1461:
	load.64*    %r6278 <- 0[ls]
	load.64*    %r6279 <- 64[%r6278]
	load.64     %r6280 <- 0[%r6279]
	sub.64      %r6281 <- %r6280, $1
	store.64    %r6281 -> 0[%r6279]
	seta.32     %r6282 <- %r6280, $0
	br          %r6282, .L1463, .L1464

.L1463:
	load.64*    %r6283 <- 0[ls]
	load.64*    %r6284 <- 64[%r6283]
	load.64*    %r6285 <- 8[%r6284]
	add.64*     %r6286 <- %r6285, $1
	store.64*   %r6286 -> 8[%r6284]
	load.8      %r6287 <- 0[%r6285]
	scast.8     %r6288 <- (8) %r6287
	cast.32     %r6289 <- (8) %r6288
	phisrc.32   %phi272 <- %r6289
	br          .L1465

.L1464:
	load.64*    %r6290 <- 0[ls]
	load.64*    %r6291 <- 64[%r6290]
	push.64*    %r6291
	call.32     %r6292 <- luaZ_fill
	phisrc.32   %phi273 <- %r6292
	br          .L1465

.L1465:
	phi.32      %r6293 <- %phi272, %phi273
	load.64*    %r6294 <- 0[ls]
	store.32    %r6293 -> 0[%r6294]
	br          .L1368

.L1462:
	call.64*    %r6295 <- __ctype_b_loc
	load.64*    %r6296 <- 0[%r6295]
	load.64*    %r6297 <- 0[ls]
	load.32     %r6298 <- 0[%r6297]
	scast.32    %r6299 <- (32) %r6298
	scast.64    %r6300 <- (32) %r6299
	muls.64     %r6301 <- %r6300, $2
	add.64*     %r6302 <- %r6296, %r6301
	load.16     %r6303 <- 0[%r6302]
	cast.32     %r6304 <- (16) %r6303
	and.32      %r6305 <- %r6304, $0x800
	br          %r6305, .L1467, .L1468

.L1467:
	load.64*    %r6306 <- 0[ls]
	load.64*    %r6307 <- 0[seminfo]
	push.64*    %r6306
	push.64*    %r6307
	call        read_numeral
	phisrc.32   %phi274(return) <- $284
	br          .L1390

.L1468:
	call.64*    %r6308 <- __ctype_b_loc
	load.64*    %r6309 <- 0[%r6308]
	load.64*    %r6310 <- 0[ls]
	load.32     %r6311 <- 0[%r6310]
	scast.32    %r6312 <- (32) %r6311
	scast.64    %r6313 <- (32) %r6312
	muls.64     %r6314 <- %r6313, $2
	add.64*     %r6315 <- %r6309, %r6314
	load.16     %r6316 <- 0[%r6315]
	cast.32     %r6317 <- (16) %r6316
	and.32      %r6318 <- %r6317, $0x400
	br          %r6318, .L1470, .L1472

.L1472:
	load.64*    %r6319 <- 0[ls]
	load.32     %r6320 <- 0[%r6319]
	seteq.32    %r6321 <- %r6320, $95
	br          %r6321, .L1470, .L1471

.L1470:
	br          .L1473

.L1473:
	load.64*    %r6322 <- 0[ls]
	load.64*    %r6323 <- 0[ls]
	load.32     %r6324 <- 0[%r6323]
	push.64*    %r6322
	push.32     %r6324
	call        save
	load.64*    %r6325 <- 0[ls]
	load.64*    %r6326 <- 64[%r6325]
	load.64     %r6327 <- 0[%r6326]
	sub.64      %r6328 <- %r6327, $1
	store.64    %r6328 -> 0[%r6326]
	seta.32     %r6329 <- %r6327, $0
	br          %r6329, .L1476, .L1477

.L1476:
	load.64*    %r6330 <- 0[ls]
	load.64*    %r6331 <- 64[%r6330]
	load.64*    %r6332 <- 8[%r6331]
	add.64*     %r6333 <- %r6332, $1
	store.64*   %r6333 -> 8[%r6331]
	load.8      %r6334 <- 0[%r6332]
	scast.8     %r6335 <- (8) %r6334
	cast.32     %r6336 <- (8) %r6335
	phisrc.32   %phi275 <- %r6336
	br          .L1478

.L1477:
	load.64*    %r6337 <- 0[ls]
	load.64*    %r6338 <- 64[%r6337]
	push.64*    %r6338
	call.32     %r6339 <- luaZ_fill
	phisrc.32   %phi276 <- %r6339
	br          .L1478

.L1478:
	phi.32      %r6340 <- %phi275, %phi276
	load.64*    %r6341 <- 0[ls]
	store.32    %r6340 -> 0[%r6341]
	br          .L1474

.L1474:
	call.64*    %r6342 <- __ctype_b_loc
	load.64*    %r6343 <- 0[%r6342]
	load.64*    %r6344 <- 0[ls]
	load.32     %r6345 <- 0[%r6344]
	scast.32    %r6346 <- (32) %r6345
	scast.64    %r6347 <- (32) %r6346
	muls.64     %r6348 <- %r6347, $2
	add.64*     %r6349 <- %r6343, %r6348
	load.16     %r6350 <- 0[%r6349]
	cast.32     %r6351 <- (16) %r6350
	and.32      %r6352 <- %r6351, $8
	br          %r6352, .L1473, .L1479

.L1479:
	load.64*    %r6353 <- 0[ls]
	load.32     %r6354 <- 0[%r6353]
	seteq.32    %r6355 <- %r6354, $95
	br          %r6355, .L1473, .L1475

.L1475:
	load.64*    %r6356 <- 0[ls]
	load.64*    %r6357 <- 0[ls]
	load.64*    %r6358 <- 72[%r6357]
	load.64*    %r6359 <- 0[%r6358]
	load.64*    %r6360 <- 0[ls]
	load.64*    %r6361 <- 72[%r6360]
	load.64     %r6362 <- 8[%r6361]
	push.64*    %r6356
	push.64*    %r6359
	push.64     %r6362
	call.64*    %r6363 <- luaX_newstring
	store.64*   %r6363 -> 0[ts]
	load.64*    %r6364 <- 0[ts]
	load.8      %r6365 <- 10[%r6364]
	cast.32     %r6366 <- (8) %r6365
	setgt.32    %r6367 <- %r6366, $0
	br          %r6367, .L1480, .L1481

.L1480:
	load.64*    %r6368 <- 0[ts]
	load.8      %r6369 <- 10[%r6368]
	cast.32     %r6370 <- (8) %r6369
	sub.32      %r6371 <- %r6370, $1
	add.32      %r6372 <- %r6371, $257
	phisrc.32   %phi277(return) <- %r6372
	br          .L1390

.L1481:
	load.64*    %r6373 <- 0[ts]
	load.64*    %r6374 <- 0[seminfo]
	store.64*   %r6373 -> 0[%r6374]
	phisrc.32   %phi278(return) <- $285
	br          .L1390

.L1471:
	load.64*    %r6375 <- 0[ls]
	load.32     %r6376 <- 0[%r6375]
	store.32    %r6376 -> 0[c]
	load.64*    %r6377 <- 0[ls]
	load.64*    %r6378 <- 64[%r6377]
	load.64     %r6379 <- 0[%r6378]
	sub.64      %r6380 <- %r6379, $1
	store.64    %r6380 -> 0[%r6378]
	seta.32     %r6381 <- %r6379, $0
	br          %r6381, .L1484, .L1485

.L1484:
	load.64*    %r6382 <- 0[ls]
	load.64*    %r6383 <- 64[%r6382]
	load.64*    %r6384 <- 8[%r6383]
	add.64*     %r6385 <- %r6384, $1
	store.64*   %r6385 -> 8[%r6383]
	load.8      %r6386 <- 0[%r6384]
	scast.8     %r6387 <- (8) %r6386
	cast.32     %r6388 <- (8) %r6387
	phisrc.32   %phi279 <- %r6388
	br          .L1486

.L1485:
	load.64*    %r6389 <- 0[ls]
	load.64*    %r6390 <- 64[%r6389]
	push.64*    %r6390
	call.32     %r6391 <- luaZ_fill
	phisrc.32   %phi280 <- %r6391
	br          .L1486

.L1486:
	phi.32      %r6392 <- %phi279, %phi280
	load.64*    %r6393 <- 0[ls]
	store.32    %r6392 -> 0[%r6393]
	load.32     %r6394 <- 0[c]
	phisrc.32   %phi281(return) <- %r6394
	br          .L1390

.L1368:
	br          .L1370

.L1390:
	phi.32      %r6008 <- %phi233(return), %phi238(return), %phi239(return), %phi242(return), %phi245(return), %phi248(return), %phi251(return), %phi254(return), %phi257(return), %phi260(return), %phi263(return), %phi264(return), %phi267(return), %phi268(return), %phi269(return), %phi270(return), %phi271(return), %phi274(return), %phi277(return), %phi278(return), %phi281(return)
	ret.32      %r6008


luaX_next:
.L1487:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r6395 <- 0[ls]
	load.32     %r6396 <- 4[%r6395]
	load.64*    %r6397 <- 0[ls]
	store.32    %r6396 -> 8[%r6397]
	load.64*    %r6398 <- 0[ls]
	load.32     %r6399 <- 32[%r6398]
	setne.32    %r6400 <- %r6399, $287
	br          %r6400, .L1488, .L1489

.L1488:
	load.64*    %r6401 <- 0[ls]
	add.64*     %r6402 <- %r6401, $16
	cast.64*    %r6403 <- (64) %r6402
	load.64*    %r6404 <- 0[ls]
	add.64*     %r6405 <- %r6404, $32
	cast.64*    %r6406 <- (64) %r6405
	push.64*    %r6403
	push.64*    %r6406
	push.64     $16
	call.64*    %r6407 <- memcpy
	load.64*    %r6408 <- 0[ls]
	store.32    $287 -> 32[%r6408]
	br          .L1490

.L1489:
	load.64*    %r6409 <- 0[ls]
	load.64*    %r6410 <- 0[ls]
	add.64*     %r6411 <- %r6410, $16
	add.64*     %r6412 <- %r6411, $8
	push.64*    %r6409
	push.64*    %r6412
	call.32     %r6413 <- llex
	load.64*    %r6414 <- 0[ls]
	store.32    %r6413 -> 16[%r6414]
	br          .L1490

.L1490:
	ret


luaX_lookahead:
.L1491:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r6415 <- 0[ls]
	load.64*    %r6416 <- 0[ls]
	add.64*     %r6417 <- %r6416, $32
	add.64*     %r6418 <- %r6417, $8
	push.64*    %r6415
	push.64*    %r6418
	call.32     %r6419 <- llex
	load.64*    %r6420 <- 0[ls]
	store.32    %r6419 -> 32[%r6420]
	br          .L1492

.L1492:
	ret


isnumeral:
.L1493:
	<entry-point>
	store.64*   %arg1 -> 0[e]
	load.64*    %r6421 <- 0[e]
	load.32     %r6422 <- 0[%r6421]
	scast.32    %r6423 <- (32) %r6422
	seteq.32    %r6424 <- %r6423, $5
	br          %r6424, .L1498, .L1496

.L1498:
	load.64*    %r6425 <- 0[e]
	load.32     %r6426 <- 16[%r6425]
	seteq.32    %r6427 <- %r6426, $0xffffffff
	br          %r6427, .L1495, .L1496

.L1495:
	load.64*    %r6428 <- 0[e]
	load.32     %r6429 <- 20[%r6428]
	seteq.32    %r6430 <- %r6429, $0xffffffff
	phisrc.32   %phi282 <- %r6430
	br          .L1497

.L1496:
	phisrc.32   %phi283 <- $0
	br          .L1497

.L1497:
	phi.32      %r6431 <- %phi282, %phi283
	phisrc.32   %phi284(return) <- %r6431
	br          .L1494

.L1494:
	phi.32      %r6432 <- %phi284(return)
	ret.32      %r6431


luaK_nil:
.L1499:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[from]
	store.32    %arg3 -> 0[n]
	load.64*    %r6433 <- 0[fs]
	load.32     %r6434 <- 48[%r6433]
	load.64*    %r6435 <- 0[fs]
	load.32     %r6436 <- 52[%r6435]
	setgt.32    %r6437 <- %r6434, %r6436
	br          %r6437, .L1500, .L1501

.L1500:
	load.64*    %r6438 <- 0[fs]
	load.32     %r6439 <- 48[%r6438]
	seteq.32    %r6440 <- %r6439, $0
	br          %r6440, .L1502, .L1503

.L1502:
	load.32     %r6441 <- 0[from]
	load.64*    %r6442 <- 0[fs]
	load.8      %r6443 <- 74[%r6442]
	cast.32     %r6444 <- (8) %r6443
	setge.32    %r6445 <- %r6441, %r6444
	br          %r6445, .L1504, .L1505

.L1504:
	br          .L1506

.L1505:
	br          .L1507

.L1503:
	load.64*    %r6446 <- 0[fs]
	load.64*    %r6447 <- 0[%r6446]
	load.64*    %r6448 <- 24[%r6447]
	load.64*    %r6449 <- 0[fs]
	load.32     %r6450 <- 48[%r6449]
	sub.32      %r6451 <- %r6450, $1
	scast.64    %r6452 <- (32) %r6451
	muls.64     %r6453 <- %r6452, $4
	add.64*     %r6454 <- %r6448, %r6453
	store.64*   %r6454 -> 0[previous]
	load.64*    %r6455 <- 0[previous]
	load.32     %r6456 <- 0[%r6455]
	lsr.32      %r6457 <- %r6456, $0
	and.32      %r6458 <- %r6457, $63
	cast.32     %r6459 <- (32) %r6458
	scast.32    %r6460 <- (32) %r6459
	seteq.32    %r6461 <- %r6460, $3
	br          %r6461, .L1508, .L1509

.L1508:
	load.64*    %r6462 <- 0[previous]
	load.32     %r6463 <- 0[%r6462]
	lsr.32      %r6464 <- %r6463, $6
	and.32      %r6465 <- %r6464, $255
	cast.32     %r6466 <- (32) %r6465
	store.32    %r6466 -> 0[pfrom]
	load.64*    %r6467 <- 0[previous]
	load.32     %r6468 <- 0[%r6467]
	lsr.32      %r6469 <- %r6468, $23
	and.32      %r6470 <- %r6469, $511
	cast.32     %r6471 <- (32) %r6470
	store.32    %r6471 -> 0[pto]
	load.32     %r6472 <- 0[pfrom]
	load.32     %r6473 <- 0[from]
	setle.32    %r6474 <- %r6472, %r6473
	load.32     %r6475 <- 0[from]
	load.32     %r6476 <- 0[pto]
	add.32      %r6477 <- %r6476, $1
	setle.32    %r6478 <- %r6475, %r6477
	and-bool.32 %r6479 <- %r6474, %r6478
	br          %r6479, .L1510, .L1511

.L1510:
	load.32     %r6480 <- 0[from]
	load.32     %r6481 <- 0[n]
	add.32      %r6482 <- %r6480, %r6481
	sub.32      %r6483 <- %r6482, $1
	load.32     %r6484 <- 0[pto]
	setgt.32    %r6485 <- %r6483, %r6484
	br          %r6485, .L1512, .L1513

.L1512:
	load.64*    %r6486 <- 0[previous]
	load.32     %r6487 <- 0[%r6486]
	and.32      %r6488 <- %r6487, $0x7fffff
	load.32     %r6489 <- 0[from]
	load.32     %r6490 <- 0[n]
	add.32      %r6491 <- %r6489, %r6490
	sub.32      %r6492 <- %r6491, $1
	scast.32    %r6493 <- (32) %r6492
	shl.32      %r6494 <- %r6493, $23
	and.32      %r6495 <- %r6494, $0xff800000
	or.32       %r6496 <- %r6488, %r6495
	load.64*    %r6497 <- 0[previous]
	store.32    %r6496 -> 0[%r6497]
	br          .L1513

.L1513:
	br          .L1506

.L1511:
	br          .L1509

.L1509:
	br          .L1507

.L1507:
	br          .L1501

.L1501:
	load.64*    %r6498 <- 0[fs]
	load.32     %r6499 <- 0[from]
	load.32     %r6500 <- 0[from]
	load.32     %r6501 <- 0[n]
	add.32      %r6502 <- %r6500, %r6501
	sub.32      %r6503 <- %r6502, $1
	push.64*    %r6498
	push.32     $3
	push.32     %r6499
	push.32     %r6503
	push.32     $0
	call.32     %r6504 <- luaK_codeABC
	br          .L1506

.L1506:
	ret


luaK_jump:
.L1514:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6505 <- 0[fs]
	load.32     %r6506 <- 56[%r6505]
	store.32    %r6506 -> 0[jpc]
	load.64*    %r6507 <- 0[fs]
	store.32    $0xffffffff -> 56[%r6507]
	load.64*    %r6508 <- 0[fs]
	push.64*    %r6508
	push.32     $22
	push.32     $0
	push.32     $0x1fffe
	call.32     %r6509 <- luaK_codeABx
	store.32    %r6509 -> 0[j]
	load.64*    %r6510 <- 0[fs]
	symaddr.64* %r6511 <- j
	load.32     %r6512 <- 0[jpc]
	push.64*    %r6510
	push.64*    %r6511
	push.32     %r6512
	call        luaK_concat
	load.32     %r6513 <- 0[j]
	phisrc.32   %phi285(return) <- %r6513
	br          .L1515

.L1515:
	phi.32      %r6514 <- %phi285(return)
	ret.32      %r6513


luaK_ret:
.L1516:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[first]
	store.32    %arg3 -> 0[nret]
	load.64*    %r6515 <- 0[fs]
	load.32     %r6516 <- 0[first]
	load.32     %r6517 <- 0[nret]
	add.32      %r6518 <- %r6517, $1
	push.64*    %r6515
	push.32     $30
	push.32     %r6516
	push.32     %r6518
	push.32     $0
	call.32     %r6519 <- luaK_codeABC
	br          .L1517

.L1517:
	ret


condjump:
.L1518:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.32    %arg3 -> 0[A]
	store.32    %arg4 -> 0[B]
	store.32    %arg5 -> 0[C]
	load.64*    %r6520 <- 0[fs]
	load.32     %r6521 <- 0[op]
	load.32     %r6522 <- 0[A]
	load.32     %r6523 <- 0[B]
	load.32     %r6524 <- 0[C]
	push.64*    %r6520
	push.32     %r6521
	push.32     %r6522
	push.32     %r6523
	push.32     %r6524
	call.32     %r6525 <- luaK_codeABC
	load.64*    %r6526 <- 0[fs]
	push.64*    %r6526
	call.32     %r6527 <- luaK_jump
	phisrc.32   %phi286(return) <- %r6527
	br          .L1519

.L1519:
	phi.32      %r6528 <- %phi286(return)
	ret.32      %r6527


fixjump:
.L1520:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	store.32    %arg3 -> 0[dest]
	load.64*    %r6529 <- 0[fs]
	load.64*    %r6530 <- 0[%r6529]
	load.64*    %r6531 <- 24[%r6530]
	load.32     %r6532 <- 0[pc]
	scast.64    %r6533 <- (32) %r6532
	muls.64     %r6534 <- %r6533, $4
	add.64*     %r6535 <- %r6531, %r6534
	store.64*   %r6535 -> 0[jmp]
	load.32     %r6536 <- 0[dest]
	load.32     %r6537 <- 0[pc]
	add.32      %r6538 <- %r6537, $1
	sub.32      %r6539 <- %r6536, %r6538
	store.32    %r6539 -> 0[offset]
	load.32     %r6540 <- 0[offset]
	push.32     %r6540
	call.32     %r6541 <- abs
	setgt.32    %r6542 <- %r6541, $0x1ffff
	br          %r6542, .L1521, .L1522

.L1521:
	load.64*    %r6543 <- 0[fs]
	load.64*    %r6544 <- 24[%r6543]
	symaddr.64* %r6545 <- <anon symbol:0x62d00130b4c0>
	push.64*    %r6544
	push.64*    %r6545
	call        luaX_syntaxerror
	br          .L1522

.L1522:
	load.64*    %r6546 <- 0[jmp]
	load.32     %r6547 <- 0[%r6546]
	and.32      %r6548 <- %r6547, $0x3fff
	load.32     %r6549 <- 0[offset]
	add.32      %r6550 <- %r6549, $0x1ffff
	scast.32    %r6551 <- (32) %r6550
	cast.32     %r6552 <- (32) %r6551
	shl.32      %r6553 <- %r6552, $14
	and.32      %r6554 <- %r6553, $0xffffc000
	or.32       %r6555 <- %r6548, %r6554
	load.64*    %r6556 <- 0[jmp]
	store.32    %r6555 -> 0[%r6556]
	br          .L1523

.L1523:
	ret


luaK_getlabel:
.L1524:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6557 <- 0[fs]
	load.32     %r6558 <- 48[%r6557]
	load.64*    %r6559 <- 0[fs]
	store.32    %r6558 -> 52[%r6559]
	load.64*    %r6560 <- 0[fs]
	load.32     %r6561 <- 48[%r6560]
	phisrc.32   %phi287(return) <- %r6561
	br          .L1525

.L1525:
	phi.32      %r6562 <- %phi287(return)
	ret.32      %r6561


getjump:
.L1526:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	load.64*    %r6563 <- 0[fs]
	load.64*    %r6564 <- 0[%r6563]
	load.64*    %r6565 <- 24[%r6564]
	load.32     %r6566 <- 0[pc]
	scast.64    %r6567 <- (32) %r6566
	muls.64     %r6568 <- %r6567, $4
	add.64*     %r6569 <- %r6565, %r6568
	load.32     %r6570 <- 0[%r6569]
	lsr.32      %r6571 <- %r6570, $14
	and.32      %r6572 <- %r6571, $0x3ffff
	cast.32     %r6573 <- (32) %r6572
	sub.32      %r6574 <- %r6573, $0x1ffff
	store.32    %r6574 -> 0[offset]
	load.32     %r6575 <- 0[offset]
	seteq.32    %r6576 <- %r6575, $0xffffffff
	br          %r6576, .L1527, .L1528

.L1527:
	phisrc.32   %phi288(return) <- $0xffffffff
	br          .L1529

.L1528:
	load.32     %r6578 <- 0[pc]
	add.32      %r6579 <- %r6578, $1
	load.32     %r6580 <- 0[offset]
	add.32      %r6581 <- %r6579, %r6580
	phisrc.32   %phi289(return) <- %r6581
	br          .L1529

.L1529:
	phi.32      %r6577 <- %phi288(return), %phi289(return)
	ret.32      %r6577


getjumpcontrol:
.L1531:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[pc]
	load.64*    %r6582 <- 0[fs]
	load.64*    %r6583 <- 0[%r6582]
	load.64*    %r6584 <- 24[%r6583]
	load.32     %r6585 <- 0[pc]
	scast.64    %r6586 <- (32) %r6585
	muls.64     %r6587 <- %r6586, $4
	add.64*     %r6588 <- %r6584, %r6587
	store.64*   %r6588 -> 0[pi]
	load.32     %r6589 <- 0[pc]
	setge.32    %r6590 <- %r6589, $1
	br          %r6590, .L1534, .L1533

.L1534:
	symaddr.64* %r6591 <- luaP_opmodes
	load.64*    %r6592 <- 0[pi]
	sub.64*     %r6593 <- %r6592, $4
	load.32     %r6594 <- 0[%r6593]
	lsr.32      %r6595 <- %r6594, $0
	and.32      %r6596 <- %r6595, $63
	cast.32     %r6597 <- (32) %r6596
	scast.64    %r6598 <- (32) %r6597
	add.64*     %r6599 <- %r6591, %r6598
	load.8      %r6600 <- 0[%r6599]
	cast.32     %r6601 <- (8) %r6600
	and.32      %r6602 <- %r6601, $128
	br          %r6602, .L1532, .L1533

.L1532:
	load.64*    %r6603 <- 0[pi]
	sub.64*     %r6604 <- %r6603, $4
	phisrc.64*  %phi290(return) <- %r6604
	br          .L1535

.L1533:
	load.64*    %r6606 <- 0[pi]
	phisrc.64*  %phi291(return) <- %r6606
	br          .L1535

.L1535:
	phi.64*     %r6605 <- %phi290(return), %phi291(return)
	ret.64*     %r6605


need_value:
.L1537:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	br          .L1541

.L1541:
	load.32     %r6607 <- 0[list]
	setne.32    %r6608 <- %r6607, $0xffffffff
	br          %r6608, .L1538, .L1540

.L1538:
	load.64*    %r6609 <- 0[fs]
	load.32     %r6610 <- 0[list]
	push.64*    %r6609
	push.32     %r6610
	call.64*    %r6611 <- getjumpcontrol
	load.32     %r6612 <- 0[%r6611]
	store.32    %r6612 -> 0[i]
	load.32     %r6613 <- 0[i]
	lsr.32      %r6614 <- %r6613, $0
	and.32      %r6615 <- %r6614, $63
	cast.32     %r6616 <- (32) %r6615
	scast.32    %r6617 <- (32) %r6616
	setne.32    %r6618 <- %r6617, $27
	br          %r6618, .L1542, .L1543

.L1542:
	phisrc.32   %phi292(return) <- $1
	br          .L1544

.L1543:
	br          .L1539

.L1539:
	load.64*    %r6620 <- 0[fs]
	load.32     %r6621 <- 0[list]
	push.64*    %r6620
	push.32     %r6621
	call.32     %r6622 <- getjump
	store.32    %r6622 -> 0[list]
	br          .L1541

.L1540:
	phisrc.32   %phi293(return) <- $0
	br          .L1544

.L1544:
	phi.32      %r6619 <- %phi292(return), %phi293(return)
	ret.32      %r6619


patchtestreg:
.L1545:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[node]
	store.32    %arg3 -> 0[reg]
	load.64*    %r6623 <- 0[fs]
	load.32     %r6624 <- 0[node]
	push.64*    %r6623
	push.32     %r6624
	call.64*    %r6625 <- getjumpcontrol
	store.64*   %r6625 -> 0[i]
	load.64*    %r6626 <- 0[i]
	load.32     %r6627 <- 0[%r6626]
	lsr.32      %r6628 <- %r6627, $0
	and.32      %r6629 <- %r6628, $63
	cast.32     %r6630 <- (32) %r6629
	scast.32    %r6631 <- (32) %r6630
	setne.32    %r6632 <- %r6631, $27
	br          %r6632, .L1546, .L1547

.L1546:
	phisrc.32   %phi294(return) <- $0
	br          .L1548

.L1547:
	load.32     %r6634 <- 0[reg]
	setne.32    %r6635 <- %r6634, $255
	br          %r6635, .L1551, .L1550

.L1551:
	load.32     %r6636 <- 0[reg]
	load.64*    %r6637 <- 0[i]
	load.32     %r6638 <- 0[%r6637]
	lsr.32      %r6639 <- %r6638, $23
	and.32      %r6640 <- %r6639, $511
	cast.32     %r6641 <- (32) %r6640
	setne.32    %r6642 <- %r6636, %r6641
	br          %r6642, .L1549, .L1550

.L1549:
	load.64*    %r6643 <- 0[i]
	load.32     %r6644 <- 0[%r6643]
	and.32      %r6645 <- %r6644, $0xffffc03f
	load.32     %r6646 <- 0[reg]
	scast.32    %r6647 <- (32) %r6646
	shl.32      %r6648 <- %r6647, $6
	and.32      %r6649 <- %r6648, $0x3fc0
	or.32       %r6650 <- %r6645, %r6649
	load.64*    %r6651 <- 0[i]
	store.32    %r6650 -> 0[%r6651]
	br          .L1552

.L1550:
	load.64*    %r6652 <- 0[i]
	load.32     %r6653 <- 0[%r6652]
	lsr.32      %r6654 <- %r6653, $23
	and.32      %r6655 <- %r6654, $511
	cast.32     %r6656 <- (32) %r6655
	scast.32    %r6657 <- (32) %r6656
	shl.32      %r6658 <- %r6657, $6
	or.32       %r6659 <- $26, %r6658
	or.32       %r6660 <- %r6659, $0
	load.64*    %r6661 <- 0[i]
	load.32     %r6662 <- 0[%r6661]
	lsr.32      %r6663 <- %r6662, $14
	and.32      %r6664 <- %r6663, $511
	cast.32     %r6665 <- (32) %r6664
	scast.32    %r6666 <- (32) %r6665
	shl.32      %r6667 <- %r6666, $14
	or.32       %r6668 <- %r6660, %r6667
	load.64*    %r6669 <- 0[i]
	store.32    %r6668 -> 0[%r6669]
	br          .L1552

.L1552:
	phisrc.32   %phi295(return) <- $1
	br          .L1548

.L1548:
	phi.32      %r6633 <- %phi294(return), %phi295(return)
	ret.32      %r6633


removevalues:
.L1553:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	br          .L1557

.L1557:
	load.32     %r6670 <- 0[list]
	setne.32    %r6671 <- %r6670, $0xffffffff
	br          %r6671, .L1554, .L1556

.L1554:
	load.64*    %r6672 <- 0[fs]
	load.32     %r6673 <- 0[list]
	push.64*    %r6672
	push.32     %r6673
	push.32     $255
	call.32     %r6674 <- patchtestreg
	br          .L1555

.L1555:
	load.64*    %r6675 <- 0[fs]
	load.32     %r6676 <- 0[list]
	push.64*    %r6675
	push.32     %r6676
	call.32     %r6677 <- getjump
	store.32    %r6677 -> 0[list]
	br          .L1557

.L1556:
	ret


patchlistaux:
.L1558:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	store.32    %arg3 -> 0[vtarget]
	store.32    %arg4 -> 0[reg]
	store.32    %arg5 -> 0[dtarget]
	br          .L1562

.L1562:
	load.32     %r6678 <- 0[list]
	setne.32    %r6679 <- %r6678, $0xffffffff
	br          %r6679, .L1559, .L1561

.L1559:
	load.64*    %r6680 <- 0[fs]
	load.32     %r6681 <- 0[list]
	push.64*    %r6680
	push.32     %r6681
	call.32     %r6682 <- getjump
	store.32    %r6682 -> 0[next]
	load.64*    %r6683 <- 0[fs]
	load.32     %r6684 <- 0[list]
	load.32     %r6685 <- 0[reg]
	push.64*    %r6683
	push.32     %r6684
	push.32     %r6685
	call.32     %r6686 <- patchtestreg
	br          %r6686, .L1563, .L1564

.L1563:
	load.64*    %r6687 <- 0[fs]
	load.32     %r6688 <- 0[list]
	load.32     %r6689 <- 0[vtarget]
	push.64*    %r6687
	push.32     %r6688
	push.32     %r6689
	call        fixjump
	br          .L1565

.L1564:
	load.64*    %r6690 <- 0[fs]
	load.32     %r6691 <- 0[list]
	load.32     %r6692 <- 0[dtarget]
	push.64*    %r6690
	push.32     %r6691
	push.32     %r6692
	call        fixjump
	br          .L1565

.L1565:
	load.32     %r6693 <- 0[next]
	store.32    %r6693 -> 0[list]
	br          .L1560

.L1560:
	br          .L1562

.L1561:
	ret


dischargejpc:
.L1566:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r6694 <- 0[fs]
	load.64*    %r6695 <- 0[fs]
	load.32     %r6696 <- 56[%r6695]
	load.64*    %r6697 <- 0[fs]
	load.32     %r6698 <- 48[%r6697]
	load.64*    %r6699 <- 0[fs]
	load.32     %r6700 <- 48[%r6699]
	push.64*    %r6694
	push.32     %r6696
	push.32     %r6698
	push.32     $255
	push.32     %r6700
	call        patchlistaux
	load.64*    %r6701 <- 0[fs]
	store.32    $0xffffffff -> 56[%r6701]
	br          .L1567

.L1567:
	ret


luaK_patchlist:
.L1568:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	store.32    %arg3 -> 0[target]
	load.32     %r6702 <- 0[target]
	load.64*    %r6703 <- 0[fs]
	load.32     %r6704 <- 48[%r6703]
	seteq.32    %r6705 <- %r6702, %r6704
	br          %r6705, .L1569, .L1570

.L1569:
	load.64*    %r6706 <- 0[fs]
	load.32     %r6707 <- 0[list]
	push.64*    %r6706
	push.32     %r6707
	call        luaK_patchtohere
	br          .L1571

.L1570:
	load.64*    %r6708 <- 0[fs]
	load.32     %r6709 <- 0[list]
	load.32     %r6710 <- 0[target]
	load.32     %r6711 <- 0[target]
	push.64*    %r6708
	push.32     %r6709
	push.32     %r6710
	push.32     $255
	push.32     %r6711
	call        patchlistaux
	br          .L1571

.L1571:
	ret


luaK_patchtohere:
.L1572:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[list]
	load.64*    %r6712 <- 0[fs]
	push.64*    %r6712
	call.32     %r6713 <- luaK_getlabel
	load.64*    %r6714 <- 0[fs]
	load.64*    %r6715 <- 0[fs]
	add.64*     %r6716 <- %r6715, $56
	load.32     %r6717 <- 0[list]
	push.64*    %r6714
	push.64*    %r6716
	push.32     %r6717
	call        luaK_concat
	br          .L1573

.L1573:
	ret


luaK_concat:
.L1574:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[l1]
	store.32    %arg3 -> 0[l2]
	load.32     %r6718 <- 0[l2]
	seteq.32    %r6719 <- %r6718, $0xffffffff
	br          %r6719, .L1575, .L1576

.L1575:
	br          .L1577

.L1576:
	load.64*    %r6720 <- 0[l1]
	load.32     %r6721 <- 0[%r6720]
	seteq.32    %r6722 <- %r6721, $0xffffffff
	br          %r6722, .L1579, .L1580

.L1579:
	load.32     %r6723 <- 0[l2]
	load.64*    %r6724 <- 0[l1]
	store.32    %r6723 -> 0[%r6724]
	br          .L1581

.L1580:
	load.64*    %r6725 <- 0[l1]
	load.32     %r6726 <- 0[%r6725]
	store.32    %r6726 -> 0[list]
	br          .L1585

.L1585:
	load.64*    %r6727 <- 0[fs]
	load.32     %r6728 <- 0[list]
	push.64*    %r6727
	push.32     %r6728
	call.32     %r6729 <- getjump
	store.32    %r6729 -> 0[next]
	setne.32    %r6730 <- %r6729, $0xffffffff
	br          %r6730, .L1582, .L1584

.L1582:
	load.32     %r6731 <- 0[next]
	store.32    %r6731 -> 0[list]
	br          .L1583

.L1583:
	br          .L1585

.L1584:
	load.64*    %r6732 <- 0[fs]
	load.32     %r6733 <- 0[list]
	load.32     %r6734 <- 0[l2]
	push.64*    %r6732
	push.32     %r6733
	push.32     %r6734
	call        fixjump
	br          .L1581

.L1581:
	br          .L1578

.L1578:
	br          .L1577

.L1577:
	ret


luaK_checkstack:
.L1586:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[n]
	load.64*    %r6735 <- 0[fs]
	load.32     %r6736 <- 60[%r6735]
	load.32     %r6737 <- 0[n]
	add.32      %r6738 <- %r6736, %r6737
	store.32    %r6738 -> 0[newstack]
	load.32     %r6739 <- 0[newstack]
	load.64*    %r6740 <- 0[fs]
	load.64*    %r6741 <- 0[%r6740]
	load.8      %r6742 <- 115[%r6741]
	cast.32     %r6743 <- (8) %r6742
	setgt.32    %r6744 <- %r6739, %r6743
	br          %r6744, .L1587, .L1588

.L1587:
	load.32     %r6745 <- 0[newstack]
	setge.32    %r6746 <- %r6745, $250
	br          %r6746, .L1589, .L1590

.L1589:
	load.64*    %r6747 <- 0[fs]
	load.64*    %r6748 <- 24[%r6747]
	symaddr.64* %r6749 <- <anon symbol:0x62d00130e2f8>
	push.64*    %r6748
	push.64*    %r6749
	call        luaX_syntaxerror
	br          .L1590

.L1590:
	load.32     %r6750 <- 0[newstack]
	scast.8     %r6751 <- (32) %r6750
	load.64*    %r6752 <- 0[fs]
	load.64*    %r6753 <- 0[%r6752]
	store.8     %r6751 -> 115[%r6753]
	br          .L1588

.L1588:
	ret


luaK_reserveregs:
.L1591:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[n]
	load.64*    %r6754 <- 0[fs]
	load.32     %r6755 <- 0[n]
	push.64*    %r6754
	push.32     %r6755
	call        luaK_checkstack
	load.32     %r6756 <- 0[n]
	load.64*    %r6757 <- 0[fs]
	load.32     %r6758 <- 60[%r6757]
	scast.32    %r6759 <- (32) %r6758
	add.32      %r6760 <- %r6759, %r6756
	scast.32    %r6761 <- (32) %r6760
	store.32    %r6761 -> 60[%r6757]
	br          .L1592

.L1592:
	ret


freereg:
.L1593:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[reg]
	load.32     %r6762 <- 0[reg]
	and.32      %r6763 <- %r6762, $256
	br          %r6763, .L1595, .L1596

.L1596:
	load.32     %r6764 <- 0[reg]
	load.64*    %r6765 <- 0[fs]
	load.8      %r6766 <- 74[%r6765]
	cast.32     %r6767 <- (8) %r6766
	setge.32    %r6768 <- %r6764, %r6767
	br          %r6768, .L1594, .L1595

.L1594:
	load.64*    %r6769 <- 0[fs]
	load.32     %r6770 <- 60[%r6769]
	sub.32      %r6771 <- %r6770, $1
	store.32    %r6771 -> 60[%r6769]
	br          .L1595

.L1595:
	ret


freeexp:
.L1597:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r6772 <- 0[e]
	load.32     %r6773 <- 0[%r6772]
	scast.32    %r6774 <- (32) %r6773
	seteq.32    %r6775 <- %r6774, $12
	br          %r6775, .L1598, .L1599

.L1598:
	load.64*    %r6776 <- 0[fs]
	load.64*    %r6777 <- 0[e]
	load.32     %r6778 <- 8[%r6777]
	push.64*    %r6776
	push.32     %r6778
	call        freereg
	br          .L1599

.L1599:
	ret


addk:
.L1600:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[k]
	store.64*   %arg3 -> 0[v]
	load.64*    %r6779 <- 0[fs]
	load.64*    %r6780 <- 32[%r6779]
	store.64*   %r6780 -> 0[L]
	load.64*    %r6781 <- 0[L]
	load.64*    %r6782 <- 0[fs]
	load.64*    %r6783 <- 8[%r6782]
	load.64*    %r6784 <- 0[k]
	push.64*    %r6781
	push.64*    %r6783
	push.64*    %r6784
	call.64*    %r6785 <- luaH_set
	store.64*   %r6785 -> 0[idx]
	load.64*    %r6786 <- 0[fs]
	load.64*    %r6787 <- 0[%r6786]
	store.64*   %r6787 -> 0[f]
	load.64*    %r6788 <- 0[f]
	load.32     %r6789 <- 76[%r6788]
	store.32    %r6789 -> 0[oldsize]
	load.64*    %r6790 <- 0[idx]
	load.32     %r6791 <- 8[%r6790]
	seteq.32    %r6792 <- %r6791, $3
	br          %r6792, .L1601, .L1602

.L1601:
	load.64*    %r6793 <- 0[idx]
	load.f64    %r6794 <- 0[%r6793]
	cast.32     %r6795 <- (64) %r6794
	phisrc.32   %phi296(return) <- %r6795
	br          .L1603

.L1602:
	load.64*    %r6797 <- 0[idx]
	store.64*   %r6797 -> 0[i_o]
	load.64*    %r6798 <- 0[fs]
	load.32     %r6799 <- 64[%r6798]
	fpcast.f64  %r6800 <- (32) %r6799
	load.64*    %r6801 <- 0[i_o]
	store.f64   %r6800 -> 0[%r6801]
	load.64*    %r6802 <- 0[i_o]
	store.32    $3 -> 8[%r6802]
	load.64*    %r6803 <- 0[fs]
	load.32     %r6804 <- 64[%r6803]
	add.32      %r6805 <- %r6804, $1
	load.64*    %r6806 <- 0[f]
	load.32     %r6807 <- 76[%r6806]
	setgt.32    %r6808 <- %r6805, %r6807
	br          %r6808, .L1605, .L1606

.L1605:
	load.64*    %r6809 <- 0[L]
	load.64*    %r6810 <- 0[f]
	load.64*    %r6811 <- 16[%r6810]
	cast.64*    %r6812 <- (64) %r6811
	load.64*    %r6813 <- 0[f]
	add.64*     %r6814 <- %r6813, $76
	symaddr.64* %r6815 <- <anon symbol:0x62d00131cbf8>
	push.64*    %r6809
	push.64*    %r6812
	push.64*    %r6814
	push.64     $16
	push.32     $0x3ffff
	push.64*    %r6815
	call.64*    %r6816 <- luaM_growaux_
	ptrcast.64* %r6817 <- (64) %r6816
	load.64*    %r6818 <- 0[f]
	store.64*   %r6817 -> 16[%r6818]
	br          .L1606

.L1606:
	br          .L1610

.L1610:
	load.32     %r6819 <- 0[oldsize]
	load.64*    %r6820 <- 0[f]
	load.32     %r6821 <- 76[%r6820]
	setlt.32    %r6822 <- %r6819, %r6821
	br          %r6822, .L1607, .L1609

.L1607:
	load.64*    %r6823 <- 0[f]
	load.64*    %r6824 <- 16[%r6823]
	load.32     %r6825 <- 0[oldsize]
	add.32      %r6826 <- %r6825, $1
	store.32    %r6826 -> 0[oldsize]
	scast.64    %r6827 <- (32) %r6825
	muls.64     %r6828 <- %r6827, $16
	add.64*     %r6829 <- %r6824, %r6828
	store.32    $0 -> 8[%r6829]
	br          .L1608

.L1608:
	br          .L1610

.L1609:
	load.64*    %r6830 <- 0[v]
	store.64*   %r6830 -> 0[o2]
	load.64*    %r6831 <- 0[f]
	load.64*    %r6832 <- 16[%r6831]
	load.64*    %r6833 <- 0[fs]
	load.32     %r6834 <- 64[%r6833]
	scast.64    %r6835 <- (32) %r6834
	muls.64     %r6836 <- %r6835, $16
	add.64*     %r6837 <- %r6832, %r6836
	store.64*   %r6837 -> 0[o1]
	load.64*    %r6838 <- 0[o2]
	load.f64    %r6839 <- 0[%r6838]
	fpcast.f64  %r6840 <- (64) %r6839
	load.64*    %r6841 <- 0[o1]
	store.f64   %r6840 -> 0[%r6841]
	load.64*    %r6842 <- 0[o2]
	load.32     %r6843 <- 8[%r6842]
	scast.32    %r6844 <- (32) %r6843
	load.64*    %r6845 <- 0[o1]
	store.32    %r6844 -> 8[%r6845]
	load.64*    %r6846 <- 0[v]
	load.32     %r6847 <- 8[%r6846]
	setge.32    %r6848 <- %r6847, $4
	br          %r6848, .L1614, .L1612

.L1614:
	load.64*    %r6849 <- 0[v]
	load.64*    %r6850 <- 0[%r6849]
	load.8      %r6851 <- 9[%r6850]
	cast.32     %r6852 <- (8) %r6851
	and.32      %r6853 <- %r6852, $3
	br          %r6853, .L1613, .L1612

.L1613:
	load.64*    %r6854 <- 0[f]
	ptrcast.64* %r6855 <- (64) %r6854
	load.8      %r6856 <- 9[%r6855]
	cast.32     %r6857 <- (8) %r6856
	and.32      %r6858 <- %r6857, $4
	br          %r6858, .L1611, .L1612

.L1611:
	load.64*    %r6859 <- 0[L]
	load.64*    %r6860 <- 0[f]
	ptrcast.64* %r6861 <- (64) %r6860
	load.64*    %r6862 <- 0[v]
	load.64*    %r6863 <- 0[%r6862]
	push.64*    %r6859
	push.64*    %r6861
	push.64*    %r6863
	call        luaC_barrierf
	br          .L1612

.L1612:
	load.64*    %r6864 <- 0[fs]
	load.32     %r6865 <- 64[%r6864]
	add.32      %r6866 <- %r6865, $1
	store.32    %r6866 -> 64[%r6864]
	phisrc.32   %phi297(return) <- %r6865
	br          .L1603

.L1603:
	phi.32      %r6796 <- %phi296(return), %phi297(return)
	ret.32      %r6796


luaK_stringK:
.L1615:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[s]
	symaddr.64* %r6867 <- o
	store.64*   %r6867 -> 0[i_o]
	load.64*    %r6868 <- 0[s]
	ptrcast.64* %r6869 <- (64) %r6868
	load.64*    %r6870 <- 0[i_o]
	store.64*   %r6869 -> 0[%r6870]
	load.64*    %r6871 <- 0[i_o]
	store.32    $4 -> 8[%r6871]
	load.64*    %r6872 <- 0[fs]
	symaddr.64* %r6873 <- o
	symaddr.64* %r6874 <- o
	push.64*    %r6872
	push.64*    %r6873
	push.64*    %r6874
	call.32     %r6875 <- addk
	phisrc.32   %phi298(return) <- %r6875
	br          .L1616

.L1616:
	phi.32      %r6876 <- %phi298(return)
	ret.32      %r6875


luaK_numberK:
.L1617:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.f64   %arg2 -> 0[r]
	symaddr.64* %r6877 <- o
	store.64*   %r6877 -> 0[i_o]
	load.f64    %r6878 <- 0[r]
	load.64*    %r6879 <- 0[i_o]
	store.f64   %r6878 -> 0[%r6879]
	load.64*    %r6880 <- 0[i_o]
	store.32    $3 -> 8[%r6880]
	load.64*    %r6881 <- 0[fs]
	symaddr.64* %r6882 <- o
	symaddr.64* %r6883 <- o
	push.64*    %r6881
	push.64*    %r6882
	push.64*    %r6883
	call.32     %r6884 <- addk
	phisrc.32   %phi299(return) <- %r6884
	br          .L1618

.L1618:
	phi.32      %r6885 <- %phi299(return)
	ret.32      %r6884


boolK:
.L1619:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[b]
	symaddr.64* %r6886 <- o
	store.64*   %r6886 -> 0[i_o]
	load.32     %r6887 <- 0[b]
	load.64*    %r6888 <- 0[i_o]
	store.32    %r6887 -> 0[%r6888]
	load.64*    %r6889 <- 0[i_o]
	store.32    $1 -> 8[%r6889]
	load.64*    %r6890 <- 0[fs]
	symaddr.64* %r6891 <- o
	symaddr.64* %r6892 <- o
	push.64*    %r6890
	push.64*    %r6891
	push.64*    %r6892
	call.32     %r6893 <- addk
	phisrc.32   %phi300(return) <- %r6893
	br          .L1620

.L1620:
	phi.32      %r6894 <- %phi300(return)
	ret.32      %r6893


nilK:
.L1621:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    $0 -> 8[v]
	symaddr.64* %r6895 <- k
	store.64*   %r6895 -> 0[i_o]
	load.64*    %r6896 <- 0[fs]
	load.64*    %r6897 <- 8[%r6896]
	ptrcast.64* %r6898 <- (64) %r6897
	load.64*    %r6899 <- 0[i_o]
	store.64*   %r6898 -> 0[%r6899]
	load.64*    %r6900 <- 0[i_o]
	store.32    $5 -> 8[%r6900]
	load.64*    %r6901 <- 0[fs]
	symaddr.64* %r6902 <- k
	symaddr.64* %r6903 <- v
	push.64*    %r6901
	push.64*    %r6902
	push.64*    %r6903
	call.32     %r6904 <- addk
	phisrc.32   %phi301(return) <- %r6904
	br          .L1622

.L1622:
	phi.32      %r6905 <- %phi301(return)
	ret.32      %r6904


luaK_setreturns:
.L1623:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r6906 <- 0[e]
	load.32     %r6907 <- 0[%r6906]
	scast.32    %r6908 <- (32) %r6907
	seteq.32    %r6909 <- %r6908, $13
	br          %r6909, .L1624, .L1625

.L1624:
	load.64*    %r6910 <- 0[fs]
	load.64*    %r6911 <- 0[%r6910]
	load.64*    %r6912 <- 24[%r6911]
	load.64*    %r6913 <- 0[e]
	load.32     %r6914 <- 8[%r6913]
	scast.64    %r6915 <- (32) %r6914
	muls.64     %r6916 <- %r6915, $4
	add.64*     %r6917 <- %r6912, %r6916
	load.32     %r6918 <- 0[%r6917]
	and.32      %r6919 <- %r6918, $0xff803fff
	load.32     %r6920 <- 0[nresults]
	add.32      %r6921 <- %r6920, $1
	scast.32    %r6922 <- (32) %r6921
	shl.32      %r6923 <- %r6922, $14
	and.32      %r6924 <- %r6923, $0x7fc000
	or.32       %r6925 <- %r6919, %r6924
	load.64*    %r6926 <- 0[fs]
	load.64*    %r6927 <- 0[%r6926]
	load.64*    %r6928 <- 24[%r6927]
	load.64*    %r6929 <- 0[e]
	load.32     %r6930 <- 8[%r6929]
	scast.64    %r6931 <- (32) %r6930
	muls.64     %r6932 <- %r6931, $4
	add.64*     %r6933 <- %r6928, %r6932
	store.32    %r6925 -> 0[%r6933]
	br          .L1626

.L1625:
	load.64*    %r6934 <- 0[e]
	load.32     %r6935 <- 0[%r6934]
	scast.32    %r6936 <- (32) %r6935
	seteq.32    %r6937 <- %r6936, $14
	br          %r6937, .L1627, .L1628

.L1627:
	load.64*    %r6938 <- 0[fs]
	load.64*    %r6939 <- 0[%r6938]
	load.64*    %r6940 <- 24[%r6939]
	load.64*    %r6941 <- 0[e]
	load.32     %r6942 <- 8[%r6941]
	scast.64    %r6943 <- (32) %r6942
	muls.64     %r6944 <- %r6943, $4
	add.64*     %r6945 <- %r6940, %r6944
	load.32     %r6946 <- 0[%r6945]
	and.32      %r6947 <- %r6946, $0x7fffff
	load.32     %r6948 <- 0[nresults]
	add.32      %r6949 <- %r6948, $1
	scast.32    %r6950 <- (32) %r6949
	shl.32      %r6951 <- %r6950, $23
	and.32      %r6952 <- %r6951, $0xff800000
	or.32       %r6953 <- %r6947, %r6952
	load.64*    %r6954 <- 0[fs]
	load.64*    %r6955 <- 0[%r6954]
	load.64*    %r6956 <- 24[%r6955]
	load.64*    %r6957 <- 0[e]
	load.32     %r6958 <- 8[%r6957]
	scast.64    %r6959 <- (32) %r6958
	muls.64     %r6960 <- %r6959, $4
	add.64*     %r6961 <- %r6956, %r6960
	store.32    %r6953 -> 0[%r6961]
	load.64*    %r6962 <- 0[fs]
	load.64*    %r6963 <- 0[%r6962]
	load.64*    %r6964 <- 24[%r6963]
	load.64*    %r6965 <- 0[e]
	load.32     %r6966 <- 8[%r6965]
	scast.64    %r6967 <- (32) %r6966
	muls.64     %r6968 <- %r6967, $4
	add.64*     %r6969 <- %r6964, %r6968
	load.32     %r6970 <- 0[%r6969]
	and.32      %r6971 <- %r6970, $0xffffc03f
	load.64*    %r6972 <- 0[fs]
	load.32     %r6973 <- 60[%r6972]
	scast.32    %r6974 <- (32) %r6973
	shl.32      %r6975 <- %r6974, $6
	and.32      %r6976 <- %r6975, $0x3fc0
	or.32       %r6977 <- %r6971, %r6976
	load.64*    %r6978 <- 0[fs]
	load.64*    %r6979 <- 0[%r6978]
	load.64*    %r6980 <- 24[%r6979]
	load.64*    %r6981 <- 0[e]
	load.32     %r6982 <- 8[%r6981]
	scast.64    %r6983 <- (32) %r6982
	muls.64     %r6984 <- %r6983, $4
	add.64*     %r6985 <- %r6980, %r6984
	store.32    %r6977 -> 0[%r6985]
	load.64*    %r6986 <- 0[fs]
	push.64*    %r6986
	push.32     $1
	call        luaK_reserveregs
	br          .L1628

.L1628:
	br          .L1626

.L1626:
	ret


luaK_setoneret:
.L1629:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r6987 <- 0[e]
	load.32     %r6988 <- 0[%r6987]
	scast.32    %r6989 <- (32) %r6988
	seteq.32    %r6990 <- %r6989, $13
	br          %r6990, .L1630, .L1631

.L1630:
	load.64*    %r6991 <- 0[e]
	store.32    $12 -> 0[%r6991]
	load.64*    %r6992 <- 0[fs]
	load.64*    %r6993 <- 0[%r6992]
	load.64*    %r6994 <- 24[%r6993]
	load.64*    %r6995 <- 0[e]
	load.32     %r6996 <- 8[%r6995]
	scast.64    %r6997 <- (32) %r6996
	muls.64     %r6998 <- %r6997, $4
	add.64*     %r6999 <- %r6994, %r6998
	load.32     %r7000 <- 0[%r6999]
	lsr.32      %r7001 <- %r7000, $6
	and.32      %r7002 <- %r7001, $255
	cast.32     %r7003 <- (32) %r7002
	load.64*    %r7004 <- 0[e]
	store.32    %r7003 -> 8[%r7004]
	br          .L1632

.L1631:
	load.64*    %r7005 <- 0[e]
	load.32     %r7006 <- 0[%r7005]
	scast.32    %r7007 <- (32) %r7006
	seteq.32    %r7008 <- %r7007, $14
	br          %r7008, .L1633, .L1634

.L1633:
	load.64*    %r7009 <- 0[fs]
	load.64*    %r7010 <- 0[%r7009]
	load.64*    %r7011 <- 24[%r7010]
	load.64*    %r7012 <- 0[e]
	load.32     %r7013 <- 8[%r7012]
	scast.64    %r7014 <- (32) %r7013
	muls.64     %r7015 <- %r7014, $4
	add.64*     %r7016 <- %r7011, %r7015
	load.32     %r7017 <- 0[%r7016]
	and.32      %r7018 <- %r7017, $0x7fffff
	or.32       %r7019 <- %r7018, $0x1000000
	load.64*    %r7020 <- 0[fs]
	load.64*    %r7021 <- 0[%r7020]
	load.64*    %r7022 <- 24[%r7021]
	load.64*    %r7023 <- 0[e]
	load.32     %r7024 <- 8[%r7023]
	scast.64    %r7025 <- (32) %r7024
	muls.64     %r7026 <- %r7025, $4
	add.64*     %r7027 <- %r7022, %r7026
	store.32    %r7019 -> 0[%r7027]
	load.64*    %r7028 <- 0[e]
	store.32    $11 -> 0[%r7028]
	br          .L1634

.L1634:
	br          .L1632

.L1632:
	ret


luaK_dischargevars:
.L1635:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7029 <- 0[e]
	load.32     %r7030 <- 0[%r7029]
	switch.32   %r7030, 6 -> .L1637, 7 -> .L1638, 8 -> .L1639, 9 -> .L1640, 13 -> .L1642, 14 -> .L1641, default -> .L1643

.L1637:
	load.64*    %r7031 <- 0[e]
	store.32    $12 -> 0[%r7031]
	br          .L1636

.L1638:
	load.64*    %r7032 <- 0[fs]
	load.64*    %r7033 <- 0[e]
	load.32     %r7034 <- 8[%r7033]
	push.64*    %r7032
	push.32     $4
	push.32     $0
	push.32     %r7034
	push.32     $0
	call.32     %r7035 <- luaK_codeABC
	load.64*    %r7036 <- 0[e]
	store.32    %r7035 -> 8[%r7036]
	load.64*    %r7037 <- 0[e]
	store.32    $11 -> 0[%r7037]
	br          .L1636

.L1639:
	load.64*    %r7038 <- 0[fs]
	load.64*    %r7039 <- 0[e]
	load.32     %r7040 <- 8[%r7039]
	scast.32    %r7041 <- (32) %r7040
	push.64*    %r7038
	push.32     $5
	push.32     $0
	push.32     %r7041
	call.32     %r7042 <- luaK_codeABx
	load.64*    %r7043 <- 0[e]
	store.32    %r7042 -> 8[%r7043]
	load.64*    %r7044 <- 0[e]
	store.32    $11 -> 0[%r7044]
	br          .L1636

.L1640:
	load.64*    %r7045 <- 0[fs]
	load.64*    %r7046 <- 0[e]
	load.32     %r7047 <- 12[%r7046]
	push.64*    %r7045
	push.32     %r7047
	call        freereg
	load.64*    %r7048 <- 0[fs]
	load.64*    %r7049 <- 0[e]
	load.32     %r7050 <- 8[%r7049]
	push.64*    %r7048
	push.32     %r7050
	call        freereg
	load.64*    %r7051 <- 0[fs]
	load.64*    %r7052 <- 0[e]
	load.32     %r7053 <- 8[%r7052]
	load.64*    %r7054 <- 0[e]
	load.32     %r7055 <- 12[%r7054]
	push.64*    %r7051
	push.32     $6
	push.32     $0
	push.32     %r7053
	push.32     %r7055
	call.32     %r7056 <- luaK_codeABC
	load.64*    %r7057 <- 0[e]
	store.32    %r7056 -> 8[%r7057]
	load.64*    %r7058 <- 0[e]
	store.32    $11 -> 0[%r7058]
	br          .L1636

.L1641:
	br          .L1642

.L1642:
	load.64*    %r7059 <- 0[fs]
	load.64*    %r7060 <- 0[e]
	push.64*    %r7059
	push.64*    %r7060
	call        luaK_setoneret
	br          .L1636

.L1643:
	br          .L1636

.L1636:
	ret


code_label:
.L1644:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[A]
	store.32    %arg3 -> 0[b]
	store.32    %arg4 -> 0[jump]
	load.64*    %r7061 <- 0[fs]
	push.64*    %r7061
	call.32     %r7062 <- luaK_getlabel
	load.64*    %r7063 <- 0[fs]
	load.32     %r7064 <- 0[A]
	load.32     %r7065 <- 0[b]
	load.32     %r7066 <- 0[jump]
	push.64*    %r7063
	push.32     $2
	push.32     %r7064
	push.32     %r7065
	push.32     %r7066
	call.32     %r7067 <- luaK_codeABC
	phisrc.32   %phi302(return) <- %r7067
	br          .L1645

.L1645:
	phi.32      %r7068 <- %phi302(return)
	ret.32      %r7067


discharge2reg:
.L1646:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[reg]
	load.64*    %r7069 <- 0[fs]
	load.64*    %r7070 <- 0[e]
	push.64*    %r7069
	push.64*    %r7070
	call        luaK_dischargevars
	load.64*    %r7071 <- 0[e]
	load.32     %r7072 <- 0[%r7071]
	switch.32   %r7072, 1 -> .L1648, 2 -> .L1650, 3 -> .L1649, 4 -> .L1651, 5 -> .L1652, 11 -> .L1653, 12 -> .L1654, default -> .L1655

.L1648:
	load.64*    %r7073 <- 0[fs]
	load.32     %r7074 <- 0[reg]
	push.64*    %r7073
	push.32     %r7074
	push.32     $1
	call        luaK_nil
	br          .L1647

.L1649:
	br          .L1650

.L1650:
	load.64*    %r7075 <- 0[fs]
	load.32     %r7076 <- 0[reg]
	load.64*    %r7077 <- 0[e]
	load.32     %r7078 <- 0[%r7077]
	scast.32    %r7079 <- (32) %r7078
	seteq.32    %r7080 <- %r7079, $2
	push.64*    %r7075
	push.32     $2
	push.32     %r7076
	push.32     %r7080
	push.32     $0
	call.32     %r7081 <- luaK_codeABC
	br          .L1647

.L1651:
	load.64*    %r7082 <- 0[fs]
	load.32     %r7083 <- 0[reg]
	load.64*    %r7084 <- 0[e]
	load.32     %r7085 <- 8[%r7084]
	scast.32    %r7086 <- (32) %r7085
	push.64*    %r7082
	push.32     $1
	push.32     %r7083
	push.32     %r7086
	call.32     %r7087 <- luaK_codeABx
	br          .L1647

.L1652:
	load.64*    %r7088 <- 0[fs]
	load.32     %r7089 <- 0[reg]
	load.64*    %r7090 <- 0[fs]
	load.64*    %r7091 <- 0[e]
	load.f64    %r7092 <- 8[%r7091]
	push.64*    %r7090
	push.f64    %r7092
	call.32     %r7093 <- luaK_numberK
	scast.32    %r7094 <- (32) %r7093
	push.64*    %r7088
	push.32     $1
	push.32     %r7089
	push.32     %r7094
	call.32     %r7095 <- luaK_codeABx
	br          .L1647

.L1653:
	load.64*    %r7096 <- 0[fs]
	load.64*    %r7097 <- 0[%r7096]
	load.64*    %r7098 <- 24[%r7097]
	load.64*    %r7099 <- 0[e]
	load.32     %r7100 <- 8[%r7099]
	scast.64    %r7101 <- (32) %r7100
	muls.64     %r7102 <- %r7101, $4
	add.64*     %r7103 <- %r7098, %r7102
	store.64*   %r7103 -> 0[pc]
	load.64*    %r7104 <- 0[pc]
	load.32     %r7105 <- 0[%r7104]
	and.32      %r7106 <- %r7105, $0xffffc03f
	load.32     %r7107 <- 0[reg]
	scast.32    %r7108 <- (32) %r7107
	shl.32      %r7109 <- %r7108, $6
	and.32      %r7110 <- %r7109, $0x3fc0
	or.32       %r7111 <- %r7106, %r7110
	load.64*    %r7112 <- 0[pc]
	store.32    %r7111 -> 0[%r7112]
	br          .L1647

.L1654:
	load.32     %r7113 <- 0[reg]
	load.64*    %r7114 <- 0[e]
	load.32     %r7115 <- 8[%r7114]
	setne.32    %r7116 <- %r7113, %r7115
	br          %r7116, .L1656, .L1657

.L1656:
	load.64*    %r7117 <- 0[fs]
	load.32     %r7118 <- 0[reg]
	load.64*    %r7119 <- 0[e]
	load.32     %r7120 <- 8[%r7119]
	push.64*    %r7117
	push.32     $0
	push.32     %r7118
	push.32     %r7120
	push.32     $0
	call.32     %r7121 <- luaK_codeABC
	br          .L1657

.L1657:
	br          .L1647

.L1655:
	br          .L1658

.L1647:
	load.32     %r7122 <- 0[reg]
	load.64*    %r7123 <- 0[e]
	store.32    %r7122 -> 8[%r7123]
	load.64*    %r7124 <- 0[e]
	store.32    $12 -> 0[%r7124]
	br          .L1658

.L1658:
	ret


discharge2anyreg:
.L1659:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7125 <- 0[e]
	load.32     %r7126 <- 0[%r7125]
	scast.32    %r7127 <- (32) %r7126
	setne.32    %r7128 <- %r7127, $12
	br          %r7128, .L1660, .L1661

.L1660:
	load.64*    %r7129 <- 0[fs]
	push.64*    %r7129
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r7130 <- 0[fs]
	load.64*    %r7131 <- 0[e]
	load.64*    %r7132 <- 0[fs]
	load.32     %r7133 <- 60[%r7132]
	sub.32      %r7134 <- %r7133, $1
	push.64*    %r7130
	push.64*    %r7131
	push.32     %r7134
	call        discharge2reg
	br          .L1661

.L1661:
	ret


exp2reg:
.L1662:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[reg]
	load.64*    %r7135 <- 0[fs]
	load.64*    %r7136 <- 0[e]
	load.32     %r7137 <- 0[reg]
	push.64*    %r7135
	push.64*    %r7136
	push.32     %r7137
	call        discharge2reg
	load.64*    %r7138 <- 0[e]
	load.32     %r7139 <- 0[%r7138]
	scast.32    %r7140 <- (32) %r7139
	seteq.32    %r7141 <- %r7140, $10
	br          %r7141, .L1663, .L1664

.L1663:
	load.64*    %r7142 <- 0[fs]
	load.64*    %r7143 <- 0[e]
	add.64*     %r7144 <- %r7143, $16
	load.64*    %r7145 <- 0[e]
	load.32     %r7146 <- 8[%r7145]
	push.64*    %r7142
	push.64*    %r7144
	push.32     %r7146
	call        luaK_concat
	br          .L1664

.L1664:
	load.64*    %r7147 <- 0[e]
	load.32     %r7148 <- 16[%r7147]
	load.64*    %r7149 <- 0[e]
	load.32     %r7150 <- 20[%r7149]
	setne.32    %r7151 <- %r7148, %r7150
	br          %r7151, .L1665, .L1666

.L1665:
	store.32    $0xffffffff -> 0[p_f]
	store.32    $0xffffffff -> 0[p_t]
	load.64*    %r7152 <- 0[fs]
	load.64*    %r7153 <- 0[e]
	load.32     %r7154 <- 16[%r7153]
	push.64*    %r7152
	push.32     %r7154
	call.32     %r7155 <- need_value
	br          %r7155, .L1667, .L1669

.L1669:
	load.64*    %r7156 <- 0[fs]
	load.64*    %r7157 <- 0[e]
	load.32     %r7158 <- 20[%r7157]
	push.64*    %r7156
	push.32     %r7158
	call.32     %r7159 <- need_value
	br          %r7159, .L1667, .L1668

.L1667:
	load.64*    %r7160 <- 0[e]
	load.32     %r7161 <- 0[%r7160]
	scast.32    %r7162 <- (32) %r7161
	seteq.32    %r7163 <- %r7162, $10
	br          %r7163, .L1670, .L1671

.L1670:
	phisrc.32   %phi303 <- $0xffffffff
	br          .L1672

.L1671:
	load.64*    %r7164 <- 0[fs]
	push.64*    %r7164
	call.32     %r7165 <- luaK_jump
	phisrc.32   %phi304 <- %r7165
	br          .L1672

.L1672:
	phi.32      %r7166 <- %phi303, %phi304
	store.32    %r7166 -> 0[fj]
	load.64*    %r7167 <- 0[fs]
	load.32     %r7168 <- 0[reg]
	push.64*    %r7167
	push.32     %r7168
	push.32     $0
	push.32     $1
	call.32     %r7169 <- code_label
	store.32    %r7169 -> 0[p_f]
	load.64*    %r7170 <- 0[fs]
	load.32     %r7171 <- 0[reg]
	push.64*    %r7170
	push.32     %r7171
	push.32     $1
	push.32     $0
	call.32     %r7172 <- code_label
	store.32    %r7172 -> 0[p_t]
	load.64*    %r7173 <- 0[fs]
	load.32     %r7174 <- 0[fj]
	push.64*    %r7173
	push.32     %r7174
	call        luaK_patchtohere
	br          .L1668

.L1668:
	load.64*    %r7175 <- 0[fs]
	push.64*    %r7175
	call.32     %r7176 <- luaK_getlabel
	store.32    %r7176 -> 0[final]
	load.64*    %r7177 <- 0[fs]
	load.64*    %r7178 <- 0[e]
	load.32     %r7179 <- 20[%r7178]
	load.32     %r7180 <- 0[final]
	load.32     %r7181 <- 0[reg]
	load.32     %r7182 <- 0[p_f]
	push.64*    %r7177
	push.32     %r7179
	push.32     %r7180
	push.32     %r7181
	push.32     %r7182
	call        patchlistaux
	load.64*    %r7183 <- 0[fs]
	load.64*    %r7184 <- 0[e]
	load.32     %r7185 <- 16[%r7184]
	load.32     %r7186 <- 0[final]
	load.32     %r7187 <- 0[reg]
	load.32     %r7188 <- 0[p_t]
	push.64*    %r7183
	push.32     %r7185
	push.32     %r7186
	push.32     %r7187
	push.32     %r7188
	call        patchlistaux
	br          .L1666

.L1666:
	load.64*    %r7189 <- 0[e]
	store.32    $0xffffffff -> 16[%r7189]
	load.64*    %r7190 <- 0[e]
	store.32    $0xffffffff -> 20[%r7190]
	load.32     %r7191 <- 0[reg]
	load.64*    %r7192 <- 0[e]
	store.32    %r7191 -> 8[%r7192]
	load.64*    %r7193 <- 0[e]
	store.32    $12 -> 0[%r7193]
	br          .L1673

.L1673:
	ret


luaK_exp2nextreg:
.L1674:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7194 <- 0[fs]
	load.64*    %r7195 <- 0[e]
	push.64*    %r7194
	push.64*    %r7195
	call        luaK_dischargevars
	load.64*    %r7196 <- 0[fs]
	load.64*    %r7197 <- 0[e]
	push.64*    %r7196
	push.64*    %r7197
	call        freeexp
	load.64*    %r7198 <- 0[fs]
	push.64*    %r7198
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r7199 <- 0[fs]
	load.64*    %r7200 <- 0[e]
	load.64*    %r7201 <- 0[fs]
	load.32     %r7202 <- 60[%r7201]
	sub.32      %r7203 <- %r7202, $1
	push.64*    %r7199
	push.64*    %r7200
	push.32     %r7203
	call        exp2reg
	br          .L1675

.L1675:
	ret


luaK_exp2anyreg:
.L1676:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7204 <- 0[fs]
	load.64*    %r7205 <- 0[e]
	push.64*    %r7204
	push.64*    %r7205
	call        luaK_dischargevars
	load.64*    %r7206 <- 0[e]
	load.32     %r7207 <- 0[%r7206]
	scast.32    %r7208 <- (32) %r7207
	seteq.32    %r7209 <- %r7208, $12
	br          %r7209, .L1677, .L1678

.L1677:
	load.64*    %r7210 <- 0[e]
	load.32     %r7211 <- 16[%r7210]
	load.64*    %r7212 <- 0[e]
	load.32     %r7213 <- 20[%r7212]
	setne.32    %r7214 <- %r7211, %r7213
	br          %r7214, .L1680, .L1679

.L1679:
	load.64*    %r7215 <- 0[e]
	load.32     %r7216 <- 8[%r7215]
	phisrc.32   %phi305(return) <- %r7216
	br          .L1681

.L1680:
	load.64*    %r7218 <- 0[e]
	load.32     %r7219 <- 8[%r7218]
	load.64*    %r7220 <- 0[fs]
	load.8      %r7221 <- 74[%r7220]
	cast.32     %r7222 <- (8) %r7221
	setge.32    %r7223 <- %r7219, %r7222
	br          %r7223, .L1682, .L1683

.L1682:
	load.64*    %r7224 <- 0[fs]
	load.64*    %r7225 <- 0[e]
	load.64*    %r7226 <- 0[e]
	load.32     %r7227 <- 8[%r7226]
	push.64*    %r7224
	push.64*    %r7225
	push.32     %r7227
	call        exp2reg
	load.64*    %r7228 <- 0[e]
	load.32     %r7229 <- 8[%r7228]
	phisrc.32   %phi306(return) <- %r7229
	br          .L1681

.L1683:
	br          .L1678

.L1678:
	load.64*    %r7230 <- 0[fs]
	load.64*    %r7231 <- 0[e]
	push.64*    %r7230
	push.64*    %r7231
	call        luaK_exp2nextreg
	load.64*    %r7232 <- 0[e]
	load.32     %r7233 <- 8[%r7232]
	phisrc.32   %phi307(return) <- %r7233
	br          .L1681

.L1681:
	phi.32      %r7217 <- %phi305(return), %phi306(return), %phi307(return)
	ret.32      %r7217


luaK_exp2val:
.L1684:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7234 <- 0[e]
	load.32     %r7235 <- 16[%r7234]
	load.64*    %r7236 <- 0[e]
	load.32     %r7237 <- 20[%r7236]
	setne.32    %r7238 <- %r7235, %r7237
	br          %r7238, .L1685, .L1686

.L1685:
	load.64*    %r7239 <- 0[fs]
	load.64*    %r7240 <- 0[e]
	push.64*    %r7239
	push.64*    %r7240
	call.32     %r7241 <- luaK_exp2anyreg
	br          .L1687

.L1686:
	load.64*    %r7242 <- 0[fs]
	load.64*    %r7243 <- 0[e]
	push.64*    %r7242
	push.64*    %r7243
	call        luaK_dischargevars
	br          .L1687

.L1687:
	ret


luaK_exp2RK:
.L1688:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7244 <- 0[fs]
	load.64*    %r7245 <- 0[e]
	push.64*    %r7244
	push.64*    %r7245
	call        luaK_exp2val
	load.64*    %r7246 <- 0[e]
	load.32     %r7247 <- 0[%r7246]
	switch.32   %r7247, 1 -> .L1693, 2 -> .L1691, 3 -> .L1692, 4 -> .L1694, 5 -> .L1690, default -> .L1695

.L1690:
	br          .L1691

.L1691:
	br          .L1692

.L1692:
	br          .L1693

.L1693:
	load.64*    %r7248 <- 0[fs]
	load.32     %r7249 <- 64[%r7248]
	setle.32    %r7250 <- %r7249, $255
	br          %r7250, .L1696, .L1697

.L1696:
	load.64*    %r7251 <- 0[e]
	load.32     %r7252 <- 0[%r7251]
	scast.32    %r7253 <- (32) %r7252
	seteq.32    %r7254 <- %r7253, $1
	br          %r7254, .L1698, .L1699

.L1698:
	load.64*    %r7255 <- 0[fs]
	push.64*    %r7255
	call.32     %r7256 <- nilK
	phisrc.32   %phi308 <- %r7256
	br          .L1700

.L1699:
	load.64*    %r7257 <- 0[e]
	load.32     %r7258 <- 0[%r7257]
	scast.32    %r7259 <- (32) %r7258
	seteq.32    %r7260 <- %r7259, $5
	br          %r7260, .L1701, .L1702

.L1701:
	load.64*    %r7261 <- 0[fs]
	load.64*    %r7262 <- 0[e]
	load.f64    %r7263 <- 8[%r7262]
	push.64*    %r7261
	push.f64    %r7263
	call.32     %r7264 <- luaK_numberK
	phisrc.32   %phi309 <- %r7264
	br          .L1703

.L1702:
	load.64*    %r7265 <- 0[fs]
	load.64*    %r7266 <- 0[e]
	load.32     %r7267 <- 0[%r7266]
	scast.32    %r7268 <- (32) %r7267
	seteq.32    %r7269 <- %r7268, $2
	push.64*    %r7265
	push.32     %r7269
	call.32     %r7270 <- boolK
	phisrc.32   %phi310 <- %r7270
	br          .L1703

.L1703:
	phi.32      %r7271 <- %phi309, %phi310
	phisrc.32   %phi311 <- %r7271
	br          .L1700

.L1700:
	phi.32      %r7272 <- %phi308, %phi311
	load.64*    %r7273 <- 0[e]
	store.32    %r7272 -> 8[%r7273]
	load.64*    %r7274 <- 0[e]
	store.32    $4 -> 0[%r7274]
	load.64*    %r7275 <- 0[e]
	load.32     %r7276 <- 8[%r7275]
	or.32       %r7277 <- %r7276, $256
	phisrc.32   %phi312(return) <- %r7277
	br          .L1704

.L1697:
	br          .L1689

.L1694:
	load.64*    %r7279 <- 0[e]
	load.32     %r7280 <- 8[%r7279]
	setle.32    %r7281 <- %r7280, $255
	br          %r7281, .L1706, .L1707

.L1706:
	load.64*    %r7282 <- 0[e]
	load.32     %r7283 <- 8[%r7282]
	or.32       %r7284 <- %r7283, $256
	phisrc.32   %phi313(return) <- %r7284
	br          .L1704

.L1707:
	br          .L1689

.L1695:
	br          .L1689

.L1689:
	load.64*    %r7285 <- 0[fs]
	load.64*    %r7286 <- 0[e]
	push.64*    %r7285
	push.64*    %r7286
	call.32     %r7287 <- luaK_exp2anyreg
	phisrc.32   %phi314(return) <- %r7287
	br          .L1704

.L1704:
	phi.32      %r7278 <- %phi312(return), %phi313(return), %phi314(return)
	ret.32      %r7278


luaK_storevar:
.L1709:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[var]
	store.64*   %arg3 -> 0[ex]
	load.64*    %r7288 <- 0[var]
	load.32     %r7289 <- 0[%r7288]
	switch.32   %r7289, 6 -> .L1711, 7 -> .L1712, 8 -> .L1713, 9 -> .L1714, default -> .L1715

.L1711:
	load.64*    %r7290 <- 0[fs]
	load.64*    %r7291 <- 0[ex]
	push.64*    %r7290
	push.64*    %r7291
	call        freeexp
	load.64*    %r7292 <- 0[fs]
	load.64*    %r7293 <- 0[ex]
	load.64*    %r7294 <- 0[var]
	load.32     %r7295 <- 8[%r7294]
	push.64*    %r7292
	push.64*    %r7293
	push.32     %r7295
	call        exp2reg
	br          .L1716

.L1712:
	load.64*    %r7296 <- 0[fs]
	load.64*    %r7297 <- 0[ex]
	push.64*    %r7296
	push.64*    %r7297
	call.32     %r7298 <- luaK_exp2anyreg
	store.32    %r7298 -> 0[e]
	load.64*    %r7299 <- 0[fs]
	load.32     %r7300 <- 0[e]
	load.64*    %r7301 <- 0[var]
	load.32     %r7302 <- 8[%r7301]
	push.64*    %r7299
	push.32     $8
	push.32     %r7300
	push.32     %r7302
	push.32     $0
	call.32     %r7303 <- luaK_codeABC
	br          .L1710

.L1713:
	load.64*    %r7304 <- 0[fs]
	load.64*    %r7305 <- 0[ex]
	push.64*    %r7304
	push.64*    %r7305
	call.32     %r7306 <- luaK_exp2anyreg
	store.32    %r7306 -> 0[e]
	load.64*    %r7307 <- 0[fs]
	load.32     %r7308 <- 0[e]
	load.64*    %r7309 <- 0[var]
	load.32     %r7310 <- 8[%r7309]
	scast.32    %r7311 <- (32) %r7310
	push.64*    %r7307
	push.32     $7
	push.32     %r7308
	push.32     %r7311
	call.32     %r7312 <- luaK_codeABx
	br          .L1710

.L1714:
	load.64*    %r7313 <- 0[fs]
	load.64*    %r7314 <- 0[ex]
	push.64*    %r7313
	push.64*    %r7314
	call.32     %r7315 <- luaK_exp2RK
	store.32    %r7315 -> 0[e]
	load.64*    %r7316 <- 0[fs]
	load.64*    %r7317 <- 0[var]
	load.32     %r7318 <- 8[%r7317]
	load.64*    %r7319 <- 0[var]
	load.32     %r7320 <- 12[%r7319]
	load.32     %r7321 <- 0[e]
	push.64*    %r7316
	push.32     $9
	push.32     %r7318
	push.32     %r7320
	push.32     %r7321
	call.32     %r7322 <- luaK_codeABC
	br          .L1710

.L1715:
	br          .L1710

.L1710:
	load.64*    %r7323 <- 0[fs]
	load.64*    %r7324 <- 0[ex]
	push.64*    %r7323
	push.64*    %r7324
	call        freeexp
	br          .L1716

.L1716:
	ret


luaK_self:
.L1717:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.64*   %arg3 -> 0[key]
	load.64*    %r7325 <- 0[fs]
	load.64*    %r7326 <- 0[e]
	push.64*    %r7325
	push.64*    %r7326
	call.32     %r7327 <- luaK_exp2anyreg
	load.64*    %r7328 <- 0[fs]
	load.64*    %r7329 <- 0[e]
	push.64*    %r7328
	push.64*    %r7329
	call        freeexp
	load.64*    %r7330 <- 0[fs]
	load.32     %r7331 <- 60[%r7330]
	store.32    %r7331 -> 0[func]
	load.64*    %r7332 <- 0[fs]
	push.64*    %r7332
	push.32     $2
	call        luaK_reserveregs
	load.64*    %r7333 <- 0[fs]
	load.32     %r7334 <- 0[func]
	load.64*    %r7335 <- 0[e]
	load.32     %r7336 <- 8[%r7335]
	load.64*    %r7337 <- 0[fs]
	load.64*    %r7338 <- 0[key]
	push.64*    %r7337
	push.64*    %r7338
	call.32     %r7339 <- luaK_exp2RK
	push.64*    %r7333
	push.32     $11
	push.32     %r7334
	push.32     %r7336
	push.32     %r7339
	call.32     %r7340 <- luaK_codeABC
	load.64*    %r7341 <- 0[fs]
	load.64*    %r7342 <- 0[key]
	push.64*    %r7341
	push.64*    %r7342
	call        freeexp
	load.32     %r7343 <- 0[func]
	load.64*    %r7344 <- 0[e]
	store.32    %r7343 -> 8[%r7344]
	load.64*    %r7345 <- 0[e]
	store.32    $12 -> 0[%r7345]
	br          .L1718

.L1718:
	ret


invertjump:
.L1719:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7346 <- 0[fs]
	load.64*    %r7347 <- 0[e]
	load.32     %r7348 <- 8[%r7347]
	push.64*    %r7346
	push.32     %r7348
	call.64*    %r7349 <- getjumpcontrol
	store.64*   %r7349 -> 0[pc]
	load.64*    %r7350 <- 0[pc]
	load.32     %r7351 <- 0[%r7350]
	and.32      %r7352 <- %r7351, $0xffffc03f
	load.64*    %r7353 <- 0[pc]
	load.32     %r7354 <- 0[%r7353]
	lsr.32      %r7355 <- %r7354, $6
	and.32      %r7356 <- %r7355, $255
	cast.32     %r7357 <- (32) %r7356
	seteq.32    %r7358 <- %r7357, $0
	scast.32    %r7359 <- (32) %r7358
	shl.32      %r7360 <- %r7359, $6
	and.32      %r7361 <- %r7360, $0x3fc0
	or.32       %r7362 <- %r7352, %r7361
	load.64*    %r7363 <- 0[pc]
	store.32    %r7362 -> 0[%r7363]
	br          .L1720

.L1720:
	ret


jumponcond:
.L1721:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[cond]
	load.64*    %r7364 <- 0[e]
	load.32     %r7365 <- 0[%r7364]
	scast.32    %r7366 <- (32) %r7365
	seteq.32    %r7367 <- %r7366, $11
	br          %r7367, .L1722, .L1723

.L1722:
	load.64*    %r7368 <- 0[fs]
	load.64*    %r7369 <- 0[%r7368]
	load.64*    %r7370 <- 24[%r7369]
	load.64*    %r7371 <- 0[e]
	load.32     %r7372 <- 8[%r7371]
	scast.64    %r7373 <- (32) %r7372
	muls.64     %r7374 <- %r7373, $4
	add.64*     %r7375 <- %r7370, %r7374
	load.32     %r7376 <- 0[%r7375]
	store.32    %r7376 -> 0[ie]
	load.32     %r7377 <- 0[ie]
	lsr.32      %r7378 <- %r7377, $0
	and.32      %r7379 <- %r7378, $63
	cast.32     %r7380 <- (32) %r7379
	scast.32    %r7381 <- (32) %r7380
	seteq.32    %r7382 <- %r7381, $19
	br          %r7382, .L1724, .L1725

.L1724:
	load.64*    %r7383 <- 0[fs]
	load.32     %r7384 <- 48[%r7383]
	sub.32      %r7385 <- %r7384, $1
	store.32    %r7385 -> 48[%r7383]
	load.64*    %r7386 <- 0[fs]
	load.32     %r7387 <- 0[ie]
	lsr.32      %r7388 <- %r7387, $23
	and.32      %r7389 <- %r7388, $511
	cast.32     %r7390 <- (32) %r7389
	load.32     %r7391 <- 0[cond]
	seteq.32    %r7392 <- %r7391, $0
	push.64*    %r7386
	push.32     $26
	push.32     %r7390
	push.32     $0
	push.32     %r7392
	call.32     %r7393 <- condjump
	phisrc.32   %phi315(return) <- %r7393
	br          .L1726

.L1725:
	br          .L1723

.L1723:
	load.64*    %r7395 <- 0[fs]
	load.64*    %r7396 <- 0[e]
	push.64*    %r7395
	push.64*    %r7396
	call        discharge2anyreg
	load.64*    %r7397 <- 0[fs]
	load.64*    %r7398 <- 0[e]
	push.64*    %r7397
	push.64*    %r7398
	call        freeexp
	load.64*    %r7399 <- 0[fs]
	load.64*    %r7400 <- 0[e]
	load.32     %r7401 <- 8[%r7400]
	load.32     %r7402 <- 0[cond]
	push.64*    %r7399
	push.32     $27
	push.32     $255
	push.32     %r7401
	push.32     %r7402
	call.32     %r7403 <- condjump
	phisrc.32   %phi316(return) <- %r7403
	br          .L1726

.L1726:
	phi.32      %r7394 <- %phi315(return), %phi316(return)
	ret.32      %r7394


luaK_goiftrue:
.L1727:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7404 <- 0[fs]
	load.64*    %r7405 <- 0[e]
	push.64*    %r7404
	push.64*    %r7405
	call        luaK_dischargevars
	load.64*    %r7406 <- 0[e]
	load.32     %r7407 <- 0[%r7406]
	switch.32   %r7407, 2 -> .L1731, 4 -> .L1729, 5 -> .L1730, 10 -> .L1732, default -> .L1733

.L1729:
	br          .L1730

.L1730:
	br          .L1731

.L1731:
	store.32    $0xffffffff -> 0[pc]
	br          .L1728

.L1732:
	load.64*    %r7408 <- 0[fs]
	load.64*    %r7409 <- 0[e]
	push.64*    %r7408
	push.64*    %r7409
	call        invertjump
	load.64*    %r7410 <- 0[e]
	load.32     %r7411 <- 8[%r7410]
	store.32    %r7411 -> 0[pc]
	br          .L1728

.L1733:
	load.64*    %r7412 <- 0[fs]
	load.64*    %r7413 <- 0[e]
	push.64*    %r7412
	push.64*    %r7413
	push.32     $0
	call.32     %r7414 <- jumponcond
	store.32    %r7414 -> 0[pc]
	br          .L1728

.L1728:
	load.64*    %r7415 <- 0[fs]
	load.64*    %r7416 <- 0[e]
	add.64*     %r7417 <- %r7416, $20
	load.32     %r7418 <- 0[pc]
	push.64*    %r7415
	push.64*    %r7417
	push.32     %r7418
	call        luaK_concat
	load.64*    %r7419 <- 0[fs]
	load.64*    %r7420 <- 0[e]
	load.32     %r7421 <- 16[%r7420]
	push.64*    %r7419
	push.32     %r7421
	call        luaK_patchtohere
	load.64*    %r7422 <- 0[e]
	store.32    $0xffffffff -> 16[%r7422]
	br          .L1734

.L1734:
	ret


luaK_goiffalse:
.L1735:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7423 <- 0[fs]
	load.64*    %r7424 <- 0[e]
	push.64*    %r7423
	push.64*    %r7424
	call        luaK_dischargevars
	load.64*    %r7425 <- 0[e]
	load.32     %r7426 <- 0[%r7425]
	switch.32   %r7426, 1 -> .L1737, 3 -> .L1738, 10 -> .L1739, default -> .L1740

.L1737:
	br          .L1738

.L1738:
	store.32    $0xffffffff -> 0[pc]
	br          .L1736

.L1739:
	load.64*    %r7427 <- 0[e]
	load.32     %r7428 <- 8[%r7427]
	store.32    %r7428 -> 0[pc]
	br          .L1736

.L1740:
	load.64*    %r7429 <- 0[fs]
	load.64*    %r7430 <- 0[e]
	push.64*    %r7429
	push.64*    %r7430
	push.32     $1
	call.32     %r7431 <- jumponcond
	store.32    %r7431 -> 0[pc]
	br          .L1736

.L1736:
	load.64*    %r7432 <- 0[fs]
	load.64*    %r7433 <- 0[e]
	add.64*     %r7434 <- %r7433, $16
	load.32     %r7435 <- 0[pc]
	push.64*    %r7432
	push.64*    %r7434
	push.32     %r7435
	call        luaK_concat
	load.64*    %r7436 <- 0[fs]
	load.64*    %r7437 <- 0[e]
	load.32     %r7438 <- 20[%r7437]
	push.64*    %r7436
	push.32     %r7438
	call        luaK_patchtohere
	load.64*    %r7439 <- 0[e]
	store.32    $0xffffffff -> 20[%r7439]
	br          .L1741

.L1741:
	ret


codenot:
.L1742:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7440 <- 0[fs]
	load.64*    %r7441 <- 0[e]
	push.64*    %r7440
	push.64*    %r7441
	call        luaK_dischargevars
	load.64*    %r7442 <- 0[e]
	load.32     %r7443 <- 0[%r7442]
	switch.32   %r7443, 1 -> .L1744, 2 -> .L1748, 3 -> .L1745, 4 -> .L1746, 5 -> .L1747, 10 -> .L1749, 11 -> .L1750, 12 -> .L1751, default -> .L1752

.L1744:
	br          .L1745

.L1745:
	load.64*    %r7444 <- 0[e]
	store.32    $2 -> 0[%r7444]
	br          .L1743

.L1746:
	br          .L1747

.L1747:
	br          .L1748

.L1748:
	load.64*    %r7445 <- 0[e]
	store.32    $3 -> 0[%r7445]
	br          .L1743

.L1749:
	load.64*    %r7446 <- 0[fs]
	load.64*    %r7447 <- 0[e]
	push.64*    %r7446
	push.64*    %r7447
	call        invertjump
	br          .L1743

.L1750:
	br          .L1751

.L1751:
	load.64*    %r7448 <- 0[fs]
	load.64*    %r7449 <- 0[e]
	push.64*    %r7448
	push.64*    %r7449
	call        discharge2anyreg
	load.64*    %r7450 <- 0[fs]
	load.64*    %r7451 <- 0[e]
	push.64*    %r7450
	push.64*    %r7451
	call        freeexp
	load.64*    %r7452 <- 0[fs]
	load.64*    %r7453 <- 0[e]
	load.32     %r7454 <- 8[%r7453]
	push.64*    %r7452
	push.32     $19
	push.32     $0
	push.32     %r7454
	push.32     $0
	call.32     %r7455 <- luaK_codeABC
	load.64*    %r7456 <- 0[e]
	store.32    %r7455 -> 8[%r7456]
	load.64*    %r7457 <- 0[e]
	store.32    $11 -> 0[%r7457]
	br          .L1743

.L1752:
	br          .L1743

.L1743:
	load.64*    %r7458 <- 0[e]
	load.32     %r7459 <- 20[%r7458]
	store.32    %r7459 -> 0[temp]
	load.64*    %r7460 <- 0[e]
	load.32     %r7461 <- 16[%r7460]
	load.64*    %r7462 <- 0[e]
	store.32    %r7461 -> 20[%r7462]
	load.32     %r7463 <- 0[temp]
	load.64*    %r7464 <- 0[e]
	store.32    %r7463 -> 16[%r7464]
	load.64*    %r7465 <- 0[fs]
	load.64*    %r7466 <- 0[e]
	load.32     %r7467 <- 20[%r7466]
	push.64*    %r7465
	push.32     %r7467
	call        removevalues
	load.64*    %r7468 <- 0[fs]
	load.64*    %r7469 <- 0[e]
	load.32     %r7470 <- 16[%r7469]
	push.64*    %r7468
	push.32     %r7470
	call        removevalues
	br          .L1753

.L1753:
	ret


luaK_indexed:
.L1754:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[k]
	load.64*    %r7471 <- 0[fs]
	load.64*    %r7472 <- 0[k]
	push.64*    %r7471
	push.64*    %r7472
	call.32     %r7473 <- luaK_exp2RK
	load.64*    %r7474 <- 0[t]
	store.32    %r7473 -> 12[%r7474]
	load.64*    %r7475 <- 0[t]
	store.32    $9 -> 0[%r7475]
	br          .L1755

.L1755:
	ret


constfolding:
.L1756:
	<entry-point>
	store.32    %arg1 -> 0[op]
	store.64*   %arg2 -> 0[e1]
	store.64*   %arg3 -> 0[e2]
	load.64*    %r7476 <- 0[e1]
	push.64*    %r7476
	call.32     %r7477 <- isnumeral
	br          %r7477, .L1759, .L1757

.L1759:
	load.64*    %r7478 <- 0[e2]
	push.64*    %r7478
	call.32     %r7479 <- isnumeral
	br          %r7479, .L1758, .L1757

.L1757:
	phisrc.32   %phi317(return) <- $0
	br          .L1760

.L1758:
	load.64*    %r7481 <- 0[e1]
	load.f64    %r7482 <- 8[%r7481]
	store.f64   %r7482 -> 0[v1]
	load.64*    %r7483 <- 0[e2]
	load.f64    %r7484 <- 8[%r7483]
	store.f64   %r7484 -> 0[v2]
	load.32     %r7485 <- 0[op]
	switch.32   %r7485, 12 -> .L1762, 13 -> .L1763, 14 -> .L1764, 15 -> .L1765, 16 -> .L1766, 17 -> .L1767, 18 -> .L1768, 20 -> .L1769, default -> .L1770

.L1762:
	load.f64    %r7486 <- 0[v1]
	load.f64    %r7487 <- 0[v2]
	add.f64     %r7488 <- %r7486, %r7487
	store.f64   %r7488 -> 0[r]
	br          .L1761

.L1763:
	load.f64    %r7489 <- 0[v1]
	load.f64    %r7490 <- 0[v2]
	sub.f64     %r7491 <- %r7489, %r7490
	store.f64   %r7491 -> 0[r]
	br          .L1761

.L1764:
	load.f64    %r7492 <- 0[v1]
	load.f64    %r7493 <- 0[v2]
	mulu.f64    %r7494 <- %r7492, %r7493
	store.f64   %r7494 -> 0[r]
	br          .L1761

.L1765:
	load.f64    %r7495 <- 0[v2]
	set.f64     %r7496 <- 0.000000
	seteq.32    %r7497 <- %r7495, %r7496
	br          %r7497, .L1771, .L1772

.L1771:
	phisrc.32   %phi318(return) <- $0
	br          .L1760

.L1772:
	load.f64    %r7498 <- 0[v1]
	load.f64    %r7499 <- 0[v2]
	divu.f64    %r7500 <- %r7498, %r7499
	store.f64   %r7500 -> 0[r]
	br          .L1761

.L1766:
	load.f64    %r7501 <- 0[v2]
	set.f64     %r7502 <- 0.000000
	seteq.32    %r7503 <- %r7501, %r7502
	br          %r7503, .L1773, .L1774

.L1773:
	phisrc.32   %phi319(return) <- $0
	br          .L1760

.L1774:
	load.f64    %r7504 <- 0[v1]
	load.f64    %r7505 <- 0[v1]
	load.f64    %r7506 <- 0[v2]
	divu.f64    %r7507 <- %r7505, %r7506
	push.f64    %r7507
	call.f64    %r7508 <- floor
	load.f64    %r7509 <- 0[v2]
	mulu.f64    %r7510 <- %r7508, %r7509
	sub.f64     %r7511 <- %r7504, %r7510
	store.f64   %r7511 -> 0[r]
	br          .L1761

.L1767:
	load.f64    %r7512 <- 0[v1]
	load.f64    %r7513 <- 0[v2]
	push.f64    %r7512
	push.f64    %r7513
	call.f64    %r7514 <- pow
	store.f64   %r7514 -> 0[r]
	br          .L1761

.L1768:
	load.f64    %r7515 <- 0[v1]
	neg.f64     %r7516 <- %r7515
	store.f64   %r7516 -> 0[r]
	br          .L1761

.L1769:
	phisrc.32   %phi320(return) <- $0
	br          .L1760

.L1770:
	store.f64   $0 -> 0[r]
	br          .L1761

.L1761:
	load.f64    %r7517 <- 0[r]
	load.f64    %r7518 <- 0[r]
	seteq.32    %r7519 <- %r7517, %r7518
	br          %r7519, .L1776, .L1775

.L1775:
	phisrc.32   %phi321(return) <- $0
	br          .L1760

.L1776:
	load.f64    %r7520 <- 0[r]
	load.64*    %r7521 <- 0[e1]
	store.f64   %r7520 -> 8[%r7521]
	phisrc.32   %phi322(return) <- $1
	br          .L1760

.L1760:
	phi.32      %r7480 <- %phi317(return), %phi318(return), %phi319(return), %phi320(return), %phi321(return), %phi322(return)
	ret.32      %r7480


codearith:
.L1777:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e1]
	store.64*   %arg4 -> 0[e2]
	load.32     %r7522 <- 0[op]
	load.64*    %r7523 <- 0[e1]
	load.64*    %r7524 <- 0[e2]
	push.32     %r7522
	push.64*    %r7523
	push.64*    %r7524
	call.32     %r7525 <- constfolding
	br          %r7525, .L1778, .L1779

.L1778:
	br          .L1780

.L1779:
	load.32     %r7526 <- 0[op]
	scast.32    %r7527 <- (32) %r7526
	setne.32    %r7528 <- %r7527, $18
	load.32     %r7529 <- 0[op]
	scast.32    %r7530 <- (32) %r7529
	setne.32    %r7531 <- %r7530, $20
	and-bool.32 %r7532 <- %r7528, %r7531
	br          %r7532, .L1782, .L1783

.L1782:
	load.64*    %r7533 <- 0[fs]
	load.64*    %r7534 <- 0[e2]
	push.64*    %r7533
	push.64*    %r7534
	call.32     %r7535 <- luaK_exp2RK
	phisrc.32   %phi323 <- %r7535
	br          .L1784

.L1783:
	phisrc.32   %phi324 <- $0
	br          .L1784

.L1784:
	phi.32      %r7536 <- %phi323, %phi324
	store.32    %r7536 -> 0[o2]
	load.64*    %r7537 <- 0[fs]
	load.64*    %r7538 <- 0[e1]
	push.64*    %r7537
	push.64*    %r7538
	call.32     %r7539 <- luaK_exp2RK
	store.32    %r7539 -> 0[o1]
	load.32     %r7540 <- 0[o1]
	load.32     %r7541 <- 0[o2]
	setgt.32    %r7542 <- %r7540, %r7541
	br          %r7542, .L1785, .L1786

.L1785:
	load.64*    %r7543 <- 0[fs]
	load.64*    %r7544 <- 0[e1]
	push.64*    %r7543
	push.64*    %r7544
	call        freeexp
	load.64*    %r7545 <- 0[fs]
	load.64*    %r7546 <- 0[e2]
	push.64*    %r7545
	push.64*    %r7546
	call        freeexp
	br          .L1787

.L1786:
	load.64*    %r7547 <- 0[fs]
	load.64*    %r7548 <- 0[e2]
	push.64*    %r7547
	push.64*    %r7548
	call        freeexp
	load.64*    %r7549 <- 0[fs]
	load.64*    %r7550 <- 0[e1]
	push.64*    %r7549
	push.64*    %r7550
	call        freeexp
	br          .L1787

.L1787:
	load.64*    %r7551 <- 0[fs]
	load.32     %r7552 <- 0[op]
	load.32     %r7553 <- 0[o1]
	load.32     %r7554 <- 0[o2]
	push.64*    %r7551
	push.32     %r7552
	push.32     $0
	push.32     %r7553
	push.32     %r7554
	call.32     %r7555 <- luaK_codeABC
	load.64*    %r7556 <- 0[e1]
	store.32    %r7555 -> 8[%r7556]
	load.64*    %r7557 <- 0[e1]
	store.32    $11 -> 0[%r7557]
	br          .L1781

.L1781:
	br          .L1780

.L1780:
	ret


codecomp:
.L1788:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.32    %arg3 -> 0[cond]
	store.64*   %arg4 -> 0[e1]
	store.64*   %arg5 -> 0[e2]
	load.64*    %r7558 <- 0[fs]
	load.64*    %r7559 <- 0[e1]
	push.64*    %r7558
	push.64*    %r7559
	call.32     %r7560 <- luaK_exp2RK
	store.32    %r7560 -> 0[o1]
	load.64*    %r7561 <- 0[fs]
	load.64*    %r7562 <- 0[e2]
	push.64*    %r7561
	push.64*    %r7562
	call.32     %r7563 <- luaK_exp2RK
	store.32    %r7563 -> 0[o2]
	load.64*    %r7564 <- 0[fs]
	load.64*    %r7565 <- 0[e2]
	push.64*    %r7564
	push.64*    %r7565
	call        freeexp
	load.64*    %r7566 <- 0[fs]
	load.64*    %r7567 <- 0[e1]
	push.64*    %r7566
	push.64*    %r7567
	call        freeexp
	load.32     %r7568 <- 0[cond]
	seteq.32    %r7569 <- %r7568, $0
	load.32     %r7570 <- 0[op]
	scast.32    %r7571 <- (32) %r7570
	setne.32    %r7572 <- %r7571, $23
	and-bool.32 %r7573 <- %r7569, %r7572
	br          %r7573, .L1789, .L1790

.L1789:
	load.32     %r7574 <- 0[o1]
	store.32    %r7574 -> 0[temp]
	load.32     %r7575 <- 0[o2]
	store.32    %r7575 -> 0[o1]
	load.32     %r7576 <- 0[temp]
	store.32    %r7576 -> 0[o2]
	store.32    $1 -> 0[cond]
	br          .L1790

.L1790:
	load.64*    %r7577 <- 0[fs]
	load.32     %r7578 <- 0[op]
	load.32     %r7579 <- 0[cond]
	load.32     %r7580 <- 0[o1]
	load.32     %r7581 <- 0[o2]
	push.64*    %r7577
	push.32     %r7578
	push.32     %r7579
	push.32     %r7580
	push.32     %r7581
	call.32     %r7582 <- condjump
	load.64*    %r7583 <- 0[e1]
	store.32    %r7582 -> 8[%r7583]
	load.64*    %r7584 <- 0[e1]
	store.32    $10 -> 0[%r7584]
	br          .L1791

.L1791:
	ret


luaK_prefix:
.L1792:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e]
	store.32    $0xffffffff -> 20[e2]
	store.32    $0xffffffff -> 16[e2]
	store.32    $5 -> 0[e2]
	store.f64   $0 -> 8[e2]
	load.32     %r7585 <- 0[op]
	switch.32   %r7585, 0 -> .L1794, 1 -> .L1795, 2 -> .L1796, default -> .L1797

.L1794:
	load.64*    %r7586 <- 0[e]
	push.64*    %r7586
	call.32     %r7587 <- isnumeral
	br          %r7587, .L1799, .L1798

.L1798:
	load.64*    %r7588 <- 0[fs]
	load.64*    %r7589 <- 0[e]
	push.64*    %r7588
	push.64*    %r7589
	call.32     %r7590 <- luaK_exp2anyreg
	br          .L1799

.L1799:
	load.64*    %r7591 <- 0[fs]
	load.64*    %r7592 <- 0[e]
	symaddr.64* %r7593 <- e2
	push.64*    %r7591
	push.32     $18
	push.64*    %r7592
	push.64*    %r7593
	call        codearith
	br          .L1793

.L1795:
	load.64*    %r7594 <- 0[fs]
	load.64*    %r7595 <- 0[e]
	push.64*    %r7594
	push.64*    %r7595
	call        codenot
	br          .L1793

.L1796:
	load.64*    %r7596 <- 0[fs]
	load.64*    %r7597 <- 0[e]
	push.64*    %r7596
	push.64*    %r7597
	call.32     %r7598 <- luaK_exp2anyreg
	load.64*    %r7599 <- 0[fs]
	load.64*    %r7600 <- 0[e]
	symaddr.64* %r7601 <- e2
	push.64*    %r7599
	push.32     $20
	push.64*    %r7600
	push.64*    %r7601
	call        codearith
	br          .L1793

.L1797:
	br          .L1793

.L1793:
	ret


luaK_infix:
.L1800:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[v]
	load.32     %r7602 <- 0[op]
	switch.32   %r7602, 0 -> .L1805, 1 -> .L1806, 2 -> .L1807, 3 -> .L1808, 4 -> .L1809, 5 -> .L1810, 6 -> .L1804, 13 -> .L1802, 14 -> .L1803, default -> .L1811

.L1802:
	load.64*    %r7603 <- 0[fs]
	load.64*    %r7604 <- 0[v]
	push.64*    %r7603
	push.64*    %r7604
	call        luaK_goiftrue
	br          .L1801

.L1803:
	load.64*    %r7605 <- 0[fs]
	load.64*    %r7606 <- 0[v]
	push.64*    %r7605
	push.64*    %r7606
	call        luaK_goiffalse
	br          .L1801

.L1804:
	load.64*    %r7607 <- 0[fs]
	load.64*    %r7608 <- 0[v]
	push.64*    %r7607
	push.64*    %r7608
	call        luaK_exp2nextreg
	br          .L1801

.L1805:
	br          .L1806

.L1806:
	br          .L1807

.L1807:
	br          .L1808

.L1808:
	br          .L1809

.L1809:
	br          .L1810

.L1810:
	load.64*    %r7609 <- 0[v]
	push.64*    %r7609
	call.32     %r7610 <- isnumeral
	br          %r7610, .L1813, .L1812

.L1812:
	load.64*    %r7611 <- 0[fs]
	load.64*    %r7612 <- 0[v]
	push.64*    %r7611
	push.64*    %r7612
	call.32     %r7613 <- luaK_exp2RK
	br          .L1813

.L1813:
	br          .L1801

.L1811:
	load.64*    %r7614 <- 0[fs]
	load.64*    %r7615 <- 0[v]
	push.64*    %r7614
	push.64*    %r7615
	call.32     %r7616 <- luaK_exp2RK
	br          .L1801

.L1801:
	ret


luaK_posfix:
.L1814:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[op]
	store.64*   %arg3 -> 0[e1]
	store.64*   %arg4 -> 0[e2]
	load.32     %r7617 <- 0[op]
	switch.32   %r7617, 0 -> .L1819, 1 -> .L1820, 2 -> .L1821, 3 -> .L1822, 4 -> .L1823, 5 -> .L1824, 6 -> .L1818, 7 -> .L1826, 8 -> .L1825, 9 -> .L1827, 10 -> .L1828, 11 -> .L1829, 12 -> .L1830, 13 -> .L1816, 14 -> .L1817, default -> .L1831

.L1816:
	load.64*    %r7618 <- 0[fs]
	load.64*    %r7619 <- 0[e2]
	push.64*    %r7618
	push.64*    %r7619
	call        luaK_dischargevars
	load.64*    %r7620 <- 0[fs]
	load.64*    %r7621 <- 0[e2]
	add.64*     %r7622 <- %r7621, $20
	load.64*    %r7623 <- 0[e1]
	load.32     %r7624 <- 20[%r7623]
	push.64*    %r7620
	push.64*    %r7622
	push.32     %r7624
	call        luaK_concat
	load.64*    %r7625 <- 0[e1]
	cast.64*    %r7626 <- (64) %r7625
	load.64*    %r7627 <- 0[e2]
	cast.64*    %r7628 <- (64) %r7627
	push.64*    %r7626
	push.64*    %r7628
	push.64     $24
	call.64*    %r7629 <- memcpy
	br          .L1815

.L1817:
	load.64*    %r7630 <- 0[fs]
	load.64*    %r7631 <- 0[e2]
	push.64*    %r7630
	push.64*    %r7631
	call        luaK_dischargevars
	load.64*    %r7632 <- 0[fs]
	load.64*    %r7633 <- 0[e2]
	add.64*     %r7634 <- %r7633, $16
	load.64*    %r7635 <- 0[e1]
	load.32     %r7636 <- 16[%r7635]
	push.64*    %r7632
	push.64*    %r7634
	push.32     %r7636
	call        luaK_concat
	load.64*    %r7637 <- 0[e1]
	cast.64*    %r7638 <- (64) %r7637
	load.64*    %r7639 <- 0[e2]
	cast.64*    %r7640 <- (64) %r7639
	push.64*    %r7638
	push.64*    %r7640
	push.64     $24
	call.64*    %r7641 <- memcpy
	br          .L1815

.L1818:
	load.64*    %r7642 <- 0[fs]
	load.64*    %r7643 <- 0[e2]
	push.64*    %r7642
	push.64*    %r7643
	call        luaK_exp2val
	load.64*    %r7644 <- 0[e2]
	load.32     %r7645 <- 0[%r7644]
	scast.32    %r7646 <- (32) %r7645
	seteq.32    %r7647 <- %r7646, $11
	br          %r7647, .L1834, .L1833

.L1834:
	load.64*    %r7648 <- 0[fs]
	load.64*    %r7649 <- 0[%r7648]
	load.64*    %r7650 <- 24[%r7649]
	load.64*    %r7651 <- 0[e2]
	load.32     %r7652 <- 8[%r7651]
	scast.64    %r7653 <- (32) %r7652
	muls.64     %r7654 <- %r7653, $4
	add.64*     %r7655 <- %r7650, %r7654
	load.32     %r7656 <- 0[%r7655]
	lsr.32      %r7657 <- %r7656, $0
	and.32      %r7658 <- %r7657, $63
	cast.32     %r7659 <- (32) %r7658
	scast.32    %r7660 <- (32) %r7659
	seteq.32    %r7661 <- %r7660, $21
	br          %r7661, .L1832, .L1833

.L1832:
	load.64*    %r7662 <- 0[fs]
	load.64*    %r7663 <- 0[e1]
	push.64*    %r7662
	push.64*    %r7663
	call        freeexp
	load.64*    %r7664 <- 0[fs]
	load.64*    %r7665 <- 0[%r7664]
	load.64*    %r7666 <- 24[%r7665]
	load.64*    %r7667 <- 0[e2]
	load.32     %r7668 <- 8[%r7667]
	scast.64    %r7669 <- (32) %r7668
	muls.64     %r7670 <- %r7669, $4
	add.64*     %r7671 <- %r7666, %r7670
	load.32     %r7672 <- 0[%r7671]
	and.32      %r7673 <- %r7672, $0x7fffff
	load.64*    %r7674 <- 0[e1]
	load.32     %r7675 <- 8[%r7674]
	scast.32    %r7676 <- (32) %r7675
	shl.32      %r7677 <- %r7676, $23
	and.32      %r7678 <- %r7677, $0xff800000
	or.32       %r7679 <- %r7673, %r7678
	load.64*    %r7680 <- 0[fs]
	load.64*    %r7681 <- 0[%r7680]
	load.64*    %r7682 <- 24[%r7681]
	load.64*    %r7683 <- 0[e2]
	load.32     %r7684 <- 8[%r7683]
	scast.64    %r7685 <- (32) %r7684
	muls.64     %r7686 <- %r7685, $4
	add.64*     %r7687 <- %r7682, %r7686
	store.32    %r7679 -> 0[%r7687]
	load.64*    %r7688 <- 0[e1]
	store.32    $11 -> 0[%r7688]
	load.64*    %r7689 <- 0[e2]
	load.32     %r7690 <- 8[%r7689]
	load.64*    %r7691 <- 0[e1]
	store.32    %r7690 -> 8[%r7691]
	br          .L1835

.L1833:
	load.64*    %r7692 <- 0[fs]
	load.64*    %r7693 <- 0[e2]
	push.64*    %r7692
	push.64*    %r7693
	call        luaK_exp2nextreg
	load.64*    %r7694 <- 0[fs]
	load.64*    %r7695 <- 0[e1]
	load.64*    %r7696 <- 0[e2]
	push.64*    %r7694
	push.32     $21
	push.64*    %r7695
	push.64*    %r7696
	call        codearith
	br          .L1835

.L1835:
	br          .L1815

.L1819:
	load.64*    %r7697 <- 0[fs]
	load.64*    %r7698 <- 0[e1]
	load.64*    %r7699 <- 0[e2]
	push.64*    %r7697
	push.32     $12
	push.64*    %r7698
	push.64*    %r7699
	call        codearith
	br          .L1815

.L1820:
	load.64*    %r7700 <- 0[fs]
	load.64*    %r7701 <- 0[e1]
	load.64*    %r7702 <- 0[e2]
	push.64*    %r7700
	push.32     $13
	push.64*    %r7701
	push.64*    %r7702
	call        codearith
	br          .L1815

.L1821:
	load.64*    %r7703 <- 0[fs]
	load.64*    %r7704 <- 0[e1]
	load.64*    %r7705 <- 0[e2]
	push.64*    %r7703
	push.32     $14
	push.64*    %r7704
	push.64*    %r7705
	call        codearith
	br          .L1815

.L1822:
	load.64*    %r7706 <- 0[fs]
	load.64*    %r7707 <- 0[e1]
	load.64*    %r7708 <- 0[e2]
	push.64*    %r7706
	push.32     $15
	push.64*    %r7707
	push.64*    %r7708
	call        codearith
	br          .L1815

.L1823:
	load.64*    %r7709 <- 0[fs]
	load.64*    %r7710 <- 0[e1]
	load.64*    %r7711 <- 0[e2]
	push.64*    %r7709
	push.32     $16
	push.64*    %r7710
	push.64*    %r7711
	call        codearith
	br          .L1815

.L1824:
	load.64*    %r7712 <- 0[fs]
	load.64*    %r7713 <- 0[e1]
	load.64*    %r7714 <- 0[e2]
	push.64*    %r7712
	push.32     $17
	push.64*    %r7713
	push.64*    %r7714
	call        codearith
	br          .L1815

.L1825:
	load.64*    %r7715 <- 0[fs]
	load.64*    %r7716 <- 0[e1]
	load.64*    %r7717 <- 0[e2]
	push.64*    %r7715
	push.32     $23
	push.32     $1
	push.64*    %r7716
	push.64*    %r7717
	call        codecomp
	br          .L1815

.L1826:
	load.64*    %r7718 <- 0[fs]
	load.64*    %r7719 <- 0[e1]
	load.64*    %r7720 <- 0[e2]
	push.64*    %r7718
	push.32     $23
	push.32     $0
	push.64*    %r7719
	push.64*    %r7720
	call        codecomp
	br          .L1815

.L1827:
	load.64*    %r7721 <- 0[fs]
	load.64*    %r7722 <- 0[e1]
	load.64*    %r7723 <- 0[e2]
	push.64*    %r7721
	push.32     $24
	push.32     $1
	push.64*    %r7722
	push.64*    %r7723
	call        codecomp
	br          .L1815

.L1828:
	load.64*    %r7724 <- 0[fs]
	load.64*    %r7725 <- 0[e1]
	load.64*    %r7726 <- 0[e2]
	push.64*    %r7724
	push.32     $25
	push.32     $1
	push.64*    %r7725
	push.64*    %r7726
	call        codecomp
	br          .L1815

.L1829:
	load.64*    %r7727 <- 0[fs]
	load.64*    %r7728 <- 0[e1]
	load.64*    %r7729 <- 0[e2]
	push.64*    %r7727
	push.32     $24
	push.32     $0
	push.64*    %r7728
	push.64*    %r7729
	call        codecomp
	br          .L1815

.L1830:
	load.64*    %r7730 <- 0[fs]
	load.64*    %r7731 <- 0[e1]
	load.64*    %r7732 <- 0[e2]
	push.64*    %r7730
	push.32     $25
	push.32     $0
	push.64*    %r7731
	push.64*    %r7732
	call        codecomp
	br          .L1815

.L1831:
	br          .L1815

.L1815:
	ret


luaK_fixline:
.L1836:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[line]
	load.32     %r7733 <- 0[line]
	load.64*    %r7734 <- 0[fs]
	load.64*    %r7735 <- 0[%r7734]
	load.64*    %r7736 <- 40[%r7735]
	load.64*    %r7737 <- 0[fs]
	load.32     %r7738 <- 48[%r7737]
	sub.32      %r7739 <- %r7738, $1
	scast.64    %r7740 <- (32) %r7739
	muls.64     %r7741 <- %r7740, $4
	add.64*     %r7742 <- %r7736, %r7741
	store.32    %r7733 -> 0[%r7742]
	br          .L1837

.L1837:
	ret


luaK_code:
.L1838:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[i]
	store.32    %arg3 -> 0[line]
	load.64*    %r7743 <- 0[fs]
	load.64*    %r7744 <- 0[%r7743]
	store.64*   %r7744 -> 0[f]
	load.64*    %r7745 <- 0[fs]
	push.64*    %r7745
	call        dischargejpc
	load.64*    %r7746 <- 0[fs]
	load.32     %r7747 <- 48[%r7746]
	add.32      %r7748 <- %r7747, $1
	load.64*    %r7749 <- 0[f]
	load.32     %r7750 <- 80[%r7749]
	setgt.32    %r7751 <- %r7748, %r7750
	br          %r7751, .L1839, .L1840

.L1839:
	load.64*    %r7752 <- 0[fs]
	load.64*    %r7753 <- 32[%r7752]
	load.64*    %r7754 <- 0[f]
	load.64*    %r7755 <- 24[%r7754]
	cast.64*    %r7756 <- (64) %r7755
	load.64*    %r7757 <- 0[f]
	add.64*     %r7758 <- %r7757, $80
	symaddr.64* %r7759 <- <anon symbol:0x62d0013528b0>
	push.64*    %r7753
	push.64*    %r7756
	push.64*    %r7758
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7759
	call.64*    %r7760 <- luaM_growaux_
	ptrcast.64* %r7761 <- (64) %r7760
	load.64*    %r7762 <- 0[f]
	store.64*   %r7761 -> 24[%r7762]
	br          .L1840

.L1840:
	load.32     %r7763 <- 0[i]
	load.64*    %r7764 <- 0[f]
	load.64*    %r7765 <- 24[%r7764]
	load.64*    %r7766 <- 0[fs]
	load.32     %r7767 <- 48[%r7766]
	scast.64    %r7768 <- (32) %r7767
	muls.64     %r7769 <- %r7768, $4
	add.64*     %r7770 <- %r7765, %r7769
	store.32    %r7763 -> 0[%r7770]
	load.64*    %r7771 <- 0[fs]
	load.32     %r7772 <- 48[%r7771]
	add.32      %r7773 <- %r7772, $1
	load.64*    %r7774 <- 0[f]
	load.32     %r7775 <- 84[%r7774]
	setgt.32    %r7776 <- %r7773, %r7775
	br          %r7776, .L1841, .L1842

.L1841:
	load.64*    %r7777 <- 0[fs]
	load.64*    %r7778 <- 32[%r7777]
	load.64*    %r7779 <- 0[f]
	load.64*    %r7780 <- 40[%r7779]
	cast.64*    %r7781 <- (64) %r7780
	load.64*    %r7782 <- 0[f]
	add.64*     %r7783 <- %r7782, $84
	symaddr.64* %r7784 <- <anon symbol:0x62d001353d88>
	push.64*    %r7778
	push.64*    %r7781
	push.64*    %r7783
	push.64     $4
	push.32     $0x7ffffffd
	push.64*    %r7784
	call.64*    %r7785 <- luaM_growaux_
	ptrcast.64* %r7786 <- (64) %r7785
	load.64*    %r7787 <- 0[f]
	store.64*   %r7786 -> 40[%r7787]
	br          .L1842

.L1842:
	load.32     %r7788 <- 0[line]
	load.64*    %r7789 <- 0[f]
	load.64*    %r7790 <- 40[%r7789]
	load.64*    %r7791 <- 0[fs]
	load.32     %r7792 <- 48[%r7791]
	scast.64    %r7793 <- (32) %r7792
	muls.64     %r7794 <- %r7793, $4
	add.64*     %r7795 <- %r7790, %r7794
	store.32    %r7788 -> 0[%r7795]
	load.64*    %r7796 <- 0[fs]
	load.32     %r7797 <- 48[%r7796]
	add.32      %r7798 <- %r7797, $1
	store.32    %r7798 -> 48[%r7796]
	phisrc.32   %phi325(return) <- %r7797
	br          .L1843

.L1843:
	phi.32      %r7799 <- %phi325(return)
	ret.32      %r7797


luaK_codeABC:
.L1844:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[o]
	store.32    %arg3 -> 0[a]
	store.32    %arg4 -> 0[b]
	store.32    %arg5 -> 0[c]
	load.64*    %r7800 <- 0[fs]
	load.32     %r7801 <- 0[o]
	scast.32    %r7802 <- (32) %r7801
	shl.32      %r7803 <- %r7802, $0
	load.32     %r7804 <- 0[a]
	scast.32    %r7805 <- (32) %r7804
	shl.32      %r7806 <- %r7805, $6
	or.32       %r7807 <- %r7803, %r7806
	load.32     %r7808 <- 0[b]
	scast.32    %r7809 <- (32) %r7808
	shl.32      %r7810 <- %r7809, $23
	or.32       %r7811 <- %r7807, %r7810
	load.32     %r7812 <- 0[c]
	scast.32    %r7813 <- (32) %r7812
	shl.32      %r7814 <- %r7813, $14
	or.32       %r7815 <- %r7811, %r7814
	load.64*    %r7816 <- 0[fs]
	load.64*    %r7817 <- 24[%r7816]
	load.32     %r7818 <- 8[%r7817]
	push.64*    %r7800
	push.32     %r7815
	push.32     %r7818
	call.32     %r7819 <- luaK_code
	phisrc.32   %phi326(return) <- %r7819
	br          .L1845

.L1845:
	phi.32      %r7820 <- %phi326(return)
	ret.32      %r7819


luaK_codeABx:
.L1846:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[o]
	store.32    %arg3 -> 0[a]
	store.32    %arg4 -> 0[bc]
	load.64*    %r7821 <- 0[fs]
	load.32     %r7822 <- 0[o]
	scast.32    %r7823 <- (32) %r7822
	shl.32      %r7824 <- %r7823, $0
	load.32     %r7825 <- 0[a]
	scast.32    %r7826 <- (32) %r7825
	shl.32      %r7827 <- %r7826, $6
	or.32       %r7828 <- %r7824, %r7827
	load.32     %r7829 <- 0[bc]
	cast.32     %r7830 <- (32) %r7829
	shl.32      %r7831 <- %r7830, $14
	or.32       %r7832 <- %r7828, %r7831
	load.64*    %r7833 <- 0[fs]
	load.64*    %r7834 <- 24[%r7833]
	load.32     %r7835 <- 8[%r7834]
	push.64*    %r7821
	push.32     %r7832
	push.32     %r7835
	call.32     %r7836 <- luaK_code
	phisrc.32   %phi327(return) <- %r7836
	br          .L1847

.L1847:
	phi.32      %r7837 <- %phi327(return)
	ret.32      %r7836


luaK_setlist:
.L1848:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[base]
	store.32    %arg3 -> 0[nelems]
	store.32    %arg4 -> 0[tostore]
	load.32     %r7838 <- 0[nelems]
	sub.32      %r7839 <- %r7838, $1
	divs.32     %r7840 <- %r7839, $50
	add.32      %r7841 <- %r7840, $1
	store.32    %r7841 -> 0[c]
	load.32     %r7842 <- 0[tostore]
	load.32     %r7843 <- 0[tostore]
	seteq.32    %r7844 <- %r7843, $0xffffffff
	select.32   %r7845 <- %r7844, $0, %r7842
	store.32    %r7845 -> 0[b]
	load.32     %r7846 <- 0[c]
	setle.32    %r7847 <- %r7846, $511
	br          %r7847, .L1849, .L1850

.L1849:
	load.64*    %r7848 <- 0[fs]
	load.32     %r7849 <- 0[base]
	load.32     %r7850 <- 0[b]
	load.32     %r7851 <- 0[c]
	push.64*    %r7848
	push.32     $34
	push.32     %r7849
	push.32     %r7850
	push.32     %r7851
	call.32     %r7852 <- luaK_codeABC
	br          .L1851

.L1850:
	load.64*    %r7853 <- 0[fs]
	load.32     %r7854 <- 0[base]
	load.32     %r7855 <- 0[b]
	push.64*    %r7853
	push.32     $34
	push.32     %r7854
	push.32     %r7855
	push.32     $0
	call.32     %r7856 <- luaK_codeABC
	load.64*    %r7857 <- 0[fs]
	load.32     %r7858 <- 0[c]
	scast.32    %r7859 <- (32) %r7858
	load.64*    %r7860 <- 0[fs]
	load.64*    %r7861 <- 24[%r7860]
	load.32     %r7862 <- 8[%r7861]
	push.64*    %r7857
	push.32     %r7859
	push.32     %r7862
	call.32     %r7863 <- luaK_code
	br          .L1851

.L1851:
	load.32     %r7864 <- 0[base]
	add.32      %r7865 <- %r7864, $1
	load.64*    %r7866 <- 0[fs]
	store.32    %r7865 -> 60[%r7866]
	br          .L1852

.L1852:
	ret


anchor_token:
.L1853:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r7867 <- 0[ls]
	load.32     %r7868 <- 16[%r7867]
	seteq.32    %r7869 <- %r7868, $285
	br          %r7869, .L1854, .L1856

.L1856:
	load.64*    %r7870 <- 0[ls]
	load.32     %r7871 <- 16[%r7870]
	seteq.32    %r7872 <- %r7871, $286
	br          %r7872, .L1854, .L1855

.L1854:
	load.64*    %r7873 <- 0[ls]
	load.64*    %r7874 <- 24[%r7873]
	store.64*   %r7874 -> 0[ts]
	load.64*    %r7875 <- 0[ls]
	load.64*    %r7876 <- 0[ts]
	add.64*     %r7877 <- %r7876, $24
	ptrcast.64* %r7878 <- (64) %r7877
	load.64*    %r7879 <- 0[ts]
	load.64     %r7880 <- 16[%r7879]
	push.64*    %r7875
	push.64*    %r7878
	push.64     %r7880
	call.64*    %r7881 <- luaX_newstring
	br          .L1855

.L1855:
	ret


error_expected:
.L1857:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[token]
	load.64*    %r7882 <- 0[ls]
	load.64*    %r7883 <- 0[ls]
	load.64*    %r7884 <- 56[%r7883]
	symaddr.64* %r7885 <- <anon symbol:0x62d001357f48>
	load.64*    %r7886 <- 0[ls]
	load.32     %r7887 <- 0[token]
	push.64*    %r7886
	push.32     %r7887
	call.64*    %r7888 <- luaX_token2str
	push.64*    %r7884
	push.64*    %r7885
	push.64*    %r7888
	call.64*    %r7889 <- luaO_pushfstring
	push.64*    %r7882
	push.64*    %r7889
	call        luaX_syntaxerror
	br          .L1858

.L1858:
	ret


errorlimit:
.L1859:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[limit]
	store.64*   %arg3 -> 0[what]
	load.64*    %r7890 <- 0[fs]
	load.64*    %r7891 <- 0[%r7890]
	load.32     %r7892 <- 96[%r7891]
	seteq.32    %r7893 <- %r7892, $0
	br          %r7893, .L1860, .L1861

.L1860:
	load.64*    %r7894 <- 0[fs]
	load.64*    %r7895 <- 32[%r7894]
	symaddr.64* %r7896 <- <anon symbol:0x62d001359168>
	load.32     %r7897 <- 0[limit]
	load.64*    %r7898 <- 0[what]
	push.64*    %r7895
	push.64*    %r7896
	push.32     %r7897
	push.64*    %r7898
	call.64*    %r7899 <- luaO_pushfstring
	phisrc.64*  %phi328 <- %r7899
	br          .L1862

.L1861:
	load.64*    %r7900 <- 0[fs]
	load.64*    %r7901 <- 32[%r7900]
	symaddr.64* %r7902 <- <anon symbol:0x62d001358858>
	load.64*    %r7903 <- 0[fs]
	load.64*    %r7904 <- 0[%r7903]
	load.32     %r7905 <- 96[%r7904]
	load.32     %r7906 <- 0[limit]
	load.64*    %r7907 <- 0[what]
	push.64*    %r7901
	push.64*    %r7902
	push.32     %r7905
	push.32     %r7906
	push.64*    %r7907
	call.64*    %r7908 <- luaO_pushfstring
	phisrc.64*  %phi329 <- %r7908
	br          .L1862

.L1862:
	phi.64*     %r7909 <- %phi328, %phi329
	store.64*   %r7909 -> 0[msg]
	load.64*    %r7910 <- 0[fs]
	load.64*    %r7911 <- 24[%r7910]
	load.64*    %r7912 <- 0[msg]
	push.64*    %r7911
	push.64*    %r7912
	push.32     $0
	call        luaX_lexerror
	br          .L1863

.L1863:
	ret


testnext:
.L1864:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r7913 <- 0[ls]
	load.32     %r7914 <- 16[%r7913]
	load.32     %r7915 <- 0[c]
	seteq.32    %r7916 <- %r7914, %r7915
	br          %r7916, .L1865, .L1866

.L1865:
	load.64*    %r7917 <- 0[ls]
	push.64*    %r7917
	call        luaX_next
	phisrc.32   %phi330(return) <- $1
	br          .L1867

.L1866:
	phisrc.32   %phi331(return) <- $0
	br          .L1867

.L1867:
	phi.32      %r7918 <- %phi330(return), %phi331(return)
	ret.32      %r7918


check:
.L1869:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r7919 <- 0[ls]
	load.32     %r7920 <- 16[%r7919]
	load.32     %r7921 <- 0[c]
	setne.32    %r7922 <- %r7920, %r7921
	br          %r7922, .L1870, .L1871

.L1870:
	load.64*    %r7923 <- 0[ls]
	load.32     %r7924 <- 0[c]
	push.64*    %r7923
	push.32     %r7924
	call        error_expected
	br          .L1871

.L1871:
	ret


checknext:
.L1872:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[c]
	load.64*    %r7925 <- 0[ls]
	load.32     %r7926 <- 0[c]
	push.64*    %r7925
	push.32     %r7926
	call        check
	load.64*    %r7927 <- 0[ls]
	push.64*    %r7927
	call        luaX_next
	br          .L1873

.L1873:
	ret


check_match:
.L1874:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[what]
	store.32    %arg3 -> 0[who]
	store.32    %arg4 -> 0[where]
	load.64*    %r7928 <- 0[ls]
	load.32     %r7929 <- 0[what]
	push.64*    %r7928
	push.32     %r7929
	call.32     %r7930 <- testnext
	br          %r7930, .L1876, .L1875

.L1875:
	load.32     %r7931 <- 0[where]
	load.64*    %r7932 <- 0[ls]
	load.32     %r7933 <- 4[%r7932]
	seteq.32    %r7934 <- %r7931, %r7933
	br          %r7934, .L1877, .L1878

.L1877:
	load.64*    %r7935 <- 0[ls]
	load.32     %r7936 <- 0[what]
	push.64*    %r7935
	push.32     %r7936
	call        error_expected
	br          .L1879

.L1878:
	load.64*    %r7937 <- 0[ls]
	load.64*    %r7938 <- 0[ls]
	load.64*    %r7939 <- 56[%r7938]
	symaddr.64* %r7940 <- <anon symbol:0x62d001359e18>
	load.64*    %r7941 <- 0[ls]
	load.32     %r7942 <- 0[what]
	push.64*    %r7941
	push.32     %r7942
	call.64*    %r7943 <- luaX_token2str
	load.64*    %r7944 <- 0[ls]
	load.32     %r7945 <- 0[who]
	push.64*    %r7944
	push.32     %r7945
	call.64*    %r7946 <- luaX_token2str
	load.32     %r7947 <- 0[where]
	push.64*    %r7939
	push.64*    %r7940
	push.64*    %r7943
	push.64*    %r7946
	push.32     %r7947
	call.64*    %r7948 <- luaO_pushfstring
	push.64*    %r7937
	push.64*    %r7948
	call        luaX_syntaxerror
	br          .L1879

.L1879:
	br          .L1876

.L1876:
	ret


str_checkname:
.L1880:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r7949 <- 0[ls]
	push.64*    %r7949
	push.32     $285
	call        check
	load.64*    %r7950 <- 0[ls]
	load.64*    %r7951 <- 24[%r7950]
	store.64*   %r7951 -> 0[ts]
	load.64*    %r7952 <- 0[ls]
	push.64*    %r7952
	call        luaX_next
	load.64*    %r7953 <- 0[ts]
	phisrc.64*  %phi332(return) <- %r7953
	br          .L1881

.L1881:
	phi.64*     %r7954 <- %phi332(return)
	ret.64*     %r7953


init_exp:
.L1882:
	<entry-point>
	store.64*   %arg1 -> 0[e]
	store.32    %arg2 -> 0[k]
	store.32    %arg3 -> 0[i]
	load.64*    %r7955 <- 0[e]
	store.32    $0xffffffff -> 16[%r7955]
	load.64*    %r7956 <- 0[e]
	store.32    $0xffffffff -> 20[%r7956]
	load.32     %r7957 <- 0[k]
	load.64*    %r7958 <- 0[e]
	store.32    %r7957 -> 0[%r7958]
	load.32     %r7959 <- 0[i]
	load.64*    %r7960 <- 0[e]
	store.32    %r7959 -> 8[%r7960]
	br          .L1883

.L1883:
	ret


codestring:
.L1884:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	store.64*   %arg3 -> 0[s]
	load.64*    %r7961 <- 0[e]
	load.64*    %r7962 <- 0[ls]
	load.64*    %r7963 <- 48[%r7962]
	load.64*    %r7964 <- 0[s]
	push.64*    %r7963
	push.64*    %r7964
	call.32     %r7965 <- luaK_stringK
	push.64*    %r7961
	push.32     $4
	push.32     %r7965
	call        init_exp
	br          .L1885

.L1885:
	ret


checkname:
.L1886:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	load.64*    %r7966 <- 0[ls]
	load.64*    %r7967 <- 0[e]
	load.64*    %r7968 <- 0[ls]
	push.64*    %r7968
	call.64*    %r7969 <- str_checkname
	push.64*    %r7966
	push.64*    %r7967
	push.64*    %r7969
	call        codestring
	br          .L1887

.L1887:
	ret


registerlocalvar:
.L1888:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[varname]
	load.64*    %r7970 <- 0[ls]
	load.64*    %r7971 <- 48[%r7970]
	store.64*   %r7971 -> 0[fs]
	load.64*    %r7972 <- 0[fs]
	load.64*    %r7973 <- 0[%r7972]
	store.64*   %r7973 -> 0[f]
	load.64*    %r7974 <- 0[f]
	load.32     %r7975 <- 92[%r7974]
	store.32    %r7975 -> 0[oldsize]
	load.64*    %r7976 <- 0[fs]
	load.16     %r7977 <- 72[%r7976]
	scast.32    %r7978 <- (16) %r7977
	add.32      %r7979 <- %r7978, $1
	load.64*    %r7980 <- 0[f]
	load.32     %r7981 <- 92[%r7980]
	setgt.32    %r7982 <- %r7979, %r7981
	br          %r7982, .L1889, .L1890

.L1889:
	load.64*    %r7983 <- 0[ls]
	load.64*    %r7984 <- 56[%r7983]
	load.64*    %r7985 <- 0[f]
	load.64*    %r7986 <- 48[%r7985]
	cast.64*    %r7987 <- (64) %r7986
	load.64*    %r7988 <- 0[f]
	add.64*     %r7989 <- %r7988, $92
	symaddr.64* %r7990 <- <anon symbol:0x62d00135bfa0>
	push.64*    %r7984
	push.64*    %r7987
	push.64*    %r7989
	push.64     $16
	push.32     $0x7fff
	push.64*    %r7990
	call.64*    %r7991 <- luaM_growaux_
	ptrcast.64* %r7992 <- (64) %r7991
	load.64*    %r7993 <- 0[f]
	store.64*   %r7992 -> 48[%r7993]
	br          .L1890

.L1890:
	br          .L1894

.L1894:
	load.32     %r7994 <- 0[oldsize]
	load.64*    %r7995 <- 0[f]
	load.32     %r7996 <- 92[%r7995]
	setlt.32    %r7997 <- %r7994, %r7996
	br          %r7997, .L1891, .L1893

.L1891:
	load.64*    %r7998 <- 0[f]
	load.64*    %r7999 <- 48[%r7998]
	load.32     %r8000 <- 0[oldsize]
	add.32      %r8001 <- %r8000, $1
	store.32    %r8001 -> 0[oldsize]
	scast.64    %r8002 <- (32) %r8000
	muls.64     %r8003 <- %r8002, $16
	add.64*     %r8004 <- %r7999, %r8003
	store.64*   $0 -> 0[%r8004]
	br          .L1892

.L1892:
	br          .L1894

.L1893:
	load.64*    %r8005 <- 0[varname]
	load.64*    %r8006 <- 0[f]
	load.64*    %r8007 <- 48[%r8006]
	load.64*    %r8008 <- 0[fs]
	load.16     %r8009 <- 72[%r8008]
	scast.64    %r8010 <- (16) %r8009
	muls.64     %r8011 <- %r8010, $16
	add.64*     %r8012 <- %r8007, %r8011
	store.64*   %r8005 -> 0[%r8012]
	load.64*    %r8013 <- 0[varname]
	ptrcast.64* %r8014 <- (64) %r8013
	load.8      %r8015 <- 9[%r8014]
	cast.32     %r8016 <- (8) %r8015
	and.32      %r8017 <- %r8016, $3
	br          %r8017, .L1897, .L1896

.L1897:
	load.64*    %r8018 <- 0[f]
	ptrcast.64* %r8019 <- (64) %r8018
	load.8      %r8020 <- 9[%r8019]
	cast.32     %r8021 <- (8) %r8020
	and.32      %r8022 <- %r8021, $4
	br          %r8022, .L1895, .L1896

.L1895:
	load.64*    %r8023 <- 0[ls]
	load.64*    %r8024 <- 56[%r8023]
	load.64*    %r8025 <- 0[f]
	ptrcast.64* %r8026 <- (64) %r8025
	load.64*    %r8027 <- 0[varname]
	ptrcast.64* %r8028 <- (64) %r8027
	push.64*    %r8024
	push.64*    %r8026
	push.64*    %r8028
	call        luaC_barrierf
	br          .L1896

.L1896:
	load.64*    %r8029 <- 0[fs]
	load.16     %r8030 <- 72[%r8029]
	add.16      %r8031 <- %r8030, $1
	store.16    %r8031 -> 72[%r8029]
	scast.32    %r8032 <- (16) %r8030
	phisrc.32   %phi333(return) <- %r8032
	br          .L1898

.L1898:
	phi.32      %r8033 <- %phi333(return)
	ret.32      %r8032


new_localvar:
.L1899:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[name]
	store.32    %arg3 -> 0[n]
	load.64*    %r8034 <- 0[ls]
	load.64*    %r8035 <- 48[%r8034]
	store.64*   %r8035 -> 0[fs]
	load.64*    %r8036 <- 0[fs]
	load.8      %r8037 <- 74[%r8036]
	cast.32     %r8038 <- (8) %r8037
	load.32     %r8039 <- 0[n]
	add.32      %r8040 <- %r8038, %r8039
	add.32      %r8041 <- %r8040, $1
	setgt.32    %r8042 <- %r8041, $200
	br          %r8042, .L1900, .L1901

.L1900:
	load.64*    %r8043 <- 0[fs]
	symaddr.64* %r8044 <- <anon symbol:0x62d00135d478>
	push.64*    %r8043
	push.32     $200
	push.64*    %r8044
	call        errorlimit
	br          .L1901

.L1901:
	load.64*    %r8045 <- 0[ls]
	load.64*    %r8046 <- 0[name]
	push.64*    %r8045
	push.64*    %r8046
	call.32     %r8047 <- registerlocalvar
	scast.16    %r8048 <- (32) %r8047
	load.64*    %r8049 <- 0[fs]
	add.64*     %r8050 <- %r8049, $196
	load.64*    %r8051 <- 0[fs]
	load.8      %r8052 <- 74[%r8051]
	cast.32     %r8053 <- (8) %r8052
	load.32     %r8054 <- 0[n]
	add.32      %r8055 <- %r8053, %r8054
	scast.64    %r8056 <- (32) %r8055
	muls.64     %r8057 <- %r8056, $2
	add.64*     %r8058 <- %r8050, %r8057
	store.16    %r8048 -> 0[%r8058]
	br          .L1902

.L1902:
	ret


adjustlocalvars:
.L1903:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[nvars]
	load.64*    %r8059 <- 0[ls]
	load.64*    %r8060 <- 48[%r8059]
	store.64*   %r8060 -> 0[fs]
	load.64*    %r8061 <- 0[fs]
	load.8      %r8062 <- 74[%r8061]
	cast.32     %r8063 <- (8) %r8062
	load.32     %r8064 <- 0[nvars]
	add.32      %r8065 <- %r8063, %r8064
	scast.8     %r8066 <- (32) %r8065
	load.64*    %r8067 <- 0[fs]
	store.8     %r8066 -> 74[%r8067]
	br          .L1907

.L1907:
	load.32     %r8068 <- 0[nvars]
	br          %r8068, .L1904, .L1906

.L1904:
	load.64*    %r8069 <- 0[fs]
	load.32     %r8070 <- 48[%r8069]
	load.64*    %r8071 <- 0[fs]
	load.64*    %r8072 <- 0[%r8071]
	load.64*    %r8073 <- 48[%r8072]
	load.64*    %r8074 <- 0[fs]
	add.64*     %r8075 <- %r8074, $196
	load.64*    %r8076 <- 0[fs]
	load.8      %r8077 <- 74[%r8076]
	cast.32     %r8078 <- (8) %r8077
	load.32     %r8079 <- 0[nvars]
	sub.32      %r8080 <- %r8078, %r8079
	scast.64    %r8081 <- (32) %r8080
	muls.64     %r8082 <- %r8081, $2
	add.64*     %r8083 <- %r8075, %r8082
	load.16     %r8084 <- 0[%r8083]
	cast.64     %r8085 <- (16) %r8084
	muls.64     %r8086 <- %r8085, $16
	add.64*     %r8087 <- %r8073, %r8086
	store.32    %r8070 -> 8[%r8087]
	br          .L1905

.L1905:
	load.32     %r8088 <- 0[nvars]
	sub.32      %r8089 <- %r8088, $1
	store.32    %r8089 -> 0[nvars]
	br          .L1907

.L1906:
	ret


removevars:
.L1908:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[tolevel]
	load.64*    %r8090 <- 0[ls]
	load.64*    %r8091 <- 48[%r8090]
	store.64*   %r8091 -> 0[fs]
	br          .L1912

.L1912:
	load.64*    %r8092 <- 0[fs]
	load.8      %r8093 <- 74[%r8092]
	cast.32     %r8094 <- (8) %r8093
	load.32     %r8095 <- 0[tolevel]
	setgt.32    %r8096 <- %r8094, %r8095
	br          %r8096, .L1909, .L1911

.L1909:
	load.64*    %r8097 <- 0[fs]
	load.32     %r8098 <- 48[%r8097]
	load.64*    %r8099 <- 0[fs]
	load.64*    %r8100 <- 0[%r8099]
	load.64*    %r8101 <- 48[%r8100]
	load.64*    %r8102 <- 0[fs]
	add.64*     %r8103 <- %r8102, $196
	load.64*    %r8104 <- 0[fs]
	load.8      %r8105 <- 74[%r8104]
	sub.8       %r8106 <- %r8105, $1
	store.8     %r8106 -> 74[%r8104]
	cast.64     %r8107 <- (8) %r8106
	muls.64     %r8108 <- %r8107, $2
	add.64*     %r8109 <- %r8103, %r8108
	load.16     %r8110 <- 0[%r8109]
	cast.64     %r8111 <- (16) %r8110
	muls.64     %r8112 <- %r8111, $16
	add.64*     %r8113 <- %r8101, %r8112
	store.32    %r8098 -> 12[%r8113]
	br          .L1910

.L1910:
	br          .L1912

.L1911:
	ret


indexupvalue:
.L1913:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[name]
	store.64*   %arg3 -> 0[v]
	load.64*    %r8114 <- 0[fs]
	load.64*    %r8115 <- 0[%r8114]
	store.64*   %r8115 -> 0[f]
	load.64*    %r8116 <- 0[f]
	load.32     %r8117 <- 72[%r8116]
	store.32    %r8117 -> 0[oldsize]
	store.32    $0 -> 0[i]
	br          .L1917

.L1917:
	load.32     %r8118 <- 0[i]
	load.64*    %r8119 <- 0[f]
	load.8      %r8120 <- 112[%r8119]
	cast.32     %r8121 <- (8) %r8120
	setlt.32    %r8122 <- %r8118, %r8121
	br          %r8122, .L1914, .L1916

.L1914:
	load.64*    %r8123 <- 0[fs]
	add.64*     %r8124 <- %r8123, $75
	load.32     %r8125 <- 0[i]
	scast.64    %r8126 <- (32) %r8125
	muls.64     %r8127 <- %r8126, $2
	add.64*     %r8128 <- %r8124, %r8127
	load.8      %r8129 <- 0[%r8128]
	cast.32     %r8130 <- (8) %r8129
	load.64*    %r8131 <- 0[v]
	load.32     %r8132 <- 0[%r8131]
	scast.32    %r8133 <- (32) %r8132
	seteq.32    %r8134 <- %r8130, %r8133
	br          %r8134, .L1920, .L1919

.L1920:
	load.64*    %r8135 <- 0[fs]
	add.64*     %r8136 <- %r8135, $75
	load.32     %r8137 <- 0[i]
	scast.64    %r8138 <- (32) %r8137
	muls.64     %r8139 <- %r8138, $2
	add.64*     %r8140 <- %r8136, %r8139
	load.8      %r8141 <- 1[%r8140]
	cast.32     %r8142 <- (8) %r8141
	load.64*    %r8143 <- 0[v]
	load.32     %r8144 <- 8[%r8143]
	seteq.32    %r8145 <- %r8142, %r8144
	br          %r8145, .L1918, .L1919

.L1918:
	load.32     %r8146 <- 0[i]
	phisrc.32   %phi334(return) <- %r8146
	br          .L1921

.L1919:
	br          .L1915

.L1915:
	load.32     %r8148 <- 0[i]
	add.32      %r8149 <- %r8148, $1
	store.32    %r8149 -> 0[i]
	br          .L1917

.L1916:
	load.64*    %r8150 <- 0[f]
	load.8      %r8151 <- 112[%r8150]
	cast.32     %r8152 <- (8) %r8151
	add.32      %r8153 <- %r8152, $1
	setgt.32    %r8154 <- %r8153, $60
	br          %r8154, .L1922, .L1923

.L1922:
	load.64*    %r8155 <- 0[fs]
	symaddr.64* %r8156 <- <anon symbol:0x62d001362eb0>
	push.64*    %r8155
	push.32     $60
	push.64*    %r8156
	call        errorlimit
	br          .L1923

.L1923:
	load.64*    %r8157 <- 0[f]
	load.8      %r8158 <- 112[%r8157]
	cast.32     %r8159 <- (8) %r8158
	add.32      %r8160 <- %r8159, $1
	load.64*    %r8161 <- 0[f]
	load.32     %r8162 <- 72[%r8161]
	setgt.32    %r8163 <- %r8160, %r8162
	br          %r8163, .L1924, .L1925

.L1924:
	load.64*    %r8164 <- 0[fs]
	load.64*    %r8165 <- 32[%r8164]
	load.64*    %r8166 <- 0[f]
	load.64*    %r8167 <- 56[%r8166]
	cast.64*    %r8168 <- (64) %r8167
	load.64*    %r8169 <- 0[f]
	add.64*     %r8170 <- %r8169, $72
	symaddr.64* %r8171 <- <anon symbol:0x62d001363e18>
	push.64*    %r8165
	push.64*    %r8168
	push.64*    %r8170
	push.64     $8
	push.32     $0x7ffffffd
	push.64*    %r8171
	call.64*    %r8172 <- luaM_growaux_
	ptrcast.64* %r8173 <- (64) %r8172
	load.64*    %r8174 <- 0[f]
	store.64*   %r8173 -> 56[%r8174]
	br          .L1925

.L1925:
	br          .L1929

.L1929:
	load.32     %r8175 <- 0[oldsize]
	load.64*    %r8176 <- 0[f]
	load.32     %r8177 <- 72[%r8176]
	setlt.32    %r8178 <- %r8175, %r8177
	br          %r8178, .L1926, .L1928

.L1926:
	load.64*    %r8179 <- 0[f]
	load.64*    %r8180 <- 56[%r8179]
	load.32     %r8181 <- 0[oldsize]
	add.32      %r8182 <- %r8181, $1
	store.32    %r8182 -> 0[oldsize]
	scast.64    %r8183 <- (32) %r8181
	muls.64     %r8184 <- %r8183, $8
	add.64*     %r8185 <- %r8180, %r8184
	store.64*   $0 -> 0[%r8185]
	br          .L1927

.L1927:
	br          .L1929

.L1928:
	load.64*    %r8186 <- 0[name]
	load.64*    %r8187 <- 0[f]
	load.64*    %r8188 <- 56[%r8187]
	load.64*    %r8189 <- 0[f]
	load.8      %r8190 <- 112[%r8189]
	cast.64     %r8191 <- (8) %r8190
	muls.64     %r8192 <- %r8191, $8
	add.64*     %r8193 <- %r8188, %r8192
	store.64*   %r8186 -> 0[%r8193]
	load.64*    %r8194 <- 0[name]
	ptrcast.64* %r8195 <- (64) %r8194
	load.8      %r8196 <- 9[%r8195]
	cast.32     %r8197 <- (8) %r8196
	and.32      %r8198 <- %r8197, $3
	br          %r8198, .L1932, .L1931

.L1932:
	load.64*    %r8199 <- 0[f]
	ptrcast.64* %r8200 <- (64) %r8199
	load.8      %r8201 <- 9[%r8200]
	cast.32     %r8202 <- (8) %r8201
	and.32      %r8203 <- %r8202, $4
	br          %r8203, .L1930, .L1931

.L1930:
	load.64*    %r8204 <- 0[fs]
	load.64*    %r8205 <- 32[%r8204]
	load.64*    %r8206 <- 0[f]
	ptrcast.64* %r8207 <- (64) %r8206
	load.64*    %r8208 <- 0[name]
	ptrcast.64* %r8209 <- (64) %r8208
	push.64*    %r8205
	push.64*    %r8207
	push.64*    %r8209
	call        luaC_barrierf
	br          .L1931

.L1931:
	load.64*    %r8210 <- 0[v]
	load.32     %r8211 <- 0[%r8210]
	scast.8     %r8212 <- (32) %r8211
	load.64*    %r8213 <- 0[fs]
	add.64*     %r8214 <- %r8213, $75
	load.64*    %r8215 <- 0[f]
	load.8      %r8216 <- 112[%r8215]
	cast.64     %r8217 <- (8) %r8216
	muls.64     %r8218 <- %r8217, $2
	add.64*     %r8219 <- %r8214, %r8218
	store.8     %r8212 -> 0[%r8219]
	load.64*    %r8220 <- 0[v]
	load.32     %r8221 <- 8[%r8220]
	scast.8     %r8222 <- (32) %r8221
	load.64*    %r8223 <- 0[fs]
	add.64*     %r8224 <- %r8223, $75
	load.64*    %r8225 <- 0[f]
	load.8      %r8226 <- 112[%r8225]
	cast.64     %r8227 <- (8) %r8226
	muls.64     %r8228 <- %r8227, $2
	add.64*     %r8229 <- %r8224, %r8228
	store.8     %r8222 -> 1[%r8229]
	load.64*    %r8230 <- 0[f]
	load.8      %r8231 <- 112[%r8230]
	add.8       %r8232 <- %r8231, $1
	store.8     %r8232 -> 112[%r8230]
	cast.32     %r8233 <- (8) %r8231
	phisrc.32   %phi335(return) <- %r8233
	br          .L1921

.L1921:
	phi.32      %r8147 <- %phi334(return), %phi335(return)
	ret.32      %r8147


searchvar:
.L1933:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[n]
	load.64*    %r8234 <- 0[fs]
	load.8      %r8235 <- 74[%r8234]
	cast.32     %r8236 <- (8) %r8235
	sub.32      %r8237 <- %r8236, $1
	store.32    %r8237 -> 0[i]
	br          .L1937

.L1937:
	load.32     %r8238 <- 0[i]
	setge.32    %r8239 <- %r8238, $0
	br          %r8239, .L1934, .L1936

.L1934:
	load.64*    %r8240 <- 0[n]
	load.64*    %r8241 <- 0[fs]
	load.64*    %r8242 <- 0[%r8241]
	load.64*    %r8243 <- 48[%r8242]
	load.64*    %r8244 <- 0[fs]
	add.64*     %r8245 <- %r8244, $196
	load.32     %r8246 <- 0[i]
	scast.64    %r8247 <- (32) %r8246
	muls.64     %r8248 <- %r8247, $2
	add.64*     %r8249 <- %r8245, %r8248
	load.16     %r8250 <- 0[%r8249]
	cast.64     %r8251 <- (16) %r8250
	muls.64     %r8252 <- %r8251, $16
	add.64*     %r8253 <- %r8243, %r8252
	load.64*    %r8254 <- 0[%r8253]
	seteq.32    %r8255 <- %r8240, %r8254
	br          %r8255, .L1938, .L1939

.L1938:
	load.32     %r8256 <- 0[i]
	phisrc.32   %phi336(return) <- %r8256
	br          .L1940

.L1939:
	br          .L1935

.L1935:
	load.32     %r8258 <- 0[i]
	sub.32      %r8259 <- %r8258, $1
	store.32    %r8259 -> 0[i]
	br          .L1937

.L1936:
	phisrc.32   %phi337(return) <- $0xffffffff
	br          .L1940

.L1940:
	phi.32      %r8257 <- %phi336(return), %phi337(return)
	ret.32      %r8257


markupval:
.L1941:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.32    %arg2 -> 0[level]
	load.64*    %r8260 <- 0[fs]
	load.64*    %r8261 <- 40[%r8260]
	store.64*   %r8261 -> 0[bl]
	br          .L1945

.L1945:
	load.64*    %r8262 <- 0[bl]
	br          %r8262, .L1946, .L1944

.L1946:
	load.64*    %r8263 <- 0[bl]
	load.8      %r8264 <- 12[%r8263]
	cast.32     %r8265 <- (8) %r8264
	load.32     %r8266 <- 0[level]
	setgt.32    %r8267 <- %r8265, %r8266
	br          %r8267, .L1942, .L1944

.L1942:
	load.64*    %r8268 <- 0[bl]
	load.64*    %r8269 <- 0[%r8268]
	store.64*   %r8269 -> 0[bl]
	br          .L1943

.L1943:
	br          .L1945

.L1944:
	load.64*    %r8270 <- 0[bl]
	br          %r8270, .L1947, .L1948

.L1947:
	load.64*    %r8271 <- 0[bl]
	store.8     $1 -> 13[%r8271]
	br          .L1948

.L1948:
	ret


singlevaraux:
.L1949:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[n]
	store.64*   %arg3 -> 0[var]
	store.32    %arg4 -> 0[base]
	load.64*    %r8272 <- 0[fs]
	seteq.32    %r8273 <- %r8272, $0
	br          %r8273, .L1950, .L1951

.L1950:
	load.64*    %r8274 <- 0[var]
	push.64*    %r8274
	push.32     $8
	push.32     $255
	call        init_exp
	phisrc.32   %phi338(return) <- $8
	br          .L1952

.L1951:
	load.64*    %r8276 <- 0[fs]
	load.64*    %r8277 <- 0[n]
	push.64*    %r8276
	push.64*    %r8277
	call.32     %r8278 <- searchvar
	store.32    %r8278 -> 0[v]
	load.32     %r8279 <- 0[v]
	setge.32    %r8280 <- %r8279, $0
	br          %r8280, .L1954, .L1955

.L1954:
	load.64*    %r8281 <- 0[var]
	load.32     %r8282 <- 0[v]
	push.64*    %r8281
	push.32     $6
	push.32     %r8282
	call        init_exp
	load.32     %r8283 <- 0[base]
	br          %r8283, .L1957, .L1956

.L1956:
	load.64*    %r8284 <- 0[fs]
	load.32     %r8285 <- 0[v]
	push.64*    %r8284
	push.32     %r8285
	call        markupval
	br          .L1957

.L1957:
	phisrc.32   %phi339(return) <- $6
	br          .L1952

.L1955:
	load.64*    %r8286 <- 0[fs]
	load.64*    %r8287 <- 16[%r8286]
	load.64*    %r8288 <- 0[n]
	load.64*    %r8289 <- 0[var]
	push.64*    %r8287
	push.64*    %r8288
	push.64*    %r8289
	push.32     $0
	call.32     %r8290 <- singlevaraux
	seteq.32    %r8291 <- %r8290, $8
	br          %r8291, .L1959, .L1960

.L1959:
	phisrc.32   %phi340(return) <- $8
	br          .L1952

.L1960:
	load.64*    %r8292 <- 0[fs]
	load.64*    %r8293 <- 0[n]
	load.64*    %r8294 <- 0[var]
	push.64*    %r8292
	push.64*    %r8293
	push.64*    %r8294
	call.32     %r8295 <- indexupvalue
	load.64*    %r8296 <- 0[var]
	store.32    %r8295 -> 8[%r8296]
	load.64*    %r8297 <- 0[var]
	store.32    $7 -> 0[%r8297]
	phisrc.32   %phi341(return) <- $7
	br          .L1952

.L1952:
	phi.32      %r8275 <- %phi338(return), %phi339(return), %phi340(return), %phi341(return)
	ret.32      %r8275


singlevar:
.L1961:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[var]
	load.64*    %r8298 <- 0[ls]
	push.64*    %r8298
	call.64*    %r8299 <- str_checkname
	store.64*   %r8299 -> 0[varname]
	load.64*    %r8300 <- 0[ls]
	load.64*    %r8301 <- 48[%r8300]
	store.64*   %r8301 -> 0[fs]
	load.64*    %r8302 <- 0[fs]
	load.64*    %r8303 <- 0[varname]
	load.64*    %r8304 <- 0[var]
	push.64*    %r8302
	push.64*    %r8303
	push.64*    %r8304
	push.32     $1
	call.32     %r8305 <- singlevaraux
	seteq.32    %r8306 <- %r8305, $8
	br          %r8306, .L1962, .L1963

.L1962:
	load.64*    %r8307 <- 0[fs]
	load.64*    %r8308 <- 0[varname]
	push.64*    %r8307
	push.64*    %r8308
	call.32     %r8309 <- luaK_stringK
	load.64*    %r8310 <- 0[var]
	store.32    %r8309 -> 8[%r8310]
	br          .L1963

.L1963:
	ret


adjust_assign:
.L1964:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[nvars]
	store.32    %arg3 -> 0[nexps]
	store.64*   %arg4 -> 0[e]
	load.64*    %r8311 <- 0[ls]
	load.64*    %r8312 <- 48[%r8311]
	store.64*   %r8312 -> 0[fs]
	load.32     %r8313 <- 0[nvars]
	load.32     %r8314 <- 0[nexps]
	sub.32      %r8315 <- %r8313, %r8314
	store.32    %r8315 -> 0[extra]
	load.64*    %r8316 <- 0[e]
	load.32     %r8317 <- 0[%r8316]
	scast.32    %r8318 <- (32) %r8317
	seteq.32    %r8319 <- %r8318, $13
	br          %r8319, .L1965, .L1967

.L1967:
	load.64*    %r8320 <- 0[e]
	load.32     %r8321 <- 0[%r8320]
	scast.32    %r8322 <- (32) %r8321
	seteq.32    %r8323 <- %r8322, $14
	br          %r8323, .L1965, .L1966

.L1965:
	load.32     %r8324 <- 0[extra]
	add.32      %r8325 <- %r8324, $1
	store.32    %r8325 -> 0[extra]
	load.32     %r8326 <- 0[extra]
	setlt.32    %r8327 <- %r8326, $0
	br          %r8327, .L1968, .L1969

.L1968:
	store.32    $0 -> 0[extra]
	br          .L1969

.L1969:
	load.64*    %r8328 <- 0[fs]
	load.64*    %r8329 <- 0[e]
	load.32     %r8330 <- 0[extra]
	push.64*    %r8328
	push.64*    %r8329
	push.32     %r8330
	call        luaK_setreturns
	load.32     %r8331 <- 0[extra]
	setgt.32    %r8332 <- %r8331, $1
	br          %r8332, .L1970, .L1971

.L1970:
	load.64*    %r8333 <- 0[fs]
	load.32     %r8334 <- 0[extra]
	sub.32      %r8335 <- %r8334, $1
	push.64*    %r8333
	push.32     %r8335
	call        luaK_reserveregs
	br          .L1971

.L1971:
	br          .L1972

.L1966:
	load.64*    %r8336 <- 0[e]
	load.32     %r8337 <- 0[%r8336]
	scast.32    %r8338 <- (32) %r8337
	setne.32    %r8339 <- %r8338, $0
	br          %r8339, .L1973, .L1974

.L1973:
	load.64*    %r8340 <- 0[fs]
	load.64*    %r8341 <- 0[e]
	push.64*    %r8340
	push.64*    %r8341
	call        luaK_exp2nextreg
	br          .L1974

.L1974:
	load.32     %r8342 <- 0[extra]
	setgt.32    %r8343 <- %r8342, $0
	br          %r8343, .L1975, .L1976

.L1975:
	load.64*    %r8344 <- 0[fs]
	load.32     %r8345 <- 60[%r8344]
	store.32    %r8345 -> 0[reg]
	load.64*    %r8346 <- 0[fs]
	load.32     %r8347 <- 0[extra]
	push.64*    %r8346
	push.32     %r8347
	call        luaK_reserveregs
	load.64*    %r8348 <- 0[fs]
	load.32     %r8349 <- 0[reg]
	load.32     %r8350 <- 0[extra]
	push.64*    %r8348
	push.32     %r8349
	push.32     %r8350
	call        luaK_nil
	br          .L1976

.L1976:
	br          .L1972

.L1972:
	ret


enterlevel:
.L1977:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8351 <- 0[ls]
	load.64*    %r8352 <- 56[%r8351]
	load.16     %r8353 <- 96[%r8352]
	add.16      %r8354 <- %r8353, $1
	store.16    %r8354 -> 96[%r8352]
	cast.32     %r8355 <- (16) %r8354
	setgt.32    %r8356 <- %r8355, $200
	br          %r8356, .L1978, .L1979

.L1978:
	load.64*    %r8357 <- 0[ls]
	symaddr.64* %r8358 <- <anon symbol:0x62d001368210>
	push.64*    %r8357
	push.64*    %r8358
	push.32     $0
	call        luaX_lexerror
	br          .L1979

.L1979:
	ret


enterblock:
.L1980:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[bl]
	store.8     %arg3 -> 0[isbreakable]
	load.64*    %r8359 <- 0[bl]
	store.32    $0xffffffff -> 8[%r8359]
	load.8      %r8360 <- 0[isbreakable]
	load.64*    %r8361 <- 0[bl]
	store.8     %r8360 -> 14[%r8361]
	load.64*    %r8362 <- 0[fs]
	load.8      %r8363 <- 74[%r8362]
	load.64*    %r8364 <- 0[bl]
	store.8     %r8363 -> 12[%r8364]
	load.64*    %r8365 <- 0[bl]
	store.8     $0 -> 13[%r8365]
	load.64*    %r8366 <- 0[fs]
	load.64*    %r8367 <- 40[%r8366]
	load.64*    %r8368 <- 0[bl]
	store.64*   %r8367 -> 0[%r8368]
	load.64*    %r8369 <- 0[bl]
	load.64*    %r8370 <- 0[fs]
	store.64*   %r8369 -> 40[%r8370]
	br          .L1981

.L1981:
	ret


leaveblock:
.L1982:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	load.64*    %r8371 <- 0[fs]
	load.64*    %r8372 <- 40[%r8371]
	store.64*   %r8372 -> 0[bl]
	load.64*    %r8373 <- 0[bl]
	load.64*    %r8374 <- 0[%r8373]
	load.64*    %r8375 <- 0[fs]
	store.64*   %r8374 -> 40[%r8375]
	load.64*    %r8376 <- 0[fs]
	load.64*    %r8377 <- 24[%r8376]
	load.64*    %r8378 <- 0[bl]
	load.8      %r8379 <- 12[%r8378]
	cast.32     %r8380 <- (8) %r8379
	push.64*    %r8377
	push.32     %r8380
	call        removevars
	load.64*    %r8381 <- 0[bl]
	load.8      %r8382 <- 13[%r8381]
	br          %r8382, .L1983, .L1984

.L1983:
	load.64*    %r8383 <- 0[fs]
	load.64*    %r8384 <- 0[bl]
	load.8      %r8385 <- 12[%r8384]
	cast.32     %r8386 <- (8) %r8385
	push.64*    %r8383
	push.32     $35
	push.32     %r8386
	push.32     $0
	push.32     $0
	call.32     %r8387 <- luaK_codeABC
	br          .L1984

.L1984:
	load.64*    %r8388 <- 0[fs]
	load.8      %r8389 <- 74[%r8388]
	cast.32     %r8390 <- (8) %r8389
	load.64*    %r8391 <- 0[fs]
	store.32    %r8390 -> 60[%r8391]
	load.64*    %r8392 <- 0[fs]
	load.64*    %r8393 <- 0[bl]
	load.32     %r8394 <- 8[%r8393]
	push.64*    %r8392
	push.32     %r8394
	call        luaK_patchtohere
	br          .L1985

.L1985:
	ret


pushclosure:
.L1986:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[func]
	store.64*   %arg3 -> 0[v]
	load.64*    %r8395 <- 0[ls]
	load.64*    %r8396 <- 48[%r8395]
	store.64*   %r8396 -> 0[fs]
	load.64*    %r8397 <- 0[fs]
	load.64*    %r8398 <- 0[%r8397]
	store.64*   %r8398 -> 0[f]
	load.64*    %r8399 <- 0[f]
	load.32     %r8400 <- 88[%r8399]
	store.32    %r8400 -> 0[oldsize]
	load.64*    %r8401 <- 0[fs]
	load.32     %r8402 <- 68[%r8401]
	add.32      %r8403 <- %r8402, $1
	load.64*    %r8404 <- 0[f]
	load.32     %r8405 <- 88[%r8404]
	setgt.32    %r8406 <- %r8403, %r8405
	br          %r8406, .L1987, .L1988

.L1987:
	load.64*    %r8407 <- 0[ls]
	load.64*    %r8408 <- 56[%r8407]
	load.64*    %r8409 <- 0[f]
	load.64*    %r8410 <- 32[%r8409]
	cast.64*    %r8411 <- (64) %r8410
	load.64*    %r8412 <- 0[f]
	add.64*     %r8413 <- %r8412, $88
	symaddr.64* %r8414 <- <anon symbol:0x62d00138b168>
	push.64*    %r8408
	push.64*    %r8411
	push.64*    %r8413
	push.64     $8
	push.32     $0x3ffff
	push.64*    %r8414
	call.64*    %r8415 <- luaM_growaux_
	ptrcast.64* %r8416 <- (64) %r8415
	load.64*    %r8417 <- 0[f]
	store.64*   %r8416 -> 32[%r8417]
	br          .L1988

.L1988:
	br          .L1992

.L1992:
	load.32     %r8418 <- 0[oldsize]
	load.64*    %r8419 <- 0[f]
	load.32     %r8420 <- 88[%r8419]
	setlt.32    %r8421 <- %r8418, %r8420
	br          %r8421, .L1989, .L1991

.L1989:
	load.64*    %r8422 <- 0[f]
	load.64*    %r8423 <- 32[%r8422]
	load.32     %r8424 <- 0[oldsize]
	add.32      %r8425 <- %r8424, $1
	store.32    %r8425 -> 0[oldsize]
	scast.64    %r8426 <- (32) %r8424
	muls.64     %r8427 <- %r8426, $8
	add.64*     %r8428 <- %r8423, %r8427
	store.64*   $0 -> 0[%r8428]
	br          .L1990

.L1990:
	br          .L1992

.L1991:
	load.64*    %r8429 <- 0[func]
	load.64*    %r8430 <- 0[%r8429]
	load.64*    %r8431 <- 0[f]
	load.64*    %r8432 <- 32[%r8431]
	load.64*    %r8433 <- 0[fs]
	load.32     %r8434 <- 68[%r8433]
	add.32      %r8435 <- %r8434, $1
	store.32    %r8435 -> 68[%r8433]
	scast.64    %r8436 <- (32) %r8434
	muls.64     %r8437 <- %r8436, $8
	add.64*     %r8438 <- %r8432, %r8437
	store.64*   %r8430 -> 0[%r8438]
	load.64*    %r8439 <- 0[func]
	load.64*    %r8440 <- 0[%r8439]
	ptrcast.64* %r8441 <- (64) %r8440
	load.8      %r8442 <- 9[%r8441]
	cast.32     %r8443 <- (8) %r8442
	and.32      %r8444 <- %r8443, $3
	br          %r8444, .L1995, .L1994

.L1995:
	load.64*    %r8445 <- 0[f]
	ptrcast.64* %r8446 <- (64) %r8445
	load.8      %r8447 <- 9[%r8446]
	cast.32     %r8448 <- (8) %r8447
	and.32      %r8449 <- %r8448, $4
	br          %r8449, .L1993, .L1994

.L1993:
	load.64*    %r8450 <- 0[ls]
	load.64*    %r8451 <- 56[%r8450]
	load.64*    %r8452 <- 0[f]
	ptrcast.64* %r8453 <- (64) %r8452
	load.64*    %r8454 <- 0[func]
	load.64*    %r8455 <- 0[%r8454]
	ptrcast.64* %r8456 <- (64) %r8455
	push.64*    %r8451
	push.64*    %r8453
	push.64*    %r8456
	call        luaC_barrierf
	br          .L1994

.L1994:
	load.64*    %r8457 <- 0[v]
	load.64*    %r8458 <- 0[fs]
	load.64*    %r8459 <- 0[fs]
	load.32     %r8460 <- 68[%r8459]
	sub.32      %r8461 <- %r8460, $1
	scast.32    %r8462 <- (32) %r8461
	push.64*    %r8458
	push.32     $36
	push.32     $0
	push.32     %r8462
	call.32     %r8463 <- luaK_codeABx
	push.64*    %r8457
	push.32     $11
	push.32     %r8463
	call        init_exp
	store.32    $0 -> 0[i]
	br          .L1999

.L1999:
	load.32     %r8464 <- 0[i]
	load.64*    %r8465 <- 0[func]
	load.64*    %r8466 <- 0[%r8465]
	load.8      %r8467 <- 112[%r8466]
	cast.32     %r8468 <- (8) %r8467
	setlt.32    %r8469 <- %r8464, %r8468
	br          %r8469, .L1996, .L1998

.L1996:
	load.64*    %r8470 <- 0[func]
	add.64*     %r8471 <- %r8470, $75
	load.32     %r8472 <- 0[i]
	scast.64    %r8473 <- (32) %r8472
	muls.64     %r8474 <- %r8473, $2
	add.64*     %r8475 <- %r8471, %r8474
	load.8      %r8476 <- 0[%r8475]
	cast.32     %r8477 <- (8) %r8476
	seteq.32    %r8478 <- %r8477, $6
	select.32   %r8479 <- %r8478, $0, $4
	scast.32    %r8480 <- (32) %r8479
	store.32    %r8480 -> 0[o]
	load.64*    %r8481 <- 0[fs]
	load.32     %r8482 <- 0[o]
	load.64*    %r8483 <- 0[func]
	add.64*     %r8484 <- %r8483, $75
	load.32     %r8485 <- 0[i]
	scast.64    %r8486 <- (32) %r8485
	muls.64     %r8487 <- %r8486, $2
	add.64*     %r8488 <- %r8484, %r8487
	load.8      %r8489 <- 1[%r8488]
	cast.32     %r8490 <- (8) %r8489
	push.64*    %r8481
	push.32     %r8482
	push.32     $0
	push.32     %r8490
	push.32     $0
	call.32     %r8491 <- luaK_codeABC
	br          .L1997

.L1997:
	load.32     %r8492 <- 0[i]
	add.32      %r8493 <- %r8492, $1
	store.32    %r8493 -> 0[i]
	br          .L1999

.L1998:
	ret


open_func:
.L2000:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[fs]
	load.64*    %r8494 <- 0[ls]
	load.64*    %r8495 <- 56[%r8494]
	store.64*   %r8495 -> 0[L]
	load.64*    %r8496 <- 0[L]
	push.64*    %r8496
	call.64*    %r8497 <- luaF_newproto
	store.64*   %r8497 -> 0[f]
	load.64*    %r8498 <- 0[f]
	load.64*    %r8499 <- 0[fs]
	store.64*   %r8498 -> 0[%r8499]
	load.64*    %r8500 <- 0[ls]
	load.64*    %r8501 <- 48[%r8500]
	load.64*    %r8502 <- 0[fs]
	store.64*   %r8501 -> 16[%r8502]
	load.64*    %r8503 <- 0[ls]
	load.64*    %r8504 <- 0[fs]
	store.64*   %r8503 -> 24[%r8504]
	load.64*    %r8505 <- 0[L]
	load.64*    %r8506 <- 0[fs]
	store.64*   %r8505 -> 32[%r8506]
	load.64*    %r8507 <- 0[fs]
	load.64*    %r8508 <- 0[ls]
	store.64*   %r8507 -> 48[%r8508]
	load.64*    %r8509 <- 0[fs]
	store.32    $0 -> 48[%r8509]
	load.64*    %r8510 <- 0[fs]
	store.32    $0xffffffff -> 52[%r8510]
	load.64*    %r8511 <- 0[fs]
	store.32    $0xffffffff -> 56[%r8511]
	load.64*    %r8512 <- 0[fs]
	store.32    $0 -> 60[%r8512]
	load.64*    %r8513 <- 0[fs]
	store.32    $0 -> 64[%r8513]
	load.64*    %r8514 <- 0[fs]
	store.32    $0 -> 68[%r8514]
	load.64*    %r8515 <- 0[fs]
	store.16    $0 -> 72[%r8515]
	load.64*    %r8516 <- 0[fs]
	store.8     $0 -> 74[%r8516]
	load.64*    %r8517 <- 0[fs]
	store.64*   $0 -> 40[%r8517]
	load.64*    %r8518 <- 0[ls]
	load.64*    %r8519 <- 80[%r8518]
	load.64*    %r8520 <- 0[f]
	store.64*   %r8519 -> 64[%r8520]
	load.64*    %r8521 <- 0[f]
	store.8     $2 -> 115[%r8521]
	load.64*    %r8522 <- 0[L]
	push.64*    %r8522
	push.32     $0
	push.32     $0
	call.64*    %r8523 <- luaH_new
	load.64*    %r8524 <- 0[fs]
	store.64*   %r8523 -> 8[%r8524]
	load.64*    %r8525 <- 0[L]
	load.64*    %r8526 <- 16[%r8525]
	store.64*   %r8526 -> 0[i_o]
	load.64*    %r8527 <- 0[fs]
	load.64*    %r8528 <- 8[%r8527]
	ptrcast.64* %r8529 <- (64) %r8528
	load.64*    %r8530 <- 0[i_o]
	store.64*   %r8529 -> 0[%r8530]
	load.64*    %r8531 <- 0[i_o]
	store.32    $5 -> 8[%r8531]
	load.64*    %r8532 <- 0[L]
	load.64*    %r8533 <- 56[%r8532]
	ptrcast.64* %r8534 <- (64) %r8533
	load.64*    %r8535 <- 0[L]
	load.64*    %r8536 <- 16[%r8535]
	ptrcast.64* %r8537 <- (64) %r8536
	sub.64      %r8538 <- %r8534, %r8537
	setle.32    %r8539 <- %r8538, $16
	br          %r8539, .L2001, .L2002

.L2001:
	load.64*    %r8540 <- 0[L]
	push.64*    %r8540
	push.32     $1
	call        luaD_growstack
	br          .L2003

.L2002:
	br          .L2003

.L2003:
	load.64*    %r8541 <- 0[L]
	load.64*    %r8542 <- 16[%r8541]
	add.64*     %r8543 <- %r8542, $16
	store.64*   %r8543 -> 16[%r8541]
	load.64*    %r8544 <- 0[L]
	load.64*    %r8545 <- 16[%r8544]
	store.64*   %r8545 -> 0[i_o]
	load.64*    %r8546 <- 0[f]
	ptrcast.64* %r8547 <- (64) %r8546
	load.64*    %r8548 <- 0[i_o]
	store.64*   %r8547 -> 0[%r8548]
	load.64*    %r8549 <- 0[i_o]
	store.32    $9 -> 8[%r8549]
	load.64*    %r8550 <- 0[L]
	load.64*    %r8551 <- 56[%r8550]
	ptrcast.64* %r8552 <- (64) %r8551
	load.64*    %r8553 <- 0[L]
	load.64*    %r8554 <- 16[%r8553]
	ptrcast.64* %r8555 <- (64) %r8554
	sub.64      %r8556 <- %r8552, %r8555
	setle.32    %r8557 <- %r8556, $16
	br          %r8557, .L2004, .L2005

.L2004:
	load.64*    %r8558 <- 0[L]
	push.64*    %r8558
	push.32     $1
	call        luaD_growstack
	br          .L2006

.L2005:
	br          .L2006

.L2006:
	load.64*    %r8559 <- 0[L]
	load.64*    %r8560 <- 16[%r8559]
	add.64*     %r8561 <- %r8560, $16
	store.64*   %r8561 -> 16[%r8559]
	br          .L2007

.L2007:
	ret


close_func:
.L2008:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8562 <- 0[ls]
	load.64*    %r8563 <- 56[%r8562]
	store.64*   %r8563 -> 0[L]
	load.64*    %r8564 <- 0[ls]
	load.64*    %r8565 <- 48[%r8564]
	store.64*   %r8565 -> 0[fs]
	load.64*    %r8566 <- 0[fs]
	load.64*    %r8567 <- 0[%r8566]
	store.64*   %r8567 -> 0[f]
	load.64*    %r8568 <- 0[ls]
	push.64*    %r8568
	push.32     $0
	call        removevars
	load.64*    %r8569 <- 0[fs]
	push.64*    %r8569
	push.32     $0
	push.32     $0
	call        luaK_ret
	load.64*    %r8570 <- 0[fs]
	load.32     %r8571 <- 48[%r8570]
	add.32      %r8572 <- %r8571, $1
	scast.64    %r8573 <- (32) %r8572
	setbe.32    %r8574 <- %r8573, $0x3fffffffffffffff
	br          %r8574, .L2009, .L2010

.L2009:
	load.64*    %r8575 <- 0[L]
	load.64*    %r8576 <- 0[f]
	load.64*    %r8577 <- 24[%r8576]
	cast.64*    %r8578 <- (64) %r8577
	load.64*    %r8579 <- 0[f]
	load.32     %r8580 <- 80[%r8579]
	scast.64    %r8581 <- (32) %r8580
	mulu.64     %r8582 <- %r8581, $4
	load.64*    %r8583 <- 0[fs]
	load.32     %r8584 <- 48[%r8583]
	scast.64    %r8585 <- (32) %r8584
	mulu.64     %r8586 <- %r8585, $4
	push.64*    %r8575
	push.64*    %r8578
	push.64     %r8582
	push.64     %r8586
	call.64*    %r8587 <- luaM_realloc_
	phisrc.64*  %phi342 <- %r8587
	br          .L2011

.L2010:
	load.64*    %r8588 <- 0[L]
	push.64*    %r8588
	call.64*    %r8589 <- luaM_toobig
	cast.64*    %r8590 <- (64) %r8589
	phisrc.64*  %phi343 <- %r8590
	br          .L2011

.L2011:
	phi.64*     %r8591 <- %phi342, %phi343
	ptrcast.64* %r8592 <- (64) %r8591
	load.64*    %r8593 <- 0[f]
	store.64*   %r8592 -> 24[%r8593]
	load.64*    %r8594 <- 0[fs]
	load.32     %r8595 <- 48[%r8594]
	load.64*    %r8596 <- 0[f]
	store.32    %r8595 -> 80[%r8596]
	load.64*    %r8597 <- 0[fs]
	load.32     %r8598 <- 48[%r8597]
	add.32      %r8599 <- %r8598, $1
	scast.64    %r8600 <- (32) %r8599
	setbe.32    %r8601 <- %r8600, $0x3fffffffffffffff
	br          %r8601, .L2012, .L2013

.L2012:
	load.64*    %r8602 <- 0[L]
	load.64*    %r8603 <- 0[f]
	load.64*    %r8604 <- 40[%r8603]
	cast.64*    %r8605 <- (64) %r8604
	load.64*    %r8606 <- 0[f]
	load.32     %r8607 <- 84[%r8606]
	scast.64    %r8608 <- (32) %r8607
	mulu.64     %r8609 <- %r8608, $4
	load.64*    %r8610 <- 0[fs]
	load.32     %r8611 <- 48[%r8610]
	scast.64    %r8612 <- (32) %r8611
	mulu.64     %r8613 <- %r8612, $4
	push.64*    %r8602
	push.64*    %r8605
	push.64     %r8609
	push.64     %r8613
	call.64*    %r8614 <- luaM_realloc_
	phisrc.64*  %phi344 <- %r8614
	br          .L2014

.L2013:
	load.64*    %r8615 <- 0[L]
	push.64*    %r8615
	call.64*    %r8616 <- luaM_toobig
	cast.64*    %r8617 <- (64) %r8616
	phisrc.64*  %phi345 <- %r8617
	br          .L2014

.L2014:
	phi.64*     %r8618 <- %phi344, %phi345
	ptrcast.64* %r8619 <- (64) %r8618
	load.64*    %r8620 <- 0[f]
	store.64*   %r8619 -> 40[%r8620]
	load.64*    %r8621 <- 0[fs]
	load.32     %r8622 <- 48[%r8621]
	load.64*    %r8623 <- 0[f]
	store.32    %r8622 -> 84[%r8623]
	load.64*    %r8624 <- 0[fs]
	load.32     %r8625 <- 64[%r8624]
	add.32      %r8626 <- %r8625, $1
	scast.64    %r8627 <- (32) %r8626
	setbe.32    %r8628 <- %r8627, $0xfffffffffffffff
	br          %r8628, .L2015, .L2016

.L2015:
	load.64*    %r8629 <- 0[L]
	load.64*    %r8630 <- 0[f]
	load.64*    %r8631 <- 16[%r8630]
	cast.64*    %r8632 <- (64) %r8631
	load.64*    %r8633 <- 0[f]
	load.32     %r8634 <- 76[%r8633]
	scast.64    %r8635 <- (32) %r8634
	mulu.64     %r8636 <- %r8635, $16
	load.64*    %r8637 <- 0[fs]
	load.32     %r8638 <- 64[%r8637]
	scast.64    %r8639 <- (32) %r8638
	mulu.64     %r8640 <- %r8639, $16
	push.64*    %r8629
	push.64*    %r8632
	push.64     %r8636
	push.64     %r8640
	call.64*    %r8641 <- luaM_realloc_
	phisrc.64*  %phi346 <- %r8641
	br          .L2017

.L2016:
	load.64*    %r8642 <- 0[L]
	push.64*    %r8642
	call.64*    %r8643 <- luaM_toobig
	cast.64*    %r8644 <- (64) %r8643
	phisrc.64*  %phi347 <- %r8644
	br          .L2017

.L2017:
	phi.64*     %r8645 <- %phi346, %phi347
	ptrcast.64* %r8646 <- (64) %r8645
	load.64*    %r8647 <- 0[f]
	store.64*   %r8646 -> 16[%r8647]
	load.64*    %r8648 <- 0[fs]
	load.32     %r8649 <- 64[%r8648]
	load.64*    %r8650 <- 0[f]
	store.32    %r8649 -> 76[%r8650]
	load.64*    %r8651 <- 0[fs]
	load.32     %r8652 <- 68[%r8651]
	add.32      %r8653 <- %r8652, $1
	scast.64    %r8654 <- (32) %r8653
	setbe.32    %r8655 <- %r8654, $0x1fffffffffffffff
	br          %r8655, .L2018, .L2019

.L2018:
	load.64*    %r8656 <- 0[L]
	load.64*    %r8657 <- 0[f]
	load.64*    %r8658 <- 32[%r8657]
	cast.64*    %r8659 <- (64) %r8658
	load.64*    %r8660 <- 0[f]
	load.32     %r8661 <- 88[%r8660]
	scast.64    %r8662 <- (32) %r8661
	mulu.64     %r8663 <- %r8662, $8
	load.64*    %r8664 <- 0[fs]
	load.32     %r8665 <- 68[%r8664]
	scast.64    %r8666 <- (32) %r8665
	mulu.64     %r8667 <- %r8666, $8
	push.64*    %r8656
	push.64*    %r8659
	push.64     %r8663
	push.64     %r8667
	call.64*    %r8668 <- luaM_realloc_
	phisrc.64*  %phi348 <- %r8668
	br          .L2020

.L2019:
	load.64*    %r8669 <- 0[L]
	push.64*    %r8669
	call.64*    %r8670 <- luaM_toobig
	cast.64*    %r8671 <- (64) %r8670
	phisrc.64*  %phi349 <- %r8671
	br          .L2020

.L2020:
	phi.64*     %r8672 <- %phi348, %phi349
	ptrcast.64* %r8673 <- (64) %r8672
	load.64*    %r8674 <- 0[f]
	store.64*   %r8673 -> 32[%r8674]
	load.64*    %r8675 <- 0[fs]
	load.32     %r8676 <- 68[%r8675]
	load.64*    %r8677 <- 0[f]
	store.32    %r8676 -> 88[%r8677]
	load.64*    %r8678 <- 0[fs]
	load.16     %r8679 <- 72[%r8678]
	scast.32    %r8680 <- (16) %r8679
	add.32      %r8681 <- %r8680, $1
	scast.64    %r8682 <- (32) %r8681
	setbe.32    %r8683 <- %r8682, $0xfffffffffffffff
	br          %r8683, .L2021, .L2022

.L2021:
	load.64*    %r8684 <- 0[L]
	load.64*    %r8685 <- 0[f]
	load.64*    %r8686 <- 48[%r8685]
	cast.64*    %r8687 <- (64) %r8686
	load.64*    %r8688 <- 0[f]
	load.32     %r8689 <- 92[%r8688]
	scast.64    %r8690 <- (32) %r8689
	mulu.64     %r8691 <- %r8690, $16
	load.64*    %r8692 <- 0[fs]
	load.16     %r8693 <- 72[%r8692]
	scast.64    %r8694 <- (16) %r8693
	mulu.64     %r8695 <- %r8694, $16
	push.64*    %r8684
	push.64*    %r8687
	push.64     %r8691
	push.64     %r8695
	call.64*    %r8696 <- luaM_realloc_
	phisrc.64*  %phi350 <- %r8696
	br          .L2023

.L2022:
	load.64*    %r8697 <- 0[L]
	push.64*    %r8697
	call.64*    %r8698 <- luaM_toobig
	cast.64*    %r8699 <- (64) %r8698
	phisrc.64*  %phi351 <- %r8699
	br          .L2023

.L2023:
	phi.64*     %r8700 <- %phi350, %phi351
	ptrcast.64* %r8701 <- (64) %r8700
	load.64*    %r8702 <- 0[f]
	store.64*   %r8701 -> 48[%r8702]
	load.64*    %r8703 <- 0[fs]
	load.16     %r8704 <- 72[%r8703]
	scast.32    %r8705 <- (16) %r8704
	load.64*    %r8706 <- 0[f]
	store.32    %r8705 -> 92[%r8706]
	load.64*    %r8707 <- 0[f]
	load.8      %r8708 <- 112[%r8707]
	cast.32     %r8709 <- (8) %r8708
	add.32      %r8710 <- %r8709, $1
	scast.64    %r8711 <- (32) %r8710
	setbe.32    %r8712 <- %r8711, $0x1fffffffffffffff
	br          %r8712, .L2024, .L2025

.L2024:
	load.64*    %r8713 <- 0[L]
	load.64*    %r8714 <- 0[f]
	load.64*    %r8715 <- 56[%r8714]
	cast.64*    %r8716 <- (64) %r8715
	load.64*    %r8717 <- 0[f]
	load.32     %r8718 <- 72[%r8717]
	scast.64    %r8719 <- (32) %r8718
	mulu.64     %r8720 <- %r8719, $8
	load.64*    %r8721 <- 0[f]
	load.8      %r8722 <- 112[%r8721]
	cast.64     %r8723 <- (8) %r8722
	mulu.64     %r8724 <- %r8723, $8
	push.64*    %r8713
	push.64*    %r8716
	push.64     %r8720
	push.64     %r8724
	call.64*    %r8725 <- luaM_realloc_
	phisrc.64*  %phi352 <- %r8725
	br          .L2026

.L2025:
	load.64*    %r8726 <- 0[L]
	push.64*    %r8726
	call.64*    %r8727 <- luaM_toobig
	cast.64*    %r8728 <- (64) %r8727
	phisrc.64*  %phi353 <- %r8728
	br          .L2026

.L2026:
	phi.64*     %r8729 <- %phi352, %phi353
	ptrcast.64* %r8730 <- (64) %r8729
	load.64*    %r8731 <- 0[f]
	store.64*   %r8730 -> 56[%r8731]
	load.64*    %r8732 <- 0[f]
	load.8      %r8733 <- 112[%r8732]
	cast.32     %r8734 <- (8) %r8733
	load.64*    %r8735 <- 0[f]
	store.32    %r8734 -> 72[%r8735]
	load.64*    %r8736 <- 0[fs]
	load.64*    %r8737 <- 16[%r8736]
	load.64*    %r8738 <- 0[ls]
	store.64*   %r8737 -> 48[%r8738]
	load.64*    %r8739 <- 0[fs]
	br          %r8739, .L2027, .L2028

.L2027:
	load.64*    %r8740 <- 0[ls]
	push.64*    %r8740
	call        anchor_token
	br          .L2028

.L2028:
	load.64*    %r8741 <- 0[L]
	load.64*    %r8742 <- 16[%r8741]
	cast.64     %r8743 <- (64) %r8742
	sub.64      %r8744 <- %r8743, $32
	ptrcast.64* %r8745 <- (64) %r8744
	store.64*   %r8745 -> 16[%r8741]
	br          .L2029

.L2029:
	ret


luaY_parser:
.L2030:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[z]
	store.64*   %arg3 -> 0[buff]
	store.64*   %arg4 -> 0[name]
	load.64*    %r8746 <- 0[buff]
	store.64*   %r8746 -> 72[lexstate]
	load.64*    %r8747 <- 0[L]
	symaddr.64* %r8748 <- lexstate
	load.64*    %r8749 <- 0[z]
	load.64*    %r8750 <- 0[L]
	load.64*    %r8751 <- 0[name]
	load.64*    %r8752 <- 0[name]
	push.64*    %r8752
	call.64     %r8753 <- strlen
	push.64*    %r8750
	push.64*    %r8751
	push.64     %r8753
	call.64*    %r8754 <- luaS_newlstr
	push.64*    %r8747
	push.64*    %r8748
	push.64*    %r8749
	push.64*    %r8754
	call        luaX_setinput
	symaddr.64* %r8755 <- lexstate
	symaddr.64* %r8756 <- funcstate
	push.64*    %r8755
	push.64*    %r8756
	call        open_func
	load.64*    %r8757 <- 0[funcstate]
	store.8     $2 -> 114[%r8757]
	symaddr.64* %r8758 <- lexstate
	push.64*    %r8758
	call        luaX_next
	symaddr.64* %r8759 <- lexstate
	push.64*    %r8759
	call        chunk
	symaddr.64* %r8760 <- lexstate
	push.64*    %r8760
	push.32     $287
	call        check
	symaddr.64* %r8761 <- lexstate
	push.64*    %r8761
	call        close_func
	load.64*    %r8762 <- 0[funcstate]
	phisrc.64*  %phi354(return) <- %r8762
	br          .L2031

.L2031:
	phi.64*     %r8763 <- %phi354(return)
	ret.64*     %r8762


field:
.L2032:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r8764 <- 0[ls]
	load.64*    %r8765 <- 48[%r8764]
	store.64*   %r8765 -> 0[fs]
	load.64*    %r8766 <- 0[fs]
	load.64*    %r8767 <- 0[v]
	push.64*    %r8766
	push.64*    %r8767
	call.32     %r8768 <- luaK_exp2anyreg
	load.64*    %r8769 <- 0[ls]
	push.64*    %r8769
	call        luaX_next
	load.64*    %r8770 <- 0[ls]
	symaddr.64* %r8771 <- key
	push.64*    %r8770
	push.64*    %r8771
	call        checkname
	load.64*    %r8772 <- 0[fs]
	load.64*    %r8773 <- 0[v]
	symaddr.64* %r8774 <- key
	push.64*    %r8772
	push.64*    %r8773
	push.64*    %r8774
	call        luaK_indexed
	br          .L2033

.L2033:
	ret


yindex:
.L2034:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r8775 <- 0[ls]
	push.64*    %r8775
	call        luaX_next
	load.64*    %r8776 <- 0[ls]
	load.64*    %r8777 <- 0[v]
	push.64*    %r8776
	push.64*    %r8777
	call        expr
	load.64*    %r8778 <- 0[ls]
	load.64*    %r8779 <- 48[%r8778]
	load.64*    %r8780 <- 0[v]
	push.64*    %r8779
	push.64*    %r8780
	call        luaK_exp2val
	load.64*    %r8781 <- 0[ls]
	push.64*    %r8781
	push.32     $93
	call        checknext
	br          .L2035

.L2035:
	ret


recfield:
.L2036:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8782 <- 0[ls]
	load.64*    %r8783 <- 48[%r8782]
	store.64*   %r8783 -> 0[fs]
	load.64*    %r8784 <- 0[ls]
	load.64*    %r8785 <- 48[%r8784]
	load.32     %r8786 <- 60[%r8785]
	store.32    %r8786 -> 0[reg]
	load.64*    %r8787 <- 0[ls]
	load.32     %r8788 <- 16[%r8787]
	seteq.32    %r8789 <- %r8788, $285
	br          %r8789, .L2037, .L2038

.L2037:
	load.64*    %r8790 <- 0[cc]
	load.32     %r8791 <- 32[%r8790]
	setgt.32    %r8792 <- %r8791, $0x7ffffffd
	br          %r8792, .L2039, .L2040

.L2039:
	load.64*    %r8793 <- 0[fs]
	symaddr.64* %r8794 <- <anon symbol:0x62d001384998>
	push.64*    %r8793
	push.32     $0x7ffffffd
	push.64*    %r8794
	call        errorlimit
	br          .L2040

.L2040:
	load.64*    %r8795 <- 0[ls]
	symaddr.64* %r8796 <- key
	push.64*    %r8795
	push.64*    %r8796
	call        checkname
	br          .L2041

.L2038:
	load.64*    %r8797 <- 0[ls]
	symaddr.64* %r8798 <- key
	push.64*    %r8797
	push.64*    %r8798
	call        yindex
	br          .L2041

.L2041:
	load.64*    %r8799 <- 0[cc]
	load.32     %r8800 <- 32[%r8799]
	add.32      %r8801 <- %r8800, $1
	store.32    %r8801 -> 32[%r8799]
	load.64*    %r8802 <- 0[ls]
	push.64*    %r8802
	push.32     $61
	call        checknext
	load.64*    %r8803 <- 0[fs]
	symaddr.64* %r8804 <- key
	push.64*    %r8803
	push.64*    %r8804
	call.32     %r8805 <- luaK_exp2RK
	store.32    %r8805 -> 0[rkkey]
	load.64*    %r8806 <- 0[ls]
	symaddr.64* %r8807 <- val
	push.64*    %r8806
	push.64*    %r8807
	call        expr
	load.64*    %r8808 <- 0[fs]
	load.64*    %r8809 <- 0[cc]
	load.64*    %r8810 <- 24[%r8809]
	load.32     %r8811 <- 8[%r8810]
	load.32     %r8812 <- 0[rkkey]
	load.64*    %r8813 <- 0[fs]
	symaddr.64* %r8814 <- val
	push.64*    %r8813
	push.64*    %r8814
	call.32     %r8815 <- luaK_exp2RK
	push.64*    %r8808
	push.32     $9
	push.32     %r8811
	push.32     %r8812
	push.32     %r8815
	call.32     %r8816 <- luaK_codeABC
	load.32     %r8817 <- 0[reg]
	load.64*    %r8818 <- 0[fs]
	store.32    %r8817 -> 60[%r8818]
	br          .L2042

.L2042:
	ret


closelistfield:
.L2043:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8819 <- 0[cc]
	load.32     %r8820 <- 0[%r8819]
	scast.32    %r8821 <- (32) %r8820
	seteq.32    %r8822 <- %r8821, $0
	br          %r8822, .L2044, .L2045

.L2044:
	br          .L2046

.L2045:
	load.64*    %r8823 <- 0[fs]
	load.64*    %r8824 <- 0[cc]
	add.64*     %r8825 <- %r8824, $0
	push.64*    %r8823
	push.64*    %r8825
	call        luaK_exp2nextreg
	load.64*    %r8826 <- 0[cc]
	store.32    $0 -> 0[%r8826]
	load.64*    %r8827 <- 0[cc]
	load.32     %r8828 <- 40[%r8827]
	seteq.32    %r8829 <- %r8828, $50
	br          %r8829, .L2047, .L2048

.L2047:
	load.64*    %r8830 <- 0[fs]
	load.64*    %r8831 <- 0[cc]
	load.64*    %r8832 <- 24[%r8831]
	load.32     %r8833 <- 8[%r8832]
	load.64*    %r8834 <- 0[cc]
	load.32     %r8835 <- 36[%r8834]
	load.64*    %r8836 <- 0[cc]
	load.32     %r8837 <- 40[%r8836]
	push.64*    %r8830
	push.32     %r8833
	push.32     %r8835
	push.32     %r8837
	call        luaK_setlist
	load.64*    %r8838 <- 0[cc]
	store.32    $0 -> 40[%r8838]
	br          .L2048

.L2048:
	br          .L2046

.L2046:
	ret


lastlistfield:
.L2049:
	<entry-point>
	store.64*   %arg1 -> 0[fs]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8839 <- 0[cc]
	load.32     %r8840 <- 40[%r8839]
	seteq.32    %r8841 <- %r8840, $0
	br          %r8841, .L2050, .L2051

.L2050:
	br          .L2052

.L2051:
	load.64*    %r8842 <- 0[cc]
	load.32     %r8843 <- 0[%r8842]
	scast.32    %r8844 <- (32) %r8843
	seteq.32    %r8845 <- %r8844, $13
	br          %r8845, .L2053, .L2055

.L2055:
	load.64*    %r8846 <- 0[cc]
	load.32     %r8847 <- 0[%r8846]
	scast.32    %r8848 <- (32) %r8847
	seteq.32    %r8849 <- %r8848, $14
	br          %r8849, .L2053, .L2054

.L2053:
	load.64*    %r8850 <- 0[fs]
	load.64*    %r8851 <- 0[cc]
	add.64*     %r8852 <- %r8851, $0
	push.64*    %r8850
	push.64*    %r8852
	push.32     $0xffffffff
	call        luaK_setreturns
	load.64*    %r8853 <- 0[fs]
	load.64*    %r8854 <- 0[cc]
	load.64*    %r8855 <- 24[%r8854]
	load.32     %r8856 <- 8[%r8855]
	load.64*    %r8857 <- 0[cc]
	load.32     %r8858 <- 36[%r8857]
	push.64*    %r8853
	push.32     %r8856
	push.32     %r8858
	push.32     $0xffffffff
	call        luaK_setlist
	load.64*    %r8859 <- 0[cc]
	load.32     %r8860 <- 36[%r8859]
	sub.32      %r8861 <- %r8860, $1
	store.32    %r8861 -> 36[%r8859]
	br          .L2056

.L2054:
	load.64*    %r8862 <- 0[cc]
	load.32     %r8863 <- 0[%r8862]
	scast.32    %r8864 <- (32) %r8863
	setne.32    %r8865 <- %r8864, $0
	br          %r8865, .L2057, .L2058

.L2057:
	load.64*    %r8866 <- 0[fs]
	load.64*    %r8867 <- 0[cc]
	add.64*     %r8868 <- %r8867, $0
	push.64*    %r8866
	push.64*    %r8868
	call        luaK_exp2nextreg
	br          .L2058

.L2058:
	load.64*    %r8869 <- 0[fs]
	load.64*    %r8870 <- 0[cc]
	load.64*    %r8871 <- 24[%r8870]
	load.32     %r8872 <- 8[%r8871]
	load.64*    %r8873 <- 0[cc]
	load.32     %r8874 <- 36[%r8873]
	load.64*    %r8875 <- 0[cc]
	load.32     %r8876 <- 40[%r8875]
	push.64*    %r8869
	push.32     %r8872
	push.32     %r8874
	push.32     %r8876
	call        luaK_setlist
	br          .L2056

.L2056:
	br          .L2052

.L2052:
	ret


listfield:
.L2059:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[cc]
	load.64*    %r8877 <- 0[ls]
	load.64*    %r8878 <- 0[cc]
	add.64*     %r8879 <- %r8878, $0
	push.64*    %r8877
	push.64*    %r8879
	call        expr
	load.64*    %r8880 <- 0[cc]
	load.32     %r8881 <- 36[%r8880]
	setgt.32    %r8882 <- %r8881, $0x7ffffffd
	br          %r8882, .L2060, .L2061

.L2060:
	load.64*    %r8883 <- 0[ls]
	load.64*    %r8884 <- 48[%r8883]
	symaddr.64* %r8885 <- <anon symbol:0x62d0013945a0>
	push.64*    %r8884
	push.32     $0x7ffffffd
	push.64*    %r8885
	call        errorlimit
	br          .L2061

.L2061:
	load.64*    %r8886 <- 0[cc]
	load.32     %r8887 <- 36[%r8886]
	add.32      %r8888 <- %r8887, $1
	store.32    %r8888 -> 36[%r8886]
	load.64*    %r8889 <- 0[cc]
	load.32     %r8890 <- 40[%r8889]
	add.32      %r8891 <- %r8890, $1
	store.32    %r8891 -> 40[%r8889]
	br          .L2062

.L2062:
	ret


constructor:
.L2063:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[t]
	load.64*    %r8892 <- 0[ls]
	load.64*    %r8893 <- 48[%r8892]
	store.64*   %r8893 -> 0[fs]
	load.64*    %r8894 <- 0[ls]
	load.32     %r8895 <- 4[%r8894]
	store.32    %r8895 -> 0[line]
	load.64*    %r8896 <- 0[fs]
	push.64*    %r8896
	push.32     $10
	push.32     $0
	push.32     $0
	push.32     $0
	call.32     %r8897 <- luaK_codeABC
	store.32    %r8897 -> 0[pc]
	store.32    $0 -> 40[cc]
	store.32    $0 -> 32[cc]
	store.32    $0 -> 36[cc]
	load.64*    %r8898 <- 0[t]
	store.64*   %r8898 -> 24[cc]
	load.64*    %r8899 <- 0[t]
	load.32     %r8900 <- 0[pc]
	push.64*    %r8899
	push.32     $11
	push.32     %r8900
	call        init_exp
	symaddr.64* %r8901 <- cc
	add.64*     %r8902 <- %r8901, $0
	push.64*    %r8902
	push.32     $0
	push.32     $0
	call        init_exp
	load.64*    %r8903 <- 0[ls]
	load.64*    %r8904 <- 48[%r8903]
	load.64*    %r8905 <- 0[t]
	push.64*    %r8904
	push.64*    %r8905
	call        luaK_exp2nextreg
	load.64*    %r8906 <- 0[ls]
	push.64*    %r8906
	push.32     $123
	call        checknext
	br          .L2064

.L2064:
	load.64*    %r8907 <- 0[ls]
	load.32     %r8908 <- 16[%r8907]
	seteq.32    %r8909 <- %r8908, $125
	br          %r8909, .L2067, .L2068

.L2067:
	br          .L2066

.L2068:
	load.64*    %r8910 <- 0[fs]
	symaddr.64* %r8911 <- cc
	push.64*    %r8910
	push.64*    %r8911
	call        closelistfield
	load.64*    %r8912 <- 0[ls]
	load.32     %r8913 <- 16[%r8912]
	switch.32   %r8913, 91 -> .L2071, 285 -> .L2070, default -> .L2072

.L2070:
	load.64*    %r8914 <- 0[ls]
	push.64*    %r8914
	call        luaX_lookahead
	load.64*    %r8915 <- 0[ls]
	load.32     %r8916 <- 32[%r8915]
	setne.32    %r8917 <- %r8916, $61
	br          %r8917, .L2073, .L2074

.L2073:
	load.64*    %r8918 <- 0[ls]
	symaddr.64* %r8919 <- cc
	push.64*    %r8918
	push.64*    %r8919
	call        listfield
	br          .L2075

.L2074:
	load.64*    %r8920 <- 0[ls]
	symaddr.64* %r8921 <- cc
	push.64*    %r8920
	push.64*    %r8921
	call        recfield
	br          .L2075

.L2075:
	br          .L2069

.L2071:
	load.64*    %r8922 <- 0[ls]
	symaddr.64* %r8923 <- cc
	push.64*    %r8922
	push.64*    %r8923
	call        recfield
	br          .L2069

.L2072:
	load.64*    %r8924 <- 0[ls]
	symaddr.64* %r8925 <- cc
	push.64*    %r8924
	push.64*    %r8925
	call        listfield
	br          .L2069

.L2069:
	br          .L2065

.L2065:
	load.64*    %r8926 <- 0[ls]
	push.64*    %r8926
	push.32     $44
	call.32     %r8927 <- testnext
	br          %r8927, .L2064, .L2076

.L2076:
	load.64*    %r8928 <- 0[ls]
	push.64*    %r8928
	push.32     $59
	call.32     %r8929 <- testnext
	br          %r8929, .L2064, .L2066

.L2066:
	load.64*    %r8930 <- 0[ls]
	load.32     %r8931 <- 0[line]
	push.64*    %r8930
	push.32     $125
	push.32     $123
	push.32     %r8931
	call        check_match
	load.64*    %r8932 <- 0[fs]
	symaddr.64* %r8933 <- cc
	push.64*    %r8932
	push.64*    %r8933
	call        lastlistfield
	load.64*    %r8934 <- 0[fs]
	load.64*    %r8935 <- 0[%r8934]
	load.64*    %r8936 <- 24[%r8935]
	load.32     %r8937 <- 0[pc]
	scast.64    %r8938 <- (32) %r8937
	muls.64     %r8939 <- %r8938, $4
	add.64*     %r8940 <- %r8936, %r8939
	load.32     %r8941 <- 0[%r8940]
	and.32      %r8942 <- %r8941, $0x7fffff
	load.32     %r8943 <- 36[cc]
	scast.32    %r8944 <- (32) %r8943
	push.32     %r8944
	call.32     %r8945 <- luaO_int2fb
	scast.32    %r8946 <- (32) %r8945
	shl.32      %r8947 <- %r8946, $23
	and.32      %r8948 <- %r8947, $0xff800000
	or.32       %r8949 <- %r8942, %r8948
	load.64*    %r8950 <- 0[fs]
	load.64*    %r8951 <- 0[%r8950]
	load.64*    %r8952 <- 24[%r8951]
	load.32     %r8953 <- 0[pc]
	scast.64    %r8954 <- (32) %r8953
	muls.64     %r8955 <- %r8954, $4
	add.64*     %r8956 <- %r8952, %r8955
	store.32    %r8949 -> 0[%r8956]
	load.64*    %r8957 <- 0[fs]
	load.64*    %r8958 <- 0[%r8957]
	load.64*    %r8959 <- 24[%r8958]
	load.32     %r8960 <- 0[pc]
	scast.64    %r8961 <- (32) %r8960
	muls.64     %r8962 <- %r8961, $4
	add.64*     %r8963 <- %r8959, %r8962
	load.32     %r8964 <- 0[%r8963]
	and.32      %r8965 <- %r8964, $0xff803fff
	load.32     %r8966 <- 32[cc]
	scast.32    %r8967 <- (32) %r8966
	push.32     %r8967
	call.32     %r8968 <- luaO_int2fb
	scast.32    %r8969 <- (32) %r8968
	shl.32      %r8970 <- %r8969, $14
	and.32      %r8971 <- %r8970, $0x7fc000
	or.32       %r8972 <- %r8965, %r8971
	load.64*    %r8973 <- 0[fs]
	load.64*    %r8974 <- 0[%r8973]
	load.64*    %r8975 <- 24[%r8974]
	load.32     %r8976 <- 0[pc]
	scast.64    %r8977 <- (32) %r8976
	muls.64     %r8978 <- %r8977, $4
	add.64*     %r8979 <- %r8975, %r8978
	store.32    %r8972 -> 0[%r8979]
	br          .L2077

.L2077:
	ret


parlist:
.L2078:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r8980 <- 0[ls]
	load.64*    %r8981 <- 48[%r8980]
	store.64*   %r8981 -> 0[fs]
	load.64*    %r8982 <- 0[fs]
	load.64*    %r8983 <- 0[%r8982]
	store.64*   %r8983 -> 0[f]
	store.32    $0 -> 0[nparams]
	load.64*    %r8984 <- 0[f]
	store.8     $0 -> 114[%r8984]
	load.64*    %r8985 <- 0[ls]
	load.32     %r8986 <- 16[%r8985]
	setne.32    %r8987 <- %r8986, $41
	br          %r8987, .L2079, .L2080

.L2079:
	br          .L2081

.L2081:
	load.64*    %r8988 <- 0[ls]
	load.32     %r8989 <- 16[%r8988]
	switch.32   %r8989, 279 -> .L2086, 285 -> .L2085, default -> .L2087

.L2085:
	load.64*    %r8990 <- 0[ls]
	load.64*    %r8991 <- 0[ls]
	push.64*    %r8991
	call.64*    %r8992 <- str_checkname
	load.32     %r8993 <- 0[nparams]
	add.32      %r8994 <- %r8993, $1
	store.32    %r8994 -> 0[nparams]
	push.64*    %r8990
	push.64*    %r8992
	push.32     %r8993
	call        new_localvar
	br          .L2084

.L2086:
	load.64*    %r8995 <- 0[ls]
	push.64*    %r8995
	call        luaX_next
	load.64*    %r8996 <- 0[f]
	load.8      %r8997 <- 114[%r8996]
	cast.32     %r8998 <- (8) %r8997
	or.32       %r8999 <- %r8998, $2
	scast.8     %r9000 <- (32) %r8999
	store.8     %r9000 -> 114[%r8996]
	br          .L2084

.L2087:
	load.64*    %r9001 <- 0[ls]
	symaddr.64* %r9002 <- <anon symbol:0x62d001398258>
	push.64*    %r9001
	push.64*    %r9002
	call        luaX_syntaxerror
	br          .L2084

.L2084:
	br          .L2082

.L2082:
	load.64*    %r9003 <- 0[f]
	load.8      %r9004 <- 114[%r9003]
	br          %r9004, .L2083, .L2088

.L2088:
	load.64*    %r9005 <- 0[ls]
	push.64*    %r9005
	push.32     $44
	call.32     %r9006 <- testnext
	br          %r9006, .L2081, .L2083

.L2083:
	br          .L2080

.L2080:
	load.64*    %r9007 <- 0[ls]
	load.32     %r9008 <- 0[nparams]
	push.64*    %r9007
	push.32     %r9008
	call        adjustlocalvars
	load.64*    %r9009 <- 0[fs]
	load.8      %r9010 <- 74[%r9009]
	cast.32     %r9011 <- (8) %r9010
	load.64*    %r9012 <- 0[f]
	load.8      %r9013 <- 114[%r9012]
	cast.32     %r9014 <- (8) %r9013
	and.32      %r9015 <- %r9014, $1
	sub.32      %r9016 <- %r9011, %r9015
	scast.8     %r9017 <- (32) %r9016
	load.64*    %r9018 <- 0[f]
	store.8     %r9017 -> 113[%r9018]
	load.64*    %r9019 <- 0[fs]
	load.64*    %r9020 <- 0[fs]
	load.8      %r9021 <- 74[%r9020]
	cast.32     %r9022 <- (8) %r9021
	push.64*    %r9019
	push.32     %r9022
	call        luaK_reserveregs
	br          .L2089

.L2089:
	ret


body:
.L2090:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[e]
	store.32    %arg3 -> 0[needself]
	store.32    %arg4 -> 0[line]
	load.64*    %r9023 <- 0[ls]
	symaddr.64* %r9024 <- new_fs
	push.64*    %r9023
	push.64*    %r9024
	call        open_func
	load.32     %r9025 <- 0[line]
	load.64*    %r9026 <- 0[new_fs]
	store.32    %r9025 -> 96[%r9026]
	load.64*    %r9027 <- 0[ls]
	push.64*    %r9027
	push.32     $40
	call        checknext
	load.32     %r9028 <- 0[needself]
	br          %r9028, .L2091, .L2092

.L2091:
	load.64*    %r9029 <- 0[ls]
	load.64*    %r9030 <- 0[ls]
	symaddr.64* %r9031 <- <anon symbol:0x62d001398e20>
	push.64*    %r9030
	push.64*    %r9031
	push.64     $4
	call.64*    %r9032 <- luaX_newstring
	push.64*    %r9029
	push.64*    %r9032
	push.32     $0
	call        new_localvar
	load.64*    %r9033 <- 0[ls]
	push.64*    %r9033
	push.32     $1
	call        adjustlocalvars
	br          .L2092

.L2092:
	load.64*    %r9034 <- 0[ls]
	push.64*    %r9034
	call        parlist
	load.64*    %r9035 <- 0[ls]
	push.64*    %r9035
	push.32     $41
	call        checknext
	load.64*    %r9036 <- 0[ls]
	push.64*    %r9036
	call        chunk
	load.64*    %r9037 <- 0[ls]
	load.32     %r9038 <- 4[%r9037]
	load.64*    %r9039 <- 0[new_fs]
	store.32    %r9038 -> 100[%r9039]
	load.64*    %r9040 <- 0[ls]
	load.32     %r9041 <- 0[line]
	push.64*    %r9040
	push.32     $262
	push.32     $265
	push.32     %r9041
	call        check_match
	load.64*    %r9042 <- 0[ls]
	push.64*    %r9042
	call        close_func
	load.64*    %r9043 <- 0[ls]
	symaddr.64* %r9044 <- new_fs
	load.64*    %r9045 <- 0[e]
	push.64*    %r9043
	push.64*    %r9044
	push.64*    %r9045
	call        pushclosure
	br          .L2093

.L2093:
	ret


explist1:
.L2094:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    $1 -> 0[n]
	load.64*    %r9046 <- 0[ls]
	load.64*    %r9047 <- 0[v]
	push.64*    %r9046
	push.64*    %r9047
	call        expr
	br          .L2098

.L2098:
	load.64*    %r9048 <- 0[ls]
	push.64*    %r9048
	push.32     $44
	call.32     %r9049 <- testnext
	br          %r9049, .L2095, .L2097

.L2095:
	load.64*    %r9050 <- 0[ls]
	load.64*    %r9051 <- 48[%r9050]
	load.64*    %r9052 <- 0[v]
	push.64*    %r9051
	push.64*    %r9052
	call        luaK_exp2nextreg
	load.64*    %r9053 <- 0[ls]
	load.64*    %r9054 <- 0[v]
	push.64*    %r9053
	push.64*    %r9054
	call        expr
	load.32     %r9055 <- 0[n]
	add.32      %r9056 <- %r9055, $1
	store.32    %r9056 -> 0[n]
	br          .L2096

.L2096:
	br          .L2098

.L2097:
	load.32     %r9057 <- 0[n]
	phisrc.32   %phi355(return) <- %r9057
	br          .L2099

.L2099:
	phi.32      %r9058 <- %phi355(return)
	ret.32      %r9057


funcargs:
.L2100:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[f]
	load.64*    %r9059 <- 0[ls]
	load.64*    %r9060 <- 48[%r9059]
	store.64*   %r9060 -> 0[fs]
	load.64*    %r9061 <- 0[ls]
	load.32     %r9062 <- 4[%r9061]
	store.32    %r9062 -> 0[line]
	load.64*    %r9063 <- 0[ls]
	load.32     %r9064 <- 16[%r9063]
	switch.32   %r9064, 40 -> .L2102, 123 -> .L2103, 286 -> .L2104, default -> .L2105

.L2102:
	load.32     %r9065 <- 0[line]
	load.64*    %r9066 <- 0[ls]
	load.32     %r9067 <- 8[%r9066]
	setne.32    %r9068 <- %r9065, %r9067
	br          %r9068, .L2106, .L2107

.L2106:
	load.64*    %r9069 <- 0[ls]
	symaddr.64* %r9070 <- <anon symbol:0x62d00139a2f8>
	push.64*    %r9069
	push.64*    %r9070
	call        luaX_syntaxerror
	br          .L2107

.L2107:
	load.64*    %r9071 <- 0[ls]
	push.64*    %r9071
	call        luaX_next
	load.64*    %r9072 <- 0[ls]
	load.32     %r9073 <- 16[%r9072]
	seteq.32    %r9074 <- %r9073, $41
	br          %r9074, .L2108, .L2109

.L2108:
	store.32    $0 -> 0[args]
	br          .L2110

.L2109:
	load.64*    %r9075 <- 0[ls]
	symaddr.64* %r9076 <- args
	push.64*    %r9075
	push.64*    %r9076
	call.32     %r9077 <- explist1
	load.64*    %r9078 <- 0[fs]
	symaddr.64* %r9079 <- args
	push.64*    %r9078
	push.64*    %r9079
	push.32     $0xffffffff
	call        luaK_setreturns
	br          .L2110

.L2110:
	load.64*    %r9080 <- 0[ls]
	load.32     %r9081 <- 0[line]
	push.64*    %r9080
	push.32     $41
	push.32     $40
	push.32     %r9081
	call        check_match
	br          .L2101

.L2103:
	load.64*    %r9082 <- 0[ls]
	symaddr.64* %r9083 <- args
	push.64*    %r9082
	push.64*    %r9083
	call        constructor
	br          .L2101

.L2104:
	load.64*    %r9084 <- 0[ls]
	symaddr.64* %r9085 <- args
	load.64*    %r9086 <- 0[ls]
	load.64*    %r9087 <- 24[%r9086]
	push.64*    %r9084
	push.64*    %r9085
	push.64*    %r9087
	call        codestring
	load.64*    %r9088 <- 0[ls]
	push.64*    %r9088
	call        luaX_next
	br          .L2101

.L2105:
	load.64*    %r9089 <- 0[ls]
	symaddr.64* %r9090 <- <anon symbol:0x62d0013bb1b0>
	push.64*    %r9089
	push.64*    %r9090
	call        luaX_syntaxerror
	br          .L2111

.L2101:
	load.64*    %r9091 <- 0[f]
	load.32     %r9092 <- 8[%r9091]
	store.32    %r9092 -> 0[base]
	load.32     %r9093 <- 0[args]
	scast.32    %r9094 <- (32) %r9093
	seteq.32    %r9095 <- %r9094, $13
	load.32     %r9096 <- 0[args]
	scast.32    %r9097 <- (32) %r9096
	seteq.32    %r9098 <- %r9097, $14
	or-bool.32  %r9099 <- %r9095, %r9098
	br          %r9099, .L2112, .L2113

.L2112:
	store.32    $0xffffffff -> 0[nparams]
	br          .L2114

.L2113:
	load.32     %r9100 <- 0[args]
	scast.32    %r9101 <- (32) %r9100
	setne.32    %r9102 <- %r9101, $0
	br          %r9102, .L2115, .L2116

.L2115:
	load.64*    %r9103 <- 0[fs]
	symaddr.64* %r9104 <- args
	push.64*    %r9103
	push.64*    %r9104
	call        luaK_exp2nextreg
	br          .L2116

.L2116:
	load.64*    %r9105 <- 0[fs]
	load.32     %r9106 <- 60[%r9105]
	load.32     %r9107 <- 0[base]
	add.32      %r9108 <- %r9107, $1
	sub.32      %r9109 <- %r9106, %r9108
	store.32    %r9109 -> 0[nparams]
	br          .L2114

.L2114:
	load.64*    %r9110 <- 0[f]
	load.64*    %r9111 <- 0[fs]
	load.32     %r9112 <- 0[base]
	load.32     %r9113 <- 0[nparams]
	add.32      %r9114 <- %r9113, $1
	push.64*    %r9111
	push.32     $28
	push.32     %r9112
	push.32     %r9114
	push.32     $2
	call.32     %r9115 <- luaK_codeABC
	push.64*    %r9110
	push.32     $13
	push.32     %r9115
	call        init_exp
	load.64*    %r9116 <- 0[fs]
	load.32     %r9117 <- 0[line]
	push.64*    %r9116
	push.32     %r9117
	call        luaK_fixline
	load.32     %r9118 <- 0[base]
	add.32      %r9119 <- %r9118, $1
	load.64*    %r9120 <- 0[fs]
	store.32    %r9119 -> 60[%r9120]
	br          .L2111

.L2111:
	ret


prefixexp:
.L2117:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9121 <- 0[ls]
	load.32     %r9122 <- 16[%r9121]
	switch.32   %r9122, 40 -> .L2119, 285 -> .L2120, default -> .L2121

.L2119:
	load.64*    %r9123 <- 0[ls]
	load.32     %r9124 <- 4[%r9123]
	store.32    %r9124 -> 0[line]
	load.64*    %r9125 <- 0[ls]
	push.64*    %r9125
	call        luaX_next
	load.64*    %r9126 <- 0[ls]
	load.64*    %r9127 <- 0[v]
	push.64*    %r9126
	push.64*    %r9127
	call        expr
	load.64*    %r9128 <- 0[ls]
	load.32     %r9129 <- 0[line]
	push.64*    %r9128
	push.32     $41
	push.32     $40
	push.32     %r9129
	call        check_match
	load.64*    %r9130 <- 0[ls]
	load.64*    %r9131 <- 48[%r9130]
	load.64*    %r9132 <- 0[v]
	push.64*    %r9131
	push.64*    %r9132
	call        luaK_dischargevars
	br          .L2122

.L2120:
	load.64*    %r9133 <- 0[ls]
	load.64*    %r9134 <- 0[v]
	push.64*    %r9133
	push.64*    %r9134
	call        singlevar
	br          .L2122

.L2121:
	load.64*    %r9135 <- 0[ls]
	symaddr.64* %r9136 <- <anon symbol:0x62d0013bc688>
	push.64*    %r9135
	push.64*    %r9136
	call        luaX_syntaxerror
	br          .L2122

.L2122:
	ret


primaryexp:
.L2123:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9137 <- 0[ls]
	load.64*    %r9138 <- 48[%r9137]
	store.64*   %r9138 -> 0[fs]
	load.64*    %r9139 <- 0[ls]
	load.64*    %r9140 <- 0[v]
	push.64*    %r9139
	push.64*    %r9140
	call        prefixexp
	br          .L2127

.L2127:
	br          .L2124

.L2124:
	load.64*    %r9141 <- 0[ls]
	load.32     %r9142 <- 16[%r9141]
	switch.32   %r9142, 40 -> .L2132, 46 -> .L2129, 58 -> .L2131, 91 -> .L2130, 123 -> .L2134, 286 -> .L2133, default -> .L2135

.L2129:
	load.64*    %r9143 <- 0[ls]
	load.64*    %r9144 <- 0[v]
	push.64*    %r9143
	push.64*    %r9144
	call        field
	br          .L2128

.L2130:
	load.64*    %r9145 <- 0[fs]
	load.64*    %r9146 <- 0[v]
	push.64*    %r9145
	push.64*    %r9146
	call.32     %r9147 <- luaK_exp2anyreg
	load.64*    %r9148 <- 0[ls]
	symaddr.64* %r9149 <- key
	push.64*    %r9148
	push.64*    %r9149
	call        yindex
	load.64*    %r9150 <- 0[fs]
	load.64*    %r9151 <- 0[v]
	symaddr.64* %r9152 <- key
	push.64*    %r9150
	push.64*    %r9151
	push.64*    %r9152
	call        luaK_indexed
	br          .L2128

.L2131:
	load.64*    %r9153 <- 0[ls]
	push.64*    %r9153
	call        luaX_next
	load.64*    %r9154 <- 0[ls]
	symaddr.64* %r9155 <- key
	push.64*    %r9154
	push.64*    %r9155
	call        checkname
	load.64*    %r9156 <- 0[fs]
	load.64*    %r9157 <- 0[v]
	symaddr.64* %r9158 <- key
	push.64*    %r9156
	push.64*    %r9157
	push.64*    %r9158
	call        luaK_self
	load.64*    %r9159 <- 0[ls]
	load.64*    %r9160 <- 0[v]
	push.64*    %r9159
	push.64*    %r9160
	call        funcargs
	br          .L2128

.L2132:
	br          .L2133

.L2133:
	br          .L2134

.L2134:
	load.64*    %r9161 <- 0[fs]
	load.64*    %r9162 <- 0[v]
	push.64*    %r9161
	push.64*    %r9162
	call        luaK_exp2nextreg
	load.64*    %r9163 <- 0[ls]
	load.64*    %r9164 <- 0[v]
	push.64*    %r9163
	push.64*    %r9164
	call        funcargs
	br          .L2128

.L2135:
	br          .L2136

.L2128:
	br          .L2125

.L2125:
	br          .L2127

.L2136:
	ret


simpleexp:
.L2137:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9165 <- 0[ls]
	load.32     %r9166 <- 16[%r9165]
	switch.32   %r9166, 123 -> .L2145, 263 -> .L2143, 265 -> .L2146, 269 -> .L2141, 275 -> .L2142, 279 -> .L2144, 284 -> .L2139, 286 -> .L2140, default -> .L2147

.L2139:
	load.64*    %r9167 <- 0[v]
	push.64*    %r9167
	push.32     $5
	push.32     $0
	call        init_exp
	load.64*    %r9168 <- 0[ls]
	load.f64    %r9169 <- 24[%r9168]
	load.64*    %r9170 <- 0[v]
	store.f64   %r9169 -> 8[%r9170]
	br          .L2138

.L2140:
	load.64*    %r9171 <- 0[ls]
	load.64*    %r9172 <- 0[v]
	load.64*    %r9173 <- 0[ls]
	load.64*    %r9174 <- 24[%r9173]
	push.64*    %r9171
	push.64*    %r9172
	push.64*    %r9174
	call        codestring
	br          .L2138

.L2141:
	load.64*    %r9175 <- 0[v]
	push.64*    %r9175
	push.32     $1
	push.32     $0
	call        init_exp
	br          .L2138

.L2142:
	load.64*    %r9176 <- 0[v]
	push.64*    %r9176
	push.32     $2
	push.32     $0
	call        init_exp
	br          .L2138

.L2143:
	load.64*    %r9177 <- 0[v]
	push.64*    %r9177
	push.32     $3
	push.32     $0
	call        init_exp
	br          .L2138

.L2144:
	load.64*    %r9178 <- 0[ls]
	load.64*    %r9179 <- 48[%r9178]
	store.64*   %r9179 -> 0[fs]
	load.64*    %r9180 <- 0[fs]
	load.64*    %r9181 <- 0[%r9180]
	load.8      %r9182 <- 114[%r9181]
	br          %r9182, .L2149, .L2148

.L2148:
	load.64*    %r9183 <- 0[ls]
	symaddr.64* %r9184 <- <anon symbol:0x62d0013bdfe8>
	push.64*    %r9183
	push.64*    %r9184
	call        luaX_syntaxerror
	br          .L2149

.L2149:
	load.64*    %r9185 <- 0[fs]
	load.64*    %r9186 <- 0[%r9185]
	load.8      %r9187 <- 114[%r9186]
	cast.32     %r9188 <- (8) %r9187
	and.32      %r9189 <- %r9188, $0xfffffffb
	scast.8     %r9190 <- (32) %r9189
	store.8     %r9190 -> 114[%r9186]
	load.64*    %r9191 <- 0[v]
	load.64*    %r9192 <- 0[fs]
	push.64*    %r9192
	push.32     $37
	push.32     $0
	push.32     $1
	push.32     $0
	call.32     %r9193 <- luaK_codeABC
	push.64*    %r9191
	push.32     $14
	push.32     %r9193
	call        init_exp
	br          .L2138

.L2145:
	load.64*    %r9194 <- 0[ls]
	load.64*    %r9195 <- 0[v]
	push.64*    %r9194
	push.64*    %r9195
	call        constructor
	br          .L2150

.L2146:
	load.64*    %r9196 <- 0[ls]
	push.64*    %r9196
	call        luaX_next
	load.64*    %r9197 <- 0[ls]
	load.64*    %r9198 <- 0[v]
	load.64*    %r9199 <- 0[ls]
	load.32     %r9200 <- 4[%r9199]
	push.64*    %r9197
	push.64*    %r9198
	push.32     $0
	push.32     %r9200
	call        body
	br          .L2150

.L2147:
	load.64*    %r9201 <- 0[ls]
	load.64*    %r9202 <- 0[v]
	push.64*    %r9201
	push.64*    %r9202
	call        primaryexp
	br          .L2150

.L2138:
	load.64*    %r9203 <- 0[ls]
	push.64*    %r9203
	call        luaX_next
	br          .L2150

.L2150:
	ret


getunopr:
.L2151:
	<entry-point>
	store.32    %arg1 -> 0[op]
	load.32     %r9204 <- 0[op]
	switch.32   %r9204, 35 -> .L2155, 45 -> .L2154, 270 -> .L2153, default -> .L2156

.L2153:
	phisrc.32   %phi356(return) <- $1
	br          .L2157

.L2154:
	phisrc.32   %phi357(return) <- $0
	br          .L2157

.L2155:
	phisrc.32   %phi358(return) <- $2
	br          .L2157

.L2156:
	phisrc.32   %phi359(return) <- $3
	br          .L2157

.L2157:
	phi.32      %r9205 <- %phi356(return), %phi357(return), %phi358(return), %phi359(return)
	ret.32      %r9205


getbinopr:
.L2158:
	<entry-point>
	store.32    %arg1 -> 0[op]
	load.32     %r9206 <- 0[op]
	switch.32   %r9206, 37 -> .L2164, 42 -> .L2162, 43 -> .L2160, 45 -> .L2161, 47 -> .L2163, 60 -> .L2169, 62 -> .L2171, 94 -> .L2165, 257 -> .L2173, 271 -> .L2174, 278 -> .L2166, 280 -> .L2168, 281 -> .L2172, 282 -> .L2170, 283 -> .L2167, default -> .L2175

.L2160:
	phisrc.32   %phi360(return) <- $0
	br          .L2176

.L2161:
	phisrc.32   %phi361(return) <- $1
	br          .L2176

.L2162:
	phisrc.32   %phi362(return) <- $2
	br          .L2176

.L2163:
	phisrc.32   %phi363(return) <- $3
	br          .L2176

.L2164:
	phisrc.32   %phi364(return) <- $4
	br          .L2176

.L2165:
	phisrc.32   %phi365(return) <- $5
	br          .L2176

.L2166:
	phisrc.32   %phi366(return) <- $6
	br          .L2176

.L2167:
	phisrc.32   %phi367(return) <- $7
	br          .L2176

.L2168:
	phisrc.32   %phi368(return) <- $8
	br          .L2176

.L2169:
	phisrc.32   %phi369(return) <- $9
	br          .L2176

.L2170:
	phisrc.32   %phi370(return) <- $10
	br          .L2176

.L2171:
	phisrc.32   %phi371(return) <- $11
	br          .L2176

.L2172:
	phisrc.32   %phi372(return) <- $12
	br          .L2176

.L2173:
	phisrc.32   %phi373(return) <- $13
	br          .L2176

.L2174:
	phisrc.32   %phi374(return) <- $14
	br          .L2176

.L2175:
	phisrc.32   %phi375(return) <- $15
	br          .L2176

.L2176:
	phi.32      %r9207 <- %phi360(return), %phi361(return), %phi362(return), %phi363(return), %phi364(return), %phi365(return), %phi366(return), %phi367(return), %phi368(return), %phi369(return), %phi370(return), %phi371(return), %phi372(return), %phi373(return), %phi374(return), %phi375(return)
	ret.32      %r9207


subexpr:
.L2177:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    %arg3 -> 0[limit]
	load.64*    %r9208 <- 0[ls]
	push.64*    %r9208
	call        enterlevel
	load.64*    %r9209 <- 0[ls]
	load.32     %r9210 <- 16[%r9209]
	push.32     %r9210
	call.32     %r9211 <- getunopr
	store.32    %r9211 -> 0[uop]
	load.32     %r9212 <- 0[uop]
	scast.32    %r9213 <- (32) %r9212
	setne.32    %r9214 <- %r9213, $3
	br          %r9214, .L2178, .L2179

.L2178:
	load.64*    %r9215 <- 0[ls]
	push.64*    %r9215
	call        luaX_next
	load.64*    %r9216 <- 0[ls]
	load.64*    %r9217 <- 0[v]
	push.64*    %r9216
	push.64*    %r9217
	push.32     $8
	call.32     %r9218 <- subexpr
	load.64*    %r9219 <- 0[ls]
	load.64*    %r9220 <- 48[%r9219]
	load.32     %r9221 <- 0[uop]
	load.64*    %r9222 <- 0[v]
	push.64*    %r9220
	push.32     %r9221
	push.64*    %r9222
	call        luaK_prefix
	br          .L2180

.L2179:
	load.64*    %r9223 <- 0[ls]
	load.64*    %r9224 <- 0[v]
	push.64*    %r9223
	push.64*    %r9224
	call        simpleexp
	br          .L2180

.L2180:
	load.64*    %r9225 <- 0[ls]
	load.32     %r9226 <- 16[%r9225]
	push.32     %r9226
	call.32     %r9227 <- getbinopr
	store.32    %r9227 -> 0[op]
	br          .L2184

.L2184:
	load.32     %r9228 <- 0[op]
	scast.32    %r9229 <- (32) %r9228
	setne.32    %r9230 <- %r9229, $15
	br          %r9230, .L2185, .L2183

.L2185:
	symaddr.64* %r9231 <- priority
	load.32     %r9232 <- 0[op]
	scast.64    %r9233 <- (32) %r9232
	muls.64     %r9234 <- %r9233, $2
	add.64*     %r9235 <- %r9231, %r9234
	load.8      %r9236 <- 0[%r9235]
	cast.32     %r9237 <- (8) %r9236
	load.32     %r9238 <- 0[limit]
	seta.32     %r9239 <- %r9237, %r9238
	br          %r9239, .L2181, .L2183

.L2181:
	load.64*    %r9240 <- 0[ls]
	push.64*    %r9240
	call        luaX_next
	load.64*    %r9241 <- 0[ls]
	load.64*    %r9242 <- 48[%r9241]
	load.32     %r9243 <- 0[op]
	load.64*    %r9244 <- 0[v]
	push.64*    %r9242
	push.32     %r9243
	push.64*    %r9244
	call        luaK_infix
	load.64*    %r9245 <- 0[ls]
	symaddr.64* %r9246 <- v2
	symaddr.64* %r9247 <- priority
	load.32     %r9248 <- 0[op]
	scast.64    %r9249 <- (32) %r9248
	muls.64     %r9250 <- %r9249, $2
	add.64*     %r9251 <- %r9247, %r9250
	load.8      %r9252 <- 1[%r9251]
	cast.32     %r9253 <- (8) %r9252
	push.64*    %r9245
	push.64*    %r9246
	push.32     %r9253
	call.32     %r9254 <- subexpr
	store.32    %r9254 -> 0[nextop]
	load.64*    %r9255 <- 0[ls]
	load.64*    %r9256 <- 48[%r9255]
	load.32     %r9257 <- 0[op]
	load.64*    %r9258 <- 0[v]
	symaddr.64* %r9259 <- v2
	push.64*    %r9256
	push.32     %r9257
	push.64*    %r9258
	push.64*    %r9259
	call        luaK_posfix
	load.32     %r9260 <- 0[nextop]
	store.32    %r9260 -> 0[op]
	br          .L2182

.L2182:
	br          .L2184

.L2183:
	load.64*    %r9261 <- 0[ls]
	load.64*    %r9262 <- 56[%r9261]
	load.16     %r9263 <- 96[%r9262]
	sub.16      %r9264 <- %r9263, $1
	store.16    %r9264 -> 96[%r9262]
	load.32     %r9265 <- 0[op]
	phisrc.32   %phi376(return) <- %r9265
	br          .L2186

.L2186:
	phi.32      %r9266 <- %phi376(return)
	ret.32      %r9265


expr:
.L2187:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	load.64*    %r9267 <- 0[ls]
	load.64*    %r9268 <- 0[v]
	push.64*    %r9267
	push.64*    %r9268
	push.32     $0
	call.32     %r9269 <- subexpr
	br          .L2188

.L2188:
	ret


block_follow:
.L2189:
	<entry-point>
	store.32    %arg1 -> 0[token]
	load.32     %r9270 <- 0[token]
	switch.32   %r9270, 260 -> .L2191, 261 -> .L2192, 262 -> .L2193, 276 -> .L2194, 287 -> .L2195, default -> .L2196

.L2191:
	br          .L2192

.L2192:
	br          .L2193

.L2193:
	br          .L2194

.L2194:
	br          .L2195

.L2195:
	phisrc.32   %phi377(return) <- $1
	br          .L2197

.L2196:
	phisrc.32   %phi378(return) <- $0
	br          .L2197

.L2197:
	phi.32      %r9271 <- %phi377(return), %phi378(return)
	ret.32      %r9271


block:
.L2198:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9272 <- 0[ls]
	load.64*    %r9273 <- 48[%r9272]
	store.64*   %r9273 -> 0[fs]
	load.64*    %r9274 <- 0[fs]
	symaddr.64* %r9275 <- bl
	push.64*    %r9274
	push.64*    %r9275
	push.8      $0
	call        enterblock
	load.64*    %r9276 <- 0[ls]
	push.64*    %r9276
	call        chunk
	load.64*    %r9277 <- 0[fs]
	push.64*    %r9277
	call        leaveblock
	br          .L2199

.L2199:
	ret


check_conflict:
.L2200:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[lh]
	store.64*   %arg3 -> 0[v]
	load.64*    %r9278 <- 0[ls]
	load.64*    %r9279 <- 48[%r9278]
	store.64*   %r9279 -> 0[fs]
	load.64*    %r9280 <- 0[fs]
	load.32     %r9281 <- 60[%r9280]
	store.32    %r9281 -> 0[extra]
	store.32    $0 -> 0[conflict]
	br          .L2204

.L2204:
	load.64*    %r9282 <- 0[lh]
	br          %r9282, .L2201, .L2203

.L2201:
	load.64*    %r9283 <- 0[lh]
	load.32     %r9284 <- 8[%r9283]
	scast.32    %r9285 <- (32) %r9284
	seteq.32    %r9286 <- %r9285, $9
	br          %r9286, .L2205, .L2206

.L2205:
	load.64*    %r9287 <- 0[lh]
	load.32     %r9288 <- 16[%r9287]
	load.64*    %r9289 <- 0[v]
	load.32     %r9290 <- 8[%r9289]
	seteq.32    %r9291 <- %r9288, %r9290
	br          %r9291, .L2207, .L2208

.L2207:
	store.32    $1 -> 0[conflict]
	load.32     %r9292 <- 0[extra]
	load.64*    %r9293 <- 0[lh]
	store.32    %r9292 -> 16[%r9293]
	br          .L2208

.L2208:
	load.64*    %r9294 <- 0[lh]
	load.32     %r9295 <- 20[%r9294]
	load.64*    %r9296 <- 0[v]
	load.32     %r9297 <- 8[%r9296]
	seteq.32    %r9298 <- %r9295, %r9297
	br          %r9298, .L2209, .L2210

.L2209:
	store.32    $1 -> 0[conflict]
	load.32     %r9299 <- 0[extra]
	load.64*    %r9300 <- 0[lh]
	store.32    %r9299 -> 20[%r9300]
	br          .L2210

.L2210:
	br          .L2206

.L2206:
	br          .L2202

.L2202:
	load.64*    %r9301 <- 0[lh]
	load.64*    %r9302 <- 0[%r9301]
	store.64*   %r9302 -> 0[lh]
	br          .L2204

.L2203:
	load.32     %r9303 <- 0[conflict]
	br          %r9303, .L2211, .L2212

.L2211:
	load.64*    %r9304 <- 0[fs]
	load.64*    %r9305 <- 0[fs]
	load.32     %r9306 <- 60[%r9305]
	load.64*    %r9307 <- 0[v]
	load.32     %r9308 <- 8[%r9307]
	push.64*    %r9304
	push.32     $0
	push.32     %r9306
	push.32     %r9308
	push.32     $0
	call.32     %r9309 <- luaK_codeABC
	load.64*    %r9310 <- 0[fs]
	push.64*    %r9310
	push.32     $1
	call        luaK_reserveregs
	br          .L2212

.L2212:
	ret


assignment:
.L2213:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[lh]
	store.32    %arg3 -> 0[nvars]
	load.64*    %r9311 <- 0[lh]
	load.32     %r9312 <- 8[%r9311]
	scast.32    %r9313 <- (32) %r9312
	setle.32    %r9314 <- $6, %r9313
	br          %r9314, .L2216, .L2214

.L2216:
	load.64*    %r9315 <- 0[lh]
	load.32     %r9316 <- 8[%r9315]
	scast.32    %r9317 <- (32) %r9316
	setle.32    %r9318 <- %r9317, $9
	br          %r9318, .L2215, .L2214

.L2214:
	load.64*    %r9319 <- 0[ls]
	symaddr.64* %r9320 <- <anon symbol:0x62d0013c22f8>
	push.64*    %r9319
	push.64*    %r9320
	call        luaX_syntaxerror
	br          .L2215

.L2215:
	load.64*    %r9321 <- 0[ls]
	push.64*    %r9321
	push.32     $44
	call.32     %r9322 <- testnext
	br          %r9322, .L2217, .L2218

.L2217:
	load.64*    %r9323 <- 0[lh]
	store.64*   %r9323 -> 0[nv]
	load.64*    %r9324 <- 0[ls]
	symaddr.64* %r9325 <- nv
	add.64*     %r9326 <- %r9325, $8
	push.64*    %r9324
	push.64*    %r9326
	call        primaryexp
	load.32     %r9327 <- 8[nv]
	scast.32    %r9328 <- (32) %r9327
	seteq.32    %r9329 <- %r9328, $6
	br          %r9329, .L2219, .L2220

.L2219:
	load.64*    %r9330 <- 0[ls]
	load.64*    %r9331 <- 0[lh]
	symaddr.64* %r9332 <- nv
	add.64*     %r9333 <- %r9332, $8
	push.64*    %r9330
	push.64*    %r9331
	push.64*    %r9333
	call        check_conflict
	br          .L2220

.L2220:
	load.32     %r9334 <- 0[nvars]
	load.64*    %r9335 <- 0[ls]
	load.64*    %r9336 <- 56[%r9335]
	load.16     %r9337 <- 96[%r9336]
	cast.32     %r9338 <- (16) %r9337
	sub.32      %r9339 <- $200, %r9338
	setgt.32    %r9340 <- %r9334, %r9339
	br          %r9340, .L2221, .L2222

.L2221:
	load.64*    %r9341 <- 0[ls]
	load.64*    %r9342 <- 48[%r9341]
	load.64*    %r9343 <- 0[ls]
	load.64*    %r9344 <- 56[%r9343]
	load.16     %r9345 <- 96[%r9344]
	cast.32     %r9346 <- (16) %r9345
	sub.32      %r9347 <- $200, %r9346
	symaddr.64* %r9348 <- <anon symbol:0x62d0013b1550>
	push.64*    %r9342
	push.32     %r9347
	push.64*    %r9348
	call        errorlimit
	br          .L2222

.L2222:
	load.64*    %r9349 <- 0[ls]
	symaddr.64* %r9350 <- nv
	load.32     %r9351 <- 0[nvars]
	add.32      %r9352 <- %r9351, $1
	push.64*    %r9349
	push.64*    %r9350
	push.32     %r9352
	call        assignment
	br          .L2223

.L2218:
	load.64*    %r9353 <- 0[ls]
	push.64*    %r9353
	push.32     $61
	call        checknext
	load.64*    %r9354 <- 0[ls]
	symaddr.64* %r9355 <- e
	push.64*    %r9354
	push.64*    %r9355
	call.32     %r9356 <- explist1
	store.32    %r9356 -> 0[nexps]
	load.32     %r9357 <- 0[nexps]
	load.32     %r9358 <- 0[nvars]
	setne.32    %r9359 <- %r9357, %r9358
	br          %r9359, .L2224, .L2225

.L2224:
	load.64*    %r9360 <- 0[ls]
	load.32     %r9361 <- 0[nvars]
	load.32     %r9362 <- 0[nexps]
	symaddr.64* %r9363 <- e
	push.64*    %r9360
	push.32     %r9361
	push.32     %r9362
	push.64*    %r9363
	call        adjust_assign
	load.32     %r9364 <- 0[nexps]
	load.32     %r9365 <- 0[nvars]
	setgt.32    %r9366 <- %r9364, %r9365
	br          %r9366, .L2226, .L2227

.L2226:
	load.32     %r9367 <- 0[nexps]
	load.32     %r9368 <- 0[nvars]
	sub.32      %r9369 <- %r9367, %r9368
	load.64*    %r9370 <- 0[ls]
	load.64*    %r9371 <- 48[%r9370]
	load.32     %r9372 <- 60[%r9371]
	scast.32    %r9373 <- (32) %r9372
	sub.32      %r9374 <- %r9373, %r9369
	scast.32    %r9375 <- (32) %r9374
	store.32    %r9375 -> 60[%r9371]
	br          .L2227

.L2227:
	br          .L2228

.L2225:
	load.64*    %r9376 <- 0[ls]
	load.64*    %r9377 <- 48[%r9376]
	symaddr.64* %r9378 <- e
	push.64*    %r9377
	push.64*    %r9378
	call        luaK_setoneret
	load.64*    %r9379 <- 0[ls]
	load.64*    %r9380 <- 48[%r9379]
	load.64*    %r9381 <- 0[lh]
	add.64*     %r9382 <- %r9381, $8
	symaddr.64* %r9383 <- e
	push.64*    %r9380
	push.64*    %r9382
	push.64*    %r9383
	call        luaK_storevar
	br          .L2229

.L2228:
	br          .L2223

.L2223:
	symaddr.64* %r9384 <- e
	load.64*    %r9385 <- 0[ls]
	load.64*    %r9386 <- 48[%r9385]
	load.32     %r9387 <- 60[%r9386]
	sub.32      %r9388 <- %r9387, $1
	push.64*    %r9384
	push.32     $12
	push.32     %r9388
	call        init_exp
	load.64*    %r9389 <- 0[ls]
	load.64*    %r9390 <- 48[%r9389]
	load.64*    %r9391 <- 0[lh]
	add.64*     %r9392 <- %r9391, $8
	symaddr.64* %r9393 <- e
	push.64*    %r9390
	push.64*    %r9392
	push.64*    %r9393
	call        luaK_storevar
	br          .L2229

.L2229:
	ret


cond:
.L2230:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9394 <- 0[ls]
	symaddr.64* %r9395 <- v
	push.64*    %r9394
	push.64*    %r9395
	call        expr
	load.32     %r9396 <- 0[v]
	scast.32    %r9397 <- (32) %r9396
	seteq.32    %r9398 <- %r9397, $1
	br          %r9398, .L2231, .L2232

.L2231:
	store.32    $3 -> 0[v]
	br          .L2232

.L2232:
	load.64*    %r9399 <- 0[ls]
	load.64*    %r9400 <- 48[%r9399]
	symaddr.64* %r9401 <- v
	push.64*    %r9400
	push.64*    %r9401
	call        luaK_goiftrue
	load.32     %r9402 <- 20[v]
	phisrc.32   %phi379(return) <- %r9402
	br          .L2233

.L2233:
	phi.32      %r9403 <- %phi379(return)
	ret.32      %r9402


breakstat:
.L2234:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9404 <- 0[ls]
	load.64*    %r9405 <- 48[%r9404]
	store.64*   %r9405 -> 0[fs]
	load.64*    %r9406 <- 0[fs]
	load.64*    %r9407 <- 40[%r9406]
	store.64*   %r9407 -> 0[bl]
	store.32    $0 -> 0[upval]
	br          .L2238

.L2238:
	load.64*    %r9408 <- 0[bl]
	br          %r9408, .L2239, .L2237

.L2239:
	load.64*    %r9409 <- 0[bl]
	load.8      %r9410 <- 14[%r9409]
	br          %r9410, .L2237, .L2235

.L2235:
	load.64*    %r9411 <- 0[bl]
	load.8      %r9412 <- 13[%r9411]
	cast.32     %r9413 <- (8) %r9412
	load.32     %r9414 <- 0[upval]
	scast.32    %r9415 <- (32) %r9414
	or.32       %r9416 <- %r9415, %r9413
	scast.32    %r9417 <- (32) %r9416
	store.32    %r9417 -> 0[upval]
	load.64*    %r9418 <- 0[bl]
	load.64*    %r9419 <- 0[%r9418]
	store.64*   %r9419 -> 0[bl]
	br          .L2236

.L2236:
	br          .L2238

.L2237:
	load.64*    %r9420 <- 0[bl]
	br          %r9420, .L2241, .L2240

.L2240:
	load.64*    %r9421 <- 0[ls]
	symaddr.64* %r9422 <- <anon symbol:0x62d0013b4558>
	push.64*    %r9421
	push.64*    %r9422
	call        luaX_syntaxerror
	br          .L2241

.L2241:
	load.32     %r9423 <- 0[upval]
	br          %r9423, .L2242, .L2243

.L2242:
	load.64*    %r9424 <- 0[fs]
	load.64*    %r9425 <- 0[bl]
	load.8      %r9426 <- 12[%r9425]
	cast.32     %r9427 <- (8) %r9426
	push.64*    %r9424
	push.32     $35
	push.32     %r9427
	push.32     $0
	push.32     $0
	call.32     %r9428 <- luaK_codeABC
	br          .L2243

.L2243:
	load.64*    %r9429 <- 0[fs]
	load.64*    %r9430 <- 0[bl]
	add.64*     %r9431 <- %r9430, $8
	load.64*    %r9432 <- 0[fs]
	push.64*    %r9432
	call.32     %r9433 <- luaK_jump
	push.64*    %r9429
	push.64*    %r9431
	push.32     %r9433
	call        luaK_concat
	br          .L2244

.L2244:
	ret


whilestat:
.L2245:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9434 <- 0[ls]
	load.64*    %r9435 <- 48[%r9434]
	store.64*   %r9435 -> 0[fs]
	load.64*    %r9436 <- 0[ls]
	push.64*    %r9436
	call        luaX_next
	load.64*    %r9437 <- 0[fs]
	push.64*    %r9437
	call.32     %r9438 <- luaK_getlabel
	store.32    %r9438 -> 0[whileinit]
	load.64*    %r9439 <- 0[ls]
	push.64*    %r9439
	call.32     %r9440 <- cond
	store.32    %r9440 -> 0[condexit]
	load.64*    %r9441 <- 0[fs]
	symaddr.64* %r9442 <- bl
	push.64*    %r9441
	push.64*    %r9442
	push.8      $1
	call        enterblock
	load.64*    %r9443 <- 0[ls]
	push.64*    %r9443
	push.32     $259
	call        checknext
	load.64*    %r9444 <- 0[ls]
	push.64*    %r9444
	call        block
	load.64*    %r9445 <- 0[fs]
	load.64*    %r9446 <- 0[fs]
	push.64*    %r9446
	call.32     %r9447 <- luaK_jump
	load.32     %r9448 <- 0[whileinit]
	push.64*    %r9445
	push.32     %r9447
	push.32     %r9448
	call        luaK_patchlist
	load.64*    %r9449 <- 0[ls]
	load.32     %r9450 <- 0[line]
	push.64*    %r9449
	push.32     $262
	push.32     $277
	push.32     %r9450
	call        check_match
	load.64*    %r9451 <- 0[fs]
	push.64*    %r9451
	call        leaveblock
	load.64*    %r9452 <- 0[fs]
	load.32     %r9453 <- 0[condexit]
	push.64*    %r9452
	push.32     %r9453
	call        luaK_patchtohere
	br          .L2246

.L2246:
	ret


repeatstat:
.L2247:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9454 <- 0[ls]
	load.64*    %r9455 <- 48[%r9454]
	store.64*   %r9455 -> 0[fs]
	load.64*    %r9456 <- 0[fs]
	push.64*    %r9456
	call.32     %r9457 <- luaK_getlabel
	store.32    %r9457 -> 0[repeat_init]
	load.64*    %r9458 <- 0[fs]
	symaddr.64* %r9459 <- bl1
	push.64*    %r9458
	push.64*    %r9459
	push.8      $1
	call        enterblock
	load.64*    %r9460 <- 0[fs]
	symaddr.64* %r9461 <- bl2
	push.64*    %r9460
	push.64*    %r9461
	push.8      $0
	call        enterblock
	load.64*    %r9462 <- 0[ls]
	push.64*    %r9462
	call        luaX_next
	load.64*    %r9463 <- 0[ls]
	push.64*    %r9463
	call        chunk
	load.64*    %r9464 <- 0[ls]
	load.32     %r9465 <- 0[line]
	push.64*    %r9464
	push.32     $276
	push.32     $272
	push.32     %r9465
	call        check_match
	load.64*    %r9466 <- 0[ls]
	push.64*    %r9466
	call.32     %r9467 <- cond
	store.32    %r9467 -> 0[condexit]
	load.8      %r9468 <- 13[bl2]
	br          %r9468, .L2249, .L2248

.L2248:
	load.64*    %r9469 <- 0[fs]
	push.64*    %r9469
	call        leaveblock
	load.64*    %r9470 <- 0[ls]
	load.64*    %r9471 <- 48[%r9470]
	load.32     %r9472 <- 0[condexit]
	load.32     %r9473 <- 0[repeat_init]
	push.64*    %r9471
	push.32     %r9472
	push.32     %r9473
	call        luaK_patchlist
	br          .L2250

.L2249:
	load.64*    %r9474 <- 0[ls]
	push.64*    %r9474
	call        breakstat
	load.64*    %r9475 <- 0[ls]
	load.64*    %r9476 <- 48[%r9475]
	load.32     %r9477 <- 0[condexit]
	push.64*    %r9476
	push.32     %r9477
	call        luaK_patchtohere
	load.64*    %r9478 <- 0[fs]
	push.64*    %r9478
	call        leaveblock
	load.64*    %r9479 <- 0[ls]
	load.64*    %r9480 <- 48[%r9479]
	load.64*    %r9481 <- 0[fs]
	push.64*    %r9481
	call.32     %r9482 <- luaK_jump
	load.32     %r9483 <- 0[repeat_init]
	push.64*    %r9480
	push.32     %r9482
	push.32     %r9483
	call        luaK_patchlist
	br          .L2250

.L2250:
	load.64*    %r9484 <- 0[fs]
	push.64*    %r9484
	call        leaveblock
	br          .L2251

.L2251:
	ret


exp1:
.L2252:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9485 <- 0[ls]
	symaddr.64* %r9486 <- e
	push.64*    %r9485
	push.64*    %r9486
	call        expr
	load.32     %r9487 <- 0[e]
	scast.32    %r9488 <- (32) %r9487
	store.32    %r9488 -> 0[k]
	load.64*    %r9489 <- 0[ls]
	load.64*    %r9490 <- 48[%r9489]
	symaddr.64* %r9491 <- e
	push.64*    %r9490
	push.64*    %r9491
	call        luaK_exp2nextreg
	load.32     %r9492 <- 0[k]
	phisrc.32   %phi380(return) <- %r9492
	br          .L2253

.L2253:
	phi.32      %r9493 <- %phi380(return)
	ret.32      %r9492


forbody:
.L2254:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[base]
	store.32    %arg3 -> 0[line]
	store.32    %arg4 -> 0[nvars]
	store.32    %arg5 -> 0[isnum]
	load.64*    %r9494 <- 0[ls]
	load.64*    %r9495 <- 48[%r9494]
	store.64*   %r9495 -> 0[fs]
	load.64*    %r9496 <- 0[ls]
	push.64*    %r9496
	push.32     $3
	call        adjustlocalvars
	load.64*    %r9497 <- 0[ls]
	push.64*    %r9497
	push.32     $259
	call        checknext
	load.32     %r9498 <- 0[isnum]
	br          %r9498, .L2255, .L2256

.L2255:
	load.64*    %r9499 <- 0[fs]
	load.32     %r9500 <- 0[base]
	push.64*    %r9499
	push.32     $32
	push.32     %r9500
	push.32     $0x1fffe
	call.32     %r9501 <- luaK_codeABx
	phisrc.32   %phi381 <- %r9501
	br          .L2257

.L2256:
	load.64*    %r9502 <- 0[fs]
	push.64*    %r9502
	call.32     %r9503 <- luaK_jump
	phisrc.32   %phi382 <- %r9503
	br          .L2257

.L2257:
	phi.32      %r9504 <- %phi381, %phi382
	store.32    %r9504 -> 0[prep]
	load.64*    %r9505 <- 0[fs]
	symaddr.64* %r9506 <- bl
	push.64*    %r9505
	push.64*    %r9506
	push.8      $0
	call        enterblock
	load.64*    %r9507 <- 0[ls]
	load.32     %r9508 <- 0[nvars]
	push.64*    %r9507
	push.32     %r9508
	call        adjustlocalvars
	load.64*    %r9509 <- 0[fs]
	load.32     %r9510 <- 0[nvars]
	push.64*    %r9509
	push.32     %r9510
	call        luaK_reserveregs
	load.64*    %r9511 <- 0[ls]
	push.64*    %r9511
	call        block
	load.64*    %r9512 <- 0[fs]
	push.64*    %r9512
	call        leaveblock
	load.64*    %r9513 <- 0[fs]
	load.32     %r9514 <- 0[prep]
	push.64*    %r9513
	push.32     %r9514
	call        luaK_patchtohere
	load.32     %r9515 <- 0[isnum]
	br          %r9515, .L2258, .L2259

.L2258:
	load.64*    %r9516 <- 0[fs]
	load.32     %r9517 <- 0[base]
	push.64*    %r9516
	push.32     $31
	push.32     %r9517
	push.32     $0x1fffe
	call.32     %r9518 <- luaK_codeABx
	phisrc.32   %phi383 <- %r9518
	br          .L2260

.L2259:
	load.64*    %r9519 <- 0[fs]
	load.32     %r9520 <- 0[base]
	load.32     %r9521 <- 0[nvars]
	push.64*    %r9519
	push.32     $33
	push.32     %r9520
	push.32     $0
	push.32     %r9521
	call.32     %r9522 <- luaK_codeABC
	phisrc.32   %phi384 <- %r9522
	br          .L2260

.L2260:
	phi.32      %r9523 <- %phi383, %phi384
	store.32    %r9523 -> 0[endfor]
	load.64*    %r9524 <- 0[fs]
	load.32     %r9525 <- 0[line]
	push.64*    %r9524
	push.32     %r9525
	call        luaK_fixline
	load.64*    %r9526 <- 0[fs]
	load.32     %r9527 <- 0[isnum]
	br          %r9527, .L2261, .L2262

.L2261:
	load.32     %r9528 <- 0[endfor]
	phisrc.32   %phi385 <- %r9528
	br          .L2263

.L2262:
	load.64*    %r9529 <- 0[fs]
	push.64*    %r9529
	call.32     %r9530 <- luaK_jump
	phisrc.32   %phi386 <- %r9530
	br          .L2263

.L2263:
	phi.32      %r9531 <- %phi385, %phi386
	load.32     %r9532 <- 0[prep]
	add.32      %r9533 <- %r9532, $1
	push.64*    %r9526
	push.32     %r9531
	push.32     %r9533
	call        luaK_patchlist
	br          .L2264

.L2264:
	ret


fornum:
.L2265:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[varname]
	store.32    %arg3 -> 0[line]
	load.64*    %r9534 <- 0[ls]
	load.64*    %r9535 <- 48[%r9534]
	store.64*   %r9535 -> 0[fs]
	load.64*    %r9536 <- 0[fs]
	load.32     %r9537 <- 60[%r9536]
	store.32    %r9537 -> 0[base]
	load.64*    %r9538 <- 0[ls]
	load.64*    %r9539 <- 0[ls]
	symaddr.64* %r9540 <- <anon symbol:0x62d0013b6a80>
	push.64*    %r9539
	push.64*    %r9540
	push.64     $11
	call.64*    %r9541 <- luaX_newstring
	push.64*    %r9538
	push.64*    %r9541
	push.32     $0
	call        new_localvar
	load.64*    %r9542 <- 0[ls]
	load.64*    %r9543 <- 0[ls]
	symaddr.64* %r9544 <- <anon symbol:0x62d0013b6ff0>
	push.64*    %r9543
	push.64*    %r9544
	push.64     $11
	call.64*    %r9545 <- luaX_newstring
	push.64*    %r9542
	push.64*    %r9545
	push.32     $1
	call        new_localvar
	load.64*    %r9546 <- 0[ls]
	load.64*    %r9547 <- 0[ls]
	symaddr.64* %r9548 <- <anon symbol:0x62d0013b7560>
	push.64*    %r9547
	push.64*    %r9548
	push.64     $10
	call.64*    %r9549 <- luaX_newstring
	push.64*    %r9546
	push.64*    %r9549
	push.32     $2
	call        new_localvar
	load.64*    %r9550 <- 0[ls]
	load.64*    %r9551 <- 0[varname]
	push.64*    %r9550
	push.64*    %r9551
	push.32     $3
	call        new_localvar
	load.64*    %r9552 <- 0[ls]
	push.64*    %r9552
	push.32     $61
	call        checknext
	load.64*    %r9553 <- 0[ls]
	push.64*    %r9553
	call.32     %r9554 <- exp1
	load.64*    %r9555 <- 0[ls]
	push.64*    %r9555
	push.32     $44
	call        checknext
	load.64*    %r9556 <- 0[ls]
	push.64*    %r9556
	call.32     %r9557 <- exp1
	load.64*    %r9558 <- 0[ls]
	push.64*    %r9558
	push.32     $44
	call.32     %r9559 <- testnext
	br          %r9559, .L2266, .L2267

.L2266:
	load.64*    %r9560 <- 0[ls]
	push.64*    %r9560
	call.32     %r9561 <- exp1
	br          .L2268

.L2267:
	load.64*    %r9562 <- 0[fs]
	load.64*    %r9563 <- 0[fs]
	load.32     %r9564 <- 60[%r9563]
	load.64*    %r9565 <- 0[fs]
	push.64*    %r9565
	push.f64    $1
	call.32     %r9566 <- luaK_numberK
	scast.32    %r9567 <- (32) %r9566
	push.64*    %r9562
	push.32     $1
	push.32     %r9564
	push.32     %r9567
	call.32     %r9568 <- luaK_codeABx
	load.64*    %r9569 <- 0[fs]
	push.64*    %r9569
	push.32     $1
	call        luaK_reserveregs
	br          .L2268

.L2268:
	load.64*    %r9570 <- 0[ls]
	load.32     %r9571 <- 0[base]
	load.32     %r9572 <- 0[line]
	push.64*    %r9570
	push.32     %r9571
	push.32     %r9572
	push.32     $1
	push.32     $1
	call        forbody
	br          .L2269

.L2269:
	ret


forlist:
.L2270:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[indexname]
	load.64*    %r9573 <- 0[ls]
	load.64*    %r9574 <- 48[%r9573]
	store.64*   %r9574 -> 0[fs]
	store.32    $0 -> 0[nvars]
	load.64*    %r9575 <- 0[fs]
	load.32     %r9576 <- 60[%r9575]
	store.32    %r9576 -> 0[base]
	load.64*    %r9577 <- 0[ls]
	load.64*    %r9578 <- 0[ls]
	symaddr.64* %r9579 <- <anon symbol:0x62d0013b8040>
	push.64*    %r9578
	push.64*    %r9579
	push.64     $15
	call.64*    %r9580 <- luaX_newstring
	load.32     %r9581 <- 0[nvars]
	add.32      %r9582 <- %r9581, $1
	store.32    %r9582 -> 0[nvars]
	push.64*    %r9577
	push.64*    %r9580
	push.32     %r9581
	call        new_localvar
	load.64*    %r9583 <- 0[ls]
	load.64*    %r9584 <- 0[ls]
	symaddr.64* %r9585 <- <anon symbol:0x62d0013d85e8>
	push.64*    %r9584
	push.64*    %r9585
	push.64     $11
	call.64*    %r9586 <- luaX_newstring
	load.32     %r9587 <- 0[nvars]
	add.32      %r9588 <- %r9587, $1
	store.32    %r9588 -> 0[nvars]
	push.64*    %r9583
	push.64*    %r9586
	push.32     %r9587
	call        new_localvar
	load.64*    %r9589 <- 0[ls]
	load.64*    %r9590 <- 0[ls]
	symaddr.64* %r9591 <- <anon symbol:0x62d0013d8b58>
	push.64*    %r9590
	push.64*    %r9591
	push.64     $13
	call.64*    %r9592 <- luaX_newstring
	load.32     %r9593 <- 0[nvars]
	add.32      %r9594 <- %r9593, $1
	store.32    %r9594 -> 0[nvars]
	push.64*    %r9589
	push.64*    %r9592
	push.32     %r9593
	call        new_localvar
	load.64*    %r9595 <- 0[ls]
	load.64*    %r9596 <- 0[indexname]
	load.32     %r9597 <- 0[nvars]
	add.32      %r9598 <- %r9597, $1
	store.32    %r9598 -> 0[nvars]
	push.64*    %r9595
	push.64*    %r9596
	push.32     %r9597
	call        new_localvar
	br          .L2274

.L2274:
	load.64*    %r9599 <- 0[ls]
	push.64*    %r9599
	push.32     $44
	call.32     %r9600 <- testnext
	br          %r9600, .L2271, .L2273

.L2271:
	load.64*    %r9601 <- 0[ls]
	load.64*    %r9602 <- 0[ls]
	push.64*    %r9602
	call.64*    %r9603 <- str_checkname
	load.32     %r9604 <- 0[nvars]
	add.32      %r9605 <- %r9604, $1
	store.32    %r9605 -> 0[nvars]
	push.64*    %r9601
	push.64*    %r9603
	push.32     %r9604
	call        new_localvar
	br          .L2272

.L2272:
	br          .L2274

.L2273:
	load.64*    %r9606 <- 0[ls]
	push.64*    %r9606
	push.32     $267
	call        checknext
	load.64*    %r9607 <- 0[ls]
	load.32     %r9608 <- 4[%r9607]
	store.32    %r9608 -> 0[line]
	load.64*    %r9609 <- 0[ls]
	load.64*    %r9610 <- 0[ls]
	symaddr.64* %r9611 <- e
	push.64*    %r9610
	push.64*    %r9611
	call.32     %r9612 <- explist1
	symaddr.64* %r9613 <- e
	push.64*    %r9609
	push.32     $3
	push.32     %r9612
	push.64*    %r9613
	call        adjust_assign
	load.64*    %r9614 <- 0[fs]
	push.64*    %r9614
	push.32     $3
	call        luaK_checkstack
	load.64*    %r9615 <- 0[ls]
	load.32     %r9616 <- 0[base]
	load.32     %r9617 <- 0[line]
	load.32     %r9618 <- 0[nvars]
	sub.32      %r9619 <- %r9618, $3
	push.64*    %r9615
	push.32     %r9616
	push.32     %r9617
	push.32     %r9619
	push.32     $0
	call        forbody
	br          .L2275

.L2275:
	ret


forstat:
.L2276:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9620 <- 0[ls]
	load.64*    %r9621 <- 48[%r9620]
	store.64*   %r9621 -> 0[fs]
	load.64*    %r9622 <- 0[fs]
	symaddr.64* %r9623 <- bl
	push.64*    %r9622
	push.64*    %r9623
	push.8      $1
	call        enterblock
	load.64*    %r9624 <- 0[ls]
	push.64*    %r9624
	call        luaX_next
	load.64*    %r9625 <- 0[ls]
	push.64*    %r9625
	call.64*    %r9626 <- str_checkname
	store.64*   %r9626 -> 0[varname]
	load.64*    %r9627 <- 0[ls]
	load.32     %r9628 <- 16[%r9627]
	switch.32   %r9628, 44 -> .L2279, 61 -> .L2278, 267 -> .L2280, default -> .L2281

.L2278:
	load.64*    %r9629 <- 0[ls]
	load.64*    %r9630 <- 0[varname]
	load.32     %r9631 <- 0[line]
	push.64*    %r9629
	push.64*    %r9630
	push.32     %r9631
	call        fornum
	br          .L2277

.L2279:
	br          .L2280

.L2280:
	load.64*    %r9632 <- 0[ls]
	load.64*    %r9633 <- 0[varname]
	push.64*    %r9632
	push.64*    %r9633
	call        forlist
	br          .L2277

.L2281:
	load.64*    %r9634 <- 0[ls]
	symaddr.64* %r9635 <- <anon symbol:0x62d0013d9ba8>
	push.64*    %r9634
	push.64*    %r9635
	call        luaX_syntaxerror
	br          .L2277

.L2277:
	load.64*    %r9636 <- 0[ls]
	load.32     %r9637 <- 0[line]
	push.64*    %r9636
	push.32     $262
	push.32     $264
	push.32     %r9637
	call        check_match
	load.64*    %r9638 <- 0[fs]
	push.64*    %r9638
	call        leaveblock
	br          .L2282

.L2282:
	ret


test_then_block:
.L2283:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9639 <- 0[ls]
	push.64*    %r9639
	call        luaX_next
	load.64*    %r9640 <- 0[ls]
	push.64*    %r9640
	call.32     %r9641 <- cond
	store.32    %r9641 -> 0[condexit]
	load.64*    %r9642 <- 0[ls]
	push.64*    %r9642
	push.32     $274
	call        checknext
	load.64*    %r9643 <- 0[ls]
	push.64*    %r9643
	call        block
	load.32     %r9644 <- 0[condexit]
	phisrc.32   %phi387(return) <- %r9644
	br          .L2284

.L2284:
	phi.32      %r9645 <- %phi387(return)
	ret.32      %r9644


ifstat:
.L2285:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9646 <- 0[ls]
	load.64*    %r9647 <- 48[%r9646]
	store.64*   %r9647 -> 0[fs]
	store.32    $0xffffffff -> 0[escapelist]
	load.64*    %r9648 <- 0[ls]
	push.64*    %r9648
	call.32     %r9649 <- test_then_block
	store.32    %r9649 -> 0[flist]
	br          .L2289

.L2289:
	load.64*    %r9650 <- 0[ls]
	load.32     %r9651 <- 16[%r9650]
	seteq.32    %r9652 <- %r9651, $261
	br          %r9652, .L2286, .L2288

.L2286:
	load.64*    %r9653 <- 0[fs]
	symaddr.64* %r9654 <- escapelist
	load.64*    %r9655 <- 0[fs]
	push.64*    %r9655
	call.32     %r9656 <- luaK_jump
	push.64*    %r9653
	push.64*    %r9654
	push.32     %r9656
	call        luaK_concat
	load.64*    %r9657 <- 0[fs]
	load.32     %r9658 <- 0[flist]
	push.64*    %r9657
	push.32     %r9658
	call        luaK_patchtohere
	load.64*    %r9659 <- 0[ls]
	push.64*    %r9659
	call.32     %r9660 <- test_then_block
	store.32    %r9660 -> 0[flist]
	br          .L2287

.L2287:
	br          .L2289

.L2288:
	load.64*    %r9661 <- 0[ls]
	load.32     %r9662 <- 16[%r9661]
	seteq.32    %r9663 <- %r9662, $260
	br          %r9663, .L2290, .L2291

.L2290:
	load.64*    %r9664 <- 0[fs]
	symaddr.64* %r9665 <- escapelist
	load.64*    %r9666 <- 0[fs]
	push.64*    %r9666
	call.32     %r9667 <- luaK_jump
	push.64*    %r9664
	push.64*    %r9665
	push.32     %r9667
	call        luaK_concat
	load.64*    %r9668 <- 0[fs]
	load.32     %r9669 <- 0[flist]
	push.64*    %r9668
	push.32     %r9669
	call        luaK_patchtohere
	load.64*    %r9670 <- 0[ls]
	push.64*    %r9670
	call        luaX_next
	load.64*    %r9671 <- 0[ls]
	push.64*    %r9671
	call        block
	br          .L2292

.L2291:
	load.64*    %r9672 <- 0[fs]
	symaddr.64* %r9673 <- escapelist
	load.32     %r9674 <- 0[flist]
	push.64*    %r9672
	push.64*    %r9673
	push.32     %r9674
	call        luaK_concat
	br          .L2292

.L2292:
	load.64*    %r9675 <- 0[fs]
	load.32     %r9676 <- 0[escapelist]
	push.64*    %r9675
	push.32     %r9676
	call        luaK_patchtohere
	load.64*    %r9677 <- 0[ls]
	load.32     %r9678 <- 0[line]
	push.64*    %r9677
	push.32     $262
	push.32     $266
	push.32     %r9678
	call        check_match
	br          .L2293

.L2293:
	ret


localfunc:
.L2294:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9679 <- 0[ls]
	load.64*    %r9680 <- 48[%r9679]
	store.64*   %r9680 -> 0[fs]
	load.64*    %r9681 <- 0[ls]
	load.64*    %r9682 <- 0[ls]
	push.64*    %r9682
	call.64*    %r9683 <- str_checkname
	push.64*    %r9681
	push.64*    %r9683
	push.32     $0
	call        new_localvar
	symaddr.64* %r9684 <- v
	load.64*    %r9685 <- 0[fs]
	load.32     %r9686 <- 60[%r9685]
	push.64*    %r9684
	push.32     $6
	push.32     %r9686
	call        init_exp
	load.64*    %r9687 <- 0[fs]
	push.64*    %r9687
	push.32     $1
	call        luaK_reserveregs
	load.64*    %r9688 <- 0[ls]
	push.64*    %r9688
	push.32     $1
	call        adjustlocalvars
	load.64*    %r9689 <- 0[ls]
	symaddr.64* %r9690 <- b
	load.64*    %r9691 <- 0[ls]
	load.32     %r9692 <- 4[%r9691]
	push.64*    %r9689
	push.64*    %r9690
	push.32     $0
	push.32     %r9692
	call        body
	load.64*    %r9693 <- 0[fs]
	symaddr.64* %r9694 <- v
	symaddr.64* %r9695 <- b
	push.64*    %r9693
	push.64*    %r9694
	push.64*    %r9695
	call        luaK_storevar
	load.64*    %r9696 <- 0[fs]
	load.32     %r9697 <- 48[%r9696]
	load.64*    %r9698 <- 0[fs]
	load.64*    %r9699 <- 0[%r9698]
	load.64*    %r9700 <- 48[%r9699]
	load.64*    %r9701 <- 0[fs]
	add.64*     %r9702 <- %r9701, $196
	load.64*    %r9703 <- 0[fs]
	load.8      %r9704 <- 74[%r9703]
	cast.32     %r9705 <- (8) %r9704
	sub.32      %r9706 <- %r9705, $1
	scast.64    %r9707 <- (32) %r9706
	muls.64     %r9708 <- %r9707, $2
	add.64*     %r9709 <- %r9702, %r9708
	load.16     %r9710 <- 0[%r9709]
	cast.64     %r9711 <- (16) %r9710
	muls.64     %r9712 <- %r9711, $16
	add.64*     %r9713 <- %r9700, %r9712
	store.32    %r9697 -> 8[%r9713]
	br          .L2295

.L2295:
	ret


localstat:
.L2296:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[nvars]
	br          .L2297

.L2297:
	load.64*    %r9714 <- 0[ls]
	load.64*    %r9715 <- 0[ls]
	push.64*    %r9715
	call.64*    %r9716 <- str_checkname
	load.32     %r9717 <- 0[nvars]
	add.32      %r9718 <- %r9717, $1
	store.32    %r9718 -> 0[nvars]
	push.64*    %r9714
	push.64*    %r9716
	push.32     %r9717
	call        new_localvar
	br          .L2298

.L2298:
	load.64*    %r9719 <- 0[ls]
	push.64*    %r9719
	push.32     $44
	call.32     %r9720 <- testnext
	br          %r9720, .L2297, .L2299

.L2299:
	load.64*    %r9721 <- 0[ls]
	push.64*    %r9721
	push.32     $61
	call.32     %r9722 <- testnext
	br          %r9722, .L2300, .L2301

.L2300:
	load.64*    %r9723 <- 0[ls]
	symaddr.64* %r9724 <- e
	push.64*    %r9723
	push.64*    %r9724
	call.32     %r9725 <- explist1
	store.32    %r9725 -> 0[nexps]
	br          .L2302

.L2301:
	store.32    $0 -> 0[e]
	store.32    $0 -> 0[nexps]
	br          .L2302

.L2302:
	load.64*    %r9726 <- 0[ls]
	load.32     %r9727 <- 0[nvars]
	load.32     %r9728 <- 0[nexps]
	symaddr.64* %r9729 <- e
	push.64*    %r9726
	push.32     %r9727
	push.32     %r9728
	push.64*    %r9729
	call        adjust_assign
	load.64*    %r9730 <- 0[ls]
	load.32     %r9731 <- 0[nvars]
	push.64*    %r9730
	push.32     %r9731
	call        adjustlocalvars
	br          .L2303

.L2303:
	ret


funcname:
.L2304:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[v]
	store.32    $0 -> 0[needself]
	load.64*    %r9732 <- 0[ls]
	load.64*    %r9733 <- 0[v]
	push.64*    %r9732
	push.64*    %r9733
	call        singlevar
	br          .L2308

.L2308:
	load.64*    %r9734 <- 0[ls]
	load.32     %r9735 <- 16[%r9734]
	seteq.32    %r9736 <- %r9735, $46
	br          %r9736, .L2305, .L2307

.L2305:
	load.64*    %r9737 <- 0[ls]
	load.64*    %r9738 <- 0[v]
	push.64*    %r9737
	push.64*    %r9738
	call        field
	br          .L2306

.L2306:
	br          .L2308

.L2307:
	load.64*    %r9739 <- 0[ls]
	load.32     %r9740 <- 16[%r9739]
	seteq.32    %r9741 <- %r9740, $58
	br          %r9741, .L2309, .L2310

.L2309:
	store.32    $1 -> 0[needself]
	load.64*    %r9742 <- 0[ls]
	load.64*    %r9743 <- 0[v]
	push.64*    %r9742
	push.64*    %r9743
	call        field
	br          .L2310

.L2310:
	load.32     %r9744 <- 0[needself]
	phisrc.32   %phi388(return) <- %r9744
	br          .L2311

.L2311:
	phi.32      %r9745 <- %phi388(return)
	ret.32      %r9744


funcstat:
.L2312:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    %arg2 -> 0[line]
	load.64*    %r9746 <- 0[ls]
	push.64*    %r9746
	call        luaX_next
	load.64*    %r9747 <- 0[ls]
	symaddr.64* %r9748 <- v
	push.64*    %r9747
	push.64*    %r9748
	call.32     %r9749 <- funcname
	store.32    %r9749 -> 0[needself]
	load.64*    %r9750 <- 0[ls]
	symaddr.64* %r9751 <- b
	load.32     %r9752 <- 0[needself]
	load.32     %r9753 <- 0[line]
	push.64*    %r9750
	push.64*    %r9751
	push.32     %r9752
	push.32     %r9753
	call        body
	load.64*    %r9754 <- 0[ls]
	load.64*    %r9755 <- 48[%r9754]
	symaddr.64* %r9756 <- v
	symaddr.64* %r9757 <- b
	push.64*    %r9755
	push.64*    %r9756
	push.64*    %r9757
	call        luaK_storevar
	load.64*    %r9758 <- 0[ls]
	load.64*    %r9759 <- 48[%r9758]
	load.32     %r9760 <- 0[line]
	push.64*    %r9759
	push.32     %r9760
	call        luaK_fixline
	br          .L2313

.L2313:
	ret


exprstat:
.L2314:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9761 <- 0[ls]
	load.64*    %r9762 <- 48[%r9761]
	store.64*   %r9762 -> 0[fs]
	load.64*    %r9763 <- 0[ls]
	symaddr.64* %r9764 <- v
	add.64*     %r9765 <- %r9764, $8
	push.64*    %r9763
	push.64*    %r9765
	call        primaryexp
	load.32     %r9766 <- 8[v]
	scast.32    %r9767 <- (32) %r9766
	seteq.32    %r9768 <- %r9767, $13
	br          %r9768, .L2315, .L2316

.L2315:
	load.64*    %r9769 <- 0[fs]
	load.64*    %r9770 <- 0[%r9769]
	load.64*    %r9771 <- 24[%r9770]
	load.32     %r9772 <- 16[v]
	scast.64    %r9773 <- (32) %r9772
	muls.64     %r9774 <- %r9773, $4
	add.64*     %r9775 <- %r9771, %r9774
	load.32     %r9776 <- 0[%r9775]
	and.32      %r9777 <- %r9776, $0xff803fff
	or.32       %r9778 <- %r9777, $0x4000
	load.64*    %r9779 <- 0[fs]
	load.64*    %r9780 <- 0[%r9779]
	load.64*    %r9781 <- 24[%r9780]
	load.32     %r9782 <- 16[v]
	scast.64    %r9783 <- (32) %r9782
	muls.64     %r9784 <- %r9783, $4
	add.64*     %r9785 <- %r9781, %r9784
	store.32    %r9778 -> 0[%r9785]
	br          .L2317

.L2316:
	store.64*   $0 -> 0[v]
	load.64*    %r9786 <- 0[ls]
	symaddr.64* %r9787 <- v
	push.64*    %r9786
	push.64*    %r9787
	push.32     $1
	call        assignment
	br          .L2317

.L2317:
	ret


retstat:
.L2318:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9788 <- 0[ls]
	load.64*    %r9789 <- 48[%r9788]
	store.64*   %r9789 -> 0[fs]
	load.64*    %r9790 <- 0[ls]
	push.64*    %r9790
	call        luaX_next
	load.64*    %r9791 <- 0[ls]
	load.32     %r9792 <- 16[%r9791]
	push.32     %r9792
	call.32     %r9793 <- block_follow
	br          %r9793, .L2319, .L2321

.L2321:
	load.64*    %r9794 <- 0[ls]
	load.32     %r9795 <- 16[%r9794]
	seteq.32    %r9796 <- %r9795, $59
	br          %r9796, .L2319, .L2320

.L2319:
	store.32    $0 -> 0[nret]
	store.32    $0 -> 0[first]
	br          .L2322

.L2320:
	load.64*    %r9797 <- 0[ls]
	symaddr.64* %r9798 <- e
	push.64*    %r9797
	push.64*    %r9798
	call.32     %r9799 <- explist1
	store.32    %r9799 -> 0[nret]
	load.32     %r9800 <- 0[e]
	scast.32    %r9801 <- (32) %r9800
	seteq.32    %r9802 <- %r9801, $13
	load.32     %r9803 <- 0[e]
	scast.32    %r9804 <- (32) %r9803
	seteq.32    %r9805 <- %r9804, $14
	or-bool.32  %r9806 <- %r9802, %r9805
	br          %r9806, .L2323, .L2324

.L2323:
	load.64*    %r9807 <- 0[fs]
	symaddr.64* %r9808 <- e
	push.64*    %r9807
	push.64*    %r9808
	push.32     $0xffffffff
	call        luaK_setreturns
	load.32     %r9809 <- 0[e]
	scast.32    %r9810 <- (32) %r9809
	seteq.32    %r9811 <- %r9810, $13
	load.32     %r9812 <- 0[nret]
	seteq.32    %r9813 <- %r9812, $1
	and-bool.32 %r9814 <- %r9811, %r9813
	br          %r9814, .L2325, .L2326

.L2325:
	load.64*    %r9815 <- 0[fs]
	load.64*    %r9816 <- 0[%r9815]
	load.64*    %r9817 <- 24[%r9816]
	load.32     %r9818 <- 8[e]
	scast.64    %r9819 <- (32) %r9818
	muls.64     %r9820 <- %r9819, $4
	add.64*     %r9821 <- %r9817, %r9820
	load.32     %r9822 <- 0[%r9821]
	and.32      %r9823 <- %r9822, $0xffffffc0
	or.32       %r9824 <- %r9823, $29
	load.64*    %r9825 <- 0[fs]
	load.64*    %r9826 <- 0[%r9825]
	load.64*    %r9827 <- 24[%r9826]
	load.32     %r9828 <- 8[e]
	scast.64    %r9829 <- (32) %r9828
	muls.64     %r9830 <- %r9829, $4
	add.64*     %r9831 <- %r9827, %r9830
	store.32    %r9824 -> 0[%r9831]
	br          .L2326

.L2326:
	load.64*    %r9832 <- 0[fs]
	load.8      %r9833 <- 74[%r9832]
	cast.32     %r9834 <- (8) %r9833
	store.32    %r9834 -> 0[first]
	store.32    $0xffffffff -> 0[nret]
	br          .L2327

.L2324:
	load.32     %r9835 <- 0[nret]
	seteq.32    %r9836 <- %r9835, $1
	br          %r9836, .L2328, .L2329

.L2328:
	load.64*    %r9837 <- 0[fs]
	symaddr.64* %r9838 <- e
	push.64*    %r9837
	push.64*    %r9838
	call.32     %r9839 <- luaK_exp2anyreg
	store.32    %r9839 -> 0[first]
	br          .L2330

.L2329:
	load.64*    %r9840 <- 0[fs]
	symaddr.64* %r9841 <- e
	push.64*    %r9840
	push.64*    %r9841
	call        luaK_exp2nextreg
	load.64*    %r9842 <- 0[fs]
	load.8      %r9843 <- 74[%r9842]
	cast.32     %r9844 <- (8) %r9843
	store.32    %r9844 -> 0[first]
	br          .L2330

.L2330:
	br          .L2327

.L2327:
	br          .L2322

.L2322:
	load.64*    %r9845 <- 0[fs]
	load.32     %r9846 <- 0[first]
	load.32     %r9847 <- 0[nret]
	push.64*    %r9845
	push.32     %r9846
	push.32     %r9847
	call        luaK_ret
	br          .L2331

.L2331:
	ret


statement:
.L2332:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	load.64*    %r9848 <- 0[ls]
	load.32     %r9849 <- 4[%r9848]
	store.32    %r9849 -> 0[line]
	load.64*    %r9850 <- 0[ls]
	load.32     %r9851 <- 16[%r9850]
	switch.32   %r9851, 258 -> .L2342, 259 -> .L2336, 264 -> .L2337, 265 -> .L2339, 266 -> .L2334, 268 -> .L2340, 272 -> .L2338, 273 -> .L2341, 277 -> .L2335, default -> .L2343

.L2334:
	load.64*    %r9852 <- 0[ls]
	load.32     %r9853 <- 0[line]
	push.64*    %r9852
	push.32     %r9853
	call        ifstat
	phisrc.32   %phi389(return) <- $0
	br          .L2344

.L2335:
	load.64*    %r9855 <- 0[ls]
	load.32     %r9856 <- 0[line]
	push.64*    %r9855
	push.32     %r9856
	call        whilestat
	phisrc.32   %phi390(return) <- $0
	br          .L2344

.L2336:
	load.64*    %r9857 <- 0[ls]
	push.64*    %r9857
	call        luaX_next
	load.64*    %r9858 <- 0[ls]
	push.64*    %r9858
	call        block
	load.64*    %r9859 <- 0[ls]
	load.32     %r9860 <- 0[line]
	push.64*    %r9859
	push.32     $262
	push.32     $259
	push.32     %r9860
	call        check_match
	phisrc.32   %phi391(return) <- $0
	br          .L2344

.L2337:
	load.64*    %r9861 <- 0[ls]
	load.32     %r9862 <- 0[line]
	push.64*    %r9861
	push.32     %r9862
	call        forstat
	phisrc.32   %phi392(return) <- $0
	br          .L2344

.L2338:
	load.64*    %r9863 <- 0[ls]
	load.32     %r9864 <- 0[line]
	push.64*    %r9863
	push.32     %r9864
	call        repeatstat
	phisrc.32   %phi393(return) <- $0
	br          .L2344

.L2339:
	load.64*    %r9865 <- 0[ls]
	load.32     %r9866 <- 0[line]
	push.64*    %r9865
	push.32     %r9866
	call        funcstat
	phisrc.32   %phi394(return) <- $0
	br          .L2344

.L2340:
	load.64*    %r9867 <- 0[ls]
	push.64*    %r9867
	call        luaX_next
	load.64*    %r9868 <- 0[ls]
	push.64*    %r9868
	push.32     $265
	call.32     %r9869 <- testnext
	br          %r9869, .L2345, .L2346

.L2345:
	load.64*    %r9870 <- 0[ls]
	push.64*    %r9870
	call        localfunc
	br          .L2347

.L2346:
	load.64*    %r9871 <- 0[ls]
	push.64*    %r9871
	call        localstat
	br          .L2347

.L2347:
	phisrc.32   %phi395(return) <- $0
	br          .L2344

.L2341:
	load.64*    %r9872 <- 0[ls]
	push.64*    %r9872
	call        retstat
	phisrc.32   %phi396(return) <- $1
	br          .L2344

.L2342:
	load.64*    %r9873 <- 0[ls]
	push.64*    %r9873
	call        luaX_next
	load.64*    %r9874 <- 0[ls]
	push.64*    %r9874
	call        breakstat
	phisrc.32   %phi397(return) <- $1
	br          .L2344

.L2343:
	load.64*    %r9875 <- 0[ls]
	push.64*    %r9875
	call        exprstat
	phisrc.32   %phi398(return) <- $0
	br          .L2344

.L2344:
	phi.32      %r9854 <- %phi389(return), %phi390(return), %phi391(return), %phi392(return), %phi393(return), %phi394(return), %phi395(return), %phi396(return), %phi397(return), %phi398(return)
	ret.32      %r9854


chunk:
.L2348:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.32    $0 -> 0[islast]
	load.64*    %r9876 <- 0[ls]
	push.64*    %r9876
	call        enterlevel
	br          .L2352

.L2352:
	load.32     %r9877 <- 0[islast]
	br          %r9877, .L2351, .L2353

.L2353:
	load.64*    %r9878 <- 0[ls]
	load.32     %r9879 <- 16[%r9878]
	push.32     %r9879
	call.32     %r9880 <- block_follow
	br          %r9880, .L2351, .L2349

.L2349:
	load.64*    %r9881 <- 0[ls]
	push.64*    %r9881
	call.32     %r9882 <- statement
	store.32    %r9882 -> 0[islast]
	load.64*    %r9883 <- 0[ls]
	push.64*    %r9883
	push.32     $59
	call.32     %r9884 <- testnext
	load.64*    %r9885 <- 0[ls]
	load.64*    %r9886 <- 48[%r9885]
	load.8      %r9887 <- 74[%r9886]
	cast.32     %r9888 <- (8) %r9887
	load.64*    %r9889 <- 0[ls]
	load.64*    %r9890 <- 48[%r9889]
	store.32    %r9888 -> 60[%r9890]
	br          .L2350

.L2350:
	br          .L2352

.L2351:
	load.64*    %r9891 <- 0[ls]
	load.64*    %r9892 <- 56[%r9891]
	load.16     %r9893 <- 96[%r9892]
	sub.16      %r9894 <- %r9893, $1
	store.16    %r9894 -> 96[%r9892]
	br          .L2354

.L2354:
	ret


luaV_tonumber:
.L2355:
	<entry-point>
	store.64*   %arg1 -> 0[obj]
	store.64*   %arg2 -> 0[n]
	load.64*    %r9895 <- 0[obj]
	load.32     %r9896 <- 8[%r9895]
	scast.32    %r9897 <- (32) %r9896
	seteq.32    %r9898 <- %r9897, $3
	br          %r9898, .L2356, .L2357

.L2356:
	load.64*    %r9899 <- 0[obj]
	phisrc.64*  %phi399(return) <- %r9899
	br          .L2358

.L2357:
	load.64*    %r9901 <- 0[obj]
	load.32     %r9902 <- 8[%r9901]
	scast.32    %r9903 <- (32) %r9902
	seteq.32    %r9904 <- %r9903, $4
	br          %r9904, .L2361, .L2360

.L2361:
	load.64*    %r9905 <- 0[obj]
	load.64*    %r9906 <- 0[%r9905]
	add.64*     %r9907 <- %r9906, $0
	add.64*     %r9908 <- %r9907, $24
	ptrcast.64* %r9909 <- (64) %r9908
	symaddr.64* %r9910 <- num
	push.64*    %r9909
	push.64*    %r9910
	call.32     %r9911 <- luaO_str2d
	br          %r9911, .L2359, .L2360

.L2359:
	load.64*    %r9912 <- 0[n]
	store.64*   %r9912 -> 0[i_o]
	load.f64    %r9913 <- 0[num]
	load.64*    %r9914 <- 0[i_o]
	store.f64   %r9913 -> 0[%r9914]
	load.64*    %r9915 <- 0[i_o]
	store.32    $3 -> 8[%r9915]
	load.64*    %r9916 <- 0[n]
	phisrc.64*  %phi400(return) <- %r9916
	br          .L2358

.L2360:
	phisrc.64*  %phi401(return) <- $0
	br          .L2358

.L2358:
	phi.64*     %r9900 <- %phi399(return), %phi400(return), %phi401(return)
	ret.64*     %r9900


luaV_tostring:
.L2363:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[obj]
	load.64*    %r9917 <- 0[obj]
	load.32     %r9918 <- 8[%r9917]
	seteq.32    %r9919 <- %r9918, $3
	br          %r9919, .L2365, .L2364

.L2364:
	phisrc.32   %phi402(return) <- $0
	br          .L2366

.L2365:
	load.64*    %r9921 <- 0[obj]
	load.f64    %r9922 <- 0[%r9921]
	store.f64   %r9922 -> 0[n]
	symaddr.64* %r9923 <- s
	symaddr.64* %r9924 <- <anon symbol:0x62d0011091b0>
	load.f64    %r9925 <- 0[n]
	push.64*    %r9923
	push.64*    %r9924
	push.f64    %r9925
	call.32     %r9926 <- sprintf
	load.64*    %r9927 <- 0[obj]
	store.64*   %r9927 -> 0[i_o]
	load.64*    %r9928 <- 0[L]
	symaddr.64* %r9929 <- s
	symaddr.64* %r9930 <- s
	push.64*    %r9930
	call.64     %r9931 <- strlen
	push.64*    %r9928
	push.64*    %r9929
	push.64     %r9931
	call.64*    %r9932 <- luaS_newlstr
	ptrcast.64* %r9933 <- (64) %r9932
	load.64*    %r9934 <- 0[i_o]
	store.64*   %r9933 -> 0[%r9934]
	load.64*    %r9935 <- 0[i_o]
	store.32    $4 -> 8[%r9935]
	phisrc.32   %phi403(return) <- $1
	br          .L2366

.L2366:
	phi.32      %r9920 <- %phi402(return), %phi403(return)
	ret.32      %r9920


callTMres:
.L2368:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[res]
	store.64*   %arg3 -> 0[f]
	store.64*   %arg4 -> 0[p1]
	store.64*   %arg5 -> 0[p2]
	load.64*    %r9936 <- 0[res]
	ptrcast.64* %r9937 <- (64) %r9936
	load.64*    %r9938 <- 0[L]
	load.64*    %r9939 <- 64[%r9938]
	ptrcast.64* %r9940 <- (64) %r9939
	sub.64      %r9941 <- %r9937, %r9940
	store.64    %r9941 -> 0[result]
	load.64*    %r9942 <- 0[f]
	store.64*   %r9942 -> 0[o2]
	load.64*    %r9943 <- 0[L]
	load.64*    %r9944 <- 16[%r9943]
	store.64*   %r9944 -> 0[o1]
	load.64*    %r9945 <- 0[o2]
	load.f64    %r9946 <- 0[%r9945]
	fpcast.f64  %r9947 <- (64) %r9946
	load.64*    %r9948 <- 0[o1]
	store.f64   %r9947 -> 0[%r9948]
	load.64*    %r9949 <- 0[o2]
	load.32     %r9950 <- 8[%r9949]
	scast.32    %r9951 <- (32) %r9950
	load.64*    %r9952 <- 0[o1]
	store.32    %r9951 -> 8[%r9952]
	load.64*    %r9953 <- 0[p1]
	store.64*   %r9953 -> 0[o2]
	load.64*    %r9954 <- 0[L]
	load.64*    %r9955 <- 16[%r9954]
	add.64*     %r9956 <- %r9955, $16
	store.64*   %r9956 -> 0[o1]
	load.64*    %r9957 <- 0[o2]
	load.f64    %r9958 <- 0[%r9957]
	fpcast.f64  %r9959 <- (64) %r9958
	load.64*    %r9960 <- 0[o1]
	store.f64   %r9959 -> 0[%r9960]
	load.64*    %r9961 <- 0[o2]
	load.32     %r9962 <- 8[%r9961]
	scast.32    %r9963 <- (32) %r9962
	load.64*    %r9964 <- 0[o1]
	store.32    %r9963 -> 8[%r9964]
	load.64*    %r9965 <- 0[p2]
	store.64*   %r9965 -> 0[o2]
	load.64*    %r9966 <- 0[L]
	load.64*    %r9967 <- 16[%r9966]
	add.64*     %r9968 <- %r9967, $32
	store.64*   %r9968 -> 0[o1]
	load.64*    %r9969 <- 0[o2]
	load.f64    %r9970 <- 0[%r9969]
	fpcast.f64  %r9971 <- (64) %r9970
	load.64*    %r9972 <- 0[o1]
	store.f64   %r9971 -> 0[%r9972]
	load.64*    %r9973 <- 0[o2]
	load.32     %r9974 <- 8[%r9973]
	scast.32    %r9975 <- (32) %r9974
	load.64*    %r9976 <- 0[o1]
	store.32    %r9975 -> 8[%r9976]
	load.64*    %r9977 <- 0[L]
	load.64*    %r9978 <- 56[%r9977]
	ptrcast.64* %r9979 <- (64) %r9978
	load.64*    %r9980 <- 0[L]
	load.64*    %r9981 <- 16[%r9980]
	ptrcast.64* %r9982 <- (64) %r9981
	sub.64      %r9983 <- %r9979, %r9982
	setle.32    %r9984 <- %r9983, $48
	br          %r9984, .L2369, .L2370

.L2369:
	load.64*    %r9985 <- 0[L]
	push.64*    %r9985
	push.32     $3
	call        luaD_growstack
	br          .L2371

.L2370:
	br          .L2371

.L2371:
	load.64*    %r9986 <- 0[L]
	load.64*    %r9987 <- 16[%r9986]
	cast.64     %r9988 <- (64) %r9987
	add.64      %r9989 <- %r9988, $48
	ptrcast.64* %r9990 <- (64) %r9989
	store.64*   %r9990 -> 16[%r9986]
	load.64*    %r9991 <- 0[L]
	load.64*    %r9992 <- 0[L]
	load.64*    %r9993 <- 16[%r9992]
	sub.64*     %r9994 <- %r9993, $48
	push.64*    %r9991
	push.64*    %r9994
	push.32     $1
	call        luaD_call
	load.64*    %r9995 <- 0[L]
	load.64*    %r9996 <- 64[%r9995]
	ptrcast.64* %r9997 <- (64) %r9996
	load.64     %r9998 <- 0[result]
	add.64*     %r9999 <- %r9997, %r9998
	ptrcast.64* %r10000 <- (64) %r9999
	store.64*   %r10000 -> 0[res]
	load.64*    %r10001 <- 0[L]
	load.64*    %r10002 <- 16[%r10001]
	sub.64*     %r10003 <- %r10002, $16
	store.64*   %r10003 -> 16[%r10001]
	load.64*    %r10004 <- 0[L]
	load.64*    %r10005 <- 16[%r10004]
	store.64*   %r10005 -> 0[o2]
	load.64*    %r10006 <- 0[res]
	store.64*   %r10006 -> 0[o1]
	load.64*    %r10007 <- 0[o2]
	load.f64    %r10008 <- 0[%r10007]
	fpcast.f64  %r10009 <- (64) %r10008
	load.64*    %r10010 <- 0[o1]
	store.f64   %r10009 -> 0[%r10010]
	load.64*    %r10011 <- 0[o2]
	load.32     %r10012 <- 8[%r10011]
	scast.32    %r10013 <- (32) %r10012
	load.64*    %r10014 <- 0[o1]
	store.32    %r10013 -> 8[%r10014]
	br          .L2372

.L2372:
	ret


callTM:
.L2373:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64*   %arg3 -> 0[p1]
	store.64*   %arg4 -> 0[p2]
	store.64*   %arg5 -> 0[p3]
	load.64*    %r10015 <- 0[f]
	store.64*   %r10015 -> 0[o2]
	load.64*    %r10016 <- 0[L]
	load.64*    %r10017 <- 16[%r10016]
	store.64*   %r10017 -> 0[o1]
	load.64*    %r10018 <- 0[o2]
	load.f64    %r10019 <- 0[%r10018]
	fpcast.f64  %r10020 <- (64) %r10019
	load.64*    %r10021 <- 0[o1]
	store.f64   %r10020 -> 0[%r10021]
	load.64*    %r10022 <- 0[o2]
	load.32     %r10023 <- 8[%r10022]
	scast.32    %r10024 <- (32) %r10023
	load.64*    %r10025 <- 0[o1]
	store.32    %r10024 -> 8[%r10025]
	load.64*    %r10026 <- 0[p1]
	store.64*   %r10026 -> 0[o2]
	load.64*    %r10027 <- 0[L]
	load.64*    %r10028 <- 16[%r10027]
	add.64*     %r10029 <- %r10028, $16
	store.64*   %r10029 -> 0[o1]
	load.64*    %r10030 <- 0[o2]
	load.f64    %r10031 <- 0[%r10030]
	fpcast.f64  %r10032 <- (64) %r10031
	load.64*    %r10033 <- 0[o1]
	store.f64   %r10032 -> 0[%r10033]
	load.64*    %r10034 <- 0[o2]
	load.32     %r10035 <- 8[%r10034]
	scast.32    %r10036 <- (32) %r10035
	load.64*    %r10037 <- 0[o1]
	store.32    %r10036 -> 8[%r10037]
	load.64*    %r10038 <- 0[p2]
	store.64*   %r10038 -> 0[o2]
	load.64*    %r10039 <- 0[L]
	load.64*    %r10040 <- 16[%r10039]
	add.64*     %r10041 <- %r10040, $32
	store.64*   %r10041 -> 0[o1]
	load.64*    %r10042 <- 0[o2]
	load.f64    %r10043 <- 0[%r10042]
	fpcast.f64  %r10044 <- (64) %r10043
	load.64*    %r10045 <- 0[o1]
	store.f64   %r10044 -> 0[%r10045]
	load.64*    %r10046 <- 0[o2]
	load.32     %r10047 <- 8[%r10046]
	scast.32    %r10048 <- (32) %r10047
	load.64*    %r10049 <- 0[o1]
	store.32    %r10048 -> 8[%r10049]
	load.64*    %r10050 <- 0[p3]
	store.64*   %r10050 -> 0[o2]
	load.64*    %r10051 <- 0[L]
	load.64*    %r10052 <- 16[%r10051]
	add.64*     %r10053 <- %r10052, $48
	store.64*   %r10053 -> 0[o1]
	load.64*    %r10054 <- 0[o2]
	load.f64    %r10055 <- 0[%r10054]
	fpcast.f64  %r10056 <- (64) %r10055
	load.64*    %r10057 <- 0[o1]
	store.f64   %r10056 -> 0[%r10057]
	load.64*    %r10058 <- 0[o2]
	load.32     %r10059 <- 8[%r10058]
	scast.32    %r10060 <- (32) %r10059
	load.64*    %r10061 <- 0[o1]
	store.32    %r10060 -> 8[%r10061]
	load.64*    %r10062 <- 0[L]
	load.64*    %r10063 <- 56[%r10062]
	ptrcast.64* %r10064 <- (64) %r10063
	load.64*    %r10065 <- 0[L]
	load.64*    %r10066 <- 16[%r10065]
	ptrcast.64* %r10067 <- (64) %r10066
	sub.64      %r10068 <- %r10064, %r10067
	setle.32    %r10069 <- %r10068, $64
	br          %r10069, .L2374, .L2375

.L2374:
	load.64*    %r10070 <- 0[L]
	push.64*    %r10070
	push.32     $4
	call        luaD_growstack
	br          .L2376

.L2375:
	br          .L2376

.L2376:
	load.64*    %r10071 <- 0[L]
	load.64*    %r10072 <- 16[%r10071]
	cast.64     %r10073 <- (64) %r10072
	add.64      %r10074 <- %r10073, $64
	ptrcast.64* %r10075 <- (64) %r10074
	store.64*   %r10075 -> 16[%r10071]
	load.64*    %r10076 <- 0[L]
	load.64*    %r10077 <- 0[L]
	load.64*    %r10078 <- 16[%r10077]
	sub.64*     %r10079 <- %r10078, $64
	push.64*    %r10076
	push.64*    %r10079
	push.32     $0
	call        luaD_call
	br          .L2377

.L2377:
	ret


luaV_gettable:
.L2378:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	store.64*   %arg4 -> 0[val]
	store.32    $0 -> 0[loop]
	br          .L2382

.L2382:
	load.32     %r10080 <- 0[loop]
	setlt.32    %r10081 <- %r10080, $100
	br          %r10081, .L2379, .L2381

.L2379:
	load.64*    %r10082 <- 0[t]
	load.32     %r10083 <- 8[%r10082]
	scast.32    %r10084 <- (32) %r10083
	seteq.32    %r10085 <- %r10084, $5
	br          %r10085, .L2383, .L2384

.L2383:
	load.64*    %r10086 <- 0[t]
	load.64*    %r10087 <- 0[%r10086]
	add.64*     %r10088 <- %r10087, $0
	store.64*   %r10088 -> 0[h]
	load.64*    %r10089 <- 0[h]
	load.64*    %r10090 <- 0[key]
	push.64*    %r10089
	push.64*    %r10090
	call.64*    %r10091 <- luaH_get
	store.64*   %r10091 -> 0[res]
	load.64*    %r10092 <- 0[res]
	load.32     %r10093 <- 8[%r10092]
	scast.32    %r10094 <- (32) %r10093
	seteq.32    %r10095 <- %r10094, $0
	br          %r10095, .L2387, .L2385

.L2387:
	load.64*    %r10096 <- 0[h]
	load.64*    %r10097 <- 16[%r10096]
	seteq.32    %r10098 <- %r10097, $0
	br          %r10098, .L2388, .L2389

.L2388:
	phisrc.64*  %phi404 <- $0
	br          .L2390

.L2389:
	load.64*    %r10099 <- 0[h]
	load.64*    %r10100 <- 16[%r10099]
	load.8      %r10101 <- 10[%r10100]
	cast.32     %r10102 <- (8) %r10101
	and.32      %r10103 <- %r10102, $1
	br          %r10103, .L2391, .L2392

.L2391:
	phisrc.64*  %phi405 <- $0
	br          .L2393

.L2392:
	load.64*    %r10104 <- 0[h]
	load.64*    %r10105 <- 16[%r10104]
	load.64*    %r10106 <- 0[L]
	load.64*    %r10107 <- 32[%r10106]
	load.64*    %r10108 <- 296[%r10107]
	push.64*    %r10105
	push.32     $0
	push.64*    %r10108
	call.64*    %r10109 <- luaT_gettm
	phisrc.64*  %phi406 <- %r10109
	br          .L2393

.L2393:
	phi.64*     %r10110 <- %phi405, %phi406
	phisrc.64*  %phi407 <- %r10110
	br          .L2390

.L2390:
	phi.64*     %r10111 <- %phi404, %phi407
	store.64*   %r10111 -> 0[tm]
	seteq.32    %r10112 <- %r10111, $0
	br          %r10112, .L2385, .L2386

.L2385:
	load.64*    %r10113 <- 0[res]
	store.64*   %r10113 -> 0[o2]
	load.64*    %r10114 <- 0[val]
	store.64*   %r10114 -> 0[o1]
	load.64*    %r10115 <- 0[o2]
	load.f64    %r10116 <- 0[%r10115]
	fpcast.f64  %r10117 <- (64) %r10116
	load.64*    %r10118 <- 0[o1]
	store.f64   %r10117 -> 0[%r10118]
	load.64*    %r10119 <- 0[o2]
	load.32     %r10120 <- 8[%r10119]
	scast.32    %r10121 <- (32) %r10120
	load.64*    %r10122 <- 0[o1]
	store.32    %r10121 -> 8[%r10122]
	br          .L2394

.L2386:
	br          .L2395

.L2384:
	load.64*    %r10123 <- 0[L]
	load.64*    %r10124 <- 0[t]
	push.64*    %r10123
	push.64*    %r10124
	push.32     $0
	call.64*    %r10125 <- luaT_gettmbyobj
	store.64*   %r10125 -> 0[tm]
	load.32     %r10126 <- 8[%r10125]
	scast.32    %r10127 <- (32) %r10126
	seteq.32    %r10128 <- %r10127, $0
	br          %r10128, .L2396, .L2397

.L2396:
	load.64*    %r10129 <- 0[L]
	load.64*    %r10130 <- 0[t]
	symaddr.64* %r10131 <- <anon symbol:0x62d0013f3818>
	push.64*    %r10129
	push.64*    %r10130
	push.64*    %r10131
	call        luaG_typeerror
	br          .L2397

.L2397:
	br          .L2395

.L2395:
	load.64*    %r10132 <- 0[tm]
	load.32     %r10133 <- 8[%r10132]
	scast.32    %r10134 <- (32) %r10133
	seteq.32    %r10135 <- %r10134, $6
	br          %r10135, .L2398, .L2399

.L2398:
	load.64*    %r10136 <- 0[L]
	load.64*    %r10137 <- 0[val]
	load.64*    %r10138 <- 0[tm]
	load.64*    %r10139 <- 0[t]
	load.64*    %r10140 <- 0[key]
	push.64*    %r10136
	push.64*    %r10137
	push.64*    %r10138
	push.64*    %r10139
	push.64*    %r10140
	call        callTMres
	br          .L2394

.L2399:
	load.64*    %r10141 <- 0[tm]
	store.64*   %r10141 -> 0[t]
	br          .L2380

.L2380:
	load.32     %r10142 <- 0[loop]
	add.32      %r10143 <- %r10142, $1
	store.32    %r10143 -> 0[loop]
	br          .L2382

.L2381:
	load.64*    %r10144 <- 0[L]
	symaddr.64* %r10145 <- <anon symbol:0x62d0013f3d88>
	push.64*    %r10144
	push.64*    %r10145
	call        luaG_runerror
	br          .L2394

.L2394:
	ret


luaV_settable:
.L2400:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t]
	store.64*   %arg3 -> 0[key]
	store.64*   %arg4 -> 0[val]
	store.32    $0 -> 0[loop]
	br          .L2404

.L2404:
	load.32     %r10146 <- 0[loop]
	setlt.32    %r10147 <- %r10146, $100
	br          %r10147, .L2401, .L2403

.L2401:
	load.64*    %r10148 <- 0[t]
	load.32     %r10149 <- 8[%r10148]
	scast.32    %r10150 <- (32) %r10149
	seteq.32    %r10151 <- %r10150, $5
	br          %r10151, .L2405, .L2406

.L2405:
	load.64*    %r10152 <- 0[t]
	load.64*    %r10153 <- 0[%r10152]
	add.64*     %r10154 <- %r10153, $0
	store.64*   %r10154 -> 0[h]
	load.64*    %r10155 <- 0[L]
	load.64*    %r10156 <- 0[h]
	load.64*    %r10157 <- 0[key]
	push.64*    %r10155
	push.64*    %r10156
	push.64*    %r10157
	call.64*    %r10158 <- luaH_set
	store.64*   %r10158 -> 0[oldval]
	load.64*    %r10159 <- 0[oldval]
	load.32     %r10160 <- 8[%r10159]
	seteq.32    %r10161 <- %r10160, $0
	br          %r10161, .L2409, .L2407

.L2409:
	load.64*    %r10162 <- 0[h]
	load.64*    %r10163 <- 16[%r10162]
	seteq.32    %r10164 <- %r10163, $0
	br          %r10164, .L2410, .L2411

.L2410:
	phisrc.64*  %phi408 <- $0
	br          .L2412

.L2411:
	load.64*    %r10165 <- 0[h]
	load.64*    %r10166 <- 16[%r10165]
	load.8      %r10167 <- 10[%r10166]
	cast.32     %r10168 <- (8) %r10167
	and.32      %r10169 <- %r10168, $2
	br          %r10169, .L2413, .L2414

.L2413:
	phisrc.64*  %phi409 <- $0
	br          .L2415

.L2414:
	load.64*    %r10170 <- 0[h]
	load.64*    %r10171 <- 16[%r10170]
	load.64*    %r10172 <- 0[L]
	load.64*    %r10173 <- 32[%r10172]
	load.64*    %r10174 <- 304[%r10173]
	push.64*    %r10171
	push.32     $1
	push.64*    %r10174
	call.64*    %r10175 <- luaT_gettm
	phisrc.64*  %phi410 <- %r10175
	br          .L2415

.L2415:
	phi.64*     %r10176 <- %phi409, %phi410
	phisrc.64*  %phi411 <- %r10176
	br          .L2412

.L2412:
	phi.64*     %r10177 <- %phi408, %phi411
	store.64*   %r10177 -> 0[tm]
	seteq.32    %r10178 <- %r10177, $0
	br          %r10178, .L2407, .L2408

.L2407:
	load.64*    %r10179 <- 0[val]
	store.64*   %r10179 -> 0[o2]
	load.64*    %r10180 <- 0[oldval]
	store.64*   %r10180 -> 0[o1]
	load.64*    %r10181 <- 0[o2]
	load.f64    %r10182 <- 0[%r10181]
	fpcast.f64  %r10183 <- (64) %r10182
	load.64*    %r10184 <- 0[o1]
	store.f64   %r10183 -> 0[%r10184]
	load.64*    %r10185 <- 0[o2]
	load.32     %r10186 <- 8[%r10185]
	scast.32    %r10187 <- (32) %r10186
	load.64*    %r10188 <- 0[o1]
	store.32    %r10187 -> 8[%r10188]
	load.64*    %r10189 <- 0[h]
	store.8     $0 -> 10[%r10189]
	load.64*    %r10190 <- 0[val]
	load.32     %r10191 <- 8[%r10190]
	setge.32    %r10192 <- %r10191, $4
	br          %r10192, .L2419, .L2417

.L2419:
	load.64*    %r10193 <- 0[val]
	load.64*    %r10194 <- 0[%r10193]
	load.8      %r10195 <- 9[%r10194]
	cast.32     %r10196 <- (8) %r10195
	and.32      %r10197 <- %r10196, $3
	br          %r10197, .L2418, .L2417

.L2418:
	load.64*    %r10198 <- 0[h]
	ptrcast.64* %r10199 <- (64) %r10198
	load.8      %r10200 <- 9[%r10199]
	cast.32     %r10201 <- (8) %r10200
	and.32      %r10202 <- %r10201, $4
	br          %r10202, .L2416, .L2417

.L2416:
	load.64*    %r10203 <- 0[L]
	load.64*    %r10204 <- 0[h]
	push.64*    %r10203
	push.64*    %r10204
	call        luaC_barrierback
	br          .L2417

.L2417:
	br          .L2420

.L2408:
	br          .L2421

.L2406:
	load.64*    %r10205 <- 0[L]
	load.64*    %r10206 <- 0[t]
	push.64*    %r10205
	push.64*    %r10206
	push.32     $1
	call.64*    %r10207 <- luaT_gettmbyobj
	store.64*   %r10207 -> 0[tm]
	load.32     %r10208 <- 8[%r10207]
	scast.32    %r10209 <- (32) %r10208
	seteq.32    %r10210 <- %r10209, $0
	br          %r10210, .L2422, .L2423

.L2422:
	load.64*    %r10211 <- 0[L]
	load.64*    %r10212 <- 0[t]
	symaddr.64* %r10213 <- <anon symbol:0x62d0013f8770>
	push.64*    %r10211
	push.64*    %r10212
	push.64*    %r10213
	call        luaG_typeerror
	br          .L2423

.L2423:
	br          .L2421

.L2421:
	load.64*    %r10214 <- 0[tm]
	load.32     %r10215 <- 8[%r10214]
	scast.32    %r10216 <- (32) %r10215
	seteq.32    %r10217 <- %r10216, $6
	br          %r10217, .L2424, .L2425

.L2424:
	load.64*    %r10218 <- 0[L]
	load.64*    %r10219 <- 0[tm]
	load.64*    %r10220 <- 0[t]
	load.64*    %r10221 <- 0[key]
	load.64*    %r10222 <- 0[val]
	push.64*    %r10218
	push.64*    %r10219
	push.64*    %r10220
	push.64*    %r10221
	push.64*    %r10222
	call        callTM
	br          .L2420

.L2425:
	load.64*    %r10223 <- 0[tm]
	store.64*   %r10223 -> 0[o2]
	symaddr.64* %r10224 <- temp
	store.64*   %r10224 -> 0[o1]
	load.64*    %r10225 <- 0[o2]
	load.f64    %r10226 <- 0[%r10225]
	fpcast.f64  %r10227 <- (64) %r10226
	load.64*    %r10228 <- 0[o1]
	store.f64   %r10227 -> 0[%r10228]
	load.64*    %r10229 <- 0[o2]
	load.32     %r10230 <- 8[%r10229]
	scast.32    %r10231 <- (32) %r10230
	load.64*    %r10232 <- 0[o1]
	store.32    %r10231 -> 8[%r10232]
	symaddr.64* %r10233 <- temp
	store.64*   %r10233 -> 0[t]
	br          .L2402

.L2402:
	load.32     %r10234 <- 0[loop]
	add.32      %r10235 <- %r10234, $1
	store.32    %r10235 -> 0[loop]
	br          .L2404

.L2403:
	load.64*    %r10236 <- 0[L]
	symaddr.64* %r10237 <- <anon symbol:0x62d0013f97c0>
	push.64*    %r10236
	push.64*    %r10237
	call        luaG_runerror
	br          .L2420

.L2420:
	ret


call_binTM:
.L2426:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	store.64*   %arg4 -> 0[res]
	store.32    %arg5 -> 0[event]
	load.64*    %r10238 <- 0[L]
	load.64*    %r10239 <- 0[p1]
	load.32     %r10240 <- 0[event]
	push.64*    %r10238
	push.64*    %r10239
	push.32     %r10240
	call.64*    %r10241 <- luaT_gettmbyobj
	store.64*   %r10241 -> 0[tm]
	load.64*    %r10242 <- 0[tm]
	load.32     %r10243 <- 8[%r10242]
	scast.32    %r10244 <- (32) %r10243
	seteq.32    %r10245 <- %r10244, $0
	br          %r10245, .L2427, .L2428

.L2427:
	load.64*    %r10246 <- 0[L]
	load.64*    %r10247 <- 0[p2]
	load.32     %r10248 <- 0[event]
	push.64*    %r10246
	push.64*    %r10247
	push.32     %r10248
	call.64*    %r10249 <- luaT_gettmbyobj
	store.64*   %r10249 -> 0[tm]
	br          .L2428

.L2428:
	load.64*    %r10250 <- 0[tm]
	load.32     %r10251 <- 8[%r10250]
	scast.32    %r10252 <- (32) %r10251
	seteq.32    %r10253 <- %r10252, $0
	br          %r10253, .L2429, .L2430

.L2429:
	phisrc.32   %phi412(return) <- $0
	br          .L2431

.L2430:
	load.64*    %r10255 <- 0[L]
	load.64*    %r10256 <- 0[res]
	load.64*    %r10257 <- 0[tm]
	load.64*    %r10258 <- 0[p1]
	load.64*    %r10259 <- 0[p2]
	push.64*    %r10255
	push.64*    %r10256
	push.64*    %r10257
	push.64*    %r10258
	push.64*    %r10259
	call        callTMres
	phisrc.32   %phi413(return) <- $1
	br          .L2431

.L2431:
	phi.32      %r10254 <- %phi412(return), %phi413(return)
	ret.32      %r10254


get_compTM:
.L2432:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[mt1]
	store.64*   %arg3 -> 0[mt2]
	store.32    %arg4 -> 0[event]
	load.64*    %r10260 <- 0[mt1]
	seteq.32    %r10261 <- %r10260, $0
	br          %r10261, .L2433, .L2434

.L2433:
	phisrc.64*  %phi414 <- $0
	br          .L2435

.L2434:
	load.64*    %r10262 <- 0[mt1]
	load.8      %r10263 <- 10[%r10262]
	cast.32     %r10264 <- (8) %r10263
	load.32     %r10265 <- 0[event]
	scast.32    %r10266 <- (32) %r10265
	shl.32      %r10267 <- $1, %r10266
	and.32      %r10268 <- %r10264, %r10267
	br          %r10268, .L2436, .L2437

.L2436:
	phisrc.64*  %phi415 <- $0
	br          .L2438

.L2437:
	load.64*    %r10269 <- 0[mt1]
	load.32     %r10270 <- 0[event]
	load.64*    %r10271 <- 0[L]
	load.64*    %r10272 <- 32[%r10271]
	add.64*     %r10273 <- %r10272, $296
	load.32     %r10274 <- 0[event]
	scast.64    %r10275 <- (32) %r10274
	muls.64     %r10276 <- %r10275, $8
	add.64*     %r10277 <- %r10273, %r10276
	load.64*    %r10278 <- 0[%r10277]
	push.64*    %r10269
	push.32     %r10270
	push.64*    %r10278
	call.64*    %r10279 <- luaT_gettm
	phisrc.64*  %phi416 <- %r10279
	br          .L2438

.L2438:
	phi.64*     %r10280 <- %phi415, %phi416
	phisrc.64*  %phi417 <- %r10280
	br          .L2435

.L2435:
	phi.64*     %r10281 <- %phi414, %phi417
	store.64*   %r10281 -> 0[tm1]
	load.64*    %r10282 <- 0[tm1]
	seteq.32    %r10283 <- %r10282, $0
	br          %r10283, .L2439, .L2440

.L2439:
	phisrc.64*  %phi418(return) <- $0
	br          .L2441

.L2440:
	load.64*    %r10285 <- 0[mt1]
	load.64*    %r10286 <- 0[mt2]
	seteq.32    %r10287 <- %r10285, %r10286
	br          %r10287, .L2442, .L2443

.L2442:
	load.64*    %r10288 <- 0[tm1]
	phisrc.64*  %phi419(return) <- %r10288
	br          .L2441

.L2443:
	load.64*    %r10289 <- 0[mt2]
	seteq.32    %r10290 <- %r10289, $0
	br          %r10290, .L2444, .L2445

.L2444:
	phisrc.64*  %phi420 <- $0
	br          .L2446

.L2445:
	load.64*    %r10291 <- 0[mt2]
	load.8      %r10292 <- 10[%r10291]
	cast.32     %r10293 <- (8) %r10292
	load.32     %r10294 <- 0[event]
	scast.32    %r10295 <- (32) %r10294
	shl.32      %r10296 <- $1, %r10295
	and.32      %r10297 <- %r10293, %r10296
	br          %r10297, .L2447, .L2448

.L2447:
	phisrc.64*  %phi421 <- $0
	br          .L2449

.L2448:
	load.64*    %r10298 <- 0[mt2]
	load.32     %r10299 <- 0[event]
	load.64*    %r10300 <- 0[L]
	load.64*    %r10301 <- 32[%r10300]
	add.64*     %r10302 <- %r10301, $296
	load.32     %r10303 <- 0[event]
	scast.64    %r10304 <- (32) %r10303
	muls.64     %r10305 <- %r10304, $8
	add.64*     %r10306 <- %r10302, %r10305
	load.64*    %r10307 <- 0[%r10306]
	push.64*    %r10298
	push.32     %r10299
	push.64*    %r10307
	call.64*    %r10308 <- luaT_gettm
	phisrc.64*  %phi422 <- %r10308
	br          .L2449

.L2449:
	phi.64*     %r10309 <- %phi421, %phi422
	phisrc.64*  %phi423 <- %r10309
	br          .L2446

.L2446:
	phi.64*     %r10310 <- %phi420, %phi423
	store.64*   %r10310 -> 0[tm2]
	load.64*    %r10311 <- 0[tm2]
	seteq.32    %r10312 <- %r10311, $0
	br          %r10312, .L2450, .L2451

.L2450:
	phisrc.64*  %phi424(return) <- $0
	br          .L2441

.L2451:
	load.64*    %r10313 <- 0[tm1]
	load.64*    %r10314 <- 0[tm2]
	push.64*    %r10313
	push.64*    %r10314
	call.32     %r10315 <- luaO_rawequalObj
	br          %r10315, .L2452, .L2453

.L2452:
	load.64*    %r10316 <- 0[tm1]
	phisrc.64*  %phi425(return) <- %r10316
	br          .L2441

.L2453:
	phisrc.64*  %phi426(return) <- $0
	br          .L2441

.L2441:
	phi.64*     %r10284 <- %phi418(return), %phi419(return), %phi424(return), %phi425(return), %phi426(return)
	ret.64*     %r10284


call_orderTM:
.L2454:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[p1]
	store.64*   %arg3 -> 0[p2]
	store.32    %arg4 -> 0[event]
	load.64*    %r10317 <- 0[L]
	load.64*    %r10318 <- 0[p1]
	load.32     %r10319 <- 0[event]
	push.64*    %r10317
	push.64*    %r10318
	push.32     %r10319
	call.64*    %r10320 <- luaT_gettmbyobj
	store.64*   %r10320 -> 0[tm1]
	load.64*    %r10321 <- 0[tm1]
	load.32     %r10322 <- 8[%r10321]
	scast.32    %r10323 <- (32) %r10322
	seteq.32    %r10324 <- %r10323, $0
	br          %r10324, .L2455, .L2456

.L2455:
	phisrc.32   %phi427(return) <- $0xffffffff
	br          .L2457

.L2456:
	load.64*    %r10326 <- 0[L]
	load.64*    %r10327 <- 0[p2]
	load.32     %r10328 <- 0[event]
	push.64*    %r10326
	push.64*    %r10327
	push.32     %r10328
	call.64*    %r10329 <- luaT_gettmbyobj
	store.64*   %r10329 -> 0[tm2]
	load.64*    %r10330 <- 0[tm1]
	load.64*    %r10331 <- 0[tm2]
	push.64*    %r10330
	push.64*    %r10331
	call.32     %r10332 <- luaO_rawequalObj
	br          %r10332, .L2459, .L2458

.L2458:
	phisrc.32   %phi428(return) <- $0xffffffff
	br          .L2457

.L2459:
	load.64*    %r10333 <- 0[L]
	load.64*    %r10334 <- 0[L]
	load.64*    %r10335 <- 16[%r10334]
	load.64*    %r10336 <- 0[tm1]
	load.64*    %r10337 <- 0[p1]
	load.64*    %r10338 <- 0[p2]
	push.64*    %r10333
	push.64*    %r10335
	push.64*    %r10336
	push.64*    %r10337
	push.64*    %r10338
	call        callTMres
	load.64*    %r10339 <- 0[L]
	load.64*    %r10340 <- 16[%r10339]
	load.32     %r10341 <- 8[%r10340]
	seteq.32    %r10342 <- %r10341, $0
	br          %r10342, .L2460, .L2461

.L2460:
	phisrc.32   %phi429 <- $1
	br          .L2462

.L2461:
	load.64*    %r10343 <- 0[L]
	load.64*    %r10344 <- 16[%r10343]
	load.32     %r10345 <- 8[%r10344]
	seteq.32    %r10346 <- %r10345, $1
	br          %r10346, .L2463, .L2464

.L2463:
	load.64*    %r10347 <- 0[L]
	load.64*    %r10348 <- 16[%r10347]
	load.32     %r10349 <- 0[%r10348]
	seteq.32    %r10350 <- %r10349, $0
	phisrc.32   %phi430 <- %r10350
	br          .L2465

.L2464:
	phisrc.32   %phi431 <- $0
	br          .L2465

.L2465:
	phi.32      %r10351 <- %phi430, %phi431
	phisrc.32   %phi432 <- %r10351
	br          .L2462

.L2462:
	phi.32      %r10352 <- %phi429, %phi432
	seteq.32    %r10353 <- %r10352, $0
	phisrc.32   %phi433(return) <- %r10353
	br          .L2457

.L2457:
	phi.32      %r10325 <- %phi427(return), %phi428(return), %phi433(return)
	ret.32      %r10325


l_strcmp:
.L2466:
	<entry-point>
	store.64*   %arg1 -> 0[ls]
	store.64*   %arg2 -> 0[rs]
	load.64*    %r10354 <- 0[ls]
	add.64*     %r10355 <- %r10354, $24
	ptrcast.64* %r10356 <- (64) %r10355
	store.64*   %r10356 -> 0[l]
	load.64*    %r10357 <- 0[ls]
	load.64     %r10358 <- 16[%r10357]
	cast.64     %r10359 <- (64) %r10358
	store.64    %r10359 -> 0[ll]
	load.64*    %r10360 <- 0[rs]
	add.64*     %r10361 <- %r10360, $24
	ptrcast.64* %r10362 <- (64) %r10361
	store.64*   %r10362 -> 0[r]
	load.64*    %r10363 <- 0[rs]
	load.64     %r10364 <- 16[%r10363]
	cast.64     %r10365 <- (64) %r10364
	store.64    %r10365 -> 0[lr]
	br          .L2470

.L2470:
	br          .L2467

.L2467:
	load.64*    %r10366 <- 0[l]
	load.64*    %r10367 <- 0[r]
	push.64*    %r10366
	push.64*    %r10367
	call.32     %r10368 <- strcoll
	store.32    %r10368 -> 0[temp]
	load.32     %r10369 <- 0[temp]
	setne.32    %r10370 <- %r10369, $0
	br          %r10370, .L2471, .L2472

.L2471:
	load.32     %r10371 <- 0[temp]
	phisrc.32   %phi434(return) <- %r10371
	br          .L2473

.L2472:
	load.64*    %r10373 <- 0[l]
	push.64*    %r10373
	call.64     %r10374 <- strlen
	store.64    %r10374 -> 0[len]
	load.64     %r10375 <- 0[len]
	load.64     %r10376 <- 0[lr]
	seteq.32    %r10377 <- %r10375, %r10376
	br          %r10377, .L2475, .L2476

.L2475:
	load.64     %r10378 <- 0[len]
	load.64     %r10379 <- 0[ll]
	seteq.32    %r10380 <- %r10378, %r10379
	select.32   %r10381 <- %r10380, $0, $1
	phisrc.32   %phi435(return) <- %r10381
	br          .L2473

.L2476:
	load.64     %r10382 <- 0[len]
	load.64     %r10383 <- 0[ll]
	seteq.32    %r10384 <- %r10382, %r10383
	br          %r10384, .L2478, .L2479

.L2478:
	phisrc.32   %phi436(return) <- $0xffffffff
	br          .L2473

.L2479:
	br          .L2477

.L2477:
	load.64     %r10385 <- 0[len]
	add.64      %r10386 <- %r10385, $1
	store.64    %r10386 -> 0[len]
	load.64     %r10387 <- 0[len]
	load.64*    %r10388 <- 0[l]
	cast.64     %r10389 <- (64) %r10388
	add.64      %r10390 <- %r10389, %r10387
	ptrcast.64* %r10391 <- (64) %r10390
	store.64*   %r10391 -> 0[l]
	load.64     %r10392 <- 0[len]
	load.64     %r10393 <- 0[ll]
	cast.64     %r10394 <- (64) %r10393
	sub.64      %r10395 <- %r10394, %r10392
	cast.64     %r10396 <- (64) %r10395
	store.64    %r10396 -> 0[ll]
	load.64     %r10397 <- 0[len]
	load.64*    %r10398 <- 0[r]
	cast.64     %r10399 <- (64) %r10398
	add.64      %r10400 <- %r10399, %r10397
	ptrcast.64* %r10401 <- (64) %r10400
	store.64*   %r10401 -> 0[r]
	load.64     %r10402 <- 0[len]
	load.64     %r10403 <- 0[lr]
	cast.64     %r10404 <- (64) %r10403
	sub.64      %r10405 <- %r10404, %r10402
	cast.64     %r10406 <- (64) %r10405
	store.64    %r10406 -> 0[lr]
	br          .L2474

.L2474:
	br          .L2468

.L2468:
	br          .L2470

.L2473:
	phi.32      %r10372 <- %phi434(return), %phi435(return), %phi436(return)
	ret.32      %r10372


luaV_lessthan:
.L2480:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[l]
	store.64*   %arg3 -> 0[r]
	load.64*    %r10407 <- 0[l]
	load.32     %r10408 <- 8[%r10407]
	scast.32    %r10409 <- (32) %r10408
	load.64*    %r10410 <- 0[r]
	load.32     %r10411 <- 8[%r10410]
	scast.32    %r10412 <- (32) %r10411
	setne.32    %r10413 <- %r10409, %r10412
	br          %r10413, .L2481, .L2482

.L2481:
	load.64*    %r10414 <- 0[L]
	load.64*    %r10415 <- 0[l]
	load.64*    %r10416 <- 0[r]
	push.64*    %r10414
	push.64*    %r10415
	push.64*    %r10416
	call.32     %r10417 <- luaG_ordererror
	phisrc.32   %phi437(return) <- %r10417
	br          .L2483

.L2482:
	load.64*    %r10419 <- 0[l]
	load.32     %r10420 <- 8[%r10419]
	scast.32    %r10421 <- (32) %r10420
	seteq.32    %r10422 <- %r10421, $3
	br          %r10422, .L2485, .L2486

.L2485:
	load.64*    %r10423 <- 0[l]
	load.f64    %r10424 <- 0[%r10423]
	fpcast.f64  %r10425 <- (64) %r10424
	load.64*    %r10426 <- 0[r]
	load.f64    %r10427 <- 0[%r10426]
	fpcast.f64  %r10428 <- (64) %r10427
	setlt.32    %r10429 <- %r10425, %r10428
	phisrc.32   %phi438(return) <- %r10429
	br          .L2483

.L2486:
	load.64*    %r10430 <- 0[l]
	load.32     %r10431 <- 8[%r10430]
	scast.32    %r10432 <- (32) %r10431
	seteq.32    %r10433 <- %r10432, $4
	br          %r10433, .L2488, .L2489

.L2488:
	load.64*    %r10434 <- 0[l]
	load.64*    %r10435 <- 0[%r10434]
	add.64*     %r10436 <- %r10435, $0
	load.64*    %r10437 <- 0[r]
	load.64*    %r10438 <- 0[%r10437]
	add.64*     %r10439 <- %r10438, $0
	push.64*    %r10436
	push.64*    %r10439
	call.32     %r10440 <- l_strcmp
	setlt.32    %r10441 <- %r10440, $0
	phisrc.32   %phi439(return) <- %r10441
	br          .L2483

.L2489:
	load.64*    %r10442 <- 0[L]
	load.64*    %r10443 <- 0[l]
	load.64*    %r10444 <- 0[r]
	push.64*    %r10442
	push.64*    %r10443
	push.64*    %r10444
	push.32     $13
	call.32     %r10445 <- call_orderTM
	store.32    %r10445 -> 0[res]
	setne.32    %r10446 <- %r10445, $0xffffffff
	br          %r10446, .L2491, .L2492

.L2491:
	load.32     %r10447 <- 0[res]
	phisrc.32   %phi440(return) <- %r10447
	br          .L2483

.L2492:
	br          .L2490

.L2490:
	br          .L2487

.L2487:
	br          .L2484

.L2484:
	load.64*    %r10448 <- 0[L]
	load.64*    %r10449 <- 0[l]
	load.64*    %r10450 <- 0[r]
	push.64*    %r10448
	push.64*    %r10449
	push.64*    %r10450
	call.32     %r10451 <- luaG_ordererror
	phisrc.32   %phi441(return) <- %r10451
	br          .L2483

.L2483:
	phi.32      %r10418 <- %phi437(return), %phi438(return), %phi439(return), %phi440(return), %phi441(return)
	ret.32      %r10418


lessequal:
.L2493:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[l]
	store.64*   %arg3 -> 0[r]
	load.64*    %r10452 <- 0[l]
	load.32     %r10453 <- 8[%r10452]
	scast.32    %r10454 <- (32) %r10453
	load.64*    %r10455 <- 0[r]
	load.32     %r10456 <- 8[%r10455]
	scast.32    %r10457 <- (32) %r10456
	setne.32    %r10458 <- %r10454, %r10457
	br          %r10458, .L2494, .L2495

.L2494:
	load.64*    %r10459 <- 0[L]
	load.64*    %r10460 <- 0[l]
	load.64*    %r10461 <- 0[r]
	push.64*    %r10459
	push.64*    %r10460
	push.64*    %r10461
	call.32     %r10462 <- luaG_ordererror
	phisrc.32   %phi442(return) <- %r10462
	br          .L2496

.L2495:
	load.64*    %r10464 <- 0[l]
	load.32     %r10465 <- 8[%r10464]
	scast.32    %r10466 <- (32) %r10465
	seteq.32    %r10467 <- %r10466, $3
	br          %r10467, .L2498, .L2499

.L2498:
	load.64*    %r10468 <- 0[l]
	load.f64    %r10469 <- 0[%r10468]
	fpcast.f64  %r10470 <- (64) %r10469
	load.64*    %r10471 <- 0[r]
	load.f64    %r10472 <- 0[%r10471]
	fpcast.f64  %r10473 <- (64) %r10472
	setle.32    %r10474 <- %r10470, %r10473
	phisrc.32   %phi443(return) <- %r10474
	br          .L2496

.L2499:
	load.64*    %r10475 <- 0[l]
	load.32     %r10476 <- 8[%r10475]
	scast.32    %r10477 <- (32) %r10476
	seteq.32    %r10478 <- %r10477, $4
	br          %r10478, .L2501, .L2502

.L2501:
	load.64*    %r10479 <- 0[l]
	load.64*    %r10480 <- 0[%r10479]
	add.64*     %r10481 <- %r10480, $0
	load.64*    %r10482 <- 0[r]
	load.64*    %r10483 <- 0[%r10482]
	add.64*     %r10484 <- %r10483, $0
	push.64*    %r10481
	push.64*    %r10484
	call.32     %r10485 <- l_strcmp
	setle.32    %r10486 <- %r10485, $0
	phisrc.32   %phi444(return) <- %r10486
	br          .L2496

.L2502:
	load.64*    %r10487 <- 0[L]
	load.64*    %r10488 <- 0[l]
	load.64*    %r10489 <- 0[r]
	push.64*    %r10487
	push.64*    %r10488
	push.64*    %r10489
	push.32     $14
	call.32     %r10490 <- call_orderTM
	store.32    %r10490 -> 0[res]
	setne.32    %r10491 <- %r10490, $0xffffffff
	br          %r10491, .L2504, .L2505

.L2504:
	load.32     %r10492 <- 0[res]
	phisrc.32   %phi445(return) <- %r10492
	br          .L2496

.L2505:
	load.64*    %r10493 <- 0[L]
	load.64*    %r10494 <- 0[r]
	load.64*    %r10495 <- 0[l]
	push.64*    %r10493
	push.64*    %r10494
	push.64*    %r10495
	push.32     $13
	call.32     %r10496 <- call_orderTM
	store.32    %r10496 -> 0[res]
	setne.32    %r10497 <- %r10496, $0xffffffff
	br          %r10497, .L2507, .L2508

.L2507:
	load.32     %r10498 <- 0[res]
	seteq.32    %r10499 <- %r10498, $0
	phisrc.32   %phi446(return) <- %r10499
	br          .L2496

.L2508:
	br          .L2506

.L2506:
	br          .L2503

.L2503:
	br          .L2500

.L2500:
	br          .L2497

.L2497:
	load.64*    %r10500 <- 0[L]
	load.64*    %r10501 <- 0[l]
	load.64*    %r10502 <- 0[r]
	push.64*    %r10500
	push.64*    %r10501
	push.64*    %r10502
	call.32     %r10503 <- luaG_ordererror
	phisrc.32   %phi447(return) <- %r10503
	br          .L2496

.L2496:
	phi.32      %r10463 <- %phi442(return), %phi443(return), %phi444(return), %phi445(return), %phi446(return), %phi447(return)
	ret.32      %r10463


luaV_equalval:
.L2509:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[t1]
	store.64*   %arg3 -> 0[t2]
	load.64*    %r10504 <- 0[t1]
	load.32     %r10505 <- 8[%r10504]
	switch.32   %r10505, 0 -> .L2511, 1 -> .L2513, 2 -> .L2514, 3 -> .L2512, 5 -> .L2516, 7 -> .L2515, default -> .L2517

.L2511:
	phisrc.32   %phi448(return) <- $1
	br          .L2518

.L2512:
	load.64*    %r10507 <- 0[t1]
	load.f64    %r10508 <- 0[%r10507]
	fpcast.f64  %r10509 <- (64) %r10508
	load.64*    %r10510 <- 0[t2]
	load.f64    %r10511 <- 0[%r10510]
	fpcast.f64  %r10512 <- (64) %r10511
	seteq.32    %r10513 <- %r10509, %r10512
	phisrc.32   %phi449(return) <- %r10513
	br          .L2518

.L2513:
	load.64*    %r10514 <- 0[t1]
	load.32     %r10515 <- 0[%r10514]
	scast.32    %r10516 <- (32) %r10515
	load.64*    %r10517 <- 0[t2]
	load.32     %r10518 <- 0[%r10517]
	scast.32    %r10519 <- (32) %r10518
	seteq.32    %r10520 <- %r10516, %r10519
	phisrc.32   %phi450(return) <- %r10520
	br          .L2518

.L2514:
	load.64*    %r10521 <- 0[t1]
	load.64*    %r10522 <- 0[%r10521]
	load.64*    %r10523 <- 0[t2]
	load.64*    %r10524 <- 0[%r10523]
	seteq.32    %r10525 <- %r10522, %r10524
	phisrc.32   %phi451(return) <- %r10525
	br          .L2518

.L2515:
	load.64*    %r10526 <- 0[t1]
	load.64*    %r10527 <- 0[%r10526]
	add.64*     %r10528 <- %r10527, $0
	add.64*     %r10529 <- %r10528, $0
	load.64*    %r10530 <- 0[t2]
	load.64*    %r10531 <- 0[%r10530]
	add.64*     %r10532 <- %r10531, $0
	add.64*     %r10533 <- %r10532, $0
	seteq.32    %r10534 <- %r10529, %r10533
	br          %r10534, .L2519, .L2520

.L2519:
	phisrc.32   %phi452(return) <- $1
	br          .L2518

.L2520:
	load.64*    %r10535 <- 0[L]
	load.64*    %r10536 <- 0[t1]
	load.64*    %r10537 <- 0[%r10536]
	load.64*    %r10538 <- 16[%r10537]
	load.64*    %r10539 <- 0[t2]
	load.64*    %r10540 <- 0[%r10539]
	load.64*    %r10541 <- 16[%r10540]
	push.64*    %r10535
	push.64*    %r10538
	push.64*    %r10541
	push.32     $4
	call.64*    %r10542 <- get_compTM
	store.64*   %r10542 -> 0[tm]
	br          .L2510

.L2516:
	load.64*    %r10543 <- 0[t1]
	load.64*    %r10544 <- 0[%r10543]
	add.64*     %r10545 <- %r10544, $0
	load.64*    %r10546 <- 0[t2]
	load.64*    %r10547 <- 0[%r10546]
	add.64*     %r10548 <- %r10547, $0
	seteq.32    %r10549 <- %r10545, %r10548
	br          %r10549, .L2521, .L2522

.L2521:
	phisrc.32   %phi453(return) <- $1
	br          .L2518

.L2522:
	load.64*    %r10550 <- 0[L]
	load.64*    %r10551 <- 0[t1]
	load.64*    %r10552 <- 0[%r10551]
	load.64*    %r10553 <- 16[%r10552]
	load.64*    %r10554 <- 0[t2]
	load.64*    %r10555 <- 0[%r10554]
	load.64*    %r10556 <- 16[%r10555]
	push.64*    %r10550
	push.64*    %r10553
	push.64*    %r10556
	push.32     $4
	call.64*    %r10557 <- get_compTM
	store.64*   %r10557 -> 0[tm]
	br          .L2510

.L2517:
	load.64*    %r10558 <- 0[t1]
	load.64*    %r10559 <- 0[%r10558]
	load.64*    %r10560 <- 0[t2]
	load.64*    %r10561 <- 0[%r10560]
	seteq.32    %r10562 <- %r10559, %r10561
	phisrc.32   %phi454(return) <- %r10562
	br          .L2518

.L2510:
	load.64*    %r10563 <- 0[tm]
	seteq.32    %r10564 <- %r10563, $0
	br          %r10564, .L2523, .L2524

.L2523:
	phisrc.32   %phi455(return) <- $0
	br          .L2518

.L2524:
	load.64*    %r10565 <- 0[L]
	load.64*    %r10566 <- 0[L]
	load.64*    %r10567 <- 16[%r10566]
	load.64*    %r10568 <- 0[tm]
	load.64*    %r10569 <- 0[t1]
	load.64*    %r10570 <- 0[t2]
	push.64*    %r10565
	push.64*    %r10567
	push.64*    %r10568
	push.64*    %r10569
	push.64*    %r10570
	call        callTMres
	load.64*    %r10571 <- 0[L]
	load.64*    %r10572 <- 16[%r10571]
	load.32     %r10573 <- 8[%r10572]
	seteq.32    %r10574 <- %r10573, $0
	br          %r10574, .L2525, .L2526

.L2525:
	phisrc.32   %phi456 <- $1
	br          .L2527

.L2526:
	load.64*    %r10575 <- 0[L]
	load.64*    %r10576 <- 16[%r10575]
	load.32     %r10577 <- 8[%r10576]
	seteq.32    %r10578 <- %r10577, $1
	br          %r10578, .L2528, .L2529

.L2528:
	load.64*    %r10579 <- 0[L]
	load.64*    %r10580 <- 16[%r10579]
	load.32     %r10581 <- 0[%r10580]
	seteq.32    %r10582 <- %r10581, $0
	phisrc.32   %phi457 <- %r10582
	br          .L2530

.L2529:
	phisrc.32   %phi458 <- $0
	br          .L2530

.L2530:
	phi.32      %r10583 <- %phi457, %phi458
	phisrc.32   %phi459 <- %r10583
	br          .L2527

.L2527:
	phi.32      %r10584 <- %phi456, %phi459
	seteq.32    %r10585 <- %r10584, $0
	phisrc.32   %phi460(return) <- %r10585
	br          .L2518

.L2518:
	phi.32      %r10506 <- %phi448(return), %phi449(return), %phi450(return), %phi451(return), %phi452(return), %phi453(return), %phi454(return), %phi455(return), %phi460(return)
	ret.32      %r10506


luaV_concat:
.L2531:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[total]
	store.32    %arg3 -> 0[last]
	br          .L2532

.L2532:
	load.64*    %r10586 <- 0[L]
	load.64*    %r10587 <- 24[%r10586]
	load.32     %r10588 <- 0[last]
	scast.64    %r10589 <- (32) %r10588
	muls.64     %r10590 <- %r10589, $16
	add.64*     %r10591 <- %r10587, %r10590
	add.64*     %r10592 <- %r10591, $16
	store.64*   %r10592 -> 0[top]
	store.32    $2 -> 0[n]
	load.64*    %r10593 <- 0[top]
	sub.64*     %r10594 <- %r10593, $32
	load.32     %r10595 <- 8[%r10594]
	seteq.32    %r10596 <- %r10595, $4
	br          %r10596, .L2537, .L2538

.L2538:
	load.64*    %r10597 <- 0[top]
	sub.64*     %r10598 <- %r10597, $32
	load.32     %r10599 <- 8[%r10598]
	seteq.32    %r10600 <- %r10599, $3
	br          %r10600, .L2537, .L2535

.L2537:
	load.64*    %r10601 <- 0[top]
	sub.64*     %r10602 <- %r10601, $16
	load.32     %r10603 <- 8[%r10602]
	seteq.32    %r10604 <- %r10603, $4
	br          %r10604, .L2536, .L2539

.L2539:
	load.64*    %r10605 <- 0[L]
	load.64*    %r10606 <- 0[top]
	sub.64*     %r10607 <- %r10606, $16
	push.64*    %r10605
	push.64*    %r10607
	call.32     %r10608 <- luaV_tostring
	br          %r10608, .L2536, .L2535

.L2535:
	load.64*    %r10609 <- 0[L]
	load.64*    %r10610 <- 0[top]
	sub.64*     %r10611 <- %r10610, $32
	load.64*    %r10612 <- 0[top]
	sub.64*     %r10613 <- %r10612, $16
	load.64*    %r10614 <- 0[top]
	sub.64*     %r10615 <- %r10614, $32
	push.64*    %r10609
	push.64*    %r10611
	push.64*    %r10613
	push.64*    %r10615
	push.32     $15
	call.32     %r10616 <- call_binTM
	br          %r10616, .L2541, .L2540

.L2540:
	load.64*    %r10617 <- 0[L]
	load.64*    %r10618 <- 0[top]
	sub.64*     %r10619 <- %r10618, $32
	load.64*    %r10620 <- 0[top]
	sub.64*     %r10621 <- %r10620, $16
	push.64*    %r10617
	push.64*    %r10619
	push.64*    %r10621
	call        luaG_concaterror
	br          .L2541

.L2541:
	br          .L2542

.L2536:
	load.64*    %r10622 <- 0[top]
	sub.64*     %r10623 <- %r10622, $16
	load.64*    %r10624 <- 0[%r10623]
	load.64     %r10625 <- 16[%r10624]
	seteq.32    %r10626 <- %r10625, $0
	br          %r10626, .L2543, .L2544

.L2543:
	load.64*    %r10627 <- 0[top]
	sub.64*     %r10628 <- %r10627, $32
	load.32     %r10629 <- 8[%r10628]
	seteq.32    %r10630 <- %r10629, $4
	br          %r10630, .L2545, .L2546

.L2545:
	phisrc.32   %phi461 <- $1
	br          .L2547

.L2546:
	load.64*    %r10631 <- 0[L]
	load.64*    %r10632 <- 0[top]
	sub.64*     %r10633 <- %r10632, $32
	push.64*    %r10631
	push.64*    %r10633
	call.32     %r10634 <- luaV_tostring
	phisrc.32   %phi462 <- %r10634
	br          .L2547

.L2547:
	phi.32      %r10635 <- %phi461, %phi462
	br          .L2548

.L2544:
	load.64*    %r10636 <- 0[top]
	sub.64*     %r10637 <- %r10636, $16
	load.64*    %r10638 <- 0[%r10637]
	load.64     %r10639 <- 16[%r10638]
	store.64    %r10639 -> 0[tl]
	store.32    $1 -> 0[n]
	br          .L2552

.L2552:
	load.32     %r10640 <- 0[n]
	load.32     %r10641 <- 0[total]
	setlt.32    %r10642 <- %r10640, %r10641
	br          %r10642, .L2553, .L2551

.L2553:
	load.64*    %r10643 <- 0[top]
	load.32     %r10644 <- 0[n]
	scast.64    %r10645 <- (32) %r10644
	muls.64     %r10646 <- %r10645, $16
	sub.64*     %r10647 <- %r10643, %r10646
	sub.64*     %r10648 <- %r10647, $16
	load.32     %r10649 <- 8[%r10648]
	seteq.32    %r10650 <- %r10649, $4
	br          %r10650, .L2549, .L2554

.L2554:
	load.64*    %r10651 <- 0[L]
	load.64*    %r10652 <- 0[top]
	load.32     %r10653 <- 0[n]
	scast.64    %r10654 <- (32) %r10653
	muls.64     %r10655 <- %r10654, $16
	sub.64*     %r10656 <- %r10652, %r10655
	sub.64*     %r10657 <- %r10656, $16
	push.64*    %r10651
	push.64*    %r10657
	call.32     %r10658 <- luaV_tostring
	br          %r10658, .L2549, .L2551

.L2549:
	load.64*    %r10659 <- 0[top]
	load.32     %r10660 <- 0[n]
	scast.64    %r10661 <- (32) %r10660
	muls.64     %r10662 <- %r10661, $16
	sub.64*     %r10663 <- %r10659, %r10662
	sub.64*     %r10664 <- %r10663, $16
	load.64*    %r10665 <- 0[%r10664]
	load.64     %r10666 <- 16[%r10665]
	store.64    %r10666 -> 0[l]
	load.64     %r10667 <- 0[l]
	load.64     %r10668 <- 0[tl]
	sub.64      %r10669 <- $-3, %r10668
	setae.32    %r10670 <- %r10667, %r10669
	br          %r10670, .L2555, .L2556

.L2555:
	load.64*    %r10671 <- 0[L]
	symaddr.64* %r10672 <- <anon symbol:0x62d0014035f0>
	push.64*    %r10671
	push.64*    %r10672
	call        luaG_runerror
	br          .L2556

.L2556:
	load.64     %r10673 <- 0[l]
	load.64     %r10674 <- 0[tl]
	cast.64     %r10675 <- (64) %r10674
	add.64      %r10676 <- %r10675, %r10673
	cast.64     %r10677 <- (64) %r10676
	store.64    %r10677 -> 0[tl]
	br          .L2550

.L2550:
	load.32     %r10678 <- 0[n]
	add.32      %r10679 <- %r10678, $1
	store.32    %r10679 -> 0[n]
	br          .L2552

.L2551:
	load.64*    %r10680 <- 0[L]
	load.64*    %r10681 <- 0[L]
	load.64*    %r10682 <- 32[%r10681]
	add.64*     %r10683 <- %r10682, $88
	load.64     %r10684 <- 0[tl]
	push.64*    %r10680
	push.64*    %r10683
	push.64     %r10684
	call.64*    %r10685 <- luaZ_openspace
	store.64*   %r10685 -> 0[buffer]
	store.64    $0 -> 0[tl]
	load.32     %r10686 <- 0[n]
	store.32    %r10686 -> 0[i]
	br          .L2560

.L2560:
	load.32     %r10687 <- 0[i]
	setgt.32    %r10688 <- %r10687, $0
	br          %r10688, .L2557, .L2559

.L2557:
	load.64*    %r10689 <- 0[top]
	load.32     %r10690 <- 0[i]
	scast.64    %r10691 <- (32) %r10690
	muls.64     %r10692 <- %r10691, $16
	sub.64*     %r10693 <- %r10689, %r10692
	load.64*    %r10694 <- 0[%r10693]
	load.64     %r10695 <- 16[%r10694]
	store.64    %r10695 -> 0[l]
	load.64*    %r10696 <- 0[buffer]
	load.64     %r10697 <- 0[tl]
	add.64*     %r10698 <- %r10696, %r10697
	cast.64*    %r10699 <- (64) %r10698
	load.64*    %r10700 <- 0[top]
	load.32     %r10701 <- 0[i]
	scast.64    %r10702 <- (32) %r10701
	muls.64     %r10703 <- %r10702, $16
	sub.64*     %r10704 <- %r10700, %r10703
	load.64*    %r10705 <- 0[%r10704]
	add.64*     %r10706 <- %r10705, $0
	add.64*     %r10707 <- %r10706, $24
	ptrcast.64* %r10708 <- (64) %r10707
	cast.64*    %r10709 <- (64) %r10708
	load.64     %r10710 <- 0[l]
	push.64*    %r10699
	push.64*    %r10709
	push.64     %r10710
	call.64*    %r10711 <- memcpy
	load.64     %r10712 <- 0[l]
	load.64     %r10713 <- 0[tl]
	cast.64     %r10714 <- (64) %r10713
	add.64      %r10715 <- %r10714, %r10712
	cast.64     %r10716 <- (64) %r10715
	store.64    %r10716 -> 0[tl]
	br          .L2558

.L2558:
	load.32     %r10717 <- 0[i]
	sub.32      %r10718 <- %r10717, $1
	store.32    %r10718 -> 0[i]
	br          .L2560

.L2559:
	load.64*    %r10719 <- 0[top]
	load.32     %r10720 <- 0[n]
	scast.64    %r10721 <- (32) %r10720
	muls.64     %r10722 <- %r10721, $16
	sub.64*     %r10723 <- %r10719, %r10722
	store.64*   %r10723 -> 0[i_o]
	load.64*    %r10724 <- 0[L]
	load.64*    %r10725 <- 0[buffer]
	load.64     %r10726 <- 0[tl]
	push.64*    %r10724
	push.64*    %r10725
	push.64     %r10726
	call.64*    %r10727 <- luaS_newlstr
	ptrcast.64* %r10728 <- (64) %r10727
	load.64*    %r10729 <- 0[i_o]
	store.64*   %r10728 -> 0[%r10729]
	load.64*    %r10730 <- 0[i_o]
	store.32    $4 -> 8[%r10730]
	br          .L2548

.L2548:
	br          .L2542

.L2542:
	load.32     %r10731 <- 0[n]
	sub.32      %r10732 <- %r10731, $1
	load.32     %r10733 <- 0[total]
	scast.32    %r10734 <- (32) %r10733
	sub.32      %r10735 <- %r10734, %r10732
	scast.32    %r10736 <- (32) %r10735
	store.32    %r10736 -> 0[total]
	load.32     %r10737 <- 0[n]
	sub.32      %r10738 <- %r10737, $1
	load.32     %r10739 <- 0[last]
	scast.32    %r10740 <- (32) %r10739
	sub.32      %r10741 <- %r10740, %r10738
	scast.32    %r10742 <- (32) %r10741
	store.32    %r10742 -> 0[last]
	br          .L2533

.L2533:
	load.32     %r10743 <- 0[total]
	setgt.32    %r10744 <- %r10743, $1
	br          %r10744, .L2532, .L2534

.L2534:
	ret


Arith:
.L2561:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ra]
	store.64*   %arg3 -> 0[rb]
	store.64*   %arg4 -> 0[rc]
	store.32    %arg5 -> 0[op]
	load.64*    %r10745 <- 0[rb]
	symaddr.64* %r10746 <- tempb
	push.64*    %r10745
	push.64*    %r10746
	call.64*    %r10747 <- luaV_tonumber
	store.64*   %r10747 -> 0[b]
	setne.32    %r10748 <- %r10747, $0
	br          %r10748, .L2564, .L2563

.L2564:
	load.64*    %r10749 <- 0[rc]
	symaddr.64* %r10750 <- tempc
	push.64*    %r10749
	push.64*    %r10750
	call.64*    %r10751 <- luaV_tonumber
	store.64*   %r10751 -> 0[c]
	setne.32    %r10752 <- %r10751, $0
	br          %r10752, .L2562, .L2563

.L2562:
	load.64*    %r10753 <- 0[b]
	load.f64    %r10754 <- 0[%r10753]
	fpcast.f64  %r10755 <- (64) %r10754
	store.f64   %r10755 -> 0[nb]
	load.64*    %r10756 <- 0[c]
	load.f64    %r10757 <- 0[%r10756]
	fpcast.f64  %r10758 <- (64) %r10757
	store.f64   %r10758 -> 0[nc]
	load.32     %r10759 <- 0[op]
	switch.32   %r10759, 5 -> .L2566, 6 -> .L2567, 7 -> .L2568, 8 -> .L2569, 9 -> .L2570, 10 -> .L2571, 11 -> .L2572, default -> .L2573

.L2566:
	load.64*    %r10760 <- 0[ra]
	store.64*   %r10760 -> 0[i_o]
	load.f64    %r10761 <- 0[nb]
	load.f64    %r10762 <- 0[nc]
	add.f64     %r10763 <- %r10761, %r10762
	load.64*    %r10764 <- 0[i_o]
	store.f64   %r10763 -> 0[%r10764]
	load.64*    %r10765 <- 0[i_o]
	store.32    $3 -> 8[%r10765]
	br          .L2565

.L2567:
	load.64*    %r10766 <- 0[ra]
	store.64*   %r10766 -> 0[i_o]
	load.f64    %r10767 <- 0[nb]
	load.f64    %r10768 <- 0[nc]
	sub.f64     %r10769 <- %r10767, %r10768
	load.64*    %r10770 <- 0[i_o]
	store.f64   %r10769 -> 0[%r10770]
	load.64*    %r10771 <- 0[i_o]
	store.32    $3 -> 8[%r10771]
	br          .L2565

.L2568:
	load.64*    %r10772 <- 0[ra]
	store.64*   %r10772 -> 0[i_o]
	load.f64    %r10773 <- 0[nb]
	load.f64    %r10774 <- 0[nc]
	mulu.f64    %r10775 <- %r10773, %r10774
	load.64*    %r10776 <- 0[i_o]
	store.f64   %r10775 -> 0[%r10776]
	load.64*    %r10777 <- 0[i_o]
	store.32    $3 -> 8[%r10777]
	br          .L2565

.L2569:
	load.64*    %r10778 <- 0[ra]
	store.64*   %r10778 -> 0[i_o]
	load.f64    %r10779 <- 0[nb]
	load.f64    %r10780 <- 0[nc]
	divu.f64    %r10781 <- %r10779, %r10780
	load.64*    %r10782 <- 0[i_o]
	store.f64   %r10781 -> 0[%r10782]
	load.64*    %r10783 <- 0[i_o]
	store.32    $3 -> 8[%r10783]
	br          .L2565

.L2570:
	load.64*    %r10784 <- 0[ra]
	store.64*   %r10784 -> 0[i_o]
	load.f64    %r10785 <- 0[nb]
	load.f64    %r10786 <- 0[nb]
	load.f64    %r10787 <- 0[nc]
	divu.f64    %r10788 <- %r10786, %r10787
	push.f64    %r10788
	call.f64    %r10789 <- floor
	load.f64    %r10790 <- 0[nc]
	mulu.f64    %r10791 <- %r10789, %r10790
	sub.f64     %r10792 <- %r10785, %r10791
	load.64*    %r10793 <- 0[i_o]
	store.f64   %r10792 -> 0[%r10793]
	load.64*    %r10794 <- 0[i_o]
	store.32    $3 -> 8[%r10794]
	br          .L2565

.L2571:
	load.64*    %r10795 <- 0[ra]
	store.64*   %r10795 -> 0[i_o]
	load.f64    %r10796 <- 0[nb]
	load.f64    %r10797 <- 0[nc]
	push.f64    %r10796
	push.f64    %r10797
	call.f64    %r10798 <- pow
	load.64*    %r10799 <- 0[i_o]
	store.f64   %r10798 -> 0[%r10799]
	load.64*    %r10800 <- 0[i_o]
	store.32    $3 -> 8[%r10800]
	br          .L2565

.L2572:
	load.64*    %r10801 <- 0[ra]
	store.64*   %r10801 -> 0[i_o]
	load.f64    %r10802 <- 0[nb]
	neg.f64     %r10803 <- %r10802
	load.64*    %r10804 <- 0[i_o]
	store.f64   %r10803 -> 0[%r10804]
	load.64*    %r10805 <- 0[i_o]
	store.32    $3 -> 8[%r10805]
	br          .L2565

.L2573:
	br          .L2565

.L2565:
	br          .L2574

.L2563:
	load.64*    %r10806 <- 0[L]
	load.64*    %r10807 <- 0[rb]
	load.64*    %r10808 <- 0[rc]
	load.64*    %r10809 <- 0[ra]
	load.32     %r10810 <- 0[op]
	push.64*    %r10806
	push.64*    %r10807
	push.64*    %r10808
	push.64*    %r10809
	push.32     %r10810
	call.32     %r10811 <- call_binTM
	br          %r10811, .L2576, .L2575

.L2575:
	load.64*    %r10812 <- 0[L]
	load.64*    %r10813 <- 0[rb]
	load.64*    %r10814 <- 0[rc]
	push.64*    %r10812
	push.64*    %r10813
	push.64*    %r10814
	call        luaG_aritherror
	br          .L2576

.L2576:
	br          .L2574

.L2574:
	ret


luaV_execute:
.L2577:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nexeccalls]
	br          .L2578

.L2578:
	load.64*    %r10815 <- 0[L]
	load.64*    %r10816 <- 48[%r10815]
	store.64*   %r10816 -> 0[pc]
	load.64*    %r10817 <- 0[L]
	load.64*    %r10818 <- 40[%r10817]
	load.64*    %r10819 <- 8[%r10818]
	load.64*    %r10820 <- 0[%r10819]
	add.64*     %r10821 <- %r10820, $0
	add.64*     %r10822 <- %r10821, $0
	store.64*   %r10822 -> 0[cl]
	load.64*    %r10823 <- 0[L]
	load.64*    %r10824 <- 24[%r10823]
	store.64*   %r10824 -> 0[base]
	load.64*    %r10825 <- 0[cl]
	load.64*    %r10826 <- 32[%r10825]
	load.64*    %r10827 <- 16[%r10826]
	store.64*   %r10827 -> 0[k]
	br          .L2582

.L2582:
	br          .L2579

.L2579:
	load.64*    %r10828 <- 0[pc]
	add.64*     %r10829 <- %r10828, $4
	store.64*   %r10829 -> 0[pc]
	load.32     %r10830 <- 0[%r10828]
	store.32    %r10830 -> 0[i]
	load.64*    %r10831 <- 0[base]
	load.32     %r10832 <- 0[i]
	cast.32     %r10833 <- (32) %r10832
	lsr.32      %r10834 <- %r10833, $6
	and.32      %r10835 <- %r10834, $255
	cast.32     %r10836 <- (32) %r10835
	scast.64    %r10837 <- (32) %r10836
	muls.64     %r10838 <- %r10837, $16
	add.64*     %r10839 <- %r10831, %r10838
	store.64*   %r10839 -> 0[ra]
	load.32     %r10840 <- 0[i]
	cast.32     %r10841 <- (32) %r10840
	lsr.32      %r10842 <- %r10841, $0
	and.32      %r10843 <- %r10842, $63
	cast.32     %r10844 <- (32) %r10843
	switch.32   %r10844, 0 -> .L2584, 1 -> .L2585, 2 -> .L2586, 3 -> .L2587, 4 -> .L2588, 5 -> .L2589, 6 -> .L2590, 7 -> .L2591, 8 -> .L2592, 9 -> .L2593, 10 -> .L2594, 11 -> .L2595, 12 -> .L2596, 13 -> .L2597, 14 -> .L2598, 15 -> .L2599, 16 -> .L2600, 17 -> .L2601, 18 -> .L2602, 19 -> .L2603, 20 -> .L2604, 21 -> .L2605, 22 -> .L2606, 23 -> .L2607, 24 -> .L2608, 25 -> .L2609, 26 -> .L2610, 27 -> .L2611, 28 -> .L2612, 29 -> .L2613, 30 -> .L2614, 31 -> .L2615, 32 -> .L2616, 33 -> .L2617, 34 -> .L2618, 35 -> .L2619, 36 -> .L2620, 37 -> .L2621, default -> .L2583

.L2584:
	load.64*    %r10845 <- 0[base]
	load.32     %r10846 <- 0[i]
	cast.32     %r10847 <- (32) %r10846
	lsr.32      %r10848 <- %r10847, $23
	and.32      %r10849 <- %r10848, $511
	cast.32     %r10850 <- (32) %r10849
	scast.64    %r10851 <- (32) %r10850
	muls.64     %r10852 <- %r10851, $16
	add.64*     %r10853 <- %r10845, %r10852
	store.64*   %r10853 -> 0[o2]
	load.64*    %r10854 <- 0[ra]
	store.64*   %r10854 -> 0[o1]
	load.64*    %r10855 <- 0[o2]
	load.f64    %r10856 <- 0[%r10855]
	fpcast.f64  %r10857 <- (64) %r10856
	load.64*    %r10858 <- 0[o1]
	store.f64   %r10857 -> 0[%r10858]
	load.64*    %r10859 <- 0[o2]
	load.32     %r10860 <- 8[%r10859]
	scast.32    %r10861 <- (32) %r10860
	load.64*    %r10862 <- 0[o1]
	store.32    %r10861 -> 8[%r10862]
	br          .L2580

.L2585:
	load.64*    %r10863 <- 0[k]
	load.32     %r10864 <- 0[i]
	cast.32     %r10865 <- (32) %r10864
	lsr.32      %r10866 <- %r10865, $14
	and.32      %r10867 <- %r10866, $0x3ffff
	cast.32     %r10868 <- (32) %r10867
	scast.64    %r10869 <- (32) %r10868
	muls.64     %r10870 <- %r10869, $16
	add.64*     %r10871 <- %r10863, %r10870
	store.64*   %r10871 -> 0[o2]
	load.64*    %r10872 <- 0[ra]
	store.64*   %r10872 -> 0[o1]
	load.64*    %r10873 <- 0[o2]
	load.f64    %r10874 <- 0[%r10873]
	fpcast.f64  %r10875 <- (64) %r10874
	load.64*    %r10876 <- 0[o1]
	store.f64   %r10875 -> 0[%r10876]
	load.64*    %r10877 <- 0[o2]
	load.32     %r10878 <- 8[%r10877]
	scast.32    %r10879 <- (32) %r10878
	load.64*    %r10880 <- 0[o1]
	store.32    %r10879 -> 8[%r10880]
	br          .L2580

.L2586:
	load.64*    %r10881 <- 0[ra]
	store.64*   %r10881 -> 0[i_o]
	load.32     %r10882 <- 0[i]
	cast.32     %r10883 <- (32) %r10882
	lsr.32      %r10884 <- %r10883, $23
	and.32      %r10885 <- %r10884, $511
	cast.32     %r10886 <- (32) %r10885
	load.64*    %r10887 <- 0[i_o]
	store.32    %r10886 -> 0[%r10887]
	load.64*    %r10888 <- 0[i_o]
	store.32    $1 -> 8[%r10888]
	load.32     %r10889 <- 0[i]
	cast.32     %r10890 <- (32) %r10889
	lsr.32      %r10891 <- %r10890, $14
	and.32      %r10892 <- %r10891, $511
	cast.32     %r10893 <- (32) %r10892
	br          %r10893, .L2622, .L2623

.L2622:
	load.64*    %r10894 <- 0[pc]
	add.64*     %r10895 <- %r10894, $4
	store.64*   %r10895 -> 0[pc]
	br          .L2623

.L2623:
	br          .L2580

.L2587:
	load.64*    %r10896 <- 0[base]
	load.32     %r10897 <- 0[i]
	cast.32     %r10898 <- (32) %r10897
	lsr.32      %r10899 <- %r10898, $23
	and.32      %r10900 <- %r10899, $511
	cast.32     %r10901 <- (32) %r10900
	scast.64    %r10902 <- (32) %r10901
	muls.64     %r10903 <- %r10902, $16
	add.64*     %r10904 <- %r10896, %r10903
	store.64*   %r10904 -> 0[rb]
	br          .L2624

.L2624:
	load.64*    %r10905 <- 0[rb]
	sub.64*     %r10906 <- %r10905, $16
	store.64*   %r10906 -> 0[rb]
	store.32    $0 -> 8[%r10905]
	br          .L2625

.L2625:
	load.64*    %r10907 <- 0[rb]
	load.64*    %r10908 <- 0[ra]
	setae.32    %r10909 <- %r10907, %r10908
	br          %r10909, .L2624, .L2626

.L2626:
	br          .L2580

.L2588:
	load.32     %r10910 <- 0[i]
	cast.32     %r10911 <- (32) %r10910
	lsr.32      %r10912 <- %r10911, $23
	and.32      %r10913 <- %r10912, $511
	cast.32     %r10914 <- (32) %r10913
	store.32    %r10914 -> 0[b]
	load.64*    %r10915 <- 0[cl]
	add.64*     %r10916 <- %r10915, $40
	load.32     %r10917 <- 0[b]
	scast.64    %r10918 <- (32) %r10917
	muls.64     %r10919 <- %r10918, $8
	add.64*     %r10920 <- %r10916, %r10919
	load.64*    %r10921 <- 0[%r10920]
	load.64*    %r10922 <- 16[%r10921]
	store.64*   %r10922 -> 0[o2]
	load.64*    %r10923 <- 0[ra]
	store.64*   %r10923 -> 0[o1]
	load.64*    %r10924 <- 0[o2]
	load.f64    %r10925 <- 0[%r10924]
	fpcast.f64  %r10926 <- (64) %r10925
	load.64*    %r10927 <- 0[o1]
	store.f64   %r10926 -> 0[%r10927]
	load.64*    %r10928 <- 0[o2]
	load.32     %r10929 <- 8[%r10928]
	scast.32    %r10930 <- (32) %r10929
	load.64*    %r10931 <- 0[o1]
	store.32    %r10930 -> 8[%r10931]
	br          .L2580

.L2589:
	load.64*    %r10932 <- 0[k]
	load.32     %r10933 <- 0[i]
	cast.32     %r10934 <- (32) %r10933
	lsr.32      %r10935 <- %r10934, $14
	and.32      %r10936 <- %r10935, $0x3ffff
	cast.32     %r10937 <- (32) %r10936
	scast.64    %r10938 <- (32) %r10937
	muls.64     %r10939 <- %r10938, $16
	add.64*     %r10940 <- %r10932, %r10939
	store.64*   %r10940 -> 0[rb]
	symaddr.64* %r10941 <- g
	store.64*   %r10941 -> 0[i_o]
	load.64*    %r10942 <- 0[cl]
	load.64*    %r10943 <- 24[%r10942]
	ptrcast.64* %r10944 <- (64) %r10943
	load.64*    %r10945 <- 0[i_o]
	store.64*   %r10944 -> 0[%r10945]
	load.64*    %r10946 <- 0[i_o]
	store.32    $5 -> 8[%r10946]
	load.64*    %r10947 <- 0[pc]
	load.64*    %r10948 <- 0[L]
	store.64*   %r10947 -> 48[%r10948]
	load.64*    %r10949 <- 0[L]
	symaddr.64* %r10950 <- g
	load.64*    %r10951 <- 0[rb]
	load.64*    %r10952 <- 0[ra]
	push.64*    %r10949
	push.64*    %r10950
	push.64*    %r10951
	push.64*    %r10952
	call        luaV_gettable
	load.64*    %r10953 <- 0[L]
	load.64*    %r10954 <- 24[%r10953]
	store.64*   %r10954 -> 0[base]
	br          .L2580

.L2590:
	load.64*    %r10955 <- 0[pc]
	load.64*    %r10956 <- 0[L]
	store.64*   %r10955 -> 48[%r10956]
	load.64*    %r10957 <- 0[L]
	load.64*    %r10958 <- 0[base]
	load.32     %r10959 <- 0[i]
	cast.32     %r10960 <- (32) %r10959
	lsr.32      %r10961 <- %r10960, $23
	and.32      %r10962 <- %r10961, $511
	cast.32     %r10963 <- (32) %r10962
	scast.64    %r10964 <- (32) %r10963
	muls.64     %r10965 <- %r10964, $16
	add.64*     %r10966 <- %r10958, %r10965
	load.32     %r10967 <- 0[i]
	cast.32     %r10968 <- (32) %r10967
	lsr.32      %r10969 <- %r10968, $14
	and.32      %r10970 <- %r10969, $511
	cast.32     %r10971 <- (32) %r10970
	and.32      %r10972 <- %r10971, $256
	br          %r10972, .L2627, .L2628

.L2627:
	load.64*    %r10973 <- 0[k]
	load.32     %r10974 <- 0[i]
	cast.32     %r10975 <- (32) %r10974
	lsr.32      %r10976 <- %r10975, $14
	and.32      %r10977 <- %r10976, $511
	cast.32     %r10978 <- (32) %r10977
	scast.32    %r10979 <- (32) %r10978
	and.32      %r10980 <- %r10979, $0xfffffeff
	scast.64    %r10981 <- (32) %r10980
	muls.64     %r10982 <- %r10981, $16
	add.64*     %r10983 <- %r10973, %r10982
	phisrc.64*  %phi463 <- %r10983
	br          .L2629

.L2628:
	load.64*    %r10984 <- 0[base]
	load.32     %r10985 <- 0[i]
	cast.32     %r10986 <- (32) %r10985
	lsr.32      %r10987 <- %r10986, $14
	and.32      %r10988 <- %r10987, $511
	cast.32     %r10989 <- (32) %r10988
	scast.64    %r10990 <- (32) %r10989
	muls.64     %r10991 <- %r10990, $16
	add.64*     %r10992 <- %r10984, %r10991
	ptrcast.64* %r10993 <- (64) %r10992
	phisrc.64*  %phi464 <- %r10993
	br          .L2629

.L2629:
	phi.64*     %r10994 <- %phi463, %phi464
	load.64*    %r10995 <- 0[ra]
	push.64*    %r10957
	push.64*    %r10966
	push.64*    %r10994
	push.64*    %r10995
	call        luaV_gettable
	load.64*    %r10996 <- 0[L]
	load.64*    %r10997 <- 24[%r10996]
	store.64*   %r10997 -> 0[base]
	br          .L2580

.L2591:
	symaddr.64* %r10998 <- g
	store.64*   %r10998 -> 0[i_o]
	load.64*    %r10999 <- 0[cl]
	load.64*    %r11000 <- 24[%r10999]
	ptrcast.64* %r11001 <- (64) %r11000
	load.64*    %r11002 <- 0[i_o]
	store.64*   %r11001 -> 0[%r11002]
	load.64*    %r11003 <- 0[i_o]
	store.32    $5 -> 8[%r11003]
	load.64*    %r11004 <- 0[pc]
	load.64*    %r11005 <- 0[L]
	store.64*   %r11004 -> 48[%r11005]
	load.64*    %r11006 <- 0[L]
	symaddr.64* %r11007 <- g
	load.64*    %r11008 <- 0[k]
	load.32     %r11009 <- 0[i]
	cast.32     %r11010 <- (32) %r11009
	lsr.32      %r11011 <- %r11010, $14
	and.32      %r11012 <- %r11011, $0x3ffff
	cast.32     %r11013 <- (32) %r11012
	scast.64    %r11014 <- (32) %r11013
	muls.64     %r11015 <- %r11014, $16
	add.64*     %r11016 <- %r11008, %r11015
	load.64*    %r11017 <- 0[ra]
	push.64*    %r11006
	push.64*    %r11007
	push.64*    %r11016
	push.64*    %r11017
	call        luaV_settable
	load.64*    %r11018 <- 0[L]
	load.64*    %r11019 <- 24[%r11018]
	store.64*   %r11019 -> 0[base]
	br          .L2580

.L2592:
	load.64*    %r11020 <- 0[cl]
	add.64*     %r11021 <- %r11020, $40
	load.32     %r11022 <- 0[i]
	cast.32     %r11023 <- (32) %r11022
	lsr.32      %r11024 <- %r11023, $23
	and.32      %r11025 <- %r11024, $511
	cast.32     %r11026 <- (32) %r11025
	scast.64    %r11027 <- (32) %r11026
	muls.64     %r11028 <- %r11027, $8
	add.64*     %r11029 <- %r11021, %r11028
	load.64*    %r11030 <- 0[%r11029]
	store.64*   %r11030 -> 0[uv]
	load.64*    %r11031 <- 0[ra]
	store.64*   %r11031 -> 0[o2]
	load.64*    %r11032 <- 0[uv]
	load.64*    %r11033 <- 16[%r11032]
	store.64*   %r11033 -> 0[o1]
	load.64*    %r11034 <- 0[o2]
	load.f64    %r11035 <- 0[%r11034]
	fpcast.f64  %r11036 <- (64) %r11035
	load.64*    %r11037 <- 0[o1]
	store.f64   %r11036 -> 0[%r11037]
	load.64*    %r11038 <- 0[o2]
	load.32     %r11039 <- 8[%r11038]
	scast.32    %r11040 <- (32) %r11039
	load.64*    %r11041 <- 0[o1]
	store.32    %r11040 -> 8[%r11041]
	load.64*    %r11042 <- 0[ra]
	load.32     %r11043 <- 8[%r11042]
	setge.32    %r11044 <- %r11043, $4
	br          %r11044, .L2633, .L2631

.L2633:
	load.64*    %r11045 <- 0[ra]
	load.64*    %r11046 <- 0[%r11045]
	load.8      %r11047 <- 9[%r11046]
	cast.32     %r11048 <- (8) %r11047
	and.32      %r11049 <- %r11048, $3
	br          %r11049, .L2632, .L2631

.L2632:
	load.64*    %r11050 <- 0[uv]
	ptrcast.64* %r11051 <- (64) %r11050
	load.8      %r11052 <- 9[%r11051]
	cast.32     %r11053 <- (8) %r11052
	and.32      %r11054 <- %r11053, $4
	br          %r11054, .L2630, .L2631

.L2630:
	load.64*    %r11055 <- 0[L]
	load.64*    %r11056 <- 0[uv]
	ptrcast.64* %r11057 <- (64) %r11056
	load.64*    %r11058 <- 0[ra]
	load.64*    %r11059 <- 0[%r11058]
	push.64*    %r11055
	push.64*    %r11057
	push.64*    %r11059
	call        luaC_barrierf
	br          .L2631

.L2631:
	br          .L2580

.L2593:
	load.64*    %r11060 <- 0[pc]
	load.64*    %r11061 <- 0[L]
	store.64*   %r11060 -> 48[%r11061]
	load.64*    %r11062 <- 0[L]
	load.64*    %r11063 <- 0[ra]
	load.32     %r11064 <- 0[i]
	cast.32     %r11065 <- (32) %r11064
	lsr.32      %r11066 <- %r11065, $23
	and.32      %r11067 <- %r11066, $511
	cast.32     %r11068 <- (32) %r11067
	and.32      %r11069 <- %r11068, $256
	br          %r11069, .L2634, .L2635

.L2634:
	load.64*    %r11070 <- 0[k]
	load.32     %r11071 <- 0[i]
	cast.32     %r11072 <- (32) %r11071
	lsr.32      %r11073 <- %r11072, $23
	and.32      %r11074 <- %r11073, $511
	cast.32     %r11075 <- (32) %r11074
	scast.32    %r11076 <- (32) %r11075
	and.32      %r11077 <- %r11076, $0xfffffeff
	scast.64    %r11078 <- (32) %r11077
	muls.64     %r11079 <- %r11078, $16
	add.64*     %r11080 <- %r11070, %r11079
	phisrc.64*  %phi465 <- %r11080
	br          .L2636

.L2635:
	load.64*    %r11081 <- 0[base]
	load.32     %r11082 <- 0[i]
	cast.32     %r11083 <- (32) %r11082
	lsr.32      %r11084 <- %r11083, $23
	and.32      %r11085 <- %r11084, $511
	cast.32     %r11086 <- (32) %r11085
	scast.64    %r11087 <- (32) %r11086
	muls.64     %r11088 <- %r11087, $16
	add.64*     %r11089 <- %r11081, %r11088
	ptrcast.64* %r11090 <- (64) %r11089
	phisrc.64*  %phi466 <- %r11090
	br          .L2636

.L2636:
	phi.64*     %r11091 <- %phi465, %phi466
	load.32     %r11092 <- 0[i]
	cast.32     %r11093 <- (32) %r11092
	lsr.32      %r11094 <- %r11093, $14
	and.32      %r11095 <- %r11094, $511
	cast.32     %r11096 <- (32) %r11095
	and.32      %r11097 <- %r11096, $256
	br          %r11097, .L2637, .L2638

.L2637:
	load.64*    %r11098 <- 0[k]
	load.32     %r11099 <- 0[i]
	cast.32     %r11100 <- (32) %r11099
	lsr.32      %r11101 <- %r11100, $14
	and.32      %r11102 <- %r11101, $511
	cast.32     %r11103 <- (32) %r11102
	scast.32    %r11104 <- (32) %r11103
	and.32      %r11105 <- %r11104, $0xfffffeff
	scast.64    %r11106 <- (32) %r11105
	muls.64     %r11107 <- %r11106, $16
	add.64*     %r11108 <- %r11098, %r11107
	phisrc.64*  %phi467 <- %r11108
	br          .L2639

.L2638:
	load.64*    %r11109 <- 0[base]
	load.32     %r11110 <- 0[i]
	cast.32     %r11111 <- (32) %r11110
	lsr.32      %r11112 <- %r11111, $14
	and.32      %r11113 <- %r11112, $511
	cast.32     %r11114 <- (32) %r11113
	scast.64    %r11115 <- (32) %r11114
	muls.64     %r11116 <- %r11115, $16
	add.64*     %r11117 <- %r11109, %r11116
	ptrcast.64* %r11118 <- (64) %r11117
	phisrc.64*  %phi468 <- %r11118
	br          .L2639

.L2639:
	phi.64*     %r11119 <- %phi467, %phi468
	push.64*    %r11062
	push.64*    %r11063
	push.64*    %r11091
	push.64*    %r11119
	call        luaV_settable
	load.64*    %r11120 <- 0[L]
	load.64*    %r11121 <- 24[%r11120]
	store.64*   %r11121 -> 0[base]
	br          .L2580

.L2594:
	load.32     %r11122 <- 0[i]
	cast.32     %r11123 <- (32) %r11122
	lsr.32      %r11124 <- %r11123, $23
	and.32      %r11125 <- %r11124, $511
	cast.32     %r11126 <- (32) %r11125
	store.32    %r11126 -> 0[b]
	load.32     %r11127 <- 0[i]
	cast.32     %r11128 <- (32) %r11127
	lsr.32      %r11129 <- %r11128, $14
	and.32      %r11130 <- %r11129, $511
	cast.32     %r11131 <- (32) %r11130
	store.32    %r11131 -> 0[c]
	load.64*    %r11132 <- 0[ra]
	store.64*   %r11132 -> 0[i_o]
	load.64*    %r11133 <- 0[L]
	load.32     %r11134 <- 0[b]
	push.32     %r11134
	call.32     %r11135 <- luaO_fb2int
	load.32     %r11136 <- 0[c]
	push.32     %r11136
	call.32     %r11137 <- luaO_fb2int
	push.64*    %r11133
	push.32     %r11135
	push.32     %r11137
	call.64*    %r11138 <- luaH_new
	ptrcast.64* %r11139 <- (64) %r11138
	load.64*    %r11140 <- 0[i_o]
	store.64*   %r11139 -> 0[%r11140]
	load.64*    %r11141 <- 0[i_o]
	store.32    $5 -> 8[%r11141]
	load.64*    %r11142 <- 0[pc]
	load.64*    %r11143 <- 0[L]
	store.64*   %r11142 -> 48[%r11143]
	load.64*    %r11144 <- 0[L]
	load.64*    %r11145 <- 32[%r11144]
	load.64     %r11146 <- 120[%r11145]
	load.64*    %r11147 <- 0[L]
	load.64*    %r11148 <- 32[%r11147]
	load.64     %r11149 <- 112[%r11148]
	setae.32    %r11150 <- %r11146, %r11149
	br          %r11150, .L2640, .L2641

.L2640:
	load.64*    %r11151 <- 0[L]
	push.64*    %r11151
	call        luaC_step
	br          .L2641

.L2641:
	load.64*    %r11152 <- 0[L]
	load.64*    %r11153 <- 24[%r11152]
	store.64*   %r11153 -> 0[base]
	br          .L2580

.L2595:
	load.64*    %r11154 <- 0[base]
	load.32     %r11155 <- 0[i]
	cast.32     %r11156 <- (32) %r11155
	lsr.32      %r11157 <- %r11156, $23
	and.32      %r11158 <- %r11157, $511
	cast.32     %r11159 <- (32) %r11158
	scast.64    %r11160 <- (32) %r11159
	muls.64     %r11161 <- %r11160, $16
	add.64*     %r11162 <- %r11154, %r11161
	store.64*   %r11162 -> 0[rb]
	load.64*    %r11163 <- 0[rb]
	store.64*   %r11163 -> 0[o2]
	load.64*    %r11164 <- 0[ra]
	add.64*     %r11165 <- %r11164, $16
	store.64*   %r11165 -> 0[o1]
	load.64*    %r11166 <- 0[o2]
	load.f64    %r11167 <- 0[%r11166]
	fpcast.f64  %r11168 <- (64) %r11167
	load.64*    %r11169 <- 0[o1]
	store.f64   %r11168 -> 0[%r11169]
	load.64*    %r11170 <- 0[o2]
	load.32     %r11171 <- 8[%r11170]
	scast.32    %r11172 <- (32) %r11171
	load.64*    %r11173 <- 0[o1]
	store.32    %r11172 -> 8[%r11173]
	load.64*    %r11174 <- 0[pc]
	load.64*    %r11175 <- 0[L]
	store.64*   %r11174 -> 48[%r11175]
	load.64*    %r11176 <- 0[L]
	load.64*    %r11177 <- 0[rb]
	load.32     %r11178 <- 0[i]
	cast.32     %r11179 <- (32) %r11178
	lsr.32      %r11180 <- %r11179, $14
	and.32      %r11181 <- %r11180, $511
	cast.32     %r11182 <- (32) %r11181
	and.32      %r11183 <- %r11182, $256
	br          %r11183, .L2642, .L2643

.L2642:
	load.64*    %r11184 <- 0[k]
	load.32     %r11185 <- 0[i]
	cast.32     %r11186 <- (32) %r11185
	lsr.32      %r11187 <- %r11186, $14
	and.32      %r11188 <- %r11187, $511
	cast.32     %r11189 <- (32) %r11188
	scast.32    %r11190 <- (32) %r11189
	and.32      %r11191 <- %r11190, $0xfffffeff
	scast.64    %r11192 <- (32) %r11191
	muls.64     %r11193 <- %r11192, $16
	add.64*     %r11194 <- %r11184, %r11193
	phisrc.64*  %phi469 <- %r11194
	br          .L2644

.L2643:
	load.64*    %r11195 <- 0[base]
	load.32     %r11196 <- 0[i]
	cast.32     %r11197 <- (32) %r11196
	lsr.32      %r11198 <- %r11197, $14
	and.32      %r11199 <- %r11198, $511
	cast.32     %r11200 <- (32) %r11199
	scast.64    %r11201 <- (32) %r11200
	muls.64     %r11202 <- %r11201, $16
	add.64*     %r11203 <- %r11195, %r11202
	ptrcast.64* %r11204 <- (64) %r11203
	phisrc.64*  %phi470 <- %r11204
	br          .L2644

.L2644:
	phi.64*     %r11205 <- %phi469, %phi470
	load.64*    %r11206 <- 0[ra]
	push.64*    %r11176
	push.64*    %r11177
	push.64*    %r11205
	push.64*    %r11206
	call        luaV_gettable
	load.64*    %r11207 <- 0[L]
	load.64*    %r11208 <- 24[%r11207]
	store.64*   %r11208 -> 0[base]
	br          .L2580

.L2596:
	load.32     %r11209 <- 0[i]
	cast.32     %r11210 <- (32) %r11209
	lsr.32      %r11211 <- %r11210, $23
	and.32      %r11212 <- %r11211, $511
	cast.32     %r11213 <- (32) %r11212
	and.32      %r11214 <- %r11213, $256
	br          %r11214, .L2645, .L2646

.L2645:
	load.64*    %r11215 <- 0[k]
	load.32     %r11216 <- 0[i]
	cast.32     %r11217 <- (32) %r11216
	lsr.32      %r11218 <- %r11217, $23
	and.32      %r11219 <- %r11218, $511
	cast.32     %r11220 <- (32) %r11219
	scast.32    %r11221 <- (32) %r11220
	and.32      %r11222 <- %r11221, $0xfffffeff
	scast.64    %r11223 <- (32) %r11222
	muls.64     %r11224 <- %r11223, $16
	add.64*     %r11225 <- %r11215, %r11224
	phisrc.64*  %phi471 <- %r11225
	br          .L2647

.L2646:
	load.64*    %r11226 <- 0[base]
	load.32     %r11227 <- 0[i]
	cast.32     %r11228 <- (32) %r11227
	lsr.32      %r11229 <- %r11228, $23
	and.32      %r11230 <- %r11229, $511
	cast.32     %r11231 <- (32) %r11230
	scast.64    %r11232 <- (32) %r11231
	muls.64     %r11233 <- %r11232, $16
	add.64*     %r11234 <- %r11226, %r11233
	ptrcast.64* %r11235 <- (64) %r11234
	phisrc.64*  %phi472 <- %r11235
	br          .L2647

.L2647:
	phi.64*     %r11236 <- %phi471, %phi472
	store.64*   %r11236 -> 0[rb]
	load.32     %r11237 <- 0[i]
	cast.32     %r11238 <- (32) %r11237
	lsr.32      %r11239 <- %r11238, $14
	and.32      %r11240 <- %r11239, $511
	cast.32     %r11241 <- (32) %r11240
	and.32      %r11242 <- %r11241, $256
	br          %r11242, .L2648, .L2649

.L2648:
	load.64*    %r11243 <- 0[k]
	load.32     %r11244 <- 0[i]
	cast.32     %r11245 <- (32) %r11244
	lsr.32      %r11246 <- %r11245, $14
	and.32      %r11247 <- %r11246, $511
	cast.32     %r11248 <- (32) %r11247
	scast.32    %r11249 <- (32) %r11248
	and.32      %r11250 <- %r11249, $0xfffffeff
	scast.64    %r11251 <- (32) %r11250
	muls.64     %r11252 <- %r11251, $16
	add.64*     %r11253 <- %r11243, %r11252
	phisrc.64*  %phi473 <- %r11253
	br          .L2650

.L2649:
	load.64*    %r11254 <- 0[base]
	load.32     %r11255 <- 0[i]
	cast.32     %r11256 <- (32) %r11255
	lsr.32      %r11257 <- %r11256, $14
	and.32      %r11258 <- %r11257, $511
	cast.32     %r11259 <- (32) %r11258
	scast.64    %r11260 <- (32) %r11259
	muls.64     %r11261 <- %r11260, $16
	add.64*     %r11262 <- %r11254, %r11261
	ptrcast.64* %r11263 <- (64) %r11262
	phisrc.64*  %phi474 <- %r11263
	br          .L2650

.L2650:
	phi.64*     %r11264 <- %phi473, %phi474
	store.64*   %r11264 -> 0[rc]
	load.64*    %r11265 <- 0[rb]
	load.32     %r11266 <- 8[%r11265]
	seteq.32    %r11267 <- %r11266, $3
	br          %r11267, .L2653, .L2652

.L2653:
	load.64*    %r11268 <- 0[rc]
	load.32     %r11269 <- 8[%r11268]
	seteq.32    %r11270 <- %r11269, $3
	br          %r11270, .L2651, .L2652

.L2651:
	load.64*    %r11271 <- 0[rb]
	load.f64    %r11272 <- 0[%r11271]
	store.f64   %r11272 -> 0[nb]
	load.64*    %r11273 <- 0[rc]
	load.f64    %r11274 <- 0[%r11273]
	store.f64   %r11274 -> 0[nc]
	load.64*    %r11275 <- 0[ra]
	store.64*   %r11275 -> 0[i_o]
	load.f64    %r11276 <- 0[nb]
	load.f64    %r11277 <- 0[nc]
	add.f64     %r11278 <- %r11276, %r11277
	load.64*    %r11279 <- 0[i_o]
	store.f64   %r11278 -> 0[%r11279]
	load.64*    %r11280 <- 0[i_o]
	store.32    $3 -> 8[%r11280]
	br          .L2654

.L2652:
	load.64*    %r11281 <- 0[pc]
	load.64*    %r11282 <- 0[L]
	store.64*   %r11281 -> 48[%r11282]
	load.64*    %r11283 <- 0[L]
	load.64*    %r11284 <- 0[ra]
	load.64*    %r11285 <- 0[rb]
	load.64*    %r11286 <- 0[rc]
	push.64*    %r11283
	push.64*    %r11284
	push.64*    %r11285
	push.64*    %r11286
	push.32     $5
	call        Arith
	load.64*    %r11287 <- 0[L]
	load.64*    %r11288 <- 24[%r11287]
	store.64*   %r11288 -> 0[base]
	br          .L2654

.L2654:
	br          .L2580

.L2597:
	load.32     %r11289 <- 0[i]
	cast.32     %r11290 <- (32) %r11289
	lsr.32      %r11291 <- %r11290, $23
	and.32      %r11292 <- %r11291, $511
	cast.32     %r11293 <- (32) %r11292
	and.32      %r11294 <- %r11293, $256
	br          %r11294, .L2655, .L2656

.L2655:
	load.64*    %r11295 <- 0[k]
	load.32     %r11296 <- 0[i]
	cast.32     %r11297 <- (32) %r11296
	lsr.32      %r11298 <- %r11297, $23
	and.32      %r11299 <- %r11298, $511
	cast.32     %r11300 <- (32) %r11299
	scast.32    %r11301 <- (32) %r11300
	and.32      %r11302 <- %r11301, $0xfffffeff
	scast.64    %r11303 <- (32) %r11302
	muls.64     %r11304 <- %r11303, $16
	add.64*     %r11305 <- %r11295, %r11304
	phisrc.64*  %phi475 <- %r11305
	br          .L2657

.L2656:
	load.64*    %r11306 <- 0[base]
	load.32     %r11307 <- 0[i]
	cast.32     %r11308 <- (32) %r11307
	lsr.32      %r11309 <- %r11308, $23
	and.32      %r11310 <- %r11309, $511
	cast.32     %r11311 <- (32) %r11310
	scast.64    %r11312 <- (32) %r11311
	muls.64     %r11313 <- %r11312, $16
	add.64*     %r11314 <- %r11306, %r11313
	ptrcast.64* %r11315 <- (64) %r11314
	phisrc.64*  %phi476 <- %r11315
	br          .L2657

.L2657:
	phi.64*     %r11316 <- %phi475, %phi476
	store.64*   %r11316 -> 0[rb]
	load.32     %r11317 <- 0[i]
	cast.32     %r11318 <- (32) %r11317
	lsr.32      %r11319 <- %r11318, $14
	and.32      %r11320 <- %r11319, $511
	cast.32     %r11321 <- (32) %r11320
	and.32      %r11322 <- %r11321, $256
	br          %r11322, .L2658, .L2659

.L2658:
	load.64*    %r11323 <- 0[k]
	load.32     %r11324 <- 0[i]
	cast.32     %r11325 <- (32) %r11324
	lsr.32      %r11326 <- %r11325, $14
	and.32      %r11327 <- %r11326, $511
	cast.32     %r11328 <- (32) %r11327
	scast.32    %r11329 <- (32) %r11328
	and.32      %r11330 <- %r11329, $0xfffffeff
	scast.64    %r11331 <- (32) %r11330
	muls.64     %r11332 <- %r11331, $16
	add.64*     %r11333 <- %r11323, %r11332
	phisrc.64*  %phi477 <- %r11333
	br          .L2660

.L2659:
	load.64*    %r11334 <- 0[base]
	load.32     %r11335 <- 0[i]
	cast.32     %r11336 <- (32) %r11335
	lsr.32      %r11337 <- %r11336, $14
	and.32      %r11338 <- %r11337, $511
	cast.32     %r11339 <- (32) %r11338
	scast.64    %r11340 <- (32) %r11339
	muls.64     %r11341 <- %r11340, $16
	add.64*     %r11342 <- %r11334, %r11341
	ptrcast.64* %r11343 <- (64) %r11342
	phisrc.64*  %phi478 <- %r11343
	br          .L2660

.L2660:
	phi.64*     %r11344 <- %phi477, %phi478
	store.64*   %r11344 -> 0[rc]
	load.64*    %r11345 <- 0[rb]
	load.32     %r11346 <- 8[%r11345]
	seteq.32    %r11347 <- %r11346, $3
	br          %r11347, .L2663, .L2662

.L2663:
	load.64*    %r11348 <- 0[rc]
	load.32     %r11349 <- 8[%r11348]
	seteq.32    %r11350 <- %r11349, $3
	br          %r11350, .L2661, .L2662

.L2661:
	load.64*    %r11351 <- 0[rb]
	load.f64    %r11352 <- 0[%r11351]
	store.f64   %r11352 -> 0[nb]
	load.64*    %r11353 <- 0[rc]
	load.f64    %r11354 <- 0[%r11353]
	store.f64   %r11354 -> 0[nc]
	load.64*    %r11355 <- 0[ra]
	store.64*   %r11355 -> 0[i_o]
	load.f64    %r11356 <- 0[nb]
	load.f64    %r11357 <- 0[nc]
	sub.f64     %r11358 <- %r11356, %r11357
	load.64*    %r11359 <- 0[i_o]
	store.f64   %r11358 -> 0[%r11359]
	load.64*    %r11360 <- 0[i_o]
	store.32    $3 -> 8[%r11360]
	br          .L2664

.L2662:
	load.64*    %r11361 <- 0[pc]
	load.64*    %r11362 <- 0[L]
	store.64*   %r11361 -> 48[%r11362]
	load.64*    %r11363 <- 0[L]
	load.64*    %r11364 <- 0[ra]
	load.64*    %r11365 <- 0[rb]
	load.64*    %r11366 <- 0[rc]
	push.64*    %r11363
	push.64*    %r11364
	push.64*    %r11365
	push.64*    %r11366
	push.32     $6
	call        Arith
	load.64*    %r11367 <- 0[L]
	load.64*    %r11368 <- 24[%r11367]
	store.64*   %r11368 -> 0[base]
	br          .L2664

.L2664:
	br          .L2580

.L2598:
	load.32     %r11369 <- 0[i]
	cast.32     %r11370 <- (32) %r11369
	lsr.32      %r11371 <- %r11370, $23
	and.32      %r11372 <- %r11371, $511
	cast.32     %r11373 <- (32) %r11372
	and.32      %r11374 <- %r11373, $256
	br          %r11374, .L2665, .L2666

.L2665:
	load.64*    %r11375 <- 0[k]
	load.32     %r11376 <- 0[i]
	cast.32     %r11377 <- (32) %r11376
	lsr.32      %r11378 <- %r11377, $23
	and.32      %r11379 <- %r11378, $511
	cast.32     %r11380 <- (32) %r11379
	scast.32    %r11381 <- (32) %r11380
	and.32      %r11382 <- %r11381, $0xfffffeff
	scast.64    %r11383 <- (32) %r11382
	muls.64     %r11384 <- %r11383, $16
	add.64*     %r11385 <- %r11375, %r11384
	phisrc.64*  %phi479 <- %r11385
	br          .L2667

.L2666:
	load.64*    %r11386 <- 0[base]
	load.32     %r11387 <- 0[i]
	cast.32     %r11388 <- (32) %r11387
	lsr.32      %r11389 <- %r11388, $23
	and.32      %r11390 <- %r11389, $511
	cast.32     %r11391 <- (32) %r11390
	scast.64    %r11392 <- (32) %r11391
	muls.64     %r11393 <- %r11392, $16
	add.64*     %r11394 <- %r11386, %r11393
	ptrcast.64* %r11395 <- (64) %r11394
	phisrc.64*  %phi480 <- %r11395
	br          .L2667

.L2667:
	phi.64*     %r11396 <- %phi479, %phi480
	store.64*   %r11396 -> 0[rb]
	load.32     %r11397 <- 0[i]
	cast.32     %r11398 <- (32) %r11397
	lsr.32      %r11399 <- %r11398, $14
	and.32      %r11400 <- %r11399, $511
	cast.32     %r11401 <- (32) %r11400
	and.32      %r11402 <- %r11401, $256
	br          %r11402, .L2668, .L2669

.L2668:
	load.64*    %r11403 <- 0[k]
	load.32     %r11404 <- 0[i]
	cast.32     %r11405 <- (32) %r11404
	lsr.32      %r11406 <- %r11405, $14
	and.32      %r11407 <- %r11406, $511
	cast.32     %r11408 <- (32) %r11407
	scast.32    %r11409 <- (32) %r11408
	and.32      %r11410 <- %r11409, $0xfffffeff
	scast.64    %r11411 <- (32) %r11410
	muls.64     %r11412 <- %r11411, $16
	add.64*     %r11413 <- %r11403, %r11412
	phisrc.64*  %phi481 <- %r11413
	br          .L2670

.L2669:
	load.64*    %r11414 <- 0[base]
	load.32     %r11415 <- 0[i]
	cast.32     %r11416 <- (32) %r11415
	lsr.32      %r11417 <- %r11416, $14
	and.32      %r11418 <- %r11417, $511
	cast.32     %r11419 <- (32) %r11418
	scast.64    %r11420 <- (32) %r11419
	muls.64     %r11421 <- %r11420, $16
	add.64*     %r11422 <- %r11414, %r11421
	ptrcast.64* %r11423 <- (64) %r11422
	phisrc.64*  %phi482 <- %r11423
	br          .L2670

.L2670:
	phi.64*     %r11424 <- %phi481, %phi482
	store.64*   %r11424 -> 0[rc]
	load.64*    %r11425 <- 0[rb]
	load.32     %r11426 <- 8[%r11425]
	seteq.32    %r11427 <- %r11426, $3
	br          %r11427, .L2673, .L2672

.L2673:
	load.64*    %r11428 <- 0[rc]
	load.32     %r11429 <- 8[%r11428]
	seteq.32    %r11430 <- %r11429, $3
	br          %r11430, .L2671, .L2672

.L2671:
	load.64*    %r11431 <- 0[rb]
	load.f64    %r11432 <- 0[%r11431]
	store.f64   %r11432 -> 0[nb]
	load.64*    %r11433 <- 0[rc]
	load.f64    %r11434 <- 0[%r11433]
	store.f64   %r11434 -> 0[nc]
	load.64*    %r11435 <- 0[ra]
	store.64*   %r11435 -> 0[i_o]
	load.f64    %r11436 <- 0[nb]
	load.f64    %r11437 <- 0[nc]
	mulu.f64    %r11438 <- %r11436, %r11437
	load.64*    %r11439 <- 0[i_o]
	store.f64   %r11438 -> 0[%r11439]
	load.64*    %r11440 <- 0[i_o]
	store.32    $3 -> 8[%r11440]
	br          .L2674

.L2672:
	load.64*    %r11441 <- 0[pc]
	load.64*    %r11442 <- 0[L]
	store.64*   %r11441 -> 48[%r11442]
	load.64*    %r11443 <- 0[L]
	load.64*    %r11444 <- 0[ra]
	load.64*    %r11445 <- 0[rb]
	load.64*    %r11446 <- 0[rc]
	push.64*    %r11443
	push.64*    %r11444
	push.64*    %r11445
	push.64*    %r11446
	push.32     $7
	call        Arith
	load.64*    %r11447 <- 0[L]
	load.64*    %r11448 <- 24[%r11447]
	store.64*   %r11448 -> 0[base]
	br          .L2674

.L2674:
	br          .L2580

.L2599:
	load.32     %r11449 <- 0[i]
	cast.32     %r11450 <- (32) %r11449
	lsr.32      %r11451 <- %r11450, $23
	and.32      %r11452 <- %r11451, $511
	cast.32     %r11453 <- (32) %r11452
	and.32      %r11454 <- %r11453, $256
	br          %r11454, .L2675, .L2676

.L2675:
	load.64*    %r11455 <- 0[k]
	load.32     %r11456 <- 0[i]
	cast.32     %r11457 <- (32) %r11456
	lsr.32      %r11458 <- %r11457, $23
	and.32      %r11459 <- %r11458, $511
	cast.32     %r11460 <- (32) %r11459
	scast.32    %r11461 <- (32) %r11460
	and.32      %r11462 <- %r11461, $0xfffffeff
	scast.64    %r11463 <- (32) %r11462
	muls.64     %r11464 <- %r11463, $16
	add.64*     %r11465 <- %r11455, %r11464
	phisrc.64*  %phi483 <- %r11465
	br          .L2677

.L2676:
	load.64*    %r11466 <- 0[base]
	load.32     %r11467 <- 0[i]
	cast.32     %r11468 <- (32) %r11467
	lsr.32      %r11469 <- %r11468, $23
	and.32      %r11470 <- %r11469, $511
	cast.32     %r11471 <- (32) %r11470
	scast.64    %r11472 <- (32) %r11471
	muls.64     %r11473 <- %r11472, $16
	add.64*     %r11474 <- %r11466, %r11473
	ptrcast.64* %r11475 <- (64) %r11474
	phisrc.64*  %phi484 <- %r11475
	br          .L2677

.L2677:
	phi.64*     %r11476 <- %phi483, %phi484
	store.64*   %r11476 -> 0[rb]
	load.32     %r11477 <- 0[i]
	cast.32     %r11478 <- (32) %r11477
	lsr.32      %r11479 <- %r11478, $14
	and.32      %r11480 <- %r11479, $511
	cast.32     %r11481 <- (32) %r11480
	and.32      %r11482 <- %r11481, $256
	br          %r11482, .L2678, .L2679

.L2678:
	load.64*    %r11483 <- 0[k]
	load.32     %r11484 <- 0[i]
	cast.32     %r11485 <- (32) %r11484
	lsr.32      %r11486 <- %r11485, $14
	and.32      %r11487 <- %r11486, $511
	cast.32     %r11488 <- (32) %r11487
	scast.32    %r11489 <- (32) %r11488
	and.32      %r11490 <- %r11489, $0xfffffeff
	scast.64    %r11491 <- (32) %r11490
	muls.64     %r11492 <- %r11491, $16
	add.64*     %r11493 <- %r11483, %r11492
	phisrc.64*  %phi485 <- %r11493
	br          .L2680

.L2679:
	load.64*    %r11494 <- 0[base]
	load.32     %r11495 <- 0[i]
	cast.32     %r11496 <- (32) %r11495
	lsr.32      %r11497 <- %r11496, $14
	and.32      %r11498 <- %r11497, $511
	cast.32     %r11499 <- (32) %r11498
	scast.64    %r11500 <- (32) %r11499
	muls.64     %r11501 <- %r11500, $16
	add.64*     %r11502 <- %r11494, %r11501
	ptrcast.64* %r11503 <- (64) %r11502
	phisrc.64*  %phi486 <- %r11503
	br          .L2680

.L2680:
	phi.64*     %r11504 <- %phi485, %phi486
	store.64*   %r11504 -> 0[rc]
	load.64*    %r11505 <- 0[rb]
	load.32     %r11506 <- 8[%r11505]
	seteq.32    %r11507 <- %r11506, $3
	br          %r11507, .L2683, .L2682

.L2683:
	load.64*    %r11508 <- 0[rc]
	load.32     %r11509 <- 8[%r11508]
	seteq.32    %r11510 <- %r11509, $3
	br          %r11510, .L2681, .L2682

.L2681:
	load.64*    %r11511 <- 0[rb]
	load.f64    %r11512 <- 0[%r11511]
	store.f64   %r11512 -> 0[nb]
	load.64*    %r11513 <- 0[rc]
	load.f64    %r11514 <- 0[%r11513]
	store.f64   %r11514 -> 0[nc]
	load.64*    %r11515 <- 0[ra]
	store.64*   %r11515 -> 0[i_o]
	load.f64    %r11516 <- 0[nb]
	load.f64    %r11517 <- 0[nc]
	divu.f64    %r11518 <- %r11516, %r11517
	load.64*    %r11519 <- 0[i_o]
	store.f64   %r11518 -> 0[%r11519]
	load.64*    %r11520 <- 0[i_o]
	store.32    $3 -> 8[%r11520]
	br          .L2684

.L2682:
	load.64*    %r11521 <- 0[pc]
	load.64*    %r11522 <- 0[L]
	store.64*   %r11521 -> 48[%r11522]
	load.64*    %r11523 <- 0[L]
	load.64*    %r11524 <- 0[ra]
	load.64*    %r11525 <- 0[rb]
	load.64*    %r11526 <- 0[rc]
	push.64*    %r11523
	push.64*    %r11524
	push.64*    %r11525
	push.64*    %r11526
	push.32     $8
	call        Arith
	load.64*    %r11527 <- 0[L]
	load.64*    %r11528 <- 24[%r11527]
	store.64*   %r11528 -> 0[base]
	br          .L2684

.L2684:
	br          .L2580

.L2600:
	load.32     %r11529 <- 0[i]
	cast.32     %r11530 <- (32) %r11529
	lsr.32      %r11531 <- %r11530, $23
	and.32      %r11532 <- %r11531, $511
	cast.32     %r11533 <- (32) %r11532
	and.32      %r11534 <- %r11533, $256
	br          %r11534, .L2685, .L2686

.L2685:
	load.64*    %r11535 <- 0[k]
	load.32     %r11536 <- 0[i]
	cast.32     %r11537 <- (32) %r11536
	lsr.32      %r11538 <- %r11537, $23
	and.32      %r11539 <- %r11538, $511
	cast.32     %r11540 <- (32) %r11539
	scast.32    %r11541 <- (32) %r11540
	and.32      %r11542 <- %r11541, $0xfffffeff
	scast.64    %r11543 <- (32) %r11542
	muls.64     %r11544 <- %r11543, $16
	add.64*     %r11545 <- %r11535, %r11544
	phisrc.64*  %phi487 <- %r11545
	br          .L2687

.L2686:
	load.64*    %r11546 <- 0[base]
	load.32     %r11547 <- 0[i]
	cast.32     %r11548 <- (32) %r11547
	lsr.32      %r11549 <- %r11548, $23
	and.32      %r11550 <- %r11549, $511
	cast.32     %r11551 <- (32) %r11550
	scast.64    %r11552 <- (32) %r11551
	muls.64     %r11553 <- %r11552, $16
	add.64*     %r11554 <- %r11546, %r11553
	ptrcast.64* %r11555 <- (64) %r11554
	phisrc.64*  %phi488 <- %r11555
	br          .L2687

.L2687:
	phi.64*     %r11556 <- %phi487, %phi488
	store.64*   %r11556 -> 0[rb]
	load.32     %r11557 <- 0[i]
	cast.32     %r11558 <- (32) %r11557
	lsr.32      %r11559 <- %r11558, $14
	and.32      %r11560 <- %r11559, $511
	cast.32     %r11561 <- (32) %r11560
	and.32      %r11562 <- %r11561, $256
	br          %r11562, .L2688, .L2689

.L2688:
	load.64*    %r11563 <- 0[k]
	load.32     %r11564 <- 0[i]
	cast.32     %r11565 <- (32) %r11564
	lsr.32      %r11566 <- %r11565, $14
	and.32      %r11567 <- %r11566, $511
	cast.32     %r11568 <- (32) %r11567
	scast.32    %r11569 <- (32) %r11568
	and.32      %r11570 <- %r11569, $0xfffffeff
	scast.64    %r11571 <- (32) %r11570
	muls.64     %r11572 <- %r11571, $16
	add.64*     %r11573 <- %r11563, %r11572
	phisrc.64*  %phi489 <- %r11573
	br          .L2690

.L2689:
	load.64*    %r11574 <- 0[base]
	load.32     %r11575 <- 0[i]
	cast.32     %r11576 <- (32) %r11575
	lsr.32      %r11577 <- %r11576, $14
	and.32      %r11578 <- %r11577, $511
	cast.32     %r11579 <- (32) %r11578
	scast.64    %r11580 <- (32) %r11579
	muls.64     %r11581 <- %r11580, $16
	add.64*     %r11582 <- %r11574, %r11581
	ptrcast.64* %r11583 <- (64) %r11582
	phisrc.64*  %phi490 <- %r11583
	br          .L2690

.L2690:
	phi.64*     %r11584 <- %phi489, %phi490
	store.64*   %r11584 -> 0[rc]
	load.64*    %r11585 <- 0[rb]
	load.32     %r11586 <- 8[%r11585]
	seteq.32    %r11587 <- %r11586, $3
	br          %r11587, .L2693, .L2692

.L2693:
	load.64*    %r11588 <- 0[rc]
	load.32     %r11589 <- 8[%r11588]
	seteq.32    %r11590 <- %r11589, $3
	br          %r11590, .L2691, .L2692

.L2691:
	load.64*    %r11591 <- 0[rb]
	load.f64    %r11592 <- 0[%r11591]
	store.f64   %r11592 -> 0[nb]
	load.64*    %r11593 <- 0[rc]
	load.f64    %r11594 <- 0[%r11593]
	store.f64   %r11594 -> 0[nc]
	load.64*    %r11595 <- 0[ra]
	store.64*   %r11595 -> 0[i_o]
	load.f64    %r11596 <- 0[nb]
	load.f64    %r11597 <- 0[nb]
	load.f64    %r11598 <- 0[nc]
	divu.f64    %r11599 <- %r11597, %r11598
	push.f64    %r11599
	call.f64    %r11600 <- floor
	load.f64    %r11601 <- 0[nc]
	mulu.f64    %r11602 <- %r11600, %r11601
	sub.f64     %r11603 <- %r11596, %r11602
	load.64*    %r11604 <- 0[i_o]
	store.f64   %r11603 -> 0[%r11604]
	load.64*    %r11605 <- 0[i_o]
	store.32    $3 -> 8[%r11605]
	br          .L2694

.L2692:
	load.64*    %r11606 <- 0[pc]
	load.64*    %r11607 <- 0[L]
	store.64*   %r11606 -> 48[%r11607]
	load.64*    %r11608 <- 0[L]
	load.64*    %r11609 <- 0[ra]
	load.64*    %r11610 <- 0[rb]
	load.64*    %r11611 <- 0[rc]
	push.64*    %r11608
	push.64*    %r11609
	push.64*    %r11610
	push.64*    %r11611
	push.32     $9
	call        Arith
	load.64*    %r11612 <- 0[L]
	load.64*    %r11613 <- 24[%r11612]
	store.64*   %r11613 -> 0[base]
	br          .L2694

.L2694:
	br          .L2580

.L2601:
	load.32     %r11614 <- 0[i]
	cast.32     %r11615 <- (32) %r11614
	lsr.32      %r11616 <- %r11615, $23
	and.32      %r11617 <- %r11616, $511
	cast.32     %r11618 <- (32) %r11617
	and.32      %r11619 <- %r11618, $256
	br          %r11619, .L2695, .L2696

.L2695:
	load.64*    %r11620 <- 0[k]
	load.32     %r11621 <- 0[i]
	cast.32     %r11622 <- (32) %r11621
	lsr.32      %r11623 <- %r11622, $23
	and.32      %r11624 <- %r11623, $511
	cast.32     %r11625 <- (32) %r11624
	scast.32    %r11626 <- (32) %r11625
	and.32      %r11627 <- %r11626, $0xfffffeff
	scast.64    %r11628 <- (32) %r11627
	muls.64     %r11629 <- %r11628, $16
	add.64*     %r11630 <- %r11620, %r11629
	phisrc.64*  %phi491 <- %r11630
	br          .L2697

.L2696:
	load.64*    %r11631 <- 0[base]
	load.32     %r11632 <- 0[i]
	cast.32     %r11633 <- (32) %r11632
	lsr.32      %r11634 <- %r11633, $23
	and.32      %r11635 <- %r11634, $511
	cast.32     %r11636 <- (32) %r11635
	scast.64    %r11637 <- (32) %r11636
	muls.64     %r11638 <- %r11637, $16
	add.64*     %r11639 <- %r11631, %r11638
	ptrcast.64* %r11640 <- (64) %r11639
	phisrc.64*  %phi492 <- %r11640
	br          .L2697

.L2697:
	phi.64*     %r11641 <- %phi491, %phi492
	store.64*   %r11641 -> 0[rb]
	load.32     %r11642 <- 0[i]
	cast.32     %r11643 <- (32) %r11642
	lsr.32      %r11644 <- %r11643, $14
	and.32      %r11645 <- %r11644, $511
	cast.32     %r11646 <- (32) %r11645
	and.32      %r11647 <- %r11646, $256
	br          %r11647, .L2698, .L2699

.L2698:
	load.64*    %r11648 <- 0[k]
	load.32     %r11649 <- 0[i]
	cast.32     %r11650 <- (32) %r11649
	lsr.32      %r11651 <- %r11650, $14
	and.32      %r11652 <- %r11651, $511
	cast.32     %r11653 <- (32) %r11652
	scast.32    %r11654 <- (32) %r11653
	and.32      %r11655 <- %r11654, $0xfffffeff
	scast.64    %r11656 <- (32) %r11655
	muls.64     %r11657 <- %r11656, $16
	add.64*     %r11658 <- %r11648, %r11657
	phisrc.64*  %phi493 <- %r11658
	br          .L2700

.L2699:
	load.64*    %r11659 <- 0[base]
	load.32     %r11660 <- 0[i]
	cast.32     %r11661 <- (32) %r11660
	lsr.32      %r11662 <- %r11661, $14
	and.32      %r11663 <- %r11662, $511
	cast.32     %r11664 <- (32) %r11663
	scast.64    %r11665 <- (32) %r11664
	muls.64     %r11666 <- %r11665, $16
	add.64*     %r11667 <- %r11659, %r11666
	ptrcast.64* %r11668 <- (64) %r11667
	phisrc.64*  %phi494 <- %r11668
	br          .L2700

.L2700:
	phi.64*     %r11669 <- %phi493, %phi494
	store.64*   %r11669 -> 0[rc]
	load.64*    %r11670 <- 0[rb]
	load.32     %r11671 <- 8[%r11670]
	seteq.32    %r11672 <- %r11671, $3
	br          %r11672, .L2703, .L2702

.L2703:
	load.64*    %r11673 <- 0[rc]
	load.32     %r11674 <- 8[%r11673]
	seteq.32    %r11675 <- %r11674, $3
	br          %r11675, .L2701, .L2702

.L2701:
	load.64*    %r11676 <- 0[rb]
	load.f64    %r11677 <- 0[%r11676]
	store.f64   %r11677 -> 0[nb]
	load.64*    %r11678 <- 0[rc]
	load.f64    %r11679 <- 0[%r11678]
	store.f64   %r11679 -> 0[nc]
	load.64*    %r11680 <- 0[ra]
	store.64*   %r11680 -> 0[i_o]
	load.f64    %r11681 <- 0[nb]
	load.f64    %r11682 <- 0[nc]
	push.f64    %r11681
	push.f64    %r11682
	call.f64    %r11683 <- pow
	load.64*    %r11684 <- 0[i_o]
	store.f64   %r11683 -> 0[%r11684]
	load.64*    %r11685 <- 0[i_o]
	store.32    $3 -> 8[%r11685]
	br          .L2704

.L2702:
	load.64*    %r11686 <- 0[pc]
	load.64*    %r11687 <- 0[L]
	store.64*   %r11686 -> 48[%r11687]
	load.64*    %r11688 <- 0[L]
	load.64*    %r11689 <- 0[ra]
	load.64*    %r11690 <- 0[rb]
	load.64*    %r11691 <- 0[rc]
	push.64*    %r11688
	push.64*    %r11689
	push.64*    %r11690
	push.64*    %r11691
	push.32     $10
	call        Arith
	load.64*    %r11692 <- 0[L]
	load.64*    %r11693 <- 24[%r11692]
	store.64*   %r11693 -> 0[base]
	br          .L2704

.L2704:
	br          .L2580

.L2602:
	load.64*    %r11694 <- 0[base]
	load.32     %r11695 <- 0[i]
	cast.32     %r11696 <- (32) %r11695
	lsr.32      %r11697 <- %r11696, $23
	and.32      %r11698 <- %r11697, $511
	cast.32     %r11699 <- (32) %r11698
	scast.64    %r11700 <- (32) %r11699
	muls.64     %r11701 <- %r11700, $16
	add.64*     %r11702 <- %r11694, %r11701
	store.64*   %r11702 -> 0[rb]
	load.64*    %r11703 <- 0[rb]
	load.32     %r11704 <- 8[%r11703]
	seteq.32    %r11705 <- %r11704, $3
	br          %r11705, .L2705, .L2706

.L2705:
	load.64*    %r11706 <- 0[rb]
	load.f64    %r11707 <- 0[%r11706]
	store.f64   %r11707 -> 0[nb]
	load.64*    %r11708 <- 0[ra]
	store.64*   %r11708 -> 0[i_o]
	load.f64    %r11709 <- 0[nb]
	neg.f64     %r11710 <- %r11709
	load.64*    %r11711 <- 0[i_o]
	store.f64   %r11710 -> 0[%r11711]
	load.64*    %r11712 <- 0[i_o]
	store.32    $3 -> 8[%r11712]
	br          .L2707

.L2706:
	load.64*    %r11713 <- 0[pc]
	load.64*    %r11714 <- 0[L]
	store.64*   %r11713 -> 48[%r11714]
	load.64*    %r11715 <- 0[L]
	load.64*    %r11716 <- 0[ra]
	load.64*    %r11717 <- 0[rb]
	load.64*    %r11718 <- 0[rb]
	push.64*    %r11715
	push.64*    %r11716
	push.64*    %r11717
	push.64*    %r11718
	push.32     $11
	call        Arith
	load.64*    %r11719 <- 0[L]
	load.64*    %r11720 <- 24[%r11719]
	store.64*   %r11720 -> 0[base]
	br          .L2707

.L2707:
	br          .L2580

.L2603:
	load.64*    %r11721 <- 0[base]
	load.32     %r11722 <- 0[i]
	cast.32     %r11723 <- (32) %r11722
	lsr.32      %r11724 <- %r11723, $23
	and.32      %r11725 <- %r11724, $511
	cast.32     %r11726 <- (32) %r11725
	scast.64    %r11727 <- (32) %r11726
	muls.64     %r11728 <- %r11727, $16
	add.64*     %r11729 <- %r11721, %r11728
	load.32     %r11730 <- 8[%r11729]
	seteq.32    %r11731 <- %r11730, $0
	br          %r11731, .L2708, .L2709

.L2708:
	phisrc.32   %phi495 <- $1
	br          .L2710

.L2709:
	load.64*    %r11732 <- 0[base]
	load.32     %r11733 <- 0[i]
	cast.32     %r11734 <- (32) %r11733
	lsr.32      %r11735 <- %r11734, $23
	and.32      %r11736 <- %r11735, $511
	cast.32     %r11737 <- (32) %r11736
	scast.64    %r11738 <- (32) %r11737
	muls.64     %r11739 <- %r11738, $16
	add.64*     %r11740 <- %r11732, %r11739
	load.32     %r11741 <- 8[%r11740]
	seteq.32    %r11742 <- %r11741, $1
	br          %r11742, .L2711, .L2712

.L2711:
	load.64*    %r11743 <- 0[base]
	load.32     %r11744 <- 0[i]
	cast.32     %r11745 <- (32) %r11744
	lsr.32      %r11746 <- %r11745, $23
	and.32      %r11747 <- %r11746, $511
	cast.32     %r11748 <- (32) %r11747
	scast.64    %r11749 <- (32) %r11748
	muls.64     %r11750 <- %r11749, $16
	add.64*     %r11751 <- %r11743, %r11750
	load.32     %r11752 <- 0[%r11751]
	seteq.32    %r11753 <- %r11752, $0
	phisrc.32   %phi496 <- %r11753
	br          .L2713

.L2712:
	phisrc.32   %phi497 <- $0
	br          .L2713

.L2713:
	phi.32      %r11754 <- %phi496, %phi497
	phisrc.32   %phi498 <- %r11754
	br          .L2710

.L2710:
	phi.32      %r11755 <- %phi495, %phi498
	store.32    %r11755 -> 0[res]
	load.64*    %r11756 <- 0[ra]
	store.64*   %r11756 -> 0[i_o]
	load.32     %r11757 <- 0[res]
	load.64*    %r11758 <- 0[i_o]
	store.32    %r11757 -> 0[%r11758]
	load.64*    %r11759 <- 0[i_o]
	store.32    $1 -> 8[%r11759]
	br          .L2580

.L2604:
	load.64*    %r11760 <- 0[base]
	load.32     %r11761 <- 0[i]
	cast.32     %r11762 <- (32) %r11761
	lsr.32      %r11763 <- %r11762, $23
	and.32      %r11764 <- %r11763, $511
	cast.32     %r11765 <- (32) %r11764
	scast.64    %r11766 <- (32) %r11765
	muls.64     %r11767 <- %r11766, $16
	add.64*     %r11768 <- %r11760, %r11767
	store.64*   %r11768 -> 0[rb]
	load.64*    %r11769 <- 0[rb]
	load.32     %r11770 <- 8[%r11769]
	switch.32   %r11770, 4 -> .L2716, 5 -> .L2715, default -> .L2717

.L2715:
	load.64*    %r11771 <- 0[ra]
	store.64*   %r11771 -> 0[i_o]
	load.64*    %r11772 <- 0[rb]
	load.64*    %r11773 <- 0[%r11772]
	add.64*     %r11774 <- %r11773, $0
	push.64*    %r11774
	call.32     %r11775 <- luaH_getn
	fpcast.f64  %r11776 <- (32) %r11775
	load.64*    %r11777 <- 0[i_o]
	store.f64   %r11776 -> 0[%r11777]
	load.64*    %r11778 <- 0[i_o]
	store.32    $3 -> 8[%r11778]
	br          .L2714

.L2716:
	load.64*    %r11779 <- 0[ra]
	store.64*   %r11779 -> 0[i_o]
	load.64*    %r11780 <- 0[rb]
	load.64*    %r11781 <- 0[%r11780]
	load.64     %r11782 <- 16[%r11781]
	fpcast.f64  %r11783 <- (64) %r11782
	load.64*    %r11784 <- 0[i_o]
	store.f64   %r11783 -> 0[%r11784]
	load.64*    %r11785 <- 0[i_o]
	store.32    $3 -> 8[%r11785]
	br          .L2714

.L2717:
	load.64*    %r11786 <- 0[pc]
	load.64*    %r11787 <- 0[L]
	store.64*   %r11786 -> 48[%r11787]
	load.64*    %r11788 <- 0[L]
	load.64*    %r11789 <- 0[rb]
	symaddr.64* %r11790 <- luaO_nilobject_
	load.64*    %r11791 <- 0[ra]
	push.64*    %r11788
	push.64*    %r11789
	push.64*    %r11790
	push.64*    %r11791
	push.32     $12
	call.32     %r11792 <- call_binTM
	br          %r11792, .L2719, .L2718

.L2718:
	load.64*    %r11793 <- 0[L]
	load.64*    %r11794 <- 0[rb]
	symaddr.64* %r11795 <- <anon symbol:0x62d001126500>
	push.64*    %r11793
	push.64*    %r11794
	push.64*    %r11795
	call        luaG_typeerror
	br          .L2719

.L2719:
	load.64*    %r11796 <- 0[L]
	load.64*    %r11797 <- 24[%r11796]
	store.64*   %r11797 -> 0[base]
	br          .L2714

.L2714:
	br          .L2580

.L2605:
	load.32     %r11798 <- 0[i]
	cast.32     %r11799 <- (32) %r11798
	lsr.32      %r11800 <- %r11799, $23
	and.32      %r11801 <- %r11800, $511
	cast.32     %r11802 <- (32) %r11801
	store.32    %r11802 -> 0[b]
	load.32     %r11803 <- 0[i]
	cast.32     %r11804 <- (32) %r11803
	lsr.32      %r11805 <- %r11804, $14
	and.32      %r11806 <- %r11805, $511
	cast.32     %r11807 <- (32) %r11806
	store.32    %r11807 -> 0[c]
	load.64*    %r11808 <- 0[pc]
	load.64*    %r11809 <- 0[L]
	store.64*   %r11808 -> 48[%r11809]
	load.64*    %r11810 <- 0[L]
	load.32     %r11811 <- 0[c]
	load.32     %r11812 <- 0[b]
	sub.32      %r11813 <- %r11811, %r11812
	add.32      %r11814 <- %r11813, $1
	load.32     %r11815 <- 0[c]
	push.64*    %r11810
	push.32     %r11814
	push.32     %r11815
	call        luaV_concat
	load.64*    %r11816 <- 0[L]
	load.64*    %r11817 <- 32[%r11816]
	load.64     %r11818 <- 120[%r11817]
	load.64*    %r11819 <- 0[L]
	load.64*    %r11820 <- 32[%r11819]
	load.64     %r11821 <- 112[%r11820]
	setae.32    %r11822 <- %r11818, %r11821
	br          %r11822, .L2720, .L2721

.L2720:
	load.64*    %r11823 <- 0[L]
	push.64*    %r11823
	call        luaC_step
	br          .L2721

.L2721:
	load.64*    %r11824 <- 0[L]
	load.64*    %r11825 <- 24[%r11824]
	store.64*   %r11825 -> 0[base]
	load.64*    %r11826 <- 0[base]
	load.32     %r11827 <- 0[b]
	scast.64    %r11828 <- (32) %r11827
	muls.64     %r11829 <- %r11828, $16
	add.64*     %r11830 <- %r11826, %r11829
	store.64*   %r11830 -> 0[o2]
	load.64*    %r11831 <- 0[base]
	load.32     %r11832 <- 0[i]
	cast.32     %r11833 <- (32) %r11832
	lsr.32      %r11834 <- %r11833, $6
	and.32      %r11835 <- %r11834, $255
	cast.32     %r11836 <- (32) %r11835
	scast.64    %r11837 <- (32) %r11836
	muls.64     %r11838 <- %r11837, $16
	add.64*     %r11839 <- %r11831, %r11838
	store.64*   %r11839 -> 0[o1]
	load.64*    %r11840 <- 0[o2]
	load.f64    %r11841 <- 0[%r11840]
	fpcast.f64  %r11842 <- (64) %r11841
	load.64*    %r11843 <- 0[o1]
	store.f64   %r11842 -> 0[%r11843]
	load.64*    %r11844 <- 0[o2]
	load.32     %r11845 <- 8[%r11844]
	scast.32    %r11846 <- (32) %r11845
	load.64*    %r11847 <- 0[o1]
	store.32    %r11846 -> 8[%r11847]
	br          .L2580

.L2606:
	load.32     %r11848 <- 0[i]
	cast.32     %r11849 <- (32) %r11848
	lsr.32      %r11850 <- %r11849, $14
	and.32      %r11851 <- %r11850, $0x3ffff
	cast.32     %r11852 <- (32) %r11851
	sub.32      %r11853 <- %r11852, $0x1ffff
	scast.64    %r11854 <- (32) %r11853
	muls.64     %r11855 <- %r11854, $4
	load.64*    %r11856 <- 0[pc]
	cast.64     %r11857 <- (64) %r11856
	add.64      %r11858 <- %r11857, %r11855
	ptrcast.64* %r11859 <- (64) %r11858
	store.64*   %r11859 -> 0[pc]
	br          .L2580

.L2607:
	load.32     %r11860 <- 0[i]
	cast.32     %r11861 <- (32) %r11860
	lsr.32      %r11862 <- %r11861, $23
	and.32      %r11863 <- %r11862, $511
	cast.32     %r11864 <- (32) %r11863
	and.32      %r11865 <- %r11864, $256
	br          %r11865, .L2722, .L2723

.L2722:
	load.64*    %r11866 <- 0[k]
	load.32     %r11867 <- 0[i]
	cast.32     %r11868 <- (32) %r11867
	lsr.32      %r11869 <- %r11868, $23
	and.32      %r11870 <- %r11869, $511
	cast.32     %r11871 <- (32) %r11870
	scast.32    %r11872 <- (32) %r11871
	and.32      %r11873 <- %r11872, $0xfffffeff
	scast.64    %r11874 <- (32) %r11873
	muls.64     %r11875 <- %r11874, $16
	add.64*     %r11876 <- %r11866, %r11875
	phisrc.64*  %phi499 <- %r11876
	br          .L2724

.L2723:
	load.64*    %r11877 <- 0[base]
	load.32     %r11878 <- 0[i]
	cast.32     %r11879 <- (32) %r11878
	lsr.32      %r11880 <- %r11879, $23
	and.32      %r11881 <- %r11880, $511
	cast.32     %r11882 <- (32) %r11881
	scast.64    %r11883 <- (32) %r11882
	muls.64     %r11884 <- %r11883, $16
	add.64*     %r11885 <- %r11877, %r11884
	ptrcast.64* %r11886 <- (64) %r11885
	phisrc.64*  %phi500 <- %r11886
	br          .L2724

.L2724:
	phi.64*     %r11887 <- %phi499, %phi500
	store.64*   %r11887 -> 0[rb]
	load.32     %r11888 <- 0[i]
	cast.32     %r11889 <- (32) %r11888
	lsr.32      %r11890 <- %r11889, $14
	and.32      %r11891 <- %r11890, $511
	cast.32     %r11892 <- (32) %r11891
	and.32      %r11893 <- %r11892, $256
	br          %r11893, .L2725, .L2726

.L2725:
	load.64*    %r11894 <- 0[k]
	load.32     %r11895 <- 0[i]
	cast.32     %r11896 <- (32) %r11895
	lsr.32      %r11897 <- %r11896, $14
	and.32      %r11898 <- %r11897, $511
	cast.32     %r11899 <- (32) %r11898
	scast.32    %r11900 <- (32) %r11899
	and.32      %r11901 <- %r11900, $0xfffffeff
	scast.64    %r11902 <- (32) %r11901
	muls.64     %r11903 <- %r11902, $16
	add.64*     %r11904 <- %r11894, %r11903
	phisrc.64*  %phi501 <- %r11904
	br          .L2727

.L2726:
	load.64*    %r11905 <- 0[base]
	load.32     %r11906 <- 0[i]
	cast.32     %r11907 <- (32) %r11906
	lsr.32      %r11908 <- %r11907, $14
	and.32      %r11909 <- %r11908, $511
	cast.32     %r11910 <- (32) %r11909
	scast.64    %r11911 <- (32) %r11910
	muls.64     %r11912 <- %r11911, $16
	add.64*     %r11913 <- %r11905, %r11912
	ptrcast.64* %r11914 <- (64) %r11913
	phisrc.64*  %phi502 <- %r11914
	br          .L2727

.L2727:
	phi.64*     %r11915 <- %phi501, %phi502
	store.64*   %r11915 -> 0[rc]
	load.64*    %r11916 <- 0[pc]
	load.64*    %r11917 <- 0[L]
	store.64*   %r11916 -> 48[%r11917]
	load.64*    %r11918 <- 0[rb]
	load.32     %r11919 <- 8[%r11918]
	load.64*    %r11920 <- 0[rc]
	load.32     %r11921 <- 8[%r11920]
	seteq.32    %r11922 <- %r11919, %r11921
	br          %r11922, .L2730, .L2731

.L2730:
	load.64*    %r11923 <- 0[L]
	load.64*    %r11924 <- 0[rb]
	load.64*    %r11925 <- 0[rc]
	push.64*    %r11923
	push.64*    %r11924
	push.64*    %r11925
	call.32     %r11926 <- luaV_equalval
	phisrc.32   %phi503 <- %r11926
	br          .L2732

.L2731:
	phisrc.32   %phi504 <- $0
	br          .L2732

.L2732:
	phi.32      %r11927 <- %phi503, %phi504
	load.32     %r11928 <- 0[i]
	cast.32     %r11929 <- (32) %r11928
	lsr.32      %r11930 <- %r11929, $6
	and.32      %r11931 <- %r11930, $255
	cast.32     %r11932 <- (32) %r11931
	seteq.32    %r11933 <- %r11927, %r11932
	br          %r11933, .L2728, .L2729

.L2728:
	load.64*    %r11934 <- 0[pc]
	load.32     %r11935 <- 0[%r11934]
	cast.32     %r11936 <- (32) %r11935
	lsr.32      %r11937 <- %r11936, $14
	and.32      %r11938 <- %r11937, $0x3ffff
	cast.32     %r11939 <- (32) %r11938
	sub.32      %r11940 <- %r11939, $0x1ffff
	scast.64    %r11941 <- (32) %r11940
	muls.64     %r11942 <- %r11941, $4
	load.64*    %r11943 <- 0[pc]
	cast.64     %r11944 <- (64) %r11943
	add.64      %r11945 <- %r11944, %r11942
	ptrcast.64* %r11946 <- (64) %r11945
	store.64*   %r11946 -> 0[pc]
	br          .L2729

.L2729:
	load.64*    %r11947 <- 0[L]
	load.64*    %r11948 <- 24[%r11947]
	store.64*   %r11948 -> 0[base]
	load.64*    %r11949 <- 0[pc]
	add.64*     %r11950 <- %r11949, $4
	store.64*   %r11950 -> 0[pc]
	br          .L2580

.L2608:
	load.64*    %r11951 <- 0[pc]
	load.64*    %r11952 <- 0[L]
	store.64*   %r11951 -> 48[%r11952]
	load.64*    %r11953 <- 0[L]
	load.32     %r11954 <- 0[i]
	cast.32     %r11955 <- (32) %r11954
	lsr.32      %r11956 <- %r11955, $23
	and.32      %r11957 <- %r11956, $511
	cast.32     %r11958 <- (32) %r11957
	and.32      %r11959 <- %r11958, $256
	br          %r11959, .L2735, .L2736

.L2735:
	load.64*    %r11960 <- 0[k]
	load.32     %r11961 <- 0[i]
	cast.32     %r11962 <- (32) %r11961
	lsr.32      %r11963 <- %r11962, $23
	and.32      %r11964 <- %r11963, $511
	cast.32     %r11965 <- (32) %r11964
	scast.32    %r11966 <- (32) %r11965
	and.32      %r11967 <- %r11966, $0xfffffeff
	scast.64    %r11968 <- (32) %r11967
	muls.64     %r11969 <- %r11968, $16
	add.64*     %r11970 <- %r11960, %r11969
	phisrc.64*  %phi505 <- %r11970
	br          .L2737

.L2736:
	load.64*    %r11971 <- 0[base]
	load.32     %r11972 <- 0[i]
	cast.32     %r11973 <- (32) %r11972
	lsr.32      %r11974 <- %r11973, $23
	and.32      %r11975 <- %r11974, $511
	cast.32     %r11976 <- (32) %r11975
	scast.64    %r11977 <- (32) %r11976
	muls.64     %r11978 <- %r11977, $16
	add.64*     %r11979 <- %r11971, %r11978
	ptrcast.64* %r11980 <- (64) %r11979
	phisrc.64*  %phi506 <- %r11980
	br          .L2737

.L2737:
	phi.64*     %r11981 <- %phi505, %phi506
	load.32     %r11982 <- 0[i]
	cast.32     %r11983 <- (32) %r11982
	lsr.32      %r11984 <- %r11983, $14
	and.32      %r11985 <- %r11984, $511
	cast.32     %r11986 <- (32) %r11985
	and.32      %r11987 <- %r11986, $256
	br          %r11987, .L2738, .L2739

.L2738:
	load.64*    %r11988 <- 0[k]
	load.32     %r11989 <- 0[i]
	cast.32     %r11990 <- (32) %r11989
	lsr.32      %r11991 <- %r11990, $14
	and.32      %r11992 <- %r11991, $511
	cast.32     %r11993 <- (32) %r11992
	scast.32    %r11994 <- (32) %r11993
	and.32      %r11995 <- %r11994, $0xfffffeff
	scast.64    %r11996 <- (32) %r11995
	muls.64     %r11997 <- %r11996, $16
	add.64*     %r11998 <- %r11988, %r11997
	phisrc.64*  %phi507 <- %r11998
	br          .L2740

.L2739:
	load.64*    %r11999 <- 0[base]
	load.32     %r12000 <- 0[i]
	cast.32     %r12001 <- (32) %r12000
	lsr.32      %r12002 <- %r12001, $14
	and.32      %r12003 <- %r12002, $511
	cast.32     %r12004 <- (32) %r12003
	scast.64    %r12005 <- (32) %r12004
	muls.64     %r12006 <- %r12005, $16
	add.64*     %r12007 <- %r11999, %r12006
	ptrcast.64* %r12008 <- (64) %r12007
	phisrc.64*  %phi508 <- %r12008
	br          .L2740

.L2740:
	phi.64*     %r12009 <- %phi507, %phi508
	push.64*    %r11953
	push.64*    %r11981
	push.64*    %r12009
	call.32     %r12010 <- luaV_lessthan
	load.32     %r12011 <- 0[i]
	cast.32     %r12012 <- (32) %r12011
	lsr.32      %r12013 <- %r12012, $6
	and.32      %r12014 <- %r12013, $255
	cast.32     %r12015 <- (32) %r12014
	seteq.32    %r12016 <- %r12010, %r12015
	br          %r12016, .L2733, .L2734

.L2733:
	load.64*    %r12017 <- 0[pc]
	load.32     %r12018 <- 0[%r12017]
	cast.32     %r12019 <- (32) %r12018
	lsr.32      %r12020 <- %r12019, $14
	and.32      %r12021 <- %r12020, $0x3ffff
	cast.32     %r12022 <- (32) %r12021
	sub.32      %r12023 <- %r12022, $0x1ffff
	scast.64    %r12024 <- (32) %r12023
	muls.64     %r12025 <- %r12024, $4
	load.64*    %r12026 <- 0[pc]
	cast.64     %r12027 <- (64) %r12026
	add.64      %r12028 <- %r12027, %r12025
	ptrcast.64* %r12029 <- (64) %r12028
	store.64*   %r12029 -> 0[pc]
	br          .L2734

.L2734:
	load.64*    %r12030 <- 0[L]
	load.64*    %r12031 <- 24[%r12030]
	store.64*   %r12031 -> 0[base]
	load.64*    %r12032 <- 0[pc]
	add.64*     %r12033 <- %r12032, $4
	store.64*   %r12033 -> 0[pc]
	br          .L2580

.L2609:
	load.64*    %r12034 <- 0[pc]
	load.64*    %r12035 <- 0[L]
	store.64*   %r12034 -> 48[%r12035]
	load.64*    %r12036 <- 0[L]
	load.32     %r12037 <- 0[i]
	cast.32     %r12038 <- (32) %r12037
	lsr.32      %r12039 <- %r12038, $23
	and.32      %r12040 <- %r12039, $511
	cast.32     %r12041 <- (32) %r12040
	and.32      %r12042 <- %r12041, $256
	br          %r12042, .L2743, .L2744

.L2743:
	load.64*    %r12043 <- 0[k]
	load.32     %r12044 <- 0[i]
	cast.32     %r12045 <- (32) %r12044
	lsr.32      %r12046 <- %r12045, $23
	and.32      %r12047 <- %r12046, $511
	cast.32     %r12048 <- (32) %r12047
	scast.32    %r12049 <- (32) %r12048
	and.32      %r12050 <- %r12049, $0xfffffeff
	scast.64    %r12051 <- (32) %r12050
	muls.64     %r12052 <- %r12051, $16
	add.64*     %r12053 <- %r12043, %r12052
	phisrc.64*  %phi509 <- %r12053
	br          .L2745

.L2744:
	load.64*    %r12054 <- 0[base]
	load.32     %r12055 <- 0[i]
	cast.32     %r12056 <- (32) %r12055
	lsr.32      %r12057 <- %r12056, $23
	and.32      %r12058 <- %r12057, $511
	cast.32     %r12059 <- (32) %r12058
	scast.64    %r12060 <- (32) %r12059
	muls.64     %r12061 <- %r12060, $16
	add.64*     %r12062 <- %r12054, %r12061
	ptrcast.64* %r12063 <- (64) %r12062
	phisrc.64*  %phi510 <- %r12063
	br          .L2745

.L2745:
	phi.64*     %r12064 <- %phi509, %phi510
	load.32     %r12065 <- 0[i]
	cast.32     %r12066 <- (32) %r12065
	lsr.32      %r12067 <- %r12066, $14
	and.32      %r12068 <- %r12067, $511
	cast.32     %r12069 <- (32) %r12068
	and.32      %r12070 <- %r12069, $256
	br          %r12070, .L2746, .L2747

.L2746:
	load.64*    %r12071 <- 0[k]
	load.32     %r12072 <- 0[i]
	cast.32     %r12073 <- (32) %r12072
	lsr.32      %r12074 <- %r12073, $14
	and.32      %r12075 <- %r12074, $511
	cast.32     %r12076 <- (32) %r12075
	scast.32    %r12077 <- (32) %r12076
	and.32      %r12078 <- %r12077, $0xfffffeff
	scast.64    %r12079 <- (32) %r12078
	muls.64     %r12080 <- %r12079, $16
	add.64*     %r12081 <- %r12071, %r12080
	phisrc.64*  %phi511 <- %r12081
	br          .L2748

.L2747:
	load.64*    %r12082 <- 0[base]
	load.32     %r12083 <- 0[i]
	cast.32     %r12084 <- (32) %r12083
	lsr.32      %r12085 <- %r12084, $14
	and.32      %r12086 <- %r12085, $511
	cast.32     %r12087 <- (32) %r12086
	scast.64    %r12088 <- (32) %r12087
	muls.64     %r12089 <- %r12088, $16
	add.64*     %r12090 <- %r12082, %r12089
	ptrcast.64* %r12091 <- (64) %r12090
	phisrc.64*  %phi512 <- %r12091
	br          .L2748

.L2748:
	phi.64*     %r12092 <- %phi511, %phi512
	push.64*    %r12036
	push.64*    %r12064
	push.64*    %r12092
	call.32     %r12093 <- lessequal
	load.32     %r12094 <- 0[i]
	cast.32     %r12095 <- (32) %r12094
	lsr.32      %r12096 <- %r12095, $6
	and.32      %r12097 <- %r12096, $255
	cast.32     %r12098 <- (32) %r12097
	seteq.32    %r12099 <- %r12093, %r12098
	br          %r12099, .L2741, .L2742

.L2741:
	load.64*    %r12100 <- 0[pc]
	load.32     %r12101 <- 0[%r12100]
	cast.32     %r12102 <- (32) %r12101
	lsr.32      %r12103 <- %r12102, $14
	and.32      %r12104 <- %r12103, $0x3ffff
	cast.32     %r12105 <- (32) %r12104
	sub.32      %r12106 <- %r12105, $0x1ffff
	scast.64    %r12107 <- (32) %r12106
	muls.64     %r12108 <- %r12107, $4
	load.64*    %r12109 <- 0[pc]
	cast.64     %r12110 <- (64) %r12109
	add.64      %r12111 <- %r12110, %r12108
	ptrcast.64* %r12112 <- (64) %r12111
	store.64*   %r12112 -> 0[pc]
	br          .L2742

.L2742:
	load.64*    %r12113 <- 0[L]
	load.64*    %r12114 <- 24[%r12113]
	store.64*   %r12114 -> 0[base]
	load.64*    %r12115 <- 0[pc]
	add.64*     %r12116 <- %r12115, $4
	store.64*   %r12116 -> 0[pc]
	br          .L2580

.L2610:
	load.64*    %r12117 <- 0[ra]
	load.32     %r12118 <- 8[%r12117]
	seteq.32    %r12119 <- %r12118, $0
	br          %r12119, .L2751, .L2752

.L2751:
	phisrc.32   %phi513 <- $1
	br          .L2753

.L2752:
	load.64*    %r12120 <- 0[ra]
	load.32     %r12121 <- 8[%r12120]
	seteq.32    %r12122 <- %r12121, $1
	br          %r12122, .L2754, .L2755

.L2754:
	load.64*    %r12123 <- 0[ra]
	load.32     %r12124 <- 0[%r12123]
	seteq.32    %r12125 <- %r12124, $0
	phisrc.32   %phi514 <- %r12125
	br          .L2756

.L2755:
	phisrc.32   %phi515 <- $0
	br          .L2756

.L2756:
	phi.32      %r12126 <- %phi514, %phi515
	phisrc.32   %phi516 <- %r12126
	br          .L2753

.L2753:
	phi.32      %r12127 <- %phi513, %phi516
	load.32     %r12128 <- 0[i]
	cast.32     %r12129 <- (32) %r12128
	lsr.32      %r12130 <- %r12129, $14
	and.32      %r12131 <- %r12130, $511
	cast.32     %r12132 <- (32) %r12131
	setne.32    %r12133 <- %r12127, %r12132
	br          %r12133, .L2749, .L2750

.L2749:
	load.64*    %r12134 <- 0[pc]
	load.32     %r12135 <- 0[%r12134]
	cast.32     %r12136 <- (32) %r12135
	lsr.32      %r12137 <- %r12136, $14
	and.32      %r12138 <- %r12137, $0x3ffff
	cast.32     %r12139 <- (32) %r12138
	sub.32      %r12140 <- %r12139, $0x1ffff
	scast.64    %r12141 <- (32) %r12140
	muls.64     %r12142 <- %r12141, $4
	load.64*    %r12143 <- 0[pc]
	cast.64     %r12144 <- (64) %r12143
	add.64      %r12145 <- %r12144, %r12142
	ptrcast.64* %r12146 <- (64) %r12145
	store.64*   %r12146 -> 0[pc]
	br          .L2750

.L2750:
	load.64*    %r12147 <- 0[pc]
	add.64*     %r12148 <- %r12147, $4
	store.64*   %r12148 -> 0[pc]
	br          .L2580

.L2611:
	load.64*    %r12149 <- 0[base]
	load.32     %r12150 <- 0[i]
	cast.32     %r12151 <- (32) %r12150
	lsr.32      %r12152 <- %r12151, $23
	and.32      %r12153 <- %r12152, $511
	cast.32     %r12154 <- (32) %r12153
	scast.64    %r12155 <- (32) %r12154
	muls.64     %r12156 <- %r12155, $16
	add.64*     %r12157 <- %r12149, %r12156
	store.64*   %r12157 -> 0[rb]
	load.64*    %r12158 <- 0[rb]
	load.32     %r12159 <- 8[%r12158]
	seteq.32    %r12160 <- %r12159, $0
	br          %r12160, .L2759, .L2760

.L2759:
	phisrc.32   %phi517 <- $1
	br          .L2761

.L2760:
	load.64*    %r12161 <- 0[rb]
	load.32     %r12162 <- 8[%r12161]
	seteq.32    %r12163 <- %r12162, $1
	br          %r12163, .L2762, .L2763

.L2762:
	load.64*    %r12164 <- 0[rb]
	load.32     %r12165 <- 0[%r12164]
	seteq.32    %r12166 <- %r12165, $0
	phisrc.32   %phi518 <- %r12166
	br          .L2764

.L2763:
	phisrc.32   %phi519 <- $0
	br          .L2764

.L2764:
	phi.32      %r12167 <- %phi518, %phi519
	phisrc.32   %phi520 <- %r12167
	br          .L2761

.L2761:
	phi.32      %r12168 <- %phi517, %phi520
	load.32     %r12169 <- 0[i]
	cast.32     %r12170 <- (32) %r12169
	lsr.32      %r12171 <- %r12170, $14
	and.32      %r12172 <- %r12171, $511
	cast.32     %r12173 <- (32) %r12172
	setne.32    %r12174 <- %r12168, %r12173
	br          %r12174, .L2757, .L2758

.L2757:
	load.64*    %r12175 <- 0[rb]
	store.64*   %r12175 -> 0[o2]
	load.64*    %r12176 <- 0[ra]
	store.64*   %r12176 -> 0[o1]
	load.64*    %r12177 <- 0[o2]
	load.f64    %r12178 <- 0[%r12177]
	fpcast.f64  %r12179 <- (64) %r12178
	load.64*    %r12180 <- 0[o1]
	store.f64   %r12179 -> 0[%r12180]
	load.64*    %r12181 <- 0[o2]
	load.32     %r12182 <- 8[%r12181]
	scast.32    %r12183 <- (32) %r12182
	load.64*    %r12184 <- 0[o1]
	store.32    %r12183 -> 8[%r12184]
	load.64*    %r12185 <- 0[pc]
	load.32     %r12186 <- 0[%r12185]
	cast.32     %r12187 <- (32) %r12186
	lsr.32      %r12188 <- %r12187, $14
	and.32      %r12189 <- %r12188, $0x3ffff
	cast.32     %r12190 <- (32) %r12189
	sub.32      %r12191 <- %r12190, $0x1ffff
	scast.64    %r12192 <- (32) %r12191
	muls.64     %r12193 <- %r12192, $4
	load.64*    %r12194 <- 0[pc]
	cast.64     %r12195 <- (64) %r12194
	add.64      %r12196 <- %r12195, %r12193
	ptrcast.64* %r12197 <- (64) %r12196
	store.64*   %r12197 -> 0[pc]
	br          .L2758

.L2758:
	load.64*    %r12198 <- 0[pc]
	add.64*     %r12199 <- %r12198, $4
	store.64*   %r12199 -> 0[pc]
	br          .L2580

.L2612:
	load.32     %r12200 <- 0[i]
	cast.32     %r12201 <- (32) %r12200
	lsr.32      %r12202 <- %r12201, $23
	and.32      %r12203 <- %r12202, $511
	cast.32     %r12204 <- (32) %r12203
	store.32    %r12204 -> 0[b]
	load.32     %r12205 <- 0[i]
	cast.32     %r12206 <- (32) %r12205
	lsr.32      %r12207 <- %r12206, $14
	and.32      %r12208 <- %r12207, $511
	cast.32     %r12209 <- (32) %r12208
	sub.32      %r12210 <- %r12209, $1
	store.32    %r12210 -> 0[nresults]
	load.32     %r12211 <- 0[b]
	setne.32    %r12212 <- %r12211, $0
	br          %r12212, .L2765, .L2766

.L2765:
	load.64*    %r12213 <- 0[ra]
	load.32     %r12214 <- 0[b]
	scast.64    %r12215 <- (32) %r12214
	muls.64     %r12216 <- %r12215, $16
	add.64*     %r12217 <- %r12213, %r12216
	load.64*    %r12218 <- 0[L]
	store.64*   %r12217 -> 16[%r12218]
	br          .L2766

.L2766:
	load.64*    %r12219 <- 0[pc]
	load.64*    %r12220 <- 0[L]
	store.64*   %r12219 -> 48[%r12220]
	load.64*    %r12221 <- 0[L]
	load.64*    %r12222 <- 0[ra]
	load.32     %r12223 <- 0[nresults]
	push.64*    %r12221
	push.64*    %r12222
	push.32     %r12223
	call.32     %r12224 <- luaD_precall
	switch.32   %r12224, 0 -> .L2768, 1 -> .L2769, default -> .L2770

.L2768:
	load.32     %r12225 <- 0[nexeccalls]
	add.32      %r12226 <- %r12225, $1
	store.32    %r12226 -> 0[nexeccalls]
	br          .L2578

.L2769:
	load.32     %r12227 <- 0[nresults]
	setge.32    %r12228 <- %r12227, $0
	br          %r12228, .L2771, .L2772

.L2771:
	load.64*    %r12229 <- 0[L]
	load.64*    %r12230 <- 40[%r12229]
	load.64*    %r12231 <- 16[%r12230]
	load.64*    %r12232 <- 0[L]
	store.64*   %r12231 -> 16[%r12232]
	br          .L2772

.L2772:
	load.64*    %r12233 <- 0[L]
	load.64*    %r12234 <- 24[%r12233]
	store.64*   %r12234 -> 0[base]
	br          .L2580

.L2770:
	br          .L2773

.L2613:
	load.32     %r12235 <- 0[i]
	cast.32     %r12236 <- (32) %r12235
	lsr.32      %r12237 <- %r12236, $23
	and.32      %r12238 <- %r12237, $511
	cast.32     %r12239 <- (32) %r12238
	store.32    %r12239 -> 0[b]
	load.32     %r12240 <- 0[b]
	setne.32    %r12241 <- %r12240, $0
	br          %r12241, .L2774, .L2775

.L2774:
	load.64*    %r12242 <- 0[ra]
	load.32     %r12243 <- 0[b]
	scast.64    %r12244 <- (32) %r12243
	muls.64     %r12245 <- %r12244, $16
	add.64*     %r12246 <- %r12242, %r12245
	load.64*    %r12247 <- 0[L]
	store.64*   %r12246 -> 16[%r12247]
	br          .L2775

.L2775:
	load.64*    %r12248 <- 0[pc]
	load.64*    %r12249 <- 0[L]
	store.64*   %r12248 -> 48[%r12249]
	load.64*    %r12250 <- 0[L]
	load.64*    %r12251 <- 0[ra]
	push.64*    %r12250
	push.64*    %r12251
	push.32     $0xffffffff
	call.32     %r12252 <- luaD_precall
	switch.32   %r12252, 0 -> .L2777, 1 -> .L2778, default -> .L2779

.L2777:
	load.64*    %r12253 <- 0[L]
	load.64*    %r12254 <- 40[%r12253]
	sub.64*     %r12255 <- %r12254, $40
	store.64*   %r12255 -> 0[ci]
	load.64*    %r12256 <- 0[ci]
	load.64*    %r12257 <- 8[%r12256]
	store.64*   %r12257 -> 0[func]
	load.64*    %r12258 <- 0[ci]
	load.64*    %r12259 <- 48[%r12258]
	store.64*   %r12259 -> 0[pfunc]
	load.64*    %r12260 <- 0[L]
	load.64*    %r12261 <- 152[%r12260]
	br          %r12261, .L2780, .L2781

.L2780:
	load.64*    %r12262 <- 0[L]
	load.64*    %r12263 <- 0[ci]
	load.64*    %r12264 <- 0[%r12263]
	push.64*    %r12262
	push.64*    %r12264
	call        luaF_close
	br          .L2781

.L2781:
	load.64*    %r12265 <- 0[ci]
	load.64*    %r12266 <- 8[%r12265]
	load.64*    %r12267 <- 0[ci]
	load.64*    %r12268 <- 40[%r12267]
	load.64*    %r12269 <- 0[pfunc]
	sub.64      %r12270 <- %r12268, %r12269
	divs.64     %r12271 <- %r12270, $16
	muls.64     %r12272 <- %r12271, $16
	add.64*     %r12273 <- %r12266, %r12272
	load.64*    %r12274 <- 0[ci]
	store.64*   %r12273 -> 0[%r12274]
	load.64*    %r12275 <- 0[L]
	store.64*   %r12273 -> 24[%r12275]
	store.32    $0 -> 0[aux]
	br          .L2785

.L2785:
	load.64*    %r12276 <- 0[pfunc]
	load.32     %r12277 <- 0[aux]
	scast.64    %r12278 <- (32) %r12277
	muls.64     %r12279 <- %r12278, $16
	add.64*     %r12280 <- %r12276, %r12279
	load.64*    %r12281 <- 0[L]
	load.64*    %r12282 <- 16[%r12281]
	setb.32     %r12283 <- %r12280, %r12282
	br          %r12283, .L2782, .L2784

.L2782:
	load.64*    %r12284 <- 0[pfunc]
	load.32     %r12285 <- 0[aux]
	scast.64    %r12286 <- (32) %r12285
	muls.64     %r12287 <- %r12286, $16
	add.64*     %r12288 <- %r12284, %r12287
	store.64*   %r12288 -> 0[o2]
	load.64*    %r12289 <- 0[func]
	load.32     %r12290 <- 0[aux]
	scast.64    %r12291 <- (32) %r12290
	muls.64     %r12292 <- %r12291, $16
	add.64*     %r12293 <- %r12289, %r12292
	store.64*   %r12293 -> 0[o1]
	load.64*    %r12294 <- 0[o2]
	load.f64    %r12295 <- 0[%r12294]
	fpcast.f64  %r12296 <- (64) %r12295
	load.64*    %r12297 <- 0[o1]
	store.f64   %r12296 -> 0[%r12297]
	load.64*    %r12298 <- 0[o2]
	load.32     %r12299 <- 8[%r12298]
	scast.32    %r12300 <- (32) %r12299
	load.64*    %r12301 <- 0[o1]
	store.32    %r12300 -> 8[%r12301]
	br          .L2783

.L2783:
	load.32     %r12302 <- 0[aux]
	add.32      %r12303 <- %r12302, $1
	store.32    %r12303 -> 0[aux]
	br          .L2785

.L2784:
	load.64*    %r12304 <- 0[func]
	load.32     %r12305 <- 0[aux]
	scast.64    %r12306 <- (32) %r12305
	muls.64     %r12307 <- %r12306, $16
	add.64*     %r12308 <- %r12304, %r12307
	load.64*    %r12309 <- 0[L]
	store.64*   %r12308 -> 16[%r12309]
	load.64*    %r12310 <- 0[ci]
	store.64*   %r12308 -> 16[%r12310]
	load.64*    %r12311 <- 0[L]
	load.64*    %r12312 <- 48[%r12311]
	load.64*    %r12313 <- 0[ci]
	store.64*   %r12312 -> 24[%r12313]
	load.64*    %r12314 <- 0[ci]
	load.32     %r12315 <- 36[%r12314]
	add.32      %r12316 <- %r12315, $1
	store.32    %r12316 -> 36[%r12314]
	load.64*    %r12317 <- 0[L]
	load.64*    %r12318 <- 40[%r12317]
	sub.64*     %r12319 <- %r12318, $40
	store.64*   %r12319 -> 40[%r12317]
	br          .L2578

.L2778:
	load.64*    %r12320 <- 0[L]
	load.64*    %r12321 <- 24[%r12320]
	store.64*   %r12321 -> 0[base]
	br          .L2580

.L2779:
	br          .L2773

.L2614:
	load.32     %r12322 <- 0[i]
	cast.32     %r12323 <- (32) %r12322
	lsr.32      %r12324 <- %r12323, $23
	and.32      %r12325 <- %r12324, $511
	cast.32     %r12326 <- (32) %r12325
	store.32    %r12326 -> 0[b]
	load.32     %r12327 <- 0[b]
	setne.32    %r12328 <- %r12327, $0
	br          %r12328, .L2786, .L2787

.L2786:
	load.64*    %r12329 <- 0[ra]
	load.32     %r12330 <- 0[b]
	scast.64    %r12331 <- (32) %r12330
	muls.64     %r12332 <- %r12331, $16
	add.64*     %r12333 <- %r12329, %r12332
	sub.64*     %r12334 <- %r12333, $16
	load.64*    %r12335 <- 0[L]
	store.64*   %r12334 -> 16[%r12335]
	br          .L2787

.L2787:
	load.64*    %r12336 <- 0[L]
	load.64*    %r12337 <- 152[%r12336]
	br          %r12337, .L2788, .L2789

.L2788:
	load.64*    %r12338 <- 0[L]
	load.64*    %r12339 <- 0[base]
	push.64*    %r12338
	push.64*    %r12339
	call        luaF_close
	br          .L2789

.L2789:
	load.64*    %r12340 <- 0[pc]
	load.64*    %r12341 <- 0[L]
	store.64*   %r12340 -> 48[%r12341]
	load.64*    %r12342 <- 0[L]
	load.64*    %r12343 <- 0[ra]
	push.64*    %r12342
	push.64*    %r12343
	call.32     %r12344 <- luaD_poscall
	store.32    %r12344 -> 0[b]
	load.32     %r12345 <- 0[nexeccalls]
	sub.32      %r12346 <- %r12345, $1
	store.32    %r12346 -> 0[nexeccalls]
	seteq.32    %r12347 <- %r12346, $0
	br          %r12347, .L2790, .L2791

.L2790:
	br          .L2773

.L2791:
	load.32     %r12348 <- 0[b]
	br          %r12348, .L2793, .L2794

.L2793:
	load.64*    %r12349 <- 0[L]
	load.64*    %r12350 <- 40[%r12349]
	load.64*    %r12351 <- 16[%r12350]
	load.64*    %r12352 <- 0[L]
	store.64*   %r12351 -> 16[%r12352]
	br          .L2794

.L2794:
	br          .L2578

.L2615:
	load.64*    %r12353 <- 0[ra]
	load.f64    %r12354 <- 32[%r12353]
	store.f64   %r12354 -> 0[step]
	load.64*    %r12355 <- 0[ra]
	load.f64    %r12356 <- 0[%r12355]
	load.f64    %r12357 <- 0[step]
	add.f64     %r12358 <- %r12356, %r12357
	store.f64   %r12358 -> 0[idx]
	load.64*    %r12359 <- 0[ra]
	load.f64    %r12360 <- 16[%r12359]
	store.f64   %r12360 -> 0[limit]
	load.f64    %r12361 <- 0[idx]
	load.f64    %r12362 <- 0[limit]
	setle.32    %r12363 <- %r12361, %r12362
	load.f64    %r12364 <- 0[limit]
	load.f64    %r12365 <- 0[idx]
	setle.32    %r12366 <- %r12364, %r12365
	set.f64     %r12367 <- 0.000000
	load.f64    %r12368 <- 0[step]
	setlt.32    %r12369 <- %r12367, %r12368
	select.32   %r12370 <- %r12369, %r12363, %r12366
	br          %r12370, .L2795, .L2796

.L2795:
	load.32     %r12371 <- 0[i]
	cast.32     %r12372 <- (32) %r12371
	lsr.32      %r12373 <- %r12372, $14
	and.32      %r12374 <- %r12373, $0x3ffff
	cast.32     %r12375 <- (32) %r12374
	sub.32      %r12376 <- %r12375, $0x1ffff
	scast.64    %r12377 <- (32) %r12376
	muls.64     %r12378 <- %r12377, $4
	load.64*    %r12379 <- 0[pc]
	cast.64     %r12380 <- (64) %r12379
	add.64      %r12381 <- %r12380, %r12378
	ptrcast.64* %r12382 <- (64) %r12381
	store.64*   %r12382 -> 0[pc]
	load.64*    %r12383 <- 0[ra]
	store.64*   %r12383 -> 0[i_o]
	load.f64    %r12384 <- 0[idx]
	load.64*    %r12385 <- 0[i_o]
	store.f64   %r12384 -> 0[%r12385]
	load.64*    %r12386 <- 0[i_o]
	store.32    $3 -> 8[%r12386]
	load.64*    %r12387 <- 0[ra]
	add.64*     %r12388 <- %r12387, $48
	store.64*   %r12388 -> 0[i_o]
	load.f64    %r12389 <- 0[idx]
	load.64*    %r12390 <- 0[i_o]
	store.f64   %r12389 -> 0[%r12390]
	load.64*    %r12391 <- 0[i_o]
	store.32    $3 -> 8[%r12391]
	br          .L2796

.L2796:
	br          .L2580

.L2616:
	load.64*    %r12392 <- 0[ra]
	store.64*   %r12392 -> 0[init]
	load.64*    %r12393 <- 0[ra]
	add.64*     %r12394 <- %r12393, $16
	store.64*   %r12394 -> 0[plimit]
	load.64*    %r12395 <- 0[ra]
	add.64*     %r12396 <- %r12395, $32
	store.64*   %r12396 -> 0[pstep]
	load.64*    %r12397 <- 0[pc]
	load.64*    %r12398 <- 0[L]
	store.64*   %r12397 -> 48[%r12398]
	load.64*    %r12399 <- 0[init]
	load.32     %r12400 <- 8[%r12399]
	scast.32    %r12401 <- (32) %r12400
	seteq.32    %r12402 <- %r12401, $3
	br          %r12402, .L2798, .L2799

.L2799:
	load.64*    %r12403 <- 0[init]
	load.64*    %r12404 <- 0[ra]
	push.64*    %r12403
	push.64*    %r12404
	call.64*    %r12405 <- luaV_tonumber
	store.64*   %r12405 -> 0[init]
	setne.32    %r12406 <- %r12405, $0
	br          %r12406, .L2798, .L2797

.L2797:
	load.64*    %r12407 <- 0[L]
	symaddr.64* %r12408 <- <anon symbol:0x62d00112d560>
	push.64*    %r12407
	push.64*    %r12408
	call        luaG_runerror
	br          .L2800

.L2798:
	load.64*    %r12409 <- 0[plimit]
	load.32     %r12410 <- 8[%r12409]
	scast.32    %r12411 <- (32) %r12410
	seteq.32    %r12412 <- %r12411, $3
	br          %r12412, .L2802, .L2803

.L2803:
	load.64*    %r12413 <- 0[plimit]
	load.64*    %r12414 <- 0[ra]
	add.64*     %r12415 <- %r12414, $16
	push.64*    %r12413
	push.64*    %r12415
	call.64*    %r12416 <- luaV_tonumber
	store.64*   %r12416 -> 0[plimit]
	setne.32    %r12417 <- %r12416, $0
	br          %r12417, .L2802, .L2801

.L2801:
	load.64*    %r12418 <- 0[L]
	symaddr.64* %r12419 <- <anon symbol:0x62d00112dad0>
	push.64*    %r12418
	push.64*    %r12419
	call        luaG_runerror
	br          .L2804

.L2802:
	load.64*    %r12420 <- 0[pstep]
	load.32     %r12421 <- 8[%r12420]
	scast.32    %r12422 <- (32) %r12421
	seteq.32    %r12423 <- %r12422, $3
	br          %r12423, .L2806, .L2807

.L2807:
	load.64*    %r12424 <- 0[pstep]
	load.64*    %r12425 <- 0[ra]
	add.64*     %r12426 <- %r12425, $32
	push.64*    %r12424
	push.64*    %r12426
	call.64*    %r12427 <- luaV_tonumber
	store.64*   %r12427 -> 0[pstep]
	setne.32    %r12428 <- %r12427, $0
	br          %r12428, .L2806, .L2805

.L2805:
	load.64*    %r12429 <- 0[L]
	symaddr.64* %r12430 <- <anon symbol:0x62d00112e040>
	push.64*    %r12429
	push.64*    %r12430
	call        luaG_runerror
	br          .L2806

.L2806:
	br          .L2804

.L2804:
	br          .L2800

.L2800:
	load.64*    %r12431 <- 0[ra]
	store.64*   %r12431 -> 0[i_o]
	load.64*    %r12432 <- 0[ra]
	load.f64    %r12433 <- 0[%r12432]
	load.64*    %r12434 <- 0[pstep]
	load.f64    %r12435 <- 0[%r12434]
	fpcast.f64  %r12436 <- (64) %r12435
	sub.f64     %r12437 <- %r12433, %r12436
	load.64*    %r12438 <- 0[i_o]
	store.f64   %r12437 -> 0[%r12438]
	load.64*    %r12439 <- 0[i_o]
	store.32    $3 -> 8[%r12439]
	load.32     %r12440 <- 0[i]
	cast.32     %r12441 <- (32) %r12440
	lsr.32      %r12442 <- %r12441, $14
	and.32      %r12443 <- %r12442, $0x3ffff
	cast.32     %r12444 <- (32) %r12443
	sub.32      %r12445 <- %r12444, $0x1ffff
	scast.64    %r12446 <- (32) %r12445
	muls.64     %r12447 <- %r12446, $4
	load.64*    %r12448 <- 0[pc]
	cast.64     %r12449 <- (64) %r12448
	add.64      %r12450 <- %r12449, %r12447
	ptrcast.64* %r12451 <- (64) %r12450
	store.64*   %r12451 -> 0[pc]
	br          .L2580

.L2617:
	load.64*    %r12452 <- 0[ra]
	add.64*     %r12453 <- %r12452, $48
	store.64*   %r12453 -> 0[cb]
	load.64*    %r12454 <- 0[ra]
	add.64*     %r12455 <- %r12454, $32
	store.64*   %r12455 -> 0[o2]
	load.64*    %r12456 <- 0[cb]
	add.64*     %r12457 <- %r12456, $32
	store.64*   %r12457 -> 0[o1]
	load.64*    %r12458 <- 0[o2]
	load.f64    %r12459 <- 0[%r12458]
	fpcast.f64  %r12460 <- (64) %r12459
	load.64*    %r12461 <- 0[o1]
	store.f64   %r12460 -> 0[%r12461]
	load.64*    %r12462 <- 0[o2]
	load.32     %r12463 <- 8[%r12462]
	scast.32    %r12464 <- (32) %r12463
	load.64*    %r12465 <- 0[o1]
	store.32    %r12464 -> 8[%r12465]
	load.64*    %r12466 <- 0[ra]
	add.64*     %r12467 <- %r12466, $16
	store.64*   %r12467 -> 0[o2]
	load.64*    %r12468 <- 0[cb]
	add.64*     %r12469 <- %r12468, $16
	store.64*   %r12469 -> 0[o1]
	load.64*    %r12470 <- 0[o2]
	load.f64    %r12471 <- 0[%r12470]
	fpcast.f64  %r12472 <- (64) %r12471
	load.64*    %r12473 <- 0[o1]
	store.f64   %r12472 -> 0[%r12473]
	load.64*    %r12474 <- 0[o2]
	load.32     %r12475 <- 8[%r12474]
	scast.32    %r12476 <- (32) %r12475
	load.64*    %r12477 <- 0[o1]
	store.32    %r12476 -> 8[%r12477]
	load.64*    %r12478 <- 0[ra]
	store.64*   %r12478 -> 0[o2]
	load.64*    %r12479 <- 0[cb]
	store.64*   %r12479 -> 0[o1]
	load.64*    %r12480 <- 0[o2]
	load.f64    %r12481 <- 0[%r12480]
	fpcast.f64  %r12482 <- (64) %r12481
	load.64*    %r12483 <- 0[o1]
	store.f64   %r12482 -> 0[%r12483]
	load.64*    %r12484 <- 0[o2]
	load.32     %r12485 <- 8[%r12484]
	scast.32    %r12486 <- (32) %r12485
	load.64*    %r12487 <- 0[o1]
	store.32    %r12486 -> 8[%r12487]
	load.64*    %r12488 <- 0[cb]
	add.64*     %r12489 <- %r12488, $48
	load.64*    %r12490 <- 0[L]
	store.64*   %r12489 -> 16[%r12490]
	load.64*    %r12491 <- 0[pc]
	load.64*    %r12492 <- 0[L]
	store.64*   %r12491 -> 48[%r12492]
	load.64*    %r12493 <- 0[L]
	load.64*    %r12494 <- 0[cb]
	load.32     %r12495 <- 0[i]
	cast.32     %r12496 <- (32) %r12495
	lsr.32      %r12497 <- %r12496, $14
	and.32      %r12498 <- %r12497, $511
	cast.32     %r12499 <- (32) %r12498
	push.64*    %r12493
	push.64*    %r12494
	push.32     %r12499
	call        luaD_call
	load.64*    %r12500 <- 0[L]
	load.64*    %r12501 <- 24[%r12500]
	store.64*   %r12501 -> 0[base]
	load.64*    %r12502 <- 0[L]
	load.64*    %r12503 <- 40[%r12502]
	load.64*    %r12504 <- 16[%r12503]
	load.64*    %r12505 <- 0[L]
	store.64*   %r12504 -> 16[%r12505]
	load.64*    %r12506 <- 0[base]
	load.32     %r12507 <- 0[i]
	cast.32     %r12508 <- (32) %r12507
	lsr.32      %r12509 <- %r12508, $6
	and.32      %r12510 <- %r12509, $255
	cast.32     %r12511 <- (32) %r12510
	scast.64    %r12512 <- (32) %r12511
	muls.64     %r12513 <- %r12512, $16
	add.64*     %r12514 <- %r12506, %r12513
	add.64*     %r12515 <- %r12514, $48
	store.64*   %r12515 -> 0[cb]
	load.64*    %r12516 <- 0[cb]
	load.32     %r12517 <- 8[%r12516]
	seteq.32    %r12518 <- %r12517, $0
	br          %r12518, .L2809, .L2808

.L2808:
	load.64*    %r12519 <- 0[cb]
	store.64*   %r12519 -> 0[o2]
	load.64*    %r12520 <- 0[cb]
	sub.64*     %r12521 <- %r12520, $16
	store.64*   %r12521 -> 0[o1]
	load.64*    %r12522 <- 0[o2]
	load.f64    %r12523 <- 0[%r12522]
	fpcast.f64  %r12524 <- (64) %r12523
	load.64*    %r12525 <- 0[o1]
	store.f64   %r12524 -> 0[%r12525]
	load.64*    %r12526 <- 0[o2]
	load.32     %r12527 <- 8[%r12526]
	scast.32    %r12528 <- (32) %r12527
	load.64*    %r12529 <- 0[o1]
	store.32    %r12528 -> 8[%r12529]
	load.64*    %r12530 <- 0[pc]
	load.32     %r12531 <- 0[%r12530]
	cast.32     %r12532 <- (32) %r12531
	lsr.32      %r12533 <- %r12532, $14
	and.32      %r12534 <- %r12533, $0x3ffff
	cast.32     %r12535 <- (32) %r12534
	sub.32      %r12536 <- %r12535, $0x1ffff
	scast.64    %r12537 <- (32) %r12536
	muls.64     %r12538 <- %r12537, $4
	load.64*    %r12539 <- 0[pc]
	cast.64     %r12540 <- (64) %r12539
	add.64      %r12541 <- %r12540, %r12538
	ptrcast.64* %r12542 <- (64) %r12541
	store.64*   %r12542 -> 0[pc]
	br          .L2809

.L2809:
	load.64*    %r12543 <- 0[pc]
	add.64*     %r12544 <- %r12543, $4
	store.64*   %r12544 -> 0[pc]
	br          .L2580

.L2618:
	load.32     %r12545 <- 0[i]
	cast.32     %r12546 <- (32) %r12545
	lsr.32      %r12547 <- %r12546, $23
	and.32      %r12548 <- %r12547, $511
	cast.32     %r12549 <- (32) %r12548
	store.32    %r12549 -> 0[n]
	load.32     %r12550 <- 0[i]
	cast.32     %r12551 <- (32) %r12550
	lsr.32      %r12552 <- %r12551, $14
	and.32      %r12553 <- %r12552, $511
	cast.32     %r12554 <- (32) %r12553
	store.32    %r12554 -> 0[c]
	load.32     %r12555 <- 0[n]
	seteq.32    %r12556 <- %r12555, $0
	br          %r12556, .L2810, .L2811

.L2810:
	load.64*    %r12557 <- 0[L]
	load.64*    %r12558 <- 16[%r12557]
	load.64*    %r12559 <- 0[ra]
	sub.64      %r12560 <- %r12558, %r12559
	divs.64     %r12561 <- %r12560, $16
	scast.32    %r12562 <- (64) %r12561
	sub.32      %r12563 <- %r12562, $1
	store.32    %r12563 -> 0[n]
	load.64*    %r12564 <- 0[L]
	load.64*    %r12565 <- 40[%r12564]
	load.64*    %r12566 <- 16[%r12565]
	load.64*    %r12567 <- 0[L]
	store.64*   %r12566 -> 16[%r12567]
	br          .L2811

.L2811:
	load.32     %r12568 <- 0[c]
	seteq.32    %r12569 <- %r12568, $0
	br          %r12569, .L2812, .L2813

.L2812:
	load.64*    %r12570 <- 0[pc]
	add.64*     %r12571 <- %r12570, $4
	store.64*   %r12571 -> 0[pc]
	load.32     %r12572 <- 0[%r12570]
	cast.32     %r12573 <- (32) %r12572
	store.32    %r12573 -> 0[c]
	br          .L2813

.L2813:
	load.64*    %r12574 <- 0[ra]
	load.32     %r12575 <- 8[%r12574]
	seteq.32    %r12576 <- %r12575, $5
	br          %r12576, .L2815, .L2814

.L2814:
	br          .L2583

.L2815:
	load.64*    %r12577 <- 0[ra]
	load.64*    %r12578 <- 0[%r12577]
	add.64*     %r12579 <- %r12578, $0
	store.64*   %r12579 -> 0[h]
	load.32     %r12580 <- 0[c]
	sub.32      %r12581 <- %r12580, $1
	muls.32     %r12582 <- %r12581, $50
	load.32     %r12583 <- 0[n]
	add.32      %r12584 <- %r12582, %r12583
	store.32    %r12584 -> 0[last]
	load.32     %r12585 <- 0[last]
	load.64*    %r12586 <- 0[h]
	load.32     %r12587 <- 56[%r12586]
	setgt.32    %r12588 <- %r12585, %r12587
	br          %r12588, .L2816, .L2817

.L2816:
	load.64*    %r12589 <- 0[L]
	load.64*    %r12590 <- 0[h]
	load.32     %r12591 <- 0[last]
	push.64*    %r12589
	push.64*    %r12590
	push.32     %r12591
	call        luaH_resizearray
	br          .L2817

.L2817:
	br          .L2821

.L2821:
	load.32     %r12592 <- 0[n]
	setgt.32    %r12593 <- %r12592, $0
	br          %r12593, .L2818, .L2820

.L2818:
	load.64*    %r12594 <- 0[ra]
	load.32     %r12595 <- 0[n]
	scast.64    %r12596 <- (32) %r12595
	muls.64     %r12597 <- %r12596, $16
	add.64*     %r12598 <- %r12594, %r12597
	store.64*   %r12598 -> 0[val]
	load.64*    %r12599 <- 0[val]
	store.64*   %r12599 -> 0[o2]
	load.64*    %r12600 <- 0[L]
	load.64*    %r12601 <- 0[h]
	load.32     %r12602 <- 0[last]
	sub.32      %r12603 <- %r12602, $1
	store.32    %r12603 -> 0[last]
	push.64*    %r12600
	push.64*    %r12601
	push.32     %r12602
	call.64*    %r12604 <- luaH_setnum
	store.64*   %r12604 -> 0[o1]
	load.64*    %r12605 <- 0[o2]
	load.f64    %r12606 <- 0[%r12605]
	fpcast.f64  %r12607 <- (64) %r12606
	load.64*    %r12608 <- 0[o1]
	store.f64   %r12607 -> 0[%r12608]
	load.64*    %r12609 <- 0[o2]
	load.32     %r12610 <- 8[%r12609]
	scast.32    %r12611 <- (32) %r12610
	load.64*    %r12612 <- 0[o1]
	store.32    %r12611 -> 8[%r12612]
	load.64*    %r12613 <- 0[val]
	load.32     %r12614 <- 8[%r12613]
	setge.32    %r12615 <- %r12614, $4
	br          %r12615, .L2825, .L2823

.L2825:
	load.64*    %r12616 <- 0[val]
	load.64*    %r12617 <- 0[%r12616]
	load.8      %r12618 <- 9[%r12617]
	cast.32     %r12619 <- (8) %r12618
	and.32      %r12620 <- %r12619, $3
	br          %r12620, .L2824, .L2823

.L2824:
	load.64*    %r12621 <- 0[h]
	ptrcast.64* %r12622 <- (64) %r12621
	load.8      %r12623 <- 9[%r12622]
	cast.32     %r12624 <- (8) %r12623
	and.32      %r12625 <- %r12624, $4
	br          %r12625, .L2822, .L2823

.L2822:
	load.64*    %r12626 <- 0[L]
	load.64*    %r12627 <- 0[h]
	push.64*    %r12626
	push.64*    %r12627
	call        luaC_barrierback
	br          .L2823

.L2823:
	br          .L2819

.L2819:
	load.32     %r12628 <- 0[n]
	sub.32      %r12629 <- %r12628, $1
	store.32    %r12629 -> 0[n]
	br          .L2821

.L2820:
	br          .L2580

.L2619:
	load.64*    %r12630 <- 0[L]
	load.64*    %r12631 <- 0[ra]
	push.64*    %r12630
	push.64*    %r12631
	call        luaF_close
	br          .L2580

.L2620:
	load.64*    %r12632 <- 0[cl]
	load.64*    %r12633 <- 32[%r12632]
	load.64*    %r12634 <- 32[%r12633]
	load.32     %r12635 <- 0[i]
	cast.32     %r12636 <- (32) %r12635
	lsr.32      %r12637 <- %r12636, $14
	and.32      %r12638 <- %r12637, $0x3ffff
	cast.32     %r12639 <- (32) %r12638
	scast.64    %r12640 <- (32) %r12639
	muls.64     %r12641 <- %r12640, $8
	add.64*     %r12642 <- %r12634, %r12641
	load.64*    %r12643 <- 0[%r12642]
	store.64*   %r12643 -> 0[p]
	load.64*    %r12644 <- 0[p]
	load.8      %r12645 <- 112[%r12644]
	cast.32     %r12646 <- (8) %r12645
	store.32    %r12646 -> 0[nup]
	load.64*    %r12647 <- 0[L]
	load.32     %r12648 <- 0[nup]
	load.64*    %r12649 <- 0[cl]
	load.64*    %r12650 <- 24[%r12649]
	push.64*    %r12647
	push.32     %r12648
	push.64*    %r12650
	call.64*    %r12651 <- luaF_newLclosure
	store.64*   %r12651 -> 0[ncl]
	load.64*    %r12652 <- 0[p]
	load.64*    %r12653 <- 0[ncl]
	store.64*   %r12652 -> 32[%r12653]
	store.32    $0 -> 0[j]
	br          .L2829

.L2829:
	load.32     %r12654 <- 0[j]
	load.32     %r12655 <- 0[nup]
	setlt.32    %r12656 <- %r12654, %r12655
	br          %r12656, .L2826, .L2828

.L2826:
	load.64*    %r12657 <- 0[pc]
	load.32     %r12658 <- 0[%r12657]
	cast.32     %r12659 <- (32) %r12658
	lsr.32      %r12660 <- %r12659, $0
	and.32      %r12661 <- %r12660, $63
	cast.32     %r12662 <- (32) %r12661
	scast.32    %r12663 <- (32) %r12662
	seteq.32    %r12664 <- %r12663, $4
	br          %r12664, .L2830, .L2831

.L2830:
	load.64*    %r12665 <- 0[cl]
	add.64*     %r12666 <- %r12665, $40
	load.64*    %r12667 <- 0[pc]
	load.32     %r12668 <- 0[%r12667]
	cast.32     %r12669 <- (32) %r12668
	lsr.32      %r12670 <- %r12669, $23
	and.32      %r12671 <- %r12670, $511
	cast.32     %r12672 <- (32) %r12671
	scast.64    %r12673 <- (32) %r12672
	muls.64     %r12674 <- %r12673, $8
	add.64*     %r12675 <- %r12666, %r12674
	load.64*    %r12676 <- 0[%r12675]
	load.64*    %r12677 <- 0[ncl]
	add.64*     %r12678 <- %r12677, $0
	add.64*     %r12679 <- %r12678, $40
	load.32     %r12680 <- 0[j]
	scast.64    %r12681 <- (32) %r12680
	muls.64     %r12682 <- %r12681, $8
	add.64*     %r12683 <- %r12679, %r12682
	store.64*   %r12676 -> 0[%r12683]
	br          .L2832

.L2831:
	load.64*    %r12684 <- 0[L]
	load.64*    %r12685 <- 0[base]
	load.64*    %r12686 <- 0[pc]
	load.32     %r12687 <- 0[%r12686]
	cast.32     %r12688 <- (32) %r12687
	lsr.32      %r12689 <- %r12688, $23
	and.32      %r12690 <- %r12689, $511
	cast.32     %r12691 <- (32) %r12690
	scast.64    %r12692 <- (32) %r12691
	muls.64     %r12693 <- %r12692, $16
	add.64*     %r12694 <- %r12685, %r12693
	push.64*    %r12684
	push.64*    %r12694
	call.64*    %r12695 <- luaF_findupval
	load.64*    %r12696 <- 0[ncl]
	add.64*     %r12697 <- %r12696, $0
	add.64*     %r12698 <- %r12697, $40
	load.32     %r12699 <- 0[j]
	scast.64    %r12700 <- (32) %r12699
	muls.64     %r12701 <- %r12700, $8
	add.64*     %r12702 <- %r12698, %r12701
	store.64*   %r12695 -> 0[%r12702]
	br          .L2832

.L2832:
	br          .L2827

.L2827:
	load.32     %r12703 <- 0[j]
	add.32      %r12704 <- %r12703, $1
	store.32    %r12704 -> 0[j]
	load.64*    %r12705 <- 0[pc]
	add.64*     %r12706 <- %r12705, $4
	store.64*   %r12706 -> 0[pc]
	br          .L2829

.L2828:
	load.64*    %r12707 <- 0[ra]
	store.64*   %r12707 -> 0[i_o]
	load.64*    %r12708 <- 0[ncl]
	ptrcast.64* %r12709 <- (64) %r12708
	load.64*    %r12710 <- 0[i_o]
	store.64*   %r12709 -> 0[%r12710]
	load.64*    %r12711 <- 0[i_o]
	store.32    $6 -> 8[%r12711]
	load.64*    %r12712 <- 0[pc]
	load.64*    %r12713 <- 0[L]
	store.64*   %r12712 -> 48[%r12713]
	load.64*    %r12714 <- 0[L]
	load.64*    %r12715 <- 32[%r12714]
	load.64     %r12716 <- 120[%r12715]
	load.64*    %r12717 <- 0[L]
	load.64*    %r12718 <- 32[%r12717]
	load.64     %r12719 <- 112[%r12718]
	setae.32    %r12720 <- %r12716, %r12719
	br          %r12720, .L2833, .L2834

.L2833:
	load.64*    %r12721 <- 0[L]
	push.64*    %r12721
	call        luaC_step
	br          .L2834

.L2834:
	load.64*    %r12722 <- 0[L]
	load.64*    %r12723 <- 24[%r12722]
	store.64*   %r12723 -> 0[base]
	br          .L2580

.L2621:
	load.32     %r12724 <- 0[i]
	cast.32     %r12725 <- (32) %r12724
	lsr.32      %r12726 <- %r12725, $23
	and.32      %r12727 <- %r12726, $511
	cast.32     %r12728 <- (32) %r12727
	sub.32      %r12729 <- %r12728, $1
	store.32    %r12729 -> 0[b]
	load.64*    %r12730 <- 0[L]
	load.64*    %r12731 <- 40[%r12730]
	store.64*   %r12731 -> 0[ci]
	load.64*    %r12732 <- 0[ci]
	load.64*    %r12733 <- 0[%r12732]
	load.64*    %r12734 <- 0[ci]
	load.64*    %r12735 <- 8[%r12734]
	sub.64      %r12736 <- %r12733, %r12735
	divs.64     %r12737 <- %r12736, $16
	scast.32    %r12738 <- (64) %r12737
	load.64*    %r12739 <- 0[cl]
	load.64*    %r12740 <- 32[%r12739]
	load.8      %r12741 <- 113[%r12740]
	cast.32     %r12742 <- (8) %r12741
	sub.32      %r12743 <- %r12738, %r12742
	sub.32      %r12744 <- %r12743, $1
	store.32    %r12744 -> 0[n]
	load.32     %r12745 <- 0[b]
	seteq.32    %r12746 <- %r12745, $0xffffffff
	br          %r12746, .L2835, .L2836

.L2835:
	load.64*    %r12747 <- 0[pc]
	load.64*    %r12748 <- 0[L]
	store.64*   %r12747 -> 48[%r12748]
	load.64*    %r12749 <- 0[L]
	load.64*    %r12750 <- 56[%r12749]
	ptrcast.64* %r12751 <- (64) %r12750
	load.64*    %r12752 <- 0[L]
	load.64*    %r12753 <- 16[%r12752]
	ptrcast.64* %r12754 <- (64) %r12753
	sub.64      %r12755 <- %r12751, %r12754
	load.32     %r12756 <- 0[n]
	muls.32     %r12757 <- %r12756, $16
	scast.64    %r12758 <- (32) %r12757
	setle.32    %r12759 <- %r12755, %r12758
	br          %r12759, .L2837, .L2838

.L2837:
	load.64*    %r12760 <- 0[L]
	load.32     %r12761 <- 0[n]
	push.64*    %r12760
	push.32     %r12761
	call        luaD_growstack
	br          .L2839

.L2838:
	br          .L2839

.L2839:
	load.64*    %r12762 <- 0[L]
	load.64*    %r12763 <- 24[%r12762]
	store.64*   %r12763 -> 0[base]
	load.64*    %r12764 <- 0[base]
	load.32     %r12765 <- 0[i]
	cast.32     %r12766 <- (32) %r12765
	lsr.32      %r12767 <- %r12766, $6
	and.32      %r12768 <- %r12767, $255
	cast.32     %r12769 <- (32) %r12768
	scast.64    %r12770 <- (32) %r12769
	muls.64     %r12771 <- %r12770, $16
	add.64*     %r12772 <- %r12764, %r12771
	store.64*   %r12772 -> 0[ra]
	load.32     %r12773 <- 0[n]
	store.32    %r12773 -> 0[b]
	load.64*    %r12774 <- 0[ra]
	load.32     %r12775 <- 0[n]
	scast.64    %r12776 <- (32) %r12775
	muls.64     %r12777 <- %r12776, $16
	add.64*     %r12778 <- %r12774, %r12777
	load.64*    %r12779 <- 0[L]
	store.64*   %r12778 -> 16[%r12779]
	br          .L2836

.L2836:
	store.32    $0 -> 0[j]
	br          .L2843

.L2843:
	load.32     %r12780 <- 0[j]
	load.32     %r12781 <- 0[b]
	setlt.32    %r12782 <- %r12780, %r12781
	br          %r12782, .L2840, .L2842

.L2840:
	load.32     %r12783 <- 0[j]
	load.32     %r12784 <- 0[n]
	setlt.32    %r12785 <- %r12783, %r12784
	br          %r12785, .L2844, .L2845

.L2844:
	load.64*    %r12786 <- 0[ci]
	load.64*    %r12787 <- 0[%r12786]
	load.32     %r12788 <- 0[n]
	scast.64    %r12789 <- (32) %r12788
	muls.64     %r12790 <- %r12789, $16
	sub.64*     %r12791 <- %r12787, %r12790
	load.32     %r12792 <- 0[j]
	scast.64    %r12793 <- (32) %r12792
	muls.64     %r12794 <- %r12793, $16
	add.64*     %r12795 <- %r12791, %r12794
	store.64*   %r12795 -> 0[o2]
	load.64*    %r12796 <- 0[ra]
	load.32     %r12797 <- 0[j]
	scast.64    %r12798 <- (32) %r12797
	muls.64     %r12799 <- %r12798, $16
	add.64*     %r12800 <- %r12796, %r12799
	store.64*   %r12800 -> 0[o1]
	load.64*    %r12801 <- 0[o2]
	load.f64    %r12802 <- 0[%r12801]
	fpcast.f64  %r12803 <- (64) %r12802
	load.64*    %r12804 <- 0[o1]
	store.f64   %r12803 -> 0[%r12804]
	load.64*    %r12805 <- 0[o2]
	load.32     %r12806 <- 8[%r12805]
	scast.32    %r12807 <- (32) %r12806
	load.64*    %r12808 <- 0[o1]
	store.32    %r12807 -> 8[%r12808]
	br          .L2846

.L2845:
	load.64*    %r12809 <- 0[ra]
	load.32     %r12810 <- 0[j]
	scast.64    %r12811 <- (32) %r12810
	muls.64     %r12812 <- %r12811, $16
	add.64*     %r12813 <- %r12809, %r12812
	store.32    $0 -> 8[%r12813]
	br          .L2846

.L2846:
	br          .L2841

.L2841:
	load.32     %r12814 <- 0[j]
	add.32      %r12815 <- %r12814, $1
	store.32    %r12815 -> 0[j]
	br          .L2843

.L2842:
	br          .L2580

.L2583:
	br          .L2580

.L2580:
	br          .L2582

.L2773:
	ret


index2adr:
.L2847:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r12816 <- 0[idx]
	setgt.32    %r12817 <- %r12816, $0
	br          %r12817, .L2848, .L2849

.L2848:
	load.64*    %r12818 <- 0[L]
	load.64*    %r12819 <- 24[%r12818]
	load.32     %r12820 <- 0[idx]
	sub.32      %r12821 <- %r12820, $1
	scast.64    %r12822 <- (32) %r12821
	muls.64     %r12823 <- %r12822, $16
	add.64*     %r12824 <- %r12819, %r12823
	store.64*   %r12824 -> 0[o]
	load.64*    %r12825 <- 0[L]
	load.64*    %r12826 <- 0[o]
	load.64*    %r12827 <- 0[L]
	load.64*    %r12828 <- 16[%r12827]
	setae.32    %r12829 <- %r12826, %r12828
	br          %r12829, .L2850, .L2851

.L2850:
	symaddr.64* %r12830 <- luaO_nilobject_
	ptrcast.64* %r12831 <- (64) %r12830
	phisrc.64*  %phi521(return) <- %r12831
	br          .L2852

.L2851:
	load.64*    %r12833 <- 0[o]
	phisrc.64*  %phi522(return) <- %r12833
	br          .L2852

.L2849:
	load.32     %r12834 <- 0[idx]
	setgt.32    %r12835 <- %r12834, $0xffffd8f0
	br          %r12835, .L2855, .L2856

.L2855:
	load.64*    %r12836 <- 0[L]
	load.64*    %r12837 <- 0[L]
	load.64*    %r12838 <- 16[%r12837]
	load.32     %r12839 <- 0[idx]
	scast.64    %r12840 <- (32) %r12839
	muls.64     %r12841 <- %r12840, $16
	add.64*     %r12842 <- %r12838, %r12841
	phisrc.64*  %phi523(return) <- %r12842
	br          .L2852

.L2856:
	load.32     %r12843 <- 0[idx]
	switch.32   %r12843, 4294957294 -> .L2861, 4294957295 -> .L2860, 4294957296 -> .L2859, default -> .L2862

.L2859:
	load.64*    %r12844 <- 0[L]
	load.64*    %r12845 <- 32[%r12844]
	add.64*     %r12846 <- %r12845, $160
	phisrc.64*  %phi524(return) <- %r12846
	br          .L2852

.L2860:
	load.64*    %r12847 <- 0[L]
	load.64*    %r12848 <- 40[%r12847]
	load.64*    %r12849 <- 8[%r12848]
	load.64*    %r12850 <- 0[%r12849]
	add.64*     %r12851 <- %r12850, $0
	store.64*   %r12851 -> 0[func]
	load.64*    %r12852 <- 0[L]
	add.64*     %r12853 <- %r12852, $136
	store.64*   %r12853 -> 0[i_o]
	load.64*    %r12854 <- 0[func]
	load.64*    %r12855 <- 24[%r12854]
	ptrcast.64* %r12856 <- (64) %r12855
	load.64*    %r12857 <- 0[i_o]
	store.64*   %r12856 -> 0[%r12857]
	load.64*    %r12858 <- 0[i_o]
	store.32    $5 -> 8[%r12858]
	load.64*    %r12859 <- 0[L]
	add.64*     %r12860 <- %r12859, $136
	phisrc.64*  %phi525(return) <- %r12860
	br          .L2852

.L2861:
	load.64*    %r12861 <- 0[L]
	add.64*     %r12862 <- %r12861, $120
	phisrc.64*  %phi526(return) <- %r12862
	br          .L2852

.L2862:
	load.64*    %r12863 <- 0[L]
	load.64*    %r12864 <- 40[%r12863]
	load.64*    %r12865 <- 8[%r12864]
	load.64*    %r12866 <- 0[%r12865]
	add.64*     %r12867 <- %r12866, $0
	store.64*   %r12867 -> 0[func]
	load.32     %r12868 <- 0[idx]
	sub.32      %r12869 <- $0xffffd8ee, %r12868
	store.32    %r12869 -> 0[idx]
	load.64*    %r12870 <- 0[func]
	add.64*     %r12871 <- %r12870, $0
	add.64*     %r12872 <- %r12871, $40
	load.32     %r12873 <- 0[idx]
	sub.32      %r12874 <- %r12873, $1
	scast.64    %r12875 <- (32) %r12874
	muls.64     %r12876 <- %r12875, $16
	add.64*     %r12877 <- %r12872, %r12876
	symaddr.64* %r12878 <- luaO_nilobject_
	ptrcast.64* %r12879 <- (64) %r12878
	ptrcast.64* %r12880 <- (64) %r12879
	load.32     %r12881 <- 0[idx]
	load.64*    %r12882 <- 0[func]
	load.8      %r12883 <- 11[%r12882]
	cast.32     %r12884 <- (8) %r12883
	setle.32    %r12885 <- %r12881, %r12884
	select.64*  %r12886 <- %r12885, %r12877, %r12880
	phisrc.64*  %phi527(return) <- %r12886
	br          .L2852

.L2852:
	phi.64*     %r12832 <- %phi521(return), %phi522(return), %phi523(return), %phi524(return), %phi525(return), %phi526(return), %phi527(return)
	ret.64*     %r12832


getcurrenv:
.L2863:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r12887 <- 0[L]
	load.64*    %r12888 <- 40[%r12887]
	load.64*    %r12889 <- 0[L]
	load.64*    %r12890 <- 80[%r12889]
	seteq.32    %r12891 <- %r12888, %r12890
	br          %r12891, .L2864, .L2865

.L2864:
	load.64*    %r12892 <- 0[L]
	load.64*    %r12893 <- 120[%r12892]
	add.64*     %r12894 <- %r12893, $0
	phisrc.64*  %phi528(return) <- %r12894
	br          .L2866

.L2865:
	load.64*    %r12896 <- 0[L]
	load.64*    %r12897 <- 40[%r12896]
	load.64*    %r12898 <- 8[%r12897]
	load.64*    %r12899 <- 0[%r12898]
	add.64*     %r12900 <- %r12899, $0
	store.64*   %r12900 -> 0[func]
	load.64*    %r12901 <- 0[func]
	load.64*    %r12902 <- 24[%r12901]
	phisrc.64*  %phi529(return) <- %r12902
	br          .L2866

.L2866:
	phi.64*     %r12895 <- %phi528(return), %phi529(return)
	ret.64*     %r12895


lua_checkstack:
.L2868:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[size]
	store.32    $1 -> 0[res]
	load.32     %r12903 <- 0[size]
	setgt.32    %r12904 <- %r12903, $0x1f40
	br          %r12904, .L2869, .L2871

.L2871:
	load.64*    %r12905 <- 0[L]
	load.64*    %r12906 <- 16[%r12905]
	load.64*    %r12907 <- 0[L]
	load.64*    %r12908 <- 24[%r12907]
	sub.64      %r12909 <- %r12906, %r12908
	divs.64     %r12910 <- %r12909, $16
	load.32     %r12911 <- 0[size]
	scast.64    %r12912 <- (32) %r12911
	add.64      %r12913 <- %r12910, %r12912
	setgt.32    %r12914 <- %r12913, $0x1f40
	br          %r12914, .L2869, .L2870

.L2869:
	store.32    $0 -> 0[res]
	br          .L2872

.L2870:
	load.32     %r12915 <- 0[size]
	setgt.32    %r12916 <- %r12915, $0
	br          %r12916, .L2873, .L2874

.L2873:
	load.64*    %r12917 <- 0[L]
	load.64*    %r12918 <- 56[%r12917]
	ptrcast.64* %r12919 <- (64) %r12918
	load.64*    %r12920 <- 0[L]
	load.64*    %r12921 <- 16[%r12920]
	ptrcast.64* %r12922 <- (64) %r12921
	sub.64      %r12923 <- %r12919, %r12922
	load.32     %r12924 <- 0[size]
	muls.32     %r12925 <- %r12924, $16
	scast.64    %r12926 <- (32) %r12925
	setle.32    %r12927 <- %r12923, %r12926
	br          %r12927, .L2875, .L2876

.L2875:
	load.64*    %r12928 <- 0[L]
	load.32     %r12929 <- 0[size]
	push.64*    %r12928
	push.32     %r12929
	call        luaD_growstack
	br          .L2877

.L2876:
	br          .L2877

.L2877:
	load.64*    %r12930 <- 0[L]
	load.64*    %r12931 <- 40[%r12930]
	load.64*    %r12932 <- 16[%r12931]
	load.64*    %r12933 <- 0[L]
	load.64*    %r12934 <- 16[%r12933]
	load.32     %r12935 <- 0[size]
	scast.64    %r12936 <- (32) %r12935
	muls.64     %r12937 <- %r12936, $16
	add.64*     %r12938 <- %r12934, %r12937
	setb.32     %r12939 <- %r12932, %r12938
	br          %r12939, .L2878, .L2879

.L2878:
	load.64*    %r12940 <- 0[L]
	load.64*    %r12941 <- 16[%r12940]
	load.32     %r12942 <- 0[size]
	scast.64    %r12943 <- (32) %r12942
	muls.64     %r12944 <- %r12943, $16
	add.64*     %r12945 <- %r12941, %r12944
	load.64*    %r12946 <- 0[L]
	load.64*    %r12947 <- 40[%r12946]
	store.64*   %r12945 -> 16[%r12947]
	br          .L2879

.L2879:
	br          .L2874

.L2874:
	br          .L2872

.L2872:
	load.32     %r12948 <- 0[res]
	phisrc.32   %phi530(return) <- %r12948
	br          .L2880

.L2880:
	phi.32      %r12949 <- %phi530(return)
	ret.32      %r12948


lua_atpanic:
.L2881:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[panicf]
	load.64*    %r12950 <- 0[L]
	load.64*    %r12951 <- 32[%r12950]
	load.64*    %r12952 <- 152[%r12951]
	store.64*   %r12952 -> 0[old]
	load.64*    %r12953 <- 0[panicf]
	load.64*    %r12954 <- 0[L]
	load.64*    %r12955 <- 32[%r12954]
	store.64*   %r12953 -> 152[%r12955]
	load.64*    %r12956 <- 0[old]
	phisrc.64*  %phi531(return) <- %r12956
	br          .L2882

.L2882:
	phi.64*     %r12957 <- %phi531(return)
	ret.64*     %r12956


lua_gettop:
.L2883:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r12958 <- 0[L]
	load.64*    %r12959 <- 16[%r12958]
	load.64*    %r12960 <- 0[L]
	load.64*    %r12961 <- 24[%r12960]
	sub.64      %r12962 <- %r12959, %r12961
	divs.64     %r12963 <- %r12962, $16
	scast.32    %r12964 <- (64) %r12963
	phisrc.32   %phi532(return) <- %r12964
	br          .L2884

.L2884:
	phi.32      %r12965 <- %phi532(return)
	ret.32      %r12964


lua_settop:
.L2885:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r12966 <- 0[idx]
	setge.32    %r12967 <- %r12966, $0
	br          %r12967, .L2886, .L2887

.L2886:
	load.64*    %r12968 <- 0[L]
	br          .L2891

.L2891:
	load.64*    %r12969 <- 0[L]
	load.64*    %r12970 <- 16[%r12969]
	load.64*    %r12971 <- 0[L]
	load.64*    %r12972 <- 24[%r12971]
	load.32     %r12973 <- 0[idx]
	scast.64    %r12974 <- (32) %r12973
	muls.64     %r12975 <- %r12974, $16
	add.64*     %r12976 <- %r12972, %r12975
	setb.32     %r12977 <- %r12970, %r12976
	br          %r12977, .L2888, .L2890

.L2888:
	load.64*    %r12978 <- 0[L]
	load.64*    %r12979 <- 16[%r12978]
	add.64*     %r12980 <- %r12979, $16
	store.64*   %r12980 -> 16[%r12978]
	store.32    $0 -> 8[%r12979]
	br          .L2889

.L2889:
	br          .L2891

.L2890:
	load.64*    %r12981 <- 0[L]
	load.64*    %r12982 <- 24[%r12981]
	load.32     %r12983 <- 0[idx]
	scast.64    %r12984 <- (32) %r12983
	muls.64     %r12985 <- %r12984, $16
	add.64*     %r12986 <- %r12982, %r12985
	load.64*    %r12987 <- 0[L]
	store.64*   %r12986 -> 16[%r12987]
	br          .L2892

.L2887:
	load.64*    %r12988 <- 0[L]
	load.32     %r12989 <- 0[idx]
	add.32      %r12990 <- %r12989, $1
	scast.64    %r12991 <- (32) %r12990
	muls.64     %r12992 <- %r12991, $16
	load.64*    %r12993 <- 0[L]
	load.64*    %r12994 <- 16[%r12993]
	cast.64     %r12995 <- (64) %r12994
	add.64      %r12996 <- %r12995, %r12992
	ptrcast.64* %r12997 <- (64) %r12996
	store.64*   %r12997 -> 16[%r12993]
	br          .L2892

.L2892:
	ret


lua_remove:
.L2893:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r12998 <- 0[L]
	load.32     %r12999 <- 0[idx]
	push.64*    %r12998
	push.32     %r12999
	call.64*    %r13000 <- index2adr
	store.64*   %r13000 -> 0[p]
	load.64*    %r13001 <- 0[L]
	br          .L2897

.L2897:
	load.64*    %r13002 <- 0[p]
	add.64*     %r13003 <- %r13002, $16
	store.64*   %r13003 -> 0[p]
	load.64*    %r13004 <- 0[L]
	load.64*    %r13005 <- 16[%r13004]
	setb.32     %r13006 <- %r13003, %r13005
	br          %r13006, .L2894, .L2896

.L2894:
	load.64*    %r13007 <- 0[p]
	store.64*   %r13007 -> 0[o2]
	load.64*    %r13008 <- 0[p]
	sub.64*     %r13009 <- %r13008, $16
	store.64*   %r13009 -> 0[o1]
	load.64*    %r13010 <- 0[o2]
	load.f64    %r13011 <- 0[%r13010]
	fpcast.f64  %r13012 <- (64) %r13011
	load.64*    %r13013 <- 0[o1]
	store.f64   %r13012 -> 0[%r13013]
	load.64*    %r13014 <- 0[o2]
	load.32     %r13015 <- 8[%r13014]
	scast.32    %r13016 <- (32) %r13015
	load.64*    %r13017 <- 0[o1]
	store.32    %r13016 -> 8[%r13017]
	br          .L2895

.L2895:
	br          .L2897

.L2896:
	load.64*    %r13018 <- 0[L]
	load.64*    %r13019 <- 16[%r13018]
	sub.64*     %r13020 <- %r13019, $16
	store.64*   %r13020 -> 16[%r13018]
	br          .L2898

.L2898:
	ret


lua_insert:
.L2899:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13021 <- 0[L]
	load.32     %r13022 <- 0[idx]
	push.64*    %r13021
	push.32     %r13022
	call.64*    %r13023 <- index2adr
	store.64*   %r13023 -> 0[p]
	load.64*    %r13024 <- 0[L]
	load.64*    %r13025 <- 0[L]
	load.64*    %r13026 <- 16[%r13025]
	store.64*   %r13026 -> 0[q]
	br          .L2903

.L2903:
	load.64*    %r13027 <- 0[q]
	load.64*    %r13028 <- 0[p]
	seta.32     %r13029 <- %r13027, %r13028
	br          %r13029, .L2900, .L2902

.L2900:
	load.64*    %r13030 <- 0[q]
	sub.64*     %r13031 <- %r13030, $16
	store.64*   %r13031 -> 0[o2]
	load.64*    %r13032 <- 0[q]
	store.64*   %r13032 -> 0[o1]
	load.64*    %r13033 <- 0[o2]
	load.f64    %r13034 <- 0[%r13033]
	fpcast.f64  %r13035 <- (64) %r13034
	load.64*    %r13036 <- 0[o1]
	store.f64   %r13035 -> 0[%r13036]
	load.64*    %r13037 <- 0[o2]
	load.32     %r13038 <- 8[%r13037]
	scast.32    %r13039 <- (32) %r13038
	load.64*    %r13040 <- 0[o1]
	store.32    %r13039 -> 8[%r13040]
	br          .L2901

.L2901:
	load.64*    %r13041 <- 0[q]
	sub.64*     %r13042 <- %r13041, $16
	store.64*   %r13042 -> 0[q]
	br          .L2903

.L2902:
	load.64*    %r13043 <- 0[L]
	load.64*    %r13044 <- 16[%r13043]
	store.64*   %r13044 -> 0[o2]
	load.64*    %r13045 <- 0[p]
	store.64*   %r13045 -> 0[o1]
	load.64*    %r13046 <- 0[o2]
	load.f64    %r13047 <- 0[%r13046]
	fpcast.f64  %r13048 <- (64) %r13047
	load.64*    %r13049 <- 0[o1]
	store.f64   %r13048 -> 0[%r13049]
	load.64*    %r13050 <- 0[o2]
	load.32     %r13051 <- 8[%r13050]
	scast.32    %r13052 <- (32) %r13051
	load.64*    %r13053 <- 0[o1]
	store.32    %r13052 -> 8[%r13053]
	br          .L2904

.L2904:
	ret


lua_replace:
.L2905:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.32     %r13054 <- 0[idx]
	seteq.32    %r13055 <- %r13054, $0xffffd8ef
	br          %r13055, .L2908, .L2907

.L2908:
	load.64*    %r13056 <- 0[L]
	load.64*    %r13057 <- 40[%r13056]
	load.64*    %r13058 <- 0[L]
	load.64*    %r13059 <- 80[%r13058]
	seteq.32    %r13060 <- %r13057, %r13059
	br          %r13060, .L2906, .L2907

.L2906:
	load.64*    %r13061 <- 0[L]
	symaddr.64* %r13062 <- <anon symbol:0x62d001419fa0>
	push.64*    %r13061
	push.64*    %r13062
	call        luaG_runerror
	br          .L2907

.L2907:
	load.64*    %r13063 <- 0[L]
	load.64*    %r13064 <- 0[L]
	load.32     %r13065 <- 0[idx]
	push.64*    %r13064
	push.32     %r13065
	call.64*    %r13066 <- index2adr
	store.64*   %r13066 -> 0[o]
	load.64*    %r13067 <- 0[L]
	load.32     %r13068 <- 0[idx]
	seteq.32    %r13069 <- %r13068, $0xffffd8ef
	br          %r13069, .L2909, .L2910

.L2909:
	load.64*    %r13070 <- 0[L]
	load.64*    %r13071 <- 40[%r13070]
	load.64*    %r13072 <- 8[%r13071]
	load.64*    %r13073 <- 0[%r13072]
	add.64*     %r13074 <- %r13073, $0
	store.64*   %r13074 -> 0[func]
	load.64*    %r13075 <- 0[L]
	load.64*    %r13076 <- 0[L]
	load.64*    %r13077 <- 16[%r13076]
	sub.64*     %r13078 <- %r13077, $16
	load.64*    %r13079 <- 0[%r13078]
	add.64*     %r13080 <- %r13079, $0
	load.64*    %r13081 <- 0[func]
	store.64*   %r13080 -> 24[%r13081]
	load.64*    %r13082 <- 0[L]
	load.64*    %r13083 <- 16[%r13082]
	sub.64*     %r13084 <- %r13083, $16
	load.32     %r13085 <- 8[%r13084]
	setge.32    %r13086 <- %r13085, $4
	br          %r13086, .L2914, .L2912

.L2914:
	load.64*    %r13087 <- 0[L]
	load.64*    %r13088 <- 16[%r13087]
	sub.64*     %r13089 <- %r13088, $16
	load.64*    %r13090 <- 0[%r13089]
	load.8      %r13091 <- 9[%r13090]
	cast.32     %r13092 <- (8) %r13091
	and.32      %r13093 <- %r13092, $3
	br          %r13093, .L2913, .L2912

.L2913:
	load.64*    %r13094 <- 0[func]
	ptrcast.64* %r13095 <- (64) %r13094
	load.8      %r13096 <- 9[%r13095]
	cast.32     %r13097 <- (8) %r13096
	and.32      %r13098 <- %r13097, $4
	br          %r13098, .L2911, .L2912

.L2911:
	load.64*    %r13099 <- 0[L]
	load.64*    %r13100 <- 0[func]
	ptrcast.64* %r13101 <- (64) %r13100
	load.64*    %r13102 <- 0[L]
	load.64*    %r13103 <- 16[%r13102]
	sub.64*     %r13104 <- %r13103, $16
	load.64*    %r13105 <- 0[%r13104]
	push.64*    %r13099
	push.64*    %r13101
	push.64*    %r13105
	call        luaC_barrierf
	br          .L2912

.L2912:
	br          .L2915

.L2910:
	load.64*    %r13106 <- 0[L]
	load.64*    %r13107 <- 16[%r13106]
	sub.64*     %r13108 <- %r13107, $16
	store.64*   %r13108 -> 0[o2]
	load.64*    %r13109 <- 0[o]
	store.64*   %r13109 -> 0[o1]
	load.64*    %r13110 <- 0[o2]
	load.f64    %r13111 <- 0[%r13110]
	fpcast.f64  %r13112 <- (64) %r13111
	load.64*    %r13113 <- 0[o1]
	store.f64   %r13112 -> 0[%r13113]
	load.64*    %r13114 <- 0[o2]
	load.32     %r13115 <- 8[%r13114]
	scast.32    %r13116 <- (32) %r13115
	load.64*    %r13117 <- 0[o1]
	store.32    %r13116 -> 8[%r13117]
	load.32     %r13118 <- 0[idx]
	setlt.32    %r13119 <- %r13118, $0xffffd8ee
	br          %r13119, .L2916, .L2917

.L2916:
	load.64*    %r13120 <- 0[L]
	load.64*    %r13121 <- 16[%r13120]
	sub.64*     %r13122 <- %r13121, $16
	load.32     %r13123 <- 8[%r13122]
	setge.32    %r13124 <- %r13123, $4
	br          %r13124, .L2921, .L2919

.L2921:
	load.64*    %r13125 <- 0[L]
	load.64*    %r13126 <- 16[%r13125]
	sub.64*     %r13127 <- %r13126, $16
	load.64*    %r13128 <- 0[%r13127]
	load.8      %r13129 <- 9[%r13128]
	cast.32     %r13130 <- (8) %r13129
	and.32      %r13131 <- %r13130, $3
	br          %r13131, .L2920, .L2919

.L2920:
	load.64*    %r13132 <- 0[L]
	load.64*    %r13133 <- 40[%r13132]
	load.64*    %r13134 <- 8[%r13133]
	load.64*    %r13135 <- 0[%r13134]
	add.64*     %r13136 <- %r13135, $0
	ptrcast.64* %r13137 <- (64) %r13136
	load.8      %r13138 <- 9[%r13137]
	cast.32     %r13139 <- (8) %r13138
	and.32      %r13140 <- %r13139, $4
	br          %r13140, .L2918, .L2919

.L2918:
	load.64*    %r13141 <- 0[L]
	load.64*    %r13142 <- 0[L]
	load.64*    %r13143 <- 40[%r13142]
	load.64*    %r13144 <- 8[%r13143]
	load.64*    %r13145 <- 0[%r13144]
	add.64*     %r13146 <- %r13145, $0
	ptrcast.64* %r13147 <- (64) %r13146
	load.64*    %r13148 <- 0[L]
	load.64*    %r13149 <- 16[%r13148]
	sub.64*     %r13150 <- %r13149, $16
	load.64*    %r13151 <- 0[%r13150]
	push.64*    %r13141
	push.64*    %r13147
	push.64*    %r13151
	call        luaC_barrierf
	br          .L2919

.L2919:
	br          .L2917

.L2917:
	br          .L2915

.L2915:
	load.64*    %r13152 <- 0[L]
	load.64*    %r13153 <- 16[%r13152]
	sub.64*     %r13154 <- %r13153, $16
	store.64*   %r13154 -> 16[%r13152]
	br          .L2922

.L2922:
	ret


lua_pushvalue:
.L2923:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13155 <- 0[L]
	load.32     %r13156 <- 0[idx]
	push.64*    %r13155
	push.32     %r13156
	call.64*    %r13157 <- index2adr
	store.64*   %r13157 -> 0[o2]
	load.64*    %r13158 <- 0[L]
	load.64*    %r13159 <- 16[%r13158]
	store.64*   %r13159 -> 0[o1]
	load.64*    %r13160 <- 0[o2]
	load.f64    %r13161 <- 0[%r13160]
	fpcast.f64  %r13162 <- (64) %r13161
	load.64*    %r13163 <- 0[o1]
	store.f64   %r13162 -> 0[%r13163]
	load.64*    %r13164 <- 0[o2]
	load.32     %r13165 <- 8[%r13164]
	scast.32    %r13166 <- (32) %r13165
	load.64*    %r13167 <- 0[o1]
	store.32    %r13166 -> 8[%r13167]
	load.64*    %r13168 <- 0[L]
	load.64*    %r13169 <- 0[L]
	load.64*    %r13170 <- 16[%r13169]
	add.64*     %r13171 <- %r13170, $16
	store.64*   %r13171 -> 16[%r13169]
	br          .L2924

.L2924:
	ret


lua_type:
.L2925:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13172 <- 0[L]
	load.32     %r13173 <- 0[idx]
	push.64*    %r13172
	push.32     %r13173
	call.64*    %r13174 <- index2adr
	store.64*   %r13174 -> 0[o]
	load.64*    %r13175 <- 0[o]
	symaddr.64* %r13176 <- luaO_nilobject_
	seteq.32    %r13177 <- %r13175, %r13176
	br          %r13177, .L2927, .L2928

.L2927:
	phisrc.32   %phi533 <- $0xffffffff
	br          .L2929

.L2928:
	load.64*    %r13178 <- 0[o]
	load.32     %r13179 <- 8[%r13178]
	phisrc.32   %phi534 <- %r13179
	br          .L2929

.L2929:
	phi.32      %r13180 <- %phi533, %phi534
	phisrc.32   %phi535(return) <- %r13180
	br          .L2926

.L2926:
	phi.32      %r13181 <- %phi535(return)
	ret.32      %r13180


lua_typename:
.L2930:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[t]
	load.64*    %r13182 <- 0[L]
	load.32     %r13183 <- 0[t]
	seteq.32    %r13184 <- %r13183, $0xffffffff
	br          %r13184, .L2932, .L2933

.L2932:
	symaddr.64* %r13185 <- <anon symbol:0x62d001420ce0>
	ptrcast.64* %r13186 <- (64) %r13185
	phisrc.64*  %phi536 <- %r13186
	br          .L2934

.L2933:
	symaddr.64* %r13187 <- luaT_typenames
	load.32     %r13188 <- 0[t]
	scast.64    %r13189 <- (32) %r13188
	muls.64     %r13190 <- %r13189, $8
	add.64*     %r13191 <- %r13187, %r13190
	load.64*    %r13192 <- 0[%r13191]
	ptrcast.64* %r13193 <- (64) %r13192
	phisrc.64*  %phi537 <- %r13193
	br          .L2934

.L2934:
	phi.64*     %r13194 <- %phi536, %phi537
	phisrc.64*  %phi538(return) <- %r13194
	br          .L2931

.L2931:
	phi.64*     %r13195 <- %phi538(return)
	ret.64*     %r13194


lua_iscfunction:
.L2935:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13196 <- 0[L]
	load.32     %r13197 <- 0[idx]
	push.64*    %r13196
	push.32     %r13197
	call.64*    %r13198 <- index2adr
	store.64*   %r13198 -> 0[o]
	load.64*    %r13199 <- 0[o]
	load.32     %r13200 <- 8[%r13199]
	seteq.32    %r13201 <- %r13200, $6
	br          %r13201, .L2937, .L2938

.L2937:
	load.64*    %r13202 <- 0[o]
	load.64*    %r13203 <- 0[%r13202]
	load.8      %r13204 <- 10[%r13203]
	phisrc.32   %phi539 <- %r13204
	br          .L2939

.L2938:
	phisrc.32   %phi540 <- $0
	br          .L2939

.L2939:
	phi.32      %r13205 <- %phi539, %phi540
	phisrc.32   %phi541(return) <- %r13205
	br          .L2936

.L2936:
	phi.32      %r13206 <- %phi541(return)
	ret.32      %r13205


lua_isnumber:
.L2940:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13207 <- 0[L]
	load.32     %r13208 <- 0[idx]
	push.64*    %r13207
	push.32     %r13208
	call.64*    %r13209 <- index2adr
	store.64*   %r13209 -> 0[o]
	load.64*    %r13210 <- 0[o]
	load.32     %r13211 <- 8[%r13210]
	scast.32    %r13212 <- (32) %r13211
	seteq.32    %r13213 <- %r13212, $3
	br          %r13213, .L2942, .L2943

.L2942:
	phisrc.32   %phi542 <- $1
	br          .L2944

.L2943:
	load.64*    %r13214 <- 0[o]
	symaddr.64* %r13215 <- n
	push.64*    %r13214
	push.64*    %r13215
	call.64*    %r13216 <- luaV_tonumber
	store.64*   %r13216 -> 0[o]
	setne.32    %r13217 <- %r13216, $0
	phisrc.32   %phi543 <- %r13217
	br          .L2944

.L2944:
	phi.32      %r13218 <- %phi542, %phi543
	phisrc.32   %phi544(return) <- %r13218
	br          .L2941

.L2941:
	phi.32      %r13219 <- %phi544(return)
	ret.32      %r13218


lua_isstring:
.L2945:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13220 <- 0[L]
	load.32     %r13221 <- 0[idx]
	push.64*    %r13220
	push.32     %r13221
	call.32     %r13222 <- lua_type
	store.32    %r13222 -> 0[t]
	load.32     %r13223 <- 0[t]
	seteq.32    %r13224 <- %r13223, $4
	load.32     %r13225 <- 0[t]
	seteq.32    %r13226 <- %r13225, $3
	or-bool.32  %r13227 <- %r13224, %r13226
	phisrc.32   %phi545(return) <- %r13227
	br          .L2946

.L2946:
	phi.32      %r13228 <- %phi545(return)
	ret.32      %r13227


lua_rawequal:
.L2947:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[index1]
	store.32    %arg3 -> 0[index2]
	load.64*    %r13229 <- 0[L]
	load.32     %r13230 <- 0[index1]
	push.64*    %r13229
	push.32     %r13230
	call.64*    %r13231 <- index2adr
	store.64*   %r13231 -> 0[o1]
	load.64*    %r13232 <- 0[L]
	load.32     %r13233 <- 0[index2]
	push.64*    %r13232
	push.32     %r13233
	call.64*    %r13234 <- index2adr
	store.64*   %r13234 -> 0[o2]
	load.64*    %r13235 <- 0[o1]
	symaddr.64* %r13236 <- luaO_nilobject_
	seteq.32    %r13237 <- %r13235, %r13236
	load.64*    %r13238 <- 0[o2]
	symaddr.64* %r13239 <- luaO_nilobject_
	seteq.32    %r13240 <- %r13238, %r13239
	or-bool.32  %r13241 <- %r13237, %r13240
	br          %r13241, .L2949, .L2950

.L2949:
	phisrc.32   %phi546 <- $0
	br          .L2951

.L2950:
	load.64*    %r13242 <- 0[o1]
	load.64*    %r13243 <- 0[o2]
	push.64*    %r13242
	push.64*    %r13243
	call.32     %r13244 <- luaO_rawequalObj
	phisrc.32   %phi547 <- %r13244
	br          .L2951

.L2951:
	phi.32      %r13245 <- %phi546, %phi547
	phisrc.32   %phi548(return) <- %r13245
	br          .L2948

.L2948:
	phi.32      %r13246 <- %phi548(return)
	ret.32      %r13245


lua_lessthan:
.L2952:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[index1]
	store.32    %arg3 -> 0[index2]
	load.64*    %r13247 <- 0[L]
	load.32     %r13248 <- 0[index1]
	push.64*    %r13247
	push.32     %r13248
	call.64*    %r13249 <- index2adr
	store.64*   %r13249 -> 0[o1]
	load.64*    %r13250 <- 0[L]
	load.32     %r13251 <- 0[index2]
	push.64*    %r13250
	push.32     %r13251
	call.64*    %r13252 <- index2adr
	store.64*   %r13252 -> 0[o2]
	load.64*    %r13253 <- 0[o1]
	symaddr.64* %r13254 <- luaO_nilobject_
	seteq.32    %r13255 <- %r13253, %r13254
	load.64*    %r13256 <- 0[o2]
	symaddr.64* %r13257 <- luaO_nilobject_
	seteq.32    %r13258 <- %r13256, %r13257
	or-bool.32  %r13259 <- %r13255, %r13258
	br          %r13259, .L2953, .L2954

.L2953:
	phisrc.32   %phi549 <- $0
	br          .L2955

.L2954:
	load.64*    %r13260 <- 0[L]
	load.64*    %r13261 <- 0[o1]
	load.64*    %r13262 <- 0[o2]
	push.64*    %r13260
	push.64*    %r13261
	push.64*    %r13262
	call.32     %r13263 <- luaV_lessthan
	phisrc.32   %phi550 <- %r13263
	br          .L2955

.L2955:
	phi.32      %r13264 <- %phi549, %phi550
	store.32    %r13264 -> 0[i]
	load.32     %r13265 <- 0[i]
	phisrc.32   %phi551(return) <- %r13265
	br          .L2956

.L2956:
	phi.32      %r13266 <- %phi551(return)
	ret.32      %r13265


lua_tonumber:
.L2957:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13267 <- 0[L]
	load.32     %r13268 <- 0[idx]
	push.64*    %r13267
	push.32     %r13268
	call.64*    %r13269 <- index2adr
	store.64*   %r13269 -> 0[o]
	load.64*    %r13270 <- 0[o]
	load.32     %r13271 <- 8[%r13270]
	scast.32    %r13272 <- (32) %r13271
	seteq.32    %r13273 <- %r13272, $3
	br          %r13273, .L2958, .L2960

.L2960:
	load.64*    %r13274 <- 0[o]
	symaddr.64* %r13275 <- n
	push.64*    %r13274
	push.64*    %r13275
	call.64*    %r13276 <- luaV_tonumber
	store.64*   %r13276 -> 0[o]
	setne.32    %r13277 <- %r13276, $0
	br          %r13277, .L2958, .L2959

.L2958:
	load.64*    %r13278 <- 0[o]
	load.f64    %r13279 <- 0[%r13278]
	fpcast.f64  %r13280 <- (64) %r13279
	phisrc.f64  %phi552(return) <- %r13280
	br          .L2961

.L2959:
	set.f64     %r13282 <- 0.000000
	phisrc.f64  %phi553(return) <- %r13282
	br          .L2961

.L2961:
	phi.f64     %r13281 <- %phi552(return), %phi553(return)
	ret.f64     %r13281


lua_tointeger:
.L2963:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13283 <- 0[L]
	load.32     %r13284 <- 0[idx]
	push.64*    %r13283
	push.32     %r13284
	call.64*    %r13285 <- index2adr
	store.64*   %r13285 -> 0[o]
	load.64*    %r13286 <- 0[o]
	load.32     %r13287 <- 8[%r13286]
	scast.32    %r13288 <- (32) %r13287
	seteq.32    %r13289 <- %r13288, $3
	br          %r13289, .L2964, .L2966

.L2966:
	load.64*    %r13290 <- 0[o]
	symaddr.64* %r13291 <- n
	push.64*    %r13290
	push.64*    %r13291
	call.64*    %r13292 <- luaV_tonumber
	store.64*   %r13292 -> 0[o]
	setne.32    %r13293 <- %r13292, $0
	br          %r13293, .L2964, .L2965

.L2964:
	load.64*    %r13294 <- 0[o]
	load.f64    %r13295 <- 0[%r13294]
	fpcast.f64  %r13296 <- (64) %r13295
	store.f64   %r13296 -> 0[num]
	load.f64    %r13297 <- 0[num]
	cast.64     %r13298 <- (64) %r13297
	store.64    %r13298 -> 0[res]
	load.64     %r13299 <- 0[res]
	phisrc.64   %phi554(return) <- %r13299
	br          .L2967

.L2965:
	phisrc.64   %phi555(return) <- $0
	br          .L2967

.L2967:
	phi.64      %r13300 <- %phi554(return), %phi555(return)
	ret.64      %r13300


lua_toboolean:
.L2969:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13301 <- 0[L]
	load.32     %r13302 <- 0[idx]
	push.64*    %r13301
	push.32     %r13302
	call.64*    %r13303 <- index2adr
	store.64*   %r13303 -> 0[o]
	load.64*    %r13304 <- 0[o]
	load.32     %r13305 <- 8[%r13304]
	scast.32    %r13306 <- (32) %r13305
	seteq.32    %r13307 <- %r13306, $0
	br          %r13307, .L2971, .L2972

.L2971:
	phisrc.32   %phi556 <- $1
	br          .L2973

.L2972:
	load.64*    %r13308 <- 0[o]
	load.32     %r13309 <- 8[%r13308]
	scast.32    %r13310 <- (32) %r13309
	seteq.32    %r13311 <- %r13310, $1
	br          %r13311, .L2974, .L2975

.L2974:
	load.64*    %r13312 <- 0[o]
	load.32     %r13313 <- 0[%r13312]
	scast.32    %r13314 <- (32) %r13313
	seteq.32    %r13315 <- %r13314, $0
	phisrc.32   %phi557 <- %r13315
	br          .L2976

.L2975:
	phisrc.32   %phi558 <- $0
	br          .L2976

.L2976:
	phi.32      %r13316 <- %phi557, %phi558
	phisrc.32   %phi559 <- %r13316
	br          .L2973

.L2973:
	phi.32      %r13317 <- %phi556, %phi559
	seteq.32    %r13318 <- %r13317, $0
	phisrc.32   %phi560(return) <- %r13318
	br          .L2970

.L2970:
	phi.32      %r13319 <- %phi560(return)
	ret.32      %r13318


lua_tolstring:
.L2977:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[len]
	load.64*    %r13320 <- 0[L]
	load.32     %r13321 <- 0[idx]
	push.64*    %r13320
	push.32     %r13321
	call.64*    %r13322 <- index2adr
	store.64*   %r13322 -> 0[o]
	load.64*    %r13323 <- 0[o]
	load.32     %r13324 <- 8[%r13323]
	seteq.32    %r13325 <- %r13324, $4
	br          %r13325, .L2979, .L2978

.L2978:
	load.64*    %r13326 <- 0[L]
	load.64*    %r13327 <- 0[o]
	push.64*    %r13326
	push.64*    %r13327
	call.32     %r13328 <- luaV_tostring
	br          %r13328, .L2981, .L2980

.L2980:
	load.64*    %r13329 <- 0[len]
	setne.32    %r13330 <- %r13329, $0
	br          %r13330, .L2982, .L2983

.L2982:
	load.64*    %r13331 <- 0[len]
	store.64    $0 -> 0[%r13331]
	br          .L2983

.L2983:
	phisrc.64*  %phi561(return) <- $0
	br          .L2984

.L2981:
	load.64*    %r13333 <- 0[L]
	load.64*    %r13334 <- 32[%r13333]
	load.64     %r13335 <- 120[%r13334]
	load.64*    %r13336 <- 0[L]
	load.64*    %r13337 <- 32[%r13336]
	load.64     %r13338 <- 112[%r13337]
	setae.32    %r13339 <- %r13335, %r13338
	br          %r13339, .L2985, .L2986

.L2985:
	load.64*    %r13340 <- 0[L]
	push.64*    %r13340
	call        luaC_step
	br          .L2986

.L2986:
	load.64*    %r13341 <- 0[L]
	load.32     %r13342 <- 0[idx]
	push.64*    %r13341
	push.32     %r13342
	call.64*    %r13343 <- index2adr
	store.64*   %r13343 -> 0[o]
	br          .L2979

.L2979:
	load.64*    %r13344 <- 0[len]
	setne.32    %r13345 <- %r13344, $0
	br          %r13345, .L2987, .L2988

.L2987:
	load.64*    %r13346 <- 0[o]
	load.64*    %r13347 <- 0[%r13346]
	load.64     %r13348 <- 16[%r13347]
	load.64*    %r13349 <- 0[len]
	store.64    %r13348 -> 0[%r13349]
	br          .L2988

.L2988:
	load.64*    %r13350 <- 0[o]
	load.64*    %r13351 <- 0[%r13350]
	add.64*     %r13352 <- %r13351, $0
	add.64*     %r13353 <- %r13352, $24
	ptrcast.64* %r13354 <- (64) %r13353
	phisrc.64*  %phi562(return) <- %r13354
	br          .L2984

.L2984:
	phi.64*     %r13332 <- %phi561(return), %phi562(return)
	ret.64*     %r13332


lua_objlen:
.L2989:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13355 <- 0[L]
	load.32     %r13356 <- 0[idx]
	push.64*    %r13355
	push.32     %r13356
	call.64*    %r13357 <- index2adr
	store.64*   %r13357 -> 0[o]
	load.64*    %r13358 <- 0[o]
	load.32     %r13359 <- 8[%r13358]
	switch.32   %r13359, 3 -> .L2994, 4 -> .L2991, 5 -> .L2993, 7 -> .L2992, default -> .L2995

.L2991:
	load.64*    %r13360 <- 0[o]
	load.64*    %r13361 <- 0[%r13360]
	load.64     %r13362 <- 16[%r13361]
	phisrc.64   %phi563(return) <- %r13362
	br          .L2996

.L2992:
	load.64*    %r13364 <- 0[o]
	load.64*    %r13365 <- 0[%r13364]
	load.64     %r13366 <- 32[%r13365]
	phisrc.64   %phi564(return) <- %r13366
	br          .L2996

.L2993:
	load.64*    %r13367 <- 0[o]
	load.64*    %r13368 <- 0[%r13367]
	add.64*     %r13369 <- %r13368, $0
	push.64*    %r13369
	call.32     %r13370 <- luaH_getn
	scast.64    %r13371 <- (32) %r13370
	phisrc.64   %phi565(return) <- %r13371
	br          .L2996

.L2994:
	load.64*    %r13372 <- 0[L]
	load.64*    %r13373 <- 0[o]
	push.64*    %r13372
	push.64*    %r13373
	call.32     %r13374 <- luaV_tostring
	br          %r13374, .L2997, .L2998

.L2997:
	load.64*    %r13375 <- 0[o]
	load.64*    %r13376 <- 0[%r13375]
	load.64     %r13377 <- 16[%r13376]
	phisrc.64   %phi566 <- %r13377
	br          .L2999

.L2998:
	phisrc.64   %phi567 <- $0
	br          .L2999

.L2999:
	phi.64      %r13378 <- %phi566, %phi567
	store.64    %r13378 -> 0[l]
	load.64     %r13379 <- 0[l]
	phisrc.64   %phi568(return) <- %r13379
	br          .L2996

.L2995:
	phisrc.64   %phi569(return) <- $0
	br          .L2996

.L2996:
	phi.64      %r13363 <- %phi563(return), %phi564(return), %phi565(return), %phi568(return), %phi569(return)
	ret.64      %r13363


lua_tocfunction:
.L3000:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13380 <- 0[L]
	load.32     %r13381 <- 0[idx]
	push.64*    %r13380
	push.32     %r13381
	call.64*    %r13382 <- index2adr
	store.64*   %r13382 -> 0[o]
	load.64*    %r13383 <- 0[o]
	load.32     %r13384 <- 8[%r13383]
	seteq.32    %r13385 <- %r13384, $6
	br          %r13385, .L3005, .L3002

.L3005:
	load.64*    %r13386 <- 0[o]
	load.64*    %r13387 <- 0[%r13386]
	load.8      %r13388 <- 10[%r13387]
	br          %r13388, .L3003, .L3002

.L3002:
	phisrc.64*  %phi570 <- $0
	br          .L3004

.L3003:
	load.64*    %r13389 <- 0[o]
	load.64*    %r13390 <- 0[%r13389]
	load.64*    %r13391 <- 32[%r13390]
	phisrc.64*  %phi571 <- %r13391
	br          .L3004

.L3004:
	phi.64*     %r13392 <- %phi570, %phi571
	phisrc.64*  %phi572(return) <- %r13392
	br          .L3001

.L3001:
	phi.64*     %r13393 <- %phi572(return)
	ret.64*     %r13392


lua_touserdata:
.L3006:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13394 <- 0[L]
	load.32     %r13395 <- 0[idx]
	push.64*    %r13394
	push.32     %r13395
	call.64*    %r13396 <- index2adr
	store.64*   %r13396 -> 0[o]
	load.64*    %r13397 <- 0[o]
	load.32     %r13398 <- 8[%r13397]
	switch.32   %r13398, 2 -> .L3009, 7 -> .L3008, default -> .L3010

.L3008:
	load.64*    %r13399 <- 0[o]
	load.64*    %r13400 <- 0[%r13399]
	add.64*     %r13401 <- %r13400, $0
	add.64*     %r13402 <- %r13401, $40
	cast.64*    %r13403 <- (64) %r13402
	phisrc.64*  %phi573(return) <- %r13403
	br          .L3011

.L3009:
	load.64*    %r13405 <- 0[o]
	load.64*    %r13406 <- 0[%r13405]
	phisrc.64*  %phi574(return) <- %r13406
	br          .L3011

.L3010:
	phisrc.64*  %phi575(return) <- $0
	br          .L3011

.L3011:
	phi.64*     %r13404 <- %phi573(return), %phi574(return), %phi575(return)
	ret.64*     %r13404


lua_pushnil:
.L3012:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13407 <- 0[L]
	load.64*    %r13408 <- 16[%r13407]
	store.32    $0 -> 8[%r13408]
	load.64*    %r13409 <- 0[L]
	load.64*    %r13410 <- 0[L]
	load.64*    %r13411 <- 16[%r13410]
	add.64*     %r13412 <- %r13411, $16
	store.64*   %r13412 -> 16[%r13410]
	br          .L3013

.L3013:
	ret


lua_pushnumber:
.L3014:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.f64   %arg2 -> 0[n]
	load.64*    %r13413 <- 0[L]
	load.64*    %r13414 <- 16[%r13413]
	store.64*   %r13414 -> 0[i_o]
	load.f64    %r13415 <- 0[n]
	load.64*    %r13416 <- 0[i_o]
	store.f64   %r13415 -> 0[%r13416]
	load.64*    %r13417 <- 0[i_o]
	store.32    $3 -> 8[%r13417]
	load.64*    %r13418 <- 0[L]
	load.64*    %r13419 <- 0[L]
	load.64*    %r13420 <- 16[%r13419]
	add.64*     %r13421 <- %r13420, $16
	store.64*   %r13421 -> 16[%r13419]
	br          .L3015

.L3015:
	ret


lua_pushinteger:
.L3016:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[n]
	load.64*    %r13422 <- 0[L]
	load.64*    %r13423 <- 16[%r13422]
	store.64*   %r13423 -> 0[i_o]
	load.64     %r13424 <- 0[n]
	fpcast.f64  %r13425 <- (64) %r13424
	load.64*    %r13426 <- 0[i_o]
	store.f64   %r13425 -> 0[%r13426]
	load.64*    %r13427 <- 0[i_o]
	store.32    $3 -> 8[%r13427]
	load.64*    %r13428 <- 0[L]
	load.64*    %r13429 <- 0[L]
	load.64*    %r13430 <- 16[%r13429]
	add.64*     %r13431 <- %r13430, $16
	store.64*   %r13431 -> 16[%r13429]
	br          .L3017

.L3017:
	ret


lua_pushlstring:
.L3018:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[s]
	store.64    %arg3 -> 0[len]
	load.64*    %r13432 <- 0[L]
	load.64*    %r13433 <- 32[%r13432]
	load.64     %r13434 <- 120[%r13433]
	load.64*    %r13435 <- 0[L]
	load.64*    %r13436 <- 32[%r13435]
	load.64     %r13437 <- 112[%r13436]
	setae.32    %r13438 <- %r13434, %r13437
	br          %r13438, .L3019, .L3020

.L3019:
	load.64*    %r13439 <- 0[L]
	push.64*    %r13439
	call        luaC_step
	br          .L3020

.L3020:
	load.64*    %r13440 <- 0[L]
	load.64*    %r13441 <- 16[%r13440]
	store.64*   %r13441 -> 0[i_o]
	load.64*    %r13442 <- 0[L]
	load.64*    %r13443 <- 0[s]
	load.64     %r13444 <- 0[len]
	push.64*    %r13442
	push.64*    %r13443
	push.64     %r13444
	call.64*    %r13445 <- luaS_newlstr
	ptrcast.64* %r13446 <- (64) %r13445
	load.64*    %r13447 <- 0[i_o]
	store.64*   %r13446 -> 0[%r13447]
	load.64*    %r13448 <- 0[i_o]
	store.32    $4 -> 8[%r13448]
	load.64*    %r13449 <- 0[L]
	load.64*    %r13450 <- 0[L]
	load.64*    %r13451 <- 16[%r13450]
	add.64*     %r13452 <- %r13451, $16
	store.64*   %r13452 -> 16[%r13450]
	br          .L3021

.L3021:
	ret


lua_pushstring:
.L3022:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[s]
	load.64*    %r13453 <- 0[s]
	seteq.32    %r13454 <- %r13453, $0
	br          %r13454, .L3023, .L3024

.L3023:
	load.64*    %r13455 <- 0[L]
	push.64*    %r13455
	call        lua_pushnil
	br          .L3025

.L3024:
	load.64*    %r13456 <- 0[L]
	load.64*    %r13457 <- 0[s]
	load.64*    %r13458 <- 0[s]
	push.64*    %r13458
	call.64     %r13459 <- strlen
	push.64*    %r13456
	push.64*    %r13457
	push.64     %r13459
	call        lua_pushlstring
	br          .L3025

.L3025:
	ret


lua_pushcclosure:
.L3026:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[fn]
	store.32    %arg3 -> 0[n]
	load.64*    %r13460 <- 0[L]
	load.64*    %r13461 <- 32[%r13460]
	load.64     %r13462 <- 120[%r13461]
	load.64*    %r13463 <- 0[L]
	load.64*    %r13464 <- 32[%r13463]
	load.64     %r13465 <- 112[%r13464]
	setae.32    %r13466 <- %r13462, %r13465
	br          %r13466, .L3027, .L3028

.L3027:
	load.64*    %r13467 <- 0[L]
	push.64*    %r13467
	call        luaC_step
	br          .L3028

.L3028:
	load.64*    %r13468 <- 0[L]
	load.64*    %r13469 <- 0[L]
	load.32     %r13470 <- 0[n]
	load.64*    %r13471 <- 0[L]
	push.64*    %r13471
	call.64*    %r13472 <- getcurrenv
	push.64*    %r13469
	push.32     %r13470
	push.64*    %r13472
	call.64*    %r13473 <- luaF_newCclosure
	store.64*   %r13473 -> 0[cl]
	load.64*    %r13474 <- 0[fn]
	load.64*    %r13475 <- 0[cl]
	store.64*   %r13474 -> 32[%r13475]
	load.32     %r13476 <- 0[n]
	scast.64    %r13477 <- (32) %r13476
	muls.64     %r13478 <- %r13477, $16
	load.64*    %r13479 <- 0[L]
	load.64*    %r13480 <- 16[%r13479]
	cast.64     %r13481 <- (64) %r13480
	sub.64      %r13482 <- %r13481, %r13478
	ptrcast.64* %r13483 <- (64) %r13482
	store.64*   %r13483 -> 16[%r13479]
	br          .L3032

.L3032:
	load.32     %r13484 <- 0[n]
	sub.32      %r13485 <- %r13484, $1
	store.32    %r13485 -> 0[n]
	br          %r13484, .L3029, .L3031

.L3029:
	load.64*    %r13486 <- 0[L]
	load.64*    %r13487 <- 16[%r13486]
	load.32     %r13488 <- 0[n]
	scast.64    %r13489 <- (32) %r13488
	muls.64     %r13490 <- %r13489, $16
	add.64*     %r13491 <- %r13487, %r13490
	store.64*   %r13491 -> 0[o2]
	load.64*    %r13492 <- 0[cl]
	add.64*     %r13493 <- %r13492, $0
	add.64*     %r13494 <- %r13493, $40
	load.32     %r13495 <- 0[n]
	scast.64    %r13496 <- (32) %r13495
	muls.64     %r13497 <- %r13496, $16
	add.64*     %r13498 <- %r13494, %r13497
	store.64*   %r13498 -> 0[o1]
	load.64*    %r13499 <- 0[o2]
	load.f64    %r13500 <- 0[%r13499]
	fpcast.f64  %r13501 <- (64) %r13500
	load.64*    %r13502 <- 0[o1]
	store.f64   %r13501 -> 0[%r13502]
	load.64*    %r13503 <- 0[o2]
	load.32     %r13504 <- 8[%r13503]
	scast.32    %r13505 <- (32) %r13504
	load.64*    %r13506 <- 0[o1]
	store.32    %r13505 -> 8[%r13506]
	br          .L3030

.L3030:
	br          .L3032

.L3031:
	load.64*    %r13507 <- 0[L]
	load.64*    %r13508 <- 16[%r13507]
	store.64*   %r13508 -> 0[i_o]
	load.64*    %r13509 <- 0[cl]
	ptrcast.64* %r13510 <- (64) %r13509
	load.64*    %r13511 <- 0[i_o]
	store.64*   %r13510 -> 0[%r13511]
	load.64*    %r13512 <- 0[i_o]
	store.32    $6 -> 8[%r13512]
	load.64*    %r13513 <- 0[L]
	load.64*    %r13514 <- 0[L]
	load.64*    %r13515 <- 16[%r13514]
	add.64*     %r13516 <- %r13515, $16
	store.64*   %r13516 -> 16[%r13514]
	br          .L3033

.L3033:
	ret


lua_pushboolean:
.L3034:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[b]
	load.64*    %r13517 <- 0[L]
	load.64*    %r13518 <- 16[%r13517]
	store.64*   %r13518 -> 0[i_o]
	load.32     %r13519 <- 0[b]
	setne.32    %r13520 <- %r13519, $0
	load.64*    %r13521 <- 0[i_o]
	store.32    %r13520 -> 0[%r13521]
	load.64*    %r13522 <- 0[i_o]
	store.32    $1 -> 8[%r13522]
	load.64*    %r13523 <- 0[L]
	load.64*    %r13524 <- 0[L]
	load.64*    %r13525 <- 16[%r13524]
	add.64*     %r13526 <- %r13525, $16
	store.64*   %r13526 -> 16[%r13524]
	br          .L3035

.L3035:
	ret


lua_pushthread:
.L3036:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r13527 <- 0[L]
	load.64*    %r13528 <- 16[%r13527]
	store.64*   %r13528 -> 0[i_o]
	load.64*    %r13529 <- 0[L]
	ptrcast.64* %r13530 <- (64) %r13529
	load.64*    %r13531 <- 0[i_o]
	store.64*   %r13530 -> 0[%r13531]
	load.64*    %r13532 <- 0[i_o]
	store.32    $8 -> 8[%r13532]
	load.64*    %r13533 <- 0[L]
	load.64*    %r13534 <- 0[L]
	load.64*    %r13535 <- 16[%r13534]
	add.64*     %r13536 <- %r13535, $16
	store.64*   %r13536 -> 16[%r13534]
	load.64*    %r13537 <- 0[L]
	load.64*    %r13538 <- 32[%r13537]
	load.64*    %r13539 <- 176[%r13538]
	load.64*    %r13540 <- 0[L]
	seteq.32    %r13541 <- %r13539, %r13540
	phisrc.32   %phi576(return) <- %r13541
	br          .L3037

.L3037:
	phi.32      %r13542 <- %phi576(return)
	ret.32      %r13541


lua_gettable:
.L3038:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13543 <- 0[L]
	load.32     %r13544 <- 0[idx]
	push.64*    %r13543
	push.32     %r13544
	call.64*    %r13545 <- index2adr
	store.64*   %r13545 -> 0[t]
	load.64*    %r13546 <- 0[L]
	load.64*    %r13547 <- 0[L]
	load.64*    %r13548 <- 0[t]
	load.64*    %r13549 <- 0[L]
	load.64*    %r13550 <- 16[%r13549]
	sub.64*     %r13551 <- %r13550, $16
	load.64*    %r13552 <- 0[L]
	load.64*    %r13553 <- 16[%r13552]
	sub.64*     %r13554 <- %r13553, $16
	push.64*    %r13547
	push.64*    %r13548
	push.64*    %r13551
	push.64*    %r13554
	call        luaV_gettable
	br          .L3039

.L3039:
	ret


lua_getfield:
.L3040:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[k]
	load.64*    %r13555 <- 0[L]
	load.32     %r13556 <- 0[idx]
	push.64*    %r13555
	push.32     %r13556
	call.64*    %r13557 <- index2adr
	store.64*   %r13557 -> 0[t]
	load.64*    %r13558 <- 0[L]
	symaddr.64* %r13559 <- key
	store.64*   %r13559 -> 0[i_o]
	load.64*    %r13560 <- 0[L]
	load.64*    %r13561 <- 0[k]
	load.64*    %r13562 <- 0[k]
	push.64*    %r13562
	call.64     %r13563 <- strlen
	push.64*    %r13560
	push.64*    %r13561
	push.64     %r13563
	call.64*    %r13564 <- luaS_newlstr
	ptrcast.64* %r13565 <- (64) %r13564
	load.64*    %r13566 <- 0[i_o]
	store.64*   %r13565 -> 0[%r13566]
	load.64*    %r13567 <- 0[i_o]
	store.32    $4 -> 8[%r13567]
	load.64*    %r13568 <- 0[L]
	load.64*    %r13569 <- 0[t]
	symaddr.64* %r13570 <- key
	load.64*    %r13571 <- 0[L]
	load.64*    %r13572 <- 16[%r13571]
	push.64*    %r13568
	push.64*    %r13569
	push.64*    %r13570
	push.64*    %r13572
	call        luaV_gettable
	load.64*    %r13573 <- 0[L]
	load.64*    %r13574 <- 0[L]
	load.64*    %r13575 <- 16[%r13574]
	add.64*     %r13576 <- %r13575, $16
	store.64*   %r13576 -> 16[%r13574]
	br          .L3041

.L3041:
	ret


lua_rawget:
.L3042:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13577 <- 0[L]
	load.32     %r13578 <- 0[idx]
	push.64*    %r13577
	push.32     %r13578
	call.64*    %r13579 <- index2adr
	store.64*   %r13579 -> 0[t]
	load.64*    %r13580 <- 0[L]
	load.64*    %r13581 <- 0[t]
	load.64*    %r13582 <- 0[%r13581]
	add.64*     %r13583 <- %r13582, $0
	load.64*    %r13584 <- 0[L]
	load.64*    %r13585 <- 16[%r13584]
	sub.64*     %r13586 <- %r13585, $16
	push.64*    %r13583
	push.64*    %r13586
	call.64*    %r13587 <- luaH_get
	store.64*   %r13587 -> 0[o2]
	load.64*    %r13588 <- 0[L]
	load.64*    %r13589 <- 16[%r13588]
	sub.64*     %r13590 <- %r13589, $16
	store.64*   %r13590 -> 0[o1]
	load.64*    %r13591 <- 0[o2]
	load.f64    %r13592 <- 0[%r13591]
	fpcast.f64  %r13593 <- (64) %r13592
	load.64*    %r13594 <- 0[o1]
	store.f64   %r13593 -> 0[%r13594]
	load.64*    %r13595 <- 0[o2]
	load.32     %r13596 <- 8[%r13595]
	scast.32    %r13597 <- (32) %r13596
	load.64*    %r13598 <- 0[o1]
	store.32    %r13597 -> 8[%r13598]
	br          .L3043

.L3043:
	ret


lua_rawgeti:
.L3044:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[n]
	load.64*    %r13599 <- 0[L]
	load.32     %r13600 <- 0[idx]
	push.64*    %r13599
	push.32     %r13600
	call.64*    %r13601 <- index2adr
	store.64*   %r13601 -> 0[o]
	load.64*    %r13602 <- 0[L]
	load.64*    %r13603 <- 0[o]
	load.64*    %r13604 <- 0[%r13603]
	add.64*     %r13605 <- %r13604, $0
	load.32     %r13606 <- 0[n]
	push.64*    %r13605
	push.32     %r13606
	call.64*    %r13607 <- luaH_getnum
	store.64*   %r13607 -> 0[o2]
	load.64*    %r13608 <- 0[L]
	load.64*    %r13609 <- 16[%r13608]
	store.64*   %r13609 -> 0[o1]
	load.64*    %r13610 <- 0[o2]
	load.f64    %r13611 <- 0[%r13610]
	fpcast.f64  %r13612 <- (64) %r13611
	load.64*    %r13613 <- 0[o1]
	store.f64   %r13612 -> 0[%r13613]
	load.64*    %r13614 <- 0[o2]
	load.32     %r13615 <- 8[%r13614]
	scast.32    %r13616 <- (32) %r13615
	load.64*    %r13617 <- 0[o1]
	store.32    %r13616 -> 8[%r13617]
	load.64*    %r13618 <- 0[L]
	load.64*    %r13619 <- 0[L]
	load.64*    %r13620 <- 16[%r13619]
	add.64*     %r13621 <- %r13620, $16
	store.64*   %r13621 -> 16[%r13619]
	br          .L3045

.L3045:
	ret


lua_createtable:
.L3046:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narray]
	store.32    %arg3 -> 0[nrec]
	load.64*    %r13622 <- 0[L]
	load.64*    %r13623 <- 32[%r13622]
	load.64     %r13624 <- 120[%r13623]
	load.64*    %r13625 <- 0[L]
	load.64*    %r13626 <- 32[%r13625]
	load.64     %r13627 <- 112[%r13626]
	setae.32    %r13628 <- %r13624, %r13627
	br          %r13628, .L3047, .L3048

.L3047:
	load.64*    %r13629 <- 0[L]
	push.64*    %r13629
	call        luaC_step
	br          .L3048

.L3048:
	load.64*    %r13630 <- 0[L]
	load.64*    %r13631 <- 16[%r13630]
	store.64*   %r13631 -> 0[i_o]
	load.64*    %r13632 <- 0[L]
	load.32     %r13633 <- 0[narray]
	load.32     %r13634 <- 0[nrec]
	push.64*    %r13632
	push.32     %r13633
	push.32     %r13634
	call.64*    %r13635 <- luaH_new
	ptrcast.64* %r13636 <- (64) %r13635
	load.64*    %r13637 <- 0[i_o]
	store.64*   %r13636 -> 0[%r13637]
	load.64*    %r13638 <- 0[i_o]
	store.32    $5 -> 8[%r13638]
	load.64*    %r13639 <- 0[L]
	load.64*    %r13640 <- 0[L]
	load.64*    %r13641 <- 16[%r13640]
	add.64*     %r13642 <- %r13641, $16
	store.64*   %r13642 -> 16[%r13640]
	br          .L3049

.L3049:
	ret


lua_getmetatable:
.L3050:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[objindex]
	store.64*   $0 -> 0[mt]
	load.64*    %r13643 <- 0[L]
	load.32     %r13644 <- 0[objindex]
	push.64*    %r13643
	push.32     %r13644
	call.64*    %r13645 <- index2adr
	store.64*   %r13645 -> 0[obj]
	load.64*    %r13646 <- 0[obj]
	load.32     %r13647 <- 8[%r13646]
	switch.32   %r13647, 5 -> .L3052, 7 -> .L3053, default -> .L3054

.L3052:
	load.64*    %r13648 <- 0[obj]
	load.64*    %r13649 <- 0[%r13648]
	load.64*    %r13650 <- 16[%r13649]
	store.64*   %r13650 -> 0[mt]
	br          .L3051

.L3053:
	load.64*    %r13651 <- 0[obj]
	load.64*    %r13652 <- 0[%r13651]
	load.64*    %r13653 <- 16[%r13652]
	store.64*   %r13653 -> 0[mt]
	br          .L3051

.L3054:
	load.64*    %r13654 <- 0[L]
	load.64*    %r13655 <- 32[%r13654]
	add.64*     %r13656 <- %r13655, $224
	load.64*    %r13657 <- 0[obj]
	load.32     %r13658 <- 8[%r13657]
	scast.64    %r13659 <- (32) %r13658
	muls.64     %r13660 <- %r13659, $8
	add.64*     %r13661 <- %r13656, %r13660
	load.64*    %r13662 <- 0[%r13661]
	store.64*   %r13662 -> 0[mt]
	br          .L3051

.L3051:
	load.64*    %r13663 <- 0[mt]
	seteq.32    %r13664 <- %r13663, $0
	br          %r13664, .L3055, .L3056

.L3055:
	store.32    $0 -> 0[res]
	br          .L3057

.L3056:
	load.64*    %r13665 <- 0[L]
	load.64*    %r13666 <- 16[%r13665]
	store.64*   %r13666 -> 0[i_o]
	load.64*    %r13667 <- 0[mt]
	ptrcast.64* %r13668 <- (64) %r13667
	load.64*    %r13669 <- 0[i_o]
	store.64*   %r13668 -> 0[%r13669]
	load.64*    %r13670 <- 0[i_o]
	store.32    $5 -> 8[%r13670]
	load.64*    %r13671 <- 0[L]
	load.64*    %r13672 <- 0[L]
	load.64*    %r13673 <- 16[%r13672]
	add.64*     %r13674 <- %r13673, $16
	store.64*   %r13674 -> 16[%r13672]
	store.32    $1 -> 0[res]
	br          .L3057

.L3057:
	load.32     %r13675 <- 0[res]
	phisrc.32   %phi577(return) <- %r13675
	br          .L3058

.L3058:
	phi.32      %r13676 <- %phi577(return)
	ret.32      %r13675


lua_getfenv:
.L3059:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13677 <- 0[L]
	load.32     %r13678 <- 0[idx]
	push.64*    %r13677
	push.32     %r13678
	call.64*    %r13679 <- index2adr
	store.64*   %r13679 -> 0[o]
	load.64*    %r13680 <- 0[L]
	load.64*    %r13681 <- 0[o]
	load.32     %r13682 <- 8[%r13681]
	switch.32   %r13682, 6 -> .L3061, 7 -> .L3062, 8 -> .L3063, default -> .L3064

.L3061:
	load.64*    %r13683 <- 0[L]
	load.64*    %r13684 <- 16[%r13683]
	store.64*   %r13684 -> 0[i_o]
	load.64*    %r13685 <- 0[o]
	load.64*    %r13686 <- 0[%r13685]
	load.64*    %r13687 <- 24[%r13686]
	ptrcast.64* %r13688 <- (64) %r13687
	load.64*    %r13689 <- 0[i_o]
	store.64*   %r13688 -> 0[%r13689]
	load.64*    %r13690 <- 0[i_o]
	store.32    $5 -> 8[%r13690]
	br          .L3060

.L3062:
	load.64*    %r13691 <- 0[L]
	load.64*    %r13692 <- 16[%r13691]
	store.64*   %r13692 -> 0[i_o]
	load.64*    %r13693 <- 0[o]
	load.64*    %r13694 <- 0[%r13693]
	load.64*    %r13695 <- 24[%r13694]
	ptrcast.64* %r13696 <- (64) %r13695
	load.64*    %r13697 <- 0[i_o]
	store.64*   %r13696 -> 0[%r13697]
	load.64*    %r13698 <- 0[i_o]
	store.32    $5 -> 8[%r13698]
	br          .L3060

.L3063:
	load.64*    %r13699 <- 0[o]
	load.64*    %r13700 <- 0[%r13699]
	add.64*     %r13701 <- %r13700, $0
	add.64*     %r13702 <- %r13701, $120
	store.64*   %r13702 -> 0[o2]
	load.64*    %r13703 <- 0[L]
	load.64*    %r13704 <- 16[%r13703]
	store.64*   %r13704 -> 0[o1]
	load.64*    %r13705 <- 0[o2]
	load.f64    %r13706 <- 0[%r13705]
	fpcast.f64  %r13707 <- (64) %r13706
	load.64*    %r13708 <- 0[o1]
	store.f64   %r13707 -> 0[%r13708]
	load.64*    %r13709 <- 0[o2]
	load.32     %r13710 <- 8[%r13709]
	scast.32    %r13711 <- (32) %r13710
	load.64*    %r13712 <- 0[o1]
	store.32    %r13711 -> 8[%r13712]
	br          .L3060

.L3064:
	load.64*    %r13713 <- 0[L]
	load.64*    %r13714 <- 16[%r13713]
	store.32    $0 -> 8[%r13714]
	br          .L3060

.L3060:
	load.64*    %r13715 <- 0[L]
	load.64*    %r13716 <- 0[L]
	load.64*    %r13717 <- 16[%r13716]
	add.64*     %r13718 <- %r13717, $16
	store.64*   %r13718 -> 16[%r13716]
	br          .L3065

.L3065:
	ret


lua_settable:
.L3066:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13719 <- 0[L]
	load.64*    %r13720 <- 0[L]
	load.32     %r13721 <- 0[idx]
	push.64*    %r13720
	push.32     %r13721
	call.64*    %r13722 <- index2adr
	store.64*   %r13722 -> 0[t]
	load.64*    %r13723 <- 0[L]
	load.64*    %r13724 <- 0[L]
	load.64*    %r13725 <- 0[t]
	load.64*    %r13726 <- 0[L]
	load.64*    %r13727 <- 16[%r13726]
	sub.64*     %r13728 <- %r13727, $32
	load.64*    %r13729 <- 0[L]
	load.64*    %r13730 <- 16[%r13729]
	sub.64*     %r13731 <- %r13730, $16
	push.64*    %r13724
	push.64*    %r13725
	push.64*    %r13728
	push.64*    %r13731
	call        luaV_settable
	load.64*    %r13732 <- 0[L]
	load.64*    %r13733 <- 16[%r13732]
	cast.64     %r13734 <- (64) %r13733
	sub.64      %r13735 <- %r13734, $32
	ptrcast.64* %r13736 <- (64) %r13735
	store.64*   %r13736 -> 16[%r13732]
	br          .L3067

.L3067:
	ret


lua_setfield:
.L3068:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[k]
	load.64*    %r13737 <- 0[L]
	load.64*    %r13738 <- 0[L]
	load.32     %r13739 <- 0[idx]
	push.64*    %r13738
	push.32     %r13739
	call.64*    %r13740 <- index2adr
	store.64*   %r13740 -> 0[t]
	load.64*    %r13741 <- 0[L]
	symaddr.64* %r13742 <- key
	store.64*   %r13742 -> 0[i_o]
	load.64*    %r13743 <- 0[L]
	load.64*    %r13744 <- 0[k]
	load.64*    %r13745 <- 0[k]
	push.64*    %r13745
	call.64     %r13746 <- strlen
	push.64*    %r13743
	push.64*    %r13744
	push.64     %r13746
	call.64*    %r13747 <- luaS_newlstr
	ptrcast.64* %r13748 <- (64) %r13747
	load.64*    %r13749 <- 0[i_o]
	store.64*   %r13748 -> 0[%r13749]
	load.64*    %r13750 <- 0[i_o]
	store.32    $4 -> 8[%r13750]
	load.64*    %r13751 <- 0[L]
	load.64*    %r13752 <- 0[t]
	symaddr.64* %r13753 <- key
	load.64*    %r13754 <- 0[L]
	load.64*    %r13755 <- 16[%r13754]
	sub.64*     %r13756 <- %r13755, $16
	push.64*    %r13751
	push.64*    %r13752
	push.64*    %r13753
	push.64*    %r13756
	call        luaV_settable
	load.64*    %r13757 <- 0[L]
	load.64*    %r13758 <- 16[%r13757]
	sub.64*     %r13759 <- %r13758, $16
	store.64*   %r13759 -> 16[%r13757]
	br          .L3069

.L3069:
	ret


lua_rawset:
.L3070:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r13760 <- 0[L]
	load.64*    %r13761 <- 0[L]
	load.32     %r13762 <- 0[idx]
	push.64*    %r13761
	push.32     %r13762
	call.64*    %r13763 <- index2adr
	store.64*   %r13763 -> 0[t]
	load.64*    %r13764 <- 0[L]
	load.64*    %r13765 <- 0[L]
	load.64*    %r13766 <- 16[%r13765]
	sub.64*     %r13767 <- %r13766, $16
	store.64*   %r13767 -> 0[o2]
	load.64*    %r13768 <- 0[L]
	load.64*    %r13769 <- 0[t]
	load.64*    %r13770 <- 0[%r13769]
	add.64*     %r13771 <- %r13770, $0
	load.64*    %r13772 <- 0[L]
	load.64*    %r13773 <- 16[%r13772]
	sub.64*     %r13774 <- %r13773, $32
	push.64*    %r13768
	push.64*    %r13771
	push.64*    %r13774
	call.64*    %r13775 <- luaH_set
	store.64*   %r13775 -> 0[o1]
	load.64*    %r13776 <- 0[o2]
	load.f64    %r13777 <- 0[%r13776]
	fpcast.f64  %r13778 <- (64) %r13777
	load.64*    %r13779 <- 0[o1]
	store.f64   %r13778 -> 0[%r13779]
	load.64*    %r13780 <- 0[o2]
	load.32     %r13781 <- 8[%r13780]
	scast.32    %r13782 <- (32) %r13781
	load.64*    %r13783 <- 0[o1]
	store.32    %r13782 -> 8[%r13783]
	load.64*    %r13784 <- 0[L]
	load.64*    %r13785 <- 16[%r13784]
	sub.64*     %r13786 <- %r13785, $16
	load.32     %r13787 <- 8[%r13786]
	setge.32    %r13788 <- %r13787, $4
	br          %r13788, .L3074, .L3072

.L3074:
	load.64*    %r13789 <- 0[L]
	load.64*    %r13790 <- 16[%r13789]
	sub.64*     %r13791 <- %r13790, $16
	load.64*    %r13792 <- 0[%r13791]
	load.8      %r13793 <- 9[%r13792]
	cast.32     %r13794 <- (8) %r13793
	and.32      %r13795 <- %r13794, $3
	br          %r13795, .L3073, .L3072

.L3073:
	load.64*    %r13796 <- 0[t]
	load.64*    %r13797 <- 0[%r13796]
	add.64*     %r13798 <- %r13797, $0
	ptrcast.64* %r13799 <- (64) %r13798
	load.8      %r13800 <- 9[%r13799]
	cast.32     %r13801 <- (8) %r13800
	and.32      %r13802 <- %r13801, $4
	br          %r13802, .L3071, .L3072

.L3071:
	load.64*    %r13803 <- 0[L]
	load.64*    %r13804 <- 0[t]
	load.64*    %r13805 <- 0[%r13804]
	add.64*     %r13806 <- %r13805, $0
	push.64*    %r13803
	push.64*    %r13806
	call        luaC_barrierback
	br          .L3072

.L3072:
	load.64*    %r13807 <- 0[L]
	load.64*    %r13808 <- 16[%r13807]
	cast.64     %r13809 <- (64) %r13808
	sub.64      %r13810 <- %r13809, $32
	ptrcast.64* %r13811 <- (64) %r13810
	store.64*   %r13811 -> 16[%r13807]
	br          .L3075

.L3075:
	ret


lua_rawseti:
.L3076:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[n]
	load.64*    %r13812 <- 0[L]
	load.64*    %r13813 <- 0[L]
	load.32     %r13814 <- 0[idx]
	push.64*    %r13813
	push.32     %r13814
	call.64*    %r13815 <- index2adr
	store.64*   %r13815 -> 0[o]
	load.64*    %r13816 <- 0[L]
	load.64*    %r13817 <- 0[L]
	load.64*    %r13818 <- 16[%r13817]
	sub.64*     %r13819 <- %r13818, $16
	store.64*   %r13819 -> 0[o2]
	load.64*    %r13820 <- 0[L]
	load.64*    %r13821 <- 0[o]
	load.64*    %r13822 <- 0[%r13821]
	add.64*     %r13823 <- %r13822, $0
	load.32     %r13824 <- 0[n]
	push.64*    %r13820
	push.64*    %r13823
	push.32     %r13824
	call.64*    %r13825 <- luaH_setnum
	store.64*   %r13825 -> 0[o1]
	load.64*    %r13826 <- 0[o2]
	load.f64    %r13827 <- 0[%r13826]
	fpcast.f64  %r13828 <- (64) %r13827
	load.64*    %r13829 <- 0[o1]
	store.f64   %r13828 -> 0[%r13829]
	load.64*    %r13830 <- 0[o2]
	load.32     %r13831 <- 8[%r13830]
	scast.32    %r13832 <- (32) %r13831
	load.64*    %r13833 <- 0[o1]
	store.32    %r13832 -> 8[%r13833]
	load.64*    %r13834 <- 0[L]
	load.64*    %r13835 <- 16[%r13834]
	sub.64*     %r13836 <- %r13835, $16
	load.32     %r13837 <- 8[%r13836]
	setge.32    %r13838 <- %r13837, $4
	br          %r13838, .L3080, .L3078

.L3080:
	load.64*    %r13839 <- 0[L]
	load.64*    %r13840 <- 16[%r13839]
	sub.64*     %r13841 <- %r13840, $16
	load.64*    %r13842 <- 0[%r13841]
	load.8      %r13843 <- 9[%r13842]
	cast.32     %r13844 <- (8) %r13843
	and.32      %r13845 <- %r13844, $3
	br          %r13845, .L3079, .L3078

.L3079:
	load.64*    %r13846 <- 0[o]
	load.64*    %r13847 <- 0[%r13846]
	add.64*     %r13848 <- %r13847, $0
	ptrcast.64* %r13849 <- (64) %r13848
	load.8      %r13850 <- 9[%r13849]
	cast.32     %r13851 <- (8) %r13850
	and.32      %r13852 <- %r13851, $4
	br          %r13852, .L3077, .L3078

.L3077:
	load.64*    %r13853 <- 0[L]
	load.64*    %r13854 <- 0[o]
	load.64*    %r13855 <- 0[%r13854]
	add.64*     %r13856 <- %r13855, $0
	push.64*    %r13853
	push.64*    %r13856
	call        luaC_barrierback
	br          .L3078

.L3078:
	load.64*    %r13857 <- 0[L]
	load.64*    %r13858 <- 16[%r13857]
	sub.64*     %r13859 <- %r13858, $16
	store.64*   %r13859 -> 16[%r13857]
	br          .L3081

.L3081:
	ret


lua_setmetatable:
.L3082:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[objindex]
	load.64*    %r13860 <- 0[L]
	load.64*    %r13861 <- 0[L]
	load.32     %r13862 <- 0[objindex]
	push.64*    %r13861
	push.32     %r13862
	call.64*    %r13863 <- index2adr
	store.64*   %r13863 -> 0[obj]
	load.64*    %r13864 <- 0[L]
	load.64*    %r13865 <- 0[L]
	load.64*    %r13866 <- 16[%r13865]
	sub.64*     %r13867 <- %r13866, $16
	load.32     %r13868 <- 8[%r13867]
	seteq.32    %r13869 <- %r13868, $0
	br          %r13869, .L3083, .L3084

.L3083:
	store.64*   $0 -> 0[mt]
	br          .L3085

.L3084:
	load.64*    %r13870 <- 0[L]
	load.64*    %r13871 <- 0[L]
	load.64*    %r13872 <- 16[%r13871]
	sub.64*     %r13873 <- %r13872, $16
	load.64*    %r13874 <- 0[%r13873]
	add.64*     %r13875 <- %r13874, $0
	store.64*   %r13875 -> 0[mt]
	br          .L3085

.L3085:
	load.64*    %r13876 <- 0[obj]
	load.32     %r13877 <- 8[%r13876]
	switch.32   %r13877, 5 -> .L3087, 7 -> .L3088, default -> .L3089

.L3087:
	load.64*    %r13878 <- 0[mt]
	load.64*    %r13879 <- 0[obj]
	load.64*    %r13880 <- 0[%r13879]
	store.64*   %r13878 -> 16[%r13880]
	load.64*    %r13881 <- 0[mt]
	br          %r13881, .L3090, .L3091

.L3090:
	load.64*    %r13882 <- 0[mt]
	ptrcast.64* %r13883 <- (64) %r13882
	load.8      %r13884 <- 9[%r13883]
	cast.32     %r13885 <- (8) %r13884
	and.32      %r13886 <- %r13885, $3
	br          %r13886, .L3094, .L3093

.L3094:
	load.64*    %r13887 <- 0[obj]
	load.64*    %r13888 <- 0[%r13887]
	add.64*     %r13889 <- %r13888, $0
	ptrcast.64* %r13890 <- (64) %r13889
	load.8      %r13891 <- 9[%r13890]
	cast.32     %r13892 <- (8) %r13891
	and.32      %r13893 <- %r13892, $4
	br          %r13893, .L3092, .L3093

.L3092:
	load.64*    %r13894 <- 0[L]
	load.64*    %r13895 <- 0[obj]
	load.64*    %r13896 <- 0[%r13895]
	add.64*     %r13897 <- %r13896, $0
	push.64*    %r13894
	push.64*    %r13897
	call        luaC_barrierback
	br          .L3093

.L3093:
	br          .L3091

.L3091:
	br          .L3086

.L3088:
	load.64*    %r13898 <- 0[mt]
	load.64*    %r13899 <- 0[obj]
	load.64*    %r13900 <- 0[%r13899]
	store.64*   %r13898 -> 16[%r13900]
	load.64*    %r13901 <- 0[mt]
	br          %r13901, .L3095, .L3096

.L3095:
	load.64*    %r13902 <- 0[mt]
	ptrcast.64* %r13903 <- (64) %r13902
	load.8      %r13904 <- 9[%r13903]
	cast.32     %r13905 <- (8) %r13904
	and.32      %r13906 <- %r13905, $3
	br          %r13906, .L3099, .L3098

.L3099:
	load.64*    %r13907 <- 0[obj]
	load.64*    %r13908 <- 0[%r13907]
	add.64*     %r13909 <- %r13908, $0
	ptrcast.64* %r13910 <- (64) %r13909
	load.8      %r13911 <- 9[%r13910]
	cast.32     %r13912 <- (8) %r13911
	and.32      %r13913 <- %r13912, $4
	br          %r13913, .L3097, .L3098

.L3097:
	load.64*    %r13914 <- 0[L]
	load.64*    %r13915 <- 0[obj]
	load.64*    %r13916 <- 0[%r13915]
	add.64*     %r13917 <- %r13916, $0
	ptrcast.64* %r13918 <- (64) %r13917
	load.64*    %r13919 <- 0[mt]
	ptrcast.64* %r13920 <- (64) %r13919
	push.64*    %r13914
	push.64*    %r13918
	push.64*    %r13920
	call        luaC_barrierf
	br          .L3098

.L3098:
	br          .L3096

.L3096:
	br          .L3086

.L3089:
	load.64*    %r13921 <- 0[mt]
	load.64*    %r13922 <- 0[L]
	load.64*    %r13923 <- 32[%r13922]
	add.64*     %r13924 <- %r13923, $224
	load.64*    %r13925 <- 0[obj]
	load.32     %r13926 <- 8[%r13925]
	scast.64    %r13927 <- (32) %r13926
	muls.64     %r13928 <- %r13927, $8
	add.64*     %r13929 <- %r13924, %r13928
	store.64*   %r13921 -> 0[%r13929]
	br          .L3086

.L3086:
	load.64*    %r13930 <- 0[L]
	load.64*    %r13931 <- 16[%r13930]
	sub.64*     %r13932 <- %r13931, $16
	store.64*   %r13932 -> 16[%r13930]
	phisrc.32   %phi578(return) <- $1
	br          .L3100

.L3100:
	phi.32      %r13933 <- %phi578(return)
	ret.32      $1


lua_setfenv:
.L3101:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    $1 -> 0[res]
	load.64*    %r13934 <- 0[L]
	load.64*    %r13935 <- 0[L]
	load.32     %r13936 <- 0[idx]
	push.64*    %r13935
	push.32     %r13936
	call.64*    %r13937 <- index2adr
	store.64*   %r13937 -> 0[o]
	load.64*    %r13938 <- 0[L]
	load.64*    %r13939 <- 0[L]
	load.64*    %r13940 <- 0[o]
	load.32     %r13941 <- 8[%r13940]
	switch.32   %r13941, 6 -> .L3103, 7 -> .L3104, 8 -> .L3105, default -> .L3106

.L3103:
	load.64*    %r13942 <- 0[L]
	load.64*    %r13943 <- 16[%r13942]
	sub.64*     %r13944 <- %r13943, $16
	load.64*    %r13945 <- 0[%r13944]
	add.64*     %r13946 <- %r13945, $0
	load.64*    %r13947 <- 0[o]
	load.64*    %r13948 <- 0[%r13947]
	store.64*   %r13946 -> 24[%r13948]
	br          .L3102

.L3104:
	load.64*    %r13949 <- 0[L]
	load.64*    %r13950 <- 16[%r13949]
	sub.64*     %r13951 <- %r13950, $16
	load.64*    %r13952 <- 0[%r13951]
	add.64*     %r13953 <- %r13952, $0
	load.64*    %r13954 <- 0[o]
	load.64*    %r13955 <- 0[%r13954]
	store.64*   %r13953 -> 24[%r13955]
	br          .L3102

.L3105:
	load.64*    %r13956 <- 0[o]
	load.64*    %r13957 <- 0[%r13956]
	add.64*     %r13958 <- %r13957, $0
	add.64*     %r13959 <- %r13958, $120
	store.64*   %r13959 -> 0[i_o]
	load.64*    %r13960 <- 0[L]
	load.64*    %r13961 <- 16[%r13960]
	sub.64*     %r13962 <- %r13961, $16
	load.64*    %r13963 <- 0[%r13962]
	add.64*     %r13964 <- %r13963, $0
	ptrcast.64* %r13965 <- (64) %r13964
	load.64*    %r13966 <- 0[i_o]
	store.64*   %r13965 -> 0[%r13966]
	load.64*    %r13967 <- 0[i_o]
	store.32    $5 -> 8[%r13967]
	br          .L3102

.L3106:
	store.32    $0 -> 0[res]
	br          .L3102

.L3102:
	load.32     %r13968 <- 0[res]
	br          %r13968, .L3107, .L3108

.L3107:
	load.64*    %r13969 <- 0[L]
	load.64*    %r13970 <- 16[%r13969]
	sub.64*     %r13971 <- %r13970, $16
	load.64*    %r13972 <- 0[%r13971]
	add.64*     %r13973 <- %r13972, $0
	ptrcast.64* %r13974 <- (64) %r13973
	load.8      %r13975 <- 9[%r13974]
	cast.32     %r13976 <- (8) %r13975
	and.32      %r13977 <- %r13976, $3
	br          %r13977, .L3111, .L3110

.L3111:
	load.64*    %r13978 <- 0[o]
	load.64*    %r13979 <- 0[%r13978]
	ptrcast.64* %r13980 <- (64) %r13979
	load.8      %r13981 <- 9[%r13980]
	cast.32     %r13982 <- (8) %r13981
	and.32      %r13983 <- %r13982, $4
	br          %r13983, .L3109, .L3110

.L3109:
	load.64*    %r13984 <- 0[L]
	load.64*    %r13985 <- 0[o]
	load.64*    %r13986 <- 0[%r13985]
	ptrcast.64* %r13987 <- (64) %r13986
	load.64*    %r13988 <- 0[L]
	load.64*    %r13989 <- 16[%r13988]
	sub.64*     %r13990 <- %r13989, $16
	load.64*    %r13991 <- 0[%r13990]
	add.64*     %r13992 <- %r13991, $0
	ptrcast.64* %r13993 <- (64) %r13992
	push.64*    %r13984
	push.64*    %r13987
	push.64*    %r13993
	call        luaC_barrierf
	br          .L3110

.L3110:
	br          .L3108

.L3108:
	load.64*    %r13994 <- 0[L]
	load.64*    %r13995 <- 16[%r13994]
	sub.64*     %r13996 <- %r13995, $16
	store.64*   %r13996 -> 16[%r13994]
	load.32     %r13997 <- 0[res]
	phisrc.32   %phi579(return) <- %r13997
	br          .L3112

.L3112:
	phi.32      %r13998 <- %phi579(return)
	ret.32      %r13997


lua_call:
.L3113:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nargs]
	store.32    %arg3 -> 0[nresults]
	load.64*    %r13999 <- 0[L]
	load.64*    %r14000 <- 0[L]
	load.64*    %r14001 <- 0[L]
	load.64*    %r14002 <- 16[%r14001]
	load.32     %r14003 <- 0[nargs]
	add.32      %r14004 <- %r14003, $1
	scast.64    %r14005 <- (32) %r14004
	muls.64     %r14006 <- %r14005, $16
	sub.64*     %r14007 <- %r14002, %r14006
	store.64*   %r14007 -> 0[func]
	load.64*    %r14008 <- 0[L]
	load.64*    %r14009 <- 0[func]
	load.32     %r14010 <- 0[nresults]
	push.64*    %r14008
	push.64*    %r14009
	push.32     %r14010
	call        luaD_call
	load.32     %r14011 <- 0[nresults]
	seteq.32    %r14012 <- %r14011, $0xffffffff
	br          %r14012, .L3116, .L3115

.L3116:
	load.64*    %r14013 <- 0[L]
	load.64*    %r14014 <- 16[%r14013]
	load.64*    %r14015 <- 0[L]
	load.64*    %r14016 <- 40[%r14015]
	load.64*    %r14017 <- 16[%r14016]
	setae.32    %r14018 <- %r14014, %r14017
	br          %r14018, .L3114, .L3115

.L3114:
	load.64*    %r14019 <- 0[L]
	load.64*    %r14020 <- 16[%r14019]
	load.64*    %r14021 <- 0[L]
	load.64*    %r14022 <- 40[%r14021]
	store.64*   %r14020 -> 16[%r14022]
	br          .L3115

.L3115:
	ret


f_call:
.L3117:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	load.64*    %r14023 <- 0[ud]
	ptrcast.64* %r14024 <- (64) %r14023
	store.64*   %r14024 -> 0[c]
	load.64*    %r14025 <- 0[L]
	load.64*    %r14026 <- 0[c]
	load.64*    %r14027 <- 0[%r14026]
	load.64*    %r14028 <- 0[c]
	load.32     %r14029 <- 8[%r14028]
	push.64*    %r14025
	push.64*    %r14027
	push.32     %r14029
	call        luaD_call
	br          .L3118

.L3118:
	ret


lua_pcall:
.L3119:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[nargs]
	store.32    %arg3 -> 0[nresults]
	store.32    %arg4 -> 0[errfunc]
	load.64*    %r14030 <- 0[L]
	load.64*    %r14031 <- 0[L]
	load.32     %r14032 <- 0[errfunc]
	seteq.32    %r14033 <- %r14032, $0
	br          %r14033, .L3120, .L3121

.L3120:
	store.64    $0 -> 0[func]
	br          .L3122

.L3121:
	load.64*    %r14034 <- 0[L]
	load.32     %r14035 <- 0[errfunc]
	push.64*    %r14034
	push.32     %r14035
	call.64*    %r14036 <- index2adr
	store.64*   %r14036 -> 0[o]
	load.64*    %r14037 <- 0[L]
	load.64*    %r14038 <- 0[o]
	ptrcast.64* %r14039 <- (64) %r14038
	load.64*    %r14040 <- 0[L]
	load.64*    %r14041 <- 64[%r14040]
	ptrcast.64* %r14042 <- (64) %r14041
	sub.64      %r14043 <- %r14039, %r14042
	store.64    %r14043 -> 0[func]
	br          .L3122

.L3122:
	load.64*    %r14044 <- 0[L]
	load.64*    %r14045 <- 16[%r14044]
	load.32     %r14046 <- 0[nargs]
	add.32      %r14047 <- %r14046, $1
	scast.64    %r14048 <- (32) %r14047
	muls.64     %r14049 <- %r14048, $16
	sub.64*     %r14050 <- %r14045, %r14049
	store.64*   %r14050 -> 0[c]
	load.32     %r14051 <- 0[nresults]
	store.32    %r14051 -> 8[c]
	load.64*    %r14052 <- 0[L]
	symaddr.64* %r14053 <- f_call
	symaddr.64* %r14054 <- c
	cast.64*    %r14055 <- (64) %r14054
	load.64*    %r14056 <- 0[c]
	ptrcast.64* %r14057 <- (64) %r14056
	load.64*    %r14058 <- 0[L]
	load.64*    %r14059 <- 64[%r14058]
	ptrcast.64* %r14060 <- (64) %r14059
	sub.64      %r14061 <- %r14057, %r14060
	load.64     %r14062 <- 0[func]
	push.64*    %r14052
	push.64*    %r14053
	push.64*    %r14055
	push.64     %r14061
	push.64     %r14062
	call.32     %r14063 <- luaD_pcall
	store.32    %r14063 -> 0[status]
	load.32     %r14064 <- 0[nresults]
	seteq.32    %r14065 <- %r14064, $0xffffffff
	br          %r14065, .L3125, .L3124

.L3125:
	load.64*    %r14066 <- 0[L]
	load.64*    %r14067 <- 16[%r14066]
	load.64*    %r14068 <- 0[L]
	load.64*    %r14069 <- 40[%r14068]
	load.64*    %r14070 <- 16[%r14069]
	setae.32    %r14071 <- %r14067, %r14070
	br          %r14071, .L3123, .L3124

.L3123:
	load.64*    %r14072 <- 0[L]
	load.64*    %r14073 <- 16[%r14072]
	load.64*    %r14074 <- 0[L]
	load.64*    %r14075 <- 40[%r14074]
	store.64*   %r14073 -> 16[%r14075]
	br          .L3124

.L3124:
	load.32     %r14076 <- 0[status]
	phisrc.32   %phi580(return) <- %r14076
	br          .L3126

.L3126:
	phi.32      %r14077 <- %phi580(return)
	ret.32      %r14076


lua_load:
.L3127:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[reader]
	store.64*   %arg3 -> 0[data]
	store.64*   %arg4 -> 0[chunkname]
	load.64*    %r14078 <- 0[chunkname]
	br          %r14078, .L3129, .L3128

.L3128:
	symaddr.64* %r14079 <- <anon symbol:0x62d001456170>
	store.64*   %r14079 -> 0[chunkname]
	br          .L3129

.L3129:
	load.64*    %r14080 <- 0[L]
	symaddr.64* %r14081 <- z
	load.64*    %r14082 <- 0[reader]
	load.64*    %r14083 <- 0[data]
	push.64*    %r14080
	push.64*    %r14081
	push.64*    %r14082
	push.64*    %r14083
	call        luaZ_init
	load.64*    %r14084 <- 0[L]
	symaddr.64* %r14085 <- z
	load.64*    %r14086 <- 0[chunkname]
	push.64*    %r14084
	push.64*    %r14085
	push.64*    %r14086
	call.32     %r14087 <- luaD_protectedparser
	store.32    %r14087 -> 0[status]
	load.32     %r14088 <- 0[status]
	phisrc.32   %phi581(return) <- %r14088
	br          .L3130

.L3130:
	phi.32      %r14089 <- %phi581(return)
	ret.32      %r14088


lua_error:
.L3131:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14090 <- 0[L]
	load.64*    %r14091 <- 0[L]
	push.64*    %r14091
	call        luaG_errormsg
	phisrc.32   %phi582(return) <- $0
	br          .L3132

.L3132:
	phi.32      %r14092 <- %phi582(return)
	ret.32      $0


lua_next:
.L3133:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r14093 <- 0[L]
	load.32     %r14094 <- 0[idx]
	push.64*    %r14093
	push.32     %r14094
	call.64*    %r14095 <- index2adr
	store.64*   %r14095 -> 0[t]
	load.64*    %r14096 <- 0[L]
	load.64*    %r14097 <- 0[L]
	load.64*    %r14098 <- 0[t]
	load.64*    %r14099 <- 0[%r14098]
	add.64*     %r14100 <- %r14099, $0
	load.64*    %r14101 <- 0[L]
	load.64*    %r14102 <- 16[%r14101]
	sub.64*     %r14103 <- %r14102, $16
	push.64*    %r14097
	push.64*    %r14100
	push.64*    %r14103
	call.32     %r14104 <- luaH_next
	store.32    %r14104 -> 0[more]
	load.32     %r14105 <- 0[more]
	br          %r14105, .L3134, .L3135

.L3134:
	load.64*    %r14106 <- 0[L]
	load.64*    %r14107 <- 0[L]
	load.64*    %r14108 <- 16[%r14107]
	add.64*     %r14109 <- %r14108, $16
	store.64*   %r14109 -> 16[%r14107]
	br          .L3136

.L3135:
	load.64*    %r14110 <- 0[L]
	load.64*    %r14111 <- 16[%r14110]
	cast.64     %r14112 <- (64) %r14111
	sub.64      %r14113 <- %r14112, $16
	ptrcast.64* %r14114 <- (64) %r14113
	store.64*   %r14114 -> 16[%r14110]
	br          .L3136

.L3136:
	load.32     %r14115 <- 0[more]
	phisrc.32   %phi583(return) <- %r14115
	br          .L3137

.L3137:
	phi.32      %r14116 <- %phi583(return)
	ret.32      %r14115


lua_concat:
.L3138:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[n]
	load.64*    %r14117 <- 0[L]
	load.32     %r14118 <- 0[n]
	setge.32    %r14119 <- %r14118, $2
	br          %r14119, .L3139, .L3140

.L3139:
	load.64*    %r14120 <- 0[L]
	load.64*    %r14121 <- 32[%r14120]
	load.64     %r14122 <- 120[%r14121]
	load.64*    %r14123 <- 0[L]
	load.64*    %r14124 <- 32[%r14123]
	load.64     %r14125 <- 112[%r14124]
	setae.32    %r14126 <- %r14122, %r14125
	br          %r14126, .L3141, .L3142

.L3141:
	load.64*    %r14127 <- 0[L]
	push.64*    %r14127
	call        luaC_step
	br          .L3142

.L3142:
	load.64*    %r14128 <- 0[L]
	load.32     %r14129 <- 0[n]
	load.64*    %r14130 <- 0[L]
	load.64*    %r14131 <- 16[%r14130]
	load.64*    %r14132 <- 0[L]
	load.64*    %r14133 <- 24[%r14132]
	sub.64      %r14134 <- %r14131, %r14133
	divs.64     %r14135 <- %r14134, $16
	scast.32    %r14136 <- (64) %r14135
	sub.32      %r14137 <- %r14136, $1
	push.64*    %r14128
	push.32     %r14129
	push.32     %r14137
	call        luaV_concat
	load.32     %r14138 <- 0[n]
	sub.32      %r14139 <- %r14138, $1
	scast.64    %r14140 <- (32) %r14139
	muls.64     %r14141 <- %r14140, $16
	load.64*    %r14142 <- 0[L]
	load.64*    %r14143 <- 16[%r14142]
	cast.64     %r14144 <- (64) %r14143
	sub.64      %r14145 <- %r14144, %r14141
	ptrcast.64* %r14146 <- (64) %r14145
	store.64*   %r14146 -> 16[%r14142]
	br          .L3143

.L3140:
	load.32     %r14147 <- 0[n]
	seteq.32    %r14148 <- %r14147, $0
	br          %r14148, .L3144, .L3145

.L3144:
	load.64*    %r14149 <- 0[L]
	load.64*    %r14150 <- 16[%r14149]
	store.64*   %r14150 -> 0[i_o]
	load.64*    %r14151 <- 0[L]
	symaddr.64* %r14152 <- <anon symbol:0x62d001457bb8>
	push.64*    %r14151
	push.64*    %r14152
	push.64     $0
	call.64*    %r14153 <- luaS_newlstr
	ptrcast.64* %r14154 <- (64) %r14153
	load.64*    %r14155 <- 0[i_o]
	store.64*   %r14154 -> 0[%r14155]
	load.64*    %r14156 <- 0[i_o]
	store.32    $4 -> 8[%r14156]
	load.64*    %r14157 <- 0[L]
	load.64*    %r14158 <- 0[L]
	load.64*    %r14159 <- 16[%r14158]
	add.64*     %r14160 <- %r14159, $16
	store.64*   %r14160 -> 16[%r14158]
	br          .L3145

.L3145:
	br          .L3143

.L3143:
	ret


lua_newuserdata:
.L3146:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64    %arg2 -> 0[size]
	load.64*    %r14161 <- 0[L]
	load.64*    %r14162 <- 32[%r14161]
	load.64     %r14163 <- 120[%r14162]
	load.64*    %r14164 <- 0[L]
	load.64*    %r14165 <- 32[%r14164]
	load.64     %r14166 <- 112[%r14165]
	setae.32    %r14167 <- %r14163, %r14166
	br          %r14167, .L3147, .L3148

.L3147:
	load.64*    %r14168 <- 0[L]
	push.64*    %r14168
	call        luaC_step
	br          .L3148

.L3148:
	load.64*    %r14169 <- 0[L]
	load.64     %r14170 <- 0[size]
	load.64*    %r14171 <- 0[L]
	push.64*    %r14171
	call.64*    %r14172 <- getcurrenv
	push.64*    %r14169
	push.64     %r14170
	push.64*    %r14172
	call.64*    %r14173 <- luaS_newudata
	store.64*   %r14173 -> 0[u]
	load.64*    %r14174 <- 0[L]
	load.64*    %r14175 <- 16[%r14174]
	store.64*   %r14175 -> 0[i_o]
	load.64*    %r14176 <- 0[u]
	ptrcast.64* %r14177 <- (64) %r14176
	load.64*    %r14178 <- 0[i_o]
	store.64*   %r14177 -> 0[%r14178]
	load.64*    %r14179 <- 0[i_o]
	store.32    $7 -> 8[%r14179]
	load.64*    %r14180 <- 0[L]
	load.64*    %r14181 <- 0[L]
	load.64*    %r14182 <- 16[%r14181]
	add.64*     %r14183 <- %r14182, $16
	store.64*   %r14183 -> 16[%r14181]
	load.64*    %r14184 <- 0[u]
	add.64*     %r14185 <- %r14184, $40
	cast.64*    %r14186 <- (64) %r14185
	phisrc.64*  %phi584(return) <- %r14186
	br          .L3149

.L3149:
	phi.64*     %r14187 <- %phi584(return)
	ret.64*     %r14186


luaL_argerror:
.L3150:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[extramsg]
	load.64*    %r14188 <- 0[L]
	symaddr.64* %r14189 <- ar
	push.64*    %r14188
	push.32     $0
	push.64*    %r14189
	call.32     %r14190 <- lua_getstack
	br          %r14190, .L3152, .L3151

.L3151:
	load.64*    %r14191 <- 0[L]
	symaddr.64* %r14192 <- <anon symbol:0x62d001465ba8>
	load.32     %r14193 <- 0[narg]
	load.64*    %r14194 <- 0[extramsg]
	push.64*    %r14191
	push.64*    %r14192
	push.32     %r14193
	push.64*    %r14194
	call.32     %r14195 <- luaL_error
	phisrc.32   %phi585(return) <- %r14195
	br          .L3153

.L3152:
	load.64*    %r14197 <- 0[L]
	symaddr.64* %r14198 <- <anon symbol:0x62d001465f48>
	symaddr.64* %r14199 <- ar
	push.64*    %r14197
	push.64*    %r14198
	push.64*    %r14199
	call.32     %r14200 <- lua_getinfo
	load.64*    %r14201 <- 16[ar]
	symaddr.64* %r14202 <- <anon symbol:0x62d0014665a0>
	push.64*    %r14201
	push.64*    %r14202
	call.32     %r14203 <- strcmp
	seteq.32    %r14204 <- %r14203, $0
	br          %r14204, .L3154, .L3155

.L3154:
	load.32     %r14205 <- 0[narg]
	sub.32      %r14206 <- %r14205, $1
	store.32    %r14206 -> 0[narg]
	load.32     %r14207 <- 0[narg]
	seteq.32    %r14208 <- %r14207, $0
	br          %r14208, .L3156, .L3157

.L3156:
	load.64*    %r14209 <- 0[L]
	symaddr.64* %r14210 <- <anon symbol:0x62d001466940>
	load.64*    %r14211 <- 8[ar]
	load.64*    %r14212 <- 0[extramsg]
	push.64*    %r14209
	push.64*    %r14210
	push.64*    %r14211
	push.64*    %r14212
	call.32     %r14213 <- luaL_error
	phisrc.32   %phi586(return) <- %r14213
	br          .L3153

.L3157:
	br          .L3155

.L3155:
	load.64*    %r14214 <- 8[ar]
	seteq.32    %r14215 <- %r14214, $0
	br          %r14215, .L3158, .L3159

.L3158:
	symaddr.64* %r14216 <- <anon symbol:0x62d001466f98>
	store.64*   %r14216 -> 8[ar]
	br          .L3159

.L3159:
	load.64*    %r14217 <- 0[L]
	symaddr.64* %r14218 <- <anon symbol:0x62d001467338>
	load.32     %r14219 <- 0[narg]
	load.64*    %r14220 <- 8[ar]
	load.64*    %r14221 <- 0[extramsg]
	push.64*    %r14217
	push.64*    %r14218
	push.32     %r14219
	push.64*    %r14220
	push.64*    %r14221
	call.32     %r14222 <- luaL_error
	phisrc.32   %phi587(return) <- %r14222
	br          .L3153

.L3153:
	phi.32      %r14196 <- %phi585(return), %phi586(return), %phi587(return)
	ret.32      %r14196


luaL_typerror:
.L3160:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[tname]
	load.64*    %r14223 <- 0[L]
	symaddr.64* %r14224 <- <anon symbol:0x62d001467e18>
	load.64*    %r14225 <- 0[tname]
	load.64*    %r14226 <- 0[L]
	load.64*    %r14227 <- 0[L]
	load.32     %r14228 <- 0[narg]
	push.64*    %r14227
	push.32     %r14228
	call.32     %r14229 <- lua_type
	push.64*    %r14226
	push.32     %r14229
	call.64*    %r14230 <- lua_typename
	push.64*    %r14223
	push.64*    %r14224
	push.64*    %r14225
	push.64*    %r14230
	call.64*    %r14231 <- lua_pushfstring
	store.64*   %r14231 -> 0[msg]
	load.64*    %r14232 <- 0[L]
	load.32     %r14233 <- 0[narg]
	load.64*    %r14234 <- 0[msg]
	push.64*    %r14232
	push.32     %r14233
	push.64*    %r14234
	call.32     %r14235 <- luaL_argerror
	phisrc.32   %phi588(return) <- %r14235
	br          .L3161

.L3161:
	phi.32      %r14236 <- %phi588(return)
	ret.32      %r14235


tag_error:
.L3162:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.32    %arg3 -> 0[tag]
	load.64*    %r14237 <- 0[L]
	load.32     %r14238 <- 0[narg]
	load.64*    %r14239 <- 0[L]
	load.32     %r14240 <- 0[tag]
	push.64*    %r14239
	push.32     %r14240
	call.64*    %r14241 <- lua_typename
	push.64*    %r14237
	push.32     %r14238
	push.64*    %r14241
	call.32     %r14242 <- luaL_typerror
	br          .L3163

.L3163:
	ret


luaL_where:
.L3164:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[level]
	load.64*    %r14243 <- 0[L]
	load.32     %r14244 <- 0[level]
	symaddr.64* %r14245 <- ar
	push.64*    %r14243
	push.32     %r14244
	push.64*    %r14245
	call.32     %r14246 <- lua_getstack
	br          %r14246, .L3165, .L3166

.L3165:
	load.64*    %r14247 <- 0[L]
	symaddr.64* %r14248 <- <anon symbol:0x62d001468388>
	symaddr.64* %r14249 <- ar
	push.64*    %r14247
	push.64*    %r14248
	push.64*    %r14249
	call.32     %r14250 <- lua_getinfo
	load.32     %r14251 <- 40[ar]
	setgt.32    %r14252 <- %r14251, $0
	br          %r14252, .L3167, .L3168

.L3167:
	load.64*    %r14253 <- 0[L]
	symaddr.64* %r14254 <- <anon symbol:0x62d0014689e0>
	symaddr.64* %r14255 <- ar
	add.64*     %r14256 <- %r14255, $56
	load.32     %r14257 <- 40[ar]
	push.64*    %r14253
	push.64*    %r14254
	push.64*    %r14256
	push.32     %r14257
	call.64*    %r14258 <- lua_pushfstring
	br          .L3169

.L3168:
	br          .L3166

.L3166:
	load.64*    %r14259 <- 0[L]
	symaddr.64* %r14260 <- <anon symbol:0x62d001469120>
	push.64*    %r14259
	push.64*    %r14260
	push.64     $0
	call        lua_pushlstring
	br          .L3169

.L3169:
	ret


luaL_newmetatable:
.L3170:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[tname]
	load.64*    %r14261 <- 0[L]
	load.64*    %r14262 <- 0[tname]
	push.64*    %r14261
	push.32     $0xffffd8f0
	push.64*    %r14262
	call        lua_getfield
	load.64*    %r14263 <- 0[L]
	push.64*    %r14263
	push.32     $0xffffffff
	call.32     %r14264 <- lua_type
	seteq.32    %r14265 <- %r14264, $0
	br          %r14265, .L3172, .L3171

.L3171:
	phisrc.32   %phi589(return) <- $0
	br          .L3173

.L3172:
	load.64*    %r14267 <- 0[L]
	push.64*    %r14267
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14268 <- 0[L]
	push.64*    %r14268
	push.32     $0
	push.32     $0
	call        lua_createtable
	load.64*    %r14269 <- 0[L]
	push.64*    %r14269
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r14270 <- 0[L]
	load.64*    %r14271 <- 0[tname]
	push.64*    %r14270
	push.32     $0xffffd8f0
	push.64*    %r14271
	call        lua_setfield
	phisrc.32   %phi590(return) <- $1
	br          .L3173

.L3173:
	phi.32      %r14266 <- %phi589(return), %phi590(return)
	ret.32      %r14266


luaL_checkudata:
.L3174:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[tname]
	load.64*    %r14272 <- 0[L]
	load.32     %r14273 <- 0[ud]
	push.64*    %r14272
	push.32     %r14273
	call.64*    %r14274 <- lua_touserdata
	store.64*   %r14274 -> 0[p]
	load.64*    %r14275 <- 0[p]
	setne.32    %r14276 <- %r14275, $0
	br          %r14276, .L3175, .L3176

.L3175:
	load.64*    %r14277 <- 0[L]
	load.32     %r14278 <- 0[ud]
	push.64*    %r14277
	push.32     %r14278
	call.32     %r14279 <- lua_getmetatable
	br          %r14279, .L3177, .L3178

.L3177:
	load.64*    %r14280 <- 0[L]
	load.64*    %r14281 <- 0[tname]
	push.64*    %r14280
	push.32     $0xffffd8f0
	push.64*    %r14281
	call        lua_getfield
	load.64*    %r14282 <- 0[L]
	push.64*    %r14282
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r14283 <- lua_rawequal
	br          %r14283, .L3179, .L3180

.L3179:
	load.64*    %r14284 <- 0[L]
	push.64*    %r14284
	push.32     $0xfffffffd
	call        lua_settop
	load.64*    %r14285 <- 0[p]
	phisrc.64*  %phi591(return) <- %r14285
	br          .L3181

.L3180:
	br          .L3178

.L3178:
	br          .L3176

.L3176:
	load.64*    %r14287 <- 0[L]
	load.32     %r14288 <- 0[ud]
	load.64*    %r14289 <- 0[tname]
	push.64*    %r14287
	push.32     %r14288
	push.64*    %r14289
	call.32     %r14290 <- luaL_typerror
	phisrc.64*  %phi592(return) <- $0
	br          .L3181

.L3181:
	phi.64*     %r14286 <- %phi591(return), %phi592(return)
	ret.64*     %r14286


luaL_checkstack:
.L3182:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[space]
	store.64*   %arg3 -> 0[mes]
	load.64*    %r14291 <- 0[L]
	load.32     %r14292 <- 0[space]
	push.64*    %r14291
	push.32     %r14292
	call.32     %r14293 <- lua_checkstack
	br          %r14293, .L3184, .L3183

.L3183:
	load.64*    %r14294 <- 0[L]
	symaddr.64* %r14295 <- <anon symbol:0x62d001469690>
	load.64*    %r14296 <- 0[mes]
	push.64*    %r14294
	push.64*    %r14295
	push.64*    %r14296
	call.32     %r14297 <- luaL_error
	br          .L3184

.L3184:
	ret


luaL_checktype:
.L3185:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.32    %arg3 -> 0[t]
	load.64*    %r14298 <- 0[L]
	load.32     %r14299 <- 0[narg]
	push.64*    %r14298
	push.32     %r14299
	call.32     %r14300 <- lua_type
	load.32     %r14301 <- 0[t]
	setne.32    %r14302 <- %r14300, %r14301
	br          %r14302, .L3186, .L3187

.L3186:
	load.64*    %r14303 <- 0[L]
	load.32     %r14304 <- 0[narg]
	load.32     %r14305 <- 0[t]
	push.64*    %r14303
	push.32     %r14304
	push.32     %r14305
	call        tag_error
	br          .L3187

.L3187:
	ret


luaL_checkany:
.L3188:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14306 <- 0[L]
	load.32     %r14307 <- 0[narg]
	push.64*    %r14306
	push.32     %r14307
	call.32     %r14308 <- lua_type
	seteq.32    %r14309 <- %r14308, $0xffffffff
	br          %r14309, .L3189, .L3190

.L3189:
	load.64*    %r14310 <- 0[L]
	load.32     %r14311 <- 0[narg]
	symaddr.64* %r14312 <- <anon symbol:0x62d001469a30>
	push.64*    %r14310
	push.32     %r14311
	push.64*    %r14312
	call.32     %r14313 <- luaL_argerror
	br          .L3190

.L3190:
	ret


luaL_checklstring:
.L3191:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[len]
	load.64*    %r14314 <- 0[L]
	load.32     %r14315 <- 0[narg]
	load.64*    %r14316 <- 0[len]
	push.64*    %r14314
	push.32     %r14315
	push.64*    %r14316
	call.64*    %r14317 <- lua_tolstring
	store.64*   %r14317 -> 0[s]
	load.64*    %r14318 <- 0[s]
	br          %r14318, .L3193, .L3192

.L3192:
	load.64*    %r14319 <- 0[L]
	load.32     %r14320 <- 0[narg]
	push.64*    %r14319
	push.32     %r14320
	push.32     $4
	call        tag_error
	br          .L3193

.L3193:
	load.64*    %r14321 <- 0[s]
	phisrc.64*  %phi593(return) <- %r14321
	br          .L3194

.L3194:
	phi.64*     %r14322 <- %phi593(return)
	ret.64*     %r14321


luaL_optlstring:
.L3195:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64*   %arg3 -> 0[def]
	store.64*   %arg4 -> 0[len]
	load.64*    %r14323 <- 0[L]
	load.32     %r14324 <- 0[narg]
	push.64*    %r14323
	push.32     %r14324
	call.32     %r14325 <- lua_type
	setle.32    %r14326 <- %r14325, $0
	br          %r14326, .L3196, .L3197

.L3196:
	load.64*    %r14327 <- 0[len]
	br          %r14327, .L3198, .L3199

.L3198:
	load.64*    %r14328 <- 0[def]
	push.64*    %r14328
	call.64     %r14329 <- strlen
	load.64*    %r14330 <- 0[def]
	select.64   %r14331 <- %r14330, %r14329, $0
	load.64*    %r14332 <- 0[len]
	store.64    %r14331 -> 0[%r14332]
	br          .L3199

.L3199:
	load.64*    %r14333 <- 0[def]
	phisrc.64*  %phi594(return) <- %r14333
	br          .L3200

.L3197:
	load.64*    %r14335 <- 0[L]
	load.32     %r14336 <- 0[narg]
	load.64*    %r14337 <- 0[len]
	push.64*    %r14335
	push.32     %r14336
	push.64*    %r14337
	call.64*    %r14338 <- luaL_checklstring
	phisrc.64*  %phi595(return) <- %r14338
	br          .L3200

.L3200:
	phi.64*     %r14334 <- %phi594(return), %phi595(return)
	ret.64*     %r14334


luaL_checknumber:
.L3202:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14339 <- 0[L]
	load.32     %r14340 <- 0[narg]
	push.64*    %r14339
	push.32     %r14340
	call.f64    %r14341 <- lua_tonumber
	store.f64   %r14341 -> 0[d]
	load.f64    %r14342 <- 0[d]
	set.f64     %r14343 <- 0.000000
	seteq.32    %r14344 <- %r14342, %r14343
	br          %r14344, .L3205, .L3204

.L3205:
	load.64*    %r14345 <- 0[L]
	load.32     %r14346 <- 0[narg]
	push.64*    %r14345
	push.32     %r14346
	call.32     %r14347 <- lua_isnumber
	br          %r14347, .L3204, .L3203

.L3203:
	load.64*    %r14348 <- 0[L]
	load.32     %r14349 <- 0[narg]
	push.64*    %r14348
	push.32     %r14349
	push.32     $3
	call        tag_error
	br          .L3204

.L3204:
	load.f64    %r14350 <- 0[d]
	phisrc.f64  %phi596(return) <- %r14350
	br          .L3206

.L3206:
	phi.f64     %r14351 <- %phi596(return)
	ret.f64     %r14350


luaL_checkinteger:
.L3207:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	load.64*    %r14352 <- 0[L]
	load.32     %r14353 <- 0[narg]
	push.64*    %r14352
	push.32     %r14353
	call.64     %r14354 <- lua_tointeger
	store.64    %r14354 -> 0[d]
	load.64     %r14355 <- 0[d]
	seteq.32    %r14356 <- %r14355, $0
	br          %r14356, .L3210, .L3209

.L3210:
	load.64*    %r14357 <- 0[L]
	load.32     %r14358 <- 0[narg]
	push.64*    %r14357
	push.32     %r14358
	call.32     %r14359 <- lua_isnumber
	br          %r14359, .L3209, .L3208

.L3208:
	load.64*    %r14360 <- 0[L]
	load.32     %r14361 <- 0[narg]
	push.64*    %r14360
	push.32     %r14361
	push.32     $3
	call        tag_error
	br          .L3209

.L3209:
	load.64     %r14362 <- 0[d]
	phisrc.64   %phi597(return) <- %r14362
	br          .L3211

.L3211:
	phi.64      %r14363 <- %phi597(return)
	ret.64      %r14362


luaL_optinteger:
.L3212:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[narg]
	store.64    %arg3 -> 0[def]
	load.64*    %r14364 <- 0[L]
	load.32     %r14365 <- 0[narg]
	push.64*    %r14364
	push.32     %r14365
	call.32     %r14366 <- lua_type
	setle.32    %r14367 <- %r14366, $0
	br          %r14367, .L3214, .L3215

.L3214:
	load.64     %r14368 <- 0[def]
	phisrc.64   %phi598 <- %r14368
	br          .L3216

.L3215:
	load.64*    %r14369 <- 0[L]
	load.32     %r14370 <- 0[narg]
	push.64*    %r14369
	push.32     %r14370
	call.64     %r14371 <- luaL_checkinteger
	phisrc.64   %phi599 <- %r14371
	br          .L3216

.L3216:
	phi.64      %r14372 <- %phi598, %phi599
	phisrc.64   %phi600(return) <- %r14372
	br          .L3213

.L3213:
	phi.64      %r14373 <- %phi600(return)
	ret.64      %r14372


luaL_getmetafield:
.L3217:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[obj]
	store.64*   %arg3 -> 0[event]
	load.64*    %r14374 <- 0[L]
	load.32     %r14375 <- 0[obj]
	push.64*    %r14374
	push.32     %r14375
	call.32     %r14376 <- lua_getmetatable
	br          %r14376, .L3219, .L3218

.L3218:
	phisrc.32   %phi601(return) <- $0
	br          .L3220

.L3219:
	load.64*    %r14378 <- 0[L]
	load.64*    %r14379 <- 0[event]
	push.64*    %r14378
	push.64*    %r14379
	call        lua_pushstring
	load.64*    %r14380 <- 0[L]
	push.64*    %r14380
	push.32     $0xfffffffe
	call        lua_rawget
	load.64*    %r14381 <- 0[L]
	push.64*    %r14381
	push.32     $0xffffffff
	call.32     %r14382 <- lua_type
	seteq.32    %r14383 <- %r14382, $0
	br          %r14383, .L3221, .L3222

.L3221:
	load.64*    %r14384 <- 0[L]
	push.64*    %r14384
	push.32     $0xfffffffd
	call        lua_settop
	phisrc.32   %phi602(return) <- $0
	br          .L3220

.L3222:
	load.64*    %r14385 <- 0[L]
	push.64*    %r14385
	push.32     $0xfffffffe
	call        lua_remove
	phisrc.32   %phi603(return) <- $1
	br          .L3220

.L3220:
	phi.32      %r14377 <- %phi601(return), %phi602(return), %phi603(return)
	ret.32      %r14377


luaL_register:
.L3224:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[libname]
	store.64*   %arg3 -> 0[l]
	load.64*    %r14386 <- 0[L]
	load.64*    %r14387 <- 0[libname]
	load.64*    %r14388 <- 0[l]
	push.64*    %r14386
	push.64*    %r14387
	push.64*    %r14388
	push.32     $0
	call        luaI_openlib
	br          .L3225

.L3225:
	ret


libsize:
.L3226:
	<entry-point>
	store.64*   %arg1 -> 0[l]
	store.32    $0 -> 0[size]
	br          .L3230

.L3230:
	load.64*    %r14389 <- 0[l]
	load.64*    %r14390 <- 0[%r14389]
	br          %r14390, .L3227, .L3229

.L3227:
	load.32     %r14391 <- 0[size]
	add.32      %r14392 <- %r14391, $1
	store.32    %r14392 -> 0[size]
	br          .L3228

.L3228:
	load.64*    %r14393 <- 0[l]
	add.64*     %r14394 <- %r14393, $16
	store.64*   %r14394 -> 0[l]
	br          .L3230

.L3229:
	load.32     %r14395 <- 0[size]
	phisrc.32   %phi604(return) <- %r14395
	br          .L3231

.L3231:
	phi.32      %r14396 <- %phi604(return)
	ret.32      %r14395


luaI_openlib:
.L3232:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[libname]
	store.64*   %arg3 -> 0[l]
	store.32    %arg4 -> 0[nup]
	load.64*    %r14397 <- 0[libname]
	br          %r14397, .L3233, .L3234

.L3233:
	load.64*    %r14398 <- 0[l]
	push.64*    %r14398
	call.32     %r14399 <- libsize
	store.32    %r14399 -> 0[size]
	load.64*    %r14400 <- 0[L]
	symaddr.64* %r14401 <- <anon symbol:0x62d001464d28>
	push.64*    %r14400
	push.32     $0xffffd8f0
	push.64*    %r14401
	push.32     $1
	call.64*    %r14402 <- luaL_findtable
	load.64*    %r14403 <- 0[L]
	load.64*    %r14404 <- 0[libname]
	push.64*    %r14403
	push.32     $0xffffffff
	push.64*    %r14404
	call        lua_getfield
	load.64*    %r14405 <- 0[L]
	push.64*    %r14405
	push.32     $0xffffffff
	call.32     %r14406 <- lua_type
	seteq.32    %r14407 <- %r14406, $5
	br          %r14407, .L3236, .L3235

.L3235:
	load.64*    %r14408 <- 0[L]
	push.64*    %r14408
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14409 <- 0[L]
	load.64*    %r14410 <- 0[libname]
	load.32     %r14411 <- 0[size]
	push.64*    %r14409
	push.32     $0xffffd8ee
	push.64*    %r14410
	push.32     %r14411
	call.64*    %r14412 <- luaL_findtable
	setne.32    %r14413 <- %r14412, $0
	br          %r14413, .L3237, .L3238

.L3237:
	load.64*    %r14414 <- 0[L]
	symaddr.64* %r14415 <- <anon symbol:0x62d0014650c8>
	load.64*    %r14416 <- 0[libname]
	push.64*    %r14414
	push.64*    %r14415
	push.64*    %r14416
	call.32     %r14417 <- luaL_error
	br          .L3238

.L3238:
	load.64*    %r14418 <- 0[L]
	push.64*    %r14418
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r14419 <- 0[L]
	load.64*    %r14420 <- 0[libname]
	push.64*    %r14419
	push.32     $0xfffffffd
	push.64*    %r14420
	call        lua_setfield
	br          .L3236

.L3236:
	load.64*    %r14421 <- 0[L]
	push.64*    %r14421
	push.32     $0xfffffffe
	call        lua_remove
	load.64*    %r14422 <- 0[L]
	load.32     %r14423 <- 0[nup]
	add.32      %r14424 <- %r14423, $1
	neg.32      %r14425 <- %r14424
	push.64*    %r14422
	push.32     %r14425
	call        lua_insert
	br          .L3234

.L3234:
	br          .L3242

.L3242:
	load.64*    %r14426 <- 0[l]
	load.64*    %r14427 <- 0[%r14426]
	br          %r14427, .L3239, .L3241

.L3239:
	store.32    $0 -> 0[i]
	br          .L3246

.L3246:
	load.32     %r14428 <- 0[i]
	load.32     %r14429 <- 0[nup]
	setlt.32    %r14430 <- %r14428, %r14429
	br          %r14430, .L3243, .L3245

.L3243:
	load.64*    %r14431 <- 0[L]
	load.32     %r14432 <- 0[nup]
	neg.32      %r14433 <- %r14432
	push.64*    %r14431
	push.32     %r14433
	call        lua_pushvalue
	br          .L3244

.L3244:
	load.32     %r14434 <- 0[i]
	add.32      %r14435 <- %r14434, $1
	store.32    %r14435 -> 0[i]
	br          .L3246

.L3245:
	load.64*    %r14436 <- 0[L]
	load.64*    %r14437 <- 0[l]
	load.64*    %r14438 <- 8[%r14437]
	load.32     %r14439 <- 0[nup]
	push.64*    %r14436
	push.64*    %r14438
	push.32     %r14439
	call        lua_pushcclosure
	load.64*    %r14440 <- 0[L]
	load.32     %r14441 <- 0[nup]
	add.32      %r14442 <- %r14441, $2
	neg.32      %r14443 <- %r14442
	load.64*    %r14444 <- 0[l]
	load.64*    %r14445 <- 0[%r14444]
	push.64*    %r14440
	push.32     %r14443
	push.64*    %r14445
	call        lua_setfield
	br          .L3240

.L3240:
	load.64*    %r14446 <- 0[l]
	add.64*     %r14447 <- %r14446, $16
	store.64*   %r14447 -> 0[l]
	br          .L3242

.L3241:
	load.64*    %r14448 <- 0[L]
	load.32     %r14449 <- 0[nup]
	neg.32      %r14450 <- %r14449
	sub.32      %r14451 <- %r14450, $1
	push.64*    %r14448
	push.32     %r14451
	call        lua_settop
	br          .L3247

.L3247:
	ret


luaL_findtable:
.L3248:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.64*   %arg3 -> 0[fname]
	store.32    %arg4 -> 0[szhint]
	load.64*    %r14452 <- 0[L]
	load.32     %r14453 <- 0[idx]
	push.64*    %r14452
	push.32     %r14453
	call        lua_pushvalue
	br          .L3249

.L3249:
	load.64*    %r14454 <- 0[fname]
	push.64*    %r14454
	push.32     $46
	call.64*    %r14455 <- strchr
	store.64*   %r14455 -> 0[e]
	load.64*    %r14456 <- 0[e]
	seteq.32    %r14457 <- %r14456, $0
	br          %r14457, .L3252, .L3253

.L3252:
	load.64*    %r14458 <- 0[fname]
	load.64*    %r14459 <- 0[fname]
	push.64*    %r14459
	call.64     %r14460 <- strlen
	add.64*     %r14461 <- %r14458, %r14460
	store.64*   %r14461 -> 0[e]
	br          .L3253

.L3253:
	load.64*    %r14462 <- 0[L]
	load.64*    %r14463 <- 0[fname]
	load.64*    %r14464 <- 0[e]
	load.64*    %r14465 <- 0[fname]
	sub.64      %r14466 <- %r14464, %r14465
	scast.64    %r14467 <- (64) %r14466
	push.64*    %r14462
	push.64*    %r14463
	push.64     %r14467
	call        lua_pushlstring
	load.64*    %r14468 <- 0[L]
	push.64*    %r14468
	push.32     $0xfffffffe
	call        lua_rawget
	load.64*    %r14469 <- 0[L]
	push.64*    %r14469
	push.32     $0xffffffff
	call.32     %r14470 <- lua_type
	seteq.32    %r14471 <- %r14470, $0
	br          %r14471, .L3254, .L3255

.L3254:
	load.64*    %r14472 <- 0[L]
	push.64*    %r14472
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r14473 <- 0[L]
	load.32     %r14474 <- 0[szhint]
	load.64*    %r14475 <- 0[e]
	load.8      %r14476 <- 0[%r14475]
	scast.32    %r14477 <- (8) %r14476
	seteq.32    %r14478 <- %r14477, $46
	select.32   %r14479 <- %r14478, $1, %r14474
	push.64*    %r14473
	push.32     $0
	push.32     %r14479
	call        lua_createtable
	load.64*    %r14480 <- 0[L]
	load.64*    %r14481 <- 0[fname]
	load.64*    %r14482 <- 0[e]
	load.64*    %r14483 <- 0[fname]
	sub.64      %r14484 <- %r14482, %r14483
	scast.64    %r14485 <- (64) %r14484
	push.64*    %r14480
	push.64*    %r14481
	push.64     %r14485
	call        lua_pushlstring
	load.64*    %r14486 <- 0[L]
	push.64*    %r14486
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r14487 <- 0[L]
	push.64*    %r14487
	push.32     $0xfffffffc
	call        lua_settable
	br          .L3256

.L3255:
	load.64*    %r14488 <- 0[L]
	push.64*    %r14488
	push.32     $0xffffffff
	call.32     %r14489 <- lua_type
	seteq.32    %r14490 <- %r14489, $5
	br          %r14490, .L3258, .L3257

.L3257:
	load.64*    %r14491 <- 0[L]
	push.64*    %r14491
	push.32     $0xfffffffd
	call        lua_settop
	load.64*    %r14492 <- 0[fname]
	phisrc.64*  %phi605(return) <- %r14492
	br          .L3259

.L3258:
	br          .L3256

.L3256:
	load.64*    %r14494 <- 0[L]
	push.64*    %r14494
	push.32     $0xfffffffe
	call        lua_remove
	load.64*    %r14495 <- 0[e]
	add.64*     %r14496 <- %r14495, $1
	store.64*   %r14496 -> 0[fname]
	br          .L3250

.L3250:
	load.64*    %r14497 <- 0[e]
	load.8      %r14498 <- 0[%r14497]
	scast.32    %r14499 <- (8) %r14498
	seteq.32    %r14500 <- %r14499, $46
	br          %r14500, .L3249, .L3251

.L3251:
	phisrc.64*  %phi606(return) <- $0
	br          .L3259

.L3259:
	phi.64*     %r14493 <- %phi605(return), %phi606(return)
	ret.64*     %r14493


emptybuffer:
.L3260:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14501 <- 0[B]
	load.64*    %r14502 <- 0[%r14501]
	load.64*    %r14503 <- 0[B]
	add.64*     %r14504 <- %r14503, $24
	sub.64      %r14505 <- %r14502, %r14504
	scast.64    %r14506 <- (64) %r14505
	store.64    %r14506 -> 0[l]
	load.64     %r14507 <- 0[l]
	seteq.32    %r14508 <- %r14507, $0
	br          %r14508, .L3261, .L3262

.L3261:
	phisrc.32   %phi607(return) <- $0
	br          .L3263

.L3262:
	load.64*    %r14510 <- 0[B]
	load.64*    %r14511 <- 16[%r14510]
	load.64*    %r14512 <- 0[B]
	add.64*     %r14513 <- %r14512, $24
	load.64     %r14514 <- 0[l]
	push.64*    %r14511
	push.64*    %r14513
	push.64     %r14514
	call        lua_pushlstring
	load.64*    %r14515 <- 0[B]
	add.64*     %r14516 <- %r14515, $24
	load.64*    %r14517 <- 0[B]
	store.64*   %r14516 -> 0[%r14517]
	load.64*    %r14518 <- 0[B]
	load.32     %r14519 <- 8[%r14518]
	add.32      %r14520 <- %r14519, $1
	store.32    %r14520 -> 8[%r14518]
	phisrc.32   %phi608(return) <- $1
	br          .L3263

.L3263:
	phi.32      %r14509 <- %phi607(return), %phi608(return)
	ret.32      %r14509


adjuststack:
.L3265:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14521 <- 0[B]
	load.32     %r14522 <- 8[%r14521]
	setgt.32    %r14523 <- %r14522, $1
	br          %r14523, .L3266, .L3267

.L3266:
	load.64*    %r14524 <- 0[B]
	load.64*    %r14525 <- 16[%r14524]
	store.64*   %r14525 -> 0[L]
	store.32    $1 -> 0[toget]
	load.64*    %r14526 <- 0[L]
	push.64*    %r14526
	push.32     $0xffffffff
	call.64     %r14527 <- lua_objlen
	store.64    %r14527 -> 0[toplen]
	br          .L3268

.L3268:
	load.64*    %r14528 <- 0[L]
	load.32     %r14529 <- 0[toget]
	add.32      %r14530 <- %r14529, $1
	neg.32      %r14531 <- %r14530
	push.64*    %r14528
	push.32     %r14531
	call.64     %r14532 <- lua_objlen
	store.64    %r14532 -> 0[l]
	load.64*    %r14533 <- 0[B]
	load.32     %r14534 <- 8[%r14533]
	load.32     %r14535 <- 0[toget]
	sub.32      %r14536 <- %r14534, %r14535
	add.32      %r14537 <- %r14536, $1
	setge.32    %r14538 <- %r14537, $10
	load.64     %r14539 <- 0[toplen]
	load.64     %r14540 <- 0[l]
	seta.32     %r14541 <- %r14539, %r14540
	or-bool.32  %r14542 <- %r14538, %r14541
	br          %r14542, .L3271, .L3272

.L3271:
	load.64     %r14543 <- 0[l]
	load.64     %r14544 <- 0[toplen]
	cast.64     %r14545 <- (64) %r14544
	add.64      %r14546 <- %r14545, %r14543
	cast.64     %r14547 <- (64) %r14546
	store.64    %r14547 -> 0[toplen]
	load.32     %r14548 <- 0[toget]
	add.32      %r14549 <- %r14548, $1
	store.32    %r14549 -> 0[toget]
	br          .L3273

.L3272:
	br          .L3270

.L3273:
	br          .L3269

.L3269:
	load.32     %r14550 <- 0[toget]
	load.64*    %r14551 <- 0[B]
	load.32     %r14552 <- 8[%r14551]
	setlt.32    %r14553 <- %r14550, %r14552
	br          %r14553, .L3268, .L3270

.L3270:
	load.64*    %r14554 <- 0[L]
	load.32     %r14555 <- 0[toget]
	push.64*    %r14554
	push.32     %r14555
	call        lua_concat
	load.64*    %r14556 <- 0[B]
	load.32     %r14557 <- 8[%r14556]
	load.32     %r14558 <- 0[toget]
	sub.32      %r14559 <- %r14557, %r14558
	add.32      %r14560 <- %r14559, $1
	load.64*    %r14561 <- 0[B]
	store.32    %r14560 -> 8[%r14561]
	br          .L3267

.L3267:
	ret


luaL_prepbuffer:
.L3274:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14562 <- 0[B]
	push.64*    %r14562
	call.32     %r14563 <- emptybuffer
	br          %r14563, .L3275, .L3276

.L3275:
	load.64*    %r14564 <- 0[B]
	push.64*    %r14564
	call        adjuststack
	br          .L3276

.L3276:
	load.64*    %r14565 <- 0[B]
	add.64*     %r14566 <- %r14565, $24
	phisrc.64*  %phi609(return) <- %r14566
	br          .L3277

.L3277:
	phi.64*     %r14567 <- %phi609(return)
	ret.64*     %r14566


luaL_addlstring:
.L3278:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	store.64*   %arg2 -> 0[s]
	store.64    %arg3 -> 0[l]
	br          .L3282

.L3282:
	load.64     %r14568 <- 0[l]
	sub.64      %r14569 <- %r14568, $1
	store.64    %r14569 -> 0[l]
	br          %r14568, .L3279, .L3281

.L3279:
	load.64*    %r14570 <- 0[B]
	load.64*    %r14571 <- 0[%r14570]
	load.64*    %r14572 <- 0[B]
	add.64*     %r14573 <- %r14572, $24
	add.64*     %r14574 <- %r14573, $0x2000
	setb.32     %r14575 <- %r14571, %r14574
	br          %r14575, .L3283, .L3284

.L3283:
	phisrc.32   %phi610 <- $1
	br          .L3285

.L3284:
	load.64*    %r14576 <- 0[B]
	push.64*    %r14576
	call.64*    %r14577 <- luaL_prepbuffer
	phisrc.32   %phi611 <- %r14577
	br          .L3285

.L3285:
	phi.32      %r14578 <- %phi610, %phi611
	load.64*    %r14579 <- 0[s]
	add.64*     %r14580 <- %r14579, $1
	store.64*   %r14580 -> 0[s]
	load.8      %r14581 <- 0[%r14579]
	scast.8     %r14582 <- (8) %r14581
	load.64*    %r14583 <- 0[B]
	load.64*    %r14584 <- 0[%r14583]
	add.64*     %r14585 <- %r14584, $1
	store.64*   %r14585 -> 0[%r14583]
	store.8     %r14582 -> 0[%r14584]
	br          .L3280

.L3280:
	br          .L3282

.L3281:
	ret


luaL_pushresult:
.L3286:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14586 <- 0[B]
	push.64*    %r14586
	call.32     %r14587 <- emptybuffer
	load.64*    %r14588 <- 0[B]
	load.64*    %r14589 <- 16[%r14588]
	load.64*    %r14590 <- 0[B]
	load.32     %r14591 <- 8[%r14590]
	push.64*    %r14589
	push.32     %r14591
	call        lua_concat
	load.64*    %r14592 <- 0[B]
	store.32    $1 -> 8[%r14592]
	br          .L3287

.L3287:
	ret


luaL_addvalue:
.L3288:
	<entry-point>
	store.64*   %arg1 -> 0[B]
	load.64*    %r14593 <- 0[B]
	load.64*    %r14594 <- 16[%r14593]
	store.64*   %r14594 -> 0[L]
	load.64*    %r14595 <- 0[L]
	symaddr.64* %r14596 <- vl
	push.64*    %r14595
	push.32     $0xffffffff
	push.64*    %r14596
	call.64*    %r14597 <- lua_tolstring
	store.64*   %r14597 -> 0[s]
	load.64     %r14598 <- 0[vl]
	load.64*    %r14599 <- 0[B]
	load.64*    %r14600 <- 0[%r14599]
	load.64*    %r14601 <- 0[B]
	add.64*     %r14602 <- %r14601, $24
	sub.64      %r14603 <- %r14600, %r14602
	sub.64      %r14604 <- $0x2000, %r14603
	scast.64    %r14605 <- (64) %r14604
	setbe.32    %r14606 <- %r14598, %r14605
	br          %r14606, .L3289, .L3290

.L3289:
	load.64*    %r14607 <- 0[B]
	load.64*    %r14608 <- 0[%r14607]
	cast.64*    %r14609 <- (64) %r14608
	load.64*    %r14610 <- 0[s]
	cast.64*    %r14611 <- (64) %r14610
	load.64     %r14612 <- 0[vl]
	push.64*    %r14609
	push.64*    %r14611
	push.64     %r14612
	call.64*    %r14613 <- memcpy
	load.64     %r14614 <- 0[vl]
	load.64*    %r14615 <- 0[B]
	load.64*    %r14616 <- 0[%r14615]
	cast.64     %r14617 <- (64) %r14616
	add.64      %r14618 <- %r14617, %r14614
	ptrcast.64* %r14619 <- (64) %r14618
	store.64*   %r14619 -> 0[%r14615]
	load.64*    %r14620 <- 0[L]
	push.64*    %r14620
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3291

.L3290:
	load.64*    %r14621 <- 0[B]
	push.64*    %r14621
	call.32     %r14622 <- emptybuffer
	br          %r14622, .L3292, .L3293

.L3292:
	load.64*    %r14623 <- 0[L]
	push.64*    %r14623
	push.32     $0xfffffffe
	call        lua_insert
	br          .L3293

.L3293:
	load.64*    %r14624 <- 0[B]
	load.32     %r14625 <- 8[%r14624]
	add.32      %r14626 <- %r14625, $1
	store.32    %r14626 -> 8[%r14624]
	load.64*    %r14627 <- 0[B]
	push.64*    %r14627
	call        adjuststack
	br          .L3291

.L3291:
	ret


luaL_buffinit:
.L3294:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[B]
	load.64*    %r14628 <- 0[L]
	load.64*    %r14629 <- 0[B]
	store.64*   %r14628 -> 16[%r14629]
	load.64*    %r14630 <- 0[B]
	add.64*     %r14631 <- %r14630, $24
	load.64*    %r14632 <- 0[B]
	store.64*   %r14631 -> 0[%r14632]
	load.64*    %r14633 <- 0[B]
	store.32    $0 -> 8[%r14633]
	br          .L3295

.L3295:
	ret


getF:
.L3296:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[size]
	load.64*    %r14634 <- 0[ud]
	ptrcast.64* %r14635 <- (64) %r14634
	store.64*   %r14635 -> 0[lf]
	load.64*    %r14636 <- 0[L]
	load.64*    %r14637 <- 0[lf]
	load.32     %r14638 <- 0[%r14637]
	br          %r14638, .L3297, .L3298

.L3297:
	load.64*    %r14639 <- 0[lf]
	store.32    $0 -> 0[%r14639]
	load.64*    %r14640 <- 0[size]
	store.64    $1 -> 0[%r14640]
	symaddr.64* %r14641 <- <anon symbol:0x62d001470770>
	phisrc.64*  %phi612(return) <- %r14641
	br          .L3299

.L3298:
	load.64*    %r14643 <- 0[lf]
	load.64*    %r14644 <- 8[%r14643]
	push.64*    %r14644
	call.32     %r14645 <- feof
	br          %r14645, .L3300, .L3301

.L3300:
	phisrc.64*  %phi613(return) <- $0
	br          .L3299

.L3301:
	load.64*    %r14646 <- 0[lf]
	add.64*     %r14647 <- %r14646, $16
	cast.64*    %r14648 <- (64) %r14647
	load.64*    %r14649 <- 0[lf]
	load.64*    %r14650 <- 8[%r14649]
	push.64*    %r14648
	push.64     $1
	push.64     $0x2000
	push.64*    %r14650
	call.64     %r14651 <- fread
	load.64*    %r14652 <- 0[size]
	store.64    %r14651 -> 0[%r14652]
	load.64*    %r14653 <- 0[lf]
	add.64*     %r14654 <- %r14653, $16
	load.64*    %r14655 <- 0[size]
	load.64     %r14656 <- 0[%r14655]
	seta.32     %r14657 <- %r14656, $0
	select.64*  %r14658 <- %r14657, %r14654, $0
	phisrc.64*  %phi614(return) <- %r14658
	br          .L3299

.L3299:
	phi.64*     %r14642 <- %phi612(return), %phi613(return), %phi614(return)
	ret.64*     %r14642


errfile:
.L3302:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[what]
	store.32    %arg3 -> 0[fnameindex]
	call.64*    %r14659 <- __errno_location
	load.32     %r14660 <- 0[%r14659]
	push.32     %r14660
	call.64*    %r14661 <- strerror
	store.64*   %r14661 -> 0[serr]
	load.64*    %r14662 <- 0[L]
	load.32     %r14663 <- 0[fnameindex]
	push.64*    %r14662
	push.32     %r14663
	push.64*    $0
	call.64*    %r14664 <- lua_tolstring
	add.64*     %r14665 <- %r14664, $1
	store.64*   %r14665 -> 0[filename]
	load.64*    %r14666 <- 0[L]
	symaddr.64* %r14667 <- <anon symbol:0x62d001471a78>
	load.64*    %r14668 <- 0[what]
	load.64*    %r14669 <- 0[filename]
	load.64*    %r14670 <- 0[serr]
	push.64*    %r14666
	push.64*    %r14667
	push.64*    %r14668
	push.64*    %r14669
	push.64*    %r14670
	call.64*    %r14671 <- lua_pushfstring
	load.64*    %r14672 <- 0[L]
	load.32     %r14673 <- 0[fnameindex]
	push.64*    %r14672
	push.32     %r14673
	call        lua_remove
	phisrc.32   %phi615(return) <- $6
	br          .L3303

.L3303:
	phi.32      %r14674 <- %phi615(return)
	ret.32      $6


luaL_loadfile:
.L3304:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[filename]
	load.64*    %r14675 <- 0[L]
	push.64*    %r14675
	call.32     %r14676 <- lua_gettop
	add.32      %r14677 <- %r14676, $1
	store.32    %r14677 -> 0[fnameindex]
	store.32    $0 -> 0[lf]
	load.64*    %r14678 <- 0[filename]
	seteq.32    %r14679 <- %r14678, $0
	br          %r14679, .L3305, .L3306

.L3305:
	load.64*    %r14680 <- 0[L]
	symaddr.64* %r14681 <- <anon symbol:0x62d001471f00>
	push.64*    %r14680
	push.64*    %r14681
	push.64     $6
	call        lua_pushlstring
	load.64*    %r14682 <- 0[stdin]
	store.64*   %r14682 -> 8[lf]
	br          .L3307

.L3306:
	load.64*    %r14683 <- 0[L]
	symaddr.64* %r14684 <- <anon symbol:0x62d001472558>
	load.64*    %r14685 <- 0[filename]
	push.64*    %r14683
	push.64*    %r14684
	push.64*    %r14685
	call.64*    %r14686 <- lua_pushfstring
	load.64*    %r14687 <- 0[filename]
	symaddr.64* %r14688 <- <anon symbol:0x62d0014729e0>
	push.64*    %r14687
	push.64*    %r14688
	call.64*    %r14689 <- fopen
	store.64*   %r14689 -> 8[lf]
	load.64*    %r14690 <- 8[lf]
	seteq.32    %r14691 <- %r14690, $0
	br          %r14691, .L3308, .L3309

.L3308:
	load.64*    %r14692 <- 0[L]
	symaddr.64* %r14693 <- <anon symbol:0x62d001472e68>
	load.32     %r14694 <- 0[fnameindex]
	push.64*    %r14692
	push.64*    %r14693
	push.32     %r14694
	call.32     %r14695 <- errfile
	phisrc.32   %phi616(return) <- %r14695
	br          .L3310

.L3309:
	br          .L3307

.L3307:
	load.64*    %r14697 <- 8[lf]
	push.64*    %r14697
	call.32     %r14698 <- _IO_getc
	store.32    %r14698 -> 0[c]
	load.32     %r14699 <- 0[c]
	seteq.32    %r14700 <- %r14699, $35
	br          %r14700, .L3311, .L3312

.L3311:
	store.32    $1 -> 0[lf]
	br          .L3316

.L3316:
	load.64*    %r14701 <- 8[lf]
	push.64*    %r14701
	call.32     %r14702 <- _IO_getc
	store.32    %r14702 -> 0[c]
	setne.32    %r14703 <- %r14702, $0xffffffff
	load.32     %r14704 <- 0[c]
	setne.32    %r14705 <- %r14704, $10
	and-bool.32 %r14706 <- %r14703, %r14705
	br          %r14706, .L3313, .L3315

.L3313:
	br          .L3314

.L3314:
	br          .L3316

.L3315:
	load.32     %r14707 <- 0[c]
	seteq.32    %r14708 <- %r14707, $10
	br          %r14708, .L3317, .L3318

.L3317:
	load.64*    %r14709 <- 8[lf]
	push.64*    %r14709
	call.32     %r14710 <- _IO_getc
	store.32    %r14710 -> 0[c]
	br          .L3318

.L3318:
	br          .L3312

.L3312:
	load.32     %r14711 <- 0[c]
	load.8      %r14712 <- 0["\33Lua"]
	scast.32    %r14713 <- (8) %r14712
	seteq.32    %r14714 <- %r14711, %r14713
	load.64*    %r14715 <- 0[filename]
	and-bool.32 %r14716 <- %r14714, %r14715
	br          %r14716, .L3319, .L3320

.L3319:
	load.64*    %r14717 <- 0[filename]
	symaddr.64* %r14718 <- <anon symbol:0x62d001473b18>
	load.64*    %r14719 <- 8[lf]
	push.64*    %r14717
	push.64*    %r14718
	push.64*    %r14719
	call.64*    %r14720 <- freopen
	store.64*   %r14720 -> 8[lf]
	load.64*    %r14721 <- 8[lf]
	seteq.32    %r14722 <- %r14721, $0
	br          %r14722, .L3321, .L3322

.L3321:
	load.64*    %r14723 <- 0[L]
	symaddr.64* %r14724 <- <anon symbol:0x62d001474088>
	load.32     %r14725 <- 0[fnameindex]
	push.64*    %r14723
	push.64*    %r14724
	push.32     %r14725
	call.32     %r14726 <- errfile
	phisrc.32   %phi617(return) <- %r14726
	br          .L3310

.L3322:
	br          .L3326

.L3326:
	load.64*    %r14727 <- 8[lf]
	push.64*    %r14727
	call.32     %r14728 <- _IO_getc
	store.32    %r14728 -> 0[c]
	setne.32    %r14729 <- %r14728, $0xffffffff
	load.32     %r14730 <- 0[c]
	load.8      %r14731 <- 0["\33Lua"]
	scast.32    %r14732 <- (8) %r14731
	setne.32    %r14733 <- %r14730, %r14732
	and-bool.32 %r14734 <- %r14729, %r14733
	br          %r14734, .L3323, .L3325

.L3323:
	br          .L3324

.L3324:
	br          .L3326

.L3325:
	store.32    $0 -> 0[lf]
	br          .L3320

.L3320:
	load.32     %r14735 <- 0[c]
	load.64*    %r14736 <- 8[lf]
	push.32     %r14735
	push.64*    %r14736
	call.32     %r14737 <- ungetc
	load.64*    %r14738 <- 0[L]
	symaddr.64* %r14739 <- getF
	symaddr.64* %r14740 <- lf
	cast.64*    %r14741 <- (64) %r14740
	load.64*    %r14742 <- 0[L]
	push.64*    %r14742
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r14743 <- lua_tolstring
	push.64*    %r14738
	push.64*    %r14739
	push.64*    %r14741
	push.64*    %r14743
	call.32     %r14744 <- lua_load
	store.32    %r14744 -> 0[status]
	load.64*    %r14745 <- 8[lf]
	push.64*    %r14745
	call.32     %r14746 <- ferror
	store.32    %r14746 -> 0[readstatus]
	load.64*    %r14747 <- 0[filename]
	br          %r14747, .L3327, .L3328

.L3327:
	load.64*    %r14748 <- 8[lf]
	push.64*    %r14748
	call.32     %r14749 <- fclose
	br          .L3328

.L3328:
	load.32     %r14750 <- 0[readstatus]
	br          %r14750, .L3329, .L3330

.L3329:
	load.64*    %r14751 <- 0[L]
	load.32     %r14752 <- 0[fnameindex]
	push.64*    %r14751
	push.32     %r14752
	call        lua_settop
	load.64*    %r14753 <- 0[L]
	symaddr.64* %r14754 <- <anon symbol:0x62d0014750d8>
	load.32     %r14755 <- 0[fnameindex]
	push.64*    %r14753
	push.64*    %r14754
	push.32     %r14755
	call.32     %r14756 <- errfile
	phisrc.32   %phi618(return) <- %r14756
	br          .L3310

.L3330:
	load.64*    %r14757 <- 0[L]
	load.32     %r14758 <- 0[fnameindex]
	push.64*    %r14757
	push.32     %r14758
	call        lua_remove
	load.32     %r14759 <- 0[status]
	phisrc.32   %phi619(return) <- %r14759
	br          .L3310

.L3310:
	phi.32      %r14696 <- %phi616(return), %phi617(return), %phi618(return), %phi619(return)
	ret.32      %r14696


getS:
.L3331:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[ud]
	store.64*   %arg3 -> 0[size]
	load.64*    %r14760 <- 0[ud]
	ptrcast.64* %r14761 <- (64) %r14760
	store.64*   %r14761 -> 0[ls]
	load.64*    %r14762 <- 0[L]
	load.64*    %r14763 <- 0[ls]
	load.64     %r14764 <- 8[%r14763]
	seteq.32    %r14765 <- %r14764, $0
	br          %r14765, .L3332, .L3333

.L3332:
	phisrc.64*  %phi620(return) <- $0
	br          .L3334

.L3333:
	load.64*    %r14767 <- 0[ls]
	load.64     %r14768 <- 8[%r14767]
	load.64*    %r14769 <- 0[size]
	store.64    %r14768 -> 0[%r14769]
	load.64*    %r14770 <- 0[ls]
	store.64    $0 -> 8[%r14770]
	load.64*    %r14771 <- 0[ls]
	load.64*    %r14772 <- 0[%r14771]
	phisrc.64*  %phi621(return) <- %r14772
	br          .L3334

.L3334:
	phi.64*     %r14766 <- %phi620(return), %phi621(return)
	ret.64*     %r14766


luaL_loadbuffer:
.L3335:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[buff]
	store.64    %arg3 -> 0[size]
	store.64*   %arg4 -> 0[name]
	load.64*    %r14773 <- 0[buff]
	store.64*   %r14773 -> 0[ls]
	load.64     %r14774 <- 0[size]
	store.64    %r14774 -> 8[ls]
	load.64*    %r14775 <- 0[L]
	symaddr.64* %r14776 <- getS
	symaddr.64* %r14777 <- ls
	cast.64*    %r14778 <- (64) %r14777
	load.64*    %r14779 <- 0[name]
	push.64*    %r14775
	push.64*    %r14776
	push.64*    %r14778
	push.64*    %r14779
	call.32     %r14780 <- lua_load
	phisrc.32   %phi622(return) <- %r14780
	br          .L3336

.L3336:
	phi.32      %r14781 <- %phi622(return)
	ret.32      %r14780


l_alloc:
.L3337:
	<entry-point>
	store.64*   %arg1 -> 0[ud]
	store.64*   %arg2 -> 0[ptr]
	store.64    %arg3 -> 0[osize]
	store.64    %arg4 -> 0[nsize]
	load.64*    %r14782 <- 0[ud]
	load.64     %r14783 <- 0[osize]
	load.64     %r14784 <- 0[nsize]
	seteq.32    %r14785 <- %r14784, $0
	br          %r14785, .L3338, .L3339

.L3338:
	load.64*    %r14786 <- 0[ptr]
	push.64*    %r14786
	call        free
	phisrc.64*  %phi623(return) <- $0
	br          .L3340

.L3339:
	load.64*    %r14788 <- 0[ptr]
	load.64     %r14789 <- 0[nsize]
	push.64*    %r14788
	push.64     %r14789
	call.64*    %r14790 <- realloc
	phisrc.64*  %phi624(return) <- %r14790
	br          .L3340

.L3340:
	phi.64*     %r14787 <- %phi623(return), %phi624(return)
	ret.64*     %r14787


panic:
.L3342:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14791 <- 0[L]
	load.64*    %r14792 <- 0[stderr]
	symaddr.64* %r14793 <- <anon symbol:0x62d001475f58>
	load.64*    %r14794 <- 0[L]
	push.64*    %r14794
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r14795 <- lua_tolstring
	push.64*    %r14792
	push.64*    %r14793
	push.64*    %r14795
	call.32     %r14796 <- fprintf
	phisrc.32   %phi625(return) <- $0
	br          .L3343

.L3343:
	phi.32      %r14797 <- %phi625(return)
	ret.32      $0


luaL_newstate:
.L3344:
	<entry-point>
	symaddr.64* %r14798 <- l_alloc
	push.64*    %r14798
	push.64*    $0
	call.64*    %r14799 <- lua_newstate
	store.64*   %r14799 -> 0[L]
	load.64*    %r14800 <- 0[L]
	br          %r14800, .L3345, .L3346

.L3345:
	load.64*    %r14801 <- 0[L]
	symaddr.64* %r14802 <- panic
	push.64*    %r14801
	push.64*    %r14802
	call.64*    %r14803 <- lua_atpanic
	br          .L3346

.L3346:
	load.64*    %r14804 <- 0[L]
	phisrc.64*  %phi626(return) <- %r14804
	br          .L3347

.L3347:
	phi.64*     %r14805 <- %phi626(return)
	ret.64*     %r14804


luaB_tonumber:
.L3348:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14806 <- 0[L]
	push.64*    %r14806
	push.32     $2
	push.64     $10
	call.64     %r14807 <- luaL_optinteger
	scast.32    %r14808 <- (64) %r14807
	store.32    %r14808 -> 0[base]
	load.32     %r14809 <- 0[base]
	seteq.32    %r14810 <- %r14809, $10
	br          %r14810, .L3349, .L3350

.L3349:
	load.64*    %r14811 <- 0[L]
	push.64*    %r14811
	push.32     $1
	call        luaL_checkany
	load.64*    %r14812 <- 0[L]
	push.64*    %r14812
	push.32     $1
	call.32     %r14813 <- lua_isnumber
	br          %r14813, .L3351, .L3352

.L3351:
	load.64*    %r14814 <- 0[L]
	load.64*    %r14815 <- 0[L]
	push.64*    %r14815
	push.32     $1
	call.f64    %r14816 <- lua_tonumber
	push.64*    %r14814
	push.f64    %r14816
	call        lua_pushnumber
	phisrc.32   %phi627(return) <- $1
	br          .L3353

.L3352:
	br          .L3354

.L3350:
	load.64*    %r14818 <- 0[L]
	push.64*    %r14818
	push.32     $1
	push.64*    $0
	call.64*    %r14819 <- luaL_checklstring
	store.64*   %r14819 -> 0[s1]
	load.32     %r14820 <- 0[base]
	setle.32    %r14821 <- $2, %r14820
	load.32     %r14822 <- 0[base]
	setle.32    %r14823 <- %r14822, $36
	and-bool.32 %r14824 <- %r14821, %r14823
	br          %r14824, .L3355, .L3356

.L3355:
	phisrc.32   %phi628 <- $1
	br          .L3357

.L3356:
	load.64*    %r14825 <- 0[L]
	symaddr.64* %r14826 <- <anon symbol:0x62d0014826d0>
	push.64*    %r14825
	push.32     $2
	push.64*    %r14826
	call.32     %r14827 <- luaL_argerror
	phisrc.32   %phi629 <- %r14827
	br          .L3357

.L3357:
	phi.32      %r14828 <- %phi628, %phi629
	load.64*    %r14829 <- 0[s1]
	symaddr.64* %r14830 <- s2
	load.32     %r14831 <- 0[base]
	push.64*    %r14829
	push.64*    %r14830
	push.32     %r14831
	call.64     %r14832 <- strtoul
	store.64    %r14832 -> 0[n]
	load.64*    %r14833 <- 0[s1]
	load.64*    %r14834 <- 0[s2]
	setne.32    %r14835 <- %r14833, %r14834
	br          %r14835, .L3358, .L3359

.L3358:
	br          .L3363

.L3363:
	call.64*    %r14836 <- __ctype_b_loc
	load.64*    %r14837 <- 0[%r14836]
	load.64*    %r14838 <- 0[s2]
	load.8      %r14839 <- 0[%r14838]
	scast.8     %r14840 <- (8) %r14839
	cast.32     %r14841 <- (8) %r14840
	scast.64    %r14842 <- (32) %r14841
	muls.64     %r14843 <- %r14842, $2
	add.64*     %r14844 <- %r14837, %r14843
	load.16     %r14845 <- 0[%r14844]
	cast.32     %r14846 <- (16) %r14845
	and.32      %r14847 <- %r14846, $0x2000
	br          %r14847, .L3360, .L3362

.L3360:
	load.64*    %r14848 <- 0[s2]
	add.64*     %r14849 <- %r14848, $1
	store.64*   %r14849 -> 0[s2]
	br          .L3361

.L3361:
	br          .L3363

.L3362:
	load.64*    %r14850 <- 0[s2]
	load.8      %r14851 <- 0[%r14850]
	scast.32    %r14852 <- (8) %r14851
	seteq.32    %r14853 <- %r14852, $0
	br          %r14853, .L3364, .L3365

.L3364:
	load.64*    %r14854 <- 0[L]
	load.64     %r14855 <- 0[n]
	fpcast.f64  %r14856 <- (64) %r14855
	push.64*    %r14854
	push.f64    %r14856
	call        lua_pushnumber
	phisrc.32   %phi630(return) <- $1
	br          .L3353

.L3365:
	br          .L3359

.L3359:
	br          .L3354

.L3354:
	load.64*    %r14857 <- 0[L]
	push.64*    %r14857
	call        lua_pushnil
	phisrc.32   %phi631(return) <- $1
	br          .L3353

.L3353:
	phi.32      %r14817 <- %phi627(return), %phi630(return), %phi631(return)
	ret.32      %r14817


luaB_error:
.L3366:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14858 <- 0[L]
	push.64*    %r14858
	push.32     $2
	push.64     $1
	call.64     %r14859 <- luaL_optinteger
	scast.32    %r14860 <- (64) %r14859
	store.32    %r14860 -> 0[level]
	load.64*    %r14861 <- 0[L]
	push.64*    %r14861
	push.32     $1
	call        lua_settop
	load.64*    %r14862 <- 0[L]
	push.64*    %r14862
	push.32     $1
	call.32     %r14863 <- lua_isstring
	load.32     %r14864 <- 0[level]
	setgt.32    %r14865 <- %r14864, $0
	and-bool.32 %r14866 <- %r14863, %r14865
	br          %r14866, .L3367, .L3368

.L3367:
	load.64*    %r14867 <- 0[L]
	load.32     %r14868 <- 0[level]
	push.64*    %r14867
	push.32     %r14868
	call        luaL_where
	load.64*    %r14869 <- 0[L]
	push.64*    %r14869
	push.32     $1
	call        lua_pushvalue
	load.64*    %r14870 <- 0[L]
	push.64*    %r14870
	push.32     $2
	call        lua_concat
	br          .L3368

.L3368:
	load.64*    %r14871 <- 0[L]
	push.64*    %r14871
	call.32     %r14872 <- lua_error
	phisrc.32   %phi632(return) <- %r14872
	br          .L3369

.L3369:
	phi.32      %r14873 <- %phi632(return)
	ret.32      %r14872


luaB_setmetatable:
.L3370:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14874 <- 0[L]
	push.64*    %r14874
	push.32     $2
	call.32     %r14875 <- lua_type
	store.32    %r14875 -> 0[t]
	load.64*    %r14876 <- 0[L]
	push.64*    %r14876
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.32     %r14877 <- 0[t]
	seteq.32    %r14878 <- %r14877, $0
	load.32     %r14879 <- 0[t]
	seteq.32    %r14880 <- %r14879, $5
	or-bool.32  %r14881 <- %r14878, %r14880
	br          %r14881, .L3371, .L3372

.L3371:
	phisrc.32   %phi633 <- $1
	br          .L3373

.L3372:
	load.64*    %r14882 <- 0[L]
	symaddr.64* %r14883 <- <anon symbol:0x62d001482fe0>
	push.64*    %r14882
	push.32     $2
	push.64*    %r14883
	call.32     %r14884 <- luaL_argerror
	phisrc.32   %phi634 <- %r14884
	br          .L3373

.L3373:
	phi.32      %r14885 <- %phi633, %phi634
	load.64*    %r14886 <- 0[L]
	symaddr.64* %r14887 <- <anon symbol:0x62d001483380>
	push.64*    %r14886
	push.32     $1
	push.64*    %r14887
	call.32     %r14888 <- luaL_getmetafield
	br          %r14888, .L3374, .L3375

.L3374:
	load.64*    %r14889 <- 0[L]
	symaddr.64* %r14890 <- <anon symbol:0x62d001483720>
	push.64*    %r14889
	push.64*    %r14890
	call.32     %r14891 <- luaL_error
	br          .L3375

.L3375:
	load.64*    %r14892 <- 0[L]
	push.64*    %r14892
	push.32     $2
	call        lua_settop
	load.64*    %r14893 <- 0[L]
	push.64*    %r14893
	push.32     $1
	call.32     %r14894 <- lua_setmetatable
	phisrc.32   %phi635(return) <- $1
	br          .L3376

.L3376:
	phi.32      %r14895 <- %phi635(return)
	ret.32      $1


getfunc:
.L3377:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[opt]
	load.64*    %r14896 <- 0[L]
	push.64*    %r14896
	push.32     $1
	call.32     %r14897 <- lua_type
	seteq.32    %r14898 <- %r14897, $6
	br          %r14898, .L3378, .L3379

.L3378:
	load.64*    %r14899 <- 0[L]
	push.64*    %r14899
	push.32     $1
	call        lua_pushvalue
	br          .L3380

.L3379:
	load.32     %r14900 <- 0[opt]
	br          %r14900, .L3381, .L3382

.L3381:
	load.64*    %r14901 <- 0[L]
	push.64*    %r14901
	push.32     $1
	push.64     $1
	call.64     %r14902 <- luaL_optinteger
	scast.32    %r14903 <- (64) %r14902
	phisrc.32   %phi636 <- %r14903
	br          .L3383

.L3382:
	load.64*    %r14904 <- 0[L]
	push.64*    %r14904
	push.32     $1
	call.64     %r14905 <- luaL_checkinteger
	scast.32    %r14906 <- (64) %r14905
	phisrc.32   %phi637 <- %r14906
	br          .L3383

.L3383:
	phi.32      %r14907 <- %phi636, %phi637
	store.32    %r14907 -> 0[level]
	load.32     %r14908 <- 0[level]
	setge.32    %r14909 <- %r14908, $0
	br          %r14909, .L3384, .L3385

.L3384:
	phisrc.32   %phi638 <- $1
	br          .L3386

.L3385:
	load.64*    %r14910 <- 0[L]
	symaddr.64* %r14911 <- <anon symbol:0x62d001483ac0>
	push.64*    %r14910
	push.32     $1
	push.64*    %r14911
	call.32     %r14912 <- luaL_argerror
	phisrc.32   %phi639 <- %r14912
	br          .L3386

.L3386:
	phi.32      %r14913 <- %phi638, %phi639
	load.64*    %r14914 <- 0[L]
	load.32     %r14915 <- 0[level]
	symaddr.64* %r14916 <- ar
	push.64*    %r14914
	push.32     %r14915
	push.64*    %r14916
	call.32     %r14917 <- lua_getstack
	seteq.32    %r14918 <- %r14917, $0
	br          %r14918, .L3387, .L3388

.L3387:
	load.64*    %r14919 <- 0[L]
	symaddr.64* %r14920 <- <anon symbol:0x62d001484030>
	push.64*    %r14919
	push.32     $1
	push.64*    %r14920
	call.32     %r14921 <- luaL_argerror
	br          .L3388

.L3388:
	load.64*    %r14922 <- 0[L]
	symaddr.64* %r14923 <- <anon symbol:0x62d0014843d0>
	symaddr.64* %r14924 <- ar
	push.64*    %r14922
	push.64*    %r14923
	push.64*    %r14924
	call.32     %r14925 <- lua_getinfo
	load.64*    %r14926 <- 0[L]
	push.64*    %r14926
	push.32     $0xffffffff
	call.32     %r14927 <- lua_type
	seteq.32    %r14928 <- %r14927, $0
	br          %r14928, .L3389, .L3390

.L3389:
	load.64*    %r14929 <- 0[L]
	symaddr.64* %r14930 <- <anon symbol:0x62d001484940>
	load.32     %r14931 <- 0[level]
	push.64*    %r14929
	push.64*    %r14930
	push.32     %r14931
	call.32     %r14932 <- luaL_error
	br          .L3390

.L3390:
	br          .L3380

.L3380:
	ret


luaB_setfenv:
.L3391:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14933 <- 0[L]
	push.64*    %r14933
	push.32     $2
	push.32     $5
	call        luaL_checktype
	load.64*    %r14934 <- 0[L]
	push.64*    %r14934
	push.32     $0
	call        getfunc
	load.64*    %r14935 <- 0[L]
	push.64*    %r14935
	push.32     $2
	call        lua_pushvalue
	load.64*    %r14936 <- 0[L]
	push.64*    %r14936
	push.32     $1
	call.32     %r14937 <- lua_isnumber
	br          %r14937, .L3394, .L3393

.L3394:
	load.64*    %r14938 <- 0[L]
	push.64*    %r14938
	push.32     $1
	call.f64    %r14939 <- lua_tonumber
	set.f64     %r14940 <- 0.000000
	seteq.32    %r14941 <- %r14939, %r14940
	br          %r14941, .L3392, .L3393

.L3392:
	load.64*    %r14942 <- 0[L]
	push.64*    %r14942
	call.32     %r14943 <- lua_pushthread
	load.64*    %r14944 <- 0[L]
	push.64*    %r14944
	push.32     $0xfffffffe
	call        lua_insert
	load.64*    %r14945 <- 0[L]
	push.64*    %r14945
	push.32     $0xfffffffe
	call.32     %r14946 <- lua_setfenv
	phisrc.32   %phi640(return) <- $0
	br          .L3395

.L3393:
	load.64*    %r14948 <- 0[L]
	push.64*    %r14948
	push.32     $0xfffffffe
	call.32     %r14949 <- lua_iscfunction
	br          %r14949, .L3397, .L3399

.L3399:
	load.64*    %r14950 <- 0[L]
	push.64*    %r14950
	push.32     $0xfffffffe
	call.32     %r14951 <- lua_setfenv
	seteq.32    %r14952 <- %r14951, $0
	br          %r14952, .L3397, .L3398

.L3397:
	load.64*    %r14953 <- 0[L]
	symaddr.64* %r14954 <- <anon symbol:0x62d001484ce0>
	push.64*    %r14953
	push.64*    %r14954
	call.32     %r14955 <- luaL_error
	br          .L3398

.L3398:
	br          .L3396

.L3396:
	phisrc.32   %phi641(return) <- $1
	br          .L3395

.L3395:
	phi.32      %r14947 <- %phi640(return), %phi641(return)
	ret.32      %r14947


luaB_rawget:
.L3400:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14956 <- 0[L]
	push.64*    %r14956
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r14957 <- 0[L]
	push.64*    %r14957
	push.32     $2
	call        luaL_checkany
	load.64*    %r14958 <- 0[L]
	push.64*    %r14958
	push.32     $2
	call        lua_settop
	load.64*    %r14959 <- 0[L]
	push.64*    %r14959
	push.32     $1
	call        lua_rawget
	phisrc.32   %phi642(return) <- $1
	br          .L3401

.L3401:
	phi.32      %r14960 <- %phi642(return)
	ret.32      $1


luaB_type:
.L3402:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14961 <- 0[L]
	push.64*    %r14961
	push.32     $1
	call        luaL_checkany
	load.64*    %r14962 <- 0[L]
	load.64*    %r14963 <- 0[L]
	load.64*    %r14964 <- 0[L]
	push.64*    %r14964
	push.32     $1
	call.32     %r14965 <- lua_type
	push.64*    %r14963
	push.32     %r14965
	call.64*    %r14966 <- lua_typename
	push.64*    %r14962
	push.64*    %r14966
	call        lua_pushstring
	phisrc.32   %phi643(return) <- $1
	br          .L3403

.L3403:
	phi.32      %r14967 <- %phi643(return)
	ret.32      $1


luaB_next:
.L3404:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14968 <- 0[L]
	push.64*    %r14968
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r14969 <- 0[L]
	push.64*    %r14969
	push.32     $2
	call        lua_settop
	load.64*    %r14970 <- 0[L]
	push.64*    %r14970
	push.32     $1
	call.32     %r14971 <- lua_next
	br          %r14971, .L3405, .L3406

.L3405:
	phisrc.32   %phi644(return) <- $2
	br          .L3407

.L3406:
	load.64*    %r14973 <- 0[L]
	push.64*    %r14973
	call        lua_pushnil
	phisrc.32   %phi645(return) <- $1
	br          .L3407

.L3407:
	phi.32      %r14972 <- %phi644(return), %phi645(return)
	ret.32      %r14972


luaB_pairs:
.L3409:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14974 <- 0[L]
	push.64*    %r14974
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r14975 <- 0[L]
	push.64*    %r14975
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r14976 <- 0[L]
	push.64*    %r14976
	push.32     $1
	call        lua_pushvalue
	load.64*    %r14977 <- 0[L]
	push.64*    %r14977
	call        lua_pushnil
	phisrc.32   %phi646(return) <- $3
	br          .L3410

.L3410:
	phi.32      %r14978 <- %phi646(return)
	ret.32      $3


ipairsaux:
.L3411:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14979 <- 0[L]
	push.64*    %r14979
	push.32     $2
	call.64     %r14980 <- luaL_checkinteger
	scast.32    %r14981 <- (64) %r14980
	store.32    %r14981 -> 0[i]
	load.64*    %r14982 <- 0[L]
	push.64*    %r14982
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.32     %r14983 <- 0[i]
	add.32      %r14984 <- %r14983, $1
	store.32    %r14984 -> 0[i]
	load.64*    %r14985 <- 0[L]
	load.32     %r14986 <- 0[i]
	scast.64    %r14987 <- (32) %r14986
	push.64*    %r14985
	push.64     %r14987
	call        lua_pushinteger
	load.64*    %r14988 <- 0[L]
	load.32     %r14989 <- 0[i]
	push.64*    %r14988
	push.32     $1
	push.32     %r14989
	call        lua_rawgeti
	load.64*    %r14990 <- 0[L]
	push.64*    %r14990
	push.32     $0xffffffff
	call.32     %r14991 <- lua_type
	seteq.32    %r14992 <- %r14991, $0
	select.32   %r14993 <- %r14992, $0, $2
	phisrc.32   %phi647(return) <- %r14993
	br          .L3412

.L3412:
	phi.32      %r14994 <- %phi647(return)
	ret.32      %r14993


luaB_ipairs:
.L3413:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r14995 <- 0[L]
	push.64*    %r14995
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r14996 <- 0[L]
	push.64*    %r14996
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r14997 <- 0[L]
	push.64*    %r14997
	push.32     $1
	call        lua_pushvalue
	load.64*    %r14998 <- 0[L]
	push.64*    %r14998
	push.64     $0
	call        lua_pushinteger
	phisrc.32   %phi648(return) <- $3
	br          .L3414

.L3414:
	phi.32      %r14999 <- %phi648(return)
	ret.32      $3


load_aux:
.L3415:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[status]
	load.32     %r15000 <- 0[status]
	seteq.32    %r15001 <- %r15000, $0
	br          %r15001, .L3416, .L3417

.L3416:
	phisrc.32   %phi649(return) <- $1
	br          .L3418

.L3417:
	load.64*    %r15003 <- 0[L]
	push.64*    %r15003
	call        lua_pushnil
	load.64*    %r15004 <- 0[L]
	push.64*    %r15004
	push.32     $0xfffffffe
	call        lua_insert
	phisrc.32   %phi650(return) <- $2
	br          .L3418

.L3418:
	phi.32      %r15002 <- %phi649(return), %phi650(return)
	ret.32      %r15002


luaB_loadstring:
.L3420:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15005 <- 0[L]
	symaddr.64* %r15006 <- l
	push.64*    %r15005
	push.32     $1
	push.64*    %r15006
	call.64*    %r15007 <- luaL_checklstring
	store.64*   %r15007 -> 0[s]
	load.64*    %r15008 <- 0[L]
	load.64*    %r15009 <- 0[s]
	push.64*    %r15008
	push.32     $2
	push.64*    %r15009
	push.64*    $0
	call.64*    %r15010 <- luaL_optlstring
	store.64*   %r15010 -> 0[chunkname]
	load.64*    %r15011 <- 0[L]
	load.64*    %r15012 <- 0[L]
	load.64*    %r15013 <- 0[s]
	load.64     %r15014 <- 0[l]
	load.64*    %r15015 <- 0[chunkname]
	push.64*    %r15012
	push.64*    %r15013
	push.64     %r15014
	push.64*    %r15015
	call.32     %r15016 <- luaL_loadbuffer
	push.64*    %r15011
	push.32     %r15016
	call.32     %r15017 <- load_aux
	phisrc.32   %phi651(return) <- %r15017
	br          .L3421

.L3421:
	phi.32      %r15018 <- %phi651(return)
	ret.32      %r15017


luaB_loadfile:
.L3422:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15019 <- 0[L]
	push.64*    %r15019
	push.32     $1
	push.64*    $0
	push.64*    $0
	call.64*    %r15020 <- luaL_optlstring
	store.64*   %r15020 -> 0[fname]
	load.64*    %r15021 <- 0[L]
	load.64*    %r15022 <- 0[L]
	load.64*    %r15023 <- 0[fname]
	push.64*    %r15022
	push.64*    %r15023
	call.32     %r15024 <- luaL_loadfile
	push.64*    %r15021
	push.32     %r15024
	call.32     %r15025 <- load_aux
	phisrc.32   %phi652(return) <- %r15025
	br          .L3423

.L3423:
	phi.32      %r15026 <- %phi652(return)
	ret.32      %r15025


luaB_assert:
.L3424:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15027 <- 0[L]
	push.64*    %r15027
	push.32     $1
	call        luaL_checkany
	load.64*    %r15028 <- 0[L]
	push.64*    %r15028
	push.32     $1
	call.32     %r15029 <- lua_toboolean
	br          %r15029, .L3426, .L3425

.L3425:
	load.64*    %r15030 <- 0[L]
	symaddr.64* %r15031 <- <anon symbol:0x62d001485250>
	load.64*    %r15032 <- 0[L]
	symaddr.64* %r15033 <- <anon symbol:0x62d0014855f0>
	push.64*    %r15032
	push.32     $2
	push.64*    %r15033
	push.64*    $0
	call.64*    %r15034 <- luaL_optlstring
	push.64*    %r15030
	push.64*    %r15031
	push.64*    %r15034
	call.32     %r15035 <- luaL_error
	phisrc.32   %phi653(return) <- %r15035
	br          .L3427

.L3426:
	load.64*    %r15037 <- 0[L]
	push.64*    %r15037
	call.32     %r15038 <- lua_gettop
	phisrc.32   %phi654(return) <- %r15038
	br          .L3427

.L3427:
	phi.32      %r15036 <- %phi653(return), %phi654(return)
	ret.32      %r15036


luaB_unpack:
.L3428:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15039 <- 0[L]
	push.64*    %r15039
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15040 <- 0[L]
	push.64*    %r15040
	push.32     $2
	push.64     $1
	call.64     %r15041 <- luaL_optinteger
	scast.32    %r15042 <- (64) %r15041
	store.32    %r15042 -> 0[i]
	load.64*    %r15043 <- 0[L]
	push.64*    %r15043
	push.32     $3
	call.32     %r15044 <- lua_type
	setle.32    %r15045 <- %r15044, $0
	br          %r15045, .L3429, .L3430

.L3429:
	load.64*    %r15046 <- 0[L]
	push.64*    %r15046
	push.32     $1
	call.64     %r15047 <- lua_objlen
	cast.32     %r15048 <- (64) %r15047
	phisrc.32   %phi655 <- %r15048
	br          .L3431

.L3430:
	load.64*    %r15049 <- 0[L]
	push.64*    %r15049
	push.32     $3
	call.64     %r15050 <- luaL_checkinteger
	scast.32    %r15051 <- (64) %r15050
	phisrc.32   %phi656 <- %r15051
	br          .L3431

.L3431:
	phi.32      %r15052 <- %phi655, %phi656
	store.32    %r15052 -> 0[e]
	load.32     %r15053 <- 0[i]
	load.32     %r15054 <- 0[e]
	setgt.32    %r15055 <- %r15053, %r15054
	br          %r15055, .L3432, .L3433

.L3432:
	phisrc.32   %phi657(return) <- $0
	br          .L3434

.L3433:
	load.32     %r15057 <- 0[e]
	load.32     %r15058 <- 0[i]
	sub.32      %r15059 <- %r15057, %r15058
	add.32      %r15060 <- %r15059, $1
	store.32    %r15060 -> 0[n]
	load.32     %r15061 <- 0[n]
	setle.32    %r15062 <- %r15061, $0
	br          %r15062, .L3435, .L3437

.L3437:
	load.64*    %r15063 <- 0[L]
	load.32     %r15064 <- 0[n]
	push.64*    %r15063
	push.32     %r15064
	call.32     %r15065 <- lua_checkstack
	br          %r15065, .L3436, .L3435

.L3435:
	load.64*    %r15066 <- 0[L]
	symaddr.64* %r15067 <- <anon symbol:0x62d001485990>
	push.64*    %r15066
	push.64*    %r15067
	call.32     %r15068 <- luaL_error
	phisrc.32   %phi658(return) <- %r15068
	br          .L3434

.L3436:
	load.64*    %r15069 <- 0[L]
	load.32     %r15070 <- 0[i]
	push.64*    %r15069
	push.32     $1
	push.32     %r15070
	call        lua_rawgeti
	br          .L3441

.L3441:
	load.32     %r15071 <- 0[i]
	add.32      %r15072 <- %r15071, $1
	store.32    %r15072 -> 0[i]
	load.32     %r15073 <- 0[e]
	setlt.32    %r15074 <- %r15071, %r15073
	br          %r15074, .L3438, .L3440

.L3438:
	load.64*    %r15075 <- 0[L]
	load.32     %r15076 <- 0[i]
	push.64*    %r15075
	push.32     $1
	push.32     %r15076
	call        lua_rawgeti
	br          .L3439

.L3439:
	br          .L3441

.L3440:
	load.32     %r15077 <- 0[n]
	phisrc.32   %phi659(return) <- %r15077
	br          .L3434

.L3434:
	phi.32      %r15056 <- %phi657(return), %phi658(return), %phi659(return)
	ret.32      %r15056


luaB_pcall:
.L3442:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15078 <- 0[L]
	push.64*    %r15078
	push.32     $1
	call        luaL_checkany
	load.64*    %r15079 <- 0[L]
	load.64*    %r15080 <- 0[L]
	push.64*    %r15080
	call.32     %r15081 <- lua_gettop
	sub.32      %r15082 <- %r15081, $1
	push.64*    %r15079
	push.32     %r15082
	push.32     $0xffffffff
	push.32     $0
	call.32     %r15083 <- lua_pcall
	store.32    %r15083 -> 0[status]
	load.64*    %r15084 <- 0[L]
	load.32     %r15085 <- 0[status]
	seteq.32    %r15086 <- %r15085, $0
	push.64*    %r15084
	push.32     %r15086
	call        lua_pushboolean
	load.64*    %r15087 <- 0[L]
	push.64*    %r15087
	push.32     $1
	call        lua_insert
	load.64*    %r15088 <- 0[L]
	push.64*    %r15088
	call.32     %r15089 <- lua_gettop
	phisrc.32   %phi660(return) <- %r15089
	br          .L3443

.L3443:
	phi.32      %r15090 <- %phi660(return)
	ret.32      %r15089


luaB_newproxy:
.L3444:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15091 <- 0[L]
	push.64*    %r15091
	push.32     $1
	call        lua_settop
	load.64*    %r15092 <- 0[L]
	push.64*    %r15092
	push.64     $0
	call.64*    %r15093 <- lua_newuserdata
	load.64*    %r15094 <- 0[L]
	push.64*    %r15094
	push.32     $1
	call.32     %r15095 <- lua_toboolean
	seteq.32    %r15096 <- %r15095, $0
	br          %r15096, .L3445, .L3446

.L3445:
	phisrc.32   %phi661(return) <- $1
	br          .L3447

.L3446:
	load.64*    %r15098 <- 0[L]
	push.64*    %r15098
	push.32     $1
	call.32     %r15099 <- lua_type
	seteq.32    %r15100 <- %r15099, $1
	br          %r15100, .L3449, .L3450

.L3449:
	load.64*    %r15101 <- 0[L]
	push.64*    %r15101
	push.32     $0
	push.32     $0
	call        lua_createtable
	load.64*    %r15102 <- 0[L]
	push.64*    %r15102
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15103 <- 0[L]
	push.64*    %r15103
	push.32     $1
	call        lua_pushboolean
	load.64*    %r15104 <- 0[L]
	push.64*    %r15104
	push.32     $0xffffd8ed
	call        lua_rawset
	br          .L3451

.L3450:
	store.32    $0 -> 0[validproxy]
	load.64*    %r15105 <- 0[L]
	push.64*    %r15105
	push.32     $1
	call.32     %r15106 <- lua_getmetatable
	br          %r15106, .L3452, .L3453

.L3452:
	load.64*    %r15107 <- 0[L]
	push.64*    %r15107
	push.32     $0xffffd8ed
	call        lua_rawget
	load.64*    %r15108 <- 0[L]
	push.64*    %r15108
	push.32     $0xffffffff
	call.32     %r15109 <- lua_toboolean
	store.32    %r15109 -> 0[validproxy]
	load.64*    %r15110 <- 0[L]
	push.64*    %r15110
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3453

.L3453:
	load.32     %r15111 <- 0[validproxy]
	br          %r15111, .L3454, .L3455

.L3454:
	phisrc.32   %phi662 <- $1
	br          .L3456

.L3455:
	load.64*    %r15112 <- 0[L]
	symaddr.64* %r15113 <- <anon symbol:0x62d001485d30>
	push.64*    %r15112
	push.32     $1
	push.64*    %r15113
	call.32     %r15114 <- luaL_argerror
	phisrc.32   %phi663 <- %r15114
	br          .L3456

.L3456:
	phi.32      %r15115 <- %phi662, %phi663
	load.64*    %r15116 <- 0[L]
	push.64*    %r15116
	push.32     $1
	call.32     %r15117 <- lua_getmetatable
	br          .L3451

.L3451:
	br          .L3448

.L3448:
	load.64*    %r15118 <- 0[L]
	push.64*    %r15118
	push.32     $2
	call.32     %r15119 <- lua_setmetatable
	phisrc.32   %phi664(return) <- $1
	br          .L3447

.L3447:
	phi.32      %r15097 <- %phi661(return), %phi664(return)
	ret.32      %r15097


auxopen:
.L3457:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[name]
	store.64*   %arg3 -> 0[f]
	store.64*   %arg4 -> 0[u]
	load.64*    %r15120 <- 0[L]
	load.64*    %r15121 <- 0[u]
	push.64*    %r15120
	push.64*    %r15121
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r15122 <- 0[L]
	load.64*    %r15123 <- 0[f]
	push.64*    %r15122
	push.64*    %r15123
	push.32     $1
	call        lua_pushcclosure
	load.64*    %r15124 <- 0[L]
	load.64*    %r15125 <- 0[name]
	push.64*    %r15124
	push.32     $0xfffffffe
	push.64*    %r15125
	call        lua_setfield
	br          .L3458

.L3458:
	ret


base_open:
.L3459:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15126 <- 0[L]
	push.64*    %r15126
	push.32     $0xffffd8ee
	call        lua_pushvalue
	load.64*    %r15127 <- 0[L]
	symaddr.64* %r15128 <- <anon symbol:0x62d0014860d0>
	push.64*    %r15127
	push.32     $0xffffd8ee
	push.64*    %r15128
	call        lua_setfield
	load.64*    %r15129 <- 0[L]
	symaddr.64* %r15130 <- <anon symbol:0x62d001486470>
	symaddr.64* %r15131 <- base_funcs
	push.64*    %r15129
	push.64*    %r15130
	push.64*    %r15131
	call        luaL_register
	load.64*    %r15132 <- 0[L]
	symaddr.64* %r15133 <- <anon symbol:0x62d0014869e0>
	push.64*    %r15132
	push.64*    %r15133
	push.64     $7
	call        lua_pushlstring
	load.64*    %r15134 <- 0[L]
	symaddr.64* %r15135 <- <anon symbol:0x62d001486f50>
	push.64*    %r15134
	push.32     $0xffffd8ee
	push.64*    %r15135
	call        lua_setfield
	load.64*    %r15136 <- 0[L]
	symaddr.64* %r15137 <- <anon symbol:0x62d0014872f0>
	symaddr.64* %r15138 <- luaB_ipairs
	symaddr.64* %r15139 <- ipairsaux
	push.64*    %r15136
	push.64*    %r15137
	push.64*    %r15138
	push.64*    %r15139
	call        auxopen
	load.64*    %r15140 <- 0[L]
	symaddr.64* %r15141 <- <anon symbol:0x62d001487a30>
	symaddr.64* %r15142 <- luaB_pairs
	symaddr.64* %r15143 <- luaB_next
	push.64*    %r15140
	push.64*    %r15141
	push.64*    %r15142
	push.64*    %r15143
	call        auxopen
	load.64*    %r15144 <- 0[L]
	push.64*    %r15144
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r15145 <- 0[L]
	push.64*    %r15145
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15146 <- 0[L]
	push.64*    %r15146
	push.32     $0xfffffffe
	call.32     %r15147 <- lua_setmetatable
	load.64*    %r15148 <- 0[L]
	symaddr.64* %r15149 <- <anon symbol:0x62d001488170>
	push.64*    %r15148
	push.64*    %r15149
	push.64     $2
	call        lua_pushlstring
	load.64*    %r15150 <- 0[L]
	symaddr.64* %r15151 <- <anon symbol:0x62d0014886e0>
	push.64*    %r15150
	push.32     $0xfffffffe
	push.64*    %r15151
	call        lua_setfield
	load.64*    %r15152 <- 0[L]
	symaddr.64* %r15153 <- luaB_newproxy
	push.64*    %r15152
	push.64*    %r15153
	push.32     $1
	call        lua_pushcclosure
	load.64*    %r15154 <- 0[L]
	symaddr.64* %r15155 <- <anon symbol:0x62d001488c50>
	push.64*    %r15154
	push.32     $0xffffd8ee
	push.64*    %r15155
	call        lua_setfield
	br          .L3460

.L3460:
	ret


luaopen_base:
.L3461:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15156 <- 0[L]
	push.64*    %r15156
	call        base_open
	phisrc.32   %phi665(return) <- $1
	br          .L3462

.L3462:
	phi.32      %r15157 <- %phi665(return)
	ret.32      $1


tinsert:
.L3463:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15158 <- 0[L]
	push.64*    %r15158
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15159 <- 0[L]
	push.64*    %r15159
	push.32     $1
	call.64     %r15160 <- lua_objlen
	cast.32     %r15161 <- (64) %r15160
	add.32      %r15162 <- %r15161, $1
	store.32    %r15162 -> 0[e]
	load.64*    %r15163 <- 0[L]
	push.64*    %r15163
	call.32     %r15164 <- lua_gettop
	switch.32   %r15164, 2 -> .L3465, 3 -> .L3466, default -> .L3467

.L3465:
	load.32     %r15165 <- 0[e]
	store.32    %r15165 -> 0[pos]
	br          .L3464

.L3466:
	load.64*    %r15166 <- 0[L]
	push.64*    %r15166
	push.32     $2
	call.64     %r15167 <- luaL_checkinteger
	scast.32    %r15168 <- (64) %r15167
	store.32    %r15168 -> 0[pos]
	load.32     %r15169 <- 0[pos]
	load.32     %r15170 <- 0[e]
	setgt.32    %r15171 <- %r15169, %r15170
	br          %r15171, .L3468, .L3469

.L3468:
	load.32     %r15172 <- 0[pos]
	store.32    %r15172 -> 0[e]
	br          .L3469

.L3469:
	load.32     %r15173 <- 0[e]
	store.32    %r15173 -> 0[i]
	br          .L3473

.L3473:
	load.32     %r15174 <- 0[i]
	load.32     %r15175 <- 0[pos]
	setgt.32    %r15176 <- %r15174, %r15175
	br          %r15176, .L3470, .L3472

.L3470:
	load.64*    %r15177 <- 0[L]
	load.32     %r15178 <- 0[i]
	sub.32      %r15179 <- %r15178, $1
	push.64*    %r15177
	push.32     $1
	push.32     %r15179
	call        lua_rawgeti
	load.64*    %r15180 <- 0[L]
	load.32     %r15181 <- 0[i]
	push.64*    %r15180
	push.32     $1
	push.32     %r15181
	call        lua_rawseti
	br          .L3471

.L3471:
	load.32     %r15182 <- 0[i]
	sub.32      %r15183 <- %r15182, $1
	store.32    %r15183 -> 0[i]
	br          .L3473

.L3472:
	br          .L3464

.L3467:
	load.64*    %r15184 <- 0[L]
	symaddr.64* %r15185 <- <anon symbol:0x62d001488ff0>
	push.64*    %r15184
	push.64*    %r15185
	call.32     %r15186 <- luaL_error
	phisrc.32   %phi666(return) <- %r15186
	br          .L3474

.L3464:
	load.64*    %r15188 <- 0[L]
	load.32     %r15189 <- 0[pos]
	push.64*    %r15188
	push.32     $1
	push.32     %r15189
	call        lua_rawseti
	phisrc.32   %phi667(return) <- $0
	br          .L3474

.L3474:
	phi.32      %r15187 <- %phi666(return), %phi667(return)
	ret.32      %r15187


tremove:
.L3475:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15190 <- 0[L]
	push.64*    %r15190
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15191 <- 0[L]
	push.64*    %r15191
	push.32     $1
	call.64     %r15192 <- lua_objlen
	cast.32     %r15193 <- (64) %r15192
	store.32    %r15193 -> 0[e]
	load.64*    %r15194 <- 0[L]
	load.32     %r15195 <- 0[e]
	scast.64    %r15196 <- (32) %r15195
	push.64*    %r15194
	push.32     $2
	push.64     %r15196
	call.64     %r15197 <- luaL_optinteger
	scast.32    %r15198 <- (64) %r15197
	store.32    %r15198 -> 0[pos]
	load.32     %r15199 <- 0[pos]
	setle.32    %r15200 <- $1, %r15199
	load.32     %r15201 <- 0[pos]
	load.32     %r15202 <- 0[e]
	setle.32    %r15203 <- %r15201, %r15202
	and-bool.32 %r15204 <- %r15200, %r15203
	br          %r15204, .L3477, .L3476

.L3476:
	phisrc.32   %phi668(return) <- $0
	br          .L3478

.L3477:
	load.64*    %r15206 <- 0[L]
	load.32     %r15207 <- 0[pos]
	push.64*    %r15206
	push.32     $1
	push.32     %r15207
	call        lua_rawgeti
	br          .L3482

.L3482:
	load.32     %r15208 <- 0[pos]
	load.32     %r15209 <- 0[e]
	setlt.32    %r15210 <- %r15208, %r15209
	br          %r15210, .L3479, .L3481

.L3479:
	load.64*    %r15211 <- 0[L]
	load.32     %r15212 <- 0[pos]
	add.32      %r15213 <- %r15212, $1
	push.64*    %r15211
	push.32     $1
	push.32     %r15213
	call        lua_rawgeti
	load.64*    %r15214 <- 0[L]
	load.32     %r15215 <- 0[pos]
	push.64*    %r15214
	push.32     $1
	push.32     %r15215
	call        lua_rawseti
	br          .L3480

.L3480:
	load.32     %r15216 <- 0[pos]
	add.32      %r15217 <- %r15216, $1
	store.32    %r15217 -> 0[pos]
	br          .L3482

.L3481:
	load.64*    %r15218 <- 0[L]
	push.64*    %r15218
	call        lua_pushnil
	load.64*    %r15219 <- 0[L]
	load.32     %r15220 <- 0[e]
	push.64*    %r15219
	push.32     $1
	push.32     %r15220
	call        lua_rawseti
	phisrc.32   %phi669(return) <- $1
	br          .L3478

.L3478:
	phi.32      %r15205 <- %phi668(return), %phi669(return)
	ret.32      %r15205


addfield:
.L3483:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[b]
	store.32    %arg3 -> 0[i]
	load.64*    %r15221 <- 0[L]
	load.32     %r15222 <- 0[i]
	push.64*    %r15221
	push.32     $1
	push.32     %r15222
	call        lua_rawgeti
	load.64*    %r15223 <- 0[L]
	push.64*    %r15223
	push.32     $0xffffffff
	call.32     %r15224 <- lua_isstring
	br          %r15224, .L3485, .L3484

.L3484:
	load.64*    %r15225 <- 0[L]
	symaddr.64* %r15226 <- <anon symbol:0x62d001489390>
	load.64*    %r15227 <- 0[L]
	load.64*    %r15228 <- 0[L]
	push.64*    %r15228
	push.32     $0xffffffff
	call.32     %r15229 <- lua_type
	push.64*    %r15227
	push.32     %r15229
	call.64*    %r15230 <- lua_typename
	load.32     %r15231 <- 0[i]
	push.64*    %r15225
	push.64*    %r15226
	push.64*    %r15230
	push.32     %r15231
	call.32     %r15232 <- luaL_error
	br          .L3485

.L3485:
	load.64*    %r15233 <- 0[b]
	push.64*    %r15233
	call        luaL_addvalue
	br          .L3486

.L3486:
	ret


tconcat:
.L3487:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15234 <- 0[L]
	symaddr.64* %r15235 <- <anon symbol:0x62d001489730>
	symaddr.64* %r15236 <- lsep
	push.64*    %r15234
	push.32     $2
	push.64*    %r15235
	push.64*    %r15236
	call.64*    %r15237 <- luaL_optlstring
	store.64*   %r15237 -> 0[sep]
	load.64*    %r15238 <- 0[L]
	push.64*    %r15238
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15239 <- 0[L]
	push.64*    %r15239
	push.32     $3
	push.64     $1
	call.64     %r15240 <- luaL_optinteger
	scast.32    %r15241 <- (64) %r15240
	store.32    %r15241 -> 0[i]
	load.64*    %r15242 <- 0[L]
	push.64*    %r15242
	push.32     $4
	call.32     %r15243 <- lua_type
	setle.32    %r15244 <- %r15243, $0
	br          %r15244, .L3488, .L3489

.L3488:
	load.64*    %r15245 <- 0[L]
	push.64*    %r15245
	push.32     $1
	call.64     %r15246 <- lua_objlen
	cast.32     %r15247 <- (64) %r15246
	phisrc.32   %phi670 <- %r15247
	br          .L3490

.L3489:
	load.64*    %r15248 <- 0[L]
	push.64*    %r15248
	push.32     $4
	call.64     %r15249 <- luaL_checkinteger
	scast.32    %r15250 <- (64) %r15249
	phisrc.32   %phi671 <- %r15250
	br          .L3490

.L3490:
	phi.32      %r15251 <- %phi670, %phi671
	store.32    %r15251 -> 0[last]
	load.64*    %r15252 <- 0[L]
	symaddr.64* %r15253 <- b
	push.64*    %r15252
	push.64*    %r15253
	call        luaL_buffinit
	br          .L3494

.L3494:
	load.32     %r15254 <- 0[i]
	load.32     %r15255 <- 0[last]
	setlt.32    %r15256 <- %r15254, %r15255
	br          %r15256, .L3491, .L3493

.L3491:
	load.64*    %r15257 <- 0[L]
	symaddr.64* %r15258 <- b
	load.32     %r15259 <- 0[i]
	push.64*    %r15257
	push.64*    %r15258
	push.32     %r15259
	call        addfield
	symaddr.64* %r15260 <- b
	load.64*    %r15261 <- 0[sep]
	load.64     %r15262 <- 0[lsep]
	push.64*    %r15260
	push.64*    %r15261
	push.64     %r15262
	call        luaL_addlstring
	br          .L3492

.L3492:
	load.32     %r15263 <- 0[i]
	add.32      %r15264 <- %r15263, $1
	store.32    %r15264 -> 0[i]
	br          .L3494

.L3493:
	load.32     %r15265 <- 0[i]
	load.32     %r15266 <- 0[last]
	seteq.32    %r15267 <- %r15265, %r15266
	br          %r15267, .L3495, .L3496

.L3495:
	load.64*    %r15268 <- 0[L]
	symaddr.64* %r15269 <- b
	load.32     %r15270 <- 0[i]
	push.64*    %r15268
	push.64*    %r15269
	push.32     %r15270
	call        addfield
	br          .L3496

.L3496:
	symaddr.64* %r15271 <- b
	push.64*    %r15271
	call        luaL_pushresult
	phisrc.32   %phi672(return) <- $1
	br          .L3497

.L3497:
	phi.32      %r15272 <- %phi672(return)
	ret.32      $1


set2:
.L3498:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.32    %arg3 -> 0[j]
	load.64*    %r15273 <- 0[L]
	load.32     %r15274 <- 0[i]
	push.64*    %r15273
	push.32     $1
	push.32     %r15274
	call        lua_rawseti
	load.64*    %r15275 <- 0[L]
	load.32     %r15276 <- 0[j]
	push.64*    %r15275
	push.32     $1
	push.32     %r15276
	call        lua_rawseti
	br          .L3499

.L3499:
	ret


sort_comp:
.L3500:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[a]
	store.32    %arg3 -> 0[b]
	load.64*    %r15277 <- 0[L]
	push.64*    %r15277
	push.32     $2
	call.32     %r15278 <- lua_type
	seteq.32    %r15279 <- %r15278, $0
	br          %r15279, .L3502, .L3501

.L3501:
	load.64*    %r15280 <- 0[L]
	push.64*    %r15280
	push.32     $2
	call        lua_pushvalue
	load.64*    %r15281 <- 0[L]
	load.32     %r15282 <- 0[a]
	sub.32      %r15283 <- %r15282, $1
	push.64*    %r15281
	push.32     %r15283
	call        lua_pushvalue
	load.64*    %r15284 <- 0[L]
	load.32     %r15285 <- 0[b]
	sub.32      %r15286 <- %r15285, $2
	push.64*    %r15284
	push.32     %r15286
	call        lua_pushvalue
	load.64*    %r15287 <- 0[L]
	push.64*    %r15287
	push.32     $2
	push.32     $1
	call        lua_call
	load.64*    %r15288 <- 0[L]
	push.64*    %r15288
	push.32     $0xffffffff
	call.32     %r15289 <- lua_toboolean
	store.32    %r15289 -> 0[res]
	load.64*    %r15290 <- 0[L]
	push.64*    %r15290
	push.32     $0xfffffffe
	call        lua_settop
	load.32     %r15291 <- 0[res]
	phisrc.32   %phi673(return) <- %r15291
	br          .L3503

.L3502:
	load.64*    %r15293 <- 0[L]
	load.32     %r15294 <- 0[a]
	load.32     %r15295 <- 0[b]
	push.64*    %r15293
	push.32     %r15294
	push.32     %r15295
	call.32     %r15296 <- lua_lessthan
	phisrc.32   %phi674(return) <- %r15296
	br          .L3503

.L3503:
	phi.32      %r15292 <- %phi673(return), %phi674(return)
	ret.32      %r15292


auxsort:
.L3505:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[l]
	store.32    %arg3 -> 0[u]
	br          .L3509

.L3509:
	load.32     %r15297 <- 0[l]
	load.32     %r15298 <- 0[u]
	setlt.32    %r15299 <- %r15297, %r15298
	br          %r15299, .L3506, .L3508

.L3506:
	load.64*    %r15300 <- 0[L]
	load.32     %r15301 <- 0[l]
	push.64*    %r15300
	push.32     $1
	push.32     %r15301
	call        lua_rawgeti
	load.64*    %r15302 <- 0[L]
	load.32     %r15303 <- 0[u]
	push.64*    %r15302
	push.32     $1
	push.32     %r15303
	call        lua_rawgeti
	load.64*    %r15304 <- 0[L]
	push.64*    %r15304
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15305 <- sort_comp
	br          %r15305, .L3510, .L3511

.L3510:
	load.64*    %r15306 <- 0[L]
	load.32     %r15307 <- 0[l]
	load.32     %r15308 <- 0[u]
	push.64*    %r15306
	push.32     %r15307
	push.32     %r15308
	call        set2
	br          .L3512

.L3511:
	load.64*    %r15309 <- 0[L]
	push.64*    %r15309
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3512

.L3512:
	load.32     %r15310 <- 0[u]
	load.32     %r15311 <- 0[l]
	sub.32      %r15312 <- %r15310, %r15311
	seteq.32    %r15313 <- %r15312, $1
	br          %r15313, .L3513, .L3514

.L3513:
	br          .L3508

.L3514:
	load.32     %r15314 <- 0[l]
	load.32     %r15315 <- 0[u]
	add.32      %r15316 <- %r15314, %r15315
	divs.32     %r15317 <- %r15316, $2
	store.32    %r15317 -> 0[i]
	load.64*    %r15318 <- 0[L]
	load.32     %r15319 <- 0[i]
	push.64*    %r15318
	push.32     $1
	push.32     %r15319
	call        lua_rawgeti
	load.64*    %r15320 <- 0[L]
	load.32     %r15321 <- 0[l]
	push.64*    %r15320
	push.32     $1
	push.32     %r15321
	call        lua_rawgeti
	load.64*    %r15322 <- 0[L]
	push.64*    %r15322
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15323 <- sort_comp
	br          %r15323, .L3515, .L3516

.L3515:
	load.64*    %r15324 <- 0[L]
	load.32     %r15325 <- 0[i]
	load.32     %r15326 <- 0[l]
	push.64*    %r15324
	push.32     %r15325
	push.32     %r15326
	call        set2
	br          .L3517

.L3516:
	load.64*    %r15327 <- 0[L]
	push.64*    %r15327
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r15328 <- 0[L]
	load.32     %r15329 <- 0[u]
	push.64*    %r15328
	push.32     $1
	push.32     %r15329
	call        lua_rawgeti
	load.64*    %r15330 <- 0[L]
	push.64*    %r15330
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15331 <- sort_comp
	br          %r15331, .L3518, .L3519

.L3518:
	load.64*    %r15332 <- 0[L]
	load.32     %r15333 <- 0[i]
	load.32     %r15334 <- 0[u]
	push.64*    %r15332
	push.32     %r15333
	push.32     %r15334
	call        set2
	br          .L3520

.L3519:
	load.64*    %r15335 <- 0[L]
	push.64*    %r15335
	push.32     $0xfffffffd
	call        lua_settop
	br          .L3520

.L3520:
	br          .L3517

.L3517:
	load.32     %r15336 <- 0[u]
	load.32     %r15337 <- 0[l]
	sub.32      %r15338 <- %r15336, %r15337
	seteq.32    %r15339 <- %r15338, $2
	br          %r15339, .L3521, .L3522

.L3521:
	br          .L3508

.L3522:
	load.64*    %r15340 <- 0[L]
	load.32     %r15341 <- 0[i]
	push.64*    %r15340
	push.32     $1
	push.32     %r15341
	call        lua_rawgeti
	load.64*    %r15342 <- 0[L]
	push.64*    %r15342
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15343 <- 0[L]
	load.32     %r15344 <- 0[u]
	sub.32      %r15345 <- %r15344, $1
	push.64*    %r15343
	push.32     $1
	push.32     %r15345
	call        lua_rawgeti
	load.64*    %r15346 <- 0[L]
	load.32     %r15347 <- 0[i]
	load.32     %r15348 <- 0[u]
	sub.32      %r15349 <- %r15348, $1
	push.64*    %r15346
	push.32     %r15347
	push.32     %r15349
	call        set2
	load.32     %r15350 <- 0[l]
	store.32    %r15350 -> 0[i]
	load.32     %r15351 <- 0[u]
	sub.32      %r15352 <- %r15351, $1
	store.32    %r15352 -> 0[j]
	br          .L3526

.L3526:
	br          .L3523

.L3523:
	br          .L3530

.L3530:
	load.64*    %r15353 <- 0[L]
	load.32     %r15354 <- 0[i]
	add.32      %r15355 <- %r15354, $1
	store.32    %r15355 -> 0[i]
	push.64*    %r15353
	push.32     $1
	push.32     %r15355
	call        lua_rawgeti
	load.64*    %r15356 <- 0[L]
	push.64*    %r15356
	push.32     $0xffffffff
	push.32     $0xfffffffe
	call.32     %r15357 <- sort_comp
	br          %r15357, .L3527, .L3529

.L3527:
	load.32     %r15358 <- 0[i]
	load.32     %r15359 <- 0[u]
	setgt.32    %r15360 <- %r15358, %r15359
	br          %r15360, .L3531, .L3532

.L3531:
	load.64*    %r15361 <- 0[L]
	symaddr.64* %r15362 <- <anon symbol:0x62d0014aa5e8>
	push.64*    %r15361
	push.64*    %r15362
	call.32     %r15363 <- luaL_error
	br          .L3532

.L3532:
	load.64*    %r15364 <- 0[L]
	push.64*    %r15364
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3528

.L3528:
	br          .L3530

.L3529:
	br          .L3536

.L3536:
	load.64*    %r15365 <- 0[L]
	load.32     %r15366 <- 0[j]
	sub.32      %r15367 <- %r15366, $1
	store.32    %r15367 -> 0[j]
	push.64*    %r15365
	push.32     $1
	push.32     %r15367
	call        lua_rawgeti
	load.64*    %r15368 <- 0[L]
	push.64*    %r15368
	push.32     $0xfffffffd
	push.32     $0xffffffff
	call.32     %r15369 <- sort_comp
	br          %r15369, .L3533, .L3535

.L3533:
	load.32     %r15370 <- 0[j]
	load.32     %r15371 <- 0[l]
	setlt.32    %r15372 <- %r15370, %r15371
	br          %r15372, .L3537, .L3538

.L3537:
	load.64*    %r15373 <- 0[L]
	symaddr.64* %r15374 <- <anon symbol:0x62d0014aa988>
	push.64*    %r15373
	push.64*    %r15374
	call.32     %r15375 <- luaL_error
	br          .L3538

.L3538:
	load.64*    %r15376 <- 0[L]
	push.64*    %r15376
	push.32     $0xfffffffe
	call        lua_settop
	br          .L3534

.L3534:
	br          .L3536

.L3535:
	load.32     %r15377 <- 0[j]
	load.32     %r15378 <- 0[i]
	setlt.32    %r15379 <- %r15377, %r15378
	br          %r15379, .L3539, .L3540

.L3539:
	load.64*    %r15380 <- 0[L]
	push.64*    %r15380
	push.32     $0xfffffffc
	call        lua_settop
	br          .L3525

.L3540:
	load.64*    %r15381 <- 0[L]
	load.32     %r15382 <- 0[i]
	load.32     %r15383 <- 0[j]
	push.64*    %r15381
	push.32     %r15382
	push.32     %r15383
	call        set2
	br          .L3524

.L3524:
	br          .L3526

.L3525:
	load.64*    %r15384 <- 0[L]
	load.32     %r15385 <- 0[u]
	sub.32      %r15386 <- %r15385, $1
	push.64*    %r15384
	push.32     $1
	push.32     %r15386
	call        lua_rawgeti
	load.64*    %r15387 <- 0[L]
	load.32     %r15388 <- 0[i]
	push.64*    %r15387
	push.32     $1
	push.32     %r15388
	call        lua_rawgeti
	load.64*    %r15389 <- 0[L]
	load.32     %r15390 <- 0[u]
	sub.32      %r15391 <- %r15390, $1
	load.32     %r15392 <- 0[i]
	push.64*    %r15389
	push.32     %r15391
	push.32     %r15392
	call        set2
	load.32     %r15393 <- 0[i]
	load.32     %r15394 <- 0[l]
	sub.32      %r15395 <- %r15393, %r15394
	load.32     %r15396 <- 0[u]
	load.32     %r15397 <- 0[i]
	sub.32      %r15398 <- %r15396, %r15397
	setlt.32    %r15399 <- %r15395, %r15398
	br          %r15399, .L3541, .L3542

.L3541:
	load.32     %r15400 <- 0[l]
	store.32    %r15400 -> 0[j]
	load.32     %r15401 <- 0[i]
	sub.32      %r15402 <- %r15401, $1
	store.32    %r15402 -> 0[i]
	load.32     %r15403 <- 0[i]
	add.32      %r15404 <- %r15403, $2
	store.32    %r15404 -> 0[l]
	br          .L3543

.L3542:
	load.32     %r15405 <- 0[i]
	add.32      %r15406 <- %r15405, $1
	store.32    %r15406 -> 0[j]
	load.32     %r15407 <- 0[u]
	store.32    %r15407 -> 0[i]
	load.32     %r15408 <- 0[j]
	sub.32      %r15409 <- %r15408, $2
	store.32    %r15409 -> 0[u]
	br          .L3543

.L3543:
	load.64*    %r15410 <- 0[L]
	load.32     %r15411 <- 0[j]
	load.32     %r15412 <- 0[i]
	push.64*    %r15410
	push.32     %r15411
	push.32     %r15412
	call        auxsort
	br          .L3507

.L3507:
	br          .L3509

.L3508:
	ret


sort:
.L3544:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15413 <- 0[L]
	push.64*    %r15413
	push.32     $1
	push.32     $5
	call        luaL_checktype
	load.64*    %r15414 <- 0[L]
	push.64*    %r15414
	push.32     $1
	call.64     %r15415 <- lua_objlen
	cast.32     %r15416 <- (64) %r15415
	store.32    %r15416 -> 0[n]
	load.64*    %r15417 <- 0[L]
	symaddr.64* %r15418 <- <anon symbol:0x62d0014aad28>
	push.64*    %r15417
	push.32     $40
	push.64*    %r15418
	call        luaL_checkstack
	load.64*    %r15419 <- 0[L]
	push.64*    %r15419
	push.32     $2
	call.32     %r15420 <- lua_type
	setle.32    %r15421 <- %r15420, $0
	br          %r15421, .L3546, .L3545

.L3545:
	load.64*    %r15422 <- 0[L]
	push.64*    %r15422
	push.32     $2
	push.32     $6
	call        luaL_checktype
	br          .L3546

.L3546:
	load.64*    %r15423 <- 0[L]
	push.64*    %r15423
	push.32     $2
	call        lua_settop
	load.64*    %r15424 <- 0[L]
	load.32     %r15425 <- 0[n]
	push.64*    %r15424
	push.32     $1
	push.32     %r15425
	call        auxsort
	phisrc.32   %phi675(return) <- $0
	br          .L3547

.L3547:
	phi.32      %r15426 <- %phi675(return)
	ret.32      $0


luaopen_table:
.L3548:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15427 <- 0[L]
	symaddr.64* %r15428 <- <anon symbol:0x62d0014ab0c8>
	symaddr.64* %r15429 <- tab_funcs
	push.64*    %r15427
	push.64*    %r15428
	push.64*    %r15429
	call        luaL_register
	phisrc.32   %phi676(return) <- $1
	br          .L3549

.L3549:
	phi.32      %r15430 <- %phi676(return)
	ret.32      $1


pushresult:
.L3550:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[filename]
	call.64*    %r15431 <- __errno_location
	load.32     %r15432 <- 0[%r15431]
	store.32    %r15432 -> 0[en]
	load.32     %r15433 <- 0[i]
	br          %r15433, .L3551, .L3552

.L3551:
	load.64*    %r15434 <- 0[L]
	push.64*    %r15434
	push.32     $1
	call        lua_pushboolean
	phisrc.32   %phi677(return) <- $1
	br          .L3553

.L3552:
	load.64*    %r15436 <- 0[L]
	push.64*    %r15436
	call        lua_pushnil
	load.64*    %r15437 <- 0[filename]
	br          %r15437, .L3555, .L3556

.L3555:
	load.64*    %r15438 <- 0[L]
	symaddr.64* %r15439 <- <anon symbol:0x62d0014ab720>
	load.64*    %r15440 <- 0[filename]
	load.32     %r15441 <- 0[en]
	push.32     %r15441
	call.64*    %r15442 <- strerror
	push.64*    %r15438
	push.64*    %r15439
	push.64*    %r15440
	push.64*    %r15442
	call.64*    %r15443 <- lua_pushfstring
	br          .L3557

.L3556:
	load.64*    %r15444 <- 0[L]
	symaddr.64* %r15445 <- <anon symbol:0x62d0014abac0>
	load.32     %r15446 <- 0[en]
	push.32     %r15446
	call.64*    %r15447 <- strerror
	push.64*    %r15444
	push.64*    %r15445
	push.64*    %r15447
	call.64*    %r15448 <- lua_pushfstring
	br          .L3557

.L3557:
	load.64*    %r15449 <- 0[L]
	load.32     %r15450 <- 0[en]
	scast.64    %r15451 <- (32) %r15450
	push.64*    %r15449
	push.64     %r15451
	call        lua_pushinteger
	phisrc.32   %phi678(return) <- $3
	br          .L3553

.L3553:
	phi.32      %r15435 <- %phi677(return), %phi678(return)
	ret.32      %r15435


fileerror:
.L3558:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[arg]
	store.64*   %arg3 -> 0[filename]
	load.64*    %r15452 <- 0[L]
	symaddr.64* %r15453 <- <anon symbol:0x62d0014abe60>
	load.64*    %r15454 <- 0[filename]
	call.64*    %r15455 <- __errno_location
	load.32     %r15456 <- 0[%r15455]
	push.32     %r15456
	call.64*    %r15457 <- strerror
	push.64*    %r15452
	push.64*    %r15453
	push.64*    %r15454
	push.64*    %r15457
	call.64*    %r15458 <- lua_pushfstring
	load.64*    %r15459 <- 0[L]
	load.32     %r15460 <- 0[arg]
	load.64*    %r15461 <- 0[L]
	push.64*    %r15461
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r15462 <- lua_tolstring
	push.64*    %r15459
	push.32     %r15460
	push.64*    %r15462
	call.32     %r15463 <- luaL_argerror
	br          .L3559

.L3559:
	ret


io_type:
.L3560:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15464 <- 0[L]
	push.64*    %r15464
	push.32     $1
	call        luaL_checkany
	load.64*    %r15465 <- 0[L]
	push.64*    %r15465
	push.32     $1
	call.64*    %r15466 <- lua_touserdata
	store.64*   %r15466 -> 0[ud]
	load.64*    %r15467 <- 0[L]
	symaddr.64* %r15468 <- <anon symbol:0x62d0014ac2e8>
	push.64*    %r15467
	push.32     $0xffffd8f0
	push.64*    %r15468
	call        lua_getfield
	load.64*    %r15469 <- 0[ud]
	seteq.32    %r15470 <- %r15469, $0
	br          %r15470, .L3561, .L3564

.L3564:
	load.64*    %r15471 <- 0[L]
	push.64*    %r15471
	push.32     $1
	call.32     %r15472 <- lua_getmetatable
	br          %r15472, .L3563, .L3561

.L3563:
	load.64*    %r15473 <- 0[L]
	push.64*    %r15473
	push.32     $0xfffffffe
	push.32     $0xffffffff
	call.32     %r15474 <- lua_rawequal
	br          %r15474, .L3562, .L3561

.L3561:
	load.64*    %r15475 <- 0[L]
	push.64*    %r15475
	call        lua_pushnil
	br          .L3565

.L3562:
	load.64*    %r15476 <- 0[ud]
	ptrcast.64* %r15477 <- (64) %r15476
	load.64*    %r15478 <- 0[%r15477]
	seteq.32    %r15479 <- %r15478, $0
	br          %r15479, .L3566, .L3567

.L3566:
	load.64*    %r15480 <- 0[L]
	symaddr.64* %r15481 <- <anon symbol:0x62d0014ac770>
	push.64*    %r15480
	push.64*    %r15481
	push.64     $11
	call        lua_pushlstring
	br          .L3568

.L3567:
	load.64*    %r15482 <- 0[L]
	symaddr.64* %r15483 <- <anon symbol:0x62d0014acce0>
	push.64*    %r15482
	push.64*    %r15483
	push.64     $4
	call        lua_pushlstring
	br          .L3568

.L3568:
	br          .L3565

.L3565:
	phisrc.32   %phi679(return) <- $1
	br          .L3569

.L3569:
	phi.32      %r15484 <- %phi679(return)
	ret.32      $1


tofile:
.L3570:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15485 <- 0[L]
	symaddr.64* %r15486 <- <anon symbol:0x62d0014ad250>
	push.64*    %r15485
	push.32     $1
	push.64*    %r15486
	call.64*    %r15487 <- luaL_checkudata
	ptrcast.64* %r15488 <- (64) %r15487
	store.64*   %r15488 -> 0[f]
	load.64*    %r15489 <- 0[f]
	load.64*    %r15490 <- 0[%r15489]
	seteq.32    %r15491 <- %r15490, $0
	br          %r15491, .L3571, .L3572

.L3571:
	load.64*    %r15492 <- 0[L]
	symaddr.64* %r15493 <- <anon symbol:0x62d0014ad6d8>
	push.64*    %r15492
	push.64*    %r15493
	call.32     %r15494 <- luaL_error
	br          .L3572

.L3572:
	load.64*    %r15495 <- 0[f]
	load.64*    %r15496 <- 0[%r15495]
	phisrc.64*  %phi680(return) <- %r15496
	br          .L3573

.L3573:
	phi.64*     %r15497 <- %phi680(return)
	ret.64*     %r15496


newfile:
.L3574:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15498 <- 0[L]
	push.64*    %r15498
	push.64     $8
	call.64*    %r15499 <- lua_newuserdata
	ptrcast.64* %r15500 <- (64) %r15499
	store.64*   %r15500 -> 0[pf]
	load.64*    %r15501 <- 0[pf]
	store.64*   $0 -> 0[%r15501]
	load.64*    %r15502 <- 0[L]
	symaddr.64* %r15503 <- <anon symbol:0x62d0014adc48>
	push.64*    %r15502
	push.32     $0xffffd8f0
	push.64*    %r15503
	call        lua_getfield
	load.64*    %r15504 <- 0[L]
	push.64*    %r15504
	push.32     $0xfffffffe
	call.32     %r15505 <- lua_setmetatable
	load.64*    %r15506 <- 0[pf]
	phisrc.64*  %phi681(return) <- %r15506
	br          .L3575

.L3575:
	phi.64*     %r15507 <- %phi681(return)
	ret.64*     %r15506


io_noclose:
.L3576:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15508 <- 0[L]
	push.64*    %r15508
	call        lua_pushnil
	load.64*    %r15509 <- 0[L]
	symaddr.64* %r15510 <- <anon symbol:0x62d0014adfe8>
	push.64*    %r15509
	push.64*    %r15510
	push.64     $26
	call        lua_pushlstring
	phisrc.32   %phi682(return) <- $2
	br          .L3577

.L3577:
	phi.32      %r15511 <- %phi682(return)
	ret.32      $2


io_pclose:
.L3578:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15512 <- 0[L]
	symaddr.64* %r15513 <- <anon symbol:0x62d0014ae558>
	push.64*    %r15512
	push.32     $1
	push.64*    %r15513
	call.64*    %r15514 <- luaL_checkudata
	ptrcast.64* %r15515 <- (64) %r15514
	store.64*   %r15515 -> 0[p]
	load.64*    %r15516 <- 0[L]
	load.64*    %r15517 <- 0[p]
	load.64*    %r15518 <- 0[%r15517]
	store.32    $0 -> 0[ok]
	load.64*    %r15519 <- 0[p]
	store.64*   $0 -> 0[%r15519]
	load.64*    %r15520 <- 0[L]
	load.32     %r15521 <- 0[ok]
	push.64*    %r15520
	push.32     %r15521
	push.64*    $0
	call.32     %r15522 <- pushresult
	phisrc.32   %phi683(return) <- %r15522
	br          .L3579

.L3579:
	phi.32      %r15523 <- %phi683(return)
	ret.32      %r15522


io_fclose:
.L3580:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15524 <- 0[L]
	symaddr.64* %r15525 <- <anon symbol:0x62d0014aeac8>
	push.64*    %r15524
	push.32     $1
	push.64*    %r15525
	call.64*    %r15526 <- luaL_checkudata
	ptrcast.64* %r15527 <- (64) %r15526
	store.64*   %r15527 -> 0[p]
	load.64*    %r15528 <- 0[p]
	load.64*    %r15529 <- 0[%r15528]
	push.64*    %r15529
	call.32     %r15530 <- fclose
	seteq.32    %r15531 <- %r15530, $0
	store.32    %r15531 -> 0[ok]
	load.64*    %r15532 <- 0[p]
	store.64*   $0 -> 0[%r15532]
	load.64*    %r15533 <- 0[L]
	load.32     %r15534 <- 0[ok]
	push.64*    %r15533
	push.32     %r15534
	push.64*    $0
	call.32     %r15535 <- pushresult
	phisrc.32   %phi684(return) <- %r15535
	br          .L3581

.L3581:
	phi.32      %r15536 <- %phi684(return)
	ret.32      %r15535


aux_close:
.L3582:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15537 <- 0[L]
	push.64*    %r15537
	push.32     $1
	call        lua_getfenv
	load.64*    %r15538 <- 0[L]
	symaddr.64* %r15539 <- <anon symbol:0x62d0014af038>
	push.64*    %r15538
	push.32     $0xffffffff
	push.64*    %r15539
	call        lua_getfield
	load.64*    %r15540 <- 0[L]
	push.64*    %r15540
	load.64*    %r15541 <- 0[L]
	neg.32      %r15542 <- $1
	push.64*    %r15541
	push.32     %r15542
	call.64*    %r15543 <- lua_tocfunction
	call.32     %r15544 <- %r15543
	phisrc.32   %phi685(return) <- %r15544
	br          .L3583

.L3583:
	phi.32      %r15545 <- %phi685(return)
	ret.32      %r15544


io_close:
.L3584:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15546 <- 0[L]
	push.64*    %r15546
	push.32     $1
	call.32     %r15547 <- lua_type
	seteq.32    %r15548 <- %r15547, $0xffffffff
	br          %r15548, .L3585, .L3586

.L3585:
	load.64*    %r15549 <- 0[L]
	push.64*    %r15549
	push.32     $0xffffd8ef
	push.32     $2
	call        lua_rawgeti
	br          .L3586

.L3586:
	load.64*    %r15550 <- 0[L]
	push.64*    %r15550
	call.64*    %r15551 <- tofile
	load.64*    %r15552 <- 0[L]
	push.64*    %r15552
	call.32     %r15553 <- aux_close
	phisrc.32   %phi686(return) <- %r15553
	br          .L3587

.L3587:
	phi.32      %r15554 <- %phi686(return)
	ret.32      %r15553


io_gc:
.L3588:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15555 <- 0[L]
	symaddr.64* %r15556 <- <anon symbol:0x62d0014af3d8>
	push.64*    %r15555
	push.32     $1
	push.64*    %r15556
	call.64*    %r15557 <- luaL_checkudata
	ptrcast.64* %r15558 <- (64) %r15557
	load.64*    %r15559 <- 0[%r15558]
	store.64*   %r15559 -> 0[f]
	load.64*    %r15560 <- 0[f]
	setne.32    %r15561 <- %r15560, $0
	br          %r15561, .L3589, .L3590

.L3589:
	load.64*    %r15562 <- 0[L]
	push.64*    %r15562
	call.32     %r15563 <- aux_close
	br          .L3590

.L3590:
	phisrc.32   %phi687(return) <- $0
	br          .L3591

.L3591:
	phi.32      %r15564 <- %phi687(return)
	ret.32      $0


io_open:
.L3592:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15565 <- 0[L]
	push.64*    %r15565
	push.32     $1
	push.64*    $0
	call.64*    %r15566 <- luaL_checklstring
	store.64*   %r15566 -> 0[filename]
	load.64*    %r15567 <- 0[L]
	symaddr.64* %r15568 <- <anon symbol:0x62d0014af860>
	push.64*    %r15567
	push.32     $2
	push.64*    %r15568
	push.64*    $0
	call.64*    %r15569 <- luaL_optlstring
	store.64*   %r15569 -> 0[mode]
	load.64*    %r15570 <- 0[L]
	push.64*    %r15570
	call.64*    %r15571 <- newfile
	store.64*   %r15571 -> 0[pf]
	load.64*    %r15572 <- 0[filename]
	load.64*    %r15573 <- 0[mode]
	push.64*    %r15572
	push.64*    %r15573
	call.64*    %r15574 <- fopen
	load.64*    %r15575 <- 0[pf]
	store.64*   %r15574 -> 0[%r15575]
	load.64*    %r15576 <- 0[pf]
	load.64*    %r15577 <- 0[%r15576]
	seteq.32    %r15578 <- %r15577, $0
	br          %r15578, .L3594, .L3595

.L3594:
	load.64*    %r15579 <- 0[L]
	load.64*    %r15580 <- 0[filename]
	push.64*    %r15579
	push.32     $0
	push.64*    %r15580
	call.32     %r15581 <- pushresult
	phisrc.32   %phi688 <- %r15581
	br          .L3596

.L3595:
	phisrc.32   %phi689 <- $1
	br          .L3596

.L3596:
	phi.32      %r15582 <- %phi688, %phi689
	phisrc.32   %phi690(return) <- %r15582
	br          .L3593

.L3593:
	phi.32      %r15583 <- %phi690(return)
	ret.32      %r15582


getiofile:
.L3597:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[findex]
	load.64*    %r15584 <- 0[L]
	load.32     %r15585 <- 0[findex]
	push.64*    %r15584
	push.32     $0xffffd8ef
	push.32     %r15585
	call        lua_rawgeti
	load.64*    %r15586 <- 0[L]
	push.64*    %r15586
	push.32     $0xffffffff
	call.64*    %r15587 <- lua_touserdata
	ptrcast.64* %r15588 <- (64) %r15587
	load.64*    %r15589 <- 0[%r15588]
	store.64*   %r15589 -> 0[f]
	load.64*    %r15590 <- 0[f]
	seteq.32    %r15591 <- %r15590, $0
	br          %r15591, .L3598, .L3599

.L3598:
	load.64*    %r15592 <- 0[L]
	symaddr.64* %r15593 <- <anon symbol:0x62d0014afeb8>
	symaddr.64* %r15594 <- fnames
	load.32     %r15595 <- 0[findex]
	sub.32      %r15596 <- %r15595, $1
	scast.64    %r15597 <- (32) %r15596
	muls.64     %r15598 <- %r15597, $8
	add.64*     %r15599 <- %r15594, %r15598
	load.64*    %r15600 <- 0[%r15599]
	push.64*    %r15592
	push.64*    %r15593
	push.64*    %r15600
	call.32     %r15601 <- luaL_error
	br          .L3599

.L3599:
	load.64*    %r15602 <- 0[f]
	phisrc.64*  %phi691(return) <- %r15602
	br          .L3600

.L3600:
	phi.64*     %r15603 <- %phi691(return)
	ret.64*     %r15602


g_iofile:
.L3601:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[f]
	store.64*   %arg3 -> 0[mode]
	load.64*    %r15604 <- 0[L]
	push.64*    %r15604
	push.32     $1
	call.32     %r15605 <- lua_type
	setle.32    %r15606 <- %r15605, $0
	br          %r15606, .L3603, .L3602

.L3602:
	load.64*    %r15607 <- 0[L]
	push.64*    %r15607
	push.32     $1
	push.64*    $0
	call.64*    %r15608 <- lua_tolstring
	store.64*   %r15608 -> 0[filename]
	load.64*    %r15609 <- 0[filename]
	br          %r15609, .L3604, .L3605

.L3604:
	load.64*    %r15610 <- 0[L]
	push.64*    %r15610
	call.64*    %r15611 <- newfile
	store.64*   %r15611 -> 0[pf]
	load.64*    %r15612 <- 0[filename]
	load.64*    %r15613 <- 0[mode]
	push.64*    %r15612
	push.64*    %r15613
	call.64*    %r15614 <- fopen
	load.64*    %r15615 <- 0[pf]
	store.64*   %r15614 -> 0[%r15615]
	load.64*    %r15616 <- 0[pf]
	load.64*    %r15617 <- 0[%r15616]
	seteq.32    %r15618 <- %r15617, $0
	br          %r15618, .L3606, .L3607

.L3606:
	load.64*    %r15619 <- 0[L]
	load.64*    %r15620 <- 0[filename]
	push.64*    %r15619
	push.32     $1
	push.64*    %r15620
	call        fileerror
	br          .L3607

.L3607:
	br          .L3608

.L3605:
	load.64*    %r15621 <- 0[L]
	push.64*    %r15621
	call.64*    %r15622 <- tofile
	load.64*    %r15623 <- 0[L]
	push.64*    %r15623
	push.32     $1
	call        lua_pushvalue
	br          .L3608

.L3608:
	load.64*    %r15624 <- 0[L]
	load.32     %r15625 <- 0[f]
	push.64*    %r15624
	push.32     $0xffffd8ef
	push.32     %r15625
	call        lua_rawseti
	br          .L3603

.L3603:
	load.64*    %r15626 <- 0[L]
	load.32     %r15627 <- 0[f]
	push.64*    %r15626
	push.32     $0xffffd8ef
	push.32     %r15627
	call        lua_rawgeti
	phisrc.32   %phi692(return) <- $1
	br          .L3609

.L3609:
	phi.32      %r15628 <- %phi692(return)
	ret.32      $1


io_input:
.L3610:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15629 <- 0[L]
	symaddr.64* %r15630 <- <anon symbol:0x62d0014b06e0>
	push.64*    %r15629
	push.32     $1
	push.64*    %r15630
	call.32     %r15631 <- g_iofile
	phisrc.32   %phi693(return) <- %r15631
	br          .L3611

.L3611:
	phi.32      %r15632 <- %phi693(return)
	ret.32      %r15631


io_output:
.L3612:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15633 <- 0[L]
	symaddr.64* %r15634 <- <anon symbol:0x62d0014b0a80>
	push.64*    %r15633
	push.32     $2
	push.64*    %r15634
	call.32     %r15635 <- g_iofile
	phisrc.32   %phi694(return) <- %r15635
	br          .L3613

.L3613:
	phi.32      %r15636 <- %phi694(return)
	ret.32      %r15635


aux_lines:
.L3614:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	store.32    %arg3 -> 0[toclose]
	load.64*    %r15637 <- 0[L]
	load.32     %r15638 <- 0[idx]
	push.64*    %r15637
	push.32     %r15638
	call        lua_pushvalue
	load.64*    %r15639 <- 0[L]
	load.32     %r15640 <- 0[toclose]
	push.64*    %r15639
	push.32     %r15640
	call        lua_pushboolean
	load.64*    %r15641 <- 0[L]
	symaddr.64* %r15642 <- io_readline
	push.64*    %r15641
	push.64*    %r15642
	push.32     $2
	call        lua_pushcclosure
	br          .L3615

.L3615:
	ret


f_lines:
.L3616:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15643 <- 0[L]
	push.64*    %r15643
	call.64*    %r15644 <- tofile
	load.64*    %r15645 <- 0[L]
	push.64*    %r15645
	push.32     $1
	push.32     $0
	call        aux_lines
	phisrc.32   %phi695(return) <- $1
	br          .L3617

.L3617:
	phi.32      %r15646 <- %phi695(return)
	ret.32      $1


io_lines:
.L3618:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15647 <- 0[L]
	push.64*    %r15647
	push.32     $1
	call.32     %r15648 <- lua_type
	setle.32    %r15649 <- %r15648, $0
	br          %r15649, .L3619, .L3620

.L3619:
	load.64*    %r15650 <- 0[L]
	push.64*    %r15650
	push.32     $0xffffd8ef
	push.32     $1
	call        lua_rawgeti
	load.64*    %r15651 <- 0[L]
	push.64*    %r15651
	call.32     %r15652 <- f_lines
	phisrc.32   %phi696(return) <- %r15652
	br          .L3621

.L3620:
	load.64*    %r15654 <- 0[L]
	push.64*    %r15654
	push.32     $1
	push.64*    $0
	call.64*    %r15655 <- luaL_checklstring
	store.64*   %r15655 -> 0[filename]
	load.64*    %r15656 <- 0[L]
	push.64*    %r15656
	call.64*    %r15657 <- newfile
	store.64*   %r15657 -> 0[pf]
	load.64*    %r15658 <- 0[filename]
	symaddr.64* %r15659 <- <anon symbol:0x62d0014b19e8>
	push.64*    %r15658
	push.64*    %r15659
	call.64*    %r15660 <- fopen
	load.64*    %r15661 <- 0[pf]
	store.64*   %r15660 -> 0[%r15661]
	load.64*    %r15662 <- 0[pf]
	load.64*    %r15663 <- 0[%r15662]
	seteq.32    %r15664 <- %r15663, $0
	br          %r15664, .L3623, .L3624

.L3623:
	load.64*    %r15665 <- 0[L]
	load.64*    %r15666 <- 0[filename]
	push.64*    %r15665
	push.32     $1
	push.64*    %r15666
	call        fileerror
	br          .L3624

.L3624:
	load.64*    %r15667 <- 0[L]
	load.64*    %r15668 <- 0[L]
	push.64*    %r15668
	call.32     %r15669 <- lua_gettop
	push.64*    %r15667
	push.32     %r15669
	push.32     $1
	call        aux_lines
	phisrc.32   %phi697(return) <- $1
	br          .L3621

.L3621:
	phi.32      %r15653 <- %phi696(return), %phi697(return)
	ret.32      %r15653


read_number:
.L3625:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15670 <- 0[f]
	symaddr.64* %r15671 <- <anon symbol:0x62d0014b1e70>
	symaddr.64* %r15672 <- d
	push.64*    %r15670
	push.64*    %r15671
	push.64*    %r15672
	call.32     %r15673 <- fscanf
	seteq.32    %r15674 <- %r15673, $1
	br          %r15674, .L3626, .L3627

.L3626:
	load.64*    %r15675 <- 0[L]
	load.f64    %r15676 <- 0[d]
	push.64*    %r15675
	push.f64    %r15676
	call        lua_pushnumber
	phisrc.32   %phi698(return) <- $1
	br          .L3628

.L3627:
	load.64*    %r15678 <- 0[L]
	push.64*    %r15678
	call        lua_pushnil
	phisrc.32   %phi699(return) <- $0
	br          .L3628

.L3628:
	phi.32      %r15677 <- %phi698(return), %phi699(return)
	ret.32      %r15677


test_eof:
.L3630:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15679 <- 0[f]
	push.64*    %r15679
	call.32     %r15680 <- _IO_getc
	store.32    %r15680 -> 0[c]
	load.32     %r15681 <- 0[c]
	load.64*    %r15682 <- 0[f]
	push.32     %r15681
	push.64*    %r15682
	call.32     %r15683 <- ungetc
	load.64*    %r15684 <- 0[L]
	push.64*    %r15684
	push.64*    $0
	push.64     $0
	call        lua_pushlstring
	load.32     %r15685 <- 0[c]
	setne.32    %r15686 <- %r15685, $0xffffffff
	phisrc.32   %phi700(return) <- %r15686
	br          .L3631

.L3631:
	phi.32      %r15687 <- %phi700(return)
	ret.32      %r15686


read_line:
.L3632:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	load.64*    %r15688 <- 0[L]
	symaddr.64* %r15689 <- b
	push.64*    %r15688
	push.64*    %r15689
	call        luaL_buffinit
	br          .L3636

.L3636:
	br          .L3633

.L3633:
	symaddr.64* %r15690 <- b
	push.64*    %r15690
	call.64*    %r15691 <- luaL_prepbuffer
	store.64*   %r15691 -> 0[p]
	load.64*    %r15692 <- 0[p]
	load.64*    %r15693 <- 0[f]
	push.64*    %r15692
	push.32     $0x2000
	push.64*    %r15693
	call.64*    %r15694 <- fgets
	seteq.32    %r15695 <- %r15694, $0
	br          %r15695, .L3637, .L3638

.L3637:
	symaddr.64* %r15696 <- b
	push.64*    %r15696
	call        luaL_pushresult
	load.64*    %r15697 <- 0[L]
	push.64*    %r15697
	push.32     $0xffffffff
	call.64     %r15698 <- lua_objlen
	seta.32     %r15699 <- %r15698, $0
	phisrc.32   %phi701(return) <- %r15699
	br          .L3639

.L3638:
	load.64*    %r15701 <- 0[p]
	push.64*    %r15701
	call.64     %r15702 <- strlen
	store.64    %r15702 -> 0[l]
	load.64     %r15703 <- 0[l]
	seteq.32    %r15704 <- %r15703, $0
	br          %r15704, .L3640, .L3642

.L3642:
	load.64*    %r15705 <- 0[p]
	load.64     %r15706 <- 0[l]
	sub.64      %r15707 <- %r15706, $1
	add.64*     %r15708 <- %r15705, %r15707
	load.8      %r15709 <- 0[%r15708]
	scast.32    %r15710 <- (8) %r15709
	setne.32    %r15711 <- %r15710, $10
	br          %r15711, .L3640, .L3641

.L3640:
	load.64     %r15712 <- 0[l]
	load.64*    %r15713 <- 0[b]
	cast.64     %r15714 <- (64) %r15713
	add.64      %r15715 <- %r15714, %r15712
	ptrcast.64* %r15716 <- (64) %r15715
	store.64*   %r15716 -> 0[b]
	br          .L3643

.L3641:
	load.64     %r15717 <- 0[l]
	sub.64      %r15718 <- %r15717, $1
	load.64*    %r15719 <- 0[b]
	cast.64     %r15720 <- (64) %r15719
	add.64      %r15721 <- %r15720, %r15718
	ptrcast.64* %r15722 <- (64) %r15721
	store.64*   %r15722 -> 0[b]
	symaddr.64* %r15723 <- b
	push.64*    %r15723
	call        luaL_pushresult
	phisrc.32   %phi702(return) <- $1
	br          .L3639

.L3643:
	br          .L3634

.L3634:
	br          .L3636

.L3639:
	phi.32      %r15700 <- %phi701(return), %phi702(return)
	ret.32      %r15700


read_chars:
.L3644:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.64    %arg3 -> 0[n]
	load.64*    %r15724 <- 0[L]
	symaddr.64* %r15725 <- b
	push.64*    %r15724
	push.64*    %r15725
	call        luaL_buffinit
	store.64    $0x2000 -> 0[rlen]
	br          .L3645

.L3645:
	symaddr.64* %r15726 <- b
	push.64*    %r15726
	call.64*    %r15727 <- luaL_prepbuffer
	store.64*   %r15727 -> 0[p]
	load.64     %r15728 <- 0[rlen]
	load.64     %r15729 <- 0[n]
	seta.32     %r15730 <- %r15728, %r15729
	br          %r15730, .L3648, .L3649

.L3648:
	load.64     %r15731 <- 0[n]
	store.64    %r15731 -> 0[rlen]
	br          .L3649

.L3649:
	load.64*    %r15732 <- 0[p]
	cast.64*    %r15733 <- (64) %r15732
	load.64     %r15734 <- 0[rlen]
	load.64*    %r15735 <- 0[f]
	push.64*    %r15733
	push.64     $1
	push.64     %r15734
	push.64*    %r15735
	call.64     %r15736 <- fread
	store.64    %r15736 -> 0[nr]
	load.64     %r15737 <- 0[nr]
	load.64*    %r15738 <- 0[b]
	cast.64     %r15739 <- (64) %r15738
	add.64      %r15740 <- %r15739, %r15737
	ptrcast.64* %r15741 <- (64) %r15740
	store.64*   %r15741 -> 0[b]
	load.64     %r15742 <- 0[nr]
	load.64     %r15743 <- 0[n]
	cast.64     %r15744 <- (64) %r15743
	sub.64      %r15745 <- %r15744, %r15742
	cast.64     %r15746 <- (64) %r15745
	store.64    %r15746 -> 0[n]
	br          .L3646

.L3646:
	load.64     %r15747 <- 0[n]
	seta.32     %r15748 <- %r15747, $0
	load.64     %r15749 <- 0[nr]
	load.64     %r15750 <- 0[rlen]
	seteq.32    %r15751 <- %r15749, %r15750
	and-bool.32 %r15752 <- %r15748, %r15751
	br          %r15752, .L3645, .L3647

.L3647:
	symaddr.64* %r15753 <- b
	push.64*    %r15753
	call        luaL_pushresult
	load.64     %r15754 <- 0[n]
	seteq.32    %r15755 <- %r15754, $0
	br          %r15755, .L3651, .L3652

.L3651:
	phisrc.32   %phi703 <- $1
	br          .L3653

.L3652:
	load.64*    %r15756 <- 0[L]
	push.64*    %r15756
	push.32     $0xffffffff
	call.64     %r15757 <- lua_objlen
	seta.32     %r15758 <- %r15757, $0
	phisrc.32   %phi704 <- %r15758
	br          .L3653

.L3653:
	phi.32      %r15759 <- %phi703, %phi704
	phisrc.32   %phi705(return) <- %r15759
	br          .L3650

.L3650:
	phi.32      %r15760 <- %phi705(return)
	ret.32      %r15759


g_read:
.L3654:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[first]
	load.64*    %r15761 <- 0[L]
	push.64*    %r15761
	call.32     %r15762 <- lua_gettop
	sub.32      %r15763 <- %r15762, $1
	store.32    %r15763 -> 0[nargs]
	load.64*    %r15764 <- 0[f]
	push.64*    %r15764
	call        clearerr
	load.32     %r15765 <- 0[nargs]
	seteq.32    %r15766 <- %r15765, $0
	br          %r15766, .L3655, .L3656

.L3655:
	load.64*    %r15767 <- 0[L]
	load.64*    %r15768 <- 0[f]
	push.64*    %r15767
	push.64*    %r15768
	call.32     %r15769 <- read_line
	store.32    %r15769 -> 0[success]
	load.32     %r15770 <- 0[first]
	add.32      %r15771 <- %r15770, $1
	store.32    %r15771 -> 0[n]
	br          .L3657

.L3656:
	load.64*    %r15772 <- 0[L]
	load.32     %r15773 <- 0[nargs]
	add.32      %r15774 <- %r15773, $20
	symaddr.64* %r15775 <- <anon symbol:0x62d0014b59d8>
	push.64*    %r15772
	push.32     %r15774
	push.64*    %r15775
	call        luaL_checkstack
	store.32    $1 -> 0[success]
	load.32     %r15776 <- 0[first]
	store.32    %r15776 -> 0[n]
	br          .L3661

.L3661:
	load.32     %r15777 <- 0[nargs]
	sub.32      %r15778 <- %r15777, $1
	store.32    %r15778 -> 0[nargs]
	load.32     %r15779 <- 0[success]
	and-bool.32 %r15780 <- %r15777, %r15779
	br          %r15780, .L3658, .L3660

.L3658:
	load.64*    %r15781 <- 0[L]
	load.32     %r15782 <- 0[n]
	push.64*    %r15781
	push.32     %r15782
	call.32     %r15783 <- lua_type
	seteq.32    %r15784 <- %r15783, $3
	br          %r15784, .L3662, .L3663

.L3662:
	load.64*    %r15785 <- 0[L]
	load.32     %r15786 <- 0[n]
	push.64*    %r15785
	push.32     %r15786
	call.64     %r15787 <- lua_tointeger
	scast.64    %r15788 <- (64) %r15787
	store.64    %r15788 -> 0[l]
	load.64     %r15789 <- 0[l]
	seteq.32    %r15790 <- %r15789, $0
	br          %r15790, .L3664, .L3665

.L3664:
	load.64*    %r15791 <- 0[L]
	load.64*    %r15792 <- 0[f]
	push.64*    %r15791
	push.64*    %r15792
	call.32     %r15793 <- test_eof
	phisrc.32   %phi706 <- %r15793
	br          .L3666

.L3665:
	load.64*    %r15794 <- 0[L]
	load.64*    %r15795 <- 0[f]
	load.64     %r15796 <- 0[l]
	push.64*    %r15794
	push.64*    %r15795
	push.64     %r15796
	call.32     %r15797 <- read_chars
	phisrc.32   %phi707 <- %r15797
	br          .L3666

.L3666:
	phi.32      %r15798 <- %phi706, %phi707
	store.32    %r15798 -> 0[success]
	br          .L3667

.L3663:
	load.64*    %r15799 <- 0[L]
	load.32     %r15800 <- 0[n]
	push.64*    %r15799
	push.32     %r15800
	push.64*    $0
	call.64*    %r15801 <- lua_tolstring
	store.64*   %r15801 -> 0[p]
	load.64*    %r15802 <- 0[p]
	br          %r15802, .L3671, .L3669

.L3671:
	load.64*    %r15803 <- 0[p]
	load.8      %r15804 <- 0[%r15803]
	scast.32    %r15805 <- (8) %r15804
	seteq.32    %r15806 <- %r15805, $42
	br          %r15806, .L3668, .L3669

.L3668:
	phisrc.32   %phi708 <- $1
	br          .L3670

.L3669:
	load.64*    %r15807 <- 0[L]
	load.32     %r15808 <- 0[n]
	symaddr.64* %r15809 <- <anon symbol:0x62d0014b5e60>
	push.64*    %r15807
	push.32     %r15808
	push.64*    %r15809
	call.32     %r15810 <- luaL_argerror
	phisrc.32   %phi709 <- %r15810
	br          .L3670

.L3670:
	phi.32      %r15811 <- %phi708, %phi709
	load.64*    %r15812 <- 0[p]
	load.8      %r15813 <- 1[%r15812]
	switch.8    %r15813, 97 -> .L3675, 108 -> .L3674, 110 -> .L3673, default -> .L3676

.L3673:
	load.64*    %r15814 <- 0[L]
	load.64*    %r15815 <- 0[f]
	push.64*    %r15814
	push.64*    %r15815
	call.32     %r15816 <- read_number
	store.32    %r15816 -> 0[success]
	br          .L3672

.L3674:
	load.64*    %r15817 <- 0[L]
	load.64*    %r15818 <- 0[f]
	push.64*    %r15817
	push.64*    %r15818
	call.32     %r15819 <- read_line
	store.32    %r15819 -> 0[success]
	br          .L3672

.L3675:
	load.64*    %r15820 <- 0[L]
	load.64*    %r15821 <- 0[f]
	push.64*    %r15820
	push.64*    %r15821
	push.64     $-1
	call.32     %r15822 <- read_chars
	store.32    $1 -> 0[success]
	br          .L3672

.L3676:
	load.64*    %r15823 <- 0[L]
	load.32     %r15824 <- 0[n]
	symaddr.64* %r15825 <- <anon symbol:0x62d0014b62e8>
	push.64*    %r15823
	push.32     %r15824
	push.64*    %r15825
	call.32     %r15826 <- luaL_argerror
	phisrc.32   %phi710(return) <- %r15826
	br          .L3677

.L3672:
	br          .L3667

.L3667:
	br          .L3659

.L3659:
	load.32     %r15828 <- 0[n]
	add.32      %r15829 <- %r15828, $1
	store.32    %r15829 -> 0[n]
	br          .L3661

.L3660:
	br          .L3657

.L3657:
	load.64*    %r15830 <- 0[f]
	push.64*    %r15830
	call.32     %r15831 <- ferror
	br          %r15831, .L3678, .L3679

.L3678:
	load.64*    %r15832 <- 0[L]
	push.64*    %r15832
	push.32     $0
	push.64*    $0
	call.32     %r15833 <- pushresult
	phisrc.32   %phi711(return) <- %r15833
	br          .L3677

.L3679:
	load.32     %r15834 <- 0[success]
	br          %r15834, .L3681, .L3680

.L3680:
	load.64*    %r15835 <- 0[L]
	push.64*    %r15835
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r15836 <- 0[L]
	push.64*    %r15836
	call        lua_pushnil
	br          .L3681

.L3681:
	load.32     %r15837 <- 0[n]
	load.32     %r15838 <- 0[first]
	sub.32      %r15839 <- %r15837, %r15838
	phisrc.32   %phi712(return) <- %r15839
	br          .L3677

.L3677:
	phi.32      %r15827 <- %phi710(return), %phi711(return), %phi712(return)
	ret.32      %r15827


io_read:
.L3682:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15840 <- 0[L]
	load.64*    %r15841 <- 0[L]
	push.64*    %r15841
	push.32     $1
	call.64*    %r15842 <- getiofile
	push.64*    %r15840
	push.64*    %r15842
	push.32     $1
	call.32     %r15843 <- g_read
	phisrc.32   %phi713(return) <- %r15843
	br          .L3683

.L3683:
	phi.32      %r15844 <- %phi713(return)
	ret.32      %r15843


f_read:
.L3684:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15845 <- 0[L]
	load.64*    %r15846 <- 0[L]
	push.64*    %r15846
	call.64*    %r15847 <- tofile
	push.64*    %r15845
	push.64*    %r15847
	push.32     $2
	call.32     %r15848 <- g_read
	phisrc.32   %phi714(return) <- %r15848
	br          .L3685

.L3685:
	phi.32      %r15849 <- %phi714(return)
	ret.32      %r15848


io_readline:
.L3686:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15850 <- 0[L]
	push.64*    %r15850
	push.32     $0xffffd8ed
	call.64*    %r15851 <- lua_touserdata
	ptrcast.64* %r15852 <- (64) %r15851
	load.64*    %r15853 <- 0[%r15852]
	store.64*   %r15853 -> 0[f]
	load.64*    %r15854 <- 0[f]
	seteq.32    %r15855 <- %r15854, $0
	br          %r15855, .L3687, .L3688

.L3687:
	load.64*    %r15856 <- 0[L]
	symaddr.64* %r15857 <- <anon symbol:0x62d0014b0f08>
	push.64*    %r15856
	push.64*    %r15857
	call.32     %r15858 <- luaL_error
	br          .L3688

.L3688:
	load.64*    %r15859 <- 0[L]
	load.64*    %r15860 <- 0[f]
	push.64*    %r15859
	push.64*    %r15860
	call.32     %r15861 <- read_line
	store.32    %r15861 -> 0[sucess]
	load.64*    %r15862 <- 0[f]
	push.64*    %r15862
	call.32     %r15863 <- ferror
	br          %r15863, .L3689, .L3690

.L3689:
	load.64*    %r15864 <- 0[L]
	symaddr.64* %r15865 <- <anon symbol:0x62d0014b12a8>
	call.64*    %r15866 <- __errno_location
	load.32     %r15867 <- 0[%r15866]
	push.32     %r15867
	call.64*    %r15868 <- strerror
	push.64*    %r15864
	push.64*    %r15865
	push.64*    %r15868
	call.32     %r15869 <- luaL_error
	phisrc.32   %phi715(return) <- %r15869
	br          .L3691

.L3690:
	load.32     %r15871 <- 0[sucess]
	br          %r15871, .L3692, .L3693

.L3692:
	phisrc.32   %phi716(return) <- $1
	br          .L3691

.L3693:
	load.64*    %r15872 <- 0[L]
	push.64*    %r15872
	push.32     $0xffffd8ec
	call.32     %r15873 <- lua_toboolean
	br          %r15873, .L3695, .L3696

.L3695:
	load.64*    %r15874 <- 0[L]
	push.64*    %r15874
	push.32     $0
	call        lua_settop
	load.64*    %r15875 <- 0[L]
	push.64*    %r15875
	push.32     $0xffffd8ed
	call        lua_pushvalue
	load.64*    %r15876 <- 0[L]
	push.64*    %r15876
	call.32     %r15877 <- aux_close
	br          .L3696

.L3696:
	phisrc.32   %phi717(return) <- $0
	br          .L3691

.L3691:
	phi.32      %r15870 <- %phi715(return), %phi716(return), %phi717(return)
	ret.32      %r15870


g_write:
.L3697:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[arg]
	load.64*    %r15878 <- 0[L]
	push.64*    %r15878
	call.32     %r15879 <- lua_gettop
	sub.32      %r15880 <- %r15879, $1
	store.32    %r15880 -> 0[nargs]
	store.32    $1 -> 0[status]
	br          .L3701

.L3701:
	load.32     %r15881 <- 0[nargs]
	sub.32      %r15882 <- %r15881, $1
	store.32    %r15882 -> 0[nargs]
	br          %r15881, .L3698, .L3700

.L3698:
	load.64*    %r15883 <- 0[L]
	load.32     %r15884 <- 0[arg]
	push.64*    %r15883
	push.32     %r15884
	call.32     %r15885 <- lua_type
	seteq.32    %r15886 <- %r15885, $3
	br          %r15886, .L3702, .L3703

.L3702:
	load.32     %r15887 <- 0[status]
	br          %r15887, .L3704, .L3705

.L3704:
	load.64*    %r15888 <- 0[f]
	symaddr.64* %r15889 <- <anon symbol:0x62d0014b6688>
	load.64*    %r15890 <- 0[L]
	load.32     %r15891 <- 0[arg]
	push.64*    %r15890
	push.32     %r15891
	call.f64    %r15892 <- lua_tonumber
	push.64*    %r15888
	push.64*    %r15889
	push.f64    %r15892
	call.32     %r15893 <- fprintf
	setgt.32    %r15894 <- %r15893, $0
	phisrc.32   %phi718 <- %r15894
	br          .L3706

.L3705:
	phisrc.32   %phi719 <- $0
	br          .L3706

.L3706:
	phi.32      %r15895 <- %phi718, %phi719
	store.32    %r15895 -> 0[status]
	br          .L3707

.L3703:
	load.64*    %r15896 <- 0[L]
	load.32     %r15897 <- 0[arg]
	symaddr.64* %r15898 <- l
	push.64*    %r15896
	push.32     %r15897
	push.64*    %r15898
	call.64*    %r15899 <- luaL_checklstring
	store.64*   %r15899 -> 0[s]
	load.32     %r15900 <- 0[status]
	br          %r15900, .L3708, .L3709

.L3708:
	load.64*    %r15901 <- 0[s]
	cast.64*    %r15902 <- (64) %r15901
	load.64     %r15903 <- 0[l]
	load.64*    %r15904 <- 0[f]
	push.64*    %r15902
	push.64     $1
	push.64     %r15903
	push.64*    %r15904
	call.64     %r15905 <- fwrite
	load.64     %r15906 <- 0[l]
	seteq.32    %r15907 <- %r15905, %r15906
	phisrc.32   %phi720 <- %r15907
	br          .L3710

.L3709:
	phisrc.32   %phi721 <- $0
	br          .L3710

.L3710:
	phi.32      %r15908 <- %phi720, %phi721
	store.32    %r15908 -> 0[status]
	br          .L3707

.L3707:
	br          .L3699

.L3699:
	load.32     %r15909 <- 0[arg]
	add.32      %r15910 <- %r15909, $1
	store.32    %r15910 -> 0[arg]
	br          .L3701

.L3700:
	load.64*    %r15911 <- 0[L]
	load.32     %r15912 <- 0[status]
	push.64*    %r15911
	push.32     %r15912
	push.64*    $0
	call.32     %r15913 <- pushresult
	phisrc.32   %phi722(return) <- %r15913
	br          .L3711

.L3711:
	phi.32      %r15914 <- %phi722(return)
	ret.32      %r15913


io_write:
.L3712:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15915 <- 0[L]
	load.64*    %r15916 <- 0[L]
	push.64*    %r15916
	push.32     $2
	call.64*    %r15917 <- getiofile
	push.64*    %r15915
	push.64*    %r15917
	push.32     $1
	call.32     %r15918 <- g_write
	phisrc.32   %phi723(return) <- %r15918
	br          .L3713

.L3713:
	phi.32      %r15919 <- %phi723(return)
	ret.32      %r15918


f_write:
.L3714:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15920 <- 0[L]
	load.64*    %r15921 <- 0[L]
	push.64*    %r15921
	call.64*    %r15922 <- tofile
	push.64*    %r15920
	push.64*    %r15922
	push.32     $2
	call.32     %r15923 <- g_write
	phisrc.32   %phi724(return) <- %r15923
	br          .L3715

.L3715:
	phi.32      %r15924 <- %phi724(return)
	ret.32      %r15923


io_flush:
.L3716:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15925 <- 0[L]
	load.64*    %r15926 <- 0[L]
	push.64*    %r15926
	push.32     $2
	call.64*    %r15927 <- getiofile
	push.64*    %r15927
	call.32     %r15928 <- fflush
	seteq.32    %r15929 <- %r15928, $0
	push.64*    %r15925
	push.32     %r15929
	push.64*    $0
	call.32     %r15930 <- pushresult
	phisrc.32   %phi725(return) <- %r15930
	br          .L3717

.L3717:
	phi.32      %r15931 <- %phi725(return)
	ret.32      %r15930


f_flush:
.L3718:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15932 <- 0[L]
	load.64*    %r15933 <- 0[L]
	push.64*    %r15933
	call.64*    %r15934 <- tofile
	push.64*    %r15934
	call.32     %r15935 <- fflush
	seteq.32    %r15936 <- %r15935, $0
	push.64*    %r15932
	push.32     %r15936
	push.64*    $0
	call.32     %r15937 <- pushresult
	phisrc.32   %phi726(return) <- %r15937
	br          .L3719

.L3719:
	phi.32      %r15938 <- %phi726(return)
	ret.32      %r15937


createmeta:
.L3720:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15939 <- 0[L]
	symaddr.64* %r15940 <- <anon symbol:0x62d0014b6bf8>
	push.64*    %r15939
	push.64*    %r15940
	call.32     %r15941 <- luaL_newmetatable
	load.64*    %r15942 <- 0[L]
	push.64*    %r15942
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15943 <- 0[L]
	symaddr.64* %r15944 <- <anon symbol:0x62d0014b6f98>
	push.64*    %r15943
	push.32     $0xfffffffe
	push.64*    %r15944
	call        lua_setfield
	load.64*    %r15945 <- 0[L]
	symaddr.64* %r15946 <- flib
	push.64*    %r15945
	push.64*    $0
	push.64*    %r15946
	call        luaL_register
	br          .L3721

.L3721:
	ret


createstdfile:
.L3722:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[f]
	store.32    %arg3 -> 0[k]
	store.64*   %arg4 -> 0[fname]
	load.64*    %r15947 <- 0[f]
	load.64*    %r15948 <- 0[L]
	push.64*    %r15948
	call.64*    %r15949 <- newfile
	store.64*   %r15947 -> 0[%r15949]
	load.32     %r15950 <- 0[k]
	setgt.32    %r15951 <- %r15950, $0
	br          %r15951, .L3723, .L3724

.L3723:
	load.64*    %r15952 <- 0[L]
	push.64*    %r15952
	push.32     $0xffffffff
	call        lua_pushvalue
	load.64*    %r15953 <- 0[L]
	load.32     %r15954 <- 0[k]
	push.64*    %r15953
	push.32     $0xffffd8ef
	push.32     %r15954
	call        lua_rawseti
	br          .L3724

.L3724:
	load.64*    %r15955 <- 0[L]
	push.64*    %r15955
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r15956 <- 0[L]
	push.64*    %r15956
	push.32     $0xfffffffe
	call.32     %r15957 <- lua_setfenv
	load.64*    %r15958 <- 0[L]
	load.64*    %r15959 <- 0[fname]
	push.64*    %r15958
	push.32     $0xfffffffd
	push.64*    %r15959
	call        lua_setfield
	br          .L3725

.L3725:
	ret


newfenv:
.L3726:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[cls]
	load.64*    %r15960 <- 0[L]
	push.64*    %r15960
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r15961 <- 0[L]
	load.64*    %r15962 <- 0[cls]
	push.64*    %r15961
	push.64*    %r15962
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r15963 <- 0[L]
	symaddr.64* %r15964 <- <anon symbol:0x62d0014b75f0>
	push.64*    %r15963
	push.32     $0xfffffffe
	push.64*    %r15964
	call        lua_setfield
	br          .L3727

.L3727:
	ret


luaopen_io:
.L3728:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r15965 <- 0[L]
	push.64*    %r15965
	call        createmeta
	load.64*    %r15966 <- 0[L]
	symaddr.64* %r15967 <- io_fclose
	push.64*    %r15966
	push.64*    %r15967
	call        newfenv
	load.64*    %r15968 <- 0[L]
	push.64*    %r15968
	push.32     $0xffffd8ef
	call        lua_replace
	load.64*    %r15969 <- 0[L]
	symaddr.64* %r15970 <- <anon symbol:0x62d0014b7b60>
	symaddr.64* %r15971 <- iolib
	push.64*    %r15969
	push.64*    %r15970
	push.64*    %r15971
	call        luaL_register
	load.64*    %r15972 <- 0[L]
	symaddr.64* %r15973 <- io_noclose
	push.64*    %r15972
	push.64*    %r15973
	call        newfenv
	load.64*    %r15974 <- 0[L]
	load.64*    %r15975 <- 0[stdin]
	symaddr.64* %r15976 <- <anon symbol:0x62d0014b82a0>
	push.64*    %r15974
	push.64*    %r15975
	push.32     $1
	push.64*    %r15976
	call        createstdfile
	load.64*    %r15977 <- 0[L]
	load.64*    %r15978 <- 0[stdout]
	symaddr.64* %r15979 <- <anon symbol:0x62d0014b8640>
	push.64*    %r15977
	push.64*    %r15978
	push.32     $2
	push.64*    %r15979
	call        createstdfile
	load.64*    %r15980 <- 0[L]
	load.64*    %r15981 <- 0[stderr]
	symaddr.64* %r15982 <- <anon symbol:0x62d0014b89e0>
	push.64*    %r15980
	push.64*    %r15981
	push.32     $0
	push.64*    %r15982
	call        createstdfile
	load.64*    %r15983 <- 0[L]
	push.64*    %r15983
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r15984 <- 0[L]
	symaddr.64* %r15985 <- <anon symbol:0x62d0014b8d80>
	push.64*    %r15984
	push.32     $0xffffffff
	push.64*    %r15985
	call        lua_getfield
	load.64*    %r15986 <- 0[L]
	symaddr.64* %r15987 <- io_pclose
	push.64*    %r15986
	push.64*    %r15987
	call        newfenv
	load.64*    %r15988 <- 0[L]
	push.64*    %r15988
	push.32     $0xfffffffe
	call.32     %r15989 <- lua_setfenv
	load.64*    %r15990 <- 0[L]
	push.64*    %r15990
	push.32     $0xfffffffe
	call        lua_settop
	phisrc.32   %phi727(return) <- $1
	br          .L3729

.L3729:
	phi.32      %r15991 <- %phi727(return)
	ret.32      $1


os_pushresult:
.L3730:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[filename]
	call.64*    %r15992 <- __errno_location
	load.32     %r15993 <- 0[%r15992]
	store.32    %r15993 -> 0[en]
	load.32     %r15994 <- 0[i]
	br          %r15994, .L3731, .L3732

.L3731:
	load.64*    %r15995 <- 0[L]
	push.64*    %r15995
	push.32     $1
	call        lua_pushboolean
	phisrc.32   %phi728(return) <- $1
	br          .L3733

.L3732:
	load.64*    %r15997 <- 0[L]
	push.64*    %r15997
	call        lua_pushnil
	load.64*    %r15998 <- 0[L]
	symaddr.64* %r15999 <- <anon symbol:0x62d0014b93d8>
	load.64*    %r16000 <- 0[filename]
	load.32     %r16001 <- 0[en]
	push.32     %r16001
	call.64*    %r16002 <- strerror
	push.64*    %r15998
	push.64*    %r15999
	push.64*    %r16000
	push.64*    %r16002
	call.64*    %r16003 <- lua_pushfstring
	load.64*    %r16004 <- 0[L]
	load.32     %r16005 <- 0[en]
	scast.64    %r16006 <- (32) %r16005
	push.64*    %r16004
	push.64     %r16006
	call        lua_pushinteger
	phisrc.32   %phi729(return) <- $3
	br          .L3733

.L3733:
	phi.32      %r15996 <- %phi728(return), %phi729(return)
	ret.32      %r15996


os_remove:
.L3735:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16007 <- 0[L]
	push.64*    %r16007
	push.32     $1
	push.64*    $0
	call.64*    %r16008 <- luaL_checklstring
	store.64*   %r16008 -> 0[filename]
	load.64*    %r16009 <- 0[L]
	load.64*    %r16010 <- 0[filename]
	push.64*    %r16010
	call.32     %r16011 <- remove
	seteq.32    %r16012 <- %r16011, $0
	load.64*    %r16013 <- 0[filename]
	push.64*    %r16009
	push.32     %r16012
	push.64*    %r16013
	call.32     %r16014 <- os_pushresult
	phisrc.32   %phi730(return) <- %r16014
	br          .L3736

.L3736:
	phi.32      %r16015 <- %phi730(return)
	ret.32      %r16014


os_exit:
.L3737:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16016 <- 0[L]
	push.64*    %r16016
	push.32     $1
	push.64     $0
	call.64     %r16017 <- luaL_optinteger
	scast.32    %r16018 <- (64) %r16017
	push.32     %r16018
	call        exit
	phisrc.32   %phi731(return) <- $0
	br          .L3738

.L3738:
	phi.32      %r16019 <- %phi731(return)
	ret.32      $0


luaopen_os:
.L3739:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16020 <- 0[L]
	symaddr.64* %r16021 <- <anon symbol:0x62d0014b9778>
	symaddr.64* %r16022 <- syslib
	push.64*    %r16020
	push.64*    %r16021
	push.64*    %r16022
	call        luaL_register
	phisrc.32   %phi732(return) <- $1
	br          .L3740

.L3740:
	phi.32      %r16023 <- %phi732(return)
	ret.32      $1


posrelat:
.L3741:
	<entry-point>
	store.64    %arg1 -> 0[pos]
	store.64    %arg2 -> 0[len]
	load.64     %r16024 <- 0[pos]
	setlt.32    %r16025 <- %r16024, $0
	br          %r16025, .L3742, .L3743

.L3742:
	load.64     %r16026 <- 0[len]
	cast.64     %r16027 <- (64) %r16026
	add.64      %r16028 <- %r16027, $1
	load.64     %r16029 <- 0[pos]
	scast.64    %r16030 <- (64) %r16029
	add.64      %r16031 <- %r16030, %r16028
	scast.64    %r16032 <- (64) %r16031
	store.64    %r16032 -> 0[pos]
	br          .L3743

.L3743:
	load.64     %r16033 <- 0[pos]
	load.64     %r16034 <- 0[pos]
	setge.32    %r16035 <- %r16034, $0
	select.64   %r16036 <- %r16035, %r16033, $0
	phisrc.64   %phi733(return) <- %r16036
	br          .L3744

.L3744:
	phi.64      %r16037 <- %phi733(return)
	ret.64      %r16036


str_sub:
.L3745:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16038 <- 0[L]
	symaddr.64* %r16039 <- l
	push.64*    %r16038
	push.32     $1
	push.64*    %r16039
	call.64*    %r16040 <- luaL_checklstring
	store.64*   %r16040 -> 0[s]
	load.64*    %r16041 <- 0[L]
	push.64*    %r16041
	push.32     $2
	call.64     %r16042 <- luaL_checkinteger
	load.64     %r16043 <- 0[l]
	push.64     %r16042
	push.64     %r16043
	call.64     %r16044 <- posrelat
	store.64    %r16044 -> 0[start]
	load.64*    %r16045 <- 0[L]
	push.64*    %r16045
	push.32     $3
	push.64     $-1
	call.64     %r16046 <- luaL_optinteger
	load.64     %r16047 <- 0[l]
	push.64     %r16046
	push.64     %r16047
	call.64     %r16048 <- posrelat
	store.64    %r16048 -> 0[end]
	load.64     %r16049 <- 0[start]
	setlt.32    %r16050 <- %r16049, $1
	br          %r16050, .L3746, .L3747

.L3746:
	store.64    $1 -> 0[start]
	br          .L3747

.L3747:
	load.64     %r16051 <- 0[end]
	load.64     %r16052 <- 0[l]
	cast.64     %r16053 <- (64) %r16052
	setgt.32    %r16054 <- %r16051, %r16053
	br          %r16054, .L3748, .L3749

.L3748:
	load.64     %r16055 <- 0[l]
	cast.64     %r16056 <- (64) %r16055
	store.64    %r16056 -> 0[end]
	br          .L3749

.L3749:
	load.64     %r16057 <- 0[start]
	load.64     %r16058 <- 0[end]
	setle.32    %r16059 <- %r16057, %r16058
	br          %r16059, .L3750, .L3751

.L3750:
	load.64*    %r16060 <- 0[L]
	load.64*    %r16061 <- 0[s]
	load.64     %r16062 <- 0[start]
	add.64*     %r16063 <- %r16061, %r16062
	sub.64*     %r16064 <- %r16063, $1
	load.64     %r16065 <- 0[end]
	load.64     %r16066 <- 0[start]
	sub.64      %r16067 <- %r16065, %r16066
	add.64      %r16068 <- %r16067, $1
	scast.64    %r16069 <- (64) %r16068
	push.64*    %r16060
	push.64*    %r16064
	push.64     %r16069
	call        lua_pushlstring
	br          .L3752

.L3751:
	load.64*    %r16070 <- 0[L]
	symaddr.64* %r16071 <- <anon symbol:0x62d0014b9eb8>
	push.64*    %r16070
	push.64*    %r16071
	push.64     $0
	call        lua_pushlstring
	br          .L3752

.L3752:
	phisrc.32   %phi734(return) <- $1
	br          .L3753

.L3753:
	phi.32      %r16072 <- %phi734(return)
	ret.32      $1


str_lower:
.L3754:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16073 <- 0[L]
	symaddr.64* %r16074 <- l
	push.64*    %r16073
	push.32     $1
	push.64*    %r16074
	call.64*    %r16075 <- luaL_checklstring
	store.64*   %r16075 -> 0[s]
	load.64*    %r16076 <- 0[L]
	symaddr.64* %r16077 <- b
	push.64*    %r16076
	push.64*    %r16077
	call        luaL_buffinit
	store.64    $0 -> 0[i]
	br          .L3758

.L3758:
	load.64     %r16078 <- 0[i]
	load.64     %r16079 <- 0[l]
	setb.32     %r16080 <- %r16078, %r16079
	br          %r16080, .L3755, .L3757

.L3755:
	load.64*    %r16081 <- 0[b]
	symaddr.64* %r16082 <- b
	add.64*     %r16083 <- %r16082, $24
	add.64*     %r16084 <- %r16083, $0x2000
	setb.32     %r16085 <- %r16081, %r16084
	br          %r16085, .L3759, .L3760

.L3759:
	phisrc.32   %phi735 <- $1
	br          .L3761

.L3760:
	symaddr.64* %r16086 <- b
	push.64*    %r16086
	call.64*    %r16087 <- luaL_prepbuffer
	phisrc.32   %phi736 <- %r16087
	br          .L3761

.L3761:
	phi.32      %r16088 <- %phi735, %phi736
	load.64*    %r16089 <- 0[s]
	load.64     %r16090 <- 0[i]
	add.64*     %r16091 <- %r16089, %r16090
	load.8      %r16092 <- 0[%r16091]
	scast.8     %r16093 <- (8) %r16092
	cast.32     %r16094 <- (8) %r16093
	push.32     %r16094
	call.32     %r16095 <- tolower
	scast.8     %r16096 <- (32) %r16095
	load.64*    %r16097 <- 0[b]
	add.64*     %r16098 <- %r16097, $1
	store.64*   %r16098 -> 0[b]
	store.8     %r16096 -> 0[%r16097]
	br          .L3756

.L3756:
	load.64     %r16099 <- 0[i]
	add.64      %r16100 <- %r16099, $1
	store.64    %r16100 -> 0[i]
	br          .L3758

.L3757:
	symaddr.64* %r16101 <- b
	push.64*    %r16101
	call        luaL_pushresult
	phisrc.32   %phi737(return) <- $1
	br          .L3762

.L3762:
	phi.32      %r16102 <- %phi737(return)
	ret.32      $1


str_upper:
.L3763:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16103 <- 0[L]
	symaddr.64* %r16104 <- l
	push.64*    %r16103
	push.32     $1
	push.64*    %r16104
	call.64*    %r16105 <- luaL_checklstring
	store.64*   %r16105 -> 0[s]
	load.64*    %r16106 <- 0[L]
	symaddr.64* %r16107 <- b
	push.64*    %r16106
	push.64*    %r16107
	call        luaL_buffinit
	store.64    $0 -> 0[i]
	br          .L3767

.L3767:
	load.64     %r16108 <- 0[i]
	load.64     %r16109 <- 0[l]
	setb.32     %r16110 <- %r16108, %r16109
	br          %r16110, .L3764, .L3766

.L3764:
	load.64*    %r16111 <- 0[b]
	symaddr.64* %r16112 <- b
	add.64*     %r16113 <- %r16112, $24
	add.64*     %r16114 <- %r16113, $0x2000
	setb.32     %r16115 <- %r16111, %r16114
	br          %r16115, .L3768, .L3769

.L3768:
	phisrc.32   %phi738 <- $1
	br          .L3770

.L3769:
	symaddr.64* %r16116 <- b
	push.64*    %r16116
	call.64*    %r16117 <- luaL_prepbuffer
	phisrc.32   %phi739 <- %r16117
	br          .L3770

.L3770:
	phi.32      %r16118 <- %phi738, %phi739
	load.64*    %r16119 <- 0[s]
	load.64     %r16120 <- 0[i]
	add.64*     %r16121 <- %r16119, %r16120
	load.8      %r16122 <- 0[%r16121]
	scast.8     %r16123 <- (8) %r16122
	cast.32     %r16124 <- (8) %r16123
	push.32     %r16124
	call.32     %r16125 <- toupper
	scast.8     %r16126 <- (32) %r16125
	load.64*    %r16127 <- 0[b]
	add.64*     %r16128 <- %r16127, $1
	store.64*   %r16128 -> 0[b]
	store.8     %r16126 -> 0[%r16127]
	br          .L3765

.L3765:
	load.64     %r16129 <- 0[i]
	add.64      %r16130 <- %r16129, $1
	store.64    %r16130 -> 0[i]
	br          .L3767

.L3766:
	symaddr.64* %r16131 <- b
	push.64*    %r16131
	call        luaL_pushresult
	phisrc.32   %phi740(return) <- $1
	br          .L3771

.L3771:
	phi.32      %r16132 <- %phi740(return)
	ret.32      $1


str_rep:
.L3772:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16133 <- 0[L]
	symaddr.64* %r16134 <- l
	push.64*    %r16133
	push.32     $1
	push.64*    %r16134
	call.64*    %r16135 <- luaL_checklstring
	store.64*   %r16135 -> 0[s]
	load.64*    %r16136 <- 0[L]
	push.64*    %r16136
	push.32     $2
	call.64     %r16137 <- luaL_checkinteger
	scast.32    %r16138 <- (64) %r16137
	store.32    %r16138 -> 0[n]
	load.64*    %r16139 <- 0[L]
	symaddr.64* %r16140 <- b
	push.64*    %r16139
	push.64*    %r16140
	call        luaL_buffinit
	br          .L3776

.L3776:
	load.32     %r16141 <- 0[n]
	sub.32      %r16142 <- %r16141, $1
	store.32    %r16142 -> 0[n]
	setgt.32    %r16143 <- %r16141, $0
	br          %r16143, .L3773, .L3775

.L3773:
	symaddr.64* %r16144 <- b
	load.64*    %r16145 <- 0[s]
	load.64     %r16146 <- 0[l]
	push.64*    %r16144
	push.64*    %r16145
	push.64     %r16146
	call        luaL_addlstring
	br          .L3774

.L3774:
	br          .L3776

.L3775:
	symaddr.64* %r16147 <- b
	push.64*    %r16147
	call        luaL_pushresult
	phisrc.32   %phi741(return) <- $1
	br          .L3777

.L3777:
	phi.32      %r16148 <- %phi741(return)
	ret.32      $1


str_byte:
.L3778:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16149 <- 0[L]
	symaddr.64* %r16150 <- l
	push.64*    %r16149
	push.32     $1
	push.64*    %r16150
	call.64*    %r16151 <- luaL_checklstring
	store.64*   %r16151 -> 0[s]
	load.64*    %r16152 <- 0[L]
	push.64*    %r16152
	push.32     $2
	push.64     $1
	call.64     %r16153 <- luaL_optinteger
	load.64     %r16154 <- 0[l]
	push.64     %r16153
	push.64     %r16154
	call.64     %r16155 <- posrelat
	store.64    %r16155 -> 0[posi]
	load.64*    %r16156 <- 0[L]
	load.64     %r16157 <- 0[posi]
	push.64*    %r16156
	push.32     $3
	push.64     %r16157
	call.64     %r16158 <- luaL_optinteger
	load.64     %r16159 <- 0[l]
	push.64     %r16158
	push.64     %r16159
	call.64     %r16160 <- posrelat
	store.64    %r16160 -> 0[pose]
	load.64     %r16161 <- 0[posi]
	setle.32    %r16162 <- %r16161, $0
	br          %r16162, .L3779, .L3780

.L3779:
	store.64    $1 -> 0[posi]
	br          .L3780

.L3780:
	load.64     %r16163 <- 0[pose]
	scast.64    %r16164 <- (64) %r16163
	load.64     %r16165 <- 0[l]
	seta.32     %r16166 <- %r16164, %r16165
	br          %r16166, .L3781, .L3782

.L3781:
	load.64     %r16167 <- 0[l]
	cast.64     %r16168 <- (64) %r16167
	store.64    %r16168 -> 0[pose]
	br          .L3782

.L3782:
	load.64     %r16169 <- 0[posi]
	load.64     %r16170 <- 0[pose]
	setgt.32    %r16171 <- %r16169, %r16170
	br          %r16171, .L3783, .L3784

.L3783:
	phisrc.32   %phi742(return) <- $0
	br          .L3785

.L3784:
	load.64     %r16173 <- 0[pose]
	load.64     %r16174 <- 0[posi]
	sub.64      %r16175 <- %r16173, %r16174
	add.64      %r16176 <- %r16175, $1
	scast.32    %r16177 <- (64) %r16176
	store.32    %r16177 -> 0[n]
	load.64     %r16178 <- 0[posi]
	load.32     %r16179 <- 0[n]
	scast.64    %r16180 <- (32) %r16179
	add.64      %r16181 <- %r16178, %r16180
	load.64     %r16182 <- 0[pose]
	setle.32    %r16183 <- %r16181, %r16182
	br          %r16183, .L3786, .L3787

.L3786:
	load.64*    %r16184 <- 0[L]
	symaddr.64* %r16185 <- <anon symbol:0x62d0014bf380>
	push.64*    %r16184
	push.64*    %r16185
	call.32     %r16186 <- luaL_error
	br          .L3787

.L3787:
	load.64*    %r16187 <- 0[L]
	load.32     %r16188 <- 0[n]
	symaddr.64* %r16189 <- <anon symbol:0x62d0014bf720>
	push.64*    %r16187
	push.32     %r16188
	push.64*    %r16189
	call        luaL_checkstack
	store.32    $0 -> 0[i]
	br          .L3791

.L3791:
	load.32     %r16190 <- 0[i]
	load.32     %r16191 <- 0[n]
	setlt.32    %r16192 <- %r16190, %r16191
	br          %r16192, .L3788, .L3790

.L3788:
	load.64*    %r16193 <- 0[L]
	load.64*    %r16194 <- 0[s]
	load.64     %r16195 <- 0[posi]
	load.32     %r16196 <- 0[i]
	scast.64    %r16197 <- (32) %r16196
	add.64      %r16198 <- %r16195, %r16197
	sub.64      %r16199 <- %r16198, $1
	add.64*     %r16200 <- %r16194, %r16199
	load.8      %r16201 <- 0[%r16200]
	scast.8     %r16202 <- (8) %r16201
	cast.64     %r16203 <- (8) %r16202
	push.64*    %r16193
	push.64     %r16203
	call        lua_pushinteger
	br          .L3789

.L3789:
	load.32     %r16204 <- 0[i]
	add.32      %r16205 <- %r16204, $1
	store.32    %r16205 -> 0[i]
	br          .L3791

.L3790:
	load.32     %r16206 <- 0[n]
	phisrc.32   %phi743(return) <- %r16206
	br          .L3785

.L3785:
	phi.32      %r16172 <- %phi742(return), %phi743(return)
	ret.32      %r16172


str_char:
.L3792:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r16207 <- 0[L]
	push.64*    %r16207
	call.32     %r16208 <- lua_gettop
	store.32    %r16208 -> 0[n]
	load.64*    %r16209 <- 0[L]
	symaddr.64* %r16210 <- b
	push.64*    %r16209
	push.64*    %r16210
	call        luaL_buffinit
	store.32    $1 -> 0[i]
	br          .L3796

.L3796:
	load.32     %r16211 <- 0[i]
	load.32     %r16212 <- 0[n]
	setle.32    %r16213 <- %r16211, %r16212
	br          %r16213, .L3793, .L3795

.L3793:
	load.64*    %r16214 <- 0[L]
	load.32     %r16215 <- 0[i]
	push.64*    %r16214
	push.32     %r16215
	call.64     %r16216 <- luaL_checkinteger
	scast.32    %r16217 <- (64) %r16216
	store.32    %r16217 -> 0[c]
	load.32     %r16218 <- 0[c]
	scast.8     %r16219 <- (32) %r16218
	cast.32     %r16220 <- (8) %r16219
	load.32     %r16221 <- 0[c]
	seteq.32    %r16222 <- %r16220, %r16221
	br          %r16222, .L3797, .L3798

.L3797:
	phisrc.32   %phi744 <- $1
	br          .L3799

.L3798:
	load.64*    %r16223 <- 0[L]
	load.32     %r16224 <- 0[i]
	symaddr.64* %r16225 <- <anon symbol:0x62d0014bfd78>
	push.64*    %r16223
	push.32     %r16224
	push.64*    %r16225
	call.32     %r16226 <- luaL_argerror
	phisrc.32   %phi745 <- %r16226
	br          .L3799

.L3799:
	phi.32      %r16227 <- %phi744, %phi745
	load.64*    %r16228 <- 0[b]
	symaddr.64* %r16229 <- b
	add.64*     %r16230 <- %r16229, $24
	add.64*     %r16231 <- %r16230, $0x2000
	setb.32     %r16232 <- %r16228, %r16231
	br          %r16232, .L3800, .L3801

.L3800:
	phisrc.32   %phi746 <- $1
	br          .L3802

.L3801:
	symaddr.64* %r16233 <- b
	push.64*    %r16233
	call.64*    %r16234 <- luaL_prepbuffer
	phisrc.32   %phi747 <- %r16234
	br          .L3802

.L3802:
	phi.32      %r16235 <- %phi746, %phi747
	load.32     %r16236 <- 0[c]
	scast.8     %r16237 <- (32) %r16236
	cast.8      %r16238 <- (8) %r16237
	load.64*    %r16239 <- 0[b]
	add.64*     %r16240 <- %r16239, $1
	store.64*   %r16240 -> 0[b]
	store.8     %r16238 -> 0[%r16239]
	br          .L3794

.L3794:
	load.32     %r16241 <- 0[i]
	add.32      %r16242 <- %r16241, $1
	store.32    %r16242 -> 0[i]
	br          .L3796

.L3795:
	symaddr.64* %r16243 <- b
	push.64*    %r16243
	call        luaL_pushresult
	phisrc.32   %phi748(return) <- $1
	br          .L3803

.L3803:
	phi.32      %r16244 <- %phi748(return)
	ret.32      $1


check_capture:
.L3804:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.32    %arg2 -> 0[l]
	load.32     %r16245 <- 0[l]
	scast.32    %r16246 <- (32) %r16245
	sub.32      %r16247 <- %r16246, $49
	scast.32    %r16248 <- (32) %r16247
	store.32    %r16248 -> 0[l]
	load.32     %r16249 <- 0[l]
	setlt.32    %r16250 <- %r16249, $0
	br          %r16250, .L3805, .L3808

.L3808:
	load.32     %r16251 <- 0[l]
	load.64*    %r16252 <- 0[ms]
	load.32     %r16253 <- 24[%r16252]
	setge.32    %r16254 <- %r16251, %r16253
	br          %r16254, .L3805, .L3807

.L3807:
	load.64*    %r16255 <- 0[ms]
	add.64*     %r16256 <- %r16255, $32
	load.32     %r16257 <- 0[l]
	scast.64    %r16258 <- (32) %r16257
	muls.64     %r16259 <- %r16258, $16
	add.64*     %r16260 <- %r16256, %r16259
	load.64     %r16261 <- 8[%r16260]
	seteq.32    %r16262 <- %r16261, $-1
	br          %r16262, .L3805, .L3806

.L3805:
	load.64*    %r16263 <- 0[ms]
	load.64*    %r16264 <- 16[%r16263]
	symaddr.64* %r16265 <- <anon symbol:0x62d0014c17c0>
	push.64*    %r16264
	push.64*    %r16265
	call.32     %r16266 <- luaL_error
	phisrc.32   %phi749(return) <- %r16266
	br          .L3809

.L3806:
	load.32     %r16268 <- 0[l]
	phisrc.32   %phi750(return) <- %r16268
	br          .L3809

.L3809:
	phi.32      %r16267 <- %phi749(return), %phi750(return)
	ret.32      %r16267


capture_to_close:
.L3810:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	load.64*    %r16269 <- 0[ms]
	load.32     %r16270 <- 24[%r16269]
	store.32    %r16270 -> 0[level]
	load.32     %r16271 <- 0[level]
	sub.32      %r16272 <- %r16271, $1
	store.32    %r16272 -> 0[level]
	br          .L3814

.L3814:
	load.32     %r16273 <- 0[level]
	setge.32    %r16274 <- %r16273, $0
	br          %r16274, .L3811, .L3813

.L3811:
	load.64*    %r16275 <- 0[ms]
	add.64*     %r16276 <- %r16275, $32
	load.32     %r16277 <- 0[level]
	scast.64    %r16278 <- (32) %r16277
	muls.64     %r16279 <- %r16278, $16
	add.64*     %r16280 <- %r16276, %r16279
	load.64     %r16281 <- 8[%r16280]
	seteq.32    %r16282 <- %r16281, $-1
	br          %r16282, .L3815, .L3816

.L3815:
	load.32     %r16283 <- 0[level]
	phisrc.32   %phi751(return) <- %r16283
	br          .L3817

.L3816:
	br          .L3812

.L3812:
	load.32     %r16285 <- 0[level]
	sub.32      %r16286 <- %r16285, $1
	store.32    %r16286 -> 0[level]
	br          .L3814

.L3813:
	load.64*    %r16287 <- 0[ms]
	load.64*    %r16288 <- 16[%r16287]
	symaddr.64* %r16289 <- <anon symbol:0x62d0014c2388>
	push.64*    %r16288
	push.64*    %r16289
	call.32     %r16290 <- luaL_error
	phisrc.32   %phi752(return) <- %r16290
	br          .L3817

.L3817:
	phi.32      %r16284 <- %phi751(return), %phi752(return)
	ret.32      %r16284


classend:
.L3818:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[p]
	load.64*    %r16291 <- 0[p]
	add.64*     %r16292 <- %r16291, $1
	store.64*   %r16292 -> 0[p]
	load.8      %r16293 <- 0[%r16291]
	switch.8    %r16293, 37 -> .L3820, 91 -> .L3821, default -> .L3822

.L3820:
	load.64*    %r16294 <- 0[p]
	load.8      %r16295 <- 0[%r16294]
	scast.32    %r16296 <- (8) %r16295
	seteq.32    %r16297 <- %r16296, $0
	br          %r16297, .L3823, .L3824

.L3823:
	load.64*    %r16298 <- 0[ms]
	load.64*    %r16299 <- 16[%r16298]
	symaddr.64* %r16300 <- <anon symbol:0x62d0014c2ac8>
	push.64*    %r16299
	push.64*    %r16300
	call.32     %r16301 <- luaL_error
	br          .L3824

.L3824:
	load.64*    %r16302 <- 0[p]
	add.64*     %r16303 <- %r16302, $1
	phisrc.64*  %phi753(return) <- %r16303
	br          .L3825

.L3821:
	load.64*    %r16305 <- 0[p]
	load.8      %r16306 <- 0[%r16305]
	scast.32    %r16307 <- (8) %r16306
	seteq.32    %r16308 <- %r16307, $94
	br          %r16308, .L3826, .L3827

.L3826:
	load.64*    %r16309 <- 0[p]
	add.64*     %r16310 <- %r16309, $1
	store.64*   %r16310 -> 0[p]
	br          .L3827

.L3827:
	br          .L3828

.L3828:
	load.64*    %r16311 <- 0[p]
	load.8      %r16312 <- 0[%r16311]
	scast.32    %r16313 <- (8) %r16312
	seteq.32    %r16314 <- %r16313, $0
	br          %r16314, .L3831, .L3832

.L3831:
	load.64*    %r16315 <- 0[ms]
	load.64*    %r16316 <- 16[%r16315]
	symaddr.64* %r16317 <- <anon symbol:0x62d0014c32f0>
	push.64*    %r16316
	push.64*    %r16317
	call.32     %r16318 <- luaL_error
	br          .L3832

.L3832:
	load.64*    %r16319 <- 0[p]
	add.64*     %r16320 <- %r16319, $1
	store.64*   %r16320 -> 0[p]
	load.8      %r16321 <- 0[%r16319]
	scast.32    %r16322 <- (8) %r16321
	seteq.32    %r16323 <- %r16322, $37
	br          %r16323, .L3835, .L3834

.L3835:
	load.64*    %r16324 <- 0[p]
	load.8      %r16325 <- 0[%r16324]
	scast.32    %r16326 <- (8) %r16325
	setne.32    %r16327 <- %r16326, $0
	br          %r16327, .L3833, .L3834

.L3833:
	load.64*    %r16328 <- 0[p]
	add.64*     %r16329 <- %r16328, $1
	store.64*   %r16329 -> 0[p]
	br          .L3834

.L3834:
	br          .L3829

.L3829:
	load.64*    %r16330 <- 0[p]
	load.8      %r16331 <- 0[%r16330]
	scast.32    %r16332 <- (8) %r16331
	setne.32    %r16333 <- %r16332, $93
	br          %r16333, .L3828, .L3830

.L3830:
	load.64*    %r16334 <- 0[p]
	add.64*     %r16335 <- %r16334, $1
	phisrc.64*  %phi754(return) <- %r16335
	br          .L3825

.L3822:
	load.64*    %r16336 <- 0[p]
	phisrc.64*  %phi755(return) <- %r16336
	br          .L3825

.L3825:
	phi.64*     %r16304 <- %phi753(return), %phi754(return), %phi755(return)
	ret.64*     %r16304


match_class:
.L3836:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.32    %arg2 -> 0[cl]
	load.32     %r16337 <- 0[cl]
	push.32     %r16337
	call.32     %r16338 <- tolower
	switch.32   %r16338, 97 -> .L3838, 99 -> .L3839, 100 -> .L3840, 108 -> .L3841, 112 -> .L3842, 115 -> .L3843, 117 -> .L3844, 119 -> .L3845, 120 -> .L3846, 122 -> .L3847, default -> .L3848

.L3838:
	call.64*    %r16339 <- __ctype_b_loc
	load.64*    %r16340 <- 0[%r16339]
	load.32     %r16341 <- 0[c]
	scast.32    %r16342 <- (32) %r16341
	scast.64    %r16343 <- (32) %r16342
	muls.64     %r16344 <- %r16343, $2
	add.64*     %r16345 <- %r16340, %r16344
	load.16     %r16346 <- 0[%r16345]
	cast.32     %r16347 <- (16) %r16346
	and.32      %r16348 <- %r16347, $0x400
	store.32    %r16348 -> 0[res]
	br          .L3837

.L3839:
	call.64*    %r16349 <- __ctype_b_loc
	load.64*    %r16350 <- 0[%r16349]
	load.32     %r16351 <- 0[c]
	scast.32    %r16352 <- (32) %r16351
	scast.64    %r16353 <- (32) %r16352
	muls.64     %r16354 <- %r16353, $2
	add.64*     %r16355 <- %r16350, %r16354
	load.16     %r16356 <- 0[%r16355]
	cast.32     %r16357 <- (16) %r16356
	and.32      %r16358 <- %r16357, $2
	store.32    %r16358 -> 0[res]
	br          .L3837

.L3840:
	call.64*    %r16359 <- __ctype_b_loc
	load.64*    %r16360 <- 0[%r16359]
	load.32     %r16361 <- 0[c]
	scast.32    %r16362 <- (32) %r16361
	scast.64    %r16363 <- (32) %r16362
	muls.64     %r16364 <- %r16363, $2
	add.64*     %r16365 <- %r16360, %r16364
	load.16     %r16366 <- 0[%r16365]
	cast.32     %r16367 <- (16) %r16366
	and.32      %r16368 <- %r16367, $0x800
	store.32    %r16368 -> 0[res]
	br          .L3837

.L3841:
	call.64*    %r16369 <- __ctype_b_loc
	load.64*    %r16370 <- 0[%r16369]
	load.32     %r16371 <- 0[c]
	scast.32    %r16372 <- (32) %r16371
	scast.64    %r16373 <- (32) %r16372
	muls.64     %r16374 <- %r16373, $2
	add.64*     %r16375 <- %r16370, %r16374
	load.16     %r16376 <- 0[%r16375]
	cast.32     %r16377 <- (16) %r16376
	and.32      %r16378 <- %r16377, $512
	store.32    %r16378 -> 0[res]
	br          .L3837

.L3842:
	call.64*    %r16379 <- __ctype_b_loc
	load.64*    %r16380 <- 0[%r16379]
	load.32     %r16381 <- 0[c]
	scast.32    %r16382 <- (32) %r16381
	scast.64    %r16383 <- (32) %r16382
	muls.64     %r16384 <- %r16383, $2
	add.64*     %r16385 <- %r16380, %r16384
	load.16     %r16386 <- 0[%r16385]
	cast.32     %r16387 <- (16) %r16386
	and.32      %r16388 <- %r16387, $4
	store.32    %r16388 -> 0[res]
	br          .L3837

.L3843:
	call.64*    %r16389 <- __ctype_b_loc
	load.64*    %r16390 <- 0[%r16389]
	load.32     %r16391 <- 0[c]
	scast.32    %r16392 <- (32) %r16391
	scast.64    %r16393 <- (32) %r16392
	muls.64     %r16394 <- %r16393, $2
	add.64*     %r16395 <- %r16390, %r16394
	load.16     %r16396 <- 0[%r16395]
	cast.32     %r16397 <- (16) %r16396
	and.32      %r16398 <- %r16397, $0x2000
	store.32    %r16398 -> 0[res]
	br          .L3837

.L3844:
	call.64*    %r16399 <- __ctype_b_loc
	load.64*    %r16400 <- 0[%r16399]
	load.32     %r16401 <- 0[c]
	scast.32    %r16402 <- (32) %r16401
	scast.64    %r16403 <- (32) %r16402
	muls.64     %r16404 <- %r16403, $2
	add.64*     %r16405 <- %r16400, %r16404
	load.16     %r16406 <- 0[%r16405]
	cast.32     %r16407 <- (16) %r16406
	and.32      %r16408 <- %r16407, $256
	store.32    %r16408 -> 0[res]
	br          .L3837

.L3845:
	call.64*    %r16409 <- __ctype_b_loc
	load.64*    %r16410 <- 0[%r16409]
	load.32     %r16411 <- 0[c]
	scast.32    %r16412 <- (32) %r16411
	scast.64    %r16413 <- (32) %r16412
	muls.64     %r16414 <- %r16413, $2
	add.64*     %r16415 <- %r16410, %r16414
	load.16     %r16416 <- 0[%r16415]
	cast.32     %r16417 <- (16) %r16416
	and.32      %r16418 <- %r16417, $8
	store.32    %r16418 -> 0[res]
	br          .L3837

.L3846:
	call.64*    %r16419 <- __ctype_b_loc
	load.64*    %r16420 <- 0[%r16419]
	load.32     %r16421 <- 0[c]
	scast.32    %r16422 <- (32) %r16421
	scast.64    %r16423 <- (32) %r16422
	muls.64     %r16424 <- %r16423, $2
	add.64*     %r16425 <- %r16420, %r16424
	load.16     %r16426 <- 0[%r16425]
	cast.32     %r16427 <- (16) %r16426
	and.32      %r16428 <- %r16427, $0x1000
	store.32    %r16428 -> 0[res]
	br          .L3837

.L3847:
	load.32     %r16429 <- 0[c]
	seteq.32    %r16430 <- %r16429, $0
	store.32    %r16430 -> 0[res]
	br          .L3837

.L3848:
	load.32     %r16431 <- 0[cl]
	load.32     %r16432 <- 0[c]
	seteq.32    %r16433 <- %r16431, %r16432
	phisrc.32   %phi756(return) <- %r16433
	br          .L3849

.L3837:
	load.32     %r16435 <- 0[res]
	load.32     %r16436 <- 0[res]
	seteq.32    %r16437 <- %r16436, $0
	call.64*    %r16438 <- __ctype_b_loc
	load.64*    %r16439 <- 0[%r16438]
	load.32     %r16440 <- 0[cl]
	scast.32    %r16441 <- (32) %r16440
	scast.64    %r16442 <- (32) %r16441
	muls.64     %r16443 <- %r16442, $2
	add.64*     %r16444 <- %r16439, %r16443
	load.16     %r16445 <- 0[%r16444]
	cast.32     %r16446 <- (16) %r16445
	and.32      %r16447 <- %r16446, $512
	select.32   %r16448 <- %r16447, %r16435, %r16437
	phisrc.32   %phi757(return) <- %r16448
	br          .L3849

.L3849:
	phi.32      %r16434 <- %phi756(return), %phi757(return)
	ret.32      %r16434


matchbracketclass:
.L3850:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.64*   %arg2 -> 0[p]
	store.64*   %arg3 -> 0[ec]
	store.32    $1 -> 0[sig]
	load.64*    %r16449 <- 0[p]
	load.8      %r16450 <- 1[%r16449]
	scast.32    %r16451 <- (8) %r16450
	seteq.32    %r16452 <- %r16451, $94
	br          %r16452, .L3851, .L3852

.L3851:
	store.32    $0 -> 0[sig]
	load.64*    %r16453 <- 0[p]
	add.64*     %r16454 <- %r16453, $1
	store.64*   %r16454 -> 0[p]
	br          .L3852

.L3852:
	br          .L3856

.L3856:
	load.64*    %r16455 <- 0[p]
	add.64*     %r16456 <- %r16455, $1
	store.64*   %r16456 -> 0[p]
	load.64*    %r16457 <- 0[ec]
	setb.32     %r16458 <- %r16456, %r16457
	br          %r16458, .L3853, .L3855

.L3853:
	load.64*    %r16459 <- 0[p]
	load.8      %r16460 <- 0[%r16459]
	scast.32    %r16461 <- (8) %r16460
	seteq.32    %r16462 <- %r16461, $37
	br          %r16462, .L3857, .L3858

.L3857:
	load.64*    %r16463 <- 0[p]
	add.64*     %r16464 <- %r16463, $1
	store.64*   %r16464 -> 0[p]
	load.32     %r16465 <- 0[c]
	load.64*    %r16466 <- 0[p]
	load.8      %r16467 <- 0[%r16466]
	scast.8     %r16468 <- (8) %r16467
	cast.32     %r16469 <- (8) %r16468
	push.32     %r16465
	push.32     %r16469
	call.32     %r16470 <- match_class
	br          %r16470, .L3859, .L3860

.L3859:
	load.32     %r16471 <- 0[sig]
	phisrc.32   %phi758(return) <- %r16471
	br          .L3861

.L3860:
	br          .L3862

.L3858:
	load.64*    %r16473 <- 0[p]
	load.8      %r16474 <- 1[%r16473]
	scast.32    %r16475 <- (8) %r16474
	seteq.32    %r16476 <- %r16475, $45
	load.64*    %r16477 <- 0[p]
	add.64*     %r16478 <- %r16477, $2
	load.64*    %r16479 <- 0[ec]
	setb.32     %r16480 <- %r16478, %r16479
	and-bool.32 %r16481 <- %r16476, %r16480
	br          %r16481, .L3863, .L3864

.L3863:
	load.64*    %r16482 <- 0[p]
	cast.64     %r16483 <- (64) %r16482
	add.64      %r16484 <- %r16483, $2
	ptrcast.64* %r16485 <- (64) %r16484
	store.64*   %r16485 -> 0[p]
	load.64*    %r16486 <- 0[p]
	sub.64*     %r16487 <- %r16486, $2
	load.8      %r16488 <- 0[%r16487]
	scast.8     %r16489 <- (8) %r16488
	cast.32     %r16490 <- (8) %r16489
	load.32     %r16491 <- 0[c]
	setle.32    %r16492 <- %r16490, %r16491
	br          %r16492, .L3867, .L3866

.L3867:
	load.32     %r16493 <- 0[c]
	load.64*    %r16494 <- 0[p]
	load.8      %r16495 <- 0[%r16494]
	scast.8     %r16496 <- (8) %r16495
	cast.32     %r16497 <- (8) %r16496
	setle.32    %r16498 <- %r16493, %r16497
	br          %r16498, .L3865, .L3866

.L3865:
	load.32     %r16499 <- 0[sig]
	phisrc.32   %phi759(return) <- %r16499
	br          .L3861

.L3866:
	br          .L3868

.L3864:
	load.64*    %r16500 <- 0[p]
	load.8      %r16501 <- 0[%r16500]
	scast.8     %r16502 <- (8) %r16501
	cast.32     %r16503 <- (8) %r16502
	load.32     %r16504 <- 0[c]
	seteq.32    %r16505 <- %r16503, %r16504
	br          %r16505, .L3869, .L3870

.L3869:
	load.32     %r16506 <- 0[sig]
	phisrc.32   %phi760(return) <- %r16506
	br          .L3861

.L3870:
	br          .L3868

.L3868:
	br          .L3862

.L3862:
	br          .L3854

.L3854:
	br          .L3856

.L3855:
	load.32     %r16507 <- 0[sig]
	seteq.32    %r16508 <- %r16507, $0
	phisrc.32   %phi761(return) <- %r16508
	br          .L3861

.L3861:
	phi.32      %r16472 <- %phi758(return), %phi759(return), %phi760(return), %phi761(return)
	ret.32      %r16472


singlematch:
.L3871:
	<entry-point>
	store.32    %arg1 -> 0[c]
	store.64*   %arg2 -> 0[p]
	store.64*   %arg3 -> 0[ep]
	load.64*    %r16509 <- 0[p]
	load.8      %r16510 <- 0[%r16509]
	switch.8    %r16510, 37 -> .L3874, 46 -> .L3873, 91 -> .L3875, default -> .L3876

.L3873:
	phisrc.32   %phi762(return) <- $1
	br          .L3877

.L3874:
	load.32     %r16512 <- 0[c]
	load.64*    %r16513 <- 0[p]
	load.8      %r16514 <- 1[%r16513]
	scast.8     %r16515 <- (8) %r16514
	cast.32     %r16516 <- (8) %r16515
	push.32     %r16512
	push.32     %r16516
	call.32     %r16517 <- match_class
	phisrc.32   %phi763(return) <- %r16517
	br          .L3877

.L3875:
	load.32     %r16518 <- 0[c]
	load.64*    %r16519 <- 0[p]
	load.64*    %r16520 <- 0[ep]
	sub.64*     %r16521 <- %r16520, $1
	push.32     %r16518
	push.64*    %r16519
	push.64*    %r16521
	call.32     %r16522 <- matchbracketclass
	phisrc.32   %phi764(return) <- %r16522
	br          .L3877

.L3876:
	load.64*    %r16523 <- 0[p]
	load.8      %r16524 <- 0[%r16523]
	scast.8     %r16525 <- (8) %r16524
	cast.32     %r16526 <- (8) %r16525
	load.32     %r16527 <- 0[c]
	seteq.32    %r16528 <- %r16526, %r16527
	phisrc.32   %phi765(return) <- %r16528
	br          .L3877

.L3877:
	phi.32      %r16511 <- %phi762(return), %phi763(return), %phi764(return), %phi765(return)
	ret.32      %r16511


matchbalance:
.L3878:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	load.64*    %r16529 <- 0[p]
	load.8      %r16530 <- 0[%r16529]
	scast.32    %r16531 <- (8) %r16530
	seteq.32    %r16532 <- %r16531, $0
	br          %r16532, .L3879, .L3881

.L3881:
	load.64*    %r16533 <- 0[p]
	load.8      %r16534 <- 1[%r16533]
	scast.32    %r16535 <- (8) %r16534
	seteq.32    %r16536 <- %r16535, $0
	br          %r16536, .L3879, .L3880

.L3879:
	load.64*    %r16537 <- 0[ms]
	load.64*    %r16538 <- 16[%r16537]
	symaddr.64* %r16539 <- <anon symbol:0x62d0014d2e10>
	push.64*    %r16538
	push.64*    %r16539
	call.32     %r16540 <- luaL_error
	br          .L3880

.L3880:
	load.64*    %r16541 <- 0[s]
	load.8      %r16542 <- 0[%r16541]
	scast.32    %r16543 <- (8) %r16542
	load.64*    %r16544 <- 0[p]
	load.8      %r16545 <- 0[%r16544]
	scast.32    %r16546 <- (8) %r16545
	setne.32    %r16547 <- %r16543, %r16546
	br          %r16547, .L3882, .L3883

.L3882:
	phisrc.64*  %phi766(return) <- $0
	br          .L3884

.L3883:
	load.64*    %r16549 <- 0[p]
	load.8      %r16550 <- 0[%r16549]
	scast.32    %r16551 <- (8) %r16550
	store.32    %r16551 -> 0[b]
	load.64*    %r16552 <- 0[p]
	load.8      %r16553 <- 1[%r16552]
	scast.32    %r16554 <- (8) %r16553
	store.32    %r16554 -> 0[e]
	store.32    $1 -> 0[cont]
	br          .L3889

.L3889:
	load.64*    %r16555 <- 0[s]
	add.64*     %r16556 <- %r16555, $1
	store.64*   %r16556 -> 0[s]
	load.64*    %r16557 <- 0[ms]
	load.64*    %r16558 <- 8[%r16557]
	setb.32     %r16559 <- %r16556, %r16558
	br          %r16559, .L3886, .L3888

.L3886:
	load.64*    %r16560 <- 0[s]
	load.8      %r16561 <- 0[%r16560]
	scast.32    %r16562 <- (8) %r16561
	load.32     %r16563 <- 0[e]
	seteq.32    %r16564 <- %r16562, %r16563
	br          %r16564, .L3890, .L3891

.L3890:
	load.32     %r16565 <- 0[cont]
	sub.32      %r16566 <- %r16565, $1
	store.32    %r16566 -> 0[cont]
	seteq.32    %r16567 <- %r16566, $0
	br          %r16567, .L3892, .L3893

.L3892:
	load.64*    %r16568 <- 0[s]
	add.64*     %r16569 <- %r16568, $1
	phisrc.64*  %phi767(return) <- %r16569
	br          .L3884

.L3893:
	br          .L3894

.L3891:
	load.64*    %r16570 <- 0[s]
	load.8      %r16571 <- 0[%r16570]
	scast.32    %r16572 <- (8) %r16571
	load.32     %r16573 <- 0[b]
	seteq.32    %r16574 <- %r16572, %r16573
	br          %r16574, .L3895, .L3896

.L3895:
	load.32     %r16575 <- 0[cont]
	add.32      %r16576 <- %r16575, $1
	store.32    %r16576 -> 0[cont]
	br          .L3896

.L3896:
	br          .L3894

.L3894:
	br          .L3887

.L3887:
	br          .L3889

.L3888:
	br          .L3885

.L3885:
	phisrc.64*  %phi768(return) <- $0
	br          .L3884

.L3884:
	phi.64*     %r16548 <- %phi766(return), %phi767(return), %phi768(return)
	ret.64*     %r16548


max_expand:
.L3897:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.64*   %arg4 -> 0[ep]
	store.64    $0 -> 0[i]
	br          .L3901

.L3901:
	load.64*    %r16577 <- 0[s]
	load.64     %r16578 <- 0[i]
	add.64*     %r16579 <- %r16577, %r16578
	load.64*    %r16580 <- 0[ms]
	load.64*    %r16581 <- 8[%r16580]
	setb.32     %r16582 <- %r16579, %r16581
	br          %r16582, .L3902, .L3900

.L3902:
	load.64*    %r16583 <- 0[s]
	load.64     %r16584 <- 0[i]
	add.64*     %r16585 <- %r16583, %r16584
	load.8      %r16586 <- 0[%r16585]
	scast.8     %r16587 <- (8) %r16586
	cast.32     %r16588 <- (8) %r16587
	load.64*    %r16589 <- 0[p]
	load.64*    %r16590 <- 0[ep]
	push.32     %r16588
	push.64*    %r16589
	push.64*    %r16590
	call.32     %r16591 <- singlematch
	br          %r16591, .L3898, .L3900

.L3898:
	load.64     %r16592 <- 0[i]
	add.64      %r16593 <- %r16592, $1
	store.64    %r16593 -> 0[i]
	br          .L3899

.L3899:
	br          .L3901

.L3900:
	br          .L3906

.L3906:
	load.64     %r16594 <- 0[i]
	setge.32    %r16595 <- %r16594, $0
	br          %r16595, .L3903, .L3905

.L3903:
	load.64*    %r16596 <- 0[ms]
	load.64*    %r16597 <- 0[s]
	load.64     %r16598 <- 0[i]
	add.64*     %r16599 <- %r16597, %r16598
	load.64*    %r16600 <- 0[ep]
	add.64*     %r16601 <- %r16600, $1
	push.64*    %r16596
	push.64*    %r16599
	push.64*    %r16601
	call.64*    %r16602 <- match
	store.64*   %r16602 -> 0[res]
	load.64*    %r16603 <- 0[res]
	br          %r16603, .L3907, .L3908

.L3907:
	load.64*    %r16604 <- 0[res]
	phisrc.64*  %phi769(return) <- %r16604
	br          .L3909

.L3908:
	load.64     %r16606 <- 0[i]
	sub.64      %r16607 <- %r16606, $1
	store.64    %r16607 -> 0[i]
	br          .L3904

.L3904:
	br          .L3906

.L3905:
	phisrc.64*  %phi770(return) <- $0
	br          .L3909

.L3909:
	phi.64*     %r16605 <- %phi769(return), %phi770(return)
	ret.64*     %r16605


min_expand:
.L3910:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.64*   %arg4 -> 0[ep]
	br          .L3914

.L3914:
	br          .L3911

.L3911:
	load.64*    %r16608 <- 0[ms]
	load.64*    %r16609 <- 0[s]
	load.64*    %r16610 <- 0[ep]
	add.64*     %r16611 <- %r16610, $1
	push.64*    %r16608
	push.64*    %r16609
	push.64*    %r16611
	call.64*    %r16612 <- match
	store.64*   %r16612 -> 0[res]
	load.64*    %r16613 <- 0[res]
	setne.32    %r16614 <- %r16613, $0
	br          %r16614, .L3915, .L3916

.L3915:
	load.64*    %r16615 <- 0[res]
	phisrc.64*  %phi771(return) <- %r16615
	br          .L3917

.L3916:
	load.64*    %r16617 <- 0[s]
	load.64*    %r16618 <- 0[ms]
	load.64*    %r16619 <- 8[%r16618]
	setb.32     %r16620 <- %r16617, %r16619
	br          %r16620, .L3921, .L3920

.L3921:
	load.64*    %r16621 <- 0[s]
	load.8      %r16622 <- 0[%r16621]
	scast.8     %r16623 <- (8) %r16622
	cast.32     %r16624 <- (8) %r16623
	load.64*    %r16625 <- 0[p]
	load.64*    %r16626 <- 0[ep]
	push.32     %r16624
	push.64*    %r16625
	push.64*    %r16626
	call.32     %r16627 <- singlematch
	br          %r16627, .L3919, .L3920

.L3919:
	load.64*    %r16628 <- 0[s]
	add.64*     %r16629 <- %r16628, $1
	store.64*   %r16629 -> 0[s]
	br          .L3922

.L3920:
	phisrc.64*  %phi772(return) <- $0
	br          .L3917

.L3922:
	br          .L3918

.L3918:
	br          .L3912

.L3912:
	br          .L3914

.L3917:
	phi.64*     %r16616 <- %phi771(return), %phi772(return)
	ret.64*     %r16616


start_capture:
.L3923:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	store.32    %arg4 -> 0[what]
	load.64*    %r16630 <- 0[ms]
	load.32     %r16631 <- 24[%r16630]
	store.32    %r16631 -> 0[level]
	load.32     %r16632 <- 0[level]
	setge.32    %r16633 <- %r16632, $32
	br          %r16633, .L3924, .L3925

.L3924:
	load.64*    %r16634 <- 0[ms]
	load.64*    %r16635 <- 16[%r16634]
	symaddr.64* %r16636 <- <anon symbol:0x62d0014d4200>
	push.64*    %r16635
	push.64*    %r16636
	call.32     %r16637 <- luaL_error
	br          .L3925

.L3925:
	load.64*    %r16638 <- 0[s]
	load.64*    %r16639 <- 0[ms]
	add.64*     %r16640 <- %r16639, $32
	load.32     %r16641 <- 0[level]
	scast.64    %r16642 <- (32) %r16641
	muls.64     %r16643 <- %r16642, $16
	add.64*     %r16644 <- %r16640, %r16643
	store.64*   %r16638 -> 0[%r16644]
	load.32     %r16645 <- 0[what]
	scast.64    %r16646 <- (32) %r16645
	load.64*    %r16647 <- 0[ms]
	add.64*     %r16648 <- %r16647, $32
	load.32     %r16649 <- 0[level]
	scast.64    %r16650 <- (32) %r16649
	muls.64     %r16651 <- %r16650, $16
	add.64*     %r16652 <- %r16648, %r16651
	store.64    %r16646 -> 8[%r16652]
	load.32     %r16653 <- 0[level]
	add.32      %r16654 <- %r16653, $1
	load.64*    %r16655 <- 0[ms]
	store.32    %r16654 -> 24[%r16655]
	load.64*    %r16656 <- 0[ms]
	load.64*    %r16657 <- 0[s]
	load.64*    %r16658 <- 0[p]
	push.64*    %r16656
	push.64*    %r16657
	push.64*    %r16658
	call.64*    %r16659 <- match
	store.64*   %r16659 -> 0[res]
	seteq.32    %r16660 <- %r16659, $0
	br          %r16660, .L3926, .L3927

.L3926:
	load.64*    %r16661 <- 0[ms]
	load.32     %r16662 <- 24[%r16661]
	sub.32      %r16663 <- %r16662, $1
	store.32    %r16663 -> 24[%r16661]
	br          .L3927

.L3927:
	load.64*    %r16664 <- 0[res]
	phisrc.64*  %phi773(return) <- %r16664
	br          .L3928

.L3928:
	phi.64*     %r16665 <- %phi773(return)
	ret.64*     %r16664


end_capture:
.L3929:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	load.64*    %r16666 <- 0[ms]
	push.64*    %r16666
	call.32     %r16667 <- capture_to_close
	store.32    %r16667 -> 0[l]
	load.64*    %r16668 <- 0[s]
	load.64*    %r16669 <- 0[ms]
	add.64*     %r16670 <- %r16669, $32
	load.32     %r16671 <- 0[l]
	scast.64    %r16672 <- (32) %r16671
	muls.64     %r16673 <- %r16672, $16
	add.64*     %r16674 <- %r16670, %r16673
	load.64*    %r16675 <- 0[%r16674]
	sub.64      %r16676 <- %r16668, %r16675
	load.64*    %r16677 <- 0[ms]
	add.64*     %r16678 <- %r16677, $32
	load.32     %r16679 <- 0[l]
	scast.64    %r16680 <- (32) %r16679
	muls.64     %r16681 <- %r16680, $16
	add.64*     %r16682 <- %r16678, %r16681
	store.64    %r16676 -> 8[%r16682]
	load.64*    %r16683 <- 0[ms]
	load.64*    %r16684 <- 0[s]
	load.64*    %r16685 <- 0[p]
	push.64*    %r16683
	push.64*    %r16684
	push.64*    %r16685
	call.64*    %r16686 <- match
	store.64*   %r16686 -> 0[res]
	seteq.32    %r16687 <- %r16686, $0
	br          %r16687, .L3930, .L3931

.L3930:
	load.64*    %r16688 <- 0[ms]
	add.64*     %r16689 <- %r16688, $32
	load.32     %r16690 <- 0[l]
	scast.64    %r16691 <- (32) %r16690
	muls.64     %r16692 <- %r16691, $16
	add.64*     %r16693 <- %r16689, %r16692
	store.64    $-1 -> 8[%r16693]
	br          .L3931

.L3931:
	load.64*    %r16694 <- 0[res]
	phisrc.64*  %phi774(return) <- %r16694
	br          .L3932

.L3932:
	phi.64*     %r16695 <- %phi774(return)
	ret.64*     %r16694


match_capture:
.L3933:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.32    %arg3 -> 0[l]
	load.64*    %r16696 <- 0[ms]
	load.32     %r16697 <- 0[l]
	push.64*    %r16696
	push.32     %r16697
	call.32     %r16698 <- check_capture
	store.32    %r16698 -> 0[l]
	load.64*    %r16699 <- 0[ms]
	add.64*     %r16700 <- %r16699, $32
	load.32     %r16701 <- 0[l]
	scast.64    %r16702 <- (32) %r16701
	muls.64     %r16703 <- %r16702, $16
	add.64*     %r16704 <- %r16700, %r16703
	load.64     %r16705 <- 8[%r16704]
	scast.64    %r16706 <- (64) %r16705
	store.64    %r16706 -> 0[len]
	load.64*    %r16707 <- 0[ms]
	load.64*    %r16708 <- 8[%r16707]
	load.64*    %r16709 <- 0[s]
	sub.64      %r16710 <- %r16708, %r16709
	scast.64    %r16711 <- (64) %r16710
	load.64     %r16712 <- 0[len]
	setae.32    %r16713 <- %r16711, %r16712
	load.64*    %r16714 <- 0[ms]
	add.64*     %r16715 <- %r16714, $32
	load.32     %r16716 <- 0[l]
	scast.64    %r16717 <- (32) %r16716
	muls.64     %r16718 <- %r16717, $16
	add.64*     %r16719 <- %r16715, %r16718
	load.64*    %r16720 <- 0[%r16719]
	cast.64*    %r16721 <- (64) %r16720
	load.64*    %r16722 <- 0[s]
	cast.64*    %r16723 <- (64) %r16722
	load.64     %r16724 <- 0[len]
	push.64*    %r16721
	push.64*    %r16723
	push.64     %r16724
	call.32     %r16725 <- memcmp
	seteq.32    %r16726 <- %r16725, $0
	and-bool.32 %r16727 <- %r16713, %r16726
	br          %r16727, .L3934, .L3935

.L3934:
	load.64*    %r16728 <- 0[s]
	load.64     %r16729 <- 0[len]
	add.64*     %r16730 <- %r16728, %r16729
	phisrc.64*  %phi775(return) <- %r16730
	br          .L3936

.L3935:
	phisrc.64*  %phi776(return) <- $0
	br          .L3936

.L3936:
	phi.64*     %r16731 <- %phi775(return), %phi776(return)
	ret.64*     %r16731


match:
.L3938:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[p]
	br          .L3939

.L3939:
	load.64*    %r16732 <- 0[p]
	load.8      %r16733 <- 0[%r16732]
	switch.8    %r16733, 0 -> .L3944, 36 -> .L3945, 37 -> .L3943, 40 -> .L3941, 41 -> .L3942, default -> .L3946

.L3941:
	load.64*    %r16734 <- 0[p]
	load.8      %r16735 <- 1[%r16734]
	scast.32    %r16736 <- (8) %r16735
	seteq.32    %r16737 <- %r16736, $41
	br          %r16737, .L3947, .L3948

.L3947:
	load.64*    %r16738 <- 0[ms]
	load.64*    %r16739 <- 0[s]
	load.64*    %r16740 <- 0[p]
	add.64*     %r16741 <- %r16740, $2
	push.64*    %r16738
	push.64*    %r16739
	push.64*    %r16741
	push.32     $0xfffffffe
	call.64*    %r16742 <- start_capture
	phisrc.64*  %phi777(return) <- %r16742
	br          .L3949

.L3948:
	load.64*    %r16744 <- 0[ms]
	load.64*    %r16745 <- 0[s]
	load.64*    %r16746 <- 0[p]
	add.64*     %r16747 <- %r16746, $1
	push.64*    %r16744
	push.64*    %r16745
	push.64*    %r16747
	push.32     $0xffffffff
	call.64*    %r16748 <- start_capture
	phisrc.64*  %phi778(return) <- %r16748
	br          .L3949

.L3942:
	load.64*    %r16749 <- 0[ms]
	load.64*    %r16750 <- 0[s]
	load.64*    %r16751 <- 0[p]
	add.64*     %r16752 <- %r16751, $1
	push.64*    %r16749
	push.64*    %r16750
	push.64*    %r16752
	call.64*    %r16753 <- end_capture
	phisrc.64*  %phi779(return) <- %r16753
	br          .L3949

.L3943:
	load.64*    %r16754 <- 0[p]
	load.8      %r16755 <- 1[%r16754]
	switch.8    %r16755, 98 -> .L3952, 102 -> .L3953, default -> .L3954

.L3952:
	load.64*    %r16756 <- 0[ms]
	load.64*    %r16757 <- 0[s]
	load.64*    %r16758 <- 0[p]
	add.64*     %r16759 <- %r16758, $2
	push.64*    %r16756
	push.64*    %r16757
	push.64*    %r16759
	call.64*    %r16760 <- matchbalance
	store.64*   %r16760 -> 0[s]
	load.64*    %r16761 <- 0[s]
	seteq.32    %r16762 <- %r16761, $0
	br          %r16762, .L3955, .L3956

.L3955:
	phisrc.64*  %phi780(return) <- $0
	br          .L3949

.L3956:
	load.64*    %r16763 <- 0[p]
	cast.64     %r16764 <- (64) %r16763
	add.64      %r16765 <- %r16764, $4
	ptrcast.64* %r16766 <- (64) %r16765
	store.64*   %r16766 -> 0[p]
	br          .L3939

.L3953:
	load.64*    %r16767 <- 0[p]
	cast.64     %r16768 <- (64) %r16767
	add.64      %r16769 <- %r16768, $2
	ptrcast.64* %r16770 <- (64) %r16769
	store.64*   %r16770 -> 0[p]
	load.64*    %r16771 <- 0[p]
	load.8      %r16772 <- 0[%r16771]
	scast.32    %r16773 <- (8) %r16772
	setne.32    %r16774 <- %r16773, $91
	br          %r16774, .L3957, .L3958

.L3957:
	load.64*    %r16775 <- 0[ms]
	load.64*    %r16776 <- 16[%r16775]
	symaddr.64* %r16777 <- <anon symbol:0x62d0014c5900>
	push.64*    %r16776
	push.64*    %r16777
	call.32     %r16778 <- luaL_error
	br          .L3958

.L3958:
	load.64*    %r16779 <- 0[ms]
	load.64*    %r16780 <- 0[p]
	push.64*    %r16779
	push.64*    %r16780
	call.64*    %r16781 <- classend
	store.64*   %r16781 -> 0[ep]
	load.64*    %r16782 <- 0[s]
	load.64*    %r16783 <- 0[ms]
	load.64*    %r16784 <- 0[%r16783]
	seteq.32    %r16785 <- %r16782, %r16784
	br          %r16785, .L3959, .L3960

.L3959:
	phisrc.32   %phi781 <- $0
	br          .L3961

.L3960:
	load.64*    %r16786 <- 0[s]
	sub.64*     %r16787 <- %r16786, $1
	load.8      %r16788 <- 0[%r16787]
	scast.32    %r16789 <- (8) %r16788
	phisrc.32   %phi782 <- %r16789
	br          .L3961

.L3961:
	phi.32      %r16790 <- %phi781, %phi782
	scast.8     %r16791 <- (32) %r16790
	store.8     %r16791 -> 0[previous]
	load.8      %r16792 <- 0[previous]
	scast.8     %r16793 <- (8) %r16792
	cast.32     %r16794 <- (8) %r16793
	load.64*    %r16795 <- 0[p]
	load.64*    %r16796 <- 0[ep]
	sub.64*     %r16797 <- %r16796, $1
	push.32     %r16794
	push.64*    %r16795
	push.64*    %r16797
	call.32     %r16798 <- matchbracketclass
	br          %r16798, .L3962, .L3964

.L3964:
	load.64*    %r16799 <- 0[s]
	load.8      %r16800 <- 0[%r16799]
	scast.8     %r16801 <- (8) %r16800
	cast.32     %r16802 <- (8) %r16801
	load.64*    %r16803 <- 0[p]
	load.64*    %r16804 <- 0[ep]
	sub.64*     %r16805 <- %r16804, $1
	push.32     %r16802
	push.64*    %r16803
	push.64*    %r16805
	call.32     %r16806 <- matchbracketclass
	br          %r16806, .L3963, .L3962

.L3962:
	phisrc.64*  %phi783(return) <- $0
	br          .L3949

.L3963:
	load.64*    %r16807 <- 0[ep]
	store.64*   %r16807 -> 0[p]
	br          .L3939

.L3954:
	call.64*    %r16808 <- __ctype_b_loc
	load.64*    %r16809 <- 0[%r16808]
	load.64*    %r16810 <- 0[p]
	load.8      %r16811 <- 1[%r16810]
	scast.8     %r16812 <- (8) %r16811
	cast.32     %r16813 <- (8) %r16812
	scast.64    %r16814 <- (32) %r16813
	muls.64     %r16815 <- %r16814, $2
	add.64*     %r16816 <- %r16809, %r16815
	load.16     %r16817 <- 0[%r16816]
	cast.32     %r16818 <- (16) %r16817
	and.32      %r16819 <- %r16818, $0x800
	br          %r16819, .L3965, .L3966

.L3965:
	load.64*    %r16820 <- 0[ms]
	load.64*    %r16821 <- 0[s]
	load.64*    %r16822 <- 0[p]
	load.8      %r16823 <- 1[%r16822]
	scast.8     %r16824 <- (8) %r16823
	cast.32     %r16825 <- (8) %r16824
	push.64*    %r16820
	push.64*    %r16821
	push.32     %r16825
	call.64*    %r16826 <- match_capture
	store.64*   %r16826 -> 0[s]
	load.64*    %r16827 <- 0[s]
	seteq.32    %r16828 <- %r16827, $0
	br          %r16828, .L3967, .L3968

.L3967:
	phisrc.64*  %phi784(return) <- $0
	br          .L3949

.L3968:
	load.64*    %r16829 <- 0[p]
	cast.64     %r16830 <- (64) %r16829
	add.64      %r16831 <- %r16830, $2
	ptrcast.64* %r16832 <- (64) %r16831
	store.64*   %r16832 -> 0[p]
	br          .L3939

.L3966:
	br          .L3969

.L3944:
	load.64*    %r16833 <- 0[s]
	phisrc.64*  %phi785(return) <- %r16833
	br          .L3949

.L3945:
	load.64*    %r16834 <- 0[p]
	load.8      %r16835 <- 1[%r16834]
	scast.32    %r16836 <- (8) %r16835
	seteq.32    %r16837 <- %r16836, $0
	br          %r16837, .L3970, .L3971

.L3970:
	load.64*    %r16838 <- 0[s]
	load.64*    %r16839 <- 0[s]
	load.64*    %r16840 <- 0[ms]
	load.64*    %r16841 <- 8[%r16840]
	seteq.32    %r16842 <- %r16839, %r16841
	select.64*  %r16843 <- %r16842, %r16838, $0
	phisrc.64*  %phi786(return) <- %r16843
	br          .L3949

.L3971:
	br          .L3969

.L3946:
	br          .L3969

.L3969:
	load.64*    %r16844 <- 0[ms]
	load.64*    %r16845 <- 0[p]
	push.64*    %r16844
	push.64*    %r16845
	call.64*    %r16846 <- classend
	store.64*   %r16846 -> 0[ep]
	load.64*    %r16847 <- 0[s]
	load.64*    %r16848 <- 0[ms]
	load.64*    %r16849 <- 8[%r16848]
	setb.32     %r16850 <- %r16847, %r16849
	br          %r16850, .L3973, .L3974

.L3973:
	load.64*    %r16851 <- 0[s]
	load.8      %r16852 <- 0[%r16851]
	scast.8     %r16853 <- (8) %r16852
	cast.32     %r16854 <- (8) %r16853
	load.64*    %r16855 <- 0[p]
	load.64*    %r16856 <- 0[ep]
	push.32     %r16854
	push.64*    %r16855
	push.64*    %r16856
	call.32     %r16857 <- singlematch
	phisrc.32   %phi787 <- %r16857
	br          .L3975

.L3974:
	phisrc.32   %phi788 <- $0
	br          .L3975

.L3975:
	phi.32      %r16858 <- %phi787, %phi788
	store.32    %r16858 -> 0[m]
	load.64*    %r16859 <- 0[ep]
	load.8      %r16860 <- 0[%r16859]
	switch.8    %r16860, 42 -> .L3978, 43 -> .L3979, 45 -> .L3980, 63 -> .L3977, default -> .L3981

.L3977:
	load.32     %r16861 <- 0[m]
	br          %r16861, .L3984, .L3983

.L3984:
	load.64*    %r16862 <- 0[ms]
	load.64*    %r16863 <- 0[s]
	add.64*     %r16864 <- %r16863, $1
	load.64*    %r16865 <- 0[ep]
	add.64*     %r16866 <- %r16865, $1
	push.64*    %r16862
	push.64*    %r16864
	push.64*    %r16866
	call.64*    %r16867 <- match
	store.64*   %r16867 -> 0[res]
	setne.32    %r16868 <- %r16867, $0
	br          %r16868, .L3982, .L3983

.L3982:
	load.64*    %r16869 <- 0[res]
	phisrc.64*  %phi789(return) <- %r16869
	br          .L3949

.L3983:
	load.64*    %r16870 <- 0[ep]
	add.64*     %r16871 <- %r16870, $1
	store.64*   %r16871 -> 0[p]
	br          .L3939

.L3978:
	load.64*    %r16872 <- 0[ms]
	load.64*    %r16873 <- 0[s]
	load.64*    %r16874 <- 0[p]
	load.64*    %r16875 <- 0[ep]
	push.64*    %r16872
	push.64*    %r16873
	push.64*    %r16874
	push.64*    %r16875
	call.64*    %r16876 <- max_expand
	phisrc.64*  %phi790(return) <- %r16876
	br          .L3949

.L3979:
	load.32     %r16877 <- 0[m]
	br          %r16877, .L3985, .L3986

.L3985:
	load.64*    %r16878 <- 0[ms]
	load.64*    %r16879 <- 0[s]
	add.64*     %r16880 <- %r16879, $1
	load.64*    %r16881 <- 0[p]
	load.64*    %r16882 <- 0[ep]
	push.64*    %r16878
	push.64*    %r16880
	push.64*    %r16881
	push.64*    %r16882
	call.64*    %r16883 <- max_expand
	phisrc.64*  %phi791 <- %r16883
	br          .L3987

.L3986:
	phisrc.64*  %phi792 <- $0
	br          .L3987

.L3987:
	phi.64*     %r16884 <- %phi791, %phi792
	phisrc.64*  %phi793(return) <- %r16884
	br          .L3949

.L3980:
	load.64*    %r16885 <- 0[ms]
	load.64*    %r16886 <- 0[s]
	load.64*    %r16887 <- 0[p]
	load.64*    %r16888 <- 0[ep]
	push.64*    %r16885
	push.64*    %r16886
	push.64*    %r16887
	push.64*    %r16888
	call.64*    %r16889 <- min_expand
	phisrc.64*  %phi794(return) <- %r16889
	br          .L3949

.L3981:
	load.32     %r16890 <- 0[m]
	br          %r16890, .L3989, .L3988

.L3988:
	phisrc.64*  %phi795(return) <- $0
	br          .L3949

.L3989:
	load.64*    %r16891 <- 0[s]
	add.64*     %r16892 <- %r16891, $1
	store.64*   %r16892 -> 0[s]
	load.64*    %r16893 <- 0[ep]
	store.64*   %r16893 -> 0[p]
	br          .L3939

.L3949:
	phi.64*     %r16743 <- %phi777(return), %phi778(return), %phi779(return), %phi780(return), %phi783(return), %phi784(return), %phi785(return), %phi786(return), %phi789(return), %phi790(return), %phi793(return), %phi794(return), %phi795(return)
	ret.64*     %r16743


lmemfind:
.L3990:
	<entry-point>
	store.64*   %arg1 -> 0[s1]
	store.64    %arg2 -> 0[l1]
	store.64*   %arg3 -> 0[s2]
	store.64    %arg4 -> 0[l2]
	load.64     %r16894 <- 0[l2]
	seteq.32    %r16895 <- %r16894, $0
	br          %r16895, .L3991, .L3992

.L3991:
	load.64*    %r16896 <- 0[s1]
	phisrc.64*  %phi796(return) <- %r16896
	br          .L3993

.L3992:
	load.64     %r16898 <- 0[l2]
	load.64     %r16899 <- 0[l1]
	seta.32     %r16900 <- %r16898, %r16899
	br          %r16900, .L3995, .L3996

.L3995:
	phisrc.64*  %phi797(return) <- $0
	br          .L3993

.L3996:
	load.64     %r16901 <- 0[l2]
	sub.64      %r16902 <- %r16901, $1
	store.64    %r16902 -> 0[l2]
	load.64     %r16903 <- 0[l1]
	load.64     %r16904 <- 0[l2]
	sub.64      %r16905 <- %r16903, %r16904
	store.64    %r16905 -> 0[l1]
	br          .L4001

.L4001:
	load.64     %r16906 <- 0[l1]
	seta.32     %r16907 <- %r16906, $0
	br          %r16907, .L4002, .L4000

.L4002:
	load.64*    %r16908 <- 0[s1]
	cast.64*    %r16909 <- (64) %r16908
	load.64*    %r16910 <- 0[s2]
	load.8      %r16911 <- 0[%r16910]
	scast.32    %r16912 <- (8) %r16911
	load.64     %r16913 <- 0[l1]
	push.64*    %r16909
	push.32     %r16912
	push.64     %r16913
	call.64*    %r16914 <- memchr
	ptrcast.64* %r16915 <- (64) %r16914
	store.64*   %r16915 -> 0[init]
	setne.32    %r16916 <- %r16915, $0
	br          %r16916, .L3998, .L4000

.L3998:
	load.64*    %r16917 <- 0[init]
	add.64*     %r16918 <- %r16917, $1
	store.64*   %r16918 -> 0[init]
	load.64*    %r16919 <- 0[init]
	cast.64*    %r16920 <- (64) %r16919
	load.64*    %r16921 <- 0[s2]
	add.64*     %r16922 <- %r16921, $1
	cast.64*    %r16923 <- (64) %r16922
	load.64     %r16924 <- 0[l2]
	push.64*    %r16920
	push.64*    %r16923
	push.64     %r16924
	call.32     %r16925 <- memcmp
	seteq.32    %r16926 <- %r16925, $0
	br          %r16926, .L4003, .L4004

.L4003:
	load.64*    %r16927 <- 0[init]
	sub.64*     %r16928 <- %r16927, $1
	phisrc.64*  %phi798(return) <- %r16928
	br          .L3993

.L4004:
	load.64*    %r16929 <- 0[init]
	load.64*    %r16930 <- 0[s1]
	sub.64      %r16931 <- %r16929, %r16930
	scast.64    %r16932 <- (64) %r16931
	load.64     %r16933 <- 0[l1]
	cast.64     %r16934 <- (64) %r16933
	sub.64      %r16935 <- %r16934, %r16932
	cast.64     %r16936 <- (64) %r16935
	store.64    %r16936 -> 0[l1]
	load.64*    %r16937 <- 0[init]
	store.64*   %r16937 -> 0[s1]
	br          .L4005

.L4005:
	br          .L3999

.L3999:
	br          .L4001

.L4000:
	phisrc.64*  %phi799(return) <- $0
	br          .L3993

.L3993:
	phi.64*     %r16897 <- %phi796(return), %phi797(return), %phi798(return), %phi799(return)
	ret.64*     %r16897


push_onecapture:
.L4006:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.32    %arg2 -> 0[i]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.32     %r16938 <- 0[i]
	load.64*    %r16939 <- 0[ms]
	load.32     %r16940 <- 24[%r16939]
	setge.32    %r16941 <- %r16938, %r16940
	br          %r16941, .L4007, .L4008

.L4007:
	load.32     %r16942 <- 0[i]
	seteq.32    %r16943 <- %r16942, $0
	br          %r16943, .L4009, .L4010

.L4009:
	load.64*    %r16944 <- 0[ms]
	load.64*    %r16945 <- 16[%r16944]
	load.64*    %r16946 <- 0[s]
	load.64*    %r16947 <- 0[e]
	load.64*    %r16948 <- 0[s]
	sub.64      %r16949 <- %r16947, %r16948
	scast.64    %r16950 <- (64) %r16949
	push.64*    %r16945
	push.64*    %r16946
	push.64     %r16950
	call        lua_pushlstring
	br          .L4011

.L4010:
	load.64*    %r16951 <- 0[ms]
	load.64*    %r16952 <- 16[%r16951]
	symaddr.64* %r16953 <- <anon symbol:0x62d0014d7120>
	push.64*    %r16952
	push.64*    %r16953
	call.32     %r16954 <- luaL_error
	br          .L4011

.L4011:
	br          .L4012

.L4008:
	load.64*    %r16955 <- 0[ms]
	add.64*     %r16956 <- %r16955, $32
	load.32     %r16957 <- 0[i]
	scast.64    %r16958 <- (32) %r16957
	muls.64     %r16959 <- %r16958, $16
	add.64*     %r16960 <- %r16956, %r16959
	load.64     %r16961 <- 8[%r16960]
	store.64    %r16961 -> 0[l]
	load.64     %r16962 <- 0[l]
	seteq.32    %r16963 <- %r16962, $-1
	br          %r16963, .L4013, .L4014

.L4013:
	load.64*    %r16964 <- 0[ms]
	load.64*    %r16965 <- 16[%r16964]
	symaddr.64* %r16966 <- <anon symbol:0x62d0014d7b18>
	push.64*    %r16965
	push.64*    %r16966
	call.32     %r16967 <- luaL_error
	br          .L4014

.L4014:
	load.64     %r16968 <- 0[l]
	seteq.32    %r16969 <- %r16968, $-2
	br          %r16969, .L4015, .L4016

.L4015:
	load.64*    %r16970 <- 0[ms]
	load.64*    %r16971 <- 16[%r16970]
	load.64*    %r16972 <- 0[ms]
	add.64*     %r16973 <- %r16972, $32
	load.32     %r16974 <- 0[i]
	scast.64    %r16975 <- (32) %r16974
	muls.64     %r16976 <- %r16975, $16
	add.64*     %r16977 <- %r16973, %r16976
	load.64*    %r16978 <- 0[%r16977]
	load.64*    %r16979 <- 0[ms]
	load.64*    %r16980 <- 0[%r16979]
	sub.64      %r16981 <- %r16978, %r16980
	add.64      %r16982 <- %r16981, $1
	push.64*    %r16971
	push.64     %r16982
	call        lua_pushinteger
	br          .L4017

.L4016:
	load.64*    %r16983 <- 0[ms]
	load.64*    %r16984 <- 16[%r16983]
	load.64*    %r16985 <- 0[ms]
	add.64*     %r16986 <- %r16985, $32
	load.32     %r16987 <- 0[i]
	scast.64    %r16988 <- (32) %r16987
	muls.64     %r16989 <- %r16988, $16
	add.64*     %r16990 <- %r16986, %r16989
	load.64*    %r16991 <- 0[%r16990]
	load.64     %r16992 <- 0[l]
	scast.64    %r16993 <- (64) %r16992
	push.64*    %r16984
	push.64*    %r16991
	push.64     %r16993
	call        lua_pushlstring
	br          .L4017

.L4017:
	br          .L4012

.L4012:
	ret


push_captures:
.L4018:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[s]
	store.64*   %arg3 -> 0[e]
	load.64*    %r16994 <- 0[ms]
	load.32     %r16995 <- 24[%r16994]
	seteq.32    %r16996 <- %r16995, $0
	load.64*    %r16997 <- 0[s]
	and-bool.32 %r16998 <- %r16996, %r16997
	br          %r16998, .L4019, .L4020

.L4019:
	phisrc.32   %phi800 <- $1
	br          .L4021

.L4020:
	load.64*    %r16999 <- 0[ms]
	load.32     %r17000 <- 24[%r16999]
	phisrc.32   %phi801 <- %r17000
	br          .L4021

.L4021:
	phi.32      %r17001 <- %phi800, %phi801
	store.32    %r17001 -> 0[nlevels]
	load.64*    %r17002 <- 0[ms]
	load.64*    %r17003 <- 16[%r17002]
	load.32     %r17004 <- 0[nlevels]
	symaddr.64* %r17005 <- <anon symbol:0x62d0014d92a8>
	push.64*    %r17003
	push.32     %r17004
	push.64*    %r17005
	call        luaL_checkstack
	store.32    $0 -> 0[i]
	br          .L4025

.L4025:
	load.32     %r17006 <- 0[i]
	load.32     %r17007 <- 0[nlevels]
	setlt.32    %r17008 <- %r17006, %r17007
	br          %r17008, .L4022, .L4024

.L4022:
	load.64*    %r17009 <- 0[ms]
	load.32     %r17010 <- 0[i]
	load.64*    %r17011 <- 0[s]
	load.64*    %r17012 <- 0[e]
	push.64*    %r17009
	push.32     %r17010
	push.64*    %r17011
	push.64*    %r17012
	call        push_onecapture
	br          .L4023

.L4023:
	load.32     %r17013 <- 0[i]
	add.32      %r17014 <- %r17013, $1
	store.32    %r17014 -> 0[i]
	br          .L4025

.L4024:
	load.32     %r17015 <- 0[nlevels]
	phisrc.32   %phi802(return) <- %r17015
	br          .L4026

.L4026:
	phi.32      %r17016 <- %phi802(return)
	ret.32      %r17015


str_find_aux:
.L4027:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[find]
	load.64*    %r17017 <- 0[L]
	symaddr.64* %r17018 <- l1
	push.64*    %r17017
	push.32     $1
	push.64*    %r17018
	call.64*    %r17019 <- luaL_checklstring
	store.64*   %r17019 -> 0[s]
	load.64*    %r17020 <- 0[L]
	symaddr.64* %r17021 <- l2
	push.64*    %r17020
	push.32     $2
	push.64*    %r17021
	call.64*    %r17022 <- luaL_checklstring
	store.64*   %r17022 -> 0[p]
	load.64*    %r17023 <- 0[L]
	push.64*    %r17023
	push.32     $3
	push.64     $1
	call.64     %r17024 <- luaL_optinteger
	load.64     %r17025 <- 0[l1]
	push.64     %r17024
	push.64     %r17025
	call.64     %r17026 <- posrelat
	sub.64      %r17027 <- %r17026, $1
	store.64    %r17027 -> 0[init]
	load.64     %r17028 <- 0[init]
	setlt.32    %r17029 <- %r17028, $0
	br          %r17029, .L4028, .L4029

.L4028:
	store.64    $0 -> 0[init]
	br          .L4030

.L4029:
	load.64     %r17030 <- 0[init]
	scast.64    %r17031 <- (64) %r17030
	load.64     %r17032 <- 0[l1]
	seta.32     %r17033 <- %r17031, %r17032
	br          %r17033, .L4031, .L4032

.L4031:
	load.64     %r17034 <- 0[l1]
	cast.64     %r17035 <- (64) %r17034
	store.64    %r17035 -> 0[init]
	br          .L4032

.L4032:
	br          .L4030

.L4030:
	load.32     %r17036 <- 0[find]
	br          %r17036, .L4035, .L4034

.L4035:
	load.64*    %r17037 <- 0[L]
	push.64*    %r17037
	push.32     $4
	call.32     %r17038 <- lua_toboolean
	load.64*    %r17039 <- 0[p]
	symaddr.64* %r17040 <- <anon symbol:0x62d0014d99e8>
	push.64*    %r17039
	push.64*    %r17040
	call.64*    %r17041 <- strpbrk
	seteq.32    %r17042 <- %r17041, $0
	or-bool.32  %r17043 <- %r17038, %r17042
	br          %r17043, .L4033, .L4034

.L4033:
	load.64*    %r17044 <- 0[s]
	load.64     %r17045 <- 0[init]
	add.64*     %r17046 <- %r17044, %r17045
	load.64     %r17047 <- 0[l1]
	load.64     %r17048 <- 0[init]
	scast.64    %r17049 <- (64) %r17048
	sub.64      %r17050 <- %r17047, %r17049
	load.64*    %r17051 <- 0[p]
	load.64     %r17052 <- 0[l2]
	push.64*    %r17046
	push.64     %r17050
	push.64*    %r17051
	push.64     %r17052
	call.64*    %r17053 <- lmemfind
	store.64*   %r17053 -> 0[s2]
	load.64*    %r17054 <- 0[s2]
	br          %r17054, .L4036, .L4037

.L4036:
	load.64*    %r17055 <- 0[L]
	load.64*    %r17056 <- 0[s2]
	load.64*    %r17057 <- 0[s]
	sub.64      %r17058 <- %r17056, %r17057
	add.64      %r17059 <- %r17058, $1
	push.64*    %r17055
	push.64     %r17059
	call        lua_pushinteger
	load.64*    %r17060 <- 0[L]
	load.64*    %r17061 <- 0[s2]
	load.64*    %r17062 <- 0[s]
	sub.64      %r17063 <- %r17061, %r17062
	scast.64    %r17064 <- (64) %r17063
	load.64     %r17065 <- 0[l2]
	add.64      %r17066 <- %r17064, %r17065
	cast.64     %r17067 <- (64) %r17066
	push.64*    %r17060
	push.64     %r17067
	call        lua_pushinteger
	phisrc.32   %phi803(return) <- $2
	br          .L4038

.L4037:
	br          .L4039

.L4034:
	load.64*    %r17069 <- 0[p]
	load.8      %r17070 <- 0[%r17069]
	scast.32    %r17071 <- (8) %r17070
	seteq.32    %r17072 <- %r17071, $94
	br          %r17072, .L4040, .L4041

.L4040:
	load.64*    %r17073 <- 0[p]
	add.64*     %r17074 <- %r17073, $1
	store.64*   %r17074 -> 0[p]
	phisrc.32   %phi804 <- $1
	br          .L4042

.L4041:
	phisrc.32   %phi805 <- $0
	br          .L4042

.L4042:
	phi.32      %r17075 <- %phi804, %phi805
	store.32    %r17075 -> 0[anchor]
	load.64*    %r17076 <- 0[s]
	load.64     %r17077 <- 0[init]
	add.64*     %r17078 <- %r17076, %r17077
	store.64*   %r17078 -> 0[s1]
	load.64*    %r17079 <- 0[L]
	store.64*   %r17079 -> 16[ms]
	load.64*    %r17080 <- 0[s]
	store.64*   %r17080 -> 0[ms]
	load.64*    %r17081 <- 0[s]
	load.64     %r17082 <- 0[l1]
	add.64*     %r17083 <- %r17081, %r17082
	store.64*   %r17083 -> 8[ms]
	br          .L4043

.L4043:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17084 <- ms
	load.64*    %r17085 <- 0[s1]
	load.64*    %r17086 <- 0[p]
	push.64*    %r17084
	push.64*    %r17085
	push.64*    %r17086
	call.64*    %r17087 <- match
	store.64*   %r17087 -> 0[res]
	setne.32    %r17088 <- %r17087, $0
	br          %r17088, .L4046, .L4047

.L4046:
	load.32     %r17089 <- 0[find]
	br          %r17089, .L4048, .L4049

.L4048:
	load.64*    %r17090 <- 0[L]
	load.64*    %r17091 <- 0[s1]
	load.64*    %r17092 <- 0[s]
	sub.64      %r17093 <- %r17091, %r17092
	add.64      %r17094 <- %r17093, $1
	push.64*    %r17090
	push.64     %r17094
	call        lua_pushinteger
	load.64*    %r17095 <- 0[L]
	load.64*    %r17096 <- 0[res]
	load.64*    %r17097 <- 0[s]
	sub.64      %r17098 <- %r17096, %r17097
	push.64*    %r17095
	push.64     %r17098
	call        lua_pushinteger
	symaddr.64* %r17099 <- ms
	push.64*    %r17099
	push.64*    $0
	push.64*    $0
	call.32     %r17100 <- push_captures
	add.32      %r17101 <- %r17100, $2
	phisrc.32   %phi806(return) <- %r17101
	br          .L4038

.L4049:
	symaddr.64* %r17102 <- ms
	load.64*    %r17103 <- 0[s1]
	load.64*    %r17104 <- 0[res]
	push.64*    %r17102
	push.64*    %r17103
	push.64*    %r17104
	call.32     %r17105 <- push_captures
	phisrc.32   %phi807(return) <- %r17105
	br          .L4038

.L4047:
	br          .L4044

.L4044:
	load.64*    %r17106 <- 0[s1]
	add.64*     %r17107 <- %r17106, $1
	store.64*   %r17107 -> 0[s1]
	load.64*    %r17108 <- 8[ms]
	setb.32     %r17109 <- %r17106, %r17108
	load.32     %r17110 <- 0[anchor]
	seteq.32    %r17111 <- %r17110, $0
	and-bool.32 %r17112 <- %r17109, %r17111
	br          %r17112, .L4043, .L4045

.L4045:
	br          .L4039

.L4039:
	load.64*    %r17113 <- 0[L]
	push.64*    %r17113
	call        lua_pushnil
	phisrc.32   %phi808(return) <- $1
	br          .L4038

.L4038:
	phi.32      %r17068 <- %phi803(return), %phi806(return), %phi807(return), %phi808(return)
	ret.32      %r17068


str_find:
.L4051:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17114 <- 0[L]
	push.64*    %r17114
	push.32     $1
	call.32     %r17115 <- str_find_aux
	phisrc.32   %phi809(return) <- %r17115
	br          .L4052

.L4052:
	phi.32      %r17116 <- %phi809(return)
	ret.32      %r17115


str_match:
.L4053:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17117 <- 0[L]
	push.64*    %r17117
	push.32     $0
	call.32     %r17118 <- str_find_aux
	phisrc.32   %phi810(return) <- %r17118
	br          .L4054

.L4054:
	phi.32      %r17119 <- %phi810(return)
	ret.32      %r17118


gmatch_aux:
.L4055:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17120 <- 0[L]
	symaddr.64* %r17121 <- ls
	push.64*    %r17120
	push.32     $0xffffd8ed
	push.64*    %r17121
	call.64*    %r17122 <- lua_tolstring
	store.64*   %r17122 -> 0[s]
	load.64*    %r17123 <- 0[L]
	push.64*    %r17123
	push.32     $0xffffd8ec
	push.64*    $0
	call.64*    %r17124 <- lua_tolstring
	store.64*   %r17124 -> 0[p]
	load.64*    %r17125 <- 0[L]
	store.64*   %r17125 -> 16[ms]
	load.64*    %r17126 <- 0[s]
	store.64*   %r17126 -> 0[ms]
	load.64*    %r17127 <- 0[s]
	load.64     %r17128 <- 0[ls]
	add.64*     %r17129 <- %r17127, %r17128
	store.64*   %r17129 -> 8[ms]
	load.64*    %r17130 <- 0[s]
	load.64*    %r17131 <- 0[L]
	push.64*    %r17131
	push.32     $0xffffd8eb
	call.64     %r17132 <- lua_tointeger
	scast.64    %r17133 <- (64) %r17132
	add.64*     %r17134 <- %r17130, %r17133
	store.64*   %r17134 -> 0[src]
	br          .L4059

.L4059:
	load.64*    %r17135 <- 0[src]
	load.64*    %r17136 <- 8[ms]
	setbe.32    %r17137 <- %r17135, %r17136
	br          %r17137, .L4056, .L4058

.L4056:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17138 <- ms
	load.64*    %r17139 <- 0[src]
	load.64*    %r17140 <- 0[p]
	push.64*    %r17138
	push.64*    %r17139
	push.64*    %r17140
	call.64*    %r17141 <- match
	store.64*   %r17141 -> 0[e]
	setne.32    %r17142 <- %r17141, $0
	br          %r17142, .L4060, .L4061

.L4060:
	load.64*    %r17143 <- 0[e]
	load.64*    %r17144 <- 0[s]
	sub.64      %r17145 <- %r17143, %r17144
	store.64    %r17145 -> 0[newstart]
	load.64*    %r17146 <- 0[e]
	load.64*    %r17147 <- 0[src]
	seteq.32    %r17148 <- %r17146, %r17147
	br          %r17148, .L4062, .L4063

.L4062:
	load.64     %r17149 <- 0[newstart]
	add.64      %r17150 <- %r17149, $1
	store.64    %r17150 -> 0[newstart]
	br          .L4063

.L4063:
	load.64*    %r17151 <- 0[L]
	load.64     %r17152 <- 0[newstart]
	push.64*    %r17151
	push.64     %r17152
	call        lua_pushinteger
	load.64*    %r17153 <- 0[L]
	push.64*    %r17153
	push.32     $0xffffd8eb
	call        lua_replace
	symaddr.64* %r17154 <- ms
	load.64*    %r17155 <- 0[src]
	load.64*    %r17156 <- 0[e]
	push.64*    %r17154
	push.64*    %r17155
	push.64*    %r17156
	call.32     %r17157 <- push_captures
	phisrc.32   %phi811(return) <- %r17157
	br          .L4064

.L4061:
	br          .L4057

.L4057:
	load.64*    %r17159 <- 0[src]
	add.64*     %r17160 <- %r17159, $1
	store.64*   %r17160 -> 0[src]
	br          .L4059

.L4058:
	phisrc.32   %phi812(return) <- $0
	br          .L4064

.L4064:
	phi.32      %r17158 <- %phi811(return), %phi812(return)
	ret.32      %r17158


gmatch:
.L4065:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17161 <- 0[L]
	push.64*    %r17161
	push.32     $1
	push.64*    $0
	call.64*    %r17162 <- luaL_checklstring
	load.64*    %r17163 <- 0[L]
	push.64*    %r17163
	push.32     $2
	push.64*    $0
	call.64*    %r17164 <- luaL_checklstring
	load.64*    %r17165 <- 0[L]
	push.64*    %r17165
	push.32     $2
	call        lua_settop
	load.64*    %r17166 <- 0[L]
	push.64*    %r17166
	push.64     $0
	call        lua_pushinteger
	load.64*    %r17167 <- 0[L]
	symaddr.64* %r17168 <- gmatch_aux
	push.64*    %r17167
	push.64*    %r17168
	push.32     $3
	call        lua_pushcclosure
	phisrc.32   %phi813(return) <- $1
	br          .L4066

.L4066:
	phi.32      %r17169 <- %phi813(return)
	ret.32      $1


add_s:
.L4067:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[b]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.64*    %r17170 <- 0[ms]
	load.64*    %r17171 <- 16[%r17170]
	symaddr.64* %r17172 <- l
	push.64*    %r17171
	push.32     $3
	push.64*    %r17172
	call.64*    %r17173 <- lua_tolstring
	store.64*   %r17173 -> 0[news]
	store.64    $0 -> 0[i]
	br          .L4071

.L4071:
	load.64     %r17174 <- 0[i]
	load.64     %r17175 <- 0[l]
	setb.32     %r17176 <- %r17174, %r17175
	br          %r17176, .L4068, .L4070

.L4068:
	load.64*    %r17177 <- 0[news]
	load.64     %r17178 <- 0[i]
	add.64*     %r17179 <- %r17177, %r17178
	load.8      %r17180 <- 0[%r17179]
	scast.32    %r17181 <- (8) %r17180
	setne.32    %r17182 <- %r17181, $37
	br          %r17182, .L4072, .L4073

.L4072:
	load.64*    %r17183 <- 0[b]
	load.64*    %r17184 <- 0[%r17183]
	load.64*    %r17185 <- 0[b]
	add.64*     %r17186 <- %r17185, $24
	add.64*     %r17187 <- %r17186, $0x2000
	setb.32     %r17188 <- %r17184, %r17187
	br          %r17188, .L4074, .L4075

.L4074:
	phisrc.32   %phi814 <- $1
	br          .L4076

.L4075:
	load.64*    %r17189 <- 0[b]
	push.64*    %r17189
	call.64*    %r17190 <- luaL_prepbuffer
	phisrc.32   %phi815 <- %r17190
	br          .L4076

.L4076:
	phi.32      %r17191 <- %phi814, %phi815
	load.64*    %r17192 <- 0[news]
	load.64     %r17193 <- 0[i]
	add.64*     %r17194 <- %r17192, %r17193
	load.8      %r17195 <- 0[%r17194]
	scast.8     %r17196 <- (8) %r17195
	load.64*    %r17197 <- 0[b]
	load.64*    %r17198 <- 0[%r17197]
	add.64*     %r17199 <- %r17198, $1
	store.64*   %r17199 -> 0[%r17197]
	store.8     %r17196 -> 0[%r17198]
	br          .L4077

.L4073:
	load.64     %r17200 <- 0[i]
	add.64      %r17201 <- %r17200, $1
	store.64    %r17201 -> 0[i]
	call.64*    %r17202 <- __ctype_b_loc
	load.64*    %r17203 <- 0[%r17202]
	load.64*    %r17204 <- 0[news]
	load.64     %r17205 <- 0[i]
	add.64*     %r17206 <- %r17204, %r17205
	load.8      %r17207 <- 0[%r17206]
	scast.8     %r17208 <- (8) %r17207
	cast.32     %r17209 <- (8) %r17208
	scast.64    %r17210 <- (32) %r17209
	muls.64     %r17211 <- %r17210, $2
	add.64*     %r17212 <- %r17203, %r17211
	load.16     %r17213 <- 0[%r17212]
	cast.32     %r17214 <- (16) %r17213
	and.32      %r17215 <- %r17214, $0x800
	br          %r17215, .L4079, .L4078

.L4078:
	load.64*    %r17216 <- 0[b]
	load.64*    %r17217 <- 0[%r17216]
	load.64*    %r17218 <- 0[b]
	add.64*     %r17219 <- %r17218, $24
	add.64*     %r17220 <- %r17219, $0x2000
	setb.32     %r17221 <- %r17217, %r17220
	br          %r17221, .L4080, .L4081

.L4080:
	phisrc.32   %phi816 <- $1
	br          .L4082

.L4081:
	load.64*    %r17222 <- 0[b]
	push.64*    %r17222
	call.64*    %r17223 <- luaL_prepbuffer
	phisrc.32   %phi817 <- %r17223
	br          .L4082

.L4082:
	phi.32      %r17224 <- %phi816, %phi817
	load.64*    %r17225 <- 0[news]
	load.64     %r17226 <- 0[i]
	add.64*     %r17227 <- %r17225, %r17226
	load.8      %r17228 <- 0[%r17227]
	scast.8     %r17229 <- (8) %r17228
	load.64*    %r17230 <- 0[b]
	load.64*    %r17231 <- 0[%r17230]
	add.64*     %r17232 <- %r17231, $1
	store.64*   %r17232 -> 0[%r17230]
	store.8     %r17229 -> 0[%r17231]
	br          .L4083

.L4079:
	load.64*    %r17233 <- 0[news]
	load.64     %r17234 <- 0[i]
	add.64*     %r17235 <- %r17233, %r17234
	load.8      %r17236 <- 0[%r17235]
	scast.32    %r17237 <- (8) %r17236
	seteq.32    %r17238 <- %r17237, $48
	br          %r17238, .L4084, .L4085

.L4084:
	load.64*    %r17239 <- 0[b]
	load.64*    %r17240 <- 0[s]
	load.64*    %r17241 <- 0[e]
	load.64*    %r17242 <- 0[s]
	sub.64      %r17243 <- %r17241, %r17242
	scast.64    %r17244 <- (64) %r17243
	push.64*    %r17239
	push.64*    %r17240
	push.64     %r17244
	call        luaL_addlstring
	br          .L4086

.L4085:
	load.64*    %r17245 <- 0[ms]
	load.64*    %r17246 <- 0[news]
	load.64     %r17247 <- 0[i]
	add.64*     %r17248 <- %r17246, %r17247
	load.8      %r17249 <- 0[%r17248]
	scast.32    %r17250 <- (8) %r17249
	sub.32      %r17251 <- %r17250, $49
	load.64*    %r17252 <- 0[s]
	load.64*    %r17253 <- 0[e]
	push.64*    %r17245
	push.32     %r17251
	push.64*    %r17252
	push.64*    %r17253
	call        push_onecapture
	load.64*    %r17254 <- 0[b]
	push.64*    %r17254
	call        luaL_addvalue
	br          .L4086

.L4086:
	br          .L4083

.L4083:
	br          .L4077

.L4077:
	br          .L4069

.L4069:
	load.64     %r17255 <- 0[i]
	add.64      %r17256 <- %r17255, $1
	store.64    %r17256 -> 0[i]
	br          .L4071

.L4070:
	ret


add_value:
.L4087:
	<entry-point>
	store.64*   %arg1 -> 0[ms]
	store.64*   %arg2 -> 0[b]
	store.64*   %arg3 -> 0[s]
	store.64*   %arg4 -> 0[e]
	load.64*    %r17257 <- 0[ms]
	load.64*    %r17258 <- 16[%r17257]
	store.64*   %r17258 -> 0[L]
	load.64*    %r17259 <- 0[L]
	push.64*    %r17259
	push.32     $3
	call.32     %r17260 <- lua_type
	switch.32   %r17260, 3 -> .L4089, 4 -> .L4090, 5 -> .L4092, 6 -> .L4091, default -> .L4088

.L4089:
	br          .L4090

.L4090:
	load.64*    %r17261 <- 0[ms]
	load.64*    %r17262 <- 0[b]
	load.64*    %r17263 <- 0[s]
	load.64*    %r17264 <- 0[e]
	push.64*    %r17261
	push.64*    %r17262
	push.64*    %r17263
	push.64*    %r17264
	call        add_s
	br          .L4093

.L4091:
	load.64*    %r17265 <- 0[L]
	push.64*    %r17265
	push.32     $3
	call        lua_pushvalue
	load.64*    %r17266 <- 0[ms]
	load.64*    %r17267 <- 0[s]
	load.64*    %r17268 <- 0[e]
	push.64*    %r17266
	push.64*    %r17267
	push.64*    %r17268
	call.32     %r17269 <- push_captures
	store.32    %r17269 -> 0[n]
	load.64*    %r17270 <- 0[L]
	load.32     %r17271 <- 0[n]
	push.64*    %r17270
	push.32     %r17271
	push.32     $1
	call        lua_call
	br          .L4088

.L4092:
	load.64*    %r17272 <- 0[ms]
	load.64*    %r17273 <- 0[s]
	load.64*    %r17274 <- 0[e]
	push.64*    %r17272
	push.32     $0
	push.64*    %r17273
	push.64*    %r17274
	call        push_onecapture
	load.64*    %r17275 <- 0[L]
	push.64*    %r17275
	push.32     $3
	call        lua_gettable
	br          .L4088

.L4088:
	load.64*    %r17276 <- 0[L]
	push.64*    %r17276
	push.32     $0xffffffff
	call.32     %r17277 <- lua_toboolean
	br          %r17277, .L4095, .L4094

.L4094:
	load.64*    %r17278 <- 0[L]
	push.64*    %r17278
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r17279 <- 0[L]
	load.64*    %r17280 <- 0[s]
	load.64*    %r17281 <- 0[e]
	load.64*    %r17282 <- 0[s]
	sub.64      %r17283 <- %r17281, %r17282
	scast.64    %r17284 <- (64) %r17283
	push.64*    %r17279
	push.64*    %r17280
	push.64     %r17284
	call        lua_pushlstring
	br          .L4096

.L4095:
	load.64*    %r17285 <- 0[L]
	push.64*    %r17285
	push.32     $0xffffffff
	call.32     %r17286 <- lua_isstring
	br          %r17286, .L4098, .L4097

.L4097:
	load.64*    %r17287 <- 0[L]
	symaddr.64* %r17288 <- <anon symbol:0x62d0014fd168>
	load.64*    %r17289 <- 0[L]
	load.64*    %r17290 <- 0[L]
	push.64*    %r17290
	push.32     $0xffffffff
	call.32     %r17291 <- lua_type
	push.64*    %r17289
	push.32     %r17291
	call.64*    %r17292 <- lua_typename
	push.64*    %r17287
	push.64*    %r17288
	push.64*    %r17292
	call.32     %r17293 <- luaL_error
	br          .L4098

.L4098:
	br          .L4096

.L4096:
	load.64*    %r17294 <- 0[b]
	push.64*    %r17294
	call        luaL_addvalue
	br          .L4093

.L4093:
	ret


str_gsub:
.L4099:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17295 <- 0[L]
	symaddr.64* %r17296 <- srcl
	push.64*    %r17295
	push.32     $1
	push.64*    %r17296
	call.64*    %r17297 <- luaL_checklstring
	store.64*   %r17297 -> 0[src]
	load.64*    %r17298 <- 0[L]
	push.64*    %r17298
	push.32     $2
	push.64*    $0
	call.64*    %r17299 <- luaL_checklstring
	store.64*   %r17299 -> 0[p]
	load.64*    %r17300 <- 0[L]
	push.64*    %r17300
	push.32     $3
	call.32     %r17301 <- lua_type
	store.32    %r17301 -> 0[tr]
	load.64*    %r17302 <- 0[L]
	load.64     %r17303 <- 0[srcl]
	add.64      %r17304 <- %r17303, $1
	cast.64     %r17305 <- (64) %r17304
	push.64*    %r17302
	push.32     $4
	push.64     %r17305
	call.64     %r17306 <- luaL_optinteger
	scast.32    %r17307 <- (64) %r17306
	store.32    %r17307 -> 0[max_s]
	load.64*    %r17308 <- 0[p]
	load.8      %r17309 <- 0[%r17308]
	scast.32    %r17310 <- (8) %r17309
	seteq.32    %r17311 <- %r17310, $94
	br          %r17311, .L4100, .L4101

.L4100:
	load.64*    %r17312 <- 0[p]
	add.64*     %r17313 <- %r17312, $1
	store.64*   %r17313 -> 0[p]
	phisrc.32   %phi818 <- $1
	br          .L4102

.L4101:
	phisrc.32   %phi819 <- $0
	br          .L4102

.L4102:
	phi.32      %r17314 <- %phi818, %phi819
	store.32    %r17314 -> 0[anchor]
	store.32    $0 -> 0[n]
	load.32     %r17315 <- 0[tr]
	seteq.32    %r17316 <- %r17315, $3
	load.32     %r17317 <- 0[tr]
	seteq.32    %r17318 <- %r17317, $4
	or-bool.32  %r17319 <- %r17316, %r17318
	load.32     %r17320 <- 0[tr]
	seteq.32    %r17321 <- %r17320, $6
	or-bool.32  %r17322 <- %r17319, %r17321
	load.32     %r17323 <- 0[tr]
	seteq.32    %r17324 <- %r17323, $5
	or-bool.32  %r17325 <- %r17322, %r17324
	br          %r17325, .L4103, .L4104

.L4103:
	phisrc.32   %phi820 <- $1
	br          .L4105

.L4104:
	load.64*    %r17326 <- 0[L]
	symaddr.64* %r17327 <- <anon symbol:0x62d0014fd7c0>
	push.64*    %r17326
	push.32     $3
	push.64*    %r17327
	call.32     %r17328 <- luaL_argerror
	phisrc.32   %phi821 <- %r17328
	br          .L4105

.L4105:
	phi.32      %r17329 <- %phi820, %phi821
	load.64*    %r17330 <- 0[L]
	symaddr.64* %r17331 <- b
	push.64*    %r17330
	push.64*    %r17331
	call        luaL_buffinit
	load.64*    %r17332 <- 0[L]
	store.64*   %r17332 -> 16[ms]
	load.64*    %r17333 <- 0[src]
	store.64*   %r17333 -> 0[ms]
	load.64*    %r17334 <- 0[src]
	load.64     %r17335 <- 0[srcl]
	add.64*     %r17336 <- %r17334, %r17335
	store.64*   %r17336 -> 8[ms]
	br          .L4109

.L4109:
	load.32     %r17337 <- 0[n]
	load.32     %r17338 <- 0[max_s]
	setlt.32    %r17339 <- %r17337, %r17338
	br          %r17339, .L4106, .L4108

.L4106:
	store.32    $0 -> 24[ms]
	symaddr.64* %r17340 <- ms
	load.64*    %r17341 <- 0[src]
	load.64*    %r17342 <- 0[p]
	push.64*    %r17340
	push.64*    %r17341
	push.64*    %r17342
	call.64*    %r17343 <- match
	store.64*   %r17343 -> 0[e]
	load.64*    %r17344 <- 0[e]
	br          %r17344, .L4110, .L4111

.L4110:
	load.32     %r17345 <- 0[n]
	add.32      %r17346 <- %r17345, $1
	store.32    %r17346 -> 0[n]
	symaddr.64* %r17347 <- ms
	symaddr.64* %r17348 <- b
	load.64*    %r17349 <- 0[src]
	load.64*    %r17350 <- 0[e]
	push.64*    %r17347
	push.64*    %r17348
	push.64*    %r17349
	push.64*    %r17350
	call        add_value
	br          .L4111

.L4111:
	load.64*    %r17351 <- 0[e]
	load.64*    %r17352 <- 0[e]
	load.64*    %r17353 <- 0[src]
	seta.32     %r17354 <- %r17352, %r17353
	and-bool.32 %r17355 <- %r17351, %r17354
	br          %r17355, .L4112, .L4113

.L4112:
	load.64*    %r17356 <- 0[e]
	store.64*   %r17356 -> 0[src]
	br          .L4114

.L4113:
	load.64*    %r17357 <- 0[src]
	load.64*    %r17358 <- 8[ms]
	setb.32     %r17359 <- %r17357, %r17358
	br          %r17359, .L4115, .L4116

.L4115:
	load.64*    %r17360 <- 0[b]
	symaddr.64* %r17361 <- b
	add.64*     %r17362 <- %r17361, $24
	add.64*     %r17363 <- %r17362, $0x2000
	setb.32     %r17364 <- %r17360, %r17363
	br          %r17364, .L4117, .L4118

.L4117:
	phisrc.32   %phi822 <- $1
	br          .L4119

.L4118:
	symaddr.64* %r17365 <- b
	push.64*    %r17365
	call.64*    %r17366 <- luaL_prepbuffer
	phisrc.32   %phi823 <- %r17366
	br          .L4119

.L4119:
	phi.32      %r17367 <- %phi822, %phi823
	load.64*    %r17368 <- 0[src]
	add.64*     %r17369 <- %r17368, $1
	store.64*   %r17369 -> 0[src]
	load.8      %r17370 <- 0[%r17368]
	scast.8     %r17371 <- (8) %r17370
	load.64*    %r17372 <- 0[b]
	add.64*     %r17373 <- %r17372, $1
	store.64*   %r17373 -> 0[b]
	store.8     %r17371 -> 0[%r17372]
	br          .L4120

.L4116:
	br          .L4108

.L4120:
	br          .L4114

.L4114:
	load.32     %r17374 <- 0[anchor]
	br          %r17374, .L4121, .L4122

.L4121:
	br          .L4108

.L4122:
	br          .L4107

.L4107:
	br          .L4109

.L4108:
	symaddr.64* %r17375 <- b
	load.64*    %r17376 <- 0[src]
	load.64*    %r17377 <- 8[ms]
	load.64*    %r17378 <- 0[src]
	sub.64      %r17379 <- %r17377, %r17378
	scast.64    %r17380 <- (64) %r17379
	push.64*    %r17375
	push.64*    %r17376
	push.64     %r17380
	call        luaL_addlstring
	symaddr.64* %r17381 <- b
	push.64*    %r17381
	call        luaL_pushresult
	load.64*    %r17382 <- 0[L]
	load.32     %r17383 <- 0[n]
	scast.64    %r17384 <- (32) %r17383
	push.64*    %r17382
	push.64     %r17384
	call        lua_pushinteger
	phisrc.32   %phi824(return) <- $2
	br          .L4123

.L4123:
	phi.32      %r17385 <- %phi824(return)
	ret.32      $2


addquoted:
.L4124:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[b]
	store.32    %arg3 -> 0[arg]
	load.64*    %r17386 <- 0[L]
	load.32     %r17387 <- 0[arg]
	symaddr.64* %r17388 <- l
	push.64*    %r17386
	push.32     %r17387
	push.64*    %r17388
	call.64*    %r17389 <- luaL_checklstring
	store.64*   %r17389 -> 0[s]
	load.64*    %r17390 <- 0[b]
	load.64*    %r17391 <- 0[%r17390]
	load.64*    %r17392 <- 0[b]
	add.64*     %r17393 <- %r17392, $24
	add.64*     %r17394 <- %r17393, $0x2000
	setb.32     %r17395 <- %r17391, %r17394
	br          %r17395, .L4125, .L4126

.L4125:
	phisrc.32   %phi825 <- $1
	br          .L4127

.L4126:
	load.64*    %r17396 <- 0[b]
	push.64*    %r17396
	call.64*    %r17397 <- luaL_prepbuffer
	phisrc.32   %phi826 <- %r17397
	br          .L4127

.L4127:
	phi.32      %r17398 <- %phi825, %phi826
	load.64*    %r17399 <- 0[b]
	load.64*    %r17400 <- 0[%r17399]
	add.64*     %r17401 <- %r17400, $1
	store.64*   %r17401 -> 0[%r17399]
	store.8     $34 -> 0[%r17400]
	br          .L4131

.L4131:
	load.64     %r17402 <- 0[l]
	sub.64      %r17403 <- %r17402, $1
	store.64    %r17403 -> 0[l]
	br          %r17402, .L4128, .L4130

.L4128:
	load.64*    %r17404 <- 0[s]
	load.8      %r17405 <- 0[%r17404]
	switch.8    %r17405, 0 -> .L4137, 10 -> .L4135, 13 -> .L4136, 34 -> .L4133, 92 -> .L4134, default -> .L4138

.L4133:
	br          .L4134

.L4134:
	br          .L4135

.L4135:
	load.64*    %r17406 <- 0[b]
	load.64*    %r17407 <- 0[%r17406]
	load.64*    %r17408 <- 0[b]
	add.64*     %r17409 <- %r17408, $24
	add.64*     %r17410 <- %r17409, $0x2000
	setb.32     %r17411 <- %r17407, %r17410
	br          %r17411, .L4139, .L4140

.L4139:
	phisrc.32   %phi827 <- $1
	br          .L4141

.L4140:
	load.64*    %r17412 <- 0[b]
	push.64*    %r17412
	call.64*    %r17413 <- luaL_prepbuffer
	phisrc.32   %phi828 <- %r17413
	br          .L4141

.L4141:
	phi.32      %r17414 <- %phi827, %phi828
	load.64*    %r17415 <- 0[b]
	load.64*    %r17416 <- 0[%r17415]
	add.64*     %r17417 <- %r17416, $1
	store.64*   %r17417 -> 0[%r17415]
	store.8     $92 -> 0[%r17416]
	load.64*    %r17418 <- 0[b]
	load.64*    %r17419 <- 0[%r17418]
	load.64*    %r17420 <- 0[b]
	add.64*     %r17421 <- %r17420, $24
	add.64*     %r17422 <- %r17421, $0x2000
	setb.32     %r17423 <- %r17419, %r17422
	br          %r17423, .L4142, .L4143

.L4142:
	phisrc.32   %phi829 <- $1
	br          .L4144

.L4143:
	load.64*    %r17424 <- 0[b]
	push.64*    %r17424
	call.64*    %r17425 <- luaL_prepbuffer
	phisrc.32   %phi830 <- %r17425
	br          .L4144

.L4144:
	phi.32      %r17426 <- %phi829, %phi830
	load.64*    %r17427 <- 0[s]
	load.8      %r17428 <- 0[%r17427]
	scast.8     %r17429 <- (8) %r17428
	load.64*    %r17430 <- 0[b]
	load.64*    %r17431 <- 0[%r17430]
	add.64*     %r17432 <- %r17431, $1
	store.64*   %r17432 -> 0[%r17430]
	store.8     %r17429 -> 0[%r17431]
	br          .L4132

.L4136:
	load.64*    %r17433 <- 0[b]
	symaddr.64* %r17434 <- <anon symbol:0x62d001501560>
	push.64*    %r17433
	push.64*    %r17434
	push.64     $2
	call        luaL_addlstring
	br          .L4132

.L4137:
	load.64*    %r17435 <- 0[b]
	symaddr.64* %r17436 <- <anon symbol:0x62d001501900>
	push.64*    %r17435
	push.64*    %r17436
	push.64     $4
	call        luaL_addlstring
	br          .L4132

.L4138:
	load.64*    %r17437 <- 0[b]
	load.64*    %r17438 <- 0[%r17437]
	load.64*    %r17439 <- 0[b]
	add.64*     %r17440 <- %r17439, $24
	add.64*     %r17441 <- %r17440, $0x2000
	setb.32     %r17442 <- %r17438, %r17441
	br          %r17442, .L4145, .L4146

.L4145:
	phisrc.32   %phi831 <- $1
	br          .L4147

.L4146:
	load.64*    %r17443 <- 0[b]
	push.64*    %r17443
	call.64*    %r17444 <- luaL_prepbuffer
	phisrc.32   %phi832 <- %r17444
	br          .L4147

.L4147:
	phi.32      %r17445 <- %phi831, %phi832
	load.64*    %r17446 <- 0[s]
	load.8      %r17447 <- 0[%r17446]
	scast.8     %r17448 <- (8) %r17447
	load.64*    %r17449 <- 0[b]
	load.64*    %r17450 <- 0[%r17449]
	add.64*     %r17451 <- %r17450, $1
	store.64*   %r17451 -> 0[%r17449]
	store.8     %r17448 -> 0[%r17450]
	br          .L4132

.L4132:
	load.64*    %r17452 <- 0[s]
	add.64*     %r17453 <- %r17452, $1
	store.64*   %r17453 -> 0[s]
	br          .L4129

.L4129:
	br          .L4131

.L4130:
	load.64*    %r17454 <- 0[b]
	load.64*    %r17455 <- 0[%r17454]
	load.64*    %r17456 <- 0[b]
	add.64*     %r17457 <- %r17456, $24
	add.64*     %r17458 <- %r17457, $0x2000
	setb.32     %r17459 <- %r17455, %r17458
	br          %r17459, .L4148, .L4149

.L4148:
	phisrc.32   %phi833 <- $1
	br          .L4150

.L4149:
	load.64*    %r17460 <- 0[b]
	push.64*    %r17460
	call.64*    %r17461 <- luaL_prepbuffer
	phisrc.32   %phi834 <- %r17461
	br          .L4150

.L4150:
	phi.32      %r17462 <- %phi833, %phi834
	load.64*    %r17463 <- 0[b]
	load.64*    %r17464 <- 0[%r17463]
	add.64*     %r17465 <- %r17464, $1
	store.64*   %r17465 -> 0[%r17463]
	store.8     $34 -> 0[%r17464]
	br          .L4151

.L4151:
	ret


scanformat:
.L4152:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.64*   %arg2 -> 0[strfrmt]
	store.64*   %arg3 -> 0[form]
	load.64*    %r17466 <- 0[strfrmt]
	store.64*   %r17466 -> 0[p]
	br          .L4156

.L4156:
	load.64*    %r17467 <- 0[p]
	load.8      %r17468 <- 0[%r17467]
	scast.32    %r17469 <- (8) %r17468
	setne.32    %r17470 <- %r17469, $0
	symaddr.64* %r17471 <- <anon symbol:0x62d0014f0ef8>
	load.64*    %r17472 <- 0[p]
	load.8      %r17473 <- 0[%r17472]
	scast.32    %r17474 <- (8) %r17473
	push.64*    %r17471
	push.32     %r17474
	call.64*    %r17475 <- strchr
	setne.32    %r17476 <- %r17475, $0
	and-bool.32 %r17477 <- %r17470, %r17476
	br          %r17477, .L4153, .L4155

.L4153:
	load.64*    %r17478 <- 0[p]
	add.64*     %r17479 <- %r17478, $1
	store.64*   %r17479 -> 0[p]
	br          .L4154

.L4154:
	br          .L4156

.L4155:
	load.64*    %r17480 <- 0[p]
	load.64*    %r17481 <- 0[strfrmt]
	sub.64      %r17482 <- %r17480, %r17481
	scast.64    %r17483 <- (64) %r17482
	setae.32    %r17484 <- %r17483, $6
	br          %r17484, .L4157, .L4158

.L4157:
	load.64*    %r17485 <- 0[L]
	symaddr.64* %r17486 <- <anon symbol:0x62d0014f1550>
	push.64*    %r17485
	push.64*    %r17486
	call.32     %r17487 <- luaL_error
	br          .L4158

.L4158:
	call.64*    %r17488 <- __ctype_b_loc
	load.64*    %r17489 <- 0[%r17488]
	load.64*    %r17490 <- 0[p]
	load.8      %r17491 <- 0[%r17490]
	scast.8     %r17492 <- (8) %r17491
	cast.32     %r17493 <- (8) %r17492
	scast.64    %r17494 <- (32) %r17493
	muls.64     %r17495 <- %r17494, $2
	add.64*     %r17496 <- %r17489, %r17495
	load.16     %r17497 <- 0[%r17496]
	cast.32     %r17498 <- (16) %r17497
	and.32      %r17499 <- %r17498, $0x800
	br          %r17499, .L4159, .L4160

.L4159:
	load.64*    %r17500 <- 0[p]
	add.64*     %r17501 <- %r17500, $1
	store.64*   %r17501 -> 0[p]
	br          .L4160

.L4160:
	call.64*    %r17502 <- __ctype_b_loc
	load.64*    %r17503 <- 0[%r17502]
	load.64*    %r17504 <- 0[p]
	load.8      %r17505 <- 0[%r17504]
	scast.8     %r17506 <- (8) %r17505
	cast.32     %r17507 <- (8) %r17506
	scast.64    %r17508 <- (32) %r17507
	muls.64     %r17509 <- %r17508, $2
	add.64*     %r17510 <- %r17503, %r17509
	load.16     %r17511 <- 0[%r17510]
	cast.32     %r17512 <- (16) %r17511
	and.32      %r17513 <- %r17512, $0x800
	br          %r17513, .L4161, .L4162

.L4161:
	load.64*    %r17514 <- 0[p]
	add.64*     %r17515 <- %r17514, $1
	store.64*   %r17515 -> 0[p]
	br          .L4162

.L4162:
	load.64*    %r17516 <- 0[p]
	load.8      %r17517 <- 0[%r17516]
	scast.32    %r17518 <- (8) %r17517
	seteq.32    %r17519 <- %r17518, $46
	br          %r17519, .L4163, .L4164

.L4163:
	load.64*    %r17520 <- 0[p]
	add.64*     %r17521 <- %r17520, $1
	store.64*   %r17521 -> 0[p]
	call.64*    %r17522 <- __ctype_b_loc
	load.64*    %r17523 <- 0[%r17522]
	load.64*    %r17524 <- 0[p]
	load.8      %r17525 <- 0[%r17524]
	scast.8     %r17526 <- (8) %r17525
	cast.32     %r17527 <- (8) %r17526
	scast.64    %r17528 <- (32) %r17527
	muls.64     %r17529 <- %r17528, $2
	add.64*     %r17530 <- %r17523, %r17529
	load.16     %r17531 <- 0[%r17530]
	cast.32     %r17532 <- (16) %r17531
	and.32      %r17533 <- %r17532, $0x800
	br          %r17533, .L4165, .L4166

.L4165:
	load.64*    %r17534 <- 0[p]
	add.64*     %r17535 <- %r17534, $1
	store.64*   %r17535 -> 0[p]
	br          .L4166

.L4166:
	call.64*    %r17536 <- __ctype_b_loc
	load.64*    %r17537 <- 0[%r17536]
	load.64*    %r17538 <- 0[p]
	load.8      %r17539 <- 0[%r17538]
	scast.8     %r17540 <- (8) %r17539
	cast.32     %r17541 <- (8) %r17540
	scast.64    %r17542 <- (32) %r17541
	muls.64     %r17543 <- %r17542, $2
	add.64*     %r17544 <- %r17537, %r17543
	load.16     %r17545 <- 0[%r17544]
	cast.32     %r17546 <- (16) %r17545
	and.32      %r17547 <- %r17546, $0x800
	br          %r17547, .L4167, .L4168

.L4167:
	load.64*    %r17548 <- 0[p]
	add.64*     %r17549 <- %r17548, $1
	store.64*   %r17549 -> 0[p]
	br          .L4168

.L4168:
	br          .L4164

.L4164:
	call.64*    %r17550 <- __ctype_b_loc
	load.64*    %r17551 <- 0[%r17550]
	load.64*    %r17552 <- 0[p]
	load.8      %r17553 <- 0[%r17552]
	scast.8     %r17554 <- (8) %r17553
	cast.32     %r17555 <- (8) %r17554
	scast.64    %r17556 <- (32) %r17555
	muls.64     %r17557 <- %r17556, $2
	add.64*     %r17558 <- %r17551, %r17557
	load.16     %r17559 <- 0[%r17558]
	cast.32     %r17560 <- (16) %r17559
	and.32      %r17561 <- %r17560, $0x800
	br          %r17561, .L4169, .L4170

.L4169:
	load.64*    %r17562 <- 0[L]
	symaddr.64* %r17563 <- <anon symbol:0x62d0014f2770>
	push.64*    %r17562
	push.64*    %r17563
	call.32     %r17564 <- luaL_error
	br          .L4170

.L4170:
	load.64*    %r17565 <- 0[form]
	add.64*     %r17566 <- %r17565, $1
	store.64*   %r17566 -> 0[form]
	store.8     $37 -> 0[%r17565]
	load.64*    %r17567 <- 0[form]
	load.64*    %r17568 <- 0[strfrmt]
	load.64*    %r17569 <- 0[p]
	load.64*    %r17570 <- 0[strfrmt]
	sub.64      %r17571 <- %r17569, %r17570
	add.64      %r17572 <- %r17571, $1
	scast.64    %r17573 <- (64) %r17572
	push.64*    %r17567
	push.64*    %r17568
	push.64     %r17573
	call.64*    %r17574 <- strncpy
	load.64*    %r17575 <- 0[p]
	load.64*    %r17576 <- 0[strfrmt]
	sub.64      %r17577 <- %r17575, %r17576
	add.64      %r17578 <- %r17577, $1
	load.64*    %r17579 <- 0[form]
	cast.64     %r17580 <- (64) %r17579
	add.64      %r17581 <- %r17580, %r17578
	ptrcast.64* %r17582 <- (64) %r17581
	store.64*   %r17582 -> 0[form]
	load.64*    %r17583 <- 0[form]
	store.8     $0 -> 0[%r17583]
	load.64*    %r17584 <- 0[p]
	phisrc.64*  %phi835(return) <- %r17584
	br          .L4171

.L4171:
	phi.64*     %r17585 <- %phi835(return)
	ret.64*     %r17584


addintlen:
.L4172:
	<entry-point>
	store.64*   %arg1 -> 0[form]
	load.64*    %r17586 <- 0[form]
	push.64*    %r17586
	call.64     %r17587 <- strlen
	store.64    %r17587 -> 0[l]
	load.64*    %r17588 <- 0[form]
	load.64     %r17589 <- 0[l]
	sub.64      %r17590 <- %r17589, $1
	add.64*     %r17591 <- %r17588, %r17590
	load.8      %r17592 <- 0[%r17591]
	store.8     %r17592 -> 0[spec]
	load.64*    %r17593 <- 0[form]
	load.64     %r17594 <- 0[l]
	add.64*     %r17595 <- %r17593, %r17594
	sub.64*     %r17596 <- %r17595, $1
	symaddr.64* %r17597 <- <anon symbol:0x62d0014f2dc8>
	push.64*    %r17596
	push.64*    %r17597
	call.64*    %r17598 <- strcpy
	load.8      %r17599 <- 0[spec]
	load.64*    %r17600 <- 0[form]
	load.64     %r17601 <- 0[l]
	add.64      %r17602 <- %r17601, $2
	sub.64      %r17603 <- %r17602, $2
	add.64*     %r17604 <- %r17600, %r17603
	store.8     %r17599 -> 0[%r17604]
	load.64*    %r17605 <- 0[form]
	load.64     %r17606 <- 0[l]
	add.64      %r17607 <- %r17606, $2
	sub.64      %r17608 <- %r17607, $1
	add.64*     %r17609 <- %r17605, %r17608
	store.8     $0 -> 0[%r17609]
	br          .L4173

.L4173:
	ret


str_format:
.L4174:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17610 <- 0[L]
	push.64*    %r17610
	call.32     %r17611 <- lua_gettop
	store.32    %r17611 -> 0[top]
	store.32    $1 -> 0[arg]
	load.64*    %r17612 <- 0[L]
	load.32     %r17613 <- 0[arg]
	symaddr.64* %r17614 <- sfl
	push.64*    %r17612
	push.32     %r17613
	push.64*    %r17614
	call.64*    %r17615 <- luaL_checklstring
	store.64*   %r17615 -> 0[strfrmt]
	load.64*    %r17616 <- 0[strfrmt]
	load.64     %r17617 <- 0[sfl]
	add.64*     %r17618 <- %r17616, %r17617
	store.64*   %r17618 -> 0[strfrmt_end]
	load.64*    %r17619 <- 0[L]
	symaddr.64* %r17620 <- b
	push.64*    %r17619
	push.64*    %r17620
	call        luaL_buffinit
	br          .L4178

.L4178:
	load.64*    %r17621 <- 0[strfrmt]
	load.64*    %r17622 <- 0[strfrmt_end]
	setb.32     %r17623 <- %r17621, %r17622
	br          %r17623, .L4175, .L4177

.L4175:
	load.64*    %r17624 <- 0[strfrmt]
	load.8      %r17625 <- 0[%r17624]
	scast.32    %r17626 <- (8) %r17625
	setne.32    %r17627 <- %r17626, $37
	br          %r17627, .L4179, .L4180

.L4179:
	load.64*    %r17628 <- 0[b]
	symaddr.64* %r17629 <- b
	add.64*     %r17630 <- %r17629, $24
	add.64*     %r17631 <- %r17630, $0x2000
	setb.32     %r17632 <- %r17628, %r17631
	br          %r17632, .L4181, .L4182

.L4181:
	phisrc.32   %phi836 <- $1
	br          .L4183

.L4182:
	symaddr.64* %r17633 <- b
	push.64*    %r17633
	call.64*    %r17634 <- luaL_prepbuffer
	phisrc.32   %phi837 <- %r17634
	br          .L4183

.L4183:
	phi.32      %r17635 <- %phi836, %phi837
	load.64*    %r17636 <- 0[strfrmt]
	add.64*     %r17637 <- %r17636, $1
	store.64*   %r17637 -> 0[strfrmt]
	load.8      %r17638 <- 0[%r17636]
	scast.8     %r17639 <- (8) %r17638
	load.64*    %r17640 <- 0[b]
	add.64*     %r17641 <- %r17640, $1
	store.64*   %r17641 -> 0[b]
	store.8     %r17639 -> 0[%r17640]
	br          .L4184

.L4180:
	load.64*    %r17642 <- 0[strfrmt]
	add.64*     %r17643 <- %r17642, $1
	store.64*   %r17643 -> 0[strfrmt]
	load.8      %r17644 <- 0[%r17643]
	scast.32    %r17645 <- (8) %r17644
	seteq.32    %r17646 <- %r17645, $37
	br          %r17646, .L4185, .L4186

.L4185:
	load.64*    %r17647 <- 0[b]
	symaddr.64* %r17648 <- b
	add.64*     %r17649 <- %r17648, $24
	add.64*     %r17650 <- %r17649, $0x2000
	setb.32     %r17651 <- %r17647, %r17650
	br          %r17651, .L4187, .L4188

.L4187:
	phisrc.32   %phi838 <- $1
	br          .L4189

.L4188:
	symaddr.64* %r17652 <- b
	push.64*    %r17652
	call.64*    %r17653 <- luaL_prepbuffer
	phisrc.32   %phi839 <- %r17653
	br          .L4189

.L4189:
	phi.32      %r17654 <- %phi838, %phi839
	load.64*    %r17655 <- 0[strfrmt]
	add.64*     %r17656 <- %r17655, $1
	store.64*   %r17656 -> 0[strfrmt]
	load.8      %r17657 <- 0[%r17655]
	scast.8     %r17658 <- (8) %r17657
	load.64*    %r17659 <- 0[b]
	add.64*     %r17660 <- %r17659, $1
	store.64*   %r17660 -> 0[b]
	store.8     %r17658 -> 0[%r17659]
	br          .L4190

.L4186:
	load.32     %r17661 <- 0[arg]
	add.32      %r17662 <- %r17661, $1
	store.32    %r17662 -> 0[arg]
	load.32     %r17663 <- 0[top]
	setgt.32    %r17664 <- %r17662, %r17663
	br          %r17664, .L4191, .L4192

.L4191:
	load.64*    %r17665 <- 0[L]
	load.32     %r17666 <- 0[arg]
	symaddr.64* %r17667 <- <anon symbol:0x62d0014f5b18>
	push.64*    %r17665
	push.32     %r17666
	push.64*    %r17667
	call.32     %r17668 <- luaL_argerror
	br          .L4192

.L4192:
	load.64*    %r17669 <- 0[L]
	load.64*    %r17670 <- 0[strfrmt]
	symaddr.64* %r17671 <- form
	push.64*    %r17669
	push.64*    %r17670
	push.64*    %r17671
	call.64*    %r17672 <- scanformat
	store.64*   %r17672 -> 0[strfrmt]
	load.64*    %r17673 <- 0[strfrmt]
	add.64*     %r17674 <- %r17673, $1
	store.64*   %r17674 -> 0[strfrmt]
	load.8      %r17675 <- 0[%r17673]
	switch.8    %r17675, 69 -> .L4202, 71 -> .L4205, 88 -> .L4200, 99 -> .L4194, 100 -> .L4195, 101 -> .L4201, 102 -> .L4203, 103 -> .L4204, 105 -> .L4196, 111 -> .L4197, 113 -> .L4206, 115 -> .L4207, 117 -> .L4198, 120 -> .L4199, default -> .L4208

.L4194:
	symaddr.64* %r17676 <- buff
	symaddr.64* %r17677 <- form
	load.64*    %r17678 <- 0[L]
	load.32     %r17679 <- 0[arg]
	push.64*    %r17678
	push.32     %r17679
	call.f64    %r17680 <- luaL_checknumber
	cast.32     %r17681 <- (64) %r17680
	push.64*    %r17676
	push.64*    %r17677
	push.32     %r17681
	call.32     %r17682 <- sprintf
	br          .L4193

.L4195:
	br          .L4196

.L4196:
	symaddr.64* %r17683 <- form
	push.64*    %r17683
	call        addintlen
	symaddr.64* %r17684 <- buff
	symaddr.64* %r17685 <- form
	load.64*    %r17686 <- 0[L]
	load.32     %r17687 <- 0[arg]
	push.64*    %r17686
	push.32     %r17687
	call.f64    %r17688 <- luaL_checknumber
	cast.64     %r17689 <- (64) %r17688
	push.64*    %r17684
	push.64*    %r17685
	push.64     %r17689
	call.32     %r17690 <- sprintf
	br          .L4193

.L4197:
	br          .L4198

.L4198:
	br          .L4199

.L4199:
	br          .L4200

.L4200:
	symaddr.64* %r17691 <- form
	push.64*    %r17691
	call        addintlen
	symaddr.64* %r17692 <- buff
	symaddr.64* %r17693 <- form
	load.64*    %r17694 <- 0[L]
	load.32     %r17695 <- 0[arg]
	push.64*    %r17694
	push.32     %r17695
	call.f64    %r17696 <- luaL_checknumber
	cast.64     %r17697 <- (64) %r17696
	push.64*    %r17692
	push.64*    %r17693
	push.64     %r17697
	call.32     %r17698 <- sprintf
	br          .L4193

.L4201:
	br          .L4202

.L4202:
	br          .L4203

.L4203:
	br          .L4204

.L4204:
	br          .L4205

.L4205:
	symaddr.64* %r17699 <- buff
	symaddr.64* %r17700 <- form
	load.64*    %r17701 <- 0[L]
	load.32     %r17702 <- 0[arg]
	push.64*    %r17701
	push.32     %r17702
	call.f64    %r17703 <- luaL_checknumber
	fpcast.f64  %r17704 <- (64) %r17703
	push.64*    %r17699
	push.64*    %r17700
	push.f64    %r17704
	call.32     %r17705 <- sprintf
	br          .L4193

.L4206:
	load.64*    %r17706 <- 0[L]
	symaddr.64* %r17707 <- b
	load.32     %r17708 <- 0[arg]
	push.64*    %r17706
	push.64*    %r17707
	push.32     %r17708
	call        addquoted
	br          .L4176

.L4207:
	load.64*    %r17709 <- 0[L]
	load.32     %r17710 <- 0[arg]
	symaddr.64* %r17711 <- l
	push.64*    %r17709
	push.32     %r17710
	push.64*    %r17711
	call.64*    %r17712 <- luaL_checklstring
	store.64*   %r17712 -> 0[s]
	symaddr.64* %r17713 <- form
	push.64*    %r17713
	push.32     $46
	call.64*    %r17714 <- strchr
	seteq.32    %r17715 <- %r17714, $0
	load.64     %r17716 <- 0[l]
	setae.32    %r17717 <- %r17716, $100
	and-bool.32 %r17718 <- %r17715, %r17717
	br          %r17718, .L4209, .L4210

.L4209:
	load.64*    %r17719 <- 0[L]
	load.32     %r17720 <- 0[arg]
	push.64*    %r17719
	push.32     %r17720
	call        lua_pushvalue
	symaddr.64* %r17721 <- b
	push.64*    %r17721
	call        luaL_addvalue
	br          .L4176

.L4210:
	symaddr.64* %r17722 <- buff
	symaddr.64* %r17723 <- form
	load.64*    %r17724 <- 0[s]
	push.64*    %r17722
	push.64*    %r17723
	push.64*    %r17724
	call.32     %r17725 <- sprintf
	br          .L4193

.L4208:
	load.64*    %r17726 <- 0[L]
	symaddr.64* %r17727 <- <anon symbol:0x62d0014f7e70>
	load.64*    %r17728 <- 0[strfrmt]
	sub.64*     %r17729 <- %r17728, $1
	load.8      %r17730 <- 0[%r17729]
	scast.32    %r17731 <- (8) %r17730
	push.64*    %r17726
	push.64*    %r17727
	push.32     %r17731
	call.32     %r17732 <- luaL_error
	phisrc.32   %phi840(return) <- %r17732
	br          .L4212

.L4193:
	symaddr.64* %r17734 <- b
	symaddr.64* %r17735 <- buff
	symaddr.64* %r17736 <- buff
	push.64*    %r17736
	call.64     %r17737 <- strlen
	push.64*    %r17734
	push.64*    %r17735
	push.64     %r17737
	call        luaL_addlstring
	br          .L4190

.L4190:
	br          .L4184

.L4184:
	br          .L4176

.L4176:
	br          .L4178

.L4177:
	symaddr.64* %r17738 <- b
	push.64*    %r17738
	call        luaL_pushresult
	phisrc.32   %phi841(return) <- $1
	br          .L4212

.L4212:
	phi.32      %r17733 <- %phi840(return), %phi841(return)
	ret.32      %r17733


createmetatable:
.L4213:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17739 <- 0[L]
	push.64*    %r17739
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r17740 <- 0[L]
	symaddr.64* %r17741 <- <anon symbol:0x62d001518a70>
	push.64*    %r17740
	push.64*    %r17741
	push.64     $0
	call        lua_pushlstring
	load.64*    %r17742 <- 0[L]
	push.64*    %r17742
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r17743 <- 0[L]
	push.64*    %r17743
	push.32     $0xfffffffe
	call.32     %r17744 <- lua_setmetatable
	load.64*    %r17745 <- 0[L]
	push.64*    %r17745
	push.32     $0xfffffffe
	call        lua_settop
	load.64*    %r17746 <- 0[L]
	push.64*    %r17746
	push.32     $0xfffffffe
	call        lua_pushvalue
	load.64*    %r17747 <- 0[L]
	symaddr.64* %r17748 <- <anon symbol:0x62d001518fe0>
	push.64*    %r17747
	push.32     $0xfffffffe
	push.64*    %r17748
	call        lua_setfield
	load.64*    %r17749 <- 0[L]
	push.64*    %r17749
	push.32     $0xfffffffe
	call        lua_settop
	br          .L4214

.L4214:
	ret


luaopen_string:
.L4215:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17750 <- 0[L]
	symaddr.64* %r17751 <- <anon symbol:0x62d001519380>
	symaddr.64* %r17752 <- strlib
	push.64*    %r17750
	push.64*    %r17751
	push.64*    %r17752
	call        luaL_register
	load.64*    %r17753 <- 0[L]
	push.64*    %r17753
	call        createmetatable
	phisrc.32   %phi842(return) <- $1
	br          .L4216

.L4216:
	phi.32      %r17754 <- %phi842(return)
	ret.32      $1


luaL_openlibs:
.L4217:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	symaddr.64* %r17755 <- lualibs
	store.64*   %r17755 -> 0[lib]
	br          .L4221

.L4221:
	load.64*    %r17756 <- 0[lib]
	load.64*    %r17757 <- 8[%r17756]
	br          %r17757, .L4218, .L4220

.L4218:
	load.64*    %r17758 <- 0[L]
	load.64*    %r17759 <- 0[lib]
	load.64*    %r17760 <- 8[%r17759]
	push.64*    %r17758
	push.64*    %r17760
	push.32     $0
	call        lua_pushcclosure
	load.64*    %r17761 <- 0[L]
	load.64*    %r17762 <- 0[lib]
	load.64*    %r17763 <- 0[%r17762]
	push.64*    %r17761
	push.64*    %r17763
	call        lua_pushstring
	load.64*    %r17764 <- 0[L]
	push.64*    %r17764
	push.32     $1
	push.32     $0
	call        lua_call
	br          .L4219

.L4219:
	load.64*    %r17765 <- 0[lib]
	add.64*     %r17766 <- %r17765, $16
	store.64*   %r17766 -> 0[lib]
	br          .L4221

.L4220:
	ret


barg:
.L4222:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	store.32    %arg2 -> 0[idx]
	load.64*    %r17767 <- 0[L]
	load.32     %r17768 <- 0[idx]
	push.64*    %r17767
	push.32     %r17768
	call.f64    %r17769 <- lua_tonumber
	set.f64     %r17770 <- 6755399441055744.000000
	add.f64     %r17771 <- %r17769, %r17770
	store.f64   %r17771 -> 0[bn]
	load.f64    %r17772 <- 0[bn]
	set.f64     %r17773 <- 0.000000
	seteq.32    %r17774 <- %r17772, %r17773
	br          %r17774, .L4225, .L4224

.L4225:
	load.64*    %r17775 <- 0[L]
	load.32     %r17776 <- 0[idx]
	push.64*    %r17775
	push.32     %r17776
	call.32     %r17777 <- lua_isnumber
	br          %r17777, .L4224, .L4223

.L4223:
	load.64*    %r17778 <- 0[L]
	load.32     %r17779 <- 0[idx]
	symaddr.64* %r17780 <- <anon symbol:0x62d00151a118>
	push.64*    %r17778
	push.32     %r17779
	push.64*    %r17780
	call.32     %r17781 <- luaL_typerror
	br          .L4224

.L4224:
	load.64     %r17782 <- 0[bn]
	cast.32     %r17783 <- (64) %r17782
	phisrc.32   %phi843(return) <- %r17783
	br          .L4226

.L4226:
	phi.32      %r17784 <- %phi843(return)
	ret.32      %r17783


tobit:
.L4227:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17785 <- 0[L]
	load.64*    %r17786 <- 0[L]
	push.64*    %r17786
	push.32     $1
	call.32     %r17787 <- barg
	cast.32     %r17788 <- (32) %r17787
	fpcast.f64  %r17789 <- (32) %r17788
	push.64*    %r17785
	push.f64    %r17789
	call        lua_pushnumber
	phisrc.32   %phi844(return) <- $1
	br          .L4228

.L4228:
	phi.32      %r17790 <- %phi844(return)
	ret.32      $1


bnot:
.L4229:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17791 <- 0[L]
	load.64*    %r17792 <- 0[L]
	push.64*    %r17792
	push.32     $1
	call.32     %r17793 <- barg
	not.32      %r17794 <- %r17793
	cast.32     %r17795 <- (32) %r17794
	fpcast.f64  %r17796 <- (32) %r17795
	push.64*    %r17791
	push.f64    %r17796
	call        lua_pushnumber
	phisrc.32   %phi845(return) <- $1
	br          .L4230

.L4230:
	phi.32      %r17797 <- %phi845(return)
	ret.32      $1


band:
.L4231:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17798 <- 0[L]
	push.64*    %r17798
	push.32     $1
	call.32     %r17799 <- barg
	store.32    %r17799 -> 0[b]
	load.64*    %r17800 <- 0[L]
	push.64*    %r17800
	call.32     %r17801 <- lua_gettop
	store.32    %r17801 -> 0[i]
	br          .L4235

.L4235:
	load.32     %r17802 <- 0[i]
	setgt.32    %r17803 <- %r17802, $1
	br          %r17803, .L4232, .L4234

.L4232:
	load.64*    %r17804 <- 0[L]
	load.32     %r17805 <- 0[i]
	push.64*    %r17804
	push.32     %r17805
	call.32     %r17806 <- barg
	load.32     %r17807 <- 0[b]
	cast.32     %r17808 <- (32) %r17807
	and.32      %r17809 <- %r17808, %r17806
	cast.32     %r17810 <- (32) %r17809
	store.32    %r17810 -> 0[b]
	br          .L4233

.L4233:
	load.32     %r17811 <- 0[i]
	sub.32      %r17812 <- %r17811, $1
	store.32    %r17812 -> 0[i]
	br          .L4235

.L4234:
	load.64*    %r17813 <- 0[L]
	load.32     %r17814 <- 0[b]
	cast.32     %r17815 <- (32) %r17814
	fpcast.f64  %r17816 <- (32) %r17815
	push.64*    %r17813
	push.f64    %r17816
	call        lua_pushnumber
	phisrc.32   %phi846(return) <- $1
	br          .L4236

.L4236:
	phi.32      %r17817 <- %phi846(return)
	ret.32      $1


bor:
.L4237:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17818 <- 0[L]
	push.64*    %r17818
	push.32     $1
	call.32     %r17819 <- barg
	store.32    %r17819 -> 0[b]
	load.64*    %r17820 <- 0[L]
	push.64*    %r17820
	call.32     %r17821 <- lua_gettop
	store.32    %r17821 -> 0[i]
	br          .L4241

.L4241:
	load.32     %r17822 <- 0[i]
	setgt.32    %r17823 <- %r17822, $1
	br          %r17823, .L4238, .L4240

.L4238:
	load.64*    %r17824 <- 0[L]
	load.32     %r17825 <- 0[i]
	push.64*    %r17824
	push.32     %r17825
	call.32     %r17826 <- barg
	load.32     %r17827 <- 0[b]
	cast.32     %r17828 <- (32) %r17827
	or.32       %r17829 <- %r17828, %r17826
	cast.32     %r17830 <- (32) %r17829
	store.32    %r17830 -> 0[b]
	br          .L4239

.L4239:
	load.32     %r17831 <- 0[i]
	sub.32      %r17832 <- %r17831, $1
	store.32    %r17832 -> 0[i]
	br          .L4241

.L4240:
	load.64*    %r17833 <- 0[L]
	load.32     %r17834 <- 0[b]
	cast.32     %r17835 <- (32) %r17834
	fpcast.f64  %r17836 <- (32) %r17835
	push.64*    %r17833
	push.f64    %r17836
	call        lua_pushnumber
	phisrc.32   %phi847(return) <- $1
	br          .L4242

.L4242:
	phi.32      %r17837 <- %phi847(return)
	ret.32      $1


bxor:
.L4243:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17838 <- 0[L]
	push.64*    %r17838
	push.32     $1
	call.32     %r17839 <- barg
	store.32    %r17839 -> 0[b]
	load.64*    %r17840 <- 0[L]
	push.64*    %r17840
	call.32     %r17841 <- lua_gettop
	store.32    %r17841 -> 0[i]
	br          .L4247

.L4247:
	load.32     %r17842 <- 0[i]
	setgt.32    %r17843 <- %r17842, $1
	br          %r17843, .L4244, .L4246

.L4244:
	load.64*    %r17844 <- 0[L]
	load.32     %r17845 <- 0[i]
	push.64*    %r17844
	push.32     %r17845
	call.32     %r17846 <- barg
	load.32     %r17847 <- 0[b]
	cast.32     %r17848 <- (32) %r17847
	xor.32      %r17849 <- %r17848, %r17846
	cast.32     %r17850 <- (32) %r17849
	store.32    %r17850 -> 0[b]
	br          .L4245

.L4245:
	load.32     %r17851 <- 0[i]
	sub.32      %r17852 <- %r17851, $1
	store.32    %r17852 -> 0[i]
	br          .L4247

.L4246:
	load.64*    %r17853 <- 0[L]
	load.32     %r17854 <- 0[b]
	cast.32     %r17855 <- (32) %r17854
	fpcast.f64  %r17856 <- (32) %r17855
	push.64*    %r17853
	push.f64    %r17856
	call        lua_pushnumber
	phisrc.32   %phi848(return) <- $1
	br          .L4248

.L4248:
	phi.32      %r17857 <- %phi848(return)
	ret.32      $1


lshift:
.L4249:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17858 <- 0[L]
	push.64*    %r17858
	push.32     $1
	call.32     %r17859 <- barg
	store.32    %r17859 -> 0[b]
	load.64*    %r17860 <- 0[L]
	push.64*    %r17860
	push.32     $2
	call.32     %r17861 <- barg
	and.32      %r17862 <- %r17861, $31
	store.32    %r17862 -> 0[n]
	load.64*    %r17863 <- 0[L]
	load.32     %r17864 <- 0[b]
	load.32     %r17865 <- 0[n]
	shl.32      %r17866 <- %r17864, %r17865
	cast.32     %r17867 <- (32) %r17866
	fpcast.f64  %r17868 <- (32) %r17867
	push.64*    %r17863
	push.f64    %r17868
	call        lua_pushnumber
	phisrc.32   %phi849(return) <- $1
	br          .L4250

.L4250:
	phi.32      %r17869 <- %phi849(return)
	ret.32      $1


rshift:
.L4251:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17870 <- 0[L]
	push.64*    %r17870
	push.32     $1
	call.32     %r17871 <- barg
	store.32    %r17871 -> 0[b]
	load.64*    %r17872 <- 0[L]
	push.64*    %r17872
	push.32     $2
	call.32     %r17873 <- barg
	and.32      %r17874 <- %r17873, $31
	store.32    %r17874 -> 0[n]
	load.64*    %r17875 <- 0[L]
	load.32     %r17876 <- 0[b]
	load.32     %r17877 <- 0[n]
	lsr.32      %r17878 <- %r17876, %r17877
	cast.32     %r17879 <- (32) %r17878
	fpcast.f64  %r17880 <- (32) %r17879
	push.64*    %r17875
	push.f64    %r17880
	call        lua_pushnumber
	phisrc.32   %phi850(return) <- $1
	br          .L4252

.L4252:
	phi.32      %r17881 <- %phi850(return)
	ret.32      $1


arshift:
.L4253:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17882 <- 0[L]
	push.64*    %r17882
	push.32     $1
	call.32     %r17883 <- barg
	store.32    %r17883 -> 0[b]
	load.64*    %r17884 <- 0[L]
	push.64*    %r17884
	push.32     $2
	call.32     %r17885 <- barg
	and.32      %r17886 <- %r17885, $31
	store.32    %r17886 -> 0[n]
	load.64*    %r17887 <- 0[L]
	load.32     %r17888 <- 0[b]
	cast.32     %r17889 <- (32) %r17888
	load.32     %r17890 <- 0[n]
	asr.32      %r17891 <- %r17889, %r17890
	scast.32    %r17892 <- (32) %r17891
	fpcast.f64  %r17893 <- (32) %r17892
	push.64*    %r17887
	push.f64    %r17893
	call        lua_pushnumber
	phisrc.32   %phi851(return) <- $1
	br          .L4254

.L4254:
	phi.32      %r17894 <- %phi851(return)
	ret.32      $1


rol:
.L4255:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17895 <- 0[L]
	push.64*    %r17895
	push.32     $1
	call.32     %r17896 <- barg
	store.32    %r17896 -> 0[b]
	load.64*    %r17897 <- 0[L]
	push.64*    %r17897
	push.32     $2
	call.32     %r17898 <- barg
	and.32      %r17899 <- %r17898, $31
	store.32    %r17899 -> 0[n]
	load.64*    %r17900 <- 0[L]
	load.32     %r17901 <- 0[b]
	load.32     %r17902 <- 0[n]
	shl.32      %r17903 <- %r17901, %r17902
	load.32     %r17904 <- 0[b]
	load.32     %r17905 <- 0[n]
	sub.32      %r17906 <- $32, %r17905
	lsr.32      %r17907 <- %r17904, %r17906
	or.32       %r17908 <- %r17903, %r17907
	cast.32     %r17909 <- (32) %r17908
	fpcast.f64  %r17910 <- (32) %r17909
	push.64*    %r17900
	push.f64    %r17910
	call        lua_pushnumber
	phisrc.32   %phi852(return) <- $1
	br          .L4256

.L4256:
	phi.32      %r17911 <- %phi852(return)
	ret.32      $1


ror:
.L4257:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17912 <- 0[L]
	push.64*    %r17912
	push.32     $1
	call.32     %r17913 <- barg
	store.32    %r17913 -> 0[b]
	load.64*    %r17914 <- 0[L]
	push.64*    %r17914
	push.32     $2
	call.32     %r17915 <- barg
	and.32      %r17916 <- %r17915, $31
	store.32    %r17916 -> 0[n]
	load.64*    %r17917 <- 0[L]
	load.32     %r17918 <- 0[b]
	load.32     %r17919 <- 0[n]
	lsr.32      %r17920 <- %r17918, %r17919
	load.32     %r17921 <- 0[b]
	load.32     %r17922 <- 0[n]
	sub.32      %r17923 <- $32, %r17922
	shl.32      %r17924 <- %r17921, %r17923
	or.32       %r17925 <- %r17920, %r17924
	cast.32     %r17926 <- (32) %r17925
	fpcast.f64  %r17927 <- (32) %r17926
	push.64*    %r17917
	push.f64    %r17927
	call        lua_pushnumber
	phisrc.32   %phi853(return) <- $1
	br          .L4258

.L4258:
	phi.32      %r17928 <- %phi853(return)
	ret.32      $1


bswap:
.L4259:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17929 <- 0[L]
	push.64*    %r17929
	push.32     $1
	call.32     %r17930 <- barg
	store.32    %r17930 -> 0[b]
	load.32     %r17931 <- 0[b]
	lsr.32      %r17932 <- %r17931, $24
	load.32     %r17933 <- 0[b]
	lsr.32      %r17934 <- %r17933, $8
	and.32      %r17935 <- %r17934, $0xff00
	or.32       %r17936 <- %r17932, %r17935
	load.32     %r17937 <- 0[b]
	and.32      %r17938 <- %r17937, $0xff00
	shl.32      %r17939 <- %r17938, $8
	or.32       %r17940 <- %r17936, %r17939
	load.32     %r17941 <- 0[b]
	shl.32      %r17942 <- %r17941, $24
	or.32       %r17943 <- %r17940, %r17942
	store.32    %r17943 -> 0[b]
	load.64*    %r17944 <- 0[L]
	load.32     %r17945 <- 0[b]
	cast.32     %r17946 <- (32) %r17945
	fpcast.f64  %r17947 <- (32) %r17946
	push.64*    %r17944
	push.f64    %r17947
	call        lua_pushnumber
	phisrc.32   %phi854(return) <- $1
	br          .L4260

.L4260:
	phi.32      %r17948 <- %phi854(return)
	ret.32      $1


tohex:
.L4261:
	<entry-point>
	store.64*   %arg1 -> 0[L]
	load.64*    %r17949 <- 0[L]
	push.64*    %r17949
	push.32     $1
	call.32     %r17950 <- barg
	store.32    %r17950 -> 0[b]
	load.64*    %r17951 <- 0[L]
	push.64*    %r17951
	push.32     $2
	call.32     %r17952 <- lua_type
	seteq.32    %r17953 <- %r17952, $0xffffffff
	br          %r17953, .L4262, .L4263

.L4262:
	phisrc.32   %phi855 <- $8
	br          .L4264

.L4263:
	load.64*    %r17954 <- 0[L]
	push.64*    %r17954
	push.32     $2
	call.32     %r17955 <- barg
	cast.32     %r17956 <- (32) %r17955
	phisrc.32   %phi856 <- %r17956
	br          .L4264

.L4264:
	phi.32      %r17957 <- %phi855, %phi856
	store.32    %r17957 -> 0[n]
	symaddr.64* %r17958 <- <anon symbol:0x62d00151a5a0>
	store.64*   %r17958 -> 0[hexdigits]
	load.32     %r17959 <- 0[n]
	setlt.32    %r17960 <- %r17959, $0
	br          %r17960, .L4265, .L4266

.L4265:
	load.32     %r17961 <- 0[n]
	neg.32      %r17962 <- %r17961
	store.32    %r17962 -> 0[n]
	symaddr.64* %r17963 <- <anon symbol:0x62d00151a940>
	store.64*   %r17963 -> 0[hexdigits]
	br          .L4266

.L4266:
	load.32     %r17964 <- 0[n]
	setgt.32    %r17965 <- %r17964, $8
	br          %r17965, .L4267, .L4268

.L4267:
	store.32    $8 -> 0[n]
	br          .L4268

.L4268:
	load.32     %r17966 <- 0[n]
	scast.32    %r17967 <- (32) %r17966
	store.32    %r17967 -> 0[i]
	br          .L4272

.L4272:
	load.32     %r17968 <- 0[i]
	sub.32      %r17969 <- %r17968, $1
	store.32    %r17969 -> 0[i]
	setge.32    %r17970 <- %r17969, $0
	br          %r17970, .L4269, .L4271

.L4269:
	load.64*    %r17971 <- 0[hexdigits]
	load.32     %r17972 <- 0[b]
	and.32      %r17973 <- %r17972, $15
	cast.64     %r17974 <- (32) %r17973
	add.64*     %r17975 <- %r17971, %r17974
	load.8      %r17976 <- 0[%r17975]
	scast.8     %r17977 <- (8) %r17976
	symaddr.64* %r17978 <- buf
	load.32     %r17979 <- 0[i]
	scast.64    %r17980 <- (32) %r17979
	add.64*     %r17981 <- %r17978, %r17980
	store.8     %r17977 -> 0[%r17981]
	load.32     %r17982 <- 0[b]
	cast.32     %r17983 <- (32) %r17982
	lsr.32      %r17984 <- %r17983, $4
	cast.32     %r17985 <- (32) %r17984
	store.32    %r17985 -> 0[b]
	br          .L4270

.L4270:
	br          .L4272

.L4271:
	load.64*    %r17986 <- 0[L]
	symaddr.64* %r17987 <- buf
	load.32     %r17988 <- 0[n]
	scast.64    %r17989 <- (32) %r17988
	push.64*    %r17986
	push.64*    %r17987
	push.64     %r17989
	call        lua_pushlstring
	phisrc.32   %phi857(return) <- $1
	br          .L4273

.L4273:
	phi.32      %r17990 <- %phi857(return)
	ret.32      $1


init_globals:
.L4274:
	<entry-point>
	store.64*   $0 -> 0[luaO_nilobject_]
	store.32    $0 -> 8[luaO_nilobject_]
	store.32    $0 -> 0[i]
	symaddr.64* %r17991 <- log_2
	load.32     %r17992 <- 0[i]
	add.32      %r17993 <- %r17992, $1
	store.32    %r17993 -> 0[i]
	scast.64    %r17994 <- (32) %r17992
	add.64*     %r17995 <- %r17991, %r17994
	store.8     $0 -> 0[%r17995]
	symaddr.64* %r17996 <- log_2
	load.32     %r17997 <- 0[i]
	add.32      %r17998 <- %r17997, $1
	store.32    %r17998 -> 0[i]
	scast.64    %r17999 <- (32) %r17997
	add.64*     %r18000 <- %r17996, %r17999
	store.8     $1 -> 0[%r18000]
	symaddr.64* %r18001 <- log_2
	load.32     %r18002 <- 0[i]
	add.32      %r18003 <- %r18002, $1
	store.32    %r18003 -> 0[i]
	scast.64    %r18004 <- (32) %r18002
	add.64*     %r18005 <- %r18001, %r18004
	store.8     $2 -> 0[%r18005]
	symaddr.64* %r18006 <- log_2
	load.32     %r18007 <- 0[i]
	add.32      %r18008 <- %r18007, $1
	store.32    %r18008 -> 0[i]
	scast.64    %r18009 <- (32) %r18007
	add.64*     %r18010 <- %r18006, %r18009
	store.8     $2 -> 0[%r18010]
	symaddr.64* %r18011 <- log_2
	load.32     %r18012 <- 0[i]
	add.32      %r18013 <- %r18012, $1
	store.32    %r18013 -> 0[i]
	scast.64    %r18014 <- (32) %r18012
	add.64*     %r18015 <- %r18011, %r18014
	store.8     $3 -> 0[%r18015]
	symaddr.64* %r18016 <- log_2
	load.32     %r18017 <- 0[i]
	add.32      %r18018 <- %r18017, $1
	store.32    %r18018 -> 0[i]
	scast.64    %r18019 <- (32) %r18017
	add.64*     %r18020 <- %r18016, %r18019
	store.8     $3 -> 0[%r18020]
	symaddr.64* %r18021 <- log_2
	load.32     %r18022 <- 0[i]
	add.32      %r18023 <- %r18022, $1
	store.32    %r18023 -> 0[i]
	scast.64    %r18024 <- (32) %r18022
	add.64*     %r18025 <- %r18021, %r18024
	store.8     $3 -> 0[%r18025]
	symaddr.64* %r18026 <- log_2
	load.32     %r18027 <- 0[i]
	add.32      %r18028 <- %r18027, $1
	store.32    %r18028 -> 0[i]
	scast.64    %r18029 <- (32) %r18027
	add.64*     %r18030 <- %r18026, %r18029
	store.8     $3 -> 0[%r18030]
	symaddr.64* %r18031 <- log_2
	load.32     %r18032 <- 0[i]
	add.32      %r18033 <- %r18032, $1
	store.32    %r18033 -> 0[i]
	scast.64    %r18034 <- (32) %r18032
	add.64*     %r18035 <- %r18031, %r18034
	store.8     $4 -> 0[%r18035]
	symaddr.64* %r18036 <- log_2
	load.32     %r18037 <- 0[i]
	add.32      %r18038 <- %r18037, $1
	store.32    %r18038 -> 0[i]
	scast.64    %r18039 <- (32) %r18037
	add.64*     %r18040 <- %r18036, %r18039
	store.8     $4 -> 0[%r18040]
	symaddr.64* %r18041 <- log_2
	load.32     %r18042 <- 0[i]
	add.32      %r18043 <- %r18042, $1
	store.32    %r18043 -> 0[i]
	scast.64    %r18044 <- (32) %r18042
	add.64*     %r18045 <- %r18041, %r18044
	store.8     $4 -> 0[%r18045]
	symaddr.64* %r18046 <- log_2
	load.32     %r18047 <- 0[i]
	add.32      %r18048 <- %r18047, $1
	store.32    %r18048 -> 0[i]
	scast.64    %r18049 <- (32) %r18047
	add.64*     %r18050 <- %r18046, %r18049
	store.8     $4 -> 0[%r18050]
	symaddr.64* %r18051 <- log_2
	load.32     %r18052 <- 0[i]
	add.32      %r18053 <- %r18052, $1
	store.32    %r18053 -> 0[i]
	scast.64    %r18054 <- (32) %r18052
	add.64*     %r18055 <- %r18051, %r18054
	store.8     $4 -> 0[%r18055]
	symaddr.64* %r18056 <- log_2
	load.32     %r18057 <- 0[i]
	add.32      %r18058 <- %r18057, $1
	store.32    %r18058 -> 0[i]
	scast.64    %r18059 <- (32) %r18057
	add.64*     %r18060 <- %r18056, %r18059
	store.8     $4 -> 0[%r18060]
	symaddr.64* %r18061 <- log_2
	load.32     %r18062 <- 0[i]
	add.32      %r18063 <- %r18062, $1
	store.32    %r18063 -> 0[i]
	scast.64    %r18064 <- (32) %r18062
	add.64*     %r18065 <- %r18061, %r18064
	store.8     $4 -> 0[%r18065]
	symaddr.64* %r18066 <- log_2
	load.32     %r18067 <- 0[i]
	add.32      %r18068 <- %r18067, $1
	store.32    %r18068 -> 0[i]
	scast.64    %r18069 <- (32) %r18067
	add.64*     %r18070 <- %r18066, %r18069
	store.8     $4 -> 0[%r18070]
	symaddr.64* %r18071 <- log_2
	load.32     %r18072 <- 0[i]
	add.32      %r18073 <- %r18072, $1
	store.32    %r18073 -> 0[i]
	scast.64    %r18074 <- (32) %r18072
	add.64*     %r18075 <- %r18071, %r18074
	store.8     $5 -> 0[%r18075]
	symaddr.64* %r18076 <- log_2
	load.32     %r18077 <- 0[i]
	add.32      %r18078 <- %r18077, $1
	store.32    %r18078 -> 0[i]
	scast.64    %r18079 <- (32) %r18077
	add.64*     %r18080 <- %r18076, %r18079
	store.8     $5 -> 0[%r18080]
	symaddr.64* %r18081 <- log_2
	load.32     %r18082 <- 0[i]
	add.32      %r18083 <- %r18082, $1
	store.32    %r18083 -> 0[i]
	scast.64    %r18084 <- (32) %r18082
	add.64*     %r18085 <- %r18081, %r18084
	store.8     $5 -> 0[%r18085]
	symaddr.64* %r18086 <- log_2
	load.32     %r18087 <- 0[i]
	add.32      %r18088 <- %r18087, $1
	store.32    %r18088 -> 0[i]
	scast.64    %r18089 <- (32) %r18087
	add.64*     %r18090 <- %r18086, %r18089
	store.8     $5 -> 0[%r18090]
	symaddr.64* %r18091 <- log_2
	load.32     %r18092 <- 0[i]
	add.32      %r18093 <- %r18092, $1
	store.32    %r18093 -> 0[i]
	scast.64    %r18094 <- (32) %r18092
	add.64*     %r18095 <- %r18091, %r18094
	store.8     $5 -> 0[%r18095]
	symaddr.64* %r18096 <- log_2
	load.32     %r18097 <- 0[i]
	add.32      %r18098 <- %r18097, $1
	store.32    %r18098 -> 0[i]
	scast.64    %r18099 <- (32) %r18097
	add.64*     %r18100 <- %r18096, %r18099
	store.8     $5 -> 0[%r18100]
	symaddr.64* %r18101 <- log_2
	load.32     %r18102 <- 0[i]
	add.32      %r18103 <- %r18102, $1
	store.32    %r18103 -> 0[i]
	scast.64    %r18104 <- (32) %r18102
	add.64*     %r18105 <- %r18101, %r18104
	store.8     $5 -> 0[%r18105]
	symaddr.64* %r18106 <- log_2
	load.32     %r18107 <- 0[i]
	add.32      %r18108 <- %r18107, $1
	store.32    %r18108 -> 0[i]
	scast.64    %r18109 <- (32) %r18107
	add.64*     %r18110 <- %r18106, %r18109
	store.8     $5 -> 0[%r18110]
	symaddr.64* %r18111 <- log_2
	load.32     %r18112 <- 0[i]
	add.32      %r18113 <- %r18112, $1
	store.32    %r18113 -> 0[i]
	scast.64    %r18114 <- (32) %r18112
	add.64*     %r18115 <- %r18111, %r18114
	store.8     $5 -> 0[%r18115]
	symaddr.64* %r18116 <- log_2
	load.32     %r18117 <- 0[i]
	add.32      %r18118 <- %r18117, $1
	store.32    %r18118 -> 0[i]
	scast.64    %r18119 <- (32) %r18117
	add.64*     %r18120 <- %r18116, %r18119
	store.8     $5 -> 0[%r18120]
	symaddr.64* %r18121 <- log_2
	load.32     %r18122 <- 0[i]
	add.32      %r18123 <- %r18122, $1
	store.32    %r18123 -> 0[i]
	scast.64    %r18124 <- (32) %r18122
	add.64*     %r18125 <- %r18121, %r18124
	store.8     $5 -> 0[%r18125]
	symaddr.64* %r18126 <- log_2
	load.32     %r18127 <- 0[i]
	add.32      %r18128 <- %r18127, $1
	store.32    %r18128 -> 0[i]
	scast.64    %r18129 <- (32) %r18127
	add.64*     %r18130 <- %r18126, %r18129
	store.8     $5 -> 0[%r18130]
	symaddr.64* %r18131 <- log_2
	load.32     %r18132 <- 0[i]
	add.32      %r18133 <- %r18132, $1
	store.32    %r18133 -> 0[i]
	scast.64    %r18134 <- (32) %r18132
	add.64*     %r18135 <- %r18131, %r18134
	store.8     $5 -> 0[%r18135]
	symaddr.64* %r18136 <- log_2
	load.32     %r18137 <- 0[i]
	add.32      %r18138 <- %r18137, $1
	store.32    %r18138 -> 0[i]
	scast.64    %r18139 <- (32) %r18137
	add.64*     %r18140 <- %r18136, %r18139
	store.8     $5 -> 0[%r18140]
	symaddr.64* %r18141 <- log_2
	load.32     %r18142 <- 0[i]
	add.32      %r18143 <- %r18142, $1
	store.32    %r18143 -> 0[i]
	scast.64    %r18144 <- (32) %r18142
	add.64*     %r18145 <- %r18141, %r18144
	store.8     $5 -> 0[%r18145]
	symaddr.64* %r18146 <- log_2
	load.32     %r18147 <- 0[i]
	add.32      %r18148 <- %r18147, $1
	store.32    %r18148 -> 0[i]
	scast.64    %r18149 <- (32) %r18147
	add.64*     %r18150 <- %r18146, %r18149
	store.8     $5 -> 0[%r18150]
	symaddr.64* %r18151 <- log_2
	load.32     %r18152 <- 0[i]
	add.32      %r18153 <- %r18152, $1
	store.32    %r18153 -> 0[i]
	scast.64    %r18154 <- (32) %r18152
	add.64*     %r18155 <- %r18151, %r18154
	store.8     $6 -> 0[%r18155]
	symaddr.64* %r18156 <- log_2
	load.32     %r18157 <- 0[i]
	add.32      %r18158 <- %r18157, $1
	store.32    %r18158 -> 0[i]
	scast.64    %r18159 <- (32) %r18157
	add.64*     %r18160 <- %r18156, %r18159
	store.8     $6 -> 0[%r18160]
	symaddr.64* %r18161 <- log_2
	load.32     %r18162 <- 0[i]
	add.32      %r18163 <- %r18162, $1
	store.32    %r18163 -> 0[i]
	scast.64    %r18164 <- (32) %r18162
	add.64*     %r18165 <- %r18161, %r18164
	store.8     $6 -> 0[%r18165]
	symaddr.64* %r18166 <- log_2
	load.32     %r18167 <- 0[i]
	add.32      %r18168 <- %r18167, $1
	store.32    %r18168 -> 0[i]
	scast.64    %r18169 <- (32) %r18167
	add.64*     %r18170 <- %r18166, %r18169
	store.8     $6 -> 0[%r18170]
	symaddr.64* %r18171 <- log_2
	load.32     %r18172 <- 0[i]
	add.32      %r18173 <- %r18172, $1
	store.32    %r18173 -> 0[i]
	scast.64    %r18174 <- (32) %r18172
	add.64*     %r18175 <- %r18171, %r18174
	store.8     $6 -> 0[%r18175]
	symaddr.64* %r18176 <- log_2
	load.32     %r18177 <- 0[i]
	add.32      %r18178 <- %r18177, $1
	store.32    %r18178 -> 0[i]
	scast.64    %r18179 <- (32) %r18177
	add.64*     %r18180 <- %r18176, %r18179
	store.8     $6 -> 0[%r18180]
	symaddr.64* %r18181 <- log_2
	load.32     %r18182 <- 0[i]
	add.32      %r18183 <- %r18182, $1
	store.32    %r18183 -> 0[i]
	scast.64    %r18184 <- (32) %r18182
	add.64*     %r18185 <- %r18181, %r18184
	store.8     $6 -> 0[%r18185]
	symaddr.64* %r18186 <- log_2
	load.32     %r18187 <- 0[i]
	add.32      %r18188 <- %r18187, $1
	store.32    %r18188 -> 0[i]
	scast.64    %r18189 <- (32) %r18187
	add.64*     %r18190 <- %r18186, %r18189
	store.8     $6 -> 0[%r18190]
	symaddr.64* %r18191 <- log_2
	load.32     %r18192 <- 0[i]
	add.32      %r18193 <- %r18192, $1
	store.32    %r18193 -> 0[i]
	scast.64    %r18194 <- (32) %r18192
	add.64*     %r18195 <- %r18191, %r18194
	store.8     $6 -> 0[%r18195]
	symaddr.64* %r18196 <- log_2
	load.32     %r18197 <- 0[i]
	add.32      %r18198 <- %r18197, $1
	store.32    %r18198 -> 0[i]
	scast.64    %r18199 <- (32) %r18197
	add.64*     %r18200 <- %r18196, %r18199
	store.8     $6 -> 0[%r18200]
	symaddr.64* %r18201 <- log_2
	load.32     %r18202 <- 0[i]
	add.32      %r18203 <- %r18202, $1
	store.32    %r18203 -> 0[i]
	scast.64    %r18204 <- (32) %r18202
	add.64*     %r18205 <- %r18201, %r18204
	store.8     $6 -> 0[%r18205]
	symaddr.64* %r18206 <- log_2
	load.32     %r18207 <- 0[i]
	add.32      %r18208 <- %r18207, $1
	store.32    %r18208 -> 0[i]
	scast.64    %r18209 <- (32) %r18207
	add.64*     %r18210 <- %r18206, %r18209
	store.8     $6 -> 0[%r18210]
	symaddr.64* %r18211 <- log_2
	load.32     %r18212 <- 0[i]
	add.32      %r18213 <- %r18212, $1
	store.32    %r18213 -> 0[i]
	scast.64    %r18214 <- (32) %r18212
	add.64*     %r18215 <- %r18211, %r18214
	store.8     $6 -> 0[%r18215]
	symaddr.64* %r18216 <- log_2
	load.32     %r18217 <- 0[i]
	add.32      %r18218 <- %r18217, $1
	store.32    %r18218 -> 0[i]
	scast.64    %r18219 <- (32) %r18217
	add.64*     %r18220 <- %r18216, %r18219
	store.8     $6 -> 0[%r18220]
	symaddr.64* %r18221 <- log_2
	load.32     %r18222 <- 0[i]
	add.32      %r18223 <- %r18222, $1
	store.32    %r18223 -> 0[i]
	scast.64    %r18224 <- (32) %r18222
	add.64*     %r18225 <- %r18221, %r18224
	store.8     $6 -> 0[%r18225]
	symaddr.64* %r18226 <- log_2
	load.32     %r18227 <- 0[i]
	add.32      %r18228 <- %r18227, $1
	store.32    %r18228 -> 0[i]
	scast.64    %r18229 <- (32) %r18227
	add.64*     %r18230 <- %r18226, %r18229
	store.8     $6 -> 0[%r18230]
	symaddr.64* %r18231 <- log_2
	load.32     %r18232 <- 0[i]
	add.32      %r18233 <- %r18232, $1
	store.32    %r18233 -> 0[i]
	scast.64    %r18234 <- (32) %r18232
	add.64*     %r18235 <- %r18231, %r18234
	store.8     $6 -> 0[%r18235]
	symaddr.64* %r18236 <- log_2
	load.32     %r18237 <- 0[i]
	add.32      %r18238 <- %r18237, $1
	store.32    %r18238 -> 0[i]
	scast.64    %r18239 <- (32) %r18237
	add.64*     %r18240 <- %r18236, %r18239
	store.8     $6 -> 0[%r18240]
	symaddr.64* %r18241 <- log_2
	load.32     %r18242 <- 0[i]
	add.32      %r18243 <- %r18242, $1
	store.32    %r18243 -> 0[i]
	scast.64    %r18244 <- (32) %r18242
	add.64*     %r18245 <- %r18241, %r18244
	store.8     $6 -> 0[%r18245]
	symaddr.64* %r18246 <- log_2
	load.32     %r18247 <- 0[i]
	add.32      %r18248 <- %r18247, $1
	store.32    %r18248 -> 0[i]
	scast.64    %r18249 <- (32) %r18247
	add.64*     %r18250 <- %r18246, %r18249
	store.8     $6 -> 0[%r18250]
	symaddr.64* %r18251 <- log_2
	load.32     %r18252 <- 0[i]
	add.32      %r18253 <- %r18252, $1
	store.32    %r18253 -> 0[i]
	scast.64    %r18254 <- (32) %r18252
	add.64*     %r18255 <- %r18251, %r18254
	store.8     $6 -> 0[%r18255]
	symaddr.64* %r18256 <- log_2
	load.32     %r18257 <- 0[i]
	add.32      %r18258 <- %r18257, $1
	store.32    %r18258 -> 0[i]
	scast.64    %r18259 <- (32) %r18257
	add.64*     %r18260 <- %r18256, %r18259
	store.8     $6 -> 0[%r18260]
	symaddr.64* %r18261 <- log_2
	load.32     %r18262 <- 0[i]
	add.32      %r18263 <- %r18262, $1
	store.32    %r18263 -> 0[i]
	scast.64    %r18264 <- (32) %r18262
	add.64*     %r18265 <- %r18261, %r18264
	store.8     $6 -> 0[%r18265]
	symaddr.64* %r18266 <- log_2
	load.32     %r18267 <- 0[i]
	add.32      %r18268 <- %r18267, $1
	store.32    %r18268 -> 0[i]
	scast.64    %r18269 <- (32) %r18267
	add.64*     %r18270 <- %r18266, %r18269
	store.8     $6 -> 0[%r18270]
	symaddr.64* %r18271 <- log_2
	load.32     %r18272 <- 0[i]
	add.32      %r18273 <- %r18272, $1
	store.32    %r18273 -> 0[i]
	scast.64    %r18274 <- (32) %r18272
	add.64*     %r18275 <- %r18271, %r18274
	store.8     $6 -> 0[%r18275]
	symaddr.64* %r18276 <- log_2
	load.32     %r18277 <- 0[i]
	add.32      %r18278 <- %r18277, $1
	store.32    %r18278 -> 0[i]
	scast.64    %r18279 <- (32) %r18277
	add.64*     %r18280 <- %r18276, %r18279
	store.8     $6 -> 0[%r18280]
	symaddr.64* %r18281 <- log_2
	load.32     %r18282 <- 0[i]
	add.32      %r18283 <- %r18282, $1
	store.32    %r18283 -> 0[i]
	scast.64    %r18284 <- (32) %r18282
	add.64*     %r18285 <- %r18281, %r18284
	store.8     $6 -> 0[%r18285]
	symaddr.64* %r18286 <- log_2
	load.32     %r18287 <- 0[i]
	add.32      %r18288 <- %r18287, $1
	store.32    %r18288 -> 0[i]
	scast.64    %r18289 <- (32) %r18287
	add.64*     %r18290 <- %r18286, %r18289
	store.8     $6 -> 0[%r18290]
	symaddr.64* %r18291 <- log_2
	load.32     %r18292 <- 0[i]
	add.32      %r18293 <- %r18292, $1
	store.32    %r18293 -> 0[i]
	scast.64    %r18294 <- (32) %r18292
	add.64*     %r18295 <- %r18291, %r18294
	store.8     $6 -> 0[%r18295]
	symaddr.64* %r18296 <- log_2
	load.32     %r18297 <- 0[i]
	add.32      %r18298 <- %r18297, $1
	store.32    %r18298 -> 0[i]
	scast.64    %r18299 <- (32) %r18297
	add.64*     %r18300 <- %r18296, %r18299
	store.8     $6 -> 0[%r18300]
	symaddr.64* %r18301 <- log_2
	load.32     %r18302 <- 0[i]
	add.32      %r18303 <- %r18302, $1
	store.32    %r18303 -> 0[i]
	scast.64    %r18304 <- (32) %r18302
	add.64*     %r18305 <- %r18301, %r18304
	store.8     $6 -> 0[%r18305]
	symaddr.64* %r18306 <- log_2
	load.32     %r18307 <- 0[i]
	add.32      %r18308 <- %r18307, $1
	store.32    %r18308 -> 0[i]
	scast.64    %r18309 <- (32) %r18307
	add.64*     %r18310 <- %r18306, %r18309
	store.8     $6 -> 0[%r18310]
	symaddr.64* %r18311 <- log_2
	load.32     %r18312 <- 0[i]
	add.32      %r18313 <- %r18312, $1
	store.32    %r18313 -> 0[i]
	scast.64    %r18314 <- (32) %r18312
	add.64*     %r18315 <- %r18311, %r18314
	store.8     $7 -> 0[%r18315]
	symaddr.64* %r18316 <- log_2
	load.32     %r18317 <- 0[i]
	add.32      %r18318 <- %r18317, $1
	store.32    %r18318 -> 0[i]
	scast.64    %r18319 <- (32) %r18317
	add.64*     %r18320 <- %r18316, %r18319
	store.8     $7 -> 0[%r18320]
	symaddr.64* %r18321 <- log_2
	load.32     %r18322 <- 0[i]
	add.32      %r18323 <- %r18322, $1
	store.32    %r18323 -> 0[i]
	scast.64    %r18324 <- (32) %r18322
	add.64*     %r18325 <- %r18321, %r18324
	store.8     $7 -> 0[%r18325]
	symaddr.64* %r18326 <- log_2
	load.32     %r18327 <- 0[i]
	add.32      %r18328 <- %r18327, $1
	store.32    %r18328 -> 0[i]
	scast.64    %r18329 <- (32) %r18327
	add.64*     %r18330 <- %r18326, %r18329
	store.8     $7 -> 0[%r18330]
	symaddr.64* %r18331 <- log_2
	load.32     %r18332 <- 0[i]
	add.32      %r18333 <- %r18332, $1
	store.32    %r18333 -> 0[i]
	scast.64    %r18334 <- (32) %r18332
	add.64*     %r18335 <- %r18331, %r18334
	store.8     $7 -> 0[%r18335]
	symaddr.64* %r18336 <- log_2
	load.32     %r18337 <- 0[i]
	add.32      %r18338 <- %r18337, $1
	store.32    %r18338 -> 0[i]
	scast.64    %r18339 <- (32) %r18337
	add.64*     %r18340 <- %r18336, %r18339
	store.8     $7 -> 0[%r18340]
	symaddr.64* %r18341 <- log_2
	load.32     %r18342 <- 0[i]
	add.32      %r18343 <- %r18342, $1
	store.32    %r18343 -> 0[i]
	scast.64    %r18344 <- (32) %r18342
	add.64*     %r18345 <- %r18341, %r18344
	store.8     $7 -> 0[%r18345]
	symaddr.64* %r18346 <- log_2
	load.32     %r18347 <- 0[i]
	add.32      %r18348 <- %r18347, $1
	store.32    %r18348 -> 0[i]
	scast.64    %r18349 <- (32) %r18347
	add.64*     %r18350 <- %r18346, %r18349
	store.8     $7 -> 0[%r18350]
	symaddr.64* %r18351 <- log_2
	load.32     %r18352 <- 0[i]
	add.32      %r18353 <- %r18352, $1
	store.32    %r18353 -> 0[i]
	scast.64    %r18354 <- (32) %r18352
	add.64*     %r18355 <- %r18351, %r18354
	store.8     $7 -> 0[%r18355]
	symaddr.64* %r18356 <- log_2
	load.32     %r18357 <- 0[i]
	add.32      %r18358 <- %r18357, $1
	store.32    %r18358 -> 0[i]
	scast.64    %r18359 <- (32) %r18357
	add.64*     %r18360 <- %r18356, %r18359
	store.8     $7 -> 0[%r18360]
	symaddr.64* %r18361 <- log_2
	load.32     %r18362 <- 0[i]
	add.32      %r18363 <- %r18362, $1
	store.32    %r18363 -> 0[i]
	scast.64    %r18364 <- (32) %r18362
	add.64*     %r18365 <- %r18361, %r18364
	store.8     $7 -> 0[%r18365]
	symaddr.64* %r18366 <- log_2
	load.32     %r18367 <- 0[i]
	add.32      %r18368 <- %r18367, $1
	store.32    %r18368 -> 0[i]
	scast.64    %r18369 <- (32) %r18367
	add.64*     %r18370 <- %r18366, %r18369
	store.8     $7 -> 0[%r18370]
	symaddr.64* %r18371 <- log_2
	load.32     %r18372 <- 0[i]
	add.32      %r18373 <- %r18372, $1
	store.32    %r18373 -> 0[i]
	scast.64    %r18374 <- (32) %r18372
	add.64*     %r18375 <- %r18371, %r18374
	store.8     $7 -> 0[%r18375]
	symaddr.64* %r18376 <- log_2
	load.32     %r18377 <- 0[i]
	add.32      %r18378 <- %r18377, $1
	store.32    %r18378 -> 0[i]
	scast.64    %r18379 <- (32) %r18377
	add.64*     %r18380 <- %r18376, %r18379
	store.8     $7 -> 0[%r18380]
	symaddr.64* %r18381 <- log_2
	load.32     %r18382 <- 0[i]
	add.32      %r18383 <- %r18382, $1
	store.32    %r18383 -> 0[i]
	scast.64    %r18384 <- (32) %r18382
	add.64*     %r18385 <- %r18381, %r18384
	store.8     $7 -> 0[%r18385]
	symaddr.64* %r18386 <- log_2
	load.32     %r18387 <- 0[i]
	add.32      %r18388 <- %r18387, $1
	store.32    %r18388 -> 0[i]
	scast.64    %r18389 <- (32) %r18387
	add.64*     %r18390 <- %r18386, %r18389
	store.8     $7 -> 0[%r18390]
	symaddr.64* %r18391 <- log_2
	load.32     %r18392 <- 0[i]
	add.32      %r18393 <- %r18392, $1
	store.32    %r18393 -> 0[i]
	scast.64    %r18394 <- (32) %r18392
	add.64*     %r18395 <- %r18391, %r18394
	store.8     $7 -> 0[%r18395]
	symaddr.64* %r18396 <- log_2
	load.32     %r18397 <- 0[i]
	add.32      %r18398 <- %r18397, $1
	store.32    %r18398 -> 0[i]
	scast.64    %r18399 <- (32) %r18397
	add.64*     %r18400 <- %r18396, %r18399
	store.8     $7 -> 0[%r18400]
	symaddr.64* %r18401 <- log_2
	load.32     %r18402 <- 0[i]
	add.32      %r18403 <- %r18402, $1
	store.32    %r18403 -> 0[i]
	scast.64    %r18404 <- (32) %r18402
	add.64*     %r18405 <- %r18401, %r18404
	store.8     $7 -> 0[%r18405]
	symaddr.64* %r18406 <- log_2
	load.32     %r18407 <- 0[i]
	add.32      %r18408 <- %r18407, $1
	store.32    %r18408 -> 0[i]
	scast.64    %r18409 <- (32) %r18407
	add.64*     %r18410 <- %r18406, %r18409
	store.8     $7 -> 0[%r18410]
	symaddr.64* %r18411 <- log_2
	load.32     %r18412 <- 0[i]
	add.32      %r18413 <- %r18412, $1
	store.32    %r18413 -> 0[i]
	scast.64    %r18414 <- (32) %r18412
	add.64*     %r18415 <- %r18411, %r18414
	store.8     $7 -> 0[%r18415]
	symaddr.64* %r18416 <- log_2
	load.32     %r18417 <- 0[i]
	add.32      %r18418 <- %r18417, $1
	store.32    %r18418 -> 0[i]
	scast.64    %r18419 <- (32) %r18417
	add.64*     %r18420 <- %r18416, %r18419
	store.8     $7 -> 0[%r18420]
	symaddr.64* %r18421 <- log_2
	load.32     %r18422 <- 0[i]
	add.32      %r18423 <- %r18422, $1
	store.32    %r18423 -> 0[i]
	scast.64    %r18424 <- (32) %r18422
	add.64*     %r18425 <- %r18421, %r18424
	store.8     $7 -> 0[%r18425]
	symaddr.64* %r18426 <- log_2
	load.32     %r18427 <- 0[i]
	add.32      %r18428 <- %r18427, $1
	store.32    %r18428 -> 0[i]
	scast.64    %r18429 <- (32) %r18427
	add.64*     %r18430 <- %r18426, %r18429
	store.8     $7 -> 0[%r18430]
	symaddr.64* %r18431 <- log_2
	load.32     %r18432 <- 0[i]
	add.32      %r18433 <- %r18432, $1
	store.32    %r18433 -> 0[i]
	scast.64    %r18434 <- (32) %r18432
	add.64*     %r18435 <- %r18431, %r18434
	store.8     $7 -> 0[%r18435]
	symaddr.64* %r18436 <- log_2
	load.32     %r18437 <- 0[i]
	add.32      %r18438 <- %r18437, $1
	store.32    %r18438 -> 0[i]
	scast.64    %r18439 <- (32) %r18437
	add.64*     %r18440 <- %r18436, %r18439
	store.8     $7 -> 0[%r18440]
	symaddr.64* %r18441 <- log_2
	load.32     %r18442 <- 0[i]
	add.32      %r18443 <- %r18442, $1
	store.32    %r18443 -> 0[i]
	scast.64    %r18444 <- (32) %r18442
	add.64*     %r18445 <- %r18441, %r18444
	store.8     $7 -> 0[%r18445]
	symaddr.64* %r18446 <- log_2
	load.32     %r18447 <- 0[i]
	add.32      %r18448 <- %r18447, $1
	store.32    %r18448 -> 0[i]
	scast.64    %r18449 <- (32) %r18447
	add.64*     %r18450 <- %r18446, %r18449
	store.8     $7 -> 0[%r18450]
	symaddr.64* %r18451 <- log_2
	load.32     %r18452 <- 0[i]
	add.32      %r18453 <- %r18452, $1
	store.32    %r18453 -> 0[i]
	scast.64    %r18454 <- (32) %r18452
	add.64*     %r18455 <- %r18451, %r18454
	store.8     $7 -> 0[%r18455]
	symaddr.64* %r18456 <- log_2
	load.32     %r18457 <- 0[i]
	add.32      %r18458 <- %r18457, $1
	store.32    %r18458 -> 0[i]
	scast.64    %r18459 <- (32) %r18457
	add.64*     %r18460 <- %r18456, %r18459
	store.8     $7 -> 0[%r18460]
	symaddr.64* %r18461 <- log_2
	load.32     %r18462 <- 0[i]
	add.32      %r18463 <- %r18462, $1
	store.32    %r18463 -> 0[i]
	scast.64    %r18464 <- (32) %r18462
	add.64*     %r18465 <- %r18461, %r18464
	store.8     $7 -> 0[%r18465]
	symaddr.64* %r18466 <- log_2
	load.32     %r18467 <- 0[i]
	add.32      %r18468 <- %r18467, $1
	store.32    %r18468 -> 0[i]
	scast.64    %r18469 <- (32) %r18467
	add.64*     %r18470 <- %r18466, %r18469
	store.8     $7 -> 0[%r18470]
	symaddr.64* %r18471 <- log_2
	load.32     %r18472 <- 0[i]
	add.32      %r18473 <- %r18472, $1
	store.32    %r18473 -> 0[i]
	scast.64    %r18474 <- (32) %r18472
	add.64*     %r18475 <- %r18471, %r18474
	store.8     $7 -> 0[%r18475]
	symaddr.64* %r18476 <- log_2
	load.32     %r18477 <- 0[i]
	add.32      %r18478 <- %r18477, $1
	store.32    %r18478 -> 0[i]
	scast.64    %r18479 <- (32) %r18477
	add.64*     %r18480 <- %r18476, %r18479
	store.8     $7 -> 0[%r18480]
	symaddr.64* %r18481 <- log_2
	load.32     %r18482 <- 0[i]
	add.32      %r18483 <- %r18482, $1
	store.32    %r18483 -> 0[i]
	scast.64    %r18484 <- (32) %r18482
	add.64*     %r18485 <- %r18481, %r18484
	store.8     $7 -> 0[%r18485]
	symaddr.64* %r18486 <- log_2
	load.32     %r18487 <- 0[i]
	add.32      %r18488 <- %r18487, $1
	store.32    %r18488 -> 0[i]
	scast.64    %r18489 <- (32) %r18487
	add.64*     %r18490 <- %r18486, %r18489
	store.8     $7 -> 0[%r18490]
	symaddr.64* %r18491 <- log_2
	load.32     %r18492 <- 0[i]
	add.32      %r18493 <- %r18492, $1
	store.32    %r18493 -> 0[i]
	scast.64    %r18494 <- (32) %r18492
	add.64*     %r18495 <- %r18491, %r18494
	store.8     $7 -> 0[%r18495]
	symaddr.64* %r18496 <- log_2
	load.32     %r18497 <- 0[i]
	add.32      %r18498 <- %r18497, $1
	store.32    %r18498 -> 0[i]
	scast.64    %r18499 <- (32) %r18497
	add.64*     %r18500 <- %r18496, %r18499
	store.8     $7 -> 0[%r18500]
	symaddr.64* %r18501 <- log_2
	load.32     %r18502 <- 0[i]
	add.32      %r18503 <- %r18502, $1
	store.32    %r18503 -> 0[i]
	scast.64    %r18504 <- (32) %r18502
	add.64*     %r18505 <- %r18501, %r18504
	store.8     $7 -> 0[%r18505]
	symaddr.64* %r18506 <- log_2
	load.32     %r18507 <- 0[i]
	add.32      %r18508 <- %r18507, $1
	store.32    %r18508 -> 0[i]
	scast.64    %r18509 <- (32) %r18507
	add.64*     %r18510 <- %r18506, %r18509
	store.8     $7 -> 0[%r18510]
	symaddr.64* %r18511 <- log_2
	load.32     %r18512 <- 0[i]
	add.32      %r18513 <- %r18512, $1
	store.32    %r18513 -> 0[i]
	scast.64    %r18514 <- (32) %r18512
	add.64*     %r18515 <- %r18511, %r18514
	store.8     $7 -> 0[%r18515]
	symaddr.64* %r18516 <- log_2
	load.32     %r18517 <- 0[i]
	add.32      %r18518 <- %r18517, $1
	store.32    %r18518 -> 0[i]
	scast.64    %r18519 <- (32) %r18517
	add.64*     %r18520 <- %r18516, %r18519
	store.8     $7 -> 0[%r18520]
	symaddr.64* %r18521 <- log_2
	load.32     %r18522 <- 0[i]
	add.32      %r18523 <- %r18522, $1
	store.32    %r18523 -> 0[i]
	scast.64    %r18524 <- (32) %r18522
	add.64*     %r18525 <- %r18521, %r18524
	store.8     $7 -> 0[%r18525]
	symaddr.64* %r18526 <- log_2
	load.32     %r18527 <- 0[i]
	add.32      %r18528 <- %r18527, $1
	store.32    %r18528 -> 0[i]
	scast.64    %r18529 <- (32) %r18527
	add.64*     %r18530 <- %r18526, %r18529
	store.8     $7 -> 0[%r18530]
	symaddr.64* %r18531 <- log_2
	load.32     %r18532 <- 0[i]
	add.32      %r18533 <- %r18532, $1
	store.32    %r18533 -> 0[i]
	scast.64    %r18534 <- (32) %r18532
	add.64*     %r18535 <- %r18531, %r18534
	store.8     $7 -> 0[%r18535]
	symaddr.64* %r18536 <- log_2
	load.32     %r18537 <- 0[i]
	add.32      %r18538 <- %r18537, $1
	store.32    %r18538 -> 0[i]
	scast.64    %r18539 <- (32) %r18537
	add.64*     %r18540 <- %r18536, %r18539
	store.8     $7 -> 0[%r18540]
	symaddr.64* %r18541 <- log_2
	load.32     %r18542 <- 0[i]
	add.32      %r18543 <- %r18542, $1
	store.32    %r18543 -> 0[i]
	scast.64    %r18544 <- (32) %r18542
	add.64*     %r18545 <- %r18541, %r18544
	store.8     $7 -> 0[%r18545]
	symaddr.64* %r18546 <- log_2
	load.32     %r18547 <- 0[i]
	add.32      %r18548 <- %r18547, $1
	store.32    %r18548 -> 0[i]
	scast.64    %r18549 <- (32) %r18547
	add.64*     %r18550 <- %r18546, %r18549
	store.8     $7 -> 0[%r18550]
	symaddr.64* %r18551 <- log_2
	load.32     %r18552 <- 0[i]
	add.32      %r18553 <- %r18552, $1
	store.32    %r18553 -> 0[i]
	scast.64    %r18554 <- (32) %r18552
	add.64*     %r18555 <- %r18551, %r18554
	store.8     $7 -> 0[%r18555]
	symaddr.64* %r18556 <- log_2
	load.32     %r18557 <- 0[i]
	add.32      %r18558 <- %r18557, $1
	store.32    %r18558 -> 0[i]
	scast.64    %r18559 <- (32) %r18557
	add.64*     %r18560 <- %r18556, %r18559
	store.8     $7 -> 0[%r18560]
	symaddr.64* %r18561 <- log_2
	load.32     %r18562 <- 0[i]
	add.32      %r18563 <- %r18562, $1
	store.32    %r18563 -> 0[i]
	scast.64    %r18564 <- (32) %r18562
	add.64*     %r18565 <- %r18561, %r18564
	store.8     $7 -> 0[%r18565]
	symaddr.64* %r18566 <- log_2
	load.32     %r18567 <- 0[i]
	add.32      %r18568 <- %r18567, $1
	store.32    %r18568 -> 0[i]
	scast.64    %r18569 <- (32) %r18567
	add.64*     %r18570 <- %r18566, %r18569
	store.8     $7 -> 0[%r18570]
	symaddr.64* %r18571 <- log_2
	load.32     %r18572 <- 0[i]
	add.32      %r18573 <- %r18572, $1
	store.32    %r18573 -> 0[i]
	scast.64    %r18574 <- (32) %r18572
	add.64*     %r18575 <- %r18571, %r18574
	store.8     $7 -> 0[%r18575]
	symaddr.64* %r18576 <- log_2
	load.32     %r18577 <- 0[i]
	add.32      %r18578 <- %r18577, $1
	store.32    %r18578 -> 0[i]
	scast.64    %r18579 <- (32) %r18577
	add.64*     %r18580 <- %r18576, %r18579
	store.8     $7 -> 0[%r18580]
	symaddr.64* %r18581 <- log_2
	load.32     %r18582 <- 0[i]
	add.32      %r18583 <- %r18582, $1
	store.32    %r18583 -> 0[i]
	scast.64    %r18584 <- (32) %r18582
	add.64*     %r18585 <- %r18581, %r18584
	store.8     $7 -> 0[%r18585]
	symaddr.64* %r18586 <- log_2
	load.32     %r18587 <- 0[i]
	add.32      %r18588 <- %r18587, $1
	store.32    %r18588 -> 0[i]
	scast.64    %r18589 <- (32) %r18587
	add.64*     %r18590 <- %r18586, %r18589
	store.8     $7 -> 0[%r18590]
	symaddr.64* %r18591 <- log_2
	load.32     %r18592 <- 0[i]
	add.32      %r18593 <- %r18592, $1
	store.32    %r18593 -> 0[i]
	scast.64    %r18594 <- (32) %r18592
	add.64*     %r18595 <- %r18591, %r18594
	store.8     $7 -> 0[%r18595]
	symaddr.64* %r18596 <- log_2
	load.32     %r18597 <- 0[i]
	add.32      %r18598 <- %r18597, $1
	store.32    %r18598 -> 0[i]
	scast.64    %r18599 <- (32) %r18597
	add.64*     %r18600 <- %r18596, %r18599
	store.8     $7 -> 0[%r18600]
	symaddr.64* %r18601 <- log_2
	load.32     %r18602 <- 0[i]
	add.32      %r18603 <- %r18602, $1
	store.32    %r18603 -> 0[i]
	scast.64    %r18604 <- (32) %r18602
	add.64*     %r18605 <- %r18601, %r18604
	store.8     $7 -> 0[%r18605]
	symaddr.64* %r18606 <- log_2
	load.32     %r18607 <- 0[i]
	add.32      %r18608 <- %r18607, $1
	store.32    %r18608 -> 0[i]
	scast.64    %r18609 <- (32) %r18607
	add.64*     %r18610 <- %r18606, %r18609
	store.8     $7 -> 0[%r18610]
	symaddr.64* %r18611 <- log_2
	load.32     %r18612 <- 0[i]
	add.32      %r18613 <- %r18612, $1
	store.32    %r18613 -> 0[i]
	scast.64    %r18614 <- (32) %r18612
	add.64*     %r18615 <- %r18611, %r18614
	store.8     $7 -> 0[%r18615]
	symaddr.64* %r18616 <- log_2
	load.32     %r18617 <- 0[i]
	add.32      %r18618 <- %r18617, $1
	store.32    %r18618 -> 0[i]
	scast.64    %r18619 <- (32) %r18617
	add.64*     %r18620 <- %r18616, %r18619
	store.8     $7 -> 0[%r18620]
	symaddr.64* %r18621 <- log_2
	load.32     %r18622 <- 0[i]
	add.32      %r18623 <- %r18622, $1
	store.32    %r18623 -> 0[i]
	scast.64    %r18624 <- (32) %r18622
	add.64*     %r18625 <- %r18621, %r18624
	store.8     $7 -> 0[%r18625]
	symaddr.64* %r18626 <- log_2
	load.32     %r18627 <- 0[i]
	add.32      %r18628 <- %r18627, $1
	store.32    %r18628 -> 0[i]
	scast.64    %r18629 <- (32) %r18627
	add.64*     %r18630 <- %r18626, %r18629
	store.8     $7 -> 0[%r18630]
	symaddr.64* %r18631 <- log_2
	load.32     %r18632 <- 0[i]
	add.32      %r18633 <- %r18632, $1
	store.32    %r18633 -> 0[i]
	scast.64    %r18634 <- (32) %r18632
	add.64*     %r18635 <- %r18631, %r18634
	store.8     $8 -> 0[%r18635]
	symaddr.64* %r18636 <- log_2
	load.32     %r18637 <- 0[i]
	add.32      %r18638 <- %r18637, $1
	store.32    %r18638 -> 0[i]
	scast.64    %r18639 <- (32) %r18637
	add.64*     %r18640 <- %r18636, %r18639
	store.8     $8 -> 0[%r18640]
	symaddr.64* %r18641 <- log_2
	load.32     %r18642 <- 0[i]
	add.32      %r18643 <- %r18642, $1
	store.32    %r18643 -> 0[i]
	scast.64    %r18644 <- (32) %r18642
	add.64*     %r18645 <- %r18641, %r18644
	store.8     $8 -> 0[%r18645]
	symaddr.64* %r18646 <- log_2
	load.32     %r18647 <- 0[i]
	add.32      %r18648 <- %r18647, $1
	store.32    %r18648 -> 0[i]
	scast.64    %r18649 <- (32) %r18647
	add.64*     %r18650 <- %r18646, %r18649
	store.8     $8 -> 0[%r18650]
	symaddr.64* %r18651 <- log_2
	load.32     %r18652 <- 0[i]
	add.32      %r18653 <- %r18652, $1
	store.32    %r18653 -> 0[i]
	scast.64    %r18654 <- (32) %r18652
	add.64*     %r18655 <- %r18651, %r18654
	store.8     $8 -> 0[%r18655]
	symaddr.64* %r18656 <- log_2
	load.32     %r18657 <- 0[i]
	add.32      %r18658 <- %r18657, $1
	store.32    %r18658 -> 0[i]
	scast.64    %r18659 <- (32) %r18657
	add.64*     %r18660 <- %r18656, %r18659
	store.8     $8 -> 0[%r18660]
	symaddr.64* %r18661 <- log_2
	load.32     %r18662 <- 0[i]
	add.32      %r18663 <- %r18662, $1
	store.32    %r18663 -> 0[i]
	scast.64    %r18664 <- (32) %r18662
	add.64*     %r18665 <- %r18661, %r18664
	store.8     $8 -> 0[%r18665]
	symaddr.64* %r18666 <- log_2
	load.32     %r18667 <- 0[i]
	add.32      %r18668 <- %r18667, $1
	store.32    %r18668 -> 0[i]
	scast.64    %r18669 <- (32) %r18667
	add.64*     %r18670 <- %r18666, %r18669
	store.8     $8 -> 0[%r18670]
	symaddr.64* %r18671 <- log_2
	load.32     %r18672 <- 0[i]
	add.32      %r18673 <- %r18672, $1
	store.32    %r18673 -> 0[i]
	scast.64    %r18674 <- (32) %r18672
	add.64*     %r18675 <- %r18671, %r18674
	store.8     $8 -> 0[%r18675]
	symaddr.64* %r18676 <- log_2
	load.32     %r18677 <- 0[i]
	add.32      %r18678 <- %r18677, $1
	store.32    %r18678 -> 0[i]
	scast.64    %r18679 <- (32) %r18677
	add.64*     %r18680 <- %r18676, %r18679
	store.8     $8 -> 0[%r18680]
	symaddr.64* %r18681 <- log_2
	load.32     %r18682 <- 0[i]
	add.32      %r18683 <- %r18682, $1
	store.32    %r18683 -> 0[i]
	scast.64    %r18684 <- (32) %r18682
	add.64*     %r18685 <- %r18681, %r18684
	store.8     $8 -> 0[%r18685]
	symaddr.64* %r18686 <- log_2
	load.32     %r18687 <- 0[i]
	add.32      %r18688 <- %r18687, $1
	store.32    %r18688 -> 0[i]
	scast.64    %r18689 <- (32) %r18687
	add.64*     %r18690 <- %r18686, %r18689
	store.8     $8 -> 0[%r18690]
	symaddr.64* %r18691 <- log_2
	load.32     %r18692 <- 0[i]
	add.32      %r18693 <- %r18692, $1
	store.32    %r18693 -> 0[i]
	scast.64    %r18694 <- (32) %r18692
	add.64*     %r18695 <- %r18691, %r18694
	store.8     $8 -> 0[%r18695]
	symaddr.64* %r18696 <- log_2
	load.32     %r18697 <- 0[i]
	add.32      %r18698 <- %r18697, $1
	store.32    %r18698 -> 0[i]
	scast.64    %r18699 <- (32) %r18697
	add.64*     %r18700 <- %r18696, %r18699
	store.8     $8 -> 0[%r18700]
	symaddr.64* %r18701 <- log_2
	load.32     %r18702 <- 0[i]
	add.32      %r18703 <- %r18702, $1
	store.32    %r18703 -> 0[i]
	scast.64    %r18704 <- (32) %r18702
	add.64*     %r18705 <- %r18701, %r18704
	store.8     $8 -> 0[%r18705]
	symaddr.64* %r18706 <- log_2
	load.32     %r18707 <- 0[i]
	add.32      %r18708 <- %r18707, $1
	store.32    %r18708 -> 0[i]
	scast.64    %r18709 <- (32) %r18707
	add.64*     %r18710 <- %r18706, %r18709
	store.8     $8 -> 0[%r18710]
	symaddr.64* %r18711 <- log_2
	load.32     %r18712 <- 0[i]
	add.32      %r18713 <- %r18712, $1
	store.32    %r18713 -> 0[i]
	scast.64    %r18714 <- (32) %r18712
	add.64*     %r18715 <- %r18711, %r18714
	store.8     $8 -> 0[%r18715]
	symaddr.64* %r18716 <- log_2
	load.32     %r18717 <- 0[i]
	add.32      %r18718 <- %r18717, $1
	store.32    %r18718 -> 0[i]
	scast.64    %r18719 <- (32) %r18717
	add.64*     %r18720 <- %r18716, %r18719
	store.8     $8 -> 0[%r18720]
	symaddr.64* %r18721 <- log_2
	load.32     %r18722 <- 0[i]
	add.32      %r18723 <- %r18722, $1
	store.32    %r18723 -> 0[i]
	scast.64    %r18724 <- (32) %r18722
	add.64*     %r18725 <- %r18721, %r18724
	store.8     $8 -> 0[%r18725]
	symaddr.64* %r18726 <- log_2
	load.32     %r18727 <- 0[i]
	add.32      %r18728 <- %r18727, $1
	store.32    %r18728 -> 0[i]
	scast.64    %r18729 <- (32) %r18727
	add.64*     %r18730 <- %r18726, %r18729
	store.8     $8 -> 0[%r18730]
	symaddr.64* %r18731 <- log_2
	load.32     %r18732 <- 0[i]
	add.32      %r18733 <- %r18732, $1
	store.32    %r18733 -> 0[i]
	scast.64    %r18734 <- (32) %r18732
	add.64*     %r18735 <- %r18731, %r18734
	store.8     $8 -> 0[%r18735]
	symaddr.64* %r18736 <- log_2
	load.32     %r18737 <- 0[i]
	add.32      %r18738 <- %r18737, $1
	store.32    %r18738 -> 0[i]
	scast.64    %r18739 <- (32) %r18737
	add.64*     %r18740 <- %r18736, %r18739
	store.8     $8 -> 0[%r18740]
	symaddr.64* %r18741 <- log_2
	load.32     %r18742 <- 0[i]
	add.32      %r18743 <- %r18742, $1
	store.32    %r18743 -> 0[i]
	scast.64    %r18744 <- (32) %r18742
	add.64*     %r18745 <- %r18741, %r18744
	store.8     $8 -> 0[%r18745]
	symaddr.64* %r18746 <- log_2
	load.32     %r18747 <- 0[i]
	add.32      %r18748 <- %r18747, $1
	store.32    %r18748 -> 0[i]
	scast.64    %r18749 <- (32) %r18747
	add.64*     %r18750 <- %r18746, %r18749
	store.8     $8 -> 0[%r18750]
	symaddr.64* %r18751 <- log_2
	load.32     %r18752 <- 0[i]
	add.32      %r18753 <- %r18752, $1
	store.32    %r18753 -> 0[i]
	scast.64    %r18754 <- (32) %r18752
	add.64*     %r18755 <- %r18751, %r18754
	store.8     $8 -> 0[%r18755]
	symaddr.64* %r18756 <- log_2
	load.32     %r18757 <- 0[i]
	add.32      %r18758 <- %r18757, $1
	store.32    %r18758 -> 0[i]
	scast.64    %r18759 <- (32) %r18757
	add.64*     %r18760 <- %r18756, %r18759
	store.8     $8 -> 0[%r18760]
	symaddr.64* %r18761 <- log_2
	load.32     %r18762 <- 0[i]
	add.32      %r18763 <- %r18762, $1
	store.32    %r18763 -> 0[i]
	scast.64    %r18764 <- (32) %r18762
	add.64*     %r18765 <- %r18761, %r18764
	store.8     $8 -> 0[%r18765]
	symaddr.64* %r18766 <- log_2
	load.32     %r18767 <- 0[i]
	add.32      %r18768 <- %r18767, $1
	store.32    %r18768 -> 0[i]
	scast.64    %r18769 <- (32) %r18767
	add.64*     %r18770 <- %r18766, %r18769
	store.8     $8 -> 0[%r18770]
	symaddr.64* %r18771 <- log_2
	load.32     %r18772 <- 0[i]
	add.32      %r18773 <- %r18772, $1
	store.32    %r18773 -> 0[i]
	scast.64    %r18774 <- (32) %r18772
	add.64*     %r18775 <- %r18771, %r18774
	store.8     $8 -> 0[%r18775]
	symaddr.64* %r18776 <- log_2
	load.32     %r18777 <- 0[i]
	add.32      %r18778 <- %r18777, $1
	store.32    %r18778 -> 0[i]
	scast.64    %r18779 <- (32) %r18777
	add.64*     %r18780 <- %r18776, %r18779
	store.8     $8 -> 0[%r18780]
	symaddr.64* %r18781 <- log_2
	load.32     %r18782 <- 0[i]
	add.32      %r18783 <- %r18782, $1
	store.32    %r18783 -> 0[i]
	scast.64    %r18784 <- (32) %r18782
	add.64*     %r18785 <- %r18781, %r18784
	store.8     $8 -> 0[%r18785]
	symaddr.64* %r18786 <- log_2
	load.32     %r18787 <- 0[i]
	add.32      %r18788 <- %r18787, $1
	store.32    %r18788 -> 0[i]
	scast.64    %r18789 <- (32) %r18787
	add.64*     %r18790 <- %r18786, %r18789
	store.8     $8 -> 0[%r18790]
	symaddr.64* %r18791 <- log_2
	load.32     %r18792 <- 0[i]
	add.32      %r18793 <- %r18792, $1
	store.32    %r18793 -> 0[i]
	scast.64    %r18794 <- (32) %r18792
	add.64*     %r18795 <- %r18791, %r18794
	store.8     $8 -> 0[%r18795]
	symaddr.64* %r18796 <- log_2
	load.32     %r18797 <- 0[i]
	add.32      %r18798 <- %r18797, $1
	store.32    %r18798 -> 0[i]
	scast.64    %r18799 <- (32) %r18797
	add.64*     %r18800 <- %r18796, %r18799
	store.8     $8 -> 0[%r18800]
	symaddr.64* %r18801 <- log_2
	load.32     %r18802 <- 0[i]
	add.32      %r18803 <- %r18802, $1
	store.32    %r18803 -> 0[i]
	scast.64    %r18804 <- (32) %r18802
	add.64*     %r18805 <- %r18801, %r18804
	store.8     $8 -> 0[%r18805]
	symaddr.64* %r18806 <- log_2
	load.32     %r18807 <- 0[i]
	add.32      %r18808 <- %r18807, $1
	store.32    %r18808 -> 0[i]
	scast.64    %r18809 <- (32) %r18807
	add.64*     %r18810 <- %r18806, %r18809
	store.8     $8 -> 0[%r18810]
	symaddr.64* %r18811 <- log_2
	load.32     %r18812 <- 0[i]
	add.32      %r18813 <- %r18812, $1
	store.32    %r18813 -> 0[i]
	scast.64    %r18814 <- (32) %r18812
	add.64*     %r18815 <- %r18811, %r18814
	store.8     $8 -> 0[%r18815]
	symaddr.64* %r18816 <- log_2
	load.32     %r18817 <- 0[i]
	add.32      %r18818 <- %r18817, $1
	store.32    %r18818 -> 0[i]
	scast.64    %r18819 <- (32) %r18817
	add.64*     %r18820 <- %r18816, %r18819
	store.8     $8 -> 0[%r18820]
	symaddr.64* %r18821 <- log_2
	load.32     %r18822 <- 0[i]
	add.32      %r18823 <- %r18822, $1
	store.32    %r18823 -> 0[i]
	scast.64    %r18824 <- (32) %r18822
	add.64*     %r18825 <- %r18821, %r18824
	store.8     $8 -> 0[%r18825]
	symaddr.64* %r18826 <- log_2
	load.32     %r18827 <- 0[i]
	add.32      %r18828 <- %r18827, $1
	store.32    %r18828 -> 0[i]
	scast.64    %r18829 <- (32) %r18827
	add.64*     %r18830 <- %r18826, %r18829
	store.8     $8 -> 0[%r18830]
	symaddr.64* %r18831 <- log_2
	load.32     %r18832 <- 0[i]
	add.32      %r18833 <- %r18832, $1
	store.32    %r18833 -> 0[i]
	scast.64    %r18834 <- (32) %r18832
	add.64*     %r18835 <- %r18831, %r18834
	store.8     $8 -> 0[%r18835]
	symaddr.64* %r18836 <- log_2
	load.32     %r18837 <- 0[i]
	add.32      %r18838 <- %r18837, $1
	store.32    %r18838 -> 0[i]
	scast.64    %r18839 <- (32) %r18837
	add.64*     %r18840 <- %r18836, %r18839
	store.8     $8 -> 0[%r18840]
	symaddr.64* %r18841 <- log_2
	load.32     %r18842 <- 0[i]
	add.32      %r18843 <- %r18842, $1
	store.32    %r18843 -> 0[i]
	scast.64    %r18844 <- (32) %r18842
	add.64*     %r18845 <- %r18841, %r18844
	store.8     $8 -> 0[%r18845]
	symaddr.64* %r18846 <- log_2
	load.32     %r18847 <- 0[i]
	add.32      %r18848 <- %r18847, $1
	store.32    %r18848 -> 0[i]
	scast.64    %r18849 <- (32) %r18847
	add.64*     %r18850 <- %r18846, %r18849
	store.8     $8 -> 0[%r18850]
	symaddr.64* %r18851 <- log_2
	load.32     %r18852 <- 0[i]
	add.32      %r18853 <- %r18852, $1
	store.32    %r18853 -> 0[i]
	scast.64    %r18854 <- (32) %r18852
	add.64*     %r18855 <- %r18851, %r18854
	store.8     $8 -> 0[%r18855]
	symaddr.64* %r18856 <- log_2
	load.32     %r18857 <- 0[i]
	add.32      %r18858 <- %r18857, $1
	store.32    %r18858 -> 0[i]
	scast.64    %r18859 <- (32) %r18857
	add.64*     %r18860 <- %r18856, %r18859
	store.8     $8 -> 0[%r18860]
	symaddr.64* %r18861 <- log_2
	load.32     %r18862 <- 0[i]
	add.32      %r18863 <- %r18862, $1
	store.32    %r18863 -> 0[i]
	scast.64    %r18864 <- (32) %r18862
	add.64*     %r18865 <- %r18861, %r18864
	store.8     $8 -> 0[%r18865]
	symaddr.64* %r18866 <- log_2
	load.32     %r18867 <- 0[i]
	add.32      %r18868 <- %r18867, $1
	store.32    %r18868 -> 0[i]
	scast.64    %r18869 <- (32) %r18867
	add.64*     %r18870 <- %r18866, %r18869
	store.8     $8 -> 0[%r18870]
	symaddr.64* %r18871 <- log_2
	load.32     %r18872 <- 0[i]
	add.32      %r18873 <- %r18872, $1
	store.32    %r18873 -> 0[i]
	scast.64    %r18874 <- (32) %r18872
	add.64*     %r18875 <- %r18871, %r18874
	store.8     $8 -> 0[%r18875]
	symaddr.64* %r18876 <- log_2
	load.32     %r18877 <- 0[i]
	add.32      %r18878 <- %r18877, $1
	store.32    %r18878 -> 0[i]
	scast.64    %r18879 <- (32) %r18877
	add.64*     %r18880 <- %r18876, %r18879
	store.8     $8 -> 0[%r18880]
	symaddr.64* %r18881 <- log_2
	load.32     %r18882 <- 0[i]
	add.32      %r18883 <- %r18882, $1
	store.32    %r18883 -> 0[i]
	scast.64    %r18884 <- (32) %r18882
	add.64*     %r18885 <- %r18881, %r18884
	store.8     $8 -> 0[%r18885]
	symaddr.64* %r18886 <- log_2
	load.32     %r18887 <- 0[i]
	add.32      %r18888 <- %r18887, $1
	store.32    %r18888 -> 0[i]
	scast.64    %r18889 <- (32) %r18887
	add.64*     %r18890 <- %r18886, %r18889
	store.8     $8 -> 0[%r18890]
	symaddr.64* %r18891 <- log_2
	load.32     %r18892 <- 0[i]
	add.32      %r18893 <- %r18892, $1
	store.32    %r18893 -> 0[i]
	scast.64    %r18894 <- (32) %r18892
	add.64*     %r18895 <- %r18891, %r18894
	store.8     $8 -> 0[%r18895]
	symaddr.64* %r18896 <- log_2
	load.32     %r18897 <- 0[i]
	add.32      %r18898 <- %r18897, $1
	store.32    %r18898 -> 0[i]
	scast.64    %r18899 <- (32) %r18897
	add.64*     %r18900 <- %r18896, %r18899
	store.8     $8 -> 0[%r18900]
	symaddr.64* %r18901 <- log_2
	load.32     %r18902 <- 0[i]
	add.32      %r18903 <- %r18902, $1
	store.32    %r18903 -> 0[i]
	scast.64    %r18904 <- (32) %r18902
	add.64*     %r18905 <- %r18901, %r18904
	store.8     $8 -> 0[%r18905]
	symaddr.64* %r18906 <- log_2
	load.32     %r18907 <- 0[i]
	add.32      %r18908 <- %r18907, $1
	store.32    %r18908 -> 0[i]
	scast.64    %r18909 <- (32) %r18907
	add.64*     %r18910 <- %r18906, %r18909
	store.8     $8 -> 0[%r18910]
	symaddr.64* %r18911 <- log_2
	load.32     %r18912 <- 0[i]
	add.32      %r18913 <- %r18912, $1
	store.32    %r18913 -> 0[i]
	scast.64    %r18914 <- (32) %r18912
	add.64*     %r18915 <- %r18911, %r18914
	store.8     $8 -> 0[%r18915]
	symaddr.64* %r18916 <- log_2
	load.32     %r18917 <- 0[i]
	add.32      %r18918 <- %r18917, $1
	store.32    %r18918 -> 0[i]
	scast.64    %r18919 <- (32) %r18917
	add.64*     %r18920 <- %r18916, %r18919
	store.8     $8 -> 0[%r18920]
	symaddr.64* %r18921 <- log_2
	load.32     %r18922 <- 0[i]
	add.32      %r18923 <- %r18922, $1
	store.32    %r18923 -> 0[i]
	scast.64    %r18924 <- (32) %r18922
	add.64*     %r18925 <- %r18921, %r18924
	store.8     $8 -> 0[%r18925]
	symaddr.64* %r18926 <- log_2
	load.32     %r18927 <- 0[i]
	add.32      %r18928 <- %r18927, $1
	store.32    %r18928 -> 0[i]
	scast.64    %r18929 <- (32) %r18927
	add.64*     %r18930 <- %r18926, %r18929
	store.8     $8 -> 0[%r18930]
	symaddr.64* %r18931 <- log_2
	load.32     %r18932 <- 0[i]
	add.32      %r18933 <- %r18932, $1
	store.32    %r18933 -> 0[i]
	scast.64    %r18934 <- (32) %r18932
	add.64*     %r18935 <- %r18931, %r18934
	store.8     $8 -> 0[%r18935]
	symaddr.64* %r18936 <- log_2
	load.32     %r18937 <- 0[i]
	add.32      %r18938 <- %r18937, $1
	store.32    %r18938 -> 0[i]
	scast.64    %r18939 <- (32) %r18937
	add.64*     %r18940 <- %r18936, %r18939
	store.8     $8 -> 0[%r18940]
	symaddr.64* %r18941 <- log_2
	load.32     %r18942 <- 0[i]
	add.32      %r18943 <- %r18942, $1
	store.32    %r18943 -> 0[i]
	scast.64    %r18944 <- (32) %r18942
	add.64*     %r18945 <- %r18941, %r18944
	store.8     $8 -> 0[%r18945]
	symaddr.64* %r18946 <- log_2
	load.32     %r18947 <- 0[i]
	add.32      %r18948 <- %r18947, $1
	store.32    %r18948 -> 0[i]
	scast.64    %r18949 <- (32) %r18947
	add.64*     %r18950 <- %r18946, %r18949
	store.8     $8 -> 0[%r18950]
	symaddr.64* %r18951 <- log_2
	load.32     %r18952 <- 0[i]
	add.32      %r18953 <- %r18952, $1
	store.32    %r18953 -> 0[i]
	scast.64    %r18954 <- (32) %r18952
	add.64*     %r18955 <- %r18951, %r18954
	store.8     $8 -> 0[%r18955]
	symaddr.64* %r18956 <- log_2
	load.32     %r18957 <- 0[i]
	add.32      %r18958 <- %r18957, $1
	store.32    %r18958 -> 0[i]
	scast.64    %r18959 <- (32) %r18957
	add.64*     %r18960 <- %r18956, %r18959
	store.8     $8 -> 0[%r18960]
	symaddr.64* %r18961 <- log_2
	load.32     %r18962 <- 0[i]
	add.32      %r18963 <- %r18962, $1
	store.32    %r18963 -> 0[i]
	scast.64    %r18964 <- (32) %r18962
	add.64*     %r18965 <- %r18961, %r18964
	store.8     $8 -> 0[%r18965]
	symaddr.64* %r18966 <- log_2
	load.32     %r18967 <- 0[i]
	add.32      %r18968 <- %r18967, $1
	store.32    %r18968 -> 0[i]
	scast.64    %r18969 <- (32) %r18967
	add.64*     %r18970 <- %r18966, %r18969
	store.8     $8 -> 0[%r18970]
	symaddr.64* %r18971 <- log_2
	load.32     %r18972 <- 0[i]
	add.32      %r18973 <- %r18972, $1
	store.32    %r18973 -> 0[i]
	scast.64    %r18974 <- (32) %r18972
	add.64*     %r18975 <- %r18971, %r18974
	store.8     $8 -> 0[%r18975]
	symaddr.64* %r18976 <- log_2
	load.32     %r18977 <- 0[i]
	add.32      %r18978 <- %r18977, $1
	store.32    %r18978 -> 0[i]
	scast.64    %r18979 <- (32) %r18977
	add.64*     %r18980 <- %r18976, %r18979
	store.8     $8 -> 0[%r18980]
	symaddr.64* %r18981 <- log_2
	load.32     %r18982 <- 0[i]
	add.32      %r18983 <- %r18982, $1
	store.32    %r18983 -> 0[i]
	scast.64    %r18984 <- (32) %r18982
	add.64*     %r18985 <- %r18981, %r18984
	store.8     $8 -> 0[%r18985]
	symaddr.64* %r18986 <- log_2
	load.32     %r18987 <- 0[i]
	add.32      %r18988 <- %r18987, $1
	store.32    %r18988 -> 0[i]
	scast.64    %r18989 <- (32) %r18987
	add.64*     %r18990 <- %r18986, %r18989
	store.8     $8 -> 0[%r18990]
	symaddr.64* %r18991 <- log_2
	load.32     %r18992 <- 0[i]
	add.32      %r18993 <- %r18992, $1
	store.32    %r18993 -> 0[i]
	scast.64    %r18994 <- (32) %r18992
	add.64*     %r18995 <- %r18991, %r18994
	store.8     $8 -> 0[%r18995]
	symaddr.64* %r18996 <- log_2
	load.32     %r18997 <- 0[i]
	add.32      %r18998 <- %r18997, $1
	store.32    %r18998 -> 0[i]
	scast.64    %r18999 <- (32) %r18997
	add.64*     %r19000 <- %r18996, %r18999
	store.8     $8 -> 0[%r19000]
	symaddr.64* %r19001 <- log_2
	load.32     %r19002 <- 0[i]
	add.32      %r19003 <- %r19002, $1
	store.32    %r19003 -> 0[i]
	scast.64    %r19004 <- (32) %r19002
	add.64*     %r19005 <- %r19001, %r19004
	store.8     $8 -> 0[%r19005]
	symaddr.64* %r19006 <- log_2
	load.32     %r19007 <- 0[i]
	add.32      %r19008 <- %r19007, $1
	store.32    %r19008 -> 0[i]
	scast.64    %r19009 <- (32) %r19007
	add.64*     %r19010 <- %r19006, %r19009
	store.8     $8 -> 0[%r19010]
	symaddr.64* %r19011 <- log_2
	load.32     %r19012 <- 0[i]
	add.32      %r19013 <- %r19012, $1
	store.32    %r19013 -> 0[i]
	scast.64    %r19014 <- (32) %r19012
	add.64*     %r19015 <- %r19011, %r19014
	store.8     $8 -> 0[%r19015]
	symaddr.64* %r19016 <- log_2
	load.32     %r19017 <- 0[i]
	add.32      %r19018 <- %r19017, $1
	store.32    %r19018 -> 0[i]
	scast.64    %r19019 <- (32) %r19017
	add.64*     %r19020 <- %r19016, %r19019
	store.8     $8 -> 0[%r19020]
	symaddr.64* %r19021 <- log_2
	load.32     %r19022 <- 0[i]
	add.32      %r19023 <- %r19022, $1
	store.32    %r19023 -> 0[i]
	scast.64    %r19024 <- (32) %r19022
	add.64*     %r19025 <- %r19021, %r19024
	store.8     $8 -> 0[%r19025]
	symaddr.64* %r19026 <- log_2
	load.32     %r19027 <- 0[i]
	add.32      %r19028 <- %r19027, $1
	store.32    %r19028 -> 0[i]
	scast.64    %r19029 <- (32) %r19027
	add.64*     %r19030 <- %r19026, %r19029
	store.8     $8 -> 0[%r19030]
	symaddr.64* %r19031 <- log_2
	load.32     %r19032 <- 0[i]
	add.32      %r19033 <- %r19032, $1
	store.32    %r19033 -> 0[i]
	scast.64    %r19034 <- (32) %r19032
	add.64*     %r19035 <- %r19031, %r19034
	store.8     $8 -> 0[%r19035]
	symaddr.64* %r19036 <- log_2
	load.32     %r19037 <- 0[i]
	add.32      %r19038 <- %r19037, $1
	store.32    %r19038 -> 0[i]
	scast.64    %r19039 <- (32) %r19037
	add.64*     %r19040 <- %r19036, %r19039
	store.8     $8 -> 0[%r19040]
	symaddr.64* %r19041 <- log_2
	load.32     %r19042 <- 0[i]
	add.32      %r19043 <- %r19042, $1
	store.32    %r19043 -> 0[i]
	scast.64    %r19044 <- (32) %r19042
	add.64*     %r19045 <- %r19041, %r19044
	store.8     $8 -> 0[%r19045]
	symaddr.64* %r19046 <- log_2
	load.32     %r19047 <- 0[i]
	add.32      %r19048 <- %r19047, $1
	store.32    %r19048 -> 0[i]
	scast.64    %r19049 <- (32) %r19047
	add.64*     %r19050 <- %r19046, %r19049
	store.8     $8 -> 0[%r19050]
	symaddr.64* %r19051 <- log_2
	load.32     %r19052 <- 0[i]
	add.32      %r19053 <- %r19052, $1
	store.32    %r19053 -> 0[i]
	scast.64    %r19054 <- (32) %r19052
	add.64*     %r19055 <- %r19051, %r19054
	store.8     $8 -> 0[%r19055]
	symaddr.64* %r19056 <- log_2
	load.32     %r19057 <- 0[i]
	add.32      %r19058 <- %r19057, $1
	store.32    %r19058 -> 0[i]
	scast.64    %r19059 <- (32) %r19057
	add.64*     %r19060 <- %r19056, %r19059
	store.8     $8 -> 0[%r19060]
	symaddr.64* %r19061 <- log_2
	load.32     %r19062 <- 0[i]
	add.32      %r19063 <- %r19062, $1
	store.32    %r19063 -> 0[i]
	scast.64    %r19064 <- (32) %r19062
	add.64*     %r19065 <- %r19061, %r19064
	store.8     $8 -> 0[%r19065]
	symaddr.64* %r19066 <- log_2
	load.32     %r19067 <- 0[i]
	add.32      %r19068 <- %r19067, $1
	store.32    %r19068 -> 0[i]
	scast.64    %r19069 <- (32) %r19067
	add.64*     %r19070 <- %r19066, %r19069
	store.8     $8 -> 0[%r19070]
	symaddr.64* %r19071 <- log_2
	load.32     %r19072 <- 0[i]
	add.32      %r19073 <- %r19072, $1
	store.32    %r19073 -> 0[i]
	scast.64    %r19074 <- (32) %r19072
	add.64*     %r19075 <- %r19071, %r19074
	store.8     $8 -> 0[%r19075]
	symaddr.64* %r19076 <- log_2
	load.32     %r19077 <- 0[i]
	add.32      %r19078 <- %r19077, $1
	store.32    %r19078 -> 0[i]
	scast.64    %r19079 <- (32) %r19077
	add.64*     %r19080 <- %r19076, %r19079
	store.8     $8 -> 0[%r19080]
	symaddr.64* %r19081 <- log_2
	load.32     %r19082 <- 0[i]
	add.32      %r19083 <- %r19082, $1
	store.32    %r19083 -> 0[i]
	scast.64    %r19084 <- (32) %r19082
	add.64*     %r19085 <- %r19081, %r19084
	store.8     $8 -> 0[%r19085]
	symaddr.64* %r19086 <- log_2
	load.32     %r19087 <- 0[i]
	add.32      %r19088 <- %r19087, $1
	store.32    %r19088 -> 0[i]
	scast.64    %r19089 <- (32) %r19087
	add.64*     %r19090 <- %r19086, %r19089
	store.8     $8 -> 0[%r19090]
	symaddr.64* %r19091 <- log_2
	load.32     %r19092 <- 0[i]
	add.32      %r19093 <- %r19092, $1
	store.32    %r19093 -> 0[i]
	scast.64    %r19094 <- (32) %r19092
	add.64*     %r19095 <- %r19091, %r19094
	store.8     $8 -> 0[%r19095]
	symaddr.64* %r19096 <- log_2
	load.32     %r19097 <- 0[i]
	add.32      %r19098 <- %r19097, $1
	store.32    %r19098 -> 0[i]
	scast.64    %r19099 <- (32) %r19097
	add.64*     %r19100 <- %r19096, %r19099
	store.8     $8 -> 0[%r19100]
	symaddr.64* %r19101 <- log_2
	load.32     %r19102 <- 0[i]
	add.32      %r19103 <- %r19102, $1
	store.32    %r19103 -> 0[i]
	scast.64    %r19104 <- (32) %r19102
	add.64*     %r19105 <- %r19101, %r19104
	store.8     $8 -> 0[%r19105]
	symaddr.64* %r19106 <- log_2
	load.32     %r19107 <- 0[i]
	add.32      %r19108 <- %r19107, $1
	store.32    %r19108 -> 0[i]
	scast.64    %r19109 <- (32) %r19107
	add.64*     %r19110 <- %r19106, %r19109
	store.8     $8 -> 0[%r19110]
	symaddr.64* %r19111 <- log_2
	load.32     %r19112 <- 0[i]
	add.32      %r19113 <- %r19112, $1
	store.32    %r19113 -> 0[i]
	scast.64    %r19114 <- (32) %r19112
	add.64*     %r19115 <- %r19111, %r19114
	store.8     $8 -> 0[%r19115]
	symaddr.64* %r19116 <- log_2
	load.32     %r19117 <- 0[i]
	add.32      %r19118 <- %r19117, $1
	store.32    %r19118 -> 0[i]
	scast.64    %r19119 <- (32) %r19117
	add.64*     %r19120 <- %r19116, %r19119
	store.8     $8 -> 0[%r19120]
	symaddr.64* %r19121 <- log_2
	load.32     %r19122 <- 0[i]
	add.32      %r19123 <- %r19122, $1
	store.32    %r19123 -> 0[i]
	scast.64    %r19124 <- (32) %r19122
	add.64*     %r19125 <- %r19121, %r19124
	store.8     $8 -> 0[%r19125]
	symaddr.64* %r19126 <- log_2
	load.32     %r19127 <- 0[i]
	add.32      %r19128 <- %r19127, $1
	store.32    %r19128 -> 0[i]
	scast.64    %r19129 <- (32) %r19127
	add.64*     %r19130 <- %r19126, %r19129
	store.8     $8 -> 0[%r19130]
	symaddr.64* %r19131 <- log_2
	load.32     %r19132 <- 0[i]
	add.32      %r19133 <- %r19132, $1
	store.32    %r19133 -> 0[i]
	scast.64    %r19134 <- (32) %r19132
	add.64*     %r19135 <- %r19131, %r19134
	store.8     $8 -> 0[%r19135]
	symaddr.64* %r19136 <- log_2
	load.32     %r19137 <- 0[i]
	add.32      %r19138 <- %r19137, $1
	store.32    %r19138 -> 0[i]
	scast.64    %r19139 <- (32) %r19137
	add.64*     %r19140 <- %r19136, %r19139
	store.8     $8 -> 0[%r19140]
	symaddr.64* %r19141 <- log_2
	load.32     %r19142 <- 0[i]
	add.32      %r19143 <- %r19142, $1
	store.32    %r19143 -> 0[i]
	scast.64    %r19144 <- (32) %r19142
	add.64*     %r19145 <- %r19141, %r19144
	store.8     $8 -> 0[%r19145]
	symaddr.64* %r19146 <- log_2
	load.32     %r19147 <- 0[i]
	add.32      %r19148 <- %r19147, $1
	store.32    %r19148 -> 0[i]
	scast.64    %r19149 <- (32) %r19147
	add.64*     %r19150 <- %r19146, %r19149
	store.8     $8 -> 0[%r19150]
	symaddr.64* %r19151 <- log_2
	load.32     %r19152 <- 0[i]
	add.32      %r19153 <- %r19152, $1
	store.32    %r19153 -> 0[i]
	scast.64    %r19154 <- (32) %r19152
	add.64*     %r19155 <- %r19151, %r19154
	store.8     $8 -> 0[%r19155]
	symaddr.64* %r19156 <- log_2
	load.32     %r19157 <- 0[i]
	add.32      %r19158 <- %r19157, $1
	store.32    %r19158 -> 0[i]
	scast.64    %r19159 <- (32) %r19157
	add.64*     %r19160 <- %r19156, %r19159
	store.8     $8 -> 0[%r19160]
	symaddr.64* %r19161 <- log_2
	load.32     %r19162 <- 0[i]
	add.32      %r19163 <- %r19162, $1
	store.32    %r19163 -> 0[i]
	scast.64    %r19164 <- (32) %r19162
	add.64*     %r19165 <- %r19161, %r19164
	store.8     $8 -> 0[%r19165]
	symaddr.64* %r19166 <- log_2
	load.32     %r19167 <- 0[i]
	add.32      %r19168 <- %r19167, $1
	store.32    %r19168 -> 0[i]
	scast.64    %r19169 <- (32) %r19167
	add.64*     %r19170 <- %r19166, %r19169
	store.8     $8 -> 0[%r19170]
	symaddr.64* %r19171 <- log_2
	load.32     %r19172 <- 0[i]
	add.32      %r19173 <- %r19172, $1
	store.32    %r19173 -> 0[i]
	scast.64    %r19174 <- (32) %r19172
	add.64*     %r19175 <- %r19171, %r19174
	store.8     $8 -> 0[%r19175]
	symaddr.64* %r19176 <- log_2
	load.32     %r19177 <- 0[i]
	add.32      %r19178 <- %r19177, $1
	store.32    %r19178 -> 0[i]
	scast.64    %r19179 <- (32) %r19177
	add.64*     %r19180 <- %r19176, %r19179
	store.8     $8 -> 0[%r19180]
	symaddr.64* %r19181 <- log_2
	load.32     %r19182 <- 0[i]
	add.32      %r19183 <- %r19182, $1
	store.32    %r19183 -> 0[i]
	scast.64    %r19184 <- (32) %r19182
	add.64*     %r19185 <- %r19181, %r19184
	store.8     $8 -> 0[%r19185]
	symaddr.64* %r19186 <- log_2
	load.32     %r19187 <- 0[i]
	add.32      %r19188 <- %r19187, $1
	store.32    %r19188 -> 0[i]
	scast.64    %r19189 <- (32) %r19187
	add.64*     %r19190 <- %r19186, %r19189
	store.8     $8 -> 0[%r19190]
	symaddr.64* %r19191 <- log_2
	load.32     %r19192 <- 0[i]
	add.32      %r19193 <- %r19192, $1
	store.32    %r19193 -> 0[i]
	scast.64    %r19194 <- (32) %r19192
	add.64*     %r19195 <- %r19191, %r19194
	store.8     $8 -> 0[%r19195]
	symaddr.64* %r19196 <- log_2
	load.32     %r19197 <- 0[i]
	add.32      %r19198 <- %r19197, $1
	store.32    %r19198 -> 0[i]
	scast.64    %r19199 <- (32) %r19197
	add.64*     %r19200 <- %r19196, %r19199
	store.8     $8 -> 0[%r19200]
	symaddr.64* %r19201 <- log_2
	load.32     %r19202 <- 0[i]
	add.32      %r19203 <- %r19202, $1
	store.32    %r19203 -> 0[i]
	scast.64    %r19204 <- (32) %r19202
	add.64*     %r19205 <- %r19201, %r19204
	store.8     $8 -> 0[%r19205]
	symaddr.64* %r19206 <- log_2
	load.32     %r19207 <- 0[i]
	add.32      %r19208 <- %r19207, $1
	store.32    %r19208 -> 0[i]
	scast.64    %r19209 <- (32) %r19207
	add.64*     %r19210 <- %r19206, %r19209
	store.8     $8 -> 0[%r19210]
	symaddr.64* %r19211 <- log_2
	load.32     %r19212 <- 0[i]
	add.32      %r19213 <- %r19212, $1
	store.32    %r19213 -> 0[i]
	scast.64    %r19214 <- (32) %r19212
	add.64*     %r19215 <- %r19211, %r19214
	store.8     $8 -> 0[%r19215]
	symaddr.64* %r19216 <- log_2
	load.32     %r19217 <- 0[i]
	add.32      %r19218 <- %r19217, $1
	store.32    %r19218 -> 0[i]
	scast.64    %r19219 <- (32) %r19217
	add.64*     %r19220 <- %r19216, %r19219
	store.8     $8 -> 0[%r19220]
	symaddr.64* %r19221 <- log_2
	load.32     %r19222 <- 0[i]
	add.32      %r19223 <- %r19222, $1
	store.32    %r19223 -> 0[i]
	scast.64    %r19224 <- (32) %r19222
	add.64*     %r19225 <- %r19221, %r19224
	store.8     $8 -> 0[%r19225]
	symaddr.64* %r19226 <- log_2
	load.32     %r19227 <- 0[i]
	add.32      %r19228 <- %r19227, $1
	store.32    %r19228 -> 0[i]
	scast.64    %r19229 <- (32) %r19227
	add.64*     %r19230 <- %r19226, %r19229
	store.8     $8 -> 0[%r19230]
	symaddr.64* %r19231 <- log_2
	load.32     %r19232 <- 0[i]
	add.32      %r19233 <- %r19232, $1
	store.32    %r19233 -> 0[i]
	scast.64    %r19234 <- (32) %r19232
	add.64*     %r19235 <- %r19231, %r19234
	store.8     $8 -> 0[%r19235]
	symaddr.64* %r19236 <- log_2
	load.32     %r19237 <- 0[i]
	add.32      %r19238 <- %r19237, $1
	store.32    %r19238 -> 0[i]
	scast.64    %r19239 <- (32) %r19237
	add.64*     %r19240 <- %r19236, %r19239
	store.8     $8 -> 0[%r19240]
	symaddr.64* %r19241 <- log_2
	load.32     %r19242 <- 0[i]
	add.32      %r19243 <- %r19242, $1
	store.32    %r19243 -> 0[i]
	scast.64    %r19244 <- (32) %r19242
	add.64*     %r19245 <- %r19241, %r19244
	store.8     $8 -> 0[%r19245]
	symaddr.64* %r19246 <- log_2
	load.32     %r19247 <- 0[i]
	add.32      %r19248 <- %r19247, $1
	store.32    %r19248 -> 0[i]
	scast.64    %r19249 <- (32) %r19247
	add.64*     %r19250 <- %r19246, %r19249
	store.8     $8 -> 0[%r19250]
	symaddr.64* %r19251 <- log_2
	load.32     %r19252 <- 0[i]
	add.32      %r19253 <- %r19252, $1
	store.32    %r19253 -> 0[i]
	scast.64    %r19254 <- (32) %r19252
	add.64*     %r19255 <- %r19251, %r19254
	store.8     $8 -> 0[%r19255]
	symaddr.64* %r19256 <- log_2
	load.32     %r19257 <- 0[i]
	add.32      %r19258 <- %r19257, $1
	store.32    %r19258 -> 0[i]
	scast.64    %r19259 <- (32) %r19257
	add.64*     %r19260 <- %r19256, %r19259
	store.8     $8 -> 0[%r19260]
	symaddr.64* %r19261 <- log_2
	load.32     %r19262 <- 0[i]
	add.32      %r19263 <- %r19262, $1
	store.32    %r19263 -> 0[i]
	scast.64    %r19264 <- (32) %r19262
	add.64*     %r19265 <- %r19261, %r19264
	store.8     $8 -> 0[%r19265]
	symaddr.64* %r19266 <- log_2
	load.32     %r19267 <- 0[i]
	add.32      %r19268 <- %r19267, $1
	store.32    %r19268 -> 0[i]
	scast.64    %r19269 <- (32) %r19267
	add.64*     %r19270 <- %r19266, %r19269
	store.8     $8 -> 0[%r19270]
	store.32    $0 -> 0[i]
	symaddr.64* %r19271 <- <anon symbol:0x62d00155b0d8>
	symaddr.64* %r19272 <- luaT_typenames
	load.32     %r19273 <- 0[i]
	add.32      %r19274 <- %r19273, $1
	store.32    %r19274 -> 0[i]
	scast.64    %r19275 <- (32) %r19273
	muls.64     %r19276 <- %r19275, $8
	add.64*     %r19277 <- %r19272, %r19276
	store.64*   %r19271 -> 0[%r19277]
	symaddr.64* %r19278 <- <anon symbol:0x62d00155b730>
	symaddr.64* %r19279 <- luaT_typenames
	load.32     %r19280 <- 0[i]
	add.32      %r19281 <- %r19280, $1
	store.32    %r19281 -> 0[i]
	scast.64    %r19282 <- (32) %r19280
	muls.64     %r19283 <- %r19282, $8
	add.64*     %r19284 <- %r19279, %r19283
	store.64*   %r19278 -> 0[%r19284]
	symaddr.64* %r19285 <- <anon symbol:0x62d00155bd88>
	symaddr.64* %r19286 <- luaT_typenames
	load.32     %r19287 <- 0[i]
	add.32      %r19288 <- %r19287, $1
	store.32    %r19288 -> 0[i]
	scast.64    %r19289 <- (32) %r19287
	muls.64     %r19290 <- %r19289, $8
	add.64*     %r19291 <- %r19286, %r19290
	store.64*   %r19285 -> 0[%r19291]
	symaddr.64* %r19292 <- <anon symbol:0x62d001568418>
	symaddr.64* %r19293 <- luaT_typenames
	load.32     %r19294 <- 0[i]
	add.32      %r19295 <- %r19294, $1
	store.32    %r19295 -> 0[i]
	scast.64    %r19296 <- (32) %r19294
	muls.64     %r19297 <- %r19296, $8
	add.64*     %r19298 <- %r19293, %r19297
	store.64*   %r19292 -> 0[%r19298]
	symaddr.64* %r19299 <- <anon symbol:0x62d001568a70>
	symaddr.64* %r19300 <- luaT_typenames
	load.32     %r19301 <- 0[i]
	add.32      %r19302 <- %r19301, $1
	store.32    %r19302 -> 0[i]
	scast.64    %r19303 <- (32) %r19301
	muls.64     %r19304 <- %r19303, $8
	add.64*     %r19305 <- %r19300, %r19304
	store.64*   %r19299 -> 0[%r19305]
	symaddr.64* %r19306 <- <anon symbol:0x62d0015690c8>
	symaddr.64* %r19307 <- luaT_typenames
	load.32     %r19308 <- 0[i]
	add.32      %r19309 <- %r19308, $1
	store.32    %r19309 -> 0[i]
	scast.64    %r19310 <- (32) %r19308
	muls.64     %r19311 <- %r19310, $8
	add.64*     %r19312 <- %r19307, %r19311
	store.64*   %r19306 -> 0[%r19312]
	symaddr.64* %r19313 <- <anon symbol:0x62d001569720>
	symaddr.64* %r19314 <- luaT_typenames
	load.32     %r19315 <- 0[i]
	add.32      %r19316 <- %r19315, $1
	store.32    %r19316 -> 0[i]
	scast.64    %r19317 <- (32) %r19315
	muls.64     %r19318 <- %r19317, $8
	add.64*     %r19319 <- %r19314, %r19318
	store.64*   %r19313 -> 0[%r19319]
	symaddr.64* %r19320 <- <anon symbol:0x62d001569d78>
	symaddr.64* %r19321 <- luaT_typenames
	load.32     %r19322 <- 0[i]
	add.32      %r19323 <- %r19322, $1
	store.32    %r19323 -> 0[i]
	scast.64    %r19324 <- (32) %r19322
	muls.64     %r19325 <- %r19324, $8
	add.64*     %r19326 <- %r19321, %r19325
	store.64*   %r19320 -> 0[%r19326]
	symaddr.64* %r19327 <- <anon symbol:0x62d00156a3d0>
	symaddr.64* %r19328 <- luaT_typenames
	load.32     %r19329 <- 0[i]
	add.32      %r19330 <- %r19329, $1
	store.32    %r19330 -> 0[i]
	scast.64    %r19331 <- (32) %r19329
	muls.64     %r19332 <- %r19331, $8
	add.64*     %r19333 <- %r19328, %r19332
	store.64*   %r19327 -> 0[%r19333]
	symaddr.64* %r19334 <- <anon symbol:0x62d00156aa28>
	symaddr.64* %r19335 <- luaT_typenames
	load.32     %r19336 <- 0[i]
	add.32      %r19337 <- %r19336, $1
	store.32    %r19337 -> 0[i]
	scast.64    %r19338 <- (32) %r19336
	muls.64     %r19339 <- %r19338, $8
	add.64*     %r19340 <- %r19335, %r19339
	store.64*   %r19334 -> 0[%r19340]
	symaddr.64* %r19341 <- <anon symbol:0x62d00156b080>
	symaddr.64* %r19342 <- luaT_typenames
	load.32     %r19343 <- 0[i]
	add.32      %r19344 <- %r19343, $1
	store.32    %r19344 -> 0[i]
	scast.64    %r19345 <- (32) %r19343
	muls.64     %r19346 <- %r19345, $8
	add.64*     %r19347 <- %r19342, %r19346
	store.64*   %r19341 -> 0[%r19347]
	store.32    $0 -> 0[i]
	symaddr.64* %r19348 <- <anon symbol:0x62d00156b6d8>
	symaddr.64* %r19349 <- luaT_eventname
	load.32     %r19350 <- 0[i]
	add.32      %r19351 <- %r19350, $1
	store.32    %r19351 -> 0[i]
	scast.64    %r19352 <- (32) %r19350
	muls.64     %r19353 <- %r19352, $8
	add.64*     %r19354 <- %r19349, %r19353
	store.64*   %r19348 -> 0[%r19354]
	symaddr.64* %r19355 <- <anon symbol:0x62d00156bd30>
	symaddr.64* %r19356 <- luaT_eventname
	load.32     %r19357 <- 0[i]
	add.32      %r19358 <- %r19357, $1
	store.32    %r19358 -> 0[i]
	scast.64    %r19359 <- (32) %r19357
	muls.64     %r19360 <- %r19359, $8
	add.64*     %r19361 <- %r19356, %r19360
	store.64*   %r19355 -> 0[%r19361]
	symaddr.64* %r19362 <- <anon symbol:0x62d00156c388>
	symaddr.64* %r19363 <- luaT_eventname
	load.32     %r19364 <- 0[i]
	add.32      %r19365 <- %r19364, $1
	store.32    %r19365 -> 0[i]
	scast.64    %r19366 <- (32) %r19364
	muls.64     %r19367 <- %r19366, $8
	add.64*     %r19368 <- %r19363, %r19367
	store.64*   %r19362 -> 0[%r19368]
	symaddr.64* %r19369 <- <anon symbol:0x62d00156c9e0>
	symaddr.64* %r19370 <- luaT_eventname
	load.32     %r19371 <- 0[i]
	add.32      %r19372 <- %r19371, $1
	store.32    %r19372 -> 0[i]
	scast.64    %r19373 <- (32) %r19371
	muls.64     %r19374 <- %r19373, $8
	add.64*     %r19375 <- %r19370, %r19374
	store.64*   %r19369 -> 0[%r19375]
	symaddr.64* %r19376 <- <anon symbol:0x62d00156d038>
	symaddr.64* %r19377 <- luaT_eventname
	load.32     %r19378 <- 0[i]
	add.32      %r19379 <- %r19378, $1
	store.32    %r19379 -> 0[i]
	scast.64    %r19380 <- (32) %r19378
	muls.64     %r19381 <- %r19380, $8
	add.64*     %r19382 <- %r19377, %r19381
	store.64*   %r19376 -> 0[%r19382]
	symaddr.64* %r19383 <- <anon symbol:0x62d00156d690>
	symaddr.64* %r19384 <- luaT_eventname
	load.32     %r19385 <- 0[i]
	add.32      %r19386 <- %r19385, $1
	store.32    %r19386 -> 0[i]
	scast.64    %r19387 <- (32) %r19385
	muls.64     %r19388 <- %r19387, $8
	add.64*     %r19389 <- %r19384, %r19388
	store.64*   %r19383 -> 0[%r19389]
	symaddr.64* %r19390 <- <anon symbol:0x62d00156dce8>
	symaddr.64* %r19391 <- luaT_eventname
	load.32     %r19392 <- 0[i]
	add.32      %r19393 <- %r19392, $1
	store.32    %r19393 -> 0[i]
	scast.64    %r19394 <- (32) %r19392
	muls.64     %r19395 <- %r19394, $8
	add.64*     %r19396 <- %r19391, %r19395
	store.64*   %r19390 -> 0[%r19396]
	symaddr.64* %r19397 <- <anon symbol:0x62d00156e340>
	symaddr.64* %r19398 <- luaT_eventname
	load.32     %r19399 <- 0[i]
	add.32      %r19400 <- %r19399, $1
	store.32    %r19400 -> 0[i]
	scast.64    %r19401 <- (32) %r19399
	muls.64     %r19402 <- %r19401, $8
	add.64*     %r19403 <- %r19398, %r19402
	store.64*   %r19397 -> 0[%r19403]
	symaddr.64* %r19404 <- <anon symbol:0x62d00156e998>
	symaddr.64* %r19405 <- luaT_eventname
	load.32     %r19406 <- 0[i]
	add.32      %r19407 <- %r19406, $1
	store.32    %r19407 -> 0[i]
	scast.64    %r19408 <- (32) %r19406
	muls.64     %r19409 <- %r19408, $8
	add.64*     %r19410 <- %r19405, %r19409
	store.64*   %r19404 -> 0[%r19410]
	symaddr.64* %r19411 <- <anon symbol:0x62d00156eff0>
	symaddr.64* %r19412 <- luaT_eventname
	load.32     %r19413 <- 0[i]
	add.32      %r19414 <- %r19413, $1
	store.32    %r19414 -> 0[i]
	scast.64    %r19415 <- (32) %r19413
	muls.64     %r19416 <- %r19415, $8
	add.64*     %r19417 <- %r19412, %r19416
	store.64*   %r19411 -> 0[%r19417]
	symaddr.64* %r19418 <- <anon symbol:0x62d00156f648>
	symaddr.64* %r19419 <- luaT_eventname
	load.32     %r19420 <- 0[i]
	add.32      %r19421 <- %r19420, $1
	store.32    %r19421 -> 0[i]
	scast.64    %r19422 <- (32) %r19420
	muls.64     %r19423 <- %r19422, $8
	add.64*     %r19424 <- %r19419, %r19423
	store.64*   %r19418 -> 0[%r19424]
	symaddr.64* %r19425 <- <anon symbol:0x62d00156fca0>
	symaddr.64* %r19426 <- luaT_eventname
	load.32     %r19427 <- 0[i]
	add.32      %r19428 <- %r19427, $1
	store.32    %r19428 -> 0[i]
	scast.64    %r19429 <- (32) %r19427
	muls.64     %r19430 <- %r19429, $8
	add.64*     %r19431 <- %r19426, %r19430
	store.64*   %r19425 -> 0[%r19431]
	symaddr.64* %r19432 <- <anon symbol:0x62d0015702f8>
	symaddr.64* %r19433 <- luaT_eventname
	load.32     %r19434 <- 0[i]
	add.32      %r19435 <- %r19434, $1
	store.32    %r19435 -> 0[i]
	scast.64    %r19436 <- (32) %r19434
	muls.64     %r19437 <- %r19436, $8
	add.64*     %r19438 <- %r19433, %r19437
	store.64*   %r19432 -> 0[%r19438]
	symaddr.64* %r19439 <- <anon symbol:0x62d00157c988>
	symaddr.64* %r19440 <- luaT_eventname
	load.32     %r19441 <- 0[i]
	add.32      %r19442 <- %r19441, $1
	store.32    %r19442 -> 0[i]
	scast.64    %r19443 <- (32) %r19441
	muls.64     %r19444 <- %r19443, $8
	add.64*     %r19445 <- %r19440, %r19444
	store.64*   %r19439 -> 0[%r19445]
	symaddr.64* %r19446 <- <anon symbol:0x62d00157cfe0>
	symaddr.64* %r19447 <- luaT_eventname
	load.32     %r19448 <- 0[i]
	add.32      %r19449 <- %r19448, $1
	store.32    %r19449 -> 0[i]
	scast.64    %r19450 <- (32) %r19448
	muls.64     %r19451 <- %r19450, $8
	add.64*     %r19452 <- %r19447, %r19451
	store.64*   %r19446 -> 0[%r19452]
	symaddr.64* %r19453 <- <anon symbol:0x62d00157d638>
	symaddr.64* %r19454 <- luaT_eventname
	load.32     %r19455 <- 0[i]
	add.32      %r19456 <- %r19455, $1
	store.32    %r19456 -> 0[i]
	scast.64    %r19457 <- (32) %r19455
	muls.64     %r19458 <- %r19457, $8
	add.64*     %r19459 <- %r19454, %r19458
	store.64*   %r19453 -> 0[%r19459]
	symaddr.64* %r19460 <- <anon symbol:0x62d00157dc90>
	symaddr.64* %r19461 <- luaT_eventname
	load.32     %r19462 <- 0[i]
	add.32      %r19463 <- %r19462, $1
	store.32    %r19463 -> 0[i]
	scast.64    %r19464 <- (32) %r19462
	muls.64     %r19465 <- %r19464, $8
	add.64*     %r19466 <- %r19461, %r19465
	store.64*   %r19460 -> 0[%r19466]
	store.64*   $0 -> 32[dummynode_]
	store.32    $0 -> 24[dummynode_]
	store.64*   $0 -> 16[dummynode_]
	store.64*   $0 -> 0[dummynode_]
	store.32    $0 -> 8[dummynode_]
	store.32    $0 -> 0[i]
	symaddr.64* %r19467 <- luaP_opmodes
	load.32     %r19468 <- 0[i]
	add.32      %r19469 <- %r19468, $1
	store.32    %r19469 -> 0[i]
	scast.64    %r19470 <- (32) %r19468
	add.64*     %r19471 <- %r19467, %r19470
	store.8     $96 -> 0[%r19471]
	symaddr.64* %r19472 <- luaP_opmodes
	load.32     %r19473 <- 0[i]
	add.32      %r19474 <- %r19473, $1
	store.32    %r19474 -> 0[i]
	scast.64    %r19475 <- (32) %r19473
	add.64*     %r19476 <- %r19472, %r19475
	store.8     $113 -> 0[%r19476]
	symaddr.64* %r19477 <- luaP_opmodes
	load.32     %r19478 <- 0[i]
	add.32      %r19479 <- %r19478, $1
	store.32    %r19479 -> 0[i]
	scast.64    %r19480 <- (32) %r19478
	add.64*     %r19481 <- %r19477, %r19480
	store.8     $84 -> 0[%r19481]
	symaddr.64* %r19482 <- luaP_opmodes
	load.32     %r19483 <- 0[i]
	add.32      %r19484 <- %r19483, $1
	store.32    %r19484 -> 0[i]
	scast.64    %r19485 <- (32) %r19483
	add.64*     %r19486 <- %r19482, %r19485
	store.8     $96 -> 0[%r19486]
	symaddr.64* %r19487 <- luaP_opmodes
	load.32     %r19488 <- 0[i]
	add.32      %r19489 <- %r19488, $1
	store.32    %r19489 -> 0[i]
	scast.64    %r19490 <- (32) %r19488
	add.64*     %r19491 <- %r19487, %r19490
	store.8     $80 -> 0[%r19491]
	symaddr.64* %r19492 <- luaP_opmodes
	load.32     %r19493 <- 0[i]
	add.32      %r19494 <- %r19493, $1
	store.32    %r19494 -> 0[i]
	scast.64    %r19495 <- (32) %r19493
	add.64*     %r19496 <- %r19492, %r19495
	store.8     $113 -> 0[%r19496]
	symaddr.64* %r19497 <- luaP_opmodes
	load.32     %r19498 <- 0[i]
	add.32      %r19499 <- %r19498, $1
	store.32    %r19499 -> 0[i]
	scast.64    %r19500 <- (32) %r19498
	add.64*     %r19501 <- %r19497, %r19500
	store.8     $108 -> 0[%r19501]
	symaddr.64* %r19502 <- luaP_opmodes
	load.32     %r19503 <- 0[i]
	add.32      %r19504 <- %r19503, $1
	store.32    %r19504 -> 0[i]
	scast.64    %r19505 <- (32) %r19503
	add.64*     %r19506 <- %r19502, %r19505
	store.8     $49 -> 0[%r19506]
	symaddr.64* %r19507 <- luaP_opmodes
	load.32     %r19508 <- 0[i]
	add.32      %r19509 <- %r19508, $1
	store.32    %r19509 -> 0[i]
	scast.64    %r19510 <- (32) %r19508
	add.64*     %r19511 <- %r19507, %r19510
	store.8     $16 -> 0[%r19511]
	symaddr.64* %r19512 <- luaP_opmodes
	load.32     %r19513 <- 0[i]
	add.32      %r19514 <- %r19513, $1
	store.32    %r19514 -> 0[i]
	scast.64    %r19515 <- (32) %r19513
	add.64*     %r19516 <- %r19512, %r19515
	store.8     $60 -> 0[%r19516]
	symaddr.64* %r19517 <- luaP_opmodes
	load.32     %r19518 <- 0[i]
	add.32      %r19519 <- %r19518, $1
	store.32    %r19519 -> 0[i]
	scast.64    %r19520 <- (32) %r19518
	add.64*     %r19521 <- %r19517, %r19520
	store.8     $84 -> 0[%r19521]
	symaddr.64* %r19522 <- luaP_opmodes
	load.32     %r19523 <- 0[i]
	add.32      %r19524 <- %r19523, $1
	store.32    %r19524 -> 0[i]
	scast.64    %r19525 <- (32) %r19523
	add.64*     %r19526 <- %r19522, %r19525
	store.8     $108 -> 0[%r19526]
	symaddr.64* %r19527 <- luaP_opmodes
	load.32     %r19528 <- 0[i]
	add.32      %r19529 <- %r19528, $1
	store.32    %r19529 -> 0[i]
	scast.64    %r19530 <- (32) %r19528
	add.64*     %r19531 <- %r19527, %r19530
	store.8     $124 -> 0[%r19531]
	symaddr.64* %r19532 <- luaP_opmodes
	load.32     %r19533 <- 0[i]
	add.32      %r19534 <- %r19533, $1
	store.32    %r19534 -> 0[i]
	scast.64    %r19535 <- (32) %r19533
	add.64*     %r19536 <- %r19532, %r19535
	store.8     $124 -> 0[%r19536]
	symaddr.64* %r19537 <- luaP_opmodes
	load.32     %r19538 <- 0[i]
	add.32      %r19539 <- %r19538, $1
	store.32    %r19539 -> 0[i]
	scast.64    %r19540 <- (32) %r19538
	add.64*     %r19541 <- %r19537, %r19540
	store.8     $124 -> 0[%r19541]
	symaddr.64* %r19542 <- luaP_opmodes
	load.32     %r19543 <- 0[i]
	add.32      %r19544 <- %r19543, $1
	store.32    %r19544 -> 0[i]
	scast.64    %r19545 <- (32) %r19543
	add.64*     %r19546 <- %r19542, %r19545
	store.8     $124 -> 0[%r19546]
	symaddr.64* %r19547 <- luaP_opmodes
	load.32     %r19548 <- 0[i]
	add.32      %r19549 <- %r19548, $1
	store.32    %r19549 -> 0[i]
	scast.64    %r19550 <- (32) %r19548
	add.64*     %r19551 <- %r19547, %r19550
	store.8     $124 -> 0[%r19551]
	symaddr.64* %r19552 <- luaP_opmodes
	load.32     %r19553 <- 0[i]
	add.32      %r19554 <- %r19553, $1
	store.32    %r19554 -> 0[i]
	scast.64    %r19555 <- (32) %r19553
	add.64*     %r19556 <- %r19552, %r19555
	store.8     $124 -> 0[%r19556]
	symaddr.64* %r19557 <- luaP_opmodes
	load.32     %r19558 <- 0[i]
	add.32      %r19559 <- %r19558, $1
	store.32    %r19559 -> 0[i]
	scast.64    %r19560 <- (32) %r19558
	add.64*     %r19561 <- %r19557, %r19560
	store.8     $96 -> 0[%r19561]
	symaddr.64* %r19562 <- luaP_opmodes
	load.32     %r19563 <- 0[i]
	add.32      %r19564 <- %r19563, $1
	store.32    %r19564 -> 0[i]
	scast.64    %r19565 <- (32) %r19563
	add.64*     %r19566 <- %r19562, %r19565
	store.8     $96 -> 0[%r19566]
	symaddr.64* %r19567 <- luaP_opmodes
	load.32     %r19568 <- 0[i]
	add.32      %r19569 <- %r19568, $1
	store.32    %r19569 -> 0[i]
	scast.64    %r19570 <- (32) %r19568
	add.64*     %r19571 <- %r19567, %r19570
	store.8     $96 -> 0[%r19571]
	symaddr.64* %r19572 <- luaP_opmodes
	load.32     %r19573 <- 0[i]
	add.32      %r19574 <- %r19573, $1
	store.32    %r19574 -> 0[i]
	scast.64    %r19575 <- (32) %r19573
	add.64*     %r19576 <- %r19572, %r19575
	store.8     $104 -> 0[%r19576]
	symaddr.64* %r19577 <- luaP_opmodes
	load.32     %r19578 <- 0[i]
	add.32      %r19579 <- %r19578, $1
	store.32    %r19579 -> 0[i]
	scast.64    %r19580 <- (32) %r19578
	add.64*     %r19581 <- %r19577, %r19580
	store.8     $34 -> 0[%r19581]
	symaddr.64* %r19582 <- luaP_opmodes
	load.32     %r19583 <- 0[i]
	add.32      %r19584 <- %r19583, $1
	store.32    %r19584 -> 0[i]
	scast.64    %r19585 <- (32) %r19583
	add.64*     %r19586 <- %r19582, %r19585
	store.8     $188 -> 0[%r19586]
	symaddr.64* %r19587 <- luaP_opmodes
	load.32     %r19588 <- 0[i]
	add.32      %r19589 <- %r19588, $1
	store.32    %r19589 -> 0[i]
	scast.64    %r19590 <- (32) %r19588
	add.64*     %r19591 <- %r19587, %r19590
	store.8     $188 -> 0[%r19591]
	symaddr.64* %r19592 <- luaP_opmodes
	load.32     %r19593 <- 0[i]
	add.32      %r19594 <- %r19593, $1
	store.32    %r19594 -> 0[i]
	scast.64    %r19595 <- (32) %r19593
	add.64*     %r19596 <- %r19592, %r19595
	store.8     $188 -> 0[%r19596]
	symaddr.64* %r19597 <- luaP_opmodes
	load.32     %r19598 <- 0[i]
	add.32      %r19599 <- %r19598, $1
	store.32    %r19599 -> 0[i]
	scast.64    %r19600 <- (32) %r19598
	add.64*     %r19601 <- %r19597, %r19600
	store.8     $228 -> 0[%r19601]
	symaddr.64* %r19602 <- luaP_opmodes
	load.32     %r19603 <- 0[i]
	add.32      %r19604 <- %r19603, $1
	store.32    %r19604 -> 0[i]
	scast.64    %r19605 <- (32) %r19603
	add.64*     %r19606 <- %r19602, %r19605
	store.8     $228 -> 0[%r19606]
	symaddr.64* %r19607 <- luaP_opmodes
	load.32     %r19608 <- 0[i]
	add.32      %r19609 <- %r19608, $1
	store.32    %r19609 -> 0[i]
	scast.64    %r19610 <- (32) %r19608
	add.64*     %r19611 <- %r19607, %r19610
	store.8     $84 -> 0[%r19611]
	symaddr.64* %r19612 <- luaP_opmodes
	load.32     %r19613 <- 0[i]
	add.32      %r19614 <- %r19613, $1
	store.32    %r19614 -> 0[i]
	scast.64    %r19615 <- (32) %r19613
	add.64*     %r19616 <- %r19612, %r19615
	store.8     $84 -> 0[%r19616]
	symaddr.64* %r19617 <- luaP_opmodes
	load.32     %r19618 <- 0[i]
	add.32      %r19619 <- %r19618, $1
	store.32    %r19619 -> 0[i]
	scast.64    %r19620 <- (32) %r19618
	add.64*     %r19621 <- %r19617, %r19620
	store.8     $16 -> 0[%r19621]
	symaddr.64* %r19622 <- luaP_opmodes
	load.32     %r19623 <- 0[i]
	add.32      %r19624 <- %r19623, $1
	store.32    %r19624 -> 0[i]
	scast.64    %r19625 <- (32) %r19623
	add.64*     %r19626 <- %r19622, %r19625
	store.8     $98 -> 0[%r19626]
	symaddr.64* %r19627 <- luaP_opmodes
	load.32     %r19628 <- 0[i]
	add.32      %r19629 <- %r19628, $1
	store.32    %r19629 -> 0[i]
	scast.64    %r19630 <- (32) %r19628
	add.64*     %r19631 <- %r19627, %r19630
	store.8     $98 -> 0[%r19631]
	symaddr.64* %r19632 <- luaP_opmodes
	load.32     %r19633 <- 0[i]
	add.32      %r19634 <- %r19633, $1
	store.32    %r19634 -> 0[i]
	scast.64    %r19635 <- (32) %r19633
	add.64*     %r19636 <- %r19632, %r19635
	store.8     $132 -> 0[%r19636]
	symaddr.64* %r19637 <- luaP_opmodes
	load.32     %r19638 <- 0[i]
	add.32      %r19639 <- %r19638, $1
	store.32    %r19639 -> 0[i]
	scast.64    %r19640 <- (32) %r19638
	add.64*     %r19641 <- %r19637, %r19640
	store.8     $20 -> 0[%r19641]
	symaddr.64* %r19642 <- luaP_opmodes
	load.32     %r19643 <- 0[i]
	add.32      %r19644 <- %r19643, $1
	store.32    %r19644 -> 0[i]
	scast.64    %r19645 <- (32) %r19643
	add.64*     %r19646 <- %r19642, %r19645
	store.8     $0 -> 0[%r19646]
	symaddr.64* %r19647 <- luaP_opmodes
	load.32     %r19648 <- 0[i]
	add.32      %r19649 <- %r19648, $1
	store.32    %r19649 -> 0[i]
	scast.64    %r19650 <- (32) %r19648
	add.64*     %r19651 <- %r19647, %r19650
	store.8     $81 -> 0[%r19651]
	symaddr.64* %r19652 <- luaP_opmodes
	load.32     %r19653 <- 0[i]
	add.32      %r19654 <- %r19653, $1
	store.32    %r19654 -> 0[i]
	scast.64    %r19655 <- (32) %r19653
	add.64*     %r19656 <- %r19652, %r19655
	store.8     $80 -> 0[%r19656]
	store.32    $0 -> 0[i]
	symaddr.64* %r19657 <- <anon symbol:0x62d001573808>
	symaddr.64* %r19658 <- luaX_tokens
	load.32     %r19659 <- 0[i]
	add.32      %r19660 <- %r19659, $1
	store.32    %r19660 -> 0[i]
	scast.64    %r19661 <- (32) %r19659
	muls.64     %r19662 <- %r19661, $8
	add.64*     %r19663 <- %r19658, %r19662
	store.64*   %r19657 -> 0[%r19663]
	symaddr.64* %r19664 <- <anon symbol:0x62d001573e60>
	symaddr.64* %r19665 <- luaX_tokens
	load.32     %r19666 <- 0[i]
	add.32      %r19667 <- %r19666, $1
	store.32    %r19667 -> 0[i]
	scast.64    %r19668 <- (32) %r19666
	muls.64     %r19669 <- %r19668, $8
	add.64*     %r19670 <- %r19665, %r19669
	store.64*   %r19664 -> 0[%r19670]
	symaddr.64* %r19671 <- <anon symbol:0x62d0015744b8>
	symaddr.64* %r19672 <- luaX_tokens
	load.32     %r19673 <- 0[i]
	add.32      %r19674 <- %r19673, $1
	store.32    %r19674 -> 0[i]
	scast.64    %r19675 <- (32) %r19673
	muls.64     %r19676 <- %r19675, $8
	add.64*     %r19677 <- %r19672, %r19676
	store.64*   %r19671 -> 0[%r19677]
	symaddr.64* %r19678 <- <anon symbol:0x62d001574b10>
	symaddr.64* %r19679 <- luaX_tokens
	load.32     %r19680 <- 0[i]
	add.32      %r19681 <- %r19680, $1
	store.32    %r19681 -> 0[i]
	scast.64    %r19682 <- (32) %r19680
	muls.64     %r19683 <- %r19682, $8
	add.64*     %r19684 <- %r19679, %r19683
	store.64*   %r19678 -> 0[%r19684]
	symaddr.64* %r19685 <- <anon symbol:0x62d001575168>
	symaddr.64* %r19686 <- luaX_tokens
	load.32     %r19687 <- 0[i]
	add.32      %r19688 <- %r19687, $1
	store.32    %r19688 -> 0[i]
	scast.64    %r19689 <- (32) %r19687
	muls.64     %r19690 <- %r19689, $8
	add.64*     %r19691 <- %r19686, %r19690
	store.64*   %r19685 -> 0[%r19691]
	symaddr.64* %r19692 <- <anon symbol:0x62d0015757c0>
	symaddr.64* %r19693 <- luaX_tokens
	load.32     %r19694 <- 0[i]
	add.32      %r19695 <- %r19694, $1
	store.32    %r19695 -> 0[i]
	scast.64    %r19696 <- (32) %r19694
	muls.64     %r19697 <- %r19696, $8
	add.64*     %r19698 <- %r19693, %r19697
	store.64*   %r19692 -> 0[%r19698]
	symaddr.64* %r19699 <- <anon symbol:0x62d001575e18>
	symaddr.64* %r19700 <- luaX_tokens
	load.32     %r19701 <- 0[i]
	add.32      %r19702 <- %r19701, $1
	store.32    %r19702 -> 0[i]
	scast.64    %r19703 <- (32) %r19701
	muls.64     %r19704 <- %r19703, $8
	add.64*     %r19705 <- %r19700, %r19704
	store.64*   %r19699 -> 0[%r19705]
	symaddr.64* %r19706 <- <anon symbol:0x62d001576470>
	symaddr.64* %r19707 <- luaX_tokens
	load.32     %r19708 <- 0[i]
	add.32      %r19709 <- %r19708, $1
	store.32    %r19709 -> 0[i]
	scast.64    %r19710 <- (32) %r19708
	muls.64     %r19711 <- %r19710, $8
	add.64*     %r19712 <- %r19707, %r19711
	store.64*   %r19706 -> 0[%r19712]
	symaddr.64* %r19713 <- <anon symbol:0x62d001576ac8>
	symaddr.64* %r19714 <- luaX_tokens
	load.32     %r19715 <- 0[i]
	add.32      %r19716 <- %r19715, $1
	store.32    %r19716 -> 0[i]
	scast.64    %r19717 <- (32) %r19715
	muls.64     %r19718 <- %r19717, $8
	add.64*     %r19719 <- %r19714, %r19718
	store.64*   %r19713 -> 0[%r19719]
	symaddr.64* %r19720 <- <anon symbol:0x62d001577120>
	symaddr.64* %r19721 <- luaX_tokens
	load.32     %r19722 <- 0[i]
	add.32      %r19723 <- %r19722, $1
	store.32    %r19723 -> 0[i]
	scast.64    %r19724 <- (32) %r19722
	muls.64     %r19725 <- %r19724, $8
	add.64*     %r19726 <- %r19721, %r19725
	store.64*   %r19720 -> 0[%r19726]
	symaddr.64* %r19727 <- <anon symbol:0x62d001577778>
	symaddr.64* %r19728 <- luaX_tokens
	load.32     %r19729 <- 0[i]
	add.32      %r19730 <- %r19729, $1
	store.32    %r19730 -> 0[i]
	scast.64    %r19731 <- (32) %r19729
	muls.64     %r19732 <- %r19731, $8
	add.64*     %r19733 <- %r19728, %r19732
	store.64*   %r19727 -> 0[%r19733]
	symaddr.64* %r19734 <- <anon symbol:0x62d001577dd0>
	symaddr.64* %r19735 <- luaX_tokens
	load.32     %r19736 <- 0[i]
	add.32      %r19737 <- %r19736, $1
	store.32    %r19737 -> 0[i]
	scast.64    %r19738 <- (32) %r19736
	muls.64     %r19739 <- %r19738, $8
	add.64*     %r19740 <- %r19735, %r19739
	store.64*   %r19734 -> 0[%r19740]
	symaddr.64* %r19741 <- <anon symbol:0x62d001578428>
	symaddr.64* %r19742 <- luaX_tokens
	load.32     %r19743 <- 0[i]
	add.32      %r19744 <- %r19743, $1
	store.32    %r19744 -> 0[i]
	scast.64    %r19745 <- (32) %r19743
	muls.64     %r19746 <- %r19745, $8
	add.64*     %r19747 <- %r19742, %r19746
	store.64*   %r19741 -> 0[%r19747]
	symaddr.64* %r19748 <- <anon symbol:0x62d001578a80>
	symaddr.64* %r19749 <- luaX_tokens
	load.32     %r19750 <- 0[i]
	add.32      %r19751 <- %r19750, $1
	store.32    %r19751 -> 0[i]
	scast.64    %r19752 <- (32) %r19750
	muls.64     %r19753 <- %r19752, $8
	add.64*     %r19754 <- %r19749, %r19753
	store.64*   %r19748 -> 0[%r19754]
	symaddr.64* %r19755 <- <anon symbol:0x62d0015790d8>
	symaddr.64* %r19756 <- luaX_tokens
	load.32     %r19757 <- 0[i]
	add.32      %r19758 <- %r19757, $1
	store.32    %r19758 -> 0[i]
	scast.64    %r19759 <- (32) %r19757
	muls.64     %r19760 <- %r19759, $8
	add.64*     %r19761 <- %r19756, %r19760
	store.64*   %r19755 -> 0[%r19761]
	symaddr.64* %r19762 <- <anon symbol:0x62d001579730>
	symaddr.64* %r19763 <- luaX_tokens
	load.32     %r19764 <- 0[i]
	add.32      %r19765 <- %r19764, $1
	store.32    %r19765 -> 0[i]
	scast.64    %r19766 <- (32) %r19764
	muls.64     %r19767 <- %r19766, $8
	add.64*     %r19768 <- %r19763, %r19767
	store.64*   %r19762 -> 0[%r19768]
	symaddr.64* %r19769 <- <anon symbol:0x62d001579d88>
	symaddr.64* %r19770 <- luaX_tokens
	load.32     %r19771 <- 0[i]
	add.32      %r19772 <- %r19771, $1
	store.32    %r19772 -> 0[i]
	scast.64    %r19773 <- (32) %r19771
	muls.64     %r19774 <- %r19773, $8
	add.64*     %r19775 <- %r19770, %r19774
	store.64*   %r19769 -> 0[%r19775]
	symaddr.64* %r19776 <- <anon symbol:0x62d001586418>
	symaddr.64* %r19777 <- luaX_tokens
	load.32     %r19778 <- 0[i]
	add.32      %r19779 <- %r19778, $1
	store.32    %r19779 -> 0[i]
	scast.64    %r19780 <- (32) %r19778
	muls.64     %r19781 <- %r19780, $8
	add.64*     %r19782 <- %r19777, %r19781
	store.64*   %r19776 -> 0[%r19782]
	symaddr.64* %r19783 <- <anon symbol:0x62d001586a70>
	symaddr.64* %r19784 <- luaX_tokens
	load.32     %r19785 <- 0[i]
	add.32      %r19786 <- %r19785, $1
	store.32    %r19786 -> 0[i]
	scast.64    %r19787 <- (32) %r19785
	muls.64     %r19788 <- %r19787, $8
	add.64*     %r19789 <- %r19784, %r19788
	store.64*   %r19783 -> 0[%r19789]
	symaddr.64* %r19790 <- <anon symbol:0x62d0015870c8>
	symaddr.64* %r19791 <- luaX_tokens
	load.32     %r19792 <- 0[i]
	add.32      %r19793 <- %r19792, $1
	store.32    %r19793 -> 0[i]
	scast.64    %r19794 <- (32) %r19792
	muls.64     %r19795 <- %r19794, $8
	add.64*     %r19796 <- %r19791, %r19795
	store.64*   %r19790 -> 0[%r19796]
	symaddr.64* %r19797 <- <anon symbol:0x62d001587720>
	symaddr.64* %r19798 <- luaX_tokens
	load.32     %r19799 <- 0[i]
	add.32      %r19800 <- %r19799, $1
	store.32    %r19800 -> 0[i]
	scast.64    %r19801 <- (32) %r19799
	muls.64     %r19802 <- %r19801, $8
	add.64*     %r19803 <- %r19798, %r19802
	store.64*   %r19797 -> 0[%r19803]
	symaddr.64* %r19804 <- <anon symbol:0x62d001587d78>
	symaddr.64* %r19805 <- luaX_tokens
	load.32     %r19806 <- 0[i]
	add.32      %r19807 <- %r19806, $1
	store.32    %r19807 -> 0[i]
	scast.64    %r19808 <- (32) %r19806
	muls.64     %r19809 <- %r19808, $8
	add.64*     %r19810 <- %r19805, %r19809
	store.64*   %r19804 -> 0[%r19810]
	symaddr.64* %r19811 <- <anon symbol:0x62d0015883d0>
	symaddr.64* %r19812 <- luaX_tokens
	load.32     %r19813 <- 0[i]
	add.32      %r19814 <- %r19813, $1
	store.32    %r19814 -> 0[i]
	scast.64    %r19815 <- (32) %r19813
	muls.64     %r19816 <- %r19815, $8
	add.64*     %r19817 <- %r19812, %r19816
	store.64*   %r19811 -> 0[%r19817]
	symaddr.64* %r19818 <- <anon symbol:0x62d001588a28>
	symaddr.64* %r19819 <- luaX_tokens
	load.32     %r19820 <- 0[i]
	add.32      %r19821 <- %r19820, $1
	store.32    %r19821 -> 0[i]
	scast.64    %r19822 <- (32) %r19820
	muls.64     %r19823 <- %r19822, $8
	add.64*     %r19824 <- %r19819, %r19823
	store.64*   %r19818 -> 0[%r19824]
	symaddr.64* %r19825 <- <anon symbol:0x62d001589080>
	symaddr.64* %r19826 <- luaX_tokens
	load.32     %r19827 <- 0[i]
	add.32      %r19828 <- %r19827, $1
	store.32    %r19828 -> 0[i]
	scast.64    %r19829 <- (32) %r19827
	muls.64     %r19830 <- %r19829, $8
	add.64*     %r19831 <- %r19826, %r19830
	store.64*   %r19825 -> 0[%r19831]
	symaddr.64* %r19832 <- <anon symbol:0x62d0015896d8>
	symaddr.64* %r19833 <- luaX_tokens
	load.32     %r19834 <- 0[i]
	add.32      %r19835 <- %r19834, $1
	store.32    %r19835 -> 0[i]
	scast.64    %r19836 <- (32) %r19834
	muls.64     %r19837 <- %r19836, $8
	add.64*     %r19838 <- %r19833, %r19837
	store.64*   %r19832 -> 0[%r19838]
	symaddr.64* %r19839 <- <anon symbol:0x62d001589d30>
	symaddr.64* %r19840 <- luaX_tokens
	load.32     %r19841 <- 0[i]
	add.32      %r19842 <- %r19841, $1
	store.32    %r19842 -> 0[i]
	scast.64    %r19843 <- (32) %r19841
	muls.64     %r19844 <- %r19843, $8
	add.64*     %r19845 <- %r19840, %r19844
	store.64*   %r19839 -> 0[%r19845]
	symaddr.64* %r19846 <- <anon symbol:0x62d00158a388>
	symaddr.64* %r19847 <- luaX_tokens
	load.32     %r19848 <- 0[i]
	add.32      %r19849 <- %r19848, $1
	store.32    %r19849 -> 0[i]
	scast.64    %r19850 <- (32) %r19848
	muls.64     %r19851 <- %r19850, $8
	add.64*     %r19852 <- %r19847, %r19851
	store.64*   %r19846 -> 0[%r19852]
	symaddr.64* %r19853 <- <anon symbol:0x62d00158a9e0>
	symaddr.64* %r19854 <- luaX_tokens
	load.32     %r19855 <- 0[i]
	add.32      %r19856 <- %r19855, $1
	store.32    %r19856 -> 0[i]
	scast.64    %r19857 <- (32) %r19855
	muls.64     %r19858 <- %r19857, $8
	add.64*     %r19859 <- %r19854, %r19858
	store.64*   %r19853 -> 0[%r19859]
	symaddr.64* %r19860 <- <anon symbol:0x62d00158b038>
	symaddr.64* %r19861 <- luaX_tokens
	load.32     %r19862 <- 0[i]
	add.32      %r19863 <- %r19862, $1
	store.32    %r19863 -> 0[i]
	scast.64    %r19864 <- (32) %r19862
	muls.64     %r19865 <- %r19864, $8
	add.64*     %r19866 <- %r19861, %r19865
	store.64*   %r19860 -> 0[%r19866]
	symaddr.64* %r19867 <- <anon symbol:0x62d00158b690>
	symaddr.64* %r19868 <- luaX_tokens
	load.32     %r19869 <- 0[i]
	add.32      %r19870 <- %r19869, $1
	store.32    %r19870 -> 0[i]
	scast.64    %r19871 <- (32) %r19869
	muls.64     %r19872 <- %r19871, $8
	add.64*     %r19873 <- %r19868, %r19872
	store.64*   %r19867 -> 0[%r19873]
	symaddr.64* %r19874 <- luaX_tokens
	load.32     %r19875 <- 0[i]
	add.32      %r19876 <- %r19875, $1
	store.32    %r19876 -> 0[i]
	scast.64    %r19877 <- (32) %r19875
	muls.64     %r19878 <- %r19877, $8
	add.64*     %r19879 <- %r19874, %r19878
	store.64*   $0 -> 0[%r19879]
	store.32    $0 -> 0[i]
	symaddr.64* %r19880 <- priority
	load.32     %r19881 <- 0[i]
	scast.64    %r19882 <- (32) %r19881
	muls.64     %r19883 <- %r19882, $2
	add.64*     %r19884 <- %r19880, %r19883
	store.8     $6 -> 0[%r19884]
	symaddr.64* %r19885 <- priority
	load.32     %r19886 <- 0[i]
	add.32      %r19887 <- %r19886, $1
	store.32    %r19887 -> 0[i]
	scast.64    %r19888 <- (32) %r19886
	muls.64     %r19889 <- %r19888, $2
	add.64*     %r19890 <- %r19885, %r19889
	store.8     $6 -> 1[%r19890]
	symaddr.64* %r19891 <- priority
	load.32     %r19892 <- 0[i]
	scast.64    %r19893 <- (32) %r19892
	muls.64     %r19894 <- %r19893, $2
	add.64*     %r19895 <- %r19891, %r19894
	store.8     $6 -> 0[%r19895]
	symaddr.64* %r19896 <- priority
	load.32     %r19897 <- 0[i]
	add.32      %r19898 <- %r19897, $1
	store.32    %r19898 -> 0[i]
	scast.64    %r19899 <- (32) %r19897
	muls.64     %r19900 <- %r19899, $2
	add.64*     %r19901 <- %r19896, %r19900
	store.8     $6 -> 1[%r19901]
	symaddr.64* %r19902 <- priority
	load.32     %r19903 <- 0[i]
	scast.64    %r19904 <- (32) %r19903
	muls.64     %r19905 <- %r19904, $2
	add.64*     %r19906 <- %r19902, %r19905
	store.8     $7 -> 0[%r19906]
	symaddr.64* %r19907 <- priority
	load.32     %r19908 <- 0[i]
	add.32      %r19909 <- %r19908, $1
	store.32    %r19909 -> 0[i]
	scast.64    %r19910 <- (32) %r19908
	muls.64     %r19911 <- %r19910, $2
	add.64*     %r19912 <- %r19907, %r19911
	store.8     $7 -> 1[%r19912]
	symaddr.64* %r19913 <- priority
	load.32     %r19914 <- 0[i]
	scast.64    %r19915 <- (32) %r19914
	muls.64     %r19916 <- %r19915, $2
	add.64*     %r19917 <- %r19913, %r19916
	store.8     $7 -> 0[%r19917]
	symaddr.64* %r19918 <- priority
	load.32     %r19919 <- 0[i]
	add.32      %r19920 <- %r19919, $1
	store.32    %r19920 -> 0[i]
	scast.64    %r19921 <- (32) %r19919
	muls.64     %r19922 <- %r19921, $2
	add.64*     %r19923 <- %r19918, %r19922
	store.8     $7 -> 1[%r19923]
	symaddr.64* %r19924 <- priority
	load.32     %r19925 <- 0[i]
	scast.64    %r19926 <- (32) %r19925
	muls.64     %r19927 <- %r19926, $2
	add.64*     %r19928 <- %r19924, %r19927
	store.8     $7 -> 0[%r19928]
	symaddr.64* %r19929 <- priority
	load.32     %r19930 <- 0[i]
	add.32      %r19931 <- %r19930, $1
	store.32    %r19931 -> 0[i]
	scast.64    %r19932 <- (32) %r19930
	muls.64     %r19933 <- %r19932, $2
	add.64*     %r19934 <- %r19929, %r19933
	store.8     $7 -> 1[%r19934]
	symaddr.64* %r19935 <- priority
	load.32     %r19936 <- 0[i]
	scast.64    %r19937 <- (32) %r19936
	muls.64     %r19938 <- %r19937, $2
	add.64*     %r19939 <- %r19935, %r19938
	store.8     $10 -> 0[%r19939]
	symaddr.64* %r19940 <- priority
	load.32     %r19941 <- 0[i]
	add.32      %r19942 <- %r19941, $1
	store.32    %r19942 -> 0[i]
	scast.64    %r19943 <- (32) %r19941
	muls.64     %r19944 <- %r19943, $2
	add.64*     %r19945 <- %r19940, %r19944
	store.8     $9 -> 1[%r19945]
	symaddr.64* %r19946 <- priority
	load.32     %r19947 <- 0[i]
	scast.64    %r19948 <- (32) %r19947
	muls.64     %r19949 <- %r19948, $2
	add.64*     %r19950 <- %r19946, %r19949
	store.8     $5 -> 0[%r19950]
	symaddr.64* %r19951 <- priority
	load.32     %r19952 <- 0[i]
	add.32      %r19953 <- %r19952, $1
	store.32    %r19953 -> 0[i]
	scast.64    %r19954 <- (32) %r19952
	muls.64     %r19955 <- %r19954, $2
	add.64*     %r19956 <- %r19951, %r19955
	store.8     $4 -> 1[%r19956]
	symaddr.64* %r19957 <- priority
	load.32     %r19958 <- 0[i]
	scast.64    %r19959 <- (32) %r19958
	muls.64     %r19960 <- %r19959, $2
	add.64*     %r19961 <- %r19957, %r19960
	store.8     $3 -> 0[%r19961]
	symaddr.64* %r19962 <- priority
	load.32     %r19963 <- 0[i]
	add.32      %r19964 <- %r19963, $1
	store.32    %r19964 -> 0[i]
	scast.64    %r19965 <- (32) %r19963
	muls.64     %r19966 <- %r19965, $2
	add.64*     %r19967 <- %r19962, %r19966
	store.8     $3 -> 1[%r19967]
	symaddr.64* %r19968 <- priority
	load.32     %r19969 <- 0[i]
	scast.64    %r19970 <- (32) %r19969
	muls.64     %r19971 <- %r19970, $2
	add.64*     %r19972 <- %r19968, %r19971
	store.8     $3 -> 0[%r19972]
	symaddr.64* %r19973 <- priority
	load.32     %r19974 <- 0[i]
	add.32      %r19975 <- %r19974, $1
	store.32    %r19975 -> 0[i]
	scast.64    %r19976 <- (32) %r19974
	muls.64     %r19977 <- %r19976, $2
	add.64*     %r19978 <- %r19973, %r19977
	store.8     $3 -> 1[%r19978]
	symaddr.64* %r19979 <- priority
	load.32     %r19980 <- 0[i]
	scast.64    %r19981 <- (32) %r19980
	muls.64     %r19982 <- %r19981, $2
	add.64*     %r19983 <- %r19979, %r19982
	store.8     $3 -> 0[%r19983]
	symaddr.64* %r19984 <- priority
	load.32     %r19985 <- 0[i]
	add.32      %r19986 <- %r19985, $1
	store.32    %r19986 -> 0[i]
	scast.64    %r19987 <- (32) %r19985
	muls.64     %r19988 <- %r19987, $2
	add.64*     %r19989 <- %r19984, %r19988
	store.8     $3 -> 1[%r19989]
	symaddr.64* %r19990 <- priority
	load.32     %r19991 <- 0[i]
	scast.64    %r19992 <- (32) %r19991
	muls.64     %r19993 <- %r19992, $2
	add.64*     %r19994 <- %r19990, %r19993
	store.8     $3 -> 0[%r19994]
	symaddr.64* %r19995 <- priority
	load.32     %r19996 <- 0[i]
	add.32      %r19997 <- %r19996, $1
	store.32    %r19997 -> 0[i]
	scast.64    %r19998 <- (32) %r19996
	muls.64     %r19999 <- %r19998, $2
	add.64*     %r20000 <- %r19995, %r19999
	store.8     $3 -> 1[%r20000]
	symaddr.64* %r20001 <- priority
	load.32     %r20002 <- 0[i]
	scast.64    %r20003 <- (32) %r20002
	muls.64     %r20004 <- %r20003, $2
	add.64*     %r20005 <- %r20001, %r20004
	store.8     $3 -> 0[%r20005]
	symaddr.64* %r20006 <- priority
	load.32     %r20007 <- 0[i]
	add.32      %r20008 <- %r20007, $1
	store.32    %r20008 -> 0[i]
	scast.64    %r20009 <- (32) %r20007
	muls.64     %r20010 <- %r20009, $2
	add.64*     %r20011 <- %r20006, %r20010
	store.8     $3 -> 1[%r20011]
	symaddr.64* %r20012 <- priority
	load.32     %r20013 <- 0[i]
	scast.64    %r20014 <- (32) %r20013
	muls.64     %r20015 <- %r20014, $2
	add.64*     %r20016 <- %r20012, %r20015
	store.8     $3 -> 0[%r20016]
	symaddr.64* %r20017 <- priority
	load.32     %r20018 <- 0[i]
	add.32      %r20019 <- %r20018, $1
	store.32    %r20019 -> 0[i]
	scast.64    %r20020 <- (32) %r20018
	muls.64     %r20021 <- %r20020, $2
	add.64*     %r20022 <- %r20017, %r20021
	store.8     $3 -> 1[%r20022]
	symaddr.64* %r20023 <- priority
	load.32     %r20024 <- 0[i]
	scast.64    %r20025 <- (32) %r20024
	muls.64     %r20026 <- %r20025, $2
	add.64*     %r20027 <- %r20023, %r20026
	store.8     $2 -> 0[%r20027]
	symaddr.64* %r20028 <- priority
	load.32     %r20029 <- 0[i]
	add.32      %r20030 <- %r20029, $1
	store.32    %r20030 -> 0[i]
	scast.64    %r20031 <- (32) %r20029
	muls.64     %r20032 <- %r20031, $2
	add.64*     %r20033 <- %r20028, %r20032
	store.8     $2 -> 1[%r20033]
	symaddr.64* %r20034 <- priority
	load.32     %r20035 <- 0[i]
	scast.64    %r20036 <- (32) %r20035
	muls.64     %r20037 <- %r20036, $2
	add.64*     %r20038 <- %r20034, %r20037
	store.8     $1 -> 0[%r20038]
	symaddr.64* %r20039 <- priority
	load.32     %r20040 <- 0[i]
	add.32      %r20041 <- %r20040, $1
	store.32    %r20041 -> 0[i]
	scast.64    %r20042 <- (32) %r20040
	muls.64     %r20043 <- %r20042, $2
	add.64*     %r20044 <- %r20039, %r20043
	store.8     $1 -> 1[%r20044]
	store.32    $0 -> 0[i]
	symaddr.64* %r20045 <- <anon symbol:0x62d001593168>
	symaddr.64* %r20046 <- base_funcs
	load.32     %r20047 <- 0[i]
	scast.64    %r20048 <- (32) %r20047
	muls.64     %r20049 <- %r20048, $16
	add.64*     %r20050 <- %r20046, %r20049
	store.64*   %r20045 -> 0[%r20050]
	symaddr.64* %r20051 <- luaB_assert
	symaddr.64* %r20052 <- base_funcs
	load.32     %r20053 <- 0[i]
	scast.64    %r20054 <- (32) %r20053
	muls.64     %r20055 <- %r20054, $16
	add.64*     %r20056 <- %r20052, %r20055
	store.64*   %r20051 -> 8[%r20056]
	load.32     %r20057 <- 0[i]
	add.32      %r20058 <- %r20057, $1
	store.32    %r20058 -> 0[i]
	symaddr.64* %r20059 <- <anon symbol:0x62d001593c48>
	symaddr.64* %r20060 <- base_funcs
	load.32     %r20061 <- 0[i]
	scast.64    %r20062 <- (32) %r20061
	muls.64     %r20063 <- %r20062, $16
	add.64*     %r20064 <- %r20060, %r20063
	store.64*   %r20059 -> 0[%r20064]
	symaddr.64* %r20065 <- luaB_error
	symaddr.64* %r20066 <- base_funcs
	load.32     %r20067 <- 0[i]
	scast.64    %r20068 <- (32) %r20067
	muls.64     %r20069 <- %r20068, $16
	add.64*     %r20070 <- %r20066, %r20069
	store.64*   %r20065 -> 8[%r20070]
	load.32     %r20071 <- 0[i]
	add.32      %r20072 <- %r20071, $1
	store.32    %r20072 -> 0[i]
	symaddr.64* %r20073 <- <anon symbol:0x62d001594728>
	symaddr.64* %r20074 <- base_funcs
	load.32     %r20075 <- 0[i]
	scast.64    %r20076 <- (32) %r20075
	muls.64     %r20077 <- %r20076, $16
	add.64*     %r20078 <- %r20074, %r20077
	store.64*   %r20073 -> 0[%r20078]
	symaddr.64* %r20079 <- luaB_loadfile
	symaddr.64* %r20080 <- base_funcs
	load.32     %r20081 <- 0[i]
	scast.64    %r20082 <- (32) %r20081
	muls.64     %r20083 <- %r20082, $16
	add.64*     %r20084 <- %r20080, %r20083
	store.64*   %r20079 -> 8[%r20084]
	load.32     %r20085 <- 0[i]
	add.32      %r20086 <- %r20085, $1
	store.32    %r20086 -> 0[i]
	symaddr.64* %r20087 <- <anon symbol:0x62d001595208>
	symaddr.64* %r20088 <- base_funcs
	load.32     %r20089 <- 0[i]
	scast.64    %r20090 <- (32) %r20089
	muls.64     %r20091 <- %r20090, $16
	add.64*     %r20092 <- %r20088, %r20091
	store.64*   %r20087 -> 0[%r20092]
	symaddr.64* %r20093 <- luaB_loadstring
	symaddr.64* %r20094 <- base_funcs
	load.32     %r20095 <- 0[i]
	scast.64    %r20096 <- (32) %r20095
	muls.64     %r20097 <- %r20096, $16
	add.64*     %r20098 <- %r20094, %r20097
	store.64*   %r20093 -> 8[%r20098]
	load.32     %r20099 <- 0[i]
	add.32      %r20100 <- %r20099, $1
	store.32    %r20100 -> 0[i]
	symaddr.64* %r20101 <- <anon symbol:0x62d001595ce8>
	symaddr.64* %r20102 <- base_funcs
	load.32     %r20103 <- 0[i]
	scast.64    %r20104 <- (32) %r20103
	muls.64     %r20105 <- %r20104, $16
	add.64*     %r20106 <- %r20102, %r20105
	store.64*   %r20101 -> 0[%r20106]
	symaddr.64* %r20107 <- luaB_next
	symaddr.64* %r20108 <- base_funcs
	load.32     %r20109 <- 0[i]
	scast.64    %r20110 <- (32) %r20109
	muls.64     %r20111 <- %r20110, $16
	add.64*     %r20112 <- %r20108, %r20111
	store.64*   %r20107 -> 8[%r20112]
	load.32     %r20113 <- 0[i]
	add.32      %r20114 <- %r20113, $1
	store.32    %r20114 -> 0[i]
	symaddr.64* %r20115 <- <anon symbol:0x62d0015967c8>
	symaddr.64* %r20116 <- base_funcs
	load.32     %r20117 <- 0[i]
	scast.64    %r20118 <- (32) %r20117
	muls.64     %r20119 <- %r20118, $16
	add.64*     %r20120 <- %r20116, %r20119
	store.64*   %r20115 -> 0[%r20120]
	symaddr.64* %r20121 <- luaB_pcall
	symaddr.64* %r20122 <- base_funcs
	load.32     %r20123 <- 0[i]
	scast.64    %r20124 <- (32) %r20123
	muls.64     %r20125 <- %r20124, $16
	add.64*     %r20126 <- %r20122, %r20125
	store.64*   %r20121 -> 8[%r20126]
	load.32     %r20127 <- 0[i]
	add.32      %r20128 <- %r20127, $1
	store.32    %r20128 -> 0[i]
	symaddr.64* %r20129 <- <anon symbol:0x62d0015972a8>
	symaddr.64* %r20130 <- base_funcs
	load.32     %r20131 <- 0[i]
	scast.64    %r20132 <- (32) %r20131
	muls.64     %r20133 <- %r20132, $16
	add.64*     %r20134 <- %r20130, %r20133
	store.64*   %r20129 -> 0[%r20134]
	symaddr.64* %r20135 <- luaB_rawget
	symaddr.64* %r20136 <- base_funcs
	load.32     %r20137 <- 0[i]
	scast.64    %r20138 <- (32) %r20137
	muls.64     %r20139 <- %r20138, $16
	add.64*     %r20140 <- %r20136, %r20139
	store.64*   %r20135 -> 8[%r20140]
	load.32     %r20141 <- 0[i]
	add.32      %r20142 <- %r20141, $1
	store.32    %r20142 -> 0[i]
	symaddr.64* %r20143 <- <anon symbol:0x62d001597d88>
	symaddr.64* %r20144 <- base_funcs
	load.32     %r20145 <- 0[i]
	scast.64    %r20146 <- (32) %r20145
	muls.64     %r20147 <- %r20146, $16
	add.64*     %r20148 <- %r20144, %r20147
	store.64*   %r20143 -> 0[%r20148]
	symaddr.64* %r20149 <- luaB_setfenv
	symaddr.64* %r20150 <- base_funcs
	load.32     %r20151 <- 0[i]
	scast.64    %r20152 <- (32) %r20151
	muls.64     %r20153 <- %r20152, $16
	add.64*     %r20154 <- %r20150, %r20153
	store.64*   %r20149 -> 8[%r20154]
	load.32     %r20155 <- 0[i]
	add.32      %r20156 <- %r20155, $1
	store.32    %r20156 -> 0[i]
	symaddr.64* %r20157 <- <anon symbol:0x62d0015a48a0>
	symaddr.64* %r20158 <- base_funcs
	load.32     %r20159 <- 0[i]
	scast.64    %r20160 <- (32) %r20159
	muls.64     %r20161 <- %r20160, $16
	add.64*     %r20162 <- %r20158, %r20161
	store.64*   %r20157 -> 0[%r20162]
	symaddr.64* %r20163 <- luaB_setmetatable
	symaddr.64* %r20164 <- base_funcs
	load.32     %r20165 <- 0[i]
	scast.64    %r20166 <- (32) %r20165
	muls.64     %r20167 <- %r20166, $16
	add.64*     %r20168 <- %r20164, %r20167
	store.64*   %r20163 -> 8[%r20168]
	load.32     %r20169 <- 0[i]
	add.32      %r20170 <- %r20169, $1
	store.32    %r20170 -> 0[i]
	symaddr.64* %r20171 <- <anon symbol:0x62d0015a5380>
	symaddr.64* %r20172 <- base_funcs
	load.32     %r20173 <- 0[i]
	scast.64    %r20174 <- (32) %r20173
	muls.64     %r20175 <- %r20174, $16
	add.64*     %r20176 <- %r20172, %r20175
	store.64*   %r20171 -> 0[%r20176]
	symaddr.64* %r20177 <- luaB_tonumber
	symaddr.64* %r20178 <- base_funcs
	load.32     %r20179 <- 0[i]
	scast.64    %r20180 <- (32) %r20179
	muls.64     %r20181 <- %r20180, $16
	add.64*     %r20182 <- %r20178, %r20181
	store.64*   %r20177 -> 8[%r20182]
	load.32     %r20183 <- 0[i]
	add.32      %r20184 <- %r20183, $1
	store.32    %r20184 -> 0[i]
	symaddr.64* %r20185 <- <anon symbol:0x62d0015a5e60>
	symaddr.64* %r20186 <- base_funcs
	load.32     %r20187 <- 0[i]
	scast.64    %r20188 <- (32) %r20187
	muls.64     %r20189 <- %r20188, $16
	add.64*     %r20190 <- %r20186, %r20189
	store.64*   %r20185 -> 0[%r20190]
	symaddr.64* %r20191 <- luaB_type
	symaddr.64* %r20192 <- base_funcs
	load.32     %r20193 <- 0[i]
	scast.64    %r20194 <- (32) %r20193
	muls.64     %r20195 <- %r20194, $16
	add.64*     %r20196 <- %r20192, %r20195
	store.64*   %r20191 -> 8[%r20196]
	load.32     %r20197 <- 0[i]
	add.32      %r20198 <- %r20197, $1
	store.32    %r20198 -> 0[i]
	symaddr.64* %r20199 <- <anon symbol:0x62d0015a6940>
	symaddr.64* %r20200 <- base_funcs
	load.32     %r20201 <- 0[i]
	scast.64    %r20202 <- (32) %r20201
	muls.64     %r20203 <- %r20202, $16
	add.64*     %r20204 <- %r20200, %r20203
	store.64*   %r20199 -> 0[%r20204]
	symaddr.64* %r20205 <- luaB_unpack
	symaddr.64* %r20206 <- base_funcs
	load.32     %r20207 <- 0[i]
	scast.64    %r20208 <- (32) %r20207
	muls.64     %r20209 <- %r20208, $16
	add.64*     %r20210 <- %r20206, %r20209
	store.64*   %r20205 -> 8[%r20210]
	load.32     %r20211 <- 0[i]
	add.32      %r20212 <- %r20211, $1
	store.32    %r20212 -> 0[i]
	symaddr.64* %r20213 <- base_funcs
	load.32     %r20214 <- 0[i]
	scast.64    %r20215 <- (32) %r20214
	muls.64     %r20216 <- %r20215, $16
	add.64*     %r20217 <- %r20213, %r20216
	store.64*   $0 -> 0[%r20217]
	symaddr.64* %r20218 <- base_funcs
	load.32     %r20219 <- 0[i]
	scast.64    %r20220 <- (32) %r20219
	muls.64     %r20221 <- %r20220, $16
	add.64*     %r20222 <- %r20218, %r20221
	store.64*   $0 -> 8[%r20222]
	store.32    $0 -> 0[i]
	symaddr.64* %r20223 <- <anon symbol:0x62d0015a7990>
	symaddr.64* %r20224 <- tab_funcs
	load.32     %r20225 <- 0[i]
	scast.64    %r20226 <- (32) %r20225
	muls.64     %r20227 <- %r20226, $16
	add.64*     %r20228 <- %r20224, %r20227
	store.64*   %r20223 -> 0[%r20228]
	symaddr.64* %r20229 <- tconcat
	symaddr.64* %r20230 <- tab_funcs
	load.32     %r20231 <- 0[i]
	scast.64    %r20232 <- (32) %r20231
	muls.64     %r20233 <- %r20232, $16
	add.64*     %r20234 <- %r20230, %r20233
	store.64*   %r20229 -> 8[%r20234]
	load.32     %r20235 <- 0[i]
	add.32      %r20236 <- %r20235, $1
	store.32    %r20236 -> 0[i]
	symaddr.64* %r20237 <- <anon symbol:0x62d0015a8470>
	symaddr.64* %r20238 <- tab_funcs
	load.32     %r20239 <- 0[i]
	scast.64    %r20240 <- (32) %r20239
	muls.64     %r20241 <- %r20240, $16
	add.64*     %r20242 <- %r20238, %r20241
	store.64*   %r20237 -> 0[%r20242]
	symaddr.64* %r20243 <- tinsert
	symaddr.64* %r20244 <- tab_funcs
	load.32     %r20245 <- 0[i]
	scast.64    %r20246 <- (32) %r20245
	muls.64     %r20247 <- %r20246, $16
	add.64*     %r20248 <- %r20244, %r20247
	store.64*   %r20243 -> 8[%r20248]
	load.32     %r20249 <- 0[i]
	add.32      %r20250 <- %r20249, $1
	store.32    %r20250 -> 0[i]
	symaddr.64* %r20251 <- <anon symbol:0x62d0015a8f50>
	symaddr.64* %r20252 <- tab_funcs
	load.32     %r20253 <- 0[i]
	scast.64    %r20254 <- (32) %r20253
	muls.64     %r20255 <- %r20254, $16
	add.64*     %r20256 <- %r20252, %r20255
	store.64*   %r20251 -> 0[%r20256]
	symaddr.64* %r20257 <- tremove
	symaddr.64* %r20258 <- tab_funcs
	load.32     %r20259 <- 0[i]
	scast.64    %r20260 <- (32) %r20259
	muls.64     %r20261 <- %r20260, $16
	add.64*     %r20262 <- %r20258, %r20261
	store.64*   %r20257 -> 8[%r20262]
	load.32     %r20263 <- 0[i]
	add.32      %r20264 <- %r20263, $1
	store.32    %r20264 -> 0[i]
	symaddr.64* %r20265 <- <anon symbol:0x62d0015a9a30>
	symaddr.64* %r20266 <- tab_funcs
	load.32     %r20267 <- 0[i]
	scast.64    %r20268 <- (32) %r20267
	muls.64     %r20269 <- %r20268, $16
	add.64*     %r20270 <- %r20266, %r20269
	store.64*   %r20265 -> 0[%r20270]
	symaddr.64* %r20271 <- sort
	symaddr.64* %r20272 <- tab_funcs
	load.32     %r20273 <- 0[i]
	scast.64    %r20274 <- (32) %r20273
	muls.64     %r20275 <- %r20274, $16
	add.64*     %r20276 <- %r20272, %r20275
	store.64*   %r20271 -> 8[%r20276]
	load.32     %r20277 <- 0[i]
	add.32      %r20278 <- %r20277, $1
	store.32    %r20278 -> 0[i]
	symaddr.64* %r20279 <- tab_funcs
	load.32     %r20280 <- 0[i]
	scast.64    %r20281 <- (32) %r20280
	muls.64     %r20282 <- %r20281, $16
	add.64*     %r20283 <- %r20279, %r20282
	store.64*   $0 -> 0[%r20283]
	symaddr.64* %r20284 <- tab_funcs
	load.32     %r20285 <- 0[i]
	scast.64    %r20286 <- (32) %r20285
	muls.64     %r20287 <- %r20286, $16
	add.64*     %r20288 <- %r20284, %r20287
	store.64*   $0 -> 8[%r20288]
	symaddr.64* %r20289 <- <anon symbol:0x62d0015aaa80>
	store.64*   %r20289 -> 0[fnames]
	symaddr.64* %r20290 <- <anon symbol:0x62d0015ab0d8>
	store.64*   %r20290 -> 8[fnames]
	store.32    $0 -> 0[i]
	symaddr.64* %r20291 <- <anon symbol:0x62d0015ab730>
	symaddr.64* %r20292 <- iolib
	load.32     %r20293 <- 0[i]
	scast.64    %r20294 <- (32) %r20293
	muls.64     %r20295 <- %r20294, $16
	add.64*     %r20296 <- %r20292, %r20295
	store.64*   %r20291 -> 0[%r20296]
	symaddr.64* %r20297 <- io_close
	symaddr.64* %r20298 <- iolib
	load.32     %r20299 <- 0[i]
	scast.64    %r20300 <- (32) %r20299
	muls.64     %r20301 <- %r20300, $16
	add.64*     %r20302 <- %r20298, %r20301
	store.64*   %r20297 -> 8[%r20302]
	load.32     %r20303 <- 0[i]
	add.32      %r20304 <- %r20303, $1
	store.32    %r20304 -> 0[i]
	symaddr.64* %r20305 <- <anon symbol:0x62d0015ac210>
	symaddr.64* %r20306 <- iolib
	load.32     %r20307 <- 0[i]
	scast.64    %r20308 <- (32) %r20307
	muls.64     %r20309 <- %r20308, $16
	add.64*     %r20310 <- %r20306, %r20309
	store.64*   %r20305 -> 0[%r20310]
	symaddr.64* %r20311 <- io_flush
	symaddr.64* %r20312 <- iolib
	load.32     %r20313 <- 0[i]
	scast.64    %r20314 <- (32) %r20313
	muls.64     %r20315 <- %r20314, $16
	add.64*     %r20316 <- %r20312, %r20315
	store.64*   %r20311 -> 8[%r20316]
	load.32     %r20317 <- 0[i]
	add.32      %r20318 <- %r20317, $1
	store.32    %r20318 -> 0[i]
	symaddr.64* %r20319 <- <anon symbol:0x62d0015aed28>
	symaddr.64* %r20320 <- iolib
	load.32     %r20321 <- 0[i]
	scast.64    %r20322 <- (32) %r20321
	muls.64     %r20323 <- %r20322, $16
	add.64*     %r20324 <- %r20320, %r20323
	store.64*   %r20319 -> 0[%r20324]
	symaddr.64* %r20325 <- io_input
	symaddr.64* %r20326 <- iolib
	load.32     %r20327 <- 0[i]
	scast.64    %r20328 <- (32) %r20327
	muls.64     %r20329 <- %r20328, $16
	add.64*     %r20330 <- %r20326, %r20329
	store.64*   %r20325 -> 8[%r20330]
	load.32     %r20331 <- 0[i]
	add.32      %r20332 <- %r20331, $1
	store.32    %r20332 -> 0[i]
	symaddr.64* %r20333 <- <anon symbol:0x62d0015af808>
	symaddr.64* %r20334 <- iolib
	load.32     %r20335 <- 0[i]
	scast.64    %r20336 <- (32) %r20335
	muls.64     %r20337 <- %r20336, $16
	add.64*     %r20338 <- %r20334, %r20337
	store.64*   %r20333 -> 0[%r20338]
	symaddr.64* %r20339 <- io_lines
	symaddr.64* %r20340 <- iolib
	load.32     %r20341 <- 0[i]
	scast.64    %r20342 <- (32) %r20341
	muls.64     %r20343 <- %r20342, $16
	add.64*     %r20344 <- %r20340, %r20343
	store.64*   %r20339 -> 8[%r20344]
	load.32     %r20345 <- 0[i]
	add.32      %r20346 <- %r20345, $1
	store.32    %r20346 -> 0[i]
	symaddr.64* %r20347 <- <anon symbol:0x62d0015b02e8>
	symaddr.64* %r20348 <- iolib
	load.32     %r20349 <- 0[i]
	scast.64    %r20350 <- (32) %r20349
	muls.64     %r20351 <- %r20350, $16
	add.64*     %r20352 <- %r20348, %r20351
	store.64*   %r20347 -> 0[%r20352]
	symaddr.64* %r20353 <- io_open
	symaddr.64* %r20354 <- iolib
	load.32     %r20355 <- 0[i]
	scast.64    %r20356 <- (32) %r20355
	muls.64     %r20357 <- %r20356, $16
	add.64*     %r20358 <- %r20354, %r20357
	store.64*   %r20353 -> 8[%r20358]
	load.32     %r20359 <- 0[i]
	add.32      %r20360 <- %r20359, $1
	store.32    %r20360 -> 0[i]
	symaddr.64* %r20361 <- <anon symbol:0x62d0015b0dc8>
	symaddr.64* %r20362 <- iolib
	load.32     %r20363 <- 0[i]
	scast.64    %r20364 <- (32) %r20363
	muls.64     %r20365 <- %r20364, $16
	add.64*     %r20366 <- %r20362, %r20365
	store.64*   %r20361 -> 0[%r20366]
	symaddr.64* %r20367 <- io_output
	symaddr.64* %r20368 <- iolib
	load.32     %r20369 <- 0[i]
	scast.64    %r20370 <- (32) %r20369
	muls.64     %r20371 <- %r20370, $16
	add.64*     %r20372 <- %r20368, %r20371
	store.64*   %r20367 -> 8[%r20372]
	load.32     %r20373 <- 0[i]
	add.32      %r20374 <- %r20373, $1
	store.32    %r20374 -> 0[i]
	symaddr.64* %r20375 <- <anon symbol:0x62d0015b18a8>
	symaddr.64* %r20376 <- iolib
	load.32     %r20377 <- 0[i]
	scast.64    %r20378 <- (32) %r20377
	muls.64     %r20379 <- %r20378, $16
	add.64*     %r20380 <- %r20376, %r20379
	store.64*   %r20375 -> 0[%r20380]
	symaddr.64* %r20381 <- io_read
	symaddr.64* %r20382 <- iolib
	load.32     %r20383 <- 0[i]
	scast.64    %r20384 <- (32) %r20383
	muls.64     %r20385 <- %r20384, $16
	add.64*     %r20386 <- %r20382, %r20385
	store.64*   %r20381 -> 8[%r20386]
	load.32     %r20387 <- 0[i]
	add.32      %r20388 <- %r20387, $1
	store.32    %r20388 -> 0[i]
	symaddr.64* %r20389 <- <anon symbol:0x62d0015b2388>
	symaddr.64* %r20390 <- iolib
	load.32     %r20391 <- 0[i]
	scast.64    %r20392 <- (32) %r20391
	muls.64     %r20393 <- %r20392, $16
	add.64*     %r20394 <- %r20390, %r20393
	store.64*   %r20389 -> 0[%r20394]
	symaddr.64* %r20395 <- io_type
	symaddr.64* %r20396 <- iolib
	load.32     %r20397 <- 0[i]
	scast.64    %r20398 <- (32) %r20397
	muls.64     %r20399 <- %r20398, $16
	add.64*     %r20400 <- %r20396, %r20399
	store.64*   %r20395 -> 8[%r20400]
	load.32     %r20401 <- 0[i]
	add.32      %r20402 <- %r20401, $1
	store.32    %r20402 -> 0[i]
	symaddr.64* %r20403 <- <anon symbol:0x62d0015b2e68>
	symaddr.64* %r20404 <- iolib
	load.32     %r20405 <- 0[i]
	scast.64    %r20406 <- (32) %r20405
	muls.64     %r20407 <- %r20406, $16
	add.64*     %r20408 <- %r20404, %r20407
	store.64*   %r20403 -> 0[%r20408]
	symaddr.64* %r20409 <- io_write
	symaddr.64* %r20410 <- iolib
	load.32     %r20411 <- 0[i]
	scast.64    %r20412 <- (32) %r20411
	muls.64     %r20413 <- %r20412, $16
	add.64*     %r20414 <- %r20410, %r20413
	store.64*   %r20409 -> 8[%r20414]
	load.32     %r20415 <- 0[i]
	add.32      %r20416 <- %r20415, $1
	store.32    %r20416 -> 0[i]
	symaddr.64* %r20417 <- iolib
	load.32     %r20418 <- 0[i]
	scast.64    %r20419 <- (32) %r20418
	muls.64     %r20420 <- %r20419, $16
	add.64*     %r20421 <- %r20417, %r20420
	store.64*   $0 -> 0[%r20421]
	symaddr.64* %r20422 <- iolib
	load.32     %r20423 <- 0[i]
	scast.64    %r20424 <- (32) %r20423
	muls.64     %r20425 <- %r20424, $16
	add.64*     %r20426 <- %r20422, %r20425
	store.64*   $0 -> 8[%r20426]
	store.32    $0 -> 0[i]
	symaddr.64* %r20427 <- <anon symbol:0x62d0015b3eb8>
	symaddr.64* %r20428 <- flib
	load.32     %r20429 <- 0[i]
	scast.64    %r20430 <- (32) %r20429
	muls.64     %r20431 <- %r20430, $16
	add.64*     %r20432 <- %r20428, %r20431
	store.64*   %r20427 -> 0[%r20432]
	symaddr.64* %r20433 <- io_close
	symaddr.64* %r20434 <- flib
	load.32     %r20435 <- 0[i]
	scast.64    %r20436 <- (32) %r20435
	muls.64     %r20437 <- %r20436, $16
	add.64*     %r20438 <- %r20434, %r20437
	store.64*   %r20433 -> 8[%r20438]
	load.32     %r20439 <- 0[i]
	add.32      %r20440 <- %r20439, $1
	store.32    %r20440 -> 0[i]
	symaddr.64* %r20441 <- <anon symbol:0x62d0015b4998>
	symaddr.64* %r20442 <- flib
	load.32     %r20443 <- 0[i]
	scast.64    %r20444 <- (32) %r20443
	muls.64     %r20445 <- %r20444, $16
	add.64*     %r20446 <- %r20442, %r20445
	store.64*   %r20441 -> 0[%r20446]
	symaddr.64* %r20447 <- f_flush
	symaddr.64* %r20448 <- flib
	load.32     %r20449 <- 0[i]
	scast.64    %r20450 <- (32) %r20449
	muls.64     %r20451 <- %r20450, $16
	add.64*     %r20452 <- %r20448, %r20451
	store.64*   %r20447 -> 8[%r20452]
	load.32     %r20453 <- 0[i]
	add.32      %r20454 <- %r20453, $1
	store.32    %r20454 -> 0[i]
	symaddr.64* %r20455 <- <anon symbol:0x62d0015b5478>
	symaddr.64* %r20456 <- flib
	load.32     %r20457 <- 0[i]
	scast.64    %r20458 <- (32) %r20457
	muls.64     %r20459 <- %r20458, $16
	add.64*     %r20460 <- %r20456, %r20459
	store.64*   %r20455 -> 0[%r20460]
	symaddr.64* %r20461 <- f_lines
	symaddr.64* %r20462 <- flib
	load.32     %r20463 <- 0[i]
	scast.64    %r20464 <- (32) %r20463
	muls.64     %r20465 <- %r20464, $16
	add.64*     %r20466 <- %r20462, %r20465
	store.64*   %r20461 -> 8[%r20466]
	load.32     %r20467 <- 0[i]
	add.32      %r20468 <- %r20467, $1
	store.32    %r20468 -> 0[i]
	symaddr.64* %r20469 <- <anon symbol:0x62d0015b5f58>
	symaddr.64* %r20470 <- flib
	load.32     %r20471 <- 0[i]
	scast.64    %r20472 <- (32) %r20471
	muls.64     %r20473 <- %r20472, $16
	add.64*     %r20474 <- %r20470, %r20473
	store.64*   %r20469 -> 0[%r20474]
	symaddr.64* %r20475 <- f_read
	symaddr.64* %r20476 <- flib
	load.32     %r20477 <- 0[i]
	scast.64    %r20478 <- (32) %r20477
	muls.64     %r20479 <- %r20478, $16
	add.64*     %r20480 <- %r20476, %r20479
	store.64*   %r20475 -> 8[%r20480]
	load.32     %r20481 <- 0[i]
	add.32      %r20482 <- %r20481, $1
	store.32    %r20482 -> 0[i]
	symaddr.64* %r20483 <- <anon symbol:0x62d0015cca70>
	symaddr.64* %r20484 <- flib
	load.32     %r20485 <- 0[i]
	scast.64    %r20486 <- (32) %r20485
	muls.64     %r20487 <- %r20486, $16
	add.64*     %r20488 <- %r20484, %r20487
	store.64*   %r20483 -> 0[%r20488]
	symaddr.64* %r20489 <- f_write
	symaddr.64* %r20490 <- flib
	load.32     %r20491 <- 0[i]
	scast.64    %r20492 <- (32) %r20491
	muls.64     %r20493 <- %r20492, $16
	add.64*     %r20494 <- %r20490, %r20493
	store.64*   %r20489 -> 8[%r20494]
	load.32     %r20495 <- 0[i]
	add.32      %r20496 <- %r20495, $1
	store.32    %r20496 -> 0[i]
	symaddr.64* %r20497 <- <anon symbol:0x62d0015cd550>
	symaddr.64* %r20498 <- flib
	load.32     %r20499 <- 0[i]
	scast.64    %r20500 <- (32) %r20499
	muls.64     %r20501 <- %r20500, $16
	add.64*     %r20502 <- %r20498, %r20501
	store.64*   %r20497 -> 0[%r20502]
	symaddr.64* %r20503 <- io_gc
	symaddr.64* %r20504 <- flib
	load.32     %r20505 <- 0[i]
	scast.64    %r20506 <- (32) %r20505
	muls.64     %r20507 <- %r20506, $16
	add.64*     %r20508 <- %r20504, %r20507
	store.64*   %r20503 -> 8[%r20508]
	load.32     %r20509 <- 0[i]
	add.32      %r20510 <- %r20509, $1
	store.32    %r20510 -> 0[i]
	symaddr.64* %r20511 <- flib
	load.32     %r20512 <- 0[i]
	scast.64    %r20513 <- (32) %r20512
	muls.64     %r20514 <- %r20513, $16
	add.64*     %r20515 <- %r20511, %r20514
	store.64*   $0 -> 0[%r20515]
	symaddr.64* %r20516 <- flib
	load.32     %r20517 <- 0[i]
	scast.64    %r20518 <- (32) %r20517
	muls.64     %r20519 <- %r20518, $16
	add.64*     %r20520 <- %r20516, %r20519
	store.64*   $0 -> 8[%r20520]
	store.32    $0 -> 0[i]
	symaddr.64* %r20521 <- <anon symbol:0x62d0015ce5a0>
	symaddr.64* %r20522 <- syslib
	load.32     %r20523 <- 0[i]
	scast.64    %r20524 <- (32) %r20523
	muls.64     %r20525 <- %r20524, $16
	add.64*     %r20526 <- %r20522, %r20525
	store.64*   %r20521 -> 0[%r20526]
	symaddr.64* %r20527 <- os_exit
	symaddr.64* %r20528 <- syslib
	load.32     %r20529 <- 0[i]
	scast.64    %r20530 <- (32) %r20529
	muls.64     %r20531 <- %r20530, $16
	add.64*     %r20532 <- %r20528, %r20531
	store.64*   %r20527 -> 8[%r20532]
	load.32     %r20533 <- 0[i]
	add.32      %r20534 <- %r20533, $1
	store.32    %r20534 -> 0[i]
	symaddr.64* %r20535 <- <anon symbol:0x62d0015cf080>
	symaddr.64* %r20536 <- syslib
	load.32     %r20537 <- 0[i]
	scast.64    %r20538 <- (32) %r20537
	muls.64     %r20539 <- %r20538, $16
	add.64*     %r20540 <- %r20536, %r20539
	store.64*   %r20535 -> 0[%r20540]
	symaddr.64* %r20541 <- os_remove
	symaddr.64* %r20542 <- syslib
	load.32     %r20543 <- 0[i]
	scast.64    %r20544 <- (32) %r20543
	muls.64     %r20545 <- %r20544, $16
	add.64*     %r20546 <- %r20542, %r20545
	store.64*   %r20541 -> 8[%r20546]
	load.32     %r20547 <- 0[i]
	add.32      %r20548 <- %r20547, $1
	store.32    %r20548 -> 0[i]
	symaddr.64* %r20549 <- syslib
	load.32     %r20550 <- 0[i]
	scast.64    %r20551 <- (32) %r20550
	muls.64     %r20552 <- %r20551, $16
	add.64*     %r20553 <- %r20549, %r20552
	store.64*   $0 -> 0[%r20553]
	symaddr.64* %r20554 <- syslib
	load.32     %r20555 <- 0[i]
	scast.64    %r20556 <- (32) %r20555
	muls.64     %r20557 <- %r20556, $16
	add.64*     %r20558 <- %r20554, %r20557
	store.64*   $0 -> 8[%r20558]
	store.32    $0 -> 0[i]
	symaddr.64* %r20559 <- <anon symbol:0x62d0015d00d0>
	symaddr.64* %r20560 <- strlib
	load.32     %r20561 <- 0[i]
	scast.64    %r20562 <- (32) %r20561
	muls.64     %r20563 <- %r20562, $16
	add.64*     %r20564 <- %r20560, %r20563
	store.64*   %r20559 -> 0[%r20564]
	symaddr.64* %r20565 <- str_byte
	symaddr.64* %r20566 <- strlib
	load.32     %r20567 <- 0[i]
	scast.64    %r20568 <- (32) %r20567
	muls.64     %r20569 <- %r20568, $16
	add.64*     %r20570 <- %r20566, %r20569
	store.64*   %r20565 -> 8[%r20570]
	load.32     %r20571 <- 0[i]
	add.32      %r20572 <- %r20571, $1
	store.32    %r20572 -> 0[i]
	symaddr.64* %r20573 <- <anon symbol:0x62d0015d0bb0>
	symaddr.64* %r20574 <- strlib
	load.32     %r20575 <- 0[i]
	scast.64    %r20576 <- (32) %r20575
	muls.64     %r20577 <- %r20576, $16
	add.64*     %r20578 <- %r20574, %r20577
	store.64*   %r20573 -> 0[%r20578]
	symaddr.64* %r20579 <- str_char
	symaddr.64* %r20580 <- strlib
	load.32     %r20581 <- 0[i]
	scast.64    %r20582 <- (32) %r20581
	muls.64     %r20583 <- %r20582, $16
	add.64*     %r20584 <- %r20580, %r20583
	store.64*   %r20579 -> 8[%r20584]
	load.32     %r20585 <- 0[i]
	add.32      %r20586 <- %r20585, $1
	store.32    %r20586 -> 0[i]
	symaddr.64* %r20587 <- <anon symbol:0x62d0015d1690>
	symaddr.64* %r20588 <- strlib
	load.32     %r20589 <- 0[i]
	scast.64    %r20590 <- (32) %r20589
	muls.64     %r20591 <- %r20590, $16
	add.64*     %r20592 <- %r20588, %r20591
	store.64*   %r20587 -> 0[%r20592]
	symaddr.64* %r20593 <- str_find
	symaddr.64* %r20594 <- strlib
	load.32     %r20595 <- 0[i]
	scast.64    %r20596 <- (32) %r20595
	muls.64     %r20597 <- %r20596, $16
	add.64*     %r20598 <- %r20594, %r20597
	store.64*   %r20593 -> 8[%r20598]
	load.32     %r20599 <- 0[i]
	add.32      %r20600 <- %r20599, $1
	store.32    %r20600 -> 0[i]
	symaddr.64* %r20601 <- <anon symbol:0x62d0015d2170>
	symaddr.64* %r20602 <- strlib
	load.32     %r20603 <- 0[i]
	scast.64    %r20604 <- (32) %r20603
	muls.64     %r20605 <- %r20604, $16
	add.64*     %r20606 <- %r20602, %r20605
	store.64*   %r20601 -> 0[%r20606]
	symaddr.64* %r20607 <- str_format
	symaddr.64* %r20608 <- strlib
	load.32     %r20609 <- 0[i]
	scast.64    %r20610 <- (32) %r20609
	muls.64     %r20611 <- %r20610, $16
	add.64*     %r20612 <- %r20608, %r20611
	store.64*   %r20607 -> 8[%r20612]
	load.32     %r20613 <- 0[i]
	add.32      %r20614 <- %r20613, $1
	store.32    %r20614 -> 0[i]
	symaddr.64* %r20615 <- <anon symbol:0x62d0015d2c50>
	symaddr.64* %r20616 <- strlib
	load.32     %r20617 <- 0[i]
	scast.64    %r20618 <- (32) %r20617
	muls.64     %r20619 <- %r20618, $16
	add.64*     %r20620 <- %r20616, %r20619
	store.64*   %r20615 -> 0[%r20620]
	symaddr.64* %r20621 <- gmatch
	symaddr.64* %r20622 <- strlib
	load.32     %r20623 <- 0[i]
	scast.64    %r20624 <- (32) %r20623
	muls.64     %r20625 <- %r20624, $16
	add.64*     %r20626 <- %r20622, %r20625
	store.64*   %r20621 -> 8[%r20626]
	load.32     %r20627 <- 0[i]
	add.32      %r20628 <- %r20627, $1
	store.32    %r20628 -> 0[i]
	symaddr.64* %r20629 <- <anon symbol:0x62d0015d3730>
	symaddr.64* %r20630 <- strlib
	load.32     %r20631 <- 0[i]
	scast.64    %r20632 <- (32) %r20631
	muls.64     %r20633 <- %r20632, $16
	add.64*     %r20634 <- %r20630, %r20633
	store.64*   %r20629 -> 0[%r20634]
	symaddr.64* %r20635 <- str_gsub
	symaddr.64* %r20636 <- strlib
	load.32     %r20637 <- 0[i]
	scast.64    %r20638 <- (32) %r20637
	muls.64     %r20639 <- %r20638, $16
	add.64*     %r20640 <- %r20636, %r20639
	store.64*   %r20635 -> 8[%r20640]
	load.32     %r20641 <- 0[i]
	add.32      %r20642 <- %r20641, $1
	store.32    %r20642 -> 0[i]
	symaddr.64* %r20643 <- <anon symbol:0x62d0015d4210>
	symaddr.64* %r20644 <- strlib
	load.32     %r20645 <- 0[i]
	scast.64    %r20646 <- (32) %r20645
	muls.64     %r20647 <- %r20646, $16
	add.64*     %r20648 <- %r20644, %r20647
	store.64*   %r20643 -> 0[%r20648]
	symaddr.64* %r20649 <- str_lower
	symaddr.64* %r20650 <- strlib
	load.32     %r20651 <- 0[i]
	scast.64    %r20652 <- (32) %r20651
	muls.64     %r20653 <- %r20652, $16
	add.64*     %r20654 <- %r20650, %r20653
	store.64*   %r20649 -> 8[%r20654]
	load.32     %r20655 <- 0[i]
	add.32      %r20656 <- %r20655, $1
	store.32    %r20656 -> 0[i]
	symaddr.64* %r20657 <- <anon symbol:0x62d0015d6d28>
	symaddr.64* %r20658 <- strlib
	load.32     %r20659 <- 0[i]
	scast.64    %r20660 <- (32) %r20659
	muls.64     %r20661 <- %r20660, $16
	add.64*     %r20662 <- %r20658, %r20661
	store.64*   %r20657 -> 0[%r20662]
	symaddr.64* %r20663 <- str_match
	symaddr.64* %r20664 <- strlib
	load.32     %r20665 <- 0[i]
	scast.64    %r20666 <- (32) %r20665
	muls.64     %r20667 <- %r20666, $16
	add.64*     %r20668 <- %r20664, %r20667
	store.64*   %r20663 -> 8[%r20668]
	load.32     %r20669 <- 0[i]
	add.32      %r20670 <- %r20669, $1
	store.32    %r20670 -> 0[i]
	symaddr.64* %r20671 <- <anon symbol:0x62d0015d7808>
	symaddr.64* %r20672 <- strlib
	load.32     %r20673 <- 0[i]
	scast.64    %r20674 <- (32) %r20673
	muls.64     %r20675 <- %r20674, $16
	add.64*     %r20676 <- %r20672, %r20675
	store.64*   %r20671 -> 0[%r20676]
	symaddr.64* %r20677 <- str_rep
	symaddr.64* %r20678 <- strlib
	load.32     %r20679 <- 0[i]
	scast.64    %r20680 <- (32) %r20679
	muls.64     %r20681 <- %r20680, $16
	add.64*     %r20682 <- %r20678, %r20681
	store.64*   %r20677 -> 8[%r20682]
	load.32     %r20683 <- 0[i]
	add.32      %r20684 <- %r20683, $1
	store.32    %r20684 -> 0[i]
	symaddr.64* %r20685 <- <anon symbol:0x62d0015d82e8>
	symaddr.64* %r20686 <- strlib
	load.32     %r20687 <- 0[i]
	scast.64    %r20688 <- (32) %r20687
	muls.64     %r20689 <- %r20688, $16
	add.64*     %r20690 <- %r20686, %r20689
	store.64*   %r20685 -> 0[%r20690]
	symaddr.64* %r20691 <- str_sub
	symaddr.64* %r20692 <- strlib
	load.32     %r20693 <- 0[i]
	scast.64    %r20694 <- (32) %r20693
	muls.64     %r20695 <- %r20694, $16
	add.64*     %r20696 <- %r20692, %r20695
	store.64*   %r20691 -> 8[%r20696]
	load.32     %r20697 <- 0[i]
	add.32      %r20698 <- %r20697, $1
	store.32    %r20698 -> 0[i]
	symaddr.64* %r20699 <- <anon symbol:0x62d0015d8dc8>
	symaddr.64* %r20700 <- strlib
	load.32     %r20701 <- 0[i]
	scast.64    %r20702 <- (32) %r20701
	muls.64     %r20703 <- %r20702, $16
	add.64*     %r20704 <- %r20700, %r20703
	store.64*   %r20699 -> 0[%r20704]
	symaddr.64* %r20705 <- str_upper
	symaddr.64* %r20706 <- strlib
	load.32     %r20707 <- 0[i]
	scast.64    %r20708 <- (32) %r20707
	muls.64     %r20709 <- %r20708, $16
	add.64*     %r20710 <- %r20706, %r20709
	store.64*   %r20705 -> 8[%r20710]
	load.32     %r20711 <- 0[i]
	add.32      %r20712 <- %r20711, $1
	store.32    %r20712 -> 0[i]
	symaddr.64* %r20713 <- strlib
	load.32     %r20714 <- 0[i]
	scast.64    %r20715 <- (32) %r20714
	muls.64     %r20716 <- %r20715, $16
	add.64*     %r20717 <- %r20713, %r20716
	store.64*   $0 -> 0[%r20717]
	symaddr.64* %r20718 <- strlib
	load.32     %r20719 <- 0[i]
	scast.64    %r20720 <- (32) %r20719
	muls.64     %r20721 <- %r20720, $16
	add.64*     %r20722 <- %r20718, %r20721
	store.64*   $0 -> 8[%r20722]
	store.32    $0 -> 0[i]
	symaddr.64* %r20723 <- <anon symbol:0x62d0015d9e18>
	symaddr.64* %r20724 <- lualibs
	load.32     %r20725 <- 0[i]
	scast.64    %r20726 <- (32) %r20725
	muls.64     %r20727 <- %r20726, $16
	add.64*     %r20728 <- %r20724, %r20727
	store.64*   %r20723 -> 0[%r20728]
	symaddr.64* %r20729 <- luaopen_base
	symaddr.64* %r20730 <- lualibs
	load.32     %r20731 <- 0[i]
	scast.64    %r20732 <- (32) %r20731
	muls.64     %r20733 <- %r20732, $16
	add.64*     %r20734 <- %r20730, %r20733
	store.64*   %r20729 -> 8[%r20734]
	load.32     %r20735 <- 0[i]
	add.32      %r20736 <- %r20735, $1
	store.32    %r20736 -> 0[i]
	symaddr.64* %r20737 <- <anon symbol:0x62d0015da8f8>
	symaddr.64* %r20738 <- lualibs
	load.32     %r20739 <- 0[i]
	scast.64    %r20740 <- (32) %r20739
	muls.64     %r20741 <- %r20740, $16
	add.64*     %r20742 <- %r20738, %r20741
	store.64*   %r20737 -> 0[%r20742]
	symaddr.64* %r20743 <- luaopen_table
	symaddr.64* %r20744 <- lualibs
	load.32     %r20745 <- 0[i]
	scast.64    %r20746 <- (32) %r20745
	muls.64     %r20747 <- %r20746, $16
	add.64*     %r20748 <- %r20744, %r20747
	store.64*   %r20743 -> 8[%r20748]
	load.32     %r20749 <- 0[i]
	add.32      %r20750 <- %r20749, $1
	store.32    %r20750 -> 0[i]
	symaddr.64* %r20751 <- <anon symbol:0x62d0015db3d8>
	symaddr.64* %r20752 <- lualibs
	load.32     %r20753 <- 0[i]
	scast.64    %r20754 <- (32) %r20753
	muls.64     %r20755 <- %r20754, $16
	add.64*     %r20756 <- %r20752, %r20755
	store.64*   %r20751 -> 0[%r20756]
	symaddr.64* %r20757 <- luaopen_io
	symaddr.64* %r20758 <- lualibs
	load.32     %r20759 <- 0[i]
	scast.64    %r20760 <- (32) %r20759
	muls.64     %r20761 <- %r20760, $16
	add.64*     %r20762 <- %r20758, %r20761
	store.64*   %r20757 -> 8[%r20762]
	load.32     %r20763 <- 0[i]
	add.32      %r20764 <- %r20763, $1
	store.32    %r20764 -> 0[i]
	symaddr.64* %r20765 <- <anon symbol:0x62d0015dbeb8>
	symaddr.64* %r20766 <- lualibs
	load.32     %r20767 <- 0[i]
	scast.64    %r20768 <- (32) %r20767
	muls.64     %r20769 <- %r20768, $16
	add.64*     %r20770 <- %r20766, %r20769
	store.64*   %r20765 -> 0[%r20770]
	symaddr.64* %r20771 <- luaopen_os
	symaddr.64* %r20772 <- lualibs
	load.32     %r20773 <- 0[i]
	scast.64    %r20774 <- (32) %r20773
	muls.64     %r20775 <- %r20774, $16
	add.64*     %r20776 <- %r20772, %r20775
	store.64*   %r20771 -> 8[%r20776]
	load.32     %r20777 <- 0[i]
	add.32      %r20778 <- %r20777, $1
	store.32    %r20778 -> 0[i]
	symaddr.64* %r20779 <- <anon symbol:0x62d0015dc998>
	symaddr.64* %r20780 <- lualibs
	load.32     %r20781 <- 0[i]
	scast.64    %r20782 <- (32) %r20781
	muls.64     %r20783 <- %r20782, $16
	add.64*     %r20784 <- %r20780, %r20783
	store.64*   %r20779 -> 0[%r20784]
	symaddr.64* %r20785 <- luaopen_string
	symaddr.64* %r20786 <- lualibs
	load.32     %r20787 <- 0[i]
	scast.64    %r20788 <- (32) %r20787
	muls.64     %r20789 <- %r20788, $16
	add.64*     %r20790 <- %r20786, %r20789
	store.64*   %r20785 -> 8[%r20790]
	load.32     %r20791 <- 0[i]
	add.32      %r20792 <- %r20791, $1
	store.32    %r20792 -> 0[i]
	symaddr.64* %r20793 <- lualibs
	load.32     %r20794 <- 0[i]
	scast.64    %r20795 <- (32) %r20794
	muls.64     %r20796 <- %r20795, $16
	add.64*     %r20797 <- %r20793, %r20796
	store.64*   $0 -> 0[%r20797]
	symaddr.64* %r20798 <- lualibs
	load.32     %r20799 <- 0[i]
	scast.64    %r20800 <- (32) %r20799
	muls.64     %r20801 <- %r20800, $16
	add.64*     %r20802 <- %r20798, %r20801
	store.64*   $0 -> 8[%r20802]
	store.32    $0 -> 0[i]
	symaddr.64* %r20803 <- <anon symbol:0x62d0015dd9e8>
	symaddr.64* %r20804 <- bitlib
	load.32     %r20805 <- 0[i]
	scast.64    %r20806 <- (32) %r20805
	muls.64     %r20807 <- %r20806, $16
	add.64*     %r20808 <- %r20804, %r20807
	store.64*   %r20803 -> 0[%r20808]
	symaddr.64* %r20809 <- tobit
	symaddr.64* %r20810 <- bitlib
	load.32     %r20811 <- 0[i]
	scast.64    %r20812 <- (32) %r20811
	muls.64     %r20813 <- %r20812, $16
	add.64*     %r20814 <- %r20810, %r20813
	store.64*   %r20809 -> 8[%r20814]
	load.32     %r20815 <- 0[i]
	add.32      %r20816 <- %r20815, $1
	store.32    %r20816 -> 0[i]
	symaddr.64* %r20817 <- <anon symbol:0x62d0015ea500>
	symaddr.64* %r20818 <- bitlib
	load.32     %r20819 <- 0[i]
	scast.64    %r20820 <- (32) %r20819
	muls.64     %r20821 <- %r20820, $16
	add.64*     %r20822 <- %r20818, %r20821
	store.64*   %r20817 -> 0[%r20822]
	symaddr.64* %r20823 <- bnot
	symaddr.64* %r20824 <- bitlib
	load.32     %r20825 <- 0[i]
	scast.64    %r20826 <- (32) %r20825
	muls.64     %r20827 <- %r20826, $16
	add.64*     %r20828 <- %r20824, %r20827
	store.64*   %r20823 -> 8[%r20828]
	load.32     %r20829 <- 0[i]
	add.32      %r20830 <- %r20829, $1
	store.32    %r20830 -> 0[i]
	symaddr.64* %r20831 <- <anon symbol:0x62d0015eafe0>
	symaddr.64* %r20832 <- bitlib
	load.32     %r20833 <- 0[i]
	scast.64    %r20834 <- (32) %r20833
	muls.64     %r20835 <- %r20834, $16
	add.64*     %r20836 <- %r20832, %r20835
	store.64*   %r20831 -> 0[%r20836]
	symaddr.64* %r20837 <- band
	symaddr.64* %r20838 <- bitlib
	load.32     %r20839 <- 0[i]
	scast.64    %r20840 <- (32) %r20839
	muls.64     %r20841 <- %r20840, $16
	add.64*     %r20842 <- %r20838, %r20841
	store.64*   %r20837 -> 8[%r20842]
	load.32     %r20843 <- 0[i]
	add.32      %r20844 <- %r20843, $1
	store.32    %r20844 -> 0[i]
	symaddr.64* %r20845 <- <anon symbol:0x62d0015ebac0>
	symaddr.64* %r20846 <- bitlib
	load.32     %r20847 <- 0[i]
	scast.64    %r20848 <- (32) %r20847
	muls.64     %r20849 <- %r20848, $16
	add.64*     %r20850 <- %r20846, %r20849
	store.64*   %r20845 -> 0[%r20850]
	symaddr.64* %r20851 <- bor
	symaddr.64* %r20852 <- bitlib
	load.32     %r20853 <- 0[i]
	scast.64    %r20854 <- (32) %r20853
	muls.64     %r20855 <- %r20854, $16
	add.64*     %r20856 <- %r20852, %r20855
	store.64*   %r20851 -> 8[%r20856]
	load.32     %r20857 <- 0[i]
	add.32      %r20858 <- %r20857, $1
	store.32    %r20858 -> 0[i]
	symaddr.64* %r20859 <- <anon symbol:0x62d0015ec5a0>
	symaddr.64* %r20860 <- bitlib
	load.32     %r20861 <- 0[i]
	scast.64    %r20862 <- (32) %r20861
	muls.64     %r20863 <- %r20862, $16
	add.64*     %r20864 <- %r20860, %r20863
	store.64*   %r20859 -> 0[%r20864]
	symaddr.64* %r20865 <- bxor
	symaddr.64* %r20866 <- bitlib
	load.32     %r20867 <- 0[i]
	scast.64    %r20868 <- (32) %r20867
	muls.64     %r20869 <- %r20868, $16
	add.64*     %r20870 <- %r20866, %r20869
	store.64*   %r20865 -> 8[%r20870]
	load.32     %r20871 <- 0[i]
	add.32      %r20872 <- %r20871, $1
	store.32    %r20872 -> 0[i]
	symaddr.64* %r20873 <- <anon symbol:0x62d0015ed080>
	symaddr.64* %r20874 <- bitlib
	load.32     %r20875 <- 0[i]
	scast.64    %r20876 <- (32) %r20875
	muls.64     %r20877 <- %r20876, $16
	add.64*     %r20878 <- %r20874, %r20877
	store.64*   %r20873 -> 0[%r20878]
	symaddr.64* %r20879 <- lshift
	symaddr.64* %r20880 <- bitlib
	load.32     %r20881 <- 0[i]
	scast.64    %r20882 <- (32) %r20881
	muls.64     %r20883 <- %r20882, $16
	add.64*     %r20884 <- %r20880, %r20883
	store.64*   %r20879 -> 8[%r20884]
	load.32     %r20885 <- 0[i]
	add.32      %r20886 <- %r20885, $1
	store.32    %r20886 -> 0[i]
	symaddr.64* %r20887 <- <anon symbol:0x62d0015edb60>
	symaddr.64* %r20888 <- bitlib
	load.32     %r20889 <- 0[i]
	scast.64    %r20890 <- (32) %r20889
	muls.64     %r20891 <- %r20890, $16
	add.64*     %r20892 <- %r20888, %r20891
	store.64*   %r20887 -> 0[%r20892]
	symaddr.64* %r20893 <- rshift
	symaddr.64* %r20894 <- bitlib
	load.32     %r20895 <- 0[i]
	scast.64    %r20896 <- (32) %r20895
	muls.64     %r20897 <- %r20896, $16
	add.64*     %r20898 <- %r20894, %r20897
	store.64*   %r20893 -> 8[%r20898]
	load.32     %r20899 <- 0[i]
	add.32      %r20900 <- %r20899, $1
	store.32    %r20900 -> 0[i]
	symaddr.64* %r20901 <- <anon symbol:0x62d0015ee640>
	symaddr.64* %r20902 <- bitlib
	load.32     %r20903 <- 0[i]
	scast.64    %r20904 <- (32) %r20903
	muls.64     %r20905 <- %r20904, $16
	add.64*     %r20906 <- %r20902, %r20905
	store.64*   %r20901 -> 0[%r20906]
	symaddr.64* %r20907 <- arshift
	symaddr.64* %r20908 <- bitlib
	load.32     %r20909 <- 0[i]
	scast.64    %r20910 <- (32) %r20909
	muls.64     %r20911 <- %r20910, $16
	add.64*     %r20912 <- %r20908, %r20911
	store.64*   %r20907 -> 8[%r20912]
	load.32     %r20913 <- 0[i]
	add.32      %r20914 <- %r20913, $1
	store.32    %r20914 -> 0[i]
	symaddr.64* %r20915 <- <anon symbol:0x62d0015ef120>
	symaddr.64* %r20916 <- bitlib
	load.32     %r20917 <- 0[i]
	scast.64    %r20918 <- (32) %r20917
	muls.64     %r20919 <- %r20918, $16
	add.64*     %r20920 <- %r20916, %r20919
	store.64*   %r20915 -> 0[%r20920]
	symaddr.64* %r20921 <- rol
	symaddr.64* %r20922 <- bitlib
	load.32     %r20923 <- 0[i]
	scast.64    %r20924 <- (32) %r20923
	muls.64     %r20925 <- %r20924, $16
	add.64*     %r20926 <- %r20922, %r20925
	store.64*   %r20921 -> 8[%r20926]
	load.32     %r20927 <- 0[i]
	add.32      %r20928 <- %r20927, $1
	store.32    %r20928 -> 0[i]
	symaddr.64* %r20929 <- <anon symbol:0x62d0015efc00>
	symaddr.64* %r20930 <- bitlib
	load.32     %r20931 <- 0[i]
	scast.64    %r20932 <- (32) %r20931
	muls.64     %r20933 <- %r20932, $16
	add.64*     %r20934 <- %r20930, %r20933
	store.64*   %r20929 -> 0[%r20934]
	symaddr.64* %r20935 <- ror
	symaddr.64* %r20936 <- bitlib
	load.32     %r20937 <- 0[i]
	scast.64    %r20938 <- (32) %r20937
	muls.64     %r20939 <- %r20938, $16
	add.64*     %r20940 <- %r20936, %r20939
	store.64*   %r20935 -> 8[%r20940]
	load.32     %r20941 <- 0[i]
	add.32      %r20942 <- %r20941, $1
	store.32    %r20942 -> 0[i]
	symaddr.64* %r20943 <- <anon symbol:0x62d0015f06e0>
	symaddr.64* %r20944 <- bitlib
	load.32     %r20945 <- 0[i]
	scast.64    %r20946 <- (32) %r20945
	muls.64     %r20947 <- %r20946, $16
	add.64*     %r20948 <- %r20944, %r20947
	store.64*   %r20943 -> 0[%r20948]
	symaddr.64* %r20949 <- bswap
	symaddr.64* %r20950 <- bitlib
	load.32     %r20951 <- 0[i]
	scast.64    %r20952 <- (32) %r20951
	muls.64     %r20953 <- %r20952, $16
	add.64*     %r20954 <- %r20950, %r20953
	store.64*   %r20949 -> 8[%r20954]
	load.32     %r20955 <- 0[i]
	add.32      %r20956 <- %r20955, $1
	store.32    %r20956 -> 0[i]
	symaddr.64* %r20957 <- <anon symbol:0x62d0015f11c0>
	symaddr.64* %r20958 <- bitlib
	load.32     %r20959 <- 0[i]
	scast.64    %r20960 <- (32) %r20959
	muls.64     %r20961 <- %r20960, $16
	add.64*     %r20962 <- %r20958, %r20961
	store.64*   %r20957 -> 0[%r20962]
	symaddr.64* %r20963 <- tohex
	symaddr.64* %r20964 <- bitlib
	load.32     %r20965 <- 0[i]
	scast.64    %r20966 <- (32) %r20965
	muls.64     %r20967 <- %r20966, $16
	add.64*     %r20968 <- %r20964, %r20967
	store.64*   %r20963 -> 8[%r20968]
	load.32     %r20969 <- 0[i]
	add.32      %r20970 <- %r20969, $1
	store.32    %r20970 -> 0[i]
	symaddr.64* %r20971 <- bitlib
	load.32     %r20972 <- 0[i]
	scast.64    %r20973 <- (32) %r20972
	muls.64     %r20974 <- %r20973, $16
	add.64*     %r20975 <- %r20971, %r20974
	store.64*   $0 -> 0[%r20975]
	symaddr.64* %r20976 <- bitlib
	load.32     %r20977 <- 0[i]
	scast.64    %r20978 <- (32) %r20977
	muls.64     %r20979 <- %r20978, $16
	add.64*     %r20980 <- %r20976, %r20979
	store.64*   $0 -> 8[%r20980]
	br          .L4275

.L4275:
	ret


main:
.L4276:
	<entry-point>
	store.32    %arg1 -> 0[argc]
	store.64*   %arg2 -> 0[argv]
	call        init_globals
	call.64*    %r20981 <- luaL_newstate
	store.64*   %r20981 -> 0[L]
	load.64*    %r20982 <- 0[L]
	push.64*    %r20982
	call        luaL_openlibs
	load.64*    %r20983 <- 0[L]
	symaddr.64* %r20984 <- <anon symbol:0x62d0015f1f58>
	symaddr.64* %r20985 <- bitlib
	push.64*    %r20983
	push.64*    %r20984
	push.64*    %r20985
	call        luaL_register
	load.32     %r20986 <- 0[argc]
	setlt.32    %r20987 <- %r20986, $2
	br          %r20987, .L4277, .L4278

.L4277:
	phisrc.32   %phi858(return) <- $8
	br          .L4279

.L4278:
	load.64*    %r20989 <- 0[L]
	push.64*    %r20989
	push.32     $0
	push.32     $1
	call        lua_createtable
	load.64*    %r20990 <- 0[L]
	load.64*    %r20991 <- 0[argv]
	load.64*    %r20992 <- 8[%r20991]
	push.64*    %r20990
	push.64*    %r20992
	call        lua_pushstring
	load.64*    %r20993 <- 0[L]
	push.64*    %r20993
	push.32     $0xfffffffe
	push.32     $0
	call        lua_rawseti
	load.64*    %r20994 <- 0[L]
	symaddr.64* %r20995 <- <anon symbol:0x62d0015f45e8>
	push.64*    %r20994
	push.32     $0xffffd8ee
	push.64*    %r20995
	call        lua_setfield
	load.64*    %r20996 <- 0[L]
	load.64*    %r20997 <- 0[argv]
	load.64*    %r20998 <- 8[%r20997]
	push.64*    %r20996
	push.64*    %r20998
	call.32     %r20999 <- luaL_loadfile
	br          %r20999, .L4280, .L4281

.L4280:
	br          .L4282

.L4281:
	store.32    $2 -> 0[i]
	br          .L4286

.L4286:
	load.32     %r21000 <- 0[i]
	load.32     %r21001 <- 0[argc]
	setlt.32    %r21002 <- %r21000, %r21001
	br          %r21002, .L4283, .L4285

.L4283:
	load.64*    %r21003 <- 0[L]
	load.64*    %r21004 <- 0[argv]
	load.32     %r21005 <- 0[i]
	scast.64    %r21006 <- (32) %r21005
	muls.64     %r21007 <- %r21006, $8
	add.64*     %r21008 <- %r21004, %r21007
	load.64*    %r21009 <- 0[%r21008]
	push.64*    %r21003
	push.64*    %r21009
	call        lua_pushstring
	br          .L4284

.L4284:
	load.32     %r21010 <- 0[i]
	add.32      %r21011 <- %r21010, $1
	store.32    %r21011 -> 0[i]
	br          .L4286

.L4285:
	load.64*    %r21012 <- 0[L]
	load.32     %r21013 <- 0[argc]
	sub.32      %r21014 <- %r21013, $2
	push.64*    %r21012
	push.32     %r21014
	push.32     $0
	push.32     $0
	call.32     %r21015 <- lua_pcall
	br          %r21015, .L4287, .L4288

.L4287:
	br          .L4282

.L4282:
	load.64*    %r21016 <- 0[stderr]
	symaddr.64* %r21017 <- <anon symbol:0x62d0015f4b58>
	load.64*    %r21018 <- 0[L]
	push.64*    %r21018
	push.32     $0xffffffff
	push.64*    $0
	call.64*    %r21019 <- lua_tolstring
	push.64*    %r21016
	push.64*    %r21017
	push.64*    %r21019
	call.32     %r21020 <- fprintf
	phisrc.32   %phi859(return) <- $1
	br          .L4279

.L4288:
	load.64*    %r21021 <- 0[L]
	push.64*    %r21021
	call        lua_close
	phisrc.32   %phi860(return) <- $0
	br          .L4279

.L4279:
	phi.32      %r20988 <- %phi858(return), %phi859(return), %phi860(return)
	ret.32      %r20988


