luaM_growaux_:
.L0:
	<entry-point>
	load.32     %r2 <- 0[%arg3]
	divs.32     %r4 <- %arg5, $2
	setge.32    %r5 <- %r2, %r4
	phisrc.32   %phi13 <- %r2
	br          %r5, .L1, .L2

.L1:
	setge.32    %r9 <- %r2, %arg5
	phisrc.32   %phi10 <- %r2
	br          %r9, .L3, .L4

.L3:
	call        luaG_runerror, %arg1, %arg6
	br          .L4

.L4:
	phisrc.32   %phi7(newsize) <- %arg5
	br          .L5

.L2:
	muls.32     %r15 <- %r2, $2
	setlt.32    %r17 <- %r15, $4
	phisrc.32   %phi8(newsize) <- %r15
	br          %r17, .L6, .L5

.L6:
	phisrc.32   %phi9(newsize) <- $4
	br          .L5

.L5:
	phi.32      %r18(newsize) <- %phi7(newsize), %phi8(newsize), %phi9(newsize)
	add.32      %r19 <- %r18(newsize), $1
	scast.64    %r20 <- (32) %r19
	divu.64     %r22 <- $-3, %arg4
	setbe.32    %r23 <- %r20, %r22
	br          %r23, .L8, .L9

.L8:
	load.32     %r27 <- 0[%arg3]
	scast.64    %r28 <- (32) %r27
	mulu.64     %r30 <- %r28, %arg4
	scast.64    %r32 <- (32) %r18(newsize)
	mulu.64     %r34 <- %r32, %arg4
	call.64     %r35 <- luaM_realloc_, %arg1, %arg2, %r30, %r34
	phisrc.64   %phi1 <- %r35
	br          .L10

.L9:
	call.64     %r37 <- luaM_toobig, %arg1
	cast.64     %r38 <- (64) %r37
	phisrc.64   %phi2 <- %r38
	br          .L10

.L10:
	phi.64      %r39 <- %phi1, %phi2
	store.32    %r18(newsize) -> 0[%arg3]
	ret.64      %r39


luaM_toobig:
.L12:
	<entry-point>
	symaddr.64  %r45 <- <anon symbol:0x62d0010cd298>
	call        luaG_runerror, %arg1, %r45
	ret.64      $0


luaM_realloc_:
.L14:
	<entry-point>
	load.64     %r48 <- 32[%arg1]
	load.64     %r50 <- 24[%r48]
	load.64     %r55 <- 16[%r48]
	call.64     %r56 <- %r55, %r50, %arg2, %arg3, %arg4
	seteq.32    %r58 <- %r56, $0
	seta.32     %r60 <- %arg4, $0
	and-bool.32 %r61 <- %r58, %r60
	br          %r61, .L15, .L16

.L15:
	call        luaD_throw, %arg1, $4
	br          .L16

.L16:
	load.64     %r64 <- 120[%r48]
	sub.64      %r66 <- %r64, %arg3
	add.64      %r68 <- %r66, %arg4
	store.64    %r68 -> 120[%r48]
	ret.64      %r56


luaO_int2fb:
.L18:
	<entry-point>
	phisrc.32   %phi23(x) <- %arg1
	phisrc.32   %phi25(e) <- $0
	phisrc.32   %phi27(e) <- $0
	br          .L22

.L22:
	phi.32      %r72(x) <- %phi23(x), %phi24(x)
	setae.32    %r73 <- %r72(x), $16
	br          %r73, .L19, .L21

.L19:
	add.32      %r75 <- %r72(x), $1
	lsr.32      %r76 <- %r75, $1
	phi.32      %r77 <- %phi27(e), %phi28(e)
	add.32      %r78 <- %r77, $1
	phisrc.32   %phi24(x) <- %r76
	phisrc.32   %phi26(e) <- %r78
	phisrc.32   %phi28(e) <- %r78
	br          .L22

.L21:
	setb.32     %r80 <- %r72(x), $8
	br          %r80, .L23, .L24

.L23:
	phisrc.32   %phi17(return) <- %r72(x)
	br          .L25

.L24:
	phi.32      %r84 <- %phi25(e), %phi26(e)
	add.32      %r85 <- %r84, $1
	shl.32      %r86 <- %r85, $3
	add.32      %r89 <- %r72(x), $-8
	or.32       %r90 <- %r86, %r89
	phisrc.32   %phi18(return) <- %r90
	br          .L25

.L25:
	phi.32      %r83 <- %phi17(return), %phi18(return)
	ret.32      %r83


luaO_fb2int:
.L27:
	<entry-point>
	asr.32      %r92 <- %arg1, $3
	and.32      %r93 <- %r92, $31
	br          %r93, .L29, .L28

.L28:
	phisrc.32   %phi29(return) <- %arg1
	br          .L30

.L29:
	and.32      %r99 <- %arg1, $7
	add.32      %r100 <- %r99, $8
	add.32      %r102 <- %r93, $-1
	shl.32      %r103 <- %r100, %r102
	phisrc.32   %phi30(return) <- %r103
	br          .L30

.L30:
	phi.32      %r97 <- %phi29(return), %phi30(return)
	ret.32      %r97


luaO_log2:
.L32:
	<entry-point>
	phisrc.32   %phi34(x) <- %arg1
	phisrc.32   %phi38(l) <- $0xffffffff
	br          .L36

.L36:
	phi.32      %r104(x) <- %phi34(x), %phi35(x)
	setae.32    %r105 <- %r104(x), $256
	phi.32      %r106 <- %phi38(l), %phi39(l)
	br          %r105, .L33, .L35

.L33:
	add.32      %r108 <- %r106, $8
	lsr.32      %r112 <- %r104(x), $8
	phisrc.32   %phi35(x) <- %r112
	phisrc.32   %phi39(l) <- %r108
	br          .L36

.L35:
	symaddr.64  %r115 <- log_2
	cast.64     %r117 <- (32) %r104(x)
	add.64      %r118 <- %r115, %r117
	load.8      %r119 <- 0[%r118]
	cast.32     %r120 <- (8) %r119
	add.32      %r121 <- %r106, %r120
	ret.32      %r121


luaO_rawequalObj:
.L38:
	<entry-point>
	load.32     %r124 <- 8[%arg1]
	load.32     %r127 <- 8[%arg2]
	setne.32    %r129 <- %r124, %r127
	br          %r129, .L39, .L40

.L39:
	phisrc.32   %phi40(return) <- $0
	br          .L41

.L40:
	switch      %r124, 0 -> .L44, 1 -> .L46, 2 -> .L47, 3 -> .L45, default -> .L48

.L44:
	phisrc.32   %phi41(return) <- $1
	br          .L41

.L45:
	load.64     %r134 <- 0[%arg1]
	load.64     %r137 <- 0[%arg2]
	seteq.32    %r139 <- %r134, %r137
	phisrc.32   %phi42(return) <- %r139
	br          .L41

.L46:
	load.32     %r141 <- 0[%arg1]
	load.32     %r144 <- 0[%arg2]
	seteq.32    %r146 <- %r141, %r144
	phisrc.32   %phi43(return) <- %r146
	br          .L41

.L47:
	load.64     %r148 <- 0[%arg1]
	load.64     %r150 <- 0[%arg2]
	seteq.32    %r151 <- %r148, %r150
	phisrc.32   %phi44(return) <- %r151
	br          .L41

.L48:
	load.64     %r153 <- 0[%arg1]
	load.64     %r155 <- 0[%arg2]
	seteq.32    %r156 <- %r153, %r155
	phisrc.32   %phi45(return) <- %r156
	br          .L41

.L41:
	phi.32      %r130 <- %phi40(return), %phi41(return), %phi42(return), %phi43(return), %phi44(return), %phi45(return)
	ret.32      %r130


luaO_str2d:
.L49:
	<entry-point>
	symaddr.64  %r158 <- endptr
	call.64     %r159 <- strtod, %arg1, %r158
	store.64    %r159 -> 0[%arg2]
	load.64     %r161(endptr) <- 0[endptr]
	seteq.32    %r163 <- %r161(endptr), %arg1
	phisrc.64   %phi57(endptr) <- %r161(endptr)
	phisrc.64   %phi59(endptr) <- %r161(endptr)
	phisrc.64   %phi60(endptr) <- %r161(endptr)
	br          %r163, .L50, .L51

.L50:
	phisrc.32   %phi47(return) <- $0
	br          .L52

.L51:
	load.8      %r166 <- 0[%r161(endptr)]
	scast.32    %r167 <- (8) %r166
	seteq.32    %r168 <- %r167, $120
	br          %r168, .L53, .L55

.L55:
	scast.32    %r171 <- (8) %r166
	seteq.32    %r172 <- %r171, $88
	phisrc.64   %phi53(endptr) <- %r161(endptr)
	br          %r172, .L53, .L54

.L53:
	call.64     %r175 <- strtoul, %arg1, %r158, $16
	fpcast.64   %r176 <- (64) %r175
	store.64    %r176 -> 0[%arg2]
	br          .L54

.L54:
	load.64     %r178 <- 0[endptr]
	load.8      %r179 <- 0[%r178]
	br          %r179, .L61, .L56

.L56:
	phisrc.32   %phi48(return) <- $1
	br          .L52

.L61:
	call.64     %r182 <- __ctype_b_loc
	load.64     %r183 <- 0[%r182]
	load.64     %r184(endptr) <- 0[endptr]
	load.8      %r185 <- 0[%r184(endptr)]
	cast.32     %r187 <- (8) %r185
	scast.64    %r188 <- (32) %r187
	muls.64     %r189 <- %r188, $2
	add.64      %r190 <- %r183, %r189
	load.16     %r191 <- 0[%r190]
	cast.32     %r192 <- (16) %r191
	and.32      %r193 <- %r192, $0x2000
	br          %r193, .L58, .L60

.L58:
	add.64      %r195 <- %r184(endptr), $1
	store.64    %r195 -> 0[endptr]
	br          .L61

.L60:
	br          %r185, .L62, .L63

.L62:
	phisrc.32   %phi49(return) <- $0
	br          .L52

.L63:
	phisrc.32   %phi50(return) <- $1
	br          .L52

.L52:
	phi.32      %r164 <- %phi47(return), %phi48(return), %phi49(return), %phi50(return)
	ret.32      %r164


pushstr:
.L64:
	<entry-point>
	load.64     %r201 <- 16[%arg1]
	call.64     %r205 <- strlen, %arg2
	call.64     %r206 <- luaS_newlstr, %arg1, %arg2, %r205
	ptrcast.64  %r207 <- (64) %r206
	store.64    %r207 -> 0[%r201]
	store.32    $4 -> 8[%r201]
	load.64     %r211 <- 56[%arg1]
	ptrcast.64  %r212 <- (64) %r211
	load.64     %r214 <- 16[%arg1]
	ptrcast.64  %r215 <- (64) %r214
	sub.64      %r216 <- %r212, %r215
	setle.32    %r217 <- %r216, $16
	br          %r217, .L65, .L67

.L65:
	call        luaD_growstack, %arg1, $1
	br          .L67

.L67:
	load.64     %r220 <- 16[%arg1]
	add.64      %r221 <- %r220, $16
	store.64    %r221 -> 16[%arg1]
	ret


luaO_pushvfstring:
.L69:
	<entry-point>
	symaddr.64  %r223 <- <anon symbol:0x62d001146030>
	call        pushstr, %arg1, %r223
	phisrc.64   %phi64(fmt) <- %arg2
	phisrc.64   %phi90(argp) <- %arg3
	phisrc.32   %phi96(n) <- $1
	phisrc.32   %phi98(n) <- $1
	br          .L70

.L70:
	phi.64      %r224(fmt) <- %phi64(fmt), %phi65(fmt)
	call.64     %r225 <- strchr, %r224(fmt), $37
	br          %r225, .L75, .L72

.L75:
	load.64     %r229 <- 16[%arg1]
	sub.64      %r234 <- %r225, %r224(fmt)
	call.64     %r236 <- luaS_newlstr, %arg1, %r224(fmt), %r234
	ptrcast.64  %r237 <- (64) %r236
	store.64    %r237 -> 0[%r229]
	store.32    $4 -> 8[%r229]
	load.64     %r241 <- 56[%arg1]
	ptrcast.64  %r242 <- (64) %r241
	load.64     %r244 <- 16[%arg1]
	ptrcast.64  %r245 <- (64) %r244
	sub.64      %r246 <- %r242, %r245
	setle.32    %r247 <- %r246, $16
	br          %r247, .L76, .L78

.L76:
	call        luaD_growstack, %arg1, $1
	br          .L78

.L78:
	load.64     %r250 <- 16[%arg1]
	add.64      %r251 <- %r250, $16
	store.64    %r251 -> 16[%arg1]
	load.8      %r253 <- 1[%r225]
	phi.64      %r254 <- %phi90(argp), %phi91(argp), %phi92(argp), %phi93(argp), %phi94(argp), %phi95(argp)
	cast.64     %r258 <- (64) %r254
	ptrcast.64  %r255 <- (64) %r254
	add.64      %r259 <- %r258, $8
	add.64      %r272 <- %r258, $4
	cast.64     %r260 <- (64) %r259
	cast.64     %r273 <- (64) %r272
	switch      %r253, 37 -> .L85, 99 -> .L81, 100 -> .L82, 102 -> .L83, 112 -> .L84, 115 -> .L80, default -> .L86

.L80:
	load.64     %r256 <- 0[%r255]
	phisrc.64   %phi91(argp) <- %r260
	phisrc.64   %phi100(s) <- %r256
	br          %r256, .L88, .L87

.L87:
	symaddr.64  %r264 <- <anon symbol:0x62d001146ce0>
	phisrc.64   %phi101(s) <- %r264
	br          .L88

.L88:
	phi.64      %r266 <- %phi100(s), %phi101(s)
	call        pushstr, %arg1, %r266
	br          .L79

.L81:
	load.32     %r269 <- 0[%r255]
	scast.8     %r275 <- (32) %r269
	store.8     %r275 -> 0[buff]
	store.8     $0 -> 1[buff]
	symaddr.64  %r277 <- buff
	call        pushstr, %arg1, %r277
	phisrc.64   %phi92(argp) <- %r273
	br          .L79

.L82:
	load.32     %r282 <- 0[%r255]
	fpcast.64   %r288 <- (32) %r282
	store.64    %r288 -> 16[%r250]
	store.32    $3 -> 24[%r250]
	load.64     %r292 <- 56[%arg1]
	ptrcast.64  %r293 <- (64) %r292
	load.64     %r295 <- 16[%arg1]
	ptrcast.64  %r296 <- (64) %r295
	sub.64      %r297 <- %r293, %r296
	setle.32    %r298 <- %r297, $16
	phisrc.64   %phi93(argp) <- %r273
	br          %r298, .L89, .L91

.L89:
	call        luaD_growstack, %arg1, $1
	br          .L91

.L91:
	load.64     %r301 <- 16[%arg1]
	add.64      %r302 <- %r301, $16
	store.64    %r302 -> 16[%arg1]
	br          .L79

.L83:
	load.64     %r307 <- 0[%r255]
	store.64    %r307 -> 16[%r250]
	store.32    $3 -> 24[%r250]
	load.64     %r317 <- 56[%arg1]
	ptrcast.64  %r318 <- (64) %r317
	load.64     %r320 <- 16[%arg1]
	ptrcast.64  %r321 <- (64) %r320
	sub.64      %r322 <- %r318, %r321
	setle.32    %r323 <- %r322, $16
	phisrc.64   %phi94(argp) <- %r260
	br          %r323, .L92, .L94

.L92:
	call        luaD_growstack, %arg1, $1
	br          .L94

.L94:
	load.64     %r326 <- 16[%arg1]
	add.64      %r327 <- %r326, $16
	store.64    %r327 -> 16[%arg1]
	br          .L79

.L84:
	symaddr.64  %r328 <- buff
	symaddr.64  %r329 <- <anon symbol:0x62d0011488f8>
	load.64     %r332 <- 0[%r255]
	call.32     %r338 <- sprintf, %r328, %r329, %r332
	call        pushstr, %arg1, %r328
	phisrc.64   %phi95(argp) <- %r260
	br          .L79

.L85:
	symaddr.64  %r342 <- <anon symbol:0x62d001148f50>
	call        pushstr, %arg1, %r342
	br          .L79

.L86:
	store.8     $37 -> 0[buff]
	store.8     %r253 -> 1[buff]
	store.8     $0 -> 2[buff]
	symaddr.64  %r347 <- buff
	call        pushstr, %arg1, %r347
	br          .L79

.L79:
	phi.32      %r348 <- %phi98(n), %phi99(n)
	add.32      %r350 <- %r348, $2
	add.64      %r353 <- %r225, $2
	phisrc.64   %phi65(fmt) <- %r353
	phisrc.32   %phi97(n) <- %r350
	phisrc.32   %phi99(n) <- %r350
	br          .L70

.L72:
	call        pushstr, %arg1, %r224(fmt)
	phi.32      %r357 <- %phi96(n), %phi97(n)
	add.32      %r358 <- %r357, $1
	load.64     %r360 <- 16[%arg1]
	load.64     %r362 <- 24[%arg1]
	sub.64      %r363 <- %r360, %r362
	divs.64     %r364 <- %r363, $16
	scast.32    %r365 <- (64) %r364
	add.32      %r366 <- %r365, $-1
	call        luaV_concat, %arg1, %r358, %r366
	scast.64    %r368 <- (32) %r357
	muls.64     %r369 <- %r368, $16
	load.64     %r371 <- 16[%arg1]
	cast.64     %r372 <- (64) %r371
	sub.64      %r373 <- %r372, %r369
	ptrcast.64  %r374 <- (64) %r373
	store.64    %r374 -> 16[%arg1]
	load.64     %r378 <- -16[%r374]
	add.64      %r380 <- %r378, $24
	ptrcast.64  %r381 <- (64) %r380
	ret.64      %r381


luaO_pushfstring:
.L96:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	symaddr.64  %r383 <- fmt
	cast.64     %r384 <- (64) %r383
	call.64     %r388 <- luaO_pushvfstring, %arg1, %arg2, %r384
	ret.64      %r388


luaO_chunkid:
.L98:
	<entry-point>
	load.8      %r392 <- 0[%arg2]
	scast.32    %r393 <- (8) %r392
	seteq.32    %r394 <- %r393, $61
	br          %r394, .L99, .L100

.L99:
	add.64      %r397 <- %arg2, $1
	call.64     %r399 <- strncpy, %arg1, %r397, %arg3
	add.64      %r402 <- %arg3, $-1
	add.64      %r403 <- %arg1, %r402
	store.8     $0 -> 0[%r403]
	br          .L101

.L100:
	scast.32    %r406 <- (8) %r392
	seteq.32    %r407 <- %r406, $64
	br          %r407, .L102, .L103

.L102:
	add.64      %r409 <- %arg2, $1
	add.64      %r412 <- %arg3, $-8
	call.64     %r415 <- strlen, %r409
	symaddr.64  %r417 <- <anon symbol:0x62d00114ad38>
	call.64     %r418 <- strcpy, %arg1, %r417
	seta.32     %r421 <- %r415, %r412
	phisrc.64   %phi110(source) <- %r409
	br          %r421, .L104, .L105

.L104:
	sub.64      %r424 <- %r415, %r412
	cast.64     %r426 <- (64) %r409
	add.64      %r427 <- %r426, %r424
	ptrcast.64  %r428 <- (64) %r427
	symaddr.64  %r430 <- <anon symbol:0x62d00114b0d8>
	call.64     %r431 <- strcat, %arg1, %r430
	phisrc.64   %phi111(source) <- %r428
	br          .L105

.L105:
	phi.64      %r433 <- %phi110(source), %phi111(source)
	call.64     %r434 <- strcat, %arg1, %r433
	br          .L101

.L103:
	symaddr.64  %r436 <- <anon symbol:0x62d00114b478>
	call.64     %r437 <- strcspn, %arg2, %r436
	add.64      %r440 <- %arg3, $-17
	seta.32     %r444 <- %r437, %r440
	select.64   %r450(len) <- %r444, %r440, %r437
	symaddr.64  %r447 <- <anon symbol:0x62d00114b9e8>
	call.64     %r448 <- strcpy, %arg1, %r447
	add.64      %r451 <- %arg2, %r450(len)
	load.8      %r452 <- 0[%r451]
	br          %r452, .L109, .L110

.L109:
	call.64     %r458 <- strncat, %arg1, %arg2, %r450(len)
	symaddr.64  %r460 <- <anon symbol:0x62d00114be70>
	call.64     %r461 <- strcat, %arg1, %r460
	br          .L111

.L110:
	call.64     %r464 <- strcat, %arg1, %arg2
	br          .L111

.L111:
	symaddr.64  %r466 <- <anon symbol:0x62d00114c210>
	call.64     %r467 <- strcat, %arg1, %r466
	br          .L101

.L101:
	ret


luaT_init:
.L112:
	<entry-point>
	phisrc.32   %phi127(i) <- $0
	br          .L116

.L116:
	phi.32      %r468(i) <- %phi127(i), %phi128(i)
	setlt.32    %r469 <- %r468(i), $17
	br          %r469, .L113, .L115

.L113:
	symaddr.64  %r471 <- luaT_eventname
	scast.64    %r473 <- (32) %r468(i)
	muls.64     %r474 <- %r473, $8
	add.64      %r475 <- %r471, %r474
	load.64     %r476 <- 0[%r475]
	call.64     %r483 <- strlen, %r476
	call.64     %r484 <- luaS_newlstr, %arg1, %r476, %r483
	load.64     %r486 <- 32[%arg1]
	add.64      %r487 <- %r486, $296
	add.64      %r491 <- %r487, %r474
	store.64    %r484 -> 0[%r491]
	load.64     %r493 <- 32[%arg1]
	add.64      %r494 <- %r493, $296
	add.64      %r498 <- %r494, %r474
	load.64     %r499 <- 0[%r498]
	load.8      %r500 <- 9[%r499]
	cast.32     %r501 <- (8) %r500
	or.32       %r502 <- %r501, $32
	scast.8     %r503 <- (32) %r502
	store.8     %r503 -> 9[%r499]
	add.32      %r505 <- %r468(i), $1
	phisrc.32   %phi128(i) <- %r505
	br          .L116

.L115:
	ret


luaT_gettm:
.L117:
	<entry-point>
	call.64     %r508 <- luaH_getstr, %arg1, %arg3
	load.32     %r510 <- 8[%r508]
	select.64   %r523 <- %r510, %r508, $0
	br          %r510, .L120, .L118

.L118:
	shl.32      %r515 <- $1, %arg2
	cast.8      %r516 <- (32) %r515
	cast.32     %r517 <- (8) %r516
	load.8      %r519 <- 10[%arg1]
	cast.32     %r520 <- (8) %r519
	or.32       %r521 <- %r520, %r517
	scast.8     %r522 <- (32) %r521
	store.8     %r522 -> 10[%arg1]
	br          .L120

.L120:
	ret.64      %r523


luaT_gettmbyobj:
.L122:
	<entry-point>
	load.32     %r526 <- 8[%arg2]
	switch      %r526, 5 -> .L124, 7 -> .L125, default -> .L126

.L124:
	load.64     %r528 <- 0[%arg2]
	load.64     %r529(mt) <- 16[%r528]
	phisrc.64   %phi135(mt) <- %r529(mt)
	br          .L123

.L125:
	load.64     %r531 <- 0[%arg2]
	load.64     %r532 <- 16[%r531]
	phisrc.64   %phi136(mt) <- %r532
	br          .L123

.L126:
	load.64     %r534 <- 32[%arg1]
	add.64      %r535 <- %r534, $224
	scast.64    %r538 <- (32) %r526
	muls.64     %r539 <- %r538, $8
	add.64      %r540 <- %r535, %r539
	load.64     %r541 <- 0[%r540]
	phisrc.64   %phi137(mt) <- %r541
	br          .L123

.L123:
	phi.64      %r542(mt) <- %phi135(mt), %phi136(mt), %phi137(mt)
	br          %r542(mt), .L128, .L129

.L128:
	load.64     %r545 <- 32[%arg1]
	add.64      %r546 <- %r545, $296
	scast.64    %r548 <- (32) %arg3
	muls.64     %r549 <- %r548, $8
	add.64      %r550 <- %r546, %r549
	load.64     %r551 <- 0[%r550]
	call.64     %r552 <- luaH_getstr, %r542(mt), %r551
	phisrc.64   %phi131 <- %r552
	br          .L130

.L129:
	symaddr.64  %r553 <- luaO_nilobject_
	ptrcast.64  %r554 <- (64) %r553
	phisrc.64   %phi132 <- %r554
	br          .L130

.L130:
	phi.64      %r555 <- %phi131, %phi132
	ret.64      %r555


luaF_newCclosure:
.L131:
	<entry-point>
	add.32      %r559 <- %arg2, $-1
	scast.64    %r560 <- (32) %r559
	mulu.64     %r561 <- %r560, $16
	cast.32     %r562 <- (64) %r561
	add.32      %r563 <- %r562, $56
	scast.64    %r564 <- (32) %r563
	call.64     %r565 <- luaM_realloc_, %arg1, $0, $0, %r564
	ptrcast.64  %r566 <- (64) %r565
	ptrcast.64  %r569 <- (64) %r566
	call        luaC_link, %arg1, %r569, $6
	store.8     $1 -> 10[%r566]
	store.64    %arg3 -> 24[%r566]
	scast.8     %r574 <- (32) %arg2
	store.8     %r574 -> 11[%r566]
	ret.64      %r566


luaF_newLclosure:
.L133:
	<entry-point>
	add.32      %r580 <- %arg2, $-1
	scast.64    %r581 <- (32) %r580
	mulu.64     %r582 <- %r581, $8
	cast.32     %r583 <- (64) %r582
	add.32      %r584 <- %r583, $48
	scast.64    %r585 <- (32) %r584
	call.64     %r586 <- luaM_realloc_, %arg1, $0, $0, %r585
	ptrcast.64  %r587 <- (64) %r586
	ptrcast.64  %r590 <- (64) %r587
	call        luaC_link, %arg1, %r590, $6
	store.8     $0 -> 10[%r587]
	store.64    %arg3 -> 24[%r587]
	scast.8     %r595 <- (32) %arg2
	store.8     %r595 -> 11[%r587]
	phisrc.32   %phi142(nelems) <- %arg2
	br          .L137

.L137:
	phi.32      %r597 <- %phi142(nelems), %phi143(nelems)
	add.32      %r598(nelems) <- %r597, $-1
	phisrc.32   %phi143(nelems) <- %r598(nelems)
	br          %r597, .L134, .L138

.L134:
	add.64      %r601 <- %r587, $40
	scast.64    %r603 <- (32) %r598(nelems)
	muls.64     %r604 <- %r603, $8
	add.64      %r605 <- %r601, %r604
	store.64    $0 -> 0[%r605]
	br          .L137

.L138:
	ret.64      %r587


luaF_newupval:
.L139:
	<entry-point>
	call.64     %r609 <- luaM_realloc_, %arg1, $0, $0, $40
	ptrcast.64  %r610 <- (64) %r609
	ptrcast.64  %r613 <- (64) %r610
	call        luaC_link, %arg1, %r613, $10
	add.64      %r615 <- %r610, $24
	store.64    %r615 -> 16[%r610]
	store.32    $0 -> 32[%r610]
	ret.64      %r610


luaF_findupval:
.L141:
	<entry-point>
	load.64     %r623 <- 32[%arg1]
	add.64      %r625(pp) <- %arg1, $152
	phisrc.64   %phi150(pp) <- %r625(pp)
	br          .L145

.L145:
	phi.64      %r626(pp) <- %phi150(pp), %phi151(pp)
	load.64     %r627 <- 0[%r626(pp)]
	br          %r627, .L146, .L144

.L146:
	load.64     %r632 <- 16[%r627]
	setae.32    %r634 <- %r632, %arg2
	br          %r634, .L142, .L144

.L142:
	seteq.32    %r638 <- %r632, %arg2
	br          %r638, .L147, .L148

.L147:
	ptrcast.64  %r640 <- (64) %r627
	load.8      %r641 <- 9[%r640]
	cast.32     %r642 <- (8) %r641
	load.8      %r644 <- 32[%r623]
	cast.32     %r645 <- (8) %r644
	xor.32      %r646 <- %r645, $3
	and.32      %r647 <- %r642, %r646
	and.32      %r648 <- %r647, $3
	br          %r648, .L149, .L150

.L149:
	xor.32      %r653 <- %r642, $3
	scast.8     %r654 <- (32) %r653
	store.8     %r654 -> 9[%r640]
	br          .L150

.L150:
	phisrc.64   %phi145(return) <- %r627
	br          .L151

.L148:
	phisrc.64   %phi151(pp) <- %r627
	br          .L145

.L144:
	call.64     %r660 <- luaM_realloc_, %arg1, $0, $0, $40
	ptrcast.64  %r661 <- (64) %r660
	store.8     $10 -> 8[%r661]
	load.8      %r664 <- 32[%r623]
	cast.32     %r665 <- (8) %r664
	and.32      %r666 <- %r665, $3
	store.8     %r666 -> 9[%r661]
	store.64    %arg2 -> 16[%r661]
	load.64     %r672 <- 0[%r626(pp)]
	store.64    %r672 -> 0[%r661]
	ptrcast.64  %r675 <- (64) %r661
	store.64    %r675 -> 0[%r626(pp)]
	add.64      %r678 <- %r623, $184
	store.64    %r678 -> 24[%r661]
	load.64     %r681 <- 216[%r623]
	store.64    %r681 -> 32[%r661]
	store.64    %r661 -> 24[%r681]
	store.64    %r661 -> 216[%r623]
	phisrc.64   %phi146(return) <- %r661
	br          .L151

.L151:
	phi.64      %r656 <- %phi145(return), %phi146(return)
	ret.64      %r656


unlinkupval:
.L152:
	<entry-point>
	load.64     %r690 <- 24[%arg1]
	load.64     %r692 <- 32[%arg1]
	store.64    %r690 -> 24[%r692]
	load.64     %r694 <- 32[%arg1]
	load.64     %r696 <- 24[%arg1]
	store.64    %r694 -> 32[%r696]
	ret


luaF_freeupval:
.L154:
	<entry-point>
	load.64     %r698 <- 16[%arg2]
	add.64      %r700 <- %arg2, $24
	setne.32    %r702 <- %r698, %r700
	br          %r702, .L155, .L156

.L155:
	call        unlinkupval, %arg2
	br          .L156

.L156:
	cast.64     %r706 <- (64) %arg2
	call.64     %r707 <- luaM_realloc_, %arg1, %r706, $40, $0
	ret


luaF_close:
.L158:
	<entry-point>
	load.64     %r709 <- 32[%arg1]
	br          .L162

.L162:
	load.64     %r711 <- 152[%arg1]
	br          %r711, .L163, .L161

.L163:
	load.64     %r716 <- 16[%r711]
	setae.32    %r718 <- %r716, %arg2
	br          %r718, .L159, .L161

.L159:
	ptrcast.64  %r720 <- (64) %r711
	load.64     %r722 <- 0[%r711]
	store.64    %r722 -> 152[%arg1]
	load.8      %r725 <- 9[%r720]
	cast.32     %r726 <- (8) %r725
	load.8      %r728 <- 32[%r709]
	cast.32     %r729 <- (8) %r728
	xor.32      %r730 <- %r729, $3
	and.32      %r731 <- %r726, %r730
	and.32      %r732 <- %r731, $3
	br          %r732, .L164, .L165

.L164:
	call        luaF_freeupval, %arg1, %r711
	br          .L162

.L165:
	call        unlinkupval, %r711
	load.64     %r737 <- 16[%r711]
	load.64     %r742 <- 0[%r737]
	store.64    %r742 -> 24[%r711]
	load.32     %r745 <- 8[%r737]
	store.32    %r745 -> 32[%r711]
	add.64      %r749 <- %r711, $24
	store.64    %r749 -> 16[%r711]
	call        luaC_linkupval, %arg1, %r711
	br          .L162

.L161:
	ret


luaF_newproto:
.L167:
	<entry-point>
	call.64     %r755 <- luaM_realloc_, %arg1, $0, $0, $120
	ptrcast.64  %r756 <- (64) %r755
	ptrcast.64  %r759 <- (64) %r756
	call        luaC_link, %arg1, %r759, $9
	store.64    $0 -> 16[%r756]
	store.32    $0 -> 76[%r756]
	store.64    $0 -> 32[%r756]
	store.32    $0 -> 88[%r756]
	store.64    $0 -> 24[%r756]
	store.32    $0 -> 80[%r756]
	store.32    $0 -> 84[%r756]
	store.32    $0 -> 72[%r756]
	store.8     $0 -> 112[%r756]
	store.64    $0 -> 56[%r756]
	store.8     $0 -> 113[%r756]
	store.8     $0 -> 114[%r756]
	store.8     $0 -> 115[%r756]
	store.64    $0 -> 40[%r756]
	store.32    $0 -> 92[%r756]
	store.64    $0 -> 48[%r756]
	store.32    $0 -> 96[%r756]
	store.32    $0 -> 100[%r756]
	store.64    $0 -> 64[%r756]
	ret.64      %r756


luaF_freeproto:
.L169:
	<entry-point>
	load.64     %r783 <- 24[%arg2]
	cast.64     %r784 <- (64) %r783
	load.32     %r786 <- 80[%arg2]
	scast.64    %r787 <- (32) %r786
	mulu.64     %r788 <- %r787, $4
	call.64     %r789 <- luaM_realloc_, %arg1, %r784, %r788, $0
	load.64     %r792 <- 32[%arg2]
	cast.64     %r793 <- (64) %r792
	load.32     %r795 <- 88[%arg2]
	scast.64    %r796 <- (32) %r795
	mulu.64     %r797 <- %r796, $8
	call.64     %r798 <- luaM_realloc_, %arg1, %r793, %r797, $0
	load.64     %r801 <- 16[%arg2]
	cast.64     %r802 <- (64) %r801
	load.32     %r804 <- 76[%arg2]
	scast.64    %r805 <- (32) %r804
	mulu.64     %r806 <- %r805, $16
	call.64     %r807 <- luaM_realloc_, %arg1, %r802, %r806, $0
	load.64     %r810 <- 40[%arg2]
	cast.64     %r811 <- (64) %r810
	load.32     %r813 <- 84[%arg2]
	scast.64    %r814 <- (32) %r813
	mulu.64     %r815 <- %r814, $4
	call.64     %r816 <- luaM_realloc_, %arg1, %r811, %r815, $0
	load.64     %r819 <- 48[%arg2]
	cast.64     %r820 <- (64) %r819
	load.32     %r822 <- 92[%arg2]
	scast.64    %r823 <- (32) %r822
	mulu.64     %r824 <- %r823, $16
	call.64     %r825 <- luaM_realloc_, %arg1, %r820, %r824, $0
	load.64     %r828 <- 56[%arg2]
	cast.64     %r829 <- (64) %r828
	load.32     %r831 <- 72[%arg2]
	scast.64    %r832 <- (32) %r831
	mulu.64     %r833 <- %r832, $8
	call.64     %r834 <- luaM_realloc_, %arg1, %r829, %r833, $0
	cast.64     %r837 <- (64) %arg2
	call.64     %r838 <- luaM_realloc_, %arg1, %r837, $120, $0
	ret


luaF_freeclosure:
.L171:
	<entry-point>
	load.8      %r840 <- 10[%arg2]
	br          %r840, .L172, .L173

.L172:
	load.8      %r842 <- 11[%arg2]
	cast.32     %r843 <- (8) %r842
	add.32      %r844 <- %r843, $-1
	scast.64    %r845 <- (32) %r844
	mulu.64     %r846 <- %r845, $16
	cast.32     %r847 <- (64) %r846
	add.32      %r848 <- %r847, $56
	phisrc.32   %phi157 <- %r848
	br          .L174

.L173:
	load.8      %r850 <- 11[%arg2]
	cast.32     %r851 <- (8) %r850
	add.32      %r852 <- %r851, $-1
	scast.64    %r853 <- (32) %r852
	mulu.64     %r854 <- %r853, $8
	cast.32     %r855 <- (64) %r854
	add.32      %r856 <- %r855, $48
	phisrc.32   %phi158 <- %r856
	br          .L174

.L174:
	phi.32      %r857 <- %phi157, %phi158
	cast.64     %r860 <- (64) %arg2
	scast.64    %r862 <- (32) %r857
	call.64     %r863 <- luaM_realloc_, %arg1, %r860, %r862, $0
	ret


luaD_seterrorobj:
.L176:
	<entry-point>
	switch      %arg2, 2 -> .L181, 3 -> .L181, 4 -> .L178, 5 -> .L179, default -> .L177

.L178:
	symaddr.64  %r867 <- <anon symbol:0x62d001179d30>
	call.64     %r868 <- luaS_newlstr, %arg1, %r867, $17
	ptrcast.64  %r869 <- (64) %r868
	store.64    %r869 -> 0[%arg3]
	store.32    $4 -> 8[%arg3]
	br          .L177

.L179:
	symaddr.64  %r874 <- <anon symbol:0x62d00117a640>
	call.64     %r875 <- luaS_newlstr, %arg1, %r874, $23
	ptrcast.64  %r876 <- (64) %r875
	store.64    %r876 -> 0[%arg3]
	store.32    $4 -> 8[%arg3]
	br          .L177

.L181:
	load.64     %r880 <- 16[%arg1]
	load.64     %r884 <- -16[%r880]
	store.64    %r884 -> 0[%arg3]
	load.32     %r887 <- -8[%r880]
	store.32    %r887 -> 8[%arg3]
	br          .L177

.L177:
	add.64      %r891 <- %arg3, $16
	store.64    %r891 -> 16[%arg1]
	ret


restore_stack_limit:
.L183:
	<entry-point>
	load.32     %r894 <- 92[%arg1]
	setgt.32    %r895 <- %r894, $0x4e20
	br          %r895, .L184, .L185

.L184:
	load.64     %r897 <- 40[%arg1]
	load.64     %r899 <- 80[%arg1]
	sub.64      %r900 <- %r897, %r899
	divs.64     %r901 <- %r900, $40
	scast.32    %r902 <- (64) %r901
	add.32      %r904 <- %r902, $1
	setlt.32    %r905 <- %r904, $0x4e20
	br          %r905, .L186, .L185

.L186:
	call        luaD_reallocCI, %arg1, $0x4e20
	br          .L185

.L185:
	ret


resetstack:
.L188:
	<entry-point>
	load.64     %r908 <- 80[%arg1]
	store.64    %r908 -> 40[%arg1]
	load.64     %r912 <- 0[%r908]
	store.64    %r912 -> 24[%arg1]
	call        luaF_close, %arg1, %r912
	load.64     %r920 <- 24[%arg1]
	call        luaD_seterrorobj, %arg1, %arg2, %r920
	load.16     %r922 <- 98[%arg1]
	store.16    %r922 -> 96[%arg1]
	store.8     $1 -> 101[%arg1]
	call        restore_stack_limit, %arg1
	store.64    $0 -> 176[%arg1]
	store.64    $0 -> 168[%arg1]
	ret


luaD_throw:
.L190:
	<entry-point>
	load.64     %r929 <- 168[%arg1]
	br          %r929, .L191, .L192

.L191:
	store.32    %arg2 -> 208[%r929]
	load.64     %r935 <- 168[%arg1]
	add.64      %r936 <- %r935, $8
	call        longjmp, %r936, $1
	br          .L193

.L192:
	scast.8     %r938 <- (32) %arg2
	store.8     %r938 -> 10[%arg1]
	load.64     %r941 <- 32[%arg1]
	load.64     %r942 <- 152[%r941]
	br          %r942, .L194, .L195

.L194:
	call        resetstack, %arg1, %arg2
	load.64     %r947 <- 32[%arg1]
	load.64     %r948 <- 152[%r947]
	call.32     %r949 <- %r948, %arg1
	br          .L195

.L195:
	call        exit, $1
	br          .L193

.L193:
	ret


luaD_rawrunprotected:
.L196:
	<entry-point>
	store.32    $0 -> 208[lj]
	load.64     %r951 <- 168[%arg1]
	store.64    %r951 -> 0[lj]
	symaddr.64  %r952 <- lj
	store.64    %r952 -> 168[%arg1]
	add.64      %r955 <- %r952, $8
	call.32     %r956 <- _setjmp, %r955
	br          %r956, .L198, .L197

.L197:
	call        %arg2, %arg1, %arg3
	br          .L198

.L198:
	load.64     %r961 <- 0[lj]
	store.64    %r961 -> 168[%arg1]
	load.32     %r963 <- 208[lj]
	ret.32      %r963


correctstack:
.L200:
	<entry-point>
	load.64     %r967 <- 64[%arg1]
	load.64     %r969 <- 16[%arg1]
	sub.64      %r971 <- %r969, %arg2
	divs.64     %r972 <- %r971, $16
	muls.64     %r973 <- %r972, $16
	add.64      %r974 <- %r967, %r973
	store.64    %r974 -> 16[%arg1]
	load.64     %r977(up) <- 152[%arg1]
	phisrc.64   %phi163(up) <- %r977(up)
	phisrc.64   %phi169 <- %r967
	phisrc.64   %phi170 <- %r967
	phisrc.64   %phi171 <- %r967
	phisrc.64   %phi172 <- %r967
	phisrc.64   %phi173 <- %r967
	phisrc.64   %phi174 <- %r967
	br          .L204

.L204:
	phi.64      %r978(up) <- %phi163(up), %phi164(up)
	br          %r978(up), .L201, .L203

.L201:
	load.64     %r981 <- 64[%arg1]
	load.64     %r983 <- 16[%r978(up)]
	sub.64      %r985 <- %r983, %arg2
	divs.64     %r986 <- %r985, $16
	muls.64     %r987 <- %r986, $16
	add.64      %r988 <- %r981, %r987
	store.64    %r988 -> 16[%r978(up)]
	load.64     %r991 <- 0[%r978(up)]
	phisrc.64   %phi164(up) <- %r991
	br          .L204

.L203:
	load.64     %r993(ci) <- 80[%arg1]
	phisrc.64   %phi167(ci) <- %r993(ci)
	br          .L208

.L208:
	phi.64      %r994(ci) <- %phi167(ci), %phi168(ci)
	load.64     %r996 <- 40[%arg1]
	setbe.32    %r997 <- %r994(ci), %r996
	br          %r997, .L205, .L207

.L205:
	load.64     %r999 <- 64[%arg1]
	load.64     %r1001 <- 16[%r994(ci)]
	sub.64      %r1003 <- %r1001, %arg2
	divs.64     %r1004 <- %r1003, $16
	muls.64     %r1005 <- %r1004, $16
	add.64      %r1006 <- %r999, %r1005
	store.64    %r1006 -> 16[%r994(ci)]
	load.64     %r1009 <- 64[%arg1]
	load.64     %r1011 <- 0[%r994(ci)]
	sub.64      %r1013 <- %r1011, %arg2
	divs.64     %r1014 <- %r1013, $16
	muls.64     %r1015 <- %r1014, $16
	add.64      %r1016 <- %r1009, %r1015
	store.64    %r1016 -> 0[%r994(ci)]
	load.64     %r1019 <- 64[%arg1]
	load.64     %r1021 <- 8[%r994(ci)]
	sub.64      %r1023 <- %r1021, %arg2
	divs.64     %r1024 <- %r1023, $16
	muls.64     %r1025 <- %r1024, $16
	add.64      %r1026 <- %r1019, %r1025
	store.64    %r1026 -> 8[%r994(ci)]
	add.64      %r1029 <- %r994(ci), $40
	phisrc.64   %phi168(ci) <- %r1029
	br          .L208

.L207:
	load.64     %r1031 <- 64[%arg1]
	load.64     %r1033 <- 24[%arg1]
	sub.64      %r1035 <- %r1033, %arg2
	divs.64     %r1036 <- %r1035, $16
	muls.64     %r1037 <- %r1036, $16
	add.64      %r1038 <- %r1031, %r1037
	store.64    %r1038 -> 24[%arg1]
	ret


luaD_reallocstack:
.L210:
	<entry-point>
	load.64     %r1041 <- 64[%arg1]
	add.32      %r1044 <- %arg2, $6
	add.32      %r1046 <- %r1044, $1
	scast.64    %r1047 <- (32) %r1046
	setbe.32    %r1048 <- %r1047, $0xfffffffffffffff
	br          %r1048, .L211, .L212

.L211:
	cast.64     %r1052 <- (64) %r1041
	load.32     %r1054 <- 88[%arg1]
	scast.64    %r1055 <- (32) %r1054
	mulu.64     %r1056 <- %r1055, $16
	scast.64    %r1058 <- (32) %r1044
	mulu.64     %r1059 <- %r1058, $16
	call.64     %r1060 <- luaM_realloc_, %arg1, %r1052, %r1056, %r1059
	phisrc.64   %phi175 <- %r1060
	br          .L213

.L212:
	call.64     %r1062 <- luaM_toobig, %arg1
	cast.64     %r1063 <- (64) %r1062
	phisrc.64   %phi176 <- %r1063
	br          .L213

.L213:
	phi.64      %r1064 <- %phi175, %phi176
	ptrcast.64  %r1065 <- (64) %r1064
	store.64    %r1065 -> 64[%arg1]
	store.32    %r1044 -> 88[%arg1]
	scast.64    %r1072 <- (32) %arg2
	muls.64     %r1073 <- %r1072, $16
	add.64      %r1074 <- %r1065, %r1073
	store.64    %r1074 -> 56[%arg1]
	call        correctstack, %arg1, %r1041
	ret


luaD_reallocCI:
.L215:
	<entry-point>
	load.64     %r1079 <- 80[%arg1]
	add.32      %r1081 <- %arg2, $1
	scast.64    %r1082 <- (32) %r1081
	setbe.32    %r1083 <- %r1082, $0x666666666666666
	br          %r1083, .L216, .L217

.L216:
	cast.64     %r1087 <- (64) %r1079
	load.32     %r1089 <- 92[%arg1]
	scast.64    %r1090 <- (32) %r1089
	mulu.64     %r1091 <- %r1090, $40
	scast.64    %r1093 <- (32) %arg2
	mulu.64     %r1094 <- %r1093, $40
	call.64     %r1095 <- luaM_realloc_, %arg1, %r1087, %r1091, %r1094
	phisrc.64   %phi178 <- %r1095
	br          .L218

.L217:
	call.64     %r1097 <- luaM_toobig, %arg1
	cast.64     %r1098 <- (64) %r1097
	phisrc.64   %phi179 <- %r1098
	br          .L218

.L218:
	phi.64      %r1099 <- %phi178, %phi179
	ptrcast.64  %r1100 <- (64) %r1099
	store.64    %r1100 -> 80[%arg1]
	store.32    %arg2 -> 92[%arg1]
	load.64     %r1107 <- 40[%arg1]
	sub.64      %r1109 <- %r1107, %r1079
	divs.64     %r1110 <- %r1109, $40
	muls.64     %r1111 <- %r1110, $40
	add.64      %r1112 <- %r1100, %r1111
	store.64    %r1112 -> 40[%arg1]
	scast.64    %r1118 <- (32) %arg2
	muls.64     %r1119 <- %r1118, $40
	add.64      %r1120 <- %r1100, %r1119
	add.64      %r1121 <- %r1120, $-40
	store.64    %r1121 -> 72[%arg1]
	ret


luaD_growstack:
.L220:
	<entry-point>
	load.32     %r1125 <- 88[%arg1]
	setle.32    %r1126 <- %arg2, %r1125
	br          %r1126, .L221, .L222

.L221:
	muls.32     %r1130 <- %r1125, $2
	call        luaD_reallocstack, %arg1, %r1130
	br          .L223

.L222:
	add.32      %r1135 <- %r1125, %arg2
	call        luaD_reallocstack, %arg1, %r1135
	br          .L223

.L223:
	ret


growCI:
.L224:
	<entry-point>
	load.32     %r1137 <- 92[%arg1]
	setgt.32    %r1138 <- %r1137, $0x4e20
	br          %r1138, .L225, .L226

.L225:
	call        luaD_throw, %arg1, $5
	br          .L227

.L226:
	muls.32     %r1143 <- %r1137, $2
	call        luaD_reallocCI, %arg1, %r1143
	load.32     %r1145 <- 92[%arg1]
	setgt.32    %r1146 <- %r1145, $0x4e20
	br          %r1146, .L228, .L227

.L228:
	symaddr.64  %r1148 <- <anon symbol:0x62d001181f48>
	call        luaG_runerror, %arg1, %r1148
	br          .L227

.L227:
	load.64     %r1150 <- 40[%arg1]
	add.64      %r1151 <- %r1150, $40
	store.64    %r1151 -> 40[%arg1]
	ret.64      %r1151


adjust_varargs:
.L231:
	<entry-point>
	load.8      %r1154 <- 113[%arg2]
	cast.32     %r1155 <- (8) %r1154
	phisrc.32   %phi188(actual) <- %arg3
	br          .L235

.L235:
	phi.32      %r1156(actual) <- %phi188(actual), %phi189(actual)
	setlt.32    %r1158 <- %r1156(actual), %r1155
	br          %r1158, .L232, .L234

.L232:
	load.64     %r1160 <- 16[%arg1]
	add.64      %r1161 <- %r1160, $16
	store.64    %r1161 -> 16[%arg1]
	store.32    $0 -> 8[%r1160]
	add.32      %r1163 <- %r1156(actual), $1
	phisrc.32   %phi189(actual) <- %r1163
	br          .L235

.L234:
	load.64     %r1165 <- 16[%arg1]
	scast.64    %r1167 <- (32) %r1156(actual)
	muls.64     %r1168 <- %r1167, $16
	sub.64      %r1169 <- %r1165, %r1168
	phisrc.32   %phi192(i) <- $0
	phisrc.64   %phi194 <- %r1165
	phisrc.64   %phi195 <- %r1165
	br          .L239

.L239:
	phi.32      %r1172(i) <- %phi192(i), %phi193(i)
	setlt.32    %r1174 <- %r1172(i), %r1155
	br          %r1174, .L236, .L242

.L236:
	scast.64    %r1177 <- (32) %r1172(i)
	muls.64     %r1178 <- %r1177, $16
	add.64      %r1179 <- %r1169, %r1178
	load.64     %r1181 <- 16[%arg1]
	add.64      %r1182 <- %r1181, $16
	store.64    %r1182 -> 16[%arg1]
	load.64     %r1184 <- 0[%r1179]
	store.64    %r1184 -> 0[%r1181]
	load.32     %r1187 <- 8[%r1179]
	store.32    %r1187 -> 8[%r1181]
	store.32    $0 -> 8[%r1179]
	add.32      %r1196 <- %r1172(i), $1
	phisrc.32   %phi193(i) <- %r1196
	br          .L239

.L242:
	ret.64      %r1165


tryfuncTM:
.L243:
	<entry-point>
	call.64     %r1206 <- luaT_gettmbyobj, %arg1, %arg2, $16
	ptrcast.64  %r1208 <- (64) %arg2
	load.64     %r1210 <- 64[%arg1]
	ptrcast.64  %r1211 <- (64) %r1210
	sub.64      %r1212 <- %r1208, %r1211
	load.32     %r1214 <- 8[%r1206]
	seteq.32    %r1216 <- %r1214, $6
	br          %r1216, .L245, .L244

.L244:
	symaddr.64  %r1219 <- <anon symbol:0x62d001183a78>
	call        luaG_typeerror, %arg1, %arg2, %r1219
	br          .L245

.L245:
	load.64     %r1221(p) <- 16[%arg1]
	phisrc.64   %phi202(p) <- %r1221(p)
	phisrc.64   %phi204(p) <- %r1221(p)
	phisrc.64   %phi205(p) <- %r1221(p)
	phisrc.64   %phi206(p) <- %r1221(p)
	br          .L249

.L249:
	phi.64      %r1222(p) <- %phi202(p), %phi203(p)
	seta.32     %r1224 <- %r1222(p), %arg2
	br          %r1224, .L246, .L248

.L246:
	load.64     %r1229 <- -16[%r1222(p)]
	store.64    %r1229 -> 0[%r1222(p)]
	load.32     %r1232 <- -8[%r1222(p)]
	store.32    %r1232 -> 8[%r1222(p)]
	add.64      %r1236 <- %r1222(p), $-16
	phisrc.64   %phi203(p) <- %r1236
	br          .L249

.L248:
	load.64     %r1238 <- 56[%arg1]
	ptrcast.64  %r1239 <- (64) %r1238
	load.64     %r1241 <- 16[%arg1]
	ptrcast.64  %r1242 <- (64) %r1241
	sub.64      %r1243 <- %r1239, %r1242
	setle.32    %r1244 <- %r1243, $16
	br          %r1244, .L250, .L252

.L250:
	call        luaD_growstack, %arg1, $1
	br          .L252

.L252:
	load.64     %r1247 <- 16[%arg1]
	add.64      %r1248 <- %r1247, $16
	store.64    %r1248 -> 16[%arg1]
	load.64     %r1250 <- 64[%arg1]
	ptrcast.64  %r1251 <- (64) %r1250
	add.64      %r1253 <- %r1251, %r1212
	ptrcast.64  %r1254 <- (64) %r1253
	load.64     %r1258 <- 0[%r1206]
	store.64    %r1258 -> 0[%r1254]
	load.32     %r1261 <- 8[%r1206]
	store.32    %r1261 -> 8[%r1254]
	ret.64      %r1254


luaD_precall:
.L254:
	<entry-point>
	load.32     %r1267 <- 8[%arg2]
	seteq.32    %r1268 <- %r1267, $6
	phisrc.64   %phi218(func) <- %arg2
	br          %r1268, .L256, .L255

.L255:
	call.64     %r1271 <- tryfuncTM, %arg1, %arg2
	phisrc.64   %phi219(func) <- %r1271
	br          .L256

.L256:
	phi.64      %r1272 <- %phi218(func), %phi219(func)
	ptrcast.64  %r1273 <- (64) %r1272
	load.64     %r1275 <- 64[%arg1]
	ptrcast.64  %r1276 <- (64) %r1275
	sub.64      %r1277 <- %r1273, %r1276
	load.64     %r1279 <- 0[%r1272]
	load.64     %r1283 <- 48[%arg1]
	load.64     %r1285 <- 40[%arg1]
	store.64    %r1283 -> 24[%r1285]
	load.8      %r1287 <- 10[%r1279]
	br          %r1287, .L258, .L257

.L257:
	load.64     %r1289 <- 32[%r1279]
	load.64     %r1291 <- 56[%arg1]
	ptrcast.64  %r1292 <- (64) %r1291
	load.64     %r1294 <- 16[%arg1]
	ptrcast.64  %r1295 <- (64) %r1294
	sub.64      %r1296 <- %r1292, %r1295
	load.8      %r1298 <- 115[%r1289]
	cast.32     %r1299 <- (8) %r1298
	muls.32     %r1300 <- %r1299, $16
	scast.64    %r1301 <- (32) %r1300
	setle.32    %r1302 <- %r1296, %r1301
	br          %r1302, .L259, .L261

.L259:
	call        luaD_growstack, %arg1, %r1299
	br          .L261

.L261:
	load.64     %r1308 <- 64[%arg1]
	ptrcast.64  %r1309 <- (64) %r1308
	add.64      %r1311 <- %r1309, %r1277
	ptrcast.64  %r1312(func) <- (64) %r1311
	load.8      %r1314 <- 114[%r1289]
	br          %r1314, .L263, .L262

.L262:
	add.64      %r1316 <- %r1312(func), $16
	load.64     %r1318 <- 16[%arg1]
	load.8      %r1321 <- 113[%r1289]
	cast.64     %r1322 <- (8) %r1321
	muls.64     %r1323 <- %r1322, $16
	add.64      %r1324 <- %r1316, %r1323
	seta.32     %r1325 <- %r1318, %r1324
	phisrc.64   %phi214(func) <- %r1312(func)
	phisrc.64   %phi221(base) <- %r1316
	br          %r1325, .L264, .L266

.L264:
	store.64    %r1324 -> 16[%arg1]
	phisrc.64   %phi222(base) <- %r1316
	br          .L266

.L263:
	load.64     %r1334 <- 16[%arg1]
	sub.64      %r1336 <- %r1334, %r1312(func)
	divs.64     %r1337 <- %r1336, $16
	scast.32    %r1338 <- (64) %r1337
	add.32      %r1339 <- %r1338, $-1
	call.64     %r1343 <- adjust_varargs, %arg1, %r1289, %r1339
	load.64     %r1345 <- 64[%arg1]
	ptrcast.64  %r1346 <- (64) %r1345
	add.64      %r1348 <- %r1346, %r1277
	ptrcast.64  %r1349 <- (64) %r1348
	phisrc.64   %phi215(func) <- %r1349
	phisrc.64   %phi223(base) <- %r1343
	br          .L266

.L266:
	load.64     %r1351 <- 40[%arg1]
	load.64     %r1353 <- 72[%arg1]
	seteq.32    %r1354 <- %r1351, %r1353
	br          %r1354, .L267, .L268

.L267:
	call.64     %r1356 <- growCI, %arg1
	phisrc.64   %phi207 <- %r1356
	br          .L269

.L268:
	add.64      %r1359 <- %r1351, $40
	store.64    %r1359 -> 40[%arg1]
	ptrcast.64  %r1360 <- (64) %r1359
	phisrc.64   %phi208 <- %r1360
	br          .L269

.L269:
	phi.64      %r1361 <- %phi207, %phi208
	phi.64      %r1362 <- %phi214(func), %phi215(func)
	store.64    %r1362 -> 8[%r1361]
	phi.64      %r1364 <- %phi221(base), %phi222(base), %phi223(base)
	store.64    %r1364 -> 0[%r1361]
	store.64    %r1364 -> 24[%arg1]
	load.8      %r1370 <- 115[%r1289]
	cast.64     %r1371 <- (8) %r1370
	muls.64     %r1372 <- %r1371, $16
	add.64      %r1373 <- %r1364, %r1372
	store.64    %r1373 -> 16[%r1361]
	load.64     %r1376 <- 24[%r1289]
	store.64    %r1376 -> 48[%arg1]
	store.32    $0 -> 36[%r1361]
	store.32    %arg3 -> 32[%r1361]
	load.64     %r1382(st) <- 16[%arg1]
	phisrc.64   %phi227(st) <- %r1382(st)
	br          .L273

.L273:
	phi.64      %r1383(st) <- %phi227(st), %phi228(st)
	load.64     %r1385 <- 16[%r1361]
	setb.32     %r1386 <- %r1383(st), %r1385
	br          %r1386, .L270, .L272

.L270:
	store.32    $0 -> 8[%r1383(st)]
	add.64      %r1389 <- %r1383(st), $16
	phisrc.64   %phi228(st) <- %r1389
	br          .L273

.L272:
	store.64    %r1385 -> 16[%arg1]
	phisrc.32   %phi209(return) <- $0
	br          .L274

.L258:
	load.64     %r1395 <- 56[%arg1]
	ptrcast.64  %r1396 <- (64) %r1395
	load.64     %r1398 <- 16[%arg1]
	ptrcast.64  %r1399 <- (64) %r1398
	sub.64      %r1400 <- %r1396, %r1399
	setle.32    %r1401 <- %r1400, $320
	br          %r1401, .L276, .L278

.L276:
	call        luaD_growstack, %arg1, $20
	br          .L278

.L278:
	load.64     %r1404 <- 40[%arg1]
	load.64     %r1406 <- 72[%arg1]
	seteq.32    %r1407 <- %r1404, %r1406
	br          %r1407, .L279, .L280

.L279:
	call.64     %r1409 <- growCI, %arg1
	phisrc.64   %phi210 <- %r1409
	br          .L281

.L280:
	add.64      %r1412 <- %r1404, $40
	store.64    %r1412 -> 40[%arg1]
	ptrcast.64  %r1413 <- (64) %r1412
	phisrc.64   %phi211 <- %r1413
	br          .L281

.L281:
	phi.64      %r1414 <- %phi210, %phi211
	load.64     %r1416 <- 64[%arg1]
	ptrcast.64  %r1417 <- (64) %r1416
	add.64      %r1419 <- %r1417, %r1277
	ptrcast.64  %r1420 <- (64) %r1419
	store.64    %r1420 -> 8[%r1414]
	add.64      %r1424 <- %r1420, $16
	store.64    %r1424 -> 0[%r1414]
	store.64    %r1424 -> 24[%arg1]
	load.64     %r1428 <- 16[%arg1]
	add.64      %r1429 <- %r1428, $320
	store.64    %r1429 -> 16[%r1414]
	store.32    %arg3 -> 32[%r1414]
	load.64     %r1435 <- 40[%arg1]
	load.64     %r1436 <- 8[%r1435]
	load.64     %r1437 <- 0[%r1436]
	load.64     %r1438 <- 32[%r1437]
	call.32     %r1439 <- %r1438, %arg1
	setlt.32    %r1441 <- %r1439, $0
	br          %r1441, .L282, .L283

.L282:
	phisrc.32   %phi212(return) <- $2
	br          .L274

.L283:
	load.64     %r1444 <- 16[%arg1]
	scast.64    %r1446 <- (32) %r1439
	muls.64     %r1447 <- %r1446, $16
	sub.64      %r1448 <- %r1444, %r1447
	call.32     %r1449 <- luaD_poscall, %arg1, %r1448
	phisrc.32   %phi213(return) <- $1
	br          .L274

.L274:
	phi.32      %r1393 <- %phi209(return), %phi212(return), %phi213(return)
	ret.32      %r1393


luaD_poscall:
.L285:
	<entry-point>
	load.64     %r1451 <- 40[%arg1]
	add.64      %r1452 <- %r1451, $-40
	store.64    %r1452 -> 40[%arg1]
	load.64     %r1454(res) <- 8[%r1451]
	load.32     %r1456(i) <- 32[%r1451]
	load.64     %r1459 <- -40[%r1451]
	store.64    %r1459 -> 24[%arg1]
	load.64     %r1463 <- -16[%r1451]
	store.64    %r1463 -> 48[%arg1]
	phisrc.64   %phi236(firstResult) <- %arg2
	phisrc.64   %phi241(res) <- %r1454(res)
	phisrc.64   %phi244(res) <- %r1454(res)
	phisrc.32   %phi249(i) <- %r1456(i)
	br          .L289

.L289:
	phi.32      %r1466(i) <- %phi249(i), %phi250(i)
	phisrc.32   %phi246(i) <- %r1466(i)
	br          %r1466(i), .L290, .L294

.L290:
	phi.64      %r1468(firstResult) <- %phi236(firstResult), %phi237(firstResult)
	load.64     %r1470 <- 16[%arg1]
	setb.32     %r1471 <- %r1468(firstResult), %r1470
	br          %r1471, .L286, .L294

.L286:
	add.64      %r1473 <- %r1468(firstResult), $16
	phi.64      %r1474 <- %phi244(res), %phi245(res)
	add.64      %r1475 <- %r1474, $16
	load.64     %r1477 <- 0[%r1468(firstResult)]
	store.64    %r1477 -> 0[%r1474]
	load.32     %r1480 <- 8[%r1468(firstResult)]
	store.32    %r1480 -> 8[%r1474]
	phisrc.64   %phi237(firstResult) <- %r1473
	phisrc.64   %phi242(res) <- %r1475
	phisrc.64   %phi245(res) <- %r1475
	add.32      %r1484 <- %r1466(i), $-1
	phisrc.32   %phi250(i) <- %r1484
	br          .L289

.L294:
	phi.32      %r1485 <- %phi246(i), %phi247(i)
	add.32      %r1486 <- %r1485, $-1
	setgt.32    %r1487 <- %r1485, $0
	phisrc.32   %phi247(i) <- %r1486
	phi.64      %r1488 <- %phi241(res), %phi242(res), %phi243(res)
	br          %r1487, .L291, .L293

.L291:
	add.64      %r1489 <- %r1488, $16
	store.32    $0 -> 8[%r1488]
	phisrc.64   %phi243(res) <- %r1489
	br          .L294

.L293:
	store.64    %r1488 -> 16[%arg1]
	add.32      %r1493 <- %r1456(i), $0xffffffff00000001
	ret.32      %r1493


luaD_call:
.L296:
	<entry-point>
	load.16     %r1496 <- 96[%arg1]
	add.16      %r1497 <- %r1496, $1
	store.16    %r1497 -> 96[%arg1]
	cast.32     %r1498 <- (16) %r1497
	setge.32    %r1499 <- %r1498, $200
	br          %r1499, .L297, .L298

.L297:
	cast.32     %r1502 <- (16) %r1497
	seteq.32    %r1503 <- %r1502, $200
	br          %r1503, .L299, .L300

.L299:
	symaddr.64  %r1505 <- <anon symbol:0x62d0011aa200>
	call        luaG_runerror, %arg1, %r1505
	br          .L298

.L300:
	cast.32     %r1508 <- (16) %r1497
	setge.32    %r1509 <- %r1508, $225
	br          %r1509, .L302, .L298

.L302:
	call        luaD_throw, %arg1, $5
	br          .L298

.L298:
	call.32     %r1514 <- luaD_precall, %arg1, %arg2, %arg3
	br          %r1514, .L305, .L304

.L304:
	call        luaV_execute, %arg1, $1
	br          .L305

.L305:
	load.16     %r1518 <- 96[%arg1]
	add.16      %r1519 <- %r1518, $-1
	store.16    %r1519 -> 96[%arg1]
	load.64     %r1521 <- 32[%arg1]
	load.64     %r1522 <- 120[%r1521]
	load.64     %r1525 <- 112[%r1521]
	setae.32    %r1526 <- %r1522, %r1525
	br          %r1526, .L306, .L307

.L306:
	call        luaC_step, %arg1
	br          .L307

.L307:
	ret


luaD_pcall:
.L308:
	<entry-point>
	load.16     %r1529 <- 96[%arg1]
	load.64     %r1531 <- 40[%arg1]
	ptrcast.64  %r1532 <- (64) %r1531
	load.64     %r1534 <- 80[%arg1]
	ptrcast.64  %r1535 <- (64) %r1534
	sub.64      %r1536 <- %r1532, %r1535
	load.8      %r1538 <- 101[%arg1]
	load.64     %r1540 <- 176[%arg1]
	store.64    %arg5 -> 176[%arg1]
	call.32     %r1546 <- luaD_rawrunprotected, %arg1, %arg2, %arg3
	br          %r1546, .L309, .L310

.L309:
	load.64     %r1550 <- 64[%arg1]
	ptrcast.64  %r1551 <- (64) %r1550
	add.64      %r1553 <- %r1551, %arg4
	ptrcast.64  %r1554 <- (64) %r1553
	call        luaF_close, %arg1, %r1554
	call        luaD_seterrorobj, %arg1, %r1546, %r1554
	store.16    %r1529 -> 96[%arg1]
	load.64     %r1563 <- 80[%arg1]
	ptrcast.64  %r1564 <- (64) %r1563
	add.64      %r1566 <- %r1564, %r1536
	ptrcast.64  %r1567 <- (64) %r1566
	store.64    %r1567 -> 40[%arg1]
	load.64     %r1571 <- 0[%r1567]
	store.64    %r1571 -> 24[%arg1]
	load.64     %r1575 <- 24[%r1567]
	store.64    %r1575 -> 48[%arg1]
	store.8     %r1538 -> 101[%arg1]
	call        restore_stack_limit, %arg1
	br          .L310

.L310:
	store.64    %r1540 -> 176[%arg1]
	ret.32      %r1546


f_parser:
.L312:
	<entry-point>
	ptrcast.64  %r1585 <- (64) %arg2
	load.64     %r1587 <- 32[%arg1]
	load.64     %r1588 <- 120[%r1587]
	load.64     %r1591 <- 112[%r1587]
	setae.32    %r1592 <- %r1588, %r1591
	br          %r1592, .L313, .L314

.L313:
	call        luaC_step, %arg1
	br          .L314

.L314:
	load.64     %r1596 <- 0[%r1585]
	add.64      %r1598 <- %r1585, $8
	load.64     %r1600 <- 32[%r1585]
	call.64     %r1601 <- luaY_parser, %arg1, %r1596, %r1598, %r1600
	load.8      %r1604 <- 112[%r1601]
	cast.32     %r1605 <- (8) %r1604
	load.64     %r1607 <- 120[%arg1]
	call.64     %r1609 <- luaF_newLclosure, %arg1, %r1605, %r1607
	store.64    %r1601 -> 32[%r1609]
	phisrc.32   %phi256(i) <- $0
	br          .L318

.L318:
	phi.32      %r1612(i) <- %phi256(i), %phi257(i)
	load.8      %r1614 <- 112[%r1601]
	cast.32     %r1615 <- (8) %r1614
	setlt.32    %r1616 <- %r1612(i), %r1615
	br          %r1616, .L315, .L317

.L315:
	call.64     %r1618 <- luaF_newupval, %arg1
	add.64      %r1621 <- %r1609, $40
	scast.64    %r1623 <- (32) %r1612(i)
	muls.64     %r1624 <- %r1623, $8
	add.64      %r1625 <- %r1621, %r1624
	store.64    %r1618 -> 0[%r1625]
	add.32      %r1627 <- %r1612(i), $1
	phisrc.32   %phi257(i) <- %r1627
	br          .L318

.L317:
	load.64     %r1629 <- 16[%arg1]
	ptrcast.64  %r1631 <- (64) %r1609
	store.64    %r1631 -> 0[%r1629]
	store.32    $6 -> 8[%r1629]
	load.64     %r1635 <- 56[%arg1]
	ptrcast.64  %r1636 <- (64) %r1635
	load.64     %r1638 <- 16[%arg1]
	ptrcast.64  %r1639 <- (64) %r1638
	sub.64      %r1640 <- %r1636, %r1639
	setle.32    %r1641 <- %r1640, $16
	br          %r1641, .L319, .L321

.L319:
	call        luaD_growstack, %arg1, $1
	br          .L321

.L321:
	load.64     %r1644 <- 16[%arg1]
	add.64      %r1645 <- %r1644, $16
	store.64    %r1645 -> 16[%arg1]
	ret


luaD_protectedparser:
.L323:
	<entry-point>
	store.64    %arg2 -> 0[p]
	store.64    %arg3 -> 32[p]
	store.64    $0 -> 8[p]
	store.64    $0 -> 24[p]
	symaddr.64  %r1649 <- f_parser
	symaddr.64  %r1650 <- p
	cast.64     %r1651 <- (64) %r1650
	load.64     %r1653 <- 16[%arg1]
	ptrcast.64  %r1654 <- (64) %r1653
	load.64     %r1656 <- 64[%arg1]
	ptrcast.64  %r1657 <- (64) %r1656
	sub.64      %r1658 <- %r1654, %r1657
	load.64     %r1660 <- 176[%arg1]
	call.32     %r1661 <- luaD_pcall, %arg1, %r1649, %r1651, %r1658, %r1660
	load.64     %r1663 <- 8[p]
	cast.64     %r1664 <- (64) %r1663
	load.64     %r1665 <- 24[p]
	call.64     %r1667 <- luaM_realloc_, %arg1, %r1664, %r1665, $0
	ret.32      %r1661


luaS_resize:
.L325:
	<entry-point>
	load.64     %r1672 <- 32[%arg1]
	load.8      %r1673 <- 33[%r1672]
	cast.32     %r1674 <- (8) %r1673
	seteq.32    %r1675 <- %r1674, $2
	br          %r1675, .L328, .L327

.L327:
	add.32      %r1677 <- %arg2, $1
	scast.64    %r1678 <- (32) %r1677
	setbe.32    %r1679 <- %r1678, $0x1fffffffffffffff
	br          %r1679, .L329, .L330

.L329:
	scast.64    %r1682 <- (32) %arg2
	mulu.64     %r1683 <- %r1682, $8
	call.64     %r1684 <- luaM_realloc_, %arg1, $0, $0, %r1683
	phisrc.64   %phi259 <- %r1684
	br          .L331

.L330:
	call.64     %r1686 <- luaM_toobig, %arg1
	cast.64     %r1687 <- (64) %r1686
	phisrc.64   %phi260 <- %r1687
	br          .L331

.L331:
	phi.64      %r1688 <- %phi259, %phi260
	ptrcast.64  %r1689 <- (64) %r1688
	load.64     %r1691 <- 32[%arg1]
	phisrc.32   %phi267(i) <- $0
	br          .L335

.L335:
	phi.32      %r1693(i) <- %phi267(i), %phi268(i)
	setlt.32    %r1695 <- %r1693(i), %arg2
	br          %r1695, .L332, .L334

.L332:
	scast.64    %r1698 <- (32) %r1693(i)
	muls.64     %r1699 <- %r1698, $8
	add.64      %r1700 <- %r1689, %r1699
	store.64    $0 -> 0[%r1700]
	add.32      %r1702 <- %r1693(i), $1
	phisrc.32   %phi268(i) <- %r1702
	br          .L335

.L334:
	phisrc.32   %phi263(i) <- $0
	br          .L339

.L339:
	phi.32      %r1703(i) <- %phi263(i), %phi264(i)
	load.32     %r1705 <- 12[%r1691]
	setlt.32    %r1706 <- %r1703(i), %r1705
	br          %r1706, .L336, .L338

.L336:
	load.64     %r1708 <- 0[%r1691]
	scast.64    %r1710 <- (32) %r1703(i)
	muls.64     %r1711 <- %r1710, $8
	add.64      %r1712 <- %r1708, %r1711
	load.64     %r1713(p) <- 0[%r1712]
	phisrc.64   %phi270(p) <- %r1713(p)
	br          .L343

.L343:
	phi.64      %r1714(p) <- %phi270(p), %phi271(p)
	br          %r1714(p), .L340, .L337

.L340:
	load.64     %r1716 <- 0[%r1714(p)]
	load.32     %r1718 <- 12[%r1714(p)]
	add.32      %r1721 <- %arg2, $-1
	and.32      %r1723 <- %r1718, %r1721
	scast.64    %r1727 <- (32) %r1723
	muls.64     %r1728 <- %r1727, $8
	add.64      %r1729 <- %r1689, %r1728
	load.64     %r1730 <- 0[%r1729]
	store.64    %r1730 -> 0[%r1714(p)]
	store.64    %r1714(p) -> 0[%r1729]
	phisrc.64   %phi271(p) <- %r1716
	br          .L343

.L337:
	add.32      %r1740 <- %r1703(i), $1
	phisrc.32   %phi264(i) <- %r1740
	br          .L339

.L338:
	load.64     %r1743 <- 0[%r1691]
	cast.64     %r1744 <- (64) %r1743
	scast.64    %r1747 <- (32) %r1705
	mulu.64     %r1748 <- %r1747, $8
	call.64     %r1749 <- luaM_realloc_, %arg1, %r1744, %r1748, $0
	store.32    %arg2 -> 12[%r1691]
	store.64    %r1689 -> 0[%r1691]
	br          .L328

.L328:
	ret


newlstr:
.L344:
	<entry-point>
	add.64      %r1755 <- %arg3, $1
	seta.32     %r1756 <- %r1755, $-27
	br          %r1756, .L345, .L346

.L345:
	call.64     %r1758 <- luaM_toobig, %arg1
	br          .L346

.L346:
	add.64      %r1763 <- %arg3, $25
	call.64     %r1764 <- luaM_realloc_, %arg1, $0, $0, %r1763
	ptrcast.64  %r1765 <- (64) %r1764
	store.64    %arg3 -> 16[%r1765]
	store.32    %arg4 -> 12[%r1765]
	load.64     %r1771 <- 32[%arg1]
	load.8      %r1772 <- 32[%r1771]
	cast.32     %r1773 <- (8) %r1772
	and.32      %r1774 <- %r1773, $3
	store.8     %r1774 -> 9[%r1765]
	store.8     $4 -> 8[%r1765]
	store.8     $0 -> 10[%r1765]
	add.64      %r1780 <- %r1765, $24
	cast.64     %r1781 <- (64) %r1780
	cast.64     %r1783 <- (64) %arg2
	call.64     %r1786 <- memcpy, %r1781, %r1783, %arg3
	ptrcast.64  %r1789 <- (64) %r1780
	add.64      %r1791 <- %r1789, %arg3
	store.8     $0 -> 0[%r1791]
	load.64     %r1793 <- 32[%arg1]
	load.32     %r1797 <- 12[%r1793]
	add.32      %r1798 <- %r1797, $-1
	and.32      %r1800 <- %arg4, %r1798
	load.64     %r1804 <- 0[%r1793]
	cast.64     %r1806 <- (32) %r1800
	muls.64     %r1807 <- %r1806, $8
	add.64      %r1808 <- %r1804, %r1807
	load.64     %r1809 <- 0[%r1808]
	store.64    %r1809 -> 0[%r1765]
	ptrcast.64  %r1812 <- (64) %r1765
	load.64     %r1814 <- 0[%r1793]
	add.64      %r1818 <- %r1814, %r1807
	store.64    %r1812 -> 0[%r1818]
	load.32     %r1820 <- 8[%r1793]
	add.32      %r1821 <- %r1820, $1
	store.32    %r1821 -> 8[%r1793]
	load.32     %r1825 <- 12[%r1793]
	seta.32     %r1827 <- %r1821, %r1825
	br          %r1827, .L349, .L350

.L349:
	setle.32    %r1830 <- %r1825, $0x3ffffffe
	br          %r1830, .L347, .L350

.L347:
	muls.32     %r1834 <- %r1825, $2
	call        luaS_resize, %arg1, %r1834
	br          .L350

.L350:
	ret.64      %r1765


luaS_newlstr:
.L351:
	<entry-point>
	cast.32     %r1838(h) <- (64) %arg3
	lsr.64      %r1840 <- %arg3, $5
	add.64      %r1841 <- %r1840, $1
	phisrc.32   %phi282(h) <- %r1838(h)
	phisrc.64   %phi286(l1) <- %arg3
	br          .L355

.L355:
	phi.64      %r1843(l1) <- %phi286(l1), %phi287(l1)
	setae.32    %r1845 <- %r1843(l1), %r1841
	phi.32      %r1846 <- %phi282(h), %phi283(h)
	br          %r1845, .L352, .L354

.L352:
	shl.32      %r1848 <- %r1846, $5
	lsr.32      %r1850 <- %r1846, $2
	add.32      %r1851 <- %r1848, %r1850
	add.64      %r1854 <- %r1843(l1), $-1
	add.64      %r1855 <- %arg2, %r1854
	load.8      %r1856 <- 0[%r1855]
	cast.32     %r1858 <- (8) %r1856
	add.32      %r1859 <- %r1851, %r1858
	xor.32      %r1860 <- %r1846, %r1859
	phisrc.32   %phi283(h) <- %r1860
	sub.64      %r1864 <- %r1843(l1), %r1841
	phisrc.64   %phi287(l1) <- %r1864
	br          .L355

.L354:
	load.64     %r1867 <- 32[%arg1]
	load.64     %r1868 <- 0[%r1867]
	load.32     %r1872 <- 12[%r1867]
	add.32      %r1873 <- %r1872, $-1
	and.32      %r1875 <- %r1846, %r1873
	scast.64    %r1877 <- (32) %r1875
	muls.64     %r1878 <- %r1877, $8
	add.64      %r1879 <- %r1868, %r1878
	load.64     %r1880(o) <- 0[%r1879]
	phisrc.64   %phi292(o) <- %r1880(o)
	br          .L359

.L359:
	phi.64      %r1881(o) <- %phi292(o), %phi293(o)
	br          %r1881(o), .L356, .L358

.L356:
	load.64     %r1886 <- 16[%r1881(o)]
	seteq.32    %r1888 <- %r1886, %arg3
	cast.64     %r1890 <- (64) %arg2
	add.64      %r1892 <- %r1881(o), $24
	ptrcast.64  %r1893 <- (64) %r1892
	cast.64     %r1894 <- (64) %r1893
	call.32     %r1896 <- memcmp, %r1890, %r1894, %arg3
	seteq.32    %r1897 <- %r1896, $0
	and-bool.32 %r1898 <- %r1888, %r1897
	br          %r1898, .L360, .L357

.L360:
	load.8      %r1900 <- 9[%r1881(o)]
	cast.32     %r1901 <- (8) %r1900
	load.64     %r1903 <- 32[%arg1]
	load.8      %r1904 <- 32[%r1903]
	cast.32     %r1905 <- (8) %r1904
	xor.32      %r1906 <- %r1905, $3
	and.32      %r1907 <- %r1901, %r1906
	and.32      %r1908 <- %r1907, $3
	br          %r1908, .L362, .L363

.L362:
	xor.32      %r1912 <- %r1901, $3
	scast.8     %r1913 <- (32) %r1912
	store.8     %r1913 -> 9[%r1881(o)]
	br          .L363

.L363:
	phisrc.64   %phi277(return) <- %r1881(o)
	br          .L364

.L357:
	load.64     %r1917 <- 0[%r1881(o)]
	phisrc.64   %phi293(o) <- %r1917
	br          .L359

.L358:
	call.64     %r1922 <- newlstr, %arg1, %arg2, %arg3, %r1846
	phisrc.64   %phi278(return) <- %r1922
	br          .L364

.L364:
	phi.64      %r1915 <- %phi277(return), %phi278(return)
	ret.64      %r1915


luaS_newudata:
.L365:
	<entry-point>
	seta.32     %r1924 <- %arg2, $-43
	br          %r1924, .L366, .L367

.L366:
	call.64     %r1926 <- luaM_toobig, %arg1
	br          .L367

.L367:
	add.64      %r1929 <- %arg2, $40
	call.64     %r1930 <- luaM_realloc_, %arg1, $0, $0, %r1929
	ptrcast.64  %r1931 <- (64) %r1930
	load.64     %r1933 <- 32[%arg1]
	load.8      %r1934 <- 32[%r1933]
	cast.32     %r1935 <- (8) %r1934
	and.32      %r1936 <- %r1935, $3
	store.8     %r1936 -> 9[%r1931]
	store.8     $7 -> 8[%r1931]
	store.64    %arg2 -> 32[%r1931]
	store.64    $0 -> 16[%r1931]
	store.64    %arg3 -> 24[%r1931]
	load.64     %r1946 <- 32[%arg1]
	load.64     %r1947 <- 176[%r1946]
	load.64     %r1948 <- 0[%r1947]
	store.64    %r1948 -> 0[%r1931]
	ptrcast.64  %r1951 <- (64) %r1931
	load.64     %r1953 <- 32[%arg1]
	load.64     %r1954 <- 176[%r1953]
	store.64    %r1951 -> 0[%r1954]
	ret.64      %r1931


hashnum:
.L369:
	<entry-point>
	store.64    %arg2 -> 0[n]
	set.64      %r1958 <- 0.000000
	seteq.32    %r1959 <- %arg2, %r1958
	br          %r1959, .L370, .L371

.L370:
	load.64     %r1961 <- 32[%arg1]
	phisrc.64   %phi296(return) <- %r1961
	br          .L372

.L371:
	symaddr.64  %r1964 <- a
	cast.64     %r1965 <- (64) %r1964
	symaddr.64  %r1966 <- n
	cast.64     %r1967 <- (64) %r1966
	call.64     %r1968 <- memcpy, %r1965, %r1967, $8
	phisrc.32   %phi300(i) <- $1
	br          .L376

.L376:
	phi.32      %r1969(i) <- %phi300(i), %phi301(i)
	setlt.32    %r1970 <- %r1969(i), $2
	br          %r1970, .L373, .L375

.L373:
	scast.64    %r1973 <- (32) %r1969(i)
	muls.64     %r1974 <- %r1973, $4
	add.64      %r1975 <- %r1964, %r1974
	load.32     %r1976 <- 0[%r1975]
	load.32     %r1977 <- 0[a]
	add.32      %r1979 <- %r1977, %r1976
	store.32    %r1979 -> 0[a]
	add.32      %r1982 <- %r1969(i), $1
	phisrc.32   %phi301(i) <- %r1982
	br          .L376

.L375:
	load.64     %r1984 <- 32[%arg1]
	load.32     %r1985 <- 0[a]
	cast.64     %r1986 <- (32) %r1985
	load.8      %r1988 <- 11[%arg1]
	cast.32     %r1989 <- (8) %r1988
	shl.64      %r1990 <- $1, %r1989
	add.64      %r1991 <- %r1990, $-1
	or.64       %r1992 <- %r1991, $1
	modu.64     %r1993 <- %r1986, %r1992
	muls.64     %r1994 <- %r1993, $40
	add.64      %r1995 <- %r1984, %r1994
	phisrc.64   %phi297(return) <- %r1995
	br          .L372

.L372:
	phi.64      %r1963 <- %phi296(return), %phi297(return)
	ret.64      %r1963


mainposition:
.L377:
	<entry-point>
	load.32     %r1997 <- 8[%arg2]
	switch      %r1997, 1 -> .L381, 2 -> .L382, 3 -> .L379, 4 -> .L380, default -> .L383

.L379:
	load.64     %r2000 <- 0[%arg2]
	call.64     %r2002 <- hashnum, %arg1, %r2000
	phisrc.64   %phi302(return) <- %r2002
	br          .L384

.L380:
	load.64     %r2005 <- 32[%arg1]
	load.64     %r2007 <- 0[%arg2]
	load.32     %r2008 <- 12[%r2007]
	cast.64     %r2009 <- (32) %r2008
	load.8      %r2011 <- 11[%arg1]
	cast.32     %r2012 <- (8) %r2011
	shl.64      %r2013 <- $1, %r2012
	add.64      %r2014 <- %r2013, $-1
	and.64      %r2015 <- %r2009, %r2014
	cast.32     %r2016 <- (64) %r2015
	scast.64    %r2017 <- (32) %r2016
	muls.64     %r2018 <- %r2017, $40
	add.64      %r2019 <- %r2005, %r2018
	phisrc.64   %phi303(return) <- %r2019
	br          .L384

.L381:
	load.64     %r2021 <- 32[%arg1]
	load.32     %r2023 <- 0[%arg2]
	scast.64    %r2024 <- (32) %r2023
	load.8      %r2026 <- 11[%arg1]
	cast.32     %r2027 <- (8) %r2026
	shl.64      %r2028 <- $1, %r2027
	add.64      %r2029 <- %r2028, $-1
	and.64      %r2030 <- %r2024, %r2029
	cast.32     %r2031 <- (64) %r2030
	scast.64    %r2032 <- (32) %r2031
	muls.64     %r2033 <- %r2032, $40
	add.64      %r2034 <- %r2021, %r2033
	phisrc.64   %phi304(return) <- %r2034
	br          .L384

.L382:
	load.64     %r2036 <- 32[%arg1]
	load.64     %r2038 <- 0[%arg2]
	cast.64     %r2039 <- (64) %r2038
	cast.32     %r2040 <- (64) %r2039
	cast.64     %r2041 <- (32) %r2040
	load.8      %r2043 <- 11[%arg1]
	cast.32     %r2044 <- (8) %r2043
	shl.64      %r2045 <- $1, %r2044
	add.64      %r2046 <- %r2045, $-1
	or.64       %r2047 <- %r2046, $1
	modu.64     %r2048 <- %r2041, %r2047
	muls.64     %r2049 <- %r2048, $40
	add.64      %r2050 <- %r2036, %r2049
	phisrc.64   %phi305(return) <- %r2050
	br          .L384

.L383:
	load.64     %r2052 <- 32[%arg1]
	load.64     %r2054 <- 0[%arg2]
	cast.64     %r2055 <- (64) %r2054
	cast.32     %r2056 <- (64) %r2055
	cast.64     %r2057 <- (32) %r2056
	load.8      %r2059 <- 11[%arg1]
	cast.32     %r2060 <- (8) %r2059
	shl.64      %r2061 <- $1, %r2060
	add.64      %r2062 <- %r2061, $-1
	or.64       %r2063 <- %r2062, $1
	modu.64     %r2064 <- %r2057, %r2063
	muls.64     %r2065 <- %r2064, $40
	add.64      %r2066 <- %r2052, %r2065
	phisrc.64   %phi306(return) <- %r2066
	br          .L384

.L384:
	phi.64      %r2003 <- %phi302(return), %phi303(return), %phi304(return), %phi305(return), %phi306(return)
	ret.64      %r2003


arrayindex:
.L385:
	<entry-point>
	load.32     %r2068 <- 8[%arg1]
	seteq.32    %r2070 <- %r2068, $3
	br          %r2070, .L386, .L387

.L386:
	load.64     %r2072 <- 0[%arg1]
	cast.32     %r2075 <- (64) %r2072
	fpcast.64   %r2077 <- (32) %r2075
	seteq.32    %r2079 <- %r2077, %r2072
	br          %r2079, .L388, .L387

.L388:
	phisrc.32   %phi307(return) <- %r2075
	br          .L390

.L387:
	phisrc.32   %phi308(return) <- $0xffffffff
	br          .L390

.L390:
	phi.32      %r2081 <- %phi307(return), %phi308(return)
	ret.32      %r2081


findindex:
.L391:
	<entry-point>
	load.32     %r2083 <- 8[%arg3]
	br          %r2083, .L393, .L392

.L392:
	phisrc.32   %phi309(return) <- $0xffffffff
	br          .L394

.L393:
	call.32     %r2087 <- arrayindex, %arg3
	setlt.32    %r2089 <- $0, %r2087
	br          %r2089, .L397, .L396

.L397:
	load.32     %r2092 <- 56[%arg2]
	setle.32    %r2093 <- %r2087, %r2092
	br          %r2093, .L395, .L396

.L395:
	add.32      %r2095 <- %r2087, $-1
	phisrc.32   %phi310(return) <- %r2095
	br          .L394

.L396:
	call.64     %r2098(n) <- mainposition, %arg2, %arg3
	phisrc.64   %phi322(n) <- %r2098(n)
	br          .L399

.L399:
	phi.64      %r2099(n) <- %phi322(n), %phi323(n)
	add.64      %r2100 <- %r2099(n), $16
	call.32     %r2103 <- luaO_rawequalObj, %r2100, %arg3
	br          %r2103, .L402, .L404

.L404:
	load.32     %r2105 <- 24[%r2099(n)]
	seteq.32    %r2106 <- %r2105, $11
	br          %r2106, .L406, .L403

.L406:
	load.32     %r2108 <- 8[%arg3]
	setge.32    %r2109 <- %r2108, $4
	br          %r2109, .L405, .L403

.L405:
	load.64     %r2111 <- 16[%r2099(n)]
	load.64     %r2113 <- 0[%arg3]
	seteq.32    %r2114 <- %r2111, %r2113
	br          %r2114, .L402, .L403

.L402:
	load.64     %r2117 <- 32[%arg2]
	sub.64      %r2119 <- %r2099(n), %r2117
	divs.64     %r2120 <- %r2119, $40
	scast.32    %r2121 <- (64) %r2120
	load.32     %r2124 <- 56[%arg2]
	add.32      %r2125 <- %r2121, %r2124
	phisrc.32   %phi311(return) <- %r2125
	br          .L394

.L403:
	load.64     %r2127(n) <- 32[%r2099(n)]
	phisrc.64   %phi323(n) <- %r2127(n)
	br          %r2127(n), .L399, .L401

.L401:
	symaddr.64  %r2130 <- <anon symbol:0x62d0011b5d30>
	call        luaG_runerror, %arg1, %r2130
	phisrc.32   %phi312(return) <- $0
	br          .L394

.L394:
	phi.32      %r2085 <- %phi309(return), %phi310(return), %phi311(return), %phi312(return)
	ret.32      %r2085


luaH_next:
.L408:
	<entry-point>
	call.32     %r2134 <- findindex, %arg1, %arg2, %arg3
	add.32      %r2136(i) <- %r2134, $1
	phisrc.32   %phi336(i) <- %r2136(i)
	br          .L412

.L412:
	phi.32      %r2137(i) <- %phi336(i), %phi337(i)
	load.32     %r2139 <- 56[%arg2]
	setlt.32    %r2140 <- %r2137(i), %r2139
	br          %r2140, .L409, .L411

.L409:
	load.64     %r2142 <- 24[%arg2]
	scast.64    %r2144 <- (32) %r2137(i)
	muls.64     %r2145 <- %r2144, $16
	add.64      %r2146 <- %r2142, %r2145
	load.32     %r2147 <- 8[%r2146]
	add.32      %r2151 <- %r2137(i), $1
	br          %r2147, .L413, .L410

.L413:
	fpcast.64   %r2152 <- (32) %r2151
	store.64    %r2152 -> 0[%arg3]
	store.32    $3 -> 8[%arg3]
	load.64     %r2156 <- 24[%arg2]
	add.64      %r2160 <- %r2156, %r2145
	load.64     %r2164 <- 0[%r2160]
	store.64    %r2164 -> 16[%arg3]
	load.32     %r2167 <- 8[%r2160]
	store.32    %r2167 -> 24[%arg3]
	phisrc.32   %phi324(return) <- $1
	br          .L415

.L410:
	phisrc.32   %phi337(i) <- %r2151
	br          .L412

.L411:
	sub.32      %r2177 <- %r2137(i), %r2139
	phisrc.32   %phi330(i) <- %r2177
	br          .L419

.L419:
	phi.32      %r2179(i) <- %phi330(i), %phi331(i)
	load.8      %r2181 <- 11[%arg2]
	cast.32     %r2182 <- (8) %r2181
	shl.64      %r2183 <- $1, %r2182
	cast.32     %r2184 <- (64) %r2183
	setlt.32    %r2185 <- %r2179(i), %r2184
	br          %r2185, .L416, .L418

.L416:
	load.64     %r2187 <- 32[%arg2]
	scast.64    %r2189 <- (32) %r2179(i)
	muls.64     %r2190 <- %r2189, $40
	add.64      %r2191 <- %r2187, %r2190
	load.32     %r2192 <- 8[%r2191]
	br          %r2192, .L420, .L417

.L420:
	load.64     %r2204 <- 16[%r2191]
	store.64    %r2204 -> 0[%arg3]
	load.32     %r2207 <- 24[%r2191]
	store.32    %r2207 -> 8[%arg3]
	load.64     %r2211 <- 32[%arg2]
	add.64      %r2215 <- %r2211, %r2190
	load.64     %r2220 <- 0[%r2215]
	store.64    %r2220 -> 16[%arg3]
	load.32     %r2223 <- 8[%r2215]
	store.32    %r2223 -> 24[%arg3]
	phisrc.32   %phi325(return) <- $1
	br          .L415

.L417:
	add.32      %r2227 <- %r2179(i), $1
	phisrc.32   %phi331(i) <- %r2227
	br          .L419

.L418:
	phisrc.32   %phi326(return) <- $0
	br          .L415

.L415:
	phi.32      %r2170 <- %phi324(return), %phi325(return), %phi326(return)
	ret.32      %r2170


computesizes:
.L422:
	<entry-point>
	phisrc.32   %phi341(a) <- $0
	phisrc.32   %phi345(a) <- $0
	phisrc.32   %phi347(na) <- $0
	phisrc.32   %phi349(n) <- $0
	phisrc.32   %phi354(i) <- $0
	phisrc.32   %phi361(twotoi) <- $1
	br          .L426

.L426:
	phi.32      %r2228(twotoi) <- %phi361(twotoi), %phi362(twotoi)
	divs.32     %r2229 <- %r2228(twotoi), $2
	load.32     %r2231 <- 0[%arg2]
	setlt.32    %r2232 <- %r2229, %r2231
	br          %r2232, .L423, .L425

.L423:
	phi.32      %r2234(i) <- %phi354(i), %phi355(i)
	scast.64    %r2235 <- (32) %r2234(i)
	muls.64     %r2236 <- %r2235, $4
	add.64      %r2237 <- %arg1, %r2236
	load.32     %r2238 <- 0[%r2237]
	setgt.32    %r2239 <- %r2238, $0
	br          %r2239, .L427, .L428

.L427:
	phi.32      %r2246 <- %phi345(a), %phi346(a)
	add.32      %r2248 <- %r2246, %r2238
	setgt.32    %r2253 <- %r2248, %r2229
	phisrc.32   %phi342(a) <- %r2248
	phisrc.32   %phi346(a) <- %r2248
	br          %r2253, .L429, .L428

.L429:
	phisrc.32   %phi343(a) <- %r2248
	phisrc.32   %phi348(na) <- %r2248
	phisrc.32   %phi350(n) <- %r2228(twotoi)
	br          .L428

.L428:
	phi.32      %r2256 <- %phi341(a), %phi342(a), %phi343(a)
	seteq.32    %r2259 <- %r2256, %r2231
	br          %r2259, .L425, .L424

.L424:
	add.32      %r2261 <- %r2234(i), $1
	muls.32     %r2264 <- %r2228(twotoi), $2
	phisrc.32   %phi355(i) <- %r2261
	phisrc.32   %phi362(twotoi) <- %r2264
	br          .L426

.L425:
	phi.32      %r2266 <- %phi349(n), %phi350(n)
	store.32    %r2266 -> 0[%arg2]
	phi.32      %r2268 <- %phi347(na), %phi348(na)
	ret.32      %r2268


countint:
.L434:
	<entry-point>
	call.32     %r2271 <- arrayindex, %arg1
	setlt.32    %r2273 <- $0, %r2271
	setle.32    %r2275 <- %r2271, $0x40000000
	and-bool.32 %r2276 <- %r2273, %r2275
	setne.32    %r2288 <- %r2276, $0
	br          %r2276, .L435, .L437

.L435:
	add.32      %r2279 <- %r2271, $-1
	call.32     %r2281 <- luaO_log2, %r2279
	add.32      %r2282 <- %r2281, $1
	scast.64    %r2283 <- (32) %r2282
	muls.64     %r2284 <- %r2283, $4
	add.64      %r2285 <- %arg2, %r2284
	load.32     %r2286 <- 0[%r2285]
	add.32      %r2287 <- %r2286, $1
	store.32    %r2287 -> 0[%r2285]
	br          .L437

.L437:
	ret.32      %r2288


numusearray:
.L439:
	<entry-point>
	phisrc.32   %phi368(ause) <- $0
	phisrc.32   %phi370(ause) <- $0
	phisrc.32   %phi374(i) <- $1
	phisrc.32   %phi377(i) <- $1
	phisrc.32   %phi381(lg) <- $0
	phisrc.32   %phi384(ttlg) <- $1
	br          .L443

.L443:
	phi.32      %r2289(lg) <- %phi381(lg), %phi382(lg)
	setle.32    %r2290 <- %r2289(lg), $30
	br          %r2290, .L440, .L442

.L440:
	phi.32      %r2291(ttlg) <- %phi384(ttlg), %phi385(ttlg)
	load.32     %r2294 <- 56[%arg1]
	setgt.32    %r2296 <- %r2291(ttlg), %r2294
	phisrc.32   %phi386(lc) <- $0
	phisrc.32   %phi388(lc) <- $0
	phisrc.32   %phi390(lim) <- %r2291(ttlg)
	br          %r2296, .L444, .L451

.L444:
	phi.32      %r2300 <- %phi377(i), %phi378(i)
	setgt.32    %r2302 <- %r2300, %r2294
	phisrc.32   %phi375(i) <- %r2300
	phisrc.32   %phi391(lim) <- %r2294
	br          %r2302, .L442, .L451

.L451:
	phi.32      %r2303(i) <- %phi374(i), %phi375(i), %phi376(i)
	phi.32      %r2304 <- %phi390(lim), %phi391(lim)
	setle.32    %r2305 <- %r2303(i), %r2304
	br          %r2305, .L448, .L450

.L448:
	load.64     %r2307 <- 24[%arg1]
	add.32      %r2309 <- %r2303(i), $-1
	scast.64    %r2310 <- (32) %r2309
	muls.64     %r2311 <- %r2310, $16
	add.64      %r2312 <- %r2307, %r2311
	load.32     %r2313 <- 8[%r2312]
	br          %r2313, .L452, .L449

.L452:
	phi.32      %r2315 <- %phi388(lc), %phi389(lc)
	add.32      %r2316 <- %r2315, $1
	phisrc.32   %phi387(lc) <- %r2316
	phisrc.32   %phi389(lc) <- %r2316
	br          .L449

.L449:
	add.32      %r2318 <- %r2303(i), $1
	phisrc.32   %phi376(i) <- %r2318
	phisrc.32   %phi378(i) <- %r2318
	br          .L451

.L450:
	phi.32      %r2319 <- %phi386(lc), %phi387(lc)
	scast.64    %r2322 <- (32) %r2289(lg)
	muls.64     %r2323 <- %r2322, $4
	add.64      %r2324 <- %arg2, %r2323
	load.32     %r2325 <- 0[%r2324]
	add.32      %r2327 <- %r2325, %r2319
	store.32    %r2327 -> 0[%r2324]
	phi.32      %r2330 <- %phi370(ause), %phi371(ause)
	add.32      %r2332 <- %r2330, %r2319
	phisrc.32   %phi369(ause) <- %r2332
	phisrc.32   %phi371(ause) <- %r2332
	add.32      %r2335 <- %r2289(lg), $1
	muls.32     %r2338 <- %r2291(ttlg), $2
	phisrc.32   %phi382(lg) <- %r2335
	phisrc.32   %phi385(ttlg) <- %r2338
	br          .L443

.L442:
	phi.32      %r2340 <- %phi368(ause), %phi369(ause)
	ret.32      %r2340


numusehash:
.L455:
	<entry-point>
	load.8      %r2343 <- 11[%arg1]
	cast.32     %r2344 <- (8) %r2343
	shl.64      %r2345 <- $1, %r2344
	cast.32     %r2346(i) <- (64) %r2345
	phisrc.32   %phi394(totaluse) <- $0
	phisrc.32   %phi396(totaluse) <- $0
	phisrc.32   %phi398(ause) <- $0
	phisrc.32   %phi400(ause) <- $0
	phisrc.32   %phi403(i) <- %r2346(i)
	br          .L459

.L459:
	phi.32      %r2347 <- %phi403(i), %phi404(i)
	add.32      %r2348(i) <- %r2347, $-1
	phisrc.32   %phi404(i) <- %r2348(i)
	br          %r2347, .L456, .L458

.L456:
	load.64     %r2350 <- 32[%arg1]
	scast.64    %r2352 <- (32) %r2348(i)
	muls.64     %r2353 <- %r2352, $40
	add.64      %r2354 <- %r2350, %r2353
	load.32     %r2356 <- 8[%r2354]
	br          %r2356, .L460, .L459

.L460:
	add.64      %r2359 <- %r2354, $16
	call.32     %r2362 <- countint, %r2359, %arg2
	phi.32      %r2363 <- %phi400(ause), %phi401(ause)
	add.32      %r2365 <- %r2363, %r2362
	phi.32      %r2367 <- %phi396(totaluse), %phi397(totaluse)
	add.32      %r2368 <- %r2367, $1
	phisrc.32   %phi395(totaluse) <- %r2368
	phisrc.32   %phi397(totaluse) <- %r2368
	phisrc.32   %phi399(ause) <- %r2365
	phisrc.32   %phi401(ause) <- %r2365
	br          .L459

.L458:
	phi.32      %r2369 <- %phi398(ause), %phi399(ause)
	load.32     %r2371 <- 0[%arg3]
	add.32      %r2373 <- %r2371, %r2369
	store.32    %r2373 -> 0[%arg3]
	phi.32      %r2375 <- %phi394(totaluse), %phi395(totaluse)
	ret.32      %r2375


setarrayvector:
.L463:
	<entry-point>
	add.32      %r2378 <- %arg3, $1
	scast.64    %r2379 <- (32) %r2378
	setbe.32    %r2380 <- %r2379, $0xfffffffffffffff
	br          %r2380, .L464, .L465

.L464:
	load.64     %r2383 <- 24[%arg2]
	cast.64     %r2384 <- (64) %r2383
	load.32     %r2386 <- 56[%arg2]
	scast.64    %r2387 <- (32) %r2386
	mulu.64     %r2388 <- %r2387, $16
	scast.64    %r2390 <- (32) %arg3
	mulu.64     %r2391 <- %r2390, $16
	call.64     %r2392 <- luaM_realloc_, %arg1, %r2384, %r2388, %r2391
	phisrc.64   %phi405 <- %r2392
	br          .L466

.L465:
	call.64     %r2394 <- luaM_toobig, %arg1
	cast.64     %r2395 <- (64) %r2394
	phisrc.64   %phi406 <- %r2395
	br          .L466

.L466:
	phi.64      %r2396 <- %phi405, %phi406
	ptrcast.64  %r2397 <- (64) %r2396
	store.64    %r2397 -> 24[%arg2]
	load.32     %r2400(i) <- 56[%arg2]
	phisrc.32   %phi409(i) <- %r2400(i)
	phisrc.64   %phi411 <- %r2397
	phisrc.64   %phi412 <- %r2397
	br          .L470

.L470:
	phi.32      %r2401(i) <- %phi409(i), %phi410(i)
	setlt.32    %r2403 <- %r2401(i), %arg3
	br          %r2403, .L467, .L469

.L467:
	load.64     %r2405 <- 24[%arg2]
	scast.64    %r2407 <- (32) %r2401(i)
	muls.64     %r2408 <- %r2407, $16
	add.64      %r2409 <- %r2405, %r2408
	store.32    $0 -> 8[%r2409]
	add.32      %r2411 <- %r2401(i), $1
	phisrc.32   %phi410(i) <- %r2411
	br          .L470

.L469:
	store.32    %arg3 -> 56[%arg2]
	ret


setnodevector:
.L472:
	<entry-point>
	phisrc.32   %phi415(size) <- %arg3
	br          %arg3, .L474, .L473

.L473:
	symaddr.64  %r2416 <- dummynode_
	ptrcast.64  %r2417 <- (64) %r2416
	store.64    %r2417 -> 32[%arg2]
	phisrc.32   %phi421(lsize) <- $0
	phisrc.64   %phi428 <- %r2417
	phisrc.64   %phi431 <- %r2417
	br          .L475

.L474:
	add.32      %r2420 <- %arg3, $-1
	call.32     %r2422 <- luaO_log2, %r2420
	add.32      %r2423 <- %r2422, $1
	setgt.32    %r2425 <- %r2423, $30
	br          %r2425, .L476, .L477

.L476:
	symaddr.64  %r2427 <- <anon symbol:0x62d0011dc030>
	call        luaG_runerror, %arg1, %r2427
	br          .L477

.L477:
	shl.64      %r2429 <- $1, %r2423
	cast.32     %r2430 <- (64) %r2429
	add.32      %r2432 <- %r2430, $1
	scast.64    %r2433 <- (32) %r2432
	setbe.32    %r2434 <- %r2433, $0x666666666666666
	phisrc.32   %phi422(lsize) <- %r2423
	br          %r2434, .L478, .L479

.L478:
	scast.64    %r2437 <- (32) %r2430
	mulu.64     %r2438 <- %r2437, $40
	call.64     %r2439 <- luaM_realloc_, %arg1, $0, $0, %r2438
	phisrc.64   %phi413 <- %r2439
	br          .L480

.L479:
	call.64     %r2441 <- luaM_toobig, %arg1
	cast.64     %r2442 <- (64) %r2441
	phisrc.64   %phi414 <- %r2442
	br          .L480

.L480:
	phi.64      %r2443 <- %phi413, %phi414
	ptrcast.64  %r2444 <- (64) %r2443
	store.64    %r2444 -> 32[%arg2]
	phisrc.32   %phi426(i) <- $0
	phisrc.64   %phi429 <- %r2444
	phisrc.64   %phi430 <- %r2444
	phisrc.64   %phi432 <- %r2444
	phisrc.64   %phi433 <- %r2444
	br          .L484

.L484:
	phi.32      %r2446(i) <- %phi426(i), %phi427(i)
	setlt.32    %r2448 <- %r2446(i), %r2430
	phisrc.32   %phi416(size) <- %r2430
	br          %r2448, .L481, .L475

.L481:
	load.64     %r2450 <- 32[%arg2]
	scast.64    %r2452 <- (32) %r2446(i)
	muls.64     %r2453 <- %r2452, $40
	add.64      %r2454 <- %r2450, %r2453
	store.64    $0 -> 32[%r2454]
	store.32    $0 -> 24[%r2454]
	store.32    $0 -> 8[%r2454]
	add.32      %r2459 <- %r2446(i), $1
	phisrc.32   %phi427(i) <- %r2459
	br          .L484

.L475:
	phi.32      %r2460 <- %phi421(lsize), %phi422(lsize)
	scast.8     %r2461 <- (32) %r2460
	store.8     %r2461 -> 11[%arg2]
	load.64     %r2464 <- 32[%arg2]
	phi.32      %r2465 <- %phi415(size), %phi416(size)
	scast.64    %r2466 <- (32) %r2465
	muls.64     %r2467 <- %r2466, $40
	add.64      %r2468 <- %r2464, %r2467
	store.64    %r2468 -> 40[%arg2]
	ret


resize:
.L486:
	<entry-point>
	load.32     %r2471 <- 56[%arg2]
	load.8      %r2473 <- 11[%arg2]
	cast.32     %r2474 <- (8) %r2473
	load.64     %r2476 <- 32[%arg2]
	setgt.32    %r2479 <- %arg3, %r2471
	br          %r2479, .L487, .L488

.L487:
	call        setarrayvector, %arg1, %arg2, %arg3
	br          .L488

.L488:
	call        setnodevector, %arg1, %arg2, %arg4
	setlt.32    %r2488 <- %arg3, %r2471
	br          %r2488, .L489, .L490

.L489:
	store.32    %arg3 -> 56[%arg2]
	phisrc.32   %phi444(i) <- %arg3
	br          .L494

.L494:
	phi.32      %r2492(i) <- %phi444(i), %phi445(i)
	setlt.32    %r2494 <- %r2492(i), %r2471
	br          %r2494, .L491, .L493

.L491:
	load.64     %r2496 <- 24[%arg2]
	scast.64    %r2498 <- (32) %r2492(i)
	muls.64     %r2499 <- %r2498, $16
	add.64      %r2500 <- %r2496, %r2499
	load.32     %r2501 <- 8[%r2500]
	br          %r2501, .L495, .L492

.L495:
	add.32      %r2512 <- %r2492(i), $1
	call.64     %r2513 <- luaH_setnum, %arg1, %arg2, %r2512
	load.64     %r2515 <- 0[%r2500]
	store.64    %r2515 -> 0[%r2513]
	load.32     %r2518 <- 8[%r2500]
	store.32    %r2518 -> 8[%r2513]
	br          .L492

.L492:
	add.32      %r2522 <- %r2492(i), $1
	phisrc.32   %phi445(i) <- %r2522
	br          .L494

.L493:
	add.32      %r2524 <- %arg3, $1
	scast.64    %r2525 <- (32) %r2524
	setbe.32    %r2526 <- %r2525, $0xfffffffffffffff
	br          %r2526, .L497, .L498

.L497:
	load.64     %r2529 <- 24[%arg2]
	cast.64     %r2530 <- (64) %r2529
	scast.64    %r2532 <- (32) %r2471
	mulu.64     %r2533 <- %r2532, $16
	scast.64    %r2535 <- (32) %arg3
	mulu.64     %r2536 <- %r2535, $16
	call.64     %r2537 <- luaM_realloc_, %arg1, %r2530, %r2533, %r2536
	phisrc.64   %phi434 <- %r2537
	br          .L499

.L498:
	call.64     %r2539 <- luaM_toobig, %arg1
	cast.64     %r2540 <- (64) %r2539
	phisrc.64   %phi435 <- %r2540
	br          .L499

.L499:
	phi.64      %r2541 <- %phi434, %phi435
	ptrcast.64  %r2542 <- (64) %r2541
	store.64    %r2542 -> 24[%arg2]
	br          .L490

.L490:
	shl.64      %r2545 <- $1, %r2474
	add.64      %r2546 <- %r2545, $-1
	cast.32     %r2547(i) <- (64) %r2546
	phisrc.32   %phi438(i) <- %r2547(i)
	br          .L503

.L503:
	phi.32      %r2548(i) <- %phi438(i), %phi439(i)
	setge.32    %r2549 <- %r2548(i), $0
	br          %r2549, .L500, .L502

.L500:
	scast.64    %r2552 <- (32) %r2548(i)
	muls.64     %r2553 <- %r2552, $40
	add.64      %r2554 <- %r2476, %r2553
	load.32     %r2556 <- 8[%r2554]
	br          %r2556, .L504, .L501

.L504:
	add.64      %r2563 <- %r2554, $16
	call.64     %r2565 <- luaH_set, %arg1, %arg2, %r2563
	load.64     %r2567 <- 0[%r2554]
	store.64    %r2567 -> 0[%r2565]
	load.32     %r2570 <- 8[%r2554]
	store.32    %r2570 -> 8[%r2565]
	br          .L501

.L501:
	add.32      %r2574 <- %r2548(i), $-1
	phisrc.32   %phi439(i) <- %r2574
	br          .L503

.L502:
	symaddr.64  %r2576 <- dummynode_
	setne.32    %r2577 <- %r2476, %r2576
	br          %r2577, .L506, .L507

.L506:
	cast.64     %r2580 <- (64) %r2476
	shl.64      %r2582 <- $1, %r2474
	mulu.64     %r2583 <- %r2582, $40
	call.64     %r2584 <- luaM_realloc_, %arg1, %r2580, %r2583, $0
	br          .L507

.L507:
	ret


luaH_resizearray:
.L508:
	<entry-point>
	load.64     %r2586 <- 32[%arg2]
	symaddr.64  %r2587 <- dummynode_
	seteq.32    %r2588 <- %r2586, %r2587
	br          %r2588, .L509, .L510

.L509:
	phisrc.64   %phi447 <- $0
	br          .L511

.L510:
	load.8      %r2590 <- 11[%arg2]
	cast.32     %r2591 <- (8) %r2590
	shl.64      %r2592 <- $1, %r2591
	phisrc.64   %phi448 <- %r2592
	br          .L511

.L511:
	phi.64      %r2593 <- %phi447, %phi448
	cast.32     %r2594 <- (64) %r2593
	call        resize, %arg1, %arg2, %arg3, %r2594
	ret


rehash:
.L513:
	<entry-point>
	phisrc.32   %phi451(i) <- $0
	br          .L517

.L517:
	phi.32      %r2599(i) <- %phi451(i), %phi452(i)
	setle.32    %r2600 <- %r2599(i), $30
	symaddr.64  %r2601 <- nums
	br          %r2600, .L514, .L516

.L514:
	scast.64    %r2603 <- (32) %r2599(i)
	muls.64     %r2604 <- %r2603, $4
	add.64      %r2605 <- %r2601, %r2604
	store.32    $0 -> 0[%r2605]
	add.32      %r2607 <- %r2599(i), $1
	phisrc.32   %phi452(i) <- %r2607
	br          .L517

.L516:
	call.32     %r2610 <- numusearray, %arg2, %r2601
	store.32    %r2610 -> 0[nasize]
	symaddr.64  %r2614 <- nasize
	call.32     %r2615 <- numusehash, %arg2, %r2601, %r2614
	add.32      %r2618 <- %r2610, %r2615
	call.32     %r2622 <- countint, %arg3, %r2601
	load.32     %r2623 <- 0[nasize]
	add.32      %r2625 <- %r2623, %r2622
	store.32    %r2625 -> 0[nasize]
	add.32      %r2628 <- %r2618, $1
	call.32     %r2631 <- computesizes, %r2601, %r2614
	load.32     %r2634 <- 0[nasize]
	sub.32      %r2637 <- %r2628, %r2631
	call        resize, %arg1, %arg2, %r2634, %r2637
	ret


luaH_new:
.L519:
	<entry-point>
	call.64     %r2639 <- luaM_realloc_, %arg1, $0, $0, $64
	ptrcast.64  %r2640 <- (64) %r2639
	ptrcast.64  %r2643 <- (64) %r2640
	call        luaC_link, %arg1, %r2643, $5
	store.64    $0 -> 16[%r2640]
	store.8     $255 -> 10[%r2640]
	store.64    $0 -> 24[%r2640]
	store.32    $0 -> 56[%r2640]
	store.8     $0 -> 11[%r2640]
	symaddr.64  %r2649 <- dummynode_
	ptrcast.64  %r2650 <- (64) %r2649
	store.64    %r2650 -> 32[%r2640]
	call        setarrayvector, %arg1, %r2640, %arg2
	call        setnodevector, %arg1, %r2640, %arg3
	ret.64      %r2640


luaH_free:
.L521:
	<entry-point>
	load.64     %r2661 <- 32[%arg2]
	symaddr.64  %r2662 <- dummynode_
	setne.32    %r2663 <- %r2661, %r2662
	br          %r2663, .L522, .L523

.L522:
	cast.64     %r2667 <- (64) %r2661
	load.8      %r2669 <- 11[%arg2]
	cast.32     %r2670 <- (8) %r2669
	shl.64      %r2671 <- $1, %r2670
	mulu.64     %r2672 <- %r2671, $40
	call.64     %r2673 <- luaM_realloc_, %arg1, %r2667, %r2672, $0
	br          .L523

.L523:
	load.64     %r2676 <- 24[%arg2]
	cast.64     %r2677 <- (64) %r2676
	load.32     %r2679 <- 56[%arg2]
	scast.64    %r2680 <- (32) %r2679
	mulu.64     %r2681 <- %r2680, $16
	call.64     %r2682 <- luaM_realloc_, %arg1, %r2677, %r2681, $0
	cast.64     %r2685 <- (64) %arg2
	call.64     %r2686 <- luaM_realloc_, %arg1, %r2685, $64, $0
	ret


getfreepos:
.L525:
	<entry-point>
	br          .L529

.L529:
	load.64     %r2688 <- 40[%arg1]
	add.64      %r2689 <- %r2688, $-40
	store.64    %r2689 -> 40[%arg1]
	load.64     %r2691 <- 32[%arg1]
	seta.32     %r2692 <- %r2688, %r2691
	br          %r2692, .L526, .L528

.L526:
	load.32     %r2695 <- -16[%r2688]
	br          %r2695, .L529, .L530

.L530:
	phisrc.64   %phi455(return) <- %r2689
	br          .L532

.L528:
	phisrc.64   %phi456(return) <- $0
	br          .L532

.L532:
	phi.64      %r2699 <- %phi455(return), %phi456(return)
	ret.64      %r2699


newkey:
.L533:
	<entry-point>
	call.64     %r2702 <- mainposition, %arg2, %arg3
	load.32     %r2704 <- 8[%r2702]
	setne.32    %r2706 <- %r2704, $0
	symaddr.64  %r2708 <- dummynode_
	seteq.32    %r2709 <- %r2702, %r2708
	or-bool.32  %r2710 <- %r2706, %r2709
	phisrc.64   %phi462(mp) <- %r2702
	br          %r2710, .L534, .L535

.L534:
	call.64     %r2712 <- getfreepos, %arg2
	br          %r2712, .L537, .L536

.L536:
	call        rehash, %arg1, %arg2, %arg3
	call.64     %r2721 <- luaH_set, %arg1, %arg2, %arg3
	phisrc.64   %phi459(return) <- %r2721
	br          .L538

.L537:
	add.64      %r2725 <- %r2702, $16
	call.64     %r2727 <- mainposition, %arg2, %r2725
	setne.32    %r2730 <- %r2727, %r2702
	phisrc.64   %phi471(othern) <- %r2727
	br          %r2730, .L544, .L540

.L544:
	phi.64      %r2731(othern) <- %phi471(othern), %phi472(othern)
	load.64     %r2732 <- 32[%r2731(othern)]
	setne.32    %r2734 <- %r2732, %r2702
	br          %r2734, .L541, .L543

.L541:
	phisrc.64   %phi472(othern) <- %r2732
	br          .L544

.L543:
	store.64    %r2712 -> 32[%r2731(othern)]
	load.320    %r2740 <- 0[%r2702]
	store.320   %r2740 -> 0[%r2712]
	store.64    $0 -> 32[%r2702]
	store.32    $0 -> 8[%r2702]
	phisrc.64   %phi463(mp) <- %r2702
	br          .L535

.L540:
	load.64     %r2745 <- 32[%r2702]
	store.64    %r2745 -> 32[%r2712]
	store.64    %r2712 -> 32[%r2702]
	phisrc.64   %phi464(mp) <- %r2712
	br          .L535

.L535:
	load.64     %r2751 <- 0[%arg3]
	phi.64      %r2752 <- %phi462(mp), %phi463(mp), %phi464(mp)
	store.64    %r2751 -> 16[%r2752]
	load.32     %r2754 <- 8[%arg3]
	store.32    %r2754 -> 24[%r2752]
	load.32     %r2758 <- 8[%arg3]
	setge.32    %r2760 <- %r2758, $4
	br          %r2760, .L549, .L547

.L549:
	load.64     %r2762 <- 0[%arg3]
	load.8      %r2763 <- 9[%r2762]
	cast.32     %r2764 <- (8) %r2763
	and.32      %r2765 <- %r2764, $3
	br          %r2765, .L548, .L547

.L548:
	ptrcast.64  %r2767 <- (64) %arg2
	load.8      %r2768 <- 9[%r2767]
	cast.32     %r2769 <- (8) %r2768
	and.32      %r2770 <- %r2769, $4
	br          %r2770, .L546, .L547

.L546:
	call        luaC_barrierback, %arg1, %arg2
	br          .L547

.L547:
	phisrc.64   %phi460(return) <- %r2752
	br          .L538

.L538:
	phi.64      %r2722 <- %phi459(return), %phi460(return)
	ret.64      %r2722


luaH_getnum:
.L550:
	<entry-point>
	add.32      %r2777 <- %arg2, $-1
	load.32     %r2779 <- 56[%arg1]
	setb.32     %r2781 <- %r2777, %r2779
	br          %r2781, .L551, .L552

.L551:
	load.64     %r2783 <- 24[%arg1]
	add.32      %r2785 <- %arg2, $-1
	scast.64    %r2786 <- (32) %r2785
	muls.64     %r2787 <- %r2786, $16
	add.64      %r2788 <- %r2783, %r2787
	phisrc.64   %phi474(return) <- %r2788
	br          .L553

.L552:
	fpcast.64   %r2791 <- (32) %arg2
	call.64     %r2794(n) <- hashnum, %arg1, %r2791
	phisrc.64   %phi482(n) <- %r2794(n)
	br          .L555

.L555:
	phi.64      %r2795(n) <- %phi482(n), %phi483(n)
	load.32     %r2796 <- 24[%r2795(n)]
	seteq.32    %r2797 <- %r2796, $3
	br          %r2797, .L560, .L559

.L560:
	load.64     %r2799 <- 16[%r2795(n)]
	seteq.32    %r2801 <- %r2799, %r2791
	br          %r2801, .L558, .L559

.L558:
	phisrc.64   %phi475(return) <- %r2795(n)
	br          .L553

.L559:
	load.64     %r2805(n) <- 32[%r2795(n)]
	phisrc.64   %phi483(n) <- %r2805(n)
	br          %r2805(n), .L555, .L557

.L557:
	symaddr.64  %r2807 <- luaO_nilobject_
	phisrc.64   %phi476(return) <- %r2807
	br          .L553

.L553:
	phi.64      %r2789 <- %phi474(return), %phi475(return), %phi476(return)
	ret.64      %r2789


luaH_getstr:
.L562:
	<entry-point>
	load.64     %r2809 <- 32[%arg1]
	load.32     %r2811 <- 12[%arg2]
	cast.64     %r2812 <- (32) %r2811
	load.8      %r2814 <- 11[%arg1]
	cast.32     %r2815 <- (8) %r2814
	shl.64      %r2816 <- $1, %r2815
	add.64      %r2817 <- %r2816, $-1
	and.64      %r2818 <- %r2812, %r2817
	cast.32     %r2819 <- (64) %r2818
	scast.64    %r2820 <- (32) %r2819
	muls.64     %r2821 <- %r2820, $40
	add.64      %r2822(n) <- %r2809, %r2821
	phisrc.64   %phi491(n) <- %r2822(n)
	br          .L563

.L563:
	phi.64      %r2823(n) <- %phi491(n), %phi492(n)
	load.32     %r2824 <- 24[%r2823(n)]
	seteq.32    %r2825 <- %r2824, $4
	br          %r2825, .L568, .L567

.L568:
	load.64     %r2827 <- 16[%r2823(n)]
	seteq.32    %r2830 <- %r2827, %arg2
	br          %r2830, .L566, .L567

.L566:
	phisrc.64   %phi484(return) <- %r2823(n)
	br          .L569

.L567:
	load.64     %r2835(n) <- 32[%r2823(n)]
	phisrc.64   %phi492(n) <- %r2835(n)
	br          %r2835(n), .L563, .L565

.L565:
	symaddr.64  %r2837 <- luaO_nilobject_
	phisrc.64   %phi485(return) <- %r2837
	br          .L569

.L569:
	phi.64      %r2833 <- %phi484(return), %phi485(return)
	ret.64      %r2833


luaH_get:
.L571:
	<entry-point>
	load.32     %r2839 <- 8[%arg2]
	switch      %r2839, 0 -> .L573, 3 -> .L575, 4 -> .L574, default -> .L576

.L573:
	symaddr.64  %r2840 <- luaO_nilobject_
	phisrc.64   %phi493(return) <- %r2840
	br          .L577

.L574:
	load.64     %r2844 <- 0[%arg2]
	call.64     %r2846 <- luaH_getstr, %arg1, %r2844
	phisrc.64   %phi494(return) <- %r2846
	br          .L577

.L575:
	load.64     %r2848 <- 0[%arg2]
	cast.32     %r2851 <- (64) %r2848
	fpcast.64   %r2853 <- (32) %r2851
	seteq.32    %r2857 <- %r2853, %r2848
	br          %r2857, .L578, .L576

.L578:
	call.64     %r2860 <- luaH_getnum, %arg1, %r2851
	phisrc.64   %phi495(return) <- %r2860
	br          .L577

.L576:
	call.64     %r2863(n) <- mainposition, %arg1, %arg2
	phisrc.64   %phi501(n) <- %r2863(n)
	br          .L580

.L580:
	phi.64      %r2864(n) <- %phi501(n), %phi502(n)
	add.64      %r2865 <- %r2864(n), $16
	call.32     %r2868 <- luaO_rawequalObj, %r2865, %arg2
	br          %r2868, .L583, .L584

.L583:
	phisrc.64   %phi496(return) <- %r2864(n)
	br          .L577

.L584:
	load.64     %r2872(n) <- 32[%r2864(n)]
	phisrc.64   %phi502(n) <- %r2872(n)
	br          %r2872(n), .L580, .L582

.L582:
	symaddr.64  %r2874 <- luaO_nilobject_
	phisrc.64   %phi497(return) <- %r2874
	br          .L577

.L577:
	phi.64      %r2841 <- %phi493(return), %phi494(return), %phi495(return), %phi496(return), %phi497(return)
	ret.64      %r2841


luaH_set:
.L586:
	<entry-point>
	call.64     %r2877 <- luaH_get, %arg2, %arg3
	store.8     $0 -> 10[%arg2]
	symaddr.64  %r2880 <- luaO_nilobject_
	setne.32    %r2881 <- %r2877, %r2880
	br          %r2881, .L587, .L588

.L587:
	ptrcast.64  %r2883 <- (64) %r2877
	phisrc.64   %phi503(return) <- %r2883
	br          .L589

.L588:
	load.32     %r2886 <- 8[%arg3]
	br          %r2886, .L593, .L591

.L591:
	symaddr.64  %r2890 <- <anon symbol:0x62d001150dc8>
	call        luaG_runerror, %arg1, %r2890
	br          .L593

.L593:
	call.64     %r2907 <- newkey, %arg1, %arg2, %arg3
	phisrc.64   %phi504(return) <- %r2907
	br          .L589

.L589:
	phi.64      %r2884 <- %phi503(return), %phi504(return)
	ret.64      %r2884


luaH_setnum:
.L597:
	<entry-point>
	call.64     %r2910 <- luaH_getnum, %arg2, %arg3
	symaddr.64  %r2912 <- luaO_nilobject_
	setne.32    %r2913 <- %r2910, %r2912
	br          %r2913, .L598, .L599

.L598:
	ptrcast.64  %r2915 <- (64) %r2910
	phisrc.64   %phi506(return) <- %r2915
	br          .L600

.L599:
	fpcast.64   %r2919 <- (32) %arg3
	store.64    %r2919 -> 0[k]
	store.32    $3 -> 8[k]
	symaddr.64  %r2924 <- k
	call.64     %r2925 <- newkey, %arg1, %arg2, %r2924
	phisrc.64   %phi507(return) <- %r2925
	br          .L600

.L600:
	phi.64      %r2916 <- %phi506(return), %phi507(return)
	ret.64      %r2916


luaH_setstr:
.L602:
	<entry-point>
	call.64     %r2928 <- luaH_getstr, %arg2, %arg3
	symaddr.64  %r2930 <- luaO_nilobject_
	setne.32    %r2931 <- %r2928, %r2930
	br          %r2931, .L603, .L604

.L603:
	ptrcast.64  %r2933 <- (64) %r2928
	phisrc.64   %phi508(return) <- %r2933
	br          .L605

.L604:
	ptrcast.64  %r2937 <- (64) %arg3
	store.64    %r2937 -> 0[k]
	store.32    $4 -> 8[k]
	symaddr.64  %r2942 <- k
	call.64     %r2943 <- newkey, %arg1, %arg2, %r2942
	phisrc.64   %phi509(return) <- %r2943
	br          .L605

.L605:
	phi.64      %r2934 <- %phi508(return), %phi509(return)
	ret.64      %r2934


unbound_search:
.L607:
	<entry-point>
	add.32      %r2946(j) <- %arg2, $1
	phisrc.32   %phi516(j) <- %r2946(j)
	phisrc.32   %phi520(i) <- %arg2
	br          .L611

.L611:
	phi.32      %r2948(j) <- %phi516(j), %phi517(j)
	call.64     %r2950 <- luaH_getnum, %arg1, %r2948(j)
	load.32     %r2951 <- 8[%r2950]
	phisrc.32   %phi513(j) <- %r2948(j)
	br          %r2951, .L608, .L622

.L608:
	mulu.32     %r2957 <- %r2948(j), $2
	seta.32     %r2960 <- %r2957, $0x7ffffffd
	phisrc.32   %phi517(j) <- %r2957
	phisrc.32   %phi521(i) <- %r2948(j)
	br          %r2960, .L612, .L611

.L612:
	phisrc.32   %phi525(i) <- $1
	br          .L617

.L617:
	phi.32      %r2962(i) <- %phi525(i), %phi526(i)
	call.64     %r2964 <- luaH_getnum, %arg1, %r2962(i)
	load.32     %r2965 <- 8[%r2964]
	br          %r2965, .L614, .L616

.L614:
	add.32      %r2969 <- %r2962(i), $1
	phisrc.32   %phi526(i) <- %r2969
	br          .L617

.L616:
	add.32      %r2971 <- %r2962(i), $-1
	phisrc.32   %phi510(return) <- %r2971
	br          .L618

.L622:
	phi.32      %r2974(j) <- %phi513(j), %phi514(j)
	phi.32      %r2975(i) <- %phi520(i), %phi521(i), %phi522(i)
	sub.32      %r2976 <- %r2974(j), %r2975(i)
	seta.32     %r2977 <- %r2976, $1
	br          %r2977, .L619, .L621

.L619:
	add.32      %r2980 <- %r2975(i), %r2974(j)
	divu.32     %r2981 <- %r2980, $2
	call.64     %r2985 <- luaH_getnum, %arg1, %r2981
	load.32     %r2986 <- 8[%r2985]
	br          %r2986, .L624, .L623

.L623:
	phisrc.32   %phi514(j) <- %r2981
	br          .L622

.L624:
	phisrc.32   %phi522(i) <- %r2981
	br          .L622

.L621:
	phisrc.32   %phi511(return) <- %r2975(i)
	br          .L618

.L618:
	phi.32      %r2973 <- %phi510(return), %phi511(return)
	ret.32      %r2973


luaH_getn:
.L626:
	<entry-point>
	load.32     %r2994 <- 56[%arg1]
	seta.32     %r2997 <- %r2994, $0
	br          %r2997, .L629, .L628

.L629:
	load.64     %r2999 <- 24[%arg1]
	add.32      %r3001 <- %r2994, $-1
	cast.64     %r3002 <- (32) %r3001
	muls.64     %r3003 <- %r3002, $16
	add.64      %r3004 <- %r2999, %r3003
	load.32     %r3005 <- 8[%r3004]
	phisrc.32   %phi535(j) <- %r2994
	br          %r3005, .L628, .L627

.L627:
	phisrc.32   %phi540(i) <- $0
	br          .L633

.L633:
	phi.32      %r3007(j) <- %phi535(j), %phi536(j)
	phi.32      %r3008(i) <- %phi540(i), %phi541(i)
	sub.32      %r3009 <- %r3007(j), %r3008(i)
	seta.32     %r3010 <- %r3009, $1
	br          %r3010, .L630, .L632

.L630:
	add.32      %r3013 <- %r3008(i), %r3007(j)
	divu.32     %r3014 <- %r3013, $2
	add.32      %r3018 <- %r3014, $-1
	cast.64     %r3019 <- (32) %r3018
	muls.64     %r3020 <- %r3019, $16
	add.64      %r3021 <- %r2999, %r3020
	load.32     %r3022 <- 8[%r3021]
	br          %r3022, .L635, .L634

.L634:
	phisrc.32   %phi536(j) <- %r3014
	br          .L633

.L635:
	phisrc.32   %phi541(i) <- %r3014
	br          .L633

.L632:
	phisrc.32   %phi527(return) <- %r3008(i)
	br          .L637

.L628:
	load.64     %r3030 <- 32[%arg1]
	symaddr.64  %r3031 <- dummynode_
	seteq.32    %r3032 <- %r3030, %r3031
	br          %r3032, .L639, .L640

.L639:
	phisrc.32   %phi528(return) <- %r2994
	br          .L637

.L640:
	call.32     %r3037 <- unbound_search, %arg1, %r2994
	phisrc.32   %phi529(return) <- %r3037
	br          .L637

.L637:
	phi.32      %r3028 <- %phi527(return), %phi528(return), %phi529(return)
	ret.32      %r3028


removeentry:
.L642:
	<entry-point>
	load.32     %r3039 <- 24[%arg1]
	setge.32    %r3040 <- %r3039, $4
	br          %r3040, .L643, .L644

.L643:
	store.32    $11 -> 24[%arg1]
	br          .L644

.L644:
	ret


reallymarkobject:
.L645:
	<entry-point>
	load.8      %r3043 <- 9[%arg2]
	cast.32     %r3044 <- (8) %r3043
	and.32      %r3045 <- %r3044, $252
	scast.8     %r3046 <- (32) %r3045
	store.8     %r3046 -> 9[%arg2]
	load.8      %r3048 <- 8[%arg2]
	phisrc.8    %phi543 <- %r3046
	phisrc.8    %phi550 <- %r3046
	switch      %r3048, 4 -> .L655, 5 -> .L651, 6 -> .L650, 7 -> .L648, 8 -> .L652, 9 -> .L653, 10 -> .L649, default -> .L655

.L648:
	load.64     %r3050 <- 16[%arg2]
	cast.32     %r3053 <- (8) %r3046
	or.32       %r3054 <- %r3053, $4
	scast.8     %r3055 <- (32) %r3054
	store.8     %r3055 -> 9[%arg2]
	br          %r3050, .L656, .L657

.L656:
	ptrcast.64  %r3058 <- (64) %r3050
	load.8      %r3059 <- 9[%r3058]
	cast.32     %r3060 <- (8) %r3059
	and.32      %r3061 <- %r3060, $3
	br          %r3061, .L658, .L657

.L658:
	call        reallymarkobject, %arg1, %r3058
	br          .L657

.L657:
	load.64     %r3066 <- 24[%arg2]
	ptrcast.64  %r3067 <- (64) %r3066
	load.8      %r3068 <- 9[%r3067]
	cast.32     %r3069 <- (8) %r3068
	and.32      %r3070 <- %r3069, $3
	br          %r3070, .L660, .L655

.L660:
	call        reallymarkobject, %arg1, %r3067
	br          .L655

.L649:
	load.64     %r3078 <- 16[%arg2]
	load.32     %r3079 <- 8[%r3078]
	setge.32    %r3080 <- %r3079, $4
	phisrc.64   %phi544 <- %r3078
	phisrc.64   %phi551 <- %r3078
	phisrc.64   %phi552 <- %r3078
	br          %r3080, .L664, .L663

.L664:
	load.64     %r3083 <- 0[%r3078]
	load.8      %r3084 <- 9[%r3083]
	cast.32     %r3085 <- (8) %r3084
	and.32      %r3086 <- %r3085, $3
	phisrc.64   %phi545 <- %r3078
	br          %r3086, .L662, .L663

.L662:
	call        reallymarkobject, %arg1, %r3083
	br          .L663

.L663:
	load.64     %r3092 <- 16[%arg2]
	add.64      %r3094 <- %arg2, $24
	seteq.32    %r3096 <- %r3092, %r3094
	br          %r3096, .L665, .L655

.L665:
	load.8      %r3098 <- 9[%arg2]
	cast.32     %r3099 <- (8) %r3098
	or.32       %r3100 <- %r3099, $4
	scast.8     %r3101 <- (32) %r3100
	store.8     %r3101 -> 9[%arg2]
	br          .L655

.L650:
	load.64     %r3103 <- 56[%arg1]
	store.64    %r3103 -> 16[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L651:
	load.64     %r3108 <- 56[%arg1]
	store.64    %r3108 -> 48[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L652:
	load.64     %r3113 <- 56[%arg1]
	store.64    %r3113 -> 160[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L653:
	load.64     %r3118 <- 56[%arg1]
	store.64    %r3118 -> 104[%arg2]
	store.64    %arg2 -> 56[%arg1]
	br          .L655

.L655:
	ret


marktmu:
.L667:
	<entry-point>
	load.64     %r3123 <- 80[%arg1]
	phisrc.64   %phi555(u) <- %r3123
	br          %r3123, .L670, .L669

.L670:
	phi.64      %r3125 <- %phi555(u), %phi556(u)
	load.64     %r3126 <- 0[%r3125]
	load.8      %r3128 <- 9[%r3126]
	cast.32     %r3129 <- (8) %r3128
	and.32      %r3130 <- %r3129, $248
	load.8      %r3132 <- 32[%arg1]
	cast.32     %r3133 <- (8) %r3132
	and.32      %r3134 <- %r3133, $3
	or.32       %r3137 <- %r3130, %r3134
	scast.8     %r3138 <- (32) %r3137
	store.8     %r3138 -> 9[%r3126]
	call        reallymarkobject, %arg1, %r3126
	phisrc.64   %phi556(u) <- %r3126
	load.64     %r3144 <- 80[%arg1]
	setne.32    %r3145 <- %r3126, %r3144
	br          %r3145, .L670, .L669

.L669:
	ret


luaC_separateudata:
.L673:
	<entry-point>
	load.64     %r3147 <- 32[%arg1]
	load.64     %r3149 <- 176[%r3147]
	phisrc.64   %phi562(deadmem) <- $0
	phisrc.64   %phi564(deadmem) <- $0
	phisrc.64   %phi567(p) <- %r3149
	phisrc.64   %phi573 <- %r3147
	phisrc.64   %phi579 <- %r3147
	phisrc.64   %phi582 <- %r3147
	phisrc.64   %phi585 <- %r3147
	phisrc.64   %phi586 <- %r3147
	phisrc.64   %phi587 <- %r3147
	br          .L677

.L677:
	phi.64      %r3151(p) <- %phi567(p), %phi568(p), %phi569(p)
	load.64     %r3152 <- 0[%r3151(p)]
	br          %r3152, .L674, .L676

.L674:
	load.8      %r3155 <- 9[%r3152]
	cast.32     %r3156 <- (8) %r3155
	and.32      %r3157 <- %r3156, $3
	or-bool.32  %r3159 <- %r3157, %arg2
	phisrc.8    %phi577 <- %r3155
	phisrc.8    %phi578 <- %r3155
	phisrc.8    %phi580 <- %r3155
	phisrc.8    %phi581 <- %r3155
	phisrc.8    %phi583 <- %r3155
	phisrc.8    %phi584 <- %r3155
	br          %r3159, .L680, .L678

.L680:
	cast.32     %r3162 <- (8) %r3155
	and.32      %r3163 <- %r3162, $8
	phisrc.8    %phi571 <- %r3155
	phisrc.8    %phi572 <- %r3155
	br          %r3163, .L678, .L679

.L678:
	phisrc.64   %phi568(p) <- %r3152
	br          .L677

.L679:
	load.64     %r3168 <- 16[%r3152]
	br          %r3168, .L685, .L682

.L685:
	load.8      %r3172 <- 10[%r3168]
	cast.32     %r3173 <- (8) %r3172
	and.32      %r3174 <- %r3173, $4
	br          %r3174, .L682, .L688

.L688:
	load.64     %r3178 <- 32[%arg1]
	load.64     %r3179 <- 312[%r3178]
	call.64     %r3180 <- luaT_gettm, %r3168, $2, %r3179
	br          %r3180, .L683, .L682

.L682:
	load.8      %r3185 <- 9[%r3152]
	cast.32     %r3186 <- (8) %r3185
	or.32       %r3187 <- %r3186, $8
	scast.8     %r3188 <- (32) %r3187
	store.8     %r3188 -> 9[%r3152]
	phisrc.64   %phi569(p) <- %r3152
	br          .L677

.L683:
	load.64     %r3193 <- 32[%r3152]
	add.64      %r3194 <- %r3193, $40
	phi.64      %r3195 <- %phi564(deadmem), %phi565(deadmem)
	add.64      %r3197 <- %r3195, %r3194
	load.8      %r3200 <- 9[%r3152]
	cast.32     %r3201 <- (8) %r3200
	or.32       %r3202 <- %r3201, $8
	scast.8     %r3203 <- (32) %r3202
	store.8     %r3203 -> 9[%r3152]
	load.64     %r3205 <- 0[%r3152]
	store.64    %r3205 -> 0[%r3151(p)]
	load.64     %r3208 <- 80[%r3147]
	phisrc.64   %phi563(deadmem) <- %r3197
	phisrc.64   %phi565(deadmem) <- %r3197
	br          %r3208, .L692, .L691

.L691:
	store.64    %r3152 -> 0[%r3152]
	store.64    %r3152 -> 80[%r3147]
	br          .L677

.L692:
	load.64     %r3215 <- 0[%r3208]
	store.64    %r3215 -> 0[%r3152]
	load.64     %r3219 <- 80[%r3147]
	store.64    %r3152 -> 0[%r3219]
	store.64    %r3152 -> 80[%r3147]
	br          .L677

.L676:
	phi.64      %r3222 <- %phi562(deadmem), %phi563(deadmem)
	ret.64      %r3222


traversetable:
.L695:
	<entry-point>
	load.64     %r3225 <- 16[%arg2]
	phisrc.32   %phi597(weakkey) <- $0
	phisrc.32   %phi605(weakvalue) <- $0
	phisrc.64   %phi624 <- %r3225
	phisrc.64   %phi630 <- %r3225
	phisrc.64   %phi631 <- %r3225
	phisrc.64   %phi633 <- %r3225
	phisrc.64   %phi634 <- %r3225
	phisrc.64   %phi636 <- %r3225
	phisrc.64   %phi637 <- %r3225
	phisrc.64   %phi639 <- %r3225
	phisrc.64   %phi640 <- %r3225
	phisrc.64   %phi642 <- %r3225
	phisrc.64   %phi643 <- %r3225
	br          %r3225, .L696, .L697

.L696:
	ptrcast.64  %r3228 <- (64) %r3225
	load.8      %r3229 <- 9[%r3228]
	cast.32     %r3230 <- (8) %r3229
	and.32      %r3231 <- %r3230, $3
	phisrc.64   %phi625 <- %r3225
	br          %r3231, .L698, .L697

.L698:
	ptrcast.64  %r3235 <- (64) %r3225
	call        reallymarkobject, %arg1, %r3235
	br          .L697

.L697:
	load.64     %r3237 <- 16[%arg2]
	br          %r3237, .L701, .L707

.L701:
	load.8      %r3241 <- 10[%r3237]
	cast.32     %r3242 <- (8) %r3241
	and.32      %r3243 <- %r3242, $8
	br          %r3243, .L707, .L704

.L704:
	load.64     %r3247 <- 320[%arg1]
	call.64     %r3248 <- luaT_gettm, %r3237, $3, %r3247
	br          %r3248, .L708, .L707

.L708:
	load.32     %r3253 <- 8[%r3248]
	seteq.32    %r3255 <- %r3253, $4
	br          %r3255, .L706, .L707

.L706:
	load.64     %r3257 <- 0[%r3248]
	add.64      %r3259 <- %r3257, $24
	ptrcast.64  %r3260 <- (64) %r3259
	call.64     %r3261 <- strchr, %r3260, $107
	setne.32    %r3262 <- %r3261, $0
	load.64     %r3264 <- 0[%r3248]
	add.64      %r3266 <- %r3264, $24
	ptrcast.64  %r3267 <- (64) %r3266
	call.64     %r3268 <- strchr, %r3267, $118
	setne.32    %r3269 <- %r3268, $0
	or-bool.32  %r3272 <- %r3262, %r3269
	phisrc.32   %phi598(weakkey) <- %r3262
	phisrc.32   %phi606(weakvalue) <- %r3269
	br          %r3272, .L709, .L707

.L709:
	load.8      %r3274 <- 9[%arg2]
	cast.32     %r3275 <- (8) %r3274
	and.32      %r3276 <- %r3275, $0xffffffe7
	scast.8     %r3277 <- (32) %r3276
	shl.32      %r3279 <- %r3262, $3
	shl.32      %r3281 <- %r3269, $4
	or.32       %r3282 <- %r3279, %r3281
	scast.8     %r3283 <- (32) %r3282
	cast.32     %r3284 <- (8) %r3283
	cast.32     %r3287 <- (8) %r3277
	or.32       %r3288 <- %r3287, %r3284
	scast.8     %r3289 <- (32) %r3288
	store.8     %r3289 -> 9[%arg2]
	load.64     %r3291 <- 72[%arg1]
	store.64    %r3291 -> 48[%arg2]
	ptrcast.64  %r3294 <- (64) %arg2
	store.64    %r3294 -> 72[%arg1]
	phisrc.32   %phi599(weakkey) <- %r3262
	phisrc.32   %phi607(weakvalue) <- %r3269
	br          .L707

.L707:
	phi.32      %r3296(weakkey) <- %phi597(weakkey), %phi598(weakkey), %phi599(weakkey)
	phi.32      %r3297(weakvalue) <- %phi605(weakvalue), %phi606(weakvalue), %phi607(weakvalue)
	and-bool.32 %r3298 <- %r3296(weakkey), %r3297(weakvalue)
	br          %r3298, .L711, .L712

.L711:
	phisrc.32   %phi592(return) <- $1
	br          .L713

.L712:
	br          %r3297(weakvalue), .L715, .L714

.L714:
	load.32     %r3302(i) <- 56[%arg2]
	phisrc.32   %phi615(i) <- %r3302(i)
	br          .L719

.L719:
	phi.32      %r3303 <- %phi615(i), %phi616(i)
	add.32      %r3304(i) <- %r3303, $-1
	phisrc.32   %phi616(i) <- %r3304(i)
	br          %r3303, .L716, .L715

.L716:
	load.64     %r3306 <- 24[%arg2]
	scast.64    %r3308 <- (32) %r3304(i)
	muls.64     %r3309 <- %r3308, $16
	add.64      %r3310 <- %r3306, %r3309
	load.32     %r3311 <- 8[%r3310]
	setge.32    %r3312 <- %r3311, $4
	br          %r3312, .L722, .L719

.L722:
	load.64     %r3319 <- 0[%r3310]
	load.8      %r3320 <- 9[%r3319]
	cast.32     %r3321 <- (8) %r3320
	and.32      %r3322 <- %r3321, $3
	br          %r3322, .L720, .L719

.L720:
	call        reallymarkobject, %arg1, %r3319
	br          .L719

.L715:
	load.8      %r3332 <- 11[%arg2]
	cast.32     %r3333 <- (8) %r3332
	shl.64      %r3334 <- $1, %r3333
	cast.32     %r3335(i) <- (64) %r3334
	phisrc.32   %phi610(i) <- %r3335(i)
	br          .L726

.L726:
	phi.32      %r3336 <- %phi610(i), %phi611(i)
	add.32      %r3337(i) <- %r3336, $-1
	phisrc.32   %phi611(i) <- %r3337(i)
	br          %r3336, .L723, .L725

.L723:
	load.64     %r3339 <- 32[%arg2]
	scast.64    %r3341 <- (32) %r3337(i)
	muls.64     %r3342 <- %r3341, $40
	add.64      %r3343 <- %r3339, %r3342
	load.32     %r3345 <- 8[%r3343]
	phisrc.32   %phi618 <- %r3345
	phisrc.32   %phi628 <- %r3345
	phisrc.32   %phi632 <- %r3345
	phisrc.32   %phi635 <- %r3345
	phisrc.32   %phi638 <- %r3345
	phisrc.32   %phi641 <- %r3345
	br          %r3345, .L728, .L727

.L727:
	call        removeentry, %r3343
	br          .L726

.L728:
	br          %r3296(weakkey), .L731, .L730

.L730:
	load.32     %r3350 <- 24[%r3343]
	setge.32    %r3351 <- %r3350, $4
	br          %r3351, .L734, .L731

.L734:
	load.64     %r3353 <- 16[%r3343]
	load.8      %r3354 <- 9[%r3353]
	cast.32     %r3355 <- (8) %r3354
	and.32      %r3356 <- %r3355, $3
	br          %r3356, .L732, .L731

.L732:
	call        reallymarkobject, %arg1, %r3353
	br          .L731

.L731:
	br          %r3297(weakvalue), .L726, .L735

.L735:
	load.32     %r3362 <- 8[%r3343]
	setge.32    %r3363 <- %r3362, $4
	br          %r3363, .L739, .L726

.L739:
	load.64     %r3365 <- 0[%r3343]
	load.8      %r3366 <- 9[%r3365]
	cast.32     %r3367 <- (8) %r3366
	and.32      %r3368 <- %r3367, $3
	br          %r3368, .L737, .L726

.L737:
	call        reallymarkobject, %arg1, %r3365
	br          .L726

.L725:
	or-bool.32  %r3374 <- %r3296(weakkey), %r3297(weakvalue)
	phisrc.32   %phi593(return) <- %r3374
	br          .L713

.L713:
	phi.32      %r3299 <- %phi592(return), %phi593(return)
	ret.32      %r3299


traverseproto:
.L740:
	<entry-point>
	load.64     %r3376 <- 64[%arg2]
	br          %r3376, .L741, .L742

.L741:
	load.8      %r3379 <- 9[%r3376]
	cast.32     %r3380 <- (8) %r3379
	and.32      %r3381 <- %r3380, $252
	scast.8     %r3382 <- (32) %r3381
	store.8     %r3382 -> 9[%r3376]
	br          .L742

.L742:
	phisrc.32   %phi670(i) <- $0
	br          .L746

.L746:
	phi.32      %r3383(i) <- %phi670(i), %phi671(i)
	load.32     %r3385 <- 76[%arg2]
	setlt.32    %r3386 <- %r3383(i), %r3385
	br          %r3386, .L743, .L745

.L743:
	load.64     %r3388 <- 16[%arg2]
	scast.64    %r3390 <- (32) %r3383(i)
	muls.64     %r3391 <- %r3390, $16
	add.64      %r3392 <- %r3388, %r3391
	load.32     %r3393 <- 8[%r3392]
	setge.32    %r3394 <- %r3393, $4
	br          %r3394, .L749, .L744

.L749:
	load.64     %r3401 <- 0[%r3392]
	load.8      %r3402 <- 9[%r3401]
	cast.32     %r3403 <- (8) %r3402
	and.32      %r3404 <- %r3403, $3
	br          %r3404, .L747, .L744

.L747:
	call        reallymarkobject, %arg1, %r3401
	br          .L744

.L744:
	add.32      %r3414 <- %r3383(i), $1
	phisrc.32   %phi671(i) <- %r3414
	br          .L746

.L745:
	phisrc.32   %phi662(i) <- $0
	br          .L753

.L753:
	phi.32      %r3415(i) <- %phi662(i), %phi663(i)
	load.32     %r3417 <- 72[%arg2]
	setlt.32    %r3418 <- %r3415(i), %r3417
	br          %r3418, .L750, .L752

.L750:
	load.64     %r3420 <- 56[%arg2]
	scast.64    %r3422 <- (32) %r3415(i)
	muls.64     %r3423 <- %r3422, $8
	add.64      %r3424 <- %r3420, %r3423
	load.64     %r3425 <- 0[%r3424]
	br          %r3425, .L754, .L751

.L754:
	load.8      %r3433 <- 9[%r3425]
	cast.32     %r3434 <- (8) %r3433
	and.32      %r3435 <- %r3434, $252
	scast.8     %r3436 <- (32) %r3435
	store.8     %r3436 -> 9[%r3425]
	br          .L751

.L751:
	add.32      %r3438 <- %r3415(i), $1
	phisrc.32   %phi663(i) <- %r3438
	br          .L753

.L752:
	phisrc.32   %phi656(i) <- $0
	br          .L759

.L759:
	phi.32      %r3439(i) <- %phi656(i), %phi657(i)
	load.32     %r3441 <- 88[%arg2]
	setlt.32    %r3442 <- %r3439(i), %r3441
	br          %r3442, .L756, .L758

.L756:
	load.64     %r3444 <- 32[%arg2]
	scast.64    %r3446 <- (32) %r3439(i)
	muls.64     %r3447 <- %r3446, $8
	add.64      %r3448 <- %r3444, %r3447
	load.64     %r3449 <- 0[%r3448]
	br          %r3449, .L760, .L757

.L760:
	ptrcast.64  %r3457 <- (64) %r3449
	load.8      %r3458 <- 9[%r3457]
	cast.32     %r3459 <- (8) %r3458
	and.32      %r3460 <- %r3459, $3
	br          %r3460, .L762, .L757

.L762:
	ptrcast.64  %r3469 <- (64) %r3449
	call        reallymarkobject, %arg1, %r3469
	br          .L757

.L757:
	add.32      %r3471 <- %r3439(i), $1
	phisrc.32   %phi657(i) <- %r3471
	br          .L759

.L758:
	phisrc.32   %phi648(i) <- $0
	br          .L767

.L767:
	phi.32      %r3472(i) <- %phi648(i), %phi649(i)
	load.32     %r3474 <- 92[%arg2]
	setlt.32    %r3475 <- %r3472(i), %r3474
	br          %r3475, .L764, .L766

.L764:
	load.64     %r3477 <- 48[%arg2]
	scast.64    %r3479 <- (32) %r3472(i)
	muls.64     %r3480 <- %r3479, $16
	add.64      %r3481 <- %r3477, %r3480
	load.64     %r3482 <- 0[%r3481]
	br          %r3482, .L768, .L765

.L768:
	load.8      %r3490 <- 9[%r3482]
	cast.32     %r3491 <- (8) %r3490
	and.32      %r3492 <- %r3491, $252
	scast.8     %r3493 <- (32) %r3492
	store.8     %r3493 -> 9[%r3482]
	br          .L765

.L765:
	add.32      %r3495 <- %r3472(i), $1
	phisrc.32   %phi649(i) <- %r3495
	br          .L767

.L766:
	ret


traverseclosure:
.L770:
	<entry-point>
	load.64     %r3497 <- 24[%arg2]
	ptrcast.64  %r3498 <- (64) %r3497
	load.8      %r3499 <- 9[%r3498]
	cast.32     %r3500 <- (8) %r3499
	and.32      %r3501 <- %r3500, $3
	br          %r3501, .L771, .L772

.L771:
	ptrcast.64  %r3505 <- (64) %r3497
	call        reallymarkobject, %arg1, %r3505
	br          .L772

.L772:
	load.8      %r3507 <- 10[%arg2]
	br          %r3507, .L773, .L774

.L773:
	phisrc.32   %phi690(i) <- $0
	br          .L778

.L778:
	phi.32      %r3508(i) <- %phi690(i), %phi691(i)
	load.8      %r3510 <- 11[%arg2]
	cast.32     %r3511 <- (8) %r3510
	setlt.32    %r3512 <- %r3508(i), %r3511
	br          %r3512, .L775, .L782

.L775:
	add.64      %r3515 <- %arg2, $40
	scast.64    %r3517 <- (32) %r3508(i)
	muls.64     %r3518 <- %r3517, $16
	add.64      %r3519 <- %r3515, %r3518
	load.32     %r3520 <- 8[%r3519]
	setge.32    %r3521 <- %r3520, $4
	br          %r3521, .L781, .L776

.L781:
	load.64     %r3529 <- 0[%r3519]
	load.8      %r3530 <- 9[%r3529]
	cast.32     %r3531 <- (8) %r3530
	and.32      %r3532 <- %r3531, $3
	br          %r3532, .L779, .L776

.L779:
	call        reallymarkobject, %arg1, %r3529
	br          .L776

.L776:
	add.32      %r3543 <- %r3508(i), $1
	phisrc.32   %phi691(i) <- %r3543
	br          .L778

.L774:
	load.64     %r3545 <- 32[%arg2]
	ptrcast.64  %r3546 <- (64) %r3545
	load.8      %r3547 <- 9[%r3546]
	cast.32     %r3548 <- (8) %r3547
	and.32      %r3549 <- %r3548, $3
	br          %r3549, .L783, .L784

.L783:
	ptrcast.64  %r3553 <- (64) %r3545
	call        reallymarkobject, %arg1, %r3553
	br          .L784

.L784:
	phisrc.32   %phi696(i) <- $0
	br          .L788

.L788:
	phi.32      %r3554(i) <- %phi696(i), %phi697(i)
	load.8      %r3556 <- 11[%arg2]
	cast.32     %r3557 <- (8) %r3556
	setlt.32    %r3558 <- %r3554(i), %r3557
	br          %r3558, .L785, .L782

.L785:
	add.64      %r3561 <- %arg2, $40
	scast.64    %r3563 <- (32) %r3554(i)
	muls.64     %r3564 <- %r3563, $8
	add.64      %r3565 <- %r3561, %r3564
	load.64     %r3566 <- 0[%r3565]
	ptrcast.64  %r3567 <- (64) %r3566
	load.8      %r3568 <- 9[%r3567]
	cast.32     %r3569 <- (8) %r3568
	and.32      %r3570 <- %r3569, $3
	br          %r3570, .L789, .L786

.L789:
	add.64      %r3574 <- %arg2, $40
	add.64      %r3578 <- %r3574, %r3564
	load.64     %r3579 <- 0[%r3578]
	ptrcast.64  %r3580 <- (64) %r3579
	call        reallymarkobject, %arg1, %r3580
	br          .L786

.L786:
	add.32      %r3582 <- %r3554(i), $1
	phisrc.32   %phi697(i) <- %r3582
	br          .L788

.L782:
	ret


checkstacksizes:
.L791:
	<entry-point>
	load.64     %r3584 <- 40[%arg1]
	load.64     %r3586 <- 80[%arg1]
	sub.64      %r3587 <- %r3584, %r3586
	divs.64     %r3588 <- %r3587, $40
	scast.32    %r3589 <- (64) %r3588
	load.64     %r3592 <- 64[%arg1]
	sub.64      %r3593 <- %arg2, %r3592
	divs.64     %r3594 <- %r3593, $16
	scast.32    %r3595 <- (64) %r3594
	load.32     %r3597 <- 92[%arg1]
	setgt.32    %r3598 <- %r3597, $0x4e20
	br          %r3598, .L794, .L793

.L793:
	muls.32     %r3600 <- %r3589, $4
	setlt.32    %r3603 <- %r3600, %r3597
	br          %r3603, .L797, .L796

.L797:
	setlt.32    %r3606 <- $16, %r3597
	br          %r3606, .L795, .L796

.L795:
	divs.32     %r3610 <- %r3597, $2
	call        luaD_reallocCI, %arg1, %r3610
	br          .L796

.L796:
	muls.32     %r3612 <- %r3595, $4
	load.32     %r3614 <- 88[%arg1]
	setlt.32    %r3615 <- %r3612, %r3614
	br          %r3615, .L800, .L794

.L800:
	setlt.32    %r3618 <- $90, %r3614
	br          %r3618, .L798, .L794

.L798:
	divs.32     %r3622 <- %r3614, $2
	call        luaD_reallocstack, %arg1, %r3622
	br          .L794

.L794:
	ret


traversestack:
.L801:
	<entry-point>
	load.32     %r3624 <- 128[%arg2]
	setge.32    %r3625 <- %r3624, $4
	br          %r3625, .L804, .L803

.L804:
	load.64     %r3627 <- 120[%arg2]
	load.8      %r3628 <- 9[%r3627]
	cast.32     %r3629 <- (8) %r3628
	and.32      %r3630 <- %r3629, $3
	br          %r3630, .L802, .L803

.L802:
	call        reallymarkobject, %arg1, %r3627
	br          .L803

.L803:
	load.64     %r3635(lim) <- 16[%arg2]
	load.64     %r3637(ci) <- 80[%arg2]
	phisrc.64   %phi707(lim) <- %r3635(lim)
	phisrc.64   %phi710(lim) <- %r3635(lim)
	phisrc.64   %phi716(ci) <- %r3637(ci)
	phisrc.64   %phi731(lim) <- %r3635(lim)
	phisrc.64   %phi734(lim) <- %r3635(lim)
	br          .L808

.L808:
	phi.64      %r3638(ci) <- %phi716(ci), %phi717(ci)
	load.64     %r3640 <- 40[%arg2]
	setbe.32    %r3641 <- %r3638(ci), %r3640
	br          %r3641, .L805, .L807

.L805:
	phi.64      %r3642 <- %phi710(lim), %phi711(lim)
	load.64     %r3644 <- 16[%r3638(ci)]
	setb.32     %r3645 <- %r3642, %r3644
	phisrc.64   %phi708(lim) <- %r3642
	br          %r3645, .L809, .L806

.L809:
	phisrc.64   %phi709(lim) <- %r3644
	phisrc.64   %phi711(lim) <- %r3644
	br          .L806

.L806:
	add.64      %r3649 <- %r3638(ci), $40
	phisrc.64   %phi717(ci) <- %r3649
	br          .L808

.L807:
	load.64     %r3651(o) <- 64[%arg2]
	phisrc.64   %phi728(o) <- %r3651(o)
	br          .L814

.L814:
	phi.64      %r3652(o) <- %phi728(o), %phi729(o)
	load.64     %r3654 <- 16[%arg2]
	setb.32     %r3655 <- %r3652(o), %r3654
	phisrc.64   %phi720(o) <- %r3652(o)
	br          %r3655, .L811, .L821

.L811:
	load.32     %r3657 <- 8[%r3652(o)]
	setge.32    %r3658 <- %r3657, $4
	br          %r3658, .L817, .L812

.L817:
	load.64     %r3660 <- 0[%r3652(o)]
	load.8      %r3661 <- 9[%r3660]
	cast.32     %r3662 <- (8) %r3661
	and.32      %r3663 <- %r3662, $3
	br          %r3663, .L815, .L812

.L815:
	call        reallymarkobject, %arg1, %r3660
	br          .L812

.L812:
	add.64      %r3668 <- %r3652(o), $16
	phisrc.64   %phi729(o) <- %r3668
	br          .L814

.L821:
	phi.64      %r3669(o) <- %phi720(o), %phi721(o)
	phi.64      %r3670(lim) <- %phi707(lim), %phi708(lim), %phi709(lim)
	setbe.32    %r3671 <- %r3669(o), %r3670(lim)
	br          %r3671, .L818, .L820

.L818:
	store.32    $0 -> 8[%r3669(o)]
	add.64      %r3674 <- %r3669(o), $16
	phisrc.64   %phi721(o) <- %r3674
	br          .L821

.L820:
	call        checkstacksizes, %arg2, %r3670(lim)
	ret


propagatemark:
.L823:
	<entry-point>
	load.64     %r3678 <- 56[%arg1]
	load.8      %r3680 <- 9[%r3678]
	cast.32     %r3681 <- (8) %r3680
	or.32       %r3682 <- %r3681, $4
	scast.8     %r3683 <- (32) %r3682
	store.8     %r3683 -> 9[%r3678]
	load.8      %r3685 <- 8[%r3678]
	switch      %r3685, 5 -> .L825, 6 -> .L826, 8 -> .L827, 9 -> .L828, default -> .L829

.L825:
	load.64     %r3689 <- 48[%r3678]
	store.64    %r3689 -> 56[%arg1]
	call.32     %r3693 <- traversetable, %arg1, %r3678
	br          %r3693, .L830, .L831

.L830:
	load.8      %r3695 <- 9[%r3678]
	cast.32     %r3696 <- (8) %r3695
	and.32      %r3697 <- %r3696, $251
	scast.8     %r3698 <- (32) %r3697
	store.8     %r3698 -> 9[%r3678]
	br          .L831

.L831:
	load.32     %r3700 <- 56[%r3678]
	scast.64    %r3701 <- (32) %r3700
	mulu.64     %r3702 <- %r3701, $16
	add.64      %r3703 <- %r3702, $64
	load.8      %r3705 <- 11[%r3678]
	cast.32     %r3706 <- (8) %r3705
	shl.64      %r3707 <- $1, %r3706
	mulu.64     %r3708 <- %r3707, $40
	add.64      %r3709 <- %r3703, %r3708
	phisrc.64   %phi735(return) <- %r3709
	br          .L832

.L826:
	load.64     %r3715 <- 16[%r3678]
	store.64    %r3715 -> 56[%arg1]
	call        traverseclosure, %arg1, %r3678
	load.8      %r3720 <- 10[%r3678]
	br          %r3720, .L833, .L834

.L833:
	load.8      %r3722 <- 11[%r3678]
	cast.32     %r3723 <- (8) %r3722
	add.32      %r3724 <- %r3723, $-1
	scast.64    %r3725 <- (32) %r3724
	mulu.64     %r3726 <- %r3725, $16
	cast.32     %r3727 <- (64) %r3726
	add.32      %r3728 <- %r3727, $56
	phisrc.32   %phi736 <- %r3728
	br          .L835

.L834:
	load.8      %r3730 <- 11[%r3678]
	cast.32     %r3731 <- (8) %r3730
	add.32      %r3732 <- %r3731, $-1
	scast.64    %r3733 <- (32) %r3732
	mulu.64     %r3734 <- %r3733, $8
	cast.32     %r3735 <- (64) %r3734
	add.32      %r3736 <- %r3735, $48
	phisrc.32   %phi737 <- %r3736
	br          .L835

.L835:
	phi.32      %r3737 <- %phi736, %phi737
	scast.64    %r3738 <- (32) %r3737
	phisrc.64   %phi738(return) <- %r3738
	br          .L832

.L827:
	load.64     %r3742 <- 160[%r3678]
	store.64    %r3742 -> 56[%arg1]
	load.64     %r3745 <- 64[%arg1]
	store.64    %r3745 -> 160[%r3678]
	store.64    %r3678 -> 64[%arg1]
	load.8      %r3750 <- 9[%r3678]
	cast.32     %r3751 <- (8) %r3750
	and.32      %r3752 <- %r3751, $251
	scast.8     %r3753 <- (32) %r3752
	store.8     %r3753 -> 9[%r3678]
	call        traversestack, %arg1, %r3678
	load.32     %r3757 <- 88[%r3678]
	scast.64    %r3758 <- (32) %r3757
	mulu.64     %r3759 <- %r3758, $16
	add.64      %r3760 <- %r3759, $184
	load.32     %r3762 <- 92[%r3678]
	scast.64    %r3763 <- (32) %r3762
	mulu.64     %r3764 <- %r3763, $40
	add.64      %r3765 <- %r3760, %r3764
	phisrc.64   %phi739(return) <- %r3765
	br          .L832

.L828:
	load.64     %r3770 <- 104[%r3678]
	store.64    %r3770 -> 56[%arg1]
	call        traverseproto, %arg1, %r3678
	load.32     %r3775 <- 80[%r3678]
	scast.64    %r3776 <- (32) %r3775
	mulu.64     %r3777 <- %r3776, $4
	add.64      %r3778 <- %r3777, $120
	load.32     %r3780 <- 88[%r3678]
	scast.64    %r3781 <- (32) %r3780
	mulu.64     %r3782 <- %r3781, $8
	add.64      %r3783 <- %r3778, %r3782
	load.32     %r3785 <- 76[%r3678]
	scast.64    %r3786 <- (32) %r3785
	mulu.64     %r3787 <- %r3786, $16
	add.64      %r3788 <- %r3783, %r3787
	load.32     %r3790 <- 84[%r3678]
	scast.64    %r3791 <- (32) %r3790
	mulu.64     %r3792 <- %r3791, $4
	add.64      %r3793 <- %r3788, %r3792
	load.32     %r3795 <- 92[%r3678]
	scast.64    %r3796 <- (32) %r3795
	mulu.64     %r3797 <- %r3796, $16
	add.64      %r3798 <- %r3793, %r3797
	load.32     %r3800 <- 72[%r3678]
	scast.64    %r3801 <- (32) %r3800
	mulu.64     %r3802 <- %r3801, $8
	add.64      %r3803 <- %r3798, %r3802
	phisrc.64   %phi740(return) <- %r3803
	br          .L832

.L829:
	phisrc.64   %phi741(return) <- $0
	br          .L832

.L832:
	phi.64      %r3711 <- %phi735(return), %phi738(return), %phi739(return), %phi740(return), %phi741(return)
	ret.64      %r3711


propagateall:
.L836:
	<entry-point>
	phisrc.64   %phi745(m) <- $0
	br          .L840

.L840:
	load.64     %r3806 <- 56[%arg1]
	phi.64      %r3810 <- %phi745(m), %phi746(m)
	br          %r3806, .L837, .L841

.L837:
	call.64     %r3808 <- propagatemark, %arg1
	add.64      %r3812 <- %r3810, %r3808
	phisrc.64   %phi746(m) <- %r3812
	br          .L840

.L841:
	ret.64      %r3810


iscleared:
.L842:
	<entry-point>
	load.32     %r3817 <- 8[%arg1]
	setge.32    %r3819 <- %r3817, $4
	br          %r3819, .L844, .L843

.L843:
	phisrc.32   %phi747(return) <- $0
	br          .L845

.L844:
	seteq.32    %r3824 <- %r3817, $4
	br          %r3824, .L846, .L847

.L846:
	load.64     %r3826 <- 0[%arg1]
	load.8      %r3827 <- 9[%r3826]
	cast.32     %r3828 <- (8) %r3827
	and.32      %r3829 <- %r3828, $252
	scast.8     %r3830 <- (32) %r3829
	store.8     %r3830 -> 9[%r3826]
	phisrc.32   %phi748(return) <- $0
	br          .L845

.L847:
	load.64     %r3832 <- 0[%arg1]
	load.8      %r3833 <- 9[%r3832]
	cast.32     %r3834 <- (8) %r3833
	and.32      %r3835 <- %r3834, $3
	br          %r3835, .L848, .L849

.L848:
	phisrc.32   %phi749 <- $1
	br          .L850

.L849:
	seteq.32    %r3839 <- %r3817, $7
	br          %r3839, .L851, .L852

.L851:
	br          %arg2, .L855, .L854

.L854:
	load.8      %r3843 <- 9[%r3832]
	cast.32     %r3844 <- (8) %r3843
	and.32      %r3845 <- %r3844, $8
	phisrc.32   %phi750 <- %r3845
	br          .L856

.L855:
	phisrc.32   %phi751 <- $0
	br          .L856

.L856:
	phi.32      %r3846 <- %phi750, %phi751
	phisrc.32   %phi752 <- %r3846
	br          .L853

.L852:
	phisrc.32   %phi753 <- $0
	br          .L853

.L853:
	phi.32      %r3847 <- %phi752, %phi753
	phisrc.32   %phi754 <- %r3847
	br          .L850

.L850:
	phi.32      %r3848 <- %phi749, %phi754
	phisrc.32   %phi755(return) <- %r3848
	br          .L845

.L845:
	phi.32      %r3820 <- %phi747(return), %phi748(return), %phi755(return)
	ret.32      %r3820


cleartable:
.L857:
	<entry-point>
	phisrc.64   %phi760(l) <- %arg1
	br          .L861

.L861:
	phi.64      %r3849(l) <- %phi760(l), %phi761(l)
	br          %r3849(l), .L858, .L860

.L858:
	load.32     %r3853(i) <- 56[%r3849(l)]
	load.8      %r3855 <- 9[%r3849(l)]
	cast.32     %r3856 <- (8) %r3855
	and.32      %r3857 <- %r3856, $16
	phisrc.32   %phi766(i) <- %r3853(i)
	br          %r3857, .L867, .L863

.L867:
	phi.32      %r3858 <- %phi766(i), %phi767(i)
	add.32      %r3859(i) <- %r3858, $-1
	phisrc.32   %phi767(i) <- %r3859(i)
	br          %r3858, .L864, .L863

.L864:
	load.64     %r3861 <- 24[%r3849(l)]
	scast.64    %r3863 <- (32) %r3859(i)
	muls.64     %r3864 <- %r3863, $16
	add.64      %r3865 <- %r3861, %r3864
	call.32     %r3867 <- iscleared, %r3865, $0
	br          %r3867, .L868, .L867

.L868:
	store.32    $0 -> 8[%r3865]
	br          .L867

.L863:
	load.8      %r3870 <- 11[%r3849(l)]
	cast.32     %r3871 <- (8) %r3870
	shl.64      %r3872 <- $1, %r3871
	cast.32     %r3873(i) <- (64) %r3872
	phisrc.32   %phi763(i) <- %r3873(i)
	br          .L873

.L873:
	phi.32      %r3874 <- %phi763(i), %phi764(i)
	add.32      %r3875(i) <- %r3874, $-1
	phisrc.32   %phi764(i) <- %r3875(i)
	br          %r3874, .L870, .L872

.L870:
	load.64     %r3877 <- 32[%r3849(l)]
	scast.64    %r3879 <- (32) %r3875(i)
	muls.64     %r3880 <- %r3879, $40
	add.64      %r3881 <- %r3877, %r3880
	load.32     %r3883 <- 8[%r3881]
	br          %r3883, .L876, .L873

.L876:
	add.64      %r3886 <- %r3881, $16
	call.32     %r3888 <- iscleared, %r3886, $1
	br          %r3888, .L874, .L877

.L877:
	call.32     %r3891 <- iscleared, %r3881, $0
	br          %r3891, .L874, .L873

.L874:
	store.32    $0 -> 8[%r3881]
	call        removeentry, %r3881
	br          .L873

.L872:
	load.64     %r3895 <- 48[%r3849(l)]
	phisrc.64   %phi761(l) <- %r3895
	br          .L861

.L860:
	ret


freeobj:
.L878:
	<entry-point>
	load.8      %r3897 <- 8[%arg2]
	cast.64     %r3919 <- (64) %arg2
	switch      %r3897, 4 -> .L885, 5 -> .L883, 6 -> .L881, 7 -> .L886, 8 -> .L884, 9 -> .L880, 10 -> .L882, default -> .L879

.L880:
	call        luaF_freeproto, %arg1, %arg2
	br          .L879

.L881:
	call        luaF_freeclosure, %arg1, %arg2
	br          .L879

.L882:
	call        luaF_freeupval, %arg1, %arg2
	br          .L879

.L883:
	call        luaH_free, %arg1, %arg2
	br          .L879

.L884:
	call        luaE_freethread, %arg1, %arg2
	br          .L879

.L885:
	load.64     %r3914 <- 32[%arg1]
	load.32     %r3915 <- 8[%r3914]
	add.32      %r3916 <- %r3915, $-1
	store.32    %r3916 -> 8[%r3914]
	load.64     %r3921 <- 16[%arg2]
	add.64      %r3924 <- %r3921, $25
	call.64     %r3925 <- luaM_realloc_, %arg1, %r3919, %r3924, $0
	br          .L879

.L886:
	load.64     %r3930 <- 32[%arg2]
	add.64      %r3931 <- %r3930, $40
	call.64     %r3932 <- luaM_realloc_, %arg1, %r3919, %r3931, $0
	br          .L879

.L879:
	ret


sweeplist:
.L888:
	<entry-point>
	load.64     %r3934 <- 32[%arg1]
	load.8      %r3936 <- 32[%r3934]
	cast.32     %r3937 <- (8) %r3936
	xor.32      %r3938 <- %r3937, $3
	phisrc.64   %phi771(p) <- %arg2
	phisrc.64   %phi773(count) <- %arg3
	phisrc.8    %phi775 <- %r3936
	phisrc.8    %phi777 <- %r3936
	br          .L892

.L892:
	phi.64      %r3939(p) <- %phi771(p), %phi772(p)
	load.64     %r3940 <- 0[%r3939(p)]
	br          %r3940, .L893, .L901

.L893:
	phi.64      %r3942 <- %phi773(count), %phi774(count)
	add.64      %r3943 <- %r3942, $-1
	seta.32     %r3944 <- %r3942, $0
	phisrc.64   %phi774(count) <- %r3943
	br          %r3944, .L889, .L901

.L889:
	load.8      %r3946 <- 8[%r3940]
	cast.32     %r3947 <- (8) %r3946
	seteq.32    %r3948 <- %r3947, $8
	br          %r3948, .L894, .L895

.L894:
	add.64      %r3952 <- %r3940, $152
	call.64     %r3953 <- sweeplist, %arg1, %r3952, $-3
	br          .L895

.L895:
	load.8      %r3955 <- 9[%r3940]
	cast.32     %r3956 <- (8) %r3955
	xor.32      %r3957 <- %r3956, $3
	and.32      %r3959 <- %r3957, %r3938
	br          %r3959, .L896, .L897

.L896:
	and.32      %r3963 <- %r3956, $248
	load.8      %r3965 <- 32[%r3934]
	cast.32     %r3966 <- (8) %r3965
	and.32      %r3967 <- %r3966, $3
	or.32       %r3970 <- %r3963, %r3967
	scast.8     %r3971 <- (32) %r3970
	store.8     %r3971 -> 9[%r3940]
	phisrc.64   %phi772(p) <- %r3940
	br          .L892

.L897:
	load.64     %r3977 <- 0[%r3940]
	store.64    %r3977 -> 0[%r3939(p)]
	load.64     %r3981 <- 40[%r3934]
	seteq.32    %r3982 <- %r3940, %r3981
	br          %r3982, .L899, .L900

.L899:
	load.64     %r3984 <- 0[%r3940]
	store.64    %r3984 -> 40[%r3934]
	br          .L900

.L900:
	call        freeobj, %arg1, %r3940
	br          .L892

.L901:
	ret.64      %r3939(p)


checkSizes:
.L902:
	<entry-point>
	load.64     %r3991 <- 32[%arg1]
	load.32     %r3993 <- 8[%r3991]
	load.32     %r3995 <- 12[%r3991]
	divs.32     %r3996 <- %r3995, $4
	setb.32     %r3998 <- %r3993, %r3996
	br          %r3998, .L905, .L904

.L905:
	setgt.32    %r4001 <- %r3995, $64
	br          %r4001, .L903, .L904

.L903:
	divs.32     %r4005 <- %r3995, $2
	call        luaS_resize, %arg1, %r4005
	br          .L904

.L904:
	load.64     %r4007 <- 104[%r3991]
	seta.32     %r4008 <- %r4007, $64
	br          %r4008, .L906, .L907

.L906:
	divu.64     %r4011 <- %r4007, $2
	add.64      %r4013 <- %r4011, $1
	setbe.32    %r4015 <- %r4013, $-3
	br          %r4015, .L908, .L909

.L908:
	load.64     %r4018 <- 88[%r3991]
	cast.64     %r4019 <- (64) %r4018
	call.64     %r4025 <- luaM_realloc_, %arg1, %r4019, %r4007, %r4011
	phisrc.64   %phi778 <- %r4025
	br          .L910

.L909:
	call.64     %r4027 <- luaM_toobig, %arg1
	cast.64     %r4028 <- (64) %r4027
	phisrc.64   %phi779 <- %r4028
	br          .L910

.L910:
	phi.64      %r4029 <- %phi778, %phi779
	ptrcast.64  %r4030 <- (64) %r4029
	store.64    %r4030 -> 88[%r3991]
	store.64    %r4011 -> 104[%r3991]
	br          .L907

.L907:
	ret


GCTM:
.L911:
	<entry-point>
	load.64     %r4035 <- 32[%arg1]
	load.64     %r4037 <- 80[%r4035]
	load.64     %r4038 <- 0[%r4037]
	seteq.32    %r4044 <- %r4038, %r4037
	br          %r4044, .L912, .L913

.L912:
	store.64    $0 -> 80[%r4035]
	br          .L914

.L913:
	load.64     %r4047 <- 0[%r4038]
	store.64    %r4047 -> 0[%r4037]
	br          .L914

.L914:
	load.64     %r4051 <- 176[%r4035]
	load.64     %r4052 <- 0[%r4051]
	store.64    %r4052 -> 0[%r4038]
	load.64     %r4056 <- 176[%r4035]
	store.64    %r4038 -> 0[%r4056]
	load.8      %r4058 <- 9[%r4038]
	cast.32     %r4059 <- (8) %r4058
	and.32      %r4060 <- %r4059, $248
	load.8      %r4062 <- 32[%r4035]
	cast.32     %r4063 <- (8) %r4062
	and.32      %r4064 <- %r4063, $3
	or.32       %r4067 <- %r4060, %r4064
	scast.8     %r4068 <- (32) %r4067
	store.8     %r4068 -> 9[%r4038]
	load.64     %r4071 <- 16[%r4038]
	br          %r4071, .L916, .L922

.L916:
	load.8      %r4075 <- 10[%r4071]
	cast.32     %r4076 <- (8) %r4075
	and.32      %r4077 <- %r4076, $4
	br          %r4077, .L922, .L919

.L919:
	load.64     %r4081 <- 32[%arg1]
	load.64     %r4082 <- 312[%r4081]
	call.64     %r4083 <- luaT_gettm, %r4071, $2, %r4082
	br          %r4083, .L921, .L922

.L921:
	load.8      %r4089 <- 101[%arg1]
	load.64     %r4091 <- 112[%r4035]
	store.8     $0 -> 101[%arg1]
	load.64     %r4094 <- 120[%r4035]
	mulu.64     %r4095 <- %r4094, $2
	store.64    %r4095 -> 112[%r4035]
	load.64     %r4099 <- 16[%arg1]
	load.64     %r4101 <- 0[%r4083]
	store.64    %r4101 -> 0[%r4099]
	load.32     %r4104 <- 8[%r4083]
	store.32    %r4104 -> 8[%r4099]
	load.64     %r4108 <- 16[%arg1]
	ptrcast.64  %r4111 <- (64) %r4038
	store.64    %r4111 -> 16[%r4108]
	store.32    $7 -> 24[%r4108]
	load.64     %r4115 <- 16[%arg1]
	cast.64     %r4116 <- (64) %r4115
	add.64      %r4117 <- %r4116, $32
	ptrcast.64  %r4118 <- (64) %r4117
	store.64    %r4118 -> 16[%arg1]
	add.64      %r4122 <- %r4118, $-32
	call        luaD_call, %arg1, %r4122, $0
	store.8     %r4089 -> 101[%arg1]
	store.64    %r4091 -> 112[%r4035]
	br          .L922

.L922:
	ret


luaC_callGCTM:
.L923:
	<entry-point>
	br          .L927

.L927:
	load.64     %r4128 <- 32[%arg1]
	load.64     %r4129 <- 80[%r4128]
	br          %r4129, .L924, .L926

.L924:
	call        GCTM, %arg1
	br          .L927

.L926:
	ret


luaC_freeall:
.L928:
	<entry-point>
	load.64     %r4132 <- 32[%arg1]
	store.8     $67 -> 32[%r4132]
	add.64      %r4136 <- %r4132, $40
	call.64     %r4137 <- sweeplist, %arg1, %r4136, $-3
	phisrc.32   %phi793(i) <- $0
	br          .L932

.L932:
	phi.32      %r4138(i) <- %phi793(i), %phi794(i)
	load.32     %r4140 <- 12[%r4132]
	setlt.32    %r4141 <- %r4138(i), %r4140
	br          %r4141, .L929, .L931

.L929:
	load.64     %r4144 <- 0[%r4132]
	scast.64    %r4146 <- (32) %r4138(i)
	muls.64     %r4147 <- %r4146, $8
	add.64      %r4148 <- %r4144, %r4147
	call.64     %r4149 <- sweeplist, %arg1, %r4148, $-3
	add.32      %r4151 <- %r4138(i), $1
	phisrc.32   %phi794(i) <- %r4151
	br          .L932

.L931:
	ret


markmt:
.L933:
	<entry-point>
	phisrc.32   %phi801(i) <- $0
	br          .L937

.L937:
	phi.32      %r4152(i) <- %phi801(i), %phi802(i)
	setlt.32    %r4153 <- %r4152(i), $9
	br          %r4153, .L934, .L936

.L934:
	add.64      %r4155 <- %arg1, $224
	scast.64    %r4157 <- (32) %r4152(i)
	muls.64     %r4158 <- %r4157, $8
	add.64      %r4159 <- %r4155, %r4158
	load.64     %r4160 <- 0[%r4159]
	br          %r4160, .L938, .L935

.L938:
	ptrcast.64  %r4168 <- (64) %r4160
	load.8      %r4169 <- 9[%r4168]
	cast.32     %r4170 <- (8) %r4169
	and.32      %r4171 <- %r4170, $3
	br          %r4171, .L940, .L935

.L940:
	ptrcast.64  %r4180 <- (64) %r4160
	call        reallymarkobject, %arg1, %r4180
	br          .L935

.L935:
	add.32      %r4182 <- %r4152(i), $1
	phisrc.32   %phi802(i) <- %r4182
	br          .L937

.L936:
	ret


markroot:
.L942:
	<entry-point>
	load.64     %r4184 <- 32[%arg1]
	store.64    $0 -> 56[%r4184]
	store.64    $0 -> 64[%r4184]
	store.64    $0 -> 72[%r4184]
	load.64     %r4189 <- 176[%r4184]
	ptrcast.64  %r4190 <- (64) %r4189
	load.8      %r4191 <- 9[%r4190]
	cast.32     %r4192 <- (8) %r4191
	and.32      %r4193 <- %r4192, $3
	phisrc.64   %phi809 <- %r4189
	phisrc.64   %phi813 <- %r4189
	br          %r4193, .L943, .L944

.L943:
	ptrcast.64  %r4197 <- (64) %r4189
	call        reallymarkobject, %r4184, %r4197
	br          .L944

.L944:
	load.64     %r4199 <- 176[%r4184]
	load.32     %r4200 <- 128[%r4199]
	setge.32    %r4201 <- %r4200, $4
	br          %r4201, .L947, .L946

.L947:
	load.64     %r4204 <- 120[%r4199]
	load.8      %r4205 <- 9[%r4204]
	cast.32     %r4206 <- (8) %r4205
	and.32      %r4207 <- %r4206, $3
	br          %r4207, .L945, .L946

.L945:
	call        reallymarkobject, %r4184, %r4204
	br          .L946

.L946:
	load.64     %r4213 <- 32[%arg1]
	load.32     %r4214 <- 168[%r4213]
	setge.32    %r4215 <- %r4214, $4
	br          %r4215, .L950, .L949

.L950:
	load.64     %r4218 <- 160[%r4213]
	load.8      %r4219 <- 9[%r4218]
	cast.32     %r4220 <- (8) %r4219
	and.32      %r4221 <- %r4220, $3
	br          %r4221, .L948, .L949

.L948:
	call        reallymarkobject, %r4184, %r4218
	br          .L949

.L949:
	call        markmt, %r4184
	store.8     $1 -> 33[%r4184]
	ret


remarkupvals:
.L952:
	<entry-point>
	load.64     %r4229(uv) <- 216[%arg1]
	phisrc.64   %phi824(uv) <- %r4229(uv)
	br          .L956

.L956:
	phi.64      %r4230(uv) <- %phi824(uv), %phi825(uv)
	add.64      %r4232 <- %arg1, $184
	setne.32    %r4233 <- %r4230(uv), %r4232
	br          %r4233, .L953, .L955

.L953:
	ptrcast.64  %r4235 <- (64) %r4230(uv)
	load.8      %r4236 <- 9[%r4235]
	cast.32     %r4237 <- (8) %r4236
	and.32      %r4238 <- %r4237, $4
	br          %r4238, .L954, .L959

.L959:
	and.32      %r4243 <- %r4237, $3
	br          %r4243, .L954, .L957

.L957:
	load.64     %r4245 <- 16[%r4230(uv)]
	load.32     %r4246 <- 8[%r4245]
	setge.32    %r4247 <- %r4246, $4
	br          %r4247, .L962, .L954

.L962:
	load.64     %r4250 <- 0[%r4245]
	load.8      %r4251 <- 9[%r4250]
	cast.32     %r4252 <- (8) %r4251
	and.32      %r4253 <- %r4252, $3
	br          %r4253, .L960, .L954

.L960:
	call        reallymarkobject, %arg1, %r4250
	br          .L954

.L954:
	load.64     %r4259 <- 32[%r4230(uv)]
	phisrc.64   %phi825(uv) <- %r4259
	br          .L956

.L955:
	ret


atomic:
.L963:
	<entry-point>
	load.64     %r4261 <- 32[%arg1]
	call        remarkupvals, %r4261
	call.64     %r4264 <- propagateall, %r4261
	load.64     %r4266 <- 72[%r4261]
	store.64    %r4266 -> 56[%r4261]
	store.64    $0 -> 72[%r4261]
	ptrcast.64  %r4270 <- (64) %arg1
	load.8      %r4271 <- 9[%r4270]
	cast.32     %r4272 <- (8) %r4271
	and.32      %r4273 <- %r4272, $3
	br          %r4273, .L964, .L965

.L964:
	call        reallymarkobject, %r4261, %r4270
	br          .L965

.L965:
	call        markmt, %r4261
	call.64     %r4279 <- propagateall, %r4261
	load.64     %r4281 <- 64[%r4261]
	store.64    %r4281 -> 56[%r4261]
	store.64    $0 -> 64[%r4261]
	call.64     %r4285 <- propagateall, %r4261
	call.64     %r4287 <- luaC_separateudata, %arg1, $0
	call        marktmu, %r4261
	call.64     %r4290 <- propagateall, %r4261
	add.64      %r4293 <- %r4287, %r4290
	load.64     %r4296 <- 72[%r4261]
	call        cleartable, %r4296
	load.8      %r4298 <- 32[%r4261]
	cast.32     %r4299 <- (8) %r4298
	xor.32      %r4300 <- %r4299, $3
	scast.8     %r4301 <- (32) %r4300
	store.8     %r4301 -> 32[%r4261]
	store.32    $0 -> 36[%r4261]
	add.64      %r4305 <- %r4261, $40
	store.64    %r4305 -> 48[%r4261]
	store.8     $2 -> 33[%r4261]
	load.64     %r4309 <- 120[%r4261]
	sub.64      %r4311 <- %r4309, %r4293
	store.64    %r4311 -> 128[%r4261]
	ret


singlestep:
.L967:
	<entry-point>
	load.64     %r4314 <- 32[%arg1]
	load.8      %r4316 <- 33[%r4314]
	switch      %r4316, 0 -> .L969, 1 -> .L970, 2 -> .L971, 3 -> .L972, 4 -> .L973, default -> .L974

.L969:
	call        markroot, %arg1
	phisrc.64   %phi830(return) <- $0
	br          .L975

.L970:
	load.64     %r4320 <- 56[%r4314]
	br          %r4320, .L976, .L977

.L976:
	call.64     %r4322 <- propagatemark, %r4314
	phisrc.64   %phi831(return) <- %r4322
	br          .L975

.L977:
	call        atomic, %arg1
	phisrc.64   %phi832(return) <- $0
	br          .L975

.L971:
	load.64     %r4325 <- 120[%r4314]
	load.64     %r4328 <- 0[%r4314]
	load.32     %r4330 <- 36[%r4314]
	add.32      %r4331 <- %r4330, $1
	store.32    %r4331 -> 36[%r4314]
	scast.64    %r4332 <- (32) %r4330
	muls.64     %r4333 <- %r4332, $8
	add.64      %r4334 <- %r4328, %r4333
	call.64     %r4335 <- sweeplist, %arg1, %r4334, $-3
	load.32     %r4337 <- 36[%r4314]
	load.32     %r4339 <- 12[%r4314]
	setge.32    %r4340 <- %r4337, %r4339
	br          %r4340, .L979, .L980

.L979:
	store.8     $3 -> 33[%r4314]
	br          .L980

.L980:
	load.64     %r4344 <- 120[%r4314]
	sub.64      %r4345 <- %r4325, %r4344
	load.64     %r4347 <- 128[%r4314]
	sub.64      %r4349 <- %r4347, %r4345
	store.64    %r4349 -> 128[%r4314]
	phisrc.64   %phi833(return) <- $10
	br          .L975

.L972:
	load.64     %r4352 <- 120[%r4314]
	load.64     %r4355 <- 48[%r4314]
	call.64     %r4356 <- sweeplist, %arg1, %r4355, $40
	store.64    %r4356 -> 48[%r4314]
	load.64     %r4360 <- 0[%r4356]
	br          %r4360, .L982, .L981

.L981:
	call        checkSizes, %arg1
	store.8     $4 -> 33[%r4314]
	br          .L982

.L982:
	load.64     %r4366 <- 120[%r4314]
	sub.64      %r4367 <- %r4352, %r4366
	load.64     %r4369 <- 128[%r4314]
	sub.64      %r4371 <- %r4369, %r4367
	store.64    %r4371 -> 128[%r4314]
	phisrc.64   %phi834(return) <- $400
	br          .L975

.L973:
	load.64     %r4374 <- 80[%r4314]
	br          %r4374, .L983, .L984

.L983:
	call        GCTM, %arg1
	load.64     %r4377 <- 128[%r4314]
	seta.32     %r4378 <- %r4377, $100
	br          %r4378, .L985, .L986

.L985:
	add.64      %r4382 <- %r4377, $-100
	store.64    %r4382 -> 128[%r4314]
	br          .L986

.L986:
	phisrc.64   %phi835(return) <- $100
	br          .L975

.L984:
	store.8     $0 -> 33[%r4314]
	store.64    $0 -> 136[%r4314]
	phisrc.64   %phi836(return) <- $0
	br          .L975

.L974:
	phisrc.64   %phi837(return) <- $0
	br          .L975

.L975:
	phi.64      %r4318 <- %phi830(return), %phi831(return), %phi832(return), %phi833(return), %phi834(return), %phi835(return), %phi836(return), %phi837(return)
	ret.64      %r4318


luaC_step:
.L988:
	<entry-point>
	load.64     %r4387 <- 32[%arg1]
	load.32     %r4389 <- 148[%r4387]
	mulu.32     %r4391 <- %r4389, $10
	cast.64     %r4392 <- (32) %r4391
	phisrc.64   %phi840(lim) <- %r4392
	br          %r4391, .L990, .L989

.L989:
	phisrc.64   %phi841(lim) <- $0x7ffffffffffffffe
	br          .L990

.L990:
	load.64     %r4396 <- 120[%r4387]
	load.64     %r4398 <- 112[%r4387]
	sub.64      %r4399 <- %r4396, %r4398
	load.64     %r4401 <- 136[%r4387]
	add.64      %r4403 <- %r4401, %r4399
	store.64    %r4403 -> 136[%r4387]
	br          .L991

.L991:
	call.64     %r4406 <- singlestep, %arg1
	phi.64      %r4407 <- %phi840(lim), %phi841(lim), %phi842(lim)
	sub.64      %r4409 <- %r4407, %r4406
	load.8      %r4412 <- 33[%r4387]
	phisrc.64   %phi842(lim) <- %r4409
	br          %r4412, .L992, .L997

.L992:
	setgt.32    %r4416 <- %r4409, $0
	br          %r4416, .L991, .L993

.L993:
	br          %r4412, .L996, .L997

.L996:
	load.64     %r4422 <- 136[%r4387]
	setb.32     %r4423 <- %r4422, $0x400
	br          %r4423, .L998, .L999

.L998:
	load.64     %r4425 <- 120[%r4387]
	add.64      %r4426 <- %r4425, $0x400
	store.64    %r4426 -> 112[%r4387]
	br          .L1001

.L999:
	add.64      %r4431 <- %r4422, $0xfffffffffffffc00
	store.64    %r4431 -> 136[%r4387]
	load.64     %r4434 <- 120[%r4387]
	store.64    %r4434 -> 112[%r4387]
	br          .L1001

.L997:
	load.64     %r4437 <- 128[%r4387]
	divu.64     %r4438 <- %r4437, $100
	load.32     %r4440 <- 144[%r4387]
	scast.64    %r4441 <- (32) %r4440
	mulu.64     %r4442 <- %r4438, %r4441
	store.64    %r4442 -> 112[%r4387]
	br          .L1001

.L1001:
	ret


luaC_barrierf:
.L1002:
	<entry-point>
	load.64     %r4445 <- 32[%arg1]
	load.8      %r4447 <- 33[%r4445]
	cast.32     %r4448 <- (8) %r4447
	seteq.32    %r4449 <- %r4448, $1
	br          %r4449, .L1003, .L1004

.L1003:
	call        reallymarkobject, %r4445, %arg3
	br          .L1005

.L1004:
	load.8      %r4453 <- 9[%arg2]
	cast.32     %r4454 <- (8) %r4453
	and.32      %r4455 <- %r4454, $248
	load.8      %r4457 <- 32[%r4445]
	cast.32     %r4458 <- (8) %r4457
	and.32      %r4459 <- %r4458, $3
	or.32       %r4462 <- %r4455, %r4459
	scast.8     %r4463 <- (32) %r4462
	store.8     %r4463 -> 9[%arg2]
	br          .L1005

.L1005:
	ret


luaC_barrierback:
.L1006:
	<entry-point>
	load.64     %r4466 <- 32[%arg1]
	ptrcast.64  %r4468 <- (64) %arg2
	load.8      %r4470 <- 9[%r4468]
	cast.32     %r4471 <- (8) %r4470
	and.32      %r4472 <- %r4471, $251
	scast.8     %r4473 <- (32) %r4472
	store.8     %r4473 -> 9[%r4468]
	load.64     %r4475 <- 64[%r4466]
	store.64    %r4475 -> 48[%arg2]
	store.64    %r4468 -> 64[%r4466]
	ret


luaC_link:
.L1008:
	<entry-point>
	load.64     %r4480 <- 32[%arg1]
	load.64     %r4482 <- 40[%r4480]
	store.64    %r4482 -> 0[%arg2]
	store.64    %arg2 -> 40[%r4480]
	load.8      %r4487 <- 32[%r4480]
	cast.32     %r4488 <- (8) %r4487
	and.32      %r4489 <- %r4488, $3
	store.8     %r4489 -> 9[%arg2]
	store.8     %arg3 -> 8[%arg2]
	ret


luaC_linkupval:
.L1010:
	<entry-point>
	load.64     %r4495 <- 32[%arg1]
	ptrcast.64  %r4497 <- (64) %arg2
	load.64     %r4499 <- 40[%r4495]
	store.64    %r4499 -> 0[%r4497]
	store.64    %r4497 -> 40[%r4495]
	load.8      %r4504 <- 9[%r4497]
	cast.32     %r4505 <- (8) %r4504
	and.32      %r4506 <- %r4505, $4
	br          %r4506, .L1012, .L1013

.L1013:
	and.32      %r4510 <- %r4505, $3
	br          %r4510, .L1012, .L1011

.L1011:
	load.8      %r4512 <- 33[%r4495]
	cast.32     %r4513 <- (8) %r4512
	seteq.32    %r4514 <- %r4513, $1
	br          %r4514, .L1014, .L1015

.L1014:
	or.32       %r4518 <- %r4505, $4
	scast.8     %r4519 <- (32) %r4518
	store.8     %r4519 -> 9[%r4497]
	load.64     %r4521 <- 16[%arg2]
	load.32     %r4522 <- 8[%r4521]
	setge.32    %r4523 <- %r4522, $4
	br          %r4523, .L1019, .L1012

.L1019:
	load.64     %r4526 <- 0[%r4521]
	load.8      %r4527 <- 9[%r4526]
	cast.32     %r4528 <- (8) %r4527
	and.32      %r4529 <- %r4528, $3
	br          %r4529, .L1018, .L1012

.L1018:
	cast.32     %r4533 <- (8) %r4519
	and.32      %r4534 <- %r4533, $4
	br          %r4534, .L1016, .L1012

.L1016:
	call        luaC_barrierf, %arg1, %r4497, %r4526
	br          .L1012

.L1015:
	and.32      %r4544 <- %r4505, $248
	load.8      %r4546 <- 32[%r4495]
	cast.32     %r4547 <- (8) %r4546
	and.32      %r4548 <- %r4547, $3
	or.32       %r4551 <- %r4544, %r4548
	scast.8     %r4552 <- (32) %r4551
	store.8     %r4552 -> 9[%r4497]
	br          .L1012

.L1012:
	ret


stack_init:
.L1021:
	<entry-point>
	call.64     %r4555 <- luaM_realloc_, %arg2, $0, $0, $320
	ptrcast.64  %r4556 <- (64) %r4555
	store.64    %r4556 -> 80[%arg1]
	store.64    %r4556 -> 40[%arg1]
	store.32    $8 -> 92[%arg1]
	add.64      %r4569 <- %r4556, $280
	store.64    %r4569 -> 72[%arg1]
	call.64     %r4572 <- luaM_realloc_, %arg2, $0, $0, $720
	ptrcast.64  %r4573 <- (64) %r4572
	store.64    %r4573 -> 64[%arg1]
	store.32    $45 -> 88[%arg1]
	store.64    %r4573 -> 16[%arg1]
	add.64      %r4587 <- %r4573, $624
	store.64    %r4587 -> 56[%arg1]
	load.64     %r4592 <- 40[%arg1]
	store.64    %r4573 -> 8[%r4592]
	load.64     %r4594 <- 16[%arg1]
	add.64      %r4595 <- %r4594, $16
	store.64    %r4595 -> 16[%arg1]
	store.32    $0 -> 8[%r4594]
	load.64     %r4597 <- 16[%arg1]
	load.64     %r4599 <- 40[%arg1]
	store.64    %r4597 -> 0[%r4599]
	store.64    %r4597 -> 24[%arg1]
	load.64     %r4602 <- 16[%arg1]
	add.64      %r4603 <- %r4602, $320
	load.64     %r4605 <- 40[%arg1]
	store.64    %r4603 -> 16[%r4605]
	ret


freestack:
.L1023:
	<entry-point>
	load.64     %r4608 <- 80[%arg2]
	cast.64     %r4609 <- (64) %r4608
	load.32     %r4611 <- 92[%arg2]
	scast.64    %r4612 <- (32) %r4611
	mulu.64     %r4613 <- %r4612, $40
	call.64     %r4614 <- luaM_realloc_, %arg1, %r4609, %r4613, $0
	load.64     %r4617 <- 64[%arg2]
	cast.64     %r4618 <- (64) %r4617
	load.32     %r4620 <- 88[%arg2]
	scast.64    %r4621 <- (32) %r4620
	mulu.64     %r4622 <- %r4621, $16
	call.64     %r4623 <- luaM_realloc_, %arg1, %r4618, %r4622, $0
	ret


f_luaopen:
.L1025:
	<entry-point>
	load.64     %r4625 <- 32[%arg1]
	call        stack_init, %arg1, %arg1
	call.64     %r4632 <- luaH_new, %arg1, $0, $2
	ptrcast.64  %r4633 <- (64) %r4632
	store.64    %r4633 -> 120[%arg1]
	store.32    $5 -> 128[%arg1]
	load.64     %r4637 <- 32[%arg1]
	call.64     %r4640 <- luaH_new, %arg1, $0, $2
	ptrcast.64  %r4641 <- (64) %r4640
	store.64    %r4641 -> 160[%r4637]
	store.32    $5 -> 168[%r4637]
	call        luaS_resize, %arg1, $32
	call        luaT_init, %arg1
	call        luaX_init, %arg1
	symaddr.64  %r4648 <- <anon symbol:0x62d001256ac8>
	call.64     %r4649 <- luaS_newlstr, %arg1, %r4648, $17
	load.8      %r4650 <- 9[%r4649]
	cast.32     %r4651 <- (8) %r4650
	or.32       %r4652 <- %r4651, $32
	scast.8     %r4653 <- (32) %r4652
	store.8     %r4653 -> 9[%r4649]
	load.64     %r4655 <- 120[%r4625]
	mulu.64     %r4656 <- %r4655, $4
	store.64    %r4656 -> 112[%r4625]
	ret


preinit_state:
.L1027:
	<entry-point>
	store.64    %arg2 -> 32[%arg1]
	store.64    $0 -> 64[%arg1]
	store.32    $0 -> 88[%arg1]
	store.64    $0 -> 168[%arg1]
	store.64    $0 -> 112[%arg1]
	store.8     $0 -> 100[%arg1]
	store.32    $0 -> 104[%arg1]
	store.8     $1 -> 101[%arg1]
	store.32    $0 -> 108[%arg1]
	store.64    $0 -> 152[%arg1]
	store.32    $0 -> 92[%arg1]
	store.16    $0 -> 98[%arg1]
	store.16    $0 -> 96[%arg1]
	store.8     $0 -> 10[%arg1]
	store.64    $0 -> 40[%arg1]
	store.64    $0 -> 80[%arg1]
	store.64    $0 -> 48[%arg1]
	store.64    $0 -> 176[%arg1]
	store.32    $0 -> 128[%arg1]
	ret


close_state:
.L1029:
	<entry-point>
	load.64     %r4681 <- 32[%arg1]
	load.64     %r4684 <- 64[%arg1]
	call        luaF_close, %arg1, %r4684
	call        luaC_freeall, %arg1
	load.64     %r4688 <- 32[%arg1]
	load.64     %r4689 <- 0[%r4688]
	cast.64     %r4690 <- (64) %r4689
	load.32     %r4693 <- 12[%r4688]
	scast.64    %r4694 <- (32) %r4693
	mulu.64     %r4695 <- %r4694, $8
	call.64     %r4696 <- luaM_realloc_, %arg1, %r4690, %r4695, $0
	load.64     %r4699 <- 88[%r4681]
	cast.64     %r4700 <- (64) %r4699
	load.64     %r4702 <- 104[%r4681]
	call.64     %r4704 <- luaM_realloc_, %arg1, %r4700, %r4702, $0
	ptrcast.64  %r4705 <- (64) %r4704
	store.64    %r4705 -> 88[%r4681]
	store.64    $0 -> 104[%r4681]
	call        freestack, %arg1, %arg1
	load.64     %r4711 <- 24[%r4681]
	ptrcast.64  %r4713 <- (64) %arg1
	cast.64     %r4715 <- (64) %r4713
	load.64     %r4717 <- 16[%r4681]
	call.64     %r4718 <- %r4717, %r4711, %r4715, $616, $0
	ret


luaE_freethread:
.L1031:
	<entry-point>
	load.64     %r4721 <- 64[%arg2]
	call        luaF_close, %arg2, %r4721
	call        freestack, %arg1, %arg2
	ptrcast.64  %r4726 <- (64) %arg2
	cast.64     %r4728 <- (64) %r4726
	call.64     %r4729 <- luaM_realloc_, %arg1, %r4728, $184, $0
	ret


lua_newstate:
.L1033:
	<entry-point>
	call.64     %r4732 <- %arg1, %arg2, $0, $0, $616
	br          %r4732, .L1035, .L1034

.L1034:
	phisrc.64   %phi853(return) <- $0
	br          .L1036

.L1035:
	ptrcast.64  %r4737 <- (64) %r4732
	ptrcast.64  %r4739 <- (64) %r4737
	ptrcast.64  %r4741 <- (64) %r4739
	add.64      %r4742 <- %r4741, $184
	store.64    $0 -> 0[%r4739]
	store.8     $8 -> 8[%r4739]
	store.8     $33 -> 216[%r4741]
	store.8     $97 -> 9[%r4739]
	call        preinit_state, %r4739, %r4742
	store.64    %arg1 -> 200[%r4741]
	store.64    %arg2 -> 208[%r4741]
	store.64    %r4739 -> 360[%r4741]
	add.64      %r4766 <- %r4742, $184
	store.64    %r4766 -> 392[%r4741]
	store.64    %r4766 -> 400[%r4741]
	store.64    $0 -> 296[%r4741]
	store.32    $0 -> 196[%r4741]
	store.32    $0 -> 192[%r4741]
	store.64    $0 -> 184[%r4741]
	load.64     %r4776 <- 32[%r4739]
	store.32    $0 -> 168[%r4776]
	store.64    $0 -> 272[%r4741]
	store.64    $0 -> 288[%r4741]
	store.64    $0 -> 336[%r4741]
	store.8     $0 -> 217[%r4741]
	store.64    %r4741 -> 224[%r4741]
	store.32    $0 -> 220[%r4741]
	add.64      %r4786 <- %r4742, $40
	store.64    %r4786 -> 232[%r4741]
	store.64    $0 -> 240[%r4741]
	store.64    $0 -> 248[%r4741]
	store.64    $0 -> 256[%r4741]
	store.64    $0 -> 264[%r4741]
	store.64    $616 -> 304[%r4741]
	store.32    $200 -> 328[%r4741]
	store.32    $200 -> 332[%r4741]
	store.64    $0 -> 320[%r4741]
	phisrc.32   %phi861(i) <- $0
	br          .L1040

.L1040:
	phi.32      %r4796(i) <- %phi861(i), %phi862(i)
	setlt.32    %r4797 <- %r4796(i), $9
	br          %r4797, .L1037, .L1039

.L1037:
	add.64      %r4799 <- %r4742, $224
	scast.64    %r4801 <- (32) %r4796(i)
	muls.64     %r4802 <- %r4801, $8
	add.64      %r4803 <- %r4799, %r4802
	store.64    $0 -> 0[%r4803]
	add.32      %r4805 <- %r4796(i), $1
	phisrc.32   %phi862(i) <- %r4805
	br          .L1040

.L1039:
	symaddr.64  %r4807 <- f_luaopen
	call.32     %r4808 <- luaD_rawrunprotected, %r4739, %r4807, $0
	select.64   %r4811 <- %r4808, $0, %r4739
	br          %r4808, .L1041, .L1043

.L1041:
	call        close_state, %r4739
	br          .L1043

.L1043:
	phisrc.64   %phi854(return) <- %r4811
	br          .L1036

.L1036:
	phi.64      %r4735 <- %phi853(return), %phi854(return)
	ret.64      %r4735


callallgcTM:
.L1044:
	<entry-point>
	call        luaC_callGCTM, %arg1
	ret


lua_close:
.L1046:
	<entry-point>
	load.64     %r4815 <- 32[%arg1]
	load.64     %r4816 <- 176[%r4815]
	load.64     %r4819 <- 64[%r4816]
	call        luaF_close, %r4816, %r4819
	call.64     %r4821 <- luaC_separateudata, %r4816, $1
	store.64    $0 -> 176[%r4816]
	br          .L1047

.L1047:
	load.64     %r4824 <- 80[%r4816]
	store.64    %r4824 -> 40[%r4816]
	load.64     %r4828 <- 0[%r4824]
	store.64    %r4828 -> 16[%r4816]
	store.64    %r4828 -> 24[%r4816]
	store.16    $0 -> 98[%r4816]
	store.16    $0 -> 96[%r4816]
	symaddr.64  %r4834 <- callallgcTM
	call.32     %r4835 <- luaD_rawrunprotected, %r4816, %r4834, $0
	br          %r4835, .L1047, .L1049

.L1049:
	call        close_state, %r4816
	ret


currentpc:
.L1051:
	<entry-point>
	load.64     %r4839 <- 8[%arg2]
	load.32     %r4840 <- 8[%r4839]
	seteq.32    %r4841 <- %r4840, $6
	br          %r4841, .L1054, .L1052

.L1054:
	load.64     %r4844 <- 0[%r4839]
	load.8      %r4845 <- 10[%r4844]
	br          %r4845, .L1052, .L1053

.L1052:
	phisrc.32   %phi866(return) <- $0xffffffff
	br          .L1055

.L1053:
	load.64     %r4849 <- 40[%arg1]
	seteq.32    %r4850 <- %arg2, %r4849
	br          %r4850, .L1056, .L1057

.L1056:
	load.64     %r4852 <- 48[%arg1]
	store.64    %r4852 -> 24[%arg2]
	br          .L1057

.L1057:
	load.64     %r4855 <- 24[%arg2]
	load.64     %r4858 <- 0[%r4839]
	load.64     %r4859 <- 32[%r4858]
	load.64     %r4860 <- 24[%r4859]
	sub.64      %r4861 <- %r4855, %r4860
	divs.64     %r4862 <- %r4861, $4
	scast.32    %r4863 <- (64) %r4862
	add.32      %r4864 <- %r4863, $-1
	phisrc.32   %phi867(return) <- %r4864
	br          .L1055

.L1055:
	phi.32      %r4846 <- %phi866(return), %phi867(return)
	ret.32      %r4846


currentline:
.L1058:
	<entry-point>
	call.32     %r4867 <- currentpc, %arg1, %arg2
	setlt.32    %r4869 <- %r4867, $0
	br          %r4869, .L1059, .L1060

.L1059:
	phisrc.32   %phi870(return) <- $0xffffffff
	br          .L1061

.L1060:
	load.64     %r4872 <- 8[%arg2]
	load.64     %r4873 <- 0[%r4872]
	load.64     %r4874 <- 32[%r4873]
	load.64     %r4875 <- 40[%r4874]
	br          %r4875, .L1063, .L1064

.L1063:
	load.64     %r4878 <- 0[%r4872]
	load.64     %r4879 <- 32[%r4878]
	load.64     %r4880 <- 40[%r4879]
	scast.64    %r4882 <- (32) %r4867
	muls.64     %r4883 <- %r4882, $4
	add.64      %r4884 <- %r4880, %r4883
	load.32     %r4885 <- 0[%r4884]
	phisrc.32   %phi871 <- %r4885
	br          .L1065

.L1064:
	phisrc.32   %phi872 <- $0
	br          .L1065

.L1065:
	phi.32      %r4886 <- %phi871, %phi872
	phisrc.32   %phi873(return) <- %r4886
	br          .L1061

.L1061:
	phi.32      %r4870 <- %phi870(return), %phi873(return)
	ret.32      %r4870


lua_getstack:
.L1066:
	<entry-point>
	load.64     %r4888(ci) <- 40[%arg1]
	phisrc.32   %phi880(level) <- %arg2
	phisrc.64   %phi884(ci) <- %r4888(ci)
	phisrc.64   %phi891(ci) <- %r4888(ci)
	br          .L1070

.L1070:
	phi.32      %r4889(level) <- %phi880(level), %phi881(level), %phi882(level)
	setgt.32    %r4890 <- %r4889(level), $0
	br          %r4890, .L1071, .L1069

.L1071:
	phi.64      %r4891(ci) <- %phi891(ci), %phi892(ci)
	load.64     %r4893 <- 80[%arg1]
	seta.32     %r4894 <- %r4891(ci), %r4893
	phisrc.64   %phi886(ci) <- %r4891(ci)
	br          %r4894, .L1067, .L1069

.L1067:
	add.32      %r4896(level) <- %r4889(level), $-1
	load.64     %r4898 <- 8[%r4891(ci)]
	load.64     %r4899 <- 0[%r4898]
	load.8      %r4900 <- 10[%r4899]
	phisrc.32   %phi881(level) <- %r4896(level)
	br          %r4900, .L1068, .L1072

.L1072:
	load.32     %r4902 <- 36[%r4891(ci)]
	sub.32      %r4905 <- %r4896(level), %r4902
	phisrc.32   %phi882(level) <- %r4905
	br          .L1068

.L1068:
	add.64      %r4908 <- %r4891(ci), $-40
	phisrc.64   %phi885(ci) <- %r4908
	phisrc.64   %phi892(ci) <- %r4908
	br          .L1070

.L1069:
	br          %r4889(level), .L1075, .L1076

.L1076:
	phi.64      %r4911(ci) <- %phi884(ci), %phi885(ci), %phi886(ci)
	load.64     %r4913 <- 80[%arg1]
	seta.32     %r4914 <- %r4911(ci), %r4913
	br          %r4914, .L1074, .L1075

.L1074:
	sub.64      %r4918 <- %r4911(ci), %r4913
	divs.64     %r4919 <- %r4918, $40
	scast.32    %r4920 <- (64) %r4919
	store.32    %r4920 -> 116[%arg3]
	phisrc.32   %phi893(status) <- $1
	br          .L1077

.L1075:
	setlt.32    %r4923 <- %r4889(level), $0
	br          %r4923, .L1078, .L1079

.L1078:
	store.32    $0 -> 116[%arg3]
	phisrc.32   %phi894(status) <- $1
	br          .L1077

.L1079:
	phisrc.32   %phi895(status) <- $0
	br          .L1077

.L1077:
	phi.32      %r4925 <- %phi893(status), %phi894(status), %phi895(status)
	ret.32      %r4925


getluaproto:
.L1082:
	<entry-point>
	load.64     %r4928 <- 8[%arg1]
	load.32     %r4929 <- 8[%r4928]
	seteq.32    %r4930 <- %r4929, $6
	br          %r4930, .L1087, .L1085

.L1087:
	load.64     %r4933 <- 0[%r4928]
	load.8      %r4934 <- 10[%r4933]
	br          %r4934, .L1085, .L1084

.L1084:
	load.64     %r4938 <- 32[%r4933]
	phisrc.64   %phi897 <- %r4938
	br          .L1086

.L1085:
	phisrc.64   %phi898 <- $0
	br          .L1086

.L1086:
	phi.64      %r4939 <- %phi897, %phi898
	ret.64      %r4939


funcinfo:
.L1088:
	<entry-point>
	load.8      %r4942 <- 10[%arg2]
	br          %r4942, .L1089, .L1090

.L1089:
	symaddr.64  %r4943 <- <anon symbol:0x62d001298418>
	store.64    %r4943 -> 32[%arg1]
	store.32    $0xffffffff -> 48[%arg1]
	store.32    $0xffffffff -> 52[%arg1]
	symaddr.64  %r4947 <- <anon symbol:0x62d001298d28>
	store.64    %r4947 -> 24[%arg1]
	phisrc.64   %phi903 <- %r4943
	br          .L1091

.L1090:
	load.64     %r4950 <- 32[%arg2]
	load.64     %r4951 <- 64[%r4950]
	add.64      %r4952 <- %r4951, $24
	ptrcast.64  %r4953 <- (64) %r4952
	store.64    %r4953 -> 32[%arg1]
	load.64     %r4956 <- 32[%arg2]
	load.32     %r4957 <- 96[%r4956]
	store.32    %r4957 -> 48[%arg1]
	load.64     %r4960 <- 32[%arg2]
	load.32     %r4961 <- 100[%r4960]
	store.32    %r4961 -> 52[%arg1]
	symaddr.64  %r4963 <- <anon symbol:0x62d00129a5a0>
	symaddr.64  %r4964 <- <anon symbol:0x62d00129a200>
	ptrcast.64  %r4965 <- (64) %r4964
	seteq.32    %r4968 <- %r4957, $0
	select.64   %r4969 <- %r4968, %r4963, %r4965
	store.64    %r4969 -> 24[%arg1]
	phisrc.64   %phi904 <- %r4953
	br          .L1091

.L1091:
	add.64      %r4972 <- %arg1, $56
	phi.64      %r4974 <- %phi903, %phi904
	call        luaO_chunkid, %r4972, %r4974, $60
	ret


info_tailcall:
.L1093:
	<entry-point>
	symaddr.64  %r4975 <- <anon symbol:0x62d00129b250>
	store.64    %r4975 -> 16[%arg1]
	store.64    %r4975 -> 8[%arg1]
	symaddr.64  %r4978 <- <anon symbol:0x62d00129b7c0>
	store.64    %r4978 -> 24[%arg1]
	store.32    $0xffffffff -> 40[%arg1]
	store.32    $0xffffffff -> 48[%arg1]
	store.32    $0xffffffff -> 52[%arg1]
	symaddr.64  %r4983 <- <anon symbol:0x62d00129c2a0>
	store.64    %r4983 -> 32[%arg1]
	add.64      %r4986 <- %arg1, $56
	call        luaO_chunkid, %r4986, %r4983, $60
	store.32    $0 -> 44[%arg1]
	ret


collectvalidlines:
.L1095:
	<entry-point>
	br          %arg2, .L1098, .L1096

.L1098:
	load.8      %r4993 <- 10[%arg2]
	br          %r4993, .L1096, .L1097

.L1096:
	load.64     %r4995 <- 16[%arg1]
	store.32    $0 -> 8[%r4995]
	br          .L1099

.L1097:
	call.64     %r4997 <- luaH_new, %arg1, $0, $0
	load.64     %r4999 <- 32[%arg2]
	load.64     %r5000 <- 40[%r4999]
	phisrc.32   %phi907(i) <- $0
	phisrc.64   %phi909 <- %r4999
	phisrc.64   %phi910 <- %r4999
	br          .L1103

.L1103:
	phi.32      %r5001(i) <- %phi907(i), %phi908(i)
	load.64     %r5003 <- 32[%arg2]
	load.32     %r5004 <- 84[%r5003]
	setlt.32    %r5005 <- %r5001(i), %r5004
	br          %r5005, .L1100, .L1102

.L1100:
	scast.64    %r5010 <- (32) %r5001(i)
	muls.64     %r5011 <- %r5010, $4
	add.64      %r5012 <- %r5000, %r5011
	load.32     %r5013 <- 0[%r5012]
	call.64     %r5014 <- luaH_setnum, %arg1, %r4997, %r5013
	store.32    $1 -> 0[%r5014]
	store.32    $1 -> 8[%r5014]
	add.32      %r5018 <- %r5001(i), $1
	phisrc.32   %phi908(i) <- %r5018
	br          .L1103

.L1102:
	load.64     %r5020 <- 16[%arg1]
	ptrcast.64  %r5022 <- (64) %r4997
	store.64    %r5022 -> 0[%r5020]
	store.32    $5 -> 8[%r5020]
	br          .L1099

.L1099:
	load.64     %r5026 <- 56[%arg1]
	ptrcast.64  %r5027 <- (64) %r5026
	load.64     %r5029 <- 16[%arg1]
	ptrcast.64  %r5030 <- (64) %r5029
	sub.64      %r5031 <- %r5027, %r5030
	setle.32    %r5032 <- %r5031, $16
	br          %r5032, .L1104, .L1106

.L1104:
	call        luaD_growstack, %arg1, $1
	br          .L1106

.L1106:
	load.64     %r5035 <- 16[%arg1]
	add.64      %r5036 <- %r5035, $16
	store.64    %r5036 -> 16[%arg1]
	ret


auxgetinfo:
.L1108:
	<entry-point>
	phisrc.64   %phi917(what) <- %arg2
	phisrc.32   %phi919(status) <- $1
	br          %arg4, .L1115, .L1109

.L1109:
	call        info_tailcall, %arg3
	phisrc.32   %phi911(return) <- $1
	br          .L1111

.L1115:
	phi.64      %r5042(what) <- %phi917(what), %phi918(what)
	load.8      %r5043 <- 0[%r5042(what)]
	br          %r5043, .L1112, .L1114

.L1112:
	switch      %r5043, 76 -> .L1113, 83 -> .L1117, 102 -> .L1113, 108 -> .L1118, 110 -> .L1120, 117 -> .L1119, default -> .L1123

.L1117:
	call        funcinfo, %arg3, %arg4
	br          .L1113

.L1118:
	br          %arg5, .L1124, .L1125

.L1124:
	call.32     %r5051 <- currentline, %arg1, %arg5
	phisrc.32   %phi912 <- %r5051
	br          .L1126

.L1125:
	phisrc.32   %phi913 <- $0xffffffff
	br          .L1126

.L1126:
	phi.32      %r5052 <- %phi912, %phi913
	store.32    %r5052 -> 40[%arg3]
	br          .L1113

.L1119:
	load.8      %r5055 <- 11[%arg4]
	cast.32     %r5056 <- (8) %r5055
	store.32    %r5056 -> 44[%arg3]
	br          .L1113

.L1120:
	ptrcast.64  %r5060 <- (64) $0
	store.64    %r5060 -> 16[%arg3]
	br          %r5060, .L1113, .L1127

.L1127:
	symaddr.64  %r5065 <- <anon symbol:0x62d00129ee20>
	store.64    %r5065 -> 16[%arg3]
	store.64    $0 -> 8[%arg3]
	br          .L1113

.L1123:
	phisrc.32   %phi920(status) <- $0
	br          .L1113

.L1113:
	add.64      %r5069 <- %r5042(what), $1
	phisrc.64   %phi918(what) <- %r5069
	br          .L1115

.L1114:
	phi.32      %r5070 <- %phi919(status), %phi920(status)
	phisrc.32   %phi914(return) <- %r5070
	br          .L1111

.L1111:
	phi.32      %r5041 <- %phi911(return), %phi914(return)
	ret.32      %r5041


lua_getinfo:
.L1129:
	<entry-point>
	load.8      %r5072 <- 0[%arg2]
	scast.32    %r5073 <- (8) %r5072
	seteq.32    %r5074 <- %r5073, $62
	phisrc.64   %phi926(what) <- %arg2
	phisrc.64   %phi934(f) <- $0
	phisrc.64   %phi936(ci) <- $0
	br          %r5074, .L1130, .L1131

.L1130:
	load.64     %r5076 <- 16[%arg1]
	add.64      %r5080(what) <- %arg2, $1
	load.64     %r5082 <- -16[%r5076]
	add.64      %r5086 <- %r5076, $-16
	store.64    %r5086 -> 16[%arg1]
	phisrc.64   %phi925(what) <- %r5080(what)
	phisrc.64   %phi933(f) <- %r5082
	br          .L1132

.L1131:
	load.32     %r5088 <- 116[%arg3]
	br          %r5088, .L1133, .L1132

.L1133:
	load.64     %r5091 <- 80[%arg1]
	scast.64    %r5094 <- (32) %r5088
	muls.64     %r5095 <- %r5094, $40
	add.64      %r5096 <- %r5091, %r5095
	load.64     %r5098 <- 8[%r5096]
	load.64     %r5099 <- 0[%r5098]
	phisrc.64   %phi935(f) <- %r5099
	phisrc.64   %phi937(ci) <- %r5096
	br          .L1132

.L1132:
	phi.64      %r5102 <- %phi925(what), %phi926(what)
	phi.64      %r5104(f) <- %phi933(f), %phi934(f), %phi935(f)
	phi.64      %r5105 <- %phi936(ci), %phi937(ci)
	call.32     %r5106 <- auxgetinfo, %arg1, %r5102, %arg3, %r5104(f), %r5105
	call.64     %r5108 <- strchr, %r5102, $102
	br          %r5108, .L1135, .L1136

.L1135:
	br          %r5104(f), .L1138, .L1137

.L1137:
	load.64     %r5112 <- 16[%arg1]
	store.32    $0 -> 8[%r5112]
	br          .L1139

.L1138:
	load.64     %r5114 <- 16[%arg1]
	ptrcast.64  %r5116 <- (64) %r5104(f)
	store.64    %r5116 -> 0[%r5114]
	store.32    $6 -> 8[%r5114]
	br          .L1139

.L1139:
	load.64     %r5120 <- 56[%arg1]
	ptrcast.64  %r5121 <- (64) %r5120
	load.64     %r5123 <- 16[%arg1]
	ptrcast.64  %r5124 <- (64) %r5123
	sub.64      %r5125 <- %r5121, %r5124
	setle.32    %r5126 <- %r5125, $16
	br          %r5126, .L1140, .L1142

.L1140:
	call        luaD_growstack, %arg1, $1
	br          .L1142

.L1142:
	load.64     %r5129 <- 16[%arg1]
	add.64      %r5130 <- %r5129, $16
	store.64    %r5130 -> 16[%arg1]
	br          .L1136

.L1136:
	call.64     %r5132 <- strchr, %r5102, $76
	br          %r5132, .L1143, .L1145

.L1143:
	call        collectvalidlines, %arg1, %r5104(f)
	br          .L1145

.L1145:
	ret.32      %r5106


isinstack:
.L1146:
	<entry-point>
	load.64     %r5138(p) <- 0[%arg1]
	phisrc.64   %phi943(p) <- %r5138(p)
	br          .L1150

.L1150:
	phi.64      %r5139(p) <- %phi943(p), %phi944(p)
	load.64     %r5141 <- 16[%arg1]
	setb.32     %r5142 <- %r5139(p), %r5141
	br          %r5142, .L1147, .L1149

.L1147:
	seteq.32    %r5145 <- %arg2, %r5139(p)
	br          %r5145, .L1151, .L1148

.L1151:
	phisrc.32   %phi939(return) <- $1
	br          .L1153

.L1148:
	add.64      %r5148 <- %r5139(p), $16
	phisrc.64   %phi944(p) <- %r5148
	br          .L1150

.L1149:
	phisrc.32   %phi940(return) <- $0
	br          .L1153

.L1153:
	phi.32      %r5146 <- %phi939(return), %phi940(return)
	ret.32      %r5146


luaG_typeerror:
.L1154:
	<entry-point>
	symaddr.64  %r5149 <- luaT_typenames
	load.32     %r5151 <- 8[%arg2]
	scast.64    %r5152 <- (32) %r5151
	muls.64     %r5153 <- %r5152, $8
	add.64      %r5154 <- %r5149, %r5153
	load.64     %r5155 <- 0[%r5154]
	load.64     %r5157 <- 40[%arg1]
	call.32     %r5159 <- isinstack, %r5157, %arg2
	ptrcast.64  %r5161 <- (64) $0
	br          %r5161, .L1155, .L1156

.L1155:
	symaddr.64  %r5164 <- <anon symbol:0x62d0010cedc8>
	call        luaG_runerror, %arg1, %r5164, %arg3, %r5161, $0, %r5155
	br          .L1157

.L1156:
	symaddr.64  %r5169 <- <anon symbol:0x62d0010cf168>
	call        luaG_runerror, %arg1, %r5169, %arg3, %r5155
	br          .L1157

.L1157:
	ret


luaG_concaterror:
.L1158:
	<entry-point>
	load.32     %r5173 <- 8[%arg2]
	seteq.32    %r5174 <- %r5173, $4
	br          %r5174, .L1159, .L1161

.L1161:
	seteq.32    %r5177 <- %r5173, $3
	phisrc.64   %phi945(p1) <- %arg2
	br          %r5177, .L1159, .L1160

.L1159:
	phisrc.64   %phi946(p1) <- %arg3
	br          .L1160

.L1160:
	phi.64      %r5180 <- %phi945(p1), %phi946(p1)
	symaddr.64  %r5181 <- <anon symbol:0x62d0012ad720>
	call        luaG_typeerror, %arg1, %r5180, %r5181
	ret


luaG_aritherror:
.L1163:
	<entry-point>
	symaddr.64  %r5183 <- temp
	call.64     %r5184 <- luaV_tonumber, %arg2, %r5183
	select.64   %r5188 <- %r5184, %arg3, %arg2
	symaddr.64  %r5189 <- <anon symbol:0x62d0012adc90>
	call        luaG_typeerror, %arg1, %r5188, %r5189
	ret


luaG_ordererror:
.L1167:
	<entry-point>
	symaddr.64  %r5190 <- luaT_typenames
	load.32     %r5192 <- 8[%arg2]
	scast.64    %r5193 <- (32) %r5192
	muls.64     %r5194 <- %r5193, $8
	add.64      %r5195 <- %r5190, %r5194
	load.64     %r5196 <- 0[%r5195]
	load.32     %r5199 <- 8[%arg3]
	scast.64    %r5200 <- (32) %r5199
	muls.64     %r5201 <- %r5200, $8
	add.64      %r5202 <- %r5190, %r5201
	load.64     %r5203 <- 0[%r5202]
	load.8      %r5205 <- 2[%r5196]
	scast.32    %r5206 <- (8) %r5205
	load.8      %r5208 <- 2[%r5203]
	scast.32    %r5209 <- (8) %r5208
	seteq.32    %r5210 <- %r5206, %r5209
	br          %r5210, .L1168, .L1169

.L1168:
	symaddr.64  %r5212 <- <anon symbol:0x62d0012aeb10>
	call        luaG_runerror, %arg1, %r5212, %r5196
	br          .L1171

.L1169:
	symaddr.64  %r5215 <- <anon symbol:0x62d0012aeeb0>
	call        luaG_runerror, %arg1, %r5215, %r5196, %r5203
	br          .L1171

.L1171:
	ret.32      $0


addinfo:
.L1172:
	<entry-point>
	load.64     %r5220 <- 40[%arg1]
	load.64     %r5222 <- 8[%r5220]
	load.32     %r5223 <- 8[%r5222]
	seteq.32    %r5224 <- %r5223, $6
	br          %r5224, .L1175, .L1174

.L1175:
	load.64     %r5227 <- 0[%r5222]
	load.8      %r5228 <- 10[%r5227]
	br          %r5228, .L1174, .L1173

.L1173:
	call.32     %r5231 <- currentline, %arg1, %r5220
	symaddr.64  %r5232 <- buff
	call.64     %r5234 <- getluaproto, %r5220
	load.64     %r5235 <- 64[%r5234]
	add.64      %r5236 <- %r5235, $24
	ptrcast.64  %r5237 <- (64) %r5236
	call        luaO_chunkid, %r5232, %r5237, $60
	symaddr.64  %r5239 <- <anon symbol:0x62d0012b01b8>
	call.64     %r5243 <- luaO_pushfstring, %arg1, %r5239, %r5232, %r5231, %arg2
	br          .L1174

.L1174:
	ret


luaG_errormsg:
.L1176:
	<entry-point>
	load.64     %r5245 <- 176[%arg1]
	br          %r5245, .L1177, .L1178

.L1177:
	load.64     %r5248 <- 64[%arg1]
	ptrcast.64  %r5249 <- (64) %r5248
	add.64      %r5252 <- %r5249, %r5245
	ptrcast.64  %r5253 <- (64) %r5252
	load.32     %r5255 <- 8[%r5253]
	seteq.32    %r5256 <- %r5255, $6
	br          %r5256, .L1180, .L1179

.L1179:
	call        luaD_throw, %arg1, $5
	br          .L1180

.L1180:
	load.64     %r5259 <- 16[%arg1]
	load.64     %r5264 <- -16[%r5259]
	store.64    %r5264 -> 0[%r5259]
	load.32     %r5267 <- -8[%r5259]
	store.32    %r5267 -> 8[%r5259]
	load.64     %r5272 <- 16[%arg1]
	load.64     %r5275 <- 0[%r5253]
	store.64    %r5275 -> -16[%r5272]
	load.32     %r5278 <- 8[%r5253]
	store.32    %r5278 -> -8[%r5272]
	load.64     %r5282 <- 56[%arg1]
	ptrcast.64  %r5283 <- (64) %r5282
	load.64     %r5285 <- 16[%arg1]
	ptrcast.64  %r5286 <- (64) %r5285
	sub.64      %r5287 <- %r5283, %r5286
	setle.32    %r5288 <- %r5287, $16
	br          %r5288, .L1181, .L1183

.L1181:
	call        luaD_growstack, %arg1, $1
	br          .L1183

.L1183:
	load.64     %r5291 <- 16[%arg1]
	add.64      %r5292 <- %r5291, $16
	store.64    %r5292 -> 16[%arg1]
	add.64      %r5296 <- %r5292, $-32
	call        luaD_call, %arg1, %r5296, $1
	br          .L1178

.L1178:
	call        luaD_throw, %arg1, $2
	ret


luaG_runerror:
.L1185:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	symaddr.64  %r5298 <- fmt
	cast.64     %r5299 <- (64) %r5298
	call.64     %r5304 <- luaO_pushvfstring, %arg1, %arg2, %r5299
	call        addinfo, %arg1, %r5304
	call        luaG_errormsg, %arg1
	ret


luaZ_fill:
.L1187:
	<entry-point>
	load.64     %r5307 <- 32[%arg1]
	load.64     %r5310 <- 24[%arg1]
	symaddr.64  %r5311 <- size
	load.64     %r5313 <- 16[%arg1]
	call.64     %r5314 <- %r5313, %r5307, %r5310, %r5311
	seteq.32    %r5316 <- %r5314, $0
	load.64     %r5317(size) <- 0[size]
	seteq.32    %r5318 <- %r5317(size), $0
	or-bool.32  %r5319 <- %r5316, %r5318
	br          %r5319, .L1188, .L1189

.L1188:
	phisrc.32   %phi954(return) <- $0xffffffff
	br          .L1190

.L1189:
	add.64      %r5322 <- %r5317(size), $-1
	store.64    %r5322 -> 0[%arg1]
	add.64      %r5328 <- %r5314, $1
	store.64    %r5328 -> 8[%arg1]
	load.8      %r5329 <- 0[%r5314]
	cast.32     %r5331 <- (8) %r5329
	phisrc.32   %phi955(return) <- %r5331
	br          .L1190

.L1190:
	phi.32      %r5320 <- %phi954(return), %phi955(return)
	ret.32      %r5320


luaZ_init:
.L1191:
	<entry-point>
	store.64    %arg1 -> 32[%arg2]
	store.64    %arg3 -> 16[%arg2]
	store.64    %arg4 -> 24[%arg2]
	store.64    $0 -> 0[%arg2]
	store.64    $0 -> 8[%arg2]
	ret


luaZ_openspace:
.L1193:
	<entry-point>
	load.64     %r5342 <- 16[%arg2]
	seta.32     %r5343 <- %arg3, %r5342
	br          %r5343, .L1194, .L1195

.L1194:
	setb.32     %r5345 <- %arg3, $32
	select.64   %r5346(n) <- %r5345, $32, %arg3
	add.64      %r5347 <- %r5346(n), $1
	setbe.32    %r5349 <- %r5347, $-3
	br          %r5349, .L1198, .L1199

.L1198:
	load.64     %r5352 <- 0[%arg2]
	cast.64     %r5353 <- (64) %r5352
	call.64     %r5359 <- luaM_realloc_, %arg1, %r5353, %r5342, %r5346(n)
	phisrc.64   %phi957 <- %r5359
	br          .L1200

.L1199:
	call.64     %r5361 <- luaM_toobig, %arg1
	cast.64     %r5362 <- (64) %r5361
	phisrc.64   %phi958 <- %r5362
	br          .L1200

.L1200:
	phi.64      %r5363 <- %phi957, %phi958
	ptrcast.64  %r5364 <- (64) %r5363
	store.64    %r5364 -> 0[%arg2]
	store.64    %r5346(n) -> 16[%arg2]
	br          .L1195

.L1195:
	load.64     %r5369 <- 0[%arg2]
	ret.64      %r5369


save:
.L1202:
	<entry-point>
	load.64     %r5372 <- 72[%arg1]
	load.64     %r5374 <- 8[%r5372]
	add.64      %r5375 <- %r5374, $1
	load.64     %r5377 <- 16[%r5372]
	seta.32     %r5378 <- %r5375, %r5377
	phisrc.64   %phi969 <- %r5374
	phisrc.64   %phi973 <- %r5374
	phisrc.64   %phi974 <- %r5377
	br          %r5378, .L1203, .L1204

.L1203:
	setae.32    %r5381 <- %r5377, $0x7ffffffffffffffe
	phisrc.64   %phi971 <- %r5377
	br          %r5381, .L1205, .L1206

.L1205:
	symaddr.64  %r5383 <- <anon symbol:0x62d0012b32a8>
	call        luaX_lexerror, %arg1, %r5383, $0
	br          .L1206

.L1206:
	load.64     %r5385 <- 16[%r5372]
	mulu.64     %r5386 <- %r5385, $2
	add.64      %r5388 <- %r5386, $1
	setbe.32    %r5390 <- %r5388, $-3
	br          %r5390, .L1207, .L1208

.L1207:
	load.64     %r5392 <- 56[%arg1]
	load.64     %r5394 <- 0[%r5372]
	cast.64     %r5395 <- (64) %r5394
	call.64     %r5401 <- luaM_realloc_, %r5392, %r5395, %r5385, %r5386
	phisrc.64   %phi967 <- %r5401
	br          .L1209

.L1208:
	load.64     %r5403 <- 56[%arg1]
	call.64     %r5404 <- luaM_toobig, %r5403
	cast.64     %r5405 <- (64) %r5404
	phisrc.64   %phi968 <- %r5405
	br          .L1209

.L1209:
	phi.64      %r5406 <- %phi967, %phi968
	ptrcast.64  %r5407 <- (64) %r5406
	store.64    %r5407 -> 0[%r5372]
	store.64    %r5386 -> 16[%r5372]
	br          .L1204

.L1204:
	scast.8     %r5412 <- (32) %arg2
	load.64     %r5414 <- 0[%r5372]
	load.64     %r5416 <- 8[%r5372]
	add.64      %r5417 <- %r5416, $1
	store.64    %r5417 -> 8[%r5372]
	add.64      %r5418 <- %r5414, %r5416
	store.8     %r5412 -> 0[%r5418]
	ret


luaX_init:
.L1211:
	<entry-point>
	phisrc.32   %phi977(i) <- $0
	br          .L1215

.L1215:
	phi.32      %r5419(i) <- %phi977(i), %phi978(i)
	setlt.32    %r5420 <- %r5419(i), $21
	br          %r5420, .L1212, .L1214

.L1212:
	symaddr.64  %r5422 <- luaX_tokens
	scast.64    %r5424 <- (32) %r5419(i)
	muls.64     %r5425 <- %r5424, $8
	add.64      %r5426 <- %r5422, %r5425
	load.64     %r5427 <- 0[%r5426]
	call.64     %r5434 <- strlen, %r5427
	call.64     %r5435 <- luaS_newlstr, %arg1, %r5427, %r5434
	load.8      %r5437 <- 9[%r5435]
	cast.32     %r5438 <- (8) %r5437
	or.32       %r5439 <- %r5438, $32
	scast.8     %r5440 <- (32) %r5439
	store.8     %r5440 -> 9[%r5435]
	add.32      %r5442 <- %r5419(i), $1
	scast.8     %r5443 <- (32) %r5442
	store.8     %r5443 -> 10[%r5435]
	phisrc.32   %phi978(i) <- %r5442
	br          .L1215

.L1214:
	ret


luaX_token2str:
.L1216:
	<entry-point>
	setlt.32    %r5448 <- %arg2, $257
	br          %r5448, .L1217, .L1218

.L1217:
	call.64     %r5449 <- __ctype_b_loc
	load.64     %r5450 <- 0[%r5449]
	scast.64    %r5453 <- (32) %arg2
	muls.64     %r5454 <- %r5453, $2
	add.64      %r5455 <- %r5450, %r5454
	load.16     %r5456 <- 0[%r5455]
	cast.32     %r5457 <- (16) %r5456
	and.32      %r5458 <- %r5457, $2
	br          %r5458, .L1220, .L1221

.L1220:
	load.64     %r5460 <- 56[%arg1]
	symaddr.64  %r5461 <- <anon symbol:0x62d0012a2d28>
	call.64     %r5463 <- luaO_pushfstring, %r5460, %r5461, %arg2
	phisrc.64   %phi979 <- %r5463
	br          .L1222

.L1221:
	load.64     %r5465 <- 56[%arg1]
	symaddr.64  %r5466 <- <anon symbol:0x62d0012a27b8>
	call.64     %r5468 <- luaO_pushfstring, %r5465, %r5466, %arg2
	phisrc.64   %phi980 <- %r5468
	br          .L1222

.L1222:
	phi.64      %r5469 <- %phi979, %phi980
	phisrc.64   %phi981(return) <- %r5469
	br          .L1219

.L1218:
	symaddr.64  %r5471 <- luaX_tokens
	add.32      %r5473 <- %arg2, $-257
	scast.64    %r5474 <- (32) %r5473
	muls.64     %r5475 <- %r5474, $8
	add.64      %r5476 <- %r5471, %r5475
	load.64     %r5477 <- 0[%r5476]
	phisrc.64   %phi982(return) <- %r5477
	br          .L1219

.L1219:
	phi.64      %r5470 <- %phi981(return), %phi982(return)
	ret.64      %r5470


txtToken:
.L1224:
	<entry-point>
	switch      %arg2, 284 -> .L1228, 285 -> .L1228, 286 -> .L1228, default -> .L1229

.L1228:
	call        save, %arg1, $0
	load.64     %r5481 <- 72[%arg1]
	load.64     %r5482 <- 0[%r5481]
	phisrc.64   %phi983(return) <- %r5482
	br          .L1230

.L1229:
	call.64     %r5486 <- luaX_token2str, %arg1, %arg2
	phisrc.64   %phi984(return) <- %r5486
	br          .L1230

.L1230:
	phi.64      %r5483 <- %phi983(return), %phi984(return)
	ret.64      %r5483


luaX_lexerror:
.L1231:
	<entry-point>
	symaddr.64  %r5487 <- buff
	load.64     %r5489 <- 80[%arg1]
	add.64      %r5490 <- %r5489, $24
	ptrcast.64  %r5491 <- (64) %r5490
	call        luaO_chunkid, %r5487, %r5491, $80
	load.64     %r5493 <- 56[%arg1]
	symaddr.64  %r5494 <- <anon symbol:0x62d001264210>
	load.32     %r5497 <- 4[%arg1]
	call.64     %r5499(msg) <- luaO_pushfstring, %r5493, %r5494, %r5487, %r5497, %arg2
	br          %arg3, .L1232, .L1233

.L1232:
	load.64     %r5502 <- 56[%arg1]
	symaddr.64  %r5503 <- <anon symbol:0x62d001252b58>
	call.64     %r5507 <- txtToken, %arg1, %arg3
	call.64     %r5508 <- luaO_pushfstring, %r5502, %r5503, %r5499(msg), %r5507
	br          .L1233

.L1233:
	load.64     %r5510 <- 56[%arg1]
	call        luaD_throw, %r5510, $3
	ret


luaX_syntaxerror:
.L1235:
	<entry-point>
	load.32     %r5514 <- 16[%arg1]
	call        luaX_lexerror, %arg1, %arg2, %r5514
	ret


luaX_newstring:
.L1237:
	<entry-point>
	load.64     %r5516 <- 56[%arg1]
	call.64     %r5520 <- luaS_newlstr, %r5516, %arg2, %arg3
	load.64     %r5523 <- 48[%arg1]
	load.64     %r5524 <- 8[%r5523]
	call.64     %r5526 <- luaH_setstr, %r5516, %r5524, %r5520
	load.32     %r5528 <- 8[%r5526]
	br          %r5528, .L1242, .L1238

.L1238:
	store.32    $1 -> 0[%r5526]
	store.32    $1 -> 8[%r5526]
	load.64     %r5534 <- 32[%r5516]
	load.64     %r5535 <- 120[%r5534]
	load.64     %r5538 <- 112[%r5534]
	setae.32    %r5539 <- %r5535, %r5538
	br          %r5539, .L1240, .L1242

.L1240:
	call        luaC_step, %r5516
	br          .L1242

.L1242:
	ret.64      %r5520


inclinenumber:
.L1243:
	<entry-point>
	load.32     %r5544 <- 0[%arg1]
	load.64     %r5546 <- 64[%arg1]
	load.64     %r5547 <- 0[%r5546]
	add.64      %r5548 <- %r5547, $-1
	store.64    %r5548 -> 0[%r5546]
	seta.32     %r5549 <- %r5547, $0
	br          %r5549, .L1244, .L1245

.L1244:
	load.64     %r5551 <- 64[%arg1]
	load.64     %r5552 <- 8[%r5551]
	add.64      %r5553 <- %r5552, $1
	store.64    %r5553 -> 8[%r5551]
	load.8      %r5554 <- 0[%r5552]
	cast.32     %r5556 <- (8) %r5554
	phisrc.32   %phi987 <- %r5556
	br          .L1246

.L1245:
	load.64     %r5558 <- 64[%arg1]
	call.32     %r5559 <- luaZ_fill, %r5558
	phisrc.32   %phi988 <- %r5559
	br          .L1246

.L1246:
	phi.32      %r5560 <- %phi987, %phi988
	store.32    %r5560 -> 0[%arg1]
	seteq.32    %r5564 <- %r5560, $10
	br          %r5564, .L1249, .L1250

.L1250:
	seteq.32    %r5567 <- %r5560, $13
	br          %r5567, .L1249, .L1248

.L1249:
	setne.32    %r5571 <- %r5560, %r5544
	br          %r5571, .L1247, .L1248

.L1247:
	load.64     %r5573 <- 64[%arg1]
	load.64     %r5574 <- 0[%r5573]
	add.64      %r5575 <- %r5574, $-1
	store.64    %r5575 -> 0[%r5573]
	seta.32     %r5576 <- %r5574, $0
	br          %r5576, .L1251, .L1252

.L1251:
	load.64     %r5578 <- 64[%arg1]
	load.64     %r5579 <- 8[%r5578]
	add.64      %r5580 <- %r5579, $1
	store.64    %r5580 -> 8[%r5578]
	load.8      %r5581 <- 0[%r5579]
	cast.32     %r5583 <- (8) %r5581
	phisrc.32   %phi989 <- %r5583
	br          .L1253

.L1252:
	load.64     %r5585 <- 64[%arg1]
	call.32     %r5586 <- luaZ_fill, %r5585
	phisrc.32   %phi990 <- %r5586
	br          .L1253

.L1253:
	phi.32      %r5587 <- %phi989, %phi990
	store.32    %r5587 -> 0[%arg1]
	br          .L1248

.L1248:
	load.32     %r5590 <- 4[%arg1]
	add.32      %r5591 <- %r5590, $1
	store.32    %r5591 -> 4[%arg1]
	setge.32    %r5592 <- %r5591, $0x7ffffffd
	br          %r5592, .L1254, .L1255

.L1254:
	symaddr.64  %r5594 <- <anon symbol:0x62d0012a6728>
	call        luaX_syntaxerror, %arg1, %r5594
	br          .L1255

.L1255:
	ret


luaX_setinput:
.L1256:
	<entry-point>
	store.8     $46 -> 88[%arg2]
	store.64    %arg1 -> 56[%arg2]
	store.32    $287 -> 32[%arg2]
	store.64    %arg3 -> 64[%arg2]
	store.64    $0 -> 48[%arg2]
	store.32    $1 -> 4[%arg2]
	store.32    $1 -> 8[%arg2]
	store.64    %arg4 -> 80[%arg2]
	load.64     %r5609 <- 72[%arg2]
	load.64     %r5610 <- 0[%r5609]
	cast.64     %r5611 <- (64) %r5610
	load.64     %r5614 <- 16[%r5609]
	call.64     %r5616 <- luaM_realloc_, %arg1, %r5611, %r5614, $32
	ptrcast.64  %r5617 <- (64) %r5616
	load.64     %r5619 <- 72[%arg2]
	store.64    %r5617 -> 0[%r5619]
	load.64     %r5621 <- 72[%arg2]
	store.64    $32 -> 16[%r5621]
	load.64     %r5623 <- 64[%arg2]
	load.64     %r5624 <- 0[%r5623]
	add.64      %r5625 <- %r5624, $-1
	store.64    %r5625 -> 0[%r5623]
	seta.32     %r5626 <- %r5624, $0
	br          %r5626, .L1257, .L1258

.L1257:
	load.64     %r5628 <- 64[%arg2]
	load.64     %r5629 <- 8[%r5628]
	add.64      %r5630 <- %r5629, $1
	store.64    %r5630 -> 8[%r5628]
	load.8      %r5631 <- 0[%r5629]
	cast.32     %r5633 <- (8) %r5631
	phisrc.32   %phi994 <- %r5633
	br          .L1259

.L1258:
	load.64     %r5635 <- 64[%arg2]
	call.32     %r5636 <- luaZ_fill, %r5635
	phisrc.32   %phi995 <- %r5636
	br          .L1259

.L1259:
	phi.32      %r5637 <- %phi994, %phi995
	store.32    %r5637 -> 0[%arg2]
	ret


check_next:
.L1261:
	<entry-point>
	load.32     %r5641 <- 0[%arg1]
	call.64     %r5642 <- strchr, %arg2, %r5641
	br          %r5642, .L1263, .L1262

.L1262:
	phisrc.32   %phi996(return) <- $0
	br          .L1264

.L1263:
	load.32     %r5646 <- 0[%arg1]
	call        save, %arg1, %r5646
	load.64     %r5648 <- 64[%arg1]
	load.64     %r5649 <- 0[%r5648]
	add.64      %r5650 <- %r5649, $-1
	store.64    %r5650 -> 0[%r5648]
	seta.32     %r5651 <- %r5649, $0
	br          %r5651, .L1265, .L1266

.L1265:
	load.64     %r5653 <- 64[%arg1]
	load.64     %r5654 <- 8[%r5653]
	add.64      %r5655 <- %r5654, $1
	store.64    %r5655 -> 8[%r5653]
	load.8      %r5656 <- 0[%r5654]
	cast.32     %r5658 <- (8) %r5656
	phisrc.32   %phi997 <- %r5658
	br          .L1267

.L1266:
	load.64     %r5660 <- 64[%arg1]
	call.32     %r5661 <- luaZ_fill, %r5660
	phisrc.32   %phi998 <- %r5661
	br          .L1267

.L1267:
	phi.32      %r5662 <- %phi997, %phi998
	store.32    %r5662 -> 0[%arg1]
	phisrc.32   %phi999(return) <- $1
	br          .L1264

.L1264:
	phi.32      %r5643 <- %phi996(return), %phi999(return)
	ret.32      %r5643


buffreplace:
.L1268:
	<entry-point>
	load.64     %r5665 <- 72[%arg1]
	load.64     %r5666(n) <- 8[%r5665]
	load.64     %r5669 <- 0[%r5665]
	phisrc.64   %phi1002(n) <- %r5666(n)
	br          .L1272

.L1272:
	phi.64      %r5670 <- %phi1002(n), %phi1003(n)
	add.64      %r5671(n) <- %r5670, $-1
	phisrc.64   %phi1003(n) <- %r5671(n)
	br          %r5670, .L1269, .L1271

.L1269:
	add.64      %r5674 <- %r5669, %r5671(n)
	load.8      %r5675 <- 0[%r5674]
	scast.32    %r5676 <- (8) %r5675
	scast.32    %r5678 <- (8) %arg2
	seteq.32    %r5679 <- %r5676, %r5678
	br          %r5679, .L1273, .L1272

.L1273:
	store.8     %arg3 -> 0[%r5674]
	br          .L1272

.L1271:
	ret


read_numeral:
.L1275:
	<entry-point>
	br          .L1276

.L1276:
	load.32     %r5686 <- 0[%arg1]
	call        save, %arg1, %r5686
	load.64     %r5688 <- 64[%arg1]
	load.64     %r5689 <- 0[%r5688]
	add.64      %r5690 <- %r5689, $-1
	store.64    %r5690 -> 0[%r5688]
	seta.32     %r5691 <- %r5689, $0
	br          %r5691, .L1279, .L1280

.L1279:
	load.64     %r5693 <- 64[%arg1]
	load.64     %r5694 <- 8[%r5693]
	add.64      %r5695 <- %r5694, $1
	store.64    %r5695 -> 8[%r5693]
	load.8      %r5696 <- 0[%r5694]
	cast.32     %r5698 <- (8) %r5696
	phisrc.32   %phi1004 <- %r5698
	br          .L1281

.L1280:
	load.64     %r5700 <- 64[%arg1]
	call.32     %r5701 <- luaZ_fill, %r5700
	phisrc.32   %phi1005 <- %r5701
	br          .L1281

.L1281:
	phi.32      %r5702 <- %phi1004, %phi1005
	store.32    %r5702 -> 0[%arg1]
	call.64     %r5704 <- __ctype_b_loc
	load.64     %r5705 <- 0[%r5704]
	load.32     %r5707 <- 0[%arg1]
	scast.64    %r5709 <- (32) %r5707
	muls.64     %r5710 <- %r5709, $2
	add.64      %r5711 <- %r5705, %r5710
	load.16     %r5712 <- 0[%r5711]
	cast.32     %r5713 <- (16) %r5712
	and.32      %r5714 <- %r5713, $0x800
	br          %r5714, .L1276, .L1282

.L1282:
	seteq.32    %r5717 <- %r5707, $46
	br          %r5717, .L1276, .L1278

.L1278:
	symaddr.64  %r5719 <- <anon symbol:0x62d0012cbd78>
	call.32     %r5720 <- check_next, %arg1, %r5719
	br          %r5720, .L1283, .L1288

.L1283:
	symaddr.64  %r5722 <- <anon symbol:0x62d0012cc118>
	call.32     %r5723 <- check_next, %arg1, %r5722
	br          .L1288

.L1288:
	call.64     %r5724 <- __ctype_b_loc
	load.64     %r5725 <- 0[%r5724]
	load.32     %r5727 <- 0[%arg1]
	scast.64    %r5729 <- (32) %r5727
	muls.64     %r5730 <- %r5729, $2
	add.64      %r5731 <- %r5725, %r5730
	load.16     %r5732 <- 0[%r5731]
	cast.32     %r5733 <- (16) %r5732
	and.32      %r5734 <- %r5733, $8
	br          %r5734, .L1285, .L1289

.L1289:
	seteq.32    %r5737 <- %r5727, $95
	br          %r5737, .L1285, .L1287

.L1285:
	call        save, %arg1, %r5727
	load.64     %r5742 <- 64[%arg1]
	load.64     %r5743 <- 0[%r5742]
	add.64      %r5744 <- %r5743, $-1
	store.64    %r5744 -> 0[%r5742]
	seta.32     %r5745 <- %r5743, $0
	br          %r5745, .L1290, .L1291

.L1290:
	load.64     %r5747 <- 64[%arg1]
	load.64     %r5748 <- 8[%r5747]
	add.64      %r5749 <- %r5748, $1
	store.64    %r5749 -> 8[%r5747]
	load.8      %r5750 <- 0[%r5748]
	cast.32     %r5752 <- (8) %r5750
	phisrc.32   %phi1006 <- %r5752
	br          .L1292

.L1291:
	load.64     %r5754 <- 64[%arg1]
	call.32     %r5755 <- luaZ_fill, %r5754
	phisrc.32   %phi1007 <- %r5755
	br          .L1292

.L1292:
	phi.32      %r5756 <- %phi1006, %phi1007
	store.32    %r5756 -> 0[%arg1]
	br          .L1288

.L1287:
	call        save, %arg1, $0
	load.8      %r5761 <- 88[%arg1]
	call        buffreplace, %arg1, $46, %r5761
	load.64     %r5763 <- 72[%arg1]
	load.64     %r5764 <- 0[%r5763]
	call.32     %r5767 <- luaO_str2d, %r5764, %arg2
	br          %r5767, .L1294, .L1293

.L1293:
	symaddr.64  %r5769 <- <anon symbol:0x62d0012cdf00>
	call        luaX_lexerror, %arg1, %r5769, $284
	br          .L1294

.L1294:
	ret


skip_sep:
.L1295:
	<entry-point>
	load.32     %r5771 <- 0[%arg1]
	call        save, %arg1, %r5771
	load.64     %r5776 <- 64[%arg1]
	load.64     %r5777 <- 0[%r5776]
	add.64      %r5778 <- %r5777, $-1
	store.64    %r5778 -> 0[%r5776]
	seta.32     %r5779 <- %r5777, $0
	phisrc.32   %phi1017(count) <- $0
	phisrc.32   %phi1019(count) <- $0
	br          %r5779, .L1296, .L1297

.L1296:
	load.64     %r5781 <- 64[%arg1]
	load.64     %r5782 <- 8[%r5781]
	add.64      %r5783 <- %r5782, $1
	store.64    %r5783 -> 8[%r5781]
	load.8      %r5784 <- 0[%r5782]
	cast.32     %r5786 <- (8) %r5784
	phisrc.32   %phi1012 <- %r5786
	br          .L1298

.L1297:
	load.64     %r5788 <- 64[%arg1]
	call.32     %r5789 <- luaZ_fill, %r5788
	phisrc.32   %phi1013 <- %r5789
	br          .L1298

.L1298:
	phi.32      %r5790 <- %phi1012, %phi1013
	store.32    %r5790 -> 0[%arg1]
	phisrc.32   %phi1023 <- %r5790
	br          .L1302

.L1302:
	phi.32      %r5793 <- %phi1023, %phi1024
	seteq.32    %r5794 <- %r5793, $61
	br          %r5794, .L1299, .L1301

.L1299:
	call        save, %arg1, %r5793
	load.64     %r5799 <- 64[%arg1]
	load.64     %r5800 <- 0[%r5799]
	add.64      %r5801 <- %r5800, $-1
	store.64    %r5801 -> 0[%r5799]
	seta.32     %r5802 <- %r5800, $0
	br          %r5802, .L1303, .L1304

.L1303:
	load.64     %r5804 <- 64[%arg1]
	load.64     %r5805 <- 8[%r5804]
	add.64      %r5806 <- %r5805, $1
	store.64    %r5806 -> 8[%r5804]
	load.8      %r5807 <- 0[%r5805]
	cast.32     %r5809 <- (8) %r5807
	phisrc.32   %phi1014 <- %r5809
	br          .L1305

.L1304:
	load.64     %r5811 <- 64[%arg1]
	call.32     %r5812 <- luaZ_fill, %r5811
	phisrc.32   %phi1015 <- %r5812
	br          .L1305

.L1305:
	phi.32      %r5813 <- %phi1014, %phi1015
	store.32    %r5813 -> 0[%arg1]
	phi.32      %r5815 <- %phi1019(count), %phi1020(count)
	add.32      %r5816 <- %r5815, $1
	phisrc.32   %phi1018(count) <- %r5816
	phisrc.32   %phi1020(count) <- %r5816
	phisrc.32   %phi1024 <- %r5813
	br          .L1302

.L1301:
	phi.32      %r5817 <- %phi1017(count), %phi1018(count)
	neg.32      %r5819 <- %r5817
	add.32      %r5820 <- %r5819, $-1
	seteq.32    %r5824 <- %r5793, %r5771
	select.32   %r5825 <- %r5824, %r5817, %r5820
	ret.32      %r5825


read_long_string:
.L1307:
	<entry-point>
	load.32     %r5829 <- 0[%arg1]
	call        save, %arg1, %r5829
	load.64     %r5831 <- 64[%arg1]
	load.64     %r5832 <- 0[%r5831]
	add.64      %r5833 <- %r5832, $-1
	store.64    %r5833 -> 0[%r5831]
	seta.32     %r5834 <- %r5832, $0
	br          %r5834, .L1308, .L1309

.L1308:
	load.64     %r5836 <- 64[%arg1]
	load.64     %r5837 <- 8[%r5836]
	add.64      %r5838 <- %r5837, $1
	store.64    %r5838 -> 8[%r5836]
	load.8      %r5839 <- 0[%r5837]
	cast.32     %r5841 <- (8) %r5839
	phisrc.32   %phi1025 <- %r5841
	br          .L1310

.L1309:
	load.64     %r5843 <- 64[%arg1]
	call.32     %r5844 <- luaZ_fill, %r5843
	phisrc.32   %phi1026 <- %r5844
	br          .L1310

.L1310:
	phi.32      %r5845 <- %phi1025, %phi1026
	store.32    %r5845 -> 0[%arg1]
	seteq.32    %r5849 <- %r5845, $10
	phisrc.32   %phi1036 <- %r5845
	br          %r5849, .L1311, .L1313

.L1313:
	seteq.32    %r5852 <- %r5845, $13
	phisrc.32   %phi1034 <- %r5845
	br          %r5852, .L1311, .L1314

.L1311:
	call        inclinenumber, %arg1
	br          .L1314

.L1314:
	load.32     %r5855 <- 0[%arg1]
	switch      %r5855, -1 -> .L1319, 10 -> .L1322, 13 -> .L1322, 93 -> .L1320, default -> .L1323

.L1319:
	symaddr.64  %r5857 <- <anon symbol:0x62d0012d1730>
	symaddr.64  %r5858 <- <anon symbol:0x62d0012d1390>
	ptrcast.64  %r5859 <- (64) %r5858
	select.64   %r5861 <- %arg2, %r5857, %r5859
	call        luaX_lexerror, %arg1, %r5861, $287
	br          .L1314

.L1320:
	call.32     %r5863 <- skip_sep, %arg1
	seteq.32    %r5865 <- %r5863, %arg3
	br          %r5865, .L1324, .L1314

.L1324:
	load.32     %r5868 <- 0[%arg1]
	call        save, %arg1, %r5868
	load.64     %r5870 <- 64[%arg1]
	load.64     %r5871 <- 0[%r5870]
	add.64      %r5872 <- %r5871, $-1
	store.64    %r5872 -> 0[%r5870]
	seta.32     %r5873 <- %r5871, $0
	br          %r5873, .L1326, .L1327

.L1326:
	load.64     %r5875 <- 64[%arg1]
	load.64     %r5876 <- 8[%r5875]
	add.64      %r5877 <- %r5876, $1
	store.64    %r5877 -> 8[%r5875]
	load.8      %r5878 <- 0[%r5876]
	cast.32     %r5880 <- (8) %r5878
	phisrc.32   %phi1027 <- %r5880
	br          .L1328

.L1327:
	load.64     %r5882 <- 64[%arg1]
	call.32     %r5883 <- luaZ_fill, %r5882
	phisrc.32   %phi1028 <- %r5883
	br          .L1328

.L1328:
	phi.32      %r5884 <- %phi1027, %phi1028
	store.32    %r5884 -> 0[%arg1]
	br          %arg2, .L1341, .L1342

.L1322:
	call        save, %arg1, $10
	call        inclinenumber, %arg1
	br          %arg2, .L1314, .L1330

.L1330:
	load.64     %r5890 <- 72[%arg1]
	store.64    $0 -> 8[%r5890]
	br          .L1314

.L1323:
	br          %arg2, .L1332, .L1333

.L1332:
	call        save, %arg1, %r5855
	load.64     %r5896 <- 64[%arg1]
	load.64     %r5897 <- 0[%r5896]
	add.64      %r5898 <- %r5897, $-1
	store.64    %r5898 -> 0[%r5896]
	seta.32     %r5899 <- %r5897, $0
	br          %r5899, .L1334, .L1335

.L1334:
	load.64     %r5901 <- 64[%arg1]
	load.64     %r5902 <- 8[%r5901]
	add.64      %r5903 <- %r5902, $1
	store.64    %r5903 -> 8[%r5901]
	load.8      %r5904 <- 0[%r5902]
	cast.32     %r5906 <- (8) %r5904
	phisrc.32   %phi1029 <- %r5906
	br          .L1336

.L1335:
	load.64     %r5908 <- 64[%arg1]
	call.32     %r5909 <- luaZ_fill, %r5908
	phisrc.32   %phi1030 <- %r5909
	br          .L1336

.L1336:
	phi.32      %r5910 <- %phi1029, %phi1030
	store.32    %r5910 -> 0[%arg1]
	br          .L1314

.L1333:
	load.64     %r5913 <- 64[%arg1]
	load.64     %r5914 <- 0[%r5913]
	add.64      %r5915 <- %r5914, $-1
	store.64    %r5915 -> 0[%r5913]
	seta.32     %r5916 <- %r5914, $0
	br          %r5916, .L1338, .L1339

.L1338:
	load.64     %r5918 <- 64[%arg1]
	load.64     %r5919 <- 8[%r5918]
	add.64      %r5920 <- %r5919, $1
	store.64    %r5920 -> 8[%r5918]
	load.8      %r5921 <- 0[%r5919]
	cast.32     %r5923 <- (8) %r5921
	phisrc.32   %phi1031 <- %r5923
	br          .L1340

.L1339:
	load.64     %r5925 <- 64[%arg1]
	call.32     %r5926 <- luaZ_fill, %r5925
	phisrc.32   %phi1032 <- %r5926
	br          .L1340

.L1340:
	phi.32      %r5927 <- %phi1031, %phi1032
	store.32    %r5927 -> 0[%arg1]
	br          .L1314

.L1341:
	load.64     %r5932 <- 72[%arg1]
	load.64     %r5933 <- 0[%r5932]
	add.32      %r5935 <- %arg3, $2
	scast.64    %r5936 <- (32) %r5935
	add.64      %r5937 <- %r5933, %r5936
	load.64     %r5940 <- 8[%r5932]
	muls.32     %r5943 <- %r5935, $2
	scast.64    %r5944 <- (32) %r5943
	sub.64      %r5945 <- %r5940, %r5944
	call.64     %r5946 <- luaX_newstring, %arg1, %r5937, %r5945
	store.64    %r5946 -> 0[%arg2]
	br          .L1342

.L1342:
	ret


read_string:
.L1343:
	<entry-point>
	load.32     %r5950 <- 0[%arg1]
	call        save, %arg1, %r5950
	load.64     %r5952 <- 64[%arg1]
	load.64     %r5953 <- 0[%r5952]
	add.64      %r5954 <- %r5953, $-1
	store.64    %r5954 -> 0[%r5952]
	seta.32     %r5955 <- %r5953, $0
	br          %r5955, .L1344, .L1345

.L1344:
	load.64     %r5957 <- 64[%arg1]
	load.64     %r5958 <- 8[%r5957]
	add.64      %r5959 <- %r5958, $1
	store.64    %r5959 -> 8[%r5957]
	load.8      %r5960 <- 0[%r5958]
	cast.32     %r5962 <- (8) %r5960
	phisrc.32   %phi1037 <- %r5962
	br          .L1346

.L1345:
	load.64     %r5964 <- 64[%arg1]
	call.32     %r5965 <- luaZ_fill, %r5964
	phisrc.32   %phi1038 <- %r5965
	br          .L1346

.L1346:
	phi.32      %r5966 <- %phi1037, %phi1038
	store.32    %r5966 -> 0[%arg1]
	phisrc.32   %phi1070 <- %r5966
	phisrc.32   %phi1071 <- %r5966
	br          .L1350

.L1350:
	load.32     %r5969 <- 0[%arg1]
	setne.32    %r5971 <- %r5969, %arg2
	br          %r5971, .L1347, .L1349

.L1347:
	switch      %r5969, -1 -> .L1352, 10 -> .L1354, 13 -> .L1354, 92 -> .L1355, default -> .L1356

.L1352:
	symaddr.64  %r5975 <- <anon symbol:0x62d0012c3a78>
	call        luaX_lexerror, %arg1, %r5975, $287
	br          .L1350

.L1354:
	symaddr.64  %r5977 <- <anon symbol:0x62d0012c3e18>
	call        luaX_lexerror, %arg1, %r5977, $286
	br          .L1350

.L1355:
	load.64     %r5979 <- 64[%arg1]
	load.64     %r5980 <- 0[%r5979]
	add.64      %r5981 <- %r5980, $-1
	store.64    %r5981 -> 0[%r5979]
	seta.32     %r5982 <- %r5980, $0
	br          %r5982, .L1357, .L1358

.L1357:
	load.64     %r5984 <- 64[%arg1]
	load.64     %r5985 <- 8[%r5984]
	add.64      %r5986 <- %r5985, $1
	store.64    %r5986 -> 8[%r5984]
	load.8      %r5987 <- 0[%r5985]
	cast.32     %r5989 <- (8) %r5987
	phisrc.32   %phi1039 <- %r5989
	br          .L1359

.L1358:
	load.64     %r5991 <- 64[%arg1]
	call.32     %r5992 <- luaZ_fill, %r5991
	phisrc.32   %phi1040 <- %r5992
	br          .L1359

.L1359:
	phi.32      %r5993 <- %phi1039, %phi1040
	store.32    %r5993 -> 0[%arg1]
	switch      %r5993, -1 -> .L1350, 10 -> .L1369, 13 -> .L1369, 97 -> .L1361, 98 -> .L1362, 102 -> .L1363, 110 -> .L1364, 114 -> .L1365, 116 -> .L1366, 118 -> .L1367, default -> .L1371

.L1361:
	phisrc.32   %phi1051(c) <- $7
	br          .L1360

.L1362:
	phisrc.32   %phi1052(c) <- $8
	br          .L1360

.L1363:
	phisrc.32   %phi1053(c) <- $12
	br          .L1360

.L1364:
	phisrc.32   %phi1054(c) <- $10
	br          .L1360

.L1365:
	phisrc.32   %phi1055(c) <- $13
	br          .L1360

.L1366:
	phisrc.32   %phi1056(c) <- $9
	br          .L1360

.L1367:
	phisrc.32   %phi1057(c) <- $11
	br          .L1360

.L1369:
	call        save, %arg1, $10
	call        inclinenumber, %arg1
	br          .L1350

.L1371:
	call.64     %r5999 <- __ctype_b_loc
	load.64     %r6000 <- 0[%r5999]
	load.32     %r6002 <- 0[%arg1]
	scast.64    %r6004 <- (32) %r6002
	muls.64     %r6005 <- %r6004, $2
	add.64      %r6006 <- %r6000, %r6005
	load.16     %r6007 <- 0[%r6006]
	cast.32     %r6008 <- (16) %r6007
	and.32      %r6009 <- %r6008, $0x800
	phisrc.32   %phi1066 <- %r6002
	br          %r6009, .L1373, .L1372

.L1372:
	call        save, %arg1, %r6002
	load.64     %r6014 <- 64[%arg1]
	load.64     %r6015 <- 0[%r6014]
	add.64      %r6016 <- %r6015, $-1
	store.64    %r6016 -> 0[%r6014]
	seta.32     %r6017 <- %r6015, $0
	br          %r6017, .L1374, .L1375

.L1374:
	load.64     %r6019 <- 64[%arg1]
	load.64     %r6020 <- 8[%r6019]
	add.64      %r6021 <- %r6020, $1
	store.64    %r6021 -> 8[%r6019]
	load.8      %r6022 <- 0[%r6020]
	cast.32     %r6024 <- (8) %r6022
	phisrc.32   %phi1041 <- %r6024
	br          .L1376

.L1375:
	load.64     %r6026 <- 64[%arg1]
	call.32     %r6027 <- luaZ_fill, %r6026
	phisrc.32   %phi1042 <- %r6027
	br          .L1376

.L1376:
	phi.32      %r6028 <- %phi1041, %phi1042
	store.32    %r6028 -> 0[%arg1]
	br          .L1350

.L1373:
	phisrc.32   %phi1060(c) <- $0
	phisrc.32   %phi1062(i) <- $0
	br          .L1378

.L1378:
	phi.32      %r6030 <- %phi1060(c), %phi1061(c)
	muls.32     %r6031 <- %r6030, $10
	phi.32      %r6033 <- %phi1066, %phi1067
	add.32      %r6034 <- %r6033, $-48
	add.32      %r6035(c) <- %r6031, %r6034
	load.64     %r6037 <- 64[%arg1]
	load.64     %r6038 <- 0[%r6037]
	add.64      %r6039 <- %r6038, $-1
	store.64    %r6039 -> 0[%r6037]
	seta.32     %r6040 <- %r6038, $0
	phisrc.32   %phi1061(c) <- %r6035(c)
	br          %r6040, .L1381, .L1382

.L1381:
	load.64     %r6042 <- 64[%arg1]
	load.64     %r6043 <- 8[%r6042]
	add.64      %r6044 <- %r6043, $1
	store.64    %r6044 -> 8[%r6042]
	load.8      %r6045 <- 0[%r6043]
	cast.32     %r6047 <- (8) %r6045
	phisrc.32   %phi1043 <- %r6047
	br          .L1383

.L1382:
	load.64     %r6049 <- 64[%arg1]
	call.32     %r6050 <- luaZ_fill, %r6049
	phisrc.32   %phi1044 <- %r6050
	br          .L1383

.L1383:
	phi.32      %r6051 <- %phi1043, %phi1044
	store.32    %r6051 -> 0[%arg1]
	phi.32      %r6053 <- %phi1062(i), %phi1063(i)
	add.32      %r6054 <- %r6053, $1
	setlt.32    %r6055 <- %r6054, $3
	phisrc.32   %phi1063(i) <- %r6054
	br          %r6055, .L1384, .L1380

.L1384:
	call.64     %r6056 <- __ctype_b_loc
	load.64     %r6057 <- 0[%r6056]
	load.32     %r6059 <- 0[%arg1]
	scast.64    %r6061 <- (32) %r6059
	muls.64     %r6062 <- %r6061, $2
	add.64      %r6063 <- %r6057, %r6062
	load.16     %r6064 <- 0[%r6063]
	cast.32     %r6065 <- (16) %r6064
	and.32      %r6066 <- %r6065, $0x800
	phisrc.32   %phi1067 <- %r6059
	br          %r6066, .L1378, .L1380

.L1380:
	setgt.32    %r6068 <- %r6035(c), $255
	br          %r6068, .L1385, .L1386

.L1385:
	symaddr.64  %r6070 <- <anon symbol:0x62d0012c6f08>
	call        luaX_lexerror, %arg1, %r6070, $286
	br          .L1386

.L1386:
	call        save, %arg1, %r6035(c)
	br          .L1350

.L1360:
	phi.32      %r6074 <- %phi1051(c), %phi1052(c), %phi1053(c), %phi1054(c), %phi1055(c), %phi1056(c), %phi1057(c)
	call        save, %arg1, %r6074
	load.64     %r6076 <- 64[%arg1]
	load.64     %r6077 <- 0[%r6076]
	add.64      %r6078 <- %r6077, $-1
	store.64    %r6078 -> 0[%r6076]
	seta.32     %r6079 <- %r6077, $0
	br          %r6079, .L1387, .L1388

.L1387:
	load.64     %r6081 <- 64[%arg1]
	load.64     %r6082 <- 8[%r6081]
	add.64      %r6083 <- %r6082, $1
	store.64    %r6083 -> 8[%r6081]
	load.8      %r6084 <- 0[%r6082]
	cast.32     %r6086 <- (8) %r6084
	phisrc.32   %phi1045 <- %r6086
	br          .L1389

.L1388:
	load.64     %r6088 <- 64[%arg1]
	call.32     %r6089 <- luaZ_fill, %r6088
	phisrc.32   %phi1046 <- %r6089
	br          .L1389

.L1389:
	phi.32      %r6090 <- %phi1045, %phi1046
	store.32    %r6090 -> 0[%arg1]
	br          .L1350

.L1356:
	call        save, %arg1, %r5969
	load.64     %r6096 <- 64[%arg1]
	load.64     %r6097 <- 0[%r6096]
	add.64      %r6098 <- %r6097, $-1
	store.64    %r6098 -> 0[%r6096]
	seta.32     %r6099 <- %r6097, $0
	br          %r6099, .L1390, .L1391

.L1390:
	load.64     %r6101 <- 64[%arg1]
	load.64     %r6102 <- 8[%r6101]
	add.64      %r6103 <- %r6102, $1
	store.64    %r6103 -> 8[%r6101]
	load.8      %r6104 <- 0[%r6102]
	cast.32     %r6106 <- (8) %r6104
	phisrc.32   %phi1047 <- %r6106
	br          .L1392

.L1391:
	load.64     %r6108 <- 64[%arg1]
	call.32     %r6109 <- luaZ_fill, %r6108
	phisrc.32   %phi1048 <- %r6109
	br          .L1392

.L1392:
	phi.32      %r6110 <- %phi1047, %phi1048
	store.32    %r6110 -> 0[%arg1]
	br          .L1350

.L1349:
	call        save, %arg1, %r5969
	load.64     %r6116 <- 64[%arg1]
	load.64     %r6117 <- 0[%r6116]
	add.64      %r6118 <- %r6117, $-1
	store.64    %r6118 -> 0[%r6116]
	seta.32     %r6119 <- %r6117, $0
	br          %r6119, .L1393, .L1394

.L1393:
	load.64     %r6121 <- 64[%arg1]
	load.64     %r6122 <- 8[%r6121]
	add.64      %r6123 <- %r6122, $1
	store.64    %r6123 -> 8[%r6121]
	load.8      %r6124 <- 0[%r6122]
	cast.32     %r6126 <- (8) %r6124
	phisrc.32   %phi1049 <- %r6126
	br          .L1395

.L1394:
	load.64     %r6128 <- 64[%arg1]
	call.32     %r6129 <- luaZ_fill, %r6128
	phisrc.32   %phi1050 <- %r6129
	br          .L1395

.L1395:
	phi.32      %r6130 <- %phi1049, %phi1050
	store.32    %r6130 -> 0[%arg1]
	load.64     %r6134 <- 72[%arg1]
	load.64     %r6135 <- 0[%r6134]
	add.64      %r6136 <- %r6135, $1
	load.64     %r6139 <- 8[%r6134]
	add.64      %r6140 <- %r6139, $-2
	call.64     %r6141 <- luaX_newstring, %arg1, %r6136, %r6140
	store.64    %r6141 -> 0[%arg3]
	ret


llex:
.L1397:
	<entry-point>
	load.64     %r6144 <- 72[%arg1]
	store.64    $0 -> 8[%r6144]
	br          .L1398

.L1398:
	load.32     %r6146 <- 0[%arg1]
	switch      %r6146, -1 -> .L1414, 10 -> .L1404, 13 -> .L1404, 34 -> .L1412, 39 -> .L1412, 45 -> .L1405, 46 -> .L1413, 60 -> .L1408, 61 -> .L1407, 62 -> .L1409, 91 -> .L1406, 126 -> .L1410, default -> .L1415

.L1404:
	call        inclinenumber, %arg1
	br          .L1398

.L1405:
	load.64     %r6149 <- 64[%arg1]
	load.64     %r6150 <- 0[%r6149]
	add.64      %r6151 <- %r6150, $-1
	store.64    %r6151 -> 0[%r6149]
	seta.32     %r6152 <- %r6150, $0
	br          %r6152, .L1416, .L1417

.L1416:
	load.64     %r6154 <- 64[%arg1]
	load.64     %r6155 <- 8[%r6154]
	add.64      %r6156 <- %r6155, $1
	store.64    %r6156 -> 8[%r6154]
	load.8      %r6157 <- 0[%r6155]
	cast.32     %r6159 <- (8) %r6157
	phisrc.32   %phi1072 <- %r6159
	br          .L1418

.L1417:
	load.64     %r6161 <- 64[%arg1]
	call.32     %r6162 <- luaZ_fill, %r6161
	phisrc.32   %phi1073 <- %r6162
	br          .L1418

.L1418:
	phi.32      %r6163 <- %phi1072, %phi1073
	store.32    %r6163 -> 0[%arg1]
	setne.32    %r6167 <- %r6163, $45
	br          %r6167, .L1419, .L1420

.L1419:
	phisrc.32   %phi1074(return) <- $45
	br          .L1421

.L1420:
	load.64     %r6170 <- 64[%arg1]
	load.64     %r6171 <- 0[%r6170]
	add.64      %r6172 <- %r6171, $-1
	store.64    %r6172 -> 0[%r6170]
	seta.32     %r6173 <- %r6171, $0
	br          %r6173, .L1422, .L1423

.L1422:
	load.64     %r6175 <- 64[%arg1]
	load.64     %r6176 <- 8[%r6175]
	add.64      %r6177 <- %r6176, $1
	store.64    %r6177 -> 8[%r6175]
	load.8      %r6178 <- 0[%r6176]
	cast.32     %r6180 <- (8) %r6178
	phisrc.32   %phi1075 <- %r6180
	br          .L1424

.L1423:
	load.64     %r6182 <- 64[%arg1]
	call.32     %r6183 <- luaZ_fill, %r6182
	phisrc.32   %phi1076 <- %r6183
	br          .L1424

.L1424:
	phi.32      %r6184 <- %phi1075, %phi1076
	store.32    %r6184 -> 0[%arg1]
	seteq.32    %r6188 <- %r6184, $91
	phisrc.32   %phi1136 <- %r6184
	phisrc.32   %phi1137 <- %r6184
	br          %r6188, .L1425, .L1432

.L1425:
	call.32     %r6190 <- skip_sep, %arg1
	load.64     %r6192 <- 72[%arg1]
	store.64    $0 -> 8[%r6192]
	setge.32    %r6194 <- %r6190, $0
	br          %r6194, .L1427, .L1432

.L1427:
	call        read_long_string, %arg1, $0, %r6190
	load.64     %r6198 <- 72[%arg1]
	store.64    $0 -> 8[%r6198]
	br          .L1398

.L1432:
	load.32     %r6200 <- 0[%arg1]
	seteq.32    %r6201 <- %r6200, $10
	br          %r6201, .L1398, .L1434

.L1434:
	seteq.32    %r6204 <- %r6200, $13
	br          %r6204, .L1398, .L1433

.L1433:
	setne.32    %r6207 <- %r6200, $0xffffffff
	br          %r6207, .L1429, .L1398

.L1429:
	load.64     %r6209 <- 64[%arg1]
	load.64     %r6210 <- 0[%r6209]
	add.64      %r6211 <- %r6210, $-1
	store.64    %r6211 -> 0[%r6209]
	seta.32     %r6212 <- %r6210, $0
	br          %r6212, .L1435, .L1436

.L1435:
	load.64     %r6214 <- 64[%arg1]
	load.64     %r6215 <- 8[%r6214]
	add.64      %r6216 <- %r6215, $1
	store.64    %r6216 -> 8[%r6214]
	load.8      %r6217 <- 0[%r6215]
	cast.32     %r6219 <- (8) %r6217
	phisrc.32   %phi1077 <- %r6219
	br          .L1437

.L1436:
	load.64     %r6221 <- 64[%arg1]
	call.32     %r6222 <- luaZ_fill, %r6221
	phisrc.32   %phi1078 <- %r6222
	br          .L1437

.L1437:
	phi.32      %r6223 <- %phi1077, %phi1078
	store.32    %r6223 -> 0[%arg1]
	br          .L1432

.L1406:
	call.32     %r6226 <- skip_sep, %arg1
	setge.32    %r6228 <- %r6226, $0
	br          %r6228, .L1438, .L1439

.L1438:
	call        read_long_string, %arg1, %arg2, %r6226
	phisrc.32   %phi1079(return) <- $286
	br          .L1421

.L1439:
	seteq.32    %r6233 <- %r6226, $0xffffffff
	br          %r6233, .L1441, .L1442

.L1441:
	phisrc.32   %phi1080(return) <- $91
	br          .L1421

.L1442:
	symaddr.64  %r6235 <- <anon symbol:0x62d0012ed2f0>
	call        luaX_lexerror, %arg1, %r6235, $286
	br          .L1407

.L1407:
	load.64     %r6237 <- 64[%arg1]
	load.64     %r6238 <- 0[%r6237]
	add.64      %r6239 <- %r6238, $-1
	store.64    %r6239 -> 0[%r6237]
	seta.32     %r6240 <- %r6238, $0
	br          %r6240, .L1444, .L1445

.L1444:
	load.64     %r6242 <- 64[%arg1]
	load.64     %r6243 <- 8[%r6242]
	add.64      %r6244 <- %r6243, $1
	store.64    %r6244 -> 8[%r6242]
	load.8      %r6245 <- 0[%r6243]
	cast.32     %r6247 <- (8) %r6245
	phisrc.32   %phi1081 <- %r6247
	br          .L1446

.L1445:
	load.64     %r6249 <- 64[%arg1]
	call.32     %r6250 <- luaZ_fill, %r6249
	phisrc.32   %phi1082 <- %r6250
	br          .L1446

.L1446:
	phi.32      %r6251 <- %phi1081, %phi1082
	store.32    %r6251 -> 0[%arg1]
	setne.32    %r6255 <- %r6251, $61
	br          %r6255, .L1447, .L1448

.L1447:
	phisrc.32   %phi1083(return) <- $61
	br          .L1421

.L1448:
	load.64     %r6257 <- 64[%arg1]
	load.64     %r6258 <- 0[%r6257]
	add.64      %r6259 <- %r6258, $-1
	store.64    %r6259 -> 0[%r6257]
	seta.32     %r6260 <- %r6258, $0
	br          %r6260, .L1450, .L1451

.L1450:
	load.64     %r6262 <- 64[%arg1]
	load.64     %r6263 <- 8[%r6262]
	add.64      %r6264 <- %r6263, $1
	store.64    %r6264 -> 8[%r6262]
	load.8      %r6265 <- 0[%r6263]
	cast.32     %r6267 <- (8) %r6265
	phisrc.32   %phi1084 <- %r6267
	br          .L1452

.L1451:
	load.64     %r6269 <- 64[%arg1]
	call.32     %r6270 <- luaZ_fill, %r6269
	phisrc.32   %phi1085 <- %r6270
	br          .L1452

.L1452:
	phi.32      %r6271 <- %phi1084, %phi1085
	store.32    %r6271 -> 0[%arg1]
	phisrc.32   %phi1086(return) <- $280
	br          .L1421

.L1408:
	load.64     %r6274 <- 64[%arg1]
	load.64     %r6275 <- 0[%r6274]
	add.64      %r6276 <- %r6275, $-1
	store.64    %r6276 -> 0[%r6274]
	seta.32     %r6277 <- %r6275, $0
	br          %r6277, .L1453, .L1454

.L1453:
	load.64     %r6279 <- 64[%arg1]
	load.64     %r6280 <- 8[%r6279]
	add.64      %r6281 <- %r6280, $1
	store.64    %r6281 -> 8[%r6279]
	load.8      %r6282 <- 0[%r6280]
	cast.32     %r6284 <- (8) %r6282
	phisrc.32   %phi1087 <- %r6284
	br          .L1455

.L1454:
	load.64     %r6286 <- 64[%arg1]
	call.32     %r6287 <- luaZ_fill, %r6286
	phisrc.32   %phi1088 <- %r6287
	br          .L1455

.L1455:
	phi.32      %r6288 <- %phi1087, %phi1088
	store.32    %r6288 -> 0[%arg1]
	setne.32    %r6292 <- %r6288, $61
	br          %r6292, .L1456, .L1457

.L1456:
	phisrc.32   %phi1089(return) <- $60
	br          .L1421

.L1457:
	load.64     %r6294 <- 64[%arg1]
	load.64     %r6295 <- 0[%r6294]
	add.64      %r6296 <- %r6295, $-1
	store.64    %r6296 -> 0[%r6294]
	seta.32     %r6297 <- %r6295, $0
	br          %r6297, .L1459, .L1460

.L1459:
	load.64     %r6299 <- 64[%arg1]
	load.64     %r6300 <- 8[%r6299]
	add.64      %r6301 <- %r6300, $1
	store.64    %r6301 -> 8[%r6299]
	load.8      %r6302 <- 0[%r6300]
	cast.32     %r6304 <- (8) %r6302
	phisrc.32   %phi1090 <- %r6304
	br          .L1461

.L1460:
	load.64     %r6306 <- 64[%arg1]
	call.32     %r6307 <- luaZ_fill, %r6306
	phisrc.32   %phi1091 <- %r6307
	br          .L1461

.L1461:
	phi.32      %r6308 <- %phi1090, %phi1091
	store.32    %r6308 -> 0[%arg1]
	phisrc.32   %phi1092(return) <- $282
	br          .L1421

.L1409:
	load.64     %r6311 <- 64[%arg1]
	load.64     %r6312 <- 0[%r6311]
	add.64      %r6313 <- %r6312, $-1
	store.64    %r6313 -> 0[%r6311]
	seta.32     %r6314 <- %r6312, $0
	br          %r6314, .L1462, .L1463

.L1462:
	load.64     %r6316 <- 64[%arg1]
	load.64     %r6317 <- 8[%r6316]
	add.64      %r6318 <- %r6317, $1
	store.64    %r6318 -> 8[%r6316]
	load.8      %r6319 <- 0[%r6317]
	cast.32     %r6321 <- (8) %r6319
	phisrc.32   %phi1093 <- %r6321
	br          .L1464

.L1463:
	load.64     %r6323 <- 64[%arg1]
	call.32     %r6324 <- luaZ_fill, %r6323
	phisrc.32   %phi1094 <- %r6324
	br          .L1464

.L1464:
	phi.32      %r6325 <- %phi1093, %phi1094
	store.32    %r6325 -> 0[%arg1]
	setne.32    %r6329 <- %r6325, $61
	br          %r6329, .L1465, .L1466

.L1465:
	phisrc.32   %phi1095(return) <- $62
	br          .L1421

.L1466:
	load.64     %r6331 <- 64[%arg1]
	load.64     %r6332 <- 0[%r6331]
	add.64      %r6333 <- %r6332, $-1
	store.64    %r6333 -> 0[%r6331]
	seta.32     %r6334 <- %r6332, $0
	br          %r6334, .L1468, .L1469

.L1468:
	load.64     %r6336 <- 64[%arg1]
	load.64     %r6337 <- 8[%r6336]
	add.64      %r6338 <- %r6337, $1
	store.64    %r6338 -> 8[%r6336]
	load.8      %r6339 <- 0[%r6337]
	cast.32     %r6341 <- (8) %r6339
	phisrc.32   %phi1096 <- %r6341
	br          .L1470

.L1469:
	load.64     %r6343 <- 64[%arg1]
	call.32     %r6344 <- luaZ_fill, %r6343
	phisrc.32   %phi1097 <- %r6344
	br          .L1470

.L1470:
	phi.32      %r6345 <- %phi1096, %phi1097
	store.32    %r6345 -> 0[%arg1]
	phisrc.32   %phi1098(return) <- $281
	br          .L1421

.L1410:
	load.64     %r6348 <- 64[%arg1]
	load.64     %r6349 <- 0[%r6348]
	add.64      %r6350 <- %r6349, $-1
	store.64    %r6350 -> 0[%r6348]
	seta.32     %r6351 <- %r6349, $0
	br          %r6351, .L1471, .L1472

.L1471:
	load.64     %r6353 <- 64[%arg1]
	load.64     %r6354 <- 8[%r6353]
	add.64      %r6355 <- %r6354, $1
	store.64    %r6355 -> 8[%r6353]
	load.8      %r6356 <- 0[%r6354]
	cast.32     %r6358 <- (8) %r6356
	phisrc.32   %phi1099 <- %r6358
	br          .L1473

.L1472:
	load.64     %r6360 <- 64[%arg1]
	call.32     %r6361 <- luaZ_fill, %r6360
	phisrc.32   %phi1100 <- %r6361
	br          .L1473

.L1473:
	phi.32      %r6362 <- %phi1099, %phi1100
	store.32    %r6362 -> 0[%arg1]
	setne.32    %r6366 <- %r6362, $61
	br          %r6366, .L1474, .L1475

.L1474:
	phisrc.32   %phi1101(return) <- $126
	br          .L1421

.L1475:
	load.64     %r6368 <- 64[%arg1]
	load.64     %r6369 <- 0[%r6368]
	add.64      %r6370 <- %r6369, $-1
	store.64    %r6370 -> 0[%r6368]
	seta.32     %r6371 <- %r6369, $0
	br          %r6371, .L1477, .L1478

.L1477:
	load.64     %r6373 <- 64[%arg1]
	load.64     %r6374 <- 8[%r6373]
	add.64      %r6375 <- %r6374, $1
	store.64    %r6375 -> 8[%r6373]
	load.8      %r6376 <- 0[%r6374]
	cast.32     %r6378 <- (8) %r6376
	phisrc.32   %phi1102 <- %r6378
	br          .L1479

.L1478:
	load.64     %r6380 <- 64[%arg1]
	call.32     %r6381 <- luaZ_fill, %r6380
	phisrc.32   %phi1103 <- %r6381
	br          .L1479

.L1479:
	phi.32      %r6382 <- %phi1102, %phi1103
	store.32    %r6382 -> 0[%arg1]
	phisrc.32   %phi1104(return) <- $283
	br          .L1421

.L1412:
	call        read_string, %arg1, %r6146, %arg2
	phisrc.32   %phi1105(return) <- $286
	br          .L1421

.L1413:
	call        save, %arg1, %r6146
	load.64     %r6392 <- 64[%arg1]
	load.64     %r6393 <- 0[%r6392]
	add.64      %r6394 <- %r6393, $-1
	store.64    %r6394 -> 0[%r6392]
	seta.32     %r6395 <- %r6393, $0
	br          %r6395, .L1480, .L1481

.L1480:
	load.64     %r6397 <- 64[%arg1]
	load.64     %r6398 <- 8[%r6397]
	add.64      %r6399 <- %r6398, $1
	store.64    %r6399 -> 8[%r6397]
	load.8      %r6400 <- 0[%r6398]
	cast.32     %r6402 <- (8) %r6400
	phisrc.32   %phi1106 <- %r6402
	br          .L1482

.L1481:
	load.64     %r6404 <- 64[%arg1]
	call.32     %r6405 <- luaZ_fill, %r6404
	phisrc.32   %phi1107 <- %r6405
	br          .L1482

.L1482:
	phi.32      %r6406 <- %phi1106, %phi1107
	store.32    %r6406 -> 0[%arg1]
	symaddr.64  %r6409 <- <anon symbol:0x62d0012e2388>
	call.32     %r6410 <- check_next, %arg1, %r6409
	br          %r6410, .L1483, .L1484

.L1483:
	symaddr.64  %r6412 <- <anon symbol:0x62d0012e2728>
	call.32     %r6413 <- check_next, %arg1, %r6412
	br          %r6413, .L1485, .L1486

.L1485:
	phisrc.32   %phi1108(return) <- $279
	br          .L1421

.L1486:
	phisrc.32   %phi1109(return) <- $278
	br          .L1421

.L1484:
	call.64     %r6414 <- __ctype_b_loc
	load.64     %r6415 <- 0[%r6414]
	load.32     %r6417 <- 0[%arg1]
	scast.64    %r6419 <- (32) %r6417
	muls.64     %r6420 <- %r6419, $2
	add.64      %r6421 <- %r6415, %r6420
	load.16     %r6422 <- 0[%r6421]
	cast.32     %r6423 <- (16) %r6422
	and.32      %r6424 <- %r6423, $0x800
	br          %r6424, .L1490, .L1489

.L1489:
	phisrc.32   %phi1110(return) <- $46
	br          .L1421

.L1490:
	call        read_numeral, %arg1, %arg2
	phisrc.32   %phi1111(return) <- $284
	br          .L1421

.L1414:
	phisrc.32   %phi1112(return) <- $287
	br          .L1421

.L1415:
	call.64     %r6427 <- __ctype_b_loc
	load.64     %r6428 <- 0[%r6427]
	load.32     %r6430 <- 0[%arg1]
	scast.64    %r6432 <- (32) %r6430
	muls.64     %r6433 <- %r6432, $2
	add.64      %r6434 <- %r6428, %r6433
	load.16     %r6435 <- 0[%r6434]
	cast.32     %r6436 <- (16) %r6435
	and.32      %r6437 <- %r6436, $0x2000
	br          %r6437, .L1492, .L1493

.L1492:
	load.64     %r6439 <- 64[%arg1]
	load.64     %r6440 <- 0[%r6439]
	add.64      %r6441 <- %r6440, $-1
	store.64    %r6441 -> 0[%r6439]
	seta.32     %r6442 <- %r6440, $0
	br          %r6442, .L1494, .L1495

.L1494:
	load.64     %r6444 <- 64[%arg1]
	load.64     %r6445 <- 8[%r6444]
	add.64      %r6446 <- %r6445, $1
	store.64    %r6446 -> 8[%r6444]
	load.8      %r6447 <- 0[%r6445]
	cast.32     %r6449 <- (8) %r6447
	phisrc.32   %phi1113 <- %r6449
	br          .L1496

.L1495:
	load.64     %r6451 <- 64[%arg1]
	call.32     %r6452 <- luaZ_fill, %r6451
	phisrc.32   %phi1114 <- %r6452
	br          .L1496

.L1496:
	phi.32      %r6453 <- %phi1113, %phi1114
	store.32    %r6453 -> 0[%arg1]
	br          .L1398

.L1493:
	call.64     %r6455 <- __ctype_b_loc
	load.64     %r6456 <- 0[%r6455]
	load.32     %r6458 <- 0[%arg1]
	scast.64    %r6460 <- (32) %r6458
	muls.64     %r6461 <- %r6460, $2
	add.64      %r6462 <- %r6456, %r6461
	load.16     %r6463 <- 0[%r6462]
	cast.32     %r6464 <- (16) %r6463
	and.32      %r6465 <- %r6464, $0x800
	br          %r6465, .L1498, .L1499

.L1498:
	call        read_numeral, %arg1, %arg2
	phisrc.32   %phi1115(return) <- $284
	br          .L1421

.L1499:
	call.64     %r6468 <- __ctype_b_loc
	load.64     %r6469 <- 0[%r6468]
	load.32     %r6471 <- 0[%arg1]
	scast.64    %r6473 <- (32) %r6471
	muls.64     %r6474 <- %r6473, $2
	add.64      %r6475 <- %r6469, %r6474
	load.16     %r6476 <- 0[%r6475]
	cast.32     %r6477 <- (16) %r6476
	and.32      %r6478 <- %r6477, $0x400
	phisrc.32   %phi1126 <- %r6471
	br          %r6478, .L1504, .L1503

.L1503:
	seteq.32    %r6481 <- %r6471, $95
	phisrc.32   %phi1127 <- %r6471
	br          %r6481, .L1504, .L1502

.L1504:
	phi.32      %r6484 <- %phi1126, %phi1127, %phi1128, %phi1129
	call        save, %arg1, %r6484
	load.64     %r6486 <- 64[%arg1]
	load.64     %r6487 <- 0[%r6486]
	add.64      %r6488 <- %r6487, $-1
	store.64    %r6488 -> 0[%r6486]
	seta.32     %r6489 <- %r6487, $0
	br          %r6489, .L1507, .L1508

.L1507:
	load.64     %r6491 <- 64[%arg1]
	load.64     %r6492 <- 8[%r6491]
	add.64      %r6493 <- %r6492, $1
	store.64    %r6493 -> 8[%r6491]
	load.8      %r6494 <- 0[%r6492]
	cast.32     %r6496 <- (8) %r6494
	phisrc.32   %phi1116 <- %r6496
	br          .L1509

.L1508:
	load.64     %r6498 <- 64[%arg1]
	call.32     %r6499 <- luaZ_fill, %r6498
	phisrc.32   %phi1117 <- %r6499
	br          .L1509

.L1509:
	phi.32      %r6500 <- %phi1116, %phi1117
	store.32    %r6500 -> 0[%arg1]
	call.64     %r6502 <- __ctype_b_loc
	load.64     %r6503 <- 0[%r6502]
	load.32     %r6505 <- 0[%arg1]
	scast.64    %r6507 <- (32) %r6505
	muls.64     %r6508 <- %r6507, $2
	add.64      %r6509 <- %r6503, %r6508
	load.16     %r6510 <- 0[%r6509]
	cast.32     %r6511 <- (16) %r6510
	and.32      %r6512 <- %r6511, $8
	phisrc.32   %phi1128 <- %r6505
	phisrc.32   %phi1129 <- %r6505
	br          %r6512, .L1504, .L1510

.L1510:
	seteq.32    %r6515 <- %r6505, $95
	br          %r6515, .L1504, .L1506

.L1506:
	load.64     %r6518 <- 72[%arg1]
	load.64     %r6519 <- 0[%r6518]
	load.64     %r6522 <- 8[%r6518]
	call.64     %r6523 <- luaX_newstring, %arg1, %r6519, %r6522
	load.8      %r6525 <- 10[%r6523]
	cast.32     %r6526 <- (8) %r6525
	setgt.32    %r6527 <- %r6526, $0
	br          %r6527, .L1511, .L1512

.L1511:
	add.32      %r6532 <- %r6526, $256
	phisrc.32   %phi1118(return) <- %r6532
	br          .L1421

.L1512:
	store.64    %r6523 -> 0[%arg2]
	phisrc.32   %phi1119(return) <- $285
	br          .L1421

.L1502:
	load.64     %r6538 <- 64[%arg1]
	load.64     %r6539 <- 0[%r6538]
	add.64      %r6540 <- %r6539, $-1
	store.64    %r6540 -> 0[%r6538]
	seta.32     %r6541 <- %r6539, $0
	br          %r6541, .L1515, .L1516

.L1515:
	load.64     %r6543 <- 64[%arg1]
	load.64     %r6544 <- 8[%r6543]
	add.64      %r6545 <- %r6544, $1
	store.64    %r6545 -> 8[%r6543]
	load.8      %r6546 <- 0[%r6544]
	cast.32     %r6548 <- (8) %r6546
	phisrc.32   %phi1120 <- %r6548
	br          .L1517

.L1516:
	load.64     %r6550 <- 64[%arg1]
	call.32     %r6551 <- luaZ_fill, %r6550
	phisrc.32   %phi1121 <- %r6551
	br          .L1517

.L1517:
	phi.32      %r6552 <- %phi1120, %phi1121
	store.32    %r6552 -> 0[%arg1]
	phisrc.32   %phi1122(return) <- %r6471
	br          .L1421

.L1421:
	phi.32      %r6168 <- %phi1074(return), %phi1079(return), %phi1080(return), %phi1083(return), %phi1086(return), %phi1089(return), %phi1092(return), %phi1095(return), %phi1098(return), %phi1101(return), %phi1104(return), %phi1105(return), %phi1108(return), %phi1109(return), %phi1110(return), %phi1111(return), %phi1112(return), %phi1115(return), %phi1118(return), %phi1119(return), %phi1122(return)
	ret.32      %r6168


luaX_next:
.L1518:
	<entry-point>
	load.32     %r6556 <- 4[%arg1]
	store.32    %r6556 -> 8[%arg1]
	load.32     %r6559 <- 32[%arg1]
	setne.32    %r6560 <- %r6559, $287
	br          %r6560, .L1519, .L1520

.L1519:
	load.128    %r6562 <- 32[%arg1]
	store.128   %r6562 -> 16[%arg1]
	store.32    $287 -> 32[%arg1]
	br          .L1521

.L1520:
	add.64      %r6568 <- %arg1, $24
	call.32     %r6569 <- llex, %arg1, %r6568
	store.32    %r6569 -> 16[%arg1]
	br          .L1521

.L1521:
	ret


luaX_lookahead:
.L1522:
	<entry-point>
	add.64      %r6574 <- %arg1, $40
	call.32     %r6575 <- llex, %arg1, %r6574
	store.32    %r6575 -> 32[%arg1]
	ret


isnumeral:
.L1524:
	<entry-point>
	load.32     %r6578 <- 0[%arg1]
	seteq.32    %r6580 <- %r6578, $5
	br          %r6580, .L1529, .L1527

.L1529:
	load.32     %r6582 <- 16[%arg1]
	seteq.32    %r6583 <- %r6582, $0xffffffff
	br          %r6583, .L1526, .L1527

.L1526:
	load.32     %r6585 <- 20[%arg1]
	seteq.32    %r6586 <- %r6585, $0xffffffff
	phisrc.32   %phi1138 <- %r6586
	br          .L1528

.L1527:
	phisrc.32   %phi1139 <- $0
	br          .L1528

.L1528:
	phi.32      %r6587 <- %phi1138, %phi1139
	ret.32      %r6587


luaK_nil:
.L1530:
	<entry-point>
	load.32     %r6590 <- 48[%arg1]
	load.32     %r6592 <- 52[%arg1]
	setgt.32    %r6593 <- %r6590, %r6592
	br          %r6593, .L1531, .L1532

.L1531:
	br          %r6590, .L1534, .L1533

.L1533:
	load.8      %r6599 <- 74[%arg1]
	cast.32     %r6600 <- (8) %r6599
	setge.32    %r6601 <- %arg2, %r6600
	br          %r6601, .L1537, .L1532

.L1534:
	load.64     %r6603 <- 0[%arg1]
	load.64     %r6604 <- 24[%r6603]
	add.32      %r6607 <- %r6590, $-1
	scast.64    %r6608 <- (32) %r6607
	muls.64     %r6609 <- %r6608, $4
	add.64      %r6610 <- %r6604, %r6609
	load.32     %r6612 <- 0[%r6610]
	and.32      %r6614 <- %r6612, $63
	seteq.32    %r6617 <- %r6614, $3
	br          %r6617, .L1539, .L1532

.L1539:
	lsr.32      %r6620 <- %r6612, $6
	and.32      %r6621 <- %r6620, $255
	lsr.32      %r6625 <- %r6612, $23
	and.32      %r6626 <- %r6625, $511
	setle.32    %r6630 <- %r6621, %arg2
	add.32      %r6633 <- %r6626, $1
	setle.32    %r6634 <- %arg2, %r6633
	and-bool.32 %r6635 <- %r6630, %r6634
	br          %r6635, .L1541, .L1532

.L1541:
	add.32      %r6638 <- %arg2, %arg3
	add.32      %r6639 <- %r6638, $-1
	setgt.32    %r6641 <- %r6639, %r6626
	br          %r6641, .L1543, .L1537

.L1543:
	and.32      %r6644 <- %r6612, $0x7fffff
	shl.32      %r6650 <- %r6639, $23
	and.32      %r6651 <- %r6650, $0xff800000
	or.32       %r6652 <- %r6644, %r6651
	store.32    %r6652 -> 0[%r6610]
	br          .L1537

.L1532:
	add.32      %r6658 <- %arg2, %arg3
	add.32      %r6659 <- %r6658, $-1
	call.32     %r6660 <- luaK_codeABC, %arg1, $3, %arg2, %r6659, $0
	br          .L1537

.L1537:
	ret


luaK_jump:
.L1545:
	<entry-point>
	load.32     %r6662 <- 56[%arg1]
	store.32    $0xffffffff -> 56[%arg1]
	call.32     %r6665 <- luaK_codeABx, %arg1, $22, $0, $0x1fffe
	store.32    %r6665 -> 0[j]
	symaddr.64  %r6667 <- j
	call        luaK_concat, %arg1, %r6667, %r6662
	load.32     %r6669 <- 0[j]
	ret.32      %r6669


luaK_ret:
.L1547:
	<entry-point>
	add.32      %r6674 <- %arg3, $1
	call.32     %r6675 <- luaK_codeABC, %arg1, $30, %arg2, %r6674, $0
	ret


condjump:
.L1549:
	<entry-point>
	call.32     %r6681 <- luaK_codeABC, %arg1, %arg2, %arg3, %arg4, %arg5
	call.32     %r6683 <- luaK_jump, %arg1
	ret.32      %r6683


fixjump:
.L1551:
	<entry-point>
	load.64     %r6686 <- 0[%arg1]
	load.64     %r6687 <- 24[%r6686]
	scast.64    %r6689 <- (32) %arg2
	muls.64     %r6690 <- %r6689, $4
	add.64      %r6691 <- %r6687, %r6690
	add.32      %r6694 <- %arg2, $1
	sub.32      %r6695 <- %arg3, %r6694
	call.32     %r6697 <- abs, %r6695
	setgt.32    %r6698 <- %r6697, $0x1ffff
	br          %r6698, .L1552, .L1553

.L1552:
	load.64     %r6700 <- 24[%arg1]
	symaddr.64  %r6701 <- <anon symbol:0x62d0012f6470>
	call        luaX_syntaxerror, %r6700, %r6701
	br          .L1553

.L1553:
	load.32     %r6703 <- 0[%r6691]
	and.32      %r6704 <- %r6703, $0x3fff
	add.32      %r6706 <- %r6695, $0x1ffff
	shl.32      %r6709 <- %r6706, $14
	and.32      %r6710 <- %r6709, $0xffffc000
	or.32       %r6711 <- %r6704, %r6710
	store.32    %r6711 -> 0[%r6691]
	ret


luaK_getlabel:
.L1555:
	<entry-point>
	load.32     %r6714 <- 48[%arg1]
	store.32    %r6714 -> 52[%arg1]
	ret.32      %r6714


getjump:
.L1557:
	<entry-point>
	load.64     %r6720 <- 0[%arg1]
	load.64     %r6721 <- 24[%r6720]
	scast.64    %r6723 <- (32) %arg2
	muls.64     %r6724 <- %r6723, $4
	add.64      %r6725 <- %r6721, %r6724
	load.32     %r6726 <- 0[%r6725]
	lsr.32      %r6727 <- %r6726, $14
	and.32      %r6728 <- %r6727, $0x3ffff
	add.32      %r6730 <- %r6728, $0xfffffffffffe0001
	seteq.32    %r6732 <- %r6730, $0xffffffff
	br          %r6732, .L1558, .L1559

.L1558:
	phisrc.32   %phi1148(return) <- $0xffffffff
	br          .L1560

.L1559:
	add.32      %r6735 <- %arg2, $1
	add.32      %r6737 <- %r6735, %r6730
	phisrc.32   %phi1149(return) <- %r6737
	br          .L1560

.L1560:
	phi.32      %r6733 <- %phi1148(return), %phi1149(return)
	ret.32      %r6733


getjumpcontrol:
.L1562:
	<entry-point>
	load.64     %r6739 <- 0[%arg1]
	load.64     %r6740 <- 24[%r6739]
	scast.64    %r6742 <- (32) %arg2
	muls.64     %r6743 <- %r6742, $4
	add.64      %r6744 <- %r6740, %r6743
	setge.32    %r6746 <- %arg2, $1
	br          %r6746, .L1565, .L1564

.L1565:
	symaddr.64  %r6747 <- luaP_opmodes
	load.32     %r6750 <- -4[%r6744]
	and.32      %r6752 <- %r6750, $63
	scast.64    %r6754 <- (32) %r6752
	add.64      %r6755 <- %r6747, %r6754
	load.8      %r6756 <- 0[%r6755]
	cast.32     %r6757 <- (8) %r6756
	and.32      %r6758 <- %r6757, $128
	br          %r6758, .L1563, .L1564

.L1563:
	add.64      %r6760 <- %r6744, $-4
	phisrc.64   %phi1150(return) <- %r6760
	br          .L1566

.L1564:
	phisrc.64   %phi1151(return) <- %r6744
	br          .L1566

.L1566:
	phi.64      %r6761 <- %phi1150(return), %phi1151(return)
	ret.64      %r6761


need_value:
.L1568:
	<entry-point>
	phisrc.32   %phi1156(list) <- %arg2
	br          .L1572

.L1572:
	phi.32      %r6763(list) <- %phi1156(list), %phi1157(list)
	setne.32    %r6764 <- %r6763(list), $0xffffffff
	br          %r6764, .L1569, .L1571

.L1569:
	call.64     %r6767 <- getjumpcontrol, %arg1, %r6763(list)
	load.32     %r6768 <- 0[%r6767]
	and.32      %r6771 <- %r6768, $63
	setne.32    %r6774 <- %r6771, $27
	br          %r6774, .L1573, .L1570

.L1573:
	phisrc.32   %phi1152(return) <- $1
	br          .L1575

.L1570:
	call.32     %r6778 <- getjump, %arg1, %r6763(list)
	phisrc.32   %phi1157(list) <- %r6778
	br          .L1572

.L1571:
	phisrc.32   %phi1153(return) <- $0
	br          .L1575

.L1575:
	phi.32      %r6775 <- %phi1152(return), %phi1153(return)
	ret.32      %r6775


patchtestreg:
.L1576:
	<entry-point>
	call.64     %r6781 <- getjumpcontrol, %arg1, %arg2
	load.32     %r6783 <- 0[%r6781]
	and.32      %r6785 <- %r6783, $63
	setne.32    %r6788 <- %r6785, $27
	br          %r6788, .L1577, .L1578

.L1577:
	phisrc.32   %phi1158(return) <- $0
	br          .L1579

.L1578:
	setne.32    %r6791 <- %arg3, $255
	br          %r6791, .L1582, .L1581

.L1582:
	lsr.32      %r6795 <- %r6783, $23
	and.32      %r6796 <- %r6795, $511
	setne.32    %r6798 <- %arg3, %r6796
	br          %r6798, .L1580, .L1581

.L1580:
	and.32      %r6801 <- %r6783, $0xffffc03f
	shl.32      %r6804 <- %arg3, $6
	and.32      %r6805 <- %r6804, $0x3fc0
	or.32       %r6806 <- %r6801, %r6805
	store.32    %r6806 -> 0[%r6781]
	br          .L1583

.L1581:
	lsr.32      %r6810 <- %r6783, $23
	and.32      %r6811 <- %r6810, $511
	shl.32      %r6814 <- %r6811, $6
	or.32       %r6815 <- %r6814, $26
	lsr.32      %r6819 <- %r6783, $14
	and.32      %r6820 <- %r6819, $511
	shl.32      %r6823 <- %r6820, $14
	or.32       %r6824 <- %r6815, %r6823
	store.32    %r6824 -> 0[%r6781]
	br          .L1583

.L1583:
	phisrc.32   %phi1159(return) <- $1
	br          .L1579

.L1579:
	phi.32      %r6789 <- %phi1158(return), %phi1159(return)
	ret.32      %r6789


removevalues:
.L1584:
	<entry-point>
	phisrc.32   %phi1166(list) <- %arg2
	br          .L1588

.L1588:
	phi.32      %r6826(list) <- %phi1166(list), %phi1167(list)
	setne.32    %r6827 <- %r6826(list), $0xffffffff
	br          %r6827, .L1585, .L1587

.L1585:
	call.32     %r6830 <- patchtestreg, %arg1, %r6826(list), $255
	call.32     %r6833 <- getjump, %arg1, %r6826(list)
	phisrc.32   %phi1167(list) <- %r6833
	br          .L1588

.L1587:
	ret


patchlistaux:
.L1589:
	<entry-point>
	phisrc.32   %phi1171(list) <- %arg2
	br          .L1593

.L1593:
	phi.32      %r6834(list) <- %phi1171(list), %phi1172(list)
	setne.32    %r6835 <- %r6834(list), $0xffffffff
	br          %r6835, .L1590, .L1592

.L1590:
	call.32     %r6838 <- getjump, %arg1, %r6834(list)
	call.32     %r6842 <- patchtestreg, %arg1, %r6834(list), %arg4
	br          %r6842, .L1594, .L1595

.L1594:
	call        fixjump, %arg1, %r6834(list), %arg3
	br          .L1596

.L1595:
	call        fixjump, %arg1, %r6834(list), %arg5
	br          .L1596

.L1596:
	phisrc.32   %phi1172(list) <- %r6838
	br          .L1593

.L1592:
	ret


dischargejpc:
.L1597:
	<entry-point>
	load.32     %r6852 <- 56[%arg1]
	load.32     %r6854 <- 48[%arg1]
	call        patchlistaux, %arg1, %r6852, %r6854, $255, %r6854
	store.32    $0xffffffff -> 56[%arg1]
	ret


luaK_patchlist:
.L1599:
	<entry-point>
	load.32     %r6860 <- 48[%arg1]
	seteq.32    %r6861 <- %arg3, %r6860
	br          %r6861, .L1600, .L1601

.L1600:
	call        luaK_patchtohere, %arg1, %arg2
	br          .L1602

.L1601:
	call        patchlistaux, %arg1, %arg2, %arg3, $255, %arg3
	br          .L1602

.L1602:
	ret


luaK_patchtohere:
.L1603:
	<entry-point>
	call.32     %r6869 <- luaK_getlabel, %arg1
	add.64      %r6872 <- %arg1, $56
	call        luaK_concat, %arg1, %r6872, %arg2
	ret


luaK_concat:
.L1605:
	<entry-point>
	seteq.32    %r6875 <- %arg3, $0xffffffff
	br          %r6875, .L1608, .L1607

.L1607:
	load.32     %r6877 <- 0[%arg2]
	seteq.32    %r6878 <- %r6877, $0xffffffff
	br          %r6878, .L1610, .L1611

.L1610:
	store.32    %arg3 -> 0[%arg2]
	br          .L1608

.L1611:
	phisrc.32   %phi1174(list) <- %r6877
	br          .L1616

.L1616:
	phi.32      %r6884(list) <- %phi1174(list), %phi1175(list)
	call.32     %r6885 <- getjump, %arg1, %r6884(list)
	setne.32    %r6886 <- %r6885, $0xffffffff
	br          %r6886, .L1613, .L1615

.L1613:
	phisrc.32   %phi1175(list) <- %r6885
	br          .L1616

.L1615:
	call        fixjump, %arg1, %r6884(list), %arg3
	br          .L1608

.L1608:
	ret


luaK_checkstack:
.L1617:
	<entry-point>
	load.32     %r6892 <- 60[%arg1]
	add.32      %r6894 <- %r6892, %arg2
	load.64     %r6897 <- 0[%arg1]
	load.8      %r6898 <- 115[%r6897]
	cast.32     %r6899 <- (8) %r6898
	setgt.32    %r6900 <- %r6894, %r6899
	phisrc.64   %phi1177 <- %r6897
	br          %r6900, .L1618, .L1619

.L1618:
	setge.32    %r6902 <- %r6894, $250
	br          %r6902, .L1620, .L1621

.L1620:
	load.64     %r6904 <- 24[%arg1]
	symaddr.64  %r6905 <- <anon symbol:0x62d0012f92a8>
	call        luaX_syntaxerror, %r6904, %r6905
	br          .L1621

.L1621:
	scast.8     %r6907 <- (32) %r6894
	load.64     %r6909 <- 0[%arg1]
	store.8     %r6907 -> 115[%r6909]
	br          .L1619

.L1619:
	ret


luaK_reserveregs:
.L1622:
	<entry-point>
	call        luaK_checkstack, %arg1, %arg2
	load.32     %r6914 <- 60[%arg1]
	add.32      %r6916 <- %r6914, %arg2
	store.32    %r6916 -> 60[%arg1]
	ret


freereg:
.L1624:
	<entry-point>
	and.32      %r6919 <- %arg2, $256
	br          %r6919, .L1626, .L1627

.L1627:
	load.8      %r6922 <- 74[%arg1]
	cast.32     %r6923 <- (8) %r6922
	setge.32    %r6924 <- %arg2, %r6923
	br          %r6924, .L1625, .L1626

.L1625:
	load.32     %r6926 <- 60[%arg1]
	add.32      %r6927 <- %r6926, $-1
	store.32    %r6927 -> 60[%arg1]
	br          .L1626

.L1626:
	ret


freeexp:
.L1628:
	<entry-point>
	load.32     %r6929 <- 0[%arg2]
	seteq.32    %r6931 <- %r6929, $12
	br          %r6931, .L1629, .L1630

.L1629:
	load.32     %r6934 <- 8[%arg2]
	call        freereg, %arg1, %r6934
	br          .L1630

.L1630:
	ret


addk:
.L1631:
	<entry-point>
	load.64     %r6936 <- 32[%arg1]
	load.64     %r6939 <- 8[%arg1]
	call.64     %r6941 <- luaH_set, %r6936, %r6939, %arg2
	load.64     %r6943 <- 0[%arg1]
	load.32     %r6945(oldsize) <- 76[%r6943]
	load.32     %r6947 <- 8[%r6941]
	seteq.32    %r6948 <- %r6947, $3
	phisrc.32   %phi1181(oldsize) <- %r6945(oldsize)
	br          %r6948, .L1632, .L1633

.L1632:
	load.64     %r6950 <- 0[%r6941]
	cast.32     %r6951 <- (64) %r6950
	phisrc.32   %phi1178(return) <- %r6951
	br          .L1634

.L1633:
	load.32     %r6955 <- 64[%arg1]
	fpcast.64   %r6956 <- (32) %r6955
	store.64    %r6956 -> 0[%r6941]
	store.32    $3 -> 8[%r6941]
	load.32     %r6960 <- 64[%arg1]
	add.32      %r6961 <- %r6960, $1
	load.32     %r6963 <- 76[%r6943]
	setgt.32    %r6964 <- %r6961, %r6963
	phisrc.32   %phi1184 <- %r6960
	phisrc.32   %phi1185 <- %r6963
	phisrc.32   %phi1186 <- %r6960
	phisrc.32   %phi1187 <- %r6963
	br          %r6964, .L1636, .L1641

.L1636:
	load.64     %r6967 <- 16[%r6943]
	cast.64     %r6968 <- (64) %r6967
	add.64      %r6970 <- %r6943, $76
	symaddr.64  %r6971 <- <anon symbol:0x62d001307ba8>
	call.64     %r6972 <- luaM_growaux_, %r6936, %r6968, %r6970, $16, $0x3ffff, %r6971
	ptrcast.64  %r6973 <- (64) %r6972
	store.64    %r6973 -> 16[%r6943]
	br          .L1641

.L1641:
	phi.32      %r6975(oldsize) <- %phi1181(oldsize), %phi1182(oldsize)
	load.32     %r6977 <- 76[%r6943]
	setlt.32    %r6978 <- %r6975(oldsize), %r6977
	br          %r6978, .L1638, .L1640

.L1638:
	load.64     %r6980 <- 16[%r6943]
	add.32      %r6982 <- %r6975(oldsize), $1
	scast.64    %r6983 <- (32) %r6975(oldsize)
	muls.64     %r6984 <- %r6983, $16
	add.64      %r6985 <- %r6980, %r6984
	store.32    $0 -> 8[%r6985]
	phisrc.32   %phi1182(oldsize) <- %r6982
	br          .L1641

.L1640:
	load.64     %r6988 <- 16[%r6943]
	load.32     %r6990 <- 64[%arg1]
	scast.64    %r6991 <- (32) %r6990
	muls.64     %r6992 <- %r6991, $16
	add.64      %r6993 <- %r6988, %r6992
	load.64     %r6995 <- 0[%arg3]
	store.64    %r6995 -> 0[%r6993]
	load.32     %r6998 <- 8[%arg3]
	store.32    %r6998 -> 8[%r6993]
	load.32     %r7002 <- 8[%arg3]
	setge.32    %r7003 <- %r7002, $4
	br          %r7003, .L1645, .L1643

.L1645:
	load.64     %r7005 <- 0[%arg3]
	load.8      %r7006 <- 9[%r7005]
	cast.32     %r7007 <- (8) %r7006
	and.32      %r7008 <- %r7007, $3
	br          %r7008, .L1644, .L1643

.L1644:
	ptrcast.64  %r7010 <- (64) %r6943
	load.8      %r7011 <- 9[%r7010]
	cast.32     %r7012 <- (8) %r7011
	and.32      %r7013 <- %r7012, $4
	br          %r7013, .L1642, .L1643

.L1642:
	call        luaC_barrierf, %r6936, %r7010, %r7005
	br          .L1643

.L1643:
	load.32     %r7020 <- 64[%arg1]
	add.32      %r7021 <- %r7020, $1
	store.32    %r7021 -> 64[%arg1]
	phisrc.32   %phi1179(return) <- %r7020
	br          .L1634

.L1634:
	phi.32      %r6952 <- %phi1178(return), %phi1179(return)
	ret.32      %r6952


luaK_stringK:
.L1646:
	<entry-point>
	ptrcast.64  %r7024 <- (64) %arg2
	store.64    %r7024 -> 0[o]
	store.32    $4 -> 8[o]
	symaddr.64  %r7028 <- o
	call.32     %r7030 <- addk, %arg1, %r7028, %r7028
	ret.32      %r7030


luaK_numberK:
.L1648:
	<entry-point>
	store.64    %arg2 -> 0[o]
	store.32    $3 -> 8[o]
	symaddr.64  %r7037 <- o
	call.32     %r7039 <- addk, %arg1, %r7037, %r7037
	ret.32      %r7039


boolK:
.L1650:
	<entry-point>
	store.32    %arg2 -> 0[o]
	store.32    $1 -> 8[o]
	symaddr.64  %r7046 <- o
	call.32     %r7048 <- addk, %arg1, %r7046, %r7046
	ret.32      %r7048


nilK:
.L1652:
	<entry-point>
	store.32    $0 -> 8[v]
	load.64     %r7052 <- 8[%arg1]
	ptrcast.64  %r7053 <- (64) %r7052
	store.64    %r7053 -> 0[k]
	store.32    $5 -> 8[k]
	symaddr.64  %r7057 <- k
	symaddr.64  %r7058 <- v
	call.32     %r7059 <- addk, %arg1, %r7057, %r7058
	ret.32      %r7059


luaK_setreturns:
.L1654:
	<entry-point>
	load.32     %r7062 <- 0[%arg2]
	seteq.32    %r7064 <- %r7062, $13
	br          %r7064, .L1655, .L1656

.L1655:
	load.64     %r7066 <- 0[%arg1]
	load.64     %r7067 <- 24[%r7066]
	load.32     %r7069 <- 8[%arg2]
	scast.64    %r7070 <- (32) %r7069
	muls.64     %r7071 <- %r7070, $4
	add.64      %r7072 <- %r7067, %r7071
	load.32     %r7073 <- 0[%r7072]
	and.32      %r7074 <- %r7073, $0xff803fff
	add.32      %r7076 <- %arg3, $1
	shl.32      %r7078 <- %r7076, $14
	and.32      %r7079 <- %r7078, $0x7fc000
	or.32       %r7080 <- %r7074, %r7079
	scast.64    %r7086 <- (32) %r7069
	muls.64     %r7087 <- %r7086, $4
	add.64      %r7088 <- %r7067, %r7087
	store.32    %r7080 -> 0[%r7088]
	br          .L1657

.L1656:
	seteq.32    %r7092 <- %r7062, $14
	br          %r7092, .L1658, .L1657

.L1658:
	load.64     %r7094 <- 0[%arg1]
	load.64     %r7095 <- 24[%r7094]
	load.32     %r7097 <- 8[%arg2]
	scast.64    %r7098 <- (32) %r7097
	muls.64     %r7099 <- %r7098, $4
	add.64      %r7100 <- %r7095, %r7099
	load.32     %r7101 <- 0[%r7100]
	and.32      %r7102 <- %r7101, $0x7fffff
	add.32      %r7104 <- %arg3, $1
	shl.32      %r7106 <- %r7104, $23
	and.32      %r7107 <- %r7106, $0xff800000
	or.32       %r7108 <- %r7102, %r7107
	scast.64    %r7114 <- (32) %r7097
	muls.64     %r7115 <- %r7114, $4
	add.64      %r7116 <- %r7095, %r7115
	store.32    %r7108 -> 0[%r7116]
	load.64     %r7118 <- 0[%arg1]
	load.64     %r7119 <- 24[%r7118]
	load.32     %r7121 <- 8[%arg2]
	scast.64    %r7122 <- (32) %r7121
	muls.64     %r7123 <- %r7122, $4
	add.64      %r7124 <- %r7119, %r7123
	load.32     %r7125 <- 0[%r7124]
	and.32      %r7126 <- %r7125, $0xffffc03f
	load.32     %r7128 <- 60[%arg1]
	shl.32      %r7130 <- %r7128, $6
	and.32      %r7131 <- %r7130, $0x3fc0
	or.32       %r7132 <- %r7126, %r7131
	scast.64    %r7138 <- (32) %r7121
	muls.64     %r7139 <- %r7138, $4
	add.64      %r7140 <- %r7119, %r7139
	store.32    %r7132 -> 0[%r7140]
	call        luaK_reserveregs, %arg1, $1
	br          .L1657

.L1657:
	ret


luaK_setoneret:
.L1660:
	<entry-point>
	load.32     %r7143 <- 0[%arg2]
	seteq.32    %r7145 <- %r7143, $13
	br          %r7145, .L1661, .L1662

.L1661:
	store.32    $12 -> 0[%arg2]
	load.64     %r7148 <- 0[%arg1]
	load.64     %r7149 <- 24[%r7148]
	load.32     %r7151 <- 8[%arg2]
	scast.64    %r7152 <- (32) %r7151
	muls.64     %r7153 <- %r7152, $4
	add.64      %r7154 <- %r7149, %r7153
	load.32     %r7155 <- 0[%r7154]
	lsr.32      %r7156 <- %r7155, $6
	and.32      %r7157 <- %r7156, $255
	store.32    %r7157 -> 8[%arg2]
	br          .L1663

.L1662:
	seteq.32    %r7163 <- %r7143, $14
	br          %r7163, .L1664, .L1663

.L1664:
	load.64     %r7165 <- 0[%arg1]
	load.64     %r7166 <- 24[%r7165]
	load.32     %r7168 <- 8[%arg2]
	scast.64    %r7169 <- (32) %r7168
	muls.64     %r7170 <- %r7169, $4
	add.64      %r7171 <- %r7166, %r7170
	load.32     %r7172 <- 0[%r7171]
	and.32      %r7173 <- %r7172, $0x7fffff
	or.32       %r7174 <- %r7173, $0x1000000
	scast.64    %r7180 <- (32) %r7168
	muls.64     %r7181 <- %r7180, $4
	add.64      %r7182 <- %r7166, %r7181
	store.32    %r7174 -> 0[%r7182]
	store.32    $11 -> 0[%arg2]
	br          .L1663

.L1663:
	ret


luaK_dischargevars:
.L1666:
	<entry-point>
	load.32     %r7185 <- 0[%arg2]
	switch      %r7185, 6 -> .L1668, 7 -> .L1669, 8 -> .L1670, 9 -> .L1671, 13 -> .L1673, 14 -> .L1673, default -> .L1667

.L1668:
	store.32    $12 -> 0[%arg2]
	br          .L1667

.L1669:
	load.32     %r7189 <- 8[%arg2]
	call.32     %r7190 <- luaK_codeABC, %arg1, $4, $0, %r7189, $0
	store.32    %r7190 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1667

.L1670:
	load.32     %r7195 <- 8[%arg2]
	call.32     %r7197 <- luaK_codeABx, %arg1, $5, $0, %r7195
	store.32    %r7197 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1667

.L1671:
	load.32     %r7202 <- 12[%arg2]
	call        freereg, %arg1, %r7202
	load.32     %r7205 <- 8[%arg2]
	call        freereg, %arg1, %r7205
	load.32     %r7208 <- 8[%arg2]
	load.32     %r7210 <- 12[%arg2]
	call.32     %r7211 <- luaK_codeABC, %arg1, $6, $0, %r7208, %r7210
	store.32    %r7211 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1667

.L1673:
	call        luaK_setoneret, %arg1, %arg2
	br          .L1667

.L1667:
	ret


code_label:
.L1675:
	<entry-point>
	call.32     %r7217 <- luaK_getlabel, %arg1
	call.32     %r7222 <- luaK_codeABC, %arg1, $2, %arg2, %arg3, %arg4
	ret.32      %r7222


discharge2reg:
.L1677:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7227 <- 0[%arg2]
	switch      %r7227, 1 -> .L1679, 2 -> .L1681, 3 -> .L1681, 4 -> .L1682, 5 -> .L1683, 11 -> .L1684, 12 -> .L1685, default -> .L1689

.L1679:
	call        luaK_nil, %arg1, %arg3, $1
	br          .L1678

.L1681:
	seteq.32    %r7235 <- %r7227, $2
	call.32     %r7236 <- luaK_codeABC, %arg1, $2, %arg3, %r7235, $0
	br          .L1678

.L1682:
	load.32     %r7240 <- 8[%arg2]
	call.32     %r7242 <- luaK_codeABx, %arg1, $1, %arg3, %r7240
	br          .L1678

.L1683:
	load.64     %r7247 <- 8[%arg2]
	call.32     %r7248 <- luaK_numberK, %arg1, %r7247
	call.32     %r7250 <- luaK_codeABx, %arg1, $1, %arg3, %r7248
	br          .L1678

.L1684:
	load.64     %r7252 <- 0[%arg1]
	load.64     %r7253 <- 24[%r7252]
	load.32     %r7255 <- 8[%arg2]
	scast.64    %r7256 <- (32) %r7255
	muls.64     %r7257 <- %r7256, $4
	add.64      %r7258 <- %r7253, %r7257
	load.32     %r7260 <- 0[%r7258]
	and.32      %r7261 <- %r7260, $0xffffc03f
	shl.32      %r7264 <- %arg3, $6
	and.32      %r7265 <- %r7264, $0x3fc0
	or.32       %r7266 <- %r7261, %r7265
	store.32    %r7266 -> 0[%r7258]
	br          .L1678

.L1685:
	load.32     %r7270 <- 8[%arg2]
	setne.32    %r7271 <- %arg3, %r7270
	br          %r7271, .L1687, .L1678

.L1687:
	call.32     %r7276 <- luaK_codeABC, %arg1, $0, %arg3, %r7270, $0
	br          .L1678

.L1678:
	store.32    %arg3 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	br          .L1689

.L1689:
	ret


discharge2anyreg:
.L1690:
	<entry-point>
	load.32     %r7281 <- 0[%arg2]
	setne.32    %r7283 <- %r7281, $12
	br          %r7283, .L1691, .L1692

.L1691:
	call        luaK_reserveregs, %arg1, $1
	load.32     %r7288 <- 60[%arg1]
	add.32      %r7289 <- %r7288, $-1
	call        discharge2reg, %arg1, %arg2, %r7289
	br          .L1692

.L1692:
	ret


exp2reg:
.L1693:
	<entry-point>
	call        discharge2reg, %arg1, %arg2, %arg3
	load.32     %r7294 <- 0[%arg2]
	seteq.32    %r7296 <- %r7294, $10
	br          %r7296, .L1694, .L1695

.L1694:
	add.64      %r7299 <- %arg2, $16
	load.32     %r7301 <- 8[%arg2]
	call        luaK_concat, %arg1, %r7299, %r7301
	br          .L1695

.L1695:
	load.32     %r7303 <- 16[%arg2]
	load.32     %r7305 <- 20[%arg2]
	setne.32    %r7306 <- %r7303, %r7305
	br          %r7306, .L1696, .L1697

.L1696:
	call.32     %r7310 <- need_value, %arg1, %r7303
	phisrc.32   %phi1200(p_f) <- $0xffffffff
	phisrc.32   %phi1202(p_t) <- $0xffffffff
	br          %r7310, .L1698, .L1700

.L1700:
	load.32     %r7313 <- 20[%arg2]
	call.32     %r7314 <- need_value, %arg1, %r7313
	br          %r7314, .L1698, .L1699

.L1698:
	load.32     %r7316 <- 0[%arg2]
	seteq.32    %r7318 <- %r7316, $10
	br          %r7318, .L1701, .L1702

.L1701:
	phisrc.32   %phi1198 <- $0xffffffff
	br          .L1703

.L1702:
	call.32     %r7320 <- luaK_jump, %arg1
	phisrc.32   %phi1199 <- %r7320
	br          .L1703

.L1703:
	phi.32      %r7321 <- %phi1198, %phi1199
	call.32     %r7324 <- code_label, %arg1, %arg3, $0, $1
	call.32     %r7327 <- code_label, %arg1, %arg3, $1, $0
	call        luaK_patchtohere, %arg1, %r7321
	phisrc.32   %phi1201(p_f) <- %r7324
	phisrc.32   %phi1203(p_t) <- %r7327
	br          .L1699

.L1699:
	call.32     %r7331 <- luaK_getlabel, %arg1
	load.32     %r7334 <- 20[%arg2]
	phi.32      %r7337 <- %phi1200(p_f), %phi1201(p_f)
	call        patchlistaux, %arg1, %r7334, %r7331, %arg3, %r7337
	load.32     %r7340 <- 16[%arg2]
	phi.32      %r7343 <- %phi1202(p_t), %phi1203(p_t)
	call        patchlistaux, %arg1, %r7340, %r7331, %arg3, %r7343
	br          .L1697

.L1697:
	store.32    $0xffffffff -> 16[%arg2]
	store.32    $0xffffffff -> 20[%arg2]
	store.32    %arg3 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	ret


luaK_exp2nextreg:
.L1705:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	call        luaK_reserveregs, %arg1, $1
	load.32     %r7357 <- 60[%arg1]
	add.32      %r7358 <- %r7357, $-1
	call        exp2reg, %arg1, %arg2, %r7358
	ret


luaK_exp2anyreg:
.L1707:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7362 <- 0[%arg2]
	seteq.32    %r7364 <- %r7362, $12
	br          %r7364, .L1708, .L1709

.L1708:
	load.32     %r7366 <- 16[%arg2]
	load.32     %r7368 <- 20[%arg2]
	setne.32    %r7369 <- %r7366, %r7368
	br          %r7369, .L1711, .L1710

.L1710:
	load.32     %r7371 <- 8[%arg2]
	phisrc.32   %phi1205(return) <- %r7371
	br          .L1712

.L1711:
	load.32     %r7374 <- 8[%arg2]
	load.8      %r7376 <- 74[%arg1]
	cast.32     %r7377 <- (8) %r7376
	setge.32    %r7378 <- %r7374, %r7377
	br          %r7378, .L1713, .L1709

.L1713:
	call        exp2reg, %arg1, %arg2, %r7374
	load.32     %r7384 <- 8[%arg2]
	phisrc.32   %phi1206(return) <- %r7384
	br          .L1712

.L1709:
	call        luaK_exp2nextreg, %arg1, %arg2
	load.32     %r7388 <- 8[%arg2]
	phisrc.32   %phi1207(return) <- %r7388
	br          .L1712

.L1712:
	phi.32      %r7372 <- %phi1205(return), %phi1206(return), %phi1207(return)
	ret.32      %r7372


luaK_exp2val:
.L1715:
	<entry-point>
	load.32     %r7390 <- 16[%arg2]
	load.32     %r7392 <- 20[%arg2]
	setne.32    %r7393 <- %r7390, %r7392
	br          %r7393, .L1716, .L1717

.L1716:
	call.32     %r7396 <- luaK_exp2anyreg, %arg1, %arg2
	br          .L1718

.L1717:
	call        luaK_dischargevars, %arg1, %arg2
	br          .L1718

.L1718:
	ret


luaK_exp2RK:
.L1719:
	<entry-point>
	call        luaK_exp2val, %arg1, %arg2
	load.32     %r7402 <- 0[%arg2]
	switch      %r7402, 1 -> .L1724, 2 -> .L1724, 3 -> .L1724, 4 -> .L1725, 5 -> .L1724, default -> .L1720

.L1724:
	load.32     %r7404 <- 64[%arg1]
	setle.32    %r7405 <- %r7404, $255
	br          %r7405, .L1727, .L1720

.L1727:
	seteq.32    %r7409 <- %r7402, $1
	br          %r7409, .L1729, .L1730

.L1729:
	call.32     %r7411 <- nilK, %arg1
	phisrc.32   %phi1209 <- %r7411
	br          .L1731

.L1730:
	seteq.32    %r7415 <- %r7402, $5
	br          %r7415, .L1732, .L1733

.L1732:
	load.64     %r7418 <- 8[%arg2]
	call.32     %r7419 <- luaK_numberK, %arg1, %r7418
	phisrc.32   %phi1210 <- %r7419
	br          .L1734

.L1733:
	seteq.32    %r7424 <- %r7402, $2
	call.32     %r7425 <- boolK, %arg1, %r7424
	phisrc.32   %phi1211 <- %r7425
	br          .L1734

.L1734:
	phi.32      %r7426 <- %phi1210, %phi1211
	phisrc.32   %phi1212 <- %r7426
	br          .L1731

.L1731:
	phi.32      %r7427 <- %phi1209, %phi1212
	store.32    %r7427 -> 8[%arg2]
	store.32    $4 -> 0[%arg2]
	or.32       %r7432 <- %r7427, $256
	phisrc.32   %phi1213(return) <- %r7432
	br          .L1735

.L1725:
	load.32     %r7435 <- 8[%arg2]
	setle.32    %r7436 <- %r7435, $255
	br          %r7436, .L1737, .L1720

.L1737:
	or.32       %r7439 <- %r7435, $256
	phisrc.32   %phi1214(return) <- %r7439
	br          .L1735

.L1720:
	call.32     %r7442 <- luaK_exp2anyreg, %arg1, %arg2
	phisrc.32   %phi1215(return) <- %r7442
	br          .L1735

.L1735:
	phi.32      %r7433 <- %phi1213(return), %phi1214(return), %phi1215(return)
	ret.32      %r7433


luaK_storevar:
.L1740:
	<entry-point>
	load.32     %r7444 <- 0[%arg2]
	switch      %r7444, 6 -> .L1742, 7 -> .L1743, 8 -> .L1744, 9 -> .L1745, default -> .L1741

.L1742:
	call        freeexp, %arg1, %arg3
	load.32     %r7450 <- 8[%arg2]
	call        exp2reg, %arg1, %arg3, %r7450
	br          .L1747

.L1743:
	call.32     %r7453 <- luaK_exp2anyreg, %arg1, %arg3
	load.32     %r7457 <- 8[%arg2]
	call.32     %r7458 <- luaK_codeABC, %arg1, $8, %r7453, %r7457, $0
	br          .L1741

.L1744:
	call.32     %r7461 <- luaK_exp2anyreg, %arg1, %arg3
	load.32     %r7465 <- 8[%arg2]
	call.32     %r7467 <- luaK_codeABx, %arg1, $7, %r7461, %r7465
	br          .L1741

.L1745:
	call.32     %r7470 <- luaK_exp2RK, %arg1, %arg3
	load.32     %r7473 <- 8[%arg2]
	load.32     %r7475 <- 12[%arg2]
	call.32     %r7477 <- luaK_codeABC, %arg1, $9, %r7473, %r7475, %r7470
	br          .L1741

.L1741:
	call        freeexp, %arg1, %arg3
	br          .L1747

.L1747:
	ret


luaK_self:
.L1748:
	<entry-point>
	call.32     %r7482 <- luaK_exp2anyreg, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	load.32     %r7486 <- 60[%arg1]
	call        luaK_reserveregs, %arg1, $2
	load.32     %r7491 <- 8[%arg2]
	call.32     %r7494 <- luaK_exp2RK, %arg1, %arg3
	call.32     %r7495 <- luaK_codeABC, %arg1, $11, %r7486, %r7491, %r7494
	call        freeexp, %arg1, %arg3
	store.32    %r7486 -> 8[%arg2]
	store.32    $12 -> 0[%arg2]
	ret


invertjump:
.L1750:
	<entry-point>
	load.32     %r7503 <- 8[%arg2]
	call.64     %r7504 <- getjumpcontrol, %arg1, %r7503
	load.32     %r7506 <- 0[%r7504]
	and.32      %r7507 <- %r7506, $0xffffc03f
	lsr.32      %r7510 <- %r7506, $6
	and.32      %r7511 <- %r7510, $255
	seteq.32    %r7513 <- %r7511, $0
	shl.32      %r7515 <- %r7513, $6
	and.32      %r7516 <- %r7515, $0x3fc0
	or.32       %r7517 <- %r7507, %r7516
	store.32    %r7517 -> 0[%r7504]
	ret


jumponcond:
.L1752:
	<entry-point>
	load.32     %r7520 <- 0[%arg2]
	seteq.32    %r7522 <- %r7520, $11
	br          %r7522, .L1753, .L1754

.L1753:
	load.64     %r7524 <- 0[%arg1]
	load.64     %r7525 <- 24[%r7524]
	load.32     %r7527 <- 8[%arg2]
	scast.64    %r7528 <- (32) %r7527
	muls.64     %r7529 <- %r7528, $4
	add.64      %r7530 <- %r7525, %r7529
	load.32     %r7531 <- 0[%r7530]
	and.32      %r7534 <- %r7531, $63
	seteq.32    %r7537 <- %r7534, $19
	br          %r7537, .L1755, .L1754

.L1755:
	load.32     %r7539 <- 48[%arg1]
	add.32      %r7540 <- %r7539, $-1
	store.32    %r7540 -> 48[%arg1]
	lsr.32      %r7543 <- %r7531, $23
	and.32      %r7544 <- %r7543, $511
	seteq.32    %r7547 <- %arg3, $0
	call.32     %r7548 <- condjump, %arg1, $26, %r7544, $0, %r7547
	phisrc.32   %phi1223(return) <- %r7548
	br          .L1757

.L1754:
	call        discharge2anyreg, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	load.32     %r7556 <- 8[%arg2]
	call.32     %r7558 <- condjump, %arg1, $27, $255, %r7556, %arg3
	phisrc.32   %phi1224(return) <- %r7558
	br          .L1757

.L1757:
	phi.32      %r7549 <- %phi1223(return), %phi1224(return)
	ret.32      %r7549


luaK_goiftrue:
.L1758:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7562 <- 0[%arg2]
	switch      %r7562, 2 -> .L1762, 4 -> .L1762, 5 -> .L1762, 10 -> .L1763, default -> .L1764

.L1762:
	phisrc.32   %phi1225(pc) <- $0xffffffff
	br          .L1759

.L1763:
	call        invertjump, %arg1, %arg2
	load.32     %r7566 <- 8[%arg2]
	phisrc.32   %phi1226(pc) <- %r7566
	br          .L1759

.L1764:
	call.32     %r7569 <- jumponcond, %arg1, %arg2, $0
	phisrc.32   %phi1227(pc) <- %r7569
	br          .L1759

.L1759:
	add.64      %r7572 <- %arg2, $20
	phi.32      %r7573 <- %phi1225(pc), %phi1226(pc), %phi1227(pc)
	call        luaK_concat, %arg1, %r7572, %r7573
	load.32     %r7576 <- 16[%arg2]
	call        luaK_patchtohere, %arg1, %r7576
	store.32    $0xffffffff -> 16[%arg2]
	ret


luaK_goiffalse:
.L1766:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7581 <- 0[%arg2]
	switch      %r7581, 1 -> .L1769, 3 -> .L1769, 10 -> .L1770, default -> .L1771

.L1769:
	phisrc.32   %phi1228(pc) <- $0xffffffff
	br          .L1767

.L1770:
	load.32     %r7583 <- 8[%arg2]
	phisrc.32   %phi1229(pc) <- %r7583
	br          .L1767

.L1771:
	call.32     %r7586 <- jumponcond, %arg1, %arg2, $1
	phisrc.32   %phi1230(pc) <- %r7586
	br          .L1767

.L1767:
	add.64      %r7589 <- %arg2, $16
	phi.32      %r7590 <- %phi1228(pc), %phi1229(pc), %phi1230(pc)
	call        luaK_concat, %arg1, %r7589, %r7590
	load.32     %r7593 <- 20[%arg2]
	call        luaK_patchtohere, %arg1, %r7593
	store.32    $0xffffffff -> 20[%arg2]
	ret


codenot:
.L1773:
	<entry-point>
	call        luaK_dischargevars, %arg1, %arg2
	load.32     %r7598 <- 0[%arg2]
	switch      %r7598, 1 -> .L1776, 2 -> .L1779, 3 -> .L1776, 4 -> .L1779, 5 -> .L1779, 10 -> .L1780, 11 -> .L1782, 12 -> .L1782, default -> .L1774

.L1776:
	store.32    $2 -> 0[%arg2]
	br          .L1774

.L1779:
	store.32    $3 -> 0[%arg2]
	br          .L1774

.L1780:
	call        invertjump, %arg1, %arg2
	br          .L1774

.L1782:
	call        discharge2anyreg, %arg1, %arg2
	call        freeexp, %arg1, %arg2
	load.32     %r7609 <- 8[%arg2]
	call.32     %r7610 <- luaK_codeABC, %arg1, $19, $0, %r7609, $0
	store.32    %r7610 -> 8[%arg2]
	store.32    $11 -> 0[%arg2]
	br          .L1774

.L1774:
	load.32     %r7614 <- 20[%arg2]
	load.32     %r7616 <- 16[%arg2]
	store.32    %r7616 -> 20[%arg2]
	store.32    %r7614 -> 16[%arg2]
	call        removevalues, %arg1, %r7616
	load.32     %r7625 <- 16[%arg2]
	call        removevalues, %arg1, %r7625
	ret


luaK_indexed:
.L1785:
	<entry-point>
	call.32     %r7628 <- luaK_exp2RK, %arg1, %arg3
	store.32    %r7628 -> 12[%arg2]
	store.32    $9 -> 0[%arg2]
	ret


constfolding:
.L1787:
	<entry-point>
	call.32     %r7632 <- isnumeral, %arg2
	br          %r7632, .L1790, .L1788

.L1790:
	call.32     %r7634 <- isnumeral, %arg3
	br          %r7634, .L1789, .L1788

.L1788:
	phisrc.32   %phi1231(return) <- $0
	br          .L1791

.L1789:
	load.64     %r7637 <- 8[%arg2]
	load.64     %r7639 <- 8[%arg3]
	switch      %arg1, 12 -> .L1793, 13 -> .L1794, 14 -> .L1795, 15 -> .L1796, 16 -> .L1797, 17 -> .L1798, 18 -> .L1799, 20 -> .L1800, default -> .L1801

.L1793:
	add.64      %r7643(r) <- %r7637, %r7639
	phisrc.64   %phi1238(r) <- %r7643(r)
	br          .L1792

.L1794:
	sub.64      %r7646 <- %r7637, %r7639
	phisrc.64   %phi1239(r) <- %r7646
	br          .L1792

.L1795:
	mulu.64     %r7649 <- %r7637, %r7639
	phisrc.64   %phi1240(r) <- %r7649
	br          .L1792

.L1796:
	set.64      %r7651 <- 0.000000
	seteq.32    %r7652 <- %r7639, %r7651
	br          %r7652, .L1802, .L1803

.L1802:
	phisrc.32   %phi1232(return) <- $0
	br          .L1791

.L1803:
	divu.64     %r7655 <- %r7637, %r7639
	phisrc.64   %phi1241(r) <- %r7655
	br          .L1792

.L1797:
	set.64      %r7657 <- 0.000000
	seteq.32    %r7658 <- %r7639, %r7657
	br          %r7658, .L1804, .L1805

.L1804:
	phisrc.32   %phi1233(return) <- $0
	br          .L1791

.L1805:
	divu.64     %r7662 <- %r7637, %r7639
	call.64     %r7663 <- floor, %r7662
	mulu.64     %r7665 <- %r7663, %r7639
	sub.64      %r7666 <- %r7637, %r7665
	phisrc.64   %phi1242(r) <- %r7666
	br          .L1792

.L1798:
	call.64     %r7669 <- pow, %r7637, %r7639
	phisrc.64   %phi1243(r) <- %r7669
	br          .L1792

.L1799:
	neg.64      %r7671 <- %r7637
	phisrc.64   %phi1244(r) <- %r7671
	br          .L1792

.L1800:
	phisrc.32   %phi1234(return) <- $0
	br          .L1791

.L1801:
	phisrc.64   %phi1245(r) <- $0
	br          .L1792

.L1792:
	phi.64      %r7672 <- %phi1238(r), %phi1239(r), %phi1240(r), %phi1241(r), %phi1242(r), %phi1243(r), %phi1244(r), %phi1245(r)
	store.64    %r7672 -> 8[%arg2]
	phisrc.32   %phi1236(return) <- $1
	br          .L1791

.L1791:
	phi.32      %r7635 <- %phi1231(return), %phi1232(return), %phi1233(return), %phi1234(return), VOID, %phi1236(return)
	ret.32      %r7635


codearith:
.L1808:
	<entry-point>
	call.32     %r7680 <- constfolding, %arg2, %arg3, %arg4
	br          %r7680, .L1811, .L1810

.L1810:
	setne.32    %r7683 <- %arg2, $18
	setne.32    %r7686 <- %arg2, $20
	and-bool.32 %r7687 <- %r7683, %r7686
	br          %r7687, .L1813, .L1814

.L1813:
	call.32     %r7690 <- luaK_exp2RK, %arg1, %arg4
	phisrc.32   %phi1246 <- %r7690
	br          .L1815

.L1814:
	phisrc.32   %phi1247 <- $0
	br          .L1815

.L1815:
	phi.32      %r7691 <- %phi1246, %phi1247
	call.32     %r7694 <- luaK_exp2RK, %arg1, %arg3
	setgt.32    %r7697 <- %r7694, %r7691
	br          %r7697, .L1816, .L1817

.L1816:
	call        freeexp, %arg1, %arg3
	call        freeexp, %arg1, %arg4
	br          .L1818

.L1817:
	call        freeexp, %arg1, %arg4
	call        freeexp, %arg1, %arg3
	br          .L1818

.L1818:
	call.32     %r7710 <- luaK_codeABC, %arg1, %arg2, $0, %r7694, %r7691
	store.32    %r7710 -> 8[%arg3]
	store.32    $11 -> 0[%arg3]
	br          .L1811

.L1811:
	ret


codecomp:
.L1819:
	<entry-point>
	call.32     %r7715(o1) <- luaK_exp2RK, %arg1, %arg4
	call.32     %r7718(o2) <- luaK_exp2RK, %arg1, %arg5
	call        freeexp, %arg1, %arg5
	call        freeexp, %arg1, %arg4
	seteq.32    %r7724 <- %arg3, $0
	setne.32    %r7727 <- %arg2, $23
	and-bool.32 %r7728 <- %r7724, %r7727
	select.32   %r7734 <- %r7728, $1, %arg3
	select.32   %r7735 <- %r7728, %r7718(o2), %r7715(o1)
	select.32   %r7736 <- %r7728, %r7715(o1), %r7718(o2)
	call.32     %r7737 <- condjump, %arg1, %arg2, %r7734, %r7735, %r7736
	store.32    %r7737 -> 8[%arg4]
	store.32    $10 -> 0[%arg4]
	ret


luaK_prefix:
.L1823:
	<entry-point>
	store.32    $0xffffffff -> 20[e2]
	store.32    $0xffffffff -> 16[e2]
	store.32    $5 -> 0[e2]
	store.64    $0 -> 8[e2]
	switch      %arg2, 0 -> .L1825, 1 -> .L1826, 2 -> .L1827, default -> .L1824

.L1825:
	call.32     %r7742 <- isnumeral, %arg3
	br          %r7742, .L1830, .L1829

.L1829:
	call.32     %r7745 <- luaK_exp2anyreg, %arg1, %arg3
	br          .L1830

.L1830:
	symaddr.64  %r7748 <- e2
	call        codearith, %arg1, $18, %arg3, %r7748
	br          .L1824

.L1826:
	call        codenot, %arg1, %arg3
	br          .L1824

.L1827:
	call.32     %r7753 <- luaK_exp2anyreg, %arg1, %arg3
	symaddr.64  %r7756 <- e2
	call        codearith, %arg1, $20, %arg3, %r7756
	br          .L1824

.L1824:
	ret


luaK_infix:
.L1831:
	<entry-point>
	switch      %arg2, 0 -> .L1841, 1 -> .L1841, 2 -> .L1841, 3 -> .L1841, 4 -> .L1841, 5 -> .L1841, 6 -> .L1835, 13 -> .L1833, 14 -> .L1834, default -> .L1842

.L1833:
	call        luaK_goiftrue, %arg1, %arg3
	br          .L1832

.L1834:
	call        luaK_goiffalse, %arg1, %arg3
	br          .L1832

.L1835:
	call        luaK_exp2nextreg, %arg1, %arg3
	br          .L1832

.L1841:
	call.32     %r7765 <- isnumeral, %arg3
	br          %r7765, .L1832, .L1843

.L1843:
	call.32     %r7768 <- luaK_exp2RK, %arg1, %arg3
	br          .L1832

.L1842:
	call.32     %r7771 <- luaK_exp2RK, %arg1, %arg3
	br          .L1832

.L1832:
	ret


luaK_posfix:
.L1845:
	<entry-point>
	switch      %arg2, 0 -> .L1850, 1 -> .L1851, 2 -> .L1852, 3 -> .L1853, 4 -> .L1854, 5 -> .L1855, 6 -> .L1849, 7 -> .L1857, 8 -> .L1856, 9 -> .L1858, 10 -> .L1859, 11 -> .L1860, 12 -> .L1861, 13 -> .L1847, 14 -> .L1848, default -> .L1846

.L1847:
	call        luaK_dischargevars, %arg1, %arg4
	add.64      %r7777 <- %arg4, $20
	load.32     %r7779 <- 20[%arg3]
	call        luaK_concat, %arg1, %r7777, %r7779
	load.192    %r7781 <- 0[%arg4]
	store.192   %r7781 -> 0[%arg3]
	br          .L1846

.L1848:
	call        luaK_dischargevars, %arg1, %arg4
	add.64      %r7787 <- %arg4, $16
	load.32     %r7789 <- 16[%arg3]
	call        luaK_concat, %arg1, %r7787, %r7789
	load.192    %r7791 <- 0[%arg4]
	store.192   %r7791 -> 0[%arg3]
	br          .L1846

.L1849:
	call        luaK_exp2val, %arg1, %arg4
	load.32     %r7796 <- 0[%arg4]
	seteq.32    %r7798 <- %r7796, $11
	br          %r7798, .L1865, .L1864

.L1865:
	load.64     %r7800 <- 0[%arg1]
	load.64     %r7801 <- 24[%r7800]
	load.32     %r7803 <- 8[%arg4]
	scast.64    %r7804 <- (32) %r7803
	muls.64     %r7805 <- %r7804, $4
	add.64      %r7806 <- %r7801, %r7805
	load.32     %r7807 <- 0[%r7806]
	and.32      %r7809 <- %r7807, $63
	seteq.32    %r7812 <- %r7809, $21
	br          %r7812, .L1863, .L1864

.L1863:
	call        freeexp, %arg1, %arg3
	load.64     %r7816 <- 0[%arg1]
	load.64     %r7817 <- 24[%r7816]
	load.32     %r7819 <- 8[%arg4]
	scast.64    %r7820 <- (32) %r7819
	muls.64     %r7821 <- %r7820, $4
	add.64      %r7822 <- %r7817, %r7821
	load.32     %r7823 <- 0[%r7822]
	and.32      %r7824 <- %r7823, $0x7fffff
	load.32     %r7826 <- 8[%arg3]
	shl.32      %r7828 <- %r7826, $23
	and.32      %r7829 <- %r7828, $0xff800000
	or.32       %r7830 <- %r7824, %r7829
	scast.64    %r7836 <- (32) %r7819
	muls.64     %r7837 <- %r7836, $4
	add.64      %r7838 <- %r7817, %r7837
	store.32    %r7830 -> 0[%r7838]
	store.32    $11 -> 0[%arg3]
	load.32     %r7841 <- 8[%arg4]
	store.32    %r7841 -> 8[%arg3]
	br          .L1846

.L1864:
	call        luaK_exp2nextreg, %arg1, %arg4
	call        codearith, %arg1, $21, %arg3, %arg4
	br          .L1846

.L1850:
	call        codearith, %arg1, $12, %arg3, %arg4
	br          .L1846

.L1851:
	call        codearith, %arg1, $13, %arg3, %arg4
	br          .L1846

.L1852:
	call        codearith, %arg1, $14, %arg3, %arg4
	br          .L1846

.L1853:
	call        codearith, %arg1, $15, %arg3, %arg4
	br          .L1846

.L1854:
	call        codearith, %arg1, $16, %arg3, %arg4
	br          .L1846

.L1855:
	call        codearith, %arg1, $17, %arg3, %arg4
	br          .L1846

.L1856:
	call        codecomp, %arg1, $23, $1, %arg3, %arg4
	br          .L1846

.L1857:
	call        codecomp, %arg1, $23, $0, %arg3, %arg4
	br          .L1846

.L1858:
	call        codecomp, %arg1, $24, $1, %arg3, %arg4
	br          .L1846

.L1859:
	call        codecomp, %arg1, $25, $1, %arg3, %arg4
	br          .L1846

.L1860:
	call        codecomp, %arg1, $24, $0, %arg3, %arg4
	br          .L1846

.L1861:
	call        codecomp, %arg1, $25, $0, %arg3, %arg4
	br          .L1846

.L1846:
	ret


luaK_fixline:
.L1867:
	<entry-point>
	load.64     %r7886 <- 0[%arg1]
	load.64     %r7887 <- 40[%r7886]
	load.32     %r7889 <- 48[%arg1]
	add.32      %r7890 <- %r7889, $-1
	scast.64    %r7891 <- (32) %r7890
	muls.64     %r7892 <- %r7891, $4
	add.64      %r7893 <- %r7887, %r7892
	store.32    %arg2 -> 0[%r7893]
	ret


luaK_code:
.L1869:
	<entry-point>
	load.64     %r7895 <- 0[%arg1]
	call        dischargejpc, %arg1
	load.32     %r7898 <- 48[%arg1]
	add.32      %r7899 <- %r7898, $1
	load.32     %r7901 <- 80[%r7895]
	setgt.32    %r7902 <- %r7899, %r7901
	phisrc.32   %phi1258 <- %r7898
	phisrc.32   %phi1260 <- %r7898
	br          %r7902, .L1870, .L1871

.L1870:
	load.64     %r7904 <- 32[%arg1]
	load.64     %r7906 <- 24[%r7895]
	cast.64     %r7907 <- (64) %r7906
	add.64      %r7909 <- %r7895, $80
	symaddr.64  %r7910 <- <anon symbol:0x62d001351948>
	call.64     %r7911 <- luaM_growaux_, %r7904, %r7907, %r7909, $4, $0x7ffffffd, %r7910
	ptrcast.64  %r7912 <- (64) %r7911
	store.64    %r7912 -> 24[%r7895]
	br          .L1871

.L1871:
	load.64     %r7916 <- 24[%r7895]
	load.32     %r7918 <- 48[%arg1]
	scast.64    %r7919 <- (32) %r7918
	muls.64     %r7920 <- %r7919, $4
	add.64      %r7921 <- %r7916, %r7920
	store.32    %arg2 -> 0[%r7921]
	load.32     %r7923 <- 48[%arg1]
	add.32      %r7924 <- %r7923, $1
	load.32     %r7926 <- 84[%r7895]
	setgt.32    %r7927 <- %r7924, %r7926
	phisrc.32   %phi1257 <- %r7923
	phisrc.32   %phi1259 <- %r7923
	br          %r7927, .L1872, .L1873

.L1872:
	load.64     %r7929 <- 32[%arg1]
	load.64     %r7931 <- 40[%r7895]
	cast.64     %r7932 <- (64) %r7931
	add.64      %r7934 <- %r7895, $84
	symaddr.64  %r7935 <- <anon symbol:0x62d001352e20>
	call.64     %r7936 <- luaM_growaux_, %r7929, %r7932, %r7934, $4, $0x7ffffffd, %r7935
	ptrcast.64  %r7937 <- (64) %r7936
	store.64    %r7937 -> 40[%r7895]
	br          .L1873

.L1873:
	load.64     %r7941 <- 40[%r7895]
	load.32     %r7943 <- 48[%arg1]
	scast.64    %r7944 <- (32) %r7943
	muls.64     %r7945 <- %r7944, $4
	add.64      %r7946 <- %r7941, %r7945
	store.32    %arg3 -> 0[%r7946]
	load.32     %r7948 <- 48[%arg1]
	add.32      %r7949 <- %r7948, $1
	store.32    %r7949 -> 48[%arg1]
	ret.32      %r7948


luaK_codeABC:
.L1875:
	<entry-point>
	shl.32      %r7957 <- %arg3, $6
	or.32       %r7958 <- %arg2, %r7957
	shl.32      %r7961 <- %arg4, $23
	or.32       %r7962 <- %r7958, %r7961
	shl.32      %r7965 <- %arg5, $14
	or.32       %r7966 <- %r7962, %r7965
	load.64     %r7968 <- 24[%arg1]
	load.32     %r7969 <- 8[%r7968]
	call.32     %r7970 <- luaK_code, %arg1, %r7966, %r7969
	ret.32      %r7970


luaK_codeABx:
.L1877:
	<entry-point>
	shl.32      %r7978 <- %arg3, $6
	or.32       %r7979 <- %arg2, %r7978
	shl.32      %r7982 <- %arg4, $14
	or.32       %r7983 <- %r7979, %r7982
	load.64     %r7985 <- 24[%arg1]
	load.32     %r7986 <- 8[%r7985]
	call.32     %r7987 <- luaK_code, %arg1, %r7983, %r7986
	ret.32      %r7987


luaK_setlist:
.L1879:
	<entry-point>
	add.32      %r7990 <- %arg3, $-1
	divs.32     %r7991 <- %r7990, $50
	add.32      %r7992 <- %r7991, $1
	seteq.32    %r7995 <- %arg4, $0xffffffff
	select.32   %r7996 <- %r7995, $0, %arg4
	setle.32    %r7998 <- %r7992, $511
	br          %r7998, .L1880, .L1881

.L1880:
	call.32     %r8003 <- luaK_codeABC, %arg1, $34, %arg2, %r7996, %r7992
	br          .L1882

.L1881:
	call.32     %r8007 <- luaK_codeABC, %arg1, $34, %arg2, %r7996, $0
	load.64     %r8012 <- 24[%arg1]
	load.32     %r8013 <- 8[%r8012]
	call.32     %r8014 <- luaK_code, %arg1, %r7992, %r8013
	br          .L1882

.L1882:
	add.32      %r8016 <- %arg2, $1
	store.32    %r8016 -> 60[%arg1]
	ret


anchor_token:
.L1884:
	<entry-point>
	load.32     %r8019 <- 16[%arg1]
	seteq.32    %r8020 <- %r8019, $285
	br          %r8020, .L1885, .L1887

.L1887:
	seteq.32    %r8023 <- %r8019, $286
	br          %r8023, .L1885, .L1886

.L1885:
	load.64     %r8025 <- 24[%arg1]
	add.64      %r8028 <- %r8025, $24
	ptrcast.64  %r8029 <- (64) %r8028
	load.64     %r8031 <- 16[%r8025]
	call.64     %r8032 <- luaX_newstring, %arg1, %r8029, %r8031
	br          .L1886

.L1886:
	ret


error_expected:
.L1888:
	<entry-point>
	load.64     %r8035 <- 56[%arg1]
	symaddr.64  %r8036 <- <anon symbol:0x62d001342fe0>
	call.64     %r8039 <- luaX_token2str, %arg1, %arg2
	call.64     %r8040 <- luaO_pushfstring, %r8035, %r8036, %r8039
	call        luaX_syntaxerror, %arg1, %r8040
	ret


errorlimit:
.L1890:
	<entry-point>
	load.64     %r8042 <- 0[%arg1]
	load.32     %r8043 <- 96[%r8042]
	br          %r8043, .L1892, .L1891

.L1891:
	load.64     %r8046 <- 32[%arg1]
	symaddr.64  %r8047 <- <anon symbol:0x62d001344200>
	call.64     %r8050 <- luaO_pushfstring, %r8046, %r8047, %arg2, %arg3
	phisrc.64   %phi1264 <- %r8050
	br          .L1893

.L1892:
	load.64     %r8052 <- 32[%arg1]
	symaddr.64  %r8053 <- <anon symbol:0x62d0013438f0>
	call.64     %r8059 <- luaO_pushfstring, %r8052, %r8053, %r8043, %arg2, %arg3
	phisrc.64   %phi1265 <- %r8059
	br          .L1893

.L1893:
	phi.64      %r8060 <- %phi1264, %phi1265
	load.64     %r8062 <- 24[%arg1]
	call        luaX_lexerror, %r8062, %r8060, $0
	ret


testnext:
.L1895:
	<entry-point>
	load.32     %r8065 <- 16[%arg1]
	seteq.32    %r8067 <- %r8065, %arg2
	br          %r8067, .L1896, .L1898

.L1896:
	call        luaX_next, %arg1
	br          .L1898

.L1898:
	ret.32      %r8067


check:
.L1900:
	<entry-point>
	load.32     %r8071 <- 16[%arg1]
	setne.32    %r8073 <- %r8071, %arg2
	br          %r8073, .L1901, .L1902

.L1901:
	call        error_expected, %arg1, %arg2
	br          .L1902

.L1902:
	ret


checknext:
.L1903:
	<entry-point>
	call        check, %arg1, %arg2
	call        luaX_next, %arg1
	ret


check_match:
.L1905:
	<entry-point>
	call.32     %r8081 <- testnext, %arg1, %arg2
	br          %r8081, .L1907, .L1906

.L1906:
	load.32     %r8084 <- 4[%arg1]
	seteq.32    %r8085 <- %arg4, %r8084
	br          %r8085, .L1908, .L1909

.L1908:
	call        error_expected, %arg1, %arg2
	br          .L1907

.L1909:
	load.64     %r8090 <- 56[%arg1]
	symaddr.64  %r8091 <- <anon symbol:0x62d001344eb0>
	call.64     %r8094 <- luaX_token2str, %arg1, %arg2
	call.64     %r8097 <- luaX_token2str, %arg1, %arg3
	call.64     %r8099 <- luaO_pushfstring, %r8090, %r8091, %r8094, %r8097, %arg4
	call        luaX_syntaxerror, %arg1, %r8099
	br          .L1907

.L1907:
	ret


str_checkname:
.L1911:
	<entry-point>
	call        check, %arg1, $285
	load.64     %r8102 <- 24[%arg1]
	call        luaX_next, %arg1
	ret.64      %r8102


init_exp:
.L1913:
	<entry-point>
	store.32    $0xffffffff -> 16[%arg1]
	store.32    $0xffffffff -> 20[%arg1]
	store.32    %arg2 -> 0[%arg1]
	store.32    %arg3 -> 8[%arg1]
	ret


codestring:
.L1915:
	<entry-point>
	load.64     %r8114 <- 48[%arg1]
	call.32     %r8116 <- luaK_stringK, %r8114, %arg3
	call        init_exp, %arg2, $4, %r8116
	ret


checkname:
.L1917:
	<entry-point>
	call.64     %r8120 <- str_checkname, %arg1
	call        codestring, %arg1, %arg2, %r8120
	ret


registerlocalvar:
.L1919:
	<entry-point>
	load.64     %r8122 <- 48[%arg1]
	load.64     %r8124 <- 0[%r8122]
	load.32     %r8126(oldsize) <- 92[%r8124]
	load.16     %r8128 <- 72[%r8122]
	scast.32    %r8129 <- (16) %r8128
	add.32      %r8130 <- %r8129, $1
	setgt.32    %r8133 <- %r8130, %r8126(oldsize)
	phisrc.32   %phi1273(oldsize) <- %r8126(oldsize)
	phisrc.16   %phi1275 <- %r8128
	phisrc.32   %phi1276 <- %r8126(oldsize)
	phisrc.16   %phi1277 <- %r8128
	phisrc.32   %phi1278(oldsize) <- %r8126(oldsize)
	br          %r8133, .L1920, .L1925

.L1920:
	load.64     %r8135 <- 56[%arg1]
	load.64     %r8137 <- 48[%r8124]
	cast.64     %r8138 <- (64) %r8137
	add.64      %r8140 <- %r8124, $92
	symaddr.64  %r8141 <- <anon symbol:0x62d001347038>
	call.64     %r8142 <- luaM_growaux_, %r8135, %r8138, %r8140, $16, $0x7fff, %r8141
	ptrcast.64  %r8143 <- (64) %r8142
	store.64    %r8143 -> 48[%r8124]
	br          .L1925

.L1925:
	phi.32      %r8145(oldsize) <- %phi1273(oldsize), %phi1274(oldsize)
	load.32     %r8147 <- 92[%r8124]
	setlt.32    %r8148 <- %r8145(oldsize), %r8147
	br          %r8148, .L1922, .L1924

.L1922:
	load.64     %r8150 <- 48[%r8124]
	add.32      %r8152 <- %r8145(oldsize), $1
	scast.64    %r8153 <- (32) %r8145(oldsize)
	muls.64     %r8154 <- %r8153, $16
	add.64      %r8155 <- %r8150, %r8154
	store.64    $0 -> 0[%r8155]
	phisrc.32   %phi1274(oldsize) <- %r8152
	br          .L1925

.L1924:
	load.64     %r8158 <- 48[%r8124]
	load.16     %r8160 <- 72[%r8122]
	scast.64    %r8161 <- (16) %r8160
	muls.64     %r8162 <- %r8161, $16
	add.64      %r8163 <- %r8158, %r8162
	store.64    %arg2 -> 0[%r8163]
	ptrcast.64  %r8165 <- (64) %arg2
	load.8      %r8166 <- 9[%r8165]
	cast.32     %r8167 <- (8) %r8166
	and.32      %r8168 <- %r8167, $3
	br          %r8168, .L1928, .L1927

.L1928:
	ptrcast.64  %r8170 <- (64) %r8124
	load.8      %r8171 <- 9[%r8170]
	cast.32     %r8172 <- (8) %r8171
	and.32      %r8173 <- %r8172, $4
	br          %r8173, .L1926, .L1927

.L1926:
	load.64     %r8175 <- 56[%arg1]
	call        luaC_barrierf, %r8175, %r8170, %r8165
	br          .L1927

.L1927:
	load.16     %r8181 <- 72[%r8122]
	add.16      %r8182 <- %r8181, $1
	store.16    %r8182 -> 72[%r8122]
	scast.32    %r8183 <- (16) %r8181
	ret.32      %r8183


new_localvar:
.L1930:
	<entry-point>
	load.64     %r8186 <- 48[%arg1]
	load.8      %r8188 <- 74[%r8186]
	cast.32     %r8189 <- (8) %r8188
	add.32      %r8191 <- %r8189, %arg3
	add.32      %r8192 <- %r8191, $1
	setgt.32    %r8193 <- %r8192, $200
	br          %r8193, .L1931, .L1932

.L1931:
	symaddr.64  %r8195 <- <anon symbol:0x62d001348510>
	call        errorlimit, %r8186, $200, %r8195
	br          .L1932

.L1932:
	call.32     %r8198 <- registerlocalvar, %arg1, %arg2
	scast.16    %r8199 <- (32) %r8198
	add.64      %r8201 <- %r8186, $196
	load.8      %r8203 <- 74[%r8186]
	cast.32     %r8204 <- (8) %r8203
	add.32      %r8206 <- %r8204, %arg3
	scast.64    %r8207 <- (32) %r8206
	muls.64     %r8208 <- %r8207, $2
	add.64      %r8209 <- %r8201, %r8208
	store.16    %r8199 -> 0[%r8209]
	ret


adjustlocalvars:
.L1934:
	<entry-point>
	load.64     %r8211 <- 48[%arg1]
	load.8      %r8213 <- 74[%r8211]
	cast.32     %r8214 <- (8) %r8213
	add.32      %r8216 <- %r8214, %arg2
	scast.8     %r8217 <- (32) %r8216
	store.8     %r8217 -> 74[%r8211]
	phisrc.32   %phi1281(nvars) <- %arg2
	phisrc.8    %phi1283 <- %r8217
	phisrc.8    %phi1284 <- %r8217
	br          .L1938

.L1938:
	phi.32      %r8219(nvars) <- %phi1281(nvars), %phi1282(nvars)
	br          %r8219(nvars), .L1935, .L1937

.L1935:
	load.32     %r8221 <- 48[%r8211]
	load.64     %r8223 <- 0[%r8211]
	load.64     %r8224 <- 48[%r8223]
	add.64      %r8226 <- %r8211, $196
	load.8      %r8228 <- 74[%r8211]
	cast.32     %r8229 <- (8) %r8228
	sub.32      %r8231 <- %r8229, %r8219(nvars)
	scast.64    %r8232 <- (32) %r8231
	muls.64     %r8233 <- %r8232, $2
	add.64      %r8234 <- %r8226, %r8233
	load.16     %r8235 <- 0[%r8234]
	cast.64     %r8236 <- (16) %r8235
	muls.64     %r8237 <- %r8236, $16
	add.64      %r8238 <- %r8224, %r8237
	store.32    %r8221 -> 8[%r8238]
	add.32      %r8240 <- %r8219(nvars), $-1
	phisrc.32   %phi1282(nvars) <- %r8240
	br          .L1938

.L1937:
	ret


removevars:
.L1939:
	<entry-point>
	load.64     %r8242 <- 48[%arg1]
	br          .L1943

.L1943:
	load.8      %r8244 <- 74[%r8242]
	cast.32     %r8245 <- (8) %r8244
	setgt.32    %r8247 <- %r8245, %arg2
	br          %r8247, .L1940, .L1942

.L1940:
	load.32     %r8249 <- 48[%r8242]
	load.64     %r8251 <- 0[%r8242]
	load.64     %r8252 <- 48[%r8251]
	add.64      %r8254 <- %r8242, $196
	add.8       %r8257 <- %r8244, $-1
	store.8     %r8257 -> 74[%r8242]
	cast.64     %r8258 <- (8) %r8257
	muls.64     %r8259 <- %r8258, $2
	add.64      %r8260 <- %r8254, %r8259
	load.16     %r8261 <- 0[%r8260]
	cast.64     %r8262 <- (16) %r8261
	muls.64     %r8263 <- %r8262, $16
	add.64      %r8264 <- %r8252, %r8263
	store.32    %r8249 -> 12[%r8264]
	br          .L1943

.L1942:
	ret


indexupvalue:
.L1944:
	<entry-point>
	load.64     %r8266 <- 0[%arg1]
	load.32     %r8268(oldsize) <- 72[%r8266]
	phisrc.32   %phi1289(oldsize) <- %r8268(oldsize)
	phisrc.32   %phi1296(i) <- $0
	phisrc.32   %phi1300(oldsize) <- %r8268(oldsize)
	phisrc.32   %phi1305(oldsize) <- %r8268(oldsize)
	br          .L1948

.L1948:
	phi.32      %r8269(i) <- %phi1296(i), %phi1297(i)
	load.8      %r8271 <- 112[%r8266]
	cast.32     %r8272 <- (8) %r8271
	setlt.32    %r8273 <- %r8269(i), %r8272
	phisrc.8    %phi1306 <- %r8271
	br          %r8273, .L1945, .L1947

.L1945:
	add.64      %r8275 <- %arg1, $75
	scast.64    %r8277 <- (32) %r8269(i)
	muls.64     %r8278 <- %r8277, $2
	add.64      %r8279 <- %r8275, %r8278
	load.8      %r8280 <- 0[%r8279]
	cast.32     %r8281 <- (8) %r8280
	load.32     %r8283 <- 0[%arg3]
	seteq.32    %r8285 <- %r8281, %r8283
	br          %r8285, .L1951, .L1946

.L1951:
	load.8      %r8292 <- 1[%r8279]
	cast.32     %r8293 <- (8) %r8292
	load.32     %r8295 <- 8[%arg3]
	seteq.32    %r8296 <- %r8293, %r8295
	br          %r8296, .L1949, .L1946

.L1949:
	phisrc.32   %phi1286(return) <- %r8269(i)
	br          .L1952

.L1946:
	add.32      %r8300 <- %r8269(i), $1
	phisrc.32   %phi1297(i) <- %r8300
	br          .L1948

.L1947:
	add.32      %r8304 <- %r8272, $1
	setgt.32    %r8305 <- %r8304, $60
	phisrc.8    %phi1301 <- %r8271
	br          %r8305, .L1953, .L1954

.L1953:
	symaddr.64  %r8307 <- <anon symbol:0x62d00136bf48>
	call        errorlimit, %arg1, $60, %r8307
	br          .L1954

.L1954:
	load.8      %r8309 <- 112[%r8266]
	cast.32     %r8310 <- (8) %r8309
	add.32      %r8311 <- %r8310, $1
	load.32     %r8313 <- 72[%r8266]
	setgt.32    %r8314 <- %r8311, %r8313
	phisrc.8    %phi1298 <- %r8309
	phisrc.32   %phi1299 <- %r8313
	phisrc.8    %phi1303 <- %r8309
	phisrc.32   %phi1304 <- %r8313
	br          %r8314, .L1955, .L1960

.L1955:
	load.64     %r8316 <- 32[%arg1]
	load.64     %r8318 <- 56[%r8266]
	cast.64     %r8319 <- (64) %r8318
	add.64      %r8321 <- %r8266, $72
	symaddr.64  %r8322 <- <anon symbol:0x62d00136ceb0>
	call.64     %r8323 <- luaM_growaux_, %r8316, %r8319, %r8321, $8, $0x7ffffffd, %r8322
	ptrcast.64  %r8324 <- (64) %r8323
	store.64    %r8324 -> 56[%r8266]
	br          .L1960

.L1960:
	phi.32      %r8326(oldsize) <- %phi1289(oldsize), %phi1290(oldsize)
	load.32     %r8328 <- 72[%r8266]
	setlt.32    %r8329 <- %r8326(oldsize), %r8328
	br          %r8329, .L1957, .L1959

.L1957:
	load.64     %r8331 <- 56[%r8266]
	add.32      %r8333 <- %r8326(oldsize), $1
	scast.64    %r8334 <- (32) %r8326(oldsize)
	muls.64     %r8335 <- %r8334, $8
	add.64      %r8336 <- %r8331, %r8335
	store.64    $0 -> 0[%r8336]
	phisrc.32   %phi1290(oldsize) <- %r8333
	br          .L1960

.L1959:
	load.64     %r8339 <- 56[%r8266]
	load.8      %r8341 <- 112[%r8266]
	cast.64     %r8342 <- (8) %r8341
	muls.64     %r8343 <- %r8342, $8
	add.64      %r8344 <- %r8339, %r8343
	store.64    %arg2 -> 0[%r8344]
	ptrcast.64  %r8346 <- (64) %arg2
	load.8      %r8347 <- 9[%r8346]
	cast.32     %r8348 <- (8) %r8347
	and.32      %r8349 <- %r8348, $3
	br          %r8349, .L1963, .L1962

.L1963:
	ptrcast.64  %r8351 <- (64) %r8266
	load.8      %r8352 <- 9[%r8351]
	cast.32     %r8353 <- (8) %r8352
	and.32      %r8354 <- %r8353, $4
	br          %r8354, .L1961, .L1962

.L1961:
	load.64     %r8356 <- 32[%arg1]
	call        luaC_barrierf, %r8356, %r8351, %r8346
	br          .L1962

.L1962:
	load.32     %r8362 <- 0[%arg3]
	scast.8     %r8363 <- (32) %r8362
	add.64      %r8365 <- %arg1, $75
	load.8      %r8367 <- 112[%r8266]
	cast.64     %r8368 <- (8) %r8367
	muls.64     %r8369 <- %r8368, $2
	add.64      %r8370 <- %r8365, %r8369
	store.8     %r8363 -> 0[%r8370]
	load.32     %r8372 <- 8[%arg3]
	scast.8     %r8373 <- (32) %r8372
	add.64      %r8375 <- %arg1, $75
	load.8      %r8377 <- 112[%r8266]
	cast.64     %r8378 <- (8) %r8377
	muls.64     %r8379 <- %r8378, $2
	add.64      %r8380 <- %r8375, %r8379
	store.8     %r8373 -> 1[%r8380]
	load.8      %r8382 <- 112[%r8266]
	add.8       %r8383 <- %r8382, $1
	store.8     %r8383 -> 112[%r8266]
	cast.32     %r8384 <- (8) %r8382
	phisrc.32   %phi1287(return) <- %r8384
	br          .L1952

.L1952:
	phi.32      %r8298 <- %phi1286(return), %phi1287(return)
	ret.32      %r8298


searchvar:
.L1964:
	<entry-point>
	load.8      %r8386 <- 74[%arg1]
	cast.32     %r8387 <- (8) %r8386
	add.32      %r8388(i) <- %r8387, $-1
	phisrc.32   %phi1312(i) <- %r8388(i)
	br          .L1968

.L1968:
	phi.32      %r8389(i) <- %phi1312(i), %phi1313(i)
	setge.32    %r8390 <- %r8389(i), $0
	br          %r8390, .L1965, .L1967

.L1965:
	load.64     %r8393 <- 0[%arg1]
	load.64     %r8394 <- 48[%r8393]
	add.64      %r8396 <- %arg1, $196
	scast.64    %r8398 <- (32) %r8389(i)
	muls.64     %r8399 <- %r8398, $2
	add.64      %r8400 <- %r8396, %r8399
	load.16     %r8401 <- 0[%r8400]
	cast.64     %r8402 <- (16) %r8401
	muls.64     %r8403 <- %r8402, $16
	add.64      %r8404 <- %r8394, %r8403
	load.64     %r8405 <- 0[%r8404]
	seteq.32    %r8406 <- %arg2, %r8405
	br          %r8406, .L1969, .L1966

.L1969:
	phisrc.32   %phi1307(return) <- %r8389(i)
	br          .L1971

.L1966:
	add.32      %r8410 <- %r8389(i), $-1
	phisrc.32   %phi1313(i) <- %r8410
	br          .L1968

.L1967:
	phisrc.32   %phi1308(return) <- $0xffffffff
	br          .L1971

.L1971:
	phi.32      %r8408 <- %phi1307(return), %phi1308(return)
	ret.32      %r8408


markupval:
.L1972:
	<entry-point>
	load.64     %r8412(bl) <- 40[%arg1]
	phisrc.64   %phi1319(bl) <- %r8412(bl)
	br          .L1976

.L1976:
	phi.64      %r8413(bl) <- %phi1319(bl), %phi1320(bl)
	br          %r8413(bl), .L1977, .L1979

.L1977:
	load.8      %r8415 <- 12[%r8413(bl)]
	cast.32     %r8416 <- (8) %r8415
	setgt.32    %r8418 <- %r8416, %arg2
	br          %r8418, .L1973, .L1975

.L1973:
	load.64     %r8420 <- 0[%r8413(bl)]
	phisrc.64   %phi1320(bl) <- %r8420
	br          .L1976

.L1975:
	br          %r8413(bl), .L1978, .L1979

.L1978:
	store.8     $1 -> 13[%r8413(bl)]
	br          .L1979

.L1979:
	ret


singlevaraux:
.L1980:
	<entry-point>
	br          %arg1, .L1982, .L1981

.L1981:
	call        init_exp, %arg3, $8, $255
	phisrc.32   %phi1321(return) <- $8
	br          .L1983

.L1982:
	call.32     %r8429 <- searchvar, %arg1, %arg2
	setge.32    %r8431 <- %r8429, $0
	br          %r8431, .L1985, .L1986

.L1985:
	call        init_exp, %arg3, $6, %r8429
	br          %arg4, .L1988, .L1987

.L1987:
	call        markupval, %arg1, %r8429
	br          .L1988

.L1988:
	phisrc.32   %phi1322(return) <- $6
	br          .L1983

.L1986:
	load.64     %r8438 <- 16[%arg1]
	call.32     %r8441 <- singlevaraux, %r8438, %arg2, %arg3, $0
	seteq.32    %r8442 <- %r8441, $8
	br          %r8442, .L1990, .L1991

.L1990:
	phisrc.32   %phi1323(return) <- $8
	br          .L1983

.L1991:
	call.32     %r8446 <- indexupvalue, %arg1, %arg2, %arg3
	store.32    %r8446 -> 8[%arg3]
	store.32    $7 -> 0[%arg3]
	phisrc.32   %phi1324(return) <- $7
	br          .L1983

.L1983:
	phi.32      %r8426 <- %phi1321(return), %phi1322(return), %phi1323(return), %phi1324(return)
	ret.32      %r8426


singlevar:
.L1992:
	<entry-point>
	call.64     %r8450 <- str_checkname, %arg1
	load.64     %r8452 <- 48[%arg1]
	call.32     %r8456 <- singlevaraux, %r8452, %r8450, %arg2, $1
	seteq.32    %r8457 <- %r8456, $8
	br          %r8457, .L1993, .L1994

.L1993:
	call.32     %r8460 <- luaK_stringK, %r8452, %r8450
	store.32    %r8460 -> 8[%arg2]
	br          .L1994

.L1994:
	ret


adjust_assign:
.L1995:
	<entry-point>
	load.64     %r8463 <- 48[%arg1]
	sub.32      %r8466(extra) <- %arg2, %arg3
	load.32     %r8468 <- 0[%arg4]
	seteq.32    %r8470 <- %r8468, $13
	br          %r8470, .L1996, .L1998

.L1998:
	seteq.32    %r8474 <- %r8468, $14
	br          %r8474, .L1996, .L1997

.L1996:
	add.32      %r8476 <- %r8466(extra), $1
	setlt.32    %r8478 <- %r8476, $0
	select.32   %r8481 <- %r8478, $0, %r8476
	call        luaK_setreturns, %r8463, %arg4, %r8481
	setgt.32    %r8483 <- %r8481, $1
	br          %r8483, .L2001, .L2003

.L2001:
	add.32      %r8486 <- %r8481, $-1
	call        luaK_reserveregs, %r8463, %r8486
	br          .L2003

.L1997:
	br          %r8468, .L2004, .L2005

.L2004:
	call        luaK_exp2nextreg, %r8463, %arg4
	br          .L2005

.L2005:
	setgt.32    %r8494 <- %r8466(extra), $0
	br          %r8494, .L2006, .L2003

.L2006:
	load.32     %r8496 <- 60[%r8463]
	call        luaK_reserveregs, %r8463, %r8466(extra)
	call        luaK_nil, %r8463, %r8496, %r8466(extra)
	br          .L2003

.L2003:
	ret


enterlevel:
.L2008:
	<entry-point>
	load.64     %r8503 <- 56[%arg1]
	load.16     %r8504 <- 96[%r8503]
	add.16      %r8505 <- %r8504, $1
	store.16    %r8505 -> 96[%r8503]
	cast.32     %r8506 <- (16) %r8505
	setgt.32    %r8507 <- %r8506, $200
	br          %r8507, .L2009, .L2010

.L2009:
	symaddr.64  %r8509 <- <anon symbol:0x62d0013712a8>
	call        luaX_lexerror, %arg1, %r8509, $0
	br          .L2010

.L2010:
	ret


enterblock:
.L2011:
	<entry-point>
	store.32    $0xffffffff -> 8[%arg2]
	store.8     %arg3 -> 14[%arg2]
	load.8      %r8514 <- 74[%arg1]
	store.8     %r8514 -> 12[%arg2]
	store.8     $0 -> 13[%arg2]
	load.64     %r8518 <- 40[%arg1]
	store.64    %r8518 -> 0[%arg2]
	store.64    %arg2 -> 40[%arg1]
	ret


leaveblock:
.L2013:
	<entry-point>
	load.64     %r8523 <- 40[%arg1]
	load.64     %r8525 <- 0[%r8523]
	store.64    %r8525 -> 40[%arg1]
	load.64     %r8528 <- 24[%arg1]
	load.8      %r8530 <- 12[%r8523]
	cast.32     %r8531 <- (8) %r8530
	call        removevars, %r8528, %r8531
	load.8      %r8533 <- 13[%r8523]
	br          %r8533, .L2014, .L2015

.L2014:
	load.8      %r8536 <- 12[%r8523]
	cast.32     %r8537 <- (8) %r8536
	call.32     %r8538 <- luaK_codeABC, %arg1, $35, %r8537, $0, $0
	br          .L2015

.L2015:
	load.8      %r8540 <- 74[%arg1]
	cast.32     %r8541 <- (8) %r8540
	store.32    %r8541 -> 60[%arg1]
	load.32     %r8545 <- 8[%r8523]
	call        luaK_patchtohere, %arg1, %r8545
	ret


pushclosure:
.L2017:
	<entry-point>
	load.64     %r8547 <- 48[%arg1]
	load.64     %r8549 <- 0[%r8547]
	load.32     %r8551(oldsize) <- 88[%r8549]
	load.32     %r8553 <- 68[%r8547]
	add.32      %r8554 <- %r8553, $1
	setgt.32    %r8557 <- %r8554, %r8551(oldsize)
	phisrc.32   %phi1334(oldsize) <- %r8551(oldsize)
	phisrc.32   %phi1341 <- %r8553
	phisrc.32   %phi1342 <- %r8551(oldsize)
	phisrc.32   %phi1343 <- %r8553
	phisrc.32   %phi1344(oldsize) <- %r8551(oldsize)
	br          %r8557, .L2018, .L2023

.L2018:
	load.64     %r8559 <- 56[%arg1]
	load.64     %r8561 <- 32[%r8549]
	cast.64     %r8562 <- (64) %r8561
	add.64      %r8564 <- %r8549, $88
	symaddr.64  %r8565 <- <anon symbol:0x62d001376200>
	call.64     %r8566 <- luaM_growaux_, %r8559, %r8562, %r8564, $8, $0x3ffff, %r8565
	ptrcast.64  %r8567 <- (64) %r8566
	store.64    %r8567 -> 32[%r8549]
	br          .L2023

.L2023:
	phi.32      %r8569(oldsize) <- %phi1334(oldsize), %phi1335(oldsize)
	load.32     %r8571 <- 88[%r8549]
	setlt.32    %r8572 <- %r8569(oldsize), %r8571
	br          %r8572, .L2020, .L2022

.L2020:
	load.64     %r8574 <- 32[%r8549]
	add.32      %r8576 <- %r8569(oldsize), $1
	scast.64    %r8577 <- (32) %r8569(oldsize)
	muls.64     %r8578 <- %r8577, $8
	add.64      %r8579 <- %r8574, %r8578
	store.64    $0 -> 0[%r8579]
	phisrc.32   %phi1335(oldsize) <- %r8576
	br          .L2023

.L2022:
	load.64     %r8581 <- 0[%arg2]
	load.64     %r8583 <- 32[%r8549]
	load.32     %r8585 <- 68[%r8547]
	add.32      %r8586 <- %r8585, $1
	store.32    %r8586 -> 68[%r8547]
	scast.64    %r8587 <- (32) %r8585
	muls.64     %r8588 <- %r8587, $8
	add.64      %r8589 <- %r8583, %r8588
	store.64    %r8581 -> 0[%r8589]
	load.64     %r8591 <- 0[%arg2]
	ptrcast.64  %r8592 <- (64) %r8591
	load.8      %r8593 <- 9[%r8592]
	cast.32     %r8594 <- (8) %r8593
	and.32      %r8595 <- %r8594, $3
	br          %r8595, .L2026, .L2025

.L2026:
	ptrcast.64  %r8597 <- (64) %r8549
	load.8      %r8598 <- 9[%r8597]
	cast.32     %r8599 <- (8) %r8598
	and.32      %r8600 <- %r8599, $4
	br          %r8600, .L2024, .L2025

.L2024:
	load.64     %r8602 <- 56[%arg1]
	ptrcast.64  %r8607 <- (64) %r8591
	call        luaC_barrierf, %r8602, %r8597, %r8607
	br          .L2025

.L2025:
	load.32     %r8611 <- 68[%r8547]
	add.32      %r8612 <- %r8611, $-1
	call.32     %r8614 <- luaK_codeABx, %r8547, $36, $0, %r8612
	call        init_exp, %arg3, $11, %r8614
	phisrc.32   %phi1338(i) <- $0
	br          .L2030

.L2030:
	phi.32      %r8615(i) <- %phi1338(i), %phi1339(i)
	load.64     %r8617 <- 0[%arg2]
	load.8      %r8618 <- 112[%r8617]
	cast.32     %r8619 <- (8) %r8618
	setlt.32    %r8620 <- %r8615(i), %r8619
	br          %r8620, .L2027, .L2029

.L2027:
	add.64      %r8622 <- %arg2, $75
	scast.64    %r8624 <- (32) %r8615(i)
	muls.64     %r8625 <- %r8624, $2
	add.64      %r8626 <- %r8622, %r8625
	load.8      %r8627 <- 0[%r8626]
	cast.32     %r8628 <- (8) %r8627
	seteq.32    %r8629 <- %r8628, $6
	select.32   %r8630 <- %r8629, $0, $4
	load.8      %r8640 <- 1[%r8626]
	cast.32     %r8641 <- (8) %r8640
	call.32     %r8642 <- luaK_codeABC, %r8547, %r8630, $0, %r8641, $0
	add.32      %r8644 <- %r8615(i), $1
	phisrc.32   %phi1339(i) <- %r8644
	br          .L2030

.L2029:
	ret


open_func:
.L2031:
	<entry-point>
	load.64     %r8646 <- 56[%arg1]
	call.64     %r8648 <- luaF_newproto, %r8646
	store.64    %r8648 -> 0[%arg2]
	load.64     %r8652 <- 48[%arg1]
	store.64    %r8652 -> 16[%arg2]
	store.64    %arg1 -> 24[%arg2]
	store.64    %r8646 -> 32[%arg2]
	store.64    %arg2 -> 48[%arg1]
	store.32    $0 -> 48[%arg2]
	store.32    $0xffffffff -> 52[%arg2]
	store.32    $0xffffffff -> 56[%arg2]
	store.32    $0 -> 60[%arg2]
	store.32    $0 -> 64[%arg2]
	store.32    $0 -> 68[%arg2]
	store.16    $0 -> 72[%arg2]
	store.8     $0 -> 74[%arg2]
	store.64    $0 -> 40[%arg2]
	load.64     %r8670 <- 80[%arg1]
	store.64    %r8670 -> 64[%r8648]
	store.8     $2 -> 115[%r8648]
	call.64     %r8674 <- luaH_new, %r8646, $0, $0
	store.64    %r8674 -> 8[%arg2]
	load.64     %r8677 <- 16[%r8646]
	ptrcast.64  %r8680 <- (64) %r8674
	store.64    %r8680 -> 0[%r8677]
	store.32    $5 -> 8[%r8677]
	load.64     %r8684 <- 56[%r8646]
	ptrcast.64  %r8685 <- (64) %r8684
	load.64     %r8687 <- 16[%r8646]
	ptrcast.64  %r8688 <- (64) %r8687
	sub.64      %r8689 <- %r8685, %r8688
	setle.32    %r8690 <- %r8689, $16
	br          %r8690, .L2032, .L2034

.L2032:
	call        luaD_growstack, %r8646, $1
	br          .L2034

.L2034:
	load.64     %r8693 <- 16[%r8646]
	add.64      %r8694 <- %r8693, $16
	store.64    %r8694 -> 16[%r8646]
	ptrcast.64  %r8698 <- (64) %r8648
	store.64    %r8698 -> 16[%r8693]
	store.32    $9 -> 24[%r8693]
	load.64     %r8702 <- 56[%r8646]
	ptrcast.64  %r8703 <- (64) %r8702
	load.64     %r8705 <- 16[%r8646]
	ptrcast.64  %r8706 <- (64) %r8705
	sub.64      %r8707 <- %r8703, %r8706
	setle.32    %r8708 <- %r8707, $16
	br          %r8708, .L2035, .L2037

.L2035:
	call        luaD_growstack, %r8646, $1
	br          .L2037

.L2037:
	load.64     %r8711 <- 16[%r8646]
	add.64      %r8712 <- %r8711, $16
	store.64    %r8712 -> 16[%r8646]
	ret


close_func:
.L2039:
	<entry-point>
	load.64     %r8714 <- 56[%arg1]
	load.64     %r8716 <- 48[%arg1]
	load.64     %r8718 <- 0[%r8716]
	call        removevars, %arg1, $0
	call        luaK_ret, %r8716, $0, $0
	load.32     %r8722 <- 48[%r8716]
	add.32      %r8723 <- %r8722, $1
	scast.64    %r8724 <- (32) %r8723
	setbe.32    %r8725 <- %r8724, $0x3fffffffffffffff
	br          %r8725, .L2040, .L2041

.L2040:
	load.64     %r8728 <- 24[%r8718]
	cast.64     %r8729 <- (64) %r8728
	load.32     %r8731 <- 80[%r8718]
	scast.64    %r8732 <- (32) %r8731
	mulu.64     %r8733 <- %r8732, $4
	scast.64    %r8736 <- (32) %r8722
	mulu.64     %r8737 <- %r8736, $4
	call.64     %r8738 <- luaM_realloc_, %r8714, %r8729, %r8733, %r8737
	phisrc.64   %phi1345 <- %r8738
	br          .L2042

.L2041:
	call.64     %r8740 <- luaM_toobig, %r8714
	cast.64     %r8741 <- (64) %r8740
	phisrc.64   %phi1346 <- %r8741
	br          .L2042

.L2042:
	phi.64      %r8742 <- %phi1345, %phi1346
	ptrcast.64  %r8743 <- (64) %r8742
	store.64    %r8743 -> 24[%r8718]
	load.32     %r8746 <- 48[%r8716]
	store.32    %r8746 -> 80[%r8718]
	load.32     %r8749 <- 48[%r8716]
	add.32      %r8750 <- %r8749, $1
	scast.64    %r8751 <- (32) %r8750
	setbe.32    %r8752 <- %r8751, $0x3fffffffffffffff
	br          %r8752, .L2043, .L2044

.L2043:
	load.64     %r8755 <- 40[%r8718]
	cast.64     %r8756 <- (64) %r8755
	load.32     %r8758 <- 84[%r8718]
	scast.64    %r8759 <- (32) %r8758
	mulu.64     %r8760 <- %r8759, $4
	scast.64    %r8763 <- (32) %r8749
	mulu.64     %r8764 <- %r8763, $4
	call.64     %r8765 <- luaM_realloc_, %r8714, %r8756, %r8760, %r8764
	phisrc.64   %phi1347 <- %r8765
	br          .L2045

.L2044:
	call.64     %r8767 <- luaM_toobig, %r8714
	cast.64     %r8768 <- (64) %r8767
	phisrc.64   %phi1348 <- %r8768
	br          .L2045

.L2045:
	phi.64      %r8769 <- %phi1347, %phi1348
	ptrcast.64  %r8770 <- (64) %r8769
	store.64    %r8770 -> 40[%r8718]
	load.32     %r8773 <- 48[%r8716]
	store.32    %r8773 -> 84[%r8718]
	load.32     %r8776 <- 64[%r8716]
	add.32      %r8777 <- %r8776, $1
	scast.64    %r8778 <- (32) %r8777
	setbe.32    %r8779 <- %r8778, $0xfffffffffffffff
	br          %r8779, .L2046, .L2047

.L2046:
	load.64     %r8782 <- 16[%r8718]
	cast.64     %r8783 <- (64) %r8782
	load.32     %r8785 <- 76[%r8718]
	scast.64    %r8786 <- (32) %r8785
	mulu.64     %r8787 <- %r8786, $16
	scast.64    %r8790 <- (32) %r8776
	mulu.64     %r8791 <- %r8790, $16
	call.64     %r8792 <- luaM_realloc_, %r8714, %r8783, %r8787, %r8791
	phisrc.64   %phi1349 <- %r8792
	br          .L2048

.L2047:
	call.64     %r8794 <- luaM_toobig, %r8714
	cast.64     %r8795 <- (64) %r8794
	phisrc.64   %phi1350 <- %r8795
	br          .L2048

.L2048:
	phi.64      %r8796 <- %phi1349, %phi1350
	ptrcast.64  %r8797 <- (64) %r8796
	store.64    %r8797 -> 16[%r8718]
	load.32     %r8800 <- 64[%r8716]
	store.32    %r8800 -> 76[%r8718]
	load.32     %r8803 <- 68[%r8716]
	add.32      %r8804 <- %r8803, $1
	scast.64    %r8805 <- (32) %r8804
	setbe.32    %r8806 <- %r8805, $0x1fffffffffffffff
	br          %r8806, .L2049, .L2050

.L2049:
	load.64     %r8809 <- 32[%r8718]
	cast.64     %r8810 <- (64) %r8809
	load.32     %r8812 <- 88[%r8718]
	scast.64    %r8813 <- (32) %r8812
	mulu.64     %r8814 <- %r8813, $8
	scast.64    %r8817 <- (32) %r8803
	mulu.64     %r8818 <- %r8817, $8
	call.64     %r8819 <- luaM_realloc_, %r8714, %r8810, %r8814, %r8818
	phisrc.64   %phi1351 <- %r8819
	br          .L2051

.L2050:
	call.64     %r8821 <- luaM_toobig, %r8714
	cast.64     %r8822 <- (64) %r8821
	phisrc.64   %phi1352 <- %r8822
	br          .L2051

.L2051:
	phi.64      %r8823 <- %phi1351, %phi1352
	ptrcast.64  %r8824 <- (64) %r8823
	store.64    %r8824 -> 32[%r8718]
	load.32     %r8827 <- 68[%r8716]
	store.32    %r8827 -> 88[%r8718]
	load.16     %r8830 <- 72[%r8716]
	scast.32    %r8831 <- (16) %r8830
	add.32      %r8832 <- %r8831, $1
	scast.64    %r8833 <- (32) %r8832
	setbe.32    %r8834 <- %r8833, $0xfffffffffffffff
	br          %r8834, .L2052, .L2053

.L2052:
	load.64     %r8837 <- 48[%r8718]
	cast.64     %r8838 <- (64) %r8837
	load.32     %r8840 <- 92[%r8718]
	scast.64    %r8841 <- (32) %r8840
	mulu.64     %r8842 <- %r8841, $16
	scast.64    %r8845 <- (16) %r8830
	mulu.64     %r8846 <- %r8845, $16
	call.64     %r8847 <- luaM_realloc_, %r8714, %r8838, %r8842, %r8846
	phisrc.64   %phi1353 <- %r8847
	br          .L2054

.L2053:
	call.64     %r8849 <- luaM_toobig, %r8714
	cast.64     %r8850 <- (64) %r8849
	phisrc.64   %phi1354 <- %r8850
	br          .L2054

.L2054:
	phi.64      %r8851 <- %phi1353, %phi1354
	ptrcast.64  %r8852 <- (64) %r8851
	store.64    %r8852 -> 48[%r8718]
	load.16     %r8855 <- 72[%r8716]
	scast.32    %r8856 <- (16) %r8855
	store.32    %r8856 -> 92[%r8718]
	load.8      %r8859 <- 112[%r8718]
	cast.32     %r8860 <- (8) %r8859
	add.32      %r8861 <- %r8860, $1
	scast.64    %r8862 <- (32) %r8861
	setbe.32    %r8863 <- %r8862, $0x1fffffffffffffff
	br          %r8863, .L2055, .L2056

.L2055:
	load.64     %r8866 <- 56[%r8718]
	cast.64     %r8867 <- (64) %r8866
	load.32     %r8869 <- 72[%r8718]
	scast.64    %r8870 <- (32) %r8869
	mulu.64     %r8871 <- %r8870, $8
	cast.64     %r8874 <- (8) %r8859
	mulu.64     %r8875 <- %r8874, $8
	call.64     %r8876 <- luaM_realloc_, %r8714, %r8867, %r8871, %r8875
	phisrc.64   %phi1355 <- %r8876
	br          .L2057

.L2056:
	call.64     %r8878 <- luaM_toobig, %r8714
	cast.64     %r8879 <- (64) %r8878
	phisrc.64   %phi1356 <- %r8879
	br          .L2057

.L2057:
	phi.64      %r8880 <- %phi1355, %phi1356
	ptrcast.64  %r8881 <- (64) %r8880
	store.64    %r8881 -> 56[%r8718]
	load.8      %r8884 <- 112[%r8718]
	cast.32     %r8885 <- (8) %r8884
	store.32    %r8885 -> 72[%r8718]
	load.64     %r8888 <- 16[%r8716]
	store.64    %r8888 -> 48[%arg1]
	br          %r8716, .L2058, .L2059

.L2058:
	call        anchor_token, %arg1
	br          .L2059

.L2059:
	load.64     %r8893 <- 16[%r8714]
	cast.64     %r8894 <- (64) %r8893
	add.64      %r8895 <- %r8894, $-32
	ptrcast.64  %r8896 <- (64) %r8895
	store.64    %r8896 -> 16[%r8714]
	ret


luaY_parser:
.L2061:
	<entry-point>
	store.64    %arg3 -> 72[lexstate]
	symaddr.64  %r8899 <- lexstate
	call.64     %r8904 <- strlen, %arg4
	call.64     %r8905 <- luaS_newlstr, %arg1, %arg4, %r8904
	call        luaX_setinput, %arg1, %r8899, %arg2, %r8905
	symaddr.64  %r8907 <- funcstate
	call        open_func, %r8899, %r8907
	load.64     %r8908 <- 0[funcstate]
	store.8     $2 -> 114[%r8908]
	call        luaX_next, %r8899
	call        chunk, %r8899
	call        check, %r8899, $287
	call        close_func, %r8899
	load.64     %r8913 <- 0[funcstate]
	ret.64      %r8913


field:
.L2063:
	<entry-point>
	load.64     %r8916 <- 48[%arg1]
	call.32     %r8919 <- luaK_exp2anyreg, %r8916, %arg2
	call        luaX_next, %arg1
	symaddr.64  %r8922 <- key
	call        checkname, %arg1, %r8922
	call        luaK_indexed, %r8916, %arg2, %r8922
	ret


yindex:
.L2065:
	<entry-point>
	call        luaX_next, %arg1
	call        expr, %arg1, %arg2
	load.64     %r8930 <- 48[%arg1]
	call        luaK_exp2val, %r8930, %arg2
	call        checknext, %arg1, $93
	ret


recfield:
.L2067:
	<entry-point>
	load.64     %r8934 <- 48[%arg1]
	load.32     %r8937 <- 60[%r8934]
	load.32     %r8939 <- 16[%arg1]
	seteq.32    %r8940 <- %r8939, $285
	br          %r8940, .L2068, .L2069

.L2068:
	load.32     %r8942 <- 32[%arg2]
	setgt.32    %r8943 <- %r8942, $0x7ffffffd
	br          %r8943, .L2070, .L2071

.L2070:
	symaddr.64  %r8945 <- <anon symbol:0x62d00138da30>
	call        errorlimit, %r8934, $0x7ffffffd, %r8945
	br          .L2071

.L2071:
	symaddr.64  %r8947 <- key
	call        checkname, %arg1, %r8947
	br          .L2072

.L2069:
	symaddr.64  %r8949 <- key
	call        yindex, %arg1, %r8949
	br          .L2072

.L2072:
	load.32     %r8951 <- 32[%arg2]
	add.32      %r8952 <- %r8951, $1
	store.32    %r8952 -> 32[%arg2]
	call        checknext, %arg1, $61
	symaddr.64  %r8955 <- key
	call.32     %r8956 <- luaK_exp2RK, %r8934, %r8955
	symaddr.64  %r8958 <- val
	call        expr, %arg1, %r8958
	load.64     %r8961 <- 24[%arg2]
	load.32     %r8962 <- 8[%r8961]
	call.32     %r8966 <- luaK_exp2RK, %r8934, %r8958
	call.32     %r8967 <- luaK_codeABC, %r8934, $9, %r8962, %r8956, %r8966
	store.32    %r8937 -> 60[%r8934]
	ret


closelistfield:
.L2074:
	<entry-point>
	load.32     %r8971 <- 0[%arg2]
	br          %r8971, .L2076, .L2077

.L2076:
	call        luaK_exp2nextreg, %arg1, %arg2
	store.32    $0 -> 0[%arg2]
	load.32     %r8979 <- 40[%arg2]
	seteq.32    %r8980 <- %r8979, $50
	br          %r8980, .L2078, .L2077

.L2078:
	load.64     %r8983 <- 24[%arg2]
	load.32     %r8984 <- 8[%r8983]
	load.32     %r8986 <- 36[%arg2]
	call        luaK_setlist, %arg1, %r8984, %r8986, %r8979
	store.32    $0 -> 40[%arg2]
	br          .L2077

.L2077:
	ret


lastlistfield:
.L2080:
	<entry-point>
	load.32     %r8991 <- 40[%arg2]
	phisrc.32   %phi1365 <- %r8991
	phisrc.32   %phi1368 <- %r8991
	br          %r8991, .L2082, .L2083

.L2082:
	load.32     %r8994 <- 0[%arg2]
	seteq.32    %r8996 <- %r8994, $13
	br          %r8996, .L2084, .L2086

.L2086:
	seteq.32    %r9000 <- %r8994, $14
	br          %r9000, .L2084, .L2085

.L2084:
	call        luaK_setreturns, %arg1, %arg2, $0xffffffff
	load.64     %r9006 <- 24[%arg2]
	load.32     %r9007 <- 8[%r9006]
	load.32     %r9009 <- 36[%arg2]
	call        luaK_setlist, %arg1, %r9007, %r9009, $0xffffffff
	load.32     %r9011 <- 36[%arg2]
	add.32      %r9012 <- %r9011, $-1
	store.32    %r9012 -> 36[%arg2]
	br          .L2083

.L2085:
	br          %r8994, .L2088, .L2089

.L2088:
	call        luaK_exp2nextreg, %arg1, %arg2
	br          .L2089

.L2089:
	load.64     %r9022 <- 24[%arg2]
	load.32     %r9023 <- 8[%r9022]
	load.32     %r9025 <- 36[%arg2]
	load.32     %r9027 <- 40[%arg2]
	call        luaK_setlist, %arg1, %r9023, %r9025, %r9027
	br          .L2083

.L2083:
	ret


listfield:
.L2090:
	<entry-point>
	call        expr, %arg1, %arg2
	load.32     %r9032 <- 36[%arg2]
	setgt.32    %r9033 <- %r9032, $0x7ffffffd
	phisrc.32   %phi1369 <- %r9032
	phisrc.32   %phi1370 <- %r9032
	br          %r9033, .L2091, .L2092

.L2091:
	load.64     %r9035 <- 48[%arg1]
	symaddr.64  %r9036 <- <anon symbol:0x62d00139d638>
	call        errorlimit, %r9035, $0x7ffffffd, %r9036
	br          .L2092

.L2092:
	load.32     %r9038 <- 36[%arg2]
	add.32      %r9039 <- %r9038, $1
	store.32    %r9039 -> 36[%arg2]
	load.32     %r9041 <- 40[%arg2]
	add.32      %r9042 <- %r9041, $1
	store.32    %r9042 -> 40[%arg2]
	ret


constructor:
.L2094:
	<entry-point>
	load.64     %r9044 <- 48[%arg1]
	load.32     %r9046 <- 4[%arg1]
	call.32     %r9048 <- luaK_codeABC, %r9044, $10, $0, $0, $0
	store.32    $0 -> 40[cc]
	store.32    $0 -> 32[cc]
	store.32    $0 -> 36[cc]
	store.64    %arg2 -> 24[cc]
	call        init_exp, %arg2, $11, %r9048
	symaddr.64  %r9052 <- cc
	call        init_exp, %r9052, $0, $0
	load.64     %r9055 <- 48[%arg1]
	call        luaK_exp2nextreg, %r9055, %arg2
	call        checknext, %arg1, $123
	br          .L2095

.L2095:
	load.32     %r9059 <- 16[%arg1]
	seteq.32    %r9060 <- %r9059, $125
	br          %r9060, .L2097, .L2099

.L2099:
	call        closelistfield, %r9044, %r9052
	load.32     %r9064 <- 16[%arg1]
	switch      %r9064, 91 -> .L2102, 285 -> .L2101, default -> .L2103

.L2101:
	call        luaX_lookahead, %arg1
	load.32     %r9067 <- 32[%arg1]
	setne.32    %r9068 <- %r9067, $61
	br          %r9068, .L2104, .L2105

.L2104:
	call        listfield, %arg1, %r9052
	br          .L2096

.L2105:
	call        recfield, %arg1, %r9052
	br          .L2096

.L2102:
	call        recfield, %arg1, %r9052
	br          .L2096

.L2103:
	call        listfield, %arg1, %r9052
	br          .L2096

.L2096:
	call.32     %r9078 <- testnext, %arg1, $44
	br          %r9078, .L2095, .L2107

.L2107:
	call.32     %r9080 <- testnext, %arg1, $59
	br          %r9080, .L2095, .L2097

.L2097:
	call        check_match, %arg1, $125, $123, %r9046
	call        lastlistfield, %r9044, %r9052
	load.64     %r9086 <- 0[%r9044]
	load.64     %r9087 <- 24[%r9086]
	scast.64    %r9089 <- (32) %r9048
	muls.64     %r9090 <- %r9089, $4
	add.64      %r9091 <- %r9087, %r9090
	load.32     %r9092 <- 0[%r9091]
	and.32      %r9093 <- %r9092, $0x7fffff
	load.32     %r9094 <- 36[cc]
	call.32     %r9096 <- luaO_int2fb, %r9094
	shl.32      %r9098 <- %r9096, $23
	and.32      %r9099 <- %r9098, $0xff800000
	or.32       %r9100 <- %r9093, %r9099
	load.64     %r9102 <- 0[%r9044]
	load.64     %r9103 <- 24[%r9102]
	add.64      %r9107 <- %r9103, %r9090
	store.32    %r9100 -> 0[%r9107]
	load.64     %r9109 <- 0[%r9044]
	load.64     %r9110 <- 24[%r9109]
	add.64      %r9114 <- %r9110, %r9090
	load.32     %r9115 <- 0[%r9114]
	and.32      %r9116 <- %r9115, $0xff803fff
	load.32     %r9117 <- 32[cc]
	call.32     %r9119 <- luaO_int2fb, %r9117
	shl.32      %r9121 <- %r9119, $14
	and.32      %r9122 <- %r9121, $0x7fc000
	or.32       %r9123 <- %r9116, %r9122
	load.64     %r9125 <- 0[%r9044]
	load.64     %r9126 <- 24[%r9125]
	add.64      %r9130 <- %r9126, %r9090
	store.32    %r9123 -> 0[%r9130]
	ret


parlist:
.L2109:
	<entry-point>
	load.64     %r9132 <- 48[%arg1]
	load.64     %r9134 <- 0[%r9132]
	store.8     $0 -> 114[%r9134]
	load.32     %r9137 <- 16[%arg1]
	setne.32    %r9138 <- %r9137, $41
	phisrc.32   %phi1371(nparams) <- $0
	phisrc.32   %phi1373(nparams) <- $0
	phisrc.32   %phi1375 <- %r9137
	br          %r9138, .L2112, .L2111

.L2112:
	load.32     %r9140 <- 16[%arg1]
	switch      %r9140, 279 -> .L2117, 285 -> .L2116, default -> .L2118

.L2116:
	call.64     %r9143 <- str_checkname, %arg1
	phi.32      %r9144 <- %phi1373(nparams), %phi1374(nparams)
	add.32      %r9145 <- %r9144, $1
	call        new_localvar, %arg1, %r9143, %r9144
	phisrc.32   %phi1372(nparams) <- %r9145
	phisrc.32   %phi1374(nparams) <- %r9145
	br          .L2113

.L2117:
	call        luaX_next, %arg1
	load.8      %r9148 <- 114[%r9134]
	cast.32     %r9149 <- (8) %r9148
	or.32       %r9150 <- %r9149, $2
	scast.8     %r9151 <- (32) %r9150
	store.8     %r9151 -> 114[%r9134]
	br          .L2113

.L2118:
	symaddr.64  %r9153 <- <anon symbol:0x62d0013a12f0>
	call        luaX_syntaxerror, %arg1, %r9153
	br          .L2113

.L2113:
	load.8      %r9155 <- 114[%r9134]
	br          %r9155, .L2111, .L2119

.L2119:
	call.32     %r9157 <- testnext, %arg1, $44
	br          %r9157, .L2112, .L2111

.L2111:
	phi.32      %r9159 <- %phi1371(nparams), %phi1372(nparams)
	call        adjustlocalvars, %arg1, %r9159
	load.8      %r9161 <- 74[%r9132]
	cast.32     %r9162 <- (8) %r9161
	load.8      %r9164 <- 114[%r9134]
	cast.32     %r9165 <- (8) %r9164
	and.32      %r9166 <- %r9165, $1
	sub.32      %r9167 <- %r9162, %r9166
	scast.8     %r9168 <- (32) %r9167
	store.8     %r9168 -> 113[%r9134]
	load.8      %r9172 <- 74[%r9132]
	cast.32     %r9173 <- (8) %r9172
	call        luaK_reserveregs, %r9132, %r9173
	ret


body:
.L2121:
	<entry-point>
	symaddr.64  %r9175 <- new_fs
	call        open_func, %arg1, %r9175
	load.64     %r9177 <- 0[new_fs]
	store.32    %arg4 -> 96[%r9177]
	call        checknext, %arg1, $40
	br          %arg3, .L2122, .L2123

.L2122:
	symaddr.64  %r9182 <- <anon symbol:0x62d0013a1eb8>
	call.64     %r9183 <- luaX_newstring, %arg1, %r9182, $4
	call        new_localvar, %arg1, %r9183, $0
	call        adjustlocalvars, %arg1, $1
	br          .L2123

.L2123:
	call        parlist, %arg1
	call        checknext, %arg1, $41
	call        chunk, %arg1
	load.32     %r9189 <- 4[%arg1]
	load.64     %r9190 <- 0[new_fs]
	store.32    %r9189 -> 100[%r9190]
	call        check_match, %arg1, $262, $265, %arg4
	call        close_func, %arg1
	call        pushclosure, %arg1, %r9175, %arg2
	ret


explist1:
.L2125:
	<entry-point>
	call        expr, %arg1, %arg2
	phisrc.32   %phi1379(n) <- $1
	br          .L2129

.L2129:
	call.32     %r9200 <- testnext, %arg1, $44
	phi.32      %r9206 <- %phi1379(n), %phi1380(n)
	br          %r9200, .L2126, .L2130

.L2126:
	load.64     %r9202 <- 48[%arg1]
	call        luaK_exp2nextreg, %r9202, %arg2
	call        expr, %arg1, %arg2
	add.32      %r9207 <- %r9206, $1
	phisrc.32   %phi1380(n) <- %r9207
	br          .L2129

.L2130:
	ret.32      %r9206


funcargs:
.L2131:
	<entry-point>
	load.64     %r9211 <- 48[%arg1]
	load.32     %r9213 <- 4[%arg1]
	load.32     %r9215 <- 16[%arg1]
	switch      %r9215, 40 -> .L2133, 123 -> .L2134, 286 -> .L2135, default -> .L2136

.L2133:
	load.32     %r9218 <- 8[%arg1]
	setne.32    %r9219 <- %r9213, %r9218
	br          %r9219, .L2137, .L2138

.L2137:
	symaddr.64  %r9221 <- <anon symbol:0x62d0013a3390>
	call        luaX_syntaxerror, %arg1, %r9221
	br          .L2138

.L2138:
	call        luaX_next, %arg1
	load.32     %r9224 <- 16[%arg1]
	seteq.32    %r9225 <- %r9224, $41
	br          %r9225, .L2139, .L2140

.L2139:
	store.32    $0 -> 0[args]
	br          .L2141

.L2140:
	symaddr.64  %r9227 <- args
	call.32     %r9228 <- explist1, %arg1, %r9227
	call        luaK_setreturns, %r9211, %r9227, $0xffffffff
	br          .L2141

.L2141:
	call        check_match, %arg1, $41, $40, %r9213
	br          .L2132

.L2134:
	symaddr.64  %r9234 <- args
	call        constructor, %arg1, %r9234
	br          .L2132

.L2135:
	symaddr.64  %r9236 <- args
	load.64     %r9238 <- 24[%arg1]
	call        codestring, %arg1, %r9236, %r9238
	call        luaX_next, %arg1
	br          .L2132

.L2136:
	symaddr.64  %r9241 <- <anon symbol:0x62d0013a4210>
	call        luaX_syntaxerror, %arg1, %r9241
	br          .L2142

.L2132:
	load.32     %r9243 <- 8[%arg2]
	load.32     %r9244 <- 0[args]
	seteq.32    %r9246 <- %r9244, $13
	seteq.32    %r9249 <- %r9244, $14
	or-bool.32  %r9250 <- %r9246, %r9249
	br          %r9250, .L2143, .L2144

.L2143:
	phisrc.32   %phi1382(nparams) <- $0xffffffff
	br          .L2145

.L2144:
	br          %r9244, .L2146, .L2147

.L2146:
	symaddr.64  %r9255 <- args
	call        luaK_exp2nextreg, %r9211, %r9255
	br          .L2147

.L2147:
	load.32     %r9257 <- 60[%r9211]
	add.32      %r9259 <- %r9243, $1
	sub.32      %r9260 <- %r9257, %r9259
	phisrc.32   %phi1383(nparams) <- %r9260
	br          .L2145

.L2145:
	phi.32      %r9264 <- %phi1382(nparams), %phi1383(nparams)
	add.32      %r9265 <- %r9264, $1
	call.32     %r9266 <- luaK_codeABC, %r9211, $28, %r9243, %r9265, $2
	call        init_exp, %arg2, $13, %r9266
	call        luaK_fixline, %r9211, %r9213
	add.32      %r9270 <- %r9243, $1
	store.32    %r9270 -> 60[%r9211]
	br          .L2142

.L2142:
	ret


prefixexp:
.L2148:
	<entry-point>
	load.32     %r9273 <- 16[%arg1]
	switch      %r9273, 40 -> .L2150, 285 -> .L2151, default -> .L2152

.L2150:
	load.32     %r9275 <- 4[%arg1]
	call        luaX_next, %arg1
	call        expr, %arg1, %arg2
	call        check_match, %arg1, $41, $40, %r9275
	load.64     %r9282 <- 48[%arg1]
	call        luaK_dischargevars, %r9282, %arg2
	br          .L2153

.L2151:
	call        singlevar, %arg1, %arg2
	br          .L2153

.L2152:
	symaddr.64  %r9287 <- <anon symbol:0x62d0013a7720>
	call        luaX_syntaxerror, %arg1, %r9287
	br          .L2153

.L2153:
	ret


primaryexp:
.L2154:
	<entry-point>
	load.64     %r9289 <- 48[%arg1]
	call        prefixexp, %arg1, %arg2
	br          .L2155

.L2155:
	load.32     %r9293 <- 16[%arg1]
	switch      %r9293, 40 -> .L2165, 46 -> .L2160, 58 -> .L2162, 91 -> .L2161, 123 -> .L2165, 286 -> .L2165, default -> .L2167

.L2160:
	call        field, %arg1, %arg2
	br          .L2155

.L2161:
	call.32     %r9298 <- luaK_exp2anyreg, %r9289, %arg2
	symaddr.64  %r9300 <- key
	call        yindex, %arg1, %r9300
	call        luaK_indexed, %r9289, %arg2, %r9300
	br          .L2155

.L2162:
	call        luaX_next, %arg1
	symaddr.64  %r9306 <- key
	call        checkname, %arg1, %r9306
	call        luaK_self, %r9289, %arg2, %r9306
	call        funcargs, %arg1, %arg2
	br          .L2155

.L2165:
	call        luaK_exp2nextreg, %r9289, %arg2
	call        funcargs, %arg1, %arg2
	br          .L2155

.L2167:
	ret


simpleexp:
.L2168:
	<entry-point>
	load.32     %r9317 <- 16[%arg1]
	switch      %r9317, 123 -> .L2176, 263 -> .L2174, 265 -> .L2177, 269 -> .L2172, 275 -> .L2173, 279 -> .L2175, 284 -> .L2170, 286 -> .L2171, default -> .L2178

.L2170:
	call        init_exp, %arg2, $5, $0
	load.64     %r9320 <- 24[%arg1]
	store.64    %r9320 -> 8[%arg2]
	br          .L2169

.L2171:
	load.64     %r9325 <- 24[%arg1]
	call        codestring, %arg1, %arg2, %r9325
	br          .L2169

.L2172:
	call        init_exp, %arg2, $1, $0
	br          .L2169

.L2173:
	call        init_exp, %arg2, $2, $0
	br          .L2169

.L2174:
	call        init_exp, %arg2, $3, $0
	br          .L2169

.L2175:
	load.64     %r9330 <- 48[%arg1]
	load.64     %r9332 <- 0[%r9330]
	load.8      %r9333 <- 114[%r9332]
	phisrc.64   %phi1384 <- %r9332
	br          %r9333, .L2180, .L2179

.L2179:
	symaddr.64  %r9335 <- <anon symbol:0x62d0013a9080>
	call        luaX_syntaxerror, %arg1, %r9335
	br          .L2180

.L2180:
	load.64     %r9337 <- 0[%r9330]
	load.8      %r9338 <- 114[%r9337]
	cast.32     %r9339 <- (8) %r9338
	and.32      %r9340 <- %r9339, $0xfffffffb
	scast.8     %r9341 <- (32) %r9340
	store.8     %r9341 -> 114[%r9337]
	call.32     %r9344 <- luaK_codeABC, %r9330, $37, $0, $1, $0
	call        init_exp, %arg2, $14, %r9344
	br          .L2169

.L2176:
	call        constructor, %arg1, %arg2
	br          .L2181

.L2177:
	call        luaX_next, %arg1
	load.32     %r9351 <- 4[%arg1]
	call        body, %arg1, %arg2, $0, %r9351
	br          .L2181

.L2178:
	call        primaryexp, %arg1, %arg2
	br          .L2181

.L2169:
	call        luaX_next, %arg1
	br          .L2181

.L2181:
	ret


getunopr:
.L2182:
	<entry-point>
	switch      %arg1, 35 -> .L2186, 45 -> .L2185, 270 -> .L2184, default -> .L2187

.L2184:
	phisrc.32   %phi1385(return) <- $1
	br          .L2188

.L2185:
	phisrc.32   %phi1386(return) <- $0
	br          .L2188

.L2186:
	phisrc.32   %phi1387(return) <- $2
	br          .L2188

.L2187:
	phisrc.32   %phi1388(return) <- $3
	br          .L2188

.L2188:
	phi.32      %r9356 <- %phi1385(return), %phi1386(return), %phi1387(return), %phi1388(return)
	ret.32      %r9356


getbinopr:
.L2189:
	<entry-point>
	switch      %arg1, 37 -> .L2195, 42 -> .L2193, 43 -> .L2191, 45 -> .L2192, 47 -> .L2194, 60 -> .L2200, 62 -> .L2202, 94 -> .L2196, 257 -> .L2204, 271 -> .L2205, 278 -> .L2197, 280 -> .L2199, 281 -> .L2203, 282 -> .L2201, 283 -> .L2198, default -> .L2206

.L2191:
	phisrc.32   %phi1389(return) <- $0
	br          .L2207

.L2192:
	phisrc.32   %phi1390(return) <- $1
	br          .L2207

.L2193:
	phisrc.32   %phi1391(return) <- $2
	br          .L2207

.L2194:
	phisrc.32   %phi1392(return) <- $3
	br          .L2207

.L2195:
	phisrc.32   %phi1393(return) <- $4
	br          .L2207

.L2196:
	phisrc.32   %phi1394(return) <- $5
	br          .L2207

.L2197:
	phisrc.32   %phi1395(return) <- $6
	br          .L2207

.L2198:
	phisrc.32   %phi1396(return) <- $7
	br          .L2207

.L2199:
	phisrc.32   %phi1397(return) <- $8
	br          .L2207

.L2200:
	phisrc.32   %phi1398(return) <- $9
	br          .L2207

.L2201:
	phisrc.32   %phi1399(return) <- $10
	br          .L2207

.L2202:
	phisrc.32   %phi1400(return) <- $11
	br          .L2207

.L2203:
	phisrc.32   %phi1401(return) <- $12
	br          .L2207

.L2204:
	phisrc.32   %phi1402(return) <- $13
	br          .L2207

.L2205:
	phisrc.32   %phi1403(return) <- $14
	br          .L2207

.L2206:
	phisrc.32   %phi1404(return) <- $15
	br          .L2207

.L2207:
	phi.32      %r9358 <- %phi1389(return), %phi1390(return), %phi1391(return), %phi1392(return), %phi1393(return), %phi1394(return), %phi1395(return), %phi1396(return), %phi1397(return), %phi1398(return), %phi1399(return), %phi1400(return), %phi1401(return), %phi1402(return), %phi1403(return), %phi1404(return)
	ret.32      %r9358


subexpr:
.L2208:
	<entry-point>
	call        enterlevel, %arg1
	load.32     %r9361 <- 16[%arg1]
	call.32     %r9362 <- getunopr, %r9361
	setne.32    %r9365 <- %r9362, $3
	br          %r9365, .L2209, .L2210

.L2209:
	call        luaX_next, %arg1
	call.32     %r9369 <- subexpr, %arg1, %arg2, $8
	load.64     %r9371 <- 48[%arg1]
	call        luaK_prefix, %r9371, %r9362, %arg2
	br          .L2211

.L2210:
	call        simpleexp, %arg1, %arg2
	br          .L2211

.L2211:
	load.32     %r9377 <- 16[%arg1]
	call.32     %r9378(op) <- getbinopr, %r9377
	phisrc.32   %phi1410(op) <- %r9378(op)
	br          .L2215

.L2215:
	phi.32      %r9379(op) <- %phi1410(op), %phi1411(op)
	setne.32    %r9381 <- %r9379(op), $15
	br          %r9381, .L2216, .L2214

.L2216:
	symaddr.64  %r9382 <- priority
	scast.64    %r9384 <- (32) %r9379(op)
	muls.64     %r9385 <- %r9384, $2
	add.64      %r9386 <- %r9382, %r9385
	load.8      %r9387 <- 0[%r9386]
	cast.32     %r9388 <- (8) %r9387
	seta.32     %r9390 <- %r9388, %arg3
	br          %r9390, .L2212, .L2214

.L2212:
	call        luaX_next, %arg1
	load.64     %r9393 <- 48[%arg1]
	call        luaK_infix, %r9393, %r9379(op), %arg2
	symaddr.64  %r9397 <- v2
	load.8      %r9403 <- 1[%r9386]
	cast.32     %r9404 <- (8) %r9403
	call.32     %r9405 <- subexpr, %arg1, %r9397, %r9404
	load.64     %r9407 <- 48[%arg1]
	call        luaK_posfix, %r9407, %r9379(op), %arg2, %r9397
	phisrc.32   %phi1411(op) <- %r9405
	br          .L2215

.L2214:
	load.64     %r9413 <- 56[%arg1]
	load.16     %r9414 <- 96[%r9413]
	add.16      %r9415 <- %r9414, $-1
	store.16    %r9415 -> 96[%r9413]
	ret.32      %r9379(op)


expr:
.L2218:
	<entry-point>
	call.32     %r9420 <- subexpr, %arg1, %arg2, $0
	ret


block_follow:
.L2220:
	<entry-point>
	switch      %arg1, 260 -> .L2226, 261 -> .L2226, 262 -> .L2226, 276 -> .L2226, 287 -> .L2226, default -> .L2227

.L2226:
	phisrc.32   %phi1412(return) <- $1
	br          .L2228

.L2227:
	phisrc.32   %phi1413(return) <- $0
	br          .L2228

.L2228:
	phi.32      %r9422 <- %phi1412(return), %phi1413(return)
	ret.32      %r9422


block:
.L2229:
	<entry-point>
	load.64     %r9424 <- 48[%arg1]
	symaddr.64  %r9426 <- bl
	call        enterblock, %r9424, %r9426, $0
	call        chunk, %arg1
	call        leaveblock, %r9424
	ret


check_conflict:
.L2231:
	<entry-point>
	load.64     %r9430 <- 48[%arg1]
	load.32     %r9432 <- 60[%r9430]
	phisrc.64   %phi1423(lh) <- %arg2
	phisrc.32   %phi1425(conflict) <- $0
	phisrc.32   %phi1428 <- %r9432
	phisrc.32   %phi1430 <- %r9432
	br          .L2235

.L2235:
	phi.64      %r9433(lh) <- %phi1423(lh), %phi1424(lh)
	br          %r9433(lh), .L2232, .L2234

.L2232:
	load.32     %r9435 <- 8[%r9433(lh)]
	seteq.32    %r9437 <- %r9435, $9
	br          %r9437, .L2236, .L2233

.L2236:
	load.32     %r9439 <- 16[%r9433(lh)]
	load.32     %r9441 <- 8[%arg3]
	seteq.32    %r9442 <- %r9439, %r9441
	phisrc.32   %phi1429 <- %r9441
	phisrc.32   %phi1431 <- %r9441
	br          %r9442, .L2238, .L2239

.L2238:
	store.32    %r9432 -> 16[%r9433(lh)]
	phisrc.32   %phi1426(conflict) <- $1
	br          .L2239

.L2239:
	load.32     %r9446 <- 20[%r9433(lh)]
	load.32     %r9448 <- 8[%arg3]
	seteq.32    %r9449 <- %r9446, %r9448
	br          %r9449, .L2240, .L2233

.L2240:
	store.32    %r9432 -> 20[%r9433(lh)]
	phisrc.32   %phi1427(conflict) <- $1
	br          .L2233

.L2233:
	load.64     %r9453 <- 0[%r9433(lh)]
	phisrc.64   %phi1424(lh) <- %r9453
	br          .L2235

.L2234:
	phi.32      %r9454 <- %phi1425(conflict), %phi1426(conflict), %phi1427(conflict)
	br          %r9454, .L2242, .L2243

.L2242:
	load.32     %r9457 <- 60[%r9430]
	load.32     %r9459 <- 8[%arg3]
	call.32     %r9460 <- luaK_codeABC, %r9430, $0, %r9457, %r9459, $0
	call        luaK_reserveregs, %r9430, $1
	br          .L2243

.L2243:
	ret


assignment:
.L2244:
	<entry-point>
	load.32     %r9463 <- 8[%arg2]
	setle.32    %r9465 <- $6, %r9463
	br          %r9465, .L2247, .L2245

.L2247:
	setle.32    %r9469 <- %r9463, $9
	br          %r9469, .L2246, .L2245

.L2245:
	symaddr.64  %r9471 <- <anon symbol:0x62d0013ad390>
	call        luaX_syntaxerror, %arg1, %r9471
	br          .L2246

.L2246:
	call.32     %r9473 <- testnext, %arg1, $44
	br          %r9473, .L2248, .L2249

.L2248:
	store.64    %arg2 -> 0[nv]
	symaddr.64  %r9476 <- nv
	add.64      %r9477 <- %r9476, $8
	call        primaryexp, %arg1, %r9477
	load.32     %r9478 <- 8[nv]
	seteq.32    %r9480 <- %r9478, $6
	br          %r9480, .L2250, .L2251

.L2250:
	call        check_conflict, %arg1, %arg2, %r9477
	br          .L2251

.L2251:
	load.64     %r9487 <- 56[%arg1]
	load.16     %r9488 <- 96[%r9487]
	cast.32     %r9489 <- (16) %r9488
	sub.32      %r9490 <- $200, %r9489
	setgt.32    %r9491 <- %arg3, %r9490
	br          %r9491, .L2252, .L2253

.L2252:
	load.64     %r9493 <- 48[%arg1]
	symaddr.64  %r9499 <- <anon symbol:0x62d0013b05e8>
	call        errorlimit, %r9493, %r9490, %r9499
	br          .L2253

.L2253:
	add.32      %r9503 <- %arg3, $1
	call        assignment, %arg1, %r9476, %r9503
	br          .L2254

.L2249:
	call        checknext, %arg1, $61
	symaddr.64  %r9506 <- e
	call.32     %r9507 <- explist1, %arg1, %r9506
	setne.32    %r9510 <- %r9507, %arg3
	br          %r9510, .L2255, .L2256

.L2255:
	call        adjust_assign, %arg1, %arg3, %r9507, %r9506
	setgt.32    %r9517 <- %r9507, %arg3
	br          %r9517, .L2257, .L2254

.L2257:
	sub.32      %r9520 <- %r9507, %arg3
	load.64     %r9522 <- 48[%arg1]
	load.32     %r9523 <- 60[%r9522]
	sub.32      %r9525 <- %r9523, %r9520
	store.32    %r9525 -> 60[%r9522]
	br          .L2254

.L2256:
	load.64     %r9528 <- 48[%arg1]
	call        luaK_setoneret, %r9528, %r9506
	load.64     %r9531 <- 48[%arg1]
	add.64      %r9533 <- %arg2, $8
	call        luaK_storevar, %r9531, %r9533, %r9506
	br          .L2260

.L2254:
	symaddr.64  %r9535 <- e
	load.64     %r9537 <- 48[%arg1]
	load.32     %r9538 <- 60[%r9537]
	add.32      %r9539 <- %r9538, $-1
	call        init_exp, %r9535, $12, %r9539
	load.64     %r9541 <- 48[%arg1]
	add.64      %r9543 <- %arg2, $8
	symaddr.64  %r9544 <- e
	call        luaK_storevar, %r9541, %r9543, %r9544
	br          .L2260

.L2260:
	ret


cond:
.L2261:
	<entry-point>
	symaddr.64  %r9546 <- v
	call        expr, %arg1, %r9546
	load.32     %r9547 <- 0[v]
	seteq.32    %r9549 <- %r9547, $1
	br          %r9549, .L2262, .L2263

.L2262:
	store.32    $3 -> 0[v]
	br          .L2263

.L2263:
	load.64     %r9551 <- 48[%arg1]
	call        luaK_goiftrue, %r9551, %r9546
	load.32     %r9553 <- 20[v]
	ret.32      %r9553


breakstat:
.L2265:
	<entry-point>
	load.64     %r9556 <- 48[%arg1]
	load.64     %r9558(bl) <- 40[%r9556]
	phisrc.64   %phi1443(bl) <- %r9558(bl)
	phisrc.32   %phi1445(upval) <- $0
	phisrc.32   %phi1447(upval) <- $0
	br          .L2269

.L2269:
	phi.64      %r9559(bl) <- %phi1443(bl), %phi1444(bl)
	br          %r9559(bl), .L2270, .L2271

.L2270:
	load.8      %r9561 <- 14[%r9559(bl)]
	br          %r9561, .L2268, .L2266

.L2266:
	load.8      %r9563 <- 13[%r9559(bl)]
	cast.32     %r9564 <- (8) %r9563
	phi.32      %r9565 <- %phi1447(upval), %phi1448(upval)
	or.32       %r9567 <- %r9565, %r9564
	load.64     %r9570 <- 0[%r9559(bl)]
	phisrc.64   %phi1444(bl) <- %r9570
	phisrc.32   %phi1446(upval) <- %r9567
	phisrc.32   %phi1448(upval) <- %r9567
	br          .L2269

.L2268:
	br          %r9559(bl), .L2272, .L2271

.L2271:
	symaddr.64  %r9573 <- <anon symbol:0x62d0013b35f0>
	call        luaX_syntaxerror, %arg1, %r9573
	br          .L2272

.L2272:
	phi.32      %r9574 <- %phi1445(upval), %phi1446(upval)
	br          %r9574, .L2273, .L2274

.L2273:
	load.8      %r9577 <- 12[%r9559(bl)]
	cast.32     %r9578 <- (8) %r9577
	call.32     %r9579 <- luaK_codeABC, %r9556, $35, %r9578, $0, $0
	br          .L2274

.L2274:
	add.64      %r9582 <- %r9559(bl), $8
	call.32     %r9584 <- luaK_jump, %r9556
	call        luaK_concat, %r9556, %r9582, %r9584
	ret


whilestat:
.L2276:
	<entry-point>
	load.64     %r9586 <- 48[%arg1]
	call        luaX_next, %arg1
	call.32     %r9589 <- luaK_getlabel, %r9586
	call.32     %r9591 <- cond, %arg1
	symaddr.64  %r9593 <- bl
	call        enterblock, %r9586, %r9593, $1
	call        checknext, %arg1, $259
	call        block, %arg1
	call.32     %r9598 <- luaK_jump, %r9586
	call        luaK_patchlist, %r9586, %r9598, %r9589
	call        check_match, %arg1, $262, $277, %arg2
	call        leaveblock, %r9586
	call        luaK_patchtohere, %r9586, %r9591
	ret


repeatstat:
.L2278:
	<entry-point>
	load.64     %r9606 <- 48[%arg1]
	call.32     %r9608 <- luaK_getlabel, %r9606
	symaddr.64  %r9610 <- bl1
	call        enterblock, %r9606, %r9610, $1
	symaddr.64  %r9612 <- bl2
	call        enterblock, %r9606, %r9612, $0
	call        luaX_next, %arg1
	call        chunk, %arg1
	call        check_match, %arg1, $276, $272, %arg2
	call.32     %r9618 <- cond, %arg1
	load.8      %r9619 <- 13[bl2]
	br          %r9619, .L2280, .L2279

.L2279:
	call        leaveblock, %r9606
	load.64     %r9622 <- 48[%arg1]
	call        luaK_patchlist, %r9622, %r9618, %r9608
	br          .L2281

.L2280:
	call        breakstat, %arg1
	load.64     %r9627 <- 48[%arg1]
	call        luaK_patchtohere, %r9627, %r9618
	call        leaveblock, %r9606
	load.64     %r9631 <- 48[%arg1]
	call.32     %r9633 <- luaK_jump, %r9606
	call        luaK_patchlist, %r9631, %r9633, %r9608
	br          .L2281

.L2281:
	call        leaveblock, %r9606
	ret


exp1:
.L2283:
	<entry-point>
	symaddr.64  %r9637 <- e
	call        expr, %arg1, %r9637
	load.32     %r9638 <- 0[e]
	load.64     %r9641 <- 48[%arg1]
	call        luaK_exp2nextreg, %r9641, %r9637
	ret.32      %r9638


forbody:
.L2285:
	<entry-point>
	load.64     %r9646 <- 48[%arg1]
	call        adjustlocalvars, %arg1, $3
	call        checknext, %arg1, $259
	br          %arg5, .L2286, .L2287

.L2286:
	call.32     %r9652 <- luaK_codeABx, %r9646, $32, %arg2, $0x1fffe
	phisrc.32   %phi1450 <- %r9652
	br          .L2288

.L2287:
	call.32     %r9654 <- luaK_jump, %r9646
	phisrc.32   %phi1451 <- %r9654
	br          .L2288

.L2288:
	phi.32      %r9655 <- %phi1450, %phi1451
	symaddr.64  %r9657 <- bl
	call        enterblock, %r9646, %r9657, $0
	call        adjustlocalvars, %arg1, %arg4
	call        luaK_reserveregs, %r9646, %arg4
	call        block, %arg1
	call        leaveblock, %r9646
	call        luaK_patchtohere, %r9646, %r9655
	br          %arg5, .L2289, .L2290

.L2289:
	call.32     %r9669 <- luaK_codeABx, %r9646, $31, %arg2, $0x1fffe
	phisrc.32   %phi1452 <- %r9669
	br          .L2291

.L2290:
	call.32     %r9673 <- luaK_codeABC, %r9646, $33, %arg2, $0, %arg4
	phisrc.32   %phi1453 <- %r9673
	br          .L2291

.L2291:
	phi.32      %r9674 <- %phi1452, %phi1453
	call        luaK_fixline, %r9646, %arg3
	br          %arg5, .L2292, .L2293

.L2292:
	phisrc.32   %phi1454 <- %r9674
	br          .L2294

.L2293:
	call.32     %r9681 <- luaK_jump, %r9646
	phisrc.32   %phi1455 <- %r9681
	br          .L2294

.L2294:
	phi.32      %r9682 <- %phi1454, %phi1455
	add.32      %r9684 <- %r9655, $1
	call        luaK_patchlist, %r9646, %r9682, %r9684
	ret


fornum:
.L2296:
	<entry-point>
	load.64     %r9686 <- 48[%arg1]
	load.32     %r9688 <- 60[%r9686]
	symaddr.64  %r9691 <- <anon symbol:0x62d0013b5b18>
	call.64     %r9692 <- luaX_newstring, %arg1, %r9691, $11
	call        new_localvar, %arg1, %r9692, $0
	symaddr.64  %r9695 <- <anon symbol:0x62d0013b6088>
	call.64     %r9696 <- luaX_newstring, %arg1, %r9695, $11
	call        new_localvar, %arg1, %r9696, $1
	symaddr.64  %r9699 <- <anon symbol:0x62d0013b65f8>
	call.64     %r9700 <- luaX_newstring, %arg1, %r9699, $10
	call        new_localvar, %arg1, %r9700, $2
	call        new_localvar, %arg1, %arg2, $3
	call        checknext, %arg1, $61
	call.32     %r9705 <- exp1, %arg1
	call        checknext, %arg1, $44
	call.32     %r9708 <- exp1, %arg1
	call.32     %r9710 <- testnext, %arg1, $44
	br          %r9710, .L2297, .L2298

.L2297:
	call.32     %r9712 <- exp1, %arg1
	br          .L2299

.L2298:
	load.32     %r9715 <- 60[%r9686]
	call.32     %r9717 <- luaK_numberK, %r9686, $1
	call.32     %r9719 <- luaK_codeABx, %r9686, $1, %r9715, %r9717
	call        luaK_reserveregs, %r9686, $1
	br          .L2299

.L2299:
	call        forbody, %arg1, %r9688, %arg3, $1, $1
	ret


forlist:
.L2301:
	<entry-point>
	load.64     %r9725 <- 48[%arg1]
	load.32     %r9727 <- 60[%r9725]
	symaddr.64  %r9730 <- <anon symbol:0x62d0013b70d8>
	call.64     %r9731 <- luaX_newstring, %arg1, %r9730, $15
	call        new_localvar, %arg1, %r9731, $0
	symaddr.64  %r9736 <- <anon symbol:0x62d0013b7648>
	call.64     %r9737 <- luaX_newstring, %arg1, %r9736, $11
	call        new_localvar, %arg1, %r9737, $1
	symaddr.64  %r9742 <- <anon symbol:0x62d0013b7bb8>
	call.64     %r9743 <- luaX_newstring, %arg1, %r9742, $13
	call        new_localvar, %arg1, %r9743, $2
	call        new_localvar, %arg1, %arg2, $3
	phisrc.32   %phi1458(nvars) <- $4
	br          .L2305

.L2305:
	call.32     %r9751 <- testnext, %arg1, $44
	phi.32      %r9755 <- %phi1458(nvars), %phi1459(nvars)
	br          %r9751, .L2302, .L2304

.L2302:
	call.64     %r9754 <- str_checkname, %arg1
	add.32      %r9756 <- %r9755, $1
	call        new_localvar, %arg1, %r9754, %r9755
	phisrc.32   %phi1459(nvars) <- %r9756
	br          .L2305

.L2304:
	call        checknext, %arg1, $267
	load.32     %r9759 <- 4[%arg1]
	symaddr.64  %r9762 <- e
	call.32     %r9763 <- explist1, %arg1, %r9762
	call        adjust_assign, %arg1, $3, %r9763, %r9762
	call        luaK_checkstack, %r9725, $3
	add.32      %r9770 <- %r9755, $-3
	call        forbody, %arg1, %r9727, %r9759, %r9770, $0
	ret


forstat:
.L2307:
	<entry-point>
	load.64     %r9772 <- 48[%arg1]
	symaddr.64  %r9774 <- bl
	call        enterblock, %r9772, %r9774, $1
	call        luaX_next, %arg1
	call.64     %r9777 <- str_checkname, %arg1
	load.32     %r9779 <- 16[%arg1]
	switch      %r9779, 44 -> .L2311, 61 -> .L2309, 267 -> .L2311, default -> .L2312

.L2309:
	call        fornum, %arg1, %r9777, %arg2
	br          .L2308

.L2311:
	call        forlist, %arg1, %r9777
	br          .L2308

.L2312:
	symaddr.64  %r9786 <- <anon symbol:0x62d0013c4c40>
	call        luaX_syntaxerror, %arg1, %r9786
	br          .L2308

.L2308:
	call        check_match, %arg1, $262, $264, %arg2
	call        leaveblock, %r9772
	ret


test_then_block:
.L2314:
	<entry-point>
	call        luaX_next, %arg1
	call.32     %r9792 <- cond, %arg1
	call        checknext, %arg1, $274
	call        block, %arg1
	ret.32      %r9792


ifstat:
.L2316:
	<entry-point>
	load.64     %r9798 <- 48[%arg1]
	store.32    $0xffffffff -> 0[escapelist]
	call.32     %r9800(flist) <- test_then_block, %arg1
	phisrc.32   %phi1461(flist) <- %r9800(flist)
	phisrc.32   %phi1463(flist) <- %r9800(flist)
	phisrc.32   %phi1465(flist) <- %r9800(flist)
	br          .L2320

.L2320:
	load.32     %r9802 <- 16[%arg1]
	seteq.32    %r9803 <- %r9802, $261
	br          %r9803, .L2317, .L2319

.L2317:
	symaddr.64  %r9805 <- escapelist
	call.32     %r9807 <- luaK_jump, %r9798
	call        luaK_concat, %r9798, %r9805, %r9807
	phi.32      %r9809 <- %phi1465(flist), %phi1466(flist)
	call        luaK_patchtohere, %r9798, %r9809
	call.32     %r9811 <- test_then_block, %arg1
	phisrc.32   %phi1462(flist) <- %r9811
	phisrc.32   %phi1464(flist) <- %r9811
	phisrc.32   %phi1466(flist) <- %r9811
	br          .L2320

.L2319:
	seteq.32    %r9814 <- %r9802, $260
	br          %r9814, .L2321, .L2322

.L2321:
	symaddr.64  %r9816 <- escapelist
	call.32     %r9818 <- luaK_jump, %r9798
	call        luaK_concat, %r9798, %r9816, %r9818
	phi.32      %r9820 <- %phi1463(flist), %phi1464(flist)
	call        luaK_patchtohere, %r9798, %r9820
	call        luaX_next, %arg1
	call        block, %arg1
	br          .L2323

.L2322:
	symaddr.64  %r9824 <- escapelist
	phi.32      %r9825 <- %phi1461(flist), %phi1462(flist)
	call        luaK_concat, %r9798, %r9824, %r9825
	br          .L2323

.L2323:
	load.32     %r9827 <- 0[escapelist]
	call        luaK_patchtohere, %r9798, %r9827
	call        check_match, %arg1, $262, $266, %arg2
	ret


localfunc:
.L2325:
	<entry-point>
	load.64     %r9831 <- 48[%arg1]
	call.64     %r9834 <- str_checkname, %arg1
	call        new_localvar, %arg1, %r9834, $0
	symaddr.64  %r9835 <- v
	load.32     %r9837 <- 60[%r9831]
	call        init_exp, %r9835, $6, %r9837
	call        luaK_reserveregs, %r9831, $1
	call        adjustlocalvars, %arg1, $1
	symaddr.64  %r9841 <- b
	load.32     %r9843 <- 4[%arg1]
	call        body, %arg1, %r9841, $0, %r9843
	call        luaK_storevar, %r9831, %r9835, %r9841
	load.32     %r9848 <- 48[%r9831]
	load.64     %r9850 <- 0[%r9831]
	load.64     %r9851 <- 48[%r9850]
	add.64      %r9853 <- %r9831, $196
	load.8      %r9855 <- 74[%r9831]
	cast.32     %r9856 <- (8) %r9855
	add.32      %r9857 <- %r9856, $-1
	scast.64    %r9858 <- (32) %r9857
	muls.64     %r9859 <- %r9858, $2
	add.64      %r9860 <- %r9853, %r9859
	load.16     %r9861 <- 0[%r9860]
	cast.64     %r9862 <- (16) %r9861
	muls.64     %r9863 <- %r9862, $16
	add.64      %r9864 <- %r9851, %r9863
	store.32    %r9848 -> 8[%r9864]
	ret


localstat:
.L2327:
	<entry-point>
	phisrc.32   %phi1469(nvars) <- $0
	br          .L2328

.L2328:
	call.64     %r9867 <- str_checkname, %arg1
	phi.32      %r9868 <- %phi1469(nvars), %phi1470(nvars)
	add.32      %r9869(nvars) <- %r9868, $1
	call        new_localvar, %arg1, %r9867, %r9868
	phisrc.32   %phi1470(nvars) <- %r9869(nvars)
	call.32     %r9871 <- testnext, %arg1, $44
	br          %r9871, .L2328, .L2330

.L2330:
	call.32     %r9873 <- testnext, %arg1, $61
	br          %r9873, .L2331, .L2332

.L2331:
	symaddr.64  %r9875 <- e
	call.32     %r9876(nexps) <- explist1, %arg1, %r9875
	phisrc.32   %phi1471(nexps) <- %r9876(nexps)
	br          .L2333

.L2332:
	store.32    $0 -> 0[e]
	phisrc.32   %phi1472(nexps) <- $0
	br          .L2333

.L2333:
	phi.32      %r9879 <- %phi1471(nexps), %phi1472(nexps)
	symaddr.64  %r9880 <- e
	call        adjust_assign, %arg1, %r9869(nvars), %r9879, %r9880
	call        adjustlocalvars, %arg1, %r9869(nvars)
	ret


funcname:
.L2335:
	<entry-point>
	call        singlevar, %arg1, %arg2
	phisrc.32   %phi1474(needself) <- $0
	br          .L2339

.L2339:
	load.32     %r9886 <- 16[%arg1]
	seteq.32    %r9887 <- %r9886, $46
	br          %r9887, .L2336, .L2338

.L2336:
	call        field, %arg1, %arg2
	br          .L2339

.L2338:
	seteq.32    %r9892 <- %r9886, $58
	br          %r9892, .L2340, .L2341

.L2340:
	call        field, %arg1, %arg2
	phisrc.32   %phi1475(needself) <- $1
	br          .L2341

.L2341:
	phi.32      %r9895 <- %phi1474(needself), %phi1475(needself)
	ret.32      %r9895


funcstat:
.L2343:
	<entry-point>
	call        luaX_next, %arg1
	symaddr.64  %r9899 <- v
	call.32     %r9900 <- funcname, %arg1, %r9899
	symaddr.64  %r9902 <- b
	call        body, %arg1, %r9902, %r9900, %arg2
	load.64     %r9906 <- 48[%arg1]
	call        luaK_storevar, %r9906, %r9899, %r9902
	load.64     %r9910 <- 48[%arg1]
	call        luaK_fixline, %r9910, %arg2
	ret


exprstat:
.L2345:
	<entry-point>
	load.64     %r9913 <- 48[%arg1]
	symaddr.64  %r9915 <- v
	add.64      %r9916 <- %r9915, $8
	call        primaryexp, %arg1, %r9916
	load.32     %r9917 <- 8[v]
	seteq.32    %r9919 <- %r9917, $13
	br          %r9919, .L2346, .L2347

.L2346:
	load.64     %r9921 <- 0[%r9913]
	load.64     %r9922 <- 24[%r9921]
	load.32     %r9923 <- 16[v]
	scast.64    %r9924 <- (32) %r9923
	muls.64     %r9925 <- %r9924, $4
	add.64      %r9926 <- %r9922, %r9925
	load.32     %r9927 <- 0[%r9926]
	and.32      %r9928 <- %r9927, $0xff803fff
	or.32       %r9929 <- %r9928, $0x4000
	store.32    %r9929 -> 0[%r9926]
	br          .L2348

.L2347:
	store.64    $0 -> 0[v]
	call        assignment, %arg1, %r9915, $1
	br          .L2348

.L2348:
	ret


retstat:
.L2349:
	<entry-point>
	load.64     %r9940 <- 48[%arg1]
	call        luaX_next, %arg1
	load.32     %r9943 <- 16[%arg1]
	call.32     %r9944 <- block_follow, %r9943
	br          %r9944, .L2350, .L2352

.L2352:
	load.32     %r9946 <- 16[%arg1]
	seteq.32    %r9947 <- %r9946, $59
	br          %r9947, .L2350, .L2351

.L2350:
	phisrc.32   %phi1477(nret) <- $0
	phisrc.32   %phi1482(first) <- $0
	br          .L2353

.L2351:
	symaddr.64  %r9949 <- e
	call.32     %r9950(nret) <- explist1, %arg1, %r9949
	load.32     %r9951 <- 0[e]
	seteq.32    %r9953 <- %r9951, $13
	seteq.32    %r9956 <- %r9951, $14
	or-bool.32  %r9957 <- %r9953, %r9956
	seteq.32    %r9964 <- %r9950(nret), $1
	br          %r9957, .L2354, .L2355

.L2354:
	call        luaK_setreturns, %r9940, %r9949, $0xffffffff
	load.32     %r9960 <- 0[e]
	seteq.32    %r9962 <- %r9960, $13
	and-bool.32 %r9965 <- %r9962, %r9964
	br          %r9965, .L2356, .L2357

.L2356:
	load.64     %r9967 <- 0[%r9940]
	load.64     %r9968 <- 24[%r9967]
	load.32     %r9969 <- 8[e]
	scast.64    %r9970 <- (32) %r9969
	muls.64     %r9971 <- %r9970, $4
	add.64      %r9972 <- %r9968, %r9971
	load.32     %r9973 <- 0[%r9972]
	and.32      %r9974 <- %r9973, $0xffffffc0
	or.32       %r9975 <- %r9974, $29
	store.32    %r9975 -> 0[%r9972]
	br          .L2357

.L2357:
	load.8      %r9984 <- 74[%r9940]
	cast.32     %r9985 <- (8) %r9984
	phisrc.32   %phi1478(nret) <- $0xffffffff
	phisrc.32   %phi1483(first) <- %r9985
	br          .L2353

.L2355:
	phisrc.32   %phi1479(nret) <- %r9950(nret)
	br          %r9964, .L2359, .L2360

.L2359:
	call.32     %r9990 <- luaK_exp2anyreg, %r9940, %r9949
	phisrc.32   %phi1484(first) <- %r9990
	br          .L2353

.L2360:
	call        luaK_exp2nextreg, %r9940, %r9949
	load.8      %r9994 <- 74[%r9940]
	cast.32     %r9995 <- (8) %r9994
	phisrc.32   %phi1485(first) <- %r9995
	br          .L2353

.L2353:
	phi.32      %r9997 <- %phi1482(first), %phi1483(first), %phi1484(first), %phi1485(first)
	phi.32      %r9998 <- %phi1477(nret), %phi1478(nret), %phi1479(nret)
	call        luaK_ret, %r9940, %r9997, %r9998
	ret


statement:
.L2363:
	<entry-point>
	load.32     %r10000 <- 4[%arg1]
	load.32     %r10002 <- 16[%arg1]
	switch      %r10002, 258 -> .L2373, 259 -> .L2367, 264 -> .L2368, 265 -> .L2370, 266 -> .L2365, 268 -> .L2371, 272 -> .L2369, 273 -> .L2372, 277 -> .L2366, default -> .L2374

.L2365:
	call        ifstat, %arg1, %r10000
	phisrc.32   %phi1486(return) <- $0
	br          .L2375

.L2366:
	call        whilestat, %arg1, %r10000
	phisrc.32   %phi1487(return) <- $0
	br          .L2375

.L2367:
	call        luaX_next, %arg1
	call        block, %arg1
	call        check_match, %arg1, $262, $259, %r10000
	phisrc.32   %phi1488(return) <- $0
	br          .L2375

.L2368:
	call        forstat, %arg1, %r10000
	phisrc.32   %phi1489(return) <- $0
	br          .L2375

.L2369:
	call        repeatstat, %arg1, %r10000
	phisrc.32   %phi1490(return) <- $0
	br          .L2375

.L2370:
	call        funcstat, %arg1, %r10000
	phisrc.32   %phi1491(return) <- $0
	br          .L2375

.L2371:
	call        luaX_next, %arg1
	call.32     %r10020 <- testnext, %arg1, $265
	br          %r10020, .L2376, .L2377

.L2376:
	call        localfunc, %arg1
	br          .L2378

.L2377:
	call        localstat, %arg1
	br          .L2378

.L2378:
	phisrc.32   %phi1492(return) <- $0
	br          .L2375

.L2372:
	call        retstat, %arg1
	phisrc.32   %phi1493(return) <- $1
	br          .L2375

.L2373:
	call        luaX_next, %arg1
	call        breakstat, %arg1
	phisrc.32   %phi1494(return) <- $1
	br          .L2375

.L2374:
	call        exprstat, %arg1
	phisrc.32   %phi1495(return) <- $0
	br          .L2375

.L2375:
	phi.32      %r10005 <- %phi1486(return), %phi1487(return), %phi1488(return), %phi1489(return), %phi1490(return), %phi1491(return), %phi1492(return), %phi1493(return), %phi1494(return), %phi1495(return)
	ret.32      %r10005


chunk:
.L2379:
	<entry-point>
	call        enterlevel, %arg1
	br          .L2384

.L2384:
	load.32     %r10030 <- 16[%arg1]
	call.32     %r10031 <- block_follow, %r10030
	br          %r10031, .L2382, .L2380

.L2380:
	call.32     %r10033 <- statement, %arg1
	call.32     %r10035 <- testnext, %arg1, $59
	load.64     %r10037 <- 48[%arg1]
	load.8      %r10038 <- 74[%r10037]
	cast.32     %r10039 <- (8) %r10038
	store.32    %r10039 -> 60[%r10037]
	br          %r10033, .L2382, .L2384

.L2382:
	load.64     %r10043 <- 56[%arg1]
	load.16     %r10044 <- 96[%r10043]
	add.16      %r10045 <- %r10044, $-1
	store.16    %r10045 -> 96[%r10043]
	ret


luaV_tonumber:
.L2386:
	<entry-point>
	load.32     %r10047 <- 8[%arg1]
	seteq.32    %r10049 <- %r10047, $3
	br          %r10049, .L2387, .L2388

.L2387:
	phisrc.64   %phi1498(return) <- %arg1
	br          .L2389

.L2388:
	seteq.32    %r10055 <- %r10047, $4
	br          %r10055, .L2392, .L2391

.L2392:
	load.64     %r10057 <- 0[%arg1]
	add.64      %r10059 <- %r10057, $24
	ptrcast.64  %r10060 <- (64) %r10059
	symaddr.64  %r10061 <- num
	call.32     %r10062 <- luaO_str2d, %r10060, %r10061
	br          %r10062, .L2390, .L2391

.L2390:
	load.64     %r10064 <- 0[num]
	store.64    %r10064 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	phisrc.64   %phi1499(return) <- %arg2
	br          .L2389

.L2391:
	phisrc.64   %phi1500(return) <- $0
	br          .L2389

.L2389:
	phi.64      %r10051 <- %phi1498(return), %phi1499(return), %phi1500(return)
	ret.64      %r10051


luaV_tostring:
.L2394:
	<entry-point>
	load.32     %r10069 <- 8[%arg2]
	seteq.32    %r10070 <- %r10069, $3
	br          %r10070, .L2396, .L2397

.L2396:
	load.64     %r10073 <- 0[%arg2]
	symaddr.64  %r10074 <- s
	symaddr.64  %r10075 <- <anon symbol:0x62d0010e49e0>
	call.32     %r10077 <- sprintf, %r10074, %r10075, %r10073
	call.64     %r10082 <- strlen, %r10074
	call.64     %r10083 <- luaS_newlstr, %arg1, %r10074, %r10082
	ptrcast.64  %r10084 <- (64) %r10083
	store.64    %r10084 -> 0[%arg2]
	store.32    $4 -> 8[%arg2]
	br          .L2397

.L2397:
	ret.32      %r10070


callTMres:
.L2399:
	<entry-point>
	ptrcast.64  %r10088 <- (64) %arg2
	load.64     %r10090 <- 64[%arg1]
	ptrcast.64  %r10091 <- (64) %r10090
	sub.64      %r10092 <- %r10088, %r10091
	load.64     %r10095 <- 16[%arg1]
	load.64     %r10097 <- 0[%arg3]
	store.64    %r10097 -> 0[%r10095]
	load.32     %r10100 <- 8[%arg3]
	store.32    %r10100 -> 8[%r10095]
	load.64     %r10105 <- 16[%arg1]
	load.64     %r10108 <- 0[%arg4]
	store.64    %r10108 -> 16[%r10105]
	load.32     %r10111 <- 8[%arg4]
	store.32    %r10111 -> 24[%r10105]
	load.64     %r10116 <- 16[%arg1]
	load.64     %r10119 <- 0[%arg5]
	store.64    %r10119 -> 32[%r10116]
	load.32     %r10122 <- 8[%arg5]
	store.32    %r10122 -> 40[%r10116]
	load.64     %r10126 <- 56[%arg1]
	ptrcast.64  %r10127 <- (64) %r10126
	load.64     %r10129 <- 16[%arg1]
	ptrcast.64  %r10130 <- (64) %r10129
	sub.64      %r10131 <- %r10127, %r10130
	setle.32    %r10132 <- %r10131, $48
	br          %r10132, .L2400, .L2402

.L2400:
	call        luaD_growstack, %arg1, $3
	br          .L2402

.L2402:
	load.64     %r10135 <- 16[%arg1]
	cast.64     %r10136 <- (64) %r10135
	add.64      %r10137 <- %r10136, $48
	ptrcast.64  %r10138 <- (64) %r10137
	store.64    %r10138 -> 16[%arg1]
	add.64      %r10142 <- %r10138, $-48
	call        luaD_call, %arg1, %r10142, $1
	load.64     %r10144 <- 64[%arg1]
	ptrcast.64  %r10145 <- (64) %r10144
	add.64      %r10147 <- %r10145, %r10092
	ptrcast.64  %r10148 <- (64) %r10147
	load.64     %r10150 <- 16[%arg1]
	add.64      %r10151 <- %r10150, $-16
	store.64    %r10151 -> 16[%arg1]
	load.64     %r10156 <- -16[%r10150]
	store.64    %r10156 -> 0[%r10148]
	load.32     %r10159 <- -8[%r10150]
	store.32    %r10159 -> 8[%r10148]
	ret


callTM:
.L2404:
	<entry-point>
	load.64     %r10164 <- 16[%arg1]
	load.64     %r10166 <- 0[%arg2]
	store.64    %r10166 -> 0[%r10164]
	load.32     %r10169 <- 8[%arg2]
	store.32    %r10169 -> 8[%r10164]
	load.64     %r10174 <- 16[%arg1]
	load.64     %r10177 <- 0[%arg3]
	store.64    %r10177 -> 16[%r10174]
	load.32     %r10180 <- 8[%arg3]
	store.32    %r10180 -> 24[%r10174]
	load.64     %r10185 <- 16[%arg1]
	load.64     %r10188 <- 0[%arg4]
	store.64    %r10188 -> 32[%r10185]
	load.32     %r10191 <- 8[%arg4]
	store.32    %r10191 -> 40[%r10185]
	load.64     %r10196 <- 16[%arg1]
	load.64     %r10199 <- 0[%arg5]
	store.64    %r10199 -> 48[%r10196]
	load.32     %r10202 <- 8[%arg5]
	store.32    %r10202 -> 56[%r10196]
	load.64     %r10206 <- 56[%arg1]
	ptrcast.64  %r10207 <- (64) %r10206
	load.64     %r10209 <- 16[%arg1]
	ptrcast.64  %r10210 <- (64) %r10209
	sub.64      %r10211 <- %r10207, %r10210
	setle.32    %r10212 <- %r10211, $64
	br          %r10212, .L2405, .L2407

.L2405:
	call        luaD_growstack, %arg1, $4
	br          .L2407

.L2407:
	load.64     %r10215 <- 16[%arg1]
	cast.64     %r10216 <- (64) %r10215
	add.64      %r10217 <- %r10216, $64
	ptrcast.64  %r10218 <- (64) %r10217
	store.64    %r10218 -> 16[%arg1]
	add.64      %r10222 <- %r10218, $-64
	call        luaD_call, %arg1, %r10222, $0
	ret


luaV_gettable:
.L2409:
	<entry-point>
	phisrc.64   %phi1514(t) <- %arg2
	phisrc.32   %phi1517(loop) <- $0
	br          .L2413

.L2413:
	phi.32      %r10223(loop) <- %phi1517(loop), %phi1518(loop)
	setlt.32    %r10224 <- %r10223(loop), $100
	br          %r10224, .L2410, .L2412

.L2410:
	phi.64      %r10225(t) <- %phi1514(t), %phi1515(t)
	load.32     %r10226 <- 8[%r10225(t)]
	seteq.32    %r10228 <- %r10226, $5
	br          %r10228, .L2414, .L2415

.L2414:
	load.64     %r10230 <- 0[%r10225(t)]
	call.64     %r10234 <- luaH_get, %r10230, %arg3
	load.32     %r10236 <- 8[%r10234]
	br          %r10236, .L2416, .L2418

.L2418:
	load.64     %r10240 <- 16[%r10230]
	br          %r10240, .L2420, .L2416

.L2420:
	load.8      %r10244 <- 10[%r10240]
	cast.32     %r10245 <- (8) %r10244
	and.32      %r10246 <- %r10245, $1
	br          %r10246, .L2416, .L2423

.L2423:
	load.64     %r10250 <- 32[%arg1]
	load.64     %r10251 <- 296[%r10250]
	call.64     %r10252 <- luaT_gettm, %r10240, $0, %r10251
	phisrc.64   %phi1521(tm) <- %r10252
	br          %r10252, .L2426, .L2416

.L2416:
	load.64     %r10259 <- 0[%r10234]
	store.64    %r10259 -> 0[%arg4]
	load.32     %r10262 <- 8[%r10234]
	store.32    %r10262 -> 8[%arg4]
	br          .L2425

.L2415:
	call.64     %r10267 <- luaT_gettmbyobj, %arg1, %r10225(t), $0
	load.32     %r10268 <- 8[%r10267]
	phisrc.64   %phi1522(tm) <- %r10267
	br          %r10268, .L2426, .L2427

.L2427:
	symaddr.64  %r10273 <- <anon symbol:0x62d0013d4088>
	call        luaG_typeerror, %arg1, %r10225(t), %r10273
	br          .L2426

.L2426:
	phi.64      %r10274(tm) <- %phi1521(tm), %phi1522(tm)
	load.32     %r10275 <- 8[%r10274(tm)]
	seteq.32    %r10277 <- %r10275, $6
	br          %r10277, .L2429, .L2430

.L2429:
	call        callTMres, %arg1, %arg4, %r10274(tm), %r10225(t), %arg3
	br          .L2425

.L2430:
	phisrc.64   %phi1515(t) <- %r10274(tm)
	add.32      %r10285 <- %r10223(loop), $1
	phisrc.32   %phi1518(loop) <- %r10285
	br          .L2413

.L2412:
	symaddr.64  %r10287 <- <anon symbol:0x62d0013d45f8>
	call        luaG_runerror, %arg1, %r10287
	br          .L2425

.L2425:
	ret


luaV_settable:
.L2431:
	<entry-point>
	phisrc.64   %phi1535(t) <- %arg2
	phisrc.32   %phi1538(loop) <- $0
	br          .L2435

.L2435:
	phi.32      %r10288(loop) <- %phi1538(loop), %phi1539(loop)
	setlt.32    %r10289 <- %r10288(loop), $100
	br          %r10289, .L2432, .L2434

.L2432:
	phi.64      %r10290(t) <- %phi1535(t), %phi1536(t)
	load.32     %r10291 <- 8[%r10290(t)]
	seteq.32    %r10293 <- %r10291, $5
	br          %r10293, .L2436, .L2437

.L2436:
	load.64     %r10295 <- 0[%r10290(t)]
	call.64     %r10300 <- luaH_set, %arg1, %r10295, %arg3
	load.32     %r10302 <- 8[%r10300]
	br          %r10302, .L2438, .L2440

.L2440:
	load.64     %r10305 <- 16[%r10295]
	br          %r10305, .L2442, .L2438

.L2442:
	load.8      %r10309 <- 10[%r10305]
	cast.32     %r10310 <- (8) %r10309
	and.32      %r10311 <- %r10310, $2
	br          %r10311, .L2438, .L2445

.L2445:
	load.64     %r10315 <- 32[%arg1]
	load.64     %r10316 <- 304[%r10315]
	call.64     %r10317 <- luaT_gettm, %r10305, $1, %r10316
	phisrc.64   %phi1542(tm) <- %r10317
	br          %r10317, .L2452, .L2438

.L2438:
	load.64     %r10324 <- 0[%arg4]
	store.64    %r10324 -> 0[%r10300]
	load.32     %r10327 <- 8[%arg4]
	store.32    %r10327 -> 8[%r10300]
	store.8     $0 -> 10[%r10295]
	load.32     %r10332 <- 8[%arg4]
	setge.32    %r10333 <- %r10332, $4
	br          %r10333, .L2450, .L2451

.L2450:
	load.64     %r10335 <- 0[%arg4]
	load.8      %r10336 <- 9[%r10335]
	cast.32     %r10337 <- (8) %r10336
	and.32      %r10338 <- %r10337, $3
	br          %r10338, .L2449, .L2451

.L2449:
	ptrcast.64  %r10340 <- (64) %r10295
	load.8      %r10341 <- 9[%r10340]
	cast.32     %r10342 <- (8) %r10341
	and.32      %r10343 <- %r10342, $4
	br          %r10343, .L2447, .L2451

.L2447:
	call        luaC_barrierback, %arg1, %r10295
	br          .L2451

.L2437:
	call.64     %r10348 <- luaT_gettmbyobj, %arg1, %r10290(t), $1
	load.32     %r10349 <- 8[%r10348]
	phisrc.64   %phi1543(tm) <- %r10348
	br          %r10349, .L2452, .L2453

.L2453:
	symaddr.64  %r10354 <- <anon symbol:0x62d0013e2ef8>
	call        luaG_typeerror, %arg1, %r10290(t), %r10354
	br          .L2452

.L2452:
	phi.64      %r10355(tm) <- %phi1542(tm), %phi1543(tm)
	load.32     %r10356 <- 8[%r10355(tm)]
	seteq.32    %r10358 <- %r10356, $6
	br          %r10358, .L2455, .L2456

.L2455:
	call        callTM, %arg1, %r10355(tm), %r10290(t), %arg3, %arg4
	br          .L2451

.L2456:
	load.64     %r10367 <- 0[%r10355(tm)]
	store.64    %r10367 -> 0[temp]
	store.32    %r10356 -> 8[temp]
	symaddr.64  %r10373 <- temp
	phisrc.64   %phi1536(t) <- %r10373
	add.32      %r10375 <- %r10288(loop), $1
	phisrc.32   %phi1539(loop) <- %r10375
	br          .L2435

.L2434:
	symaddr.64  %r10377 <- <anon symbol:0x62d0013e3e60>
	call        luaG_runerror, %arg1, %r10377
	br          .L2451

.L2451:
	ret


call_binTM:
.L2457:
	<entry-point>
	call.64     %r10381 <- luaT_gettmbyobj, %arg1, %arg2, %arg5
	load.32     %r10383 <- 8[%r10381]
	phisrc.64   %phi1550(tm) <- %r10381
	br          %r10383, .L2459, .L2458

.L2458:
	call.64     %r10389 <- luaT_gettmbyobj, %arg1, %arg3, %arg5
	phisrc.64   %phi1551(tm) <- %r10389
	br          .L2459

.L2459:
	phi.64      %r10390(tm) <- %phi1550(tm), %phi1551(tm)
	load.32     %r10391 <- 8[%r10390(tm)]
	setne.32    %r10394 <- %r10391, $0
	br          %r10391, .L2461, .L2462

.L2461:
	call        callTMres, %arg1, %arg4, %r10390(tm), %arg2, %arg3
	br          .L2462

.L2462:
	ret.32      %r10394


get_compTM:
.L2463:
	<entry-point>
	br          %arg2, .L2465, .L2470

.L2465:
	load.8      %r10403 <- 10[%arg2]
	cast.32     %r10404 <- (8) %r10403
	shl.32      %r10407 <- $1, %arg4
	and.32      %r10408 <- %r10404, %r10407
	br          %r10408, .L2470, .L2468

.L2468:
	load.64     %r10412 <- 32[%arg1]
	add.64      %r10413 <- %r10412, $296
	scast.64    %r10415 <- (32) %arg4
	muls.64     %r10416 <- %r10415, $8
	add.64      %r10417 <- %r10413, %r10416
	load.64     %r10418 <- 0[%r10417]
	call.64     %r10419 <- luaT_gettm, %arg2, %arg4, %r10418
	br          %r10419, .L2471, .L2470

.L2470:
	phisrc.64   %phi1556(return) <- $0
	br          .L2472

.L2471:
	seteq.32    %r10427 <- %arg2, %arg3
	br          %r10427, .L2473, .L2474

.L2473:
	phisrc.64   %phi1557(return) <- %r10419
	br          .L2472

.L2474:
	br          %arg3, .L2476, .L2481

.L2476:
	load.8      %r10432 <- 10[%arg3]
	cast.32     %r10433 <- (8) %r10432
	and.32      %r10437 <- %r10433, %r10407
	br          %r10437, .L2481, .L2479

.L2479:
	load.64     %r10441 <- 32[%arg1]
	add.64      %r10442 <- %r10441, $296
	add.64      %r10446 <- %r10442, %r10416
	load.64     %r10447 <- 0[%r10446]
	call.64     %r10448 <- luaT_gettm, %arg3, %arg4, %r10447
	br          %r10448, .L2482, .L2481

.L2481:
	phisrc.64   %phi1562(return) <- $0
	br          .L2472

.L2482:
	call.32     %r10455 <- luaO_rawequalObj, %r10419, %r10448
	br          %r10455, .L2483, .L2484

.L2483:
	phisrc.64   %phi1563(return) <- %r10419
	br          .L2472

.L2484:
	phisrc.64   %phi1564(return) <- $0
	br          .L2472

.L2472:
	phi.64      %r10424 <- %phi1556(return), %phi1557(return), %phi1562(return), %phi1563(return), %phi1564(return)
	ret.64      %r10424


call_orderTM:
.L2485:
	<entry-point>
	call.64     %r10460 <- luaT_gettmbyobj, %arg1, %arg2, %arg4
	load.32     %r10462 <- 8[%r10460]
	br          %r10462, .L2487, .L2486

.L2486:
	phisrc.32   %phi1565(return) <- $0xffffffff
	br          .L2488

.L2487:
	call.64     %r10469 <- luaT_gettmbyobj, %arg1, %arg3, %arg4
	call.32     %r10472 <- luaO_rawequalObj, %r10460, %r10469
	br          %r10472, .L2490, .L2489

.L2489:
	phisrc.32   %phi1566(return) <- $0xffffffff
	br          .L2488

.L2490:
	load.64     %r10475 <- 16[%arg1]
	call        callTMres, %arg1, %r10475, %r10460, %arg2, %arg3
	load.64     %r10480 <- 16[%arg1]
	load.32     %r10481 <- 8[%r10480]
	br          %r10481, .L2492, .L2491

.L2491:
	phisrc.32   %phi1567 <- $1
	br          .L2493

.L2492:
	load.32     %r10485 <- 8[%r10480]
	seteq.32    %r10486 <- %r10485, $1
	br          %r10486, .L2494, .L2495

.L2494:
	load.32     %r10489 <- 0[%r10480]
	seteq.32    %r10490 <- %r10489, $0
	phisrc.32   %phi1568 <- %r10490
	br          .L2496

.L2495:
	phisrc.32   %phi1569 <- $0
	br          .L2496

.L2496:
	phi.32      %r10491 <- %phi1568, %phi1569
	phisrc.32   %phi1570 <- %r10491
	br          .L2493

.L2493:
	phi.32      %r10492 <- %phi1567, %phi1570
	seteq.32    %r10493 <- %r10492, $0
	phisrc.32   %phi1571(return) <- %r10493
	br          .L2488

.L2488:
	phi.32      %r10465 <- %phi1565(return), %phi1566(return), %phi1571(return)
	ret.32      %r10465


l_strcmp:
.L2497:
	<entry-point>
	add.64      %r10495 <- %arg1, $24
	ptrcast.64  %r10496(l) <- (64) %r10495
	load.64     %r10498 <- 16[%arg1]
	add.64      %r10501 <- %arg2, $24
	ptrcast.64  %r10502(r) <- (64) %r10501
	load.64     %r10504 <- 16[%arg2]
	phisrc.64   %phi1579(l) <- %r10496(l)
	phisrc.64   %phi1584(ll) <- %r10498
	phisrc.64   %phi1587(r) <- %r10502(r)
	phisrc.64   %phi1590(lr) <- %r10504
	br          .L2498

.L2498:
	phi.64      %r10506(l) <- %phi1579(l), %phi1580(l)
	phi.64      %r10507(r) <- %phi1587(r), %phi1588(r)
	call.32     %r10508 <- strcoll, %r10506(l), %r10507(r)
	br          %r10508, .L2502, .L2503

.L2502:
	phisrc.32   %phi1574(return) <- %r10508
	br          .L2504

.L2503:
	call.64     %r10514 <- strlen, %r10506(l)
	phi.64      %r10516(lr) <- %phi1590(lr), %phi1591(lr)
	seteq.32    %r10517 <- %r10514, %r10516(lr)
	phi.64      %r10519 <- %phi1584(ll), %phi1585(ll)
	br          %r10517, .L2506, .L2507

.L2506:
	setne.32    %r10521 <- %r10514, %r10519
	phisrc.32   %phi1575(return) <- %r10521
	br          .L2504

.L2507:
	seteq.32    %r10524 <- %r10514, %r10519
	br          %r10524, .L2509, .L2508

.L2509:
	phisrc.32   %phi1576(return) <- $0xffffffff
	br          .L2504

.L2508:
	add.64      %r10526 <- %r10514, $1
	cast.64     %r10529 <- (64) %r10506(l)
	add.64      %r10530 <- %r10529, %r10526
	ptrcast.64  %r10531 <- (64) %r10530
	sub.64      %r10535 <- %r10519, %r10526
	cast.64     %r10539 <- (64) %r10507(r)
	add.64      %r10540 <- %r10539, %r10526
	ptrcast.64  %r10541 <- (64) %r10540
	sub.64      %r10545 <- %r10516(lr), %r10526
	phisrc.64   %phi1580(l) <- %r10531
	phisrc.64   %phi1585(ll) <- %r10535
	phisrc.64   %phi1588(r) <- %r10541
	phisrc.64   %phi1591(lr) <- %r10545
	br          .L2498

.L2504:
	phi.32      %r10512 <- %phi1574(return), %phi1575(return), %phi1576(return)
	ret.32      %r10512


luaV_lessthan:
.L2511:
	<entry-point>
	load.32     %r10548 <- 8[%arg2]
	load.32     %r10551 <- 8[%arg3]
	setne.32    %r10553 <- %r10548, %r10551
	br          %r10553, .L2512, .L2513

.L2512:
	call.32     %r10557 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1595(return) <- %r10557
	br          .L2514

.L2513:
	seteq.32    %r10562 <- %r10548, $3
	br          %r10562, .L2516, .L2517

.L2516:
	load.64     %r10564 <- 0[%arg2]
	load.64     %r10567 <- 0[%arg3]
	setlt.32    %r10569 <- %r10564, %r10567
	phisrc.32   %phi1596(return) <- %r10569
	br          .L2514

.L2517:
	seteq.32    %r10573 <- %r10548, $4
	br          %r10573, .L2519, .L2520

.L2519:
	load.64     %r10575 <- 0[%arg2]
	load.64     %r10578 <- 0[%arg3]
	call.32     %r10580 <- l_strcmp, %r10575, %r10578
	setlt.32    %r10581 <- %r10580, $0
	phisrc.32   %phi1597(return) <- %r10581
	br          .L2514

.L2520:
	call.32     %r10585 <- call_orderTM, %arg1, %arg2, %arg3, $13
	setne.32    %r10586 <- %r10585, $0xffffffff
	br          %r10586, .L2522, .L2515

.L2522:
	phisrc.32   %phi1598(return) <- %r10585
	br          .L2514

.L2515:
	call.32     %r10591 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1599(return) <- %r10591
	br          .L2514

.L2514:
	phi.32      %r10558 <- %phi1595(return), %phi1596(return), %phi1597(return), %phi1598(return), %phi1599(return)
	ret.32      %r10558


lessequal:
.L2524:
	<entry-point>
	load.32     %r10593 <- 8[%arg2]
	load.32     %r10596 <- 8[%arg3]
	setne.32    %r10598 <- %r10593, %r10596
	br          %r10598, .L2525, .L2526

.L2525:
	call.32     %r10602 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1602(return) <- %r10602
	br          .L2527

.L2526:
	seteq.32    %r10607 <- %r10593, $3
	br          %r10607, .L2529, .L2530

.L2529:
	load.64     %r10609 <- 0[%arg2]
	load.64     %r10612 <- 0[%arg3]
	setle.32    %r10614 <- %r10609, %r10612
	phisrc.32   %phi1603(return) <- %r10614
	br          .L2527

.L2530:
	seteq.32    %r10618 <- %r10593, $4
	br          %r10618, .L2532, .L2533

.L2532:
	load.64     %r10620 <- 0[%arg2]
	load.64     %r10623 <- 0[%arg3]
	call.32     %r10625 <- l_strcmp, %r10620, %r10623
	setle.32    %r10626 <- %r10625, $0
	phisrc.32   %phi1604(return) <- %r10626
	br          .L2527

.L2533:
	call.32     %r10630(res) <- call_orderTM, %arg1, %arg2, %arg3, $14
	setne.32    %r10631 <- %r10630(res), $0xffffffff
	br          %r10631, .L2535, .L2536

.L2535:
	phisrc.32   %phi1605(return) <- %r10630(res)
	br          .L2527

.L2536:
	call.32     %r10636(res) <- call_orderTM, %arg1, %arg3, %arg2, $13
	setne.32    %r10637 <- %r10636(res), $0xffffffff
	br          %r10637, .L2538, .L2528

.L2538:
	seteq.32    %r10639 <- %r10636(res), $0
	phisrc.32   %phi1606(return) <- %r10639
	br          .L2527

.L2528:
	call.32     %r10643 <- luaG_ordererror, %arg1, %arg2, %arg3
	phisrc.32   %phi1607(return) <- %r10643
	br          .L2527

.L2527:
	phi.32      %r10603 <- %phi1602(return), %phi1603(return), %phi1604(return), %phi1605(return), %phi1606(return), %phi1607(return)
	ret.32      %r10603


luaV_equalval:
.L2540:
	<entry-point>
	load.32     %r10645 <- 8[%arg2]
	switch      %r10645, 0 -> .L2542, 1 -> .L2544, 2 -> .L2545, 3 -> .L2543, 5 -> .L2547, 7 -> .L2546, default -> .L2548

.L2542:
	phisrc.32   %phi1612(return) <- $1
	br          .L2549

.L2543:
	load.64     %r10648 <- 0[%arg2]
	load.64     %r10651 <- 0[%arg3]
	seteq.32    %r10653 <- %r10648, %r10651
	phisrc.32   %phi1613(return) <- %r10653
	br          .L2549

.L2544:
	load.32     %r10655 <- 0[%arg2]
	load.32     %r10658 <- 0[%arg3]
	seteq.32    %r10660 <- %r10655, %r10658
	phisrc.32   %phi1614(return) <- %r10660
	br          .L2549

.L2545:
	load.64     %r10662 <- 0[%arg2]
	load.64     %r10664 <- 0[%arg3]
	seteq.32    %r10665 <- %r10662, %r10664
	phisrc.32   %phi1615(return) <- %r10665
	br          .L2549

.L2546:
	load.64     %r10667 <- 0[%arg2]
	load.64     %r10671 <- 0[%arg3]
	seteq.32    %r10674 <- %r10667, %r10671
	br          %r10674, .L2550, .L2551

.L2550:
	phisrc.32   %phi1616(return) <- $1
	br          .L2549

.L2551:
	load.64     %r10678 <- 16[%r10667]
	load.64     %r10681 <- 16[%r10671]
	call.64     %r10682(tm) <- get_compTM, %arg1, %r10678, %r10681, $4
	phisrc.64   %phi1626(tm) <- %r10682(tm)
	br          .L2541

.L2547:
	load.64     %r10684 <- 0[%arg2]
	load.64     %r10687 <- 0[%arg3]
	seteq.32    %r10689 <- %r10684, %r10687
	br          %r10689, .L2552, .L2553

.L2552:
	phisrc.32   %phi1617(return) <- $1
	br          .L2549

.L2553:
	load.64     %r10693 <- 16[%r10684]
	load.64     %r10696 <- 16[%r10687]
	call.64     %r10697 <- get_compTM, %arg1, %r10693, %r10696, $4
	phisrc.64   %phi1627(tm) <- %r10697
	br          .L2541

.L2548:
	load.64     %r10699 <- 0[%arg2]
	load.64     %r10701 <- 0[%arg3]
	seteq.32    %r10702 <- %r10699, %r10701
	phisrc.32   %phi1618(return) <- %r10702
	br          .L2549

.L2541:
	phi.64      %r10703(tm) <- %phi1626(tm), %phi1627(tm)
	br          %r10703(tm), .L2555, .L2554

.L2554:
	phisrc.32   %phi1619(return) <- $0
	br          .L2549

.L2555:
	load.64     %r10707 <- 16[%arg1]
	call        callTMres, %arg1, %r10707, %r10703(tm), %arg2, %arg3
	load.64     %r10712 <- 16[%arg1]
	load.32     %r10713 <- 8[%r10712]
	br          %r10713, .L2557, .L2556

.L2556:
	phisrc.32   %phi1620 <- $1
	br          .L2558

.L2557:
	load.32     %r10717 <- 8[%r10712]
	seteq.32    %r10718 <- %r10717, $1
	br          %r10718, .L2559, .L2560

.L2559:
	load.32     %r10721 <- 0[%r10712]
	seteq.32    %r10722 <- %r10721, $0
	phisrc.32   %phi1621 <- %r10722
	br          .L2561

.L2560:
	phisrc.32   %phi1622 <- $0
	br          .L2561

.L2561:
	phi.32      %r10723 <- %phi1621, %phi1622
	phisrc.32   %phi1623 <- %r10723
	br          .L2558

.L2558:
	phi.32      %r10724 <- %phi1620, %phi1623
	seteq.32    %r10725 <- %r10724, $0
	phisrc.32   %phi1624(return) <- %r10725
	br          .L2549

.L2549:
	phi.32      %r10646 <- %phi1612(return), %phi1613(return), %phi1614(return), %phi1615(return), %phi1616(return), %phi1617(return), %phi1618(return), %phi1619(return), %phi1624(return)
	ret.32      %r10646


luaV_concat:
.L2562:
	<entry-point>
	phisrc.32   %phi1637(total) <- %arg2
	phisrc.32   %phi1640(total) <- %arg2
	phisrc.32   %phi1643(last) <- %arg3
	br          .L2563

.L2563:
	load.64     %r10727 <- 24[%arg1]
	phi.32      %r10728(last) <- %phi1643(last), %phi1644(last)
	scast.64    %r10729 <- (32) %r10728(last)
	muls.64     %r10730 <- %r10729, $16
	add.64      %r10731 <- %r10727, %r10730
	add.64      %r10732 <- %r10731, $16
	load.32     %r10735 <- -8[%r10731]
	seteq.32    %r10736 <- %r10735, $4
	phisrc.32   %phi1645(n) <- $2
	phisrc.32   %phi1671 <- %r10735
	phisrc.32   %phi1675 <- %r10735
	phisrc.32   %phi1676 <- %r10735
	br          %r10736, .L2568, .L2569

.L2569:
	seteq.32    %r10740 <- %r10735, $3
	phisrc.32   %phi1672 <- %r10735
	br          %r10740, .L2568, .L2566

.L2568:
	load.32     %r10743 <- 8[%r10731]
	seteq.32    %r10744 <- %r10743, $4
	br          %r10744, .L2567, .L2570

.L2570:
	add.64      %r10747 <- %r10732, $-16
	call.32     %r10748 <- luaV_tostring, %arg1, %r10747
	br          %r10748, .L2567, .L2566

.L2566:
	add.64      %r10751 <- %r10732, $-32
	add.64      %r10753 <- %r10732, $-16
	call.32     %r10756 <- call_binTM, %arg1, %r10751, %r10753, %r10751, $15
	br          %r10756, .L2573, .L2571

.L2571:
	add.64      %r10761 <- %r10732, $-16
	call        luaG_concaterror, %arg1, %r10751, %r10761
	br          .L2573

.L2567:
	load.64     %r10764 <- 0[%r10731]
	load.64     %r10765 <- 16[%r10764]
	br          %r10765, .L2575, .L2574

.L2574:
	load.32     %r10769 <- -8[%r10731]
	seteq.32    %r10770 <- %r10769, $4
	br          %r10770, .L2573, .L2577

.L2577:
	add.64      %r10773 <- %r10732, $-32
	call.32     %r10774 <- luaV_tostring, %arg1, %r10773
	br          .L2573

.L2575:
	phisrc.32   %phi1655(n) <- $1
	phisrc.64   %phi1661(tl) <- %r10765
	phisrc.64   %phi1664(tl) <- %r10765
	br          .L2583

.L2583:
	phi.32      %r10780(n) <- %phi1655(n), %phi1656(n)
	phi.32      %r10781 <- %phi1640(total), %phi1641(total)
	setlt.32    %r10782 <- %r10780(n), %r10781
	phisrc.32   %phi1639(total) <- %r10781
	br          %r10782, .L2584, .L2582

.L2584:
	scast.64    %r10785 <- (32) %r10780(n)
	muls.64     %r10786 <- %r10785, $16
	sub.64      %r10787 <- %r10732, %r10786
	load.32     %r10789 <- -8[%r10787]
	seteq.32    %r10790 <- %r10789, $4
	br          %r10790, .L2580, .L2585

.L2585:
	add.64      %r10797 <- %r10787, $-16
	call.32     %r10798 <- luaV_tostring, %arg1, %r10797
	br          %r10798, .L2580, .L2582

.L2580:
	load.64     %r10805 <- -16[%r10787]
	load.64     %r10806 <- 16[%r10805]
	phi.64      %r10808(tl) <- %phi1664(tl), %phi1665(tl)
	sub.64      %r10809 <- $-3, %r10808(tl)
	setae.32    %r10810 <- %r10806, %r10809
	br          %r10810, .L2586, .L2587

.L2586:
	symaddr.64  %r10812 <- <anon symbol:0x62d001135778>
	call        luaG_runerror, %arg1, %r10812
	br          .L2587

.L2587:
	add.64      %r10816 <- %r10808(tl), %r10806
	phisrc.64   %phi1662(tl) <- %r10816
	phisrc.64   %phi1665(tl) <- %r10816
	add.32      %r10819 <- %r10780(n), $1
	phisrc.32   %phi1656(n) <- %r10819
	br          .L2583

.L2582:
	load.64     %r10822 <- 32[%arg1]
	add.64      %r10823 <- %r10822, $88
	phi.64      %r10824 <- %phi1661(tl), %phi1662(tl)
	call.64     %r10825 <- luaZ_openspace, %arg1, %r10823, %r10824
	phisrc.64   %phi1659(tl) <- $0
	phisrc.32   %phi1668(i) <- %r10780(n)
	br          .L2591

.L2591:
	phi.32      %r10827(i) <- %phi1668(i), %phi1669(i)
	setgt.32    %r10828 <- %r10827(i), $0
	phi.64      %r10837 <- %phi1659(tl), %phi1660(tl)
	br          %r10828, .L2588, .L2590

.L2588:
	scast.64    %r10831 <- (32) %r10827(i)
	muls.64     %r10832 <- %r10831, $16
	sub.64      %r10833 <- %r10732, %r10832
	load.64     %r10834 <- 0[%r10833]
	load.64     %r10835 <- 16[%r10834]
	add.64      %r10838 <- %r10825, %r10837
	cast.64     %r10839 <- (64) %r10838
	add.64      %r10847 <- %r10834, $24
	ptrcast.64  %r10848 <- (64) %r10847
	cast.64     %r10849 <- (64) %r10848
	call.64     %r10851 <- memcpy, %r10839, %r10849, %r10835
	add.64      %r10855 <- %r10837, %r10835
	phisrc.64   %phi1660(tl) <- %r10855
	add.32      %r10858 <- %r10827(i), $-1
	phisrc.32   %phi1669(i) <- %r10858
	br          .L2591

.L2590:
	scast.64    %r10861 <- (32) %r10780(n)
	muls.64     %r10862 <- %r10861, $16
	sub.64      %r10863 <- %r10732, %r10862
	call.64     %r10867 <- luaS_newlstr, %arg1, %r10825, %r10837
	ptrcast.64  %r10868 <- (64) %r10867
	store.64    %r10868 -> 0[%r10863]
	store.32    $4 -> 8[%r10863]
	phisrc.32   %phi1646(n) <- %r10780(n)
	br          .L2573

.L2573:
	phi.32      %r10871 <- %phi1645(n), %phi1646(n)
	add.32      %r10872 <- %r10871, $-1
	phi.32      %r10873 <- %phi1637(total), %phi1638(total), %phi1639(total)
	sub.32      %r10875 <- %r10873, %r10872
	sub.32      %r10881 <- %r10728(last), %r10872
	phisrc.32   %phi1638(total) <- %r10875
	phisrc.32   %phi1641(total) <- %r10875
	phisrc.32   %phi1644(last) <- %r10881
	setgt.32    %r10884 <- %r10875, $1
	br          %r10884, .L2563, .L2565

.L2565:
	ret


Arith:
.L2592:
	<entry-point>
	symaddr.64  %r10886 <- tempb
	call.64     %r10887 <- luaV_tonumber, %arg3, %r10886
	br          %r10887, .L2595, .L2594

.L2595:
	symaddr.64  %r10890 <- tempc
	call.64     %r10891 <- luaV_tonumber, %arg4, %r10890
	br          %r10891, .L2593, .L2594

.L2593:
	load.64     %r10894 <- 0[%r10887]
	load.64     %r10897 <- 0[%r10891]
	divu.64     %r10921 <- %r10894, %r10897
	switch      %arg5, 5 -> .L2597, 6 -> .L2598, 7 -> .L2599, 8 -> .L2600, 9 -> .L2601, 10 -> .L2602, 11 -> .L2603, default -> .L2605

.L2597:
	add.64      %r10903 <- %r10894, %r10897
	store.64    %r10903 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2598:
	sub.64      %r10909 <- %r10894, %r10897
	store.64    %r10909 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2599:
	mulu.64     %r10915 <- %r10894, %r10897
	store.64    %r10915 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2600:
	store.64    %r10921 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2601:
	call.64     %r10929 <- floor, %r10921
	mulu.64     %r10931 <- %r10929, %r10897
	sub.64      %r10932 <- %r10894, %r10931
	store.64    %r10932 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2602:
	call.64     %r10938 <- pow, %r10894, %r10897
	store.64    %r10938 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2603:
	neg.64      %r10943 <- %r10894
	store.64    %r10943 -> 0[%arg2]
	store.32    $3 -> 8[%arg2]
	br          .L2605

.L2594:
	call.32     %r10951 <- call_binTM, %arg1, %arg3, %arg4, %arg2, %arg5
	br          %r10951, .L2605, .L2606

.L2606:
	call        luaG_aritherror, %arg1, %arg3, %arg4
	br          .L2605

.L2605:
	ret


luaV_execute:
.L2608:
	<entry-point>
	phisrc.32   %phi1735(nexeccalls) <- %arg2
	phisrc.32   %phi1738(nexeccalls) <- %arg2
	br          .L2609

.L2609:
	load.64     %r10956(pc) <- 48[%arg1]
	load.64     %r10958 <- 40[%arg1]
	load.64     %r10959 <- 8[%r10958]
	load.64     %r10960 <- 0[%r10959]
	load.64     %r10964(base) <- 24[%arg1]
	load.64     %r10966 <- 32[%r10960]
	load.64     %r10967 <- 16[%r10966]
	phisrc.64   %phi1796(pc) <- %r10956(pc)
	phisrc.64   %phi1854(base) <- %r10964(base)
	phisrc.64   %phi1998 <- %r10966
	phisrc.64   %phi1999 <- %r10958
	phisrc.64   %phi2002 <- %r10966
	phisrc.64   %phi2003 <- %r10958
	phisrc.64   %phi2009 <- %r10966
	phisrc.64   %phi2010 <- %r10958
	phisrc.64   %phi2011 <- %r10966
	phisrc.64   %phi2012 <- %r10958
	phisrc.64   %phi2016 <- %r10966
	phisrc.64   %phi2017 <- %r10958
	phisrc.64   %phi2018 <- %r10966
	phisrc.64   %phi2019 <- %r10958
	br          .L2610

.L2610:
	phi.64      %r10968 <- %phi1796(pc), %phi1797(pc), %phi1798(pc), %phi1799(pc), %phi1800(pc), %phi1801(pc), %phi1802(pc), %phi1803(pc), %phi1804(pc), %phi1805(pc), %phi1806(pc), %phi1807(pc), %phi1808(pc), %phi1809(pc)
	add.64      %r10969(pc) <- %r10968, $4
	load.32     %r10970 <- 0[%r10968]
	phi.64      %r10971(base) <- %phi1854(base), %phi1855(base), %phi1856(base), %phi1857(base), %phi1858(base), %phi1859(base), %phi1860(base), %phi1861(base), %phi1862(base), %phi1863(base), %phi1864(base), %phi1865(base), %phi1866(base), %phi1867(base), %phi1868(base), %phi1869(base), %phi1870(base), %phi1871(base), %phi1872(base), %phi1873(base), %phi1874(base), %phi1875(base), %phi1876(base), %phi1877(base)
	lsr.32      %r10974 <- %r10970, $6
	and.32      %r10975 <- %r10974, $255
	scast.64    %r10977 <- (32) %r10975
	muls.64     %r10978 <- %r10977, $16
	add.64      %r10979(ra) <- %r10971(base), %r10978
	and.32      %r10983 <- %r10970, $63
	phisrc.64   %phi1748(pc) <- %r10969(pc)
	phisrc.64   %phi1761(pc) <- %r10969(pc)
	phisrc.64   %phi1764(pc) <- %r10969(pc)
	phisrc.64   %phi1797(pc) <- %r10969(pc)
	phisrc.64   %phi1878(ra) <- %r10979(ra)
	phisrc.64   %phi1881(ra) <- %r10979(ra)
	lsr.32      %r11005 <- %r10970, $14
	and.32      %r11073 <- %r11005, $0x3ffff
	add.64      %r11054 <- %r10960, $40
	lsr.32      %r10988 <- %r10970, $23
	and.32      %r11030 <- %r11005, $511
	and.32      %r10989 <- %r10988, $511
	and.32      %r11109 <- %r11005, $256
	and.32      %r11205 <- %r10988, $256
	switch      %r10983, 0 -> .L2615, 1 -> .L2616, 2 -> .L2617, 3 -> .L2618, 4 -> .L2619, 5 -> .L2620, 6 -> .L2621, 7 -> .L2622, 8 -> .L2623, 9 -> .L2624, 10 -> .L2625, 11 -> .L2626, 12 -> .L2627, 13 -> .L2628, 14 -> .L2629, 15 -> .L2630, 16 -> .L2631, 17 -> .L2632, 18 -> .L2633, 19 -> .L2634, 20 -> .L2635, 21 -> .L2636, 22 -> .L2637, 23 -> .L2638, 24 -> .L2639, 25 -> .L2640, 26 -> .L2641, 27 -> .L2642, 28 -> .L2643, 29 -> .L2644, 30 -> .L2645, 31 -> .L2646, 32 -> .L2647, 33 -> .L2648, 34 -> .L2649, 35 -> .L2650, 36 -> .L2651, 37 -> .L2652, default -> .L2610

.L2615:
	scast.64    %r10991 <- (32) %r10989
	muls.64     %r10992 <- %r10991, $16
	add.64      %r10993 <- %r10971(base), %r10992
	load.64     %r10996 <- 0[%r10993]
	store.64    %r10996 -> 0[%r10979(ra)]
	load.32     %r10999 <- 8[%r10993]
	store.32    %r10999 -> 8[%r10979(ra)]
	br          .L2610

.L2616:
	scast.64    %r11008 <- (32) %r11073
	muls.64     %r11009 <- %r11008, $16
	add.64      %r11010 <- %r10967, %r11009
	load.64     %r11013 <- 0[%r11010]
	store.64    %r11013 -> 0[%r10979(ra)]
	load.32     %r11016 <- 8[%r11010]
	store.32    %r11016 -> 8[%r10979(ra)]
	br          .L2610

.L2617:
	store.32    %r10989 -> 0[%r10979(ra)]
	store.32    $1 -> 8[%r10979(ra)]
	br          %r11030, .L2653, .L2610

.L2653:
	add.64      %r11033 <- %r10969(pc), $4
	phisrc.64   %phi1798(pc) <- %r11033
	br          .L2610

.L2618:
	scast.64    %r11040 <- (32) %r10989
	muls.64     %r11041 <- %r11040, $16
	add.64      %r11042(rb) <- %r10971(base), %r11041
	phisrc.64   %phi1951(rb) <- %r11042(rb)
	br          .L2655

.L2655:
	phi.64      %r11043 <- %phi1951(rb), %phi1952(rb)
	add.64      %r11044(rb) <- %r11043, $-16
	store.32    $0 -> 8[%r11043]
	phisrc.64   %phi1952(rb) <- %r11044(rb)
	setae.32    %r11047 <- %r11044(rb), %r10979(ra)
	br          %r11047, .L2655, .L2610

.L2619:
	scast.64    %r11056 <- (32) %r10989
	muls.64     %r11057 <- %r11056, $8
	add.64      %r11058 <- %r11054, %r11057
	load.64     %r11059 <- 0[%r11058]
	load.64     %r11060 <- 16[%r11059]
	load.64     %r11063 <- 0[%r11060]
	store.64    %r11063 -> 0[%r10979(ra)]
	load.32     %r11066 <- 8[%r11060]
	store.32    %r11066 -> 8[%r10979(ra)]
	br          .L2610

.L2620:
	scast.64    %r11075 <- (32) %r11073
	muls.64     %r11076 <- %r11075, $16
	add.64      %r11077 <- %r10967, %r11076
	load.64     %r11080 <- 24[%r10960]
	ptrcast.64  %r11081 <- (64) %r11080
	store.64    %r11081 -> 0[g]
	store.32    $5 -> 8[g]
	store.64    %r10969(pc) -> 48[%arg1]
	symaddr.64  %r11087 <- g
	call        luaV_gettable, %arg1, %r11087, %r11077, %r10979(ra)
	load.64     %r11091 <- 24[%arg1]
	phisrc.64   %phi1855(base) <- %r11091
	br          .L2610

.L2621:
	store.64    %r10969(pc) -> 48[%arg1]
	scast.64    %r11101 <- (32) %r10989
	muls.64     %r11102 <- %r11101, $16
	add.64      %r11103 <- %r10971(base), %r11102
	br          %r11109, .L2658, .L2659

.L2658:
	and.32      %r11117 <- %r11005, $255
	scast.64    %r11118 <- (32) %r11117
	muls.64     %r11119 <- %r11118, $16
	add.64      %r11120 <- %r10967, %r11119
	phisrc.64   %phi1677 <- %r11120
	br          .L2660

.L2659:
	scast.64    %r11127 <- (32) %r11030
	muls.64     %r11128 <- %r11127, $16
	add.64      %r11129 <- %r10971(base), %r11128
	ptrcast.64  %r11130 <- (64) %r11129
	phisrc.64   %phi1678 <- %r11130
	br          .L2660

.L2660:
	phi.64      %r11131 <- %phi1677, %phi1678
	call        luaV_gettable, %arg1, %r11103, %r11131, %r10979(ra)
	load.64     %r11134 <- 24[%arg1]
	phisrc.64   %phi1856(base) <- %r11134
	br          .L2610

.L2622:
	load.64     %r11137 <- 24[%r10960]
	ptrcast.64  %r11138 <- (64) %r11137
	store.64    %r11138 -> 0[g]
	store.32    $5 -> 8[g]
	store.64    %r10969(pc) -> 48[%arg1]
	symaddr.64  %r11144 <- g
	scast.64    %r11151 <- (32) %r11073
	muls.64     %r11152 <- %r11151, $16
	add.64      %r11153 <- %r10967, %r11152
	call        luaV_settable, %arg1, %r11144, %r11153, %r10979(ra)
	load.64     %r11156 <- 24[%arg1]
	phisrc.64   %phi1857(base) <- %r11156
	br          .L2610

.L2623:
	scast.64    %r11164 <- (32) %r10989
	muls.64     %r11165 <- %r11164, $8
	add.64      %r11166 <- %r11054, %r11165
	load.64     %r11167 <- 0[%r11166]
	load.64     %r11170 <- 16[%r11167]
	load.64     %r11172 <- 0[%r10979(ra)]
	store.64    %r11172 -> 0[%r11170]
	load.32     %r11175 <- 8[%r10979(ra)]
	store.32    %r11175 -> 8[%r11170]
	load.32     %r11179 <- 8[%r10979(ra)]
	setge.32    %r11180 <- %r11179, $4
	br          %r11180, .L2664, .L2610

.L2664:
	load.64     %r11182 <- 0[%r10979(ra)]
	load.8      %r11183 <- 9[%r11182]
	cast.32     %r11184 <- (8) %r11183
	and.32      %r11185 <- %r11184, $3
	br          %r11185, .L2663, .L2610

.L2663:
	ptrcast.64  %r11187 <- (64) %r11167
	load.8      %r11188 <- 9[%r11187]
	cast.32     %r11189 <- (8) %r11188
	and.32      %r11190 <- %r11189, $4
	br          %r11190, .L2661, .L2610

.L2661:
	call        luaC_barrierf, %arg1, %r11187, %r11182
	br          .L2610

.L2624:
	store.64    %r10969(pc) -> 48[%arg1]
	br          %r11205, .L2665, .L2666

.L2665:
	and.32      %r11213 <- %r10988, $255
	scast.64    %r11214 <- (32) %r11213
	muls.64     %r11215 <- %r11214, $16
	add.64      %r11216 <- %r10967, %r11215
	phisrc.64   %phi1679 <- %r11216
	br          .L2667

.L2666:
	scast.64    %r11223 <- (32) %r10989
	muls.64     %r11224 <- %r11223, $16
	add.64      %r11225 <- %r10971(base), %r11224
	ptrcast.64  %r11226 <- (64) %r11225
	phisrc.64   %phi1680 <- %r11226
	br          .L2667

.L2667:
	phi.64      %r11227 <- %phi1679, %phi1680
	br          %r11109, .L2668, .L2669

.L2668:
	and.32      %r11241 <- %r11005, $255
	scast.64    %r11242 <- (32) %r11241
	muls.64     %r11243 <- %r11242, $16
	add.64      %r11244 <- %r10967, %r11243
	phisrc.64   %phi1681 <- %r11244
	br          .L2670

.L2669:
	scast.64    %r11251 <- (32) %r11030
	muls.64     %r11252 <- %r11251, $16
	add.64      %r11253 <- %r10971(base), %r11252
	ptrcast.64  %r11254 <- (64) %r11253
	phisrc.64   %phi1682 <- %r11254
	br          .L2670

.L2670:
	phi.64      %r11255 <- %phi1681, %phi1682
	call        luaV_settable, %arg1, %r10979(ra), %r11227, %r11255
	load.64     %r11257 <- 24[%arg1]
	phisrc.64   %phi1858(base) <- %r11257
	br          .L2610

.L2625:
	call.32     %r11271 <- luaO_fb2int, %r10989
	call.32     %r11273 <- luaO_fb2int, %r11030
	call.64     %r11274 <- luaH_new, %arg1, %r11271, %r11273
	ptrcast.64  %r11275 <- (64) %r11274
	store.64    %r11275 -> 0[%r10979(ra)]
	store.32    $5 -> 8[%r10979(ra)]
	store.64    %r10969(pc) -> 48[%arg1]
	load.64     %r11281 <- 32[%arg1]
	load.64     %r11282 <- 120[%r11281]
	load.64     %r11285 <- 112[%r11281]
	setae.32    %r11286 <- %r11282, %r11285
	br          %r11286, .L2671, .L2672

.L2671:
	call        luaC_step, %arg1
	br          .L2672

.L2672:
	load.64     %r11289 <- 24[%arg1]
	phisrc.64   %phi1859(base) <- %r11289
	br          .L2610

.L2626:
	scast.64    %r11296 <- (32) %r10989
	muls.64     %r11297 <- %r11296, $16
	add.64      %r11298 <- %r10971(base), %r11297
	load.64     %r11303 <- 0[%r11298]
	store.64    %r11303 -> 16[%r10979(ra)]
	load.32     %r11306 <- 8[%r11298]
	store.32    %r11306 -> 24[%r10979(ra)]
	store.64    %r10969(pc) -> 48[%arg1]
	br          %r11109, .L2673, .L2674

.L2673:
	and.32      %r11326 <- %r11005, $255
	scast.64    %r11327 <- (32) %r11326
	muls.64     %r11328 <- %r11327, $16
	add.64      %r11329 <- %r10967, %r11328
	phisrc.64   %phi1683 <- %r11329
	br          .L2675

.L2674:
	scast.64    %r11336 <- (32) %r11030
	muls.64     %r11337 <- %r11336, $16
	add.64      %r11338 <- %r10971(base), %r11337
	ptrcast.64  %r11339 <- (64) %r11338
	phisrc.64   %phi1684 <- %r11339
	br          .L2675

.L2675:
	phi.64      %r11340 <- %phi1683, %phi1684
	call        luaV_gettable, %arg1, %r11298, %r11340, %r10979(ra)
	load.64     %r11343 <- 24[%arg1]
	phisrc.64   %phi1860(base) <- %r11343
	br          .L2610

.L2627:
	br          %r11205, .L2676, .L2677

.L2676:
	and.32      %r11357 <- %r10988, $255
	scast.64    %r11358 <- (32) %r11357
	muls.64     %r11359 <- %r11358, $16
	add.64      %r11360 <- %r10967, %r11359
	phisrc.64   %phi1685 <- %r11360
	br          .L2678

.L2677:
	scast.64    %r11367 <- (32) %r10989
	muls.64     %r11368 <- %r11367, $16
	add.64      %r11369 <- %r10971(base), %r11368
	ptrcast.64  %r11370 <- (64) %r11369
	phisrc.64   %phi1686 <- %r11370
	br          .L2678

.L2678:
	phi.64      %r11371 <- %phi1685, %phi1686
	br          %r11109, .L2679, .L2680

.L2679:
	and.32      %r11385 <- %r11005, $255
	scast.64    %r11386 <- (32) %r11385
	muls.64     %r11387 <- %r11386, $16
	add.64      %r11388 <- %r10967, %r11387
	phisrc.64   %phi1687 <- %r11388
	br          .L2681

.L2680:
	scast.64    %r11395 <- (32) %r11030
	muls.64     %r11396 <- %r11395, $16
	add.64      %r11397 <- %r10971(base), %r11396
	ptrcast.64  %r11398 <- (64) %r11397
	phisrc.64   %phi1688 <- %r11398
	br          .L2681

.L2681:
	phi.64      %r11399 <- %phi1687, %phi1688
	load.32     %r11401 <- 8[%r11371]
	seteq.32    %r11402 <- %r11401, $3
	br          %r11402, .L2684, .L2683

.L2684:
	load.32     %r11404 <- 8[%r11399]
	seteq.32    %r11405 <- %r11404, $3
	br          %r11405, .L2682, .L2683

.L2682:
	load.64     %r11407 <- 0[%r11371]
	load.64     %r11409 <- 0[%r11399]
	add.64      %r11413 <- %r11407, %r11409
	store.64    %r11413 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2683:
	store.64    %r10969(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10979(ra), %r11371, %r11399, $5
	load.64     %r11423 <- 24[%arg1]
	phisrc.64   %phi1861(base) <- %r11423
	br          .L2610

.L2628:
	br          %r11205, .L2686, .L2687

.L2686:
	and.32      %r11437 <- %r10988, $255
	scast.64    %r11438 <- (32) %r11437
	muls.64     %r11439 <- %r11438, $16
	add.64      %r11440 <- %r10967, %r11439
	phisrc.64   %phi1689 <- %r11440
	br          .L2688

.L2687:
	scast.64    %r11447 <- (32) %r10989
	muls.64     %r11448 <- %r11447, $16
	add.64      %r11449 <- %r10971(base), %r11448
	ptrcast.64  %r11450 <- (64) %r11449
	phisrc.64   %phi1690 <- %r11450
	br          .L2688

.L2688:
	phi.64      %r11451 <- %phi1689, %phi1690
	br          %r11109, .L2689, .L2690

.L2689:
	and.32      %r11465 <- %r11005, $255
	scast.64    %r11466 <- (32) %r11465
	muls.64     %r11467 <- %r11466, $16
	add.64      %r11468 <- %r10967, %r11467
	phisrc.64   %phi1691 <- %r11468
	br          .L2691

.L2690:
	scast.64    %r11475 <- (32) %r11030
	muls.64     %r11476 <- %r11475, $16
	add.64      %r11477 <- %r10971(base), %r11476
	ptrcast.64  %r11478 <- (64) %r11477
	phisrc.64   %phi1692 <- %r11478
	br          .L2691

.L2691:
	phi.64      %r11479 <- %phi1691, %phi1692
	load.32     %r11481 <- 8[%r11451]
	seteq.32    %r11482 <- %r11481, $3
	br          %r11482, .L2694, .L2693

.L2694:
	load.32     %r11484 <- 8[%r11479]
	seteq.32    %r11485 <- %r11484, $3
	br          %r11485, .L2692, .L2693

.L2692:
	load.64     %r11487 <- 0[%r11451]
	load.64     %r11489 <- 0[%r11479]
	sub.64      %r11493 <- %r11487, %r11489
	store.64    %r11493 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2693:
	store.64    %r10969(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10979(ra), %r11451, %r11479, $6
	load.64     %r11503 <- 24[%arg1]
	phisrc.64   %phi1862(base) <- %r11503
	br          .L2610

.L2629:
	br          %r11205, .L2696, .L2697

.L2696:
	and.32      %r11517 <- %r10988, $255
	scast.64    %r11518 <- (32) %r11517
	muls.64     %r11519 <- %r11518, $16
	add.64      %r11520 <- %r10967, %r11519
	phisrc.64   %phi1693 <- %r11520
	br          .L2698

.L2697:
	scast.64    %r11527 <- (32) %r10989
	muls.64     %r11528 <- %r11527, $16
	add.64      %r11529 <- %r10971(base), %r11528
	ptrcast.64  %r11530 <- (64) %r11529
	phisrc.64   %phi1694 <- %r11530
	br          .L2698

.L2698:
	phi.64      %r11531 <- %phi1693, %phi1694
	br          %r11109, .L2699, .L2700

.L2699:
	and.32      %r11545 <- %r11005, $255
	scast.64    %r11546 <- (32) %r11545
	muls.64     %r11547 <- %r11546, $16
	add.64      %r11548 <- %r10967, %r11547
	phisrc.64   %phi1695 <- %r11548
	br          .L2701

.L2700:
	scast.64    %r11555 <- (32) %r11030
	muls.64     %r11556 <- %r11555, $16
	add.64      %r11557 <- %r10971(base), %r11556
	ptrcast.64  %r11558 <- (64) %r11557
	phisrc.64   %phi1696 <- %r11558
	br          .L2701

.L2701:
	phi.64      %r11559 <- %phi1695, %phi1696
	load.32     %r11561 <- 8[%r11531]
	seteq.32    %r11562 <- %r11561, $3
	br          %r11562, .L2704, .L2703

.L2704:
	load.32     %r11564 <- 8[%r11559]
	seteq.32    %r11565 <- %r11564, $3
	br          %r11565, .L2702, .L2703

.L2702:
	load.64     %r11567 <- 0[%r11531]
	load.64     %r11569 <- 0[%r11559]
	mulu.64     %r11573 <- %r11567, %r11569
	store.64    %r11573 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2703:
	store.64    %r10969(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10979(ra), %r11531, %r11559, $7
	load.64     %r11583 <- 24[%arg1]
	phisrc.64   %phi1863(base) <- %r11583
	br          .L2610

.L2630:
	br          %r11205, .L2706, .L2707

.L2706:
	and.32      %r11597 <- %r10988, $255
	scast.64    %r11598 <- (32) %r11597
	muls.64     %r11599 <- %r11598, $16
	add.64      %r11600 <- %r10967, %r11599
	phisrc.64   %phi1697 <- %r11600
	br          .L2708

.L2707:
	scast.64    %r11607 <- (32) %r10989
	muls.64     %r11608 <- %r11607, $16
	add.64      %r11609 <- %r10971(base), %r11608
	ptrcast.64  %r11610 <- (64) %r11609
	phisrc.64   %phi1698 <- %r11610
	br          .L2708

.L2708:
	phi.64      %r11611 <- %phi1697, %phi1698
	br          %r11109, .L2709, .L2710

.L2709:
	and.32      %r11625 <- %r11005, $255
	scast.64    %r11626 <- (32) %r11625
	muls.64     %r11627 <- %r11626, $16
	add.64      %r11628 <- %r10967, %r11627
	phisrc.64   %phi1699 <- %r11628
	br          .L2711

.L2710:
	scast.64    %r11635 <- (32) %r11030
	muls.64     %r11636 <- %r11635, $16
	add.64      %r11637 <- %r10971(base), %r11636
	ptrcast.64  %r11638 <- (64) %r11637
	phisrc.64   %phi1700 <- %r11638
	br          .L2711

.L2711:
	phi.64      %r11639 <- %phi1699, %phi1700
	load.32     %r11641 <- 8[%r11611]
	seteq.32    %r11642 <- %r11641, $3
	br          %r11642, .L2714, .L2713

.L2714:
	load.32     %r11644 <- 8[%r11639]
	seteq.32    %r11645 <- %r11644, $3
	br          %r11645, .L2712, .L2713

.L2712:
	load.64     %r11647 <- 0[%r11611]
	load.64     %r11649 <- 0[%r11639]
	divu.64     %r11653 <- %r11647, %r11649
	store.64    %r11653 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2713:
	store.64    %r10969(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10979(ra), %r11611, %r11639, $8
	load.64     %r11663 <- 24[%arg1]
	phisrc.64   %phi1864(base) <- %r11663
	br          .L2610

.L2631:
	br          %r11205, .L2716, .L2717

.L2716:
	and.32      %r11677 <- %r10988, $255
	scast.64    %r11678 <- (32) %r11677
	muls.64     %r11679 <- %r11678, $16
	add.64      %r11680 <- %r10967, %r11679
	phisrc.64   %phi1701 <- %r11680
	br          .L2718

.L2717:
	scast.64    %r11687 <- (32) %r10989
	muls.64     %r11688 <- %r11687, $16
	add.64      %r11689 <- %r10971(base), %r11688
	ptrcast.64  %r11690 <- (64) %r11689
	phisrc.64   %phi1702 <- %r11690
	br          .L2718

.L2718:
	phi.64      %r11691 <- %phi1701, %phi1702
	br          %r11109, .L2719, .L2720

.L2719:
	and.32      %r11705 <- %r11005, $255
	scast.64    %r11706 <- (32) %r11705
	muls.64     %r11707 <- %r11706, $16
	add.64      %r11708 <- %r10967, %r11707
	phisrc.64   %phi1703 <- %r11708
	br          .L2721

.L2720:
	scast.64    %r11715 <- (32) %r11030
	muls.64     %r11716 <- %r11715, $16
	add.64      %r11717 <- %r10971(base), %r11716
	ptrcast.64  %r11718 <- (64) %r11717
	phisrc.64   %phi1704 <- %r11718
	br          .L2721

.L2721:
	phi.64      %r11719 <- %phi1703, %phi1704
	load.32     %r11721 <- 8[%r11691]
	seteq.32    %r11722 <- %r11721, $3
	br          %r11722, .L2724, .L2723

.L2724:
	load.32     %r11724 <- 8[%r11719]
	seteq.32    %r11725 <- %r11724, $3
	br          %r11725, .L2722, .L2723

.L2722:
	load.64     %r11727 <- 0[%r11691]
	load.64     %r11729 <- 0[%r11719]
	divu.64     %r11734 <- %r11727, %r11729
	call.64     %r11735 <- floor, %r11734
	mulu.64     %r11737 <- %r11735, %r11729
	sub.64      %r11738 <- %r11727, %r11737
	store.64    %r11738 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2723:
	store.64    %r10969(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10979(ra), %r11691, %r11719, $9
	load.64     %r11748 <- 24[%arg1]
	phisrc.64   %phi1865(base) <- %r11748
	br          .L2610

.L2632:
	br          %r11205, .L2726, .L2727

.L2726:
	and.32      %r11762 <- %r10988, $255
	scast.64    %r11763 <- (32) %r11762
	muls.64     %r11764 <- %r11763, $16
	add.64      %r11765 <- %r10967, %r11764
	phisrc.64   %phi1705 <- %r11765
	br          .L2728

.L2727:
	scast.64    %r11772 <- (32) %r10989
	muls.64     %r11773 <- %r11772, $16
	add.64      %r11774 <- %r10971(base), %r11773
	ptrcast.64  %r11775 <- (64) %r11774
	phisrc.64   %phi1706 <- %r11775
	br          .L2728

.L2728:
	phi.64      %r11776 <- %phi1705, %phi1706
	br          %r11109, .L2729, .L2730

.L2729:
	and.32      %r11790 <- %r11005, $255
	scast.64    %r11791 <- (32) %r11790
	muls.64     %r11792 <- %r11791, $16
	add.64      %r11793 <- %r10967, %r11792
	phisrc.64   %phi1707 <- %r11793
	br          .L2731

.L2730:
	scast.64    %r11800 <- (32) %r11030
	muls.64     %r11801 <- %r11800, $16
	add.64      %r11802 <- %r10971(base), %r11801
	ptrcast.64  %r11803 <- (64) %r11802
	phisrc.64   %phi1708 <- %r11803
	br          .L2731

.L2731:
	phi.64      %r11804 <- %phi1707, %phi1708
	load.32     %r11806 <- 8[%r11776]
	seteq.32    %r11807 <- %r11806, $3
	br          %r11807, .L2734, .L2733

.L2734:
	load.32     %r11809 <- 8[%r11804]
	seteq.32    %r11810 <- %r11809, $3
	br          %r11810, .L2732, .L2733

.L2732:
	load.64     %r11812 <- 0[%r11776]
	load.64     %r11814 <- 0[%r11804]
	call.64     %r11818 <- pow, %r11812, %r11814
	store.64    %r11818 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2733:
	store.64    %r10969(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10979(ra), %r11776, %r11804, $10
	load.64     %r11828 <- 24[%arg1]
	phisrc.64   %phi1866(base) <- %r11828
	br          .L2610

.L2633:
	scast.64    %r11835 <- (32) %r10989
	muls.64     %r11836 <- %r11835, $16
	add.64      %r11837 <- %r10971(base), %r11836
	load.32     %r11839 <- 8[%r11837]
	seteq.32    %r11840 <- %r11839, $3
	br          %r11840, .L2736, .L2737

.L2736:
	load.64     %r11842 <- 0[%r11837]
	neg.64      %r11845 <- %r11842
	store.64    %r11845 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2737:
	store.64    %r10969(pc) -> 48[%arg1]
	call        Arith, %arg1, %r10979(ra), %r11837, %r11837, $11
	load.64     %r11855 <- 24[%arg1]
	phisrc.64   %phi1867(base) <- %r11855
	br          .L2610

.L2634:
	scast.64    %r11862 <- (32) %r10989
	muls.64     %r11863 <- %r11862, $16
	add.64      %r11864 <- %r10971(base), %r11863
	load.32     %r11865 <- 8[%r11864]
	br          %r11865, .L2740, .L2739

.L2739:
	phisrc.32   %phi1709 <- $1
	br          .L2741

.L2740:
	scast.64    %r11873 <- (32) %r10989
	muls.64     %r11874 <- %r11873, $16
	add.64      %r11875 <- %r10971(base), %r11874
	load.32     %r11876 <- 8[%r11875]
	seteq.32    %r11877 <- %r11876, $1
	br          %r11877, .L2742, .L2743

.L2742:
	scast.64    %r11884 <- (32) %r10989
	muls.64     %r11885 <- %r11884, $16
	add.64      %r11886 <- %r10971(base), %r11885
	load.32     %r11887 <- 0[%r11886]
	seteq.32    %r11888 <- %r11887, $0
	phisrc.32   %phi1710 <- %r11888
	br          .L2744

.L2743:
	phisrc.32   %phi1711 <- $0
	br          .L2744

.L2744:
	phi.32      %r11889 <- %phi1710, %phi1711
	phisrc.32   %phi1712 <- %r11889
	br          .L2741

.L2741:
	phi.32      %r11890 <- %phi1709, %phi1712
	store.32    %r11890 -> 0[%r10979(ra)]
	store.32    $1 -> 8[%r10979(ra)]
	br          .L2610

.L2635:
	scast.64    %r11901 <- (32) %r10989
	muls.64     %r11902 <- %r11901, $16
	add.64      %r11903 <- %r10971(base), %r11902
	load.32     %r11905 <- 8[%r11903]
	switch      %r11905, 4 -> .L2747, 5 -> .L2746, default -> .L2748

.L2746:
	load.64     %r11908 <- 0[%r11903]
	call.32     %r11910 <- luaH_getn, %r11908
	fpcast.64   %r11911 <- (32) %r11910
	store.64    %r11911 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2747:
	load.64     %r11916 <- 0[%r11903]
	load.64     %r11917 <- 16[%r11916]
	fpcast.64   %r11918 <- (64) %r11917
	store.64    %r11918 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	br          .L2610

.L2748:
	store.64    %r10969(pc) -> 48[%arg1]
	symaddr.64  %r11925 <- luaO_nilobject_
	call.32     %r11927 <- call_binTM, %arg1, %r11903, %r11925, %r10979(ra), $12
	br          %r11927, .L2750, .L2749

.L2749:
	symaddr.64  %r11930 <- <anon symbol:0x62d00111f8a8>
	call        luaG_typeerror, %arg1, %r11903, %r11930
	br          .L2750

.L2750:
	load.64     %r11932 <- 24[%arg1]
	phisrc.64   %phi1868(base) <- %r11932
	br          .L2610

.L2636:
	store.64    %r10969(pc) -> 48[%arg1]
	sub.32      %r11948 <- %r11030, %r10989
	add.32      %r11949 <- %r11948, $1
	call        luaV_concat, %arg1, %r11949, %r11030
	load.64     %r11952 <- 32[%arg1]
	load.64     %r11953 <- 120[%r11952]
	load.64     %r11956 <- 112[%r11952]
	setae.32    %r11957 <- %r11953, %r11956
	br          %r11957, .L2751, .L2752

.L2751:
	call        luaC_step, %arg1
	br          .L2752

.L2752:
	load.64     %r11960 <- 24[%arg1]
	scast.64    %r11963 <- (32) %r10989
	muls.64     %r11964 <- %r11963, $16
	add.64      %r11965 <- %r11960, %r11964
	scast.64    %r11972 <- (32) %r10975
	muls.64     %r11973 <- %r11972, $16
	add.64      %r11974 <- %r11960, %r11973
	load.64     %r11976 <- 0[%r11965]
	store.64    %r11976 -> 0[%r11974]
	load.32     %r11979 <- 8[%r11965]
	store.32    %r11979 -> 8[%r11974]
	phisrc.64   %phi1869(base) <- %r11960
	br          .L2610

.L2637:
	add.32      %r11987 <- %r11073, $0xfffffffffffe0001
	scast.64    %r11988 <- (32) %r11987
	muls.64     %r11989 <- %r11988, $4
	cast.64     %r11991 <- (64) %r10969(pc)
	add.64      %r11992 <- %r11991, %r11989
	ptrcast.64  %r11993 <- (64) %r11992
	phisrc.64   %phi1799(pc) <- %r11993
	br          .L2610

.L2638:
	br          %r11205, .L2753, .L2754

.L2753:
	and.32      %r12007 <- %r10988, $255
	scast.64    %r12008 <- (32) %r12007
	muls.64     %r12009 <- %r12008, $16
	add.64      %r12010 <- %r10967, %r12009
	phisrc.64   %phi1713 <- %r12010
	br          .L2755

.L2754:
	scast.64    %r12017 <- (32) %r10989
	muls.64     %r12018 <- %r12017, $16
	add.64      %r12019 <- %r10971(base), %r12018
	ptrcast.64  %r12020 <- (64) %r12019
	phisrc.64   %phi1714 <- %r12020
	br          .L2755

.L2755:
	phi.64      %r12021 <- %phi1713, %phi1714
	br          %r11109, .L2756, .L2757

.L2756:
	and.32      %r12035 <- %r11005, $255
	scast.64    %r12036 <- (32) %r12035
	muls.64     %r12037 <- %r12036, $16
	add.64      %r12038 <- %r10967, %r12037
	phisrc.64   %phi1715 <- %r12038
	br          .L2758

.L2757:
	scast.64    %r12045 <- (32) %r11030
	muls.64     %r12046 <- %r12045, $16
	add.64      %r12047 <- %r10971(base), %r12046
	ptrcast.64  %r12048 <- (64) %r12047
	phisrc.64   %phi1716 <- %r12048
	br          .L2758

.L2758:
	phi.64      %r12049 <- %phi1715, %phi1716
	store.64    %r10969(pc) -> 48[%arg1]
	load.32     %r12053 <- 8[%r12021]
	load.32     %r12055 <- 8[%r12049]
	seteq.32    %r12056 <- %r12053, %r12055
	phisrc.64   %phi1775(pc) <- %r10969(pc)
	br          %r12056, .L2761, .L2762

.L2761:
	call.32     %r12060 <- luaV_equalval, %arg1, %r12021, %r12049
	phisrc.32   %phi1717 <- %r12060
	br          .L2763

.L2762:
	phisrc.32   %phi1718 <- $0
	br          .L2763

.L2763:
	phi.32      %r12061 <- %phi1717, %phi1718
	seteq.32    %r12067 <- %r12061, %r10975
	br          %r12067, .L2759, .L2760

.L2759:
	load.32     %r12069 <- 4[%r10968]
	lsr.32      %r12071 <- %r12069, $14
	and.32      %r12072 <- %r12071, $0x3ffff
	add.32      %r12074 <- %r12072, $0xfffffffffffe0001
	scast.64    %r12075 <- (32) %r12074
	muls.64     %r12076 <- %r12075, $4
	cast.64     %r12078 <- (64) %r10969(pc)
	add.64      %r12079 <- %r12078, %r12076
	ptrcast.64  %r12080 <- (64) %r12079
	phisrc.64   %phi1776(pc) <- %r12080
	br          .L2760

.L2760:
	load.64     %r12082 <- 24[%arg1]
	phi.64      %r12083 <- %phi1775(pc), %phi1776(pc)
	add.64      %r12084 <- %r12083, $4
	phisrc.64   %phi1800(pc) <- %r12084
	phisrc.64   %phi1870(base) <- %r12082
	br          .L2610

.L2639:
	store.64    %r10969(pc) -> 48[%arg1]
	phisrc.64   %phi1771(pc) <- %r10969(pc)
	br          %r11205, .L2766, .L2767

.L2766:
	and.32      %r12101 <- %r10988, $255
	scast.64    %r12102 <- (32) %r12101
	muls.64     %r12103 <- %r12102, $16
	add.64      %r12104 <- %r10967, %r12103
	phisrc.64   %phi1719 <- %r12104
	br          .L2768

.L2767:
	scast.64    %r12111 <- (32) %r10989
	muls.64     %r12112 <- %r12111, $16
	add.64      %r12113 <- %r10971(base), %r12112
	ptrcast.64  %r12114 <- (64) %r12113
	phisrc.64   %phi1720 <- %r12114
	br          .L2768

.L2768:
	phi.64      %r12115 <- %phi1719, %phi1720
	br          %r11109, .L2769, .L2770

.L2769:
	and.32      %r12129 <- %r11005, $255
	scast.64    %r12130 <- (32) %r12129
	muls.64     %r12131 <- %r12130, $16
	add.64      %r12132 <- %r10967, %r12131
	phisrc.64   %phi1721 <- %r12132
	br          .L2771

.L2770:
	scast.64    %r12139 <- (32) %r11030
	muls.64     %r12140 <- %r12139, $16
	add.64      %r12141 <- %r10971(base), %r12140
	ptrcast.64  %r12142 <- (64) %r12141
	phisrc.64   %phi1722 <- %r12142
	br          .L2771

.L2771:
	phi.64      %r12143 <- %phi1721, %phi1722
	call.32     %r12144 <- luaV_lessthan, %arg1, %r12115, %r12143
	seteq.32    %r12150 <- %r12144, %r10975
	br          %r12150, .L2764, .L2765

.L2764:
	load.32     %r12152 <- 4[%r10968]
	lsr.32      %r12154 <- %r12152, $14
	and.32      %r12155 <- %r12154, $0x3ffff
	add.32      %r12157 <- %r12155, $0xfffffffffffe0001
	scast.64    %r12158 <- (32) %r12157
	muls.64     %r12159 <- %r12158, $4
	cast.64     %r12161 <- (64) %r10969(pc)
	add.64      %r12162 <- %r12161, %r12159
	ptrcast.64  %r12163 <- (64) %r12162
	phisrc.64   %phi1772(pc) <- %r12163
	br          .L2765

.L2765:
	load.64     %r12165 <- 24[%arg1]
	phi.64      %r12166 <- %phi1771(pc), %phi1772(pc)
	add.64      %r12167 <- %r12166, $4
	phisrc.64   %phi1801(pc) <- %r12167
	phisrc.64   %phi1871(base) <- %r12165
	br          .L2610

.L2640:
	store.64    %r10969(pc) -> 48[%arg1]
	phisrc.64   %phi1767(pc) <- %r10969(pc)
	br          %r11205, .L2774, .L2775

.L2774:
	and.32      %r12184 <- %r10988, $255
	scast.64    %r12185 <- (32) %r12184
	muls.64     %r12186 <- %r12185, $16
	add.64      %r12187 <- %r10967, %r12186
	phisrc.64   %phi1723 <- %r12187
	br          .L2776

.L2775:
	scast.64    %r12194 <- (32) %r10989
	muls.64     %r12195 <- %r12194, $16
	add.64      %r12196 <- %r10971(base), %r12195
	ptrcast.64  %r12197 <- (64) %r12196
	phisrc.64   %phi1724 <- %r12197
	br          .L2776

.L2776:
	phi.64      %r12198 <- %phi1723, %phi1724
	br          %r11109, .L2777, .L2778

.L2777:
	and.32      %r12212 <- %r11005, $255
	scast.64    %r12213 <- (32) %r12212
	muls.64     %r12214 <- %r12213, $16
	add.64      %r12215 <- %r10967, %r12214
	phisrc.64   %phi1725 <- %r12215
	br          .L2779

.L2778:
	scast.64    %r12222 <- (32) %r11030
	muls.64     %r12223 <- %r12222, $16
	add.64      %r12224 <- %r10971(base), %r12223
	ptrcast.64  %r12225 <- (64) %r12224
	phisrc.64   %phi1726 <- %r12225
	br          .L2779

.L2779:
	phi.64      %r12226 <- %phi1725, %phi1726
	call.32     %r12227 <- lessequal, %arg1, %r12198, %r12226
	seteq.32    %r12233 <- %r12227, %r10975
	br          %r12233, .L2772, .L2773

.L2772:
	load.32     %r12235 <- 4[%r10968]
	lsr.32      %r12237 <- %r12235, $14
	and.32      %r12238 <- %r12237, $0x3ffff
	add.32      %r12240 <- %r12238, $0xfffffffffffe0001
	scast.64    %r12241 <- (32) %r12240
	muls.64     %r12242 <- %r12241, $4
	cast.64     %r12244 <- (64) %r10969(pc)
	add.64      %r12245 <- %r12244, %r12242
	ptrcast.64  %r12246 <- (64) %r12245
	phisrc.64   %phi1768(pc) <- %r12246
	br          .L2773

.L2773:
	load.64     %r12248 <- 24[%arg1]
	phi.64      %r12249 <- %phi1767(pc), %phi1768(pc)
	add.64      %r12250 <- %r12249, $4
	phisrc.64   %phi1802(pc) <- %r12250
	phisrc.64   %phi1872(base) <- %r12248
	br          .L2610

.L2641:
	load.32     %r12252 <- 8[%r10979(ra)]
	br          %r12252, .L2783, .L2782

.L2782:
	phisrc.32   %phi1727 <- $1
	br          .L2784

.L2783:
	seteq.32    %r12256 <- %r12252, $1
	br          %r12256, .L2785, .L2786

.L2785:
	load.32     %r12258 <- 0[%r10979(ra)]
	seteq.32    %r12259 <- %r12258, $0
	phisrc.32   %phi1728 <- %r12259
	br          .L2787

.L2786:
	phisrc.32   %phi1729 <- $0
	br          .L2787

.L2787:
	phi.32      %r12260 <- %phi1728, %phi1729
	phisrc.32   %phi1730 <- %r12260
	br          .L2784

.L2784:
	phi.32      %r12261 <- %phi1727, %phi1730
	setne.32    %r12267 <- %r12261, %r11030
	br          %r12267, .L2780, .L2781

.L2780:
	load.32     %r12269 <- 4[%r10968]
	lsr.32      %r12271 <- %r12269, $14
	and.32      %r12272 <- %r12271, $0x3ffff
	add.32      %r12274 <- %r12272, $0xfffffffffffe0001
	scast.64    %r12275 <- (32) %r12274
	muls.64     %r12276 <- %r12275, $4
	cast.64     %r12278 <- (64) %r10969(pc)
	add.64      %r12279 <- %r12278, %r12276
	ptrcast.64  %r12280 <- (64) %r12279
	phisrc.64   %phi1765(pc) <- %r12280
	br          .L2781

.L2781:
	phi.64      %r12281 <- %phi1764(pc), %phi1765(pc)
	add.64      %r12282 <- %r12281, $4
	phisrc.64   %phi1803(pc) <- %r12282
	br          .L2610

.L2642:
	scast.64    %r12289 <- (32) %r10989
	muls.64     %r12290 <- %r12289, $16
	add.64      %r12291 <- %r10971(base), %r12290
	load.32     %r12293 <- 8[%r12291]
	br          %r12293, .L2791, .L2790

.L2790:
	phisrc.32   %phi1731 <- $1
	br          .L2792

.L2791:
	seteq.32    %r12297 <- %r12293, $1
	br          %r12297, .L2793, .L2794

.L2793:
	load.32     %r12299 <- 0[%r12291]
	seteq.32    %r12300 <- %r12299, $0
	phisrc.32   %phi1732 <- %r12300
	br          .L2795

.L2794:
	phisrc.32   %phi1733 <- $0
	br          .L2795

.L2795:
	phi.32      %r12301 <- %phi1732, %phi1733
	phisrc.32   %phi1734 <- %r12301
	br          .L2792

.L2792:
	phi.32      %r12302 <- %phi1731, %phi1734
	setne.32    %r12308 <- %r12302, %r11030
	br          %r12308, .L2788, .L2789

.L2788:
	load.64     %r12312 <- 0[%r12291]
	store.64    %r12312 -> 0[%r10979(ra)]
	load.32     %r12315 <- 8[%r12291]
	store.32    %r12315 -> 8[%r10979(ra)]
	load.32     %r12319 <- 4[%r10968]
	lsr.32      %r12321 <- %r12319, $14
	and.32      %r12322 <- %r12321, $0x3ffff
	add.32      %r12324 <- %r12322, $0xfffffffffffe0001
	scast.64    %r12325 <- (32) %r12324
	muls.64     %r12326 <- %r12325, $4
	cast.64     %r12328 <- (64) %r10969(pc)
	add.64      %r12329 <- %r12328, %r12326
	ptrcast.64  %r12330 <- (64) %r12329
	phisrc.64   %phi1762(pc) <- %r12330
	br          .L2789

.L2789:
	phi.64      %r12331 <- %phi1761(pc), %phi1762(pc)
	add.64      %r12332 <- %r12331, $4
	phisrc.64   %phi1804(pc) <- %r12332
	br          .L2610

.L2643:
	add.32      %r12343 <- %r11030, $-1
	br          %r10989, .L2796, .L2797

.L2796:
	scast.64    %r12348 <- (32) %r10989
	muls.64     %r12349 <- %r12348, $16
	add.64      %r12350 <- %r10979(ra), %r12349
	store.64    %r12350 -> 16[%arg1]
	br          .L2797

.L2797:
	store.64    %r10969(pc) -> 48[%arg1]
	call.32     %r12357 <- luaD_precall, %arg1, %r10979(ra), %r12343
	switch      %r12357, 0 -> .L2799, 1 -> .L2800, default -> .L2804

.L2799:
	phi.32      %r12358 <- %phi1738(nexeccalls), %phi1739(nexeccalls), %phi1740(nexeccalls)
	add.32      %r12359 <- %r12358, $1
	phisrc.32   %phi1736(nexeccalls) <- %r12359
	phisrc.32   %phi1739(nexeccalls) <- %r12359
	br          .L2609

.L2800:
	setge.32    %r12361 <- %r12343, $0
	br          %r12361, .L2802, .L2803

.L2802:
	load.64     %r12363 <- 40[%arg1]
	load.64     %r12364 <- 16[%r12363]
	store.64    %r12364 -> 16[%arg1]
	br          .L2803

.L2803:
	load.64     %r12367 <- 24[%arg1]
	phisrc.64   %phi1873(base) <- %r12367
	br          .L2610

.L2644:
	br          %r10989, .L2805, .L2806

.L2805:
	scast.64    %r12377 <- (32) %r10989
	muls.64     %r12378 <- %r12377, $16
	add.64      %r12379 <- %r10979(ra), %r12378
	store.64    %r12379 -> 16[%arg1]
	br          .L2806

.L2806:
	store.64    %r10969(pc) -> 48[%arg1]
	call.32     %r12385 <- luaD_precall, %arg1, %r10979(ra), $0xffffffff
	switch      %r12385, 0 -> .L2808, 1 -> .L2809, default -> .L2804

.L2808:
	load.64     %r12387 <- 40[%arg1]
	load.64     %r12390 <- -32[%r12387]
	load.64     %r12392 <- 8[%r12387]
	load.64     %r12394 <- 152[%arg1]
	phisrc.64   %phi2004 <- %r12390
	phisrc.64   %phi2014 <- %r12390
	phisrc.64   %phi2020 <- %r12390
	br          %r12394, .L2811, .L2812

.L2811:
	load.64     %r12397 <- -40[%r12387]
	call        luaF_close, %arg1, %r12397
	br          .L2812

.L2812:
	load.64     %r12399 <- -32[%r12387]
	load.64     %r12401 <- 0[%r12387]
	sub.64      %r12403 <- %r12401, %r12392
	divs.64     %r12404 <- %r12403, $16
	muls.64     %r12405 <- %r12404, $16
	add.64      %r12406 <- %r12399, %r12405
	store.64    %r12406 -> -40[%r12387]
	store.64    %r12406 -> 24[%arg1]
	phisrc.32   %phi1956(aux) <- $0
	br          .L2816

.L2816:
	phi.32      %r12410(aux) <- %phi1956(aux), %phi1957(aux)
	scast.64    %r12411 <- (32) %r12410(aux)
	muls.64     %r12412 <- %r12411, $16
	add.64      %r12413 <- %r12392, %r12412
	load.64     %r12415 <- 16[%arg1]
	setb.32     %r12416 <- %r12413, %r12415
	add.64      %r12426 <- %r12390, %r12412
	br          %r12416, .L2813, .L2815

.L2813:
	load.64     %r12428 <- 0[%r12413]
	store.64    %r12428 -> 0[%r12426]
	load.32     %r12431 <- 8[%r12413]
	store.32    %r12431 -> 8[%r12426]
	add.32      %r12435 <- %r12410(aux), $1
	phisrc.32   %phi1957(aux) <- %r12435
	br          .L2816

.L2815:
	store.64    %r12426 -> 16[%arg1]
	store.64    %r12426 -> -24[%r12387]
	load.64     %r12444 <- 48[%arg1]
	store.64    %r12444 -> -16[%r12387]
	load.32     %r12447 <- -4[%r12387]
	add.32      %r12448 <- %r12447, $1
	store.32    %r12448 -> -4[%r12387]
	load.64     %r12450 <- 40[%arg1]
	add.64      %r12451 <- %r12450, $-40
	store.64    %r12451 -> 40[%arg1]
	br          .L2609

.L2809:
	load.64     %r12453 <- 24[%arg1]
	phisrc.64   %phi1874(base) <- %r12453
	br          .L2610

.L2645:
	br          %r10989, .L2817, .L2818

.L2817:
	scast.64    %r12463 <- (32) %r10989
	muls.64     %r12464 <- %r12463, $16
	add.64      %r12465 <- %r10979(ra), %r12464
	add.64      %r12466 <- %r12465, $-16
	store.64    %r12466 -> 16[%arg1]
	br          .L2818

.L2818:
	load.64     %r12469 <- 152[%arg1]
	br          %r12469, .L2819, .L2820

.L2819:
	call        luaF_close, %arg1, %r10971(base)
	br          .L2820

.L2820:
	store.64    %r10969(pc) -> 48[%arg1]
	call.32     %r12476(b) <- luaD_poscall, %arg1, %r10979(ra)
	phi.32      %r12477 <- %phi1735(nexeccalls), %phi1736(nexeccalls), %phi1737(nexeccalls)
	add.32      %r12478 <- %r12477, $-1
	phisrc.32   %phi1737(nexeccalls) <- %r12478
	phisrc.32   %phi1740(nexeccalls) <- %r12478
	br          %r12478, .L2822, .L2804

.L2822:
	br          %r12476(b), .L2824, .L2609

.L2824:
	load.64     %r12482 <- 40[%arg1]
	load.64     %r12483 <- 16[%r12482]
	store.64    %r12483 -> 16[%arg1]
	br          .L2609

.L2646:
	load.64     %r12486 <- 32[%r10979(ra)]
	load.64     %r12488 <- 0[%r10979(ra)]
	add.64      %r12490 <- %r12488, %r12486
	load.64     %r12492 <- 16[%r10979(ra)]
	setle.32    %r12495 <- %r12490, %r12492
	setle.32    %r12498 <- %r12492, %r12490
	set.64      %r12499 <- 0.000000
	setlt.32    %r12501 <- %r12499, %r12486
	select.32   %r12502 <- %r12501, %r12495, %r12498
	br          %r12502, .L2826, .L2610

.L2826:
	add.32      %r12508 <- %r11073, $0xfffffffffffe0001
	scast.64    %r12509 <- (32) %r12508
	muls.64     %r12510 <- %r12509, $4
	cast.64     %r12512 <- (64) %r10969(pc)
	add.64      %r12513 <- %r12512, %r12510
	ptrcast.64  %r12514 <- (64) %r12513
	store.64    %r12490 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	store.64    %r12490 -> 48[%r10979(ra)]
	store.32    $3 -> 56[%r10979(ra)]
	phisrc.64   %phi1805(pc) <- %r12514
	br          .L2610

.L2647:
	add.64      %r12526(plimit) <- %r10979(ra), $16
	add.64      %r12528(pstep) <- %r10979(ra), $32
	store.64    %r10969(pc) -> 48[%arg1]
	load.32     %r12532 <- 8[%r10979(ra)]
	seteq.32    %r12534 <- %r12532, $3
	phisrc.64   %phi1963(pstep) <- %r12528(pstep)
	br          %r12534, .L2829, .L2830

.L2830:
	call.64     %r12537 <- luaV_tonumber, %r10979(ra), %r10979(ra)
	br          %r12537, .L2829, .L2828

.L2828:
	symaddr.64  %r12540 <- <anon symbol:0x62d001128688>
	call        luaG_runerror, %arg1, %r12540
	br          .L2831

.L2829:
	load.32     %r12542 <- 24[%r10979(ra)]
	seteq.32    %r12544 <- %r12542, $3
	br          %r12544, .L2833, .L2834

.L2834:
	call.64     %r12548 <- luaV_tonumber, %r12526(plimit), %r12526(plimit)
	br          %r12548, .L2833, .L2832

.L2832:
	symaddr.64  %r12551 <- <anon symbol:0x62d001128bf8>
	call        luaG_runerror, %arg1, %r12551
	br          .L2831

.L2833:
	load.32     %r12553 <- 40[%r10979(ra)]
	seteq.32    %r12555 <- %r12553, $3
	phisrc.64   %phi1964(pstep) <- %r12528(pstep)
	br          %r12555, .L2831, .L2838

.L2838:
	call.64     %r12559 <- luaV_tonumber, %r12528(pstep), %r12528(pstep)
	phisrc.64   %phi1965(pstep) <- %r12559
	br          %r12559, .L2831, .L2836

.L2836:
	symaddr.64  %r12562 <- <anon symbol:0x62d001129168>
	call        luaG_runerror, %arg1, %r12562
	br          .L2831

.L2831:
	load.64     %r12565 <- 0[%r10979(ra)]
	phi.64      %r12566 <- %phi1963(pstep), %phi1964(pstep), %phi1965(pstep)
	load.64     %r12567 <- 0[%r12566]
	sub.64      %r12569 <- %r12565, %r12567
	store.64    %r12569 -> 0[%r10979(ra)]
	store.32    $3 -> 8[%r10979(ra)]
	add.32      %r12577 <- %r11073, $0xfffffffffffe0001
	scast.64    %r12578 <- (32) %r12577
	muls.64     %r12579 <- %r12578, $4
	cast.64     %r12581 <- (64) %r10969(pc)
	add.64      %r12582 <- %r12581, %r12579
	ptrcast.64  %r12583 <- (64) %r12582
	phisrc.64   %phi1806(pc) <- %r12583
	br          .L2610

.L2648:
	add.64      %r12585 <- %r10979(ra), $48
	load.64     %r12591 <- 32[%r10979(ra)]
	store.64    %r12591 -> 80[%r10979(ra)]
	load.32     %r12594 <- 40[%r10979(ra)]
	store.32    %r12594 -> 88[%r10979(ra)]
	load.64     %r12602 <- 16[%r10979(ra)]
	store.64    %r12602 -> 64[%r10979(ra)]
	load.32     %r12605 <- 24[%r10979(ra)]
	store.32    %r12605 -> 72[%r10979(ra)]
	load.64     %r12611 <- 0[%r10979(ra)]
	store.64    %r12611 -> 48[%r10979(ra)]
	load.32     %r12614 <- 8[%r10979(ra)]
	store.32    %r12614 -> 56[%r10979(ra)]
	add.64      %r12618 <- %r12585, $48
	store.64    %r12618 -> 16[%arg1]
	store.64    %r10969(pc) -> 48[%arg1]
	call        luaD_call, %arg1, %r12585, %r11030
	load.64     %r12630 <- 24[%arg1]
	load.64     %r12632 <- 40[%arg1]
	load.64     %r12633 <- 16[%r12632]
	store.64    %r12633 -> 16[%arg1]
	scast.64    %r12641 <- (32) %r10975
	muls.64     %r12642 <- %r12641, $16
	add.64      %r12643 <- %r12630, %r12642
	load.32     %r12646 <- 56[%r12643]
	phisrc.64   %phi1751(pc) <- %r10969(pc)
	phisrc.64   %phi1875(base) <- %r12630
	br          %r12646, .L2839, .L2840

.L2839:
	load.64     %r12652 <- 48[%r12643]
	store.64    %r12652 -> 32[%r12643]
	store.32    %r12646 -> 40[%r12643]
	load.32     %r12659 <- 4[%r10968]
	lsr.32      %r12661 <- %r12659, $14
	and.32      %r12662 <- %r12661, $0x3ffff
	add.32      %r12664 <- %r12662, $0xfffffffffffe0001
	scast.64    %r12665 <- (32) %r12664
	muls.64     %r12666 <- %r12665, $4
	cast.64     %r12668 <- (64) %r10969(pc)
	add.64      %r12669 <- %r12668, %r12666
	ptrcast.64  %r12670 <- (64) %r12669
	phisrc.64   %phi1752(pc) <- %r12670
	br          .L2840

.L2840:
	phi.64      %r12671 <- %phi1751(pc), %phi1752(pc)
	add.64      %r12672 <- %r12671, $4
	phisrc.64   %phi1807(pc) <- %r12672
	br          .L2610

.L2649:
	phisrc.32   %phi1973(n) <- %r10989
	br          %r10989, .L2842, .L2841

.L2841:
	load.64     %r12686 <- 16[%arg1]
	sub.64      %r12688 <- %r12686, %r10979(ra)
	divs.64     %r12689 <- %r12688, $16
	scast.32    %r12690 <- (64) %r12689
	add.32      %r12691 <- %r12690, $-1
	load.64     %r12693 <- 40[%arg1]
	load.64     %r12694 <- 16[%r12693]
	store.64    %r12694 -> 16[%arg1]
	phisrc.32   %phi1974(n) <- %r12691
	br          .L2842

.L2842:
	phisrc.32   %phi1975(c) <- %r11030
	br          %r11030, .L2844, .L2843

.L2843:
	add.64      %r12699 <- %r10969(pc), $4
	load.32     %r12700 <- 4[%r10968]
	phisrc.64   %phi1808(pc) <- %r12699
	phisrc.32   %phi1976(c) <- %r12700
	br          .L2844

.L2844:
	load.32     %r12703 <- 8[%r10979(ra)]
	seteq.32    %r12704 <- %r12703, $5
	br          %r12704, .L2846, .L2610

.L2846:
	load.64     %r12706 <- 0[%r10979(ra)]
	phi.32      %r12708 <- %phi1975(c), %phi1976(c)
	add.32      %r12709 <- %r12708, $-1
	muls.32     %r12710 <- %r12709, $50
	phi.32      %r12711(n) <- %phi1973(n), %phi1974(n)
	add.32      %r12712 <- %r12710, %r12711(n)
	load.32     %r12715 <- 56[%r12706]
	setgt.32    %r12716 <- %r12712, %r12715
	phisrc.32   %phi1971(n) <- %r12711(n)
	phisrc.32   %phi1978(last) <- %r12712
	br          %r12716, .L2847, .L2852

.L2847:
	call        luaH_resizearray, %arg1, %r12706, %r12712
	phisrc.32   %phi1979(last) <- %r12712
	br          .L2852

.L2852:
	phi.32      %r12720(n) <- %phi1971(n), %phi1972(n)
	setgt.32    %r12721 <- %r12720(n), $0
	br          %r12721, .L2849, .L2610

.L2849:
	scast.64    %r12724 <- (32) %r12720(n)
	muls.64     %r12725 <- %r12724, $16
	add.64      %r12726 <- %r10979(ra), %r12725
	phi.32      %r12730 <- %phi1978(last), %phi1979(last), %phi1980(last)
	add.32      %r12731 <- %r12730, $-1
	call.64     %r12732 <- luaH_setnum, %arg1, %r12706, %r12730
	load.64     %r12734 <- 0[%r12726]
	store.64    %r12734 -> 0[%r12732]
	load.32     %r12737 <- 8[%r12726]
	store.32    %r12737 -> 8[%r12732]
	load.32     %r12741 <- 8[%r12726]
	setge.32    %r12742 <- %r12741, $4
	phisrc.32   %phi1980(last) <- %r12731
	br          %r12742, .L2856, .L2850

.L2856:
	load.64     %r12744 <- 0[%r12726]
	load.8      %r12745 <- 9[%r12744]
	cast.32     %r12746 <- (8) %r12745
	and.32      %r12747 <- %r12746, $3
	br          %r12747, .L2855, .L2850

.L2855:
	ptrcast.64  %r12749 <- (64) %r12706
	load.8      %r12750 <- 9[%r12749]
	cast.32     %r12751 <- (8) %r12750
	and.32      %r12752 <- %r12751, $4
	br          %r12752, .L2853, .L2850

.L2853:
	call        luaC_barrierback, %arg1, %r12706
	br          .L2850

.L2850:
	add.32      %r12756 <- %r12720(n), $-1
	phisrc.32   %phi1972(n) <- %r12756
	br          .L2852

.L2650:
	call        luaF_close, %arg1, %r10979(ra)
	br          .L2610

.L2651:
	load.64     %r12760 <- 32[%r10960]
	load.64     %r12761 <- 32[%r12760]
	scast.64    %r12767 <- (32) %r11073
	muls.64     %r12768 <- %r12767, $8
	add.64      %r12769 <- %r12761, %r12768
	load.64     %r12770 <- 0[%r12769]
	load.8      %r12772 <- 112[%r12770]
	cast.32     %r12773 <- (8) %r12772
	load.64     %r12777 <- 24[%r10960]
	call.64     %r12778 <- luaF_newLclosure, %arg1, %r12773, %r12777
	store.64    %r12770 -> 32[%r12778]
	phisrc.32   %phi1986(j) <- $0
	br          .L2860

.L2860:
	phi.32      %r12781(j) <- %phi1986(j), %phi1987(j)
	setlt.32    %r12783 <- %r12781(j), %r12773
	phi.64      %r12784(pc) <- %phi1748(pc), %phi1749(pc)
	br          %r12783, .L2857, .L2859

.L2857:
	load.32     %r12785 <- 0[%r12784(pc)]
	and.32      %r12788 <- %r12785, $63
	seteq.32    %r12791 <- %r12788, $4
	add.64      %r12806 <- %r12778, $40
	lsr.32      %r12797 <- %r12785, $23
	scast.64    %r12808 <- (32) %r12781(j)
	and.32      %r12798 <- %r12797, $511
	muls.64     %r12809 <- %r12808, $8
	add.64      %r12810 <- %r12806, %r12809
	br          %r12791, .L2861, .L2862

.L2861:
	scast.64    %r12800 <- (32) %r12798
	muls.64     %r12801 <- %r12800, $8
	add.64      %r12802 <- %r11054, %r12801
	load.64     %r12803 <- 0[%r12802]
	store.64    %r12803 -> 0[%r12810]
	br          .L2858

.L2862:
	scast.64    %r12819 <- (32) %r12798
	muls.64     %r12820 <- %r12819, $16
	add.64      %r12821 <- %r10971(base), %r12820
	call.64     %r12822 <- luaF_findupval, %arg1, %r12821
	store.64    %r12822 -> 0[%r12810]
	br          .L2858

.L2858:
	add.32      %r12831 <- %r12781(j), $1
	add.64      %r12833 <- %r12784(pc), $4
	phisrc.64   %phi1749(pc) <- %r12833
	phisrc.64   %phi1809(pc) <- %r12833
	phisrc.32   %phi1987(j) <- %r12831
	br          .L2860

.L2859:
	ptrcast.64  %r12836 <- (64) %r12778
	store.64    %r12836 -> 0[%r10979(ra)]
	store.32    $6 -> 8[%r10979(ra)]
	store.64    %r12784(pc) -> 48[%arg1]
	load.64     %r12842 <- 32[%arg1]
	load.64     %r12843 <- 120[%r12842]
	load.64     %r12846 <- 112[%r12842]
	setae.32    %r12847 <- %r12843, %r12846
	br          %r12847, .L2864, .L2865

.L2864:
	call        luaC_step, %arg1
	br          .L2865

.L2865:
	load.64     %r12850 <- 24[%arg1]
	phisrc.64   %phi1876(base) <- %r12850
	br          .L2610

.L2652:
	add.32      %r12856 <- %r10989, $-1
	load.64     %r12858 <- 40[%arg1]
	load.64     %r12860 <- 0[%r12858]
	load.64     %r12862 <- 8[%r12858]
	sub.64      %r12863 <- %r12860, %r12862
	divs.64     %r12864 <- %r12863, $16
	scast.32    %r12865 <- (64) %r12864
	load.64     %r12867 <- 32[%r10960]
	load.8      %r12868 <- 113[%r12867]
	cast.32     %r12869 <- (8) %r12868
	sub.32      %r12870 <- %r12865, %r12869
	add.32      %r12871 <- %r12870, $-1
	seteq.32    %r12873 <- %r12856, $0xffffffff
	phisrc.32   %phi1988(b) <- %r12856
	phisrc.64   %phi1997 <- %r12860
	phisrc.64   %phi2008 <- %r12860
	phisrc.64   %phi2015 <- %r12860
	br          %r12873, .L2866, .L2867

.L2866:
	store.64    %r10969(pc) -> 48[%arg1]
	load.64     %r12877 <- 56[%arg1]
	ptrcast.64  %r12878 <- (64) %r12877
	load.64     %r12880 <- 16[%arg1]
	ptrcast.64  %r12881 <- (64) %r12880
	sub.64      %r12882 <- %r12878, %r12881
	muls.32     %r12884 <- %r12871, $16
	scast.64    %r12885 <- (32) %r12884
	setle.32    %r12886 <- %r12882, %r12885
	br          %r12886, .L2868, .L2870

.L2868:
	call        luaD_growstack, %arg1, %r12871
	br          .L2870

.L2870:
	load.64     %r12890 <- 24[%arg1]
	scast.64    %r12897 <- (32) %r10975
	muls.64     %r12898 <- %r12897, $16
	add.64      %r12899 <- %r12890, %r12898
	scast.64    %r12903 <- (32) %r12871
	muls.64     %r12904 <- %r12903, $16
	add.64      %r12905 <- %r12899, %r12904
	store.64    %r12905 -> 16[%arg1]
	phisrc.64   %phi1877(base) <- %r12890
	phisrc.64   %phi1879(ra) <- %r12899
	phisrc.64   %phi1882(ra) <- %r12899
	phisrc.32   %phi1989(b) <- %r12871
	br          .L2867

.L2867:
	phisrc.32   %phi1995(j) <- $0
	br          .L2874

.L2874:
	phi.32      %r12907(j) <- %phi1995(j), %phi1996(j)
	phi.32      %r12908 <- %phi1988(b), %phi1989(b)
	setlt.32    %r12909 <- %r12907(j), %r12908
	br          %r12909, .L2871, .L2610

.L2871:
	setlt.32    %r12912 <- %r12907(j), %r12871
	scast.64    %r12920 <- (32) %r12907(j)
	muls.64     %r12921 <- %r12920, $16
	br          %r12912, .L2875, .L2876

.L2875:
	load.64     %r12914 <- 0[%r12858]
	scast.64    %r12916 <- (32) %r12871
	muls.64     %r12917 <- %r12916, $16
	sub.64      %r12918 <- %r12914, %r12917
	add.64      %r12922 <- %r12918, %r12921
	phi.64      %r12923 <- %phi1881(ra), %phi1882(ra)
	add.64      %r12927 <- %r12923, %r12921
	load.64     %r12929 <- 0[%r12922]
	store.64    %r12929 -> 0[%r12927]
	load.32     %r12932 <- 8[%r12922]
	store.32    %r12932 -> 8[%r12927]
	phisrc.64   %phi1880(ra) <- %r12923
	br          .L2872

.L2876:
	phi.64      %r12935 <- %phi1878(ra), %phi1879(ra), %phi1880(ra)
	add.64      %r12939 <- %r12935, %r12921
	store.32    $0 -> 8[%r12939]
	br          .L2872

.L2872:
	add.32      %r12941 <- %r12907(j), $1
	phisrc.32   %phi1996(j) <- %r12941
	br          .L2874

.L2804:
	ret


index2adr:
.L2878:
	<entry-point>
	setgt.32    %r12943 <- %arg2, $0
	br          %r12943, .L2879, .L2880

.L2879:
	load.64     %r12945 <- 24[%arg1]
	add.32      %r12947 <- %arg2, $-1
	scast.64    %r12948 <- (32) %r12947
	muls.64     %r12949 <- %r12948, $16
	add.64      %r12950 <- %r12945, %r12949
	load.64     %r12954 <- 16[%arg1]
	setae.32    %r12955 <- %r12950, %r12954
	br          %r12955, .L2881, .L2882

.L2881:
	symaddr.64  %r12956 <- luaO_nilobject_
	ptrcast.64  %r12957 <- (64) %r12956
	phisrc.64   %phi2021(return) <- %r12957
	br          .L2883

.L2882:
	phisrc.64   %phi2022(return) <- %r12950
	br          .L2883

.L2880:
	setgt.32    %r12961 <- %arg2, $0xffffd8f0
	br          %r12961, .L2886, .L2887

.L2886:
	load.64     %r12964 <- 16[%arg1]
	scast.64    %r12966 <- (32) %arg2
	muls.64     %r12967 <- %r12966, $16
	add.64      %r12968 <- %r12964, %r12967
	phisrc.64   %phi2023(return) <- %r12968
	br          .L2883

.L2887:
	switch      %arg2, -10002 -> .L2892, -10001 -> .L2891, -10000 -> .L2890, default -> .L2893

.L2890:
	load.64     %r12971 <- 32[%arg1]
	add.64      %r12972 <- %r12971, $160
	phisrc.64   %phi2024(return) <- %r12972
	br          .L2883

.L2891:
	load.64     %r12974 <- 40[%arg1]
	load.64     %r12975 <- 8[%r12974]
	load.64     %r12976 <- 0[%r12975]
	load.64     %r12981 <- 24[%r12976]
	ptrcast.64  %r12982 <- (64) %r12981
	store.64    %r12982 -> 136[%arg1]
	store.32    $5 -> 144[%arg1]
	add.64      %r12986 <- %arg1, $136
	phisrc.64   %phi2025(return) <- %r12986
	br          .L2883

.L2892:
	add.64      %r12988 <- %arg1, $120
	phisrc.64   %phi2026(return) <- %r12988
	br          .L2883

.L2893:
	load.64     %r12990 <- 40[%arg1]
	load.64     %r12991 <- 8[%r12990]
	load.64     %r12992 <- 0[%r12991]
	sub.32      %r12995 <- $0xffffd8ee, %arg2
	add.64      %r12998 <- %r12992, $40
	add.32      %r13000 <- %r12995, $-1
	scast.64    %r13001 <- (32) %r13000
	muls.64     %r13002 <- %r13001, $16
	add.64      %r13003 <- %r12998, %r13002
	symaddr.64  %r13004 <- luaO_nilobject_
	ptrcast.64  %r13005 <- (64) %r13004
	ptrcast.64  %r13006 <- (64) %r13005
	load.8      %r13009 <- 11[%r12992]
	cast.32     %r13010 <- (8) %r13009
	setle.32    %r13011 <- %r12995, %r13010
	select.64   %r13012 <- %r13011, %r13003, %r13006
	phisrc.64   %phi2027(return) <- %r13012
	br          .L2883

.L2883:
	phi.64      %r12958 <- %phi2021(return), %phi2022(return), %phi2023(return), %phi2024(return), %phi2025(return), %phi2026(return), %phi2027(return)
	ret.64      %r12958


getcurrenv:
.L2894:
	<entry-point>
	load.64     %r13014 <- 40[%arg1]
	load.64     %r13016 <- 80[%arg1]
	seteq.32    %r13017 <- %r13014, %r13016
	br          %r13017, .L2895, .L2896

.L2895:
	load.64     %r13019 <- 120[%arg1]
	phisrc.64   %phi2033(return) <- %r13019
	br          .L2897

.L2896:
	load.64     %r13024 <- 8[%r13014]
	load.64     %r13025 <- 0[%r13024]
	load.64     %r13028 <- 24[%r13025]
	phisrc.64   %phi2034(return) <- %r13028
	br          .L2897

.L2897:
	phi.64      %r13021 <- %phi2033(return), %phi2034(return)
	ret.64      %r13021


lua_checkstack:
.L2899:
	<entry-point>
	setgt.32    %r13030 <- %arg2, $0x1f40
	phisrc.32   %phi2038(res) <- $1
	br          %r13030, .L2900, .L2902

.L2902:
	load.64     %r13032 <- 16[%arg1]
	load.64     %r13034 <- 24[%arg1]
	sub.64      %r13035 <- %r13032, %r13034
	divs.64     %r13036 <- %r13035, $16
	scast.64    %r13038 <- (32) %arg2
	add.64      %r13039 <- %r13036, %r13038
	setgt.32    %r13040 <- %r13039, $0x1f40
	br          %r13040, .L2900, .L2901

.L2900:
	phisrc.32   %phi2037(res) <- $0
	br          .L2903

.L2901:
	setgt.32    %r13042 <- %arg2, $0
	br          %r13042, .L2904, .L2903

.L2904:
	load.64     %r13044 <- 56[%arg1]
	ptrcast.64  %r13045 <- (64) %r13044
	ptrcast.64  %r13048 <- (64) %r13032
	sub.64      %r13049 <- %r13045, %r13048
	muls.32     %r13051 <- %arg2, $16
	scast.64    %r13052 <- (32) %r13051
	setle.32    %r13053 <- %r13049, %r13052
	br          %r13053, .L2906, .L2908

.L2906:
	call        luaD_growstack, %arg1, %arg2
	br          .L2908

.L2908:
	load.64     %r13057 <- 40[%arg1]
	load.64     %r13058 <- 16[%r13057]
	load.64     %r13060 <- 16[%arg1]
	muls.64     %r13063 <- %r13038, $16
	add.64      %r13064 <- %r13060, %r13063
	setb.32     %r13065 <- %r13058, %r13064
	br          %r13065, .L2909, .L2903

.L2909:
	store.64    %r13064 -> 16[%r13057]
	br          .L2903

.L2903:
	phi.32      %r13074 <- %phi2037(res), %phi2038(res)
	ret.32      %r13074


lua_atpanic:
.L2912:
	<entry-point>
	load.64     %r13077 <- 32[%arg1]
	load.64     %r13078 <- 152[%r13077]
	store.64    %arg2 -> 152[%r13077]
	ret.64      %r13078


lua_gettop:
.L2914:
	<entry-point>
	load.64     %r13085 <- 16[%arg1]
	load.64     %r13087 <- 24[%arg1]
	sub.64      %r13088 <- %r13085, %r13087
	divs.64     %r13089 <- %r13088, $16
	scast.32    %r13090 <- (64) %r13089
	ret.32      %r13090


lua_settop:
.L2916:
	<entry-point>
	setge.32    %r13093 <- %arg2, $0
	br          %r13093, .L2922, .L2918

.L2922:
	load.64     %r13096 <- 16[%arg1]
	load.64     %r13098 <- 24[%arg1]
	scast.64    %r13100 <- (32) %arg2
	muls.64     %r13101 <- %r13100, $16
	add.64      %r13102 <- %r13098, %r13101
	setb.32     %r13103 <- %r13096, %r13102
	br          %r13103, .L2919, .L2921

.L2919:
	add.64      %r13106 <- %r13096, $16
	store.64    %r13106 -> 16[%arg1]
	store.32    $0 -> 8[%r13096]
	br          .L2922

.L2921:
	store.64    %r13102 -> 16[%arg1]
	br          .L2923

.L2918:
	add.32      %r13116 <- %arg2, $1
	scast.64    %r13117 <- (32) %r13116
	muls.64     %r13118 <- %r13117, $16
	load.64     %r13120 <- 16[%arg1]
	cast.64     %r13121 <- (64) %r13120
	add.64      %r13122 <- %r13121, %r13118
	ptrcast.64  %r13123 <- (64) %r13122
	store.64    %r13123 -> 16[%arg1]
	br          .L2923

.L2923:
	ret


lua_remove:
.L2924:
	<entry-point>
	call.64     %r13126(p) <- index2adr, %arg1, %arg2
	phisrc.64   %phi2047(p) <- %r13126(p)
	br          .L2928

.L2928:
	phi.64      %r13128 <- %phi2047(p), %phi2048(p)
	add.64      %r13129(p) <- %r13128, $16
	load.64     %r13131 <- 16[%arg1]
	setb.32     %r13132 <- %r13129(p), %r13131
	phisrc.64   %phi2048(p) <- %r13129(p)
	br          %r13132, .L2925, .L2927

.L2925:
	load.64     %r13137 <- 16[%r13128]
	store.64    %r13137 -> 0[%r13128]
	load.32     %r13140 <- 24[%r13128]
	store.32    %r13140 -> 8[%r13128]
	br          .L2928

.L2927:
	add.64      %r13145 <- %r13131, $-16
	store.64    %r13145 -> 16[%arg1]
	ret


lua_insert:
.L2930:
	<entry-point>
	call.64     %r13148 <- index2adr, %arg1, %arg2
	load.64     %r13151(q) <- 16[%arg1]
	phisrc.64   %phi2052(q) <- %r13151(q)
	phisrc.64   %phi2054(q) <- %r13151(q)
	phisrc.64   %phi2055(q) <- %r13151(q)
	phisrc.64   %phi2056(q) <- %r13151(q)
	br          .L2934

.L2934:
	phi.64      %r13152(q) <- %phi2052(q), %phi2053(q)
	seta.32     %r13154 <- %r13152(q), %r13148
	br          %r13154, .L2931, .L2933

.L2931:
	load.64     %r13159 <- -16[%r13152(q)]
	store.64    %r13159 -> 0[%r13152(q)]
	load.32     %r13162 <- -8[%r13152(q)]
	store.32    %r13162 -> 8[%r13152(q)]
	add.64      %r13166 <- %r13152(q), $-16
	phisrc.64   %phi2053(q) <- %r13166
	br          .L2934

.L2933:
	load.64     %r13168 <- 16[%arg1]
	load.64     %r13171 <- 0[%r13168]
	store.64    %r13171 -> 0[%r13148]
	load.32     %r13174 <- 8[%r13168]
	store.32    %r13174 -> 8[%r13148]
	ret


lua_replace:
.L2936:
	<entry-point>
	seteq.32    %r13178 <- %arg2, $0xffffd8ef
	br          %r13178, .L2939, .L2938

.L2939:
	load.64     %r13180 <- 40[%arg1]
	load.64     %r13182 <- 80[%arg1]
	seteq.32    %r13183 <- %r13180, %r13182
	br          %r13183, .L2937, .L2938

.L2937:
	symaddr.64  %r13185 <- <anon symbol:0x62d001400418>
	call        luaG_runerror, %arg1, %r13185
	br          .L2938

.L2938:
	call.64     %r13189 <- index2adr, %arg1, %arg2
	br          %r13178, .L2940, .L2941

.L2940:
	load.64     %r13194 <- 40[%arg1]
	load.64     %r13195 <- 8[%r13194]
	load.64     %r13196 <- 0[%r13195]
	load.64     %r13200 <- 16[%arg1]
	load.64     %r13202 <- -16[%r13200]
	store.64    %r13202 -> 24[%r13196]
	load.64     %r13206 <- 16[%arg1]
	load.32     %r13208 <- -8[%r13206]
	setge.32    %r13209 <- %r13208, $4
	phisrc.64   %phi2057 <- %r13206
	phisrc.64   %phi2065 <- %r13206
	phisrc.64   %phi2066 <- %r13206
	phisrc.64   %phi2070 <- %r13206
	phisrc.64   %phi2071 <- %r13206
	br          %r13209, .L2945, .L2946

.L2945:
	load.64     %r13213 <- -16[%r13206]
	load.8      %r13214 <- 9[%r13213]
	cast.32     %r13215 <- (8) %r13214
	and.32      %r13216 <- %r13215, $3
	phisrc.64   %phi2058 <- %r13206
	phisrc.64   %phi2059 <- %r13206
	br          %r13216, .L2944, .L2946

.L2944:
	ptrcast.64  %r13218 <- (64) %r13196
	load.8      %r13219 <- 9[%r13218]
	cast.32     %r13220 <- (8) %r13219
	and.32      %r13221 <- %r13220, $4
	br          %r13221, .L2942, .L2946

.L2942:
	call        luaC_barrierf, %arg1, %r13218, %r13213
	br          .L2946

.L2941:
	load.64     %r13230 <- 16[%arg1]
	load.64     %r13234 <- -16[%r13230]
	store.64    %r13234 -> 0[%r13189]
	load.32     %r13237 <- -8[%r13230]
	store.32    %r13237 -> 8[%r13189]
	setlt.32    %r13241 <- %arg2, $0xffffd8ee
	br          %r13241, .L2947, .L2946

.L2947:
	load.64     %r13243 <- 16[%arg1]
	load.32     %r13245 <- -8[%r13243]
	setge.32    %r13246 <- %r13245, $4
	br          %r13246, .L2952, .L2946

.L2952:
	load.64     %r13250 <- -16[%r13243]
	load.8      %r13251 <- 9[%r13250]
	cast.32     %r13252 <- (8) %r13251
	and.32      %r13253 <- %r13252, $3
	br          %r13253, .L2951, .L2946

.L2951:
	load.64     %r13255 <- 40[%arg1]
	load.64     %r13256 <- 8[%r13255]
	load.64     %r13257 <- 0[%r13256]
	ptrcast.64  %r13259 <- (64) %r13257
	load.8      %r13260 <- 9[%r13259]
	cast.32     %r13261 <- (8) %r13260
	and.32      %r13262 <- %r13261, $4
	br          %r13262, .L2949, .L2946

.L2949:
	ptrcast.64  %r13269 <- (64) %r13257
	call        luaC_barrierf, %arg1, %r13269, %r13250
	br          .L2946

.L2946:
	load.64     %r13275 <- 16[%arg1]
	add.64      %r13276 <- %r13275, $-16
	store.64    %r13276 -> 16[%arg1]
	ret


lua_pushvalue:
.L2954:
	<entry-point>
	call.64     %r13279 <- index2adr, %arg1, %arg2
	load.64     %r13281 <- 16[%arg1]
	load.64     %r13283 <- 0[%r13279]
	store.64    %r13283 -> 0[%r13281]
	load.32     %r13286 <- 8[%r13279]
	store.32    %r13286 -> 8[%r13281]
	load.64     %r13291 <- 16[%arg1]
	add.64      %r13292 <- %r13291, $16
	store.64    %r13292 -> 16[%arg1]
	ret


lua_type:
.L2956:
	<entry-point>
	call.64     %r13295 <- index2adr, %arg1, %arg2
	symaddr.64  %r13297 <- luaO_nilobject_
	seteq.32    %r13298 <- %r13295, %r13297
	br          %r13298, .L2958, .L2959

.L2958:
	phisrc.32   %phi2073 <- $0xffffffff
	br          .L2960

.L2959:
	load.32     %r13300 <- 8[%r13295]
	phisrc.32   %phi2074 <- %r13300
	br          .L2960

.L2960:
	phi.32      %r13301 <- %phi2073, %phi2074
	ret.32      %r13301


lua_typename:
.L2961:
	<entry-point>
	seteq.32    %r13305 <- %arg2, $0xffffffff
	br          %r13305, .L2963, .L2964

.L2963:
	symaddr.64  %r13306 <- <anon symbol:0x62d001404f50>
	ptrcast.64  %r13307 <- (64) %r13306
	phisrc.64   %phi2076 <- %r13307
	br          .L2965

.L2964:
	symaddr.64  %r13308 <- luaT_typenames
	scast.64    %r13310 <- (32) %arg2
	muls.64     %r13311 <- %r13310, $8
	add.64      %r13312 <- %r13308, %r13311
	load.64     %r13313 <- 0[%r13312]
	ptrcast.64  %r13314 <- (64) %r13313
	phisrc.64   %phi2077 <- %r13314
	br          .L2965

.L2965:
	phi.64      %r13315 <- %phi2076, %phi2077
	ret.64      %r13315


lua_iscfunction:
.L2966:
	<entry-point>
	call.64     %r13319 <- index2adr, %arg1, %arg2
	load.32     %r13321 <- 8[%r13319]
	seteq.32    %r13322 <- %r13321, $6
	br          %r13322, .L2968, .L2969

.L2968:
	load.64     %r13324 <- 0[%r13319]
	load.8      %r13325 <- 10[%r13324]
	phisrc.32   %phi2079 <- %r13325
	br          .L2970

.L2969:
	phisrc.32   %phi2080 <- $0
	br          .L2970

.L2970:
	phi.32      %r13326 <- %phi2079, %phi2080
	ret.32      %r13326


lua_isnumber:
.L2971:
	<entry-point>
	call.64     %r13330 <- index2adr, %arg1, %arg2
	load.32     %r13332 <- 8[%r13330]
	seteq.32    %r13334 <- %r13332, $3
	br          %r13334, .L2973, .L2974

.L2973:
	phisrc.32   %phi2082 <- $1
	br          .L2975

.L2974:
	symaddr.64  %r13336 <- n
	call.64     %r13337 <- luaV_tonumber, %r13330, %r13336
	setne.32    %r13338 <- %r13337, $0
	phisrc.32   %phi2083 <- %r13338
	br          .L2975

.L2975:
	phi.32      %r13339 <- %phi2082, %phi2083
	ret.32      %r13339


lua_isstring:
.L2976:
	<entry-point>
	call.32     %r13343 <- lua_type, %arg1, %arg2
	seteq.32    %r13345 <- %r13343, $4
	seteq.32    %r13347 <- %r13343, $3
	or-bool.32  %r13348 <- %r13345, %r13347
	ret.32      %r13348


lua_rawequal:
.L2978:
	<entry-point>
	call.64     %r13352 <- index2adr, %arg1, %arg2
	call.64     %r13355 <- index2adr, %arg1, %arg3
	symaddr.64  %r13357 <- luaO_nilobject_
	seteq.32    %r13358 <- %r13352, %r13357
	seteq.32    %r13361 <- %r13355, %r13357
	or-bool.32  %r13362 <- %r13358, %r13361
	br          %r13362, .L2980, .L2981

.L2980:
	phisrc.32   %phi2087 <- $0
	br          .L2982

.L2981:
	call.32     %r13365 <- luaO_rawequalObj, %r13352, %r13355
	phisrc.32   %phi2088 <- %r13365
	br          .L2982

.L2982:
	phi.32      %r13366 <- %phi2087, %phi2088
	ret.32      %r13366


lua_lessthan:
.L2983:
	<entry-point>
	call.64     %r13370 <- index2adr, %arg1, %arg2
	call.64     %r13373 <- index2adr, %arg1, %arg3
	symaddr.64  %r13375 <- luaO_nilobject_
	seteq.32    %r13376 <- %r13370, %r13375
	seteq.32    %r13379 <- %r13373, %r13375
	or-bool.32  %r13380 <- %r13376, %r13379
	br          %r13380, .L2984, .L2985

.L2984:
	phisrc.32   %phi2090 <- $0
	br          .L2986

.L2985:
	call.32     %r13384 <- luaV_lessthan, %arg1, %r13370, %r13373
	phisrc.32   %phi2091 <- %r13384
	br          .L2986

.L2986:
	phi.32      %r13385 <- %phi2090, %phi2091
	ret.32      %r13385


lua_tonumber:
.L2988:
	<entry-point>
	call.64     %r13390 <- index2adr, %arg1, %arg2
	load.32     %r13392 <- 8[%r13390]
	seteq.32    %r13394 <- %r13392, $3
	phisrc.64   %phi2095(o) <- %r13390
	br          %r13394, .L2989, .L2991

.L2991:
	symaddr.64  %r13396 <- n
	call.64     %r13397 <- luaV_tonumber, %r13390, %r13396
	phisrc.64   %phi2096(o) <- %r13397
	br          %r13397, .L2989, .L2990

.L2989:
	phi.64      %r13399 <- %phi2095(o), %phi2096(o)
	load.64     %r13400 <- 0[%r13399]
	phisrc.64   %phi2093(return) <- %r13400
	br          .L2992

.L2990:
	set.64      %r13403 <- 0.000000
	phisrc.64   %phi2094(return) <- %r13403
	br          .L2992

.L2992:
	phi.64      %r13402 <- %phi2093(return), %phi2094(return)
	ret.64      %r13402


lua_tointeger:
.L2994:
	<entry-point>
	call.64     %r13406 <- index2adr, %arg1, %arg2
	load.32     %r13408 <- 8[%r13406]
	seteq.32    %r13410 <- %r13408, $3
	phisrc.64   %phi2100(o) <- %r13406
	br          %r13410, .L2995, .L2997

.L2997:
	symaddr.64  %r13412 <- n
	call.64     %r13413 <- luaV_tonumber, %r13406, %r13412
	phisrc.64   %phi2101(o) <- %r13413
	br          %r13413, .L2995, .L2996

.L2995:
	phi.64      %r13415 <- %phi2100(o), %phi2101(o)
	load.64     %r13416 <- 0[%r13415]
	phisrc.64   %phi2098(return) <- %r13416
	br          .L2998

.L2996:
	phisrc.64   %phi2099(return) <- $0
	br          .L2998

.L2998:
	phi.64      %r13421 <- %phi2098(return), %phi2099(return)
	ret.64      %r13421


lua_toboolean:
.L3000:
	<entry-point>
	call.64     %r13424 <- index2adr, %arg1, %arg2
	load.32     %r13426 <- 8[%r13424]
	br          %r13426, .L3003, .L3002

.L3002:
	phisrc.32   %phi2103 <- $1
	br          .L3004

.L3003:
	seteq.32    %r13432 <- %r13426, $1
	br          %r13432, .L3005, .L3006

.L3005:
	load.32     %r13434 <- 0[%r13424]
	seteq.32    %r13436 <- %r13434, $0
	phisrc.32   %phi2104 <- %r13436
	br          .L3007

.L3006:
	phisrc.32   %phi2105 <- $0
	br          .L3007

.L3007:
	phi.32      %r13437 <- %phi2104, %phi2105
	phisrc.32   %phi2106 <- %r13437
	br          .L3004

.L3004:
	phi.32      %r13438 <- %phi2103, %phi2106
	seteq.32    %r13439 <- %r13438, $0
	ret.32      %r13439


lua_tolstring:
.L3008:
	<entry-point>
	call.64     %r13443 <- index2adr, %arg1, %arg2
	load.32     %r13445 <- 8[%r13443]
	seteq.32    %r13446 <- %r13445, $4
	phisrc.64   %phi2111(o) <- %r13443
	phisrc.64   %phi2114(o) <- %r13443
	br          %r13446, .L3010, .L3009

.L3009:
	call.32     %r13449 <- luaV_tostring, %arg1, %r13443
	br          %r13449, .L3012, .L3011

.L3011:
	br          %arg3, .L3013, .L3014

.L3013:
	store.64    $0 -> 0[%arg3]
	br          .L3014

.L3014:
	phisrc.64   %phi2109(return) <- $0
	br          .L3015

.L3012:
	load.64     %r13455 <- 32[%arg1]
	load.64     %r13456 <- 120[%r13455]
	load.64     %r13459 <- 112[%r13455]
	setae.32    %r13460 <- %r13456, %r13459
	br          %r13460, .L3016, .L3017

.L3016:
	call        luaC_step, %arg1
	br          .L3017

.L3017:
	call.64     %r13464 <- index2adr, %arg1, %arg2
	phisrc.64   %phi2112(o) <- %r13464
	phisrc.64   %phi2115(o) <- %r13464
	br          .L3010

.L3010:
	br          %arg3, .L3018, .L3019

.L3018:
	phi.64      %r13467 <- %phi2114(o), %phi2115(o)
	load.64     %r13468 <- 0[%r13467]
	load.64     %r13469 <- 16[%r13468]
	store.64    %r13469 -> 0[%arg3]
	phisrc.64   %phi2113(o) <- %r13467
	br          .L3019

.L3019:
	phi.64      %r13471 <- %phi2111(o), %phi2112(o), %phi2113(o)
	load.64     %r13472 <- 0[%r13471]
	add.64      %r13474 <- %r13472, $24
	ptrcast.64  %r13475 <- (64) %r13474
	phisrc.64   %phi2110(return) <- %r13475
	br          .L3015

.L3015:
	phi.64      %r13453 <- %phi2109(return), %phi2110(return)
	ret.64      %r13453


lua_objlen:
.L3020:
	<entry-point>
	call.64     %r13478 <- index2adr, %arg1, %arg2
	load.32     %r13480 <- 8[%r13478]
	switch      %r13480, 3 -> .L3025, 4 -> .L3022, 5 -> .L3024, 7 -> .L3023, default -> .L3026

.L3022:
	load.64     %r13482 <- 0[%r13478]
	load.64     %r13483 <- 16[%r13482]
	phisrc.64   %phi2117(return) <- %r13483
	br          .L3027

.L3023:
	load.64     %r13486 <- 0[%r13478]
	load.64     %r13487 <- 32[%r13486]
	phisrc.64   %phi2118(return) <- %r13487
	br          .L3027

.L3024:
	load.64     %r13489 <- 0[%r13478]
	call.32     %r13491 <- luaH_getn, %r13489
	scast.64    %r13492 <- (32) %r13491
	phisrc.64   %phi2119(return) <- %r13492
	br          .L3027

.L3025:
	call.32     %r13495 <- luaV_tostring, %arg1, %r13478
	br          %r13495, .L3028, .L3029

.L3028:
	load.64     %r13497 <- 0[%r13478]
	load.64     %r13498 <- 16[%r13497]
	phisrc.64   %phi2120 <- %r13498
	br          .L3030

.L3029:
	phisrc.64   %phi2121 <- $0
	br          .L3030

.L3030:
	phi.64      %r13499 <- %phi2120, %phi2121
	phisrc.64   %phi2122(return) <- %r13499
	br          .L3027

.L3026:
	phisrc.64   %phi2123(return) <- $0
	br          .L3027

.L3027:
	phi.64      %r13484 <- %phi2117(return), %phi2118(return), %phi2119(return), %phi2122(return), %phi2123(return)
	ret.64      %r13484


lua_tocfunction:
.L3031:
	<entry-point>
	call.64     %r13503 <- index2adr, %arg1, %arg2
	load.32     %r13505 <- 8[%r13503]
	seteq.32    %r13506 <- %r13505, $6
	br          %r13506, .L3036, .L3033

.L3036:
	load.64     %r13508 <- 0[%r13503]
	load.8      %r13509 <- 10[%r13508]
	br          %r13509, .L3034, .L3033

.L3033:
	phisrc.64   %phi2124 <- $0
	br          .L3035

.L3034:
	load.64     %r13512 <- 32[%r13508]
	phisrc.64   %phi2125 <- %r13512
	br          .L3035

.L3035:
	phi.64      %r13513 <- %phi2124, %phi2125
	ret.64      %r13513


lua_touserdata:
.L3037:
	<entry-point>
	call.64     %r13517 <- index2adr, %arg1, %arg2
	load.32     %r13519 <- 8[%r13517]
	switch      %r13519, 2 -> .L3040, 7 -> .L3039, default -> .L3041

.L3039:
	load.64     %r13521 <- 0[%r13517]
	add.64      %r13523 <- %r13521, $40
	cast.64     %r13524 <- (64) %r13523
	phisrc.64   %phi2128(return) <- %r13524
	br          .L3042

.L3040:
	load.64     %r13527 <- 0[%r13517]
	phisrc.64   %phi2129(return) <- %r13527
	br          .L3042

.L3041:
	phisrc.64   %phi2130(return) <- $0
	br          .L3042

.L3042:
	phi.64      %r13525 <- %phi2128(return), %phi2129(return), %phi2130(return)
	ret.64      %r13525


lua_pushnil:
.L3043:
	<entry-point>
	load.64     %r13529 <- 16[%arg1]
	store.32    $0 -> 8[%r13529]
	load.64     %r13532 <- 16[%arg1]
	add.64      %r13533 <- %r13532, $16
	store.64    %r13533 -> 16[%arg1]
	ret


lua_pushnumber:
.L3045:
	<entry-point>
	load.64     %r13535 <- 16[%arg1]
	store.64    %arg2 -> 0[%r13535]
	store.32    $3 -> 8[%r13535]
	load.64     %r13541 <- 16[%arg1]
	add.64      %r13542 <- %r13541, $16
	store.64    %r13542 -> 16[%arg1]
	ret


lua_pushinteger:
.L3047:
	<entry-point>
	load.64     %r13544 <- 16[%arg1]
	fpcast.64   %r13546 <- (64) %arg2
	store.64    %r13546 -> 0[%r13544]
	store.32    $3 -> 8[%r13544]
	load.64     %r13551 <- 16[%arg1]
	add.64      %r13552 <- %r13551, $16
	store.64    %r13552 -> 16[%arg1]
	ret


lua_pushlstring:
.L3049:
	<entry-point>
	load.64     %r13554 <- 32[%arg1]
	load.64     %r13555 <- 120[%r13554]
	load.64     %r13558 <- 112[%r13554]
	setae.32    %r13559 <- %r13555, %r13558
	br          %r13559, .L3050, .L3051

.L3050:
	call        luaC_step, %arg1
	br          .L3051

.L3051:
	load.64     %r13562 <- 16[%arg1]
	call.64     %r13566 <- luaS_newlstr, %arg1, %arg2, %arg3
	ptrcast.64  %r13567 <- (64) %r13566
	store.64    %r13567 -> 0[%r13562]
	store.32    $4 -> 8[%r13562]
	load.64     %r13572 <- 16[%arg1]
	add.64      %r13573 <- %r13572, $16
	store.64    %r13573 -> 16[%arg1]
	ret


lua_pushstring:
.L3053:
	<entry-point>
	br          %arg2, .L3055, .L3054

.L3054:
	call        lua_pushnil, %arg1
	br          .L3056

.L3055:
	call.64     %r13580 <- strlen, %arg2
	call        lua_pushlstring, %arg1, %arg2, %r13580
	br          .L3056

.L3056:
	ret


lua_pushvfstring:
.L3057:
	<entry-point>
	load.64     %r13582 <- 32[%arg1]
	load.64     %r13583 <- 120[%r13582]
	load.64     %r13586 <- 112[%r13582]
	setae.32    %r13587 <- %r13583, %r13586
	br          %r13587, .L3058, .L3059

.L3058:
	call        luaC_step, %arg1
	br          .L3059

.L3059:
	call.64     %r13592 <- luaO_pushvfstring, %arg1, %arg2, %arg3
	ret.64      %r13592


lua_pushfstring:
.L3061:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	load.64     %r13596 <- 32[%arg1]
	load.64     %r13597 <- 120[%r13596]
	load.64     %r13600 <- 112[%r13596]
	setae.32    %r13601 <- %r13597, %r13600
	phisrc.64   %phi2133(fmt) <- %arg2
	phisrc.64   %phi2134 <- %arg2
	phisrc.64   %phi2135 <- %arg2
	br          %r13601, .L3062, .L3063

.L3062:
	call        luaC_step, %arg1
	br          .L3063

.L3063:
	symaddr.64  %r13603 <- fmt
	cast.64     %r13604 <- (64) %r13603
	load.64     %r13606 <- 0[fmt]
	call.64     %r13608 <- luaO_pushvfstring, %arg1, %r13606, %r13604
	ret.64      %r13608


lua_pushcclosure:
.L3065:
	<entry-point>
	load.64     %r13612 <- 32[%arg1]
	load.64     %r13613 <- 120[%r13612]
	load.64     %r13616 <- 112[%r13612]
	setae.32    %r13617 <- %r13613, %r13616
	br          %r13617, .L3066, .L3067

.L3066:
	call        luaC_step, %arg1
	br          .L3067

.L3067:
	call.64     %r13623 <- getcurrenv, %arg1
	call.64     %r13624 <- luaF_newCclosure, %arg1, %arg3, %r13623
	store.64    %arg2 -> 32[%r13624]
	scast.64    %r13628 <- (32) %arg3
	muls.64     %r13629 <- %r13628, $16
	load.64     %r13631 <- 16[%arg1]
	cast.64     %r13632 <- (64) %r13631
	sub.64      %r13633 <- %r13632, %r13629
	ptrcast.64  %r13634 <- (64) %r13633
	store.64    %r13634 -> 16[%arg1]
	phisrc.32   %phi2137(n) <- %arg3
	phisrc.64   %phi2140 <- %r13634
	phisrc.64   %phi2141 <- %r13634
	phisrc.64   %phi2142 <- %r13634
	phisrc.64   %phi2143 <- %r13634
	br          .L3071

.L3071:
	phi.32      %r13635 <- %phi2137(n), %phi2138(n)
	add.32      %r13636(n) <- %r13635, $-1
	phisrc.32   %phi2138(n) <- %r13636(n)
	br          %r13635, .L3068, .L3070

.L3068:
	load.64     %r13638 <- 16[%arg1]
	scast.64    %r13640 <- (32) %r13636(n)
	muls.64     %r13641 <- %r13640, $16
	add.64      %r13642 <- %r13638, %r13641
	add.64      %r13645 <- %r13624, $40
	add.64      %r13649 <- %r13645, %r13641
	load.64     %r13651 <- 0[%r13642]
	store.64    %r13651 -> 0[%r13649]
	load.32     %r13654 <- 8[%r13642]
	store.32    %r13654 -> 8[%r13649]
	br          .L3071

.L3070:
	load.64     %r13658 <- 16[%arg1]
	ptrcast.64  %r13660 <- (64) %r13624
	store.64    %r13660 -> 0[%r13658]
	store.32    $6 -> 8[%r13658]
	load.64     %r13665 <- 16[%arg1]
	add.64      %r13666 <- %r13665, $16
	store.64    %r13666 -> 16[%arg1]
	ret


lua_pushboolean:
.L3073:
	<entry-point>
	load.64     %r13668 <- 16[%arg1]
	setne.32    %r13670 <- %arg2, $0
	store.32    %r13670 -> 0[%r13668]
	store.32    $1 -> 8[%r13668]
	load.64     %r13675 <- 16[%arg1]
	add.64      %r13676 <- %r13675, $16
	store.64    %r13676 -> 16[%arg1]
	ret


lua_pushthread:
.L3075:
	<entry-point>
	load.64     %r13678 <- 16[%arg1]
	ptrcast.64  %r13680 <- (64) %arg1
	store.64    %r13680 -> 0[%r13678]
	store.32    $8 -> 8[%r13678]
	load.64     %r13685 <- 16[%arg1]
	add.64      %r13686 <- %r13685, $16
	store.64    %r13686 -> 16[%arg1]
	load.64     %r13688 <- 32[%arg1]
	load.64     %r13689 <- 176[%r13688]
	seteq.32    %r13691 <- %r13689, %arg1
	ret.32      %r13691


lua_gettable:
.L3077:
	<entry-point>
	call.64     %r13695 <- index2adr, %arg1, %arg2
	load.64     %r13700 <- 16[%arg1]
	add.64      %r13701 <- %r13700, $-16
	call        luaV_gettable, %arg1, %r13695, %r13701, %r13701
	ret


lua_getfield:
.L3079:
	<entry-point>
	call.64     %r13707 <- index2adr, %arg1, %arg2
	call.64     %r13713 <- strlen, %arg3
	call.64     %r13714 <- luaS_newlstr, %arg1, %arg3, %r13713
	ptrcast.64  %r13715 <- (64) %r13714
	store.64    %r13715 -> 0[key]
	store.32    $4 -> 8[key]
	symaddr.64  %r13720 <- key
	load.64     %r13722 <- 16[%arg1]
	call        luaV_gettable, %arg1, %r13707, %r13720, %r13722
	load.64     %r13725 <- 16[%arg1]
	add.64      %r13726 <- %r13725, $16
	store.64    %r13726 -> 16[%arg1]
	ret


lua_rawget:
.L3081:
	<entry-point>
	call.64     %r13729 <- index2adr, %arg1, %arg2
	load.64     %r13732 <- 0[%r13729]
	load.64     %r13735 <- 16[%arg1]
	add.64      %r13736 <- %r13735, $-16
	call.64     %r13737 <- luaH_get, %r13732, %r13736
	load.64     %r13739 <- 16[%arg1]
	load.64     %r13742 <- 0[%r13737]
	store.64    %r13742 -> -16[%r13739]
	load.32     %r13745 <- 8[%r13737]
	store.32    %r13745 -> -8[%r13739]
	ret


lua_rawgeti:
.L3083:
	<entry-point>
	call.64     %r13750 <- index2adr, %arg1, %arg2
	load.64     %r13753 <- 0[%r13750]
	call.64     %r13756 <- luaH_getnum, %r13753, %arg3
	load.64     %r13758 <- 16[%arg1]
	load.64     %r13760 <- 0[%r13756]
	store.64    %r13760 -> 0[%r13758]
	load.32     %r13763 <- 8[%r13756]
	store.32    %r13763 -> 8[%r13758]
	load.64     %r13768 <- 16[%arg1]
	add.64      %r13769 <- %r13768, $16
	store.64    %r13769 -> 16[%arg1]
	ret


lua_createtable:
.L3085:
	<entry-point>
	load.64     %r13771 <- 32[%arg1]
	load.64     %r13772 <- 120[%r13771]
	load.64     %r13775 <- 112[%r13771]
	setae.32    %r13776 <- %r13772, %r13775
	br          %r13776, .L3086, .L3087

.L3086:
	call        luaC_step, %arg1
	br          .L3087

.L3087:
	load.64     %r13779 <- 16[%arg1]
	call.64     %r13783 <- luaH_new, %arg1, %arg2, %arg3
	ptrcast.64  %r13784 <- (64) %r13783
	store.64    %r13784 -> 0[%r13779]
	store.32    $5 -> 8[%r13779]
	load.64     %r13789 <- 16[%arg1]
	add.64      %r13790 <- %r13789, $16
	store.64    %r13790 -> 16[%arg1]
	ret


lua_getmetatable:
.L3089:
	<entry-point>
	call.64     %r13793 <- index2adr, %arg1, %arg2
	load.32     %r13795 <- 8[%r13793]
	switch      %r13795, 5 -> .L3091, 7 -> .L3092, default -> .L3093

.L3091:
	load.64     %r13797 <- 0[%r13793]
	load.64     %r13798(mt) <- 16[%r13797]
	phisrc.64   %phi2147(mt) <- %r13798(mt)
	br          .L3090

.L3092:
	load.64     %r13800 <- 0[%r13793]
	load.64     %r13801 <- 16[%r13800]
	phisrc.64   %phi2148(mt) <- %r13801
	br          .L3090

.L3093:
	load.64     %r13803 <- 32[%arg1]
	add.64      %r13804 <- %r13803, $224
	scast.64    %r13807 <- (32) %r13795
	muls.64     %r13808 <- %r13807, $8
	add.64      %r13809 <- %r13804, %r13808
	load.64     %r13810 <- 0[%r13809]
	phisrc.64   %phi2149(mt) <- %r13810
	br          .L3090

.L3090:
	phi.64      %r13811(mt) <- %phi2147(mt), %phi2148(mt), %phi2149(mt)
	setne.32    %r13823 <- %r13811(mt), $0
	br          %r13811(mt), .L3095, .L3097

.L3095:
	load.64     %r13814 <- 16[%arg1]
	ptrcast.64  %r13816 <- (64) %r13811(mt)
	store.64    %r13816 -> 0[%r13814]
	store.32    $5 -> 8[%r13814]
	load.64     %r13821 <- 16[%arg1]
	add.64      %r13822 <- %r13821, $16
	store.64    %r13822 -> 16[%arg1]
	br          .L3097

.L3097:
	ret.32      %r13823


lua_getfenv:
.L3098:
	<entry-point>
	call.64     %r13827 <- index2adr, %arg1, %arg2
	load.32     %r13830 <- 8[%r13827]
	switch      %r13830, 6 -> .L3100, 7 -> .L3101, 8 -> .L3102, default -> .L3103

.L3100:
	load.64     %r13832 <- 16[%arg1]
	load.64     %r13834 <- 0[%r13827]
	load.64     %r13835 <- 24[%r13834]
	ptrcast.64  %r13836 <- (64) %r13835
	store.64    %r13836 -> 0[%r13832]
	store.32    $5 -> 8[%r13832]
	br          .L3099

.L3101:
	load.64     %r13840 <- 16[%arg1]
	load.64     %r13842 <- 0[%r13827]
	load.64     %r13843 <- 24[%r13842]
	ptrcast.64  %r13844 <- (64) %r13843
	store.64    %r13844 -> 0[%r13840]
	store.32    $5 -> 8[%r13840]
	br          .L3099

.L3102:
	load.64     %r13848 <- 0[%r13827]
	load.64     %r13852 <- 16[%arg1]
	load.64     %r13854 <- 120[%r13848]
	store.64    %r13854 -> 0[%r13852]
	load.32     %r13857 <- 128[%r13848]
	store.32    %r13857 -> 8[%r13852]
	br          .L3099

.L3103:
	load.64     %r13861 <- 16[%arg1]
	store.32    $0 -> 8[%r13861]
	br          .L3099

.L3099:
	load.64     %r13864 <- 16[%arg1]
	add.64      %r13865 <- %r13864, $16
	store.64    %r13865 -> 16[%arg1]
	ret


lua_settable:
.L3105:
	<entry-point>
	call.64     %r13869 <- index2adr, %arg1, %arg2
	load.64     %r13874 <- 16[%arg1]
	add.64      %r13875 <- %r13874, $-32
	add.64      %r13878 <- %r13874, $-16
	call        luaV_settable, %arg1, %r13869, %r13875, %r13878
	load.64     %r13880 <- 16[%arg1]
	cast.64     %r13881 <- (64) %r13880
	add.64      %r13882 <- %r13881, $-32
	ptrcast.64  %r13883 <- (64) %r13882
	store.64    %r13883 -> 16[%arg1]
	ret


lua_setfield:
.L3107:
	<entry-point>
	call.64     %r13887 <- index2adr, %arg1, %arg2
	call.64     %r13893 <- strlen, %arg3
	call.64     %r13894 <- luaS_newlstr, %arg1, %arg3, %r13893
	ptrcast.64  %r13895 <- (64) %r13894
	store.64    %r13895 -> 0[key]
	store.32    $4 -> 8[key]
	symaddr.64  %r13900 <- key
	load.64     %r13902 <- 16[%arg1]
	add.64      %r13903 <- %r13902, $-16
	call        luaV_settable, %arg1, %r13887, %r13900, %r13903
	load.64     %r13905 <- 16[%arg1]
	add.64      %r13906 <- %r13905, $-16
	store.64    %r13906 -> 16[%arg1]
	ret


lua_rawset:
.L3109:
	<entry-point>
	call.64     %r13910 <- index2adr, %arg1, %arg2
	load.64     %r13913 <- 16[%arg1]
	load.64     %r13917 <- 0[%r13910]
	add.64      %r13921 <- %r13913, $-32
	call.64     %r13922 <- luaH_set, %arg1, %r13917, %r13921
	load.64     %r13924 <- -16[%r13913]
	store.64    %r13924 -> 0[%r13922]
	load.32     %r13927 <- -8[%r13913]
	store.32    %r13927 -> 8[%r13922]
	load.64     %r13931 <- 16[%arg1]
	load.32     %r13933 <- -8[%r13931]
	setge.32    %r13934 <- %r13933, $4
	phisrc.64   %phi2153 <- %r13931
	phisrc.64   %phi2158 <- %r13931
	phisrc.64   %phi2159 <- %r13931
	phisrc.64   %phi2160 <- %r13931
	phisrc.64   %phi2161 <- %r13931
	br          %r13934, .L3113, .L3111

.L3113:
	load.64     %r13938 <- -16[%r13931]
	load.8      %r13939 <- 9[%r13938]
	cast.32     %r13940 <- (8) %r13939
	and.32      %r13941 <- %r13940, $3
	phisrc.64   %phi2154 <- %r13931
	phisrc.64   %phi2155 <- %r13931
	br          %r13941, .L3112, .L3111

.L3112:
	load.64     %r13943 <- 0[%r13910]
	ptrcast.64  %r13945 <- (64) %r13943
	load.8      %r13946 <- 9[%r13945]
	cast.32     %r13947 <- (8) %r13946
	and.32      %r13948 <- %r13947, $4
	br          %r13948, .L3110, .L3111

.L3110:
	call        luaC_barrierback, %arg1, %r13943
	br          .L3111

.L3111:
	load.64     %r13954 <- 16[%arg1]
	cast.64     %r13955 <- (64) %r13954
	add.64      %r13956 <- %r13955, $-32
	ptrcast.64  %r13957 <- (64) %r13956
	store.64    %r13957 -> 16[%arg1]
	ret


lua_rawseti:
.L3115:
	<entry-point>
	call.64     %r13961 <- index2adr, %arg1, %arg2
	load.64     %r13964 <- 16[%arg1]
	load.64     %r13968 <- 0[%r13961]
	call.64     %r13971 <- luaH_setnum, %arg1, %r13968, %arg3
	load.64     %r13973 <- -16[%r13964]
	store.64    %r13973 -> 0[%r13971]
	load.32     %r13976 <- -8[%r13964]
	store.32    %r13976 -> 8[%r13971]
	load.64     %r13980 <- 16[%arg1]
	load.32     %r13982 <- -8[%r13980]
	setge.32    %r13983 <- %r13982, $4
	phisrc.64   %phi2162 <- %r13980
	phisrc.64   %phi2167 <- %r13980
	phisrc.64   %phi2168 <- %r13980
	phisrc.64   %phi2169 <- %r13980
	phisrc.64   %phi2170 <- %r13980
	br          %r13983, .L3119, .L3117

.L3119:
	load.64     %r13987 <- -16[%r13980]
	load.8      %r13988 <- 9[%r13987]
	cast.32     %r13989 <- (8) %r13988
	and.32      %r13990 <- %r13989, $3
	phisrc.64   %phi2163 <- %r13980
	phisrc.64   %phi2164 <- %r13980
	br          %r13990, .L3118, .L3117

.L3118:
	load.64     %r13992 <- 0[%r13961]
	ptrcast.64  %r13994 <- (64) %r13992
	load.8      %r13995 <- 9[%r13994]
	cast.32     %r13996 <- (8) %r13995
	and.32      %r13997 <- %r13996, $4
	br          %r13997, .L3116, .L3117

.L3116:
	call        luaC_barrierback, %arg1, %r13992
	br          .L3117

.L3117:
	load.64     %r14003 <- 16[%arg1]
	add.64      %r14004 <- %r14003, $-16
	store.64    %r14004 -> 16[%arg1]
	ret


lua_setmetatable:
.L3121:
	<entry-point>
	call.64     %r14008 <- index2adr, %arg1, %arg2
	load.64     %r14011 <- 16[%arg1]
	load.32     %r14013 <- -8[%r14011]
	br          %r14013, .L3123, .L3122

.L3122:
	phisrc.64   %phi2179(mt) <- $0
	br          .L3124

.L3123:
	load.64     %r14019 <- -16[%r14011]
	phisrc.64   %phi2180(mt) <- %r14019
	br          .L3124

.L3124:
	load.32     %r14022 <- 8[%r14008]
	phi.64      %r14023 <- %phi2179(mt), %phi2180(mt)
	switch      %r14022, 5 -> .L3126, 7 -> .L3127, default -> .L3128

.L3126:
	load.64     %r14025 <- 0[%r14008]
	store.64    %r14023 -> 16[%r14025]
	br          %r14023, .L3129, .L3125

.L3129:
	ptrcast.64  %r14028 <- (64) %r14023
	load.8      %r14029 <- 9[%r14028]
	cast.32     %r14030 <- (8) %r14029
	and.32      %r14031 <- %r14030, $3
	br          %r14031, .L3133, .L3125

.L3133:
	load.64     %r14033 <- 0[%r14008]
	ptrcast.64  %r14035 <- (64) %r14033
	load.8      %r14036 <- 9[%r14035]
	cast.32     %r14037 <- (8) %r14036
	and.32      %r14038 <- %r14037, $4
	br          %r14038, .L3131, .L3125

.L3131:
	call        luaC_barrierback, %arg1, %r14033
	br          .L3125

.L3127:
	load.64     %r14045 <- 0[%r14008]
	store.64    %r14023 -> 16[%r14045]
	br          %r14023, .L3134, .L3125

.L3134:
	ptrcast.64  %r14048 <- (64) %r14023
	load.8      %r14049 <- 9[%r14048]
	cast.32     %r14050 <- (8) %r14049
	and.32      %r14051 <- %r14050, $3
	br          %r14051, .L3138, .L3125

.L3138:
	load.64     %r14053 <- 0[%r14008]
	ptrcast.64  %r14055 <- (64) %r14053
	load.8      %r14056 <- 9[%r14055]
	cast.32     %r14057 <- (8) %r14056
	and.32      %r14058 <- %r14057, $4
	br          %r14058, .L3136, .L3125

.L3136:
	ptrcast.64  %r14063 <- (64) %r14053
	call        luaC_barrierf, %arg1, %r14063, %r14048
	br          .L3125

.L3128:
	load.64     %r14068 <- 32[%arg1]
	add.64      %r14069 <- %r14068, $224
	scast.64    %r14072 <- (32) %r14022
	muls.64     %r14073 <- %r14072, $8
	add.64      %r14074 <- %r14069, %r14073
	store.64    %r14023 -> 0[%r14074]
	br          .L3125

.L3125:
	load.64     %r14076 <- 16[%arg1]
	add.64      %r14077 <- %r14076, $-16
	store.64    %r14077 -> 16[%arg1]
	ret.32      $1


lua_setfenv:
.L3140:
	<entry-point>
	call.64     %r14082 <- index2adr, %arg1, %arg2
	load.32     %r14086 <- 8[%r14082]
	switch      %r14086, 6 -> .L3142, 7 -> .L3143, 8 -> .L3144, default -> .L3147

.L3142:
	load.64     %r14088 <- 16[%arg1]
	load.64     %r14090 <- -16[%r14088]
	load.64     %r14093 <- 0[%r14082]
	store.64    %r14090 -> 24[%r14093]
	br          .L3146

.L3143:
	load.64     %r14095 <- 16[%arg1]
	load.64     %r14097 <- -16[%r14095]
	load.64     %r14100 <- 0[%r14082]
	store.64    %r14097 -> 24[%r14100]
	br          .L3146

.L3144:
	load.64     %r14102 <- 0[%r14082]
	load.64     %r14106 <- 16[%arg1]
	load.64     %r14108 <- -16[%r14106]
	ptrcast.64  %r14110 <- (64) %r14108
	store.64    %r14110 -> 120[%r14102]
	store.32    $5 -> 128[%r14102]
	br          .L3146

.L3146:
	load.64     %r14115 <- 16[%arg1]
	load.64     %r14117 <- -16[%r14115]
	ptrcast.64  %r14119 <- (64) %r14117
	load.8      %r14120 <- 9[%r14119]
	cast.32     %r14121 <- (8) %r14120
	and.32      %r14122 <- %r14121, $3
	phisrc.64   %phi2192 <- %r14115
	phisrc.64   %phi2193 <- %r14115
	br          %r14122, .L3150, .L3147

.L3150:
	load.64     %r14124 <- 0[%r14082]
	ptrcast.64  %r14125 <- (64) %r14124
	load.8      %r14126 <- 9[%r14125]
	cast.32     %r14127 <- (8) %r14126
	and.32      %r14128 <- %r14127, $4
	br          %r14128, .L3148, .L3147

.L3148:
	ptrcast.64  %r14132 <- (64) %r14124
	ptrcast.64  %r14138 <- (64) %r14117
	call        luaC_barrierf, %arg1, %r14132, %r14138
	br          .L3147

.L3147:
	load.64     %r14140 <- 16[%arg1]
	add.64      %r14141 <- %r14140, $-16
	store.64    %r14141 -> 16[%arg1]
	ret.32      $1


lua_call:
.L3152:
	<entry-point>
	load.64     %r14147 <- 16[%arg1]
	add.32      %r14149 <- %arg2, $1
	scast.64    %r14150 <- (32) %r14149
	muls.64     %r14151 <- %r14150, $16
	sub.64      %r14152 <- %r14147, %r14151
	call        luaD_call, %arg1, %r14152, %arg3
	seteq.32    %r14157 <- %arg3, $0xffffffff
	br          %r14157, .L3155, .L3154

.L3155:
	load.64     %r14159 <- 16[%arg1]
	load.64     %r14161 <- 40[%arg1]
	load.64     %r14162 <- 16[%r14161]
	setae.32    %r14163 <- %r14159, %r14162
	br          %r14163, .L3153, .L3154

.L3153:
	store.64    %r14159 -> 16[%r14161]
	br          .L3154

.L3154:
	ret


f_call:
.L3156:
	<entry-point>
	ptrcast.64  %r14169 <- (64) %arg2
	load.64     %r14172 <- 0[%r14169]
	load.32     %r14174 <- 8[%r14169]
	call        luaD_call, %arg1, %r14172, %r14174
	ret


lua_pcall:
.L3158:
	<entry-point>
	br          %arg4, .L3160, .L3159

.L3159:
	phisrc.64   %phi2197(func) <- $0
	br          .L3161

.L3160:
	call.64     %r14181 <- index2adr, %arg1, %arg4
	ptrcast.64  %r14184 <- (64) %r14181
	load.64     %r14186 <- 64[%arg1]
	ptrcast.64  %r14187 <- (64) %r14186
	sub.64      %r14188 <- %r14184, %r14187
	phisrc.64   %phi2198(func) <- %r14188
	br          .L3161

.L3161:
	load.64     %r14190 <- 16[%arg1]
	add.32      %r14192 <- %arg2, $1
	scast.64    %r14193 <- (32) %r14192
	muls.64     %r14194 <- %r14193, $16
	sub.64      %r14195 <- %r14190, %r14194
	store.64    %r14195 -> 0[c]
	store.32    %arg3 -> 8[c]
	symaddr.64  %r14198 <- f_call
	symaddr.64  %r14199 <- c
	cast.64     %r14200 <- (64) %r14199
	ptrcast.64  %r14202 <- (64) %r14195
	load.64     %r14204 <- 64[%arg1]
	ptrcast.64  %r14205 <- (64) %r14204
	sub.64      %r14206 <- %r14202, %r14205
	phi.64      %r14207 <- %phi2197(func), %phi2198(func)
	call.32     %r14208 <- luaD_pcall, %arg1, %r14198, %r14200, %r14206, %r14207
	seteq.32    %r14210 <- %arg3, $0xffffffff
	br          %r14210, .L3164, .L3165

.L3164:
	load.64     %r14212 <- 16[%arg1]
	load.64     %r14214 <- 40[%arg1]
	load.64     %r14215 <- 16[%r14214]
	setae.32    %r14216 <- %r14212, %r14215
	br          %r14216, .L3162, .L3165

.L3162:
	store.64    %r14212 -> 16[%r14214]
	br          .L3165

.L3165:
	ret.32      %r14208


lua_load:
.L3166:
	<entry-point>
	phisrc.64   %phi2202(chunkname) <- %arg4
	br          %arg4, .L3168, .L3167

.L3167:
	symaddr.64  %r14224 <- <anon symbol:0x62d00145ac40>
	phisrc.64   %phi2203(chunkname) <- %r14224
	br          .L3168

.L3168:
	symaddr.64  %r14226 <- z
	call        luaZ_init, %arg1, %r14226, %arg2, %arg3
	phi.64      %r14231 <- %phi2202(chunkname), %phi2203(chunkname)
	call.32     %r14232 <- luaD_protectedparser, %arg1, %r14226, %r14231
	ret.32      %r14232


lua_error:
.L3170:
	<entry-point>
	call        luaG_errormsg, %arg1
	ret.32      $0


lua_next:
.L3172:
	<entry-point>
	call.64     %r14240 <- index2adr, %arg1, %arg2
	load.64     %r14244 <- 0[%r14240]
	load.64     %r14247 <- 16[%arg1]
	add.64      %r14248 <- %r14247, $-16
	call.32     %r14249 <- luaH_next, %arg1, %r14244, %r14248
	br          %r14249, .L3173, .L3174

.L3173:
	load.64     %r14253 <- 16[%arg1]
	add.64      %r14254 <- %r14253, $16
	store.64    %r14254 -> 16[%arg1]
	br          .L3176

.L3174:
	load.64     %r14256 <- 16[%arg1]
	cast.64     %r14257 <- (64) %r14256
	add.64      %r14258 <- %r14257, $-16
	ptrcast.64  %r14259 <- (64) %r14258
	store.64    %r14259 -> 16[%arg1]
	br          .L3176

.L3176:
	ret.32      %r14249


lua_concat:
.L3177:
	<entry-point>
	setge.32    %r14264 <- %arg2, $2
	br          %r14264, .L3178, .L3179

.L3178:
	load.64     %r14266 <- 32[%arg1]
	load.64     %r14267 <- 120[%r14266]
	load.64     %r14270 <- 112[%r14266]
	setae.32    %r14271 <- %r14267, %r14270
	br          %r14271, .L3180, .L3181

.L3180:
	call        luaC_step, %arg1
	br          .L3181

.L3181:
	load.64     %r14276 <- 16[%arg1]
	load.64     %r14278 <- 24[%arg1]
	sub.64      %r14279 <- %r14276, %r14278
	divs.64     %r14280 <- %r14279, $16
	scast.32    %r14281 <- (64) %r14280
	add.32      %r14282 <- %r14281, $-1
	call        luaV_concat, %arg1, %arg2, %r14282
	add.32      %r14284 <- %arg2, $-1
	scast.64    %r14285 <- (32) %r14284
	muls.64     %r14286 <- %r14285, $16
	load.64     %r14288 <- 16[%arg1]
	cast.64     %r14289 <- (64) %r14288
	sub.64      %r14290 <- %r14289, %r14286
	ptrcast.64  %r14291 <- (64) %r14290
	store.64    %r14291 -> 16[%arg1]
	br          .L3182

.L3179:
	br          %arg2, .L3182, .L3183

.L3183:
	load.64     %r14295 <- 16[%arg1]
	symaddr.64  %r14297 <- <anon symbol:0x62d00145c688>
	call.64     %r14298 <- luaS_newlstr, %arg1, %r14297, $0
	ptrcast.64  %r14299 <- (64) %r14298
	store.64    %r14299 -> 0[%r14295]
	store.32    $4 -> 8[%r14295]
	load.64     %r14304 <- 16[%arg1]
	add.64      %r14305 <- %r14304, $16
	store.64    %r14305 -> 16[%arg1]
	br          .L3182

.L3182:
	ret


lua_newuserdata:
.L3185:
	<entry-point>
	load.64     %r14307 <- 32[%arg1]
	load.64     %r14308 <- 120[%r14307]
	load.64     %r14311 <- 112[%r14307]
	setae.32    %r14312 <- %r14308, %r14311
	br          %r14312, .L3186, .L3187

.L3186:
	call        luaC_step, %arg1
	br          .L3187

.L3187:
	call.64     %r14317 <- getcurrenv, %arg1
	call.64     %r14318 <- luaS_newudata, %arg1, %arg2, %r14317
	load.64     %r14320 <- 16[%arg1]
	ptrcast.64  %r14322 <- (64) %r14318
	store.64    %r14322 -> 0[%r14320]
	store.32    $7 -> 8[%r14320]
	load.64     %r14327 <- 16[%arg1]
	add.64      %r14328 <- %r14327, $16
	store.64    %r14328 -> 16[%arg1]
	add.64      %r14330 <- %r14318, $40
	cast.64     %r14331 <- (64) %r14330
	ret.64      %r14331


luaL_argerror:
.L3189:
	<entry-point>
	symaddr.64  %r14334 <- ar
	call.32     %r14335 <- lua_getstack, %arg1, $0, %r14334
	phisrc.32   %phi2210(narg) <- %arg2
	br          %r14335, .L3191, .L3190

.L3190:
	symaddr.64  %r14337 <- <anon symbol:0x62d00145e640>
	call.32     %r14340 <- luaL_error, %arg1, %r14337, %arg2, %arg3
	phisrc.32   %phi2207(return) <- %r14340
	br          .L3192

.L3191:
	symaddr.64  %r14343 <- <anon symbol:0x62d00145e9e0>
	call.32     %r14345 <- lua_getinfo, %arg1, %r14343, %r14334
	load.64     %r14346 <- 16[ar]
	symaddr.64  %r14347 <- <anon symbol:0x62d00145f038>
	call.32     %r14348 <- strcmp, %r14346, %r14347
	br          %r14348, .L3194, .L3193

.L3193:
	add.32      %r14351 <- %arg2, $-1
	phisrc.32   %phi2211(narg) <- %r14351
	br          %r14351, .L3194, .L3195

.L3195:
	symaddr.64  %r14355 <- <anon symbol:0x62d00145f3d8>
	load.64     %r14356 <- 8[ar]
	call.32     %r14358 <- luaL_error, %arg1, %r14355, %r14356, %arg3
	phisrc.32   %phi2208(return) <- %r14358
	br          .L3192

.L3194:
	load.64     %r14359(ar) <- 8[ar]
	phisrc.64   %phi2214(ar) <- %r14359(ar)
	br          %r14359(ar), .L3198, .L3197

.L3197:
	symaddr.64  %r14361 <- <anon symbol:0x62d00145fa30>
	store.64    %r14361 -> 8[ar]
	phisrc.64   %phi2215(ar) <- %r14361
	br          .L3198

.L3198:
	symaddr.64  %r14363 <- <anon symbol:0x62d00145fdd0>
	phi.32      %r14364 <- %phi2210(narg), %phi2211(narg)
	phi.64      %r14365 <- %phi2214(ar), %phi2215(ar)
	call.32     %r14367 <- luaL_error, %arg1, %r14363, %r14364, %r14365, %arg3
	phisrc.32   %phi2209(return) <- %r14367
	br          .L3192

.L3192:
	phi.32      %r14341 <- %phi2207(return), %phi2208(return), %phi2209(return)
	ret.32      %r14341


luaL_typerror:
.L3199:
	<entry-point>
	symaddr.64  %r14369 <- <anon symbol:0x62d001460a80>
	call.32     %r14374 <- lua_type, %arg1, %arg2
	call.64     %r14375 <- lua_typename, %arg1, %r14374
	call.64     %r14376 <- lua_pushfstring, %arg1, %r14369, %arg3, %r14375
	call.32     %r14380 <- luaL_argerror, %arg1, %arg2, %r14376
	ret.32      %r14380


tag_error:
.L3201:
	<entry-point>
	call.64     %r14386 <- lua_typename, %arg1, %arg3
	call.32     %r14387 <- luaL_typerror, %arg1, %arg2, %r14386
	ret


luaL_where:
.L3203:
	<entry-point>
	symaddr.64  %r14390 <- ar
	call.32     %r14391 <- lua_getstack, %arg1, %arg2, %r14390
	br          %r14391, .L3204, .L3205

.L3204:
	symaddr.64  %r14393 <- <anon symbol:0x62d001460ff0>
	call.32     %r14395 <- lua_getinfo, %arg1, %r14393, %r14390
	load.32     %r14396(ar) <- 40[ar]
	setgt.32    %r14397 <- %r14396(ar), $0
	br          %r14397, .L3206, .L3205

.L3206:
	symaddr.64  %r14399 <- <anon symbol:0x62d001461648>
	add.64      %r14401 <- %r14390, $56
	call.64     %r14403 <- lua_pushfstring, %arg1, %r14399, %r14401, %r14396(ar)
	br          .L3208

.L3205:
	symaddr.64  %r14405 <- <anon symbol:0x62d001461d88>
	call        lua_pushlstring, %arg1, %r14405, $0
	br          .L3208

.L3208:
	ret


luaL_error:
.L3209:
	<entry-point>
	store.64    %arg2 -> 0[fmt]
	symaddr.64  %r14406 <- fmt
	cast.64     %r14407 <- (64) %r14406
	call        luaL_where, %arg1, $1
	load.64     %r14410 <- 0[fmt]
	call.64     %r14412 <- lua_pushvfstring, %arg1, %r14410, %r14407
	call        lua_concat, %arg1, $2
	call.32     %r14415 <- lua_error, %arg1
	ret.32      %r14415


luaL_newmetatable:
.L3211:
	<entry-point>
	call        lua_getfield, %arg1, $0xffffd8f0, %arg2
	call.32     %r14420 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r14422 <- %r14420, $0
	br          %r14420, .L3214, .L3213

.L3213:
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_createtable, %arg1, $0, $0
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_setfield, %arg1, $0xffffd8f0, %arg2
	br          .L3214

.L3214:
	ret.32      %r14422


luaL_checkudata:
.L3215:
	<entry-point>
	call.64     %r14430 <- lua_touserdata, %arg1, %arg2
	br          %r14430, .L3216, .L3217

.L3216:
	call.32     %r14435 <- lua_getmetatable, %arg1, %arg2
	br          %r14435, .L3218, .L3217

.L3218:
	call        lua_getfield, %arg1, $0xffffd8f0, %arg3
	call.32     %r14439 <- lua_rawequal, %arg1, $0xffffffff, $0xfffffffe
	br          %r14439, .L3220, .L3217

.L3220:
	call        lua_settop, %arg1, $0xfffffffd
	phisrc.64   %phi2221(return) <- %r14430
	br          .L3222

.L3217:
	call.32     %r14446 <- luaL_typerror, %arg1, %arg2, %arg3
	phisrc.64   %phi2222(return) <- $0
	br          .L3222

.L3222:
	phi.64      %r14442 <- %phi2221(return), %phi2222(return)
	ret.64      %r14442


luaL_checkstack:
.L3223:
	<entry-point>
	call.32     %r14449 <- lua_checkstack, %arg1, %arg2
	br          %r14449, .L3225, .L3224

.L3224:
	symaddr.64  %r14451 <- <anon symbol:0x62d0014622f8>
	call.32     %r14453 <- luaL_error, %arg1, %r14451, %arg3
	br          .L3225

.L3225:
	ret


luaL_checktype:
.L3226:
	<entry-point>
	call.32     %r14456 <- lua_type, %arg1, %arg2
	setne.32    %r14458 <- %r14456, %arg3
	br          %r14458, .L3227, .L3228

.L3227:
	call        tag_error, %arg1, %arg2, %arg3
	br          .L3228

.L3228:
	ret


luaL_checkany:
.L3229:
	<entry-point>
	call.32     %r14464 <- lua_type, %arg1, %arg2
	seteq.32    %r14465 <- %r14464, $0xffffffff
	br          %r14465, .L3230, .L3231

.L3230:
	symaddr.64  %r14468 <- <anon symbol:0x62d0014646d0>
	call.32     %r14469 <- luaL_argerror, %arg1, %arg2, %r14468
	br          .L3231

.L3231:
	ret


luaL_checklstring:
.L3232:
	<entry-point>
	call.64     %r14473 <- lua_tolstring, %arg1, %arg2, %arg3
	br          %r14473, .L3235, .L3233

.L3233:
	call        tag_error, %arg1, %arg2, $4
	br          .L3235

.L3235:
	ret.64      %r14473


luaL_optlstring:
.L3236:
	<entry-point>
	call.32     %r14481 <- lua_type, %arg1, %arg2
	setle.32    %r14482 <- %r14481, $0
	br          %r14482, .L3237, .L3238

.L3237:
	br          %arg4, .L3239, .L3240

.L3239:
	call.64     %r14485 <- strlen, %arg3
	select.64   %r14487 <- %arg3, %r14485, $0
	store.64    %r14487 -> 0[%arg4]
	br          .L3240

.L3240:
	phisrc.64   %phi2224(return) <- %arg3
	br          .L3241

.L3238:
	call.64     %r14494 <- luaL_checklstring, %arg1, %arg2, %arg4
	phisrc.64   %phi2225(return) <- %r14494
	br          .L3241

.L3241:
	phi.64      %r14490 <- %phi2224(return), %phi2225(return)
	ret.64      %r14490


luaL_checknumber:
.L3243:
	<entry-point>
	call.64     %r14497 <- lua_tonumber, %arg1, %arg2
	set.64      %r14499 <- 0.000000
	seteq.32    %r14500 <- %r14497, %r14499
	br          %r14500, .L3246, .L3247

.L3246:
	call.32     %r14503 <- lua_isnumber, %arg1, %arg2
	br          %r14503, .L3247, .L3244

.L3244:
	call        tag_error, %arg1, %arg2, $3
	br          .L3247

.L3247:
	ret.64      %r14497


luaL_checkinteger:
.L3248:
	<entry-point>
	call.64     %r14510 <- lua_tointeger, %arg1, %arg2
	br          %r14510, .L3252, .L3251

.L3251:
	call.32     %r14515 <- lua_isnumber, %arg1, %arg2
	br          %r14515, .L3252, .L3249

.L3249:
	call        tag_error, %arg1, %arg2, $3
	br          .L3252

.L3252:
	ret.64      %r14510


luaL_optinteger:
.L3253:
	<entry-point>
	call.32     %r14522 <- lua_type, %arg1, %arg2
	setle.32    %r14523 <- %r14522, $0
	br          %r14523, .L3255, .L3256

.L3255:
	phisrc.64   %phi2228 <- %arg3
	br          .L3257

.L3256:
	call.64     %r14527 <- luaL_checkinteger, %arg1, %arg2
	phisrc.64   %phi2229 <- %r14527
	br          .L3257

.L3257:
	phi.64      %r14528 <- %phi2228, %phi2229
	ret.64      %r14528


luaL_getmetafield:
.L3258:
	<entry-point>
	call.32     %r14532 <- lua_getmetatable, %arg1, %arg2
	br          %r14532, .L3260, .L3259

.L3259:
	phisrc.32   %phi2231(return) <- $0
	br          .L3261

.L3260:
	call        lua_pushstring, %arg1, %arg3
	call        lua_rawget, %arg1, $0xfffffffe
	call.32     %r14538 <- lua_type, %arg1, $0xffffffff
	br          %r14538, .L3263, .L3262

.L3262:
	call        lua_settop, %arg1, $0xfffffffd
	phisrc.32   %phi2232(return) <- $0
	br          .L3261

.L3263:
	call        lua_remove, %arg1, $0xfffffffe
	phisrc.32   %phi2233(return) <- $1
	br          .L3261

.L3261:
	phi.32      %r14533 <- %phi2231(return), %phi2232(return), %phi2233(return)
	ret.32      %r14533


luaL_register:
.L3265:
	<entry-point>
	call        luaI_openlib, %arg1, %arg2, %arg3, $0
	ret


libsize:
.L3267:
	<entry-point>
	phisrc.64   %phi2236(l) <- %arg1
	phisrc.32   %phi2240(size) <- $0
	br          .L3271

.L3271:
	phi.64      %r14545(l) <- %phi2236(l), %phi2237(l)
	load.64     %r14546 <- 0[%r14545(l)]
	phi.32      %r14547 <- %phi2240(size), %phi2241(size)
	br          %r14546, .L3268, .L3272

.L3268:
	add.32      %r14548 <- %r14547, $1
	phisrc.32   %phi2241(size) <- %r14548
	add.64      %r14550 <- %r14545(l), $16
	phisrc.64   %phi2237(l) <- %r14550
	br          .L3271

.L3272:
	ret.32      %r14547


luaI_openlib:
.L3273:
	<entry-point>
	phisrc.64   %phi2244(l) <- %arg3
	br          %arg2, .L3274, .L3283

.L3274:
	call.32     %r14555 <- libsize, %arg3
	symaddr.64  %r14557 <- <anon symbol:0x62d00145d7c0>
	call.64     %r14558 <- luaL_findtable, %arg1, $0xffffd8f0, %r14557, $1
	call        lua_getfield, %arg1, $0xffffffff, %arg2
	call.32     %r14562 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r14563 <- %r14562, $5
	phisrc.64   %phi2245(l) <- %arg3
	br          %r14563, .L3277, .L3276

.L3276:
	call        lua_settop, %arg1, $0xfffffffe
	call.64     %r14568 <- luaL_findtable, %arg1, $0xffffd8ee, %arg2, %r14555
	br          %r14568, .L3278, .L3279

.L3278:
	symaddr.64  %r14571 <- <anon symbol:0x62d00145db60>
	call.32     %r14573 <- luaL_error, %arg1, %r14571, %arg2
	br          .L3279

.L3279:
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_setfield, %arg1, $0xfffffffd, %arg2
	br          .L3277

.L3277:
	call        lua_remove, %arg1, $0xfffffffe
	add.32      %r14580 <- %arg4, $1
	neg.32      %r14581 <- %r14580
	call        lua_insert, %arg1, %r14581
	br          .L3283

.L3283:
	phi.64      %r14582(l) <- %phi2244(l), %phi2245(l), %phi2246(l)
	load.64     %r14583 <- 0[%r14582(l)]
	br          %r14583, .L3280, .L3282

.L3280:
	phisrc.32   %phi2249(i) <- $0
	br          .L3287

.L3287:
	phi.32      %r14584(i) <- %phi2249(i), %phi2250(i)
	setlt.32    %r14586 <- %r14584(i), %arg4
	br          %r14586, .L3284, .L3286

.L3284:
	neg.32      %r14589 <- %arg4
	call        lua_pushvalue, %arg1, %r14589
	add.32      %r14591 <- %r14584(i), $1
	phisrc.32   %phi2250(i) <- %r14591
	br          .L3287

.L3286:
	load.64     %r14594 <- 8[%r14582(l)]
	call        lua_pushcclosure, %arg1, %r14594, %arg4
	add.32      %r14598 <- %arg4, $2
	neg.32      %r14599 <- %r14598
	load.64     %r14601 <- 0[%r14582(l)]
	call        lua_setfield, %arg1, %r14599, %r14601
	add.64      %r14603 <- %r14582(l), $16
	phisrc.64   %phi2246(l) <- %r14603
	br          .L3283

.L3282:
	neg.32      %r14606 <- %arg4
	add.32      %r14607 <- %r14606, $-1
	call        lua_settop, %arg1, %r14607
	ret


luaL_findtable:
.L3289:
	<entry-point>
	call        lua_pushvalue, %arg1, %arg2
	phisrc.64   %phi2258(fname) <- %arg3
	br          .L3290

.L3290:
	phi.64      %r14610(fname) <- %phi2258(fname), %phi2259(fname)
	call.64     %r14611 <- strchr, %r14610(fname), $46
	phisrc.64   %phi2264(e) <- %r14611
	br          %r14611, .L3294, .L3293

.L3293:
	call.64     %r14616 <- strlen, %r14610(fname)
	add.64      %r14617 <- %r14610(fname), %r14616
	phisrc.64   %phi2265(e) <- %r14617
	br          .L3294

.L3294:
	phi.64      %r14620(e) <- %phi2264(e), %phi2265(e)
	sub.64      %r14622 <- %r14620(e), %r14610(fname)
	call        lua_pushlstring, %arg1, %r14610(fname), %r14622
	call        lua_rawget, %arg1, $0xfffffffe
	call.32     %r14626 <- lua_type, %arg1, $0xffffffff
	br          %r14626, .L3296, .L3295

.L3295:
	call        lua_settop, %arg1, $0xfffffffe
	load.8      %r14632 <- 0[%r14620(e)]
	scast.32    %r14633 <- (8) %r14632
	seteq.32    %r14634 <- %r14633, $46
	select.32   %r14635 <- %r14634, $1, %arg4
	call        lua_createtable, %arg1, $0, %r14635
	call        lua_pushlstring, %arg1, %r14610(fname), %r14622
	call        lua_pushvalue, %arg1, $0xfffffffe
	call        lua_settable, %arg1, $0xfffffffc
	br          .L3297

.L3296:
	call.32     %r14645 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r14646 <- %r14645, $5
	br          %r14646, .L3297, .L3298

.L3298:
	call        lua_settop, %arg1, $0xfffffffd
	phisrc.64   %phi2251(return) <- %r14610(fname)
	br          .L3300

.L3297:
	call        lua_remove, %arg1, $0xfffffffe
	add.64      %r14652 <- %r14620(e), $1
	phisrc.64   %phi2259(fname) <- %r14652
	load.8      %r14654 <- 0[%r14620(e)]
	scast.32    %r14655 <- (8) %r14654
	seteq.32    %r14656 <- %r14655, $46
	br          %r14656, .L3290, .L3292

.L3292:
	phisrc.64   %phi2252(return) <- $0
	br          .L3300

.L3300:
	phi.64      %r14649 <- %phi2251(return), %phi2252(return)
	ret.64      %r14649


emptybuffer:
.L3301:
	<entry-point>
	load.64     %r14658 <- 0[%arg1]
	add.64      %r14660 <- %arg1, $24
	sub.64      %r14661 <- %r14658, %r14660
	setne.32    %r14665 <- %r14661, $0
	br          %r14661, .L3303, .L3304

.L3303:
	load.64     %r14667 <- 16[%arg1]
	call        lua_pushlstring, %r14667, %r14660, %r14661
	store.64    %r14660 -> 0[%arg1]
	load.32     %r14675 <- 8[%arg1]
	add.32      %r14676 <- %r14675, $1
	store.32    %r14676 -> 8[%arg1]
	br          .L3304

.L3304:
	ret.32      %r14665


adjuststack:
.L3306:
	<entry-point>
	load.32     %r14678 <- 8[%arg1]
	setgt.32    %r14679 <- %r14678, $1
	br          %r14679, .L3307, .L3308

.L3307:
	load.64     %r14681 <- 16[%arg1]
	call.64     %r14683(toplen) <- lua_objlen, %r14681, $0xffffffff
	phisrc.32   %phi2272(toget) <- $1
	phisrc.64   %phi2275(toplen) <- %r14683(toplen)
	br          .L3309

.L3309:
	phi.32      %r14685 <- %phi2272(toget), %phi2273(toget)
	add.32      %r14686 <- %r14685, $1
	neg.32      %r14687 <- %r14686
	call.64     %r14688 <- lua_objlen, %r14681, %r14687
	load.32     %r14690 <- 8[%arg1]
	sub.32      %r14692 <- %r14690, %r14685
	add.32      %r14693 <- %r14692, $1
	setge.32    %r14694 <- %r14693, $10
	phi.64      %r14695(toplen) <- %phi2275(toplen), %phi2276(toplen)
	seta.32     %r14697 <- %r14695(toplen), %r14688
	or-bool.32  %r14698 <- %r14694, %r14697
	phisrc.32   %phi2268(toget) <- %r14685
	br          %r14698, .L3312, .L3311

.L3312:
	add.64      %r14702 <- %r14695(toplen), %r14688
	phisrc.32   %phi2273(toget) <- %r14686
	phisrc.64   %phi2276(toplen) <- %r14702
	setlt.32    %r14709 <- %r14686, %r14690
	phisrc.32   %phi2269(toget) <- %r14686
	br          %r14709, .L3309, .L3311

.L3311:
	phi.32      %r14711 <- %phi2268(toget), %phi2269(toget)
	call        lua_concat, %r14681, %r14711
	load.32     %r14713 <- 8[%arg1]
	sub.32      %r14715 <- %r14713, %r14711
	add.32      %r14716 <- %r14715, $1
	store.32    %r14716 -> 8[%arg1]
	br          .L3308

.L3308:
	ret


luaL_prepbuffer:
.L3315:
	<entry-point>
	call.32     %r14719 <- emptybuffer, %arg1
	br          %r14719, .L3316, .L3317

.L3316:
	call        adjuststack, %arg1
	br          .L3317

.L3317:
	add.64      %r14722 <- %arg1, $24
	ret.64      %r14722


luaL_addlstring:
.L3319:
	<entry-point>
	phisrc.64   %phi2281(s) <- %arg2
	phisrc.64   %phi2283(l) <- %arg3
	br          .L3323

.L3323:
	phi.64      %r14724 <- %phi2283(l), %phi2284(l)
	add.64      %r14725 <- %r14724, $-1
	phisrc.64   %phi2284(l) <- %r14725
	br          %r14724, .L3320, .L3322

.L3320:
	load.64     %r14727 <- 0[%arg1]
	add.64      %r14730 <- %arg1, $0x2018
	setb.32     %r14731 <- %r14727, %r14730
	phisrc.64   %phi2285 <- %r14727
	br          %r14731, .L3326, .L3325

.L3325:
	call.64     %r14733 <- luaL_prepbuffer, %arg1
	br          .L3326

.L3326:
	phi.64      %r14735 <- %phi2281(s), %phi2282(s)
	add.64      %r14736 <- %r14735, $1
	load.8      %r14737 <- 0[%r14735]
	load.64     %r14740 <- 0[%arg1]
	add.64      %r14741 <- %r14740, $1
	store.64    %r14741 -> 0[%arg1]
	store.8     %r14737 -> 0[%r14740]
	phisrc.64   %phi2282(s) <- %r14736
	br          .L3323

.L3322:
	ret


luaL_pushresult:
.L3327:
	<entry-point>
	call.32     %r14743 <- emptybuffer, %arg1
	load.64     %r14745 <- 16[%arg1]
	load.32     %r14747 <- 8[%arg1]
	call        lua_concat, %r14745, %r14747
	store.32    $1 -> 8[%arg1]
	ret


luaL_addvalue:
.L3329:
	<entry-point>
	load.64     %r14750 <- 16[%arg1]
	symaddr.64  %r14752 <- vl
	call.64     %r14753 <- lua_tolstring, %r14750, $0xffffffff, %r14752
	load.64     %r14754(vl) <- 0[vl]
	load.64     %r14756 <- 0[%arg1]
	add.64      %r14758 <- %arg1, $24
	sub.64      %r14759 <- %r14756, %r14758
	sub.64      %r14760 <- $0x2000, %r14759
	setbe.32    %r14762 <- %r14754(vl), %r14760
	br          %r14762, .L3330, .L3331

.L3330:
	cast.64     %r14765 <- (64) %r14756
	cast.64     %r14767 <- (64) %r14753
	call.64     %r14769 <- memcpy, %r14765, %r14767, %r14754(vl)
	load.64     %r14770 <- 0[vl]
	load.64     %r14772 <- 0[%arg1]
	cast.64     %r14773 <- (64) %r14772
	add.64      %r14774 <- %r14773, %r14770
	ptrcast.64  %r14775 <- (64) %r14774
	store.64    %r14775 -> 0[%arg1]
	call        lua_settop, %r14750, $0xfffffffe
	br          .L3332

.L3331:
	call.32     %r14778 <- emptybuffer, %arg1
	br          %r14778, .L3333, .L3334

.L3333:
	call        lua_insert, %r14750, $0xfffffffe
	br          .L3334

.L3334:
	load.32     %r14781 <- 8[%arg1]
	add.32      %r14782 <- %r14781, $1
	store.32    %r14782 -> 8[%arg1]
	call        adjuststack, %arg1
	br          .L3332

.L3332:
	ret


luaL_buffinit:
.L3335:
	<entry-point>
	store.64    %arg1 -> 16[%arg2]
	add.64      %r14787 <- %arg2, $24
	store.64    %r14787 -> 0[%arg2]
	store.32    $0 -> 8[%arg2]
	ret


getF:
.L3337:
	<entry-point>
	ptrcast.64  %r14791 <- (64) %arg2
	load.32     %r14794 <- 0[%r14791]
	br          %r14794, .L3338, .L3339

.L3338:
	store.32    $0 -> 0[%r14791]
	store.64    $1 -> 0[%arg3]
	symaddr.64  %r14797 <- <anon symbol:0x62d0014693d8>
	phisrc.64   %phi2288(return) <- %r14797
	br          .L3340

.L3339:
	load.64     %r14800 <- 8[%r14791]
	call.32     %r14801 <- feof, %r14800
	br          %r14801, .L3341, .L3342

.L3341:
	phisrc.64   %phi2289(return) <- $0
	br          .L3340

.L3342:
	add.64      %r14803 <- %r14791, $16
	cast.64     %r14804 <- (64) %r14803
	load.64     %r14806 <- 8[%r14791]
	call.64     %r14807 <- fread, %r14804, $1, $0x2000, %r14806
	store.64    %r14807 -> 0[%arg3]
	seta.32     %r14813 <- %r14807, $0
	select.64   %r14814 <- %r14813, %r14803, $0
	phisrc.64   %phi2290(return) <- %r14814
	br          .L3340

.L3340:
	phi.64      %r14798 <- %phi2288(return), %phi2289(return), %phi2290(return)
	ret.64      %r14798


errfile:
.L3343:
	<entry-point>
	call.64     %r14815 <- __errno_location
	load.32     %r14816 <- 0[%r14815]
	call.64     %r14817 <- strerror, %r14816
	call.64     %r14820 <- lua_tolstring, %arg1, %arg3, $0
	add.64      %r14821 <- %r14820, $1
	symaddr.64  %r14823 <- <anon symbol:0x62d00146a6e0>
	call.64     %r14827 <- lua_pushfstring, %arg1, %r14823, %arg2, %r14821, %r14817
	call        lua_remove, %arg1, %arg3
	ret.32      $6


luaL_loadfile:
.L3345:
	<entry-point>
	call.32     %r14832 <- lua_gettop, %arg1
	add.32      %r14833 <- %r14832, $1
	store.32    $0 -> 0[lf]
	br          %arg2, .L3347, .L3346

.L3346:
	symaddr.64  %r14837 <- <anon symbol:0x62d00146ab68>
	call        lua_pushlstring, %arg1, %r14837, $6
	load.64     %r14838(lf) <- 0[stdin]
	store.64    %r14838(lf) -> 8[lf]
	phisrc.64   %phi2297(lf) <- %r14838(lf)
	br          .L3348

.L3347:
	symaddr.64  %r14840 <- <anon symbol:0x62d00146b1c0>
	call.64     %r14842 <- lua_pushfstring, %arg1, %r14840, %arg2
	symaddr.64  %r14844 <- <anon symbol:0x62d00146b648>
	call.64     %r14845 <- fopen, %arg2, %r14844
	store.64    %r14845 -> 8[lf]
	phisrc.64   %phi2298(lf) <- %r14845
	br          %r14845, .L3348, .L3349

.L3349:
	symaddr.64  %r14849 <- <anon symbol:0x62d00146bad0>
	call.32     %r14851 <- errfile, %arg1, %r14849, %r14833
	phisrc.32   %phi2292(return) <- %r14851
	br          .L3351

.L3348:
	phi.64      %r14853 <- %phi2297(lf), %phi2298(lf)
	call.32     %r14854 <- _IO_getc, %r14853
	seteq.32    %r14856 <- %r14854, $35
	phisrc.32   %phi2301(c) <- %r14854
	br          %r14856, .L3352, .L3353

.L3352:
	store.32    $1 -> 0[lf]
	br          .L3357

.L3357:
	load.64     %r14857 <- 8[lf]
	call.32     %r14858 <- _IO_getc, %r14857
	setne.32    %r14859 <- %r14858, $0xffffffff
	setne.32    %r14861 <- %r14858, $10
	and-bool.32 %r14862 <- %r14859, %r14861
	br          %r14862, .L3357, .L3356

.L3356:
	seteq.32    %r14864 <- %r14858, $10
	phisrc.32   %phi2302(c) <- %r14858
	br          %r14864, .L3358, .L3353

.L3358:
	load.64     %r14865 <- 8[lf]
	call.32     %r14866 <- _IO_getc, %r14865
	phisrc.32   %phi2303(c) <- %r14866
	br          .L3353

.L3353:
	phi.32      %r14867(c) <- %phi2301(c), %phi2302(c), %phi2303(c)
	load.8      %r14868 <- 0["\33Lua"]
	scast.32    %r14869 <- (8) %r14868
	seteq.32    %r14870 <- %r14867(c), %r14869
	and-bool.32 %r14872 <- %r14870, %arg2
	phisrc.32   %phi2299(c) <- %r14867(c)
	br          %r14872, .L3360, .L3361

.L3360:
	symaddr.64  %r14874 <- <anon symbol:0x62d0014787b8>
	load.64     %r14875 <- 8[lf]
	call.64     %r14876 <- freopen, %arg2, %r14874, %r14875
	store.64    %r14876 -> 8[lf]
	phisrc.64   %phi2296(lf) <- %r14876
	phisrc.64   %phi2305 <- %r14876
	phisrc.64   %phi2306 <- %r14876
	br          %r14876, .L3367, .L3362

.L3362:
	symaddr.64  %r14880 <- <anon symbol:0x62d001478d28>
	call.32     %r14882 <- errfile, %arg1, %r14880, %r14833
	phisrc.32   %phi2293(return) <- %r14882
	br          .L3351

.L3367:
	load.64     %r14883 <- 8[lf]
	call.32     %r14884 <- _IO_getc, %r14883
	setne.32    %r14885 <- %r14884, $0xffffffff
	load.8      %r14887 <- 0["\33Lua"]
	scast.32    %r14888 <- (8) %r14887
	setne.32    %r14889 <- %r14884, %r14888
	and-bool.32 %r14890 <- %r14885, %r14889
	phisrc.32   %phi2300(c) <- %r14884
	br          %r14890, .L3367, .L3366

.L3366:
	store.32    $0 -> 0[lf]
	br          .L3361

.L3361:
	phi.32      %r14891 <- %phi2299(c), %phi2300(c)
	load.64     %r14892 <- 8[lf]
	call.32     %r14893 <- ungetc, %r14891, %r14892
	symaddr.64  %r14895 <- getF
	symaddr.64  %r14896 <- lf
	cast.64     %r14897 <- (64) %r14896
	call.64     %r14899 <- lua_tolstring, %arg1, $0xffffffff, $0
	call.32     %r14900 <- lua_load, %arg1, %r14895, %r14897, %r14899
	load.64     %r14901 <- 8[lf]
	call.32     %r14902 <- ferror, %r14901
	br          %arg2, .L3368, .L3369

.L3368:
	load.64     %r14904 <- 8[lf]
	call.32     %r14905 <- fclose, %r14904
	br          .L3369

.L3369:
	br          %r14902, .L3370, .L3371

.L3370:
	call        lua_settop, %arg1, %r14833
	symaddr.64  %r14910 <- <anon symbol:0x62d001479d78>
	call.32     %r14912 <- errfile, %arg1, %r14910, %r14833
	phisrc.32   %phi2294(return) <- %r14912
	br          .L3351

.L3371:
	call        lua_remove, %arg1, %r14833
	phisrc.32   %phi2295(return) <- %r14900
	br          .L3351

.L3351:
	phi.32      %r14852 <- %phi2292(return), %phi2293(return), %phi2294(return), %phi2295(return)
	ret.32      %r14852


getS:
.L3372:
	<entry-point>
	ptrcast.64  %r14917 <- (64) %arg2
	load.64     %r14920 <- 8[%r14917]
	br          %r14920, .L3374, .L3373

.L3373:
	phisrc.64   %phi2307(return) <- $0
	br          .L3375

.L3374:
	store.64    %r14920 -> 0[%arg3]
	store.64    $0 -> 8[%r14917]
	load.64     %r14928 <- 0[%r14917]
	phisrc.64   %phi2308(return) <- %r14928
	br          .L3375

.L3375:
	phi.64      %r14922 <- %phi2307(return), %phi2308(return)
	ret.64      %r14922


luaL_loadbuffer:
.L3376:
	<entry-point>
	store.64    %arg2 -> 0[ls]
	store.64    %arg3 -> 8[ls]
	symaddr.64  %r14932 <- getS
	symaddr.64  %r14933 <- ls
	cast.64     %r14934 <- (64) %r14933
	call.32     %r14936 <- lua_load, %arg1, %r14932, %r14934, %arg4
	ret.32      %r14936


l_alloc:
.L3378:
	<entry-point>
	br          %arg4, .L3380, .L3379

.L3379:
	call        free, %arg2
	phisrc.64   %phi2311(return) <- $0
	br          .L3381

.L3380:
	call.64     %r14946 <- realloc, %arg2, %arg4
	phisrc.64   %phi2312(return) <- %r14946
	br          .L3381

.L3381:
	phi.64      %r14943 <- %phi2311(return), %phi2312(return)
	ret.64      %r14943


panic:
.L3383:
	<entry-point>
	load.64     %r14948 <- 0[stderr]
	symaddr.64  %r14949 <- <anon symbol:0x62d00147abf8>
	call.64     %r14951 <- lua_tolstring, %arg1, $0xffffffff, $0
	call.32     %r14952 <- fprintf, %r14948, %r14949, %r14951
	ret.32      $0


luaL_newstate:
.L3385:
	<entry-point>
	symaddr.64  %r14954 <- l_alloc
	call.64     %r14955 <- lua_newstate, %r14954, $0
	br          %r14955, .L3386, .L3388

.L3386:
	symaddr.64  %r14958 <- panic
	call.64     %r14959 <- lua_atpanic, %r14955, %r14958
	br          .L3388

.L3388:
	ret.64      %r14955


luaB_tonumber:
.L3389:
	<entry-point>
	call.64     %r14963 <- luaL_optinteger, %arg1, $2, $10
	scast.32    %r14964 <- (64) %r14963
	seteq.32    %r14966 <- %r14964, $10
	br          %r14966, .L3390, .L3391

.L3390:
	call        luaL_checkany, %arg1, $1
	call.32     %r14969 <- lua_isnumber, %arg1, $1
	br          %r14969, .L3392, .L3395

.L3392:
	call.64     %r14972 <- lua_tonumber, %arg1, $1
	call        lua_pushnumber, %arg1, %r14972
	br          .L3394

.L3391:
	call.64     %r14975 <- luaL_checklstring, %arg1, $1, $0
	setle.32    %r14977 <- $2, %r14964
	setle.32    %r14979 <- %r14964, $36
	and-bool.32 %r14980 <- %r14977, %r14979
	br          %r14980, .L3398, .L3397

.L3397:
	symaddr.64  %r14982 <- <anon symbol:0x62d00147b338>
	call.32     %r14983 <- luaL_argerror, %arg1, $2, %r14982
	br          .L3398

.L3398:
	symaddr.64  %r14986 <- s2
	call.64     %r14988 <- strtoul, %r14975, %r14986, %r14964
	load.64     %r14990 <- 0[s2]
	setne.32    %r14991 <- %r14975, %r14990
	br          %r14991, .L3404, .L3395

.L3404:
	call.64     %r14992 <- __ctype_b_loc
	load.64     %r14993 <- 0[%r14992]
	load.64     %r14994(s2) <- 0[s2]
	load.8      %r14995 <- 0[%r14994(s2)]
	cast.32     %r14997 <- (8) %r14995
	scast.64    %r14998 <- (32) %r14997
	muls.64     %r14999 <- %r14998, $2
	add.64      %r15000 <- %r14993, %r14999
	load.16     %r15001 <- 0[%r15000]
	cast.32     %r15002 <- (16) %r15001
	and.32      %r15003 <- %r15002, $0x2000
	br          %r15003, .L3401, .L3403

.L3401:
	add.64      %r15005 <- %r14994(s2), $1
	store.64    %r15005 -> 0[s2]
	br          .L3404

.L3403:
	br          %r14995, .L3395, .L3405

.L3405:
	fpcast.64   %r15012 <- (64) %r14988
	call        lua_pushnumber, %arg1, %r15012
	br          .L3394

.L3395:
	call        lua_pushnil, %arg1
	br          .L3394

.L3394:
	ret.32      $1


luaB_error:
.L3407:
	<entry-point>
	call.64     %r15015 <- luaL_optinteger, %arg1, $2, $1
	scast.32    %r15016 <- (64) %r15015
	call        lua_settop, %arg1, $1
	call.32     %r15019 <- lua_isstring, %arg1, $1
	setgt.32    %r15021 <- %r15016, $0
	and-bool.32 %r15022 <- %r15019, %r15021
	br          %r15022, .L3408, .L3409

.L3408:
	call        luaL_where, %arg1, %r15016
	call        lua_pushvalue, %arg1, $1
	call        lua_concat, %arg1, $2
	br          .L3409

.L3409:
	call.32     %r15028 <- lua_error, %arg1
	ret.32      %r15028


luaB_setmetatable:
.L3411:
	<entry-point>
	call.32     %r15031 <- lua_type, %arg1, $2
	call        luaL_checktype, %arg1, $1, $5
	seteq.32    %r15034 <- %r15031, $0
	seteq.32    %r15036 <- %r15031, $5
	or-bool.32  %r15037 <- %r15034, %r15036
	br          %r15037, .L3414, .L3413

.L3413:
	symaddr.64  %r15039 <- <anon symbol:0x62d00147bc48>
	call.32     %r15040 <- luaL_argerror, %arg1, $2, %r15039
	br          .L3414

.L3414:
	symaddr.64  %r15043 <- <anon symbol:0x62d00147bfe8>
	call.32     %r15044 <- luaL_getmetafield, %arg1, $1, %r15043
	br          %r15044, .L3415, .L3416

.L3415:
	symaddr.64  %r15046 <- <anon symbol:0x62d00147c388>
	call.32     %r15047 <- luaL_error, %arg1, %r15046
	br          .L3416

.L3416:
	call        lua_settop, %arg1, $2
	call.32     %r15050 <- lua_setmetatable, %arg1, $1
	ret.32      $1


getfunc:
.L3418:
	<entry-point>
	call.32     %r15053 <- lua_type, %arg1, $1
	seteq.32    %r15054 <- %r15053, $6
	br          %r15054, .L3419, .L3420

.L3419:
	call        lua_pushvalue, %arg1, $1
	br          .L3421

.L3420:
	br          %arg2, .L3422, .L3423

.L3422:
	call.64     %r15058 <- luaL_optinteger, %arg1, $1, $1
	scast.32    %r15059 <- (64) %r15058
	phisrc.32   %phi2327 <- %r15059
	br          .L3424

.L3423:
	call.64     %r15061 <- luaL_checkinteger, %arg1, $1
	scast.32    %r15062 <- (64) %r15061
	phisrc.32   %phi2328 <- %r15062
	br          .L3424

.L3424:
	phi.32      %r15063 <- %phi2327, %phi2328
	setge.32    %r15065 <- %r15063, $0
	br          %r15065, .L3427, .L3426

.L3426:
	symaddr.64  %r15067 <- <anon symbol:0x62d00147c728>
	call.32     %r15068 <- luaL_argerror, %arg1, $1, %r15067
	br          .L3427

.L3427:
	symaddr.64  %r15072 <- ar
	call.32     %r15073 <- lua_getstack, %arg1, %r15063, %r15072
	br          %r15073, .L3429, .L3428

.L3428:
	symaddr.64  %r15076 <- <anon symbol:0x62d00147cc98>
	call.32     %r15077 <- luaL_argerror, %arg1, $1, %r15076
	br          .L3429

.L3429:
	symaddr.64  %r15079 <- <anon symbol:0x62d00147d038>
	call.32     %r15081 <- lua_getinfo, %arg1, %r15079, %r15072
	call.32     %r15083 <- lua_type, %arg1, $0xffffffff
	br          %r15083, .L3421, .L3430

.L3430:
	symaddr.64  %r15086 <- <anon symbol:0x62d00147d5a8>
	call.32     %r15088 <- luaL_error, %arg1, %r15086, %r15063
	br          .L3421

.L3421:
	ret


luaB_setfenv:
.L3432:
	<entry-point>
	call        luaL_checktype, %arg1, $2, $5
	call        getfunc, %arg1, $0
	call        lua_pushvalue, %arg1, $2
	call.32     %r15093 <- lua_isnumber, %arg1, $1
	br          %r15093, .L3435, .L3434

.L3435:
	call.64     %r15095 <- lua_tonumber, %arg1, $1
	set.64      %r15096 <- 0.000000
	seteq.32    %r15097 <- %r15095, %r15096
	br          %r15097, .L3433, .L3434

.L3433:
	call.32     %r15099 <- lua_pushthread, %arg1
	call        lua_insert, %arg1, $0xfffffffe
	call.32     %r15102 <- lua_setfenv, %arg1, $0xfffffffe
	phisrc.32   %phi2331(return) <- $0
	br          .L3436

.L3434:
	call.32     %r15105 <- lua_iscfunction, %arg1, $0xfffffffe
	br          %r15105, .L3438, .L3440

.L3440:
	call.32     %r15107 <- lua_setfenv, %arg1, $0xfffffffe
	br          %r15107, .L3437, .L3438

.L3438:
	symaddr.64  %r15110 <- <anon symbol:0x62d00147d948>
	call.32     %r15111 <- luaL_error, %arg1, %r15110
	br          .L3437

.L3437:
	phisrc.32   %phi2332(return) <- $1
	br          .L3436

.L3436:
	phi.32      %r15103 <- %phi2331(return), %phi2332(return)
	ret.32      %r15103


luaB_rawget:
.L3441:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        luaL_checkany, %arg1, $2
	call        lua_settop, %arg1, $2
	call        lua_rawget, %arg1, $1
	ret.32      $1


luaB_type:
.L3443:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.32     %r15121 <- lua_type, %arg1, $1
	call.64     %r15122 <- lua_typename, %arg1, %r15121
	call        lua_pushstring, %arg1, %r15122
	ret.32      $1


luaB_next:
.L3445:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        lua_settop, %arg1, $2
	call.32     %r15127 <- lua_next, %arg1, $1
	select.32   %r15128 <- %r15127, $2, $1
	br          %r15127, .L3448, .L3447

.L3447:
	call        lua_pushnil, %arg1
	br          .L3448

.L3448:
	ret.32      %r15128


luaB_pairs:
.L3450:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        lua_pushvalue, %arg1, $0xffffd8ed
	call        lua_pushvalue, %arg1, $1
	call        lua_pushnil, %arg1
	ret.32      $3


ipairsaux:
.L3452:
	<entry-point>
	call.64     %r15136 <- luaL_checkinteger, %arg1, $2
	scast.32    %r15137 <- (64) %r15136
	call        luaL_checktype, %arg1, $1, $5
	add.32      %r15140 <- %r15137, $1
	scast.64    %r15143 <- (32) %r15140
	call        lua_pushinteger, %arg1, %r15143
	call        lua_rawgeti, %arg1, $1, %r15140
	call.32     %r15147 <- lua_type, %arg1, $0xffffffff
	seteq.32    %r15148 <- %r15147, $0
	select.32   %r15149 <- %r15148, $0, $2
	ret.32      %r15149


luaB_ipairs:
.L3454:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call        lua_pushvalue, %arg1, $0xffffd8ed
	call        lua_pushvalue, %arg1, $1
	call        lua_pushinteger, %arg1, $0
	ret.32      $3


load_aux:
.L3456:
	<entry-point>
	select.32   %r15158 <- %arg2, $2, $1
	br          %arg2, .L3458, .L3459

.L3458:
	call        lua_pushnil, %arg1
	call        lua_insert, %arg1, $0xfffffffe
	br          .L3459

.L3459:
	ret.32      %r15158


luaB_loadstring:
.L3461:
	<entry-point>
	symaddr.64  %r15162 <- l
	call.64     %r15163 <- luaL_checklstring, %arg1, $1, %r15162
	call.64     %r15166 <- luaL_optlstring, %arg1, $2, %r15163, $0
	load.64     %r15170 <- 0[l]
	call.32     %r15172 <- luaL_loadbuffer, %arg1, %r15163, %r15170, %r15166
	call.32     %r15173 <- load_aux, %arg1, %r15172
	ret.32      %r15173


luaB_loadfile:
.L3463:
	<entry-point>
	call.64     %r15176 <- luaL_optlstring, %arg1, $1, $0, $0
	call.32     %r15180 <- luaL_loadfile, %arg1, %r15176
	call.32     %r15181 <- load_aux, %arg1, %r15180
	ret.32      %r15181


luaB_assert:
.L3465:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.32     %r15185 <- lua_toboolean, %arg1, $1
	br          %r15185, .L3467, .L3466

.L3466:
	symaddr.64  %r15187 <- <anon symbol:0x62d00147deb8>
	symaddr.64  %r15189 <- <anon symbol:0x62d00147e258>
	call.64     %r15190 <- luaL_optlstring, %arg1, $2, %r15189, $0
	call.32     %r15191 <- luaL_error, %arg1, %r15187, %r15190
	phisrc.32   %phi2344(return) <- %r15191
	br          .L3468

.L3467:
	call.32     %r15194 <- lua_gettop, %arg1
	phisrc.32   %phi2345(return) <- %r15194
	br          .L3468

.L3468:
	phi.32      %r15192 <- %phi2344(return), %phi2345(return)
	ret.32      %r15192


luaB_unpack:
.L3469:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15197 <- luaL_optinteger, %arg1, $2, $1
	scast.32    %r15198(i) <- (64) %r15197
	call.32     %r15200 <- lua_type, %arg1, $3
	setle.32    %r15201 <- %r15200, $0
	br          %r15201, .L3470, .L3471

.L3470:
	call.64     %r15203 <- lua_objlen, %arg1, $1
	cast.32     %r15204 <- (64) %r15203
	phisrc.32   %phi2346 <- %r15204
	br          .L3472

.L3471:
	call.64     %r15206 <- luaL_checkinteger, %arg1, $3
	scast.32    %r15207 <- (64) %r15206
	phisrc.32   %phi2347 <- %r15207
	br          .L3472

.L3472:
	phi.32      %r15208 <- %phi2346, %phi2347
	setgt.32    %r15211 <- %r15198(i), %r15208
	br          %r15211, .L3473, .L3474

.L3473:
	phisrc.32   %phi2348(return) <- $0
	br          .L3475

.L3474:
	sub.32      %r15215 <- %r15208, %r15198(i)
	add.32      %r15216 <- %r15215, $1
	setle.32    %r15218 <- %r15216, $0
	br          %r15218, .L3476, .L3478

.L3478:
	call.32     %r15221 <- lua_checkstack, %arg1, %r15216
	br          %r15221, .L3477, .L3476

.L3476:
	symaddr.64  %r15223 <- <anon symbol:0x62d00147e5f8>
	call.32     %r15224 <- luaL_error, %arg1, %r15223
	phisrc.32   %phi2349(return) <- %r15224
	br          .L3475

.L3477:
	call        lua_rawgeti, %arg1, $1, %r15198(i)
	phisrc.32   %phi2352(i) <- %r15198(i)
	br          .L3482

.L3482:
	phi.32      %r15227 <- %phi2352(i), %phi2353(i)
	add.32      %r15228(i) <- %r15227, $1
	setlt.32    %r15230 <- %r15227, %r15208
	phisrc.32   %phi2353(i) <- %r15228(i)
	br          %r15230, .L3479, .L3481

.L3479:
	call        lua_rawgeti, %arg1, $1, %r15228(i)
	br          .L3482

.L3481:
	phisrc.32   %phi2350(return) <- %r15216
	br          .L3475

.L3475:
	phi.32      %r15212 <- %phi2348(return), %phi2349(return), %phi2350(return)
	ret.32      %r15212


luaB_pcall:
.L3483:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.32     %r15237 <- lua_gettop, %arg1
	add.32      %r15238 <- %r15237, $-1
	call.32     %r15239 <- lua_pcall, %arg1, %r15238, $0xffffffff, $0
	seteq.32    %r15242 <- %r15239, $0
	call        lua_pushboolean, %arg1, %r15242
	call        lua_insert, %arg1, $1
	call.32     %r15245 <- lua_gettop, %arg1
	ret.32      %r15245


luaB_newproxy:
.L3485:
	<entry-point>
	call        lua_settop, %arg1, $1
	call.64     %r15249 <- lua_newuserdata, %arg1, $0
	call.32     %r15251 <- lua_toboolean, %arg1, $1
	br          %r15251, .L3487, .L3488

.L3487:
	call.32     %r15255 <- lua_type, %arg1, $1
	seteq.32    %r15256 <- %r15255, $1
	br          %r15256, .L3490, .L3491

.L3490:
	call        lua_createtable, %arg1, $0, $0
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_pushboolean, %arg1, $1
	call        lua_rawset, %arg1, $0xffffd8ed
	br          .L3489

.L3491:
	call.32     %r15262 <- lua_getmetatable, %arg1, $1
	br          %r15262, .L3493, .L3496

.L3493:
	call        lua_rawget, %arg1, $0xffffd8ed
	call.32     %r15265 <- lua_toboolean, %arg1, $0xffffffff
	call        lua_settop, %arg1, $0xfffffffe
	br          %r15265, .L3497, .L3496

.L3496:
	symaddr.64  %r15269 <- <anon symbol:0x62d00147e998>
	call.32     %r15270 <- luaL_argerror, %arg1, $1, %r15269
	br          .L3497

.L3497:
	call.32     %r15273 <- lua_getmetatable, %arg1, $1
	br          .L3489

.L3489:
	call.32     %r15275 <- lua_setmetatable, %arg1, $2
	br          .L3488

.L3488:
	ret.32      $1


auxopen:
.L3498:
	<entry-point>
	call        lua_pushcclosure, %arg1, %arg4, $0
	call        lua_pushcclosure, %arg1, %arg3, $1
	call        lua_setfield, %arg1, $0xfffffffe, %arg2
	ret


base_open:
.L3500:
	<entry-point>
	call        lua_pushvalue, %arg1, $0xffffd8ee
	symaddr.64  %r15284 <- <anon symbol:0x62d00147ed38>
	call        lua_setfield, %arg1, $0xffffd8ee, %r15284
	symaddr.64  %r15286 <- <anon symbol:0x62d00147f0d8>
	symaddr.64  %r15287 <- base_funcs
	call        luaL_register, %arg1, %r15286, %r15287
	symaddr.64  %r15289 <- <anon symbol:0x62d00147f648>
	call        lua_pushlstring, %arg1, %r15289, $7
	symaddr.64  %r15291 <- <anon symbol:0x62d00147fbb8>
	call        lua_setfield, %arg1, $0xffffd8ee, %r15291
	symaddr.64  %r15293 <- <anon symbol:0x62d00147ff58>
	symaddr.64  %r15294 <- luaB_ipairs
	symaddr.64  %r15295 <- ipairsaux
	call        auxopen, %arg1, %r15293, %r15294, %r15295
	symaddr.64  %r15297 <- <anon symbol:0x62d00148c6d0>
	symaddr.64  %r15298 <- luaB_pairs
	symaddr.64  %r15299 <- luaB_next
	call        auxopen, %arg1, %r15297, %r15298, %r15299
	call        lua_createtable, %arg1, $0, $1
	call        lua_pushvalue, %arg1, $0xffffffff
	call.32     %r15303 <- lua_setmetatable, %arg1, $0xfffffffe
	symaddr.64  %r15305 <- <anon symbol:0x62d00148ce10>
	call        lua_pushlstring, %arg1, %r15305, $2
	symaddr.64  %r15307 <- <anon symbol:0x62d00148d380>
	call        lua_setfield, %arg1, $0xfffffffe, %r15307
	symaddr.64  %r15309 <- luaB_newproxy
	call        lua_pushcclosure, %arg1, %r15309, $1
	symaddr.64  %r15311 <- <anon symbol:0x62d00148d8f0>
	call        lua_setfield, %arg1, $0xffffd8ee, %r15311
	ret


luaopen_base:
.L3502:
	<entry-point>
	call        base_open, %arg1
	ret.32      $1


tinsert:
.L3504:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15316 <- lua_objlen, %arg1, $1
	cast.32     %r15317 <- (64) %r15316
	add.32      %r15318(e) <- %r15317, $1
	call.32     %r15320 <- lua_gettop, %arg1
	switch      %r15320, 2 -> .L3506, 3 -> .L3507, default -> .L3508

.L3506:
	phisrc.32   %phi2371(pos) <- %r15318(e)
	br          .L3505

.L3507:
	call.64     %r15323 <- luaL_checkinteger, %arg1, $2
	scast.32    %r15324 <- (64) %r15323
	setgt.32    %r15327 <- %r15324, %r15318(e)
	select.32   %r15329(i) <- %r15327, %r15324, %r15318(e)
	phisrc.32   %phi2378(i) <- %r15329(i)
	br          .L3514

.L3514:
	phi.32      %r15330(i) <- %phi2378(i), %phi2379(i)
	setgt.32    %r15332 <- %r15330(i), %r15324
	phisrc.32   %phi2372(pos) <- %r15324
	br          %r15332, .L3511, .L3505

.L3511:
	add.32      %r15335 <- %r15330(i), $-1
	call        lua_rawgeti, %arg1, $1, %r15335
	call        lua_rawseti, %arg1, $1, %r15330(i)
	phisrc.32   %phi2379(i) <- %r15335
	br          .L3514

.L3508:
	symaddr.64  %r15341 <- <anon symbol:0x62d00148dc90>
	call.32     %r15342 <- luaL_error, %arg1, %r15341
	phisrc.32   %phi2365(return) <- %r15342
	br          .L3515

.L3505:
	phi.32      %r15345 <- %phi2371(pos), %phi2372(pos)
	call        lua_rawseti, %arg1, $1, %r15345
	phisrc.32   %phi2366(return) <- $0
	br          .L3515

.L3515:
	phi.32      %r15343 <- %phi2365(return), %phi2366(return)
	ret.32      %r15343


tremove:
.L3516:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15348 <- lua_objlen, %arg1, $1
	cast.32     %r15349 <- (64) %r15348
	scast.64    %r15352 <- (32) %r15349
	call.64     %r15353 <- luaL_optinteger, %arg1, $2, %r15352
	scast.32    %r15354 <- (64) %r15353
	setle.32    %r15356 <- $1, %r15354
	setle.32    %r15359 <- %r15354, %r15349
	and-bool.32 %r15360 <- %r15356, %r15359
	br          %r15360, .L3518, .L3517

.L3517:
	phisrc.32   %phi2380(return) <- $0
	br          .L3519

.L3518:
	call        lua_rawgeti, %arg1, $1, %r15354
	phisrc.32   %phi2384(pos) <- %r15354
	br          .L3523

.L3523:
	phi.32      %r15364(pos) <- %phi2384(pos), %phi2385(pos)
	setlt.32    %r15366 <- %r15364(pos), %r15349
	br          %r15366, .L3520, .L3522

.L3520:
	add.32      %r15369 <- %r15364(pos), $1
	call        lua_rawgeti, %arg1, $1, %r15369
	call        lua_rawseti, %arg1, $1, %r15364(pos)
	phisrc.32   %phi2385(pos) <- %r15369
	br          .L3523

.L3522:
	call        lua_pushnil, %arg1
	call        lua_rawseti, %arg1, $1, %r15349
	phisrc.32   %phi2381(return) <- $1
	br          .L3519

.L3519:
	phi.32      %r15361 <- %phi2380(return), %phi2381(return)
	ret.32      %r15361


addfield:
.L3524:
	<entry-point>
	call        lua_rawgeti, %arg1, $1, %arg3
	call.32     %r15380 <- lua_isstring, %arg1, $0xffffffff
	br          %r15380, .L3526, .L3525

.L3525:
	symaddr.64  %r15382 <- <anon symbol:0x62d00148e030>
	call.32     %r15385 <- lua_type, %arg1, $0xffffffff
	call.64     %r15386 <- lua_typename, %arg1, %r15385
	call.32     %r15388 <- luaL_error, %arg1, %r15382, %r15386, %arg3
	br          .L3526

.L3526:
	call        luaL_addvalue, %arg2
	ret


tconcat:
.L3528:
	<entry-point>
	symaddr.64  %r15391 <- <anon symbol:0x62d00148e3d0>
	symaddr.64  %r15392 <- lsep
	call.64     %r15393 <- luaL_optlstring, %arg1, $2, %r15391, %r15392
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15396 <- luaL_optinteger, %arg1, $3, $1
	scast.32    %r15397(i) <- (64) %r15396
	call.32     %r15399 <- lua_type, %arg1, $4
	setle.32    %r15400 <- %r15399, $0
	phisrc.32   %phi2394(i) <- %r15397(i)
	br          %r15400, .L3529, .L3530

.L3529:
	call.64     %r15402 <- lua_objlen, %arg1, $1
	cast.32     %r15403 <- (64) %r15402
	phisrc.32   %phi2387 <- %r15403
	br          .L3531

.L3530:
	call.64     %r15405 <- luaL_checkinteger, %arg1, $4
	scast.32    %r15406 <- (64) %r15405
	phisrc.32   %phi2388 <- %r15406
	br          .L3531

.L3531:
	phi.32      %r15407 <- %phi2387, %phi2388
	symaddr.64  %r15409 <- b
	call        luaL_buffinit, %arg1, %r15409
	br          .L3535

.L3535:
	phi.32      %r15410(i) <- %phi2394(i), %phi2395(i)
	setlt.32    %r15412 <- %r15410(i), %r15407
	br          %r15412, .L3532, .L3534

.L3532:
	call        addfield, %arg1, %r15409, %r15410(i)
	load.64     %r15418 <- 0[lsep]
	call        luaL_addlstring, %r15409, %r15393, %r15418
	add.32      %r15420 <- %r15410(i), $1
	phisrc.32   %phi2395(i) <- %r15420
	br          .L3535

.L3534:
	seteq.32    %r15423 <- %r15410(i), %r15407
	br          %r15423, .L3536, .L3537

.L3536:
	call        addfield, %arg1, %r15409, %r15410(i)
	br          .L3537

.L3537:
	call        luaL_pushresult, %r15409
	ret.32      $1


set2:
.L3539:
	<entry-point>
	call        lua_rawseti, %arg1, $1, %arg2
	call        lua_rawseti, %arg1, $1, %arg3
	ret


sort_comp:
.L3541:
	<entry-point>
	call.32     %r15434 <- lua_type, %arg1, $2
	br          %r15434, .L3542, .L3543

.L3542:
	call        lua_pushvalue, %arg1, $2
	add.32      %r15439 <- %arg2, $-1
	call        lua_pushvalue, %arg1, %r15439
	add.32      %r15442 <- %arg3, $-2
	call        lua_pushvalue, %arg1, %r15442
	call        lua_call, %arg1, $2, $1
	call.32     %r15445 <- lua_toboolean, %arg1, $0xffffffff
	call        lua_settop, %arg1, $0xfffffffe
	phisrc.32   %phi2396(return) <- %r15445
	br          .L3544

.L3543:
	call.32     %r15452 <- lua_lessthan, %arg1, %arg2, %arg3
	phisrc.32   %phi2397(return) <- %r15452
	br          .L3544

.L3544:
	phi.32      %r15448 <- %phi2396(return), %phi2397(return)
	ret.32      %r15448


auxsort:
.L3546:
	<entry-point>
	phisrc.32   %phi2411(l) <- %arg2
	phisrc.32   %phi2428(u) <- %arg3
	br          .L3550

.L3550:
	phi.32      %r15453(l) <- %phi2411(l), %phi2412(l)
	phi.32      %r15454(u) <- %phi2428(u), %phi2429(u)
	setlt.32    %r15455 <- %r15453(l), %r15454(u)
	br          %r15455, .L3547, .L3549

.L3547:
	call        lua_rawgeti, %arg1, $1, %r15453(l)
	call        lua_rawgeti, %arg1, $1, %r15454(u)
	call.32     %r15461 <- sort_comp, %arg1, $0xffffffff, $0xfffffffe
	br          %r15461, .L3551, .L3552

.L3551:
	call        set2, %arg1, %r15453(l), %r15454(u)
	br          .L3553

.L3552:
	call        lua_settop, %arg1, $0xfffffffd
	br          .L3553

.L3553:
	sub.32      %r15468 <- %r15454(u), %r15453(l)
	seteq.32    %r15469 <- %r15468, $1
	br          %r15469, .L3549, .L3555

.L3555:
	add.32      %r15472 <- %r15453(l), %r15454(u)
	divs.32     %r15473 <- %r15472, $2
	call        lua_rawgeti, %arg1, $1, %r15473
	call        lua_rawgeti, %arg1, $1, %r15453(l)
	call.32     %r15479 <- sort_comp, %arg1, $0xfffffffe, $0xffffffff
	br          %r15479, .L3556, .L3557

.L3556:
	call        set2, %arg1, %r15473, %r15453(l)
	br          .L3558

.L3557:
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_rawgeti, %arg1, $1, %r15454(u)
	call.32     %r15487 <- sort_comp, %arg1, $0xffffffff, $0xfffffffe
	br          %r15487, .L3559, .L3560

.L3559:
	call        set2, %arg1, %r15473, %r15454(u)
	br          .L3558

.L3560:
	call        lua_settop, %arg1, $0xfffffffd
	br          .L3558

.L3558:
	seteq.32    %r15495 <- %r15468, $2
	br          %r15495, .L3549, .L3563

.L3563:
	call        lua_rawgeti, %arg1, $1, %r15473
	call        lua_pushvalue, %arg1, $0xffffffff
	add.32      %r15501 <- %r15454(u), $-1
	call        lua_rawgeti, %arg1, $1, %r15501
	call        set2, %arg1, %r15473, %r15501
	phisrc.32   %phi2438(i) <- %r15453(l)
	phisrc.32   %phi2450(j) <- %r15501
	br          .L3571

.L3571:
	phi.32      %r15510 <- %phi2438(i), %phi2439(i)
	add.32      %r15511(i) <- %r15510, $1
	call        lua_rawgeti, %arg1, $1, %r15511(i)
	call.32     %r15513 <- sort_comp, %arg1, $0xffffffff, $0xfffffffe
	phisrc.32   %phi2439(i) <- %r15511(i)
	br          %r15513, .L3568, .L3577

.L3568:
	setgt.32    %r15516 <- %r15511(i), %r15454(u)
	br          %r15516, .L3572, .L3573

.L3572:
	symaddr.64  %r15518 <- <anon symbol:0x62d00148f250>
	call.32     %r15519 <- luaL_error, %arg1, %r15518
	br          .L3573

.L3573:
	call        lua_settop, %arg1, $0xfffffffe
	br          .L3571

.L3577:
	phi.32      %r15522 <- %phi2450(j), %phi2451(j)
	add.32      %r15523(j) <- %r15522, $-1
	call        lua_rawgeti, %arg1, $1, %r15523(j)
	call.32     %r15525 <- sort_comp, %arg1, $0xfffffffd, $0xffffffff
	phisrc.32   %phi2451(j) <- %r15523(j)
	br          %r15525, .L3574, .L3576

.L3574:
	setlt.32    %r15528 <- %r15523(j), %r15453(l)
	br          %r15528, .L3578, .L3579

.L3578:
	symaddr.64  %r15530 <- <anon symbol:0x62d00148f5f0>
	call.32     %r15531 <- luaL_error, %arg1, %r15530
	br          .L3579

.L3579:
	call        lua_settop, %arg1, $0xfffffffe
	br          .L3577

.L3576:
	setlt.32    %r15535 <- %r15523(j), %r15511(i)
	br          %r15535, .L3580, .L3581

.L3580:
	call        lua_settop, %arg1, $0xfffffffc
	call        lua_rawgeti, %arg1, $1, %r15501
	call        lua_rawgeti, %arg1, $1, %r15511(i)
	call        set2, %arg1, %r15501, %r15511(i)
	sub.32      %r15551 <- %r15511(i), %r15453(l)
	sub.32      %r15554 <- %r15454(u), %r15511(i)
	setlt.32    %r15555 <- %r15551, %r15554
	br          %r15555, .L3582, .L3583

.L3581:
	call        set2, %arg1, %r15511(i), %r15523(j)
	br          .L3571

.L3582:
	add.32      %r15558 <- %r15511(i), $-1
	add.32      %r15560 <- %r15558, $2
	phisrc.32   %phi2412(l) <- %r15560
	phisrc.32   %phi2430(i) <- %r15558
	phisrc.32   %phi2445(j) <- %r15453(l)
	br          .L3584

.L3583:
	add.32      %r15562 <- %r15511(i), $1
	add.32      %r15565 <- %r15562, $-2
	phisrc.32   %phi2429(u) <- %r15565
	phisrc.32   %phi2431(i) <- %r15454(u)
	phisrc.32   %phi2446(j) <- %r15562
	br          .L3584

.L3584:
	phi.32      %r15567 <- %phi2445(j), %phi2446(j)
	phi.32      %r15568 <- %phi2430(i), %phi2431(i)
	call        auxsort, %arg1, %r15567, %r15568
	br          .L3550

.L3549:
	ret


sort:
.L3585:
	<entry-point>
	call        luaL_checktype, %arg1, $1, $5
	call.64     %r15571 <- lua_objlen, %arg1, $1
	cast.32     %r15572 <- (64) %r15571
	symaddr.64  %r15574 <- <anon symbol:0x62d00148f990>
	call        luaL_checkstack, %arg1, $40, %r15574
	call.32     %r15576 <- lua_type, %arg1, $2
	setle.32    %r15577 <- %r15576, $0
	br          %r15577, .L3587, .L3586

.L3586:
	call        luaL_checktype, %arg1, $2, $6
	br          .L3587

.L3587:
	call        lua_settop, %arg1, $2
	call        auxsort, %arg1, $1, %r15572
	ret.32      $0


luaopen_table:
.L3589:
	<entry-point>
	symaddr.64  %r15584 <- <anon symbol:0x62d00148fd30>
	symaddr.64  %r15585 <- tab_funcs
	call        luaL_register, %arg1, %r15584, %r15585
	ret.32      $1


pushresult:
.L3591:
	<entry-point>
	call.64     %r15587 <- __errno_location
	load.32     %r15588 <- 0[%r15587]
	br          %arg2, .L3592, .L3593

.L3592:
	call        lua_pushboolean, %arg1, $1
	phisrc.32   %phi2454(return) <- $1
	br          .L3594

.L3593:
	call        lua_pushnil, %arg1
	br          %arg3, .L3596, .L3597

.L3596:
	symaddr.64  %r15595 <- <anon symbol:0x62d001490388>
	call.64     %r15598 <- strerror, %r15588
	call.64     %r15599 <- lua_pushfstring, %arg1, %r15595, %arg3, %r15598
	br          .L3598

.L3597:
	symaddr.64  %r15601 <- <anon symbol:0x62d001490728>
	call.64     %r15603 <- strerror, %r15588
	call.64     %r15604 <- lua_pushfstring, %arg1, %r15601, %r15603
	br          .L3598

.L3598:
	scast.64    %r15607 <- (32) %r15588
	call        lua_pushinteger, %arg1, %r15607
	phisrc.32   %phi2455(return) <- $3
	br          .L3594

.L3594:
	phi.32      %r15591 <- %phi2454(return), %phi2455(return)
	ret.32      %r15591


fileerror:
.L3599:
	<entry-point>
	symaddr.64  %r15609 <- <anon symbol:0x62d001490ac8>
	call.64     %r15611 <- __errno_location
	load.32     %r15612 <- 0[%r15611]
	call.64     %r15613 <- strerror, %r15612
	call.64     %r15614 <- lua_pushfstring, %arg1, %r15609, %arg3, %r15613
	call.64     %r15618 <- lua_tolstring, %arg1, $0xffffffff, $0
	call.32     %r15619 <- luaL_argerror, %arg1, %arg2, %r15618
	ret


io_type:
.L3601:
	<entry-point>
	call        luaL_checkany, %arg1, $1
	call.64     %r15622 <- lua_touserdata, %arg1, $1
	symaddr.64  %r15624 <- <anon symbol:0x62d001490f50>
	call        lua_getfield, %arg1, $0xffffd8f0, %r15624
	br          %r15622, .L3605, .L3602

.L3605:
	call.32     %r15628 <- lua_getmetatable, %arg1, $1
	br          %r15628, .L3604, .L3602

.L3604:
	call.32     %r15630 <- lua_rawequal, %arg1, $0xfffffffe, $0xffffffff
	br          %r15630, .L3603, .L3602

.L3602:
	call        lua_pushnil, %arg1
	br          .L3610

.L3603:
	ptrcast.64  %r15633 <- (64) %r15622
	load.64     %r15634 <- 0[%r15633]
	br          %r15634, .L3608, .L3607

.L3607:
	symaddr.64  %r15637 <- <anon symbol:0x62d0014913d8>
	call        lua_pushlstring, %arg1, %r15637, $11
	br          .L3610

.L3608:
	symaddr.64  %r15639 <- <anon symbol:0x62d001491948>
	call        lua_pushlstring, %arg1, %r15639, $4
	br          .L3610

.L3610:
	ret.32      $1


tofile:
.L3611:
	<entry-point>
	symaddr.64  %r15642 <- <anon symbol:0x62d001491eb8>
	call.64     %r15643 <- luaL_checkudata, %arg1, $1, %r15642
	ptrcast.64  %r15644 <- (64) %r15643
	load.64     %r15646 <- 0[%r15644]
	phisrc.64   %phi2458 <- %r15646
	phisrc.64   %phi2459 <- %r15646
	br          %r15646, .L3613, .L3612

.L3612:
	symaddr.64  %r15649 <- <anon symbol:0x62d001492340>
	call.32     %r15650 <- luaL_error, %arg1, %r15649
	br          .L3613

.L3613:
	load.64     %r15652 <- 0[%r15644]
	ret.64      %r15652


newfile:
.L3615:
	<entry-point>
	call.64     %r15655 <- lua_newuserdata, %arg1, $8
	ptrcast.64  %r15656 <- (64) %r15655
	store.64    $0 -> 0[%r15656]
	symaddr.64  %r15659 <- <anon symbol:0x62d0014928b0>
	call        lua_getfield, %arg1, $0xffffd8f0, %r15659
	call.32     %r15661 <- lua_setmetatable, %arg1, $0xfffffffe
	ret.64      %r15656


io_noclose:
.L3617:
	<entry-point>
	call        lua_pushnil, %arg1
	symaddr.64  %r15666 <- <anon symbol:0x62d001492c50>
	call        lua_pushlstring, %arg1, %r15666, $26
	ret.32      $2


io_pclose:
.L3619:
	<entry-point>
	symaddr.64  %r15669 <- <anon symbol:0x62d0014931c0>
	call.64     %r15670 <- luaL_checkudata, %arg1, $1, %r15669
	ptrcast.64  %r15671 <- (64) %r15670
	load.64     %r15674 <- 0[%r15671]
	store.64    $0 -> 0[%r15671]
	call.32     %r15678 <- pushresult, %arg1, $0, $0
	ret.32      %r15678


io_fclose:
.L3621:
	<entry-point>
	symaddr.64  %r15681 <- <anon symbol:0x62d001493730>
	call.64     %r15682 <- luaL_checkudata, %arg1, $1, %r15681
	ptrcast.64  %r15683 <- (64) %r15682
	load.64     %r15685 <- 0[%r15683]
	call.32     %r15686 <- fclose, %r15685
	seteq.32    %r15687 <- %r15686, $0
	store.64    $0 -> 0[%r15683]
	call.32     %r15691 <- pushresult, %arg1, %r15687, $0
	ret.32      %r15691


aux_close:
.L3623:
	<entry-point>
	call        lua_getfenv, %arg1, $1
	symaddr.64  %r15695 <- <anon symbol:0x62d001493ca0>
	call        lua_getfield, %arg1, $0xffffffff, %r15695
	call.64     %r15699 <- lua_tocfunction, %arg1, $0xffffffff
	call.32     %r15700 <- %r15699, %arg1
	ret.32      %r15700


io_close:
.L3625:
	<entry-point>
	call.32     %r15703 <- lua_type, %arg1, $1
	seteq.32    %r15704 <- %r15703, $0xffffffff
	br          %r15704, .L3626, .L3627

.L3626:
	call        lua_rawgeti, %arg1, $0xffffd8ef, $2
	br          .L3627

.L3627:
	call.64     %r15707 <- tofile, %arg1
	call.32     %r15709 <- aux_close, %arg1
	ret.32      %r15709


io_gc:
.L3629:
	<entry-point>
	symaddr.64  %r15712 <- <anon symbol:0x62d001494040>
	call.64     %r15713 <- luaL_checkudata, %arg1, $1, %r15712
	ptrcast.64  %r15714 <- (64) %r15713
	load.64     %r15715 <- 0[%r15714]
	br          %r15715, .L3630, .L3632

.L3630:
	call.32     %r15719 <- aux_close, %arg1
	br          .L3632

.L3632:
	ret.32      $0


io_open:
.L3633:
	<entry-point>
	call.64     %r15722 <- luaL_checklstring, %arg1, $1, $0
	symaddr.64  %r15724 <- <anon symbol:0x62d001496500>
	call.64     %r15725 <- luaL_optlstring, %arg1, $2, %r15724, $0
	call.64     %r15727 <- newfile, %arg1
	call.64     %r15730 <- fopen, %r15722, %r15725
	store.64    %r15730 -> 0[%r15727]
	br          %r15730, .L3636, .L3635

.L3635:
	call.32     %r15737 <- pushresult, %arg1, $0, %r15722
	phisrc.32   %phi2467 <- %r15737
	br          .L3637

.L3636:
	phisrc.32   %phi2468 <- $1
	br          .L3637

.L3637:
	phi.32      %r15738 <- %phi2467, %phi2468
	ret.32      %r15738


getiofile:
.L3638:
	<entry-point>
	call        lua_rawgeti, %arg1, $0xffffd8ef, %arg2
	call.64     %r15743 <- lua_touserdata, %arg1, $0xffffffff
	ptrcast.64  %r15744 <- (64) %r15743
	load.64     %r15745 <- 0[%r15744]
	br          %r15745, .L3641, .L3639

.L3639:
	symaddr.64  %r15749 <- <anon symbol:0x62d001496b58>
	symaddr.64  %r15750 <- fnames
	add.32      %r15752 <- %arg2, $-1
	scast.64    %r15753 <- (32) %r15752
	muls.64     %r15754 <- %r15753, $8
	add.64      %r15755 <- %r15750, %r15754
	load.64     %r15756 <- 0[%r15755]
	call.32     %r15757 <- luaL_error, %arg1, %r15749, %r15756
	br          .L3641

.L3641:
	ret.64      %r15745


g_iofile:
.L3642:
	<entry-point>
	call.32     %r15761 <- lua_type, %arg1, $1
	setle.32    %r15762 <- %r15761, $0
	br          %r15762, .L3644, .L3643

.L3643:
	call.64     %r15764 <- lua_tolstring, %arg1, $1, $0
	br          %r15764, .L3645, .L3646

.L3645:
	call.64     %r15767 <- newfile, %arg1
	call.64     %r15770 <- fopen, %r15764, %arg3
	store.64    %r15770 -> 0[%r15767]
	br          %r15770, .L3649, .L3647

.L3647:
	call        fileerror, %arg1, $1, %r15764
	br          .L3649

.L3646:
	call.64     %r15778 <- tofile, %arg1
	call        lua_pushvalue, %arg1, $1
	br          .L3649

.L3649:
	call        lua_rawseti, %arg1, $0xffffd8ef, %arg2
	br          .L3644

.L3644:
	call        lua_rawgeti, %arg1, $0xffffd8ef, %arg2
	ret.32      $1


io_input:
.L3651:
	<entry-point>
	symaddr.64  %r15786 <- <anon symbol:0x62d001497380>
	call.32     %r15787 <- g_iofile, %arg1, $1, %r15786
	ret.32      %r15787


io_output:
.L3653:
	<entry-point>
	symaddr.64  %r15790 <- <anon symbol:0x62d001497720>
	call.32     %r15791 <- g_iofile, %arg1, $2, %r15790
	ret.32      %r15791


aux_lines:
.L3655:
	<entry-point>
	call        lua_pushvalue, %arg1, %arg2
	call        lua_pushboolean, %arg1, %arg3
	symaddr.64  %r15798 <- io_readline
	call        lua_pushcclosure, %arg1, %r15798, $2
	ret


f_lines:
.L3657:
	<entry-point>
	call.64     %r15800 <- tofile, %arg1
	call        aux_lines, %arg1, $1, $0
	ret.32      $1


io_lines:
.L3659:
	<entry-point>
	call.32     %r15804 <- lua_type, %arg1, $1
	setle.32    %r15805 <- %r15804, $0
	br          %r15805, .L3660, .L3661

.L3660:
	call        lua_rawgeti, %arg1, $0xffffd8ef, $1
	call.32     %r15808 <- f_lines, %arg1
	phisrc.32   %phi2475(return) <- %r15808
	br          .L3662

.L3661:
	call.64     %r15811 <- luaL_checklstring, %arg1, $1, $0
	call.64     %r15813 <- newfile, %arg1
	symaddr.64  %r15815 <- <anon symbol:0x62d001498688>
	call.64     %r15816 <- fopen, %r15811, %r15815
	store.64    %r15816 -> 0[%r15813]
	br          %r15816, .L3665, .L3664

.L3664:
	call        fileerror, %arg1, $1, %r15811
	br          .L3665

.L3665:
	call.32     %r15825 <- lua_gettop, %arg1
	call        aux_lines, %arg1, %r15825, $1
	phisrc.32   %phi2476(return) <- $1
	br          .L3662

.L3662:
	phi.32      %r15809 <- %phi2475(return), %phi2476(return)
	ret.32      %r15809


read_number:
.L3666:
	<entry-point>
	symaddr.64  %r15827 <- <anon symbol:0x62d001498b10>
	symaddr.64  %r15828 <- d
	call.32     %r15829 <- fscanf, %arg2, %r15827, %r15828
	seteq.32    %r15830 <- %r15829, $1
	br          %r15830, .L3667, .L3668

.L3667:
	load.64     %r15832 <- 0[d]
	call        lua_pushnumber, %arg1, %r15832
	br          .L3669

.L3668:
	call        lua_pushnil, %arg1
	br          .L3669

.L3669:
	ret.32      %r15830


test_eof:
.L3671:
	<entry-point>
	call.32     %r15836 <- _IO_getc, %arg2
	call.32     %r15839 <- ungetc, %r15836, %arg2
	call        lua_pushlstring, %arg1, $0, $0
	setne.32    %r15842 <- %r15836, $0xffffffff
	ret.32      %r15842


read_line:
.L3673:
	<entry-point>
	symaddr.64  %r15845 <- b
	call        luaL_buffinit, %arg1, %r15845
	br          .L3674

.L3674:
	call.64     %r15847 <- luaL_prepbuffer, %r15845
	call.64     %r15850 <- fgets, %r15847, $0x2000, %arg2
	br          %r15850, .L3679, .L3678

.L3678:
	call        luaL_pushresult, %r15845
	call.64     %r15854 <- lua_objlen, %arg1, $0xffffffff
	seta.32     %r15855 <- %r15854, $0
	phisrc.32   %phi2480(return) <- %r15855
	br          .L3680

.L3679:
	call.64     %r15858 <- strlen, %r15847
	br          %r15858, .L3683, .L3681

.L3683:
	add.64      %r15863 <- %r15858, $-1
	add.64      %r15864 <- %r15847, %r15863
	load.8      %r15865 <- 0[%r15864]
	scast.32    %r15866 <- (8) %r15865
	setne.32    %r15867 <- %r15866, $10
	br          %r15867, .L3681, .L3682

.L3681:
	load.64     %r15869 <- 0[b]
	cast.64     %r15870 <- (64) %r15869
	add.64      %r15871 <- %r15870, %r15858
	ptrcast.64  %r15872 <- (64) %r15871
	store.64    %r15872 -> 0[b]
	br          .L3674

.L3682:
	load.64     %r15875 <- 0[b]
	cast.64     %r15876 <- (64) %r15875
	add.64      %r15877 <- %r15876, %r15863
	ptrcast.64  %r15878 <- (64) %r15877
	store.64    %r15878 -> 0[b]
	call        luaL_pushresult, %r15845
	phisrc.32   %phi2481(return) <- $1
	br          .L3680

.L3680:
	phi.32      %r15856 <- %phi2480(return), %phi2481(return)
	ret.32      %r15856


read_chars:
.L3685:
	<entry-point>
	symaddr.64  %r15881 <- b
	call        luaL_buffinit, %arg1, %r15881
	phisrc.64   %phi2490(n) <- %arg3
	phisrc.64   %phi2495(rlen) <- $0x2000
	br          .L3686

.L3686:
	call.64     %r15883 <- luaL_prepbuffer, %r15881
	phi.64      %r15884(rlen) <- %phi2495(rlen), %phi2496(rlen)
	phi.64      %r15885(n) <- %phi2490(n), %phi2491(n)
	seta.32     %r15886 <- %r15884(rlen), %r15885(n)
	select.64   %r15890(rlen) <- %r15886, %r15885(n), %r15884(rlen)
	br          %r15886, .L3689, .L3690

.L3689:
	phisrc.64   %phi2496(rlen) <- %r15885(n)
	br          .L3690

.L3690:
	cast.64     %r15889 <- (64) %r15883
	call.64     %r15892 <- fread, %r15889, $1, %r15890(rlen), %arg2
	load.64     %r15894 <- 0[b]
	cast.64     %r15895 <- (64) %r15894
	add.64      %r15896 <- %r15895, %r15892
	ptrcast.64  %r15897 <- (64) %r15896
	store.64    %r15897 -> 0[b]
	sub.64      %r15901 <- %r15885(n), %r15892
	phisrc.64   %phi2491(n) <- %r15901
	seta.32     %r15904 <- %r15901, $0
	seteq.32    %r15907 <- %r15892, %r15890(rlen)
	and-bool.32 %r15908 <- %r15904, %r15907
	br          %r15908, .L3686, .L3688

.L3688:
	call        luaL_pushresult, %r15881
	br          %r15901, .L3693, .L3692

.L3692:
	phisrc.32   %phi2482 <- $1
	br          .L3694

.L3693:
	call.64     %r15913 <- lua_objlen, %arg1, $0xffffffff
	seta.32     %r15914 <- %r15913, $0
	phisrc.32   %phi2483 <- %r15914
	br          .L3694

.L3694:
	phi.32      %r15915 <- %phi2482, %phi2483
	ret.32      %r15915


g_read:
.L3695:
	<entry-point>
	call.32     %r15918 <- lua_gettop, %arg1
	add.32      %r15919 <- %r15918, $-1
	call        clearerr, %arg2
	br          %r15919, .L3697, .L3696

.L3696:
	call.32     %r15925(success) <- read_line, %arg1, %arg2
	add.32      %r15927(n) <- %arg3, $1
	phisrc.32   %phi2507(success) <- %r15925(success)
	phisrc.32   %phi2514(n) <- %r15927(n)
	br          .L3698

.L3697:
	add.32      %r15930 <- %r15919, $20
	symaddr.64  %r15931 <- <anon symbol:0x62d00149a640>
	call        luaL_checkstack, %arg1, %r15930, %r15931
	phisrc.32   %phi2504(nargs) <- %r15919
	phisrc.32   %phi2509(success) <- $1
	phisrc.32   %phi2515(n) <- %arg3
	phisrc.32   %phi2525(n) <- %arg3
	br          .L3702

.L3702:
	phi.32      %r15933 <- %phi2504(nargs), %phi2505(nargs)
	add.32      %r15934 <- %r15933, $-1
	phi.32      %r15935 <- %phi2509(success), %phi2510(success), %phi2511(success), %phi2512(success), %phi2513(success)
	and-bool.32 %r15936 <- %r15933, %r15935
	phisrc.32   %phi2505(nargs) <- %r15934
	phisrc.32   %phi2508(success) <- %r15935
	br          %r15936, .L3699, .L3698

.L3699:
	phi.32      %r15938(n) <- %phi2525(n), %phi2526(n)
	call.32     %r15939 <- lua_type, %arg1, %r15938(n)
	seteq.32    %r15940 <- %r15939, $3
	br          %r15940, .L3703, .L3704

.L3703:
	call.64     %r15943 <- lua_tointeger, %arg1, %r15938(n)
	br          %r15943, .L3706, .L3705

.L3705:
	call.32     %r15949 <- test_eof, %arg1, %arg2
	phisrc.32   %phi2497 <- %r15949
	br          .L3707

.L3706:
	call.32     %r15953 <- read_chars, %arg1, %arg2, %r15943
	phisrc.32   %phi2498 <- %r15953
	br          .L3707

.L3707:
	phi.32      %r15954 <- %phi2497, %phi2498
	phisrc.32   %phi2510(success) <- %r15954
	br          .L3700

.L3704:
	call.64     %r15957 <- lua_tolstring, %arg1, %r15938(n), $0
	br          %r15957, .L3712, .L3710

.L3712:
	load.8      %r15960 <- 0[%r15957]
	scast.32    %r15961 <- (8) %r15960
	seteq.32    %r15962 <- %r15961, $42
	br          %r15962, .L3711, .L3710

.L3710:
	symaddr.64  %r15965 <- <anon symbol:0x62d00149aac8>
	call.32     %r15966 <- luaL_argerror, %arg1, %r15938(n), %r15965
	br          .L3711

.L3711:
	load.8      %r15969 <- 1[%r15957]
	switch      %r15969, 97 -> .L3716, 108 -> .L3715, 110 -> .L3714, default -> .L3717

.L3714:
	call.32     %r15972 <- read_number, %arg1, %arg2
	phisrc.32   %phi2511(success) <- %r15972
	br          .L3700

.L3715:
	call.32     %r15975 <- read_line, %arg1, %arg2
	phisrc.32   %phi2512(success) <- %r15975
	br          .L3700

.L3716:
	call.32     %r15978 <- read_chars, %arg1, %arg2, $-1
	phisrc.32   %phi2513(success) <- $1
	br          .L3700

.L3717:
	symaddr.64  %r15981 <- <anon symbol:0x62d00149af50>
	call.32     %r15982 <- luaL_argerror, %arg1, %r15938(n), %r15981
	phisrc.32   %phi2501(return) <- %r15982
	br          .L3718

.L3700:
	add.32      %r15985 <- %r15938(n), $1
	phisrc.32   %phi2516(n) <- %r15985
	phisrc.32   %phi2526(n) <- %r15985
	br          .L3702

.L3698:
	call.32     %r15987 <- ferror, %arg2
	br          %r15987, .L3719, .L3720

.L3719:
	call.32     %r15989 <- pushresult, %arg1, $0, $0
	phisrc.32   %phi2502(return) <- %r15989
	br          .L3718

.L3720:
	phi.32      %r15990 <- %phi2507(success), %phi2508(success)
	br          %r15990, .L3722, .L3721

.L3721:
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_pushnil, %arg1
	br          .L3722

.L3722:
	phi.32      %r15993 <- %phi2514(n), %phi2515(n), %phi2516(n)
	sub.32      %r15995 <- %r15993, %arg3
	phisrc.32   %phi2503(return) <- %r15995
	br          .L3718

.L3718:
	phi.32      %r15983 <- %phi2501(return), %phi2502(return), %phi2503(return)
	ret.32      %r15983


io_read:
.L3723:
	<entry-point>
	call.64     %r15998 <- getiofile, %arg1, $1
	call.32     %r15999 <- g_read, %arg1, %r15998, $1
	ret.32      %r15999


f_read:
.L3725:
	<entry-point>
	call.64     %r16003 <- tofile, %arg1
	call.32     %r16004 <- g_read, %arg1, %r16003, $2
	ret.32      %r16004


io_readline:
.L3727:
	<entry-point>
	call.64     %r16007 <- lua_touserdata, %arg1, $0xffffd8ed
	ptrcast.64  %r16008 <- (64) %r16007
	load.64     %r16009 <- 0[%r16008]
	br          %r16009, .L3729, .L3728

.L3728:
	symaddr.64  %r16013 <- <anon symbol:0x62d001497ba8>
	call.32     %r16014 <- luaL_error, %arg1, %r16013
	br          .L3729

.L3729:
	call.32     %r16017 <- read_line, %arg1, %r16009
	call.32     %r16019 <- ferror, %r16009
	br          %r16019, .L3730, .L3731

.L3730:
	symaddr.64  %r16021 <- <anon symbol:0x62d001497f48>
	call.64     %r16022 <- __errno_location
	load.32     %r16023 <- 0[%r16022]
	call.64     %r16024 <- strerror, %r16023
	call.32     %r16025 <- luaL_error, %arg1, %r16021, %r16024
	phisrc.32   %phi2529(return) <- %r16025
	br          .L3732

.L3731:
	br          %r16017, .L3733, .L3734

.L3733:
	phisrc.32   %phi2530(return) <- $1
	br          .L3732

.L3734:
	call.32     %r16029 <- lua_toboolean, %arg1, $0xffffd8ec
	br          %r16029, .L3736, .L3737

.L3736:
	call        lua_settop, %arg1, $0
	call        lua_pushvalue, %arg1, $0xffffd8ed
	call.32     %r16033 <- aux_close, %arg1
	br          .L3737

.L3737:
	phisrc.32   %phi2531(return) <- $0
	br          .L3732

.L3732:
	phi.32      %r16026 <- %phi2529(return), %phi2530(return), %phi2531(return)
	ret.32      %r16026


g_write:
.L3738:
	<entry-point>
	call.32     %r16035 <- lua_gettop, %arg1
	add.32      %r16036(nargs) <- %r16035, $-1
	phisrc.32   %phi2542(arg) <- %arg3
	phisrc.32   %phi2544(nargs) <- %r16036(nargs)
	phisrc.32   %phi2552(status) <- $1
	br          .L3742

.L3742:
	phi.32      %r16037 <- %phi2544(nargs), %phi2545(nargs)
	add.32      %r16038 <- %r16037, $-1
	phisrc.32   %phi2545(nargs) <- %r16038
	phi.32      %r16043 <- %phi2552(status), %phi2553(status), %phi2554(status)
	br          %r16037, .L3739, .L3741

.L3739:
	phi.32      %r16040(arg) <- %phi2542(arg), %phi2543(arg)
	call.32     %r16041 <- lua_type, %arg1, %r16040(arg)
	seteq.32    %r16042 <- %r16041, $3
	br          %r16042, .L3743, .L3744

.L3743:
	br          %r16043, .L3745, .L3746

.L3745:
	symaddr.64  %r16045 <- <anon symbol:0x62d00149b2f0>
	call.64     %r16048 <- lua_tonumber, %arg1, %r16040(arg)
	call.32     %r16049 <- fprintf, %arg2, %r16045, %r16048
	setgt.32    %r16050 <- %r16049, $0
	phisrc.32   %phi2532 <- %r16050
	br          .L3747

.L3746:
	phisrc.32   %phi2533 <- $0
	br          .L3747

.L3747:
	phi.32      %r16051 <- %phi2532, %phi2533
	phisrc.32   %phi2553(status) <- %r16051
	br          .L3740

.L3744:
	symaddr.64  %r16054 <- l
	call.64     %r16055 <- luaL_checklstring, %arg1, %r16040(arg), %r16054
	br          %r16043, .L3749, .L3750

.L3749:
	cast.64     %r16058 <- (64) %r16055
	load.64     %r16059 <- 0[l]
	call.64     %r16061 <- fwrite, %r16058, $1, %r16059, %arg2
	load.64     %r16062 <- 0[l]
	seteq.32    %r16063 <- %r16061, %r16062
	phisrc.32   %phi2534 <- %r16063
	br          .L3751

.L3750:
	phisrc.32   %phi2535 <- $0
	br          .L3751

.L3751:
	phi.32      %r16064 <- %phi2534, %phi2535
	phisrc.32   %phi2554(status) <- %r16064
	br          .L3740

.L3740:
	add.32      %r16066 <- %r16040(arg), $1
	phisrc.32   %phi2543(arg) <- %r16066
	br          .L3742

.L3741:
	call.32     %r16069 <- pushresult, %arg1, %r16043, $0
	ret.32      %r16069


io_write:
.L3753:
	<entry-point>
	call.64     %r16073 <- getiofile, %arg1, $2
	call.32     %r16074 <- g_write, %arg1, %r16073, $1
	ret.32      %r16074


f_write:
.L3755:
	<entry-point>
	call.64     %r16078 <- tofile, %arg1
	call.32     %r16079 <- g_write, %arg1, %r16078, $2
	ret.32      %r16079


io_flush:
.L3757:
	<entry-point>
	call.64     %r16083 <- getiofile, %arg1, $2
	call.32     %r16084 <- fflush, %r16083
	seteq.32    %r16085 <- %r16084, $0
	call.32     %r16086 <- pushresult, %arg1, %r16085, $0
	ret.32      %r16086


f_flush:
.L3759:
	<entry-point>
	call.64     %r16090 <- tofile, %arg1
	call.32     %r16091 <- fflush, %r16090
	seteq.32    %r16092 <- %r16091, $0
	call.32     %r16093 <- pushresult, %arg1, %r16092, $0
	ret.32      %r16093


createmeta:
.L3761:
	<entry-point>
	symaddr.64  %r16096 <- <anon symbol:0x62d00149b860>
	call.32     %r16097 <- luaL_newmetatable, %arg1, %r16096
	call        lua_pushvalue, %arg1, $0xffffffff
	symaddr.64  %r16100 <- <anon symbol:0x62d00149bc00>
	call        lua_setfield, %arg1, $0xfffffffe, %r16100
	symaddr.64  %r16102 <- flib
	call        luaL_register, %arg1, $0, %r16102
	ret


createstdfile:
.L3763:
	<entry-point>
	call.64     %r16105 <- newfile, %arg1
	store.64    %arg2 -> 0[%r16105]
	setgt.32    %r16107 <- %arg3, $0
	br          %r16107, .L3764, .L3765

.L3764:
	call        lua_pushvalue, %arg1, $0xffffffff
	call        lua_rawseti, %arg1, $0xffffd8ef, %arg3
	br          .L3765

.L3765:
	call        lua_pushvalue, %arg1, $0xfffffffe
	call.32     %r16113 <- lua_setfenv, %arg1, $0xfffffffe
	call        lua_setfield, %arg1, $0xfffffffd, %arg4
	ret


newfenv:
.L3767:
	<entry-point>
	call        lua_createtable, %arg1, $0, $1
	call        lua_pushcclosure, %arg1, %arg2, $0
	symaddr.64  %r16120 <- <anon symbol:0x62d00149c258>
	call        lua_setfield, %arg1, $0xfffffffe, %r16120
	ret


luaopen_io:
.L3769:
	<entry-point>
	call        createmeta, %arg1
	symaddr.64  %r16123 <- io_fclose
	call        newfenv, %arg1, %r16123
	call        lua_replace, %arg1, $0xffffd8ef
	symaddr.64  %r16126 <- <anon symbol:0x62d00149c7c8>
	symaddr.64  %r16127 <- iolib
	call        luaL_register, %arg1, %r16126, %r16127
	symaddr.64  %r16129 <- io_noclose
	call        newfenv, %arg1, %r16129
	load.64     %r16131 <- 0[stdin]
	symaddr.64  %r16132 <- <anon symbol:0x62d00149cf08>
	call        createstdfile, %arg1, %r16131, $1, %r16132
	load.64     %r16134 <- 0[stdout]
	symaddr.64  %r16135 <- <anon symbol:0x62d00149d2a8>
	call        createstdfile, %arg1, %r16134, $2, %r16135
	load.64     %r16137 <- 0[stderr]
	symaddr.64  %r16138 <- <anon symbol:0x62d00149d648>
	call        createstdfile, %arg1, %r16137, $0, %r16138
	call        lua_settop, %arg1, $0xfffffffe
	symaddr.64  %r16141 <- <anon symbol:0x62d00149d9e8>
	call        lua_getfield, %arg1, $0xffffffff, %r16141
	symaddr.64  %r16143 <- io_pclose
	call        newfenv, %arg1, %r16143
	call.32     %r16145 <- lua_setfenv, %arg1, $0xfffffffe
	call        lua_settop, %arg1, $0xfffffffe
	ret.32      $1


os_pushresult:
.L3771:
	<entry-point>
	call.64     %r16148 <- __errno_location
	load.32     %r16149 <- 0[%r16148]
	select.32   %r16152 <- %arg2, $1, $3
	br          %arg2, .L3772, .L3773

.L3772:
	call        lua_pushboolean, %arg1, $1
	br          .L3774

.L3773:
	call        lua_pushnil, %arg1
	symaddr.64  %r16155 <- <anon symbol:0x62d00149e040>
	call.64     %r16158 <- strerror, %r16149
	call.64     %r16159 <- lua_pushfstring, %arg1, %r16155, %arg3, %r16158
	scast.64    %r16162 <- (32) %r16149
	call        lua_pushinteger, %arg1, %r16162
	br          .L3774

.L3774:
	ret.32      %r16152


os_remove:
.L3776:
	<entry-point>
	call.64     %r16164 <- luaL_checklstring, %arg1, $1, $0
	call.32     %r16167 <- remove, %r16164
	seteq.32    %r16168 <- %r16167, $0
	call.32     %r16170 <- os_pushresult, %arg1, %r16168, %r16164
	ret.32      %r16170


os_exit:
.L3778:
	<entry-point>
	call.64     %r16173 <- luaL_optinteger, %arg1, $1, $0
	scast.32    %r16174 <- (64) %r16173
	call        exit, %r16174
	ret.32


luaopen_os:
.L3780:
	<entry-point>
	symaddr.64  %r16176 <- <anon symbol:0x62d0014a0418>
	symaddr.64  %r16177 <- syslib
	call        luaL_register, %arg1, %r16176, %r16177
	ret.32      $1


posrelat:
.L3782:
	<entry-point>
	setlt.32    %r16180 <- %arg1, $0
	phisrc.64   %phi2565(pos) <- %arg1
	br          %r16180, .L3783, .L3784

.L3783:
	add.64      %r16183 <- %arg2, $1
	add.64      %r16186 <- %arg1, %r16183
	phisrc.64   %phi2566(pos) <- %r16186
	br          .L3784

.L3784:
	phi.64      %r16188 <- %phi2565(pos), %phi2566(pos)
	setge.32    %r16190 <- %r16188, $0
	select.64   %r16191 <- %r16190, %r16188, $0
	ret.64      %r16191


str_sub:
.L3786:
	<entry-point>
	symaddr.64  %r16194 <- l
	call.64     %r16195 <- luaL_checklstring, %arg1, $1, %r16194
	call.64     %r16197 <- luaL_checkinteger, %arg1, $2
	load.64     %r16198 <- 0[l]
	call.64     %r16199 <- posrelat, %r16197, %r16198
	call.64     %r16201 <- luaL_optinteger, %arg1, $3, $-1
	load.64     %r16202 <- 0[l]
	call.64     %r16203(end) <- posrelat, %r16201, %r16202
	setlt.32    %r16205 <- %r16199, $1
	select.64   %r16212(start) <- %r16205, $1, %r16199
	load.64     %r16207(l) <- 0[l]
	setgt.32    %r16209 <- %r16203(end), %r16207(l)
	select.64   %r16213(end) <- %r16209, %r16207(l), %r16203(end)
	setle.32    %r16214 <- %r16212(start), %r16213(end)
	br          %r16214, .L3791, .L3792

.L3791:
	add.64      %r16218 <- %r16195, %r16212(start)
	add.64      %r16219 <- %r16218, $-1
	sub.64      %r16222 <- %r16213(end), %r16212(start)
	add.64      %r16223 <- %r16222, $1
	call        lua_pushlstring, %arg1, %r16219, %r16223
	br          .L3794

.L3792:
	symaddr.64  %r16226 <- <anon symbol:0x62d0014a0b58>
	call        lua_pushlstring, %arg1, %r16226, $0
	br          .L3794

.L3794:
	ret.32      $1


str_lower:
.L3795:
	<entry-point>
	symaddr.64  %r16229 <- l
	call.64     %r16230 <- luaL_checklstring, %arg1, $1, %r16229
	symaddr.64  %r16232 <- b
	call        luaL_buffinit, %arg1, %r16232
	phisrc.64   %phi2582(i) <- $0
	br          .L3799

.L3799:
	phi.64      %r16233(i) <- %phi2582(i), %phi2583(i)
	load.64     %r16234 <- 0[l]
	setb.32     %r16235 <- %r16233(i), %r16234
	br          %r16235, .L3796, .L3798

.L3796:
	load.64     %r16236 <- 0[b]
	add.64      %r16239 <- %r16232, $0x2018
	setb.32     %r16240 <- %r16236, %r16239
	br          %r16240, .L3802, .L3801

.L3801:
	call.64     %r16242 <- luaL_prepbuffer, %r16232
	br          .L3802

.L3802:
	add.64      %r16246 <- %r16230, %r16233(i)
	load.8      %r16247 <- 0[%r16246]
	cast.32     %r16249 <- (8) %r16247
	call.32     %r16250 <- tolower, %r16249
	scast.8     %r16251 <- (32) %r16250
	load.64     %r16252 <- 0[b]
	add.64      %r16253 <- %r16252, $1
	store.64    %r16253 -> 0[b]
	store.8     %r16251 -> 0[%r16252]
	add.64      %r16255 <- %r16233(i), $1
	phisrc.64   %phi2583(i) <- %r16255
	br          .L3799

.L3798:
	call        luaL_pushresult, %r16232
	ret.32      $1


str_upper:
.L3804:
	<entry-point>
	symaddr.64  %r16259 <- l
	call.64     %r16260 <- luaL_checklstring, %arg1, $1, %r16259
	symaddr.64  %r16262 <- b
	call        luaL_buffinit, %arg1, %r16262
	phisrc.64   %phi2589(i) <- $0
	br          .L3808

.L3808:
	phi.64      %r16263(i) <- %phi2589(i), %phi2590(i)
	load.64     %r16264 <- 0[l]
	setb.32     %r16265 <- %r16263(i), %r16264
	br          %r16265, .L3805, .L3807

.L3805:
	load.64     %r16266 <- 0[b]
	add.64      %r16269 <- %r16262, $0x2018
	setb.32     %r16270 <- %r16266, %r16269
	br          %r16270, .L3811, .L3810

.L3810:
	call.64     %r16272 <- luaL_prepbuffer, %r16262
	br          .L3811

.L3811:
	add.64      %r16276 <- %r16260, %r16263(i)
	load.8      %r16277 <- 0[%r16276]
	cast.32     %r16279 <- (8) %r16277
	call.32     %r16280 <- toupper, %r16279
	scast.8     %r16281 <- (32) %r16280
	load.64     %r16282 <- 0[b]
	add.64      %r16283 <- %r16282, $1
	store.64    %r16283 -> 0[b]
	store.8     %r16281 -> 0[%r16282]
	add.64      %r16285 <- %r16263(i), $1
	phisrc.64   %phi2590(i) <- %r16285
	br          .L3808

.L3807:
	call        luaL_pushresult, %r16262
	ret.32      $1


str_rep:
.L3813:
	<entry-point>
	symaddr.64  %r16289 <- l
	call.64     %r16290 <- luaL_checklstring, %arg1, $1, %r16289
	call.64     %r16292 <- luaL_checkinteger, %arg1, $2
	scast.32    %r16293(n) <- (64) %r16292
	symaddr.64  %r16295 <- b
	call        luaL_buffinit, %arg1, %r16295
	phisrc.32   %phi2592(n) <- %r16293(n)
	br          .L3817

.L3817:
	phi.32      %r16296 <- %phi2592(n), %phi2593(n)
	add.32      %r16297 <- %r16296, $-1
	setgt.32    %r16298 <- %r16296, $0
	phisrc.32   %phi2593(n) <- %r16297
	br          %r16298, .L3814, .L3816

.L3814:
	load.64     %r16301 <- 0[l]
	call        luaL_addlstring, %r16295, %r16290, %r16301
	br          .L3817

.L3816:
	call        luaL_pushresult, %r16295
	ret.32      $1


str_byte:
.L3819:
	<entry-point>
	symaddr.64  %r16305 <- l
	call.64     %r16306 <- luaL_checklstring, %arg1, $1, %r16305
	call.64     %r16308 <- luaL_optinteger, %arg1, $2, $1
	load.64     %r16309 <- 0[l]
	call.64     %r16310 <- posrelat, %r16308, %r16309
	call.64     %r16313 <- luaL_optinteger, %arg1, $3, %r16310
	load.64     %r16314 <- 0[l]
	call.64     %r16315(pose) <- posrelat, %r16313, %r16314
	setle.32    %r16317 <- %r16310, $0
	select.64   %r16324(posi) <- %r16317, $1, %r16310
	load.64     %r16320(l) <- 0[l]
	seta.32     %r16321 <- %r16315(pose), %r16320(l)
	select.64   %r16325(pose) <- %r16321, %r16320(l), %r16315(pose)
	setgt.32    %r16326 <- %r16324(posi), %r16325(pose)
	br          %r16326, .L3824, .L3825

.L3824:
	phisrc.32   %phi2594(return) <- $0
	br          .L3826

.L3825:
	sub.64      %r16330 <- %r16325(pose), %r16324(posi)
	add.64      %r16331 <- %r16330, $1
	scast.32    %r16332 <- (64) %r16331
	scast.64    %r16335 <- (32) %r16332
	add.64      %r16336 <- %r16324(posi), %r16335
	setle.32    %r16338 <- %r16336, %r16325(pose)
	br          %r16338, .L3827, .L3828

.L3827:
	symaddr.64  %r16340 <- <anon symbol:0x62d0014a3fe8>
	call.32     %r16341 <- luaL_error, %arg1, %r16340
	br          .L3828

.L3828:
	symaddr.64  %r16344 <- <anon symbol:0x62d0014a4388>
	call        luaL_checkstack, %arg1, %r16332, %r16344
	phisrc.32   %phi2607(i) <- $0
	br          .L3832

.L3832:
	phi.32      %r16345(i) <- %phi2607(i), %phi2608(i)
	setlt.32    %r16347 <- %r16345(i), %r16332
	br          %r16347, .L3829, .L3831

.L3829:
	scast.64    %r16352 <- (32) %r16345(i)
	add.64      %r16353 <- %r16324(posi), %r16352
	add.64      %r16354 <- %r16353, $-1
	add.64      %r16355 <- %r16306, %r16354
	load.8      %r16356 <- 0[%r16355]
	cast.64     %r16358 <- (8) %r16356
	call        lua_pushinteger, %arg1, %r16358
	add.32      %r16360 <- %r16345(i), $1
	phisrc.32   %phi2608(i) <- %r16360
	br          .L3832

.L3831:
	phisrc.32   %phi2595(return) <- %r16332
	br          .L3826

.L3826:
	phi.32      %r16327 <- %phi2594(return), %phi2595(return)
	ret.32      %r16327


str_char:
.L3833:
	<entry-point>
	call.32     %r16363 <- lua_gettop, %arg1
	symaddr.64  %r16365 <- b
	call        luaL_buffinit, %arg1, %r16365
	phisrc.32   %phi2619(i) <- $1
	br          .L3837

.L3837:
	phi.32      %r16366(i) <- %phi2619(i), %phi2620(i)
	setle.32    %r16368 <- %r16366(i), %r16363
	br          %r16368, .L3834, .L3836

.L3834:
	call.64     %r16371 <- luaL_checkinteger, %arg1, %r16366(i)
	scast.32    %r16372 <- (64) %r16371
	scast.8     %r16374 <- (32) %r16372
	cast.32     %r16375 <- (8) %r16374
	seteq.32    %r16377 <- %r16375, %r16372
	br          %r16377, .L3840, .L3839

.L3839:
	symaddr.64  %r16380 <- <anon symbol:0x62d0014a49e0>
	call.32     %r16381 <- luaL_argerror, %arg1, %r16366(i), %r16380
	br          .L3840

.L3840:
	load.64     %r16383 <- 0[b]
	add.64      %r16386 <- %r16365, $0x2018
	setb.32     %r16387 <- %r16383, %r16386
	phisrc.64   %phi2614(b) <- %r16383
	phisrc.64   %phi2621 <- %r16383
	phisrc.64   %phi2622 <- %r16383
	br          %r16387, .L3843, .L3842

.L3842:
	call.64     %r16389 <- luaL_prepbuffer, %r16365
	br          .L3843

.L3843:
	load.64     %r16394 <- 0[b]
	add.64      %r16395 <- %r16394, $1
	store.64    %r16395 -> 0[b]
	store.8     %r16374 -> 0[%r16394]
	add.32      %r16397 <- %r16366(i), $1
	phisrc.32   %phi2620(i) <- %r16397
	br          .L3837

.L3836:
	call        luaL_pushresult, %r16365
	ret.32      $1


check_capture:
.L3845:
	<entry-point>
	add.32      %r16402 <- %arg2, $-49
	setlt.32    %r16405 <- %r16402, $0
	br          %r16405, .L3846, .L3849

.L3849:
	load.32     %r16408 <- 24[%arg1]
	setge.32    %r16409 <- %r16402, %r16408
	br          %r16409, .L3846, .L3848

.L3848:
	add.64      %r16411 <- %arg1, $32
	scast.64    %r16413 <- (32) %r16402
	muls.64     %r16414 <- %r16413, $16
	add.64      %r16415 <- %r16411, %r16414
	load.64     %r16416 <- 8[%r16415]
	seteq.32    %r16417 <- %r16416, $-1
	br          %r16417, .L3846, .L3847

.L3846:
	load.64     %r16419 <- 16[%arg1]
	symaddr.64  %r16420 <- <anon symbol:0x62d0014a6428>
	call.32     %r16421 <- luaL_error, %r16419, %r16420
	phisrc.32   %phi2623(return) <- %r16421
	br          .L3850

.L3847:
	phisrc.32   %phi2624(return) <- %r16402
	br          .L3850

.L3850:
	phi.32      %r16422 <- %phi2623(return), %phi2624(return)
	ret.32      %r16422


capture_to_close:
.L3851:
	<entry-point>
	load.32     %r16425 <- 24[%arg1]
	add.32      %r16427(level) <- %r16425, $-1
	phisrc.32   %phi2633(level) <- %r16427(level)
	br          .L3855

.L3855:
	phi.32      %r16428(level) <- %phi2633(level), %phi2634(level)
	setge.32    %r16429 <- %r16428(level), $0
	br          %r16429, .L3852, .L3854

.L3852:
	add.64      %r16431 <- %arg1, $32
	scast.64    %r16433 <- (32) %r16428(level)
	muls.64     %r16434 <- %r16433, $16
	add.64      %r16435 <- %r16431, %r16434
	load.64     %r16436 <- 8[%r16435]
	seteq.32    %r16437 <- %r16436, $-1
	br          %r16437, .L3856, .L3853

.L3856:
	phisrc.32   %phi2628(return) <- %r16428(level)
	br          .L3858

.L3853:
	add.32      %r16441 <- %r16428(level), $-1
	phisrc.32   %phi2634(level) <- %r16441
	br          .L3855

.L3854:
	load.64     %r16443 <- 16[%arg1]
	symaddr.64  %r16444 <- <anon symbol:0x62d0014a6ff0>
	call.32     %r16445 <- luaL_error, %r16443, %r16444
	phisrc.32   %phi2629(return) <- %r16445
	br          .L3858

.L3858:
	phi.32      %r16439 <- %phi2628(return), %phi2629(return)
	ret.32      %r16439


classend:
.L3859:
	<entry-point>
	add.64      %r16447(p) <- %arg2, $1
	load.8      %r16448 <- 0[%arg2]
	switch      %r16448, 37 -> .L3861, 91 -> .L3862, default -> .L3863

.L3861:
	load.8      %r16450 <- 1[%arg2]
	br          %r16450, .L3865, .L3864

.L3864:
	load.64     %r16454 <- 16[%arg1]
	symaddr.64  %r16455 <- <anon symbol:0x62d0014a7730>
	call.32     %r16456 <- luaL_error, %r16454, %r16455
	br          .L3865

.L3865:
	add.64      %r16458 <- %r16447(p), $1
	phisrc.64   %phi2635(return) <- %r16458
	br          .L3866

.L3862:
	load.8      %r16461 <- 1[%arg2]
	scast.32    %r16462 <- (8) %r16461
	seteq.32    %r16463 <- %r16462, $94
	phisrc.64   %phi2646(p) <- %r16447(p)
	br          %r16463, .L3867, .L3869

.L3867:
	add.64      %r16465 <- %r16447(p), $1
	phisrc.64   %phi2647(p) <- %r16465
	br          .L3869

.L3869:
	phi.64      %r16466(p) <- %phi2646(p), %phi2647(p), %phi2648(p), %phi2649(p)
	load.8      %r16467 <- 0[%r16466(p)]
	phisrc.8    %phi2654 <- %r16467
	phisrc.8    %phi2655 <- %r16467
	phisrc.8    %phi2656 <- %r16467
	br          %r16467, .L3873, .L3872

.L3872:
	load.64     %r16471 <- 16[%arg1]
	symaddr.64  %r16472 <- <anon symbol:0x62d0014a7f58>
	call.32     %r16473 <- luaL_error, %r16471, %r16472
	br          .L3873

.L3873:
	add.64      %r16475(p) <- %r16466(p), $1
	load.8      %r16476 <- 0[%r16466(p)]
	scast.32    %r16477 <- (8) %r16476
	seteq.32    %r16478 <- %r16477, $37
	phisrc.64   %phi2640(p) <- %r16475(p)
	phisrc.64   %phi2648(p) <- %r16475(p)
	phisrc.8    %phi2657 <- %r16476
	phisrc.8    %phi2658 <- %r16476
	br          %r16478, .L3876, .L3870

.L3876:
	load.8      %r16480 <- 1[%r16466(p)]
	phisrc.64   %phi2641(p) <- %r16475(p)
	br          %r16480, .L3874, .L3870

.L3874:
	add.64      %r16484 <- %r16475(p), $1
	phisrc.64   %phi2642(p) <- %r16484
	phisrc.64   %phi2649(p) <- %r16484
	br          .L3870

.L3870:
	phi.64      %r16485(p) <- %phi2640(p), %phi2641(p), %phi2642(p)
	load.8      %r16486 <- 0[%r16485(p)]
	scast.32    %r16487 <- (8) %r16486
	setne.32    %r16488 <- %r16487, $93
	br          %r16488, .L3869, .L3871

.L3871:
	add.64      %r16490 <- %r16485(p), $1
	phisrc.64   %phi2636(return) <- %r16490
	br          .L3866

.L3863:
	phisrc.64   %phi2637(return) <- %r16447(p)
	br          .L3866

.L3866:
	phi.64      %r16459 <- %phi2635(return), %phi2636(return), %phi2637(return)
	ret.64      %r16459


match_class:
.L3877:
	<entry-point>
	call.32     %r16493 <- tolower, %arg2
	switch      %r16493, 97 -> .L3879, 99 -> .L3880, 100 -> .L3881, 108 -> .L3882, 112 -> .L3883, 115 -> .L3884, 117 -> .L3885, 119 -> .L3886, 120 -> .L3887, 122 -> .L3888, default -> .L3889

.L3879:
	call.64     %r16494 <- __ctype_b_loc
	load.64     %r16495 <- 0[%r16494]
	scast.64    %r16498 <- (32) %arg1
	muls.64     %r16499 <- %r16498, $2
	add.64      %r16500 <- %r16495, %r16499
	load.16     %r16501 <- 0[%r16500]
	cast.32     %r16502 <- (16) %r16501
	and.32      %r16503(res) <- %r16502, $0x400
	phisrc.32   %phi2661(res) <- %r16503(res)
	br          .L3878

.L3880:
	call.64     %r16504 <- __ctype_b_loc
	load.64     %r16505 <- 0[%r16504]
	scast.64    %r16508 <- (32) %arg1
	muls.64     %r16509 <- %r16508, $2
	add.64      %r16510 <- %r16505, %r16509
	load.16     %r16511 <- 0[%r16510]
	cast.32     %r16512 <- (16) %r16511
	and.32      %r16513 <- %r16512, $2
	phisrc.32   %phi2662(res) <- %r16513
	br          .L3878

.L3881:
	call.64     %r16514 <- __ctype_b_loc
	load.64     %r16515 <- 0[%r16514]
	scast.64    %r16518 <- (32) %arg1
	muls.64     %r16519 <- %r16518, $2
	add.64      %r16520 <- %r16515, %r16519
	load.16     %r16521 <- 0[%r16520]
	cast.32     %r16522 <- (16) %r16521
	and.32      %r16523 <- %r16522, $0x800
	phisrc.32   %phi2663(res) <- %r16523
	br          .L3878

.L3882:
	call.64     %r16524 <- __ctype_b_loc
	load.64     %r16525 <- 0[%r16524]
	scast.64    %r16528 <- (32) %arg1
	muls.64     %r16529 <- %r16528, $2
	add.64      %r16530 <- %r16525, %r16529
	load.16     %r16531 <- 0[%r16530]
	cast.32     %r16532 <- (16) %r16531
	and.32      %r16533 <- %r16532, $512
	phisrc.32   %phi2664(res) <- %r16533
	br          .L3878

.L3883:
	call.64     %r16534 <- __ctype_b_loc
	load.64     %r16535 <- 0[%r16534]
	scast.64    %r16538 <- (32) %arg1
	muls.64     %r16539 <- %r16538, $2
	add.64      %r16540 <- %r16535, %r16539
	load.16     %r16541 <- 0[%r16540]
	cast.32     %r16542 <- (16) %r16541
	and.32      %r16543 <- %r16542, $4
	phisrc.32   %phi2665(res) <- %r16543
	br          .L3878

.L3884:
	call.64     %r16544 <- __ctype_b_loc
	load.64     %r16545 <- 0[%r16544]
	scast.64    %r16548 <- (32) %arg1
	muls.64     %r16549 <- %r16548, $2
	add.64      %r16550 <- %r16545, %r16549
	load.16     %r16551 <- 0[%r16550]
	cast.32     %r16552 <- (16) %r16551
	and.32      %r16553 <- %r16552, $0x2000
	phisrc.32   %phi2666(res) <- %r16553
	br          .L3878

.L3885:
	call.64     %r16554 <- __ctype_b_loc
	load.64     %r16555 <- 0[%r16554]
	scast.64    %r16558 <- (32) %arg1
	muls.64     %r16559 <- %r16558, $2
	add.64      %r16560 <- %r16555, %r16559
	load.16     %r16561 <- 0[%r16560]
	cast.32     %r16562 <- (16) %r16561
	and.32      %r16563 <- %r16562, $256
	phisrc.32   %phi2667(res) <- %r16563
	br          .L3878

.L3886:
	call.64     %r16564 <- __ctype_b_loc
	load.64     %r16565 <- 0[%r16564]
	scast.64    %r16568 <- (32) %arg1
	muls.64     %r16569 <- %r16568, $2
	add.64      %r16570 <- %r16565, %r16569
	load.16     %r16571 <- 0[%r16570]
	cast.32     %r16572 <- (16) %r16571
	and.32      %r16573 <- %r16572, $8
	phisrc.32   %phi2668(res) <- %r16573
	br          .L3878

.L3887:
	call.64     %r16574 <- __ctype_b_loc
	load.64     %r16575 <- 0[%r16574]
	scast.64    %r16578 <- (32) %arg1
	muls.64     %r16579 <- %r16578, $2
	add.64      %r16580 <- %r16575, %r16579
	load.16     %r16581 <- 0[%r16580]
	cast.32     %r16582 <- (16) %r16581
	and.32      %r16583 <- %r16582, $0x1000
	phisrc.32   %phi2669(res) <- %r16583
	br          .L3878

.L3888:
	seteq.32    %r16585 <- %arg1, $0
	phisrc.32   %phi2670(res) <- %r16585
	br          .L3878

.L3889:
	seteq.32    %r16588 <- %arg2, %arg1
	phisrc.32   %phi2659(return) <- %r16588
	br          .L3890

.L3878:
	phi.32      %r16590 <- %phi2661(res), %phi2662(res), %phi2663(res), %phi2664(res), %phi2665(res), %phi2666(res), %phi2667(res), %phi2668(res), %phi2669(res), %phi2670(res)
	seteq.32    %r16592 <- %r16590, $0
	call.64     %r16593 <- __ctype_b_loc
	load.64     %r16594 <- 0[%r16593]
	scast.64    %r16597 <- (32) %arg2
	muls.64     %r16598 <- %r16597, $2
	add.64      %r16599 <- %r16594, %r16598
	load.16     %r16600 <- 0[%r16599]
	cast.32     %r16601 <- (16) %r16600
	and.32      %r16602 <- %r16601, $512
	select.32   %r16603 <- %r16602, %r16590, %r16592
	phisrc.32   %phi2660(return) <- %r16603
	br          .L3890

.L3890:
	phi.32      %r16589 <- %phi2659(return), %phi2660(return)
	ret.32      %r16589


matchbracketclass:
.L3891:
	<entry-point>
	load.8      %r16605 <- 1[%arg2]
	scast.32    %r16606 <- (8) %r16605
	seteq.32    %r16607 <- %r16606, $94
	phisrc.64   %phi2681(p) <- %arg2
	phisrc.32   %phi2687(sig) <- $1
	phisrc.32   %phi2689(sig) <- $1
	phisrc.32   %phi2691(sig) <- $1
	phisrc.32   %phi2693(sig) <- $1
	br          %r16607, .L3892, .L3897

.L3892:
	add.64      %r16609 <- %arg2, $1
	phisrc.64   %phi2682(p) <- %r16609
	phisrc.32   %phi2688(sig) <- $0
	phisrc.32   %phi2690(sig) <- $0
	phisrc.32   %phi2692(sig) <- $0
	phisrc.32   %phi2694(sig) <- $0
	br          .L3897

.L3897:
	phi.64      %r16610 <- %phi2681(p), %phi2682(p), %phi2683(p), %phi2684(p), %phi2685(p)
	add.64      %r16611(p) <- %r16610, $1
	setb.32     %r16613 <- %r16611(p), %arg3
	phisrc.64   %phi2685(p) <- %r16611(p)
	br          %r16613, .L3894, .L3896

.L3894:
	load.8      %r16615 <- 1[%r16610]
	scast.32    %r16616 <- (8) %r16615
	seteq.32    %r16617 <- %r16616, $37
	br          %r16617, .L3898, .L3899

.L3898:
	add.64      %r16619 <- %r16611(p), $1
	load.8      %r16622 <- 2[%r16610]
	cast.32     %r16624 <- (8) %r16622
	call.32     %r16625 <- match_class, %arg1, %r16624
	phisrc.64   %phi2683(p) <- %r16619
	br          %r16625, .L3900, .L3897

.L3900:
	phi.32      %r16626 <- %phi2693(sig), %phi2694(sig)
	phisrc.32   %phi2671(return) <- %r16626
	br          .L3902

.L3899:
	load.8      %r16629 <- 2[%r16610]
	scast.32    %r16630 <- (8) %r16629
	seteq.32    %r16631 <- %r16630, $45
	add.64      %r16633 <- %r16611(p), $2
	setb.32     %r16635 <- %r16633, %arg3
	and-bool.32 %r16636 <- %r16631, %r16635
	br          %r16636, .L3904, .L3905

.L3904:
	cast.64     %r16638 <- (64) %r16611(p)
	add.64      %r16639 <- %r16638, $2
	ptrcast.64  %r16640 <- (64) %r16639
	load.8      %r16643 <- -2[%r16640]
	cast.32     %r16645 <- (8) %r16643
	setle.32    %r16647 <- %r16645, %arg1
	phisrc.64   %phi2684(p) <- %r16640
	br          %r16647, .L3908, .L3897

.L3908:
	load.8      %r16650 <- 0[%r16640]
	cast.32     %r16652 <- (8) %r16650
	setle.32    %r16653 <- %arg1, %r16652
	br          %r16653, .L3906, .L3897

.L3906:
	phi.32      %r16654 <- %phi2691(sig), %phi2692(sig)
	phisrc.32   %phi2672(return) <- %r16654
	br          .L3902

.L3905:
	cast.32     %r16658 <- (8) %r16615
	seteq.32    %r16660 <- %r16658, %arg1
	br          %r16660, .L3910, .L3897

.L3910:
	phi.32      %r16661 <- %phi2689(sig), %phi2690(sig)
	phisrc.32   %phi2673(return) <- %r16661
	br          .L3902

.L3896:
	phi.32      %r16662 <- %phi2687(sig), %phi2688(sig)
	seteq.32    %r16663 <- %r16662, $0
	phisrc.32   %phi2674(return) <- %r16663
	br          .L3902

.L3902:
	phi.32      %r16627 <- %phi2671(return), %phi2672(return), %phi2673(return), %phi2674(return)
	ret.32      %r16627


singlematch:
.L3912:
	<entry-point>
	load.8      %r16665 <- 0[%arg2]
	switch      %r16665, 37 -> .L3915, 46 -> .L3914, 91 -> .L3916, default -> .L3917

.L3914:
	phisrc.32   %phi2696(return) <- $1
	br          .L3918

.L3915:
	load.8      %r16669 <- 1[%arg2]
	cast.32     %r16671 <- (8) %r16669
	call.32     %r16672 <- match_class, %arg1, %r16671
	phisrc.32   %phi2697(return) <- %r16672
	br          .L3918

.L3916:
	add.64      %r16676 <- %arg3, $-1
	call.32     %r16677 <- matchbracketclass, %arg1, %arg2, %r16676
	phisrc.32   %phi2698(return) <- %r16677
	br          .L3918

.L3917:
	cast.32     %r16681 <- (8) %r16665
	seteq.32    %r16683 <- %r16681, %arg1
	phisrc.32   %phi2699(return) <- %r16683
	br          .L3918

.L3918:
	phi.32      %r16666 <- %phi2696(return), %phi2697(return), %phi2698(return), %phi2699(return)
	ret.32      %r16666


matchbalance:
.L3919:
	<entry-point>
	load.8      %r16685 <- 0[%arg3]
	phisrc.8    %phi2719 <- %r16685
	phisrc.8    %phi2721 <- %r16685
	phisrc.8    %phi2723 <- %r16685
	br          %r16685, .L3922, .L3920

.L3922:
	load.8      %r16689 <- 1[%arg3]
	phisrc.8    %phi2717 <- %r16689
	phisrc.8    %phi2720 <- %r16689
	phisrc.8    %phi2722 <- %r16689
	br          %r16689, .L3921, .L3920

.L3920:
	load.64     %r16693 <- 16[%arg1]
	symaddr.64  %r16694 <- <anon symbol:0x62d0014cba78>
	call.32     %r16695 <- luaL_error, %r16693, %r16694
	br          .L3921

.L3921:
	load.8      %r16697 <- 0[%arg2]
	scast.32    %r16698 <- (8) %r16697
	load.8      %r16700 <- 0[%arg3]
	scast.32    %r16701 <- (8) %r16700
	setne.32    %r16702 <- %r16698, %r16701
	phisrc.64   %phi2707(s) <- %arg2
	br          %r16702, .L3923, .L3924

.L3923:
	phisrc.64   %phi2701(return) <- $0
	br          .L3925

.L3924:
	scast.32    %r16706 <- (8) %r16700
	load.8      %r16708 <- 1[%arg3]
	scast.32    %r16709 <- (8) %r16708
	phisrc.32   %phi2710(cont) <- $1
	phisrc.32   %phi2713(cont) <- $1
	br          .L3930

.L3930:
	phi.64      %r16710 <- %phi2707(s), %phi2708(s)
	add.64      %r16711(s) <- %r16710, $1
	load.64     %r16713 <- 8[%arg1]
	setb.32     %r16714 <- %r16711(s), %r16713
	phisrc.64   %phi2708(s) <- %r16711(s)
	br          %r16714, .L3927, .L3926

.L3927:
	load.8      %r16716 <- 1[%r16710]
	scast.32    %r16717 <- (8) %r16716
	seteq.32    %r16719 <- %r16717, %r16709
	br          %r16719, .L3931, .L3932

.L3931:
	phi.32      %r16720 <- %phi2713(cont), %phi2714(cont), %phi2715(cont)
	add.32      %r16721 <- %r16720, $-1
	phisrc.32   %phi2711(cont) <- %r16721
	phisrc.32   %phi2714(cont) <- %r16721
	br          %r16721, .L3930, .L3933

.L3933:
	add.64      %r16724 <- %r16711(s), $1
	phisrc.64   %phi2702(return) <- %r16724
	br          .L3925

.L3932:
	scast.32    %r16727 <- (8) %r16716
	seteq.32    %r16729 <- %r16727, %r16706
	br          %r16729, .L3936, .L3930

.L3936:
	phi.32      %r16730 <- %phi2710(cont), %phi2711(cont), %phi2712(cont)
	add.32      %r16731 <- %r16730, $1
	phisrc.32   %phi2712(cont) <- %r16731
	phisrc.32   %phi2715(cont) <- %r16731
	br          .L3930

.L3926:
	phisrc.64   %phi2703(return) <- $0
	br          .L3925

.L3925:
	phi.64      %r16703 <- %phi2701(return), %phi2702(return), %phi2703(return)
	ret.64      %r16703


max_expand:
.L3938:
	<entry-point>
	phisrc.64   %phi2733(i) <- $0
	br          .L3942

.L3942:
	phi.64      %r16733(i) <- %phi2733(i), %phi2734(i)
	add.64      %r16734 <- %arg2, %r16733(i)
	load.64     %r16736 <- 8[%arg1]
	setb.32     %r16737 <- %r16734, %r16736
	phisrc.64   %phi2728(i) <- %r16733(i)
	br          %r16737, .L3943, .L3947

.L3943:
	load.8      %r16741 <- 0[%r16734]
	cast.32     %r16743 <- (8) %r16741
	call.32     %r16746 <- singlematch, %r16743, %arg3, %arg4
	phisrc.64   %phi2729(i) <- %r16733(i)
	br          %r16746, .L3939, .L3947

.L3939:
	add.64      %r16748 <- %r16733(i), $1
	phisrc.64   %phi2734(i) <- %r16748
	br          .L3942

.L3947:
	phi.64      %r16749(i) <- %phi2728(i), %phi2729(i), %phi2730(i)
	setge.32    %r16750 <- %r16749(i), $0
	br          %r16750, .L3944, .L3946

.L3944:
	add.64      %r16754 <- %arg2, %r16749(i)
	add.64      %r16756 <- %arg4, $1
	call.64     %r16757 <- match, %arg1, %r16754, %r16756
	br          %r16757, .L3948, .L3949

.L3948:
	phisrc.64   %phi2724(return) <- %r16757
	br          .L3950

.L3949:
	add.64      %r16762 <- %r16749(i), $-1
	phisrc.64   %phi2730(i) <- %r16762
	br          .L3947

.L3946:
	phisrc.64   %phi2725(return) <- $0
	br          .L3950

.L3950:
	phi.64      %r16760 <- %phi2724(return), %phi2725(return)
	ret.64      %r16760


min_expand:
.L3951:
	<entry-point>
	phisrc.64   %phi2740(s) <- %arg2
	br          .L3952

.L3952:
	phi.64      %r16764(s) <- %phi2740(s), %phi2741(s)
	add.64      %r16766 <- %arg4, $1
	call.64     %r16767 <- match, %arg1, %r16764(s), %r16766
	br          %r16767, .L3956, .L3957

.L3956:
	phisrc.64   %phi2735(return) <- %r16767
	br          .L3958

.L3957:
	load.64     %r16774 <- 8[%arg1]
	setb.32     %r16775 <- %r16764(s), %r16774
	br          %r16775, .L3962, .L3961

.L3962:
	load.8      %r16777 <- 0[%r16764(s)]
	cast.32     %r16779 <- (8) %r16777
	call.32     %r16782 <- singlematch, %r16779, %arg3, %arg4
	br          %r16782, .L3960, .L3961

.L3960:
	add.64      %r16784 <- %r16764(s), $1
	phisrc.64   %phi2741(s) <- %r16784
	br          .L3952

.L3961:
	phisrc.64   %phi2736(return) <- $0
	br          .L3958

.L3958:
	phi.64      %r16771 <- %phi2735(return), %phi2736(return)
	ret.64      %r16771


start_capture:
.L3964:
	<entry-point>
	load.32     %r16786 <- 24[%arg1]
	setge.32    %r16788 <- %r16786, $32
	br          %r16788, .L3965, .L3966

.L3965:
	load.64     %r16790 <- 16[%arg1]
	symaddr.64  %r16791 <- <anon symbol:0x62d0014cce68>
	call.32     %r16792 <- luaL_error, %r16790, %r16791
	br          .L3966

.L3966:
	add.64      %r16795 <- %arg1, $32
	scast.64    %r16797 <- (32) %r16786
	muls.64     %r16798 <- %r16797, $16
	add.64      %r16799 <- %r16795, %r16798
	store.64    %arg2 -> 0[%r16799]
	scast.64    %r16801 <- (32) %arg4
	store.64    %r16801 -> 8[%r16799]
	add.32      %r16809 <- %r16786, $1
	store.32    %r16809 -> 24[%arg1]
	call.64     %r16814 <- match, %arg1, %arg2, %arg3
	br          %r16814, .L3969, .L3967

.L3967:
	load.32     %r16817 <- 24[%arg1]
	add.32      %r16818 <- %r16817, $-1
	store.32    %r16818 -> 24[%arg1]
	br          .L3969

.L3969:
	ret.64      %r16814


end_capture:
.L3970:
	<entry-point>
	call.32     %r16822 <- capture_to_close, %arg1
	add.64      %r16825 <- %arg1, $32
	scast.64    %r16827 <- (32) %r16822
	muls.64     %r16828 <- %r16827, $16
	add.64      %r16829 <- %r16825, %r16828
	load.64     %r16830 <- 0[%r16829]
	sub.64      %r16831 <- %arg2, %r16830
	store.64    %r16831 -> 8[%r16829]
	call.64     %r16841 <- match, %arg1, %arg2, %arg3
	br          %r16841, .L3973, .L3971

.L3971:
	store.64    $-1 -> 8[%r16829]
	br          .L3973

.L3973:
	ret.64      %r16841


match_capture:
.L3974:
	<entry-point>
	call.32     %r16853 <- check_capture, %arg1, %arg3
	add.64      %r16855 <- %arg1, $32
	scast.64    %r16857 <- (32) %r16853
	muls.64     %r16858 <- %r16857, $16
	add.64      %r16859 <- %r16855, %r16858
	load.64     %r16860 <- 8[%r16859]
	load.64     %r16863 <- 8[%arg1]
	sub.64      %r16865 <- %r16863, %arg2
	setae.32    %r16868 <- %r16865, %r16860
	load.64     %r16875 <- 0[%r16859]
	cast.64     %r16876 <- (64) %r16875
	cast.64     %r16878 <- (64) %arg2
	call.32     %r16880 <- memcmp, %r16876, %r16878, %r16860
	seteq.32    %r16881 <- %r16880, $0
	and-bool.32 %r16882 <- %r16868, %r16881
	br          %r16882, .L3975, .L3976

.L3975:
	add.64      %r16885 <- %arg2, %r16860
	phisrc.64   %phi2744(return) <- %r16885
	br          .L3977

.L3976:
	phisrc.64   %phi2745(return) <- $0
	br          .L3977

.L3977:
	phi.64      %r16886 <- %phi2744(return), %phi2745(return)
	ret.64      %r16886


match:
.L3979:
	<entry-point>
	phisrc.64   %phi2776(s) <- %arg2
	phisrc.64   %phi2781(s) <- %arg2
	phisrc.64   %phi2786(s) <- %arg2
	phisrc.64   %phi2791(s) <- %arg2
	phisrc.64   %phi2815(s) <- %arg2
	phisrc.64   %phi2844(p) <- %arg3
	br          .L3980

.L3980:
	phi.64      %r16887(p) <- %phi2844(p), %phi2845(p), %phi2846(p), %phi2847(p), %phi2848(p), %phi2849(p)
	load.8      %r16888 <- 0[%r16887(p)]
	phi.64      %r16894 <- %phi2815(s), %phi2816(s), %phi2817(s), %phi2818(s)
	switch      %r16888, 0 -> .L3985, 36 -> .L3986, 37 -> .L3984, 40 -> .L3982, 41 -> .L3983, default -> .L4010

.L3982:
	load.8      %r16890 <- 1[%r16887(p)]
	scast.32    %r16891 <- (8) %r16890
	seteq.32    %r16892 <- %r16891, $41
	br          %r16892, .L3988, .L3989

.L3988:
	add.64      %r16896 <- %r16887(p), $2
	call.64     %r16897 <- start_capture, %arg1, %r16894, %r16896, $0xfffffffe
	phisrc.64   %phi2746(return) <- %r16897
	br          .L3990

.L3989:
	add.64      %r16902 <- %r16887(p), $1
	call.64     %r16903 <- start_capture, %arg1, %r16894, %r16902, $0xffffffff
	phisrc.64   %phi2747(return) <- %r16903
	br          .L3990

.L3983:
	add.64      %r16907 <- %r16887(p), $1
	call.64     %r16908 <- end_capture, %arg1, %r16894, %r16907
	phisrc.64   %phi2748(return) <- %r16908
	br          .L3990

.L3984:
	load.8      %r16910 <- 1[%r16887(p)]
	switch      %r16910, 98 -> .L3993, 102 -> .L3994, default -> .L3995

.L3993:
	add.64      %r16914 <- %r16887(p), $2
	call.64     %r16915 <- matchbalance, %arg1, %r16894, %r16914
	phisrc.64   %phi2777(s) <- %r16915
	phisrc.64   %phi2782(s) <- %r16915
	phisrc.64   %phi2787(s) <- %r16915
	phisrc.64   %phi2792(s) <- %r16915
	phisrc.64   %phi2816(s) <- %r16915
	br          %r16915, .L3997, .L3996

.L3996:
	phisrc.64   %phi2749(return) <- $0
	br          .L3990

.L3997:
	cast.64     %r16919 <- (64) %r16887(p)
	add.64      %r16920 <- %r16919, $4
	ptrcast.64  %r16921 <- (64) %r16920
	phisrc.64   %phi2845(p) <- %r16921
	br          .L3980

.L3994:
	cast.64     %r16923 <- (64) %r16887(p)
	add.64      %r16924 <- %r16923, $2
	ptrcast.64  %r16925 <- (64) %r16924
	load.8      %r16927 <- 0[%r16925]
	scast.32    %r16928 <- (8) %r16927
	setne.32    %r16929 <- %r16928, $91
	br          %r16929, .L3998, .L3999

.L3998:
	load.64     %r16931 <- 16[%arg1]
	symaddr.64  %r16932 <- <anon symbol:0x62d0014ca5a0>
	call.32     %r16933 <- luaL_error, %r16931, %r16932
	br          .L3999

.L3999:
	call.64     %r16936 <- classend, %arg1, %r16925
	load.64     %r16939 <- 0[%arg1]
	seteq.32    %r16940 <- %r16894, %r16939
	br          %r16940, .L4000, .L4001

.L4000:
	phisrc.32   %phi2750 <- $0
	br          .L4002

.L4001:
	load.8      %r16943 <- -1[%r16894]
	scast.32    %r16944 <- (8) %r16943
	phisrc.32   %phi2751 <- %r16944
	br          .L4002

.L4002:
	phi.32      %r16945 <- %phi2750, %phi2751
	scast.8     %r16946 <- (32) %r16945
	cast.32     %r16949 <- (8) %r16946
	add.64      %r16952 <- %r16936, $-1
	call.32     %r16953 <- matchbracketclass, %r16949, %r16925, %r16952
	br          %r16953, .L4003, .L4005

.L4005:
	load.8      %r16955 <- 0[%r16894]
	cast.32     %r16957 <- (8) %r16955
	call.32     %r16961 <- matchbracketclass, %r16957, %r16925, %r16952
	phisrc.64   %phi2778(s) <- %r16894
	phisrc.64   %phi2783(s) <- %r16894
	phisrc.64   %phi2788(s) <- %r16894
	phisrc.64   %phi2793(s) <- %r16894
	br          %r16961, .L4004, .L4003

.L4003:
	phisrc.64   %phi2752(return) <- $0
	br          .L3990

.L4004:
	phisrc.64   %phi2846(p) <- %r16936
	br          .L3980

.L3995:
	call.64     %r16963 <- __ctype_b_loc
	load.64     %r16964 <- 0[%r16963]
	load.8      %r16966 <- 1[%r16887(p)]
	cast.32     %r16968 <- (8) %r16966
	scast.64    %r16969 <- (32) %r16968
	muls.64     %r16970 <- %r16969, $2
	add.64      %r16971 <- %r16964, %r16970
	load.16     %r16972 <- 0[%r16971]
	cast.32     %r16973 <- (16) %r16972
	and.32      %r16974 <- %r16973, $0x800
	br          %r16974, .L4006, .L4010

.L4006:
	phi.64      %r16976 <- %phi2791(s), %phi2792(s), %phi2793(s), %phi2794(s), %phi2795(s)
	cast.32     %r16980 <- (8) %r16966
	call.64     %r16981 <- match_capture, %arg1, %r16976, %r16980
	phisrc.64   %phi2779(s) <- %r16981
	phisrc.64   %phi2784(s) <- %r16981
	phisrc.64   %phi2789(s) <- %r16981
	phisrc.64   %phi2794(s) <- %r16981
	phisrc.64   %phi2817(s) <- %r16981
	br          %r16981, .L4009, .L4008

.L4008:
	phisrc.64   %phi2753(return) <- $0
	br          .L3990

.L4009:
	cast.64     %r16985 <- (64) %r16887(p)
	add.64      %r16986 <- %r16985, $2
	ptrcast.64  %r16987 <- (64) %r16986
	phisrc.64   %phi2847(p) <- %r16987
	br          .L3980

.L3985:
	phi.64      %r16988 <- %phi2786(s), %phi2787(s), %phi2788(s), %phi2789(s), %phi2790(s)
	phisrc.64   %phi2754(return) <- %r16988
	br          .L3990

.L3986:
	load.8      %r16990 <- 1[%r16887(p)]
	br          %r16990, .L4010, .L4011

.L4011:
	phi.64      %r16993 <- %phi2781(s), %phi2782(s), %phi2783(s), %phi2784(s), %phi2785(s)
	load.64     %r16996 <- 8[%arg1]
	seteq.32    %r16997 <- %r16993, %r16996
	select.64   %r16998 <- %r16997, %r16993, $0
	phisrc.64   %phi2755(return) <- %r16998
	br          .L3990

.L4010:
	call.64     %r17001 <- classend, %arg1, %r16887(p)
	phi.64      %r17002(s) <- %phi2776(s), %phi2777(s), %phi2778(s), %phi2779(s), %phi2780(s)
	load.64     %r17004 <- 8[%arg1]
	setb.32     %r17005 <- %r17002(s), %r17004
	br          %r17005, .L4014, .L4015

.L4014:
	load.8      %r17007 <- 0[%r17002(s)]
	cast.32     %r17009 <- (8) %r17007
	call.32     %r17012 <- singlematch, %r17009, %r16887(p), %r17001
	phisrc.32   %phi2756 <- %r17012
	br          .L4016

.L4015:
	phisrc.32   %phi2757 <- $0
	br          .L4016

.L4016:
	phi.32      %r17013 <- %phi2756, %phi2757
	load.8      %r17015 <- 0[%r17001]
	switch      %r17015, 42 -> .L4019, 43 -> .L4020, 45 -> .L4021, 63 -> .L4018, default -> .L4022

.L4018:
	br          %r17013, .L4025, .L4024

.L4025:
	add.64      %r17019 <- %r17002(s), $1
	add.64      %r17021 <- %r17001, $1
	call.64     %r17022 <- match, %arg1, %r17019, %r17021
	br          %r17022, .L4023, .L4024

.L4023:
	phisrc.64   %phi2758(return) <- %r17022
	br          .L3990

.L4024:
	add.64      %r17026 <- %r17001, $1
	phisrc.64   %phi2848(p) <- %r17026
	br          .L3980

.L4019:
	call.64     %r17031 <- max_expand, %arg1, %r17002(s), %r16887(p), %r17001
	phisrc.64   %phi2759(return) <- %r17031
	br          .L3990

.L4020:
	br          %r17013, .L4026, .L4027

.L4026:
	add.64      %r17035 <- %r17002(s), $1
	call.64     %r17038 <- max_expand, %arg1, %r17035, %r16887(p), %r17001
	phisrc.64   %phi2760 <- %r17038
	br          .L4028

.L4027:
	phisrc.64   %phi2761 <- $0
	br          .L4028

.L4028:
	phi.64      %r17039 <- %phi2760, %phi2761
	phisrc.64   %phi2762(return) <- %r17039
	br          .L3990

.L4021:
	call.64     %r17044 <- min_expand, %arg1, %r17002(s), %r16887(p), %r17001
	phisrc.64   %phi2763(return) <- %r17044
	br          .L3990

.L4022:
	br          %r17013, .L4030, .L4029

.L4029:
	phisrc.64   %phi2764(return) <- $0
	br          .L3990

.L4030:
	add.64      %r17047 <- %r17002(s), $1
	phisrc.64   %phi2780(s) <- %r17047
	phisrc.64   %phi2785(s) <- %r17047
	phisrc.64   %phi2790(s) <- %r17047
	phisrc.64   %phi2795(s) <- %r17047
	phisrc.64   %phi2818(s) <- %r17047
	phisrc.64   %phi2849(p) <- %r17001
	br          .L3980

.L3990:
	phi.64      %r16898 <- %phi2746(return), %phi2747(return), %phi2748(return), %phi2749(return), %phi2752(return), %phi2753(return), %phi2754(return), %phi2755(return), %phi2758(return), %phi2759(return), %phi2762(return), %phi2763(return), %phi2764(return)
	ret.64      %r16898


lmemfind:
.L4031:
	<entry-point>
	phisrc.64   %phi2856(s1) <- %arg1
	br          %arg4, .L4033, .L4032

.L4032:
	phisrc.64   %phi2851(return) <- %arg1
	br          .L4034

.L4033:
	seta.32     %r17055 <- %arg4, %arg2
	br          %r17055, .L4036, .L4037

.L4036:
	phisrc.64   %phi2852(return) <- $0
	br          .L4034

.L4037:
	add.64      %r17057 <- %arg4, $-1
	sub.64      %r17060(l1) <- %arg2, %r17057
	phisrc.64   %phi2861(l1) <- %r17060(l1)
	br          .L4042

.L4042:
	phi.64      %r17061(l1) <- %phi2861(l1), %phi2862(l1)
	seta.32     %r17062 <- %r17061(l1), $0
	br          %r17062, .L4043, .L4041

.L4043:
	phi.64      %r17063(s1) <- %phi2856(s1), %phi2857(s1)
	cast.64     %r17064 <- (64) %r17063(s1)
	load.8      %r17066 <- 0[%arg3]
	scast.32    %r17067 <- (8) %r17066
	call.64     %r17069 <- memchr, %r17064, %r17067, %r17061(l1)
	ptrcast.64  %r17070(init) <- (64) %r17069
	br          %r17070(init), .L4039, .L4041

.L4039:
	add.64      %r17073 <- %r17070(init), $1
	cast.64     %r17075 <- (64) %r17073
	add.64      %r17077 <- %arg3, $1
	cast.64     %r17078 <- (64) %r17077
	call.32     %r17080 <- memcmp, %r17075, %r17078, %r17057
	br          %r17080, .L4045, .L4044

.L4044:
	add.64      %r17083 <- %r17073, $-1
	phisrc.64   %phi2853(return) <- %r17083
	br          .L4034

.L4045:
	sub.64      %r17086 <- %r17073, %r17063(s1)
	sub.64      %r17090 <- %r17061(l1), %r17086
	phisrc.64   %phi2857(s1) <- %r17073
	phisrc.64   %phi2862(l1) <- %r17090
	br          .L4042

.L4041:
	phisrc.64   %phi2854(return) <- $0
	br          .L4034

.L4034:
	phi.64      %r17052 <- %phi2851(return), %phi2852(return), %phi2853(return), %phi2854(return)
	ret.64      %r17052


push_onecapture:
.L4047:
	<entry-point>
	load.32     %r17095 <- 24[%arg1]
	setge.32    %r17096 <- %arg2, %r17095
	br          %r17096, .L4048, .L4049

.L4048:
	br          %arg2, .L4051, .L4050

.L4050:
	load.64     %r17100 <- 16[%arg1]
	sub.64      %r17104 <- %arg4, %arg3
	call        lua_pushlstring, %r17100, %arg3, %r17104
	br          .L4053

.L4051:
	load.64     %r17107 <- 16[%arg1]
	symaddr.64  %r17108 <- <anon symbol:0x62d0014cfd88>
	call.32     %r17109 <- luaL_error, %r17107, %r17108
	br          .L4053

.L4049:
	add.64      %r17111 <- %arg1, $32
	scast.64    %r17113 <- (32) %arg2
	muls.64     %r17114 <- %r17113, $16
	add.64      %r17115 <- %r17111, %r17114
	load.64     %r17116 <- 8[%r17115]
	seteq.32    %r17118 <- %r17116, $-1
	br          %r17118, .L4054, .L4055

.L4054:
	load.64     %r17120 <- 16[%arg1]
	symaddr.64  %r17121 <- <anon symbol:0x62d0014dc7b8>
	call.32     %r17122 <- luaL_error, %r17120, %r17121
	br          .L4055

.L4055:
	seteq.32    %r17124 <- %r17116, $-2
	br          %r17124, .L4056, .L4057

.L4056:
	load.64     %r17126 <- 16[%arg1]
	load.64     %r17133 <- 0[%r17115]
	load.64     %r17135 <- 0[%arg1]
	sub.64      %r17136 <- %r17133, %r17135
	add.64      %r17137 <- %r17136, $1
	call        lua_pushinteger, %r17126, %r17137
	br          .L4053

.L4057:
	load.64     %r17139 <- 16[%arg1]
	load.64     %r17146 <- 0[%r17115]
	call        lua_pushlstring, %r17139, %r17146, %r17116
	br          .L4053

.L4053:
	ret


push_captures:
.L4059:
	<entry-point>
	load.32     %r17150 <- 24[%arg1]
	seteq.32    %r17151 <- %r17150, $0
	and-bool.32 %r17153 <- %r17151, %arg2
	select.32   %r17156 <- %r17153, $1, %r17150
	load.64     %r17158 <- 16[%arg1]
	symaddr.64  %r17160 <- <anon symbol:0x62d0014ddf48>
	call        luaL_checkstack, %r17158, %r17156, %r17160
	phisrc.32   %phi2876(i) <- $0
	br          .L4066

.L4066:
	phi.32      %r17161(i) <- %phi2876(i), %phi2877(i)
	setlt.32    %r17163 <- %r17161(i), %r17156
	br          %r17163, .L4063, .L4067

.L4063:
	call        push_onecapture, %arg1, %r17161(i), %arg2, %arg3
	add.32      %r17169 <- %r17161(i), $1
	phisrc.32   %phi2877(i) <- %r17169
	br          .L4066

.L4067:
	ret.32      %r17156


str_find_aux:
.L4068:
	<entry-point>
	symaddr.64  %r17173 <- l1
	call.64     %r17174 <- luaL_checklstring, %arg1, $1, %r17173
	symaddr.64  %r17176 <- l2
	call.64     %r17177(p) <- luaL_checklstring, %arg1, $2, %r17176
	call.64     %r17179 <- luaL_optinteger, %arg1, $3, $1
	load.64     %r17180 <- 0[l1]
	call.64     %r17181 <- posrelat, %r17179, %r17180
	add.64      %r17182 <- %r17181, $-1
	setlt.32    %r17184 <- %r17182, $0
	br          %r17184, .L4069, .L4070

.L4069:
	phisrc.64   %phi2893(init) <- $0
	phisrc.64   %phi2896(init) <- $0
	br          .L4071

.L4070:
	load.64     %r17187(l1) <- 0[l1]
	seta.32     %r17188 <- %r17182, %r17187(l1)
	phisrc.64   %phi2894(init) <- %r17182
	phisrc.64   %phi2897(init) <- %r17182
	br          %r17188, .L4072, .L4071

.L4072:
	phisrc.64   %phi2895(init) <- %r17187(l1)
	phisrc.64   %phi2898(init) <- %r17187(l1)
	br          .L4071

.L4071:
	br          %arg2, .L4076, .L4075

.L4076:
	call.32     %r17193 <- lua_toboolean, %arg1, $4
	symaddr.64  %r17195 <- <anon symbol:0x62d0014de688>
	call.64     %r17196 <- strpbrk, %r17177(p), %r17195
	seteq.32    %r17197 <- %r17196, $0
	or-bool.32  %r17198 <- %r17193, %r17197
	br          %r17198, .L4074, .L4075

.L4074:
	phi.64      %r17200 <- %phi2896(init), %phi2897(init), %phi2898(init)
	add.64      %r17201 <- %r17174, %r17200
	load.64     %r17202 <- 0[l1]
	sub.64      %r17205 <- %r17202, %r17200
	load.64     %r17207 <- 0[l2]
	call.64     %r17208 <- lmemfind, %r17201, %r17205, %r17177(p), %r17207
	br          %r17208, .L4077, .L4080

.L4077:
	sub.64      %r17213 <- %r17208, %r17174
	add.64      %r17214 <- %r17213, $1
	call        lua_pushinteger, %arg1, %r17214
	load.64     %r17220 <- 0[l2]
	add.64      %r17221 <- %r17213, %r17220
	call        lua_pushinteger, %arg1, %r17221
	phisrc.32   %phi2879(return) <- $2
	br          .L4079

.L4075:
	load.8      %r17225 <- 0[%r17177(p)]
	scast.32    %r17226 <- (8) %r17225
	seteq.32    %r17227 <- %r17226, $94
	phisrc.64   %phi2887(p) <- %r17177(p)
	br          %r17227, .L4081, .L4083

.L4081:
	add.64      %r17229(p) <- %r17177(p), $1
	phisrc.64   %phi2886(p) <- %r17229(p)
	br          .L4083

.L4083:
	phi.64      %r17232 <- %phi2893(init), %phi2894(init), %phi2895(init)
	add.64      %r17233(s1) <- %r17174, %r17232
	store.64    %arg1 -> 16[ms]
	store.64    %r17174 -> 0[ms]
	load.64     %r17237 <- 0[l1]
	add.64      %r17238 <- %r17174, %r17237
	store.64    %r17238 -> 8[ms]
	phisrc.64   %phi2903(s1) <- %r17233(s1)
	br          .L4084

.L4084:
	store.32    $0 -> 24[ms]
	symaddr.64  %r17239 <- ms
	phi.64      %r17240(s1) <- %phi2903(s1), %phi2904(s1)
	phi.64      %r17241 <- %phi2886(p), %phi2887(p)
	call.64     %r17242 <- match, %r17239, %r17240(s1), %r17241
	br          %r17242, .L4087, .L4085

.L4087:
	br          %arg2, .L4089, .L4090

.L4089:
	sub.64      %r17248 <- %r17240(s1), %r17174
	add.64      %r17249 <- %r17248, $1
	call        lua_pushinteger, %arg1, %r17249
	sub.64      %r17253 <- %r17242, %r17174
	call        lua_pushinteger, %arg1, %r17253
	call.32     %r17255 <- push_captures, %r17239, $0, $0
	add.32      %r17256 <- %r17255, $2
	phisrc.32   %phi2882(return) <- %r17256
	br          .L4079

.L4090:
	call.32     %r17260 <- push_captures, %r17239, %r17240(s1), %r17242
	phisrc.32   %phi2883(return) <- %r17260
	br          .L4079

.L4085:
	add.64      %r17262 <- %r17240(s1), $1
	load.64     %r17263 <- 8[ms]
	setb.32     %r17264 <- %r17240(s1), %r17263
	setne.32    %r17266 <- %r17226, $94
	and-bool.32 %r17267 <- %r17264, %r17266
	phisrc.64   %phi2904(s1) <- %r17262
	br          %r17267, .L4084, .L4080

.L4080:
	call        lua_pushnil, %arg1
	phisrc.32   %phi2884(return) <- $1
	br          .L4079

.L4079:
	phi.32      %r17223 <- %phi2879(return), %phi2882(return), %phi2883(return), %phi2884(return)
	ret.32      %r17223


str_find:
.L4092:
	<entry-point>
	call.32     %r17270 <- str_find_aux, %arg1, $1
	ret.32      %r17270


str_match:
.L4094:
	<entry-point>
	call.32     %r17273 <- str_find_aux, %arg1, $0
	ret.32      %r17273


gmatch_aux:
.L4096:
	<entry-point>
	symaddr.64  %r17276 <- ls
	call.64     %r17277 <- lua_tolstring, %arg1, $0xffffd8ed, %r17276
	call.64     %r17279 <- lua_tolstring, %arg1, $0xffffd8ec, $0
	store.64    %arg1 -> 16[ms]
	store.64    %r17277 -> 0[ms]
	load.64     %r17283 <- 0[ls]
	add.64      %r17284 <- %r17277, %r17283
	store.64    %r17284 -> 8[ms]
	call.64     %r17287 <- lua_tointeger, %arg1, $0xffffd8eb
	add.64      %r17289(src) <- %r17277, %r17287
	phisrc.64   %phi2913(src) <- %r17289(src)
	br          .L4100

.L4100:
	phi.64      %r17290(src) <- %phi2913(src), %phi2914(src)
	load.64     %r17291 <- 8[ms]
	setbe.32    %r17292 <- %r17290(src), %r17291
	br          %r17292, .L4097, .L4099

.L4097:
	store.32    $0 -> 24[ms]
	symaddr.64  %r17293 <- ms
	call.64     %r17296 <- match, %r17293, %r17290(src), %r17279
	br          %r17296, .L4101, .L4098

.L4101:
	sub.64      %r17300(newstart) <- %r17296, %r17277
	seteq.32    %r17303 <- %r17296, %r17290(src)
	phisrc.64   %phi2915(newstart) <- %r17300(newstart)
	br          %r17303, .L4103, .L4104

.L4103:
	add.64      %r17305 <- %r17300(newstart), $1
	phisrc.64   %phi2916(newstart) <- %r17305
	br          .L4104

.L4104:
	phi.64      %r17307 <- %phi2915(newstart), %phi2916(newstart)
	call        lua_pushinteger, %arg1, %r17307
	call        lua_replace, %arg1, $0xffffd8eb
	call.32     %r17312 <- push_captures, %r17293, %r17290(src), %r17296
	phisrc.32   %phi2907(return) <- %r17312
	br          .L4105

.L4098:
	add.64      %r17315 <- %r17290(src), $1
	phisrc.64   %phi2914(src) <- %r17315
	br          .L4100

.L4099:
	phisrc.32   %phi2908(return) <- $0
	br          .L4105

.L4105:
	phi.32      %r17313 <- %phi2907(return), %phi2908(return)
	ret.32      %r17313


gmatch:
.L4106:
	<entry-point>
	call.64     %r17317 <- luaL_checklstring, %arg1, $1, $0
	call.64     %r17319 <- luaL_checklstring, %arg1, $2, $0
	call        lua_settop, %arg1, $2
	call        lua_pushinteger, %arg1, $0
	symaddr.64  %r17323 <- gmatch_aux
	call        lua_pushcclosure, %arg1, %r17323, $3
	ret.32      $1


add_s:
.L4108:
	<entry-point>
	load.64     %r17326 <- 16[%arg1]
	symaddr.64  %r17327 <- l
	call.64     %r17328 <- lua_tolstring, %r17326, $3, %r17327
	phisrc.64   %phi2933(i) <- $0
	br          .L4112

.L4112:
	phi.64      %r17329(i) <- %phi2933(i), %phi2934(i)
	load.64     %r17330 <- 0[l]
	setb.32     %r17331 <- %r17329(i), %r17330
	br          %r17331, .L4109, .L4111

.L4109:
	add.64      %r17334 <- %r17328, %r17329(i)
	load.8      %r17335 <- 0[%r17334]
	scast.32    %r17336 <- (8) %r17335
	setne.32    %r17337 <- %r17336, $37
	br          %r17337, .L4113, .L4114

.L4113:
	load.64     %r17339 <- 0[%arg2]
	add.64      %r17342 <- %arg2, $0x2018
	setb.32     %r17343 <- %r17339, %r17342
	phisrc.64   %phi2936 <- %r17339
	br          %r17343, .L4117, .L4116

.L4116:
	call.64     %r17345 <- luaL_prepbuffer, %arg2
	br          .L4117

.L4117:
	load.8      %r17350 <- 0[%r17334]
	load.64     %r17353 <- 0[%arg2]
	add.64      %r17354 <- %r17353, $1
	store.64    %r17354 -> 0[%arg2]
	store.8     %r17350 -> 0[%r17353]
	phisrc.64   %phi2923(i) <- %r17329(i)
	br          .L4110

.L4114:
	add.64      %r17356 <- %r17329(i), $1
	call.64     %r17357 <- __ctype_b_loc
	load.64     %r17358 <- 0[%r17357]
	add.64      %r17361 <- %r17328, %r17356
	load.8      %r17362 <- 0[%r17361]
	cast.32     %r17364 <- (8) %r17362
	scast.64    %r17365 <- (32) %r17364
	muls.64     %r17366 <- %r17365, $2
	add.64      %r17367 <- %r17358, %r17366
	load.16     %r17368 <- 0[%r17367]
	cast.32     %r17369 <- (16) %r17368
	and.32      %r17370 <- %r17369, $0x800
	br          %r17370, .L4120, .L4119

.L4119:
	load.64     %r17372 <- 0[%arg2]
	add.64      %r17375 <- %arg2, $0x2018
	setb.32     %r17376 <- %r17372, %r17375
	phisrc.64   %phi2935 <- %r17372
	br          %r17376, .L4123, .L4122

.L4122:
	call.64     %r17378 <- luaL_prepbuffer, %arg2
	br          .L4123

.L4123:
	load.8      %r17383 <- 0[%r17361]
	load.64     %r17386 <- 0[%arg2]
	add.64      %r17387 <- %r17386, $1
	store.64    %r17387 -> 0[%arg2]
	store.8     %r17383 -> 0[%r17386]
	phisrc.64   %phi2924(i) <- %r17356
	br          .L4110

.L4120:
	scast.32    %r17392 <- (8) %r17362
	seteq.32    %r17393 <- %r17392, $48
	phisrc.64   %phi2925(i) <- %r17356
	br          %r17393, .L4125, .L4126

.L4125:
	sub.64      %r17398 <- %arg4, %arg3
	call        luaL_addlstring, %arg2, %arg3, %r17398
	br          .L4110

.L4126:
	scast.32    %r17405 <- (8) %r17362
	add.32      %r17406 <- %r17405, $-49
	call        push_onecapture, %arg1, %r17406, %arg3, %arg4
	call        luaL_addvalue, %arg2
	phisrc.64   %phi2926(i) <- %r17356
	br          .L4110

.L4110:
	phi.64      %r17410 <- %phi2923(i), %phi2924(i), %phi2925(i), %phi2926(i)
	add.64      %r17411 <- %r17410, $1
	phisrc.64   %phi2934(i) <- %r17411
	br          .L4112

.L4111:
	ret


add_value:
.L4128:
	<entry-point>
	load.64     %r17413 <- 16[%arg1]
	call.32     %r17415 <- lua_type, %r17413, $3
	switch      %r17415, 3 -> .L4131, 4 -> .L4131, 5 -> .L4133, 6 -> .L4132, default -> .L4129

.L4131:
	call        add_s, %arg1, %arg2, %arg3, %arg4
	br          .L4134

.L4132:
	call        lua_pushvalue, %r17413, $3
	call.32     %r17424 <- push_captures, %arg1, %arg3, %arg4
	call        lua_call, %r17413, %r17424, $1
	br          .L4129

.L4133:
	call        push_onecapture, %arg1, $0, %arg3, %arg4
	call        lua_gettable, %r17413, $3
	br          .L4129

.L4129:
	call.32     %r17432 <- lua_toboolean, %r17413, $0xffffffff
	br          %r17432, .L4136, .L4135

.L4135:
	call        lua_settop, %r17413, $0xfffffffe
	sub.64      %r17438 <- %arg4, %arg3
	call        lua_pushlstring, %r17413, %arg3, %r17438
	br          .L4137

.L4136:
	call.32     %r17441 <- lua_isstring, %r17413, $0xffffffff
	br          %r17441, .L4137, .L4138

.L4138:
	symaddr.64  %r17443 <- <anon symbol:0x62d0014e1dd0>
	call.32     %r17446 <- lua_type, %r17413, $0xffffffff
	call.64     %r17447 <- lua_typename, %r17413, %r17446
	call.32     %r17448 <- luaL_error, %r17413, %r17443, %r17447
	br          .L4137

.L4137:
	call        luaL_addvalue, %arg2
	br          .L4134

.L4134:
	ret


str_gsub:
.L4140:
	<entry-point>
	symaddr.64  %r17451 <- srcl
	call.64     %r17452(src) <- luaL_checklstring, %arg1, $1, %r17451
	call.64     %r17454 <- luaL_checklstring, %arg1, $2, $0
	call.32     %r17456 <- lua_type, %arg1, $3
	load.64     %r17458 <- 0[srcl]
	add.64      %r17459 <- %r17458, $1
	call.64     %r17461 <- luaL_optinteger, %arg1, $4, %r17459
	scast.32    %r17462 <- (64) %r17461
	load.8      %r17464 <- 0[%r17454]
	scast.32    %r17465 <- (8) %r17464
	seteq.32    %r17466 <- %r17465, $94
	phisrc.64   %phi2960(p) <- %r17454
	br          %r17466, .L4141, .L4143

.L4141:
	add.64      %r17468(p) <- %r17454, $1
	phisrc.64   %phi2959(p) <- %r17468(p)
	br          .L4143

.L4143:
	seteq.32    %r17471 <- %r17456, $3
	seteq.32    %r17473 <- %r17456, $4
	or-bool.32  %r17474 <- %r17471, %r17473
	seteq.32    %r17476 <- %r17456, $6
	or-bool.32  %r17477 <- %r17474, %r17476
	seteq.32    %r17479 <- %r17456, $5
	or-bool.32  %r17480 <- %r17477, %r17479
	phisrc.32   %phi2965(n) <- $0
	br          %r17480, .L4146, .L4145

.L4145:
	symaddr.64  %r17482 <- <anon symbol:0x62d0014e2428>
	call.32     %r17483 <- luaL_argerror, %arg1, $3, %r17482
	br          .L4146

.L4146:
	symaddr.64  %r17486 <- b
	call        luaL_buffinit, %arg1, %r17486
	store.64    %arg1 -> 16[ms]
	store.64    %r17452(src) -> 0[ms]
	load.64     %r17490 <- 0[srcl]
	add.64      %r17491 <- %r17452(src), %r17490
	store.64    %r17491 -> 8[ms]
	phisrc.64   %phi2946(src) <- %r17452(src)
	phisrc.64   %phi2955(src) <- %r17452(src)
	phisrc.64   %phi2968(ms) <- %r17491
	phisrc.64   %phi2969 <- %r17491
	phisrc.64   %phi2971 <- %r17491
	phisrc.64   %phi2973 <- %r17491
	br          .L4150

.L4150:
	phi.32      %r17492(n) <- %phi2965(n), %phi2966(n)
	setlt.32    %r17494 <- %r17492(n), %r17462
	phisrc.32   %phi2962(n) <- %r17492(n)
	br          %r17494, .L4147, .L4149

.L4147:
	store.32    $0 -> 24[ms]
	symaddr.64  %r17495 <- ms
	phi.64      %r17496(src) <- %phi2955(src), %phi2956(src), %phi2957(src)
	phi.64      %r17497 <- %phi2959(p), %phi2960(p)
	call.64     %r17498 <- match, %r17495, %r17496(src), %r17497
	br          %r17498, .L4151, .L4152

.L4151:
	add.32      %r17501 <- %r17492(n), $1
	call        add_value, %r17495, %r17486, %r17496(src), %r17498
	phisrc.32   %phi2963(n) <- %r17501
	phisrc.32   %phi2966(n) <- %r17501
	br          .L4152

.L4152:
	seta.32     %r17509 <- %r17498, %r17496(src)
	and-bool.32 %r17510 <- %r17498, %r17509
	br          %r17510, .L4153, .L4154

.L4153:
	phisrc.64   %phi2947(src) <- %r17498
	phisrc.64   %phi2956(src) <- %r17498
	br          .L4155

.L4154:
	load.64     %r17513 <- 8[ms]
	setb.32     %r17514 <- %r17496(src), %r17513
	phisrc.64   %phi2949(src) <- %r17496(src)
	br          %r17514, .L4156, .L4149

.L4156:
	load.64     %r17515 <- 0[b]
	add.64      %r17518 <- %r17486, $0x2018
	setb.32     %r17519 <- %r17515, %r17518
	phisrc.64   %phi2967(b) <- %r17515
	phisrc.64   %phi2970 <- %r17515
	phisrc.64   %phi2972 <- %r17515
	br          %r17519, .L4160, .L4159

.L4159:
	call.64     %r17521 <- luaL_prepbuffer, %r17486
	br          .L4160

.L4160:
	add.64      %r17524 <- %r17496(src), $1
	load.8      %r17525 <- 0[%r17496(src)]
	load.64     %r17527 <- 0[b]
	add.64      %r17528 <- %r17527, $1
	store.64    %r17528 -> 0[b]
	store.8     %r17525 -> 0[%r17527]
	phisrc.64   %phi2948(src) <- %r17524
	phisrc.64   %phi2957(src) <- %r17524
	br          .L4155

.L4155:
	br          %r17466, .L4149, .L4150

.L4149:
	phi.64      %r17531 <- %phi2946(src), %phi2947(src), %phi2948(src), %phi2949(src)
	load.64     %r17532 <- 8[ms]
	sub.64      %r17534 <- %r17532, %r17531
	call        luaL_addlstring, %r17486, %r17531, %r17534
	call        luaL_pushresult, %r17486
	phi.32      %r17538 <- %phi2962(n), %phi2963(n)
	scast.64    %r17539 <- (32) %r17538
	call        lua_pushinteger, %arg1, %r17539
	ret.32      $2


addquoted:
.L4165:
	<entry-point>
	symaddr.64  %r17543 <- l
	call.64     %r17544(s) <- luaL_checklstring, %arg1, %arg3, %r17543
	load.64     %r17546 <- 0[%arg2]
	add.64      %r17549 <- %arg2, $0x2018
	setb.32     %r17550 <- %r17546, %r17549
	phisrc.64   %phi2989(s) <- %r17544(s)
	phisrc.64   %phi2996 <- %r17546
	br          %r17550, .L4168, .L4167

.L4167:
	call.64     %r17552 <- luaL_prepbuffer, %arg2
	br          .L4168

.L4168:
	load.64     %r17555 <- 0[%arg2]
	add.64      %r17556 <- %r17555, $1
	store.64    %r17556 -> 0[%arg2]
	store.8     $34 -> 0[%r17555]
	br          .L4172

.L4172:
	load.64     %r17557 <- 0[l]
	add.64      %r17558 <- %r17557, $-1
	store.64    %r17558 -> 0[l]
	br          %r17557, .L4169, .L4171

.L4169:
	phi.64      %r17559(s) <- %phi2989(s), %phi2990(s)
	load.8      %r17560 <- 0[%r17559(s)]
	phisrc.8    %phi2993 <- %r17560
	switch      %r17560, 0 -> .L4178, 10 -> .L4176, 13 -> .L4177, 34 -> .L4176, 92 -> .L4176, default -> .L4179

.L4176:
	load.64     %r17562 <- 0[%arg2]
	setb.32     %r17566 <- %r17562, %r17549
	phisrc.64   %phi2995 <- %r17562
	br          %r17566, .L4182, .L4181

.L4181:
	call.64     %r17568 <- luaL_prepbuffer, %arg2
	br          .L4182

.L4182:
	load.64     %r17571 <- 0[%arg2]
	add.64      %r17572 <- %r17571, $1
	store.64    %r17572 -> 0[%arg2]
	store.8     $92 -> 0[%r17571]
	load.64     %r17574 <- 0[%arg2]
	setb.32     %r17578 <- %r17574, %r17549
	phisrc.64   %phi2994 <- %r17574
	br          %r17578, .L4185, .L4184

.L4184:
	call.64     %r17580 <- luaL_prepbuffer, %arg2
	br          .L4185

.L4185:
	load.8      %r17583 <- 0[%r17559(s)]
	load.64     %r17586 <- 0[%arg2]
	add.64      %r17587 <- %r17586, $1
	store.64    %r17587 -> 0[%arg2]
	store.8     %r17583 -> 0[%r17586]
	br          .L4173

.L4177:
	symaddr.64  %r17589 <- <anon symbol:0x62d0014e8200>
	call        luaL_addlstring, %arg2, %r17589, $2
	br          .L4173

.L4178:
	symaddr.64  %r17591 <- <anon symbol:0x62d0014e85a0>
	call        luaL_addlstring, %arg2, %r17591, $4
	br          .L4173

.L4179:
	load.64     %r17593 <- 0[%arg2]
	setb.32     %r17597 <- %r17593, %r17549
	phisrc.64   %phi2992 <- %r17593
	br          %r17597, .L4188, .L4187

.L4187:
	call.64     %r17599 <- luaL_prepbuffer, %arg2
	br          .L4188

.L4188:
	load.8      %r17602 <- 0[%r17559(s)]
	load.64     %r17605 <- 0[%arg2]
	add.64      %r17606 <- %r17605, $1
	store.64    %r17606 -> 0[%arg2]
	store.8     %r17602 -> 0[%r17605]
	br          .L4173

.L4173:
	add.64      %r17608 <- %r17559(s), $1
	phisrc.64   %phi2990(s) <- %r17608
	br          .L4172

.L4171:
	load.64     %r17610 <- 0[%arg2]
	setb.32     %r17614 <- %r17610, %r17549
	phisrc.64   %phi2991 <- %r17610
	br          %r17614, .L4191, .L4190

.L4190:
	call.64     %r17616 <- luaL_prepbuffer, %arg2
	br          .L4191

.L4191:
	load.64     %r17619 <- 0[%arg2]
	add.64      %r17620 <- %r17619, $1
	store.64    %r17620 -> 0[%arg2]
	store.8     $34 -> 0[%r17619]
	ret


scanformat:
.L4193:
	<entry-point>
	phisrc.64   %phi3017(p) <- %arg2
	br          .L4197

.L4197:
	phi.64      %r17622 <- %phi3017(p), %phi3018(p)
	load.8      %r17623 <- 0[%r17622]
	scast.32    %r17624 <- (8) %r17623
	setne.32    %r17625 <- %r17624, $0
	symaddr.64  %r17626 <- <anon symbol:0x62d0014e9b60>
	scast.32    %r17629 <- (8) %r17623
	call.64     %r17630 <- strchr, %r17626, %r17629
	setne.32    %r17631 <- %r17630, $0
	and-bool.32 %r17632 <- %r17625, %r17631
	br          %r17632, .L4194, .L4196

.L4194:
	add.64      %r17634 <- %r17622, $1
	phisrc.64   %phi3018(p) <- %r17634
	br          .L4197

.L4196:
	sub.64      %r17637 <- %r17622, %arg2
	setae.32    %r17639 <- %r17637, $6
	br          %r17639, .L4198, .L4199

.L4198:
	symaddr.64  %r17641 <- <anon symbol:0x62d0014ea1b8>
	call.32     %r17642 <- luaL_error, %arg1, %r17641
	br          .L4199

.L4199:
	call.64     %r17643 <- __ctype_b_loc
	load.64     %r17644 <- 0[%r17643]
	load.8      %r17646 <- 0[%r17622]
	cast.32     %r17648 <- (8) %r17646
	scast.64    %r17649 <- (32) %r17648
	muls.64     %r17650 <- %r17649, $2
	add.64      %r17651 <- %r17644, %r17650
	load.16     %r17652 <- 0[%r17651]
	cast.32     %r17653 <- (16) %r17652
	and.32      %r17654 <- %r17653, $0x800
	phisrc.64   %phi3011(p) <- %r17622
	br          %r17654, .L4200, .L4201

.L4200:
	add.64      %r17656 <- %r17622, $1
	phisrc.64   %phi3012(p) <- %r17656
	br          .L4201

.L4201:
	call.64     %r17657 <- __ctype_b_loc
	load.64     %r17658 <- 0[%r17657]
	phi.64      %r17659(p) <- %phi3011(p), %phi3012(p)
	load.8      %r17660 <- 0[%r17659(p)]
	cast.32     %r17662 <- (8) %r17660
	scast.64    %r17663 <- (32) %r17662
	muls.64     %r17664 <- %r17663, $2
	add.64      %r17665 <- %r17658, %r17664
	load.16     %r17666 <- 0[%r17665]
	cast.32     %r17667 <- (16) %r17666
	and.32      %r17668 <- %r17667, $0x800
	phisrc.64   %phi3008(p) <- %r17659(p)
	br          %r17668, .L4202, .L4203

.L4202:
	add.64      %r17670 <- %r17659(p), $1
	phisrc.64   %phi3009(p) <- %r17670
	br          .L4203

.L4203:
	phi.64      %r17671(p) <- %phi3008(p), %phi3009(p)
	load.8      %r17672 <- 0[%r17671(p)]
	scast.32    %r17673 <- (8) %r17672
	seteq.32    %r17674 <- %r17673, $46
	phisrc.64   %phi3000(p) <- %r17671(p)
	br          %r17674, .L4204, .L4205

.L4204:
	add.64      %r17676 <- %r17671(p), $1
	call.64     %r17677 <- __ctype_b_loc
	load.64     %r17678 <- 0[%r17677]
	load.8      %r17680 <- 1[%r17671(p)]
	cast.32     %r17682 <- (8) %r17680
	scast.64    %r17683 <- (32) %r17682
	muls.64     %r17684 <- %r17683, $2
	add.64      %r17685 <- %r17678, %r17684
	load.16     %r17686 <- 0[%r17685]
	cast.32     %r17687 <- (16) %r17686
	and.32      %r17688 <- %r17687, $0x800
	phisrc.64   %phi3004(p) <- %r17676
	br          %r17688, .L4206, .L4207

.L4206:
	add.64      %r17690 <- %r17676, $1
	phisrc.64   %phi3005(p) <- %r17690
	br          .L4207

.L4207:
	call.64     %r17691 <- __ctype_b_loc
	load.64     %r17692 <- 0[%r17691]
	phi.64      %r17693(p) <- %phi3004(p), %phi3005(p)
	load.8      %r17694 <- 0[%r17693(p)]
	cast.32     %r17696 <- (8) %r17694
	scast.64    %r17697 <- (32) %r17696
	muls.64     %r17698 <- %r17697, $2
	add.64      %r17699 <- %r17692, %r17698
	load.16     %r17700 <- 0[%r17699]
	cast.32     %r17701 <- (16) %r17700
	and.32      %r17702 <- %r17701, $0x800
	phisrc.64   %phi3001(p) <- %r17693(p)
	br          %r17702, .L4208, .L4205

.L4208:
	add.64      %r17704 <- %r17693(p), $1
	phisrc.64   %phi3002(p) <- %r17704
	br          .L4205

.L4205:
	call.64     %r17705 <- __ctype_b_loc
	load.64     %r17706 <- 0[%r17705]
	phi.64      %r17707(p) <- %phi3000(p), %phi3001(p), %phi3002(p)
	load.8      %r17708 <- 0[%r17707(p)]
	cast.32     %r17710 <- (8) %r17708
	scast.64    %r17711 <- (32) %r17710
	muls.64     %r17712 <- %r17711, $2
	add.64      %r17713 <- %r17706, %r17712
	load.16     %r17714 <- 0[%r17713]
	cast.32     %r17715 <- (16) %r17714
	and.32      %r17716 <- %r17715, $0x800
	br          %r17716, .L4210, .L4211

.L4210:
	symaddr.64  %r17718 <- <anon symbol:0x62d0014eb3d8>
	call.32     %r17719 <- luaL_error, %arg1, %r17718
	br          .L4211

.L4211:
	add.64      %r17721 <- %arg3, $1
	store.8     $37 -> 0[%arg3]
	sub.64      %r17726 <- %r17707(p), %arg2
	add.64      %r17727 <- %r17726, $1
	call.64     %r17729 <- strncpy, %r17721, %arg2, %r17727
	cast.64     %r17735 <- (64) %r17721
	add.64      %r17736 <- %r17735, %r17727
	ptrcast.64  %r17737 <- (64) %r17736
	store.8     $0 -> 0[%r17737]
	ret.64      %r17707(p)


addintlen:
.L4213:
	<entry-point>
	call.64     %r17742 <- strlen, %arg1
	add.64      %r17745 <- %r17742, $-1
	add.64      %r17746 <- %arg1, %r17745
	load.8      %r17747 <- 0[%r17746]
	add.64      %r17750 <- %arg1, %r17742
	add.64      %r17751 <- %r17750, $-1
	symaddr.64  %r17752 <- <anon symbol:0x62d0014eba30>
	call.64     %r17753 <- strcpy, %r17751, %r17752
	add.64      %r17757 <- %r17742, $2
	add.64      %r17758 <- %r17757, $-2
	add.64      %r17759 <- %arg1, %r17758
	store.8     %r17747 -> 0[%r17759]
	add.64      %r17763 <- %r17757, $-1
	add.64      %r17764 <- %arg1, %r17763
	store.8     $0 -> 0[%r17764]
	ret


str_format:
.L4215:
	<entry-point>
	call.32     %r17766 <- lua_gettop, %arg1
	symaddr.64  %r17769 <- sfl
	call.64     %r17770 <- luaL_checklstring, %arg1, $1, %r17769
	load.64     %r17772 <- 0[sfl]
	add.64      %r17773 <- %r17770, %r17772
	symaddr.64  %r17775 <- b
	call        luaL_buffinit, %arg1, %r17775
	phisrc.32   %phi3039(arg) <- $1
	phisrc.64   %phi3047(strfrmt) <- %r17770
	br          .L4219

.L4219:
	phi.64      %r17776(strfrmt) <- %phi3047(strfrmt), %phi3048(strfrmt), %phi3049(strfrmt), %phi3050(strfrmt)
	setb.32     %r17778 <- %r17776(strfrmt), %r17773
	br          %r17778, .L4216, .L4218

.L4216:
	load.8      %r17780 <- 0[%r17776(strfrmt)]
	scast.32    %r17781 <- (8) %r17780
	setne.32    %r17782 <- %r17781, $37
	phisrc.8    %phi3056 <- %r17780
	phisrc.8    %phi3061 <- %r17780
	br          %r17782, .L4220, .L4221

.L4220:
	load.64     %r17783 <- 0[b]
	add.64      %r17786 <- %r17775, $0x2018
	setb.32     %r17787 <- %r17783, %r17786
	phisrc.64   %phi3052(b) <- %r17783
	phisrc.64   %phi3055 <- %r17783
	phisrc.64   %phi3060 <- %r17783
	br          %r17787, .L4224, .L4223

.L4223:
	call.64     %r17789 <- luaL_prepbuffer, %r17775
	br          .L4224

.L4224:
	add.64      %r17792 <- %r17776(strfrmt), $1
	load.8      %r17793 <- 0[%r17776(strfrmt)]
	load.64     %r17795 <- 0[b]
	add.64      %r17796 <- %r17795, $1
	store.64    %r17796 -> 0[b]
	store.8     %r17793 -> 0[%r17795]
	phisrc.64   %phi3049(strfrmt) <- %r17792
	br          .L4219

.L4221:
	add.64      %r17798(strfrmt) <- %r17776(strfrmt), $1
	load.8      %r17799 <- 1[%r17776(strfrmt)]
	scast.32    %r17800 <- (8) %r17799
	seteq.32    %r17801 <- %r17800, $37
	phisrc.8    %phi3054 <- %r17799
	phisrc.8    %phi3059 <- %r17799
	br          %r17801, .L4226, .L4227

.L4226:
	load.64     %r17802 <- 0[b]
	add.64      %r17805 <- %r17775, $0x2018
	setb.32     %r17806 <- %r17802, %r17805
	phisrc.64   %phi3051(b) <- %r17802
	phisrc.64   %phi3053 <- %r17802
	phisrc.64   %phi3058 <- %r17802
	br          %r17806, .L4230, .L4229

.L4229:
	call.64     %r17808 <- luaL_prepbuffer, %r17775
	br          .L4230

.L4230:
	add.64      %r17811 <- %r17798(strfrmt), $1
	load.8      %r17812 <- 1[%r17776(strfrmt)]
	load.64     %r17814 <- 0[b]
	add.64      %r17815 <- %r17814, $1
	store.64    %r17815 -> 0[b]
	store.8     %r17812 -> 0[%r17814]
	phisrc.64   %phi3050(strfrmt) <- %r17811
	br          .L4219

.L4227:
	phi.32      %r17816 <- %phi3039(arg), %phi3040(arg)
	add.32      %r17817(arg) <- %r17816, $1
	setgt.32    %r17819 <- %r17817(arg), %r17766
	phisrc.32   %phi3040(arg) <- %r17817(arg)
	br          %r17819, .L4232, .L4233

.L4232:
	symaddr.64  %r17822 <- <anon symbol:0x62d0014fa7b8>
	call.32     %r17823 <- luaL_argerror, %arg1, %r17817(arg), %r17822
	br          .L4233

.L4233:
	symaddr.64  %r17826 <- form
	call.64     %r17827 <- scanformat, %arg1, %r17798(strfrmt), %r17826
	add.64      %r17829(strfrmt) <- %r17827, $1
	load.8      %r17830 <- 0[%r17827]
	phisrc.64   %phi3048(strfrmt) <- %r17829(strfrmt)
	switch      %r17830, 69 -> .L4246, 71 -> .L4246, 88 -> .L4241, 99 -> .L4235, 100 -> .L4237, 101 -> .L4246, 102 -> .L4246, 103 -> .L4246, 105 -> .L4237, 111 -> .L4241, 113 -> .L4247, 115 -> .L4248, 117 -> .L4241, 120 -> .L4241, default -> .L4249

.L4235:
	symaddr.64  %r17831 <- buff
	call.64     %r17835 <- luaL_checknumber, %arg1, %r17817(arg)
	cast.32     %r17836 <- (64) %r17835
	call.32     %r17837 <- sprintf, %r17831, %r17826, %r17836
	br          .L4234

.L4237:
	call        addintlen, %r17826
	symaddr.64  %r17839 <- buff
	call.64     %r17843 <- luaL_checknumber, %arg1, %r17817(arg)
	call.32     %r17845 <- sprintf, %r17839, %r17826, %r17843
	br          .L4234

.L4241:
	call        addintlen, %r17826
	symaddr.64  %r17847 <- buff
	call.64     %r17851 <- luaL_checknumber, %arg1, %r17817(arg)
	call.32     %r17853 <- sprintf, %r17847, %r17826, %r17851
	br          .L4234

.L4246:
	symaddr.64  %r17854 <- buff
	call.64     %r17858 <- luaL_checknumber, %arg1, %r17817(arg)
	call.32     %r17860 <- sprintf, %r17854, %r17826, %r17858
	br          .L4234

.L4247:
	call        addquoted, %arg1, %r17775, %r17817(arg)
	br          .L4219

.L4248:
	symaddr.64  %r17866 <- l
	call.64     %r17867 <- luaL_checklstring, %arg1, %r17817(arg), %r17866
	call.64     %r17869 <- strchr, %r17826, $46
	seteq.32    %r17870 <- %r17869, $0
	load.64     %r17871 <- 0[l]
	setae.32    %r17872 <- %r17871, $100
	and-bool.32 %r17873 <- %r17870, %r17872
	br          %r17873, .L4250, .L4251

.L4250:
	call        lua_pushvalue, %arg1, %r17817(arg)
	call        luaL_addvalue, %r17775
	br          .L4219

.L4251:
	symaddr.64  %r17877 <- buff
	call.32     %r17880 <- sprintf, %r17877, %r17826, %r17867
	br          .L4234

.L4249:
	symaddr.64  %r17882 <- <anon symbol:0x62d0014fcb10>
	scast.32    %r17886 <- (8) %r17830
	call.32     %r17887 <- luaL_error, %arg1, %r17882, %r17886
	phisrc.32   %phi3023(return) <- %r17887
	br          .L4253

.L4234:
	symaddr.64  %r17890 <- buff
	symaddr.64  %r17891 <- buff
	call.64     %r17892 <- strlen, %r17891
	call        luaL_addlstring, %r17775, %r17890, %r17892
	br          .L4219

.L4218:
	call        luaL_pushresult, %r17775
	phisrc.32   %phi3024(return) <- $1
	br          .L4253

.L4253:
	phi.32      %r17888 <- %phi3023(return), %phi3024(return)
	ret.32      %r17888


createmetatable:
.L4254:
	<entry-point>
	call        lua_createtable, %arg1, $0, $1
	symaddr.64  %r17896 <- <anon symbol:0x62d0014fd6d8>
	call        lua_pushlstring, %arg1, %r17896, $0
	call        lua_pushvalue, %arg1, $0xfffffffe
	call.32     %r17899 <- lua_setmetatable, %arg1, $0xfffffffe
	call        lua_settop, %arg1, $0xfffffffe
	call        lua_pushvalue, %arg1, $0xfffffffe
	symaddr.64  %r17903 <- <anon symbol:0x62d0014fdc48>
	call        lua_setfield, %arg1, $0xfffffffe, %r17903
	call        lua_settop, %arg1, $0xfffffffe
	ret


luaopen_string:
.L4256:
	<entry-point>
	symaddr.64  %r17906 <- <anon symbol:0x62d0014fdfe8>
	symaddr.64  %r17907 <- strlib
	call        luaL_register, %arg1, %r17906, %r17907
	call        createmetatable, %arg1
	ret.32      $1


luaL_openlibs:
.L4258:
	<entry-point>
	symaddr.64  %r17910(lib) <- lualibs
	phisrc.64   %phi3065(lib) <- %r17910(lib)
	br          .L4262

.L4262:
	phi.64      %r17911(lib) <- %phi3065(lib), %phi3066(lib)
	load.64     %r17912 <- 8[%r17911(lib)]
	br          %r17912, .L4259, .L4261

.L4259:
	call        lua_pushcclosure, %arg1, %r17912, $0
	load.64     %r17918 <- 0[%r17911(lib)]
	call        lua_pushstring, %arg1, %r17918
	call        lua_call, %arg1, $1, $0
	add.64      %r17921 <- %r17911(lib), $16
	phisrc.64   %phi3066(lib) <- %r17921
	br          .L4262

.L4261:
	ret


barg:
.L4263:
	<entry-point>
	call.64     %r17924 <- lua_tonumber, %arg1, %arg2
	set.64      %r17925 <- 6755399441055744.000000
	add.64      %r17926 <- %r17924, %r17925
	set.64      %r17928 <- 0.000000
	seteq.32    %r17929 <- %r17926, %r17928
	br          %r17929, .L4266, .L4265

.L4266:
	call.32     %r17932 <- lua_isnumber, %arg1, %arg2
	br          %r17932, .L4265, .L4264

.L4264:
	symaddr.64  %r17935 <- <anon symbol:0x62d0014fed80>
	call.32     %r17936 <- luaL_typerror, %arg1, %arg2, %r17935
	br          .L4265

.L4265:
	cast.32     %r17938 <- (64) %r17926
	ret.32      %r17938


tobit:
.L4268:
	<entry-point>
	call.32     %r17942 <- barg, %arg1, $1
	fpcast.64   %r17944 <- (32) %r17942
	call        lua_pushnumber, %arg1, %r17944
	ret.32      $1


bnot:
.L4270:
	<entry-point>
	call.32     %r17948 <- barg, %arg1, $1
	not.32      %r17949 <- %r17948
	fpcast.64   %r17951 <- (32) %r17949
	call        lua_pushnumber, %arg1, %r17951
	ret.32      $1


band:
.L4272:
	<entry-point>
	call.32     %r17954(b) <- barg, %arg1, $1
	call.32     %r17956(i) <- lua_gettop, %arg1
	phisrc.32   %phi3074(b) <- %r17954(b)
	phisrc.32   %phi3078(i) <- %r17956(i)
	br          .L4276

.L4276:
	phi.32      %r17957(i) <- %phi3078(i), %phi3079(i)
	setgt.32    %r17958 <- %r17957(i), $1
	phi.32      %r17962 <- %phi3074(b), %phi3075(b)
	br          %r17958, .L4273, .L4275

.L4273:
	call.32     %r17961 <- barg, %arg1, %r17957(i)
	and.32      %r17964 <- %r17962, %r17961
	phisrc.32   %phi3075(b) <- %r17964
	add.32      %r17967 <- %r17957(i), $-1
	phisrc.32   %phi3079(i) <- %r17967
	br          .L4276

.L4275:
	fpcast.64   %r17971 <- (32) %r17962
	call        lua_pushnumber, %arg1, %r17971
	ret.32      $1


bor:
.L4278:
	<entry-point>
	call.32     %r17974(b) <- barg, %arg1, $1
	call.32     %r17976(i) <- lua_gettop, %arg1
	phisrc.32   %phi3083(b) <- %r17974(b)
	phisrc.32   %phi3087(i) <- %r17976(i)
	br          .L4282

.L4282:
	phi.32      %r17977(i) <- %phi3087(i), %phi3088(i)
	setgt.32    %r17978 <- %r17977(i), $1
	phi.32      %r17982 <- %phi3083(b), %phi3084(b)
	br          %r17978, .L4279, .L4281

.L4279:
	call.32     %r17981 <- barg, %arg1, %r17977(i)
	or.32       %r17984 <- %r17982, %r17981
	phisrc.32   %phi3084(b) <- %r17984
	add.32      %r17987 <- %r17977(i), $-1
	phisrc.32   %phi3088(i) <- %r17987
	br          .L4282

.L4281:
	fpcast.64   %r17991 <- (32) %r17982
	call        lua_pushnumber, %arg1, %r17991
	ret.32      $1


bxor:
.L4284:
	<entry-point>
	call.32     %r17994(b) <- barg, %arg1, $1
	call.32     %r17996(i) <- lua_gettop, %arg1
	phisrc.32   %phi3092(b) <- %r17994(b)
	phisrc.32   %phi3096(i) <- %r17996(i)
	br          .L4288

.L4288:
	phi.32      %r17997(i) <- %phi3096(i), %phi3097(i)
	setgt.32    %r17998 <- %r17997(i), $1
	phi.32      %r18002 <- %phi3092(b), %phi3093(b)
	br          %r17998, .L4285, .L4287

.L4285:
	call.32     %r18001 <- barg, %arg1, %r17997(i)
	xor.32      %r18004 <- %r18002, %r18001
	phisrc.32   %phi3093(b) <- %r18004
	add.32      %r18007 <- %r17997(i), $-1
	phisrc.32   %phi3097(i) <- %r18007
	br          .L4288

.L4287:
	fpcast.64   %r18011 <- (32) %r18002
	call        lua_pushnumber, %arg1, %r18011
	ret.32      $1


lshift:
.L4290:
	<entry-point>
	call.32     %r18014 <- barg, %arg1, $1
	call.32     %r18016 <- barg, %arg1, $2
	and.32      %r18017 <- %r18016, $31
	shl.32      %r18021 <- %r18014, %r18017
	fpcast.64   %r18023 <- (32) %r18021
	call        lua_pushnumber, %arg1, %r18023
	ret.32      $1


rshift:
.L4292:
	<entry-point>
	call.32     %r18026 <- barg, %arg1, $1
	call.32     %r18028 <- barg, %arg1, $2
	and.32      %r18029 <- %r18028, $31
	lsr.32      %r18033 <- %r18026, %r18029
	fpcast.64   %r18035 <- (32) %r18033
	call        lua_pushnumber, %arg1, %r18035
	ret.32      $1


arshift:
.L4294:
	<entry-point>
	call.32     %r18038 <- barg, %arg1, $1
	call.32     %r18040 <- barg, %arg1, $2
	and.32      %r18041 <- %r18040, $31
	asr.32      %r18046 <- %r18038, %r18041
	fpcast.64   %r18048 <- (32) %r18046
	call        lua_pushnumber, %arg1, %r18048
	ret.32      $1


rol:
.L4296:
	<entry-point>
	call.32     %r18051 <- barg, %arg1, $1
	call.32     %r18053 <- barg, %arg1, $2
	and.32      %r18054 <- %r18053, $31
	shl.32      %r18058 <- %r18051, %r18054
	sub.32      %r18061 <- $32, %r18054
	lsr.32      %r18062 <- %r18051, %r18061
	or.32       %r18063 <- %r18058, %r18062
	fpcast.64   %r18065 <- (32) %r18063
	call        lua_pushnumber, %arg1, %r18065
	ret.32      $1


ror:
.L4298:
	<entry-point>
	call.32     %r18068 <- barg, %arg1, $1
	call.32     %r18070 <- barg, %arg1, $2
	and.32      %r18071 <- %r18070, $31
	lsr.32      %r18075 <- %r18068, %r18071
	sub.32      %r18078 <- $32, %r18071
	shl.32      %r18079 <- %r18068, %r18078
	or.32       %r18080 <- %r18075, %r18079
	fpcast.64   %r18082 <- (32) %r18080
	call        lua_pushnumber, %arg1, %r18082
	ret.32      $1


bswap:
.L4300:
	<entry-point>
	call.32     %r18085 <- barg, %arg1, $1
	lsr.32      %r18087 <- %r18085, $24
	lsr.32      %r18089 <- %r18085, $8
	and.32      %r18090 <- %r18089, $0xff00
	or.32       %r18091 <- %r18087, %r18090
	and.32      %r18093 <- %r18085, $0xff00
	shl.32      %r18094 <- %r18093, $8
	or.32       %r18095 <- %r18091, %r18094
	shl.32      %r18097 <- %r18085, $24
	or.32       %r18098 <- %r18095, %r18097
	fpcast.64   %r18102 <- (32) %r18098
	call        lua_pushnumber, %arg1, %r18102
	ret.32      $1


tohex:
.L4302:
	<entry-point>
	call.32     %r18105(b) <- barg, %arg1, $1
	call.32     %r18107 <- lua_type, %arg1, $2
	seteq.32    %r18108 <- %r18107, $0xffffffff
	phisrc.32   %phi3107(b) <- %r18105(b)
	br          %r18108, .L4303, .L4304

.L4303:
	phisrc.32   %phi3104 <- $8
	br          .L4305

.L4304:
	call.32     %r18110 <- barg, %arg1, $2
	phisrc.32   %phi3105 <- %r18110
	br          .L4305

.L4305:
	phi.32      %r18112 <- %phi3104, %phi3105
	symaddr.64  %r18113(hexdigits) <- <anon symbol:0x62d0014ff208>
	setlt.32    %r18115 <- %r18112, $0
	phisrc.32   %phi3112(n) <- %r18112
	phisrc.64   %phi3115(hexdigits) <- %r18113(hexdigits)
	br          %r18115, .L4306, .L4307

.L4306:
	neg.32      %r18117 <- %r18112
	symaddr.64  %r18118 <- <anon symbol:0x62d0014ff5a8>
	phisrc.32   %phi3113(n) <- %r18117
	phisrc.64   %phi3116(hexdigits) <- %r18118
	br          .L4307

.L4307:
	phi.32      %r18119(n) <- %phi3112(n), %phi3113(n)
	setgt.32    %r18120 <- %r18119(n), $8
	select.32   %r18121(n) <- %r18120, $8, %r18119(n)
	phisrc.32   %phi3118(i) <- %r18121(n)
	br          .L4313

.L4313:
	phi.32      %r18123 <- %phi3118(i), %phi3119(i)
	add.32      %r18124(i) <- %r18123, $-1
	setge.32    %r18125 <- %r18124(i), $0
	phisrc.32   %phi3119(i) <- %r18124(i)
	symaddr.64  %r18133 <- buf
	br          %r18125, .L4310, .L4312

.L4310:
	phi.64      %r18126 <- %phi3115(hexdigits), %phi3116(hexdigits)
	phi.32      %r18127 <- %phi3107(b), %phi3108(b)
	and.32      %r18128 <- %r18127, $15
	cast.64     %r18129 <- (32) %r18128
	add.64      %r18130 <- %r18126, %r18129
	load.8      %r18131 <- 0[%r18130]
	scast.64    %r18135 <- (32) %r18124(i)
	add.64      %r18136 <- %r18133, %r18135
	store.8     %r18131 -> 0[%r18136]
	lsr.32      %r18139 <- %r18127, $4
	phisrc.32   %phi3108(b) <- %r18139
	br          .L4313

.L4312:
	scast.64    %r18144 <- (32) %r18121(n)
	call        lua_pushlstring, %arg1, %r18133, %r18144
	ret.32      $1


init_globals:
.L4315:
	<entry-point>
	store.64    $0 -> 0[luaO_nilobject_]
	store.32    $0 -> 8[luaO_nilobject_]
	store.8     $0 -> 0[log_2]
	store.8     $1 -> 1[log_2]
	store.8     $2 -> 2[log_2]
	store.8     $2 -> 3[log_2]
	store.8     $3 -> 4[log_2]
	store.8     $3 -> 5[log_2]
	store.8     $3 -> 6[log_2]
	store.8     $3 -> 7[log_2]
	store.8     $4 -> 8[log_2]
	store.8     $4 -> 9[log_2]
	store.8     $4 -> 10[log_2]
	store.8     $4 -> 11[log_2]
	store.8     $4 -> 12[log_2]
	store.8     $4 -> 13[log_2]
	store.8     $4 -> 14[log_2]
	store.8     $4 -> 15[log_2]
	store.8     $5 -> 16[log_2]
	store.8     $5 -> 17[log_2]
	store.8     $5 -> 18[log_2]
	store.8     $5 -> 19[log_2]
	store.8     $5 -> 20[log_2]
	store.8     $5 -> 21[log_2]
	store.8     $5 -> 22[log_2]
	store.8     $5 -> 23[log_2]
	store.8     $5 -> 24[log_2]
	store.8     $5 -> 25[log_2]
	store.8     $5 -> 26[log_2]
	store.8     $5 -> 27[log_2]
	store.8     $5 -> 28[log_2]
	store.8     $5 -> 29[log_2]
	store.8     $5 -> 30[log_2]
	store.8     $5 -> 31[log_2]
	store.8     $6 -> 32[log_2]
	store.8     $6 -> 33[log_2]
	store.8     $6 -> 34[log_2]
	store.8     $6 -> 35[log_2]
	store.8     $6 -> 36[log_2]
	store.8     $6 -> 37[log_2]
	store.8     $6 -> 38[log_2]
	store.8     $6 -> 39[log_2]
	store.8     $6 -> 40[log_2]
	store.8     $6 -> 41[log_2]
	store.8     $6 -> 42[log_2]
	store.8     $6 -> 43[log_2]
	store.8     $6 -> 44[log_2]
	store.8     $6 -> 45[log_2]
	store.8     $6 -> 46[log_2]
	store.8     $6 -> 47[log_2]
	store.8     $6 -> 48[log_2]
	store.8     $6 -> 49[log_2]
	store.8     $6 -> 50[log_2]
	store.8     $6 -> 51[log_2]
	store.8     $6 -> 52[log_2]
	store.8     $6 -> 53[log_2]
	store.8     $6 -> 54[log_2]
	store.8     $6 -> 55[log_2]
	store.8     $6 -> 56[log_2]
	store.8     $6 -> 57[log_2]
	store.8     $6 -> 58[log_2]
	store.8     $6 -> 59[log_2]
	store.8     $6 -> 60[log_2]
	store.8     $6 -> 61[log_2]
	store.8     $6 -> 62[log_2]
	store.8     $6 -> 63[log_2]
	store.8     $7 -> 64[log_2]
	store.8     $7 -> 65[log_2]
	store.8     $7 -> 66[log_2]
	store.8     $7 -> 67[log_2]
	store.8     $7 -> 68[log_2]
	store.8     $7 -> 69[log_2]
	store.8     $7 -> 70[log_2]
	store.8     $7 -> 71[log_2]
	store.8     $7 -> 72[log_2]
	store.8     $7 -> 73[log_2]
	store.8     $7 -> 74[log_2]
	store.8     $7 -> 75[log_2]
	store.8     $7 -> 76[log_2]
	store.8     $7 -> 77[log_2]
	store.8     $7 -> 78[log_2]
	store.8     $7 -> 79[log_2]
	store.8     $7 -> 80[log_2]
	store.8     $7 -> 81[log_2]
	store.8     $7 -> 82[log_2]
	store.8     $7 -> 83[log_2]
	store.8     $7 -> 84[log_2]
	store.8     $7 -> 85[log_2]
	store.8     $7 -> 86[log_2]
	store.8     $7 -> 87[log_2]
	store.8     $7 -> 88[log_2]
	store.8     $7 -> 89[log_2]
	store.8     $7 -> 90[log_2]
	store.8     $7 -> 91[log_2]
	store.8     $7 -> 92[log_2]
	store.8     $7 -> 93[log_2]
	store.8     $7 -> 94[log_2]
	store.8     $7 -> 95[log_2]
	store.8     $7 -> 96[log_2]
	store.8     $7 -> 97[log_2]
	store.8     $7 -> 98[log_2]
	store.8     $7 -> 99[log_2]
	store.8     $7 -> 100[log_2]
	store.8     $7 -> 101[log_2]
	store.8     $7 -> 102[log_2]
	store.8     $7 -> 103[log_2]
	store.8     $7 -> 104[log_2]
	store.8     $7 -> 105[log_2]
	store.8     $7 -> 106[log_2]
	store.8     $7 -> 107[log_2]
	store.8     $7 -> 108[log_2]
	store.8     $7 -> 109[log_2]
	store.8     $7 -> 110[log_2]
	store.8     $7 -> 111[log_2]
	store.8     $7 -> 112[log_2]
	store.8     $7 -> 113[log_2]
	store.8     $7 -> 114[log_2]
	store.8     $7 -> 115[log_2]
	store.8     $7 -> 116[log_2]
	store.8     $7 -> 117[log_2]
	store.8     $7 -> 118[log_2]
	store.8     $7 -> 119[log_2]
	store.8     $7 -> 120[log_2]
	store.8     $7 -> 121[log_2]
	store.8     $7 -> 122[log_2]
	store.8     $7 -> 123[log_2]
	store.8     $7 -> 124[log_2]
	store.8     $7 -> 125[log_2]
	store.8     $7 -> 126[log_2]
	store.8     $7 -> 127[log_2]
	store.8     $8 -> 128[log_2]
	store.8     $8 -> 129[log_2]
	store.8     $8 -> 130[log_2]
	store.8     $8 -> 131[log_2]
	store.8     $8 -> 132[log_2]
	store.8     $8 -> 133[log_2]
	store.8     $8 -> 134[log_2]
	store.8     $8 -> 135[log_2]
	store.8     $8 -> 136[log_2]
	store.8     $8 -> 137[log_2]
	store.8     $8 -> 138[log_2]
	store.8     $8 -> 139[log_2]
	store.8     $8 -> 140[log_2]
	store.8     $8 -> 141[log_2]
	store.8     $8 -> 142[log_2]
	store.8     $8 -> 143[log_2]
	store.8     $8 -> 144[log_2]
	store.8     $8 -> 145[log_2]
	store.8     $8 -> 146[log_2]
	store.8     $8 -> 147[log_2]
	store.8     $8 -> 148[log_2]
	store.8     $8 -> 149[log_2]
	store.8     $8 -> 150[log_2]
	store.8     $8 -> 151[log_2]
	store.8     $8 -> 152[log_2]
	store.8     $8 -> 153[log_2]
	store.8     $8 -> 154[log_2]
	store.8     $8 -> 155[log_2]
	store.8     $8 -> 156[log_2]
	store.8     $8 -> 157[log_2]
	store.8     $8 -> 158[log_2]
	store.8     $8 -> 159[log_2]
	store.8     $8 -> 160[log_2]
	store.8     $8 -> 161[log_2]
	store.8     $8 -> 162[log_2]
	store.8     $8 -> 163[log_2]
	store.8     $8 -> 164[log_2]
	store.8     $8 -> 165[log_2]
	store.8     $8 -> 166[log_2]
	store.8     $8 -> 167[log_2]
	store.8     $8 -> 168[log_2]
	store.8     $8 -> 169[log_2]
	store.8     $8 -> 170[log_2]
	store.8     $8 -> 171[log_2]
	store.8     $8 -> 172[log_2]
	store.8     $8 -> 173[log_2]
	store.8     $8 -> 174[log_2]
	store.8     $8 -> 175[log_2]
	store.8     $8 -> 176[log_2]
	store.8     $8 -> 177[log_2]
	store.8     $8 -> 178[log_2]
	store.8     $8 -> 179[log_2]
	store.8     $8 -> 180[log_2]
	store.8     $8 -> 181[log_2]
	store.8     $8 -> 182[log_2]
	store.8     $8 -> 183[log_2]
	store.8     $8 -> 184[log_2]
	store.8     $8 -> 185[log_2]
	store.8     $8 -> 186[log_2]
	store.8     $8 -> 187[log_2]
	store.8     $8 -> 188[log_2]
	store.8     $8 -> 189[log_2]
	store.8     $8 -> 190[log_2]
	store.8     $8 -> 191[log_2]
	store.8     $8 -> 192[log_2]
	store.8     $8 -> 193[log_2]
	store.8     $8 -> 194[log_2]
	store.8     $8 -> 195[log_2]
	store.8     $8 -> 196[log_2]
	store.8     $8 -> 197[log_2]
	store.8     $8 -> 198[log_2]
	store.8     $8 -> 199[log_2]
	store.8     $8 -> 200[log_2]
	store.8     $8 -> 201[log_2]
	store.8     $8 -> 202[log_2]
	store.8     $8 -> 203[log_2]
	store.8     $8 -> 204[log_2]
	store.8     $8 -> 205[log_2]
	store.8     $8 -> 206[log_2]
	store.8     $8 -> 207[log_2]
	store.8     $8 -> 208[log_2]
	store.8     $8 -> 209[log_2]
	store.8     $8 -> 210[log_2]
	store.8     $8 -> 211[log_2]
	store.8     $8 -> 212[log_2]
	store.8     $8 -> 213[log_2]
	store.8     $8 -> 214[log_2]
	store.8     $8 -> 215[log_2]
	store.8     $8 -> 216[log_2]
	store.8     $8 -> 217[log_2]
	store.8     $8 -> 218[log_2]
	store.8     $8 -> 219[log_2]
	store.8     $8 -> 220[log_2]
	store.8     $8 -> 221[log_2]
	store.8     $8 -> 222[log_2]
	store.8     $8 -> 223[log_2]
	store.8     $8 -> 224[log_2]
	store.8     $8 -> 225[log_2]
	store.8     $8 -> 226[log_2]
	store.8     $8 -> 227[log_2]
	store.8     $8 -> 228[log_2]
	store.8     $8 -> 229[log_2]
	store.8     $8 -> 230[log_2]
	store.8     $8 -> 231[log_2]
	store.8     $8 -> 232[log_2]
	store.8     $8 -> 233[log_2]
	store.8     $8 -> 234[log_2]
	store.8     $8 -> 235[log_2]
	store.8     $8 -> 236[log_2]
	store.8     $8 -> 237[log_2]
	store.8     $8 -> 238[log_2]
	store.8     $8 -> 239[log_2]
	store.8     $8 -> 240[log_2]
	store.8     $8 -> 241[log_2]
	store.8     $8 -> 242[log_2]
	store.8     $8 -> 243[log_2]
	store.8     $8 -> 244[log_2]
	store.8     $8 -> 245[log_2]
	store.8     $8 -> 246[log_2]
	store.8     $8 -> 247[log_2]
	store.8     $8 -> 248[log_2]
	store.8     $8 -> 249[log_2]
	store.8     $8 -> 250[log_2]
	store.8     $8 -> 251[log_2]
	store.8     $8 -> 252[log_2]
	store.8     $8 -> 253[log_2]
	store.8     $8 -> 254[log_2]
	store.8     $8 -> 255[log_2]
	symaddr.64  %r19426 <- <anon symbol:0x62d001541d78>
	store.64    %r19426 -> 0[luaT_typenames]
	symaddr.64  %r19433 <- <anon symbol:0x62d0015423d0>
	store.64    %r19433 -> 8[luaT_typenames]
	symaddr.64  %r19440 <- <anon symbol:0x62d001542a28>
	store.64    %r19440 -> 16[luaT_typenames]
	symaddr.64  %r19447 <- <anon symbol:0x62d001543080>
	store.64    %r19447 -> 24[luaT_typenames]
	symaddr.64  %r19454 <- <anon symbol:0x62d0015436d8>
	store.64    %r19454 -> 32[luaT_typenames]
	symaddr.64  %r19461 <- <anon symbol:0x62d001543d30>
	store.64    %r19461 -> 40[luaT_typenames]
	symaddr.64  %r19468 <- <anon symbol:0x62d001544388>
	store.64    %r19468 -> 48[luaT_typenames]
	symaddr.64  %r19475 <- <anon symbol:0x62d0015449e0>
	store.64    %r19475 -> 56[luaT_typenames]
	symaddr.64  %r19482 <- <anon symbol:0x62d001545038>
	store.64    %r19482 -> 64[luaT_typenames]
	symaddr.64  %r19489 <- <anon symbol:0x62d001545690>
	store.64    %r19489 -> 72[luaT_typenames]
	symaddr.64  %r19496 <- <anon symbol:0x62d001545ce8>
	store.64    %r19496 -> 80[luaT_typenames]
	symaddr.64  %r19503 <- <anon symbol:0x62d001546340>
	store.64    %r19503 -> 0[luaT_eventname]
	symaddr.64  %r19510 <- <anon symbol:0x62d001546998>
	store.64    %r19510 -> 8[luaT_eventname]
	symaddr.64  %r19517 <- <anon symbol:0x62d001546ff0>
	store.64    %r19517 -> 16[luaT_eventname]
	symaddr.64  %r19524 <- <anon symbol:0x62d001547648>
	store.64    %r19524 -> 24[luaT_eventname]
	symaddr.64  %r19531 <- <anon symbol:0x62d001547ca0>
	store.64    %r19531 -> 32[luaT_eventname]
	symaddr.64  %r19538 <- <anon symbol:0x62d0015482f8>
	store.64    %r19538 -> 40[luaT_eventname]
	symaddr.64  %r19545 <- <anon symbol:0x62d001554988>
	store.64    %r19545 -> 48[luaT_eventname]
	symaddr.64  %r19552 <- <anon symbol:0x62d001554fe0>
	store.64    %r19552 -> 56[luaT_eventname]
	symaddr.64  %r19559 <- <anon symbol:0x62d001555638>
	store.64    %r19559 -> 64[luaT_eventname]
	symaddr.64  %r19566 <- <anon symbol:0x62d001555c90>
	store.64    %r19566 -> 72[luaT_eventname]
	symaddr.64  %r19573 <- <anon symbol:0x62d0015562e8>
	store.64    %r19573 -> 80[luaT_eventname]
	symaddr.64  %r19580 <- <anon symbol:0x62d001556940>
	store.64    %r19580 -> 88[luaT_eventname]
	symaddr.64  %r19587 <- <anon symbol:0x62d001556f98>
	store.64    %r19587 -> 96[luaT_eventname]
	symaddr.64  %r19594 <- <anon symbol:0x62d0015575f0>
	store.64    %r19594 -> 104[luaT_eventname]
	symaddr.64  %r19601 <- <anon symbol:0x62d001557c48>
	store.64    %r19601 -> 112[luaT_eventname]
	symaddr.64  %r19608 <- <anon symbol:0x62d0015582a0>
	store.64    %r19608 -> 120[luaT_eventname]
	symaddr.64  %r19615 <- <anon symbol:0x62d0015588f8>
	store.64    %r19615 -> 128[luaT_eventname]
	store.64    $0 -> 32[dummynode_]
	store.32    $0 -> 24[dummynode_]
	store.64    $0 -> 16[dummynode_]
	store.64    $0 -> 0[dummynode_]
	store.32    $0 -> 8[dummynode_]
	store.8     $96 -> 0[luaP_opmodes]
	store.8     $113 -> 1[luaP_opmodes]
	store.8     $84 -> 2[luaP_opmodes]
	store.8     $96 -> 3[luaP_opmodes]
	store.8     $80 -> 4[luaP_opmodes]
	store.8     $113 -> 5[luaP_opmodes]
	store.8     $108 -> 6[luaP_opmodes]
	store.8     $49 -> 7[luaP_opmodes]
	store.8     $16 -> 8[luaP_opmodes]
	store.8     $60 -> 9[luaP_opmodes]
	store.8     $84 -> 10[luaP_opmodes]
	store.8     $108 -> 11[luaP_opmodes]
	store.8     $124 -> 12[luaP_opmodes]
	store.8     $124 -> 13[luaP_opmodes]
	store.8     $124 -> 14[luaP_opmodes]
	store.8     $124 -> 15[luaP_opmodes]
	store.8     $124 -> 16[luaP_opmodes]
	store.8     $124 -> 17[luaP_opmodes]
	store.8     $96 -> 18[luaP_opmodes]
	store.8     $96 -> 19[luaP_opmodes]
	store.8     $96 -> 20[luaP_opmodes]
	store.8     $104 -> 21[luaP_opmodes]
	store.8     $34 -> 22[luaP_opmodes]
	store.8     $188 -> 23[luaP_opmodes]
	store.8     $188 -> 24[luaP_opmodes]
	store.8     $188 -> 25[luaP_opmodes]
	store.8     $228 -> 26[luaP_opmodes]
	store.8     $228 -> 27[luaP_opmodes]
	store.8     $84 -> 28[luaP_opmodes]
	store.8     $84 -> 29[luaP_opmodes]
	store.8     $16 -> 30[luaP_opmodes]
	store.8     $98 -> 31[luaP_opmodes]
	store.8     $98 -> 32[luaP_opmodes]
	store.8     $132 -> 33[luaP_opmodes]
	store.8     $20 -> 34[luaP_opmodes]
	store.8     $0 -> 35[luaP_opmodes]
	store.8     $81 -> 36[luaP_opmodes]
	store.8     $80 -> 37[luaP_opmodes]
	symaddr.64  %r19812 <- <anon symbol:0x62d001562470>
	store.64    %r19812 -> 0[luaX_tokens]
	symaddr.64  %r19819 <- <anon symbol:0x62d001562ac8>
	store.64    %r19819 -> 8[luaX_tokens]
	symaddr.64  %r19826 <- <anon symbol:0x62d001563120>
	store.64    %r19826 -> 16[luaX_tokens]
	symaddr.64  %r19833 <- <anon symbol:0x62d001563778>
	store.64    %r19833 -> 24[luaX_tokens]
	symaddr.64  %r19840 <- <anon symbol:0x62d001563dd0>
	store.64    %r19840 -> 32[luaX_tokens]
	symaddr.64  %r19847 <- <anon symbol:0x62d001564428>
	store.64    %r19847 -> 40[luaX_tokens]
	symaddr.64  %r19854 <- <anon symbol:0x62d001564a80>
	store.64    %r19854 -> 48[luaX_tokens]
	symaddr.64  %r19861 <- <anon symbol:0x62d0015650d8>
	store.64    %r19861 -> 56[luaX_tokens]
	symaddr.64  %r19868 <- <anon symbol:0x62d001565730>
	store.64    %r19868 -> 64[luaX_tokens]
	symaddr.64  %r19875 <- <anon symbol:0x62d001565d88>
	store.64    %r19875 -> 72[luaX_tokens]
	symaddr.64  %r19882 <- <anon symbol:0x62d00157c418>
	store.64    %r19882 -> 80[luaX_tokens]
	symaddr.64  %r19889 <- <anon symbol:0x62d00157ca70>
	store.64    %r19889 -> 88[luaX_tokens]
	symaddr.64  %r19896 <- <anon symbol:0x62d00157d0c8>
	store.64    %r19896 -> 96[luaX_tokens]
	symaddr.64  %r19903 <- <anon symbol:0x62d00157d720>
	store.64    %r19903 -> 104[luaX_tokens]
	symaddr.64  %r19910 <- <anon symbol:0x62d00157dd78>
	store.64    %r19910 -> 112[luaX_tokens]
	symaddr.64  %r19917 <- <anon symbol:0x62d00157e3d0>
	store.64    %r19917 -> 120[luaX_tokens]
	symaddr.64  %r19924 <- <anon symbol:0x62d00157ea28>
	store.64    %r19924 -> 128[luaX_tokens]
	symaddr.64  %r19931 <- <anon symbol:0x62d00157f080>
	store.64    %r19931 -> 136[luaX_tokens]
	symaddr.64  %r19938 <- <anon symbol:0x62d00157f6d8>
	store.64    %r19938 -> 144[luaX_tokens]
	symaddr.64  %r19945 <- <anon symbol:0x62d00157fd30>
	store.64    %r19945 -> 152[luaX_tokens]
	symaddr.64  %r19952 <- <anon symbol:0x62d001580388>
	store.64    %r19952 -> 160[luaX_tokens]
	symaddr.64  %r19959 <- <anon symbol:0x62d0015809e0>
	store.64    %r19959 -> 168[luaX_tokens]
	symaddr.64  %r19966 <- <anon symbol:0x62d001581038>
	store.64    %r19966 -> 176[luaX_tokens]
	symaddr.64  %r19973 <- <anon symbol:0x62d001581690>
	store.64    %r19973 -> 184[luaX_tokens]
	symaddr.64  %r19980 <- <anon symbol:0x62d001581ce8>
	store.64    %r19980 -> 192[luaX_tokens]
	symaddr.64  %r19987 <- <anon symbol:0x62d001582340>
	store.64    %r19987 -> 200[luaX_tokens]
	symaddr.64  %r19994 <- <anon symbol:0x62d001582998>
	store.64    %r19994 -> 208[luaX_tokens]
	symaddr.64  %r20001 <- <anon symbol:0x62d001582ff0>
	store.64    %r20001 -> 216[luaX_tokens]
	symaddr.64  %r20008 <- <anon symbol:0x62d001583648>
	store.64    %r20008 -> 224[luaX_tokens]
	symaddr.64  %r20015 <- <anon symbol:0x62d001583ca0>
	store.64    %r20015 -> 232[luaX_tokens]
	symaddr.64  %r20022 <- <anon symbol:0x62d0015842f8>
	store.64    %r20022 -> 240[luaX_tokens]
	store.64    $0 -> 248[luaX_tokens]
	store.8     $6 -> 0[priority]
	store.8     $6 -> 1[priority]
	store.8     $6 -> 2[priority]
	store.8     $6 -> 3[priority]
	store.8     $7 -> 4[priority]
	store.8     $7 -> 5[priority]
	store.8     $7 -> 6[priority]
	store.8     $7 -> 7[priority]
	store.8     $7 -> 8[priority]
	store.8     $7 -> 9[priority]
	store.8     $10 -> 10[priority]
	store.8     $9 -> 11[priority]
	store.8     $5 -> 12[priority]
	store.8     $4 -> 13[priority]
	store.8     $3 -> 14[priority]
	store.8     $3 -> 15[priority]
	store.8     $3 -> 16[priority]
	store.8     $3 -> 17[priority]
	store.8     $3 -> 18[priority]
	store.8     $3 -> 19[priority]
	store.8     $3 -> 20[priority]
	store.8     $3 -> 21[priority]
	store.8     $3 -> 22[priority]
	store.8     $3 -> 23[priority]
	store.8     $3 -> 24[priority]
	store.8     $3 -> 25[priority]
	store.8     $2 -> 26[priority]
	store.8     $2 -> 27[priority]
	store.8     $1 -> 28[priority]
	store.8     $1 -> 29[priority]
	symaddr.64  %r20200 <- <anon symbol:0x62d001577dd0>
	store.64    %r20200 -> 0[base_funcs]
	symaddr.64  %r20206 <- luaB_assert
	store.64    %r20206 -> 8[base_funcs]
	symaddr.64  %r20214 <- <anon symbol:0x62d0015788b0>
	store.64    %r20214 -> 16[base_funcs]
	symaddr.64  %r20220 <- luaB_error
	store.64    %r20220 -> 24[base_funcs]
	symaddr.64  %r20228 <- <anon symbol:0x62d001579390>
	store.64    %r20228 -> 32[base_funcs]
	symaddr.64  %r20234 <- luaB_loadfile
	store.64    %r20234 -> 40[base_funcs]
	symaddr.64  %r20242 <- <anon symbol:0x62d001579e70>
	store.64    %r20242 -> 48[base_funcs]
	symaddr.64  %r20248 <- luaB_loadstring
	store.64    %r20248 -> 56[base_funcs]
	symaddr.64  %r20256 <- <anon symbol:0x62d00159a988>
	store.64    %r20256 -> 64[base_funcs]
	symaddr.64  %r20262 <- luaB_next
	store.64    %r20262 -> 72[base_funcs]
	symaddr.64  %r20270 <- <anon symbol:0x62d00159b468>
	store.64    %r20270 -> 80[base_funcs]
	symaddr.64  %r20276 <- luaB_pcall
	store.64    %r20276 -> 88[base_funcs]
	symaddr.64  %r20284 <- <anon symbol:0x62d00159bf48>
	store.64    %r20284 -> 96[base_funcs]
	symaddr.64  %r20290 <- luaB_rawget
	store.64    %r20290 -> 104[base_funcs]
	symaddr.64  %r20298 <- <anon symbol:0x62d00159ca28>
	store.64    %r20298 -> 112[base_funcs]
	symaddr.64  %r20304 <- luaB_setfenv
	store.64    %r20304 -> 120[base_funcs]
	symaddr.64  %r20312 <- <anon symbol:0x62d00159d508>
	store.64    %r20312 -> 128[base_funcs]
	symaddr.64  %r20318 <- luaB_setmetatable
	store.64    %r20318 -> 136[base_funcs]
	symaddr.64  %r20326 <- <anon symbol:0x62d00159dfe8>
	store.64    %r20326 -> 144[base_funcs]
	symaddr.64  %r20332 <- luaB_tonumber
	store.64    %r20332 -> 152[base_funcs]
	symaddr.64  %r20340 <- <anon symbol:0x62d00159eac8>
	store.64    %r20340 -> 160[base_funcs]
	symaddr.64  %r20346 <- luaB_type
	store.64    %r20346 -> 168[base_funcs]
	symaddr.64  %r20354 <- <anon symbol:0x62d00159f5a8>
	store.64    %r20354 -> 176[base_funcs]
	symaddr.64  %r20360 <- luaB_unpack
	store.64    %r20360 -> 184[base_funcs]
	store.64    $0 -> 192[base_funcs]
	store.64    $0 -> 200[base_funcs]
	symaddr.64  %r20378 <- <anon symbol:0x62d0015a05f8>
	store.64    %r20378 -> 0[tab_funcs]
	symaddr.64  %r20384 <- tconcat
	store.64    %r20384 -> 8[tab_funcs]
	symaddr.64  %r20392 <- <anon symbol:0x62d0015a10d8>
	store.64    %r20392 -> 16[tab_funcs]
	symaddr.64  %r20398 <- tinsert
	store.64    %r20398 -> 24[tab_funcs]
	symaddr.64  %r20406 <- <anon symbol:0x62d0015a1bb8>
	store.64    %r20406 -> 32[tab_funcs]
	symaddr.64  %r20412 <- tremove
	store.64    %r20412 -> 40[tab_funcs]
	symaddr.64  %r20420 <- <anon symbol:0x62d0015906d0>
	store.64    %r20420 -> 48[tab_funcs]
	symaddr.64  %r20426 <- sort
	store.64    %r20426 -> 56[tab_funcs]
	store.64    $0 -> 64[tab_funcs]
	store.64    $0 -> 72[tab_funcs]
	symaddr.64  %r20444 <- <anon symbol:0x62d001591720>
	store.64    %r20444 -> 0[fnames]
	symaddr.64  %r20445 <- <anon symbol:0x62d001591d78>
	store.64    %r20445 -> 8[fnames]
	symaddr.64  %r20446 <- <anon symbol:0x62d0015923d0>
	store.64    %r20446 -> 0[iolib]
	symaddr.64  %r20452 <- io_close
	store.64    %r20452 -> 8[iolib]
	symaddr.64  %r20460 <- <anon symbol:0x62d001592eb0>
	store.64    %r20460 -> 16[iolib]
	symaddr.64  %r20466 <- io_flush
	store.64    %r20466 -> 24[iolib]
	symaddr.64  %r20474 <- <anon symbol:0x62d001593990>
	store.64    %r20474 -> 32[iolib]
	symaddr.64  %r20480 <- io_input
	store.64    %r20480 -> 40[iolib]
	symaddr.64  %r20488 <- <anon symbol:0x62d001594470>
	store.64    %r20488 -> 48[iolib]
	symaddr.64  %r20494 <- io_lines
	store.64    %r20494 -> 56[iolib]
	symaddr.64  %r20502 <- <anon symbol:0x62d001594f50>
	store.64    %r20502 -> 64[iolib]
	symaddr.64  %r20508 <- io_open
	store.64    %r20508 -> 72[iolib]
	symaddr.64  %r20516 <- <anon symbol:0x62d001595a30>
	store.64    %r20516 -> 80[iolib]
	symaddr.64  %r20522 <- io_output
	store.64    %r20522 -> 88[iolib]
	symaddr.64  %r20530 <- <anon symbol:0x62d001596510>
	store.64    %r20530 -> 96[iolib]
	symaddr.64  %r20536 <- io_read
	store.64    %r20536 -> 104[iolib]
	symaddr.64  %r20544 <- <anon symbol:0x62d001596ff0>
	store.64    %r20544 -> 112[iolib]
	symaddr.64  %r20550 <- io_type
	store.64    %r20550 -> 120[iolib]
	symaddr.64  %r20558 <- <anon symbol:0x62d001597ad0>
	store.64    %r20558 -> 128[iolib]
	symaddr.64  %r20564 <- io_write
	store.64    %r20564 -> 136[iolib]
	store.64    $0 -> 144[iolib]
	store.64    $0 -> 152[iolib]
	symaddr.64  %r20582 <- <anon symbol:0x62d0015b8b58>
	store.64    %r20582 -> 0[flib]
	store.64    %r20452 -> 8[flib]
	symaddr.64  %r20596 <- <anon symbol:0x62d0015b9638>
	store.64    %r20596 -> 16[flib]
	symaddr.64  %r20602 <- f_flush
	store.64    %r20602 -> 24[flib]
	symaddr.64  %r20610 <- <anon symbol:0x62d0015ba118>
	store.64    %r20610 -> 32[flib]
	symaddr.64  %r20616 <- f_lines
	store.64    %r20616 -> 40[flib]
	symaddr.64  %r20624 <- <anon symbol:0x62d0015babf8>
	store.64    %r20624 -> 48[flib]
	symaddr.64  %r20630 <- f_read
	store.64    %r20630 -> 56[flib]
	symaddr.64  %r20638 <- <anon symbol:0x62d0015bb6d8>
	store.64    %r20638 -> 64[flib]
	symaddr.64  %r20644 <- f_write
	store.64    %r20644 -> 72[flib]
	symaddr.64  %r20652 <- <anon symbol:0x62d0015bc1b8>
	store.64    %r20652 -> 80[flib]
	symaddr.64  %r20658 <- io_gc
	store.64    %r20658 -> 88[flib]
	store.64    $0 -> 96[flib]
	store.64    $0 -> 104[flib]
	symaddr.64  %r20676 <- <anon symbol:0x62d0015bd208>
	store.64    %r20676 -> 0[syslib]
	symaddr.64  %r20682 <- os_exit
	store.64    %r20682 -> 8[syslib]
	symaddr.64  %r20690 <- <anon symbol:0x62d0015bdce8>
	store.64    %r20690 -> 16[syslib]
	symaddr.64  %r20696 <- os_remove
	store.64    %r20696 -> 24[syslib]
	store.64    $0 -> 32[syslib]
	store.64    $0 -> 40[syslib]
	symaddr.64  %r20714 <- <anon symbol:0x62d0015bed38>
	store.64    %r20714 -> 0[strlib]
	symaddr.64  %r20720 <- str_byte
	store.64    %r20720 -> 8[strlib]
	symaddr.64  %r20728 <- <anon symbol:0x62d0015bf818>
	store.64    %r20728 -> 16[strlib]
	symaddr.64  %r20734 <- str_char
	store.64    %r20734 -> 24[strlib]
	symaddr.64  %r20742 <- <anon symbol:0x62d0015c02f8>
	store.64    %r20742 -> 32[strlib]
	symaddr.64  %r20748 <- str_find
	store.64    %r20748 -> 40[strlib]
	symaddr.64  %r20756 <- <anon symbol:0x62d0015aee10>
	store.64    %r20756 -> 48[strlib]
	symaddr.64  %r20762 <- str_format
	store.64    %r20762 -> 56[strlib]
	symaddr.64  %r20770 <- <anon symbol:0x62d0015af8f0>
	store.64    %r20770 -> 64[strlib]
	symaddr.64  %r20776 <- gmatch
	store.64    %r20776 -> 72[strlib]
	symaddr.64  %r20784 <- <anon symbol:0x62d0015b03d0>
	store.64    %r20784 -> 80[strlib]
	symaddr.64  %r20790 <- str_gsub
	store.64    %r20790 -> 88[strlib]
	symaddr.64  %r20798 <- <anon symbol:0x62d0015b0eb0>
	store.64    %r20798 -> 96[strlib]
	symaddr.64  %r20804 <- str_lower
	store.64    %r20804 -> 104[strlib]
	symaddr.64  %r20812 <- <anon symbol:0x62d0015b1990>
	store.64    %r20812 -> 112[strlib]
	symaddr.64  %r20818 <- str_match
	store.64    %r20818 -> 120[strlib]
	symaddr.64  %r20826 <- <anon symbol:0x62d0015b2470>
	store.64    %r20826 -> 128[strlib]
	symaddr.64  %r20832 <- str_rep
	store.64    %r20832 -> 136[strlib]
	symaddr.64  %r20840 <- <anon symbol:0x62d0015b2f50>
	store.64    %r20840 -> 144[strlib]
	symaddr.64  %r20846 <- str_sub
	store.64    %r20846 -> 152[strlib]
	symaddr.64  %r20854 <- <anon symbol:0x62d0015b3a30>
	store.64    %r20854 -> 160[strlib]
	symaddr.64  %r20860 <- str_upper
	store.64    %r20860 -> 168[strlib]
	store.64    $0 -> 176[strlib]
	store.64    $0 -> 184[strlib]
	symaddr.64  %r20878 <- <anon symbol:0x62d0015b4a80>
	store.64    %r20878 -> 0[lualibs]
	symaddr.64  %r20884 <- luaopen_base
	store.64    %r20884 -> 8[lualibs]
	symaddr.64  %r20892 <- <anon symbol:0x62d0015b5560>
	store.64    %r20892 -> 16[lualibs]
	symaddr.64  %r20898 <- luaopen_table
	store.64    %r20898 -> 24[lualibs]
	symaddr.64  %r20906 <- <anon symbol:0x62d0015b6040>
	store.64    %r20906 -> 32[lualibs]
	symaddr.64  %r20912 <- luaopen_io
	store.64    %r20912 -> 40[lualibs]
	symaddr.64  %r20920 <- <anon symbol:0x62d0015c2b58>
	store.64    %r20920 -> 48[lualibs]
	symaddr.64  %r20926 <- luaopen_os
	store.64    %r20926 -> 56[lualibs]
	symaddr.64  %r20934 <- <anon symbol:0x62d0015c3638>
	store.64    %r20934 -> 64[lualibs]
	symaddr.64  %r20940 <- luaopen_string
	store.64    %r20940 -> 72[lualibs]
	store.64    $0 -> 80[lualibs]
	store.64    $0 -> 88[lualibs]
	symaddr.64  %r20958 <- <anon symbol:0x62d0015c4688>
	store.64    %r20958 -> 0[bitlib]
	symaddr.64  %r20964 <- tobit
	store.64    %r20964 -> 8[bitlib]
	symaddr.64  %r20972 <- <anon symbol:0x62d0015c5168>
	store.64    %r20972 -> 16[bitlib]
	symaddr.64  %r20978 <- bnot
	store.64    %r20978 -> 24[bitlib]
	symaddr.64  %r20986 <- <anon symbol:0x62d0015c5c48>
	store.64    %r20986 -> 32[bitlib]
	symaddr.64  %r20992 <- band
	store.64    %r20992 -> 40[bitlib]
	symaddr.64  %r21000 <- <anon symbol:0x62d0015c6728>
	store.64    %r21000 -> 48[bitlib]
	symaddr.64  %r21006 <- bor
	store.64    %r21006 -> 56[bitlib]
	symaddr.64  %r21014 <- <anon symbol:0x62d0015c7208>
	store.64    %r21014 -> 64[bitlib]
	symaddr.64  %r21020 <- bxor
	store.64    %r21020 -> 72[bitlib]
	symaddr.64  %r21028 <- <anon symbol:0x62d0015c7ce8>
	store.64    %r21028 -> 80[bitlib]
	symaddr.64  %r21034 <- lshift
	store.64    %r21034 -> 88[bitlib]
	symaddr.64  %r21042 <- <anon symbol:0x62d0015c87c8>
	store.64    %r21042 -> 96[bitlib]
	symaddr.64  %r21048 <- rshift
	store.64    %r21048 -> 104[bitlib]
	symaddr.64  %r21056 <- <anon symbol:0x62d0015c92a8>
	store.64    %r21056 -> 112[bitlib]
	symaddr.64  %r21062 <- arshift
	store.64    %r21062 -> 120[bitlib]
	symaddr.64  %r21070 <- <anon symbol:0x62d0015c9d88>
	store.64    %r21070 -> 128[bitlib]
	symaddr.64  %r21076 <- rol
	store.64    %r21076 -> 136[bitlib]
	symaddr.64  %r21084 <- <anon symbol:0x62d0015d68a0>
	store.64    %r21084 -> 144[bitlib]
	symaddr.64  %r21090 <- ror
	store.64    %r21090 -> 152[bitlib]
	symaddr.64  %r21098 <- <anon symbol:0x62d0015d7380>
	store.64    %r21098 -> 160[bitlib]
	symaddr.64  %r21104 <- bswap
	store.64    %r21104 -> 168[bitlib]
	symaddr.64  %r21112 <- <anon symbol:0x62d0015d7e60>
	store.64    %r21112 -> 176[bitlib]
	symaddr.64  %r21118 <- tohex
	store.64    %r21118 -> 184[bitlib]
	store.64    $0 -> 192[bitlib]
	store.64    $0 -> 200[bitlib]
	ret


main:
.L4317:
	<entry-point>
	call        init_globals
	call.64     %r21136 <- luaL_newstate
	call        luaL_openlibs, %r21136
	symaddr.64  %r21139 <- <anon symbol:0x62d0015d8bf8>
	symaddr.64  %r21140 <- bitlib
	call        luaL_register, %r21136, %r21139, %r21140
	setlt.32    %r21142 <- %arg1, $2
	br          %r21142, .L4318, .L4319

.L4318:
	phisrc.32   %phi3120(return) <- $8
	br          .L4320

.L4319:
	call        lua_createtable, %r21136, $0, $1
	load.64     %r21147 <- 8[%arg2]
	call        lua_pushstring, %r21136, %r21147
	call        lua_rawseti, %r21136, $0xfffffffe, $0
	symaddr.64  %r21150 <- <anon symbol:0x62d0015d9250>
	call        lua_setfield, %r21136, $0xffffd8ee, %r21150
	load.64     %r21153 <- 8[%arg2]
	call.32     %r21154 <- luaL_loadfile, %r21136, %r21153
	br          %r21154, .L4323, .L4322

.L4322:
	phisrc.32   %phi3125(i) <- $2
	br          .L4327

.L4327:
	phi.32      %r21155(i) <- %phi3125(i), %phi3126(i)
	setlt.32    %r21157 <- %r21155(i), %arg1
	br          %r21157, .L4324, .L4326

.L4324:
	scast.64    %r21161 <- (32) %r21155(i)
	muls.64     %r21162 <- %r21161, $8
	add.64      %r21163 <- %arg2, %r21162
	load.64     %r21164 <- 0[%r21163]
	call        lua_pushstring, %r21136, %r21164
	add.32      %r21166 <- %r21155(i), $1
	phisrc.32   %phi3126(i) <- %r21166
	br          .L4327

.L4326:
	add.32      %r21169 <- %arg1, $-2
	call.32     %r21170 <- lua_pcall, %r21136, %r21169, $0, $0
	br          %r21170, .L4323, .L4329

.L4323:
	load.64     %r21171 <- 0[stderr]
	symaddr.64  %r21172 <- <anon symbol:0x62d0015d97c0>
	call.64     %r21174 <- lua_tolstring, %r21136, $0xffffffff, $0
	call.32     %r21175 <- fprintf, %r21171, %r21172, %r21174
	phisrc.32   %phi3121(return) <- $1
	br          .L4320

.L4329:
	call        lua_close, %r21136
	phisrc.32   %phi3122(return) <- $0
	br          .L4320

.L4320:
	phi.32      %r21143 <- %phi3120(return), %phi3121(return), %phi3122(return)
	ret.32      %r21143


